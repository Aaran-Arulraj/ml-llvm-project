; ModuleID = 'regexec.c'
source_filename = "regexec.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.cop = type { %struct.op*, %struct.op*, %struct.op* ()*, i64, i16, i8, i8, i32, %struct.hv*, %struct.gv*, i32, i32, i64*, %struct.refcounted_he* }
%struct.op = type { %struct.op*, %struct.op*, %struct.op* ()*, i64, i16, i8, i8 }
%struct.hv = type { %struct.xpvhv*, i32, i32, %union.anon.5 }
%struct.xpvhv = type { %struct.hv*, %union._xmgu, i64, i64 }
%union._xmgu = type { %struct.magic* }
%struct.magic = type { %struct.magic*, %struct.mgvtbl*, i16, i8, i8, i64, %struct.sv*, i8* }
%struct.mgvtbl = type { i32 (%struct.sv*, %struct.magic*)*, i32 (%struct.sv*, %struct.magic*)*, i32 (%struct.sv*, %struct.magic*)*, i32 (%struct.sv*, %struct.magic*)*, i32 (%struct.sv*, %struct.magic*)*, i32 (%struct.sv*, %struct.magic*, %struct.sv*, i8*, i32)*, i32 (%struct.magic*, %struct.clone_params*)*, i32 (%struct.sv*, %struct.magic*)* }
%struct.clone_params = type { %struct.av*, i64, %struct.interpreter*, %struct.interpreter*, %struct.av* }
%struct.interpreter = type { i8 }
%struct.av = type { %struct.xpvav*, i32, i32, %union.anon.3 }
%struct.xpvav = type { %struct.hv*, %union._xmgu, i64, i64, %struct.sv** }
%union.anon.3 = type { i8* }
%struct.sv = type { i8*, i32, i32, %union.anon }
%union.anon = type { i8* }
%union.anon.5 = type { i8* }
%struct.gv = type { %struct.xpvgv*, i32, i32, %union.anon.4 }
%struct.xpvgv = type { %struct.hv*, %union._xmgu, i64, %union.anon.8, %union._xivu, %union._xnvu }
%union.anon.8 = type { i64 }
%union._xivu = type { i64 }
%union._xnvu = type { double }
%union.anon.4 = type { i8* }
%struct.refcounted_he = type { %struct.refcounted_he*, %struct.hek*, %union.anon.34, i32, [1 x i8] }
%struct.hek = type { i32, i32, [1 x i8] }
%union.anon.34 = type { i64 }
%struct.regmatch_slab = type { [33 x %struct.regmatch_state], %struct.regmatch_slab*, %struct.regmatch_slab* }
%struct.regmatch_state = type { i32, i8*, %union.anon.19 }
%union.anon.19 = type { %struct.anon.31 }
%struct.anon.31 = type { i32, i32, i32, i32, i32, i32, i8*, i8*, i32, i32, i32, %struct.regnode*, %struct.regnode*, [14 x i8], [14 x i8] }
%struct.regnode = type { i8, i8, i16 }
%struct.pmop = type { %struct.op*, %struct.op*, %struct.op* ()*, i64, i16, i8, i8, %struct.op*, %struct.op*, %struct.p5rx*, i32, %union.anon.17, %union.anon.18, %struct.op* }
%struct.p5rx = type { %struct.regexp*, i32, i32, %union.anon.7 }
%struct.regexp = type { %struct.hv*, %union._xmgu, i64, %union.anon.6, %struct.regexp_engine*, %struct.p5rx*, %struct.hv*, i32, i64, i64, i64, %struct.reg_substr_data*, i32, i32, i8*, i32, i32, %struct.regexp_paren_pair*, i8*, %struct.sv*, i64, i64, i64, i64, i16, %struct.cv* }
%union.anon.6 = type { i64 }
%struct.regexp_engine = type { %struct.p5rx* (%struct.sv*, i32)*, i32 (%struct.p5rx*, i8*, i8*, i8*, i64, %struct.sv*, i8*, i32)*, i8* (%struct.p5rx*, %struct.sv*, i8*, i8*, i8*, i32, %struct.re_scream_pos_data_s*)*, %struct.sv* (%struct.p5rx*)*, void (%struct.p5rx*)*, void (%struct.p5rx*, i32, %struct.sv*)*, void (%struct.p5rx*, i32, %struct.sv*)*, i32 (%struct.p5rx*, %struct.sv*, i32)*, %struct.sv* (%struct.p5rx*, %struct.sv*, %struct.sv*, i32)*, %struct.sv* (%struct.p5rx*, %struct.sv*, i32)*, %struct.sv* (%struct.p5rx*)*, %struct.p5rx* (%struct.sv**, i32, %struct.op*, %struct.regexp_engine*, %struct.p5rx*, i8*, i32, i32)* }
%struct.re_scream_pos_data_s = type { i8**, i64* }
%struct.reg_substr_data = type { i8, [3 x %struct.reg_substr_datum] }
%struct.reg_substr_datum = type { i64, i64, %struct.sv*, %struct.sv*, i64 }
%struct.regexp_paren_pair = type { i64, i64, i64 }
%struct.cv = type { %struct.xpvcv*, i32, i32, %union.anon.2 }
%struct.xpvcv = type { %struct.hv*, %union._xmgu, i64, %union.anon.9, %struct.hv*, %union.anon.10, %union.anon.11, %union.anon.12, i8*, %union.anon.13, %struct.cv*, i32, i32, i32 }
%union.anon.9 = type { i64 }
%union.anon.10 = type { %struct.op* }
%union.anon.11 = type { %struct.op* }
%union.anon.12 = type { %struct.gv* }
%union.anon.13 = type { %struct.padlist* }
%struct.padlist = type { i64, %struct.av**, i32, i32 }
%union.anon.2 = type { i8* }
%union.anon.7 = type { i8* }
%union.anon.17 = type { %struct.op* }
%union.anon.18 = type { %struct.op* }
%struct.stackinfo = type { %struct.av*, %struct.context*, %struct.stackinfo*, %struct.stackinfo*, i32, i32, i32, i32 }
%struct.context = type { %union.anon.37 }
%union.anon.37 = type { %struct.subst }
%struct.subst = type { i8, i8, i16, i32, i64, i64, i8*, %struct.sv*, %struct.sv*, i8*, i8*, i8*, i8*, %struct.p5rx* }
%struct.jmpenv = type { [1 x %struct.__jmp_buf_tag], %struct.jmpenv*, i32, i8 }
%struct.__jmp_buf_tag = type { [8 x i64], i32, %struct.__sigset_t }
%struct.__sigset_t = type { [16 x i64] }
%union.any = type { i8* }
%struct.regexp_internal = type { i32, %union.anon.16, %struct.regnode*, %struct.reg_data*, %struct.reg_code_block*, i32, [1 x %struct.regnode] }
%union.anon.16 = type { i32* }
%struct.reg_data = type { i32, i8*, [1 x i8*] }
%struct.reg_code_block = type { i64, i64, %struct.op*, %struct.p5rx* }
%struct.regmatch_info = type { %struct.p5rx*, i8*, i8*, i8*, %struct.sv*, i8*, i8*, %struct.regmatch_info_aux*, %struct.regmatch_info_aux_eval*, i32, i32, i64, i8, i8, i8, i8 }
%struct.regmatch_info_aux = type { %struct.regmatch_info_aux_eval*, %struct.regmatch_state*, %struct.regmatch_slab*, i8* }
%struct.regmatch_info_aux_eval = type { %struct.regexp*, %struct.pmop*, %struct.sv*, i8*, i64, i64, i64, %struct.magic*, i64, i8 }
%struct.xpv = type { %struct.hv*, %union._xmgu, i64, %union.anon.32 }
%union.anon.32 = type { i64 }
%struct.regnode_string = type { i8, i8, i16, [1 x i8] }
%struct.xpviv = type { %struct.hv*, %union._xmgu, i64, %union.anon.33, %union._xivu }
%union.anon.33 = type { i64 }
%struct._reg_ac_data = type { i32, i32, i32*, %struct._reg_trie_state* }
%struct._reg_trie_state = type { i16, %union.anon.35 }
%union.anon.35 = type { %struct._reg_trie_trans_list_elem* }
%struct._reg_trie_trans_list_elem = type { i16, i32 }
%struct._reg_trie_data = type { i32, i32, i16*, %struct._reg_trie_state*, %struct._reg_trie_trans*, i8*, i16*, %struct.reg_trie_wordinfo*, i16, i32, i64, i64, i32, i32, i32 }
%struct._reg_trie_trans = type { i32, i32 }
%struct.reg_trie_wordinfo = type { i16, i32, i32 }
%struct.regnode_charclass = type { i8, i8, i16, i32, [32 x i8] }
%struct.regnode_1 = type { i8, i8, i16, i32 }
%struct.xpvmg = type { %struct.hv*, %union._xmgu, i64, %union.anon.36, %union._xivu, %union._xnvu }
%union.anon.36 = type { i64 }
%struct.gp = type { %struct.sv*, %struct.io*, %struct.cv*, i32, i32, %struct.hv*, %struct.av*, %struct.cv*, %struct.gv*, i32, %struct.hek* }
%struct.io = type { %struct.xpvio*, i32, i32, %union.anon.1 }
%struct.xpvio = type { %struct.hv*, %union._xmgu, i64, %union.anon.14, %union._xivu, %struct._PerlIO**, %union.anon.15, i64, i64, i64, i8*, %struct.gv*, i8*, %struct.gv*, i8*, %struct.gv*, i8, i8 }
%union.anon.14 = type { i64 }
%struct._PerlIO = type opaque
%union.anon.15 = type { %struct.__dirstream* }
%struct.__dirstream = type opaque
%union.anon.1 = type { i8* }
%struct.regnode_charclass_class = type { i8, i8, i16, i32, [32 x i8], i32 }
%struct.anon.27 = type { i32 }
%struct.anon.23 = type { %struct.regmatch_state*, i32, i32, i32, i32, i8, i16*, %struct.regnode*, i8*, i32, i16, i16 }
%struct.anon.24 = type { %struct.regmatch_state*, %struct.regmatch_state*, %struct.regmatch_state*, %struct.p5rx*, i32, i32, i32, %struct.regnode* }
%struct.regnode_2L = type { i8, i8, i16, i32, i32 }
%struct.block = type { i8, i8, i16, i32, %struct.cop*, i32, i32, %struct.pmop*, %union.anon.38 }
%union.anon.38 = type { %struct.block_sub }
%struct.block_sub = type { %struct.op*, %struct.cv*, %struct.av*, %struct.av*, i32, %struct.av* }
%struct.unop = type { %struct.op*, %struct.op*, %struct.op* ()*, i64, i16, i8, i8, %struct.op* }
%struct.xpvnv = type { %struct.hv*, %union._xmgu, i64, %union.anon.44, %union._xivu, %union._xnvu }
%union.anon.44 = type { i64 }
%struct.anon.28 = type { %struct.regmatch_state*, %struct.regmatch_state*, %struct.regnode*, %struct.regnode*, i32, i8, i32, i32, i8* }
%struct.regnode_2 = type { i8, i8, i16, i16, i16 }
%struct.anon.29 = type { %struct.regmatch_state*, %struct.regmatch_state*, i32, i32, i8*, i32, i32 }
%struct.anon.22 = type { %struct.regmatch_state*, i32, i32, i32, %struct.regnode* }
%struct.anon.26 = type { %struct.regmatch_state*, %struct.regmatch_state*, %struct.sv*, i8* }
%struct.anon.30 = type { %struct.regmatch_state*, i32, i32, i32, i32, i32, i32, i32, i8, %struct.regnode*, %struct.regnode*, %struct.regnode*, [14 x i8], [14 x i8] }
%struct.anon.25 = type { %struct.regmatch_state*, i32, i32, %struct.regnode* }
%struct.anon.20 = type { %struct.regmatch_state* }
%struct.xpvuv = type { %struct.hv*, %union._xmgu, i64, %union.anon.45, %union._xivu }
%union.anon.45 = type { i64 }

@PL_regkind = external dso_local constant [0 x i8], align 1
@PL_curcop = external dso_local global %struct.cop*, align 8
@.str = private unnamed_addr constant [22 x i8] c"NULL regexp parameter\00", align 1
@PL_savestack_ix = external dso_local global i32, align 4
@.str.1 = private unnamed_addr constant [25 x i8] c"corrupted regexp program\00", align 1
@PL_regmatch_slab = external dso_local global %struct.regmatch_slab*, align 8
@PL_regmatch_state = external dso_local global %struct.regmatch_state*, align 8
@PL_curpm = external dso_local global %struct.pmop*, align 8
@PL_utf8skip = external dso_local constant [0 x i8], align 1
@PL_fold_latin1 = external dso_local constant [0 x i8], align 1
@PL_fold = external dso_local constant [0 x i8], align 1
@PL_in_utf8_CTYPE_locale = external dso_local global i8, align 1
@PL_fold_locale = external dso_local global [0 x i8], align 1
@.str.2 = private unnamed_addr constant [76 x i8] c"Use of \\b{} or \\B{} for non-UTF-8 locale is wrong.  Assuming a UTF-8 locale\00", align 1
@PL_utf8_swash_ptrs = external dso_local global [10 x %struct.sv*], align 16
@.str.3 = private unnamed_addr constant [5 x i8] c"utf8\00", align 1
@.str.4 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@PL_sv_undef = external dso_local global %struct.sv, align 8
@PL_XPosix_ptrs = external dso_local global [16 x %struct.sv*], align 16
@PL_charclass = external dso_local constant [0 x i32], align 4
@Grapheme_Cluster_Break_invmap = internal constant [1484 x i32] [i32 2, i32 6, i32 2, i32 1, i32 2, i32 0, i32 2, i32 0, i32 2, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 2, i32 0, i32 4, i32 0, i32 2, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 2, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 2, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 11, i32 0, i32 4, i32 11, i32 4, i32 0, i32 11, i32 4, i32 11, i32 4, i32 11, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 11, i32 0, i32 4, i32 0, i32 4, i32 11, i32 4, i32 0, i32 11, i32 0, i32 11, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 11, i32 0, i32 4, i32 0, i32 11, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 11, i32 0, i32 4, i32 0, i32 11, i32 4, i32 0, i32 4, i32 11, i32 0, i32 11, i32 4, i32 0, i32 4, i32 0, i32 4, i32 11, i32 0, i32 4, i32 0, i32 4, i32 11, i32 4, i32 0, i32 11, i32 0, i32 11, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 11, i32 4, i32 11, i32 0, i32 11, i32 0, i32 11, i32 4, i32 0, i32 4, i32 0, i32 4, i32 11, i32 0, i32 4, i32 11, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 11, i32 0, i32 4, i32 0, i32 11, i32 4, i32 11, i32 4, i32 11, i32 0, i32 4, i32 11, i32 0, i32 11, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 11, i32 0, i32 4, i32 11, i32 4, i32 0, i32 11, i32 0, i32 11, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 11, i32 0, i32 4, i32 0, i32 4, i32 11, i32 4, i32 0, i32 4, i32 0, i32 11, i32 4, i32 0, i32 11, i32 0, i32 4, i32 0, i32 11, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 11, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 11, i32 0, i32 4, i32 11, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 11, i32 4, i32 0, i32 4, i32 11, i32 4, i32 0, i32 11, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 11, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 5, i32 13, i32 12, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 11, i32 4, i32 11, i32 4, i32 11, i32 4, i32 0, i32 4, i32 0, i32 4, i32 2, i32 0, i32 4, i32 0, i32 4, i32 11, i32 4, i32 11, i32 0, i32 11, i32 4, i32 11, i32 4, i32 0, i32 11, i32 0, i32 11, i32 0, i32 4, i32 11, i32 4, i32 0, i32 11, i32 4, i32 11, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 11, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 11, i32 0, i32 4, i32 11, i32 4, i32 11, i32 4, i32 11, i32 4, i32 11, i32 0, i32 4, i32 0, i32 4, i32 11, i32 0, i32 11, i32 4, i32 11, i32 4, i32 11, i32 4, i32 0, i32 4, i32 11, i32 4, i32 11, i32 4, i32 11, i32 4, i32 11, i32 0, i32 11, i32 4, i32 11, i32 4, i32 0, i32 4, i32 0, i32 4, i32 11, i32 4, i32 0, i32 4, i32 0, i32 11, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 2, i32 4, i32 2, i32 0, i32 2, i32 0, i32 2, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 11, i32 4, i32 11, i32 0, i32 11, i32 0, i32 11, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 11, i32 0, i32 5, i32 0, i32 4, i32 11, i32 0, i32 4, i32 11, i32 4, i32 11, i32 4, i32 11, i32 0, i32 4, i32 0, i32 4, i32 11, i32 4, i32 11, i32 4, i32 0, i32 4, i32 0, i32 4, i32 11, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 11, i32 4, i32 11, i32 0, i32 11, i32 4, i32 0, i32 11, i32 4, i32 11, i32 4, i32 11, i32 0, i32 11, i32 4, i32 0, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 0, i32 13, i32 0, i32 12, i32 0, i32 2, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 2, i32 0, i32 4, i32 0, i32 2, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 11, i32 4, i32 11, i32 0, i32 4, i32 0, i32 4, i32 11, i32 0, i32 11, i32 4, i32 11, i32 4, i32 0, i32 2, i32 0, i32 4, i32 0, i32 4, i32 11, i32 4, i32 0, i32 4, i32 0, i32 4, i32 11, i32 0, i32 11, i32 4, i32 11, i32 0, i32 11, i32 4, i32 11, i32 4, i32 11, i32 4, i32 0, i32 4, i32 11, i32 4, i32 0, i32 4, i32 11, i32 0, i32 4, i32 0, i32 4, i32 11, i32 4, i32 11, i32 0, i32 11, i32 0, i32 11, i32 0, i32 4, i32 0, i32 11, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 11, i32 4, i32 11, i32 4, i32 11, i32 4, i32 11, i32 4, i32 11, i32 4, i32 0, i32 4, i32 11, i32 4, i32 0, i32 11, i32 4, i32 11, i32 4, i32 0, i32 11, i32 4, i32 11, i32 4, i32 11, i32 4, i32 0, i32 4, i32 11, i32 4, i32 11, i32 4, i32 11, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 11, i32 0, i32 4, i32 0, i32 4, i32 0, i32 2, i32 0, i32 4, i32 11, i32 4, i32 0, i32 11, i32 4, i32 2, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 10, i32 0, i32 2, i32 4, i32 2, i32 0], align 16
@PL_GCB_invlist = external dso_local global %struct.sv*, align 8
@Sentence_Break_invmap = internal constant [2835 x i32] [i32 0, i32 14, i32 7, i32 14, i32 2, i32 0, i32 14, i32 12, i32 3, i32 0, i32 3, i32 0, i32 11, i32 1, i32 0, i32 9, i32 11, i32 0, i32 12, i32 0, i32 15, i32 3, i32 0, i32 3, i32 0, i32 8, i32 3, i32 0, i32 3, i32 0, i32 13, i32 0, i32 14, i32 0, i32 8, i32 3, i32 0, i32 6, i32 0, i32 8, i32 0, i32 8, i32 3, i32 0, i32 15, i32 0, i32 15, i32 8, i32 0, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 10, i32 15, i32 8, i32 10, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 10, i32 8, i32 10, i32 8, i32 0, i32 10, i32 0, i32 8, i32 0, i32 10, i32 0, i32 10, i32 0, i32 5, i32 15, i32 8, i32 15, i32 8, i32 10, i32 0, i32 15, i32 8, i32 0, i32 8, i32 0, i32 15, i32 0, i32 15, i32 0, i32 15, i32 0, i32 15, i32 0, i32 15, i32 8, i32 15, i32 0, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 0, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 0, i32 5, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 0, i32 15, i32 0, i32 10, i32 0, i32 11, i32 0, i32 8, i32 0, i32 12, i32 0, i32 5, i32 0, i32 5, i32 0, i32 5, i32 0, i32 5, i32 0, i32 5, i32 0, i32 10, i32 0, i32 10, i32 0, i32 6, i32 0, i32 11, i32 0, i32 5, i32 0, i32 6, i32 0, i32 12, i32 10, i32 5, i32 9, i32 0, i32 9, i32 0, i32 10, i32 5, i32 10, i32 12, i32 10, i32 5, i32 6, i32 0, i32 5, i32 10, i32 5, i32 0, i32 5, i32 10, i32 9, i32 10, i32 0, i32 10, i32 12, i32 0, i32 6, i32 10, i32 5, i32 10, i32 5, i32 0, i32 10, i32 5, i32 10, i32 0, i32 9, i32 10, i32 5, i32 10, i32 0, i32 11, i32 12, i32 10, i32 0, i32 10, i32 5, i32 10, i32 5, i32 10, i32 5, i32 10, i32 5, i32 0, i32 10, i32 5, i32 0, i32 10, i32 0, i32 5, i32 10, i32 5, i32 10, i32 5, i32 10, i32 5, i32 10, i32 5, i32 12, i32 9, i32 0, i32 10, i32 5, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 5, i32 10, i32 5, i32 0, i32 5, i32 0, i32 5, i32 10, i32 0, i32 5, i32 0, i32 10, i32 0, i32 10, i32 5, i32 0, i32 9, i32 10, i32 0, i32 5, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 5, i32 0, i32 5, i32 0, i32 5, i32 0, i32 5, i32 0, i32 5, i32 0, i32 10, i32 0, i32 10, i32 0, i32 9, i32 5, i32 10, i32 5, i32 0, i32 5, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 5, i32 10, i32 5, i32 0, i32 5, i32 0, i32 5, i32 0, i32 10, i32 0, i32 10, i32 5, i32 0, i32 9, i32 0, i32 5, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 5, i32 10, i32 5, i32 0, i32 5, i32 0, i32 5, i32 0, i32 5, i32 0, i32 10, i32 0, i32 10, i32 5, i32 0, i32 9, i32 0, i32 10, i32 0, i32 5, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 5, i32 0, i32 5, i32 0, i32 5, i32 0, i32 10, i32 0, i32 5, i32 0, i32 9, i32 0, i32 5, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 5, i32 0, i32 5, i32 0, i32 5, i32 0, i32 5, i32 0, i32 10, i32 0, i32 10, i32 5, i32 0, i32 9, i32 0, i32 5, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 5, i32 10, i32 5, i32 0, i32 5, i32 0, i32 5, i32 0, i32 5, i32 0, i32 10, i32 0, i32 10, i32 5, i32 0, i32 9, i32 0, i32 10, i32 0, i32 5, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 5, i32 0, i32 5, i32 0, i32 5, i32 10, i32 0, i32 5, i32 0, i32 10, i32 5, i32 0, i32 9, i32 0, i32 10, i32 0, i32 5, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 5, i32 0, i32 5, i32 0, i32 5, i32 0, i32 5, i32 0, i32 9, i32 0, i32 5, i32 0, i32 10, i32 5, i32 10, i32 5, i32 0, i32 10, i32 5, i32 0, i32 9, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 5, i32 10, i32 5, i32 0, i32 5, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 5, i32 0, i32 9, i32 0, i32 10, i32 0, i32 10, i32 0, i32 5, i32 0, i32 9, i32 0, i32 5, i32 0, i32 5, i32 0, i32 5, i32 3, i32 5, i32 10, i32 0, i32 10, i32 0, i32 5, i32 0, i32 5, i32 10, i32 5, i32 0, i32 5, i32 0, i32 5, i32 0, i32 10, i32 5, i32 10, i32 9, i32 12, i32 0, i32 10, i32 5, i32 10, i32 5, i32 10, i32 5, i32 10, i32 5, i32 10, i32 5, i32 10, i32 5, i32 10, i32 5, i32 9, i32 5, i32 0, i32 15, i32 0, i32 15, i32 0, i32 15, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 5, i32 0, i32 12, i32 0, i32 12, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 12, i32 10, i32 14, i32 10, i32 3, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 5, i32 0, i32 10, i32 5, i32 12, i32 0, i32 10, i32 5, i32 0, i32 10, i32 0, i32 10, i32 0, i32 5, i32 0, i32 10, i32 5, i32 0, i32 10, i32 0, i32 10, i32 5, i32 0, i32 9, i32 0, i32 11, i32 12, i32 0, i32 11, i32 12, i32 0, i32 5, i32 6, i32 0, i32 9, i32 0, i32 10, i32 0, i32 10, i32 5, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 5, i32 0, i32 5, i32 0, i32 12, i32 9, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 5, i32 10, i32 5, i32 0, i32 9, i32 0, i32 10, i32 5, i32 0, i32 10, i32 5, i32 0, i32 5, i32 0, i32 5, i32 9, i32 0, i32 9, i32 0, i32 10, i32 12, i32 0, i32 5, i32 0, i32 5, i32 10, i32 5, i32 10, i32 0, i32 9, i32 12, i32 0, i32 12, i32 0, i32 5, i32 0, i32 5, i32 10, i32 5, i32 10, i32 9, i32 10, i32 5, i32 0, i32 10, i32 5, i32 0, i32 12, i32 0, i32 9, i32 0, i32 10, i32 9, i32 10, i32 12, i32 0, i32 5, i32 0, i32 5, i32 10, i32 5, i32 10, i32 5, i32 10, i32 0, i32 5, i32 0, i32 8, i32 5, i32 0, i32 5, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 0, i32 15, i32 0, i32 8, i32 15, i32 8, i32 15, i32 8, i32 0, i32 15, i32 0, i32 8, i32 0, i32 15, i32 0, i32 15, i32 0, i32 15, i32 0, i32 15, i32 8, i32 15, i32 8, i32 0, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 0, i32 8, i32 15, i32 0, i32 8, i32 0, i32 8, i32 0, i32 8, i32 15, i32 0, i32 8, i32 0, i32 8, i32 15, i32 0, i32 8, i32 15, i32 0, i32 8, i32 0, i32 8, i32 15, i32 0, i32 14, i32 6, i32 5, i32 6, i32 0, i32 11, i32 0, i32 3, i32 0, i32 1, i32 0, i32 13, i32 6, i32 14, i32 0, i32 3, i32 0, i32 12, i32 0, i32 3, i32 12, i32 0, i32 14, i32 6, i32 0, i32 6, i32 0, i32 8, i32 0, i32 3, i32 8, i32 0, i32 3, i32 0, i32 8, i32 0, i32 5, i32 0, i32 15, i32 0, i32 15, i32 0, i32 8, i32 15, i32 8, i32 15, i32 8, i32 0, i32 15, i32 0, i32 15, i32 0, i32 15, i32 0, i32 15, i32 0, i32 15, i32 0, i32 15, i32 0, i32 8, i32 15, i32 8, i32 10, i32 8, i32 0, i32 8, i32 15, i32 0, i32 15, i32 8, i32 0, i32 8, i32 0, i32 15, i32 8, i32 10, i32 15, i32 8, i32 10, i32 0, i32 3, i32 0, i32 3, i32 0, i32 15, i32 8, i32 0, i32 3, i32 0, i32 3, i32 0, i32 3, i32 0, i32 3, i32 0, i32 3, i32 0, i32 3, i32 0, i32 3, i32 0, i32 15, i32 0, i32 8, i32 0, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 0, i32 15, i32 8, i32 15, i32 8, i32 5, i32 15, i32 8, i32 0, i32 8, i32 0, i32 8, i32 0, i32 8, i32 0, i32 10, i32 0, i32 10, i32 0, i32 5, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 5, i32 3, i32 0, i32 3, i32 0, i32 3, i32 0, i32 12, i32 10, i32 0, i32 12, i32 0, i32 3, i32 0, i32 14, i32 11, i32 12, i32 0, i32 10, i32 3, i32 0, i32 3, i32 0, i32 3, i32 0, i32 10, i32 5, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 5, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 12, i32 10, i32 0, i32 12, i32 10, i32 9, i32 10, i32 0, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 10, i32 5, i32 0, i32 5, i32 0, i32 10, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 0, i32 5, i32 10, i32 5, i32 0, i32 12, i32 0, i32 12, i32 0, i32 10, i32 0, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 10, i32 0, i32 15, i32 8, i32 15, i32 8, i32 0, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 0, i32 15, i32 0, i32 10, i32 8, i32 10, i32 5, i32 10, i32 5, i32 10, i32 5, i32 10, i32 5, i32 0, i32 10, i32 0, i32 12, i32 0, i32 5, i32 10, i32 5, i32 0, i32 12, i32 9, i32 0, i32 5, i32 10, i32 0, i32 10, i32 0, i32 9, i32 10, i32 5, i32 0, i32 12, i32 10, i32 5, i32 0, i32 10, i32 0, i32 5, i32 10, i32 5, i32 0, i32 12, i32 0, i32 10, i32 9, i32 0, i32 10, i32 5, i32 10, i32 9, i32 10, i32 0, i32 10, i32 5, i32 0, i32 10, i32 5, i32 10, i32 5, i32 0, i32 9, i32 0, i32 12, i32 10, i32 0, i32 10, i32 5, i32 10, i32 5, i32 10, i32 5, i32 10, i32 5, i32 10, i32 5, i32 10, i32 5, i32 10, i32 0, i32 10, i32 0, i32 10, i32 5, i32 12, i32 10, i32 5, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 8, i32 0, i32 8, i32 0, i32 8, i32 0, i32 10, i32 5, i32 12, i32 5, i32 0, i32 9, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 8, i32 0, i32 8, i32 0, i32 10, i32 5, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 3, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 5, i32 11, i32 0, i32 11, i32 0, i32 3, i32 0, i32 5, i32 0, i32 11, i32 0, i32 3, i32 0, i32 3, i32 0, i32 11, i32 1, i32 0, i32 11, i32 12, i32 11, i32 3, i32 0, i32 11, i32 0, i32 10, i32 0, i32 10, i32 0, i32 6, i32 0, i32 12, i32 0, i32 3, i32 0, i32 11, i32 1, i32 0, i32 11, i32 0, i32 12, i32 0, i32 15, i32 3, i32 0, i32 3, i32 0, i32 8, i32 3, i32 0, i32 3, i32 0, i32 3, i32 12, i32 3, i32 11, i32 0, i32 10, i32 5, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 6, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 5, i32 0, i32 10, i32 0, i32 10, i32 0, i32 5, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 5, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 15, i32 8, i32 10, i32 0, i32 9, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 5, i32 0, i32 5, i32 0, i32 5, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 5, i32 0, i32 5, i32 0, i32 12, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 5, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 5, i32 10, i32 5, i32 12, i32 0, i32 9, i32 0, i32 5, i32 10, i32 5, i32 0, i32 6, i32 12, i32 0, i32 10, i32 0, i32 9, i32 0, i32 5, i32 10, i32 5, i32 0, i32 9, i32 0, i32 12, i32 0, i32 10, i32 5, i32 0, i32 10, i32 0, i32 5, i32 10, i32 5, i32 10, i32 12, i32 0, i32 12, i32 0, i32 9, i32 10, i32 0, i32 10, i32 0, i32 10, i32 5, i32 12, i32 0, i32 12, i32 0, i32 10, i32 5, i32 0, i32 9, i32 0, i32 5, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 5, i32 10, i32 5, i32 0, i32 5, i32 0, i32 5, i32 0, i32 5, i32 0, i32 10, i32 5, i32 0, i32 5, i32 0, i32 5, i32 0, i32 10, i32 5, i32 10, i32 0, i32 10, i32 0, i32 9, i32 0, i32 10, i32 5, i32 0, i32 5, i32 0, i32 12, i32 0, i32 12, i32 0, i32 10, i32 5, i32 12, i32 0, i32 10, i32 0, i32 9, i32 0, i32 10, i32 5, i32 0, i32 9, i32 0, i32 15, i32 8, i32 9, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 9, i32 0, i32 12, i32 0, i32 10, i32 0, i32 5, i32 12, i32 0, i32 10, i32 5, i32 12, i32 0, i32 10, i32 12, i32 0, i32 9, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 5, i32 0, i32 5, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 5, i32 12, i32 6, i32 0, i32 5, i32 0, i32 5, i32 6, i32 5, i32 0, i32 5, i32 0, i32 5, i32 0, i32 5, i32 0, i32 15, i32 8, i32 15, i32 8, i32 0, i32 8, i32 15, i32 8, i32 15, i32 0, i32 15, i32 0, i32 15, i32 0, i32 15, i32 0, i32 15, i32 0, i32 15, i32 8, i32 0, i32 8, i32 0, i32 8, i32 0, i32 8, i32 15, i32 8, i32 15, i32 0, i32 15, i32 0, i32 15, i32 0, i32 15, i32 0, i32 8, i32 15, i32 0, i32 15, i32 0, i32 15, i32 0, i32 15, i32 0, i32 15, i32 0, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 0, i32 15, i32 0, i32 8, i32 0, i32 8, i32 15, i32 0, i32 8, i32 0, i32 8, i32 15, i32 0, i32 8, i32 0, i32 8, i32 15, i32 0, i32 8, i32 0, i32 8, i32 15, i32 0, i32 8, i32 0, i32 8, i32 15, i32 8, i32 0, i32 9, i32 0, i32 10, i32 0, i32 5, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 15, i32 0, i32 15, i32 0, i32 15, i32 0, i32 3, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 6, i32 0, i32 6, i32 0, i32 5, i32 0], align 16
@PL_SB_invlist = external dso_local global %struct.sv*, align 8
@Word_Break_invmap = internal constant [1480 x i32] [i32 0, i32 10, i32 14, i32 2, i32 0, i32 3, i32 0, i32 17, i32 0, i32 12, i32 0, i32 13, i32 0, i32 15, i32 11, i32 12, i32 0, i32 1, i32 0, i32 6, i32 0, i32 1, i32 0, i32 14, i32 0, i32 1, i32 0, i32 7, i32 0, i32 1, i32 0, i32 11, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 11, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 5, i32 1, i32 0, i32 1, i32 0, i32 1, i32 12, i32 1, i32 0, i32 1, i32 11, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 5, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 12, i32 0, i32 5, i32 0, i32 5, i32 0, i32 5, i32 0, i32 5, i32 0, i32 5, i32 0, i32 8, i32 0, i32 8, i32 1, i32 11, i32 0, i32 7, i32 0, i32 12, i32 0, i32 5, i32 0, i32 7, i32 0, i32 1, i32 5, i32 15, i32 0, i32 15, i32 12, i32 0, i32 1, i32 5, i32 1, i32 0, i32 1, i32 5, i32 7, i32 0, i32 5, i32 1, i32 5, i32 0, i32 5, i32 1, i32 15, i32 1, i32 0, i32 1, i32 0, i32 7, i32 1, i32 5, i32 1, i32 5, i32 0, i32 1, i32 5, i32 1, i32 0, i32 15, i32 1, i32 5, i32 1, i32 0, i32 12, i32 0, i32 1, i32 0, i32 1, i32 5, i32 1, i32 5, i32 1, i32 5, i32 1, i32 5, i32 0, i32 1, i32 5, i32 0, i32 1, i32 0, i32 5, i32 1, i32 5, i32 1, i32 5, i32 1, i32 5, i32 1, i32 5, i32 0, i32 15, i32 0, i32 1, i32 5, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 5, i32 1, i32 5, i32 0, i32 5, i32 0, i32 5, i32 1, i32 0, i32 5, i32 0, i32 1, i32 0, i32 1, i32 5, i32 0, i32 15, i32 1, i32 0, i32 5, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 5, i32 0, i32 5, i32 0, i32 5, i32 0, i32 5, i32 0, i32 5, i32 0, i32 1, i32 0, i32 1, i32 0, i32 15, i32 5, i32 1, i32 5, i32 0, i32 5, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 5, i32 1, i32 5, i32 0, i32 5, i32 0, i32 5, i32 0, i32 1, i32 0, i32 1, i32 5, i32 0, i32 15, i32 0, i32 5, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 5, i32 1, i32 5, i32 0, i32 5, i32 0, i32 5, i32 0, i32 5, i32 0, i32 1, i32 0, i32 1, i32 5, i32 0, i32 15, i32 0, i32 1, i32 0, i32 5, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 5, i32 0, i32 5, i32 0, i32 5, i32 0, i32 1, i32 0, i32 5, i32 0, i32 15, i32 0, i32 5, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 5, i32 0, i32 5, i32 0, i32 5, i32 0, i32 5, i32 0, i32 1, i32 0, i32 1, i32 5, i32 0, i32 15, i32 0, i32 5, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 5, i32 1, i32 5, i32 0, i32 5, i32 0, i32 5, i32 0, i32 5, i32 0, i32 1, i32 0, i32 1, i32 5, i32 0, i32 15, i32 0, i32 1, i32 0, i32 5, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 5, i32 0, i32 5, i32 0, i32 5, i32 1, i32 0, i32 5, i32 0, i32 1, i32 5, i32 0, i32 15, i32 0, i32 1, i32 0, i32 5, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 5, i32 0, i32 5, i32 0, i32 5, i32 0, i32 5, i32 0, i32 15, i32 0, i32 5, i32 0, i32 5, i32 0, i32 5, i32 0, i32 5, i32 0, i32 15, i32 0, i32 5, i32 0, i32 5, i32 0, i32 5, i32 0, i32 5, i32 0, i32 15, i32 0, i32 1, i32 0, i32 5, i32 0, i32 15, i32 0, i32 5, i32 0, i32 5, i32 0, i32 5, i32 0, i32 5, i32 1, i32 0, i32 1, i32 0, i32 5, i32 0, i32 5, i32 1, i32 5, i32 0, i32 5, i32 0, i32 5, i32 0, i32 5, i32 0, i32 15, i32 0, i32 5, i32 0, i32 5, i32 0, i32 5, i32 0, i32 5, i32 0, i32 5, i32 0, i32 5, i32 0, i32 5, i32 15, i32 5, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 5, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 5, i32 0, i32 1, i32 5, i32 0, i32 1, i32 5, i32 0, i32 1, i32 0, i32 1, i32 0, i32 5, i32 0, i32 5, i32 0, i32 5, i32 0, i32 15, i32 0, i32 5, i32 7, i32 0, i32 15, i32 0, i32 1, i32 0, i32 1, i32 5, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 5, i32 0, i32 5, i32 0, i32 15, i32 0, i32 5, i32 0, i32 5, i32 0, i32 15, i32 0, i32 1, i32 5, i32 0, i32 5, i32 0, i32 5, i32 0, i32 5, i32 15, i32 0, i32 15, i32 0, i32 5, i32 0, i32 5, i32 1, i32 5, i32 1, i32 0, i32 15, i32 0, i32 5, i32 0, i32 5, i32 1, i32 5, i32 1, i32 15, i32 1, i32 5, i32 0, i32 1, i32 5, i32 0, i32 15, i32 0, i32 1, i32 15, i32 1, i32 0, i32 5, i32 0, i32 5, i32 1, i32 5, i32 1, i32 5, i32 1, i32 0, i32 5, i32 0, i32 1, i32 5, i32 0, i32 5, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 5, i32 7, i32 0, i32 13, i32 0, i32 13, i32 0, i32 11, i32 14, i32 7, i32 0, i32 6, i32 0, i32 12, i32 0, i32 6, i32 0, i32 7, i32 0, i32 7, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 5, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 5, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 5, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 5, i32 0, i32 1, i32 0, i32 1, i32 0, i32 5, i32 0, i32 9, i32 0, i32 1, i32 0, i32 5, i32 9, i32 0, i32 9, i32 0, i32 9, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 9, i32 0, i32 9, i32 0, i32 9, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 15, i32 1, i32 0, i32 1, i32 5, i32 0, i32 5, i32 0, i32 1, i32 0, i32 5, i32 1, i32 5, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 5, i32 1, i32 5, i32 1, i32 5, i32 1, i32 5, i32 0, i32 1, i32 0, i32 5, i32 1, i32 5, i32 0, i32 15, i32 0, i32 5, i32 1, i32 0, i32 1, i32 0, i32 15, i32 1, i32 5, i32 0, i32 1, i32 5, i32 0, i32 1, i32 0, i32 5, i32 1, i32 5, i32 0, i32 1, i32 15, i32 0, i32 5, i32 0, i32 15, i32 0, i32 1, i32 5, i32 0, i32 1, i32 5, i32 1, i32 5, i32 0, i32 15, i32 0, i32 5, i32 0, i32 5, i32 0, i32 5, i32 0, i32 5, i32 0, i32 5, i32 0, i32 5, i32 0, i32 1, i32 5, i32 0, i32 1, i32 5, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 5, i32 0, i32 5, i32 0, i32 15, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 8, i32 5, i32 8, i32 0, i32 8, i32 0, i32 8, i32 0, i32 8, i32 0, i32 8, i32 0, i32 8, i32 0, i32 8, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 5, i32 12, i32 0, i32 11, i32 12, i32 0, i32 5, i32 0, i32 6, i32 0, i32 6, i32 12, i32 0, i32 13, i32 0, i32 12, i32 11, i32 0, i32 1, i32 0, i32 1, i32 0, i32 7, i32 0, i32 13, i32 0, i32 12, i32 0, i32 13, i32 0, i32 11, i32 12, i32 0, i32 1, i32 0, i32 6, i32 0, i32 1, i32 0, i32 9, i32 5, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 7, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 5, i32 0, i32 1, i32 0, i32 1, i32 0, i32 5, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 5, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 15, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 5, i32 0, i32 5, i32 0, i32 5, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 5, i32 0, i32 5, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 5, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 5, i32 1, i32 5, i32 0, i32 15, i32 0, i32 5, i32 1, i32 5, i32 0, i32 7, i32 0, i32 1, i32 0, i32 15, i32 0, i32 5, i32 1, i32 5, i32 0, i32 15, i32 0, i32 1, i32 5, i32 0, i32 1, i32 0, i32 5, i32 1, i32 5, i32 1, i32 0, i32 15, i32 1, i32 0, i32 1, i32 0, i32 1, i32 5, i32 0, i32 1, i32 5, i32 0, i32 15, i32 0, i32 5, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 5, i32 1, i32 5, i32 0, i32 5, i32 0, i32 5, i32 0, i32 5, i32 0, i32 1, i32 5, i32 0, i32 5, i32 0, i32 5, i32 0, i32 1, i32 5, i32 1, i32 0, i32 1, i32 0, i32 15, i32 0, i32 1, i32 5, i32 0, i32 5, i32 0, i32 1, i32 5, i32 0, i32 1, i32 0, i32 15, i32 0, i32 1, i32 5, i32 0, i32 15, i32 0, i32 1, i32 15, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 15, i32 0, i32 1, i32 0, i32 5, i32 0, i32 1, i32 5, i32 0, i32 1, i32 0, i32 15, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 5, i32 0, i32 5, i32 1, i32 0, i32 9, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 5, i32 0, i32 7, i32 0, i32 5, i32 0, i32 5, i32 7, i32 5, i32 0, i32 5, i32 0, i32 5, i32 0, i32 5, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 15, i32 0, i32 1, i32 0, i32 5, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 16, i32 0, i32 7, i32 0, i32 7, i32 0, i32 5, i32 0], align 16
@PL_WB_invlist = external dso_local global %struct.sv*, align 8
@.str.5 = private unnamed_addr constant [74 x i8] c"panic: find_byclass() node %d='%s' has an unexpected character class '%d'\00", align 1
@PL_reg_name = external dso_local global [0 x i8*], align 8
@PL_tmps_floor = external dso_local global i64, align 8
@PL_tmps_ix = external dso_local global i64, align 8
@.str.6 = private unnamed_addr constant [29 x i8] c"panic: unknown regstclass %d\00", align 1
@.str.7 = private unnamed_addr constant [34 x i8] c"Malformed UTF-8 character (fatal)\00", align 1
@.str.8 = private unnamed_addr constant [85 x i8] c"Matched non-Unicode code point 0x%04lX against Unicode property; may not be portable\00", align 1
@.str.9 = private unnamed_addr constant [57 x i8] c"panic: isFOO_lc() has an unexpected character class '%d'\00", align 1
@PL_replgv = external dso_local global %struct.gv*, align 8
@.str.10 = private unnamed_addr constant [28 x i8] c"Infinite recursion in regex\00", align 1
@.str.11 = private unnamed_addr constant [70 x i8] c"Pattern subroutine nesting without pos change exceeded limit in regex\00", align 1
@.str.12 = private unnamed_addr constant [48 x i8] c"EVAL without pos change exceeded limit in regex\00", align 1
@PL_stack_sp = external dso_local global %struct.sv**, align 8
@PL_op = external dso_local global %struct.op*, align 8
@PL_comppad = external dso_local global %struct.av*, align 8
@PL_curstackinfo = external dso_local global %struct.stackinfo*, align 8
@PL_curpad = external dso_local global %struct.sv**, align 8
@PL_top_env = external dso_local global %struct.jmpenv*, align 8
@PL_stack_base = external dso_local global %struct.sv**, align 8
@PL_curstack = external dso_local global %struct.av*, align 8
@PL_stack_max = external dso_local global %struct.sv**, align 8
@PL_markstack_ptr = external dso_local global i32*, align 8
@PL_markstack = external dso_local global i32*, align 8
@PL_scopestack_ix = external dso_local global i32, align 4
@.str.13 = private unnamed_addr constant [8 x i8] c"REGMARK\00", align 1
@PL_runops = external dso_local global i32 ()*, align 8
@PL_reg_curpm = external dso_local global %struct.pmop*, align 8
@.str.14 = private unnamed_addr constant [60 x i8] c"Complex regular subexpression recursion limit (%d) exceeded\00", align 1
@PL_stderrgv = external dso_local global %struct.gv*, align 8
@.str.15 = private unnamed_addr constant [8 x i8] c"%lx %d\0A\00", align 1
@.str.16 = private unnamed_addr constant [25 x i8] c"regexp memory corruption\00", align 1
@.str.17 = private unnamed_addr constant [26 x i8] c"corrupted regexp pointers\00", align 1
@.str.18 = private unnamed_addr constant [9 x i8] c"REGERROR\00", align 1
@PL_sv_no = external dso_local global %struct.sv, align 8
@PL_sv_yes = external dso_local global %struct.sv, align 8
@.str.19 = private unnamed_addr constant [90 x i8] c"panic: paren_elems_to_push, %i < 0, maxopenparen: %i parenfloor: %i REGCP_PAREN_ELEMS: %u\00", align 1
@.str.20 = private unnamed_addr constant [61 x i8] c"panic: paren_elems_to_push offset %lu out of range (%lu-%ld)\00", align 1
@PL_savestack_max = external dso_local global i32, align 4
@PL_savestack = external dso_local global %union.any*, align 8
@PL_utf8_foldclosures = external dso_local global %struct.hv*, align 8
@.str.21 = private unnamed_addr constant [46 x i8] c"panic: invalid PL_utf8_foldclosures structure\00", align 1
@.str.22 = private unnamed_addr constant [24 x i8] c"panic: Unexpected op %u\00", align 1
@.str.23 = private unnamed_addr constant [71 x i8] c"panic: regrepeat() node %d='%s' has an unexpected character class '%d'\00", align 1
@.str.24 = private unnamed_addr constant [62 x i8] c"panic: regrepeat() called with unrecognized node type %d='%s'\00", align 1
@PL_defgv = external dso_local global %struct.gv*, align 8

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @Perl_pregexec(%struct.p5rx* %prog, i8* %stringarg, i8* %strend, i8* %strbeg, i64 %minend, %struct.sv* %screamer, i32 %nosave) #0 {
entry:
  %prog.addr = alloca %struct.p5rx*, align 8
  %stringarg.addr = alloca i8*, align 8
  %strend.addr = alloca i8*, align 8
  %strbeg.addr = alloca i8*, align 8
  %minend.addr = alloca i64, align 8
  %screamer.addr = alloca %struct.sv*, align 8
  %nosave.addr = alloca i32, align 4
  store %struct.p5rx* %prog, %struct.p5rx** %prog.addr, align 8
  store i8* %stringarg, i8** %stringarg.addr, align 8
  store i8* %strend, i8** %strend.addr, align 8
  store i8* %strbeg, i8** %strbeg.addr, align 8
  store i64 %minend, i64* %minend.addr, align 8
  store %struct.sv* %screamer, %struct.sv** %screamer.addr, align 8
  store i32 %nosave, i32* %nosave.addr, align 4
  %0 = load %struct.p5rx*, %struct.p5rx** %prog.addr, align 8
  %1 = load i8*, i8** %stringarg.addr, align 8
  %2 = load i8*, i8** %strend.addr, align 8
  %3 = load i8*, i8** %strbeg.addr, align 8
  %4 = load i64, i64* %minend.addr, align 8
  %5 = load %struct.sv*, %struct.sv** %screamer.addr, align 8
  %6 = load i32, i32* %nosave.addr, align 4
  %tobool = icmp ne i32 %6, 0
  %7 = zext i1 %tobool to i64
  %cond = select i1 %tobool, i32 0, i32 1
  %call = call i32 @Perl_regexec_flags(%struct.p5rx* %0, i8* %1, i8* %2, i8* %3, i64 %4, %struct.sv* %5, i8* null, i32 %cond)
  ret i32 %call
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @Perl_regexec_flags(%struct.p5rx* %rx, i8* %stringarg, i8* %strend, i8* %strbeg, i64 %minend, %struct.sv* %sv, i8* %data, i32 %flags) #0 {
entry:
  %retval = alloca i32, align 4
  %rx.addr = alloca %struct.p5rx*, align 8
  %stringarg.addr = alloca i8*, align 8
  %strend.addr = alloca i8*, align 8
  %strbeg.addr = alloca i8*, align 8
  %minend.addr = alloca i64, align 8
  %sv.addr = alloca %struct.sv*, align 8
  %data.addr = alloca i8*, align 8
  %flags.addr = alloca i32, align 4
  %prog = alloca %struct.regexp*, align 8
  %s = alloca i8*, align 8
  %c = alloca %struct.regnode*, align 8
  %startpos = alloca i8*, align 8
  %minlen = alloca i64, align 8
  %dontbother = alloca i64, align 8
  %utf8_target = alloca i8, align 1
  %multiline = alloca i32, align 4
  %progi = alloca %struct.regexp_internal*, align 8
  %reginfo_buf = alloca %struct.regmatch_info, align 8
  %reginfo = alloca %struct.regmatch_info*, align 8
  %swap = alloca %struct.regexp_paren_pair*, align 8
  %oldsave = alloca i32, align 4
  %mg = alloca %struct.magic*, align 8
  %old_regmatch_state = alloca %struct.regmatch_state*, align 8
  %old_regmatch_slab = alloca %struct.regmatch_slab*, align 8
  %i = alloca i32, align 4
  %max = alloca i32, align 4
  %end257 = alloca i8*, align 8
  %ch = alloca i8, align 1
  %must = alloca %struct.sv*, align 8
  %back_max = alloca i64, align 8
  %back_min = alloca i64, align 8
  %last = alloca i8*, align 8
  %last1 = alloca i8*, align 8
  %t = alloca i8*, align 8
  %op = alloca i16, align 2
  %last879 = alloca i8*, align 8
  %float_real = alloca %struct.sv*, align 8
  %len = alloca i64, align 8
  %little = alloca i8*, align 8
  %checkpos = alloca i8*, align 8
  store %struct.p5rx* %rx, %struct.p5rx** %rx.addr, align 8
  store i8* %stringarg, i8** %stringarg.addr, align 8
  store i8* %strend, i8** %strend.addr, align 8
  store i8* %strbeg, i8** %strbeg.addr, align 8
  store i64 %minend, i64* %minend.addr, align 8
  store %struct.sv* %sv, %struct.sv** %sv.addr, align 8
  store i8* %data, i8** %data.addr, align 8
  store i32 %flags, i32* %flags.addr, align 4
  %0 = load %struct.p5rx*, %struct.p5rx** %rx.addr, align 8
  %call = call %struct.regexp* @S_ReANY(%struct.p5rx* %0)
  store %struct.regexp* %call, %struct.regexp** %prog, align 8
  store i64 0, i64* %dontbother, align 8
  %1 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %1, i32 0, i32 2
  %2 = load i32, i32* %sv_flags, align 4
  %and = and i32 %2, 536870912
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %entry
  %3 = load %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_hints = getelementptr inbounds %struct.cop, %struct.cop* %3, i32 0, i32 10
  %4 = load i32, i32* %cop_hints, align 8
  %add = add i32 %4, 0
  %and1 = and i32 %add, 8
  %tobool2 = icmp ne i32 %and1, 0
  %lnot = xor i1 %tobool2, true
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %5 = phi i1 [ false, %entry ], [ %lnot, %land.rhs ]
  %6 = zext i1 %5 to i64
  %cond = select i1 %5, i32 1, i32 0
  %tobool3 = icmp ne i32 %cond, 0
  %frombool = zext i1 %tobool3 to i8
  store i8 %frombool, i8* %utf8_target, align 1
  %7 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %pprivate = getelementptr inbounds %struct.regexp, %struct.regexp* %7, i32 0, i32 14
  %8 = load i8*, i8** %pprivate, align 8
  %9 = bitcast i8* %8 to %struct.regexp_internal*
  store %struct.regexp_internal* %9, %struct.regexp_internal** %progi, align 8
  store %struct.regmatch_info* %reginfo_buf, %struct.regmatch_info** %reginfo, align 8
  store %struct.regexp_paren_pair* null, %struct.regexp_paren_pair** %swap, align 8
  %10 = load i8*, i8** %data.addr, align 8
  %11 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %cmp = icmp eq %struct.regexp* %11, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %land.end
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0))
  br label %if.end

if.end:                                           ; preds = %if.then, %land.end
  %12 = load i8*, i8** %stringarg.addr, align 8
  store i8* %12, i8** %startpos, align 8
  %13 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %intflags = getelementptr inbounds %struct.regexp, %struct.regexp* %13, i32 0, i32 13
  %14 = load i32, i32* %intflags, align 4
  %and4 = and i32 %14, 256
  %tobool5 = icmp ne i32 %and4, 0
  br i1 %tobool5, label %if.then6, label %if.end54

if.then6:                                         ; preds = %if.end
  %15 = load i32, i32* %flags.addr, align 4
  %and7 = and i32 %15, 8
  %tobool8 = icmp ne i32 %and7, 0
  br i1 %tobool8, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then6
  %16 = load i8*, i8** %stringarg.addr, align 8
  br label %cond.end16

cond.false:                                       ; preds = %if.then6
  %17 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %call9 = call %struct.magic* @Perl_mg_find_mglob(%struct.sv* %17)
  store %struct.magic* %call9, %struct.magic** %mg, align 8
  %tobool10 = icmp ne %struct.magic* %call9, null
  br i1 %tobool10, label %land.lhs.true, label %cond.false14

land.lhs.true:                                    ; preds = %cond.false
  %18 = load %struct.magic*, %struct.magic** %mg, align 8
  %mg_len = getelementptr inbounds %struct.magic, %struct.magic* %18, i32 0, i32 5
  %19 = load i64, i64* %mg_len, align 8
  %cmp11 = icmp sge i64 %19, 0
  br i1 %cmp11, label %cond.true12, label %cond.false14

cond.true12:                                      ; preds = %land.lhs.true
  %20 = load i8*, i8** %strbeg.addr, align 8
  %21 = load %struct.magic*, %struct.magic** %mg, align 8
  %22 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %23 = load i8*, i8** %strbeg.addr, align 8
  %24 = load i8*, i8** %strend.addr, align 8
  %25 = load i8*, i8** %strbeg.addr, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %24 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %25 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %call13 = call i64 @S_MgBYTEPOS(%struct.magic* %21, %struct.sv* %22, i8* %23, i64 %sub.ptr.sub)
  %add.ptr = getelementptr inbounds i8, i8* %20, i64 %call13
  br label %cond.end

cond.false14:                                     ; preds = %land.lhs.true, %cond.false
  %26 = load i8*, i8** %strbeg.addr, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false14, %cond.true12
  %cond15 = phi i8* [ %add.ptr, %cond.true12 ], [ %26, %cond.false14 ]
  br label %cond.end16

cond.end16:                                       ; preds = %cond.end, %cond.true
  %cond17 = phi i8* [ %16, %cond.true ], [ %cond15, %cond.end ]
  %27 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %ganch = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %27, i32 0, i32 5
  store i8* %cond17, i8** %ganch, align 8
  %28 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %intflags18 = getelementptr inbounds %struct.regexp, %struct.regexp* %28, i32 0, i32 13
  %29 = load i32, i32* %intflags18, align 4
  %and19 = and i32 %29, 4096
  %tobool20 = icmp ne i32 %and19, 0
  br i1 %tobool20, label %if.then21, label %if.else

if.then21:                                        ; preds = %cond.end16
  %30 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %ganch22 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %30, i32 0, i32 5
  %31 = load i8*, i8** %ganch22, align 8
  %32 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %gofs = getelementptr inbounds %struct.regexp, %struct.regexp* %32, i32 0, i32 10
  %33 = load i64, i64* %gofs, align 8
  %idx.neg = sub i64 0, %33
  %add.ptr23 = getelementptr inbounds i8, i8* %31, i64 %idx.neg
  store i8* %add.ptr23, i8** %startpos, align 8
  %34 = load i8*, i8** %startpos, align 8
  %35 = load i32, i32* %flags.addr, align 4
  %and24 = and i32 %35, 128
  %tobool25 = icmp ne i32 %and24, 0
  br i1 %tobool25, label %cond.true26, label %cond.false27

cond.true26:                                      ; preds = %if.then21
  %36 = load i8*, i8** %stringarg.addr, align 8
  br label %cond.end28

cond.false27:                                     ; preds = %if.then21
  %37 = load i8*, i8** %strbeg.addr, align 8
  br label %cond.end28

cond.end28:                                       ; preds = %cond.false27, %cond.true26
  %cond29 = phi i8* [ %36, %cond.true26 ], [ %37, %cond.false27 ]
  %cmp30 = icmp ult i8* %34, %cond29
  br i1 %cmp30, label %if.then31, label %if.end32

if.then31:                                        ; preds = %cond.end28
  store i32 0, i32* %retval, align 4
  br label %return

if.end32:                                         ; preds = %cond.end28
  br label %if.end53

if.else:                                          ; preds = %cond.end16
  %38 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %gofs33 = getelementptr inbounds %struct.regexp, %struct.regexp* %38, i32 0, i32 10
  %39 = load i64, i64* %gofs33, align 8
  %tobool34 = icmp ne i64 %39, 0
  br i1 %tobool34, label %if.then35, label %if.else46

if.then35:                                        ; preds = %if.else
  %40 = load i8*, i8** %startpos, align 8
  %41 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %gofs36 = getelementptr inbounds %struct.regexp, %struct.regexp* %41, i32 0, i32 10
  %42 = load i64, i64* %gofs36, align 8
  %idx.neg37 = sub i64 0, %42
  %add.ptr38 = getelementptr inbounds i8, i8* %40, i64 %idx.neg37
  %43 = load i8*, i8** %strbeg.addr, align 8
  %cmp39 = icmp ult i8* %add.ptr38, %43
  br i1 %cmp39, label %if.then40, label %if.else41

if.then40:                                        ; preds = %if.then35
  %44 = load i8*, i8** %strbeg.addr, align 8
  store i8* %44, i8** %startpos, align 8
  br label %if.end45

if.else41:                                        ; preds = %if.then35
  %45 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %gofs42 = getelementptr inbounds %struct.regexp, %struct.regexp* %45, i32 0, i32 10
  %46 = load i64, i64* %gofs42, align 8
  %47 = load i8*, i8** %startpos, align 8
  %idx.neg43 = sub i64 0, %46
  %add.ptr44 = getelementptr inbounds i8, i8* %47, i64 %idx.neg43
  store i8* %add.ptr44, i8** %startpos, align 8
  br label %if.end45

if.end45:                                         ; preds = %if.else41, %if.then40
  br label %if.end52

if.else46:                                        ; preds = %if.else
  %48 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %intflags47 = getelementptr inbounds %struct.regexp, %struct.regexp* %48, i32 0, i32 13
  %49 = load i32, i32* %intflags47, align 4
  %and48 = and i32 %49, 512
  %tobool49 = icmp ne i32 %and48, 0
  br i1 %tobool49, label %if.then50, label %if.end51

if.then50:                                        ; preds = %if.else46
  %50 = load i8*, i8** %strbeg.addr, align 8
  store i8* %50, i8** %startpos, align 8
  br label %if.end51

if.end51:                                         ; preds = %if.then50, %if.else46
  br label %if.end52

if.end52:                                         ; preds = %if.end51, %if.end45
  br label %if.end53

if.end53:                                         ; preds = %if.end52, %if.end32
  br label %if.end54

if.end54:                                         ; preds = %if.end53, %if.end
  %51 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %minlen55 = getelementptr inbounds %struct.regexp, %struct.regexp* %51, i32 0, i32 8
  %52 = load i64, i64* %minlen55, align 8
  store i64 %52, i64* %minlen, align 8
  %53 = load i8*, i8** %startpos, align 8
  %54 = load i64, i64* %minlen, align 8
  %add.ptr56 = getelementptr inbounds i8, i8* %53, i64 %54
  %55 = load i8*, i8** %strend.addr, align 8
  %cmp57 = icmp ugt i8* %add.ptr56, %55
  br i1 %cmp57, label %if.then59, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end54
  %56 = load i8*, i8** %startpos, align 8
  %57 = load i8*, i8** %strbeg.addr, align 8
  %cmp58 = icmp ult i8* %56, %57
  br i1 %cmp58, label %if.then59, label %if.end60

if.then59:                                        ; preds = %lor.lhs.false, %if.end54
  store i32 0, i32* %retval, align 4
  br label %return

if.end60:                                         ; preds = %lor.lhs.false
  %58 = load i32, i32* @PL_savestack_ix, align 4
  store i32 %58, i32* %oldsave, align 4
  %59 = load i8*, i8** %startpos, align 8
  store i8* %59, i8** %s, align 8
  %60 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %extflags = getelementptr inbounds %struct.regexp, %struct.regexp* %60, i32 0, i32 7
  %61 = load i32, i32* %extflags, align 8
  %and61 = and i32 %61, 6291456
  %tobool62 = icmp ne i32 %and61, 0
  br i1 %tobool62, label %land.lhs.true63, label %if.end116

land.lhs.true63:                                  ; preds = %if.end60
  %62 = load i32, i32* %flags.addr, align 4
  %and64 = and i32 %62, 2
  %tobool65 = icmp ne i32 %and64, 0
  br i1 %tobool65, label %if.end116, label %if.then66

if.then66:                                        ; preds = %land.lhs.true63
  %63 = load %struct.p5rx*, %struct.p5rx** %rx.addr, align 8
  %64 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %65 = load i8*, i8** %strbeg.addr, align 8
  %66 = load i8*, i8** %startpos, align 8
  %67 = load i8*, i8** %strend.addr, align 8
  %68 = load i32, i32* %flags.addr, align 4
  %call67 = call i8* @Perl_re_intuit_start(%struct.p5rx* %63, %struct.sv* %64, i8* %65, i8* %66, i8* %67, i32 %68, %struct.re_scream_pos_data_s* null)
  store i8* %call67, i8** %s, align 8
  %69 = load i8*, i8** %s, align 8
  %tobool68 = icmp ne i8* %69, null
  br i1 %tobool68, label %if.end70, label %if.then69

if.then69:                                        ; preds = %if.then66
  store i32 0, i32* %retval, align 4
  br label %return

if.end70:                                         ; preds = %if.then66
  %70 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %extflags71 = getelementptr inbounds %struct.regexp, %struct.regexp* %70, i32 0, i32 7
  %71 = load i32, i32* %extflags71, align 8
  %and72 = and i32 %71, 524288
  %tobool73 = icmp ne i32 %and72, 0
  br i1 %tobool73, label %if.then74, label %if.end115

if.then74:                                        ; preds = %if.end70
  %72 = load i32, i32* %flags.addr, align 4
  %and75 = and i32 %72, 128
  %tobool76 = icmp ne i32 %and75, 0
  br i1 %tobool76, label %land.lhs.true77, label %if.end80

land.lhs.true77:                                  ; preds = %if.then74
  %73 = load i8*, i8** %s, align 8
  %74 = load i8*, i8** %stringarg.addr, align 8
  %cmp78 = icmp ult i8* %73, %74
  br i1 %cmp78, label %if.then79, label %if.end80

if.then79:                                        ; preds = %land.lhs.true77
  br label %phooey

if.end80:                                         ; preds = %land.lhs.true77, %if.then74
  %75 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %lastcloseparen = getelementptr inbounds %struct.regexp, %struct.regexp* %75, i32 0, i32 16
  store i32 0, i32* %lastcloseparen, align 4
  %76 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %lastparen = getelementptr inbounds %struct.regexp, %struct.regexp* %76, i32 0, i32 15
  store i32 0, i32* %lastparen, align 8
  %77 = load i8, i8* %utf8_target, align 1
  %tobool81 = trunc i8 %77 to i1
  br i1 %tobool81, label %cond.true82, label %cond.false85

cond.true82:                                      ; preds = %if.end80
  %78 = load %struct.p5rx*, %struct.p5rx** %rx.addr, align 8
  %call83 = call %struct.regexp* @S_ReANY(%struct.p5rx* %78)
  %extflags84 = getelementptr inbounds %struct.regexp, %struct.regexp* %call83, i32 0, i32 7
  %79 = load i32, i32* %extflags84, align 8
  %or = or i32 %79, 1048576
  store i32 %or, i32* %extflags84, align 8
  br label %cond.end89

cond.false85:                                     ; preds = %if.end80
  %80 = load %struct.p5rx*, %struct.p5rx** %rx.addr, align 8
  %call86 = call %struct.regexp* @S_ReANY(%struct.p5rx* %80)
  %extflags87 = getelementptr inbounds %struct.regexp, %struct.regexp* %call86, i32 0, i32 7
  %81 = load i32, i32* %extflags87, align 8
  %and88 = and i32 %81, -1048577
  store i32 %and88, i32* %extflags87, align 8
  br label %cond.end89

cond.end89:                                       ; preds = %cond.false85, %cond.true82
  %cond90 = phi i32 [ %or, %cond.true82 ], [ %and88, %cond.false85 ]
  %82 = load i8*, i8** %s, align 8
  %83 = load i8*, i8** %strbeg.addr, align 8
  %sub.ptr.lhs.cast91 = ptrtoint i8* %82 to i64
  %sub.ptr.rhs.cast92 = ptrtoint i8* %83 to i64
  %sub.ptr.sub93 = sub i64 %sub.ptr.lhs.cast91, %sub.ptr.rhs.cast92
  %84 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %offs = getelementptr inbounds %struct.regexp, %struct.regexp* %84, i32 0, i32 17
  %85 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %offs, align 8
  %arrayidx = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %85, i64 0
  %start = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %arrayidx, i32 0, i32 0
  store i64 %sub.ptr.sub93, i64* %start, align 8
  %86 = load i8, i8* %utf8_target, align 1
  %tobool94 = trunc i8 %86 to i1
  br i1 %tobool94, label %cond.true95, label %cond.false100

cond.true95:                                      ; preds = %cond.end89
  %87 = load i8*, i8** %s, align 8
  %88 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %minlenret = getelementptr inbounds %struct.regexp, %struct.regexp* %88, i32 0, i32 9
  %89 = load i64, i64* %minlenret, align 8
  %conv = trunc i64 %89 to i32
  %call96 = call i8* @Perl_utf8_hop(i8* %87, i32 %conv)
  %90 = load i8*, i8** %strbeg.addr, align 8
  %sub.ptr.lhs.cast97 = ptrtoint i8* %call96 to i64
  %sub.ptr.rhs.cast98 = ptrtoint i8* %90 to i64
  %sub.ptr.sub99 = sub i64 %sub.ptr.lhs.cast97, %sub.ptr.rhs.cast98
  br label %cond.end106

cond.false100:                                    ; preds = %cond.end89
  %91 = load i8*, i8** %s, align 8
  %92 = load i8*, i8** %strbeg.addr, align 8
  %sub.ptr.lhs.cast101 = ptrtoint i8* %91 to i64
  %sub.ptr.rhs.cast102 = ptrtoint i8* %92 to i64
  %sub.ptr.sub103 = sub i64 %sub.ptr.lhs.cast101, %sub.ptr.rhs.cast102
  %93 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %minlenret104 = getelementptr inbounds %struct.regexp, %struct.regexp* %93, i32 0, i32 9
  %94 = load i64, i64* %minlenret104, align 8
  %add105 = add nsw i64 %sub.ptr.sub103, %94
  br label %cond.end106

cond.end106:                                      ; preds = %cond.false100, %cond.true95
  %cond107 = phi i64 [ %sub.ptr.sub99, %cond.true95 ], [ %add105, %cond.false100 ]
  %95 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %offs108 = getelementptr inbounds %struct.regexp, %struct.regexp* %95, i32 0, i32 17
  %96 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %offs108, align 8
  %arrayidx109 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %96, i64 0
  %end = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %arrayidx109, i32 0, i32 1
  store i64 %cond107, i64* %end, align 8
  %97 = load i32, i32* %flags.addr, align 4
  %and110 = and i32 %97, 16
  %tobool111 = icmp ne i32 %and110, 0
  br i1 %tobool111, label %if.end114, label %if.then112

if.then112:                                       ; preds = %cond.end106
  %98 = load %struct.p5rx*, %struct.p5rx** %rx.addr, align 8
  %99 = load i8*, i8** %strbeg.addr, align 8
  %100 = load i8*, i8** %strend.addr, align 8
  %101 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %102 = load i32, i32* %flags.addr, align 4
  %103 = load i8, i8* %utf8_target, align 1
  %tobool113 = trunc i8 %103 to i1
  call void @S_reg_set_capture_string(%struct.p5rx* %98, i8* %99, i8* %100, %struct.sv* %101, i32 %102, i1 zeroext %tobool113)
  br label %if.end114

if.end114:                                        ; preds = %if.then112, %cond.end106
  store i32 1, i32* %retval, align 4
  br label %return

if.end115:                                        ; preds = %if.end70
  br label %if.end116

if.end116:                                        ; preds = %if.end115, %land.lhs.true63, %if.end60
  %104 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %extflags117 = getelementptr inbounds %struct.regexp, %struct.regexp* %104, i32 0, i32 7
  %105 = load i32, i32* %extflags117, align 8
  %and118 = and i32 %105, 1
  store i32 %and118, i32* %multiline, align 4
  %106 = load i8*, i8** %strend.addr, align 8
  %107 = load i8*, i8** %s, align 8
  %sub.ptr.lhs.cast119 = ptrtoint i8* %106 to i64
  %sub.ptr.rhs.cast120 = ptrtoint i8* %107 to i64
  %sub.ptr.sub121 = sub i64 %sub.ptr.lhs.cast119, %sub.ptr.rhs.cast120
  %108 = load i64, i64* %minlen, align 8
  %109 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs = getelementptr inbounds %struct.regexp, %struct.regexp* %109, i32 0, i32 11
  %110 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs, align 8
  %data122 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %110, i32 0, i32 1
  %arrayidx123 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data122, i64 0, i64 2
  %min_offset = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx123, i32 0, i32 0
  %111 = load i64, i64* %min_offset, align 8
  %cmp124 = icmp slt i64 %111, 0
  br i1 %cmp124, label %cond.true126, label %cond.false131

cond.true126:                                     ; preds = %if.end116
  %112 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs127 = getelementptr inbounds %struct.regexp, %struct.regexp* %112, i32 0, i32 11
  %113 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs127, align 8
  %data128 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %113, i32 0, i32 1
  %arrayidx129 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data128, i64 0, i64 2
  %min_offset130 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx129, i32 0, i32 0
  %114 = load i64, i64* %min_offset130, align 8
  br label %cond.end132

cond.false131:                                    ; preds = %if.end116
  br label %cond.end132

cond.end132:                                      ; preds = %cond.false131, %cond.true126
  %cond133 = phi i64 [ %114, %cond.true126 ], [ 0, %cond.false131 ]
  %add134 = add nsw i64 %108, %cond133
  %cmp135 = icmp slt i64 %sub.ptr.sub121, %add134
  br i1 %cmp135, label %if.then137, label %if.end138

if.then137:                                       ; preds = %cond.end132
  br label %phooey

if.end138:                                        ; preds = %cond.end132
  %115 = load %struct.regexp_internal*, %struct.regexp_internal** %progi, align 8
  %program = getelementptr inbounds %struct.regexp_internal, %struct.regexp_internal* %115, i32 0, i32 6
  %arraydecay = getelementptr inbounds [1 x %struct.regnode], [1 x %struct.regnode]* %program, i64 0, i64 0
  %116 = bitcast %struct.regnode* %arraydecay to i8*
  %117 = load i8, i8* %116, align 4
  %conv139 = zext i8 %117 to i32
  %cmp140 = icmp ne i32 %conv139, 156
  br i1 %cmp140, label %if.then142, label %if.end143

if.then142:                                       ; preds = %if.end138
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.1, i64 0, i64 0))
  br label %if.end143

if.end143:                                        ; preds = %if.then142, %if.end138
  %118 = load %struct.p5rx*, %struct.p5rx** %rx.addr, align 8
  %call144 = call %struct.regexp* @S_ReANY(%struct.p5rx* %118)
  %extflags145 = getelementptr inbounds %struct.regexp, %struct.regexp* %call144, i32 0, i32 7
  %119 = load i32, i32* %extflags145, align 8
  %and146 = and i32 %119, -67108865
  store i32 %and146, i32* %extflags145, align 8
  %120 = load i8, i8* %utf8_target, align 1
  %tobool147 = trunc i8 %120 to i1
  br i1 %tobool147, label %cond.true149, label %cond.false153

cond.true149:                                     ; preds = %if.end143
  %121 = load %struct.p5rx*, %struct.p5rx** %rx.addr, align 8
  %call150 = call %struct.regexp* @S_ReANY(%struct.p5rx* %121)
  %extflags151 = getelementptr inbounds %struct.regexp, %struct.regexp* %call150, i32 0, i32 7
  %122 = load i32, i32* %extflags151, align 8
  %or152 = or i32 %122, 1048576
  store i32 %or152, i32* %extflags151, align 8
  br label %cond.end157

cond.false153:                                    ; preds = %if.end143
  %123 = load %struct.p5rx*, %struct.p5rx** %rx.addr, align 8
  %call154 = call %struct.regexp* @S_ReANY(%struct.p5rx* %123)
  %extflags155 = getelementptr inbounds %struct.regexp, %struct.regexp* %call154, i32 0, i32 7
  %124 = load i32, i32* %extflags155, align 8
  %and156 = and i32 %124, -1048577
  store i32 %and156, i32* %extflags155, align 8
  br label %cond.end157

cond.end157:                                      ; preds = %cond.false153, %cond.true149
  %cond158 = phi i32 [ %or152, %cond.true149 ], [ %and156, %cond.false153 ]
  %125 = load %struct.p5rx*, %struct.p5rx** %rx.addr, align 8
  %126 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %prog159 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %126, i32 0, i32 0
  store %struct.p5rx* %125, %struct.p5rx** %prog159, align 8
  %127 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %intuit = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %127, i32 0, i32 12
  store i8 0, i8* %intuit, align 8
  %128 = load i8, i8* %utf8_target, align 1
  %tobool160 = trunc i8 %128 to i1
  %129 = zext i1 %tobool160 to i64
  %cond162 = select i1 %tobool160, i32 1, i32 0
  %tobool163 = icmp ne i32 %cond162, 0
  %130 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %is_utf8_target = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %130, i32 0, i32 14
  %frombool164 = zext i1 %tobool163 to i8
  store i8 %frombool164, i8* %is_utf8_target, align 2
  %131 = load %struct.p5rx*, %struct.p5rx** %rx.addr, align 8
  %sv_flags165 = getelementptr inbounds %struct.p5rx, %struct.p5rx* %131, i32 0, i32 2
  %132 = load i32, i32* %sv_flags165, align 4
  %and166 = and i32 %132, 536870912
  %tobool167 = icmp ne i32 %and166, 0
  %133 = zext i1 %tobool167 to i64
  %cond168 = select i1 %tobool167, i32 1, i32 0
  %tobool169 = icmp ne i32 %cond168, 0
  %134 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %is_utf8_pat = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %134, i32 0, i32 13
  %frombool170 = zext i1 %tobool169 to i8
  store i8 %frombool170, i8* %is_utf8_pat, align 1
  %135 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %warned = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %135, i32 0, i32 15
  store i8 0, i8* %warned, align 1
  %136 = load i8*, i8** %strbeg.addr, align 8
  %137 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %strbeg171 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %137, i32 0, i32 1
  store i8* %136, i8** %strbeg171, align 8
  %138 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %139 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %sv172 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %139, i32 0, i32 4
  store %struct.sv* %138, %struct.sv** %sv172, align 8
  %140 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %poscache_maxiter = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %140, i32 0, i32 9
  store i32 0, i32* %poscache_maxiter, align 8
  %141 = load i8*, i8** %strend.addr, align 8
  %142 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %strend173 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %142, i32 0, i32 2
  store i8* %141, i8** %strend173, align 8
  %143 = load i8*, i8** %stringarg.addr, align 8
  %144 = load i64, i64* %minend.addr, align 8
  %add.ptr174 = getelementptr inbounds i8, i8* %143, i64 %144
  %145 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %till = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %145, i32 0, i32 3
  store i8* %add.ptr174, i8** %till, align 8
  %146 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %extflags175 = getelementptr inbounds %struct.regexp, %struct.regexp* %146, i32 0, i32 7
  %147 = load i32, i32* %extflags175, align 8
  %and176 = and i32 %147, 131072
  %tobool177 = icmp ne i32 %and176, 0
  br i1 %tobool177, label %land.lhs.true178, label %if.end194

land.lhs.true178:                                 ; preds = %cond.end157
  %148 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_flags179 = getelementptr inbounds %struct.sv, %struct.sv* %148, i32 0, i32 2
  %149 = load i32, i32* %sv_flags179, align 4
  %and180 = and i32 %149, 131072
  %tobool181 = icmp ne i32 %and180, 0
  br i1 %tobool181, label %if.then182, label %if.end194

if.then182:                                       ; preds = %land.lhs.true178
  %call183 = call %struct.sv* @Perl_newSV(i64 0)
  %150 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %sv184 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %150, i32 0, i32 4
  store %struct.sv* %call183, %struct.sv** %sv184, align 8
  br label %do.body

do.body:                                          ; preds = %if.then182
  %151 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %sv185 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %151, i32 0, i32 4
  %152 = load %struct.sv*, %struct.sv** %sv185, align 8
  %153 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %cmp186 = icmp ne %struct.sv* %152, %153
  br i1 %cmp186, label %cond.true188, label %cond.false189

cond.true188:                                     ; preds = %do.body
  br i1 true, label %if.then190, label %if.end192

cond.false189:                                    ; preds = %do.body
  br i1 false, label %if.then190, label %if.end192

if.then190:                                       ; preds = %cond.false189, %cond.true188
  %154 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %sv191 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %154, i32 0, i32 4
  %155 = load %struct.sv*, %struct.sv** %sv191, align 8
  %156 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  call void @Perl_sv_setsv_flags(%struct.sv* %155, %struct.sv* %156, i32 1554)
  br label %if.end192

if.end192:                                        ; preds = %if.then190, %cond.false189, %cond.true188
  br label %do.end

do.end:                                           ; preds = %if.end192
  %157 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %sv193 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %157, i32 0, i32 4
  %158 = load %struct.sv*, %struct.sv** %sv193, align 8
  %159 = bitcast %struct.sv* %158 to i8*
  %160 = bitcast i8* %159 to %struct.sv*
  %161 = bitcast %struct.sv* %160 to i8*
  call void @Perl_save_pushptr(i8* %161, i32 11)
  br label %if.end194

if.end194:                                        ; preds = %do.end, %land.lhs.true178, %cond.end157
  %162 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %extflags195 = getelementptr inbounds %struct.regexp, %struct.regexp* %162, i32 0, i32 7
  %163 = load i32, i32* %extflags195, align 8
  %and196 = and i32 %163, 131072
  %tobool197 = icmp ne i32 %and196, 0
  %164 = zext i1 %tobool197 to i64
  %cond198 = select i1 %tobool197, i32 2, i32 1
  store i32 %cond198, i32* %max, align 4
  %165 = load %struct.regmatch_slab*, %struct.regmatch_slab** @PL_regmatch_slab, align 8
  %tobool199 = icmp ne %struct.regmatch_slab* %165, null
  br i1 %tobool199, label %if.end203, label %if.then200

if.then200:                                       ; preds = %if.end194
  %call201 = call i8* @Perl_safesysmalloc(i64 3976)
  %166 = bitcast i8* %call201 to %struct.regmatch_slab*
  store %struct.regmatch_slab* %166, %struct.regmatch_slab** @PL_regmatch_slab, align 8
  %167 = load %struct.regmatch_slab*, %struct.regmatch_slab** @PL_regmatch_slab, align 8
  %prev = getelementptr inbounds %struct.regmatch_slab, %struct.regmatch_slab* %167, i32 0, i32 1
  store %struct.regmatch_slab* null, %struct.regmatch_slab** %prev, align 8
  %168 = load %struct.regmatch_slab*, %struct.regmatch_slab** @PL_regmatch_slab, align 8
  %next = getelementptr inbounds %struct.regmatch_slab, %struct.regmatch_slab* %168, i32 0, i32 2
  store %struct.regmatch_slab* null, %struct.regmatch_slab** %next, align 8
  %169 = load %struct.regmatch_slab*, %struct.regmatch_slab** @PL_regmatch_slab, align 8
  %states = getelementptr inbounds %struct.regmatch_slab, %struct.regmatch_slab* %169, i32 0, i32 0
  %arrayidx202 = getelementptr inbounds [33 x %struct.regmatch_state], [33 x %struct.regmatch_state]* %states, i64 0, i64 0
  store %struct.regmatch_state* %arrayidx202, %struct.regmatch_state** @PL_regmatch_state, align 8
  br label %if.end203

if.end203:                                        ; preds = %if.then200, %if.end194
  %170 = load %struct.regmatch_state*, %struct.regmatch_state** @PL_regmatch_state, align 8
  store %struct.regmatch_state* %170, %struct.regmatch_state** %old_regmatch_state, align 8
  %171 = load %struct.regmatch_slab*, %struct.regmatch_slab** @PL_regmatch_slab, align 8
  store %struct.regmatch_slab* %171, %struct.regmatch_slab** %old_regmatch_slab, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end203
  %172 = load i32, i32* %i, align 4
  %173 = load i32, i32* %max, align 4
  %cmp204 = icmp sle i32 %172, %173
  br i1 %cmp204, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %174 = load i32, i32* %i, align 4
  %cmp206 = icmp eq i32 %174, 1
  br i1 %cmp206, label %if.then208, label %if.else210

if.then208:                                       ; preds = %for.body
  %175 = load %struct.regmatch_state*, %struct.regmatch_state** @PL_regmatch_state, align 8
  %u = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %175, i32 0, i32 2
  %info_aux = bitcast %union.anon.19* %u to %struct.regmatch_info_aux*
  %176 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %info_aux209 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %176, i32 0, i32 7
  store %struct.regmatch_info_aux* %info_aux, %struct.regmatch_info_aux** %info_aux209, align 8
  br label %if.end219

if.else210:                                       ; preds = %for.body
  %177 = load i32, i32* %i, align 4
  %cmp211 = icmp eq i32 %177, 2
  br i1 %cmp211, label %if.then213, label %if.end218

if.then213:                                       ; preds = %if.else210
  %178 = load %struct.regmatch_state*, %struct.regmatch_state** @PL_regmatch_state, align 8
  %u214 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %178, i32 0, i32 2
  %info_aux_eval = bitcast %union.anon.19* %u214 to %struct.regmatch_info_aux_eval*
  %179 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %info_aux215 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %179, i32 0, i32 7
  %180 = load %struct.regmatch_info_aux*, %struct.regmatch_info_aux** %info_aux215, align 8
  %info_aux_eval216 = getelementptr inbounds %struct.regmatch_info_aux, %struct.regmatch_info_aux* %180, i32 0, i32 0
  store %struct.regmatch_info_aux_eval* %info_aux_eval, %struct.regmatch_info_aux_eval** %info_aux_eval216, align 8
  %181 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %info_aux_eval217 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %181, i32 0, i32 8
  store %struct.regmatch_info_aux_eval* %info_aux_eval, %struct.regmatch_info_aux_eval** %info_aux_eval217, align 8
  br label %if.end218

if.end218:                                        ; preds = %if.then213, %if.else210
  br label %if.end219

if.end219:                                        ; preds = %if.end218, %if.then208
  %182 = load %struct.regmatch_state*, %struct.regmatch_state** @PL_regmatch_state, align 8
  %incdec.ptr = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %182, i32 1
  store %struct.regmatch_state* %incdec.ptr, %struct.regmatch_state** @PL_regmatch_state, align 8
  %183 = load %struct.regmatch_slab*, %struct.regmatch_slab** @PL_regmatch_slab, align 8
  %states220 = getelementptr inbounds %struct.regmatch_slab, %struct.regmatch_slab* %183, i32 0, i32 0
  %arrayidx221 = getelementptr inbounds [33 x %struct.regmatch_state], [33 x %struct.regmatch_state]* %states220, i64 0, i64 32
  %cmp222 = icmp ugt %struct.regmatch_state* %incdec.ptr, %arrayidx221
  br i1 %cmp222, label %if.then224, label %if.end226

if.then224:                                       ; preds = %if.end219
  %call225 = call %struct.regmatch_state* @S_push_slab()
  store %struct.regmatch_state* %call225, %struct.regmatch_state** @PL_regmatch_state, align 8
  br label %if.end226

if.end226:                                        ; preds = %if.then224, %if.end219
  br label %for.inc

for.inc:                                          ; preds = %if.end226
  %184 = load i32, i32* %i, align 4
  %inc = add nsw i32 %184, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %185 = load %struct.regmatch_state*, %struct.regmatch_state** %old_regmatch_state, align 8
  %186 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %info_aux227 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %186, i32 0, i32 7
  %187 = load %struct.regmatch_info_aux*, %struct.regmatch_info_aux** %info_aux227, align 8
  %old_regmatch_state228 = getelementptr inbounds %struct.regmatch_info_aux, %struct.regmatch_info_aux* %187, i32 0, i32 1
  store %struct.regmatch_state* %185, %struct.regmatch_state** %old_regmatch_state228, align 8
  %188 = load %struct.regmatch_slab*, %struct.regmatch_slab** %old_regmatch_slab, align 8
  %189 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %info_aux229 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %189, i32 0, i32 7
  %190 = load %struct.regmatch_info_aux*, %struct.regmatch_info_aux** %info_aux229, align 8
  %old_regmatch_slab230 = getelementptr inbounds %struct.regmatch_info_aux, %struct.regmatch_info_aux* %190, i32 0, i32 2
  store %struct.regmatch_slab* %188, %struct.regmatch_slab** %old_regmatch_slab230, align 8
  %191 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %info_aux231 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %191, i32 0, i32 7
  %192 = load %struct.regmatch_info_aux*, %struct.regmatch_info_aux** %info_aux231, align 8
  %poscache = getelementptr inbounds %struct.regmatch_info_aux, %struct.regmatch_info_aux* %192, i32 0, i32 3
  store i8* null, i8** %poscache, align 8
  %193 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %info_aux232 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %193, i32 0, i32 7
  %194 = load %struct.regmatch_info_aux*, %struct.regmatch_info_aux** %info_aux232, align 8
  %195 = bitcast %struct.regmatch_info_aux* %194 to i8*
  call void @Perl_save_destructor_x(void (i8*)* @S_cleanup_regmatch_info_aux, i8* %195)
  %196 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %extflags233 = getelementptr inbounds %struct.regexp, %struct.regexp* %196, i32 0, i32 7
  %197 = load i32, i32* %extflags233, align 8
  %and234 = and i32 %197, 131072
  %tobool235 = icmp ne i32 %and234, 0
  br i1 %tobool235, label %if.then236, label %if.else237

if.then236:                                       ; preds = %for.end
  %198 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  call void @S_setup_eval_state(%struct.regmatch_info* %198)
  br label %if.end241

if.else237:                                       ; preds = %for.end
  %199 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %info_aux238 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %199, i32 0, i32 7
  %200 = load %struct.regmatch_info_aux*, %struct.regmatch_info_aux** %info_aux238, align 8
  %info_aux_eval239 = getelementptr inbounds %struct.regmatch_info_aux, %struct.regmatch_info_aux* %200, i32 0, i32 0
  store %struct.regmatch_info_aux_eval* null, %struct.regmatch_info_aux_eval** %info_aux_eval239, align 8
  %201 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %info_aux_eval240 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %201, i32 0, i32 8
  store %struct.regmatch_info_aux_eval* null, %struct.regmatch_info_aux_eval** %info_aux_eval240, align 8
  br label %if.end241

if.end241:                                        ; preds = %if.else237, %if.then236
  %202 = load %struct.pmop*, %struct.pmop** @PL_curpm, align 8
  %tobool242 = icmp ne %struct.pmop* %202, null
  br i1 %tobool242, label %land.lhs.true243, label %if.end252

land.lhs.true243:                                 ; preds = %if.end241
  %203 = load %struct.pmop*, %struct.pmop** @PL_curpm, align 8
  %op_pmregexp = getelementptr inbounds %struct.pmop, %struct.pmop* %203, i32 0, i32 9
  %204 = load %struct.p5rx*, %struct.p5rx** %op_pmregexp, align 8
  %205 = load %struct.p5rx*, %struct.p5rx** %rx.addr, align 8
  %cmp244 = icmp eq %struct.p5rx* %204, %205
  br i1 %cmp244, label %if.then246, label %if.end252

if.then246:                                       ; preds = %land.lhs.true243
  %206 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %offs247 = getelementptr inbounds %struct.regexp, %struct.regexp* %206, i32 0, i32 17
  %207 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %offs247, align 8
  store %struct.regexp_paren_pair* %207, %struct.regexp_paren_pair** %swap, align 8
  %208 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %nparens = getelementptr inbounds %struct.regexp, %struct.regexp* %208, i32 0, i32 12
  %209 = load i32, i32* %nparens, align 8
  %add248 = add i32 %209, 1
  %conv249 = zext i32 %add248 to i64
  %call250 = call i8* @Perl_safesyscalloc(i64 %conv249, i64 24)
  %210 = bitcast i8* %call250 to %struct.regexp_paren_pair*
  %211 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %offs251 = getelementptr inbounds %struct.regexp, %struct.regexp* %211, i32 0, i32 17
  store %struct.regexp_paren_pair* %210, %struct.regexp_paren_pair** %offs251, align 8
  br label %if.end252

if.end252:                                        ; preds = %if.then246, %land.lhs.true243, %if.end241
  %212 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %intflags253 = getelementptr inbounds %struct.regexp, %struct.regexp* %212, i32 0, i32 13
  %213 = load i32, i32* %intflags253, align 4
  %and254 = and i32 %213, 3072
  %tobool255 = icmp ne i32 %and254, 0
  br i1 %tobool255, label %if.then256, label %if.end309

if.then256:                                       ; preds = %if.end252
  %214 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %call258 = call i32 @S_regtry(%struct.regmatch_info* %214, i8** %s)
  %tobool259 = icmp ne i32 %call258, 0
  br i1 %tobool259, label %if.then260, label %if.end261

if.then260:                                       ; preds = %if.then256
  br label %got_it

if.end261:                                        ; preds = %if.then256
  %215 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %intflags262 = getelementptr inbounds %struct.regexp, %struct.regexp* %215, i32 0, i32 13
  %216 = load i32, i32* %intflags262, align 4
  %and263 = and i32 %216, 1024
  %tobool264 = icmp ne i32 %and263, 0
  br i1 %tobool264, label %if.end266, label %if.then265

if.then265:                                       ; preds = %if.end261
  br label %phooey

if.end266:                                        ; preds = %if.end261
  %217 = load i64, i64* %minlen, align 8
  %tobool267 = icmp ne i64 %217, 0
  br i1 %tobool267, label %if.then268, label %if.end269

if.then268:                                       ; preds = %if.end266
  %218 = load i64, i64* %minlen, align 8
  %sub = sub nsw i64 %218, 1
  store i64 %sub, i64* %dontbother, align 8
  br label %if.end269

if.end269:                                        ; preds = %if.then268, %if.end266
  %219 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %is_utf8_target270 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %219, i32 0, i32 14
  %220 = load i8, i8* %is_utf8_target270, align 2
  %tobool271 = trunc i8 %220 to i1
  br i1 %tobool271, label %cond.true273, label %cond.false276

cond.true273:                                     ; preds = %if.end269
  %221 = load i8*, i8** %strend.addr, align 8
  %222 = load i64, i64* %dontbother, align 8
  %sub274 = sub nsw i64 0, %222
  %223 = load i8*, i8** %strbeg.addr, align 8
  %call275 = call i8* @S_reghop3(i8* %221, i64 %sub274, i8* %223)
  br label %cond.end279

cond.false276:                                    ; preds = %if.end269
  %224 = load i8*, i8** %strend.addr, align 8
  %225 = load i64, i64* %dontbother, align 8
  %sub277 = sub nsw i64 0, %225
  %add.ptr278 = getelementptr inbounds i8, i8* %224, i64 %sub277
  br label %cond.end279

cond.end279:                                      ; preds = %cond.false276, %cond.true273
  %cond280 = phi i8* [ %call275, %cond.true273 ], [ %add.ptr278, %cond.false276 ]
  %add.ptr281 = getelementptr inbounds i8, i8* %cond280, i64 -1
  store i8* %add.ptr281, i8** %end257, align 8
  br label %while.cond

while.cond:                                       ; preds = %if.end308, %if.then288, %cond.end279
  %226 = load i8*, i8** %s, align 8
  %227 = load i8*, i8** %end257, align 8
  %cmp282 = icmp ule i8* %226, %227
  br i1 %cmp282, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %228 = load i8*, i8** %s, align 8
  %incdec.ptr284 = getelementptr inbounds i8, i8* %228, i32 1
  store i8* %incdec.ptr284, i8** %s, align 8
  %229 = load i8, i8* %228, align 1
  %conv285 = sext i8 %229 to i32
  %cmp286 = icmp ne i32 %conv285, 10
  br i1 %cmp286, label %if.then288, label %if.end289

if.then288:                                       ; preds = %while.body
  br label %while.cond

if.end289:                                        ; preds = %while.body
  %230 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs290 = getelementptr inbounds %struct.regexp, %struct.regexp* %230, i32 0, i32 11
  %231 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs290, align 8
  %data291 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %231, i32 0, i32 1
  %arrayidx292 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data291, i64 0, i64 2
  %substr = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx292, i32 0, i32 2
  %232 = load %struct.sv*, %struct.sv** %substr, align 8
  %tobool293 = icmp ne %struct.sv* %232, null
  br i1 %tobool293, label %if.then299, label %lor.lhs.false294

lor.lhs.false294:                                 ; preds = %if.end289
  %233 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs295 = getelementptr inbounds %struct.regexp, %struct.regexp* %233, i32 0, i32 11
  %234 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs295, align 8
  %data296 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %234, i32 0, i32 1
  %arrayidx297 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data296, i64 0, i64 2
  %utf8_substr = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx297, i32 0, i32 3
  %235 = load %struct.sv*, %struct.sv** %utf8_substr, align 8
  %tobool298 = icmp ne %struct.sv* %235, null
  br i1 %tobool298, label %if.then299, label %if.end304

if.then299:                                       ; preds = %lor.lhs.false294, %if.end289
  %236 = load %struct.p5rx*, %struct.p5rx** %rx.addr, align 8
  %237 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %238 = load i8*, i8** %strbeg.addr, align 8
  %239 = load i8*, i8** %s, align 8
  %240 = load i8*, i8** %strend.addr, align 8
  %241 = load i32, i32* %flags.addr, align 4
  %call300 = call i8* @Perl_re_intuit_start(%struct.p5rx* %236, %struct.sv* %237, i8* %238, i8* %239, i8* %240, i32 %241, %struct.re_scream_pos_data_s* null)
  store i8* %call300, i8** %s, align 8
  %242 = load i8*, i8** %s, align 8
  %tobool301 = icmp ne i8* %242, null
  br i1 %tobool301, label %if.end303, label %if.then302

if.then302:                                       ; preds = %if.then299
  br label %phooey

if.end303:                                        ; preds = %if.then299
  br label %if.end304

if.end304:                                        ; preds = %if.end303, %lor.lhs.false294
  %243 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %call305 = call i32 @S_regtry(%struct.regmatch_info* %243, i8** %s)
  %tobool306 = icmp ne i32 %call305, 0
  br i1 %tobool306, label %if.then307, label %if.end308

if.then307:                                       ; preds = %if.end304
  br label %got_it

if.end308:                                        ; preds = %if.end304
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %phooey

if.end309:                                        ; preds = %if.end252
  %244 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %intflags310 = getelementptr inbounds %struct.regexp, %struct.regexp* %244, i32 0, i32 13
  %245 = load i32, i32* %intflags310, align 4
  %and311 = and i32 %245, 4096
  %tobool312 = icmp ne i32 %and311, 0
  br i1 %tobool312, label %if.then313, label %if.end321

if.then313:                                       ; preds = %if.end309
  %246 = load i8*, i8** %s, align 8
  %247 = load i8*, i8** %startpos, align 8
  %cmp314 = icmp eq i8* %246, %247
  br i1 %cmp314, label %land.lhs.true316, label %if.end320

land.lhs.true316:                                 ; preds = %if.then313
  %248 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %call317 = call i32 @S_regtry(%struct.regmatch_info* %248, i8** %s)
  %tobool318 = icmp ne i32 %call317, 0
  br i1 %tobool318, label %if.then319, label %if.end320

if.then319:                                       ; preds = %land.lhs.true316
  br label %got_it

if.end320:                                        ; preds = %land.lhs.true316, %if.then313
  br label %phooey

if.end321:                                        ; preds = %if.end309
  %249 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs322 = getelementptr inbounds %struct.regexp, %struct.regexp* %249, i32 0, i32 11
  %250 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs322, align 8
  %data323 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %250, i32 0, i32 1
  %arrayidx324 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data323, i64 0, i64 0
  %substr325 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx324, i32 0, i32 2
  %251 = load %struct.sv*, %struct.sv** %substr325, align 8
  %tobool326 = icmp ne %struct.sv* %251, null
  br i1 %tobool326, label %land.lhs.true333, label %lor.lhs.false327

lor.lhs.false327:                                 ; preds = %if.end321
  %252 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs328 = getelementptr inbounds %struct.regexp, %struct.regexp* %252, i32 0, i32 11
  %253 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs328, align 8
  %data329 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %253, i32 0, i32 1
  %arrayidx330 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data329, i64 0, i64 0
  %utf8_substr331 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx330, i32 0, i32 3
  %254 = load %struct.sv*, %struct.sv** %utf8_substr331, align 8
  %tobool332 = icmp ne %struct.sv* %254, null
  br i1 %tobool332, label %land.lhs.true333, label %if.else443

land.lhs.true333:                                 ; preds = %lor.lhs.false327, %if.end321
  %255 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %intflags334 = getelementptr inbounds %struct.regexp, %struct.regexp* %255, i32 0, i32 13
  %256 = load i32, i32* %intflags334, align 4
  %and335 = and i32 %256, 1
  %tobool336 = icmp ne i32 %and335, 0
  br i1 %tobool336, label %if.then337, label %if.else443

if.then337:                                       ; preds = %land.lhs.true333
  %257 = load i8, i8* %utf8_target, align 1
  %tobool338 = trunc i8 %257 to i1
  br i1 %tobool338, label %if.then339, label %if.else390

if.then339:                                       ; preds = %if.then337
  %258 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs340 = getelementptr inbounds %struct.regexp, %struct.regexp* %258, i32 0, i32 11
  %259 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs340, align 8
  %data341 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %259, i32 0, i32 1
  %arrayidx342 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data341, i64 0, i64 0
  %utf8_substr343 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx342, i32 0, i32 3
  %260 = load %struct.sv*, %struct.sv** %utf8_substr343, align 8
  %tobool344 = icmp ne %struct.sv* %260, null
  br i1 %tobool344, label %if.end346, label %if.then345

if.then345:                                       ; preds = %if.then339
  %261 = load %struct.regexp*, %struct.regexp** %prog, align 8
  call void @S_to_utf8_substr(%struct.regexp* %261)
  br label %if.end346

if.end346:                                        ; preds = %if.then345, %if.then339
  %262 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs347 = getelementptr inbounds %struct.regexp, %struct.regexp* %262, i32 0, i32 11
  %263 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs347, align 8
  %data348 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %263, i32 0, i32 1
  %arrayidx349 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data348, i64 0, i64 0
  %utf8_substr350 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx349, i32 0, i32 3
  %264 = load %struct.sv*, %struct.sv** %utf8_substr350, align 8
  %sv_u = getelementptr inbounds %struct.sv, %struct.sv* %264, i32 0, i32 3
  %svu_pv = bitcast %union.anon* %sv_u to i8**
  %265 = load i8*, i8** %svu_pv, align 8
  %add.ptr351 = getelementptr inbounds i8, i8* %265, i64 0
  %arrayidx352 = getelementptr inbounds i8, i8* %add.ptr351, i64 0
  %266 = load i8, i8* %arrayidx352, align 1
  store i8 %266, i8* %ch, align 1
  br label %do.body353

do.body353:                                       ; preds = %if.end346
  br label %while.cond354

while.cond354:                                    ; preds = %if.end386, %do.body353
  %267 = load i8*, i8** %s, align 8
  %268 = load i8*, i8** %strend.addr, align 8
  %cmp355 = icmp ult i8* %267, %268
  br i1 %cmp355, label %while.body357, label %while.end388

while.body357:                                    ; preds = %while.cond354
  %269 = load i8*, i8** %s, align 8
  %270 = load i8, i8* %269, align 1
  %conv358 = sext i8 %270 to i32
  %271 = load i8, i8* %ch, align 1
  %conv359 = sext i8 %271 to i32
  %cmp360 = icmp eq i32 %conv358, %conv359
  br i1 %cmp360, label %if.then362, label %if.end386

if.then362:                                       ; preds = %while.body357
  %272 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %call363 = call i32 @S_regtry(%struct.regmatch_info* %272, i8** %s)
  %tobool364 = icmp ne i32 %call363, 0
  br i1 %tobool364, label %if.then365, label %if.end366

if.then365:                                       ; preds = %if.then362
  br label %got_it

if.end366:                                        ; preds = %if.then362
  %273 = load i8*, i8** %s, align 8
  %274 = load i8, i8* %273, align 1
  %idxprom = zext i8 %274 to i64
  %arrayidx367 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom
  %275 = load i8, i8* %arrayidx367, align 1
  %conv368 = zext i8 %275 to i32
  %276 = load i8*, i8** %s, align 8
  %idx.ext = sext i32 %conv368 to i64
  %add.ptr369 = getelementptr inbounds i8, i8* %276, i64 %idx.ext
  store i8* %add.ptr369, i8** %s, align 8
  br label %while.cond370

while.cond370:                                    ; preds = %while.body379, %if.end366
  %277 = load i8*, i8** %s, align 8
  %278 = load i8*, i8** %strend.addr, align 8
  %cmp371 = icmp ult i8* %277, %278
  br i1 %cmp371, label %land.rhs373, label %land.end378

land.rhs373:                                      ; preds = %while.cond370
  %279 = load i8*, i8** %s, align 8
  %280 = load i8, i8* %279, align 1
  %conv374 = sext i8 %280 to i32
  %281 = load i8, i8* %ch, align 1
  %conv375 = sext i8 %281 to i32
  %cmp376 = icmp eq i32 %conv374, %conv375
  br label %land.end378

land.end378:                                      ; preds = %land.rhs373, %while.cond370
  %282 = phi i1 [ false, %while.cond370 ], [ %cmp376, %land.rhs373 ]
  br i1 %282, label %while.body379, label %while.end385

while.body379:                                    ; preds = %land.end378
  %283 = load i8*, i8** %s, align 8
  %284 = load i8, i8* %283, align 1
  %idxprom380 = zext i8 %284 to i64
  %arrayidx381 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom380
  %285 = load i8, i8* %arrayidx381, align 1
  %conv382 = zext i8 %285 to i32
  %286 = load i8*, i8** %s, align 8
  %idx.ext383 = sext i32 %conv382 to i64
  %add.ptr384 = getelementptr inbounds i8, i8* %286, i64 %idx.ext383
  store i8* %add.ptr384, i8** %s, align 8
  br label %while.cond370

while.end385:                                     ; preds = %land.end378
  br label %if.end386

if.end386:                                        ; preds = %while.end385, %while.body357
  %287 = load i8*, i8** %s, align 8
  %incdec.ptr387 = getelementptr inbounds i8, i8* %287, i32 1
  store i8* %incdec.ptr387, i8** %s, align 8
  br label %while.cond354

while.end388:                                     ; preds = %while.cond354
  br label %do.end389

do.end389:                                        ; preds = %while.end388
  br label %if.end442

if.else390:                                       ; preds = %if.then337
  %288 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs391 = getelementptr inbounds %struct.regexp, %struct.regexp* %288, i32 0, i32 11
  %289 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs391, align 8
  %data392 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %289, i32 0, i32 1
  %arrayidx393 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data392, i64 0, i64 0
  %substr394 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx393, i32 0, i32 2
  %290 = load %struct.sv*, %struct.sv** %substr394, align 8
  %tobool395 = icmp ne %struct.sv* %290, null
  br i1 %tobool395, label %if.end402, label %if.then396

if.then396:                                       ; preds = %if.else390
  %291 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %call397 = call zeroext i1 @S_to_byte_substr(%struct.regexp* %291)
  br i1 %call397, label %if.end401, label %if.then398

if.then398:                                       ; preds = %if.then396
  br label %do.body399

do.body399:                                       ; preds = %if.then398
  br label %phooey

do.end400:                                        ; No predecessors!
  br label %if.end401

if.end401:                                        ; preds = %do.end400, %if.then396
  br label %if.end402

if.end402:                                        ; preds = %if.end401, %if.else390
  %292 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs403 = getelementptr inbounds %struct.regexp, %struct.regexp* %292, i32 0, i32 11
  %293 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs403, align 8
  %data404 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %293, i32 0, i32 1
  %arrayidx405 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data404, i64 0, i64 0
  %substr406 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx405, i32 0, i32 2
  %294 = load %struct.sv*, %struct.sv** %substr406, align 8
  %sv_u407 = getelementptr inbounds %struct.sv, %struct.sv* %294, i32 0, i32 3
  %svu_pv408 = bitcast %union.anon* %sv_u407 to i8**
  %295 = load i8*, i8** %svu_pv408, align 8
  %add.ptr409 = getelementptr inbounds i8, i8* %295, i64 0
  %arrayidx410 = getelementptr inbounds i8, i8* %add.ptr409, i64 0
  %296 = load i8, i8* %arrayidx410, align 1
  store i8 %296, i8* %ch, align 1
  br label %do.body411

do.body411:                                       ; preds = %if.end402
  br label %while.cond412

while.cond412:                                    ; preds = %if.end438, %do.body411
  %297 = load i8*, i8** %s, align 8
  %298 = load i8*, i8** %strend.addr, align 8
  %cmp413 = icmp ult i8* %297, %298
  br i1 %cmp413, label %while.body415, label %while.end440

while.body415:                                    ; preds = %while.cond412
  %299 = load i8*, i8** %s, align 8
  %300 = load i8, i8* %299, align 1
  %conv416 = sext i8 %300 to i32
  %301 = load i8, i8* %ch, align 1
  %conv417 = sext i8 %301 to i32
  %cmp418 = icmp eq i32 %conv416, %conv417
  br i1 %cmp418, label %if.then420, label %if.end438

if.then420:                                       ; preds = %while.body415
  %302 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %call421 = call i32 @S_regtry(%struct.regmatch_info* %302, i8** %s)
  %tobool422 = icmp ne i32 %call421, 0
  br i1 %tobool422, label %if.then423, label %if.end424

if.then423:                                       ; preds = %if.then420
  br label %got_it

if.end424:                                        ; preds = %if.then420
  %303 = load i8*, i8** %s, align 8
  %incdec.ptr425 = getelementptr inbounds i8, i8* %303, i32 1
  store i8* %incdec.ptr425, i8** %s, align 8
  br label %while.cond426

while.cond426:                                    ; preds = %while.body435, %if.end424
  %304 = load i8*, i8** %s, align 8
  %305 = load i8*, i8** %strend.addr, align 8
  %cmp427 = icmp ult i8* %304, %305
  br i1 %cmp427, label %land.rhs429, label %land.end434

land.rhs429:                                      ; preds = %while.cond426
  %306 = load i8*, i8** %s, align 8
  %307 = load i8, i8* %306, align 1
  %conv430 = sext i8 %307 to i32
  %308 = load i8, i8* %ch, align 1
  %conv431 = sext i8 %308 to i32
  %cmp432 = icmp eq i32 %conv430, %conv431
  br label %land.end434

land.end434:                                      ; preds = %land.rhs429, %while.cond426
  %309 = phi i1 [ false, %while.cond426 ], [ %cmp432, %land.rhs429 ]
  br i1 %309, label %while.body435, label %while.end437

while.body435:                                    ; preds = %land.end434
  %310 = load i8*, i8** %s, align 8
  %incdec.ptr436 = getelementptr inbounds i8, i8* %310, i32 1
  store i8* %incdec.ptr436, i8** %s, align 8
  br label %while.cond426

while.end437:                                     ; preds = %land.end434
  br label %if.end438

if.end438:                                        ; preds = %while.end437, %while.body415
  %311 = load i8*, i8** %s, align 8
  %incdec.ptr439 = getelementptr inbounds i8, i8* %311, i32 1
  store i8* %incdec.ptr439, i8** %s, align 8
  br label %while.cond412

while.end440:                                     ; preds = %while.cond412
  br label %do.end441

do.end441:                                        ; preds = %while.end440
  br label %if.end442

if.end442:                                        ; preds = %do.end441, %do.end389
  br label %if.end1019

if.else443:                                       ; preds = %land.lhs.true333, %lor.lhs.false327
  %312 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs444 = getelementptr inbounds %struct.regexp, %struct.regexp* %312, i32 0, i32 11
  %313 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs444, align 8
  %data445 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %313, i32 0, i32 1
  %arrayidx446 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data445, i64 0, i64 0
  %substr447 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx446, i32 0, i32 2
  %314 = load %struct.sv*, %struct.sv** %substr447, align 8
  %cmp448 = icmp ne %struct.sv* %314, null
  br i1 %cmp448, label %if.then480, label %lor.lhs.false450

lor.lhs.false450:                                 ; preds = %if.else443
  %315 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs451 = getelementptr inbounds %struct.regexp, %struct.regexp* %315, i32 0, i32 11
  %316 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs451, align 8
  %data452 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %316, i32 0, i32 1
  %arrayidx453 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data452, i64 0, i64 0
  %utf8_substr454 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx453, i32 0, i32 3
  %317 = load %struct.sv*, %struct.sv** %utf8_substr454, align 8
  %cmp455 = icmp ne %struct.sv* %317, null
  br i1 %cmp455, label %if.then480, label %lor.lhs.false457

lor.lhs.false457:                                 ; preds = %lor.lhs.false450
  %318 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs458 = getelementptr inbounds %struct.regexp, %struct.regexp* %318, i32 0, i32 11
  %319 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs458, align 8
  %data459 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %319, i32 0, i32 1
  %arrayidx460 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data459, i64 0, i64 1
  %substr461 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx460, i32 0, i32 2
  %320 = load %struct.sv*, %struct.sv** %substr461, align 8
  %cmp462 = icmp ne %struct.sv* %320, null
  br i1 %cmp462, label %land.lhs.true471, label %lor.lhs.false464

lor.lhs.false464:                                 ; preds = %lor.lhs.false457
  %321 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs465 = getelementptr inbounds %struct.regexp, %struct.regexp* %321, i32 0, i32 11
  %322 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs465, align 8
  %data466 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %322, i32 0, i32 1
  %arrayidx467 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data466, i64 0, i64 1
  %utf8_substr468 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx467, i32 0, i32 3
  %323 = load %struct.sv*, %struct.sv** %utf8_substr468, align 8
  %cmp469 = icmp ne %struct.sv* %323, null
  br i1 %cmp469, label %land.lhs.true471, label %if.else812

land.lhs.true471:                                 ; preds = %lor.lhs.false464, %lor.lhs.false457
  %324 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs472 = getelementptr inbounds %struct.regexp, %struct.regexp* %324, i32 0, i32 11
  %325 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs472, align 8
  %data473 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %325, i32 0, i32 1
  %arrayidx474 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data473, i64 0, i64 1
  %max_offset = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx474, i32 0, i32 1
  %326 = load i64, i64* %max_offset, align 8
  %327 = load i8*, i8** %strend.addr, align 8
  %328 = load i8*, i8** %s, align 8
  %sub.ptr.lhs.cast475 = ptrtoint i8* %327 to i64
  %sub.ptr.rhs.cast476 = ptrtoint i8* %328 to i64
  %sub.ptr.sub477 = sub i64 %sub.ptr.lhs.cast475, %sub.ptr.rhs.cast476
  %cmp478 = icmp slt i64 %326, %sub.ptr.sub477
  br i1 %cmp478, label %if.then480, label %if.else812

if.then480:                                       ; preds = %land.lhs.true471, %lor.lhs.false450, %if.else443
  %329 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs481 = getelementptr inbounds %struct.regexp, %struct.regexp* %329, i32 0, i32 11
  %330 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs481, align 8
  %data482 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %330, i32 0, i32 1
  %arrayidx483 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data482, i64 0, i64 0
  %substr484 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx483, i32 0, i32 2
  %331 = load %struct.sv*, %struct.sv** %substr484, align 8
  %tobool485 = icmp ne %struct.sv* %331, null
  br i1 %tobool485, label %if.then492, label %lor.lhs.false486

lor.lhs.false486:                                 ; preds = %if.then480
  %332 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs487 = getelementptr inbounds %struct.regexp, %struct.regexp* %332, i32 0, i32 11
  %333 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs487, align 8
  %data488 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %333, i32 0, i32 1
  %arrayidx489 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data488, i64 0, i64 0
  %utf8_substr490 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx489, i32 0, i32 3
  %334 = load %struct.sv*, %struct.sv** %utf8_substr490, align 8
  %tobool491 = icmp ne %struct.sv* %334, null
  br i1 %tobool491, label %if.then492, label %if.else528

if.then492:                                       ; preds = %lor.lhs.false486, %if.then480
  %335 = load i8, i8* %utf8_target, align 1
  %tobool493 = trunc i8 %335 to i1
  br i1 %tobool493, label %if.then494, label %if.else506

if.then494:                                       ; preds = %if.then492
  %336 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs495 = getelementptr inbounds %struct.regexp, %struct.regexp* %336, i32 0, i32 11
  %337 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs495, align 8
  %data496 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %337, i32 0, i32 1
  %arrayidx497 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data496, i64 0, i64 0
  %utf8_substr498 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx497, i32 0, i32 3
  %338 = load %struct.sv*, %struct.sv** %utf8_substr498, align 8
  %tobool499 = icmp ne %struct.sv* %338, null
  br i1 %tobool499, label %if.end501, label %if.then500

if.then500:                                       ; preds = %if.then494
  %339 = load %struct.regexp*, %struct.regexp** %prog, align 8
  call void @S_to_utf8_substr(%struct.regexp* %339)
  br label %if.end501

if.end501:                                        ; preds = %if.then500, %if.then494
  %340 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs502 = getelementptr inbounds %struct.regexp, %struct.regexp* %340, i32 0, i32 11
  %341 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs502, align 8
  %data503 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %341, i32 0, i32 1
  %arrayidx504 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data503, i64 0, i64 0
  %utf8_substr505 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx504, i32 0, i32 3
  %342 = load %struct.sv*, %struct.sv** %utf8_substr505, align 8
  store %struct.sv* %342, %struct.sv** %must, align 8
  br label %if.end523

if.else506:                                       ; preds = %if.then492
  %343 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs507 = getelementptr inbounds %struct.regexp, %struct.regexp* %343, i32 0, i32 11
  %344 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs507, align 8
  %data508 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %344, i32 0, i32 1
  %arrayidx509 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data508, i64 0, i64 0
  %substr510 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx509, i32 0, i32 2
  %345 = load %struct.sv*, %struct.sv** %substr510, align 8
  %tobool511 = icmp ne %struct.sv* %345, null
  br i1 %tobool511, label %if.end518, label %if.then512

if.then512:                                       ; preds = %if.else506
  %346 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %call513 = call zeroext i1 @S_to_byte_substr(%struct.regexp* %346)
  br i1 %call513, label %if.end517, label %if.then514

if.then514:                                       ; preds = %if.then512
  br label %do.body515

do.body515:                                       ; preds = %if.then514
  br label %phooey

do.end516:                                        ; No predecessors!
  br label %if.end517

if.end517:                                        ; preds = %do.end516, %if.then512
  br label %if.end518

if.end518:                                        ; preds = %if.end517, %if.else506
  %347 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs519 = getelementptr inbounds %struct.regexp, %struct.regexp* %347, i32 0, i32 11
  %348 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs519, align 8
  %data520 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %348, i32 0, i32 1
  %arrayidx521 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data520, i64 0, i64 0
  %substr522 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx521, i32 0, i32 2
  %349 = load %struct.sv*, %struct.sv** %substr522, align 8
  store %struct.sv* %349, %struct.sv** %must, align 8
  br label %if.end523

if.end523:                                        ; preds = %if.end518, %if.end501
  %350 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs524 = getelementptr inbounds %struct.regexp, %struct.regexp* %350, i32 0, i32 11
  %351 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs524, align 8
  %data525 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %351, i32 0, i32 1
  %arrayidx526 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data525, i64 0, i64 0
  %min_offset527 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx526, i32 0, i32 0
  %352 = load i64, i64* %min_offset527, align 8
  store i64 %352, i64* %back_min, align 8
  store i64 %352, i64* %back_max, align 8
  br label %if.end568

if.else528:                                       ; preds = %lor.lhs.false486
  %353 = load i8, i8* %utf8_target, align 1
  %tobool529 = trunc i8 %353 to i1
  br i1 %tobool529, label %if.then530, label %if.else542

if.then530:                                       ; preds = %if.else528
  %354 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs531 = getelementptr inbounds %struct.regexp, %struct.regexp* %354, i32 0, i32 11
  %355 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs531, align 8
  %data532 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %355, i32 0, i32 1
  %arrayidx533 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data532, i64 0, i64 1
  %utf8_substr534 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx533, i32 0, i32 3
  %356 = load %struct.sv*, %struct.sv** %utf8_substr534, align 8
  %tobool535 = icmp ne %struct.sv* %356, null
  br i1 %tobool535, label %if.end537, label %if.then536

if.then536:                                       ; preds = %if.then530
  %357 = load %struct.regexp*, %struct.regexp** %prog, align 8
  call void @S_to_utf8_substr(%struct.regexp* %357)
  br label %if.end537

if.end537:                                        ; preds = %if.then536, %if.then530
  %358 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs538 = getelementptr inbounds %struct.regexp, %struct.regexp* %358, i32 0, i32 11
  %359 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs538, align 8
  %data539 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %359, i32 0, i32 1
  %arrayidx540 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data539, i64 0, i64 1
  %utf8_substr541 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx540, i32 0, i32 3
  %360 = load %struct.sv*, %struct.sv** %utf8_substr541, align 8
  store %struct.sv* %360, %struct.sv** %must, align 8
  br label %if.end559

if.else542:                                       ; preds = %if.else528
  %361 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs543 = getelementptr inbounds %struct.regexp, %struct.regexp* %361, i32 0, i32 11
  %362 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs543, align 8
  %data544 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %362, i32 0, i32 1
  %arrayidx545 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data544, i64 0, i64 1
  %substr546 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx545, i32 0, i32 2
  %363 = load %struct.sv*, %struct.sv** %substr546, align 8
  %tobool547 = icmp ne %struct.sv* %363, null
  br i1 %tobool547, label %if.end554, label %if.then548

if.then548:                                       ; preds = %if.else542
  %364 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %call549 = call zeroext i1 @S_to_byte_substr(%struct.regexp* %364)
  br i1 %call549, label %if.end553, label %if.then550

if.then550:                                       ; preds = %if.then548
  br label %do.body551

do.body551:                                       ; preds = %if.then550
  br label %phooey

do.end552:                                        ; No predecessors!
  br label %if.end553

if.end553:                                        ; preds = %do.end552, %if.then548
  br label %if.end554

if.end554:                                        ; preds = %if.end553, %if.else542
  %365 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs555 = getelementptr inbounds %struct.regexp, %struct.regexp* %365, i32 0, i32 11
  %366 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs555, align 8
  %data556 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %366, i32 0, i32 1
  %arrayidx557 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data556, i64 0, i64 1
  %substr558 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx557, i32 0, i32 2
  %367 = load %struct.sv*, %struct.sv** %substr558, align 8
  store %struct.sv* %367, %struct.sv** %must, align 8
  br label %if.end559

if.end559:                                        ; preds = %if.end554, %if.end537
  %368 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs560 = getelementptr inbounds %struct.regexp, %struct.regexp* %368, i32 0, i32 11
  %369 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs560, align 8
  %data561 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %369, i32 0, i32 1
  %arrayidx562 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data561, i64 0, i64 1
  %max_offset563 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx562, i32 0, i32 1
  %370 = load i64, i64* %max_offset563, align 8
  store i64 %370, i64* %back_max, align 8
  %371 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs564 = getelementptr inbounds %struct.regexp, %struct.regexp* %371, i32 0, i32 11
  %372 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs564, align 8
  %data565 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %372, i32 0, i32 1
  %arrayidx566 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data565, i64 0, i64 1
  %min_offset567 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx566, i32 0, i32 0
  %373 = load i64, i64* %min_offset567, align 8
  store i64 %373, i64* %back_min, align 8
  br label %if.end568

if.end568:                                        ; preds = %if.end559, %if.end523
  %374 = load i64, i64* %back_min, align 8
  %cmp569 = icmp slt i64 %374, 0
  br i1 %cmp569, label %if.then571, label %if.else572

if.then571:                                       ; preds = %if.end568
  %375 = load i8*, i8** %strend.addr, align 8
  store i8* %375, i8** %last, align 8
  br label %if.end618

if.else572:                                       ; preds = %if.end568
  %376 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %is_utf8_target573 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %376, i32 0, i32 14
  %377 = load i8, i8* %is_utf8_target573, align 2
  %tobool574 = trunc i8 %377 to i1
  br i1 %tobool574, label %cond.true576, label %cond.false595

cond.true576:                                     ; preds = %if.else572
  %378 = load i8*, i8** %strend.addr, align 8
  %379 = load i8, i8* %utf8_target, align 1
  %tobool577 = trunc i8 %379 to i1
  br i1 %tobool577, label %cond.true579, label %cond.false581

cond.true579:                                     ; preds = %cond.true576
  %380 = load %struct.sv*, %struct.sv** %must, align 8
  %call580 = call i64 @Perl_sv_len_utf8(%struct.sv* %380)
  br label %cond.end582

cond.false581:                                    ; preds = %cond.true576
  %381 = load %struct.sv*, %struct.sv** %must, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %381, i32 0, i32 0
  %382 = load i8*, i8** %sv_any, align 8
  %383 = bitcast i8* %382 to %struct.xpv*
  %xpv_cur = getelementptr inbounds %struct.xpv, %struct.xpv* %383, i32 0, i32 2
  %384 = load i64, i64* %xpv_cur, align 8
  br label %cond.end582

cond.end582:                                      ; preds = %cond.false581, %cond.true579
  %cond583 = phi i64 [ %call580, %cond.true579 ], [ %384, %cond.false581 ]
  %385 = load %struct.sv*, %struct.sv** %must, align 8
  %sv_flags584 = getelementptr inbounds %struct.sv, %struct.sv* %385, i32 0, i32 2
  %386 = load i32, i32* %sv_flags584, align 4
  %and585 = and i32 %386, -1073741824
  %cmp586 = icmp eq i32 %and585, -1073741824
  %conv587 = zext i1 %cmp586 to i32
  %cmp588 = icmp ne i32 %conv587, 0
  %conv589 = zext i1 %cmp588 to i32
  %conv590 = sext i32 %conv589 to i64
  %sub591 = sub i64 %cond583, %conv590
  %387 = load i64, i64* %back_min, align 8
  %add592 = add i64 %sub591, %387
  %sub593 = sub nsw i64 0, %add592
  %388 = load i8*, i8** %strbeg.addr, align 8
  %call594 = call i8* @S_reghop3(i8* %378, i64 %sub593, i8* %388)
  br label %cond.end616

cond.false595:                                    ; preds = %if.else572
  %389 = load i8*, i8** %strend.addr, align 8
  %390 = load i8, i8* %utf8_target, align 1
  %tobool596 = trunc i8 %390 to i1
  br i1 %tobool596, label %cond.true598, label %cond.false600

cond.true598:                                     ; preds = %cond.false595
  %391 = load %struct.sv*, %struct.sv** %must, align 8
  %call599 = call i64 @Perl_sv_len_utf8(%struct.sv* %391)
  br label %cond.end603

cond.false600:                                    ; preds = %cond.false595
  %392 = load %struct.sv*, %struct.sv** %must, align 8
  %sv_any601 = getelementptr inbounds %struct.sv, %struct.sv* %392, i32 0, i32 0
  %393 = load i8*, i8** %sv_any601, align 8
  %394 = bitcast i8* %393 to %struct.xpv*
  %xpv_cur602 = getelementptr inbounds %struct.xpv, %struct.xpv* %394, i32 0, i32 2
  %395 = load i64, i64* %xpv_cur602, align 8
  br label %cond.end603

cond.end603:                                      ; preds = %cond.false600, %cond.true598
  %cond604 = phi i64 [ %call599, %cond.true598 ], [ %395, %cond.false600 ]
  %396 = load %struct.sv*, %struct.sv** %must, align 8
  %sv_flags605 = getelementptr inbounds %struct.sv, %struct.sv* %396, i32 0, i32 2
  %397 = load i32, i32* %sv_flags605, align 4
  %and606 = and i32 %397, -1073741824
  %cmp607 = icmp eq i32 %and606, -1073741824
  %conv608 = zext i1 %cmp607 to i32
  %cmp609 = icmp ne i32 %conv608, 0
  %conv610 = zext i1 %cmp609 to i32
  %conv611 = sext i32 %conv610 to i64
  %sub612 = sub i64 %cond604, %conv611
  %398 = load i64, i64* %back_min, align 8
  %add613 = add i64 %sub612, %398
  %sub614 = sub nsw i64 0, %add613
  %add.ptr615 = getelementptr inbounds i8, i8* %389, i64 %sub614
  br label %cond.end616

cond.end616:                                      ; preds = %cond.end603, %cond.end582
  %cond617 = phi i8* [ %call594, %cond.end582 ], [ %add.ptr615, %cond.end603 ]
  store i8* %cond617, i8** %last, align 8
  br label %if.end618

if.end618:                                        ; preds = %cond.end616, %if.then571
  %399 = load i8*, i8** %s, align 8
  %400 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %strbeg619 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %400, i32 0, i32 1
  %401 = load i8*, i8** %strbeg619, align 8
  %cmp620 = icmp ugt i8* %399, %401
  br i1 %cmp620, label %if.then622, label %if.else633

if.then622:                                       ; preds = %if.end618
  %402 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %is_utf8_target623 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %402, i32 0, i32 14
  %403 = load i8, i8* %is_utf8_target623, align 2
  %tobool624 = trunc i8 %403 to i1
  br i1 %tobool624, label %cond.true626, label %cond.false629

cond.true626:                                     ; preds = %if.then622
  %404 = load i8*, i8** %s, align 8
  %405 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %strbeg627 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %405, i32 0, i32 1
  %406 = load i8*, i8** %strbeg627, align 8
  %call628 = call i8* @S_reghop3(i8* %404, i64 -1, i8* %406)
  br label %cond.end631

cond.false629:                                    ; preds = %if.then622
  %407 = load i8*, i8** %s, align 8
  %add.ptr630 = getelementptr inbounds i8, i8* %407, i64 -1
  br label %cond.end631

cond.end631:                                      ; preds = %cond.false629, %cond.true626
  %cond632 = phi i8* [ %call628, %cond.true626 ], [ %add.ptr630, %cond.false629 ]
  store i8* %cond632, i8** %last1, align 8
  br label %if.end635

if.else633:                                       ; preds = %if.end618
  %408 = load i8*, i8** %s, align 8
  %add.ptr634 = getelementptr inbounds i8, i8* %408, i64 -1
  store i8* %add.ptr634, i8** %last1, align 8
  br label %if.end635

if.end635:                                        ; preds = %if.else633, %cond.end631
  store i64 0, i64* %dontbother, align 8
  %409 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %is_utf8_target636 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %409, i32 0, i32 14
  %410 = load i8, i8* %is_utf8_target636, align 2
  %tobool637 = trunc i8 %410 to i1
  br i1 %tobool637, label %cond.true639, label %cond.false651

cond.true639:                                     ; preds = %if.end635
  %411 = load i8*, i8** %strend.addr, align 8
  %412 = load i64, i64* %dontbother, align 8
  %sub640 = sub nsw i64 0, %412
  %413 = load i64, i64* %dontbother, align 8
  %sub641 = sub nsw i64 0, %413
  %cmp642 = icmp sge i64 %sub641, 0
  br i1 %cmp642, label %cond.true644, label %cond.false646

cond.true644:                                     ; preds = %cond.true639
  %414 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %strend645 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %414, i32 0, i32 2
  %415 = load i8*, i8** %strend645, align 8
  br label %cond.end648

cond.false646:                                    ; preds = %cond.true639
  %416 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %strbeg647 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %416, i32 0, i32 1
  %417 = load i8*, i8** %strbeg647, align 8
  br label %cond.end648

cond.end648:                                      ; preds = %cond.false646, %cond.true644
  %cond649 = phi i8* [ %415, %cond.true644 ], [ %417, %cond.false646 ]
  %call650 = call i8* @S_reghop3(i8* %411, i64 %sub640, i8* %cond649)
  br label %cond.end654

cond.false651:                                    ; preds = %if.end635
  %418 = load i8*, i8** %strend.addr, align 8
  %419 = load i64, i64* %dontbother, align 8
  %sub652 = sub nsw i64 0, %419
  %add.ptr653 = getelementptr inbounds i8, i8* %418, i64 %sub652
  br label %cond.end654

cond.end654:                                      ; preds = %cond.false651, %cond.end648
  %cond655 = phi i8* [ %call650, %cond.end648 ], [ %add.ptr653, %cond.false651 ]
  store i8* %cond655, i8** %strend.addr, align 8
  br label %while.cond656

while.cond656:                                    ; preds = %if.end810, %cond.end654
  %420 = load i8*, i8** %s, align 8
  %421 = load i8*, i8** %last, align 8
  %cmp657 = icmp ule i8* %420, %421
  br i1 %cmp657, label %land.rhs659, label %land.end673

land.rhs659:                                      ; preds = %while.cond656
  %422 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %is_utf8_target660 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %422, i32 0, i32 14
  %423 = load i8, i8* %is_utf8_target660, align 2
  %tobool661 = trunc i8 %423 to i1
  br i1 %tobool661, label %cond.true663, label %cond.false665

cond.true663:                                     ; preds = %land.rhs659
  %424 = load i8*, i8** %s, align 8
  %425 = load i64, i64* %back_min, align 8
  %426 = load i8*, i8** %strbeg.addr, align 8
  %427 = load i8*, i8** %strend.addr, align 8
  %call664 = call i8* @S_reghop4(i8* %424, i64 %425, i8* %426, i8* %427)
  br label %cond.end667

cond.false665:                                    ; preds = %land.rhs659
  %428 = load i8*, i8** %s, align 8
  %429 = load i64, i64* %back_min, align 8
  %add.ptr666 = getelementptr inbounds i8, i8* %428, i64 %429
  br label %cond.end667

cond.end667:                                      ; preds = %cond.false665, %cond.true663
  %cond668 = phi i8* [ %call664, %cond.true663 ], [ %add.ptr666, %cond.false665 ]
  %430 = load i8*, i8** %strend.addr, align 8
  %431 = load %struct.sv*, %struct.sv** %must, align 8
  %432 = load i32, i32* %multiline, align 4
  %tobool669 = icmp ne i32 %432, 0
  %433 = zext i1 %tobool669 to i64
  %cond670 = select i1 %tobool669, i32 1, i32 0
  %call671 = call i8* @Perl_fbm_instr(i8* %cond668, i8* %430, %struct.sv* %431, i32 %cond670)
  store i8* %call671, i8** %s, align 8
  %tobool672 = icmp ne i8* %call671, null
  br label %land.end673

land.end673:                                      ; preds = %cond.end667, %while.cond656
  %434 = phi i1 [ false, %while.cond656 ], [ %tobool672, %cond.end667 ]
  br i1 %434, label %while.body674, label %while.end811

while.body674:                                    ; preds = %land.end673
  %435 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %is_utf8_target675 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %435, i32 0, i32 14
  %436 = load i8, i8* %is_utf8_target675, align 2
  %tobool676 = trunc i8 %436 to i1
  br i1 %tobool676, label %cond.true678, label %cond.false690

cond.true678:                                     ; preds = %while.body674
  %437 = load i8*, i8** %s, align 8
  %438 = load i64, i64* %back_max, align 8
  %sub679 = sub nsw i64 0, %438
  %439 = load i64, i64* %back_max, align 8
  %sub680 = sub nsw i64 0, %439
  %cmp681 = icmp sge i64 %sub680, 0
  br i1 %cmp681, label %cond.true683, label %cond.false685

cond.true683:                                     ; preds = %cond.true678
  %440 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %strend684 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %440, i32 0, i32 2
  %441 = load i8*, i8** %strend684, align 8
  br label %cond.end687

cond.false685:                                    ; preds = %cond.true678
  %442 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %strbeg686 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %442, i32 0, i32 1
  %443 = load i8*, i8** %strbeg686, align 8
  br label %cond.end687

cond.end687:                                      ; preds = %cond.false685, %cond.true683
  %cond688 = phi i8* [ %441, %cond.true683 ], [ %443, %cond.false685 ]
  %call689 = call i8* @S_reghop3(i8* %437, i64 %sub679, i8* %cond688)
  br label %cond.end693

cond.false690:                                    ; preds = %while.body674
  %444 = load i8*, i8** %s, align 8
  %445 = load i64, i64* %back_max, align 8
  %sub691 = sub nsw i64 0, %445
  %add.ptr692 = getelementptr inbounds i8, i8* %444, i64 %sub691
  br label %cond.end693

cond.end693:                                      ; preds = %cond.false690, %cond.end687
  %cond694 = phi i8* [ %call689, %cond.end687 ], [ %add.ptr692, %cond.false690 ]
  %446 = load i8*, i8** %last1, align 8
  %cmp695 = icmp ugt i8* %cond694, %446
  br i1 %cmp695, label %if.then697, label %if.else738

if.then697:                                       ; preds = %cond.end693
  %447 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %is_utf8_target698 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %447, i32 0, i32 14
  %448 = load i8, i8* %is_utf8_target698, align 2
  %tobool699 = trunc i8 %448 to i1
  br i1 %tobool699, label %cond.true701, label %cond.false713

cond.true701:                                     ; preds = %if.then697
  %449 = load i8*, i8** %s, align 8
  %450 = load i64, i64* %back_min, align 8
  %sub702 = sub nsw i64 0, %450
  %451 = load i64, i64* %back_min, align 8
  %sub703 = sub nsw i64 0, %451
  %cmp704 = icmp sge i64 %sub703, 0
  br i1 %cmp704, label %cond.true706, label %cond.false708

cond.true706:                                     ; preds = %cond.true701
  %452 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %strend707 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %452, i32 0, i32 2
  %453 = load i8*, i8** %strend707, align 8
  br label %cond.end710

cond.false708:                                    ; preds = %cond.true701
  %454 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %strbeg709 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %454, i32 0, i32 1
  %455 = load i8*, i8** %strbeg709, align 8
  br label %cond.end710

cond.end710:                                      ; preds = %cond.false708, %cond.true706
  %cond711 = phi i8* [ %453, %cond.true706 ], [ %455, %cond.false708 ]
  %call712 = call i8* @S_reghop3(i8* %449, i64 %sub702, i8* %cond711)
  br label %cond.end716

cond.false713:                                    ; preds = %if.then697
  %456 = load i8*, i8** %s, align 8
  %457 = load i64, i64* %back_min, align 8
  %sub714 = sub nsw i64 0, %457
  %add.ptr715 = getelementptr inbounds i8, i8* %456, i64 %sub714
  br label %cond.end716

cond.end716:                                      ; preds = %cond.false713, %cond.end710
  %cond717 = phi i8* [ %call712, %cond.end710 ], [ %add.ptr715, %cond.false713 ]
  store i8* %cond717, i8** %last1, align 8
  %458 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %is_utf8_target718 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %458, i32 0, i32 14
  %459 = load i8, i8* %is_utf8_target718, align 2
  %tobool719 = trunc i8 %459 to i1
  br i1 %tobool719, label %cond.true721, label %cond.false733

cond.true721:                                     ; preds = %cond.end716
  %460 = load i8*, i8** %s, align 8
  %461 = load i64, i64* %back_max, align 8
  %sub722 = sub nsw i64 0, %461
  %462 = load i64, i64* %back_max, align 8
  %sub723 = sub nsw i64 0, %462
  %cmp724 = icmp sge i64 %sub723, 0
  br i1 %cmp724, label %cond.true726, label %cond.false728

cond.true726:                                     ; preds = %cond.true721
  %463 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %strend727 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %463, i32 0, i32 2
  %464 = load i8*, i8** %strend727, align 8
  br label %cond.end730

cond.false728:                                    ; preds = %cond.true721
  %465 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %strbeg729 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %465, i32 0, i32 1
  %466 = load i8*, i8** %strbeg729, align 8
  br label %cond.end730

cond.end730:                                      ; preds = %cond.false728, %cond.true726
  %cond731 = phi i8* [ %464, %cond.true726 ], [ %466, %cond.false728 ]
  %call732 = call i8* @S_reghop3(i8* %460, i64 %sub722, i8* %cond731)
  br label %cond.end736

cond.false733:                                    ; preds = %cond.end716
  %467 = load i8*, i8** %s, align 8
  %468 = load i64, i64* %back_max, align 8
  %sub734 = sub nsw i64 0, %468
  %add.ptr735 = getelementptr inbounds i8, i8* %467, i64 %sub734
  br label %cond.end736

cond.end736:                                      ; preds = %cond.false733, %cond.end730
  %cond737 = phi i8* [ %call732, %cond.end730 ], [ %add.ptr735, %cond.false733 ]
  store i8* %cond737, i8** %s, align 8
  br label %if.end777

if.else738:                                       ; preds = %cond.end693
  %469 = load i8*, i8** %last1, align 8
  %470 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %strbeg739 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %470, i32 0, i32 1
  %471 = load i8*, i8** %strbeg739, align 8
  %cmp740 = icmp uge i8* %469, %471
  br i1 %cmp740, label %cond.true742, label %cond.false753

cond.true742:                                     ; preds = %if.else738
  %472 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %is_utf8_target743 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %472, i32 0, i32 14
  %473 = load i8, i8* %is_utf8_target743, align 2
  %tobool744 = trunc i8 %473 to i1
  br i1 %tobool744, label %cond.true746, label %cond.false749

cond.true746:                                     ; preds = %cond.true742
  %474 = load i8*, i8** %last1, align 8
  %475 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %strend747 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %475, i32 0, i32 2
  %476 = load i8*, i8** %strend747, align 8
  %call748 = call i8* @S_reghop3(i8* %474, i64 1, i8* %476)
  br label %cond.end751

cond.false749:                                    ; preds = %cond.true742
  %477 = load i8*, i8** %last1, align 8
  %add.ptr750 = getelementptr inbounds i8, i8* %477, i64 1
  br label %cond.end751

cond.end751:                                      ; preds = %cond.false749, %cond.true746
  %cond752 = phi i8* [ %call748, %cond.true746 ], [ %add.ptr750, %cond.false749 ]
  br label %cond.end755

cond.false753:                                    ; preds = %if.else738
  %478 = load i8*, i8** %last1, align 8
  %add.ptr754 = getelementptr inbounds i8, i8* %478, i64 1
  br label %cond.end755

cond.end755:                                      ; preds = %cond.false753, %cond.end751
  %cond756 = phi i8* [ %cond752, %cond.end751 ], [ %add.ptr754, %cond.false753 ]
  store i8* %cond756, i8** %t, align 8
  %479 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %is_utf8_target757 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %479, i32 0, i32 14
  %480 = load i8, i8* %is_utf8_target757, align 2
  %tobool758 = trunc i8 %480 to i1
  br i1 %tobool758, label %cond.true760, label %cond.false772

cond.true760:                                     ; preds = %cond.end755
  %481 = load i8*, i8** %s, align 8
  %482 = load i64, i64* %back_min, align 8
  %sub761 = sub nsw i64 0, %482
  %483 = load i64, i64* %back_min, align 8
  %sub762 = sub nsw i64 0, %483
  %cmp763 = icmp sge i64 %sub762, 0
  br i1 %cmp763, label %cond.true765, label %cond.false767

cond.true765:                                     ; preds = %cond.true760
  %484 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %strend766 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %484, i32 0, i32 2
  %485 = load i8*, i8** %strend766, align 8
  br label %cond.end769

cond.false767:                                    ; preds = %cond.true760
  %486 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %strbeg768 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %486, i32 0, i32 1
  %487 = load i8*, i8** %strbeg768, align 8
  br label %cond.end769

cond.end769:                                      ; preds = %cond.false767, %cond.true765
  %cond770 = phi i8* [ %485, %cond.true765 ], [ %487, %cond.false767 ]
  %call771 = call i8* @S_reghop3(i8* %481, i64 %sub761, i8* %cond770)
  br label %cond.end775

cond.false772:                                    ; preds = %cond.end755
  %488 = load i8*, i8** %s, align 8
  %489 = load i64, i64* %back_min, align 8
  %sub773 = sub nsw i64 0, %489
  %add.ptr774 = getelementptr inbounds i8, i8* %488, i64 %sub773
  br label %cond.end775

cond.end775:                                      ; preds = %cond.false772, %cond.end769
  %cond776 = phi i8* [ %call771, %cond.end769 ], [ %add.ptr774, %cond.false772 ]
  store i8* %cond776, i8** %last1, align 8
  %490 = load i8*, i8** %t, align 8
  store i8* %490, i8** %s, align 8
  br label %if.end777

if.end777:                                        ; preds = %cond.end775, %cond.end736
  %491 = load i8, i8* %utf8_target, align 1
  %tobool778 = trunc i8 %491 to i1
  br i1 %tobool778, label %if.then779, label %if.else799

if.then779:                                       ; preds = %if.end777
  br label %while.cond780

while.cond780:                                    ; preds = %if.end792, %if.then779
  %492 = load i8*, i8** %s, align 8
  %493 = load i8*, i8** %last1, align 8
  %cmp781 = icmp ule i8* %492, %493
  br i1 %cmp781, label %while.body783, label %while.end798

while.body783:                                    ; preds = %while.cond780
  %494 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %call784 = call i32 @S_regtry(%struct.regmatch_info* %494, i8** %s)
  %tobool785 = icmp ne i32 %call784, 0
  br i1 %tobool785, label %if.then786, label %if.end787

if.then786:                                       ; preds = %while.body783
  br label %got_it

if.end787:                                        ; preds = %while.body783
  %495 = load i8*, i8** %s, align 8
  %496 = load i8*, i8** %last1, align 8
  %cmp788 = icmp uge i8* %495, %496
  br i1 %cmp788, label %if.then790, label %if.end792

if.then790:                                       ; preds = %if.end787
  %497 = load i8*, i8** %s, align 8
  %incdec.ptr791 = getelementptr inbounds i8, i8* %497, i32 1
  store i8* %incdec.ptr791, i8** %s, align 8
  br label %while.end798

if.end792:                                        ; preds = %if.end787
  %498 = load i8*, i8** %s, align 8
  %499 = load i8, i8* %498, align 1
  %idxprom793 = zext i8 %499 to i64
  %arrayidx794 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom793
  %500 = load i8, i8* %arrayidx794, align 1
  %conv795 = zext i8 %500 to i32
  %501 = load i8*, i8** %s, align 8
  %idx.ext796 = sext i32 %conv795 to i64
  %add.ptr797 = getelementptr inbounds i8, i8* %501, i64 %idx.ext796
  store i8* %add.ptr797, i8** %s, align 8
  br label %while.cond780

while.end798:                                     ; preds = %if.then790, %while.cond780
  br label %if.end810

if.else799:                                       ; preds = %if.end777
  br label %while.cond800

while.cond800:                                    ; preds = %if.end807, %if.else799
  %502 = load i8*, i8** %s, align 8
  %503 = load i8*, i8** %last1, align 8
  %cmp801 = icmp ule i8* %502, %503
  br i1 %cmp801, label %while.body803, label %while.end809

while.body803:                                    ; preds = %while.cond800
  %504 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %call804 = call i32 @S_regtry(%struct.regmatch_info* %504, i8** %s)
  %tobool805 = icmp ne i32 %call804, 0
  br i1 %tobool805, label %if.then806, label %if.end807

if.then806:                                       ; preds = %while.body803
  br label %got_it

if.end807:                                        ; preds = %while.body803
  %505 = load i8*, i8** %s, align 8
  %incdec.ptr808 = getelementptr inbounds i8, i8* %505, i32 1
  store i8* %incdec.ptr808, i8** %s, align 8
  br label %while.cond800

while.end809:                                     ; preds = %while.cond800
  br label %if.end810

if.end810:                                        ; preds = %while.end809, %while.end798
  br label %while.cond656

while.end811:                                     ; preds = %land.end673
  br label %phooey

if.else812:                                       ; preds = %land.lhs.true471, %lor.lhs.false464
  %506 = load %struct.regexp_internal*, %struct.regexp_internal** %progi, align 8
  %regstclass = getelementptr inbounds %struct.regexp_internal, %struct.regexp_internal* %506, i32 0, i32 2
  %507 = load %struct.regnode*, %struct.regnode** %regstclass, align 8
  store %struct.regnode* %507, %struct.regnode** %c, align 8
  %tobool813 = icmp ne %struct.regnode* %507, null
  br i1 %tobool813, label %if.then814, label %if.else864

if.then814:                                       ; preds = %if.else812
  %508 = load i64, i64* %minlen, align 8
  %tobool815 = icmp ne i64 %508, 0
  br i1 %tobool815, label %if.then816, label %if.end859

if.then816:                                       ; preds = %if.then814
  %509 = load %struct.regexp_internal*, %struct.regexp_internal** %progi, align 8
  %regstclass817 = getelementptr inbounds %struct.regexp_internal, %struct.regexp_internal* %509, i32 0, i32 2
  %510 = load %struct.regnode*, %struct.regnode** %regstclass817, align 8
  %type = getelementptr inbounds %struct.regnode, %struct.regnode* %510, i32 0, i32 1
  %511 = load i8, i8* %type, align 1
  %conv818 = zext i8 %511 to i16
  store i16 %conv818, i16* %op, align 2
  %512 = load i16, i16* %op, align 2
  %idxprom819 = zext i16 %512 to i64
  %arrayidx820 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_regkind, i64 0, i64 %idxprom819
  %513 = load i8, i8* %arrayidx820, align 1
  %conv821 = zext i8 %513 to i32
  %cmp822 = icmp ne i32 %conv821, 31
  br i1 %cmp822, label %land.lhs.true824, label %if.end858

land.lhs.true824:                                 ; preds = %if.then816
  %514 = load i16, i16* %op, align 2
  %conv825 = zext i16 %514 to i32
  %cmp826 = icmp ne i32 %conv825, 18
  br i1 %cmp826, label %land.lhs.true828, label %if.end858

land.lhs.true828:                                 ; preds = %land.lhs.true824
  %515 = load i16, i16* %op, align 2
  %idxprom829 = zext i16 %515 to i64
  %arrayidx830 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_regkind, i64 0, i64 %idxprom829
  %516 = load i8, i8* %arrayidx830, align 1
  %conv831 = zext i8 %516 to i32
  %cmp832 = icmp ne i32 %conv831, 72
  br i1 %cmp832, label %if.then834, label %if.end858

if.then834:                                       ; preds = %land.lhs.true828
  %517 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %is_utf8_target835 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %517, i32 0, i32 14
  %518 = load i8, i8* %is_utf8_target835, align 2
  %tobool836 = trunc i8 %518 to i1
  br i1 %tobool836, label %cond.true838, label %cond.false852

cond.true838:                                     ; preds = %if.then834
  %519 = load i8*, i8** %strend.addr, align 8
  %520 = load i64, i64* %minlen, align 8
  %sub839 = sub nsw i64 %520, 1
  %sub840 = sub nsw i64 0, %sub839
  %521 = load i64, i64* %minlen, align 8
  %sub841 = sub nsw i64 %521, 1
  %sub842 = sub nsw i64 0, %sub841
  %cmp843 = icmp sge i64 %sub842, 0
  br i1 %cmp843, label %cond.true845, label %cond.false847

cond.true845:                                     ; preds = %cond.true838
  %522 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %strend846 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %522, i32 0, i32 2
  %523 = load i8*, i8** %strend846, align 8
  br label %cond.end849

cond.false847:                                    ; preds = %cond.true838
  %524 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %strbeg848 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %524, i32 0, i32 1
  %525 = load i8*, i8** %strbeg848, align 8
  br label %cond.end849

cond.end849:                                      ; preds = %cond.false847, %cond.true845
  %cond850 = phi i8* [ %523, %cond.true845 ], [ %525, %cond.false847 ]
  %call851 = call i8* @S_reghop3(i8* %519, i64 %sub840, i8* %cond850)
  br label %cond.end856

cond.false852:                                    ; preds = %if.then834
  %526 = load i8*, i8** %strend.addr, align 8
  %527 = load i64, i64* %minlen, align 8
  %sub853 = sub nsw i64 %527, 1
  %sub854 = sub nsw i64 0, %sub853
  %add.ptr855 = getelementptr inbounds i8, i8* %526, i64 %sub854
  br label %cond.end856

cond.end856:                                      ; preds = %cond.false852, %cond.end849
  %cond857 = phi i8* [ %call851, %cond.end849 ], [ %add.ptr855, %cond.false852 ]
  store i8* %cond857, i8** %strend.addr, align 8
  br label %if.end858

if.end858:                                        ; preds = %cond.end856, %land.lhs.true828, %land.lhs.true824, %if.then816
  br label %if.end859

if.end859:                                        ; preds = %if.end858, %if.then814
  %528 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %529 = load %struct.regnode*, %struct.regnode** %c, align 8
  %530 = load i8*, i8** %s, align 8
  %531 = load i8*, i8** %strend.addr, align 8
  %532 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %call860 = call i8* @S_find_byclass(%struct.regexp* %528, %struct.regnode* %529, i8* %530, i8* %531, %struct.regmatch_info* %532)
  %tobool861 = icmp ne i8* %call860, null
  br i1 %tobool861, label %if.then862, label %if.end863

if.then862:                                       ; preds = %if.end859
  br label %got_it

if.end863:                                        ; preds = %if.end859
  br label %if.end1017

if.else864:                                       ; preds = %if.else812
  store i64 0, i64* %dontbother, align 8
  %533 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs865 = getelementptr inbounds %struct.regexp, %struct.regexp* %533, i32 0, i32 11
  %534 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs865, align 8
  %data866 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %534, i32 0, i32 1
  %arrayidx867 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data866, i64 0, i64 1
  %substr868 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx867, i32 0, i32 2
  %535 = load %struct.sv*, %struct.sv** %substr868, align 8
  %cmp869 = icmp ne %struct.sv* %535, null
  br i1 %cmp869, label %if.then878, label %lor.lhs.false871

lor.lhs.false871:                                 ; preds = %if.else864
  %536 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs872 = getelementptr inbounds %struct.regexp, %struct.regexp* %536, i32 0, i32 11
  %537 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs872, align 8
  %data873 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %537, i32 0, i32 1
  %arrayidx874 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data873, i64 0, i64 1
  %utf8_substr875 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx874, i32 0, i32 3
  %538 = load %struct.sv*, %struct.sv** %utf8_substr875, align 8
  %cmp876 = icmp ne %struct.sv* %538, null
  br i1 %cmp876, label %if.then878, label %if.end979

if.then878:                                       ; preds = %lor.lhs.false871, %if.else864
  store i8* null, i8** %last879, align 8
  %539 = load i8, i8* %utf8_target, align 1
  %tobool880 = trunc i8 %539 to i1
  br i1 %tobool880, label %if.then881, label %if.else893

if.then881:                                       ; preds = %if.then878
  %540 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs882 = getelementptr inbounds %struct.regexp, %struct.regexp* %540, i32 0, i32 11
  %541 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs882, align 8
  %data883 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %541, i32 0, i32 1
  %arrayidx884 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data883, i64 0, i64 1
  %utf8_substr885 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx884, i32 0, i32 3
  %542 = load %struct.sv*, %struct.sv** %utf8_substr885, align 8
  %tobool886 = icmp ne %struct.sv* %542, null
  br i1 %tobool886, label %if.end888, label %if.then887

if.then887:                                       ; preds = %if.then881
  %543 = load %struct.regexp*, %struct.regexp** %prog, align 8
  call void @S_to_utf8_substr(%struct.regexp* %543)
  br label %if.end888

if.end888:                                        ; preds = %if.then887, %if.then881
  %544 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs889 = getelementptr inbounds %struct.regexp, %struct.regexp* %544, i32 0, i32 11
  %545 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs889, align 8
  %data890 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %545, i32 0, i32 1
  %arrayidx891 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data890, i64 0, i64 1
  %utf8_substr892 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx891, i32 0, i32 3
  %546 = load %struct.sv*, %struct.sv** %utf8_substr892, align 8
  store %struct.sv* %546, %struct.sv** %float_real, align 8
  br label %if.end910

if.else893:                                       ; preds = %if.then878
  %547 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs894 = getelementptr inbounds %struct.regexp, %struct.regexp* %547, i32 0, i32 11
  %548 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs894, align 8
  %data895 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %548, i32 0, i32 1
  %arrayidx896 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data895, i64 0, i64 1
  %substr897 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx896, i32 0, i32 2
  %549 = load %struct.sv*, %struct.sv** %substr897, align 8
  %tobool898 = icmp ne %struct.sv* %549, null
  br i1 %tobool898, label %if.end905, label %if.then899

if.then899:                                       ; preds = %if.else893
  %550 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %call900 = call zeroext i1 @S_to_byte_substr(%struct.regexp* %550)
  br i1 %call900, label %if.end904, label %if.then901

if.then901:                                       ; preds = %if.then899
  br label %do.body902

do.body902:                                       ; preds = %if.then901
  br label %phooey

do.end903:                                        ; No predecessors!
  br label %if.end904

if.end904:                                        ; preds = %do.end903, %if.then899
  br label %if.end905

if.end905:                                        ; preds = %if.end904, %if.else893
  %551 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs906 = getelementptr inbounds %struct.regexp, %struct.regexp* %551, i32 0, i32 11
  %552 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs906, align 8
  %data907 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %552, i32 0, i32 1
  %arrayidx908 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data907, i64 0, i64 1
  %substr909 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx908, i32 0, i32 2
  %553 = load %struct.sv*, %struct.sv** %substr909, align 8
  store %struct.sv* %553, %struct.sv** %float_real, align 8
  br label %if.end910

if.end910:                                        ; preds = %if.end905, %if.end888
  %554 = load %struct.sv*, %struct.sv** %float_real, align 8
  %sv_flags911 = getelementptr inbounds %struct.sv, %struct.sv* %554, i32 0, i32 2
  %555 = load i32, i32* %sv_flags911, align 4
  %and912 = and i32 %555, 2098176
  %cmp913 = icmp eq i32 %and912, 1024
  br i1 %cmp913, label %cond.true915, label %cond.false921

cond.true915:                                     ; preds = %if.end910
  %556 = load %struct.sv*, %struct.sv** %float_real, align 8
  %sv_any916 = getelementptr inbounds %struct.sv, %struct.sv* %556, i32 0, i32 0
  %557 = load i8*, i8** %sv_any916, align 8
  %558 = bitcast i8* %557 to %struct.xpv*
  %xpv_cur917 = getelementptr inbounds %struct.xpv, %struct.xpv* %558, i32 0, i32 2
  %559 = load i64, i64* %xpv_cur917, align 8
  store i64 %559, i64* %len, align 8
  %560 = load %struct.sv*, %struct.sv** %float_real, align 8
  %sv_u918 = getelementptr inbounds %struct.sv, %struct.sv* %560, i32 0, i32 3
  %svu_pv919 = bitcast %union.anon* %sv_u918 to i8**
  %561 = load i8*, i8** %svu_pv919, align 8
  %add.ptr920 = getelementptr inbounds i8, i8* %561, i64 0
  br label %cond.end923

cond.false921:                                    ; preds = %if.end910
  %562 = load %struct.sv*, %struct.sv** %float_real, align 8
  %call922 = call i8* @Perl_sv_2pv_flags(%struct.sv* %562, i64* %len, i32 34)
  br label %cond.end923

cond.end923:                                      ; preds = %cond.false921, %cond.true915
  %cond924 = phi i8* [ %add.ptr920, %cond.true915 ], [ %call922, %cond.false921 ]
  store i8* %cond924, i8** %little, align 8
  %563 = load %struct.sv*, %struct.sv** %float_real, align 8
  %sv_flags925 = getelementptr inbounds %struct.sv, %struct.sv* %563, i32 0, i32 2
  %564 = load i32, i32* %sv_flags925, align 4
  %and926 = and i32 %564, -1073741824
  %cmp927 = icmp eq i32 %and926, -1073741824
  br i1 %cmp927, label %if.then929, label %if.else960

if.then929:                                       ; preds = %cond.end923
  %565 = load i8*, i8** %strend.addr, align 8
  %566 = load i64, i64* %len, align 8
  %idx.neg930 = sub i64 0, %566
  %add.ptr931 = getelementptr inbounds i8, i8* %565, i64 %idx.neg930
  store i8* %add.ptr931, i8** %checkpos, align 8
  %567 = load i8*, i8** %checkpos, align 8
  %add.ptr932 = getelementptr inbounds i8, i8* %567, i64 1
  %568 = load i8*, i8** %strbeg.addr, align 8
  %cmp933 = icmp ult i8* %add.ptr932, %568
  br i1 %cmp933, label %if.then935, label %if.else936

if.then935:                                       ; preds = %if.then929
  br label %phooey

if.else936:                                       ; preds = %if.then929
  %569 = load i8*, i8** %checkpos, align 8
  %add.ptr937 = getelementptr inbounds i8, i8* %569, i64 1
  %570 = load i8*, i8** %little, align 8
  %571 = load i64, i64* %len, align 8
  %sub938 = sub i64 %571, 1
  %call939 = call i32 @memcmp(i8* %add.ptr937, i8* %570, i64 %sub938) #5
  %tobool940 = icmp ne i32 %call939, 0
  br i1 %tobool940, label %if.else943, label %if.then941

if.then941:                                       ; preds = %if.else936
  %572 = load i8*, i8** %checkpos, align 8
  %add.ptr942 = getelementptr inbounds i8, i8* %572, i64 1
  store i8* %add.ptr942, i8** %last879, align 8
  br label %if.end958

if.else943:                                       ; preds = %if.else936
  %573 = load i8*, i8** %checkpos, align 8
  %574 = load i8*, i8** %strbeg.addr, align 8
  %cmp944 = icmp ult i8* %573, %574
  br i1 %cmp944, label %if.then946, label %if.else947

if.then946:                                       ; preds = %if.else943
  br label %phooey

if.else947:                                       ; preds = %if.else943
  %575 = load i32, i32* %multiline, align 4
  %tobool948 = icmp ne i32 %575, 0
  br i1 %tobool948, label %if.else955, label %if.then949

if.then949:                                       ; preds = %if.else947
  %576 = load i8*, i8** %checkpos, align 8
  %577 = load i8*, i8** %little, align 8
  %578 = load i64, i64* %len, align 8
  %call950 = call i32 @memcmp(i8* %576, i8* %577, i64 %578) #5
  %tobool951 = icmp ne i32 %call950, 0
  br i1 %tobool951, label %if.else953, label %if.then952

if.then952:                                       ; preds = %if.then949
  %579 = load i8*, i8** %checkpos, align 8
  store i8* %579, i8** %last879, align 8
  br label %if.end954

if.else953:                                       ; preds = %if.then949
  br label %phooey

if.end954:                                        ; preds = %if.then952
  br label %if.end956

if.else955:                                       ; preds = %if.else947
  br label %find_last

if.end956:                                        ; preds = %if.end954
  br label %if.end957

if.end957:                                        ; preds = %if.end956
  br label %if.end958

if.end958:                                        ; preds = %if.end957, %if.then941
  br label %if.end959

if.end959:                                        ; preds = %if.end958
  br label %if.end967

if.else960:                                       ; preds = %cond.end923
  br label %find_last

find_last:                                        ; preds = %if.else960, %if.else955
  %580 = load i64, i64* %len, align 8
  %tobool961 = icmp ne i64 %580, 0
  br i1 %tobool961, label %if.then962, label %if.else965

if.then962:                                       ; preds = %find_last
  %581 = load i8*, i8** %s, align 8
  %582 = load i8*, i8** %strend.addr, align 8
  %583 = load i8*, i8** %little, align 8
  %584 = load i8*, i8** %little, align 8
  %585 = load i64, i64* %len, align 8
  %add.ptr963 = getelementptr inbounds i8, i8* %584, i64 %585
  %call964 = call i8* @Perl_rninstr(i8* %581, i8* %582, i8* %583, i8* %add.ptr963)
  store i8* %call964, i8** %last879, align 8
  br label %if.end966

if.else965:                                       ; preds = %find_last
  %586 = load i8*, i8** %strend.addr, align 8
  store i8* %586, i8** %last879, align 8
  br label %if.end966

if.end966:                                        ; preds = %if.else965, %if.then962
  br label %if.end967

if.end967:                                        ; preds = %if.end966, %if.end959
  %587 = load i8*, i8** %last879, align 8
  %tobool968 = icmp ne i8* %587, null
  br i1 %tobool968, label %if.end970, label %if.then969

if.then969:                                       ; preds = %if.end967
  br label %phooey

if.end970:                                        ; preds = %if.end967
  %588 = load i8*, i8** %strend.addr, align 8
  %589 = load i8*, i8** %last879, align 8
  %sub.ptr.lhs.cast971 = ptrtoint i8* %588 to i64
  %sub.ptr.rhs.cast972 = ptrtoint i8* %589 to i64
  %sub.ptr.sub973 = sub i64 %sub.ptr.lhs.cast971, %sub.ptr.rhs.cast972
  %590 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs974 = getelementptr inbounds %struct.regexp, %struct.regexp* %590, i32 0, i32 11
  %591 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs974, align 8
  %data975 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %591, i32 0, i32 1
  %arrayidx976 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data975, i64 0, i64 1
  %min_offset977 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx976, i32 0, i32 0
  %592 = load i64, i64* %min_offset977, align 8
  %add978 = add nsw i64 %sub.ptr.sub973, %592
  store i64 %add978, i64* %dontbother, align 8
  br label %if.end979

if.end979:                                        ; preds = %if.end970, %lor.lhs.false871
  %593 = load i64, i64* %minlen, align 8
  %tobool980 = icmp ne i64 %593, 0
  br i1 %tobool980, label %land.lhs.true981, label %if.end986

land.lhs.true981:                                 ; preds = %if.end979
  %594 = load i64, i64* %dontbother, align 8
  %595 = load i64, i64* %minlen, align 8
  %cmp982 = icmp slt i64 %594, %595
  br i1 %cmp982, label %if.then984, label %if.end986

if.then984:                                       ; preds = %land.lhs.true981
  %596 = load i64, i64* %minlen, align 8
  %sub985 = sub nsw i64 %596, 1
  store i64 %sub985, i64* %dontbother, align 8
  br label %if.end986

if.end986:                                        ; preds = %if.then984, %land.lhs.true981, %if.end979
  %597 = load i64, i64* %dontbother, align 8
  %598 = load i8*, i8** %strend.addr, align 8
  %idx.neg987 = sub i64 0, %597
  %add.ptr988 = getelementptr inbounds i8, i8* %598, i64 %idx.neg987
  store i8* %add.ptr988, i8** %strend.addr, align 8
  %599 = load i8, i8* %utf8_target, align 1
  %tobool989 = trunc i8 %599 to i1
  br i1 %tobool989, label %if.then990, label %if.else1006

if.then990:                                       ; preds = %if.end986
  br label %for.cond991

for.cond991:                                      ; preds = %if.end999, %if.then990
  %600 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %call992 = call i32 @S_regtry(%struct.regmatch_info* %600, i8** %s)
  %tobool993 = icmp ne i32 %call992, 0
  br i1 %tobool993, label %if.then994, label %if.end995

if.then994:                                       ; preds = %for.cond991
  br label %got_it

if.end995:                                        ; preds = %for.cond991
  %601 = load i8*, i8** %s, align 8
  %602 = load i8*, i8** %strend.addr, align 8
  %cmp996 = icmp uge i8* %601, %602
  br i1 %cmp996, label %if.then998, label %if.end999

if.then998:                                       ; preds = %if.end995
  br label %for.end1005

if.end999:                                        ; preds = %if.end995
  %603 = load i8*, i8** %s, align 8
  %604 = load i8, i8* %603, align 1
  %idxprom1000 = zext i8 %604 to i64
  %arrayidx1001 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom1000
  %605 = load i8, i8* %arrayidx1001, align 1
  %conv1002 = zext i8 %605 to i32
  %606 = load i8*, i8** %s, align 8
  %idx.ext1003 = sext i32 %conv1002 to i64
  %add.ptr1004 = getelementptr inbounds i8, i8* %606, i64 %idx.ext1003
  store i8* %add.ptr1004, i8** %s, align 8
  br label %for.cond991

for.end1005:                                      ; preds = %if.then998
  br label %if.end1016

if.else1006:                                      ; preds = %if.end986
  br label %do.body1007

do.body1007:                                      ; preds = %do.cond, %if.else1006
  %607 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %call1008 = call i32 @S_regtry(%struct.regmatch_info* %607, i8** %s)
  %tobool1009 = icmp ne i32 %call1008, 0
  br i1 %tobool1009, label %if.then1010, label %if.end1011

if.then1010:                                      ; preds = %do.body1007
  br label %got_it

if.end1011:                                       ; preds = %do.body1007
  br label %do.cond

do.cond:                                          ; preds = %if.end1011
  %608 = load i8*, i8** %s, align 8
  %incdec.ptr1012 = getelementptr inbounds i8, i8* %608, i32 1
  store i8* %incdec.ptr1012, i8** %s, align 8
  %609 = load i8*, i8** %strend.addr, align 8
  %cmp1013 = icmp ult i8* %608, %609
  br i1 %cmp1013, label %do.body1007, label %do.end1015

do.end1015:                                       ; preds = %do.cond
  br label %if.end1016

if.end1016:                                       ; preds = %do.end1015, %for.end1005
  br label %if.end1017

if.end1017:                                       ; preds = %if.end1016, %if.end863
  br label %if.end1018

if.end1018:                                       ; preds = %if.end1017
  br label %if.end1019

if.end1019:                                       ; preds = %if.end1018, %if.end442
  br label %phooey

got_it:                                           ; preds = %if.then1010, %if.then994, %if.then862, %if.then806, %if.then786, %if.then423, %if.then365, %if.then319, %if.then307, %if.then260
  %610 = load i32, i32* %flags.addr, align 4
  %and1020 = and i32 %610, 128
  %tobool1021 = icmp ne i32 %and1020, 0
  br i1 %tobool1021, label %land.lhs.true1022, label %if.end1032

land.lhs.true1022:                                ; preds = %got_it
  %611 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %offs1023 = getelementptr inbounds %struct.regexp, %struct.regexp* %611, i32 0, i32 17
  %612 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %offs1023, align 8
  %arrayidx1024 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %612, i64 0
  %start1025 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %arrayidx1024, i32 0, i32 0
  %613 = load i64, i64* %start1025, align 8
  %614 = load i8*, i8** %stringarg.addr, align 8
  %615 = load i8*, i8** %strbeg.addr, align 8
  %sub.ptr.lhs.cast1026 = ptrtoint i8* %614 to i64
  %sub.ptr.rhs.cast1027 = ptrtoint i8* %615 to i64
  %sub.ptr.sub1028 = sub i64 %sub.ptr.lhs.cast1026, %sub.ptr.rhs.cast1027
  %cmp1029 = icmp slt i64 %613, %sub.ptr.sub1028
  br i1 %cmp1029, label %if.then1031, label %if.end1032

if.then1031:                                      ; preds = %land.lhs.true1022
  br label %phooey

if.end1032:                                       ; preds = %land.lhs.true1022, %got_it
  %616 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %swap, align 8
  %617 = bitcast %struct.regexp_paren_pair* %616 to i8*
  call void @Perl_safesysfree(i8* %617)
  br label %do.body1033

do.body1033:                                      ; preds = %if.end1032
  %618 = load i32, i32* @PL_savestack_ix, align 4
  %619 = load i32, i32* %oldsave, align 4
  %cmp1034 = icmp sgt i32 %618, %619
  br i1 %cmp1034, label %if.then1036, label %if.end1037

if.then1036:                                      ; preds = %do.body1033
  %620 = load i32, i32* %oldsave, align 4
  call void @Perl_leave_scope(i32 %620)
  br label %if.end1037

if.end1037:                                       ; preds = %if.then1036, %do.body1033
  br label %do.end1039

do.end1039:                                       ; preds = %if.end1037
  %621 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %paren_names = getelementptr inbounds %struct.regexp, %struct.regexp* %621, i32 0, i32 6
  %622 = load %struct.hv*, %struct.hv** %paren_names, align 8
  %tobool1040 = icmp ne %struct.hv* %622, null
  br i1 %tobool1040, label %if.then1041, label %if.end1044

if.then1041:                                      ; preds = %do.end1039
  %623 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %paren_names1042 = getelementptr inbounds %struct.regexp, %struct.regexp* %623, i32 0, i32 6
  %624 = load %struct.hv*, %struct.hv** %paren_names1042, align 8
  %call1043 = call i32 @Perl_hv_iterinit(%struct.hv* %624)
  br label %if.end1044

if.end1044:                                       ; preds = %if.then1041, %do.end1039
  %625 = load i32, i32* %flags.addr, align 4
  %and1045 = and i32 %625, 16
  %tobool1046 = icmp ne i32 %and1045, 0
  br i1 %tobool1046, label %if.end1050, label %if.then1047

if.then1047:                                      ; preds = %if.end1044
  %626 = load %struct.p5rx*, %struct.p5rx** %rx.addr, align 8
  %627 = load i8*, i8** %strbeg.addr, align 8
  %628 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %strend1048 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %628, i32 0, i32 2
  %629 = load i8*, i8** %strend1048, align 8
  %630 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %631 = load i32, i32* %flags.addr, align 4
  %632 = load i8, i8* %utf8_target, align 1
  %tobool1049 = trunc i8 %632 to i1
  call void @S_reg_set_capture_string(%struct.p5rx* %626, i8* %627, i8* %629, %struct.sv* %630, i32 %631, i1 zeroext %tobool1049)
  br label %if.end1050

if.end1050:                                       ; preds = %if.then1047, %if.end1044
  store i32 1, i32* %retval, align 4
  br label %return

phooey:                                           ; preds = %if.then1031, %if.end1019, %if.then969, %if.else953, %if.then946, %if.then935, %do.body902, %while.end811, %do.body551, %do.body515, %do.body399, %if.end320, %while.end, %if.then302, %if.then265, %if.then137, %if.then79
  br label %do.body1051

do.body1051:                                      ; preds = %phooey
  %633 = load i32, i32* @PL_savestack_ix, align 4
  %634 = load i32, i32* %oldsave, align 4
  %cmp1052 = icmp sgt i32 %633, %634
  br i1 %cmp1052, label %if.then1054, label %if.end1055

if.then1054:                                      ; preds = %do.body1051
  %635 = load i32, i32* %oldsave, align 4
  call void @Perl_leave_scope(i32 %635)
  br label %if.end1055

if.end1055:                                       ; preds = %if.then1054, %do.body1051
  br label %do.end1057

do.end1057:                                       ; preds = %if.end1055
  %636 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %swap, align 8
  %tobool1058 = icmp ne %struct.regexp_paren_pair* %636, null
  br i1 %tobool1058, label %if.then1059, label %if.end1062

if.then1059:                                      ; preds = %do.end1057
  %637 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %offs1060 = getelementptr inbounds %struct.regexp, %struct.regexp* %637, i32 0, i32 17
  %638 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %offs1060, align 8
  %639 = bitcast %struct.regexp_paren_pair* %638 to i8*
  call void @Perl_safesysfree(i8* %639)
  %640 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %swap, align 8
  %641 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %offs1061 = getelementptr inbounds %struct.regexp, %struct.regexp* %641, i32 0, i32 17
  store %struct.regexp_paren_pair* %640, %struct.regexp_paren_pair** %offs1061, align 8
  br label %if.end1062

if.end1062:                                       ; preds = %if.then1059, %do.end1057
  store i32 0, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.end1062, %if.end1050, %if.end114, %if.then69, %if.then59, %if.then31
  %642 = load i32, i32* %retval, align 4
  ret i32 %642
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @Perl_re_intuit_start(%struct.p5rx* %rx, %struct.sv* %sv, i8* %strbeg, i8* %strpos, i8* %strend, i32 %flags, %struct.re_scream_pos_data_s* %data) #0 {
entry:
  %retval = alloca i8*, align 8
  %rx.addr = alloca %struct.p5rx*, align 8
  %sv.addr = alloca %struct.sv*, align 8
  %strbeg.addr = alloca i8*, align 8
  %strpos.addr = alloca i8*, align 8
  %strend.addr = alloca i8*, align 8
  %flags.addr = alloca i32, align 4
  %data.addr = alloca %struct.re_scream_pos_data_s*, align 8
  %prog = alloca %struct.regexp*, align 8
  %start_shift = alloca i64, align 8
  %end_shift = alloca i64, align 8
  %rx_origin = alloca i8*, align 8
  %check = alloca %struct.sv*, align 8
  %utf8_target = alloca i8, align 1
  %other_ix = alloca i8, align 1
  %ml_anch = alloca i8, align 1
  %other_last = alloca i8*, align 8
  %check_at = alloca i8*, align 8
  %multiline = alloca i32, align 4
  %progi = alloca %struct.regexp_internal*, align 8
  %reginfo_buf = alloca %struct.regmatch_info, align 8
  %reginfo = alloca %struct.regmatch_info*, align 8
  %slen = alloca i64, align 8
  %s = alloca i8*, align 8
  %start_point = alloca i8*, align 8
  %end_point = alloca i8*, align 8
  %len = alloca i64, align 8
  %anchor = alloca i8*, align 8
  %last = alloca i8*, align 8
  %last1 = alloca i8*, align 8
  %s350 = alloca i8*, align 8
  %must = alloca %struct.sv*, align 8
  %other = alloca %struct.reg_substr_datum*, align 8
  %from = alloca i8*, align 8
  %to = alloca i8*, align 8
  %s545 = alloca i8*, align 8
  %str = alloca i8*, align 8
  %cl_l = alloca i32, align 4
  %endpos = alloca i8*, align 8
  %s653 = alloca i8*, align 8
  %rx_max_float = alloca i8*, align 8
  store %struct.p5rx* %rx, %struct.p5rx** %rx.addr, align 8
  store %struct.sv* %sv, %struct.sv** %sv.addr, align 8
  store i8* %strbeg, i8** %strbeg.addr, align 8
  store i8* %strpos, i8** %strpos.addr, align 8
  store i8* %strend, i8** %strend.addr, align 8
  store i32 %flags, i32* %flags.addr, align 4
  store %struct.re_scream_pos_data_s* %data, %struct.re_scream_pos_data_s** %data.addr, align 8
  %0 = load %struct.p5rx*, %struct.p5rx** %rx.addr, align 8
  %call = call %struct.regexp* @S_ReANY(%struct.p5rx* %0)
  store %struct.regexp* %call, %struct.regexp** %prog, align 8
  %1 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs = getelementptr inbounds %struct.regexp, %struct.regexp* %1, i32 0, i32 11
  %2 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs, align 8
  %data1 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %2, i32 0, i32 1
  %arrayidx = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data1, i64 0, i64 2
  %min_offset = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx, i32 0, i32 0
  %3 = load i64, i64* %min_offset, align 8
  store i64 %3, i64* %start_shift, align 8
  store i64 0, i64* %end_shift, align 8
  %4 = load i8*, i8** %strpos.addr, align 8
  store i8* %4, i8** %rx_origin, align 8
  %5 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %tobool = icmp ne %struct.sv* %5, null
  br i1 %tobool, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %entry
  %6 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %6, i32 0, i32 2
  %7 = load i32, i32* %sv_flags, align 4
  %and = and i32 %7, 536870912
  %tobool2 = icmp ne i32 %and, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %8 = phi i1 [ false, %entry ], [ %tobool2, %land.rhs ]
  %9 = zext i1 %8 to i64
  %cond = select i1 %8, i32 1, i32 0
  %tobool3 = icmp ne i32 %cond, 0
  %frombool = zext i1 %tobool3 to i8
  store i8 %frombool, i8* %utf8_target, align 1
  %10 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs4 = getelementptr inbounds %struct.regexp, %struct.regexp* %10, i32 0, i32 11
  %11 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs4, align 8
  %check_ix = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %11, i32 0, i32 0
  %12 = load i8, i8* %check_ix, align 8
  %conv = zext i8 %12 to i32
  %sub = sub nsw i32 1, %conv
  %conv5 = trunc i32 %sub to i8
  store i8 %conv5, i8* %other_ix, align 1
  store i8 0, i8* %ml_anch, align 1
  %13 = load i8*, i8** %strpos.addr, align 8
  store i8* %13, i8** %other_last, align 8
  store i8* null, i8** %check_at, align 8
  %14 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %extflags = getelementptr inbounds %struct.regexp, %struct.regexp* %14, i32 0, i32 7
  %15 = load i32, i32* %extflags, align 8
  %and6 = and i32 %15, 1
  store i32 %and6, i32* %multiline, align 4
  %16 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %pprivate = getelementptr inbounds %struct.regexp, %struct.regexp* %16, i32 0, i32 14
  %17 = load i8*, i8** %pprivate, align 8
  %18 = bitcast i8* %17 to %struct.regexp_internal*
  store %struct.regexp_internal* %18, %struct.regexp_internal** %progi, align 8
  store %struct.regmatch_info* %reginfo_buf, %struct.regmatch_info** %reginfo, align 8
  %19 = load i32, i32* %flags.addr, align 4
  %20 = load %struct.re_scream_pos_data_s*, %struct.re_scream_pos_data_s** %data.addr, align 8
  %21 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %minlen = getelementptr inbounds %struct.regexp, %struct.regexp* %21, i32 0, i32 8
  %22 = load i64, i64* %minlen, align 8
  %23 = load i8*, i8** %strend.addr, align 8
  %24 = load i8*, i8** %strpos.addr, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %23 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %24 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %cmp = icmp sgt i64 %22, %sub.ptr.sub
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %land.end
  br label %fail

if.end:                                           ; preds = %land.end
  %25 = load i8, i8* %utf8_target, align 1
  %tobool8 = trunc i8 %25 to i1
  br i1 %tobool8, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end
  %26 = load %struct.p5rx*, %struct.p5rx** %rx.addr, align 8
  %call10 = call %struct.regexp* @S_ReANY(%struct.p5rx* %26)
  %extflags11 = getelementptr inbounds %struct.regexp, %struct.regexp* %call10, i32 0, i32 7
  %27 = load i32, i32* %extflags11, align 8
  %or = or i32 %27, 1048576
  store i32 %or, i32* %extflags11, align 8
  br label %cond.end

cond.false:                                       ; preds = %if.end
  %28 = load %struct.p5rx*, %struct.p5rx** %rx.addr, align 8
  %call12 = call %struct.regexp* @S_ReANY(%struct.p5rx* %28)
  %extflags13 = getelementptr inbounds %struct.regexp, %struct.regexp* %call12, i32 0, i32 7
  %29 = load i32, i32* %extflags13, align 8
  %and14 = and i32 %29, -1048577
  store i32 %and14, i32* %extflags13, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond15 = phi i32 [ %or, %cond.true ], [ %and14, %cond.false ]
  %30 = load i8, i8* %utf8_target, align 1
  %tobool16 = trunc i8 %30 to i1
  %31 = zext i1 %tobool16 to i64
  %cond18 = select i1 %tobool16, i32 1, i32 0
  %tobool19 = icmp ne i32 %cond18, 0
  %32 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %is_utf8_target = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %32, i32 0, i32 14
  %frombool20 = zext i1 %tobool19 to i8
  store i8 %frombool20, i8* %is_utf8_target, align 2
  %33 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %info_aux = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %33, i32 0, i32 7
  store %struct.regmatch_info_aux* null, %struct.regmatch_info_aux** %info_aux, align 8
  %34 = load i8*, i8** %strbeg.addr, align 8
  %35 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %strbeg21 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %35, i32 0, i32 1
  store i8* %34, i8** %strbeg21, align 8
  %36 = load i8*, i8** %strend.addr, align 8
  %37 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %strend22 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %37, i32 0, i32 2
  store i8* %36, i8** %strend22, align 8
  %38 = load %struct.p5rx*, %struct.p5rx** %rx.addr, align 8
  %sv_flags23 = getelementptr inbounds %struct.p5rx, %struct.p5rx* %38, i32 0, i32 2
  %39 = load i32, i32* %sv_flags23, align 4
  %and24 = and i32 %39, 536870912
  %tobool25 = icmp ne i32 %and24, 0
  %40 = zext i1 %tobool25 to i64
  %cond26 = select i1 %tobool25, i32 1, i32 0
  %tobool27 = icmp ne i32 %cond26, 0
  %41 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %is_utf8_pat = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %41, i32 0, i32 13
  %frombool28 = zext i1 %tobool27 to i8
  store i8 %frombool28, i8* %is_utf8_pat, align 1
  %42 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %intuit = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %42, i32 0, i32 12
  store i8 1, i8* %intuit, align 8
  %43 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %poscache_maxiter = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %43, i32 0, i32 9
  store i32 0, i32* %poscache_maxiter, align 8
  %44 = load i8, i8* %utf8_target, align 1
  %tobool29 = trunc i8 %44 to i1
  br i1 %tobool29, label %if.then30, label %if.else

if.then30:                                        ; preds = %cond.end
  %45 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs31 = getelementptr inbounds %struct.regexp, %struct.regexp* %45, i32 0, i32 11
  %46 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs31, align 8
  %data32 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %46, i32 0, i32 1
  %arrayidx33 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data32, i64 0, i64 2
  %utf8_substr = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx33, i32 0, i32 3
  %47 = load %struct.sv*, %struct.sv** %utf8_substr, align 8
  %tobool34 = icmp ne %struct.sv* %47, null
  br i1 %tobool34, label %if.end40, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.then30
  %48 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs35 = getelementptr inbounds %struct.regexp, %struct.regexp* %48, i32 0, i32 11
  %49 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs35, align 8
  %data36 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %49, i32 0, i32 1
  %arrayidx37 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data36, i64 0, i64 2
  %substr = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx37, i32 0, i32 2
  %50 = load %struct.sv*, %struct.sv** %substr, align 8
  %tobool38 = icmp ne %struct.sv* %50, null
  br i1 %tobool38, label %if.then39, label %if.end40

if.then39:                                        ; preds = %land.lhs.true
  %51 = load %struct.regexp*, %struct.regexp** %prog, align 8
  call void @S_to_utf8_substr(%struct.regexp* %51)
  br label %if.end40

if.end40:                                         ; preds = %if.then39, %land.lhs.true, %if.then30
  %52 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs41 = getelementptr inbounds %struct.regexp, %struct.regexp* %52, i32 0, i32 11
  %53 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs41, align 8
  %data42 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %53, i32 0, i32 1
  %arrayidx43 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data42, i64 0, i64 2
  %utf8_substr44 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx43, i32 0, i32 3
  %54 = load %struct.sv*, %struct.sv** %utf8_substr44, align 8
  store %struct.sv* %54, %struct.sv** %check, align 8
  br label %if.end65

if.else:                                          ; preds = %cond.end
  %55 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs45 = getelementptr inbounds %struct.regexp, %struct.regexp* %55, i32 0, i32 11
  %56 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs45, align 8
  %data46 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %56, i32 0, i32 1
  %arrayidx47 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data46, i64 0, i64 2
  %substr48 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx47, i32 0, i32 2
  %57 = load %struct.sv*, %struct.sv** %substr48, align 8
  %tobool49 = icmp ne %struct.sv* %57, null
  br i1 %tobool49, label %if.end60, label %land.lhs.true50

land.lhs.true50:                                  ; preds = %if.else
  %58 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs51 = getelementptr inbounds %struct.regexp, %struct.regexp* %58, i32 0, i32 11
  %59 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs51, align 8
  %data52 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %59, i32 0, i32 1
  %arrayidx53 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data52, i64 0, i64 2
  %utf8_substr54 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx53, i32 0, i32 3
  %60 = load %struct.sv*, %struct.sv** %utf8_substr54, align 8
  %tobool55 = icmp ne %struct.sv* %60, null
  br i1 %tobool55, label %if.then56, label %if.end60

if.then56:                                        ; preds = %land.lhs.true50
  %61 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %call57 = call zeroext i1 @S_to_byte_substr(%struct.regexp* %61)
  br i1 %call57, label %if.end59, label %if.then58

if.then58:                                        ; preds = %if.then56
  br label %do.body

do.body:                                          ; preds = %if.then58
  br label %fail

do.end:                                           ; No predecessors!
  br label %if.end59

if.end59:                                         ; preds = %do.end, %if.then56
  br label %if.end60

if.end60:                                         ; preds = %if.end59, %land.lhs.true50, %if.else
  %62 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs61 = getelementptr inbounds %struct.regexp, %struct.regexp* %62, i32 0, i32 11
  %63 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs61, align 8
  %data62 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %63, i32 0, i32 1
  %arrayidx63 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data62, i64 0, i64 2
  %substr64 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx63, i32 0, i32 2
  %64 = load %struct.sv*, %struct.sv** %substr64, align 8
  store %struct.sv* %64, %struct.sv** %check, align 8
  br label %if.end65

if.end65:                                         ; preds = %if.end60, %if.end40
  %65 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %intflags = getelementptr inbounds %struct.regexp, %struct.regexp* %65, i32 0, i32 13
  %66 = load i32, i32* %intflags, align 4
  %and66 = and i32 %66, 7168
  %tobool67 = icmp ne i32 %and66, 0
  br i1 %tobool67, label %if.then68, label %if.end174

if.then68:                                        ; preds = %if.end65
  %67 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %intflags69 = getelementptr inbounds %struct.regexp, %struct.regexp* %67, i32 0, i32 13
  %68 = load i32, i32* %intflags69, align 4
  %and70 = and i32 %68, 1024
  %tobool71 = icmp ne i32 %and70, 0
  br i1 %tobool71, label %land.rhs72, label %land.end76

land.rhs72:                                       ; preds = %if.then68
  %69 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %intflags73 = getelementptr inbounds %struct.regexp, %struct.regexp* %69, i32 0, i32 13
  %70 = load i32, i32* %intflags73, align 4
  %and74 = and i32 %70, 2
  %tobool75 = icmp ne i32 %and74, 0
  %lnot = xor i1 %tobool75, true
  br label %land.end76

land.end76:                                       ; preds = %land.rhs72, %if.then68
  %71 = phi i1 [ false, %if.then68 ], [ %lnot, %land.rhs72 ]
  %frombool77 = zext i1 %71 to i8
  store i8 %frombool77, i8* %ml_anch, align 1
  %72 = load i8, i8* %ml_anch, align 1
  %tobool78 = trunc i8 %72 to i1
  br i1 %tobool78, label %if.end173, label %land.lhs.true79

land.lhs.true79:                                  ; preds = %land.end76
  %73 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %intflags80 = getelementptr inbounds %struct.regexp, %struct.regexp* %73, i32 0, i32 13
  %74 = load i32, i32* %intflags80, align 4
  %and81 = and i32 %74, 2
  %tobool82 = icmp ne i32 %and81, 0
  br i1 %tobool82, label %if.end173, label %if.then83

if.then83:                                        ; preds = %land.lhs.true79
  %75 = load i8*, i8** %strpos.addr, align 8
  %76 = load i8*, i8** %strbeg.addr, align 8
  %cmp84 = icmp ne i8* %75, %76
  br i1 %cmp84, label %land.lhs.true86, label %if.end91

land.lhs.true86:                                  ; preds = %if.then83
  %77 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %intflags87 = getelementptr inbounds %struct.regexp, %struct.regexp* %77, i32 0, i32 13
  %78 = load i32, i32* %intflags87, align 4
  %and88 = and i32 %78, 2048
  %tobool89 = icmp ne i32 %and88, 0
  br i1 %tobool89, label %if.then90, label %if.end91

if.then90:                                        ; preds = %land.lhs.true86
  br label %fail

if.end91:                                         ; preds = %land.lhs.true86, %if.then83
  %79 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs92 = getelementptr inbounds %struct.regexp, %struct.regexp* %79, i32 0, i32 11
  %80 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs92, align 8
  %data93 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %80, i32 0, i32 1
  %arrayidx94 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data93, i64 0, i64 2
  %min_offset95 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx94, i32 0, i32 0
  %81 = load i64, i64* %min_offset95, align 8
  %82 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs96 = getelementptr inbounds %struct.regexp, %struct.regexp* %82, i32 0, i32 11
  %83 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs96, align 8
  %data97 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %83, i32 0, i32 1
  %arrayidx98 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data97, i64 0, i64 2
  %max_offset = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx98, i32 0, i32 1
  %84 = load i64, i64* %max_offset, align 8
  %cmp99 = icmp eq i64 %81, %84
  br i1 %cmp99, label %land.lhs.true101, label %if.end172

land.lhs.true101:                                 ; preds = %if.end91
  %85 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %intflags102 = getelementptr inbounds %struct.regexp, %struct.regexp* %85, i32 0, i32 13
  %86 = load i32, i32* %intflags102, align 4
  %and103 = and i32 %86, 128
  %tobool104 = icmp ne i32 %and103, 0
  br i1 %tobool104, label %if.end172, label %if.then105

if.then105:                                       ; preds = %land.lhs.true101
  %87 = load %struct.sv*, %struct.sv** %check, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %87, i32 0, i32 0
  %88 = load i8*, i8** %sv_any, align 8
  %89 = bitcast i8* %88 to %struct.xpv*
  %xpv_cur = getelementptr inbounds %struct.xpv, %struct.xpv* %89, i32 0, i32 2
  %90 = load i64, i64* %xpv_cur, align 8
  store i64 %90, i64* %slen, align 8
  %91 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %is_utf8_target106 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %91, i32 0, i32 14
  %92 = load i8, i8* %is_utf8_target106, align 2
  %tobool107 = trunc i8 %92 to i1
  br i1 %tobool107, label %cond.true109, label %cond.false115

cond.true109:                                     ; preds = %if.then105
  %93 = load i8*, i8** %strpos.addr, align 8
  %94 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs110 = getelementptr inbounds %struct.regexp, %struct.regexp* %94, i32 0, i32 11
  %95 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs110, align 8
  %data111 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %95, i32 0, i32 1
  %arrayidx112 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data111, i64 0, i64 2
  %min_offset113 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx112, i32 0, i32 0
  %96 = load i64, i64* %min_offset113, align 8
  %97 = load i8*, i8** %strend.addr, align 8
  %call114 = call i8* @S_reghop3(i8* %93, i64 %96, i8* %97)
  br label %cond.end120

cond.false115:                                    ; preds = %if.then105
  %98 = load i8*, i8** %strpos.addr, align 8
  %99 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs116 = getelementptr inbounds %struct.regexp, %struct.regexp* %99, i32 0, i32 11
  %100 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs116, align 8
  %data117 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %100, i32 0, i32 1
  %arrayidx118 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data117, i64 0, i64 2
  %min_offset119 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx118, i32 0, i32 0
  %101 = load i64, i64* %min_offset119, align 8
  %add.ptr = getelementptr inbounds i8, i8* %98, i64 %101
  br label %cond.end120

cond.end120:                                      ; preds = %cond.false115, %cond.true109
  %cond121 = phi i8* [ %call114, %cond.true109 ], [ %add.ptr, %cond.false115 ]
  store i8* %cond121, i8** %s, align 8
  %102 = load %struct.sv*, %struct.sv** %check, align 8
  %sv_flags122 = getelementptr inbounds %struct.sv, %struct.sv* %102, i32 0, i32 2
  %103 = load i32, i32* %sv_flags122, align 4
  %and123 = and i32 %103, -1073741824
  %cmp124 = icmp eq i32 %and123, -1073741824
  br i1 %cmp124, label %if.then126, label %if.end153

if.then126:                                       ; preds = %cond.end120
  %104 = load i32, i32* %multiline, align 4
  %tobool127 = icmp ne i32 %104, 0
  br i1 %tobool127, label %if.end152, label %land.lhs.true128

land.lhs.true128:                                 ; preds = %if.then126
  %105 = load i8*, i8** %strend.addr, align 8
  %106 = load i8*, i8** %s, align 8
  %sub.ptr.lhs.cast129 = ptrtoint i8* %105 to i64
  %sub.ptr.rhs.cast130 = ptrtoint i8* %106 to i64
  %sub.ptr.sub131 = sub i64 %sub.ptr.lhs.cast129, %sub.ptr.rhs.cast130
  %107 = load i64, i64* %slen, align 8
  %cmp132 = icmp sgt i64 %sub.ptr.sub131, %107
  br i1 %cmp132, label %if.then151, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true128
  %108 = load i8*, i8** %strend.addr, align 8
  %109 = load i8*, i8** %s, align 8
  %sub.ptr.lhs.cast134 = ptrtoint i8* %108 to i64
  %sub.ptr.rhs.cast135 = ptrtoint i8* %109 to i64
  %sub.ptr.sub136 = sub i64 %sub.ptr.lhs.cast134, %sub.ptr.rhs.cast135
  %110 = load i64, i64* %slen, align 8
  %sub137 = sub nsw i64 %110, 1
  %cmp138 = icmp slt i64 %sub.ptr.sub136, %sub137
  br i1 %cmp138, label %if.then151, label %lor.lhs.false140

lor.lhs.false140:                                 ; preds = %lor.lhs.false
  %111 = load i8*, i8** %strend.addr, align 8
  %112 = load i8*, i8** %s, align 8
  %sub.ptr.lhs.cast141 = ptrtoint i8* %111 to i64
  %sub.ptr.rhs.cast142 = ptrtoint i8* %112 to i64
  %sub.ptr.sub143 = sub i64 %sub.ptr.lhs.cast141, %sub.ptr.rhs.cast142
  %113 = load i64, i64* %slen, align 8
  %cmp144 = icmp eq i64 %sub.ptr.sub143, %113
  br i1 %cmp144, label %land.lhs.true146, label %if.end152

land.lhs.true146:                                 ; preds = %lor.lhs.false140
  %114 = load i8*, i8** %strend.addr, align 8
  %arrayidx147 = getelementptr inbounds i8, i8* %114, i64 -1
  %115 = load i8, i8* %arrayidx147, align 1
  %conv148 = sext i8 %115 to i32
  %cmp149 = icmp ne i32 %conv148, 10
  br i1 %cmp149, label %if.then151, label %if.end152

if.then151:                                       ; preds = %land.lhs.true146, %lor.lhs.false, %land.lhs.true128
  br label %fail_finish

if.end152:                                        ; preds = %land.lhs.true146, %lor.lhs.false140, %if.then126
  %116 = load i64, i64* %slen, align 8
  %dec = add nsw i64 %116, -1
  store i64 %dec, i64* %slen, align 8
  br label %if.end153

if.end153:                                        ; preds = %if.end152, %cond.end120
  %117 = load i64, i64* %slen, align 8
  %tobool154 = icmp ne i64 %117, 0
  br i1 %tobool154, label %land.lhs.true155, label %if.end171

land.lhs.true155:                                 ; preds = %if.end153
  %118 = load %struct.sv*, %struct.sv** %check, align 8
  %sv_u = getelementptr inbounds %struct.sv, %struct.sv* %118, i32 0, i32 3
  %svu_pv = bitcast %union.anon* %sv_u to i8**
  %119 = load i8*, i8** %svu_pv, align 8
  %add.ptr156 = getelementptr inbounds i8, i8* %119, i64 0
  %120 = load i8, i8* %add.ptr156, align 1
  %conv157 = sext i8 %120 to i32
  %121 = load i8*, i8** %s, align 8
  %122 = load i8, i8* %121, align 1
  %conv158 = sext i8 %122 to i32
  %cmp159 = icmp ne i32 %conv157, %conv158
  br i1 %cmp159, label %if.then170, label %lor.lhs.false161

lor.lhs.false161:                                 ; preds = %land.lhs.true155
  %123 = load i64, i64* %slen, align 8
  %cmp162 = icmp sgt i64 %123, 1
  br i1 %cmp162, label %land.lhs.true164, label %if.end171

land.lhs.true164:                                 ; preds = %lor.lhs.false161
  %124 = load %struct.sv*, %struct.sv** %check, align 8
  %sv_u165 = getelementptr inbounds %struct.sv, %struct.sv* %124, i32 0, i32 3
  %svu_pv166 = bitcast %union.anon* %sv_u165 to i8**
  %125 = load i8*, i8** %svu_pv166, align 8
  %add.ptr167 = getelementptr inbounds i8, i8* %125, i64 0
  %126 = load i8*, i8** %s, align 8
  %127 = load i64, i64* %slen, align 8
  %call168 = call i32 @memcmp(i8* %add.ptr167, i8* %126, i64 %127) #5
  %tobool169 = icmp ne i32 %call168, 0
  br i1 %tobool169, label %if.then170, label %if.end171

if.then170:                                       ; preds = %land.lhs.true164, %land.lhs.true155
  br label %fail_finish

if.end171:                                        ; preds = %land.lhs.true164, %lor.lhs.false161, %if.end153
  %128 = load i8*, i8** %s, align 8
  store i8* %128, i8** %check_at, align 8
  br label %success_at_start

if.end172:                                        ; preds = %land.lhs.true101, %if.end91
  br label %if.end173

if.end173:                                        ; preds = %if.end172, %land.lhs.true79, %land.end76
  br label %if.end174

if.end174:                                        ; preds = %if.end173, %if.end65
  %129 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs175 = getelementptr inbounds %struct.regexp, %struct.regexp* %129, i32 0, i32 11
  %130 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs175, align 8
  %data176 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %130, i32 0, i32 1
  %arrayidx177 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data176, i64 0, i64 2
  %end_shift178 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx177, i32 0, i32 4
  %131 = load i64, i64* %end_shift178, align 8
  store i64 %131, i64* %end_shift, align 8
  br label %restart

restart:                                          ; preds = %if.end809, %if.then596, %cond.end502, %if.end174
  %132 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %intflags179 = getelementptr inbounds %struct.regexp, %struct.regexp* %132, i32 0, i32 13
  %133 = load i32, i32* %intflags179, align 4
  %and180 = and i32 %133, 128
  %tobool181 = icmp ne i32 %and180, 0
  br i1 %tobool181, label %if.then182, label %if.else189

if.then182:                                       ; preds = %restart
  %134 = load i8*, i8** %rx_origin, align 8
  %135 = load i64, i64* %start_shift, align 8
  %add.ptr183 = getelementptr inbounds i8, i8* %134, i64 %135
  store i8* %add.ptr183, i8** %start_point, align 8
  %136 = load i8*, i8** %strend.addr, align 8
  %137 = load i64, i64* %end_shift, align 8
  %idx.neg = sub i64 0, %137
  %add.ptr184 = getelementptr inbounds i8, i8* %136, i64 %idx.neg
  store i8* %add.ptr184, i8** %end_point, align 8
  %138 = load i8*, i8** %start_point, align 8
  %139 = load i8*, i8** %end_point, align 8
  %cmp185 = icmp ugt i8* %138, %139
  br i1 %cmp185, label %if.then187, label %if.end188

if.then187:                                       ; preds = %if.then182
  br label %fail_finish

if.end188:                                        ; preds = %if.then182
  br label %if.end220

if.else189:                                       ; preds = %restart
  %140 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %is_utf8_target190 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %140, i32 0, i32 14
  %141 = load i8, i8* %is_utf8_target190, align 2
  %tobool191 = trunc i8 %141 to i1
  br i1 %tobool191, label %cond.true193, label %cond.false196

cond.true193:                                     ; preds = %if.else189
  %142 = load i8*, i8** %strend.addr, align 8
  %143 = load i64, i64* %end_shift, align 8
  %sub194 = sub nsw i64 0, %143
  %144 = load i8*, i8** %strbeg.addr, align 8
  %call195 = call i8* @S_reghop3(i8* %142, i64 %sub194, i8* %144)
  br label %cond.end199

cond.false196:                                    ; preds = %if.else189
  %145 = load i8*, i8** %strend.addr, align 8
  %146 = load i64, i64* %end_shift, align 8
  %sub197 = sub nsw i64 0, %146
  %add.ptr198 = getelementptr inbounds i8, i8* %145, i64 %sub197
  br label %cond.end199

cond.end199:                                      ; preds = %cond.false196, %cond.true193
  %cond200 = phi i8* [ %call195, %cond.true193 ], [ %add.ptr198, %cond.false196 ]
  store i8* %cond200, i8** %end_point, align 8
  %147 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %is_utf8_target201 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %147, i32 0, i32 14
  %148 = load i8, i8* %is_utf8_target201, align 2
  %tobool202 = trunc i8 %148 to i1
  br i1 %tobool202, label %cond.true204, label %cond.false206

cond.true204:                                     ; preds = %cond.end199
  %149 = load i8*, i8** %rx_origin, align 8
  %150 = load i64, i64* %start_shift, align 8
  %151 = load i8*, i8** %end_point, align 8
  %call205 = call i8* @S_reghopmaybe3(i8* %149, i64 %150, i8* %151)
  br label %cond.end215

cond.false206:                                    ; preds = %cond.end199
  %152 = load i8*, i8** %rx_origin, align 8
  %153 = load i64, i64* %start_shift, align 8
  %add.ptr207 = getelementptr inbounds i8, i8* %152, i64 %153
  %154 = load i8*, i8** %end_point, align 8
  %cmp208 = icmp ule i8* %add.ptr207, %154
  br i1 %cmp208, label %cond.true210, label %cond.false212

cond.true210:                                     ; preds = %cond.false206
  %155 = load i8*, i8** %rx_origin, align 8
  %156 = load i64, i64* %start_shift, align 8
  %add.ptr211 = getelementptr inbounds i8, i8* %155, i64 %156
  br label %cond.end213

cond.false212:                                    ; preds = %cond.false206
  br label %cond.end213

cond.end213:                                      ; preds = %cond.false212, %cond.true210
  %cond214 = phi i8* [ %add.ptr211, %cond.true210 ], [ null, %cond.false212 ]
  br label %cond.end215

cond.end215:                                      ; preds = %cond.end213, %cond.true204
  %cond216 = phi i8* [ %call205, %cond.true204 ], [ %cond214, %cond.end213 ]
  store i8* %cond216, i8** %start_point, align 8
  %157 = load i8*, i8** %start_point, align 8
  %tobool217 = icmp ne i8* %157, null
  br i1 %tobool217, label %if.end219, label %if.then218

if.then218:                                       ; preds = %cond.end215
  br label %fail_finish

if.end219:                                        ; preds = %cond.end215
  br label %if.end220

if.end220:                                        ; preds = %if.end219, %if.end188
  %158 = load i8, i8* %ml_anch, align 1
  %tobool221 = trunc i8 %158 to i1
  br i1 %tobool221, label %if.end297, label %land.lhs.true222

land.lhs.true222:                                 ; preds = %if.end220
  %159 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %intflags223 = getelementptr inbounds %struct.regexp, %struct.regexp* %159, i32 0, i32 13
  %160 = load i32, i32* %intflags223, align 4
  %and224 = and i32 %160, 7168
  %tobool225 = icmp ne i32 %and224, 0
  br i1 %tobool225, label %land.lhs.true226, label %if.end297

land.lhs.true226:                                 ; preds = %land.lhs.true222
  %161 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs227 = getelementptr inbounds %struct.regexp, %struct.regexp* %161, i32 0, i32 11
  %162 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs227, align 8
  %data228 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %162, i32 0, i32 1
  %arrayidx229 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data228, i64 0, i64 2
  %max_offset230 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx229, i32 0, i32 1
  %163 = load i64, i64* %max_offset230, align 8
  %cmp231 = icmp ne i64 %163, 9223372036854775807
  br i1 %cmp231, label %if.then233, label %if.end297

if.then233:                                       ; preds = %land.lhs.true226
  %164 = load %struct.sv*, %struct.sv** %check, align 8
  %sv_any234 = getelementptr inbounds %struct.sv, %struct.sv* %164, i32 0, i32 0
  %165 = load i8*, i8** %sv_any234, align 8
  %166 = bitcast i8* %165 to %struct.xpv*
  %xpv_cur235 = getelementptr inbounds %struct.xpv, %struct.xpv* %166, i32 0, i32 2
  %167 = load i64, i64* %xpv_cur235, align 8
  %168 = load %struct.sv*, %struct.sv** %check, align 8
  %sv_flags236 = getelementptr inbounds %struct.sv, %struct.sv* %168, i32 0, i32 2
  %169 = load i32, i32* %sv_flags236, align 4
  %and237 = and i32 %169, -1073741824
  %cmp238 = icmp eq i32 %and237, -1073741824
  %lnot240 = xor i1 %cmp238, true
  %lnot241 = xor i1 %lnot240, true
  %lnot.ext = zext i1 %lnot241 to i32
  %conv242 = sext i32 %lnot.ext to i64
  %sub243 = sub i64 %167, %conv242
  store i64 %sub243, i64* %len, align 8
  %170 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %intflags244 = getelementptr inbounds %struct.regexp, %struct.regexp* %170, i32 0, i32 13
  %171 = load i32, i32* %intflags244, align 4
  %and245 = and i32 %171, 4096
  %tobool246 = icmp ne i32 %and245, 0
  br i1 %tobool246, label %cond.true247, label %cond.false248

cond.true247:                                     ; preds = %if.then233
  %172 = load i8*, i8** %strpos.addr, align 8
  br label %cond.end249

cond.false248:                                    ; preds = %if.then233
  %173 = load i8*, i8** %strbeg.addr, align 8
  br label %cond.end249

cond.end249:                                      ; preds = %cond.false248, %cond.true247
  %cond250 = phi i8* [ %172, %cond.true247 ], [ %173, %cond.false248 ]
  store i8* %cond250, i8** %anchor, align 8
  %174 = load i8*, i8** %end_point, align 8
  %175 = load i8*, i8** %anchor, align 8
  %sub.ptr.lhs.cast251 = ptrtoint i8* %174 to i64
  %sub.ptr.rhs.cast252 = ptrtoint i8* %175 to i64
  %sub.ptr.sub253 = sub i64 %sub.ptr.lhs.cast251, %sub.ptr.rhs.cast252
  %176 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs254 = getelementptr inbounds %struct.regexp, %struct.regexp* %176, i32 0, i32 11
  %177 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs254, align 8
  %data255 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %177, i32 0, i32 1
  %arrayidx256 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data255, i64 0, i64 2
  %max_offset257 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx256, i32 0, i32 1
  %178 = load i64, i64* %max_offset257, align 8
  %cmp258 = icmp sgt i64 %sub.ptr.sub253, %178
  br i1 %cmp258, label %if.then260, label %if.end296

if.then260:                                       ; preds = %cond.end249
  %179 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %is_utf8_target261 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %179, i32 0, i32 14
  %180 = load i8, i8* %is_utf8_target261, align 2
  %tobool262 = trunc i8 %180 to i1
  br i1 %tobool262, label %cond.true264, label %cond.false272

cond.true264:                                     ; preds = %if.then260
  %181 = load i8*, i8** %anchor, align 8
  %182 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs265 = getelementptr inbounds %struct.regexp, %struct.regexp* %182, i32 0, i32 11
  %183 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs265, align 8
  %data266 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %183, i32 0, i32 1
  %arrayidx267 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data266, i64 0, i64 2
  %max_offset268 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx267, i32 0, i32 1
  %184 = load i64, i64* %max_offset268, align 8
  %185 = load i8*, i8** %end_point, align 8
  %186 = load i64, i64* %len, align 8
  %idx.neg269 = sub i64 0, %186
  %add.ptr270 = getelementptr inbounds i8, i8* %185, i64 %idx.neg269
  %call271 = call i8* @S_reghop3(i8* %181, i64 %184, i8* %add.ptr270)
  br label %cond.end293

cond.false272:                                    ; preds = %if.then260
  %187 = load i8*, i8** %anchor, align 8
  %188 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs273 = getelementptr inbounds %struct.regexp, %struct.regexp* %188, i32 0, i32 11
  %189 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs273, align 8
  %data274 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %189, i32 0, i32 1
  %arrayidx275 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data274, i64 0, i64 2
  %max_offset276 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx275, i32 0, i32 1
  %190 = load i64, i64* %max_offset276, align 8
  %add.ptr277 = getelementptr inbounds i8, i8* %187, i64 %190
  %191 = load i8*, i8** %end_point, align 8
  %192 = load i64, i64* %len, align 8
  %idx.neg278 = sub i64 0, %192
  %add.ptr279 = getelementptr inbounds i8, i8* %191, i64 %idx.neg278
  %cmp280 = icmp ugt i8* %add.ptr277, %add.ptr279
  br i1 %cmp280, label %cond.true282, label %cond.false285

cond.true282:                                     ; preds = %cond.false272
  %193 = load i8*, i8** %end_point, align 8
  %194 = load i64, i64* %len, align 8
  %idx.neg283 = sub i64 0, %194
  %add.ptr284 = getelementptr inbounds i8, i8* %193, i64 %idx.neg283
  br label %cond.end291

cond.false285:                                    ; preds = %cond.false272
  %195 = load i8*, i8** %anchor, align 8
  %196 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs286 = getelementptr inbounds %struct.regexp, %struct.regexp* %196, i32 0, i32 11
  %197 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs286, align 8
  %data287 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %197, i32 0, i32 1
  %arrayidx288 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data287, i64 0, i64 2
  %max_offset289 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx288, i32 0, i32 1
  %198 = load i64, i64* %max_offset289, align 8
  %add.ptr290 = getelementptr inbounds i8, i8* %195, i64 %198
  br label %cond.end291

cond.end291:                                      ; preds = %cond.false285, %cond.true282
  %cond292 = phi i8* [ %add.ptr284, %cond.true282 ], [ %add.ptr290, %cond.false285 ]
  br label %cond.end293

cond.end293:                                      ; preds = %cond.end291, %cond.true264
  %cond294 = phi i8* [ %call271, %cond.true264 ], [ %cond292, %cond.end291 ]
  %199 = load i64, i64* %len, align 8
  %add.ptr295 = getelementptr inbounds i8, i8* %cond294, i64 %199
  store i8* %add.ptr295, i8** %end_point, align 8
  br label %if.end296

if.end296:                                        ; preds = %cond.end293, %cond.end249
  br label %if.end297

if.end297:                                        ; preds = %if.end296, %land.lhs.true226, %land.lhs.true222, %if.end220
  %200 = load i8*, i8** %start_point, align 8
  %201 = load i8*, i8** %end_point, align 8
  %202 = load %struct.sv*, %struct.sv** %check, align 8
  %203 = load i32, i32* %multiline, align 4
  %tobool298 = icmp ne i32 %203, 0
  %204 = zext i1 %tobool298 to i64
  %cond299 = select i1 %tobool298, i32 1, i32 0
  %call300 = call i8* @Perl_fbm_instr(i8* %200, i8* %201, %struct.sv* %202, i32 %cond299)
  store i8* %call300, i8** %check_at, align 8
  %205 = load i8*, i8** %check_at, align 8
  %tobool301 = icmp ne i8* %205, null
  br i1 %tobool301, label %if.end303, label %if.then302

if.then302:                                       ; preds = %if.end297
  br label %fail_finish

if.end303:                                        ; preds = %if.end297
  %206 = load i8*, i8** %check_at, align 8
  %207 = load i8*, i8** %rx_origin, align 8
  %sub.ptr.lhs.cast304 = ptrtoint i8* %206 to i64
  %sub.ptr.rhs.cast305 = ptrtoint i8* %207 to i64
  %sub.ptr.sub306 = sub i64 %sub.ptr.lhs.cast304, %sub.ptr.rhs.cast305
  %208 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs307 = getelementptr inbounds %struct.regexp, %struct.regexp* %208, i32 0, i32 11
  %209 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs307, align 8
  %data308 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %209, i32 0, i32 1
  %arrayidx309 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data308, i64 0, i64 2
  %max_offset310 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx309, i32 0, i32 1
  %210 = load i64, i64* %max_offset310, align 8
  %cmp311 = icmp sgt i64 %sub.ptr.sub306, %210
  br i1 %cmp311, label %if.then313, label %if.end333

if.then313:                                       ; preds = %if.end303
  %211 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %is_utf8_target314 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %211, i32 0, i32 14
  %212 = load i8, i8* %is_utf8_target314, align 2
  %tobool315 = trunc i8 %212 to i1
  br i1 %tobool315, label %cond.true317, label %cond.false324

cond.true317:                                     ; preds = %if.then313
  %213 = load i8*, i8** %check_at, align 8
  %214 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs318 = getelementptr inbounds %struct.regexp, %struct.regexp* %214, i32 0, i32 11
  %215 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs318, align 8
  %data319 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %215, i32 0, i32 1
  %arrayidx320 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data319, i64 0, i64 2
  %max_offset321 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx320, i32 0, i32 1
  %216 = load i64, i64* %max_offset321, align 8
  %sub322 = sub nsw i64 0, %216
  %217 = load i8*, i8** %rx_origin, align 8
  %call323 = call i8* @S_reghop3(i8* %213, i64 %sub322, i8* %217)
  br label %cond.end331

cond.false324:                                    ; preds = %if.then313
  %218 = load i8*, i8** %check_at, align 8
  %219 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs325 = getelementptr inbounds %struct.regexp, %struct.regexp* %219, i32 0, i32 11
  %220 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs325, align 8
  %data326 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %220, i32 0, i32 1
  %arrayidx327 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data326, i64 0, i64 2
  %max_offset328 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx327, i32 0, i32 1
  %221 = load i64, i64* %max_offset328, align 8
  %sub329 = sub nsw i64 0, %221
  %add.ptr330 = getelementptr inbounds i8, i8* %218, i64 %sub329
  br label %cond.end331

cond.end331:                                      ; preds = %cond.false324, %cond.true317
  %cond332 = phi i8* [ %call323, %cond.true317 ], [ %add.ptr330, %cond.false324 ]
  store i8* %cond332, i8** %rx_origin, align 8
  br label %if.end333

if.end333:                                        ; preds = %cond.end331, %if.end303
  %222 = load i8, i8* %utf8_target, align 1
  %tobool334 = trunc i8 %222 to i1
  br i1 %tobool334, label %cond.true336, label %cond.false342

cond.true336:                                     ; preds = %if.end333
  %223 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs337 = getelementptr inbounds %struct.regexp, %struct.regexp* %223, i32 0, i32 11
  %224 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs337, align 8
  %data338 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %224, i32 0, i32 1
  %225 = load i8, i8* %other_ix, align 1
  %idxprom = zext i8 %225 to i64
  %arrayidx339 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data338, i64 0, i64 %idxprom
  %utf8_substr340 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx339, i32 0, i32 3
  %226 = load %struct.sv*, %struct.sv** %utf8_substr340, align 8
  %tobool341 = icmp ne %struct.sv* %226, null
  br i1 %tobool341, label %if.then349, label %if.else532

cond.false342:                                    ; preds = %if.end333
  %227 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs343 = getelementptr inbounds %struct.regexp, %struct.regexp* %227, i32 0, i32 11
  %228 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs343, align 8
  %data344 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %228, i32 0, i32 1
  %229 = load i8, i8* %other_ix, align 1
  %idxprom345 = zext i8 %229 to i64
  %arrayidx346 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data344, i64 0, i64 %idxprom345
  %substr347 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx346, i32 0, i32 2
  %230 = load %struct.sv*, %struct.sv** %substr347, align 8
  %tobool348 = icmp ne %struct.sv* %230, null
  br i1 %tobool348, label %if.then349, label %if.else532

if.then349:                                       ; preds = %cond.false342, %cond.true336
  br label %do_other_substr

do_other_substr:                                  ; preds = %if.then770, %if.then612, %if.then349
  %231 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs351 = getelementptr inbounds %struct.regexp, %struct.regexp* %231, i32 0, i32 11
  %232 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs351, align 8
  %data352 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %232, i32 0, i32 1
  %233 = load i8, i8* %other_ix, align 1
  %idxprom353 = zext i8 %233 to i64
  %arrayidx354 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data352, i64 0, i64 %idxprom353
  store %struct.reg_substr_datum* %arrayidx354, %struct.reg_substr_datum** %other, align 8
  %234 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %is_utf8_target355 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %234, i32 0, i32 14
  %235 = load i8, i8* %is_utf8_target355, align 2
  %tobool356 = trunc i8 %235 to i1
  br i1 %tobool356, label %cond.true358, label %cond.false363

cond.true358:                                     ; preds = %do_other_substr
  %236 = load i8*, i8** %strend.addr, align 8
  %237 = load %struct.reg_substr_datum*, %struct.reg_substr_datum** %other, align 8
  %min_offset359 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %237, i32 0, i32 0
  %238 = load i64, i64* %min_offset359, align 8
  %239 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %minlen360 = getelementptr inbounds %struct.regexp, %struct.regexp* %239, i32 0, i32 8
  %240 = load i64, i64* %minlen360, align 8
  %sub361 = sub nsw i64 %238, %240
  %241 = load i8*, i8** %strbeg.addr, align 8
  %call362 = call i8* @S_reghop3(i8* %236, i64 %sub361, i8* %241)
  br label %cond.end369

cond.false363:                                    ; preds = %do_other_substr
  %242 = load i8*, i8** %strend.addr, align 8
  %243 = load %struct.reg_substr_datum*, %struct.reg_substr_datum** %other, align 8
  %min_offset364 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %243, i32 0, i32 0
  %244 = load i64, i64* %min_offset364, align 8
  %add.ptr365 = getelementptr inbounds i8, i8* %242, i64 %244
  %245 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %minlen366 = getelementptr inbounds %struct.regexp, %struct.regexp* %245, i32 0, i32 8
  %246 = load i64, i64* %minlen366, align 8
  %idx.neg367 = sub i64 0, %246
  %add.ptr368 = getelementptr inbounds i8, i8* %add.ptr365, i64 %idx.neg367
  br label %cond.end369

cond.end369:                                      ; preds = %cond.false363, %cond.true358
  %cond370 = phi i8* [ %call362, %cond.true358 ], [ %add.ptr368, %cond.false363 ]
  store i8* %cond370, i8** %last1, align 8
  %247 = load i8, i8* %other_ix, align 1
  %tobool371 = icmp ne i8 %247, 0
  br i1 %tobool371, label %if.then372, label %if.else402

if.then372:                                       ; preds = %cond.end369
  %248 = load i8*, i8** %last1, align 8
  %249 = load i8*, i8** %rx_origin, align 8
  %sub.ptr.lhs.cast373 = ptrtoint i8* %248 to i64
  %sub.ptr.rhs.cast374 = ptrtoint i8* %249 to i64
  %sub.ptr.sub375 = sub i64 %sub.ptr.lhs.cast373, %sub.ptr.rhs.cast374
  %250 = load %struct.reg_substr_datum*, %struct.reg_substr_datum** %other, align 8
  %max_offset376 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %250, i32 0, i32 1
  %251 = load i64, i64* %max_offset376, align 8
  %cmp377 = icmp slt i64 %sub.ptr.sub375, %251
  br i1 %cmp377, label %cond.true379, label %cond.false380

cond.true379:                                     ; preds = %if.then372
  %252 = load i8*, i8** %last1, align 8
  br label %cond.end400

cond.false380:                                    ; preds = %if.then372
  %253 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %is_utf8_target381 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %253, i32 0, i32 14
  %254 = load i8, i8* %is_utf8_target381, align 2
  %tobool382 = trunc i8 %254 to i1
  br i1 %tobool382, label %cond.true384, label %cond.false387

cond.true384:                                     ; preds = %cond.false380
  %255 = load i8*, i8** %rx_origin, align 8
  %256 = load %struct.reg_substr_datum*, %struct.reg_substr_datum** %other, align 8
  %max_offset385 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %256, i32 0, i32 1
  %257 = load i64, i64* %max_offset385, align 8
  %258 = load i8*, i8** %last1, align 8
  %call386 = call i8* @S_reghop3(i8* %255, i64 %257, i8* %258)
  br label %cond.end398

cond.false387:                                    ; preds = %cond.false380
  %259 = load i8*, i8** %rx_origin, align 8
  %260 = load %struct.reg_substr_datum*, %struct.reg_substr_datum** %other, align 8
  %max_offset388 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %260, i32 0, i32 1
  %261 = load i64, i64* %max_offset388, align 8
  %add.ptr389 = getelementptr inbounds i8, i8* %259, i64 %261
  %262 = load i8*, i8** %last1, align 8
  %cmp390 = icmp ugt i8* %add.ptr389, %262
  br i1 %cmp390, label %cond.true392, label %cond.false393

cond.true392:                                     ; preds = %cond.false387
  %263 = load i8*, i8** %last1, align 8
  br label %cond.end396

cond.false393:                                    ; preds = %cond.false387
  %264 = load i8*, i8** %rx_origin, align 8
  %265 = load %struct.reg_substr_datum*, %struct.reg_substr_datum** %other, align 8
  %max_offset394 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %265, i32 0, i32 1
  %266 = load i64, i64* %max_offset394, align 8
  %add.ptr395 = getelementptr inbounds i8, i8* %264, i64 %266
  br label %cond.end396

cond.end396:                                      ; preds = %cond.false393, %cond.true392
  %cond397 = phi i8* [ %263, %cond.true392 ], [ %add.ptr395, %cond.false393 ]
  br label %cond.end398

cond.end398:                                      ; preds = %cond.end396, %cond.true384
  %cond399 = phi i8* [ %call386, %cond.true384 ], [ %cond397, %cond.end396 ]
  br label %cond.end400

cond.end400:                                      ; preds = %cond.end398, %cond.true379
  %cond401 = phi i8* [ %252, %cond.true379 ], [ %cond399, %cond.end398 ]
  store i8* %cond401, i8** %last, align 8
  br label %if.end417

if.else402:                                       ; preds = %cond.end369
  %267 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %is_utf8_target403 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %267, i32 0, i32 14
  %268 = load i8, i8* %is_utf8_target403, align 2
  %tobool404 = trunc i8 %268 to i1
  br i1 %tobool404, label %cond.true406, label %cond.false410

cond.true406:                                     ; preds = %if.else402
  %269 = load i8*, i8** %check_at, align 8
  %270 = load %struct.reg_substr_datum*, %struct.reg_substr_datum** %other, align 8
  %min_offset407 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %270, i32 0, i32 0
  %271 = load i64, i64* %min_offset407, align 8
  %272 = load i64, i64* %start_shift, align 8
  %sub408 = sub nsw i64 %271, %272
  %273 = load i8*, i8** %strbeg.addr, align 8
  %274 = load i8*, i8** %strend.addr, align 8
  %call409 = call i8* @S_reghop4(i8* %269, i64 %sub408, i8* %273, i8* %274)
  br label %cond.end415

cond.false410:                                    ; preds = %if.else402
  %275 = load i8*, i8** %check_at, align 8
  %276 = load %struct.reg_substr_datum*, %struct.reg_substr_datum** %other, align 8
  %min_offset411 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %276, i32 0, i32 0
  %277 = load i64, i64* %min_offset411, align 8
  %add.ptr412 = getelementptr inbounds i8, i8* %275, i64 %277
  %278 = load i64, i64* %start_shift, align 8
  %idx.neg413 = sub i64 0, %278
  %add.ptr414 = getelementptr inbounds i8, i8* %add.ptr412, i64 %idx.neg413
  br label %cond.end415

cond.end415:                                      ; preds = %cond.false410, %cond.true406
  %cond416 = phi i8* [ %call409, %cond.true406 ], [ %add.ptr414, %cond.false410 ]
  store i8* %cond416, i8** %last, align 8
  br label %if.end417

if.end417:                                        ; preds = %cond.end415, %cond.end400
  %279 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %is_utf8_target418 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %279, i32 0, i32 14
  %280 = load i8, i8* %is_utf8_target418, align 2
  %tobool419 = trunc i8 %280 to i1
  br i1 %tobool419, label %cond.true421, label %cond.false424

cond.true421:                                     ; preds = %if.end417
  %281 = load i8*, i8** %rx_origin, align 8
  %282 = load %struct.reg_substr_datum*, %struct.reg_substr_datum** %other, align 8
  %min_offset422 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %282, i32 0, i32 0
  %283 = load i64, i64* %min_offset422, align 8
  %284 = load i8*, i8** %strend.addr, align 8
  %call423 = call i8* @S_reghop3(i8* %281, i64 %283, i8* %284)
  br label %cond.end427

cond.false424:                                    ; preds = %if.end417
  %285 = load i8*, i8** %rx_origin, align 8
  %286 = load %struct.reg_substr_datum*, %struct.reg_substr_datum** %other, align 8
  %min_offset425 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %286, i32 0, i32 0
  %287 = load i64, i64* %min_offset425, align 8
  %add.ptr426 = getelementptr inbounds i8, i8* %285, i64 %287
  br label %cond.end427

cond.end427:                                      ; preds = %cond.false424, %cond.true421
  %cond428 = phi i8* [ %call423, %cond.true421 ], [ %add.ptr426, %cond.false424 ]
  store i8* %cond428, i8** %s350, align 8
  %288 = load i8*, i8** %s350, align 8
  %289 = load i8*, i8** %other_last, align 8
  %cmp429 = icmp ult i8* %288, %289
  br i1 %cmp429, label %if.then431, label %if.end432

if.then431:                                       ; preds = %cond.end427
  %290 = load i8*, i8** %other_last, align 8
  store i8* %290, i8** %s350, align 8
  br label %if.end432

if.end432:                                        ; preds = %if.then431, %cond.end427
  %291 = load i8, i8* %utf8_target, align 1
  %tobool433 = trunc i8 %291 to i1
  br i1 %tobool433, label %cond.true435, label %cond.false437

cond.true435:                                     ; preds = %if.end432
  %292 = load %struct.reg_substr_datum*, %struct.reg_substr_datum** %other, align 8
  %utf8_substr436 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %292, i32 0, i32 3
  %293 = load %struct.sv*, %struct.sv** %utf8_substr436, align 8
  br label %cond.end439

cond.false437:                                    ; preds = %if.end432
  %294 = load %struct.reg_substr_datum*, %struct.reg_substr_datum** %other, align 8
  %substr438 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %294, i32 0, i32 2
  %295 = load %struct.sv*, %struct.sv** %substr438, align 8
  br label %cond.end439

cond.end439:                                      ; preds = %cond.false437, %cond.true435
  %cond440 = phi %struct.sv* [ %293, %cond.true435 ], [ %295, %cond.false437 ]
  store %struct.sv* %cond440, %struct.sv** %must, align 8
  %296 = load i8*, i8** %s350, align 8
  store i8* %296, i8** %from, align 8
  %297 = load i8*, i8** %last, align 8
  %298 = load %struct.sv*, %struct.sv** %must, align 8
  %sv_any441 = getelementptr inbounds %struct.sv, %struct.sv* %298, i32 0, i32 0
  %299 = load i8*, i8** %sv_any441, align 8
  %300 = bitcast i8* %299 to %struct.xpv*
  %xpv_cur442 = getelementptr inbounds %struct.xpv, %struct.xpv* %300, i32 0, i32 2
  %301 = load i64, i64* %xpv_cur442, align 8
  %add.ptr443 = getelementptr inbounds i8, i8* %297, i64 %301
  %302 = load %struct.sv*, %struct.sv** %must, align 8
  %sv_flags444 = getelementptr inbounds %struct.sv, %struct.sv* %302, i32 0, i32 2
  %303 = load i32, i32* %sv_flags444, align 4
  %and445 = and i32 %303, -1073741824
  %cmp446 = icmp eq i32 %and445, -1073741824
  %conv447 = zext i1 %cmp446 to i32
  %cmp448 = icmp ne i32 %conv447, 0
  %conv449 = zext i1 %cmp448 to i32
  %idx.ext = sext i32 %conv449 to i64
  %idx.neg450 = sub i64 0, %idx.ext
  %add.ptr451 = getelementptr inbounds i8, i8* %add.ptr443, i64 %idx.neg450
  store i8* %add.ptr451, i8** %to, align 8
  %304 = load i8*, i8** %from, align 8
  %305 = load i8*, i8** %to, align 8
  %cmp452 = icmp ugt i8* %304, %305
  br i1 %cmp452, label %if.then454, label %if.else455

if.then454:                                       ; preds = %cond.end439
  store i8* null, i8** %s350, align 8
  br label %if.end459

if.else455:                                       ; preds = %cond.end439
  %306 = load i8*, i8** %from, align 8
  %307 = load i8*, i8** %to, align 8
  %308 = load %struct.sv*, %struct.sv** %must, align 8
  %309 = load i32, i32* %multiline, align 4
  %tobool456 = icmp ne i32 %309, 0
  %310 = zext i1 %tobool456 to i64
  %cond457 = select i1 %tobool456, i32 1, i32 0
  %call458 = call i8* @Perl_fbm_instr(i8* %306, i8* %307, %struct.sv* %308, i32 %cond457)
  store i8* %call458, i8** %s350, align 8
  br label %if.end459

if.end459:                                        ; preds = %if.else455, %if.then454
  %311 = load i8*, i8** %s350, align 8
  %tobool460 = icmp ne i8* %311, null
  br i1 %tobool460, label %if.else504, label %if.then461

if.then461:                                       ; preds = %if.end459
  %312 = load i8*, i8** %last, align 8
  %313 = load i8*, i8** %last1, align 8
  %cmp462 = icmp uge i8* %312, %313
  br i1 %cmp462, label %if.then464, label %if.end465

if.then464:                                       ; preds = %if.then461
  br label %fail_finish

if.end465:                                        ; preds = %if.then461
  %314 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %is_utf8_target466 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %314, i32 0, i32 14
  %315 = load i8, i8* %is_utf8_target466, align 2
  %tobool467 = trunc i8 %315 to i1
  br i1 %tobool467, label %cond.true469, label %cond.false471

cond.true469:                                     ; preds = %if.end465
  %316 = load i8*, i8** %last, align 8
  %317 = load i8*, i8** %strend.addr, align 8
  %call470 = call i8* @S_reghop3(i8* %316, i64 1, i8* %317)
  br label %cond.end473

cond.false471:                                    ; preds = %if.end465
  %318 = load i8*, i8** %last, align 8
  %add.ptr472 = getelementptr inbounds i8, i8* %318, i64 1
  br label %cond.end473

cond.end473:                                      ; preds = %cond.false471, %cond.true469
  %cond474 = phi i8* [ %call470, %cond.true469 ], [ %add.ptr472, %cond.false471 ]
  store i8* %cond474, i8** %other_last, align 8
  %319 = load i8, i8* %other_ix, align 1
  %conv475 = zext i8 %319 to i32
  %tobool476 = icmp ne i32 %conv475, 0
  br i1 %tobool476, label %cond.true477, label %cond.false487

cond.true477:                                     ; preds = %cond.end473
  %320 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %is_utf8_target478 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %320, i32 0, i32 14
  %321 = load i8, i8* %is_utf8_target478, align 2
  %tobool479 = trunc i8 %321 to i1
  br i1 %tobool479, label %cond.true481, label %cond.false483

cond.true481:                                     ; preds = %cond.true477
  %322 = load i8*, i8** %rx_origin, align 8
  %323 = load i8*, i8** %strend.addr, align 8
  %call482 = call i8* @S_reghop3(i8* %322, i64 1, i8* %323)
  br label %cond.end485

cond.false483:                                    ; preds = %cond.true477
  %324 = load i8*, i8** %rx_origin, align 8
  %add.ptr484 = getelementptr inbounds i8, i8* %324, i64 1
  br label %cond.end485

cond.end485:                                      ; preds = %cond.false483, %cond.true481
  %cond486 = phi i8* [ %call482, %cond.true481 ], [ %add.ptr484, %cond.false483 ]
  br label %cond.end502

cond.false487:                                    ; preds = %cond.end473
  %325 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %is_utf8_target488 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %325, i32 0, i32 14
  %326 = load i8, i8* %is_utf8_target488, align 2
  %tobool489 = trunc i8 %326 to i1
  br i1 %tobool489, label %cond.true491, label %cond.false495

cond.true491:                                     ; preds = %cond.false487
  %327 = load i8*, i8** %last, align 8
  %328 = load %struct.reg_substr_datum*, %struct.reg_substr_datum** %other, align 8
  %min_offset492 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %328, i32 0, i32 0
  %329 = load i64, i64* %min_offset492, align 8
  %sub493 = sub nsw i64 1, %329
  %330 = load i8*, i8** %strbeg.addr, align 8
  %331 = load i8*, i8** %strend.addr, align 8
  %call494 = call i8* @S_reghop4(i8* %327, i64 %sub493, i8* %330, i8* %331)
  br label %cond.end500

cond.false495:                                    ; preds = %cond.false487
  %332 = load i8*, i8** %last, align 8
  %add.ptr496 = getelementptr inbounds i8, i8* %332, i64 1
  %333 = load %struct.reg_substr_datum*, %struct.reg_substr_datum** %other, align 8
  %min_offset497 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %333, i32 0, i32 0
  %334 = load i64, i64* %min_offset497, align 8
  %idx.neg498 = sub i64 0, %334
  %add.ptr499 = getelementptr inbounds i8, i8* %add.ptr496, i64 %idx.neg498
  br label %cond.end500

cond.end500:                                      ; preds = %cond.false495, %cond.true491
  %cond501 = phi i8* [ %call494, %cond.true491 ], [ %add.ptr499, %cond.false495 ]
  br label %cond.end502

cond.end502:                                      ; preds = %cond.end500, %cond.end485
  %cond503 = phi i8* [ %cond486, %cond.end485 ], [ %cond501, %cond.end500 ]
  store i8* %cond503, i8** %rx_origin, align 8
  br label %restart

if.else504:                                       ; preds = %if.end459
  %335 = load i8, i8* %other_ix, align 1
  %tobool505 = icmp ne i8 %335, 0
  br i1 %tobool505, label %if.then506, label %if.else507

if.then506:                                       ; preds = %if.else504
  %336 = load i8*, i8** %s350, align 8
  store i8* %336, i8** %other_last, align 8
  br label %if.end530

if.else507:                                       ; preds = %if.else504
  %337 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %is_utf8_target508 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %337, i32 0, i32 14
  %338 = load i8, i8* %is_utf8_target508, align 2
  %tobool509 = trunc i8 %338 to i1
  br i1 %tobool509, label %cond.true511, label %cond.false515

cond.true511:                                     ; preds = %if.else507
  %339 = load i8*, i8** %s350, align 8
  %340 = load %struct.reg_substr_datum*, %struct.reg_substr_datum** %other, align 8
  %min_offset512 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %340, i32 0, i32 0
  %341 = load i64, i64* %min_offset512, align 8
  %sub513 = sub nsw i64 0, %341
  %342 = load i8*, i8** %strbeg.addr, align 8
  %call514 = call i8* @S_reghop3(i8* %339, i64 %sub513, i8* %342)
  br label %cond.end519

cond.false515:                                    ; preds = %if.else507
  %343 = load i8*, i8** %s350, align 8
  %344 = load %struct.reg_substr_datum*, %struct.reg_substr_datum** %other, align 8
  %min_offset516 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %344, i32 0, i32 0
  %345 = load i64, i64* %min_offset516, align 8
  %sub517 = sub nsw i64 0, %345
  %add.ptr518 = getelementptr inbounds i8, i8* %343, i64 %sub517
  br label %cond.end519

cond.end519:                                      ; preds = %cond.false515, %cond.true511
  %cond520 = phi i8* [ %call514, %cond.true511 ], [ %add.ptr518, %cond.false515 ]
  store i8* %cond520, i8** %rx_origin, align 8
  %346 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %is_utf8_target521 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %346, i32 0, i32 14
  %347 = load i8, i8* %is_utf8_target521, align 2
  %tobool522 = trunc i8 %347 to i1
  br i1 %tobool522, label %cond.true524, label %cond.false526

cond.true524:                                     ; preds = %cond.end519
  %348 = load i8*, i8** %s350, align 8
  %349 = load i8*, i8** %strend.addr, align 8
  %call525 = call i8* @S_reghop3(i8* %348, i64 1, i8* %349)
  br label %cond.end528

cond.false526:                                    ; preds = %cond.end519
  %350 = load i8*, i8** %s350, align 8
  %add.ptr527 = getelementptr inbounds i8, i8* %350, i64 1
  br label %cond.end528

cond.end528:                                      ; preds = %cond.false526, %cond.true524
  %cond529 = phi i8* [ %call525, %cond.true524 ], [ %add.ptr527, %cond.false526 ]
  store i8* %cond529, i8** %other_last, align 8
  br label %if.end530

if.end530:                                        ; preds = %cond.end528, %if.then506
  br label %if.end531

if.end531:                                        ; preds = %if.end530
  br label %if.end533

if.else532:                                       ; preds = %cond.false342, %cond.true336
  br label %if.end533

if.end533:                                        ; preds = %if.else532, %if.end531
  br label %postprocess_substr_matches

postprocess_substr_matches:                       ; preds = %if.then775, %if.end533
  %351 = load i8, i8* %ml_anch, align 1
  %tobool534 = trunc i8 %351 to i1
  br i1 %tobool534, label %land.lhs.true536, label %if.else614

land.lhs.true536:                                 ; preds = %postprocess_substr_matches
  %352 = load i8*, i8** %rx_origin, align 8
  %353 = load i8*, i8** %strbeg.addr, align 8
  %cmp537 = icmp ne i8* %352, %353
  br i1 %cmp537, label %land.lhs.true539, label %if.else614

land.lhs.true539:                                 ; preds = %land.lhs.true536
  %354 = load i8*, i8** %rx_origin, align 8
  %arrayidx540 = getelementptr inbounds i8, i8* %354, i64 -1
  %355 = load i8, i8* %arrayidx540, align 1
  %conv541 = sext i8 %355 to i32
  %cmp542 = icmp ne i32 %conv541, 10
  br i1 %cmp542, label %if.then544, label %if.else614

if.then544:                                       ; preds = %land.lhs.true539
  %356 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %is_utf8_target546 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %356, i32 0, i32 14
  %357 = load i8, i8* %is_utf8_target546, align 2
  %tobool547 = trunc i8 %357 to i1
  br i1 %tobool547, label %cond.true549, label %cond.false553

cond.true549:                                     ; preds = %if.then544
  %358 = load i8*, i8** %strend.addr, align 8
  %359 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %minlen550 = getelementptr inbounds %struct.regexp, %struct.regexp* %359, i32 0, i32 8
  %360 = load i64, i64* %minlen550, align 8
  %sub551 = sub nsw i64 0, %360
  %361 = load i8*, i8** %strpos.addr, align 8
  %call552 = call i8* @S_reghop3(i8* %358, i64 %sub551, i8* %361)
  br label %cond.end557

cond.false553:                                    ; preds = %if.then544
  %362 = load i8*, i8** %strend.addr, align 8
  %363 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %minlen554 = getelementptr inbounds %struct.regexp, %struct.regexp* %363, i32 0, i32 8
  %364 = load i64, i64* %minlen554, align 8
  %sub555 = sub nsw i64 0, %364
  %add.ptr556 = getelementptr inbounds i8, i8* %362, i64 %sub555
  br label %cond.end557

cond.end557:                                      ; preds = %cond.false553, %cond.true549
  %cond558 = phi i8* [ %call552, %cond.true549 ], [ %add.ptr556, %cond.false553 ]
  store i8* %cond558, i8** %s545, align 8
  %365 = load i8*, i8** %s545, align 8
  %366 = load i8*, i8** %rx_origin, align 8
  %cmp559 = icmp ule i8* %365, %366
  br i1 %cmp559, label %if.then567, label %lor.lhs.false561

lor.lhs.false561:                                 ; preds = %cond.end557
  %367 = load i8*, i8** %rx_origin, align 8
  %368 = load i8*, i8** %s545, align 8
  %369 = load i8*, i8** %rx_origin, align 8
  %sub.ptr.lhs.cast562 = ptrtoint i8* %368 to i64
  %sub.ptr.rhs.cast563 = ptrtoint i8* %369 to i64
  %sub.ptr.sub564 = sub i64 %sub.ptr.lhs.cast562, %sub.ptr.rhs.cast563
  %call565 = call i8* @memchr(i8* %367, i32 10, i64 %sub.ptr.sub564) #5
  store i8* %call565, i8** %rx_origin, align 8
  %tobool566 = icmp ne i8* %call565, null
  br i1 %tobool566, label %if.end568, label %if.then567

if.then567:                                       ; preds = %lor.lhs.false561, %cond.end557
  br label %fail_finish

if.end568:                                        ; preds = %lor.lhs.false561
  %370 = load i8*, i8** %rx_origin, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %370, i32 1
  store i8* %incdec.ptr, i8** %rx_origin, align 8
  %371 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs569 = getelementptr inbounds %struct.regexp, %struct.regexp* %371, i32 0, i32 11
  %372 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs569, align 8
  %check_ix570 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %372, i32 0, i32 0
  %373 = load i8, i8* %check_ix570, align 8
  %conv571 = zext i8 %373 to i32
  %cmp572 = icmp eq i32 %conv571, 0
  br i1 %cmp572, label %if.then596, label %lor.lhs.false574

lor.lhs.false574:                                 ; preds = %if.end568
  %374 = load i8*, i8** %rx_origin, align 8
  %375 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %is_utf8_target575 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %375, i32 0, i32 14
  %376 = load i8, i8* %is_utf8_target575, align 2
  %tobool576 = trunc i8 %376 to i1
  br i1 %tobool576, label %cond.true578, label %cond.false585

cond.true578:                                     ; preds = %lor.lhs.false574
  %377 = load i8*, i8** %check_at, align 8
  %378 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs579 = getelementptr inbounds %struct.regexp, %struct.regexp* %378, i32 0, i32 11
  %379 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs579, align 8
  %data580 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %379, i32 0, i32 1
  %arrayidx581 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data580, i64 0, i64 2
  %min_offset582 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx581, i32 0, i32 0
  %380 = load i64, i64* %min_offset582, align 8
  %sub583 = sub nsw i64 0, %380
  %381 = load i8*, i8** %strpos.addr, align 8
  %call584 = call i8* @S_reghop3(i8* %377, i64 %sub583, i8* %381)
  br label %cond.end592

cond.false585:                                    ; preds = %lor.lhs.false574
  %382 = load i8*, i8** %check_at, align 8
  %383 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs586 = getelementptr inbounds %struct.regexp, %struct.regexp* %383, i32 0, i32 11
  %384 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs586, align 8
  %data587 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %384, i32 0, i32 1
  %arrayidx588 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data587, i64 0, i64 2
  %min_offset589 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx588, i32 0, i32 0
  %385 = load i64, i64* %min_offset589, align 8
  %sub590 = sub nsw i64 0, %385
  %add.ptr591 = getelementptr inbounds i8, i8* %382, i64 %sub590
  br label %cond.end592

cond.end592:                                      ; preds = %cond.false585, %cond.true578
  %cond593 = phi i8* [ %call584, %cond.true578 ], [ %add.ptr591, %cond.false585 ]
  %cmp594 = icmp uge i8* %374, %cond593
  br i1 %cmp594, label %if.then596, label %if.end597

if.then596:                                       ; preds = %cond.end592, %if.end568
  br label %restart

if.end597:                                        ; preds = %cond.end592
  %386 = load i8, i8* %utf8_target, align 1
  %tobool598 = trunc i8 %386 to i1
  br i1 %tobool598, label %cond.true600, label %cond.false606

cond.true600:                                     ; preds = %if.end597
  %387 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs601 = getelementptr inbounds %struct.regexp, %struct.regexp* %387, i32 0, i32 11
  %388 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs601, align 8
  %data602 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %388, i32 0, i32 1
  %arrayidx603 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data602, i64 0, i64 0
  %utf8_substr604 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx603, i32 0, i32 3
  %389 = load %struct.sv*, %struct.sv** %utf8_substr604, align 8
  %tobool605 = icmp ne %struct.sv* %389, null
  br i1 %tobool605, label %if.then612, label %if.end613

cond.false606:                                    ; preds = %if.end597
  %390 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs607 = getelementptr inbounds %struct.regexp, %struct.regexp* %390, i32 0, i32 11
  %391 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs607, align 8
  %data608 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %391, i32 0, i32 1
  %arrayidx609 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data608, i64 0, i64 0
  %substr610 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx609, i32 0, i32 2
  %392 = load %struct.sv*, %struct.sv** %substr610, align 8
  %tobool611 = icmp ne %struct.sv* %392, null
  br i1 %tobool611, label %if.then612, label %if.end613

if.then612:                                       ; preds = %cond.false606, %cond.true600
  br label %do_other_substr

if.end613:                                        ; preds = %cond.false606, %cond.true600
  br label %if.end615

if.else614:                                       ; preds = %land.lhs.true539, %land.lhs.true536, %postprocess_substr_matches
  br label %if.end615

if.end615:                                        ; preds = %if.else614, %if.end613
  br label %success_at_start

success_at_start:                                 ; preds = %if.end615, %if.end171
  %393 = load %struct.regexp_internal*, %struct.regexp_internal** %progi, align 8
  %regstclass = getelementptr inbounds %struct.regexp_internal, %struct.regexp_internal* %393, i32 0, i32 2
  %394 = load %struct.regnode*, %struct.regnode** %regstclass, align 8
  %tobool616 = icmp ne %struct.regnode* %394, null
  br i1 %tobool616, label %land.lhs.true617, label %if.end816

land.lhs.true617:                                 ; preds = %success_at_start
  %395 = load %struct.regexp_internal*, %struct.regexp_internal** %progi, align 8
  %regstclass618 = getelementptr inbounds %struct.regexp_internal, %struct.regexp_internal* %395, i32 0, i32 2
  %396 = load %struct.regnode*, %struct.regnode** %regstclass618, align 8
  %type = getelementptr inbounds %struct.regnode, %struct.regnode* %396, i32 0, i32 1
  %397 = load i8, i8* %type, align 1
  %idxprom619 = zext i8 %397 to i64
  %arrayidx620 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_regkind, i64 0, i64 %idxprom619
  %398 = load i8, i8* %arrayidx620, align 1
  %conv621 = zext i8 %398 to i32
  %cmp622 = icmp ne i32 %conv621, 72
  br i1 %cmp622, label %if.then624, label %if.end816

if.then624:                                       ; preds = %land.lhs.true617
  %399 = load %struct.regexp_internal*, %struct.regexp_internal** %progi, align 8
  %regstclass625 = getelementptr inbounds %struct.regexp_internal, %struct.regexp_internal* %399, i32 0, i32 2
  %400 = load %struct.regnode*, %struct.regnode** %regstclass625, align 8
  %401 = bitcast %struct.regnode* %400 to %struct.regnode_string*
  %string = getelementptr inbounds %struct.regnode_string, %struct.regnode_string* %401, i32 0, i32 3
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %string, i64 0, i64 0
  store i8* %arraydecay, i8** %str, align 8
  %402 = load %struct.regexp_internal*, %struct.regexp_internal** %progi, align 8
  %regstclass626 = getelementptr inbounds %struct.regexp_internal, %struct.regexp_internal* %402, i32 0, i32 2
  %403 = load %struct.regnode*, %struct.regnode** %regstclass626, align 8
  %type627 = getelementptr inbounds %struct.regnode, %struct.regnode* %403, i32 0, i32 1
  %404 = load i8, i8* %type627, align 1
  %idxprom628 = zext i8 %404 to i64
  %arrayidx629 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_regkind, i64 0, i64 %idxprom628
  %405 = load i8, i8* %arrayidx629, align 1
  %conv630 = zext i8 %405 to i32
  %cmp631 = icmp eq i32 %conv630, 31
  br i1 %cmp631, label %cond.true633, label %cond.false649

cond.true633:                                     ; preds = %if.then624
  %406 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %is_utf8_pat634 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %406, i32 0, i32 13
  %407 = load i8, i8* %is_utf8_pat634, align 1
  %tobool635 = trunc i8 %407 to i1
  br i1 %tobool635, label %cond.true637, label %cond.false643

cond.true637:                                     ; preds = %cond.true633
  %408 = load i8*, i8** %str, align 8
  %409 = load %struct.regexp_internal*, %struct.regexp_internal** %progi, align 8
  %regstclass638 = getelementptr inbounds %struct.regexp_internal, %struct.regexp_internal* %409, i32 0, i32 2
  %410 = load %struct.regnode*, %struct.regnode** %regstclass638, align 8
  %411 = bitcast %struct.regnode* %410 to %struct.regnode_string*
  %str_len = getelementptr inbounds %struct.regnode_string, %struct.regnode_string* %411, i32 0, i32 0
  %412 = load i8, i8* %str_len, align 2
  %conv639 = zext i8 %412 to i32
  %idx.ext640 = sext i32 %conv639 to i64
  %add.ptr641 = getelementptr inbounds i8, i8* %408, i64 %idx.ext640
  %413 = load i8*, i8** %str, align 8
  %call642 = call i64 @Perl_utf8_distance(i8* %add.ptr641, i8* %413)
  br label %cond.end647

cond.false643:                                    ; preds = %cond.true633
  %414 = load %struct.regexp_internal*, %struct.regexp_internal** %progi, align 8
  %regstclass644 = getelementptr inbounds %struct.regexp_internal, %struct.regexp_internal* %414, i32 0, i32 2
  %415 = load %struct.regnode*, %struct.regnode** %regstclass644, align 8
  %416 = bitcast %struct.regnode* %415 to %struct.regnode_string*
  %str_len645 = getelementptr inbounds %struct.regnode_string, %struct.regnode_string* %416, i32 0, i32 0
  %417 = load i8, i8* %str_len645, align 2
  %conv646 = zext i8 %417 to i64
  br label %cond.end647

cond.end647:                                      ; preds = %cond.false643, %cond.true637
  %cond648 = phi i64 [ %call642, %cond.true637 ], [ %conv646, %cond.false643 ]
  br label %cond.end650

cond.false649:                                    ; preds = %if.then624
  br label %cond.end650

cond.end650:                                      ; preds = %cond.false649, %cond.end647
  %cond651 = phi i64 [ %cond648, %cond.end647 ], [ 1, %cond.false649 ]
  %conv652 = trunc i64 %cond651 to i32
  store i32 %conv652, i32* %cl_l, align 4
  store i8* null, i8** %rx_max_float, align 8
  %418 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs654 = getelementptr inbounds %struct.regexp, %struct.regexp* %418, i32 0, i32 11
  %419 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs654, align 8
  %data655 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %419, i32 0, i32 1
  %arrayidx656 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data655, i64 0, i64 0
  %substr657 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx656, i32 0, i32 2
  %420 = load %struct.sv*, %struct.sv** %substr657, align 8
  %tobool658 = icmp ne %struct.sv* %420, null
  br i1 %tobool658, label %if.then668, label %lor.lhs.false659

lor.lhs.false659:                                 ; preds = %cond.end650
  %421 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs660 = getelementptr inbounds %struct.regexp, %struct.regexp* %421, i32 0, i32 11
  %422 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs660, align 8
  %data661 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %422, i32 0, i32 1
  %arrayidx662 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data661, i64 0, i64 0
  %utf8_substr663 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx662, i32 0, i32 3
  %423 = load %struct.sv*, %struct.sv** %utf8_substr663, align 8
  %tobool664 = icmp ne %struct.sv* %423, null
  br i1 %tobool664, label %if.then668, label %lor.lhs.false665

lor.lhs.false665:                                 ; preds = %lor.lhs.false659
  %424 = load i8, i8* %ml_anch, align 1
  %tobool666 = trunc i8 %424 to i1
  br i1 %tobool666, label %if.then668, label %if.else692

if.then668:                                       ; preds = %lor.lhs.false665, %lor.lhs.false659, %cond.end650
  %425 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %is_utf8_target669 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %425, i32 0, i32 14
  %426 = load i8, i8* %is_utf8_target669, align 2
  %tobool670 = trunc i8 %426 to i1
  br i1 %tobool670, label %cond.true672, label %cond.false681

cond.true672:                                     ; preds = %if.then668
  %427 = load i8*, i8** %rx_origin, align 8
  %428 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %minlen673 = getelementptr inbounds %struct.regexp, %struct.regexp* %428, i32 0, i32 8
  %429 = load i64, i64* %minlen673, align 8
  %tobool674 = icmp ne i64 %429, 0
  br i1 %tobool674, label %cond.true675, label %cond.false676

cond.true675:                                     ; preds = %cond.true672
  %430 = load i32, i32* %cl_l, align 4
  br label %cond.end677

cond.false676:                                    ; preds = %cond.true672
  br label %cond.end677

cond.end677:                                      ; preds = %cond.false676, %cond.true675
  %cond678 = phi i32 [ %430, %cond.true675 ], [ 0, %cond.false676 ]
  %conv679 = sext i32 %cond678 to i64
  %431 = load i8*, i8** %strend.addr, align 8
  %call680 = call i8* @S_reghop3(i8* %427, i64 %conv679, i8* %431)
  br label %cond.end690

cond.false681:                                    ; preds = %if.then668
  %432 = load i8*, i8** %rx_origin, align 8
  %433 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %minlen682 = getelementptr inbounds %struct.regexp, %struct.regexp* %433, i32 0, i32 8
  %434 = load i64, i64* %minlen682, align 8
  %tobool683 = icmp ne i64 %434, 0
  br i1 %tobool683, label %cond.true684, label %cond.false685

cond.true684:                                     ; preds = %cond.false681
  %435 = load i32, i32* %cl_l, align 4
  br label %cond.end686

cond.false685:                                    ; preds = %cond.false681
  br label %cond.end686

cond.end686:                                      ; preds = %cond.false685, %cond.true684
  %cond687 = phi i32 [ %435, %cond.true684 ], [ 0, %cond.false685 ]
  %idx.ext688 = sext i32 %cond687 to i64
  %add.ptr689 = getelementptr inbounds i8, i8* %432, i64 %idx.ext688
  br label %cond.end690

cond.end690:                                      ; preds = %cond.end686, %cond.end677
  %cond691 = phi i8* [ %call680, %cond.end677 ], [ %add.ptr689, %cond.end686 ]
  store i8* %cond691, i8** %endpos, align 8
  br label %if.end729

if.else692:                                       ; preds = %lor.lhs.false665
  %436 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs693 = getelementptr inbounds %struct.regexp, %struct.regexp* %436, i32 0, i32 11
  %437 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs693, align 8
  %data694 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %437, i32 0, i32 1
  %arrayidx695 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data694, i64 0, i64 1
  %substr696 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx695, i32 0, i32 2
  %438 = load %struct.sv*, %struct.sv** %substr696, align 8
  %tobool697 = icmp ne %struct.sv* %438, null
  br i1 %tobool697, label %if.then704, label %lor.lhs.false698

lor.lhs.false698:                                 ; preds = %if.else692
  %439 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs699 = getelementptr inbounds %struct.regexp, %struct.regexp* %439, i32 0, i32 11
  %440 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs699, align 8
  %data700 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %440, i32 0, i32 1
  %arrayidx701 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data700, i64 0, i64 1
  %utf8_substr702 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx701, i32 0, i32 3
  %441 = load %struct.sv*, %struct.sv** %utf8_substr702, align 8
  %tobool703 = icmp ne %struct.sv* %441, null
  br i1 %tobool703, label %if.then704, label %if.else727

if.then704:                                       ; preds = %lor.lhs.false698, %if.else692
  %442 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %is_utf8_target705 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %442, i32 0, i32 14
  %443 = load i8, i8* %is_utf8_target705, align 2
  %tobool706 = trunc i8 %443 to i1
  br i1 %tobool706, label %cond.true708, label %cond.false711

cond.true708:                                     ; preds = %if.then704
  %444 = load i8*, i8** %check_at, align 8
  %445 = load i64, i64* %start_shift, align 8
  %sub709 = sub nsw i64 0, %445
  %446 = load i8*, i8** %strbeg.addr, align 8
  %call710 = call i8* @S_reghop3(i8* %444, i64 %sub709, i8* %446)
  br label %cond.end714

cond.false711:                                    ; preds = %if.then704
  %447 = load i8*, i8** %check_at, align 8
  %448 = load i64, i64* %start_shift, align 8
  %sub712 = sub nsw i64 0, %448
  %add.ptr713 = getelementptr inbounds i8, i8* %447, i64 %sub712
  br label %cond.end714

cond.end714:                                      ; preds = %cond.false711, %cond.true708
  %cond715 = phi i8* [ %call710, %cond.true708 ], [ %add.ptr713, %cond.false711 ]
  store i8* %cond715, i8** %rx_max_float, align 8
  %449 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %is_utf8_target716 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %449, i32 0, i32 14
  %450 = load i8, i8* %is_utf8_target716, align 2
  %tobool717 = trunc i8 %450 to i1
  br i1 %tobool717, label %cond.true719, label %cond.false722

cond.true719:                                     ; preds = %cond.end714
  %451 = load i8*, i8** %rx_max_float, align 8
  %452 = load i32, i32* %cl_l, align 4
  %conv720 = sext i32 %452 to i64
  %453 = load i8*, i8** %strend.addr, align 8
  %call721 = call i8* @S_reghop3(i8* %451, i64 %conv720, i8* %453)
  br label %cond.end725

cond.false722:                                    ; preds = %cond.end714
  %454 = load i8*, i8** %rx_max_float, align 8
  %455 = load i32, i32* %cl_l, align 4
  %idx.ext723 = sext i32 %455 to i64
  %add.ptr724 = getelementptr inbounds i8, i8* %454, i64 %idx.ext723
  br label %cond.end725

cond.end725:                                      ; preds = %cond.false722, %cond.true719
  %cond726 = phi i8* [ %call721, %cond.true719 ], [ %add.ptr724, %cond.false722 ]
  store i8* %cond726, i8** %endpos, align 8
  br label %if.end728

if.else727:                                       ; preds = %lor.lhs.false698
  %456 = load i8*, i8** %strend.addr, align 8
  store i8* %456, i8** %endpos, align 8
  br label %if.end728

if.end728:                                        ; preds = %if.else727, %cond.end725
  br label %if.end729

if.end729:                                        ; preds = %if.end728, %cond.end690
  %457 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %458 = load %struct.regexp_internal*, %struct.regexp_internal** %progi, align 8
  %regstclass730 = getelementptr inbounds %struct.regexp_internal, %struct.regexp_internal* %458, i32 0, i32 2
  %459 = load %struct.regnode*, %struct.regnode** %regstclass730, align 8
  %460 = load i8*, i8** %rx_origin, align 8
  %461 = load i8*, i8** %endpos, align 8
  %462 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %call731 = call i8* @S_find_byclass(%struct.regexp* %457, %struct.regnode* %459, i8* %460, i8* %461, %struct.regmatch_info* %462)
  store i8* %call731, i8** %s653, align 8
  %463 = load i8*, i8** %s653, align 8
  %tobool732 = icmp ne i8* %463, null
  br i1 %tobool732, label %if.end810, label %if.then733

if.then733:                                       ; preds = %if.end729
  %464 = load i8*, i8** %endpos, align 8
  %465 = load i8*, i8** %strend.addr, align 8
  %cmp734 = icmp eq i8* %464, %465
  br i1 %cmp734, label %if.then736, label %if.end737

if.then736:                                       ; preds = %if.then733
  br label %fail

if.end737:                                        ; preds = %if.then733
  %466 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %intflags738 = getelementptr inbounds %struct.regexp, %struct.regexp* %466, i32 0, i32 13
  %467 = load i32, i32* %intflags738, align 4
  %and739 = and i32 %467, 7168
  %tobool740 = icmp ne i32 %and739, 0
  br i1 %tobool740, label %land.lhs.true741, label %if.end748

land.lhs.true741:                                 ; preds = %if.end737
  %468 = load i8, i8* %ml_anch, align 1
  %tobool742 = trunc i8 %468 to i1
  br i1 %tobool742, label %if.end748, label %land.lhs.true743

land.lhs.true743:                                 ; preds = %land.lhs.true741
  %469 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %intflags744 = getelementptr inbounds %struct.regexp, %struct.regexp* %469, i32 0, i32 13
  %470 = load i32, i32* %intflags744, align 4
  %and745 = and i32 %470, 2
  %tobool746 = icmp ne i32 %and745, 0
  br i1 %tobool746, label %if.end748, label %if.then747

if.then747:                                       ; preds = %land.lhs.true743
  br label %fail

if.end748:                                        ; preds = %land.lhs.true743, %land.lhs.true741, %if.end737
  %471 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs749 = getelementptr inbounds %struct.regexp, %struct.regexp* %471, i32 0, i32 11
  %472 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs749, align 8
  %data750 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %472, i32 0, i32 1
  %arrayidx751 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data750, i64 0, i64 0
  %substr752 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx751, i32 0, i32 2
  %473 = load %struct.sv*, %struct.sv** %substr752, align 8
  %tobool753 = icmp ne %struct.sv* %473, null
  br i1 %tobool753, label %if.then760, label %lor.lhs.false754

lor.lhs.false754:                                 ; preds = %if.end748
  %474 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs755 = getelementptr inbounds %struct.regexp, %struct.regexp* %474, i32 0, i32 11
  %475 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs755, align 8
  %data756 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %475, i32 0, i32 1
  %arrayidx757 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data756, i64 0, i64 0
  %utf8_substr758 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx757, i32 0, i32 3
  %476 = load %struct.sv*, %struct.sv** %utf8_substr758, align 8
  %tobool759 = icmp ne %struct.sv* %476, null
  br i1 %tobool759, label %if.then760, label %if.else773

if.then760:                                       ; preds = %lor.lhs.false754, %if.end748
  %477 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs761 = getelementptr inbounds %struct.regexp, %struct.regexp* %477, i32 0, i32 11
  %478 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs761, align 8
  %check_ix762 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %478, i32 0, i32 0
  %479 = load i8, i8* %check_ix762, align 8
  %conv763 = zext i8 %479 to i32
  %cmp764 = icmp eq i32 %conv763, 1
  br i1 %cmp764, label %if.then766, label %if.end772

if.then766:                                       ; preds = %if.then760
  %480 = load i8*, i8** %rx_origin, align 8
  %481 = load i64, i64* %start_shift, align 8
  %add.ptr767 = getelementptr inbounds i8, i8* %480, i64 %481
  %482 = load i8*, i8** %check_at, align 8
  %cmp768 = icmp ne i8* %add.ptr767, %482
  br i1 %cmp768, label %if.then770, label %if.end771

if.then770:                                       ; preds = %if.then766
  br label %do_other_substr

if.end771:                                        ; preds = %if.then766
  br label %if.end772

if.end772:                                        ; preds = %if.end771, %if.then760
  br label %if.end794

if.else773:                                       ; preds = %lor.lhs.false754
  %483 = load i8, i8* %ml_anch, align 1
  %tobool774 = trunc i8 %483 to i1
  br i1 %tobool774, label %if.then775, label %if.end777

if.then775:                                       ; preds = %if.else773
  %484 = load i8*, i8** %rx_origin, align 8
  %incdec.ptr776 = getelementptr inbounds i8, i8* %484, i32 1
  store i8* %incdec.ptr776, i8** %rx_origin, align 8
  br label %postprocess_substr_matches

if.end777:                                        ; preds = %if.else773
  %485 = load i8, i8* %utf8_target, align 1
  %tobool778 = trunc i8 %485 to i1
  br i1 %tobool778, label %cond.true780, label %cond.false786

cond.true780:                                     ; preds = %if.end777
  %486 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs781 = getelementptr inbounds %struct.regexp, %struct.regexp* %486, i32 0, i32 11
  %487 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs781, align 8
  %data782 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %487, i32 0, i32 1
  %arrayidx783 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data782, i64 0, i64 1
  %utf8_substr784 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx783, i32 0, i32 3
  %488 = load %struct.sv*, %struct.sv** %utf8_substr784, align 8
  %tobool785 = icmp ne %struct.sv* %488, null
  br i1 %tobool785, label %if.end793, label %if.then792

cond.false786:                                    ; preds = %if.end777
  %489 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs787 = getelementptr inbounds %struct.regexp, %struct.regexp* %489, i32 0, i32 11
  %490 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs787, align 8
  %data788 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %490, i32 0, i32 1
  %arrayidx789 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data788, i64 0, i64 1
  %substr790 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx789, i32 0, i32 2
  %491 = load %struct.sv*, %struct.sv** %substr790, align 8
  %tobool791 = icmp ne %struct.sv* %491, null
  br i1 %tobool791, label %if.end793, label %if.then792

if.then792:                                       ; preds = %cond.false786, %cond.true780
  br label %fail

if.end793:                                        ; preds = %cond.false786, %cond.true780
  %492 = load i8*, i8** %rx_max_float, align 8
  store i8* %492, i8** %rx_origin, align 8
  br label %if.end794

if.end794:                                        ; preds = %if.end793, %if.end772
  %493 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %is_utf8_target795 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %493, i32 0, i32 14
  %494 = load i8, i8* %is_utf8_target795, align 2
  %tobool796 = trunc i8 %494 to i1
  br i1 %tobool796, label %cond.true798, label %cond.false800

cond.true798:                                     ; preds = %if.end794
  %495 = load i8*, i8** %rx_origin, align 8
  %496 = load i8*, i8** %strend.addr, align 8
  %call799 = call i8* @S_reghop3(i8* %495, i64 1, i8* %496)
  br label %cond.end802

cond.false800:                                    ; preds = %if.end794
  %497 = load i8*, i8** %rx_origin, align 8
  %add.ptr801 = getelementptr inbounds i8, i8* %497, i64 1
  br label %cond.end802

cond.end802:                                      ; preds = %cond.false800, %cond.true798
  %cond803 = phi i8* [ %call799, %cond.true798 ], [ %add.ptr801, %cond.false800 ]
  store i8* %cond803, i8** %rx_origin, align 8
  %498 = load i8*, i8** %rx_origin, align 8
  %499 = load i64, i64* %start_shift, align 8
  %add.ptr804 = getelementptr inbounds i8, i8* %498, i64 %499
  %500 = load i64, i64* %end_shift, align 8
  %add.ptr805 = getelementptr inbounds i8, i8* %add.ptr804, i64 %500
  %501 = load i8*, i8** %strend.addr, align 8
  %cmp806 = icmp ugt i8* %add.ptr805, %501
  br i1 %cmp806, label %if.then808, label %if.end809

if.then808:                                       ; preds = %cond.end802
  br label %fail

if.end809:                                        ; preds = %cond.end802
  br label %restart

if.end810:                                        ; preds = %if.end729
  %502 = load i8*, i8** %rx_origin, align 8
  %503 = load i8*, i8** %s653, align 8
  %cmp811 = icmp ne i8* %502, %503
  br i1 %cmp811, label %if.then813, label %if.else814

if.then813:                                       ; preds = %if.end810
  br label %if.end815

if.else814:                                       ; preds = %if.end810
  br label %if.end815

if.end815:                                        ; preds = %if.else814, %if.then813
  br label %if.end816

if.end816:                                        ; preds = %if.end815, %land.lhs.true617, %success_at_start
  %504 = load i8*, i8** %rx_origin, align 8
  %505 = load i8*, i8** %strpos.addr, align 8
  %cmp817 = icmp ne i8* %504, %505
  br i1 %cmp817, label %if.then819, label %if.else835

if.then819:                                       ; preds = %if.end816
  %506 = load i8, i8* %utf8_target, align 1
  %tobool820 = trunc i8 %506 to i1
  br i1 %tobool820, label %cond.true822, label %cond.false827

cond.true822:                                     ; preds = %if.then819
  %507 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs823 = getelementptr inbounds %struct.regexp, %struct.regexp* %507, i32 0, i32 11
  %508 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs823, align 8
  %data824 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %508, i32 0, i32 1
  %arrayidx825 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data824, i64 0, i64 2
  %utf8_substr826 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx825, i32 0, i32 3
  %509 = load %struct.sv*, %struct.sv** %utf8_substr826, align 8
  br label %cond.end832

cond.false827:                                    ; preds = %if.then819
  %510 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs828 = getelementptr inbounds %struct.regexp, %struct.regexp* %510, i32 0, i32 11
  %511 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs828, align 8
  %data829 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %511, i32 0, i32 1
  %arrayidx830 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data829, i64 0, i64 2
  %substr831 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx830, i32 0, i32 2
  %512 = load %struct.sv*, %struct.sv** %substr831, align 8
  br label %cond.end832

cond.end832:                                      ; preds = %cond.false827, %cond.true822
  %cond833 = phi %struct.sv* [ %509, %cond.true822 ], [ %512, %cond.false827 ]
  %sv_any834 = getelementptr inbounds %struct.sv, %struct.sv* %cond833, i32 0, i32 0
  %513 = load i8*, i8** %sv_any834, align 8
  %514 = bitcast i8* %513 to %struct.xpviv*
  %xiv_u = getelementptr inbounds %struct.xpviv, %struct.xpviv* %514, i32 0, i32 4
  %xivu_iv = bitcast %union._xivu* %xiv_u to i64*
  %515 = load i64, i64* %xivu_iv, align 8
  %inc = add nsw i64 %515, 1
  store i64 %inc, i64* %xivu_iv, align 8
  br label %if.end946

if.else835:                                       ; preds = %if.end816
  %516 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %intflags836 = getelementptr inbounds %struct.regexp, %struct.regexp* %516, i32 0, i32 13
  %517 = load i32, i32* %intflags836, align 4
  %and837 = and i32 %517, 4
  %tobool838 = icmp ne i32 %and837, 0
  br i1 %tobool838, label %if.end945, label %land.lhs.true839

land.lhs.true839:                                 ; preds = %if.else835
  %518 = load i8, i8* %utf8_target, align 1
  %tobool840 = trunc i8 %518 to i1
  br i1 %tobool840, label %cond.true842, label %cond.false870

cond.true842:                                     ; preds = %land.lhs.true839
  %519 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs843 = getelementptr inbounds %struct.regexp, %struct.regexp* %519, i32 0, i32 11
  %520 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs843, align 8
  %data844 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %520, i32 0, i32 1
  %arrayidx845 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data844, i64 0, i64 2
  %utf8_substr846 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx845, i32 0, i32 3
  %521 = load %struct.sv*, %struct.sv** %utf8_substr846, align 8
  %tobool847 = icmp ne %struct.sv* %521, null
  br i1 %tobool847, label %land.lhs.true848, label %if.end945

land.lhs.true848:                                 ; preds = %cond.true842
  %522 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs849 = getelementptr inbounds %struct.regexp, %struct.regexp* %522, i32 0, i32 11
  %523 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs849, align 8
  %data850 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %523, i32 0, i32 1
  %arrayidx851 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data850, i64 0, i64 2
  %utf8_substr852 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx851, i32 0, i32 3
  %524 = load %struct.sv*, %struct.sv** %utf8_substr852, align 8
  %sv_any853 = getelementptr inbounds %struct.sv, %struct.sv* %524, i32 0, i32 0
  %525 = load i8*, i8** %sv_any853, align 8
  %526 = bitcast i8* %525 to %struct.xpviv*
  %xiv_u854 = getelementptr inbounds %struct.xpviv, %struct.xpviv* %526, i32 0, i32 4
  %xivu_iv855 = bitcast %union._xivu* %xiv_u854 to i64*
  %527 = load i64, i64* %xivu_iv855, align 8
  %dec856 = add nsw i64 %527, -1
  store i64 %dec856, i64* %xivu_iv855, align 8
  %cmp857 = icmp slt i64 %dec856, 0
  br i1 %cmp857, label %land.lhs.true859, label %if.end945

land.lhs.true859:                                 ; preds = %land.lhs.true848
  %528 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs860 = getelementptr inbounds %struct.regexp, %struct.regexp* %528, i32 0, i32 11
  %529 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs860, align 8
  %data861 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %529, i32 0, i32 1
  %arrayidx862 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data861, i64 0, i64 2
  %utf8_substr863 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx862, i32 0, i32 3
  %530 = load %struct.sv*, %struct.sv** %utf8_substr863, align 8
  %531 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs864 = getelementptr inbounds %struct.regexp, %struct.regexp* %531, i32 0, i32 11
  %532 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs864, align 8
  %data865 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %532, i32 0, i32 1
  %arrayidx866 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data865, i64 0, i64 1
  %utf8_substr867 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx866, i32 0, i32 3
  %533 = load %struct.sv*, %struct.sv** %utf8_substr867, align 8
  %cmp868 = icmp eq %struct.sv* %530, %533
  br i1 %cmp868, label %if.then898, label %if.end945

cond.false870:                                    ; preds = %land.lhs.true839
  %534 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs871 = getelementptr inbounds %struct.regexp, %struct.regexp* %534, i32 0, i32 11
  %535 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs871, align 8
  %data872 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %535, i32 0, i32 1
  %arrayidx873 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data872, i64 0, i64 2
  %substr874 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx873, i32 0, i32 2
  %536 = load %struct.sv*, %struct.sv** %substr874, align 8
  %tobool875 = icmp ne %struct.sv* %536, null
  br i1 %tobool875, label %land.lhs.true876, label %if.end945

land.lhs.true876:                                 ; preds = %cond.false870
  %537 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs877 = getelementptr inbounds %struct.regexp, %struct.regexp* %537, i32 0, i32 11
  %538 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs877, align 8
  %data878 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %538, i32 0, i32 1
  %arrayidx879 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data878, i64 0, i64 2
  %substr880 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx879, i32 0, i32 2
  %539 = load %struct.sv*, %struct.sv** %substr880, align 8
  %sv_any881 = getelementptr inbounds %struct.sv, %struct.sv* %539, i32 0, i32 0
  %540 = load i8*, i8** %sv_any881, align 8
  %541 = bitcast i8* %540 to %struct.xpviv*
  %xiv_u882 = getelementptr inbounds %struct.xpviv, %struct.xpviv* %541, i32 0, i32 4
  %xivu_iv883 = bitcast %union._xivu* %xiv_u882 to i64*
  %542 = load i64, i64* %xivu_iv883, align 8
  %dec884 = add nsw i64 %542, -1
  store i64 %dec884, i64* %xivu_iv883, align 8
  %cmp885 = icmp slt i64 %dec884, 0
  br i1 %cmp885, label %land.lhs.true887, label %if.end945

land.lhs.true887:                                 ; preds = %land.lhs.true876
  %543 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs888 = getelementptr inbounds %struct.regexp, %struct.regexp* %543, i32 0, i32 11
  %544 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs888, align 8
  %data889 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %544, i32 0, i32 1
  %arrayidx890 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data889, i64 0, i64 2
  %substr891 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx890, i32 0, i32 2
  %545 = load %struct.sv*, %struct.sv** %substr891, align 8
  %546 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs892 = getelementptr inbounds %struct.regexp, %struct.regexp* %546, i32 0, i32 11
  %547 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs892, align 8
  %data893 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %547, i32 0, i32 1
  %arrayidx894 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data893, i64 0, i64 1
  %substr895 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx894, i32 0, i32 2
  %548 = load %struct.sv*, %struct.sv** %substr895, align 8
  %cmp896 = icmp eq %struct.sv* %545, %548
  br i1 %cmp896, label %if.then898, label %if.end945

if.then898:                                       ; preds = %land.lhs.true887, %land.lhs.true859
  %549 = load i8, i8* %utf8_target, align 1
  %tobool899 = trunc i8 %549 to i1
  br i1 %tobool899, label %cond.true901, label %cond.false906

cond.true901:                                     ; preds = %if.then898
  %550 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs902 = getelementptr inbounds %struct.regexp, %struct.regexp* %550, i32 0, i32 11
  %551 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs902, align 8
  %data903 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %551, i32 0, i32 1
  %arrayidx904 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data903, i64 0, i64 2
  %utf8_substr905 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx904, i32 0, i32 3
  %552 = load %struct.sv*, %struct.sv** %utf8_substr905, align 8
  br label %cond.end911

cond.false906:                                    ; preds = %if.then898
  %553 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs907 = getelementptr inbounds %struct.regexp, %struct.regexp* %553, i32 0, i32 11
  %554 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs907, align 8
  %data908 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %554, i32 0, i32 1
  %arrayidx909 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data908, i64 0, i64 2
  %substr910 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx909, i32 0, i32 2
  %555 = load %struct.sv*, %struct.sv** %substr910, align 8
  br label %cond.end911

cond.end911:                                      ; preds = %cond.false906, %cond.true901
  %cond912 = phi %struct.sv* [ %552, %cond.true901 ], [ %555, %cond.false906 ]
  %556 = bitcast %struct.sv* %cond912 to i8*
  %557 = bitcast i8* %556 to %struct.sv*
  call void @S_SvREFCNT_dec(%struct.sv* %557)
  %558 = load i8, i8* %utf8_target, align 1
  %tobool913 = trunc i8 %558 to i1
  br i1 %tobool913, label %cond.true915, label %cond.false920

cond.true915:                                     ; preds = %cond.end911
  %559 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs916 = getelementptr inbounds %struct.regexp, %struct.regexp* %559, i32 0, i32 11
  %560 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs916, align 8
  %data917 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %560, i32 0, i32 1
  %arrayidx918 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data917, i64 0, i64 2
  %substr919 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx918, i32 0, i32 2
  %561 = load %struct.sv*, %struct.sv** %substr919, align 8
  br label %cond.end925

cond.false920:                                    ; preds = %cond.end911
  %562 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs921 = getelementptr inbounds %struct.regexp, %struct.regexp* %562, i32 0, i32 11
  %563 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs921, align 8
  %data922 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %563, i32 0, i32 1
  %arrayidx923 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data922, i64 0, i64 2
  %utf8_substr924 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx923, i32 0, i32 3
  %564 = load %struct.sv*, %struct.sv** %utf8_substr924, align 8
  br label %cond.end925

cond.end925:                                      ; preds = %cond.false920, %cond.true915
  %cond926 = phi %struct.sv* [ %561, %cond.true915 ], [ %564, %cond.false920 ]
  %565 = bitcast %struct.sv* %cond926 to i8*
  %566 = bitcast i8* %565 to %struct.sv*
  call void @S_SvREFCNT_dec(%struct.sv* %566)
  %567 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs927 = getelementptr inbounds %struct.regexp, %struct.regexp* %567, i32 0, i32 11
  %568 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs927, align 8
  %data928 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %568, i32 0, i32 1
  %arrayidx929 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data928, i64 0, i64 2
  %utf8_substr930 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx929, i32 0, i32 3
  store %struct.sv* null, %struct.sv** %utf8_substr930, align 8
  %569 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs931 = getelementptr inbounds %struct.regexp, %struct.regexp* %569, i32 0, i32 11
  %570 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs931, align 8
  %data932 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %570, i32 0, i32 1
  %arrayidx933 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data932, i64 0, i64 2
  %substr934 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx933, i32 0, i32 2
  store %struct.sv* null, %struct.sv** %substr934, align 8
  %571 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs935 = getelementptr inbounds %struct.regexp, %struct.regexp* %571, i32 0, i32 11
  %572 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs935, align 8
  %data936 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %572, i32 0, i32 1
  %arrayidx937 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data936, i64 0, i64 1
  %utf8_substr938 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx937, i32 0, i32 3
  store %struct.sv* null, %struct.sv** %utf8_substr938, align 8
  %573 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs939 = getelementptr inbounds %struct.regexp, %struct.regexp* %573, i32 0, i32 11
  %574 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs939, align 8
  %data940 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %574, i32 0, i32 1
  %arrayidx941 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data940, i64 0, i64 1
  %substr942 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx941, i32 0, i32 2
  store %struct.sv* null, %struct.sv** %substr942, align 8
  store %struct.sv* null, %struct.sv** %check, align 8
  %575 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %extflags943 = getelementptr inbounds %struct.regexp, %struct.regexp* %575, i32 0, i32 7
  %576 = load i32, i32* %extflags943, align 8
  %and944 = and i32 %576, -6291457
  store i32 %and944, i32* %extflags943, align 8
  br label %if.end945

if.end945:                                        ; preds = %cond.end925, %land.lhs.true887, %land.lhs.true876, %cond.false870, %land.lhs.true859, %land.lhs.true848, %cond.true842, %if.else835
  br label %if.end946

if.end946:                                        ; preds = %if.end945, %cond.end832
  %577 = load i8*, i8** %rx_origin, align 8
  store i8* %577, i8** %retval, align 8
  br label %return

fail_finish:                                      ; preds = %if.then567, %if.then464, %if.then302, %if.then218, %if.then187, %if.then170, %if.then151
  %578 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs947 = getelementptr inbounds %struct.regexp, %struct.regexp* %578, i32 0, i32 11
  %579 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs947, align 8
  %data948 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %579, i32 0, i32 1
  %arrayidx949 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data948, i64 0, i64 2
  %substr950 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx949, i32 0, i32 2
  %580 = load %struct.sv*, %struct.sv** %substr950, align 8
  %tobool951 = icmp ne %struct.sv* %580, null
  br i1 %tobool951, label %if.then958, label %lor.lhs.false952

lor.lhs.false952:                                 ; preds = %fail_finish
  %581 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs953 = getelementptr inbounds %struct.regexp, %struct.regexp* %581, i32 0, i32 11
  %582 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs953, align 8
  %data954 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %582, i32 0, i32 1
  %arrayidx955 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data954, i64 0, i64 2
  %utf8_substr956 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx955, i32 0, i32 3
  %583 = load %struct.sv*, %struct.sv** %utf8_substr956, align 8
  %tobool957 = icmp ne %struct.sv* %583, null
  br i1 %tobool957, label %if.then958, label %if.end976

if.then958:                                       ; preds = %lor.lhs.false952, %fail_finish
  %584 = load i8, i8* %utf8_target, align 1
  %tobool959 = trunc i8 %584 to i1
  br i1 %tobool959, label %cond.true961, label %cond.false966

cond.true961:                                     ; preds = %if.then958
  %585 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs962 = getelementptr inbounds %struct.regexp, %struct.regexp* %585, i32 0, i32 11
  %586 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs962, align 8
  %data963 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %586, i32 0, i32 1
  %arrayidx964 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data963, i64 0, i64 2
  %utf8_substr965 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx964, i32 0, i32 3
  %587 = load %struct.sv*, %struct.sv** %utf8_substr965, align 8
  br label %cond.end971

cond.false966:                                    ; preds = %if.then958
  %588 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs967 = getelementptr inbounds %struct.regexp, %struct.regexp* %588, i32 0, i32 11
  %589 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs967, align 8
  %data968 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %589, i32 0, i32 1
  %arrayidx969 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data968, i64 0, i64 2
  %substr970 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx969, i32 0, i32 2
  %590 = load %struct.sv*, %struct.sv** %substr970, align 8
  br label %cond.end971

cond.end971:                                      ; preds = %cond.false966, %cond.true961
  %cond972 = phi %struct.sv* [ %587, %cond.true961 ], [ %590, %cond.false966 ]
  %sv_any973 = getelementptr inbounds %struct.sv, %struct.sv* %cond972, i32 0, i32 0
  %591 = load i8*, i8** %sv_any973, align 8
  %592 = bitcast i8* %591 to %struct.xpviv*
  %xiv_u974 = getelementptr inbounds %struct.xpviv, %struct.xpviv* %592, i32 0, i32 4
  %xivu_iv975 = bitcast %union._xivu* %xiv_u974 to i64*
  %593 = load i64, i64* %xivu_iv975, align 8
  %add = add nsw i64 %593, 5
  store i64 %add, i64* %xivu_iv975, align 8
  br label %if.end976

if.end976:                                        ; preds = %cond.end971, %lor.lhs.false952
  br label %fail

fail:                                             ; preds = %if.end976, %if.then808, %if.then792, %if.then747, %if.then736, %if.then90, %do.body, %if.then
  store i8* null, i8** %retval, align 8
  br label %return

return:                                           ; preds = %fail, %if.end946
  %594 = load i8*, i8** %retval, align 8
  ret i8* %594
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.regexp* @S_ReANY(%struct.p5rx* %re) #0 {
entry:
  %re.addr = alloca %struct.p5rx*, align 8
  store %struct.p5rx* %re, %struct.p5rx** %re.addr, align 8
  %0 = load %struct.p5rx*, %struct.p5rx** %re.addr, align 8
  %sv_u = getelementptr inbounds %struct.p5rx, %struct.p5rx* %0, i32 0, i32 3
  %svu_rx = bitcast %union.anon.7* %sv_u to %struct.regexp**
  %1 = load %struct.regexp*, %struct.regexp** %svu_rx, align 8
  ret %struct.regexp* %1
}

; Function Attrs: noinline nounwind uwtable
define internal void @S_to_utf8_substr(%struct.regexp* %prog) #0 {
entry:
  %prog.addr = alloca %struct.regexp*, align 8
  %i = alloca i32, align 4
  %sv = alloca %struct.sv*, align 8
  store %struct.regexp* %prog, %struct.regexp** %prog.addr, align 8
  store i32 1, i32* %i, align 4
  br label %do.body

do.body:                                          ; preds = %do.cond, %entry
  %0 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs = getelementptr inbounds %struct.regexp, %struct.regexp* %0, i32 0, i32 11
  %1 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs, align 8
  %data = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %1, i32 0, i32 1
  %2 = load i32, i32* %i, align 4
  %idxprom = sext i32 %2 to i64
  %arrayidx = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data, i64 0, i64 %idxprom
  %substr = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx, i32 0, i32 2
  %3 = load %struct.sv*, %struct.sv** %substr, align 8
  %tobool = icmp ne %struct.sv* %3, null
  br i1 %tobool, label %land.lhs.true, label %if.end61

land.lhs.true:                                    ; preds = %do.body
  %4 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs1 = getelementptr inbounds %struct.regexp, %struct.regexp* %4, i32 0, i32 11
  %5 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs1, align 8
  %data2 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %5, i32 0, i32 1
  %6 = load i32, i32* %i, align 4
  %idxprom3 = sext i32 %6 to i64
  %arrayidx4 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data2, i64 0, i64 %idxprom3
  %utf8_substr = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx4, i32 0, i32 3
  %7 = load %struct.sv*, %struct.sv** %utf8_substr, align 8
  %tobool5 = icmp ne %struct.sv* %7, null
  br i1 %tobool5, label %if.end61, label %if.then

if.then:                                          ; preds = %land.lhs.true
  %8 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs6 = getelementptr inbounds %struct.regexp, %struct.regexp* %8, i32 0, i32 11
  %9 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs6, align 8
  %data7 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %9, i32 0, i32 1
  %10 = load i32, i32* %i, align 4
  %idxprom8 = sext i32 %10 to i64
  %arrayidx9 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data7, i64 0, i64 %idxprom8
  %substr10 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx9, i32 0, i32 2
  %11 = load %struct.sv*, %struct.sv** %substr10, align 8
  %call = call %struct.sv* @Perl_newSVsv(%struct.sv* %11)
  store %struct.sv* %call, %struct.sv** %sv, align 8
  %12 = load %struct.sv*, %struct.sv** %sv, align 8
  %13 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs11 = getelementptr inbounds %struct.regexp, %struct.regexp* %13, i32 0, i32 11
  %14 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs11, align 8
  %data12 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %14, i32 0, i32 1
  %15 = load i32, i32* %i, align 4
  %idxprom13 = sext i32 %15 to i64
  %arrayidx14 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data12, i64 0, i64 %idxprom13
  %utf8_substr15 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx14, i32 0, i32 3
  store %struct.sv* %12, %struct.sv** %utf8_substr15, align 8
  %16 = load %struct.sv*, %struct.sv** %sv, align 8
  %call16 = call i64 @Perl_sv_utf8_upgrade_flags_grow(%struct.sv* %16, i32 2, i64 0)
  %17 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs17 = getelementptr inbounds %struct.regexp, %struct.regexp* %17, i32 0, i32 11
  %18 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs17, align 8
  %data18 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %18, i32 0, i32 1
  %19 = load i32, i32* %i, align 4
  %idxprom19 = sext i32 %19 to i64
  %arrayidx20 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data18, i64 0, i64 %idxprom19
  %substr21 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx20, i32 0, i32 2
  %20 = load %struct.sv*, %struct.sv** %substr21, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %20, i32 0, i32 2
  %21 = load i32, i32* %sv_flags, align 4
  %and = and i32 %21, 1073741824
  %tobool22 = icmp ne i32 %and, 0
  br i1 %tobool22, label %land.lhs.true23, label %if.end44

land.lhs.true23:                                  ; preds = %if.then
  %22 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs24 = getelementptr inbounds %struct.regexp, %struct.regexp* %22, i32 0, i32 11
  %23 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs24, align 8
  %data25 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %23, i32 0, i32 1
  %24 = load i32, i32* %i, align 4
  %idxprom26 = sext i32 %24 to i64
  %arrayidx27 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data25, i64 0, i64 %idxprom26
  %substr28 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx27, i32 0, i32 2
  %25 = load %struct.sv*, %struct.sv** %substr28, align 8
  %sv_flags29 = getelementptr inbounds %struct.sv, %struct.sv* %25, i32 0, i32 2
  %26 = load i32, i32* %sv_flags29, align 4
  %and30 = and i32 %26, 49152
  %cmp = icmp eq i32 %and30, 49152
  br i1 %cmp, label %if.end44, label %if.then31

if.then31:                                        ; preds = %land.lhs.true23
  %27 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs32 = getelementptr inbounds %struct.regexp, %struct.regexp* %27, i32 0, i32 11
  %28 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs32, align 8
  %data33 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %28, i32 0, i32 1
  %29 = load i32, i32* %i, align 4
  %idxprom34 = sext i32 %29 to i64
  %arrayidx35 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data33, i64 0, i64 %idxprom34
  %substr36 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx35, i32 0, i32 2
  %30 = load %struct.sv*, %struct.sv** %substr36, align 8
  %sv_flags37 = getelementptr inbounds %struct.sv, %struct.sv* %30, i32 0, i32 2
  %31 = load i32, i32* %sv_flags37, align 4
  %and38 = and i32 %31, -1073741824
  %cmp39 = icmp eq i32 %and38, -1073741824
  br i1 %cmp39, label %if.then40, label %if.else

if.then40:                                        ; preds = %if.then31
  br label %do.body41

do.body41:                                        ; preds = %if.then40
  %32 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %32, i32 0, i32 0
  %33 = load i8*, i8** %sv_any, align 8
  %34 = bitcast i8* %33 to %struct.xpv*
  %xpv_cur = getelementptr inbounds %struct.xpv, %struct.xpv* %34, i32 0, i32 2
  %35 = load i64, i64* %xpv_cur, align 8
  %sub = sub i64 %35, 1
  %36 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any42 = getelementptr inbounds %struct.sv, %struct.sv* %36, i32 0, i32 0
  %37 = load i8*, i8** %sv_any42, align 8
  %38 = bitcast i8* %37 to %struct.xpv*
  %xpv_cur43 = getelementptr inbounds %struct.xpv, %struct.xpv* %38, i32 0, i32 2
  store i64 %sub, i64* %xpv_cur43, align 8
  br label %do.end

do.end:                                           ; preds = %do.body41
  %39 = load %struct.sv*, %struct.sv** %sv, align 8
  call void @Perl_fbm_compile(%struct.sv* %39, i32 15)
  br label %if.end

if.else:                                          ; preds = %if.then31
  %40 = load %struct.sv*, %struct.sv** %sv, align 8
  call void @Perl_fbm_compile(%struct.sv* %40, i32 0)
  br label %if.end

if.end:                                           ; preds = %if.else, %do.end
  br label %if.end44

if.end44:                                         ; preds = %if.end, %land.lhs.true23, %if.then
  %41 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs45 = getelementptr inbounds %struct.regexp, %struct.regexp* %41, i32 0, i32 11
  %42 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs45, align 8
  %data46 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %42, i32 0, i32 1
  %43 = load i32, i32* %i, align 4
  %idxprom47 = sext i32 %43 to i64
  %arrayidx48 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data46, i64 0, i64 %idxprom47
  %substr49 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx48, i32 0, i32 2
  %44 = load %struct.sv*, %struct.sv** %substr49, align 8
  %45 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs50 = getelementptr inbounds %struct.regexp, %struct.regexp* %45, i32 0, i32 11
  %46 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs50, align 8
  %data51 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %46, i32 0, i32 1
  %arrayidx52 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data51, i64 0, i64 2
  %substr53 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx52, i32 0, i32 2
  %47 = load %struct.sv*, %struct.sv** %substr53, align 8
  %cmp54 = icmp eq %struct.sv* %44, %47
  br i1 %cmp54, label %if.then55, label %if.end60

if.then55:                                        ; preds = %if.end44
  %48 = load %struct.sv*, %struct.sv** %sv, align 8
  %49 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs56 = getelementptr inbounds %struct.regexp, %struct.regexp* %49, i32 0, i32 11
  %50 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs56, align 8
  %data57 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %50, i32 0, i32 1
  %arrayidx58 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data57, i64 0, i64 2
  %utf8_substr59 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx58, i32 0, i32 3
  store %struct.sv* %48, %struct.sv** %utf8_substr59, align 8
  br label %if.end60

if.end60:                                         ; preds = %if.then55, %if.end44
  br label %if.end61

if.end61:                                         ; preds = %if.end60, %land.lhs.true, %do.body
  br label %do.cond

do.cond:                                          ; preds = %if.end61
  %51 = load i32, i32* %i, align 4
  %dec = add nsw i32 %51, -1
  store i32 %dec, i32* %i, align 4
  %tobool62 = icmp ne i32 %51, 0
  br i1 %tobool62, label %do.body, label %do.end63

do.end63:                                         ; preds = %do.cond
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i1 @S_to_byte_substr(%struct.regexp* %prog) #0 {
entry:
  %retval = alloca i1, align 1
  %prog.addr = alloca %struct.regexp*, align 8
  %i = alloca i32, align 4
  %sv = alloca %struct.sv*, align 8
  store %struct.regexp* %prog, %struct.regexp** %prog.addr, align 8
  store i32 1, i32* %i, align 4
  br label %do.body

do.body:                                          ; preds = %do.cond, %entry
  %0 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs = getelementptr inbounds %struct.regexp, %struct.regexp* %0, i32 0, i32 11
  %1 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs, align 8
  %data = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %1, i32 0, i32 1
  %2 = load i32, i32* %i, align 4
  %idxprom = sext i32 %2 to i64
  %arrayidx = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data, i64 0, i64 %idxprom
  %utf8_substr = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx, i32 0, i32 3
  %3 = load %struct.sv*, %struct.sv** %utf8_substr, align 8
  %tobool = icmp ne %struct.sv* %3, null
  br i1 %tobool, label %land.lhs.true, label %if.end63

land.lhs.true:                                    ; preds = %do.body
  %4 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs1 = getelementptr inbounds %struct.regexp, %struct.regexp* %4, i32 0, i32 11
  %5 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs1, align 8
  %data2 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %5, i32 0, i32 1
  %6 = load i32, i32* %i, align 4
  %idxprom3 = sext i32 %6 to i64
  %arrayidx4 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data2, i64 0, i64 %idxprom3
  %substr = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx4, i32 0, i32 2
  %7 = load %struct.sv*, %struct.sv** %substr, align 8
  %tobool5 = icmp ne %struct.sv* %7, null
  br i1 %tobool5, label %if.end63, label %if.then

if.then:                                          ; preds = %land.lhs.true
  %8 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs6 = getelementptr inbounds %struct.regexp, %struct.regexp* %8, i32 0, i32 11
  %9 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs6, align 8
  %data7 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %9, i32 0, i32 1
  %10 = load i32, i32* %i, align 4
  %idxprom8 = sext i32 %10 to i64
  %arrayidx9 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data7, i64 0, i64 %idxprom8
  %utf8_substr10 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx9, i32 0, i32 3
  %11 = load %struct.sv*, %struct.sv** %utf8_substr10, align 8
  %call = call %struct.sv* @Perl_newSVsv(%struct.sv* %11)
  store %struct.sv* %call, %struct.sv** %sv, align 8
  %12 = load %struct.sv*, %struct.sv** %sv, align 8
  %call11 = call zeroext i1 @Perl_sv_utf8_downgrade(%struct.sv* %12, i1 zeroext true)
  br i1 %call11, label %if.end, label %if.then12

if.then12:                                        ; preds = %if.then
  store i1 false, i1* %retval, align 1
  br label %return

if.end:                                           ; preds = %if.then
  %13 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs13 = getelementptr inbounds %struct.regexp, %struct.regexp* %13, i32 0, i32 11
  %14 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs13, align 8
  %data14 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %14, i32 0, i32 1
  %15 = load i32, i32* %i, align 4
  %idxprom15 = sext i32 %15 to i64
  %arrayidx16 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data14, i64 0, i64 %idxprom15
  %utf8_substr17 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx16, i32 0, i32 3
  %16 = load %struct.sv*, %struct.sv** %utf8_substr17, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %16, i32 0, i32 2
  %17 = load i32, i32* %sv_flags, align 4
  %and = and i32 %17, 1073741824
  %tobool18 = icmp ne i32 %and, 0
  br i1 %tobool18, label %land.lhs.true19, label %if.end41

land.lhs.true19:                                  ; preds = %if.end
  %18 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs20 = getelementptr inbounds %struct.regexp, %struct.regexp* %18, i32 0, i32 11
  %19 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs20, align 8
  %data21 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %19, i32 0, i32 1
  %20 = load i32, i32* %i, align 4
  %idxprom22 = sext i32 %20 to i64
  %arrayidx23 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data21, i64 0, i64 %idxprom22
  %utf8_substr24 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx23, i32 0, i32 3
  %21 = load %struct.sv*, %struct.sv** %utf8_substr24, align 8
  %sv_flags25 = getelementptr inbounds %struct.sv, %struct.sv* %21, i32 0, i32 2
  %22 = load i32, i32* %sv_flags25, align 4
  %and26 = and i32 %22, 49152
  %cmp = icmp eq i32 %and26, 49152
  br i1 %cmp, label %if.end41, label %if.then27

if.then27:                                        ; preds = %land.lhs.true19
  %23 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs28 = getelementptr inbounds %struct.regexp, %struct.regexp* %23, i32 0, i32 11
  %24 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs28, align 8
  %data29 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %24, i32 0, i32 1
  %25 = load i32, i32* %i, align 4
  %idxprom30 = sext i32 %25 to i64
  %arrayidx31 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data29, i64 0, i64 %idxprom30
  %utf8_substr32 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx31, i32 0, i32 3
  %26 = load %struct.sv*, %struct.sv** %utf8_substr32, align 8
  %sv_flags33 = getelementptr inbounds %struct.sv, %struct.sv* %26, i32 0, i32 2
  %27 = load i32, i32* %sv_flags33, align 4
  %and34 = and i32 %27, -1073741824
  %cmp35 = icmp eq i32 %and34, -1073741824
  br i1 %cmp35, label %if.then36, label %if.else

if.then36:                                        ; preds = %if.then27
  br label %do.body37

do.body37:                                        ; preds = %if.then36
  %28 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %28, i32 0, i32 0
  %29 = load i8*, i8** %sv_any, align 8
  %30 = bitcast i8* %29 to %struct.xpv*
  %xpv_cur = getelementptr inbounds %struct.xpv, %struct.xpv* %30, i32 0, i32 2
  %31 = load i64, i64* %xpv_cur, align 8
  %sub = sub i64 %31, 1
  %32 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any38 = getelementptr inbounds %struct.sv, %struct.sv* %32, i32 0, i32 0
  %33 = load i8*, i8** %sv_any38, align 8
  %34 = bitcast i8* %33 to %struct.xpv*
  %xpv_cur39 = getelementptr inbounds %struct.xpv, %struct.xpv* %34, i32 0, i32 2
  store i64 %sub, i64* %xpv_cur39, align 8
  br label %do.end

do.end:                                           ; preds = %do.body37
  %35 = load %struct.sv*, %struct.sv** %sv, align 8
  call void @Perl_fbm_compile(%struct.sv* %35, i32 15)
  br label %if.end40

if.else:                                          ; preds = %if.then27
  %36 = load %struct.sv*, %struct.sv** %sv, align 8
  call void @Perl_fbm_compile(%struct.sv* %36, i32 0)
  br label %if.end40

if.end40:                                         ; preds = %if.else, %do.end
  br label %if.end41

if.end41:                                         ; preds = %if.end40, %land.lhs.true19, %if.end
  %37 = load %struct.sv*, %struct.sv** %sv, align 8
  %38 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs42 = getelementptr inbounds %struct.regexp, %struct.regexp* %38, i32 0, i32 11
  %39 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs42, align 8
  %data43 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %39, i32 0, i32 1
  %40 = load i32, i32* %i, align 4
  %idxprom44 = sext i32 %40 to i64
  %arrayidx45 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data43, i64 0, i64 %idxprom44
  %substr46 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx45, i32 0, i32 2
  store %struct.sv* %37, %struct.sv** %substr46, align 8
  %41 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs47 = getelementptr inbounds %struct.regexp, %struct.regexp* %41, i32 0, i32 11
  %42 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs47, align 8
  %data48 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %42, i32 0, i32 1
  %43 = load i32, i32* %i, align 4
  %idxprom49 = sext i32 %43 to i64
  %arrayidx50 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data48, i64 0, i64 %idxprom49
  %utf8_substr51 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx50, i32 0, i32 3
  %44 = load %struct.sv*, %struct.sv** %utf8_substr51, align 8
  %45 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs52 = getelementptr inbounds %struct.regexp, %struct.regexp* %45, i32 0, i32 11
  %46 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs52, align 8
  %data53 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %46, i32 0, i32 1
  %arrayidx54 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data53, i64 0, i64 2
  %utf8_substr55 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx54, i32 0, i32 3
  %47 = load %struct.sv*, %struct.sv** %utf8_substr55, align 8
  %cmp56 = icmp eq %struct.sv* %44, %47
  br i1 %cmp56, label %if.then57, label %if.end62

if.then57:                                        ; preds = %if.end41
  %48 = load %struct.sv*, %struct.sv** %sv, align 8
  %49 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs58 = getelementptr inbounds %struct.regexp, %struct.regexp* %49, i32 0, i32 11
  %50 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs58, align 8
  %data59 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %50, i32 0, i32 1
  %arrayidx60 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data59, i64 0, i64 2
  %substr61 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx60, i32 0, i32 2
  store %struct.sv* %48, %struct.sv** %substr61, align 8
  br label %if.end62

if.end62:                                         ; preds = %if.then57, %if.end41
  br label %if.end63

if.end63:                                         ; preds = %if.end62, %land.lhs.true, %do.body
  br label %do.cond

do.cond:                                          ; preds = %if.end63
  %51 = load i32, i32* %i, align 4
  %dec = add nsw i32 %51, -1
  store i32 %dec, i32* %i, align 4
  %tobool64 = icmp ne i32 %51, 0
  br i1 %tobool64, label %do.body, label %do.end65

do.end65:                                         ; preds = %do.cond
  store i1 true, i1* %retval, align 1
  br label %return

return:                                           ; preds = %do.end65, %if.then12
  %52 = load i1, i1* %retval, align 1
  ret i1 %52
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @S_reghop3(i8* %s, i64 %off, i8* %lim) #0 {
entry:
  %s.addr = alloca i8*, align 8
  %off.addr = alloca i64, align 8
  %lim.addr = alloca i8*, align 8
  store i8* %s, i8** %s.addr, align 8
  store i64 %off, i64* %off.addr, align 8
  store i8* %lim, i8** %lim.addr, align 8
  %0 = load i64, i64* %off.addr, align 8
  %cmp = icmp sge i64 %0, 0
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.then
  %1 = load i64, i64* %off.addr, align 8
  %dec = add nsw i64 %1, -1
  store i64 %dec, i64* %off.addr, align 8
  %tobool = icmp ne i64 %1, 0
  br i1 %tobool, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond
  %2 = load i8*, i8** %s.addr, align 8
  %3 = load i8*, i8** %lim.addr, align 8
  %cmp1 = icmp ult i8* %2, %3
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %4 = phi i1 [ false, %while.cond ], [ %cmp1, %land.rhs ]
  br i1 %4, label %while.body, label %while.end

while.body:                                       ; preds = %land.end
  %5 = load i8*, i8** %s.addr, align 8
  %6 = load i8, i8* %5, align 1
  %idxprom = zext i8 %6 to i64
  %arrayidx = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom
  %7 = load i8, i8* %arrayidx, align 1
  %conv = zext i8 %7 to i32
  %8 = load i8*, i8** %s.addr, align 8
  %idx.ext = sext i32 %conv to i64
  %add.ptr = getelementptr inbounds i8, i8* %8, i64 %idx.ext
  store i8* %add.ptr, i8** %s.addr, align 8
  br label %while.cond

while.end:                                        ; preds = %land.end
  br label %if.end30

if.else:                                          ; preds = %entry
  br label %while.cond2

while.cond2:                                      ; preds = %if.end28, %if.else
  %9 = load i64, i64* %off.addr, align 8
  %inc = add nsw i64 %9, 1
  store i64 %inc, i64* %off.addr, align 8
  %tobool3 = icmp ne i64 %9, 0
  br i1 %tobool3, label %land.rhs4, label %land.end7

land.rhs4:                                        ; preds = %while.cond2
  %10 = load i8*, i8** %s.addr, align 8
  %11 = load i8*, i8** %lim.addr, align 8
  %cmp5 = icmp ugt i8* %10, %11
  br label %land.end7

land.end7:                                        ; preds = %land.rhs4, %while.cond2
  %12 = phi i1 [ false, %while.cond2 ], [ %cmp5, %land.rhs4 ]
  br i1 %12, label %while.body8, label %while.end29

while.body8:                                      ; preds = %land.end7
  %13 = load i8*, i8** %s.addr, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %13, i32 -1
  store i8* %incdec.ptr, i8** %s.addr, align 8
  %14 = load i8*, i8** %s.addr, align 8
  %15 = load i8, i8* %14, align 1
  %conv9 = zext i8 %15 to i32
  %and = and i32 %conv9, 128
  %tobool10 = icmp ne i32 %and, 0
  br i1 %tobool10, label %if.then11, label %if.end28

if.then11:                                        ; preds = %while.body8
  br label %while.cond12

while.cond12:                                     ; preds = %while.body21, %if.then11
  %16 = load i8*, i8** %s.addr, align 8
  %17 = load i8*, i8** %lim.addr, align 8
  %cmp13 = icmp ugt i8* %16, %17
  br i1 %cmp13, label %land.rhs15, label %land.end20

land.rhs15:                                       ; preds = %while.cond12
  %18 = load i8*, i8** %s.addr, align 8
  %19 = load i8, i8* %18, align 1
  %conv16 = zext i8 %19 to i32
  %and17 = and i32 %conv16, 192
  %cmp18 = icmp eq i32 %and17, 128
  br label %land.end20

land.end20:                                       ; preds = %land.rhs15, %while.cond12
  %20 = phi i1 [ false, %while.cond12 ], [ %cmp18, %land.rhs15 ]
  br i1 %20, label %while.body21, label %while.end23

while.body21:                                     ; preds = %land.end20
  %21 = load i8*, i8** %s.addr, align 8
  %incdec.ptr22 = getelementptr inbounds i8, i8* %21, i32 -1
  store i8* %incdec.ptr22, i8** %s.addr, align 8
  br label %while.cond12

while.end23:                                      ; preds = %land.end20
  %22 = load i8*, i8** %s.addr, align 8
  %23 = load i8, i8* %22, align 1
  %conv24 = zext i8 %23 to i32
  %cmp25 = icmp sge i32 %conv24, 194
  br i1 %cmp25, label %if.end, label %if.then27

if.then27:                                        ; preds = %while.end23
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.7, i64 0, i64 0))
  br label %if.end

if.end:                                           ; preds = %if.then27, %while.end23
  br label %if.end28

if.end28:                                         ; preds = %if.end, %while.body8
  br label %while.cond2

while.end29:                                      ; preds = %land.end7
  br label %if.end30

if.end30:                                         ; preds = %while.end29, %while.end
  %24 = load i8*, i8** %s.addr, align 8
  ret i8* %24
}

; Function Attrs: nounwind readonly
declare dso_local i32 @memcmp(i8*, i8*, i64) #1

; Function Attrs: noinline nounwind uwtable
define internal i8* @S_reghopmaybe3(i8* %s, i64 %off, i8* %lim) #0 {
entry:
  %retval = alloca i8*, align 8
  %s.addr = alloca i8*, align 8
  %off.addr = alloca i64, align 8
  %lim.addr = alloca i8*, align 8
  store i8* %s, i8** %s.addr, align 8
  store i64 %off, i64* %off.addr, align 8
  store i8* %lim, i8** %lim.addr, align 8
  %0 = load i64, i64* %off.addr, align 8
  %cmp = icmp sge i64 %0, 0
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.then
  %1 = load i64, i64* %off.addr, align 8
  %dec = add nsw i64 %1, -1
  store i64 %dec, i64* %off.addr, align 8
  %tobool = icmp ne i64 %1, 0
  br i1 %tobool, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond
  %2 = load i8*, i8** %s.addr, align 8
  %3 = load i8*, i8** %lim.addr, align 8
  %cmp1 = icmp ult i8* %2, %3
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %4 = phi i1 [ false, %while.cond ], [ %cmp1, %land.rhs ]
  br i1 %4, label %while.body, label %while.end

while.body:                                       ; preds = %land.end
  %5 = load i8*, i8** %s.addr, align 8
  %6 = load i8, i8* %5, align 1
  %idxprom = zext i8 %6 to i64
  %arrayidx = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom
  %7 = load i8, i8* %arrayidx, align 1
  %conv = zext i8 %7 to i32
  %8 = load i8*, i8** %s.addr, align 8
  %idx.ext = sext i32 %conv to i64
  %add.ptr = getelementptr inbounds i8, i8* %8, i64 %idx.ext
  store i8* %add.ptr, i8** %s.addr, align 8
  br label %while.cond

while.end:                                        ; preds = %land.end
  %9 = load i64, i64* %off.addr, align 8
  %cmp2 = icmp sge i64 %9, 0
  br i1 %cmp2, label %if.then4, label %if.end

if.then4:                                         ; preds = %while.end
  store i8* null, i8** %retval, align 8
  br label %return

if.end:                                           ; preds = %while.end
  br label %if.end38

if.else:                                          ; preds = %entry
  br label %while.cond5

while.cond5:                                      ; preds = %if.end32, %if.else
  %10 = load i64, i64* %off.addr, align 8
  %inc = add nsw i64 %10, 1
  store i64 %inc, i64* %off.addr, align 8
  %tobool6 = icmp ne i64 %10, 0
  br i1 %tobool6, label %land.rhs7, label %land.end10

land.rhs7:                                        ; preds = %while.cond5
  %11 = load i8*, i8** %s.addr, align 8
  %12 = load i8*, i8** %lim.addr, align 8
  %cmp8 = icmp ugt i8* %11, %12
  br label %land.end10

land.end10:                                       ; preds = %land.rhs7, %while.cond5
  %13 = phi i1 [ false, %while.cond5 ], [ %cmp8, %land.rhs7 ]
  br i1 %13, label %while.body11, label %while.end33

while.body11:                                     ; preds = %land.end10
  %14 = load i8*, i8** %s.addr, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %14, i32 -1
  store i8* %incdec.ptr, i8** %s.addr, align 8
  %15 = load i8*, i8** %s.addr, align 8
  %16 = load i8, i8* %15, align 1
  %conv12 = zext i8 %16 to i32
  %and = and i32 %conv12, 128
  %tobool13 = icmp ne i32 %and, 0
  br i1 %tobool13, label %if.then14, label %if.end32

if.then14:                                        ; preds = %while.body11
  br label %while.cond15

while.cond15:                                     ; preds = %while.body24, %if.then14
  %17 = load i8*, i8** %s.addr, align 8
  %18 = load i8*, i8** %lim.addr, align 8
  %cmp16 = icmp ugt i8* %17, %18
  br i1 %cmp16, label %land.rhs18, label %land.end23

land.rhs18:                                       ; preds = %while.cond15
  %19 = load i8*, i8** %s.addr, align 8
  %20 = load i8, i8* %19, align 1
  %conv19 = zext i8 %20 to i32
  %and20 = and i32 %conv19, 192
  %cmp21 = icmp eq i32 %and20, 128
  br label %land.end23

land.end23:                                       ; preds = %land.rhs18, %while.cond15
  %21 = phi i1 [ false, %while.cond15 ], [ %cmp21, %land.rhs18 ]
  br i1 %21, label %while.body24, label %while.end26

while.body24:                                     ; preds = %land.end23
  %22 = load i8*, i8** %s.addr, align 8
  %incdec.ptr25 = getelementptr inbounds i8, i8* %22, i32 -1
  store i8* %incdec.ptr25, i8** %s.addr, align 8
  br label %while.cond15

while.end26:                                      ; preds = %land.end23
  %23 = load i8*, i8** %s.addr, align 8
  %24 = load i8, i8* %23, align 1
  %conv27 = zext i8 %24 to i32
  %cmp28 = icmp sge i32 %conv27, 194
  br i1 %cmp28, label %if.end31, label %if.then30

if.then30:                                        ; preds = %while.end26
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.7, i64 0, i64 0))
  br label %if.end31

if.end31:                                         ; preds = %if.then30, %while.end26
  br label %if.end32

if.end32:                                         ; preds = %if.end31, %while.body11
  br label %while.cond5

while.end33:                                      ; preds = %land.end10
  %25 = load i64, i64* %off.addr, align 8
  %cmp34 = icmp sle i64 %25, 0
  br i1 %cmp34, label %if.then36, label %if.end37

if.then36:                                        ; preds = %while.end33
  store i8* null, i8** %retval, align 8
  br label %return

if.end37:                                         ; preds = %while.end33
  br label %if.end38

if.end38:                                         ; preds = %if.end37, %if.end
  %26 = load i8*, i8** %s.addr, align 8
  store i8* %26, i8** %retval, align 8
  br label %return

return:                                           ; preds = %if.end38, %if.then36, %if.then4
  %27 = load i8*, i8** %retval, align 8
  ret i8* %27
}

declare dso_local i8* @Perl_fbm_instr(i8*, i8*, %struct.sv*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal i8* @S_reghop4(i8* %s, i64 %off, i8* %llim, i8* %rlim) #0 {
entry:
  %s.addr = alloca i8*, align 8
  %off.addr = alloca i64, align 8
  %llim.addr = alloca i8*, align 8
  %rlim.addr = alloca i8*, align 8
  store i8* %s, i8** %s.addr, align 8
  store i64 %off, i64* %off.addr, align 8
  store i8* %llim, i8** %llim.addr, align 8
  store i8* %rlim, i8** %rlim.addr, align 8
  %0 = load i64, i64* %off.addr, align 8
  %cmp = icmp sge i64 %0, 0
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.then
  %1 = load i64, i64* %off.addr, align 8
  %dec = add nsw i64 %1, -1
  store i64 %dec, i64* %off.addr, align 8
  %tobool = icmp ne i64 %1, 0
  br i1 %tobool, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond
  %2 = load i8*, i8** %s.addr, align 8
  %3 = load i8*, i8** %rlim.addr, align 8
  %cmp1 = icmp ult i8* %2, %3
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %4 = phi i1 [ false, %while.cond ], [ %cmp1, %land.rhs ]
  br i1 %4, label %while.body, label %while.end

while.body:                                       ; preds = %land.end
  %5 = load i8*, i8** %s.addr, align 8
  %6 = load i8, i8* %5, align 1
  %idxprom = zext i8 %6 to i64
  %arrayidx = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom
  %7 = load i8, i8* %arrayidx, align 1
  %conv = zext i8 %7 to i32
  %8 = load i8*, i8** %s.addr, align 8
  %idx.ext = sext i32 %conv to i64
  %add.ptr = getelementptr inbounds i8, i8* %8, i64 %idx.ext
  store i8* %add.ptr, i8** %s.addr, align 8
  br label %while.cond

while.end:                                        ; preds = %land.end
  br label %if.end30

if.else:                                          ; preds = %entry
  br label %while.cond2

while.cond2:                                      ; preds = %if.end28, %if.else
  %9 = load i64, i64* %off.addr, align 8
  %inc = add nsw i64 %9, 1
  store i64 %inc, i64* %off.addr, align 8
  %tobool3 = icmp ne i64 %9, 0
  br i1 %tobool3, label %land.rhs4, label %land.end7

land.rhs4:                                        ; preds = %while.cond2
  %10 = load i8*, i8** %s.addr, align 8
  %11 = load i8*, i8** %llim.addr, align 8
  %cmp5 = icmp ugt i8* %10, %11
  br label %land.end7

land.end7:                                        ; preds = %land.rhs4, %while.cond2
  %12 = phi i1 [ false, %while.cond2 ], [ %cmp5, %land.rhs4 ]
  br i1 %12, label %while.body8, label %while.end29

while.body8:                                      ; preds = %land.end7
  %13 = load i8*, i8** %s.addr, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %13, i32 -1
  store i8* %incdec.ptr, i8** %s.addr, align 8
  %14 = load i8*, i8** %s.addr, align 8
  %15 = load i8, i8* %14, align 1
  %conv9 = zext i8 %15 to i32
  %and = and i32 %conv9, 128
  %tobool10 = icmp ne i32 %and, 0
  br i1 %tobool10, label %if.then11, label %if.end28

if.then11:                                        ; preds = %while.body8
  br label %while.cond12

while.cond12:                                     ; preds = %while.body21, %if.then11
  %16 = load i8*, i8** %s.addr, align 8
  %17 = load i8*, i8** %llim.addr, align 8
  %cmp13 = icmp ugt i8* %16, %17
  br i1 %cmp13, label %land.rhs15, label %land.end20

land.rhs15:                                       ; preds = %while.cond12
  %18 = load i8*, i8** %s.addr, align 8
  %19 = load i8, i8* %18, align 1
  %conv16 = zext i8 %19 to i32
  %and17 = and i32 %conv16, 192
  %cmp18 = icmp eq i32 %and17, 128
  br label %land.end20

land.end20:                                       ; preds = %land.rhs15, %while.cond12
  %20 = phi i1 [ false, %while.cond12 ], [ %cmp18, %land.rhs15 ]
  br i1 %20, label %while.body21, label %while.end23

while.body21:                                     ; preds = %land.end20
  %21 = load i8*, i8** %s.addr, align 8
  %incdec.ptr22 = getelementptr inbounds i8, i8* %21, i32 -1
  store i8* %incdec.ptr22, i8** %s.addr, align 8
  br label %while.cond12

while.end23:                                      ; preds = %land.end20
  %22 = load i8*, i8** %s.addr, align 8
  %23 = load i8, i8* %22, align 1
  %conv24 = zext i8 %23 to i32
  %cmp25 = icmp sge i32 %conv24, 194
  br i1 %cmp25, label %if.end, label %if.then27

if.then27:                                        ; preds = %while.end23
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.7, i64 0, i64 0))
  br label %if.end

if.end:                                           ; preds = %if.then27, %while.end23
  br label %if.end28

if.end28:                                         ; preds = %if.end, %while.body8
  br label %while.cond2

while.end29:                                      ; preds = %land.end7
  br label %if.end30

if.end30:                                         ; preds = %while.end29, %while.end
  %24 = load i8*, i8** %s.addr, align 8
  ret i8* %24
}

; Function Attrs: nounwind readonly
declare dso_local i8* @memchr(i8*, i32, i64) #1

declare dso_local i64 @Perl_utf8_distance(i8*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal i8* @S_find_byclass(%struct.regexp* %prog, %struct.regnode* %c, i8* %s, i8* %strend, %struct.regmatch_info* %reginfo) #0 {
entry:
  %retval = alloca i8*, align 8
  %prog.addr = alloca %struct.regexp*, align 8
  %c.addr = alloca %struct.regnode*, align 8
  %s.addr = alloca i8*, align 8
  %strend.addr = alloca i8*, align 8
  %reginfo.addr = alloca %struct.regmatch_info*, align 8
  %doevery = alloca i32, align 4
  %pat_string = alloca i8*, align 8
  %pat_end = alloca i8*, align 8
  %folder = alloca i32 (i8*, i8*, i32)*, align 8
  %fold_array = alloca i8*, align 8
  %ln = alloca i64, align 8
  %lnc = alloca i64, align 8
  %c1 = alloca i8, align 1
  %c2 = alloca i8, align 1
  %e = alloca i8*, align 8
  %tmp = alloca i32, align 4
  %utf8_target = alloca i8, align 1
  %utf8_fold_flags = alloca i64, align 8
  %is_utf8_pat = alloca i8, align 1
  %to_complement = alloca i8, align 1
  %classnum = alloca i32, align 4
  %progi = alloca %struct.regexp_internal*, align 8
  %expansion = alloca i32, align 4
  %my_strend = alloca i8*, align 8
  %r = alloca i8*, align 8
  %flags325 = alloca i8, align 1
  %r542 = alloca i8*, align 8
  %flags583 = alloca i8, align 1
  %r794 = alloca i8*, align 8
  %flags831 = alloca i8, align 1
  %r1131 = alloca i8*, align 8
  %flags1168 = alloca i8, align 1
  %r1473 = alloca i8*, align 8
  %flags1510 = alloca i8, align 1
  %r1682 = alloca i8*, align 8
  %flags1719 = alloca i8, align 1
  %before = alloca i32, align 4
  %after = alloca i32, align 4
  %before2033 = alloca i32, align 4
  %after2052 = alloca i32, align 4
  %before2088 = alloca i32, align 4
  %after2097 = alloca i32, align 4
  %previous = alloca i32, align 4
  %before2164 = alloca i32, align 4
  %after2183 = alloca i32, align 4
  %previous2219 = alloca i32, align 4
  %before2220 = alloca i32, align 4
  %after2229 = alloca i32, align 4
  %flags3406 = alloca i8, align 1
  %trie_type = alloca i32, align 4
  %aho = alloca %struct._reg_ac_data*, align 8
  %trie = alloca %struct._reg_trie_data*, align 8
  %widecharmap = alloca %struct.hv*, align 8
  %last_start = alloca i8*, align 8
  %maxlen = alloca i64, align 8
  %sv_points = alloca %struct.sv*, align 8
  %points = alloca i8**, align 8
  %foldbuf = alloca [14 x i8], align 1
  %bitmap3560 = alloca i8*, align 8
  %uniflags = alloca i32, align 4
  %uc = alloca i8*, align 8
  %charid = alloca i16, align 2
  %base = alloca i32, align 4
  %state = alloca i32, align 4
  %uvc = alloca i64, align 8
  %len = alloca i64, align 8
  %foldlen = alloca i64, align 8
  %uscan = alloca i8*, align 8
  %leftmost = alloca i8*, align 8
  %pointpos = alloca i32, align 4
  %failed = alloca i32, align 4
  %word = alloca i32, align 4
  %lpos = alloca i8*, align 8
  %skiplen = alloca i64, align 8
  %flags3705 = alloca i8, align 1
  %svpp = alloca %struct.sv**, align 8
  %tmp3883 = alloca i32, align 4
  %offset = alloca i32, align 4
  %lpos3934 = alloca i8*, align 8
  store %struct.regexp* %prog, %struct.regexp** %prog.addr, align 8
  store %struct.regnode* %c, %struct.regnode** %c.addr, align 8
  store i8* %s, i8** %s.addr, align 8
  store i8* %strend, i8** %strend.addr, align 8
  store %struct.regmatch_info* %reginfo, %struct.regmatch_info** %reginfo.addr, align 8
  %0 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %intflags = getelementptr inbounds %struct.regexp, %struct.regexp* %0, i32 0, i32 13
  %1 = load i32, i32* %intflags, align 4
  %and = and i32 %1, 1
  %cmp = icmp eq i32 %and, 0
  %conv = zext i1 %cmp to i32
  store i32 %conv, i32* %doevery, align 4
  store i32 1, i32* %tmp, align 4
  %2 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %is_utf8_target = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %2, i32 0, i32 14
  %3 = load i8, i8* %is_utf8_target, align 2
  %tobool = trunc i8 %3 to i1
  %frombool = zext i1 %tobool to i8
  store i8 %frombool, i8* %utf8_target, align 1
  store i64 0, i64* %utf8_fold_flags, align 8
  %4 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %is_utf8_pat1 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %4, i32 0, i32 13
  %5 = load i8, i8* %is_utf8_pat1, align 1
  %tobool2 = trunc i8 %5 to i1
  %frombool3 = zext i1 %tobool2 to i8
  store i8 %frombool3, i8* %is_utf8_pat, align 1
  store i8 0, i8* %to_complement, align 1
  %6 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %pprivate = getelementptr inbounds %struct.regexp, %struct.regexp* %6, i32 0, i32 14
  %7 = load i8*, i8** %pprivate, align 8
  %8 = bitcast i8* %7 to %struct.regexp_internal*
  store %struct.regexp_internal* %8, %struct.regexp_internal** %progi, align 8
  %9 = load %struct.regnode*, %struct.regnode** %c.addr, align 8
  %type = getelementptr inbounds %struct.regnode, %struct.regnode* %9, i32 0, i32 1
  %10 = load i8, i8* %type, align 1
  %conv4 = zext i8 %10 to i32
  switch i32 %conv4, label %sw.default3985 [
    i32 20, label %sw.bb
    i32 19, label %sw.bb5
    i32 18, label %sw.bb59
    i32 39, label %sw.bb79
    i32 36, label %sw.bb80
    i32 33, label %sw.bb88
    i32 34, label %sw.bb92
    i32 37, label %sw.bb103
    i32 38, label %sw.bb107
    i32 35, label %sw.bb111
    i32 9, label %sw.bb277
    i32 13, label %sw.bb525
    i32 8, label %sw.bb786
    i32 11, label %sw.bb989
    i32 12, label %sw.bb1123
    i32 15, label %sw.bb1326
    i32 14, label %sw.bb1460
    i32 10, label %sw.bb1671
    i32 91, label %sw.bb2262
    i32 26, label %sw.bb2487
    i32 22, label %sw.bb2488
    i32 25, label %sw.bb2557
    i32 21, label %sw.bb2558
    i32 28, label %sw.bb2562
    i32 24, label %sw.bb2609
    i32 27, label %sw.bb2651
    i32 23, label %sw.bb2652
    i32 75, label %sw.bb3499
    i32 74, label %sw.bb3499
  ]

sw.bb:                                            ; preds = %entry
  br label %sw.bb5

sw.bb5:                                           ; preds = %entry, %sw.bb
  %11 = load i8, i8* %utf8_target, align 1
  %tobool6 = trunc i8 %11 to i1
  br i1 %tobool6, label %if.then, label %if.else20

if.then:                                          ; preds = %sw.bb5
  br label %do.body

do.body:                                          ; preds = %if.then
  br label %while.cond

while.cond:                                       ; preds = %if.end18, %do.body
  %12 = load i8*, i8** %s.addr, align 8
  %13 = load i8*, i8** %strend.addr, align 8
  %cmp7 = icmp ult i8* %12, %13
  br i1 %cmp7, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %14 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %15 = load %struct.regnode*, %struct.regnode** %c.addr, align 8
  %16 = load i8*, i8** %s.addr, align 8
  %17 = load i8*, i8** %strend.addr, align 8
  %18 = load i8, i8* %utf8_target, align 1
  %tobool9 = trunc i8 %18 to i1
  %call = call zeroext i1 @S_reginclass(%struct.regexp* %14, %struct.regnode* %15, i8* %16, i8* %17, i1 zeroext %tobool9)
  br i1 %call, label %if.then10, label %if.else17

if.then10:                                        ; preds = %while.body
  %19 = load i32, i32* %tmp, align 4
  %tobool11 = icmp ne i32 %19, 0
  br i1 %tobool11, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %if.then10
  %20 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %intuit = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %20, i32 0, i32 12
  %21 = load i8, i8* %intuit, align 8
  %tobool12 = trunc i8 %21 to i1
  br i1 %tobool12, label %if.then16, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true
  %22 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %call14 = call i32 @S_regtry(%struct.regmatch_info* %22, i8** %s.addr)
  %tobool15 = icmp ne i32 %call14, 0
  br i1 %tobool15, label %if.then16, label %if.else

if.then16:                                        ; preds = %lor.lhs.false, %land.lhs.true
  br label %got_it

if.else:                                          ; preds = %lor.lhs.false, %if.then10
  %23 = load i32, i32* %doevery, align 4
  store i32 %23, i32* %tmp, align 4
  br label %if.end

if.end:                                           ; preds = %if.else
  br label %if.end18

if.else17:                                        ; preds = %while.body
  store i32 1, i32* %tmp, align 4
  br label %if.end18

if.end18:                                         ; preds = %if.else17, %if.end
  %24 = load i8*, i8** %s.addr, align 8
  %25 = load i8, i8* %24, align 1
  %idxprom = zext i8 %25 to i64
  %arrayidx = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom
  %26 = load i8, i8* %arrayidx, align 1
  %conv19 = zext i8 %26 to i32
  %27 = load i8*, i8** %s.addr, align 8
  %idx.ext = sext i32 %conv19 to i64
  %add.ptr = getelementptr inbounds i8, i8* %27, i64 %idx.ext
  store i8* %add.ptr, i8** %s.addr, align 8
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %do.end

do.end:                                           ; preds = %while.end
  br label %if.end58

if.else20:                                        ; preds = %sw.bb5
  br label %do.body21

do.body21:                                        ; preds = %if.else20
  br label %while.cond22

while.cond22:                                     ; preds = %if.end55, %do.body21
  %28 = load i8*, i8** %s.addr, align 8
  %29 = load i8*, i8** %strend.addr, align 8
  %cmp23 = icmp ult i8* %28, %29
  br i1 %cmp23, label %while.body25, label %while.end56

while.body25:                                     ; preds = %while.cond22
  %30 = load %struct.regnode*, %struct.regnode** %c.addr, align 8
  %flags = getelementptr inbounds %struct.regnode, %struct.regnode* %30, i32 0, i32 0
  %31 = load i8, i8* %flags, align 2
  %conv26 = zext i8 %31 to i32
  %tobool27 = icmp ne i32 %conv26, 0
  br i1 %tobool27, label %cond.true, label %cond.false

cond.true:                                        ; preds = %while.body25
  %32 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %33 = load %struct.regnode*, %struct.regnode** %c.addr, align 8
  %34 = load i8*, i8** %s.addr, align 8
  %35 = load i8*, i8** %s.addr, align 8
  %add.ptr28 = getelementptr inbounds i8, i8* %35, i64 1
  %call29 = call zeroext i1 @S_reginclass(%struct.regexp* %32, %struct.regnode* %33, i8* %34, i8* %add.ptr28, i1 zeroext false)
  br i1 %call29, label %if.then42, label %if.else54

cond.false:                                       ; preds = %while.body25
  %36 = load %struct.regnode*, %struct.regnode** %c.addr, align 8
  %37 = bitcast %struct.regnode* %36 to %struct.regnode_charclass*
  %bitmap = getelementptr inbounds %struct.regnode_charclass, %struct.regnode_charclass* %37, i32 0, i32 4
  %38 = load i8*, i8** %s.addr, align 8
  %39 = load i8, i8* %38, align 1
  %conv31 = zext i8 %39 to i32
  %shr = ashr i32 %conv31, 3
  %and32 = and i32 %shr, 31
  %idxprom33 = sext i32 %and32 to i64
  %arrayidx34 = getelementptr inbounds [32 x i8], [32 x i8]* %bitmap, i64 0, i64 %idxprom33
  %40 = load i8, i8* %arrayidx34, align 1
  %conv35 = sext i8 %40 to i32
  %41 = load i8*, i8** %s.addr, align 8
  %42 = load i8, i8* %41, align 1
  %conv36 = zext i8 %42 to i32
  %and37 = and i32 %conv36, 7
  %shl = shl i32 1, %and37
  %and38 = and i32 %conv35, %shl
  %tobool39 = icmp ne i32 %and38, 0
  br i1 %tobool39, label %cond.true40, label %cond.false41

cond.true40:                                      ; preds = %cond.false
  br i1 true, label %if.then42, label %if.else54

cond.false41:                                     ; preds = %cond.false
  br i1 false, label %if.then42, label %if.else54

if.then42:                                        ; preds = %cond.false41, %cond.true40, %cond.true
  %43 = load i32, i32* %tmp, align 4
  %tobool43 = icmp ne i32 %43, 0
  br i1 %tobool43, label %land.lhs.true44, label %if.else52

land.lhs.true44:                                  ; preds = %if.then42
  %44 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %intuit45 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %44, i32 0, i32 12
  %45 = load i8, i8* %intuit45, align 8
  %tobool46 = trunc i8 %45 to i1
  br i1 %tobool46, label %if.then51, label %lor.lhs.false48

lor.lhs.false48:                                  ; preds = %land.lhs.true44
  %46 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %call49 = call i32 @S_regtry(%struct.regmatch_info* %46, i8** %s.addr)
  %tobool50 = icmp ne i32 %call49, 0
  br i1 %tobool50, label %if.then51, label %if.else52

if.then51:                                        ; preds = %lor.lhs.false48, %land.lhs.true44
  br label %got_it

if.else52:                                        ; preds = %lor.lhs.false48, %if.then42
  %47 = load i32, i32* %doevery, align 4
  store i32 %47, i32* %tmp, align 4
  br label %if.end53

if.end53:                                         ; preds = %if.else52
  br label %if.end55

if.else54:                                        ; preds = %cond.false41, %cond.true40, %cond.true
  store i32 1, i32* %tmp, align 4
  br label %if.end55

if.end55:                                         ; preds = %if.else54, %if.end53
  %48 = load i8*, i8** %s.addr, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %48, i32 1
  store i8* %incdec.ptr, i8** %s.addr, align 8
  br label %while.cond22

while.end56:                                      ; preds = %while.cond22
  br label %do.end57

do.end57:                                         ; preds = %while.end56
  br label %if.end58

if.end58:                                         ; preds = %do.end57, %do.end
  br label %sw.epilog3988

sw.bb59:                                          ; preds = %entry
  br label %do.body60

do.body60:                                        ; preds = %sw.bb59
  br label %while.cond61

while.cond61:                                     ; preds = %if.end75, %do.body60
  %49 = load i8*, i8** %s.addr, align 8
  %50 = load i8*, i8** %strend.addr, align 8
  %cmp62 = icmp ult i8* %49, %50
  br i1 %cmp62, label %while.body64, label %while.end77

while.body64:                                     ; preds = %while.cond61
  %51 = load i32, i32* %tmp, align 4
  %tobool65 = icmp ne i32 %51, 0
  br i1 %tobool65, label %land.lhs.true66, label %if.else74

land.lhs.true66:                                  ; preds = %while.body64
  %52 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %intuit67 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %52, i32 0, i32 12
  %53 = load i8, i8* %intuit67, align 8
  %tobool68 = trunc i8 %53 to i1
  br i1 %tobool68, label %if.then73, label %lor.lhs.false70

lor.lhs.false70:                                  ; preds = %land.lhs.true66
  %54 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %call71 = call i32 @S_regtry(%struct.regmatch_info* %54, i8** %s.addr)
  %tobool72 = icmp ne i32 %call71, 0
  br i1 %tobool72, label %if.then73, label %if.else74

if.then73:                                        ; preds = %lor.lhs.false70, %land.lhs.true66
  br label %got_it

if.else74:                                        ; preds = %lor.lhs.false70, %while.body64
  %55 = load i32, i32* %doevery, align 4
  store i32 %55, i32* %tmp, align 4
  br label %if.end75

if.end75:                                         ; preds = %if.else74
  %56 = load i8*, i8** %s.addr, align 8
  %incdec.ptr76 = getelementptr inbounds i8, i8* %56, i32 1
  store i8* %incdec.ptr76, i8** %s.addr, align 8
  br label %while.cond61

while.end77:                                      ; preds = %while.cond61
  br label %do.end78

do.end78:                                         ; preds = %while.end77
  br label %sw.epilog3988

sw.bb79:                                          ; preds = %entry
  br label %sw.bb80

sw.bb80:                                          ; preds = %entry, %sw.bb79
  %57 = load i8, i8* %is_utf8_pat, align 1
  %tobool81 = trunc i8 %57 to i1
  br i1 %tobool81, label %if.then86, label %lor.lhs.false83

lor.lhs.false83:                                  ; preds = %sw.bb80
  %58 = load i8, i8* %utf8_target, align 1
  %tobool84 = trunc i8 %58 to i1
  br i1 %tobool84, label %if.then86, label %if.end87

if.then86:                                        ; preds = %lor.lhs.false83, %sw.bb80
  store i64 1, i64* %utf8_fold_flags, align 8
  br label %do_exactf_utf8

if.end87:                                         ; preds = %lor.lhs.false83
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @PL_fold_latin1, i64 0, i64 0), i8** %fold_array, align 8
  store i32 (i8*, i8*, i32)* @Perl_foldEQ_latin1, i32 (i8*, i8*, i32)** %folder, align 8
  br label %do_exactf_non_utf8

sw.bb88:                                          ; preds = %entry
  %59 = load i8, i8* %utf8_target, align 1
  %tobool89 = trunc i8 %59 to i1
  br i1 %tobool89, label %if.then90, label %if.end91

if.then90:                                        ; preds = %sw.bb88
  store i64 0, i64* %utf8_fold_flags, align 8
  br label %do_exactf_utf8

if.end91:                                         ; preds = %sw.bb88
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @PL_fold, i64 0, i64 0), i8** %fold_array, align 8
  store i32 (i8*, i8*, i32)* @Perl_foldEQ, i32 (i8*, i8*, i32)** %folder, align 8
  br label %do_exactf_non_utf8

sw.bb92:                                          ; preds = %entry
  %60 = load i8, i8* %is_utf8_pat, align 1
  %tobool93 = trunc i8 %60 to i1
  br i1 %tobool93, label %if.then101, label %lor.lhs.false95

lor.lhs.false95:                                  ; preds = %sw.bb92
  %61 = load i8, i8* %utf8_target, align 1
  %tobool96 = trunc i8 %61 to i1
  br i1 %tobool96, label %if.then101, label %lor.lhs.false98

lor.lhs.false98:                                  ; preds = %lor.lhs.false95
  %62 = load i8, i8* @PL_in_utf8_CTYPE_locale, align 1
  %tobool99 = trunc i8 %62 to i1
  br i1 %tobool99, label %if.then101, label %if.end102

if.then101:                                       ; preds = %lor.lhs.false98, %lor.lhs.false95, %sw.bb92
  store i64 2, i64* %utf8_fold_flags, align 8
  br label %do_exactf_utf8

if.end102:                                        ; preds = %lor.lhs.false98
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @PL_fold_locale, i64 0, i64 0), i8** %fold_array, align 8
  store i32 (i8*, i8*, i32)* @Perl_foldEQ_locale, i32 (i8*, i8*, i32)** %folder, align 8
  br label %do_exactf_non_utf8

sw.bb103:                                         ; preds = %entry
  %63 = load i8, i8* %is_utf8_pat, align 1
  %tobool104 = trunc i8 %63 to i1
  br i1 %tobool104, label %if.then105, label %if.end106

if.then105:                                       ; preds = %sw.bb103
  store i64 8, i64* %utf8_fold_flags, align 8
  br label %if.end106

if.end106:                                        ; preds = %if.then105, %sw.bb103
  br label %do_exactf_utf8

sw.bb107:                                         ; preds = %entry
  %64 = load i8, i8* %utf8_target, align 1
  %tobool108 = trunc i8 %64 to i1
  br i1 %tobool108, label %if.end110, label %if.then109

if.then109:                                       ; preds = %sw.bb107
  br label %sw.epilog3988

if.end110:                                        ; preds = %sw.bb107
  store i64 42, i64* %utf8_fold_flags, align 8
  br label %do_exactf_utf8

sw.bb111:                                         ; preds = %entry
  %65 = load i8, i8* %is_utf8_pat, align 1
  %tobool112 = trunc i8 %65 to i1
  br i1 %tobool112, label %if.then117, label %lor.lhs.false114

lor.lhs.false114:                                 ; preds = %sw.bb111
  %66 = load i8, i8* %utf8_target, align 1
  %tobool115 = trunc i8 %66 to i1
  br i1 %tobool115, label %if.then117, label %if.end121

if.then117:                                       ; preds = %lor.lhs.false114, %sw.bb111
  %67 = load i8, i8* %is_utf8_pat, align 1
  %tobool118 = trunc i8 %67 to i1
  %68 = zext i1 %tobool118 to i64
  %cond = select i1 %tobool118, i32 8, i32 0
  %conv120 = sext i32 %cond to i64
  store i64 %conv120, i64* %utf8_fold_flags, align 8
  br label %do_exactf_utf8

if.end121:                                        ; preds = %lor.lhs.false114
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @PL_fold_latin1, i64 0, i64 0), i8** %fold_array, align 8
  store i32 (i8*, i8*, i32)* @Perl_foldEQ_latin1, i32 (i8*, i8*, i32)** %folder, align 8
  br label %do_exactf_non_utf8

do_exactf_non_utf8:                               ; preds = %if.end121, %if.end102, %if.end91, %if.end87
  %69 = load %struct.regnode*, %struct.regnode** %c.addr, align 8
  %70 = bitcast %struct.regnode* %69 to %struct.regnode_string*
  %string = getelementptr inbounds %struct.regnode_string, %struct.regnode_string* %70, i32 0, i32 3
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %string, i64 0, i64 0
  store i8* %arraydecay, i8** %pat_string, align 8
  %71 = load %struct.regnode*, %struct.regnode** %c.addr, align 8
  %72 = bitcast %struct.regnode* %71 to %struct.regnode_string*
  %str_len = getelementptr inbounds %struct.regnode_string, %struct.regnode_string* %72, i32 0, i32 0
  %73 = load i8, i8* %str_len, align 2
  %conv122 = zext i8 %73 to i64
  store i64 %conv122, i64* %ln, align 8
  %74 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %is_utf8_target123 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %74, i32 0, i32 14
  %75 = load i8, i8* %is_utf8_target123, align 2
  %tobool124 = trunc i8 %75 to i1
  br i1 %tobool124, label %cond.true126, label %cond.false128

cond.true126:                                     ; preds = %do_exactf_non_utf8
  %76 = load i8*, i8** %strend.addr, align 8
  %77 = load i64, i64* %ln, align 8
  %sub = sub nsw i64 0, %77
  %78 = load i8*, i8** %s.addr, align 8
  %call127 = call i8* @S_reghop3(i8* %76, i64 %sub, i8* %78)
  br label %cond.end

cond.false128:                                    ; preds = %do_exactf_non_utf8
  %79 = load i8*, i8** %strend.addr, align 8
  %80 = load i64, i64* %ln, align 8
  %sub129 = sub nsw i64 0, %80
  %add.ptr130 = getelementptr inbounds i8, i8* %79, i64 %sub129
  br label %cond.end

cond.end:                                         ; preds = %cond.false128, %cond.true126
  %cond131 = phi i8* [ %call127, %cond.true126 ], [ %add.ptr130, %cond.false128 ]
  store i8* %cond131, i8** %e, align 8
  %81 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %intuit132 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %81, i32 0, i32 12
  %82 = load i8, i8* %intuit132, align 8
  %tobool133 = trunc i8 %82 to i1
  br i1 %tobool133, label %land.lhs.true135, label %if.end139

land.lhs.true135:                                 ; preds = %cond.end
  %83 = load i8*, i8** %e, align 8
  %84 = load i8*, i8** %s.addr, align 8
  %cmp136 = icmp ult i8* %83, %84
  br i1 %cmp136, label %if.then138, label %if.end139

if.then138:                                       ; preds = %land.lhs.true135
  %85 = load i8*, i8** %s.addr, align 8
  store i8* %85, i8** %e, align 8
  br label %if.end139

if.end139:                                        ; preds = %if.then138, %land.lhs.true135, %cond.end
  %86 = load i8*, i8** %pat_string, align 8
  %87 = load i8, i8* %86, align 1
  store i8 %87, i8* %c1, align 1
  %88 = load i8*, i8** %fold_array, align 8
  %89 = load i8, i8* %c1, align 1
  %idxprom140 = zext i8 %89 to i64
  %arrayidx141 = getelementptr inbounds i8, i8* %88, i64 %idxprom140
  %90 = load i8, i8* %arrayidx141, align 1
  store i8 %90, i8* %c2, align 1
  %91 = load i8, i8* %c1, align 1
  %conv142 = zext i8 %91 to i32
  %92 = load i8, i8* %c2, align 1
  %conv143 = zext i8 %92 to i32
  %cmp144 = icmp eq i32 %conv142, %conv143
  br i1 %cmp144, label %if.then146, label %if.else175

if.then146:                                       ; preds = %if.end139
  br label %do.body147

do.body147:                                       ; preds = %if.then146
  br label %while.cond148

while.cond148:                                    ; preds = %if.end171, %do.body147
  %93 = load i8*, i8** %s.addr, align 8
  %94 = load i8*, i8** %e, align 8
  %cmp149 = icmp ule i8* %93, %94
  br i1 %cmp149, label %while.body151, label %while.end173

while.body151:                                    ; preds = %while.cond148
  %95 = load i8*, i8** %s.addr, align 8
  %96 = load i8, i8* %95, align 1
  %conv152 = zext i8 %96 to i32
  %97 = load i8, i8* %c1, align 1
  %conv153 = zext i8 %97 to i32
  %cmp154 = icmp eq i32 %conv152, %conv153
  br i1 %cmp154, label %land.lhs.true156, label %if.end171

land.lhs.true156:                                 ; preds = %while.body151
  %98 = load i64, i64* %ln, align 8
  %cmp157 = icmp eq i64 %98, 1
  br i1 %cmp157, label %land.lhs.true163, label %lor.lhs.false159

lor.lhs.false159:                                 ; preds = %land.lhs.true156
  %99 = load i32 (i8*, i8*, i32)*, i32 (i8*, i8*, i32)** %folder, align 8
  %100 = load i8*, i8** %s.addr, align 8
  %101 = load i8*, i8** %pat_string, align 8
  %102 = load i64, i64* %ln, align 8
  %conv160 = trunc i64 %102 to i32
  %call161 = call i32 %99(i8* %100, i8* %101, i32 %conv160)
  %tobool162 = icmp ne i32 %call161, 0
  br i1 %tobool162, label %land.lhs.true163, label %if.end171

land.lhs.true163:                                 ; preds = %lor.lhs.false159, %land.lhs.true156
  %103 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %intuit164 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %103, i32 0, i32 12
  %104 = load i8, i8* %intuit164, align 8
  %tobool165 = trunc i8 %104 to i1
  br i1 %tobool165, label %if.then170, label %lor.lhs.false167

lor.lhs.false167:                                 ; preds = %land.lhs.true163
  %105 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %call168 = call i32 @S_regtry(%struct.regmatch_info* %105, i8** %s.addr)
  %tobool169 = icmp ne i32 %call168, 0
  br i1 %tobool169, label %if.then170, label %if.end171

if.then170:                                       ; preds = %lor.lhs.false167, %land.lhs.true163
  br label %got_it

if.end171:                                        ; preds = %lor.lhs.false167, %lor.lhs.false159, %while.body151
  %106 = load i8*, i8** %s.addr, align 8
  %incdec.ptr172 = getelementptr inbounds i8, i8* %106, i32 1
  store i8* %incdec.ptr172, i8** %s.addr, align 8
  br label %while.cond148

while.end173:                                     ; preds = %while.cond148
  br label %do.end174

do.end174:                                        ; preds = %while.end173
  br label %if.end209

if.else175:                                       ; preds = %if.end139
  br label %do.body176

do.body176:                                       ; preds = %if.else175
  br label %while.cond177

while.cond177:                                    ; preds = %if.end205, %do.body176
  %107 = load i8*, i8** %s.addr, align 8
  %108 = load i8*, i8** %e, align 8
  %cmp178 = icmp ule i8* %107, %108
  br i1 %cmp178, label %while.body180, label %while.end207

while.body180:                                    ; preds = %while.cond177
  %109 = load i8*, i8** %s.addr, align 8
  %110 = load i8, i8* %109, align 1
  %conv181 = zext i8 %110 to i32
  %111 = load i8, i8* %c1, align 1
  %conv182 = zext i8 %111 to i32
  %cmp183 = icmp eq i32 %conv181, %conv182
  br i1 %cmp183, label %land.lhs.true190, label %lor.lhs.false185

lor.lhs.false185:                                 ; preds = %while.body180
  %112 = load i8*, i8** %s.addr, align 8
  %113 = load i8, i8* %112, align 1
  %conv186 = zext i8 %113 to i32
  %114 = load i8, i8* %c2, align 1
  %conv187 = zext i8 %114 to i32
  %cmp188 = icmp eq i32 %conv186, %conv187
  br i1 %cmp188, label %land.lhs.true190, label %if.end205

land.lhs.true190:                                 ; preds = %lor.lhs.false185, %while.body180
  %115 = load i64, i64* %ln, align 8
  %cmp191 = icmp eq i64 %115, 1
  br i1 %cmp191, label %land.lhs.true197, label %lor.lhs.false193

lor.lhs.false193:                                 ; preds = %land.lhs.true190
  %116 = load i32 (i8*, i8*, i32)*, i32 (i8*, i8*, i32)** %folder, align 8
  %117 = load i8*, i8** %s.addr, align 8
  %118 = load i8*, i8** %pat_string, align 8
  %119 = load i64, i64* %ln, align 8
  %conv194 = trunc i64 %119 to i32
  %call195 = call i32 %116(i8* %117, i8* %118, i32 %conv194)
  %tobool196 = icmp ne i32 %call195, 0
  br i1 %tobool196, label %land.lhs.true197, label %if.end205

land.lhs.true197:                                 ; preds = %lor.lhs.false193, %land.lhs.true190
  %120 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %intuit198 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %120, i32 0, i32 12
  %121 = load i8, i8* %intuit198, align 8
  %tobool199 = trunc i8 %121 to i1
  br i1 %tobool199, label %if.then204, label %lor.lhs.false201

lor.lhs.false201:                                 ; preds = %land.lhs.true197
  %122 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %call202 = call i32 @S_regtry(%struct.regmatch_info* %122, i8** %s.addr)
  %tobool203 = icmp ne i32 %call202, 0
  br i1 %tobool203, label %if.then204, label %if.end205

if.then204:                                       ; preds = %lor.lhs.false201, %land.lhs.true197
  br label %got_it

if.end205:                                        ; preds = %lor.lhs.false201, %lor.lhs.false193, %lor.lhs.false185
  %123 = load i8*, i8** %s.addr, align 8
  %incdec.ptr206 = getelementptr inbounds i8, i8* %123, i32 1
  store i8* %incdec.ptr206, i8** %s.addr, align 8
  br label %while.cond177

while.end207:                                     ; preds = %while.cond177
  br label %do.end208

do.end208:                                        ; preds = %while.end207
  br label %if.end209

if.end209:                                        ; preds = %do.end208, %do.end174
  br label %sw.epilog3988

do_exactf_utf8:                                   ; preds = %if.then117, %if.end110, %if.end106, %if.then101, %if.then90, %if.then86
  %124 = load %struct.regnode*, %struct.regnode** %c.addr, align 8
  %125 = bitcast %struct.regnode* %124 to %struct.regnode_string*
  %string210 = getelementptr inbounds %struct.regnode_string, %struct.regnode_string* %125, i32 0, i32 3
  %arraydecay211 = getelementptr inbounds [1 x i8], [1 x i8]* %string210, i64 0, i64 0
  store i8* %arraydecay211, i8** %pat_string, align 8
  %126 = load %struct.regnode*, %struct.regnode** %c.addr, align 8
  %127 = bitcast %struct.regnode* %126 to %struct.regnode_string*
  %str_len212 = getelementptr inbounds %struct.regnode_string, %struct.regnode_string* %127, i32 0, i32 0
  %128 = load i8, i8* %str_len212, align 2
  %conv213 = zext i8 %128 to i64
  store i64 %conv213, i64* %ln, align 8
  %129 = load i8*, i8** %pat_string, align 8
  %130 = load i64, i64* %ln, align 8
  %add.ptr214 = getelementptr inbounds i8, i8* %129, i64 %130
  store i8* %add.ptr214, i8** %pat_end, align 8
  %131 = load i8, i8* %is_utf8_pat, align 1
  %tobool215 = trunc i8 %131 to i1
  br i1 %tobool215, label %cond.true217, label %cond.false219

cond.true217:                                     ; preds = %do_exactf_utf8
  %132 = load i8*, i8** %pat_string, align 8
  %133 = load i8*, i8** %pat_end, align 8
  %call218 = call i64 @Perl_utf8_length(i8* %132, i8* %133)
  br label %cond.end220

cond.false219:                                    ; preds = %do_exactf_utf8
  %134 = load i64, i64* %ln, align 8
  br label %cond.end220

cond.end220:                                      ; preds = %cond.false219, %cond.true217
  %cond221 = phi i64 [ %call218, %cond.true217 ], [ %134, %cond.false219 ]
  store i64 %cond221, i64* %lnc, align 8
  %135 = load i8, i8* %utf8_target, align 1
  %tobool222 = trunc i8 %135 to i1
  %136 = zext i1 %tobool222 to i64
  %cond224 = select i1 %tobool222, i32 3, i32 2
  store i32 %cond224, i32* %expansion, align 4
  %137 = load i64, i64* %lnc, align 8
  %138 = load i32, i32* %expansion, align 4
  %conv225 = zext i32 %138 to i64
  %add = add i64 %137, %conv225
  %sub226 = sub i64 %add, 1
  %139 = load i32, i32* %expansion, align 4
  %conv227 = zext i32 %139 to i64
  %div = udiv i64 %sub226, %conv227
  store i64 %div, i64* %lnc, align 8
  %140 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %is_utf8_target228 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %140, i32 0, i32 14
  %141 = load i8, i8* %is_utf8_target228, align 2
  %tobool229 = trunc i8 %141 to i1
  br i1 %tobool229, label %cond.true231, label %cond.false234

cond.true231:                                     ; preds = %cond.end220
  %142 = load i8*, i8** %strend.addr, align 8
  %143 = load i64, i64* %lnc, align 8
  %sub232 = sub nsw i64 0, %143
  %144 = load i8*, i8** %s.addr, align 8
  %call233 = call i8* @S_reghop3(i8* %142, i64 %sub232, i8* %144)
  br label %cond.end237

cond.false234:                                    ; preds = %cond.end220
  %145 = load i8*, i8** %strend.addr, align 8
  %146 = load i64, i64* %lnc, align 8
  %sub235 = sub nsw i64 0, %146
  %add.ptr236 = getelementptr inbounds i8, i8* %145, i64 %sub235
  br label %cond.end237

cond.end237:                                      ; preds = %cond.false234, %cond.true231
  %cond238 = phi i8* [ %call233, %cond.true231 ], [ %add.ptr236, %cond.false234 ]
  store i8* %cond238, i8** %e, align 8
  %147 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %intuit239 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %147, i32 0, i32 12
  %148 = load i8, i8* %intuit239, align 8
  %tobool240 = trunc i8 %148 to i1
  br i1 %tobool240, label %land.lhs.true242, label %if.end246

land.lhs.true242:                                 ; preds = %cond.end237
  %149 = load i8*, i8** %e, align 8
  %150 = load i8*, i8** %s.addr, align 8
  %cmp243 = icmp ult i8* %149, %150
  br i1 %cmp243, label %if.then245, label %if.end246

if.then245:                                       ; preds = %land.lhs.true242
  %151 = load i8*, i8** %s.addr, align 8
  store i8* %151, i8** %e, align 8
  br label %if.end246

if.end246:                                        ; preds = %if.then245, %land.lhs.true242, %cond.end237
  br label %while.cond247

while.cond247:                                    ; preds = %cond.end272, %if.end246
  %152 = load i8*, i8** %s.addr, align 8
  %153 = load i8*, i8** %e, align 8
  %cmp248 = icmp ule i8* %152, %153
  br i1 %cmp248, label %while.body250, label %while.end276

while.body250:                                    ; preds = %while.cond247
  %154 = load i8*, i8** %strend.addr, align 8
  store i8* %154, i8** %my_strend, align 8
  %155 = load i8*, i8** %s.addr, align 8
  %156 = load i8, i8* %utf8_target, align 1
  %tobool251 = trunc i8 %156 to i1
  %157 = load i8*, i8** %pat_string, align 8
  %158 = load i64, i64* %ln, align 8
  %159 = load i8, i8* %is_utf8_pat, align 1
  %tobool252 = trunc i8 %159 to i1
  %160 = load i64, i64* %utf8_fold_flags, align 8
  %conv253 = trunc i64 %160 to i32
  %call254 = call i32 @Perl_foldEQ_utf8_flags(i8* %155, i8** %my_strend, i64 0, i1 zeroext %tobool251, i8* %157, i8** null, i64 %158, i1 zeroext %tobool252, i32 %conv253)
  %tobool255 = icmp ne i32 %call254, 0
  br i1 %tobool255, label %land.lhs.true256, label %if.end264

land.lhs.true256:                                 ; preds = %while.body250
  %161 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %intuit257 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %161, i32 0, i32 12
  %162 = load i8, i8* %intuit257, align 8
  %tobool258 = trunc i8 %162 to i1
  br i1 %tobool258, label %if.then263, label %lor.lhs.false260

lor.lhs.false260:                                 ; preds = %land.lhs.true256
  %163 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %call261 = call i32 @S_regtry(%struct.regmatch_info* %163, i8** %s.addr)
  %tobool262 = icmp ne i32 %call261, 0
  br i1 %tobool262, label %if.then263, label %if.end264

if.then263:                                       ; preds = %lor.lhs.false260, %land.lhs.true256
  br label %got_it

if.end264:                                        ; preds = %lor.lhs.false260, %while.body250
  %164 = load i8, i8* %utf8_target, align 1
  %tobool265 = trunc i8 %164 to i1
  br i1 %tobool265, label %cond.true267, label %cond.false271

cond.true267:                                     ; preds = %if.end264
  %165 = load i8*, i8** %s.addr, align 8
  %166 = load i8, i8* %165, align 1
  %idxprom268 = zext i8 %166 to i64
  %arrayidx269 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom268
  %167 = load i8, i8* %arrayidx269, align 1
  %conv270 = zext i8 %167 to i32
  br label %cond.end272

cond.false271:                                    ; preds = %if.end264
  br label %cond.end272

cond.end272:                                      ; preds = %cond.false271, %cond.true267
  %cond273 = phi i32 [ %conv270, %cond.true267 ], [ 1, %cond.false271 ]
  %168 = load i8*, i8** %s.addr, align 8
  %idx.ext274 = sext i32 %cond273 to i64
  %add.ptr275 = getelementptr inbounds i8, i8* %168, i64 %idx.ext274
  store i8* %add.ptr275, i8** %s.addr, align 8
  br label %while.cond247

while.end276:                                     ; preds = %while.cond247
  br label %sw.epilog3988

sw.bb277:                                         ; preds = %entry
  %169 = load %struct.regnode*, %struct.regnode** %c.addr, align 8
  %flags278 = getelementptr inbounds %struct.regnode, %struct.regnode* %169, i32 0, i32 0
  %170 = load i8, i8* %flags278, align 2
  %conv279 = zext i8 %170 to i32
  %cmp280 = icmp ne i32 %conv279, 0
  br i1 %cmp280, label %if.then282, label %if.end286

if.then282:                                       ; preds = %sw.bb277
  %171 = load i8, i8* @PL_in_utf8_CTYPE_locale, align 1
  %tobool283 = trunc i8 %171 to i1
  br i1 %tobool283, label %if.end285, label %if.then284

if.then284:                                       ; preds = %if.then282
  call void (i32, i8*, ...) @Perl_ck_warner(i32 65, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.2, i64 0, i64 0))
  br label %if.end285

if.end285:                                        ; preds = %if.then284, %if.then282
  br label %do_boundu

if.end286:                                        ; preds = %sw.bb277
  %172 = load i8, i8* %utf8_target, align 1
  %tobool287 = trunc i8 %172 to i1
  br i1 %tobool287, label %if.then288, label %if.else430

if.then288:                                       ; preds = %if.end286
  %173 = load i8*, i8** %s.addr, align 8
  %174 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %174, i32 0, i32 1
  %175 = load i8*, i8** %strbeg, align 8
  %cmp289 = icmp eq i8* %173, %175
  br i1 %cmp289, label %if.then291, label %if.else292

if.then291:                                       ; preds = %if.then288
  store i32 10, i32* %tmp, align 4
  br label %if.end301

if.else292:                                       ; preds = %if.then288
  %176 = load i8*, i8** %s.addr, align 8
  %177 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg293 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %177, i32 0, i32 1
  %178 = load i8*, i8** %strbeg293, align 8
  %call294 = call i8* @S_reghop3(i8* %176, i64 -1, i8* %178)
  store i8* %call294, i8** %r, align 8
  %179 = load i8*, i8** %r, align 8
  %180 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend295 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %180, i32 0, i32 2
  %181 = load i8*, i8** %strend295, align 8
  %182 = load i8*, i8** %r, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %181 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %182 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %call296 = call zeroext i1 @Perl_ckwarn(i32 44)
  %183 = zext i1 %call296 to i64
  %cond298 = select i1 %call296, i32 0, i32 1
  %call299 = call i64 @Perl_utf8n_to_uvchr(i8* %179, i64 %sub.ptr.sub, i64* null, i32 %cond298)
  %conv300 = trunc i64 %call299 to i32
  store i32 %conv300, i32* %tmp, align 4
  br label %if.end301

if.end301:                                        ; preds = %if.else292, %if.then291
  %184 = load i32, i32* %tmp, align 4
  %cmp302 = icmp slt i32 %184, 256
  br i1 %cmp302, label %cond.true304, label %cond.false316

cond.true304:                                     ; preds = %if.end301
  %185 = load i32, i32* %tmp, align 4
  %and305 = and i32 %185, -128
  %cmp306 = icmp eq i32 %and305, 0
  br i1 %cmp306, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %cond.true304
  %call308 = call i16** @__ctype_b_loc() #6
  %186 = load i16*, i16** %call308, align 8
  %187 = load i32, i32* %tmp, align 4
  %idxprom309 = sext i32 %187 to i64
  %arrayidx310 = getelementptr inbounds i16, i16* %186, i64 %idxprom309
  %188 = load i16, i16* %arrayidx310, align 2
  %conv311 = zext i16 %188 to i32
  %and312 = and i32 %conv311, 8
  %tobool313 = icmp ne i32 %and312, 0
  br i1 %tobool313, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %land.rhs
  %189 = load i32, i32* %tmp, align 4
  %cmp314 = icmp eq i32 %189, 95
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %land.rhs
  %190 = phi i1 [ true, %land.rhs ], [ %cmp314, %lor.rhs ]
  br label %land.end

land.end:                                         ; preds = %lor.end, %cond.true304
  %191 = phi i1 [ false, %cond.true304 ], [ %190, %lor.end ]
  %land.ext = zext i1 %191 to i32
  br label %cond.end320

cond.false316:                                    ; preds = %if.end301
  %192 = load i32, i32* %tmp, align 4
  %conv317 = sext i32 %192 to i64
  %call318 = call zeroext i1 @Perl__is_uni_FOO(i8 zeroext 0, i64 %conv317)
  %conv319 = zext i1 %call318 to i32
  br label %cond.end320

cond.end320:                                      ; preds = %cond.false316, %land.end
  %cond321 = phi i32 [ %land.ext, %land.end ], [ %conv319, %cond.false316 ]
  store i32 %cond321, i32* %tmp, align 4
  br label %do.body322

do.body322:                                       ; preds = %cond.end320
  %193 = load %struct.sv*, %struct.sv** getelementptr inbounds ([10 x %struct.sv*], [10 x %struct.sv*]* @PL_utf8_swash_ptrs, i64 0, i64 0), align 16
  %tobool323 = icmp ne %struct.sv* %193, null
  br i1 %tobool323, label %if.end327, label %if.then324

if.then324:                                       ; preds = %do.body322
  store i8 4, i8* %flags325, align 1
  %194 = load %struct.sv*, %struct.sv** getelementptr inbounds ([16 x %struct.sv*], [16 x %struct.sv*]* @PL_XPosix_ptrs, i64 0, i64 0), align 16
  %call326 = call %struct.sv* @Perl__core_swash_init(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.4, i64 0, i64 0), %struct.sv* @PL_sv_undef, i32 1, i32 0, %struct.sv* %194, i8* %flags325)
  store %struct.sv* %call326, %struct.sv** getelementptr inbounds ([10 x %struct.sv*], [10 x %struct.sv*]* @PL_utf8_swash_ptrs, i64 0, i64 0), align 16
  br label %if.end327

if.end327:                                        ; preds = %if.then324, %do.body322
  br label %do.end328

do.end328:                                        ; preds = %if.end327
  br label %do.body329

do.body329:                                       ; preds = %do.end328
  br label %while.cond330

while.cond330:                                    ; preds = %if.end422, %do.body329
  %195 = load i8*, i8** %s.addr, align 8
  %196 = load i8*, i8** %strend.addr, align 8
  %cmp331 = icmp ult i8* %195, %196
  br i1 %cmp331, label %while.body333, label %while.end428

while.body333:                                    ; preds = %while.cond330
  %197 = load i32, i32* %tmp, align 4
  %198 = load i8*, i8** %s.addr, align 8
  %199 = load i8, i8* %198, align 1
  %conv334 = zext i8 %199 to i64
  %cmp335 = icmp ult i64 %conv334, 128
  br i1 %cmp335, label %cond.true337, label %cond.false357

cond.true337:                                     ; preds = %while.body333
  %200 = load i8*, i8** %s.addr, align 8
  %201 = load i8, i8* %200, align 1
  %conv338 = zext i8 %201 to i32
  %and339 = and i32 %conv338, -128
  %cmp340 = icmp eq i32 %and339, 0
  br i1 %cmp340, label %land.rhs342, label %land.end355

land.rhs342:                                      ; preds = %cond.true337
  %call343 = call i16** @__ctype_b_loc() #6
  %202 = load i16*, i16** %call343, align 8
  %203 = load i8*, i8** %s.addr, align 8
  %204 = load i8, i8* %203, align 1
  %conv344 = zext i8 %204 to i32
  %idxprom345 = sext i32 %conv344 to i64
  %arrayidx346 = getelementptr inbounds i16, i16* %202, i64 %idxprom345
  %205 = load i16, i16* %arrayidx346, align 2
  %conv347 = zext i16 %205 to i32
  %and348 = and i32 %conv347, 8
  %tobool349 = icmp ne i32 %and348, 0
  br i1 %tobool349, label %lor.end354, label %lor.rhs350

lor.rhs350:                                       ; preds = %land.rhs342
  %206 = load i8*, i8** %s.addr, align 8
  %207 = load i8, i8* %206, align 1
  %conv351 = zext i8 %207 to i32
  %cmp352 = icmp eq i32 %conv351, 95
  br label %lor.end354

lor.end354:                                       ; preds = %lor.rhs350, %land.rhs342
  %208 = phi i1 [ true, %land.rhs342 ], [ %cmp352, %lor.rhs350 ]
  br label %land.end355

land.end355:                                      ; preds = %lor.end354, %cond.true337
  %209 = phi i1 [ false, %cond.true337 ], [ %208, %lor.end354 ]
  %land.ext356 = zext i1 %209 to i32
  br label %cond.end404

cond.false357:                                    ; preds = %while.body333
  %210 = load i8*, i8** %s.addr, align 8
  %211 = load i8, i8* %210, align 1
  %conv358 = zext i8 %211 to i32
  %and359 = and i32 %conv358, 254
  %cmp360 = icmp eq i32 %and359, 194
  br i1 %cmp360, label %cond.true362, label %cond.false399

cond.true362:                                     ; preds = %cond.false357
  %212 = load i8*, i8** %s.addr, align 8
  %213 = load i8, i8* %212, align 1
  %conv363 = zext i8 %213 to i32
  %and364 = and i32 %conv363, 31
  %shl365 = shl i32 %and364, 6
  %214 = load i8*, i8** %s.addr, align 8
  %add.ptr366 = getelementptr inbounds i8, i8* %214, i64 1
  %215 = load i8, i8* %add.ptr366, align 1
  %conv367 = zext i8 %215 to i32
  %and368 = and i32 %conv367, 63
  %or = or i32 %shl365, %and368
  %and369 = and i32 %or, -128
  %cmp370 = icmp eq i32 %and369, 0
  br i1 %cmp370, label %land.rhs372, label %land.end397

land.rhs372:                                      ; preds = %cond.true362
  %call373 = call i16** @__ctype_b_loc() #6
  %216 = load i16*, i16** %call373, align 8
  %217 = load i8*, i8** %s.addr, align 8
  %218 = load i8, i8* %217, align 1
  %conv374 = zext i8 %218 to i32
  %and375 = and i32 %conv374, 31
  %shl376 = shl i32 %and375, 6
  %219 = load i8*, i8** %s.addr, align 8
  %add.ptr377 = getelementptr inbounds i8, i8* %219, i64 1
  %220 = load i8, i8* %add.ptr377, align 1
  %conv378 = zext i8 %220 to i32
  %and379 = and i32 %conv378, 63
  %or380 = or i32 %shl376, %and379
  %idxprom381 = sext i32 %or380 to i64
  %arrayidx382 = getelementptr inbounds i16, i16* %216, i64 %idxprom381
  %221 = load i16, i16* %arrayidx382, align 2
  %conv383 = zext i16 %221 to i32
  %and384 = and i32 %conv383, 8
  %tobool385 = icmp ne i32 %and384, 0
  br i1 %tobool385, label %lor.end396, label %lor.rhs386

lor.rhs386:                                       ; preds = %land.rhs372
  %222 = load i8*, i8** %s.addr, align 8
  %223 = load i8, i8* %222, align 1
  %conv387 = zext i8 %223 to i32
  %and388 = and i32 %conv387, 31
  %shl389 = shl i32 %and388, 6
  %224 = load i8*, i8** %s.addr, align 8
  %add.ptr390 = getelementptr inbounds i8, i8* %224, i64 1
  %225 = load i8, i8* %add.ptr390, align 1
  %conv391 = zext i8 %225 to i32
  %and392 = and i32 %conv391, 63
  %or393 = or i32 %shl389, %and392
  %cmp394 = icmp eq i32 %or393, 95
  br label %lor.end396

lor.end396:                                       ; preds = %lor.rhs386, %land.rhs372
  %226 = phi i1 [ true, %land.rhs372 ], [ %cmp394, %lor.rhs386 ]
  br label %land.end397

land.end397:                                      ; preds = %lor.end396, %cond.true362
  %227 = phi i1 [ false, %cond.true362 ], [ %226, %lor.end396 ]
  %land.ext398 = zext i1 %227 to i32
  br label %cond.end402

cond.false399:                                    ; preds = %cond.false357
  %228 = load i8*, i8** %s.addr, align 8
  %call400 = call zeroext i1 @Perl__is_utf8_FOO(i8 zeroext 0, i8* %228)
  %conv401 = zext i1 %call400 to i32
  br label %cond.end402

cond.end402:                                      ; preds = %cond.false399, %land.end397
  %cond403 = phi i32 [ %land.ext398, %land.end397 ], [ %conv401, %cond.false399 ]
  br label %cond.end404

cond.end404:                                      ; preds = %cond.end402, %land.end355
  %cond405 = phi i32 [ %land.ext356, %land.end355 ], [ %cond403, %cond.end402 ]
  %tobool406 = icmp ne i32 %cond405, 0
  %lnot = xor i1 %tobool406, true
  %lnot.ext = zext i1 %lnot to i32
  %cmp407 = icmp eq i32 %197, %lnot.ext
  br i1 %cmp407, label %if.then409, label %if.else421

if.then409:                                       ; preds = %cond.end404
  %229 = load i32, i32* %tmp, align 4
  %tobool410 = icmp ne i32 %229, 0
  %lnot411 = xor i1 %tobool410, true
  %lnot.ext412 = zext i1 %lnot411 to i32
  store i32 %lnot.ext412, i32* %tmp, align 4
  %230 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %intuit413 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %230, i32 0, i32 12
  %231 = load i8, i8* %intuit413, align 8
  %tobool414 = trunc i8 %231 to i1
  br i1 %tobool414, label %if.then419, label %lor.lhs.false416

lor.lhs.false416:                                 ; preds = %if.then409
  %232 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %call417 = call i32 @S_regtry(%struct.regmatch_info* %232, i8** %s.addr)
  %tobool418 = icmp ne i32 %call417, 0
  br i1 %tobool418, label %if.then419, label %if.end420

if.then419:                                       ; preds = %lor.lhs.false416, %if.then409
  br label %got_it

if.end420:                                        ; preds = %lor.lhs.false416
  br label %if.end422

if.else421:                                       ; preds = %cond.end404
  br label %if.end422

if.end422:                                        ; preds = %if.else421, %if.end420
  %233 = load i8*, i8** %s.addr, align 8
  %234 = load i8, i8* %233, align 1
  %idxprom423 = zext i8 %234 to i64
  %arrayidx424 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom423
  %235 = load i8, i8* %arrayidx424, align 1
  %conv425 = zext i8 %235 to i32
  %236 = load i8*, i8** %s.addr, align 8
  %idx.ext426 = sext i32 %conv425 to i64
  %add.ptr427 = getelementptr inbounds i8, i8* %236, i64 %idx.ext426
  store i8* %add.ptr427, i8** %s.addr, align 8
  br label %while.cond330

while.end428:                                     ; preds = %while.cond330
  br label %do.end429

do.end429:                                        ; preds = %while.end428
  br label %if.end501

if.else430:                                       ; preds = %if.end286
  %237 = load i8*, i8** %s.addr, align 8
  %238 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg431 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %238, i32 0, i32 1
  %239 = load i8*, i8** %strbeg431, align 8
  %cmp432 = icmp ne i8* %237, %239
  br i1 %cmp432, label %cond.true434, label %cond.false437

cond.true434:                                     ; preds = %if.else430
  %240 = load i8*, i8** %s.addr, align 8
  %add.ptr435 = getelementptr inbounds i8, i8* %240, i64 -1
  %241 = load i8, i8* %add.ptr435, align 1
  %conv436 = zext i8 %241 to i32
  br label %cond.end438

cond.false437:                                    ; preds = %if.else430
  br label %cond.end438

cond.end438:                                      ; preds = %cond.false437, %cond.true434
  %cond439 = phi i32 [ %conv436, %cond.true434 ], [ 10, %cond.false437 ]
  store i32 %cond439, i32* %tmp, align 4
  %242 = load i32, i32* %tmp, align 4
  %and440 = and i32 %242, -128
  %cmp441 = icmp eq i32 %and440, 0
  br i1 %cmp441, label %land.rhs443, label %land.end454

land.rhs443:                                      ; preds = %cond.end438
  %call444 = call i16** @__ctype_b_loc() #6
  %243 = load i16*, i16** %call444, align 8
  %244 = load i32, i32* %tmp, align 4
  %idxprom445 = sext i32 %244 to i64
  %arrayidx446 = getelementptr inbounds i16, i16* %243, i64 %idxprom445
  %245 = load i16, i16* %arrayidx446, align 2
  %conv447 = zext i16 %245 to i32
  %and448 = and i32 %conv447, 8
  %tobool449 = icmp ne i32 %and448, 0
  br i1 %tobool449, label %lor.end453, label %lor.rhs450

lor.rhs450:                                       ; preds = %land.rhs443
  %246 = load i32, i32* %tmp, align 4
  %cmp451 = icmp eq i32 %246, 95
  br label %lor.end453

lor.end453:                                       ; preds = %lor.rhs450, %land.rhs443
  %247 = phi i1 [ true, %land.rhs443 ], [ %cmp451, %lor.rhs450 ]
  br label %land.end454

land.end454:                                      ; preds = %lor.end453, %cond.end438
  %248 = phi i1 [ false, %cond.end438 ], [ %247, %lor.end453 ]
  %land.ext455 = zext i1 %248 to i32
  store i32 %land.ext455, i32* %tmp, align 4
  br label %do.body456

do.body456:                                       ; preds = %land.end454
  br label %while.cond457

while.cond457:                                    ; preds = %if.end497, %do.body456
  %249 = load i8*, i8** %s.addr, align 8
  %250 = load i8*, i8** %strend.addr, align 8
  %cmp458 = icmp ult i8* %249, %250
  br i1 %cmp458, label %while.body460, label %while.end499

while.body460:                                    ; preds = %while.cond457
  %251 = load i32, i32* %tmp, align 4
  %252 = load i8*, i8** %s.addr, align 8
  %253 = load i8, i8* %252, align 1
  %conv461 = zext i8 %253 to i32
  %and462 = and i32 %conv461, -128
  %cmp463 = icmp eq i32 %and462, 0
  br i1 %cmp463, label %land.rhs465, label %land.end478

land.rhs465:                                      ; preds = %while.body460
  %call466 = call i16** @__ctype_b_loc() #6
  %254 = load i16*, i16** %call466, align 8
  %255 = load i8*, i8** %s.addr, align 8
  %256 = load i8, i8* %255, align 1
  %conv467 = zext i8 %256 to i32
  %idxprom468 = sext i32 %conv467 to i64
  %arrayidx469 = getelementptr inbounds i16, i16* %254, i64 %idxprom468
  %257 = load i16, i16* %arrayidx469, align 2
  %conv470 = zext i16 %257 to i32
  %and471 = and i32 %conv470, 8
  %tobool472 = icmp ne i32 %and471, 0
  br i1 %tobool472, label %lor.end477, label %lor.rhs473

lor.rhs473:                                       ; preds = %land.rhs465
  %258 = load i8*, i8** %s.addr, align 8
  %259 = load i8, i8* %258, align 1
  %conv474 = zext i8 %259 to i32
  %cmp475 = icmp eq i32 %conv474, 95
  br label %lor.end477

lor.end477:                                       ; preds = %lor.rhs473, %land.rhs465
  %260 = phi i1 [ true, %land.rhs465 ], [ %cmp475, %lor.rhs473 ]
  br label %land.end478

land.end478:                                      ; preds = %lor.end477, %while.body460
  %261 = phi i1 [ false, %while.body460 ], [ %260, %lor.end477 ]
  %lnot480 = xor i1 %261, true
  %lnot.ext481 = zext i1 %lnot480 to i32
  %cmp482 = icmp eq i32 %251, %lnot.ext481
  br i1 %cmp482, label %if.then484, label %if.else496

if.then484:                                       ; preds = %land.end478
  %262 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %intuit485 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %262, i32 0, i32 12
  %263 = load i8, i8* %intuit485, align 8
  %tobool486 = trunc i8 %263 to i1
  br i1 %tobool486, label %if.then491, label %lor.lhs.false488

lor.lhs.false488:                                 ; preds = %if.then484
  %264 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %call489 = call i32 @S_regtry(%struct.regmatch_info* %264, i8** %s.addr)
  %tobool490 = icmp ne i32 %call489, 0
  br i1 %tobool490, label %if.then491, label %if.end492

if.then491:                                       ; preds = %lor.lhs.false488, %if.then484
  br label %got_it

if.end492:                                        ; preds = %lor.lhs.false488
  %265 = load i32, i32* %tmp, align 4
  %tobool493 = icmp ne i32 %265, 0
  %lnot494 = xor i1 %tobool493, true
  %lnot.ext495 = zext i1 %lnot494 to i32
  store i32 %lnot.ext495, i32* %tmp, align 4
  br label %if.end497

if.else496:                                       ; preds = %land.end478
  br label %if.end497

if.end497:                                        ; preds = %if.else496, %if.end492
  %266 = load i8*, i8** %s.addr, align 8
  %incdec.ptr498 = getelementptr inbounds i8, i8* %266, i32 1
  store i8* %incdec.ptr498, i8** %s.addr, align 8
  br label %while.cond457

while.end499:                                     ; preds = %while.cond457
  br label %do.end500

do.end500:                                        ; preds = %while.end499
  br label %if.end501

if.end501:                                        ; preds = %do.end500, %do.end429
  %267 = load i32, i32* %tmp, align 4
  %call502 = call i16** @__ctype_b_loc() #6
  %268 = load i16*, i16** %call502, align 8
  %arrayidx503 = getelementptr inbounds i16, i16* %268, i64 10
  %269 = load i16, i16* %arrayidx503, align 2
  %conv504 = zext i16 %269 to i32
  %and505 = and i32 %conv504, 8
  %tobool506 = icmp ne i32 %and505, 0
  br i1 %tobool506, label %lor.end508, label %lor.rhs507

lor.rhs507:                                       ; preds = %if.end501
  br label %lor.end508

lor.end508:                                       ; preds = %lor.rhs507, %if.end501
  %270 = phi i1 [ true, %if.end501 ], [ false, %lor.rhs507 ]
  %lnot510 = xor i1 %270, true
  %lnot.ext511 = zext i1 %lnot510 to i32
  %cmp512 = icmp eq i32 %267, %lnot.ext511
  br i1 %cmp512, label %if.then514, label %if.else523

if.then514:                                       ; preds = %lor.end508
  %271 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %intuit515 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %271, i32 0, i32 12
  %272 = load i8, i8* %intuit515, align 8
  %tobool516 = trunc i8 %272 to i1
  br i1 %tobool516, label %if.then521, label %lor.lhs.false518

lor.lhs.false518:                                 ; preds = %if.then514
  %273 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %call519 = call i32 @S_regtry(%struct.regmatch_info* %273, i8** %s.addr)
  %tobool520 = icmp ne i32 %call519, 0
  br i1 %tobool520, label %if.then521, label %if.end522

if.then521:                                       ; preds = %lor.lhs.false518, %if.then514
  br label %got_it

if.end522:                                        ; preds = %lor.lhs.false518
  br label %if.end524

if.else523:                                       ; preds = %lor.end508
  br label %if.end524

if.end524:                                        ; preds = %if.else523, %if.end522
  br label %sw.epilog3988

sw.bb525:                                         ; preds = %entry
  %274 = load %struct.regnode*, %struct.regnode** %c.addr, align 8
  %flags526 = getelementptr inbounds %struct.regnode, %struct.regnode* %274, i32 0, i32 0
  %275 = load i8, i8* %flags526, align 2
  %conv527 = zext i8 %275 to i32
  %cmp528 = icmp ne i32 %conv527, 0
  br i1 %cmp528, label %if.then530, label %if.end534

if.then530:                                       ; preds = %sw.bb525
  %276 = load i8, i8* @PL_in_utf8_CTYPE_locale, align 1
  %tobool531 = trunc i8 %276 to i1
  br i1 %tobool531, label %if.end533, label %if.then532

if.then532:                                       ; preds = %if.then530
  call void (i32, i8*, ...) @Perl_ck_warner(i32 65, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.2, i64 0, i64 0))
  br label %if.end533

if.end533:                                        ; preds = %if.then532, %if.then530
  br label %do_nboundu

if.end534:                                        ; preds = %sw.bb525
  %277 = load i8, i8* %utf8_target, align 1
  %tobool535 = trunc i8 %277 to i1
  br i1 %tobool535, label %if.then536, label %if.else691

if.then536:                                       ; preds = %if.end534
  %278 = load i8*, i8** %s.addr, align 8
  %279 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg537 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %279, i32 0, i32 1
  %280 = load i8*, i8** %strbeg537, align 8
  %cmp538 = icmp eq i8* %278, %280
  br i1 %cmp538, label %if.then540, label %if.else541

if.then540:                                       ; preds = %if.then536
  store i32 10, i32* %tmp, align 4
  br label %if.end554

if.else541:                                       ; preds = %if.then536
  %281 = load i8*, i8** %s.addr, align 8
  %282 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg543 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %282, i32 0, i32 1
  %283 = load i8*, i8** %strbeg543, align 8
  %call544 = call i8* @S_reghop3(i8* %281, i64 -1, i8* %283)
  store i8* %call544, i8** %r542, align 8
  %284 = load i8*, i8** %r542, align 8
  %285 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend545 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %285, i32 0, i32 2
  %286 = load i8*, i8** %strend545, align 8
  %287 = load i8*, i8** %r542, align 8
  %sub.ptr.lhs.cast546 = ptrtoint i8* %286 to i64
  %sub.ptr.rhs.cast547 = ptrtoint i8* %287 to i64
  %sub.ptr.sub548 = sub i64 %sub.ptr.lhs.cast546, %sub.ptr.rhs.cast547
  %call549 = call zeroext i1 @Perl_ckwarn(i32 44)
  %288 = zext i1 %call549 to i64
  %cond551 = select i1 %call549, i32 0, i32 1
  %call552 = call i64 @Perl_utf8n_to_uvchr(i8* %284, i64 %sub.ptr.sub548, i64* null, i32 %cond551)
  %conv553 = trunc i64 %call552 to i32
  store i32 %conv553, i32* %tmp, align 4
  br label %if.end554

if.end554:                                        ; preds = %if.else541, %if.then540
  %289 = load i32, i32* %tmp, align 4
  %cmp555 = icmp slt i32 %289, 256
  br i1 %cmp555, label %cond.true557, label %cond.false574

cond.true557:                                     ; preds = %if.end554
  %290 = load i32, i32* %tmp, align 4
  %and558 = and i32 %290, -128
  %cmp559 = icmp eq i32 %and558, 0
  br i1 %cmp559, label %land.rhs561, label %land.end572

land.rhs561:                                      ; preds = %cond.true557
  %call562 = call i16** @__ctype_b_loc() #6
  %291 = load i16*, i16** %call562, align 8
  %292 = load i32, i32* %tmp, align 4
  %idxprom563 = sext i32 %292 to i64
  %arrayidx564 = getelementptr inbounds i16, i16* %291, i64 %idxprom563
  %293 = load i16, i16* %arrayidx564, align 2
  %conv565 = zext i16 %293 to i32
  %and566 = and i32 %conv565, 8
  %tobool567 = icmp ne i32 %and566, 0
  br i1 %tobool567, label %lor.end571, label %lor.rhs568

lor.rhs568:                                       ; preds = %land.rhs561
  %294 = load i32, i32* %tmp, align 4
  %cmp569 = icmp eq i32 %294, 95
  br label %lor.end571

lor.end571:                                       ; preds = %lor.rhs568, %land.rhs561
  %295 = phi i1 [ true, %land.rhs561 ], [ %cmp569, %lor.rhs568 ]
  br label %land.end572

land.end572:                                      ; preds = %lor.end571, %cond.true557
  %296 = phi i1 [ false, %cond.true557 ], [ %295, %lor.end571 ]
  %land.ext573 = zext i1 %296 to i32
  br label %cond.end578

cond.false574:                                    ; preds = %if.end554
  %297 = load i32, i32* %tmp, align 4
  %conv575 = sext i32 %297 to i64
  %call576 = call zeroext i1 @Perl__is_uni_FOO(i8 zeroext 0, i64 %conv575)
  %conv577 = zext i1 %call576 to i32
  br label %cond.end578

cond.end578:                                      ; preds = %cond.false574, %land.end572
  %cond579 = phi i32 [ %land.ext573, %land.end572 ], [ %conv577, %cond.false574 ]
  store i32 %cond579, i32* %tmp, align 4
  br label %do.body580

do.body580:                                       ; preds = %cond.end578
  %298 = load %struct.sv*, %struct.sv** getelementptr inbounds ([10 x %struct.sv*], [10 x %struct.sv*]* @PL_utf8_swash_ptrs, i64 0, i64 0), align 16
  %tobool581 = icmp ne %struct.sv* %298, null
  br i1 %tobool581, label %if.end585, label %if.then582

if.then582:                                       ; preds = %do.body580
  store i8 4, i8* %flags583, align 1
  %299 = load %struct.sv*, %struct.sv** getelementptr inbounds ([16 x %struct.sv*], [16 x %struct.sv*]* @PL_XPosix_ptrs, i64 0, i64 0), align 16
  %call584 = call %struct.sv* @Perl__core_swash_init(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.4, i64 0, i64 0), %struct.sv* @PL_sv_undef, i32 1, i32 0, %struct.sv* %299, i8* %flags583)
  store %struct.sv* %call584, %struct.sv** getelementptr inbounds ([10 x %struct.sv*], [10 x %struct.sv*]* @PL_utf8_swash_ptrs, i64 0, i64 0), align 16
  br label %if.end585

if.end585:                                        ; preds = %if.then582, %do.body580
  br label %do.end586

do.end586:                                        ; preds = %if.end585
  br label %do.body587

do.body587:                                       ; preds = %do.end586
  br label %while.cond588

while.cond588:                                    ; preds = %if.end683, %do.body587
  %300 = load i8*, i8** %s.addr, align 8
  %301 = load i8*, i8** %strend.addr, align 8
  %cmp589 = icmp ult i8* %300, %301
  br i1 %cmp589, label %while.body591, label %while.end689

while.body591:                                    ; preds = %while.cond588
  %302 = load i32, i32* %tmp, align 4
  %303 = load i8*, i8** %s.addr, align 8
  %304 = load i8, i8* %303, align 1
  %conv592 = zext i8 %304 to i64
  %cmp593 = icmp ult i64 %conv592, 128
  br i1 %cmp593, label %cond.true595, label %cond.false615

cond.true595:                                     ; preds = %while.body591
  %305 = load i8*, i8** %s.addr, align 8
  %306 = load i8, i8* %305, align 1
  %conv596 = zext i8 %306 to i32
  %and597 = and i32 %conv596, -128
  %cmp598 = icmp eq i32 %and597, 0
  br i1 %cmp598, label %land.rhs600, label %land.end613

land.rhs600:                                      ; preds = %cond.true595
  %call601 = call i16** @__ctype_b_loc() #6
  %307 = load i16*, i16** %call601, align 8
  %308 = load i8*, i8** %s.addr, align 8
  %309 = load i8, i8* %308, align 1
  %conv602 = zext i8 %309 to i32
  %idxprom603 = sext i32 %conv602 to i64
  %arrayidx604 = getelementptr inbounds i16, i16* %307, i64 %idxprom603
  %310 = load i16, i16* %arrayidx604, align 2
  %conv605 = zext i16 %310 to i32
  %and606 = and i32 %conv605, 8
  %tobool607 = icmp ne i32 %and606, 0
  br i1 %tobool607, label %lor.end612, label %lor.rhs608

lor.rhs608:                                       ; preds = %land.rhs600
  %311 = load i8*, i8** %s.addr, align 8
  %312 = load i8, i8* %311, align 1
  %conv609 = zext i8 %312 to i32
  %cmp610 = icmp eq i32 %conv609, 95
  br label %lor.end612

lor.end612:                                       ; preds = %lor.rhs608, %land.rhs600
  %313 = phi i1 [ true, %land.rhs600 ], [ %cmp610, %lor.rhs608 ]
  br label %land.end613

land.end613:                                      ; preds = %lor.end612, %cond.true595
  %314 = phi i1 [ false, %cond.true595 ], [ %313, %lor.end612 ]
  %land.ext614 = zext i1 %314 to i32
  br label %cond.end663

cond.false615:                                    ; preds = %while.body591
  %315 = load i8*, i8** %s.addr, align 8
  %316 = load i8, i8* %315, align 1
  %conv616 = zext i8 %316 to i32
  %and617 = and i32 %conv616, 254
  %cmp618 = icmp eq i32 %and617, 194
  br i1 %cmp618, label %cond.true620, label %cond.false658

cond.true620:                                     ; preds = %cond.false615
  %317 = load i8*, i8** %s.addr, align 8
  %318 = load i8, i8* %317, align 1
  %conv621 = zext i8 %318 to i32
  %and622 = and i32 %conv621, 31
  %shl623 = shl i32 %and622, 6
  %319 = load i8*, i8** %s.addr, align 8
  %add.ptr624 = getelementptr inbounds i8, i8* %319, i64 1
  %320 = load i8, i8* %add.ptr624, align 1
  %conv625 = zext i8 %320 to i32
  %and626 = and i32 %conv625, 63
  %or627 = or i32 %shl623, %and626
  %and628 = and i32 %or627, -128
  %cmp629 = icmp eq i32 %and628, 0
  br i1 %cmp629, label %land.rhs631, label %land.end656

land.rhs631:                                      ; preds = %cond.true620
  %call632 = call i16** @__ctype_b_loc() #6
  %321 = load i16*, i16** %call632, align 8
  %322 = load i8*, i8** %s.addr, align 8
  %323 = load i8, i8* %322, align 1
  %conv633 = zext i8 %323 to i32
  %and634 = and i32 %conv633, 31
  %shl635 = shl i32 %and634, 6
  %324 = load i8*, i8** %s.addr, align 8
  %add.ptr636 = getelementptr inbounds i8, i8* %324, i64 1
  %325 = load i8, i8* %add.ptr636, align 1
  %conv637 = zext i8 %325 to i32
  %and638 = and i32 %conv637, 63
  %or639 = or i32 %shl635, %and638
  %idxprom640 = sext i32 %or639 to i64
  %arrayidx641 = getelementptr inbounds i16, i16* %321, i64 %idxprom640
  %326 = load i16, i16* %arrayidx641, align 2
  %conv642 = zext i16 %326 to i32
  %and643 = and i32 %conv642, 8
  %tobool644 = icmp ne i32 %and643, 0
  br i1 %tobool644, label %lor.end655, label %lor.rhs645

lor.rhs645:                                       ; preds = %land.rhs631
  %327 = load i8*, i8** %s.addr, align 8
  %328 = load i8, i8* %327, align 1
  %conv646 = zext i8 %328 to i32
  %and647 = and i32 %conv646, 31
  %shl648 = shl i32 %and647, 6
  %329 = load i8*, i8** %s.addr, align 8
  %add.ptr649 = getelementptr inbounds i8, i8* %329, i64 1
  %330 = load i8, i8* %add.ptr649, align 1
  %conv650 = zext i8 %330 to i32
  %and651 = and i32 %conv650, 63
  %or652 = or i32 %shl648, %and651
  %cmp653 = icmp eq i32 %or652, 95
  br label %lor.end655

lor.end655:                                       ; preds = %lor.rhs645, %land.rhs631
  %331 = phi i1 [ true, %land.rhs631 ], [ %cmp653, %lor.rhs645 ]
  br label %land.end656

land.end656:                                      ; preds = %lor.end655, %cond.true620
  %332 = phi i1 [ false, %cond.true620 ], [ %331, %lor.end655 ]
  %land.ext657 = zext i1 %332 to i32
  br label %cond.end661

cond.false658:                                    ; preds = %cond.false615
  %333 = load i8*, i8** %s.addr, align 8
  %call659 = call zeroext i1 @Perl__is_utf8_FOO(i8 zeroext 0, i8* %333)
  %conv660 = zext i1 %call659 to i32
  br label %cond.end661

cond.end661:                                      ; preds = %cond.false658, %land.end656
  %cond662 = phi i32 [ %land.ext657, %land.end656 ], [ %conv660, %cond.false658 ]
  br label %cond.end663

cond.end663:                                      ; preds = %cond.end661, %land.end613
  %cond664 = phi i32 [ %land.ext614, %land.end613 ], [ %cond662, %cond.end661 ]
  %tobool665 = icmp ne i32 %cond664, 0
  %lnot666 = xor i1 %tobool665, true
  %lnot.ext667 = zext i1 %lnot666 to i32
  %cmp668 = icmp eq i32 %302, %lnot.ext667
  br i1 %cmp668, label %if.then670, label %if.else674

if.then670:                                       ; preds = %cond.end663
  %334 = load i32, i32* %tmp, align 4
  %tobool671 = icmp ne i32 %334, 0
  %lnot672 = xor i1 %tobool671, true
  %lnot.ext673 = zext i1 %lnot672 to i32
  store i32 %lnot.ext673, i32* %tmp, align 4
  br label %if.end683

if.else674:                                       ; preds = %cond.end663
  %335 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %intuit675 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %335, i32 0, i32 12
  %336 = load i8, i8* %intuit675, align 8
  %tobool676 = trunc i8 %336 to i1
  br i1 %tobool676, label %if.then681, label %lor.lhs.false678

lor.lhs.false678:                                 ; preds = %if.else674
  %337 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %call679 = call i32 @S_regtry(%struct.regmatch_info* %337, i8** %s.addr)
  %tobool680 = icmp ne i32 %call679, 0
  br i1 %tobool680, label %if.then681, label %if.end682

if.then681:                                       ; preds = %lor.lhs.false678, %if.else674
  br label %got_it

if.end682:                                        ; preds = %lor.lhs.false678
  br label %if.end683

if.end683:                                        ; preds = %if.end682, %if.then670
  %338 = load i8*, i8** %s.addr, align 8
  %339 = load i8, i8* %338, align 1
  %idxprom684 = zext i8 %339 to i64
  %arrayidx685 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom684
  %340 = load i8, i8* %arrayidx685, align 1
  %conv686 = zext i8 %340 to i32
  %341 = load i8*, i8** %s.addr, align 8
  %idx.ext687 = sext i32 %conv686 to i64
  %add.ptr688 = getelementptr inbounds i8, i8* %341, i64 %idx.ext687
  store i8* %add.ptr688, i8** %s.addr, align 8
  br label %while.cond588

while.end689:                                     ; preds = %while.cond588
  br label %do.end690

do.end690:                                        ; preds = %while.end689
  br label %if.end762

if.else691:                                       ; preds = %if.end534
  %342 = load i8*, i8** %s.addr, align 8
  %343 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg692 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %343, i32 0, i32 1
  %344 = load i8*, i8** %strbeg692, align 8
  %cmp693 = icmp ne i8* %342, %344
  br i1 %cmp693, label %cond.true695, label %cond.false698

cond.true695:                                     ; preds = %if.else691
  %345 = load i8*, i8** %s.addr, align 8
  %add.ptr696 = getelementptr inbounds i8, i8* %345, i64 -1
  %346 = load i8, i8* %add.ptr696, align 1
  %conv697 = zext i8 %346 to i32
  br label %cond.end699

cond.false698:                                    ; preds = %if.else691
  br label %cond.end699

cond.end699:                                      ; preds = %cond.false698, %cond.true695
  %cond700 = phi i32 [ %conv697, %cond.true695 ], [ 10, %cond.false698 ]
  store i32 %cond700, i32* %tmp, align 4
  %347 = load i32, i32* %tmp, align 4
  %and701 = and i32 %347, -128
  %cmp702 = icmp eq i32 %and701, 0
  br i1 %cmp702, label %land.rhs704, label %land.end715

land.rhs704:                                      ; preds = %cond.end699
  %call705 = call i16** @__ctype_b_loc() #6
  %348 = load i16*, i16** %call705, align 8
  %349 = load i32, i32* %tmp, align 4
  %idxprom706 = sext i32 %349 to i64
  %arrayidx707 = getelementptr inbounds i16, i16* %348, i64 %idxprom706
  %350 = load i16, i16* %arrayidx707, align 2
  %conv708 = zext i16 %350 to i32
  %and709 = and i32 %conv708, 8
  %tobool710 = icmp ne i32 %and709, 0
  br i1 %tobool710, label %lor.end714, label %lor.rhs711

lor.rhs711:                                       ; preds = %land.rhs704
  %351 = load i32, i32* %tmp, align 4
  %cmp712 = icmp eq i32 %351, 95
  br label %lor.end714

lor.end714:                                       ; preds = %lor.rhs711, %land.rhs704
  %352 = phi i1 [ true, %land.rhs704 ], [ %cmp712, %lor.rhs711 ]
  br label %land.end715

land.end715:                                      ; preds = %lor.end714, %cond.end699
  %353 = phi i1 [ false, %cond.end699 ], [ %352, %lor.end714 ]
  %land.ext716 = zext i1 %353 to i32
  store i32 %land.ext716, i32* %tmp, align 4
  br label %do.body717

do.body717:                                       ; preds = %land.end715
  br label %while.cond718

while.cond718:                                    ; preds = %if.end758, %do.body717
  %354 = load i8*, i8** %s.addr, align 8
  %355 = load i8*, i8** %strend.addr, align 8
  %cmp719 = icmp ult i8* %354, %355
  br i1 %cmp719, label %while.body721, label %while.end760

while.body721:                                    ; preds = %while.cond718
  %356 = load i32, i32* %tmp, align 4
  %357 = load i8*, i8** %s.addr, align 8
  %358 = load i8, i8* %357, align 1
  %conv722 = zext i8 %358 to i32
  %and723 = and i32 %conv722, -128
  %cmp724 = icmp eq i32 %and723, 0
  br i1 %cmp724, label %land.rhs726, label %land.end739

land.rhs726:                                      ; preds = %while.body721
  %call727 = call i16** @__ctype_b_loc() #6
  %359 = load i16*, i16** %call727, align 8
  %360 = load i8*, i8** %s.addr, align 8
  %361 = load i8, i8* %360, align 1
  %conv728 = zext i8 %361 to i32
  %idxprom729 = sext i32 %conv728 to i64
  %arrayidx730 = getelementptr inbounds i16, i16* %359, i64 %idxprom729
  %362 = load i16, i16* %arrayidx730, align 2
  %conv731 = zext i16 %362 to i32
  %and732 = and i32 %conv731, 8
  %tobool733 = icmp ne i32 %and732, 0
  br i1 %tobool733, label %lor.end738, label %lor.rhs734

lor.rhs734:                                       ; preds = %land.rhs726
  %363 = load i8*, i8** %s.addr, align 8
  %364 = load i8, i8* %363, align 1
  %conv735 = zext i8 %364 to i32
  %cmp736 = icmp eq i32 %conv735, 95
  br label %lor.end738

lor.end738:                                       ; preds = %lor.rhs734, %land.rhs726
  %365 = phi i1 [ true, %land.rhs726 ], [ %cmp736, %lor.rhs734 ]
  br label %land.end739

land.end739:                                      ; preds = %lor.end738, %while.body721
  %366 = phi i1 [ false, %while.body721 ], [ %365, %lor.end738 ]
  %lnot741 = xor i1 %366, true
  %lnot.ext742 = zext i1 %lnot741 to i32
  %cmp743 = icmp eq i32 %356, %lnot.ext742
  br i1 %cmp743, label %if.then745, label %if.else749

if.then745:                                       ; preds = %land.end739
  %367 = load i32, i32* %tmp, align 4
  %tobool746 = icmp ne i32 %367, 0
  %lnot747 = xor i1 %tobool746, true
  %lnot.ext748 = zext i1 %lnot747 to i32
  store i32 %lnot.ext748, i32* %tmp, align 4
  br label %if.end758

if.else749:                                       ; preds = %land.end739
  %368 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %intuit750 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %368, i32 0, i32 12
  %369 = load i8, i8* %intuit750, align 8
  %tobool751 = trunc i8 %369 to i1
  br i1 %tobool751, label %if.then756, label %lor.lhs.false753

lor.lhs.false753:                                 ; preds = %if.else749
  %370 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %call754 = call i32 @S_regtry(%struct.regmatch_info* %370, i8** %s.addr)
  %tobool755 = icmp ne i32 %call754, 0
  br i1 %tobool755, label %if.then756, label %if.end757

if.then756:                                       ; preds = %lor.lhs.false753, %if.else749
  br label %got_it

if.end757:                                        ; preds = %lor.lhs.false753
  br label %if.end758

if.end758:                                        ; preds = %if.end757, %if.then745
  %371 = load i8*, i8** %s.addr, align 8
  %incdec.ptr759 = getelementptr inbounds i8, i8* %371, i32 1
  store i8* %incdec.ptr759, i8** %s.addr, align 8
  br label %while.cond718

while.end760:                                     ; preds = %while.cond718
  br label %do.end761

do.end761:                                        ; preds = %while.end760
  br label %if.end762

if.end762:                                        ; preds = %do.end761, %do.end690
  %372 = load i32, i32* %tmp, align 4
  %call763 = call i16** @__ctype_b_loc() #6
  %373 = load i16*, i16** %call763, align 8
  %arrayidx764 = getelementptr inbounds i16, i16* %373, i64 10
  %374 = load i16, i16* %arrayidx764, align 2
  %conv765 = zext i16 %374 to i32
  %and766 = and i32 %conv765, 8
  %tobool767 = icmp ne i32 %and766, 0
  br i1 %tobool767, label %lor.end769, label %lor.rhs768

lor.rhs768:                                       ; preds = %if.end762
  br label %lor.end769

lor.end769:                                       ; preds = %lor.rhs768, %if.end762
  %375 = phi i1 [ true, %if.end762 ], [ false, %lor.rhs768 ]
  %lnot771 = xor i1 %375, true
  %lnot.ext772 = zext i1 %lnot771 to i32
  %cmp773 = icmp eq i32 %372, %lnot.ext772
  br i1 %cmp773, label %if.then775, label %if.else776

if.then775:                                       ; preds = %lor.end769
  br label %if.end785

if.else776:                                       ; preds = %lor.end769
  %376 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %intuit777 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %376, i32 0, i32 12
  %377 = load i8, i8* %intuit777, align 8
  %tobool778 = trunc i8 %377 to i1
  br i1 %tobool778, label %if.then783, label %lor.lhs.false780

lor.lhs.false780:                                 ; preds = %if.else776
  %378 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %call781 = call i32 @S_regtry(%struct.regmatch_info* %378, i8** %s.addr)
  %tobool782 = icmp ne i32 %call781, 0
  br i1 %tobool782, label %if.then783, label %if.end784

if.then783:                                       ; preds = %lor.lhs.false780, %if.else776
  br label %got_it

if.end784:                                        ; preds = %lor.lhs.false780
  br label %if.end785

if.end785:                                        ; preds = %if.end784, %if.then775
  br label %sw.epilog3988

sw.bb786:                                         ; preds = %entry
  %379 = load i8, i8* %utf8_target, align 1
  %tobool787 = trunc i8 %379 to i1
  br i1 %tobool787, label %if.then788, label %if.else915

if.then788:                                       ; preds = %sw.bb786
  %380 = load i8*, i8** %s.addr, align 8
  %381 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg789 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %381, i32 0, i32 1
  %382 = load i8*, i8** %strbeg789, align 8
  %cmp790 = icmp eq i8* %380, %382
  br i1 %cmp790, label %if.then792, label %if.else793

if.then792:                                       ; preds = %if.then788
  store i32 10, i32* %tmp, align 4
  br label %if.end806

if.else793:                                       ; preds = %if.then788
  %383 = load i8*, i8** %s.addr, align 8
  %384 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg795 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %384, i32 0, i32 1
  %385 = load i8*, i8** %strbeg795, align 8
  %call796 = call i8* @S_reghop3(i8* %383, i64 -1, i8* %385)
  store i8* %call796, i8** %r794, align 8
  %386 = load i8*, i8** %r794, align 8
  %387 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend797 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %387, i32 0, i32 2
  %388 = load i8*, i8** %strend797, align 8
  %389 = load i8*, i8** %r794, align 8
  %sub.ptr.lhs.cast798 = ptrtoint i8* %388 to i64
  %sub.ptr.rhs.cast799 = ptrtoint i8* %389 to i64
  %sub.ptr.sub800 = sub i64 %sub.ptr.lhs.cast798, %sub.ptr.rhs.cast799
  %call801 = call zeroext i1 @Perl_ckwarn(i32 44)
  %390 = zext i1 %call801 to i64
  %cond803 = select i1 %call801, i32 0, i32 1
  %call804 = call i64 @Perl_utf8n_to_uvchr(i8* %386, i64 %sub.ptr.sub800, i64* null, i32 %cond803)
  %conv805 = trunc i64 %call804 to i32
  store i32 %conv805, i32* %tmp, align 4
  br label %if.end806

if.end806:                                        ; preds = %if.else793, %if.then792
  %391 = load i32, i32* %tmp, align 4
  %cmp807 = icmp slt i32 %391, 256
  br i1 %cmp807, label %cond.true809, label %cond.false822

cond.true809:                                     ; preds = %if.end806
  %392 = load i32, i32* %tmp, align 4
  %conv810 = sext i32 %392 to i64
  %and811 = and i64 %conv810, -256
  %tobool812 = icmp ne i64 %and811, 0
  br i1 %tobool812, label %land.end819, label %land.rhs813

land.rhs813:                                      ; preds = %cond.true809
  %393 = load i32, i32* %tmp, align 4
  %conv814 = trunc i32 %393 to i8
  %idxprom815 = zext i8 %conv814 to i64
  %arrayidx816 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom815
  %394 = load i32, i32* %arrayidx816, align 4
  %and817 = and i32 %394, 1
  %tobool818 = icmp ne i32 %and817, 0
  br label %land.end819

land.end819:                                      ; preds = %land.rhs813, %cond.true809
  %395 = phi i1 [ false, %cond.true809 ], [ %tobool818, %land.rhs813 ]
  %396 = zext i1 %395 to i64
  %cond821 = select i1 %395, i32 1, i32 0
  br label %cond.end826

cond.false822:                                    ; preds = %if.end806
  %397 = load i32, i32* %tmp, align 4
  %conv823 = sext i32 %397 to i64
  %call824 = call zeroext i1 @Perl__is_uni_FOO(i8 zeroext 0, i64 %conv823)
  %conv825 = zext i1 %call824 to i32
  br label %cond.end826

cond.end826:                                      ; preds = %cond.false822, %land.end819
  %cond827 = phi i32 [ %cond821, %land.end819 ], [ %conv825, %cond.false822 ]
  store i32 %cond827, i32* %tmp, align 4
  br label %do.body828

do.body828:                                       ; preds = %cond.end826
  %398 = load %struct.sv*, %struct.sv** getelementptr inbounds ([10 x %struct.sv*], [10 x %struct.sv*]* @PL_utf8_swash_ptrs, i64 0, i64 0), align 16
  %tobool829 = icmp ne %struct.sv* %398, null
  br i1 %tobool829, label %if.end833, label %if.then830

if.then830:                                       ; preds = %do.body828
  store i8 4, i8* %flags831, align 1
  %399 = load %struct.sv*, %struct.sv** getelementptr inbounds ([16 x %struct.sv*], [16 x %struct.sv*]* @PL_XPosix_ptrs, i64 0, i64 0), align 16
  %call832 = call %struct.sv* @Perl__core_swash_init(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.4, i64 0, i64 0), %struct.sv* @PL_sv_undef, i32 1, i32 0, %struct.sv* %399, i8* %flags831)
  store %struct.sv* %call832, %struct.sv** getelementptr inbounds ([10 x %struct.sv*], [10 x %struct.sv*]* @PL_utf8_swash_ptrs, i64 0, i64 0), align 16
  br label %if.end833

if.end833:                                        ; preds = %if.then830, %do.body828
  br label %do.end834

do.end834:                                        ; preds = %if.end833
  br label %do.body835

do.body835:                                       ; preds = %do.end834
  br label %while.cond836

while.cond836:                                    ; preds = %if.end907, %do.body835
  %400 = load i8*, i8** %s.addr, align 8
  %401 = load i8*, i8** %strend.addr, align 8
  %cmp837 = icmp ult i8* %400, %401
  br i1 %cmp837, label %while.body839, label %while.end913

while.body839:                                    ; preds = %while.cond836
  %402 = load i32, i32* %tmp, align 4
  %403 = load i8*, i8** %s.addr, align 8
  %404 = load i8, i8* %403, align 1
  %conv840 = zext i8 %404 to i64
  %cmp841 = icmp ult i64 %conv840, 128
  br i1 %cmp841, label %cond.true843, label %cond.false850

cond.true843:                                     ; preds = %while.body839
  %405 = load i8*, i8** %s.addr, align 8
  %406 = load i8, i8* %405, align 1
  %idxprom844 = zext i8 %406 to i64
  %arrayidx845 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom844
  %407 = load i32, i32* %arrayidx845, align 4
  %and846 = and i32 %407, 1
  %tobool847 = icmp ne i32 %and846, 0
  %408 = zext i1 %tobool847 to i64
  %cond849 = select i1 %tobool847, i32 1, i32 0
  br label %cond.end887

cond.false850:                                    ; preds = %while.body839
  %409 = load i8*, i8** %s.addr, align 8
  %410 = load i8, i8* %409, align 1
  %conv851 = zext i8 %410 to i32
  %and852 = and i32 %conv851, 254
  %cmp853 = icmp eq i32 %and852, 194
  br i1 %cmp853, label %cond.true855, label %cond.false882

cond.true855:                                     ; preds = %cond.false850
  %411 = load i8*, i8** %s.addr, align 8
  %412 = load i8, i8* %411, align 1
  %conv856 = zext i8 %412 to i32
  %and857 = and i32 %conv856, 31
  %shl858 = shl i32 %and857, 6
  %413 = load i8*, i8** %s.addr, align 8
  %add.ptr859 = getelementptr inbounds i8, i8* %413, i64 1
  %414 = load i8, i8* %add.ptr859, align 1
  %conv860 = zext i8 %414 to i32
  %and861 = and i32 %conv860, 63
  %or862 = or i32 %shl858, %and861
  %conv863 = sext i32 %or862 to i64
  %and864 = and i64 %conv863, -256
  %tobool865 = icmp ne i64 %and864, 0
  br i1 %tobool865, label %land.end879, label %land.rhs866

land.rhs866:                                      ; preds = %cond.true855
  %415 = load i8*, i8** %s.addr, align 8
  %416 = load i8, i8* %415, align 1
  %conv867 = zext i8 %416 to i32
  %and868 = and i32 %conv867, 31
  %shl869 = shl i32 %and868, 6
  %417 = load i8*, i8** %s.addr, align 8
  %add.ptr870 = getelementptr inbounds i8, i8* %417, i64 1
  %418 = load i8, i8* %add.ptr870, align 1
  %conv871 = zext i8 %418 to i32
  %and872 = and i32 %conv871, 63
  %or873 = or i32 %shl869, %and872
  %conv874 = trunc i32 %or873 to i8
  %idxprom875 = zext i8 %conv874 to i64
  %arrayidx876 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom875
  %419 = load i32, i32* %arrayidx876, align 4
  %and877 = and i32 %419, 1
  %tobool878 = icmp ne i32 %and877, 0
  br label %land.end879

land.end879:                                      ; preds = %land.rhs866, %cond.true855
  %420 = phi i1 [ false, %cond.true855 ], [ %tobool878, %land.rhs866 ]
  %421 = zext i1 %420 to i64
  %cond881 = select i1 %420, i32 1, i32 0
  br label %cond.end885

cond.false882:                                    ; preds = %cond.false850
  %422 = load i8*, i8** %s.addr, align 8
  %call883 = call zeroext i1 @Perl__is_utf8_FOO(i8 zeroext 0, i8* %422)
  %conv884 = zext i1 %call883 to i32
  br label %cond.end885

cond.end885:                                      ; preds = %cond.false882, %land.end879
  %cond886 = phi i32 [ %cond881, %land.end879 ], [ %conv884, %cond.false882 ]
  br label %cond.end887

cond.end887:                                      ; preds = %cond.end885, %cond.true843
  %cond888 = phi i32 [ %cond849, %cond.true843 ], [ %cond886, %cond.end885 ]
  %tobool889 = icmp ne i32 %cond888, 0
  %lnot890 = xor i1 %tobool889, true
  %lnot.ext891 = zext i1 %lnot890 to i32
  %cmp892 = icmp eq i32 %402, %lnot.ext891
  br i1 %cmp892, label %if.then894, label %if.else906

if.then894:                                       ; preds = %cond.end887
  %423 = load i32, i32* %tmp, align 4
  %tobool895 = icmp ne i32 %423, 0
  %lnot896 = xor i1 %tobool895, true
  %lnot.ext897 = zext i1 %lnot896 to i32
  store i32 %lnot.ext897, i32* %tmp, align 4
  %424 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %intuit898 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %424, i32 0, i32 12
  %425 = load i8, i8* %intuit898, align 8
  %tobool899 = trunc i8 %425 to i1
  br i1 %tobool899, label %if.then904, label %lor.lhs.false901

lor.lhs.false901:                                 ; preds = %if.then894
  %426 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %call902 = call i32 @S_regtry(%struct.regmatch_info* %426, i8** %s.addr)
  %tobool903 = icmp ne i32 %call902, 0
  br i1 %tobool903, label %if.then904, label %if.end905

if.then904:                                       ; preds = %lor.lhs.false901, %if.then894
  br label %got_it

if.end905:                                        ; preds = %lor.lhs.false901
  br label %if.end907

if.else906:                                       ; preds = %cond.end887
  br label %if.end907

if.end907:                                        ; preds = %if.else906, %if.end905
  %427 = load i8*, i8** %s.addr, align 8
  %428 = load i8, i8* %427, align 1
  %idxprom908 = zext i8 %428 to i64
  %arrayidx909 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom908
  %429 = load i8, i8* %arrayidx909, align 1
  %conv910 = zext i8 %429 to i32
  %430 = load i8*, i8** %s.addr, align 8
  %idx.ext911 = sext i32 %conv910 to i64
  %add.ptr912 = getelementptr inbounds i8, i8* %430, i64 %idx.ext911
  store i8* %add.ptr912, i8** %s.addr, align 8
  br label %while.cond836

while.end913:                                     ; preds = %while.cond836
  br label %do.end914

do.end914:                                        ; preds = %while.end913
  br label %if.end969

if.else915:                                       ; preds = %sw.bb786
  %431 = load i8*, i8** %s.addr, align 8
  %432 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg916 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %432, i32 0, i32 1
  %433 = load i8*, i8** %strbeg916, align 8
  %cmp917 = icmp ne i8* %431, %433
  br i1 %cmp917, label %cond.true919, label %cond.false922

cond.true919:                                     ; preds = %if.else915
  %434 = load i8*, i8** %s.addr, align 8
  %add.ptr920 = getelementptr inbounds i8, i8* %434, i64 -1
  %435 = load i8, i8* %add.ptr920, align 1
  %conv921 = zext i8 %435 to i32
  br label %cond.end923

cond.false922:                                    ; preds = %if.else915
  br label %cond.end923

cond.end923:                                      ; preds = %cond.false922, %cond.true919
  %cond924 = phi i32 [ %conv921, %cond.true919 ], [ 10, %cond.false922 ]
  store i32 %cond924, i32* %tmp, align 4
  %436 = load i32, i32* %tmp, align 4
  %conv925 = sext i32 %436 to i64
  %and926 = and i64 %conv925, -256
  %tobool927 = icmp ne i64 %and926, 0
  br i1 %tobool927, label %land.end935, label %land.rhs928

land.rhs928:                                      ; preds = %cond.end923
  %437 = load i32, i32* %tmp, align 4
  %conv929 = trunc i32 %437 to i8
  %idxprom930 = zext i8 %conv929 to i64
  %arrayidx931 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom930
  %438 = load i32, i32* %arrayidx931, align 4
  %and932 = and i32 %438, 16385
  %cmp933 = icmp eq i32 %and932, 16385
  br label %land.end935

land.end935:                                      ; preds = %land.rhs928, %cond.end923
  %439 = phi i1 [ false, %cond.end923 ], [ %cmp933, %land.rhs928 ]
  %land.ext936 = zext i1 %439 to i32
  store i32 %land.ext936, i32* %tmp, align 4
  br label %do.body937

do.body937:                                       ; preds = %land.end935
  br label %while.cond938

while.cond938:                                    ; preds = %if.end965, %do.body937
  %440 = load i8*, i8** %s.addr, align 8
  %441 = load i8*, i8** %strend.addr, align 8
  %cmp939 = icmp ult i8* %440, %441
  br i1 %cmp939, label %while.body941, label %while.end967

while.body941:                                    ; preds = %while.cond938
  %442 = load i32, i32* %tmp, align 4
  %443 = load i8*, i8** %s.addr, align 8
  %444 = load i8, i8* %443, align 1
  %idxprom942 = zext i8 %444 to i64
  %arrayidx943 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom942
  %445 = load i32, i32* %arrayidx943, align 4
  %and944 = and i32 %445, 16385
  %cmp945 = icmp eq i32 %and944, 16385
  %lnot948 = xor i1 %cmp945, true
  %lnot.ext949 = zext i1 %lnot948 to i32
  %cmp950 = icmp eq i32 %442, %lnot.ext949
  br i1 %cmp950, label %if.then952, label %if.else964

if.then952:                                       ; preds = %while.body941
  %446 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %intuit953 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %446, i32 0, i32 12
  %447 = load i8, i8* %intuit953, align 8
  %tobool954 = trunc i8 %447 to i1
  br i1 %tobool954, label %if.then959, label %lor.lhs.false956

lor.lhs.false956:                                 ; preds = %if.then952
  %448 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %call957 = call i32 @S_regtry(%struct.regmatch_info* %448, i8** %s.addr)
  %tobool958 = icmp ne i32 %call957, 0
  br i1 %tobool958, label %if.then959, label %if.end960

if.then959:                                       ; preds = %lor.lhs.false956, %if.then952
  br label %got_it

if.end960:                                        ; preds = %lor.lhs.false956
  %449 = load i32, i32* %tmp, align 4
  %tobool961 = icmp ne i32 %449, 0
  %lnot962 = xor i1 %tobool961, true
  %lnot.ext963 = zext i1 %lnot962 to i32
  store i32 %lnot.ext963, i32* %tmp, align 4
  br label %if.end965

if.else964:                                       ; preds = %while.body941
  br label %if.end965

if.end965:                                        ; preds = %if.else964, %if.end960
  %450 = load i8*, i8** %s.addr, align 8
  %incdec.ptr966 = getelementptr inbounds i8, i8* %450, i32 1
  store i8* %incdec.ptr966, i8** %s.addr, align 8
  br label %while.cond938

while.end967:                                     ; preds = %while.cond938
  br label %do.end968

do.end968:                                        ; preds = %while.end967
  br label %if.end969

if.end969:                                        ; preds = %do.end968, %do.end914
  %451 = load i32, i32* %tmp, align 4
  %452 = load i32, i32* getelementptr inbounds ([0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 10), align 4
  %and970 = and i32 %452, 16385
  %cmp971 = icmp eq i32 %and970, 16385
  %lnot974 = xor i1 %cmp971, true
  %lnot.ext975 = zext i1 %lnot974 to i32
  %cmp976 = icmp eq i32 %451, %lnot.ext975
  br i1 %cmp976, label %if.then978, label %if.else987

if.then978:                                       ; preds = %if.end969
  %453 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %intuit979 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %453, i32 0, i32 12
  %454 = load i8, i8* %intuit979, align 8
  %tobool980 = trunc i8 %454 to i1
  br i1 %tobool980, label %if.then985, label %lor.lhs.false982

lor.lhs.false982:                                 ; preds = %if.then978
  %455 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %call983 = call i32 @S_regtry(%struct.regmatch_info* %455, i8** %s.addr)
  %tobool984 = icmp ne i32 %call983, 0
  br i1 %tobool984, label %if.then985, label %if.end986

if.then985:                                       ; preds = %lor.lhs.false982, %if.then978
  br label %got_it

if.end986:                                        ; preds = %lor.lhs.false982
  br label %if.end988

if.else987:                                       ; preds = %if.end969
  br label %if.end988

if.end988:                                        ; preds = %if.else987, %if.end986
  br label %sw.epilog3988

sw.bb989:                                         ; preds = %entry
  %456 = load i8, i8* %utf8_target, align 1
  %tobool990 = trunc i8 %456 to i1
  br i1 %tobool990, label %if.then991, label %if.else1049

if.then991:                                       ; preds = %sw.bb989
  %457 = load i8*, i8** %s.addr, align 8
  %458 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg992 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %458, i32 0, i32 1
  %459 = load i8*, i8** %strbeg992, align 8
  %cmp993 = icmp ne i8* %457, %459
  br i1 %cmp993, label %cond.true995, label %cond.false998

cond.true995:                                     ; preds = %if.then991
  %460 = load i8*, i8** %s.addr, align 8
  %add.ptr996 = getelementptr inbounds i8, i8* %460, i64 -1
  %461 = load i8, i8* %add.ptr996, align 1
  %conv997 = zext i8 %461 to i32
  br label %cond.end999

cond.false998:                                    ; preds = %if.then991
  br label %cond.end999

cond.end999:                                      ; preds = %cond.false998, %cond.true995
  %cond1000 = phi i32 [ %conv997, %cond.true995 ], [ 10, %cond.false998 ]
  store i32 %cond1000, i32* %tmp, align 4
  %462 = load i32, i32* %tmp, align 4
  %conv1001 = sext i32 %462 to i64
  %and1002 = and i64 %conv1001, -256
  %tobool1003 = icmp ne i64 %and1002, 0
  br i1 %tobool1003, label %land.end1011, label %land.rhs1004

land.rhs1004:                                     ; preds = %cond.end999
  %463 = load i32, i32* %tmp, align 4
  %conv1005 = trunc i32 %463 to i8
  %idxprom1006 = zext i8 %conv1005 to i64
  %arrayidx1007 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom1006
  %464 = load i32, i32* %arrayidx1007, align 4
  %and1008 = and i32 %464, 16385
  %cmp1009 = icmp eq i32 %and1008, 16385
  br label %land.end1011

land.end1011:                                     ; preds = %land.rhs1004, %cond.end999
  %465 = phi i1 [ false, %cond.end999 ], [ %cmp1009, %land.rhs1004 ]
  %land.ext1012 = zext i1 %465 to i32
  store i32 %land.ext1012, i32* %tmp, align 4
  br label %do.body1013

do.body1013:                                      ; preds = %land.end1011
  br label %while.cond1014

while.cond1014:                                   ; preds = %if.end1041, %do.body1013
  %466 = load i8*, i8** %s.addr, align 8
  %467 = load i8*, i8** %strend.addr, align 8
  %cmp1015 = icmp ult i8* %466, %467
  br i1 %cmp1015, label %while.body1017, label %while.end1047

while.body1017:                                   ; preds = %while.cond1014
  %468 = load i32, i32* %tmp, align 4
  %469 = load i8*, i8** %s.addr, align 8
  %470 = load i8, i8* %469, align 1
  %idxprom1018 = zext i8 %470 to i64
  %arrayidx1019 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom1018
  %471 = load i32, i32* %arrayidx1019, align 4
  %and1020 = and i32 %471, 16385
  %cmp1021 = icmp eq i32 %and1020, 16385
  %lnot1024 = xor i1 %cmp1021, true
  %lnot.ext1025 = zext i1 %lnot1024 to i32
  %cmp1026 = icmp eq i32 %468, %lnot.ext1025
  br i1 %cmp1026, label %if.then1028, label %if.else1040

if.then1028:                                      ; preds = %while.body1017
  %472 = load i32, i32* %tmp, align 4
  %tobool1029 = icmp ne i32 %472, 0
  %lnot1030 = xor i1 %tobool1029, true
  %lnot.ext1031 = zext i1 %lnot1030 to i32
  store i32 %lnot.ext1031, i32* %tmp, align 4
  %473 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %intuit1032 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %473, i32 0, i32 12
  %474 = load i8, i8* %intuit1032, align 8
  %tobool1033 = trunc i8 %474 to i1
  br i1 %tobool1033, label %if.then1038, label %lor.lhs.false1035

lor.lhs.false1035:                                ; preds = %if.then1028
  %475 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %call1036 = call i32 @S_regtry(%struct.regmatch_info* %475, i8** %s.addr)
  %tobool1037 = icmp ne i32 %call1036, 0
  br i1 %tobool1037, label %if.then1038, label %if.end1039

if.then1038:                                      ; preds = %lor.lhs.false1035, %if.then1028
  br label %got_it

if.end1039:                                       ; preds = %lor.lhs.false1035
  br label %if.end1041

if.else1040:                                      ; preds = %while.body1017
  br label %if.end1041

if.end1041:                                       ; preds = %if.else1040, %if.end1039
  %476 = load i8*, i8** %s.addr, align 8
  %477 = load i8, i8* %476, align 1
  %idxprom1042 = zext i8 %477 to i64
  %arrayidx1043 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom1042
  %478 = load i8, i8* %arrayidx1043, align 1
  %conv1044 = zext i8 %478 to i32
  %479 = load i8*, i8** %s.addr, align 8
  %idx.ext1045 = sext i32 %conv1044 to i64
  %add.ptr1046 = getelementptr inbounds i8, i8* %479, i64 %idx.ext1045
  store i8* %add.ptr1046, i8** %s.addr, align 8
  br label %while.cond1014

while.end1047:                                    ; preds = %while.cond1014
  br label %do.end1048

do.end1048:                                       ; preds = %while.end1047
  br label %if.end1103

if.else1049:                                      ; preds = %sw.bb989
  %480 = load i8*, i8** %s.addr, align 8
  %481 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg1050 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %481, i32 0, i32 1
  %482 = load i8*, i8** %strbeg1050, align 8
  %cmp1051 = icmp ne i8* %480, %482
  br i1 %cmp1051, label %cond.true1053, label %cond.false1056

cond.true1053:                                    ; preds = %if.else1049
  %483 = load i8*, i8** %s.addr, align 8
  %add.ptr1054 = getelementptr inbounds i8, i8* %483, i64 -1
  %484 = load i8, i8* %add.ptr1054, align 1
  %conv1055 = zext i8 %484 to i32
  br label %cond.end1057

cond.false1056:                                   ; preds = %if.else1049
  br label %cond.end1057

cond.end1057:                                     ; preds = %cond.false1056, %cond.true1053
  %cond1058 = phi i32 [ %conv1055, %cond.true1053 ], [ 10, %cond.false1056 ]
  store i32 %cond1058, i32* %tmp, align 4
  %485 = load i32, i32* %tmp, align 4
  %conv1059 = sext i32 %485 to i64
  %and1060 = and i64 %conv1059, -256
  %tobool1061 = icmp ne i64 %and1060, 0
  br i1 %tobool1061, label %land.end1069, label %land.rhs1062

land.rhs1062:                                     ; preds = %cond.end1057
  %486 = load i32, i32* %tmp, align 4
  %conv1063 = trunc i32 %486 to i8
  %idxprom1064 = zext i8 %conv1063 to i64
  %arrayidx1065 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom1064
  %487 = load i32, i32* %arrayidx1065, align 4
  %and1066 = and i32 %487, 16385
  %cmp1067 = icmp eq i32 %and1066, 16385
  br label %land.end1069

land.end1069:                                     ; preds = %land.rhs1062, %cond.end1057
  %488 = phi i1 [ false, %cond.end1057 ], [ %cmp1067, %land.rhs1062 ]
  %land.ext1070 = zext i1 %488 to i32
  store i32 %land.ext1070, i32* %tmp, align 4
  br label %do.body1071

do.body1071:                                      ; preds = %land.end1069
  br label %while.cond1072

while.cond1072:                                   ; preds = %if.end1099, %do.body1071
  %489 = load i8*, i8** %s.addr, align 8
  %490 = load i8*, i8** %strend.addr, align 8
  %cmp1073 = icmp ult i8* %489, %490
  br i1 %cmp1073, label %while.body1075, label %while.end1101

while.body1075:                                   ; preds = %while.cond1072
  %491 = load i32, i32* %tmp, align 4
  %492 = load i8*, i8** %s.addr, align 8
  %493 = load i8, i8* %492, align 1
  %idxprom1076 = zext i8 %493 to i64
  %arrayidx1077 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom1076
  %494 = load i32, i32* %arrayidx1077, align 4
  %and1078 = and i32 %494, 16385
  %cmp1079 = icmp eq i32 %and1078, 16385
  %lnot1082 = xor i1 %cmp1079, true
  %lnot.ext1083 = zext i1 %lnot1082 to i32
  %cmp1084 = icmp eq i32 %491, %lnot.ext1083
  br i1 %cmp1084, label %if.then1086, label %if.else1098

if.then1086:                                      ; preds = %while.body1075
  %495 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %intuit1087 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %495, i32 0, i32 12
  %496 = load i8, i8* %intuit1087, align 8
  %tobool1088 = trunc i8 %496 to i1
  br i1 %tobool1088, label %if.then1093, label %lor.lhs.false1090

lor.lhs.false1090:                                ; preds = %if.then1086
  %497 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %call1091 = call i32 @S_regtry(%struct.regmatch_info* %497, i8** %s.addr)
  %tobool1092 = icmp ne i32 %call1091, 0
  br i1 %tobool1092, label %if.then1093, label %if.end1094

if.then1093:                                      ; preds = %lor.lhs.false1090, %if.then1086
  br label %got_it

if.end1094:                                       ; preds = %lor.lhs.false1090
  %498 = load i32, i32* %tmp, align 4
  %tobool1095 = icmp ne i32 %498, 0
  %lnot1096 = xor i1 %tobool1095, true
  %lnot.ext1097 = zext i1 %lnot1096 to i32
  store i32 %lnot.ext1097, i32* %tmp, align 4
  br label %if.end1099

if.else1098:                                      ; preds = %while.body1075
  br label %if.end1099

if.end1099:                                       ; preds = %if.else1098, %if.end1094
  %499 = load i8*, i8** %s.addr, align 8
  %incdec.ptr1100 = getelementptr inbounds i8, i8* %499, i32 1
  store i8* %incdec.ptr1100, i8** %s.addr, align 8
  br label %while.cond1072

while.end1101:                                    ; preds = %while.cond1072
  br label %do.end1102

do.end1102:                                       ; preds = %while.end1101
  br label %if.end1103

if.end1103:                                       ; preds = %do.end1102, %do.end1048
  %500 = load i32, i32* %tmp, align 4
  %501 = load i32, i32* getelementptr inbounds ([0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 10), align 4
  %and1104 = and i32 %501, 16385
  %cmp1105 = icmp eq i32 %and1104, 16385
  %lnot1108 = xor i1 %cmp1105, true
  %lnot.ext1109 = zext i1 %lnot1108 to i32
  %cmp1110 = icmp eq i32 %500, %lnot.ext1109
  br i1 %cmp1110, label %if.then1112, label %if.else1121

if.then1112:                                      ; preds = %if.end1103
  %502 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %intuit1113 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %502, i32 0, i32 12
  %503 = load i8, i8* %intuit1113, align 8
  %tobool1114 = trunc i8 %503 to i1
  br i1 %tobool1114, label %if.then1119, label %lor.lhs.false1116

lor.lhs.false1116:                                ; preds = %if.then1112
  %504 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %call1117 = call i32 @S_regtry(%struct.regmatch_info* %504, i8** %s.addr)
  %tobool1118 = icmp ne i32 %call1117, 0
  br i1 %tobool1118, label %if.then1119, label %if.end1120

if.then1119:                                      ; preds = %lor.lhs.false1116, %if.then1112
  br label %got_it

if.end1120:                                       ; preds = %lor.lhs.false1116
  br label %if.end1122

if.else1121:                                      ; preds = %if.end1103
  br label %if.end1122

if.end1122:                                       ; preds = %if.else1121, %if.end1120
  br label %sw.epilog3988

sw.bb1123:                                        ; preds = %entry
  %505 = load i8, i8* %utf8_target, align 1
  %tobool1124 = trunc i8 %505 to i1
  br i1 %tobool1124, label %if.then1125, label %if.else1252

if.then1125:                                      ; preds = %sw.bb1123
  %506 = load i8*, i8** %s.addr, align 8
  %507 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg1126 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %507, i32 0, i32 1
  %508 = load i8*, i8** %strbeg1126, align 8
  %cmp1127 = icmp eq i8* %506, %508
  br i1 %cmp1127, label %if.then1129, label %if.else1130

if.then1129:                                      ; preds = %if.then1125
  store i32 10, i32* %tmp, align 4
  br label %if.end1143

if.else1130:                                      ; preds = %if.then1125
  %509 = load i8*, i8** %s.addr, align 8
  %510 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg1132 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %510, i32 0, i32 1
  %511 = load i8*, i8** %strbeg1132, align 8
  %call1133 = call i8* @S_reghop3(i8* %509, i64 -1, i8* %511)
  store i8* %call1133, i8** %r1131, align 8
  %512 = load i8*, i8** %r1131, align 8
  %513 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend1134 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %513, i32 0, i32 2
  %514 = load i8*, i8** %strend1134, align 8
  %515 = load i8*, i8** %r1131, align 8
  %sub.ptr.lhs.cast1135 = ptrtoint i8* %514 to i64
  %sub.ptr.rhs.cast1136 = ptrtoint i8* %515 to i64
  %sub.ptr.sub1137 = sub i64 %sub.ptr.lhs.cast1135, %sub.ptr.rhs.cast1136
  %call1138 = call zeroext i1 @Perl_ckwarn(i32 44)
  %516 = zext i1 %call1138 to i64
  %cond1140 = select i1 %call1138, i32 0, i32 1
  %call1141 = call i64 @Perl_utf8n_to_uvchr(i8* %512, i64 %sub.ptr.sub1137, i64* null, i32 %cond1140)
  %conv1142 = trunc i64 %call1141 to i32
  store i32 %conv1142, i32* %tmp, align 4
  br label %if.end1143

if.end1143:                                       ; preds = %if.else1130, %if.then1129
  %517 = load i32, i32* %tmp, align 4
  %cmp1144 = icmp slt i32 %517, 256
  br i1 %cmp1144, label %cond.true1146, label %cond.false1159

cond.true1146:                                    ; preds = %if.end1143
  %518 = load i32, i32* %tmp, align 4
  %conv1147 = sext i32 %518 to i64
  %and1148 = and i64 %conv1147, -256
  %tobool1149 = icmp ne i64 %and1148, 0
  br i1 %tobool1149, label %land.end1156, label %land.rhs1150

land.rhs1150:                                     ; preds = %cond.true1146
  %519 = load i32, i32* %tmp, align 4
  %conv1151 = trunc i32 %519 to i8
  %idxprom1152 = zext i8 %conv1151 to i64
  %arrayidx1153 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom1152
  %520 = load i32, i32* %arrayidx1153, align 4
  %and1154 = and i32 %520, 1
  %tobool1155 = icmp ne i32 %and1154, 0
  br label %land.end1156

land.end1156:                                     ; preds = %land.rhs1150, %cond.true1146
  %521 = phi i1 [ false, %cond.true1146 ], [ %tobool1155, %land.rhs1150 ]
  %522 = zext i1 %521 to i64
  %cond1158 = select i1 %521, i32 1, i32 0
  br label %cond.end1163

cond.false1159:                                   ; preds = %if.end1143
  %523 = load i32, i32* %tmp, align 4
  %conv1160 = sext i32 %523 to i64
  %call1161 = call zeroext i1 @Perl__is_uni_FOO(i8 zeroext 0, i64 %conv1160)
  %conv1162 = zext i1 %call1161 to i32
  br label %cond.end1163

cond.end1163:                                     ; preds = %cond.false1159, %land.end1156
  %cond1164 = phi i32 [ %cond1158, %land.end1156 ], [ %conv1162, %cond.false1159 ]
  store i32 %cond1164, i32* %tmp, align 4
  br label %do.body1165

do.body1165:                                      ; preds = %cond.end1163
  %524 = load %struct.sv*, %struct.sv** getelementptr inbounds ([10 x %struct.sv*], [10 x %struct.sv*]* @PL_utf8_swash_ptrs, i64 0, i64 0), align 16
  %tobool1166 = icmp ne %struct.sv* %524, null
  br i1 %tobool1166, label %if.end1170, label %if.then1167

if.then1167:                                      ; preds = %do.body1165
  store i8 4, i8* %flags1168, align 1
  %525 = load %struct.sv*, %struct.sv** getelementptr inbounds ([16 x %struct.sv*], [16 x %struct.sv*]* @PL_XPosix_ptrs, i64 0, i64 0), align 16
  %call1169 = call %struct.sv* @Perl__core_swash_init(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.4, i64 0, i64 0), %struct.sv* @PL_sv_undef, i32 1, i32 0, %struct.sv* %525, i8* %flags1168)
  store %struct.sv* %call1169, %struct.sv** getelementptr inbounds ([10 x %struct.sv*], [10 x %struct.sv*]* @PL_utf8_swash_ptrs, i64 0, i64 0), align 16
  br label %if.end1170

if.end1170:                                       ; preds = %if.then1167, %do.body1165
  br label %do.end1171

do.end1171:                                       ; preds = %if.end1170
  br label %do.body1172

do.body1172:                                      ; preds = %do.end1171
  br label %while.cond1173

while.cond1173:                                   ; preds = %if.end1244, %do.body1172
  %526 = load i8*, i8** %s.addr, align 8
  %527 = load i8*, i8** %strend.addr, align 8
  %cmp1174 = icmp ult i8* %526, %527
  br i1 %cmp1174, label %while.body1176, label %while.end1250

while.body1176:                                   ; preds = %while.cond1173
  %528 = load i32, i32* %tmp, align 4
  %529 = load i8*, i8** %s.addr, align 8
  %530 = load i8, i8* %529, align 1
  %conv1177 = zext i8 %530 to i64
  %cmp1178 = icmp ult i64 %conv1177, 128
  br i1 %cmp1178, label %cond.true1180, label %cond.false1187

cond.true1180:                                    ; preds = %while.body1176
  %531 = load i8*, i8** %s.addr, align 8
  %532 = load i8, i8* %531, align 1
  %idxprom1181 = zext i8 %532 to i64
  %arrayidx1182 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom1181
  %533 = load i32, i32* %arrayidx1182, align 4
  %and1183 = and i32 %533, 1
  %tobool1184 = icmp ne i32 %and1183, 0
  %534 = zext i1 %tobool1184 to i64
  %cond1186 = select i1 %tobool1184, i32 1, i32 0
  br label %cond.end1224

cond.false1187:                                   ; preds = %while.body1176
  %535 = load i8*, i8** %s.addr, align 8
  %536 = load i8, i8* %535, align 1
  %conv1188 = zext i8 %536 to i32
  %and1189 = and i32 %conv1188, 254
  %cmp1190 = icmp eq i32 %and1189, 194
  br i1 %cmp1190, label %cond.true1192, label %cond.false1219

cond.true1192:                                    ; preds = %cond.false1187
  %537 = load i8*, i8** %s.addr, align 8
  %538 = load i8, i8* %537, align 1
  %conv1193 = zext i8 %538 to i32
  %and1194 = and i32 %conv1193, 31
  %shl1195 = shl i32 %and1194, 6
  %539 = load i8*, i8** %s.addr, align 8
  %add.ptr1196 = getelementptr inbounds i8, i8* %539, i64 1
  %540 = load i8, i8* %add.ptr1196, align 1
  %conv1197 = zext i8 %540 to i32
  %and1198 = and i32 %conv1197, 63
  %or1199 = or i32 %shl1195, %and1198
  %conv1200 = sext i32 %or1199 to i64
  %and1201 = and i64 %conv1200, -256
  %tobool1202 = icmp ne i64 %and1201, 0
  br i1 %tobool1202, label %land.end1216, label %land.rhs1203

land.rhs1203:                                     ; preds = %cond.true1192
  %541 = load i8*, i8** %s.addr, align 8
  %542 = load i8, i8* %541, align 1
  %conv1204 = zext i8 %542 to i32
  %and1205 = and i32 %conv1204, 31
  %shl1206 = shl i32 %and1205, 6
  %543 = load i8*, i8** %s.addr, align 8
  %add.ptr1207 = getelementptr inbounds i8, i8* %543, i64 1
  %544 = load i8, i8* %add.ptr1207, align 1
  %conv1208 = zext i8 %544 to i32
  %and1209 = and i32 %conv1208, 63
  %or1210 = or i32 %shl1206, %and1209
  %conv1211 = trunc i32 %or1210 to i8
  %idxprom1212 = zext i8 %conv1211 to i64
  %arrayidx1213 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom1212
  %545 = load i32, i32* %arrayidx1213, align 4
  %and1214 = and i32 %545, 1
  %tobool1215 = icmp ne i32 %and1214, 0
  br label %land.end1216

land.end1216:                                     ; preds = %land.rhs1203, %cond.true1192
  %546 = phi i1 [ false, %cond.true1192 ], [ %tobool1215, %land.rhs1203 ]
  %547 = zext i1 %546 to i64
  %cond1218 = select i1 %546, i32 1, i32 0
  br label %cond.end1222

cond.false1219:                                   ; preds = %cond.false1187
  %548 = load i8*, i8** %s.addr, align 8
  %call1220 = call zeroext i1 @Perl__is_utf8_FOO(i8 zeroext 0, i8* %548)
  %conv1221 = zext i1 %call1220 to i32
  br label %cond.end1222

cond.end1222:                                     ; preds = %cond.false1219, %land.end1216
  %cond1223 = phi i32 [ %cond1218, %land.end1216 ], [ %conv1221, %cond.false1219 ]
  br label %cond.end1224

cond.end1224:                                     ; preds = %cond.end1222, %cond.true1180
  %cond1225 = phi i32 [ %cond1186, %cond.true1180 ], [ %cond1223, %cond.end1222 ]
  %tobool1226 = icmp ne i32 %cond1225, 0
  %lnot1227 = xor i1 %tobool1226, true
  %lnot.ext1228 = zext i1 %lnot1227 to i32
  %cmp1229 = icmp eq i32 %528, %lnot.ext1228
  br i1 %cmp1229, label %if.then1231, label %if.else1235

if.then1231:                                      ; preds = %cond.end1224
  %549 = load i32, i32* %tmp, align 4
  %tobool1232 = icmp ne i32 %549, 0
  %lnot1233 = xor i1 %tobool1232, true
  %lnot.ext1234 = zext i1 %lnot1233 to i32
  store i32 %lnot.ext1234, i32* %tmp, align 4
  br label %if.end1244

if.else1235:                                      ; preds = %cond.end1224
  %550 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %intuit1236 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %550, i32 0, i32 12
  %551 = load i8, i8* %intuit1236, align 8
  %tobool1237 = trunc i8 %551 to i1
  br i1 %tobool1237, label %if.then1242, label %lor.lhs.false1239

lor.lhs.false1239:                                ; preds = %if.else1235
  %552 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %call1240 = call i32 @S_regtry(%struct.regmatch_info* %552, i8** %s.addr)
  %tobool1241 = icmp ne i32 %call1240, 0
  br i1 %tobool1241, label %if.then1242, label %if.end1243

if.then1242:                                      ; preds = %lor.lhs.false1239, %if.else1235
  br label %got_it

if.end1243:                                       ; preds = %lor.lhs.false1239
  br label %if.end1244

if.end1244:                                       ; preds = %if.end1243, %if.then1231
  %553 = load i8*, i8** %s.addr, align 8
  %554 = load i8, i8* %553, align 1
  %idxprom1245 = zext i8 %554 to i64
  %arrayidx1246 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom1245
  %555 = load i8, i8* %arrayidx1246, align 1
  %conv1247 = zext i8 %555 to i32
  %556 = load i8*, i8** %s.addr, align 8
  %idx.ext1248 = sext i32 %conv1247 to i64
  %add.ptr1249 = getelementptr inbounds i8, i8* %556, i64 %idx.ext1248
  store i8* %add.ptr1249, i8** %s.addr, align 8
  br label %while.cond1173

while.end1250:                                    ; preds = %while.cond1173
  br label %do.end1251

do.end1251:                                       ; preds = %while.end1250
  br label %if.end1306

if.else1252:                                      ; preds = %sw.bb1123
  %557 = load i8*, i8** %s.addr, align 8
  %558 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg1253 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %558, i32 0, i32 1
  %559 = load i8*, i8** %strbeg1253, align 8
  %cmp1254 = icmp ne i8* %557, %559
  br i1 %cmp1254, label %cond.true1256, label %cond.false1259

cond.true1256:                                    ; preds = %if.else1252
  %560 = load i8*, i8** %s.addr, align 8
  %add.ptr1257 = getelementptr inbounds i8, i8* %560, i64 -1
  %561 = load i8, i8* %add.ptr1257, align 1
  %conv1258 = zext i8 %561 to i32
  br label %cond.end1260

cond.false1259:                                   ; preds = %if.else1252
  br label %cond.end1260

cond.end1260:                                     ; preds = %cond.false1259, %cond.true1256
  %cond1261 = phi i32 [ %conv1258, %cond.true1256 ], [ 10, %cond.false1259 ]
  store i32 %cond1261, i32* %tmp, align 4
  %562 = load i32, i32* %tmp, align 4
  %conv1262 = sext i32 %562 to i64
  %and1263 = and i64 %conv1262, -256
  %tobool1264 = icmp ne i64 %and1263, 0
  br i1 %tobool1264, label %land.end1272, label %land.rhs1265

land.rhs1265:                                     ; preds = %cond.end1260
  %563 = load i32, i32* %tmp, align 4
  %conv1266 = trunc i32 %563 to i8
  %idxprom1267 = zext i8 %conv1266 to i64
  %arrayidx1268 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom1267
  %564 = load i32, i32* %arrayidx1268, align 4
  %and1269 = and i32 %564, 16385
  %cmp1270 = icmp eq i32 %and1269, 16385
  br label %land.end1272

land.end1272:                                     ; preds = %land.rhs1265, %cond.end1260
  %565 = phi i1 [ false, %cond.end1260 ], [ %cmp1270, %land.rhs1265 ]
  %land.ext1273 = zext i1 %565 to i32
  store i32 %land.ext1273, i32* %tmp, align 4
  br label %do.body1274

do.body1274:                                      ; preds = %land.end1272
  br label %while.cond1275

while.cond1275:                                   ; preds = %if.end1302, %do.body1274
  %566 = load i8*, i8** %s.addr, align 8
  %567 = load i8*, i8** %strend.addr, align 8
  %cmp1276 = icmp ult i8* %566, %567
  br i1 %cmp1276, label %while.body1278, label %while.end1304

while.body1278:                                   ; preds = %while.cond1275
  %568 = load i32, i32* %tmp, align 4
  %569 = load i8*, i8** %s.addr, align 8
  %570 = load i8, i8* %569, align 1
  %idxprom1279 = zext i8 %570 to i64
  %arrayidx1280 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom1279
  %571 = load i32, i32* %arrayidx1280, align 4
  %and1281 = and i32 %571, 16385
  %cmp1282 = icmp eq i32 %and1281, 16385
  %lnot1285 = xor i1 %cmp1282, true
  %lnot.ext1286 = zext i1 %lnot1285 to i32
  %cmp1287 = icmp eq i32 %568, %lnot.ext1286
  br i1 %cmp1287, label %if.then1289, label %if.else1293

if.then1289:                                      ; preds = %while.body1278
  %572 = load i32, i32* %tmp, align 4
  %tobool1290 = icmp ne i32 %572, 0
  %lnot1291 = xor i1 %tobool1290, true
  %lnot.ext1292 = zext i1 %lnot1291 to i32
  store i32 %lnot.ext1292, i32* %tmp, align 4
  br label %if.end1302

if.else1293:                                      ; preds = %while.body1278
  %573 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %intuit1294 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %573, i32 0, i32 12
  %574 = load i8, i8* %intuit1294, align 8
  %tobool1295 = trunc i8 %574 to i1
  br i1 %tobool1295, label %if.then1300, label %lor.lhs.false1297

lor.lhs.false1297:                                ; preds = %if.else1293
  %575 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %call1298 = call i32 @S_regtry(%struct.regmatch_info* %575, i8** %s.addr)
  %tobool1299 = icmp ne i32 %call1298, 0
  br i1 %tobool1299, label %if.then1300, label %if.end1301

if.then1300:                                      ; preds = %lor.lhs.false1297, %if.else1293
  br label %got_it

if.end1301:                                       ; preds = %lor.lhs.false1297
  br label %if.end1302

if.end1302:                                       ; preds = %if.end1301, %if.then1289
  %576 = load i8*, i8** %s.addr, align 8
  %incdec.ptr1303 = getelementptr inbounds i8, i8* %576, i32 1
  store i8* %incdec.ptr1303, i8** %s.addr, align 8
  br label %while.cond1275

while.end1304:                                    ; preds = %while.cond1275
  br label %do.end1305

do.end1305:                                       ; preds = %while.end1304
  br label %if.end1306

if.end1306:                                       ; preds = %do.end1305, %do.end1251
  %577 = load i32, i32* %tmp, align 4
  %578 = load i32, i32* getelementptr inbounds ([0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 10), align 4
  %and1307 = and i32 %578, 16385
  %cmp1308 = icmp eq i32 %and1307, 16385
  %lnot1311 = xor i1 %cmp1308, true
  %lnot.ext1312 = zext i1 %lnot1311 to i32
  %cmp1313 = icmp eq i32 %577, %lnot.ext1312
  br i1 %cmp1313, label %if.then1315, label %if.else1316

if.then1315:                                      ; preds = %if.end1306
  br label %if.end1325

if.else1316:                                      ; preds = %if.end1306
  %579 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %intuit1317 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %579, i32 0, i32 12
  %580 = load i8, i8* %intuit1317, align 8
  %tobool1318 = trunc i8 %580 to i1
  br i1 %tobool1318, label %if.then1323, label %lor.lhs.false1320

lor.lhs.false1320:                                ; preds = %if.else1316
  %581 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %call1321 = call i32 @S_regtry(%struct.regmatch_info* %581, i8** %s.addr)
  %tobool1322 = icmp ne i32 %call1321, 0
  br i1 %tobool1322, label %if.then1323, label %if.end1324

if.then1323:                                      ; preds = %lor.lhs.false1320, %if.else1316
  br label %got_it

if.end1324:                                       ; preds = %lor.lhs.false1320
  br label %if.end1325

if.end1325:                                       ; preds = %if.end1324, %if.then1315
  br label %sw.epilog3988

sw.bb1326:                                        ; preds = %entry
  %582 = load i8, i8* %utf8_target, align 1
  %tobool1327 = trunc i8 %582 to i1
  br i1 %tobool1327, label %if.then1328, label %if.else1386

if.then1328:                                      ; preds = %sw.bb1326
  %583 = load i8*, i8** %s.addr, align 8
  %584 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg1329 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %584, i32 0, i32 1
  %585 = load i8*, i8** %strbeg1329, align 8
  %cmp1330 = icmp ne i8* %583, %585
  br i1 %cmp1330, label %cond.true1332, label %cond.false1335

cond.true1332:                                    ; preds = %if.then1328
  %586 = load i8*, i8** %s.addr, align 8
  %add.ptr1333 = getelementptr inbounds i8, i8* %586, i64 -1
  %587 = load i8, i8* %add.ptr1333, align 1
  %conv1334 = zext i8 %587 to i32
  br label %cond.end1336

cond.false1335:                                   ; preds = %if.then1328
  br label %cond.end1336

cond.end1336:                                     ; preds = %cond.false1335, %cond.true1332
  %cond1337 = phi i32 [ %conv1334, %cond.true1332 ], [ 10, %cond.false1335 ]
  store i32 %cond1337, i32* %tmp, align 4
  %588 = load i32, i32* %tmp, align 4
  %conv1338 = sext i32 %588 to i64
  %and1339 = and i64 %conv1338, -256
  %tobool1340 = icmp ne i64 %and1339, 0
  br i1 %tobool1340, label %land.end1348, label %land.rhs1341

land.rhs1341:                                     ; preds = %cond.end1336
  %589 = load i32, i32* %tmp, align 4
  %conv1342 = trunc i32 %589 to i8
  %idxprom1343 = zext i8 %conv1342 to i64
  %arrayidx1344 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom1343
  %590 = load i32, i32* %arrayidx1344, align 4
  %and1345 = and i32 %590, 16385
  %cmp1346 = icmp eq i32 %and1345, 16385
  br label %land.end1348

land.end1348:                                     ; preds = %land.rhs1341, %cond.end1336
  %591 = phi i1 [ false, %cond.end1336 ], [ %cmp1346, %land.rhs1341 ]
  %land.ext1349 = zext i1 %591 to i32
  store i32 %land.ext1349, i32* %tmp, align 4
  br label %do.body1350

do.body1350:                                      ; preds = %land.end1348
  br label %while.cond1351

while.cond1351:                                   ; preds = %if.end1378, %do.body1350
  %592 = load i8*, i8** %s.addr, align 8
  %593 = load i8*, i8** %strend.addr, align 8
  %cmp1352 = icmp ult i8* %592, %593
  br i1 %cmp1352, label %while.body1354, label %while.end1384

while.body1354:                                   ; preds = %while.cond1351
  %594 = load i32, i32* %tmp, align 4
  %595 = load i8*, i8** %s.addr, align 8
  %596 = load i8, i8* %595, align 1
  %idxprom1355 = zext i8 %596 to i64
  %arrayidx1356 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom1355
  %597 = load i32, i32* %arrayidx1356, align 4
  %and1357 = and i32 %597, 16385
  %cmp1358 = icmp eq i32 %and1357, 16385
  %lnot1361 = xor i1 %cmp1358, true
  %lnot.ext1362 = zext i1 %lnot1361 to i32
  %cmp1363 = icmp eq i32 %594, %lnot.ext1362
  br i1 %cmp1363, label %if.then1365, label %if.else1369

if.then1365:                                      ; preds = %while.body1354
  %598 = load i32, i32* %tmp, align 4
  %tobool1366 = icmp ne i32 %598, 0
  %lnot1367 = xor i1 %tobool1366, true
  %lnot.ext1368 = zext i1 %lnot1367 to i32
  store i32 %lnot.ext1368, i32* %tmp, align 4
  br label %if.end1378

if.else1369:                                      ; preds = %while.body1354
  %599 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %intuit1370 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %599, i32 0, i32 12
  %600 = load i8, i8* %intuit1370, align 8
  %tobool1371 = trunc i8 %600 to i1
  br i1 %tobool1371, label %if.then1376, label %lor.lhs.false1373

lor.lhs.false1373:                                ; preds = %if.else1369
  %601 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %call1374 = call i32 @S_regtry(%struct.regmatch_info* %601, i8** %s.addr)
  %tobool1375 = icmp ne i32 %call1374, 0
  br i1 %tobool1375, label %if.then1376, label %if.end1377

if.then1376:                                      ; preds = %lor.lhs.false1373, %if.else1369
  br label %got_it

if.end1377:                                       ; preds = %lor.lhs.false1373
  br label %if.end1378

if.end1378:                                       ; preds = %if.end1377, %if.then1365
  %602 = load i8*, i8** %s.addr, align 8
  %603 = load i8, i8* %602, align 1
  %idxprom1379 = zext i8 %603 to i64
  %arrayidx1380 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom1379
  %604 = load i8, i8* %arrayidx1380, align 1
  %conv1381 = zext i8 %604 to i32
  %605 = load i8*, i8** %s.addr, align 8
  %idx.ext1382 = sext i32 %conv1381 to i64
  %add.ptr1383 = getelementptr inbounds i8, i8* %605, i64 %idx.ext1382
  store i8* %add.ptr1383, i8** %s.addr, align 8
  br label %while.cond1351

while.end1384:                                    ; preds = %while.cond1351
  br label %do.end1385

do.end1385:                                       ; preds = %while.end1384
  br label %if.end1440

if.else1386:                                      ; preds = %sw.bb1326
  %606 = load i8*, i8** %s.addr, align 8
  %607 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg1387 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %607, i32 0, i32 1
  %608 = load i8*, i8** %strbeg1387, align 8
  %cmp1388 = icmp ne i8* %606, %608
  br i1 %cmp1388, label %cond.true1390, label %cond.false1393

cond.true1390:                                    ; preds = %if.else1386
  %609 = load i8*, i8** %s.addr, align 8
  %add.ptr1391 = getelementptr inbounds i8, i8* %609, i64 -1
  %610 = load i8, i8* %add.ptr1391, align 1
  %conv1392 = zext i8 %610 to i32
  br label %cond.end1394

cond.false1393:                                   ; preds = %if.else1386
  br label %cond.end1394

cond.end1394:                                     ; preds = %cond.false1393, %cond.true1390
  %cond1395 = phi i32 [ %conv1392, %cond.true1390 ], [ 10, %cond.false1393 ]
  store i32 %cond1395, i32* %tmp, align 4
  %611 = load i32, i32* %tmp, align 4
  %conv1396 = sext i32 %611 to i64
  %and1397 = and i64 %conv1396, -256
  %tobool1398 = icmp ne i64 %and1397, 0
  br i1 %tobool1398, label %land.end1406, label %land.rhs1399

land.rhs1399:                                     ; preds = %cond.end1394
  %612 = load i32, i32* %tmp, align 4
  %conv1400 = trunc i32 %612 to i8
  %idxprom1401 = zext i8 %conv1400 to i64
  %arrayidx1402 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom1401
  %613 = load i32, i32* %arrayidx1402, align 4
  %and1403 = and i32 %613, 16385
  %cmp1404 = icmp eq i32 %and1403, 16385
  br label %land.end1406

land.end1406:                                     ; preds = %land.rhs1399, %cond.end1394
  %614 = phi i1 [ false, %cond.end1394 ], [ %cmp1404, %land.rhs1399 ]
  %land.ext1407 = zext i1 %614 to i32
  store i32 %land.ext1407, i32* %tmp, align 4
  br label %do.body1408

do.body1408:                                      ; preds = %land.end1406
  br label %while.cond1409

while.cond1409:                                   ; preds = %if.end1436, %do.body1408
  %615 = load i8*, i8** %s.addr, align 8
  %616 = load i8*, i8** %strend.addr, align 8
  %cmp1410 = icmp ult i8* %615, %616
  br i1 %cmp1410, label %while.body1412, label %while.end1438

while.body1412:                                   ; preds = %while.cond1409
  %617 = load i32, i32* %tmp, align 4
  %618 = load i8*, i8** %s.addr, align 8
  %619 = load i8, i8* %618, align 1
  %idxprom1413 = zext i8 %619 to i64
  %arrayidx1414 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom1413
  %620 = load i32, i32* %arrayidx1414, align 4
  %and1415 = and i32 %620, 16385
  %cmp1416 = icmp eq i32 %and1415, 16385
  %lnot1419 = xor i1 %cmp1416, true
  %lnot.ext1420 = zext i1 %lnot1419 to i32
  %cmp1421 = icmp eq i32 %617, %lnot.ext1420
  br i1 %cmp1421, label %if.then1423, label %if.else1427

if.then1423:                                      ; preds = %while.body1412
  %621 = load i32, i32* %tmp, align 4
  %tobool1424 = icmp ne i32 %621, 0
  %lnot1425 = xor i1 %tobool1424, true
  %lnot.ext1426 = zext i1 %lnot1425 to i32
  store i32 %lnot.ext1426, i32* %tmp, align 4
  br label %if.end1436

if.else1427:                                      ; preds = %while.body1412
  %622 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %intuit1428 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %622, i32 0, i32 12
  %623 = load i8, i8* %intuit1428, align 8
  %tobool1429 = trunc i8 %623 to i1
  br i1 %tobool1429, label %if.then1434, label %lor.lhs.false1431

lor.lhs.false1431:                                ; preds = %if.else1427
  %624 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %call1432 = call i32 @S_regtry(%struct.regmatch_info* %624, i8** %s.addr)
  %tobool1433 = icmp ne i32 %call1432, 0
  br i1 %tobool1433, label %if.then1434, label %if.end1435

if.then1434:                                      ; preds = %lor.lhs.false1431, %if.else1427
  br label %got_it

if.end1435:                                       ; preds = %lor.lhs.false1431
  br label %if.end1436

if.end1436:                                       ; preds = %if.end1435, %if.then1423
  %625 = load i8*, i8** %s.addr, align 8
  %incdec.ptr1437 = getelementptr inbounds i8, i8* %625, i32 1
  store i8* %incdec.ptr1437, i8** %s.addr, align 8
  br label %while.cond1409

while.end1438:                                    ; preds = %while.cond1409
  br label %do.end1439

do.end1439:                                       ; preds = %while.end1438
  br label %if.end1440

if.end1440:                                       ; preds = %do.end1439, %do.end1385
  %626 = load i32, i32* %tmp, align 4
  %627 = load i32, i32* getelementptr inbounds ([0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 10), align 4
  %and1441 = and i32 %627, 16385
  %cmp1442 = icmp eq i32 %and1441, 16385
  %lnot1445 = xor i1 %cmp1442, true
  %lnot.ext1446 = zext i1 %lnot1445 to i32
  %cmp1447 = icmp eq i32 %626, %lnot.ext1446
  br i1 %cmp1447, label %if.then1449, label %if.else1450

if.then1449:                                      ; preds = %if.end1440
  br label %if.end1459

if.else1450:                                      ; preds = %if.end1440
  %628 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %intuit1451 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %628, i32 0, i32 12
  %629 = load i8, i8* %intuit1451, align 8
  %tobool1452 = trunc i8 %629 to i1
  br i1 %tobool1452, label %if.then1457, label %lor.lhs.false1454

lor.lhs.false1454:                                ; preds = %if.else1450
  %630 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %call1455 = call i32 @S_regtry(%struct.regmatch_info* %630, i8** %s.addr)
  %tobool1456 = icmp ne i32 %call1455, 0
  br i1 %tobool1456, label %if.then1457, label %if.end1458

if.then1457:                                      ; preds = %lor.lhs.false1454, %if.else1450
  br label %got_it

if.end1458:                                       ; preds = %lor.lhs.false1454
  br label %if.end1459

if.end1459:                                       ; preds = %if.end1458, %if.then1449
  br label %sw.epilog3988

sw.bb1460:                                        ; preds = %entry
  %631 = load %struct.regnode*, %struct.regnode** %c.addr, align 8
  %flags1461 = getelementptr inbounds %struct.regnode, %struct.regnode* %631, i32 0, i32 0
  %632 = load i8, i8* %flags1461, align 2
  %conv1462 = zext i8 %632 to i32
  %cmp1463 = icmp eq i32 %conv1462, 0
  br i1 %cmp1463, label %if.then1465, label %if.end1670

if.then1465:                                      ; preds = %sw.bb1460
  %633 = load i8, i8* %utf8_target, align 1
  %tobool1466 = trunc i8 %633 to i1
  br i1 %tobool1466, label %if.then1467, label %if.else1594

if.then1467:                                      ; preds = %if.then1465
  %634 = load i8*, i8** %s.addr, align 8
  %635 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg1468 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %635, i32 0, i32 1
  %636 = load i8*, i8** %strbeg1468, align 8
  %cmp1469 = icmp eq i8* %634, %636
  br i1 %cmp1469, label %if.then1471, label %if.else1472

if.then1471:                                      ; preds = %if.then1467
  store i32 10, i32* %tmp, align 4
  br label %if.end1485

if.else1472:                                      ; preds = %if.then1467
  %637 = load i8*, i8** %s.addr, align 8
  %638 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg1474 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %638, i32 0, i32 1
  %639 = load i8*, i8** %strbeg1474, align 8
  %call1475 = call i8* @S_reghop3(i8* %637, i64 -1, i8* %639)
  store i8* %call1475, i8** %r1473, align 8
  %640 = load i8*, i8** %r1473, align 8
  %641 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend1476 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %641, i32 0, i32 2
  %642 = load i8*, i8** %strend1476, align 8
  %643 = load i8*, i8** %r1473, align 8
  %sub.ptr.lhs.cast1477 = ptrtoint i8* %642 to i64
  %sub.ptr.rhs.cast1478 = ptrtoint i8* %643 to i64
  %sub.ptr.sub1479 = sub i64 %sub.ptr.lhs.cast1477, %sub.ptr.rhs.cast1478
  %call1480 = call zeroext i1 @Perl_ckwarn(i32 44)
  %644 = zext i1 %call1480 to i64
  %cond1482 = select i1 %call1480, i32 0, i32 1
  %call1483 = call i64 @Perl_utf8n_to_uvchr(i8* %640, i64 %sub.ptr.sub1479, i64* null, i32 %cond1482)
  %conv1484 = trunc i64 %call1483 to i32
  store i32 %conv1484, i32* %tmp, align 4
  br label %if.end1485

if.end1485:                                       ; preds = %if.else1472, %if.then1471
  %645 = load i32, i32* %tmp, align 4
  %cmp1486 = icmp slt i32 %645, 256
  br i1 %cmp1486, label %cond.true1488, label %cond.false1501

cond.true1488:                                    ; preds = %if.end1485
  %646 = load i32, i32* %tmp, align 4
  %conv1489 = sext i32 %646 to i64
  %and1490 = and i64 %conv1489, -256
  %tobool1491 = icmp ne i64 %and1490, 0
  br i1 %tobool1491, label %land.end1498, label %land.rhs1492

land.rhs1492:                                     ; preds = %cond.true1488
  %647 = load i32, i32* %tmp, align 4
  %conv1493 = trunc i32 %647 to i8
  %idxprom1494 = zext i8 %conv1493 to i64
  %arrayidx1495 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom1494
  %648 = load i32, i32* %arrayidx1495, align 4
  %and1496 = and i32 %648, 1
  %tobool1497 = icmp ne i32 %and1496, 0
  br label %land.end1498

land.end1498:                                     ; preds = %land.rhs1492, %cond.true1488
  %649 = phi i1 [ false, %cond.true1488 ], [ %tobool1497, %land.rhs1492 ]
  %650 = zext i1 %649 to i64
  %cond1500 = select i1 %649, i32 1, i32 0
  br label %cond.end1505

cond.false1501:                                   ; preds = %if.end1485
  %651 = load i32, i32* %tmp, align 4
  %conv1502 = sext i32 %651 to i64
  %call1503 = call zeroext i1 @Perl__is_uni_FOO(i8 zeroext 0, i64 %conv1502)
  %conv1504 = zext i1 %call1503 to i32
  br label %cond.end1505

cond.end1505:                                     ; preds = %cond.false1501, %land.end1498
  %cond1506 = phi i32 [ %cond1500, %land.end1498 ], [ %conv1504, %cond.false1501 ]
  store i32 %cond1506, i32* %tmp, align 4
  br label %do.body1507

do.body1507:                                      ; preds = %cond.end1505
  %652 = load %struct.sv*, %struct.sv** getelementptr inbounds ([10 x %struct.sv*], [10 x %struct.sv*]* @PL_utf8_swash_ptrs, i64 0, i64 0), align 16
  %tobool1508 = icmp ne %struct.sv* %652, null
  br i1 %tobool1508, label %if.end1512, label %if.then1509

if.then1509:                                      ; preds = %do.body1507
  store i8 4, i8* %flags1510, align 1
  %653 = load %struct.sv*, %struct.sv** getelementptr inbounds ([16 x %struct.sv*], [16 x %struct.sv*]* @PL_XPosix_ptrs, i64 0, i64 0), align 16
  %call1511 = call %struct.sv* @Perl__core_swash_init(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.4, i64 0, i64 0), %struct.sv* @PL_sv_undef, i32 1, i32 0, %struct.sv* %653, i8* %flags1510)
  store %struct.sv* %call1511, %struct.sv** getelementptr inbounds ([10 x %struct.sv*], [10 x %struct.sv*]* @PL_utf8_swash_ptrs, i64 0, i64 0), align 16
  br label %if.end1512

if.end1512:                                       ; preds = %if.then1509, %do.body1507
  br label %do.end1513

do.end1513:                                       ; preds = %if.end1512
  br label %do.body1514

do.body1514:                                      ; preds = %do.end1513
  br label %while.cond1515

while.cond1515:                                   ; preds = %if.end1586, %do.body1514
  %654 = load i8*, i8** %s.addr, align 8
  %655 = load i8*, i8** %strend.addr, align 8
  %cmp1516 = icmp ult i8* %654, %655
  br i1 %cmp1516, label %while.body1518, label %while.end1592

while.body1518:                                   ; preds = %while.cond1515
  %656 = load i32, i32* %tmp, align 4
  %657 = load i8*, i8** %s.addr, align 8
  %658 = load i8, i8* %657, align 1
  %conv1519 = zext i8 %658 to i64
  %cmp1520 = icmp ult i64 %conv1519, 128
  br i1 %cmp1520, label %cond.true1522, label %cond.false1529

cond.true1522:                                    ; preds = %while.body1518
  %659 = load i8*, i8** %s.addr, align 8
  %660 = load i8, i8* %659, align 1
  %idxprom1523 = zext i8 %660 to i64
  %arrayidx1524 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom1523
  %661 = load i32, i32* %arrayidx1524, align 4
  %and1525 = and i32 %661, 1
  %tobool1526 = icmp ne i32 %and1525, 0
  %662 = zext i1 %tobool1526 to i64
  %cond1528 = select i1 %tobool1526, i32 1, i32 0
  br label %cond.end1566

cond.false1529:                                   ; preds = %while.body1518
  %663 = load i8*, i8** %s.addr, align 8
  %664 = load i8, i8* %663, align 1
  %conv1530 = zext i8 %664 to i32
  %and1531 = and i32 %conv1530, 254
  %cmp1532 = icmp eq i32 %and1531, 194
  br i1 %cmp1532, label %cond.true1534, label %cond.false1561

cond.true1534:                                    ; preds = %cond.false1529
  %665 = load i8*, i8** %s.addr, align 8
  %666 = load i8, i8* %665, align 1
  %conv1535 = zext i8 %666 to i32
  %and1536 = and i32 %conv1535, 31
  %shl1537 = shl i32 %and1536, 6
  %667 = load i8*, i8** %s.addr, align 8
  %add.ptr1538 = getelementptr inbounds i8, i8* %667, i64 1
  %668 = load i8, i8* %add.ptr1538, align 1
  %conv1539 = zext i8 %668 to i32
  %and1540 = and i32 %conv1539, 63
  %or1541 = or i32 %shl1537, %and1540
  %conv1542 = sext i32 %or1541 to i64
  %and1543 = and i64 %conv1542, -256
  %tobool1544 = icmp ne i64 %and1543, 0
  br i1 %tobool1544, label %land.end1558, label %land.rhs1545

land.rhs1545:                                     ; preds = %cond.true1534
  %669 = load i8*, i8** %s.addr, align 8
  %670 = load i8, i8* %669, align 1
  %conv1546 = zext i8 %670 to i32
  %and1547 = and i32 %conv1546, 31
  %shl1548 = shl i32 %and1547, 6
  %671 = load i8*, i8** %s.addr, align 8
  %add.ptr1549 = getelementptr inbounds i8, i8* %671, i64 1
  %672 = load i8, i8* %add.ptr1549, align 1
  %conv1550 = zext i8 %672 to i32
  %and1551 = and i32 %conv1550, 63
  %or1552 = or i32 %shl1548, %and1551
  %conv1553 = trunc i32 %or1552 to i8
  %idxprom1554 = zext i8 %conv1553 to i64
  %arrayidx1555 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom1554
  %673 = load i32, i32* %arrayidx1555, align 4
  %and1556 = and i32 %673, 1
  %tobool1557 = icmp ne i32 %and1556, 0
  br label %land.end1558

land.end1558:                                     ; preds = %land.rhs1545, %cond.true1534
  %674 = phi i1 [ false, %cond.true1534 ], [ %tobool1557, %land.rhs1545 ]
  %675 = zext i1 %674 to i64
  %cond1560 = select i1 %674, i32 1, i32 0
  br label %cond.end1564

cond.false1561:                                   ; preds = %cond.false1529
  %676 = load i8*, i8** %s.addr, align 8
  %call1562 = call zeroext i1 @Perl__is_utf8_FOO(i8 zeroext 0, i8* %676)
  %conv1563 = zext i1 %call1562 to i32
  br label %cond.end1564

cond.end1564:                                     ; preds = %cond.false1561, %land.end1558
  %cond1565 = phi i32 [ %cond1560, %land.end1558 ], [ %conv1563, %cond.false1561 ]
  br label %cond.end1566

cond.end1566:                                     ; preds = %cond.end1564, %cond.true1522
  %cond1567 = phi i32 [ %cond1528, %cond.true1522 ], [ %cond1565, %cond.end1564 ]
  %tobool1568 = icmp ne i32 %cond1567, 0
  %lnot1569 = xor i1 %tobool1568, true
  %lnot.ext1570 = zext i1 %lnot1569 to i32
  %cmp1571 = icmp eq i32 %656, %lnot.ext1570
  br i1 %cmp1571, label %if.then1573, label %if.else1577

if.then1573:                                      ; preds = %cond.end1566
  %677 = load i32, i32* %tmp, align 4
  %tobool1574 = icmp ne i32 %677, 0
  %lnot1575 = xor i1 %tobool1574, true
  %lnot.ext1576 = zext i1 %lnot1575 to i32
  store i32 %lnot.ext1576, i32* %tmp, align 4
  br label %if.end1586

if.else1577:                                      ; preds = %cond.end1566
  %678 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %intuit1578 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %678, i32 0, i32 12
  %679 = load i8, i8* %intuit1578, align 8
  %tobool1579 = trunc i8 %679 to i1
  br i1 %tobool1579, label %if.then1584, label %lor.lhs.false1581

lor.lhs.false1581:                                ; preds = %if.else1577
  %680 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %call1582 = call i32 @S_regtry(%struct.regmatch_info* %680, i8** %s.addr)
  %tobool1583 = icmp ne i32 %call1582, 0
  br i1 %tobool1583, label %if.then1584, label %if.end1585

if.then1584:                                      ; preds = %lor.lhs.false1581, %if.else1577
  br label %got_it

if.end1585:                                       ; preds = %lor.lhs.false1581
  br label %if.end1586

if.end1586:                                       ; preds = %if.end1585, %if.then1573
  %681 = load i8*, i8** %s.addr, align 8
  %682 = load i8, i8* %681, align 1
  %idxprom1587 = zext i8 %682 to i64
  %arrayidx1588 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom1587
  %683 = load i8, i8* %arrayidx1588, align 1
  %conv1589 = zext i8 %683 to i32
  %684 = load i8*, i8** %s.addr, align 8
  %idx.ext1590 = sext i32 %conv1589 to i64
  %add.ptr1591 = getelementptr inbounds i8, i8* %684, i64 %idx.ext1590
  store i8* %add.ptr1591, i8** %s.addr, align 8
  br label %while.cond1515

while.end1592:                                    ; preds = %while.cond1515
  br label %do.end1593

do.end1593:                                       ; preds = %while.end1592
  br label %if.end1649

if.else1594:                                      ; preds = %if.then1465
  %685 = load i8*, i8** %s.addr, align 8
  %686 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg1595 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %686, i32 0, i32 1
  %687 = load i8*, i8** %strbeg1595, align 8
  %cmp1596 = icmp ne i8* %685, %687
  br i1 %cmp1596, label %cond.true1598, label %cond.false1601

cond.true1598:                                    ; preds = %if.else1594
  %688 = load i8*, i8** %s.addr, align 8
  %add.ptr1599 = getelementptr inbounds i8, i8* %688, i64 -1
  %689 = load i8, i8* %add.ptr1599, align 1
  %conv1600 = zext i8 %689 to i32
  br label %cond.end1602

cond.false1601:                                   ; preds = %if.else1594
  br label %cond.end1602

cond.end1602:                                     ; preds = %cond.false1601, %cond.true1598
  %cond1603 = phi i32 [ %conv1600, %cond.true1598 ], [ 10, %cond.false1601 ]
  store i32 %cond1603, i32* %tmp, align 4
  %690 = load i32, i32* %tmp, align 4
  %conv1604 = sext i32 %690 to i64
  %and1605 = and i64 %conv1604, -256
  %tobool1606 = icmp ne i64 %and1605, 0
  br i1 %tobool1606, label %land.end1613, label %land.rhs1607

land.rhs1607:                                     ; preds = %cond.end1602
  %691 = load i32, i32* %tmp, align 4
  %conv1608 = trunc i32 %691 to i8
  %idxprom1609 = zext i8 %conv1608 to i64
  %arrayidx1610 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom1609
  %692 = load i32, i32* %arrayidx1610, align 4
  %and1611 = and i32 %692, 1
  %tobool1612 = icmp ne i32 %and1611, 0
  br label %land.end1613

land.end1613:                                     ; preds = %land.rhs1607, %cond.end1602
  %693 = phi i1 [ false, %cond.end1602 ], [ %tobool1612, %land.rhs1607 ]
  %694 = zext i1 %693 to i64
  %cond1615 = select i1 %693, i32 1, i32 0
  store i32 %cond1615, i32* %tmp, align 4
  br label %do.body1616

do.body1616:                                      ; preds = %land.end1613
  br label %while.cond1617

while.cond1617:                                   ; preds = %if.end1645, %do.body1616
  %695 = load i8*, i8** %s.addr, align 8
  %696 = load i8*, i8** %strend.addr, align 8
  %cmp1618 = icmp ult i8* %695, %696
  br i1 %cmp1618, label %while.body1620, label %while.end1647

while.body1620:                                   ; preds = %while.cond1617
  %697 = load i32, i32* %tmp, align 4
  %698 = load i8*, i8** %s.addr, align 8
  %699 = load i8, i8* %698, align 1
  %idxprom1621 = zext i8 %699 to i64
  %arrayidx1622 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom1621
  %700 = load i32, i32* %arrayidx1622, align 4
  %and1623 = and i32 %700, 1
  %tobool1624 = icmp ne i32 %and1623, 0
  %701 = zext i1 %tobool1624 to i64
  %cond1626 = select i1 %tobool1624, i32 1, i32 0
  %tobool1627 = icmp ne i32 %cond1626, 0
  %lnot1628 = xor i1 %tobool1627, true
  %lnot.ext1629 = zext i1 %lnot1628 to i32
  %cmp1630 = icmp eq i32 %697, %lnot.ext1629
  br i1 %cmp1630, label %if.then1632, label %if.else1636

if.then1632:                                      ; preds = %while.body1620
  %702 = load i32, i32* %tmp, align 4
  %tobool1633 = icmp ne i32 %702, 0
  %lnot1634 = xor i1 %tobool1633, true
  %lnot.ext1635 = zext i1 %lnot1634 to i32
  store i32 %lnot.ext1635, i32* %tmp, align 4
  br label %if.end1645

if.else1636:                                      ; preds = %while.body1620
  %703 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %intuit1637 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %703, i32 0, i32 12
  %704 = load i8, i8* %intuit1637, align 8
  %tobool1638 = trunc i8 %704 to i1
  br i1 %tobool1638, label %if.then1643, label %lor.lhs.false1640

lor.lhs.false1640:                                ; preds = %if.else1636
  %705 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %call1641 = call i32 @S_regtry(%struct.regmatch_info* %705, i8** %s.addr)
  %tobool1642 = icmp ne i32 %call1641, 0
  br i1 %tobool1642, label %if.then1643, label %if.end1644

if.then1643:                                      ; preds = %lor.lhs.false1640, %if.else1636
  br label %got_it

if.end1644:                                       ; preds = %lor.lhs.false1640
  br label %if.end1645

if.end1645:                                       ; preds = %if.end1644, %if.then1632
  %706 = load i8*, i8** %s.addr, align 8
  %incdec.ptr1646 = getelementptr inbounds i8, i8* %706, i32 1
  store i8* %incdec.ptr1646, i8** %s.addr, align 8
  br label %while.cond1617

while.end1647:                                    ; preds = %while.cond1617
  br label %do.end1648

do.end1648:                                       ; preds = %while.end1647
  br label %if.end1649

if.end1649:                                       ; preds = %do.end1648, %do.end1593
  %707 = load i32, i32* %tmp, align 4
  %708 = load i32, i32* getelementptr inbounds ([0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 10), align 4
  %and1650 = and i32 %708, 1
  %tobool1651 = icmp ne i32 %and1650, 0
  %709 = zext i1 %tobool1651 to i64
  %cond1653 = select i1 %tobool1651, i32 1, i32 0
  %tobool1654 = icmp ne i32 %cond1653, 0
  %lnot1655 = xor i1 %tobool1654, true
  %lnot.ext1656 = zext i1 %lnot1655 to i32
  %cmp1657 = icmp eq i32 %707, %lnot.ext1656
  br i1 %cmp1657, label %if.then1659, label %if.else1660

if.then1659:                                      ; preds = %if.end1649
  br label %if.end1669

if.else1660:                                      ; preds = %if.end1649
  %710 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %intuit1661 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %710, i32 0, i32 12
  %711 = load i8, i8* %intuit1661, align 8
  %tobool1662 = trunc i8 %711 to i1
  br i1 %tobool1662, label %if.then1667, label %lor.lhs.false1664

lor.lhs.false1664:                                ; preds = %if.else1660
  %712 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %call1665 = call i32 @S_regtry(%struct.regmatch_info* %712, i8** %s.addr)
  %tobool1666 = icmp ne i32 %call1665, 0
  br i1 %tobool1666, label %if.then1667, label %if.end1668

if.then1667:                                      ; preds = %lor.lhs.false1664, %if.else1660
  br label %got_it

if.end1668:                                       ; preds = %lor.lhs.false1664
  br label %if.end1669

if.end1669:                                       ; preds = %if.end1668, %if.then1659
  br label %sw.epilog3988

if.end1670:                                       ; preds = %sw.bb1460
  br label %do_nboundu

do_nboundu:                                       ; preds = %if.end1670, %if.end533
  store i8 1, i8* %to_complement, align 1
  br label %sw.bb1671

sw.bb1671:                                        ; preds = %entry, %do_nboundu
  br label %do_boundu

do_boundu:                                        ; preds = %sw.bb1671, %if.end285
  %713 = load %struct.regnode*, %struct.regnode** %c.addr, align 8
  %flags1672 = getelementptr inbounds %struct.regnode, %struct.regnode* %713, i32 0, i32 0
  %714 = load i8, i8* %flags1672, align 2
  %conv1673 = zext i8 %714 to i32
  switch i32 %conv1673, label %sw.epilog [
    i32 0, label %sw.bb1674
    i32 1, label %sw.bb1879
    i32 2, label %sw.bb1999
    i32 3, label %sw.bb2130
  ]

sw.bb1674:                                        ; preds = %do_boundu
  %715 = load i8, i8* %utf8_target, align 1
  %tobool1675 = trunc i8 %715 to i1
  br i1 %tobool1675, label %if.then1676, label %if.else1803

if.then1676:                                      ; preds = %sw.bb1674
  %716 = load i8*, i8** %s.addr, align 8
  %717 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg1677 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %717, i32 0, i32 1
  %718 = load i8*, i8** %strbeg1677, align 8
  %cmp1678 = icmp eq i8* %716, %718
  br i1 %cmp1678, label %if.then1680, label %if.else1681

if.then1680:                                      ; preds = %if.then1676
  store i32 10, i32* %tmp, align 4
  br label %if.end1694

if.else1681:                                      ; preds = %if.then1676
  %719 = load i8*, i8** %s.addr, align 8
  %720 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg1683 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %720, i32 0, i32 1
  %721 = load i8*, i8** %strbeg1683, align 8
  %call1684 = call i8* @S_reghop3(i8* %719, i64 -1, i8* %721)
  store i8* %call1684, i8** %r1682, align 8
  %722 = load i8*, i8** %r1682, align 8
  %723 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend1685 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %723, i32 0, i32 2
  %724 = load i8*, i8** %strend1685, align 8
  %725 = load i8*, i8** %r1682, align 8
  %sub.ptr.lhs.cast1686 = ptrtoint i8* %724 to i64
  %sub.ptr.rhs.cast1687 = ptrtoint i8* %725 to i64
  %sub.ptr.sub1688 = sub i64 %sub.ptr.lhs.cast1686, %sub.ptr.rhs.cast1687
  %call1689 = call zeroext i1 @Perl_ckwarn(i32 44)
  %726 = zext i1 %call1689 to i64
  %cond1691 = select i1 %call1689, i32 0, i32 1
  %call1692 = call i64 @Perl_utf8n_to_uvchr(i8* %722, i64 %sub.ptr.sub1688, i64* null, i32 %cond1691)
  %conv1693 = trunc i64 %call1692 to i32
  store i32 %conv1693, i32* %tmp, align 4
  br label %if.end1694

if.end1694:                                       ; preds = %if.else1681, %if.then1680
  %727 = load i32, i32* %tmp, align 4
  %cmp1695 = icmp slt i32 %727, 256
  br i1 %cmp1695, label %cond.true1697, label %cond.false1710

cond.true1697:                                    ; preds = %if.end1694
  %728 = load i32, i32* %tmp, align 4
  %conv1698 = sext i32 %728 to i64
  %and1699 = and i64 %conv1698, -256
  %tobool1700 = icmp ne i64 %and1699, 0
  br i1 %tobool1700, label %land.end1707, label %land.rhs1701

land.rhs1701:                                     ; preds = %cond.true1697
  %729 = load i32, i32* %tmp, align 4
  %conv1702 = trunc i32 %729 to i8
  %idxprom1703 = zext i8 %conv1702 to i64
  %arrayidx1704 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom1703
  %730 = load i32, i32* %arrayidx1704, align 4
  %and1705 = and i32 %730, 1
  %tobool1706 = icmp ne i32 %and1705, 0
  br label %land.end1707

land.end1707:                                     ; preds = %land.rhs1701, %cond.true1697
  %731 = phi i1 [ false, %cond.true1697 ], [ %tobool1706, %land.rhs1701 ]
  %732 = zext i1 %731 to i64
  %cond1709 = select i1 %731, i32 1, i32 0
  br label %cond.end1714

cond.false1710:                                   ; preds = %if.end1694
  %733 = load i32, i32* %tmp, align 4
  %conv1711 = sext i32 %733 to i64
  %call1712 = call zeroext i1 @Perl__is_uni_FOO(i8 zeroext 0, i64 %conv1711)
  %conv1713 = zext i1 %call1712 to i32
  br label %cond.end1714

cond.end1714:                                     ; preds = %cond.false1710, %land.end1707
  %cond1715 = phi i32 [ %cond1709, %land.end1707 ], [ %conv1713, %cond.false1710 ]
  store i32 %cond1715, i32* %tmp, align 4
  br label %do.body1716

do.body1716:                                      ; preds = %cond.end1714
  %734 = load %struct.sv*, %struct.sv** getelementptr inbounds ([10 x %struct.sv*], [10 x %struct.sv*]* @PL_utf8_swash_ptrs, i64 0, i64 0), align 16
  %tobool1717 = icmp ne %struct.sv* %734, null
  br i1 %tobool1717, label %if.end1721, label %if.then1718

if.then1718:                                      ; preds = %do.body1716
  store i8 4, i8* %flags1719, align 1
  %735 = load %struct.sv*, %struct.sv** getelementptr inbounds ([16 x %struct.sv*], [16 x %struct.sv*]* @PL_XPosix_ptrs, i64 0, i64 0), align 16
  %call1720 = call %struct.sv* @Perl__core_swash_init(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.4, i64 0, i64 0), %struct.sv* @PL_sv_undef, i32 1, i32 0, %struct.sv* %735, i8* %flags1719)
  store %struct.sv* %call1720, %struct.sv** getelementptr inbounds ([10 x %struct.sv*], [10 x %struct.sv*]* @PL_utf8_swash_ptrs, i64 0, i64 0), align 16
  br label %if.end1721

if.end1721:                                       ; preds = %if.then1718, %do.body1716
  br label %do.end1722

do.end1722:                                       ; preds = %if.end1721
  br label %do.body1723

do.body1723:                                      ; preds = %do.end1722
  br label %while.cond1724

while.cond1724:                                   ; preds = %if.end1795, %do.body1723
  %736 = load i8*, i8** %s.addr, align 8
  %737 = load i8*, i8** %strend.addr, align 8
  %cmp1725 = icmp ult i8* %736, %737
  br i1 %cmp1725, label %while.body1727, label %while.end1801

while.body1727:                                   ; preds = %while.cond1724
  %738 = load i32, i32* %tmp, align 4
  %739 = load i8*, i8** %s.addr, align 8
  %740 = load i8, i8* %739, align 1
  %conv1728 = zext i8 %740 to i64
  %cmp1729 = icmp ult i64 %conv1728, 128
  br i1 %cmp1729, label %cond.true1731, label %cond.false1738

cond.true1731:                                    ; preds = %while.body1727
  %741 = load i8*, i8** %s.addr, align 8
  %742 = load i8, i8* %741, align 1
  %idxprom1732 = zext i8 %742 to i64
  %arrayidx1733 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom1732
  %743 = load i32, i32* %arrayidx1733, align 4
  %and1734 = and i32 %743, 1
  %tobool1735 = icmp ne i32 %and1734, 0
  %744 = zext i1 %tobool1735 to i64
  %cond1737 = select i1 %tobool1735, i32 1, i32 0
  br label %cond.end1775

cond.false1738:                                   ; preds = %while.body1727
  %745 = load i8*, i8** %s.addr, align 8
  %746 = load i8, i8* %745, align 1
  %conv1739 = zext i8 %746 to i32
  %and1740 = and i32 %conv1739, 254
  %cmp1741 = icmp eq i32 %and1740, 194
  br i1 %cmp1741, label %cond.true1743, label %cond.false1770

cond.true1743:                                    ; preds = %cond.false1738
  %747 = load i8*, i8** %s.addr, align 8
  %748 = load i8, i8* %747, align 1
  %conv1744 = zext i8 %748 to i32
  %and1745 = and i32 %conv1744, 31
  %shl1746 = shl i32 %and1745, 6
  %749 = load i8*, i8** %s.addr, align 8
  %add.ptr1747 = getelementptr inbounds i8, i8* %749, i64 1
  %750 = load i8, i8* %add.ptr1747, align 1
  %conv1748 = zext i8 %750 to i32
  %and1749 = and i32 %conv1748, 63
  %or1750 = or i32 %shl1746, %and1749
  %conv1751 = sext i32 %or1750 to i64
  %and1752 = and i64 %conv1751, -256
  %tobool1753 = icmp ne i64 %and1752, 0
  br i1 %tobool1753, label %land.end1767, label %land.rhs1754

land.rhs1754:                                     ; preds = %cond.true1743
  %751 = load i8*, i8** %s.addr, align 8
  %752 = load i8, i8* %751, align 1
  %conv1755 = zext i8 %752 to i32
  %and1756 = and i32 %conv1755, 31
  %shl1757 = shl i32 %and1756, 6
  %753 = load i8*, i8** %s.addr, align 8
  %add.ptr1758 = getelementptr inbounds i8, i8* %753, i64 1
  %754 = load i8, i8* %add.ptr1758, align 1
  %conv1759 = zext i8 %754 to i32
  %and1760 = and i32 %conv1759, 63
  %or1761 = or i32 %shl1757, %and1760
  %conv1762 = trunc i32 %or1761 to i8
  %idxprom1763 = zext i8 %conv1762 to i64
  %arrayidx1764 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom1763
  %755 = load i32, i32* %arrayidx1764, align 4
  %and1765 = and i32 %755, 1
  %tobool1766 = icmp ne i32 %and1765, 0
  br label %land.end1767

land.end1767:                                     ; preds = %land.rhs1754, %cond.true1743
  %756 = phi i1 [ false, %cond.true1743 ], [ %tobool1766, %land.rhs1754 ]
  %757 = zext i1 %756 to i64
  %cond1769 = select i1 %756, i32 1, i32 0
  br label %cond.end1773

cond.false1770:                                   ; preds = %cond.false1738
  %758 = load i8*, i8** %s.addr, align 8
  %call1771 = call zeroext i1 @Perl__is_utf8_FOO(i8 zeroext 0, i8* %758)
  %conv1772 = zext i1 %call1771 to i32
  br label %cond.end1773

cond.end1773:                                     ; preds = %cond.false1770, %land.end1767
  %cond1774 = phi i32 [ %cond1769, %land.end1767 ], [ %conv1772, %cond.false1770 ]
  br label %cond.end1775

cond.end1775:                                     ; preds = %cond.end1773, %cond.true1731
  %cond1776 = phi i32 [ %cond1737, %cond.true1731 ], [ %cond1774, %cond.end1773 ]
  %tobool1777 = icmp ne i32 %cond1776, 0
  %lnot1778 = xor i1 %tobool1777, true
  %lnot.ext1779 = zext i1 %lnot1778 to i32
  %cmp1780 = icmp eq i32 %738, %lnot.ext1779
  br i1 %cmp1780, label %if.then1782, label %if.else1794

if.then1782:                                      ; preds = %cond.end1775
  %759 = load i32, i32* %tmp, align 4
  %tobool1783 = icmp ne i32 %759, 0
  %lnot1784 = xor i1 %tobool1783, true
  %lnot.ext1785 = zext i1 %lnot1784 to i32
  store i32 %lnot.ext1785, i32* %tmp, align 4
  %760 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %intuit1786 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %760, i32 0, i32 12
  %761 = load i8, i8* %intuit1786, align 8
  %tobool1787 = trunc i8 %761 to i1
  br i1 %tobool1787, label %if.then1792, label %lor.lhs.false1789

lor.lhs.false1789:                                ; preds = %if.then1782
  %762 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %call1790 = call i32 @S_regtry(%struct.regmatch_info* %762, i8** %s.addr)
  %tobool1791 = icmp ne i32 %call1790, 0
  br i1 %tobool1791, label %if.then1792, label %if.end1793

if.then1792:                                      ; preds = %lor.lhs.false1789, %if.then1782
  br label %got_it

if.end1793:                                       ; preds = %lor.lhs.false1789
  br label %if.end1795

if.else1794:                                      ; preds = %cond.end1775
  br label %if.end1795

if.end1795:                                       ; preds = %if.else1794, %if.end1793
  %763 = load i8*, i8** %s.addr, align 8
  %764 = load i8, i8* %763, align 1
  %idxprom1796 = zext i8 %764 to i64
  %arrayidx1797 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom1796
  %765 = load i8, i8* %arrayidx1797, align 1
  %conv1798 = zext i8 %765 to i32
  %766 = load i8*, i8** %s.addr, align 8
  %idx.ext1799 = sext i32 %conv1798 to i64
  %add.ptr1800 = getelementptr inbounds i8, i8* %766, i64 %idx.ext1799
  store i8* %add.ptr1800, i8** %s.addr, align 8
  br label %while.cond1724

while.end1801:                                    ; preds = %while.cond1724
  br label %do.end1802

do.end1802:                                       ; preds = %while.end1801
  br label %if.end1858

if.else1803:                                      ; preds = %sw.bb1674
  %767 = load i8*, i8** %s.addr, align 8
  %768 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg1804 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %768, i32 0, i32 1
  %769 = load i8*, i8** %strbeg1804, align 8
  %cmp1805 = icmp ne i8* %767, %769
  br i1 %cmp1805, label %cond.true1807, label %cond.false1810

cond.true1807:                                    ; preds = %if.else1803
  %770 = load i8*, i8** %s.addr, align 8
  %add.ptr1808 = getelementptr inbounds i8, i8* %770, i64 -1
  %771 = load i8, i8* %add.ptr1808, align 1
  %conv1809 = zext i8 %771 to i32
  br label %cond.end1811

cond.false1810:                                   ; preds = %if.else1803
  br label %cond.end1811

cond.end1811:                                     ; preds = %cond.false1810, %cond.true1807
  %cond1812 = phi i32 [ %conv1809, %cond.true1807 ], [ 10, %cond.false1810 ]
  store i32 %cond1812, i32* %tmp, align 4
  %772 = load i32, i32* %tmp, align 4
  %conv1813 = sext i32 %772 to i64
  %and1814 = and i64 %conv1813, -256
  %tobool1815 = icmp ne i64 %and1814, 0
  br i1 %tobool1815, label %land.end1822, label %land.rhs1816

land.rhs1816:                                     ; preds = %cond.end1811
  %773 = load i32, i32* %tmp, align 4
  %conv1817 = trunc i32 %773 to i8
  %idxprom1818 = zext i8 %conv1817 to i64
  %arrayidx1819 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom1818
  %774 = load i32, i32* %arrayidx1819, align 4
  %and1820 = and i32 %774, 1
  %tobool1821 = icmp ne i32 %and1820, 0
  br label %land.end1822

land.end1822:                                     ; preds = %land.rhs1816, %cond.end1811
  %775 = phi i1 [ false, %cond.end1811 ], [ %tobool1821, %land.rhs1816 ]
  %776 = zext i1 %775 to i64
  %cond1824 = select i1 %775, i32 1, i32 0
  store i32 %cond1824, i32* %tmp, align 4
  br label %do.body1825

do.body1825:                                      ; preds = %land.end1822
  br label %while.cond1826

while.cond1826:                                   ; preds = %if.end1854, %do.body1825
  %777 = load i8*, i8** %s.addr, align 8
  %778 = load i8*, i8** %strend.addr, align 8
  %cmp1827 = icmp ult i8* %777, %778
  br i1 %cmp1827, label %while.body1829, label %while.end1856

while.body1829:                                   ; preds = %while.cond1826
  %779 = load i32, i32* %tmp, align 4
  %780 = load i8*, i8** %s.addr, align 8
  %781 = load i8, i8* %780, align 1
  %idxprom1830 = zext i8 %781 to i64
  %arrayidx1831 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom1830
  %782 = load i32, i32* %arrayidx1831, align 4
  %and1832 = and i32 %782, 1
  %tobool1833 = icmp ne i32 %and1832, 0
  %783 = zext i1 %tobool1833 to i64
  %cond1835 = select i1 %tobool1833, i32 1, i32 0
  %tobool1836 = icmp ne i32 %cond1835, 0
  %lnot1837 = xor i1 %tobool1836, true
  %lnot.ext1838 = zext i1 %lnot1837 to i32
  %cmp1839 = icmp eq i32 %779, %lnot.ext1838
  br i1 %cmp1839, label %if.then1841, label %if.else1853

if.then1841:                                      ; preds = %while.body1829
  %784 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %intuit1842 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %784, i32 0, i32 12
  %785 = load i8, i8* %intuit1842, align 8
  %tobool1843 = trunc i8 %785 to i1
  br i1 %tobool1843, label %if.then1848, label %lor.lhs.false1845

lor.lhs.false1845:                                ; preds = %if.then1841
  %786 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %call1846 = call i32 @S_regtry(%struct.regmatch_info* %786, i8** %s.addr)
  %tobool1847 = icmp ne i32 %call1846, 0
  br i1 %tobool1847, label %if.then1848, label %if.end1849

if.then1848:                                      ; preds = %lor.lhs.false1845, %if.then1841
  br label %got_it

if.end1849:                                       ; preds = %lor.lhs.false1845
  %787 = load i32, i32* %tmp, align 4
  %tobool1850 = icmp ne i32 %787, 0
  %lnot1851 = xor i1 %tobool1850, true
  %lnot.ext1852 = zext i1 %lnot1851 to i32
  store i32 %lnot.ext1852, i32* %tmp, align 4
  br label %if.end1854

if.else1853:                                      ; preds = %while.body1829
  br label %if.end1854

if.end1854:                                       ; preds = %if.else1853, %if.end1849
  %788 = load i8*, i8** %s.addr, align 8
  %incdec.ptr1855 = getelementptr inbounds i8, i8* %788, i32 1
  store i8* %incdec.ptr1855, i8** %s.addr, align 8
  br label %while.cond1826

while.end1856:                                    ; preds = %while.cond1826
  br label %do.end1857

do.end1857:                                       ; preds = %while.end1856
  br label %if.end1858

if.end1858:                                       ; preds = %do.end1857, %do.end1802
  %789 = load i32, i32* %tmp, align 4
  %790 = load i32, i32* getelementptr inbounds ([0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 10), align 4
  %and1859 = and i32 %790, 1
  %tobool1860 = icmp ne i32 %and1859, 0
  %791 = zext i1 %tobool1860 to i64
  %cond1862 = select i1 %tobool1860, i32 1, i32 0
  %tobool1863 = icmp ne i32 %cond1862, 0
  %lnot1864 = xor i1 %tobool1863, true
  %lnot.ext1865 = zext i1 %lnot1864 to i32
  %cmp1866 = icmp eq i32 %789, %lnot.ext1865
  br i1 %cmp1866, label %if.then1868, label %if.else1877

if.then1868:                                      ; preds = %if.end1858
  %792 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %intuit1869 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %792, i32 0, i32 12
  %793 = load i8, i8* %intuit1869, align 8
  %tobool1870 = trunc i8 %793 to i1
  br i1 %tobool1870, label %if.then1875, label %lor.lhs.false1872

lor.lhs.false1872:                                ; preds = %if.then1868
  %794 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %call1873 = call i32 @S_regtry(%struct.regmatch_info* %794, i8** %s.addr)
  %tobool1874 = icmp ne i32 %call1873, 0
  br i1 %tobool1874, label %if.then1875, label %if.end1876

if.then1875:                                      ; preds = %lor.lhs.false1872, %if.then1868
  br label %got_it

if.end1876:                                       ; preds = %lor.lhs.false1872
  br label %if.end1878

if.else1877:                                      ; preds = %if.end1858
  br label %if.end1878

if.end1878:                                       ; preds = %if.else1877, %if.end1876
  br label %sw.epilog

sw.bb1879:                                        ; preds = %do_boundu
  %795 = load i8*, i8** %s.addr, align 8
  %796 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg1880 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %796, i32 0, i32 1
  %797 = load i8*, i8** %strbeg1880, align 8
  %cmp1881 = icmp eq i8* %795, %797
  br i1 %cmp1881, label %if.then1883, label %if.end1910

if.then1883:                                      ; preds = %sw.bb1879
  %798 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %intuit1884 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %798, i32 0, i32 12
  %799 = load i8, i8* %intuit1884, align 8
  %tobool1885 = trunc i8 %799 to i1
  br i1 %tobool1885, label %if.then1890, label %lor.lhs.false1887

lor.lhs.false1887:                                ; preds = %if.then1883
  %800 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %call1888 = call i32 @S_regtry(%struct.regmatch_info* %800, i8** %s.addr)
  %tobool1889 = icmp ne i32 %call1888, 0
  br i1 %tobool1889, label %if.then1890, label %if.end1891

if.then1890:                                      ; preds = %lor.lhs.false1887, %if.then1883
  br label %got_it

if.end1891:                                       ; preds = %lor.lhs.false1887
  %801 = load i8, i8* %utf8_target, align 1
  %tobool1892 = trunc i8 %801 to i1
  br i1 %tobool1892, label %cond.true1894, label %cond.false1898

cond.true1894:                                    ; preds = %if.end1891
  %802 = load i8*, i8** %s.addr, align 8
  %803 = load i8, i8* %802, align 1
  %idxprom1895 = zext i8 %803 to i64
  %arrayidx1896 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom1895
  %804 = load i8, i8* %arrayidx1896, align 1
  %conv1897 = zext i8 %804 to i32
  br label %cond.end1899

cond.false1898:                                   ; preds = %if.end1891
  br label %cond.end1899

cond.end1899:                                     ; preds = %cond.false1898, %cond.true1894
  %cond1900 = phi i32 [ %conv1897, %cond.true1894 ], [ 1, %cond.false1898 ]
  %805 = load i8*, i8** %s.addr, align 8
  %idx.ext1901 = sext i32 %cond1900 to i64
  %add.ptr1902 = getelementptr inbounds i8, i8* %805, i64 %idx.ext1901
  store i8* %add.ptr1902, i8** %s.addr, align 8
  %806 = load i8*, i8** %s.addr, align 8
  %807 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend1903 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %807, i32 0, i32 2
  %808 = load i8*, i8** %strend1903, align 8
  %cmp1904 = icmp uge i8* %806, %808
  br i1 %cmp1904, label %cond.true1906, label %cond.false1907

cond.true1906:                                    ; preds = %cond.end1899
  br i1 true, label %if.then1908, label %if.end1909

cond.false1907:                                   ; preds = %cond.end1899
  br i1 false, label %if.then1908, label %if.end1909

if.then1908:                                      ; preds = %cond.false1907, %cond.true1906
  br label %sw.epilog

if.end1909:                                       ; preds = %cond.false1907, %cond.true1906
  br label %if.end1910

if.end1910:                                       ; preds = %if.end1909, %sw.bb1879
  %809 = load i8, i8* %utf8_target, align 1
  %tobool1911 = trunc i8 %809 to i1
  br i1 %tobool1911, label %if.then1912, label %if.else1961

if.then1912:                                      ; preds = %if.end1910
  %810 = load %struct.sv*, %struct.sv** @PL_GCB_invlist, align 8
  %811 = load i8*, i8** %s.addr, align 8
  %812 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg1913 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %812, i32 0, i32 1
  %813 = load i8*, i8** %strbeg1913, align 8
  %call1914 = call i8* @S_reghop3(i8* %811, i64 -1, i8* %813)
  %814 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend1915 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %814, i32 0, i32 2
  %815 = load i8*, i8** %strend1915, align 8
  %816 = load i8*, i8** %s.addr, align 8
  %817 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg1916 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %817, i32 0, i32 1
  %818 = load i8*, i8** %strbeg1916, align 8
  %call1917 = call i8* @S_reghop3(i8* %816, i64 -1, i8* %818)
  %sub.ptr.lhs.cast1918 = ptrtoint i8* %815 to i64
  %sub.ptr.rhs.cast1919 = ptrtoint i8* %call1917 to i64
  %sub.ptr.sub1920 = sub i64 %sub.ptr.lhs.cast1918, %sub.ptr.rhs.cast1919
  %call1921 = call zeroext i1 @Perl_ckwarn_d(i32 44)
  %819 = zext i1 %call1921 to i64
  %cond1923 = select i1 %call1921, i32 0, i32 -8161
  %call1924 = call i64 @Perl_utf8n_to_uvchr(i8* %call1914, i64 %sub.ptr.sub1920, i64* null, i32 %cond1923)
  %call1925 = call i64 @Perl__invlist_search(%struct.sv* %810, i64 %call1924)
  %arrayidx1926 = getelementptr inbounds [1484 x i32], [1484 x i32]* @Grapheme_Cluster_Break_invmap, i64 0, i64 %call1925
  %820 = load i32, i32* %arrayidx1926, align 4
  store i32 %820, i32* %before, align 4
  br label %while.cond1927

while.cond1927:                                   ; preds = %if.end1954, %if.then1912
  %821 = load i8*, i8** %s.addr, align 8
  %822 = load i8*, i8** %strend.addr, align 8
  %cmp1928 = icmp ult i8* %821, %822
  br i1 %cmp1928, label %while.body1930, label %while.end1960

while.body1930:                                   ; preds = %while.cond1927
  %823 = load %struct.sv*, %struct.sv** @PL_GCB_invlist, align 8
  %824 = load i8*, i8** %s.addr, align 8
  %825 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend1931 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %825, i32 0, i32 2
  %826 = load i8*, i8** %strend1931, align 8
  %827 = load i8*, i8** %s.addr, align 8
  %sub.ptr.lhs.cast1932 = ptrtoint i8* %826 to i64
  %sub.ptr.rhs.cast1933 = ptrtoint i8* %827 to i64
  %sub.ptr.sub1934 = sub i64 %sub.ptr.lhs.cast1932, %sub.ptr.rhs.cast1933
  %call1935 = call zeroext i1 @Perl_ckwarn_d(i32 44)
  %828 = zext i1 %call1935 to i64
  %cond1937 = select i1 %call1935, i32 0, i32 -8161
  %call1938 = call i64 @Perl_utf8n_to_uvchr(i8* %824, i64 %sub.ptr.sub1934, i64* null, i32 %cond1937)
  %call1939 = call i64 @Perl__invlist_search(%struct.sv* %823, i64 %call1938)
  %arrayidx1940 = getelementptr inbounds [1484 x i32], [1484 x i32]* @Grapheme_Cluster_Break_invmap, i64 0, i64 %call1939
  %829 = load i32, i32* %arrayidx1940, align 4
  store i32 %829, i32* %after, align 4
  %830 = load i8, i8* %to_complement, align 1
  %tobool1941 = trunc i8 %830 to i1
  %conv1942 = zext i1 %tobool1941 to i32
  %831 = load i32, i32* %before, align 4
  %832 = load i32, i32* %after, align 4
  %call1943 = call zeroext i1 @S_isGCB(i32 %831, i32 %832)
  %conv1944 = zext i1 %call1943 to i32
  %xor = xor i32 %conv1942, %conv1944
  %tobool1945 = icmp ne i32 %xor, 0
  br i1 %tobool1945, label %land.lhs.true1946, label %if.end1954

land.lhs.true1946:                                ; preds = %while.body1930
  %833 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %intuit1947 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %833, i32 0, i32 12
  %834 = load i8, i8* %intuit1947, align 8
  %tobool1948 = trunc i8 %834 to i1
  br i1 %tobool1948, label %if.then1953, label %lor.lhs.false1950

lor.lhs.false1950:                                ; preds = %land.lhs.true1946
  %835 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %call1951 = call i32 @S_regtry(%struct.regmatch_info* %835, i8** %s.addr)
  %tobool1952 = icmp ne i32 %call1951, 0
  br i1 %tobool1952, label %if.then1953, label %if.end1954

if.then1953:                                      ; preds = %lor.lhs.false1950, %land.lhs.true1946
  br label %got_it

if.end1954:                                       ; preds = %lor.lhs.false1950, %while.body1930
  %836 = load i32, i32* %after, align 4
  store i32 %836, i32* %before, align 4
  %837 = load i8*, i8** %s.addr, align 8
  %838 = load i8, i8* %837, align 1
  %idxprom1955 = zext i8 %838 to i64
  %arrayidx1956 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom1955
  %839 = load i8, i8* %arrayidx1956, align 1
  %conv1957 = zext i8 %839 to i32
  %840 = load i8*, i8** %s.addr, align 8
  %idx.ext1958 = sext i32 %conv1957 to i64
  %add.ptr1959 = getelementptr inbounds i8, i8* %840, i64 %idx.ext1958
  store i8* %add.ptr1959, i8** %s.addr, align 8
  br label %while.cond1927

while.end1960:                                    ; preds = %while.cond1927
  br label %if.end1990

if.else1961:                                      ; preds = %if.end1910
  br label %while.cond1962

while.cond1962:                                   ; preds = %if.end1987, %if.else1961
  %841 = load i8*, i8** %s.addr, align 8
  %842 = load i8*, i8** %strend.addr, align 8
  %cmp1963 = icmp ult i8* %841, %842
  br i1 %cmp1963, label %while.body1965, label %while.end1989

while.body1965:                                   ; preds = %while.cond1962
  %843 = load i8, i8* %to_complement, align 1
  %tobool1966 = trunc i8 %843 to i1
  %conv1967 = zext i1 %tobool1966 to i32
  %844 = load i8*, i8** %s.addr, align 8
  %add.ptr1968 = getelementptr inbounds i8, i8* %844, i64 -1
  %845 = load i8, i8* %add.ptr1968, align 1
  %conv1969 = zext i8 %845 to i32
  %cmp1970 = icmp ne i32 %conv1969, 13
  br i1 %cmp1970, label %lor.end1976, label %lor.rhs1972

lor.rhs1972:                                      ; preds = %while.body1965
  %846 = load i8*, i8** %s.addr, align 8
  %847 = load i8, i8* %846, align 1
  %conv1973 = zext i8 %847 to i32
  %cmp1974 = icmp ne i32 %conv1973, 10
  br label %lor.end1976

lor.end1976:                                      ; preds = %lor.rhs1972, %while.body1965
  %848 = phi i1 [ true, %while.body1965 ], [ %cmp1974, %lor.rhs1972 ]
  %lor.ext = zext i1 %848 to i32
  %xor1977 = xor i32 %conv1967, %lor.ext
  %tobool1978 = icmp ne i32 %xor1977, 0
  br i1 %tobool1978, label %land.lhs.true1979, label %if.end1987

land.lhs.true1979:                                ; preds = %lor.end1976
  %849 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %intuit1980 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %849, i32 0, i32 12
  %850 = load i8, i8* %intuit1980, align 8
  %tobool1981 = trunc i8 %850 to i1
  br i1 %tobool1981, label %if.then1986, label %lor.lhs.false1983

lor.lhs.false1983:                                ; preds = %land.lhs.true1979
  %851 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %call1984 = call i32 @S_regtry(%struct.regmatch_info* %851, i8** %s.addr)
  %tobool1985 = icmp ne i32 %call1984, 0
  br i1 %tobool1985, label %if.then1986, label %if.end1987

if.then1986:                                      ; preds = %lor.lhs.false1983, %land.lhs.true1979
  br label %got_it

if.end1987:                                       ; preds = %lor.lhs.false1983, %lor.end1976
  %852 = load i8*, i8** %s.addr, align 8
  %incdec.ptr1988 = getelementptr inbounds i8, i8* %852, i32 1
  store i8* %incdec.ptr1988, i8** %s.addr, align 8
  br label %while.cond1962

while.end1989:                                    ; preds = %while.cond1962
  br label %if.end1990

if.end1990:                                       ; preds = %while.end1989, %while.end1960
  %853 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %intuit1991 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %853, i32 0, i32 12
  %854 = load i8, i8* %intuit1991, align 8
  %tobool1992 = trunc i8 %854 to i1
  br i1 %tobool1992, label %if.then1997, label %lor.lhs.false1994

lor.lhs.false1994:                                ; preds = %if.end1990
  %855 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %call1995 = call i32 @S_regtry(%struct.regmatch_info* %855, i8** %s.addr)
  %tobool1996 = icmp ne i32 %call1995, 0
  br i1 %tobool1996, label %if.then1997, label %if.end1998

if.then1997:                                      ; preds = %lor.lhs.false1994, %if.end1990
  br label %got_it

if.end1998:                                       ; preds = %lor.lhs.false1994
  br label %sw.epilog

sw.bb1999:                                        ; preds = %do_boundu
  %856 = load i8*, i8** %s.addr, align 8
  %857 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg2000 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %857, i32 0, i32 1
  %858 = load i8*, i8** %strbeg2000, align 8
  %cmp2001 = icmp eq i8* %856, %858
  br i1 %cmp2001, label %if.then2003, label %if.end2030

if.then2003:                                      ; preds = %sw.bb1999
  %859 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %intuit2004 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %859, i32 0, i32 12
  %860 = load i8, i8* %intuit2004, align 8
  %tobool2005 = trunc i8 %860 to i1
  br i1 %tobool2005, label %if.then2010, label %lor.lhs.false2007

lor.lhs.false2007:                                ; preds = %if.then2003
  %861 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %call2008 = call i32 @S_regtry(%struct.regmatch_info* %861, i8** %s.addr)
  %tobool2009 = icmp ne i32 %call2008, 0
  br i1 %tobool2009, label %if.then2010, label %if.end2011

if.then2010:                                      ; preds = %lor.lhs.false2007, %if.then2003
  br label %got_it

if.end2011:                                       ; preds = %lor.lhs.false2007
  %862 = load i8, i8* %utf8_target, align 1
  %tobool2012 = trunc i8 %862 to i1
  br i1 %tobool2012, label %cond.true2014, label %cond.false2018

cond.true2014:                                    ; preds = %if.end2011
  %863 = load i8*, i8** %s.addr, align 8
  %864 = load i8, i8* %863, align 1
  %idxprom2015 = zext i8 %864 to i64
  %arrayidx2016 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom2015
  %865 = load i8, i8* %arrayidx2016, align 1
  %conv2017 = zext i8 %865 to i32
  br label %cond.end2019

cond.false2018:                                   ; preds = %if.end2011
  br label %cond.end2019

cond.end2019:                                     ; preds = %cond.false2018, %cond.true2014
  %cond2020 = phi i32 [ %conv2017, %cond.true2014 ], [ 1, %cond.false2018 ]
  %866 = load i8*, i8** %s.addr, align 8
  %idx.ext2021 = sext i32 %cond2020 to i64
  %add.ptr2022 = getelementptr inbounds i8, i8* %866, i64 %idx.ext2021
  store i8* %add.ptr2022, i8** %s.addr, align 8
  %867 = load i8*, i8** %s.addr, align 8
  %868 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend2023 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %868, i32 0, i32 2
  %869 = load i8*, i8** %strend2023, align 8
  %cmp2024 = icmp uge i8* %867, %869
  br i1 %cmp2024, label %cond.true2026, label %cond.false2027

cond.true2026:                                    ; preds = %cond.end2019
  br i1 true, label %if.then2028, label %if.end2029

cond.false2027:                                   ; preds = %cond.end2019
  br i1 false, label %if.then2028, label %if.end2029

if.then2028:                                      ; preds = %cond.false2027, %cond.true2026
  br label %sw.epilog

if.end2029:                                       ; preds = %cond.false2027, %cond.true2026
  br label %if.end2030

if.end2030:                                       ; preds = %if.end2029, %sw.bb1999
  %870 = load i8, i8* %utf8_target, align 1
  %tobool2031 = trunc i8 %870 to i1
  br i1 %tobool2031, label %if.then2032, label %if.else2087

if.then2032:                                      ; preds = %if.end2030
  %871 = load %struct.sv*, %struct.sv** @PL_SB_invlist, align 8
  %872 = load i8*, i8** %s.addr, align 8
  %873 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg2034 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %873, i32 0, i32 1
  %874 = load i8*, i8** %strbeg2034, align 8
  %call2035 = call i8* @S_reghop3(i8* %872, i64 -1, i8* %874)
  %875 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend2036 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %875, i32 0, i32 2
  %876 = load i8*, i8** %strend2036, align 8
  %877 = load i8*, i8** %s.addr, align 8
  %878 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg2037 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %878, i32 0, i32 1
  %879 = load i8*, i8** %strbeg2037, align 8
  %call2038 = call i8* @S_reghop3(i8* %877, i64 -1, i8* %879)
  %sub.ptr.lhs.cast2039 = ptrtoint i8* %876 to i64
  %sub.ptr.rhs.cast2040 = ptrtoint i8* %call2038 to i64
  %sub.ptr.sub2041 = sub i64 %sub.ptr.lhs.cast2039, %sub.ptr.rhs.cast2040
  %call2042 = call zeroext i1 @Perl_ckwarn_d(i32 44)
  %880 = zext i1 %call2042 to i64
  %cond2044 = select i1 %call2042, i32 0, i32 -8161
  %call2045 = call i64 @Perl_utf8n_to_uvchr(i8* %call2035, i64 %sub.ptr.sub2041, i64* null, i32 %cond2044)
  %call2046 = call i64 @Perl__invlist_search(%struct.sv* %871, i64 %call2045)
  %arrayidx2047 = getelementptr inbounds [2835 x i32], [2835 x i32]* @Sentence_Break_invmap, i64 0, i64 %call2046
  %881 = load i32, i32* %arrayidx2047, align 4
  store i32 %881, i32* %before2033, align 4
  br label %while.cond2048

while.cond2048:                                   ; preds = %if.end2080, %if.then2032
  %882 = load i8*, i8** %s.addr, align 8
  %883 = load i8*, i8** %strend.addr, align 8
  %cmp2049 = icmp ult i8* %882, %883
  br i1 %cmp2049, label %while.body2051, label %while.end2086

while.body2051:                                   ; preds = %while.cond2048
  %884 = load %struct.sv*, %struct.sv** @PL_SB_invlist, align 8
  %885 = load i8*, i8** %s.addr, align 8
  %886 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend2053 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %886, i32 0, i32 2
  %887 = load i8*, i8** %strend2053, align 8
  %888 = load i8*, i8** %s.addr, align 8
  %sub.ptr.lhs.cast2054 = ptrtoint i8* %887 to i64
  %sub.ptr.rhs.cast2055 = ptrtoint i8* %888 to i64
  %sub.ptr.sub2056 = sub i64 %sub.ptr.lhs.cast2054, %sub.ptr.rhs.cast2055
  %call2057 = call zeroext i1 @Perl_ckwarn_d(i32 44)
  %889 = zext i1 %call2057 to i64
  %cond2059 = select i1 %call2057, i32 0, i32 -8161
  %call2060 = call i64 @Perl_utf8n_to_uvchr(i8* %885, i64 %sub.ptr.sub2056, i64* null, i32 %cond2059)
  %call2061 = call i64 @Perl__invlist_search(%struct.sv* %884, i64 %call2060)
  %arrayidx2062 = getelementptr inbounds [2835 x i32], [2835 x i32]* @Sentence_Break_invmap, i64 0, i64 %call2061
  %890 = load i32, i32* %arrayidx2062, align 4
  store i32 %890, i32* %after2052, align 4
  %891 = load i8, i8* %to_complement, align 1
  %tobool2063 = trunc i8 %891 to i1
  %conv2064 = zext i1 %tobool2063 to i32
  %892 = load i32, i32* %before2033, align 4
  %893 = load i32, i32* %after2052, align 4
  %894 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg2065 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %894, i32 0, i32 1
  %895 = load i8*, i8** %strbeg2065, align 8
  %896 = load i8*, i8** %s.addr, align 8
  %897 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend2066 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %897, i32 0, i32 2
  %898 = load i8*, i8** %strend2066, align 8
  %899 = load i8, i8* %utf8_target, align 1
  %tobool2067 = trunc i8 %899 to i1
  %call2068 = call zeroext i1 @S_isSB(i32 %892, i32 %893, i8* %895, i8* %896, i8* %898, i1 zeroext %tobool2067)
  %conv2069 = zext i1 %call2068 to i32
  %xor2070 = xor i32 %conv2064, %conv2069
  %tobool2071 = icmp ne i32 %xor2070, 0
  br i1 %tobool2071, label %land.lhs.true2072, label %if.end2080

land.lhs.true2072:                                ; preds = %while.body2051
  %900 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %intuit2073 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %900, i32 0, i32 12
  %901 = load i8, i8* %intuit2073, align 8
  %tobool2074 = trunc i8 %901 to i1
  br i1 %tobool2074, label %if.then2079, label %lor.lhs.false2076

lor.lhs.false2076:                                ; preds = %land.lhs.true2072
  %902 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %call2077 = call i32 @S_regtry(%struct.regmatch_info* %902, i8** %s.addr)
  %tobool2078 = icmp ne i32 %call2077, 0
  br i1 %tobool2078, label %if.then2079, label %if.end2080

if.then2079:                                      ; preds = %lor.lhs.false2076, %land.lhs.true2072
  br label %got_it

if.end2080:                                       ; preds = %lor.lhs.false2076, %while.body2051
  %903 = load i32, i32* %after2052, align 4
  store i32 %903, i32* %before2033, align 4
  %904 = load i8*, i8** %s.addr, align 8
  %905 = load i8, i8* %904, align 1
  %idxprom2081 = zext i8 %905 to i64
  %arrayidx2082 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom2081
  %906 = load i8, i8* %arrayidx2082, align 1
  %conv2083 = zext i8 %906 to i32
  %907 = load i8*, i8** %s.addr, align 8
  %idx.ext2084 = sext i32 %conv2083 to i64
  %add.ptr2085 = getelementptr inbounds i8, i8* %907, i64 %idx.ext2084
  store i8* %add.ptr2085, i8** %s.addr, align 8
  br label %while.cond2048

while.end2086:                                    ; preds = %while.cond2048
  br label %if.end2121

if.else2087:                                      ; preds = %if.end2030
  %908 = load %struct.sv*, %struct.sv** @PL_SB_invlist, align 8
  %909 = load i8*, i8** %s.addr, align 8
  %add.ptr2089 = getelementptr inbounds i8, i8* %909, i64 -1
  %910 = load i8, i8* %add.ptr2089, align 1
  %conv2090 = zext i8 %910 to i64
  %call2091 = call i64 @Perl__invlist_search(%struct.sv* %908, i64 %conv2090)
  %arrayidx2092 = getelementptr inbounds [2835 x i32], [2835 x i32]* @Sentence_Break_invmap, i64 0, i64 %call2091
  %911 = load i32, i32* %arrayidx2092, align 4
  store i32 %911, i32* %before2088, align 4
  br label %while.cond2093

while.cond2093:                                   ; preds = %if.end2118, %if.else2087
  %912 = load i8*, i8** %s.addr, align 8
  %913 = load i8*, i8** %strend.addr, align 8
  %cmp2094 = icmp ult i8* %912, %913
  br i1 %cmp2094, label %while.body2096, label %while.end2120

while.body2096:                                   ; preds = %while.cond2093
  %914 = load %struct.sv*, %struct.sv** @PL_SB_invlist, align 8
  %915 = load i8*, i8** %s.addr, align 8
  %916 = load i8, i8* %915, align 1
  %conv2098 = zext i8 %916 to i64
  %call2099 = call i64 @Perl__invlist_search(%struct.sv* %914, i64 %conv2098)
  %arrayidx2100 = getelementptr inbounds [2835 x i32], [2835 x i32]* @Sentence_Break_invmap, i64 0, i64 %call2099
  %917 = load i32, i32* %arrayidx2100, align 4
  store i32 %917, i32* %after2097, align 4
  %918 = load i8, i8* %to_complement, align 1
  %tobool2101 = trunc i8 %918 to i1
  %conv2102 = zext i1 %tobool2101 to i32
  %919 = load i32, i32* %before2088, align 4
  %920 = load i32, i32* %after2097, align 4
  %921 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg2103 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %921, i32 0, i32 1
  %922 = load i8*, i8** %strbeg2103, align 8
  %923 = load i8*, i8** %s.addr, align 8
  %924 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend2104 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %924, i32 0, i32 2
  %925 = load i8*, i8** %strend2104, align 8
  %926 = load i8, i8* %utf8_target, align 1
  %tobool2105 = trunc i8 %926 to i1
  %call2106 = call zeroext i1 @S_isSB(i32 %919, i32 %920, i8* %922, i8* %923, i8* %925, i1 zeroext %tobool2105)
  %conv2107 = zext i1 %call2106 to i32
  %xor2108 = xor i32 %conv2102, %conv2107
  %tobool2109 = icmp ne i32 %xor2108, 0
  br i1 %tobool2109, label %land.lhs.true2110, label %if.end2118

land.lhs.true2110:                                ; preds = %while.body2096
  %927 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %intuit2111 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %927, i32 0, i32 12
  %928 = load i8, i8* %intuit2111, align 8
  %tobool2112 = trunc i8 %928 to i1
  br i1 %tobool2112, label %if.then2117, label %lor.lhs.false2114

lor.lhs.false2114:                                ; preds = %land.lhs.true2110
  %929 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %call2115 = call i32 @S_regtry(%struct.regmatch_info* %929, i8** %s.addr)
  %tobool2116 = icmp ne i32 %call2115, 0
  br i1 %tobool2116, label %if.then2117, label %if.end2118

if.then2117:                                      ; preds = %lor.lhs.false2114, %land.lhs.true2110
  br label %got_it

if.end2118:                                       ; preds = %lor.lhs.false2114, %while.body2096
  %930 = load i32, i32* %after2097, align 4
  store i32 %930, i32* %before2088, align 4
  %931 = load i8*, i8** %s.addr, align 8
  %incdec.ptr2119 = getelementptr inbounds i8, i8* %931, i32 1
  store i8* %incdec.ptr2119, i8** %s.addr, align 8
  br label %while.cond2093

while.end2120:                                    ; preds = %while.cond2093
  br label %if.end2121

if.end2121:                                       ; preds = %while.end2120, %while.end2086
  %932 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %intuit2122 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %932, i32 0, i32 12
  %933 = load i8, i8* %intuit2122, align 8
  %tobool2123 = trunc i8 %933 to i1
  br i1 %tobool2123, label %if.then2128, label %lor.lhs.false2125

lor.lhs.false2125:                                ; preds = %if.end2121
  %934 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %call2126 = call i32 @S_regtry(%struct.regmatch_info* %934, i8** %s.addr)
  %tobool2127 = icmp ne i32 %call2126, 0
  br i1 %tobool2127, label %if.then2128, label %if.end2129

if.then2128:                                      ; preds = %lor.lhs.false2125, %if.end2121
  br label %got_it

if.end2129:                                       ; preds = %lor.lhs.false2125
  br label %sw.epilog

sw.bb2130:                                        ; preds = %do_boundu
  %935 = load i8*, i8** %s.addr, align 8
  %936 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg2131 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %936, i32 0, i32 1
  %937 = load i8*, i8** %strbeg2131, align 8
  %cmp2132 = icmp eq i8* %935, %937
  br i1 %cmp2132, label %if.then2134, label %if.end2161

if.then2134:                                      ; preds = %sw.bb2130
  %938 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %intuit2135 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %938, i32 0, i32 12
  %939 = load i8, i8* %intuit2135, align 8
  %tobool2136 = trunc i8 %939 to i1
  br i1 %tobool2136, label %if.then2141, label %lor.lhs.false2138

lor.lhs.false2138:                                ; preds = %if.then2134
  %940 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %call2139 = call i32 @S_regtry(%struct.regmatch_info* %940, i8** %s.addr)
  %tobool2140 = icmp ne i32 %call2139, 0
  br i1 %tobool2140, label %if.then2141, label %if.end2142

if.then2141:                                      ; preds = %lor.lhs.false2138, %if.then2134
  br label %got_it

if.end2142:                                       ; preds = %lor.lhs.false2138
  %941 = load i8, i8* %utf8_target, align 1
  %tobool2143 = trunc i8 %941 to i1
  br i1 %tobool2143, label %cond.true2145, label %cond.false2149

cond.true2145:                                    ; preds = %if.end2142
  %942 = load i8*, i8** %s.addr, align 8
  %943 = load i8, i8* %942, align 1
  %idxprom2146 = zext i8 %943 to i64
  %arrayidx2147 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom2146
  %944 = load i8, i8* %arrayidx2147, align 1
  %conv2148 = zext i8 %944 to i32
  br label %cond.end2150

cond.false2149:                                   ; preds = %if.end2142
  br label %cond.end2150

cond.end2150:                                     ; preds = %cond.false2149, %cond.true2145
  %cond2151 = phi i32 [ %conv2148, %cond.true2145 ], [ 1, %cond.false2149 ]
  %945 = load i8*, i8** %s.addr, align 8
  %idx.ext2152 = sext i32 %cond2151 to i64
  %add.ptr2153 = getelementptr inbounds i8, i8* %945, i64 %idx.ext2152
  store i8* %add.ptr2153, i8** %s.addr, align 8
  %946 = load i8*, i8** %s.addr, align 8
  %947 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend2154 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %947, i32 0, i32 2
  %948 = load i8*, i8** %strend2154, align 8
  %cmp2155 = icmp uge i8* %946, %948
  br i1 %cmp2155, label %cond.true2157, label %cond.false2158

cond.true2157:                                    ; preds = %cond.end2150
  br i1 true, label %if.then2159, label %if.end2160

cond.false2158:                                   ; preds = %cond.end2150
  br i1 false, label %if.then2159, label %if.end2160

if.then2159:                                      ; preds = %cond.false2158, %cond.true2157
  br label %sw.epilog

if.end2160:                                       ; preds = %cond.false2158, %cond.true2157
  br label %if.end2161

if.end2161:                                       ; preds = %if.end2160, %sw.bb2130
  %949 = load i8, i8* %utf8_target, align 1
  %tobool2162 = trunc i8 %949 to i1
  br i1 %tobool2162, label %if.then2163, label %if.else2218

if.then2163:                                      ; preds = %if.end2161
  store i32 18, i32* %previous, align 4
  %950 = load %struct.sv*, %struct.sv** @PL_WB_invlist, align 8
  %951 = load i8*, i8** %s.addr, align 8
  %952 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg2165 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %952, i32 0, i32 1
  %953 = load i8*, i8** %strbeg2165, align 8
  %call2166 = call i8* @S_reghop3(i8* %951, i64 -1, i8* %953)
  %954 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend2167 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %954, i32 0, i32 2
  %955 = load i8*, i8** %strend2167, align 8
  %956 = load i8*, i8** %s.addr, align 8
  %957 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg2168 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %957, i32 0, i32 1
  %958 = load i8*, i8** %strbeg2168, align 8
  %call2169 = call i8* @S_reghop3(i8* %956, i64 -1, i8* %958)
  %sub.ptr.lhs.cast2170 = ptrtoint i8* %955 to i64
  %sub.ptr.rhs.cast2171 = ptrtoint i8* %call2169 to i64
  %sub.ptr.sub2172 = sub i64 %sub.ptr.lhs.cast2170, %sub.ptr.rhs.cast2171
  %call2173 = call zeroext i1 @Perl_ckwarn_d(i32 44)
  %959 = zext i1 %call2173 to i64
  %cond2175 = select i1 %call2173, i32 0, i32 -8161
  %call2176 = call i64 @Perl_utf8n_to_uvchr(i8* %call2166, i64 %sub.ptr.sub2172, i64* null, i32 %cond2175)
  %call2177 = call i64 @Perl__invlist_search(%struct.sv* %950, i64 %call2176)
  %arrayidx2178 = getelementptr inbounds [1480 x i32], [1480 x i32]* @Word_Break_invmap, i64 0, i64 %call2177
  %960 = load i32, i32* %arrayidx2178, align 4
  store i32 %960, i32* %before2164, align 4
  br label %while.cond2179

while.cond2179:                                   ; preds = %if.end2211, %if.then2163
  %961 = load i8*, i8** %s.addr, align 8
  %962 = load i8*, i8** %strend.addr, align 8
  %cmp2180 = icmp ult i8* %961, %962
  br i1 %cmp2180, label %while.body2182, label %while.end2217

while.body2182:                                   ; preds = %while.cond2179
  %963 = load %struct.sv*, %struct.sv** @PL_WB_invlist, align 8
  %964 = load i8*, i8** %s.addr, align 8
  %965 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend2184 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %965, i32 0, i32 2
  %966 = load i8*, i8** %strend2184, align 8
  %967 = load i8*, i8** %s.addr, align 8
  %sub.ptr.lhs.cast2185 = ptrtoint i8* %966 to i64
  %sub.ptr.rhs.cast2186 = ptrtoint i8* %967 to i64
  %sub.ptr.sub2187 = sub i64 %sub.ptr.lhs.cast2185, %sub.ptr.rhs.cast2186
  %call2188 = call zeroext i1 @Perl_ckwarn_d(i32 44)
  %968 = zext i1 %call2188 to i64
  %cond2190 = select i1 %call2188, i32 0, i32 -8161
  %call2191 = call i64 @Perl_utf8n_to_uvchr(i8* %964, i64 %sub.ptr.sub2187, i64* null, i32 %cond2190)
  %call2192 = call i64 @Perl__invlist_search(%struct.sv* %963, i64 %call2191)
  %arrayidx2193 = getelementptr inbounds [1480 x i32], [1480 x i32]* @Word_Break_invmap, i64 0, i64 %call2192
  %969 = load i32, i32* %arrayidx2193, align 4
  store i32 %969, i32* %after2183, align 4
  %970 = load i8, i8* %to_complement, align 1
  %tobool2194 = trunc i8 %970 to i1
  %conv2195 = zext i1 %tobool2194 to i32
  %971 = load i32, i32* %previous, align 4
  %972 = load i32, i32* %before2164, align 4
  %973 = load i32, i32* %after2183, align 4
  %974 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg2196 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %974, i32 0, i32 1
  %975 = load i8*, i8** %strbeg2196, align 8
  %976 = load i8*, i8** %s.addr, align 8
  %977 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend2197 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %977, i32 0, i32 2
  %978 = load i8*, i8** %strend2197, align 8
  %979 = load i8, i8* %utf8_target, align 1
  %tobool2198 = trunc i8 %979 to i1
  %call2199 = call zeroext i1 @S_isWB(i32 %971, i32 %972, i32 %973, i8* %975, i8* %976, i8* %978, i1 zeroext %tobool2198)
  %conv2200 = zext i1 %call2199 to i32
  %xor2201 = xor i32 %conv2195, %conv2200
  %tobool2202 = icmp ne i32 %xor2201, 0
  br i1 %tobool2202, label %land.lhs.true2203, label %if.end2211

land.lhs.true2203:                                ; preds = %while.body2182
  %980 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %intuit2204 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %980, i32 0, i32 12
  %981 = load i8, i8* %intuit2204, align 8
  %tobool2205 = trunc i8 %981 to i1
  br i1 %tobool2205, label %if.then2210, label %lor.lhs.false2207

lor.lhs.false2207:                                ; preds = %land.lhs.true2203
  %982 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %call2208 = call i32 @S_regtry(%struct.regmatch_info* %982, i8** %s.addr)
  %tobool2209 = icmp ne i32 %call2208, 0
  br i1 %tobool2209, label %if.then2210, label %if.end2211

if.then2210:                                      ; preds = %lor.lhs.false2207, %land.lhs.true2203
  br label %got_it

if.end2211:                                       ; preds = %lor.lhs.false2207, %while.body2182
  %983 = load i32, i32* %before2164, align 4
  store i32 %983, i32* %previous, align 4
  %984 = load i32, i32* %after2183, align 4
  store i32 %984, i32* %before2164, align 4
  %985 = load i8*, i8** %s.addr, align 8
  %986 = load i8, i8* %985, align 1
  %idxprom2212 = zext i8 %986 to i64
  %arrayidx2213 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom2212
  %987 = load i8, i8* %arrayidx2213, align 1
  %conv2214 = zext i8 %987 to i32
  %988 = load i8*, i8** %s.addr, align 8
  %idx.ext2215 = sext i32 %conv2214 to i64
  %add.ptr2216 = getelementptr inbounds i8, i8* %988, i64 %idx.ext2215
  store i8* %add.ptr2216, i8** %s.addr, align 8
  br label %while.cond2179

while.end2217:                                    ; preds = %while.cond2179
  br label %if.end2253

if.else2218:                                      ; preds = %if.end2161
  store i32 18, i32* %previous2219, align 4
  %989 = load %struct.sv*, %struct.sv** @PL_WB_invlist, align 8
  %990 = load i8*, i8** %s.addr, align 8
  %add.ptr2221 = getelementptr inbounds i8, i8* %990, i64 -1
  %991 = load i8, i8* %add.ptr2221, align 1
  %conv2222 = zext i8 %991 to i64
  %call2223 = call i64 @Perl__invlist_search(%struct.sv* %989, i64 %conv2222)
  %arrayidx2224 = getelementptr inbounds [1480 x i32], [1480 x i32]* @Word_Break_invmap, i64 0, i64 %call2223
  %992 = load i32, i32* %arrayidx2224, align 4
  store i32 %992, i32* %before2220, align 4
  br label %while.cond2225

while.cond2225:                                   ; preds = %if.end2250, %if.else2218
  %993 = load i8*, i8** %s.addr, align 8
  %994 = load i8*, i8** %strend.addr, align 8
  %cmp2226 = icmp ult i8* %993, %994
  br i1 %cmp2226, label %while.body2228, label %while.end2252

while.body2228:                                   ; preds = %while.cond2225
  %995 = load %struct.sv*, %struct.sv** @PL_WB_invlist, align 8
  %996 = load i8*, i8** %s.addr, align 8
  %997 = load i8, i8* %996, align 1
  %conv2230 = zext i8 %997 to i64
  %call2231 = call i64 @Perl__invlist_search(%struct.sv* %995, i64 %conv2230)
  %arrayidx2232 = getelementptr inbounds [1480 x i32], [1480 x i32]* @Word_Break_invmap, i64 0, i64 %call2231
  %998 = load i32, i32* %arrayidx2232, align 4
  store i32 %998, i32* %after2229, align 4
  %999 = load i8, i8* %to_complement, align 1
  %tobool2233 = trunc i8 %999 to i1
  %conv2234 = zext i1 %tobool2233 to i32
  %1000 = load i32, i32* %previous2219, align 4
  %1001 = load i32, i32* %before2220, align 4
  %1002 = load i32, i32* %after2229, align 4
  %1003 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg2235 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %1003, i32 0, i32 1
  %1004 = load i8*, i8** %strbeg2235, align 8
  %1005 = load i8*, i8** %s.addr, align 8
  %1006 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend2236 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %1006, i32 0, i32 2
  %1007 = load i8*, i8** %strend2236, align 8
  %1008 = load i8, i8* %utf8_target, align 1
  %tobool2237 = trunc i8 %1008 to i1
  %call2238 = call zeroext i1 @S_isWB(i32 %1000, i32 %1001, i32 %1002, i8* %1004, i8* %1005, i8* %1007, i1 zeroext %tobool2237)
  %conv2239 = zext i1 %call2238 to i32
  %xor2240 = xor i32 %conv2234, %conv2239
  %tobool2241 = icmp ne i32 %xor2240, 0
  br i1 %tobool2241, label %land.lhs.true2242, label %if.end2250

land.lhs.true2242:                                ; preds = %while.body2228
  %1009 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %intuit2243 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %1009, i32 0, i32 12
  %1010 = load i8, i8* %intuit2243, align 8
  %tobool2244 = trunc i8 %1010 to i1
  br i1 %tobool2244, label %if.then2249, label %lor.lhs.false2246

lor.lhs.false2246:                                ; preds = %land.lhs.true2242
  %1011 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %call2247 = call i32 @S_regtry(%struct.regmatch_info* %1011, i8** %s.addr)
  %tobool2248 = icmp ne i32 %call2247, 0
  br i1 %tobool2248, label %if.then2249, label %if.end2250

if.then2249:                                      ; preds = %lor.lhs.false2246, %land.lhs.true2242
  br label %got_it

if.end2250:                                       ; preds = %lor.lhs.false2246, %while.body2228
  %1012 = load i32, i32* %before2220, align 4
  store i32 %1012, i32* %previous2219, align 4
  %1013 = load i32, i32* %after2229, align 4
  store i32 %1013, i32* %before2220, align 4
  %1014 = load i8*, i8** %s.addr, align 8
  %incdec.ptr2251 = getelementptr inbounds i8, i8* %1014, i32 1
  store i8* %incdec.ptr2251, i8** %s.addr, align 8
  br label %while.cond2225

while.end2252:                                    ; preds = %while.cond2225
  br label %if.end2253

if.end2253:                                       ; preds = %while.end2252, %while.end2217
  %1015 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %intuit2254 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %1015, i32 0, i32 12
  %1016 = load i8, i8* %intuit2254, align 8
  %tobool2255 = trunc i8 %1016 to i1
  br i1 %tobool2255, label %if.then2260, label %lor.lhs.false2257

lor.lhs.false2257:                                ; preds = %if.end2253
  %1017 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %call2258 = call i32 @S_regtry(%struct.regmatch_info* %1017, i8** %s.addr)
  %tobool2259 = icmp ne i32 %call2258, 0
  br i1 %tobool2259, label %if.then2260, label %if.end2261

if.then2260:                                      ; preds = %lor.lhs.false2257, %if.end2253
  br label %got_it

if.end2261:                                       ; preds = %lor.lhs.false2257
  br label %sw.epilog

sw.epilog:                                        ; preds = %do_boundu, %if.end2261, %if.then2159, %if.end2129, %if.then2028, %if.end1998, %if.then1908, %if.end1878
  br label %sw.epilog3988

sw.bb2262:                                        ; preds = %entry
  %1018 = load i8, i8* %utf8_target, align 1
  %tobool2263 = trunc i8 %1018 to i1
  br i1 %tobool2263, label %if.then2264, label %if.else2407

if.then2264:                                      ; preds = %sw.bb2262
  br label %do.body2265

do.body2265:                                      ; preds = %if.then2264
  br label %while.cond2266

while.cond2266:                                   ; preds = %if.end2399, %do.body2265
  %1019 = load i8*, i8** %s.addr, align 8
  %1020 = load i8*, i8** %strend.addr, align 8
  %cmp2267 = icmp ult i8* %1019, %1020
  br i1 %cmp2267, label %while.body2269, label %while.end2405

while.body2269:                                   ; preds = %while.cond2266
  %1021 = load i8*, i8** %strend.addr, align 8
  %1022 = load i8*, i8** %s.addr, align 8
  %sub.ptr.lhs.cast2270 = ptrtoint i8* %1021 to i64
  %sub.ptr.rhs.cast2271 = ptrtoint i8* %1022 to i64
  %sub.ptr.sub2272 = sub i64 %sub.ptr.lhs.cast2270, %sub.ptr.rhs.cast2271
  %cmp2273 = icmp sgt i64 %sub.ptr.sub2272, 2
  br i1 %cmp2273, label %cond.true2275, label %cond.false2328

cond.true2275:                                    ; preds = %while.body2269
  %1023 = load i8*, i8** %s.addr, align 8
  %arrayidx2276 = getelementptr inbounds i8, i8* %1023, i64 0
  %1024 = load i8, i8* %arrayidx2276, align 1
  %conv2277 = zext i8 %1024 to i32
  %cmp2278 = icmp sle i32 10, %conv2277
  br i1 %cmp2278, label %land.lhs.true2280, label %cond.false2286

land.lhs.true2280:                                ; preds = %cond.true2275
  %1025 = load i8*, i8** %s.addr, align 8
  %arrayidx2281 = getelementptr inbounds i8, i8* %1025, i64 0
  %1026 = load i8, i8* %arrayidx2281, align 1
  %conv2282 = zext i8 %1026 to i32
  %cmp2283 = icmp sle i32 %conv2282, 12
  br i1 %cmp2283, label %cond.true2285, label %cond.false2286

cond.true2285:                                    ; preds = %land.lhs.true2280
  br i1 true, label %if.then2386, label %if.else2398

cond.false2286:                                   ; preds = %land.lhs.true2280, %cond.true2275
  %1027 = load i8*, i8** %s.addr, align 8
  %arrayidx2287 = getelementptr inbounds i8, i8* %1027, i64 0
  %1028 = load i8, i8* %arrayidx2287, align 1
  %conv2288 = zext i8 %1028 to i32
  %cmp2289 = icmp eq i32 13, %conv2288
  br i1 %cmp2289, label %cond.true2291, label %cond.false2298

cond.true2291:                                    ; preds = %cond.false2286
  %1029 = load i8*, i8** %s.addr, align 8
  %arrayidx2292 = getelementptr inbounds i8, i8* %1029, i64 1
  %1030 = load i8, i8* %arrayidx2292, align 1
  %conv2293 = zext i8 %1030 to i32
  %cmp2294 = icmp eq i32 10, %conv2293
  br i1 %cmp2294, label %cond.true2296, label %cond.false2297

cond.true2296:                                    ; preds = %cond.true2291
  br i1 true, label %if.then2386, label %if.else2398

cond.false2297:                                   ; preds = %cond.true2291
  br i1 true, label %if.then2386, label %if.else2398

cond.false2298:                                   ; preds = %cond.false2286
  %1031 = load i8*, i8** %s.addr, align 8
  %arrayidx2299 = getelementptr inbounds i8, i8* %1031, i64 0
  %1032 = load i8, i8* %arrayidx2299, align 1
  %conv2300 = zext i8 %1032 to i32
  %cmp2301 = icmp eq i32 194, %conv2300
  br i1 %cmp2301, label %cond.true2303, label %cond.false2310

cond.true2303:                                    ; preds = %cond.false2298
  %1033 = load i8*, i8** %s.addr, align 8
  %arrayidx2304 = getelementptr inbounds i8, i8* %1033, i64 1
  %1034 = load i8, i8* %arrayidx2304, align 1
  %conv2305 = zext i8 %1034 to i32
  %cmp2306 = icmp eq i32 133, %conv2305
  br i1 %cmp2306, label %cond.true2308, label %cond.false2309

cond.true2308:                                    ; preds = %cond.true2303
  br i1 true, label %if.then2386, label %if.else2398

cond.false2309:                                   ; preds = %cond.true2303
  br i1 false, label %if.then2386, label %if.else2398

cond.false2310:                                   ; preds = %cond.false2298
  %1035 = load i8*, i8** %s.addr, align 8
  %arrayidx2311 = getelementptr inbounds i8, i8* %1035, i64 0
  %1036 = load i8, i8* %arrayidx2311, align 1
  %conv2312 = zext i8 %1036 to i32
  %cmp2313 = icmp eq i32 226, %conv2312
  br i1 %cmp2313, label %land.lhs.true2315, label %cond.false2327

land.lhs.true2315:                                ; preds = %cond.false2310
  %1037 = load i8*, i8** %s.addr, align 8
  %arrayidx2316 = getelementptr inbounds i8, i8* %1037, i64 1
  %1038 = load i8, i8* %arrayidx2316, align 1
  %conv2317 = zext i8 %1038 to i32
  %cmp2318 = icmp eq i32 128, %conv2317
  br i1 %cmp2318, label %land.lhs.true2320, label %cond.false2327

land.lhs.true2320:                                ; preds = %land.lhs.true2315
  %1039 = load i8*, i8** %s.addr, align 8
  %arrayidx2321 = getelementptr inbounds i8, i8* %1039, i64 2
  %1040 = load i8, i8* %arrayidx2321, align 1
  %conv2322 = zext i8 %1040 to i32
  %and2323 = and i32 %conv2322, 254
  %cmp2324 = icmp eq i32 %and2323, 168
  br i1 %cmp2324, label %cond.true2326, label %cond.false2327

cond.true2326:                                    ; preds = %land.lhs.true2320
  br i1 true, label %if.then2386, label %if.else2398

cond.false2327:                                   ; preds = %land.lhs.true2320, %land.lhs.true2315, %cond.false2310
  br i1 false, label %if.then2386, label %if.else2398

cond.false2328:                                   ; preds = %while.body2269
  %1041 = load i8*, i8** %strend.addr, align 8
  %1042 = load i8*, i8** %s.addr, align 8
  %sub.ptr.lhs.cast2329 = ptrtoint i8* %1041 to i64
  %sub.ptr.rhs.cast2330 = ptrtoint i8* %1042 to i64
  %sub.ptr.sub2331 = sub i64 %sub.ptr.lhs.cast2329, %sub.ptr.rhs.cast2330
  %cmp2332 = icmp sgt i64 %sub.ptr.sub2331, 1
  br i1 %cmp2332, label %cond.true2334, label %cond.false2369

cond.true2334:                                    ; preds = %cond.false2328
  %1043 = load i8*, i8** %s.addr, align 8
  %arrayidx2335 = getelementptr inbounds i8, i8* %1043, i64 0
  %1044 = load i8, i8* %arrayidx2335, align 1
  %conv2336 = zext i8 %1044 to i32
  %cmp2337 = icmp sle i32 10, %conv2336
  br i1 %cmp2337, label %land.lhs.true2339, label %cond.false2345

land.lhs.true2339:                                ; preds = %cond.true2334
  %1045 = load i8*, i8** %s.addr, align 8
  %arrayidx2340 = getelementptr inbounds i8, i8* %1045, i64 0
  %1046 = load i8, i8* %arrayidx2340, align 1
  %conv2341 = zext i8 %1046 to i32
  %cmp2342 = icmp sle i32 %conv2341, 12
  br i1 %cmp2342, label %cond.true2344, label %cond.false2345

cond.true2344:                                    ; preds = %land.lhs.true2339
  br i1 true, label %if.then2386, label %if.else2398

cond.false2345:                                   ; preds = %land.lhs.true2339, %cond.true2334
  %1047 = load i8*, i8** %s.addr, align 8
  %arrayidx2346 = getelementptr inbounds i8, i8* %1047, i64 0
  %1048 = load i8, i8* %arrayidx2346, align 1
  %conv2347 = zext i8 %1048 to i32
  %cmp2348 = icmp eq i32 13, %conv2347
  br i1 %cmp2348, label %cond.true2350, label %cond.false2357

cond.true2350:                                    ; preds = %cond.false2345
  %1049 = load i8*, i8** %s.addr, align 8
  %arrayidx2351 = getelementptr inbounds i8, i8* %1049, i64 1
  %1050 = load i8, i8* %arrayidx2351, align 1
  %conv2352 = zext i8 %1050 to i32
  %cmp2353 = icmp eq i32 10, %conv2352
  br i1 %cmp2353, label %cond.true2355, label %cond.false2356

cond.true2355:                                    ; preds = %cond.true2350
  br i1 true, label %if.then2386, label %if.else2398

cond.false2356:                                   ; preds = %cond.true2350
  br i1 true, label %if.then2386, label %if.else2398

cond.false2357:                                   ; preds = %cond.false2345
  %1051 = load i8*, i8** %s.addr, align 8
  %arrayidx2358 = getelementptr inbounds i8, i8* %1051, i64 0
  %1052 = load i8, i8* %arrayidx2358, align 1
  %conv2359 = zext i8 %1052 to i32
  %cmp2360 = icmp eq i32 194, %conv2359
  br i1 %cmp2360, label %land.lhs.true2362, label %cond.false2368

land.lhs.true2362:                                ; preds = %cond.false2357
  %1053 = load i8*, i8** %s.addr, align 8
  %arrayidx2363 = getelementptr inbounds i8, i8* %1053, i64 1
  %1054 = load i8, i8* %arrayidx2363, align 1
  %conv2364 = zext i8 %1054 to i32
  %cmp2365 = icmp eq i32 133, %conv2364
  br i1 %cmp2365, label %cond.true2367, label %cond.false2368

cond.true2367:                                    ; preds = %land.lhs.true2362
  br i1 true, label %if.then2386, label %if.else2398

cond.false2368:                                   ; preds = %land.lhs.true2362, %cond.false2357
  br i1 false, label %if.then2386, label %if.else2398

cond.false2369:                                   ; preds = %cond.false2328
  %1055 = load i8*, i8** %strend.addr, align 8
  %1056 = load i8*, i8** %s.addr, align 8
  %sub.ptr.lhs.cast2370 = ptrtoint i8* %1055 to i64
  %sub.ptr.rhs.cast2371 = ptrtoint i8* %1056 to i64
  %sub.ptr.sub2372 = sub i64 %sub.ptr.lhs.cast2370, %sub.ptr.rhs.cast2371
  %cmp2373 = icmp sgt i64 %sub.ptr.sub2372, 0
  br i1 %cmp2373, label %cond.true2375, label %cond.false2385

cond.true2375:                                    ; preds = %cond.false2369
  %1057 = load i8*, i8** %s.addr, align 8
  %arrayidx2376 = getelementptr inbounds i8, i8* %1057, i64 0
  %1058 = load i8, i8* %arrayidx2376, align 1
  %conv2377 = zext i8 %1058 to i32
  %cmp2378 = icmp sle i32 10, %conv2377
  br i1 %cmp2378, label %land.lhs.true2380, label %if.else2398

land.lhs.true2380:                                ; preds = %cond.true2375
  %1059 = load i8*, i8** %s.addr, align 8
  %arrayidx2381 = getelementptr inbounds i8, i8* %1059, i64 0
  %1060 = load i8, i8* %arrayidx2381, align 1
  %conv2382 = zext i8 %1060 to i32
  %cmp2383 = icmp sle i32 %conv2382, 13
  br i1 %cmp2383, label %if.then2386, label %if.else2398

cond.false2385:                                   ; preds = %cond.false2369
  br i1 false, label %if.then2386, label %if.else2398

if.then2386:                                      ; preds = %cond.false2385, %land.lhs.true2380, %cond.false2368, %cond.true2367, %cond.false2356, %cond.true2355, %cond.true2344, %cond.false2327, %cond.true2326, %cond.false2309, %cond.true2308, %cond.false2297, %cond.true2296, %cond.true2285
  %1061 = load i32, i32* %tmp, align 4
  %tobool2387 = icmp ne i32 %1061, 0
  br i1 %tobool2387, label %land.lhs.true2388, label %if.else2396

land.lhs.true2388:                                ; preds = %if.then2386
  %1062 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %intuit2389 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %1062, i32 0, i32 12
  %1063 = load i8, i8* %intuit2389, align 8
  %tobool2390 = trunc i8 %1063 to i1
  br i1 %tobool2390, label %if.then2395, label %lor.lhs.false2392

lor.lhs.false2392:                                ; preds = %land.lhs.true2388
  %1064 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %call2393 = call i32 @S_regtry(%struct.regmatch_info* %1064, i8** %s.addr)
  %tobool2394 = icmp ne i32 %call2393, 0
  br i1 %tobool2394, label %if.then2395, label %if.else2396

if.then2395:                                      ; preds = %lor.lhs.false2392, %land.lhs.true2388
  br label %got_it

if.else2396:                                      ; preds = %lor.lhs.false2392, %if.then2386
  %1065 = load i32, i32* %doevery, align 4
  store i32 %1065, i32* %tmp, align 4
  br label %if.end2397

if.end2397:                                       ; preds = %if.else2396
  br label %if.end2399

if.else2398:                                      ; preds = %cond.false2385, %land.lhs.true2380, %cond.true2375, %cond.false2368, %cond.true2367, %cond.false2356, %cond.true2355, %cond.true2344, %cond.false2327, %cond.true2326, %cond.false2309, %cond.true2308, %cond.false2297, %cond.true2296, %cond.true2285
  store i32 1, i32* %tmp, align 4
  br label %if.end2399

if.end2399:                                       ; preds = %if.else2398, %if.end2397
  %1066 = load i8*, i8** %s.addr, align 8
  %1067 = load i8, i8* %1066, align 1
  %idxprom2400 = zext i8 %1067 to i64
  %arrayidx2401 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom2400
  %1068 = load i8, i8* %arrayidx2401, align 1
  %conv2402 = zext i8 %1068 to i32
  %1069 = load i8*, i8** %s.addr, align 8
  %idx.ext2403 = sext i32 %conv2402 to i64
  %add.ptr2404 = getelementptr inbounds i8, i8* %1069, i64 %idx.ext2403
  store i8* %add.ptr2404, i8** %s.addr, align 8
  br label %while.cond2266

while.end2405:                                    ; preds = %while.cond2266
  br label %do.end2406

do.end2406:                                       ; preds = %while.end2405
  br label %if.end2486

if.else2407:                                      ; preds = %sw.bb2262
  br label %do.body2408

do.body2408:                                      ; preds = %if.else2407
  br label %while.cond2409

while.cond2409:                                   ; preds = %if.end2482, %do.body2408
  %1070 = load i8*, i8** %s.addr, align 8
  %1071 = load i8*, i8** %strend.addr, align 8
  %cmp2410 = icmp ult i8* %1070, %1071
  br i1 %cmp2410, label %while.body2412, label %while.end2484

while.body2412:                                   ; preds = %while.cond2409
  %1072 = load i8*, i8** %strend.addr, align 8
  %1073 = load i8*, i8** %s.addr, align 8
  %sub.ptr.lhs.cast2413 = ptrtoint i8* %1072 to i64
  %sub.ptr.rhs.cast2414 = ptrtoint i8* %1073 to i64
  %sub.ptr.sub2415 = sub i64 %sub.ptr.lhs.cast2413, %sub.ptr.rhs.cast2414
  %cmp2416 = icmp sgt i64 %sub.ptr.sub2415, 1
  br i1 %cmp2416, label %cond.true2418, label %cond.false2447

cond.true2418:                                    ; preds = %while.body2412
  %1074 = load i8*, i8** %s.addr, align 8
  %arrayidx2419 = getelementptr inbounds i8, i8* %1074, i64 0
  %1075 = load i8, i8* %arrayidx2419, align 1
  %conv2420 = zext i8 %1075 to i32
  %cmp2421 = icmp sle i32 10, %conv2420
  br i1 %cmp2421, label %land.lhs.true2423, label %lor.lhs.false2428

land.lhs.true2423:                                ; preds = %cond.true2418
  %1076 = load i8*, i8** %s.addr, align 8
  %arrayidx2424 = getelementptr inbounds i8, i8* %1076, i64 0
  %1077 = load i8, i8* %arrayidx2424, align 1
  %conv2425 = zext i8 %1077 to i32
  %cmp2426 = icmp sle i32 %conv2425, 12
  br i1 %cmp2426, label %cond.true2433, label %lor.lhs.false2428

lor.lhs.false2428:                                ; preds = %land.lhs.true2423, %cond.true2418
  %1078 = load i8*, i8** %s.addr, align 8
  %arrayidx2429 = getelementptr inbounds i8, i8* %1078, i64 0
  %1079 = load i8, i8* %arrayidx2429, align 1
  %conv2430 = zext i8 %1079 to i32
  %cmp2431 = icmp eq i32 133, %conv2430
  br i1 %cmp2431, label %cond.true2433, label %cond.false2434

cond.true2433:                                    ; preds = %lor.lhs.false2428, %land.lhs.true2423
  br i1 true, label %if.then2469, label %if.else2481

cond.false2434:                                   ; preds = %lor.lhs.false2428
  %1080 = load i8*, i8** %s.addr, align 8
  %arrayidx2435 = getelementptr inbounds i8, i8* %1080, i64 0
  %1081 = load i8, i8* %arrayidx2435, align 1
  %conv2436 = zext i8 %1081 to i32
  %cmp2437 = icmp eq i32 13, %conv2436
  br i1 %cmp2437, label %cond.true2439, label %cond.false2446

cond.true2439:                                    ; preds = %cond.false2434
  %1082 = load i8*, i8** %s.addr, align 8
  %arrayidx2440 = getelementptr inbounds i8, i8* %1082, i64 1
  %1083 = load i8, i8* %arrayidx2440, align 1
  %conv2441 = zext i8 %1083 to i32
  %cmp2442 = icmp eq i32 10, %conv2441
  br i1 %cmp2442, label %cond.true2444, label %cond.false2445

cond.true2444:                                    ; preds = %cond.true2439
  br i1 true, label %if.then2469, label %if.else2481

cond.false2445:                                   ; preds = %cond.true2439
  br i1 true, label %if.then2469, label %if.else2481

cond.false2446:                                   ; preds = %cond.false2434
  br i1 false, label %if.then2469, label %if.else2481

cond.false2447:                                   ; preds = %while.body2412
  %1084 = load i8*, i8** %strend.addr, align 8
  %1085 = load i8*, i8** %s.addr, align 8
  %sub.ptr.lhs.cast2448 = ptrtoint i8* %1084 to i64
  %sub.ptr.rhs.cast2449 = ptrtoint i8* %1085 to i64
  %sub.ptr.sub2450 = sub i64 %sub.ptr.lhs.cast2448, %sub.ptr.rhs.cast2449
  %cmp2451 = icmp sgt i64 %sub.ptr.sub2450, 0
  br i1 %cmp2451, label %cond.true2453, label %cond.false2468

cond.true2453:                                    ; preds = %cond.false2447
  %1086 = load i8*, i8** %s.addr, align 8
  %arrayidx2454 = getelementptr inbounds i8, i8* %1086, i64 0
  %1087 = load i8, i8* %arrayidx2454, align 1
  %conv2455 = zext i8 %1087 to i32
  %cmp2456 = icmp sle i32 10, %conv2455
  br i1 %cmp2456, label %land.lhs.true2458, label %lor.lhs.false2463

land.lhs.true2458:                                ; preds = %cond.true2453
  %1088 = load i8*, i8** %s.addr, align 8
  %arrayidx2459 = getelementptr inbounds i8, i8* %1088, i64 0
  %1089 = load i8, i8* %arrayidx2459, align 1
  %conv2460 = zext i8 %1089 to i32
  %cmp2461 = icmp sle i32 %conv2460, 13
  br i1 %cmp2461, label %if.then2469, label %lor.lhs.false2463

lor.lhs.false2463:                                ; preds = %land.lhs.true2458, %cond.true2453
  %1090 = load i8*, i8** %s.addr, align 8
  %arrayidx2464 = getelementptr inbounds i8, i8* %1090, i64 0
  %1091 = load i8, i8* %arrayidx2464, align 1
  %conv2465 = zext i8 %1091 to i32
  %cmp2466 = icmp eq i32 133, %conv2465
  br i1 %cmp2466, label %if.then2469, label %if.else2481

cond.false2468:                                   ; preds = %cond.false2447
  br i1 false, label %if.then2469, label %if.else2481

if.then2469:                                      ; preds = %cond.false2468, %lor.lhs.false2463, %land.lhs.true2458, %cond.false2446, %cond.false2445, %cond.true2444, %cond.true2433
  %1092 = load i32, i32* %tmp, align 4
  %tobool2470 = icmp ne i32 %1092, 0
  br i1 %tobool2470, label %land.lhs.true2471, label %if.else2479

land.lhs.true2471:                                ; preds = %if.then2469
  %1093 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %intuit2472 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %1093, i32 0, i32 12
  %1094 = load i8, i8* %intuit2472, align 8
  %tobool2473 = trunc i8 %1094 to i1
  br i1 %tobool2473, label %if.then2478, label %lor.lhs.false2475

lor.lhs.false2475:                                ; preds = %land.lhs.true2471
  %1095 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %call2476 = call i32 @S_regtry(%struct.regmatch_info* %1095, i8** %s.addr)
  %tobool2477 = icmp ne i32 %call2476, 0
  br i1 %tobool2477, label %if.then2478, label %if.else2479

if.then2478:                                      ; preds = %lor.lhs.false2475, %land.lhs.true2471
  br label %got_it

if.else2479:                                      ; preds = %lor.lhs.false2475, %if.then2469
  %1096 = load i32, i32* %doevery, align 4
  store i32 %1096, i32* %tmp, align 4
  br label %if.end2480

if.end2480:                                       ; preds = %if.else2479
  br label %if.end2482

if.else2481:                                      ; preds = %cond.false2468, %lor.lhs.false2463, %cond.false2446, %cond.false2445, %cond.true2444, %cond.true2433
  store i32 1, i32* %tmp, align 4
  br label %if.end2482

if.end2482:                                       ; preds = %if.else2481, %if.end2480
  %1097 = load i8*, i8** %s.addr, align 8
  %incdec.ptr2483 = getelementptr inbounds i8, i8* %1097, i32 1
  store i8* %incdec.ptr2483, i8** %s.addr, align 8
  br label %while.cond2409

while.end2484:                                    ; preds = %while.cond2409
  br label %do.end2485

do.end2485:                                       ; preds = %while.end2484
  br label %if.end2486

if.end2486:                                       ; preds = %do.end2485, %do.end2406
  br label %sw.epilog3988

sw.bb2487:                                        ; preds = %entry
  store i8 1, i8* %to_complement, align 1
  br label %sw.bb2488

sw.bb2488:                                        ; preds = %entry, %sw.bb2487
  %1098 = load i8, i8* %utf8_target, align 1
  %tobool2489 = trunc i8 %1098 to i1
  br i1 %tobool2489, label %if.then2490, label %if.else2525

if.then2490:                                      ; preds = %sw.bb2488
  br label %do.body2491

do.body2491:                                      ; preds = %if.then2490
  br label %while.cond2492

while.cond2492:                                   ; preds = %if.end2517, %do.body2491
  %1099 = load i8*, i8** %s.addr, align 8
  %1100 = load i8*, i8** %strend.addr, align 8
  %cmp2493 = icmp ult i8* %1099, %1100
  br i1 %cmp2493, label %while.body2495, label %while.end2523

while.body2495:                                   ; preds = %while.cond2492
  %1101 = load i8, i8* %to_complement, align 1
  %tobool2496 = trunc i8 %1101 to i1
  %conv2497 = zext i1 %tobool2496 to i32
  %1102 = load %struct.regnode*, %struct.regnode** %c.addr, align 8
  %flags2498 = getelementptr inbounds %struct.regnode, %struct.regnode* %1102, i32 0, i32 0
  %1103 = load i8, i8* %flags2498, align 2
  %1104 = load i8*, i8** %s.addr, align 8
  %call2499 = call zeroext i1 @S_isFOO_utf8_lc(i8 zeroext %1103, i8* %1104)
  %1105 = zext i1 %call2499 to i64
  %cond2501 = select i1 %call2499, i32 1, i32 0
  %xor2502 = xor i32 %conv2497, %cond2501
  %tobool2503 = icmp ne i32 %xor2502, 0
  br i1 %tobool2503, label %if.then2504, label %if.else2516

if.then2504:                                      ; preds = %while.body2495
  %1106 = load i32, i32* %tmp, align 4
  %tobool2505 = icmp ne i32 %1106, 0
  br i1 %tobool2505, label %land.lhs.true2506, label %if.else2514

land.lhs.true2506:                                ; preds = %if.then2504
  %1107 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %intuit2507 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %1107, i32 0, i32 12
  %1108 = load i8, i8* %intuit2507, align 8
  %tobool2508 = trunc i8 %1108 to i1
  br i1 %tobool2508, label %if.then2513, label %lor.lhs.false2510

lor.lhs.false2510:                                ; preds = %land.lhs.true2506
  %1109 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %call2511 = call i32 @S_regtry(%struct.regmatch_info* %1109, i8** %s.addr)
  %tobool2512 = icmp ne i32 %call2511, 0
  br i1 %tobool2512, label %if.then2513, label %if.else2514

if.then2513:                                      ; preds = %lor.lhs.false2510, %land.lhs.true2506
  br label %got_it

if.else2514:                                      ; preds = %lor.lhs.false2510, %if.then2504
  %1110 = load i32, i32* %doevery, align 4
  store i32 %1110, i32* %tmp, align 4
  br label %if.end2515

if.end2515:                                       ; preds = %if.else2514
  br label %if.end2517

if.else2516:                                      ; preds = %while.body2495
  store i32 1, i32* %tmp, align 4
  br label %if.end2517

if.end2517:                                       ; preds = %if.else2516, %if.end2515
  %1111 = load i8*, i8** %s.addr, align 8
  %1112 = load i8, i8* %1111, align 1
  %idxprom2518 = zext i8 %1112 to i64
  %arrayidx2519 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom2518
  %1113 = load i8, i8* %arrayidx2519, align 1
  %conv2520 = zext i8 %1113 to i32
  %1114 = load i8*, i8** %s.addr, align 8
  %idx.ext2521 = sext i32 %conv2520 to i64
  %add.ptr2522 = getelementptr inbounds i8, i8* %1114, i64 %idx.ext2521
  store i8* %add.ptr2522, i8** %s.addr, align 8
  br label %while.cond2492

while.end2523:                                    ; preds = %while.cond2492
  br label %do.end2524

do.end2524:                                       ; preds = %while.end2523
  br label %if.end2556

if.else2525:                                      ; preds = %sw.bb2488
  br label %do.body2526

do.body2526:                                      ; preds = %if.else2525
  br label %while.cond2527

while.cond2527:                                   ; preds = %if.end2552, %do.body2526
  %1115 = load i8*, i8** %s.addr, align 8
  %1116 = load i8*, i8** %strend.addr, align 8
  %cmp2528 = icmp ult i8* %1115, %1116
  br i1 %cmp2528, label %while.body2530, label %while.end2554

while.body2530:                                   ; preds = %while.cond2527
  %1117 = load i8, i8* %to_complement, align 1
  %tobool2531 = trunc i8 %1117 to i1
  %conv2532 = zext i1 %tobool2531 to i32
  %1118 = load %struct.regnode*, %struct.regnode** %c.addr, align 8
  %flags2533 = getelementptr inbounds %struct.regnode, %struct.regnode* %1118, i32 0, i32 0
  %1119 = load i8, i8* %flags2533, align 2
  %1120 = load i8*, i8** %s.addr, align 8
  %1121 = load i8, i8* %1120, align 1
  %call2534 = call zeroext i1 @S_isFOO_lc(i8 zeroext %1119, i8 zeroext %1121)
  %1122 = zext i1 %call2534 to i64
  %cond2536 = select i1 %call2534, i32 1, i32 0
  %xor2537 = xor i32 %conv2532, %cond2536
  %tobool2538 = icmp ne i32 %xor2537, 0
  br i1 %tobool2538, label %if.then2539, label %if.else2551

if.then2539:                                      ; preds = %while.body2530
  %1123 = load i32, i32* %tmp, align 4
  %tobool2540 = icmp ne i32 %1123, 0
  br i1 %tobool2540, label %land.lhs.true2541, label %if.else2549

land.lhs.true2541:                                ; preds = %if.then2539
  %1124 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %intuit2542 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %1124, i32 0, i32 12
  %1125 = load i8, i8* %intuit2542, align 8
  %tobool2543 = trunc i8 %1125 to i1
  br i1 %tobool2543, label %if.then2548, label %lor.lhs.false2545

lor.lhs.false2545:                                ; preds = %land.lhs.true2541
  %1126 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %call2546 = call i32 @S_regtry(%struct.regmatch_info* %1126, i8** %s.addr)
  %tobool2547 = icmp ne i32 %call2546, 0
  br i1 %tobool2547, label %if.then2548, label %if.else2549

if.then2548:                                      ; preds = %lor.lhs.false2545, %land.lhs.true2541
  br label %got_it

if.else2549:                                      ; preds = %lor.lhs.false2545, %if.then2539
  %1127 = load i32, i32* %doevery, align 4
  store i32 %1127, i32* %tmp, align 4
  br label %if.end2550

if.end2550:                                       ; preds = %if.else2549
  br label %if.end2552

if.else2551:                                      ; preds = %while.body2530
  store i32 1, i32* %tmp, align 4
  br label %if.end2552

if.end2552:                                       ; preds = %if.else2551, %if.end2550
  %1128 = load i8*, i8** %s.addr, align 8
  %incdec.ptr2553 = getelementptr inbounds i8, i8* %1128, i32 1
  store i8* %incdec.ptr2553, i8** %s.addr, align 8
  br label %while.cond2527

while.end2554:                                    ; preds = %while.cond2527
  br label %do.end2555

do.end2555:                                       ; preds = %while.end2554
  br label %if.end2556

if.end2556:                                       ; preds = %do.end2555, %do.end2524
  br label %sw.epilog3988

sw.bb2557:                                        ; preds = %entry
  store i8 1, i8* %to_complement, align 1
  br label %sw.bb2558

sw.bb2558:                                        ; preds = %entry, %sw.bb2557
  %1129 = load i8, i8* %utf8_target, align 1
  %tobool2559 = trunc i8 %1129 to i1
  br i1 %tobool2559, label %if.then2560, label %if.end2561

if.then2560:                                      ; preds = %sw.bb2558
  br label %posix_utf8

if.end2561:                                       ; preds = %sw.bb2558
  br label %posixa

sw.bb2562:                                        ; preds = %entry
  %1130 = load i8, i8* %utf8_target, align 1
  %tobool2563 = trunc i8 %1130 to i1
  br i1 %tobool2563, label %if.then2564, label %if.end2608

if.then2564:                                      ; preds = %sw.bb2562
  br label %do.body2565

do.body2565:                                      ; preds = %if.then2564
  br label %while.cond2566

while.cond2566:                                   ; preds = %if.end2600, %do.body2565
  %1131 = load i8*, i8** %s.addr, align 8
  %1132 = load i8*, i8** %strend.addr, align 8
  %cmp2567 = icmp ult i8* %1131, %1132
  br i1 %cmp2567, label %while.body2569, label %while.end2606

while.body2569:                                   ; preds = %while.cond2566
  %1133 = load i8*, i8** %s.addr, align 8
  %1134 = load i8, i8* %1133, align 1
  %conv2570 = sext i8 %1134 to i64
  %cmp2571 = icmp ult i64 %conv2570, 128
  br i1 %cmp2571, label %lor.lhs.false2573, label %if.then2587

lor.lhs.false2573:                                ; preds = %while.body2569
  %1135 = load i8*, i8** %s.addr, align 8
  %1136 = load i8, i8* %1135, align 1
  %idxprom2574 = zext i8 %1136 to i64
  %arrayidx2575 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom2574
  %1137 = load i32, i32* %arrayidx2575, align 4
  %1138 = load %struct.regnode*, %struct.regnode** %c.addr, align 8
  %flags2576 = getelementptr inbounds %struct.regnode, %struct.regnode* %1138, i32 0, i32 0
  %1139 = load i8, i8* %flags2576, align 2
  %conv2577 = zext i8 %1139 to i32
  %shl2578 = shl i32 1, %conv2577
  %or2579 = or i32 %shl2578, 16384
  %and2580 = and i32 %1137, %or2579
  %1140 = load %struct.regnode*, %struct.regnode** %c.addr, align 8
  %flags2581 = getelementptr inbounds %struct.regnode, %struct.regnode* %1140, i32 0, i32 0
  %1141 = load i8, i8* %flags2581, align 2
  %conv2582 = zext i8 %1141 to i32
  %shl2583 = shl i32 1, %conv2582
  %or2584 = or i32 %shl2583, 16384
  %cmp2585 = icmp eq i32 %and2580, %or2584
  br i1 %cmp2585, label %if.else2599, label %if.then2587

if.then2587:                                      ; preds = %lor.lhs.false2573, %while.body2569
  %1142 = load i32, i32* %tmp, align 4
  %tobool2588 = icmp ne i32 %1142, 0
  br i1 %tobool2588, label %land.lhs.true2589, label %if.else2597

land.lhs.true2589:                                ; preds = %if.then2587
  %1143 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %intuit2590 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %1143, i32 0, i32 12
  %1144 = load i8, i8* %intuit2590, align 8
  %tobool2591 = trunc i8 %1144 to i1
  br i1 %tobool2591, label %if.then2596, label %lor.lhs.false2593

lor.lhs.false2593:                                ; preds = %land.lhs.true2589
  %1145 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %call2594 = call i32 @S_regtry(%struct.regmatch_info* %1145, i8** %s.addr)
  %tobool2595 = icmp ne i32 %call2594, 0
  br i1 %tobool2595, label %if.then2596, label %if.else2597

if.then2596:                                      ; preds = %lor.lhs.false2593, %land.lhs.true2589
  br label %got_it

if.else2597:                                      ; preds = %lor.lhs.false2593, %if.then2587
  %1146 = load i32, i32* %doevery, align 4
  store i32 %1146, i32* %tmp, align 4
  br label %if.end2598

if.end2598:                                       ; preds = %if.else2597
  br label %if.end2600

if.else2599:                                      ; preds = %lor.lhs.false2573
  store i32 1, i32* %tmp, align 4
  br label %if.end2600

if.end2600:                                       ; preds = %if.else2599, %if.end2598
  %1147 = load i8*, i8** %s.addr, align 8
  %1148 = load i8, i8* %1147, align 1
  %idxprom2601 = zext i8 %1148 to i64
  %arrayidx2602 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom2601
  %1149 = load i8, i8* %arrayidx2602, align 1
  %conv2603 = zext i8 %1149 to i32
  %1150 = load i8*, i8** %s.addr, align 8
  %idx.ext2604 = sext i32 %conv2603 to i64
  %add.ptr2605 = getelementptr inbounds i8, i8* %1150, i64 %idx.ext2604
  store i8* %add.ptr2605, i8** %s.addr, align 8
  br label %while.cond2566

while.end2606:                                    ; preds = %while.cond2566
  br label %do.end2607

do.end2607:                                       ; preds = %while.end2606
  br label %sw.epilog3988

if.end2608:                                       ; preds = %sw.bb2562
  store i8 1, i8* %to_complement, align 1
  br label %sw.bb2609

sw.bb2609:                                        ; preds = %entry, %if.end2608
  br label %posixa

posixa:                                           ; preds = %sw.bb2609, %if.end2561
  br label %do.body2610

do.body2610:                                      ; preds = %posixa
  br label %while.cond2611

while.cond2611:                                   ; preds = %if.end2647, %do.body2610
  %1151 = load i8*, i8** %s.addr, align 8
  %1152 = load i8*, i8** %strend.addr, align 8
  %cmp2612 = icmp ult i8* %1151, %1152
  br i1 %cmp2612, label %while.body2614, label %while.end2649

while.body2614:                                   ; preds = %while.cond2611
  %1153 = load i8, i8* %to_complement, align 1
  %tobool2615 = trunc i8 %1153 to i1
  %conv2616 = zext i1 %tobool2615 to i32
  %1154 = load i8*, i8** %s.addr, align 8
  %1155 = load i8, i8* %1154, align 1
  %idxprom2617 = zext i8 %1155 to i64
  %arrayidx2618 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom2617
  %1156 = load i32, i32* %arrayidx2618, align 4
  %1157 = load %struct.regnode*, %struct.regnode** %c.addr, align 8
  %flags2619 = getelementptr inbounds %struct.regnode, %struct.regnode* %1157, i32 0, i32 0
  %1158 = load i8, i8* %flags2619, align 2
  %conv2620 = zext i8 %1158 to i32
  %shl2621 = shl i32 1, %conv2620
  %or2622 = or i32 %shl2621, 16384
  %and2623 = and i32 %1156, %or2622
  %1159 = load %struct.regnode*, %struct.regnode** %c.addr, align 8
  %flags2624 = getelementptr inbounds %struct.regnode, %struct.regnode* %1159, i32 0, i32 0
  %1160 = load i8, i8* %flags2624, align 2
  %conv2625 = zext i8 %1160 to i32
  %shl2626 = shl i32 1, %conv2625
  %or2627 = or i32 %shl2626, 16384
  %cmp2628 = icmp eq i32 %and2623, %or2627
  %1161 = zext i1 %cmp2628 to i64
  %cond2631 = select i1 %cmp2628, i32 1, i32 0
  %xor2632 = xor i32 %conv2616, %cond2631
  %tobool2633 = icmp ne i32 %xor2632, 0
  br i1 %tobool2633, label %if.then2634, label %if.else2646

if.then2634:                                      ; preds = %while.body2614
  %1162 = load i32, i32* %tmp, align 4
  %tobool2635 = icmp ne i32 %1162, 0
  br i1 %tobool2635, label %land.lhs.true2636, label %if.else2644

land.lhs.true2636:                                ; preds = %if.then2634
  %1163 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %intuit2637 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %1163, i32 0, i32 12
  %1164 = load i8, i8* %intuit2637, align 8
  %tobool2638 = trunc i8 %1164 to i1
  br i1 %tobool2638, label %if.then2643, label %lor.lhs.false2640

lor.lhs.false2640:                                ; preds = %land.lhs.true2636
  %1165 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %call2641 = call i32 @S_regtry(%struct.regmatch_info* %1165, i8** %s.addr)
  %tobool2642 = icmp ne i32 %call2641, 0
  br i1 %tobool2642, label %if.then2643, label %if.else2644

if.then2643:                                      ; preds = %lor.lhs.false2640, %land.lhs.true2636
  br label %got_it

if.else2644:                                      ; preds = %lor.lhs.false2640, %if.then2634
  %1166 = load i32, i32* %doevery, align 4
  store i32 %1166, i32* %tmp, align 4
  br label %if.end2645

if.end2645:                                       ; preds = %if.else2644
  br label %if.end2647

if.else2646:                                      ; preds = %while.body2614
  store i32 1, i32* %tmp, align 4
  br label %if.end2647

if.end2647:                                       ; preds = %if.else2646, %if.end2645
  %1167 = load i8*, i8** %s.addr, align 8
  %incdec.ptr2648 = getelementptr inbounds i8, i8* %1167, i32 1
  store i8* %incdec.ptr2648, i8** %s.addr, align 8
  br label %while.cond2611

while.end2649:                                    ; preds = %while.cond2611
  br label %do.end2650

do.end2650:                                       ; preds = %while.end2649
  br label %sw.epilog3988

sw.bb2651:                                        ; preds = %entry
  store i8 1, i8* %to_complement, align 1
  br label %sw.bb2652

sw.bb2652:                                        ; preds = %entry, %sw.bb2651
  %1168 = load i8, i8* %utf8_target, align 1
  %tobool2653 = trunc i8 %1168 to i1
  br i1 %tobool2653, label %if.else2692, label %if.then2654

if.then2654:                                      ; preds = %sw.bb2652
  br label %do.body2655

do.body2655:                                      ; preds = %if.then2654
  br label %while.cond2656

while.cond2656:                                   ; preds = %if.end2688, %do.body2655
  %1169 = load i8*, i8** %s.addr, align 8
  %1170 = load i8*, i8** %strend.addr, align 8
  %cmp2657 = icmp ult i8* %1169, %1170
  br i1 %cmp2657, label %while.body2659, label %while.end2690

while.body2659:                                   ; preds = %while.cond2656
  %1171 = load i8, i8* %to_complement, align 1
  %tobool2660 = trunc i8 %1171 to i1
  %conv2661 = zext i1 %tobool2660 to i32
  %1172 = load i8*, i8** %s.addr, align 8
  %1173 = load i8, i8* %1172, align 1
  %idxprom2662 = zext i8 %1173 to i64
  %arrayidx2663 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom2662
  %1174 = load i32, i32* %arrayidx2663, align 4
  %1175 = load %struct.regnode*, %struct.regnode** %c.addr, align 8
  %flags2664 = getelementptr inbounds %struct.regnode, %struct.regnode* %1175, i32 0, i32 0
  %1176 = load i8, i8* %flags2664, align 2
  %conv2665 = zext i8 %1176 to i32
  %shl2666 = shl i32 1, %conv2665
  %and2667 = and i32 %1174, %shl2666
  %tobool2668 = icmp ne i32 %and2667, 0
  %1177 = zext i1 %tobool2668 to i64
  %cond2670 = select i1 %tobool2668, i32 1, i32 0
  %tobool2671 = icmp ne i32 %cond2670, 0
  %1178 = zext i1 %tobool2671 to i64
  %cond2672 = select i1 %tobool2671, i32 1, i32 0
  %xor2673 = xor i32 %conv2661, %cond2672
  %tobool2674 = icmp ne i32 %xor2673, 0
  br i1 %tobool2674, label %if.then2675, label %if.else2687

if.then2675:                                      ; preds = %while.body2659
  %1179 = load i32, i32* %tmp, align 4
  %tobool2676 = icmp ne i32 %1179, 0
  br i1 %tobool2676, label %land.lhs.true2677, label %if.else2685

land.lhs.true2677:                                ; preds = %if.then2675
  %1180 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %intuit2678 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %1180, i32 0, i32 12
  %1181 = load i8, i8* %intuit2678, align 8
  %tobool2679 = trunc i8 %1181 to i1
  br i1 %tobool2679, label %if.then2684, label %lor.lhs.false2681

lor.lhs.false2681:                                ; preds = %land.lhs.true2677
  %1182 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %call2682 = call i32 @S_regtry(%struct.regmatch_info* %1182, i8** %s.addr)
  %tobool2683 = icmp ne i32 %call2682, 0
  br i1 %tobool2683, label %if.then2684, label %if.else2685

if.then2684:                                      ; preds = %lor.lhs.false2681, %land.lhs.true2677
  br label %got_it

if.else2685:                                      ; preds = %lor.lhs.false2681, %if.then2675
  %1183 = load i32, i32* %doevery, align 4
  store i32 %1183, i32* %tmp, align 4
  br label %if.end2686

if.end2686:                                       ; preds = %if.else2685
  br label %if.end2688

if.else2687:                                      ; preds = %while.body2659
  store i32 1, i32* %tmp, align 4
  br label %if.end2688

if.end2688:                                       ; preds = %if.else2687, %if.end2686
  %1184 = load i8*, i8** %s.addr, align 8
  %incdec.ptr2689 = getelementptr inbounds i8, i8* %1184, i32 1
  store i8* %incdec.ptr2689, i8** %s.addr, align 8
  br label %while.cond2656

while.end2690:                                    ; preds = %while.cond2656
  br label %do.end2691

do.end2691:                                       ; preds = %while.end2690
  br label %if.end3401

if.else2692:                                      ; preds = %sw.bb2652
  br label %posix_utf8

posix_utf8:                                       ; preds = %if.else2692, %if.then2560
  %1185 = load %struct.regnode*, %struct.regnode** %c.addr, align 8
  %flags2693 = getelementptr inbounds %struct.regnode, %struct.regnode* %1185, i32 0, i32 0
  %1186 = load i8, i8* %flags2693, align 2
  %conv2694 = zext i8 %1186 to i32
  store i32 %conv2694, i32* %classnum, align 4
  %1187 = load i32, i32* %classnum, align 4
  %cmp2695 = icmp ult i32 %1187, 10
  br i1 %cmp2695, label %if.then2697, label %if.else2783

if.then2697:                                      ; preds = %posix_utf8
  br label %while.cond2698

while.cond2698:                                   ; preds = %if.end2776, %if.then2697
  %1188 = load i8*, i8** %s.addr, align 8
  %1189 = load i8*, i8** %strend.addr, align 8
  %cmp2699 = icmp ult i8* %1188, %1189
  br i1 %cmp2699, label %while.body2701, label %while.end2782

while.body2701:                                   ; preds = %while.cond2698
  %1190 = load i8*, i8** %s.addr, align 8
  %1191 = load i8, i8* %1190, align 1
  %conv2702 = zext i8 %1191 to i32
  %cmp2703 = icmp sge i32 %conv2702, 196
  br i1 %cmp2703, label %if.then2705, label %if.end2706

if.then2705:                                      ; preds = %while.body2701
  br label %found_above_latin1

if.end2706:                                       ; preds = %while.body2701
  %1192 = load i8*, i8** %s.addr, align 8
  %1193 = load i8, i8* %1192, align 1
  %conv2707 = sext i8 %1193 to i64
  %cmp2708 = icmp ult i64 %conv2707, 128
  br i1 %cmp2708, label %land.lhs.true2710, label %lor.lhs.false2724

land.lhs.true2710:                                ; preds = %if.end2706
  %1194 = load i8, i8* %to_complement, align 1
  %tobool2711 = trunc i8 %1194 to i1
  %conv2712 = zext i1 %tobool2711 to i32
  %1195 = load i8*, i8** %s.addr, align 8
  %1196 = load i8, i8* %1195, align 1
  %idxprom2713 = zext i8 %1196 to i64
  %arrayidx2714 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom2713
  %1197 = load i32, i32* %arrayidx2714, align 4
  %1198 = load i32, i32* %classnum, align 4
  %shl2715 = shl i32 1, %1198
  %and2716 = and i32 %1197, %shl2715
  %tobool2717 = icmp ne i32 %and2716, 0
  %1199 = zext i1 %tobool2717 to i64
  %cond2719 = select i1 %tobool2717, i32 1, i32 0
  %tobool2720 = icmp ne i32 %cond2719, 0
  %1200 = zext i1 %tobool2720 to i64
  %cond2721 = select i1 %tobool2720, i32 1, i32 0
  %xor2722 = xor i32 %conv2712, %cond2721
  %tobool2723 = icmp ne i32 %xor2722, 0
  br i1 %tobool2723, label %if.then2763, label %lor.lhs.false2724

lor.lhs.false2724:                                ; preds = %land.lhs.true2710, %if.end2706
  %1201 = load i8*, i8** %s.addr, align 8
  %1202 = load i8, i8* %1201, align 1
  %conv2725 = zext i8 %1202 to i32
  %and2726 = and i32 %conv2725, 254
  %cmp2727 = icmp eq i32 %and2726, 194
  br i1 %cmp2727, label %land.lhs.true2729, label %if.else2775

land.lhs.true2729:                                ; preds = %lor.lhs.false2724
  %1203 = load i8, i8* %to_complement, align 1
  %tobool2730 = trunc i8 %1203 to i1
  %conv2731 = zext i1 %tobool2730 to i32
  %1204 = load i8*, i8** %s.addr, align 8
  %1205 = load i8, i8* %1204, align 1
  %conv2732 = sext i8 %1205 to i32
  %and2733 = and i32 %conv2732, 31
  %shl2734 = shl i32 %and2733, 6
  %1206 = load i8*, i8** %s.addr, align 8
  %add.ptr2735 = getelementptr inbounds i8, i8* %1206, i64 1
  %1207 = load i8, i8* %add.ptr2735, align 1
  %conv2736 = zext i8 %1207 to i32
  %and2737 = and i32 %conv2736, 63
  %or2738 = or i32 %shl2734, %and2737
  %conv2739 = sext i32 %or2738 to i64
  %and2740 = and i64 %conv2739, -256
  %tobool2741 = icmp ne i64 %and2740, 0
  br i1 %tobool2741, label %land.end2756, label %land.rhs2742

land.rhs2742:                                     ; preds = %land.lhs.true2729
  %1208 = load i8*, i8** %s.addr, align 8
  %1209 = load i8, i8* %1208, align 1
  %conv2743 = sext i8 %1209 to i32
  %and2744 = and i32 %conv2743, 31
  %shl2745 = shl i32 %and2744, 6
  %1210 = load i8*, i8** %s.addr, align 8
  %add.ptr2746 = getelementptr inbounds i8, i8* %1210, i64 1
  %1211 = load i8, i8* %add.ptr2746, align 1
  %conv2747 = zext i8 %1211 to i32
  %and2748 = and i32 %conv2747, 63
  %or2749 = or i32 %shl2745, %and2748
  %conv2750 = trunc i32 %or2749 to i8
  %idxprom2751 = zext i8 %conv2750 to i64
  %arrayidx2752 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom2751
  %1212 = load i32, i32* %arrayidx2752, align 4
  %1213 = load i32, i32* %classnum, align 4
  %shl2753 = shl i32 1, %1213
  %and2754 = and i32 %1212, %shl2753
  %tobool2755 = icmp ne i32 %and2754, 0
  br label %land.end2756

land.end2756:                                     ; preds = %land.rhs2742, %land.lhs.true2729
  %1214 = phi i1 [ false, %land.lhs.true2729 ], [ %tobool2755, %land.rhs2742 ]
  %1215 = zext i1 %1214 to i64
  %cond2758 = select i1 %1214, i32 1, i32 0
  %tobool2759 = icmp ne i32 %cond2758, 0
  %1216 = zext i1 %tobool2759 to i64
  %cond2760 = select i1 %tobool2759, i32 1, i32 0
  %xor2761 = xor i32 %conv2731, %cond2760
  %tobool2762 = icmp ne i32 %xor2761, 0
  br i1 %tobool2762, label %if.then2763, label %if.else2775

if.then2763:                                      ; preds = %land.end2756, %land.lhs.true2710
  %1217 = load i32, i32* %tmp, align 4
  %tobool2764 = icmp ne i32 %1217, 0
  br i1 %tobool2764, label %land.lhs.true2765, label %if.else2773

land.lhs.true2765:                                ; preds = %if.then2763
  %1218 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %intuit2766 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %1218, i32 0, i32 12
  %1219 = load i8, i8* %intuit2766, align 8
  %tobool2767 = trunc i8 %1219 to i1
  br i1 %tobool2767, label %if.then2772, label %lor.lhs.false2769

lor.lhs.false2769:                                ; preds = %land.lhs.true2765
  %1220 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %call2770 = call i32 @S_regtry(%struct.regmatch_info* %1220, i8** %s.addr)
  %tobool2771 = icmp ne i32 %call2770, 0
  br i1 %tobool2771, label %if.then2772, label %if.else2773

if.then2772:                                      ; preds = %lor.lhs.false2769, %land.lhs.true2765
  br label %got_it

if.else2773:                                      ; preds = %lor.lhs.false2769, %if.then2763
  %1221 = load i32, i32* %doevery, align 4
  store i32 %1221, i32* %tmp, align 4
  br label %if.end2774

if.end2774:                                       ; preds = %if.else2773
  br label %if.end2776

if.else2775:                                      ; preds = %land.end2756, %lor.lhs.false2724
  store i32 1, i32* %tmp, align 4
  br label %if.end2776

if.end2776:                                       ; preds = %if.else2775, %if.end2774
  %1222 = load i8*, i8** %s.addr, align 8
  %1223 = load i8, i8* %1222, align 1
  %idxprom2777 = zext i8 %1223 to i64
  %arrayidx2778 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom2777
  %1224 = load i8, i8* %arrayidx2778, align 1
  %conv2779 = zext i8 %1224 to i32
  %1225 = load i8*, i8** %s.addr, align 8
  %idx.ext2780 = sext i32 %conv2779 to i64
  %add.ptr2781 = getelementptr inbounds i8, i8* %1225, i64 %idx.ext2780
  store i8* %add.ptr2781, i8** %s.addr, align 8
  br label %while.cond2698

while.end2782:                                    ; preds = %while.cond2698
  br label %if.end3400

if.else2783:                                      ; preds = %posix_utf8
  %1226 = load i32, i32* %classnum, align 4
  switch i32 %1226, label %sw.default [
    i32 10, label %sw.bb2784
    i32 11, label %sw.bb2947
    i32 12, label %sw.bb3104
    i32 15, label %sw.bb3216
    i32 13, label %sw.bb3314
  ]

sw.bb2784:                                        ; preds = %if.else2783
  br label %do.body2785

do.body2785:                                      ; preds = %sw.bb2784
  br label %while.cond2786

while.cond2786:                                   ; preds = %if.end2939, %do.body2785
  %1227 = load i8*, i8** %s.addr, align 8
  %1228 = load i8*, i8** %strend.addr, align 8
  %cmp2787 = icmp ult i8* %1227, %1228
  br i1 %cmp2787, label %while.body2789, label %while.end2945

while.body2789:                                   ; preds = %while.cond2786
  %1229 = load i8, i8* %to_complement, align 1
  %tobool2790 = trunc i8 %1229 to i1
  %conv2791 = zext i1 %tobool2790 to i32
  %1230 = load i8*, i8** %s.addr, align 8
  %1231 = load i8, i8* %1230, align 1
  %conv2792 = sext i8 %1231 to i64
  %cmp2793 = icmp ult i64 %conv2792, 128
  br i1 %cmp2793, label %cond.true2795, label %cond.false2802

cond.true2795:                                    ; preds = %while.body2789
  %1232 = load i8*, i8** %s.addr, align 8
  %1233 = load i8, i8* %1232, align 1
  %idxprom2796 = zext i8 %1233 to i64
  %arrayidx2797 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom2796
  %1234 = load i32, i32* %arrayidx2797, align 4
  %and2798 = and i32 %1234, 1024
  %tobool2799 = icmp ne i32 %and2798, 0
  %1235 = zext i1 %tobool2799 to i64
  %cond2801 = select i1 %tobool2799, i32 1, i32 0
  br label %cond.end2920

cond.false2802:                                   ; preds = %while.body2789
  %1236 = load i8*, i8** %s.addr, align 8
  %1237 = load i8, i8* %1236, align 1
  %conv2803 = zext i8 %1237 to i32
  %and2804 = and i32 %conv2803, 254
  %cmp2805 = icmp eq i32 %and2804, 194
  br i1 %cmp2805, label %cond.true2807, label %cond.false2834

cond.true2807:                                    ; preds = %cond.false2802
  %1238 = load i8*, i8** %s.addr, align 8
  %1239 = load i8, i8* %1238, align 1
  %conv2808 = sext i8 %1239 to i32
  %and2809 = and i32 %conv2808, 31
  %shl2810 = shl i32 %and2809, 6
  %1240 = load i8*, i8** %s.addr, align 8
  %add.ptr2811 = getelementptr inbounds i8, i8* %1240, i64 1
  %1241 = load i8, i8* %add.ptr2811, align 1
  %conv2812 = zext i8 %1241 to i32
  %and2813 = and i32 %conv2812, 63
  %or2814 = or i32 %shl2810, %and2813
  %conv2815 = sext i32 %or2814 to i64
  %and2816 = and i64 %conv2815, -256
  %tobool2817 = icmp ne i64 %and2816, 0
  br i1 %tobool2817, label %land.end2831, label %land.rhs2818

land.rhs2818:                                     ; preds = %cond.true2807
  %1242 = load i8*, i8** %s.addr, align 8
  %1243 = load i8, i8* %1242, align 1
  %conv2819 = sext i8 %1243 to i32
  %and2820 = and i32 %conv2819, 31
  %shl2821 = shl i32 %and2820, 6
  %1244 = load i8*, i8** %s.addr, align 8
  %add.ptr2822 = getelementptr inbounds i8, i8* %1244, i64 1
  %1245 = load i8, i8* %add.ptr2822, align 1
  %conv2823 = zext i8 %1245 to i32
  %and2824 = and i32 %conv2823, 63
  %or2825 = or i32 %shl2821, %and2824
  %conv2826 = trunc i32 %or2825 to i8
  %idxprom2827 = zext i8 %conv2826 to i64
  %arrayidx2828 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom2827
  %1246 = load i32, i32* %arrayidx2828, align 4
  %and2829 = and i32 %1246, 1024
  %tobool2830 = icmp ne i32 %and2829, 0
  br label %land.end2831

land.end2831:                                     ; preds = %land.rhs2818, %cond.true2807
  %1247 = phi i1 [ false, %cond.true2807 ], [ %tobool2830, %land.rhs2818 ]
  %1248 = zext i1 %1247 to i64
  %cond2833 = select i1 %1247, i32 1, i32 0
  br label %cond.end2918

cond.false2834:                                   ; preds = %cond.false2802
  %1249 = load i8*, i8** %s.addr, align 8
  %arrayidx2835 = getelementptr inbounds i8, i8* %1249, i64 0
  %1250 = load i8, i8* %arrayidx2835, align 1
  %conv2836 = zext i8 %1250 to i32
  %cmp2837 = icmp eq i32 225, %conv2836
  br i1 %cmp2837, label %cond.true2839, label %cond.false2852

cond.true2839:                                    ; preds = %cond.false2834
  %1251 = load i8*, i8** %s.addr, align 8
  %arrayidx2840 = getelementptr inbounds i8, i8* %1251, i64 1
  %1252 = load i8, i8* %arrayidx2840, align 1
  %conv2841 = zext i8 %1252 to i32
  %cmp2842 = icmp eq i32 154, %conv2841
  br i1 %cmp2842, label %land.rhs2844, label %land.end2849

land.rhs2844:                                     ; preds = %cond.true2839
  %1253 = load i8*, i8** %s.addr, align 8
  %arrayidx2845 = getelementptr inbounds i8, i8* %1253, i64 2
  %1254 = load i8, i8* %arrayidx2845, align 1
  %conv2846 = zext i8 %1254 to i32
  %cmp2847 = icmp eq i32 128, %conv2846
  br label %land.end2849

land.end2849:                                     ; preds = %land.rhs2844, %cond.true2839
  %1255 = phi i1 [ false, %cond.true2839 ], [ %cmp2847, %land.rhs2844 ]
  %1256 = zext i1 %1255 to i64
  %cond2851 = select i1 %1255, i32 3, i32 0
  br label %cond.end2916

cond.false2852:                                   ; preds = %cond.false2834
  %1257 = load i8*, i8** %s.addr, align 8
  %arrayidx2853 = getelementptr inbounds i8, i8* %1257, i64 0
  %1258 = load i8, i8* %arrayidx2853, align 1
  %conv2854 = zext i8 %1258 to i32
  %cmp2855 = icmp eq i32 226, %conv2854
  br i1 %cmp2855, label %cond.true2857, label %cond.false2896

cond.true2857:                                    ; preds = %cond.false2852
  %1259 = load i8*, i8** %s.addr, align 8
  %arrayidx2858 = getelementptr inbounds i8, i8* %1259, i64 1
  %1260 = load i8, i8* %arrayidx2858, align 1
  %conv2859 = zext i8 %1260 to i32
  %cmp2860 = icmp eq i32 128, %conv2859
  br i1 %cmp2860, label %cond.true2862, label %cond.false2881

cond.true2862:                                    ; preds = %cond.true2857
  %1261 = load i8*, i8** %s.addr, align 8
  %arrayidx2863 = getelementptr inbounds i8, i8* %1261, i64 2
  %1262 = load i8, i8* %arrayidx2863, align 1
  %conv2864 = zext i8 %1262 to i32
  %cmp2865 = icmp sle i32 %conv2864, 138
  br i1 %cmp2865, label %lor.end2878, label %lor.lhs.false2867

lor.lhs.false2867:                                ; preds = %cond.true2862
  %1263 = load i8*, i8** %s.addr, align 8
  %arrayidx2868 = getelementptr inbounds i8, i8* %1263, i64 2
  %1264 = load i8, i8* %arrayidx2868, align 1
  %conv2869 = zext i8 %1264 to i32
  %and2870 = and i32 %conv2869, 254
  %cmp2871 = icmp eq i32 %and2870, 168
  br i1 %cmp2871, label %lor.end2878, label %lor.rhs2873

lor.rhs2873:                                      ; preds = %lor.lhs.false2867
  %1265 = load i8*, i8** %s.addr, align 8
  %arrayidx2874 = getelementptr inbounds i8, i8* %1265, i64 2
  %1266 = load i8, i8* %arrayidx2874, align 1
  %conv2875 = zext i8 %1266 to i32
  %cmp2876 = icmp eq i32 175, %conv2875
  br label %lor.end2878

lor.end2878:                                      ; preds = %lor.rhs2873, %lor.lhs.false2867, %cond.true2862
  %1267 = phi i1 [ true, %lor.lhs.false2867 ], [ true, %cond.true2862 ], [ %cmp2876, %lor.rhs2873 ]
  %1268 = zext i1 %1267 to i64
  %cond2880 = select i1 %1267, i32 3, i32 0
  br label %cond.end2894

cond.false2881:                                   ; preds = %cond.true2857
  %1269 = load i8*, i8** %s.addr, align 8
  %arrayidx2882 = getelementptr inbounds i8, i8* %1269, i64 1
  %1270 = load i8, i8* %arrayidx2882, align 1
  %conv2883 = zext i8 %1270 to i32
  %cmp2884 = icmp eq i32 129, %conv2883
  br i1 %cmp2884, label %land.rhs2886, label %land.end2891

land.rhs2886:                                     ; preds = %cond.false2881
  %1271 = load i8*, i8** %s.addr, align 8
  %arrayidx2887 = getelementptr inbounds i8, i8* %1271, i64 2
  %1272 = load i8, i8* %arrayidx2887, align 1
  %conv2888 = zext i8 %1272 to i32
  %cmp2889 = icmp eq i32 159, %conv2888
  br label %land.end2891

land.end2891:                                     ; preds = %land.rhs2886, %cond.false2881
  %1273 = phi i1 [ false, %cond.false2881 ], [ %cmp2889, %land.rhs2886 ]
  %1274 = zext i1 %1273 to i64
  %cond2893 = select i1 %1273, i32 3, i32 0
  br label %cond.end2894

cond.end2894:                                     ; preds = %land.end2891, %lor.end2878
  %cond2895 = phi i32 [ %cond2880, %lor.end2878 ], [ %cond2893, %land.end2891 ]
  br label %cond.end2914

cond.false2896:                                   ; preds = %cond.false2852
  %1275 = load i8*, i8** %s.addr, align 8
  %arrayidx2897 = getelementptr inbounds i8, i8* %1275, i64 0
  %1276 = load i8, i8* %arrayidx2897, align 1
  %conv2898 = zext i8 %1276 to i32
  %cmp2899 = icmp eq i32 227, %conv2898
  br i1 %cmp2899, label %land.lhs.true2901, label %land.end2911

land.lhs.true2901:                                ; preds = %cond.false2896
  %1277 = load i8*, i8** %s.addr, align 8
  %arrayidx2902 = getelementptr inbounds i8, i8* %1277, i64 1
  %1278 = load i8, i8* %arrayidx2902, align 1
  %conv2903 = zext i8 %1278 to i32
  %cmp2904 = icmp eq i32 128, %conv2903
  br i1 %cmp2904, label %land.rhs2906, label %land.end2911

land.rhs2906:                                     ; preds = %land.lhs.true2901
  %1279 = load i8*, i8** %s.addr, align 8
  %arrayidx2907 = getelementptr inbounds i8, i8* %1279, i64 2
  %1280 = load i8, i8* %arrayidx2907, align 1
  %conv2908 = zext i8 %1280 to i32
  %cmp2909 = icmp eq i32 128, %conv2908
  br label %land.end2911

land.end2911:                                     ; preds = %land.rhs2906, %land.lhs.true2901, %cond.false2896
  %1281 = phi i1 [ false, %land.lhs.true2901 ], [ false, %cond.false2896 ], [ %cmp2909, %land.rhs2906 ]
  %1282 = zext i1 %1281 to i64
  %cond2913 = select i1 %1281, i32 3, i32 0
  br label %cond.end2914

cond.end2914:                                     ; preds = %land.end2911, %cond.end2894
  %cond2915 = phi i32 [ %cond2895, %cond.end2894 ], [ %cond2913, %land.end2911 ]
  br label %cond.end2916

cond.end2916:                                     ; preds = %cond.end2914, %land.end2849
  %cond2917 = phi i32 [ %cond2851, %land.end2849 ], [ %cond2915, %cond.end2914 ]
  br label %cond.end2918

cond.end2918:                                     ; preds = %cond.end2916, %land.end2831
  %cond2919 = phi i32 [ %cond2833, %land.end2831 ], [ %cond2917, %cond.end2916 ]
  br label %cond.end2920

cond.end2920:                                     ; preds = %cond.end2918, %cond.true2795
  %cond2921 = phi i32 [ %cond2801, %cond.true2795 ], [ %cond2919, %cond.end2918 ]
  %tobool2922 = icmp ne i32 %cond2921, 0
  %1283 = zext i1 %tobool2922 to i64
  %cond2923 = select i1 %tobool2922, i32 1, i32 0
  %xor2924 = xor i32 %conv2791, %cond2923
  %tobool2925 = icmp ne i32 %xor2924, 0
  br i1 %tobool2925, label %if.then2926, label %if.else2938

if.then2926:                                      ; preds = %cond.end2920
  %1284 = load i32, i32* %tmp, align 4
  %tobool2927 = icmp ne i32 %1284, 0
  br i1 %tobool2927, label %land.lhs.true2928, label %if.else2936

land.lhs.true2928:                                ; preds = %if.then2926
  %1285 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %intuit2929 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %1285, i32 0, i32 12
  %1286 = load i8, i8* %intuit2929, align 8
  %tobool2930 = trunc i8 %1286 to i1
  br i1 %tobool2930, label %if.then2935, label %lor.lhs.false2932

lor.lhs.false2932:                                ; preds = %land.lhs.true2928
  %1287 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %call2933 = call i32 @S_regtry(%struct.regmatch_info* %1287, i8** %s.addr)
  %tobool2934 = icmp ne i32 %call2933, 0
  br i1 %tobool2934, label %if.then2935, label %if.else2936

if.then2935:                                      ; preds = %lor.lhs.false2932, %land.lhs.true2928
  br label %got_it

if.else2936:                                      ; preds = %lor.lhs.false2932, %if.then2926
  %1288 = load i32, i32* %doevery, align 4
  store i32 %1288, i32* %tmp, align 4
  br label %if.end2937

if.end2937:                                       ; preds = %if.else2936
  br label %if.end2939

if.else2938:                                      ; preds = %cond.end2920
  store i32 1, i32* %tmp, align 4
  br label %if.end2939

if.end2939:                                       ; preds = %if.else2938, %if.end2937
  %1289 = load i8*, i8** %s.addr, align 8
  %1290 = load i8, i8* %1289, align 1
  %idxprom2940 = zext i8 %1290 to i64
  %arrayidx2941 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom2940
  %1291 = load i8, i8* %arrayidx2941, align 1
  %conv2942 = zext i8 %1291 to i32
  %1292 = load i8*, i8** %s.addr, align 8
  %idx.ext2943 = sext i32 %conv2942 to i64
  %add.ptr2944 = getelementptr inbounds i8, i8* %1292, i64 %idx.ext2943
  store i8* %add.ptr2944, i8** %s.addr, align 8
  br label %while.cond2786

while.end2945:                                    ; preds = %while.cond2786
  br label %do.end2946

do.end2946:                                       ; preds = %while.end2945
  br label %sw.epilog3399

sw.bb2947:                                        ; preds = %if.else2783
  br label %do.body2948

do.body2948:                                      ; preds = %sw.bb2947
  br label %while.cond2949

while.cond2949:                                   ; preds = %if.end3096, %do.body2948
  %1293 = load i8*, i8** %s.addr, align 8
  %1294 = load i8*, i8** %strend.addr, align 8
  %cmp2950 = icmp ult i8* %1293, %1294
  br i1 %cmp2950, label %while.body2952, label %while.end3102

while.body2952:                                   ; preds = %while.cond2949
  %1295 = load i8, i8* %to_complement, align 1
  %tobool2953 = trunc i8 %1295 to i1
  %conv2954 = zext i1 %tobool2953 to i32
  %1296 = load i8*, i8** %s.addr, align 8
  %1297 = load i8, i8* %1296, align 1
  %conv2955 = sext i8 %1297 to i64
  %cmp2956 = icmp ult i64 %conv2955, 128
  br i1 %cmp2956, label %cond.true2958, label %cond.false2965

cond.true2958:                                    ; preds = %while.body2952
  %1298 = load i8*, i8** %s.addr, align 8
  %1299 = load i8, i8* %1298, align 1
  %idxprom2959 = zext i8 %1299 to i64
  %arrayidx2960 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom2959
  %1300 = load i32, i32* %arrayidx2960, align 4
  %and2961 = and i32 %1300, 2048
  %tobool2962 = icmp ne i32 %and2961, 0
  %1301 = zext i1 %tobool2962 to i64
  %cond2964 = select i1 %tobool2962, i32 1, i32 0
  br label %cond.end3077

cond.false2965:                                   ; preds = %while.body2952
  %1302 = load i8*, i8** %s.addr, align 8
  %1303 = load i8, i8* %1302, align 1
  %conv2966 = zext i8 %1303 to i32
  %and2967 = and i32 %conv2966, 254
  %cmp2968 = icmp eq i32 %and2967, 194
  br i1 %cmp2968, label %cond.true2970, label %cond.false2997

cond.true2970:                                    ; preds = %cond.false2965
  %1304 = load i8*, i8** %s.addr, align 8
  %1305 = load i8, i8* %1304, align 1
  %conv2971 = sext i8 %1305 to i32
  %and2972 = and i32 %conv2971, 31
  %shl2973 = shl i32 %and2972, 6
  %1306 = load i8*, i8** %s.addr, align 8
  %add.ptr2974 = getelementptr inbounds i8, i8* %1306, i64 1
  %1307 = load i8, i8* %add.ptr2974, align 1
  %conv2975 = zext i8 %1307 to i32
  %and2976 = and i32 %conv2975, 63
  %or2977 = or i32 %shl2973, %and2976
  %conv2978 = sext i32 %or2977 to i64
  %and2979 = and i64 %conv2978, -256
  %tobool2980 = icmp ne i64 %and2979, 0
  br i1 %tobool2980, label %land.end2994, label %land.rhs2981

land.rhs2981:                                     ; preds = %cond.true2970
  %1308 = load i8*, i8** %s.addr, align 8
  %1309 = load i8, i8* %1308, align 1
  %conv2982 = sext i8 %1309 to i32
  %and2983 = and i32 %conv2982, 31
  %shl2984 = shl i32 %and2983, 6
  %1310 = load i8*, i8** %s.addr, align 8
  %add.ptr2985 = getelementptr inbounds i8, i8* %1310, i64 1
  %1311 = load i8, i8* %add.ptr2985, align 1
  %conv2986 = zext i8 %1311 to i32
  %and2987 = and i32 %conv2986, 63
  %or2988 = or i32 %shl2984, %and2987
  %conv2989 = trunc i32 %or2988 to i8
  %idxprom2990 = zext i8 %conv2989 to i64
  %arrayidx2991 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom2990
  %1312 = load i32, i32* %arrayidx2991, align 4
  %and2992 = and i32 %1312, 2048
  %tobool2993 = icmp ne i32 %and2992, 0
  br label %land.end2994

land.end2994:                                     ; preds = %land.rhs2981, %cond.true2970
  %1313 = phi i1 [ false, %cond.true2970 ], [ %tobool2993, %land.rhs2981 ]
  %1314 = zext i1 %1313 to i64
  %cond2996 = select i1 %1313, i32 1, i32 0
  br label %cond.end3075

cond.false2997:                                   ; preds = %cond.false2965
  %1315 = load i8*, i8** %s.addr, align 8
  %arrayidx2998 = getelementptr inbounds i8, i8* %1315, i64 0
  %1316 = load i8, i8* %arrayidx2998, align 1
  %conv2999 = zext i8 %1316 to i32
  %cmp3000 = icmp eq i32 225, %conv2999
  br i1 %cmp3000, label %cond.true3002, label %cond.false3015

cond.true3002:                                    ; preds = %cond.false2997
  %1317 = load i8*, i8** %s.addr, align 8
  %arrayidx3003 = getelementptr inbounds i8, i8* %1317, i64 1
  %1318 = load i8, i8* %arrayidx3003, align 1
  %conv3004 = zext i8 %1318 to i32
  %cmp3005 = icmp eq i32 154, %conv3004
  br i1 %cmp3005, label %land.rhs3007, label %land.end3012

land.rhs3007:                                     ; preds = %cond.true3002
  %1319 = load i8*, i8** %s.addr, align 8
  %arrayidx3008 = getelementptr inbounds i8, i8* %1319, i64 2
  %1320 = load i8, i8* %arrayidx3008, align 1
  %conv3009 = zext i8 %1320 to i32
  %cmp3010 = icmp eq i32 128, %conv3009
  br label %land.end3012

land.end3012:                                     ; preds = %land.rhs3007, %cond.true3002
  %1321 = phi i1 [ false, %cond.true3002 ], [ %cmp3010, %land.rhs3007 ]
  %1322 = zext i1 %1321 to i64
  %cond3014 = select i1 %1321, i32 3, i32 0
  br label %cond.end3073

cond.false3015:                                   ; preds = %cond.false2997
  %1323 = load i8*, i8** %s.addr, align 8
  %arrayidx3016 = getelementptr inbounds i8, i8* %1323, i64 0
  %1324 = load i8, i8* %arrayidx3016, align 1
  %conv3017 = zext i8 %1324 to i32
  %cmp3018 = icmp eq i32 226, %conv3017
  br i1 %cmp3018, label %cond.true3020, label %cond.false3053

cond.true3020:                                    ; preds = %cond.false3015
  %1325 = load i8*, i8** %s.addr, align 8
  %arrayidx3021 = getelementptr inbounds i8, i8* %1325, i64 1
  %1326 = load i8, i8* %arrayidx3021, align 1
  %conv3022 = zext i8 %1326 to i32
  %cmp3023 = icmp eq i32 128, %conv3022
  br i1 %cmp3023, label %cond.true3025, label %cond.false3038

cond.true3025:                                    ; preds = %cond.true3020
  %1327 = load i8*, i8** %s.addr, align 8
  %arrayidx3026 = getelementptr inbounds i8, i8* %1327, i64 2
  %1328 = load i8, i8* %arrayidx3026, align 1
  %conv3027 = zext i8 %1328 to i32
  %cmp3028 = icmp sle i32 %conv3027, 138
  br i1 %cmp3028, label %lor.end3035, label %lor.rhs3030

lor.rhs3030:                                      ; preds = %cond.true3025
  %1329 = load i8*, i8** %s.addr, align 8
  %arrayidx3031 = getelementptr inbounds i8, i8* %1329, i64 2
  %1330 = load i8, i8* %arrayidx3031, align 1
  %conv3032 = zext i8 %1330 to i32
  %cmp3033 = icmp eq i32 175, %conv3032
  br label %lor.end3035

lor.end3035:                                      ; preds = %lor.rhs3030, %cond.true3025
  %1331 = phi i1 [ true, %cond.true3025 ], [ %cmp3033, %lor.rhs3030 ]
  %1332 = zext i1 %1331 to i64
  %cond3037 = select i1 %1331, i32 3, i32 0
  br label %cond.end3051

cond.false3038:                                   ; preds = %cond.true3020
  %1333 = load i8*, i8** %s.addr, align 8
  %arrayidx3039 = getelementptr inbounds i8, i8* %1333, i64 1
  %1334 = load i8, i8* %arrayidx3039, align 1
  %conv3040 = zext i8 %1334 to i32
  %cmp3041 = icmp eq i32 129, %conv3040
  br i1 %cmp3041, label %land.rhs3043, label %land.end3048

land.rhs3043:                                     ; preds = %cond.false3038
  %1335 = load i8*, i8** %s.addr, align 8
  %arrayidx3044 = getelementptr inbounds i8, i8* %1335, i64 2
  %1336 = load i8, i8* %arrayidx3044, align 1
  %conv3045 = zext i8 %1336 to i32
  %cmp3046 = icmp eq i32 159, %conv3045
  br label %land.end3048

land.end3048:                                     ; preds = %land.rhs3043, %cond.false3038
  %1337 = phi i1 [ false, %cond.false3038 ], [ %cmp3046, %land.rhs3043 ]
  %1338 = zext i1 %1337 to i64
  %cond3050 = select i1 %1337, i32 3, i32 0
  br label %cond.end3051

cond.end3051:                                     ; preds = %land.end3048, %lor.end3035
  %cond3052 = phi i32 [ %cond3037, %lor.end3035 ], [ %cond3050, %land.end3048 ]
  br label %cond.end3071

cond.false3053:                                   ; preds = %cond.false3015
  %1339 = load i8*, i8** %s.addr, align 8
  %arrayidx3054 = getelementptr inbounds i8, i8* %1339, i64 0
  %1340 = load i8, i8* %arrayidx3054, align 1
  %conv3055 = zext i8 %1340 to i32
  %cmp3056 = icmp eq i32 227, %conv3055
  br i1 %cmp3056, label %land.lhs.true3058, label %land.end3068

land.lhs.true3058:                                ; preds = %cond.false3053
  %1341 = load i8*, i8** %s.addr, align 8
  %arrayidx3059 = getelementptr inbounds i8, i8* %1341, i64 1
  %1342 = load i8, i8* %arrayidx3059, align 1
  %conv3060 = zext i8 %1342 to i32
  %cmp3061 = icmp eq i32 128, %conv3060
  br i1 %cmp3061, label %land.rhs3063, label %land.end3068

land.rhs3063:                                     ; preds = %land.lhs.true3058
  %1343 = load i8*, i8** %s.addr, align 8
  %arrayidx3064 = getelementptr inbounds i8, i8* %1343, i64 2
  %1344 = load i8, i8* %arrayidx3064, align 1
  %conv3065 = zext i8 %1344 to i32
  %cmp3066 = icmp eq i32 128, %conv3065
  br label %land.end3068

land.end3068:                                     ; preds = %land.rhs3063, %land.lhs.true3058, %cond.false3053
  %1345 = phi i1 [ false, %land.lhs.true3058 ], [ false, %cond.false3053 ], [ %cmp3066, %land.rhs3063 ]
  %1346 = zext i1 %1345 to i64
  %cond3070 = select i1 %1345, i32 3, i32 0
  br label %cond.end3071

cond.end3071:                                     ; preds = %land.end3068, %cond.end3051
  %cond3072 = phi i32 [ %cond3052, %cond.end3051 ], [ %cond3070, %land.end3068 ]
  br label %cond.end3073

cond.end3073:                                     ; preds = %cond.end3071, %land.end3012
  %cond3074 = phi i32 [ %cond3014, %land.end3012 ], [ %cond3072, %cond.end3071 ]
  br label %cond.end3075

cond.end3075:                                     ; preds = %cond.end3073, %land.end2994
  %cond3076 = phi i32 [ %cond2996, %land.end2994 ], [ %cond3074, %cond.end3073 ]
  br label %cond.end3077

cond.end3077:                                     ; preds = %cond.end3075, %cond.true2958
  %cond3078 = phi i32 [ %cond2964, %cond.true2958 ], [ %cond3076, %cond.end3075 ]
  %tobool3079 = icmp ne i32 %cond3078, 0
  %1347 = zext i1 %tobool3079 to i64
  %cond3080 = select i1 %tobool3079, i32 1, i32 0
  %xor3081 = xor i32 %conv2954, %cond3080
  %tobool3082 = icmp ne i32 %xor3081, 0
  br i1 %tobool3082, label %if.then3083, label %if.else3095

if.then3083:                                      ; preds = %cond.end3077
  %1348 = load i32, i32* %tmp, align 4
  %tobool3084 = icmp ne i32 %1348, 0
  br i1 %tobool3084, label %land.lhs.true3085, label %if.else3093

land.lhs.true3085:                                ; preds = %if.then3083
  %1349 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %intuit3086 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %1349, i32 0, i32 12
  %1350 = load i8, i8* %intuit3086, align 8
  %tobool3087 = trunc i8 %1350 to i1
  br i1 %tobool3087, label %if.then3092, label %lor.lhs.false3089

lor.lhs.false3089:                                ; preds = %land.lhs.true3085
  %1351 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %call3090 = call i32 @S_regtry(%struct.regmatch_info* %1351, i8** %s.addr)
  %tobool3091 = icmp ne i32 %call3090, 0
  br i1 %tobool3091, label %if.then3092, label %if.else3093

if.then3092:                                      ; preds = %lor.lhs.false3089, %land.lhs.true3085
  br label %got_it

if.else3093:                                      ; preds = %lor.lhs.false3089, %if.then3083
  %1352 = load i32, i32* %doevery, align 4
  store i32 %1352, i32* %tmp, align 4
  br label %if.end3094

if.end3094:                                       ; preds = %if.else3093
  br label %if.end3096

if.else3095:                                      ; preds = %cond.end3077
  store i32 1, i32* %tmp, align 4
  br label %if.end3096

if.end3096:                                       ; preds = %if.else3095, %if.end3094
  %1353 = load i8*, i8** %s.addr, align 8
  %1354 = load i8, i8* %1353, align 1
  %idxprom3097 = zext i8 %1354 to i64
  %arrayidx3098 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom3097
  %1355 = load i8, i8* %arrayidx3098, align 1
  %conv3099 = zext i8 %1355 to i32
  %1356 = load i8*, i8** %s.addr, align 8
  %idx.ext3100 = sext i32 %conv3099 to i64
  %add.ptr3101 = getelementptr inbounds i8, i8* %1356, i64 %idx.ext3100
  store i8* %add.ptr3101, i8** %s.addr, align 8
  br label %while.cond2949

while.end3102:                                    ; preds = %while.cond2949
  br label %do.end3103

do.end3103:                                       ; preds = %while.end3102
  br label %sw.epilog3399

sw.bb3104:                                        ; preds = %if.else2783
  br label %do.body3105

do.body3105:                                      ; preds = %sw.bb3104
  br label %while.cond3106

while.cond3106:                                   ; preds = %if.end3208, %do.body3105
  %1357 = load i8*, i8** %s.addr, align 8
  %1358 = load i8*, i8** %strend.addr, align 8
  %cmp3107 = icmp ult i8* %1357, %1358
  br i1 %cmp3107, label %while.body3109, label %while.end3214

while.body3109:                                   ; preds = %while.cond3106
  %1359 = load i8, i8* %to_complement, align 1
  %tobool3110 = trunc i8 %1359 to i1
  %conv3111 = zext i1 %tobool3110 to i32
  %1360 = load i8*, i8** %s.addr, align 8
  %1361 = load i8, i8* %1360, align 1
  %conv3112 = sext i8 %1361 to i64
  %cmp3113 = icmp ult i64 %conv3112, 128
  br i1 %cmp3113, label %cond.true3115, label %cond.false3122

cond.true3115:                                    ; preds = %while.body3109
  %1362 = load i8*, i8** %s.addr, align 8
  %1363 = load i8, i8* %1362, align 1
  %idxprom3116 = zext i8 %1363 to i64
  %arrayidx3117 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom3116
  %1364 = load i32, i32* %arrayidx3117, align 4
  %and3118 = and i32 %1364, 4096
  %tobool3119 = icmp ne i32 %and3118, 0
  %1365 = zext i1 %tobool3119 to i64
  %cond3121 = select i1 %tobool3119, i32 1, i32 0
  br label %cond.end3189

cond.false3122:                                   ; preds = %while.body3109
  %1366 = load i8*, i8** %s.addr, align 8
  %1367 = load i8, i8* %1366, align 1
  %conv3123 = zext i8 %1367 to i32
  %cmp3124 = icmp sge i32 %conv3123, 196
  br i1 %cmp3124, label %cond.true3126, label %cond.false3186

cond.true3126:                                    ; preds = %cond.false3122
  %1368 = load i8*, i8** %s.addr, align 8
  %arrayidx3127 = getelementptr inbounds i8, i8* %1368, i64 0
  %1369 = load i8, i8* %arrayidx3127, align 1
  %conv3128 = zext i8 %1369 to i32
  %cmp3129 = icmp eq i32 239, %conv3128
  br i1 %cmp3129, label %cond.true3131, label %cond.false3183

cond.true3131:                                    ; preds = %cond.true3126
  %1370 = load i8*, i8** %s.addr, align 8
  %arrayidx3132 = getelementptr inbounds i8, i8* %1370, i64 1
  %1371 = load i8, i8* %arrayidx3132, align 1
  %conv3133 = zext i8 %1371 to i32
  %cmp3134 = icmp eq i32 188, %conv3133
  br i1 %cmp3134, label %cond.true3136, label %cond.false3161

cond.true3136:                                    ; preds = %cond.true3131
  %1372 = load i8*, i8** %s.addr, align 8
  %arrayidx3137 = getelementptr inbounds i8, i8* %1372, i64 2
  %1373 = load i8, i8* %arrayidx3137, align 1
  %conv3138 = zext i8 %1373 to i32
  %cmp3139 = icmp sle i32 144, %conv3138
  br i1 %cmp3139, label %land.lhs.true3141, label %lor.rhs3146

land.lhs.true3141:                                ; preds = %cond.true3136
  %1374 = load i8*, i8** %s.addr, align 8
  %arrayidx3142 = getelementptr inbounds i8, i8* %1374, i64 2
  %1375 = load i8, i8* %arrayidx3142, align 1
  %conv3143 = zext i8 %1375 to i32
  %cmp3144 = icmp sle i32 %conv3143, 153
  br i1 %cmp3144, label %lor.end3158, label %lor.rhs3146

lor.rhs3146:                                      ; preds = %land.lhs.true3141, %cond.true3136
  %1376 = load i8*, i8** %s.addr, align 8
  %arrayidx3147 = getelementptr inbounds i8, i8* %1376, i64 2
  %1377 = load i8, i8* %arrayidx3147, align 1
  %conv3148 = zext i8 %1377 to i32
  %cmp3149 = icmp sle i32 161, %conv3148
  br i1 %cmp3149, label %land.rhs3151, label %land.end3156

land.rhs3151:                                     ; preds = %lor.rhs3146
  %1378 = load i8*, i8** %s.addr, align 8
  %arrayidx3152 = getelementptr inbounds i8, i8* %1378, i64 2
  %1379 = load i8, i8* %arrayidx3152, align 1
  %conv3153 = zext i8 %1379 to i32
  %cmp3154 = icmp sle i32 %conv3153, 166
  br label %land.end3156

land.end3156:                                     ; preds = %land.rhs3151, %lor.rhs3146
  %1380 = phi i1 [ false, %lor.rhs3146 ], [ %cmp3154, %land.rhs3151 ]
  br label %lor.end3158

lor.end3158:                                      ; preds = %land.end3156, %land.lhs.true3141
  %1381 = phi i1 [ true, %land.lhs.true3141 ], [ %1380, %land.end3156 ]
  %1382 = zext i1 %1381 to i64
  %cond3160 = select i1 %1381, i32 3, i32 0
  br label %cond.end3181

cond.false3161:                                   ; preds = %cond.true3131
  %1383 = load i8*, i8** %s.addr, align 8
  %arrayidx3162 = getelementptr inbounds i8, i8* %1383, i64 1
  %1384 = load i8, i8* %arrayidx3162, align 1
  %conv3163 = zext i8 %1384 to i32
  %cmp3164 = icmp eq i32 189, %conv3163
  br i1 %cmp3164, label %land.rhs3166, label %land.end3178

land.rhs3166:                                     ; preds = %cond.false3161
  %1385 = load i8*, i8** %s.addr, align 8
  %arrayidx3167 = getelementptr inbounds i8, i8* %1385, i64 2
  %1386 = load i8, i8* %arrayidx3167, align 1
  %conv3168 = zext i8 %1386 to i32
  %cmp3169 = icmp sle i32 129, %conv3168
  br i1 %cmp3169, label %land.rhs3171, label %land.end3176

land.rhs3171:                                     ; preds = %land.rhs3166
  %1387 = load i8*, i8** %s.addr, align 8
  %arrayidx3172 = getelementptr inbounds i8, i8* %1387, i64 2
  %1388 = load i8, i8* %arrayidx3172, align 1
  %conv3173 = zext i8 %1388 to i32
  %cmp3174 = icmp sle i32 %conv3173, 134
  br label %land.end3176

land.end3176:                                     ; preds = %land.rhs3171, %land.rhs3166
  %1389 = phi i1 [ false, %land.rhs3166 ], [ %cmp3174, %land.rhs3171 ]
  br label %land.end3178

land.end3178:                                     ; preds = %land.end3176, %cond.false3161
  %1390 = phi i1 [ false, %cond.false3161 ], [ %1389, %land.end3176 ]
  %1391 = zext i1 %1390 to i64
  %cond3180 = select i1 %1390, i32 3, i32 0
  br label %cond.end3181

cond.end3181:                                     ; preds = %land.end3178, %lor.end3158
  %cond3182 = phi i32 [ %cond3160, %lor.end3158 ], [ %cond3180, %land.end3178 ]
  br label %cond.end3184

cond.false3183:                                   ; preds = %cond.true3126
  br label %cond.end3184

cond.end3184:                                     ; preds = %cond.false3183, %cond.end3181
  %cond3185 = phi i32 [ %cond3182, %cond.end3181 ], [ 0, %cond.false3183 ]
  br label %cond.end3187

cond.false3186:                                   ; preds = %cond.false3122
  br label %cond.end3187

cond.end3187:                                     ; preds = %cond.false3186, %cond.end3184
  %cond3188 = phi i32 [ %cond3185, %cond.end3184 ], [ 0, %cond.false3186 ]
  br label %cond.end3189

cond.end3189:                                     ; preds = %cond.end3187, %cond.true3115
  %cond3190 = phi i32 [ %cond3121, %cond.true3115 ], [ %cond3188, %cond.end3187 ]
  %tobool3191 = icmp ne i32 %cond3190, 0
  %1392 = zext i1 %tobool3191 to i64
  %cond3192 = select i1 %tobool3191, i32 1, i32 0
  %xor3193 = xor i32 %conv3111, %cond3192
  %tobool3194 = icmp ne i32 %xor3193, 0
  br i1 %tobool3194, label %if.then3195, label %if.else3207

if.then3195:                                      ; preds = %cond.end3189
  %1393 = load i32, i32* %tmp, align 4
  %tobool3196 = icmp ne i32 %1393, 0
  br i1 %tobool3196, label %land.lhs.true3197, label %if.else3205

land.lhs.true3197:                                ; preds = %if.then3195
  %1394 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %intuit3198 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %1394, i32 0, i32 12
  %1395 = load i8, i8* %intuit3198, align 8
  %tobool3199 = trunc i8 %1395 to i1
  br i1 %tobool3199, label %if.then3204, label %lor.lhs.false3201

lor.lhs.false3201:                                ; preds = %land.lhs.true3197
  %1396 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %call3202 = call i32 @S_regtry(%struct.regmatch_info* %1396, i8** %s.addr)
  %tobool3203 = icmp ne i32 %call3202, 0
  br i1 %tobool3203, label %if.then3204, label %if.else3205

if.then3204:                                      ; preds = %lor.lhs.false3201, %land.lhs.true3197
  br label %got_it

if.else3205:                                      ; preds = %lor.lhs.false3201, %if.then3195
  %1397 = load i32, i32* %doevery, align 4
  store i32 %1397, i32* %tmp, align 4
  br label %if.end3206

if.end3206:                                       ; preds = %if.else3205
  br label %if.end3208

if.else3207:                                      ; preds = %cond.end3189
  store i32 1, i32* %tmp, align 4
  br label %if.end3208

if.end3208:                                       ; preds = %if.else3207, %if.end3206
  %1398 = load i8*, i8** %s.addr, align 8
  %1399 = load i8, i8* %1398, align 1
  %idxprom3209 = zext i8 %1399 to i64
  %arrayidx3210 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom3209
  %1400 = load i8, i8* %arrayidx3210, align 1
  %conv3211 = zext i8 %1400 to i32
  %1401 = load i8*, i8** %s.addr, align 8
  %idx.ext3212 = sext i32 %conv3211 to i64
  %add.ptr3213 = getelementptr inbounds i8, i8* %1401, i64 %idx.ext3212
  store i8* %add.ptr3213, i8** %s.addr, align 8
  br label %while.cond3106

while.end3214:                                    ; preds = %while.cond3106
  br label %do.end3215

do.end3215:                                       ; preds = %while.end3214
  br label %sw.epilog3399

sw.bb3216:                                        ; preds = %if.else2783
  br label %do.body3217

do.body3217:                                      ; preds = %sw.bb3216
  br label %while.cond3218

while.cond3218:                                   ; preds = %if.end3306, %do.body3217
  %1402 = load i8*, i8** %s.addr, align 8
  %1403 = load i8*, i8** %strend.addr, align 8
  %cmp3219 = icmp ult i8* %1402, %1403
  br i1 %cmp3219, label %while.body3221, label %while.end3312

while.body3221:                                   ; preds = %while.cond3218
  %1404 = load i8, i8* %to_complement, align 1
  %tobool3222 = trunc i8 %1404 to i1
  %conv3223 = zext i1 %tobool3222 to i32
  %1405 = load i8*, i8** %s.addr, align 8
  %1406 = load i8, i8* %1405, align 1
  %conv3224 = sext i8 %1406 to i64
  %cmp3225 = icmp ult i64 %conv3224, 128
  br i1 %cmp3225, label %cond.true3227, label %cond.false3234

cond.true3227:                                    ; preds = %while.body3221
  %1407 = load i8*, i8** %s.addr, align 8
  %1408 = load i8, i8* %1407, align 1
  %idxprom3228 = zext i8 %1408 to i64
  %arrayidx3229 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom3228
  %1409 = load i32, i32* %arrayidx3229, align 4
  %and3230 = and i32 %1409, 32768
  %tobool3231 = icmp ne i32 %and3230, 0
  %1410 = zext i1 %tobool3231 to i64
  %cond3233 = select i1 %tobool3231, i32 1, i32 0
  br label %cond.end3287

cond.false3234:                                   ; preds = %while.body3221
  %1411 = load i8*, i8** %s.addr, align 8
  %1412 = load i8, i8* %1411, align 1
  %conv3235 = zext i8 %1412 to i32
  %and3236 = and i32 %conv3235, 254
  %cmp3237 = icmp eq i32 %and3236, 194
  br i1 %cmp3237, label %cond.true3239, label %cond.false3266

cond.true3239:                                    ; preds = %cond.false3234
  %1413 = load i8*, i8** %s.addr, align 8
  %1414 = load i8, i8* %1413, align 1
  %conv3240 = sext i8 %1414 to i32
  %and3241 = and i32 %conv3240, 31
  %shl3242 = shl i32 %and3241, 6
  %1415 = load i8*, i8** %s.addr, align 8
  %add.ptr3243 = getelementptr inbounds i8, i8* %1415, i64 1
  %1416 = load i8, i8* %add.ptr3243, align 1
  %conv3244 = zext i8 %1416 to i32
  %and3245 = and i32 %conv3244, 63
  %or3246 = or i32 %shl3242, %and3245
  %conv3247 = sext i32 %or3246 to i64
  %and3248 = and i64 %conv3247, -256
  %tobool3249 = icmp ne i64 %and3248, 0
  br i1 %tobool3249, label %land.end3263, label %land.rhs3250

land.rhs3250:                                     ; preds = %cond.true3239
  %1417 = load i8*, i8** %s.addr, align 8
  %1418 = load i8, i8* %1417, align 1
  %conv3251 = sext i8 %1418 to i32
  %and3252 = and i32 %conv3251, 31
  %shl3253 = shl i32 %and3252, 6
  %1419 = load i8*, i8** %s.addr, align 8
  %add.ptr3254 = getelementptr inbounds i8, i8* %1419, i64 1
  %1420 = load i8, i8* %add.ptr3254, align 1
  %conv3255 = zext i8 %1420 to i32
  %and3256 = and i32 %conv3255, 63
  %or3257 = or i32 %shl3253, %and3256
  %conv3258 = trunc i32 %or3257 to i8
  %idxprom3259 = zext i8 %conv3258 to i64
  %arrayidx3260 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom3259
  %1421 = load i32, i32* %arrayidx3260, align 4
  %and3261 = and i32 %1421, 32768
  %tobool3262 = icmp ne i32 %and3261, 0
  br label %land.end3263

land.end3263:                                     ; preds = %land.rhs3250, %cond.true3239
  %1422 = phi i1 [ false, %cond.true3239 ], [ %tobool3262, %land.rhs3250 ]
  %1423 = zext i1 %1422 to i64
  %cond3265 = select i1 %1422, i32 1, i32 0
  br label %cond.end3285

cond.false3266:                                   ; preds = %cond.false3234
  %1424 = load i8*, i8** %s.addr, align 8
  %arrayidx3267 = getelementptr inbounds i8, i8* %1424, i64 0
  %1425 = load i8, i8* %arrayidx3267, align 1
  %conv3268 = zext i8 %1425 to i32
  %cmp3269 = icmp eq i32 226, %conv3268
  br i1 %cmp3269, label %land.lhs.true3271, label %land.end3282

land.lhs.true3271:                                ; preds = %cond.false3266
  %1426 = load i8*, i8** %s.addr, align 8
  %arrayidx3272 = getelementptr inbounds i8, i8* %1426, i64 1
  %1427 = load i8, i8* %arrayidx3272, align 1
  %conv3273 = zext i8 %1427 to i32
  %cmp3274 = icmp eq i32 128, %conv3273
  br i1 %cmp3274, label %land.rhs3276, label %land.end3282

land.rhs3276:                                     ; preds = %land.lhs.true3271
  %1428 = load i8*, i8** %s.addr, align 8
  %arrayidx3277 = getelementptr inbounds i8, i8* %1428, i64 2
  %1429 = load i8, i8* %arrayidx3277, align 1
  %conv3278 = zext i8 %1429 to i32
  %and3279 = and i32 %conv3278, 254
  %cmp3280 = icmp eq i32 %and3279, 168
  br label %land.end3282

land.end3282:                                     ; preds = %land.rhs3276, %land.lhs.true3271, %cond.false3266
  %1430 = phi i1 [ false, %land.lhs.true3271 ], [ false, %cond.false3266 ], [ %cmp3280, %land.rhs3276 ]
  %1431 = zext i1 %1430 to i64
  %cond3284 = select i1 %1430, i32 3, i32 0
  br label %cond.end3285

cond.end3285:                                     ; preds = %land.end3282, %land.end3263
  %cond3286 = phi i32 [ %cond3265, %land.end3263 ], [ %cond3284, %land.end3282 ]
  br label %cond.end3287

cond.end3287:                                     ; preds = %cond.end3285, %cond.true3227
  %cond3288 = phi i32 [ %cond3233, %cond.true3227 ], [ %cond3286, %cond.end3285 ]
  %tobool3289 = icmp ne i32 %cond3288, 0
  %1432 = zext i1 %tobool3289 to i64
  %cond3290 = select i1 %tobool3289, i32 1, i32 0
  %xor3291 = xor i32 %conv3223, %cond3290
  %tobool3292 = icmp ne i32 %xor3291, 0
  br i1 %tobool3292, label %if.then3293, label %if.else3305

if.then3293:                                      ; preds = %cond.end3287
  %1433 = load i32, i32* %tmp, align 4
  %tobool3294 = icmp ne i32 %1433, 0
  br i1 %tobool3294, label %land.lhs.true3295, label %if.else3303

land.lhs.true3295:                                ; preds = %if.then3293
  %1434 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %intuit3296 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %1434, i32 0, i32 12
  %1435 = load i8, i8* %intuit3296, align 8
  %tobool3297 = trunc i8 %1435 to i1
  br i1 %tobool3297, label %if.then3302, label %lor.lhs.false3299

lor.lhs.false3299:                                ; preds = %land.lhs.true3295
  %1436 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %call3300 = call i32 @S_regtry(%struct.regmatch_info* %1436, i8** %s.addr)
  %tobool3301 = icmp ne i32 %call3300, 0
  br i1 %tobool3301, label %if.then3302, label %if.else3303

if.then3302:                                      ; preds = %lor.lhs.false3299, %land.lhs.true3295
  br label %got_it

if.else3303:                                      ; preds = %lor.lhs.false3299, %if.then3293
  %1437 = load i32, i32* %doevery, align 4
  store i32 %1437, i32* %tmp, align 4
  br label %if.end3304

if.end3304:                                       ; preds = %if.else3303
  br label %if.end3306

if.else3305:                                      ; preds = %cond.end3287
  store i32 1, i32* %tmp, align 4
  br label %if.end3306

if.end3306:                                       ; preds = %if.else3305, %if.end3304
  %1438 = load i8*, i8** %s.addr, align 8
  %1439 = load i8, i8* %1438, align 1
  %idxprom3307 = zext i8 %1439 to i64
  %arrayidx3308 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom3307
  %1440 = load i8, i8* %arrayidx3308, align 1
  %conv3309 = zext i8 %1440 to i32
  %1441 = load i8*, i8** %s.addr, align 8
  %idx.ext3310 = sext i32 %conv3309 to i64
  %add.ptr3311 = getelementptr inbounds i8, i8* %1441, i64 %idx.ext3310
  store i8* %add.ptr3311, i8** %s.addr, align 8
  br label %while.cond3218

while.end3312:                                    ; preds = %while.cond3218
  br label %do.end3313

do.end3313:                                       ; preds = %while.end3312
  br label %sw.epilog3399

sw.bb3314:                                        ; preds = %if.else2783
  br label %do.body3315

do.body3315:                                      ; preds = %sw.bb3314
  br label %while.cond3316

while.cond3316:                                   ; preds = %if.end3386, %do.body3315
  %1442 = load i8*, i8** %s.addr, align 8
  %1443 = load i8*, i8** %strend.addr, align 8
  %cmp3317 = icmp ult i8* %1442, %1443
  br i1 %cmp3317, label %while.body3319, label %while.end3392

while.body3319:                                   ; preds = %while.cond3316
  %1444 = load i8, i8* %to_complement, align 1
  %tobool3320 = trunc i8 %1444 to i1
  %conv3321 = zext i1 %tobool3320 to i32
  %1445 = load i8*, i8** %s.addr, align 8
  %1446 = load i8, i8* %1445, align 1
  %conv3322 = sext i8 %1446 to i64
  %cmp3323 = icmp ult i64 %conv3322, 128
  br i1 %cmp3323, label %cond.true3325, label %cond.false3332

cond.true3325:                                    ; preds = %while.body3319
  %1447 = load i8*, i8** %s.addr, align 8
  %1448 = load i8, i8* %1447, align 1
  %idxprom3326 = zext i8 %1448 to i64
  %arrayidx3327 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom3326
  %1449 = load i32, i32* %arrayidx3327, align 4
  %and3328 = and i32 %1449, 8192
  %tobool3329 = icmp ne i32 %and3328, 0
  %1450 = zext i1 %tobool3329 to i64
  %cond3331 = select i1 %tobool3329, i32 1, i32 0
  br label %cond.end3367

cond.false3332:                                   ; preds = %while.body3319
  %1451 = load i8*, i8** %s.addr, align 8
  %1452 = load i8, i8* %1451, align 1
  %conv3333 = zext i8 %1452 to i32
  %and3334 = and i32 %conv3333, 254
  %cmp3335 = icmp eq i32 %and3334, 194
  br i1 %cmp3335, label %cond.true3337, label %cond.false3364

cond.true3337:                                    ; preds = %cond.false3332
  %1453 = load i8*, i8** %s.addr, align 8
  %1454 = load i8, i8* %1453, align 1
  %conv3338 = sext i8 %1454 to i32
  %and3339 = and i32 %conv3338, 31
  %shl3340 = shl i32 %and3339, 6
  %1455 = load i8*, i8** %s.addr, align 8
  %add.ptr3341 = getelementptr inbounds i8, i8* %1455, i64 1
  %1456 = load i8, i8* %add.ptr3341, align 1
  %conv3342 = zext i8 %1456 to i32
  %and3343 = and i32 %conv3342, 63
  %or3344 = or i32 %shl3340, %and3343
  %conv3345 = sext i32 %or3344 to i64
  %and3346 = and i64 %conv3345, -256
  %tobool3347 = icmp ne i64 %and3346, 0
  br i1 %tobool3347, label %land.end3361, label %land.rhs3348

land.rhs3348:                                     ; preds = %cond.true3337
  %1457 = load i8*, i8** %s.addr, align 8
  %1458 = load i8, i8* %1457, align 1
  %conv3349 = sext i8 %1458 to i32
  %and3350 = and i32 %conv3349, 31
  %shl3351 = shl i32 %and3350, 6
  %1459 = load i8*, i8** %s.addr, align 8
  %add.ptr3352 = getelementptr inbounds i8, i8* %1459, i64 1
  %1460 = load i8, i8* %add.ptr3352, align 1
  %conv3353 = zext i8 %1460 to i32
  %and3354 = and i32 %conv3353, 63
  %or3355 = or i32 %shl3351, %and3354
  %conv3356 = trunc i32 %or3355 to i8
  %idxprom3357 = zext i8 %conv3356 to i64
  %arrayidx3358 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom3357
  %1461 = load i32, i32* %arrayidx3358, align 4
  %and3359 = and i32 %1461, 8192
  %tobool3360 = icmp ne i32 %and3359, 0
  br label %land.end3361

land.end3361:                                     ; preds = %land.rhs3348, %cond.true3337
  %1462 = phi i1 [ false, %cond.true3337 ], [ %tobool3360, %land.rhs3348 ]
  %1463 = zext i1 %1462 to i64
  %cond3363 = select i1 %1462, i32 1, i32 0
  br label %cond.end3365

cond.false3364:                                   ; preds = %cond.false3332
  br label %cond.end3365

cond.end3365:                                     ; preds = %cond.false3364, %land.end3361
  %cond3366 = phi i32 [ %cond3363, %land.end3361 ], [ 0, %cond.false3364 ]
  br label %cond.end3367

cond.end3367:                                     ; preds = %cond.end3365, %cond.true3325
  %cond3368 = phi i32 [ %cond3331, %cond.true3325 ], [ %cond3366, %cond.end3365 ]
  %tobool3369 = icmp ne i32 %cond3368, 0
  %1464 = zext i1 %tobool3369 to i64
  %cond3370 = select i1 %tobool3369, i32 1, i32 0
  %xor3371 = xor i32 %conv3321, %cond3370
  %tobool3372 = icmp ne i32 %xor3371, 0
  br i1 %tobool3372, label %if.then3373, label %if.else3385

if.then3373:                                      ; preds = %cond.end3367
  %1465 = load i32, i32* %tmp, align 4
  %tobool3374 = icmp ne i32 %1465, 0
  br i1 %tobool3374, label %land.lhs.true3375, label %if.else3383

land.lhs.true3375:                                ; preds = %if.then3373
  %1466 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %intuit3376 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %1466, i32 0, i32 12
  %1467 = load i8, i8* %intuit3376, align 8
  %tobool3377 = trunc i8 %1467 to i1
  br i1 %tobool3377, label %if.then3382, label %lor.lhs.false3379

lor.lhs.false3379:                                ; preds = %land.lhs.true3375
  %1468 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %call3380 = call i32 @S_regtry(%struct.regmatch_info* %1468, i8** %s.addr)
  %tobool3381 = icmp ne i32 %call3380, 0
  br i1 %tobool3381, label %if.then3382, label %if.else3383

if.then3382:                                      ; preds = %lor.lhs.false3379, %land.lhs.true3375
  br label %got_it

if.else3383:                                      ; preds = %lor.lhs.false3379, %if.then3373
  %1469 = load i32, i32* %doevery, align 4
  store i32 %1469, i32* %tmp, align 4
  br label %if.end3384

if.end3384:                                       ; preds = %if.else3383
  br label %if.end3386

if.else3385:                                      ; preds = %cond.end3367
  store i32 1, i32* %tmp, align 4
  br label %if.end3386

if.end3386:                                       ; preds = %if.else3385, %if.end3384
  %1470 = load i8*, i8** %s.addr, align 8
  %1471 = load i8, i8* %1470, align 1
  %idxprom3387 = zext i8 %1471 to i64
  %arrayidx3388 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom3387
  %1472 = load i8, i8* %arrayidx3388, align 1
  %conv3389 = zext i8 %1472 to i32
  %1473 = load i8*, i8** %s.addr, align 8
  %idx.ext3390 = sext i32 %conv3389 to i64
  %add.ptr3391 = getelementptr inbounds i8, i8* %1473, i64 %idx.ext3390
  store i8* %add.ptr3391, i8** %s.addr, align 8
  br label %while.cond3316

while.end3392:                                    ; preds = %while.cond3316
  br label %do.end3393

do.end3393:                                       ; preds = %while.end3392
  br label %sw.epilog3399

sw.default:                                       ; preds = %if.else2783
  %1474 = load %struct.regnode*, %struct.regnode** %c.addr, align 8
  %type3394 = getelementptr inbounds %struct.regnode, %struct.regnode* %1474, i32 0, i32 1
  %1475 = load i8, i8* %type3394, align 1
  %conv3395 = zext i8 %1475 to i32
  %1476 = load %struct.regnode*, %struct.regnode** %c.addr, align 8
  %type3396 = getelementptr inbounds %struct.regnode, %struct.regnode* %1476, i32 0, i32 1
  %1477 = load i8, i8* %type3396, align 1
  %idxprom3397 = zext i8 %1477 to i64
  %arrayidx3398 = getelementptr inbounds [0 x i8*], [0 x i8*]* @PL_reg_name, i64 0, i64 %idxprom3397
  %1478 = load i8*, i8** %arrayidx3398, align 8
  %1479 = load i32, i32* %classnum, align 4
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.5, i64 0, i64 0), i32 %conv3395, i8* %1478, i32 %1479)
  br label %sw.epilog3399

sw.epilog3399:                                    ; preds = %sw.default, %do.end3393, %do.end3313, %do.end3215, %do.end3103, %do.end2946
  br label %if.end3400

if.end3400:                                       ; preds = %sw.epilog3399, %while.end2782
  br label %if.end3401

if.end3401:                                       ; preds = %if.end3400, %do.end2691
  br label %sw.epilog3988

found_above_latin1:                               ; preds = %if.then2705
  %1480 = load i32, i32* %classnum, align 4
  %idxprom3402 = zext i32 %1480 to i64
  %arrayidx3403 = getelementptr inbounds [10 x %struct.sv*], [10 x %struct.sv*]* @PL_utf8_swash_ptrs, i64 0, i64 %idxprom3402
  %1481 = load %struct.sv*, %struct.sv** %arrayidx3403, align 8
  %tobool3404 = icmp ne %struct.sv* %1481, null
  br i1 %tobool3404, label %if.end3412, label %if.then3405

if.then3405:                                      ; preds = %found_above_latin1
  store i8 4, i8* %flags3406, align 1
  %1482 = load i32, i32* %classnum, align 4
  %idxprom3407 = zext i32 %1482 to i64
  %arrayidx3408 = getelementptr inbounds [16 x %struct.sv*], [16 x %struct.sv*]* @PL_XPosix_ptrs, i64 0, i64 %idxprom3407
  %1483 = load %struct.sv*, %struct.sv** %arrayidx3408, align 8
  %call3409 = call %struct.sv* @Perl__core_swash_init(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.4, i64 0, i64 0), %struct.sv* @PL_sv_undef, i32 1, i32 0, %struct.sv* %1483, i8* %flags3406)
  %1484 = load i32, i32* %classnum, align 4
  %idxprom3410 = zext i32 %1484 to i64
  %arrayidx3411 = getelementptr inbounds [10 x %struct.sv*], [10 x %struct.sv*]* @PL_utf8_swash_ptrs, i64 0, i64 %idxprom3410
  store %struct.sv* %call3409, %struct.sv** %arrayidx3411, align 8
  br label %if.end3412

if.end3412:                                       ; preds = %if.then3405, %found_above_latin1
  br label %do.body3413

do.body3413:                                      ; preds = %if.end3412
  br label %while.cond3414

while.cond3414:                                   ; preds = %if.end3491, %do.body3413
  %1485 = load i8*, i8** %s.addr, align 8
  %1486 = load i8*, i8** %strend.addr, align 8
  %cmp3415 = icmp ult i8* %1485, %1486
  br i1 %cmp3415, label %while.body3417, label %while.end3497

while.body3417:                                   ; preds = %while.cond3414
  %1487 = load i8, i8* %to_complement, align 1
  %tobool3418 = trunc i8 %1487 to i1
  %conv3419 = zext i1 %tobool3418 to i32
  %1488 = load i8*, i8** %s.addr, align 8
  %1489 = load i8, i8* %1488, align 1
  %conv3420 = sext i8 %1489 to i64
  %cmp3421 = icmp ult i64 %conv3420, 128
  br i1 %cmp3421, label %cond.true3423, label %cond.false3432

cond.true3423:                                    ; preds = %while.body3417
  %1490 = load i8*, i8** %s.addr, align 8
  %1491 = load i8, i8* %1490, align 1
  %idxprom3424 = zext i8 %1491 to i64
  %arrayidx3425 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom3424
  %1492 = load i32, i32* %arrayidx3425, align 4
  %1493 = load i32, i32* %classnum, align 4
  %shl3426 = shl i32 1, %1493
  %and3427 = and i32 %1492, %shl3426
  %tobool3428 = icmp ne i32 %and3427, 0
  %1494 = zext i1 %tobool3428 to i64
  %cond3430 = select i1 %tobool3428, i32 1, i32 0
  %conv3431 = sext i32 %cond3430 to i64
  br label %cond.end3472

cond.false3432:                                   ; preds = %while.body3417
  %1495 = load i8*, i8** %s.addr, align 8
  %1496 = load i8, i8* %1495, align 1
  %conv3433 = zext i8 %1496 to i32
  %and3434 = and i32 %conv3433, 254
  %cmp3435 = icmp eq i32 %and3434, 194
  br i1 %cmp3435, label %cond.true3437, label %cond.false3466

cond.true3437:                                    ; preds = %cond.false3432
  %1497 = load i8*, i8** %s.addr, align 8
  %1498 = load i8, i8* %1497, align 1
  %conv3438 = sext i8 %1498 to i32
  %and3439 = and i32 %conv3438, 31
  %shl3440 = shl i32 %and3439, 6
  %1499 = load i8*, i8** %s.addr, align 8
  %add.ptr3441 = getelementptr inbounds i8, i8* %1499, i64 1
  %1500 = load i8, i8* %add.ptr3441, align 1
  %conv3442 = zext i8 %1500 to i32
  %and3443 = and i32 %conv3442, 63
  %or3444 = or i32 %shl3440, %and3443
  %conv3445 = sext i32 %or3444 to i64
  %and3446 = and i64 %conv3445, -256
  %tobool3447 = icmp ne i64 %and3446, 0
  br i1 %tobool3447, label %land.end3462, label %land.rhs3448

land.rhs3448:                                     ; preds = %cond.true3437
  %1501 = load i8*, i8** %s.addr, align 8
  %1502 = load i8, i8* %1501, align 1
  %conv3449 = sext i8 %1502 to i32
  %and3450 = and i32 %conv3449, 31
  %shl3451 = shl i32 %and3450, 6
  %1503 = load i8*, i8** %s.addr, align 8
  %add.ptr3452 = getelementptr inbounds i8, i8* %1503, i64 1
  %1504 = load i8, i8* %add.ptr3452, align 1
  %conv3453 = zext i8 %1504 to i32
  %and3454 = and i32 %conv3453, 63
  %or3455 = or i32 %shl3451, %and3454
  %conv3456 = trunc i32 %or3455 to i8
  %idxprom3457 = zext i8 %conv3456 to i64
  %arrayidx3458 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom3457
  %1505 = load i32, i32* %arrayidx3458, align 4
  %1506 = load i32, i32* %classnum, align 4
  %shl3459 = shl i32 1, %1506
  %and3460 = and i32 %1505, %shl3459
  %tobool3461 = icmp ne i32 %and3460, 0
  br label %land.end3462

land.end3462:                                     ; preds = %land.rhs3448, %cond.true3437
  %1507 = phi i1 [ false, %cond.true3437 ], [ %tobool3461, %land.rhs3448 ]
  %1508 = zext i1 %1507 to i64
  %cond3464 = select i1 %1507, i32 1, i32 0
  %conv3465 = sext i32 %cond3464 to i64
  br label %cond.end3470

cond.false3466:                                   ; preds = %cond.false3432
  %1509 = load i32, i32* %classnum, align 4
  %idxprom3467 = zext i32 %1509 to i64
  %arrayidx3468 = getelementptr inbounds [10 x %struct.sv*], [10 x %struct.sv*]* @PL_utf8_swash_ptrs, i64 0, i64 %idxprom3467
  %1510 = load %struct.sv*, %struct.sv** %arrayidx3468, align 8
  %1511 = load i8*, i8** %s.addr, align 8
  %call3469 = call i64 @Perl_swash_fetch(%struct.sv* %1510, i8* %1511, i1 zeroext true)
  br label %cond.end3470

cond.end3470:                                     ; preds = %cond.false3466, %land.end3462
  %cond3471 = phi i64 [ %conv3465, %land.end3462 ], [ %call3469, %cond.false3466 ]
  br label %cond.end3472

cond.end3472:                                     ; preds = %cond.end3470, %cond.true3423
  %cond3473 = phi i64 [ %conv3431, %cond.true3423 ], [ %cond3471, %cond.end3470 ]
  %tobool3474 = icmp ne i64 %cond3473, 0
  %1512 = zext i1 %tobool3474 to i64
  %cond3475 = select i1 %tobool3474, i32 1, i32 0
  %xor3476 = xor i32 %conv3419, %cond3475
  %tobool3477 = icmp ne i32 %xor3476, 0
  br i1 %tobool3477, label %if.then3478, label %if.else3490

if.then3478:                                      ; preds = %cond.end3472
  %1513 = load i32, i32* %tmp, align 4
  %tobool3479 = icmp ne i32 %1513, 0
  br i1 %tobool3479, label %land.lhs.true3480, label %if.else3488

land.lhs.true3480:                                ; preds = %if.then3478
  %1514 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %intuit3481 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %1514, i32 0, i32 12
  %1515 = load i8, i8* %intuit3481, align 8
  %tobool3482 = trunc i8 %1515 to i1
  br i1 %tobool3482, label %if.then3487, label %lor.lhs.false3484

lor.lhs.false3484:                                ; preds = %land.lhs.true3480
  %1516 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %call3485 = call i32 @S_regtry(%struct.regmatch_info* %1516, i8** %s.addr)
  %tobool3486 = icmp ne i32 %call3485, 0
  br i1 %tobool3486, label %if.then3487, label %if.else3488

if.then3487:                                      ; preds = %lor.lhs.false3484, %land.lhs.true3480
  br label %got_it

if.else3488:                                      ; preds = %lor.lhs.false3484, %if.then3478
  %1517 = load i32, i32* %doevery, align 4
  store i32 %1517, i32* %tmp, align 4
  br label %if.end3489

if.end3489:                                       ; preds = %if.else3488
  br label %if.end3491

if.else3490:                                      ; preds = %cond.end3472
  store i32 1, i32* %tmp, align 4
  br label %if.end3491

if.end3491:                                       ; preds = %if.else3490, %if.end3489
  %1518 = load i8*, i8** %s.addr, align 8
  %1519 = load i8, i8* %1518, align 1
  %idxprom3492 = zext i8 %1519 to i64
  %arrayidx3493 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom3492
  %1520 = load i8, i8* %arrayidx3493, align 1
  %conv3494 = zext i8 %1520 to i32
  %1521 = load i8*, i8** %s.addr, align 8
  %idx.ext3495 = sext i32 %conv3494 to i64
  %add.ptr3496 = getelementptr inbounds i8, i8* %1521, i64 %idx.ext3495
  store i8* %add.ptr3496, i8** %s.addr, align 8
  br label %while.cond3414

while.end3497:                                    ; preds = %while.cond3414
  br label %do.end3498

do.end3498:                                       ; preds = %while.end3497
  br label %sw.epilog3988

sw.bb3499:                                        ; preds = %entry, %entry
  %1522 = load %struct.regnode*, %struct.regnode** %c.addr, align 8
  %flags3500 = getelementptr inbounds %struct.regnode, %struct.regnode* %1522, i32 0, i32 0
  %1523 = load i8, i8* %flags3500, align 2
  %conv3501 = zext i8 %1523 to i32
  %cmp3502 = icmp eq i32 %conv3501, 31
  br i1 %cmp3502, label %cond.true3504, label %cond.false3508

cond.true3504:                                    ; preds = %sw.bb3499
  %1524 = load i8, i8* %utf8_target, align 1
  %tobool3505 = trunc i8 %1524 to i1
  %1525 = zext i1 %tobool3505 to i64
  %cond3507 = select i1 %tobool3505, i32 1, i32 0
  br label %cond.end3542

cond.false3508:                                   ; preds = %sw.bb3499
  %1526 = load %struct.regnode*, %struct.regnode** %c.addr, align 8
  %flags3509 = getelementptr inbounds %struct.regnode, %struct.regnode* %1526, i32 0, i32 0
  %1527 = load i8, i8* %flags3509, align 2
  %conv3510 = zext i8 %1527 to i32
  %cmp3511 = icmp eq i32 %conv3510, 32
  br i1 %cmp3511, label %cond.true3513, label %cond.false3517

cond.true3513:                                    ; preds = %cond.false3508
  %1528 = load i8, i8* %utf8_target, align 1
  %tobool3514 = trunc i8 %1528 to i1
  %1529 = zext i1 %tobool3514 to i64
  %cond3516 = select i1 %tobool3514, i32 6, i32 0
  br label %cond.end3540

cond.false3517:                                   ; preds = %cond.false3508
  %1530 = load %struct.regnode*, %struct.regnode** %c.addr, align 8
  %flags3518 = getelementptr inbounds %struct.regnode, %struct.regnode* %1530, i32 0, i32 0
  %1531 = load i8, i8* %flags3518, align 2
  %conv3519 = zext i8 %1531 to i32
  %cmp3520 = icmp eq i32 %conv3519, 36
  br i1 %cmp3520, label %cond.true3522, label %cond.false3526

cond.true3522:                                    ; preds = %cond.false3517
  %1532 = load i8, i8* %utf8_target, align 1
  %tobool3523 = trunc i8 %1532 to i1
  %1533 = zext i1 %tobool3523 to i64
  %cond3525 = select i1 %tobool3523, i32 4, i32 5
  br label %cond.end3538

cond.false3526:                                   ; preds = %cond.false3517
  %1534 = load %struct.regnode*, %struct.regnode** %c.addr, align 8
  %flags3527 = getelementptr inbounds %struct.regnode, %struct.regnode* %1534, i32 0, i32 0
  %1535 = load i8, i8* %flags3527, align 2
  %conv3528 = zext i8 %1535 to i32
  %cmp3529 = icmp eq i32 %conv3528, 38
  br i1 %cmp3529, label %cond.true3531, label %cond.false3532

cond.true3531:                                    ; preds = %cond.false3526
  br label %cond.end3536

cond.false3532:                                   ; preds = %cond.false3526
  %1536 = load i8, i8* %utf8_target, align 1
  %tobool3533 = trunc i8 %1536 to i1
  %1537 = zext i1 %tobool3533 to i64
  %cond3535 = select i1 %tobool3533, i32 2, i32 3
  br label %cond.end3536

cond.end3536:                                     ; preds = %cond.false3532, %cond.true3531
  %cond3537 = phi i32 [ 7, %cond.true3531 ], [ %cond3535, %cond.false3532 ]
  br label %cond.end3538

cond.end3538:                                     ; preds = %cond.end3536, %cond.true3522
  %cond3539 = phi i32 [ %cond3525, %cond.true3522 ], [ %cond3537, %cond.end3536 ]
  br label %cond.end3540

cond.end3540:                                     ; preds = %cond.end3538, %cond.true3513
  %cond3541 = phi i32 [ %cond3516, %cond.true3513 ], [ %cond3539, %cond.end3538 ]
  br label %cond.end3542

cond.end3542:                                     ; preds = %cond.end3540, %cond.true3504
  %cond3543 = phi i32 [ %cond3507, %cond.true3504 ], [ %cond3541, %cond.end3540 ]
  store i32 %cond3543, i32* %trie_type, align 4
  %1538 = load %struct.regexp_internal*, %struct.regexp_internal** %progi, align 8
  %data = getelementptr inbounds %struct.regexp_internal, %struct.regexp_internal* %1538, i32 0, i32 3
  %1539 = load %struct.reg_data*, %struct.reg_data** %data, align 8
  %data3544 = getelementptr inbounds %struct.reg_data, %struct.reg_data* %1539, i32 0, i32 2
  %1540 = load %struct.regnode*, %struct.regnode** %c.addr, align 8
  %1541 = bitcast %struct.regnode* %1540 to %struct.regnode_1*
  %arg1 = getelementptr inbounds %struct.regnode_1, %struct.regnode_1* %1541, i32 0, i32 3
  %1542 = load i32, i32* %arg1, align 4
  %idxprom3545 = zext i32 %1542 to i64
  %arrayidx3546 = getelementptr inbounds [1 x i8*], [1 x i8*]* %data3544, i64 0, i64 %idxprom3545
  %1543 = load i8*, i8** %arrayidx3546, align 8
  %1544 = bitcast i8* %1543 to %struct._reg_ac_data*
  store %struct._reg_ac_data* %1544, %struct._reg_ac_data** %aho, align 8
  %1545 = load %struct.regexp_internal*, %struct.regexp_internal** %progi, align 8
  %data3547 = getelementptr inbounds %struct.regexp_internal, %struct.regexp_internal* %1545, i32 0, i32 3
  %1546 = load %struct.reg_data*, %struct.reg_data** %data3547, align 8
  %data3548 = getelementptr inbounds %struct.reg_data, %struct.reg_data* %1546, i32 0, i32 2
  %1547 = load %struct._reg_ac_data*, %struct._reg_ac_data** %aho, align 8
  %trie3549 = getelementptr inbounds %struct._reg_ac_data, %struct._reg_ac_data* %1547, i32 0, i32 1
  %1548 = load i32, i32* %trie3549, align 4
  %idxprom3550 = zext i32 %1548 to i64
  %arrayidx3551 = getelementptr inbounds [1 x i8*], [1 x i8*]* %data3548, i64 0, i64 %idxprom3550
  %1549 = load i8*, i8** %arrayidx3551, align 8
  %1550 = bitcast i8* %1549 to %struct._reg_trie_data*
  store %struct._reg_trie_data* %1550, %struct._reg_trie_data** %trie, align 8
  %1551 = load %struct.regexp_internal*, %struct.regexp_internal** %progi, align 8
  %data3552 = getelementptr inbounds %struct.regexp_internal, %struct.regexp_internal* %1551, i32 0, i32 3
  %1552 = load %struct.reg_data*, %struct.reg_data** %data3552, align 8
  %data3553 = getelementptr inbounds %struct.reg_data, %struct.reg_data* %1552, i32 0, i32 2
  %1553 = load %struct._reg_ac_data*, %struct._reg_ac_data** %aho, align 8
  %trie3554 = getelementptr inbounds %struct._reg_ac_data, %struct._reg_ac_data* %1553, i32 0, i32 1
  %1554 = load i32, i32* %trie3554, align 4
  %add3555 = add i32 %1554, 1
  %idxprom3556 = zext i32 %add3555 to i64
  %arrayidx3557 = getelementptr inbounds [1 x i8*], [1 x i8*]* %data3553, i64 0, i64 %idxprom3556
  %1555 = load i8*, i8** %arrayidx3557, align 8
  %1556 = bitcast i8* %1555 to %struct.hv*
  store %struct.hv* %1556, %struct.hv** %widecharmap, align 8
  %1557 = load i8*, i8** %strend.addr, align 8
  %1558 = load %struct._reg_trie_data*, %struct._reg_trie_data** %trie, align 8
  %minlen = getelementptr inbounds %struct._reg_trie_data, %struct._reg_trie_data* %1558, i32 0, i32 10
  %1559 = load i64, i64* %minlen, align 8
  %idx.neg = sub i64 0, %1559
  %add.ptr3558 = getelementptr inbounds i8, i8* %1557, i64 %idx.neg
  store i8* %add.ptr3558, i8** %last_start, align 8
  %1560 = load %struct._reg_trie_data*, %struct._reg_trie_data** %trie, align 8
  %maxlen3559 = getelementptr inbounds %struct._reg_trie_data, %struct._reg_trie_data* %1560, i32 0, i32 11
  %1561 = load i64, i64* %maxlen3559, align 8
  store i64 %1561, i64* %maxlen, align 8
  store i8* null, i8** %bitmap3560, align 8
  call void @Perl_push_scope()
  call void @Perl_save_strlen(i64* @PL_tmps_floor)
  %1562 = load i64, i64* @PL_tmps_ix, align 8
  store i64 %1562, i64* @PL_tmps_floor, align 8
  %1563 = load i64, i64* %maxlen, align 8
  %mul = mul i64 %1563, 8
  %call3561 = call %struct.sv* @Perl_newSV(i64 %mul)
  store %struct.sv* %call3561, %struct.sv** %sv_points, align 8
  br label %do.body3562

do.body3562:                                      ; preds = %cond.end3542
  %1564 = load i64, i64* %maxlen, align 8
  %mul3563 = mul i64 %1564, 8
  %1565 = load %struct.sv*, %struct.sv** %sv_points, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %1565, i32 0, i32 0
  %1566 = load i8*, i8** %sv_any, align 8
  %1567 = bitcast i8* %1566 to %struct.xpv*
  %xpv_cur = getelementptr inbounds %struct.xpv, %struct.xpv* %1567, i32 0, i32 2
  store i64 %mul3563, i64* %xpv_cur, align 8
  br label %do.end3564

do.end3564:                                       ; preds = %do.body3562
  %1568 = load %struct.sv*, %struct.sv** %sv_points, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %1568, i32 0, i32 2
  %1569 = load i32, i32* %sv_flags, align 4
  %or3565 = or i32 %1569, 17408
  store i32 %or3565, i32* %sv_flags, align 4
  %1570 = load %struct.sv*, %struct.sv** %sv_points, align 8
  %call3566 = call %struct.sv* @Perl_sv_2mortal(%struct.sv* %1570)
  %1571 = load %struct.sv*, %struct.sv** %sv_points, align 8
  %sv_flags3567 = getelementptr inbounds %struct.sv, %struct.sv* %1571, i32 0, i32 2
  %1572 = load i32, i32* %sv_flags3567, align 4
  %and3568 = and i32 %1572, 2098176
  %cmp3569 = icmp eq i32 %and3568, 1024
  br i1 %cmp3569, label %cond.true3571, label %cond.false3572

cond.true3571:                                    ; preds = %do.end3564
  %1573 = load %struct.sv*, %struct.sv** %sv_points, align 8
  %sv_u = getelementptr inbounds %struct.sv, %struct.sv* %1573, i32 0, i32 3
  %svu_pv = bitcast %union.anon* %sv_u to i8**
  %1574 = load i8*, i8** %svu_pv, align 8
  br label %cond.end3574

cond.false3572:                                   ; preds = %do.end3564
  %1575 = load %struct.sv*, %struct.sv** %sv_points, align 8
  %call3573 = call i8* @Perl_sv_2pv_flags(%struct.sv* %1575, i64* null, i32 2)
  br label %cond.end3574

cond.end3574:                                     ; preds = %cond.false3572, %cond.true3571
  %cond3575 = phi i8* [ %1574, %cond.true3571 ], [ %call3573, %cond.false3572 ]
  %1576 = bitcast i8* %cond3575 to i8**
  store i8** %1576, i8*** %points, align 8
  %1577 = load i32, i32* %trie_type, align 4
  %cmp3576 = icmp ne i32 %1577, 2
  br i1 %cmp3576, label %land.lhs.true3578, label %if.end3595

land.lhs.true3578:                                ; preds = %cond.end3574
  %1578 = load %struct._reg_trie_data*, %struct._reg_trie_data** %trie, align 8
  %bitmap3579 = getelementptr inbounds %struct._reg_trie_data, %struct._reg_trie_data* %1578, i32 0, i32 5
  %1579 = load i8*, i8** %bitmap3579, align 8
  %tobool3580 = icmp ne i8* %1579, null
  br i1 %tobool3580, label %if.then3586, label %lor.lhs.false3581

lor.lhs.false3581:                                ; preds = %land.lhs.true3578
  %1580 = load %struct.regnode*, %struct.regnode** %c.addr, align 8
  %type3582 = getelementptr inbounds %struct.regnode, %struct.regnode* %1580, i32 0, i32 1
  %1581 = load i8, i8* %type3582, align 1
  %conv3583 = zext i8 %1581 to i32
  %cmp3584 = icmp eq i32 %conv3583, 75
  br i1 %cmp3584, label %if.then3586, label %if.end3595

if.then3586:                                      ; preds = %lor.lhs.false3581, %land.lhs.true3578
  %1582 = load %struct._reg_trie_data*, %struct._reg_trie_data** %trie, align 8
  %bitmap3587 = getelementptr inbounds %struct._reg_trie_data, %struct._reg_trie_data* %1582, i32 0, i32 5
  %1583 = load i8*, i8** %bitmap3587, align 8
  %tobool3588 = icmp ne i8* %1583, null
  br i1 %tobool3588, label %if.then3589, label %if.else3591

if.then3589:                                      ; preds = %if.then3586
  %1584 = load %struct._reg_trie_data*, %struct._reg_trie_data** %trie, align 8
  %bitmap3590 = getelementptr inbounds %struct._reg_trie_data, %struct._reg_trie_data* %1584, i32 0, i32 5
  %1585 = load i8*, i8** %bitmap3590, align 8
  store i8* %1585, i8** %bitmap3560, align 8
  br label %if.end3594

if.else3591:                                      ; preds = %if.then3586
  %1586 = load %struct.regnode*, %struct.regnode** %c.addr, align 8
  %1587 = bitcast %struct.regnode* %1586 to %struct.regnode_charclass*
  %bitmap3592 = getelementptr inbounds %struct.regnode_charclass, %struct.regnode_charclass* %1587, i32 0, i32 4
  %arraydecay3593 = getelementptr inbounds [32 x i8], [32 x i8]* %bitmap3592, i64 0, i64 0
  store i8* %arraydecay3593, i8** %bitmap3560, align 8
  br label %if.end3594

if.end3594:                                       ; preds = %if.else3591, %if.then3589
  br label %if.end3595

if.end3595:                                       ; preds = %if.end3594, %lor.lhs.false3581, %cond.end3574
  br label %while.cond3596

while.cond3596:                                   ; preds = %if.end3979, %if.end3595
  %1588 = load i8*, i8** %s.addr, align 8
  %1589 = load i8*, i8** %last_start, align 8
  %cmp3597 = icmp ule i8* %1588, %1589
  br i1 %cmp3597, label %while.body3599, label %while.end3980

while.body3599:                                   ; preds = %while.cond3596
  %call3600 = call zeroext i1 @Perl_ckwarn(i32 44)
  %1590 = zext i1 %call3600 to i64
  %cond3602 = select i1 %call3600, i32 0, i32 1
  store i32 %cond3602, i32* %uniflags, align 4
  %1591 = load i8*, i8** %s.addr, align 8
  store i8* %1591, i8** %uc, align 8
  store i16 0, i16* %charid, align 2
  store i32 1, i32* %base, align 4
  store i32 1, i32* %state, align 4
  store i64 0, i64* %uvc, align 8
  store i64 0, i64* %len, align 8
  store i64 0, i64* %foldlen, align 8
  store i8* null, i8** %uscan, align 8
  store i8* null, i8** %leftmost, align 8
  store i32 0, i32* %pointpos, align 4
  br label %while.cond3603

while.cond3603:                                   ; preds = %if.end3926, %while.body3599
  %1592 = load i32, i32* %state, align 4
  %tobool3604 = icmp ne i32 %1592, 0
  br i1 %tobool3604, label %land.rhs3605, label %land.end3608

land.rhs3605:                                     ; preds = %while.cond3603
  %1593 = load i8*, i8** %uc, align 8
  %1594 = load i8*, i8** %strend.addr, align 8
  %cmp3606 = icmp ule i8* %1593, %1594
  br label %land.end3608

land.end3608:                                     ; preds = %land.rhs3605, %while.cond3603
  %1595 = phi i1 [ false, %while.cond3603 ], [ %cmp3606, %land.rhs3605 ]
  br i1 %1595, label %while.body3610, label %while.end3927

while.body3610:                                   ; preds = %land.end3608
  store i32 0, i32* %failed, align 4
  %1596 = load %struct._reg_ac_data*, %struct._reg_ac_data** %aho, align 8
  %states = getelementptr inbounds %struct._reg_ac_data, %struct._reg_ac_data* %1596, i32 0, i32 3
  %1597 = load %struct._reg_trie_state*, %struct._reg_trie_state** %states, align 8
  %1598 = load i32, i32* %state, align 4
  %idxprom3611 = zext i32 %1598 to i64
  %arrayidx3612 = getelementptr inbounds %struct._reg_trie_state, %struct._reg_trie_state* %1597, i64 %idxprom3611
  %wordnum = getelementptr inbounds %struct._reg_trie_state, %struct._reg_trie_state* %arrayidx3612, i32 0, i32 0
  %1599 = load i16, i16* %wordnum, align 8
  %conv3613 = zext i16 %1599 to i32
  store i32 %conv3613, i32* %word, align 4
  %1600 = load i32, i32* %state, align 4
  %cmp3614 = icmp eq i32 %1600, 1
  br i1 %cmp3614, label %if.then3616, label %if.end3676

if.then3616:                                      ; preds = %while.body3610
  %1601 = load i8*, i8** %bitmap3560, align 8
  %tobool3617 = icmp ne i8* %1601, null
  br i1 %tobool3617, label %if.then3618, label %if.end3671

if.then3618:                                      ; preds = %if.then3616
  %1602 = load i8, i8* %utf8_target, align 1
  %tobool3619 = trunc i8 %1602 to i1
  br i1 %tobool3619, label %if.then3620, label %if.else3647

if.then3620:                                      ; preds = %if.then3618
  br label %while.cond3621

while.cond3621:                                   ; preds = %while.body3640, %if.then3620
  %1603 = load i8*, i8** %uc, align 8
  %1604 = load i8*, i8** %last_start, align 8
  %cmp3622 = icmp ule i8* %1603, %1604
  br i1 %cmp3622, label %land.rhs3624, label %land.end3638

land.rhs3624:                                     ; preds = %while.cond3621
  %1605 = load i8*, i8** %bitmap3560, align 8
  %1606 = load i8*, i8** %uc, align 8
  %1607 = load i8, i8* %1606, align 1
  %conv3625 = zext i8 %1607 to i32
  %shr3626 = ashr i32 %conv3625, 3
  %and3627 = and i32 %shr3626, 31
  %idxprom3628 = sext i32 %and3627 to i64
  %arrayidx3629 = getelementptr inbounds i8, i8* %1605, i64 %idxprom3628
  %1608 = load i8, i8* %arrayidx3629, align 1
  %conv3630 = zext i8 %1608 to i32
  %1609 = load i8*, i8** %uc, align 8
  %1610 = load i8, i8* %1609, align 1
  %conv3631 = zext i8 %1610 to i32
  %and3632 = and i32 %conv3631, 7
  %shl3633 = shl i32 1, %and3632
  %and3634 = and i32 %conv3630, %shl3633
  %tobool3635 = icmp ne i32 %and3634, 0
  %lnot3636 = xor i1 %tobool3635, true
  br label %land.end3638

land.end3638:                                     ; preds = %land.rhs3624, %while.cond3621
  %1611 = phi i1 [ false, %while.cond3621 ], [ %lnot3636, %land.rhs3624 ]
  br i1 %1611, label %while.body3640, label %while.end3646

while.body3640:                                   ; preds = %land.end3638
  %1612 = load i8*, i8** %uc, align 8
  %1613 = load i8, i8* %1612, align 1
  %idxprom3641 = zext i8 %1613 to i64
  %arrayidx3642 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom3641
  %1614 = load i8, i8* %arrayidx3642, align 1
  %conv3643 = zext i8 %1614 to i32
  %1615 = load i8*, i8** %uc, align 8
  %idx.ext3644 = sext i32 %conv3643 to i64
  %add.ptr3645 = getelementptr inbounds i8, i8* %1615, i64 %idx.ext3644
  store i8* %add.ptr3645, i8** %uc, align 8
  br label %while.cond3621

while.end3646:                                    ; preds = %land.end3638
  br label %if.end3670

if.else3647:                                      ; preds = %if.then3618
  br label %while.cond3648

while.cond3648:                                   ; preds = %while.body3667, %if.else3647
  %1616 = load i8*, i8** %uc, align 8
  %1617 = load i8*, i8** %last_start, align 8
  %cmp3649 = icmp ule i8* %1616, %1617
  br i1 %cmp3649, label %land.rhs3651, label %land.end3665

land.rhs3651:                                     ; preds = %while.cond3648
  %1618 = load i8*, i8** %bitmap3560, align 8
  %1619 = load i8*, i8** %uc, align 8
  %1620 = load i8, i8* %1619, align 1
  %conv3652 = zext i8 %1620 to i32
  %shr3653 = ashr i32 %conv3652, 3
  %and3654 = and i32 %shr3653, 31
  %idxprom3655 = sext i32 %and3654 to i64
  %arrayidx3656 = getelementptr inbounds i8, i8* %1618, i64 %idxprom3655
  %1621 = load i8, i8* %arrayidx3656, align 1
  %conv3657 = zext i8 %1621 to i32
  %1622 = load i8*, i8** %uc, align 8
  %1623 = load i8, i8* %1622, align 1
  %conv3658 = zext i8 %1623 to i32
  %and3659 = and i32 %conv3658, 7
  %shl3660 = shl i32 1, %and3659
  %and3661 = and i32 %conv3657, %shl3660
  %tobool3662 = icmp ne i32 %and3661, 0
  %lnot3663 = xor i1 %tobool3662, true
  br label %land.end3665

land.end3665:                                     ; preds = %land.rhs3651, %while.cond3648
  %1624 = phi i1 [ false, %while.cond3648 ], [ %lnot3663, %land.rhs3651 ]
  br i1 %1624, label %while.body3667, label %while.end3669

while.body3667:                                   ; preds = %land.end3665
  %1625 = load i8*, i8** %uc, align 8
  %incdec.ptr3668 = getelementptr inbounds i8, i8* %1625, i32 1
  store i8* %incdec.ptr3668, i8** %uc, align 8
  br label %while.cond3648

while.end3669:                                    ; preds = %land.end3665
  br label %if.end3670

if.end3670:                                       ; preds = %while.end3669, %while.end3646
  %1626 = load i8*, i8** %uc, align 8
  store i8* %1626, i8** %s.addr, align 8
  br label %if.end3671

if.end3671:                                       ; preds = %if.end3670, %if.then3616
  %1627 = load i8*, i8** %uc, align 8
  %1628 = load i8*, i8** %last_start, align 8
  %cmp3672 = icmp ugt i8* %1627, %1628
  br i1 %cmp3672, label %if.then3674, label %if.end3675

if.then3674:                                      ; preds = %if.end3671
  br label %while.end3927

if.end3675:                                       ; preds = %if.end3671
  br label %if.end3676

if.end3676:                                       ; preds = %if.end3675, %while.body3610
  %1629 = load i32, i32* %word, align 4
  %tobool3677 = icmp ne i32 %1629, 0
  br i1 %tobool3677, label %if.then3678, label %if.end3695

if.then3678:                                      ; preds = %if.end3676
  %1630 = load i8**, i8*** %points, align 8
  %1631 = load i32, i32* %pointpos, align 4
  %1632 = load %struct._reg_trie_data*, %struct._reg_trie_data** %trie, align 8
  %wordinfo = getelementptr inbounds %struct._reg_trie_data, %struct._reg_trie_data* %1632, i32 0, i32 7
  %1633 = load %struct.reg_trie_wordinfo*, %struct.reg_trie_wordinfo** %wordinfo, align 8
  %1634 = load i32, i32* %word, align 4
  %idxprom3679 = zext i32 %1634 to i64
  %arrayidx3680 = getelementptr inbounds %struct.reg_trie_wordinfo, %struct.reg_trie_wordinfo* %1633, i64 %idxprom3679
  %len3681 = getelementptr inbounds %struct.reg_trie_wordinfo, %struct.reg_trie_wordinfo* %arrayidx3680, i32 0, i32 1
  %1635 = load i32, i32* %len3681, align 4
  %sub3682 = sub i32 %1631, %1635
  %conv3683 = zext i32 %sub3682 to i64
  %1636 = load i64, i64* %maxlen, align 8
  %rem = urem i64 %conv3683, %1636
  %arrayidx3684 = getelementptr inbounds i8*, i8** %1630, i64 %rem
  %1637 = load i8*, i8** %arrayidx3684, align 8
  store i8* %1637, i8** %lpos, align 8
  %1638 = load i8*, i8** %leftmost, align 8
  %tobool3685 = icmp ne i8* %1638, null
  br i1 %tobool3685, label %lor.lhs.false3686, label %if.then3689

lor.lhs.false3686:                                ; preds = %if.then3678
  %1639 = load i8*, i8** %lpos, align 8
  %1640 = load i8*, i8** %leftmost, align 8
  %cmp3687 = icmp ult i8* %1639, %1640
  br i1 %cmp3687, label %if.then3689, label %if.end3690

if.then3689:                                      ; preds = %lor.lhs.false3686, %if.then3678
  %1641 = load i8*, i8** %lpos, align 8
  store i8* %1641, i8** %leftmost, align 8
  br label %if.end3690

if.end3690:                                       ; preds = %if.then3689, %lor.lhs.false3686
  %1642 = load i32, i32* %base, align 4
  %cmp3691 = icmp eq i32 %1642, 0
  br i1 %cmp3691, label %if.then3693, label %if.end3694

if.then3693:                                      ; preds = %if.end3690
  br label %while.end3927

if.end3694:                                       ; preds = %if.end3690
  br label %if.end3695

if.end3695:                                       ; preds = %if.end3694, %if.end3676
  %1643 = load i8*, i8** %uc, align 8
  %1644 = load i8**, i8*** %points, align 8
  %1645 = load i32, i32* %pointpos, align 4
  %inc = add i32 %1645, 1
  store i32 %inc, i32* %pointpos, align 4
  %conv3696 = zext i32 %1645 to i64
  %1646 = load i64, i64* %maxlen, align 8
  %rem3697 = urem i64 %conv3696, %1646
  %arrayidx3698 = getelementptr inbounds i8*, i8** %1644, i64 %rem3697
  store i8* %1643, i8** %arrayidx3698, align 8
  %1647 = load i64, i64* %foldlen, align 8
  %tobool3699 = icmp ne i64 %1647, 0
  br i1 %tobool3699, label %if.then3703, label %lor.lhs.false3700

lor.lhs.false3700:                                ; preds = %if.end3695
  %1648 = load i8*, i8** %uc, align 8
  %1649 = load i8*, i8** %strend.addr, align 8
  %cmp3701 = icmp ult i8* %1648, %1649
  br i1 %cmp3701, label %if.then3703, label %if.else3874

if.then3703:                                      ; preds = %lor.lhs.false3700, %if.end3695
  br label %do.body3704

do.body3704:                                      ; preds = %if.then3703
  store i8 2, i8* %flags3705, align 1
  %1650 = load i32, i32* %trie_type, align 4
  switch i32 %1650, label %sw.epilog3848 [
    i32 7, label %sw.bb3706
    i32 4, label %sw.bb3715
    i32 2, label %sw.bb3719
    i32 5, label %sw.bb3776
    i32 3, label %sw.bb3780
    i32 6, label %sw.bb3835
    i32 1, label %sw.bb3844
    i32 0, label %sw.bb3846
  ]

sw.bb3706:                                        ; preds = %do.body3704
  %1651 = load i8, i8* %utf8_target, align 1
  %tobool3707 = trunc i8 %1651 to i1
  br i1 %tobool3707, label %land.lhs.true3709, label %if.end3714

land.lhs.true3709:                                ; preds = %sw.bb3706
  %1652 = load i8*, i8** %uc, align 8
  %1653 = load i8, i8* %1652, align 1
  %conv3710 = zext i8 %1653 to i32
  %cmp3711 = icmp sge i32 %conv3710, 196
  br i1 %cmp3711, label %if.then3713, label %if.end3714

if.then3713:                                      ; preds = %land.lhs.true3709
  br label %if.end3714

if.end3714:                                       ; preds = %if.then3713, %land.lhs.true3709, %sw.bb3706
  br label %do_trie_utf8_fold

sw.bb3715:                                        ; preds = %do.body3704
  %1654 = load i8, i8* %flags3705, align 1
  %conv3716 = zext i8 %1654 to i32
  %or3717 = or i32 %conv3716, 4
  %conv3718 = trunc i32 %or3717 to i8
  store i8 %conv3718, i8* %flags3705, align 1
  br label %sw.bb3719

sw.bb3719:                                        ; preds = %do.body3704, %sw.bb3715
  br label %do_trie_utf8_fold

do_trie_utf8_fold:                                ; preds = %sw.bb3719, %if.end3714
  %1655 = load i64, i64* %foldlen, align 8
  %cmp3720 = icmp ugt i64 %1655, 0
  br i1 %cmp3720, label %if.then3722, label %if.else3726

if.then3722:                                      ; preds = %do_trie_utf8_fold
  %1656 = load i8*, i8** %uscan, align 8
  %1657 = load i32, i32* %uniflags, align 4
  %call3723 = call i64 @Perl_utf8n_to_uvchr(i8* %1656, i64 13, i64* %len, i32 %1657)
  store i64 %call3723, i64* %uvc, align 8
  %1658 = load i64, i64* %len, align 8
  %1659 = load i64, i64* %foldlen, align 8
  %sub3724 = sub i64 %1659, %1658
  store i64 %sub3724, i64* %foldlen, align 8
  %1660 = load i64, i64* %len, align 8
  %1661 = load i8*, i8** %uscan, align 8
  %add.ptr3725 = getelementptr inbounds i8, i8* %1661, i64 %1660
  store i8* %add.ptr3725, i8** %uscan, align 8
  store i64 0, i64* %len, align 8
  br label %if.end3775

if.else3726:                                      ; preds = %do_trie_utf8_fold
  %1662 = load i8*, i8** %uc, align 8
  %arraydecay3727 = getelementptr inbounds [14 x i8], [14 x i8]* %foldbuf, i64 0, i64 0
  %1663 = load i8, i8* %flags3705, align 1
  %call3728 = call i64 @Perl__to_utf8_fold_flags(i8* %1662, i8* %arraydecay3727, i64* %foldlen, i8 zeroext %1663)
  store i64 %call3728, i64* %uvc, align 8
  %1664 = load i8*, i8** %uc, align 8
  %1665 = load i8, i8* %1664, align 1
  %idxprom3729 = zext i8 %1665 to i64
  %arrayidx3730 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom3729
  %1666 = load i8, i8* %arrayidx3730, align 1
  %conv3731 = zext i8 %1666 to i64
  store i64 %conv3731, i64* %len, align 8
  %1667 = load i64, i64* %uvc, align 8
  %cmp3732 = icmp ult i64 %1667, 128
  br i1 %cmp3732, label %cond.true3734, label %cond.false3735

cond.true3734:                                    ; preds = %if.else3726
  br label %cond.end3769

cond.false3735:                                   ; preds = %if.else3726
  %1668 = load i64, i64* %uvc, align 8
  %cmp3736 = icmp ult i64 %1668, 2048
  br i1 %cmp3736, label %cond.true3738, label %cond.false3739

cond.true3738:                                    ; preds = %cond.false3735
  br label %cond.end3767

cond.false3739:                                   ; preds = %cond.false3735
  %1669 = load i64, i64* %uvc, align 8
  %cmp3740 = icmp ult i64 %1669, 65536
  br i1 %cmp3740, label %cond.true3742, label %cond.false3743

cond.true3742:                                    ; preds = %cond.false3739
  br label %cond.end3765

cond.false3743:                                   ; preds = %cond.false3739
  %1670 = load i64, i64* %uvc, align 8
  %cmp3744 = icmp ult i64 %1670, 2097152
  br i1 %cmp3744, label %cond.true3746, label %cond.false3747

cond.true3746:                                    ; preds = %cond.false3743
  br label %cond.end3763

cond.false3747:                                   ; preds = %cond.false3743
  %1671 = load i64, i64* %uvc, align 8
  %cmp3748 = icmp ult i64 %1671, 67108864
  br i1 %cmp3748, label %cond.true3750, label %cond.false3751

cond.true3750:                                    ; preds = %cond.false3747
  br label %cond.end3761

cond.false3751:                                   ; preds = %cond.false3747
  %1672 = load i64, i64* %uvc, align 8
  %cmp3752 = icmp ult i64 %1672, 2147483648
  br i1 %cmp3752, label %cond.true3754, label %cond.false3755

cond.true3754:                                    ; preds = %cond.false3751
  br label %cond.end3759

cond.false3755:                                   ; preds = %cond.false3751
  %1673 = load i64, i64* %uvc, align 8
  %cmp3756 = icmp ult i64 %1673, 68719476736
  %1674 = zext i1 %cmp3756 to i64
  %cond3758 = select i1 %cmp3756, i32 7, i32 13
  br label %cond.end3759

cond.end3759:                                     ; preds = %cond.false3755, %cond.true3754
  %cond3760 = phi i32 [ 6, %cond.true3754 ], [ %cond3758, %cond.false3755 ]
  br label %cond.end3761

cond.end3761:                                     ; preds = %cond.end3759, %cond.true3750
  %cond3762 = phi i32 [ 5, %cond.true3750 ], [ %cond3760, %cond.end3759 ]
  br label %cond.end3763

cond.end3763:                                     ; preds = %cond.end3761, %cond.true3746
  %cond3764 = phi i32 [ 4, %cond.true3746 ], [ %cond3762, %cond.end3761 ]
  br label %cond.end3765

cond.end3765:                                     ; preds = %cond.end3763, %cond.true3742
  %cond3766 = phi i32 [ 3, %cond.true3742 ], [ %cond3764, %cond.end3763 ]
  br label %cond.end3767

cond.end3767:                                     ; preds = %cond.end3765, %cond.true3738
  %cond3768 = phi i32 [ 2, %cond.true3738 ], [ %cond3766, %cond.end3765 ]
  br label %cond.end3769

cond.end3769:                                     ; preds = %cond.end3767, %cond.true3734
  %cond3770 = phi i32 [ 1, %cond.true3734 ], [ %cond3768, %cond.end3767 ]
  %conv3771 = sext i32 %cond3770 to i64
  store i64 %conv3771, i64* %skiplen, align 8
  %1675 = load i64, i64* %skiplen, align 8
  %1676 = load i64, i64* %foldlen, align 8
  %sub3772 = sub i64 %1676, %1675
  store i64 %sub3772, i64* %foldlen, align 8
  %arraydecay3773 = getelementptr inbounds [14 x i8], [14 x i8]* %foldbuf, i64 0, i64 0
  %1677 = load i64, i64* %skiplen, align 8
  %add.ptr3774 = getelementptr inbounds i8, i8* %arraydecay3773, i64 %1677
  store i8* %add.ptr3774, i8** %uscan, align 8
  br label %if.end3775

if.end3775:                                       ; preds = %cond.end3769, %if.then3722
  br label %sw.epilog3848

sw.bb3776:                                        ; preds = %do.body3704
  %1678 = load i8, i8* %flags3705, align 1
  %conv3777 = zext i8 %1678 to i32
  %or3778 = or i32 %conv3777, 4
  %conv3779 = trunc i32 %or3778 to i8
  store i8 %conv3779, i8* %flags3705, align 1
  br label %sw.bb3780

sw.bb3780:                                        ; preds = %do.body3704, %sw.bb3776
  %1679 = load i64, i64* %foldlen, align 8
  %cmp3781 = icmp ugt i64 %1679, 0
  br i1 %cmp3781, label %if.then3783, label %if.else3787

if.then3783:                                      ; preds = %sw.bb3780
  %1680 = load i8*, i8** %uscan, align 8
  %1681 = load i32, i32* %uniflags, align 4
  %call3784 = call i64 @Perl_utf8n_to_uvchr(i8* %1680, i64 13, i64* %len, i32 %1681)
  store i64 %call3784, i64* %uvc, align 8
  %1682 = load i64, i64* %len, align 8
  %1683 = load i64, i64* %foldlen, align 8
  %sub3785 = sub i64 %1683, %1682
  store i64 %sub3785, i64* %foldlen, align 8
  %1684 = load i64, i64* %len, align 8
  %1685 = load i8*, i8** %uscan, align 8
  %add.ptr3786 = getelementptr inbounds i8, i8* %1685, i64 %1684
  store i8* %add.ptr3786, i8** %uscan, align 8
  store i64 0, i64* %len, align 8
  br label %if.end3834

if.else3787:                                      ; preds = %sw.bb3780
  store i64 1, i64* %len, align 8
  %1686 = load i8*, i8** %uc, align 8
  %1687 = load i8, i8* %1686, align 1
  %arraydecay3788 = getelementptr inbounds [14 x i8], [14 x i8]* %foldbuf, i64 0, i64 0
  %1688 = load i8, i8* %flags3705, align 1
  %conv3789 = zext i8 %1688 to i32
  %call3790 = call i64 @Perl__to_fold_latin1(i8 zeroext %1687, i8* %arraydecay3788, i64* %foldlen, i32 %conv3789)
  store i64 %call3790, i64* %uvc, align 8
  %1689 = load i64, i64* %uvc, align 8
  %cmp3791 = icmp ult i64 %1689, 128
  br i1 %cmp3791, label %cond.true3793, label %cond.false3794

cond.true3793:                                    ; preds = %if.else3787
  br label %cond.end3828

cond.false3794:                                   ; preds = %if.else3787
  %1690 = load i64, i64* %uvc, align 8
  %cmp3795 = icmp ult i64 %1690, 2048
  br i1 %cmp3795, label %cond.true3797, label %cond.false3798

cond.true3797:                                    ; preds = %cond.false3794
  br label %cond.end3826

cond.false3798:                                   ; preds = %cond.false3794
  %1691 = load i64, i64* %uvc, align 8
  %cmp3799 = icmp ult i64 %1691, 65536
  br i1 %cmp3799, label %cond.true3801, label %cond.false3802

cond.true3801:                                    ; preds = %cond.false3798
  br label %cond.end3824

cond.false3802:                                   ; preds = %cond.false3798
  %1692 = load i64, i64* %uvc, align 8
  %cmp3803 = icmp ult i64 %1692, 2097152
  br i1 %cmp3803, label %cond.true3805, label %cond.false3806

cond.true3805:                                    ; preds = %cond.false3802
  br label %cond.end3822

cond.false3806:                                   ; preds = %cond.false3802
  %1693 = load i64, i64* %uvc, align 8
  %cmp3807 = icmp ult i64 %1693, 67108864
  br i1 %cmp3807, label %cond.true3809, label %cond.false3810

cond.true3809:                                    ; preds = %cond.false3806
  br label %cond.end3820

cond.false3810:                                   ; preds = %cond.false3806
  %1694 = load i64, i64* %uvc, align 8
  %cmp3811 = icmp ult i64 %1694, 2147483648
  br i1 %cmp3811, label %cond.true3813, label %cond.false3814

cond.true3813:                                    ; preds = %cond.false3810
  br label %cond.end3818

cond.false3814:                                   ; preds = %cond.false3810
  %1695 = load i64, i64* %uvc, align 8
  %cmp3815 = icmp ult i64 %1695, 68719476736
  %1696 = zext i1 %cmp3815 to i64
  %cond3817 = select i1 %cmp3815, i32 7, i32 13
  br label %cond.end3818

cond.end3818:                                     ; preds = %cond.false3814, %cond.true3813
  %cond3819 = phi i32 [ 6, %cond.true3813 ], [ %cond3817, %cond.false3814 ]
  br label %cond.end3820

cond.end3820:                                     ; preds = %cond.end3818, %cond.true3809
  %cond3821 = phi i32 [ 5, %cond.true3809 ], [ %cond3819, %cond.end3818 ]
  br label %cond.end3822

cond.end3822:                                     ; preds = %cond.end3820, %cond.true3805
  %cond3823 = phi i32 [ 4, %cond.true3805 ], [ %cond3821, %cond.end3820 ]
  br label %cond.end3824

cond.end3824:                                     ; preds = %cond.end3822, %cond.true3801
  %cond3825 = phi i32 [ 3, %cond.true3801 ], [ %cond3823, %cond.end3822 ]
  br label %cond.end3826

cond.end3826:                                     ; preds = %cond.end3824, %cond.true3797
  %cond3827 = phi i32 [ 2, %cond.true3797 ], [ %cond3825, %cond.end3824 ]
  br label %cond.end3828

cond.end3828:                                     ; preds = %cond.end3826, %cond.true3793
  %cond3829 = phi i32 [ 1, %cond.true3793 ], [ %cond3827, %cond.end3826 ]
  %conv3830 = sext i32 %cond3829 to i64
  store i64 %conv3830, i64* %skiplen, align 8
  %1697 = load i64, i64* %skiplen, align 8
  %1698 = load i64, i64* %foldlen, align 8
  %sub3831 = sub i64 %1698, %1697
  store i64 %sub3831, i64* %foldlen, align 8
  %arraydecay3832 = getelementptr inbounds [14 x i8], [14 x i8]* %foldbuf, i64 0, i64 0
  %1699 = load i64, i64* %skiplen, align 8
  %add.ptr3833 = getelementptr inbounds i8, i8* %arraydecay3832, i64 %1699
  store i8* %add.ptr3833, i8** %uscan, align 8
  br label %if.end3834

if.end3834:                                       ; preds = %cond.end3828, %if.then3783
  br label %sw.epilog3848

sw.bb3835:                                        ; preds = %do.body3704
  %1700 = load i8, i8* %utf8_target, align 1
  %tobool3836 = trunc i8 %1700 to i1
  br i1 %tobool3836, label %land.lhs.true3838, label %if.end3843

land.lhs.true3838:                                ; preds = %sw.bb3835
  %1701 = load i8*, i8** %uc, align 8
  %1702 = load i8, i8* %1701, align 1
  %conv3839 = zext i8 %1702 to i32
  %cmp3840 = icmp sge i32 %conv3839, 196
  br i1 %cmp3840, label %if.then3842, label %if.end3843

if.then3842:                                      ; preds = %land.lhs.true3838
  br label %if.end3843

if.end3843:                                       ; preds = %if.then3842, %land.lhs.true3838, %sw.bb3835
  br label %sw.bb3844

sw.bb3844:                                        ; preds = %do.body3704, %if.end3843
  %1703 = load i8*, i8** %uc, align 8
  %1704 = load i32, i32* %uniflags, align 4
  %call3845 = call i64 @Perl_utf8n_to_uvchr(i8* %1703, i64 13, i64* %len, i32 %1704)
  store i64 %call3845, i64* %uvc, align 8
  br label %sw.epilog3848

sw.bb3846:                                        ; preds = %do.body3704
  %1705 = load i8*, i8** %uc, align 8
  %1706 = load i8, i8* %1705, align 1
  %conv3847 = zext i8 %1706 to i64
  store i64 %conv3847, i64* %uvc, align 8
  store i64 1, i64* %len, align 8
  br label %sw.epilog3848

sw.epilog3848:                                    ; preds = %sw.bb3846, %do.body3704, %sw.bb3844, %if.end3834, %if.end3775
  %1707 = load i64, i64* %uvc, align 8
  %cmp3849 = icmp ult i64 %1707, 256
  br i1 %cmp3849, label %if.then3851, label %if.else3853

if.then3851:                                      ; preds = %sw.epilog3848
  %1708 = load %struct._reg_trie_data*, %struct._reg_trie_data** %trie, align 8
  %charmap = getelementptr inbounds %struct._reg_trie_data, %struct._reg_trie_data* %1708, i32 0, i32 2
  %1709 = load i16*, i16** %charmap, align 8
  %1710 = load i64, i64* %uvc, align 8
  %arrayidx3852 = getelementptr inbounds i16, i16* %1709, i64 %1710
  %1711 = load i16, i16* %arrayidx3852, align 2
  store i16 %1711, i16* %charid, align 2
  br label %if.end3872

if.else3853:                                      ; preds = %sw.epilog3848
  store i16 0, i16* %charid, align 2
  %1712 = load %struct.hv*, %struct.hv** %widecharmap, align 8
  %tobool3854 = icmp ne %struct.hv* %1712, null
  br i1 %tobool3854, label %if.then3855, label %if.end3871

if.then3855:                                      ; preds = %if.else3853
  %1713 = load %struct.hv*, %struct.hv** %widecharmap, align 8
  %1714 = bitcast i64* %uvc to i8*
  %call3856 = call i8* @Perl_hv_common_key_len(%struct.hv* %1713, i8* %1714, i32 8, i32 32, %struct.sv* null, i32 0)
  %1715 = bitcast i8* %call3856 to %struct.sv**
  store %struct.sv** %1715, %struct.sv*** %svpp, align 8
  %1716 = load %struct.sv**, %struct.sv*** %svpp, align 8
  %tobool3857 = icmp ne %struct.sv** %1716, null
  br i1 %tobool3857, label %if.then3858, label %if.end3870

if.then3858:                                      ; preds = %if.then3855
  %1717 = load %struct.sv**, %struct.sv*** %svpp, align 8
  %1718 = load %struct.sv*, %struct.sv** %1717, align 8
  %sv_flags3859 = getelementptr inbounds %struct.sv, %struct.sv* %1718, i32 0, i32 2
  %1719 = load i32, i32* %sv_flags3859, align 4
  %and3860 = and i32 %1719, 2097408
  %cmp3861 = icmp eq i32 %and3860, 256
  br i1 %cmp3861, label %cond.true3863, label %cond.false3865

cond.true3863:                                    ; preds = %if.then3858
  %1720 = load %struct.sv**, %struct.sv*** %svpp, align 8
  %1721 = load %struct.sv*, %struct.sv** %1720, align 8
  %sv_any3864 = getelementptr inbounds %struct.sv, %struct.sv* %1721, i32 0, i32 0
  %1722 = load i8*, i8** %sv_any3864, align 8
  %1723 = bitcast i8* %1722 to %struct.xpviv*
  %xiv_u = getelementptr inbounds %struct.xpviv, %struct.xpviv* %1723, i32 0, i32 4
  %xivu_iv = bitcast %union._xivu* %xiv_u to i64*
  %1724 = load i64, i64* %xivu_iv, align 8
  br label %cond.end3867

cond.false3865:                                   ; preds = %if.then3858
  %1725 = load %struct.sv**, %struct.sv*** %svpp, align 8
  %1726 = load %struct.sv*, %struct.sv** %1725, align 8
  %call3866 = call i64 @Perl_sv_2iv_flags(%struct.sv* %1726, i32 2)
  br label %cond.end3867

cond.end3867:                                     ; preds = %cond.false3865, %cond.true3863
  %cond3868 = phi i64 [ %1724, %cond.true3863 ], [ %call3866, %cond.false3865 ]
  %conv3869 = trunc i64 %cond3868 to i16
  store i16 %conv3869, i16* %charid, align 2
  br label %if.end3870

if.end3870:                                       ; preds = %cond.end3867, %if.then3855
  br label %if.end3871

if.end3871:                                       ; preds = %if.end3870, %if.else3853
  br label %if.end3872

if.end3872:                                       ; preds = %if.end3871, %if.then3851
  br label %do.end3873

do.end3873:                                       ; preds = %if.end3872
  br label %if.end3875

if.else3874:                                      ; preds = %lor.lhs.false3700
  store i64 0, i64* %len, align 8
  store i16 0, i16* %charid, align 2
  br label %if.end3875

if.end3875:                                       ; preds = %if.else3874, %do.end3873
  br label %do.body3876

do.body3876:                                      ; preds = %do.cond, %if.end3875
  %1727 = load %struct._reg_ac_data*, %struct._reg_ac_data** %aho, align 8
  %states3877 = getelementptr inbounds %struct._reg_ac_data, %struct._reg_ac_data* %1727, i32 0, i32 3
  %1728 = load %struct._reg_trie_state*, %struct._reg_trie_state** %states3877, align 8
  %1729 = load i32, i32* %state, align 4
  %idxprom3878 = zext i32 %1729 to i64
  %arrayidx3879 = getelementptr inbounds %struct._reg_trie_state, %struct._reg_trie_state* %1728, i64 %idxprom3878
  %trans = getelementptr inbounds %struct._reg_trie_state, %struct._reg_trie_state* %arrayidx3879, i32 0, i32 1
  %base3880 = bitcast %union.anon.35* %trans to i32*
  %1730 = load i32, i32* %base3880, align 8
  store i32 %1730, i32* %base, align 4
  %1731 = load i32, i32* %base, align 4
  %tobool3881 = icmp ne i32 %1731, 0
  br i1 %tobool3881, label %if.then3882, label %if.else3913

if.then3882:                                      ; preds = %do.body3876
  %1732 = load i16, i16* %charid, align 2
  %conv3884 = zext i16 %1732 to i32
  %tobool3885 = icmp ne i32 %conv3884, 0
  br i1 %tobool3885, label %land.lhs.true3886, label %if.else3909

land.lhs.true3886:                                ; preds = %if.then3882
  %1733 = load i32, i32* %base, align 4
  %1734 = load i16, i16* %charid, align 2
  %conv3887 = zext i16 %1734 to i32
  %add3888 = add i32 %1733, %conv3887
  %sub3889 = sub i32 %add3888, 1
  %1735 = load %struct._reg_trie_data*, %struct._reg_trie_data** %trie, align 8
  %uniquecharcount = getelementptr inbounds %struct._reg_trie_data, %struct._reg_trie_data* %1735, i32 0, i32 8
  %1736 = load i16, i16* %uniquecharcount, align 8
  %conv3890 = zext i16 %1736 to i32
  %sub3891 = sub i32 %sub3889, %conv3890
  store i32 %sub3891, i32* %offset, align 4
  %cmp3892 = icmp sge i32 %sub3891, 0
  br i1 %cmp3892, label %land.lhs.true3894, label %if.else3909

land.lhs.true3894:                                ; preds = %land.lhs.true3886
  %1737 = load i32, i32* %offset, align 4
  %1738 = load %struct._reg_trie_data*, %struct._reg_trie_data** %trie, align 8
  %lasttrans = getelementptr inbounds %struct._reg_trie_data, %struct._reg_trie_data* %1738, i32 0, i32 1
  %1739 = load i32, i32* %lasttrans, align 4
  %cmp3895 = icmp ult i32 %1737, %1739
  br i1 %cmp3895, label %land.lhs.true3897, label %if.else3909

land.lhs.true3897:                                ; preds = %land.lhs.true3894
  %1740 = load %struct._reg_trie_data*, %struct._reg_trie_data** %trie, align 8
  %trans3898 = getelementptr inbounds %struct._reg_trie_data, %struct._reg_trie_data* %1740, i32 0, i32 4
  %1741 = load %struct._reg_trie_trans*, %struct._reg_trie_trans** %trans3898, align 8
  %1742 = load i32, i32* %offset, align 4
  %idxprom3899 = sext i32 %1742 to i64
  %arrayidx3900 = getelementptr inbounds %struct._reg_trie_trans, %struct._reg_trie_trans* %1741, i64 %idxprom3899
  %check = getelementptr inbounds %struct._reg_trie_trans, %struct._reg_trie_trans* %arrayidx3900, i32 0, i32 1
  %1743 = load i32, i32* %check, align 4
  %1744 = load i32, i32* %state, align 4
  %cmp3901 = icmp eq i32 %1743, %1744
  br i1 %cmp3901, label %land.lhs.true3903, label %if.else3909

land.lhs.true3903:                                ; preds = %land.lhs.true3897
  %1745 = load %struct._reg_trie_data*, %struct._reg_trie_data** %trie, align 8
  %trans3904 = getelementptr inbounds %struct._reg_trie_data, %struct._reg_trie_data* %1745, i32 0, i32 4
  %1746 = load %struct._reg_trie_trans*, %struct._reg_trie_trans** %trans3904, align 8
  %1747 = load i32, i32* %offset, align 4
  %idxprom3905 = sext i32 %1747 to i64
  %arrayidx3906 = getelementptr inbounds %struct._reg_trie_trans, %struct._reg_trie_trans* %1746, i64 %idxprom3905
  %next = getelementptr inbounds %struct._reg_trie_trans, %struct._reg_trie_trans* %arrayidx3906, i32 0, i32 0
  %1748 = load i32, i32* %next, align 4
  store i32 %1748, i32* %tmp3883, align 4
  %tobool3907 = icmp ne i32 %1748, 0
  br i1 %tobool3907, label %if.then3908, label %if.else3909

if.then3908:                                      ; preds = %land.lhs.true3903
  %1749 = load i32, i32* %tmp3883, align 4
  store i32 %1749, i32* %state, align 4
  br label %do.end3916

if.else3909:                                      ; preds = %land.lhs.true3903, %land.lhs.true3897, %land.lhs.true3894, %land.lhs.true3886, %if.then3882
  store i32 1, i32* %failed, align 4
  %1750 = load %struct._reg_ac_data*, %struct._reg_ac_data** %aho, align 8
  %fail = getelementptr inbounds %struct._reg_ac_data, %struct._reg_ac_data* %1750, i32 0, i32 2
  %1751 = load i32*, i32** %fail, align 8
  %1752 = load i32, i32* %state, align 4
  %idxprom3910 = zext i32 %1752 to i64
  %arrayidx3911 = getelementptr inbounds i32, i32* %1751, i64 %idxprom3910
  %1753 = load i32, i32* %arrayidx3911, align 4
  store i32 %1753, i32* %state, align 4
  br label %if.end3912

if.end3912:                                       ; preds = %if.else3909
  br label %if.end3914

if.else3913:                                      ; preds = %do.body3876
  store i32 1, i32* %failed, align 4
  br label %do.end3916

if.end3914:                                       ; preds = %if.end3912
  br label %do.cond

do.cond:                                          ; preds = %if.end3914
  %1754 = load i32, i32* %state, align 4
  %tobool3915 = icmp ne i32 %1754, 0
  br i1 %tobool3915, label %do.body3876, label %do.end3916

do.end3916:                                       ; preds = %do.cond, %if.else3913, %if.then3908
  %1755 = load i64, i64* %len, align 8
  %1756 = load i8*, i8** %uc, align 8
  %add.ptr3917 = getelementptr inbounds i8, i8* %1756, i64 %1755
  store i8* %add.ptr3917, i8** %uc, align 8
  %1757 = load i32, i32* %failed, align 4
  %tobool3918 = icmp ne i32 %1757, 0
  br i1 %tobool3918, label %if.then3919, label %if.end3926

if.then3919:                                      ; preds = %do.end3916
  %1758 = load i8*, i8** %leftmost, align 8
  %tobool3920 = icmp ne i8* %1758, null
  br i1 %tobool3920, label %if.then3921, label %if.end3922

if.then3921:                                      ; preds = %if.then3919
  br label %while.end3927

if.end3922:                                       ; preds = %if.then3919
  %1759 = load i32, i32* %state, align 4
  %tobool3923 = icmp ne i32 %1759, 0
  br i1 %tobool3923, label %if.end3925, label %if.then3924

if.then3924:                                      ; preds = %if.end3922
  store i32 1, i32* %state, align 4
  br label %if.end3925

if.end3925:                                       ; preds = %if.then3924, %if.end3922
  br label %if.end3926

if.end3926:                                       ; preds = %if.end3925, %do.end3916
  br label %while.cond3603

while.end3927:                                    ; preds = %if.then3921, %if.then3693, %if.then3674, %land.end3608
  %1760 = load %struct._reg_ac_data*, %struct._reg_ac_data** %aho, align 8
  %states3928 = getelementptr inbounds %struct._reg_ac_data, %struct._reg_ac_data* %1760, i32 0, i32 3
  %1761 = load %struct._reg_trie_state*, %struct._reg_trie_state** %states3928, align 8
  %1762 = load i32, i32* %state, align 4
  %idxprom3929 = zext i32 %1762 to i64
  %arrayidx3930 = getelementptr inbounds %struct._reg_trie_state, %struct._reg_trie_state* %1761, i64 %idxprom3929
  %wordnum3931 = getelementptr inbounds %struct._reg_trie_state, %struct._reg_trie_state* %arrayidx3930, i32 0, i32 0
  %1763 = load i16, i16* %wordnum3931, align 8
  %tobool3932 = icmp ne i16 %1763, 0
  br i1 %tobool3932, label %if.then3933, label %if.end3953

if.then3933:                                      ; preds = %while.end3927
  %1764 = load i8**, i8*** %points, align 8
  %1765 = load i32, i32* %pointpos, align 4
  %1766 = load %struct._reg_trie_data*, %struct._reg_trie_data** %trie, align 8
  %wordinfo3935 = getelementptr inbounds %struct._reg_trie_data, %struct._reg_trie_data* %1766, i32 0, i32 7
  %1767 = load %struct.reg_trie_wordinfo*, %struct.reg_trie_wordinfo** %wordinfo3935, align 8
  %1768 = load %struct._reg_ac_data*, %struct._reg_ac_data** %aho, align 8
  %states3936 = getelementptr inbounds %struct._reg_ac_data, %struct._reg_ac_data* %1768, i32 0, i32 3
  %1769 = load %struct._reg_trie_state*, %struct._reg_trie_state** %states3936, align 8
  %1770 = load i32, i32* %state, align 4
  %idxprom3937 = zext i32 %1770 to i64
  %arrayidx3938 = getelementptr inbounds %struct._reg_trie_state, %struct._reg_trie_state* %1769, i64 %idxprom3937
  %wordnum3939 = getelementptr inbounds %struct._reg_trie_state, %struct._reg_trie_state* %arrayidx3938, i32 0, i32 0
  %1771 = load i16, i16* %wordnum3939, align 8
  %idxprom3940 = zext i16 %1771 to i64
  %arrayidx3941 = getelementptr inbounds %struct.reg_trie_wordinfo, %struct.reg_trie_wordinfo* %1767, i64 %idxprom3940
  %len3942 = getelementptr inbounds %struct.reg_trie_wordinfo, %struct.reg_trie_wordinfo* %arrayidx3941, i32 0, i32 1
  %1772 = load i32, i32* %len3942, align 4
  %sub3943 = sub i32 %1765, %1772
  %conv3944 = zext i32 %sub3943 to i64
  %1773 = load i64, i64* %maxlen, align 8
  %rem3945 = urem i64 %conv3944, %1773
  %arrayidx3946 = getelementptr inbounds i8*, i8** %1764, i64 %rem3945
  %1774 = load i8*, i8** %arrayidx3946, align 8
  store i8* %1774, i8** %lpos3934, align 8
  %1775 = load i8*, i8** %leftmost, align 8
  %tobool3947 = icmp ne i8* %1775, null
  br i1 %tobool3947, label %lor.lhs.false3948, label %if.then3951

lor.lhs.false3948:                                ; preds = %if.then3933
  %1776 = load i8*, i8** %lpos3934, align 8
  %1777 = load i8*, i8** %leftmost, align 8
  %cmp3949 = icmp ult i8* %1776, %1777
  br i1 %cmp3949, label %if.then3951, label %if.end3952

if.then3951:                                      ; preds = %lor.lhs.false3948, %if.then3933
  %1778 = load i8*, i8** %lpos3934, align 8
  store i8* %1778, i8** %leftmost, align 8
  br label %if.end3952

if.end3952:                                       ; preds = %if.then3951, %lor.lhs.false3948
  br label %if.end3953

if.end3953:                                       ; preds = %if.end3952, %while.end3927
  %1779 = load i8*, i8** %leftmost, align 8
  %tobool3954 = icmp ne i8* %1779, null
  br i1 %tobool3954, label %if.then3955, label %if.else3978

if.then3955:                                      ; preds = %if.end3953
  %1780 = load i8*, i8** %leftmost, align 8
  store i8* %1780, i8** %s.addr, align 8
  %1781 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %intuit3956 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %1781, i32 0, i32 12
  %1782 = load i8, i8* %intuit3956, align 8
  %tobool3957 = trunc i8 %1782 to i1
  br i1 %tobool3957, label %if.then3962, label %lor.lhs.false3959

lor.lhs.false3959:                                ; preds = %if.then3955
  %1783 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %call3960 = call i32 @S_regtry(%struct.regmatch_info* %1783, i8** %s.addr)
  %tobool3961 = icmp ne i32 %call3960, 0
  br i1 %tobool3961, label %if.then3962, label %if.end3967

if.then3962:                                      ; preds = %lor.lhs.false3959, %if.then3955
  %1784 = load i64, i64* @PL_tmps_ix, align 8
  %1785 = load i64, i64* @PL_tmps_floor, align 8
  %cmp3963 = icmp sgt i64 %1784, %1785
  br i1 %cmp3963, label %if.then3965, label %if.end3966

if.then3965:                                      ; preds = %if.then3962
  call void @Perl_free_tmps()
  br label %if.end3966

if.end3966:                                       ; preds = %if.then3965, %if.then3962
  call void @Perl_pop_scope()
  br label %got_it

if.end3967:                                       ; preds = %lor.lhs.false3959
  %1786 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %is_utf8_target3968 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %1786, i32 0, i32 14
  %1787 = load i8, i8* %is_utf8_target3968, align 2
  %tobool3969 = trunc i8 %1787 to i1
  br i1 %tobool3969, label %cond.true3971, label %cond.false3974

cond.true3971:                                    ; preds = %if.end3967
  %1788 = load i8*, i8** %s.addr, align 8
  %1789 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend3972 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %1789, i32 0, i32 2
  %1790 = load i8*, i8** %strend3972, align 8
  %call3973 = call i8* @S_reghop3(i8* %1788, i64 1, i8* %1790)
  br label %cond.end3976

cond.false3974:                                   ; preds = %if.end3967
  %1791 = load i8*, i8** %s.addr, align 8
  %add.ptr3975 = getelementptr inbounds i8, i8* %1791, i64 1
  br label %cond.end3976

cond.end3976:                                     ; preds = %cond.false3974, %cond.true3971
  %cond3977 = phi i8* [ %call3973, %cond.true3971 ], [ %add.ptr3975, %cond.false3974 ]
  store i8* %cond3977, i8** %s.addr, align 8
  br label %if.end3979

if.else3978:                                      ; preds = %if.end3953
  br label %while.end3980

if.end3979:                                       ; preds = %cond.end3976
  br label %while.cond3596

while.end3980:                                    ; preds = %if.else3978, %while.cond3596
  %1792 = load i64, i64* @PL_tmps_ix, align 8
  %1793 = load i64, i64* @PL_tmps_floor, align 8
  %cmp3981 = icmp sgt i64 %1792, %1793
  br i1 %cmp3981, label %if.then3983, label %if.end3984

if.then3983:                                      ; preds = %while.end3980
  call void @Perl_free_tmps()
  br label %if.end3984

if.end3984:                                       ; preds = %if.then3983, %while.end3980
  call void @Perl_pop_scope()
  br label %sw.epilog3988

sw.default3985:                                   ; preds = %entry
  %1794 = load %struct.regnode*, %struct.regnode** %c.addr, align 8
  %type3986 = getelementptr inbounds %struct.regnode, %struct.regnode* %1794, i32 0, i32 1
  %1795 = load i8, i8* %type3986, align 1
  %conv3987 = zext i8 %1795 to i32
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.6, i64 0, i64 0), i32 %conv3987)
  br label %sw.epilog3988

sw.epilog3988:                                    ; preds = %sw.default3985, %if.end3984, %do.end3498, %if.end3401, %do.end2650, %do.end2607, %if.end2556, %if.end2486, %sw.epilog, %if.end1669, %if.end1459, %if.end1325, %if.end1122, %if.end988, %if.end785, %if.end524, %while.end276, %if.end209, %if.then109, %do.end78, %if.end58
  store i8* null, i8** %retval, align 8
  br label %return

got_it:                                           ; preds = %if.end3966, %if.then3487, %if.then3382, %if.then3302, %if.then3204, %if.then3092, %if.then2935, %if.then2772, %if.then2684, %if.then2643, %if.then2596, %if.then2548, %if.then2513, %if.then2478, %if.then2395, %if.then2260, %if.then2249, %if.then2210, %if.then2141, %if.then2128, %if.then2117, %if.then2079, %if.then2010, %if.then1997, %if.then1986, %if.then1953, %if.then1890, %if.then1875, %if.then1848, %if.then1792, %if.then1667, %if.then1643, %if.then1584, %if.then1457, %if.then1434, %if.then1376, %if.then1323, %if.then1300, %if.then1242, %if.then1119, %if.then1093, %if.then1038, %if.then985, %if.then959, %if.then904, %if.then783, %if.then756, %if.then681, %if.then521, %if.then491, %if.then419, %if.then263, %if.then204, %if.then170, %if.then73, %if.then51, %if.then16
  %1796 = load i8*, i8** %s.addr, align 8
  store i8* %1796, i8** %retval, align 8
  br label %return

return:                                           ; preds = %got_it, %sw.epilog3988
  %1797 = load i8*, i8** %retval, align 8
  ret i8* %1797
}

; Function Attrs: noinline nounwind uwtable
define internal void @S_SvREFCNT_dec(%struct.sv* %sv) #0 {
entry:
  %sv.addr = alloca %struct.sv*, align 8
  %rc = alloca i32, align 4
  store %struct.sv* %sv, %struct.sv** %sv.addr, align 8
  %0 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %cmp = icmp ne %struct.sv* %0, null
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  br i1 true, label %if.then, label %if.end6

cond.false:                                       ; preds = %entry
  br i1 false, label %if.then, label %if.end6

if.then:                                          ; preds = %cond.false, %cond.true
  %1 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_refcnt = getelementptr inbounds %struct.sv, %struct.sv* %1, i32 0, i32 1
  %2 = load i32, i32* %sv_refcnt, align 8
  store i32 %2, i32* %rc, align 4
  %3 = load i32, i32* %rc, align 4
  %cmp1 = icmp ugt i32 %3, 1
  br i1 %cmp1, label %cond.true2, label %cond.false3

cond.true2:                                       ; preds = %if.then
  br i1 true, label %if.then4, label %if.else

cond.false3:                                      ; preds = %if.then
  br i1 false, label %if.then4, label %if.else

if.then4:                                         ; preds = %cond.false3, %cond.true2
  %4 = load i32, i32* %rc, align 4
  %sub = sub i32 %4, 1
  %5 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_refcnt5 = getelementptr inbounds %struct.sv, %struct.sv* %5, i32 0, i32 1
  store i32 %sub, i32* %sv_refcnt5, align 8
  br label %if.end

if.else:                                          ; preds = %cond.false3, %cond.true2
  %6 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %7 = load i32, i32* %rc, align 4
  call void @Perl_sv_free2(%struct.sv* %6, i32 %7)
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then4
  br label %if.end6

if.end6:                                          ; preds = %if.end, %cond.false, %cond.true
  ret void
}

declare dso_local void @Perl_croak(i8*, ...) #2

declare dso_local %struct.magic* @Perl_mg_find_mglob(%struct.sv*) #2

; Function Attrs: noinline nounwind uwtable
define internal i64 @S_MgBYTEPOS(%struct.magic* %mg, %struct.sv* %sv, i8* %s, i64 %len) #0 {
entry:
  %retval = alloca i64, align 8
  %mg.addr = alloca %struct.magic*, align 8
  %sv.addr = alloca %struct.sv*, align 8
  %s.addr = alloca i8*, align 8
  %len.addr = alloca i64, align 8
  %pos = alloca i64, align 8
  store %struct.magic* %mg, %struct.magic** %mg.addr, align 8
  store %struct.sv* %sv, %struct.sv** %sv.addr, align 8
  store i8* %s, i8** %s.addr, align 8
  store i64 %len, i64* %len.addr, align 8
  %0 = load %struct.magic*, %struct.magic** %mg.addr, align 8
  %mg_flags = getelementptr inbounds %struct.magic, %struct.magic* %0, i32 0, i32 4
  %1 = load i8, i8* %mg_flags, align 1
  %conv = zext i8 %1 to i32
  %and = and i32 %conv, 64
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %2, i32 0, i32 2
  %3 = load i32, i32* %sv_flags, align 4
  %and1 = and i32 %3, 536870912
  %tobool2 = icmp ne i32 %and1, 0
  br i1 %tobool2, label %land.lhs.true, label %if.then

land.lhs.true:                                    ; preds = %lor.lhs.false
  %4 = load %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_hints = getelementptr inbounds %struct.cop, %struct.cop* %4, i32 0, i32 10
  %5 = load i32, i32* %cop_hints, align 8
  %add = add i32 %5, 0
  %and3 = and i32 %add, 8
  %tobool4 = icmp ne i32 %and3, 0
  br i1 %tobool4, label %if.then, label %if.else

if.then:                                          ; preds = %land.lhs.true, %lor.lhs.false, %entry
  %6 = load %struct.magic*, %struct.magic** %mg.addr, align 8
  %mg_len = getelementptr inbounds %struct.magic, %struct.magic* %6, i32 0, i32 5
  %7 = load i64, i64* %mg_len, align 8
  store i64 %7, i64* %retval, align 8
  br label %return

if.else:                                          ; preds = %land.lhs.true
  %8 = load %struct.magic*, %struct.magic** %mg.addr, align 8
  %mg_len5 = getelementptr inbounds %struct.magic, %struct.magic* %8, i32 0, i32 5
  %9 = load i64, i64* %mg_len5, align 8
  store i64 %9, i64* %pos, align 8
  %10 = load i64, i64* %pos, align 8
  %11 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_flags6 = getelementptr inbounds %struct.sv, %struct.sv* %11, i32 0, i32 2
  %12 = load i32, i32* %sv_flags6, align 4
  %and7 = and i32 %12, 2097152
  %tobool8 = icmp ne i32 %and7, 0
  br i1 %tobool8, label %cond.true, label %lor.lhs.false9

lor.lhs.false9:                                   ; preds = %if.else
  %13 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_flags10 = getelementptr inbounds %struct.sv, %struct.sv* %13, i32 0, i32 2
  %14 = load i32, i32* %sv_flags10, align 4
  %and11 = and i32 %14, 2048
  %tobool12 = icmp ne i32 %and11, 0
  br i1 %tobool12, label %land.lhs.true13, label %cond.false

land.lhs.true13:                                  ; preds = %lor.lhs.false9
  %15 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_u = getelementptr inbounds %struct.sv, %struct.sv* %15, i32 0, i32 3
  %svu_rv = bitcast %union.anon* %sv_u to %struct.sv**
  %16 = load %struct.sv*, %struct.sv** %svu_rv, align 8
  %sv_flags14 = getelementptr inbounds %struct.sv, %struct.sv* %16, i32 0, i32 2
  %17 = load i32, i32* %sv_flags14, align 4
  %and15 = and i32 %17, 1048576
  %tobool16 = icmp ne i32 %and15, 0
  br i1 %tobool16, label %land.lhs.true17, label %cond.false

land.lhs.true17:                                  ; preds = %land.lhs.true13
  %18 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_u18 = getelementptr inbounds %struct.sv, %struct.sv* %18, i32 0, i32 3
  %svu_rv19 = bitcast %union.anon* %sv_u18 to %struct.sv**
  %19 = load %struct.sv*, %struct.sv** %svu_rv19, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %19, i32 0, i32 0
  %20 = load i8*, i8** %sv_any, align 8
  %21 = bitcast i8* %20 to %struct.xpvmg*
  %xmg_stash = getelementptr inbounds %struct.xpvmg, %struct.xpvmg* %21, i32 0, i32 0
  %22 = load %struct.hv*, %struct.hv** %xmg_stash, align 8
  %sv_flags20 = getelementptr inbounds %struct.hv, %struct.hv* %22, i32 0, i32 2
  %23 = load i32, i32* %sv_flags20, align 4
  %and21 = and i32 %23, 268435456
  %tobool22 = icmp ne i32 %and21, 0
  br i1 %tobool22, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true17, %if.else
  %24 = load i8*, i8** %s.addr, align 8
  %25 = load i8*, i8** %s.addr, align 8
  %26 = load i64, i64* %len.addr, align 8
  %add.ptr = getelementptr inbounds i8, i8* %25, i64 %26
  %call = call i64 @Perl_utf8_length(i8* %24, i8* %add.ptr)
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true17, %land.lhs.true13, %lor.lhs.false9
  %27 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %call23 = call i64 @Perl_sv_len_utf8(%struct.sv* %27)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %call, %cond.true ], [ %call23, %cond.false ]
  %cmp = icmp ugt i64 %10, %cond
  br i1 %cmp, label %if.then25, label %if.end

if.then25:                                        ; preds = %cond.end
  %28 = load i64, i64* %len.addr, align 8
  %add26 = add i64 %28, 1
  store i64 %add26, i64* %retval, align 8
  br label %return

if.end:                                           ; preds = %cond.end
  %29 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %30 = load i8*, i8** %s.addr, align 8
  %31 = load i64, i64* %pos, align 8
  %call27 = call i64 @S_sv_or_pv_pos_u2b(%struct.sv* %29, i8* %30, i64 %31, i64* null)
  store i64 %call27, i64* %retval, align 8
  br label %return

return:                                           ; preds = %if.end, %if.then25, %if.then
  %32 = load i64, i64* %retval, align 8
  ret i64 %32
}

declare dso_local i8* @Perl_utf8_hop(i8*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @S_reg_set_capture_string(%struct.p5rx* %rx, i8* %strbeg, i8* %strend, %struct.sv* %sv, i32 %flags, i1 zeroext %utf8_target) #0 {
entry:
  %rx.addr = alloca %struct.p5rx*, align 8
  %strbeg.addr = alloca i8*, align 8
  %strend.addr = alloca i8*, align 8
  %sv.addr = alloca %struct.sv*, align 8
  %flags.addr = alloca i32, align 4
  %utf8_target.addr = alloca i8, align 1
  %prog = alloca %struct.regexp*, align 8
  %min = alloca i64, align 8
  %max = alloca i64, align 8
  %sublen93 = alloca i64, align 8
  %n = alloca i32, align 4
  %n127 = alloca i32, align 4
  store %struct.p5rx* %rx, %struct.p5rx** %rx.addr, align 8
  store i8* %strbeg, i8** %strbeg.addr, align 8
  store i8* %strend, i8** %strend.addr, align 8
  store %struct.sv* %sv, %struct.sv** %sv.addr, align 8
  store i32 %flags, i32* %flags.addr, align 4
  %frombool = zext i1 %utf8_target to i8
  store i8 %frombool, i8* %utf8_target.addr, align 1
  %0 = load %struct.p5rx*, %struct.p5rx** %rx.addr, align 8
  %call = call %struct.regexp* @S_ReANY(%struct.p5rx* %0)
  store %struct.regexp* %call, %struct.regexp** %prog, align 8
  %1 = load i32, i32* %flags.addr, align 4
  %and = and i32 %1, 1
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then, label %if.else221

if.then:                                          ; preds = %entry
  %2 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %2, i32 0, i32 2
  %3 = load i32, i32* %sv_flags, align 4
  %and1 = and i32 %3, 268435456
  %tobool2 = icmp ne i32 %and1, 0
  br i1 %tobool2, label %cond.true, label %cond.false10

cond.true:                                        ; preds = %if.then
  %4 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %4, i32 0, i32 0
  %5 = load i8*, i8** %sv_any, align 8
  %6 = bitcast i8* %5 to %struct.xpv*
  %xpv_len_u = getelementptr inbounds %struct.xpv, %struct.xpv* %6, i32 0, i32 3
  %xpvlenu_len = bitcast %union.anon.32* %xpv_len_u to i64*
  %7 = load i64, i64* %xpvlenu_len, align 8
  %tobool3 = icmp ne i64 %7, 0
  br i1 %tobool3, label %cond.true4, label %cond.false

cond.true4:                                       ; preds = %cond.true
  %8 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_u = getelementptr inbounds %struct.sv, %struct.sv* %8, i32 0, i32 3
  %svu_pv = bitcast %union.anon* %sv_u to i8**
  %9 = load i8*, i8** %svu_pv, align 8
  %10 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_any5 = getelementptr inbounds %struct.sv, %struct.sv* %10, i32 0, i32 0
  %11 = load i8*, i8** %sv_any5, align 8
  %12 = bitcast i8* %11 to %struct.xpv*
  %xpv_len_u6 = getelementptr inbounds %struct.xpv, %struct.xpv* %12, i32 0, i32 3
  %xpvlenu_len7 = bitcast %union.anon.32* %xpv_len_u6 to i64*
  %13 = load i64, i64* %xpvlenu_len7, align 8
  %add.ptr = getelementptr inbounds i8, i8* %9, i64 %13
  %add.ptr8 = getelementptr inbounds i8, i8* %add.ptr, i64 -1
  %14 = load i8, i8* %add.ptr8, align 1
  %conv = zext i8 %14 to i32
  %cmp = icmp ne i32 %conv, 255
  br i1 %cmp, label %if.then21, label %if.else89

cond.false:                                       ; preds = %cond.true
  br i1 true, label %if.then21, label %if.else89

cond.false10:                                     ; preds = %if.then
  %15 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_flags11 = getelementptr inbounds %struct.sv, %struct.sv* %15, i32 0, i32 2
  %16 = load i32, i32* %sv_flags11, align 4
  %and12 = and i32 %16, 251743232
  %cmp13 = icmp eq i32 %and12, 17408
  br i1 %cmp13, label %land.lhs.true, label %if.else89

land.lhs.true:                                    ; preds = %cond.false10
  %17 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_any15 = getelementptr inbounds %struct.sv, %struct.sv* %17, i32 0, i32 0
  %18 = load i8*, i8** %sv_any15, align 8
  %19 = bitcast i8* %18 to %struct.xpv*
  %xpv_cur = getelementptr inbounds %struct.xpv, %struct.xpv* %19, i32 0, i32 2
  %20 = load i64, i64* %xpv_cur, align 8
  %add = add i64 %20, 1
  %21 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_any16 = getelementptr inbounds %struct.sv, %struct.sv* %21, i32 0, i32 0
  %22 = load i8*, i8** %sv_any16, align 8
  %23 = bitcast i8* %22 to %struct.xpv*
  %xpv_len_u17 = getelementptr inbounds %struct.xpv, %struct.xpv* %23, i32 0, i32 3
  %xpvlenu_len18 = bitcast %union.anon.32* %xpv_len_u17 to i64*
  %24 = load i64, i64* %xpvlenu_len18, align 8
  %cmp19 = icmp ult i64 %add, %24
  br i1 %cmp19, label %if.then21, label %if.else89

if.then21:                                        ; preds = %land.lhs.true, %cond.false, %cond.true4
  %25 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %saved_copy = getelementptr inbounds %struct.regexp, %struct.regexp* %25, i32 0, i32 19
  %26 = load %struct.sv*, %struct.sv** %saved_copy, align 8
  %tobool22 = icmp ne %struct.sv* %26, null
  br i1 %tobool22, label %land.lhs.true23, label %if.else

land.lhs.true23:                                  ; preds = %if.then21
  %27 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %saved_copy24 = getelementptr inbounds %struct.regexp, %struct.regexp* %27, i32 0, i32 19
  %28 = load %struct.sv*, %struct.sv** %saved_copy24, align 8
  %sv_flags25 = getelementptr inbounds %struct.sv, %struct.sv* %28, i32 0, i32 2
  %29 = load i32, i32* %sv_flags25, align 4
  %and26 = and i32 %29, 268435456
  %tobool27 = icmp ne i32 %and26, 0
  br i1 %tobool27, label %land.lhs.true28, label %if.else

land.lhs.true28:                                  ; preds = %land.lhs.true23
  %30 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %saved_copy29 = getelementptr inbounds %struct.regexp, %struct.regexp* %30, i32 0, i32 19
  %31 = load %struct.sv*, %struct.sv** %saved_copy29, align 8
  %sv_flags30 = getelementptr inbounds %struct.sv, %struct.sv* %31, i32 0, i32 2
  %32 = load i32, i32* %sv_flags30, align 4
  %and31 = and i32 %32, 16384
  %tobool32 = icmp ne i32 %and31, 0
  br i1 %tobool32, label %land.lhs.true33, label %if.else

land.lhs.true33:                                  ; preds = %land.lhs.true28
  %33 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_flags34 = getelementptr inbounds %struct.sv, %struct.sv* %33, i32 0, i32 2
  %34 = load i32, i32* %sv_flags34, align 4
  %and35 = and i32 %34, 268435456
  %tobool36 = icmp ne i32 %and35, 0
  br i1 %tobool36, label %land.lhs.true37, label %if.else

land.lhs.true37:                                  ; preds = %land.lhs.true33
  %35 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_flags38 = getelementptr inbounds %struct.sv, %struct.sv* %35, i32 0, i32 2
  %36 = load i32, i32* %sv_flags38, align 4
  %and39 = and i32 %36, 16384
  %tobool40 = icmp ne i32 %and39, 0
  br i1 %tobool40, label %land.lhs.true41, label %if.else

land.lhs.true41:                                  ; preds = %land.lhs.true37
  %37 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_u42 = getelementptr inbounds %struct.sv, %struct.sv* %37, i32 0, i32 3
  %svu_pv43 = bitcast %union.anon* %sv_u42 to i8**
  %38 = load i8*, i8** %svu_pv43, align 8
  %39 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %saved_copy44 = getelementptr inbounds %struct.regexp, %struct.regexp* %39, i32 0, i32 19
  %40 = load %struct.sv*, %struct.sv** %saved_copy44, align 8
  %sv_u45 = getelementptr inbounds %struct.sv, %struct.sv* %40, i32 0, i32 3
  %svu_pv46 = bitcast %union.anon* %sv_u45 to i8**
  %41 = load i8*, i8** %svu_pv46, align 8
  %cmp47 = icmp eq i8* %38, %41
  br i1 %cmp47, label %if.then49, label %if.else

if.then49:                                        ; preds = %land.lhs.true41
  %42 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %extflags = getelementptr inbounds %struct.regexp, %struct.regexp* %42, i32 0, i32 7
  %43 = load i32, i32* %extflags, align 8
  %and50 = and i32 %43, 33554432
  %tobool51 = icmp ne i32 %and50, 0
  br i1 %tobool51, label %if.then52, label %if.end

if.then52:                                        ; preds = %if.then49
  %44 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %subbeg = getelementptr inbounds %struct.regexp, %struct.regexp* %44, i32 0, i32 18
  %45 = load i8*, i8** %subbeg, align 8
  call void @Perl_safesysfree(i8* %45)
  %46 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %extflags53 = getelementptr inbounds %struct.regexp, %struct.regexp* %46, i32 0, i32 7
  %47 = load i32, i32* %extflags53, align 8
  %and54 = and i32 %47, -33554433
  store i32 %and54, i32* %extflags53, align 8
  br label %if.end

if.end:                                           ; preds = %if.then52, %if.then49
  br label %if.end83

if.else:                                          ; preds = %land.lhs.true41, %land.lhs.true37, %land.lhs.true33, %land.lhs.true28, %land.lhs.true23, %if.then21
  br label %do.body

do.body:                                          ; preds = %if.else
  %48 = load %struct.p5rx*, %struct.p5rx** %rx.addr, align 8
  %call55 = call %struct.regexp* @S_ReANY(%struct.p5rx* %48)
  %saved_copy56 = getelementptr inbounds %struct.regexp, %struct.regexp* %call55, i32 0, i32 19
  %49 = load %struct.sv*, %struct.sv** %saved_copy56, align 8
  %tobool57 = icmp ne %struct.sv* %49, null
  br i1 %tobool57, label %if.then58, label %if.end68

if.then58:                                        ; preds = %do.body
  %50 = load %struct.p5rx*, %struct.p5rx** %rx.addr, align 8
  %call59 = call %struct.regexp* @S_ReANY(%struct.p5rx* %50)
  %saved_copy60 = getelementptr inbounds %struct.regexp, %struct.regexp* %call59, i32 0, i32 19
  %51 = load %struct.sv*, %struct.sv** %saved_copy60, align 8
  %sv_flags61 = getelementptr inbounds %struct.sv, %struct.sv* %51, i32 0, i32 2
  %52 = load i32, i32* %sv_flags61, align 4
  %and62 = and i32 %52, 427886592
  %tobool63 = icmp ne i32 %and62, 0
  br i1 %tobool63, label %if.then64, label %if.end67

if.then64:                                        ; preds = %if.then58
  %53 = load %struct.p5rx*, %struct.p5rx** %rx.addr, align 8
  %call65 = call %struct.regexp* @S_ReANY(%struct.p5rx* %53)
  %saved_copy66 = getelementptr inbounds %struct.regexp, %struct.regexp* %call65, i32 0, i32 19
  %54 = load %struct.sv*, %struct.sv** %saved_copy66, align 8
  call void @Perl_sv_force_normal_flags(%struct.sv* %54, i32 4)
  br label %if.end67

if.end67:                                         ; preds = %if.then64, %if.then58
  br label %if.end68

if.end68:                                         ; preds = %if.end67, %do.body
  %55 = load %struct.p5rx*, %struct.p5rx** %rx.addr, align 8
  %call69 = call %struct.regexp* @S_ReANY(%struct.p5rx* %55)
  %extflags70 = getelementptr inbounds %struct.regexp, %struct.regexp* %call69, i32 0, i32 7
  %56 = load i32, i32* %extflags70, align 8
  %and71 = and i32 %56, 33554432
  %tobool72 = icmp ne i32 %and71, 0
  br i1 %tobool72, label %if.then73, label %if.end79

if.then73:                                        ; preds = %if.end68
  %57 = load %struct.p5rx*, %struct.p5rx** %rx.addr, align 8
  %call74 = call %struct.regexp* @S_ReANY(%struct.p5rx* %57)
  %subbeg75 = getelementptr inbounds %struct.regexp, %struct.regexp* %call74, i32 0, i32 18
  %58 = load i8*, i8** %subbeg75, align 8
  call void @Perl_safesysfree(i8* %58)
  %59 = load %struct.p5rx*, %struct.p5rx** %rx.addr, align 8
  %call76 = call %struct.regexp* @S_ReANY(%struct.p5rx* %59)
  %extflags77 = getelementptr inbounds %struct.regexp, %struct.regexp* %call76, i32 0, i32 7
  %60 = load i32, i32* %extflags77, align 8
  %and78 = and i32 %60, -33554433
  store i32 %and78, i32* %extflags77, align 8
  br label %if.end79

if.end79:                                         ; preds = %if.then73, %if.end68
  br label %do.end

do.end:                                           ; preds = %if.end79
  %61 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %saved_copy80 = getelementptr inbounds %struct.regexp, %struct.regexp* %61, i32 0, i32 19
  %62 = load %struct.sv*, %struct.sv** %saved_copy80, align 8
  %63 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %call81 = call %struct.sv* @Perl_sv_setsv_cow(%struct.sv* %62, %struct.sv* %63)
  %64 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %saved_copy82 = getelementptr inbounds %struct.regexp, %struct.regexp* %64, i32 0, i32 19
  store %struct.sv* %call81, %struct.sv** %saved_copy82, align 8
  br label %if.end83

if.end83:                                         ; preds = %do.end, %if.end
  %65 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %saved_copy84 = getelementptr inbounds %struct.regexp, %struct.regexp* %65, i32 0, i32 19
  %66 = load %struct.sv*, %struct.sv** %saved_copy84, align 8
  %sv_u85 = getelementptr inbounds %struct.sv, %struct.sv* %66, i32 0, i32 3
  %svu_pv86 = bitcast %union.anon* %sv_u85 to i8**
  %67 = load i8*, i8** %svu_pv86, align 8
  %add.ptr87 = getelementptr inbounds i8, i8* %67, i64 0
  %68 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %subbeg88 = getelementptr inbounds %struct.regexp, %struct.regexp* %68, i32 0, i32 18
  store i8* %add.ptr87, i8** %subbeg88, align 8
  %69 = load i8*, i8** %strend.addr, align 8
  %70 = load i8*, i8** %strbeg.addr, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %69 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %70 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %71 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %sublen = getelementptr inbounds %struct.regexp, %struct.regexp* %71, i32 0, i32 20
  store i64 %sub.ptr.sub, i64* %sublen, align 8
  %72 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %suboffset = getelementptr inbounds %struct.regexp, %struct.regexp* %72, i32 0, i32 21
  store i64 0, i64* %suboffset, align 8
  %73 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %subcoffset = getelementptr inbounds %struct.regexp, %struct.regexp* %73, i32 0, i32 22
  store i64 0, i64* %subcoffset, align 8
  br label %if.end193

if.else89:                                        ; preds = %land.lhs.true, %cond.false10, %cond.false, %cond.true4
  store i64 0, i64* %min, align 8
  %74 = load i8*, i8** %strend.addr, align 8
  %75 = load i8*, i8** %strbeg.addr, align 8
  %sub.ptr.lhs.cast90 = ptrtoint i8* %74 to i64
  %sub.ptr.rhs.cast91 = ptrtoint i8* %75 to i64
  %sub.ptr.sub92 = sub i64 %sub.ptr.lhs.cast90, %sub.ptr.rhs.cast91
  store i64 %sub.ptr.sub92, i64* %max, align 8
  %76 = load i32, i32* %flags.addr, align 4
  %and94 = and i32 %76, 64
  %tobool95 = icmp ne i32 %and94, 0
  br i1 %tobool95, label %land.lhs.true96, label %if.end118

land.lhs.true96:                                  ; preds = %if.else89
  %77 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %extflags97 = getelementptr inbounds %struct.regexp, %struct.regexp* %77, i32 0, i32 7
  %78 = load i32, i32* %extflags97, align 8
  %and98 = and i32 %78, 64
  %tobool99 = icmp ne i32 %and98, 0
  br i1 %tobool99, label %if.end118, label %land.lhs.true100

land.lhs.true100:                                 ; preds = %land.lhs.true96
  br i1 true, label %if.end118, label %if.then101

if.then101:                                       ; preds = %land.lhs.true100
  store i32 0, i32* %n, align 4
  store i64 -1, i64* %max, align 8
  br label %while.cond

while.cond:                                       ; preds = %if.end111, %if.then101
  %79 = load i32, i32* %n, align 4
  %80 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %lastparen = getelementptr inbounds %struct.regexp, %struct.regexp* %80, i32 0, i32 15
  %81 = load i32, i32* %lastparen, align 8
  %cmp102 = icmp ule i32 %79, %81
  br i1 %cmp102, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %82 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %offs = getelementptr inbounds %struct.regexp, %struct.regexp* %82, i32 0, i32 17
  %83 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %offs, align 8
  %84 = load i32, i32* %n, align 4
  %idxprom = zext i32 %84 to i64
  %arrayidx = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %83, i64 %idxprom
  %end = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %arrayidx, i32 0, i32 1
  %85 = load i64, i64* %end, align 8
  %86 = load i64, i64* %max, align 8
  %cmp104 = icmp sgt i64 %85, %86
  br i1 %cmp104, label %if.then106, label %if.end111

if.then106:                                       ; preds = %while.body
  %87 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %offs107 = getelementptr inbounds %struct.regexp, %struct.regexp* %87, i32 0, i32 17
  %88 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %offs107, align 8
  %89 = load i32, i32* %n, align 4
  %idxprom108 = zext i32 %89 to i64
  %arrayidx109 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %88, i64 %idxprom108
  %end110 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %arrayidx109, i32 0, i32 1
  %90 = load i64, i64* %end110, align 8
  store i64 %90, i64* %max, align 8
  br label %if.end111

if.end111:                                        ; preds = %if.then106, %while.body
  %91 = load i32, i32* %n, align 4
  %inc = add i32 %91, 1
  store i32 %inc, i32* %n, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %92 = load i64, i64* %max, align 8
  %cmp112 = icmp eq i64 %92, -1
  br i1 %cmp112, label %if.then114, label %if.end117

if.then114:                                       ; preds = %while.end
  %93 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %offs115 = getelementptr inbounds %struct.regexp, %struct.regexp* %93, i32 0, i32 17
  %94 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %offs115, align 8
  %arrayidx116 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %94, i64 0
  %start = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %arrayidx116, i32 0, i32 0
  %95 = load i64, i64* %start, align 8
  store i64 %95, i64* %max, align 8
  br label %if.end117

if.end117:                                        ; preds = %if.then114, %while.end
  br label %if.end118

if.end118:                                        ; preds = %if.end117, %land.lhs.true100, %land.lhs.true96, %if.else89
  %96 = load i32, i32* %flags.addr, align 4
  %and119 = and i32 %96, 32
  %tobool120 = icmp ne i32 %and119, 0
  br i1 %tobool120, label %land.lhs.true121, label %if.end165

land.lhs.true121:                                 ; preds = %if.end118
  %97 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %extflags122 = getelementptr inbounds %struct.regexp, %struct.regexp* %97, i32 0, i32 7
  %98 = load i32, i32* %extflags122, align 8
  %and123 = and i32 %98, 64
  %tobool124 = icmp ne i32 %and123, 0
  br i1 %tobool124, label %if.end165, label %land.lhs.true125

land.lhs.true125:                                 ; preds = %land.lhs.true121
  br i1 true, label %if.end165, label %if.then126

if.then126:                                       ; preds = %land.lhs.true125
  store i32 0, i32* %n127, align 4
  %99 = load i64, i64* %max, align 8
  store i64 %99, i64* %min, align 8
  br label %while.cond128

while.cond128:                                    ; preds = %if.end152, %if.then126
  %100 = load i64, i64* %min, align 8
  %tobool129 = icmp ne i64 %100, 0
  br i1 %tobool129, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond128
  %101 = load i32, i32* %n127, align 4
  %102 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %lastparen130 = getelementptr inbounds %struct.regexp, %struct.regexp* %102, i32 0, i32 15
  %103 = load i32, i32* %lastparen130, align 8
  %cmp131 = icmp ule i32 %101, %103
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond128
  %104 = phi i1 [ false, %while.cond128 ], [ %cmp131, %land.rhs ]
  br i1 %104, label %while.body133, label %while.end154

while.body133:                                    ; preds = %land.end
  %105 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %offs134 = getelementptr inbounds %struct.regexp, %struct.regexp* %105, i32 0, i32 17
  %106 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %offs134, align 8
  %107 = load i32, i32* %n127, align 4
  %idxprom135 = zext i32 %107 to i64
  %arrayidx136 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %106, i64 %idxprom135
  %start137 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %arrayidx136, i32 0, i32 0
  %108 = load i64, i64* %start137, align 8
  %cmp138 = icmp ne i64 %108, -1
  br i1 %cmp138, label %land.lhs.true140, label %if.end152

land.lhs.true140:                                 ; preds = %while.body133
  %109 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %offs141 = getelementptr inbounds %struct.regexp, %struct.regexp* %109, i32 0, i32 17
  %110 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %offs141, align 8
  %111 = load i32, i32* %n127, align 4
  %idxprom142 = zext i32 %111 to i64
  %arrayidx143 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %110, i64 %idxprom142
  %start144 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %arrayidx143, i32 0, i32 0
  %112 = load i64, i64* %start144, align 8
  %113 = load i64, i64* %min, align 8
  %cmp145 = icmp slt i64 %112, %113
  br i1 %cmp145, label %if.then147, label %if.end152

if.then147:                                       ; preds = %land.lhs.true140
  %114 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %offs148 = getelementptr inbounds %struct.regexp, %struct.regexp* %114, i32 0, i32 17
  %115 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %offs148, align 8
  %116 = load i32, i32* %n127, align 4
  %idxprom149 = zext i32 %116 to i64
  %arrayidx150 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %115, i64 %idxprom149
  %start151 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %arrayidx150, i32 0, i32 0
  %117 = load i64, i64* %start151, align 8
  store i64 %117, i64* %min, align 8
  br label %if.end152

if.end152:                                        ; preds = %if.then147, %land.lhs.true140, %while.body133
  %118 = load i32, i32* %n127, align 4
  %inc153 = add i32 %118, 1
  store i32 %inc153, i32* %n127, align 4
  br label %while.cond128

while.end154:                                     ; preds = %land.end
  %119 = load i64, i64* %min, align 8
  %120 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %offs155 = getelementptr inbounds %struct.regexp, %struct.regexp* %120, i32 0, i32 17
  %121 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %offs155, align 8
  %arrayidx156 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %121, i64 0
  %end157 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %arrayidx156, i32 0, i32 1
  %122 = load i64, i64* %end157, align 8
  %cmp158 = icmp sgt i64 %119, %122
  br i1 %cmp158, label %if.then160, label %if.end164

if.then160:                                       ; preds = %while.end154
  %123 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %offs161 = getelementptr inbounds %struct.regexp, %struct.regexp* %123, i32 0, i32 17
  %124 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %offs161, align 8
  %arrayidx162 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %124, i64 0
  %end163 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %arrayidx162, i32 0, i32 1
  %125 = load i64, i64* %end163, align 8
  store i64 %125, i64* %min, align 8
  br label %if.end164

if.end164:                                        ; preds = %if.then160, %while.end154
  br label %if.end165

if.end165:                                        ; preds = %if.end164, %land.lhs.true125, %land.lhs.true121, %if.end118
  %126 = load i64, i64* %max, align 8
  %127 = load i64, i64* %min, align 8
  %sub = sub nsw i64 %126, %127
  store i64 %sub, i64* %sublen93, align 8
  %128 = load %struct.p5rx*, %struct.p5rx** %rx.addr, align 8
  %call166 = call %struct.regexp* @S_ReANY(%struct.p5rx* %128)
  %extflags167 = getelementptr inbounds %struct.regexp, %struct.regexp* %call166, i32 0, i32 7
  %129 = load i32, i32* %extflags167, align 8
  %and168 = and i32 %129, 33554432
  %tobool169 = icmp ne i32 %and168, 0
  br i1 %tobool169, label %if.then170, label %if.else180

if.then170:                                       ; preds = %if.end165
  %130 = load i64, i64* %sublen93, align 8
  %131 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %sublen171 = getelementptr inbounds %struct.regexp, %struct.regexp* %131, i32 0, i32 20
  %132 = load i64, i64* %sublen171, align 8
  %cmp172 = icmp sgt i64 %130, %132
  br i1 %cmp172, label %if.then174, label %if.end179

if.then174:                                       ; preds = %if.then170
  %133 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %subbeg175 = getelementptr inbounds %struct.regexp, %struct.regexp* %133, i32 0, i32 18
  %134 = load i8*, i8** %subbeg175, align 8
  %135 = load i64, i64* %sublen93, align 8
  %add176 = add nsw i64 %135, 1
  %call177 = call i8* @Perl_safesysrealloc(i8* %134, i64 %add176)
  %136 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %subbeg178 = getelementptr inbounds %struct.regexp, %struct.regexp* %136, i32 0, i32 18
  store i8* %call177, i8** %subbeg178, align 8
  br label %if.end179

if.end179:                                        ; preds = %if.then174, %if.then170
  br label %if.end184

if.else180:                                       ; preds = %if.end165
  %137 = load i64, i64* %sublen93, align 8
  %add181 = add nsw i64 %137, 1
  %call182 = call i8* @Perl_safesysmalloc(i64 %add181)
  %138 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %subbeg183 = getelementptr inbounds %struct.regexp, %struct.regexp* %138, i32 0, i32 18
  store i8* %call182, i8** %subbeg183, align 8
  br label %if.end184

if.end184:                                        ; preds = %if.else180, %if.end179
  %139 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %subbeg185 = getelementptr inbounds %struct.regexp, %struct.regexp* %139, i32 0, i32 18
  %140 = load i8*, i8** %subbeg185, align 8
  %141 = load i8*, i8** %strbeg.addr, align 8
  %142 = load i64, i64* %min, align 8
  %add.ptr186 = getelementptr inbounds i8, i8* %141, i64 %142
  %143 = load i64, i64* %sublen93, align 8
  %mul = mul i64 %143, 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %140, i8* align 1 %add.ptr186, i64 %mul, i1 false)
  %144 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %subbeg187 = getelementptr inbounds %struct.regexp, %struct.regexp* %144, i32 0, i32 18
  %145 = load i8*, i8** %subbeg187, align 8
  %146 = load i64, i64* %sublen93, align 8
  %arrayidx188 = getelementptr inbounds i8, i8* %145, i64 %146
  store i8 0, i8* %arrayidx188, align 1
  %147 = load i64, i64* %min, align 8
  %148 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %suboffset189 = getelementptr inbounds %struct.regexp, %struct.regexp* %148, i32 0, i32 21
  store i64 %147, i64* %suboffset189, align 8
  %149 = load i64, i64* %sublen93, align 8
  %150 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %sublen190 = getelementptr inbounds %struct.regexp, %struct.regexp* %150, i32 0, i32 20
  store i64 %149, i64* %sublen190, align 8
  %151 = load %struct.p5rx*, %struct.p5rx** %rx.addr, align 8
  %call191 = call %struct.regexp* @S_ReANY(%struct.p5rx* %151)
  %extflags192 = getelementptr inbounds %struct.regexp, %struct.regexp* %call191, i32 0, i32 7
  %152 = load i32, i32* %extflags192, align 8
  %or = or i32 %152, 33554432
  store i32 %or, i32* %extflags192, align 8
  br label %if.end193

if.end193:                                        ; preds = %if.end184, %if.end83
  %153 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %suboffset194 = getelementptr inbounds %struct.regexp, %struct.regexp* %153, i32 0, i32 21
  %154 = load i64, i64* %suboffset194, align 8
  %155 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %subcoffset195 = getelementptr inbounds %struct.regexp, %struct.regexp* %155, i32 0, i32 22
  store i64 %154, i64* %subcoffset195, align 8
  %156 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %suboffset196 = getelementptr inbounds %struct.regexp, %struct.regexp* %156, i32 0, i32 21
  %157 = load i64, i64* %suboffset196, align 8
  %tobool197 = icmp ne i64 %157, 0
  br i1 %tobool197, label %land.lhs.true198, label %if.end220

land.lhs.true198:                                 ; preds = %if.end193
  %158 = load i8, i8* %utf8_target.addr, align 1
  %tobool199 = trunc i8 %158 to i1
  br i1 %tobool199, label %if.then201, label %if.end220

if.then201:                                       ; preds = %land.lhs.true198
  %159 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_flags202 = getelementptr inbounds %struct.sv, %struct.sv* %159, i32 0, i32 2
  %160 = load i32, i32* %sv_flags202, align 4
  %and203 = and i32 %160, 16384
  %tobool204 = icmp ne i32 %and203, 0
  br i1 %tobool204, label %land.lhs.true205, label %if.else214

land.lhs.true205:                                 ; preds = %if.then201
  %161 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_u206 = getelementptr inbounds %struct.sv, %struct.sv* %161, i32 0, i32 3
  %svu_pv207 = bitcast %union.anon* %sv_u206 to i8**
  %162 = load i8*, i8** %svu_pv207, align 8
  %163 = load i8*, i8** %strbeg.addr, align 8
  %cmp208 = icmp eq i8* %162, %163
  br i1 %cmp208, label %if.then210, label %if.else214

if.then210:                                       ; preds = %land.lhs.true205
  %164 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %165 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %subcoffset211 = getelementptr inbounds %struct.regexp, %struct.regexp* %165, i32 0, i32 22
  %166 = load i64, i64* %subcoffset211, align 8
  %call212 = call i64 @Perl_sv_pos_b2u_flags(%struct.sv* %164, i64 %166, i32 34)
  %167 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %subcoffset213 = getelementptr inbounds %struct.regexp, %struct.regexp* %167, i32 0, i32 22
  store i64 %call212, i64* %subcoffset213, align 8
  br label %if.end219

if.else214:                                       ; preds = %land.lhs.true205, %if.then201
  %168 = load i8*, i8** %strbeg.addr, align 8
  %169 = load i8*, i8** %strbeg.addr, align 8
  %170 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %suboffset215 = getelementptr inbounds %struct.regexp, %struct.regexp* %170, i32 0, i32 21
  %171 = load i64, i64* %suboffset215, align 8
  %add.ptr216 = getelementptr inbounds i8, i8* %169, i64 %171
  %call217 = call i64 @Perl_utf8_length(i8* %168, i8* %add.ptr216)
  %172 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %subcoffset218 = getelementptr inbounds %struct.regexp, %struct.regexp* %172, i32 0, i32 22
  store i64 %call217, i64* %subcoffset218, align 8
  br label %if.end219

if.end219:                                        ; preds = %if.else214, %if.then210
  br label %if.end220

if.end220:                                        ; preds = %if.end219, %land.lhs.true198, %if.end193
  br label %if.end256

if.else221:                                       ; preds = %entry
  br label %do.body222

do.body222:                                       ; preds = %if.else221
  %173 = load %struct.p5rx*, %struct.p5rx** %rx.addr, align 8
  %call223 = call %struct.regexp* @S_ReANY(%struct.p5rx* %173)
  %saved_copy224 = getelementptr inbounds %struct.regexp, %struct.regexp* %call223, i32 0, i32 19
  %174 = load %struct.sv*, %struct.sv** %saved_copy224, align 8
  %tobool225 = icmp ne %struct.sv* %174, null
  br i1 %tobool225, label %if.then226, label %if.end236

if.then226:                                       ; preds = %do.body222
  %175 = load %struct.p5rx*, %struct.p5rx** %rx.addr, align 8
  %call227 = call %struct.regexp* @S_ReANY(%struct.p5rx* %175)
  %saved_copy228 = getelementptr inbounds %struct.regexp, %struct.regexp* %call227, i32 0, i32 19
  %176 = load %struct.sv*, %struct.sv** %saved_copy228, align 8
  %sv_flags229 = getelementptr inbounds %struct.sv, %struct.sv* %176, i32 0, i32 2
  %177 = load i32, i32* %sv_flags229, align 4
  %and230 = and i32 %177, 427886592
  %tobool231 = icmp ne i32 %and230, 0
  br i1 %tobool231, label %if.then232, label %if.end235

if.then232:                                       ; preds = %if.then226
  %178 = load %struct.p5rx*, %struct.p5rx** %rx.addr, align 8
  %call233 = call %struct.regexp* @S_ReANY(%struct.p5rx* %178)
  %saved_copy234 = getelementptr inbounds %struct.regexp, %struct.regexp* %call233, i32 0, i32 19
  %179 = load %struct.sv*, %struct.sv** %saved_copy234, align 8
  call void @Perl_sv_force_normal_flags(%struct.sv* %179, i32 4)
  br label %if.end235

if.end235:                                        ; preds = %if.then232, %if.then226
  br label %if.end236

if.end236:                                        ; preds = %if.end235, %do.body222
  %180 = load %struct.p5rx*, %struct.p5rx** %rx.addr, align 8
  %call237 = call %struct.regexp* @S_ReANY(%struct.p5rx* %180)
  %extflags238 = getelementptr inbounds %struct.regexp, %struct.regexp* %call237, i32 0, i32 7
  %181 = load i32, i32* %extflags238, align 8
  %and239 = and i32 %181, 33554432
  %tobool240 = icmp ne i32 %and239, 0
  br i1 %tobool240, label %if.then241, label %if.end247

if.then241:                                       ; preds = %if.end236
  %182 = load %struct.p5rx*, %struct.p5rx** %rx.addr, align 8
  %call242 = call %struct.regexp* @S_ReANY(%struct.p5rx* %182)
  %subbeg243 = getelementptr inbounds %struct.regexp, %struct.regexp* %call242, i32 0, i32 18
  %183 = load i8*, i8** %subbeg243, align 8
  call void @Perl_safesysfree(i8* %183)
  %184 = load %struct.p5rx*, %struct.p5rx** %rx.addr, align 8
  %call244 = call %struct.regexp* @S_ReANY(%struct.p5rx* %184)
  %extflags245 = getelementptr inbounds %struct.regexp, %struct.regexp* %call244, i32 0, i32 7
  %185 = load i32, i32* %extflags245, align 8
  %and246 = and i32 %185, -33554433
  store i32 %and246, i32* %extflags245, align 8
  br label %if.end247

if.end247:                                        ; preds = %if.then241, %if.end236
  br label %do.end248

do.end248:                                        ; preds = %if.end247
  %186 = load i8*, i8** %strbeg.addr, align 8
  %187 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %subbeg249 = getelementptr inbounds %struct.regexp, %struct.regexp* %187, i32 0, i32 18
  store i8* %186, i8** %subbeg249, align 8
  %188 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %suboffset250 = getelementptr inbounds %struct.regexp, %struct.regexp* %188, i32 0, i32 21
  store i64 0, i64* %suboffset250, align 8
  %189 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %subcoffset251 = getelementptr inbounds %struct.regexp, %struct.regexp* %189, i32 0, i32 22
  store i64 0, i64* %subcoffset251, align 8
  %190 = load i8*, i8** %strend.addr, align 8
  %191 = load i8*, i8** %strbeg.addr, align 8
  %sub.ptr.lhs.cast252 = ptrtoint i8* %190 to i64
  %sub.ptr.rhs.cast253 = ptrtoint i8* %191 to i64
  %sub.ptr.sub254 = sub i64 %sub.ptr.lhs.cast252, %sub.ptr.rhs.cast253
  %192 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %sublen255 = getelementptr inbounds %struct.regexp, %struct.regexp* %192, i32 0, i32 20
  store i64 %sub.ptr.sub254, i64* %sublen255, align 8
  br label %if.end256

if.end256:                                        ; preds = %do.end248, %if.end220
  ret void
}

declare dso_local %struct.sv* @Perl_newSV(i64) #2

declare dso_local void @Perl_sv_setsv_flags(%struct.sv*, %struct.sv*, i32) #2

declare dso_local void @Perl_save_pushptr(i8*, i32) #2

declare dso_local i8* @Perl_safesysmalloc(i64) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct.regmatch_state* @S_push_slab() #0 {
entry:
  %s = alloca %struct.regmatch_slab*, align 8
  %0 = load %struct.regmatch_slab*, %struct.regmatch_slab** @PL_regmatch_slab, align 8
  %next = getelementptr inbounds %struct.regmatch_slab, %struct.regmatch_slab* %0, i32 0, i32 2
  %1 = load %struct.regmatch_slab*, %struct.regmatch_slab** %next, align 8
  store %struct.regmatch_slab* %1, %struct.regmatch_slab** %s, align 8
  %2 = load %struct.regmatch_slab*, %struct.regmatch_slab** %s, align 8
  %tobool = icmp ne %struct.regmatch_slab* %2, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %call = call i8* @Perl_safesysmalloc(i64 3976)
  %3 = bitcast i8* %call to %struct.regmatch_slab*
  store %struct.regmatch_slab* %3, %struct.regmatch_slab** %s, align 8
  %4 = load %struct.regmatch_slab*, %struct.regmatch_slab** @PL_regmatch_slab, align 8
  %5 = load %struct.regmatch_slab*, %struct.regmatch_slab** %s, align 8
  %prev = getelementptr inbounds %struct.regmatch_slab, %struct.regmatch_slab* %5, i32 0, i32 1
  store %struct.regmatch_slab* %4, %struct.regmatch_slab** %prev, align 8
  %6 = load %struct.regmatch_slab*, %struct.regmatch_slab** %s, align 8
  %next1 = getelementptr inbounds %struct.regmatch_slab, %struct.regmatch_slab* %6, i32 0, i32 2
  store %struct.regmatch_slab* null, %struct.regmatch_slab** %next1, align 8
  %7 = load %struct.regmatch_slab*, %struct.regmatch_slab** %s, align 8
  %8 = load %struct.regmatch_slab*, %struct.regmatch_slab** @PL_regmatch_slab, align 8
  %next2 = getelementptr inbounds %struct.regmatch_slab, %struct.regmatch_slab* %8, i32 0, i32 2
  store %struct.regmatch_slab* %7, %struct.regmatch_slab** %next2, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %9 = load %struct.regmatch_slab*, %struct.regmatch_slab** %s, align 8
  store %struct.regmatch_slab* %9, %struct.regmatch_slab** @PL_regmatch_slab, align 8
  %10 = load %struct.regmatch_slab*, %struct.regmatch_slab** %s, align 8
  %states = getelementptr inbounds %struct.regmatch_slab, %struct.regmatch_slab* %10, i32 0, i32 0
  %arrayidx = getelementptr inbounds [33 x %struct.regmatch_state], [33 x %struct.regmatch_state]* %states, i64 0, i64 0
  ret %struct.regmatch_state* %arrayidx
}

declare dso_local void @Perl_save_destructor_x(void (i8*)*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @S_cleanup_regmatch_info_aux(i8* %arg) #0 {
entry:
  %arg.addr = alloca i8*, align 8
  %aux = alloca %struct.regmatch_info_aux*, align 8
  %eval_state = alloca %struct.regmatch_info_aux_eval*, align 8
  %s = alloca %struct.regmatch_slab*, align 8
  %rex = alloca %struct.regexp*, align 8
  %osl = alloca %struct.regmatch_slab*, align 8
  store i8* %arg, i8** %arg.addr, align 8
  %0 = load i8*, i8** %arg.addr, align 8
  %1 = bitcast i8* %0 to %struct.regmatch_info_aux*
  store %struct.regmatch_info_aux* %1, %struct.regmatch_info_aux** %aux, align 8
  %2 = load %struct.regmatch_info_aux*, %struct.regmatch_info_aux** %aux, align 8
  %info_aux_eval = getelementptr inbounds %struct.regmatch_info_aux, %struct.regmatch_info_aux* %2, i32 0, i32 0
  %3 = load %struct.regmatch_info_aux_eval*, %struct.regmatch_info_aux_eval** %info_aux_eval, align 8
  store %struct.regmatch_info_aux_eval* %3, %struct.regmatch_info_aux_eval** %eval_state, align 8
  %4 = load %struct.regmatch_info_aux*, %struct.regmatch_info_aux** %aux, align 8
  %poscache = getelementptr inbounds %struct.regmatch_info_aux, %struct.regmatch_info_aux* %4, i32 0, i32 3
  %5 = load i8*, i8** %poscache, align 8
  call void @Perl_safesysfree(i8* %5)
  %6 = load %struct.regmatch_info_aux_eval*, %struct.regmatch_info_aux_eval** %eval_state, align 8
  %tobool = icmp ne %struct.regmatch_info_aux_eval* %6, null
  br i1 %tobool, label %if.then, label %if.end21

if.then:                                          ; preds = %entry
  %7 = load %struct.regmatch_info_aux_eval*, %struct.regmatch_info_aux_eval** %eval_state, align 8
  %subbeg = getelementptr inbounds %struct.regmatch_info_aux_eval, %struct.regmatch_info_aux_eval* %7, i32 0, i32 3
  %8 = load i8*, i8** %subbeg, align 8
  %tobool1 = icmp ne i8* %8, null
  br i1 %tobool1, label %if.then2, label %if.end

if.then2:                                         ; preds = %if.then
  %9 = load %struct.regmatch_info_aux_eval*, %struct.regmatch_info_aux_eval** %eval_state, align 8
  %rex3 = getelementptr inbounds %struct.regmatch_info_aux_eval, %struct.regmatch_info_aux_eval* %9, i32 0, i32 0
  %10 = load %struct.regexp*, %struct.regexp** %rex3, align 8
  store %struct.regexp* %10, %struct.regexp** %rex, align 8
  %11 = load %struct.regmatch_info_aux_eval*, %struct.regmatch_info_aux_eval** %eval_state, align 8
  %subbeg4 = getelementptr inbounds %struct.regmatch_info_aux_eval, %struct.regmatch_info_aux_eval* %11, i32 0, i32 3
  %12 = load i8*, i8** %subbeg4, align 8
  %13 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %subbeg5 = getelementptr inbounds %struct.regexp, %struct.regexp* %13, i32 0, i32 18
  store i8* %12, i8** %subbeg5, align 8
  %14 = load %struct.regmatch_info_aux_eval*, %struct.regmatch_info_aux_eval** %eval_state, align 8
  %sublen = getelementptr inbounds %struct.regmatch_info_aux_eval, %struct.regmatch_info_aux_eval* %14, i32 0, i32 4
  %15 = load i64, i64* %sublen, align 8
  %16 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %sublen6 = getelementptr inbounds %struct.regexp, %struct.regexp* %16, i32 0, i32 20
  store i64 %15, i64* %sublen6, align 8
  %17 = load %struct.regmatch_info_aux_eval*, %struct.regmatch_info_aux_eval** %eval_state, align 8
  %suboffset = getelementptr inbounds %struct.regmatch_info_aux_eval, %struct.regmatch_info_aux_eval* %17, i32 0, i32 5
  %18 = load i64, i64* %suboffset, align 8
  %19 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %suboffset7 = getelementptr inbounds %struct.regexp, %struct.regexp* %19, i32 0, i32 21
  store i64 %18, i64* %suboffset7, align 8
  %20 = load %struct.regmatch_info_aux_eval*, %struct.regmatch_info_aux_eval** %eval_state, align 8
  %subcoffset = getelementptr inbounds %struct.regmatch_info_aux_eval, %struct.regmatch_info_aux_eval* %20, i32 0, i32 6
  %21 = load i64, i64* %subcoffset, align 8
  %22 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %subcoffset8 = getelementptr inbounds %struct.regexp, %struct.regexp* %22, i32 0, i32 22
  store i64 %21, i64* %subcoffset8, align 8
  %23 = load %struct.regmatch_info_aux_eval*, %struct.regmatch_info_aux_eval** %eval_state, align 8
  %saved_copy = getelementptr inbounds %struct.regmatch_info_aux_eval, %struct.regmatch_info_aux_eval* %23, i32 0, i32 2
  %24 = load %struct.sv*, %struct.sv** %saved_copy, align 8
  %25 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %saved_copy9 = getelementptr inbounds %struct.regexp, %struct.regexp* %25, i32 0, i32 19
  store %struct.sv* %24, %struct.sv** %saved_copy9, align 8
  %26 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %extflags = getelementptr inbounds %struct.regexp, %struct.regexp* %26, i32 0, i32 7
  %27 = load i32, i32* %extflags, align 8
  %or = or i32 %27, 33554432
  store i32 %or, i32* %extflags, align 8
  br label %if.end

if.end:                                           ; preds = %if.then2, %if.then
  %28 = load %struct.regmatch_info_aux_eval*, %struct.regmatch_info_aux_eval** %eval_state, align 8
  %pos_magic = getelementptr inbounds %struct.regmatch_info_aux_eval, %struct.regmatch_info_aux_eval* %28, i32 0, i32 7
  %29 = load %struct.magic*, %struct.magic** %pos_magic, align 8
  %tobool10 = icmp ne %struct.magic* %29, null
  br i1 %tobool10, label %if.then11, label %if.end20

if.then11:                                        ; preds = %if.end
  %30 = load %struct.regmatch_info_aux_eval*, %struct.regmatch_info_aux_eval** %eval_state, align 8
  %pos = getelementptr inbounds %struct.regmatch_info_aux_eval, %struct.regmatch_info_aux_eval* %30, i32 0, i32 8
  %31 = load i64, i64* %pos, align 8
  %32 = load %struct.regmatch_info_aux_eval*, %struct.regmatch_info_aux_eval** %eval_state, align 8
  %pos_magic12 = getelementptr inbounds %struct.regmatch_info_aux_eval, %struct.regmatch_info_aux_eval* %32, i32 0, i32 7
  %33 = load %struct.magic*, %struct.magic** %pos_magic12, align 8
  %mg_len = getelementptr inbounds %struct.magic, %struct.magic* %33, i32 0, i32 5
  store i64 %31, i64* %mg_len, align 8
  %34 = load %struct.regmatch_info_aux_eval*, %struct.regmatch_info_aux_eval** %eval_state, align 8
  %pos_magic13 = getelementptr inbounds %struct.regmatch_info_aux_eval, %struct.regmatch_info_aux_eval* %34, i32 0, i32 7
  %35 = load %struct.magic*, %struct.magic** %pos_magic13, align 8
  %mg_flags = getelementptr inbounds %struct.magic, %struct.magic* %35, i32 0, i32 4
  %36 = load i8, i8* %mg_flags, align 1
  %conv = zext i8 %36 to i32
  %and = and i32 %conv, -65
  %37 = load %struct.regmatch_info_aux_eval*, %struct.regmatch_info_aux_eval** %eval_state, align 8
  %pos_flags = getelementptr inbounds %struct.regmatch_info_aux_eval, %struct.regmatch_info_aux_eval* %37, i32 0, i32 9
  %38 = load i8, i8* %pos_flags, align 8
  %conv14 = zext i8 %38 to i32
  %and15 = and i32 %conv14, 64
  %or16 = or i32 %and, %and15
  %conv17 = trunc i32 %or16 to i8
  %39 = load %struct.regmatch_info_aux_eval*, %struct.regmatch_info_aux_eval** %eval_state, align 8
  %pos_magic18 = getelementptr inbounds %struct.regmatch_info_aux_eval, %struct.regmatch_info_aux_eval* %39, i32 0, i32 7
  %40 = load %struct.magic*, %struct.magic** %pos_magic18, align 8
  %mg_flags19 = getelementptr inbounds %struct.magic, %struct.magic* %40, i32 0, i32 4
  store i8 %conv17, i8* %mg_flags19, align 1
  br label %if.end20

if.end20:                                         ; preds = %if.then11, %if.end
  %41 = load %struct.regmatch_info_aux_eval*, %struct.regmatch_info_aux_eval** %eval_state, align 8
  %curpm = getelementptr inbounds %struct.regmatch_info_aux_eval, %struct.regmatch_info_aux_eval* %41, i32 0, i32 1
  %42 = load %struct.pmop*, %struct.pmop** %curpm, align 8
  store %struct.pmop* %42, %struct.pmop** @PL_curpm, align 8
  br label %if.end21

if.end21:                                         ; preds = %if.end20, %entry
  %43 = load %struct.regmatch_info_aux*, %struct.regmatch_info_aux** %aux, align 8
  %old_regmatch_state = getelementptr inbounds %struct.regmatch_info_aux, %struct.regmatch_info_aux* %43, i32 0, i32 1
  %44 = load %struct.regmatch_state*, %struct.regmatch_state** %old_regmatch_state, align 8
  store %struct.regmatch_state* %44, %struct.regmatch_state** @PL_regmatch_state, align 8
  %45 = load %struct.regmatch_info_aux*, %struct.regmatch_info_aux** %aux, align 8
  %old_regmatch_slab = getelementptr inbounds %struct.regmatch_info_aux, %struct.regmatch_info_aux* %45, i32 0, i32 2
  %46 = load %struct.regmatch_slab*, %struct.regmatch_slab** %old_regmatch_slab, align 8
  store %struct.regmatch_slab* %46, %struct.regmatch_slab** @PL_regmatch_slab, align 8
  %47 = load %struct.regmatch_slab*, %struct.regmatch_slab** @PL_regmatch_slab, align 8
  %next = getelementptr inbounds %struct.regmatch_slab, %struct.regmatch_slab* %47, i32 0, i32 2
  %48 = load %struct.regmatch_slab*, %struct.regmatch_slab** %next, align 8
  store %struct.regmatch_slab* %48, %struct.regmatch_slab** %s, align 8
  %49 = load %struct.regmatch_slab*, %struct.regmatch_slab** %s, align 8
  %tobool22 = icmp ne %struct.regmatch_slab* %49, null
  br i1 %tobool22, label %if.then23, label %if.end27

if.then23:                                        ; preds = %if.end21
  %50 = load %struct.regmatch_slab*, %struct.regmatch_slab** @PL_regmatch_slab, align 8
  %next24 = getelementptr inbounds %struct.regmatch_slab, %struct.regmatch_slab* %50, i32 0, i32 2
  store %struct.regmatch_slab* null, %struct.regmatch_slab** %next24, align 8
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.then23
  %51 = load %struct.regmatch_slab*, %struct.regmatch_slab** %s, align 8
  %tobool25 = icmp ne %struct.regmatch_slab* %51, null
  br i1 %tobool25, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %52 = load %struct.regmatch_slab*, %struct.regmatch_slab** %s, align 8
  store %struct.regmatch_slab* %52, %struct.regmatch_slab** %osl, align 8
  %53 = load %struct.regmatch_slab*, %struct.regmatch_slab** %s, align 8
  %next26 = getelementptr inbounds %struct.regmatch_slab, %struct.regmatch_slab* %53, i32 0, i32 2
  %54 = load %struct.regmatch_slab*, %struct.regmatch_slab** %next26, align 8
  store %struct.regmatch_slab* %54, %struct.regmatch_slab** %s, align 8
  %55 = load %struct.regmatch_slab*, %struct.regmatch_slab** %osl, align 8
  %56 = bitcast %struct.regmatch_slab* %55 to i8*
  call void @Perl_safesysfree(i8* %56)
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %if.end27

if.end27:                                         ; preds = %while.end, %if.end21
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @S_setup_eval_state(%struct.regmatch_info* %reginfo) #0 {
entry:
  %reginfo.addr = alloca %struct.regmatch_info*, align 8
  %mg = alloca %struct.magic*, align 8
  %rex = alloca %struct.regexp*, align 8
  %eval_state = alloca %struct.regmatch_info_aux_eval*, align 8
  store %struct.regmatch_info* %reginfo, %struct.regmatch_info** %reginfo.addr, align 8
  %0 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %prog = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %0, i32 0, i32 0
  %1 = load %struct.p5rx*, %struct.p5rx** %prog, align 8
  %call = call %struct.regexp* @S_ReANY(%struct.p5rx* %1)
  store %struct.regexp* %call, %struct.regexp** %rex, align 8
  %2 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %info_aux_eval = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %2, i32 0, i32 8
  %3 = load %struct.regmatch_info_aux_eval*, %struct.regmatch_info_aux_eval** %info_aux_eval, align 8
  store %struct.regmatch_info_aux_eval* %3, %struct.regmatch_info_aux_eval** %eval_state, align 8
  %4 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %5 = load %struct.regmatch_info_aux_eval*, %struct.regmatch_info_aux_eval** %eval_state, align 8
  %rex1 = getelementptr inbounds %struct.regmatch_info_aux_eval, %struct.regmatch_info_aux_eval* %5, i32 0, i32 0
  store %struct.regexp* %4, %struct.regexp** %rex1, align 8
  %6 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %sv = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %6, i32 0, i32 4
  %7 = load %struct.sv*, %struct.sv** %sv, align 8
  %tobool = icmp ne %struct.sv* %7, null
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %8 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %sv2 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %8, i32 0, i32 4
  %9 = load %struct.sv*, %struct.sv** %sv2, align 8
  %10 = load %struct.gv*, %struct.gv** @PL_defgv, align 8
  %sv_u = getelementptr inbounds %struct.gv, %struct.gv* %10, i32 0, i32 3
  %svu_gp = bitcast %union.anon.4* %sv_u to %struct.gp**
  %11 = load %struct.gp*, %struct.gp** %svu_gp, align 8
  %add.ptr = getelementptr inbounds %struct.gp, %struct.gp* %11, i64 0
  %gp_sv = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr, i32 0, i32 0
  %12 = load %struct.sv*, %struct.sv** %gp_sv, align 8
  %tobool3 = icmp ne %struct.sv* %12, null
  br i1 %tobool3, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then
  %13 = load %struct.gv*, %struct.gv** @PL_defgv, align 8
  %sv_u4 = getelementptr inbounds %struct.gv, %struct.gv* %13, i32 0, i32 3
  %svu_gp5 = bitcast %union.anon.4* %sv_u4 to %struct.gp**
  %14 = load %struct.gp*, %struct.gp** %svu_gp5, align 8
  %add.ptr6 = getelementptr inbounds %struct.gp, %struct.gp* %14, i64 0
  %gp_sv7 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr6, i32 0, i32 0
  br label %cond.end

cond.false:                                       ; preds = %if.then
  %15 = load %struct.gv*, %struct.gv** @PL_defgv, align 8
  %call8 = call %struct.gv* @Perl_gv_add_by_type(%struct.gv* %15, i32 0)
  %sv_u9 = getelementptr inbounds %struct.gv, %struct.gv* %call8, i32 0, i32 3
  %svu_gp10 = bitcast %union.anon.4* %sv_u9 to %struct.gp**
  %16 = load %struct.gp*, %struct.gp** %svu_gp10, align 8
  %add.ptr11 = getelementptr inbounds %struct.gp, %struct.gp* %16, i64 0
  %gp_sv12 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr11, i32 0, i32 0
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.sv** [ %gp_sv7, %cond.true ], [ %gp_sv12, %cond.false ]
  %17 = load %struct.sv*, %struct.sv** %cond, align 8
  %add.ptr13 = getelementptr inbounds %struct.sv, %struct.sv* %17, i64 0
  %cmp = icmp ne %struct.sv* %9, %add.ptr13
  br i1 %cmp, label %if.then14, label %if.end

if.then14:                                        ; preds = %cond.end
  %18 = load %struct.gv*, %struct.gv** @PL_defgv, align 8
  call void @Perl_save_gp(%struct.gv* %18, i32 0)
  %19 = load %struct.gv*, %struct.gv** @PL_defgv, align 8
  %sv_any = getelementptr inbounds %struct.gv, %struct.gv* %19, i32 0, i32 0
  %20 = load %struct.xpvgv*, %struct.xpvgv** %sv_any, align 8
  %xpv_cur = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %20, i32 0, i32 2
  %21 = load i64, i64* %xpv_cur, align 8
  %and = and i64 %21, -2
  store i64 %and, i64* %xpv_cur, align 8
  %22 = load %struct.gv*, %struct.gv** @PL_defgv, align 8
  %sv_u15 = getelementptr inbounds %struct.gv, %struct.gv* %22, i32 0, i32 3
  %svu_gp16 = bitcast %union.anon.4* %sv_u15 to %struct.gp**
  %23 = load %struct.gp*, %struct.gp** %svu_gp16, align 8
  %add.ptr17 = getelementptr inbounds %struct.gp, %struct.gp* %23, i64 0
  %gp_sv18 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr17, i32 0, i32 0
  call void @Perl_save_generic_svref(%struct.sv** %gp_sv18)
  %24 = load %struct.gv*, %struct.gv** @PL_defgv, align 8
  %sv_u19 = getelementptr inbounds %struct.gv, %struct.gv* %24, i32 0, i32 3
  %svu_gp20 = bitcast %union.anon.4* %sv_u19 to %struct.gp**
  %25 = load %struct.gp*, %struct.gp** %svu_gp20, align 8
  %add.ptr21 = getelementptr inbounds %struct.gp, %struct.gp* %25, i64 0
  %gp_sv22 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr21, i32 0, i32 0
  store %struct.sv* null, %struct.sv** %gp_sv22, align 8
  %26 = load %struct.gv*, %struct.gv** @PL_defgv, align 8
  %sv_u23 = getelementptr inbounds %struct.gv, %struct.gv* %26, i32 0, i32 3
  %svu_gp24 = bitcast %union.anon.4* %sv_u23 to %struct.gp**
  %27 = load %struct.gp*, %struct.gp** %svu_gp24, align 8
  %add.ptr25 = getelementptr inbounds %struct.gp, %struct.gp* %27, i64 0
  %gp_sv26 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr25, i32 0, i32 0
  %28 = load %struct.sv*, %struct.sv** %gp_sv26, align 8
  %29 = bitcast %struct.sv* %28 to i8*
  %30 = bitcast i8* %29 to %struct.sv*
  call void @S_SvREFCNT_dec(%struct.sv* %30)
  %31 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %sv27 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %31, i32 0, i32 4
  %32 = load %struct.sv*, %struct.sv** %sv27, align 8
  %33 = bitcast %struct.sv* %32 to i8*
  %34 = bitcast i8* %33 to %struct.sv*
  %call28 = call %struct.sv* @S_SvREFCNT_inc(%struct.sv* %34)
  %35 = load %struct.gv*, %struct.gv** @PL_defgv, align 8
  %sv_u29 = getelementptr inbounds %struct.gv, %struct.gv* %35, i32 0, i32 3
  %svu_gp30 = bitcast %union.anon.4* %sv_u29 to %struct.gp**
  %36 = load %struct.gp*, %struct.gp** %svu_gp30, align 8
  %add.ptr31 = getelementptr inbounds %struct.gp, %struct.gp* %36, i64 0
  %gp_sv32 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr31, i32 0, i32 0
  store %struct.sv* %call28, %struct.sv** %gp_sv32, align 8
  br label %if.end

if.end:                                           ; preds = %if.then14, %cond.end
  %37 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %sv33 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %37, i32 0, i32 4
  %38 = load %struct.sv*, %struct.sv** %sv33, align 8
  %call34 = call %struct.magic* @Perl_mg_find_mglob(%struct.sv* %38)
  store %struct.magic* %call34, %struct.magic** %mg, align 8
  %tobool35 = icmp ne %struct.magic* %call34, null
  br i1 %tobool35, label %if.end39, label %if.then36

if.then36:                                        ; preds = %if.end
  %39 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %sv37 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %39, i32 0, i32 4
  %40 = load %struct.sv*, %struct.sv** %sv37, align 8
  %call38 = call %struct.magic* @Perl_sv_magicext_mglob(%struct.sv* %40)
  store %struct.magic* %call38, %struct.magic** %mg, align 8
  %41 = load %struct.magic*, %struct.magic** %mg, align 8
  %mg_len = getelementptr inbounds %struct.magic, %struct.magic* %41, i32 0, i32 5
  store i64 -1, i64* %mg_len, align 8
  br label %if.end39

if.end39:                                         ; preds = %if.then36, %if.end
  %42 = load %struct.magic*, %struct.magic** %mg, align 8
  %43 = load %struct.regmatch_info_aux_eval*, %struct.regmatch_info_aux_eval** %eval_state, align 8
  %pos_magic = getelementptr inbounds %struct.regmatch_info_aux_eval, %struct.regmatch_info_aux_eval* %43, i32 0, i32 7
  store %struct.magic* %42, %struct.magic** %pos_magic, align 8
  %44 = load %struct.magic*, %struct.magic** %mg, align 8
  %mg_len40 = getelementptr inbounds %struct.magic, %struct.magic* %44, i32 0, i32 5
  %45 = load i64, i64* %mg_len40, align 8
  %46 = load %struct.regmatch_info_aux_eval*, %struct.regmatch_info_aux_eval** %eval_state, align 8
  %pos = getelementptr inbounds %struct.regmatch_info_aux_eval, %struct.regmatch_info_aux_eval* %46, i32 0, i32 8
  store i64 %45, i64* %pos, align 8
  %47 = load %struct.magic*, %struct.magic** %mg, align 8
  %mg_flags = getelementptr inbounds %struct.magic, %struct.magic* %47, i32 0, i32 4
  %48 = load i8, i8* %mg_flags, align 1
  %49 = load %struct.regmatch_info_aux_eval*, %struct.regmatch_info_aux_eval** %eval_state, align 8
  %pos_flags = getelementptr inbounds %struct.regmatch_info_aux_eval, %struct.regmatch_info_aux_eval* %49, i32 0, i32 9
  store i8 %48, i8* %pos_flags, align 8
  br label %if.end42

if.else:                                          ; preds = %entry
  %50 = load %struct.regmatch_info_aux_eval*, %struct.regmatch_info_aux_eval** %eval_state, align 8
  %pos_magic41 = getelementptr inbounds %struct.regmatch_info_aux_eval, %struct.regmatch_info_aux_eval* %50, i32 0, i32 7
  store %struct.magic* null, %struct.magic** %pos_magic41, align 8
  br label %if.end42

if.end42:                                         ; preds = %if.else, %if.end39
  %51 = load %struct.pmop*, %struct.pmop** @PL_reg_curpm, align 8
  %tobool43 = icmp ne %struct.pmop* %51, null
  br i1 %tobool43, label %if.end46, label %if.then44

if.then44:                                        ; preds = %if.end42
  %call45 = call i8* @Perl_safesyscalloc(i64 1, i64 96)
  %52 = bitcast i8* %call45 to %struct.pmop*
  store %struct.pmop* %52, %struct.pmop** @PL_reg_curpm, align 8
  br label %if.end46

if.end46:                                         ; preds = %if.then44, %if.end42
  %53 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %info_aux_eval47 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %53, i32 0, i32 8
  %54 = load %struct.regmatch_info_aux_eval*, %struct.regmatch_info_aux_eval** %info_aux_eval47, align 8
  %tobool48 = icmp ne %struct.regmatch_info_aux_eval* %54, null
  br i1 %tobool48, label %if.then49, label %if.end54

if.then49:                                        ; preds = %if.end46
  %55 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %prog50 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %55, i32 0, i32 0
  %56 = load %struct.p5rx*, %struct.p5rx** %prog50, align 8
  %57 = bitcast %struct.p5rx* %56 to i8*
  %58 = bitcast i8* %57 to %struct.sv*
  %call51 = call %struct.sv* @S_SvREFCNT_inc(%struct.sv* %58)
  %59 = bitcast %struct.sv* %call51 to %struct.p5rx*
  %60 = load %struct.pmop*, %struct.pmop** @PL_reg_curpm, align 8
  %op_pmregexp = getelementptr inbounds %struct.pmop, %struct.pmop* %60, i32 0, i32 9
  %61 = load %struct.p5rx*, %struct.p5rx** %op_pmregexp, align 8
  %62 = bitcast %struct.p5rx* %61 to i8*
  %63 = bitcast i8* %62 to %struct.sv*
  call void @S_SvREFCNT_dec(%struct.sv* %63)
  %64 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %prog52 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %64, i32 0, i32 0
  %65 = load %struct.p5rx*, %struct.p5rx** %prog52, align 8
  %66 = load %struct.pmop*, %struct.pmop** @PL_reg_curpm, align 8
  %op_pmregexp53 = getelementptr inbounds %struct.pmop, %struct.pmop* %66, i32 0, i32 9
  store %struct.p5rx* %65, %struct.p5rx** %op_pmregexp53, align 8
  br label %if.end54

if.end54:                                         ; preds = %if.then49, %if.end46
  %67 = load %struct.pmop*, %struct.pmop** @PL_curpm, align 8
  %68 = load %struct.regmatch_info_aux_eval*, %struct.regmatch_info_aux_eval** %eval_state, align 8
  %curpm = getelementptr inbounds %struct.regmatch_info_aux_eval, %struct.regmatch_info_aux_eval* %68, i32 0, i32 1
  store %struct.pmop* %67, %struct.pmop** %curpm, align 8
  %69 = load %struct.pmop*, %struct.pmop** @PL_reg_curpm, align 8
  store %struct.pmop* %69, %struct.pmop** @PL_curpm, align 8
  %70 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %extflags = getelementptr inbounds %struct.regexp, %struct.regexp* %70, i32 0, i32 7
  %71 = load i32, i32* %extflags, align 8
  %and55 = and i32 %71, 33554432
  %tobool56 = icmp ne i32 %and55, 0
  br i1 %tobool56, label %if.then57, label %if.else65

if.then57:                                        ; preds = %if.end54
  %72 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %subbeg = getelementptr inbounds %struct.regexp, %struct.regexp* %72, i32 0, i32 18
  %73 = load i8*, i8** %subbeg, align 8
  %74 = load %struct.regmatch_info_aux_eval*, %struct.regmatch_info_aux_eval** %eval_state, align 8
  %subbeg58 = getelementptr inbounds %struct.regmatch_info_aux_eval, %struct.regmatch_info_aux_eval* %74, i32 0, i32 3
  store i8* %73, i8** %subbeg58, align 8
  %75 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %sublen = getelementptr inbounds %struct.regexp, %struct.regexp* %75, i32 0, i32 20
  %76 = load i64, i64* %sublen, align 8
  %77 = load %struct.regmatch_info_aux_eval*, %struct.regmatch_info_aux_eval** %eval_state, align 8
  %sublen59 = getelementptr inbounds %struct.regmatch_info_aux_eval, %struct.regmatch_info_aux_eval* %77, i32 0, i32 4
  store i64 %76, i64* %sublen59, align 8
  %78 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %suboffset = getelementptr inbounds %struct.regexp, %struct.regexp* %78, i32 0, i32 21
  %79 = load i64, i64* %suboffset, align 8
  %80 = load %struct.regmatch_info_aux_eval*, %struct.regmatch_info_aux_eval** %eval_state, align 8
  %suboffset60 = getelementptr inbounds %struct.regmatch_info_aux_eval, %struct.regmatch_info_aux_eval* %80, i32 0, i32 5
  store i64 %79, i64* %suboffset60, align 8
  %81 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %subcoffset = getelementptr inbounds %struct.regexp, %struct.regexp* %81, i32 0, i32 22
  %82 = load i64, i64* %subcoffset, align 8
  %83 = load %struct.regmatch_info_aux_eval*, %struct.regmatch_info_aux_eval** %eval_state, align 8
  %subcoffset61 = getelementptr inbounds %struct.regmatch_info_aux_eval, %struct.regmatch_info_aux_eval* %83, i32 0, i32 6
  store i64 %82, i64* %subcoffset61, align 8
  %84 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %saved_copy = getelementptr inbounds %struct.regexp, %struct.regexp* %84, i32 0, i32 19
  %85 = load %struct.sv*, %struct.sv** %saved_copy, align 8
  %86 = load %struct.regmatch_info_aux_eval*, %struct.regmatch_info_aux_eval** %eval_state, align 8
  %saved_copy62 = getelementptr inbounds %struct.regmatch_info_aux_eval, %struct.regmatch_info_aux_eval* %86, i32 0, i32 2
  store %struct.sv* %85, %struct.sv** %saved_copy62, align 8
  %87 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %extflags63 = getelementptr inbounds %struct.regexp, %struct.regexp* %87, i32 0, i32 7
  %88 = load i32, i32* %extflags63, align 8
  %and64 = and i32 %88, -33554433
  store i32 %and64, i32* %extflags63, align 8
  br label %if.end67

if.else65:                                        ; preds = %if.end54
  %89 = load %struct.regmatch_info_aux_eval*, %struct.regmatch_info_aux_eval** %eval_state, align 8
  %subbeg66 = getelementptr inbounds %struct.regmatch_info_aux_eval, %struct.regmatch_info_aux_eval* %89, i32 0, i32 3
  store i8* null, i8** %subbeg66, align 8
  br label %if.end67

if.end67:                                         ; preds = %if.else65, %if.then57
  %90 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %90, i32 0, i32 1
  %91 = load i8*, i8** %strbeg, align 8
  %92 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %subbeg68 = getelementptr inbounds %struct.regexp, %struct.regexp* %92, i32 0, i32 18
  store i8* %91, i8** %subbeg68, align 8
  %93 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %suboffset69 = getelementptr inbounds %struct.regexp, %struct.regexp* %93, i32 0, i32 21
  store i64 0, i64* %suboffset69, align 8
  %94 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %subcoffset70 = getelementptr inbounds %struct.regexp, %struct.regexp* %94, i32 0, i32 22
  store i64 0, i64* %subcoffset70, align 8
  %95 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %95, i32 0, i32 2
  %96 = load i8*, i8** %strend, align 8
  %97 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg71 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %97, i32 0, i32 1
  %98 = load i8*, i8** %strbeg71, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %96 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %98 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %99 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %sublen72 = getelementptr inbounds %struct.regexp, %struct.regexp* %99, i32 0, i32 20
  store i64 %sub.ptr.sub, i64* %sublen72, align 8
  ret void
}

declare dso_local i8* @Perl_safesyscalloc(i64, i64) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @S_regtry(%struct.regmatch_info* %reginfo, i8** %startposp) #0 {
entry:
  %retval = alloca i32, align 4
  %reginfo.addr = alloca %struct.regmatch_info*, align 8
  %startposp.addr = alloca i8**, align 8
  %lastcp = alloca i32, align 4
  %rx = alloca %struct.p5rx*, align 8
  %prog1 = alloca %struct.regexp*, align 8
  %result = alloca i64, align 8
  %progi = alloca %struct.regexp_internal*, align 8
  %pp = alloca %struct.regexp_paren_pair*, align 8
  %i = alloca i32, align 4
  store %struct.regmatch_info* %reginfo, %struct.regmatch_info** %reginfo.addr, align 8
  store i8** %startposp, i8*** %startposp.addr, align 8
  %0 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %prog = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %0, i32 0, i32 0
  %1 = load %struct.p5rx*, %struct.p5rx** %prog, align 8
  store %struct.p5rx* %1, %struct.p5rx** %rx, align 8
  %2 = load %struct.p5rx*, %struct.p5rx** %rx, align 8
  %call = call %struct.regexp* @S_ReANY(%struct.p5rx* %2)
  store %struct.regexp* %call, %struct.regexp** %prog1, align 8
  %3 = load %struct.regexp*, %struct.regexp** %prog1, align 8
  %pprivate = getelementptr inbounds %struct.regexp, %struct.regexp* %3, i32 0, i32 14
  %4 = load i8*, i8** %pprivate, align 8
  %5 = bitcast i8* %4 to %struct.regexp_internal*
  store %struct.regexp_internal* %5, %struct.regexp_internal** %progi, align 8
  %6 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %cutpoint = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %6, i32 0, i32 6
  store i8* null, i8** %cutpoint, align 8
  %7 = load i8**, i8*** %startposp.addr, align 8
  %8 = load i8*, i8** %7, align 8
  %9 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %9, i32 0, i32 1
  %10 = load i8*, i8** %strbeg, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %8 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %10 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %11 = load %struct.regexp*, %struct.regexp** %prog1, align 8
  %offs = getelementptr inbounds %struct.regexp, %struct.regexp* %11, i32 0, i32 17
  %12 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %offs, align 8
  %arrayidx = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %12, i64 0
  %start = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %arrayidx, i32 0, i32 0
  store i64 %sub.ptr.sub, i64* %start, align 8
  %13 = load %struct.regexp*, %struct.regexp** %prog1, align 8
  %lastparen = getelementptr inbounds %struct.regexp, %struct.regexp* %13, i32 0, i32 15
  store i32 0, i32* %lastparen, align 8
  %14 = load %struct.regexp*, %struct.regexp** %prog1, align 8
  %lastcloseparen = getelementptr inbounds %struct.regexp, %struct.regexp* %14, i32 0, i32 16
  store i32 0, i32* %lastcloseparen, align 4
  %15 = load %struct.regexp*, %struct.regexp** %prog1, align 8
  %nparens = getelementptr inbounds %struct.regexp, %struct.regexp* %15, i32 0, i32 12
  %16 = load i32, i32* %nparens, align 8
  %tobool = icmp ne i32 %16, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %17 = load %struct.regexp*, %struct.regexp** %prog1, align 8
  %offs2 = getelementptr inbounds %struct.regexp, %struct.regexp* %17, i32 0, i32 17
  %18 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %offs2, align 8
  store %struct.regexp_paren_pair* %18, %struct.regexp_paren_pair** %pp, align 8
  %19 = load %struct.regexp*, %struct.regexp** %prog1, align 8
  %nparens3 = getelementptr inbounds %struct.regexp, %struct.regexp* %19, i32 0, i32 12
  %20 = load i32, i32* %nparens3, align 8
  store i32 %20, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then
  %21 = load i32, i32* %i, align 4
  %22 = load %struct.regexp*, %struct.regexp** %prog1, align 8
  %lastparen4 = getelementptr inbounds %struct.regexp, %struct.regexp* %22, i32 0, i32 15
  %23 = load i32, i32* %lastparen4, align 8
  %cmp = icmp sgt i32 %21, %23
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %24 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %pp, align 8
  %incdec.ptr = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %24, i32 1
  store %struct.regexp_paren_pair* %incdec.ptr, %struct.regexp_paren_pair** %pp, align 8
  %25 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %pp, align 8
  %start5 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %25, i32 0, i32 0
  store i64 -1, i64* %start5, align 8
  %26 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %pp, align 8
  %end = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %26, i32 0, i32 1
  store i64 -1, i64* %end, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %27 = load i32, i32* %i, align 4
  %dec = add nsw i32 %27, -1
  store i32 %dec, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end

if.end:                                           ; preds = %for.end, %entry
  %28 = load i32, i32* @PL_savestack_ix, align 4
  store i32 %28, i32* %lastcp, align 4
  %29 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %30 = load i8**, i8*** %startposp.addr, align 8
  %31 = load i8*, i8** %30, align 8
  %32 = load %struct.regexp_internal*, %struct.regexp_internal** %progi, align 8
  %program = getelementptr inbounds %struct.regexp_internal, %struct.regexp_internal* %32, i32 0, i32 6
  %arraydecay = getelementptr inbounds [1 x %struct.regnode], [1 x %struct.regnode]* %program, i64 0, i64 0
  %add.ptr = getelementptr inbounds %struct.regnode, %struct.regnode* %arraydecay, i64 1
  %call6 = call i64 @S_regmatch(%struct.regmatch_info* %29, i8* %31, %struct.regnode* %add.ptr)
  store i64 %call6, i64* %result, align 8
  %33 = load i64, i64* %result, align 8
  %cmp7 = icmp ne i64 %33, -1
  br i1 %cmp7, label %if.then8, label %if.end12

if.then8:                                         ; preds = %if.end
  %34 = load i64, i64* %result, align 8
  %35 = load %struct.regexp*, %struct.regexp** %prog1, align 8
  %offs9 = getelementptr inbounds %struct.regexp, %struct.regexp* %35, i32 0, i32 17
  %36 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %offs9, align 8
  %arrayidx10 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %36, i64 0
  %end11 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %arrayidx10, i32 0, i32 1
  store i64 %34, i64* %end11, align 8
  store i32 1, i32* %retval, align 4
  br label %return

if.end12:                                         ; preds = %if.end
  %37 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %cutpoint13 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %37, i32 0, i32 6
  %38 = load i8*, i8** %cutpoint13, align 8
  %tobool14 = icmp ne i8* %38, null
  br i1 %tobool14, label %if.then15, label %if.end17

if.then15:                                        ; preds = %if.end12
  %39 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %cutpoint16 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %39, i32 0, i32 6
  %40 = load i8*, i8** %cutpoint16, align 8
  %41 = load i8**, i8*** %startposp.addr, align 8
  store i8* %40, i8** %41, align 8
  br label %if.end17

if.end17:                                         ; preds = %if.then15, %if.end12
  br label %do.body

do.body:                                          ; preds = %if.end17
  %42 = load i32, i32* @PL_savestack_ix, align 4
  %43 = load i32, i32* %lastcp, align 4
  %cmp18 = icmp sgt i32 %42, %43
  br i1 %cmp18, label %if.then19, label %if.end20

if.then19:                                        ; preds = %do.body
  %44 = load i32, i32* %lastcp, align 4
  call void @Perl_leave_scope(i32 %44)
  br label %if.end20

if.end20:                                         ; preds = %if.then19, %do.body
  br label %do.end

do.end:                                           ; preds = %if.end20
  store i32 0, i32* %retval, align 4
  br label %return

return:                                           ; preds = %do.end, %if.then8
  %45 = load i32, i32* %retval, align 4
  ret i32 %45
}

declare dso_local i64 @Perl_sv_len_utf8(%struct.sv*) #2

declare dso_local i8* @Perl_sv_2pv_flags(%struct.sv*, i64*, i32) #2

declare dso_local i8* @Perl_rninstr(i8*, i8*, i8*, i8*) #2

declare dso_local void @Perl_safesysfree(i8*) #2

declare dso_local void @Perl_leave_scope(i32) #2

declare dso_local i32 @Perl_hv_iterinit(%struct.hv*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.sv* @Perl_regclass_swash(%struct.regexp* %prog, %struct.regnode* %node, i1 zeroext %doinit, %struct.sv** %listsvp, %struct.sv** %altsvp) #0 {
entry:
  %prog.addr = alloca %struct.regexp*, align 8
  %node.addr = alloca %struct.regnode*, align 8
  %doinit.addr = alloca i8, align 1
  %listsvp.addr = alloca %struct.sv**, align 8
  %altsvp.addr = alloca %struct.sv**, align 8
  store %struct.regexp* %prog, %struct.regexp** %prog.addr, align 8
  store %struct.regnode* %node, %struct.regnode** %node.addr, align 8
  %frombool = zext i1 %doinit to i8
  store i8 %frombool, i8* %doinit.addr, align 1
  store %struct.sv** %listsvp, %struct.sv*** %listsvp.addr, align 8
  store %struct.sv** %altsvp, %struct.sv*** %altsvp.addr, align 8
  %0 = load %struct.sv**, %struct.sv*** %altsvp.addr, align 8
  %tobool = icmp ne %struct.sv** %0, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load %struct.sv**, %struct.sv*** %altsvp.addr, align 8
  store %struct.sv* null, %struct.sv** %1, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %2 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %3 = load %struct.regnode*, %struct.regnode** %node.addr, align 8
  %4 = load i8, i8* %doinit.addr, align 1
  %tobool1 = trunc i8 %4 to i1
  %5 = load %struct.sv**, %struct.sv*** %listsvp.addr, align 8
  %call = call %struct.sv* @Perl__get_regclass_nonbitmap_data(%struct.regexp* %2, %struct.regnode* %3, i1 zeroext %tobool1, %struct.sv** %5, %struct.sv** null, %struct.sv* null)
  %call2 = call %struct.sv* @Perl_newSVsv(%struct.sv* %call)
  ret %struct.sv* %call2
}

declare dso_local %struct.sv* @Perl_newSVsv(%struct.sv*) #2

declare dso_local %struct.sv* @Perl__get_regclass_nonbitmap_data(%struct.regexp*, %struct.regnode*, i1 zeroext, %struct.sv**, %struct.sv**, %struct.sv*) #2

declare dso_local void @Perl_sv_free2(%struct.sv*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i1 @S_reginclass(%struct.regexp* %prog, %struct.regnode* %n, i8* %p, i8* %p_end, i1 zeroext %utf8_target) #0 {
entry:
  %prog.addr = alloca %struct.regexp*, align 8
  %n.addr = alloca %struct.regnode*, align 8
  %p.addr = alloca i8*, align 8
  %p_end.addr = alloca i8*, align 8
  %utf8_target.addr = alloca i8, align 1
  %flags = alloca i8, align 1
  %match = alloca i8, align 1
  %c = alloca i64, align 8
  %c_len = alloca i64, align 8
  %count = alloca i32, align 4
  %to_complement = alloca i32, align 4
  %only_utf8_locale = alloca %struct.sv*, align 8
  %sw = alloca %struct.sv*, align 8
  %utf8_buffer = alloca [2 x i8], align 1
  %utf8_p = alloca i8*, align 8
  store %struct.regexp* %prog, %struct.regexp** %prog.addr, align 8
  store %struct.regnode* %n, %struct.regnode** %n.addr, align 8
  store i8* %p, i8** %p.addr, align 8
  store i8* %p_end, i8** %p_end.addr, align 8
  %frombool = zext i1 %utf8_target to i8
  store i8 %frombool, i8* %utf8_target.addr, align 1
  %0 = load %struct.regnode*, %struct.regnode** %n.addr, align 8
  %flags1 = getelementptr inbounds %struct.regnode, %struct.regnode* %0, i32 0, i32 0
  %1 = load i8, i8* %flags1, align 2
  store i8 %1, i8* %flags, align 1
  store i8 0, i8* %match, align 1
  %2 = load i8*, i8** %p.addr, align 8
  %3 = load i8, i8* %2, align 1
  %conv = zext i8 %3 to i64
  store i64 %conv, i64* %c, align 8
  %4 = load i64, i64* %c, align 8
  %cmp = icmp ult i64 %4, 128
  br i1 %cmp, label %if.end26, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %5 = load i8, i8* %utf8_target.addr, align 1
  %tobool = trunc i8 %5 to i1
  br i1 %tobool, label %if.then, label %if.end26

if.then:                                          ; preds = %land.lhs.true
  store i64 0, i64* %c_len, align 8
  %6 = load i8*, i8** %p.addr, align 8
  %7 = load i8*, i8** %p_end.addr, align 8
  %8 = load i8*, i8** %p.addr, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %7 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %8 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %call = call zeroext i1 @Perl_ckwarn(i32 44)
  %9 = zext i1 %call to i64
  %cond = select i1 %call, i32 0, i32 1
  %and = and i32 %cond, 1
  %or = or i32 %and, 8192
  %call5 = call i64 @Perl_utf8n_to_uvchr(i8* %6, i64 %sub.ptr.sub, i64* %c_len, i32 %or)
  store i64 %call5, i64* %c, align 8
  %10 = load i64, i64* %c_len, align 8
  %cmp6 = icmp eq i64 %10, -1
  br i1 %cmp6, label %if.then8, label %if.end

if.then8:                                         ; preds = %if.then
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.7, i64 0, i64 0))
  br label %if.end

if.end:                                           ; preds = %if.then8, %if.then
  %11 = load i64, i64* %c, align 8
  %cmp9 = icmp ugt i64 %11, 255
  br i1 %cmp9, label %land.lhs.true11, label %if.end25

land.lhs.true11:                                  ; preds = %if.end
  %12 = load %struct.regnode*, %struct.regnode** %n.addr, align 8
  %type = getelementptr inbounds %struct.regnode, %struct.regnode* %12, i32 0, i32 1
  %13 = load i8, i8* %type, align 1
  %conv12 = zext i8 %13 to i32
  %cmp13 = icmp eq i32 %conv12, 20
  br i1 %cmp13, label %land.lhs.true15, label %if.end25

land.lhs.true15:                                  ; preds = %land.lhs.true11
  %14 = load %struct.regnode*, %struct.regnode** %n.addr, align 8
  %type16 = getelementptr inbounds %struct.regnode, %struct.regnode* %14, i32 0, i32 1
  %15 = load i8, i8* %type16, align 1
  %conv17 = zext i8 %15 to i32
  %cmp18 = icmp eq i32 %conv17, 19
  br i1 %cmp18, label %land.lhs.true20, label %if.then24

land.lhs.true20:                                  ; preds = %land.lhs.true15
  %16 = load %struct.regnode*, %struct.regnode** %n.addr, align 8
  %next_off = getelementptr inbounds %struct.regnode, %struct.regnode* %16, i32 0, i32 2
  %17 = load i16, i16* %next_off, align 2
  %conv21 = zext i16 %17 to i32
  %cmp22 = icmp eq i32 %conv21, 1
  br i1 %cmp22, label %if.end25, label %if.then24

if.then24:                                        ; preds = %land.lhs.true20, %land.lhs.true15
  br label %if.end25

if.end25:                                         ; preds = %if.then24, %land.lhs.true20, %land.lhs.true11, %if.end
  br label %if.end26

if.end26:                                         ; preds = %if.end25, %land.lhs.true, %entry
  %18 = load i64, i64* %c, align 8
  %cmp27 = icmp ult i64 %18, 256
  br i1 %cmp27, label %if.then29, label %if.end108

if.then29:                                        ; preds = %if.end26
  %19 = load %struct.regnode*, %struct.regnode** %n.addr, align 8
  %20 = bitcast %struct.regnode* %19 to %struct.regnode_charclass*
  %bitmap = getelementptr inbounds %struct.regnode_charclass, %struct.regnode_charclass* %20, i32 0, i32 4
  %21 = load i64, i64* %c, align 8
  %conv30 = trunc i64 %21 to i8
  %conv31 = zext i8 %conv30 to i32
  %shr = ashr i32 %conv31, 3
  %and32 = and i32 %shr, 31
  %idxprom = sext i32 %and32 to i64
  %arrayidx = getelementptr inbounds [32 x i8], [32 x i8]* %bitmap, i64 0, i64 %idxprom
  %22 = load i8, i8* %arrayidx, align 1
  %conv33 = sext i8 %22 to i32
  %23 = load i64, i64* %c, align 8
  %and34 = and i64 %23, 7
  %sh_prom = trunc i64 %and34 to i32
  %shl = shl i32 1, %sh_prom
  %and35 = and i32 %conv33, %shl
  %tobool36 = icmp ne i32 %and35, 0
  br i1 %tobool36, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then29
  br i1 true, label %if.then37, label %if.else

cond.false:                                       ; preds = %if.then29
  br i1 false, label %if.then37, label %if.else

if.then37:                                        ; preds = %cond.false, %cond.true
  store i8 1, i8* %match, align 1
  br label %if.end107

if.else:                                          ; preds = %cond.false, %cond.true
  %24 = load i8, i8* %flags, align 1
  %conv38 = sext i8 %24 to i32
  %and39 = and i32 %conv38, 128
  %tobool40 = icmp ne i32 %and39, 0
  br i1 %tobool40, label %land.lhs.true41, label %if.else47

land.lhs.true41:                                  ; preds = %if.else
  %25 = load i8, i8* %utf8_target.addr, align 1
  %tobool42 = trunc i8 %25 to i1
  br i1 %tobool42, label %if.else47, label %land.lhs.true43

land.lhs.true43:                                  ; preds = %land.lhs.true41
  %26 = load i64, i64* %c, align 8
  %cmp44 = icmp ult i64 %26, 128
  br i1 %cmp44, label %if.else47, label %if.then46

if.then46:                                        ; preds = %land.lhs.true43
  store i8 1, i8* %match, align 1
  br label %if.end106

if.else47:                                        ; preds = %land.lhs.true43, %land.lhs.true41, %if.else
  %27 = load i8, i8* %flags, align 1
  %conv48 = sext i8 %27 to i32
  %and49 = and i32 %conv48, 12
  %tobool50 = icmp ne i32 %and49, 0
  br i1 %tobool50, label %if.then51, label %if.end105

if.then51:                                        ; preds = %if.else47
  %28 = load i8, i8* %flags, align 1
  %conv52 = sext i8 %28 to i32
  %and53 = and i32 %conv52, 4
  %tobool54 = icmp ne i32 %and53, 0
  br i1 %tobool54, label %land.lhs.true55, label %if.else76

land.lhs.true55:                                  ; preds = %if.then51
  %29 = load i64, i64* %c, align 8
  %cmp56 = icmp ult i64 %29, 256
  br i1 %cmp56, label %land.lhs.true58, label %if.else76

land.lhs.true58:                                  ; preds = %land.lhs.true55
  %30 = load %struct.regnode*, %struct.regnode** %n.addr, align 8
  %31 = bitcast %struct.regnode* %30 to %struct.regnode_charclass*
  %bitmap59 = getelementptr inbounds %struct.regnode_charclass, %struct.regnode_charclass* %31, i32 0, i32 4
  %32 = load i64, i64* %c, align 8
  %arrayidx60 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_fold_locale, i64 0, i64 %32
  %33 = load i8, i8* %arrayidx60, align 1
  %conv61 = zext i8 %33 to i32
  %shr62 = ashr i32 %conv61, 3
  %and63 = and i32 %shr62, 31
  %idxprom64 = sext i32 %and63 to i64
  %arrayidx65 = getelementptr inbounds [32 x i8], [32 x i8]* %bitmap59, i64 0, i64 %idxprom64
  %34 = load i8, i8* %arrayidx65, align 1
  %conv66 = sext i8 %34 to i32
  %35 = load i64, i64* %c, align 8
  %arrayidx67 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_fold_locale, i64 0, i64 %35
  %36 = load i8, i8* %arrayidx67, align 1
  %conv68 = zext i8 %36 to i32
  %and69 = and i32 %conv68, 7
  %shl70 = shl i32 1, %and69
  %and71 = and i32 %conv66, %shl70
  %tobool72 = icmp ne i32 %and71, 0
  br i1 %tobool72, label %cond.true73, label %cond.false74

cond.true73:                                      ; preds = %land.lhs.true58
  br i1 true, label %if.then75, label %if.else76

cond.false74:                                     ; preds = %land.lhs.true58
  br i1 false, label %if.then75, label %if.else76

if.then75:                                        ; preds = %cond.false74, %cond.true73
  store i8 1, i8* %match, align 1
  br label %if.end104

if.else76:                                        ; preds = %cond.false74, %cond.true73, %land.lhs.true55, %if.then51
  %37 = load %struct.regnode*, %struct.regnode** %n.addr, align 8
  %flags77 = getelementptr inbounds %struct.regnode, %struct.regnode* %37, i32 0, i32 0
  %38 = load i8, i8* %flags77, align 2
  %conv78 = zext i8 %38 to i32
  %and79 = and i32 %conv78, 8
  %tobool80 = icmp ne i32 %and79, 0
  br i1 %tobool80, label %land.lhs.true81, label %if.end103

land.lhs.true81:                                  ; preds = %if.else76
  %39 = load %struct.regnode*, %struct.regnode** %n.addr, align 8
  %40 = bitcast %struct.regnode* %39 to %struct.regnode_charclass_class*
  %classflags = getelementptr inbounds %struct.regnode_charclass_class, %struct.regnode_charclass_class* %40, i32 0, i32 5
  %41 = load i32, i32* %classflags, align 4
  %tobool82 = icmp ne i32 %41, 0
  br i1 %tobool82, label %land.lhs.true83, label %if.end103

land.lhs.true83:                                  ; preds = %land.lhs.true81
  %42 = load i64, i64* %c, align 8
  %cmp84 = icmp ult i64 %42, 256
  br i1 %cmp84, label %if.then86, label %if.end103

if.then86:                                        ; preds = %land.lhs.true83
  store i32 0, i32* %count, align 4
  store i32 0, i32* %to_complement, align 4
  br label %while.cond

while.cond:                                       ; preds = %if.end101, %if.then86
  %43 = load i32, i32* %count, align 4
  %cmp87 = icmp slt i32 %43, 30
  br i1 %cmp87, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %44 = load %struct.regnode*, %struct.regnode** %n.addr, align 8
  %45 = bitcast %struct.regnode* %44 to %struct.regnode_charclass_class*
  %classflags89 = getelementptr inbounds %struct.regnode_charclass_class, %struct.regnode_charclass_class* %45, i32 0, i32 5
  %46 = load i32, i32* %classflags89, align 4
  %47 = load i32, i32* %count, align 4
  %shl90 = shl i32 1, %47
  %and91 = and i32 %46, %shl90
  %tobool92 = icmp ne i32 %and91, 0
  br i1 %tobool92, label %land.lhs.true93, label %if.end101

land.lhs.true93:                                  ; preds = %while.body
  %48 = load i32, i32* %to_complement, align 4
  %49 = load i32, i32* %count, align 4
  %div = sdiv i32 %49, 2
  %conv94 = trunc i32 %div to i8
  %50 = load i64, i64* %c, align 8
  %conv95 = trunc i64 %50 to i8
  %call96 = call zeroext i1 @S_isFOO_lc(i8 zeroext %conv94, i8 zeroext %conv95)
  %51 = zext i1 %call96 to i64
  %cond98 = select i1 %call96, i32 1, i32 0
  %xor = xor i32 %48, %cond98
  %tobool99 = icmp ne i32 %xor, 0
  br i1 %tobool99, label %if.then100, label %if.end101

if.then100:                                       ; preds = %land.lhs.true93
  store i8 1, i8* %match, align 1
  br label %while.end

if.end101:                                        ; preds = %land.lhs.true93, %while.body
  %52 = load i32, i32* %count, align 4
  %inc = add nsw i32 %52, 1
  store i32 %inc, i32* %count, align 4
  %53 = load i32, i32* %to_complement, align 4
  %xor102 = xor i32 %53, 1
  store i32 %xor102, i32* %to_complement, align 4
  br label %while.cond

while.end:                                        ; preds = %if.then100, %while.cond
  br label %if.end103

if.end103:                                        ; preds = %while.end, %land.lhs.true83, %land.lhs.true81, %if.else76
  br label %if.end104

if.end104:                                        ; preds = %if.end103, %if.then75
  br label %if.end105

if.end105:                                        ; preds = %if.end104, %if.else47
  br label %if.end106

if.end106:                                        ; preds = %if.end105, %if.then46
  br label %if.end107

if.end107:                                        ; preds = %if.end106, %if.then37
  br label %if.end108

if.end108:                                        ; preds = %if.end107, %if.end26
  %54 = load i8, i8* %match, align 1
  %tobool109 = trunc i8 %54 to i1
  br i1 %tobool109, label %if.end175, label %if.then110

if.then110:                                       ; preds = %if.end108
  %55 = load i64, i64* %c, align 8
  %cmp111 = icmp uge i64 %55, 256
  br i1 %cmp111, label %land.lhs.true113, label %if.else118

land.lhs.true113:                                 ; preds = %if.then110
  %56 = load i8, i8* %flags, align 1
  %conv114 = sext i8 %56 to i32
  %and115 = and i32 %conv114, 64
  %tobool116 = icmp ne i32 %and115, 0
  br i1 %tobool116, label %if.then117, label %if.else118

if.then117:                                       ; preds = %land.lhs.true113
  store i8 1, i8* %match, align 1
  br label %if.end163

if.else118:                                       ; preds = %land.lhs.true113, %if.then110
  %57 = load i8, i8* %flags, align 1
  %conv119 = sext i8 %57 to i32
  %and120 = and i32 %conv119, 32
  %tobool121 = icmp ne i32 %and120, 0
  br i1 %tobool121, label %if.then138, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.else118
  %58 = load i8, i8* %utf8_target.addr, align 1
  %tobool122 = trunc i8 %58 to i1
  br i1 %tobool122, label %land.lhs.true124, label %lor.lhs.false128

land.lhs.true124:                                 ; preds = %lor.lhs.false
  %59 = load i8, i8* %flags, align 1
  %conv125 = sext i8 %59 to i32
  %and126 = and i32 %conv125, 2
  %tobool127 = icmp ne i32 %and126, 0
  br i1 %tobool127, label %if.then138, label %lor.lhs.false128

lor.lhs.false128:                                 ; preds = %land.lhs.true124, %lor.lhs.false
  %60 = load i8, i8* %flags, align 1
  %conv129 = sext i8 %60 to i32
  %and130 = and i32 %conv129, 4
  %tobool131 = icmp ne i32 %and130, 0
  br i1 %tobool131, label %land.lhs.true132, label %if.end162

land.lhs.true132:                                 ; preds = %lor.lhs.false128
  %61 = load i8, i8* @PL_in_utf8_CTYPE_locale, align 1
  %tobool133 = trunc i8 %61 to i1
  br i1 %tobool133, label %land.lhs.true135, label %if.end162

land.lhs.true135:                                 ; preds = %land.lhs.true132
  %62 = load %struct.regnode*, %struct.regnode** %n.addr, align 8
  %63 = bitcast %struct.regnode* %62 to %struct.regnode_1*
  %arg1 = getelementptr inbounds %struct.regnode_1, %struct.regnode_1* %63, i32 0, i32 3
  %64 = load i32, i32* %arg1, align 4
  %cmp136 = icmp ne i32 %64, -1
  br i1 %cmp136, label %if.then138, label %if.end162

if.then138:                                       ; preds = %land.lhs.true135, %land.lhs.true124, %if.else118
  store %struct.sv* null, %struct.sv** %only_utf8_locale, align 8
  %65 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %66 = load %struct.regnode*, %struct.regnode** %n.addr, align 8
  %call139 = call %struct.sv* @Perl__get_regclass_nonbitmap_data(%struct.regexp* %65, %struct.regnode* %66, i1 zeroext true, %struct.sv** null, %struct.sv** %only_utf8_locale, %struct.sv* null)
  store %struct.sv* %call139, %struct.sv** %sw, align 8
  %67 = load %struct.sv*, %struct.sv** %sw, align 8
  %tobool140 = icmp ne %struct.sv* %67, null
  br i1 %tobool140, label %if.then141, label %if.end151

if.then141:                                       ; preds = %if.then138
  %68 = load i8, i8* %utf8_target.addr, align 1
  %tobool142 = trunc i8 %68 to i1
  br i1 %tobool142, label %if.then143, label %if.else144

if.then143:                                       ; preds = %if.then141
  %69 = load i8*, i8** %p.addr, align 8
  store i8* %69, i8** %utf8_p, align 8
  br label %if.end146

if.else144:                                       ; preds = %if.then141
  %arraydecay = getelementptr inbounds [2 x i8], [2 x i8]* %utf8_buffer, i64 0, i64 0
  store i8* %arraydecay, i8** %utf8_p, align 8
  %70 = load i8*, i8** %p.addr, align 8
  %71 = load i8, i8* %70, align 1
  call void @S_append_utf8_from_native_byte(i8 zeroext %71, i8** %utf8_p)
  %arraydecay145 = getelementptr inbounds [2 x i8], [2 x i8]* %utf8_buffer, i64 0, i64 0
  store i8* %arraydecay145, i8** %utf8_p, align 8
  br label %if.end146

if.end146:                                        ; preds = %if.else144, %if.then143
  %72 = load %struct.sv*, %struct.sv** %sw, align 8
  %73 = load i8*, i8** %utf8_p, align 8
  %call147 = call i64 @Perl_swash_fetch(%struct.sv* %72, i8* %73, i1 zeroext true)
  %tobool148 = icmp ne i64 %call147, 0
  br i1 %tobool148, label %if.then149, label %if.end150

if.then149:                                       ; preds = %if.end146
  store i8 1, i8* %match, align 1
  br label %if.end150

if.end150:                                        ; preds = %if.then149, %if.end146
  br label %if.end151

if.end151:                                        ; preds = %if.end150, %if.then138
  %74 = load i8, i8* %match, align 1
  %tobool152 = trunc i8 %74 to i1
  br i1 %tobool152, label %if.end161, label %land.lhs.true153

land.lhs.true153:                                 ; preds = %if.end151
  %75 = load %struct.sv*, %struct.sv** %only_utf8_locale, align 8
  %tobool154 = icmp ne %struct.sv* %75, null
  br i1 %tobool154, label %land.lhs.true155, label %if.end161

land.lhs.true155:                                 ; preds = %land.lhs.true153
  %76 = load i8, i8* @PL_in_utf8_CTYPE_locale, align 1
  %tobool156 = trunc i8 %76 to i1
  br i1 %tobool156, label %if.then158, label %if.end161

if.then158:                                       ; preds = %land.lhs.true155
  %77 = load %struct.sv*, %struct.sv** %only_utf8_locale, align 8
  %78 = load i64, i64* %c, align 8
  %call159 = call zeroext i1 @S__invlist_contains_cp(%struct.sv* %77, i64 %78)
  %frombool160 = zext i1 %call159 to i8
  store i8 %frombool160, i8* %match, align 1
  br label %if.end161

if.end161:                                        ; preds = %if.then158, %land.lhs.true155, %land.lhs.true153, %if.end151
  br label %if.end162

if.end162:                                        ; preds = %if.end161, %land.lhs.true135, %land.lhs.true132, %lor.lhs.false128
  br label %if.end163

if.end163:                                        ; preds = %if.end162, %if.then117
  %79 = load i64, i64* %c, align 8
  %cmp164 = icmp ugt i64 %79, 1114111
  br i1 %cmp164, label %land.lhs.true166, label %if.end174

land.lhs.true166:                                 ; preds = %if.end163
  %80 = load i8, i8* %flags, align 1
  %conv167 = sext i8 %80 to i32
  %and168 = and i32 %conv167, 16
  %tobool169 = icmp ne i32 %and168, 0
  br i1 %tobool169, label %land.lhs.true170, label %if.end174

land.lhs.true170:                                 ; preds = %land.lhs.true166
  %call171 = call zeroext i1 @Perl_ckwarn_d(i32 48)
  br i1 %call171, label %if.then173, label %if.end174

if.then173:                                       ; preds = %land.lhs.true170
  %81 = load i64, i64* %c, align 8
  call void (i32, i8*, ...) @Perl_warner(i32 48, i8* getelementptr inbounds ([85 x i8], [85 x i8]* @.str.8, i64 0, i64 0), i64 %81)
  br label %if.end174

if.end174:                                        ; preds = %if.then173, %land.lhs.true170, %land.lhs.true166, %if.end163
  br label %if.end175

if.end175:                                        ; preds = %if.end174, %if.end108
  %82 = load i8, i8* %flags, align 1
  %conv176 = sext i8 %82 to i32
  %and177 = and i32 %conv176, 1
  %83 = load i8, i8* %match, align 1
  %tobool178 = trunc i8 %83 to i1
  %conv179 = zext i1 %tobool178 to i32
  %xor180 = xor i32 %and177, %conv179
  %tobool181 = icmp ne i32 %xor180, 0
  ret i1 %tobool181
}

declare dso_local i32 @Perl_foldEQ_latin1(i8*, i8*, i32) #2

declare dso_local i32 @Perl_foldEQ(i8*, i8*, i32) #2

declare dso_local i32 @Perl_foldEQ_locale(i8*, i8*, i32) #2

declare dso_local i64 @Perl_utf8_length(i8*, i8*) #2

declare dso_local i32 @Perl_foldEQ_utf8_flags(i8*, i8**, i64, i1 zeroext, i8*, i8**, i64, i1 zeroext, i32) #2

declare dso_local void @Perl_ck_warner(i32, i8*, ...) #2

declare dso_local i64 @Perl_utf8n_to_uvchr(i8*, i64, i64*, i32) #2

declare dso_local zeroext i1 @Perl_ckwarn(i32) #2

; Function Attrs: nounwind readnone
declare dso_local i16** @__ctype_b_loc() #3

declare dso_local zeroext i1 @Perl__is_uni_FOO(i8 zeroext, i64) #2

declare dso_local %struct.sv* @Perl__core_swash_init(i8*, i8*, %struct.sv*, i32, i32, %struct.sv*, i8*) #2

declare dso_local zeroext i1 @Perl__is_utf8_FOO(i8 zeroext, i8*) #2

declare dso_local i64 @Perl__invlist_search(%struct.sv*, i64) #2

declare dso_local zeroext i1 @Perl_ckwarn_d(i32) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i1 @S_isGCB(i32 %before, i32 %after) #0 {
entry:
  %retval = alloca i1, align 1
  %before.addr = alloca i32, align 4
  %after.addr = alloca i32, align 4
  store i32 %before, i32* %before.addr, align 4
  store i32 %after, i32* %after.addr, align 4
  %0 = load i32, i32* %before.addr, align 4
  %mul = mul i32 14, %0
  %1 = load i32, i32* %after.addr, align 4
  %add = add i32 %mul, %1
  switch i32 %add, label %sw.default [
    i32 20, label %sw.bb
    i32 75, label %sw.bb1
    i32 83, label %sw.bb1
    i32 77, label %sw.bb1
    i32 78, label %sw.bb1
    i32 111, label %sw.bb2
    i32 110, label %sw.bb2
    i32 195, label %sw.bb2
    i32 194, label %sw.bb2
    i32 124, label %sw.bb3
    i32 180, label %sw.bb3
    i32 150, label %sw.bb4
    i32 4, label %sw.bb5
    i32 60, label %sw.bb5
    i32 74, label %sw.bb5
    i32 102, label %sw.bb5
    i32 116, label %sw.bb5
    i32 130, label %sw.bb5
    i32 144, label %sw.bb5
    i32 158, label %sw.bb5
    i32 172, label %sw.bb5
    i32 186, label %sw.bb5
    i32 11, label %sw.bb6
    i32 67, label %sw.bb6
    i32 81, label %sw.bb6
    i32 109, label %sw.bb6
    i32 123, label %sw.bb6
    i32 137, label %sw.bb6
    i32 151, label %sw.bb6
    i32 165, label %sw.bb6
    i32 179, label %sw.bb6
    i32 193, label %sw.bb6
    i32 126, label %sw.bb7
    i32 131, label %sw.bb7
    i32 133, label %sw.bb7
    i32 134, label %sw.bb7
    i32 135, label %sw.bb7
    i32 136, label %sw.bb7
    i32 138, label %sw.bb7
    i32 139, label %sw.bb7
  ]

sw.default:                                       ; preds = %entry
  store i1 true, i1* %retval, align 1
  br label %return

sw.bb:                                            ; preds = %entry
  store i1 false, i1* %retval, align 1
  br label %return

sw.bb1:                                           ; preds = %entry, %entry, %entry, %entry
  store i1 false, i1* %retval, align 1
  br label %return

sw.bb2:                                           ; preds = %entry, %entry, %entry, %entry
  store i1 false, i1* %retval, align 1
  br label %return

sw.bb3:                                           ; preds = %entry, %entry
  store i1 false, i1* %retval, align 1
  br label %return

sw.bb4:                                           ; preds = %entry
  store i1 false, i1* %retval, align 1
  br label %return

sw.bb5:                                           ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 false, i1* %retval, align 1
  br label %return

sw.bb6:                                           ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 false, i1* %retval, align 1
  br label %return

sw.bb7:                                           ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 false, i1* %retval, align 1
  br label %return

return:                                           ; preds = %sw.bb7, %sw.bb6, %sw.bb5, %sw.bb4, %sw.bb3, %sw.bb2, %sw.bb1, %sw.bb, %sw.default
  %2 = load i1, i1* %retval, align 1
  ret i1 %2
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i1 @S_isSB(i32 %before, i32 %after, i8* %strbeg, i8* %curpos, i8* %strend, i1 zeroext %utf8_target) #0 {
entry:
  %retval = alloca i1, align 1
  %before.addr = alloca i32, align 4
  %after.addr = alloca i32, align 4
  %strbeg.addr = alloca i8*, align 8
  %curpos.addr = alloca i8*, align 8
  %strend.addr = alloca i8*, align 8
  %utf8_target.addr = alloca i8, align 1
  %lpos = alloca i8*, align 8
  %temp_pos = alloca i8*, align 8
  %backup = alloca i32, align 4
  %rpos = alloca i8*, align 8
  %later = alloca i32, align 4
  store i32 %before, i32* %before.addr, align 4
  store i32 %after, i32* %after.addr, align 4
  store i8* %strbeg, i8** %strbeg.addr, align 8
  store i8* %curpos, i8** %curpos.addr, align 8
  store i8* %strend, i8** %strend.addr, align 8
  %frombool = zext i1 %utf8_target to i8
  store i8 %frombool, i8* %utf8_target.addr, align 1
  %0 = load i8*, i8** %curpos.addr, align 8
  store i8* %0, i8** %lpos, align 8
  %1 = load i32, i32* %before.addr, align 4
  %cmp = icmp eq i32 %1, 4
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %2 = load i32, i32* %after.addr, align 4
  %cmp1 = icmp eq i32 %2, 4
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i1 true, i1* %retval, align 1
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  %3 = load i32, i32* %before.addr, align 4
  %cmp2 = icmp eq i32 %3, 2
  br i1 %cmp2, label %land.lhs.true, label %if.end5

land.lhs.true:                                    ; preds = %if.end
  %4 = load i32, i32* %after.addr, align 4
  %cmp3 = icmp eq i32 %4, 7
  br i1 %cmp3, label %if.then4, label %if.end5

if.then4:                                         ; preds = %land.lhs.true
  store i1 false, i1* %retval, align 1
  br label %return

if.end5:                                          ; preds = %land.lhs.true, %if.end
  %5 = load i32, i32* %before.addr, align 4
  %cmp6 = icmp eq i32 %5, 13
  br i1 %cmp6, label %if.then11, label %lor.lhs.false7

lor.lhs.false7:                                   ; preds = %if.end5
  %6 = load i32, i32* %before.addr, align 4
  %cmp8 = icmp eq i32 %6, 2
  br i1 %cmp8, label %if.then11, label %lor.lhs.false9

lor.lhs.false9:                                   ; preds = %lor.lhs.false7
  %7 = load i32, i32* %before.addr, align 4
  %cmp10 = icmp eq i32 %7, 7
  br i1 %cmp10, label %if.then11, label %if.end12

if.then11:                                        ; preds = %lor.lhs.false9, %lor.lhs.false7, %if.end5
  store i1 true, i1* %retval, align 1
  br label %return

if.end12:                                         ; preds = %lor.lhs.false9
  %8 = load i32, i32* %after.addr, align 4
  %cmp13 = icmp eq i32 %8, 5
  br i1 %cmp13, label %if.then16, label %lor.lhs.false14

lor.lhs.false14:                                  ; preds = %if.end12
  %9 = load i32, i32* %after.addr, align 4
  %cmp15 = icmp eq i32 %9, 6
  br i1 %cmp15, label %if.then16, label %if.end17

if.then16:                                        ; preds = %lor.lhs.false14, %if.end12
  store i1 false, i1* %retval, align 1
  br label %return

if.end17:                                         ; preds = %lor.lhs.false14
  %10 = load i32, i32* %before.addr, align 4
  %cmp18 = icmp eq i32 %10, 5
  br i1 %cmp18, label %if.then21, label %lor.lhs.false19

lor.lhs.false19:                                  ; preds = %if.end17
  %11 = load i32, i32* %before.addr, align 4
  %cmp20 = icmp eq i32 %11, 6
  br i1 %cmp20, label %if.then21, label %if.end22

if.then21:                                        ; preds = %lor.lhs.false19, %if.end17
  %12 = load i8*, i8** %strbeg.addr, align 8
  %13 = load i8, i8* %utf8_target.addr, align 1
  %tobool = trunc i8 %13 to i1
  %call = call i32 @S_backup_one_SB(i8* %12, i8** %lpos, i1 zeroext %tobool)
  store i32 %call, i32* %before.addr, align 4
  br label %if.end22

if.end22:                                         ; preds = %if.then21, %lor.lhs.false19
  %14 = load i32, i32* %before.addr, align 4
  %cmp23 = icmp eq i32 %14, 1
  br i1 %cmp23, label %land.lhs.true24, label %if.end27

land.lhs.true24:                                  ; preds = %if.end22
  %15 = load i32, i32* %after.addr, align 4
  %cmp25 = icmp eq i32 %15, 9
  br i1 %cmp25, label %if.then26, label %if.end27

if.then26:                                        ; preds = %land.lhs.true24
  store i1 false, i1* %retval, align 1
  br label %return

if.end27:                                         ; preds = %land.lhs.true24, %if.end22
  %16 = load i32, i32* %before.addr, align 4
  %cmp28 = icmp eq i32 %16, 1
  br i1 %cmp28, label %land.lhs.true29, label %if.end37

land.lhs.true29:                                  ; preds = %if.end27
  %17 = load i32, i32* %after.addr, align 4
  %cmp30 = icmp eq i32 %17, 15
  br i1 %cmp30, label %if.then31, label %if.end37

if.then31:                                        ; preds = %land.lhs.true29
  %18 = load i8*, i8** %lpos, align 8
  store i8* %18, i8** %temp_pos, align 8
  %19 = load i8*, i8** %strbeg.addr, align 8
  %20 = load i8, i8* %utf8_target.addr, align 1
  %tobool32 = trunc i8 %20 to i1
  %call33 = call i32 @S_backup_one_SB(i8* %19, i8** %temp_pos, i1 zeroext %tobool32)
  %cmp34 = icmp eq i32 15, %call33
  br i1 %cmp34, label %if.then35, label %if.end36

if.then35:                                        ; preds = %if.then31
  store i1 false, i1* %retval, align 1
  br label %return

if.end36:                                         ; preds = %if.then31
  br label %if.end37

if.end37:                                         ; preds = %if.end36, %land.lhs.true29, %if.end27
  %21 = load i32, i32* %before.addr, align 4
  store i32 %21, i32* %backup, align 4
  %22 = load i8*, i8** %lpos, align 8
  store i8* %22, i8** %temp_pos, align 8
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.end37
  %23 = load i32, i32* %backup, align 4
  %cmp38 = icmp eq i32 %23, 14
  br i1 %cmp38, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %24 = load i8*, i8** %strbeg.addr, align 8
  %25 = load i8, i8* %utf8_target.addr, align 1
  %tobool39 = trunc i8 %25 to i1
  %call40 = call i32 @S_backup_one_SB(i8* %24, i8** %temp_pos, i1 zeroext %tobool39)
  store i32 %call40, i32* %backup, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %while.cond41

while.cond41:                                     ; preds = %while.body43, %while.end
  %26 = load i32, i32* %backup, align 4
  %cmp42 = icmp eq i32 %26, 3
  br i1 %cmp42, label %while.body43, label %while.end46

while.body43:                                     ; preds = %while.cond41
  %27 = load i8*, i8** %strbeg.addr, align 8
  %28 = load i8, i8* %utf8_target.addr, align 1
  %tobool44 = trunc i8 %28 to i1
  %call45 = call i32 @S_backup_one_SB(i8* %27, i8** %temp_pos, i1 zeroext %tobool44)
  store i32 %call45, i32* %backup, align 4
  br label %while.cond41

while.end46:                                      ; preds = %while.cond41
  %29 = load i32, i32* %backup, align 4
  %cmp47 = icmp eq i32 %29, 12
  br i1 %cmp47, label %land.lhs.true50, label %lor.lhs.false48

lor.lhs.false48:                                  ; preds = %while.end46
  %30 = load i32, i32* %backup, align 4
  %cmp49 = icmp eq i32 %30, 1
  br i1 %cmp49, label %land.lhs.true50, label %if.end65

land.lhs.true50:                                  ; preds = %lor.lhs.false48, %while.end46
  %31 = load i32, i32* %after.addr, align 4
  %cmp51 = icmp eq i32 %31, 11
  br i1 %cmp51, label %if.then64, label %lor.lhs.false52

lor.lhs.false52:                                  ; preds = %land.lhs.true50
  %32 = load i32, i32* %after.addr, align 4
  %cmp53 = icmp eq i32 %32, 12
  br i1 %cmp53, label %if.then64, label %lor.lhs.false54

lor.lhs.false54:                                  ; preds = %lor.lhs.false52
  %33 = load i32, i32* %after.addr, align 4
  %cmp55 = icmp eq i32 %33, 1
  br i1 %cmp55, label %if.then64, label %lor.lhs.false56

lor.lhs.false56:                                  ; preds = %lor.lhs.false54
  %34 = load i32, i32* %after.addr, align 4
  %cmp57 = icmp eq i32 %34, 14
  br i1 %cmp57, label %if.then64, label %lor.lhs.false58

lor.lhs.false58:                                  ; preds = %lor.lhs.false56
  %35 = load i32, i32* %after.addr, align 4
  %cmp59 = icmp eq i32 %35, 13
  br i1 %cmp59, label %if.then64, label %lor.lhs.false60

lor.lhs.false60:                                  ; preds = %lor.lhs.false58
  %36 = load i32, i32* %after.addr, align 4
  %cmp61 = icmp eq i32 %36, 2
  br i1 %cmp61, label %if.then64, label %lor.lhs.false62

lor.lhs.false62:                                  ; preds = %lor.lhs.false60
  %37 = load i32, i32* %after.addr, align 4
  %cmp63 = icmp eq i32 %37, 7
  br i1 %cmp63, label %if.then64, label %if.end65

if.then64:                                        ; preds = %lor.lhs.false62, %lor.lhs.false60, %lor.lhs.false58, %lor.lhs.false56, %lor.lhs.false54, %lor.lhs.false52, %land.lhs.true50
  store i1 false, i1* %retval, align 1
  br label %return

if.end65:                                         ; preds = %lor.lhs.false62, %lor.lhs.false48
  %38 = load i32, i32* %backup, align 4
  %cmp66 = icmp eq i32 %38, 1
  br i1 %cmp66, label %if.then67, label %if.end92

if.then67:                                        ; preds = %if.end65
  %39 = load i8*, i8** %curpos.addr, align 8
  store i8* %39, i8** %rpos, align 8
  %40 = load i32, i32* %after.addr, align 4
  store i32 %40, i32* %later, align 4
  br label %while.cond68

while.cond68:                                     ; preds = %while.body85, %if.then67
  %41 = load i32, i32* %later, align 4
  %cmp69 = icmp ne i32 %41, 10
  br i1 %cmp69, label %land.lhs.true70, label %land.end

land.lhs.true70:                                  ; preds = %while.cond68
  %42 = load i32, i32* %later, align 4
  %cmp71 = icmp ne i32 %42, 15
  br i1 %cmp71, label %land.lhs.true72, label %land.end

land.lhs.true72:                                  ; preds = %land.lhs.true70
  %43 = load i32, i32* %later, align 4
  %cmp73 = icmp ne i32 %43, 8
  br i1 %cmp73, label %land.lhs.true74, label %land.end

land.lhs.true74:                                  ; preds = %land.lhs.true72
  %44 = load i32, i32* %later, align 4
  %cmp75 = icmp ne i32 %44, 13
  br i1 %cmp75, label %land.lhs.true76, label %land.end

land.lhs.true76:                                  ; preds = %land.lhs.true74
  %45 = load i32, i32* %later, align 4
  %cmp77 = icmp ne i32 %45, 2
  br i1 %cmp77, label %land.lhs.true78, label %land.end

land.lhs.true78:                                  ; preds = %land.lhs.true76
  %46 = load i32, i32* %later, align 4
  %cmp79 = icmp ne i32 %46, 7
  br i1 %cmp79, label %land.lhs.true80, label %land.end

land.lhs.true80:                                  ; preds = %land.lhs.true78
  %47 = load i32, i32* %later, align 4
  %cmp81 = icmp ne i32 %47, 12
  br i1 %cmp81, label %land.lhs.true82, label %land.end

land.lhs.true82:                                  ; preds = %land.lhs.true80
  %48 = load i32, i32* %later, align 4
  %cmp83 = icmp ne i32 %48, 1
  br i1 %cmp83, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %land.lhs.true82
  %49 = load i32, i32* %later, align 4
  %cmp84 = icmp ne i32 %49, 4
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true82, %land.lhs.true80, %land.lhs.true78, %land.lhs.true76, %land.lhs.true74, %land.lhs.true72, %land.lhs.true70, %while.cond68
  %50 = phi i1 [ false, %land.lhs.true82 ], [ false, %land.lhs.true80 ], [ false, %land.lhs.true78 ], [ false, %land.lhs.true76 ], [ false, %land.lhs.true74 ], [ false, %land.lhs.true72 ], [ false, %land.lhs.true70 ], [ false, %while.cond68 ], [ %cmp84, %land.rhs ]
  br i1 %50, label %while.body85, label %while.end88

while.body85:                                     ; preds = %land.end
  %51 = load i8*, i8** %strend.addr, align 8
  %52 = load i8, i8* %utf8_target.addr, align 1
  %tobool86 = trunc i8 %52 to i1
  %call87 = call i32 @S_advance_one_SB(i8** %rpos, i8* %51, i1 zeroext %tobool86)
  store i32 %call87, i32* %later, align 4
  br label %while.cond68

while.end88:                                      ; preds = %land.end
  %53 = load i32, i32* %later, align 4
  %cmp89 = icmp eq i32 %53, 8
  br i1 %cmp89, label %if.then90, label %if.end91

if.then90:                                        ; preds = %while.end88
  store i1 false, i1* %retval, align 1
  br label %return

if.end91:                                         ; preds = %while.end88
  br label %if.end92

if.end92:                                         ; preds = %if.end91, %if.end65
  %54 = load i32, i32* %before.addr, align 4
  store i32 %54, i32* %backup, align 4
  %55 = load i8*, i8** %lpos, align 8
  store i8* %55, i8** %temp_pos, align 8
  br label %while.cond93

while.cond93:                                     ; preds = %while.body95, %if.end92
  %56 = load i32, i32* %backup, align 4
  %cmp94 = icmp eq i32 %56, 3
  br i1 %cmp94, label %while.body95, label %while.end98

while.body95:                                     ; preds = %while.cond93
  %57 = load i8*, i8** %strbeg.addr, align 8
  %58 = load i8, i8* %utf8_target.addr, align 1
  %tobool96 = trunc i8 %58 to i1
  %call97 = call i32 @S_backup_one_SB(i8* %57, i8** %temp_pos, i1 zeroext %tobool96)
  store i32 %call97, i32* %backup, align 4
  br label %while.cond93

while.end98:                                      ; preds = %while.cond93
  %59 = load i32, i32* %backup, align 4
  %cmp99 = icmp eq i32 %59, 12
  br i1 %cmp99, label %land.lhs.true102, label %lor.lhs.false100

lor.lhs.false100:                                 ; preds = %while.end98
  %60 = load i32, i32* %backup, align 4
  %cmp101 = icmp eq i32 %60, 1
  br i1 %cmp101, label %land.lhs.true102, label %if.end113

land.lhs.true102:                                 ; preds = %lor.lhs.false100, %while.end98
  %61 = load i32, i32* %after.addr, align 4
  %cmp103 = icmp eq i32 %61, 3
  br i1 %cmp103, label %if.then112, label %lor.lhs.false104

lor.lhs.false104:                                 ; preds = %land.lhs.true102
  %62 = load i32, i32* %after.addr, align 4
  %cmp105 = icmp eq i32 %62, 14
  br i1 %cmp105, label %if.then112, label %lor.lhs.false106

lor.lhs.false106:                                 ; preds = %lor.lhs.false104
  %63 = load i32, i32* %after.addr, align 4
  %cmp107 = icmp eq i32 %63, 13
  br i1 %cmp107, label %if.then112, label %lor.lhs.false108

lor.lhs.false108:                                 ; preds = %lor.lhs.false106
  %64 = load i32, i32* %after.addr, align 4
  %cmp109 = icmp eq i32 %64, 2
  br i1 %cmp109, label %if.then112, label %lor.lhs.false110

lor.lhs.false110:                                 ; preds = %lor.lhs.false108
  %65 = load i32, i32* %after.addr, align 4
  %cmp111 = icmp eq i32 %65, 7
  br i1 %cmp111, label %if.then112, label %if.end113

if.then112:                                       ; preds = %lor.lhs.false110, %lor.lhs.false108, %lor.lhs.false106, %lor.lhs.false104, %land.lhs.true102
  store i1 false, i1* %retval, align 1
  br label %return

if.end113:                                        ; preds = %lor.lhs.false110, %lor.lhs.false100
  %66 = load i8*, i8** %lpos, align 8
  store i8* %66, i8** %temp_pos, align 8
  %67 = load i8*, i8** %strbeg.addr, align 8
  %68 = load i8, i8* %utf8_target.addr, align 1
  %tobool114 = trunc i8 %68 to i1
  %call115 = call i32 @S_backup_one_SB(i8* %67, i8** %temp_pos, i1 zeroext %tobool114)
  store i32 %call115, i32* %backup, align 4
  %69 = load i32, i32* %backup, align 4
  %cmp116 = icmp eq i32 %69, 13
  br i1 %cmp116, label %if.then121, label %lor.lhs.false117

lor.lhs.false117:                                 ; preds = %if.end113
  %70 = load i32, i32* %backup, align 4
  %cmp118 = icmp eq i32 %70, 2
  br i1 %cmp118, label %if.then121, label %lor.lhs.false119

lor.lhs.false119:                                 ; preds = %lor.lhs.false117
  %71 = load i32, i32* %backup, align 4
  %cmp120 = icmp eq i32 %71, 7
  br i1 %cmp120, label %if.then121, label %if.else

if.then121:                                       ; preds = %lor.lhs.false119, %lor.lhs.false117, %if.end113
  %72 = load i8*, i8** %temp_pos, align 8
  store i8* %72, i8** %lpos, align 8
  br label %if.end122

if.else:                                          ; preds = %lor.lhs.false119
  %73 = load i32, i32* %before.addr, align 4
  store i32 %73, i32* %backup, align 4
  br label %if.end122

if.end122:                                        ; preds = %if.else, %if.then121
  br label %while.cond123

while.cond123:                                    ; preds = %while.body125, %if.end122
  %74 = load i32, i32* %backup, align 4
  %cmp124 = icmp eq i32 %74, 14
  br i1 %cmp124, label %while.body125, label %while.end128

while.body125:                                    ; preds = %while.cond123
  %75 = load i8*, i8** %strbeg.addr, align 8
  %76 = load i8, i8* %utf8_target.addr, align 1
  %tobool126 = trunc i8 %76 to i1
  %call127 = call i32 @S_backup_one_SB(i8* %75, i8** %lpos, i1 zeroext %tobool126)
  store i32 %call127, i32* %backup, align 4
  br label %while.cond123

while.end128:                                     ; preds = %while.cond123
  br label %while.cond129

while.cond129:                                    ; preds = %while.body131, %while.end128
  %77 = load i32, i32* %backup, align 4
  %cmp130 = icmp eq i32 %77, 3
  br i1 %cmp130, label %while.body131, label %while.end134

while.body131:                                    ; preds = %while.cond129
  %78 = load i8*, i8** %strbeg.addr, align 8
  %79 = load i8, i8* %utf8_target.addr, align 1
  %tobool132 = trunc i8 %79 to i1
  %call133 = call i32 @S_backup_one_SB(i8* %78, i8** %lpos, i1 zeroext %tobool132)
  store i32 %call133, i32* %backup, align 4
  br label %while.cond129

while.end134:                                     ; preds = %while.cond129
  %80 = load i32, i32* %backup, align 4
  %cmp135 = icmp eq i32 %80, 12
  br i1 %cmp135, label %if.then138, label %lor.lhs.false136

lor.lhs.false136:                                 ; preds = %while.end134
  %81 = load i32, i32* %backup, align 4
  %cmp137 = icmp eq i32 %81, 1
  br i1 %cmp137, label %if.then138, label %if.end139

if.then138:                                       ; preds = %lor.lhs.false136, %while.end134
  store i1 true, i1* %retval, align 1
  br label %return

if.end139:                                        ; preds = %lor.lhs.false136
  store i1 false, i1* %retval, align 1
  br label %return

return:                                           ; preds = %if.end139, %if.then138, %if.then112, %if.then90, %if.then64, %if.then35, %if.then26, %if.then16, %if.then11, %if.then4, %if.then
  %82 = load i1, i1* %retval, align 1
  ret i1 %82
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i1 @S_isWB(i32 %previous, i32 %before, i32 %after, i8* %strbeg, i8* %curpos, i8* %strend, i1 zeroext %utf8_target) #0 {
entry:
  %retval = alloca i1, align 1
  %previous.addr = alloca i32, align 4
  %before.addr = alloca i32, align 4
  %after.addr = alloca i32, align 4
  %strbeg.addr = alloca i8*, align 8
  %curpos.addr = alloca i8*, align 8
  %strend.addr = alloca i8*, align 8
  %utf8_target.addr = alloca i8, align 1
  %before_pos = alloca i8*, align 8
  %after_pos = alloca i8*, align 8
  store i32 %previous, i32* %previous.addr, align 4
  store i32 %before, i32* %before.addr, align 4
  store i32 %after, i32* %after.addr, align 4
  store i8* %strbeg, i8** %strbeg.addr, align 8
  store i8* %curpos, i8** %curpos.addr, align 8
  store i8* %strend, i8** %strend.addr, align 8
  %frombool = zext i1 %utf8_target to i8
  store i8 %frombool, i8* %utf8_target.addr, align 1
  %0 = load i8*, i8** %curpos.addr, align 8
  store i8* %0, i8** %before_pos, align 8
  %1 = load i8*, i8** %curpos.addr, align 8
  store i8* %1, i8** %after_pos, align 8
  %2 = load i32, i32* %before.addr, align 4
  %cmp = icmp eq i32 %2, 4
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %3 = load i32, i32* %after.addr, align 4
  %cmp1 = icmp eq i32 %3, 4
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i1 true, i1* %retval, align 1
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  %4 = load i32, i32* %before.addr, align 4
  %cmp2 = icmp eq i32 %4, 2
  br i1 %cmp2, label %land.lhs.true, label %if.end5

land.lhs.true:                                    ; preds = %if.end
  %5 = load i32, i32* %after.addr, align 4
  %cmp3 = icmp eq i32 %5, 10
  br i1 %cmp3, label %if.then4, label %if.end5

if.then4:                                         ; preds = %land.lhs.true
  store i1 false, i1* %retval, align 1
  br label %return

if.end5:                                          ; preds = %land.lhs.true, %if.end
  %6 = load i32, i32* %before.addr, align 4
  %cmp6 = icmp eq i32 %6, 2
  br i1 %cmp6, label %if.then17, label %lor.lhs.false7

lor.lhs.false7:                                   ; preds = %if.end5
  %7 = load i32, i32* %before.addr, align 4
  %cmp8 = icmp eq i32 %7, 10
  br i1 %cmp8, label %if.then17, label %lor.lhs.false9

lor.lhs.false9:                                   ; preds = %lor.lhs.false7
  %8 = load i32, i32* %before.addr, align 4
  %cmp10 = icmp eq i32 %8, 14
  br i1 %cmp10, label %if.then17, label %lor.lhs.false11

lor.lhs.false11:                                  ; preds = %lor.lhs.false9
  %9 = load i32, i32* %after.addr, align 4
  %cmp12 = icmp eq i32 %9, 2
  br i1 %cmp12, label %if.then17, label %lor.lhs.false13

lor.lhs.false13:                                  ; preds = %lor.lhs.false11
  %10 = load i32, i32* %after.addr, align 4
  %cmp14 = icmp eq i32 %10, 10
  br i1 %cmp14, label %if.then17, label %lor.lhs.false15

lor.lhs.false15:                                  ; preds = %lor.lhs.false13
  %11 = load i32, i32* %after.addr, align 4
  %cmp16 = icmp eq i32 %11, 14
  br i1 %cmp16, label %if.then17, label %if.end18

if.then17:                                        ; preds = %lor.lhs.false15, %lor.lhs.false13, %lor.lhs.false11, %lor.lhs.false9, %lor.lhs.false7, %if.end5
  store i1 true, i1* %retval, align 1
  br label %return

if.end18:                                         ; preds = %lor.lhs.false15
  %12 = load i32, i32* %after.addr, align 4
  %cmp19 = icmp eq i32 %12, 5
  br i1 %cmp19, label %if.then22, label %lor.lhs.false20

lor.lhs.false20:                                  ; preds = %if.end18
  %13 = load i32, i32* %after.addr, align 4
  %cmp21 = icmp eq i32 %13, 7
  br i1 %cmp21, label %if.then22, label %if.end23

if.then22:                                        ; preds = %lor.lhs.false20, %if.end18
  store i1 false, i1* %retval, align 1
  br label %return

if.end23:                                         ; preds = %lor.lhs.false20
  %14 = load i32, i32* %before.addr, align 4
  %cmp24 = icmp eq i32 %14, 5
  br i1 %cmp24, label %if.then27, label %lor.lhs.false25

lor.lhs.false25:                                  ; preds = %if.end23
  %15 = load i32, i32* %before.addr, align 4
  %cmp26 = icmp eq i32 %15, 7
  br i1 %cmp26, label %if.then27, label %if.end28

if.then27:                                        ; preds = %lor.lhs.false25, %if.end23
  %16 = load i8*, i8** %strbeg.addr, align 8
  %17 = load i8, i8* %utf8_target.addr, align 1
  %tobool = trunc i8 %17 to i1
  %call = call i32 @S_backup_one_WB(i32* %previous.addr, i8* %16, i8** %before_pos, i1 zeroext %tobool)
  store i32 %call, i32* %before.addr, align 4
  br label %if.end28

if.end28:                                         ; preds = %if.then27, %lor.lhs.false25
  %18 = load i32, i32* %before.addr, align 4
  %mul = mul i32 19, %18
  %19 = load i32, i32* %after.addr, align 4
  %add = add i32 %mul, %19
  switch i32 %add, label %sw.default [
    i32 20, label %sw.bb
    i32 27, label %sw.bb
    i32 153, label %sw.bb
    i32 160, label %sw.bb
    i32 30, label %sw.bb29
    i32 32, label %sw.bb29
    i32 36, label %sw.bb29
    i32 163, label %sw.bb29
    i32 165, label %sw.bb29
    i32 210, label %sw.bb34
    i32 217, label %sw.bb34
    i32 248, label %sw.bb34
    i32 255, label %sw.bb34
    i32 324, label %sw.bb34
    i32 331, label %sw.bb34
    i32 169, label %sw.bb41
    i32 155, label %sw.bb42
    i32 65, label %sw.bb46
    i32 300, label %sw.bb50
    i32 34, label %sw.bb51
    i32 167, label %sw.bb51
    i32 286, label %sw.bb52
    i32 293, label %sw.bb52
    i32 243, label %sw.bb53
    i32 262, label %sw.bb53
    i32 338, label %sw.bb53
    i32 297, label %sw.bb57
    i32 298, label %sw.bb57
    i32 302, label %sw.bb57
    i32 180, label %sw.bb61
    i32 25, label %sw.bb62
    i32 158, label %sw.bb62
    i32 291, label %sw.bb62
    i32 177, label %sw.bb62
    i32 120, label %sw.bb62
    i32 115, label %sw.bb63
    i32 122, label %sw.bb63
    i32 129, label %sw.bb63
    i32 123, label %sw.bb63
    i32 320, label %sw.bb64
  ]

sw.default:                                       ; preds = %if.end28
  store i1 true, i1* %retval, align 1
  br label %return

sw.bb:                                            ; preds = %if.end28, %if.end28, %if.end28, %if.end28
  store i1 false, i1* %retval, align 1
  br label %return

sw.bb29:                                          ; preds = %if.end28, %if.end28, %if.end28, %if.end28, %if.end28
  %20 = load i8*, i8** %strend.addr, align 8
  %21 = load i8, i8* %utf8_target.addr, align 1
  %tobool30 = trunc i8 %21 to i1
  %call31 = call i32 @S_advance_one_WB(i8** %after_pos, i8* %20, i1 zeroext %tobool30)
  store i32 %call31, i32* %after.addr, align 4
  %22 = load i32, i32* %after.addr, align 4
  %cmp32 = icmp ne i32 %22, 1
  br i1 %cmp32, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %sw.bb29
  %23 = load i32, i32* %after.addr, align 4
  %cmp33 = icmp ne i32 %23, 8
  br label %land.end

land.end:                                         ; preds = %land.rhs, %sw.bb29
  %24 = phi i1 [ false, %sw.bb29 ], [ %cmp33, %land.rhs ]
  store i1 %24, i1* %retval, align 1
  br label %return

sw.bb34:                                          ; preds = %if.end28, %if.end28, %if.end28, %if.end28, %if.end28, %if.end28
  %25 = load i8*, i8** %strbeg.addr, align 8
  %26 = load i8, i8* %utf8_target.addr, align 1
  %tobool35 = trunc i8 %26 to i1
  %call36 = call i32 @S_backup_one_WB(i32* %previous.addr, i8* %25, i8** %before_pos, i1 zeroext %tobool35)
  store i32 %call36, i32* %before.addr, align 4
  %27 = load i32, i32* %before.addr, align 4
  %cmp37 = icmp ne i32 %27, 1
  br i1 %cmp37, label %land.rhs38, label %land.end40

land.rhs38:                                       ; preds = %sw.bb34
  %28 = load i32, i32* %before.addr, align 4
  %cmp39 = icmp ne i32 %28, 8
  br label %land.end40

land.end40:                                       ; preds = %land.rhs38, %sw.bb34
  %29 = phi i1 [ false, %sw.bb34 ], [ %cmp39, %land.rhs38 ]
  store i1 %29, i1* %retval, align 1
  br label %return

sw.bb41:                                          ; preds = %if.end28
  store i1 false, i1* %retval, align 1
  br label %return

sw.bb42:                                          ; preds = %if.end28
  %30 = load i8*, i8** %strend.addr, align 8
  %31 = load i8, i8* %utf8_target.addr, align 1
  %tobool43 = trunc i8 %31 to i1
  %call44 = call i32 @S_advance_one_WB(i8** %after_pos, i8* %30, i1 zeroext %tobool43)
  %cmp45 = icmp ne i32 %call44, 8
  store i1 %cmp45, i1* %retval, align 1
  br label %return

sw.bb46:                                          ; preds = %if.end28
  %32 = load i8*, i8** %strbeg.addr, align 8
  %33 = load i8, i8* %utf8_target.addr, align 1
  %tobool47 = trunc i8 %33 to i1
  %call48 = call i32 @S_backup_one_WB(i32* %previous.addr, i8* %32, i8** %before_pos, i1 zeroext %tobool47)
  %cmp49 = icmp ne i32 %call48, 8
  store i1 %cmp49, i1* %retval, align 1
  br label %return

sw.bb50:                                          ; preds = %if.end28
  store i1 false, i1* %retval, align 1
  br label %return

sw.bb51:                                          ; preds = %if.end28, %if.end28
  store i1 false, i1* %retval, align 1
  br label %return

sw.bb52:                                          ; preds = %if.end28, %if.end28
  store i1 false, i1* %retval, align 1
  br label %return

sw.bb53:                                          ; preds = %if.end28, %if.end28, %if.end28
  %34 = load i8*, i8** %strbeg.addr, align 8
  %35 = load i8, i8* %utf8_target.addr, align 1
  %tobool54 = trunc i8 %35 to i1
  %call55 = call i32 @S_backup_one_WB(i32* %previous.addr, i8* %34, i8** %before_pos, i1 zeroext %tobool54)
  %cmp56 = icmp ne i32 %call55, 15
  store i1 %cmp56, i1* %retval, align 1
  br label %return

sw.bb57:                                          ; preds = %if.end28, %if.end28, %if.end28
  %36 = load i8*, i8** %strend.addr, align 8
  %37 = load i8, i8* %utf8_target.addr, align 1
  %tobool58 = trunc i8 %37 to i1
  %call59 = call i32 @S_advance_one_WB(i8** %after_pos, i8* %36, i1 zeroext %tobool58)
  %cmp60 = icmp ne i32 %call59, 15
  store i1 %cmp60, i1* %retval, align 1
  br label %return

sw.bb61:                                          ; preds = %if.end28
  store i1 false, i1* %retval, align 1
  br label %return

sw.bb62:                                          ; preds = %if.end28, %if.end28, %if.end28, %if.end28, %if.end28
  store i1 false, i1* %retval, align 1
  br label %return

sw.bb63:                                          ; preds = %if.end28, %if.end28, %if.end28, %if.end28
  store i1 false, i1* %retval, align 1
  br label %return

sw.bb64:                                          ; preds = %if.end28
  store i1 false, i1* %retval, align 1
  br label %return

return:                                           ; preds = %sw.bb64, %sw.bb63, %sw.bb62, %sw.bb61, %sw.bb57, %sw.bb53, %sw.bb52, %sw.bb51, %sw.bb50, %sw.bb46, %sw.bb42, %sw.bb41, %land.end40, %land.end, %sw.bb, %sw.default, %if.then22, %if.then17, %if.then4, %if.then
  %38 = load i1, i1* %retval, align 1
  ret i1 %38
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i1 @S_isFOO_utf8_lc(i8 zeroext %classnum, i8* %character) #0 {
entry:
  %retval = alloca i1, align 1
  %classnum.addr = alloca i8, align 1
  %character.addr = alloca i8*, align 8
  %flags = alloca i8, align 1
  store i8 %classnum, i8* %classnum.addr, align 1
  store i8* %character, i8** %character.addr, align 8
  %0 = load i8*, i8** %character.addr, align 8
  %1 = load i8, i8* %0, align 1
  %conv = zext i8 %1 to i64
  %cmp = icmp ult i64 %conv, 128
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %2 = load i8, i8* %classnum.addr, align 1
  %3 = load i8*, i8** %character.addr, align 8
  %4 = load i8, i8* %3, align 1
  %call = call zeroext i1 @S_isFOO_lc(i8 zeroext %2, i8 zeroext %4)
  store i1 %call, i1* %retval, align 1
  br label %return

if.else:                                          ; preds = %entry
  %5 = load i8*, i8** %character.addr, align 8
  %6 = load i8, i8* %5, align 1
  %conv2 = zext i8 %6 to i32
  %and = and i32 %conv2, 254
  %cmp3 = icmp eq i32 %and, 194
  br i1 %cmp3, label %if.then5, label %if.end

if.then5:                                         ; preds = %if.else
  %7 = load i8, i8* %classnum.addr, align 1
  %8 = load i8*, i8** %character.addr, align 8
  %9 = load i8, i8* %8, align 1
  %conv6 = zext i8 %9 to i32
  %and7 = and i32 %conv6, 31
  %shl = shl i32 %and7, 6
  %10 = load i8*, i8** %character.addr, align 8
  %add.ptr = getelementptr inbounds i8, i8* %10, i64 1
  %11 = load i8, i8* %add.ptr, align 1
  %conv8 = zext i8 %11 to i32
  %and9 = and i32 %conv8, 63
  %or = or i32 %shl, %and9
  %conv10 = trunc i32 %or to i8
  %call11 = call zeroext i1 @S_isFOO_lc(i8 zeroext %7, i8 zeroext %conv10)
  store i1 %call11, i1* %retval, align 1
  br label %return

if.end:                                           ; preds = %if.else
  br label %if.end12

if.end12:                                         ; preds = %if.end
  %12 = load i8, i8* %classnum.addr, align 1
  %conv13 = zext i8 %12 to i32
  %cmp14 = icmp slt i32 %conv13, 10
  br i1 %cmp14, label %if.then16, label %if.end29

if.then16:                                        ; preds = %if.end12
  %13 = load i8, i8* %classnum.addr, align 1
  %idxprom = zext i8 %13 to i64
  %arrayidx = getelementptr inbounds [10 x %struct.sv*], [10 x %struct.sv*]* @PL_utf8_swash_ptrs, i64 0, i64 %idxprom
  %14 = load %struct.sv*, %struct.sv** %arrayidx, align 8
  %tobool = icmp ne %struct.sv* %14, null
  br i1 %tobool, label %if.end23, label %if.then17

if.then17:                                        ; preds = %if.then16
  store i8 4, i8* %flags, align 1
  %15 = load i8, i8* %classnum.addr, align 1
  %idxprom18 = zext i8 %15 to i64
  %arrayidx19 = getelementptr inbounds [16 x %struct.sv*], [16 x %struct.sv*]* @PL_XPosix_ptrs, i64 0, i64 %idxprom18
  %16 = load %struct.sv*, %struct.sv** %arrayidx19, align 8
  %call20 = call %struct.sv* @Perl__core_swash_init(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.4, i64 0, i64 0), %struct.sv* @PL_sv_undef, i32 1, i32 0, %struct.sv* %16, i8* %flags)
  %17 = load i8, i8* %classnum.addr, align 1
  %idxprom21 = zext i8 %17 to i64
  %arrayidx22 = getelementptr inbounds [10 x %struct.sv*], [10 x %struct.sv*]* @PL_utf8_swash_ptrs, i64 0, i64 %idxprom21
  store %struct.sv* %call20, %struct.sv** %arrayidx22, align 8
  br label %if.end23

if.end23:                                         ; preds = %if.then17, %if.then16
  %18 = load i8, i8* %classnum.addr, align 1
  %idxprom24 = zext i8 %18 to i64
  %arrayidx25 = getelementptr inbounds [10 x %struct.sv*], [10 x %struct.sv*]* @PL_utf8_swash_ptrs, i64 0, i64 %idxprom24
  %19 = load %struct.sv*, %struct.sv** %arrayidx25, align 8
  %20 = load i8*, i8** %character.addr, align 8
  %call26 = call i64 @Perl_swash_fetch(%struct.sv* %19, i8* %20, i1 zeroext true)
  %tobool27 = icmp ne i64 %call26, 0
  %21 = zext i1 %tobool27 to i64
  %cond = select i1 %tobool27, i32 1, i32 0
  %tobool28 = icmp ne i32 %cond, 0
  store i1 %tobool28, i1* %retval, align 1
  br label %return

if.end29:                                         ; preds = %if.end12
  %22 = load i8, i8* %classnum.addr, align 1
  %conv30 = zext i8 %22 to i32
  switch i32 %conv30, label %sw.default [
    i32 10, label %sw.bb
    i32 11, label %sw.bb102
    i32 12, label %sw.bb177
    i32 15, label %sw.bb234
  ]

sw.bb:                                            ; preds = %if.end29
  %23 = load i8*, i8** %character.addr, align 8
  %arrayidx31 = getelementptr inbounds i8, i8* %23, i64 0
  %24 = load i8, i8* %arrayidx31, align 1
  %conv32 = zext i8 %24 to i32
  %cmp33 = icmp eq i32 225, %conv32
  br i1 %cmp33, label %cond.true, label %cond.false

cond.true:                                        ; preds = %sw.bb
  %25 = load i8*, i8** %character.addr, align 8
  %arrayidx35 = getelementptr inbounds i8, i8* %25, i64 1
  %26 = load i8, i8* %arrayidx35, align 1
  %conv36 = zext i8 %26 to i32
  %cmp37 = icmp eq i32 154, %conv36
  br i1 %cmp37, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %cond.true
  %27 = load i8*, i8** %character.addr, align 8
  %arrayidx39 = getelementptr inbounds i8, i8* %27, i64 2
  %28 = load i8, i8* %arrayidx39, align 1
  %conv40 = zext i8 %28 to i32
  %cmp41 = icmp eq i32 128, %conv40
  br label %land.end

land.end:                                         ; preds = %land.rhs, %cond.true
  %29 = phi i1 [ false, %cond.true ], [ %cmp41, %land.rhs ]
  %30 = zext i1 %29 to i64
  %cond43 = select i1 %29, i32 3, i32 0
  br label %cond.end99

cond.false:                                       ; preds = %sw.bb
  %31 = load i8*, i8** %character.addr, align 8
  %arrayidx44 = getelementptr inbounds i8, i8* %31, i64 0
  %32 = load i8, i8* %arrayidx44, align 1
  %conv45 = zext i8 %32 to i32
  %cmp46 = icmp eq i32 226, %conv45
  br i1 %cmp46, label %cond.true48, label %cond.false81

cond.true48:                                      ; preds = %cond.false
  %33 = load i8*, i8** %character.addr, align 8
  %arrayidx49 = getelementptr inbounds i8, i8* %33, i64 1
  %34 = load i8, i8* %arrayidx49, align 1
  %conv50 = zext i8 %34 to i32
  %cmp51 = icmp eq i32 128, %conv50
  br i1 %cmp51, label %cond.true53, label %cond.false68

cond.true53:                                      ; preds = %cond.true48
  %35 = load i8*, i8** %character.addr, align 8
  %arrayidx54 = getelementptr inbounds i8, i8* %35, i64 2
  %36 = load i8, i8* %arrayidx54, align 1
  %conv55 = zext i8 %36 to i32
  %cmp56 = icmp sle i32 %conv55, 138
  br i1 %cmp56, label %lor.end, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %cond.true53
  %37 = load i8*, i8** %character.addr, align 8
  %arrayidx58 = getelementptr inbounds i8, i8* %37, i64 2
  %38 = load i8, i8* %arrayidx58, align 1
  %conv59 = zext i8 %38 to i32
  %and60 = and i32 %conv59, 254
  %cmp61 = icmp eq i32 %and60, 168
  br i1 %cmp61, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %lor.lhs.false
  %39 = load i8*, i8** %character.addr, align 8
  %arrayidx63 = getelementptr inbounds i8, i8* %39, i64 2
  %40 = load i8, i8* %arrayidx63, align 1
  %conv64 = zext i8 %40 to i32
  %cmp65 = icmp eq i32 175, %conv64
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false, %cond.true53
  %41 = phi i1 [ true, %lor.lhs.false ], [ true, %cond.true53 ], [ %cmp65, %lor.rhs ]
  %42 = zext i1 %41 to i64
  %cond67 = select i1 %41, i32 3, i32 0
  br label %cond.end

cond.false68:                                     ; preds = %cond.true48
  %43 = load i8*, i8** %character.addr, align 8
  %arrayidx69 = getelementptr inbounds i8, i8* %43, i64 1
  %44 = load i8, i8* %arrayidx69, align 1
  %conv70 = zext i8 %44 to i32
  %cmp71 = icmp eq i32 129, %conv70
  br i1 %cmp71, label %land.rhs73, label %land.end78

land.rhs73:                                       ; preds = %cond.false68
  %45 = load i8*, i8** %character.addr, align 8
  %arrayidx74 = getelementptr inbounds i8, i8* %45, i64 2
  %46 = load i8, i8* %arrayidx74, align 1
  %conv75 = zext i8 %46 to i32
  %cmp76 = icmp eq i32 159, %conv75
  br label %land.end78

land.end78:                                       ; preds = %land.rhs73, %cond.false68
  %47 = phi i1 [ false, %cond.false68 ], [ %cmp76, %land.rhs73 ]
  %48 = zext i1 %47 to i64
  %cond79 = select i1 %47, i32 3, i32 0
  br label %cond.end

cond.end:                                         ; preds = %land.end78, %lor.end
  %cond80 = phi i32 [ %cond67, %lor.end ], [ %cond79, %land.end78 ]
  br label %cond.end97

cond.false81:                                     ; preds = %cond.false
  %49 = load i8*, i8** %character.addr, align 8
  %arrayidx82 = getelementptr inbounds i8, i8* %49, i64 0
  %50 = load i8, i8* %arrayidx82, align 1
  %conv83 = zext i8 %50 to i32
  %cmp84 = icmp eq i32 227, %conv83
  br i1 %cmp84, label %land.lhs.true, label %land.end95

land.lhs.true:                                    ; preds = %cond.false81
  %51 = load i8*, i8** %character.addr, align 8
  %arrayidx86 = getelementptr inbounds i8, i8* %51, i64 1
  %52 = load i8, i8* %arrayidx86, align 1
  %conv87 = zext i8 %52 to i32
  %cmp88 = icmp eq i32 128, %conv87
  br i1 %cmp88, label %land.rhs90, label %land.end95

land.rhs90:                                       ; preds = %land.lhs.true
  %53 = load i8*, i8** %character.addr, align 8
  %arrayidx91 = getelementptr inbounds i8, i8* %53, i64 2
  %54 = load i8, i8* %arrayidx91, align 1
  %conv92 = zext i8 %54 to i32
  %cmp93 = icmp eq i32 128, %conv92
  br label %land.end95

land.end95:                                       ; preds = %land.rhs90, %land.lhs.true, %cond.false81
  %55 = phi i1 [ false, %land.lhs.true ], [ false, %cond.false81 ], [ %cmp93, %land.rhs90 ]
  %56 = zext i1 %55 to i64
  %cond96 = select i1 %55, i32 3, i32 0
  br label %cond.end97

cond.end97:                                       ; preds = %land.end95, %cond.end
  %cond98 = phi i32 [ %cond80, %cond.end ], [ %cond96, %land.end95 ]
  br label %cond.end99

cond.end99:                                       ; preds = %cond.end97, %land.end
  %cond100 = phi i32 [ %cond43, %land.end ], [ %cond98, %cond.end97 ]
  %tobool101 = icmp ne i32 %cond100, 0
  store i1 %tobool101, i1* %retval, align 1
  br label %return

sw.bb102:                                         ; preds = %if.end29
  %57 = load i8*, i8** %character.addr, align 8
  %arrayidx103 = getelementptr inbounds i8, i8* %57, i64 0
  %58 = load i8, i8* %arrayidx103, align 1
  %conv104 = zext i8 %58 to i32
  %cmp105 = icmp eq i32 225, %conv104
  br i1 %cmp105, label %cond.true107, label %cond.false119

cond.true107:                                     ; preds = %sw.bb102
  %59 = load i8*, i8** %character.addr, align 8
  %arrayidx108 = getelementptr inbounds i8, i8* %59, i64 1
  %60 = load i8, i8* %arrayidx108, align 1
  %conv109 = zext i8 %60 to i32
  %cmp110 = icmp eq i32 154, %conv109
  br i1 %cmp110, label %land.rhs112, label %land.end117

land.rhs112:                                      ; preds = %cond.true107
  %61 = load i8*, i8** %character.addr, align 8
  %arrayidx113 = getelementptr inbounds i8, i8* %61, i64 2
  %62 = load i8, i8* %arrayidx113, align 1
  %conv114 = zext i8 %62 to i32
  %cmp115 = icmp eq i32 128, %conv114
  br label %land.end117

land.end117:                                      ; preds = %land.rhs112, %cond.true107
  %63 = phi i1 [ false, %cond.true107 ], [ %cmp115, %land.rhs112 ]
  %64 = zext i1 %63 to i64
  %cond118 = select i1 %63, i32 3, i32 0
  br label %cond.end174

cond.false119:                                    ; preds = %sw.bb102
  %65 = load i8*, i8** %character.addr, align 8
  %arrayidx120 = getelementptr inbounds i8, i8* %65, i64 0
  %66 = load i8, i8* %arrayidx120, align 1
  %conv121 = zext i8 %66 to i32
  %cmp122 = icmp eq i32 226, %conv121
  br i1 %cmp122, label %cond.true124, label %cond.false155

cond.true124:                                     ; preds = %cond.false119
  %67 = load i8*, i8** %character.addr, align 8
  %arrayidx125 = getelementptr inbounds i8, i8* %67, i64 1
  %68 = load i8, i8* %arrayidx125, align 1
  %conv126 = zext i8 %68 to i32
  %cmp127 = icmp eq i32 128, %conv126
  br i1 %cmp127, label %cond.true129, label %cond.false141

cond.true129:                                     ; preds = %cond.true124
  %69 = load i8*, i8** %character.addr, align 8
  %arrayidx130 = getelementptr inbounds i8, i8* %69, i64 2
  %70 = load i8, i8* %arrayidx130, align 1
  %conv131 = zext i8 %70 to i32
  %cmp132 = icmp sle i32 %conv131, 138
  br i1 %cmp132, label %lor.end139, label %lor.rhs134

lor.rhs134:                                       ; preds = %cond.true129
  %71 = load i8*, i8** %character.addr, align 8
  %arrayidx135 = getelementptr inbounds i8, i8* %71, i64 2
  %72 = load i8, i8* %arrayidx135, align 1
  %conv136 = zext i8 %72 to i32
  %cmp137 = icmp eq i32 175, %conv136
  br label %lor.end139

lor.end139:                                       ; preds = %lor.rhs134, %cond.true129
  %73 = phi i1 [ true, %cond.true129 ], [ %cmp137, %lor.rhs134 ]
  %74 = zext i1 %73 to i64
  %cond140 = select i1 %73, i32 3, i32 0
  br label %cond.end153

cond.false141:                                    ; preds = %cond.true124
  %75 = load i8*, i8** %character.addr, align 8
  %arrayidx142 = getelementptr inbounds i8, i8* %75, i64 1
  %76 = load i8, i8* %arrayidx142, align 1
  %conv143 = zext i8 %76 to i32
  %cmp144 = icmp eq i32 129, %conv143
  br i1 %cmp144, label %land.rhs146, label %land.end151

land.rhs146:                                      ; preds = %cond.false141
  %77 = load i8*, i8** %character.addr, align 8
  %arrayidx147 = getelementptr inbounds i8, i8* %77, i64 2
  %78 = load i8, i8* %arrayidx147, align 1
  %conv148 = zext i8 %78 to i32
  %cmp149 = icmp eq i32 159, %conv148
  br label %land.end151

land.end151:                                      ; preds = %land.rhs146, %cond.false141
  %79 = phi i1 [ false, %cond.false141 ], [ %cmp149, %land.rhs146 ]
  %80 = zext i1 %79 to i64
  %cond152 = select i1 %79, i32 3, i32 0
  br label %cond.end153

cond.end153:                                      ; preds = %land.end151, %lor.end139
  %cond154 = phi i32 [ %cond140, %lor.end139 ], [ %cond152, %land.end151 ]
  br label %cond.end172

cond.false155:                                    ; preds = %cond.false119
  %81 = load i8*, i8** %character.addr, align 8
  %arrayidx156 = getelementptr inbounds i8, i8* %81, i64 0
  %82 = load i8, i8* %arrayidx156, align 1
  %conv157 = zext i8 %82 to i32
  %cmp158 = icmp eq i32 227, %conv157
  br i1 %cmp158, label %land.lhs.true160, label %land.end170

land.lhs.true160:                                 ; preds = %cond.false155
  %83 = load i8*, i8** %character.addr, align 8
  %arrayidx161 = getelementptr inbounds i8, i8* %83, i64 1
  %84 = load i8, i8* %arrayidx161, align 1
  %conv162 = zext i8 %84 to i32
  %cmp163 = icmp eq i32 128, %conv162
  br i1 %cmp163, label %land.rhs165, label %land.end170

land.rhs165:                                      ; preds = %land.lhs.true160
  %85 = load i8*, i8** %character.addr, align 8
  %arrayidx166 = getelementptr inbounds i8, i8* %85, i64 2
  %86 = load i8, i8* %arrayidx166, align 1
  %conv167 = zext i8 %86 to i32
  %cmp168 = icmp eq i32 128, %conv167
  br label %land.end170

land.end170:                                      ; preds = %land.rhs165, %land.lhs.true160, %cond.false155
  %87 = phi i1 [ false, %land.lhs.true160 ], [ false, %cond.false155 ], [ %cmp168, %land.rhs165 ]
  %88 = zext i1 %87 to i64
  %cond171 = select i1 %87, i32 3, i32 0
  br label %cond.end172

cond.end172:                                      ; preds = %land.end170, %cond.end153
  %cond173 = phi i32 [ %cond154, %cond.end153 ], [ %cond171, %land.end170 ]
  br label %cond.end174

cond.end174:                                      ; preds = %cond.end172, %land.end117
  %cond175 = phi i32 [ %cond118, %land.end117 ], [ %cond173, %cond.end172 ]
  %tobool176 = icmp ne i32 %cond175, 0
  store i1 %tobool176, i1* %retval, align 1
  br label %return

sw.bb177:                                         ; preds = %if.end29
  %89 = load i8*, i8** %character.addr, align 8
  %arrayidx178 = getelementptr inbounds i8, i8* %89, i64 0
  %90 = load i8, i8* %arrayidx178, align 1
  %conv179 = zext i8 %90 to i32
  %cmp180 = icmp eq i32 239, %conv179
  br i1 %cmp180, label %cond.true182, label %cond.false230

cond.true182:                                     ; preds = %sw.bb177
  %91 = load i8*, i8** %character.addr, align 8
  %arrayidx183 = getelementptr inbounds i8, i8* %91, i64 1
  %92 = load i8, i8* %arrayidx183, align 1
  %conv184 = zext i8 %92 to i32
  %cmp185 = icmp eq i32 188, %conv184
  br i1 %cmp185, label %cond.true187, label %cond.false210

cond.true187:                                     ; preds = %cond.true182
  %93 = load i8*, i8** %character.addr, align 8
  %arrayidx188 = getelementptr inbounds i8, i8* %93, i64 2
  %94 = load i8, i8* %arrayidx188, align 1
  %conv189 = zext i8 %94 to i32
  %cmp190 = icmp sle i32 144, %conv189
  br i1 %cmp190, label %land.lhs.true192, label %lor.rhs197

land.lhs.true192:                                 ; preds = %cond.true187
  %95 = load i8*, i8** %character.addr, align 8
  %arrayidx193 = getelementptr inbounds i8, i8* %95, i64 2
  %96 = load i8, i8* %arrayidx193, align 1
  %conv194 = zext i8 %96 to i32
  %cmp195 = icmp sle i32 %conv194, 153
  br i1 %cmp195, label %lor.end208, label %lor.rhs197

lor.rhs197:                                       ; preds = %land.lhs.true192, %cond.true187
  %97 = load i8*, i8** %character.addr, align 8
  %arrayidx198 = getelementptr inbounds i8, i8* %97, i64 2
  %98 = load i8, i8* %arrayidx198, align 1
  %conv199 = zext i8 %98 to i32
  %cmp200 = icmp sle i32 161, %conv199
  br i1 %cmp200, label %land.rhs202, label %land.end207

land.rhs202:                                      ; preds = %lor.rhs197
  %99 = load i8*, i8** %character.addr, align 8
  %arrayidx203 = getelementptr inbounds i8, i8* %99, i64 2
  %100 = load i8, i8* %arrayidx203, align 1
  %conv204 = zext i8 %100 to i32
  %cmp205 = icmp sle i32 %conv204, 166
  br label %land.end207

land.end207:                                      ; preds = %land.rhs202, %lor.rhs197
  %101 = phi i1 [ false, %lor.rhs197 ], [ %cmp205, %land.rhs202 ]
  br label %lor.end208

lor.end208:                                       ; preds = %land.end207, %land.lhs.true192
  %102 = phi i1 [ true, %land.lhs.true192 ], [ %101, %land.end207 ]
  %103 = zext i1 %102 to i64
  %cond209 = select i1 %102, i32 3, i32 0
  br label %cond.end228

cond.false210:                                    ; preds = %cond.true182
  %104 = load i8*, i8** %character.addr, align 8
  %arrayidx211 = getelementptr inbounds i8, i8* %104, i64 1
  %105 = load i8, i8* %arrayidx211, align 1
  %conv212 = zext i8 %105 to i32
  %cmp213 = icmp eq i32 189, %conv212
  br i1 %cmp213, label %land.rhs215, label %land.end226

land.rhs215:                                      ; preds = %cond.false210
  %106 = load i8*, i8** %character.addr, align 8
  %arrayidx216 = getelementptr inbounds i8, i8* %106, i64 2
  %107 = load i8, i8* %arrayidx216, align 1
  %conv217 = zext i8 %107 to i32
  %cmp218 = icmp sle i32 129, %conv217
  br i1 %cmp218, label %land.rhs220, label %land.end225

land.rhs220:                                      ; preds = %land.rhs215
  %108 = load i8*, i8** %character.addr, align 8
  %arrayidx221 = getelementptr inbounds i8, i8* %108, i64 2
  %109 = load i8, i8* %arrayidx221, align 1
  %conv222 = zext i8 %109 to i32
  %cmp223 = icmp sle i32 %conv222, 134
  br label %land.end225

land.end225:                                      ; preds = %land.rhs220, %land.rhs215
  %110 = phi i1 [ false, %land.rhs215 ], [ %cmp223, %land.rhs220 ]
  br label %land.end226

land.end226:                                      ; preds = %land.end225, %cond.false210
  %111 = phi i1 [ false, %cond.false210 ], [ %110, %land.end225 ]
  %112 = zext i1 %111 to i64
  %cond227 = select i1 %111, i32 3, i32 0
  br label %cond.end228

cond.end228:                                      ; preds = %land.end226, %lor.end208
  %cond229 = phi i32 [ %cond209, %lor.end208 ], [ %cond227, %land.end226 ]
  br label %cond.end231

cond.false230:                                    ; preds = %sw.bb177
  br label %cond.end231

cond.end231:                                      ; preds = %cond.false230, %cond.end228
  %cond232 = phi i32 [ %cond229, %cond.end228 ], [ 0, %cond.false230 ]
  %tobool233 = icmp ne i32 %cond232, 0
  store i1 %tobool233, i1* %retval, align 1
  br label %return

sw.bb234:                                         ; preds = %if.end29
  %113 = load i8*, i8** %character.addr, align 8
  %arrayidx235 = getelementptr inbounds i8, i8* %113, i64 0
  %114 = load i8, i8* %arrayidx235, align 1
  %conv236 = zext i8 %114 to i32
  %cmp237 = icmp eq i32 226, %conv236
  br i1 %cmp237, label %land.lhs.true239, label %land.end250

land.lhs.true239:                                 ; preds = %sw.bb234
  %115 = load i8*, i8** %character.addr, align 8
  %arrayidx240 = getelementptr inbounds i8, i8* %115, i64 1
  %116 = load i8, i8* %arrayidx240, align 1
  %conv241 = zext i8 %116 to i32
  %cmp242 = icmp eq i32 128, %conv241
  br i1 %cmp242, label %land.rhs244, label %land.end250

land.rhs244:                                      ; preds = %land.lhs.true239
  %117 = load i8*, i8** %character.addr, align 8
  %arrayidx245 = getelementptr inbounds i8, i8* %117, i64 2
  %118 = load i8, i8* %arrayidx245, align 1
  %conv246 = zext i8 %118 to i32
  %and247 = and i32 %conv246, 254
  %cmp248 = icmp eq i32 %and247, 168
  br label %land.end250

land.end250:                                      ; preds = %land.rhs244, %land.lhs.true239, %sw.bb234
  %119 = phi i1 [ false, %land.lhs.true239 ], [ false, %sw.bb234 ], [ %cmp248, %land.rhs244 ]
  %120 = zext i1 %119 to i64
  %cond251 = select i1 %119, i32 3, i32 0
  %tobool252 = icmp ne i32 %cond251, 0
  store i1 %tobool252, i1* %retval, align 1
  br label %return

sw.default:                                       ; preds = %if.end29
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default
  store i1 false, i1* %retval, align 1
  br label %return

return:                                           ; preds = %sw.epilog, %land.end250, %cond.end231, %cond.end174, %cond.end99, %if.end23, %if.then5, %if.then
  %121 = load i1, i1* %retval, align 1
  ret i1 %121
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i1 @S_isFOO_lc(i8 zeroext %classnum, i8 zeroext %character) #0 {
entry:
  %retval = alloca i1, align 1
  %classnum.addr = alloca i8, align 1
  %character.addr = alloca i8, align 1
  store i8 %classnum, i8* %classnum.addr, align 1
  store i8 %character, i8* %character.addr, align 1
  %0 = load i8, i8* %classnum.addr, align 1
  %conv = zext i8 %0 to i32
  switch i32 %conv, label %sw.default [
    i32 7, label %sw.bb
    i32 2, label %sw.bb6
    i32 14, label %sw.bb20
    i32 11, label %sw.bb24
    i32 9, label %sw.bb38
    i32 13, label %sw.bb64
    i32 1, label %sw.bb79
    i32 8, label %sw.bb94
    i32 3, label %sw.bb109
    i32 6, label %sw.bb124
    i32 5, label %sw.bb139
    i32 10, label %sw.bb154
    i32 4, label %sw.bb169
    i32 0, label %sw.bb184
    i32 12, label %sw.bb204
  ]

sw.bb:                                            ; preds = %entry
  %1 = load i8, i8* %character.addr, align 1
  %conv1 = zext i8 %1 to i32
  %and = and i32 %conv1, -128
  %cmp = icmp eq i32 %and, 0
  br i1 %cmp, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %sw.bb
  %call = call i16** @__ctype_b_loc() #6
  %2 = load i16*, i16** %call, align 8
  %3 = load i8, i8* %character.addr, align 1
  %conv3 = zext i8 %3 to i32
  %idxprom = sext i32 %conv3 to i64
  %arrayidx = getelementptr inbounds i16, i16* %2, i64 %idxprom
  %4 = load i16, i16* %arrayidx, align 2
  %conv4 = zext i16 %4 to i32
  %and5 = and i32 %conv4, 8
  %tobool = icmp ne i32 %and5, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %sw.bb
  %5 = phi i1 [ false, %sw.bb ], [ %tobool, %land.rhs ]
  store i1 %5, i1* %retval, align 1
  br label %return

sw.bb6:                                           ; preds = %entry
  %6 = load i8, i8* %character.addr, align 1
  %conv7 = zext i8 %6 to i32
  %and8 = and i32 %conv7, -128
  %cmp9 = icmp eq i32 %and8, 0
  br i1 %cmp9, label %land.rhs11, label %land.end19

land.rhs11:                                       ; preds = %sw.bb6
  %call12 = call i16** @__ctype_b_loc() #6
  %7 = load i16*, i16** %call12, align 8
  %8 = load i8, i8* %character.addr, align 1
  %conv13 = zext i8 %8 to i32
  %idxprom14 = sext i32 %conv13 to i64
  %arrayidx15 = getelementptr inbounds i16, i16* %7, i64 %idxprom14
  %9 = load i16, i16* %arrayidx15, align 2
  %conv16 = zext i16 %9 to i32
  %and17 = and i32 %conv16, 1024
  %tobool18 = icmp ne i32 %and17, 0
  br label %land.end19

land.end19:                                       ; preds = %land.rhs11, %sw.bb6
  %10 = phi i1 [ false, %sw.bb6 ], [ %tobool18, %land.rhs11 ]
  store i1 %10, i1* %retval, align 1
  br label %return

sw.bb20:                                          ; preds = %entry
  %11 = load i8, i8* %character.addr, align 1
  %conv21 = zext i8 %11 to i64
  %cmp22 = icmp ult i64 %conv21, 128
  store i1 %cmp22, i1* %retval, align 1
  br label %return

sw.bb24:                                          ; preds = %entry
  %12 = load i8, i8* @PL_in_utf8_CTYPE_locale, align 1
  %tobool25 = trunc i8 %12 to i1
  br i1 %tobool25, label %cond.true, label %cond.false

cond.true:                                        ; preds = %sw.bb24
  %13 = load i8, i8* %character.addr, align 1
  %idxprom27 = zext i8 %13 to i64
  %arrayidx28 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom27
  %14 = load i32, i32* %arrayidx28, align 4
  %and29 = and i32 %14, 2048
  %tobool30 = icmp ne i32 %and29, 0
  %15 = zext i1 %tobool30 to i64
  %cond = select i1 %tobool30, i32 1, i32 0
  br label %cond.end

cond.false:                                       ; preds = %sw.bb24
  %16 = load i8, i8* %character.addr, align 1
  %idxprom31 = zext i8 %16 to i64
  %arrayidx32 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom31
  %17 = load i32, i32* %arrayidx32, align 4
  %and33 = and i32 %17, 18432
  %cmp34 = icmp eq i32 %and33, 18432
  %land.ext = zext i1 %cmp34 to i32
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond36 = phi i32 [ %cond, %cond.true ], [ %land.ext, %cond.false ]
  %tobool37 = icmp ne i32 %cond36, 0
  store i1 %tobool37, i1* %retval, align 1
  br label %return

sw.bb38:                                          ; preds = %entry
  %18 = load i8, i8* %character.addr, align 1
  %conv39 = zext i8 %18 to i32
  %and40 = and i32 %conv39, -128
  %cmp41 = icmp eq i32 %and40, 0
  br i1 %cmp41, label %land.lhs.true, label %lor.rhs

land.lhs.true:                                    ; preds = %sw.bb38
  %call43 = call i16** @__ctype_b_loc() #6
  %19 = load i16*, i16** %call43, align 8
  %20 = load i8, i8* %character.addr, align 1
  %conv44 = zext i8 %20 to i32
  %idxprom45 = sext i32 %conv44 to i64
  %arrayidx46 = getelementptr inbounds i16, i16* %19, i64 %idxprom45
  %21 = load i16, i16* %arrayidx46, align 2
  %conv47 = zext i16 %21 to i32
  %and48 = and i32 %conv47, 512
  %tobool49 = icmp ne i32 %and48, 0
  br i1 %tobool49, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %land.lhs.true, %sw.bb38
  %22 = load i8, i8* %character.addr, align 1
  %conv50 = zext i8 %22 to i32
  %and51 = and i32 %conv50, -128
  %cmp52 = icmp eq i32 %and51, 0
  br i1 %cmp52, label %land.rhs54, label %land.end62

land.rhs54:                                       ; preds = %lor.rhs
  %call55 = call i16** @__ctype_b_loc() #6
  %23 = load i16*, i16** %call55, align 8
  %24 = load i8, i8* %character.addr, align 1
  %conv56 = zext i8 %24 to i32
  %idxprom57 = sext i32 %conv56 to i64
  %arrayidx58 = getelementptr inbounds i16, i16* %23, i64 %idxprom57
  %25 = load i16, i16* %arrayidx58, align 2
  %conv59 = zext i16 %25 to i32
  %and60 = and i32 %conv59, 256
  %tobool61 = icmp ne i32 %and60, 0
  br label %land.end62

land.end62:                                       ; preds = %land.rhs54, %lor.rhs
  %26 = phi i1 [ false, %lor.rhs ], [ %tobool61, %land.rhs54 ]
  br label %lor.end

lor.end:                                          ; preds = %land.end62, %land.lhs.true
  %27 = phi i1 [ true, %land.lhs.true ], [ %26, %land.end62 ]
  store i1 %27, i1* %retval, align 1
  br label %return

sw.bb64:                                          ; preds = %entry
  %28 = load i8, i8* %character.addr, align 1
  %conv65 = zext i8 %28 to i32
  %and66 = and i32 %conv65, -128
  %cmp67 = icmp eq i32 %and66, 0
  br i1 %cmp67, label %land.rhs69, label %land.end77

land.rhs69:                                       ; preds = %sw.bb64
  %call70 = call i16** @__ctype_b_loc() #6
  %29 = load i16*, i16** %call70, align 8
  %30 = load i8, i8* %character.addr, align 1
  %conv71 = zext i8 %30 to i32
  %idxprom72 = sext i32 %conv71 to i64
  %arrayidx73 = getelementptr inbounds i16, i16* %29, i64 %idxprom72
  %31 = load i16, i16* %arrayidx73, align 2
  %conv74 = zext i16 %31 to i32
  %and75 = and i32 %conv74, 2
  %tobool76 = icmp ne i32 %and75, 0
  br label %land.end77

land.end77:                                       ; preds = %land.rhs69, %sw.bb64
  %32 = phi i1 [ false, %sw.bb64 ], [ %tobool76, %land.rhs69 ]
  store i1 %32, i1* %retval, align 1
  br label %return

sw.bb79:                                          ; preds = %entry
  %33 = load i8, i8* %character.addr, align 1
  %conv80 = zext i8 %33 to i32
  %and81 = and i32 %conv80, -128
  %cmp82 = icmp eq i32 %and81, 0
  br i1 %cmp82, label %land.rhs84, label %land.end92

land.rhs84:                                       ; preds = %sw.bb79
  %call85 = call i16** @__ctype_b_loc() #6
  %34 = load i16*, i16** %call85, align 8
  %35 = load i8, i8* %character.addr, align 1
  %conv86 = zext i8 %35 to i32
  %idxprom87 = sext i32 %conv86 to i64
  %arrayidx88 = getelementptr inbounds i16, i16* %34, i64 %idxprom87
  %36 = load i16, i16* %arrayidx88, align 2
  %conv89 = zext i16 %36 to i32
  %and90 = and i32 %conv89, 2048
  %tobool91 = icmp ne i32 %and90, 0
  br label %land.end92

land.end92:                                       ; preds = %land.rhs84, %sw.bb79
  %37 = phi i1 [ false, %sw.bb79 ], [ %tobool91, %land.rhs84 ]
  store i1 %37, i1* %retval, align 1
  br label %return

sw.bb94:                                          ; preds = %entry
  %38 = load i8, i8* %character.addr, align 1
  %conv95 = zext i8 %38 to i32
  %and96 = and i32 %conv95, -128
  %cmp97 = icmp eq i32 %and96, 0
  br i1 %cmp97, label %land.rhs99, label %land.end107

land.rhs99:                                       ; preds = %sw.bb94
  %call100 = call i16** @__ctype_b_loc() #6
  %39 = load i16*, i16** %call100, align 8
  %40 = load i8, i8* %character.addr, align 1
  %conv101 = zext i8 %40 to i32
  %idxprom102 = sext i32 %conv101 to i64
  %arrayidx103 = getelementptr inbounds i16, i16* %39, i64 %idxprom102
  %41 = load i16, i16* %arrayidx103, align 2
  %conv104 = zext i16 %41 to i32
  %and105 = and i32 %conv104, 32768
  %tobool106 = icmp ne i32 %and105, 0
  br label %land.end107

land.end107:                                      ; preds = %land.rhs99, %sw.bb94
  %42 = phi i1 [ false, %sw.bb94 ], [ %tobool106, %land.rhs99 ]
  store i1 %42, i1* %retval, align 1
  br label %return

sw.bb109:                                         ; preds = %entry
  %43 = load i8, i8* %character.addr, align 1
  %conv110 = zext i8 %43 to i32
  %and111 = and i32 %conv110, -128
  %cmp112 = icmp eq i32 %and111, 0
  br i1 %cmp112, label %land.rhs114, label %land.end122

land.rhs114:                                      ; preds = %sw.bb109
  %call115 = call i16** @__ctype_b_loc() #6
  %44 = load i16*, i16** %call115, align 8
  %45 = load i8, i8* %character.addr, align 1
  %conv116 = zext i8 %45 to i32
  %idxprom117 = sext i32 %conv116 to i64
  %arrayidx118 = getelementptr inbounds i16, i16* %44, i64 %idxprom117
  %46 = load i16, i16* %arrayidx118, align 2
  %conv119 = zext i16 %46 to i32
  %and120 = and i32 %conv119, 512
  %tobool121 = icmp ne i32 %and120, 0
  br label %land.end122

land.end122:                                      ; preds = %land.rhs114, %sw.bb109
  %47 = phi i1 [ false, %sw.bb109 ], [ %tobool121, %land.rhs114 ]
  store i1 %47, i1* %retval, align 1
  br label %return

sw.bb124:                                         ; preds = %entry
  %48 = load i8, i8* %character.addr, align 1
  %conv125 = zext i8 %48 to i32
  %and126 = and i32 %conv125, -128
  %cmp127 = icmp eq i32 %and126, 0
  br i1 %cmp127, label %land.rhs129, label %land.end137

land.rhs129:                                      ; preds = %sw.bb124
  %call130 = call i16** @__ctype_b_loc() #6
  %49 = load i16*, i16** %call130, align 8
  %50 = load i8, i8* %character.addr, align 1
  %conv131 = zext i8 %50 to i32
  %idxprom132 = sext i32 %conv131 to i64
  %arrayidx133 = getelementptr inbounds i16, i16* %49, i64 %idxprom132
  %51 = load i16, i16* %arrayidx133, align 2
  %conv134 = zext i16 %51 to i32
  %and135 = and i32 %conv134, 16384
  %tobool136 = icmp ne i32 %and135, 0
  br label %land.end137

land.end137:                                      ; preds = %land.rhs129, %sw.bb124
  %52 = phi i1 [ false, %sw.bb124 ], [ %tobool136, %land.rhs129 ]
  store i1 %52, i1* %retval, align 1
  br label %return

sw.bb139:                                         ; preds = %entry
  %53 = load i8, i8* %character.addr, align 1
  %conv140 = zext i8 %53 to i32
  %and141 = and i32 %conv140, -128
  %cmp142 = icmp eq i32 %and141, 0
  br i1 %cmp142, label %land.rhs144, label %land.end152

land.rhs144:                                      ; preds = %sw.bb139
  %call145 = call i16** @__ctype_b_loc() #6
  %54 = load i16*, i16** %call145, align 8
  %55 = load i8, i8* %character.addr, align 1
  %conv146 = zext i8 %55 to i32
  %idxprom147 = sext i32 %conv146 to i64
  %arrayidx148 = getelementptr inbounds i16, i16* %54, i64 %idxprom147
  %56 = load i16, i16* %arrayidx148, align 2
  %conv149 = zext i16 %56 to i32
  %and150 = and i32 %conv149, 4
  %tobool151 = icmp ne i32 %and150, 0
  br label %land.end152

land.end152:                                      ; preds = %land.rhs144, %sw.bb139
  %57 = phi i1 [ false, %sw.bb139 ], [ %tobool151, %land.rhs144 ]
  store i1 %57, i1* %retval, align 1
  br label %return

sw.bb154:                                         ; preds = %entry
  %58 = load i8, i8* %character.addr, align 1
  %conv155 = zext i8 %58 to i32
  %and156 = and i32 %conv155, -128
  %cmp157 = icmp eq i32 %and156, 0
  br i1 %cmp157, label %land.rhs159, label %land.end167

land.rhs159:                                      ; preds = %sw.bb154
  %call160 = call i16** @__ctype_b_loc() #6
  %59 = load i16*, i16** %call160, align 8
  %60 = load i8, i8* %character.addr, align 1
  %conv161 = zext i8 %60 to i32
  %idxprom162 = sext i32 %conv161 to i64
  %arrayidx163 = getelementptr inbounds i16, i16* %59, i64 %idxprom162
  %61 = load i16, i16* %arrayidx163, align 2
  %conv164 = zext i16 %61 to i32
  %and165 = and i32 %conv164, 8192
  %tobool166 = icmp ne i32 %and165, 0
  br label %land.end167

land.end167:                                      ; preds = %land.rhs159, %sw.bb154
  %62 = phi i1 [ false, %sw.bb154 ], [ %tobool166, %land.rhs159 ]
  store i1 %62, i1* %retval, align 1
  br label %return

sw.bb169:                                         ; preds = %entry
  %63 = load i8, i8* %character.addr, align 1
  %conv170 = zext i8 %63 to i32
  %and171 = and i32 %conv170, -128
  %cmp172 = icmp eq i32 %and171, 0
  br i1 %cmp172, label %land.rhs174, label %land.end182

land.rhs174:                                      ; preds = %sw.bb169
  %call175 = call i16** @__ctype_b_loc() #6
  %64 = load i16*, i16** %call175, align 8
  %65 = load i8, i8* %character.addr, align 1
  %conv176 = zext i8 %65 to i32
  %idxprom177 = sext i32 %conv176 to i64
  %arrayidx178 = getelementptr inbounds i16, i16* %64, i64 %idxprom177
  %66 = load i16, i16* %arrayidx178, align 2
  %conv179 = zext i16 %66 to i32
  %and180 = and i32 %conv179, 256
  %tobool181 = icmp ne i32 %and180, 0
  br label %land.end182

land.end182:                                      ; preds = %land.rhs174, %sw.bb169
  %67 = phi i1 [ false, %sw.bb169 ], [ %tobool181, %land.rhs174 ]
  store i1 %67, i1* %retval, align 1
  br label %return

sw.bb184:                                         ; preds = %entry
  %68 = load i8, i8* %character.addr, align 1
  %conv185 = zext i8 %68 to i32
  %and186 = and i32 %conv185, -128
  %cmp187 = icmp eq i32 %and186, 0
  br i1 %cmp187, label %land.rhs189, label %land.end202

land.rhs189:                                      ; preds = %sw.bb184
  %call190 = call i16** @__ctype_b_loc() #6
  %69 = load i16*, i16** %call190, align 8
  %70 = load i8, i8* %character.addr, align 1
  %conv191 = zext i8 %70 to i32
  %idxprom192 = sext i32 %conv191 to i64
  %arrayidx193 = getelementptr inbounds i16, i16* %69, i64 %idxprom192
  %71 = load i16, i16* %arrayidx193, align 2
  %conv194 = zext i16 %71 to i32
  %and195 = and i32 %conv194, 8
  %tobool196 = icmp ne i32 %and195, 0
  br i1 %tobool196, label %lor.end201, label %lor.rhs197

lor.rhs197:                                       ; preds = %land.rhs189
  %72 = load i8, i8* %character.addr, align 1
  %conv198 = zext i8 %72 to i32
  %cmp199 = icmp eq i32 %conv198, 95
  br label %lor.end201

lor.end201:                                       ; preds = %lor.rhs197, %land.rhs189
  %73 = phi i1 [ true, %land.rhs189 ], [ %cmp199, %lor.rhs197 ]
  br label %land.end202

land.end202:                                      ; preds = %lor.end201, %sw.bb184
  %74 = phi i1 [ false, %sw.bb184 ], [ %73, %lor.end201 ]
  store i1 %74, i1* %retval, align 1
  br label %return

sw.bb204:                                         ; preds = %entry
  %75 = load i8, i8* %character.addr, align 1
  %conv205 = zext i8 %75 to i32
  %and206 = and i32 %conv205, -128
  %cmp207 = icmp eq i32 %and206, 0
  br i1 %cmp207, label %land.rhs209, label %land.end217

land.rhs209:                                      ; preds = %sw.bb204
  %call210 = call i16** @__ctype_b_loc() #6
  %76 = load i16*, i16** %call210, align 8
  %77 = load i8, i8* %character.addr, align 1
  %conv211 = zext i8 %77 to i32
  %idxprom212 = sext i32 %conv211 to i64
  %arrayidx213 = getelementptr inbounds i16, i16* %76, i64 %idxprom212
  %78 = load i16, i16* %arrayidx213, align 2
  %conv214 = zext i16 %78 to i32
  %and215 = and i32 %conv214, 4096
  %tobool216 = icmp ne i32 %and215, 0
  br label %land.end217

land.end217:                                      ; preds = %land.rhs209, %sw.bb204
  %79 = phi i1 [ false, %sw.bb204 ], [ %tobool216, %land.rhs209 ]
  store i1 %79, i1* %retval, align 1
  br label %return

sw.default:                                       ; preds = %entry
  %80 = load i8, i8* %classnum.addr, align 1
  %conv219 = zext i8 %80 to i32
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.9, i64 0, i64 0), i32 %conv219)
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default
  store i1 false, i1* %retval, align 1
  br label %return

return:                                           ; preds = %sw.epilog, %land.end217, %land.end202, %land.end182, %land.end167, %land.end152, %land.end137, %land.end122, %land.end107, %land.end92, %land.end77, %lor.end, %cond.end, %sw.bb20, %land.end19, %land.end
  %81 = load i1, i1* %retval, align 1
  ret i1 %81
}

declare dso_local i64 @Perl_swash_fetch(%struct.sv*, i8*, i1 zeroext) #2

declare dso_local void @Perl_push_scope() #2

declare dso_local void @Perl_save_strlen(i64*) #2

declare dso_local %struct.sv* @Perl_sv_2mortal(%struct.sv*) #2

declare dso_local i64 @Perl__to_utf8_fold_flags(i8*, i8*, i64*, i8 zeroext) #2

declare dso_local i64 @Perl__to_fold_latin1(i8 zeroext, i8*, i64*, i32) #2

declare dso_local i8* @Perl_hv_common_key_len(%struct.hv*, i8*, i32, i32, %struct.sv*, i32) #2

declare dso_local i64 @Perl_sv_2iv_flags(%struct.sv*, i32) #2

declare dso_local void @Perl_free_tmps() #2

declare dso_local void @Perl_pop_scope() #2

; Function Attrs: noinline nounwind uwtable
define internal void @S_append_utf8_from_native_byte(i8 zeroext %byte, i8** %dest) #0 {
entry:
  %byte.addr = alloca i8, align 1
  %dest.addr = alloca i8**, align 8
  store i8 %byte, i8* %byte.addr, align 1
  store i8** %dest, i8*** %dest.addr, align 8
  %0 = load i8, i8* %byte.addr, align 1
  %conv = zext i8 %0 to i64
  %cmp = icmp ult i64 %conv, 128
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %1 = load i8, i8* %byte.addr, align 1
  %2 = load i8**, i8*** %dest.addr, align 8
  %3 = load i8*, i8** %2, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %3, i32 1
  store i8* %incdec.ptr, i8** %2, align 8
  store i8 %1, i8* %3, align 1
  br label %if.end

if.else:                                          ; preds = %entry
  %4 = load i8, i8* %byte.addr, align 1
  %conv2 = zext i8 %4 to i32
  %shr = ashr i32 %conv2, 6
  %or = or i32 %shr, 192
  %conv3 = trunc i32 %or to i8
  %5 = load i8**, i8*** %dest.addr, align 8
  %6 = load i8*, i8** %5, align 8
  %incdec.ptr4 = getelementptr inbounds i8, i8* %6, i32 1
  store i8* %incdec.ptr4, i8** %5, align 8
  store i8 %conv3, i8* %6, align 1
  %7 = load i8, i8* %byte.addr, align 1
  %conv5 = zext i8 %7 to i32
  %and = and i32 %conv5, 63
  %or6 = or i32 %and, 128
  %conv7 = trunc i32 %or6 to i8
  %8 = load i8**, i8*** %dest.addr, align 8
  %9 = load i8*, i8** %8, align 8
  %incdec.ptr8 = getelementptr inbounds i8, i8* %9, i32 1
  store i8* %incdec.ptr8, i8** %8, align 8
  store i8 %conv7, i8* %9, align 1
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i1 @S__invlist_contains_cp(%struct.sv* %invlist, i64 %cp) #0 {
entry:
  %invlist.addr = alloca %struct.sv*, align 8
  %cp.addr = alloca i64, align 8
  %index = alloca i64, align 8
  store %struct.sv* %invlist, %struct.sv** %invlist.addr, align 8
  store i64 %cp, i64* %cp.addr, align 8
  %0 = load %struct.sv*, %struct.sv** %invlist.addr, align 8
  %1 = load i64, i64* %cp.addr, align 8
  %call = call i64 @Perl__invlist_search(%struct.sv* %0, i64 %1)
  store i64 %call, i64* %index, align 8
  %2 = load i64, i64* %index, align 8
  %cmp = icmp sge i64 %2, 0
  br i1 %cmp, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %entry
  %3 = load i64, i64* %index, align 8
  %and = and i64 %3, 1
  %tobool = icmp ne i64 %and, 0
  %lnot = xor i1 %tobool, true
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %4 = phi i1 [ false, %entry ], [ %lnot, %land.rhs ]
  ret i1 %4
}

declare dso_local void @Perl_warner(i32, i8*, ...) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @S_backup_one_SB(i8* %strbeg, i8** %curpos, i1 zeroext %utf8_target) #0 {
entry:
  %retval = alloca i32, align 4
  %strbeg.addr = alloca i8*, align 8
  %curpos.addr = alloca i8**, align 8
  %utf8_target.addr = alloca i8, align 1
  %sb = alloca i32, align 4
  %prev_char_pos = alloca i8*, align 8
  %prev_prev_char_pos = alloca i8*, align 8
  store i8* %strbeg, i8** %strbeg.addr, align 8
  store i8** %curpos, i8*** %curpos.addr, align 8
  %frombool = zext i1 %utf8_target to i8
  store i8 %frombool, i8* %utf8_target.addr, align 1
  %0 = load i8**, i8*** %curpos.addr, align 8
  %1 = load i8*, i8** %0, align 8
  %2 = load i8*, i8** %strbeg.addr, align 8
  %cmp = icmp ult i8* %1, %2
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 4, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %entry
  %3 = load i8, i8* %utf8_target.addr, align 1
  %tobool = trunc i8 %3 to i1
  br i1 %tobool, label %if.then1, label %if.else14

if.then1:                                         ; preds = %if.end
  %4 = load i8**, i8*** %curpos.addr, align 8
  %5 = load i8*, i8** %4, align 8
  %6 = load i8*, i8** %strbeg.addr, align 8
  %call = call i8* @S_reghopmaybe3(i8* %5, i64 -1, i8* %6)
  store i8* %call, i8** %prev_char_pos, align 8
  %7 = load i8*, i8** %prev_char_pos, align 8
  %tobool2 = icmp ne i8* %7, null
  br i1 %tobool2, label %if.end4, label %if.then3

if.then3:                                         ; preds = %if.then1
  store i32 4, i32* %retval, align 4
  br label %return

if.end4:                                          ; preds = %if.then1
  br label %do.body

do.body:                                          ; preds = %lor.end, %if.end4
  %8 = load i8*, i8** %prev_char_pos, align 8
  %9 = load i8*, i8** %strbeg.addr, align 8
  %call5 = call i8* @S_reghopmaybe3(i8* %8, i64 -1, i8* %9)
  store i8* %call5, i8** %prev_prev_char_pos, align 8
  %tobool6 = icmp ne i8* %call5, null
  br i1 %tobool6, label %if.then7, label %if.else

if.then7:                                         ; preds = %do.body
  %10 = load %struct.sv*, %struct.sv** @PL_SB_invlist, align 8
  %11 = load i8*, i8** %prev_prev_char_pos, align 8
  %12 = load i8*, i8** %prev_char_pos, align 8
  %13 = load i8*, i8** %prev_prev_char_pos, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %12 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %13 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %call8 = call zeroext i1 @Perl_ckwarn_d(i32 44)
  %14 = zext i1 %call8 to i64
  %cond = select i1 %call8, i32 0, i32 -8161
  %call9 = call i64 @Perl_utf8n_to_uvchr(i8* %11, i64 %sub.ptr.sub, i64* null, i32 %cond)
  %call10 = call i64 @Perl__invlist_search(%struct.sv* %10, i64 %call9)
  %arrayidx = getelementptr inbounds [2835 x i32], [2835 x i32]* @Sentence_Break_invmap, i64 0, i64 %call10
  %15 = load i32, i32* %arrayidx, align 4
  store i32 %15, i32* %sb, align 4
  %16 = load i8*, i8** %prev_char_pos, align 8
  %17 = load i8**, i8*** %curpos.addr, align 8
  store i8* %16, i8** %17, align 8
  %18 = load i8*, i8** %prev_prev_char_pos, align 8
  store i8* %18, i8** %prev_char_pos, align 8
  br label %if.end11

if.else:                                          ; preds = %do.body
  %19 = load i8*, i8** %strbeg.addr, align 8
  %20 = load i8**, i8*** %curpos.addr, align 8
  store i8* %19, i8** %20, align 8
  store i32 4, i32* %retval, align 4
  br label %return

if.end11:                                         ; preds = %if.then7
  br label %do.cond

do.cond:                                          ; preds = %if.end11
  %21 = load i32, i32* %sb, align 4
  %cmp12 = icmp eq i32 %21, 5
  br i1 %cmp12, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %do.cond
  %22 = load i32, i32* %sb, align 4
  %cmp13 = icmp eq i32 %22, 6
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %do.cond
  %23 = phi i1 [ true, %do.cond ], [ %cmp13, %lor.rhs ]
  br i1 %23, label %do.body, label %do.end

do.end:                                           ; preds = %lor.end
  br label %if.end30

if.else14:                                        ; preds = %if.end
  br label %do.body15

do.body15:                                        ; preds = %lor.end28, %if.else14
  %24 = load i8**, i8*** %curpos.addr, align 8
  %25 = load i8*, i8** %24, align 8
  %add.ptr = getelementptr inbounds i8, i8* %25, i64 -2
  %26 = load i8*, i8** %strbeg.addr, align 8
  %cmp16 = icmp ult i8* %add.ptr, %26
  br i1 %cmp16, label %if.then17, label %if.end18

if.then17:                                        ; preds = %do.body15
  %27 = load i8*, i8** %strbeg.addr, align 8
  %28 = load i8**, i8*** %curpos.addr, align 8
  store i8* %27, i8** %28, align 8
  store i32 4, i32* %retval, align 4
  br label %return

if.end18:                                         ; preds = %do.body15
  %29 = load i8**, i8*** %curpos.addr, align 8
  %30 = load i8*, i8** %29, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %30, i32 -1
  store i8* %incdec.ptr, i8** %29, align 8
  %31 = load %struct.sv*, %struct.sv** @PL_SB_invlist, align 8
  %32 = load i8**, i8*** %curpos.addr, align 8
  %33 = load i8*, i8** %32, align 8
  %add.ptr19 = getelementptr inbounds i8, i8* %33, i64 -1
  %34 = load i8, i8* %add.ptr19, align 1
  %conv = zext i8 %34 to i64
  %call20 = call i64 @Perl__invlist_search(%struct.sv* %31, i64 %conv)
  %arrayidx21 = getelementptr inbounds [2835 x i32], [2835 x i32]* @Sentence_Break_invmap, i64 0, i64 %call20
  %35 = load i32, i32* %arrayidx21, align 4
  store i32 %35, i32* %sb, align 4
  br label %do.cond22

do.cond22:                                        ; preds = %if.end18
  %36 = load i32, i32* %sb, align 4
  %cmp23 = icmp eq i32 %36, 5
  br i1 %cmp23, label %lor.end28, label %lor.rhs25

lor.rhs25:                                        ; preds = %do.cond22
  %37 = load i32, i32* %sb, align 4
  %cmp26 = icmp eq i32 %37, 6
  br label %lor.end28

lor.end28:                                        ; preds = %lor.rhs25, %do.cond22
  %38 = phi i1 [ true, %do.cond22 ], [ %cmp26, %lor.rhs25 ]
  br i1 %38, label %do.body15, label %do.end29

do.end29:                                         ; preds = %lor.end28
  br label %if.end30

if.end30:                                         ; preds = %do.end29, %do.end
  %39 = load i32, i32* %sb, align 4
  store i32 %39, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.end30, %if.then17, %if.else, %if.then3, %if.then
  %40 = load i32, i32* %retval, align 4
  ret i32 %40
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @S_advance_one_SB(i8** %curpos, i8* %strend, i1 zeroext %utf8_target) #0 {
entry:
  %retval = alloca i32, align 4
  %curpos.addr = alloca i8**, align 8
  %strend.addr = alloca i8*, align 8
  %utf8_target.addr = alloca i8, align 1
  %sb = alloca i32, align 4
  store i8** %curpos, i8*** %curpos.addr, align 8
  store i8* %strend, i8** %strend.addr, align 8
  %frombool = zext i1 %utf8_target to i8
  store i8 %frombool, i8* %utf8_target.addr, align 1
  %0 = load i8**, i8*** %curpos.addr, align 8
  %1 = load i8*, i8** %0, align 8
  %2 = load i8*, i8** %strend.addr, align 8
  %cmp = icmp uge i8* %1, %2
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 4, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %entry
  %3 = load i8, i8* %utf8_target.addr, align 1
  %tobool = trunc i8 %3 to i1
  br i1 %tobool, label %if.then1, label %if.else

if.then1:                                         ; preds = %if.end
  br label %do.body

do.body:                                          ; preds = %lor.end, %if.then1
  %4 = load i8**, i8*** %curpos.addr, align 8
  %5 = load i8*, i8** %4, align 8
  %6 = load i8, i8* %5, align 1
  %idxprom = zext i8 %6 to i64
  %arrayidx = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom
  %7 = load i8, i8* %arrayidx, align 1
  %conv = zext i8 %7 to i32
  %8 = load i8**, i8*** %curpos.addr, align 8
  %9 = load i8*, i8** %8, align 8
  %idx.ext = sext i32 %conv to i64
  %add.ptr = getelementptr inbounds i8, i8* %9, i64 %idx.ext
  store i8* %add.ptr, i8** %8, align 8
  %10 = load i8**, i8*** %curpos.addr, align 8
  %11 = load i8*, i8** %10, align 8
  %12 = load i8*, i8** %strend.addr, align 8
  %cmp2 = icmp uge i8* %11, %12
  br i1 %cmp2, label %if.then4, label %if.end5

if.then4:                                         ; preds = %do.body
  store i32 4, i32* %retval, align 4
  br label %return

if.end5:                                          ; preds = %do.body
  %13 = load %struct.sv*, %struct.sv** @PL_SB_invlist, align 8
  %14 = load i8**, i8*** %curpos.addr, align 8
  %15 = load i8*, i8** %14, align 8
  %16 = load i8*, i8** %strend.addr, align 8
  %17 = load i8**, i8*** %curpos.addr, align 8
  %18 = load i8*, i8** %17, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %16 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %18 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %call = call zeroext i1 @Perl_ckwarn_d(i32 44)
  %19 = zext i1 %call to i64
  %cond = select i1 %call, i32 0, i32 -8161
  %call7 = call i64 @Perl_utf8n_to_uvchr(i8* %15, i64 %sub.ptr.sub, i64* null, i32 %cond)
  %call8 = call i64 @Perl__invlist_search(%struct.sv* %13, i64 %call7)
  %arrayidx9 = getelementptr inbounds [2835 x i32], [2835 x i32]* @Sentence_Break_invmap, i64 0, i64 %call8
  %20 = load i32, i32* %arrayidx9, align 4
  store i32 %20, i32* %sb, align 4
  br label %do.cond

do.cond:                                          ; preds = %if.end5
  %21 = load i32, i32* %sb, align 4
  %cmp10 = icmp eq i32 %21, 5
  br i1 %cmp10, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %do.cond
  %22 = load i32, i32* %sb, align 4
  %cmp12 = icmp eq i32 %22, 6
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %do.cond
  %23 = phi i1 [ true, %do.cond ], [ %cmp12, %lor.rhs ]
  br i1 %23, label %do.body, label %do.end

do.end:                                           ; preds = %lor.end
  br label %if.end30

if.else:                                          ; preds = %if.end
  br label %do.body14

do.body14:                                        ; preds = %lor.end28, %if.else
  %24 = load i8**, i8*** %curpos.addr, align 8
  %25 = load i8*, i8** %24, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %25, i32 1
  store i8* %incdec.ptr, i8** %24, align 8
  %26 = load i8**, i8*** %curpos.addr, align 8
  %27 = load i8*, i8** %26, align 8
  %28 = load i8*, i8** %strend.addr, align 8
  %cmp15 = icmp uge i8* %27, %28
  br i1 %cmp15, label %if.then17, label %if.end18

if.then17:                                        ; preds = %do.body14
  store i32 4, i32* %retval, align 4
  br label %return

if.end18:                                         ; preds = %do.body14
  %29 = load %struct.sv*, %struct.sv** @PL_SB_invlist, align 8
  %30 = load i8**, i8*** %curpos.addr, align 8
  %31 = load i8*, i8** %30, align 8
  %32 = load i8, i8* %31, align 1
  %conv19 = zext i8 %32 to i64
  %call20 = call i64 @Perl__invlist_search(%struct.sv* %29, i64 %conv19)
  %arrayidx21 = getelementptr inbounds [2835 x i32], [2835 x i32]* @Sentence_Break_invmap, i64 0, i64 %call20
  %33 = load i32, i32* %arrayidx21, align 4
  store i32 %33, i32* %sb, align 4
  br label %do.cond22

do.cond22:                                        ; preds = %if.end18
  %34 = load i32, i32* %sb, align 4
  %cmp23 = icmp eq i32 %34, 5
  br i1 %cmp23, label %lor.end28, label %lor.rhs25

lor.rhs25:                                        ; preds = %do.cond22
  %35 = load i32, i32* %sb, align 4
  %cmp26 = icmp eq i32 %35, 6
  br label %lor.end28

lor.end28:                                        ; preds = %lor.rhs25, %do.cond22
  %36 = phi i1 [ true, %do.cond22 ], [ %cmp26, %lor.rhs25 ]
  br i1 %36, label %do.body14, label %do.end29

do.end29:                                         ; preds = %lor.end28
  br label %if.end30

if.end30:                                         ; preds = %do.end29, %do.end
  %37 = load i32, i32* %sb, align 4
  store i32 %37, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.end30, %if.then17, %if.then4, %if.then
  %38 = load i32, i32* %retval, align 4
  ret i32 %38
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @S_backup_one_WB(i32* %previous, i8* %strbeg, i8** %curpos, i1 zeroext %utf8_target) #0 {
entry:
  %retval = alloca i32, align 4
  %previous.addr = alloca i32*, align 8
  %strbeg.addr = alloca i8*, align 8
  %curpos.addr = alloca i8**, align 8
  %utf8_target.addr = alloca i8, align 1
  %wb = alloca i32, align 4
  %prev_char_pos = alloca i8*, align 8
  %prev_prev_char_pos = alloca i8*, align 8
  store i32* %previous, i32** %previous.addr, align 8
  store i8* %strbeg, i8** %strbeg.addr, align 8
  store i8** %curpos, i8*** %curpos.addr, align 8
  %frombool = zext i1 %utf8_target to i8
  store i8 %frombool, i8* %utf8_target.addr, align 1
  %0 = load i32*, i32** %previous.addr, align 8
  %1 = load i32, i32* %0, align 4
  %cmp = icmp ne i32 %1, 18
  br i1 %cmp, label %if.then, label %if.end11

if.then:                                          ; preds = %entry
  %2 = load i32*, i32** %previous.addr, align 8
  %3 = load i32, i32* %2, align 4
  store i32 %3, i32* %wb, align 4
  %4 = load i8, i8* %utf8_target.addr, align 1
  %tobool = trunc i8 %4 to i1
  br i1 %tobool, label %if.then1, label %if.else4

if.then1:                                         ; preds = %if.then
  %5 = load i8**, i8*** %curpos.addr, align 8
  %6 = load i8*, i8** %5, align 8
  %7 = load i8*, i8** %strbeg.addr, align 8
  %call = call i8* @S_reghopmaybe3(i8* %6, i64 -1, i8* %7)
  %8 = load i8**, i8*** %curpos.addr, align 8
  store i8* %call, i8** %8, align 8
  %9 = load i8**, i8*** %curpos.addr, align 8
  %10 = load i8*, i8** %9, align 8
  %tobool2 = icmp ne i8* %10, null
  br i1 %tobool2, label %if.else, label %if.then3

if.then3:                                         ; preds = %if.then1
  %11 = load i32*, i32** %previous.addr, align 8
  store i32 4, i32* %11, align 4
  %12 = load i8*, i8** %strbeg.addr, align 8
  %13 = load i8**, i8*** %curpos.addr, align 8
  store i8* %12, i8** %13, align 8
  br label %if.end

if.else:                                          ; preds = %if.then1
  %14 = load i32*, i32** %previous.addr, align 8
  store i32 18, i32* %14, align 4
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then3
  br label %if.end6

if.else4:                                         ; preds = %if.then
  %15 = load i8**, i8*** %curpos.addr, align 8
  %16 = load i8*, i8** %15, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %16, i32 -1
  store i8* %incdec.ptr, i8** %15, align 8
  %17 = load i8**, i8*** %curpos.addr, align 8
  %18 = load i8*, i8** %17, align 8
  %19 = load i8*, i8** %strbeg.addr, align 8
  %cmp5 = icmp ule i8* %18, %19
  %20 = zext i1 %cmp5 to i64
  %cond = select i1 %cmp5, i32 4, i32 18
  %21 = load i32*, i32** %previous.addr, align 8
  store i32 %cond, i32* %21, align 4
  br label %if.end6

if.end6:                                          ; preds = %if.else4, %if.end
  %22 = load i32, i32* %wb, align 4
  %cmp7 = icmp ne i32 %22, 5
  br i1 %cmp7, label %land.lhs.true, label %if.end10

land.lhs.true:                                    ; preds = %if.end6
  %23 = load i32, i32* %wb, align 4
  %cmp8 = icmp ne i32 %23, 7
  br i1 %cmp8, label %if.then9, label %if.end10

if.then9:                                         ; preds = %land.lhs.true
  %24 = load i32, i32* %wb, align 4
  store i32 %24, i32* %retval, align 4
  br label %return

if.end10:                                         ; preds = %land.lhs.true, %if.end6
  br label %if.end11

if.end11:                                         ; preds = %if.end10, %entry
  %25 = load i8**, i8*** %curpos.addr, align 8
  %26 = load i8*, i8** %25, align 8
  %27 = load i8*, i8** %strbeg.addr, align 8
  %cmp12 = icmp ult i8* %26, %27
  br i1 %cmp12, label %if.then13, label %if.end14

if.then13:                                        ; preds = %if.end11
  store i32 4, i32* %retval, align 4
  br label %return

if.end14:                                         ; preds = %if.end11
  %28 = load i8, i8* %utf8_target.addr, align 1
  %tobool15 = trunc i8 %28 to i1
  br i1 %tobool15, label %if.then16, label %if.else32

if.then16:                                        ; preds = %if.end14
  %29 = load i8**, i8*** %curpos.addr, align 8
  %30 = load i8*, i8** %29, align 8
  %31 = load i8*, i8** %strbeg.addr, align 8
  %call17 = call i8* @S_reghopmaybe3(i8* %30, i64 -1, i8* %31)
  store i8* %call17, i8** %prev_char_pos, align 8
  %32 = load i8*, i8** %prev_char_pos, align 8
  %tobool18 = icmp ne i8* %32, null
  br i1 %tobool18, label %if.end20, label %if.then19

if.then19:                                        ; preds = %if.then16
  store i32 4, i32* %retval, align 4
  br label %return

if.end20:                                         ; preds = %if.then16
  br label %do.body

do.body:                                          ; preds = %lor.end, %if.end20
  %33 = load i8*, i8** %prev_char_pos, align 8
  %34 = load i8*, i8** %strbeg.addr, align 8
  %call21 = call i8* @S_reghopmaybe3(i8* %33, i64 -1, i8* %34)
  store i8* %call21, i8** %prev_prev_char_pos, align 8
  %tobool22 = icmp ne i8* %call21, null
  br i1 %tobool22, label %if.then23, label %if.else28

if.then23:                                        ; preds = %do.body
  %35 = load %struct.sv*, %struct.sv** @PL_WB_invlist, align 8
  %36 = load i8*, i8** %prev_prev_char_pos, align 8
  %37 = load i8*, i8** %prev_char_pos, align 8
  %38 = load i8*, i8** %prev_prev_char_pos, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %37 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %38 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %call24 = call zeroext i1 @Perl_ckwarn_d(i32 44)
  %39 = zext i1 %call24 to i64
  %cond25 = select i1 %call24, i32 0, i32 -8161
  %call26 = call i64 @Perl_utf8n_to_uvchr(i8* %36, i64 %sub.ptr.sub, i64* null, i32 %cond25)
  %call27 = call i64 @Perl__invlist_search(%struct.sv* %35, i64 %call26)
  %arrayidx = getelementptr inbounds [1480 x i32], [1480 x i32]* @Word_Break_invmap, i64 0, i64 %call27
  %40 = load i32, i32* %arrayidx, align 4
  store i32 %40, i32* %wb, align 4
  %41 = load i8*, i8** %prev_char_pos, align 8
  %42 = load i8**, i8*** %curpos.addr, align 8
  store i8* %41, i8** %42, align 8
  %43 = load i8*, i8** %prev_prev_char_pos, align 8
  store i8* %43, i8** %prev_char_pos, align 8
  br label %if.end29

if.else28:                                        ; preds = %do.body
  %44 = load i8*, i8** %strbeg.addr, align 8
  %45 = load i8**, i8*** %curpos.addr, align 8
  store i8* %44, i8** %45, align 8
  store i32 4, i32* %retval, align 4
  br label %return

if.end29:                                         ; preds = %if.then23
  br label %do.cond

do.cond:                                          ; preds = %if.end29
  %46 = load i32, i32* %wb, align 4
  %cmp30 = icmp eq i32 %46, 5
  br i1 %cmp30, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %do.cond
  %47 = load i32, i32* %wb, align 4
  %cmp31 = icmp eq i32 %47, 7
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %do.cond
  %48 = phi i1 [ true, %do.cond ], [ %cmp31, %lor.rhs ]
  br i1 %48, label %do.body, label %do.end

do.end:                                           ; preds = %lor.end
  br label %if.end49

if.else32:                                        ; preds = %if.end14
  br label %do.body33

do.body33:                                        ; preds = %lor.end47, %if.else32
  %49 = load i8**, i8*** %curpos.addr, align 8
  %50 = load i8*, i8** %49, align 8
  %add.ptr = getelementptr inbounds i8, i8* %50, i64 -2
  %51 = load i8*, i8** %strbeg.addr, align 8
  %cmp34 = icmp ult i8* %add.ptr, %51
  br i1 %cmp34, label %if.then35, label %if.end36

if.then35:                                        ; preds = %do.body33
  %52 = load i8*, i8** %strbeg.addr, align 8
  %53 = load i8**, i8*** %curpos.addr, align 8
  store i8* %52, i8** %53, align 8
  store i32 4, i32* %retval, align 4
  br label %return

if.end36:                                         ; preds = %do.body33
  %54 = load i8**, i8*** %curpos.addr, align 8
  %55 = load i8*, i8** %54, align 8
  %incdec.ptr37 = getelementptr inbounds i8, i8* %55, i32 -1
  store i8* %incdec.ptr37, i8** %54, align 8
  %56 = load %struct.sv*, %struct.sv** @PL_WB_invlist, align 8
  %57 = load i8**, i8*** %curpos.addr, align 8
  %58 = load i8*, i8** %57, align 8
  %add.ptr38 = getelementptr inbounds i8, i8* %58, i64 -1
  %59 = load i8, i8* %add.ptr38, align 1
  %conv = zext i8 %59 to i64
  %call39 = call i64 @Perl__invlist_search(%struct.sv* %56, i64 %conv)
  %arrayidx40 = getelementptr inbounds [1480 x i32], [1480 x i32]* @Word_Break_invmap, i64 0, i64 %call39
  %60 = load i32, i32* %arrayidx40, align 4
  store i32 %60, i32* %wb, align 4
  br label %do.cond41

do.cond41:                                        ; preds = %if.end36
  %61 = load i32, i32* %wb, align 4
  %cmp42 = icmp eq i32 %61, 5
  br i1 %cmp42, label %lor.end47, label %lor.rhs44

lor.rhs44:                                        ; preds = %do.cond41
  %62 = load i32, i32* %wb, align 4
  %cmp45 = icmp eq i32 %62, 7
  br label %lor.end47

lor.end47:                                        ; preds = %lor.rhs44, %do.cond41
  %63 = phi i1 [ true, %do.cond41 ], [ %cmp45, %lor.rhs44 ]
  br i1 %63, label %do.body33, label %do.end48

do.end48:                                         ; preds = %lor.end47
  br label %if.end49

if.end49:                                         ; preds = %do.end48, %do.end
  %64 = load i32, i32* %wb, align 4
  store i32 %64, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.end49, %if.then35, %if.else28, %if.then19, %if.then13, %if.then9
  %65 = load i32, i32* %retval, align 4
  ret i32 %65
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @S_advance_one_WB(i8** %curpos, i8* %strend, i1 zeroext %utf8_target) #0 {
entry:
  %retval = alloca i32, align 4
  %curpos.addr = alloca i8**, align 8
  %strend.addr = alloca i8*, align 8
  %utf8_target.addr = alloca i8, align 1
  %wb = alloca i32, align 4
  store i8** %curpos, i8*** %curpos.addr, align 8
  store i8* %strend, i8** %strend.addr, align 8
  %frombool = zext i1 %utf8_target to i8
  store i8 %frombool, i8* %utf8_target.addr, align 1
  %0 = load i8**, i8*** %curpos.addr, align 8
  %1 = load i8*, i8** %0, align 8
  %2 = load i8*, i8** %strend.addr, align 8
  %cmp = icmp uge i8* %1, %2
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 4, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %entry
  %3 = load i8, i8* %utf8_target.addr, align 1
  %tobool = trunc i8 %3 to i1
  br i1 %tobool, label %if.then1, label %if.else

if.then1:                                         ; preds = %if.end
  br label %do.body

do.body:                                          ; preds = %lor.end, %if.then1
  %4 = load i8**, i8*** %curpos.addr, align 8
  %5 = load i8*, i8** %4, align 8
  %6 = load i8, i8* %5, align 1
  %idxprom = zext i8 %6 to i64
  %arrayidx = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom
  %7 = load i8, i8* %arrayidx, align 1
  %conv = zext i8 %7 to i32
  %8 = load i8**, i8*** %curpos.addr, align 8
  %9 = load i8*, i8** %8, align 8
  %idx.ext = sext i32 %conv to i64
  %add.ptr = getelementptr inbounds i8, i8* %9, i64 %idx.ext
  store i8* %add.ptr, i8** %8, align 8
  %10 = load i8**, i8*** %curpos.addr, align 8
  %11 = load i8*, i8** %10, align 8
  %12 = load i8*, i8** %strend.addr, align 8
  %cmp2 = icmp uge i8* %11, %12
  br i1 %cmp2, label %if.then4, label %if.end5

if.then4:                                         ; preds = %do.body
  store i32 4, i32* %retval, align 4
  br label %return

if.end5:                                          ; preds = %do.body
  %13 = load %struct.sv*, %struct.sv** @PL_WB_invlist, align 8
  %14 = load i8**, i8*** %curpos.addr, align 8
  %15 = load i8*, i8** %14, align 8
  %16 = load i8*, i8** %strend.addr, align 8
  %17 = load i8**, i8*** %curpos.addr, align 8
  %18 = load i8*, i8** %17, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %16 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %18 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %call = call zeroext i1 @Perl_ckwarn_d(i32 44)
  %19 = zext i1 %call to i64
  %cond = select i1 %call, i32 0, i32 -8161
  %call7 = call i64 @Perl_utf8n_to_uvchr(i8* %15, i64 %sub.ptr.sub, i64* null, i32 %cond)
  %call8 = call i64 @Perl__invlist_search(%struct.sv* %13, i64 %call7)
  %arrayidx9 = getelementptr inbounds [1480 x i32], [1480 x i32]* @Word_Break_invmap, i64 0, i64 %call8
  %20 = load i32, i32* %arrayidx9, align 4
  store i32 %20, i32* %wb, align 4
  br label %do.cond

do.cond:                                          ; preds = %if.end5
  %21 = load i32, i32* %wb, align 4
  %cmp10 = icmp eq i32 %21, 5
  br i1 %cmp10, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %do.cond
  %22 = load i32, i32* %wb, align 4
  %cmp12 = icmp eq i32 %22, 7
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %do.cond
  %23 = phi i1 [ true, %do.cond ], [ %cmp12, %lor.rhs ]
  br i1 %23, label %do.body, label %do.end

do.end:                                           ; preds = %lor.end
  br label %if.end30

if.else:                                          ; preds = %if.end
  br label %do.body14

do.body14:                                        ; preds = %lor.end28, %if.else
  %24 = load i8**, i8*** %curpos.addr, align 8
  %25 = load i8*, i8** %24, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %25, i32 1
  store i8* %incdec.ptr, i8** %24, align 8
  %26 = load i8**, i8*** %curpos.addr, align 8
  %27 = load i8*, i8** %26, align 8
  %28 = load i8*, i8** %strend.addr, align 8
  %cmp15 = icmp uge i8* %27, %28
  br i1 %cmp15, label %if.then17, label %if.end18

if.then17:                                        ; preds = %do.body14
  store i32 4, i32* %retval, align 4
  br label %return

if.end18:                                         ; preds = %do.body14
  %29 = load %struct.sv*, %struct.sv** @PL_WB_invlist, align 8
  %30 = load i8**, i8*** %curpos.addr, align 8
  %31 = load i8*, i8** %30, align 8
  %32 = load i8, i8* %31, align 1
  %conv19 = zext i8 %32 to i64
  %call20 = call i64 @Perl__invlist_search(%struct.sv* %29, i64 %conv19)
  %arrayidx21 = getelementptr inbounds [1480 x i32], [1480 x i32]* @Word_Break_invmap, i64 0, i64 %call20
  %33 = load i32, i32* %arrayidx21, align 4
  store i32 %33, i32* %wb, align 4
  br label %do.cond22

do.cond22:                                        ; preds = %if.end18
  %34 = load i32, i32* %wb, align 4
  %cmp23 = icmp eq i32 %34, 5
  br i1 %cmp23, label %lor.end28, label %lor.rhs25

lor.rhs25:                                        ; preds = %do.cond22
  %35 = load i32, i32* %wb, align 4
  %cmp26 = icmp eq i32 %35, 7
  br label %lor.end28

lor.end28:                                        ; preds = %lor.rhs25, %do.cond22
  %36 = phi i1 [ true, %do.cond22 ], [ %cmp26, %lor.rhs25 ]
  br i1 %36, label %do.body14, label %do.end29

do.end29:                                         ; preds = %lor.end28
  br label %if.end30

if.end30:                                         ; preds = %do.end29, %do.end
  %37 = load i32, i32* %wb, align 4
  store i32 %37, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.end30, %if.then17, %if.then4, %if.then
  %38 = load i32, i32* %retval, align 4
  ret i32 %38
}

; Function Attrs: noinline nounwind uwtable
define internal i64 @S_sv_or_pv_pos_u2b(%struct.sv* %sv, i8* %pv, i64 %pos, i64* %lenp) #0 {
entry:
  %retval = alloca i64, align 8
  %sv.addr = alloca %struct.sv*, align 8
  %pv.addr = alloca i8*, align 8
  %pos.addr = alloca i64, align 8
  %lenp.addr = alloca i64*, align 8
  %hopped = alloca i8*, align 8
  store %struct.sv* %sv, %struct.sv** %sv.addr, align 8
  store i8* %pv, i8** %pv.addr, align 8
  store i64 %pos, i64* %pos.addr, align 8
  store i64* %lenp, i64** %lenp.addr, align 8
  %0 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %0, i32 0, i32 2
  %1 = load i32, i32* %sv_flags, align 4
  %and = and i32 %1, 2097152
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_flags1 = getelementptr inbounds %struct.sv, %struct.sv* %2, i32 0, i32 2
  %3 = load i32, i32* %sv_flags1, align 4
  %and2 = and i32 %3, 2048
  %tobool3 = icmp ne i32 %and2, 0
  br i1 %tobool3, label %land.lhs.true, label %if.end20

land.lhs.true:                                    ; preds = %lor.lhs.false
  %4 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_u = getelementptr inbounds %struct.sv, %struct.sv* %4, i32 0, i32 3
  %svu_rv = bitcast %union.anon* %sv_u to %struct.sv**
  %5 = load %struct.sv*, %struct.sv** %svu_rv, align 8
  %sv_flags4 = getelementptr inbounds %struct.sv, %struct.sv* %5, i32 0, i32 2
  %6 = load i32, i32* %sv_flags4, align 4
  %and5 = and i32 %6, 1048576
  %tobool6 = icmp ne i32 %and5, 0
  br i1 %tobool6, label %land.lhs.true7, label %if.end20

land.lhs.true7:                                   ; preds = %land.lhs.true
  %7 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_u8 = getelementptr inbounds %struct.sv, %struct.sv* %7, i32 0, i32 3
  %svu_rv9 = bitcast %union.anon* %sv_u8 to %struct.sv**
  %8 = load %struct.sv*, %struct.sv** %svu_rv9, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %8, i32 0, i32 0
  %9 = load i8*, i8** %sv_any, align 8
  %10 = bitcast i8* %9 to %struct.xpvmg*
  %xmg_stash = getelementptr inbounds %struct.xpvmg, %struct.xpvmg* %10, i32 0, i32 0
  %11 = load %struct.hv*, %struct.hv** %xmg_stash, align 8
  %sv_flags10 = getelementptr inbounds %struct.hv, %struct.hv* %11, i32 0, i32 2
  %12 = load i32, i32* %sv_flags10, align 4
  %and11 = and i32 %12, 268435456
  %tobool12 = icmp ne i32 %and11, 0
  br i1 %tobool12, label %if.then, label %if.end20

if.then:                                          ; preds = %land.lhs.true7, %entry
  %13 = load i8*, i8** %pv.addr, align 8
  %14 = load i64, i64* %pos.addr, align 8
  %conv = trunc i64 %14 to i32
  %call = call i8* @Perl_utf8_hop(i8* %13, i32 %conv)
  store i8* %call, i8** %hopped, align 8
  %15 = load i64*, i64** %lenp.addr, align 8
  %tobool13 = icmp ne i64* %15, null
  br i1 %tobool13, label %if.then14, label %if.end

if.then14:                                        ; preds = %if.then
  %16 = load i8*, i8** %hopped, align 8
  %17 = load i64*, i64** %lenp.addr, align 8
  %18 = load i64, i64* %17, align 8
  %conv15 = trunc i64 %18 to i32
  %call16 = call i8* @Perl_utf8_hop(i8* %16, i32 %conv15)
  %19 = load i8*, i8** %hopped, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %call16 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %19 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %20 = load i64*, i64** %lenp.addr, align 8
  store i64 %sub.ptr.sub, i64* %20, align 8
  br label %if.end

if.end:                                           ; preds = %if.then14, %if.then
  %21 = load i8*, i8** %hopped, align 8
  %22 = load i8*, i8** %pv.addr, align 8
  %sub.ptr.lhs.cast17 = ptrtoint i8* %21 to i64
  %sub.ptr.rhs.cast18 = ptrtoint i8* %22 to i64
  %sub.ptr.sub19 = sub i64 %sub.ptr.lhs.cast17, %sub.ptr.rhs.cast18
  store i64 %sub.ptr.sub19, i64* %retval, align 8
  br label %return

if.end20:                                         ; preds = %land.lhs.true7, %land.lhs.true, %lor.lhs.false
  %23 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %24 = load i64, i64* %pos.addr, align 8
  %25 = load i64*, i64** %lenp.addr, align 8
  %call21 = call i64 @Perl_sv_pos_u2b_flags(%struct.sv* %23, i64 %24, i64* %25, i32 32)
  store i64 %call21, i64* %retval, align 8
  br label %return

return:                                           ; preds = %if.end20, %if.end
  %26 = load i64, i64* %retval, align 8
  ret i64 %26
}

declare dso_local i64 @Perl_sv_pos_u2b_flags(%struct.sv*, i64, i64*, i32) #2

declare dso_local void @Perl_sv_force_normal_flags(%struct.sv*, i32) #2

declare dso_local %struct.sv* @Perl_sv_setsv_cow(%struct.sv*, %struct.sv*) #2

declare dso_local i8* @Perl_safesysrealloc(i8*, i64) #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #4

declare dso_local i64 @Perl_sv_pos_b2u_flags(%struct.sv*, i64, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal i64 @S_regmatch(%struct.regmatch_info* %reginfo, i8* %startpos, %struct.regnode* %prog) #0 {
entry:
  %reginfo.addr = alloca %struct.regmatch_info*, align 8
  %startpos.addr = alloca i8*, align 8
  %prog.addr = alloca %struct.regnode*, align 8
  %utf8_target = alloca i8, align 1
  %uniflags = alloca i32, align 4
  %rex_sv = alloca %struct.p5rx*, align 8
  %rex = alloca %struct.regexp*, align 8
  %rexi = alloca %struct.regexp_internal*, align 8
  %st = alloca %struct.regmatch_state*, align 8
  %scan = alloca %struct.regnode*, align 8
  %next = alloca %struct.regnode*, align 8
  %n = alloca i32, align 4
  %ln = alloca i64, align 8
  %locinput = alloca i8*, align 8
  %pushinput = alloca i8*, align 8
  %nextchr = alloca i32, align 4
  %result = alloca i8, align 1
  %depth = alloca i32, align 4
  %nochange_depth = alloca i32, align 4
  %max_nochange_depth = alloca i32, align 4
  %yes_state = alloca %struct.regmatch_state*, align 8
  %mark_state = alloca %struct.regmatch_state*, align 8
  %cur_eval = alloca %struct.regmatch_state*, align 8
  %cur_curlyx = alloca %struct.regmatch_state*, align 8
  %state_num = alloca i32, align 4
  %no_final = alloca i8, align 1
  %do_cutgroup = alloca i8, align 1
  %startpoint = alloca i8*, align 8
  %popmark = alloca %struct.sv*, align 8
  %sv_commit = alloca %struct.sv*, align 8
  %sv_yes_mark = alloca %struct.sv*, align 8
  %lastopen = alloca i32, align 4
  %has_cutgroup = alloca i8, align 1
  %oreplsv = alloca %struct.sv*, align 8
  %sw = alloca i8, align 1
  %minmod = alloca i8, align 1
  %logical = alloca i32, align 4
  %last_pad = alloca %struct.av*, align 8
  %newsp = alloca %struct.sv**, align 8
  %cx = alloca %struct.context*, align 8
  %multicall_cv = alloca %struct.cv*, align 8
  %multicall_cop = alloca %struct.op*, align 8
  %multicall_oldcatch = alloca i8, align 1
  %hasargs = alloca i8, align 1
  %gimme = alloca i32, align 4
  %caller_cv = alloca %struct.cv*, align 8
  %last_pushed_cv = alloca %struct.cv*, align 8
  %runops_cp = alloca i32, align 4
  %maxopenparen = alloca i32, align 4
  %to_complement = alloca i32, align 4
  %classnum = alloca i32, align 4
  %is_utf8_pat = alloca i8, align 1
  %match = alloca i8, align 1
  %trie_type = alloca i32, align 4
  %trie = alloca %struct._reg_trie_data*, align 8
  %widecharmap = alloca %struct.hv*, align 8
  %state = alloca i32, align 4
  %uc = alloca i8*, align 8
  %len = alloca i64, align 8
  %foldlen = alloca i64, align 8
  %uscan = alloca i8*, align 8
  %foldbuf = alloca [14 x i8], align 1
  %charcount = alloca i32, align 4
  %accepted = alloca i32, align 4
  %base = alloca i32, align 4
  %uvc = alloca i64, align 8
  %charid = alloca i16, align 2
  %wordnum274 = alloca i16, align 2
  %offset = alloca i32, align 4
  %skiplen = alloca i64, align 8
  %flags330 = alloca i8, align 1
  %svpp = alloca %struct.sv**, align 8
  %w = alloca i16, align 2
  %uc546 = alloca i8*, align 8
  %min = alloca i16, align 2
  %word = alloca i16, align 2
  %nextword583 = alloca i16, align 2
  %wordinfo587 = alloca %struct.reg_trie_wordinfo*, align 8
  %chars = alloca i32, align 4
  %trie644 = alloca %struct._reg_trie_data*, align 8
  %foldbuf673 = alloca [14 x i8], align 1
  %foldlen674 = alloca i64, align 8
  %len675 = alloca i64, align 8
  %uvc676 = alloca i64, align 8
  %uscan677 = alloca i8*, align 8
  %s = alloca i8*, align 8
  %l = alloca i8*, align 8
  %e = alloca i8*, align 8
  %folder = alloca i32 (i8*, i8*, i32)*, align 8
  %fold_array = alloca i8*, align 8
  %s899 = alloca i8*, align 8
  %fold_utf8_flags = alloca i32, align 4
  %l930 = alloca i8*, align 8
  %e931 = alloca i8*, align 8
  %flags1940 = alloca i8, align 1
  %prev_gcb = alloca i32, align 4
  %cur_gcb = alloca i32, align 4
  %s2294 = alloca i8*, align 8
  %type2295 = alloca i8, align 1
  %folder2296 = alloca i32 (i8*, i8*, i32)*, align 8
  %fold_array2297 = alloca i8*, align 8
  %utf8_fold_flags = alloca i64, align 8
  %limit = alloca i8*, align 8
  %ret = alloca %struct.sv*, align 8
  %re_sv = alloca %struct.p5rx*, align 8
  %re = alloca %struct.regexp*, align 8
  %rei = alloca %struct.regexp_internal*, align 8
  %startpoint2412 = alloca %struct.regnode*, align 8
  %sp = alloca %struct.sv**, align 8
  %before = alloca i64, align 8
  %oop = alloca %struct.op*, align 8
  %ocurcop = alloca %struct.cop*, align 8
  %nop = alloca %struct.op*, align 8
  %newcv = alloca %struct.cv*, align 8
  %flags2521 = alloca i8, align 1
  %_nOnclAshIngNamE_ = alloca %struct.cv*, align 8
  %cv = alloca %struct.cv*, align 8
  %padlist = alloca %struct.padlist*, align 8
  %phlags = alloca i8, align 1
  %_nOnclAshIngNamE_2622 = alloca %struct.cv*, align 8
  %cv2623 = alloca %struct.cv*, align 8
  %padlist2624 = alloca %struct.padlist*, align 8
  %next2634 = alloca %struct.stackinfo*, align 8
  %phlags2705 = alloca i8, align 1
  %o = alloca %struct.op*, align 8
  %sv_mrk = alloca %struct.sv*, align 8
  %sv3028 = alloca %struct.sv*, align 8
  %mg = alloca %struct.magic*, align 8
  %pm_flags = alloca i32, align 4
  %len3095 = alloca i64, align 8
  %p = alloca i8*, align 8
  %save_sv = alloca %struct.sv*, align 8
  %cursor = alloca %struct.regnode*, align 8
  %parenfloor = alloca i32, align 4
  %n3518 = alloca i32, align 4
  %min3519 = alloca i32, align 4
  %max = alloca i32, align 4
  %A = alloca %struct.regnode*, align 8
  %size = alloca i64, align 8
  %aux = alloca %struct.regmatch_info_aux*, align 8
  %offset3631 = alloca i64, align 8
  %mask = alloca i64, align 8
  %paren = alloca i32, align 4
  %s4123 = alloca i8*, align 8
  %max4198 = alloca i32, align 4
  %text_node = alloca %struct.regnode*, align 8
  %type4486 = alloca i16, align 2
  %paren4620 = alloca i32, align 4
  %max4759 = alloca i32, align 4
  %text_node5010 = alloca %struct.regnode*, align 8
  %type5092 = alloca i16, align 2
  %li = alloca i8*, align 8
  %m = alloca i32, align 4
  %li5347 = alloca i8*, align 8
  %n5487 = alloca i32, align 4
  %li5641 = alloca i8*, align 8
  %li5794 = alloca i8*, align 8
  %could_match = alloca i8, align 1
  %newstart = alloca i8*, align 8
  %s6231 = alloca i8*, align 8
  %cur = alloca %struct.regmatch_state*, align 8
  %find = alloca %struct.sv*, align 8
  %newst = alloca %struct.regmatch_state*, align 8
  %sv_err = alloca %struct.sv*, align 8
  %sv_mrk6881 = alloca %struct.sv*, align 8
  %sp6896 = alloca %struct.sv**, align 8
  %sp6942 = alloca %struct.sv**, align 8
  %prev6943 = alloca %struct.stackinfo*, align 8
  store %struct.regmatch_info* %reginfo, %struct.regmatch_info** %reginfo.addr, align 8
  store i8* %startpos, i8** %startpos.addr, align 8
  store %struct.regnode* %prog, %struct.regnode** %prog.addr, align 8
  %0 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %is_utf8_target = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %0, i32 0, i32 14
  %1 = load i8, i8* %is_utf8_target, align 2
  %tobool = trunc i8 %1 to i1
  %frombool = zext i1 %tobool to i8
  store i8 %frombool, i8* %utf8_target, align 1
  %call = call zeroext i1 @Perl_ckwarn(i32 44)
  %2 = zext i1 %call to i64
  %cond = select i1 %call, i32 0, i32 1
  store i32 %cond, i32* %uniflags, align 4
  %3 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %prog1 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %3, i32 0, i32 0
  %4 = load %struct.p5rx*, %struct.p5rx** %prog1, align 8
  store %struct.p5rx* %4, %struct.p5rx** %rex_sv, align 8
  %5 = load %struct.p5rx*, %struct.p5rx** %rex_sv, align 8
  %call2 = call %struct.regexp* @S_ReANY(%struct.p5rx* %5)
  store %struct.regexp* %call2, %struct.regexp** %rex, align 8
  %6 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %pprivate = getelementptr inbounds %struct.regexp, %struct.regexp* %6, i32 0, i32 14
  %7 = load i8*, i8** %pprivate, align 8
  %8 = bitcast i8* %7 to %struct.regexp_internal*
  store %struct.regexp_internal* %8, %struct.regexp_internal** %rexi, align 8
  store i32 0, i32* %n, align 4
  store i64 0, i64* %ln, align 8
  %9 = load i8*, i8** %startpos.addr, align 8
  store i8* %9, i8** %locinput, align 8
  store i8 0, i8* %result, align 1
  store i32 0, i32* %depth, align 4
  store i32 0, i32* %nochange_depth, align 4
  %10 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %nparens = getelementptr inbounds %struct.regexp, %struct.regexp* %10, i32 0, i32 12
  %11 = load i32, i32* %nparens, align 8
  %mul = mul i32 3, %11
  %cmp = icmp ugt i32 %mul, 1000
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %12 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %nparens3 = getelementptr inbounds %struct.regexp, %struct.regexp* %12, i32 0, i32 12
  %13 = load i32, i32* %nparens3, align 8
  %mul4 = mul i32 3, %13
  br label %cond.end

cond.false:                                       ; preds = %entry
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond5 = phi i32 [ %mul4, %cond.true ], [ 1000, %cond.false ]
  store i32 %cond5, i32* %max_nochange_depth, align 4
  store %struct.regmatch_state* null, %struct.regmatch_state** %yes_state, align 8
  store %struct.regmatch_state* null, %struct.regmatch_state** %mark_state, align 8
  store %struct.regmatch_state* null, %struct.regmatch_state** %cur_eval, align 8
  store %struct.regmatch_state* null, %struct.regmatch_state** %cur_curlyx, align 8
  store i8 0, i8* %no_final, align 1
  store i8 0, i8* %do_cutgroup, align 1
  %14 = load i8*, i8** %locinput, align 8
  store i8* %14, i8** %startpoint, align 8
  store %struct.sv* null, %struct.sv** %popmark, align 8
  store %struct.sv* null, %struct.sv** %sv_commit, align 8
  store %struct.sv* null, %struct.sv** %sv_yes_mark, align 8
  store i32 0, i32* %lastopen, align 4
  %15 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %intflags = getelementptr inbounds %struct.regexp, %struct.regexp* %15, i32 0, i32 13
  %16 = load i32, i32* %intflags, align 4
  %and = and i32 %16, 16
  %tobool6 = icmp ne i32 %and, 0
  %17 = zext i1 %tobool6 to i64
  %cond7 = select i1 %tobool6, i32 1, i32 0
  %tobool8 = icmp ne i32 %cond7, 0
  %frombool9 = zext i1 %tobool8 to i8
  store i8 %frombool9, i8* %has_cutgroup, align 1
  %18 = load %struct.gv*, %struct.gv** @PL_replgv, align 8
  %sv_u = getelementptr inbounds %struct.gv, %struct.gv* %18, i32 0, i32 3
  %svu_gp = bitcast %union.anon.4* %sv_u to %struct.gp**
  %19 = load %struct.gp*, %struct.gp** %svu_gp, align 8
  %add.ptr = getelementptr inbounds %struct.gp, %struct.gp* %19, i64 0
  %gp_sv = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr, i32 0, i32 0
  %20 = load %struct.sv*, %struct.sv** %gp_sv, align 8
  %tobool10 = icmp ne %struct.sv* %20, null
  br i1 %tobool10, label %cond.true11, label %cond.false16

cond.true11:                                      ; preds = %cond.end
  %21 = load %struct.gv*, %struct.gv** @PL_replgv, align 8
  %sv_u12 = getelementptr inbounds %struct.gv, %struct.gv* %21, i32 0, i32 3
  %svu_gp13 = bitcast %union.anon.4* %sv_u12 to %struct.gp**
  %22 = load %struct.gp*, %struct.gp** %svu_gp13, align 8
  %add.ptr14 = getelementptr inbounds %struct.gp, %struct.gp* %22, i64 0
  %gp_sv15 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr14, i32 0, i32 0
  br label %cond.end22

cond.false16:                                     ; preds = %cond.end
  %23 = load %struct.gv*, %struct.gv** @PL_replgv, align 8
  %call17 = call %struct.gv* @Perl_gv_add_by_type(%struct.gv* %23, i32 0)
  %sv_u18 = getelementptr inbounds %struct.gv, %struct.gv* %call17, i32 0, i32 3
  %svu_gp19 = bitcast %union.anon.4* %sv_u18 to %struct.gp**
  %24 = load %struct.gp*, %struct.gp** %svu_gp19, align 8
  %add.ptr20 = getelementptr inbounds %struct.gp, %struct.gp* %24, i64 0
  %gp_sv21 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr20, i32 0, i32 0
  br label %cond.end22

cond.end22:                                       ; preds = %cond.false16, %cond.true11
  %cond23 = phi %struct.sv** [ %gp_sv15, %cond.true11 ], [ %gp_sv21, %cond.false16 ]
  %25 = load %struct.sv*, %struct.sv** %cond23, align 8
  store %struct.sv* %25, %struct.sv** %oreplsv, align 8
  store i8 0, i8* %sw, align 1
  store i8 0, i8* %minmod, align 1
  store i32 0, i32* %logical, align 4
  store %struct.av* null, %struct.av** %last_pad, align 8
  store i8 0, i8* %hasargs, align 1
  store i32 2, i32* %gimme, align 4
  store %struct.cv* null, %struct.cv** %caller_cv, align 8
  store %struct.cv* null, %struct.cv** %last_pushed_cv, align 8
  store i32 0, i32* %maxopenparen, align 4
  %26 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %is_utf8_pat24 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %26, i32 0, i32 13
  %27 = load i8, i8* %is_utf8_pat24, align 1
  %tobool25 = trunc i8 %27 to i1
  %frombool26 = zext i1 %tobool25 to i8
  store i8 %frombool26, i8* %is_utf8_pat, align 1
  store i8 0, i8* %match, align 1
  %28 = load %struct.sv*, %struct.sv** %oreplsv, align 8
  %sv_refcnt = getelementptr inbounds %struct.sv, %struct.sv* %28, i32 0, i32 1
  %29 = load i32, i32* %sv_refcnt, align 8
  %inc = add i32 %29, 1
  store i32 %inc, i32* %sv_refcnt, align 8
  %30 = load %struct.sv*, %struct.sv** %oreplsv, align 8
  %31 = bitcast %struct.sv* %30 to i8*
  %32 = bitcast i8* %31 to %struct.sv*
  %33 = bitcast %struct.sv* %32 to i8*
  %34 = bitcast i8* %33 to %struct.sv*
  %35 = bitcast %struct.sv* %34 to i8*
  call void @Perl_save_pushptr(i8* %35, i32 11)
  store i8 0, i8* %multicall_oldcatch, align 1
  store %struct.cv* null, %struct.cv** %multicall_cv, align 8
  store %struct.context* null, %struct.context** %cx, align 8
  %36 = load %struct.op*, %struct.op** %multicall_cop, align 8
  %37 = load %struct.sv**, %struct.sv*** %newsp, align 8
  %38 = load %struct.regmatch_state*, %struct.regmatch_state** @PL_regmatch_state, align 8
  store %struct.regmatch_state* %38, %struct.regmatch_state** %st, align 8
  %39 = load i8*, i8** %locinput, align 8
  %40 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %40, i32 0, i32 2
  %41 = load i8*, i8** %strend, align 8
  %cmp27 = icmp ult i8* %39, %41
  br i1 %cmp27, label %cond.true28, label %cond.false29

cond.true28:                                      ; preds = %cond.end22
  %42 = load i8*, i8** %locinput, align 8
  %43 = load i8, i8* %42, align 1
  %conv = zext i8 %43 to i32
  br label %cond.end30

cond.false29:                                     ; preds = %cond.end22
  br label %cond.end30

cond.end30:                                       ; preds = %cond.false29, %cond.true28
  %cond31 = phi i32 [ %conv, %cond.true28 ], [ -10, %cond.false29 ]
  store i32 %cond31, i32* %nextchr, align 4
  %44 = load %struct.regnode*, %struct.regnode** %prog.addr, align 8
  store %struct.regnode* %44, %struct.regnode** %scan, align 8
  br label %while.cond

while.cond:                                       ; preds = %if.end6779, %sw.epilog6768, %if.end6357, %if.end4028, %if.end770, %cond.end30
  %45 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %cmp32 = icmp ne %struct.regnode* %45, null
  br i1 %cmp32, label %while.body, label %while.end6780

while.body:                                       ; preds = %while.cond
  %46 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %47 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %next_off = getelementptr inbounds %struct.regnode, %struct.regnode* %47, i32 0, i32 2
  %48 = load i16, i16* %next_off, align 2
  %conv34 = zext i16 %48 to i32
  %idx.ext = sext i32 %conv34 to i64
  %add.ptr35 = getelementptr inbounds %struct.regnode, %struct.regnode* %46, i64 %idx.ext
  store %struct.regnode* %add.ptr35, %struct.regnode** %next, align 8
  %49 = load %struct.regnode*, %struct.regnode** %next, align 8
  %50 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %cmp36 = icmp eq %struct.regnode* %49, %50
  br i1 %cmp36, label %if.then, label %if.end

if.then:                                          ; preds = %while.body
  store %struct.regnode* null, %struct.regnode** %next, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %while.body
  %51 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %type = getelementptr inbounds %struct.regnode, %struct.regnode* %51, i32 0, i32 1
  %52 = load i8, i8* %type, align 1
  %conv38 = zext i8 %52 to i32
  store i32 %conv38, i32* %state_num, align 4
  br label %reenter_switch

reenter_switch:                                   ; preds = %if.end6872, %if.end6824, %if.then4610, %if.then4596, %if.end
  store i32 0, i32* %to_complement, align 4
  %53 = load i8*, i8** %locinput, align 8
  %54 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend39 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %54, i32 0, i32 2
  %55 = load i8*, i8** %strend39, align 8
  %cmp40 = icmp ult i8* %53, %55
  br i1 %cmp40, label %cond.true42, label %cond.false44

cond.true42:                                      ; preds = %reenter_switch
  %56 = load i8*, i8** %locinput, align 8
  %57 = load i8, i8* %56, align 1
  %conv43 = zext i8 %57 to i32
  br label %cond.end45

cond.false44:                                     ; preds = %reenter_switch
  br label %cond.end45

cond.end45:                                       ; preds = %cond.false44, %cond.true42
  %cond46 = phi i32 [ %conv43, %cond.true42 ], [ -10, %cond.false44 ]
  store i32 %cond46, i32* %nextchr, align 4
  %58 = load i32, i32* %state_num, align 4
  switch i32 %58, label %sw.default6720 [
    i32 2, label %sw.bb
    i32 3, label %sw.bb51
    i32 7, label %sw.bb62
    i32 90, label %sw.bb67
    i32 133, label %sw.bb74
    i32 5, label %sw.bb82
    i32 4, label %sw.bb90
    i32 6, label %sw.bb106
    i32 17, label %sw.bb111
    i32 18, label %sw.bb116
    i32 16, label %sw.bb121
    i32 73, label %sw.bb129
    i32 72, label %sw.bb145
    i32 95, label %sw.bb545
    i32 32, label %sw.bb771
    i32 31, label %sw.bb780
    i32 34, label %sw.bb898
    i32 38, label %sw.bb900
    i32 37, label %sw.bb904
    i32 35, label %sw.bb904
    i32 39, label %sw.bb908
    i32 36, label %sw.bb909
    i32 33, label %sw.bb910
    i32 13, label %sw.bb972
    i32 9, label %sw.bb973
    i32 12, label %sw.bb1258
    i32 8, label %sw.bb1259
    i32 15, label %sw.bb1263
    i32 11, label %sw.bb1264
    i32 14, label %sw.bb1322
    i32 10, label %sw.bb1323
    i32 20, label %sw.bb1714
    i32 19, label %sw.bb1715
    i32 26, label %sw.bb1759
    i32 22, label %sw.bb1760
    i32 25, label %sw.bb1810
    i32 21, label %sw.bb1811
    i32 28, label %sw.bb1815
    i32 24, label %sw.bb1825
    i32 27, label %sw.bb1855
    i32 23, label %sw.bb1856
    i32 29, label %sw.bb2231
    i32 58, label %sw.bb2293
    i32 60, label %sw.bb2298
    i32 59, label %sw.bb2299
    i32 57, label %sw.bb2300
    i32 56, label %sw.bb2301
    i32 53, label %sw.bb2306
    i32 55, label %sw.bb2307
    i32 54, label %sw.bb2308
    i32 52, label %sw.bb2309
    i32 51, label %sw.bb2310
    i32 40, label %sw.bb2410
    i32 41, label %sw.bb2411
    i32 77, label %sw.bb2413
    i32 76, label %sw.bb2413
    i32 68, label %sw.bb2457
    i32 96, label %sw.bb3180
    i32 97, label %sw.bb3233
    i32 49, label %sw.bb3277
    i32 50, label %sw.bb3290
    i32 83, label %sw.bb3324
    i32 67, label %sw.bb3389
    i32 78, label %sw.bb3406
    i32 79, label %sw.bb3413
    i32 80, label %sw.bb3429
    i32 66, label %sw.bb3430
    i32 70, label %sw.bb3450
    i32 47, label %sw.bb3453
    i32 98, label %sw.bb3497
    i32 99, label %sw.bb3501
    i32 48, label %sw.bb3517
    i32 106, label %sw.bb3718
    i32 108, label %sw.bb3718
    i32 109, label %sw.bb3722
    i32 103, label %sw.bb3755
    i32 101, label %sw.bb3755
    i32 105, label %sw.bb3797
    i32 107, label %sw.bb3836
    i32 62, label %sw.bb3923
    i32 30, label %sw.bb3932
    i32 89, label %sw.bb3951
    i32 131, label %sw.bb3966
    i32 110, label %sw.bb3976
    i32 111, label %sw.bb3977
    i32 69, label %sw.bb4029
    i32 46, label %sw.bb4030
    i32 112, label %sw.bb4109
    i32 113, label %sw.bb4228
    i32 115, label %sw.bb4721
    i32 42, label %sw.bb4831
    i32 43, label %sw.bb4841
    i32 45, label %sw.bb4852
    i32 44, label %sw.bb4912
    i32 119, label %sw.bb5431
    i32 121, label %sw.bb5755
    i32 123, label %sw.bb6096
    i32 0, label %sw.bb6156
    i32 1, label %sw.bb6217
    i32 65, label %sw.bb6218
    i32 64, label %sw.bb6220
    i32 63, label %sw.bb6224
    i32 117, label %sw.bb6301
    i32 116, label %sw.bb6311
    i32 61, label %sw.bb6358
    i32 88, label %sw.bb6366
    i32 85, label %sw.bb6368
    i32 125, label %sw.bb6379
    i32 82, label %sw.bb6380
    i32 86, label %sw.bb6381
    i32 126, label %sw.bb6395
    i32 127, label %sw.bb6399
    i32 87, label %sw.bb6458
    i32 129, label %sw.bb6494
    i32 91, label %sw.bb6546
  ]

sw.bb:                                            ; preds = %cond.end45
  %59 = load i8*, i8** %locinput, align 8
  %60 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %60, i32 0, i32 1
  %61 = load i8*, i8** %strbeg, align 8
  %cmp47 = icmp eq i8* %59, %61
  br i1 %cmp47, label %if.then49, label %if.end50

if.then49:                                        ; preds = %sw.bb
  br label %sw.epilog6768

if.end50:                                         ; preds = %sw.bb
  br label %no

sw.bb51:                                          ; preds = %cond.end45
  %62 = load i8*, i8** %locinput, align 8
  %63 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg52 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %63, i32 0, i32 1
  %64 = load i8*, i8** %strbeg52, align 8
  %cmp53 = icmp eq i8* %62, %64
  br i1 %cmp53, label %if.then60, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %sw.bb51
  %65 = load i32, i32* %nextchr, align 4
  %cmp55 = icmp slt i32 %65, 0
  br i1 %cmp55, label %if.end61, label %land.lhs.true

land.lhs.true:                                    ; preds = %lor.lhs.false
  %66 = load i8*, i8** %locinput, align 8
  %arrayidx = getelementptr inbounds i8, i8* %66, i64 -1
  %67 = load i8, i8* %arrayidx, align 1
  %conv57 = sext i8 %67 to i32
  %cmp58 = icmp eq i32 %conv57, 10
  br i1 %cmp58, label %if.then60, label %if.end61

if.then60:                                        ; preds = %land.lhs.true, %sw.bb51
  br label %sw.epilog6768

if.end61:                                         ; preds = %land.lhs.true, %lor.lhs.false
  br label %no

sw.bb62:                                          ; preds = %cond.end45
  %68 = load i8*, i8** %locinput, align 8
  %69 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %ganch = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %69, i32 0, i32 5
  %70 = load i8*, i8** %ganch, align 8
  %cmp63 = icmp eq i8* %68, %70
  br i1 %cmp63, label %if.then65, label %if.end66

if.then65:                                        ; preds = %sw.bb62
  br label %sw.epilog6768

if.end66:                                         ; preds = %sw.bb62
  br label %no

sw.bb67:                                          ; preds = %cond.end45
  %71 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %offs = getelementptr inbounds %struct.regexp, %struct.regexp* %71, i32 0, i32 17
  %72 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %offs, align 8
  %arrayidx68 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %72, i64 0
  %start = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %arrayidx68, i32 0, i32 0
  %73 = load i64, i64* %start, align 8
  %conv69 = trunc i64 %73 to i32
  %74 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %74, i32 0, i32 2
  %keeper = bitcast %union.anon.19* %u to %struct.anon.27*
  %val = getelementptr inbounds %struct.anon.27, %struct.anon.27* %keeper, i32 0, i32 0
  store i32 %conv69, i32* %val, align 8
  %75 = load i8*, i8** %locinput, align 8
  %76 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg70 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %76, i32 0, i32 1
  %77 = load i8*, i8** %strbeg70, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %75 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %77 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %78 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %offs71 = getelementptr inbounds %struct.regexp, %struct.regexp* %78, i32 0, i32 17
  %79 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %offs71, align 8
  %arrayidx72 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %79, i64 0
  %start73 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %arrayidx72, i32 0, i32 0
  store i64 %sub.ptr.sub, i64* %start73, align 8
  %80 = load i8*, i8** %locinput, align 8
  store i8* %80, i8** %pushinput, align 8
  %81 = load %struct.regnode*, %struct.regnode** %next, align 8
  store %struct.regnode* %81, %struct.regnode** %scan, align 8
  %82 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %resume_state = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %82, i32 0, i32 0
  store i32 132, i32* %resume_state, align 8
  br label %push_state

sw.bb74:                                          ; preds = %cond.end45
  %83 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u75 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %83, i32 0, i32 2
  %keeper76 = bitcast %union.anon.19* %u75 to %struct.anon.27*
  %val77 = getelementptr inbounds %struct.anon.27, %struct.anon.27* %keeper76, i32 0, i32 0
  %84 = load i32, i32* %val77, align 8
  %conv78 = sext i32 %84 to i64
  %85 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %offs79 = getelementptr inbounds %struct.regexp, %struct.regexp* %85, i32 0, i32 17
  %86 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %offs79, align 8
  %arrayidx80 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %86, i64 0
  %start81 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %arrayidx80, i32 0, i32 0
  store i64 %conv78, i64* %start81, align 8
  br label %no_silent

sw.bb82:                                          ; preds = %cond.end45
  %87 = load i32, i32* %nextchr, align 4
  %cmp83 = icmp slt i32 %87, 0
  br i1 %cmp83, label %if.end89, label %land.lhs.true85

land.lhs.true85:                                  ; preds = %sw.bb82
  %88 = load i32, i32* %nextchr, align 4
  %cmp86 = icmp ne i32 %88, 10
  br i1 %cmp86, label %if.then88, label %if.end89

if.then88:                                        ; preds = %land.lhs.true85
  br label %no

if.end89:                                         ; preds = %land.lhs.true85, %sw.bb82
  br label %sw.epilog6768

sw.bb90:                                          ; preds = %cond.end45
  %89 = load i32, i32* %nextchr, align 4
  %cmp91 = icmp slt i32 %89, 0
  br i1 %cmp91, label %if.end97, label %land.lhs.true93

land.lhs.true93:                                  ; preds = %sw.bb90
  %90 = load i32, i32* %nextchr, align 4
  %cmp94 = icmp ne i32 %90, 10
  br i1 %cmp94, label %if.then96, label %if.end97

if.then96:                                        ; preds = %land.lhs.true93
  br label %no

if.end97:                                         ; preds = %land.lhs.true93, %sw.bb90
  %91 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend98 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %91, i32 0, i32 2
  %92 = load i8*, i8** %strend98, align 8
  %93 = load i8*, i8** %locinput, align 8
  %sub.ptr.lhs.cast99 = ptrtoint i8* %92 to i64
  %sub.ptr.rhs.cast100 = ptrtoint i8* %93 to i64
  %sub.ptr.sub101 = sub i64 %sub.ptr.lhs.cast99, %sub.ptr.rhs.cast100
  %cmp102 = icmp sgt i64 %sub.ptr.sub101, 1
  br i1 %cmp102, label %if.then104, label %if.end105

if.then104:                                       ; preds = %if.end97
  br label %no

if.end105:                                        ; preds = %if.end97
  br label %sw.epilog6768

sw.bb106:                                         ; preds = %cond.end45
  %94 = load i32, i32* %nextchr, align 4
  %cmp107 = icmp slt i32 %94, 0
  br i1 %cmp107, label %if.end110, label %if.then109

if.then109:                                       ; preds = %sw.bb106
  br label %no

if.end110:                                        ; preds = %sw.bb106
  br label %sw.epilog6768

sw.bb111:                                         ; preds = %cond.end45
  %95 = load i32, i32* %nextchr, align 4
  %cmp112 = icmp slt i32 %95, 0
  br i1 %cmp112, label %if.then114, label %if.end115

if.then114:                                       ; preds = %sw.bb111
  br label %no

if.end115:                                        ; preds = %sw.bb111
  br label %increment_locinput

sw.bb116:                                         ; preds = %cond.end45
  %96 = load i32, i32* %nextchr, align 4
  %cmp117 = icmp slt i32 %96, 0
  br i1 %cmp117, label %if.then119, label %if.end120

if.then119:                                       ; preds = %sw.bb116
  br label %no

if.end120:                                        ; preds = %sw.bb116
  %97 = load i8*, i8** %locinput, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %97, i32 1
  store i8* %incdec.ptr, i8** %locinput, align 8
  br label %sw.epilog6768

sw.bb121:                                         ; preds = %cond.end45
  %98 = load i32, i32* %nextchr, align 4
  %cmp122 = icmp slt i32 %98, 0
  br i1 %cmp122, label %if.then127, label %lor.lhs.false124

lor.lhs.false124:                                 ; preds = %sw.bb121
  %99 = load i32, i32* %nextchr, align 4
  %cmp125 = icmp eq i32 %99, 10
  br i1 %cmp125, label %if.then127, label %if.end128

if.then127:                                       ; preds = %lor.lhs.false124, %sw.bb121
  br label %no

if.end128:                                        ; preds = %lor.lhs.false124
  br label %increment_locinput

sw.bb129:                                         ; preds = %cond.end45
  %100 = load i32, i32* %nextchr, align 4
  %cmp130 = icmp slt i32 %100, 0
  br i1 %cmp130, label %if.end144, label %land.lhs.true132

land.lhs.true132:                                 ; preds = %sw.bb129
  %101 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %102 = bitcast %struct.regnode* %101 to %struct.regnode_charclass*
  %bitmap = getelementptr inbounds %struct.regnode_charclass, %struct.regnode_charclass* %102, i32 0, i32 4
  %103 = load i32, i32* %nextchr, align 4
  %conv133 = trunc i32 %103 to i8
  %conv134 = zext i8 %conv133 to i32
  %shr = ashr i32 %conv134, 3
  %and135 = and i32 %shr, 31
  %idxprom = sext i32 %and135 to i64
  %arrayidx136 = getelementptr inbounds [32 x i8], [32 x i8]* %bitmap, i64 0, i64 %idxprom
  %104 = load i8, i8* %arrayidx136, align 1
  %conv137 = sext i8 %104 to i32
  %105 = load i32, i32* %nextchr, align 4
  %and138 = and i32 %105, 7
  %shl = shl i32 1, %and138
  %and139 = and i32 %conv137, %shl
  %tobool140 = icmp ne i32 %and139, 0
  br i1 %tobool140, label %cond.true141, label %cond.false142

cond.true141:                                     ; preds = %land.lhs.true132
  br i1 true, label %if.end144, label %if.then143

cond.false142:                                    ; preds = %land.lhs.true132
  br i1 false, label %if.end144, label %if.then143

if.then143:                                       ; preds = %cond.false142, %cond.true141
  br label %no_silent

if.end144:                                        ; preds = %cond.false142, %cond.true141, %sw.bb129
  br label %sw.bb145

sw.bb145:                                         ; preds = %cond.end45, %if.end144
  %106 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %flags = getelementptr inbounds %struct.regnode, %struct.regnode* %106, i32 0, i32 0
  %107 = load i8, i8* %flags, align 2
  %conv146 = zext i8 %107 to i32
  %cmp147 = icmp eq i32 %conv146, 31
  br i1 %cmp147, label %cond.true149, label %cond.false153

cond.true149:                                     ; preds = %sw.bb145
  %108 = load i8, i8* %utf8_target, align 1
  %tobool150 = trunc i8 %108 to i1
  %109 = zext i1 %tobool150 to i64
  %cond152 = select i1 %tobool150, i32 1, i32 0
  br label %cond.end187

cond.false153:                                    ; preds = %sw.bb145
  %110 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %flags154 = getelementptr inbounds %struct.regnode, %struct.regnode* %110, i32 0, i32 0
  %111 = load i8, i8* %flags154, align 2
  %conv155 = zext i8 %111 to i32
  %cmp156 = icmp eq i32 %conv155, 32
  br i1 %cmp156, label %cond.true158, label %cond.false162

cond.true158:                                     ; preds = %cond.false153
  %112 = load i8, i8* %utf8_target, align 1
  %tobool159 = trunc i8 %112 to i1
  %113 = zext i1 %tobool159 to i64
  %cond161 = select i1 %tobool159, i32 6, i32 0
  br label %cond.end185

cond.false162:                                    ; preds = %cond.false153
  %114 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %flags163 = getelementptr inbounds %struct.regnode, %struct.regnode* %114, i32 0, i32 0
  %115 = load i8, i8* %flags163, align 2
  %conv164 = zext i8 %115 to i32
  %cmp165 = icmp eq i32 %conv164, 36
  br i1 %cmp165, label %cond.true167, label %cond.false171

cond.true167:                                     ; preds = %cond.false162
  %116 = load i8, i8* %utf8_target, align 1
  %tobool168 = trunc i8 %116 to i1
  %117 = zext i1 %tobool168 to i64
  %cond170 = select i1 %tobool168, i32 4, i32 5
  br label %cond.end183

cond.false171:                                    ; preds = %cond.false162
  %118 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %flags172 = getelementptr inbounds %struct.regnode, %struct.regnode* %118, i32 0, i32 0
  %119 = load i8, i8* %flags172, align 2
  %conv173 = zext i8 %119 to i32
  %cmp174 = icmp eq i32 %conv173, 38
  br i1 %cmp174, label %cond.true176, label %cond.false177

cond.true176:                                     ; preds = %cond.false171
  br label %cond.end181

cond.false177:                                    ; preds = %cond.false171
  %120 = load i8, i8* %utf8_target, align 1
  %tobool178 = trunc i8 %120 to i1
  %121 = zext i1 %tobool178 to i64
  %cond180 = select i1 %tobool178, i32 2, i32 3
  br label %cond.end181

cond.end181:                                      ; preds = %cond.false177, %cond.true176
  %cond182 = phi i32 [ 7, %cond.true176 ], [ %cond180, %cond.false177 ]
  br label %cond.end183

cond.end183:                                      ; preds = %cond.end181, %cond.true167
  %cond184 = phi i32 [ %cond170, %cond.true167 ], [ %cond182, %cond.end181 ]
  br label %cond.end185

cond.end185:                                      ; preds = %cond.end183, %cond.true158
  %cond186 = phi i32 [ %cond161, %cond.true158 ], [ %cond184, %cond.end183 ]
  br label %cond.end187

cond.end187:                                      ; preds = %cond.end185, %cond.true149
  %cond188 = phi i32 [ %cond152, %cond.true149 ], [ %cond186, %cond.end185 ]
  store i32 %cond188, i32* %trie_type, align 4
  %122 = load %struct.regexp_internal*, %struct.regexp_internal** %rexi, align 8
  %data = getelementptr inbounds %struct.regexp_internal, %struct.regexp_internal* %122, i32 0, i32 3
  %123 = load %struct.reg_data*, %struct.reg_data** %data, align 8
  %data189 = getelementptr inbounds %struct.reg_data, %struct.reg_data* %123, i32 0, i32 2
  %124 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %125 = bitcast %struct.regnode* %124 to %struct.regnode_1*
  %arg1 = getelementptr inbounds %struct.regnode_1, %struct.regnode_1* %125, i32 0, i32 3
  %126 = load i32, i32* %arg1, align 4
  %idxprom190 = zext i32 %126 to i64
  %arrayidx191 = getelementptr inbounds [1 x i8*], [1 x i8*]* %data189, i64 0, i64 %idxprom190
  %127 = load i8*, i8** %arrayidx191, align 8
  %128 = bitcast i8* %127 to %struct._reg_trie_data*
  store %struct._reg_trie_data* %128, %struct._reg_trie_data** %trie, align 8
  %129 = load %struct.regexp_internal*, %struct.regexp_internal** %rexi, align 8
  %data192 = getelementptr inbounds %struct.regexp_internal, %struct.regexp_internal* %129, i32 0, i32 3
  %130 = load %struct.reg_data*, %struct.reg_data** %data192, align 8
  %data193 = getelementptr inbounds %struct.reg_data, %struct.reg_data* %130, i32 0, i32 2
  %131 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %132 = bitcast %struct.regnode* %131 to %struct.regnode_1*
  %arg1194 = getelementptr inbounds %struct.regnode_1, %struct.regnode_1* %132, i32 0, i32 3
  %133 = load i32, i32* %arg1194, align 4
  %add = add i32 %133, 1
  %idxprom195 = zext i32 %add to i64
  %arrayidx196 = getelementptr inbounds [1 x i8*], [1 x i8*]* %data193, i64 0, i64 %idxprom195
  %134 = load i8*, i8** %arrayidx196, align 8
  %135 = bitcast i8* %134 to %struct.hv*
  store %struct.hv* %135, %struct.hv** %widecharmap, align 8
  %136 = load %struct._reg_trie_data*, %struct._reg_trie_data** %trie, align 8
  %startstate = getelementptr inbounds %struct._reg_trie_data, %struct._reg_trie_data* %136, i32 0, i32 9
  %137 = load i32, i32* %startstate, align 4
  store i32 %137, i32* %state, align 4
  %138 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %flags197 = getelementptr inbounds %struct.regnode, %struct.regnode* %138, i32 0, i32 0
  %139 = load i8, i8* %flags197, align 2
  %conv198 = zext i8 %139 to i32
  %cmp199 = icmp eq i32 %conv198, 32
  br i1 %cmp199, label %if.then206, label %lor.lhs.false201

lor.lhs.false201:                                 ; preds = %cond.end187
  %140 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %flags202 = getelementptr inbounds %struct.regnode, %struct.regnode* %140, i32 0, i32 0
  %141 = load i8, i8* %flags202, align 2
  %conv203 = zext i8 %141 to i32
  %cmp204 = icmp eq i32 %conv203, 38
  br i1 %cmp204, label %if.then206, label %if.end221

if.then206:                                       ; preds = %lor.lhs.false201, %cond.end187
  %142 = load i8, i8* %utf8_target, align 1
  %tobool207 = trunc i8 %142 to i1
  br i1 %tobool207, label %land.lhs.true209, label %if.end220

land.lhs.true209:                                 ; preds = %if.then206
  %143 = load i32, i32* %nextchr, align 4
  %conv210 = trunc i32 %143 to i8
  %conv211 = zext i8 %conv210 to i32
  %cmp212 = icmp sge i32 %conv211, 196
  br i1 %cmp212, label %land.lhs.true214, label %if.end220

land.lhs.true214:                                 ; preds = %land.lhs.true209
  %144 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %flags215 = getelementptr inbounds %struct.regnode, %struct.regnode* %144, i32 0, i32 0
  %145 = load i8, i8* %flags215, align 2
  %conv216 = zext i8 %145 to i32
  %cmp217 = icmp eq i32 %conv216, 32
  br i1 %cmp217, label %if.then219, label %if.end220

if.then219:                                       ; preds = %land.lhs.true214
  br label %if.end220

if.end220:                                        ; preds = %if.then219, %land.lhs.true214, %land.lhs.true209, %if.then206
  br label %if.end221

if.end221:                                        ; preds = %if.end220, %lor.lhs.false201
  %146 = load %struct._reg_trie_data*, %struct._reg_trie_data** %trie, align 8
  %bitmap222 = getelementptr inbounds %struct._reg_trie_data, %struct._reg_trie_data* %146, i32 0, i32 5
  %147 = load i8*, i8** %bitmap222, align 8
  %tobool223 = icmp ne i8* %147, null
  br i1 %tobool223, label %land.lhs.true224, label %if.end251

land.lhs.true224:                                 ; preds = %if.end221
  %148 = load i32, i32* %nextchr, align 4
  %cmp225 = icmp slt i32 %148, 0
  br i1 %cmp225, label %if.then242, label %lor.lhs.false227

lor.lhs.false227:                                 ; preds = %land.lhs.true224
  %149 = load %struct._reg_trie_data*, %struct._reg_trie_data** %trie, align 8
  %bitmap228 = getelementptr inbounds %struct._reg_trie_data, %struct._reg_trie_data* %149, i32 0, i32 5
  %150 = load i8*, i8** %bitmap228, align 8
  %151 = load i32, i32* %nextchr, align 4
  %conv229 = trunc i32 %151 to i8
  %conv230 = zext i8 %conv229 to i32
  %shr231 = ashr i32 %conv230, 3
  %and232 = and i32 %shr231, 31
  %idxprom233 = sext i32 %and232 to i64
  %arrayidx234 = getelementptr inbounds i8, i8* %150, i64 %idxprom233
  %152 = load i8, i8* %arrayidx234, align 1
  %conv235 = sext i8 %152 to i32
  %153 = load i32, i32* %nextchr, align 4
  %conv236 = trunc i32 %153 to i8
  %conv237 = zext i8 %conv236 to i32
  %and238 = and i32 %conv237, 7
  %shl239 = shl i32 1, %and238
  %and240 = and i32 %conv235, %shl239
  %tobool241 = icmp ne i32 %and240, 0
  br i1 %tobool241, label %if.end251, label %if.then242

if.then242:                                       ; preds = %lor.lhs.false227, %land.lhs.true224
  %154 = load %struct._reg_trie_data*, %struct._reg_trie_data** %trie, align 8
  %states = getelementptr inbounds %struct._reg_trie_data, %struct._reg_trie_data* %154, i32 0, i32 3
  %155 = load %struct._reg_trie_state*, %struct._reg_trie_state** %states, align 8
  %156 = load i32, i32* %state, align 4
  %idxprom243 = zext i32 %156 to i64
  %arrayidx244 = getelementptr inbounds %struct._reg_trie_state, %struct._reg_trie_state* %155, i64 %idxprom243
  %wordnum = getelementptr inbounds %struct._reg_trie_state, %struct._reg_trie_state* %arrayidx244, i32 0, i32 0
  %157 = load i16, i16* %wordnum, align 8
  %tobool245 = icmp ne i16 %157, 0
  br i1 %tobool245, label %if.then246, label %if.else

if.then246:                                       ; preds = %if.then242
  %158 = load %struct._reg_trie_data*, %struct._reg_trie_data** %trie, align 8
  %jump = getelementptr inbounds %struct._reg_trie_data, %struct._reg_trie_data* %158, i32 0, i32 6
  %159 = load i16*, i16** %jump, align 8
  %tobool247 = icmp ne i16* %159, null
  br i1 %tobool247, label %if.end249, label %if.then248

if.then248:                                       ; preds = %if.then246
  br label %sw.epilog6768

if.end249:                                        ; preds = %if.then246
  br label %if.end250

if.else:                                          ; preds = %if.then242
  br label %no_silent

if.end250:                                        ; preds = %if.end249
  br label %if.end251

if.end251:                                        ; preds = %if.end250, %lor.lhs.false227, %if.end221
  %160 = load i8*, i8** %locinput, align 8
  store i8* %160, i8** %uc, align 8
  store i64 0, i64* %len, align 8
  store i64 0, i64* %foldlen, align 8
  store i8* null, i8** %uscan, align 8
  store i32 0, i32* %charcount, align 4
  store i32 0, i32* %accepted, align 4
  %161 = load %struct._reg_trie_data*, %struct._reg_trie_data** %trie, align 8
  %jump252 = getelementptr inbounds %struct._reg_trie_data, %struct._reg_trie_data* %161, i32 0, i32 6
  %162 = load i16*, i16** %jump252, align 8
  %163 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u253 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %163, i32 0, i32 2
  %trie254 = bitcast %union.anon.19* %u253 to %struct.anon.23*
  %jump255 = getelementptr inbounds %struct.anon.23, %struct.anon.23* %trie254, i32 0, i32 6
  store i16* %162, i16** %jump255, align 8
  %164 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %165 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u256 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %165, i32 0, i32 2
  %trie257 = bitcast %union.anon.19* %u256 to %struct.anon.23*
  %me = getelementptr inbounds %struct.anon.23, %struct.anon.23* %trie257, i32 0, i32 7
  store %struct.regnode* %164, %struct.regnode** %me, align 8
  %166 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u258 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %166, i32 0, i32 2
  %trie259 = bitcast %union.anon.19* %u258 to %struct.anon.23*
  %firstpos = getelementptr inbounds %struct.anon.23, %struct.anon.23* %trie259, i32 0, i32 8
  store i8* null, i8** %firstpos, align 8
  %167 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u260 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %167, i32 0, i32 2
  %trie261 = bitcast %union.anon.19* %u260 to %struct.anon.23*
  %longfold = getelementptr inbounds %struct.anon.23, %struct.anon.23* %trie261, i32 0, i32 5
  store i8 0, i8* %longfold, align 8
  %168 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u262 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %168, i32 0, i32 2
  %trie263 = bitcast %union.anon.19* %u262 to %struct.anon.23*
  %nextword = getelementptr inbounds %struct.anon.23, %struct.anon.23* %trie263, i32 0, i32 10
  store i16 0, i16* %nextword, align 4
  br label %while.cond264

while.cond264:                                    ; preds = %if.end528, %if.end251
  %169 = load i32, i32* %state, align 4
  %tobool265 = icmp ne i32 %169, 0
  br i1 %tobool265, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond264
  %170 = load i8*, i8** %uc, align 8
  %171 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend266 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %171, i32 0, i32 2
  %172 = load i8*, i8** %strend266, align 8
  %cmp267 = icmp ule i8* %170, %172
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond264
  %173 = phi i1 [ false, %while.cond264 ], [ %cmp267, %land.rhs ]
  br i1 %173, label %while.body269, label %while.end

while.body269:                                    ; preds = %land.end
  %174 = load %struct._reg_trie_data*, %struct._reg_trie_data** %trie, align 8
  %states270 = getelementptr inbounds %struct._reg_trie_data, %struct._reg_trie_data* %174, i32 0, i32 3
  %175 = load %struct._reg_trie_state*, %struct._reg_trie_state** %states270, align 8
  %176 = load i32, i32* %state, align 4
  %idxprom271 = zext i32 %176 to i64
  %arrayidx272 = getelementptr inbounds %struct._reg_trie_state, %struct._reg_trie_state* %175, i64 %idxprom271
  %trans = getelementptr inbounds %struct._reg_trie_state, %struct._reg_trie_state* %arrayidx272, i32 0, i32 1
  %base273 = bitcast %union.anon.35* %trans to i32*
  %177 = load i32, i32* %base273, align 8
  store i32 %177, i32* %base, align 4
  store i64 0, i64* %uvc, align 8
  store i16 0, i16* %charid, align 2
  %178 = load %struct._reg_trie_data*, %struct._reg_trie_data** %trie, align 8
  %states275 = getelementptr inbounds %struct._reg_trie_data, %struct._reg_trie_data* %178, i32 0, i32 3
  %179 = load %struct._reg_trie_state*, %struct._reg_trie_state** %states275, align 8
  %180 = load i32, i32* %state, align 4
  %idxprom276 = zext i32 %180 to i64
  %arrayidx277 = getelementptr inbounds %struct._reg_trie_state, %struct._reg_trie_state* %179, i64 %idxprom276
  %wordnum278 = getelementptr inbounds %struct._reg_trie_state, %struct._reg_trie_state* %arrayidx277, i32 0, i32 0
  %181 = load i16, i16* %wordnum278, align 8
  store i16 %181, i16* %wordnum274, align 2
  %182 = load i16, i16* %wordnum274, align 2
  %tobool279 = icmp ne i16 %182, 0
  br i1 %tobool279, label %if.then280, label %if.end321

if.then280:                                       ; preds = %while.body269
  %183 = load i32, i32* %accepted, align 4
  %tobool281 = icmp ne i32 %183, 0
  br i1 %tobool281, label %if.end301, label %if.then282

if.then282:                                       ; preds = %if.then280
  store i32 1, i32* %accepted, align 4
  %184 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u283 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %184, i32 0, i32 2
  %trie284 = bitcast %union.anon.19* %u283 to %struct.anon.23*
  %longfold285 = getelementptr inbounds %struct.anon.23, %struct.anon.23* %trie284, i32 0, i32 5
  %185 = load i8, i8* %longfold285, align 8
  %tobool286 = trunc i8 %185 to i1
  br i1 %tobool286, label %if.then287, label %if.else293

if.then287:                                       ; preds = %if.then282
  %186 = load i8*, i8** %locinput, align 8
  %187 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u288 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %187, i32 0, i32 2
  %trie289 = bitcast %union.anon.19* %u288 to %struct.anon.23*
  %firstpos290 = getelementptr inbounds %struct.anon.23, %struct.anon.23* %trie289, i32 0, i32 8
  store i8* %186, i8** %firstpos290, align 8
  %188 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u291 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %188, i32 0, i32 2
  %trie292 = bitcast %union.anon.19* %u291 to %struct.anon.23*
  %firstchars = getelementptr inbounds %struct.anon.23, %struct.anon.23* %trie292, i32 0, i32 9
  store i32 0, i32* %firstchars, align 8
  br label %if.end300

if.else293:                                       ; preds = %if.then282
  %189 = load i8*, i8** %uc, align 8
  %190 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u294 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %190, i32 0, i32 2
  %trie295 = bitcast %union.anon.19* %u294 to %struct.anon.23*
  %firstpos296 = getelementptr inbounds %struct.anon.23, %struct.anon.23* %trie295, i32 0, i32 8
  store i8* %189, i8** %firstpos296, align 8
  %191 = load i32, i32* %charcount, align 4
  %192 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u297 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %192, i32 0, i32 2
  %trie298 = bitcast %union.anon.19* %u297 to %struct.anon.23*
  %firstchars299 = getelementptr inbounds %struct.anon.23, %struct.anon.23* %trie298, i32 0, i32 9
  store i32 %191, i32* %firstchars299, align 8
  br label %if.end300

if.end300:                                        ; preds = %if.else293, %if.then287
  br label %if.end301

if.end301:                                        ; preds = %if.end300, %if.then280
  %193 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u302 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %193, i32 0, i32 2
  %trie303 = bitcast %union.anon.19* %u302 to %struct.anon.23*
  %nextword304 = getelementptr inbounds %struct.anon.23, %struct.anon.23* %trie303, i32 0, i32 10
  %194 = load i16, i16* %nextword304, align 4
  %tobool305 = icmp ne i16 %194, 0
  br i1 %tobool305, label %lor.lhs.false306, label %if.then314

lor.lhs.false306:                                 ; preds = %if.end301
  %195 = load i16, i16* %wordnum274, align 2
  %conv307 = zext i16 %195 to i32
  %196 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u308 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %196, i32 0, i32 2
  %trie309 = bitcast %union.anon.19* %u308 to %struct.anon.23*
  %nextword310 = getelementptr inbounds %struct.anon.23, %struct.anon.23* %trie309, i32 0, i32 10
  %197 = load i16, i16* %nextword310, align 4
  %conv311 = zext i16 %197 to i32
  %cmp312 = icmp slt i32 %conv307, %conv311
  br i1 %cmp312, label %if.then314, label %if.end318

if.then314:                                       ; preds = %lor.lhs.false306, %if.end301
  %198 = load i16, i16* %wordnum274, align 2
  %199 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u315 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %199, i32 0, i32 2
  %trie316 = bitcast %union.anon.19* %u315 to %struct.anon.23*
  %nextword317 = getelementptr inbounds %struct.anon.23, %struct.anon.23* %trie316, i32 0, i32 10
  store i16 %198, i16* %nextword317, align 4
  br label %if.end318

if.end318:                                        ; preds = %if.then314, %lor.lhs.false306
  %200 = load i16, i16* %wordnum274, align 2
  %201 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u319 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %201, i32 0, i32 2
  %trie320 = bitcast %union.anon.19* %u319 to %struct.anon.23*
  %topword = getelementptr inbounds %struct.anon.23, %struct.anon.23* %trie320, i32 0, i32 11
  store i16 %200, i16* %topword, align 2
  br label %if.end321

if.end321:                                        ; preds = %if.end318, %while.body269
  %202 = load i32, i32* %base, align 4
  %tobool322 = icmp ne i32 %202, 0
  br i1 %tobool322, label %land.lhs.true323, label %if.else527

land.lhs.true323:                                 ; preds = %if.end321
  %203 = load i64, i64* %foldlen, align 8
  %tobool324 = icmp ne i64 %203, 0
  br i1 %tobool324, label %if.then329, label %lor.lhs.false325

lor.lhs.false325:                                 ; preds = %land.lhs.true323
  %204 = load i8*, i8** %uc, align 8
  %205 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend326 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %205, i32 0, i32 2
  %206 = load i8*, i8** %strend326, align 8
  %cmp327 = icmp ult i8* %204, %206
  br i1 %cmp327, label %if.then329, label %if.else527

if.then329:                                       ; preds = %lor.lhs.false325, %land.lhs.true323
  br label %do.body

do.body:                                          ; preds = %if.then329
  store i8 2, i8* %flags330, align 1
  %207 = load i32, i32* %trie_type, align 4
  switch i32 %207, label %sw.epilog [
    i32 7, label %sw.bb331
    i32 4, label %sw.bb340
    i32 2, label %sw.bb343
    i32 5, label %sw.bb398
    i32 3, label %sw.bb402
    i32 6, label %sw.bb457
    i32 1, label %sw.bb466
    i32 0, label %sw.bb468
  ]

sw.bb331:                                         ; preds = %do.body
  %208 = load i8, i8* %utf8_target, align 1
  %tobool332 = trunc i8 %208 to i1
  br i1 %tobool332, label %land.lhs.true334, label %if.end339

land.lhs.true334:                                 ; preds = %sw.bb331
  %209 = load i8*, i8** %uc, align 8
  %210 = load i8, i8* %209, align 1
  %conv335 = zext i8 %210 to i32
  %cmp336 = icmp sge i32 %conv335, 196
  br i1 %cmp336, label %if.then338, label %if.end339

if.then338:                                       ; preds = %land.lhs.true334
  br label %if.end339

if.end339:                                        ; preds = %if.then338, %land.lhs.true334, %sw.bb331
  br label %do_trie_utf8_fold

sw.bb340:                                         ; preds = %do.body
  %211 = load i8, i8* %flags330, align 1
  %conv341 = zext i8 %211 to i32
  %or = or i32 %conv341, 4
  %conv342 = trunc i32 %or to i8
  store i8 %conv342, i8* %flags330, align 1
  br label %sw.bb343

sw.bb343:                                         ; preds = %do.body, %sw.bb340
  br label %do_trie_utf8_fold

do_trie_utf8_fold:                                ; preds = %sw.bb343, %if.end339
  %212 = load i64, i64* %foldlen, align 8
  %cmp344 = icmp ugt i64 %212, 0
  br i1 %cmp344, label %if.then346, label %if.else349

if.then346:                                       ; preds = %do_trie_utf8_fold
  %213 = load i8*, i8** %uscan, align 8
  %214 = load i32, i32* %uniflags, align 4
  %call347 = call i64 @Perl_utf8n_to_uvchr(i8* %213, i64 13, i64* %len, i32 %214)
  store i64 %call347, i64* %uvc, align 8
  %215 = load i64, i64* %len, align 8
  %216 = load i64, i64* %foldlen, align 8
  %sub = sub i64 %216, %215
  store i64 %sub, i64* %foldlen, align 8
  %217 = load i64, i64* %len, align 8
  %218 = load i8*, i8** %uscan, align 8
  %add.ptr348 = getelementptr inbounds i8, i8* %218, i64 %217
  store i8* %add.ptr348, i8** %uscan, align 8
  store i64 0, i64* %len, align 8
  br label %if.end397

if.else349:                                       ; preds = %do_trie_utf8_fold
  %219 = load i8*, i8** %uc, align 8
  %arraydecay = getelementptr inbounds [14 x i8], [14 x i8]* %foldbuf, i64 0, i64 0
  %220 = load i8, i8* %flags330, align 1
  %call350 = call i64 @Perl__to_utf8_fold_flags(i8* %219, i8* %arraydecay, i64* %foldlen, i8 zeroext %220)
  store i64 %call350, i64* %uvc, align 8
  %221 = load i8*, i8** %uc, align 8
  %222 = load i8, i8* %221, align 1
  %idxprom351 = zext i8 %222 to i64
  %arrayidx352 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom351
  %223 = load i8, i8* %arrayidx352, align 1
  %conv353 = zext i8 %223 to i64
  store i64 %conv353, i64* %len, align 8
  %224 = load i64, i64* %uvc, align 8
  %cmp354 = icmp ult i64 %224, 128
  br i1 %cmp354, label %cond.true356, label %cond.false357

cond.true356:                                     ; preds = %if.else349
  br label %cond.end391

cond.false357:                                    ; preds = %if.else349
  %225 = load i64, i64* %uvc, align 8
  %cmp358 = icmp ult i64 %225, 2048
  br i1 %cmp358, label %cond.true360, label %cond.false361

cond.true360:                                     ; preds = %cond.false357
  br label %cond.end389

cond.false361:                                    ; preds = %cond.false357
  %226 = load i64, i64* %uvc, align 8
  %cmp362 = icmp ult i64 %226, 65536
  br i1 %cmp362, label %cond.true364, label %cond.false365

cond.true364:                                     ; preds = %cond.false361
  br label %cond.end387

cond.false365:                                    ; preds = %cond.false361
  %227 = load i64, i64* %uvc, align 8
  %cmp366 = icmp ult i64 %227, 2097152
  br i1 %cmp366, label %cond.true368, label %cond.false369

cond.true368:                                     ; preds = %cond.false365
  br label %cond.end385

cond.false369:                                    ; preds = %cond.false365
  %228 = load i64, i64* %uvc, align 8
  %cmp370 = icmp ult i64 %228, 67108864
  br i1 %cmp370, label %cond.true372, label %cond.false373

cond.true372:                                     ; preds = %cond.false369
  br label %cond.end383

cond.false373:                                    ; preds = %cond.false369
  %229 = load i64, i64* %uvc, align 8
  %cmp374 = icmp ult i64 %229, 2147483648
  br i1 %cmp374, label %cond.true376, label %cond.false377

cond.true376:                                     ; preds = %cond.false373
  br label %cond.end381

cond.false377:                                    ; preds = %cond.false373
  %230 = load i64, i64* %uvc, align 8
  %cmp378 = icmp ult i64 %230, 68719476736
  %231 = zext i1 %cmp378 to i64
  %cond380 = select i1 %cmp378, i32 7, i32 13
  br label %cond.end381

cond.end381:                                      ; preds = %cond.false377, %cond.true376
  %cond382 = phi i32 [ 6, %cond.true376 ], [ %cond380, %cond.false377 ]
  br label %cond.end383

cond.end383:                                      ; preds = %cond.end381, %cond.true372
  %cond384 = phi i32 [ 5, %cond.true372 ], [ %cond382, %cond.end381 ]
  br label %cond.end385

cond.end385:                                      ; preds = %cond.end383, %cond.true368
  %cond386 = phi i32 [ 4, %cond.true368 ], [ %cond384, %cond.end383 ]
  br label %cond.end387

cond.end387:                                      ; preds = %cond.end385, %cond.true364
  %cond388 = phi i32 [ 3, %cond.true364 ], [ %cond386, %cond.end385 ]
  br label %cond.end389

cond.end389:                                      ; preds = %cond.end387, %cond.true360
  %cond390 = phi i32 [ 2, %cond.true360 ], [ %cond388, %cond.end387 ]
  br label %cond.end391

cond.end391:                                      ; preds = %cond.end389, %cond.true356
  %cond392 = phi i32 [ 1, %cond.true356 ], [ %cond390, %cond.end389 ]
  %conv393 = sext i32 %cond392 to i64
  store i64 %conv393, i64* %skiplen, align 8
  %232 = load i64, i64* %skiplen, align 8
  %233 = load i64, i64* %foldlen, align 8
  %sub394 = sub i64 %233, %232
  store i64 %sub394, i64* %foldlen, align 8
  %arraydecay395 = getelementptr inbounds [14 x i8], [14 x i8]* %foldbuf, i64 0, i64 0
  %234 = load i64, i64* %skiplen, align 8
  %add.ptr396 = getelementptr inbounds i8, i8* %arraydecay395, i64 %234
  store i8* %add.ptr396, i8** %uscan, align 8
  br label %if.end397

if.end397:                                        ; preds = %cond.end391, %if.then346
  br label %sw.epilog

sw.bb398:                                         ; preds = %do.body
  %235 = load i8, i8* %flags330, align 1
  %conv399 = zext i8 %235 to i32
  %or400 = or i32 %conv399, 4
  %conv401 = trunc i32 %or400 to i8
  store i8 %conv401, i8* %flags330, align 1
  br label %sw.bb402

sw.bb402:                                         ; preds = %do.body, %sw.bb398
  %236 = load i64, i64* %foldlen, align 8
  %cmp403 = icmp ugt i64 %236, 0
  br i1 %cmp403, label %if.then405, label %if.else409

if.then405:                                       ; preds = %sw.bb402
  %237 = load i8*, i8** %uscan, align 8
  %238 = load i32, i32* %uniflags, align 4
  %call406 = call i64 @Perl_utf8n_to_uvchr(i8* %237, i64 13, i64* %len, i32 %238)
  store i64 %call406, i64* %uvc, align 8
  %239 = load i64, i64* %len, align 8
  %240 = load i64, i64* %foldlen, align 8
  %sub407 = sub i64 %240, %239
  store i64 %sub407, i64* %foldlen, align 8
  %241 = load i64, i64* %len, align 8
  %242 = load i8*, i8** %uscan, align 8
  %add.ptr408 = getelementptr inbounds i8, i8* %242, i64 %241
  store i8* %add.ptr408, i8** %uscan, align 8
  store i64 0, i64* %len, align 8
  br label %if.end456

if.else409:                                       ; preds = %sw.bb402
  store i64 1, i64* %len, align 8
  %243 = load i8*, i8** %uc, align 8
  %244 = load i8, i8* %243, align 1
  %arraydecay410 = getelementptr inbounds [14 x i8], [14 x i8]* %foldbuf, i64 0, i64 0
  %245 = load i8, i8* %flags330, align 1
  %conv411 = zext i8 %245 to i32
  %call412 = call i64 @Perl__to_fold_latin1(i8 zeroext %244, i8* %arraydecay410, i64* %foldlen, i32 %conv411)
  store i64 %call412, i64* %uvc, align 8
  %246 = load i64, i64* %uvc, align 8
  %cmp413 = icmp ult i64 %246, 128
  br i1 %cmp413, label %cond.true415, label %cond.false416

cond.true415:                                     ; preds = %if.else409
  br label %cond.end450

cond.false416:                                    ; preds = %if.else409
  %247 = load i64, i64* %uvc, align 8
  %cmp417 = icmp ult i64 %247, 2048
  br i1 %cmp417, label %cond.true419, label %cond.false420

cond.true419:                                     ; preds = %cond.false416
  br label %cond.end448

cond.false420:                                    ; preds = %cond.false416
  %248 = load i64, i64* %uvc, align 8
  %cmp421 = icmp ult i64 %248, 65536
  br i1 %cmp421, label %cond.true423, label %cond.false424

cond.true423:                                     ; preds = %cond.false420
  br label %cond.end446

cond.false424:                                    ; preds = %cond.false420
  %249 = load i64, i64* %uvc, align 8
  %cmp425 = icmp ult i64 %249, 2097152
  br i1 %cmp425, label %cond.true427, label %cond.false428

cond.true427:                                     ; preds = %cond.false424
  br label %cond.end444

cond.false428:                                    ; preds = %cond.false424
  %250 = load i64, i64* %uvc, align 8
  %cmp429 = icmp ult i64 %250, 67108864
  br i1 %cmp429, label %cond.true431, label %cond.false432

cond.true431:                                     ; preds = %cond.false428
  br label %cond.end442

cond.false432:                                    ; preds = %cond.false428
  %251 = load i64, i64* %uvc, align 8
  %cmp433 = icmp ult i64 %251, 2147483648
  br i1 %cmp433, label %cond.true435, label %cond.false436

cond.true435:                                     ; preds = %cond.false432
  br label %cond.end440

cond.false436:                                    ; preds = %cond.false432
  %252 = load i64, i64* %uvc, align 8
  %cmp437 = icmp ult i64 %252, 68719476736
  %253 = zext i1 %cmp437 to i64
  %cond439 = select i1 %cmp437, i32 7, i32 13
  br label %cond.end440

cond.end440:                                      ; preds = %cond.false436, %cond.true435
  %cond441 = phi i32 [ 6, %cond.true435 ], [ %cond439, %cond.false436 ]
  br label %cond.end442

cond.end442:                                      ; preds = %cond.end440, %cond.true431
  %cond443 = phi i32 [ 5, %cond.true431 ], [ %cond441, %cond.end440 ]
  br label %cond.end444

cond.end444:                                      ; preds = %cond.end442, %cond.true427
  %cond445 = phi i32 [ 4, %cond.true427 ], [ %cond443, %cond.end442 ]
  br label %cond.end446

cond.end446:                                      ; preds = %cond.end444, %cond.true423
  %cond447 = phi i32 [ 3, %cond.true423 ], [ %cond445, %cond.end444 ]
  br label %cond.end448

cond.end448:                                      ; preds = %cond.end446, %cond.true419
  %cond449 = phi i32 [ 2, %cond.true419 ], [ %cond447, %cond.end446 ]
  br label %cond.end450

cond.end450:                                      ; preds = %cond.end448, %cond.true415
  %cond451 = phi i32 [ 1, %cond.true415 ], [ %cond449, %cond.end448 ]
  %conv452 = sext i32 %cond451 to i64
  store i64 %conv452, i64* %skiplen, align 8
  %254 = load i64, i64* %skiplen, align 8
  %255 = load i64, i64* %foldlen, align 8
  %sub453 = sub i64 %255, %254
  store i64 %sub453, i64* %foldlen, align 8
  %arraydecay454 = getelementptr inbounds [14 x i8], [14 x i8]* %foldbuf, i64 0, i64 0
  %256 = load i64, i64* %skiplen, align 8
  %add.ptr455 = getelementptr inbounds i8, i8* %arraydecay454, i64 %256
  store i8* %add.ptr455, i8** %uscan, align 8
  br label %if.end456

if.end456:                                        ; preds = %cond.end450, %if.then405
  br label %sw.epilog

sw.bb457:                                         ; preds = %do.body
  %257 = load i8, i8* %utf8_target, align 1
  %tobool458 = trunc i8 %257 to i1
  br i1 %tobool458, label %land.lhs.true460, label %if.end465

land.lhs.true460:                                 ; preds = %sw.bb457
  %258 = load i8*, i8** %uc, align 8
  %259 = load i8, i8* %258, align 1
  %conv461 = zext i8 %259 to i32
  %cmp462 = icmp sge i32 %conv461, 196
  br i1 %cmp462, label %if.then464, label %if.end465

if.then464:                                       ; preds = %land.lhs.true460
  br label %if.end465

if.end465:                                        ; preds = %if.then464, %land.lhs.true460, %sw.bb457
  br label %sw.bb466

sw.bb466:                                         ; preds = %do.body, %if.end465
  %260 = load i8*, i8** %uc, align 8
  %261 = load i32, i32* %uniflags, align 4
  %call467 = call i64 @Perl_utf8n_to_uvchr(i8* %260, i64 13, i64* %len, i32 %261)
  store i64 %call467, i64* %uvc, align 8
  br label %sw.epilog

sw.bb468:                                         ; preds = %do.body
  %262 = load i8*, i8** %uc, align 8
  %263 = load i8, i8* %262, align 1
  %conv469 = zext i8 %263 to i64
  store i64 %conv469, i64* %uvc, align 8
  store i64 1, i64* %len, align 8
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.bb468, %do.body, %sw.bb466, %if.end456, %if.end397
  %264 = load i64, i64* %uvc, align 8
  %cmp470 = icmp ult i64 %264, 256
  br i1 %cmp470, label %if.then472, label %if.else474

if.then472:                                       ; preds = %sw.epilog
  %265 = load %struct._reg_trie_data*, %struct._reg_trie_data** %trie, align 8
  %charmap = getelementptr inbounds %struct._reg_trie_data, %struct._reg_trie_data* %265, i32 0, i32 2
  %266 = load i16*, i16** %charmap, align 8
  %267 = load i64, i64* %uvc, align 8
  %arrayidx473 = getelementptr inbounds i16, i16* %266, i64 %267
  %268 = load i16, i16* %arrayidx473, align 2
  store i16 %268, i16* %charid, align 2
  br label %if.end491

if.else474:                                       ; preds = %sw.epilog
  store i16 0, i16* %charid, align 2
  %269 = load %struct.hv*, %struct.hv** %widecharmap, align 8
  %tobool475 = icmp ne %struct.hv* %269, null
  br i1 %tobool475, label %if.then476, label %if.end490

if.then476:                                       ; preds = %if.else474
  %270 = load %struct.hv*, %struct.hv** %widecharmap, align 8
  %271 = bitcast i64* %uvc to i8*
  %call477 = call i8* @Perl_hv_common_key_len(%struct.hv* %270, i8* %271, i32 8, i32 32, %struct.sv* null, i32 0)
  %272 = bitcast i8* %call477 to %struct.sv**
  store %struct.sv** %272, %struct.sv*** %svpp, align 8
  %273 = load %struct.sv**, %struct.sv*** %svpp, align 8
  %tobool478 = icmp ne %struct.sv** %273, null
  br i1 %tobool478, label %if.then479, label %if.end489

if.then479:                                       ; preds = %if.then476
  %274 = load %struct.sv**, %struct.sv*** %svpp, align 8
  %275 = load %struct.sv*, %struct.sv** %274, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %275, i32 0, i32 2
  %276 = load i32, i32* %sv_flags, align 4
  %and480 = and i32 %276, 2097408
  %cmp481 = icmp eq i32 %and480, 256
  br i1 %cmp481, label %cond.true483, label %cond.false484

cond.true483:                                     ; preds = %if.then479
  %277 = load %struct.sv**, %struct.sv*** %svpp, align 8
  %278 = load %struct.sv*, %struct.sv** %277, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %278, i32 0, i32 0
  %279 = load i8*, i8** %sv_any, align 8
  %280 = bitcast i8* %279 to %struct.xpviv*
  %xiv_u = getelementptr inbounds %struct.xpviv, %struct.xpviv* %280, i32 0, i32 4
  %xivu_iv = bitcast %union._xivu* %xiv_u to i64*
  %281 = load i64, i64* %xivu_iv, align 8
  br label %cond.end486

cond.false484:                                    ; preds = %if.then479
  %282 = load %struct.sv**, %struct.sv*** %svpp, align 8
  %283 = load %struct.sv*, %struct.sv** %282, align 8
  %call485 = call i64 @Perl_sv_2iv_flags(%struct.sv* %283, i32 2)
  br label %cond.end486

cond.end486:                                      ; preds = %cond.false484, %cond.true483
  %cond487 = phi i64 [ %281, %cond.true483 ], [ %call485, %cond.false484 ]
  %conv488 = trunc i64 %cond487 to i16
  store i16 %conv488, i16* %charid, align 2
  br label %if.end489

if.end489:                                        ; preds = %cond.end486, %if.then476
  br label %if.end490

if.end490:                                        ; preds = %if.end489, %if.else474
  br label %if.end491

if.end491:                                        ; preds = %if.end490, %if.then472
  br label %do.end

do.end:                                           ; preds = %if.end491
  %284 = load i32, i32* %charcount, align 4
  %inc492 = add i32 %284, 1
  store i32 %inc492, i32* %charcount, align 4
  %285 = load i64, i64* %foldlen, align 8
  %cmp493 = icmp ugt i64 %285, 0
  br i1 %cmp493, label %if.then495, label %if.end499

if.then495:                                       ; preds = %do.end
  %286 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u496 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %286, i32 0, i32 2
  %trie497 = bitcast %union.anon.19* %u496 to %struct.anon.23*
  %longfold498 = getelementptr inbounds %struct.anon.23, %struct.anon.23* %trie497, i32 0, i32 5
  store i8 1, i8* %longfold498, align 8
  br label %if.end499

if.end499:                                        ; preds = %if.then495, %do.end
  %287 = load i16, i16* %charid, align 2
  %conv500 = zext i16 %287 to i32
  %tobool501 = icmp ne i32 %conv500, 0
  br i1 %tobool501, label %land.lhs.true502, label %if.else524

land.lhs.true502:                                 ; preds = %if.end499
  %288 = load i32, i32* %base, align 4
  %289 = load i16, i16* %charid, align 2
  %conv503 = zext i16 %289 to i32
  %add504 = add i32 %288, %conv503
  %sub505 = sub i32 %add504, 1
  %290 = load %struct._reg_trie_data*, %struct._reg_trie_data** %trie, align 8
  %uniquecharcount = getelementptr inbounds %struct._reg_trie_data, %struct._reg_trie_data* %290, i32 0, i32 8
  %291 = load i16, i16* %uniquecharcount, align 8
  %conv506 = zext i16 %291 to i32
  %sub507 = sub i32 %sub505, %conv506
  store i32 %sub507, i32* %offset, align 4
  %cmp508 = icmp sge i32 %sub507, 0
  br i1 %cmp508, label %land.lhs.true510, label %if.else524

land.lhs.true510:                                 ; preds = %land.lhs.true502
  %292 = load i32, i32* %offset, align 4
  %293 = load %struct._reg_trie_data*, %struct._reg_trie_data** %trie, align 8
  %lasttrans = getelementptr inbounds %struct._reg_trie_data, %struct._reg_trie_data* %293, i32 0, i32 1
  %294 = load i32, i32* %lasttrans, align 4
  %cmp511 = icmp ult i32 %292, %294
  br i1 %cmp511, label %land.lhs.true513, label %if.else524

land.lhs.true513:                                 ; preds = %land.lhs.true510
  %295 = load %struct._reg_trie_data*, %struct._reg_trie_data** %trie, align 8
  %trans514 = getelementptr inbounds %struct._reg_trie_data, %struct._reg_trie_data* %295, i32 0, i32 4
  %296 = load %struct._reg_trie_trans*, %struct._reg_trie_trans** %trans514, align 8
  %297 = load i32, i32* %offset, align 4
  %idxprom515 = sext i32 %297 to i64
  %arrayidx516 = getelementptr inbounds %struct._reg_trie_trans, %struct._reg_trie_trans* %296, i64 %idxprom515
  %check = getelementptr inbounds %struct._reg_trie_trans, %struct._reg_trie_trans* %arrayidx516, i32 0, i32 1
  %298 = load i32, i32* %check, align 4
  %299 = load i32, i32* %state, align 4
  %cmp517 = icmp eq i32 %298, %299
  br i1 %cmp517, label %if.then519, label %if.else524

if.then519:                                       ; preds = %land.lhs.true513
  %300 = load %struct._reg_trie_data*, %struct._reg_trie_data** %trie, align 8
  %trans520 = getelementptr inbounds %struct._reg_trie_data, %struct._reg_trie_data* %300, i32 0, i32 4
  %301 = load %struct._reg_trie_trans*, %struct._reg_trie_trans** %trans520, align 8
  %302 = load i32, i32* %offset, align 4
  %idxprom521 = sext i32 %302 to i64
  %arrayidx522 = getelementptr inbounds %struct._reg_trie_trans, %struct._reg_trie_trans* %301, i64 %idxprom521
  %next523 = getelementptr inbounds %struct._reg_trie_trans, %struct._reg_trie_trans* %arrayidx522, i32 0, i32 0
  %303 = load i32, i32* %next523, align 4
  store i32 %303, i32* %state, align 4
  br label %if.end525

if.else524:                                       ; preds = %land.lhs.true513, %land.lhs.true510, %land.lhs.true502, %if.end499
  store i32 0, i32* %state, align 4
  br label %if.end525

if.end525:                                        ; preds = %if.else524, %if.then519
  %304 = load i64, i64* %len, align 8
  %305 = load i8*, i8** %uc, align 8
  %add.ptr526 = getelementptr inbounds i8, i8* %305, i64 %304
  store i8* %add.ptr526, i8** %uc, align 8
  br label %if.end528

if.else527:                                       ; preds = %lor.lhs.false325, %if.end321
  store i32 0, i32* %state, align 4
  br label %if.end528

if.end528:                                        ; preds = %if.else527, %if.end525
  br label %while.cond264

while.end:                                        ; preds = %land.end
  %306 = load i32, i32* %accepted, align 4
  %tobool529 = icmp ne i32 %306, 0
  br i1 %tobool529, label %if.end531, label %if.then530

if.then530:                                       ; preds = %while.end
  br label %no

if.end531:                                        ; preds = %while.end
  %307 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u532 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %307, i32 0, i32 2
  %trie533 = bitcast %union.anon.19* %u532 to %struct.anon.23*
  %topword534 = getelementptr inbounds %struct.anon.23, %struct.anon.23* %trie533, i32 0, i32 11
  %308 = load i16, i16* %topword534, align 2
  store i16 %308, i16* %w, align 2
  store i32 0, i32* %accepted, align 4
  br label %while.cond535

while.cond535:                                    ; preds = %while.body537, %if.end531
  %309 = load i16, i16* %w, align 2
  %tobool536 = icmp ne i16 %309, 0
  br i1 %tobool536, label %while.body537, label %while.end541

while.body537:                                    ; preds = %while.cond535
  %310 = load %struct._reg_trie_data*, %struct._reg_trie_data** %trie, align 8
  %wordinfo = getelementptr inbounds %struct._reg_trie_data, %struct._reg_trie_data* %310, i32 0, i32 7
  %311 = load %struct.reg_trie_wordinfo*, %struct.reg_trie_wordinfo** %wordinfo, align 8
  %312 = load i16, i16* %w, align 2
  %idxprom538 = zext i16 %312 to i64
  %arrayidx539 = getelementptr inbounds %struct.reg_trie_wordinfo, %struct.reg_trie_wordinfo* %311, i64 %idxprom538
  %prev = getelementptr inbounds %struct.reg_trie_wordinfo, %struct.reg_trie_wordinfo* %arrayidx539, i32 0, i32 0
  %313 = load i16, i16* %prev, align 4
  store i16 %313, i16* %w, align 2
  %314 = load i32, i32* %accepted, align 4
  %inc540 = add i32 %314, 1
  store i32 %inc540, i32* %accepted, align 4
  br label %while.cond535

while.end541:                                     ; preds = %while.cond535
  %315 = load i32, i32* %accepted, align 4
  %316 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u542 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %316, i32 0, i32 2
  %trie543 = bitcast %union.anon.19* %u542 to %struct.anon.23*
  %accepted544 = getelementptr inbounds %struct.anon.23, %struct.anon.23* %trie543, i32 0, i32 4
  store i32 %315, i32* %accepted544, align 4
  br label %trie_first_try

sw.bb545:                                         ; preds = %cond.end45
  %317 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u547 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %317, i32 0, i32 2
  %trie548 = bitcast %union.anon.19* %u547 to %struct.anon.23*
  %jump549 = getelementptr inbounds %struct.anon.23, %struct.anon.23* %trie548, i32 0, i32 6
  %318 = load i16*, i16** %jump549, align 8
  %tobool550 = icmp ne i16* %318, null
  br i1 %tobool550, label %if.then551, label %if.end575

if.then551:                                       ; preds = %sw.bb545
  br label %do.body552

do.body552:                                       ; preds = %if.then551
  %319 = load i32, i32* @PL_savestack_ix, align 4
  %320 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u553 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %320, i32 0, i32 2
  %trie554 = bitcast %union.anon.19* %u553 to %struct.anon.23*
  %cp = getelementptr inbounds %struct.anon.23, %struct.anon.23* %trie554, i32 0, i32 3
  %321 = load i32, i32* %cp, align 8
  %cmp555 = icmp sgt i32 %319, %321
  br i1 %cmp555, label %if.then557, label %if.end561

if.then557:                                       ; preds = %do.body552
  %322 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u558 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %322, i32 0, i32 2
  %trie559 = bitcast %union.anon.19* %u558 to %struct.anon.23*
  %cp560 = getelementptr inbounds %struct.anon.23, %struct.anon.23* %trie559, i32 0, i32 3
  %323 = load i32, i32* %cp560, align 8
  call void @Perl_leave_scope(i32 %323)
  br label %if.end561

if.end561:                                        ; preds = %if.then557, %do.body552
  br label %do.end562

do.end562:                                        ; preds = %if.end561
  %324 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %lastparen = getelementptr inbounds %struct.regexp, %struct.regexp* %324, i32 0, i32 15
  %325 = load i32, i32* %lastparen, align 8
  store i32 %325, i32* %n, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %do.end562
  %326 = load i32, i32* %n, align 4
  %327 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u563 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %327, i32 0, i32 2
  %trie564 = bitcast %union.anon.19* %u563 to %struct.anon.23*
  %lastparen565 = getelementptr inbounds %struct.anon.23, %struct.anon.23* %trie564, i32 0, i32 1
  %328 = load i32, i32* %lastparen565, align 8
  %cmp566 = icmp ugt i32 %326, %328
  br i1 %cmp566, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %329 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %offs568 = getelementptr inbounds %struct.regexp, %struct.regexp* %329, i32 0, i32 17
  %330 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %offs568, align 8
  %331 = load i32, i32* %n, align 4
  %idxprom569 = zext i32 %331 to i64
  %arrayidx570 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %330, i64 %idxprom569
  %end = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %arrayidx570, i32 0, i32 1
  store i64 -1, i64* %end, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %332 = load i32, i32* %n, align 4
  %dec = add i32 %332, -1
  store i32 %dec, i32* %n, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %333 = load i32, i32* %n, align 4
  %334 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %lastparen571 = getelementptr inbounds %struct.regexp, %struct.regexp* %334, i32 0, i32 15
  store i32 %333, i32* %lastparen571, align 8
  %335 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u572 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %335, i32 0, i32 2
  %trie573 = bitcast %union.anon.19* %u572 to %struct.anon.23*
  %lastcloseparen = getelementptr inbounds %struct.anon.23, %struct.anon.23* %trie573, i32 0, i32 2
  %336 = load i32, i32* %lastcloseparen, align 4
  %337 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %lastcloseparen574 = getelementptr inbounds %struct.regexp, %struct.regexp* %337, i32 0, i32 16
  store i32 %336, i32* %lastcloseparen574, align 4
  br label %if.end575

if.end575:                                        ; preds = %for.end, %sw.bb545
  %338 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u576 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %338, i32 0, i32 2
  %trie577 = bitcast %union.anon.19* %u576 to %struct.anon.23*
  %accepted578 = getelementptr inbounds %struct.anon.23, %struct.anon.23* %trie577, i32 0, i32 4
  %339 = load i32, i32* %accepted578, align 4
  %dec579 = add i32 %339, -1
  store i32 %dec579, i32* %accepted578, align 4
  %tobool580 = icmp ne i32 %dec579, 0
  br i1 %tobool580, label %if.end582, label %if.then581

if.then581:                                       ; preds = %if.end575
  br label %no_silent

if.end582:                                        ; preds = %if.end575
  store i16 0, i16* %min, align 2
  %340 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u584 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %340, i32 0, i32 2
  %trie585 = bitcast %union.anon.19* %u584 to %struct.anon.23*
  %nextword586 = getelementptr inbounds %struct.anon.23, %struct.anon.23* %trie585, i32 0, i32 10
  %341 = load i16, i16* %nextword586, align 4
  store i16 %341, i16* %nextword583, align 2
  %342 = load %struct.regexp_internal*, %struct.regexp_internal** %rexi, align 8
  %data588 = getelementptr inbounds %struct.regexp_internal, %struct.regexp_internal* %342, i32 0, i32 3
  %343 = load %struct.reg_data*, %struct.reg_data** %data588, align 8
  %data589 = getelementptr inbounds %struct.reg_data, %struct.reg_data* %343, i32 0, i32 2
  %344 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u590 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %344, i32 0, i32 2
  %trie591 = bitcast %union.anon.19* %u590 to %struct.anon.23*
  %me592 = getelementptr inbounds %struct.anon.23, %struct.anon.23* %trie591, i32 0, i32 7
  %345 = load %struct.regnode*, %struct.regnode** %me592, align 8
  %346 = bitcast %struct.regnode* %345 to %struct.regnode_1*
  %arg1593 = getelementptr inbounds %struct.regnode_1, %struct.regnode_1* %346, i32 0, i32 3
  %347 = load i32, i32* %arg1593, align 4
  %idxprom594 = zext i32 %347 to i64
  %arrayidx595 = getelementptr inbounds [1 x i8*], [1 x i8*]* %data589, i64 0, i64 %idxprom594
  %348 = load i8*, i8** %arrayidx595, align 8
  %349 = bitcast i8* %348 to %struct._reg_trie_data*
  %wordinfo596 = getelementptr inbounds %struct._reg_trie_data, %struct._reg_trie_data* %349, i32 0, i32 7
  %350 = load %struct.reg_trie_wordinfo*, %struct.reg_trie_wordinfo** %wordinfo596, align 8
  store %struct.reg_trie_wordinfo* %350, %struct.reg_trie_wordinfo** %wordinfo587, align 8
  %351 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u597 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %351, i32 0, i32 2
  %trie598 = bitcast %union.anon.19* %u597 to %struct.anon.23*
  %topword599 = getelementptr inbounds %struct.anon.23, %struct.anon.23* %trie598, i32 0, i32 11
  %352 = load i16, i16* %topword599, align 2
  store i16 %352, i16* %word, align 2
  br label %for.cond600

for.cond600:                                      ; preds = %for.inc616, %if.end582
  %353 = load i16, i16* %word, align 2
  %tobool601 = icmp ne i16 %353, 0
  br i1 %tobool601, label %for.body602, label %for.end620

for.body602:                                      ; preds = %for.cond600
  %354 = load i16, i16* %word, align 2
  %conv603 = zext i16 %354 to i32
  %355 = load i16, i16* %nextword583, align 2
  %conv604 = zext i16 %355 to i32
  %cmp605 = icmp sgt i32 %conv603, %conv604
  br i1 %cmp605, label %land.lhs.true607, label %if.end615

land.lhs.true607:                                 ; preds = %for.body602
  %356 = load i16, i16* %min, align 2
  %tobool608 = icmp ne i16 %356, 0
  br i1 %tobool608, label %lor.lhs.false609, label %if.then614

lor.lhs.false609:                                 ; preds = %land.lhs.true607
  %357 = load i16, i16* %word, align 2
  %conv610 = zext i16 %357 to i32
  %358 = load i16, i16* %min, align 2
  %conv611 = zext i16 %358 to i32
  %cmp612 = icmp slt i32 %conv610, %conv611
  br i1 %cmp612, label %if.then614, label %if.end615

if.then614:                                       ; preds = %lor.lhs.false609, %land.lhs.true607
  %359 = load i16, i16* %word, align 2
  store i16 %359, i16* %min, align 2
  br label %if.end615

if.end615:                                        ; preds = %if.then614, %lor.lhs.false609, %for.body602
  br label %for.inc616

for.inc616:                                       ; preds = %if.end615
  %360 = load %struct.reg_trie_wordinfo*, %struct.reg_trie_wordinfo** %wordinfo587, align 8
  %361 = load i16, i16* %word, align 2
  %idxprom617 = zext i16 %361 to i64
  %arrayidx618 = getelementptr inbounds %struct.reg_trie_wordinfo, %struct.reg_trie_wordinfo* %360, i64 %idxprom617
  %prev619 = getelementptr inbounds %struct.reg_trie_wordinfo, %struct.reg_trie_wordinfo* %arrayidx618, i32 0, i32 0
  %362 = load i16, i16* %prev619, align 4
  store i16 %362, i16* %word, align 2
  br label %for.cond600

for.end620:                                       ; preds = %for.cond600
  %363 = load i16, i16* %min, align 2
  %364 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u621 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %364, i32 0, i32 2
  %trie622 = bitcast %union.anon.19* %u621 to %struct.anon.23*
  %nextword623 = getelementptr inbounds %struct.anon.23, %struct.anon.23* %trie622, i32 0, i32 10
  store i16 %363, i16* %nextword623, align 4
  br label %trie_first_try

trie_first_try:                                   ; preds = %for.end620, %while.end541
  %365 = load i8, i8* %do_cutgroup, align 1
  %tobool624 = trunc i8 %365 to i1
  br i1 %tobool624, label %if.then625, label %if.end626

if.then625:                                       ; preds = %trie_first_try
  store i8 0, i8* %do_cutgroup, align 1
  store i8 0, i8* %no_final, align 1
  br label %if.end626

if.end626:                                        ; preds = %if.then625, %trie_first_try
  %366 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u627 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %366, i32 0, i32 2
  %trie628 = bitcast %union.anon.19* %u627 to %struct.anon.23*
  %jump629 = getelementptr inbounds %struct.anon.23, %struct.anon.23* %trie628, i32 0, i32 6
  %367 = load i16*, i16** %jump629, align 8
  %tobool630 = icmp ne i16* %367, null
  br i1 %tobool630, label %if.then631, label %if.end643

if.then631:                                       ; preds = %if.end626
  %368 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %lastparen632 = getelementptr inbounds %struct.regexp, %struct.regexp* %368, i32 0, i32 15
  %369 = load i32, i32* %lastparen632, align 8
  %370 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u633 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %370, i32 0, i32 2
  %trie634 = bitcast %union.anon.19* %u633 to %struct.anon.23*
  %lastparen635 = getelementptr inbounds %struct.anon.23, %struct.anon.23* %trie634, i32 0, i32 1
  store i32 %369, i32* %lastparen635, align 8
  %371 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %lastcloseparen636 = getelementptr inbounds %struct.regexp, %struct.regexp* %371, i32 0, i32 16
  %372 = load i32, i32* %lastcloseparen636, align 4
  %373 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u637 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %373, i32 0, i32 2
  %trie638 = bitcast %union.anon.19* %u637 to %struct.anon.23*
  %lastcloseparen639 = getelementptr inbounds %struct.anon.23, %struct.anon.23* %trie638, i32 0, i32 2
  store i32 %372, i32* %lastcloseparen639, align 4
  %374 = load i32, i32* @PL_savestack_ix, align 4
  %375 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u640 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %375, i32 0, i32 2
  %trie641 = bitcast %union.anon.19* %u640 to %struct.anon.23*
  %cp642 = getelementptr inbounds %struct.anon.23, %struct.anon.23* %trie641, i32 0, i32 3
  store i32 %374, i32* %cp642, align 8
  br label %if.end643

if.end643:                                        ; preds = %if.then631, %if.end626
  %376 = load %struct.regexp_internal*, %struct.regexp_internal** %rexi, align 8
  %data645 = getelementptr inbounds %struct.regexp_internal, %struct.regexp_internal* %376, i32 0, i32 3
  %377 = load %struct.reg_data*, %struct.reg_data** %data645, align 8
  %data646 = getelementptr inbounds %struct.reg_data, %struct.reg_data* %377, i32 0, i32 2
  %378 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u647 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %378, i32 0, i32 2
  %trie648 = bitcast %union.anon.19* %u647 to %struct.anon.23*
  %me649 = getelementptr inbounds %struct.anon.23, %struct.anon.23* %trie648, i32 0, i32 7
  %379 = load %struct.regnode*, %struct.regnode** %me649, align 8
  %380 = bitcast %struct.regnode* %379 to %struct.regnode_1*
  %arg1650 = getelementptr inbounds %struct.regnode_1, %struct.regnode_1* %380, i32 0, i32 3
  %381 = load i32, i32* %arg1650, align 4
  %idxprom651 = zext i32 %381 to i64
  %arrayidx652 = getelementptr inbounds [1 x i8*], [1 x i8*]* %data646, i64 0, i64 %idxprom651
  %382 = load i8*, i8** %arrayidx652, align 8
  %383 = bitcast i8* %382 to %struct._reg_trie_data*
  store %struct._reg_trie_data* %383, %struct._reg_trie_data** %trie644, align 8
  %384 = load %struct._reg_trie_data*, %struct._reg_trie_data** %trie644, align 8
  %wordinfo653 = getelementptr inbounds %struct._reg_trie_data, %struct._reg_trie_data* %384, i32 0, i32 7
  %385 = load %struct.reg_trie_wordinfo*, %struct.reg_trie_wordinfo** %wordinfo653, align 8
  %386 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u654 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %386, i32 0, i32 2
  %trie655 = bitcast %union.anon.19* %u654 to %struct.anon.23*
  %nextword656 = getelementptr inbounds %struct.anon.23, %struct.anon.23* %trie655, i32 0, i32 10
  %387 = load i16, i16* %nextword656, align 4
  %idxprom657 = zext i16 %387 to i64
  %arrayidx658 = getelementptr inbounds %struct.reg_trie_wordinfo, %struct.reg_trie_wordinfo* %385, i64 %idxprom657
  %len659 = getelementptr inbounds %struct.reg_trie_wordinfo, %struct.reg_trie_wordinfo* %arrayidx658, i32 0, i32 1
  %388 = load i32, i32* %len659, align 4
  %389 = load %struct._reg_trie_data*, %struct._reg_trie_data** %trie644, align 8
  %prefixlen = getelementptr inbounds %struct._reg_trie_data, %struct._reg_trie_data* %389, i32 0, i32 12
  %390 = load i32, i32* %prefixlen, align 8
  %sub660 = sub i32 %388, %390
  %391 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u661 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %391, i32 0, i32 2
  %trie662 = bitcast %union.anon.19* %u661 to %struct.anon.23*
  %firstchars663 = getelementptr inbounds %struct.anon.23, %struct.anon.23* %trie662, i32 0, i32 9
  %392 = load i32, i32* %firstchars663, align 8
  %sub664 = sub i32 %sub660, %392
  store i32 %sub664, i32* %chars, align 4
  %393 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u665 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %393, i32 0, i32 2
  %trie666 = bitcast %union.anon.19* %u665 to %struct.anon.23*
  %firstpos667 = getelementptr inbounds %struct.anon.23, %struct.anon.23* %trie666, i32 0, i32 8
  %394 = load i8*, i8** %firstpos667, align 8
  store i8* %394, i8** %uc546, align 8
  %395 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u668 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %395, i32 0, i32 2
  %trie669 = bitcast %union.anon.19* %u668 to %struct.anon.23*
  %longfold670 = getelementptr inbounds %struct.anon.23, %struct.anon.23* %trie669, i32 0, i32 5
  %396 = load i8, i8* %longfold670, align 8
  %tobool671 = trunc i8 %396 to i1
  br i1 %tobool671, label %if.then672, label %if.else704

if.then672:                                       ; preds = %if.end643
  br label %while.cond678

while.cond678:                                    ; preds = %while.end702, %if.then672
  %397 = load i32, i32* %chars, align 4
  %tobool679 = icmp ne i32 %397, 0
  br i1 %tobool679, label %while.body680, label %while.end703

while.body680:                                    ; preds = %while.cond678
  %398 = load i8, i8* %utf8_target, align 1
  %tobool681 = trunc i8 %398 to i1
  br i1 %tobool681, label %if.then682, label %if.else685

if.then682:                                       ; preds = %while.body680
  %399 = load i8*, i8** %uc546, align 8
  %400 = load i32, i32* %uniflags, align 4
  %call683 = call i64 @Perl_utf8n_to_uvchr(i8* %399, i64 13, i64* %len675, i32 %400)
  store i64 %call683, i64* %uvc676, align 8
  %401 = load i64, i64* %len675, align 8
  %402 = load i8*, i8** %uc546, align 8
  %add.ptr684 = getelementptr inbounds i8, i8* %402, i64 %401
  store i8* %add.ptr684, i8** %uc546, align 8
  br label %if.end688

if.else685:                                       ; preds = %while.body680
  %403 = load i8*, i8** %uc546, align 8
  %404 = load i8, i8* %403, align 1
  %conv686 = zext i8 %404 to i64
  store i64 %conv686, i64* %uvc676, align 8
  %405 = load i8*, i8** %uc546, align 8
  %incdec.ptr687 = getelementptr inbounds i8, i8* %405, i32 1
  store i8* %incdec.ptr687, i8** %uc546, align 8
  br label %if.end688

if.end688:                                        ; preds = %if.else685, %if.then682
  %406 = load i64, i64* %uvc676, align 8
  %arraydecay689 = getelementptr inbounds [14 x i8], [14 x i8]* %foldbuf673, i64 0, i64 0
  %call690 = call i64 @Perl__to_uni_fold_flags(i64 %406, i8* %arraydecay689, i64* %foldlen674, i8 zeroext 2)
  store i64 %call690, i64* %uvc676, align 8
  %arraydecay691 = getelementptr inbounds [14 x i8], [14 x i8]* %foldbuf673, i64 0, i64 0
  store i8* %arraydecay691, i8** %uscan677, align 8
  br label %while.cond692

while.cond692:                                    ; preds = %if.end698, %if.end688
  %407 = load i64, i64* %foldlen674, align 8
  %tobool693 = icmp ne i64 %407, 0
  br i1 %tobool693, label %while.body694, label %while.end702

while.body694:                                    ; preds = %while.cond692
  %408 = load i32, i32* %chars, align 4
  %dec695 = add i32 %408, -1
  store i32 %dec695, i32* %chars, align 4
  %tobool696 = icmp ne i32 %dec695, 0
  br i1 %tobool696, label %if.end698, label %if.then697

if.then697:                                       ; preds = %while.body694
  br label %while.end702

if.end698:                                        ; preds = %while.body694
  %409 = load i8*, i8** %uscan677, align 8
  %410 = load i32, i32* %uniflags, align 4
  %call699 = call i64 @Perl_utf8n_to_uvchr(i8* %409, i64 13, i64* %len675, i32 %410)
  store i64 %call699, i64* %uvc676, align 8
  %411 = load i64, i64* %len675, align 8
  %412 = load i8*, i8** %uscan677, align 8
  %add.ptr700 = getelementptr inbounds i8, i8* %412, i64 %411
  store i8* %add.ptr700, i8** %uscan677, align 8
  %413 = load i64, i64* %len675, align 8
  %414 = load i64, i64* %foldlen674, align 8
  %sub701 = sub i64 %414, %413
  store i64 %sub701, i64* %foldlen674, align 8
  br label %while.cond692

while.end702:                                     ; preds = %if.then697, %while.cond692
  br label %while.cond678

while.end703:                                     ; preds = %while.cond678
  br label %if.end721

if.else704:                                       ; preds = %if.end643
  %415 = load i8, i8* %utf8_target, align 1
  %tobool705 = trunc i8 %415 to i1
  br i1 %tobool705, label %if.then706, label %if.else717

if.then706:                                       ; preds = %if.else704
  br label %while.cond707

while.cond707:                                    ; preds = %while.body710, %if.then706
  %416 = load i32, i32* %chars, align 4
  %dec708 = add i32 %416, -1
  store i32 %dec708, i32* %chars, align 4
  %tobool709 = icmp ne i32 %416, 0
  br i1 %tobool709, label %while.body710, label %while.end716

while.body710:                                    ; preds = %while.cond707
  %417 = load i8*, i8** %uc546, align 8
  %418 = load i8, i8* %417, align 1
  %idxprom711 = zext i8 %418 to i64
  %arrayidx712 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom711
  %419 = load i8, i8* %arrayidx712, align 1
  %conv713 = zext i8 %419 to i32
  %420 = load i8*, i8** %uc546, align 8
  %idx.ext714 = sext i32 %conv713 to i64
  %add.ptr715 = getelementptr inbounds i8, i8* %420, i64 %idx.ext714
  store i8* %add.ptr715, i8** %uc546, align 8
  br label %while.cond707

while.end716:                                     ; preds = %while.cond707
  br label %if.end720

if.else717:                                       ; preds = %if.else704
  %421 = load i32, i32* %chars, align 4
  %422 = load i8*, i8** %uc546, align 8
  %idx.ext718 = zext i32 %421 to i64
  %add.ptr719 = getelementptr inbounds i8, i8* %422, i64 %idx.ext718
  store i8* %add.ptr719, i8** %uc546, align 8
  br label %if.end720

if.end720:                                        ; preds = %if.else717, %while.end716
  br label %if.end721

if.end721:                                        ; preds = %if.end720, %while.end703
  %423 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u722 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %423, i32 0, i32 2
  %trie723 = bitcast %union.anon.19* %u722 to %struct.anon.23*
  %me724 = getelementptr inbounds %struct.anon.23, %struct.anon.23* %trie723, i32 0, i32 7
  %424 = load %struct.regnode*, %struct.regnode** %me724, align 8
  %425 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u725 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %425, i32 0, i32 2
  %trie726 = bitcast %union.anon.19* %u725 to %struct.anon.23*
  %jump727 = getelementptr inbounds %struct.anon.23, %struct.anon.23* %trie726, i32 0, i32 6
  %426 = load i16*, i16** %jump727, align 8
  %tobool728 = icmp ne i16* %426, null
  br i1 %tobool728, label %land.lhs.true729, label %cond.false750

land.lhs.true729:                                 ; preds = %if.end721
  %427 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u730 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %427, i32 0, i32 2
  %trie731 = bitcast %union.anon.19* %u730 to %struct.anon.23*
  %jump732 = getelementptr inbounds %struct.anon.23, %struct.anon.23* %trie731, i32 0, i32 6
  %428 = load i16*, i16** %jump732, align 8
  %429 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u733 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %429, i32 0, i32 2
  %trie734 = bitcast %union.anon.19* %u733 to %struct.anon.23*
  %nextword735 = getelementptr inbounds %struct.anon.23, %struct.anon.23* %trie734, i32 0, i32 10
  %430 = load i16, i16* %nextword735, align 4
  %idxprom736 = zext i16 %430 to i64
  %arrayidx737 = getelementptr inbounds i16, i16* %428, i64 %idxprom736
  %431 = load i16, i16* %arrayidx737, align 2
  %conv738 = zext i16 %431 to i32
  %tobool739 = icmp ne i32 %conv738, 0
  br i1 %tobool739, label %cond.true740, label %cond.false750

cond.true740:                                     ; preds = %land.lhs.true729
  %432 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u741 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %432, i32 0, i32 2
  %trie742 = bitcast %union.anon.19* %u741 to %struct.anon.23*
  %jump743 = getelementptr inbounds %struct.anon.23, %struct.anon.23* %trie742, i32 0, i32 6
  %433 = load i16*, i16** %jump743, align 8
  %434 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u744 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %434, i32 0, i32 2
  %trie745 = bitcast %union.anon.19* %u744 to %struct.anon.23*
  %nextword746 = getelementptr inbounds %struct.anon.23, %struct.anon.23* %trie745, i32 0, i32 10
  %435 = load i16, i16* %nextword746, align 4
  %idxprom747 = zext i16 %435 to i64
  %arrayidx748 = getelementptr inbounds i16, i16* %433, i64 %idxprom747
  %436 = load i16, i16* %arrayidx748, align 2
  %conv749 = zext i16 %436 to i32
  br label %cond.end756

cond.false750:                                    ; preds = %land.lhs.true729, %if.end721
  %437 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u751 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %437, i32 0, i32 2
  %trie752 = bitcast %union.anon.19* %u751 to %struct.anon.23*
  %me753 = getelementptr inbounds %struct.anon.23, %struct.anon.23* %trie752, i32 0, i32 7
  %438 = load %struct.regnode*, %struct.regnode** %me753, align 8
  %next_off754 = getelementptr inbounds %struct.regnode, %struct.regnode* %438, i32 0, i32 2
  %439 = load i16, i16* %next_off754, align 2
  %conv755 = zext i16 %439 to i32
  br label %cond.end756

cond.end756:                                      ; preds = %cond.false750, %cond.true740
  %cond757 = phi i32 [ %conv749, %cond.true740 ], [ %conv755, %cond.false750 ]
  %idx.ext758 = sext i32 %cond757 to i64
  %add.ptr759 = getelementptr inbounds %struct.regnode, %struct.regnode* %424, i64 %idx.ext758
  store %struct.regnode* %add.ptr759, %struct.regnode** %scan, align 8
  %440 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u760 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %440, i32 0, i32 2
  %trie761 = bitcast %union.anon.19* %u760 to %struct.anon.23*
  %accepted762 = getelementptr inbounds %struct.anon.23, %struct.anon.23* %trie761, i32 0, i32 4
  %441 = load i32, i32* %accepted762, align 4
  %cmp763 = icmp ugt i32 %441, 1
  br i1 %cmp763, label %if.then768, label %lor.lhs.false765

lor.lhs.false765:                                 ; preds = %cond.end756
  %442 = load i8, i8* %has_cutgroup, align 1
  %tobool766 = trunc i8 %442 to i1
  br i1 %tobool766, label %if.then768, label %if.end770

if.then768:                                       ; preds = %lor.lhs.false765, %cond.end756
  %443 = load i8*, i8** %uc546, align 8
  store i8* %443, i8** %pushinput, align 8
  %444 = load %struct.regnode*, %struct.regnode** %scan, align 8
  store %struct.regnode* %444, %struct.regnode** %scan, align 8
  %445 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %resume_state769 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %445, i32 0, i32 0
  store i32 94, i32* %resume_state769, align 8
  br label %push_state

if.end770:                                        ; preds = %lor.lhs.false765
  %446 = load i8*, i8** %uc546, align 8
  store i8* %446, i8** %locinput, align 8
  br label %while.cond

sw.bb771:                                         ; preds = %cond.end45
  %447 = load i8, i8* %utf8_target, align 1
  %tobool772 = trunc i8 %447 to i1
  br i1 %tobool772, label %land.lhs.true774, label %if.end779

land.lhs.true774:                                 ; preds = %sw.bb771
  %448 = load i8*, i8** %locinput, align 8
  %449 = load i8, i8* %448, align 1
  %conv775 = zext i8 %449 to i32
  %cmp776 = icmp sge i32 %conv775, 196
  br i1 %cmp776, label %if.then778, label %if.end779

if.then778:                                       ; preds = %land.lhs.true774
  br label %if.end779

if.end779:                                        ; preds = %if.then778, %land.lhs.true774, %sw.bb771
  br label %sw.bb780

sw.bb780:                                         ; preds = %cond.end45, %if.end779
  %450 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %451 = bitcast %struct.regnode* %450 to %struct.regnode_string*
  %string = getelementptr inbounds %struct.regnode_string, %struct.regnode_string* %451, i32 0, i32 3
  %arraydecay781 = getelementptr inbounds [1 x i8], [1 x i8]* %string, i64 0, i64 0
  store i8* %arraydecay781, i8** %s, align 8
  %452 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %453 = bitcast %struct.regnode* %452 to %struct.regnode_string*
  %str_len = getelementptr inbounds %struct.regnode_string, %struct.regnode_string* %453, i32 0, i32 0
  %454 = load i8, i8* %str_len, align 2
  %conv782 = zext i8 %454 to i64
  store i64 %conv782, i64* %ln, align 8
  %455 = load i8, i8* %utf8_target, align 1
  %tobool783 = trunc i8 %455 to i1
  %conv784 = zext i1 %tobool783 to i32
  %456 = load i8, i8* %is_utf8_pat, align 1
  %tobool785 = trunc i8 %456 to i1
  %conv786 = zext i1 %tobool785 to i32
  %cmp787 = icmp ne i32 %conv784, %conv786
  br i1 %cmp787, label %if.then789, label %if.else877

if.then789:                                       ; preds = %sw.bb780
  %457 = load i8*, i8** %locinput, align 8
  store i8* %457, i8** %l, align 8
  %458 = load i8*, i8** %s, align 8
  %459 = load i64, i64* %ln, align 8
  %add.ptr790 = getelementptr inbounds i8, i8* %458, i64 %459
  store i8* %add.ptr790, i8** %e, align 8
  %460 = load i8, i8* %utf8_target, align 1
  %tobool791 = trunc i8 %460 to i1
  br i1 %tobool791, label %if.then792, label %if.else834

if.then792:                                       ; preds = %if.then789
  br label %while.cond793

while.cond793:                                    ; preds = %if.end831, %if.then792
  %461 = load i8*, i8** %s, align 8
  %462 = load i8*, i8** %e, align 8
  %cmp794 = icmp ult i8* %461, %462
  br i1 %cmp794, label %while.body796, label %while.end833

while.body796:                                    ; preds = %while.cond793
  %463 = load i8*, i8** %l, align 8
  %464 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend797 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %464, i32 0, i32 2
  %465 = load i8*, i8** %strend797, align 8
  %cmp798 = icmp uge i8* %463, %465
  br i1 %cmp798, label %if.then804, label %lor.lhs.false800

lor.lhs.false800:                                 ; preds = %while.body796
  %466 = load i8*, i8** %l, align 8
  %467 = load i8, i8* %466, align 1
  %conv801 = zext i8 %467 to i32
  %cmp802 = icmp sge i32 %conv801, 196
  br i1 %cmp802, label %if.then804, label %if.end805

if.then804:                                       ; preds = %lor.lhs.false800, %while.body796
  br label %no

if.end805:                                        ; preds = %lor.lhs.false800
  %468 = load i8*, i8** %l, align 8
  %469 = load i8, i8* %468, align 1
  %conv806 = zext i8 %469 to i64
  %cmp807 = icmp ult i64 %conv806, 128
  br i1 %cmp807, label %if.then809, label %if.else817

if.then809:                                       ; preds = %if.end805
  %470 = load i8*, i8** %l, align 8
  %471 = load i8, i8* %470, align 1
  %conv810 = sext i8 %471 to i32
  %472 = load i8*, i8** %s, align 8
  %473 = load i8, i8* %472, align 1
  %conv811 = sext i8 %473 to i32
  %cmp812 = icmp ne i32 %conv810, %conv811
  br i1 %cmp812, label %if.then814, label %if.end815

if.then814:                                       ; preds = %if.then809
  br label %no

if.end815:                                        ; preds = %if.then809
  %474 = load i8*, i8** %l, align 8
  %incdec.ptr816 = getelementptr inbounds i8, i8* %474, i32 1
  store i8* %incdec.ptr816, i8** %l, align 8
  br label %if.end831

if.else817:                                       ; preds = %if.end805
  %475 = load i8*, i8** %l, align 8
  %476 = load i8, i8* %475, align 1
  %conv818 = sext i8 %476 to i32
  %and819 = and i32 %conv818, 31
  %shl820 = shl i32 %and819, 6
  %477 = load i8*, i8** %l, align 8
  %add.ptr821 = getelementptr inbounds i8, i8* %477, i64 1
  %478 = load i8, i8* %add.ptr821, align 1
  %conv822 = zext i8 %478 to i32
  %and823 = and i32 %conv822, 63
  %or824 = or i32 %shl820, %and823
  %479 = load i8*, i8** %s, align 8
  %480 = load i8, i8* %479, align 1
  %conv825 = zext i8 %480 to i32
  %cmp826 = icmp ne i32 %or824, %conv825
  br i1 %cmp826, label %if.then828, label %if.end829

if.then828:                                       ; preds = %if.else817
  br label %no

if.end829:                                        ; preds = %if.else817
  %481 = load i8*, i8** %l, align 8
  %add.ptr830 = getelementptr inbounds i8, i8* %481, i64 2
  store i8* %add.ptr830, i8** %l, align 8
  br label %if.end831

if.end831:                                        ; preds = %if.end829, %if.end815
  %482 = load i8*, i8** %s, align 8
  %incdec.ptr832 = getelementptr inbounds i8, i8* %482, i32 1
  store i8* %incdec.ptr832, i8** %s, align 8
  br label %while.cond793

while.end833:                                     ; preds = %while.cond793
  br label %if.end876

if.else834:                                       ; preds = %if.then789
  br label %while.cond835

while.cond835:                                    ; preds = %if.end873, %if.else834
  %483 = load i8*, i8** %s, align 8
  %484 = load i8*, i8** %e, align 8
  %cmp836 = icmp ult i8* %483, %484
  br i1 %cmp836, label %while.body838, label %while.end875

while.body838:                                    ; preds = %while.cond835
  %485 = load i8*, i8** %l, align 8
  %486 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend839 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %486, i32 0, i32 2
  %487 = load i8*, i8** %strend839, align 8
  %cmp840 = icmp uge i8* %485, %487
  br i1 %cmp840, label %if.then846, label %lor.lhs.false842

lor.lhs.false842:                                 ; preds = %while.body838
  %488 = load i8*, i8** %s, align 8
  %489 = load i8, i8* %488, align 1
  %conv843 = zext i8 %489 to i32
  %cmp844 = icmp sge i32 %conv843, 196
  br i1 %cmp844, label %if.then846, label %if.end847

if.then846:                                       ; preds = %lor.lhs.false842, %while.body838
  br label %no

if.end847:                                        ; preds = %lor.lhs.false842
  %490 = load i8*, i8** %s, align 8
  %491 = load i8, i8* %490, align 1
  %conv848 = zext i8 %491 to i64
  %cmp849 = icmp ult i64 %conv848, 128
  br i1 %cmp849, label %if.then851, label %if.else859

if.then851:                                       ; preds = %if.end847
  %492 = load i8*, i8** %s, align 8
  %493 = load i8, i8* %492, align 1
  %conv852 = sext i8 %493 to i32
  %494 = load i8*, i8** %l, align 8
  %495 = load i8, i8* %494, align 1
  %conv853 = sext i8 %495 to i32
  %cmp854 = icmp ne i32 %conv852, %conv853
  br i1 %cmp854, label %if.then856, label %if.end857

if.then856:                                       ; preds = %if.then851
  br label %no

if.end857:                                        ; preds = %if.then851
  %496 = load i8*, i8** %s, align 8
  %incdec.ptr858 = getelementptr inbounds i8, i8* %496, i32 1
  store i8* %incdec.ptr858, i8** %s, align 8
  br label %if.end873

if.else859:                                       ; preds = %if.end847
  %497 = load i8*, i8** %s, align 8
  %498 = load i8, i8* %497, align 1
  %conv860 = sext i8 %498 to i32
  %and861 = and i32 %conv860, 31
  %shl862 = shl i32 %and861, 6
  %499 = load i8*, i8** %s, align 8
  %add.ptr863 = getelementptr inbounds i8, i8* %499, i64 1
  %500 = load i8, i8* %add.ptr863, align 1
  %conv864 = zext i8 %500 to i32
  %and865 = and i32 %conv864, 63
  %or866 = or i32 %shl862, %and865
  %501 = load i8*, i8** %l, align 8
  %502 = load i8, i8* %501, align 1
  %conv867 = zext i8 %502 to i32
  %cmp868 = icmp ne i32 %or866, %conv867
  br i1 %cmp868, label %if.then870, label %if.end871

if.then870:                                       ; preds = %if.else859
  br label %no

if.end871:                                        ; preds = %if.else859
  %503 = load i8*, i8** %s, align 8
  %add.ptr872 = getelementptr inbounds i8, i8* %503, i64 2
  store i8* %add.ptr872, i8** %s, align 8
  br label %if.end873

if.end873:                                        ; preds = %if.end871, %if.end857
  %504 = load i8*, i8** %l, align 8
  %incdec.ptr874 = getelementptr inbounds i8, i8* %504, i32 1
  store i8* %incdec.ptr874, i8** %l, align 8
  br label %while.cond835

while.end875:                                     ; preds = %while.cond835
  br label %if.end876

if.end876:                                        ; preds = %while.end875, %while.end833
  %505 = load i8*, i8** %l, align 8
  store i8* %505, i8** %locinput, align 8
  br label %if.end897

if.else877:                                       ; preds = %sw.bb780
  %506 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend878 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %506, i32 0, i32 2
  %507 = load i8*, i8** %strend878, align 8
  %508 = load i8*, i8** %locinput, align 8
  %sub.ptr.lhs.cast879 = ptrtoint i8* %507 to i64
  %sub.ptr.rhs.cast880 = ptrtoint i8* %508 to i64
  %sub.ptr.sub881 = sub i64 %sub.ptr.lhs.cast879, %sub.ptr.rhs.cast880
  %509 = load i64, i64* %ln, align 8
  %cmp882 = icmp slt i64 %sub.ptr.sub881, %509
  br i1 %cmp882, label %if.then894, label %lor.lhs.false884

lor.lhs.false884:                                 ; preds = %if.else877
  %510 = load i8*, i8** %s, align 8
  %511 = load i8, i8* %510, align 1
  %conv885 = zext i8 %511 to i32
  %512 = load i32, i32* %nextchr, align 4
  %cmp886 = icmp ne i32 %conv885, %512
  br i1 %cmp886, label %if.then894, label %lor.lhs.false888

lor.lhs.false888:                                 ; preds = %lor.lhs.false884
  %513 = load i64, i64* %ln, align 8
  %cmp889 = icmp sgt i64 %513, 1
  br i1 %cmp889, label %land.lhs.true891, label %if.end895

land.lhs.true891:                                 ; preds = %lor.lhs.false888
  %514 = load i8*, i8** %s, align 8
  %515 = load i8*, i8** %locinput, align 8
  %516 = load i64, i64* %ln, align 8
  %call892 = call i32 @memcmp(i8* %514, i8* %515, i64 %516) #5
  %tobool893 = icmp ne i32 %call892, 0
  br i1 %tobool893, label %if.then894, label %if.end895

if.then894:                                       ; preds = %land.lhs.true891, %lor.lhs.false884, %if.else877
  br label %no

if.end895:                                        ; preds = %land.lhs.true891, %lor.lhs.false888
  %517 = load i64, i64* %ln, align 8
  %518 = load i8*, i8** %locinput, align 8
  %add.ptr896 = getelementptr inbounds i8, i8* %518, i64 %517
  store i8* %add.ptr896, i8** %locinput, align 8
  br label %if.end897

if.end897:                                        ; preds = %if.end895, %if.end876
  br label %sw.epilog6768

sw.bb898:                                         ; preds = %cond.end45
  store i32 (i8*, i8*, i32)* @Perl_foldEQ_locale, i32 (i8*, i8*, i32)** %folder, align 8
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @PL_fold_locale, i64 0, i64 0), i8** %fold_array, align 8
  store i32 2, i32* %fold_utf8_flags, align 4
  br label %do_exactf

sw.bb900:                                         ; preds = %cond.end45
  %519 = load i8, i8* %utf8_target, align 1
  %tobool901 = trunc i8 %519 to i1
  br i1 %tobool901, label %if.end903, label %if.then902

if.then902:                                       ; preds = %sw.bb900
  br label %no

if.end903:                                        ; preds = %sw.bb900
  store i32 22, i32* %fold_utf8_flags, align 4
  store i32 (i8*, i8*, i32)* @Perl_foldEQ_latin1, i32 (i8*, i8*, i32)** %folder, align 8
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @PL_fold_latin1, i64 0, i64 0), i8** %fold_array, align 8
  br label %do_exactf

sw.bb904:                                         ; preds = %cond.end45, %cond.end45
  store i32 (i8*, i8*, i32)* @Perl_foldEQ_latin1, i32 (i8*, i8*, i32)** %folder, align 8
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @PL_fold_latin1, i64 0, i64 0), i8** %fold_array, align 8
  %520 = load i8, i8* %is_utf8_pat, align 1
  %tobool905 = trunc i8 %520 to i1
  %521 = zext i1 %tobool905 to i64
  %cond907 = select i1 %tobool905, i32 4, i32 0
  store i32 %cond907, i32* %fold_utf8_flags, align 4
  br label %do_exactf

sw.bb908:                                         ; preds = %cond.end45
  br label %sw.bb909

sw.bb909:                                         ; preds = %cond.end45, %sw.bb908
  store i32 (i8*, i8*, i32)* @Perl_foldEQ_latin1, i32 (i8*, i8*, i32)** %folder, align 8
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @PL_fold_latin1, i64 0, i64 0), i8** %fold_array, align 8
  store i32 1, i32* %fold_utf8_flags, align 4
  br label %do_exactf

sw.bb910:                                         ; preds = %cond.end45
  store i32 (i8*, i8*, i32)* @Perl_foldEQ, i32 (i8*, i8*, i32)** %folder, align 8
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @PL_fold, i64 0, i64 0), i8** %fold_array, align 8
  store i32 0, i32* %fold_utf8_flags, align 4
  br label %do_exactf

do_exactf:                                        ; preds = %sw.bb910, %sw.bb909, %sw.bb904, %if.end903, %sw.bb898
  %522 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %523 = bitcast %struct.regnode* %522 to %struct.regnode_string*
  %string911 = getelementptr inbounds %struct.regnode_string, %struct.regnode_string* %523, i32 0, i32 3
  %arraydecay912 = getelementptr inbounds [1 x i8], [1 x i8]* %string911, i64 0, i64 0
  store i8* %arraydecay912, i8** %s899, align 8
  %524 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %525 = bitcast %struct.regnode* %524 to %struct.regnode_string*
  %str_len913 = getelementptr inbounds %struct.regnode_string, %struct.regnode_string* %525, i32 0, i32 0
  %526 = load i8, i8* %str_len913, align 2
  %conv914 = zext i8 %526 to i64
  store i64 %conv914, i64* %ln, align 8
  %527 = load i8, i8* %utf8_target, align 1
  %tobool915 = trunc i8 %527 to i1
  br i1 %tobool915, label %if.then929, label %lor.lhs.false917

lor.lhs.false917:                                 ; preds = %do_exactf
  %528 = load i8, i8* %is_utf8_pat, align 1
  %tobool918 = trunc i8 %528 to i1
  br i1 %tobool918, label %if.then929, label %lor.lhs.false920

lor.lhs.false920:                                 ; preds = %lor.lhs.false917
  %529 = load i32, i32* %state_num, align 4
  %cmp921 = icmp eq i32 %529, 37
  br i1 %cmp921, label %if.then929, label %lor.lhs.false923

lor.lhs.false923:                                 ; preds = %lor.lhs.false920
  %530 = load i32, i32* %state_num, align 4
  %cmp924 = icmp eq i32 %530, 34
  br i1 %cmp924, label %land.lhs.true926, label %if.end939

land.lhs.true926:                                 ; preds = %lor.lhs.false923
  %531 = load i8, i8* @PL_in_utf8_CTYPE_locale, align 1
  %tobool927 = trunc i8 %531 to i1
  br i1 %tobool927, label %if.then929, label %if.end939

if.then929:                                       ; preds = %land.lhs.true926, %lor.lhs.false920, %lor.lhs.false917, %do_exactf
  %532 = load i8*, i8** %locinput, align 8
  store i8* %532, i8** %l930, align 8
  %533 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend932 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %533, i32 0, i32 2
  %534 = load i8*, i8** %strend932, align 8
  store i8* %534, i8** %e931, align 8
  %535 = load i8*, i8** %s899, align 8
  %536 = load i64, i64* %ln, align 8
  %537 = load i8, i8* %is_utf8_pat, align 1
  %tobool933 = trunc i8 %537 to i1
  %538 = load i8*, i8** %l930, align 8
  %539 = load i8, i8* %utf8_target, align 1
  %tobool934 = trunc i8 %539 to i1
  %540 = load i32, i32* %fold_utf8_flags, align 4
  %call935 = call i32 @Perl_foldEQ_utf8_flags(i8* %535, i8** null, i64 %536, i1 zeroext %tobool933, i8* %538, i8** %e931, i64 0, i1 zeroext %tobool934, i32 %540)
  %tobool936 = icmp ne i32 %call935, 0
  br i1 %tobool936, label %if.end938, label %if.then937

if.then937:                                       ; preds = %if.then929
  br label %no

if.end938:                                        ; preds = %if.then929
  %541 = load i8*, i8** %e931, align 8
  store i8* %541, i8** %locinput, align 8
  br label %sw.epilog6768

if.end939:                                        ; preds = %land.lhs.true926, %lor.lhs.false923
  %542 = load i8*, i8** %s899, align 8
  %543 = load i8, i8* %542, align 1
  %conv940 = zext i8 %543 to i32
  %544 = load i32, i32* %nextchr, align 4
  %cmp941 = icmp ne i32 %conv940, %544
  br i1 %cmp941, label %land.lhs.true943, label %if.end954

land.lhs.true943:                                 ; preds = %if.end939
  %545 = load i32, i32* %nextchr, align 4
  %cmp944 = icmp slt i32 %545, 0
  br i1 %cmp944, label %if.end954, label %land.lhs.true946

land.lhs.true946:                                 ; preds = %land.lhs.true943
  %546 = load i8*, i8** %s899, align 8
  %547 = load i8, i8* %546, align 1
  %conv947 = zext i8 %547 to i32
  %548 = load i8*, i8** %fold_array, align 8
  %549 = load i32, i32* %nextchr, align 4
  %idxprom948 = sext i32 %549 to i64
  %arrayidx949 = getelementptr inbounds i8, i8* %548, i64 %idxprom948
  %550 = load i8, i8* %arrayidx949, align 1
  %conv950 = zext i8 %550 to i32
  %cmp951 = icmp ne i32 %conv947, %conv950
  br i1 %cmp951, label %if.then953, label %if.end954

if.then953:                                       ; preds = %land.lhs.true946
  br label %no

if.end954:                                        ; preds = %land.lhs.true946, %land.lhs.true943, %if.end939
  %551 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend955 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %551, i32 0, i32 2
  %552 = load i8*, i8** %strend955, align 8
  %553 = load i8*, i8** %locinput, align 8
  %sub.ptr.lhs.cast956 = ptrtoint i8* %552 to i64
  %sub.ptr.rhs.cast957 = ptrtoint i8* %553 to i64
  %sub.ptr.sub958 = sub i64 %sub.ptr.lhs.cast956, %sub.ptr.rhs.cast957
  %554 = load i64, i64* %ln, align 8
  %cmp959 = icmp slt i64 %sub.ptr.sub958, %554
  br i1 %cmp959, label %if.then961, label %if.end962

if.then961:                                       ; preds = %if.end954
  br label %no

if.end962:                                        ; preds = %if.end954
  %555 = load i64, i64* %ln, align 8
  %cmp963 = icmp sgt i64 %555, 1
  br i1 %cmp963, label %land.lhs.true965, label %if.end970

land.lhs.true965:                                 ; preds = %if.end962
  %556 = load i32 (i8*, i8*, i32)*, i32 (i8*, i8*, i32)** %folder, align 8
  %557 = load i8*, i8** %s899, align 8
  %558 = load i8*, i8** %locinput, align 8
  %559 = load i64, i64* %ln, align 8
  %conv966 = trunc i64 %559 to i32
  %call967 = call i32 %556(i8* %557, i8* %558, i32 %conv966)
  %tobool968 = icmp ne i32 %call967, 0
  br i1 %tobool968, label %if.end970, label %if.then969

if.then969:                                       ; preds = %land.lhs.true965
  br label %no

if.end970:                                        ; preds = %land.lhs.true965, %if.end962
  %560 = load i64, i64* %ln, align 8
  %561 = load i8*, i8** %locinput, align 8
  %add.ptr971 = getelementptr inbounds i8, i8* %561, i64 %560
  store i8* %add.ptr971, i8** %locinput, align 8
  br label %sw.epilog6768

sw.bb972:                                         ; preds = %cond.end45
  store i32 1, i32* %to_complement, align 4
  br label %sw.bb973

sw.bb973:                                         ; preds = %cond.end45, %sw.bb972
  %562 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %flags974 = getelementptr inbounds %struct.regnode, %struct.regnode* %562, i32 0, i32 0
  %563 = load i8, i8* %flags974, align 2
  %conv975 = zext i8 %563 to i32
  %cmp976 = icmp ne i32 %conv975, 0
  br i1 %cmp976, label %if.then978, label %if.end982

if.then978:                                       ; preds = %sw.bb973
  %564 = load i8, i8* @PL_in_utf8_CTYPE_locale, align 1
  %tobool979 = trunc i8 %564 to i1
  br i1 %tobool979, label %if.end981, label %if.then980

if.then980:                                       ; preds = %if.then978
  call void (i32, i8*, ...) @Perl_ck_warner(i32 65, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.2, i64 0, i64 0))
  br label %if.end981

if.end981:                                        ; preds = %if.then980, %if.then978
  br label %boundu

if.end982:                                        ; preds = %sw.bb973
  %565 = load i8, i8* %utf8_target, align 1
  %tobool983 = trunc i8 %565 to i1
  br i1 %tobool983, label %if.then984, label %if.else1182

if.then984:                                       ; preds = %if.end982
  %566 = load i8*, i8** %locinput, align 8
  %567 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg985 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %567, i32 0, i32 1
  %568 = load i8*, i8** %strbeg985, align 8
  %cmp986 = icmp eq i8* %566, %568
  br i1 %cmp986, label %if.then988, label %if.else995

if.then988:                                       ; preds = %if.then984
  %call989 = call i16** @__ctype_b_loc() #6
  %569 = load i16*, i16** %call989, align 8
  %arrayidx990 = getelementptr inbounds i16, i16* %569, i64 10
  %570 = load i16, i16* %arrayidx990, align 2
  %conv991 = zext i16 %570 to i32
  %and992 = and i32 %conv991, 8
  %tobool993 = icmp ne i32 %and992, 0
  br i1 %tobool993, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %if.then988
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %if.then988
  %571 = phi i1 [ true, %if.then988 ], [ false, %lor.rhs ]
  %land.ext = zext i1 %571 to i32
  %conv994 = sext i32 %land.ext to i64
  store i64 %conv994, i64* %ln, align 8
  br label %if.end1094

if.else995:                                       ; preds = %if.then984
  %572 = load i8*, i8** %locinput, align 8
  %573 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg996 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %573, i32 0, i32 1
  %574 = load i8*, i8** %strbeg996, align 8
  %call997 = call i8* @S_reghop3(i8* %572, i64 -1, i8* %574)
  %575 = load i8, i8* %call997, align 1
  %conv998 = zext i8 %575 to i64
  %cmp999 = icmp ult i64 %conv998, 128
  br i1 %cmp999, label %cond.true1001, label %cond.false1027

cond.true1001:                                    ; preds = %if.else995
  %576 = load i8*, i8** %locinput, align 8
  %577 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg1002 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %577, i32 0, i32 1
  %578 = load i8*, i8** %strbeg1002, align 8
  %call1003 = call i8* @S_reghop3(i8* %576, i64 -1, i8* %578)
  %579 = load i8, i8* %call1003, align 1
  %conv1004 = zext i8 %579 to i32
  %and1005 = and i32 %conv1004, -128
  %cmp1006 = icmp eq i32 %and1005, 0
  br i1 %cmp1006, label %land.rhs1008, label %land.end1025

land.rhs1008:                                     ; preds = %cond.true1001
  %call1009 = call i16** @__ctype_b_loc() #6
  %580 = load i16*, i16** %call1009, align 8
  %581 = load i8*, i8** %locinput, align 8
  %582 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg1010 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %582, i32 0, i32 1
  %583 = load i8*, i8** %strbeg1010, align 8
  %call1011 = call i8* @S_reghop3(i8* %581, i64 -1, i8* %583)
  %584 = load i8, i8* %call1011, align 1
  %conv1012 = zext i8 %584 to i32
  %idxprom1013 = sext i32 %conv1012 to i64
  %arrayidx1014 = getelementptr inbounds i16, i16* %580, i64 %idxprom1013
  %585 = load i16, i16* %arrayidx1014, align 2
  %conv1015 = zext i16 %585 to i32
  %and1016 = and i32 %conv1015, 8
  %tobool1017 = icmp ne i32 %and1016, 0
  br i1 %tobool1017, label %lor.end1024, label %lor.rhs1018

lor.rhs1018:                                      ; preds = %land.rhs1008
  %586 = load i8*, i8** %locinput, align 8
  %587 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg1019 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %587, i32 0, i32 1
  %588 = load i8*, i8** %strbeg1019, align 8
  %call1020 = call i8* @S_reghop3(i8* %586, i64 -1, i8* %588)
  %589 = load i8, i8* %call1020, align 1
  %conv1021 = zext i8 %589 to i32
  %cmp1022 = icmp eq i32 %conv1021, 95
  br label %lor.end1024

lor.end1024:                                      ; preds = %lor.rhs1018, %land.rhs1008
  %590 = phi i1 [ true, %land.rhs1008 ], [ %cmp1022, %lor.rhs1018 ]
  br label %land.end1025

land.end1025:                                     ; preds = %lor.end1024, %cond.true1001
  %591 = phi i1 [ false, %cond.true1001 ], [ %590, %lor.end1024 ]
  %land.ext1026 = zext i1 %591 to i32
  br label %cond.end1091

cond.false1027:                                   ; preds = %if.else995
  %592 = load i8*, i8** %locinput, align 8
  %593 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg1028 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %593, i32 0, i32 1
  %594 = load i8*, i8** %strbeg1028, align 8
  %call1029 = call i8* @S_reghop3(i8* %592, i64 -1, i8* %594)
  %595 = load i8, i8* %call1029, align 1
  %conv1030 = zext i8 %595 to i32
  %and1031 = and i32 %conv1030, 254
  %cmp1032 = icmp eq i32 %and1031, 194
  br i1 %cmp1032, label %cond.true1034, label %cond.false1084

cond.true1034:                                    ; preds = %cond.false1027
  %596 = load i8*, i8** %locinput, align 8
  %597 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg1035 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %597, i32 0, i32 1
  %598 = load i8*, i8** %strbeg1035, align 8
  %call1036 = call i8* @S_reghop3(i8* %596, i64 -1, i8* %598)
  %599 = load i8, i8* %call1036, align 1
  %conv1037 = zext i8 %599 to i32
  %and1038 = and i32 %conv1037, 31
  %shl1039 = shl i32 %and1038, 6
  %600 = load i8*, i8** %locinput, align 8
  %601 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg1040 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %601, i32 0, i32 1
  %602 = load i8*, i8** %strbeg1040, align 8
  %call1041 = call i8* @S_reghop3(i8* %600, i64 -1, i8* %602)
  %add.ptr1042 = getelementptr inbounds i8, i8* %call1041, i64 1
  %603 = load i8, i8* %add.ptr1042, align 1
  %conv1043 = zext i8 %603 to i32
  %and1044 = and i32 %conv1043, 63
  %or1045 = or i32 %shl1039, %and1044
  %and1046 = and i32 %or1045, -128
  %cmp1047 = icmp eq i32 %and1046, 0
  br i1 %cmp1047, label %land.rhs1049, label %land.end1082

land.rhs1049:                                     ; preds = %cond.true1034
  %call1050 = call i16** @__ctype_b_loc() #6
  %604 = load i16*, i16** %call1050, align 8
  %605 = load i8*, i8** %locinput, align 8
  %606 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg1051 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %606, i32 0, i32 1
  %607 = load i8*, i8** %strbeg1051, align 8
  %call1052 = call i8* @S_reghop3(i8* %605, i64 -1, i8* %607)
  %608 = load i8, i8* %call1052, align 1
  %conv1053 = zext i8 %608 to i32
  %and1054 = and i32 %conv1053, 31
  %shl1055 = shl i32 %and1054, 6
  %609 = load i8*, i8** %locinput, align 8
  %610 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg1056 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %610, i32 0, i32 1
  %611 = load i8*, i8** %strbeg1056, align 8
  %call1057 = call i8* @S_reghop3(i8* %609, i64 -1, i8* %611)
  %add.ptr1058 = getelementptr inbounds i8, i8* %call1057, i64 1
  %612 = load i8, i8* %add.ptr1058, align 1
  %conv1059 = zext i8 %612 to i32
  %and1060 = and i32 %conv1059, 63
  %or1061 = or i32 %shl1055, %and1060
  %idxprom1062 = sext i32 %or1061 to i64
  %arrayidx1063 = getelementptr inbounds i16, i16* %604, i64 %idxprom1062
  %613 = load i16, i16* %arrayidx1063, align 2
  %conv1064 = zext i16 %613 to i32
  %and1065 = and i32 %conv1064, 8
  %tobool1066 = icmp ne i32 %and1065, 0
  br i1 %tobool1066, label %lor.end1081, label %lor.rhs1067

lor.rhs1067:                                      ; preds = %land.rhs1049
  %614 = load i8*, i8** %locinput, align 8
  %615 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg1068 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %615, i32 0, i32 1
  %616 = load i8*, i8** %strbeg1068, align 8
  %call1069 = call i8* @S_reghop3(i8* %614, i64 -1, i8* %616)
  %617 = load i8, i8* %call1069, align 1
  %conv1070 = zext i8 %617 to i32
  %and1071 = and i32 %conv1070, 31
  %shl1072 = shl i32 %and1071, 6
  %618 = load i8*, i8** %locinput, align 8
  %619 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg1073 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %619, i32 0, i32 1
  %620 = load i8*, i8** %strbeg1073, align 8
  %call1074 = call i8* @S_reghop3(i8* %618, i64 -1, i8* %620)
  %add.ptr1075 = getelementptr inbounds i8, i8* %call1074, i64 1
  %621 = load i8, i8* %add.ptr1075, align 1
  %conv1076 = zext i8 %621 to i32
  %and1077 = and i32 %conv1076, 63
  %or1078 = or i32 %shl1072, %and1077
  %cmp1079 = icmp eq i32 %or1078, 95
  br label %lor.end1081

lor.end1081:                                      ; preds = %lor.rhs1067, %land.rhs1049
  %622 = phi i1 [ true, %land.rhs1049 ], [ %cmp1079, %lor.rhs1067 ]
  br label %land.end1082

land.end1082:                                     ; preds = %lor.end1081, %cond.true1034
  %623 = phi i1 [ false, %cond.true1034 ], [ %622, %lor.end1081 ]
  %land.ext1083 = zext i1 %623 to i32
  br label %cond.end1089

cond.false1084:                                   ; preds = %cond.false1027
  %624 = load i8*, i8** %locinput, align 8
  %625 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg1085 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %625, i32 0, i32 1
  %626 = load i8*, i8** %strbeg1085, align 8
  %call1086 = call i8* @S_reghop3(i8* %624, i64 -1, i8* %626)
  %call1087 = call zeroext i1 @Perl__is_utf8_FOO(i8 zeroext 0, i8* %call1086)
  %conv1088 = zext i1 %call1087 to i32
  br label %cond.end1089

cond.end1089:                                     ; preds = %cond.false1084, %land.end1082
  %cond1090 = phi i32 [ %land.ext1083, %land.end1082 ], [ %conv1088, %cond.false1084 ]
  br label %cond.end1091

cond.end1091:                                     ; preds = %cond.end1089, %land.end1025
  %cond1092 = phi i32 [ %land.ext1026, %land.end1025 ], [ %cond1090, %cond.end1089 ]
  %conv1093 = sext i32 %cond1092 to i64
  store i64 %conv1093, i64* %ln, align 8
  br label %if.end1094

if.end1094:                                       ; preds = %cond.end1091, %lor.end
  %627 = load i32, i32* %nextchr, align 4
  %cmp1095 = icmp slt i32 %627, 0
  br i1 %cmp1095, label %cond.true1097, label %cond.false1106

cond.true1097:                                    ; preds = %if.end1094
  %call1098 = call i16** @__ctype_b_loc() #6
  %628 = load i16*, i16** %call1098, align 8
  %arrayidx1099 = getelementptr inbounds i16, i16* %628, i64 10
  %629 = load i16, i16* %arrayidx1099, align 2
  %conv1100 = zext i16 %629 to i32
  %and1101 = and i32 %conv1100, 8
  %tobool1102 = icmp ne i32 %and1101, 0
  br i1 %tobool1102, label %lor.end1104, label %lor.rhs1103

lor.rhs1103:                                      ; preds = %cond.true1097
  br label %lor.end1104

lor.end1104:                                      ; preds = %lor.rhs1103, %cond.true1097
  %630 = phi i1 [ true, %cond.true1097 ], [ false, %lor.rhs1103 ]
  %land.ext1105 = zext i1 %630 to i32
  br label %cond.end1180

cond.false1106:                                   ; preds = %if.end1094
  %631 = load i8*, i8** %locinput, align 8
  %632 = load i8, i8* %631, align 1
  %conv1107 = zext i8 %632 to i64
  %cmp1108 = icmp ult i64 %conv1107, 128
  br i1 %cmp1108, label %cond.true1110, label %cond.false1130

cond.true1110:                                    ; preds = %cond.false1106
  %633 = load i8*, i8** %locinput, align 8
  %634 = load i8, i8* %633, align 1
  %conv1111 = zext i8 %634 to i32
  %and1112 = and i32 %conv1111, -128
  %cmp1113 = icmp eq i32 %and1112, 0
  br i1 %cmp1113, label %land.rhs1115, label %land.end1128

land.rhs1115:                                     ; preds = %cond.true1110
  %call1116 = call i16** @__ctype_b_loc() #6
  %635 = load i16*, i16** %call1116, align 8
  %636 = load i8*, i8** %locinput, align 8
  %637 = load i8, i8* %636, align 1
  %conv1117 = zext i8 %637 to i32
  %idxprom1118 = sext i32 %conv1117 to i64
  %arrayidx1119 = getelementptr inbounds i16, i16* %635, i64 %idxprom1118
  %638 = load i16, i16* %arrayidx1119, align 2
  %conv1120 = zext i16 %638 to i32
  %and1121 = and i32 %conv1120, 8
  %tobool1122 = icmp ne i32 %and1121, 0
  br i1 %tobool1122, label %lor.end1127, label %lor.rhs1123

lor.rhs1123:                                      ; preds = %land.rhs1115
  %639 = load i8*, i8** %locinput, align 8
  %640 = load i8, i8* %639, align 1
  %conv1124 = zext i8 %640 to i32
  %cmp1125 = icmp eq i32 %conv1124, 95
  br label %lor.end1127

lor.end1127:                                      ; preds = %lor.rhs1123, %land.rhs1115
  %641 = phi i1 [ true, %land.rhs1115 ], [ %cmp1125, %lor.rhs1123 ]
  br label %land.end1128

land.end1128:                                     ; preds = %lor.end1127, %cond.true1110
  %642 = phi i1 [ false, %cond.true1110 ], [ %641, %lor.end1127 ]
  %land.ext1129 = zext i1 %642 to i32
  br label %cond.end1178

cond.false1130:                                   ; preds = %cond.false1106
  %643 = load i8*, i8** %locinput, align 8
  %644 = load i8, i8* %643, align 1
  %conv1131 = zext i8 %644 to i32
  %and1132 = and i32 %conv1131, 254
  %cmp1133 = icmp eq i32 %and1132, 194
  br i1 %cmp1133, label %cond.true1135, label %cond.false1173

cond.true1135:                                    ; preds = %cond.false1130
  %645 = load i8*, i8** %locinput, align 8
  %646 = load i8, i8* %645, align 1
  %conv1136 = zext i8 %646 to i32
  %and1137 = and i32 %conv1136, 31
  %shl1138 = shl i32 %and1137, 6
  %647 = load i8*, i8** %locinput, align 8
  %add.ptr1139 = getelementptr inbounds i8, i8* %647, i64 1
  %648 = load i8, i8* %add.ptr1139, align 1
  %conv1140 = zext i8 %648 to i32
  %and1141 = and i32 %conv1140, 63
  %or1142 = or i32 %shl1138, %and1141
  %and1143 = and i32 %or1142, -128
  %cmp1144 = icmp eq i32 %and1143, 0
  br i1 %cmp1144, label %land.rhs1146, label %land.end1171

land.rhs1146:                                     ; preds = %cond.true1135
  %call1147 = call i16** @__ctype_b_loc() #6
  %649 = load i16*, i16** %call1147, align 8
  %650 = load i8*, i8** %locinput, align 8
  %651 = load i8, i8* %650, align 1
  %conv1148 = zext i8 %651 to i32
  %and1149 = and i32 %conv1148, 31
  %shl1150 = shl i32 %and1149, 6
  %652 = load i8*, i8** %locinput, align 8
  %add.ptr1151 = getelementptr inbounds i8, i8* %652, i64 1
  %653 = load i8, i8* %add.ptr1151, align 1
  %conv1152 = zext i8 %653 to i32
  %and1153 = and i32 %conv1152, 63
  %or1154 = or i32 %shl1150, %and1153
  %idxprom1155 = sext i32 %or1154 to i64
  %arrayidx1156 = getelementptr inbounds i16, i16* %649, i64 %idxprom1155
  %654 = load i16, i16* %arrayidx1156, align 2
  %conv1157 = zext i16 %654 to i32
  %and1158 = and i32 %conv1157, 8
  %tobool1159 = icmp ne i32 %and1158, 0
  br i1 %tobool1159, label %lor.end1170, label %lor.rhs1160

lor.rhs1160:                                      ; preds = %land.rhs1146
  %655 = load i8*, i8** %locinput, align 8
  %656 = load i8, i8* %655, align 1
  %conv1161 = zext i8 %656 to i32
  %and1162 = and i32 %conv1161, 31
  %shl1163 = shl i32 %and1162, 6
  %657 = load i8*, i8** %locinput, align 8
  %add.ptr1164 = getelementptr inbounds i8, i8* %657, i64 1
  %658 = load i8, i8* %add.ptr1164, align 1
  %conv1165 = zext i8 %658 to i32
  %and1166 = and i32 %conv1165, 63
  %or1167 = or i32 %shl1163, %and1166
  %cmp1168 = icmp eq i32 %or1167, 95
  br label %lor.end1170

lor.end1170:                                      ; preds = %lor.rhs1160, %land.rhs1146
  %659 = phi i1 [ true, %land.rhs1146 ], [ %cmp1168, %lor.rhs1160 ]
  br label %land.end1171

land.end1171:                                     ; preds = %lor.end1170, %cond.true1135
  %660 = phi i1 [ false, %cond.true1135 ], [ %659, %lor.end1170 ]
  %land.ext1172 = zext i1 %660 to i32
  br label %cond.end1176

cond.false1173:                                   ; preds = %cond.false1130
  %661 = load i8*, i8** %locinput, align 8
  %call1174 = call zeroext i1 @Perl__is_utf8_FOO(i8 zeroext 0, i8* %661)
  %conv1175 = zext i1 %call1174 to i32
  br label %cond.end1176

cond.end1176:                                     ; preds = %cond.false1173, %land.end1171
  %cond1177 = phi i32 [ %land.ext1172, %land.end1171 ], [ %conv1175, %cond.false1173 ]
  br label %cond.end1178

cond.end1178:                                     ; preds = %cond.end1176, %land.end1128
  %cond1179 = phi i32 [ %land.ext1129, %land.end1128 ], [ %cond1177, %cond.end1176 ]
  br label %cond.end1180

cond.end1180:                                     ; preds = %cond.end1178, %lor.end1104
  %cond1181 = phi i32 [ %land.ext1105, %lor.end1104 ], [ %cond1179, %cond.end1178 ]
  store i32 %cond1181, i32* %n, align 4
  br label %if.end1251

if.else1182:                                      ; preds = %if.end982
  %662 = load i8*, i8** %locinput, align 8
  %663 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg1183 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %663, i32 0, i32 1
  %664 = load i8*, i8** %strbeg1183, align 8
  %cmp1184 = icmp eq i8* %662, %664
  br i1 %cmp1184, label %cond.true1186, label %cond.false1195

cond.true1186:                                    ; preds = %if.else1182
  %call1187 = call i16** @__ctype_b_loc() #6
  %665 = load i16*, i16** %call1187, align 8
  %arrayidx1188 = getelementptr inbounds i16, i16* %665, i64 10
  %666 = load i16, i16* %arrayidx1188, align 2
  %conv1189 = zext i16 %666 to i32
  %and1190 = and i32 %conv1189, 8
  %tobool1191 = icmp ne i32 %and1190, 0
  br i1 %tobool1191, label %lor.end1193, label %lor.rhs1192

lor.rhs1192:                                      ; preds = %cond.true1186
  br label %lor.end1193

lor.end1193:                                      ; preds = %lor.rhs1192, %cond.true1186
  %667 = phi i1 [ true, %cond.true1186 ], [ false, %lor.rhs1192 ]
  %land.ext1194 = zext i1 %667 to i32
  br label %cond.end1218

cond.false1195:                                   ; preds = %if.else1182
  %668 = load i8*, i8** %locinput, align 8
  %add.ptr1196 = getelementptr inbounds i8, i8* %668, i64 -1
  %669 = load i8, i8* %add.ptr1196, align 1
  %conv1197 = zext i8 %669 to i32
  %and1198 = and i32 %conv1197, -128
  %cmp1199 = icmp eq i32 %and1198, 0
  br i1 %cmp1199, label %land.rhs1201, label %land.end1216

land.rhs1201:                                     ; preds = %cond.false1195
  %call1202 = call i16** @__ctype_b_loc() #6
  %670 = load i16*, i16** %call1202, align 8
  %671 = load i8*, i8** %locinput, align 8
  %add.ptr1203 = getelementptr inbounds i8, i8* %671, i64 -1
  %672 = load i8, i8* %add.ptr1203, align 1
  %conv1204 = zext i8 %672 to i32
  %idxprom1205 = sext i32 %conv1204 to i64
  %arrayidx1206 = getelementptr inbounds i16, i16* %670, i64 %idxprom1205
  %673 = load i16, i16* %arrayidx1206, align 2
  %conv1207 = zext i16 %673 to i32
  %and1208 = and i32 %conv1207, 8
  %tobool1209 = icmp ne i32 %and1208, 0
  br i1 %tobool1209, label %lor.end1215, label %lor.rhs1210

lor.rhs1210:                                      ; preds = %land.rhs1201
  %674 = load i8*, i8** %locinput, align 8
  %add.ptr1211 = getelementptr inbounds i8, i8* %674, i64 -1
  %675 = load i8, i8* %add.ptr1211, align 1
  %conv1212 = zext i8 %675 to i32
  %cmp1213 = icmp eq i32 %conv1212, 95
  br label %lor.end1215

lor.end1215:                                      ; preds = %lor.rhs1210, %land.rhs1201
  %676 = phi i1 [ true, %land.rhs1201 ], [ %cmp1213, %lor.rhs1210 ]
  br label %land.end1216

land.end1216:                                     ; preds = %lor.end1215, %cond.false1195
  %677 = phi i1 [ false, %cond.false1195 ], [ %676, %lor.end1215 ]
  %land.ext1217 = zext i1 %677 to i32
  br label %cond.end1218

cond.end1218:                                     ; preds = %land.end1216, %lor.end1193
  %cond1219 = phi i32 [ %land.ext1194, %lor.end1193 ], [ %land.ext1217, %land.end1216 ]
  %conv1220 = sext i32 %cond1219 to i64
  store i64 %conv1220, i64* %ln, align 8
  %678 = load i32, i32* %nextchr, align 4
  %cmp1221 = icmp slt i32 %678, 0
  br i1 %cmp1221, label %cond.true1223, label %cond.false1232

cond.true1223:                                    ; preds = %cond.end1218
  %call1224 = call i16** @__ctype_b_loc() #6
  %679 = load i16*, i16** %call1224, align 8
  %arrayidx1225 = getelementptr inbounds i16, i16* %679, i64 10
  %680 = load i16, i16* %arrayidx1225, align 2
  %conv1226 = zext i16 %680 to i32
  %and1227 = and i32 %conv1226, 8
  %tobool1228 = icmp ne i32 %and1227, 0
  br i1 %tobool1228, label %lor.end1230, label %lor.rhs1229

lor.rhs1229:                                      ; preds = %cond.true1223
  br label %lor.end1230

lor.end1230:                                      ; preds = %lor.rhs1229, %cond.true1223
  %681 = phi i1 [ true, %cond.true1223 ], [ false, %lor.rhs1229 ]
  %land.ext1231 = zext i1 %681 to i32
  br label %cond.end1249

cond.false1232:                                   ; preds = %cond.end1218
  %682 = load i32, i32* %nextchr, align 4
  %and1233 = and i32 %682, -128
  %cmp1234 = icmp eq i32 %and1233, 0
  br i1 %cmp1234, label %land.rhs1236, label %land.end1247

land.rhs1236:                                     ; preds = %cond.false1232
  %call1237 = call i16** @__ctype_b_loc() #6
  %683 = load i16*, i16** %call1237, align 8
  %684 = load i32, i32* %nextchr, align 4
  %idxprom1238 = sext i32 %684 to i64
  %arrayidx1239 = getelementptr inbounds i16, i16* %683, i64 %idxprom1238
  %685 = load i16, i16* %arrayidx1239, align 2
  %conv1240 = zext i16 %685 to i32
  %and1241 = and i32 %conv1240, 8
  %tobool1242 = icmp ne i32 %and1241, 0
  br i1 %tobool1242, label %lor.end1246, label %lor.rhs1243

lor.rhs1243:                                      ; preds = %land.rhs1236
  %686 = load i32, i32* %nextchr, align 4
  %cmp1244 = icmp eq i32 %686, 95
  br label %lor.end1246

lor.end1246:                                      ; preds = %lor.rhs1243, %land.rhs1236
  %687 = phi i1 [ true, %land.rhs1236 ], [ %cmp1244, %lor.rhs1243 ]
  br label %land.end1247

land.end1247:                                     ; preds = %lor.end1246, %cond.false1232
  %688 = phi i1 [ false, %cond.false1232 ], [ %687, %lor.end1246 ]
  %land.ext1248 = zext i1 %688 to i32
  br label %cond.end1249

cond.end1249:                                     ; preds = %land.end1247, %lor.end1230
  %cond1250 = phi i32 [ %land.ext1231, %lor.end1230 ], [ %land.ext1248, %land.end1247 ]
  store i32 %cond1250, i32* %n, align 4
  br label %if.end1251

if.end1251:                                       ; preds = %cond.end1249, %cond.end1180
  %689 = load i32, i32* %to_complement, align 4
  %690 = load i64, i64* %ln, align 8
  %691 = load i32, i32* %n, align 4
  %conv1252 = zext i32 %691 to i64
  %cmp1253 = icmp eq i64 %690, %conv1252
  %conv1254 = zext i1 %cmp1253 to i32
  %xor = xor i32 %689, %conv1254
  %tobool1255 = icmp ne i32 %xor, 0
  br i1 %tobool1255, label %if.then1256, label %if.end1257

if.then1256:                                      ; preds = %if.end1251
  br label %no

if.end1257:                                       ; preds = %if.end1251
  br label %sw.epilog6768

sw.bb1258:                                        ; preds = %cond.end45
  store i32 1, i32* %to_complement, align 4
  br label %sw.bb1259

sw.bb1259:                                        ; preds = %cond.end45, %sw.bb1258
  %692 = load i8, i8* %utf8_target, align 1
  %tobool1260 = trunc i8 %692 to i1
  br i1 %tobool1260, label %if.then1261, label %if.end1262

if.then1261:                                      ; preds = %sw.bb1259
  br label %bound_utf8

if.end1262:                                       ; preds = %sw.bb1259
  br label %bound_ascii_match_only

sw.bb1263:                                        ; preds = %cond.end45
  store i32 1, i32* %to_complement, align 4
  br label %sw.bb1264

sw.bb1264:                                        ; preds = %cond.end45, %sw.bb1263
  br label %bound_ascii_match_only

bound_ascii_match_only:                           ; preds = %sw.bb1264, %if.end1262
  %693 = load i8*, i8** %locinput, align 8
  %694 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg1265 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %694, i32 0, i32 1
  %695 = load i8*, i8** %strbeg1265, align 8
  %cmp1266 = icmp eq i8* %693, %695
  br i1 %cmp1266, label %cond.true1268, label %cond.false1273

cond.true1268:                                    ; preds = %bound_ascii_match_only
  %696 = load i32, i32* getelementptr inbounds ([0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 10), align 4
  %and1269 = and i32 %696, 16385
  %cmp1270 = icmp eq i32 %and1269, 16385
  %land.ext1272 = zext i1 %cmp1270 to i32
  br label %cond.end1290

cond.false1273:                                   ; preds = %bound_ascii_match_only
  %697 = load i8*, i8** %locinput, align 8
  %add.ptr1274 = getelementptr inbounds i8, i8* %697, i64 -1
  %698 = load i8, i8* %add.ptr1274, align 1
  %conv1275 = zext i8 %698 to i32
  %conv1276 = sext i32 %conv1275 to i64
  %and1277 = and i64 %conv1276, -256
  %tobool1278 = icmp ne i64 %and1277, 0
  br i1 %tobool1278, label %land.end1288, label %land.rhs1279

land.rhs1279:                                     ; preds = %cond.false1273
  %699 = load i8*, i8** %locinput, align 8
  %add.ptr1280 = getelementptr inbounds i8, i8* %699, i64 -1
  %700 = load i8, i8* %add.ptr1280, align 1
  %conv1281 = zext i8 %700 to i32
  %conv1282 = trunc i32 %conv1281 to i8
  %idxprom1283 = zext i8 %conv1282 to i64
  %arrayidx1284 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom1283
  %701 = load i32, i32* %arrayidx1284, align 4
  %and1285 = and i32 %701, 16385
  %cmp1286 = icmp eq i32 %and1285, 16385
  br label %land.end1288

land.end1288:                                     ; preds = %land.rhs1279, %cond.false1273
  %702 = phi i1 [ false, %cond.false1273 ], [ %cmp1286, %land.rhs1279 ]
  %land.ext1289 = zext i1 %702 to i32
  br label %cond.end1290

cond.end1290:                                     ; preds = %land.end1288, %cond.true1268
  %cond1291 = phi i32 [ %land.ext1272, %cond.true1268 ], [ %land.ext1289, %land.end1288 ]
  %conv1292 = sext i32 %cond1291 to i64
  store i64 %conv1292, i64* %ln, align 8
  %703 = load i32, i32* %nextchr, align 4
  %cmp1293 = icmp slt i32 %703, 0
  br i1 %cmp1293, label %cond.true1295, label %cond.false1300

cond.true1295:                                    ; preds = %cond.end1290
  %704 = load i32, i32* getelementptr inbounds ([0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 10), align 4
  %and1296 = and i32 %704, 16385
  %cmp1297 = icmp eq i32 %and1296, 16385
  %land.ext1299 = zext i1 %cmp1297 to i32
  br label %cond.end1313

cond.false1300:                                   ; preds = %cond.end1290
  %705 = load i32, i32* %nextchr, align 4
  %conv1301 = sext i32 %705 to i64
  %and1302 = and i64 %conv1301, -256
  %tobool1303 = icmp ne i64 %and1302, 0
  br i1 %tobool1303, label %land.end1311, label %land.rhs1304

land.rhs1304:                                     ; preds = %cond.false1300
  %706 = load i32, i32* %nextchr, align 4
  %conv1305 = trunc i32 %706 to i8
  %idxprom1306 = zext i8 %conv1305 to i64
  %arrayidx1307 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom1306
  %707 = load i32, i32* %arrayidx1307, align 4
  %and1308 = and i32 %707, 16385
  %cmp1309 = icmp eq i32 %and1308, 16385
  br label %land.end1311

land.end1311:                                     ; preds = %land.rhs1304, %cond.false1300
  %708 = phi i1 [ false, %cond.false1300 ], [ %cmp1309, %land.rhs1304 ]
  %land.ext1312 = zext i1 %708 to i32
  br label %cond.end1313

cond.end1313:                                     ; preds = %land.end1311, %cond.true1295
  %cond1314 = phi i32 [ %land.ext1299, %cond.true1295 ], [ %land.ext1312, %land.end1311 ]
  store i32 %cond1314, i32* %n, align 4
  %709 = load i32, i32* %to_complement, align 4
  %710 = load i64, i64* %ln, align 8
  %711 = load i32, i32* %n, align 4
  %conv1315 = zext i32 %711 to i64
  %cmp1316 = icmp eq i64 %710, %conv1315
  %conv1317 = zext i1 %cmp1316 to i32
  %xor1318 = xor i32 %709, %conv1317
  %tobool1319 = icmp ne i32 %xor1318, 0
  br i1 %tobool1319, label %if.then1320, label %if.end1321

if.then1320:                                      ; preds = %cond.end1313
  br label %no

if.end1321:                                       ; preds = %cond.end1313
  br label %sw.epilog6768

sw.bb1322:                                        ; preds = %cond.end45
  store i32 1, i32* %to_complement, align 4
  br label %sw.bb1323

sw.bb1323:                                        ; preds = %cond.end45, %sw.bb1322
  br label %boundu

boundu:                                           ; preds = %sw.bb1323, %if.end981
  %712 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg1324 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %712, i32 0, i32 1
  %713 = load i8*, i8** %strbeg1324, align 8
  %714 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend1325 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %714, i32 0, i32 2
  %715 = load i8*, i8** %strend1325, align 8
  %cmp1326 = icmp uge i8* %713, %715
  br i1 %cmp1326, label %cond.true1328, label %cond.false1329

cond.true1328:                                    ; preds = %boundu
  br i1 true, label %if.then1330, label %if.else1331

cond.false1329:                                   ; preds = %boundu
  br i1 false, label %if.then1330, label %if.else1331

if.then1330:                                      ; preds = %cond.false1329, %cond.true1328
  store i8 0, i8* %match, align 1
  br label %if.end1708

if.else1331:                                      ; preds = %cond.false1329, %cond.true1328
  %716 = load i8, i8* %utf8_target, align 1
  %tobool1332 = trunc i8 %716 to i1
  br i1 %tobool1332, label %if.then1333, label %if.else1586

if.then1333:                                      ; preds = %if.else1331
  br label %bound_utf8

bound_utf8:                                       ; preds = %if.then1333, %if.then1261
  %717 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %flags1334 = getelementptr inbounds %struct.regnode, %struct.regnode* %717, i32 0, i32 0
  %718 = load i8, i8* %flags1334, align 2
  %conv1335 = zext i8 %718 to i32
  switch i32 %conv1335, label %sw.epilog1585 [
    i32 0, label %sw.bb1336
    i32 1, label %sw.bb1471
    i32 2, label %sw.bb1507
    i32 3, label %sw.bb1546
  ]

sw.bb1336:                                        ; preds = %bound_utf8
  %719 = load i8*, i8** %locinput, align 8
  %720 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg1337 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %720, i32 0, i32 1
  %721 = load i8*, i8** %strbeg1337, align 8
  %cmp1338 = icmp eq i8* %719, %721
  br i1 %cmp1338, label %cond.true1340, label %cond.false1341

cond.true1340:                                    ; preds = %sw.bb1336
  br label %cond.end1407

cond.false1341:                                   ; preds = %sw.bb1336
  %722 = load i8*, i8** %locinput, align 8
  %723 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg1342 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %723, i32 0, i32 1
  %724 = load i8*, i8** %strbeg1342, align 8
  %call1343 = call i8* @S_reghop3(i8* %722, i64 -1, i8* %724)
  %725 = load i8, i8* %call1343, align 1
  %conv1344 = zext i8 %725 to i64
  %cmp1345 = icmp ult i64 %conv1344, 128
  br i1 %cmp1345, label %cond.true1347, label %cond.false1356

cond.true1347:                                    ; preds = %cond.false1341
  %726 = load i8*, i8** %locinput, align 8
  %727 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg1348 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %727, i32 0, i32 1
  %728 = load i8*, i8** %strbeg1348, align 8
  %call1349 = call i8* @S_reghop3(i8* %726, i64 -1, i8* %728)
  %729 = load i8, i8* %call1349, align 1
  %idxprom1350 = zext i8 %729 to i64
  %arrayidx1351 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom1350
  %730 = load i32, i32* %arrayidx1351, align 4
  %and1352 = and i32 %730, 1
  %tobool1353 = icmp ne i32 %and1352, 0
  %731 = zext i1 %tobool1353 to i64
  %cond1355 = select i1 %tobool1353, i32 1, i32 0
  br label %cond.end1405

cond.false1356:                                   ; preds = %cond.false1341
  %732 = load i8*, i8** %locinput, align 8
  %733 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg1357 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %733, i32 0, i32 1
  %734 = load i8*, i8** %strbeg1357, align 8
  %call1358 = call i8* @S_reghop3(i8* %732, i64 -1, i8* %734)
  %735 = load i8, i8* %call1358, align 1
  %conv1359 = zext i8 %735 to i32
  %and1360 = and i32 %conv1359, 254
  %cmp1361 = icmp eq i32 %and1360, 194
  br i1 %cmp1361, label %cond.true1363, label %cond.false1398

cond.true1363:                                    ; preds = %cond.false1356
  %736 = load i8*, i8** %locinput, align 8
  %737 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg1364 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %737, i32 0, i32 1
  %738 = load i8*, i8** %strbeg1364, align 8
  %call1365 = call i8* @S_reghop3(i8* %736, i64 -1, i8* %738)
  %739 = load i8, i8* %call1365, align 1
  %conv1366 = zext i8 %739 to i32
  %and1367 = and i32 %conv1366, 31
  %shl1368 = shl i32 %and1367, 6
  %740 = load i8*, i8** %locinput, align 8
  %741 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg1369 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %741, i32 0, i32 1
  %742 = load i8*, i8** %strbeg1369, align 8
  %call1370 = call i8* @S_reghop3(i8* %740, i64 -1, i8* %742)
  %add.ptr1371 = getelementptr inbounds i8, i8* %call1370, i64 1
  %743 = load i8, i8* %add.ptr1371, align 1
  %conv1372 = zext i8 %743 to i32
  %and1373 = and i32 %conv1372, 63
  %or1374 = or i32 %shl1368, %and1373
  %conv1375 = sext i32 %or1374 to i64
  %and1376 = and i64 %conv1375, -256
  %tobool1377 = icmp ne i64 %and1376, 0
  br i1 %tobool1377, label %land.end1395, label %land.rhs1378

land.rhs1378:                                     ; preds = %cond.true1363
  %744 = load i8*, i8** %locinput, align 8
  %745 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg1379 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %745, i32 0, i32 1
  %746 = load i8*, i8** %strbeg1379, align 8
  %call1380 = call i8* @S_reghop3(i8* %744, i64 -1, i8* %746)
  %747 = load i8, i8* %call1380, align 1
  %conv1381 = zext i8 %747 to i32
  %and1382 = and i32 %conv1381, 31
  %shl1383 = shl i32 %and1382, 6
  %748 = load i8*, i8** %locinput, align 8
  %749 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg1384 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %749, i32 0, i32 1
  %750 = load i8*, i8** %strbeg1384, align 8
  %call1385 = call i8* @S_reghop3(i8* %748, i64 -1, i8* %750)
  %add.ptr1386 = getelementptr inbounds i8, i8* %call1385, i64 1
  %751 = load i8, i8* %add.ptr1386, align 1
  %conv1387 = zext i8 %751 to i32
  %and1388 = and i32 %conv1387, 63
  %or1389 = or i32 %shl1383, %and1388
  %conv1390 = trunc i32 %or1389 to i8
  %idxprom1391 = zext i8 %conv1390 to i64
  %arrayidx1392 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom1391
  %752 = load i32, i32* %arrayidx1392, align 4
  %and1393 = and i32 %752, 1
  %tobool1394 = icmp ne i32 %and1393, 0
  br label %land.end1395

land.end1395:                                     ; preds = %land.rhs1378, %cond.true1363
  %753 = phi i1 [ false, %cond.true1363 ], [ %tobool1394, %land.rhs1378 ]
  %754 = zext i1 %753 to i64
  %cond1397 = select i1 %753, i32 1, i32 0
  br label %cond.end1403

cond.false1398:                                   ; preds = %cond.false1356
  %755 = load i8*, i8** %locinput, align 8
  %756 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg1399 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %756, i32 0, i32 1
  %757 = load i8*, i8** %strbeg1399, align 8
  %call1400 = call i8* @S_reghop3(i8* %755, i64 -1, i8* %757)
  %call1401 = call zeroext i1 @Perl__is_utf8_FOO(i8 zeroext 0, i8* %call1400)
  %conv1402 = zext i1 %call1401 to i32
  br label %cond.end1403

cond.end1403:                                     ; preds = %cond.false1398, %land.end1395
  %cond1404 = phi i32 [ %cond1397, %land.end1395 ], [ %conv1402, %cond.false1398 ]
  br label %cond.end1405

cond.end1405:                                     ; preds = %cond.end1403, %cond.true1347
  %cond1406 = phi i32 [ %cond1355, %cond.true1347 ], [ %cond1404, %cond.end1403 ]
  br label %cond.end1407

cond.end1407:                                     ; preds = %cond.end1405, %cond.true1340
  %cond1408 = phi i32 [ 0, %cond.true1340 ], [ %cond1406, %cond.end1405 ]
  %conv1409 = sext i32 %cond1408 to i64
  store i64 %conv1409, i64* %ln, align 8
  %758 = load i32, i32* %nextchr, align 4
  %cmp1410 = icmp slt i32 %758, 0
  br i1 %cmp1410, label %cond.true1412, label %cond.false1413

cond.true1412:                                    ; preds = %cond.end1407
  br label %cond.end1463

cond.false1413:                                   ; preds = %cond.end1407
  %759 = load i8*, i8** %locinput, align 8
  %760 = load i8, i8* %759, align 1
  %conv1414 = zext i8 %760 to i64
  %cmp1415 = icmp ult i64 %conv1414, 128
  br i1 %cmp1415, label %cond.true1417, label %cond.false1424

cond.true1417:                                    ; preds = %cond.false1413
  %761 = load i8*, i8** %locinput, align 8
  %762 = load i8, i8* %761, align 1
  %idxprom1418 = zext i8 %762 to i64
  %arrayidx1419 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom1418
  %763 = load i32, i32* %arrayidx1419, align 4
  %and1420 = and i32 %763, 1
  %tobool1421 = icmp ne i32 %and1420, 0
  %764 = zext i1 %tobool1421 to i64
  %cond1423 = select i1 %tobool1421, i32 1, i32 0
  br label %cond.end1461

cond.false1424:                                   ; preds = %cond.false1413
  %765 = load i8*, i8** %locinput, align 8
  %766 = load i8, i8* %765, align 1
  %conv1425 = zext i8 %766 to i32
  %and1426 = and i32 %conv1425, 254
  %cmp1427 = icmp eq i32 %and1426, 194
  br i1 %cmp1427, label %cond.true1429, label %cond.false1456

cond.true1429:                                    ; preds = %cond.false1424
  %767 = load i8*, i8** %locinput, align 8
  %768 = load i8, i8* %767, align 1
  %conv1430 = zext i8 %768 to i32
  %and1431 = and i32 %conv1430, 31
  %shl1432 = shl i32 %and1431, 6
  %769 = load i8*, i8** %locinput, align 8
  %add.ptr1433 = getelementptr inbounds i8, i8* %769, i64 1
  %770 = load i8, i8* %add.ptr1433, align 1
  %conv1434 = zext i8 %770 to i32
  %and1435 = and i32 %conv1434, 63
  %or1436 = or i32 %shl1432, %and1435
  %conv1437 = sext i32 %or1436 to i64
  %and1438 = and i64 %conv1437, -256
  %tobool1439 = icmp ne i64 %and1438, 0
  br i1 %tobool1439, label %land.end1453, label %land.rhs1440

land.rhs1440:                                     ; preds = %cond.true1429
  %771 = load i8*, i8** %locinput, align 8
  %772 = load i8, i8* %771, align 1
  %conv1441 = zext i8 %772 to i32
  %and1442 = and i32 %conv1441, 31
  %shl1443 = shl i32 %and1442, 6
  %773 = load i8*, i8** %locinput, align 8
  %add.ptr1444 = getelementptr inbounds i8, i8* %773, i64 1
  %774 = load i8, i8* %add.ptr1444, align 1
  %conv1445 = zext i8 %774 to i32
  %and1446 = and i32 %conv1445, 63
  %or1447 = or i32 %shl1443, %and1446
  %conv1448 = trunc i32 %or1447 to i8
  %idxprom1449 = zext i8 %conv1448 to i64
  %arrayidx1450 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom1449
  %775 = load i32, i32* %arrayidx1450, align 4
  %and1451 = and i32 %775, 1
  %tobool1452 = icmp ne i32 %and1451, 0
  br label %land.end1453

land.end1453:                                     ; preds = %land.rhs1440, %cond.true1429
  %776 = phi i1 [ false, %cond.true1429 ], [ %tobool1452, %land.rhs1440 ]
  %777 = zext i1 %776 to i64
  %cond1455 = select i1 %776, i32 1, i32 0
  br label %cond.end1459

cond.false1456:                                   ; preds = %cond.false1424
  %778 = load i8*, i8** %locinput, align 8
  %call1457 = call zeroext i1 @Perl__is_utf8_FOO(i8 zeroext 0, i8* %778)
  %conv1458 = zext i1 %call1457 to i32
  br label %cond.end1459

cond.end1459:                                     ; preds = %cond.false1456, %land.end1453
  %cond1460 = phi i32 [ %cond1455, %land.end1453 ], [ %conv1458, %cond.false1456 ]
  br label %cond.end1461

cond.end1461:                                     ; preds = %cond.end1459, %cond.true1417
  %cond1462 = phi i32 [ %cond1423, %cond.true1417 ], [ %cond1460, %cond.end1459 ]
  br label %cond.end1463

cond.end1463:                                     ; preds = %cond.end1461, %cond.true1412
  %cond1464 = phi i32 [ 0, %cond.true1412 ], [ %cond1462, %cond.end1461 ]
  store i32 %cond1464, i32* %n, align 4
  %779 = load i64, i64* %ln, align 8
  %780 = load i32, i32* %n, align 4
  %conv1465 = zext i32 %780 to i64
  %cmp1466 = icmp ne i64 %779, %conv1465
  %781 = zext i1 %cmp1466 to i64
  %cond1468 = select i1 %cmp1466, i32 1, i32 0
  %tobool1469 = icmp ne i32 %cond1468, 0
  %frombool1470 = zext i1 %tobool1469 to i8
  store i8 %frombool1470, i8* %match, align 1
  br label %sw.epilog1585

sw.bb1471:                                        ; preds = %bound_utf8
  %782 = load i8*, i8** %locinput, align 8
  %783 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg1472 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %783, i32 0, i32 1
  %784 = load i8*, i8** %strbeg1472, align 8
  %cmp1473 = icmp eq i8* %782, %784
  br i1 %cmp1473, label %if.then1478, label %lor.lhs.false1475

lor.lhs.false1475:                                ; preds = %sw.bb1471
  %785 = load i32, i32* %nextchr, align 4
  %cmp1476 = icmp slt i32 %785, 0
  br i1 %cmp1476, label %if.then1478, label %if.else1479

if.then1478:                                      ; preds = %lor.lhs.false1475, %sw.bb1471
  store i8 1, i8* %match, align 1
  br label %if.end1506

if.else1479:                                      ; preds = %lor.lhs.false1475
  %786 = load %struct.sv*, %struct.sv** @PL_GCB_invlist, align 8
  %787 = load i8*, i8** %locinput, align 8
  %788 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg1480 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %788, i32 0, i32 1
  %789 = load i8*, i8** %strbeg1480, align 8
  %call1481 = call i8* @S_reghop3(i8* %787, i64 -1, i8* %789)
  %790 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend1482 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %790, i32 0, i32 2
  %791 = load i8*, i8** %strend1482, align 8
  %792 = load i8*, i8** %locinput, align 8
  %793 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg1483 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %793, i32 0, i32 1
  %794 = load i8*, i8** %strbeg1483, align 8
  %call1484 = call i8* @S_reghop3(i8* %792, i64 -1, i8* %794)
  %sub.ptr.lhs.cast1485 = ptrtoint i8* %791 to i64
  %sub.ptr.rhs.cast1486 = ptrtoint i8* %call1484 to i64
  %sub.ptr.sub1487 = sub i64 %sub.ptr.lhs.cast1485, %sub.ptr.rhs.cast1486
  %call1488 = call zeroext i1 @Perl_ckwarn_d(i32 44)
  %795 = zext i1 %call1488 to i64
  %cond1490 = select i1 %call1488, i32 0, i32 -8161
  %call1491 = call i64 @Perl_utf8n_to_uvchr(i8* %call1481, i64 %sub.ptr.sub1487, i64* null, i32 %cond1490)
  %call1492 = call i64 @Perl__invlist_search(%struct.sv* %786, i64 %call1491)
  %arrayidx1493 = getelementptr inbounds [1484 x i32], [1484 x i32]* @Grapheme_Cluster_Break_invmap, i64 0, i64 %call1492
  %796 = load i32, i32* %arrayidx1493, align 4
  %797 = load %struct.sv*, %struct.sv** @PL_GCB_invlist, align 8
  %798 = load i8*, i8** %locinput, align 8
  %799 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend1494 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %799, i32 0, i32 2
  %800 = load i8*, i8** %strend1494, align 8
  %801 = load i8*, i8** %locinput, align 8
  %sub.ptr.lhs.cast1495 = ptrtoint i8* %800 to i64
  %sub.ptr.rhs.cast1496 = ptrtoint i8* %801 to i64
  %sub.ptr.sub1497 = sub i64 %sub.ptr.lhs.cast1495, %sub.ptr.rhs.cast1496
  %call1498 = call zeroext i1 @Perl_ckwarn_d(i32 44)
  %802 = zext i1 %call1498 to i64
  %cond1500 = select i1 %call1498, i32 0, i32 -8161
  %call1501 = call i64 @Perl_utf8n_to_uvchr(i8* %798, i64 %sub.ptr.sub1497, i64* null, i32 %cond1500)
  %call1502 = call i64 @Perl__invlist_search(%struct.sv* %797, i64 %call1501)
  %arrayidx1503 = getelementptr inbounds [1484 x i32], [1484 x i32]* @Grapheme_Cluster_Break_invmap, i64 0, i64 %call1502
  %803 = load i32, i32* %arrayidx1503, align 4
  %call1504 = call zeroext i1 @S_isGCB(i32 %796, i32 %803)
  %frombool1505 = zext i1 %call1504 to i8
  store i8 %frombool1505, i8* %match, align 1
  br label %if.end1506

if.end1506:                                       ; preds = %if.else1479, %if.then1478
  br label %sw.epilog1585

sw.bb1507:                                        ; preds = %bound_utf8
  %804 = load i8*, i8** %locinput, align 8
  %805 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg1508 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %805, i32 0, i32 1
  %806 = load i8*, i8** %strbeg1508, align 8
  %cmp1509 = icmp eq i8* %804, %806
  br i1 %cmp1509, label %if.then1514, label %lor.lhs.false1511

lor.lhs.false1511:                                ; preds = %sw.bb1507
  %807 = load i32, i32* %nextchr, align 4
  %cmp1512 = icmp slt i32 %807, 0
  br i1 %cmp1512, label %if.then1514, label %if.else1515

if.then1514:                                      ; preds = %lor.lhs.false1511, %sw.bb1507
  store i8 1, i8* %match, align 1
  br label %if.end1545

if.else1515:                                      ; preds = %lor.lhs.false1511
  %808 = load %struct.sv*, %struct.sv** @PL_SB_invlist, align 8
  %809 = load i8*, i8** %locinput, align 8
  %810 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg1516 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %810, i32 0, i32 1
  %811 = load i8*, i8** %strbeg1516, align 8
  %call1517 = call i8* @S_reghop3(i8* %809, i64 -1, i8* %811)
  %812 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend1518 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %812, i32 0, i32 2
  %813 = load i8*, i8** %strend1518, align 8
  %814 = load i8*, i8** %locinput, align 8
  %815 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg1519 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %815, i32 0, i32 1
  %816 = load i8*, i8** %strbeg1519, align 8
  %call1520 = call i8* @S_reghop3(i8* %814, i64 -1, i8* %816)
  %sub.ptr.lhs.cast1521 = ptrtoint i8* %813 to i64
  %sub.ptr.rhs.cast1522 = ptrtoint i8* %call1520 to i64
  %sub.ptr.sub1523 = sub i64 %sub.ptr.lhs.cast1521, %sub.ptr.rhs.cast1522
  %call1524 = call zeroext i1 @Perl_ckwarn_d(i32 44)
  %817 = zext i1 %call1524 to i64
  %cond1526 = select i1 %call1524, i32 0, i32 -8161
  %call1527 = call i64 @Perl_utf8n_to_uvchr(i8* %call1517, i64 %sub.ptr.sub1523, i64* null, i32 %cond1526)
  %call1528 = call i64 @Perl__invlist_search(%struct.sv* %808, i64 %call1527)
  %arrayidx1529 = getelementptr inbounds [2835 x i32], [2835 x i32]* @Sentence_Break_invmap, i64 0, i64 %call1528
  %818 = load i32, i32* %arrayidx1529, align 4
  %819 = load %struct.sv*, %struct.sv** @PL_SB_invlist, align 8
  %820 = load i8*, i8** %locinput, align 8
  %821 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend1530 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %821, i32 0, i32 2
  %822 = load i8*, i8** %strend1530, align 8
  %823 = load i8*, i8** %locinput, align 8
  %sub.ptr.lhs.cast1531 = ptrtoint i8* %822 to i64
  %sub.ptr.rhs.cast1532 = ptrtoint i8* %823 to i64
  %sub.ptr.sub1533 = sub i64 %sub.ptr.lhs.cast1531, %sub.ptr.rhs.cast1532
  %call1534 = call zeroext i1 @Perl_ckwarn_d(i32 44)
  %824 = zext i1 %call1534 to i64
  %cond1536 = select i1 %call1534, i32 0, i32 -8161
  %call1537 = call i64 @Perl_utf8n_to_uvchr(i8* %820, i64 %sub.ptr.sub1533, i64* null, i32 %cond1536)
  %call1538 = call i64 @Perl__invlist_search(%struct.sv* %819, i64 %call1537)
  %arrayidx1539 = getelementptr inbounds [2835 x i32], [2835 x i32]* @Sentence_Break_invmap, i64 0, i64 %call1538
  %825 = load i32, i32* %arrayidx1539, align 4
  %826 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg1540 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %826, i32 0, i32 1
  %827 = load i8*, i8** %strbeg1540, align 8
  %828 = load i8*, i8** %locinput, align 8
  %829 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend1541 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %829, i32 0, i32 2
  %830 = load i8*, i8** %strend1541, align 8
  %831 = load i8, i8* %utf8_target, align 1
  %tobool1542 = trunc i8 %831 to i1
  %call1543 = call zeroext i1 @S_isSB(i32 %818, i32 %825, i8* %827, i8* %828, i8* %830, i1 zeroext %tobool1542)
  %frombool1544 = zext i1 %call1543 to i8
  store i8 %frombool1544, i8* %match, align 1
  br label %if.end1545

if.end1545:                                       ; preds = %if.else1515, %if.then1514
  br label %sw.epilog1585

sw.bb1546:                                        ; preds = %bound_utf8
  %832 = load i8*, i8** %locinput, align 8
  %833 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg1547 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %833, i32 0, i32 1
  %834 = load i8*, i8** %strbeg1547, align 8
  %cmp1548 = icmp eq i8* %832, %834
  br i1 %cmp1548, label %if.then1553, label %lor.lhs.false1550

lor.lhs.false1550:                                ; preds = %sw.bb1546
  %835 = load i32, i32* %nextchr, align 4
  %cmp1551 = icmp slt i32 %835, 0
  br i1 %cmp1551, label %if.then1553, label %if.else1554

if.then1553:                                      ; preds = %lor.lhs.false1550, %sw.bb1546
  store i8 1, i8* %match, align 1
  br label %if.end1584

if.else1554:                                      ; preds = %lor.lhs.false1550
  %836 = load %struct.sv*, %struct.sv** @PL_WB_invlist, align 8
  %837 = load i8*, i8** %locinput, align 8
  %838 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg1555 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %838, i32 0, i32 1
  %839 = load i8*, i8** %strbeg1555, align 8
  %call1556 = call i8* @S_reghop3(i8* %837, i64 -1, i8* %839)
  %840 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend1557 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %840, i32 0, i32 2
  %841 = load i8*, i8** %strend1557, align 8
  %842 = load i8*, i8** %locinput, align 8
  %843 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg1558 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %843, i32 0, i32 1
  %844 = load i8*, i8** %strbeg1558, align 8
  %call1559 = call i8* @S_reghop3(i8* %842, i64 -1, i8* %844)
  %sub.ptr.lhs.cast1560 = ptrtoint i8* %841 to i64
  %sub.ptr.rhs.cast1561 = ptrtoint i8* %call1559 to i64
  %sub.ptr.sub1562 = sub i64 %sub.ptr.lhs.cast1560, %sub.ptr.rhs.cast1561
  %call1563 = call zeroext i1 @Perl_ckwarn_d(i32 44)
  %845 = zext i1 %call1563 to i64
  %cond1565 = select i1 %call1563, i32 0, i32 -8161
  %call1566 = call i64 @Perl_utf8n_to_uvchr(i8* %call1556, i64 %sub.ptr.sub1562, i64* null, i32 %cond1565)
  %call1567 = call i64 @Perl__invlist_search(%struct.sv* %836, i64 %call1566)
  %arrayidx1568 = getelementptr inbounds [1480 x i32], [1480 x i32]* @Word_Break_invmap, i64 0, i64 %call1567
  %846 = load i32, i32* %arrayidx1568, align 4
  %847 = load %struct.sv*, %struct.sv** @PL_WB_invlist, align 8
  %848 = load i8*, i8** %locinput, align 8
  %849 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend1569 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %849, i32 0, i32 2
  %850 = load i8*, i8** %strend1569, align 8
  %851 = load i8*, i8** %locinput, align 8
  %sub.ptr.lhs.cast1570 = ptrtoint i8* %850 to i64
  %sub.ptr.rhs.cast1571 = ptrtoint i8* %851 to i64
  %sub.ptr.sub1572 = sub i64 %sub.ptr.lhs.cast1570, %sub.ptr.rhs.cast1571
  %call1573 = call zeroext i1 @Perl_ckwarn_d(i32 44)
  %852 = zext i1 %call1573 to i64
  %cond1575 = select i1 %call1573, i32 0, i32 -8161
  %call1576 = call i64 @Perl_utf8n_to_uvchr(i8* %848, i64 %sub.ptr.sub1572, i64* null, i32 %cond1575)
  %call1577 = call i64 @Perl__invlist_search(%struct.sv* %847, i64 %call1576)
  %arrayidx1578 = getelementptr inbounds [1480 x i32], [1480 x i32]* @Word_Break_invmap, i64 0, i64 %call1577
  %853 = load i32, i32* %arrayidx1578, align 4
  %854 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg1579 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %854, i32 0, i32 1
  %855 = load i8*, i8** %strbeg1579, align 8
  %856 = load i8*, i8** %locinput, align 8
  %857 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend1580 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %857, i32 0, i32 2
  %858 = load i8*, i8** %strend1580, align 8
  %859 = load i8, i8* %utf8_target, align 1
  %tobool1581 = trunc i8 %859 to i1
  %call1582 = call zeroext i1 @S_isWB(i32 18, i32 %846, i32 %853, i8* %855, i8* %856, i8* %858, i1 zeroext %tobool1581)
  %frombool1583 = zext i1 %call1582 to i8
  store i8 %frombool1583, i8* %match, align 1
  br label %if.end1584

if.end1584:                                       ; preds = %if.else1554, %if.then1553
  br label %sw.epilog1585

sw.epilog1585:                                    ; preds = %bound_utf8, %if.end1584, %if.end1545, %if.end1506, %cond.end1463
  br label %if.end1707

if.else1586:                                      ; preds = %if.else1331
  %860 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %flags1587 = getelementptr inbounds %struct.regnode, %struct.regnode* %860, i32 0, i32 0
  %861 = load i8, i8* %flags1587, align 2
  %conv1588 = zext i8 %861 to i32
  switch i32 %conv1588, label %sw.epilog1706 [
    i32 0, label %sw.bb1589
    i32 1, label %sw.bb1638
    i32 2, label %sw.bb1658
    i32 3, label %sw.bb1682
  ]

sw.bb1589:                                        ; preds = %if.else1586
  %862 = load i8*, i8** %locinput, align 8
  %863 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg1590 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %863, i32 0, i32 1
  %864 = load i8*, i8** %strbeg1590, align 8
  %cmp1591 = icmp eq i8* %862, %864
  br i1 %cmp1591, label %cond.true1593, label %cond.false1594

cond.true1593:                                    ; preds = %sw.bb1589
  br label %cond.end1611

cond.false1594:                                   ; preds = %sw.bb1589
  %865 = load i8*, i8** %locinput, align 8
  %add.ptr1595 = getelementptr inbounds i8, i8* %865, i64 -1
  %866 = load i8, i8* %add.ptr1595, align 1
  %conv1596 = zext i8 %866 to i32
  %conv1597 = sext i32 %conv1596 to i64
  %and1598 = and i64 %conv1597, -256
  %tobool1599 = icmp ne i64 %and1598, 0
  br i1 %tobool1599, label %land.end1608, label %land.rhs1600

land.rhs1600:                                     ; preds = %cond.false1594
  %867 = load i8*, i8** %locinput, align 8
  %add.ptr1601 = getelementptr inbounds i8, i8* %867, i64 -1
  %868 = load i8, i8* %add.ptr1601, align 1
  %conv1602 = zext i8 %868 to i32
  %conv1603 = trunc i32 %conv1602 to i8
  %idxprom1604 = zext i8 %conv1603 to i64
  %arrayidx1605 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom1604
  %869 = load i32, i32* %arrayidx1605, align 4
  %and1606 = and i32 %869, 1
  %tobool1607 = icmp ne i32 %and1606, 0
  br label %land.end1608

land.end1608:                                     ; preds = %land.rhs1600, %cond.false1594
  %870 = phi i1 [ false, %cond.false1594 ], [ %tobool1607, %land.rhs1600 ]
  %871 = zext i1 %870 to i64
  %cond1610 = select i1 %870, i32 1, i32 0
  br label %cond.end1611

cond.end1611:                                     ; preds = %land.end1608, %cond.true1593
  %cond1612 = phi i32 [ 0, %cond.true1593 ], [ %cond1610, %land.end1608 ]
  %conv1613 = sext i32 %cond1612 to i64
  store i64 %conv1613, i64* %ln, align 8
  %872 = load i32, i32* %nextchr, align 4
  %cmp1614 = icmp slt i32 %872, 0
  br i1 %cmp1614, label %cond.true1616, label %cond.false1617

cond.true1616:                                    ; preds = %cond.end1611
  br label %cond.end1630

cond.false1617:                                   ; preds = %cond.end1611
  %873 = load i32, i32* %nextchr, align 4
  %conv1618 = sext i32 %873 to i64
  %and1619 = and i64 %conv1618, -256
  %tobool1620 = icmp ne i64 %and1619, 0
  br i1 %tobool1620, label %land.end1627, label %land.rhs1621

land.rhs1621:                                     ; preds = %cond.false1617
  %874 = load i32, i32* %nextchr, align 4
  %conv1622 = trunc i32 %874 to i8
  %idxprom1623 = zext i8 %conv1622 to i64
  %arrayidx1624 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom1623
  %875 = load i32, i32* %arrayidx1624, align 4
  %and1625 = and i32 %875, 1
  %tobool1626 = icmp ne i32 %and1625, 0
  br label %land.end1627

land.end1627:                                     ; preds = %land.rhs1621, %cond.false1617
  %876 = phi i1 [ false, %cond.false1617 ], [ %tobool1626, %land.rhs1621 ]
  %877 = zext i1 %876 to i64
  %cond1629 = select i1 %876, i32 1, i32 0
  br label %cond.end1630

cond.end1630:                                     ; preds = %land.end1627, %cond.true1616
  %cond1631 = phi i32 [ 0, %cond.true1616 ], [ %cond1629, %land.end1627 ]
  store i32 %cond1631, i32* %n, align 4
  %878 = load i64, i64* %ln, align 8
  %879 = load i32, i32* %n, align 4
  %conv1632 = zext i32 %879 to i64
  %cmp1633 = icmp ne i64 %878, %conv1632
  %880 = zext i1 %cmp1633 to i64
  %cond1635 = select i1 %cmp1633, i32 1, i32 0
  %tobool1636 = icmp ne i32 %cond1635, 0
  %frombool1637 = zext i1 %tobool1636 to i8
  store i8 %frombool1637, i8* %match, align 1
  br label %sw.epilog1706

sw.bb1638:                                        ; preds = %if.else1586
  %881 = load i8*, i8** %locinput, align 8
  %882 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg1639 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %882, i32 0, i32 1
  %883 = load i8*, i8** %strbeg1639, align 8
  %cmp1640 = icmp eq i8* %881, %883
  br i1 %cmp1640, label %if.then1645, label %lor.lhs.false1642

lor.lhs.false1642:                                ; preds = %sw.bb1638
  %884 = load i32, i32* %nextchr, align 4
  %cmp1643 = icmp slt i32 %884, 0
  br i1 %cmp1643, label %if.then1645, label %if.else1646

if.then1645:                                      ; preds = %lor.lhs.false1642, %sw.bb1638
  store i8 1, i8* %match, align 1
  br label %if.end1657

if.else1646:                                      ; preds = %lor.lhs.false1642
  %885 = load i8*, i8** %locinput, align 8
  %add.ptr1647 = getelementptr inbounds i8, i8* %885, i64 -1
  %886 = load i8, i8* %add.ptr1647, align 1
  %conv1648 = zext i8 %886 to i32
  %cmp1649 = icmp ne i32 %conv1648, 13
  br i1 %cmp1649, label %lor.end1655, label %lor.rhs1651

lor.rhs1651:                                      ; preds = %if.else1646
  %887 = load i8*, i8** %locinput, align 8
  %888 = load i8, i8* %887, align 1
  %conv1652 = zext i8 %888 to i32
  %cmp1653 = icmp ne i32 %conv1652, 10
  br label %lor.end1655

lor.end1655:                                      ; preds = %lor.rhs1651, %if.else1646
  %889 = phi i1 [ true, %if.else1646 ], [ %cmp1653, %lor.rhs1651 ]
  %frombool1656 = zext i1 %889 to i8
  store i8 %frombool1656, i8* %match, align 1
  br label %if.end1657

if.end1657:                                       ; preds = %lor.end1655, %if.then1645
  br label %sw.epilog1706

sw.bb1658:                                        ; preds = %if.else1586
  %890 = load i8*, i8** %locinput, align 8
  %891 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg1659 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %891, i32 0, i32 1
  %892 = load i8*, i8** %strbeg1659, align 8
  %cmp1660 = icmp eq i8* %890, %892
  br i1 %cmp1660, label %if.then1665, label %lor.lhs.false1662

lor.lhs.false1662:                                ; preds = %sw.bb1658
  %893 = load i32, i32* %nextchr, align 4
  %cmp1663 = icmp slt i32 %893, 0
  br i1 %cmp1663, label %if.then1665, label %if.else1666

if.then1665:                                      ; preds = %lor.lhs.false1662, %sw.bb1658
  store i8 1, i8* %match, align 1
  br label %if.end1681

if.else1666:                                      ; preds = %lor.lhs.false1662
  %894 = load %struct.sv*, %struct.sv** @PL_SB_invlist, align 8
  %895 = load i8*, i8** %locinput, align 8
  %add.ptr1667 = getelementptr inbounds i8, i8* %895, i64 -1
  %896 = load i8, i8* %add.ptr1667, align 1
  %conv1668 = zext i8 %896 to i32
  %conv1669 = sext i32 %conv1668 to i64
  %call1670 = call i64 @Perl__invlist_search(%struct.sv* %894, i64 %conv1669)
  %arrayidx1671 = getelementptr inbounds [2835 x i32], [2835 x i32]* @Sentence_Break_invmap, i64 0, i64 %call1670
  %897 = load i32, i32* %arrayidx1671, align 4
  %898 = load %struct.sv*, %struct.sv** @PL_SB_invlist, align 8
  %899 = load i8*, i8** %locinput, align 8
  %900 = load i8, i8* %899, align 1
  %conv1672 = zext i8 %900 to i32
  %conv1673 = sext i32 %conv1672 to i64
  %call1674 = call i64 @Perl__invlist_search(%struct.sv* %898, i64 %conv1673)
  %arrayidx1675 = getelementptr inbounds [2835 x i32], [2835 x i32]* @Sentence_Break_invmap, i64 0, i64 %call1674
  %901 = load i32, i32* %arrayidx1675, align 4
  %902 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg1676 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %902, i32 0, i32 1
  %903 = load i8*, i8** %strbeg1676, align 8
  %904 = load i8*, i8** %locinput, align 8
  %905 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend1677 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %905, i32 0, i32 2
  %906 = load i8*, i8** %strend1677, align 8
  %907 = load i8, i8* %utf8_target, align 1
  %tobool1678 = trunc i8 %907 to i1
  %call1679 = call zeroext i1 @S_isSB(i32 %897, i32 %901, i8* %903, i8* %904, i8* %906, i1 zeroext %tobool1678)
  %frombool1680 = zext i1 %call1679 to i8
  store i8 %frombool1680, i8* %match, align 1
  br label %if.end1681

if.end1681:                                       ; preds = %if.else1666, %if.then1665
  br label %sw.epilog1706

sw.bb1682:                                        ; preds = %if.else1586
  %908 = load i8*, i8** %locinput, align 8
  %909 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg1683 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %909, i32 0, i32 1
  %910 = load i8*, i8** %strbeg1683, align 8
  %cmp1684 = icmp eq i8* %908, %910
  br i1 %cmp1684, label %if.then1689, label %lor.lhs.false1686

lor.lhs.false1686:                                ; preds = %sw.bb1682
  %911 = load i32, i32* %nextchr, align 4
  %cmp1687 = icmp slt i32 %911, 0
  br i1 %cmp1687, label %if.then1689, label %if.else1690

if.then1689:                                      ; preds = %lor.lhs.false1686, %sw.bb1682
  store i8 1, i8* %match, align 1
  br label %if.end1705

if.else1690:                                      ; preds = %lor.lhs.false1686
  %912 = load %struct.sv*, %struct.sv** @PL_WB_invlist, align 8
  %913 = load i8*, i8** %locinput, align 8
  %add.ptr1691 = getelementptr inbounds i8, i8* %913, i64 -1
  %914 = load i8, i8* %add.ptr1691, align 1
  %conv1692 = zext i8 %914 to i32
  %conv1693 = sext i32 %conv1692 to i64
  %call1694 = call i64 @Perl__invlist_search(%struct.sv* %912, i64 %conv1693)
  %arrayidx1695 = getelementptr inbounds [1480 x i32], [1480 x i32]* @Word_Break_invmap, i64 0, i64 %call1694
  %915 = load i32, i32* %arrayidx1695, align 4
  %916 = load %struct.sv*, %struct.sv** @PL_WB_invlist, align 8
  %917 = load i8*, i8** %locinput, align 8
  %918 = load i8, i8* %917, align 1
  %conv1696 = zext i8 %918 to i32
  %conv1697 = sext i32 %conv1696 to i64
  %call1698 = call i64 @Perl__invlist_search(%struct.sv* %916, i64 %conv1697)
  %arrayidx1699 = getelementptr inbounds [1480 x i32], [1480 x i32]* @Word_Break_invmap, i64 0, i64 %call1698
  %919 = load i32, i32* %arrayidx1699, align 4
  %920 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg1700 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %920, i32 0, i32 1
  %921 = load i8*, i8** %strbeg1700, align 8
  %922 = load i8*, i8** %locinput, align 8
  %923 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend1701 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %923, i32 0, i32 2
  %924 = load i8*, i8** %strend1701, align 8
  %925 = load i8, i8* %utf8_target, align 1
  %tobool1702 = trunc i8 %925 to i1
  %call1703 = call zeroext i1 @S_isWB(i32 18, i32 %915, i32 %919, i8* %921, i8* %922, i8* %924, i1 zeroext %tobool1702)
  %frombool1704 = zext i1 %call1703 to i8
  store i8 %frombool1704, i8* %match, align 1
  br label %if.end1705

if.end1705:                                       ; preds = %if.else1690, %if.then1689
  br label %sw.epilog1706

sw.epilog1706:                                    ; preds = %if.else1586, %if.end1705, %if.end1681, %if.end1657, %cond.end1630
  br label %if.end1707

if.end1707:                                       ; preds = %sw.epilog1706, %sw.epilog1585
  br label %if.end1708

if.end1708:                                       ; preds = %if.end1707, %if.then1330
  %926 = load i32, i32* %to_complement, align 4
  %927 = load i8, i8* %match, align 1
  %tobool1709 = trunc i8 %927 to i1
  %lnot = xor i1 %tobool1709, true
  %lnot.ext = zext i1 %lnot to i32
  %xor1710 = xor i32 %926, %lnot.ext
  %tobool1711 = icmp ne i32 %xor1710, 0
  br i1 %tobool1711, label %if.then1712, label %if.end1713

if.then1712:                                      ; preds = %if.end1708
  br label %no

if.end1713:                                       ; preds = %if.end1708
  br label %sw.epilog6768

sw.bb1714:                                        ; preds = %cond.end45
  br label %sw.bb1715

sw.bb1715:                                        ; preds = %cond.end45, %sw.bb1714
  %928 = load i32, i32* %nextchr, align 4
  %cmp1716 = icmp slt i32 %928, 0
  br i1 %cmp1716, label %if.then1718, label %if.end1719

if.then1718:                                      ; preds = %sw.bb1715
  br label %no

if.end1719:                                       ; preds = %sw.bb1715
  %929 = load i8, i8* %utf8_target, align 1
  %tobool1720 = trunc i8 %929 to i1
  br i1 %tobool1720, label %if.then1721, label %if.else1732

if.then1721:                                      ; preds = %if.end1719
  %930 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %931 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %932 = load i8*, i8** %locinput, align 8
  %933 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend1722 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %933, i32 0, i32 2
  %934 = load i8*, i8** %strend1722, align 8
  %935 = load i8, i8* %utf8_target, align 1
  %tobool1723 = trunc i8 %935 to i1
  %call1724 = call zeroext i1 @S_reginclass(%struct.regexp* %930, %struct.regnode* %931, i8* %932, i8* %934, i1 zeroext %tobool1723)
  br i1 %call1724, label %if.end1726, label %if.then1725

if.then1725:                                      ; preds = %if.then1721
  br label %no

if.end1726:                                       ; preds = %if.then1721
  %936 = load i8*, i8** %locinput, align 8
  %937 = load i8, i8* %936, align 1
  %idxprom1727 = zext i8 %937 to i64
  %arrayidx1728 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom1727
  %938 = load i8, i8* %arrayidx1728, align 1
  %conv1729 = zext i8 %938 to i32
  %939 = load i8*, i8** %locinput, align 8
  %idx.ext1730 = sext i32 %conv1729 to i64
  %add.ptr1731 = getelementptr inbounds i8, i8* %939, i64 %idx.ext1730
  store i8* %add.ptr1731, i8** %locinput, align 8
  br label %if.end1758

if.else1732:                                      ; preds = %if.end1719
  %940 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %flags1733 = getelementptr inbounds %struct.regnode, %struct.regnode* %940, i32 0, i32 0
  %941 = load i8, i8* %flags1733, align 2
  %conv1734 = zext i8 %941 to i32
  %tobool1735 = icmp ne i32 %conv1734, 0
  br i1 %tobool1735, label %cond.true1736, label %cond.false1740

cond.true1736:                                    ; preds = %if.else1732
  %942 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %943 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %944 = load i8*, i8** %locinput, align 8
  %945 = load i8*, i8** %locinput, align 8
  %add.ptr1737 = getelementptr inbounds i8, i8* %945, i64 1
  %call1738 = call zeroext i1 @S_reginclass(%struct.regexp* %942, %struct.regnode* %943, i8* %944, i8* %add.ptr1737, i1 zeroext false)
  br i1 %call1738, label %if.end1756, label %if.then1755

cond.false1740:                                   ; preds = %if.else1732
  %946 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %947 = bitcast %struct.regnode* %946 to %struct.regnode_charclass*
  %bitmap1741 = getelementptr inbounds %struct.regnode_charclass, %struct.regnode_charclass* %947, i32 0, i32 4
  %948 = load i8*, i8** %locinput, align 8
  %949 = load i8, i8* %948, align 1
  %conv1742 = zext i8 %949 to i32
  %shr1743 = ashr i32 %conv1742, 3
  %and1744 = and i32 %shr1743, 31
  %idxprom1745 = sext i32 %and1744 to i64
  %arrayidx1746 = getelementptr inbounds [32 x i8], [32 x i8]* %bitmap1741, i64 0, i64 %idxprom1745
  %950 = load i8, i8* %arrayidx1746, align 1
  %conv1747 = sext i8 %950 to i32
  %951 = load i8*, i8** %locinput, align 8
  %952 = load i8, i8* %951, align 1
  %conv1748 = zext i8 %952 to i32
  %and1749 = and i32 %conv1748, 7
  %shl1750 = shl i32 1, %and1749
  %and1751 = and i32 %conv1747, %shl1750
  %tobool1752 = icmp ne i32 %and1751, 0
  br i1 %tobool1752, label %cond.true1753, label %cond.false1754

cond.true1753:                                    ; preds = %cond.false1740
  br i1 true, label %if.end1756, label %if.then1755

cond.false1754:                                   ; preds = %cond.false1740
  br i1 false, label %if.end1756, label %if.then1755

if.then1755:                                      ; preds = %cond.false1754, %cond.true1753, %cond.true1736
  br label %no

if.end1756:                                       ; preds = %cond.false1754, %cond.true1753, %cond.true1736
  %953 = load i8*, i8** %locinput, align 8
  %incdec.ptr1757 = getelementptr inbounds i8, i8* %953, i32 1
  store i8* %incdec.ptr1757, i8** %locinput, align 8
  br label %if.end1758

if.end1758:                                       ; preds = %if.end1756, %if.end1726
  br label %sw.epilog6768

sw.bb1759:                                        ; preds = %cond.end45
  store i32 1, i32* %to_complement, align 4
  br label %sw.bb1760

sw.bb1760:                                        ; preds = %cond.end45, %sw.bb1759
  %954 = load i32, i32* %nextchr, align 4
  %cmp1761 = icmp slt i32 %954, 0
  br i1 %cmp1761, label %if.then1763, label %if.end1764

if.then1763:                                      ; preds = %sw.bb1760
  br label %no

if.end1764:                                       ; preds = %sw.bb1760
  %955 = load i32, i32* %nextchr, align 4
  %conv1765 = sext i32 %955 to i64
  %cmp1766 = icmp ult i64 %conv1765, 128
  br i1 %cmp1766, label %if.then1770, label %lor.lhs.false1768

lor.lhs.false1768:                                ; preds = %if.end1764
  %956 = load i8, i8* %utf8_target, align 1
  %tobool1769 = trunc i8 %956 to i1
  br i1 %tobool1769, label %if.else1780, label %if.then1770

if.then1770:                                      ; preds = %lor.lhs.false1768, %if.end1764
  %957 = load i32, i32* %to_complement, align 4
  %958 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %flags1771 = getelementptr inbounds %struct.regnode, %struct.regnode* %958, i32 0, i32 0
  %959 = load i8, i8* %flags1771, align 2
  %960 = load i32, i32* %nextchr, align 4
  %conv1772 = trunc i32 %960 to i8
  %call1773 = call zeroext i1 @S_isFOO_lc(i8 zeroext %959, i8 zeroext %conv1772)
  %961 = zext i1 %call1773 to i64
  %cond1775 = select i1 %call1773, i32 1, i32 0
  %xor1776 = xor i32 %957, %cond1775
  %tobool1777 = icmp ne i32 %xor1776, 0
  br i1 %tobool1777, label %if.end1779, label %if.then1778

if.then1778:                                      ; preds = %if.then1770
  br label %no

if.end1779:                                       ; preds = %if.then1770
  br label %if.end1804

if.else1780:                                      ; preds = %lor.lhs.false1768
  %962 = load i32, i32* %nextchr, align 4
  %conv1781 = trunc i32 %962 to i8
  %conv1782 = zext i8 %conv1781 to i32
  %and1783 = and i32 %conv1782, 254
  %cmp1784 = icmp eq i32 %and1783, 194
  br i1 %cmp1784, label %if.then1786, label %if.else1802

if.then1786:                                      ; preds = %if.else1780
  %963 = load i32, i32* %to_complement, align 4
  %964 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %flags1787 = getelementptr inbounds %struct.regnode, %struct.regnode* %964, i32 0, i32 0
  %965 = load i8, i8* %flags1787, align 2
  %966 = load i32, i32* %nextchr, align 4
  %and1788 = and i32 %966, 31
  %shl1789 = shl i32 %and1788, 6
  %967 = load i8*, i8** %locinput, align 8
  %add.ptr1790 = getelementptr inbounds i8, i8* %967, i64 1
  %968 = load i8, i8* %add.ptr1790, align 1
  %conv1791 = zext i8 %968 to i32
  %and1792 = and i32 %conv1791, 63
  %or1793 = or i32 %shl1789, %and1792
  %conv1794 = trunc i32 %or1793 to i8
  %call1795 = call zeroext i1 @S_isFOO_lc(i8 zeroext %965, i8 zeroext %conv1794)
  %969 = zext i1 %call1795 to i64
  %cond1797 = select i1 %call1795, i32 1, i32 0
  %xor1798 = xor i32 %963, %cond1797
  %tobool1799 = icmp ne i32 %xor1798, 0
  br i1 %tobool1799, label %if.end1801, label %if.then1800

if.then1800:                                      ; preds = %if.then1786
  br label %no

if.end1801:                                       ; preds = %if.then1786
  br label %if.end1803

if.else1802:                                      ; preds = %if.else1780
  br label %utf8_posix_above_latin1

if.end1803:                                       ; preds = %if.end1801
  br label %if.end1804

if.end1804:                                       ; preds = %if.end1803, %if.end1779
  %970 = load i8*, i8** %locinput, align 8
  %971 = load i8, i8* %970, align 1
  %idxprom1805 = zext i8 %971 to i64
  %arrayidx1806 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom1805
  %972 = load i8, i8* %arrayidx1806, align 1
  %conv1807 = zext i8 %972 to i32
  %973 = load i8*, i8** %locinput, align 8
  %idx.ext1808 = sext i32 %conv1807 to i64
  %add.ptr1809 = getelementptr inbounds i8, i8* %973, i64 %idx.ext1808
  store i8* %add.ptr1809, i8** %locinput, align 8
  br label %sw.epilog6768

sw.bb1810:                                        ; preds = %cond.end45
  store i32 1, i32* %to_complement, align 4
  br label %sw.bb1811

sw.bb1811:                                        ; preds = %cond.end45, %sw.bb1810
  %974 = load i8, i8* %utf8_target, align 1
  %tobool1812 = trunc i8 %974 to i1
  br i1 %tobool1812, label %if.then1813, label %if.end1814

if.then1813:                                      ; preds = %sw.bb1811
  br label %utf8_posix

if.end1814:                                       ; preds = %sw.bb1811
  br label %posixa

sw.bb1815:                                        ; preds = %cond.end45
  %975 = load i32, i32* %nextchr, align 4
  %cmp1816 = icmp slt i32 %975, 0
  br i1 %cmp1816, label %if.then1818, label %if.end1819

if.then1818:                                      ; preds = %sw.bb1815
  br label %no

if.end1819:                                       ; preds = %sw.bb1815
  %976 = load i32, i32* %nextchr, align 4
  %conv1820 = sext i32 %976 to i64
  %cmp1821 = icmp ult i64 %conv1820, 128
  br i1 %cmp1821, label %if.end1824, label %if.then1823

if.then1823:                                      ; preds = %if.end1819
  br label %increment_locinput

if.end1824:                                       ; preds = %if.end1819
  store i32 1, i32* %to_complement, align 4
  br label %sw.bb1825

sw.bb1825:                                        ; preds = %cond.end45, %if.end1824
  br label %posixa

posixa:                                           ; preds = %sw.bb1825, %if.end1814
  %977 = load i32, i32* %nextchr, align 4
  %cmp1826 = icmp slt i32 %977, 0
  br i1 %cmp1826, label %if.then1852, label %lor.lhs.false1828

lor.lhs.false1828:                                ; preds = %posixa
  %978 = load i32, i32* %to_complement, align 4
  %979 = load i32, i32* %nextchr, align 4
  %conv1829 = sext i32 %979 to i64
  %and1830 = and i64 %conv1829, -256
  %tobool1831 = icmp ne i64 %and1830, 0
  br i1 %tobool1831, label %land.end1847, label %land.rhs1832

land.rhs1832:                                     ; preds = %lor.lhs.false1828
  %980 = load i32, i32* %nextchr, align 4
  %conv1833 = trunc i32 %980 to i8
  %idxprom1834 = zext i8 %conv1833 to i64
  %arrayidx1835 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom1834
  %981 = load i32, i32* %arrayidx1835, align 4
  %982 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %flags1836 = getelementptr inbounds %struct.regnode, %struct.regnode* %982, i32 0, i32 0
  %983 = load i8, i8* %flags1836, align 2
  %conv1837 = zext i8 %983 to i32
  %shl1838 = shl i32 1, %conv1837
  %or1839 = or i32 %shl1838, 16384
  %and1840 = and i32 %981, %or1839
  %984 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %flags1841 = getelementptr inbounds %struct.regnode, %struct.regnode* %984, i32 0, i32 0
  %985 = load i8, i8* %flags1841, align 2
  %conv1842 = zext i8 %985 to i32
  %shl1843 = shl i32 1, %conv1842
  %or1844 = or i32 %shl1843, 16384
  %cmp1845 = icmp eq i32 %and1840, %or1844
  br label %land.end1847

land.end1847:                                     ; preds = %land.rhs1832, %lor.lhs.false1828
  %986 = phi i1 [ false, %lor.lhs.false1828 ], [ %cmp1845, %land.rhs1832 ]
  %987 = zext i1 %986 to i64
  %cond1849 = select i1 %986, i32 1, i32 0
  %xor1850 = xor i32 %978, %cond1849
  %tobool1851 = icmp ne i32 %xor1850, 0
  br i1 %tobool1851, label %if.end1853, label %if.then1852

if.then1852:                                      ; preds = %land.end1847, %posixa
  br label %no

if.end1853:                                       ; preds = %land.end1847
  %988 = load i8*, i8** %locinput, align 8
  %incdec.ptr1854 = getelementptr inbounds i8, i8* %988, i32 1
  store i8* %incdec.ptr1854, i8** %locinput, align 8
  br label %sw.epilog6768

sw.bb1855:                                        ; preds = %cond.end45
  store i32 1, i32* %to_complement, align 4
  br label %sw.bb1856

sw.bb1856:                                        ; preds = %cond.end45, %sw.bb1855
  br label %utf8_posix

utf8_posix:                                       ; preds = %sw.bb1856, %if.then1813
  %989 = load i32, i32* %nextchr, align 4
  %cmp1857 = icmp slt i32 %989, 0
  br i1 %cmp1857, label %if.then1859, label %if.end1860

if.then1859:                                      ; preds = %utf8_posix
  br label %no

if.end1860:                                       ; preds = %utf8_posix
  %990 = load i32, i32* %nextchr, align 4
  %conv1861 = sext i32 %990 to i64
  %cmp1862 = icmp ult i64 %conv1861, 128
  br i1 %cmp1862, label %if.then1866, label %lor.lhs.false1864

lor.lhs.false1864:                                ; preds = %if.end1860
  %991 = load i8, i8* %utf8_target, align 1
  %tobool1865 = trunc i8 %991 to i1
  br i1 %tobool1865, label %if.else1889, label %if.then1866

if.then1866:                                      ; preds = %lor.lhs.false1864, %if.end1860
  %992 = load i32, i32* %to_complement, align 4
  %993 = load i32, i32* %nextchr, align 4
  %conv1867 = sext i32 %993 to i64
  %and1868 = and i64 %conv1867, -256
  %tobool1869 = icmp ne i64 %and1868, 0
  br i1 %tobool1869, label %land.end1879, label %land.rhs1870

land.rhs1870:                                     ; preds = %if.then1866
  %994 = load i32, i32* %nextchr, align 4
  %conv1871 = trunc i32 %994 to i8
  %idxprom1872 = zext i8 %conv1871 to i64
  %arrayidx1873 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom1872
  %995 = load i32, i32* %arrayidx1873, align 4
  %996 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %flags1874 = getelementptr inbounds %struct.regnode, %struct.regnode* %996, i32 0, i32 0
  %997 = load i8, i8* %flags1874, align 2
  %conv1875 = zext i8 %997 to i32
  %shl1876 = shl i32 1, %conv1875
  %and1877 = and i32 %995, %shl1876
  %tobool1878 = icmp ne i32 %and1877, 0
  br label %land.end1879

land.end1879:                                     ; preds = %land.rhs1870, %if.then1866
  %998 = phi i1 [ false, %if.then1866 ], [ %tobool1878, %land.rhs1870 ]
  %999 = zext i1 %998 to i64
  %cond1881 = select i1 %998, i32 1, i32 0
  %tobool1882 = icmp ne i32 %cond1881, 0
  %1000 = zext i1 %tobool1882 to i64
  %cond1883 = select i1 %tobool1882, i32 1, i32 0
  %xor1884 = xor i32 %992, %cond1883
  %tobool1885 = icmp ne i32 %xor1884, 0
  br i1 %tobool1885, label %if.end1887, label %if.then1886

if.then1886:                                      ; preds = %land.end1879
  br label %no

if.end1887:                                       ; preds = %land.end1879
  %1001 = load i8*, i8** %locinput, align 8
  %incdec.ptr1888 = getelementptr inbounds i8, i8* %1001, i32 1
  store i8* %incdec.ptr1888, i8** %locinput, align 8
  br label %if.end2230

if.else1889:                                      ; preds = %lor.lhs.false1864
  %1002 = load i32, i32* %nextchr, align 4
  %conv1890 = trunc i32 %1002 to i8
  %conv1891 = zext i8 %conv1890 to i32
  %and1892 = and i32 %conv1891, 254
  %cmp1893 = icmp eq i32 %and1892, 194
  br i1 %cmp1893, label %if.then1895, label %if.else1930

if.then1895:                                      ; preds = %if.else1889
  %1003 = load i32, i32* %to_complement, align 4
  %1004 = load i32, i32* %nextchr, align 4
  %and1896 = and i32 %1004, 31
  %shl1897 = shl i32 %and1896, 6
  %1005 = load i8*, i8** %locinput, align 8
  %add.ptr1898 = getelementptr inbounds i8, i8* %1005, i64 1
  %1006 = load i8, i8* %add.ptr1898, align 1
  %conv1899 = zext i8 %1006 to i32
  %and1900 = and i32 %conv1899, 63
  %or1901 = or i32 %shl1897, %and1900
  %conv1902 = sext i32 %or1901 to i64
  %and1903 = and i64 %conv1902, -256
  %tobool1904 = icmp ne i64 %and1903, 0
  br i1 %tobool1904, label %land.end1920, label %land.rhs1905

land.rhs1905:                                     ; preds = %if.then1895
  %1007 = load i32, i32* %nextchr, align 4
  %and1906 = and i32 %1007, 31
  %shl1907 = shl i32 %and1906, 6
  %1008 = load i8*, i8** %locinput, align 8
  %add.ptr1908 = getelementptr inbounds i8, i8* %1008, i64 1
  %1009 = load i8, i8* %add.ptr1908, align 1
  %conv1909 = zext i8 %1009 to i32
  %and1910 = and i32 %conv1909, 63
  %or1911 = or i32 %shl1907, %and1910
  %conv1912 = trunc i32 %or1911 to i8
  %idxprom1913 = zext i8 %conv1912 to i64
  %arrayidx1914 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom1913
  %1010 = load i32, i32* %arrayidx1914, align 4
  %1011 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %flags1915 = getelementptr inbounds %struct.regnode, %struct.regnode* %1011, i32 0, i32 0
  %1012 = load i8, i8* %flags1915, align 2
  %conv1916 = zext i8 %1012 to i32
  %shl1917 = shl i32 1, %conv1916
  %and1918 = and i32 %1010, %shl1917
  %tobool1919 = icmp ne i32 %and1918, 0
  br label %land.end1920

land.end1920:                                     ; preds = %land.rhs1905, %if.then1895
  %1013 = phi i1 [ false, %if.then1895 ], [ %tobool1919, %land.rhs1905 ]
  %1014 = zext i1 %1013 to i64
  %cond1922 = select i1 %1013, i32 1, i32 0
  %tobool1923 = icmp ne i32 %cond1922, 0
  %1015 = zext i1 %tobool1923 to i64
  %cond1924 = select i1 %tobool1923, i32 1, i32 0
  %xor1925 = xor i32 %1003, %cond1924
  %tobool1926 = icmp ne i32 %xor1925, 0
  br i1 %tobool1926, label %if.end1928, label %if.then1927

if.then1927:                                      ; preds = %land.end1920
  br label %no

if.end1928:                                       ; preds = %land.end1920
  %1016 = load i8*, i8** %locinput, align 8
  %add.ptr1929 = getelementptr inbounds i8, i8* %1016, i64 2
  store i8* %add.ptr1929, i8** %locinput, align 8
  br label %if.end2229

if.else1930:                                      ; preds = %if.else1889
  br label %utf8_posix_above_latin1

utf8_posix_above_latin1:                          ; preds = %if.else1930, %if.else1802
  %1017 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %flags1931 = getelementptr inbounds %struct.regnode, %struct.regnode* %1017, i32 0, i32 0
  %1018 = load i8, i8* %flags1931, align 2
  %conv1932 = zext i8 %1018 to i32
  store i32 %conv1932, i32* %classnum, align 4
  %1019 = load i32, i32* %classnum, align 4
  %cmp1933 = icmp ult i32 %1019, 10
  br i1 %cmp1933, label %if.then1935, label %if.else1956

if.then1935:                                      ; preds = %utf8_posix_above_latin1
  %1020 = load i32, i32* %classnum, align 4
  %idxprom1936 = zext i32 %1020 to i64
  %arrayidx1937 = getelementptr inbounds [10 x %struct.sv*], [10 x %struct.sv*]* @PL_utf8_swash_ptrs, i64 0, i64 %idxprom1936
  %1021 = load %struct.sv*, %struct.sv** %arrayidx1937, align 8
  %tobool1938 = icmp ne %struct.sv* %1021, null
  br i1 %tobool1938, label %if.end1946, label %if.then1939

if.then1939:                                      ; preds = %if.then1935
  store i8 4, i8* %flags1940, align 1
  %1022 = load i32, i32* %classnum, align 4
  %idxprom1941 = zext i32 %1022 to i64
  %arrayidx1942 = getelementptr inbounds [16 x %struct.sv*], [16 x %struct.sv*]* @PL_XPosix_ptrs, i64 0, i64 %idxprom1941
  %1023 = load %struct.sv*, %struct.sv** %arrayidx1942, align 8
  %call1943 = call %struct.sv* @Perl__core_swash_init(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.4, i64 0, i64 0), %struct.sv* @PL_sv_undef, i32 1, i32 0, %struct.sv* %1023, i8* %flags1940)
  %1024 = load i32, i32* %classnum, align 4
  %idxprom1944 = zext i32 %1024 to i64
  %arrayidx1945 = getelementptr inbounds [10 x %struct.sv*], [10 x %struct.sv*]* @PL_utf8_swash_ptrs, i64 0, i64 %idxprom1944
  store %struct.sv* %call1943, %struct.sv** %arrayidx1945, align 8
  br label %if.end1946

if.end1946:                                       ; preds = %if.then1939, %if.then1935
  %1025 = load i32, i32* %to_complement, align 4
  %1026 = load i32, i32* %classnum, align 4
  %idxprom1947 = zext i32 %1026 to i64
  %arrayidx1948 = getelementptr inbounds [10 x %struct.sv*], [10 x %struct.sv*]* @PL_utf8_swash_ptrs, i64 0, i64 %idxprom1947
  %1027 = load %struct.sv*, %struct.sv** %arrayidx1948, align 8
  %1028 = load i8*, i8** %locinput, align 8
  %call1949 = call i64 @Perl_swash_fetch(%struct.sv* %1027, i8* %1028, i1 zeroext true)
  %tobool1950 = icmp ne i64 %call1949, 0
  %1029 = zext i1 %tobool1950 to i64
  %cond1951 = select i1 %tobool1950, i32 1, i32 0
  %xor1952 = xor i32 %1025, %cond1951
  %tobool1953 = icmp ne i32 %xor1952, 0
  br i1 %tobool1953, label %if.end1955, label %if.then1954

if.then1954:                                      ; preds = %if.end1946
  br label %no

if.end1955:                                       ; preds = %if.end1946
  br label %if.end2223

if.else1956:                                      ; preds = %utf8_posix_above_latin1
  %1030 = load i32, i32* %classnum, align 4
  switch i32 %1030, label %sw.default [
    i32 10, label %sw.bb1957
    i32 11, label %sw.bb2046
    i32 12, label %sw.bb2129
    i32 15, label %sw.bb2194
  ]

sw.bb1957:                                        ; preds = %if.else1956
  %1031 = load i32, i32* %to_complement, align 4
  %1032 = load i8*, i8** %locinput, align 8
  %arrayidx1958 = getelementptr inbounds i8, i8* %1032, i64 0
  %1033 = load i8, i8* %arrayidx1958, align 1
  %conv1959 = zext i8 %1033 to i32
  %cmp1960 = icmp eq i32 225, %conv1959
  br i1 %cmp1960, label %cond.true1962, label %cond.false1975

cond.true1962:                                    ; preds = %sw.bb1957
  %1034 = load i8*, i8** %locinput, align 8
  %arrayidx1963 = getelementptr inbounds i8, i8* %1034, i64 1
  %1035 = load i8, i8* %arrayidx1963, align 1
  %conv1964 = zext i8 %1035 to i32
  %cmp1965 = icmp eq i32 154, %conv1964
  br i1 %cmp1965, label %land.rhs1967, label %land.end1972

land.rhs1967:                                     ; preds = %cond.true1962
  %1036 = load i8*, i8** %locinput, align 8
  %arrayidx1968 = getelementptr inbounds i8, i8* %1036, i64 2
  %1037 = load i8, i8* %arrayidx1968, align 1
  %conv1969 = zext i8 %1037 to i32
  %cmp1970 = icmp eq i32 128, %conv1969
  br label %land.end1972

land.end1972:                                     ; preds = %land.rhs1967, %cond.true1962
  %1038 = phi i1 [ false, %cond.true1962 ], [ %cmp1970, %land.rhs1967 ]
  %1039 = zext i1 %1038 to i64
  %cond1974 = select i1 %1038, i32 3, i32 0
  br label %cond.end2038

cond.false1975:                                   ; preds = %sw.bb1957
  %1040 = load i8*, i8** %locinput, align 8
  %arrayidx1976 = getelementptr inbounds i8, i8* %1040, i64 0
  %1041 = load i8, i8* %arrayidx1976, align 1
  %conv1977 = zext i8 %1041 to i32
  %cmp1978 = icmp eq i32 226, %conv1977
  br i1 %cmp1978, label %cond.true1980, label %cond.false2018

cond.true1980:                                    ; preds = %cond.false1975
  %1042 = load i8*, i8** %locinput, align 8
  %arrayidx1981 = getelementptr inbounds i8, i8* %1042, i64 1
  %1043 = load i8, i8* %arrayidx1981, align 1
  %conv1982 = zext i8 %1043 to i32
  %cmp1983 = icmp eq i32 128, %conv1982
  br i1 %cmp1983, label %cond.true1985, label %cond.false2003

cond.true1985:                                    ; preds = %cond.true1980
  %1044 = load i8*, i8** %locinput, align 8
  %arrayidx1986 = getelementptr inbounds i8, i8* %1044, i64 2
  %1045 = load i8, i8* %arrayidx1986, align 1
  %conv1987 = zext i8 %1045 to i32
  %cmp1988 = icmp sle i32 %conv1987, 138
  br i1 %cmp1988, label %lor.end2001, label %lor.lhs.false1990

lor.lhs.false1990:                                ; preds = %cond.true1985
  %1046 = load i8*, i8** %locinput, align 8
  %arrayidx1991 = getelementptr inbounds i8, i8* %1046, i64 2
  %1047 = load i8, i8* %arrayidx1991, align 1
  %conv1992 = zext i8 %1047 to i32
  %and1993 = and i32 %conv1992, 254
  %cmp1994 = icmp eq i32 %and1993, 168
  br i1 %cmp1994, label %lor.end2001, label %lor.rhs1996

lor.rhs1996:                                      ; preds = %lor.lhs.false1990
  %1048 = load i8*, i8** %locinput, align 8
  %arrayidx1997 = getelementptr inbounds i8, i8* %1048, i64 2
  %1049 = load i8, i8* %arrayidx1997, align 1
  %conv1998 = zext i8 %1049 to i32
  %cmp1999 = icmp eq i32 175, %conv1998
  br label %lor.end2001

lor.end2001:                                      ; preds = %lor.rhs1996, %lor.lhs.false1990, %cond.true1985
  %1050 = phi i1 [ true, %lor.lhs.false1990 ], [ true, %cond.true1985 ], [ %cmp1999, %lor.rhs1996 ]
  %1051 = zext i1 %1050 to i64
  %cond2002 = select i1 %1050, i32 3, i32 0
  br label %cond.end2016

cond.false2003:                                   ; preds = %cond.true1980
  %1052 = load i8*, i8** %locinput, align 8
  %arrayidx2004 = getelementptr inbounds i8, i8* %1052, i64 1
  %1053 = load i8, i8* %arrayidx2004, align 1
  %conv2005 = zext i8 %1053 to i32
  %cmp2006 = icmp eq i32 129, %conv2005
  br i1 %cmp2006, label %land.rhs2008, label %land.end2013

land.rhs2008:                                     ; preds = %cond.false2003
  %1054 = load i8*, i8** %locinput, align 8
  %arrayidx2009 = getelementptr inbounds i8, i8* %1054, i64 2
  %1055 = load i8, i8* %arrayidx2009, align 1
  %conv2010 = zext i8 %1055 to i32
  %cmp2011 = icmp eq i32 159, %conv2010
  br label %land.end2013

land.end2013:                                     ; preds = %land.rhs2008, %cond.false2003
  %1056 = phi i1 [ false, %cond.false2003 ], [ %cmp2011, %land.rhs2008 ]
  %1057 = zext i1 %1056 to i64
  %cond2015 = select i1 %1056, i32 3, i32 0
  br label %cond.end2016

cond.end2016:                                     ; preds = %land.end2013, %lor.end2001
  %cond2017 = phi i32 [ %cond2002, %lor.end2001 ], [ %cond2015, %land.end2013 ]
  br label %cond.end2036

cond.false2018:                                   ; preds = %cond.false1975
  %1058 = load i8*, i8** %locinput, align 8
  %arrayidx2019 = getelementptr inbounds i8, i8* %1058, i64 0
  %1059 = load i8, i8* %arrayidx2019, align 1
  %conv2020 = zext i8 %1059 to i32
  %cmp2021 = icmp eq i32 227, %conv2020
  br i1 %cmp2021, label %land.lhs.true2023, label %land.end2033

land.lhs.true2023:                                ; preds = %cond.false2018
  %1060 = load i8*, i8** %locinput, align 8
  %arrayidx2024 = getelementptr inbounds i8, i8* %1060, i64 1
  %1061 = load i8, i8* %arrayidx2024, align 1
  %conv2025 = zext i8 %1061 to i32
  %cmp2026 = icmp eq i32 128, %conv2025
  br i1 %cmp2026, label %land.rhs2028, label %land.end2033

land.rhs2028:                                     ; preds = %land.lhs.true2023
  %1062 = load i8*, i8** %locinput, align 8
  %arrayidx2029 = getelementptr inbounds i8, i8* %1062, i64 2
  %1063 = load i8, i8* %arrayidx2029, align 1
  %conv2030 = zext i8 %1063 to i32
  %cmp2031 = icmp eq i32 128, %conv2030
  br label %land.end2033

land.end2033:                                     ; preds = %land.rhs2028, %land.lhs.true2023, %cond.false2018
  %1064 = phi i1 [ false, %land.lhs.true2023 ], [ false, %cond.false2018 ], [ %cmp2031, %land.rhs2028 ]
  %1065 = zext i1 %1064 to i64
  %cond2035 = select i1 %1064, i32 3, i32 0
  br label %cond.end2036

cond.end2036:                                     ; preds = %land.end2033, %cond.end2016
  %cond2037 = phi i32 [ %cond2017, %cond.end2016 ], [ %cond2035, %land.end2033 ]
  br label %cond.end2038

cond.end2038:                                     ; preds = %cond.end2036, %land.end1972
  %cond2039 = phi i32 [ %cond1974, %land.end1972 ], [ %cond2037, %cond.end2036 ]
  %tobool2040 = icmp ne i32 %cond2039, 0
  %1066 = zext i1 %tobool2040 to i64
  %cond2041 = select i1 %tobool2040, i32 1, i32 0
  %xor2042 = xor i32 %1031, %cond2041
  %tobool2043 = icmp ne i32 %xor2042, 0
  br i1 %tobool2043, label %if.end2045, label %if.then2044

if.then2044:                                      ; preds = %cond.end2038
  br label %no

if.end2045:                                       ; preds = %cond.end2038
  br label %sw.epilog2222

sw.bb2046:                                        ; preds = %if.else1956
  %1067 = load i32, i32* %to_complement, align 4
  %1068 = load i8*, i8** %locinput, align 8
  %arrayidx2047 = getelementptr inbounds i8, i8* %1068, i64 0
  %1069 = load i8, i8* %arrayidx2047, align 1
  %conv2048 = zext i8 %1069 to i32
  %cmp2049 = icmp eq i32 225, %conv2048
  br i1 %cmp2049, label %cond.true2051, label %cond.false2064

cond.true2051:                                    ; preds = %sw.bb2046
  %1070 = load i8*, i8** %locinput, align 8
  %arrayidx2052 = getelementptr inbounds i8, i8* %1070, i64 1
  %1071 = load i8, i8* %arrayidx2052, align 1
  %conv2053 = zext i8 %1071 to i32
  %cmp2054 = icmp eq i32 154, %conv2053
  br i1 %cmp2054, label %land.rhs2056, label %land.end2061

land.rhs2056:                                     ; preds = %cond.true2051
  %1072 = load i8*, i8** %locinput, align 8
  %arrayidx2057 = getelementptr inbounds i8, i8* %1072, i64 2
  %1073 = load i8, i8* %arrayidx2057, align 1
  %conv2058 = zext i8 %1073 to i32
  %cmp2059 = icmp eq i32 128, %conv2058
  br label %land.end2061

land.end2061:                                     ; preds = %land.rhs2056, %cond.true2051
  %1074 = phi i1 [ false, %cond.true2051 ], [ %cmp2059, %land.rhs2056 ]
  %1075 = zext i1 %1074 to i64
  %cond2063 = select i1 %1074, i32 3, i32 0
  br label %cond.end2121

cond.false2064:                                   ; preds = %sw.bb2046
  %1076 = load i8*, i8** %locinput, align 8
  %arrayidx2065 = getelementptr inbounds i8, i8* %1076, i64 0
  %1077 = load i8, i8* %arrayidx2065, align 1
  %conv2066 = zext i8 %1077 to i32
  %cmp2067 = icmp eq i32 226, %conv2066
  br i1 %cmp2067, label %cond.true2069, label %cond.false2101

cond.true2069:                                    ; preds = %cond.false2064
  %1078 = load i8*, i8** %locinput, align 8
  %arrayidx2070 = getelementptr inbounds i8, i8* %1078, i64 1
  %1079 = load i8, i8* %arrayidx2070, align 1
  %conv2071 = zext i8 %1079 to i32
  %cmp2072 = icmp eq i32 128, %conv2071
  br i1 %cmp2072, label %cond.true2074, label %cond.false2086

cond.true2074:                                    ; preds = %cond.true2069
  %1080 = load i8*, i8** %locinput, align 8
  %arrayidx2075 = getelementptr inbounds i8, i8* %1080, i64 2
  %1081 = load i8, i8* %arrayidx2075, align 1
  %conv2076 = zext i8 %1081 to i32
  %cmp2077 = icmp sle i32 %conv2076, 138
  br i1 %cmp2077, label %lor.end2084, label %lor.rhs2079

lor.rhs2079:                                      ; preds = %cond.true2074
  %1082 = load i8*, i8** %locinput, align 8
  %arrayidx2080 = getelementptr inbounds i8, i8* %1082, i64 2
  %1083 = load i8, i8* %arrayidx2080, align 1
  %conv2081 = zext i8 %1083 to i32
  %cmp2082 = icmp eq i32 175, %conv2081
  br label %lor.end2084

lor.end2084:                                      ; preds = %lor.rhs2079, %cond.true2074
  %1084 = phi i1 [ true, %cond.true2074 ], [ %cmp2082, %lor.rhs2079 ]
  %1085 = zext i1 %1084 to i64
  %cond2085 = select i1 %1084, i32 3, i32 0
  br label %cond.end2099

cond.false2086:                                   ; preds = %cond.true2069
  %1086 = load i8*, i8** %locinput, align 8
  %arrayidx2087 = getelementptr inbounds i8, i8* %1086, i64 1
  %1087 = load i8, i8* %arrayidx2087, align 1
  %conv2088 = zext i8 %1087 to i32
  %cmp2089 = icmp eq i32 129, %conv2088
  br i1 %cmp2089, label %land.rhs2091, label %land.end2096

land.rhs2091:                                     ; preds = %cond.false2086
  %1088 = load i8*, i8** %locinput, align 8
  %arrayidx2092 = getelementptr inbounds i8, i8* %1088, i64 2
  %1089 = load i8, i8* %arrayidx2092, align 1
  %conv2093 = zext i8 %1089 to i32
  %cmp2094 = icmp eq i32 159, %conv2093
  br label %land.end2096

land.end2096:                                     ; preds = %land.rhs2091, %cond.false2086
  %1090 = phi i1 [ false, %cond.false2086 ], [ %cmp2094, %land.rhs2091 ]
  %1091 = zext i1 %1090 to i64
  %cond2098 = select i1 %1090, i32 3, i32 0
  br label %cond.end2099

cond.end2099:                                     ; preds = %land.end2096, %lor.end2084
  %cond2100 = phi i32 [ %cond2085, %lor.end2084 ], [ %cond2098, %land.end2096 ]
  br label %cond.end2119

cond.false2101:                                   ; preds = %cond.false2064
  %1092 = load i8*, i8** %locinput, align 8
  %arrayidx2102 = getelementptr inbounds i8, i8* %1092, i64 0
  %1093 = load i8, i8* %arrayidx2102, align 1
  %conv2103 = zext i8 %1093 to i32
  %cmp2104 = icmp eq i32 227, %conv2103
  br i1 %cmp2104, label %land.lhs.true2106, label %land.end2116

land.lhs.true2106:                                ; preds = %cond.false2101
  %1094 = load i8*, i8** %locinput, align 8
  %arrayidx2107 = getelementptr inbounds i8, i8* %1094, i64 1
  %1095 = load i8, i8* %arrayidx2107, align 1
  %conv2108 = zext i8 %1095 to i32
  %cmp2109 = icmp eq i32 128, %conv2108
  br i1 %cmp2109, label %land.rhs2111, label %land.end2116

land.rhs2111:                                     ; preds = %land.lhs.true2106
  %1096 = load i8*, i8** %locinput, align 8
  %arrayidx2112 = getelementptr inbounds i8, i8* %1096, i64 2
  %1097 = load i8, i8* %arrayidx2112, align 1
  %conv2113 = zext i8 %1097 to i32
  %cmp2114 = icmp eq i32 128, %conv2113
  br label %land.end2116

land.end2116:                                     ; preds = %land.rhs2111, %land.lhs.true2106, %cond.false2101
  %1098 = phi i1 [ false, %land.lhs.true2106 ], [ false, %cond.false2101 ], [ %cmp2114, %land.rhs2111 ]
  %1099 = zext i1 %1098 to i64
  %cond2118 = select i1 %1098, i32 3, i32 0
  br label %cond.end2119

cond.end2119:                                     ; preds = %land.end2116, %cond.end2099
  %cond2120 = phi i32 [ %cond2100, %cond.end2099 ], [ %cond2118, %land.end2116 ]
  br label %cond.end2121

cond.end2121:                                     ; preds = %cond.end2119, %land.end2061
  %cond2122 = phi i32 [ %cond2063, %land.end2061 ], [ %cond2120, %cond.end2119 ]
  %tobool2123 = icmp ne i32 %cond2122, 0
  %1100 = zext i1 %tobool2123 to i64
  %cond2124 = select i1 %tobool2123, i32 1, i32 0
  %xor2125 = xor i32 %1067, %cond2124
  %tobool2126 = icmp ne i32 %xor2125, 0
  br i1 %tobool2126, label %if.end2128, label %if.then2127

if.then2127:                                      ; preds = %cond.end2121
  br label %no

if.end2128:                                       ; preds = %cond.end2121
  br label %sw.epilog2222

sw.bb2129:                                        ; preds = %if.else1956
  %1101 = load i32, i32* %to_complement, align 4
  %1102 = load i8*, i8** %locinput, align 8
  %arrayidx2130 = getelementptr inbounds i8, i8* %1102, i64 0
  %1103 = load i8, i8* %arrayidx2130, align 1
  %conv2131 = zext i8 %1103 to i32
  %cmp2132 = icmp eq i32 239, %conv2131
  br i1 %cmp2132, label %cond.true2134, label %cond.false2185

cond.true2134:                                    ; preds = %sw.bb2129
  %1104 = load i8*, i8** %locinput, align 8
  %arrayidx2135 = getelementptr inbounds i8, i8* %1104, i64 1
  %1105 = load i8, i8* %arrayidx2135, align 1
  %conv2136 = zext i8 %1105 to i32
  %cmp2137 = icmp eq i32 188, %conv2136
  br i1 %cmp2137, label %cond.true2139, label %cond.false2163

cond.true2139:                                    ; preds = %cond.true2134
  %1106 = load i8*, i8** %locinput, align 8
  %arrayidx2140 = getelementptr inbounds i8, i8* %1106, i64 2
  %1107 = load i8, i8* %arrayidx2140, align 1
  %conv2141 = zext i8 %1107 to i32
  %cmp2142 = icmp sle i32 144, %conv2141
  br i1 %cmp2142, label %land.lhs.true2144, label %lor.rhs2149

land.lhs.true2144:                                ; preds = %cond.true2139
  %1108 = load i8*, i8** %locinput, align 8
  %arrayidx2145 = getelementptr inbounds i8, i8* %1108, i64 2
  %1109 = load i8, i8* %arrayidx2145, align 1
  %conv2146 = zext i8 %1109 to i32
  %cmp2147 = icmp sle i32 %conv2146, 153
  br i1 %cmp2147, label %lor.end2161, label %lor.rhs2149

lor.rhs2149:                                      ; preds = %land.lhs.true2144, %cond.true2139
  %1110 = load i8*, i8** %locinput, align 8
  %arrayidx2150 = getelementptr inbounds i8, i8* %1110, i64 2
  %1111 = load i8, i8* %arrayidx2150, align 1
  %conv2151 = zext i8 %1111 to i32
  %cmp2152 = icmp sle i32 161, %conv2151
  br i1 %cmp2152, label %land.rhs2154, label %land.end2159

land.rhs2154:                                     ; preds = %lor.rhs2149
  %1112 = load i8*, i8** %locinput, align 8
  %arrayidx2155 = getelementptr inbounds i8, i8* %1112, i64 2
  %1113 = load i8, i8* %arrayidx2155, align 1
  %conv2156 = zext i8 %1113 to i32
  %cmp2157 = icmp sle i32 %conv2156, 166
  br label %land.end2159

land.end2159:                                     ; preds = %land.rhs2154, %lor.rhs2149
  %1114 = phi i1 [ false, %lor.rhs2149 ], [ %cmp2157, %land.rhs2154 ]
  br label %lor.end2161

lor.end2161:                                      ; preds = %land.end2159, %land.lhs.true2144
  %1115 = phi i1 [ true, %land.lhs.true2144 ], [ %1114, %land.end2159 ]
  %1116 = zext i1 %1115 to i64
  %cond2162 = select i1 %1115, i32 3, i32 0
  br label %cond.end2183

cond.false2163:                                   ; preds = %cond.true2134
  %1117 = load i8*, i8** %locinput, align 8
  %arrayidx2164 = getelementptr inbounds i8, i8* %1117, i64 1
  %1118 = load i8, i8* %arrayidx2164, align 1
  %conv2165 = zext i8 %1118 to i32
  %cmp2166 = icmp eq i32 189, %conv2165
  br i1 %cmp2166, label %land.rhs2168, label %land.end2180

land.rhs2168:                                     ; preds = %cond.false2163
  %1119 = load i8*, i8** %locinput, align 8
  %arrayidx2169 = getelementptr inbounds i8, i8* %1119, i64 2
  %1120 = load i8, i8* %arrayidx2169, align 1
  %conv2170 = zext i8 %1120 to i32
  %cmp2171 = icmp sle i32 129, %conv2170
  br i1 %cmp2171, label %land.rhs2173, label %land.end2178

land.rhs2173:                                     ; preds = %land.rhs2168
  %1121 = load i8*, i8** %locinput, align 8
  %arrayidx2174 = getelementptr inbounds i8, i8* %1121, i64 2
  %1122 = load i8, i8* %arrayidx2174, align 1
  %conv2175 = zext i8 %1122 to i32
  %cmp2176 = icmp sle i32 %conv2175, 134
  br label %land.end2178

land.end2178:                                     ; preds = %land.rhs2173, %land.rhs2168
  %1123 = phi i1 [ false, %land.rhs2168 ], [ %cmp2176, %land.rhs2173 ]
  br label %land.end2180

land.end2180:                                     ; preds = %land.end2178, %cond.false2163
  %1124 = phi i1 [ false, %cond.false2163 ], [ %1123, %land.end2178 ]
  %1125 = zext i1 %1124 to i64
  %cond2182 = select i1 %1124, i32 3, i32 0
  br label %cond.end2183

cond.end2183:                                     ; preds = %land.end2180, %lor.end2161
  %cond2184 = phi i32 [ %cond2162, %lor.end2161 ], [ %cond2182, %land.end2180 ]
  br label %cond.end2186

cond.false2185:                                   ; preds = %sw.bb2129
  br label %cond.end2186

cond.end2186:                                     ; preds = %cond.false2185, %cond.end2183
  %cond2187 = phi i32 [ %cond2184, %cond.end2183 ], [ 0, %cond.false2185 ]
  %tobool2188 = icmp ne i32 %cond2187, 0
  %1126 = zext i1 %tobool2188 to i64
  %cond2189 = select i1 %tobool2188, i32 1, i32 0
  %xor2190 = xor i32 %1101, %cond2189
  %tobool2191 = icmp ne i32 %xor2190, 0
  br i1 %tobool2191, label %if.end2193, label %if.then2192

if.then2192:                                      ; preds = %cond.end2186
  br label %no

if.end2193:                                       ; preds = %cond.end2186
  br label %sw.epilog2222

sw.bb2194:                                        ; preds = %if.else1956
  %1127 = load i32, i32* %to_complement, align 4
  %1128 = load i8*, i8** %locinput, align 8
  %arrayidx2195 = getelementptr inbounds i8, i8* %1128, i64 0
  %1129 = load i8, i8* %arrayidx2195, align 1
  %conv2196 = zext i8 %1129 to i32
  %cmp2197 = icmp eq i32 226, %conv2196
  br i1 %cmp2197, label %land.lhs.true2199, label %land.end2210

land.lhs.true2199:                                ; preds = %sw.bb2194
  %1130 = load i8*, i8** %locinput, align 8
  %arrayidx2200 = getelementptr inbounds i8, i8* %1130, i64 1
  %1131 = load i8, i8* %arrayidx2200, align 1
  %conv2201 = zext i8 %1131 to i32
  %cmp2202 = icmp eq i32 128, %conv2201
  br i1 %cmp2202, label %land.rhs2204, label %land.end2210

land.rhs2204:                                     ; preds = %land.lhs.true2199
  %1132 = load i8*, i8** %locinput, align 8
  %arrayidx2205 = getelementptr inbounds i8, i8* %1132, i64 2
  %1133 = load i8, i8* %arrayidx2205, align 1
  %conv2206 = zext i8 %1133 to i32
  %and2207 = and i32 %conv2206, 254
  %cmp2208 = icmp eq i32 %and2207, 168
  br label %land.end2210

land.end2210:                                     ; preds = %land.rhs2204, %land.lhs.true2199, %sw.bb2194
  %1134 = phi i1 [ false, %land.lhs.true2199 ], [ false, %sw.bb2194 ], [ %cmp2208, %land.rhs2204 ]
  %1135 = zext i1 %1134 to i64
  %cond2212 = select i1 %1134, i32 3, i32 0
  %tobool2213 = icmp ne i32 %cond2212, 0
  %1136 = zext i1 %tobool2213 to i64
  %cond2214 = select i1 %tobool2213, i32 1, i32 0
  %xor2215 = xor i32 %1127, %cond2214
  %tobool2216 = icmp ne i32 %xor2215, 0
  br i1 %tobool2216, label %if.end2218, label %if.then2217

if.then2217:                                      ; preds = %land.end2210
  br label %no

if.end2218:                                       ; preds = %land.end2210
  br label %sw.epilog2222

sw.default:                                       ; preds = %if.else1956
  %1137 = load i32, i32* %to_complement, align 4
  %tobool2219 = icmp ne i32 %1137, 0
  br i1 %tobool2219, label %if.end2221, label %if.then2220

if.then2220:                                      ; preds = %sw.default
  br label %no

if.end2221:                                       ; preds = %sw.default
  br label %sw.epilog2222

sw.epilog2222:                                    ; preds = %if.end2221, %if.end2218, %if.end2193, %if.end2128, %if.end2045
  br label %if.end2223

if.end2223:                                       ; preds = %sw.epilog2222, %if.end1955
  %1138 = load i8*, i8** %locinput, align 8
  %1139 = load i8, i8* %1138, align 1
  %idxprom2224 = zext i8 %1139 to i64
  %arrayidx2225 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom2224
  %1140 = load i8, i8* %arrayidx2225, align 1
  %conv2226 = zext i8 %1140 to i32
  %1141 = load i8*, i8** %locinput, align 8
  %idx.ext2227 = sext i32 %conv2226 to i64
  %add.ptr2228 = getelementptr inbounds i8, i8* %1141, i64 %idx.ext2227
  store i8* %add.ptr2228, i8** %locinput, align 8
  br label %if.end2229

if.end2229:                                       ; preds = %if.end2223, %if.end1928
  br label %if.end2230

if.end2230:                                       ; preds = %if.end2229, %if.end1887
  br label %sw.epilog6768

sw.bb2231:                                        ; preds = %cond.end45
  %1142 = load i32, i32* %nextchr, align 4
  %cmp2232 = icmp slt i32 %1142, 0
  br i1 %cmp2232, label %if.then2234, label %if.end2235

if.then2234:                                      ; preds = %sw.bb2231
  br label %no

if.end2235:                                       ; preds = %sw.bb2231
  %1143 = load i8, i8* %utf8_target, align 1
  %tobool2236 = trunc i8 %1143 to i1
  br i1 %tobool2236, label %if.else2252, label %if.then2237

if.then2237:                                      ; preds = %if.end2235
  %1144 = load i8*, i8** %locinput, align 8
  %incdec.ptr2238 = getelementptr inbounds i8, i8* %1144, i32 1
  store i8* %incdec.ptr2238, i8** %locinput, align 8
  %1145 = load i32, i32* %nextchr, align 4
  %cmp2239 = icmp eq i32 %1145, 13
  br i1 %cmp2239, label %land.lhs.true2241, label %if.end2251

land.lhs.true2241:                                ; preds = %if.then2237
  %1146 = load i8*, i8** %locinput, align 8
  %1147 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend2242 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %1147, i32 0, i32 2
  %1148 = load i8*, i8** %strend2242, align 8
  %cmp2243 = icmp ult i8* %1146, %1148
  br i1 %cmp2243, label %land.lhs.true2245, label %if.end2251

land.lhs.true2245:                                ; preds = %land.lhs.true2241
  %1149 = load i8*, i8** %locinput, align 8
  %1150 = load i8, i8* %1149, align 1
  %conv2246 = zext i8 %1150 to i32
  %cmp2247 = icmp eq i32 %conv2246, 10
  br i1 %cmp2247, label %if.then2249, label %if.end2251

if.then2249:                                      ; preds = %land.lhs.true2245
  %1151 = load i8*, i8** %locinput, align 8
  %incdec.ptr2250 = getelementptr inbounds i8, i8* %1151, i32 1
  store i8* %incdec.ptr2250, i8** %locinput, align 8
  br label %if.end2251

if.end2251:                                       ; preds = %if.then2249, %land.lhs.true2245, %land.lhs.true2241, %if.then2237
  br label %if.end2292

if.else2252:                                      ; preds = %if.end2235
  %1152 = load %struct.sv*, %struct.sv** @PL_GCB_invlist, align 8
  %1153 = load i8*, i8** %locinput, align 8
  %1154 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend2253 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %1154, i32 0, i32 2
  %1155 = load i8*, i8** %strend2253, align 8
  %1156 = load i8*, i8** %locinput, align 8
  %sub.ptr.lhs.cast2254 = ptrtoint i8* %1155 to i64
  %sub.ptr.rhs.cast2255 = ptrtoint i8* %1156 to i64
  %sub.ptr.sub2256 = sub i64 %sub.ptr.lhs.cast2254, %sub.ptr.rhs.cast2255
  %call2257 = call zeroext i1 @Perl_ckwarn_d(i32 44)
  %1157 = zext i1 %call2257 to i64
  %cond2259 = select i1 %call2257, i32 0, i32 -8161
  %call2260 = call i64 @Perl_utf8n_to_uvchr(i8* %1153, i64 %sub.ptr.sub2256, i64* null, i32 %cond2259)
  %call2261 = call i64 @Perl__invlist_search(%struct.sv* %1152, i64 %call2260)
  %arrayidx2262 = getelementptr inbounds [1484 x i32], [1484 x i32]* @Grapheme_Cluster_Break_invmap, i64 0, i64 %call2261
  %1158 = load i32, i32* %arrayidx2262, align 4
  store i32 %1158, i32* %prev_gcb, align 4
  %1159 = load i8*, i8** %locinput, align 8
  %1160 = load i8, i8* %1159, align 1
  %idxprom2263 = zext i8 %1160 to i64
  %arrayidx2264 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom2263
  %1161 = load i8, i8* %arrayidx2264, align 1
  %conv2265 = zext i8 %1161 to i32
  %1162 = load i8*, i8** %locinput, align 8
  %idx.ext2266 = sext i32 %conv2265 to i64
  %add.ptr2267 = getelementptr inbounds i8, i8* %1162, i64 %idx.ext2266
  store i8* %add.ptr2267, i8** %locinput, align 8
  br label %while.cond2268

while.cond2268:                                   ; preds = %if.end2285, %if.else2252
  %1163 = load i8*, i8** %locinput, align 8
  %1164 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend2269 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %1164, i32 0, i32 2
  %1165 = load i8*, i8** %strend2269, align 8
  %cmp2270 = icmp ult i8* %1163, %1165
  br i1 %cmp2270, label %while.body2272, label %while.end2291

while.body2272:                                   ; preds = %while.cond2268
  %1166 = load %struct.sv*, %struct.sv** @PL_GCB_invlist, align 8
  %1167 = load i8*, i8** %locinput, align 8
  %1168 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend2273 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %1168, i32 0, i32 2
  %1169 = load i8*, i8** %strend2273, align 8
  %1170 = load i8*, i8** %locinput, align 8
  %sub.ptr.lhs.cast2274 = ptrtoint i8* %1169 to i64
  %sub.ptr.rhs.cast2275 = ptrtoint i8* %1170 to i64
  %sub.ptr.sub2276 = sub i64 %sub.ptr.lhs.cast2274, %sub.ptr.rhs.cast2275
  %call2277 = call zeroext i1 @Perl_ckwarn_d(i32 44)
  %1171 = zext i1 %call2277 to i64
  %cond2279 = select i1 %call2277, i32 0, i32 -8161
  %call2280 = call i64 @Perl_utf8n_to_uvchr(i8* %1167, i64 %sub.ptr.sub2276, i64* null, i32 %cond2279)
  %call2281 = call i64 @Perl__invlist_search(%struct.sv* %1166, i64 %call2280)
  %arrayidx2282 = getelementptr inbounds [1484 x i32], [1484 x i32]* @Grapheme_Cluster_Break_invmap, i64 0, i64 %call2281
  %1172 = load i32, i32* %arrayidx2282, align 4
  store i32 %1172, i32* %cur_gcb, align 4
  %1173 = load i32, i32* %prev_gcb, align 4
  %1174 = load i32, i32* %cur_gcb, align 4
  %call2283 = call zeroext i1 @S_isGCB(i32 %1173, i32 %1174)
  br i1 %call2283, label %if.then2284, label %if.end2285

if.then2284:                                      ; preds = %while.body2272
  br label %while.end2291

if.end2285:                                       ; preds = %while.body2272
  %1175 = load i32, i32* %cur_gcb, align 4
  store i32 %1175, i32* %prev_gcb, align 4
  %1176 = load i8*, i8** %locinput, align 8
  %1177 = load i8, i8* %1176, align 1
  %idxprom2286 = zext i8 %1177 to i64
  %arrayidx2287 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom2286
  %1178 = load i8, i8* %arrayidx2287, align 1
  %conv2288 = zext i8 %1178 to i32
  %1179 = load i8*, i8** %locinput, align 8
  %idx.ext2289 = sext i32 %conv2288 to i64
  %add.ptr2290 = getelementptr inbounds i8, i8* %1179, i64 %idx.ext2289
  store i8* %add.ptr2290, i8** %locinput, align 8
  br label %while.cond2268

while.end2291:                                    ; preds = %if.then2284, %while.cond2268
  br label %if.end2292

if.end2292:                                       ; preds = %while.end2291, %if.end2251
  br label %sw.epilog6768

sw.bb2293:                                        ; preds = %cond.end45
  store i32 (i8*, i8*, i32)* @Perl_foldEQ_locale, i32 (i8*, i8*, i32)** %folder2296, align 8
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @PL_fold_locale, i64 0, i64 0), i8** %fold_array2297, align 8
  store i8 53, i8* %type2295, align 1
  store i64 2, i64* %utf8_fold_flags, align 8
  br label %do_nref

sw.bb2298:                                        ; preds = %cond.end45
  store i32 (i8*, i8*, i32)* @Perl_foldEQ_latin1, i32 (i8*, i8*, i32)** %folder2296, align 8
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @PL_fold_latin1, i64 0, i64 0), i8** %fold_array2297, align 8
  store i8 55, i8* %type2295, align 1
  store i64 1, i64* %utf8_fold_flags, align 8
  br label %do_nref

sw.bb2299:                                        ; preds = %cond.end45
  store i32 (i8*, i8*, i32)* @Perl_foldEQ_latin1, i32 (i8*, i8*, i32)** %folder2296, align 8
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @PL_fold_latin1, i64 0, i64 0), i8** %fold_array2297, align 8
  store i8 54, i8* %type2295, align 1
  store i64 0, i64* %utf8_fold_flags, align 8
  br label %do_nref

sw.bb2300:                                        ; preds = %cond.end45
  store i32 (i8*, i8*, i32)* @Perl_foldEQ, i32 (i8*, i8*, i32)** %folder2296, align 8
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @PL_fold, i64 0, i64 0), i8** %fold_array2297, align 8
  store i8 52, i8* %type2295, align 1
  store i64 0, i64* %utf8_fold_flags, align 8
  br label %do_nref

sw.bb2301:                                        ; preds = %cond.end45
  store i8 51, i8* %type2295, align 1
  store i32 (i8*, i8*, i32)* null, i32 (i8*, i8*, i32)** %folder2296, align 8
  store i8* null, i8** %fold_array2297, align 8
  store i64 0, i64* %utf8_fold_flags, align 8
  br label %do_nref

do_nref:                                          ; preds = %sw.bb2301, %sw.bb2300, %sw.bb2299, %sw.bb2298, %sw.bb2293
  %1180 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %1181 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %call2302 = call i32 @S_reg_check_named_buff_matched(%struct.regexp* %1180, %struct.regnode* %1181)
  store i32 %call2302, i32* %n, align 4
  %1182 = load i32, i32* %n, align 4
  %tobool2303 = icmp ne i32 %1182, 0
  br i1 %tobool2303, label %if.end2305, label %if.then2304

if.then2304:                                      ; preds = %do_nref
  br label %no

if.end2305:                                       ; preds = %do_nref
  br label %do_nref_ref_common

sw.bb2306:                                        ; preds = %cond.end45
  store i32 (i8*, i8*, i32)* @Perl_foldEQ_locale, i32 (i8*, i8*, i32)** %folder2296, align 8
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @PL_fold_locale, i64 0, i64 0), i8** %fold_array2297, align 8
  store i64 2, i64* %utf8_fold_flags, align 8
  br label %do_ref

sw.bb2307:                                        ; preds = %cond.end45
  store i32 (i8*, i8*, i32)* @Perl_foldEQ_latin1, i32 (i8*, i8*, i32)** %folder2296, align 8
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @PL_fold_latin1, i64 0, i64 0), i8** %fold_array2297, align 8
  store i64 1, i64* %utf8_fold_flags, align 8
  br label %do_ref

sw.bb2308:                                        ; preds = %cond.end45
  store i32 (i8*, i8*, i32)* @Perl_foldEQ_latin1, i32 (i8*, i8*, i32)** %folder2296, align 8
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @PL_fold_latin1, i64 0, i64 0), i8** %fold_array2297, align 8
  store i64 0, i64* %utf8_fold_flags, align 8
  br label %do_ref

sw.bb2309:                                        ; preds = %cond.end45
  store i32 (i8*, i8*, i32)* @Perl_foldEQ, i32 (i8*, i8*, i32)** %folder2296, align 8
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @PL_fold, i64 0, i64 0), i8** %fold_array2297, align 8
  store i64 0, i64* %utf8_fold_flags, align 8
  br label %do_ref

sw.bb2310:                                        ; preds = %cond.end45
  store i32 (i8*, i8*, i32)* null, i32 (i8*, i8*, i32)** %folder2296, align 8
  store i8* null, i8** %fold_array2297, align 8
  store i64 0, i64* %utf8_fold_flags, align 8
  br label %do_ref

do_ref:                                           ; preds = %sw.bb2310, %sw.bb2309, %sw.bb2308, %sw.bb2307, %sw.bb2306
  %1183 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %type2311 = getelementptr inbounds %struct.regnode, %struct.regnode* %1183, i32 0, i32 1
  %1184 = load i8, i8* %type2311, align 1
  store i8 %1184, i8* %type2295, align 1
  %1185 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %1186 = bitcast %struct.regnode* %1185 to %struct.regnode_1*
  %arg12312 = getelementptr inbounds %struct.regnode_1, %struct.regnode_1* %1186, i32 0, i32 3
  %1187 = load i32, i32* %arg12312, align 4
  store i32 %1187, i32* %n, align 4
  br label %do_nref_ref_common

do_nref_ref_common:                               ; preds = %do_ref, %if.end2305
  %1188 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %offs2313 = getelementptr inbounds %struct.regexp, %struct.regexp* %1188, i32 0, i32 17
  %1189 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %offs2313, align 8
  %1190 = load i32, i32* %n, align 4
  %idxprom2314 = zext i32 %1190 to i64
  %arrayidx2315 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %1189, i64 %idxprom2314
  %start2316 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %arrayidx2315, i32 0, i32 0
  %1191 = load i64, i64* %start2316, align 8
  store i64 %1191, i64* %ln, align 8
  %1192 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %poscache_maxiter = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %1192, i32 0, i32 9
  %1193 = load i32, i32* %poscache_maxiter, align 8
  %1194 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %poscache_iter = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %1194, i32 0, i32 10
  store i32 %1193, i32* %poscache_iter, align 4
  %1195 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %lastparen2317 = getelementptr inbounds %struct.regexp, %struct.regexp* %1195, i32 0, i32 15
  %1196 = load i32, i32* %lastparen2317, align 8
  %1197 = load i32, i32* %n, align 4
  %cmp2318 = icmp ult i32 %1196, %1197
  br i1 %cmp2318, label %if.then2323, label %lor.lhs.false2320

lor.lhs.false2320:                                ; preds = %do_nref_ref_common
  %1198 = load i64, i64* %ln, align 8
  %cmp2321 = icmp eq i64 %1198, -1
  br i1 %cmp2321, label %if.then2323, label %if.end2324

if.then2323:                                      ; preds = %lor.lhs.false2320, %do_nref_ref_common
  br label %no

if.end2324:                                       ; preds = %lor.lhs.false2320
  %1199 = load i64, i64* %ln, align 8
  %1200 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %offs2325 = getelementptr inbounds %struct.regexp, %struct.regexp* %1200, i32 0, i32 17
  %1201 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %offs2325, align 8
  %1202 = load i32, i32* %n, align 4
  %idxprom2326 = zext i32 %1202 to i64
  %arrayidx2327 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %1201, i64 %idxprom2326
  %end2328 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %arrayidx2327, i32 0, i32 1
  %1203 = load i64, i64* %end2328, align 8
  %cmp2329 = icmp eq i64 %1199, %1203
  br i1 %cmp2329, label %if.then2331, label %if.end2332

if.then2331:                                      ; preds = %if.end2324
  br label %sw.epilog6768

if.end2332:                                       ; preds = %if.end2324
  %1204 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg2333 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %1204, i32 0, i32 1
  %1205 = load i8*, i8** %strbeg2333, align 8
  %1206 = load i64, i64* %ln, align 8
  %add.ptr2334 = getelementptr inbounds i8, i8* %1205, i64 %1206
  store i8* %add.ptr2334, i8** %s2294, align 8
  %1207 = load i8, i8* %type2295, align 1
  %conv2335 = sext i8 %1207 to i32
  %cmp2336 = icmp ne i32 %conv2335, 51
  br i1 %cmp2336, label %land.lhs.true2338, label %if.end2363

land.lhs.true2338:                                ; preds = %if.end2332
  %1208 = load i8, i8* %utf8_target, align 1
  %tobool2339 = trunc i8 %1208 to i1
  br i1 %tobool2339, label %if.then2349, label %lor.lhs.false2341

lor.lhs.false2341:                                ; preds = %land.lhs.true2338
  %1209 = load i8, i8* %type2295, align 1
  %conv2342 = sext i8 %1209 to i32
  %cmp2343 = icmp eq i32 %conv2342, 54
  br i1 %cmp2343, label %if.then2349, label %lor.lhs.false2345

lor.lhs.false2345:                                ; preds = %lor.lhs.false2341
  %1210 = load i8, i8* %type2295, align 1
  %conv2346 = sext i8 %1210 to i32
  %cmp2347 = icmp eq i32 %conv2346, 53
  br i1 %cmp2347, label %if.then2349, label %if.end2363

if.then2349:                                      ; preds = %lor.lhs.false2345, %lor.lhs.false2341, %land.lhs.true2338
  %1211 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend2350 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %1211, i32 0, i32 2
  %1212 = load i8*, i8** %strend2350, align 8
  store i8* %1212, i8** %limit, align 8
  %1213 = load i8*, i8** %s2294, align 8
  %1214 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %offs2351 = getelementptr inbounds %struct.regexp, %struct.regexp* %1214, i32 0, i32 17
  %1215 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %offs2351, align 8
  %1216 = load i32, i32* %n, align 4
  %idxprom2352 = zext i32 %1216 to i64
  %arrayidx2353 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %1215, i64 %idxprom2352
  %end2354 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %arrayidx2353, i32 0, i32 1
  %1217 = load i64, i64* %end2354, align 8
  %1218 = load i64, i64* %ln, align 8
  %sub2355 = sub nsw i64 %1217, %1218
  %1219 = load i8, i8* %utf8_target, align 1
  %tobool2356 = trunc i8 %1219 to i1
  %1220 = load i8*, i8** %locinput, align 8
  %1221 = load i8, i8* %utf8_target, align 1
  %tobool2357 = trunc i8 %1221 to i1
  %1222 = load i64, i64* %utf8_fold_flags, align 8
  %conv2358 = trunc i64 %1222 to i32
  %call2359 = call i32 @Perl_foldEQ_utf8_flags(i8* %1213, i8** null, i64 %sub2355, i1 zeroext %tobool2356, i8* %1220, i8** %limit, i64 0, i1 zeroext %tobool2357, i32 %conv2358)
  %tobool2360 = icmp ne i32 %call2359, 0
  br i1 %tobool2360, label %if.end2362, label %if.then2361

if.then2361:                                      ; preds = %if.then2349
  br label %no

if.end2362:                                       ; preds = %if.then2349
  %1223 = load i8*, i8** %limit, align 8
  store i8* %1223, i8** %locinput, align 8
  br label %sw.epilog6768

if.end2363:                                       ; preds = %lor.lhs.false2345, %if.end2332
  %1224 = load i32, i32* %nextchr, align 4
  %cmp2364 = icmp slt i32 %1224, 0
  br i1 %cmp2364, label %if.end2382, label %land.lhs.true2366

land.lhs.true2366:                                ; preds = %if.end2363
  %1225 = load i8*, i8** %s2294, align 8
  %1226 = load i8, i8* %1225, align 1
  %conv2367 = zext i8 %1226 to i32
  %1227 = load i32, i32* %nextchr, align 4
  %cmp2368 = icmp ne i32 %conv2367, %1227
  br i1 %cmp2368, label %land.lhs.true2370, label %if.end2382

land.lhs.true2370:                                ; preds = %land.lhs.true2366
  %1228 = load i8, i8* %type2295, align 1
  %conv2371 = sext i8 %1228 to i32
  %cmp2372 = icmp eq i32 %conv2371, 51
  br i1 %cmp2372, label %if.then2381, label %lor.lhs.false2374

lor.lhs.false2374:                                ; preds = %land.lhs.true2370
  %1229 = load i8*, i8** %s2294, align 8
  %1230 = load i8, i8* %1229, align 1
  %conv2375 = zext i8 %1230 to i32
  %1231 = load i8*, i8** %fold_array2297, align 8
  %1232 = load i32, i32* %nextchr, align 4
  %idxprom2376 = sext i32 %1232 to i64
  %arrayidx2377 = getelementptr inbounds i8, i8* %1231, i64 %idxprom2376
  %1233 = load i8, i8* %arrayidx2377, align 1
  %conv2378 = zext i8 %1233 to i32
  %cmp2379 = icmp ne i32 %conv2375, %conv2378
  br i1 %cmp2379, label %if.then2381, label %if.end2382

if.then2381:                                      ; preds = %lor.lhs.false2374, %land.lhs.true2370
  br label %no

if.end2382:                                       ; preds = %lor.lhs.false2374, %land.lhs.true2366, %if.end2363
  %1234 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %offs2383 = getelementptr inbounds %struct.regexp, %struct.regexp* %1234, i32 0, i32 17
  %1235 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %offs2383, align 8
  %1236 = load i32, i32* %n, align 4
  %idxprom2384 = zext i32 %1236 to i64
  %arrayidx2385 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %1235, i64 %idxprom2384
  %end2386 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %arrayidx2385, i32 0, i32 1
  %1237 = load i64, i64* %end2386, align 8
  %1238 = load i64, i64* %ln, align 8
  %sub2387 = sub nsw i64 %1237, %1238
  store i64 %sub2387, i64* %ln, align 8
  %1239 = load i8*, i8** %locinput, align 8
  %1240 = load i64, i64* %ln, align 8
  %add.ptr2388 = getelementptr inbounds i8, i8* %1239, i64 %1240
  %1241 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend2389 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %1241, i32 0, i32 2
  %1242 = load i8*, i8** %strend2389, align 8
  %cmp2390 = icmp ugt i8* %add.ptr2388, %1242
  br i1 %cmp2390, label %if.then2392, label %if.end2393

if.then2392:                                      ; preds = %if.end2382
  br label %no

if.end2393:                                       ; preds = %if.end2382
  %1243 = load i64, i64* %ln, align 8
  %cmp2394 = icmp sgt i64 %1243, 1
  br i1 %cmp2394, label %land.lhs.true2396, label %if.end2408

land.lhs.true2396:                                ; preds = %if.end2393
  %1244 = load i8, i8* %type2295, align 1
  %conv2397 = sext i8 %1244 to i32
  %cmp2398 = icmp eq i32 %conv2397, 51
  br i1 %cmp2398, label %cond.true2400, label %cond.false2403

cond.true2400:                                    ; preds = %land.lhs.true2396
  %1245 = load i8*, i8** %s2294, align 8
  %1246 = load i8*, i8** %locinput, align 8
  %1247 = load i64, i64* %ln, align 8
  %call2401 = call i32 @memcmp(i8* %1245, i8* %1246, i64 %1247) #5
  %tobool2402 = icmp ne i32 %call2401, 0
  br i1 %tobool2402, label %if.then2407, label %if.end2408

cond.false2403:                                   ; preds = %land.lhs.true2396
  %1248 = load i32 (i8*, i8*, i32)*, i32 (i8*, i8*, i32)** %folder2296, align 8
  %1249 = load i8*, i8** %s2294, align 8
  %1250 = load i8*, i8** %locinput, align 8
  %1251 = load i64, i64* %ln, align 8
  %conv2404 = trunc i64 %1251 to i32
  %call2405 = call i32 %1248(i8* %1249, i8* %1250, i32 %conv2404)
  %tobool2406 = icmp ne i32 %call2405, 0
  br i1 %tobool2406, label %if.end2408, label %if.then2407

if.then2407:                                      ; preds = %cond.false2403, %cond.true2400
  br label %no

if.end2408:                                       ; preds = %cond.false2403, %cond.true2400, %if.end2393
  %1252 = load i64, i64* %ln, align 8
  %1253 = load i8*, i8** %locinput, align 8
  %add.ptr2409 = getelementptr inbounds i8, i8* %1253, i64 %1252
  store i8* %add.ptr2409, i8** %locinput, align 8
  br label %sw.epilog6768

sw.bb2410:                                        ; preds = %cond.end45
  br label %sw.epilog6768

sw.bb2411:                                        ; preds = %cond.end45
  br label %sw.epilog6768

sw.bb2413:                                        ; preds = %cond.end45, %cond.end45
  %1254 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_eval, align 8
  %tobool2414 = icmp ne %struct.regmatch_state* %1254, null
  br i1 %tobool2414, label %land.lhs.true2415, label %if.else2431

land.lhs.true2415:                                ; preds = %sw.bb2413
  %1255 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_eval, align 8
  %locinput2416 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %1255, i32 0, i32 1
  %1256 = load i8*, i8** %locinput2416, align 8
  %1257 = load i8*, i8** %locinput, align 8
  %cmp2417 = icmp eq i8* %1256, %1257
  br i1 %cmp2417, label %if.then2419, label %if.else2431

if.then2419:                                      ; preds = %land.lhs.true2415
  %1258 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_eval, align 8
  %u2420 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %1258, i32 0, i32 2
  %eval = bitcast %union.anon.19* %u2420 to %struct.anon.24*
  %close_paren = getelementptr inbounds %struct.anon.24, %struct.anon.24* %eval, i32 0, i32 6
  %1259 = load i32, i32* %close_paren, align 8
  %1260 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %1261 = bitcast %struct.regnode* %1260 to %struct.regnode_1*
  %arg12421 = getelementptr inbounds %struct.regnode_1, %struct.regnode_1* %1261, i32 0, i32 3
  %1262 = load i32, i32* %arg12421, align 4
  %cmp2422 = icmp eq i32 %1259, %1262
  br i1 %cmp2422, label %if.then2424, label %if.end2425

if.then2424:                                      ; preds = %if.then2419
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.10, i64 0, i64 0))
  br label %if.end2425

if.end2425:                                       ; preds = %if.then2424, %if.then2419
  %1263 = load i32, i32* %nochange_depth, align 4
  %inc2426 = add i32 %1263, 1
  store i32 %inc2426, i32* %nochange_depth, align 4
  %1264 = load i32, i32* %max_nochange_depth, align 4
  %cmp2427 = icmp ugt i32 %inc2426, %1264
  br i1 %cmp2427, label %if.then2429, label %if.end2430

if.then2429:                                      ; preds = %if.end2425
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.11, i64 0, i64 0))
  br label %if.end2430

if.end2430:                                       ; preds = %if.then2429, %if.end2425
  br label %if.end2432

if.else2431:                                      ; preds = %land.lhs.true2415, %sw.bb2413
  store i32 0, i32* %nochange_depth, align 4
  br label %if.end2432

if.end2432:                                       ; preds = %if.else2431, %if.end2430
  %1265 = load %struct.p5rx*, %struct.p5rx** %rex_sv, align 8
  store %struct.p5rx* %1265, %struct.p5rx** %re_sv, align 8
  %1266 = load %struct.regexp*, %struct.regexp** %rex, align 8
  store %struct.regexp* %1266, %struct.regexp** %re, align 8
  %1267 = load %struct.regexp_internal*, %struct.regexp_internal** %rexi, align 8
  store %struct.regexp_internal* %1267, %struct.regexp_internal** %rei, align 8
  %1268 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %type2433 = getelementptr inbounds %struct.regnode, %struct.regnode* %1268, i32 0, i32 1
  %1269 = load i8, i8* %type2433, align 1
  %conv2434 = zext i8 %1269 to i32
  %cmp2435 = icmp eq i32 %conv2434, 76
  br i1 %cmp2435, label %if.then2437, label %if.else2444

if.then2437:                                      ; preds = %if.end2432
  %1270 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %1271 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %1272 = bitcast %struct.regnode* %1271 to %struct.regnode_2L*
  %arg2 = getelementptr inbounds %struct.regnode_2L, %struct.regnode_2L* %1272, i32 0, i32 4
  %1273 = load i32, i32* %arg2, align 4
  %idx.ext2438 = sext i32 %1273 to i64
  %add.ptr2439 = getelementptr inbounds %struct.regnode, %struct.regnode* %1270, i64 %idx.ext2438
  store %struct.regnode* %add.ptr2439, %struct.regnode** %startpoint2412, align 8
  %1274 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %1275 = bitcast %struct.regnode* %1274 to %struct.regnode_1*
  %arg12440 = getelementptr inbounds %struct.regnode_1, %struct.regnode_1* %1275, i32 0, i32 3
  %1276 = load i32, i32* %arg12440, align 4
  %1277 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u2441 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %1277, i32 0, i32 2
  %eval2442 = bitcast %union.anon.19* %u2441 to %struct.anon.24*
  %close_paren2443 = getelementptr inbounds %struct.anon.24, %struct.anon.24* %eval2442, i32 0, i32 6
  store i32 %1276, i32* %close_paren2443, align 8
  br label %if.end2450

if.else2444:                                      ; preds = %if.end2432
  %1278 = load %struct.regexp_internal*, %struct.regexp_internal** %rei, align 8
  %program = getelementptr inbounds %struct.regexp_internal, %struct.regexp_internal* %1278, i32 0, i32 6
  %arraydecay2445 = getelementptr inbounds [1 x %struct.regnode], [1 x %struct.regnode]* %program, i64 0, i64 0
  %add.ptr2446 = getelementptr inbounds %struct.regnode, %struct.regnode* %arraydecay2445, i64 1
  store %struct.regnode* %add.ptr2446, %struct.regnode** %startpoint2412, align 8
  %1279 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u2447 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %1279, i32 0, i32 2
  %eval2448 = bitcast %union.anon.19* %u2447 to %struct.anon.24*
  %close_paren2449 = getelementptr inbounds %struct.anon.24, %struct.anon.24* %eval2448, i32 0, i32 6
  store i32 0, i32* %close_paren2449, align 8
  br label %if.end2450

if.end2450:                                       ; preds = %if.else2444, %if.then2437
  %1280 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %1281 = load i32, i32* %maxopenparen, align 4
  %call2451 = call i32 @S_regcppush(%struct.regexp* %1280, i32 0, i32 %1281)
  %1282 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u2452 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %1282, i32 0, i32 2
  %eval2453 = bitcast %union.anon.19* %u2452 to %struct.anon.24*
  %cp2454 = getelementptr inbounds %struct.anon.24, %struct.anon.24* %eval2453, i32 0, i32 4
  store i32 %call2451, i32* %cp2454, align 8
  %1283 = load i32, i32* @PL_savestack_ix, align 4
  %1284 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u2455 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %1284, i32 0, i32 2
  %eval2456 = bitcast %union.anon.19* %u2455 to %struct.anon.24*
  %lastcp = getelementptr inbounds %struct.anon.24, %struct.anon.24* %eval2456, i32 0, i32 5
  store i32 %1283, i32* %lastcp, align 4
  br label %eval_recurse_doit

sw.bb2457:                                        ; preds = %cond.end45
  %1285 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_eval, align 8
  %tobool2458 = icmp ne %struct.regmatch_state* %1285, null
  br i1 %tobool2458, label %land.lhs.true2459, label %if.else2469

land.lhs.true2459:                                ; preds = %sw.bb2457
  %1286 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_eval, align 8
  %locinput2460 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %1286, i32 0, i32 1
  %1287 = load i8*, i8** %locinput2460, align 8
  %1288 = load i8*, i8** %locinput, align 8
  %cmp2461 = icmp eq i8* %1287, %1288
  br i1 %cmp2461, label %if.then2463, label %if.else2469

if.then2463:                                      ; preds = %land.lhs.true2459
  %1289 = load i32, i32* %nochange_depth, align 4
  %inc2464 = add i32 %1289, 1
  store i32 %inc2464, i32* %nochange_depth, align 4
  %1290 = load i32, i32* %max_nochange_depth, align 4
  %cmp2465 = icmp ugt i32 %inc2464, %1290
  br i1 %cmp2465, label %if.then2467, label %if.end2468

if.then2467:                                      ; preds = %if.then2463
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.12, i64 0, i64 0))
  br label %if.end2468

if.end2468:                                       ; preds = %if.then2467, %if.then2463
  br label %if.end2470

if.else2469:                                      ; preds = %land.lhs.true2459, %sw.bb2457
  store i32 0, i32* %nochange_depth, align 4
  br label %if.end2470

if.end2470:                                       ; preds = %if.else2469, %if.end2468
  %1291 = load %struct.sv**, %struct.sv*** @PL_stack_sp, align 8
  store %struct.sv** %1291, %struct.sv*** %sp, align 8
  %1292 = load %struct.op*, %struct.op** @PL_op, align 8
  store %struct.op* %1292, %struct.op** %oop, align 8
  %1293 = load %struct.cop*, %struct.cop** @PL_curcop, align 8
  store %struct.cop* %1293, %struct.cop** %ocurcop, align 8
  %1294 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %1295 = load i32, i32* %maxopenparen, align 4
  %call2471 = call i32 @S_regcppush(%struct.regexp* %1294, i32 0, i32 %1295)
  %1296 = load i32, i32* @PL_savestack_ix, align 4
  store i32 %1296, i32* %runops_cp, align 4
  %1297 = load %struct.cv*, %struct.cv** %caller_cv, align 8
  %tobool2472 = icmp ne %struct.cv* %1297, null
  br i1 %tobool2472, label %if.end2475, label %if.then2473

if.then2473:                                      ; preds = %if.end2470
  %call2474 = call %struct.cv* @Perl_find_runcv(i32* null)
  store %struct.cv* %call2474, %struct.cv** %caller_cv, align 8
  br label %if.end2475

if.end2475:                                       ; preds = %if.then2473, %if.end2470
  %1298 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %1299 = bitcast %struct.regnode* %1298 to %struct.regnode_1*
  %arg12476 = getelementptr inbounds %struct.regnode_1, %struct.regnode_1* %1299, i32 0, i32 3
  %1300 = load i32, i32* %arg12476, align 4
  store i32 %1300, i32* %n, align 4
  %1301 = load %struct.regexp_internal*, %struct.regexp_internal** %rexi, align 8
  %data2477 = getelementptr inbounds %struct.regexp_internal, %struct.regexp_internal* %1301, i32 0, i32 3
  %1302 = load %struct.reg_data*, %struct.reg_data** %data2477, align 8
  %what = getelementptr inbounds %struct.reg_data, %struct.reg_data* %1302, i32 0, i32 1
  %1303 = load i8*, i8** %what, align 8
  %1304 = load i32, i32* %n, align 4
  %idxprom2478 = zext i32 %1304 to i64
  %arrayidx2479 = getelementptr inbounds i8, i8* %1303, i64 %idxprom2478
  %1305 = load i8, i8* %arrayidx2479, align 1
  %conv2480 = zext i8 %1305 to i32
  %cmp2481 = icmp eq i32 %conv2480, 114
  br i1 %cmp2481, label %if.then2483, label %if.else2494

if.then2483:                                      ; preds = %if.end2475
  %1306 = load %struct.regexp_internal*, %struct.regexp_internal** %rexi, align 8
  %data2484 = getelementptr inbounds %struct.regexp_internal, %struct.regexp_internal* %1306, i32 0, i32 3
  %1307 = load %struct.reg_data*, %struct.reg_data** %data2484, align 8
  %data2485 = getelementptr inbounds %struct.reg_data, %struct.reg_data* %1307, i32 0, i32 2
  %1308 = load i32, i32* %n, align 4
  %idxprom2486 = zext i32 %1308 to i64
  %arrayidx2487 = getelementptr inbounds [1 x i8*], [1 x i8*]* %data2485, i64 0, i64 %idxprom2486
  %1309 = load i8*, i8** %arrayidx2487, align 8
  %1310 = bitcast i8* %1309 to %struct.p5rx*
  %call2488 = call %struct.regexp* @S_ReANY(%struct.p5rx* %1310)
  %qr_anoncv = getelementptr inbounds %struct.regexp, %struct.regexp* %call2488, i32 0, i32 25
  %1311 = load %struct.cv*, %struct.cv** %qr_anoncv, align 8
  store %struct.cv* %1311, %struct.cv** %newcv, align 8
  %1312 = load %struct.regexp_internal*, %struct.regexp_internal** %rexi, align 8
  %data2489 = getelementptr inbounds %struct.regexp_internal, %struct.regexp_internal* %1312, i32 0, i32 3
  %1313 = load %struct.reg_data*, %struct.reg_data** %data2489, align 8
  %data2490 = getelementptr inbounds %struct.reg_data, %struct.reg_data* %1313, i32 0, i32 2
  %1314 = load i32, i32* %n, align 4
  %add2491 = add i32 %1314, 1
  %idxprom2492 = zext i32 %add2491 to i64
  %arrayidx2493 = getelementptr inbounds [1 x i8*], [1 x i8*]* %data2490, i64 0, i64 %idxprom2492
  %1315 = load i8*, i8** %arrayidx2493, align 8
  %1316 = bitcast i8* %1315 to %struct.op*
  store %struct.op* %1316, %struct.op** %nop, align 8
  br label %if.end2514

if.else2494:                                      ; preds = %if.end2475
  %1317 = load %struct.regexp_internal*, %struct.regexp_internal** %rexi, align 8
  %data2495 = getelementptr inbounds %struct.regexp_internal, %struct.regexp_internal* %1317, i32 0, i32 3
  %1318 = load %struct.reg_data*, %struct.reg_data** %data2495, align 8
  %what2496 = getelementptr inbounds %struct.reg_data, %struct.reg_data* %1318, i32 0, i32 1
  %1319 = load i8*, i8** %what2496, align 8
  %1320 = load i32, i32* %n, align 4
  %idxprom2497 = zext i32 %1320 to i64
  %arrayidx2498 = getelementptr inbounds i8, i8* %1319, i64 %idxprom2497
  %1321 = load i8, i8* %arrayidx2498, align 1
  %conv2499 = zext i8 %1321 to i32
  %cmp2500 = icmp eq i32 %conv2499, 108
  br i1 %cmp2500, label %if.then2502, label %if.else2507

if.then2502:                                      ; preds = %if.else2494
  %1322 = load %struct.cv*, %struct.cv** %caller_cv, align 8
  store %struct.cv* %1322, %struct.cv** %newcv, align 8
  %1323 = load %struct.regexp_internal*, %struct.regexp_internal** %rexi, align 8
  %data2503 = getelementptr inbounds %struct.regexp_internal, %struct.regexp_internal* %1323, i32 0, i32 3
  %1324 = load %struct.reg_data*, %struct.reg_data** %data2503, align 8
  %data2504 = getelementptr inbounds %struct.reg_data, %struct.reg_data* %1324, i32 0, i32 2
  %1325 = load i32, i32* %n, align 4
  %idxprom2505 = zext i32 %1325 to i64
  %arrayidx2506 = getelementptr inbounds [1 x i8*], [1 x i8*]* %data2504, i64 0, i64 %idxprom2505
  %1326 = load i8*, i8** %arrayidx2506, align 8
  %1327 = bitcast i8* %1326 to %struct.op*
  store %struct.op* %1327, %struct.op** %nop, align 8
  br label %if.end2513

if.else2507:                                      ; preds = %if.else2494
  %1328 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %qr_anoncv2508 = getelementptr inbounds %struct.regexp, %struct.regexp* %1328, i32 0, i32 25
  %1329 = load %struct.cv*, %struct.cv** %qr_anoncv2508, align 8
  store %struct.cv* %1329, %struct.cv** %newcv, align 8
  %1330 = load %struct.regexp_internal*, %struct.regexp_internal** %rexi, align 8
  %data2509 = getelementptr inbounds %struct.regexp_internal, %struct.regexp_internal* %1330, i32 0, i32 3
  %1331 = load %struct.reg_data*, %struct.reg_data** %data2509, align 8
  %data2510 = getelementptr inbounds %struct.reg_data, %struct.reg_data* %1331, i32 0, i32 2
  %1332 = load i32, i32* %n, align 4
  %idxprom2511 = zext i32 %1332 to i64
  %arrayidx2512 = getelementptr inbounds [1 x i8*], [1 x i8*]* %data2510, i64 0, i64 %idxprom2511
  %1333 = load i8*, i8** %arrayidx2512, align 8
  %1334 = bitcast i8* %1333 to %struct.op*
  store %struct.op* %1334, %struct.op** %nop, align 8
  br label %if.end2513

if.end2513:                                       ; preds = %if.else2507, %if.then2502
  br label %if.end2514

if.end2514:                                       ; preds = %if.end2513, %if.then2483
  %1335 = load %struct.cv*, %struct.cv** %newcv, align 8
  %1336 = load %struct.cv*, %struct.cv** %last_pushed_cv, align 8
  %cmp2515 = icmp ne %struct.cv* %1335, %1336
  br i1 %cmp2515, label %if.then2520, label %lor.lhs.false2517

lor.lhs.false2517:                                ; preds = %if.end2514
  %1337 = load %struct.av*, %struct.av** @PL_comppad, align 8
  %1338 = load %struct.av*, %struct.av** %last_pad, align 8
  %cmp2518 = icmp ne %struct.av* %1337, %1338
  br i1 %cmp2518, label %if.then2520, label %if.else2792

if.then2520:                                      ; preds = %lor.lhs.false2517, %if.end2514
  %1339 = load %struct.cv*, %struct.cv** %newcv, align 8
  %1340 = load %struct.cv*, %struct.cv** %caller_cv, align 8
  %cmp2522 = icmp eq %struct.cv* %1339, %1340
  %1341 = zext i1 %cmp2522 to i64
  %cond2524 = select i1 %cmp2522, i32 128, i32 0
  %or2525 = or i32 64, %cond2524
  %conv2526 = trunc i32 %or2525 to i8
  store i8 %conv2526, i8* %flags2521, align 1
  %1342 = load %struct.cv*, %struct.cv** %last_pushed_cv, align 8
  %tobool2527 = icmp ne %struct.cv* %1342, null
  br i1 %tobool2527, label %if.then2528, label %if.else2620

if.then2528:                                      ; preds = %if.then2520
  br label %do.body2529

do.body2529:                                      ; preds = %if.then2528
  %1343 = load %struct.cv*, %struct.cv** %newcv, align 8
  store %struct.cv* %1343, %struct.cv** %_nOnclAshIngNamE_, align 8
  %1344 = load %struct.cv*, %struct.cv** %_nOnclAshIngNamE_, align 8
  store %struct.cv* %1344, %struct.cv** %cv, align 8
  %1345 = load %struct.cv*, %struct.cv** %cv, align 8
  %sv_any2530 = getelementptr inbounds %struct.cv, %struct.cv* %1345, i32 0, i32 0
  %1346 = load %struct.xpvcv*, %struct.xpvcv** %sv_any2530, align 8
  %1347 = bitcast %struct.xpvcv* %1346 to i8*
  %1348 = bitcast i8* %1347 to %struct.xpvcv*
  %xcv_padlist_u = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %1348, i32 0, i32 9
  %xcv_padlist = bitcast %union.anon.13* %xcv_padlist_u to %struct.padlist**
  %1349 = load %struct.padlist*, %struct.padlist** %xcv_padlist, align 8
  store %struct.padlist* %1349, %struct.padlist** %padlist, align 8
  %1350 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxstack = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %1350, i32 0, i32 1
  %1351 = load %struct.context*, %struct.context** %si_cxstack, align 8
  %1352 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxix = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %1352, i32 0, i32 4
  %1353 = load i32, i32* %si_cxix, align 8
  %idxprom2531 = sext i32 %1353 to i64
  %arrayidx2532 = getelementptr inbounds %struct.context, %struct.context* %1351, i64 %idxprom2531
  store %struct.context* %arrayidx2532, %struct.context** %cx, align 8
  %1354 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u = getelementptr inbounds %struct.context, %struct.context* %1354, i32 0, i32 0
  %cx_blk = bitcast %union.anon.37* %cx_u to %struct.block*
  %blk_u = getelementptr inbounds %struct.block, %struct.block* %cx_blk, i32 0, i32 8
  %blku_sub = bitcast %union.anon.38* %blk_u to %struct.block_sub*
  %olddepth = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub, i32 0, i32 4
  %1355 = load i32, i32* %olddepth, align 8
  %1356 = load %struct.cv*, %struct.cv** %multicall_cv, align 8
  %call2533 = call i32* @S_CvDEPTHp(%struct.cv* %1356)
  store i32 %1355, i32* %call2533, align 4
  %tobool2534 = icmp ne i32 %1355, 0
  br i1 %tobool2534, label %if.end2538, label %if.then2535

if.then2535:                                      ; preds = %do.body2529
  br label %do.body2536

do.body2536:                                      ; preds = %if.then2535
  %1357 = load %struct.cv*, %struct.cv** %multicall_cv, align 8
  %1358 = bitcast %struct.cv* %1357 to i8*
  %1359 = bitcast i8* %1358 to %struct.sv*
  call void @S_SvREFCNT_dec(%struct.sv* %1359)
  br label %do.end2537

do.end2537:                                       ; preds = %do.body2536
  br label %if.end2538

if.end2538:                                       ; preds = %do.end2537, %do.body2529
  %1360 = load i8, i8* %flags2521, align 1
  %conv2539 = zext i8 %1360 to i32
  %or2540 = or i32 24, %conv2539
  %conv2541 = trunc i32 %or2540 to i8
  %1361 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u2542 = getelementptr inbounds %struct.context, %struct.context* %1361, i32 0, i32 0
  %cx_subst = bitcast %union.anon.37* %cx_u2542 to %struct.subst*
  %sbu_type = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst, i32 0, i32 0
  store i8 %conv2541, i8* %sbu_type, align 8
  %1362 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_flags = getelementptr inbounds %struct.op, %struct.op* %1362, i32 0, i32 5
  %1363 = load i8, i8* %op_flags, align 2
  %conv2543 = zext i8 %1363 to i32
  %and2544 = and i32 %conv2543, 3
  %tobool2545 = icmp ne i32 %and2544, 0
  br i1 %tobool2545, label %cond.true2546, label %cond.false2547

cond.true2546:                                    ; preds = %if.end2538
  br label %cond.end2558

cond.false2547:                                   ; preds = %if.end2538
  %1364 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_private = getelementptr inbounds %struct.op, %struct.op* %1364, i32 0, i32 6
  %1365 = load i8, i8* %op_private, align 1
  %conv2548 = zext i8 %1365 to i32
  %and2549 = and i32 %conv2548, 129
  %tobool2550 = icmp ne i32 %and2549, 0
  br i1 %tobool2550, label %cond.false2552, label %cond.true2551

cond.true2551:                                    ; preds = %cond.false2547
  br label %cond.end2556

cond.false2552:                                   ; preds = %cond.false2547
  %call2553 = call i32 @Perl_was_lvalue_sub()
  %conv2554 = trunc i32 %call2553 to i8
  %conv2555 = zext i8 %conv2554 to i32
  br label %cond.end2556

cond.end2556:                                     ; preds = %cond.false2552, %cond.true2551
  %cond2557 = phi i32 [ 0, %cond.true2551 ], [ %conv2555, %cond.false2552 ]
  br label %cond.end2558

cond.end2558:                                     ; preds = %cond.end2556, %cond.true2546
  %cond2559 = phi i32 [ 129, %cond.true2546 ], [ %cond2557, %cond.end2556 ]
  %conv2560 = trunc i32 %cond2559 to i8
  store i8 %conv2560, i8* %phlags, align 1
  %1366 = load %struct.cv*, %struct.cv** %cv, align 8
  %1367 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u2561 = getelementptr inbounds %struct.context, %struct.context* %1367, i32 0, i32 0
  %cx_blk2562 = bitcast %union.anon.37* %cx_u2561 to %struct.block*
  %blk_u2563 = getelementptr inbounds %struct.block, %struct.block* %cx_blk2562, i32 0, i32 8
  %blku_sub2564 = bitcast %union.anon.38* %blk_u2563 to %struct.block_sub*
  %cv2565 = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub2564, i32 0, i32 1
  store %struct.cv* %1366, %struct.cv** %cv2565, align 8
  %1368 = load %struct.cv*, %struct.cv** %cv, align 8
  %call2566 = call i32* @S_CvDEPTHp(%struct.cv* %1368)
  %1369 = load i32, i32* %call2566, align 4
  %1370 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u2567 = getelementptr inbounds %struct.context, %struct.context* %1370, i32 0, i32 0
  %cx_blk2568 = bitcast %union.anon.37* %cx_u2567 to %struct.block*
  %blk_u2569 = getelementptr inbounds %struct.block, %struct.block* %cx_blk2568, i32 0, i32 8
  %blku_sub2570 = bitcast %union.anon.38* %blk_u2569 to %struct.block_sub*
  %olddepth2571 = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub2570, i32 0, i32 4
  store i32 %1369, i32* %olddepth2571, align 8
  %1371 = load i8, i8* %hasargs, align 1
  %conv2572 = zext i8 %1371 to i32
  %tobool2573 = icmp ne i32 %conv2572, 0
  %1372 = zext i1 %tobool2573 to i64
  %cond2574 = select i1 %tobool2573, i32 32, i32 0
  %1373 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u2575 = getelementptr inbounds %struct.context, %struct.context* %1373, i32 0, i32 0
  %cx_subst2576 = bitcast %union.anon.37* %cx_u2575 to %struct.subst*
  %sbu_type2577 = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst2576, i32 0, i32 0
  %1374 = load i8, i8* %sbu_type2577, align 8
  %conv2578 = zext i8 %1374 to i32
  %or2579 = or i32 %conv2578, %cond2574
  %conv2580 = trunc i32 %or2579 to i8
  store i8 %conv2580, i8* %sbu_type2577, align 8
  %1375 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u2581 = getelementptr inbounds %struct.context, %struct.context* %1375, i32 0, i32 0
  %cx_blk2582 = bitcast %union.anon.37* %cx_u2581 to %struct.block*
  %blk_u2583 = getelementptr inbounds %struct.block, %struct.block* %cx_blk2582, i32 0, i32 8
  %blku_sub2584 = bitcast %union.anon.38* %blk_u2583 to %struct.block_sub*
  %retop = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub2584, i32 0, i32 0
  store %struct.op* null, %struct.op** %retop, align 8
  %1376 = load %struct.cv*, %struct.cv** %cv, align 8
  %call2585 = call i32* @S_CvDEPTHp(%struct.cv* %1376)
  %1377 = load i32, i32* %call2585, align 4
  %tobool2586 = icmp ne i32 %1377, 0
  br i1 %tobool2586, label %if.end2592, label %if.then2587

if.then2587:                                      ; preds = %cond.end2558
  %1378 = load %struct.cv*, %struct.cv** %cv, align 8
  %1379 = bitcast %struct.cv* %1378 to i8*
  %1380 = bitcast i8* %1379 to %struct.sv*
  %sv_refcnt2588 = getelementptr inbounds %struct.sv, %struct.sv* %1380, i32 0, i32 1
  %1381 = load i32, i32* %sv_refcnt2588, align 8
  %inc2589 = add i32 %1381, 1
  store i32 %inc2589, i32* %sv_refcnt2588, align 8
  %1382 = load %struct.cv*, %struct.cv** %cv, align 8
  %1383 = bitcast %struct.cv* %1382 to i8*
  %1384 = bitcast i8* %1383 to %struct.sv*
  %sv_refcnt2590 = getelementptr inbounds %struct.sv, %struct.sv* %1384, i32 0, i32 1
  %1385 = load i32, i32* %sv_refcnt2590, align 8
  %inc2591 = add i32 %1385, 1
  store i32 %inc2591, i32* %sv_refcnt2590, align 8
  %1386 = load %struct.cv*, %struct.cv** %cv, align 8
  %1387 = bitcast %struct.cv* %1386 to i8*
  %1388 = bitcast i8* %1387 to %struct.sv*
  %1389 = bitcast %struct.sv* %1388 to i8*
  call void @Perl_save_pushptr(i8* %1389, i32 11)
  br label %if.end2592

if.end2592:                                       ; preds = %if.then2587, %cond.end2558
  %1390 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_private2593 = getelementptr inbounds %struct.op, %struct.op* %1390, i32 0, i32 6
  %1391 = load i8, i8* %op_private2593, align 1
  %conv2594 = zext i8 %1391 to i32
  %1392 = load i8, i8* %phlags, align 1
  %conv2595 = zext i8 %1392 to i32
  %or2596 = or i32 %conv2595, 48
  %and2597 = and i32 %conv2594, %or2596
  %conv2598 = trunc i32 %and2597 to i16
  %1393 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u2599 = getelementptr inbounds %struct.context, %struct.context* %1393, i32 0, i32 0
  %cx_blk2600 = bitcast %union.anon.37* %cx_u2599 to %struct.block*
  %blku_u16 = getelementptr inbounds %struct.block, %struct.block* %cx_blk2600, i32 0, i32 2
  store i16 %conv2598, i16* %blku_u16, align 2
  %1394 = load i8, i8* %flags2521, align 1
  %conv2601 = zext i8 %1394 to i32
  %and2602 = and i32 %conv2601, 128
  %tobool2603 = icmp ne i32 %and2602, 0
  br i1 %tobool2603, label %if.end2607, label %if.then2604

if.then2604:                                      ; preds = %if.end2592
  %1395 = load %struct.cv*, %struct.cv** %cv, align 8
  %call2605 = call i32* @S_CvDEPTHp(%struct.cv* %1395)
  %1396 = load i32, i32* %call2605, align 4
  %inc2606 = add nsw i32 %1396, 1
  store i32 %inc2606, i32* %call2605, align 4
  br label %if.end2607

if.end2607:                                       ; preds = %if.then2604, %if.end2592
  %1397 = load %struct.cv*, %struct.cv** %cv, align 8
  %call2608 = call i32* @S_CvDEPTHp(%struct.cv* %1397)
  %1398 = load i32, i32* %call2608, align 4
  %cmp2609 = icmp sge i32 %1398, 2
  br i1 %cmp2609, label %if.then2611, label %if.end2613

if.then2611:                                      ; preds = %if.end2607
  %1399 = load %struct.padlist*, %struct.padlist** %padlist, align 8
  %1400 = load %struct.cv*, %struct.cv** %cv, align 8
  %call2612 = call i32* @S_CvDEPTHp(%struct.cv* %1400)
  %1401 = load i32, i32* %call2612, align 4
  call void @Perl_pad_push(%struct.padlist* %1399, i32 %1401)
  br label %if.end2613

if.end2613:                                       ; preds = %if.then2611, %if.end2607
  %1402 = load %struct.av*, %struct.av** @PL_comppad, align 8
  %1403 = bitcast %struct.av* %1402 to i8*
  %1404 = bitcast i8* %1403 to %struct.sv*
  %1405 = bitcast %struct.sv* %1404 to i8*
  call void @Perl_save_pushptr(i8* %1405, i32 7)
  %1406 = load %struct.padlist*, %struct.padlist** %padlist, align 8
  %xpadl_alloc = getelementptr inbounds %struct.padlist, %struct.padlist* %1406, i32 0, i32 1
  %1407 = load %struct.av**, %struct.av*** %xpadl_alloc, align 8
  %1408 = load %struct.cv*, %struct.cv** %cv, align 8
  %call2614 = call i32* @S_CvDEPTHp(%struct.cv* %1408)
  %1409 = load i32, i32* %call2614, align 4
  %idxprom2615 = sext i32 %1409 to i64
  %arrayidx2616 = getelementptr inbounds %struct.av*, %struct.av** %1407, i64 %idxprom2615
  %1410 = load %struct.av*, %struct.av** %arrayidx2616, align 8
  store %struct.av* %1410, %struct.av** @PL_comppad, align 8
  %1411 = load %struct.av*, %struct.av** @PL_comppad, align 8
  %sv_u2617 = getelementptr inbounds %struct.av, %struct.av* %1411, i32 0, i32 3
  %svu_array = bitcast %union.anon.3* %sv_u2617 to %struct.sv***
  %1412 = load %struct.sv**, %struct.sv*** %svu_array, align 8
  store %struct.sv** %1412, %struct.sv*** @PL_curpad, align 8
  %1413 = load %struct.cv*, %struct.cv** %cv, align 8
  store %struct.cv* %1413, %struct.cv** %multicall_cv, align 8
  %1414 = load %struct.cv*, %struct.cv** %cv, align 8
  %sv_any2618 = getelementptr inbounds %struct.cv, %struct.cv* %1414, i32 0, i32 0
  %1415 = load %struct.xpvcv*, %struct.xpvcv** %sv_any2618, align 8
  %1416 = bitcast %struct.xpvcv* %1415 to i8*
  %1417 = bitcast i8* %1416 to %struct.xpvcv*
  %xcv_start_u = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %1417, i32 0, i32 5
  %xcv_start = bitcast %union.anon.10* %xcv_start_u to %struct.op**
  %1418 = load %struct.op*, %struct.op** %xcv_start, align 8
  store %struct.op* %1418, %struct.op** %multicall_cop, align 8
  br label %do.end2619

do.end2619:                                       ; preds = %if.end2613
  br label %if.end2791

if.else2620:                                      ; preds = %if.then2520
  br label %do.body2621

do.body2621:                                      ; preds = %if.else2620
  %1419 = load %struct.cv*, %struct.cv** %newcv, align 8
  store %struct.cv* %1419, %struct.cv** %_nOnclAshIngNamE_2622, align 8
  %1420 = load %struct.cv*, %struct.cv** %_nOnclAshIngNamE_2622, align 8
  store %struct.cv* %1420, %struct.cv** %cv2623, align 8
  %1421 = load %struct.cv*, %struct.cv** %cv2623, align 8
  %sv_any2625 = getelementptr inbounds %struct.cv, %struct.cv* %1421, i32 0, i32 0
  %1422 = load %struct.xpvcv*, %struct.xpvcv** %sv_any2625, align 8
  %1423 = bitcast %struct.xpvcv* %1422 to i8*
  %1424 = bitcast i8* %1423 to %struct.xpvcv*
  %xcv_padlist_u2626 = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %1424, i32 0, i32 9
  %xcv_padlist2627 = bitcast %union.anon.13* %xcv_padlist_u2626 to %struct.padlist**
  %1425 = load %struct.padlist*, %struct.padlist** %xcv_padlist2627, align 8
  store %struct.padlist* %1425, %struct.padlist** %padlist2624, align 8
  call void @Perl_push_scope()
  %1426 = load %struct.jmpenv*, %struct.jmpenv** @PL_top_env, align 8
  %je_mustcatch = getelementptr inbounds %struct.jmpenv, %struct.jmpenv* %1426, i32 0, i32 3
  %1427 = load i8, i8* %je_mustcatch, align 4
  %tobool2628 = trunc i8 %1427 to i1
  %frombool2629 = zext i1 %tobool2628 to i8
  store i8 %frombool2629, i8* %multicall_oldcatch, align 1
  call void @Perl_save_strlen(i64* @PL_tmps_floor)
  %1428 = load i64, i64* @PL_tmps_ix, align 8
  store i64 %1428, i64* @PL_tmps_floor, align 8
  call void @Perl_save_vptr(i8* bitcast (%struct.op** @PL_op to i8*))
  br label %do.body2630

do.body2630:                                      ; preds = %do.body2621
  %1429 = load %struct.jmpenv*, %struct.jmpenv** @PL_top_env, align 8
  %je_mustcatch2631 = getelementptr inbounds %struct.jmpenv, %struct.jmpenv* %1429, i32 0, i32 3
  store i8 1, i8* %je_mustcatch2631, align 4
  br label %do.end2632

do.end2632:                                       ; preds = %do.body2630
  br label %do.body2633

do.body2633:                                      ; preds = %do.end2632
  %1430 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_next = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %1430, i32 0, i32 3
  %1431 = load %struct.stackinfo*, %struct.stackinfo** %si_next, align 8
  store %struct.stackinfo* %1431, %struct.stackinfo** %next2634, align 8
  %1432 = load %struct.stackinfo*, %struct.stackinfo** %next2634, align 8
  %tobool2635 = icmp ne %struct.stackinfo* %1432, null
  br i1 %tobool2635, label %if.end2639, label %if.then2636

if.then2636:                                      ; preds = %do.body2633
  %call2637 = call %struct.stackinfo* @Perl_new_stackinfo(i32 32, i32 22)
  store %struct.stackinfo* %call2637, %struct.stackinfo** %next2634, align 8
  %1433 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %1434 = load %struct.stackinfo*, %struct.stackinfo** %next2634, align 8
  %si_prev = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %1434, i32 0, i32 2
  store %struct.stackinfo* %1433, %struct.stackinfo** %si_prev, align 8
  %1435 = load %struct.stackinfo*, %struct.stackinfo** %next2634, align 8
  %1436 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_next2638 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %1436, i32 0, i32 3
  store %struct.stackinfo* %1435, %struct.stackinfo** %si_next2638, align 8
  br label %if.end2639

if.end2639:                                       ; preds = %if.then2636, %do.body2633
  %1437 = load %struct.stackinfo*, %struct.stackinfo** %next2634, align 8
  %si_type = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %1437, i32 0, i32 6
  store i32 3, i32* %si_type, align 8
  %1438 = load %struct.stackinfo*, %struct.stackinfo** %next2634, align 8
  %si_cxix2640 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %1438, i32 0, i32 4
  store i32 -1, i32* %si_cxix2640, align 8
  %1439 = load %struct.stackinfo*, %struct.stackinfo** %next2634, align 8
  %si_stack = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %1439, i32 0, i32 0
  %1440 = load %struct.av*, %struct.av** %si_stack, align 8
  %sv_any2641 = getelementptr inbounds %struct.av, %struct.av* %1440, i32 0, i32 0
  %1441 = load %struct.xpvav*, %struct.xpvav** %sv_any2641, align 8
  %xav_fill = getelementptr inbounds %struct.xpvav, %struct.xpvav* %1441, i32 0, i32 2
  store i64 0, i64* %xav_fill, align 8
  br label %do.body2642

do.body2642:                                      ; preds = %if.end2639
  %1442 = load %struct.sv**, %struct.sv*** %sp, align 8
  %1443 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %sub.ptr.lhs.cast2643 = ptrtoint %struct.sv** %1442 to i64
  %sub.ptr.rhs.cast2644 = ptrtoint %struct.sv** %1443 to i64
  %sub.ptr.sub2645 = sub i64 %sub.ptr.lhs.cast2643, %sub.ptr.rhs.cast2644
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub2645, 8
  %1444 = load %struct.av*, %struct.av** @PL_curstack, align 8
  %sv_any2646 = getelementptr inbounds %struct.av, %struct.av* %1444, i32 0, i32 0
  %1445 = load %struct.xpvav*, %struct.xpvav** %sv_any2646, align 8
  %xav_fill2647 = getelementptr inbounds %struct.xpvav, %struct.xpvav* %1445, i32 0, i32 2
  store i64 %sub.ptr.div, i64* %xav_fill2647, align 8
  %1446 = load %struct.stackinfo*, %struct.stackinfo** %next2634, align 8
  %si_stack2648 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %1446, i32 0, i32 0
  %1447 = load %struct.av*, %struct.av** %si_stack2648, align 8
  %sv_u2649 = getelementptr inbounds %struct.av, %struct.av* %1447, i32 0, i32 3
  %svu_array2650 = bitcast %union.anon.3* %sv_u2649 to %struct.sv***
  %1448 = load %struct.sv**, %struct.sv*** %svu_array2650, align 8
  store %struct.sv** %1448, %struct.sv*** @PL_stack_base, align 8
  %1449 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %1450 = load %struct.stackinfo*, %struct.stackinfo** %next2634, align 8
  %si_stack2651 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %1450, i32 0, i32 0
  %1451 = load %struct.av*, %struct.av** %si_stack2651, align 8
  %sv_any2652 = getelementptr inbounds %struct.av, %struct.av* %1451, i32 0, i32 0
  %1452 = load %struct.xpvav*, %struct.xpvav** %sv_any2652, align 8
  %xav_max = getelementptr inbounds %struct.xpvav, %struct.xpvav* %1452, i32 0, i32 3
  %1453 = load i64, i64* %xav_max, align 8
  %add.ptr2653 = getelementptr inbounds %struct.sv*, %struct.sv** %1449, i64 %1453
  store %struct.sv** %add.ptr2653, %struct.sv*** @PL_stack_max, align 8
  %1454 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %1455 = load %struct.stackinfo*, %struct.stackinfo** %next2634, align 8
  %si_stack2654 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %1455, i32 0, i32 0
  %1456 = load %struct.av*, %struct.av** %si_stack2654, align 8
  %sv_any2655 = getelementptr inbounds %struct.av, %struct.av* %1456, i32 0, i32 0
  %1457 = load %struct.xpvav*, %struct.xpvav** %sv_any2655, align 8
  %xav_fill2656 = getelementptr inbounds %struct.xpvav, %struct.xpvav* %1457, i32 0, i32 2
  %1458 = load i64, i64* %xav_fill2656, align 8
  %add.ptr2657 = getelementptr inbounds %struct.sv*, %struct.sv** %1454, i64 %1458
  store %struct.sv** %add.ptr2657, %struct.sv*** @PL_stack_sp, align 8
  store %struct.sv** %add.ptr2657, %struct.sv*** %sp, align 8
  %1459 = load %struct.stackinfo*, %struct.stackinfo** %next2634, align 8
  %si_stack2658 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %1459, i32 0, i32 0
  %1460 = load %struct.av*, %struct.av** %si_stack2658, align 8
  store %struct.av* %1460, %struct.av** @PL_curstack, align 8
  br label %do.end2659

do.end2659:                                       ; preds = %do.body2642
  %1461 = load %struct.stackinfo*, %struct.stackinfo** %next2634, align 8
  store %struct.stackinfo* %1461, %struct.stackinfo** @PL_curstackinfo, align 8
  br label %do.end2660

do.end2660:                                       ; preds = %do.end2659
  %1462 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxix2661 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %1462, i32 0, i32 4
  %1463 = load i32, i32* %si_cxix2661, align 8
  %1464 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxmax = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %1464, i32 0, i32 5
  %1465 = load i32, i32* %si_cxmax, align 4
  %cmp2662 = icmp slt i32 %1463, %1465
  br i1 %cmp2662, label %cond.true2664, label %cond.false2667

cond.true2664:                                    ; preds = %do.end2660
  %1466 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxix2665 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %1466, i32 0, i32 4
  %1467 = load i32, i32* %si_cxix2665, align 8
  %inc2666 = add nsw i32 %1467, 1
  store i32 %inc2666, i32* %si_cxix2665, align 8
  br label %cond.end2670

cond.false2667:                                   ; preds = %do.end2660
  %call2668 = call i32 @Perl_cxinc()
  %1468 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxix2669 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %1468, i32 0, i32 4
  store i32 %call2668, i32* %si_cxix2669, align 8
  br label %cond.end2670

cond.end2670:                                     ; preds = %cond.false2667, %cond.true2664
  %cond2671 = phi i32 [ %inc2666, %cond.true2664 ], [ %call2668, %cond.false2667 ]
  %1469 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxstack2672 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %1469, i32 0, i32 1
  %1470 = load %struct.context*, %struct.context** %si_cxstack2672, align 8
  %1471 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxix2673 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %1471, i32 0, i32 4
  %1472 = load i32, i32* %si_cxix2673, align 8
  %idxprom2674 = sext i32 %1472 to i64
  %arrayidx2675 = getelementptr inbounds %struct.context, %struct.context* %1470, i64 %idxprom2674
  store %struct.context* %arrayidx2675, %struct.context** %cx, align 8
  %1473 = load i8, i8* %flags2521, align 1
  %conv2676 = zext i8 %1473 to i32
  %or2677 = or i32 24, %conv2676
  %conv2678 = trunc i32 %or2677 to i8
  %1474 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u2679 = getelementptr inbounds %struct.context, %struct.context* %1474, i32 0, i32 0
  %cx_subst2680 = bitcast %union.anon.37* %cx_u2679 to %struct.subst*
  %sbu_type2681 = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst2680, i32 0, i32 0
  store i8 %conv2678, i8* %sbu_type2681, align 8
  %1475 = load %struct.sv**, %struct.sv*** @PL_stack_sp, align 8
  %1476 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %sub.ptr.lhs.cast2682 = ptrtoint %struct.sv** %1475 to i64
  %sub.ptr.rhs.cast2683 = ptrtoint %struct.sv** %1476 to i64
  %sub.ptr.sub2684 = sub i64 %sub.ptr.lhs.cast2682, %sub.ptr.rhs.cast2683
  %sub.ptr.div2685 = sdiv exact i64 %sub.ptr.sub2684, 8
  %conv2686 = trunc i64 %sub.ptr.div2685 to i32
  %1477 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u2687 = getelementptr inbounds %struct.context, %struct.context* %1477, i32 0, i32 0
  %cx_blk2688 = bitcast %union.anon.37* %cx_u2687 to %struct.block*
  %blku_oldsp = getelementptr inbounds %struct.block, %struct.block* %cx_blk2688, i32 0, i32 3
  store i32 %conv2686, i32* %blku_oldsp, align 4
  %1478 = load %struct.cop*, %struct.cop** @PL_curcop, align 8
  %1479 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u2689 = getelementptr inbounds %struct.context, %struct.context* %1479, i32 0, i32 0
  %cx_blk2690 = bitcast %union.anon.37* %cx_u2689 to %struct.block*
  %blku_oldcop = getelementptr inbounds %struct.block, %struct.block* %cx_blk2690, i32 0, i32 4
  store %struct.cop* %1478, %struct.cop** %blku_oldcop, align 8
  %1480 = load i32*, i32** @PL_markstack_ptr, align 8
  %1481 = load i32*, i32** @PL_markstack, align 8
  %sub.ptr.lhs.cast2691 = ptrtoint i32* %1480 to i64
  %sub.ptr.rhs.cast2692 = ptrtoint i32* %1481 to i64
  %sub.ptr.sub2693 = sub i64 %sub.ptr.lhs.cast2691, %sub.ptr.rhs.cast2692
  %sub.ptr.div2694 = sdiv exact i64 %sub.ptr.sub2693, 4
  %conv2695 = trunc i64 %sub.ptr.div2694 to i32
  %1482 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u2696 = getelementptr inbounds %struct.context, %struct.context* %1482, i32 0, i32 0
  %cx_blk2697 = bitcast %union.anon.37* %cx_u2696 to %struct.block*
  %blku_oldmarksp = getelementptr inbounds %struct.block, %struct.block* %cx_blk2697, i32 0, i32 5
  store i32 %conv2695, i32* %blku_oldmarksp, align 8
  %1483 = load i32, i32* @PL_scopestack_ix, align 4
  %1484 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u2698 = getelementptr inbounds %struct.context, %struct.context* %1484, i32 0, i32 0
  %cx_blk2699 = bitcast %union.anon.37* %cx_u2698 to %struct.block*
  %blku_oldscopesp = getelementptr inbounds %struct.block, %struct.block* %cx_blk2699, i32 0, i32 6
  store i32 %1483, i32* %blku_oldscopesp, align 4
  %1485 = load %struct.pmop*, %struct.pmop** @PL_curpm, align 8
  %1486 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u2700 = getelementptr inbounds %struct.context, %struct.context* %1486, i32 0, i32 0
  %cx_blk2701 = bitcast %union.anon.37* %cx_u2700 to %struct.block*
  %blku_oldpm = getelementptr inbounds %struct.block, %struct.block* %cx_blk2701, i32 0, i32 7
  store %struct.pmop* %1485, %struct.pmop** %blku_oldpm, align 8
  %1487 = load i32, i32* %gimme, align 4
  %conv2702 = trunc i32 %1487 to i8
  %1488 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u2703 = getelementptr inbounds %struct.context, %struct.context* %1488, i32 0, i32 0
  %cx_blk2704 = bitcast %union.anon.37* %cx_u2703 to %struct.block*
  %blku_gimme = getelementptr inbounds %struct.block, %struct.block* %cx_blk2704, i32 0, i32 1
  store i8 %conv2702, i8* %blku_gimme, align 1
  %1489 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_flags2706 = getelementptr inbounds %struct.op, %struct.op* %1489, i32 0, i32 5
  %1490 = load i8, i8* %op_flags2706, align 2
  %conv2707 = zext i8 %1490 to i32
  %and2708 = and i32 %conv2707, 3
  %tobool2709 = icmp ne i32 %and2708, 0
  br i1 %tobool2709, label %cond.true2710, label %cond.false2711

cond.true2710:                                    ; preds = %cond.end2670
  br label %cond.end2723

cond.false2711:                                   ; preds = %cond.end2670
  %1491 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_private2712 = getelementptr inbounds %struct.op, %struct.op* %1491, i32 0, i32 6
  %1492 = load i8, i8* %op_private2712, align 1
  %conv2713 = zext i8 %1492 to i32
  %and2714 = and i32 %conv2713, 129
  %tobool2715 = icmp ne i32 %and2714, 0
  br i1 %tobool2715, label %cond.false2717, label %cond.true2716

cond.true2716:                                    ; preds = %cond.false2711
  br label %cond.end2721

cond.false2717:                                   ; preds = %cond.false2711
  %call2718 = call i32 @Perl_was_lvalue_sub()
  %conv2719 = trunc i32 %call2718 to i8
  %conv2720 = zext i8 %conv2719 to i32
  br label %cond.end2721

cond.end2721:                                     ; preds = %cond.false2717, %cond.true2716
  %cond2722 = phi i32 [ 0, %cond.true2716 ], [ %conv2720, %cond.false2717 ]
  br label %cond.end2723

cond.end2723:                                     ; preds = %cond.end2721, %cond.true2710
  %cond2724 = phi i32 [ 129, %cond.true2710 ], [ %cond2722, %cond.end2721 ]
  %conv2725 = trunc i32 %cond2724 to i8
  store i8 %conv2725, i8* %phlags2705, align 1
  %1493 = load %struct.cv*, %struct.cv** %cv2623, align 8
  %1494 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u2726 = getelementptr inbounds %struct.context, %struct.context* %1494, i32 0, i32 0
  %cx_blk2727 = bitcast %union.anon.37* %cx_u2726 to %struct.block*
  %blk_u2728 = getelementptr inbounds %struct.block, %struct.block* %cx_blk2727, i32 0, i32 8
  %blku_sub2729 = bitcast %union.anon.38* %blk_u2728 to %struct.block_sub*
  %cv2730 = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub2729, i32 0, i32 1
  store %struct.cv* %1493, %struct.cv** %cv2730, align 8
  %1495 = load %struct.cv*, %struct.cv** %cv2623, align 8
  %call2731 = call i32* @S_CvDEPTHp(%struct.cv* %1495)
  %1496 = load i32, i32* %call2731, align 4
  %1497 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u2732 = getelementptr inbounds %struct.context, %struct.context* %1497, i32 0, i32 0
  %cx_blk2733 = bitcast %union.anon.37* %cx_u2732 to %struct.block*
  %blk_u2734 = getelementptr inbounds %struct.block, %struct.block* %cx_blk2733, i32 0, i32 8
  %blku_sub2735 = bitcast %union.anon.38* %blk_u2734 to %struct.block_sub*
  %olddepth2736 = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub2735, i32 0, i32 4
  store i32 %1496, i32* %olddepth2736, align 8
  %1498 = load i8, i8* %hasargs, align 1
  %conv2737 = zext i8 %1498 to i32
  %tobool2738 = icmp ne i32 %conv2737, 0
  %1499 = zext i1 %tobool2738 to i64
  %cond2739 = select i1 %tobool2738, i32 32, i32 0
  %1500 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u2740 = getelementptr inbounds %struct.context, %struct.context* %1500, i32 0, i32 0
  %cx_subst2741 = bitcast %union.anon.37* %cx_u2740 to %struct.subst*
  %sbu_type2742 = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst2741, i32 0, i32 0
  %1501 = load i8, i8* %sbu_type2742, align 8
  %conv2743 = zext i8 %1501 to i32
  %or2744 = or i32 %conv2743, %cond2739
  %conv2745 = trunc i32 %or2744 to i8
  store i8 %conv2745, i8* %sbu_type2742, align 8
  %1502 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u2746 = getelementptr inbounds %struct.context, %struct.context* %1502, i32 0, i32 0
  %cx_blk2747 = bitcast %union.anon.37* %cx_u2746 to %struct.block*
  %blk_u2748 = getelementptr inbounds %struct.block, %struct.block* %cx_blk2747, i32 0, i32 8
  %blku_sub2749 = bitcast %union.anon.38* %blk_u2748 to %struct.block_sub*
  %retop2750 = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub2749, i32 0, i32 0
  store %struct.op* null, %struct.op** %retop2750, align 8
  %1503 = load %struct.cv*, %struct.cv** %cv2623, align 8
  %call2751 = call i32* @S_CvDEPTHp(%struct.cv* %1503)
  %1504 = load i32, i32* %call2751, align 4
  %tobool2752 = icmp ne i32 %1504, 0
  br i1 %tobool2752, label %if.end2758, label %if.then2753

if.then2753:                                      ; preds = %cond.end2723
  %1505 = load %struct.cv*, %struct.cv** %cv2623, align 8
  %1506 = bitcast %struct.cv* %1505 to i8*
  %1507 = bitcast i8* %1506 to %struct.sv*
  %sv_refcnt2754 = getelementptr inbounds %struct.sv, %struct.sv* %1507, i32 0, i32 1
  %1508 = load i32, i32* %sv_refcnt2754, align 8
  %inc2755 = add i32 %1508, 1
  store i32 %inc2755, i32* %sv_refcnt2754, align 8
  %1509 = load %struct.cv*, %struct.cv** %cv2623, align 8
  %1510 = bitcast %struct.cv* %1509 to i8*
  %1511 = bitcast i8* %1510 to %struct.sv*
  %sv_refcnt2756 = getelementptr inbounds %struct.sv, %struct.sv* %1511, i32 0, i32 1
  %1512 = load i32, i32* %sv_refcnt2756, align 8
  %inc2757 = add i32 %1512, 1
  store i32 %inc2757, i32* %sv_refcnt2756, align 8
  %1513 = load %struct.cv*, %struct.cv** %cv2623, align 8
  %1514 = bitcast %struct.cv* %1513 to i8*
  %1515 = bitcast i8* %1514 to %struct.sv*
  %1516 = bitcast %struct.sv* %1515 to i8*
  call void @Perl_save_pushptr(i8* %1516, i32 11)
  br label %if.end2758

if.end2758:                                       ; preds = %if.then2753, %cond.end2723
  %1517 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_private2759 = getelementptr inbounds %struct.op, %struct.op* %1517, i32 0, i32 6
  %1518 = load i8, i8* %op_private2759, align 1
  %conv2760 = zext i8 %1518 to i32
  %1519 = load i8, i8* %phlags2705, align 1
  %conv2761 = zext i8 %1519 to i32
  %or2762 = or i32 %conv2761, 48
  %and2763 = and i32 %conv2760, %or2762
  %conv2764 = trunc i32 %and2763 to i16
  %1520 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u2765 = getelementptr inbounds %struct.context, %struct.context* %1520, i32 0, i32 0
  %cx_blk2766 = bitcast %union.anon.37* %cx_u2765 to %struct.block*
  %blku_u162767 = getelementptr inbounds %struct.block, %struct.block* %cx_blk2766, i32 0, i32 2
  store i16 %conv2764, i16* %blku_u162767, align 2
  %1521 = load i8, i8* %flags2521, align 1
  %conv2768 = zext i8 %1521 to i32
  %and2769 = and i32 %conv2768, 128
  %tobool2770 = icmp ne i32 %and2769, 0
  br i1 %tobool2770, label %if.end2774, label %if.then2771

if.then2771:                                      ; preds = %if.end2758
  %1522 = load %struct.cv*, %struct.cv** %cv2623, align 8
  %call2772 = call i32* @S_CvDEPTHp(%struct.cv* %1522)
  %1523 = load i32, i32* %call2772, align 4
  %inc2773 = add nsw i32 %1523, 1
  store i32 %inc2773, i32* %call2772, align 4
  br label %if.end2774

if.end2774:                                       ; preds = %if.then2771, %if.end2758
  %1524 = load %struct.cv*, %struct.cv** %cv2623, align 8
  %call2775 = call i32* @S_CvDEPTHp(%struct.cv* %1524)
  %1525 = load i32, i32* %call2775, align 4
  %cmp2776 = icmp sge i32 %1525, 2
  br i1 %cmp2776, label %if.then2778, label %if.end2780

if.then2778:                                      ; preds = %if.end2774
  %1526 = load %struct.padlist*, %struct.padlist** %padlist2624, align 8
  %1527 = load %struct.cv*, %struct.cv** %cv2623, align 8
  %call2779 = call i32* @S_CvDEPTHp(%struct.cv* %1527)
  %1528 = load i32, i32* %call2779, align 4
  call void @Perl_pad_push(%struct.padlist* %1526, i32 %1528)
  br label %if.end2780

if.end2780:                                       ; preds = %if.then2778, %if.end2774
  %1529 = load %struct.av*, %struct.av** @PL_comppad, align 8
  %1530 = bitcast %struct.av* %1529 to i8*
  %1531 = bitcast i8* %1530 to %struct.sv*
  %1532 = bitcast %struct.sv* %1531 to i8*
  call void @Perl_save_pushptr(i8* %1532, i32 7)
  %1533 = load %struct.padlist*, %struct.padlist** %padlist2624, align 8
  %xpadl_alloc2781 = getelementptr inbounds %struct.padlist, %struct.padlist* %1533, i32 0, i32 1
  %1534 = load %struct.av**, %struct.av*** %xpadl_alloc2781, align 8
  %1535 = load %struct.cv*, %struct.cv** %cv2623, align 8
  %call2782 = call i32* @S_CvDEPTHp(%struct.cv* %1535)
  %1536 = load i32, i32* %call2782, align 4
  %idxprom2783 = sext i32 %1536 to i64
  %arrayidx2784 = getelementptr inbounds %struct.av*, %struct.av** %1534, i64 %idxprom2783
  %1537 = load %struct.av*, %struct.av** %arrayidx2784, align 8
  store %struct.av* %1537, %struct.av** @PL_comppad, align 8
  %1538 = load %struct.av*, %struct.av** @PL_comppad, align 8
  %sv_u2785 = getelementptr inbounds %struct.av, %struct.av* %1538, i32 0, i32 3
  %svu_array2786 = bitcast %union.anon.3* %sv_u2785 to %struct.sv***
  %1539 = load %struct.sv**, %struct.sv*** %svu_array2786, align 8
  store %struct.sv** %1539, %struct.sv*** @PL_curpad, align 8
  %1540 = load %struct.cv*, %struct.cv** %cv2623, align 8
  store %struct.cv* %1540, %struct.cv** %multicall_cv, align 8
  %1541 = load %struct.cv*, %struct.cv** %cv2623, align 8
  %sv_any2787 = getelementptr inbounds %struct.cv, %struct.cv* %1541, i32 0, i32 0
  %1542 = load %struct.xpvcv*, %struct.xpvcv** %sv_any2787, align 8
  %1543 = bitcast %struct.xpvcv* %1542 to i8*
  %1544 = bitcast i8* %1543 to %struct.xpvcv*
  %xcv_start_u2788 = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %1544, i32 0, i32 5
  %xcv_start2789 = bitcast %union.anon.10* %xcv_start_u2788 to %struct.op**
  %1545 = load %struct.op*, %struct.op** %xcv_start2789, align 8
  store %struct.op* %1545, %struct.op** %multicall_cop, align 8
  br label %do.end2790

do.end2790:                                       ; preds = %if.end2780
  br label %if.end2791

if.end2791:                                       ; preds = %do.end2790, %do.end2619
  %1546 = load %struct.cv*, %struct.cv** %newcv, align 8
  store %struct.cv* %1546, %struct.cv** %last_pushed_cv, align 8
  br label %if.end2793

if.else2792:                                      ; preds = %lor.lhs.false2517
  store %struct.op* null, %struct.op** %multicall_cop, align 8
  store %struct.sv** null, %struct.sv*** %newsp, align 8
  br label %if.end2793

if.end2793:                                       ; preds = %if.else2792, %if.end2791
  %1547 = load %struct.av*, %struct.av** @PL_comppad, align 8
  store %struct.av* %1547, %struct.av** %last_pad, align 8
  %1548 = load %struct.op*, %struct.op** %nop, align 8
  %1549 = bitcast %struct.op* %1548 to %struct.unop*
  %op_first = getelementptr inbounds %struct.unop, %struct.unop* %1549, i32 0, i32 7
  %1550 = load %struct.op*, %struct.op** %op_first, align 8
  store %struct.op* %1550, %struct.op** %o, align 8
  %1551 = load %struct.op*, %struct.op** %o, align 8
  %op_targ = getelementptr inbounds %struct.op, %struct.op* %1551, i32 0, i32 3
  %1552 = load i64, i64* %op_targ, align 8
  %cmp2794 = icmp eq i64 %1552, 198
  br i1 %cmp2794, label %if.then2796, label %if.else2798

if.then2796:                                      ; preds = %if.end2793
  %1553 = load %struct.op*, %struct.op** %o, align 8
  %1554 = bitcast %struct.op* %1553 to %struct.unop*
  %op_first2797 = getelementptr inbounds %struct.unop, %struct.unop* %1554, i32 0, i32 7
  %1555 = load %struct.op*, %struct.op** %op_first2797, align 8
  store %struct.op* %1555, %struct.op** %o, align 8
  br label %if.end2801

if.else2798:                                      ; preds = %if.end2793
  %1556 = load %struct.op*, %struct.op** %o, align 8
  %1557 = bitcast %struct.op* %1556 to %struct.unop*
  %op_first2799 = getelementptr inbounds %struct.unop, %struct.unop* %1557, i32 0, i32 7
  %1558 = load %struct.op*, %struct.op** %op_first2799, align 8
  store %struct.op* %1558, %struct.op** %o, align 8
  %1559 = load %struct.op*, %struct.op** %o, align 8
  %op_sibling = getelementptr inbounds %struct.op, %struct.op* %1559, i32 0, i32 1
  %1560 = load %struct.op*, %struct.op** %op_sibling, align 8
  %add.ptr2800 = getelementptr inbounds %struct.op, %struct.op* %1560, i64 0
  store %struct.op* %add.ptr2800, %struct.op** %o, align 8
  br label %if.end2801

if.end2801:                                       ; preds = %if.else2798, %if.then2796
  %1561 = load %struct.op*, %struct.op** %o, align 8
  %op_type = getelementptr inbounds %struct.op, %struct.op* %1561, i32 0, i32 4
  %bf.load = load i16, i16* %op_type, align 8
  %bf.clear = and i16 %bf.load, 511
  %bf.cast = zext i16 %bf.clear to i32
  %cmp2802 = icmp ne i32 %bf.cast, 1
  br i1 %cmp2802, label %if.then2804, label %if.end2805

if.then2804:                                      ; preds = %if.end2801
  %1562 = load %struct.op*, %struct.op** %o, align 8
  %1563 = bitcast %struct.op* %1562 to %struct.cop*
  store %struct.cop* %1563, %struct.cop** @PL_curcop, align 8
  br label %if.end2805

if.end2805:                                       ; preds = %if.then2804, %if.end2801
  %1564 = load %struct.op*, %struct.op** %nop, align 8
  %op_next = getelementptr inbounds %struct.op, %struct.op* %1564, i32 0, i32 0
  %1565 = load %struct.op*, %struct.op** %op_next, align 8
  store %struct.op* %1565, %struct.op** %nop, align 8
  %1566 = load i8*, i8** %locinput, align 8
  %1567 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg2806 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %1567, i32 0, i32 1
  %1568 = load i8*, i8** %strbeg2806, align 8
  %sub.ptr.lhs.cast2807 = ptrtoint i8* %1566 to i64
  %sub.ptr.rhs.cast2808 = ptrtoint i8* %1568 to i64
  %sub.ptr.sub2809 = sub i64 %sub.ptr.lhs.cast2807, %sub.ptr.rhs.cast2808
  %1569 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %offs2810 = getelementptr inbounds %struct.regexp, %struct.regexp* %1569, i32 0, i32 17
  %1570 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %offs2810, align 8
  %arrayidx2811 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %1570, i64 0
  %end2812 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %arrayidx2811, i32 0, i32 1
  store i64 %sub.ptr.sub2809, i64* %end2812, align 8
  %1571 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %info_aux_eval = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %1571, i32 0, i32 8
  %1572 = load %struct.regmatch_info_aux_eval*, %struct.regmatch_info_aux_eval** %info_aux_eval, align 8
  %pos_magic = getelementptr inbounds %struct.regmatch_info_aux_eval, %struct.regmatch_info_aux_eval* %1572, i32 0, i32 7
  %1573 = load %struct.magic*, %struct.magic** %pos_magic, align 8
  %tobool2813 = icmp ne %struct.magic* %1573, null
  br i1 %tobool2813, label %if.then2814, label %if.end2877

if.then2814:                                      ; preds = %if.end2805
  %1574 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %sv = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %1574, i32 0, i32 4
  %1575 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_flags2815 = getelementptr inbounds %struct.sv, %struct.sv* %1575, i32 0, i32 2
  %1576 = load i32, i32* %sv_flags2815, align 4
  %and2816 = and i32 %1576, 1024
  %tobool2817 = icmp ne i32 %and2816, 0
  br i1 %tobool2817, label %land.lhs.true2818, label %cond.false2840

land.lhs.true2818:                                ; preds = %if.then2814
  %1577 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %sv2819 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %1577, i32 0, i32 4
  %1578 = load %struct.sv*, %struct.sv** %sv2819, align 8
  %sv_flags2820 = getelementptr inbounds %struct.sv, %struct.sv* %1578, i32 0, i32 2
  %1579 = load i32, i32* %sv_flags2820, align 4
  %and2821 = and i32 %1579, 2097152
  %tobool2822 = icmp ne i32 %and2821, 0
  br i1 %tobool2822, label %lor.lhs.false2823, label %cond.true2827

lor.lhs.false2823:                                ; preds = %land.lhs.true2818
  %1580 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %sv2824 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %1580, i32 0, i32 4
  %1581 = load %struct.sv*, %struct.sv** %sv2824, align 8
  %call2825 = call zeroext i1 @S_sv_only_taint_gmagic(%struct.sv* %1581)
  br i1 %call2825, label %cond.true2827, label %cond.false2840

cond.true2827:                                    ; preds = %lor.lhs.false2823, %land.lhs.true2818
  %1582 = load i8*, i8** %locinput, align 8
  %1583 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg2828 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %1583, i32 0, i32 1
  %1584 = load i8*, i8** %strbeg2828, align 8
  %sub.ptr.lhs.cast2829 = ptrtoint i8* %1582 to i64
  %sub.ptr.rhs.cast2830 = ptrtoint i8* %1584 to i64
  %sub.ptr.sub2831 = sub i64 %sub.ptr.lhs.cast2829, %sub.ptr.rhs.cast2830
  %1585 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %info_aux_eval2832 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %1585, i32 0, i32 8
  %1586 = load %struct.regmatch_info_aux_eval*, %struct.regmatch_info_aux_eval** %info_aux_eval2832, align 8
  %pos_magic2833 = getelementptr inbounds %struct.regmatch_info_aux_eval, %struct.regmatch_info_aux_eval* %1586, i32 0, i32 7
  %1587 = load %struct.magic*, %struct.magic** %pos_magic2833, align 8
  %mg_len = getelementptr inbounds %struct.magic, %struct.magic* %1587, i32 0, i32 5
  store i64 %sub.ptr.sub2831, i64* %mg_len, align 8
  %1588 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %info_aux_eval2834 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %1588, i32 0, i32 8
  %1589 = load %struct.regmatch_info_aux_eval*, %struct.regmatch_info_aux_eval** %info_aux_eval2834, align 8
  %pos_magic2835 = getelementptr inbounds %struct.regmatch_info_aux_eval, %struct.regmatch_info_aux_eval* %1589, i32 0, i32 7
  %1590 = load %struct.magic*, %struct.magic** %pos_magic2835, align 8
  %mg_flags = getelementptr inbounds %struct.magic, %struct.magic* %1590, i32 0, i32 4
  %1591 = load i8, i8* %mg_flags, align 1
  %conv2836 = zext i8 %1591 to i32
  %or2837 = or i32 %conv2836, 64
  %conv2838 = trunc i32 %or2837 to i8
  store i8 %conv2838, i8* %mg_flags, align 1
  %conv2839 = zext i8 %conv2838 to i32
  br label %cond.end2875

cond.false2840:                                   ; preds = %lor.lhs.false2823, %if.then2814
  %1592 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %sv2841 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %1592, i32 0, i32 4
  %1593 = load %struct.sv*, %struct.sv** %sv2841, align 8
  %sv_flags2842 = getelementptr inbounds %struct.sv, %struct.sv* %1593, i32 0, i32 2
  %1594 = load i32, i32* %sv_flags2842, align 4
  %and2843 = and i32 %1594, 536870912
  %tobool2844 = icmp ne i32 %and2843, 0
  br i1 %tobool2844, label %land.lhs.true2845, label %cond.false2858

land.lhs.true2845:                                ; preds = %cond.false2840
  %1595 = load %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_hints = getelementptr inbounds %struct.cop, %struct.cop* %1595, i32 0, i32 10
  %1596 = load i32, i32* %cop_hints, align 8
  %add2846 = add i32 %1596, 0
  %and2847 = and i32 %add2846, 8
  %tobool2848 = icmp ne i32 %and2847, 0
  br i1 %tobool2848, label %cond.false2858, label %cond.true2849

cond.true2849:                                    ; preds = %land.lhs.true2845
  %1597 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg2850 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %1597, i32 0, i32 1
  %1598 = load i8*, i8** %strbeg2850, align 8
  %1599 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg2851 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %1599, i32 0, i32 1
  %1600 = load i8*, i8** %strbeg2851, align 8
  %1601 = load i8*, i8** %locinput, align 8
  %1602 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg2852 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %1602, i32 0, i32 1
  %1603 = load i8*, i8** %strbeg2852, align 8
  %sub.ptr.lhs.cast2853 = ptrtoint i8* %1601 to i64
  %sub.ptr.rhs.cast2854 = ptrtoint i8* %1603 to i64
  %sub.ptr.sub2855 = sub i64 %sub.ptr.lhs.cast2853, %sub.ptr.rhs.cast2854
  %add.ptr2856 = getelementptr inbounds i8, i8* %1600, i64 %sub.ptr.sub2855
  %call2857 = call i64 @Perl_utf8_length(i8* %1598, i8* %add.ptr2856)
  br label %cond.end2863

cond.false2858:                                   ; preds = %land.lhs.true2845, %cond.false2840
  %1604 = load i8*, i8** %locinput, align 8
  %1605 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg2859 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %1605, i32 0, i32 1
  %1606 = load i8*, i8** %strbeg2859, align 8
  %sub.ptr.lhs.cast2860 = ptrtoint i8* %1604 to i64
  %sub.ptr.rhs.cast2861 = ptrtoint i8* %1606 to i64
  %sub.ptr.sub2862 = sub i64 %sub.ptr.lhs.cast2860, %sub.ptr.rhs.cast2861
  br label %cond.end2863

cond.end2863:                                     ; preds = %cond.false2858, %cond.true2849
  %cond2864 = phi i64 [ %call2857, %cond.true2849 ], [ %sub.ptr.sub2862, %cond.false2858 ]
  %1607 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %info_aux_eval2865 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %1607, i32 0, i32 8
  %1608 = load %struct.regmatch_info_aux_eval*, %struct.regmatch_info_aux_eval** %info_aux_eval2865, align 8
  %pos_magic2866 = getelementptr inbounds %struct.regmatch_info_aux_eval, %struct.regmatch_info_aux_eval* %1608, i32 0, i32 7
  %1609 = load %struct.magic*, %struct.magic** %pos_magic2866, align 8
  %mg_len2867 = getelementptr inbounds %struct.magic, %struct.magic* %1609, i32 0, i32 5
  store i64 %cond2864, i64* %mg_len2867, align 8
  %1610 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %info_aux_eval2868 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %1610, i32 0, i32 8
  %1611 = load %struct.regmatch_info_aux_eval*, %struct.regmatch_info_aux_eval** %info_aux_eval2868, align 8
  %pos_magic2869 = getelementptr inbounds %struct.regmatch_info_aux_eval, %struct.regmatch_info_aux_eval* %1611, i32 0, i32 7
  %1612 = load %struct.magic*, %struct.magic** %pos_magic2869, align 8
  %mg_flags2870 = getelementptr inbounds %struct.magic, %struct.magic* %1612, i32 0, i32 4
  %1613 = load i8, i8* %mg_flags2870, align 1
  %conv2871 = zext i8 %1613 to i32
  %and2872 = and i32 %conv2871, -65
  %conv2873 = trunc i32 %and2872 to i8
  store i8 %conv2873, i8* %mg_flags2870, align 1
  %conv2874 = zext i8 %conv2873 to i32
  br label %cond.end2875

cond.end2875:                                     ; preds = %cond.end2863, %cond.true2827
  %cond2876 = phi i32 [ %conv2839, %cond.true2827 ], [ %conv2874, %cond.end2863 ]
  br label %if.end2877

if.end2877:                                       ; preds = %cond.end2875, %if.end2805
  %1614 = load %struct.sv*, %struct.sv** %sv_yes_mark, align 8
  %tobool2878 = icmp ne %struct.sv* %1614, null
  br i1 %tobool2878, label %if.then2879, label %if.end2881

if.then2879:                                      ; preds = %if.end2877
  %call2880 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.13, i64 0, i64 0), i32 1)
  store %struct.sv* %call2880, %struct.sv** %sv_mrk, align 8
  %1615 = load %struct.sv*, %struct.sv** %sv_mrk, align 8
  %1616 = load %struct.sv*, %struct.sv** %sv_yes_mark, align 8
  call void @Perl_sv_setsv_flags(%struct.sv* %1615, %struct.sv* %1616, i32 1538)
  br label %if.end2881

if.end2881:                                       ; preds = %if.then2879, %if.end2877
  %1617 = load %struct.sv**, %struct.sv*** %sp, align 8
  %1618 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %sub.ptr.lhs.cast2882 = ptrtoint %struct.sv** %1617 to i64
  %sub.ptr.rhs.cast2883 = ptrtoint %struct.sv** %1618 to i64
  %sub.ptr.sub2884 = sub i64 %sub.ptr.lhs.cast2882, %sub.ptr.rhs.cast2883
  %sub.ptr.div2885 = sdiv exact i64 %sub.ptr.sub2884, 8
  store i64 %sub.ptr.div2885, i64* %before, align 8
  %1619 = load %struct.op*, %struct.op** %nop, align 8
  store %struct.op* %1619, %struct.op** @PL_op, align 8
  %1620 = load i32 ()*, i32 ()** @PL_runops, align 8
  %call2886 = call i32 %1620()
  %1621 = load %struct.sv**, %struct.sv*** @PL_stack_sp, align 8
  store %struct.sv** %1621, %struct.sv*** %sp, align 8
  %1622 = load %struct.sv**, %struct.sv*** %sp, align 8
  %1623 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %sub.ptr.lhs.cast2887 = ptrtoint %struct.sv** %1622 to i64
  %sub.ptr.rhs.cast2888 = ptrtoint %struct.sv** %1623 to i64
  %sub.ptr.sub2889 = sub i64 %sub.ptr.lhs.cast2887, %sub.ptr.rhs.cast2888
  %sub.ptr.div2890 = sdiv exact i64 %sub.ptr.sub2889, 8
  %1624 = load i64, i64* %before, align 8
  %cmp2891 = icmp eq i64 %sub.ptr.div2890, %1624
  br i1 %cmp2891, label %if.then2893, label %if.else2894

if.then2893:                                      ; preds = %if.end2881
  store %struct.sv* @PL_sv_undef, %struct.sv** %ret, align 8
  br label %if.end2896

if.else2894:                                      ; preds = %if.end2881
  %1625 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr2895 = getelementptr inbounds %struct.sv*, %struct.sv** %1625, i32 -1
  store %struct.sv** %incdec.ptr2895, %struct.sv*** %sp, align 8
  %1626 = load %struct.sv*, %struct.sv** %1625, align 8
  store %struct.sv* %1626, %struct.sv** %ret, align 8
  %1627 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %1627, %struct.sv*** @PL_stack_sp, align 8
  br label %if.end2896

if.end2896:                                       ; preds = %if.else2894, %if.then2893
  store %struct.op* null, %struct.op** @PL_op, align 8
  store %struct.p5rx* null, %struct.p5rx** %re_sv, align 8
  %1628 = load i32, i32* %logical, align 4
  %cmp2897 = icmp eq i32 %1628, 0
  br i1 %cmp2897, label %if.then2899, label %if.else2901

if.then2899:                                      ; preds = %if.end2896
  %1629 = load %struct.gv*, %struct.gv** @PL_replgv, align 8
  %call2900 = call %struct.sv* @Perl_save_scalar(%struct.gv* %1629)
  %1630 = load %struct.sv*, %struct.sv** %ret, align 8
  call void @Perl_sv_setsv_flags(%struct.sv* %call2900, %struct.sv* %1630, i32 1538)
  br label %if.end3077

if.else2901:                                      ; preds = %if.end2896
  %1631 = load i32, i32* %logical, align 4
  %cmp2902 = icmp eq i32 %1631, 1
  br i1 %cmp2902, label %if.then2904, label %if.else3005

if.then2904:                                      ; preds = %if.else2901
  %1632 = load %struct.sv*, %struct.sv** %ret, align 8
  %tobool2905 = icmp ne %struct.sv* %1632, null
  br i1 %tobool2905, label %cond.true2906, label %cond.false2907

cond.true2906:                                    ; preds = %if.then2904
  br i1 true, label %land.rhs2908, label %land.end3000

cond.false2907:                                   ; preds = %if.then2904
  br i1 false, label %land.rhs2908, label %land.end3000

land.rhs2908:                                     ; preds = %cond.false2907, %cond.true2906
  %1633 = load %struct.sv*, %struct.sv** %ret, align 8
  %sv_flags2909 = getelementptr inbounds %struct.sv, %struct.sv* %1633, i32 0, i32 2
  %1634 = load i32, i32* %sv_flags2909, align 4
  %and2910 = and i32 %1634, 2097152
  %tobool2911 = icmp ne i32 %and2910, 0
  br i1 %tobool2911, label %cond.true2912, label %cond.false2913

cond.true2912:                                    ; preds = %land.rhs2908
  br i1 true, label %cond.true2914, label %cond.false2917

cond.false2913:                                   ; preds = %land.rhs2908
  br i1 false, label %cond.true2914, label %cond.false2917

cond.true2914:                                    ; preds = %cond.false2913, %cond.true2912
  %1635 = load %struct.sv*, %struct.sv** %ret, align 8
  %call2915 = call zeroext i1 @Perl_sv_2bool_flags(%struct.sv* %1635, i32 2)
  %conv2916 = zext i1 %call2915 to i32
  br label %cond.end2997

cond.false2917:                                   ; preds = %cond.false2913, %cond.true2912
  %1636 = load %struct.sv*, %struct.sv** %ret, align 8
  %sv_flags2918 = getelementptr inbounds %struct.sv, %struct.sv* %1636, i32 0, i32 2
  %1637 = load i32, i32* %sv_flags2918, align 4
  %and2919 = and i32 %1637, 65280
  %tobool2920 = icmp ne i32 %and2919, 0
  br i1 %tobool2920, label %cond.false2932, label %lor.lhs.false2921

lor.lhs.false2921:                                ; preds = %cond.false2917
  %1638 = load %struct.sv*, %struct.sv** %ret, align 8
  %sv_flags2922 = getelementptr inbounds %struct.sv, %struct.sv* %1638, i32 0, i32 2
  %1639 = load i32, i32* %sv_flags2922, align 4
  %and2923 = and i32 %1639, 255
  %cmp2924 = icmp eq i32 %and2923, 8
  br i1 %cmp2924, label %cond.false2932, label %lor.lhs.false2926

lor.lhs.false2926:                                ; preds = %lor.lhs.false2921
  %1640 = load %struct.sv*, %struct.sv** %ret, align 8
  %sv_flags2927 = getelementptr inbounds %struct.sv, %struct.sv* %1640, i32 0, i32 2
  %1641 = load i32, i32* %sv_flags2927, align 4
  %and2928 = and i32 %1641, 16826623
  %cmp2929 = icmp eq i32 %and2928, 16777226
  br i1 %cmp2929, label %cond.false2932, label %cond.true2931

cond.true2931:                                    ; preds = %lor.lhs.false2926
  br label %cond.end2995

cond.false2932:                                   ; preds = %lor.lhs.false2926, %lor.lhs.false2921, %cond.false2917
  %1642 = load %struct.sv*, %struct.sv** %ret, align 8
  %sv_flags2933 = getelementptr inbounds %struct.sv, %struct.sv* %1642, i32 0, i32 2
  %1643 = load i32, i32* %sv_flags2933, align 4
  %and2934 = and i32 %1643, 1024
  %tobool2935 = icmp ne i32 %and2934, 0
  br i1 %tobool2935, label %cond.true2936, label %cond.false2957

cond.true2936:                                    ; preds = %cond.false2932
  %1644 = load %struct.sv*, %struct.sv** %ret, align 8
  %sv_any2937 = getelementptr inbounds %struct.sv, %struct.sv* %1644, i32 0, i32 0
  %1645 = load i8*, i8** %sv_any2937, align 8
  %1646 = bitcast i8* %1645 to %struct.xpv*
  %tobool2938 = icmp ne %struct.xpv* %1646, null
  br i1 %tobool2938, label %land.rhs2939, label %land.end2955

land.rhs2939:                                     ; preds = %cond.true2936
  %1647 = load %struct.sv*, %struct.sv** %ret, align 8
  %sv_any2940 = getelementptr inbounds %struct.sv, %struct.sv* %1647, i32 0, i32 0
  %1648 = load i8*, i8** %sv_any2940, align 8
  %1649 = bitcast i8* %1648 to %struct.xpv*
  %xpv_cur = getelementptr inbounds %struct.xpv, %struct.xpv* %1649, i32 0, i32 2
  %1650 = load i64, i64* %xpv_cur, align 8
  %cmp2941 = icmp ugt i64 %1650, 1
  br i1 %cmp2941, label %lor.end2954, label %lor.rhs2943

lor.rhs2943:                                      ; preds = %land.rhs2939
  %1651 = load %struct.sv*, %struct.sv** %ret, align 8
  %sv_any2944 = getelementptr inbounds %struct.sv, %struct.sv* %1651, i32 0, i32 0
  %1652 = load i8*, i8** %sv_any2944, align 8
  %1653 = bitcast i8* %1652 to %struct.xpv*
  %xpv_cur2945 = getelementptr inbounds %struct.xpv, %struct.xpv* %1653, i32 0, i32 2
  %1654 = load i64, i64* %xpv_cur2945, align 8
  %tobool2946 = icmp ne i64 %1654, 0
  br i1 %tobool2946, label %land.rhs2947, label %land.end2952

land.rhs2947:                                     ; preds = %lor.rhs2943
  %1655 = load %struct.sv*, %struct.sv** %ret, align 8
  %sv_u2948 = getelementptr inbounds %struct.sv, %struct.sv* %1655, i32 0, i32 3
  %svu_pv = bitcast %union.anon* %sv_u2948 to i8**
  %1656 = load i8*, i8** %svu_pv, align 8
  %1657 = load i8, i8* %1656, align 1
  %conv2949 = sext i8 %1657 to i32
  %cmp2950 = icmp ne i32 %conv2949, 48
  br label %land.end2952

land.end2952:                                     ; preds = %land.rhs2947, %lor.rhs2943
  %1658 = phi i1 [ false, %lor.rhs2943 ], [ %cmp2950, %land.rhs2947 ]
  br label %lor.end2954

lor.end2954:                                      ; preds = %land.end2952, %land.rhs2939
  %1659 = phi i1 [ true, %land.rhs2939 ], [ %1658, %land.end2952 ]
  br label %land.end2955

land.end2955:                                     ; preds = %lor.end2954, %cond.true2936
  %1660 = phi i1 [ false, %cond.true2936 ], [ %1659, %lor.end2954 ]
  %land.ext2956 = zext i1 %1660 to i32
  br label %cond.end2993

cond.false2957:                                   ; preds = %cond.false2932
  %1661 = load %struct.sv*, %struct.sv** %ret, align 8
  %sv_flags2958 = getelementptr inbounds %struct.sv, %struct.sv* %1661, i32 0, i32 2
  %1662 = load i32, i32* %sv_flags2958, align 4
  %and2959 = and i32 %1662, 768
  %tobool2960 = icmp ne i32 %and2959, 0
  br i1 %tobool2960, label %cond.true2961, label %cond.false2988

cond.true2961:                                    ; preds = %cond.false2957
  %1663 = load %struct.sv*, %struct.sv** %ret, align 8
  %sv_flags2962 = getelementptr inbounds %struct.sv, %struct.sv* %1663, i32 0, i32 2
  %1664 = load i32, i32* %sv_flags2962, align 4
  %and2963 = and i32 %1664, 256
  %tobool2964 = icmp ne i32 %and2963, 0
  br i1 %tobool2964, label %land.lhs.true2965, label %lor.rhs2971

land.lhs.true2965:                                ; preds = %cond.true2961
  %1665 = load %struct.sv*, %struct.sv** %ret, align 8
  %sv_any2966 = getelementptr inbounds %struct.sv, %struct.sv* %1665, i32 0, i32 0
  %1666 = load i8*, i8** %sv_any2966, align 8
  %1667 = bitcast i8* %1666 to %struct.xpviv*
  %xiv_u2967 = getelementptr inbounds %struct.xpviv, %struct.xpviv* %1667, i32 0, i32 4
  %xivu_iv2968 = bitcast %union._xivu* %xiv_u2967 to i64*
  %1668 = load i64, i64* %xivu_iv2968, align 8
  %cmp2969 = icmp ne i64 %1668, 0
  br i1 %cmp2969, label %lor.end2987, label %lor.rhs2971

lor.rhs2971:                                      ; preds = %land.lhs.true2965, %cond.true2961
  %1669 = load %struct.sv*, %struct.sv** %ret, align 8
  %sv_flags2972 = getelementptr inbounds %struct.sv, %struct.sv* %1669, i32 0, i32 2
  %1670 = load i32, i32* %sv_flags2972, align 4
  %and2973 = and i32 %1670, 512
  %tobool2974 = icmp ne i32 %and2973, 0
  br i1 %tobool2974, label %land.rhs2975, label %land.end2985

land.rhs2975:                                     ; preds = %lor.rhs2971
  %1671 = load %struct.sv*, %struct.sv** %ret, align 8
  %sv_any2976 = getelementptr inbounds %struct.sv, %struct.sv* %1671, i32 0, i32 0
  %1672 = load i8*, i8** %sv_any2976, align 8
  %1673 = bitcast i8* %1672 to %struct.xpvnv*
  %xnv_u = getelementptr inbounds %struct.xpvnv, %struct.xpvnv* %1673, i32 0, i32 5
  %xnv_nv = bitcast %union._xnvu* %xnv_u to double*
  %1674 = load double, double* %xnv_nv, align 8
  %cmp2977 = fcmp uno double %1674, %1674
  br i1 %cmp2977, label %lor.end2984, label %lor.rhs2978

lor.rhs2978:                                      ; preds = %land.rhs2975
  %1675 = load %struct.sv*, %struct.sv** %ret, align 8
  %sv_any2979 = getelementptr inbounds %struct.sv, %struct.sv* %1675, i32 0, i32 0
  %1676 = load i8*, i8** %sv_any2979, align 8
  %1677 = bitcast i8* %1676 to %struct.xpvnv*
  %xnv_u2980 = getelementptr inbounds %struct.xpvnv, %struct.xpvnv* %1677, i32 0, i32 5
  %xnv_nv2981 = bitcast %union._xnvu* %xnv_u2980 to double*
  %1678 = load double, double* %xnv_nv2981, align 8
  %cmp2982 = fcmp une double %1678, 0.000000e+00
  br label %lor.end2984

lor.end2984:                                      ; preds = %lor.rhs2978, %land.rhs2975
  %1679 = phi i1 [ true, %land.rhs2975 ], [ %cmp2982, %lor.rhs2978 ]
  br label %land.end2985

land.end2985:                                     ; preds = %lor.end2984, %lor.rhs2971
  %1680 = phi i1 [ false, %lor.rhs2971 ], [ %1679, %lor.end2984 ]
  br label %lor.end2987

lor.end2987:                                      ; preds = %land.end2985, %land.lhs.true2965
  %1681 = phi i1 [ true, %land.lhs.true2965 ], [ %1680, %land.end2985 ]
  %lor.ext = zext i1 %1681 to i32
  br label %cond.end2991

cond.false2988:                                   ; preds = %cond.false2957
  %1682 = load %struct.sv*, %struct.sv** %ret, align 8
  %call2989 = call zeroext i1 @Perl_sv_2bool_flags(%struct.sv* %1682, i32 0)
  %conv2990 = zext i1 %call2989 to i32
  br label %cond.end2991

cond.end2991:                                     ; preds = %cond.false2988, %lor.end2987
  %cond2992 = phi i32 [ %lor.ext, %lor.end2987 ], [ %conv2990, %cond.false2988 ]
  br label %cond.end2993

cond.end2993:                                     ; preds = %cond.end2991, %land.end2955
  %cond2994 = phi i32 [ %land.ext2956, %land.end2955 ], [ %cond2992, %cond.end2991 ]
  br label %cond.end2995

cond.end2995:                                     ; preds = %cond.end2993, %cond.true2931
  %cond2996 = phi i32 [ 0, %cond.true2931 ], [ %cond2994, %cond.end2993 ]
  br label %cond.end2997

cond.end2997:                                     ; preds = %cond.end2995, %cond.true2914
  %cond2998 = phi i32 [ %conv2916, %cond.true2914 ], [ %cond2996, %cond.end2995 ]
  %tobool2999 = icmp ne i32 %cond2998, 0
  br label %land.end3000

land.end3000:                                     ; preds = %cond.end2997, %cond.false2907, %cond.true2906
  %1683 = phi i1 [ false, %cond.false2907 ], [ false, %cond.true2906 ], [ %tobool2999, %cond.end2997 ]
  %1684 = zext i1 %1683 to i64
  %cond3002 = select i1 %1683, i32 1, i32 0
  %tobool3003 = icmp ne i32 %cond3002, 0
  %frombool3004 = zext i1 %tobool3003 to i8
  store i8 %frombool3004, i8* %sw, align 1
  store i32 0, i32* %logical, align 4
  br label %if.end3076

if.else3005:                                      ; preds = %if.else2901
  %1685 = load %struct.sv*, %struct.sv** %ret, align 8
  %sv_flags3006 = getelementptr inbounds %struct.sv, %struct.sv* %1685, i32 0, i32 2
  %1686 = load i32, i32* %sv_flags3006, align 4
  %and3007 = and i32 %1686, 2097152
  %tobool3008 = icmp ne i32 %and3007, 0
  br i1 %tobool3008, label %if.then3009, label %if.end3011

if.then3009:                                      ; preds = %if.else3005
  %1687 = load %struct.sv*, %struct.sv** %ret, align 8
  %call3010 = call %struct.sv* @Perl_sv_mortalcopy_flags(%struct.sv* %1687, i32 1538)
  store %struct.sv* %call3010, %struct.sv** %ret, align 8
  br label %if.end3011

if.end3011:                                       ; preds = %if.then3009, %if.else3005
  %1688 = load %struct.sv*, %struct.sv** %ret, align 8
  %sv_flags3012 = getelementptr inbounds %struct.sv, %struct.sv* %1688, i32 0, i32 2
  %1689 = load i32, i32* %sv_flags3012, align 4
  %and3013 = and i32 %1689, 2048
  %tobool3014 = icmp ne i32 %and3013, 0
  br i1 %tobool3014, label %land.lhs.true3015, label %if.then3027

land.lhs.true3015:                                ; preds = %if.end3011
  %1690 = load %struct.sv*, %struct.sv** %ret, align 8
  %sv_u3016 = getelementptr inbounds %struct.sv, %struct.sv* %1690, i32 0, i32 3
  %svu_rv = bitcast %union.anon* %sv_u3016 to %struct.sv**
  %1691 = load %struct.sv*, %struct.sv** %svu_rv, align 8
  %sv_flags3017 = getelementptr inbounds %struct.sv, %struct.sv* %1691, i32 0, i32 2
  %1692 = load i32, i32* %sv_flags3017, align 4
  %and3018 = and i32 %1692, 1048576
  %tobool3019 = icmp ne i32 %and3018, 0
  br i1 %tobool3019, label %land.lhs.true3020, label %if.then3027

land.lhs.true3020:                                ; preds = %land.lhs.true3015
  %1693 = load %struct.sv*, %struct.sv** %ret, align 8
  %sv_u3021 = getelementptr inbounds %struct.sv, %struct.sv* %1693, i32 0, i32 3
  %svu_rv3022 = bitcast %union.anon* %sv_u3021 to %struct.sv**
  %1694 = load %struct.sv*, %struct.sv** %svu_rv3022, align 8
  %sv_any3023 = getelementptr inbounds %struct.sv, %struct.sv* %1694, i32 0, i32 0
  %1695 = load i8*, i8** %sv_any3023, align 8
  %1696 = bitcast i8* %1695 to %struct.xpvmg*
  %xmg_stash = getelementptr inbounds %struct.xpvmg, %struct.xpvmg* %1696, i32 0, i32 0
  %1697 = load %struct.hv*, %struct.hv** %xmg_stash, align 8
  %sv_flags3024 = getelementptr inbounds %struct.hv, %struct.hv* %1697, i32 0, i32 2
  %1698 = load i32, i32* %sv_flags3024, align 4
  %and3025 = and i32 %1698, 268435456
  %tobool3026 = icmp ne i32 %and3025, 0
  br i1 %tobool3026, label %if.end3075, label %if.then3027

if.then3027:                                      ; preds = %land.lhs.true3020, %land.lhs.true3015, %if.end3011
  %1699 = load %struct.sv*, %struct.sv** %ret, align 8
  store %struct.sv* %1699, %struct.sv** %sv3028, align 8
  %1700 = load %struct.sv*, %struct.sv** %sv3028, align 8
  %sv_flags3029 = getelementptr inbounds %struct.sv, %struct.sv* %1700, i32 0, i32 2
  %1701 = load i32, i32* %sv_flags3029, align 4
  %and3030 = and i32 %1701, 2048
  %tobool3031 = icmp ne i32 %and3030, 0
  br i1 %tobool3031, label %if.then3032, label %if.end3035

if.then3032:                                      ; preds = %if.then3027
  %1702 = load %struct.sv*, %struct.sv** %sv3028, align 8
  %sv_u3033 = getelementptr inbounds %struct.sv, %struct.sv* %1702, i32 0, i32 3
  %svu_rv3034 = bitcast %union.anon* %sv_u3033 to %struct.sv**
  %1703 = load %struct.sv*, %struct.sv** %svu_rv3034, align 8
  store %struct.sv* %1703, %struct.sv** %sv3028, align 8
  br label %if.end3035

if.end3035:                                       ; preds = %if.then3032, %if.then3027
  %1704 = load %struct.sv*, %struct.sv** %sv3028, align 8
  %sv_flags3036 = getelementptr inbounds %struct.sv, %struct.sv* %1704, i32 0, i32 2
  %1705 = load i32, i32* %sv_flags3036, align 4
  %and3037 = and i32 %1705, 255
  %cmp3038 = icmp eq i32 %and3037, 8
  br i1 %cmp3038, label %if.then3040, label %if.else3041

if.then3040:                                      ; preds = %if.end3035
  %1706 = load %struct.sv*, %struct.sv** %sv3028, align 8
  %1707 = bitcast %struct.sv* %1706 to %struct.p5rx*
  store %struct.p5rx* %1707, %struct.p5rx** %re_sv, align 8
  br label %if.end3051

if.else3041:                                      ; preds = %if.end3035
  %1708 = load %struct.sv*, %struct.sv** %ret, align 8
  %sv_flags3042 = getelementptr inbounds %struct.sv, %struct.sv* %1708, i32 0, i32 2
  %1709 = load i32, i32* %sv_flags3042, align 4
  %and3043 = and i32 %1709, 4194304
  %tobool3044 = icmp ne i32 %and3043, 0
  br i1 %tobool3044, label %if.then3045, label %if.end3050

if.then3045:                                      ; preds = %if.else3041
  %1710 = load %struct.sv*, %struct.sv** %ret, align 8
  %call3046 = call %struct.magic* @Perl_mg_find(%struct.sv* %1710, i32 114)
  store %struct.magic* %call3046, %struct.magic** %mg, align 8
  %1711 = load %struct.magic*, %struct.magic** %mg, align 8
  %tobool3047 = icmp ne %struct.magic* %1711, null
  br i1 %tobool3047, label %if.then3048, label %if.end3049

if.then3048:                                      ; preds = %if.then3045
  %1712 = load %struct.magic*, %struct.magic** %mg, align 8
  %mg_obj = getelementptr inbounds %struct.magic, %struct.magic* %1712, i32 0, i32 6
  %1713 = load %struct.sv*, %struct.sv** %mg_obj, align 8
  %1714 = bitcast %struct.sv* %1713 to %struct.p5rx*
  store %struct.p5rx* %1714, %struct.p5rx** %re_sv, align 8
  br label %if.end3049

if.end3049:                                       ; preds = %if.then3048, %if.then3045
  br label %if.end3050

if.end3050:                                       ; preds = %if.end3049, %if.else3041
  br label %if.end3051

if.end3051:                                       ; preds = %if.end3050, %if.then3040
  %1715 = load %struct.p5rx*, %struct.p5rx** %re_sv, align 8
  %tobool3052 = icmp ne %struct.p5rx* %1715, null
  br i1 %tobool3052, label %if.end3074, label %land.lhs.true3053

land.lhs.true3053:                                ; preds = %if.end3051
  %1716 = load %struct.sv*, %struct.sv** %ret, align 8
  %sv_flags3054 = getelementptr inbounds %struct.sv, %struct.sv* %1716, i32 0, i32 2
  %1717 = load i32, i32* %sv_flags3054, align 4
  %and3055 = and i32 %1717, 1024
  %tobool3056 = icmp ne i32 %and3055, 0
  br i1 %tobool3056, label %if.end3074, label %land.lhs.true3057

land.lhs.true3057:                                ; preds = %land.lhs.true3053
  %1718 = load %struct.sv*, %struct.sv** %ret, align 8
  %sv_flags3058 = getelementptr inbounds %struct.sv, %struct.sv* %1718, i32 0, i32 2
  %1719 = load i32, i32* %sv_flags3058, align 4
  %and3059 = and i32 %1719, 768
  %tobool3060 = icmp ne i32 %and3059, 0
  br i1 %tobool3060, label %if.end3074, label %if.then3061

if.then3061:                                      ; preds = %land.lhs.true3057
  %1720 = load %struct.sv*, %struct.sv** %ret, align 8
  %call3062 = call %struct.sv* @Perl_sv_mortalcopy_flags(%struct.sv* %1720, i32 1538)
  store %struct.sv* %call3062, %struct.sv** %ret, align 8
  %1721 = load %struct.sv*, %struct.sv** %ret, align 8
  %sv_flags3063 = getelementptr inbounds %struct.sv, %struct.sv* %1721, i32 0, i32 2
  %1722 = load i32, i32* %sv_flags3063, align 4
  %and3064 = and i32 %1722, 430018304
  %cmp3065 = icmp eq i32 %and3064, 1024
  br i1 %cmp3065, label %cond.true3067, label %cond.false3070

cond.true3067:                                    ; preds = %if.then3061
  %1723 = load %struct.sv*, %struct.sv** %ret, align 8
  %sv_u3068 = getelementptr inbounds %struct.sv, %struct.sv* %1723, i32 0, i32 3
  %svu_pv3069 = bitcast %union.anon* %sv_u3068 to i8**
  %1724 = load i8*, i8** %svu_pv3069, align 8
  br label %cond.end3072

cond.false3070:                                   ; preds = %if.then3061
  %1725 = load %struct.sv*, %struct.sv** %ret, align 8
  %call3071 = call i8* @Perl_sv_pvn_force_flags(%struct.sv* %1725, i64* null, i32 2)
  br label %cond.end3072

cond.end3072:                                     ; preds = %cond.false3070, %cond.true3067
  %cond3073 = phi i8* [ %1724, %cond.true3067 ], [ %call3071, %cond.false3070 ]
  br label %if.end3074

if.end3074:                                       ; preds = %cond.end3072, %land.lhs.true3057, %land.lhs.true3053, %if.end3051
  br label %if.end3075

if.end3075:                                       ; preds = %if.end3074, %land.lhs.true3020
  br label %if.end3076

if.end3076:                                       ; preds = %if.end3075, %land.end3000
  br label %if.end3077

if.end3077:                                       ; preds = %if.end3076, %if.then2899
  %1726 = load %struct.op*, %struct.op** %oop, align 8
  store %struct.op* %1726, %struct.op** @PL_op, align 8
  %1727 = load %struct.cop*, %struct.cop** %ocurcop, align 8
  store %struct.cop* %1727, %struct.cop** @PL_curcop, align 8
  %1728 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %1729 = load i32, i32* %runops_cp, align 4
  call void @S_regcp_restore(%struct.regexp* %1728, i32 %1729, i32* %maxopenparen)
  %1730 = load %struct.pmop*, %struct.pmop** @PL_reg_curpm, align 8
  store %struct.pmop* %1730, %struct.pmop** @PL_curpm, align 8
  %1731 = load i32, i32* %logical, align 4
  %cmp3078 = icmp ne i32 %1731, 2
  br i1 %cmp3078, label %if.then3080, label %if.end3081

if.then3080:                                      ; preds = %if.end3077
  br label %sw.epilog6768

if.end3081:                                       ; preds = %if.end3077
  store i32 0, i32* %logical, align 4
  %1732 = load %struct.p5rx*, %struct.p5rx** %re_sv, align 8
  %tobool3082 = icmp ne %struct.p5rx* %1732, null
  br i1 %tobool3082, label %if.then3083, label %if.else3085

if.then3083:                                      ; preds = %if.end3081
  %1733 = load %struct.p5rx*, %struct.p5rx** %re_sv, align 8
  %call3084 = call %struct.p5rx* @Perl_reg_temp_copy(%struct.p5rx* null, %struct.p5rx* %1733)
  store %struct.p5rx* %call3084, %struct.p5rx** %re_sv, align 8
  br label %if.end3133

if.else3085:                                      ; preds = %if.end3081
  store i32 0, i32* %pm_flags, align 4
  %1734 = load %struct.sv*, %struct.sv** %ret, align 8
  %sv_flags3086 = getelementptr inbounds %struct.sv, %struct.sv* %1734, i32 0, i32 2
  %1735 = load i32, i32* %sv_flags3086, align 4
  %and3087 = and i32 %1735, 536870912
  %tobool3088 = icmp ne i32 %and3087, 0
  br i1 %tobool3088, label %land.lhs.true3089, label %if.end3110

land.lhs.true3089:                                ; preds = %if.else3085
  %1736 = load %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_hints3090 = getelementptr inbounds %struct.cop, %struct.cop* %1736, i32 0, i32 10
  %1737 = load i32, i32* %cop_hints3090, align 8
  %add3091 = add i32 %1737, 0
  %and3092 = and i32 %add3091, 8
  %tobool3093 = icmp ne i32 %and3092, 0
  br i1 %tobool3093, label %if.then3094, label %if.end3110

if.then3094:                                      ; preds = %land.lhs.true3089
  %1738 = load %struct.sv*, %struct.sv** %ret, align 8
  %sv_flags3096 = getelementptr inbounds %struct.sv, %struct.sv* %1738, i32 0, i32 2
  %1739 = load i32, i32* %sv_flags3096, align 4
  %and3097 = and i32 %1739, 2098176
  %cmp3098 = icmp eq i32 %and3097, 1024
  br i1 %cmp3098, label %cond.true3100, label %cond.false3105

cond.true3100:                                    ; preds = %if.then3094
  %1740 = load %struct.sv*, %struct.sv** %ret, align 8
  %sv_any3101 = getelementptr inbounds %struct.sv, %struct.sv* %1740, i32 0, i32 0
  %1741 = load i8*, i8** %sv_any3101, align 8
  %1742 = bitcast i8* %1741 to %struct.xpv*
  %xpv_cur3102 = getelementptr inbounds %struct.xpv, %struct.xpv* %1742, i32 0, i32 2
  %1743 = load i64, i64* %xpv_cur3102, align 8
  store i64 %1743, i64* %len3095, align 8
  %1744 = load %struct.sv*, %struct.sv** %ret, align 8
  %sv_u3103 = getelementptr inbounds %struct.sv, %struct.sv* %1744, i32 0, i32 3
  %svu_pv3104 = bitcast %union.anon* %sv_u3103 to i8**
  %1745 = load i8*, i8** %svu_pv3104, align 8
  br label %cond.end3107

cond.false3105:                                   ; preds = %if.then3094
  %1746 = load %struct.sv*, %struct.sv** %ret, align 8
  %call3106 = call i8* @Perl_sv_2pv_flags(%struct.sv* %1746, i64* %len3095, i32 2)
  br label %cond.end3107

cond.end3107:                                     ; preds = %cond.false3105, %cond.true3100
  %cond3108 = phi i8* [ %1745, %cond.true3100 ], [ %call3106, %cond.false3105 ]
  store i8* %cond3108, i8** %p, align 8
  %1747 = load i8*, i8** %p, align 8
  %1748 = load i64, i64* %len3095, align 8
  %call3109 = call %struct.sv* @Perl_newSVpvn_flags(i8* %1747, i64 %1748, i32 524288)
  store %struct.sv* %call3109, %struct.sv** %ret, align 8
  br label %if.end3110

if.end3110:                                       ; preds = %cond.end3107, %land.lhs.true3089, %if.else3085
  %1749 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %intflags3111 = getelementptr inbounds %struct.regexp, %struct.regexp* %1749, i32 0, i32 13
  %1750 = load i32, i32* %intflags3111, align 4
  %and3112 = and i32 %1750, 32
  %tobool3113 = icmp ne i32 %and3112, 0
  br i1 %tobool3113, label %if.then3114, label %if.end3116

if.then3114:                                      ; preds = %if.end3110
  %1751 = load i32, i32* %pm_flags, align 4
  %or3115 = or i32 %1751, -2147483648
  store i32 %or3115, i32* %pm_flags, align 4
  br label %if.end3116

if.end3116:                                       ; preds = %if.then3114, %if.end3110
  %1752 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %engine = getelementptr inbounds %struct.regexp, %struct.regexp* %1752, i32 0, i32 4
  %1753 = load %struct.regexp_engine*, %struct.regexp_engine** %engine, align 8
  %op_comp = getelementptr inbounds %struct.regexp_engine, %struct.regexp_engine* %1753, i32 0, i32 11
  %1754 = load %struct.p5rx* (%struct.sv**, i32, %struct.op*, %struct.regexp_engine*, %struct.p5rx*, i8*, i32, i32)*, %struct.p5rx* (%struct.sv**, i32, %struct.op*, %struct.regexp_engine*, %struct.p5rx*, i8*, i32, i32)** %op_comp, align 8
  %1755 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %engine3117 = getelementptr inbounds %struct.regexp, %struct.regexp* %1755, i32 0, i32 4
  %1756 = load %struct.regexp_engine*, %struct.regexp_engine** %engine3117, align 8
  %1757 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %1758 = bitcast %struct.regnode* %1757 to %struct.regnode_2L*
  %arg23118 = getelementptr inbounds %struct.regnode_2L, %struct.regnode_2L* %1758, i32 0, i32 4
  %1759 = load i32, i32* %arg23118, align 4
  %1760 = load i32, i32* %pm_flags, align 4
  %call3119 = call %struct.p5rx* %1754(%struct.sv** %ret, i32 1, %struct.op* null, %struct.regexp_engine* %1756, %struct.p5rx* null, i8* null, i32 %1759, i32 %1760)
  store %struct.p5rx* %call3119, %struct.p5rx** %re_sv, align 8
  %1761 = load %struct.sv*, %struct.sv** %ret, align 8
  %sv_flags3120 = getelementptr inbounds %struct.sv, %struct.sv* %1761, i32 0, i32 2
  %1762 = load i32, i32* %sv_flags3120, align 4
  %and3121 = and i32 %1762, 2623488
  %tobool3122 = icmp ne i32 %and3121, 0
  br i1 %tobool3122, label %if.end3132, label %land.lhs.true3123

land.lhs.true3123:                                ; preds = %if.end3116
  %1763 = load %struct.sv*, %struct.sv** %ret, align 8
  %sv_flags3124 = getelementptr inbounds %struct.sv, %struct.sv* %1763, i32 0, i32 2
  %1764 = load i32, i32* %sv_flags3124, align 4
  %and3125 = and i32 %1764, 131072
  %tobool3126 = icmp ne i32 %and3125, 0
  br i1 %tobool3126, label %lor.lhs.false3127, label %if.then3131

lor.lhs.false3127:                                ; preds = %land.lhs.true3123
  %1765 = load %struct.sv*, %struct.sv** %ret, align 8
  %sv_flags3128 = getelementptr inbounds %struct.sv, %struct.sv* %1765, i32 0, i32 2
  %1766 = load i32, i32* %sv_flags3128, align 4
  %and3129 = and i32 %1766, 134283264
  %tobool3130 = icmp ne i32 %and3129, 0
  br i1 %tobool3130, label %if.then3131, label %if.end3132

if.then3131:                                      ; preds = %lor.lhs.false3127, %land.lhs.true3123
  %1767 = load %struct.sv*, %struct.sv** %ret, align 8
  %1768 = load %struct.p5rx*, %struct.p5rx** %re_sv, align 8
  %1769 = bitcast %struct.p5rx* %1768 to i8*
  %1770 = bitcast i8* %1769 to %struct.sv*
  call void @Perl_sv_magic(%struct.sv* %1767, %struct.sv* %1770, i32 114, i8* null, i32 0)
  br label %if.end3132

if.end3132:                                       ; preds = %if.then3131, %lor.lhs.false3127, %if.end3116
  br label %if.end3133

if.end3133:                                       ; preds = %if.end3132, %if.then3083
  %1771 = load %struct.p5rx*, %struct.p5rx** %re_sv, align 8
  %1772 = bitcast %struct.p5rx* %1771 to i8*
  %1773 = bitcast i8* %1772 to %struct.sv*
  %1774 = bitcast %struct.sv* %1773 to i8*
  call void @Perl_save_pushptr(i8* %1774, i32 11)
  %1775 = load %struct.p5rx*, %struct.p5rx** %re_sv, align 8
  %call3134 = call %struct.regexp* @S_ReANY(%struct.p5rx* %1775)
  store %struct.regexp* %call3134, %struct.regexp** %re, align 8
  %1776 = load %struct.regexp*, %struct.regexp** %re, align 8
  %extflags = getelementptr inbounds %struct.regexp, %struct.regexp* %1776, i32 0, i32 7
  %1777 = load i32, i32* %extflags, align 8
  %and3135 = and i32 %1777, -33554433
  store i32 %and3135, i32* %extflags, align 8
  %1778 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %subbeg = getelementptr inbounds %struct.regexp, %struct.regexp* %1778, i32 0, i32 18
  %1779 = load i8*, i8** %subbeg, align 8
  %1780 = load %struct.regexp*, %struct.regexp** %re, align 8
  %subbeg3136 = getelementptr inbounds %struct.regexp, %struct.regexp* %1780, i32 0, i32 18
  store i8* %1779, i8** %subbeg3136, align 8
  %1781 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %sublen = getelementptr inbounds %struct.regexp, %struct.regexp* %1781, i32 0, i32 20
  %1782 = load i64, i64* %sublen, align 8
  %1783 = load %struct.regexp*, %struct.regexp** %re, align 8
  %sublen3137 = getelementptr inbounds %struct.regexp, %struct.regexp* %1783, i32 0, i32 20
  store i64 %1782, i64* %sublen3137, align 8
  %1784 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %suboffset = getelementptr inbounds %struct.regexp, %struct.regexp* %1784, i32 0, i32 21
  %1785 = load i64, i64* %suboffset, align 8
  %1786 = load %struct.regexp*, %struct.regexp** %re, align 8
  %suboffset3138 = getelementptr inbounds %struct.regexp, %struct.regexp* %1786, i32 0, i32 21
  store i64 %1785, i64* %suboffset3138, align 8
  %1787 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %subcoffset = getelementptr inbounds %struct.regexp, %struct.regexp* %1787, i32 0, i32 22
  %1788 = load i64, i64* %subcoffset, align 8
  %1789 = load %struct.regexp*, %struct.regexp** %re, align 8
  %subcoffset3139 = getelementptr inbounds %struct.regexp, %struct.regexp* %1789, i32 0, i32 22
  store i64 %1788, i64* %subcoffset3139, align 8
  %1790 = load %struct.regexp*, %struct.regexp** %re, align 8
  %lastparen3140 = getelementptr inbounds %struct.regexp, %struct.regexp* %1790, i32 0, i32 15
  store i32 0, i32* %lastparen3140, align 8
  %1791 = load %struct.regexp*, %struct.regexp** %re, align 8
  %lastcloseparen3141 = getelementptr inbounds %struct.regexp, %struct.regexp* %1791, i32 0, i32 16
  store i32 0, i32* %lastcloseparen3141, align 4
  %1792 = load %struct.regexp*, %struct.regexp** %re, align 8
  %pprivate3142 = getelementptr inbounds %struct.regexp, %struct.regexp* %1792, i32 0, i32 14
  %1793 = load i8*, i8** %pprivate3142, align 8
  %1794 = bitcast i8* %1793 to %struct.regexp_internal*
  store %struct.regexp_internal* %1794, %struct.regexp_internal** %rei, align 8
  %1795 = load %struct.regexp_internal*, %struct.regexp_internal** %rei, align 8
  %program3143 = getelementptr inbounds %struct.regexp_internal, %struct.regexp_internal* %1795, i32 0, i32 6
  %arraydecay3144 = getelementptr inbounds [1 x %struct.regnode], [1 x %struct.regnode]* %program3143, i64 0, i64 0
  %add.ptr3145 = getelementptr inbounds %struct.regnode, %struct.regnode* %arraydecay3144, i64 1
  store %struct.regnode* %add.ptr3145, %struct.regnode** %startpoint2412, align 8
  %1796 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3146 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %1796, i32 0, i32 2
  %eval3147 = bitcast %union.anon.19* %u3146 to %struct.anon.24*
  %close_paren3148 = getelementptr inbounds %struct.anon.24, %struct.anon.24* %eval3147, i32 0, i32 6
  store i32 0, i32* %close_paren3148, align 8
  %1797 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %1798 = load i32, i32* %maxopenparen, align 4
  %call3149 = call i32 @S_regcppush(%struct.regexp* %1797, i32 0, i32 %1798)
  %1799 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3150 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %1799, i32 0, i32 2
  %eval3151 = bitcast %union.anon.19* %u3150 to %struct.anon.24*
  %cp3152 = getelementptr inbounds %struct.anon.24, %struct.anon.24* %eval3151, i32 0, i32 4
  store i32 %call3149, i32* %cp3152, align 8
  %1800 = load i32, i32* @PL_savestack_ix, align 4
  %1801 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3153 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %1801, i32 0, i32 2
  %eval3154 = bitcast %union.anon.19* %u3153 to %struct.anon.24*
  %lastcp3155 = getelementptr inbounds %struct.anon.24, %struct.anon.24* %eval3154, i32 0, i32 5
  store i32 %1800, i32* %lastcp3155, align 4
  store i32 0, i32* %maxopenparen, align 4
  br label %eval_recurse_doit

eval_recurse_doit:                                ; preds = %if.end3133, %if.end2450
  %1802 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %poscache_maxiter3156 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %1802, i32 0, i32 9
  store i32 0, i32* %poscache_maxiter3156, align 8
  %1803 = load %struct.p5rx*, %struct.p5rx** %re_sv, align 8
  %sv_flags3157 = getelementptr inbounds %struct.p5rx, %struct.p5rx* %1803, i32 0, i32 2
  %1804 = load i32, i32* %sv_flags3157, align 4
  %and3158 = and i32 %1804, 536870912
  %tobool3159 = icmp ne i32 %and3158, 0
  %1805 = zext i1 %tobool3159 to i64
  %cond3160 = select i1 %tobool3159, i32 1, i32 0
  %tobool3161 = icmp ne i32 %cond3160, 0
  %1806 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %is_utf8_pat3162 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %1806, i32 0, i32 13
  %frombool3163 = zext i1 %tobool3161 to i8
  store i8 %frombool3163, i8* %is_utf8_pat3162, align 1
  %frombool3164 = zext i1 %tobool3161 to i8
  store i8 %frombool3164, i8* %is_utf8_pat, align 1
  %1807 = load %struct.p5rx*, %struct.p5rx** %rex_sv, align 8
  %1808 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3165 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %1808, i32 0, i32 2
  %eval3166 = bitcast %union.anon.19* %u3165 to %struct.anon.24*
  %prev_rex = getelementptr inbounds %struct.anon.24, %struct.anon.24* %eval3166, i32 0, i32 3
  store %struct.p5rx* %1807, %struct.p5rx** %prev_rex, align 8
  %1809 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_curlyx, align 8
  %1810 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3167 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %1810, i32 0, i32 2
  %eval3168 = bitcast %union.anon.19* %u3167 to %struct.anon.24*
  %prev_curlyx = getelementptr inbounds %struct.anon.24, %struct.anon.24* %eval3168, i32 0, i32 2
  store %struct.regmatch_state* %1809, %struct.regmatch_state** %prev_curlyx, align 8
  %1811 = load %struct.p5rx*, %struct.p5rx** %re_sv, align 8
  store %struct.p5rx* %1811, %struct.p5rx** %rex_sv, align 8
  %1812 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %info_aux_eval3169 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %1812, i32 0, i32 8
  %1813 = load %struct.regmatch_info_aux_eval*, %struct.regmatch_info_aux_eval** %info_aux_eval3169, align 8
  %tobool3170 = icmp ne %struct.regmatch_info_aux_eval* %1813, null
  br i1 %tobool3170, label %if.then3171, label %if.end3174

if.then3171:                                      ; preds = %eval_recurse_doit
  %1814 = load %struct.p5rx*, %struct.p5rx** %rex_sv, align 8
  %1815 = bitcast %struct.p5rx* %1814 to i8*
  %1816 = bitcast i8* %1815 to %struct.sv*
  %call3172 = call %struct.sv* @S_SvREFCNT_inc(%struct.sv* %1816)
  %1817 = bitcast %struct.sv* %call3172 to %struct.p5rx*
  %1818 = load %struct.pmop*, %struct.pmop** @PL_reg_curpm, align 8
  %op_pmregexp = getelementptr inbounds %struct.pmop, %struct.pmop* %1818, i32 0, i32 9
  %1819 = load %struct.p5rx*, %struct.p5rx** %op_pmregexp, align 8
  %1820 = bitcast %struct.p5rx* %1819 to i8*
  %1821 = bitcast i8* %1820 to %struct.sv*
  call void @S_SvREFCNT_dec(%struct.sv* %1821)
  %1822 = load %struct.p5rx*, %struct.p5rx** %rex_sv, align 8
  %1823 = load %struct.pmop*, %struct.pmop** @PL_reg_curpm, align 8
  %op_pmregexp3173 = getelementptr inbounds %struct.pmop, %struct.pmop* %1823, i32 0, i32 9
  store %struct.p5rx* %1822, %struct.p5rx** %op_pmregexp3173, align 8
  br label %if.end3174

if.end3174:                                       ; preds = %if.then3171, %eval_recurse_doit
  %1824 = load %struct.regexp*, %struct.regexp** %re, align 8
  store %struct.regexp* %1824, %struct.regexp** %rex, align 8
  %1825 = load %struct.regexp_internal*, %struct.regexp_internal** %rei, align 8
  store %struct.regexp_internal* %1825, %struct.regexp_internal** %rexi, align 8
  store %struct.regmatch_state* null, %struct.regmatch_state** %cur_curlyx, align 8
  %1826 = load %struct.regnode*, %struct.regnode** %next, align 8
  %1827 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3175 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %1827, i32 0, i32 2
  %eval3176 = bitcast %union.anon.19* %u3175 to %struct.anon.24*
  %B = getelementptr inbounds %struct.anon.24, %struct.anon.24* %eval3176, i32 0, i32 7
  store %struct.regnode* %1826, %struct.regnode** %B, align 8
  %1828 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_eval, align 8
  %1829 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3177 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %1829, i32 0, i32 2
  %eval3178 = bitcast %union.anon.19* %u3177 to %struct.anon.24*
  %prev_eval = getelementptr inbounds %struct.anon.24, %struct.anon.24* %eval3178, i32 0, i32 1
  store %struct.regmatch_state* %1828, %struct.regmatch_state** %prev_eval, align 8
  %1830 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  store %struct.regmatch_state* %1830, %struct.regmatch_state** %cur_eval, align 8
  %1831 = load i8*, i8** %locinput, align 8
  store i8* %1831, i8** %pushinput, align 8
  %1832 = load %struct.regnode*, %struct.regnode** %startpoint2412, align 8
  store %struct.regnode* %1832, %struct.regnode** %scan, align 8
  %1833 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %resume_state3179 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %1833, i32 0, i32 0
  store i32 96, i32* %resume_state3179, align 8
  br label %push_yes_state

sw.bb3180:                                        ; preds = %cond.end45
  %1834 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3181 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %1834, i32 0, i32 2
  %eval3182 = bitcast %union.anon.19* %u3181 to %struct.anon.24*
  %prev_rex3183 = getelementptr inbounds %struct.anon.24, %struct.anon.24* %eval3182, i32 0, i32 3
  %1835 = load %struct.p5rx*, %struct.p5rx** %prev_rex3183, align 8
  store %struct.p5rx* %1835, %struct.p5rx** %rex_sv, align 8
  %1836 = load %struct.p5rx*, %struct.p5rx** %rex_sv, align 8
  %sv_flags3184 = getelementptr inbounds %struct.p5rx, %struct.p5rx* %1836, i32 0, i32 2
  %1837 = load i32, i32* %sv_flags3184, align 4
  %and3185 = and i32 %1837, 536870912
  %tobool3186 = icmp ne i32 %and3185, 0
  %1838 = zext i1 %tobool3186 to i64
  %cond3187 = select i1 %tobool3186, i32 1, i32 0
  %tobool3188 = icmp ne i32 %cond3187, 0
  %1839 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %is_utf8_pat3189 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %1839, i32 0, i32 13
  %frombool3190 = zext i1 %tobool3188 to i8
  store i8 %frombool3190, i8* %is_utf8_pat3189, align 1
  %frombool3191 = zext i1 %tobool3188 to i8
  store i8 %frombool3191, i8* %is_utf8_pat, align 1
  %1840 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %info_aux_eval3192 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %1840, i32 0, i32 8
  %1841 = load %struct.regmatch_info_aux_eval*, %struct.regmatch_info_aux_eval** %info_aux_eval3192, align 8
  %tobool3193 = icmp ne %struct.regmatch_info_aux_eval* %1841, null
  br i1 %tobool3193, label %if.then3194, label %if.end3198

if.then3194:                                      ; preds = %sw.bb3180
  %1842 = load %struct.p5rx*, %struct.p5rx** %rex_sv, align 8
  %1843 = bitcast %struct.p5rx* %1842 to i8*
  %1844 = bitcast i8* %1843 to %struct.sv*
  %call3195 = call %struct.sv* @S_SvREFCNT_inc(%struct.sv* %1844)
  %1845 = bitcast %struct.sv* %call3195 to %struct.p5rx*
  %1846 = load %struct.pmop*, %struct.pmop** @PL_reg_curpm, align 8
  %op_pmregexp3196 = getelementptr inbounds %struct.pmop, %struct.pmop* %1846, i32 0, i32 9
  %1847 = load %struct.p5rx*, %struct.p5rx** %op_pmregexp3196, align 8
  %1848 = bitcast %struct.p5rx* %1847 to i8*
  %1849 = bitcast i8* %1848 to %struct.sv*
  call void @S_SvREFCNT_dec(%struct.sv* %1849)
  %1850 = load %struct.p5rx*, %struct.p5rx** %rex_sv, align 8
  %1851 = load %struct.pmop*, %struct.pmop** @PL_reg_curpm, align 8
  %op_pmregexp3197 = getelementptr inbounds %struct.pmop, %struct.pmop* %1851, i32 0, i32 9
  store %struct.p5rx* %1850, %struct.p5rx** %op_pmregexp3197, align 8
  br label %if.end3198

if.end3198:                                       ; preds = %if.then3194, %sw.bb3180
  %1852 = load %struct.p5rx*, %struct.p5rx** %rex_sv, align 8
  %call3199 = call %struct.regexp* @S_ReANY(%struct.p5rx* %1852)
  store %struct.regexp* %call3199, %struct.regexp** %rex, align 8
  %1853 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %pprivate3200 = getelementptr inbounds %struct.regexp, %struct.regexp* %1853, i32 0, i32 14
  %1854 = load i8*, i8** %pprivate3200, align 8
  %1855 = bitcast i8* %1854 to %struct.regexp_internal*
  store %struct.regexp_internal* %1855, %struct.regexp_internal** %rexi, align 8
  %1856 = load %struct.gv*, %struct.gv** @PL_replgv, align 8
  %sv_u3201 = getelementptr inbounds %struct.gv, %struct.gv* %1856, i32 0, i32 3
  %svu_gp3202 = bitcast %union.anon.4* %sv_u3201 to %struct.gp**
  %1857 = load %struct.gp*, %struct.gp** %svu_gp3202, align 8
  %add.ptr3203 = getelementptr inbounds %struct.gp, %struct.gp* %1857, i64 0
  %gp_sv3204 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr3203, i32 0, i32 0
  %1858 = load %struct.sv*, %struct.sv** %gp_sv3204, align 8
  store %struct.sv* %1858, %struct.sv** %save_sv, align 8
  %1859 = load %struct.sv*, %struct.sv** %save_sv, align 8
  %1860 = bitcast %struct.sv* %1859 to i8*
  %1861 = bitcast i8* %1860 to %struct.sv*
  %call3205 = call %struct.sv* @S_SvREFCNT_inc(%struct.sv* %1861)
  br label %do.body3206

do.body3206:                                      ; preds = %if.end3198
  %1862 = load i32, i32* @PL_savestack_ix, align 4
  %1863 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3207 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %1863, i32 0, i32 2
  %eval3208 = bitcast %union.anon.19* %u3207 to %struct.anon.24*
  %cp3209 = getelementptr inbounds %struct.anon.24, %struct.anon.24* %eval3208, i32 0, i32 4
  %1864 = load i32, i32* %cp3209, align 8
  %cmp3210 = icmp sgt i32 %1862, %1864
  br i1 %cmp3210, label %if.then3212, label %if.end3216

if.then3212:                                      ; preds = %do.body3206
  %1865 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3213 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %1865, i32 0, i32 2
  %eval3214 = bitcast %union.anon.19* %u3213 to %struct.anon.24*
  %cp3215 = getelementptr inbounds %struct.anon.24, %struct.anon.24* %eval3214, i32 0, i32 4
  %1866 = load i32, i32* %cp3215, align 8
  call void @Perl_leave_scope(i32 %1866)
  br label %if.end3216

if.end3216:                                       ; preds = %if.then3212, %do.body3206
  br label %do.end3217

do.end3217:                                       ; preds = %if.end3216
  %1867 = load %struct.gv*, %struct.gv** @PL_replgv, align 8
  %sv_u3218 = getelementptr inbounds %struct.gv, %struct.gv* %1867, i32 0, i32 3
  %svu_gp3219 = bitcast %union.anon.4* %sv_u3218 to %struct.gp**
  %1868 = load %struct.gp*, %struct.gp** %svu_gp3219, align 8
  %add.ptr3220 = getelementptr inbounds %struct.gp, %struct.gp* %1868, i64 0
  %gp_sv3221 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr3220, i32 0, i32 0
  %1869 = load %struct.sv*, %struct.sv** %gp_sv3221, align 8
  %1870 = load %struct.sv*, %struct.sv** %save_sv, align 8
  call void @Perl_sv_setsv_flags(%struct.sv* %1869, %struct.sv* %1870, i32 1538)
  %1871 = load %struct.sv*, %struct.sv** %save_sv, align 8
  %1872 = bitcast %struct.sv* %1871 to i8*
  %1873 = bitcast i8* %1872 to %struct.sv*
  call void @S_SvREFCNT_dec(%struct.sv* %1873)
  %1874 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3222 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %1874, i32 0, i32 2
  %eval3223 = bitcast %union.anon.19* %u3222 to %struct.anon.24*
  %prev_eval3224 = getelementptr inbounds %struct.anon.24, %struct.anon.24* %eval3223, i32 0, i32 1
  %1875 = load %struct.regmatch_state*, %struct.regmatch_state** %prev_eval3224, align 8
  store %struct.regmatch_state* %1875, %struct.regmatch_state** %cur_eval, align 8
  %1876 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3225 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %1876, i32 0, i32 2
  %eval3226 = bitcast %union.anon.19* %u3225 to %struct.anon.24*
  %prev_curlyx3227 = getelementptr inbounds %struct.anon.24, %struct.anon.24* %eval3226, i32 0, i32 2
  %1877 = load %struct.regmatch_state*, %struct.regmatch_state** %prev_curlyx3227, align 8
  store %struct.regmatch_state* %1877, %struct.regmatch_state** %cur_curlyx, align 8
  %1878 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %poscache_maxiter3228 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %1878, i32 0, i32 9
  store i32 0, i32* %poscache_maxiter3228, align 8
  %1879 = load i32, i32* %nochange_depth, align 4
  %tobool3229 = icmp ne i32 %1879, 0
  br i1 %tobool3229, label %if.then3230, label %if.end3232

if.then3230:                                      ; preds = %do.end3217
  %1880 = load i32, i32* %nochange_depth, align 4
  %dec3231 = add i32 %1880, -1
  store i32 %dec3231, i32* %nochange_depth, align 4
  br label %if.end3232

if.end3232:                                       ; preds = %if.then3230, %do.end3217
  br label %yes6781

sw.bb3233:                                        ; preds = %cond.end45
  %1881 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3234 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %1881, i32 0, i32 2
  %eval3235 = bitcast %union.anon.19* %u3234 to %struct.anon.24*
  %prev_rex3236 = getelementptr inbounds %struct.anon.24, %struct.anon.24* %eval3235, i32 0, i32 3
  %1882 = load %struct.p5rx*, %struct.p5rx** %prev_rex3236, align 8
  store %struct.p5rx* %1882, %struct.p5rx** %rex_sv, align 8
  %1883 = load %struct.p5rx*, %struct.p5rx** %rex_sv, align 8
  %sv_flags3237 = getelementptr inbounds %struct.p5rx, %struct.p5rx* %1883, i32 0, i32 2
  %1884 = load i32, i32* %sv_flags3237, align 4
  %and3238 = and i32 %1884, 536870912
  %tobool3239 = icmp ne i32 %and3238, 0
  %1885 = zext i1 %tobool3239 to i64
  %cond3240 = select i1 %tobool3239, i32 1, i32 0
  %tobool3241 = icmp ne i32 %cond3240, 0
  %1886 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %is_utf8_pat3242 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %1886, i32 0, i32 13
  %frombool3243 = zext i1 %tobool3241 to i8
  store i8 %frombool3243, i8* %is_utf8_pat3242, align 1
  %frombool3244 = zext i1 %tobool3241 to i8
  store i8 %frombool3244, i8* %is_utf8_pat, align 1
  %1887 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %info_aux_eval3245 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %1887, i32 0, i32 8
  %1888 = load %struct.regmatch_info_aux_eval*, %struct.regmatch_info_aux_eval** %info_aux_eval3245, align 8
  %tobool3246 = icmp ne %struct.regmatch_info_aux_eval* %1888, null
  br i1 %tobool3246, label %if.then3247, label %if.end3251

if.then3247:                                      ; preds = %sw.bb3233
  %1889 = load %struct.p5rx*, %struct.p5rx** %rex_sv, align 8
  %1890 = bitcast %struct.p5rx* %1889 to i8*
  %1891 = bitcast i8* %1890 to %struct.sv*
  %call3248 = call %struct.sv* @S_SvREFCNT_inc(%struct.sv* %1891)
  %1892 = bitcast %struct.sv* %call3248 to %struct.p5rx*
  %1893 = load %struct.pmop*, %struct.pmop** @PL_reg_curpm, align 8
  %op_pmregexp3249 = getelementptr inbounds %struct.pmop, %struct.pmop* %1893, i32 0, i32 9
  %1894 = load %struct.p5rx*, %struct.p5rx** %op_pmregexp3249, align 8
  %1895 = bitcast %struct.p5rx* %1894 to i8*
  %1896 = bitcast i8* %1895 to %struct.sv*
  call void @S_SvREFCNT_dec(%struct.sv* %1896)
  %1897 = load %struct.p5rx*, %struct.p5rx** %rex_sv, align 8
  %1898 = load %struct.pmop*, %struct.pmop** @PL_reg_curpm, align 8
  %op_pmregexp3250 = getelementptr inbounds %struct.pmop, %struct.pmop* %1898, i32 0, i32 9
  store %struct.p5rx* %1897, %struct.p5rx** %op_pmregexp3250, align 8
  br label %if.end3251

if.end3251:                                       ; preds = %if.then3247, %sw.bb3233
  %1899 = load %struct.p5rx*, %struct.p5rx** %rex_sv, align 8
  %call3252 = call %struct.regexp* @S_ReANY(%struct.p5rx* %1899)
  store %struct.regexp* %call3252, %struct.regexp** %rex, align 8
  %1900 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %pprivate3253 = getelementptr inbounds %struct.regexp, %struct.regexp* %1900, i32 0, i32 14
  %1901 = load i8*, i8** %pprivate3253, align 8
  %1902 = bitcast i8* %1901 to %struct.regexp_internal*
  store %struct.regexp_internal* %1902, %struct.regexp_internal** %rexi, align 8
  br label %do.body3254

do.body3254:                                      ; preds = %if.end3251
  %1903 = load i32, i32* @PL_savestack_ix, align 4
  %1904 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3255 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %1904, i32 0, i32 2
  %eval3256 = bitcast %union.anon.19* %u3255 to %struct.anon.24*
  %lastcp3257 = getelementptr inbounds %struct.anon.24, %struct.anon.24* %eval3256, i32 0, i32 5
  %1905 = load i32, i32* %lastcp3257, align 4
  %cmp3258 = icmp sgt i32 %1903, %1905
  br i1 %cmp3258, label %if.then3260, label %if.end3264

if.then3260:                                      ; preds = %do.body3254
  %1906 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3261 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %1906, i32 0, i32 2
  %eval3262 = bitcast %union.anon.19* %u3261 to %struct.anon.24*
  %lastcp3263 = getelementptr inbounds %struct.anon.24, %struct.anon.24* %eval3262, i32 0, i32 5
  %1907 = load i32, i32* %lastcp3263, align 4
  call void @Perl_leave_scope(i32 %1907)
  br label %if.end3264

if.end3264:                                       ; preds = %if.then3260, %do.body3254
  br label %do.end3265

do.end3265:                                       ; preds = %if.end3264
  %1908 = load %struct.regexp*, %struct.regexp** %rex, align 8
  call void @S_regcppop(%struct.regexp* %1908, i32* %maxopenparen)
  %1909 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3266 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %1909, i32 0, i32 2
  %eval3267 = bitcast %union.anon.19* %u3266 to %struct.anon.24*
  %prev_eval3268 = getelementptr inbounds %struct.anon.24, %struct.anon.24* %eval3267, i32 0, i32 1
  %1910 = load %struct.regmatch_state*, %struct.regmatch_state** %prev_eval3268, align 8
  store %struct.regmatch_state* %1910, %struct.regmatch_state** %cur_eval, align 8
  %1911 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3269 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %1911, i32 0, i32 2
  %eval3270 = bitcast %union.anon.19* %u3269 to %struct.anon.24*
  %prev_curlyx3271 = getelementptr inbounds %struct.anon.24, %struct.anon.24* %eval3270, i32 0, i32 2
  %1912 = load %struct.regmatch_state*, %struct.regmatch_state** %prev_curlyx3271, align 8
  store %struct.regmatch_state* %1912, %struct.regmatch_state** %cur_curlyx, align 8
  %1913 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %poscache_maxiter3272 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %1913, i32 0, i32 9
  store i32 0, i32* %poscache_maxiter3272, align 8
  %1914 = load i32, i32* %nochange_depth, align 4
  %tobool3273 = icmp ne i32 %1914, 0
  br i1 %tobool3273, label %if.then3274, label %if.end3276

if.then3274:                                      ; preds = %do.end3265
  %1915 = load i32, i32* %nochange_depth, align 4
  %dec3275 = add i32 %1915, -1
  store i32 %dec3275, i32* %nochange_depth, align 4
  br label %if.end3276

if.end3276:                                       ; preds = %if.then3274, %do.end3265
  br label %no_silent

sw.bb3277:                                        ; preds = %cond.end45
  %1916 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %1917 = bitcast %struct.regnode* %1916 to %struct.regnode_1*
  %arg13278 = getelementptr inbounds %struct.regnode_1, %struct.regnode_1* %1917, i32 0, i32 3
  %1918 = load i32, i32* %arg13278, align 4
  store i32 %1918, i32* %n, align 4
  %1919 = load i8*, i8** %locinput, align 8
  %1920 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg3279 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %1920, i32 0, i32 1
  %1921 = load i8*, i8** %strbeg3279, align 8
  %sub.ptr.lhs.cast3280 = ptrtoint i8* %1919 to i64
  %sub.ptr.rhs.cast3281 = ptrtoint i8* %1921 to i64
  %sub.ptr.sub3282 = sub i64 %sub.ptr.lhs.cast3280, %sub.ptr.rhs.cast3281
  %1922 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %offs3283 = getelementptr inbounds %struct.regexp, %struct.regexp* %1922, i32 0, i32 17
  %1923 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %offs3283, align 8
  %1924 = load i32, i32* %n, align 4
  %idxprom3284 = zext i32 %1924 to i64
  %arrayidx3285 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %1923, i64 %idxprom3284
  %start_tmp = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %arrayidx3285, i32 0, i32 2
  store i64 %sub.ptr.sub3282, i64* %start_tmp, align 8
  %1925 = load i32, i32* %n, align 4
  %1926 = load i32, i32* %maxopenparen, align 4
  %cmp3286 = icmp ugt i32 %1925, %1926
  br i1 %cmp3286, label %if.then3288, label %if.end3289

if.then3288:                                      ; preds = %sw.bb3277
  %1927 = load i32, i32* %n, align 4
  store i32 %1927, i32* %maxopenparen, align 4
  br label %if.end3289

if.end3289:                                       ; preds = %if.then3288, %sw.bb3277
  %1928 = load i32, i32* %n, align 4
  store i32 %1928, i32* %lastopen, align 4
  br label %sw.epilog6768

sw.bb3290:                                        ; preds = %cond.end45
  %1929 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %1930 = bitcast %struct.regnode* %1929 to %struct.regnode_1*
  %arg13291 = getelementptr inbounds %struct.regnode_1, %struct.regnode_1* %1930, i32 0, i32 3
  %1931 = load i32, i32* %arg13291, align 4
  store i32 %1931, i32* %n, align 4
  %1932 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %offs3292 = getelementptr inbounds %struct.regexp, %struct.regexp* %1932, i32 0, i32 17
  %1933 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %offs3292, align 8
  %1934 = load i32, i32* %n, align 4
  %idxprom3293 = zext i32 %1934 to i64
  %arrayidx3294 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %1933, i64 %idxprom3293
  %start_tmp3295 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %arrayidx3294, i32 0, i32 2
  %1935 = load i64, i64* %start_tmp3295, align 8
  %1936 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %offs3296 = getelementptr inbounds %struct.regexp, %struct.regexp* %1936, i32 0, i32 17
  %1937 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %offs3296, align 8
  %1938 = load i32, i32* %n, align 4
  %idxprom3297 = zext i32 %1938 to i64
  %arrayidx3298 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %1937, i64 %idxprom3297
  %start3299 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %arrayidx3298, i32 0, i32 0
  store i64 %1935, i64* %start3299, align 8
  %1939 = load i8*, i8** %locinput, align 8
  %1940 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg3300 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %1940, i32 0, i32 1
  %1941 = load i8*, i8** %strbeg3300, align 8
  %sub.ptr.lhs.cast3301 = ptrtoint i8* %1939 to i64
  %sub.ptr.rhs.cast3302 = ptrtoint i8* %1941 to i64
  %sub.ptr.sub3303 = sub i64 %sub.ptr.lhs.cast3301, %sub.ptr.rhs.cast3302
  %1942 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %offs3304 = getelementptr inbounds %struct.regexp, %struct.regexp* %1942, i32 0, i32 17
  %1943 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %offs3304, align 8
  %1944 = load i32, i32* %n, align 4
  %idxprom3305 = zext i32 %1944 to i64
  %arrayidx3306 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %1943, i64 %idxprom3305
  %end3307 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %arrayidx3306, i32 0, i32 1
  store i64 %sub.ptr.sub3303, i64* %end3307, align 8
  %1945 = load i32, i32* %n, align 4
  %1946 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %lastparen3308 = getelementptr inbounds %struct.regexp, %struct.regexp* %1946, i32 0, i32 15
  %1947 = load i32, i32* %lastparen3308, align 8
  %cmp3309 = icmp ugt i32 %1945, %1947
  br i1 %cmp3309, label %if.then3311, label %if.end3313

if.then3311:                                      ; preds = %sw.bb3290
  %1948 = load i32, i32* %n, align 4
  %1949 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %lastparen3312 = getelementptr inbounds %struct.regexp, %struct.regexp* %1949, i32 0, i32 15
  store i32 %1948, i32* %lastparen3312, align 8
  br label %if.end3313

if.end3313:                                       ; preds = %if.then3311, %sw.bb3290
  %1950 = load i32, i32* %n, align 4
  %1951 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %lastcloseparen3314 = getelementptr inbounds %struct.regexp, %struct.regexp* %1951, i32 0, i32 16
  store i32 %1950, i32* %lastcloseparen3314, align 4
  %1952 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_eval, align 8
  %tobool3315 = icmp ne %struct.regmatch_state* %1952, null
  br i1 %tobool3315, label %land.lhs.true3316, label %if.end3323

land.lhs.true3316:                                ; preds = %if.end3313
  %1953 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_eval, align 8
  %u3317 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %1953, i32 0, i32 2
  %eval3318 = bitcast %union.anon.19* %u3317 to %struct.anon.24*
  %close_paren3319 = getelementptr inbounds %struct.anon.24, %struct.anon.24* %eval3318, i32 0, i32 6
  %1954 = load i32, i32* %close_paren3319, align 8
  %1955 = load i32, i32* %n, align 4
  %cmp3320 = icmp eq i32 %1954, %1955
  br i1 %cmp3320, label %if.then3322, label %if.end3323

if.then3322:                                      ; preds = %land.lhs.true3316
  br label %fake_end

if.end3323:                                       ; preds = %land.lhs.true3316, %if.end3313
  br label %sw.epilog6768

sw.bb3324:                                        ; preds = %cond.end45
  %1956 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %1957 = bitcast %struct.regnode* %1956 to %struct.regnode_1*
  %arg13325 = getelementptr inbounds %struct.regnode_1, %struct.regnode_1* %1957, i32 0, i32 3
  %1958 = load i32, i32* %arg13325, align 4
  %tobool3326 = icmp ne i32 %1958, 0
  br i1 %tobool3326, label %if.then3327, label %if.end3388

if.then3327:                                      ; preds = %sw.bb3324
  %1959 = load %struct.regnode*, %struct.regnode** %scan, align 8
  store %struct.regnode* %1959, %struct.regnode** %cursor, align 8
  br label %for.cond3328

for.cond3328:                                     ; preds = %for.inc3385, %if.then3327
  %1960 = load %struct.regnode*, %struct.regnode** %cursor, align 8
  %tobool3329 = icmp ne %struct.regnode* %1960, null
  br i1 %tobool3329, label %land.rhs3330, label %land.end3335

land.rhs3330:                                     ; preds = %for.cond3328
  %1961 = load %struct.regnode*, %struct.regnode** %cursor, align 8
  %type3331 = getelementptr inbounds %struct.regnode, %struct.regnode* %1961, i32 0, i32 1
  %1962 = load i8, i8* %type3331, align 1
  %conv3332 = zext i8 %1962 to i32
  %cmp3333 = icmp ne i32 %conv3332, 0
  br label %land.end3335

land.end3335:                                     ; preds = %land.rhs3330, %for.cond3328
  %1963 = phi i1 [ false, %for.cond3328 ], [ %cmp3333, %land.rhs3330 ]
  br i1 %1963, label %for.body3337, label %for.end3387

for.body3337:                                     ; preds = %land.end3335
  %1964 = load %struct.regnode*, %struct.regnode** %cursor, align 8
  %type3338 = getelementptr inbounds %struct.regnode, %struct.regnode* %1964, i32 0, i32 1
  %1965 = load i8, i8* %type3338, align 1
  %conv3339 = zext i8 %1965 to i32
  %cmp3340 = icmp eq i32 %conv3339, 50
  br i1 %cmp3340, label %if.then3342, label %if.end3384

if.then3342:                                      ; preds = %for.body3337
  %1966 = load %struct.regnode*, %struct.regnode** %cursor, align 8
  %1967 = bitcast %struct.regnode* %1966 to %struct.regnode_1*
  %arg13343 = getelementptr inbounds %struct.regnode_1, %struct.regnode_1* %1967, i32 0, i32 3
  %1968 = load i32, i32* %arg13343, align 4
  store i32 %1968, i32* %n, align 4
  %1969 = load i32, i32* %n, align 4
  %1970 = load i32, i32* %lastopen, align 4
  %cmp3344 = icmp ule i32 %1969, %1970
  br i1 %cmp3344, label %if.then3346, label %if.end3383

if.then3346:                                      ; preds = %if.then3342
  %1971 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %offs3347 = getelementptr inbounds %struct.regexp, %struct.regexp* %1971, i32 0, i32 17
  %1972 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %offs3347, align 8
  %1973 = load i32, i32* %n, align 4
  %idxprom3348 = zext i32 %1973 to i64
  %arrayidx3349 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %1972, i64 %idxprom3348
  %start_tmp3350 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %arrayidx3349, i32 0, i32 2
  %1974 = load i64, i64* %start_tmp3350, align 8
  %1975 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %offs3351 = getelementptr inbounds %struct.regexp, %struct.regexp* %1975, i32 0, i32 17
  %1976 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %offs3351, align 8
  %1977 = load i32, i32* %n, align 4
  %idxprom3352 = zext i32 %1977 to i64
  %arrayidx3353 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %1976, i64 %idxprom3352
  %start3354 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %arrayidx3353, i32 0, i32 0
  store i64 %1974, i64* %start3354, align 8
  %1978 = load i8*, i8** %locinput, align 8
  %1979 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg3355 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %1979, i32 0, i32 1
  %1980 = load i8*, i8** %strbeg3355, align 8
  %sub.ptr.lhs.cast3356 = ptrtoint i8* %1978 to i64
  %sub.ptr.rhs.cast3357 = ptrtoint i8* %1980 to i64
  %sub.ptr.sub3358 = sub i64 %sub.ptr.lhs.cast3356, %sub.ptr.rhs.cast3357
  %1981 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %offs3359 = getelementptr inbounds %struct.regexp, %struct.regexp* %1981, i32 0, i32 17
  %1982 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %offs3359, align 8
  %1983 = load i32, i32* %n, align 4
  %idxprom3360 = zext i32 %1983 to i64
  %arrayidx3361 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %1982, i64 %idxprom3360
  %end3362 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %arrayidx3361, i32 0, i32 1
  store i64 %sub.ptr.sub3358, i64* %end3362, align 8
  %1984 = load i32, i32* %n, align 4
  %1985 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %lastparen3363 = getelementptr inbounds %struct.regexp, %struct.regexp* %1985, i32 0, i32 15
  %1986 = load i32, i32* %lastparen3363, align 8
  %cmp3364 = icmp ugt i32 %1984, %1986
  br i1 %cmp3364, label %if.then3366, label %if.end3368

if.then3366:                                      ; preds = %if.then3346
  %1987 = load i32, i32* %n, align 4
  %1988 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %lastparen3367 = getelementptr inbounds %struct.regexp, %struct.regexp* %1988, i32 0, i32 15
  store i32 %1987, i32* %lastparen3367, align 8
  br label %if.end3368

if.end3368:                                       ; preds = %if.then3366, %if.then3346
  %1989 = load i32, i32* %n, align 4
  %1990 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %lastcloseparen3369 = getelementptr inbounds %struct.regexp, %struct.regexp* %1990, i32 0, i32 16
  store i32 %1989, i32* %lastcloseparen3369, align 4
  %1991 = load i32, i32* %n, align 4
  %1992 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %1993 = bitcast %struct.regnode* %1992 to %struct.regnode_1*
  %arg13370 = getelementptr inbounds %struct.regnode_1, %struct.regnode_1* %1993, i32 0, i32 3
  %1994 = load i32, i32* %arg13370, align 4
  %cmp3371 = icmp eq i32 %1991, %1994
  br i1 %cmp3371, label %if.then3381, label %lor.lhs.false3373

lor.lhs.false3373:                                ; preds = %if.end3368
  %1995 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_eval, align 8
  %tobool3374 = icmp ne %struct.regmatch_state* %1995, null
  br i1 %tobool3374, label %land.lhs.true3375, label %if.end3382

land.lhs.true3375:                                ; preds = %lor.lhs.false3373
  %1996 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_eval, align 8
  %u3376 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %1996, i32 0, i32 2
  %eval3377 = bitcast %union.anon.19* %u3376 to %struct.anon.24*
  %close_paren3378 = getelementptr inbounds %struct.anon.24, %struct.anon.24* %eval3377, i32 0, i32 6
  %1997 = load i32, i32* %close_paren3378, align 8
  %1998 = load i32, i32* %n, align 4
  %cmp3379 = icmp eq i32 %1997, %1998
  br i1 %cmp3379, label %if.then3381, label %if.end3382

if.then3381:                                      ; preds = %land.lhs.true3375, %if.end3368
  br label %for.end3387

if.end3382:                                       ; preds = %land.lhs.true3375, %lor.lhs.false3373
  br label %if.end3383

if.end3383:                                       ; preds = %if.end3382, %if.then3342
  br label %if.end3384

if.end3384:                                       ; preds = %if.end3383, %for.body3337
  br label %for.inc3385

for.inc3385:                                      ; preds = %if.end3384
  %1999 = load %struct.regnode*, %struct.regnode** %cursor, align 8
  %call3386 = call %struct.regnode* @Perl_regnext(%struct.regnode* %1999)
  store %struct.regnode* %call3386, %struct.regnode** %cursor, align 8
  br label %for.cond3328

for.end3387:                                      ; preds = %if.then3381, %land.end3335
  br label %if.end3388

if.end3388:                                       ; preds = %for.end3387, %sw.bb3324
  br label %fake_end

sw.bb3389:                                        ; preds = %cond.end45
  %2000 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %2001 = bitcast %struct.regnode* %2000 to %struct.regnode_1*
  %arg13390 = getelementptr inbounds %struct.regnode_1, %struct.regnode_1* %2001, i32 0, i32 3
  %2002 = load i32, i32* %arg13390, align 4
  store i32 %2002, i32* %n, align 4
  %2003 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %lastparen3391 = getelementptr inbounds %struct.regexp, %struct.regexp* %2003, i32 0, i32 15
  %2004 = load i32, i32* %lastparen3391, align 8
  %2005 = load i32, i32* %n, align 4
  %cmp3392 = icmp uge i32 %2004, %2005
  br i1 %cmp3392, label %land.rhs3394, label %land.end3401

land.rhs3394:                                     ; preds = %sw.bb3389
  %2006 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %offs3395 = getelementptr inbounds %struct.regexp, %struct.regexp* %2006, i32 0, i32 17
  %2007 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %offs3395, align 8
  %2008 = load i32, i32* %n, align 4
  %idxprom3396 = zext i32 %2008 to i64
  %arrayidx3397 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %2007, i64 %idxprom3396
  %end3398 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %arrayidx3397, i32 0, i32 1
  %2009 = load i64, i64* %end3398, align 8
  %cmp3399 = icmp ne i64 %2009, -1
  br label %land.end3401

land.end3401:                                     ; preds = %land.rhs3394, %sw.bb3389
  %2010 = phi i1 [ false, %sw.bb3389 ], [ %cmp3399, %land.rhs3394 ]
  %2011 = zext i1 %2010 to i64
  %cond3403 = select i1 %2010, i32 1, i32 0
  %tobool3404 = icmp ne i32 %cond3403, 0
  %frombool3405 = zext i1 %tobool3404 to i8
  store i8 %frombool3405, i8* %sw, align 1
  br label %sw.epilog6768

sw.bb3406:                                        ; preds = %cond.end45
  %2012 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %2013 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %call3407 = call i32 @S_reg_check_named_buff_matched(%struct.regexp* %2012, %struct.regnode* %2013)
  %cmp3408 = icmp slt i32 0, %call3407
  %2014 = zext i1 %cmp3408 to i64
  %cond3410 = select i1 %cmp3408, i32 1, i32 0
  %tobool3411 = icmp ne i32 %cond3410, 0
  %frombool3412 = zext i1 %tobool3411 to i8
  store i8 %frombool3412, i8* %sw, align 1
  br label %sw.epilog6768

sw.bb3413:                                        ; preds = %cond.end45
  %2015 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %2016 = bitcast %struct.regnode* %2015 to %struct.regnode_1*
  %arg13414 = getelementptr inbounds %struct.regnode_1, %struct.regnode_1* %2016, i32 0, i32 3
  %2017 = load i32, i32* %arg13414, align 4
  store i32 %2017, i32* %n, align 4
  %2018 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_eval, align 8
  %tobool3415 = icmp ne %struct.regmatch_state* %2018, null
  br i1 %tobool3415, label %land.rhs3416, label %land.end3426

land.rhs3416:                                     ; preds = %sw.bb3413
  %2019 = load i32, i32* %n, align 4
  %tobool3417 = icmp ne i32 %2019, 0
  br i1 %tobool3417, label %lor.rhs3418, label %lor.end3424

lor.rhs3418:                                      ; preds = %land.rhs3416
  %2020 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_eval, align 8
  %u3419 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2020, i32 0, i32 2
  %eval3420 = bitcast %union.anon.19* %u3419 to %struct.anon.24*
  %close_paren3421 = getelementptr inbounds %struct.anon.24, %struct.anon.24* %eval3420, i32 0, i32 6
  %2021 = load i32, i32* %close_paren3421, align 8
  %2022 = load i32, i32* %n, align 4
  %cmp3422 = icmp eq i32 %2021, %2022
  br label %lor.end3424

lor.end3424:                                      ; preds = %lor.rhs3418, %land.rhs3416
  %2023 = phi i1 [ true, %land.rhs3416 ], [ %cmp3422, %lor.rhs3418 ]
  br label %land.end3426

land.end3426:                                     ; preds = %lor.end3424, %sw.bb3413
  %2024 = phi i1 [ false, %sw.bb3413 ], [ %2023, %lor.end3424 ]
  %frombool3428 = zext i1 %2024 to i8
  store i8 %frombool3428, i8* %sw, align 1
  br label %sw.epilog6768

sw.bb3429:                                        ; preds = %cond.end45
  store i8 0, i8* %sw, align 1
  br label %sw.epilog6768

sw.bb3430:                                        ; preds = %cond.end45
  %2025 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %poscache_maxiter3431 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %2025, i32 0, i32 9
  %2026 = load i32, i32* %poscache_maxiter3431, align 8
  %2027 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %poscache_iter3432 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %2027, i32 0, i32 10
  store i32 %2026, i32* %poscache_iter3432, align 4
  %2028 = load i8, i8* %sw, align 1
  %tobool3433 = trunc i8 %2028 to i1
  br i1 %tobool3433, label %if.then3434, label %if.else3437

if.then3434:                                      ; preds = %sw.bb3430
  %2029 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %add.ptr3435 = getelementptr inbounds %struct.regnode, %struct.regnode* %2029, i64 1
  %add.ptr3436 = getelementptr inbounds %struct.regnode, %struct.regnode* %add.ptr3435, i64 1
  store %struct.regnode* %add.ptr3436, %struct.regnode** %next, align 8
  br label %if.end3449

if.else3437:                                      ; preds = %sw.bb3430
  %2030 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %2031 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %2032 = bitcast %struct.regnode* %2031 to %struct.regnode_1*
  %arg13438 = getelementptr inbounds %struct.regnode_1, %struct.regnode_1* %2032, i32 0, i32 3
  %2033 = load i32, i32* %arg13438, align 4
  %idx.ext3439 = zext i32 %2033 to i64
  %add.ptr3440 = getelementptr inbounds %struct.regnode, %struct.regnode* %2030, i64 %idx.ext3439
  store %struct.regnode* %add.ptr3440, %struct.regnode** %next, align 8
  %2034 = load %struct.regnode*, %struct.regnode** %next, align 8
  %type3441 = getelementptr inbounds %struct.regnode, %struct.regnode* %2034, i32 0, i32 1
  %2035 = load i8, i8* %type3441, align 1
  %conv3442 = zext i8 %2035 to i32
  %cmp3443 = icmp eq i32 %conv3442, 66
  br i1 %cmp3443, label %if.then3445, label %if.end3448

if.then3445:                                      ; preds = %if.else3437
  %2036 = load %struct.regnode*, %struct.regnode** %next, align 8
  %add.ptr3446 = getelementptr inbounds %struct.regnode, %struct.regnode* %2036, i64 1
  %add.ptr3447 = getelementptr inbounds %struct.regnode, %struct.regnode* %add.ptr3446, i64 1
  store %struct.regnode* %add.ptr3447, %struct.regnode** %next, align 8
  br label %if.end3448

if.end3448:                                       ; preds = %if.then3445, %if.else3437
  br label %if.end3449

if.end3449:                                       ; preds = %if.end3448, %if.then3434
  br label %sw.epilog6768

sw.bb3450:                                        ; preds = %cond.end45
  %2037 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %flags3451 = getelementptr inbounds %struct.regnode, %struct.regnode* %2037, i32 0, i32 0
  %2038 = load i8, i8* %flags3451, align 2
  %conv3452 = zext i8 %2038 to i32
  store i32 %conv3452, i32* %logical, align 4
  br label %sw.epilog6768

sw.bb3453:                                        ; preds = %cond.end45
  %2039 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %flags3454 = getelementptr inbounds %struct.regnode, %struct.regnode* %2039, i32 0, i32 0
  %2040 = load i8, i8* %flags3454, align 2
  %conv3455 = zext i8 %2040 to i32
  store i32 %conv3455, i32* %parenfloor, align 4
  %2041 = load %struct.regnode*, %struct.regnode** %next, align 8
  %add.ptr3456 = getelementptr inbounds %struct.regnode, %struct.regnode* %2041, i64 -1
  %type3457 = getelementptr inbounds %struct.regnode, %struct.regnode* %add.ptr3456, i32 0, i32 1
  %2042 = load i8, i8* %type3457, align 1
  %conv3458 = zext i8 %2042 to i32
  %cmp3459 = icmp eq i32 %conv3458, 40
  br i1 %cmp3459, label %if.then3461, label %if.end3465

if.then3461:                                      ; preds = %sw.bb3453
  %2043 = load %struct.regnode*, %struct.regnode** %next, align 8
  %2044 = bitcast %struct.regnode* %2043 to %struct.regnode_1*
  %arg13462 = getelementptr inbounds %struct.regnode_1, %struct.regnode_1* %2044, i32 0, i32 3
  %2045 = load i32, i32* %arg13462, align 4
  %2046 = load %struct.regnode*, %struct.regnode** %next, align 8
  %idx.ext3463 = zext i32 %2045 to i64
  %add.ptr3464 = getelementptr inbounds %struct.regnode, %struct.regnode* %2046, i64 %idx.ext3463
  store %struct.regnode* %add.ptr3464, %struct.regnode** %next, align 8
  br label %if.end3465

if.end3465:                                       ; preds = %if.then3461, %sw.bb3453
  %2047 = load i32, i32* %parenfloor, align 4
  %2048 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %lastparen3466 = getelementptr inbounds %struct.regexp, %struct.regexp* %2048, i32 0, i32 15
  %2049 = load i32, i32* %lastparen3466, align 8
  %cmp3467 = icmp sgt i32 %2047, %2049
  br i1 %cmp3467, label %if.then3469, label %if.end3471

if.then3469:                                      ; preds = %if.end3465
  %2050 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %lastparen3470 = getelementptr inbounds %struct.regexp, %struct.regexp* %2050, i32 0, i32 15
  %2051 = load i32, i32* %lastparen3470, align 8
  store i32 %2051, i32* %parenfloor, align 4
  br label %if.end3471

if.end3471:                                       ; preds = %if.then3469, %if.end3465
  %2052 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_curlyx, align 8
  %2053 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3472 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2053, i32 0, i32 2
  %curlyx = bitcast %union.anon.19* %u3472 to %struct.anon.28*
  %prev_curlyx3473 = getelementptr inbounds %struct.anon.28, %struct.anon.28* %curlyx, i32 0, i32 1
  store %struct.regmatch_state* %2052, %struct.regmatch_state** %prev_curlyx3473, align 8
  %2054 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  store %struct.regmatch_state* %2054, %struct.regmatch_state** %cur_curlyx, align 8
  %2055 = load i32, i32* @PL_savestack_ix, align 4
  %2056 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3474 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2056, i32 0, i32 2
  %curlyx3475 = bitcast %union.anon.19* %u3474 to %struct.anon.28*
  %cp3476 = getelementptr inbounds %struct.anon.28, %struct.anon.28* %curlyx3475, i32 0, i32 4
  store i32 %2055, i32* %cp3476, align 8
  %2057 = load i32, i32* %parenfloor, align 4
  %2058 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3477 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2058, i32 0, i32 2
  %curlyx3478 = bitcast %union.anon.19* %u3477 to %struct.anon.28*
  %parenfloor3479 = getelementptr inbounds %struct.anon.28, %struct.anon.28* %curlyx3478, i32 0, i32 6
  store i32 %2057, i32* %parenfloor3479, align 8
  %2059 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %2060 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3480 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2060, i32 0, i32 2
  %curlyx3481 = bitcast %union.anon.19* %u3480 to %struct.anon.28*
  %me3482 = getelementptr inbounds %struct.anon.28, %struct.anon.28* %curlyx3481, i32 0, i32 2
  store %struct.regnode* %2059, %struct.regnode** %me3482, align 8
  %2061 = load %struct.regnode*, %struct.regnode** %next, align 8
  %2062 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3483 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2062, i32 0, i32 2
  %curlyx3484 = bitcast %union.anon.19* %u3483 to %struct.anon.28*
  %B3485 = getelementptr inbounds %struct.anon.28, %struct.anon.28* %curlyx3484, i32 0, i32 3
  store %struct.regnode* %2061, %struct.regnode** %B3485, align 8
  %2063 = load i8, i8* %minmod, align 1
  %tobool3486 = trunc i8 %2063 to i1
  %2064 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3487 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2064, i32 0, i32 2
  %curlyx3488 = bitcast %union.anon.19* %u3487 to %struct.anon.28*
  %minmod3489 = getelementptr inbounds %struct.anon.28, %struct.anon.28* %curlyx3488, i32 0, i32 5
  %frombool3490 = zext i1 %tobool3486 to i8
  store i8 %frombool3490, i8* %minmod3489, align 4
  store i8 0, i8* %minmod, align 1
  %2065 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3491 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2065, i32 0, i32 2
  %curlyx3492 = bitcast %union.anon.19* %u3491 to %struct.anon.28*
  %count = getelementptr inbounds %struct.anon.28, %struct.anon.28* %curlyx3492, i32 0, i32 7
  store i32 -1, i32* %count, align 4
  %2066 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3493 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2066, i32 0, i32 2
  %curlyx3494 = bitcast %union.anon.19* %u3493 to %struct.anon.28*
  %lastloc = getelementptr inbounds %struct.anon.28, %struct.anon.28* %curlyx3494, i32 0, i32 8
  store i8* null, i8** %lastloc, align 8
  %2067 = load i8*, i8** %locinput, align 8
  store i8* %2067, i8** %pushinput, align 8
  %2068 = load %struct.regnode*, %struct.regnode** %next, align 8
  %add.ptr3495 = getelementptr inbounds %struct.regnode, %struct.regnode* %2068, i64 -1
  store %struct.regnode* %add.ptr3495, %struct.regnode** %scan, align 8
  %2069 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %resume_state3496 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2069, i32 0, i32 0
  store i32 98, i32* %resume_state3496, align 8
  br label %push_yes_state

sw.bb3497:                                        ; preds = %cond.end45
  %2070 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3498 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2070, i32 0, i32 2
  %curlyx3499 = bitcast %union.anon.19* %u3498 to %struct.anon.28*
  %prev_curlyx3500 = getelementptr inbounds %struct.anon.28, %struct.anon.28* %curlyx3499, i32 0, i32 1
  %2071 = load %struct.regmatch_state*, %struct.regmatch_state** %prev_curlyx3500, align 8
  store %struct.regmatch_state* %2071, %struct.regmatch_state** %cur_curlyx, align 8
  br label %yes6781

sw.bb3501:                                        ; preds = %cond.end45
  br label %do.body3502

do.body3502:                                      ; preds = %sw.bb3501
  %2072 = load i32, i32* @PL_savestack_ix, align 4
  %2073 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3503 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2073, i32 0, i32 2
  %curlyx3504 = bitcast %union.anon.19* %u3503 to %struct.anon.28*
  %cp3505 = getelementptr inbounds %struct.anon.28, %struct.anon.28* %curlyx3504, i32 0, i32 4
  %2074 = load i32, i32* %cp3505, align 8
  %cmp3506 = icmp sgt i32 %2072, %2074
  br i1 %cmp3506, label %if.then3508, label %if.end3512

if.then3508:                                      ; preds = %do.body3502
  %2075 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3509 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2075, i32 0, i32 2
  %curlyx3510 = bitcast %union.anon.19* %u3509 to %struct.anon.28*
  %cp3511 = getelementptr inbounds %struct.anon.28, %struct.anon.28* %curlyx3510, i32 0, i32 4
  %2076 = load i32, i32* %cp3511, align 8
  call void @Perl_leave_scope(i32 %2076)
  br label %if.end3512

if.end3512:                                       ; preds = %if.then3508, %do.body3502
  br label %do.end3513

do.end3513:                                       ; preds = %if.end3512
  %2077 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3514 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2077, i32 0, i32 2
  %curlyx3515 = bitcast %union.anon.19* %u3514 to %struct.anon.28*
  %prev_curlyx3516 = getelementptr inbounds %struct.anon.28, %struct.anon.28* %curlyx3515, i32 0, i32 1
  %2078 = load %struct.regmatch_state*, %struct.regmatch_state** %prev_curlyx3516, align 8
  store %struct.regmatch_state* %2078, %struct.regmatch_state** %cur_curlyx, align 8
  br label %no

sw.bb3517:                                        ; preds = %cond.end45
  %2079 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_curlyx, align 8
  %u3520 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2079, i32 0, i32 2
  %curlyx3521 = bitcast %union.anon.19* %u3520 to %struct.anon.28*
  %me3522 = getelementptr inbounds %struct.anon.28, %struct.anon.28* %curlyx3521, i32 0, i32 2
  %2080 = load %struct.regnode*, %struct.regnode** %me3522, align 8
  %2081 = bitcast %struct.regnode* %2080 to %struct.regnode_2*
  %arg13523 = getelementptr inbounds %struct.regnode_2, %struct.regnode_2* %2081, i32 0, i32 3
  %2082 = load i16, i16* %arg13523, align 2
  %conv3524 = zext i16 %2082 to i32
  store i32 %conv3524, i32* %min3519, align 4
  %2083 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_curlyx, align 8
  %u3525 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2083, i32 0, i32 2
  %curlyx3526 = bitcast %union.anon.19* %u3525 to %struct.anon.28*
  %me3527 = getelementptr inbounds %struct.anon.28, %struct.anon.28* %curlyx3526, i32 0, i32 2
  %2084 = load %struct.regnode*, %struct.regnode** %me3527, align 8
  %2085 = bitcast %struct.regnode* %2084 to %struct.regnode_2*
  %arg23528 = getelementptr inbounds %struct.regnode_2, %struct.regnode_2* %2085, i32 0, i32 4
  %2086 = load i16, i16* %arg23528, align 2
  %conv3529 = zext i16 %2086 to i32
  store i32 %conv3529, i32* %max, align 4
  %2087 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_curlyx, align 8
  %u3530 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2087, i32 0, i32 2
  %curlyx3531 = bitcast %union.anon.19* %u3530 to %struct.anon.28*
  %me3532 = getelementptr inbounds %struct.anon.28, %struct.anon.28* %curlyx3531, i32 0, i32 2
  %2088 = load %struct.regnode*, %struct.regnode** %me3532, align 8
  %add.ptr3533 = getelementptr inbounds %struct.regnode, %struct.regnode* %2088, i64 1
  %add.ptr3534 = getelementptr inbounds %struct.regnode, %struct.regnode* %add.ptr3533, i64 1
  store %struct.regnode* %add.ptr3534, %struct.regnode** %A, align 8
  %2089 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_curlyx, align 8
  %u3535 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2089, i32 0, i32 2
  %curlyx3536 = bitcast %union.anon.19* %u3535 to %struct.anon.28*
  %count3537 = getelementptr inbounds %struct.anon.28, %struct.anon.28* %curlyx3536, i32 0, i32 7
  %2090 = load i32, i32* %count3537, align 4
  %inc3538 = add nsw i32 %2090, 1
  store i32 %inc3538, i32* %count3537, align 4
  store i32 %inc3538, i32* %n3518, align 4
  %2091 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_curlyx, align 8
  %u3539 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2091, i32 0, i32 2
  %curlyx3540 = bitcast %union.anon.19* %u3539 to %struct.anon.28*
  %lastloc3541 = getelementptr inbounds %struct.anon.28, %struct.anon.28* %curlyx3540, i32 0, i32 8
  %2092 = load i8*, i8** %lastloc3541, align 8
  %2093 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3542 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2093, i32 0, i32 2
  %whilem = bitcast %union.anon.19* %u3542 to %struct.anon.29*
  %save_lastloc = getelementptr inbounds %struct.anon.29, %struct.anon.29* %whilem, i32 0, i32 4
  store i8* %2092, i8** %save_lastloc, align 8
  %2094 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3543 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2094, i32 0, i32 2
  %whilem3544 = bitcast %union.anon.19* %u3543 to %struct.anon.29*
  %cache_offset = getelementptr inbounds %struct.anon.29, %struct.anon.29* %whilem3544, i32 0, i32 5
  store i32 0, i32* %cache_offset, align 8
  %2095 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3545 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2095, i32 0, i32 2
  %whilem3546 = bitcast %union.anon.19* %u3545 to %struct.anon.29*
  %cache_mask = getelementptr inbounds %struct.anon.29, %struct.anon.29* %whilem3546, i32 0, i32 6
  store i32 0, i32* %cache_mask, align 4
  %2096 = load i32, i32* %n3518, align 4
  %2097 = load i32, i32* %min3519, align 4
  %cmp3547 = icmp slt i32 %2096, %2097
  br i1 %cmp3547, label %if.then3549, label %if.end3564

if.then3549:                                      ; preds = %sw.bb3517
  %2098 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %2099 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_curlyx, align 8
  %u3550 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2099, i32 0, i32 2
  %curlyx3551 = bitcast %union.anon.19* %u3550 to %struct.anon.28*
  %parenfloor3552 = getelementptr inbounds %struct.anon.28, %struct.anon.28* %curlyx3551, i32 0, i32 6
  %2100 = load i32, i32* %parenfloor3552, align 8
  %2101 = load i32, i32* %maxopenparen, align 4
  %call3553 = call i32 @S_regcppush(%struct.regexp* %2098, i32 %2100, i32 %2101)
  %2102 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3554 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2102, i32 0, i32 2
  %whilem3555 = bitcast %union.anon.19* %u3554 to %struct.anon.29*
  %cp3556 = getelementptr inbounds %struct.anon.29, %struct.anon.29* %whilem3555, i32 0, i32 2
  store i32 %call3553, i32* %cp3556, align 8
  %2103 = load i8*, i8** %locinput, align 8
  %2104 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_curlyx, align 8
  %u3557 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2104, i32 0, i32 2
  %curlyx3558 = bitcast %union.anon.19* %u3557 to %struct.anon.28*
  %lastloc3559 = getelementptr inbounds %struct.anon.28, %struct.anon.28* %curlyx3558, i32 0, i32 8
  store i8* %2103, i8** %lastloc3559, align 8
  %2105 = load i32, i32* @PL_savestack_ix, align 4
  %2106 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3560 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2106, i32 0, i32 2
  %whilem3561 = bitcast %union.anon.19* %u3560 to %struct.anon.29*
  %lastcp3562 = getelementptr inbounds %struct.anon.29, %struct.anon.29* %whilem3561, i32 0, i32 3
  store i32 %2105, i32* %lastcp3562, align 4
  %2107 = load i8*, i8** %locinput, align 8
  store i8* %2107, i8** %pushinput, align 8
  %2108 = load %struct.regnode*, %struct.regnode** %A, align 8
  store %struct.regnode* %2108, %struct.regnode** %scan, align 8
  %2109 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %resume_state3563 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2109, i32 0, i32 0
  store i32 100, i32* %resume_state3563, align 8
  br label %push_state

if.end3564:                                       ; preds = %sw.bb3517
  %2110 = load i8*, i8** %locinput, align 8
  %2111 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_curlyx, align 8
  %u3565 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2111, i32 0, i32 2
  %curlyx3566 = bitcast %union.anon.19* %u3565 to %struct.anon.28*
  %lastloc3567 = getelementptr inbounds %struct.anon.28, %struct.anon.28* %curlyx3566, i32 0, i32 8
  %2112 = load i8*, i8** %lastloc3567, align 8
  %cmp3568 = icmp eq i8* %2110, %2112
  br i1 %cmp3568, label %if.then3570, label %if.end3571

if.then3570:                                      ; preds = %if.end3564
  br label %do_whilem_B_max

if.end3571:                                       ; preds = %if.end3564
  %2113 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %flags3572 = getelementptr inbounds %struct.regnode, %struct.regnode* %2113, i32 0, i32 0
  %2114 = load i8, i8* %flags3572, align 2
  %tobool3573 = icmp ne i8 %2114, 0
  br i1 %tobool3573, label %if.then3574, label %if.end3668

if.then3574:                                      ; preds = %if.end3571
  %2115 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %poscache_maxiter3575 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %2115, i32 0, i32 9
  %2116 = load i32, i32* %poscache_maxiter3575, align 8
  %tobool3576 = icmp ne i32 %2116, 0
  br i1 %tobool3576, label %if.end3599, label %if.then3577

if.then3577:                                      ; preds = %if.then3574
  %2117 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend3578 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %2117, i32 0, i32 2
  %2118 = load i8*, i8** %strend3578, align 8
  %2119 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg3579 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %2119, i32 0, i32 1
  %2120 = load i8*, i8** %strbeg3579, align 8
  %sub.ptr.lhs.cast3580 = ptrtoint i8* %2118 to i64
  %sub.ptr.rhs.cast3581 = ptrtoint i8* %2120 to i64
  %sub.ptr.sub3582 = sub i64 %sub.ptr.lhs.cast3580, %sub.ptr.rhs.cast3581
  %add3583 = add nsw i64 %sub.ptr.sub3582, 1
  %2121 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %flags3584 = getelementptr inbounds %struct.regnode, %struct.regnode* %2121, i32 0, i32 0
  %2122 = load i8, i8* %flags3584, align 2
  %conv3585 = zext i8 %2122 to i32
  %shr3586 = ashr i32 %conv3585, 4
  %conv3587 = sext i32 %shr3586 to i64
  %mul3588 = mul nsw i64 %add3583, %conv3587
  %conv3589 = trunc i64 %mul3588 to i32
  %2123 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %poscache_maxiter3590 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %2123, i32 0, i32 9
  store i32 %conv3589, i32* %poscache_maxiter3590, align 8
  %2124 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %poscache_maxiter3591 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %2124, i32 0, i32 9
  %2125 = load i32, i32* %poscache_maxiter3591, align 8
  %cmp3592 = icmp slt i32 %2125, 0
  br i1 %cmp3592, label %if.then3594, label %if.end3596

if.then3594:                                      ; preds = %if.then3577
  %2126 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %poscache_maxiter3595 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %2126, i32 0, i32 9
  store i32 2147483647, i32* %poscache_maxiter3595, align 8
  br label %if.end3596

if.end3596:                                       ; preds = %if.then3594, %if.then3577
  %2127 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %poscache_maxiter3597 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %2127, i32 0, i32 9
  %2128 = load i32, i32* %poscache_maxiter3597, align 8
  %2129 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %poscache_iter3598 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %2129, i32 0, i32 10
  store i32 %2128, i32* %poscache_iter3598, align 4
  br label %if.end3599

if.end3599:                                       ; preds = %if.end3596, %if.then3574
  %2130 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %poscache_iter3600 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %2130, i32 0, i32 10
  %2131 = load i32, i32* %poscache_iter3600, align 4
  %dec3601 = add nsw i32 %2131, -1
  store i32 %dec3601, i32* %poscache_iter3600, align 4
  %cmp3602 = icmp eq i32 %2131, 0
  br i1 %cmp3602, label %if.then3604, label %if.end3626

if.then3604:                                      ; preds = %if.end3599
  %2132 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %poscache_maxiter3605 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %2132, i32 0, i32 9
  %2133 = load i32, i32* %poscache_maxiter3605, align 8
  %add3606 = add nsw i32 %2133, 7
  %div = sdiv i32 %add3606, 8
  %conv3607 = sext i32 %div to i64
  store i64 %conv3607, i64* %size, align 8
  %2134 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %info_aux = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %2134, i32 0, i32 7
  %2135 = load %struct.regmatch_info_aux*, %struct.regmatch_info_aux** %info_aux, align 8
  store %struct.regmatch_info_aux* %2135, %struct.regmatch_info_aux** %aux, align 8
  %2136 = load %struct.regmatch_info_aux*, %struct.regmatch_info_aux** %aux, align 8
  %poscache = getelementptr inbounds %struct.regmatch_info_aux, %struct.regmatch_info_aux* %2136, i32 0, i32 3
  %2137 = load i8*, i8** %poscache, align 8
  %tobool3608 = icmp ne i8* %2137, null
  br i1 %tobool3608, label %if.then3609, label %if.else3621

if.then3609:                                      ; preds = %if.then3604
  %2138 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %poscache_size = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %2138, i32 0, i32 11
  %2139 = load i64, i64* %poscache_size, align 8
  %2140 = load i64, i64* %size, align 8
  %cmp3610 = icmp slt i64 %2139, %2140
  br i1 %cmp3610, label %if.then3612, label %if.end3618

if.then3612:                                      ; preds = %if.then3609
  %2141 = load %struct.regmatch_info_aux*, %struct.regmatch_info_aux** %aux, align 8
  %poscache3613 = getelementptr inbounds %struct.regmatch_info_aux, %struct.regmatch_info_aux* %2141, i32 0, i32 3
  %2142 = load i8*, i8** %poscache3613, align 8
  %2143 = load i64, i64* %size, align 8
  %mul3614 = mul i64 %2143, 1
  %call3615 = call i8* @Perl_safesysrealloc(i8* %2142, i64 %mul3614)
  %2144 = load %struct.regmatch_info_aux*, %struct.regmatch_info_aux** %aux, align 8
  %poscache3616 = getelementptr inbounds %struct.regmatch_info_aux, %struct.regmatch_info_aux* %2144, i32 0, i32 3
  store i8* %call3615, i8** %poscache3616, align 8
  %2145 = load i64, i64* %size, align 8
  %2146 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %poscache_size3617 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %2146, i32 0, i32 11
  store i64 %2145, i64* %poscache_size3617, align 8
  br label %if.end3618

if.end3618:                                       ; preds = %if.then3612, %if.then3609
  %2147 = load %struct.regmatch_info_aux*, %struct.regmatch_info_aux** %aux, align 8
  %poscache3619 = getelementptr inbounds %struct.regmatch_info_aux, %struct.regmatch_info_aux* %2147, i32 0, i32 3
  %2148 = load i8*, i8** %poscache3619, align 8
  %2149 = load i64, i64* %size, align 8
  %mul3620 = mul i64 %2149, 1
  call void @llvm.memset.p0i8.i64(i8* align 1 %2148, i8 0, i64 %mul3620, i1 false)
  br label %if.end3625

if.else3621:                                      ; preds = %if.then3604
  %2150 = load i64, i64* %size, align 8
  %2151 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %poscache_size3622 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %2151, i32 0, i32 11
  store i64 %2150, i64* %poscache_size3622, align 8
  %2152 = load i64, i64* %size, align 8
  %call3623 = call i8* @Perl_safesyscalloc(i64 %2152, i64 1)
  %2153 = load %struct.regmatch_info_aux*, %struct.regmatch_info_aux** %aux, align 8
  %poscache3624 = getelementptr inbounds %struct.regmatch_info_aux, %struct.regmatch_info_aux* %2153, i32 0, i32 3
  store i8* %call3623, i8** %poscache3624, align 8
  br label %if.end3625

if.end3625:                                       ; preds = %if.else3621, %if.end3618
  br label %if.end3626

if.end3626:                                       ; preds = %if.end3625, %if.end3599
  %2154 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %poscache_iter3627 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %2154, i32 0, i32 10
  %2155 = load i32, i32* %poscache_iter3627, align 4
  %cmp3628 = icmp slt i32 %2155, 0
  br i1 %cmp3628, label %if.then3630, label %if.end3667

if.then3630:                                      ; preds = %if.end3626
  %2156 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %poscache_iter3632 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %2156, i32 0, i32 10
  store i32 -1, i32* %poscache_iter3632, align 4
  %2157 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %flags3633 = getelementptr inbounds %struct.regnode, %struct.regnode* %2157, i32 0, i32 0
  %2158 = load i8, i8* %flags3633, align 2
  %conv3634 = zext i8 %2158 to i32
  %and3635 = and i32 %conv3634, 15
  %sub3636 = sub nsw i32 %and3635, 1
  %conv3637 = sext i32 %sub3636 to i64
  %2159 = load i8*, i8** %locinput, align 8
  %2160 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg3638 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %2160, i32 0, i32 1
  %2161 = load i8*, i8** %strbeg3638, align 8
  %sub.ptr.lhs.cast3639 = ptrtoint i8* %2159 to i64
  %sub.ptr.rhs.cast3640 = ptrtoint i8* %2161 to i64
  %sub.ptr.sub3641 = sub i64 %sub.ptr.lhs.cast3639, %sub.ptr.rhs.cast3640
  %2162 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %flags3642 = getelementptr inbounds %struct.regnode, %struct.regnode* %2162, i32 0, i32 0
  %2163 = load i8, i8* %flags3642, align 2
  %conv3643 = zext i8 %2163 to i32
  %shr3644 = ashr i32 %conv3643, 4
  %conv3645 = sext i32 %shr3644 to i64
  %mul3646 = mul nsw i64 %sub.ptr.sub3641, %conv3645
  %add3647 = add nsw i64 %conv3637, %mul3646
  store i64 %add3647, i64* %offset3631, align 8
  %2164 = load i64, i64* %offset3631, align 8
  %rem = srem i64 %2164, 8
  %sh_prom = trunc i64 %rem to i32
  %shl3648 = shl i32 1, %sh_prom
  %conv3649 = sext i32 %shl3648 to i64
  store i64 %conv3649, i64* %mask, align 8
  %2165 = load i64, i64* %offset3631, align 8
  %div3650 = sdiv i64 %2165, 8
  store i64 %div3650, i64* %offset3631, align 8
  %2166 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %info_aux3651 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %2166, i32 0, i32 7
  %2167 = load %struct.regmatch_info_aux*, %struct.regmatch_info_aux** %info_aux3651, align 8
  %poscache3652 = getelementptr inbounds %struct.regmatch_info_aux, %struct.regmatch_info_aux* %2167, i32 0, i32 3
  %2168 = load i8*, i8** %poscache3652, align 8
  %2169 = load i64, i64* %offset3631, align 8
  %arrayidx3653 = getelementptr inbounds i8, i8* %2168, i64 %2169
  %2170 = load i8, i8* %arrayidx3653, align 1
  %conv3654 = sext i8 %2170 to i64
  %2171 = load i64, i64* %mask, align 8
  %and3655 = and i64 %conv3654, %2171
  %tobool3656 = icmp ne i64 %and3655, 0
  br i1 %tobool3656, label %if.then3657, label %if.end3658

if.then3657:                                      ; preds = %if.then3630
  br label %no

if.end3658:                                       ; preds = %if.then3630
  %2172 = load i64, i64* %offset3631, align 8
  %conv3659 = trunc i64 %2172 to i32
  %2173 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3660 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2173, i32 0, i32 2
  %whilem3661 = bitcast %union.anon.19* %u3660 to %struct.anon.29*
  %cache_offset3662 = getelementptr inbounds %struct.anon.29, %struct.anon.29* %whilem3661, i32 0, i32 5
  store i32 %conv3659, i32* %cache_offset3662, align 8
  %2174 = load i64, i64* %mask, align 8
  %conv3663 = trunc i64 %2174 to i32
  %2175 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3664 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2175, i32 0, i32 2
  %whilem3665 = bitcast %union.anon.19* %u3664 to %struct.anon.29*
  %cache_mask3666 = getelementptr inbounds %struct.anon.29, %struct.anon.29* %whilem3665, i32 0, i32 6
  store i32 %conv3663, i32* %cache_mask3666, align 4
  br label %if.end3667

if.end3667:                                       ; preds = %if.end3658, %if.end3626
  br label %if.end3668

if.end3668:                                       ; preds = %if.end3667, %if.end3571
  %2176 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_curlyx, align 8
  %u3669 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2176, i32 0, i32 2
  %curlyx3670 = bitcast %union.anon.19* %u3669 to %struct.anon.28*
  %minmod3671 = getelementptr inbounds %struct.anon.28, %struct.anon.28* %curlyx3670, i32 0, i32 5
  %2177 = load i8, i8* %minmod3671, align 4
  %tobool3672 = trunc i8 %2177 to i1
  br i1 %tobool3672, label %if.then3673, label %if.end3699

if.then3673:                                      ; preds = %if.end3668
  %2178 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_curlyx, align 8
  %2179 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3674 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2179, i32 0, i32 2
  %whilem3675 = bitcast %union.anon.19* %u3674 to %struct.anon.29*
  %save_curlyx = getelementptr inbounds %struct.anon.29, %struct.anon.29* %whilem3675, i32 0, i32 1
  store %struct.regmatch_state* %2178, %struct.regmatch_state** %save_curlyx, align 8
  %2180 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_curlyx, align 8
  %u3676 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2180, i32 0, i32 2
  %curlyx3677 = bitcast %union.anon.19* %u3676 to %struct.anon.28*
  %prev_curlyx3678 = getelementptr inbounds %struct.anon.28, %struct.anon.28* %curlyx3677, i32 0, i32 1
  %2181 = load %struct.regmatch_state*, %struct.regmatch_state** %prev_curlyx3678, align 8
  store %struct.regmatch_state* %2181, %struct.regmatch_state** %cur_curlyx, align 8
  %2182 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %2183 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3679 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2183, i32 0, i32 2
  %whilem3680 = bitcast %union.anon.19* %u3679 to %struct.anon.29*
  %save_curlyx3681 = getelementptr inbounds %struct.anon.29, %struct.anon.29* %whilem3680, i32 0, i32 1
  %2184 = load %struct.regmatch_state*, %struct.regmatch_state** %save_curlyx3681, align 8
  %u3682 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2184, i32 0, i32 2
  %curlyx3683 = bitcast %union.anon.19* %u3682 to %struct.anon.28*
  %parenfloor3684 = getelementptr inbounds %struct.anon.28, %struct.anon.28* %curlyx3683, i32 0, i32 6
  %2185 = load i32, i32* %parenfloor3684, align 8
  %2186 = load i32, i32* %maxopenparen, align 4
  %call3685 = call i32 @S_regcppush(%struct.regexp* %2182, i32 %2185, i32 %2186)
  %2187 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3686 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2187, i32 0, i32 2
  %whilem3687 = bitcast %union.anon.19* %u3686 to %struct.anon.29*
  %cp3688 = getelementptr inbounds %struct.anon.29, %struct.anon.29* %whilem3687, i32 0, i32 2
  store i32 %call3685, i32* %cp3688, align 8
  %2188 = load i32, i32* @PL_savestack_ix, align 4
  %2189 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3689 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2189, i32 0, i32 2
  %whilem3690 = bitcast %union.anon.19* %u3689 to %struct.anon.29*
  %lastcp3691 = getelementptr inbounds %struct.anon.29, %struct.anon.29* %whilem3690, i32 0, i32 3
  store i32 %2188, i32* %lastcp3691, align 4
  %2190 = load i8*, i8** %locinput, align 8
  store i8* %2190, i8** %pushinput, align 8
  %2191 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3692 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2191, i32 0, i32 2
  %whilem3693 = bitcast %union.anon.19* %u3692 to %struct.anon.29*
  %save_curlyx3694 = getelementptr inbounds %struct.anon.29, %struct.anon.29* %whilem3693, i32 0, i32 1
  %2192 = load %struct.regmatch_state*, %struct.regmatch_state** %save_curlyx3694, align 8
  %u3695 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2192, i32 0, i32 2
  %curlyx3696 = bitcast %union.anon.19* %u3695 to %struct.anon.28*
  %B3697 = getelementptr inbounds %struct.anon.28, %struct.anon.28* %curlyx3696, i32 0, i32 3
  %2193 = load %struct.regnode*, %struct.regnode** %B3697, align 8
  store %struct.regnode* %2193, %struct.regnode** %scan, align 8
  %2194 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %resume_state3698 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2194, i32 0, i32 0
  store i32 106, i32* %resume_state3698, align 8
  br label %push_yes_state

if.end3699:                                       ; preds = %if.end3668
  %2195 = load i32, i32* %n3518, align 4
  %2196 = load i32, i32* %max, align 4
  %cmp3700 = icmp slt i32 %2195, %2196
  br i1 %cmp3700, label %if.then3702, label %if.end3717

if.then3702:                                      ; preds = %if.end3699
  %2197 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %2198 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_curlyx, align 8
  %u3703 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2198, i32 0, i32 2
  %curlyx3704 = bitcast %union.anon.19* %u3703 to %struct.anon.28*
  %parenfloor3705 = getelementptr inbounds %struct.anon.28, %struct.anon.28* %curlyx3704, i32 0, i32 6
  %2199 = load i32, i32* %parenfloor3705, align 8
  %2200 = load i32, i32* %maxopenparen, align 4
  %call3706 = call i32 @S_regcppush(%struct.regexp* %2197, i32 %2199, i32 %2200)
  %2201 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3707 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2201, i32 0, i32 2
  %whilem3708 = bitcast %union.anon.19* %u3707 to %struct.anon.29*
  %cp3709 = getelementptr inbounds %struct.anon.29, %struct.anon.29* %whilem3708, i32 0, i32 2
  store i32 %call3706, i32* %cp3709, align 8
  %2202 = load i8*, i8** %locinput, align 8
  %2203 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_curlyx, align 8
  %u3710 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2203, i32 0, i32 2
  %curlyx3711 = bitcast %union.anon.19* %u3710 to %struct.anon.28*
  %lastloc3712 = getelementptr inbounds %struct.anon.28, %struct.anon.28* %curlyx3711, i32 0, i32 8
  store i8* %2202, i8** %lastloc3712, align 8
  %2204 = load i32, i32* @PL_savestack_ix, align 4
  %2205 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3713 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2205, i32 0, i32 2
  %whilem3714 = bitcast %union.anon.19* %u3713 to %struct.anon.29*
  %lastcp3715 = getelementptr inbounds %struct.anon.29, %struct.anon.29* %whilem3714, i32 0, i32 3
  store i32 %2204, i32* %lastcp3715, align 4
  %2206 = load i8*, i8** %locinput, align 8
  store i8* %2206, i8** %pushinput, align 8
  %2207 = load %struct.regnode*, %struct.regnode** %A, align 8
  store %struct.regnode* %2207, %struct.regnode** %scan, align 8
  %2208 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %resume_state3716 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2208, i32 0, i32 0
  store i32 104, i32* %resume_state3716, align 8
  br label %push_state

if.end3717:                                       ; preds = %if.end3699
  br label %do_whilem_B_max

sw.bb3718:                                        ; preds = %cond.end45, %cond.end45
  %2209 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3719 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2209, i32 0, i32 2
  %whilem3720 = bitcast %union.anon.19* %u3719 to %struct.anon.29*
  %save_curlyx3721 = getelementptr inbounds %struct.anon.29, %struct.anon.29* %whilem3720, i32 0, i32 1
  %2210 = load %struct.regmatch_state*, %struct.regmatch_state** %save_curlyx3721, align 8
  store %struct.regmatch_state* %2210, %struct.regmatch_state** %cur_curlyx, align 8
  br label %yes6781

sw.bb3722:                                        ; preds = %cond.end45
  %2211 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3723 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2211, i32 0, i32 2
  %whilem3724 = bitcast %union.anon.19* %u3723 to %struct.anon.29*
  %save_curlyx3725 = getelementptr inbounds %struct.anon.29, %struct.anon.29* %whilem3724, i32 0, i32 1
  %2212 = load %struct.regmatch_state*, %struct.regmatch_state** %save_curlyx3725, align 8
  store %struct.regmatch_state* %2212, %struct.regmatch_state** %cur_curlyx, align 8
  %2213 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3726 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2213, i32 0, i32 2
  %whilem3727 = bitcast %union.anon.19* %u3726 to %struct.anon.29*
  %save_lastloc3728 = getelementptr inbounds %struct.anon.29, %struct.anon.29* %whilem3727, i32 0, i32 4
  %2214 = load i8*, i8** %save_lastloc3728, align 8
  %2215 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_curlyx, align 8
  %u3729 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2215, i32 0, i32 2
  %curlyx3730 = bitcast %union.anon.19* %u3729 to %struct.anon.28*
  %lastloc3731 = getelementptr inbounds %struct.anon.28, %struct.anon.28* %curlyx3730, i32 0, i32 8
  store i8* %2214, i8** %lastloc3731, align 8
  %2216 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_curlyx, align 8
  %u3732 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2216, i32 0, i32 2
  %curlyx3733 = bitcast %union.anon.19* %u3732 to %struct.anon.28*
  %count3734 = getelementptr inbounds %struct.anon.28, %struct.anon.28* %curlyx3733, i32 0, i32 7
  %2217 = load i32, i32* %count3734, align 4
  %dec3735 = add nsw i32 %2217, -1
  store i32 %dec3735, i32* %count3734, align 4
  %2218 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3736 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2218, i32 0, i32 2
  %whilem3737 = bitcast %union.anon.19* %u3736 to %struct.anon.29*
  %cache_mask3738 = getelementptr inbounds %struct.anon.29, %struct.anon.29* %whilem3737, i32 0, i32 6
  %2219 = load i32, i32* %cache_mask3738, align 4
  %tobool3739 = icmp ne i32 %2219, 0
  br i1 %tobool3739, label %if.then3740, label %if.end3754

if.then3740:                                      ; preds = %sw.bb3722
  %2220 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3741 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2220, i32 0, i32 2
  %whilem3742 = bitcast %union.anon.19* %u3741 to %struct.anon.29*
  %cache_mask3743 = getelementptr inbounds %struct.anon.29, %struct.anon.29* %whilem3742, i32 0, i32 6
  %2221 = load i32, i32* %cache_mask3743, align 4
  %2222 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %info_aux3744 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %2222, i32 0, i32 7
  %2223 = load %struct.regmatch_info_aux*, %struct.regmatch_info_aux** %info_aux3744, align 8
  %poscache3745 = getelementptr inbounds %struct.regmatch_info_aux, %struct.regmatch_info_aux* %2223, i32 0, i32 3
  %2224 = load i8*, i8** %poscache3745, align 8
  %2225 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3746 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2225, i32 0, i32 2
  %whilem3747 = bitcast %union.anon.19* %u3746 to %struct.anon.29*
  %cache_offset3748 = getelementptr inbounds %struct.anon.29, %struct.anon.29* %whilem3747, i32 0, i32 5
  %2226 = load i32, i32* %cache_offset3748, align 8
  %idxprom3749 = sext i32 %2226 to i64
  %arrayidx3750 = getelementptr inbounds i8, i8* %2224, i64 %idxprom3749
  %2227 = load i8, i8* %arrayidx3750, align 1
  %conv3751 = sext i8 %2227 to i32
  %or3752 = or i32 %conv3751, %2221
  %conv3753 = trunc i32 %or3752 to i8
  store i8 %conv3753, i8* %arrayidx3750, align 1
  br label %if.end3754

if.end3754:                                       ; preds = %if.then3740, %sw.bb3722
  br label %no

sw.bb3755:                                        ; preds = %cond.end45, %cond.end45
  br label %do.body3756

do.body3756:                                      ; preds = %sw.bb3755
  %2228 = load i32, i32* @PL_savestack_ix, align 4
  %2229 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3757 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2229, i32 0, i32 2
  %whilem3758 = bitcast %union.anon.19* %u3757 to %struct.anon.29*
  %lastcp3759 = getelementptr inbounds %struct.anon.29, %struct.anon.29* %whilem3758, i32 0, i32 3
  %2230 = load i32, i32* %lastcp3759, align 4
  %cmp3760 = icmp sgt i32 %2228, %2230
  br i1 %cmp3760, label %if.then3762, label %if.end3766

if.then3762:                                      ; preds = %do.body3756
  %2231 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3763 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2231, i32 0, i32 2
  %whilem3764 = bitcast %union.anon.19* %u3763 to %struct.anon.29*
  %lastcp3765 = getelementptr inbounds %struct.anon.29, %struct.anon.29* %whilem3764, i32 0, i32 3
  %2232 = load i32, i32* %lastcp3765, align 4
  call void @Perl_leave_scope(i32 %2232)
  br label %if.end3766

if.end3766:                                       ; preds = %if.then3762, %do.body3756
  br label %do.end3767

do.end3767:                                       ; preds = %if.end3766
  %2233 = load %struct.regexp*, %struct.regexp** %rex, align 8
  call void @S_regcppop(%struct.regexp* %2233, i32* %maxopenparen)
  %2234 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3768 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2234, i32 0, i32 2
  %whilem3769 = bitcast %union.anon.19* %u3768 to %struct.anon.29*
  %save_lastloc3770 = getelementptr inbounds %struct.anon.29, %struct.anon.29* %whilem3769, i32 0, i32 4
  %2235 = load i8*, i8** %save_lastloc3770, align 8
  %2236 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_curlyx, align 8
  %u3771 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2236, i32 0, i32 2
  %curlyx3772 = bitcast %union.anon.19* %u3771 to %struct.anon.28*
  %lastloc3773 = getelementptr inbounds %struct.anon.28, %struct.anon.28* %curlyx3772, i32 0, i32 8
  store i8* %2235, i8** %lastloc3773, align 8
  %2237 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_curlyx, align 8
  %u3774 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2237, i32 0, i32 2
  %curlyx3775 = bitcast %union.anon.19* %u3774 to %struct.anon.28*
  %count3776 = getelementptr inbounds %struct.anon.28, %struct.anon.28* %curlyx3775, i32 0, i32 7
  %2238 = load i32, i32* %count3776, align 4
  %dec3777 = add nsw i32 %2238, -1
  store i32 %dec3777, i32* %count3776, align 4
  %2239 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3778 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2239, i32 0, i32 2
  %whilem3779 = bitcast %union.anon.19* %u3778 to %struct.anon.29*
  %cache_mask3780 = getelementptr inbounds %struct.anon.29, %struct.anon.29* %whilem3779, i32 0, i32 6
  %2240 = load i32, i32* %cache_mask3780, align 4
  %tobool3781 = icmp ne i32 %2240, 0
  br i1 %tobool3781, label %if.then3782, label %if.end3796

if.then3782:                                      ; preds = %do.end3767
  %2241 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3783 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2241, i32 0, i32 2
  %whilem3784 = bitcast %union.anon.19* %u3783 to %struct.anon.29*
  %cache_mask3785 = getelementptr inbounds %struct.anon.29, %struct.anon.29* %whilem3784, i32 0, i32 6
  %2242 = load i32, i32* %cache_mask3785, align 4
  %2243 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %info_aux3786 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %2243, i32 0, i32 7
  %2244 = load %struct.regmatch_info_aux*, %struct.regmatch_info_aux** %info_aux3786, align 8
  %poscache3787 = getelementptr inbounds %struct.regmatch_info_aux, %struct.regmatch_info_aux* %2244, i32 0, i32 3
  %2245 = load i8*, i8** %poscache3787, align 8
  %2246 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3788 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2246, i32 0, i32 2
  %whilem3789 = bitcast %union.anon.19* %u3788 to %struct.anon.29*
  %cache_offset3790 = getelementptr inbounds %struct.anon.29, %struct.anon.29* %whilem3789, i32 0, i32 5
  %2247 = load i32, i32* %cache_offset3790, align 8
  %idxprom3791 = sext i32 %2247 to i64
  %arrayidx3792 = getelementptr inbounds i8, i8* %2245, i64 %idxprom3791
  %2248 = load i8, i8* %arrayidx3792, align 1
  %conv3793 = sext i8 %2248 to i32
  %or3794 = or i32 %conv3793, %2242
  %conv3795 = trunc i32 %or3794 to i8
  store i8 %conv3795, i8* %arrayidx3792, align 1
  br label %if.end3796

if.end3796:                                       ; preds = %if.then3782, %do.end3767
  br label %no

sw.bb3797:                                        ; preds = %cond.end45
  br label %do.body3798

do.body3798:                                      ; preds = %sw.bb3797
  %2249 = load i32, i32* @PL_savestack_ix, align 4
  %2250 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3799 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2250, i32 0, i32 2
  %whilem3800 = bitcast %union.anon.19* %u3799 to %struct.anon.29*
  %lastcp3801 = getelementptr inbounds %struct.anon.29, %struct.anon.29* %whilem3800, i32 0, i32 3
  %2251 = load i32, i32* %lastcp3801, align 4
  %cmp3802 = icmp sgt i32 %2249, %2251
  br i1 %cmp3802, label %if.then3804, label %if.end3808

if.then3804:                                      ; preds = %do.body3798
  %2252 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3805 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2252, i32 0, i32 2
  %whilem3806 = bitcast %union.anon.19* %u3805 to %struct.anon.29*
  %lastcp3807 = getelementptr inbounds %struct.anon.29, %struct.anon.29* %whilem3806, i32 0, i32 3
  %2253 = load i32, i32* %lastcp3807, align 4
  call void @Perl_leave_scope(i32 %2253)
  br label %if.end3808

if.end3808:                                       ; preds = %if.then3804, %do.body3798
  br label %do.end3809

do.end3809:                                       ; preds = %if.end3808
  %2254 = load %struct.regexp*, %struct.regexp** %rex, align 8
  call void @S_regcppop(%struct.regexp* %2254, i32* %maxopenparen)
  br label %do_whilem_B_max

do_whilem_B_max:                                  ; preds = %do.end3809, %if.end3717, %if.then3570
  %2255 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_curlyx, align 8
  %u3810 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2255, i32 0, i32 2
  %curlyx3811 = bitcast %union.anon.19* %u3810 to %struct.anon.28*
  %count3812 = getelementptr inbounds %struct.anon.28, %struct.anon.28* %curlyx3811, i32 0, i32 7
  %2256 = load i32, i32* %count3812, align 4
  %cmp3813 = icmp sge i32 %2256, 32767
  br i1 %cmp3813, label %land.lhs.true3815, label %if.end3822

land.lhs.true3815:                                ; preds = %do_whilem_B_max
  %call3816 = call zeroext i1 @Perl_ckwarn(i32 20)
  br i1 %call3816, label %land.lhs.true3818, label %if.end3822

land.lhs.true3818:                                ; preds = %land.lhs.true3815
  %2257 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %warned = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %2257, i32 0, i32 15
  %2258 = load i8, i8* %warned, align 1
  %tobool3819 = trunc i8 %2258 to i1
  br i1 %tobool3819, label %if.end3822, label %if.then3820

if.then3820:                                      ; preds = %land.lhs.true3818
  %2259 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %warned3821 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %2259, i32 0, i32 15
  store i8 1, i8* %warned3821, align 1
  call void (i32, i8*, ...) @Perl_warner(i32 20, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.14, i64 0, i64 0), i32 32766)
  br label %if.end3822

if.end3822:                                       ; preds = %if.then3820, %land.lhs.true3818, %land.lhs.true3815, %do_whilem_B_max
  %2260 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_curlyx, align 8
  %2261 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3823 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2261, i32 0, i32 2
  %whilem3824 = bitcast %union.anon.19* %u3823 to %struct.anon.29*
  %save_curlyx3825 = getelementptr inbounds %struct.anon.29, %struct.anon.29* %whilem3824, i32 0, i32 1
  store %struct.regmatch_state* %2260, %struct.regmatch_state** %save_curlyx3825, align 8
  %2262 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_curlyx, align 8
  %u3826 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2262, i32 0, i32 2
  %curlyx3827 = bitcast %union.anon.19* %u3826 to %struct.anon.28*
  %prev_curlyx3828 = getelementptr inbounds %struct.anon.28, %struct.anon.28* %curlyx3827, i32 0, i32 1
  %2263 = load %struct.regmatch_state*, %struct.regmatch_state** %prev_curlyx3828, align 8
  store %struct.regmatch_state* %2263, %struct.regmatch_state** %cur_curlyx, align 8
  %2264 = load i8*, i8** %locinput, align 8
  store i8* %2264, i8** %pushinput, align 8
  %2265 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3829 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2265, i32 0, i32 2
  %whilem3830 = bitcast %union.anon.19* %u3829 to %struct.anon.29*
  %save_curlyx3831 = getelementptr inbounds %struct.anon.29, %struct.anon.29* %whilem3830, i32 0, i32 1
  %2266 = load %struct.regmatch_state*, %struct.regmatch_state** %save_curlyx3831, align 8
  %u3832 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2266, i32 0, i32 2
  %curlyx3833 = bitcast %union.anon.19* %u3832 to %struct.anon.28*
  %B3834 = getelementptr inbounds %struct.anon.28, %struct.anon.28* %curlyx3833, i32 0, i32 3
  %2267 = load %struct.regnode*, %struct.regnode** %B3834, align 8
  store %struct.regnode* %2267, %struct.regnode** %scan, align 8
  %2268 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %resume_state3835 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2268, i32 0, i32 0
  store i32 108, i32* %resume_state3835, align 8
  br label %push_yes_state

sw.bb3836:                                        ; preds = %cond.end45
  %2269 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3837 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2269, i32 0, i32 2
  %whilem3838 = bitcast %union.anon.19* %u3837 to %struct.anon.29*
  %save_curlyx3839 = getelementptr inbounds %struct.anon.29, %struct.anon.29* %whilem3838, i32 0, i32 1
  %2270 = load %struct.regmatch_state*, %struct.regmatch_state** %save_curlyx3839, align 8
  store %struct.regmatch_state* %2270, %struct.regmatch_state** %cur_curlyx, align 8
  br label %do.body3840

do.body3840:                                      ; preds = %sw.bb3836
  %2271 = load i32, i32* @PL_savestack_ix, align 4
  %2272 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3841 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2272, i32 0, i32 2
  %whilem3842 = bitcast %union.anon.19* %u3841 to %struct.anon.29*
  %lastcp3843 = getelementptr inbounds %struct.anon.29, %struct.anon.29* %whilem3842, i32 0, i32 3
  %2273 = load i32, i32* %lastcp3843, align 4
  %cmp3844 = icmp sgt i32 %2271, %2273
  br i1 %cmp3844, label %if.then3846, label %if.end3850

if.then3846:                                      ; preds = %do.body3840
  %2274 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3847 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2274, i32 0, i32 2
  %whilem3848 = bitcast %union.anon.19* %u3847 to %struct.anon.29*
  %lastcp3849 = getelementptr inbounds %struct.anon.29, %struct.anon.29* %whilem3848, i32 0, i32 3
  %2275 = load i32, i32* %lastcp3849, align 4
  call void @Perl_leave_scope(i32 %2275)
  br label %if.end3850

if.end3850:                                       ; preds = %if.then3846, %do.body3840
  br label %do.end3851

do.end3851:                                       ; preds = %if.end3850
  %2276 = load %struct.regexp*, %struct.regexp** %rex, align 8
  call void @S_regcppop(%struct.regexp* %2276, i32* %maxopenparen)
  %2277 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_curlyx, align 8
  %u3852 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2277, i32 0, i32 2
  %curlyx3853 = bitcast %union.anon.19* %u3852 to %struct.anon.28*
  %count3854 = getelementptr inbounds %struct.anon.28, %struct.anon.28* %curlyx3853, i32 0, i32 7
  %2278 = load i32, i32* %count3854, align 4
  %2279 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_curlyx, align 8
  %u3855 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2279, i32 0, i32 2
  %curlyx3856 = bitcast %union.anon.19* %u3855 to %struct.anon.28*
  %me3857 = getelementptr inbounds %struct.anon.28, %struct.anon.28* %curlyx3856, i32 0, i32 2
  %2280 = load %struct.regnode*, %struct.regnode** %me3857, align 8
  %2281 = bitcast %struct.regnode* %2280 to %struct.regnode_2*
  %arg23858 = getelementptr inbounds %struct.regnode_2, %struct.regnode_2* %2281, i32 0, i32 4
  %2282 = load i16, i16* %arg23858, align 2
  %conv3859 = zext i16 %2282 to i32
  %cmp3860 = icmp sge i32 %2278, %conv3859
  br i1 %cmp3860, label %if.then3862, label %if.end3900

if.then3862:                                      ; preds = %do.end3851
  %2283 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_curlyx, align 8
  %u3863 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2283, i32 0, i32 2
  %curlyx3864 = bitcast %union.anon.19* %u3863 to %struct.anon.28*
  %count3865 = getelementptr inbounds %struct.anon.28, %struct.anon.28* %curlyx3864, i32 0, i32 7
  %2284 = load i32, i32* %count3865, align 4
  %cmp3866 = icmp sge i32 %2284, 32767
  br i1 %cmp3866, label %land.lhs.true3868, label %if.end3876

land.lhs.true3868:                                ; preds = %if.then3862
  %call3869 = call zeroext i1 @Perl_ckwarn(i32 20)
  br i1 %call3869, label %land.lhs.true3871, label %if.end3876

land.lhs.true3871:                                ; preds = %land.lhs.true3868
  %2285 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %warned3872 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %2285, i32 0, i32 15
  %2286 = load i8, i8* %warned3872, align 1
  %tobool3873 = trunc i8 %2286 to i1
  br i1 %tobool3873, label %if.end3876, label %if.then3874

if.then3874:                                      ; preds = %land.lhs.true3871
  %2287 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %warned3875 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %2287, i32 0, i32 15
  store i8 1, i8* %warned3875, align 1
  call void (i32, i8*, ...) @Perl_warner(i32 20, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.14, i64 0, i64 0), i32 32766)
  br label %if.end3876

if.end3876:                                       ; preds = %if.then3874, %land.lhs.true3871, %land.lhs.true3868, %if.then3862
  %2288 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_curlyx, align 8
  %u3877 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2288, i32 0, i32 2
  %curlyx3878 = bitcast %union.anon.19* %u3877 to %struct.anon.28*
  %count3879 = getelementptr inbounds %struct.anon.28, %struct.anon.28* %curlyx3878, i32 0, i32 7
  %2289 = load i32, i32* %count3879, align 4
  %dec3880 = add nsw i32 %2289, -1
  store i32 %dec3880, i32* %count3879, align 4
  %2290 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3881 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2290, i32 0, i32 2
  %whilem3882 = bitcast %union.anon.19* %u3881 to %struct.anon.29*
  %cache_mask3883 = getelementptr inbounds %struct.anon.29, %struct.anon.29* %whilem3882, i32 0, i32 6
  %2291 = load i32, i32* %cache_mask3883, align 4
  %tobool3884 = icmp ne i32 %2291, 0
  br i1 %tobool3884, label %if.then3885, label %if.end3899

if.then3885:                                      ; preds = %if.end3876
  %2292 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3886 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2292, i32 0, i32 2
  %whilem3887 = bitcast %union.anon.19* %u3886 to %struct.anon.29*
  %cache_mask3888 = getelementptr inbounds %struct.anon.29, %struct.anon.29* %whilem3887, i32 0, i32 6
  %2293 = load i32, i32* %cache_mask3888, align 4
  %2294 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %info_aux3889 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %2294, i32 0, i32 7
  %2295 = load %struct.regmatch_info_aux*, %struct.regmatch_info_aux** %info_aux3889, align 8
  %poscache3890 = getelementptr inbounds %struct.regmatch_info_aux, %struct.regmatch_info_aux* %2295, i32 0, i32 3
  %2296 = load i8*, i8** %poscache3890, align 8
  %2297 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3891 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2297, i32 0, i32 2
  %whilem3892 = bitcast %union.anon.19* %u3891 to %struct.anon.29*
  %cache_offset3893 = getelementptr inbounds %struct.anon.29, %struct.anon.29* %whilem3892, i32 0, i32 5
  %2298 = load i32, i32* %cache_offset3893, align 8
  %idxprom3894 = sext i32 %2298 to i64
  %arrayidx3895 = getelementptr inbounds i8, i8* %2296, i64 %idxprom3894
  %2299 = load i8, i8* %arrayidx3895, align 1
  %conv3896 = sext i8 %2299 to i32
  %or3897 = or i32 %conv3896, %2293
  %conv3898 = trunc i32 %or3897 to i8
  store i8 %conv3898, i8* %arrayidx3895, align 1
  br label %if.end3899

if.end3899:                                       ; preds = %if.then3885, %if.end3876
  br label %no

if.end3900:                                       ; preds = %do.end3851
  %2300 = load i8*, i8** %locinput, align 8
  %2301 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_curlyx, align 8
  %u3901 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2301, i32 0, i32 2
  %curlyx3902 = bitcast %union.anon.19* %u3901 to %struct.anon.28*
  %lastloc3903 = getelementptr inbounds %struct.anon.28, %struct.anon.28* %curlyx3902, i32 0, i32 8
  store i8* %2300, i8** %lastloc3903, align 8
  %2302 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %2303 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_curlyx, align 8
  %u3904 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2303, i32 0, i32 2
  %curlyx3905 = bitcast %union.anon.19* %u3904 to %struct.anon.28*
  %parenfloor3906 = getelementptr inbounds %struct.anon.28, %struct.anon.28* %curlyx3905, i32 0, i32 6
  %2304 = load i32, i32* %parenfloor3906, align 8
  %2305 = load i32, i32* %maxopenparen, align 4
  %call3907 = call i32 @S_regcppush(%struct.regexp* %2302, i32 %2304, i32 %2305)
  %2306 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3908 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2306, i32 0, i32 2
  %whilem3909 = bitcast %union.anon.19* %u3908 to %struct.anon.29*
  %cp3910 = getelementptr inbounds %struct.anon.29, %struct.anon.29* %whilem3909, i32 0, i32 2
  store i32 %call3907, i32* %cp3910, align 8
  %2307 = load i32, i32* @PL_savestack_ix, align 4
  %2308 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3911 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2308, i32 0, i32 2
  %whilem3912 = bitcast %union.anon.19* %u3911 to %struct.anon.29*
  %lastcp3913 = getelementptr inbounds %struct.anon.29, %struct.anon.29* %whilem3912, i32 0, i32 3
  store i32 %2307, i32* %lastcp3913, align 4
  %2309 = load i8*, i8** %locinput, align 8
  store i8* %2309, i8** %pushinput, align 8
  %2310 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3914 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2310, i32 0, i32 2
  %whilem3915 = bitcast %union.anon.19* %u3914 to %struct.anon.29*
  %save_curlyx3916 = getelementptr inbounds %struct.anon.29, %struct.anon.29* %whilem3915, i32 0, i32 1
  %2311 = load %struct.regmatch_state*, %struct.regmatch_state** %save_curlyx3916, align 8
  %u3917 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2311, i32 0, i32 2
  %curlyx3918 = bitcast %union.anon.19* %u3917 to %struct.anon.28*
  %me3919 = getelementptr inbounds %struct.anon.28, %struct.anon.28* %curlyx3918, i32 0, i32 2
  %2312 = load %struct.regnode*, %struct.regnode** %me3919, align 8
  %add.ptr3920 = getelementptr inbounds %struct.regnode, %struct.regnode* %2312, i64 1
  %add.ptr3921 = getelementptr inbounds %struct.regnode, %struct.regnode* %add.ptr3920, i64 1
  store %struct.regnode* %add.ptr3921, %struct.regnode** %scan, align 8
  %2313 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %resume_state3922 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2313, i32 0, i32 0
  store i32 102, i32* %resume_state3922, align 8
  br label %push_state

sw.bb3923:                                        ; preds = %cond.end45
  %2314 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %2315 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %2316 = bitcast %struct.regnode* %2315 to %struct.regnode_1*
  %arg13924 = getelementptr inbounds %struct.regnode_1, %struct.regnode_1* %2316, i32 0, i32 3
  %2317 = load i32, i32* %arg13924, align 4
  %idx.ext3925 = zext i32 %2317 to i64
  %add.ptr3926 = getelementptr inbounds %struct.regnode, %struct.regnode* %2314, i64 %idx.ext3925
  store %struct.regnode* %add.ptr3926, %struct.regnode** %next, align 8
  %2318 = load %struct.regnode*, %struct.regnode** %next, align 8
  %2319 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %cmp3927 = icmp eq %struct.regnode* %2318, %2319
  br i1 %cmp3927, label %if.then3929, label %if.end3930

if.then3929:                                      ; preds = %sw.bb3923
  store %struct.regnode* null, %struct.regnode** %next, align 8
  br label %if.end3930

if.end3930:                                       ; preds = %if.then3929, %sw.bb3923
  %2320 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %add.ptr3931 = getelementptr inbounds %struct.regnode, %struct.regnode* %2320, i64 1
  store %struct.regnode* %add.ptr3931, %struct.regnode** %scan, align 8
  br label %sw.bb3932

sw.bb3932:                                        ; preds = %cond.end45, %if.end3930
  %2321 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %add.ptr3933 = getelementptr inbounds %struct.regnode, %struct.regnode* %2321, i64 1
  store %struct.regnode* %add.ptr3933, %struct.regnode** %scan, align 8
  %2322 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %lastparen3934 = getelementptr inbounds %struct.regexp, %struct.regexp* %2322, i32 0, i32 15
  %2323 = load i32, i32* %lastparen3934, align 8
  %2324 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3935 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2324, i32 0, i32 2
  %branch = bitcast %union.anon.19* %u3935 to %struct.anon.22*
  %lastparen3936 = getelementptr inbounds %struct.anon.22, %struct.anon.22* %branch, i32 0, i32 1
  store i32 %2323, i32* %lastparen3936, align 8
  %2325 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %lastcloseparen3937 = getelementptr inbounds %struct.regexp, %struct.regexp* %2325, i32 0, i32 16
  %2326 = load i32, i32* %lastcloseparen3937, align 4
  %2327 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3938 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2327, i32 0, i32 2
  %branch3939 = bitcast %union.anon.19* %u3938 to %struct.anon.22*
  %lastcloseparen3940 = getelementptr inbounds %struct.anon.22, %struct.anon.22* %branch3939, i32 0, i32 2
  store i32 %2326, i32* %lastcloseparen3940, align 4
  %2328 = load %struct.regnode*, %struct.regnode** %next, align 8
  %2329 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3941 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2329, i32 0, i32 2
  %branch3942 = bitcast %union.anon.19* %u3941 to %struct.anon.22*
  %next_branch = getelementptr inbounds %struct.anon.22, %struct.anon.22* %branch3942, i32 0, i32 4
  store %struct.regnode* %2328, %struct.regnode** %next_branch, align 8
  %2330 = load i32, i32* @PL_savestack_ix, align 4
  %2331 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3943 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2331, i32 0, i32 2
  %branch3944 = bitcast %union.anon.19* %u3943 to %struct.anon.22*
  %cp3945 = getelementptr inbounds %struct.anon.22, %struct.anon.22* %branch3944, i32 0, i32 3
  store i32 %2330, i32* %cp3945, align 8
  %2332 = load i8, i8* %has_cutgroup, align 1
  %tobool3946 = trunc i8 %2332 to i1
  br i1 %tobool3946, label %if.then3947, label %if.else3949

if.then3947:                                      ; preds = %sw.bb3932
  %2333 = load i8*, i8** %locinput, align 8
  store i8* %2333, i8** %pushinput, align 8
  %2334 = load %struct.regnode*, %struct.regnode** %scan, align 8
  store %struct.regnode* %2334, %struct.regnode** %scan, align 8
  %2335 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %resume_state3948 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2335, i32 0, i32 0
  store i32 110, i32* %resume_state3948, align 8
  br label %push_yes_state

if.else3949:                                      ; preds = %sw.bb3932
  %2336 = load i8*, i8** %locinput, align 8
  store i8* %2336, i8** %pushinput, align 8
  %2337 = load %struct.regnode*, %struct.regnode** %scan, align 8
  store %struct.regnode* %2337, %struct.regnode** %scan, align 8
  %2338 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %resume_state3950 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2338, i32 0, i32 0
  store i32 110, i32* %resume_state3950, align 8
  br label %push_state

sw.bb3951:                                        ; preds = %cond.end45
  %2339 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %flags3952 = getelementptr inbounds %struct.regnode, %struct.regnode* %2339, i32 0, i32 0
  %2340 = load i8, i8* %flags3952, align 2
  %conv3953 = zext i8 %2340 to i32
  %tobool3954 = icmp ne i32 %conv3953, 0
  br i1 %tobool3954, label %cond.true3955, label %cond.false3956

cond.true3955:                                    ; preds = %sw.bb3951
  br label %cond.end3962

cond.false3956:                                   ; preds = %sw.bb3951
  %2341 = load %struct.regexp_internal*, %struct.regexp_internal** %rexi, align 8
  %data3957 = getelementptr inbounds %struct.regexp_internal, %struct.regexp_internal* %2341, i32 0, i32 3
  %2342 = load %struct.reg_data*, %struct.reg_data** %data3957, align 8
  %data3958 = getelementptr inbounds %struct.reg_data, %struct.reg_data* %2342, i32 0, i32 2
  %2343 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %2344 = bitcast %struct.regnode* %2343 to %struct.regnode_1*
  %arg13959 = getelementptr inbounds %struct.regnode_1, %struct.regnode_1* %2344, i32 0, i32 3
  %2345 = load i32, i32* %arg13959, align 4
  %idxprom3960 = zext i32 %2345 to i64
  %arrayidx3961 = getelementptr inbounds [1 x i8*], [1 x i8*]* %data3958, i64 0, i64 %idxprom3960
  %2346 = load i8*, i8** %arrayidx3961, align 8
  %2347 = bitcast i8* %2346 to %struct.sv*
  br label %cond.end3962

cond.end3962:                                     ; preds = %cond.false3956, %cond.true3955
  %cond3963 = phi %struct.sv* [ null, %cond.true3955 ], [ %2347, %cond.false3956 ]
  %2348 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3964 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2348, i32 0, i32 2
  %mark = bitcast %union.anon.19* %u3964 to %struct.anon.26*
  %mark_name = getelementptr inbounds %struct.anon.26, %struct.anon.26* %mark, i32 0, i32 2
  store %struct.sv* %cond3963, %struct.sv** %mark_name, align 8
  store %struct.sv* %cond3963, %struct.sv** %sv_yes_mark, align 8
  %2349 = load i8*, i8** %locinput, align 8
  store i8* %2349, i8** %pushinput, align 8
  %2350 = load %struct.regnode*, %struct.regnode** %next, align 8
  store %struct.regnode* %2350, %struct.regnode** %scan, align 8
  %2351 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %resume_state3965 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2351, i32 0, i32 0
  store i32 130, i32* %resume_state3965, align 8
  br label %push_state

sw.bb3966:                                        ; preds = %cond.end45
  store i8 1, i8* %do_cutgroup, align 1
  store i8 1, i8* %no_final, align 1
  %2352 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3967 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2352, i32 0, i32 2
  %mark3968 = bitcast %union.anon.19* %u3967 to %struct.anon.26*
  %mark_name3969 = getelementptr inbounds %struct.anon.26, %struct.anon.26* %mark3968, i32 0, i32 2
  %2353 = load %struct.sv*, %struct.sv** %mark_name3969, align 8
  %tobool3970 = icmp ne %struct.sv* %2353, null
  br i1 %tobool3970, label %if.then3971, label %if.end3975

if.then3971:                                      ; preds = %sw.bb3966
  %2354 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3972 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2354, i32 0, i32 2
  %mark3973 = bitcast %union.anon.19* %u3972 to %struct.anon.26*
  %mark_name3974 = getelementptr inbounds %struct.anon.26, %struct.anon.26* %mark3973, i32 0, i32 2
  %2355 = load %struct.sv*, %struct.sv** %mark_name3974, align 8
  store %struct.sv* %2355, %struct.sv** %sv_commit, align 8
  br label %if.end3975

if.end3975:                                       ; preds = %if.then3971, %sw.bb3966
  br label %no

sw.bb3976:                                        ; preds = %cond.end45
  br label %yes6781

sw.bb3977:                                        ; preds = %cond.end45
  %2356 = load i8, i8* %do_cutgroup, align 1
  %tobool3978 = trunc i8 %2356 to i1
  br i1 %tobool3978, label %if.then3979, label %if.end3980

if.then3979:                                      ; preds = %sw.bb3977
  store i8 0, i8* %do_cutgroup, align 1
  store i8 0, i8* %no_final, align 1
  br label %if.end3980

if.end3980:                                       ; preds = %if.then3979, %sw.bb3977
  br label %do.body3981

do.body3981:                                      ; preds = %if.end3980
  %2357 = load i32, i32* @PL_savestack_ix, align 4
  %2358 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3982 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2358, i32 0, i32 2
  %branch3983 = bitcast %union.anon.19* %u3982 to %struct.anon.22*
  %cp3984 = getelementptr inbounds %struct.anon.22, %struct.anon.22* %branch3983, i32 0, i32 3
  %2359 = load i32, i32* %cp3984, align 8
  %cmp3985 = icmp sgt i32 %2357, %2359
  br i1 %cmp3985, label %if.then3987, label %if.end3991

if.then3987:                                      ; preds = %do.body3981
  %2360 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3988 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2360, i32 0, i32 2
  %branch3989 = bitcast %union.anon.19* %u3988 to %struct.anon.22*
  %cp3990 = getelementptr inbounds %struct.anon.22, %struct.anon.22* %branch3989, i32 0, i32 3
  %2361 = load i32, i32* %cp3990, align 8
  call void @Perl_leave_scope(i32 %2361)
  br label %if.end3991

if.end3991:                                       ; preds = %if.then3987, %do.body3981
  br label %do.end3992

do.end3992:                                       ; preds = %if.end3991
  %2362 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %lastparen3993 = getelementptr inbounds %struct.regexp, %struct.regexp* %2362, i32 0, i32 15
  %2363 = load i32, i32* %lastparen3993, align 8
  store i32 %2363, i32* %n, align 4
  br label %for.cond3994

for.cond3994:                                     ; preds = %for.inc4005, %do.end3992
  %2364 = load i32, i32* %n, align 4
  %2365 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3995 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2365, i32 0, i32 2
  %branch3996 = bitcast %union.anon.19* %u3995 to %struct.anon.22*
  %lastparen3997 = getelementptr inbounds %struct.anon.22, %struct.anon.22* %branch3996, i32 0, i32 1
  %2366 = load i32, i32* %lastparen3997, align 8
  %cmp3998 = icmp ugt i32 %2364, %2366
  br i1 %cmp3998, label %for.body4000, label %for.end4007

for.body4000:                                     ; preds = %for.cond3994
  %2367 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %offs4001 = getelementptr inbounds %struct.regexp, %struct.regexp* %2367, i32 0, i32 17
  %2368 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %offs4001, align 8
  %2369 = load i32, i32* %n, align 4
  %idxprom4002 = zext i32 %2369 to i64
  %arrayidx4003 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %2368, i64 %idxprom4002
  %end4004 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %arrayidx4003, i32 0, i32 1
  store i64 -1, i64* %end4004, align 8
  br label %for.inc4005

for.inc4005:                                      ; preds = %for.body4000
  %2370 = load i32, i32* %n, align 4
  %dec4006 = add i32 %2370, -1
  store i32 %dec4006, i32* %n, align 4
  br label %for.cond3994

for.end4007:                                      ; preds = %for.cond3994
  %2371 = load i32, i32* %n, align 4
  %2372 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %lastparen4008 = getelementptr inbounds %struct.regexp, %struct.regexp* %2372, i32 0, i32 15
  store i32 %2371, i32* %lastparen4008, align 8
  %2373 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4009 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2373, i32 0, i32 2
  %branch4010 = bitcast %union.anon.19* %u4009 to %struct.anon.22*
  %lastcloseparen4011 = getelementptr inbounds %struct.anon.22, %struct.anon.22* %branch4010, i32 0, i32 2
  %2374 = load i32, i32* %lastcloseparen4011, align 4
  %2375 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %lastcloseparen4012 = getelementptr inbounds %struct.regexp, %struct.regexp* %2375, i32 0, i32 16
  store i32 %2374, i32* %lastcloseparen4012, align 4
  %2376 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4013 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2376, i32 0, i32 2
  %branch4014 = bitcast %union.anon.19* %u4013 to %struct.anon.22*
  %next_branch4015 = getelementptr inbounds %struct.anon.22, %struct.anon.22* %branch4014, i32 0, i32 4
  %2377 = load %struct.regnode*, %struct.regnode** %next_branch4015, align 8
  store %struct.regnode* %2377, %struct.regnode** %scan, align 8
  %2378 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %tobool4016 = icmp ne %struct.regnode* %2378, null
  br i1 %tobool4016, label %lor.lhs.false4017, label %if.then4027

lor.lhs.false4017:                                ; preds = %for.end4007
  %2379 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %type4018 = getelementptr inbounds %struct.regnode, %struct.regnode* %2379, i32 0, i32 1
  %2380 = load i8, i8* %type4018, align 1
  %conv4019 = zext i8 %2380 to i32
  %cmp4020 = icmp ne i32 %conv4019, 30
  br i1 %cmp4020, label %land.lhs.true4022, label %if.end4028

land.lhs.true4022:                                ; preds = %lor.lhs.false4017
  %2381 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %type4023 = getelementptr inbounds %struct.regnode, %struct.regnode* %2381, i32 0, i32 1
  %2382 = load i8, i8* %type4023, align 1
  %conv4024 = zext i8 %2382 to i32
  %cmp4025 = icmp ne i32 %conv4024, 62
  br i1 %cmp4025, label %if.then4027, label %if.end4028

if.then4027:                                      ; preds = %land.lhs.true4022, %for.end4007
  br label %no_silent

if.end4028:                                       ; preds = %land.lhs.true4022, %lor.lhs.false4017
  br label %while.cond

sw.bb4029:                                        ; preds = %cond.end45
  store i8 1, i8* %minmod, align 1
  br label %sw.epilog6768

sw.bb4030:                                        ; preds = %cond.end45
  %2383 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %2384 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4031 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2384, i32 0, i32 2
  %curlym = bitcast %union.anon.19* %u4031 to %struct.anon.30*
  %me4032 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym, i32 0, i32 11
  store %struct.regnode* %2383, %struct.regnode** %me4032, align 8
  %2385 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %add.ptr4033 = getelementptr inbounds %struct.regnode, %struct.regnode* %2385, i64 1
  %add.ptr4034 = getelementptr inbounds %struct.regnode, %struct.regnode* %add.ptr4033, i64 1
  store %struct.regnode* %add.ptr4034, %struct.regnode** %scan, align 8
  %2386 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %lastparen4035 = getelementptr inbounds %struct.regexp, %struct.regexp* %2386, i32 0, i32 15
  %2387 = load i32, i32* %lastparen4035, align 8
  %2388 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4036 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2388, i32 0, i32 2
  %curlym4037 = bitcast %union.anon.19* %u4036 to %struct.anon.30*
  %lastparen4038 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4037, i32 0, i32 4
  store i32 %2387, i32* %lastparen4038, align 4
  %2389 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %lastcloseparen4039 = getelementptr inbounds %struct.regexp, %struct.regexp* %2389, i32 0, i32 16
  %2390 = load i32, i32* %lastcloseparen4039, align 4
  %2391 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4040 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2391, i32 0, i32 2
  %curlym4041 = bitcast %union.anon.19* %u4040 to %struct.anon.30*
  %lastcloseparen4042 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4041, i32 0, i32 5
  store i32 %2390, i32* %lastcloseparen4042, align 8
  %2392 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4043 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2392, i32 0, i32 2
  %curlym4044 = bitcast %union.anon.19* %u4043 to %struct.anon.30*
  %me4045 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4044, i32 0, i32 11
  %2393 = load %struct.regnode*, %struct.regnode** %me4045, align 8
  %flags4046 = getelementptr inbounds %struct.regnode, %struct.regnode* %2393, i32 0, i32 0
  %2394 = load i8, i8* %flags4046, align 2
  %tobool4047 = icmp ne i8 %2394, 0
  br i1 %tobool4047, label %if.then4048, label %if.end4062

if.then4048:                                      ; preds = %sw.bb4030
  %2395 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4049 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2395, i32 0, i32 2
  %curlym4050 = bitcast %union.anon.19* %u4049 to %struct.anon.30*
  %me4051 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4050, i32 0, i32 11
  %2396 = load %struct.regnode*, %struct.regnode** %me4051, align 8
  %flags4052 = getelementptr inbounds %struct.regnode, %struct.regnode* %2396, i32 0, i32 0
  %2397 = load i8, i8* %flags4052, align 2
  %conv4053 = zext i8 %2397 to i32
  store i32 %conv4053, i32* %paren, align 4
  %2398 = load i32, i32* %paren, align 4
  %2399 = load i32, i32* %maxopenparen, align 4
  %cmp4054 = icmp ugt i32 %2398, %2399
  br i1 %cmp4054, label %if.then4056, label %if.end4057

if.then4056:                                      ; preds = %if.then4048
  %2400 = load i32, i32* %paren, align 4
  store i32 %2400, i32* %maxopenparen, align 4
  br label %if.end4057

if.end4057:                                       ; preds = %if.then4056, %if.then4048
  %2401 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %next_off4058 = getelementptr inbounds %struct.regnode, %struct.regnode* %2401, i32 0, i32 2
  %2402 = load i16, i16* %next_off4058, align 2
  %conv4059 = zext i16 %2402 to i32
  %2403 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %idx.ext4060 = sext i32 %conv4059 to i64
  %add.ptr4061 = getelementptr inbounds %struct.regnode, %struct.regnode* %2403, i64 %idx.ext4060
  store %struct.regnode* %add.ptr4061, %struct.regnode** %scan, align 8
  br label %if.end4062

if.end4062:                                       ; preds = %if.end4057, %sw.bb4030
  %2404 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %2405 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4063 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2405, i32 0, i32 2
  %curlym4064 = bitcast %union.anon.19* %u4063 to %struct.anon.30*
  %A4065 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4064, i32 0, i32 9
  store %struct.regnode* %2404, %struct.regnode** %A4065, align 8
  %2406 = load %struct.regnode*, %struct.regnode** %next, align 8
  %2407 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4066 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2407, i32 0, i32 2
  %curlym4067 = bitcast %union.anon.19* %u4066 to %struct.anon.30*
  %B4068 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4067, i32 0, i32 10
  store %struct.regnode* %2406, %struct.regnode** %B4068, align 8
  %2408 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4069 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2408, i32 0, i32 2
  %curlym4070 = bitcast %union.anon.19* %u4069 to %struct.anon.30*
  %alen = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4070, i32 0, i32 6
  store i32 0, i32* %alen, align 4
  %2409 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4071 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2409, i32 0, i32 2
  %curlym4072 = bitcast %union.anon.19* %u4071 to %struct.anon.30*
  %count4073 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4072, i32 0, i32 7
  store i32 0, i32* %count4073, align 8
  %2410 = load i8, i8* %minmod, align 1
  %tobool4074 = trunc i8 %2410 to i1
  %2411 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4075 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2411, i32 0, i32 2
  %curlym4076 = bitcast %union.anon.19* %u4075 to %struct.anon.30*
  %minmod4077 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4076, i32 0, i32 8
  %frombool4078 = zext i1 %tobool4074 to i8
  store i8 %frombool4078, i8* %minmod4077, align 4
  store i8 0, i8* %minmod, align 1
  %2412 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4079 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2412, i32 0, i32 2
  %curlym4080 = bitcast %union.anon.19* %u4079 to %struct.anon.30*
  %c1 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4080, i32 0, i32 1
  store i32 -1001, i32* %c1, align 8
  %2413 = load i32, i32* @PL_savestack_ix, align 4
  %2414 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4081 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2414, i32 0, i32 2
  %curlym4082 = bitcast %union.anon.19* %u4081 to %struct.anon.30*
  %cp4083 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4082, i32 0, i32 3
  store i32 %2413, i32* %cp4083, align 8
  %2415 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4084 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2415, i32 0, i32 2
  %curlym4085 = bitcast %union.anon.19* %u4084 to %struct.anon.30*
  %minmod4086 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4085, i32 0, i32 8
  %2416 = load i8, i8* %minmod4086, align 4
  %tobool4087 = trunc i8 %2416 to i1
  br i1 %tobool4087, label %cond.true4089, label %cond.false4096

cond.true4089:                                    ; preds = %if.end4062
  %2417 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4090 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2417, i32 0, i32 2
  %curlym4091 = bitcast %union.anon.19* %u4090 to %struct.anon.30*
  %me4092 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4091, i32 0, i32 11
  %2418 = load %struct.regnode*, %struct.regnode** %me4092, align 8
  %2419 = bitcast %struct.regnode* %2418 to %struct.regnode_2*
  %arg14093 = getelementptr inbounds %struct.regnode_2, %struct.regnode_2* %2419, i32 0, i32 3
  %2420 = load i16, i16* %arg14093, align 2
  %conv4094 = zext i16 %2420 to i32
  %tobool4095 = icmp ne i32 %conv4094, 0
  br i1 %tobool4095, label %if.end4104, label %if.then4103

cond.false4096:                                   ; preds = %if.end4062
  %2421 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4097 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2421, i32 0, i32 2
  %curlym4098 = bitcast %union.anon.19* %u4097 to %struct.anon.30*
  %me4099 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4098, i32 0, i32 11
  %2422 = load %struct.regnode*, %struct.regnode** %me4099, align 8
  %2423 = bitcast %struct.regnode* %2422 to %struct.regnode_2*
  %arg24100 = getelementptr inbounds %struct.regnode_2, %struct.regnode_2* %2423, i32 0, i32 4
  %2424 = load i16, i16* %arg24100, align 2
  %conv4101 = zext i16 %2424 to i32
  %tobool4102 = icmp ne i32 %conv4101, 0
  br i1 %tobool4102, label %if.end4104, label %if.then4103

if.then4103:                                      ; preds = %cond.false4096, %cond.true4089
  br label %curlym_do_B

if.end4104:                                       ; preds = %cond.false4096, %cond.true4089
  br label %curlym_do_A

curlym_do_A:                                      ; preds = %if.end4774, %if.then4226, %if.end4104
  %2425 = load i8*, i8** %locinput, align 8
  store i8* %2425, i8** %pushinput, align 8
  %2426 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4105 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2426, i32 0, i32 2
  %curlym4106 = bitcast %union.anon.19* %u4105 to %struct.anon.30*
  %A4107 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4106, i32 0, i32 9
  %2427 = load %struct.regnode*, %struct.regnode** %A4107, align 8
  store %struct.regnode* %2427, %struct.regnode** %scan, align 8
  %2428 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %resume_state4108 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2428, i32 0, i32 0
  store i32 112, i32* %resume_state4108, align 8
  br label %push_yes_state

sw.bb4109:                                        ; preds = %cond.end45
  %2429 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4110 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2429, i32 0, i32 2
  %curlym4111 = bitcast %union.anon.19* %u4110 to %struct.anon.30*
  %count4112 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4111, i32 0, i32 7
  %2430 = load i32, i32* %count4112, align 8
  %inc4113 = add nsw i32 %2430, 1
  store i32 %inc4113, i32* %count4112, align 8
  %2431 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4114 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2431, i32 0, i32 2
  %curlym4115 = bitcast %union.anon.19* %u4114 to %struct.anon.30*
  %count4116 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4115, i32 0, i32 7
  %2432 = load i32, i32* %count4116, align 8
  %cmp4117 = icmp eq i32 %2432, 1
  br i1 %cmp4117, label %if.then4119, label %if.end4178

if.then4119:                                      ; preds = %sw.bb4109
  %2433 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %is_utf8_target4120 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %2433, i32 0, i32 14
  %2434 = load i8, i8* %is_utf8_target4120, align 2
  %tobool4121 = trunc i8 %2434 to i1
  br i1 %tobool4121, label %if.then4122, label %if.else4139

if.then4122:                                      ; preds = %if.then4119
  %2435 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %locinput4124 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2435, i32 0, i32 1
  %2436 = load i8*, i8** %locinput4124, align 8
  store i8* %2436, i8** %s4123, align 8
  br label %while.cond4125

while.cond4125:                                   ; preds = %while.body4128, %if.then4122
  %2437 = load i8*, i8** %s4123, align 8
  %2438 = load i8*, i8** %locinput, align 8
  %cmp4126 = icmp ult i8* %2437, %2438
  br i1 %cmp4126, label %while.body4128, label %while.end4138

while.body4128:                                   ; preds = %while.cond4125
  %2439 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4129 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2439, i32 0, i32 2
  %curlym4130 = bitcast %union.anon.19* %u4129 to %struct.anon.30*
  %alen4131 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4130, i32 0, i32 6
  %2440 = load i32, i32* %alen4131, align 4
  %inc4132 = add nsw i32 %2440, 1
  store i32 %inc4132, i32* %alen4131, align 4
  %2441 = load i8*, i8** %s4123, align 8
  %2442 = load i8, i8* %2441, align 1
  %idxprom4133 = zext i8 %2442 to i64
  %arrayidx4134 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom4133
  %2443 = load i8, i8* %arrayidx4134, align 1
  %conv4135 = zext i8 %2443 to i32
  %2444 = load i8*, i8** %s4123, align 8
  %idx.ext4136 = sext i32 %conv4135 to i64
  %add.ptr4137 = getelementptr inbounds i8, i8* %2444, i64 %idx.ext4136
  store i8* %add.ptr4137, i8** %s4123, align 8
  br label %while.cond4125

while.end4138:                                    ; preds = %while.cond4125
  br label %if.end4148

if.else4139:                                      ; preds = %if.then4119
  %2445 = load i8*, i8** %locinput, align 8
  %2446 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %locinput4140 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2446, i32 0, i32 1
  %2447 = load i8*, i8** %locinput4140, align 8
  %sub.ptr.lhs.cast4141 = ptrtoint i8* %2445 to i64
  %sub.ptr.rhs.cast4142 = ptrtoint i8* %2447 to i64
  %sub.ptr.sub4143 = sub i64 %sub.ptr.lhs.cast4141, %sub.ptr.rhs.cast4142
  %conv4144 = trunc i64 %sub.ptr.sub4143 to i32
  %2448 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4145 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2448, i32 0, i32 2
  %curlym4146 = bitcast %union.anon.19* %u4145 to %struct.anon.30*
  %alen4147 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4146, i32 0, i32 6
  store i32 %conv4144, i32* %alen4147, align 4
  br label %if.end4148

if.end4148:                                       ; preds = %if.else4139, %while.end4138
  %2449 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4149 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2449, i32 0, i32 2
  %curlym4150 = bitcast %union.anon.19* %u4149 to %struct.anon.30*
  %alen4151 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4150, i32 0, i32 6
  %2450 = load i32, i32* %alen4151, align 4
  %cmp4152 = icmp eq i32 %2450, 0
  br i1 %cmp4152, label %if.then4154, label %if.end4177

if.then4154:                                      ; preds = %if.end4148
  %2451 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4155 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2451, i32 0, i32 2
  %curlym4156 = bitcast %union.anon.19* %u4155 to %struct.anon.30*
  %minmod4157 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4156, i32 0, i32 8
  %2452 = load i8, i8* %minmod4157, align 4
  %tobool4158 = trunc i8 %2452 to i1
  br i1 %tobool4158, label %cond.true4160, label %cond.false4166

cond.true4160:                                    ; preds = %if.then4154
  %2453 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4161 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2453, i32 0, i32 2
  %curlym4162 = bitcast %union.anon.19* %u4161 to %struct.anon.30*
  %me4163 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4162, i32 0, i32 11
  %2454 = load %struct.regnode*, %struct.regnode** %me4163, align 8
  %2455 = bitcast %struct.regnode* %2454 to %struct.regnode_2*
  %arg14164 = getelementptr inbounds %struct.regnode_2, %struct.regnode_2* %2455, i32 0, i32 3
  %2456 = load i16, i16* %arg14164, align 2
  %conv4165 = zext i16 %2456 to i32
  br label %cond.end4172

cond.false4166:                                   ; preds = %if.then4154
  %2457 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4167 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2457, i32 0, i32 2
  %curlym4168 = bitcast %union.anon.19* %u4167 to %struct.anon.30*
  %me4169 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4168, i32 0, i32 11
  %2458 = load %struct.regnode*, %struct.regnode** %me4169, align 8
  %2459 = bitcast %struct.regnode* %2458 to %struct.regnode_2*
  %arg24170 = getelementptr inbounds %struct.regnode_2, %struct.regnode_2* %2459, i32 0, i32 4
  %2460 = load i16, i16* %arg24170, align 2
  %conv4171 = zext i16 %2460 to i32
  br label %cond.end4172

cond.end4172:                                     ; preds = %cond.false4166, %cond.true4160
  %cond4173 = phi i32 [ %conv4165, %cond.true4160 ], [ %conv4171, %cond.false4166 ]
  %2461 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4174 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2461, i32 0, i32 2
  %curlym4175 = bitcast %union.anon.19* %u4174 to %struct.anon.30*
  %count4176 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4175, i32 0, i32 7
  store i32 %cond4173, i32* %count4176, align 8
  br label %if.end4177

if.end4177:                                       ; preds = %cond.end4172, %if.end4148
  br label %if.end4178

if.end4178:                                       ; preds = %if.end4177, %sw.bb4109
  %2462 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_eval, align 8
  %tobool4179 = icmp ne %struct.regmatch_state* %2462, null
  br i1 %tobool4179, label %land.lhs.true4180, label %if.end4197

land.lhs.true4180:                                ; preds = %if.end4178
  %2463 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_eval, align 8
  %u4181 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2463, i32 0, i32 2
  %eval4182 = bitcast %union.anon.19* %u4181 to %struct.anon.24*
  %close_paren4183 = getelementptr inbounds %struct.anon.24, %struct.anon.24* %eval4182, i32 0, i32 6
  %2464 = load i32, i32* %close_paren4183, align 8
  %tobool4184 = icmp ne i32 %2464, 0
  br i1 %tobool4184, label %land.lhs.true4185, label %if.end4197

land.lhs.true4185:                                ; preds = %land.lhs.true4180
  %2465 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_eval, align 8
  %u4186 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2465, i32 0, i32 2
  %eval4187 = bitcast %union.anon.19* %u4186 to %struct.anon.24*
  %close_paren4188 = getelementptr inbounds %struct.anon.24, %struct.anon.24* %eval4187, i32 0, i32 6
  %2466 = load i32, i32* %close_paren4188, align 8
  %2467 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4189 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2467, i32 0, i32 2
  %curlym4190 = bitcast %union.anon.19* %u4189 to %struct.anon.30*
  %me4191 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4190, i32 0, i32 11
  %2468 = load %struct.regnode*, %struct.regnode** %me4191, align 8
  %flags4192 = getelementptr inbounds %struct.regnode, %struct.regnode* %2468, i32 0, i32 0
  %2469 = load i8, i8* %flags4192, align 2
  %conv4193 = zext i8 %2469 to i32
  %cmp4194 = icmp eq i32 %2466, %conv4193
  br i1 %cmp4194, label %if.then4196, label %if.end4197

if.then4196:                                      ; preds = %land.lhs.true4185
  br label %fake_end

if.end4197:                                       ; preds = %land.lhs.true4185, %land.lhs.true4180, %if.end4178
  %2470 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4199 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2470, i32 0, i32 2
  %curlym4200 = bitcast %union.anon.19* %u4199 to %struct.anon.30*
  %minmod4201 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4200, i32 0, i32 8
  %2471 = load i8, i8* %minmod4201, align 4
  %tobool4202 = trunc i8 %2471 to i1
  br i1 %tobool4202, label %cond.true4204, label %cond.false4210

cond.true4204:                                    ; preds = %if.end4197
  %2472 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4205 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2472, i32 0, i32 2
  %curlym4206 = bitcast %union.anon.19* %u4205 to %struct.anon.30*
  %me4207 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4206, i32 0, i32 11
  %2473 = load %struct.regnode*, %struct.regnode** %me4207, align 8
  %2474 = bitcast %struct.regnode* %2473 to %struct.regnode_2*
  %arg14208 = getelementptr inbounds %struct.regnode_2, %struct.regnode_2* %2474, i32 0, i32 3
  %2475 = load i16, i16* %arg14208, align 2
  %conv4209 = zext i16 %2475 to i32
  br label %cond.end4216

cond.false4210:                                   ; preds = %if.end4197
  %2476 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4211 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2476, i32 0, i32 2
  %curlym4212 = bitcast %union.anon.19* %u4211 to %struct.anon.30*
  %me4213 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4212, i32 0, i32 11
  %2477 = load %struct.regnode*, %struct.regnode** %me4213, align 8
  %2478 = bitcast %struct.regnode* %2477 to %struct.regnode_2*
  %arg24214 = getelementptr inbounds %struct.regnode_2, %struct.regnode_2* %2478, i32 0, i32 4
  %2479 = load i16, i16* %arg24214, align 2
  %conv4215 = zext i16 %2479 to i32
  br label %cond.end4216

cond.end4216:                                     ; preds = %cond.false4210, %cond.true4204
  %cond4217 = phi i32 [ %conv4209, %cond.true4204 ], [ %conv4215, %cond.false4210 ]
  store i32 %cond4217, i32* %max4198, align 4
  %2480 = load i32, i32* %max4198, align 4
  %cmp4218 = icmp eq i32 %2480, 32767
  br i1 %cmp4218, label %if.then4226, label %lor.lhs.false4220

lor.lhs.false4220:                                ; preds = %cond.end4216
  %2481 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4221 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2481, i32 0, i32 2
  %curlym4222 = bitcast %union.anon.19* %u4221 to %struct.anon.30*
  %count4223 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4222, i32 0, i32 7
  %2482 = load i32, i32* %count4223, align 8
  %2483 = load i32, i32* %max4198, align 4
  %cmp4224 = icmp slt i32 %2482, %2483
  br i1 %cmp4224, label %if.then4226, label %if.end4227

if.then4226:                                      ; preds = %lor.lhs.false4220, %cond.end4216
  br label %curlym_do_A

if.end4227:                                       ; preds = %lor.lhs.false4220
  br label %curlym_do_B

sw.bb4228:                                        ; preds = %cond.end45
  br label %do.body4229

do.body4229:                                      ; preds = %sw.bb4228
  %2484 = load i32, i32* @PL_savestack_ix, align 4
  %2485 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4230 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2485, i32 0, i32 2
  %curlym4231 = bitcast %union.anon.19* %u4230 to %struct.anon.30*
  %cp4232 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4231, i32 0, i32 3
  %2486 = load i32, i32* %cp4232, align 8
  %cmp4233 = icmp sgt i32 %2484, %2486
  br i1 %cmp4233, label %if.then4235, label %if.end4239

if.then4235:                                      ; preds = %do.body4229
  %2487 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4236 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2487, i32 0, i32 2
  %curlym4237 = bitcast %union.anon.19* %u4236 to %struct.anon.30*
  %cp4238 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4237, i32 0, i32 3
  %2488 = load i32, i32* %cp4238, align 8
  call void @Perl_leave_scope(i32 %2488)
  br label %if.end4239

if.end4239:                                       ; preds = %if.then4235, %do.body4229
  br label %do.end4240

do.end4240:                                       ; preds = %if.end4239
  %2489 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4241 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2489, i32 0, i32 2
  %curlym4242 = bitcast %union.anon.19* %u4241 to %struct.anon.30*
  %minmod4243 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4242, i32 0, i32 8
  %2490 = load i8, i8* %minmod4243, align 4
  %tobool4244 = trunc i8 %2490 to i1
  br i1 %tobool4244, label %if.then4275, label %lor.lhs.false4246

lor.lhs.false4246:                                ; preds = %do.end4240
  %2491 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4247 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2491, i32 0, i32 2
  %curlym4248 = bitcast %union.anon.19* %u4247 to %struct.anon.30*
  %count4249 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4248, i32 0, i32 7
  %2492 = load i32, i32* %count4249, align 8
  %2493 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4250 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2493, i32 0, i32 2
  %curlym4251 = bitcast %union.anon.19* %u4250 to %struct.anon.30*
  %me4252 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4251, i32 0, i32 11
  %2494 = load %struct.regnode*, %struct.regnode** %me4252, align 8
  %2495 = bitcast %struct.regnode* %2494 to %struct.regnode_2*
  %arg14253 = getelementptr inbounds %struct.regnode_2, %struct.regnode_2* %2495, i32 0, i32 3
  %2496 = load i16, i16* %arg14253, align 2
  %conv4254 = zext i16 %2496 to i32
  %cmp4255 = icmp slt i32 %2492, %conv4254
  br i1 %cmp4255, label %if.then4275, label %lor.lhs.false4257

lor.lhs.false4257:                                ; preds = %lor.lhs.false4246
  %2497 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_eval, align 8
  %tobool4258 = icmp ne %struct.regmatch_state* %2497, null
  br i1 %tobool4258, label %land.lhs.true4259, label %if.end4276

land.lhs.true4259:                                ; preds = %lor.lhs.false4257
  %2498 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_eval, align 8
  %u4260 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2498, i32 0, i32 2
  %eval4261 = bitcast %union.anon.19* %u4260 to %struct.anon.24*
  %close_paren4262 = getelementptr inbounds %struct.anon.24, %struct.anon.24* %eval4261, i32 0, i32 6
  %2499 = load i32, i32* %close_paren4262, align 8
  %tobool4263 = icmp ne i32 %2499, 0
  br i1 %tobool4263, label %land.lhs.true4264, label %if.end4276

land.lhs.true4264:                                ; preds = %land.lhs.true4259
  %2500 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_eval, align 8
  %u4265 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2500, i32 0, i32 2
  %eval4266 = bitcast %union.anon.19* %u4265 to %struct.anon.24*
  %close_paren4267 = getelementptr inbounds %struct.anon.24, %struct.anon.24* %eval4266, i32 0, i32 6
  %2501 = load i32, i32* %close_paren4267, align 8
  %2502 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4268 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2502, i32 0, i32 2
  %curlym4269 = bitcast %union.anon.19* %u4268 to %struct.anon.30*
  %me4270 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4269, i32 0, i32 11
  %2503 = load %struct.regnode*, %struct.regnode** %me4270, align 8
  %flags4271 = getelementptr inbounds %struct.regnode, %struct.regnode* %2503, i32 0, i32 0
  %2504 = load i8, i8* %flags4271, align 2
  %conv4272 = zext i8 %2504 to i32
  %cmp4273 = icmp eq i32 %2501, %conv4272
  br i1 %cmp4273, label %if.then4275, label %if.end4276

if.then4275:                                      ; preds = %land.lhs.true4264, %lor.lhs.false4246, %do.end4240
  br label %no

if.end4276:                                       ; preds = %land.lhs.true4264, %land.lhs.true4259, %lor.lhs.false4257
  br label %curlym_do_B

curlym_do_B:                                      ; preds = %cond.end4829, %if.end4276, %if.end4227, %if.then4103
  %2505 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4277 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2505, i32 0, i32 2
  %curlym4278 = bitcast %union.anon.19* %u4277 to %struct.anon.30*
  %c14279 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4278, i32 0, i32 1
  %2506 = load i32, i32* %c14279, align 8
  %cmp4280 = icmp eq i32 %2506, -1001
  br i1 %cmp4280, label %if.then4282, label %if.end4560

if.then4282:                                      ; preds = %curlym_do_B
  %2507 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4283 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2507, i32 0, i32 2
  %curlym4284 = bitcast %union.anon.19* %u4283 to %struct.anon.30*
  %c2 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4284, i32 0, i32 2
  store i32 -1000, i32* %c2, align 4
  %2508 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4285 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2508, i32 0, i32 2
  %curlym4286 = bitcast %union.anon.19* %u4285 to %struct.anon.30*
  %c14287 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4286, i32 0, i32 1
  store i32 -1000, i32* %c14287, align 8
  %2509 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4288 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2509, i32 0, i32 2
  %curlym4289 = bitcast %union.anon.19* %u4288 to %struct.anon.30*
  %B4290 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4289, i32 0, i32 10
  %2510 = load %struct.regnode*, %struct.regnode** %B4290, align 8
  %type4291 = getelementptr inbounds %struct.regnode, %struct.regnode* %2510, i32 0, i32 1
  %2511 = load i8, i8* %type4291, align 1
  %idxprom4292 = zext i8 %2511 to i64
  %arrayidx4293 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_regkind, i64 0, i64 %idxprom4292
  %2512 = load i8, i8* %arrayidx4293, align 1
  %conv4294 = zext i8 %2512 to i32
  %cmp4295 = icmp eq i32 %conv4294, 31
  br i1 %cmp4295, label %if.then4401, label %lor.lhs.false4297

lor.lhs.false4297:                                ; preds = %if.then4282
  %2513 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4298 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2513, i32 0, i32 2
  %curlym4299 = bitcast %union.anon.19* %u4298 to %struct.anon.30*
  %B4300 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4299, i32 0, i32 10
  %2514 = load %struct.regnode*, %struct.regnode** %B4300, align 8
  %type4301 = getelementptr inbounds %struct.regnode, %struct.regnode* %2514, i32 0, i32 1
  %2515 = load i8, i8* %type4301, align 1
  %idxprom4302 = zext i8 %2515 to i64
  %arrayidx4303 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_regkind, i64 0, i64 %idxprom4302
  %2516 = load i8, i8* %arrayidx4303, align 1
  %conv4304 = zext i8 %2516 to i32
  %cmp4305 = icmp eq i32 %conv4304, 51
  br i1 %cmp4305, label %if.then4401, label %lor.lhs.false4307

lor.lhs.false4307:                                ; preds = %lor.lhs.false4297
  %2517 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4308 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2517, i32 0, i32 2
  %curlym4309 = bitcast %union.anon.19* %u4308 to %struct.anon.30*
  %B4310 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4309, i32 0, i32 10
  %2518 = load %struct.regnode*, %struct.regnode** %B4310, align 8
  %type4311 = getelementptr inbounds %struct.regnode, %struct.regnode* %2518, i32 0, i32 1
  %2519 = load i8, i8* %type4311, align 1
  %conv4312 = zext i8 %2519 to i32
  %cmp4313 = icmp eq i32 %conv4312, 49
  br i1 %cmp4313, label %if.then4401, label %lor.lhs.false4315

lor.lhs.false4315:                                ; preds = %lor.lhs.false4307
  %2520 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4316 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2520, i32 0, i32 2
  %curlym4317 = bitcast %union.anon.19* %u4316 to %struct.anon.30*
  %B4318 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4317, i32 0, i32 10
  %2521 = load %struct.regnode*, %struct.regnode** %B4318, align 8
  %type4319 = getelementptr inbounds %struct.regnode, %struct.regnode* %2521, i32 0, i32 1
  %2522 = load i8, i8* %type4319, align 1
  %conv4320 = zext i8 %2522 to i32
  %cmp4321 = icmp eq i32 %conv4320, 50
  br i1 %cmp4321, label %land.lhs.true4323, label %lor.lhs.false4335

land.lhs.true4323:                                ; preds = %lor.lhs.false4315
  %2523 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_eval, align 8
  %tobool4324 = icmp ne %struct.regmatch_state* %2523, null
  br i1 %tobool4324, label %lor.lhs.false4325, label %if.then4401

lor.lhs.false4325:                                ; preds = %land.lhs.true4323
  %2524 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_eval, align 8
  %u4326 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2524, i32 0, i32 2
  %eval4327 = bitcast %union.anon.19* %u4326 to %struct.anon.24*
  %close_paren4328 = getelementptr inbounds %struct.anon.24, %struct.anon.24* %eval4327, i32 0, i32 6
  %2525 = load i32, i32* %close_paren4328, align 8
  %2526 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4329 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2526, i32 0, i32 2
  %curlym4330 = bitcast %union.anon.19* %u4329 to %struct.anon.30*
  %B4331 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4330, i32 0, i32 10
  %2527 = load %struct.regnode*, %struct.regnode** %B4331, align 8
  %2528 = bitcast %struct.regnode* %2527 to %struct.regnode_1*
  %arg14332 = getelementptr inbounds %struct.regnode_1, %struct.regnode_1* %2528, i32 0, i32 3
  %2529 = load i32, i32* %arg14332, align 4
  %cmp4333 = icmp ne i32 %2525, %2529
  br i1 %cmp4333, label %if.then4401, label %lor.lhs.false4335

lor.lhs.false4335:                                ; preds = %lor.lhs.false4325, %lor.lhs.false4315
  %2530 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4336 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2530, i32 0, i32 2
  %curlym4337 = bitcast %union.anon.19* %u4336 to %struct.anon.30*
  %B4338 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4337, i32 0, i32 10
  %2531 = load %struct.regnode*, %struct.regnode** %B4338, align 8
  %type4339 = getelementptr inbounds %struct.regnode, %struct.regnode* %2531, i32 0, i32 1
  %2532 = load i8, i8* %type4339, align 1
  %conv4340 = zext i8 %2532 to i32
  %cmp4341 = icmp eq i32 %conv4340, 68
  br i1 %cmp4341, label %if.then4401, label %lor.lhs.false4343

lor.lhs.false4343:                                ; preds = %lor.lhs.false4335
  %2533 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4344 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2533, i32 0, i32 2
  %curlym4345 = bitcast %union.anon.19* %u4344 to %struct.anon.30*
  %B4346 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4345, i32 0, i32 10
  %2534 = load %struct.regnode*, %struct.regnode** %B4346, align 8
  %type4347 = getelementptr inbounds %struct.regnode, %struct.regnode* %2534, i32 0, i32 1
  %2535 = load i8, i8* %type4347, align 1
  %conv4348 = zext i8 %2535 to i32
  %cmp4349 = icmp eq i32 %conv4348, 65
  br i1 %cmp4349, label %if.then4401, label %lor.lhs.false4351

lor.lhs.false4351:                                ; preds = %lor.lhs.false4343
  %2536 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4352 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2536, i32 0, i32 2
  %curlym4353 = bitcast %union.anon.19* %u4352 to %struct.anon.30*
  %B4354 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4353, i32 0, i32 10
  %2537 = load %struct.regnode*, %struct.regnode** %B4354, align 8
  %type4355 = getelementptr inbounds %struct.regnode, %struct.regnode* %2537, i32 0, i32 1
  %2538 = load i8, i8* %type4355, align 1
  %conv4356 = zext i8 %2538 to i32
  %cmp4357 = icmp eq i32 %conv4356, 63
  br i1 %cmp4357, label %if.then4401, label %lor.lhs.false4359

lor.lhs.false4359:                                ; preds = %lor.lhs.false4351
  %2539 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4360 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2539, i32 0, i32 2
  %curlym4361 = bitcast %union.anon.19* %u4360 to %struct.anon.30*
  %B4362 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4361, i32 0, i32 10
  %2540 = load %struct.regnode*, %struct.regnode** %B4362, align 8
  %type4363 = getelementptr inbounds %struct.regnode, %struct.regnode* %2540, i32 0, i32 1
  %2541 = load i8, i8* %type4363, align 1
  %conv4364 = zext i8 %2541 to i32
  %cmp4365 = icmp eq i32 %conv4364, 43
  br i1 %cmp4365, label %if.then4401, label %lor.lhs.false4367

lor.lhs.false4367:                                ; preds = %lor.lhs.false4359
  %2542 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4368 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2542, i32 0, i32 2
  %curlym4369 = bitcast %union.anon.19* %u4368 to %struct.anon.30*
  %B4370 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4369, i32 0, i32 10
  %2543 = load %struct.regnode*, %struct.regnode** %B4370, align 8
  %type4371 = getelementptr inbounds %struct.regnode, %struct.regnode* %2543, i32 0, i32 1
  %2544 = load i8, i8* %type4371, align 1
  %conv4372 = zext i8 %2544 to i32
  %cmp4373 = icmp eq i32 %conv4372, 69
  br i1 %cmp4373, label %if.then4401, label %lor.lhs.false4375

lor.lhs.false4375:                                ; preds = %lor.lhs.false4367
  %2545 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4376 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2545, i32 0, i32 2
  %curlym4377 = bitcast %union.anon.19* %u4376 to %struct.anon.30*
  %B4378 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4377, i32 0, i32 10
  %2546 = load %struct.regnode*, %struct.regnode** %B4378, align 8
  %type4379 = getelementptr inbounds %struct.regnode, %struct.regnode* %2546, i32 0, i32 1
  %2547 = load i8, i8* %type4379, align 1
  %conv4380 = zext i8 %2547 to i32
  %cmp4381 = icmp eq i32 %conv4380, 90
  br i1 %cmp4381, label %if.then4401, label %lor.lhs.false4383

lor.lhs.false4383:                                ; preds = %lor.lhs.false4375
  %2548 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4384 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2548, i32 0, i32 2
  %curlym4385 = bitcast %union.anon.19* %u4384 to %struct.anon.30*
  %B4386 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4385, i32 0, i32 10
  %2549 = load %struct.regnode*, %struct.regnode** %B4386, align 8
  %type4387 = getelementptr inbounds %struct.regnode, %struct.regnode* %2549, i32 0, i32 1
  %2550 = load i8, i8* %type4387, align 1
  %idxprom4388 = zext i8 %2550 to i64
  %arrayidx4389 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_regkind, i64 0, i64 %idxprom4388
  %2551 = load i8, i8* %arrayidx4389, align 1
  %conv4390 = zext i8 %2551 to i32
  %cmp4391 = icmp eq i32 %conv4390, 44
  br i1 %cmp4391, label %land.lhs.true4393, label %if.end4559

land.lhs.true4393:                                ; preds = %lor.lhs.false4383
  %2552 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4394 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2552, i32 0, i32 2
  %curlym4395 = bitcast %union.anon.19* %u4394 to %struct.anon.30*
  %B4396 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4395, i32 0, i32 10
  %2553 = load %struct.regnode*, %struct.regnode** %B4396, align 8
  %2554 = bitcast %struct.regnode* %2553 to %struct.regnode_2*
  %arg14397 = getelementptr inbounds %struct.regnode_2, %struct.regnode_2* %2554, i32 0, i32 3
  %2555 = load i16, i16* %arg14397, align 2
  %conv4398 = zext i16 %2555 to i32
  %cmp4399 = icmp sgt i32 %conv4398, 0
  br i1 %cmp4399, label %if.then4401, label %if.end4559

if.then4401:                                      ; preds = %land.lhs.true4393, %lor.lhs.false4375, %lor.lhs.false4367, %lor.lhs.false4359, %lor.lhs.false4351, %lor.lhs.false4343, %lor.lhs.false4335, %lor.lhs.false4325, %land.lhs.true4323, %lor.lhs.false4307, %lor.lhs.false4297, %if.then4282
  %2556 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4402 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2556, i32 0, i32 2
  %curlym4403 = bitcast %union.anon.19* %u4402 to %struct.anon.30*
  %B4404 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4403, i32 0, i32 10
  %2557 = load %struct.regnode*, %struct.regnode** %B4404, align 8
  store %struct.regnode* %2557, %struct.regnode** %text_node, align 8
  %2558 = load %struct.regnode*, %struct.regnode** %text_node, align 8
  %type4405 = getelementptr inbounds %struct.regnode, %struct.regnode* %2558, i32 0, i32 1
  %2559 = load i8, i8* %type4405, align 1
  %idxprom4406 = zext i8 %2559 to i64
  %arrayidx4407 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_regkind, i64 0, i64 %idxprom4406
  %2560 = load i8, i8* %arrayidx4407, align 1
  %conv4408 = zext i8 %2560 to i32
  %cmp4409 = icmp eq i32 %conv4408, 31
  br i1 %cmp4409, label %if.end4535, label %lor.lhs.false4411

lor.lhs.false4411:                                ; preds = %if.then4401
  %2561 = load %struct.regnode*, %struct.regnode** %text_node, align 8
  %type4412 = getelementptr inbounds %struct.regnode, %struct.regnode* %2561, i32 0, i32 1
  %2562 = load i8, i8* %type4412, align 1
  %idxprom4413 = zext i8 %2562 to i64
  %arrayidx4414 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_regkind, i64 0, i64 %idxprom4413
  %2563 = load i8, i8* %arrayidx4414, align 1
  %conv4415 = zext i8 %2563 to i32
  %cmp4416 = icmp eq i32 %conv4415, 51
  br i1 %cmp4416, label %if.end4535, label %if.then4418

if.then4418:                                      ; preds = %lor.lhs.false4411
  br label %do.body4419

do.body4419:                                      ; preds = %if.then4418
  br label %while.cond4420

while.cond4420:                                   ; preds = %if.end4532, %do.body4419
  %2564 = load %struct.regnode*, %struct.regnode** %text_node, align 8
  %type4421 = getelementptr inbounds %struct.regnode, %struct.regnode* %2564, i32 0, i32 1
  %2565 = load i8, i8* %type4421, align 1
  %conv4422 = zext i8 %2565 to i32
  %cmp4423 = icmp eq i32 %conv4422, 49
  br i1 %cmp4423, label %lor.end4483, label %lor.lhs.false4425

lor.lhs.false4425:                                ; preds = %while.cond4420
  %2566 = load %struct.regnode*, %struct.regnode** %text_node, align 8
  %type4426 = getelementptr inbounds %struct.regnode, %struct.regnode* %2566, i32 0, i32 1
  %2567 = load i8, i8* %type4426, align 1
  %conv4427 = zext i8 %2567 to i32
  %cmp4428 = icmp eq i32 %conv4427, 50
  br i1 %cmp4428, label %land.lhs.true4430, label %lor.lhs.false4439

land.lhs.true4430:                                ; preds = %lor.lhs.false4425
  %2568 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_eval, align 8
  %tobool4431 = icmp ne %struct.regmatch_state* %2568, null
  br i1 %tobool4431, label %lor.lhs.false4432, label %lor.end4483

lor.lhs.false4432:                                ; preds = %land.lhs.true4430
  %2569 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_eval, align 8
  %u4433 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2569, i32 0, i32 2
  %eval4434 = bitcast %union.anon.19* %u4433 to %struct.anon.24*
  %close_paren4435 = getelementptr inbounds %struct.anon.24, %struct.anon.24* %eval4434, i32 0, i32 6
  %2570 = load i32, i32* %close_paren4435, align 8
  %2571 = load %struct.regnode*, %struct.regnode** %text_node, align 8
  %2572 = bitcast %struct.regnode* %2571 to %struct.regnode_1*
  %arg14436 = getelementptr inbounds %struct.regnode_1, %struct.regnode_1* %2572, i32 0, i32 3
  %2573 = load i32, i32* %arg14436, align 4
  %cmp4437 = icmp ne i32 %2570, %2573
  br i1 %cmp4437, label %lor.end4483, label %lor.lhs.false4439

lor.lhs.false4439:                                ; preds = %lor.lhs.false4432, %lor.lhs.false4425
  %2574 = load %struct.regnode*, %struct.regnode** %text_node, align 8
  %type4440 = getelementptr inbounds %struct.regnode, %struct.regnode* %2574, i32 0, i32 1
  %2575 = load i8, i8* %type4440, align 1
  %conv4441 = zext i8 %2575 to i32
  %cmp4442 = icmp eq i32 %conv4441, 68
  br i1 %cmp4442, label %lor.end4483, label %lor.lhs.false4444

lor.lhs.false4444:                                ; preds = %lor.lhs.false4439
  %2576 = load %struct.regnode*, %struct.regnode** %text_node, align 8
  %type4445 = getelementptr inbounds %struct.regnode, %struct.regnode* %2576, i32 0, i32 1
  %2577 = load i8, i8* %type4445, align 1
  %conv4446 = zext i8 %2577 to i32
  %cmp4447 = icmp eq i32 %conv4446, 65
  br i1 %cmp4447, label %lor.end4483, label %lor.lhs.false4449

lor.lhs.false4449:                                ; preds = %lor.lhs.false4444
  %2578 = load %struct.regnode*, %struct.regnode** %text_node, align 8
  %type4450 = getelementptr inbounds %struct.regnode, %struct.regnode* %2578, i32 0, i32 1
  %2579 = load i8, i8* %type4450, align 1
  %conv4451 = zext i8 %2579 to i32
  %cmp4452 = icmp eq i32 %conv4451, 63
  br i1 %cmp4452, label %lor.end4483, label %lor.lhs.false4454

lor.lhs.false4454:                                ; preds = %lor.lhs.false4449
  %2580 = load %struct.regnode*, %struct.regnode** %text_node, align 8
  %type4455 = getelementptr inbounds %struct.regnode, %struct.regnode* %2580, i32 0, i32 1
  %2581 = load i8, i8* %type4455, align 1
  %conv4456 = zext i8 %2581 to i32
  %cmp4457 = icmp eq i32 %conv4456, 43
  br i1 %cmp4457, label %lor.end4483, label %lor.lhs.false4459

lor.lhs.false4459:                                ; preds = %lor.lhs.false4454
  %2582 = load %struct.regnode*, %struct.regnode** %text_node, align 8
  %type4460 = getelementptr inbounds %struct.regnode, %struct.regnode* %2582, i32 0, i32 1
  %2583 = load i8, i8* %type4460, align 1
  %conv4461 = zext i8 %2583 to i32
  %cmp4462 = icmp eq i32 %conv4461, 69
  br i1 %cmp4462, label %lor.end4483, label %lor.lhs.false4464

lor.lhs.false4464:                                ; preds = %lor.lhs.false4459
  %2584 = load %struct.regnode*, %struct.regnode** %text_node, align 8
  %type4465 = getelementptr inbounds %struct.regnode, %struct.regnode* %2584, i32 0, i32 1
  %2585 = load i8, i8* %type4465, align 1
  %conv4466 = zext i8 %2585 to i32
  %cmp4467 = icmp eq i32 %conv4466, 90
  br i1 %cmp4467, label %lor.end4483, label %lor.rhs4469

lor.rhs4469:                                      ; preds = %lor.lhs.false4464
  %2586 = load %struct.regnode*, %struct.regnode** %text_node, align 8
  %type4470 = getelementptr inbounds %struct.regnode, %struct.regnode* %2586, i32 0, i32 1
  %2587 = load i8, i8* %type4470, align 1
  %idxprom4471 = zext i8 %2587 to i64
  %arrayidx4472 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_regkind, i64 0, i64 %idxprom4471
  %2588 = load i8, i8* %arrayidx4472, align 1
  %conv4473 = zext i8 %2588 to i32
  %cmp4474 = icmp eq i32 %conv4473, 44
  br i1 %cmp4474, label %land.rhs4476, label %land.end4481

land.rhs4476:                                     ; preds = %lor.rhs4469
  %2589 = load %struct.regnode*, %struct.regnode** %text_node, align 8
  %2590 = bitcast %struct.regnode* %2589 to %struct.regnode_2*
  %arg14477 = getelementptr inbounds %struct.regnode_2, %struct.regnode_2* %2590, i32 0, i32 3
  %2591 = load i16, i16* %arg14477, align 2
  %conv4478 = zext i16 %2591 to i32
  %cmp4479 = icmp sgt i32 %conv4478, 0
  br label %land.end4481

land.end4481:                                     ; preds = %land.rhs4476, %lor.rhs4469
  %2592 = phi i1 [ false, %lor.rhs4469 ], [ %cmp4479, %land.rhs4476 ]
  br label %lor.end4483

lor.end4483:                                      ; preds = %land.end4481, %lor.lhs.false4464, %lor.lhs.false4459, %lor.lhs.false4454, %lor.lhs.false4449, %lor.lhs.false4444, %lor.lhs.false4439, %lor.lhs.false4432, %land.lhs.true4430, %while.cond4420
  %2593 = phi i1 [ true, %lor.lhs.false4464 ], [ true, %lor.lhs.false4459 ], [ true, %lor.lhs.false4454 ], [ true, %lor.lhs.false4449 ], [ true, %lor.lhs.false4444 ], [ true, %lor.lhs.false4439 ], [ true, %lor.lhs.false4432 ], [ true, %land.lhs.true4430 ], [ true, %while.cond4420 ], [ %2592, %land.end4481 ]
  br i1 %2593, label %while.body4485, label %while.end4533

while.body4485:                                   ; preds = %lor.end4483
  %2594 = load %struct.regnode*, %struct.regnode** %text_node, align 8
  %type4487 = getelementptr inbounds %struct.regnode, %struct.regnode* %2594, i32 0, i32 1
  %2595 = load i8, i8* %type4487, align 1
  %conv4488 = zext i8 %2595 to i16
  store i16 %conv4488, i16* %type4486, align 2
  %2596 = load i16, i16* %type4486, align 2
  %conv4489 = zext i16 %2596 to i32
  %cmp4490 = icmp eq i32 %conv4489, 65
  br i1 %cmp4490, label %if.then4498, label %lor.lhs.false4492

lor.lhs.false4492:                                ; preds = %while.body4485
  %2597 = load i16, i16* %type4486, align 2
  %idxprom4493 = zext i16 %2597 to i64
  %arrayidx4494 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_regkind, i64 0, i64 %idxprom4493
  %2598 = load i8, i8* %arrayidx4494, align 1
  %conv4495 = zext i8 %2598 to i32
  %cmp4496 = icmp eq i32 %conv4495, 44
  br i1 %cmp4496, label %if.then4498, label %if.else4501

if.then4498:                                      ; preds = %lor.lhs.false4492, %while.body4485
  %2599 = load %struct.regnode*, %struct.regnode** %text_node, align 8
  %add.ptr4499 = getelementptr inbounds %struct.regnode, %struct.regnode* %2599, i64 1
  %add.ptr4500 = getelementptr inbounds %struct.regnode, %struct.regnode* %add.ptr4499, i64 1
  store %struct.regnode* %add.ptr4500, %struct.regnode** %text_node, align 8
  br label %if.end4532

if.else4501:                                      ; preds = %lor.lhs.false4492
  %2600 = load i16, i16* %type4486, align 2
  %conv4502 = zext i16 %2600 to i32
  %cmp4503 = icmp eq i32 %conv4502, 43
  br i1 %cmp4503, label %if.then4505, label %if.else4507

if.then4505:                                      ; preds = %if.else4501
  %2601 = load %struct.regnode*, %struct.regnode** %text_node, align 8
  %add.ptr4506 = getelementptr inbounds %struct.regnode, %struct.regnode* %2601, i64 1
  store %struct.regnode* %add.ptr4506, %struct.regnode** %text_node, align 8
  br label %if.end4531

if.else4507:                                      ; preds = %if.else4501
  %2602 = load i16, i16* %type4486, align 2
  %conv4508 = zext i16 %2602 to i32
  %cmp4509 = icmp eq i32 %conv4508, 63
  br i1 %cmp4509, label %if.then4511, label %if.else4525

if.then4511:                                      ; preds = %if.else4507
  %2603 = load %struct.regnode*, %struct.regnode** %text_node, align 8
  %flags4512 = getelementptr inbounds %struct.regnode, %struct.regnode* %2603, i32 0, i32 0
  %2604 = load i8, i8* %flags4512, align 2
  %conv4513 = zext i8 %2604 to i32
  %cmp4514 = icmp eq i32 %conv4513, 0
  br i1 %cmp4514, label %cond.true4516, label %cond.false4519

cond.true4516:                                    ; preds = %if.then4511
  %2605 = load %struct.regnode*, %struct.regnode** %text_node, align 8
  %add.ptr4517 = getelementptr inbounds %struct.regnode, %struct.regnode* %2605, i64 1
  %add.ptr4518 = getelementptr inbounds %struct.regnode, %struct.regnode* %add.ptr4517, i64 1
  br label %cond.end4523

cond.false4519:                                   ; preds = %if.then4511
  %2606 = load %struct.regnode*, %struct.regnode** %text_node, align 8
  %2607 = load %struct.regnode*, %struct.regnode** %text_node, align 8
  %2608 = bitcast %struct.regnode* %2607 to %struct.regnode_1*
  %arg14520 = getelementptr inbounds %struct.regnode_1, %struct.regnode_1* %2608, i32 0, i32 3
  %2609 = load i32, i32* %arg14520, align 4
  %idx.ext4521 = zext i32 %2609 to i64
  %add.ptr4522 = getelementptr inbounds %struct.regnode, %struct.regnode* %2606, i64 %idx.ext4521
  br label %cond.end4523

cond.end4523:                                     ; preds = %cond.false4519, %cond.true4516
  %cond4524 = phi %struct.regnode* [ %add.ptr4518, %cond.true4516 ], [ %add.ptr4522, %cond.false4519 ]
  store %struct.regnode* %cond4524, %struct.regnode** %text_node, align 8
  br label %if.end4530

if.else4525:                                      ; preds = %if.else4507
  %2610 = load %struct.regnode*, %struct.regnode** %text_node, align 8
  %next_off4526 = getelementptr inbounds %struct.regnode, %struct.regnode* %2610, i32 0, i32 2
  %2611 = load i16, i16* %next_off4526, align 2
  %conv4527 = zext i16 %2611 to i32
  %2612 = load %struct.regnode*, %struct.regnode** %text_node, align 8
  %idx.ext4528 = sext i32 %conv4527 to i64
  %add.ptr4529 = getelementptr inbounds %struct.regnode, %struct.regnode* %2612, i64 %idx.ext4528
  store %struct.regnode* %add.ptr4529, %struct.regnode** %text_node, align 8
  br label %if.end4530

if.end4530:                                       ; preds = %if.else4525, %cond.end4523
  br label %if.end4531

if.end4531:                                       ; preds = %if.end4530, %if.then4505
  br label %if.end4532

if.end4532:                                       ; preds = %if.end4531, %if.then4498
  br label %while.cond4420

while.end4533:                                    ; preds = %lor.end4483
  br label %do.end4534

do.end4534:                                       ; preds = %while.end4533
  br label %if.end4535

if.end4535:                                       ; preds = %do.end4534, %lor.lhs.false4411, %if.then4401
  %2613 = load %struct.regnode*, %struct.regnode** %text_node, align 8
  %type4536 = getelementptr inbounds %struct.regnode, %struct.regnode* %2613, i32 0, i32 1
  %2614 = load i8, i8* %type4536, align 1
  %idxprom4537 = zext i8 %2614 to i64
  %arrayidx4538 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_regkind, i64 0, i64 %idxprom4537
  %2615 = load i8, i8* %arrayidx4538, align 1
  %conv4539 = zext i8 %2615 to i32
  %cmp4540 = icmp eq i32 %conv4539, 31
  br i1 %cmp4540, label %if.then4542, label %if.end4558

if.then4542:                                      ; preds = %if.end4535
  %2616 = load %struct.regnode*, %struct.regnode** %text_node, align 8
  %2617 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4543 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2617, i32 0, i32 2
  %curlym4544 = bitcast %union.anon.19* %u4543 to %struct.anon.30*
  %c14545 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4544, i32 0, i32 1
  %2618 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4546 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2618, i32 0, i32 2
  %curlym4547 = bitcast %union.anon.19* %u4546 to %struct.anon.30*
  %c1_utf8 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4547, i32 0, i32 12
  %arraydecay4548 = getelementptr inbounds [14 x i8], [14 x i8]* %c1_utf8, i64 0, i64 0
  %2619 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4549 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2619, i32 0, i32 2
  %curlym4550 = bitcast %union.anon.19* %u4549 to %struct.anon.30*
  %c24551 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4550, i32 0, i32 2
  %2620 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4552 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2620, i32 0, i32 2
  %curlym4553 = bitcast %union.anon.19* %u4552 to %struct.anon.30*
  %c2_utf8 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4553, i32 0, i32 13
  %arraydecay4554 = getelementptr inbounds [14 x i8], [14 x i8]* %c2_utf8, i64 0, i64 0
  %2621 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %call4555 = call zeroext i1 @S_setup_EXACTISH_ST_c1_c2(%struct.regnode* %2616, i32* %c14545, i8* %arraydecay4548, i32* %c24551, i8* %arraydecay4554, %struct.regmatch_info* %2621)
  br i1 %call4555, label %if.end4557, label %if.then4556

if.then4556:                                      ; preds = %if.then4542
  br label %no

if.end4557:                                       ; preds = %if.then4542
  br label %if.end4558

if.end4558:                                       ; preds = %if.end4557, %if.end4535
  br label %if.end4559

if.end4559:                                       ; preds = %if.end4558, %land.lhs.true4393, %lor.lhs.false4383
  br label %if.end4560

if.end4560:                                       ; preds = %if.end4559, %curlym_do_B
  %2622 = load i32, i32* %nextchr, align 4
  %cmp4561 = icmp slt i32 %2622, 0
  br i1 %cmp4561, label %if.end4613, label %land.lhs.true4563

land.lhs.true4563:                                ; preds = %if.end4560
  %2623 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4564 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2623, i32 0, i32 2
  %curlym4565 = bitcast %union.anon.19* %u4564 to %struct.anon.30*
  %c14566 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4565, i32 0, i32 1
  %2624 = load i32, i32* %c14566, align 8
  %cmp4567 = icmp ne i32 %2624, -1000
  br i1 %cmp4567, label %if.then4569, label %if.end4613

if.then4569:                                      ; preds = %land.lhs.true4563
  %2625 = load i32, i32* %nextchr, align 4
  %conv4570 = sext i32 %2625 to i64
  %cmp4571 = icmp ult i64 %conv4570, 128
  br i1 %cmp4571, label %if.else4598, label %land.lhs.true4573

land.lhs.true4573:                                ; preds = %if.then4569
  %2626 = load i8, i8* %utf8_target, align 1
  %tobool4574 = trunc i8 %2626 to i1
  br i1 %tobool4574, label %if.then4576, label %if.else4598

if.then4576:                                      ; preds = %land.lhs.true4573
  %2627 = load i8*, i8** %locinput, align 8
  %2628 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4577 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2628, i32 0, i32 2
  %curlym4578 = bitcast %union.anon.19* %u4577 to %struct.anon.30*
  %c1_utf84579 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4578, i32 0, i32 12
  %arraydecay4580 = getelementptr inbounds [14 x i8], [14 x i8]* %c1_utf84579, i64 0, i64 0
  %2629 = load i8*, i8** %locinput, align 8
  %2630 = load i8, i8* %2629, align 1
  %idxprom4581 = zext i8 %2630 to i64
  %arrayidx4582 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom4581
  %2631 = load i8, i8* %arrayidx4582, align 1
  %conv4583 = zext i8 %2631 to i64
  %call4584 = call i32 @memcmp(i8* %2627, i8* %arraydecay4580, i64 %conv4583) #5
  %tobool4585 = icmp ne i32 %call4584, 0
  br i1 %tobool4585, label %land.lhs.true4586, label %if.end4597

land.lhs.true4586:                                ; preds = %if.then4576
  %2632 = load i8*, i8** %locinput, align 8
  %2633 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4587 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2633, i32 0, i32 2
  %curlym4588 = bitcast %union.anon.19* %u4587 to %struct.anon.30*
  %c2_utf84589 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4588, i32 0, i32 13
  %arraydecay4590 = getelementptr inbounds [14 x i8], [14 x i8]* %c2_utf84589, i64 0, i64 0
  %2634 = load i8*, i8** %locinput, align 8
  %2635 = load i8, i8* %2634, align 1
  %idxprom4591 = zext i8 %2635 to i64
  %arrayidx4592 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom4591
  %2636 = load i8, i8* %arrayidx4592, align 1
  %conv4593 = zext i8 %2636 to i64
  %call4594 = call i32 @memcmp(i8* %2632, i8* %arraydecay4590, i64 %conv4593) #5
  %tobool4595 = icmp ne i32 %call4594, 0
  br i1 %tobool4595, label %if.then4596, label %if.end4597

if.then4596:                                      ; preds = %land.lhs.true4586
  store i32 115, i32* %state_num, align 4
  br label %reenter_switch

if.end4597:                                       ; preds = %land.lhs.true4586, %if.then4576
  br label %if.end4612

if.else4598:                                      ; preds = %land.lhs.true4573, %if.then4569
  %2637 = load i32, i32* %nextchr, align 4
  %2638 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4599 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2638, i32 0, i32 2
  %curlym4600 = bitcast %union.anon.19* %u4599 to %struct.anon.30*
  %c14601 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4600, i32 0, i32 1
  %2639 = load i32, i32* %c14601, align 8
  %cmp4602 = icmp ne i32 %2637, %2639
  br i1 %cmp4602, label %land.lhs.true4604, label %if.end4611

land.lhs.true4604:                                ; preds = %if.else4598
  %2640 = load i32, i32* %nextchr, align 4
  %2641 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4605 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2641, i32 0, i32 2
  %curlym4606 = bitcast %union.anon.19* %u4605 to %struct.anon.30*
  %c24607 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4606, i32 0, i32 2
  %2642 = load i32, i32* %c24607, align 4
  %cmp4608 = icmp ne i32 %2640, %2642
  br i1 %cmp4608, label %if.then4610, label %if.end4611

if.then4610:                                      ; preds = %land.lhs.true4604
  store i32 115, i32* %state_num, align 4
  br label %reenter_switch

if.end4611:                                       ; preds = %land.lhs.true4604, %if.else4598
  br label %if.end4612

if.end4612:                                       ; preds = %if.end4611, %if.end4597
  br label %if.end4613

if.end4613:                                       ; preds = %if.end4612, %land.lhs.true4563, %if.end4560
  %2643 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4614 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2643, i32 0, i32 2
  %curlym4615 = bitcast %union.anon.19* %u4614 to %struct.anon.30*
  %me4616 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4615, i32 0, i32 11
  %2644 = load %struct.regnode*, %struct.regnode** %me4616, align 8
  %flags4617 = getelementptr inbounds %struct.regnode, %struct.regnode* %2644, i32 0, i32 0
  %2645 = load i8, i8* %flags4617, align 2
  %tobool4618 = icmp ne i8 %2645, 0
  br i1 %tobool4618, label %if.then4619, label %if.end4716

if.then4619:                                      ; preds = %if.end4613
  %2646 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4621 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2646, i32 0, i32 2
  %curlym4622 = bitcast %union.anon.19* %u4621 to %struct.anon.30*
  %me4623 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4622, i32 0, i32 11
  %2647 = load %struct.regnode*, %struct.regnode** %me4623, align 8
  %flags4624 = getelementptr inbounds %struct.regnode, %struct.regnode* %2647, i32 0, i32 0
  %2648 = load i8, i8* %flags4624, align 2
  %conv4625 = zext i8 %2648 to i32
  store i32 %conv4625, i32* %paren4620, align 4
  %2649 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4626 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2649, i32 0, i32 2
  %curlym4627 = bitcast %union.anon.19* %u4626 to %struct.anon.30*
  %count4628 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4627, i32 0, i32 7
  %2650 = load i32, i32* %count4628, align 8
  %tobool4629 = icmp ne i32 %2650, 0
  br i1 %tobool4629, label %if.then4630, label %if.else4685

if.then4630:                                      ; preds = %if.then4619
  %2651 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %is_utf8_target4631 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %2651, i32 0, i32 14
  %2652 = load i8, i8* %is_utf8_target4631, align 2
  %tobool4632 = trunc i8 %2652 to i1
  br i1 %tobool4632, label %cond.true4634, label %cond.false4653

cond.true4634:                                    ; preds = %if.then4630
  %2653 = load i8*, i8** %locinput, align 8
  %2654 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4635 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2654, i32 0, i32 2
  %curlym4636 = bitcast %union.anon.19* %u4635 to %struct.anon.30*
  %alen4637 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4636, i32 0, i32 6
  %2655 = load i32, i32* %alen4637, align 4
  %sub4638 = sub nsw i32 0, %2655
  %conv4639 = sext i32 %sub4638 to i64
  %2656 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4640 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2656, i32 0, i32 2
  %curlym4641 = bitcast %union.anon.19* %u4640 to %struct.anon.30*
  %alen4642 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4641, i32 0, i32 6
  %2657 = load i32, i32* %alen4642, align 4
  %sub4643 = sub nsw i32 0, %2657
  %cmp4644 = icmp sge i32 %sub4643, 0
  br i1 %cmp4644, label %cond.true4646, label %cond.false4648

cond.true4646:                                    ; preds = %cond.true4634
  %2658 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend4647 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %2658, i32 0, i32 2
  %2659 = load i8*, i8** %strend4647, align 8
  br label %cond.end4650

cond.false4648:                                   ; preds = %cond.true4634
  %2660 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg4649 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %2660, i32 0, i32 1
  %2661 = load i8*, i8** %strbeg4649, align 8
  br label %cond.end4650

cond.end4650:                                     ; preds = %cond.false4648, %cond.true4646
  %cond4651 = phi i8* [ %2659, %cond.true4646 ], [ %2661, %cond.false4648 ]
  %call4652 = call i8* @S_reghop3(i8* %2653, i64 %conv4639, i8* %cond4651)
  br label %cond.end4660

cond.false4653:                                   ; preds = %if.then4630
  %2662 = load i8*, i8** %locinput, align 8
  %2663 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4654 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2663, i32 0, i32 2
  %curlym4655 = bitcast %union.anon.19* %u4654 to %struct.anon.30*
  %alen4656 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4655, i32 0, i32 6
  %2664 = load i32, i32* %alen4656, align 4
  %sub4657 = sub nsw i32 0, %2664
  %idx.ext4658 = sext i32 %sub4657 to i64
  %add.ptr4659 = getelementptr inbounds i8, i8* %2662, i64 %idx.ext4658
  br label %cond.end4660

cond.end4660:                                     ; preds = %cond.false4653, %cond.end4650
  %cond4661 = phi i8* [ %call4652, %cond.end4650 ], [ %add.ptr4659, %cond.false4653 ]
  %2665 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg4662 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %2665, i32 0, i32 1
  %2666 = load i8*, i8** %strbeg4662, align 8
  %sub.ptr.lhs.cast4663 = ptrtoint i8* %cond4661 to i64
  %sub.ptr.rhs.cast4664 = ptrtoint i8* %2666 to i64
  %sub.ptr.sub4665 = sub i64 %sub.ptr.lhs.cast4663, %sub.ptr.rhs.cast4664
  %2667 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %offs4666 = getelementptr inbounds %struct.regexp, %struct.regexp* %2667, i32 0, i32 17
  %2668 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %offs4666, align 8
  %2669 = load i32, i32* %paren4620, align 4
  %idxprom4667 = sext i32 %2669 to i64
  %arrayidx4668 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %2668, i64 %idxprom4667
  %start4669 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %arrayidx4668, i32 0, i32 0
  store i64 %sub.ptr.sub4665, i64* %start4669, align 8
  %2670 = load i8*, i8** %locinput, align 8
  %2671 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg4670 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %2671, i32 0, i32 1
  %2672 = load i8*, i8** %strbeg4670, align 8
  %sub.ptr.lhs.cast4671 = ptrtoint i8* %2670 to i64
  %sub.ptr.rhs.cast4672 = ptrtoint i8* %2672 to i64
  %sub.ptr.sub4673 = sub i64 %sub.ptr.lhs.cast4671, %sub.ptr.rhs.cast4672
  %2673 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %offs4674 = getelementptr inbounds %struct.regexp, %struct.regexp* %2673, i32 0, i32 17
  %2674 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %offs4674, align 8
  %2675 = load i32, i32* %paren4620, align 4
  %idxprom4675 = sext i32 %2675 to i64
  %arrayidx4676 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %2674, i64 %idxprom4675
  %end4677 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %arrayidx4676, i32 0, i32 1
  store i64 %sub.ptr.sub4673, i64* %end4677, align 8
  %2676 = load i32, i32* %paren4620, align 4
  %2677 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %lastparen4678 = getelementptr inbounds %struct.regexp, %struct.regexp* %2677, i32 0, i32 15
  %2678 = load i32, i32* %lastparen4678, align 8
  %cmp4679 = icmp ugt i32 %2676, %2678
  br i1 %cmp4679, label %if.then4681, label %if.end4683

if.then4681:                                      ; preds = %cond.end4660
  %2679 = load i32, i32* %paren4620, align 4
  %2680 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %lastparen4682 = getelementptr inbounds %struct.regexp, %struct.regexp* %2680, i32 0, i32 15
  store i32 %2679, i32* %lastparen4682, align 8
  br label %if.end4683

if.end4683:                                       ; preds = %if.then4681, %cond.end4660
  %2681 = load i32, i32* %paren4620, align 4
  %2682 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %lastcloseparen4684 = getelementptr inbounds %struct.regexp, %struct.regexp* %2682, i32 0, i32 16
  store i32 %2681, i32* %lastcloseparen4684, align 4
  br label %if.end4690

if.else4685:                                      ; preds = %if.then4619
  %2683 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %offs4686 = getelementptr inbounds %struct.regexp, %struct.regexp* %2683, i32 0, i32 17
  %2684 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %offs4686, align 8
  %2685 = load i32, i32* %paren4620, align 4
  %idxprom4687 = sext i32 %2685 to i64
  %arrayidx4688 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %2684, i64 %idxprom4687
  %end4689 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %arrayidx4688, i32 0, i32 1
  store i64 -1, i64* %end4689, align 8
  br label %if.end4690

if.end4690:                                       ; preds = %if.else4685, %if.end4683
  %2686 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_eval, align 8
  %tobool4691 = icmp ne %struct.regmatch_state* %2686, null
  br i1 %tobool4691, label %land.lhs.true4692, label %if.end4715

land.lhs.true4692:                                ; preds = %if.end4690
  %2687 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_eval, align 8
  %u4693 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2687, i32 0, i32 2
  %eval4694 = bitcast %union.anon.19* %u4693 to %struct.anon.24*
  %close_paren4695 = getelementptr inbounds %struct.anon.24, %struct.anon.24* %eval4694, i32 0, i32 6
  %2688 = load i32, i32* %close_paren4695, align 8
  %tobool4696 = icmp ne i32 %2688, 0
  br i1 %tobool4696, label %land.lhs.true4697, label %if.end4715

land.lhs.true4697:                                ; preds = %land.lhs.true4692
  %2689 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_eval, align 8
  %u4698 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2689, i32 0, i32 2
  %eval4699 = bitcast %union.anon.19* %u4698 to %struct.anon.24*
  %close_paren4700 = getelementptr inbounds %struct.anon.24, %struct.anon.24* %eval4699, i32 0, i32 6
  %2690 = load i32, i32* %close_paren4700, align 8
  %2691 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4701 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2691, i32 0, i32 2
  %curlym4702 = bitcast %union.anon.19* %u4701 to %struct.anon.30*
  %me4703 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4702, i32 0, i32 11
  %2692 = load %struct.regnode*, %struct.regnode** %me4703, align 8
  %flags4704 = getelementptr inbounds %struct.regnode, %struct.regnode* %2692, i32 0, i32 0
  %2693 = load i8, i8* %flags4704, align 2
  %conv4705 = zext i8 %2693 to i32
  %cmp4706 = icmp eq i32 %2690, %conv4705
  br i1 %cmp4706, label %if.then4708, label %if.end4715

if.then4708:                                      ; preds = %land.lhs.true4697
  %2694 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4709 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2694, i32 0, i32 2
  %curlym4710 = bitcast %union.anon.19* %u4709 to %struct.anon.30*
  %count4711 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4710, i32 0, i32 7
  %2695 = load i32, i32* %count4711, align 8
  %tobool4712 = icmp ne i32 %2695, 0
  br i1 %tobool4712, label %if.then4713, label %if.else4714

if.then4713:                                      ; preds = %if.then4708
  br label %fake_end

if.else4714:                                      ; preds = %if.then4708
  br label %no

if.end4715:                                       ; preds = %land.lhs.true4697, %land.lhs.true4692, %if.end4690
  br label %if.end4716

if.end4716:                                       ; preds = %if.end4715, %if.end4613
  %2696 = load i8*, i8** %locinput, align 8
  store i8* %2696, i8** %pushinput, align 8
  %2697 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4717 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2697, i32 0, i32 2
  %curlym4718 = bitcast %union.anon.19* %u4717 to %struct.anon.30*
  %B4719 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4718, i32 0, i32 10
  %2698 = load %struct.regnode*, %struct.regnode** %B4719, align 8
  store %struct.regnode* %2698, %struct.regnode** %scan, align 8
  %2699 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %resume_state4720 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2699, i32 0, i32 0
  store i32 114, i32* %resume_state4720, align 8
  br label %push_state

sw.bb4721:                                        ; preds = %cond.end45
  br label %do.body4722

do.body4722:                                      ; preds = %sw.bb4721
  %2700 = load i32, i32* @PL_savestack_ix, align 4
  %2701 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4723 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2701, i32 0, i32 2
  %curlym4724 = bitcast %union.anon.19* %u4723 to %struct.anon.30*
  %cp4725 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4724, i32 0, i32 3
  %2702 = load i32, i32* %cp4725, align 8
  %cmp4726 = icmp sgt i32 %2700, %2702
  br i1 %cmp4726, label %if.then4728, label %if.end4732

if.then4728:                                      ; preds = %do.body4722
  %2703 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4729 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2703, i32 0, i32 2
  %curlym4730 = bitcast %union.anon.19* %u4729 to %struct.anon.30*
  %cp4731 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4730, i32 0, i32 3
  %2704 = load i32, i32* %cp4731, align 8
  call void @Perl_leave_scope(i32 %2704)
  br label %if.end4732

if.end4732:                                       ; preds = %if.then4728, %do.body4722
  br label %do.end4733

do.end4733:                                       ; preds = %if.end4732
  %2705 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %lastparen4734 = getelementptr inbounds %struct.regexp, %struct.regexp* %2705, i32 0, i32 15
  %2706 = load i32, i32* %lastparen4734, align 8
  store i32 %2706, i32* %n, align 4
  br label %for.cond4735

for.cond4735:                                     ; preds = %for.inc4746, %do.end4733
  %2707 = load i32, i32* %n, align 4
  %2708 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4736 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2708, i32 0, i32 2
  %curlym4737 = bitcast %union.anon.19* %u4736 to %struct.anon.30*
  %lastparen4738 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4737, i32 0, i32 4
  %2709 = load i32, i32* %lastparen4738, align 4
  %cmp4739 = icmp ugt i32 %2707, %2709
  br i1 %cmp4739, label %for.body4741, label %for.end4748

for.body4741:                                     ; preds = %for.cond4735
  %2710 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %offs4742 = getelementptr inbounds %struct.regexp, %struct.regexp* %2710, i32 0, i32 17
  %2711 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %offs4742, align 8
  %2712 = load i32, i32* %n, align 4
  %idxprom4743 = zext i32 %2712 to i64
  %arrayidx4744 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %2711, i64 %idxprom4743
  %end4745 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %arrayidx4744, i32 0, i32 1
  store i64 -1, i64* %end4745, align 8
  br label %for.inc4746

for.inc4746:                                      ; preds = %for.body4741
  %2713 = load i32, i32* %n, align 4
  %dec4747 = add i32 %2713, -1
  store i32 %dec4747, i32* %n, align 4
  br label %for.cond4735

for.end4748:                                      ; preds = %for.cond4735
  %2714 = load i32, i32* %n, align 4
  %2715 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %lastparen4749 = getelementptr inbounds %struct.regexp, %struct.regexp* %2715, i32 0, i32 15
  store i32 %2714, i32* %lastparen4749, align 8
  %2716 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4750 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2716, i32 0, i32 2
  %curlym4751 = bitcast %union.anon.19* %u4750 to %struct.anon.30*
  %lastcloseparen4752 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4751, i32 0, i32 5
  %2717 = load i32, i32* %lastcloseparen4752, align 8
  %2718 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %lastcloseparen4753 = getelementptr inbounds %struct.regexp, %struct.regexp* %2718, i32 0, i32 16
  store i32 %2717, i32* %lastcloseparen4753, align 4
  %2719 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4754 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2719, i32 0, i32 2
  %curlym4755 = bitcast %union.anon.19* %u4754 to %struct.anon.30*
  %minmod4756 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4755, i32 0, i32 8
  %2720 = load i8, i8* %minmod4756, align 4
  %tobool4757 = trunc i8 %2720 to i1
  br i1 %tobool4757, label %if.then4758, label %if.end4775

if.then4758:                                      ; preds = %for.end4748
  %2721 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4760 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2721, i32 0, i32 2
  %curlym4761 = bitcast %union.anon.19* %u4760 to %struct.anon.30*
  %me4762 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4761, i32 0, i32 11
  %2722 = load %struct.regnode*, %struct.regnode** %me4762, align 8
  %2723 = bitcast %struct.regnode* %2722 to %struct.regnode_2*
  %arg24763 = getelementptr inbounds %struct.regnode_2, %struct.regnode_2* %2723, i32 0, i32 4
  %2724 = load i16, i16* %arg24763, align 2
  %conv4764 = zext i16 %2724 to i32
  store i32 %conv4764, i32* %max4759, align 4
  %2725 = load i32, i32* %max4759, align 4
  %cmp4765 = icmp ne i32 %2725, 32767
  br i1 %cmp4765, label %land.lhs.true4767, label %if.end4774

land.lhs.true4767:                                ; preds = %if.then4758
  %2726 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4768 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2726, i32 0, i32 2
  %curlym4769 = bitcast %union.anon.19* %u4768 to %struct.anon.30*
  %count4770 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4769, i32 0, i32 7
  %2727 = load i32, i32* %count4770, align 8
  %2728 = load i32, i32* %max4759, align 4
  %cmp4771 = icmp eq i32 %2727, %2728
  br i1 %cmp4771, label %if.then4773, label %if.end4774

if.then4773:                                      ; preds = %land.lhs.true4767
  br label %no

if.end4774:                                       ; preds = %land.lhs.true4767, %if.then4758
  br label %curlym_do_A

if.end4775:                                       ; preds = %for.end4748
  %2729 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4776 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2729, i32 0, i32 2
  %curlym4777 = bitcast %union.anon.19* %u4776 to %struct.anon.30*
  %count4778 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4777, i32 0, i32 7
  %2730 = load i32, i32* %count4778, align 8
  %2731 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4779 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2731, i32 0, i32 2
  %curlym4780 = bitcast %union.anon.19* %u4779 to %struct.anon.30*
  %me4781 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4780, i32 0, i32 11
  %2732 = load %struct.regnode*, %struct.regnode** %me4781, align 8
  %2733 = bitcast %struct.regnode* %2732 to %struct.regnode_2*
  %arg14782 = getelementptr inbounds %struct.regnode_2, %struct.regnode_2* %2733, i32 0, i32 3
  %2734 = load i16, i16* %arg14782, align 2
  %conv4783 = zext i16 %2734 to i32
  %cmp4784 = icmp eq i32 %2730, %conv4783
  br i1 %cmp4784, label %if.then4786, label %if.end4787

if.then4786:                                      ; preds = %if.end4775
  br label %no

if.end4787:                                       ; preds = %if.end4775
  %2735 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4788 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2735, i32 0, i32 2
  %curlym4789 = bitcast %union.anon.19* %u4788 to %struct.anon.30*
  %count4790 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4789, i32 0, i32 7
  %2736 = load i32, i32* %count4790, align 8
  %dec4791 = add nsw i32 %2736, -1
  store i32 %dec4791, i32* %count4790, align 8
  %2737 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %is_utf8_target4792 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %2737, i32 0, i32 14
  %2738 = load i8, i8* %is_utf8_target4792, align 2
  %tobool4793 = trunc i8 %2738 to i1
  br i1 %tobool4793, label %cond.true4795, label %cond.false4814

cond.true4795:                                    ; preds = %if.end4787
  %2739 = load i8*, i8** %locinput, align 8
  %2740 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4796 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2740, i32 0, i32 2
  %curlym4797 = bitcast %union.anon.19* %u4796 to %struct.anon.30*
  %alen4798 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4797, i32 0, i32 6
  %2741 = load i32, i32* %alen4798, align 4
  %sub4799 = sub nsw i32 0, %2741
  %conv4800 = sext i32 %sub4799 to i64
  %2742 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4801 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2742, i32 0, i32 2
  %curlym4802 = bitcast %union.anon.19* %u4801 to %struct.anon.30*
  %alen4803 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4802, i32 0, i32 6
  %2743 = load i32, i32* %alen4803, align 4
  %sub4804 = sub nsw i32 0, %2743
  %cmp4805 = icmp sge i32 %sub4804, 0
  br i1 %cmp4805, label %cond.true4807, label %cond.false4809

cond.true4807:                                    ; preds = %cond.true4795
  %2744 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend4808 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %2744, i32 0, i32 2
  %2745 = load i8*, i8** %strend4808, align 8
  br label %cond.end4811

cond.false4809:                                   ; preds = %cond.true4795
  %2746 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg4810 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %2746, i32 0, i32 1
  %2747 = load i8*, i8** %strbeg4810, align 8
  br label %cond.end4811

cond.end4811:                                     ; preds = %cond.false4809, %cond.true4807
  %cond4812 = phi i8* [ %2745, %cond.true4807 ], [ %2747, %cond.false4809 ]
  %call4813 = call i8* @S_reghop3(i8* %2739, i64 %conv4800, i8* %cond4812)
  br label %cond.end4821

cond.false4814:                                   ; preds = %if.end4787
  %2748 = load i8*, i8** %locinput, align 8
  %2749 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4815 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2749, i32 0, i32 2
  %curlym4816 = bitcast %union.anon.19* %u4815 to %struct.anon.30*
  %alen4817 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4816, i32 0, i32 6
  %2750 = load i32, i32* %alen4817, align 4
  %sub4818 = sub nsw i32 0, %2750
  %idx.ext4819 = sext i32 %sub4818 to i64
  %add.ptr4820 = getelementptr inbounds i8, i8* %2748, i64 %idx.ext4819
  br label %cond.end4821

cond.end4821:                                     ; preds = %cond.false4814, %cond.end4811
  %cond4822 = phi i8* [ %call4813, %cond.end4811 ], [ %add.ptr4820, %cond.false4814 ]
  store i8* %cond4822, i8** %locinput, align 8
  %2751 = load i8*, i8** %locinput, align 8
  %2752 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend4823 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %2752, i32 0, i32 2
  %2753 = load i8*, i8** %strend4823, align 8
  %cmp4824 = icmp ult i8* %2751, %2753
  br i1 %cmp4824, label %cond.true4826, label %cond.false4828

cond.true4826:                                    ; preds = %cond.end4821
  %2754 = load i8*, i8** %locinput, align 8
  %2755 = load i8, i8* %2754, align 1
  %conv4827 = zext i8 %2755 to i32
  br label %cond.end4829

cond.false4828:                                   ; preds = %cond.end4821
  br label %cond.end4829

cond.end4829:                                     ; preds = %cond.false4828, %cond.true4826
  %cond4830 = phi i32 [ %conv4827, %cond.true4826 ], [ -10, %cond.false4828 ]
  store i32 %cond4830, i32* %nextchr, align 4
  br label %curlym_do_B

sw.bb4831:                                        ; preds = %cond.end45
  %2756 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4832 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2756, i32 0, i32 2
  %curly = bitcast %union.anon.19* %u4832 to %struct.anon.31*
  %paren4833 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly, i32 0, i32 0
  store i32 0, i32* %paren4833, align 8
  %2757 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4834 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2757, i32 0, i32 2
  %curly4835 = bitcast %union.anon.19* %u4834 to %struct.anon.31*
  %min4836 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly4835, i32 0, i32 9
  store i32 0, i32* %min4836, align 4
  %2758 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4837 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2758, i32 0, i32 2
  %curly4838 = bitcast %union.anon.19* %u4837 to %struct.anon.31*
  %max4839 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly4838, i32 0, i32 10
  store i32 32767, i32* %max4839, align 8
  %2759 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %add.ptr4840 = getelementptr inbounds %struct.regnode, %struct.regnode* %2759, i64 1
  store %struct.regnode* %add.ptr4840, %struct.regnode** %scan, align 8
  br label %repeat

sw.bb4841:                                        ; preds = %cond.end45
  %2760 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4842 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2760, i32 0, i32 2
  %curly4843 = bitcast %union.anon.19* %u4842 to %struct.anon.31*
  %paren4844 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly4843, i32 0, i32 0
  store i32 0, i32* %paren4844, align 8
  %2761 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4845 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2761, i32 0, i32 2
  %curly4846 = bitcast %union.anon.19* %u4845 to %struct.anon.31*
  %min4847 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly4846, i32 0, i32 9
  store i32 1, i32* %min4847, align 4
  %2762 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4848 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2762, i32 0, i32 2
  %curly4849 = bitcast %union.anon.19* %u4848 to %struct.anon.31*
  %max4850 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly4849, i32 0, i32 10
  store i32 32767, i32* %max4850, align 8
  %2763 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %add.ptr4851 = getelementptr inbounds %struct.regnode, %struct.regnode* %2763, i64 1
  store %struct.regnode* %add.ptr4851, %struct.regnode** %scan, align 8
  br label %repeat

sw.bb4852:                                        ; preds = %cond.end45
  %2764 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %flags4853 = getelementptr inbounds %struct.regnode, %struct.regnode* %2764, i32 0, i32 0
  %2765 = load i8, i8* %flags4853, align 2
  %conv4854 = zext i8 %2765 to i32
  %2766 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4855 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2766, i32 0, i32 2
  %curly4856 = bitcast %union.anon.19* %u4855 to %struct.anon.31*
  %paren4857 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly4856, i32 0, i32 0
  store i32 %conv4854, i32* %paren4857, align 8
  %2767 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %lastparen4858 = getelementptr inbounds %struct.regexp, %struct.regexp* %2767, i32 0, i32 15
  %2768 = load i32, i32* %lastparen4858, align 8
  %2769 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4859 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2769, i32 0, i32 2
  %curly4860 = bitcast %union.anon.19* %u4859 to %struct.anon.31*
  %lastparen4861 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly4860, i32 0, i32 2
  store i32 %2768, i32* %lastparen4861, align 8
  %2770 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %lastcloseparen4862 = getelementptr inbounds %struct.regexp, %struct.regexp* %2770, i32 0, i32 16
  %2771 = load i32, i32* %lastcloseparen4862, align 4
  %2772 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4863 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2772, i32 0, i32 2
  %curly4864 = bitcast %union.anon.19* %u4863 to %struct.anon.31*
  %lastcloseparen4865 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly4864, i32 0, i32 3
  store i32 %2771, i32* %lastcloseparen4865, align 4
  %2773 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4866 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2773, i32 0, i32 2
  %curly4867 = bitcast %union.anon.19* %u4866 to %struct.anon.31*
  %paren4868 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly4867, i32 0, i32 0
  %2774 = load i32, i32* %paren4868, align 8
  %2775 = load i32, i32* %maxopenparen, align 4
  %cmp4869 = icmp ugt i32 %2774, %2775
  br i1 %cmp4869, label %if.then4871, label %if.end4875

if.then4871:                                      ; preds = %sw.bb4852
  %2776 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4872 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2776, i32 0, i32 2
  %curly4873 = bitcast %union.anon.19* %u4872 to %struct.anon.31*
  %paren4874 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly4873, i32 0, i32 0
  %2777 = load i32, i32* %paren4874, align 8
  store i32 %2777, i32* %maxopenparen, align 4
  br label %if.end4875

if.end4875:                                       ; preds = %if.then4871, %sw.bb4852
  %2778 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %2779 = bitcast %struct.regnode* %2778 to %struct.regnode_2*
  %arg14876 = getelementptr inbounds %struct.regnode_2, %struct.regnode_2* %2779, i32 0, i32 3
  %2780 = load i16, i16* %arg14876, align 2
  %conv4877 = zext i16 %2780 to i32
  %2781 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4878 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2781, i32 0, i32 2
  %curly4879 = bitcast %union.anon.19* %u4878 to %struct.anon.31*
  %min4880 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly4879, i32 0, i32 9
  store i32 %conv4877, i32* %min4880, align 4
  %2782 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %2783 = bitcast %struct.regnode* %2782 to %struct.regnode_2*
  %arg24881 = getelementptr inbounds %struct.regnode_2, %struct.regnode_2* %2783, i32 0, i32 4
  %2784 = load i16, i16* %arg24881, align 2
  %conv4882 = zext i16 %2784 to i32
  %2785 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4883 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2785, i32 0, i32 2
  %curly4884 = bitcast %union.anon.19* %u4883 to %struct.anon.31*
  %max4885 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly4884, i32 0, i32 10
  store i32 %conv4882, i32* %max4885, align 8
  %2786 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_eval, align 8
  %tobool4886 = icmp ne %struct.regmatch_state* %2786, null
  br i1 %tobool4886, label %land.lhs.true4887, label %if.end4908

land.lhs.true4887:                                ; preds = %if.end4875
  %2787 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_eval, align 8
  %u4888 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2787, i32 0, i32 2
  %eval4889 = bitcast %union.anon.19* %u4888 to %struct.anon.24*
  %close_paren4890 = getelementptr inbounds %struct.anon.24, %struct.anon.24* %eval4889, i32 0, i32 6
  %2788 = load i32, i32* %close_paren4890, align 8
  %tobool4891 = icmp ne i32 %2788, 0
  br i1 %tobool4891, label %land.lhs.true4892, label %if.end4908

land.lhs.true4892:                                ; preds = %land.lhs.true4887
  %2789 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_eval, align 8
  %u4893 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2789, i32 0, i32 2
  %eval4894 = bitcast %union.anon.19* %u4893 to %struct.anon.24*
  %close_paren4895 = getelementptr inbounds %struct.anon.24, %struct.anon.24* %eval4894, i32 0, i32 6
  %2790 = load i32, i32* %close_paren4895, align 8
  %2791 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4896 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2791, i32 0, i32 2
  %curly4897 = bitcast %union.anon.19* %u4896 to %struct.anon.31*
  %paren4898 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly4897, i32 0, i32 0
  %2792 = load i32, i32* %paren4898, align 8
  %cmp4899 = icmp eq i32 %2790, %2792
  br i1 %cmp4899, label %if.then4901, label %if.end4908

if.then4901:                                      ; preds = %land.lhs.true4892
  %2793 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4902 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2793, i32 0, i32 2
  %curly4903 = bitcast %union.anon.19* %u4902 to %struct.anon.31*
  %min4904 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly4903, i32 0, i32 9
  store i32 1, i32* %min4904, align 4
  %2794 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4905 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2794, i32 0, i32 2
  %curly4906 = bitcast %union.anon.19* %u4905 to %struct.anon.31*
  %max4907 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly4906, i32 0, i32 10
  store i32 1, i32* %max4907, align 8
  br label %if.end4908

if.end4908:                                       ; preds = %if.then4901, %land.lhs.true4892, %land.lhs.true4887, %if.end4875
  %2795 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %add.ptr4909 = getelementptr inbounds %struct.regnode, %struct.regnode* %2795, i64 1
  %add.ptr4910 = getelementptr inbounds %struct.regnode, %struct.regnode* %add.ptr4909, i64 1
  %call4911 = call %struct.regnode* @Perl_regnext(%struct.regnode* %add.ptr4910)
  store %struct.regnode* %call4911, %struct.regnode** %scan, align 8
  br label %repeat

sw.bb4912:                                        ; preds = %cond.end45
  %2796 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4913 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2796, i32 0, i32 2
  %curly4914 = bitcast %union.anon.19* %u4913 to %struct.anon.31*
  %paren4915 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly4914, i32 0, i32 0
  store i32 0, i32* %paren4915, align 8
  %2797 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %2798 = bitcast %struct.regnode* %2797 to %struct.regnode_2*
  %arg14916 = getelementptr inbounds %struct.regnode_2, %struct.regnode_2* %2798, i32 0, i32 3
  %2799 = load i16, i16* %arg14916, align 2
  %conv4917 = zext i16 %2799 to i32
  %2800 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4918 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2800, i32 0, i32 2
  %curly4919 = bitcast %union.anon.19* %u4918 to %struct.anon.31*
  %min4920 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly4919, i32 0, i32 9
  store i32 %conv4917, i32* %min4920, align 4
  %2801 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %2802 = bitcast %struct.regnode* %2801 to %struct.regnode_2*
  %arg24921 = getelementptr inbounds %struct.regnode_2, %struct.regnode_2* %2802, i32 0, i32 4
  %2803 = load i16, i16* %arg24921, align 2
  %conv4922 = zext i16 %2803 to i32
  %2804 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4923 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2804, i32 0, i32 2
  %curly4924 = bitcast %union.anon.19* %u4923 to %struct.anon.31*
  %max4925 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly4924, i32 0, i32 10
  store i32 %conv4922, i32* %max4925, align 8
  %2805 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %add.ptr4926 = getelementptr inbounds %struct.regnode, %struct.regnode* %2805, i64 1
  %add.ptr4927 = getelementptr inbounds %struct.regnode, %struct.regnode* %add.ptr4926, i64 1
  store %struct.regnode* %add.ptr4927, %struct.regnode** %scan, align 8
  br label %repeat

repeat:                                           ; preds = %sw.bb4912, %if.end4908, %sw.bb4841, %sw.bb4831
  %2806 = load %struct.regnode*, %struct.regnode** %next, align 8
  %type4928 = getelementptr inbounds %struct.regnode, %struct.regnode* %2806, i32 0, i32 1
  %2807 = load i8, i8* %type4928, align 1
  %idxprom4929 = zext i8 %2807 to i64
  %arrayidx4930 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_regkind, i64 0, i64 %idxprom4929
  %2808 = load i8, i8* %arrayidx4930, align 1
  %conv4931 = zext i8 %2808 to i32
  %cmp4932 = icmp eq i32 %conv4931, 31
  br i1 %cmp4932, label %if.else5009, label %lor.lhs.false4934

lor.lhs.false4934:                                ; preds = %repeat
  %2809 = load %struct.regnode*, %struct.regnode** %next, align 8
  %type4935 = getelementptr inbounds %struct.regnode, %struct.regnode* %2809, i32 0, i32 1
  %2810 = load i8, i8* %type4935, align 1
  %idxprom4936 = zext i8 %2810 to i64
  %arrayidx4937 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_regkind, i64 0, i64 %idxprom4936
  %2811 = load i8, i8* %arrayidx4937, align 1
  %conv4938 = zext i8 %2811 to i32
  %cmp4939 = icmp eq i32 %conv4938, 51
  br i1 %cmp4939, label %if.else5009, label %land.lhs.true4941

land.lhs.true4941:                                ; preds = %lor.lhs.false4934
  %2812 = load %struct.regnode*, %struct.regnode** %next, align 8
  %type4942 = getelementptr inbounds %struct.regnode, %struct.regnode* %2812, i32 0, i32 1
  %2813 = load i8, i8* %type4942, align 1
  %conv4943 = zext i8 %2813 to i32
  %cmp4944 = icmp eq i32 %conv4943, 49
  br i1 %cmp4944, label %if.else5009, label %lor.lhs.false4946

lor.lhs.false4946:                                ; preds = %land.lhs.true4941
  %2814 = load %struct.regnode*, %struct.regnode** %next, align 8
  %type4947 = getelementptr inbounds %struct.regnode, %struct.regnode* %2814, i32 0, i32 1
  %2815 = load i8, i8* %type4947, align 1
  %conv4948 = zext i8 %2815 to i32
  %cmp4949 = icmp eq i32 %conv4948, 50
  br i1 %cmp4949, label %land.lhs.true4951, label %lor.lhs.false4960

land.lhs.true4951:                                ; preds = %lor.lhs.false4946
  %2816 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_eval, align 8
  %tobool4952 = icmp ne %struct.regmatch_state* %2816, null
  br i1 %tobool4952, label %lor.lhs.false4953, label %if.else5009

lor.lhs.false4953:                                ; preds = %land.lhs.true4951
  %2817 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_eval, align 8
  %u4954 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2817, i32 0, i32 2
  %eval4955 = bitcast %union.anon.19* %u4954 to %struct.anon.24*
  %close_paren4956 = getelementptr inbounds %struct.anon.24, %struct.anon.24* %eval4955, i32 0, i32 6
  %2818 = load i32, i32* %close_paren4956, align 8
  %2819 = load %struct.regnode*, %struct.regnode** %next, align 8
  %2820 = bitcast %struct.regnode* %2819 to %struct.regnode_1*
  %arg14957 = getelementptr inbounds %struct.regnode_1, %struct.regnode_1* %2820, i32 0, i32 3
  %2821 = load i32, i32* %arg14957, align 4
  %cmp4958 = icmp ne i32 %2818, %2821
  br i1 %cmp4958, label %if.else5009, label %lor.lhs.false4960

lor.lhs.false4960:                                ; preds = %lor.lhs.false4953, %lor.lhs.false4946
  %2822 = load %struct.regnode*, %struct.regnode** %next, align 8
  %type4961 = getelementptr inbounds %struct.regnode, %struct.regnode* %2822, i32 0, i32 1
  %2823 = load i8, i8* %type4961, align 1
  %conv4962 = zext i8 %2823 to i32
  %cmp4963 = icmp eq i32 %conv4962, 68
  br i1 %cmp4963, label %if.else5009, label %lor.lhs.false4965

lor.lhs.false4965:                                ; preds = %lor.lhs.false4960
  %2824 = load %struct.regnode*, %struct.regnode** %next, align 8
  %type4966 = getelementptr inbounds %struct.regnode, %struct.regnode* %2824, i32 0, i32 1
  %2825 = load i8, i8* %type4966, align 1
  %conv4967 = zext i8 %2825 to i32
  %cmp4968 = icmp eq i32 %conv4967, 65
  br i1 %cmp4968, label %if.else5009, label %lor.lhs.false4970

lor.lhs.false4970:                                ; preds = %lor.lhs.false4965
  %2826 = load %struct.regnode*, %struct.regnode** %next, align 8
  %type4971 = getelementptr inbounds %struct.regnode, %struct.regnode* %2826, i32 0, i32 1
  %2827 = load i8, i8* %type4971, align 1
  %conv4972 = zext i8 %2827 to i32
  %cmp4973 = icmp eq i32 %conv4972, 63
  br i1 %cmp4973, label %if.else5009, label %lor.lhs.false4975

lor.lhs.false4975:                                ; preds = %lor.lhs.false4970
  %2828 = load %struct.regnode*, %struct.regnode** %next, align 8
  %type4976 = getelementptr inbounds %struct.regnode, %struct.regnode* %2828, i32 0, i32 1
  %2829 = load i8, i8* %type4976, align 1
  %conv4977 = zext i8 %2829 to i32
  %cmp4978 = icmp eq i32 %conv4977, 43
  br i1 %cmp4978, label %if.else5009, label %lor.lhs.false4980

lor.lhs.false4980:                                ; preds = %lor.lhs.false4975
  %2830 = load %struct.regnode*, %struct.regnode** %next, align 8
  %type4981 = getelementptr inbounds %struct.regnode, %struct.regnode* %2830, i32 0, i32 1
  %2831 = load i8, i8* %type4981, align 1
  %conv4982 = zext i8 %2831 to i32
  %cmp4983 = icmp eq i32 %conv4982, 69
  br i1 %cmp4983, label %if.else5009, label %lor.lhs.false4985

lor.lhs.false4985:                                ; preds = %lor.lhs.false4980
  %2832 = load %struct.regnode*, %struct.regnode** %next, align 8
  %type4986 = getelementptr inbounds %struct.regnode, %struct.regnode* %2832, i32 0, i32 1
  %2833 = load i8, i8* %type4986, align 1
  %conv4987 = zext i8 %2833 to i32
  %cmp4988 = icmp eq i32 %conv4987, 90
  br i1 %cmp4988, label %if.else5009, label %lor.lhs.false4990

lor.lhs.false4990:                                ; preds = %lor.lhs.false4985
  %2834 = load %struct.regnode*, %struct.regnode** %next, align 8
  %type4991 = getelementptr inbounds %struct.regnode, %struct.regnode* %2834, i32 0, i32 1
  %2835 = load i8, i8* %type4991, align 1
  %idxprom4992 = zext i8 %2835 to i64
  %arrayidx4993 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_regkind, i64 0, i64 %idxprom4992
  %2836 = load i8, i8* %arrayidx4993, align 1
  %conv4994 = zext i8 %2836 to i32
  %cmp4995 = icmp eq i32 %conv4994, 44
  br i1 %cmp4995, label %land.lhs.true4997, label %if.then5002

land.lhs.true4997:                                ; preds = %lor.lhs.false4990
  %2837 = load %struct.regnode*, %struct.regnode** %next, align 8
  %2838 = bitcast %struct.regnode* %2837 to %struct.regnode_2*
  %arg14998 = getelementptr inbounds %struct.regnode_2, %struct.regnode_2* %2838, i32 0, i32 3
  %2839 = load i16, i16* %arg14998, align 2
  %conv4999 = zext i16 %2839 to i32
  %cmp5000 = icmp sgt i32 %conv4999, 0
  br i1 %cmp5000, label %if.else5009, label %if.then5002

if.then5002:                                      ; preds = %land.lhs.true4997, %lor.lhs.false4990
  %2840 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5003 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2840, i32 0, i32 2
  %curly5004 = bitcast %union.anon.19* %u5003 to %struct.anon.31*
  %c25005 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5004, i32 0, i32 5
  store i32 -1000, i32* %c25005, align 4
  %2841 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5006 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2841, i32 0, i32 2
  %curly5007 = bitcast %union.anon.19* %u5006 to %struct.anon.31*
  %c15008 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5007, i32 0, i32 4
  store i32 -1000, i32* %c15008, align 8
  br label %if.end5196

if.else5009:                                      ; preds = %land.lhs.true4997, %lor.lhs.false4985, %lor.lhs.false4980, %lor.lhs.false4975, %lor.lhs.false4970, %lor.lhs.false4965, %lor.lhs.false4960, %lor.lhs.false4953, %land.lhs.true4951, %land.lhs.true4941, %lor.lhs.false4934, %repeat
  %2842 = load %struct.regnode*, %struct.regnode** %next, align 8
  store %struct.regnode* %2842, %struct.regnode** %text_node5010, align 8
  %2843 = load %struct.regnode*, %struct.regnode** %text_node5010, align 8
  %type5011 = getelementptr inbounds %struct.regnode, %struct.regnode* %2843, i32 0, i32 1
  %2844 = load i8, i8* %type5011, align 1
  %idxprom5012 = zext i8 %2844 to i64
  %arrayidx5013 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_regkind, i64 0, i64 %idxprom5012
  %2845 = load i8, i8* %arrayidx5013, align 1
  %conv5014 = zext i8 %2845 to i32
  %cmp5015 = icmp eq i32 %conv5014, 31
  br i1 %cmp5015, label %if.end5141, label %lor.lhs.false5017

lor.lhs.false5017:                                ; preds = %if.else5009
  %2846 = load %struct.regnode*, %struct.regnode** %text_node5010, align 8
  %type5018 = getelementptr inbounds %struct.regnode, %struct.regnode* %2846, i32 0, i32 1
  %2847 = load i8, i8* %type5018, align 1
  %idxprom5019 = zext i8 %2847 to i64
  %arrayidx5020 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_regkind, i64 0, i64 %idxprom5019
  %2848 = load i8, i8* %arrayidx5020, align 1
  %conv5021 = zext i8 %2848 to i32
  %cmp5022 = icmp eq i32 %conv5021, 51
  br i1 %cmp5022, label %if.end5141, label %if.then5024

if.then5024:                                      ; preds = %lor.lhs.false5017
  br label %do.body5025

do.body5025:                                      ; preds = %if.then5024
  br label %while.cond5026

while.cond5026:                                   ; preds = %if.end5138, %do.body5025
  %2849 = load %struct.regnode*, %struct.regnode** %text_node5010, align 8
  %type5027 = getelementptr inbounds %struct.regnode, %struct.regnode* %2849, i32 0, i32 1
  %2850 = load i8, i8* %type5027, align 1
  %conv5028 = zext i8 %2850 to i32
  %cmp5029 = icmp eq i32 %conv5028, 49
  br i1 %cmp5029, label %lor.end5089, label %lor.lhs.false5031

lor.lhs.false5031:                                ; preds = %while.cond5026
  %2851 = load %struct.regnode*, %struct.regnode** %text_node5010, align 8
  %type5032 = getelementptr inbounds %struct.regnode, %struct.regnode* %2851, i32 0, i32 1
  %2852 = load i8, i8* %type5032, align 1
  %conv5033 = zext i8 %2852 to i32
  %cmp5034 = icmp eq i32 %conv5033, 50
  br i1 %cmp5034, label %land.lhs.true5036, label %lor.lhs.false5045

land.lhs.true5036:                                ; preds = %lor.lhs.false5031
  %2853 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_eval, align 8
  %tobool5037 = icmp ne %struct.regmatch_state* %2853, null
  br i1 %tobool5037, label %lor.lhs.false5038, label %lor.end5089

lor.lhs.false5038:                                ; preds = %land.lhs.true5036
  %2854 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_eval, align 8
  %u5039 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2854, i32 0, i32 2
  %eval5040 = bitcast %union.anon.19* %u5039 to %struct.anon.24*
  %close_paren5041 = getelementptr inbounds %struct.anon.24, %struct.anon.24* %eval5040, i32 0, i32 6
  %2855 = load i32, i32* %close_paren5041, align 8
  %2856 = load %struct.regnode*, %struct.regnode** %text_node5010, align 8
  %2857 = bitcast %struct.regnode* %2856 to %struct.regnode_1*
  %arg15042 = getelementptr inbounds %struct.regnode_1, %struct.regnode_1* %2857, i32 0, i32 3
  %2858 = load i32, i32* %arg15042, align 4
  %cmp5043 = icmp ne i32 %2855, %2858
  br i1 %cmp5043, label %lor.end5089, label %lor.lhs.false5045

lor.lhs.false5045:                                ; preds = %lor.lhs.false5038, %lor.lhs.false5031
  %2859 = load %struct.regnode*, %struct.regnode** %text_node5010, align 8
  %type5046 = getelementptr inbounds %struct.regnode, %struct.regnode* %2859, i32 0, i32 1
  %2860 = load i8, i8* %type5046, align 1
  %conv5047 = zext i8 %2860 to i32
  %cmp5048 = icmp eq i32 %conv5047, 68
  br i1 %cmp5048, label %lor.end5089, label %lor.lhs.false5050

lor.lhs.false5050:                                ; preds = %lor.lhs.false5045
  %2861 = load %struct.regnode*, %struct.regnode** %text_node5010, align 8
  %type5051 = getelementptr inbounds %struct.regnode, %struct.regnode* %2861, i32 0, i32 1
  %2862 = load i8, i8* %type5051, align 1
  %conv5052 = zext i8 %2862 to i32
  %cmp5053 = icmp eq i32 %conv5052, 65
  br i1 %cmp5053, label %lor.end5089, label %lor.lhs.false5055

lor.lhs.false5055:                                ; preds = %lor.lhs.false5050
  %2863 = load %struct.regnode*, %struct.regnode** %text_node5010, align 8
  %type5056 = getelementptr inbounds %struct.regnode, %struct.regnode* %2863, i32 0, i32 1
  %2864 = load i8, i8* %type5056, align 1
  %conv5057 = zext i8 %2864 to i32
  %cmp5058 = icmp eq i32 %conv5057, 63
  br i1 %cmp5058, label %lor.end5089, label %lor.lhs.false5060

lor.lhs.false5060:                                ; preds = %lor.lhs.false5055
  %2865 = load %struct.regnode*, %struct.regnode** %text_node5010, align 8
  %type5061 = getelementptr inbounds %struct.regnode, %struct.regnode* %2865, i32 0, i32 1
  %2866 = load i8, i8* %type5061, align 1
  %conv5062 = zext i8 %2866 to i32
  %cmp5063 = icmp eq i32 %conv5062, 43
  br i1 %cmp5063, label %lor.end5089, label %lor.lhs.false5065

lor.lhs.false5065:                                ; preds = %lor.lhs.false5060
  %2867 = load %struct.regnode*, %struct.regnode** %text_node5010, align 8
  %type5066 = getelementptr inbounds %struct.regnode, %struct.regnode* %2867, i32 0, i32 1
  %2868 = load i8, i8* %type5066, align 1
  %conv5067 = zext i8 %2868 to i32
  %cmp5068 = icmp eq i32 %conv5067, 69
  br i1 %cmp5068, label %lor.end5089, label %lor.lhs.false5070

lor.lhs.false5070:                                ; preds = %lor.lhs.false5065
  %2869 = load %struct.regnode*, %struct.regnode** %text_node5010, align 8
  %type5071 = getelementptr inbounds %struct.regnode, %struct.regnode* %2869, i32 0, i32 1
  %2870 = load i8, i8* %type5071, align 1
  %conv5072 = zext i8 %2870 to i32
  %cmp5073 = icmp eq i32 %conv5072, 90
  br i1 %cmp5073, label %lor.end5089, label %lor.rhs5075

lor.rhs5075:                                      ; preds = %lor.lhs.false5070
  %2871 = load %struct.regnode*, %struct.regnode** %text_node5010, align 8
  %type5076 = getelementptr inbounds %struct.regnode, %struct.regnode* %2871, i32 0, i32 1
  %2872 = load i8, i8* %type5076, align 1
  %idxprom5077 = zext i8 %2872 to i64
  %arrayidx5078 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_regkind, i64 0, i64 %idxprom5077
  %2873 = load i8, i8* %arrayidx5078, align 1
  %conv5079 = zext i8 %2873 to i32
  %cmp5080 = icmp eq i32 %conv5079, 44
  br i1 %cmp5080, label %land.rhs5082, label %land.end5087

land.rhs5082:                                     ; preds = %lor.rhs5075
  %2874 = load %struct.regnode*, %struct.regnode** %text_node5010, align 8
  %2875 = bitcast %struct.regnode* %2874 to %struct.regnode_2*
  %arg15083 = getelementptr inbounds %struct.regnode_2, %struct.regnode_2* %2875, i32 0, i32 3
  %2876 = load i16, i16* %arg15083, align 2
  %conv5084 = zext i16 %2876 to i32
  %cmp5085 = icmp sgt i32 %conv5084, 0
  br label %land.end5087

land.end5087:                                     ; preds = %land.rhs5082, %lor.rhs5075
  %2877 = phi i1 [ false, %lor.rhs5075 ], [ %cmp5085, %land.rhs5082 ]
  br label %lor.end5089

lor.end5089:                                      ; preds = %land.end5087, %lor.lhs.false5070, %lor.lhs.false5065, %lor.lhs.false5060, %lor.lhs.false5055, %lor.lhs.false5050, %lor.lhs.false5045, %lor.lhs.false5038, %land.lhs.true5036, %while.cond5026
  %2878 = phi i1 [ true, %lor.lhs.false5070 ], [ true, %lor.lhs.false5065 ], [ true, %lor.lhs.false5060 ], [ true, %lor.lhs.false5055 ], [ true, %lor.lhs.false5050 ], [ true, %lor.lhs.false5045 ], [ true, %lor.lhs.false5038 ], [ true, %land.lhs.true5036 ], [ true, %while.cond5026 ], [ %2877, %land.end5087 ]
  br i1 %2878, label %while.body5091, label %while.end5139

while.body5091:                                   ; preds = %lor.end5089
  %2879 = load %struct.regnode*, %struct.regnode** %text_node5010, align 8
  %type5093 = getelementptr inbounds %struct.regnode, %struct.regnode* %2879, i32 0, i32 1
  %2880 = load i8, i8* %type5093, align 1
  %conv5094 = zext i8 %2880 to i16
  store i16 %conv5094, i16* %type5092, align 2
  %2881 = load i16, i16* %type5092, align 2
  %conv5095 = zext i16 %2881 to i32
  %cmp5096 = icmp eq i32 %conv5095, 65
  br i1 %cmp5096, label %if.then5104, label %lor.lhs.false5098

lor.lhs.false5098:                                ; preds = %while.body5091
  %2882 = load i16, i16* %type5092, align 2
  %idxprom5099 = zext i16 %2882 to i64
  %arrayidx5100 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_regkind, i64 0, i64 %idxprom5099
  %2883 = load i8, i8* %arrayidx5100, align 1
  %conv5101 = zext i8 %2883 to i32
  %cmp5102 = icmp eq i32 %conv5101, 44
  br i1 %cmp5102, label %if.then5104, label %if.else5107

if.then5104:                                      ; preds = %lor.lhs.false5098, %while.body5091
  %2884 = load %struct.regnode*, %struct.regnode** %text_node5010, align 8
  %add.ptr5105 = getelementptr inbounds %struct.regnode, %struct.regnode* %2884, i64 1
  %add.ptr5106 = getelementptr inbounds %struct.regnode, %struct.regnode* %add.ptr5105, i64 1
  store %struct.regnode* %add.ptr5106, %struct.regnode** %text_node5010, align 8
  br label %if.end5138

if.else5107:                                      ; preds = %lor.lhs.false5098
  %2885 = load i16, i16* %type5092, align 2
  %conv5108 = zext i16 %2885 to i32
  %cmp5109 = icmp eq i32 %conv5108, 43
  br i1 %cmp5109, label %if.then5111, label %if.else5113

if.then5111:                                      ; preds = %if.else5107
  %2886 = load %struct.regnode*, %struct.regnode** %text_node5010, align 8
  %add.ptr5112 = getelementptr inbounds %struct.regnode, %struct.regnode* %2886, i64 1
  store %struct.regnode* %add.ptr5112, %struct.regnode** %text_node5010, align 8
  br label %if.end5137

if.else5113:                                      ; preds = %if.else5107
  %2887 = load i16, i16* %type5092, align 2
  %conv5114 = zext i16 %2887 to i32
  %cmp5115 = icmp eq i32 %conv5114, 63
  br i1 %cmp5115, label %if.then5117, label %if.else5131

if.then5117:                                      ; preds = %if.else5113
  %2888 = load %struct.regnode*, %struct.regnode** %text_node5010, align 8
  %flags5118 = getelementptr inbounds %struct.regnode, %struct.regnode* %2888, i32 0, i32 0
  %2889 = load i8, i8* %flags5118, align 2
  %conv5119 = zext i8 %2889 to i32
  %cmp5120 = icmp eq i32 %conv5119, 0
  br i1 %cmp5120, label %cond.true5122, label %cond.false5125

cond.true5122:                                    ; preds = %if.then5117
  %2890 = load %struct.regnode*, %struct.regnode** %text_node5010, align 8
  %add.ptr5123 = getelementptr inbounds %struct.regnode, %struct.regnode* %2890, i64 1
  %add.ptr5124 = getelementptr inbounds %struct.regnode, %struct.regnode* %add.ptr5123, i64 1
  br label %cond.end5129

cond.false5125:                                   ; preds = %if.then5117
  %2891 = load %struct.regnode*, %struct.regnode** %text_node5010, align 8
  %2892 = load %struct.regnode*, %struct.regnode** %text_node5010, align 8
  %2893 = bitcast %struct.regnode* %2892 to %struct.regnode_1*
  %arg15126 = getelementptr inbounds %struct.regnode_1, %struct.regnode_1* %2893, i32 0, i32 3
  %2894 = load i32, i32* %arg15126, align 4
  %idx.ext5127 = zext i32 %2894 to i64
  %add.ptr5128 = getelementptr inbounds %struct.regnode, %struct.regnode* %2891, i64 %idx.ext5127
  br label %cond.end5129

cond.end5129:                                     ; preds = %cond.false5125, %cond.true5122
  %cond5130 = phi %struct.regnode* [ %add.ptr5124, %cond.true5122 ], [ %add.ptr5128, %cond.false5125 ]
  store %struct.regnode* %cond5130, %struct.regnode** %text_node5010, align 8
  br label %if.end5136

if.else5131:                                      ; preds = %if.else5113
  %2895 = load %struct.regnode*, %struct.regnode** %text_node5010, align 8
  %next_off5132 = getelementptr inbounds %struct.regnode, %struct.regnode* %2895, i32 0, i32 2
  %2896 = load i16, i16* %next_off5132, align 2
  %conv5133 = zext i16 %2896 to i32
  %2897 = load %struct.regnode*, %struct.regnode** %text_node5010, align 8
  %idx.ext5134 = sext i32 %conv5133 to i64
  %add.ptr5135 = getelementptr inbounds %struct.regnode, %struct.regnode* %2897, i64 %idx.ext5134
  store %struct.regnode* %add.ptr5135, %struct.regnode** %text_node5010, align 8
  br label %if.end5136

if.end5136:                                       ; preds = %if.else5131, %cond.end5129
  br label %if.end5137

if.end5137:                                       ; preds = %if.end5136, %if.then5111
  br label %if.end5138

if.end5138:                                       ; preds = %if.end5137, %if.then5104
  br label %while.cond5026

while.end5139:                                    ; preds = %lor.end5089
  br label %do.end5140

do.end5140:                                       ; preds = %while.end5139
  br label %if.end5141

if.end5141:                                       ; preds = %do.end5140, %lor.lhs.false5017, %if.else5009
  %2898 = load %struct.regnode*, %struct.regnode** %text_node5010, align 8
  %type5142 = getelementptr inbounds %struct.regnode, %struct.regnode* %2898, i32 0, i32 1
  %2899 = load i8, i8* %type5142, align 1
  %idxprom5143 = zext i8 %2899 to i64
  %arrayidx5144 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_regkind, i64 0, i64 %idxprom5143
  %2900 = load i8, i8* %arrayidx5144, align 1
  %conv5145 = zext i8 %2900 to i32
  %cmp5146 = icmp eq i32 %conv5145, 31
  br i1 %cmp5146, label %if.else5162, label %lor.lhs.false5148

lor.lhs.false5148:                                ; preds = %if.end5141
  %2901 = load %struct.regnode*, %struct.regnode** %text_node5010, align 8
  %type5149 = getelementptr inbounds %struct.regnode, %struct.regnode* %2901, i32 0, i32 1
  %2902 = load i8, i8* %type5149, align 1
  %idxprom5150 = zext i8 %2902 to i64
  %arrayidx5151 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_regkind, i64 0, i64 %idxprom5150
  %2903 = load i8, i8* %arrayidx5151, align 1
  %conv5152 = zext i8 %2903 to i32
  %cmp5153 = icmp eq i32 %conv5152, 51
  br i1 %cmp5153, label %if.else5162, label %if.then5155

if.then5155:                                      ; preds = %lor.lhs.false5148
  %2904 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5156 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2904, i32 0, i32 2
  %curly5157 = bitcast %union.anon.19* %u5156 to %struct.anon.31*
  %c25158 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5157, i32 0, i32 5
  store i32 -1000, i32* %c25158, align 4
  %2905 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5159 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2905, i32 0, i32 2
  %curly5160 = bitcast %union.anon.19* %u5159 to %struct.anon.31*
  %c15161 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5160, i32 0, i32 4
  store i32 -1000, i32* %c15161, align 8
  br label %if.end5195

if.else5162:                                      ; preds = %lor.lhs.false5148, %if.end5141
  %2906 = load %struct.regnode*, %struct.regnode** %text_node5010, align 8
  %type5163 = getelementptr inbounds %struct.regnode, %struct.regnode* %2906, i32 0, i32 1
  %2907 = load i8, i8* %type5163, align 1
  %idxprom5164 = zext i8 %2907 to i64
  %arrayidx5165 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_regkind, i64 0, i64 %idxprom5164
  %2908 = load i8, i8* %arrayidx5165, align 1
  %conv5166 = zext i8 %2908 to i32
  %cmp5167 = icmp ne i32 %conv5166, 31
  br i1 %cmp5167, label %if.then5169, label %if.else5176

if.then5169:                                      ; preds = %if.else5162
  %2909 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5170 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2909, i32 0, i32 2
  %curly5171 = bitcast %union.anon.19* %u5170 to %struct.anon.31*
  %c25172 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5171, i32 0, i32 5
  store i32 -1000, i32* %c25172, align 4
  %2910 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5173 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2910, i32 0, i32 2
  %curly5174 = bitcast %union.anon.19* %u5173 to %struct.anon.31*
  %c15175 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5174, i32 0, i32 4
  store i32 -1000, i32* %c15175, align 8
  br label %if.end5194

if.else5176:                                      ; preds = %if.else5162
  %2911 = load %struct.regnode*, %struct.regnode** %text_node5010, align 8
  %2912 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5177 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2912, i32 0, i32 2
  %curly5178 = bitcast %union.anon.19* %u5177 to %struct.anon.31*
  %c15179 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5178, i32 0, i32 4
  %2913 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5180 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2913, i32 0, i32 2
  %curly5181 = bitcast %union.anon.19* %u5180 to %struct.anon.31*
  %c1_utf85182 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5181, i32 0, i32 13
  %arraydecay5183 = getelementptr inbounds [14 x i8], [14 x i8]* %c1_utf85182, i64 0, i64 0
  %2914 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5184 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2914, i32 0, i32 2
  %curly5185 = bitcast %union.anon.19* %u5184 to %struct.anon.31*
  %c25186 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5185, i32 0, i32 5
  %2915 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5187 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2915, i32 0, i32 2
  %curly5188 = bitcast %union.anon.19* %u5187 to %struct.anon.31*
  %c2_utf85189 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5188, i32 0, i32 14
  %arraydecay5190 = getelementptr inbounds [14 x i8], [14 x i8]* %c2_utf85189, i64 0, i64 0
  %2916 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %call5191 = call zeroext i1 @S_setup_EXACTISH_ST_c1_c2(%struct.regnode* %2911, i32* %c15179, i8* %arraydecay5183, i32* %c25186, i8* %arraydecay5190, %struct.regmatch_info* %2916)
  br i1 %call5191, label %if.end5193, label %if.then5192

if.then5192:                                      ; preds = %if.else5176
  br label %no

if.end5193:                                       ; preds = %if.else5176
  br label %if.end5194

if.end5194:                                       ; preds = %if.end5193, %if.then5169
  br label %if.end5195

if.end5195:                                       ; preds = %if.end5194, %if.then5155
  br label %if.end5196

if.end5196:                                       ; preds = %if.end5195, %if.then5002
  %2917 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %2918 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5197 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2918, i32 0, i32 2
  %curly5198 = bitcast %union.anon.19* %u5197 to %struct.anon.31*
  %A5199 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5198, i32 0, i32 11
  store %struct.regnode* %2917, %struct.regnode** %A5199, align 8
  %2919 = load %struct.regnode*, %struct.regnode** %next, align 8
  %2920 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5200 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2920, i32 0, i32 2
  %curly5201 = bitcast %union.anon.19* %u5200 to %struct.anon.31*
  %B5202 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5201, i32 0, i32 12
  store %struct.regnode* %2919, %struct.regnode** %B5202, align 8
  %2921 = load i8, i8* %minmod, align 1
  %tobool5203 = trunc i8 %2921 to i1
  br i1 %tobool5203, label %if.then5204, label %if.else5346

if.then5204:                                      ; preds = %if.end5196
  %2922 = load i8*, i8** %locinput, align 8
  store i8* %2922, i8** %li, align 8
  store i8 0, i8* %minmod, align 1
  %2923 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5205 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2923, i32 0, i32 2
  %curly5206 = bitcast %union.anon.19* %u5205 to %struct.anon.31*
  %min5207 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5206, i32 0, i32 9
  %2924 = load i32, i32* %min5207, align 4
  %tobool5208 = icmp ne i32 %2924, 0
  br i1 %tobool5208, label %land.lhs.true5209, label %if.end5223

land.lhs.true5209:                                ; preds = %if.then5204
  %2925 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %2926 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5210 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2926, i32 0, i32 2
  %curly5211 = bitcast %union.anon.19* %u5210 to %struct.anon.31*
  %A5212 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5211, i32 0, i32 11
  %2927 = load %struct.regnode*, %struct.regnode** %A5212, align 8
  %2928 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %2929 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5213 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2929, i32 0, i32 2
  %curly5214 = bitcast %union.anon.19* %u5213 to %struct.anon.31*
  %min5215 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5214, i32 0, i32 9
  %2930 = load i32, i32* %min5215, align 4
  %2931 = load i32, i32* %depth, align 4
  %call5216 = call i32 @S_regrepeat(%struct.regexp* %2925, i8** %li, %struct.regnode* %2927, %struct.regmatch_info* %2928, i32 %2930, i32 %2931)
  %2932 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5217 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2932, i32 0, i32 2
  %curly5218 = bitcast %union.anon.19* %u5217 to %struct.anon.31*
  %min5219 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5218, i32 0, i32 9
  %2933 = load i32, i32* %min5219, align 4
  %cmp5220 = icmp slt i32 %call5216, %2933
  br i1 %cmp5220, label %if.then5222, label %if.end5223

if.then5222:                                      ; preds = %land.lhs.true5209
  br label %no

if.end5223:                                       ; preds = %land.lhs.true5209, %if.then5204
  %2934 = load i8*, i8** %li, align 8
  store i8* %2934, i8** %locinput, align 8
  %2935 = load i8*, i8** %locinput, align 8
  %2936 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend5224 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %2936, i32 0, i32 2
  %2937 = load i8*, i8** %strend5224, align 8
  %cmp5225 = icmp ult i8* %2935, %2937
  br i1 %cmp5225, label %cond.true5227, label %cond.false5229

cond.true5227:                                    ; preds = %if.end5223
  %2938 = load i8*, i8** %locinput, align 8
  %2939 = load i8, i8* %2938, align 1
  %conv5228 = zext i8 %2939 to i32
  br label %cond.end5230

cond.false5229:                                   ; preds = %if.end5223
  br label %cond.end5230

cond.end5230:                                     ; preds = %cond.false5229, %cond.true5227
  %cond5231 = phi i32 [ %conv5228, %cond.true5227 ], [ -10, %cond.false5229 ]
  store i32 %cond5231, i32* %nextchr, align 4
  %2940 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5232 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2940, i32 0, i32 2
  %curly5233 = bitcast %union.anon.19* %u5232 to %struct.anon.31*
  %min5234 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5233, i32 0, i32 9
  %2941 = load i32, i32* %min5234, align 4
  %2942 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5235 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2942, i32 0, i32 2
  %curly5236 = bitcast %union.anon.19* %u5235 to %struct.anon.31*
  %count5237 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5236, i32 0, i32 8
  store i32 %2941, i32* %count5237, align 8
  %2943 = load i32, i32* @PL_savestack_ix, align 4
  %2944 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5238 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2944, i32 0, i32 2
  %curly5239 = bitcast %union.anon.19* %u5238 to %struct.anon.31*
  %cp5240 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5239, i32 0, i32 1
  store i32 %2943, i32* %cp5240, align 4
  %2945 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5241 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2945, i32 0, i32 2
  %curly5242 = bitcast %union.anon.19* %u5241 to %struct.anon.31*
  %c15243 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5242, i32 0, i32 4
  %2946 = load i32, i32* %c15243, align 8
  %cmp5244 = icmp eq i32 %2946, -1000
  br i1 %cmp5244, label %if.then5246, label %if.end5247

if.then5246:                                      ; preds = %cond.end5230
  br label %curly_try_B_min

if.end5247:                                       ; preds = %cond.end5230
  %2947 = load i8*, i8** %locinput, align 8
  %2948 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5248 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2948, i32 0, i32 2
  %curly5249 = bitcast %union.anon.19* %u5248 to %struct.anon.31*
  %oldloc = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5249, i32 0, i32 7
  store i8* %2947, i8** %oldloc, align 8
  %2949 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5250 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2949, i32 0, i32 2
  %curly5251 = bitcast %union.anon.19* %u5250 to %struct.anon.31*
  %max5252 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5251, i32 0, i32 10
  %2950 = load i32, i32* %max5252, align 8
  %cmp5253 = icmp eq i32 %2950, 32767
  br i1 %cmp5253, label %if.then5255, label %if.else5277

if.then5255:                                      ; preds = %if.end5247
  %2951 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend5256 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %2951, i32 0, i32 2
  %2952 = load i8*, i8** %strend5256, align 8
  %add.ptr5257 = getelementptr inbounds i8, i8* %2952, i64 -1
  %2953 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5258 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2953, i32 0, i32 2
  %curly5259 = bitcast %union.anon.19* %u5258 to %struct.anon.31*
  %maxpos = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5259, i32 0, i32 6
  store i8* %add.ptr5257, i8** %maxpos, align 8
  %2954 = load i8, i8* %utf8_target, align 1
  %tobool5260 = trunc i8 %2954 to i1
  br i1 %tobool5260, label %if.then5261, label %if.end5276

if.then5261:                                      ; preds = %if.then5255
  br label %while.cond5262

while.cond5262:                                   ; preds = %while.body5270, %if.then5261
  %2955 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5263 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2955, i32 0, i32 2
  %curly5264 = bitcast %union.anon.19* %u5263 to %struct.anon.31*
  %maxpos5265 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5264, i32 0, i32 6
  %2956 = load i8*, i8** %maxpos5265, align 8
  %2957 = load i8, i8* %2956, align 1
  %conv5266 = zext i8 %2957 to i32
  %and5267 = and i32 %conv5266, 192
  %cmp5268 = icmp eq i32 %and5267, 128
  br i1 %cmp5268, label %while.body5270, label %while.end5275

while.body5270:                                   ; preds = %while.cond5262
  %2958 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5271 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2958, i32 0, i32 2
  %curly5272 = bitcast %union.anon.19* %u5271 to %struct.anon.31*
  %maxpos5273 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5272, i32 0, i32 6
  %2959 = load i8*, i8** %maxpos5273, align 8
  %incdec.ptr5274 = getelementptr inbounds i8, i8* %2959, i32 -1
  store i8* %incdec.ptr5274, i8** %maxpos5273, align 8
  br label %while.cond5262

while.end5275:                                    ; preds = %while.cond5262
  br label %if.end5276

if.end5276:                                       ; preds = %while.end5275, %if.then5255
  br label %if.end5345

if.else5277:                                      ; preds = %if.end5247
  %2960 = load i8, i8* %utf8_target, align 1
  %tobool5278 = trunc i8 %2960 to i1
  br i1 %tobool5278, label %if.then5279, label %if.else5317

if.then5279:                                      ; preds = %if.else5277
  %2961 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5280 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2961, i32 0, i32 2
  %curly5281 = bitcast %union.anon.19* %u5280 to %struct.anon.31*
  %max5282 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5281, i32 0, i32 10
  %2962 = load i32, i32* %max5282, align 8
  %2963 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5283 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2963, i32 0, i32 2
  %curly5284 = bitcast %union.anon.19* %u5283 to %struct.anon.31*
  %min5285 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5284, i32 0, i32 9
  %2964 = load i32, i32* %min5285, align 4
  %sub5286 = sub nsw i32 %2962, %2964
  store i32 %sub5286, i32* %m, align 4
  %2965 = load i8*, i8** %locinput, align 8
  %2966 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5287 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2966, i32 0, i32 2
  %curly5288 = bitcast %union.anon.19* %u5287 to %struct.anon.31*
  %maxpos5289 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5288, i32 0, i32 6
  store i8* %2965, i8** %maxpos5289, align 8
  br label %for.cond5290

for.cond5290:                                     ; preds = %for.inc5314, %if.then5279
  %2967 = load i32, i32* %m, align 4
  %cmp5291 = icmp sgt i32 %2967, 0
  br i1 %cmp5291, label %land.rhs5293, label %land.end5300

land.rhs5293:                                     ; preds = %for.cond5290
  %2968 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5294 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2968, i32 0, i32 2
  %curly5295 = bitcast %union.anon.19* %u5294 to %struct.anon.31*
  %maxpos5296 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5295, i32 0, i32 6
  %2969 = load i8*, i8** %maxpos5296, align 8
  %2970 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend5297 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %2970, i32 0, i32 2
  %2971 = load i8*, i8** %strend5297, align 8
  %cmp5298 = icmp ult i8* %2969, %2971
  br label %land.end5300

land.end5300:                                     ; preds = %land.rhs5293, %for.cond5290
  %2972 = phi i1 [ false, %for.cond5290 ], [ %cmp5298, %land.rhs5293 ]
  br i1 %2972, label %for.body5302, label %for.end5316

for.body5302:                                     ; preds = %land.end5300
  %2973 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5303 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2973, i32 0, i32 2
  %curly5304 = bitcast %union.anon.19* %u5303 to %struct.anon.31*
  %maxpos5305 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5304, i32 0, i32 6
  %2974 = load i8*, i8** %maxpos5305, align 8
  %2975 = load i8, i8* %2974, align 1
  %idxprom5306 = zext i8 %2975 to i64
  %arrayidx5307 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom5306
  %2976 = load i8, i8* %arrayidx5307, align 1
  %conv5308 = zext i8 %2976 to i32
  %2977 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5309 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2977, i32 0, i32 2
  %curly5310 = bitcast %union.anon.19* %u5309 to %struct.anon.31*
  %maxpos5311 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5310, i32 0, i32 6
  %2978 = load i8*, i8** %maxpos5311, align 8
  %idx.ext5312 = sext i32 %conv5308 to i64
  %add.ptr5313 = getelementptr inbounds i8, i8* %2978, i64 %idx.ext5312
  store i8* %add.ptr5313, i8** %maxpos5311, align 8
  br label %for.inc5314

for.inc5314:                                      ; preds = %for.body5302
  %2979 = load i32, i32* %m, align 4
  %dec5315 = add nsw i32 %2979, -1
  store i32 %dec5315, i32* %m, align 4
  br label %for.cond5290

for.end5316:                                      ; preds = %land.end5300
  br label %if.end5344

if.else5317:                                      ; preds = %if.else5277
  %2980 = load i8*, i8** %locinput, align 8
  %2981 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5318 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2981, i32 0, i32 2
  %curly5319 = bitcast %union.anon.19* %u5318 to %struct.anon.31*
  %max5320 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5319, i32 0, i32 10
  %2982 = load i32, i32* %max5320, align 8
  %idx.ext5321 = sext i32 %2982 to i64
  %add.ptr5322 = getelementptr inbounds i8, i8* %2980, i64 %idx.ext5321
  %2983 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5323 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2983, i32 0, i32 2
  %curly5324 = bitcast %union.anon.19* %u5323 to %struct.anon.31*
  %min5325 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5324, i32 0, i32 9
  %2984 = load i32, i32* %min5325, align 4
  %idx.ext5326 = sext i32 %2984 to i64
  %idx.neg = sub i64 0, %idx.ext5326
  %add.ptr5327 = getelementptr inbounds i8, i8* %add.ptr5322, i64 %idx.neg
  %2985 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5328 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2985, i32 0, i32 2
  %curly5329 = bitcast %union.anon.19* %u5328 to %struct.anon.31*
  %maxpos5330 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5329, i32 0, i32 6
  store i8* %add.ptr5327, i8** %maxpos5330, align 8
  %2986 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5331 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2986, i32 0, i32 2
  %curly5332 = bitcast %union.anon.19* %u5331 to %struct.anon.31*
  %maxpos5333 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5332, i32 0, i32 6
  %2987 = load i8*, i8** %maxpos5333, align 8
  %2988 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend5334 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %2988, i32 0, i32 2
  %2989 = load i8*, i8** %strend5334, align 8
  %cmp5335 = icmp uge i8* %2987, %2989
  br i1 %cmp5335, label %if.then5337, label %if.end5343

if.then5337:                                      ; preds = %if.else5317
  %2990 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend5338 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %2990, i32 0, i32 2
  %2991 = load i8*, i8** %strend5338, align 8
  %add.ptr5339 = getelementptr inbounds i8, i8* %2991, i64 -1
  %2992 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5340 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2992, i32 0, i32 2
  %curly5341 = bitcast %union.anon.19* %u5340 to %struct.anon.31*
  %maxpos5342 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5341, i32 0, i32 6
  store i8* %add.ptr5339, i8** %maxpos5342, align 8
  br label %if.end5343

if.end5343:                                       ; preds = %if.then5337, %if.else5317
  br label %if.end5344

if.end5344:                                       ; preds = %if.end5343, %for.end5316
  br label %if.end5345

if.end5345:                                       ; preds = %if.end5344, %if.end5276
  br label %curly_try_B_min_known

if.else5346:                                      ; preds = %if.end5196
  %2993 = load i8*, i8** %locinput, align 8
  store i8* %2993, i8** %li5347, align 8
  %2994 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %2995 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5348 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2995, i32 0, i32 2
  %curly5349 = bitcast %union.anon.19* %u5348 to %struct.anon.31*
  %A5350 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5349, i32 0, i32 11
  %2996 = load %struct.regnode*, %struct.regnode** %A5350, align 8
  %2997 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %2998 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5351 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2998, i32 0, i32 2
  %curly5352 = bitcast %union.anon.19* %u5351 to %struct.anon.31*
  %max5353 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5352, i32 0, i32 10
  %2999 = load i32, i32* %max5353, align 8
  %3000 = load i32, i32* %depth, align 4
  %call5354 = call i32 @S_regrepeat(%struct.regexp* %2994, i8** %li5347, %struct.regnode* %2996, %struct.regmatch_info* %2997, i32 %2999, i32 %3000)
  %3001 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5355 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3001, i32 0, i32 2
  %curly5356 = bitcast %union.anon.19* %u5355 to %struct.anon.31*
  %count5357 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5356, i32 0, i32 8
  store i32 %call5354, i32* %count5357, align 8
  %3002 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5358 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3002, i32 0, i32 2
  %curly5359 = bitcast %union.anon.19* %u5358 to %struct.anon.31*
  %count5360 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5359, i32 0, i32 8
  %3003 = load i32, i32* %count5360, align 8
  %3004 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5361 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3004, i32 0, i32 2
  %curly5362 = bitcast %union.anon.19* %u5361 to %struct.anon.31*
  %min5363 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5362, i32 0, i32 9
  %3005 = load i32, i32* %min5363, align 4
  %cmp5364 = icmp slt i32 %3003, %3005
  br i1 %cmp5364, label %if.then5366, label %if.end5367

if.then5366:                                      ; preds = %if.else5346
  br label %no

if.end5367:                                       ; preds = %if.else5346
  %3006 = load i8*, i8** %li5347, align 8
  store i8* %3006, i8** %locinput, align 8
  %3007 = load i8*, i8** %locinput, align 8
  %3008 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend5368 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %3008, i32 0, i32 2
  %3009 = load i8*, i8** %strend5368, align 8
  %cmp5369 = icmp ult i8* %3007, %3009
  br i1 %cmp5369, label %cond.true5371, label %cond.false5373

cond.true5371:                                    ; preds = %if.end5367
  %3010 = load i8*, i8** %locinput, align 8
  %3011 = load i8, i8* %3010, align 1
  %conv5372 = zext i8 %3011 to i32
  br label %cond.end5374

cond.false5373:                                   ; preds = %if.end5367
  br label %cond.end5374

cond.end5374:                                     ; preds = %cond.false5373, %cond.true5371
  %cond5375 = phi i32 [ %conv5372, %cond.true5371 ], [ -10, %cond.false5373 ]
  store i32 %cond5375, i32* %nextchr, align 4
  %3012 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5376 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3012, i32 0, i32 2
  %curly5377 = bitcast %union.anon.19* %u5376 to %struct.anon.31*
  %count5378 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5377, i32 0, i32 8
  %3013 = load i32, i32* %count5378, align 8
  %3014 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5379 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3014, i32 0, i32 2
  %curly5380 = bitcast %union.anon.19* %u5379 to %struct.anon.31*
  %min5381 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5380, i32 0, i32 9
  %3015 = load i32, i32* %min5381, align 4
  %cmp5382 = icmp sgt i32 %3013, %3015
  br i1 %cmp5382, label %land.lhs.true5384, label %if.end5427

land.lhs.true5384:                                ; preds = %cond.end5374
  %3016 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5385 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3016, i32 0, i32 2
  %curly5386 = bitcast %union.anon.19* %u5385 to %struct.anon.31*
  %B5387 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5386, i32 0, i32 12
  %3017 = load %struct.regnode*, %struct.regnode** %B5387, align 8
  %type5388 = getelementptr inbounds %struct.regnode, %struct.regnode* %3017, i32 0, i32 1
  %3018 = load i8, i8* %type5388, align 1
  %idxprom5389 = zext i8 %3018 to i64
  %arrayidx5390 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_regkind, i64 0, i64 %idxprom5389
  %3019 = load i8, i8* %arrayidx5390, align 1
  %conv5391 = zext i8 %3019 to i32
  %cmp5392 = icmp eq i32 %conv5391, 4
  br i1 %cmp5392, label %land.lhs.true5394, label %if.end5427

land.lhs.true5394:                                ; preds = %land.lhs.true5384
  %3020 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5395 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3020, i32 0, i32 2
  %curly5396 = bitcast %union.anon.19* %u5395 to %struct.anon.31*
  %B5397 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5396, i32 0, i32 12
  %3021 = load %struct.regnode*, %struct.regnode** %B5397, align 8
  %type5398 = getelementptr inbounds %struct.regnode, %struct.regnode* %3021, i32 0, i32 1
  %3022 = load i8, i8* %type5398, align 1
  %conv5399 = zext i8 %3022 to i32
  %cmp5400 = icmp ne i32 %conv5399, 5
  br i1 %cmp5400, label %if.then5402, label %if.end5427

if.then5402:                                      ; preds = %land.lhs.true5394
  %3023 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5403 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3023, i32 0, i32 2
  %curly5404 = bitcast %union.anon.19* %u5403 to %struct.anon.31*
  %count5405 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5404, i32 0, i32 8
  %3024 = load i32, i32* %count5405, align 8
  %3025 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5406 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3025, i32 0, i32 2
  %curly5407 = bitcast %union.anon.19* %u5406 to %struct.anon.31*
  %min5408 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5407, i32 0, i32 9
  store i32 %3024, i32* %min5408, align 4
  %3026 = load i8*, i8** %locinput, align 8
  %add.ptr5409 = getelementptr inbounds i8, i8* %3026, i64 -1
  %3027 = load i8, i8* %add.ptr5409, align 1
  %conv5410 = zext i8 %3027 to i32
  %cmp5411 = icmp eq i32 %conv5410, 10
  br i1 %cmp5411, label %land.lhs.true5413, label %if.end5426

land.lhs.true5413:                                ; preds = %if.then5402
  %3028 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5414 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3028, i32 0, i32 2
  %curly5415 = bitcast %union.anon.19* %u5414 to %struct.anon.31*
  %B5416 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5415, i32 0, i32 12
  %3029 = load %struct.regnode*, %struct.regnode** %B5416, align 8
  %type5417 = getelementptr inbounds %struct.regnode, %struct.regnode* %3029, i32 0, i32 1
  %3030 = load i8, i8* %type5417, align 1
  %conv5418 = zext i8 %3030 to i32
  %cmp5419 = icmp ne i32 %conv5418, 6
  br i1 %cmp5419, label %if.then5421, label %if.end5426

if.then5421:                                      ; preds = %land.lhs.true5413
  %3031 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5422 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3031, i32 0, i32 2
  %curly5423 = bitcast %union.anon.19* %u5422 to %struct.anon.31*
  %min5424 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5423, i32 0, i32 9
  %3032 = load i32, i32* %min5424, align 4
  %dec5425 = add nsw i32 %3032, -1
  store i32 %dec5425, i32* %min5424, align 4
  br label %if.end5426

if.end5426:                                       ; preds = %if.then5421, %land.lhs.true5413, %if.then5402
  br label %if.end5427

if.end5427:                                       ; preds = %if.end5426, %land.lhs.true5394, %land.lhs.true5384, %cond.end5374
  %3033 = load i32, i32* @PL_savestack_ix, align 4
  %3034 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5428 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3034, i32 0, i32 2
  %curly5429 = bitcast %union.anon.19* %u5428 to %struct.anon.31*
  %cp5430 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5429, i32 0, i32 1
  store i32 %3033, i32* %cp5430, align 4
  br label %curly_try_B_max

sw.bb5431:                                        ; preds = %cond.end45
  br label %do.body5432

do.body5432:                                      ; preds = %sw.bb5431
  %3035 = load i32, i32* @PL_savestack_ix, align 4
  %3036 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5433 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3036, i32 0, i32 2
  %curly5434 = bitcast %union.anon.19* %u5433 to %struct.anon.31*
  %cp5435 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5434, i32 0, i32 1
  %3037 = load i32, i32* %cp5435, align 4
  %cmp5436 = icmp sgt i32 %3035, %3037
  br i1 %cmp5436, label %if.then5438, label %if.end5442

if.then5438:                                      ; preds = %do.body5432
  %3038 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5439 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3038, i32 0, i32 2
  %curly5440 = bitcast %union.anon.19* %u5439 to %struct.anon.31*
  %cp5441 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5440, i32 0, i32 1
  %3039 = load i32, i32* %cp5441, align 4
  call void @Perl_leave_scope(i32 %3039)
  br label %if.end5442

if.end5442:                                       ; preds = %if.then5438, %do.body5432
  br label %do.end5443

do.end5443:                                       ; preds = %if.end5442
  %3040 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5444 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3040, i32 0, i32 2
  %curly5445 = bitcast %union.anon.19* %u5444 to %struct.anon.31*
  %paren5446 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5445, i32 0, i32 0
  %3041 = load i32, i32* %paren5446, align 8
  %tobool5447 = icmp ne i32 %3041, 0
  br i1 %tobool5447, label %if.then5448, label %if.end5469

if.then5448:                                      ; preds = %do.end5443
  %3042 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %lastparen5449 = getelementptr inbounds %struct.regexp, %struct.regexp* %3042, i32 0, i32 15
  %3043 = load i32, i32* %lastparen5449, align 8
  store i32 %3043, i32* %n, align 4
  br label %for.cond5450

for.cond5450:                                     ; preds = %for.inc5461, %if.then5448
  %3044 = load i32, i32* %n, align 4
  %3045 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5451 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3045, i32 0, i32 2
  %curly5452 = bitcast %union.anon.19* %u5451 to %struct.anon.31*
  %lastparen5453 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5452, i32 0, i32 2
  %3046 = load i32, i32* %lastparen5453, align 8
  %cmp5454 = icmp ugt i32 %3044, %3046
  br i1 %cmp5454, label %for.body5456, label %for.end5463

for.body5456:                                     ; preds = %for.cond5450
  %3047 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %offs5457 = getelementptr inbounds %struct.regexp, %struct.regexp* %3047, i32 0, i32 17
  %3048 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %offs5457, align 8
  %3049 = load i32, i32* %n, align 4
  %idxprom5458 = zext i32 %3049 to i64
  %arrayidx5459 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %3048, i64 %idxprom5458
  %end5460 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %arrayidx5459, i32 0, i32 1
  store i64 -1, i64* %end5460, align 8
  br label %for.inc5461

for.inc5461:                                      ; preds = %for.body5456
  %3050 = load i32, i32* %n, align 4
  %dec5462 = add i32 %3050, -1
  store i32 %dec5462, i32* %n, align 4
  br label %for.cond5450

for.end5463:                                      ; preds = %for.cond5450
  %3051 = load i32, i32* %n, align 4
  %3052 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %lastparen5464 = getelementptr inbounds %struct.regexp, %struct.regexp* %3052, i32 0, i32 15
  store i32 %3051, i32* %lastparen5464, align 8
  %3053 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5465 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3053, i32 0, i32 2
  %curly5466 = bitcast %union.anon.19* %u5465 to %struct.anon.31*
  %lastcloseparen5467 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5466, i32 0, i32 3
  %3054 = load i32, i32* %lastcloseparen5467, align 4
  %3055 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %lastcloseparen5468 = getelementptr inbounds %struct.regexp, %struct.regexp* %3055, i32 0, i32 16
  store i32 %3054, i32* %lastcloseparen5468, align 4
  br label %if.end5469

if.end5469:                                       ; preds = %for.end5463, %do.end5443
  %3056 = load i8*, i8** %locinput, align 8
  %3057 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5470 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3057, i32 0, i32 2
  %curly5471 = bitcast %union.anon.19* %u5470 to %struct.anon.31*
  %oldloc5472 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5471, i32 0, i32 7
  store i8* %3056, i8** %oldloc5472, align 8
  %3058 = load i8, i8* %utf8_target, align 1
  %tobool5473 = trunc i8 %3058 to i1
  br i1 %tobool5473, label %if.then5474, label %if.else5480

if.then5474:                                      ; preds = %if.end5469
  %3059 = load i8*, i8** %locinput, align 8
  %3060 = load i8, i8* %3059, align 1
  %idxprom5475 = zext i8 %3060 to i64
  %arrayidx5476 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom5475
  %3061 = load i8, i8* %arrayidx5476, align 1
  %conv5477 = zext i8 %3061 to i32
  %3062 = load i8*, i8** %locinput, align 8
  %idx.ext5478 = sext i32 %conv5477 to i64
  %add.ptr5479 = getelementptr inbounds i8, i8* %3062, i64 %idx.ext5478
  store i8* %add.ptr5479, i8** %locinput, align 8
  br label %if.end5482

if.else5480:                                      ; preds = %if.end5469
  %3063 = load i8*, i8** %locinput, align 8
  %incdec.ptr5481 = getelementptr inbounds i8, i8* %3063, i32 1
  store i8* %incdec.ptr5481, i8** %locinput, align 8
  br label %if.end5482

if.end5482:                                       ; preds = %if.else5480, %if.then5474
  %3064 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5483 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3064, i32 0, i32 2
  %curly5484 = bitcast %union.anon.19* %u5483 to %struct.anon.31*
  %count5485 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5484, i32 0, i32 8
  %3065 = load i32, i32* %count5485, align 8
  %inc5486 = add nsw i32 %3065, 1
  store i32 %inc5486, i32* %count5485, align 8
  br label %curly_try_B_min_known

curly_try_B_min_known:                            ; preds = %if.end5482, %if.end5345
  %3066 = load i8, i8* %utf8_target, align 1
  %tobool5488 = trunc i8 %3066 to i1
  br i1 %tobool5488, label %if.then5489, label %if.else5569

if.then5489:                                      ; preds = %curly_try_B_min_known
  %3067 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5490 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3067, i32 0, i32 2
  %curly5491 = bitcast %union.anon.19* %u5490 to %struct.anon.31*
  %oldloc5492 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5491, i32 0, i32 7
  %3068 = load i8*, i8** %oldloc5492, align 8
  %3069 = load i8*, i8** %locinput, align 8
  %cmp5493 = icmp eq i8* %3068, %3069
  %3070 = zext i1 %cmp5493 to i64
  %cond5495 = select i1 %cmp5493, i32 0, i32 1
  store i32 %cond5495, i32* %n5487, align 4
  %3071 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5496 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3071, i32 0, i32 2
  %curly5497 = bitcast %union.anon.19* %u5496 to %struct.anon.31*
  %c15498 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5497, i32 0, i32 4
  %3072 = load i32, i32* %c15498, align 8
  %3073 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5499 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3073, i32 0, i32 2
  %curly5500 = bitcast %union.anon.19* %u5499 to %struct.anon.31*
  %c25501 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5500, i32 0, i32 5
  %3074 = load i32, i32* %c25501, align 4
  %cmp5502 = icmp eq i32 %3072, %3074
  br i1 %cmp5502, label %if.then5504, label %if.else5531

if.then5504:                                      ; preds = %if.then5489
  br label %while.cond5505

while.cond5505:                                   ; preds = %while.body5523, %if.then5504
  %3075 = load i8*, i8** %locinput, align 8
  %3076 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5506 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3076, i32 0, i32 2
  %curly5507 = bitcast %union.anon.19* %u5506 to %struct.anon.31*
  %maxpos5508 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5507, i32 0, i32 6
  %3077 = load i8*, i8** %maxpos5508, align 8
  %cmp5509 = icmp ule i8* %3075, %3077
  br i1 %cmp5509, label %land.rhs5511, label %land.end5521

land.rhs5511:                                     ; preds = %while.cond5505
  %3078 = load i8*, i8** %locinput, align 8
  %3079 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5512 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3079, i32 0, i32 2
  %curly5513 = bitcast %union.anon.19* %u5512 to %struct.anon.31*
  %c1_utf85514 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5513, i32 0, i32 13
  %arraydecay5515 = getelementptr inbounds [14 x i8], [14 x i8]* %c1_utf85514, i64 0, i64 0
  %3080 = load i8*, i8** %locinput, align 8
  %3081 = load i8, i8* %3080, align 1
  %idxprom5516 = zext i8 %3081 to i64
  %arrayidx5517 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom5516
  %3082 = load i8, i8* %arrayidx5517, align 1
  %conv5518 = zext i8 %3082 to i64
  %call5519 = call i32 @memcmp(i8* %3078, i8* %arraydecay5515, i64 %conv5518) #5
  %tobool5520 = icmp ne i32 %call5519, 0
  br label %land.end5521

land.end5521:                                     ; preds = %land.rhs5511, %while.cond5505
  %3083 = phi i1 [ false, %while.cond5505 ], [ %tobool5520, %land.rhs5511 ]
  br i1 %3083, label %while.body5523, label %while.end5530

while.body5523:                                   ; preds = %land.end5521
  %3084 = load i8*, i8** %locinput, align 8
  %3085 = load i8, i8* %3084, align 1
  %idxprom5524 = zext i8 %3085 to i64
  %arrayidx5525 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom5524
  %3086 = load i8, i8* %arrayidx5525, align 1
  %conv5526 = zext i8 %3086 to i32
  %3087 = load i8*, i8** %locinput, align 8
  %idx.ext5527 = sext i32 %conv5526 to i64
  %add.ptr5528 = getelementptr inbounds i8, i8* %3087, i64 %idx.ext5527
  store i8* %add.ptr5528, i8** %locinput, align 8
  %3088 = load i32, i32* %n5487, align 4
  %inc5529 = add nsw i32 %3088, 1
  store i32 %inc5529, i32* %n5487, align 4
  br label %while.cond5505

while.end5530:                                    ; preds = %land.end5521
  br label %if.end5568

if.else5531:                                      ; preds = %if.then5489
  br label %while.cond5532

while.cond5532:                                   ; preds = %while.body5560, %if.else5531
  %3089 = load i8*, i8** %locinput, align 8
  %3090 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5533 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3090, i32 0, i32 2
  %curly5534 = bitcast %union.anon.19* %u5533 to %struct.anon.31*
  %maxpos5535 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5534, i32 0, i32 6
  %3091 = load i8*, i8** %maxpos5535, align 8
  %cmp5536 = icmp ule i8* %3089, %3091
  br i1 %cmp5536, label %land.lhs.true5538, label %land.end5558

land.lhs.true5538:                                ; preds = %while.cond5532
  %3092 = load i8*, i8** %locinput, align 8
  %3093 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5539 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3093, i32 0, i32 2
  %curly5540 = bitcast %union.anon.19* %u5539 to %struct.anon.31*
  %c1_utf85541 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5540, i32 0, i32 13
  %arraydecay5542 = getelementptr inbounds [14 x i8], [14 x i8]* %c1_utf85541, i64 0, i64 0
  %3094 = load i8*, i8** %locinput, align 8
  %3095 = load i8, i8* %3094, align 1
  %idxprom5543 = zext i8 %3095 to i64
  %arrayidx5544 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom5543
  %3096 = load i8, i8* %arrayidx5544, align 1
  %conv5545 = zext i8 %3096 to i64
  %call5546 = call i32 @memcmp(i8* %3092, i8* %arraydecay5542, i64 %conv5545) #5
  %tobool5547 = icmp ne i32 %call5546, 0
  br i1 %tobool5547, label %land.rhs5548, label %land.end5558

land.rhs5548:                                     ; preds = %land.lhs.true5538
  %3097 = load i8*, i8** %locinput, align 8
  %3098 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5549 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3098, i32 0, i32 2
  %curly5550 = bitcast %union.anon.19* %u5549 to %struct.anon.31*
  %c2_utf85551 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5550, i32 0, i32 14
  %arraydecay5552 = getelementptr inbounds [14 x i8], [14 x i8]* %c2_utf85551, i64 0, i64 0
  %3099 = load i8*, i8** %locinput, align 8
  %3100 = load i8, i8* %3099, align 1
  %idxprom5553 = zext i8 %3100 to i64
  %arrayidx5554 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom5553
  %3101 = load i8, i8* %arrayidx5554, align 1
  %conv5555 = zext i8 %3101 to i64
  %call5556 = call i32 @memcmp(i8* %3097, i8* %arraydecay5552, i64 %conv5555) #5
  %tobool5557 = icmp ne i32 %call5556, 0
  br label %land.end5558

land.end5558:                                     ; preds = %land.rhs5548, %land.lhs.true5538, %while.cond5532
  %3102 = phi i1 [ false, %land.lhs.true5538 ], [ false, %while.cond5532 ], [ %tobool5557, %land.rhs5548 ]
  br i1 %3102, label %while.body5560, label %while.end5567

while.body5560:                                   ; preds = %land.end5558
  %3103 = load i8*, i8** %locinput, align 8
  %3104 = load i8, i8* %3103, align 1
  %idxprom5561 = zext i8 %3104 to i64
  %arrayidx5562 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom5561
  %3105 = load i8, i8* %arrayidx5562, align 1
  %conv5563 = zext i8 %3105 to i32
  %3106 = load i8*, i8** %locinput, align 8
  %idx.ext5564 = sext i32 %conv5563 to i64
  %add.ptr5565 = getelementptr inbounds i8, i8* %3106, i64 %idx.ext5564
  store i8* %add.ptr5565, i8** %locinput, align 8
  %3107 = load i32, i32* %n5487, align 4
  %inc5566 = add nsw i32 %3107, 1
  store i32 %inc5566, i32* %n5487, align 4
  br label %while.cond5532

while.end5567:                                    ; preds = %land.end5558
  br label %if.end5568

if.end5568:                                       ; preds = %while.end5567, %while.end5530
  br label %if.end5631

if.else5569:                                      ; preds = %curly_try_B_min_known
  %3108 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5570 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3108, i32 0, i32 2
  %curly5571 = bitcast %union.anon.19* %u5570 to %struct.anon.31*
  %c15572 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5571, i32 0, i32 4
  %3109 = load i32, i32* %c15572, align 8
  %3110 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5573 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3110, i32 0, i32 2
  %curly5574 = bitcast %union.anon.19* %u5573 to %struct.anon.31*
  %c25575 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5574, i32 0, i32 5
  %3111 = load i32, i32* %c25575, align 4
  %cmp5576 = icmp eq i32 %3109, %3111
  br i1 %cmp5576, label %if.then5578, label %if.else5597

if.then5578:                                      ; preds = %if.else5569
  br label %while.cond5579

while.cond5579:                                   ; preds = %while.body5594, %if.then5578
  %3112 = load i8*, i8** %locinput, align 8
  %3113 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5580 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3113, i32 0, i32 2
  %curly5581 = bitcast %union.anon.19* %u5580 to %struct.anon.31*
  %maxpos5582 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5581, i32 0, i32 6
  %3114 = load i8*, i8** %maxpos5582, align 8
  %cmp5583 = icmp ule i8* %3112, %3114
  br i1 %cmp5583, label %land.rhs5585, label %land.end5592

land.rhs5585:                                     ; preds = %while.cond5579
  %3115 = load i8*, i8** %locinput, align 8
  %3116 = load i8, i8* %3115, align 1
  %conv5586 = zext i8 %3116 to i32
  %3117 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5587 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3117, i32 0, i32 2
  %curly5588 = bitcast %union.anon.19* %u5587 to %struct.anon.31*
  %c15589 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5588, i32 0, i32 4
  %3118 = load i32, i32* %c15589, align 8
  %cmp5590 = icmp ne i32 %conv5586, %3118
  br label %land.end5592

land.end5592:                                     ; preds = %land.rhs5585, %while.cond5579
  %3119 = phi i1 [ false, %while.cond5579 ], [ %cmp5590, %land.rhs5585 ]
  br i1 %3119, label %while.body5594, label %while.end5596

while.body5594:                                   ; preds = %land.end5592
  %3120 = load i8*, i8** %locinput, align 8
  %incdec.ptr5595 = getelementptr inbounds i8, i8* %3120, i32 1
  store i8* %incdec.ptr5595, i8** %locinput, align 8
  br label %while.cond5579

while.end5596:                                    ; preds = %land.end5592
  br label %if.end5623

if.else5597:                                      ; preds = %if.else5569
  br label %while.cond5598

while.cond5598:                                   ; preds = %while.body5620, %if.else5597
  %3121 = load i8*, i8** %locinput, align 8
  %3122 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5599 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3122, i32 0, i32 2
  %curly5600 = bitcast %union.anon.19* %u5599 to %struct.anon.31*
  %maxpos5601 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5600, i32 0, i32 6
  %3123 = load i8*, i8** %maxpos5601, align 8
  %cmp5602 = icmp ule i8* %3121, %3123
  br i1 %cmp5602, label %land.lhs.true5604, label %land.end5618

land.lhs.true5604:                                ; preds = %while.cond5598
  %3124 = load i8*, i8** %locinput, align 8
  %3125 = load i8, i8* %3124, align 1
  %conv5605 = zext i8 %3125 to i32
  %3126 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5606 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3126, i32 0, i32 2
  %curly5607 = bitcast %union.anon.19* %u5606 to %struct.anon.31*
  %c15608 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5607, i32 0, i32 4
  %3127 = load i32, i32* %c15608, align 8
  %cmp5609 = icmp ne i32 %conv5605, %3127
  br i1 %cmp5609, label %land.rhs5611, label %land.end5618

land.rhs5611:                                     ; preds = %land.lhs.true5604
  %3128 = load i8*, i8** %locinput, align 8
  %3129 = load i8, i8* %3128, align 1
  %conv5612 = zext i8 %3129 to i32
  %3130 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5613 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3130, i32 0, i32 2
  %curly5614 = bitcast %union.anon.19* %u5613 to %struct.anon.31*
  %c25615 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5614, i32 0, i32 5
  %3131 = load i32, i32* %c25615, align 4
  %cmp5616 = icmp ne i32 %conv5612, %3131
  br label %land.end5618

land.end5618:                                     ; preds = %land.rhs5611, %land.lhs.true5604, %while.cond5598
  %3132 = phi i1 [ false, %land.lhs.true5604 ], [ false, %while.cond5598 ], [ %cmp5616, %land.rhs5611 ]
  br i1 %3132, label %while.body5620, label %while.end5622

while.body5620:                                   ; preds = %land.end5618
  %3133 = load i8*, i8** %locinput, align 8
  %incdec.ptr5621 = getelementptr inbounds i8, i8* %3133, i32 1
  store i8* %incdec.ptr5621, i8** %locinput, align 8
  br label %while.cond5598

while.end5622:                                    ; preds = %land.end5618
  br label %if.end5623

if.end5623:                                       ; preds = %while.end5622, %while.end5596
  %3134 = load i8*, i8** %locinput, align 8
  %3135 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5624 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3135, i32 0, i32 2
  %curly5625 = bitcast %union.anon.19* %u5624 to %struct.anon.31*
  %oldloc5626 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5625, i32 0, i32 7
  %3136 = load i8*, i8** %oldloc5626, align 8
  %sub.ptr.lhs.cast5627 = ptrtoint i8* %3134 to i64
  %sub.ptr.rhs.cast5628 = ptrtoint i8* %3136 to i64
  %sub.ptr.sub5629 = sub i64 %sub.ptr.lhs.cast5627, %sub.ptr.rhs.cast5628
  %conv5630 = trunc i64 %sub.ptr.sub5629 to i32
  store i32 %conv5630, i32* %n5487, align 4
  br label %if.end5631

if.end5631:                                       ; preds = %if.end5623, %if.end5568
  %3137 = load i8*, i8** %locinput, align 8
  %3138 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5632 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3138, i32 0, i32 2
  %curly5633 = bitcast %union.anon.19* %u5632 to %struct.anon.31*
  %maxpos5634 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5633, i32 0, i32 6
  %3139 = load i8*, i8** %maxpos5634, align 8
  %cmp5635 = icmp ugt i8* %3137, %3139
  br i1 %cmp5635, label %if.then5637, label %if.end5638

if.then5637:                                      ; preds = %if.end5631
  br label %no

if.end5638:                                       ; preds = %if.end5631
  %3140 = load i32, i32* %n5487, align 4
  %tobool5639 = icmp ne i32 %3140, 0
  br i1 %tobool5639, label %if.then5640, label %if.end5657

if.then5640:                                      ; preds = %if.end5638
  %3141 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5642 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3141, i32 0, i32 2
  %curly5643 = bitcast %union.anon.19* %u5642 to %struct.anon.31*
  %oldloc5644 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5643, i32 0, i32 7
  %3142 = load i8*, i8** %oldloc5644, align 8
  store i8* %3142, i8** %li5641, align 8
  %3143 = load i32, i32* %n5487, align 4
  %3144 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5645 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3144, i32 0, i32 2
  %curly5646 = bitcast %union.anon.19* %u5645 to %struct.anon.31*
  %count5647 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5646, i32 0, i32 8
  %3145 = load i32, i32* %count5647, align 8
  %add5648 = add nsw i32 %3145, %3143
  store i32 %add5648, i32* %count5647, align 8
  %3146 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %3147 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5649 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3147, i32 0, i32 2
  %curly5650 = bitcast %union.anon.19* %u5649 to %struct.anon.31*
  %A5651 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5650, i32 0, i32 11
  %3148 = load %struct.regnode*, %struct.regnode** %A5651, align 8
  %3149 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %3150 = load i32, i32* %n5487, align 4
  %3151 = load i32, i32* %depth, align 4
  %call5652 = call i32 @S_regrepeat(%struct.regexp* %3146, i8** %li5641, %struct.regnode* %3148, %struct.regmatch_info* %3149, i32 %3150, i32 %3151)
  %3152 = load i32, i32* %n5487, align 4
  %cmp5653 = icmp slt i32 %call5652, %3152
  br i1 %cmp5653, label %if.then5655, label %if.end5656

if.then5655:                                      ; preds = %if.then5640
  br label %no

if.end5656:                                       ; preds = %if.then5640
  br label %if.end5657

if.end5657:                                       ; preds = %if.end5656, %if.end5638
  %3153 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5658 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3153, i32 0, i32 2
  %curly5659 = bitcast %union.anon.19* %u5658 to %struct.anon.31*
  %paren5660 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5659, i32 0, i32 0
  %3154 = load i32, i32* %paren5660, align 8
  %tobool5661 = icmp ne i32 %3154, 0
  br i1 %tobool5661, label %if.then5662, label %if.end5733

if.then5662:                                      ; preds = %if.end5657
  %3155 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5663 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3155, i32 0, i32 2
  %curly5664 = bitcast %union.anon.19* %u5663 to %struct.anon.31*
  %count5665 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5664, i32 0, i32 8
  %3156 = load i32, i32* %count5665, align 8
  %tobool5666 = icmp ne i32 %3156, 0
  br i1 %tobool5666, label %if.then5667, label %if.else5716

if.then5667:                                      ; preds = %if.then5662
  %3157 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %is_utf8_target5668 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %3157, i32 0, i32 14
  %3158 = load i8, i8* %is_utf8_target5668, align 2
  %tobool5669 = trunc i8 %3158 to i1
  br i1 %tobool5669, label %cond.true5671, label %cond.false5674

cond.true5671:                                    ; preds = %if.then5667
  %3159 = load i8*, i8** %locinput, align 8
  %3160 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg5672 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %3160, i32 0, i32 1
  %3161 = load i8*, i8** %strbeg5672, align 8
  %call5673 = call i8* @S_reghop3(i8* %3159, i64 -1, i8* %3161)
  br label %cond.end5676

cond.false5674:                                   ; preds = %if.then5667
  %3162 = load i8*, i8** %locinput, align 8
  %add.ptr5675 = getelementptr inbounds i8, i8* %3162, i64 -1
  br label %cond.end5676

cond.end5676:                                     ; preds = %cond.false5674, %cond.true5671
  %cond5677 = phi i8* [ %call5673, %cond.true5671 ], [ %add.ptr5675, %cond.false5674 ]
  %3163 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg5678 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %3163, i32 0, i32 1
  %3164 = load i8*, i8** %strbeg5678, align 8
  %sub.ptr.lhs.cast5679 = ptrtoint i8* %cond5677 to i64
  %sub.ptr.rhs.cast5680 = ptrtoint i8* %3164 to i64
  %sub.ptr.sub5681 = sub i64 %sub.ptr.lhs.cast5679, %sub.ptr.rhs.cast5680
  %3165 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %offs5682 = getelementptr inbounds %struct.regexp, %struct.regexp* %3165, i32 0, i32 17
  %3166 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %offs5682, align 8
  %3167 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5683 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3167, i32 0, i32 2
  %curly5684 = bitcast %union.anon.19* %u5683 to %struct.anon.31*
  %paren5685 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5684, i32 0, i32 0
  %3168 = load i32, i32* %paren5685, align 8
  %idxprom5686 = zext i32 %3168 to i64
  %arrayidx5687 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %3166, i64 %idxprom5686
  %start5688 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %arrayidx5687, i32 0, i32 0
  store i64 %sub.ptr.sub5681, i64* %start5688, align 8
  %3169 = load i8*, i8** %locinput, align 8
  %3170 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg5689 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %3170, i32 0, i32 1
  %3171 = load i8*, i8** %strbeg5689, align 8
  %sub.ptr.lhs.cast5690 = ptrtoint i8* %3169 to i64
  %sub.ptr.rhs.cast5691 = ptrtoint i8* %3171 to i64
  %sub.ptr.sub5692 = sub i64 %sub.ptr.lhs.cast5690, %sub.ptr.rhs.cast5691
  %3172 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %offs5693 = getelementptr inbounds %struct.regexp, %struct.regexp* %3172, i32 0, i32 17
  %3173 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %offs5693, align 8
  %3174 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5694 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3174, i32 0, i32 2
  %curly5695 = bitcast %union.anon.19* %u5694 to %struct.anon.31*
  %paren5696 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5695, i32 0, i32 0
  %3175 = load i32, i32* %paren5696, align 8
  %idxprom5697 = zext i32 %3175 to i64
  %arrayidx5698 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %3173, i64 %idxprom5697
  %end5699 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %arrayidx5698, i32 0, i32 1
  store i64 %sub.ptr.sub5692, i64* %end5699, align 8
  %3176 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5700 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3176, i32 0, i32 2
  %curly5701 = bitcast %union.anon.19* %u5700 to %struct.anon.31*
  %paren5702 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5701, i32 0, i32 0
  %3177 = load i32, i32* %paren5702, align 8
  %3178 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %lastparen5703 = getelementptr inbounds %struct.regexp, %struct.regexp* %3178, i32 0, i32 15
  %3179 = load i32, i32* %lastparen5703, align 8
  %cmp5704 = icmp ugt i32 %3177, %3179
  br i1 %cmp5704, label %if.then5706, label %if.end5711

if.then5706:                                      ; preds = %cond.end5676
  %3180 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5707 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3180, i32 0, i32 2
  %curly5708 = bitcast %union.anon.19* %u5707 to %struct.anon.31*
  %paren5709 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5708, i32 0, i32 0
  %3181 = load i32, i32* %paren5709, align 8
  %3182 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %lastparen5710 = getelementptr inbounds %struct.regexp, %struct.regexp* %3182, i32 0, i32 15
  store i32 %3181, i32* %lastparen5710, align 8
  br label %if.end5711

if.end5711:                                       ; preds = %if.then5706, %cond.end5676
  %3183 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5712 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3183, i32 0, i32 2
  %curly5713 = bitcast %union.anon.19* %u5712 to %struct.anon.31*
  %paren5714 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5713, i32 0, i32 0
  %3184 = load i32, i32* %paren5714, align 8
  %3185 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %lastcloseparen5715 = getelementptr inbounds %struct.regexp, %struct.regexp* %3185, i32 0, i32 16
  store i32 %3184, i32* %lastcloseparen5715, align 4
  br label %if.end5732

if.else5716:                                      ; preds = %if.then5662
  %3186 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %offs5717 = getelementptr inbounds %struct.regexp, %struct.regexp* %3186, i32 0, i32 17
  %3187 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %offs5717, align 8
  %3188 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5718 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3188, i32 0, i32 2
  %curly5719 = bitcast %union.anon.19* %u5718 to %struct.anon.31*
  %paren5720 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5719, i32 0, i32 0
  %3189 = load i32, i32* %paren5720, align 8
  %idxprom5721 = zext i32 %3189 to i64
  %arrayidx5722 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %3187, i64 %idxprom5721
  %end5723 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %arrayidx5722, i32 0, i32 1
  store i64 -1, i64* %end5723, align 8
  %3190 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5724 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3190, i32 0, i32 2
  %curly5725 = bitcast %union.anon.19* %u5724 to %struct.anon.31*
  %lastparen5726 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5725, i32 0, i32 2
  %3191 = load i32, i32* %lastparen5726, align 8
  %3192 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %lastparen5727 = getelementptr inbounds %struct.regexp, %struct.regexp* %3192, i32 0, i32 15
  store i32 %3191, i32* %lastparen5727, align 8
  %3193 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5728 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3193, i32 0, i32 2
  %curly5729 = bitcast %union.anon.19* %u5728 to %struct.anon.31*
  %lastcloseparen5730 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5729, i32 0, i32 3
  %3194 = load i32, i32* %lastcloseparen5730, align 4
  %3195 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %lastcloseparen5731 = getelementptr inbounds %struct.regexp, %struct.regexp* %3195, i32 0, i32 16
  store i32 %3194, i32* %lastcloseparen5731, align 4
  br label %if.end5732

if.end5732:                                       ; preds = %if.else5716, %if.end5711
  br label %if.end5733

if.end5733:                                       ; preds = %if.end5732, %if.end5657
  %3196 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_eval, align 8
  %tobool5734 = icmp ne %struct.regmatch_state* %3196, null
  br i1 %tobool5734, label %land.lhs.true5735, label %if.end5750

land.lhs.true5735:                                ; preds = %if.end5733
  %3197 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_eval, align 8
  %u5736 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3197, i32 0, i32 2
  %eval5737 = bitcast %union.anon.19* %u5736 to %struct.anon.24*
  %close_paren5738 = getelementptr inbounds %struct.anon.24, %struct.anon.24* %eval5737, i32 0, i32 6
  %3198 = load i32, i32* %close_paren5738, align 8
  %tobool5739 = icmp ne i32 %3198, 0
  br i1 %tobool5739, label %land.lhs.true5740, label %if.end5750

land.lhs.true5740:                                ; preds = %land.lhs.true5735
  %3199 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_eval, align 8
  %u5741 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3199, i32 0, i32 2
  %eval5742 = bitcast %union.anon.19* %u5741 to %struct.anon.24*
  %close_paren5743 = getelementptr inbounds %struct.anon.24, %struct.anon.24* %eval5742, i32 0, i32 6
  %3200 = load i32, i32* %close_paren5743, align 8
  %3201 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5744 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3201, i32 0, i32 2
  %curly5745 = bitcast %union.anon.19* %u5744 to %struct.anon.31*
  %paren5746 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5745, i32 0, i32 0
  %3202 = load i32, i32* %paren5746, align 8
  %cmp5747 = icmp eq i32 %3200, %3202
  br i1 %cmp5747, label %if.then5749, label %if.end5750

if.then5749:                                      ; preds = %land.lhs.true5740
  br label %fake_end

if.end5750:                                       ; preds = %land.lhs.true5740, %land.lhs.true5735, %if.end5733
  %3203 = load i8*, i8** %locinput, align 8
  store i8* %3203, i8** %pushinput, align 8
  %3204 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5751 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3204, i32 0, i32 2
  %curly5752 = bitcast %union.anon.19* %u5751 to %struct.anon.31*
  %B5753 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5752, i32 0, i32 12
  %3205 = load %struct.regnode*, %struct.regnode** %B5753, align 8
  store %struct.regnode* %3205, %struct.regnode** %scan, align 8
  %3206 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %resume_state5754 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3206, i32 0, i32 0
  store i32 118, i32* %resume_state5754, align 8
  br label %push_state

sw.bb5755:                                        ; preds = %cond.end45
  br label %do.body5756

do.body5756:                                      ; preds = %sw.bb5755
  %3207 = load i32, i32* @PL_savestack_ix, align 4
  %3208 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5757 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3208, i32 0, i32 2
  %curly5758 = bitcast %union.anon.19* %u5757 to %struct.anon.31*
  %cp5759 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5758, i32 0, i32 1
  %3209 = load i32, i32* %cp5759, align 4
  %cmp5760 = icmp sgt i32 %3207, %3209
  br i1 %cmp5760, label %if.then5762, label %if.end5766

if.then5762:                                      ; preds = %do.body5756
  %3210 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5763 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3210, i32 0, i32 2
  %curly5764 = bitcast %union.anon.19* %u5763 to %struct.anon.31*
  %cp5765 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5764, i32 0, i32 1
  %3211 = load i32, i32* %cp5765, align 4
  call void @Perl_leave_scope(i32 %3211)
  br label %if.end5766

if.end5766:                                       ; preds = %if.then5762, %do.body5756
  br label %do.end5767

do.end5767:                                       ; preds = %if.end5766
  %3212 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5768 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3212, i32 0, i32 2
  %curly5769 = bitcast %union.anon.19* %u5768 to %struct.anon.31*
  %paren5770 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5769, i32 0, i32 0
  %3213 = load i32, i32* %paren5770, align 8
  %tobool5771 = icmp ne i32 %3213, 0
  br i1 %tobool5771, label %if.then5772, label %if.end5793

if.then5772:                                      ; preds = %do.end5767
  %3214 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %lastparen5773 = getelementptr inbounds %struct.regexp, %struct.regexp* %3214, i32 0, i32 15
  %3215 = load i32, i32* %lastparen5773, align 8
  store i32 %3215, i32* %n, align 4
  br label %for.cond5774

for.cond5774:                                     ; preds = %for.inc5785, %if.then5772
  %3216 = load i32, i32* %n, align 4
  %3217 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5775 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3217, i32 0, i32 2
  %curly5776 = bitcast %union.anon.19* %u5775 to %struct.anon.31*
  %lastparen5777 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5776, i32 0, i32 2
  %3218 = load i32, i32* %lastparen5777, align 8
  %cmp5778 = icmp ugt i32 %3216, %3218
  br i1 %cmp5778, label %for.body5780, label %for.end5787

for.body5780:                                     ; preds = %for.cond5774
  %3219 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %offs5781 = getelementptr inbounds %struct.regexp, %struct.regexp* %3219, i32 0, i32 17
  %3220 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %offs5781, align 8
  %3221 = load i32, i32* %n, align 4
  %idxprom5782 = zext i32 %3221 to i64
  %arrayidx5783 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %3220, i64 %idxprom5782
  %end5784 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %arrayidx5783, i32 0, i32 1
  store i64 -1, i64* %end5784, align 8
  br label %for.inc5785

for.inc5785:                                      ; preds = %for.body5780
  %3222 = load i32, i32* %n, align 4
  %dec5786 = add i32 %3222, -1
  store i32 %dec5786, i32* %n, align 4
  br label %for.cond5774

for.end5787:                                      ; preds = %for.cond5774
  %3223 = load i32, i32* %n, align 4
  %3224 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %lastparen5788 = getelementptr inbounds %struct.regexp, %struct.regexp* %3224, i32 0, i32 15
  store i32 %3223, i32* %lastparen5788, align 8
  %3225 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5789 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3225, i32 0, i32 2
  %curly5790 = bitcast %union.anon.19* %u5789 to %struct.anon.31*
  %lastcloseparen5791 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5790, i32 0, i32 3
  %3226 = load i32, i32* %lastcloseparen5791, align 4
  %3227 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %lastcloseparen5792 = getelementptr inbounds %struct.regexp, %struct.regexp* %3227, i32 0, i32 16
  store i32 %3226, i32* %lastcloseparen5792, align 4
  br label %if.end5793

if.end5793:                                       ; preds = %for.end5787, %do.end5767
  %3228 = load i8*, i8** %locinput, align 8
  store i8* %3228, i8** %li5794, align 8
  %3229 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %3230 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5795 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3230, i32 0, i32 2
  %curly5796 = bitcast %union.anon.19* %u5795 to %struct.anon.31*
  %A5797 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5796, i32 0, i32 11
  %3231 = load %struct.regnode*, %struct.regnode** %A5797, align 8
  %3232 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %3233 = load i32, i32* %depth, align 4
  %call5798 = call i32 @S_regrepeat(%struct.regexp* %3229, i8** %li5794, %struct.regnode* %3231, %struct.regmatch_info* %3232, i32 1, i32 %3233)
  %tobool5799 = icmp ne i32 %call5798, 0
  br i1 %tobool5799, label %if.end5801, label %if.then5800

if.then5800:                                      ; preds = %if.end5793
  br label %no

if.end5801:                                       ; preds = %if.end5793
  %3234 = load i8*, i8** %li5794, align 8
  store i8* %3234, i8** %locinput, align 8
  %3235 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5802 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3235, i32 0, i32 2
  %curly5803 = bitcast %union.anon.19* %u5802 to %struct.anon.31*
  %count5804 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5803, i32 0, i32 8
  %3236 = load i32, i32* %count5804, align 8
  %inc5805 = add nsw i32 %3236, 1
  store i32 %inc5805, i32* %count5804, align 8
  %3237 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5806 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3237, i32 0, i32 2
  %curly5807 = bitcast %union.anon.19* %u5806 to %struct.anon.31*
  %count5808 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5807, i32 0, i32 8
  %3238 = load i32, i32* %count5808, align 8
  %3239 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5809 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3239, i32 0, i32 2
  %curly5810 = bitcast %union.anon.19* %u5809 to %struct.anon.31*
  %max5811 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5810, i32 0, i32 10
  %3240 = load i32, i32* %max5811, align 8
  %cmp5812 = icmp sle i32 %3238, %3240
  br i1 %cmp5812, label %if.then5826, label %lor.lhs.false5814

lor.lhs.false5814:                                ; preds = %if.end5801
  %3241 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5815 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3241, i32 0, i32 2
  %curly5816 = bitcast %union.anon.19* %u5815 to %struct.anon.31*
  %max5817 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5816, i32 0, i32 10
  %3242 = load i32, i32* %max5817, align 8
  %cmp5818 = icmp eq i32 %3242, 32767
  br i1 %cmp5818, label %land.lhs.true5820, label %if.end5924

land.lhs.true5820:                                ; preds = %lor.lhs.false5814
  %3243 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5821 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3243, i32 0, i32 2
  %curly5822 = bitcast %union.anon.19* %u5821 to %struct.anon.31*
  %count5823 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5822, i32 0, i32 8
  %3244 = load i32, i32* %count5823, align 8
  %cmp5824 = icmp sgt i32 %3244, 0
  br i1 %cmp5824, label %if.then5826, label %if.end5924

if.then5826:                                      ; preds = %land.lhs.true5820, %if.end5801
  br label %curly_try_B_min

curly_try_B_min:                                  ; preds = %if.then5826, %if.then5246
  %3245 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5827 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3245, i32 0, i32 2
  %curly5828 = bitcast %union.anon.19* %u5827 to %struct.anon.31*
  %paren5829 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5828, i32 0, i32 0
  %3246 = load i32, i32* %paren5829, align 8
  %tobool5830 = icmp ne i32 %3246, 0
  br i1 %tobool5830, label %if.then5831, label %if.end5902

if.then5831:                                      ; preds = %curly_try_B_min
  %3247 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5832 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3247, i32 0, i32 2
  %curly5833 = bitcast %union.anon.19* %u5832 to %struct.anon.31*
  %count5834 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5833, i32 0, i32 8
  %3248 = load i32, i32* %count5834, align 8
  %tobool5835 = icmp ne i32 %3248, 0
  br i1 %tobool5835, label %if.then5836, label %if.else5885

if.then5836:                                      ; preds = %if.then5831
  %3249 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %is_utf8_target5837 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %3249, i32 0, i32 14
  %3250 = load i8, i8* %is_utf8_target5837, align 2
  %tobool5838 = trunc i8 %3250 to i1
  br i1 %tobool5838, label %cond.true5840, label %cond.false5843

cond.true5840:                                    ; preds = %if.then5836
  %3251 = load i8*, i8** %locinput, align 8
  %3252 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg5841 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %3252, i32 0, i32 1
  %3253 = load i8*, i8** %strbeg5841, align 8
  %call5842 = call i8* @S_reghop3(i8* %3251, i64 -1, i8* %3253)
  br label %cond.end5845

cond.false5843:                                   ; preds = %if.then5836
  %3254 = load i8*, i8** %locinput, align 8
  %add.ptr5844 = getelementptr inbounds i8, i8* %3254, i64 -1
  br label %cond.end5845

cond.end5845:                                     ; preds = %cond.false5843, %cond.true5840
  %cond5846 = phi i8* [ %call5842, %cond.true5840 ], [ %add.ptr5844, %cond.false5843 ]
  %3255 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg5847 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %3255, i32 0, i32 1
  %3256 = load i8*, i8** %strbeg5847, align 8
  %sub.ptr.lhs.cast5848 = ptrtoint i8* %cond5846 to i64
  %sub.ptr.rhs.cast5849 = ptrtoint i8* %3256 to i64
  %sub.ptr.sub5850 = sub i64 %sub.ptr.lhs.cast5848, %sub.ptr.rhs.cast5849
  %3257 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %offs5851 = getelementptr inbounds %struct.regexp, %struct.regexp* %3257, i32 0, i32 17
  %3258 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %offs5851, align 8
  %3259 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5852 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3259, i32 0, i32 2
  %curly5853 = bitcast %union.anon.19* %u5852 to %struct.anon.31*
  %paren5854 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5853, i32 0, i32 0
  %3260 = load i32, i32* %paren5854, align 8
  %idxprom5855 = zext i32 %3260 to i64
  %arrayidx5856 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %3258, i64 %idxprom5855
  %start5857 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %arrayidx5856, i32 0, i32 0
  store i64 %sub.ptr.sub5850, i64* %start5857, align 8
  %3261 = load i8*, i8** %locinput, align 8
  %3262 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg5858 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %3262, i32 0, i32 1
  %3263 = load i8*, i8** %strbeg5858, align 8
  %sub.ptr.lhs.cast5859 = ptrtoint i8* %3261 to i64
  %sub.ptr.rhs.cast5860 = ptrtoint i8* %3263 to i64
  %sub.ptr.sub5861 = sub i64 %sub.ptr.lhs.cast5859, %sub.ptr.rhs.cast5860
  %3264 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %offs5862 = getelementptr inbounds %struct.regexp, %struct.regexp* %3264, i32 0, i32 17
  %3265 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %offs5862, align 8
  %3266 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5863 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3266, i32 0, i32 2
  %curly5864 = bitcast %union.anon.19* %u5863 to %struct.anon.31*
  %paren5865 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5864, i32 0, i32 0
  %3267 = load i32, i32* %paren5865, align 8
  %idxprom5866 = zext i32 %3267 to i64
  %arrayidx5867 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %3265, i64 %idxprom5866
  %end5868 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %arrayidx5867, i32 0, i32 1
  store i64 %sub.ptr.sub5861, i64* %end5868, align 8
  %3268 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5869 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3268, i32 0, i32 2
  %curly5870 = bitcast %union.anon.19* %u5869 to %struct.anon.31*
  %paren5871 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5870, i32 0, i32 0
  %3269 = load i32, i32* %paren5871, align 8
  %3270 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %lastparen5872 = getelementptr inbounds %struct.regexp, %struct.regexp* %3270, i32 0, i32 15
  %3271 = load i32, i32* %lastparen5872, align 8
  %cmp5873 = icmp ugt i32 %3269, %3271
  br i1 %cmp5873, label %if.then5875, label %if.end5880

if.then5875:                                      ; preds = %cond.end5845
  %3272 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5876 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3272, i32 0, i32 2
  %curly5877 = bitcast %union.anon.19* %u5876 to %struct.anon.31*
  %paren5878 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5877, i32 0, i32 0
  %3273 = load i32, i32* %paren5878, align 8
  %3274 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %lastparen5879 = getelementptr inbounds %struct.regexp, %struct.regexp* %3274, i32 0, i32 15
  store i32 %3273, i32* %lastparen5879, align 8
  br label %if.end5880

if.end5880:                                       ; preds = %if.then5875, %cond.end5845
  %3275 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5881 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3275, i32 0, i32 2
  %curly5882 = bitcast %union.anon.19* %u5881 to %struct.anon.31*
  %paren5883 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5882, i32 0, i32 0
  %3276 = load i32, i32* %paren5883, align 8
  %3277 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %lastcloseparen5884 = getelementptr inbounds %struct.regexp, %struct.regexp* %3277, i32 0, i32 16
  store i32 %3276, i32* %lastcloseparen5884, align 4
  br label %if.end5901

if.else5885:                                      ; preds = %if.then5831
  %3278 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %offs5886 = getelementptr inbounds %struct.regexp, %struct.regexp* %3278, i32 0, i32 17
  %3279 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %offs5886, align 8
  %3280 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5887 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3280, i32 0, i32 2
  %curly5888 = bitcast %union.anon.19* %u5887 to %struct.anon.31*
  %paren5889 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5888, i32 0, i32 0
  %3281 = load i32, i32* %paren5889, align 8
  %idxprom5890 = zext i32 %3281 to i64
  %arrayidx5891 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %3279, i64 %idxprom5890
  %end5892 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %arrayidx5891, i32 0, i32 1
  store i64 -1, i64* %end5892, align 8
  %3282 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5893 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3282, i32 0, i32 2
  %curly5894 = bitcast %union.anon.19* %u5893 to %struct.anon.31*
  %lastparen5895 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5894, i32 0, i32 2
  %3283 = load i32, i32* %lastparen5895, align 8
  %3284 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %lastparen5896 = getelementptr inbounds %struct.regexp, %struct.regexp* %3284, i32 0, i32 15
  store i32 %3283, i32* %lastparen5896, align 8
  %3285 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5897 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3285, i32 0, i32 2
  %curly5898 = bitcast %union.anon.19* %u5897 to %struct.anon.31*
  %lastcloseparen5899 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5898, i32 0, i32 3
  %3286 = load i32, i32* %lastcloseparen5899, align 4
  %3287 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %lastcloseparen5900 = getelementptr inbounds %struct.regexp, %struct.regexp* %3287, i32 0, i32 16
  store i32 %3286, i32* %lastcloseparen5900, align 4
  br label %if.end5901

if.end5901:                                       ; preds = %if.else5885, %if.end5880
  br label %if.end5902

if.end5902:                                       ; preds = %if.end5901, %curly_try_B_min
  %3288 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_eval, align 8
  %tobool5903 = icmp ne %struct.regmatch_state* %3288, null
  br i1 %tobool5903, label %land.lhs.true5904, label %if.end5919

land.lhs.true5904:                                ; preds = %if.end5902
  %3289 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_eval, align 8
  %u5905 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3289, i32 0, i32 2
  %eval5906 = bitcast %union.anon.19* %u5905 to %struct.anon.24*
  %close_paren5907 = getelementptr inbounds %struct.anon.24, %struct.anon.24* %eval5906, i32 0, i32 6
  %3290 = load i32, i32* %close_paren5907, align 8
  %tobool5908 = icmp ne i32 %3290, 0
  br i1 %tobool5908, label %land.lhs.true5909, label %if.end5919

land.lhs.true5909:                                ; preds = %land.lhs.true5904
  %3291 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_eval, align 8
  %u5910 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3291, i32 0, i32 2
  %eval5911 = bitcast %union.anon.19* %u5910 to %struct.anon.24*
  %close_paren5912 = getelementptr inbounds %struct.anon.24, %struct.anon.24* %eval5911, i32 0, i32 6
  %3292 = load i32, i32* %close_paren5912, align 8
  %3293 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5913 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3293, i32 0, i32 2
  %curly5914 = bitcast %union.anon.19* %u5913 to %struct.anon.31*
  %paren5915 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5914, i32 0, i32 0
  %3294 = load i32, i32* %paren5915, align 8
  %cmp5916 = icmp eq i32 %3292, %3294
  br i1 %cmp5916, label %if.then5918, label %if.end5919

if.then5918:                                      ; preds = %land.lhs.true5909
  br label %fake_end

if.end5919:                                       ; preds = %land.lhs.true5909, %land.lhs.true5904, %if.end5902
  %3295 = load i8*, i8** %locinput, align 8
  store i8* %3295, i8** %pushinput, align 8
  %3296 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5920 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3296, i32 0, i32 2
  %curly5921 = bitcast %union.anon.19* %u5920 to %struct.anon.31*
  %B5922 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5921, i32 0, i32 12
  %3297 = load %struct.regnode*, %struct.regnode** %B5922, align 8
  store %struct.regnode* %3297, %struct.regnode** %scan, align 8
  %3298 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %resume_state5923 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3298, i32 0, i32 0
  store i32 120, i32* %resume_state5923, align 8
  br label %push_state

if.end5924:                                       ; preds = %land.lhs.true5820, %lor.lhs.false5814
  br label %no

curly_try_B_max:                                  ; preds = %cond.end6154, %if.end5427
  %3299 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_eval, align 8
  %tobool5925 = icmp ne %struct.regmatch_state* %3299, null
  br i1 %tobool5925, label %land.lhs.true5926, label %if.end5941

land.lhs.true5926:                                ; preds = %curly_try_B_max
  %3300 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_eval, align 8
  %u5927 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3300, i32 0, i32 2
  %eval5928 = bitcast %union.anon.19* %u5927 to %struct.anon.24*
  %close_paren5929 = getelementptr inbounds %struct.anon.24, %struct.anon.24* %eval5928, i32 0, i32 6
  %3301 = load i32, i32* %close_paren5929, align 8
  %tobool5930 = icmp ne i32 %3301, 0
  br i1 %tobool5930, label %land.lhs.true5931, label %if.end5941

land.lhs.true5931:                                ; preds = %land.lhs.true5926
  %3302 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_eval, align 8
  %u5932 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3302, i32 0, i32 2
  %eval5933 = bitcast %union.anon.19* %u5932 to %struct.anon.24*
  %close_paren5934 = getelementptr inbounds %struct.anon.24, %struct.anon.24* %eval5933, i32 0, i32 6
  %3303 = load i32, i32* %close_paren5934, align 8
  %3304 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5935 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3304, i32 0, i32 2
  %curly5936 = bitcast %union.anon.19* %u5935 to %struct.anon.31*
  %paren5937 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5936, i32 0, i32 0
  %3305 = load i32, i32* %paren5937, align 8
  %cmp5938 = icmp eq i32 %3303, %3305
  br i1 %cmp5938, label %if.then5940, label %if.end5941

if.then5940:                                      ; preds = %land.lhs.true5931
  br label %fake_end

if.end5941:                                       ; preds = %land.lhs.true5931, %land.lhs.true5926, %curly_try_B_max
  %3306 = load i8*, i8** %locinput, align 8
  %3307 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend5942 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %3307, i32 0, i32 2
  %3308 = load i8*, i8** %strend5942, align 8
  %cmp5943 = icmp ult i8* %3306, %3308
  %frombool5945 = zext i1 %cmp5943 to i8
  store i8 %frombool5945, i8* %could_match, align 1
  %3309 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5946 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3309, i32 0, i32 2
  %curly5947 = bitcast %union.anon.19* %u5946 to %struct.anon.31*
  %c15948 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5947, i32 0, i32 4
  %3310 = load i32, i32* %c15948, align 8
  %cmp5949 = icmp ne i32 %3310, -1000
  br i1 %cmp5949, label %land.lhs.true5951, label %if.end6005

land.lhs.true5951:                                ; preds = %if.end5941
  %3311 = load i8, i8* %could_match, align 1
  %tobool5952 = trunc i8 %3311 to i1
  br i1 %tobool5952, label %if.then5954, label %if.end6005

if.then5954:                                      ; preds = %land.lhs.true5951
  %3312 = load i8*, i8** %locinput, align 8
  %3313 = load i8, i8* %3312, align 1
  %conv5955 = zext i8 %3313 to i32
  %conv5956 = sext i32 %conv5955 to i64
  %cmp5957 = icmp ult i64 %conv5956, 128
  br i1 %cmp5957, label %if.else5987, label %land.lhs.true5959

land.lhs.true5959:                                ; preds = %if.then5954
  %3314 = load i8, i8* %utf8_target, align 1
  %tobool5960 = trunc i8 %3314 to i1
  br i1 %tobool5960, label %if.then5962, label %if.else5987

if.then5962:                                      ; preds = %land.lhs.true5959
  %3315 = load i8*, i8** %locinput, align 8
  %3316 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5963 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3316, i32 0, i32 2
  %curly5964 = bitcast %union.anon.19* %u5963 to %struct.anon.31*
  %c1_utf85965 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5964, i32 0, i32 13
  %arraydecay5966 = getelementptr inbounds [14 x i8], [14 x i8]* %c1_utf85965, i64 0, i64 0
  %3317 = load i8*, i8** %locinput, align 8
  %3318 = load i8, i8* %3317, align 1
  %idxprom5967 = zext i8 %3318 to i64
  %arrayidx5968 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom5967
  %3319 = load i8, i8* %arrayidx5968, align 1
  %conv5969 = zext i8 %3319 to i64
  %call5970 = call i32 @memcmp(i8* %3315, i8* %arraydecay5966, i64 %conv5969) #5
  %tobool5971 = icmp ne i32 %call5970, 0
  br i1 %tobool5971, label %lor.rhs5972, label %lor.end5984

lor.rhs5972:                                      ; preds = %if.then5962
  %3320 = load i8*, i8** %locinput, align 8
  %3321 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5973 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3321, i32 0, i32 2
  %curly5974 = bitcast %union.anon.19* %u5973 to %struct.anon.31*
  %c2_utf85975 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5974, i32 0, i32 14
  %arraydecay5976 = getelementptr inbounds [14 x i8], [14 x i8]* %c2_utf85975, i64 0, i64 0
  %3322 = load i8*, i8** %locinput, align 8
  %3323 = load i8, i8* %3322, align 1
  %idxprom5977 = zext i8 %3323 to i64
  %arrayidx5978 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom5977
  %3324 = load i8, i8* %arrayidx5978, align 1
  %conv5979 = zext i8 %3324 to i64
  %call5980 = call i32 @memcmp(i8* %3320, i8* %arraydecay5976, i64 %conv5979) #5
  %tobool5981 = icmp ne i32 %call5980, 0
  %lnot5982 = xor i1 %tobool5981, true
  br label %lor.end5984

lor.end5984:                                      ; preds = %lor.rhs5972, %if.then5962
  %3325 = phi i1 [ true, %if.then5962 ], [ %lnot5982, %lor.rhs5972 ]
  %frombool5986 = zext i1 %3325 to i8
  store i8 %frombool5986, i8* %could_match, align 1
  br label %if.end6004

if.else5987:                                      ; preds = %land.lhs.true5959, %if.then5954
  %3326 = load i8*, i8** %locinput, align 8
  %3327 = load i8, i8* %3326, align 1
  %conv5988 = zext i8 %3327 to i32
  %3328 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5989 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3328, i32 0, i32 2
  %curly5990 = bitcast %union.anon.19* %u5989 to %struct.anon.31*
  %c15991 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5990, i32 0, i32 4
  %3329 = load i32, i32* %c15991, align 8
  %cmp5992 = icmp eq i32 %conv5988, %3329
  br i1 %cmp5992, label %lor.end6001, label %lor.rhs5994

lor.rhs5994:                                      ; preds = %if.else5987
  %3330 = load i8*, i8** %locinput, align 8
  %3331 = load i8, i8* %3330, align 1
  %conv5995 = zext i8 %3331 to i32
  %3332 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5996 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3332, i32 0, i32 2
  %curly5997 = bitcast %union.anon.19* %u5996 to %struct.anon.31*
  %c25998 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5997, i32 0, i32 5
  %3333 = load i32, i32* %c25998, align 4
  %cmp5999 = icmp eq i32 %conv5995, %3333
  br label %lor.end6001

lor.end6001:                                      ; preds = %lor.rhs5994, %if.else5987
  %3334 = phi i1 [ true, %if.else5987 ], [ %cmp5999, %lor.rhs5994 ]
  %frombool6003 = zext i1 %3334 to i8
  store i8 %frombool6003, i8* %could_match, align 1
  br label %if.end6004

if.end6004:                                       ; preds = %lor.end6001, %lor.end5984
  br label %if.end6005

if.end6005:                                       ; preds = %if.end6004, %land.lhs.true5951, %if.end5941
  %3335 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u6006 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3335, i32 0, i32 2
  %curly6007 = bitcast %union.anon.19* %u6006 to %struct.anon.31*
  %c16008 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly6007, i32 0, i32 4
  %3336 = load i32, i32* %c16008, align 8
  %cmp6009 = icmp eq i32 %3336, -1000
  br i1 %cmp6009, label %if.then6014, label %lor.lhs.false6011

lor.lhs.false6011:                                ; preds = %if.end6005
  %3337 = load i8, i8* %could_match, align 1
  %tobool6012 = trunc i8 %3337 to i1
  br i1 %tobool6012, label %if.then6014, label %if.end6095

if.then6014:                                      ; preds = %lor.lhs.false6011, %if.end6005
  %3338 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u6015 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3338, i32 0, i32 2
  %curly6016 = bitcast %union.anon.19* %u6015 to %struct.anon.31*
  %paren6017 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly6016, i32 0, i32 0
  %3339 = load i32, i32* %paren6017, align 8
  %tobool6018 = icmp ne i32 %3339, 0
  br i1 %tobool6018, label %if.then6019, label %if.end6090

if.then6019:                                      ; preds = %if.then6014
  %3340 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u6020 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3340, i32 0, i32 2
  %curly6021 = bitcast %union.anon.19* %u6020 to %struct.anon.31*
  %count6022 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly6021, i32 0, i32 8
  %3341 = load i32, i32* %count6022, align 8
  %tobool6023 = icmp ne i32 %3341, 0
  br i1 %tobool6023, label %if.then6024, label %if.else6073

if.then6024:                                      ; preds = %if.then6019
  %3342 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %is_utf8_target6025 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %3342, i32 0, i32 14
  %3343 = load i8, i8* %is_utf8_target6025, align 2
  %tobool6026 = trunc i8 %3343 to i1
  br i1 %tobool6026, label %cond.true6028, label %cond.false6031

cond.true6028:                                    ; preds = %if.then6024
  %3344 = load i8*, i8** %locinput, align 8
  %3345 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg6029 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %3345, i32 0, i32 1
  %3346 = load i8*, i8** %strbeg6029, align 8
  %call6030 = call i8* @S_reghop3(i8* %3344, i64 -1, i8* %3346)
  br label %cond.end6033

cond.false6031:                                   ; preds = %if.then6024
  %3347 = load i8*, i8** %locinput, align 8
  %add.ptr6032 = getelementptr inbounds i8, i8* %3347, i64 -1
  br label %cond.end6033

cond.end6033:                                     ; preds = %cond.false6031, %cond.true6028
  %cond6034 = phi i8* [ %call6030, %cond.true6028 ], [ %add.ptr6032, %cond.false6031 ]
  %3348 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg6035 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %3348, i32 0, i32 1
  %3349 = load i8*, i8** %strbeg6035, align 8
  %sub.ptr.lhs.cast6036 = ptrtoint i8* %cond6034 to i64
  %sub.ptr.rhs.cast6037 = ptrtoint i8* %3349 to i64
  %sub.ptr.sub6038 = sub i64 %sub.ptr.lhs.cast6036, %sub.ptr.rhs.cast6037
  %3350 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %offs6039 = getelementptr inbounds %struct.regexp, %struct.regexp* %3350, i32 0, i32 17
  %3351 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %offs6039, align 8
  %3352 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u6040 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3352, i32 0, i32 2
  %curly6041 = bitcast %union.anon.19* %u6040 to %struct.anon.31*
  %paren6042 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly6041, i32 0, i32 0
  %3353 = load i32, i32* %paren6042, align 8
  %idxprom6043 = zext i32 %3353 to i64
  %arrayidx6044 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %3351, i64 %idxprom6043
  %start6045 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %arrayidx6044, i32 0, i32 0
  store i64 %sub.ptr.sub6038, i64* %start6045, align 8
  %3354 = load i8*, i8** %locinput, align 8
  %3355 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg6046 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %3355, i32 0, i32 1
  %3356 = load i8*, i8** %strbeg6046, align 8
  %sub.ptr.lhs.cast6047 = ptrtoint i8* %3354 to i64
  %sub.ptr.rhs.cast6048 = ptrtoint i8* %3356 to i64
  %sub.ptr.sub6049 = sub i64 %sub.ptr.lhs.cast6047, %sub.ptr.rhs.cast6048
  %3357 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %offs6050 = getelementptr inbounds %struct.regexp, %struct.regexp* %3357, i32 0, i32 17
  %3358 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %offs6050, align 8
  %3359 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u6051 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3359, i32 0, i32 2
  %curly6052 = bitcast %union.anon.19* %u6051 to %struct.anon.31*
  %paren6053 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly6052, i32 0, i32 0
  %3360 = load i32, i32* %paren6053, align 8
  %idxprom6054 = zext i32 %3360 to i64
  %arrayidx6055 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %3358, i64 %idxprom6054
  %end6056 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %arrayidx6055, i32 0, i32 1
  store i64 %sub.ptr.sub6049, i64* %end6056, align 8
  %3361 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u6057 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3361, i32 0, i32 2
  %curly6058 = bitcast %union.anon.19* %u6057 to %struct.anon.31*
  %paren6059 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly6058, i32 0, i32 0
  %3362 = load i32, i32* %paren6059, align 8
  %3363 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %lastparen6060 = getelementptr inbounds %struct.regexp, %struct.regexp* %3363, i32 0, i32 15
  %3364 = load i32, i32* %lastparen6060, align 8
  %cmp6061 = icmp ugt i32 %3362, %3364
  br i1 %cmp6061, label %if.then6063, label %if.end6068

if.then6063:                                      ; preds = %cond.end6033
  %3365 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u6064 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3365, i32 0, i32 2
  %curly6065 = bitcast %union.anon.19* %u6064 to %struct.anon.31*
  %paren6066 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly6065, i32 0, i32 0
  %3366 = load i32, i32* %paren6066, align 8
  %3367 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %lastparen6067 = getelementptr inbounds %struct.regexp, %struct.regexp* %3367, i32 0, i32 15
  store i32 %3366, i32* %lastparen6067, align 8
  br label %if.end6068

if.end6068:                                       ; preds = %if.then6063, %cond.end6033
  %3368 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u6069 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3368, i32 0, i32 2
  %curly6070 = bitcast %union.anon.19* %u6069 to %struct.anon.31*
  %paren6071 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly6070, i32 0, i32 0
  %3369 = load i32, i32* %paren6071, align 8
  %3370 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %lastcloseparen6072 = getelementptr inbounds %struct.regexp, %struct.regexp* %3370, i32 0, i32 16
  store i32 %3369, i32* %lastcloseparen6072, align 4
  br label %if.end6089

if.else6073:                                      ; preds = %if.then6019
  %3371 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %offs6074 = getelementptr inbounds %struct.regexp, %struct.regexp* %3371, i32 0, i32 17
  %3372 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %offs6074, align 8
  %3373 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u6075 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3373, i32 0, i32 2
  %curly6076 = bitcast %union.anon.19* %u6075 to %struct.anon.31*
  %paren6077 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly6076, i32 0, i32 0
  %3374 = load i32, i32* %paren6077, align 8
  %idxprom6078 = zext i32 %3374 to i64
  %arrayidx6079 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %3372, i64 %idxprom6078
  %end6080 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %arrayidx6079, i32 0, i32 1
  store i64 -1, i64* %end6080, align 8
  %3375 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u6081 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3375, i32 0, i32 2
  %curly6082 = bitcast %union.anon.19* %u6081 to %struct.anon.31*
  %lastparen6083 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly6082, i32 0, i32 2
  %3376 = load i32, i32* %lastparen6083, align 8
  %3377 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %lastparen6084 = getelementptr inbounds %struct.regexp, %struct.regexp* %3377, i32 0, i32 15
  store i32 %3376, i32* %lastparen6084, align 8
  %3378 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u6085 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3378, i32 0, i32 2
  %curly6086 = bitcast %union.anon.19* %u6085 to %struct.anon.31*
  %lastcloseparen6087 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly6086, i32 0, i32 3
  %3379 = load i32, i32* %lastcloseparen6087, align 4
  %3380 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %lastcloseparen6088 = getelementptr inbounds %struct.regexp, %struct.regexp* %3380, i32 0, i32 16
  store i32 %3379, i32* %lastcloseparen6088, align 4
  br label %if.end6089

if.end6089:                                       ; preds = %if.else6073, %if.end6068
  br label %if.end6090

if.end6090:                                       ; preds = %if.end6089, %if.then6014
  %3381 = load i8*, i8** %locinput, align 8
  store i8* %3381, i8** %pushinput, align 8
  %3382 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u6091 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3382, i32 0, i32 2
  %curly6092 = bitcast %union.anon.19* %u6091 to %struct.anon.31*
  %B6093 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly6092, i32 0, i32 12
  %3383 = load %struct.regnode*, %struct.regnode** %B6093, align 8
  store %struct.regnode* %3383, %struct.regnode** %scan, align 8
  %3384 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %resume_state6094 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3384, i32 0, i32 0
  store i32 122, i32* %resume_state6094, align 8
  br label %push_state

if.end6095:                                       ; preds = %lor.lhs.false6011
  br label %sw.bb6096

sw.bb6096:                                        ; preds = %cond.end45, %if.end6095
  br label %do.body6097

do.body6097:                                      ; preds = %sw.bb6096
  %3385 = load i32, i32* @PL_savestack_ix, align 4
  %3386 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u6098 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3386, i32 0, i32 2
  %curly6099 = bitcast %union.anon.19* %u6098 to %struct.anon.31*
  %cp6100 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly6099, i32 0, i32 1
  %3387 = load i32, i32* %cp6100, align 4
  %cmp6101 = icmp sgt i32 %3385, %3387
  br i1 %cmp6101, label %if.then6103, label %if.end6107

if.then6103:                                      ; preds = %do.body6097
  %3388 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u6104 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3388, i32 0, i32 2
  %curly6105 = bitcast %union.anon.19* %u6104 to %struct.anon.31*
  %cp6106 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly6105, i32 0, i32 1
  %3389 = load i32, i32* %cp6106, align 4
  call void @Perl_leave_scope(i32 %3389)
  br label %if.end6107

if.end6107:                                       ; preds = %if.then6103, %do.body6097
  br label %do.end6108

do.end6108:                                       ; preds = %if.end6107
  %3390 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u6109 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3390, i32 0, i32 2
  %curly6110 = bitcast %union.anon.19* %u6109 to %struct.anon.31*
  %paren6111 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly6110, i32 0, i32 0
  %3391 = load i32, i32* %paren6111, align 8
  %tobool6112 = icmp ne i32 %3391, 0
  br i1 %tobool6112, label %if.then6113, label %if.end6134

if.then6113:                                      ; preds = %do.end6108
  %3392 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %lastparen6114 = getelementptr inbounds %struct.regexp, %struct.regexp* %3392, i32 0, i32 15
  %3393 = load i32, i32* %lastparen6114, align 8
  store i32 %3393, i32* %n, align 4
  br label %for.cond6115

for.cond6115:                                     ; preds = %for.inc6126, %if.then6113
  %3394 = load i32, i32* %n, align 4
  %3395 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u6116 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3395, i32 0, i32 2
  %curly6117 = bitcast %union.anon.19* %u6116 to %struct.anon.31*
  %lastparen6118 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly6117, i32 0, i32 2
  %3396 = load i32, i32* %lastparen6118, align 8
  %cmp6119 = icmp ugt i32 %3394, %3396
  br i1 %cmp6119, label %for.body6121, label %for.end6128

for.body6121:                                     ; preds = %for.cond6115
  %3397 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %offs6122 = getelementptr inbounds %struct.regexp, %struct.regexp* %3397, i32 0, i32 17
  %3398 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %offs6122, align 8
  %3399 = load i32, i32* %n, align 4
  %idxprom6123 = zext i32 %3399 to i64
  %arrayidx6124 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %3398, i64 %idxprom6123
  %end6125 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %arrayidx6124, i32 0, i32 1
  store i64 -1, i64* %end6125, align 8
  br label %for.inc6126

for.inc6126:                                      ; preds = %for.body6121
  %3400 = load i32, i32* %n, align 4
  %dec6127 = add i32 %3400, -1
  store i32 %dec6127, i32* %n, align 4
  br label %for.cond6115

for.end6128:                                      ; preds = %for.cond6115
  %3401 = load i32, i32* %n, align 4
  %3402 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %lastparen6129 = getelementptr inbounds %struct.regexp, %struct.regexp* %3402, i32 0, i32 15
  store i32 %3401, i32* %lastparen6129, align 8
  %3403 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u6130 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3403, i32 0, i32 2
  %curly6131 = bitcast %union.anon.19* %u6130 to %struct.anon.31*
  %lastcloseparen6132 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly6131, i32 0, i32 3
  %3404 = load i32, i32* %lastcloseparen6132, align 4
  %3405 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %lastcloseparen6133 = getelementptr inbounds %struct.regexp, %struct.regexp* %3405, i32 0, i32 16
  store i32 %3404, i32* %lastcloseparen6133, align 4
  br label %if.end6134

if.end6134:                                       ; preds = %for.end6128, %do.end6108
  %3406 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u6135 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3406, i32 0, i32 2
  %curly6136 = bitcast %union.anon.19* %u6135 to %struct.anon.31*
  %count6137 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly6136, i32 0, i32 8
  %3407 = load i32, i32* %count6137, align 8
  %dec6138 = add nsw i32 %3407, -1
  store i32 %dec6138, i32* %count6137, align 8
  %3408 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u6139 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3408, i32 0, i32 2
  %curly6140 = bitcast %union.anon.19* %u6139 to %struct.anon.31*
  %min6141 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly6140, i32 0, i32 9
  %3409 = load i32, i32* %min6141, align 4
  %cmp6142 = icmp slt i32 %dec6138, %3409
  br i1 %cmp6142, label %if.then6144, label %if.end6145

if.then6144:                                      ; preds = %if.end6134
  br label %no

if.end6145:                                       ; preds = %if.end6134
  %3410 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %is_utf8_target6146 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %3410, i32 0, i32 14
  %3411 = load i8, i8* %is_utf8_target6146, align 2
  %tobool6147 = trunc i8 %3411 to i1
  br i1 %tobool6147, label %cond.true6149, label %cond.false6152

cond.true6149:                                    ; preds = %if.end6145
  %3412 = load i8*, i8** %locinput, align 8
  %3413 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg6150 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %3413, i32 0, i32 1
  %3414 = load i8*, i8** %strbeg6150, align 8
  %call6151 = call i8* @S_reghop3(i8* %3412, i64 -1, i8* %3414)
  br label %cond.end6154

cond.false6152:                                   ; preds = %if.end6145
  %3415 = load i8*, i8** %locinput, align 8
  %add.ptr6153 = getelementptr inbounds i8, i8* %3415, i64 -1
  br label %cond.end6154

cond.end6154:                                     ; preds = %cond.false6152, %cond.true6149
  %cond6155 = phi i8* [ %call6151, %cond.true6149 ], [ %add.ptr6153, %cond.false6152 ]
  store i8* %cond6155, i8** %locinput, align 8
  br label %curly_try_B_max

sw.bb6156:                                        ; preds = %cond.end45
  br label %fake_end

fake_end:                                         ; preds = %sw.bb6156, %if.then5940, %if.then5918, %if.then5749, %if.then4713, %if.then4196, %if.end3388, %if.then3322
  %3416 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_eval, align 8
  %tobool6157 = icmp ne %struct.regmatch_state* %3416, null
  br i1 %tobool6157, label %if.then6158, label %if.end6212

if.then6158:                                      ; preds = %fake_end
  %3417 = load %struct.p5rx*, %struct.p5rx** %rex_sv, align 8
  %3418 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u6159 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3418, i32 0, i32 2
  %eval6160 = bitcast %union.anon.19* %u6159 to %struct.anon.24*
  %prev_rex6161 = getelementptr inbounds %struct.anon.24, %struct.anon.24* %eval6160, i32 0, i32 3
  store %struct.p5rx* %3417, %struct.p5rx** %prev_rex6161, align 8
  %3419 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %3420 = load i32, i32* %maxopenparen, align 4
  %call6162 = call i32 @S_regcppush(%struct.regexp* %3419, i32 0, i32 %3420)
  %3421 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u6163 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3421, i32 0, i32 2
  %eval6164 = bitcast %union.anon.19* %u6163 to %struct.anon.24*
  %cp6165 = getelementptr inbounds %struct.anon.24, %struct.anon.24* %eval6164, i32 0, i32 4
  store i32 %call6162, i32* %cp6165, align 8
  %3422 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_eval, align 8
  %u6166 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3422, i32 0, i32 2
  %eval6167 = bitcast %union.anon.19* %u6166 to %struct.anon.24*
  %prev_rex6168 = getelementptr inbounds %struct.anon.24, %struct.anon.24* %eval6167, i32 0, i32 3
  %3423 = load %struct.p5rx*, %struct.p5rx** %prev_rex6168, align 8
  store %struct.p5rx* %3423, %struct.p5rx** %rex_sv, align 8
  %3424 = load %struct.p5rx*, %struct.p5rx** %rex_sv, align 8
  %sv_flags6169 = getelementptr inbounds %struct.p5rx, %struct.p5rx* %3424, i32 0, i32 2
  %3425 = load i32, i32* %sv_flags6169, align 4
  %and6170 = and i32 %3425, 536870912
  %tobool6171 = icmp ne i32 %and6170, 0
  %3426 = zext i1 %tobool6171 to i64
  %cond6172 = select i1 %tobool6171, i32 1, i32 0
  %tobool6173 = icmp ne i32 %cond6172, 0
  %3427 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %is_utf8_pat6174 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %3427, i32 0, i32 13
  %frombool6175 = zext i1 %tobool6173 to i8
  store i8 %frombool6175, i8* %is_utf8_pat6174, align 1
  %frombool6176 = zext i1 %tobool6173 to i8
  store i8 %frombool6176, i8* %is_utf8_pat, align 1
  %3428 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %info_aux_eval6177 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %3428, i32 0, i32 8
  %3429 = load %struct.regmatch_info_aux_eval*, %struct.regmatch_info_aux_eval** %info_aux_eval6177, align 8
  %tobool6178 = icmp ne %struct.regmatch_info_aux_eval* %3429, null
  br i1 %tobool6178, label %if.then6179, label %if.end6183

if.then6179:                                      ; preds = %if.then6158
  %3430 = load %struct.p5rx*, %struct.p5rx** %rex_sv, align 8
  %3431 = bitcast %struct.p5rx* %3430 to i8*
  %3432 = bitcast i8* %3431 to %struct.sv*
  %call6180 = call %struct.sv* @S_SvREFCNT_inc(%struct.sv* %3432)
  %3433 = bitcast %struct.sv* %call6180 to %struct.p5rx*
  %3434 = load %struct.pmop*, %struct.pmop** @PL_reg_curpm, align 8
  %op_pmregexp6181 = getelementptr inbounds %struct.pmop, %struct.pmop* %3434, i32 0, i32 9
  %3435 = load %struct.p5rx*, %struct.p5rx** %op_pmregexp6181, align 8
  %3436 = bitcast %struct.p5rx* %3435 to i8*
  %3437 = bitcast i8* %3436 to %struct.sv*
  call void @S_SvREFCNT_dec(%struct.sv* %3437)
  %3438 = load %struct.p5rx*, %struct.p5rx** %rex_sv, align 8
  %3439 = load %struct.pmop*, %struct.pmop** @PL_reg_curpm, align 8
  %op_pmregexp6182 = getelementptr inbounds %struct.pmop, %struct.pmop* %3439, i32 0, i32 9
  store %struct.p5rx* %3438, %struct.p5rx** %op_pmregexp6182, align 8
  br label %if.end6183

if.end6183:                                       ; preds = %if.then6179, %if.then6158
  %3440 = load %struct.p5rx*, %struct.p5rx** %rex_sv, align 8
  %call6184 = call %struct.regexp* @S_ReANY(%struct.p5rx* %3440)
  store %struct.regexp* %call6184, %struct.regexp** %rex, align 8
  %3441 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %pprivate6185 = getelementptr inbounds %struct.regexp, %struct.regexp* %3441, i32 0, i32 14
  %3442 = load i8*, i8** %pprivate6185, align 8
  %3443 = bitcast i8* %3442 to %struct.regexp_internal*
  store %struct.regexp_internal* %3443, %struct.regexp_internal** %rexi, align 8
  %3444 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_eval, align 8
  %u6186 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3444, i32 0, i32 2
  %eval6187 = bitcast %union.anon.19* %u6186 to %struct.anon.24*
  %prev_curlyx6188 = getelementptr inbounds %struct.anon.24, %struct.anon.24* %eval6187, i32 0, i32 2
  %3445 = load %struct.regmatch_state*, %struct.regmatch_state** %prev_curlyx6188, align 8
  store %struct.regmatch_state* %3445, %struct.regmatch_state** %cur_curlyx, align 8
  %3446 = load i32, i32* @PL_savestack_ix, align 4
  %3447 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u6189 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3447, i32 0, i32 2
  %eval6190 = bitcast %union.anon.19* %u6189 to %struct.anon.24*
  %lastcp6191 = getelementptr inbounds %struct.anon.24, %struct.anon.24* %eval6190, i32 0, i32 5
  store i32 %3446, i32* %lastcp6191, align 4
  %3448 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %3449 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_eval, align 8
  %u6192 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3449, i32 0, i32 2
  %eval6193 = bitcast %union.anon.19* %u6192 to %struct.anon.24*
  %lastcp6194 = getelementptr inbounds %struct.anon.24, %struct.anon.24* %eval6193, i32 0, i32 5
  %3450 = load i32, i32* %lastcp6194, align 4
  call void @S_regcp_restore(%struct.regexp* %3448, i32 %3450, i32* %maxopenparen)
  %3451 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_eval, align 8
  %3452 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u6195 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3452, i32 0, i32 2
  %eval6196 = bitcast %union.anon.19* %u6195 to %struct.anon.24*
  %prev_eval6197 = getelementptr inbounds %struct.anon.24, %struct.anon.24* %eval6196, i32 0, i32 1
  store %struct.regmatch_state* %3451, %struct.regmatch_state** %prev_eval6197, align 8
  %3453 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_eval, align 8
  %u6198 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3453, i32 0, i32 2
  %eval6199 = bitcast %union.anon.19* %u6198 to %struct.anon.24*
  %prev_eval6200 = getelementptr inbounds %struct.anon.24, %struct.anon.24* %eval6199, i32 0, i32 1
  %3454 = load %struct.regmatch_state*, %struct.regmatch_state** %prev_eval6200, align 8
  store %struct.regmatch_state* %3454, %struct.regmatch_state** %cur_eval, align 8
  %3455 = load i32, i32* %nochange_depth, align 4
  %tobool6201 = icmp ne i32 %3455, 0
  br i1 %tobool6201, label %if.then6202, label %if.end6204

if.then6202:                                      ; preds = %if.end6183
  %3456 = load i32, i32* %nochange_depth, align 4
  %dec6203 = add i32 %3456, -1
  store i32 %dec6203, i32* %nochange_depth, align 4
  br label %if.end6204

if.end6204:                                       ; preds = %if.then6202, %if.end6183
  %3457 = load i8*, i8** %locinput, align 8
  store i8* %3457, i8** %pushinput, align 8
  %3458 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u6205 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3458, i32 0, i32 2
  %eval6206 = bitcast %union.anon.19* %u6205 to %struct.anon.24*
  %prev_eval6207 = getelementptr inbounds %struct.anon.24, %struct.anon.24* %eval6206, i32 0, i32 1
  %3459 = load %struct.regmatch_state*, %struct.regmatch_state** %prev_eval6207, align 8
  %u6208 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3459, i32 0, i32 2
  %eval6209 = bitcast %union.anon.19* %u6208 to %struct.anon.24*
  %B6210 = getelementptr inbounds %struct.anon.24, %struct.anon.24* %eval6209, i32 0, i32 7
  %3460 = load %struct.regnode*, %struct.regnode** %B6210, align 8
  store %struct.regnode* %3460, %struct.regnode** %scan, align 8
  %3461 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %resume_state6211 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3461, i32 0, i32 0
  store i32 96, i32* %resume_state6211, align 8
  br label %push_yes_state

if.end6212:                                       ; preds = %fake_end
  %3462 = load i8*, i8** %locinput, align 8
  %3463 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %till = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %3463, i32 0, i32 3
  %3464 = load i8*, i8** %till, align 8
  %cmp6213 = icmp ult i8* %3462, %3464
  br i1 %cmp6213, label %if.then6215, label %if.end6216

if.then6215:                                      ; preds = %if.end6212
  br label %no_silent

if.end6216:                                       ; preds = %if.end6212
  br label %yes6781

sw.bb6217:                                        ; preds = %cond.end45
  br label %yes6781

sw.bb6218:                                        ; preds = %cond.end45
  %3465 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u6219 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3465, i32 0, i32 2
  %ifmatch = bitcast %union.anon.19* %u6219 to %struct.anon.25*
  %wanted = getelementptr inbounds %struct.anon.25, %struct.anon.25* %ifmatch, i32 0, i32 1
  store i32 1, i32* %wanted, align 8
  %3466 = load i8*, i8** %locinput, align 8
  store i8* %3466, i8** %newstart, align 8
  br label %do_ifmatch

sw.bb6220:                                        ; preds = %cond.end45
  %3467 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u6221 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3467, i32 0, i32 2
  %ifmatch6222 = bitcast %union.anon.19* %u6221 to %struct.anon.25*
  %wanted6223 = getelementptr inbounds %struct.anon.25, %struct.anon.25* %ifmatch6222, i32 0, i32 1
  store i32 0, i32* %wanted6223, align 8
  br label %ifmatch_trivial_fail_test

sw.bb6224:                                        ; preds = %cond.end45
  %3468 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u6225 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3468, i32 0, i32 2
  %ifmatch6226 = bitcast %union.anon.19* %u6225 to %struct.anon.25*
  %wanted6227 = getelementptr inbounds %struct.anon.25, %struct.anon.25* %ifmatch6226, i32 0, i32 1
  store i32 1, i32* %wanted6227, align 8
  br label %ifmatch_trivial_fail_test

ifmatch_trivial_fail_test:                        ; preds = %sw.bb6224, %sw.bb6220
  %3469 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %flags6228 = getelementptr inbounds %struct.regnode, %struct.regnode* %3469, i32 0, i32 0
  %3470 = load i8, i8* %flags6228, align 2
  %tobool6229 = icmp ne i8 %3470, 0
  br i1 %tobool6229, label %if.then6230, label %if.else6290

if.then6230:                                      ; preds = %ifmatch_trivial_fail_test
  %3471 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %is_utf8_target6232 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %3471, i32 0, i32 14
  %3472 = load i8, i8* %is_utf8_target6232, align 2
  %tobool6233 = trunc i8 %3472 to i1
  br i1 %tobool6233, label %cond.true6235, label %cond.false6242

cond.true6235:                                    ; preds = %if.then6230
  %3473 = load i8*, i8** %locinput, align 8
  %3474 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %flags6236 = getelementptr inbounds %struct.regnode, %struct.regnode* %3474, i32 0, i32 0
  %3475 = load i8, i8* %flags6236, align 2
  %conv6237 = zext i8 %3475 to i32
  %sub6238 = sub nsw i32 0, %conv6237
  %conv6239 = sext i32 %sub6238 to i64
  %3476 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg6240 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %3476, i32 0, i32 1
  %3477 = load i8*, i8** %strbeg6240, align 8
  %call6241 = call i8* @S_reghopmaybe3(i8* %3473, i64 %conv6239, i8* %3477)
  br label %cond.end6260

cond.false6242:                                   ; preds = %if.then6230
  %3478 = load i8*, i8** %locinput, align 8
  %3479 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %flags6243 = getelementptr inbounds %struct.regnode, %struct.regnode* %3479, i32 0, i32 0
  %3480 = load i8, i8* %flags6243, align 2
  %conv6244 = zext i8 %3480 to i32
  %idx.ext6245 = sext i32 %conv6244 to i64
  %idx.neg6246 = sub i64 0, %idx.ext6245
  %add.ptr6247 = getelementptr inbounds i8, i8* %3478, i64 %idx.neg6246
  %3481 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg6248 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %3481, i32 0, i32 1
  %3482 = load i8*, i8** %strbeg6248, align 8
  %cmp6249 = icmp uge i8* %add.ptr6247, %3482
  br i1 %cmp6249, label %cond.true6251, label %cond.false6257

cond.true6251:                                    ; preds = %cond.false6242
  %3483 = load i8*, i8** %locinput, align 8
  %3484 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %flags6252 = getelementptr inbounds %struct.regnode, %struct.regnode* %3484, i32 0, i32 0
  %3485 = load i8, i8* %flags6252, align 2
  %conv6253 = zext i8 %3485 to i32
  %idx.ext6254 = sext i32 %conv6253 to i64
  %idx.neg6255 = sub i64 0, %idx.ext6254
  %add.ptr6256 = getelementptr inbounds i8, i8* %3483, i64 %idx.neg6255
  br label %cond.end6258

cond.false6257:                                   ; preds = %cond.false6242
  br label %cond.end6258

cond.end6258:                                     ; preds = %cond.false6257, %cond.true6251
  %cond6259 = phi i8* [ %add.ptr6256, %cond.true6251 ], [ null, %cond.false6257 ]
  br label %cond.end6260

cond.end6260:                                     ; preds = %cond.end6258, %cond.true6235
  %cond6261 = phi i8* [ %call6241, %cond.true6235 ], [ %cond6259, %cond.end6258 ]
  store i8* %cond6261, i8** %s6231, align 8
  %3486 = load i8*, i8** %s6231, align 8
  %tobool6262 = icmp ne i8* %3486, null
  br i1 %tobool6262, label %if.end6289, label %if.then6263

if.then6263:                                      ; preds = %cond.end6260
  %3487 = load i32, i32* %logical, align 4
  %tobool6264 = icmp ne i32 %3487, 0
  br i1 %tobool6264, label %if.then6265, label %if.else6274

if.then6265:                                      ; preds = %if.then6263
  store i32 0, i32* %logical, align 4
  %3488 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u6266 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3488, i32 0, i32 2
  %ifmatch6267 = bitcast %union.anon.19* %u6266 to %struct.anon.25*
  %wanted6268 = getelementptr inbounds %struct.anon.25, %struct.anon.25* %ifmatch6267, i32 0, i32 1
  %3489 = load i32, i32* %wanted6268, align 8
  %tobool6269 = icmp ne i32 %3489, 0
  %3490 = zext i1 %tobool6269 to i64
  %cond6270 = select i1 %tobool6269, i32 1, i32 0
  %sub6271 = sub nsw i32 1, %cond6270
  %tobool6272 = icmp ne i32 %sub6271, 0
  %frombool6273 = zext i1 %tobool6272 to i8
  store i8 %frombool6273, i8* %sw, align 1
  br label %if.end6281

if.else6274:                                      ; preds = %if.then6263
  %3491 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u6275 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3491, i32 0, i32 2
  %ifmatch6276 = bitcast %union.anon.19* %u6275 to %struct.anon.25*
  %wanted6277 = getelementptr inbounds %struct.anon.25, %struct.anon.25* %ifmatch6276, i32 0, i32 1
  %3492 = load i32, i32* %wanted6277, align 8
  %tobool6278 = icmp ne i32 %3492, 0
  br i1 %tobool6278, label %if.then6279, label %if.end6280

if.then6279:                                      ; preds = %if.else6274
  br label %no

if.end6280:                                       ; preds = %if.else6274
  br label %if.end6281

if.end6281:                                       ; preds = %if.end6280, %if.then6265
  %3493 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %3494 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %3495 = bitcast %struct.regnode* %3494 to %struct.regnode_1*
  %arg16282 = getelementptr inbounds %struct.regnode_1, %struct.regnode_1* %3495, i32 0, i32 3
  %3496 = load i32, i32* %arg16282, align 4
  %idx.ext6283 = zext i32 %3496 to i64
  %add.ptr6284 = getelementptr inbounds %struct.regnode, %struct.regnode* %3493, i64 %idx.ext6283
  store %struct.regnode* %add.ptr6284, %struct.regnode** %next, align 8
  %3497 = load %struct.regnode*, %struct.regnode** %next, align 8
  %3498 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %cmp6285 = icmp eq %struct.regnode* %3497, %3498
  br i1 %cmp6285, label %if.then6287, label %if.end6288

if.then6287:                                      ; preds = %if.end6281
  store %struct.regnode* null, %struct.regnode** %next, align 8
  br label %if.end6288

if.end6288:                                       ; preds = %if.then6287, %if.end6281
  br label %sw.epilog6768

if.end6289:                                       ; preds = %cond.end6260
  %3499 = load i8*, i8** %s6231, align 8
  store i8* %3499, i8** %newstart, align 8
  br label %if.end6291

if.else6290:                                      ; preds = %ifmatch_trivial_fail_test
  %3500 = load i8*, i8** %locinput, align 8
  store i8* %3500, i8** %newstart, align 8
  br label %if.end6291

if.end6291:                                       ; preds = %if.else6290, %if.end6289
  br label %do_ifmatch

do_ifmatch:                                       ; preds = %if.end6291, %sw.bb6218
  %3501 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %3502 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u6292 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3502, i32 0, i32 2
  %ifmatch6293 = bitcast %union.anon.19* %u6292 to %struct.anon.25*
  %me6294 = getelementptr inbounds %struct.anon.25, %struct.anon.25* %ifmatch6293, i32 0, i32 3
  store %struct.regnode* %3501, %struct.regnode** %me6294, align 8
  %3503 = load i32, i32* %logical, align 4
  %3504 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u6295 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3504, i32 0, i32 2
  %ifmatch6296 = bitcast %union.anon.19* %u6295 to %struct.anon.25*
  %logical6297 = getelementptr inbounds %struct.anon.25, %struct.anon.25* %ifmatch6296, i32 0, i32 2
  store i32 %3503, i32* %logical6297, align 4
  store i32 0, i32* %logical, align 4
  %3505 = load i8*, i8** %newstart, align 8
  store i8* %3505, i8** %pushinput, align 8
  %3506 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %add.ptr6298 = getelementptr inbounds %struct.regnode, %struct.regnode* %3506, i64 1
  %add.ptr6299 = getelementptr inbounds %struct.regnode, %struct.regnode* %add.ptr6298, i64 1
  store %struct.regnode* %add.ptr6299, %struct.regnode** %scan, align 8
  %3507 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %resume_state6300 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3507, i32 0, i32 0
  store i32 116, i32* %resume_state6300, align 8
  br label %push_yes_state

sw.bb6301:                                        ; preds = %cond.end45
  %3508 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u6302 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3508, i32 0, i32 2
  %ifmatch6303 = bitcast %union.anon.19* %u6302 to %struct.anon.25*
  %wanted6304 = getelementptr inbounds %struct.anon.25, %struct.anon.25* %ifmatch6303, i32 0, i32 1
  %3509 = load i32, i32* %wanted6304, align 8
  %tobool6305 = icmp ne i32 %3509, 0
  %lnot6306 = xor i1 %tobool6305, true
  %lnot.ext6307 = zext i1 %lnot6306 to i32
  %3510 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u6308 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3510, i32 0, i32 2
  %ifmatch6309 = bitcast %union.anon.19* %u6308 to %struct.anon.25*
  %wanted6310 = getelementptr inbounds %struct.anon.25, %struct.anon.25* %ifmatch6309, i32 0, i32 1
  store i32 %lnot.ext6307, i32* %wanted6310, align 8
  br label %sw.bb6311

sw.bb6311:                                        ; preds = %cond.end45, %sw.bb6301
  %3511 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u6312 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3511, i32 0, i32 2
  %ifmatch6313 = bitcast %union.anon.19* %u6312 to %struct.anon.25*
  %logical6314 = getelementptr inbounds %struct.anon.25, %struct.anon.25* %ifmatch6313, i32 0, i32 2
  %3512 = load i32, i32* %logical6314, align 4
  %tobool6315 = icmp ne i32 %3512, 0
  br i1 %tobool6315, label %if.then6316, label %if.else6324

if.then6316:                                      ; preds = %sw.bb6311
  %3513 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u6317 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3513, i32 0, i32 2
  %ifmatch6318 = bitcast %union.anon.19* %u6317 to %struct.anon.25*
  %wanted6319 = getelementptr inbounds %struct.anon.25, %struct.anon.25* %ifmatch6318, i32 0, i32 1
  %3514 = load i32, i32* %wanted6319, align 8
  %tobool6320 = icmp ne i32 %3514, 0
  %3515 = zext i1 %tobool6320 to i64
  %cond6321 = select i1 %tobool6320, i32 1, i32 0
  %tobool6322 = icmp ne i32 %cond6321, 0
  %frombool6323 = zext i1 %tobool6322 to i8
  store i8 %frombool6323, i8* %sw, align 1
  br label %if.end6331

if.else6324:                                      ; preds = %sw.bb6311
  %3516 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u6325 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3516, i32 0, i32 2
  %ifmatch6326 = bitcast %union.anon.19* %u6325 to %struct.anon.25*
  %wanted6327 = getelementptr inbounds %struct.anon.25, %struct.anon.25* %ifmatch6326, i32 0, i32 1
  %3517 = load i32, i32* %wanted6327, align 8
  %tobool6328 = icmp ne i32 %3517, 0
  br i1 %tobool6328, label %if.end6330, label %if.then6329

if.then6329:                                      ; preds = %if.else6324
  br label %no

if.end6330:                                       ; preds = %if.else6324
  br label %if.end6331

if.end6331:                                       ; preds = %if.end6330, %if.then6316
  %3518 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u6332 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3518, i32 0, i32 2
  %ifmatch6333 = bitcast %union.anon.19* %u6332 to %struct.anon.25*
  %me6334 = getelementptr inbounds %struct.anon.25, %struct.anon.25* %ifmatch6333, i32 0, i32 3
  %3519 = load %struct.regnode*, %struct.regnode** %me6334, align 8
  %type6335 = getelementptr inbounds %struct.regnode, %struct.regnode* %3519, i32 0, i32 1
  %3520 = load i8, i8* %type6335, align 1
  %conv6336 = zext i8 %3520 to i32
  %cmp6337 = icmp ne i32 %conv6336, 65
  br i1 %cmp6337, label %if.then6339, label %if.end6341

if.then6339:                                      ; preds = %if.end6331
  %3521 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %locinput6340 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3521, i32 0, i32 1
  %3522 = load i8*, i8** %locinput6340, align 8
  store i8* %3522, i8** %locinput, align 8
  br label %if.end6341

if.end6341:                                       ; preds = %if.then6339, %if.end6331
  %3523 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u6342 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3523, i32 0, i32 2
  %ifmatch6343 = bitcast %union.anon.19* %u6342 to %struct.anon.25*
  %me6344 = getelementptr inbounds %struct.anon.25, %struct.anon.25* %ifmatch6343, i32 0, i32 3
  %3524 = load %struct.regnode*, %struct.regnode** %me6344, align 8
  %3525 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u6345 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3525, i32 0, i32 2
  %ifmatch6346 = bitcast %union.anon.19* %u6345 to %struct.anon.25*
  %me6347 = getelementptr inbounds %struct.anon.25, %struct.anon.25* %ifmatch6346, i32 0, i32 3
  %3526 = load %struct.regnode*, %struct.regnode** %me6347, align 8
  %3527 = bitcast %struct.regnode* %3526 to %struct.regnode_1*
  %arg16348 = getelementptr inbounds %struct.regnode_1, %struct.regnode_1* %3527, i32 0, i32 3
  %3528 = load i32, i32* %arg16348, align 4
  %idx.ext6349 = zext i32 %3528 to i64
  %add.ptr6350 = getelementptr inbounds %struct.regnode, %struct.regnode* %3524, i64 %idx.ext6349
  store %struct.regnode* %add.ptr6350, %struct.regnode** %scan, align 8
  %3529 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %3530 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u6351 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3530, i32 0, i32 2
  %ifmatch6352 = bitcast %union.anon.19* %u6351 to %struct.anon.25*
  %me6353 = getelementptr inbounds %struct.anon.25, %struct.anon.25* %ifmatch6352, i32 0, i32 3
  %3531 = load %struct.regnode*, %struct.regnode** %me6353, align 8
  %cmp6354 = icmp eq %struct.regnode* %3529, %3531
  br i1 %cmp6354, label %if.then6356, label %if.end6357

if.then6356:                                      ; preds = %if.end6341
  store %struct.regnode* null, %struct.regnode** %scan, align 8
  br label %if.end6357

if.end6357:                                       ; preds = %if.then6356, %if.end6341
  br label %while.cond

sw.bb6358:                                        ; preds = %cond.end45
  %3532 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %3533 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %3534 = bitcast %struct.regnode* %3533 to %struct.regnode_1*
  %arg16359 = getelementptr inbounds %struct.regnode_1, %struct.regnode_1* %3534, i32 0, i32 3
  %3535 = load i32, i32* %arg16359, align 4
  %idx.ext6360 = zext i32 %3535 to i64
  %add.ptr6361 = getelementptr inbounds %struct.regnode, %struct.regnode* %3532, i64 %idx.ext6360
  store %struct.regnode* %add.ptr6361, %struct.regnode** %next, align 8
  %3536 = load %struct.regnode*, %struct.regnode** %next, align 8
  %3537 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %cmp6362 = icmp eq %struct.regnode* %3536, %3537
  br i1 %cmp6362, label %if.then6364, label %if.end6365

if.then6364:                                      ; preds = %sw.bb6358
  store %struct.regnode* null, %struct.regnode** %next, align 8
  br label %if.end6365

if.end6365:                                       ; preds = %if.then6364, %sw.bb6358
  br label %sw.epilog6768

sw.bb6366:                                        ; preds = %cond.end45
  %3538 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend6367 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %3538, i32 0, i32 2
  %3539 = load i8*, i8** %strend6367, align 8
  %3540 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %cutpoint = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %3540, i32 0, i32 6
  store i8* %3539, i8** %cutpoint, align 8
  br label %sw.bb6368

sw.bb6368:                                        ; preds = %cond.end45, %sw.bb6366
  %3541 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %flags6369 = getelementptr inbounds %struct.regnode, %struct.regnode* %3541, i32 0, i32 0
  %3542 = load i8, i8* %flags6369, align 2
  %tobool6370 = icmp ne i8 %3542, 0
  br i1 %tobool6370, label %if.end6377, label %if.then6371

if.then6371:                                      ; preds = %sw.bb6368
  %3543 = load %struct.regexp_internal*, %struct.regexp_internal** %rexi, align 8
  %data6372 = getelementptr inbounds %struct.regexp_internal, %struct.regexp_internal* %3543, i32 0, i32 3
  %3544 = load %struct.reg_data*, %struct.reg_data** %data6372, align 8
  %data6373 = getelementptr inbounds %struct.reg_data, %struct.reg_data* %3544, i32 0, i32 2
  %3545 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %3546 = bitcast %struct.regnode* %3545 to %struct.regnode_1*
  %arg16374 = getelementptr inbounds %struct.regnode_1, %struct.regnode_1* %3546, i32 0, i32 3
  %3547 = load i32, i32* %arg16374, align 4
  %idxprom6375 = zext i32 %3547 to i64
  %arrayidx6376 = getelementptr inbounds [1 x i8*], [1 x i8*]* %data6373, i64 0, i64 %idxprom6375
  %3548 = load i8*, i8** %arrayidx6376, align 8
  %3549 = bitcast i8* %3548 to %struct.sv*
  store %struct.sv* %3549, %struct.sv** %sv_commit, align 8
  store %struct.sv* %3549, %struct.sv** %sv_yes_mark, align 8
  br label %if.end6377

if.end6377:                                       ; preds = %if.then6371, %sw.bb6368
  %3550 = load i8*, i8** %locinput, align 8
  store i8* %3550, i8** %pushinput, align 8
  %3551 = load %struct.regnode*, %struct.regnode** %next, align 8
  store %struct.regnode* %3551, %struct.regnode** %scan, align 8
  %3552 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %resume_state6378 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3552, i32 0, i32 0
  store i32 124, i32* %resume_state6378, align 8
  br label %push_state

sw.bb6379:                                        ; preds = %cond.end45
  store i8 1, i8* %no_final, align 1
  br label %sw.bb6380

sw.bb6380:                                        ; preds = %cond.end45, %sw.bb6379
  br label %no

sw.bb6381:                                        ; preds = %cond.end45
  %3553 = load %struct.regmatch_state*, %struct.regmatch_state** %mark_state, align 8
  %3554 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u6382 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3554, i32 0, i32 2
  %mark6383 = bitcast %union.anon.19* %u6382 to %struct.anon.26*
  %prev_mark = getelementptr inbounds %struct.anon.26, %struct.anon.26* %mark6383, i32 0, i32 1
  store %struct.regmatch_state* %3553, %struct.regmatch_state** %prev_mark, align 8
  %3555 = load %struct.regexp_internal*, %struct.regexp_internal** %rexi, align 8
  %data6384 = getelementptr inbounds %struct.regexp_internal, %struct.regexp_internal* %3555, i32 0, i32 3
  %3556 = load %struct.reg_data*, %struct.reg_data** %data6384, align 8
  %data6385 = getelementptr inbounds %struct.reg_data, %struct.reg_data* %3556, i32 0, i32 2
  %3557 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %3558 = bitcast %struct.regnode* %3557 to %struct.regnode_1*
  %arg16386 = getelementptr inbounds %struct.regnode_1, %struct.regnode_1* %3558, i32 0, i32 3
  %3559 = load i32, i32* %arg16386, align 4
  %idxprom6387 = zext i32 %3559 to i64
  %arrayidx6388 = getelementptr inbounds [1 x i8*], [1 x i8*]* %data6385, i64 0, i64 %idxprom6387
  %3560 = load i8*, i8** %arrayidx6388, align 8
  %3561 = bitcast i8* %3560 to %struct.sv*
  store %struct.sv* %3561, %struct.sv** %sv_yes_mark, align 8
  store %struct.sv* %3561, %struct.sv** %sv_commit, align 8
  %3562 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u6389 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3562, i32 0, i32 2
  %mark6390 = bitcast %union.anon.19* %u6389 to %struct.anon.26*
  %mark_name6391 = getelementptr inbounds %struct.anon.26, %struct.anon.26* %mark6390, i32 0, i32 2
  store %struct.sv* %3561, %struct.sv** %mark_name6391, align 8
  %3563 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  store %struct.regmatch_state* %3563, %struct.regmatch_state** %mark_state, align 8
  %3564 = load i8*, i8** %locinput, align 8
  %3565 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u6392 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3565, i32 0, i32 2
  %mark6393 = bitcast %union.anon.19* %u6392 to %struct.anon.26*
  %mark_loc = getelementptr inbounds %struct.anon.26, %struct.anon.26* %mark6393, i32 0, i32 3
  store i8* %3564, i8** %mark_loc, align 8
  %3566 = load i8*, i8** %locinput, align 8
  store i8* %3566, i8** %pushinput, align 8
  %3567 = load %struct.regnode*, %struct.regnode** %next, align 8
  store %struct.regnode* %3567, %struct.regnode** %scan, align 8
  %3568 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %resume_state6394 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3568, i32 0, i32 0
  store i32 126, i32* %resume_state6394, align 8
  br label %push_yes_state

sw.bb6395:                                        ; preds = %cond.end45
  %3569 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u6396 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3569, i32 0, i32 2
  %mark6397 = bitcast %union.anon.19* %u6396 to %struct.anon.26*
  %prev_mark6398 = getelementptr inbounds %struct.anon.26, %struct.anon.26* %mark6397, i32 0, i32 1
  %3570 = load %struct.regmatch_state*, %struct.regmatch_state** %prev_mark6398, align 8
  store %struct.regmatch_state* %3570, %struct.regmatch_state** %mark_state, align 8
  br label %yes6781

sw.bb6399:                                        ; preds = %cond.end45
  %3571 = load %struct.sv*, %struct.sv** %popmark, align 8
  %tobool6400 = icmp ne %struct.sv* %3571, null
  br i1 %tobool6400, label %land.lhs.true6401, label %if.end6446

land.lhs.true6401:                                ; preds = %sw.bb6399
  %3572 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u6402 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3572, i32 0, i32 2
  %mark6403 = bitcast %union.anon.19* %u6402 to %struct.anon.26*
  %mark_name6404 = getelementptr inbounds %struct.anon.26, %struct.anon.26* %mark6403, i32 0, i32 2
  %3573 = load %struct.sv*, %struct.sv** %mark_name6404, align 8
  %3574 = load %struct.sv*, %struct.sv** %popmark, align 8
  %call6405 = call i32 @Perl_sv_eq_flags(%struct.sv* %3573, %struct.sv* %3574, i32 2)
  %tobool6406 = icmp ne i32 %call6405, 0
  br i1 %tobool6406, label %if.then6407, label %if.end6446

if.then6407:                                      ; preds = %land.lhs.true6401
  %3575 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u6408 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3575, i32 0, i32 2
  %mark6409 = bitcast %union.anon.19* %u6408 to %struct.anon.26*
  %mark_loc6410 = getelementptr inbounds %struct.anon.26, %struct.anon.26* %mark6409, i32 0, i32 3
  %3576 = load i8*, i8** %mark_loc6410, align 8
  %3577 = load i8*, i8** %startpoint, align 8
  %cmp6411 = icmp ugt i8* %3576, %3577
  br i1 %cmp6411, label %if.then6413, label %if.end6442

if.then6413:                                      ; preds = %if.then6407
  %3578 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %is_utf8_target6414 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %3578, i32 0, i32 14
  %3579 = load i8, i8* %is_utf8_target6414, align 2
  %tobool6415 = trunc i8 %3579 to i1
  br i1 %tobool6415, label %cond.true6417, label %cond.false6423

cond.true6417:                                    ; preds = %if.then6413
  %3580 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u6418 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3580, i32 0, i32 2
  %mark6419 = bitcast %union.anon.19* %u6418 to %struct.anon.26*
  %mark_loc6420 = getelementptr inbounds %struct.anon.26, %struct.anon.26* %mark6419, i32 0, i32 3
  %3581 = load i8*, i8** %mark_loc6420, align 8
  %3582 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg6421 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %3582, i32 0, i32 1
  %3583 = load i8*, i8** %strbeg6421, align 8
  %call6422 = call i8* @S_reghopmaybe3(i8* %3581, i64 -1, i8* %3583)
  br label %cond.end6439

cond.false6423:                                   ; preds = %if.then6413
  %3584 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u6424 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3584, i32 0, i32 2
  %mark6425 = bitcast %union.anon.19* %u6424 to %struct.anon.26*
  %mark_loc6426 = getelementptr inbounds %struct.anon.26, %struct.anon.26* %mark6425, i32 0, i32 3
  %3585 = load i8*, i8** %mark_loc6426, align 8
  %add.ptr6427 = getelementptr inbounds i8, i8* %3585, i64 -1
  %3586 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg6428 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %3586, i32 0, i32 1
  %3587 = load i8*, i8** %strbeg6428, align 8
  %cmp6429 = icmp uge i8* %add.ptr6427, %3587
  br i1 %cmp6429, label %cond.true6431, label %cond.false6436

cond.true6431:                                    ; preds = %cond.false6423
  %3588 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u6432 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3588, i32 0, i32 2
  %mark6433 = bitcast %union.anon.19* %u6432 to %struct.anon.26*
  %mark_loc6434 = getelementptr inbounds %struct.anon.26, %struct.anon.26* %mark6433, i32 0, i32 3
  %3589 = load i8*, i8** %mark_loc6434, align 8
  %add.ptr6435 = getelementptr inbounds i8, i8* %3589, i64 -1
  br label %cond.end6437

cond.false6436:                                   ; preds = %cond.false6423
  br label %cond.end6437

cond.end6437:                                     ; preds = %cond.false6436, %cond.true6431
  %cond6438 = phi i8* [ %add.ptr6435, %cond.true6431 ], [ null, %cond.false6436 ]
  br label %cond.end6439

cond.end6439:                                     ; preds = %cond.end6437, %cond.true6417
  %cond6440 = phi i8* [ %call6422, %cond.true6417 ], [ %cond6438, %cond.end6437 ]
  %3590 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %cutpoint6441 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %3590, i32 0, i32 6
  store i8* %cond6440, i8** %cutpoint6441, align 8
  br label %if.end6442

if.end6442:                                       ; preds = %cond.end6439, %if.then6407
  store %struct.sv* null, %struct.sv** %popmark, align 8
  %3591 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u6443 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3591, i32 0, i32 2
  %mark6444 = bitcast %union.anon.19* %u6443 to %struct.anon.26*
  %mark_name6445 = getelementptr inbounds %struct.anon.26, %struct.anon.26* %mark6444, i32 0, i32 2
  %3592 = load %struct.sv*, %struct.sv** %mark_name6445, align 8
  store %struct.sv* %3592, %struct.sv** %sv_commit, align 8
  br label %if.end6446

if.end6446:                                       ; preds = %if.end6442, %land.lhs.true6401, %sw.bb6399
  %3593 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u6447 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3593, i32 0, i32 2
  %mark6448 = bitcast %union.anon.19* %u6447 to %struct.anon.26*
  %prev_mark6449 = getelementptr inbounds %struct.anon.26, %struct.anon.26* %mark6448, i32 0, i32 1
  %3594 = load %struct.regmatch_state*, %struct.regmatch_state** %prev_mark6449, align 8
  store %struct.regmatch_state* %3594, %struct.regmatch_state** %mark_state, align 8
  %3595 = load %struct.regmatch_state*, %struct.regmatch_state** %mark_state, align 8
  %tobool6450 = icmp ne %struct.regmatch_state* %3595, null
  br i1 %tobool6450, label %cond.true6451, label %cond.false6455

cond.true6451:                                    ; preds = %if.end6446
  %3596 = load %struct.regmatch_state*, %struct.regmatch_state** %mark_state, align 8
  %u6452 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3596, i32 0, i32 2
  %mark6453 = bitcast %union.anon.19* %u6452 to %struct.anon.26*
  %mark_name6454 = getelementptr inbounds %struct.anon.26, %struct.anon.26* %mark6453, i32 0, i32 2
  %3597 = load %struct.sv*, %struct.sv** %mark_name6454, align 8
  br label %cond.end6456

cond.false6455:                                   ; preds = %if.end6446
  br label %cond.end6456

cond.end6456:                                     ; preds = %cond.false6455, %cond.true6451
  %cond6457 = phi %struct.sv* [ %3597, %cond.true6451 ], [ null, %cond.false6455 ]
  store %struct.sv* %cond6457, %struct.sv** %sv_yes_mark, align 8
  br label %no

sw.bb6458:                                        ; preds = %cond.end45
  %3598 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %flags6459 = getelementptr inbounds %struct.regnode, %struct.regnode* %3598, i32 0, i32 0
  %3599 = load i8, i8* %flags6459, align 2
  %tobool6460 = icmp ne i8 %3599, 0
  br i1 %tobool6460, label %if.then6461, label %if.else6469

if.then6461:                                      ; preds = %sw.bb6458
  %3600 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u6462 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3600, i32 0, i32 2
  %mark6463 = bitcast %union.anon.19* %u6462 to %struct.anon.26*
  %mark_name6464 = getelementptr inbounds %struct.anon.26, %struct.anon.26* %mark6463, i32 0, i32 2
  store %struct.sv* null, %struct.sv** %mark_name6464, align 8
  %3601 = load i8*, i8** %locinput, align 8
  %3602 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u6465 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3602, i32 0, i32 2
  %mark6466 = bitcast %union.anon.19* %u6465 to %struct.anon.26*
  %mark_loc6467 = getelementptr inbounds %struct.anon.26, %struct.anon.26* %mark6466, i32 0, i32 3
  store i8* %3601, i8** %mark_loc6467, align 8
  %3603 = load i8*, i8** %locinput, align 8
  store i8* %3603, i8** %pushinput, align 8
  %3604 = load %struct.regnode*, %struct.regnode** %next, align 8
  store %struct.regnode* %3604, %struct.regnode** %scan, align 8
  %3605 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %resume_state6468 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3605, i32 0, i32 0
  store i32 128, i32* %resume_state6468, align 8
  br label %push_state

if.else6469:                                      ; preds = %sw.bb6458
  %3606 = load %struct.regmatch_state*, %struct.regmatch_state** %mark_state, align 8
  store %struct.regmatch_state* %3606, %struct.regmatch_state** %cur, align 8
  %3607 = load %struct.regexp_internal*, %struct.regexp_internal** %rexi, align 8
  %data6470 = getelementptr inbounds %struct.regexp_internal, %struct.regexp_internal* %3607, i32 0, i32 3
  %3608 = load %struct.reg_data*, %struct.reg_data** %data6470, align 8
  %data6471 = getelementptr inbounds %struct.reg_data, %struct.reg_data* %3608, i32 0, i32 2
  %3609 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %3610 = bitcast %struct.regnode* %3609 to %struct.regnode_1*
  %arg16472 = getelementptr inbounds %struct.regnode_1, %struct.regnode_1* %3610, i32 0, i32 3
  %3611 = load i32, i32* %arg16472, align 4
  %idxprom6473 = zext i32 %3611 to i64
  %arrayidx6474 = getelementptr inbounds [1 x i8*], [1 x i8*]* %data6471, i64 0, i64 %idxprom6473
  %3612 = load i8*, i8** %arrayidx6474, align 8
  %3613 = bitcast i8* %3612 to %struct.sv*
  store %struct.sv* %3613, %struct.sv** %find, align 8
  br label %while.cond6475

while.cond6475:                                   ; preds = %if.end6488, %if.else6469
  %3614 = load %struct.regmatch_state*, %struct.regmatch_state** %cur, align 8
  %tobool6476 = icmp ne %struct.regmatch_state* %3614, null
  br i1 %tobool6476, label %while.body6477, label %while.end6492

while.body6477:                                   ; preds = %while.cond6475
  %3615 = load %struct.regmatch_state*, %struct.regmatch_state** %cur, align 8
  %u6478 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3615, i32 0, i32 2
  %mark6479 = bitcast %union.anon.19* %u6478 to %struct.anon.26*
  %mark_name6480 = getelementptr inbounds %struct.anon.26, %struct.anon.26* %mark6479, i32 0, i32 2
  %3616 = load %struct.sv*, %struct.sv** %mark_name6480, align 8
  %3617 = load %struct.sv*, %struct.sv** %find, align 8
  %call6481 = call i32 @Perl_sv_eq_flags(%struct.sv* %3616, %struct.sv* %3617, i32 2)
  %tobool6482 = icmp ne i32 %call6481, 0
  br i1 %tobool6482, label %if.then6483, label %if.end6488

if.then6483:                                      ; preds = %while.body6477
  %3618 = load %struct.sv*, %struct.sv** %find, align 8
  %3619 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u6484 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3619, i32 0, i32 2
  %mark6485 = bitcast %union.anon.19* %u6484 to %struct.anon.26*
  %mark_name6486 = getelementptr inbounds %struct.anon.26, %struct.anon.26* %mark6485, i32 0, i32 2
  store %struct.sv* %3618, %struct.sv** %mark_name6486, align 8
  %3620 = load i8*, i8** %locinput, align 8
  store i8* %3620, i8** %pushinput, align 8
  %3621 = load %struct.regnode*, %struct.regnode** %next, align 8
  store %struct.regnode* %3621, %struct.regnode** %scan, align 8
  %3622 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %resume_state6487 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3622, i32 0, i32 0
  store i32 128, i32* %resume_state6487, align 8
  br label %push_state

if.end6488:                                       ; preds = %while.body6477
  %3623 = load %struct.regmatch_state*, %struct.regmatch_state** %cur, align 8
  %u6489 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3623, i32 0, i32 2
  %mark6490 = bitcast %union.anon.19* %u6489 to %struct.anon.26*
  %prev_mark6491 = getelementptr inbounds %struct.anon.26, %struct.anon.26* %mark6490, i32 0, i32 1
  %3624 = load %struct.regmatch_state*, %struct.regmatch_state** %prev_mark6491, align 8
  store %struct.regmatch_state* %3624, %struct.regmatch_state** %cur, align 8
  br label %while.cond6475

while.end6492:                                    ; preds = %while.cond6475
  br label %if.end6493

if.end6493:                                       ; preds = %while.end6492
  br label %sw.epilog6768

sw.bb6494:                                        ; preds = %cond.end45
  %3625 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u6495 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3625, i32 0, i32 2
  %mark6496 = bitcast %union.anon.19* %u6495 to %struct.anon.26*
  %mark_name6497 = getelementptr inbounds %struct.anon.26, %struct.anon.26* %mark6496, i32 0, i32 2
  %3626 = load %struct.sv*, %struct.sv** %mark_name6497, align 8
  %tobool6498 = icmp ne %struct.sv* %3626, null
  br i1 %tobool6498, label %if.then6499, label %if.else6503

if.then6499:                                      ; preds = %sw.bb6494
  %3627 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u6500 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3627, i32 0, i32 2
  %mark6501 = bitcast %union.anon.19* %u6500 to %struct.anon.26*
  %mark_name6502 = getelementptr inbounds %struct.anon.26, %struct.anon.26* %mark6501, i32 0, i32 2
  %3628 = load %struct.sv*, %struct.sv** %mark_name6502, align 8
  store %struct.sv* %3628, %struct.sv** %popmark, align 8
  br label %if.end6545

if.else6503:                                      ; preds = %sw.bb6494
  %3629 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u6504 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3629, i32 0, i32 2
  %mark6505 = bitcast %union.anon.19* %u6504 to %struct.anon.26*
  %mark_loc6506 = getelementptr inbounds %struct.anon.26, %struct.anon.26* %mark6505, i32 0, i32 3
  %3630 = load i8*, i8** %mark_loc6506, align 8
  %3631 = load i8*, i8** %startpoint, align 8
  %cmp6507 = icmp ugt i8* %3630, %3631
  br i1 %cmp6507, label %if.then6509, label %if.end6538

if.then6509:                                      ; preds = %if.else6503
  %3632 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %is_utf8_target6510 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %3632, i32 0, i32 14
  %3633 = load i8, i8* %is_utf8_target6510, align 2
  %tobool6511 = trunc i8 %3633 to i1
  br i1 %tobool6511, label %cond.true6513, label %cond.false6519

cond.true6513:                                    ; preds = %if.then6509
  %3634 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u6514 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3634, i32 0, i32 2
  %mark6515 = bitcast %union.anon.19* %u6514 to %struct.anon.26*
  %mark_loc6516 = getelementptr inbounds %struct.anon.26, %struct.anon.26* %mark6515, i32 0, i32 3
  %3635 = load i8*, i8** %mark_loc6516, align 8
  %3636 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg6517 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %3636, i32 0, i32 1
  %3637 = load i8*, i8** %strbeg6517, align 8
  %call6518 = call i8* @S_reghopmaybe3(i8* %3635, i64 -1, i8* %3637)
  br label %cond.end6535

cond.false6519:                                   ; preds = %if.then6509
  %3638 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u6520 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3638, i32 0, i32 2
  %mark6521 = bitcast %union.anon.19* %u6520 to %struct.anon.26*
  %mark_loc6522 = getelementptr inbounds %struct.anon.26, %struct.anon.26* %mark6521, i32 0, i32 3
  %3639 = load i8*, i8** %mark_loc6522, align 8
  %add.ptr6523 = getelementptr inbounds i8, i8* %3639, i64 -1
  %3640 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg6524 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %3640, i32 0, i32 1
  %3641 = load i8*, i8** %strbeg6524, align 8
  %cmp6525 = icmp uge i8* %add.ptr6523, %3641
  br i1 %cmp6525, label %cond.true6527, label %cond.false6532

cond.true6527:                                    ; preds = %cond.false6519
  %3642 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u6528 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3642, i32 0, i32 2
  %mark6529 = bitcast %union.anon.19* %u6528 to %struct.anon.26*
  %mark_loc6530 = getelementptr inbounds %struct.anon.26, %struct.anon.26* %mark6529, i32 0, i32 3
  %3643 = load i8*, i8** %mark_loc6530, align 8
  %add.ptr6531 = getelementptr inbounds i8, i8* %3643, i64 -1
  br label %cond.end6533

cond.false6532:                                   ; preds = %cond.false6519
  br label %cond.end6533

cond.end6533:                                     ; preds = %cond.false6532, %cond.true6527
  %cond6534 = phi i8* [ %add.ptr6531, %cond.true6527 ], [ null, %cond.false6532 ]
  br label %cond.end6535

cond.end6535:                                     ; preds = %cond.end6533, %cond.true6513
  %cond6536 = phi i8* [ %call6518, %cond.true6513 ], [ %cond6534, %cond.end6533 ]
  %3644 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %cutpoint6537 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %3644, i32 0, i32 6
  store i8* %cond6536, i8** %cutpoint6537, align 8
  br label %if.end6538

if.end6538:                                       ; preds = %cond.end6535, %if.else6503
  %3645 = load %struct.regmatch_state*, %struct.regmatch_state** %mark_state, align 8
  %tobool6539 = icmp ne %struct.regmatch_state* %3645, null
  br i1 %tobool6539, label %if.then6540, label %if.end6544

if.then6540:                                      ; preds = %if.end6538
  %3646 = load %struct.regmatch_state*, %struct.regmatch_state** %mark_state, align 8
  %u6541 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3646, i32 0, i32 2
  %mark6542 = bitcast %union.anon.19* %u6541 to %struct.anon.26*
  %mark_name6543 = getelementptr inbounds %struct.anon.26, %struct.anon.26* %mark6542, i32 0, i32 2
  %3647 = load %struct.sv*, %struct.sv** %mark_name6543, align 8
  store %struct.sv* %3647, %struct.sv** %sv_commit, align 8
  br label %if.end6544

if.end6544:                                       ; preds = %if.then6540, %if.end6538
  br label %if.end6545

if.end6545:                                       ; preds = %if.end6544, %if.then6499
  store i8 1, i8* %no_final, align 1
  br label %no

sw.bb6546:                                        ; preds = %cond.end45
  %3648 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend6547 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %3648, i32 0, i32 2
  %3649 = load i8*, i8** %strend6547, align 8
  %3650 = load i8*, i8** %locinput, align 8
  %sub.ptr.lhs.cast6548 = ptrtoint i8* %3649 to i64
  %sub.ptr.rhs.cast6549 = ptrtoint i8* %3650 to i64
  %sub.ptr.sub6550 = sub i64 %sub.ptr.lhs.cast6548, %sub.ptr.rhs.cast6549
  %cmp6551 = icmp sgt i64 %sub.ptr.sub6550, 2
  br i1 %cmp6551, label %cond.true6553, label %cond.false6621

cond.true6553:                                    ; preds = %sw.bb6546
  %3651 = load i8*, i8** %locinput, align 8
  %arrayidx6554 = getelementptr inbounds i8, i8* %3651, i64 0
  %3652 = load i8, i8* %arrayidx6554, align 1
  %conv6555 = zext i8 %3652 to i32
  %cmp6556 = icmp sle i32 10, %conv6555
  br i1 %cmp6556, label %land.lhs.true6558, label %cond.false6564

land.lhs.true6558:                                ; preds = %cond.true6553
  %3653 = load i8*, i8** %locinput, align 8
  %arrayidx6559 = getelementptr inbounds i8, i8* %3653, i64 0
  %3654 = load i8, i8* %arrayidx6559, align 1
  %conv6560 = zext i8 %3654 to i32
  %cmp6561 = icmp sle i32 %conv6560, 12
  br i1 %cmp6561, label %cond.true6563, label %cond.false6564

cond.true6563:                                    ; preds = %land.lhs.true6558
  br label %cond.end6619

cond.false6564:                                   ; preds = %land.lhs.true6558, %cond.true6553
  %3655 = load i8*, i8** %locinput, align 8
  %arrayidx6565 = getelementptr inbounds i8, i8* %3655, i64 0
  %3656 = load i8, i8* %arrayidx6565, align 1
  %conv6566 = zext i8 %3656 to i32
  %cmp6567 = icmp eq i32 13, %conv6566
  br i1 %cmp6567, label %cond.true6569, label %cond.false6575

cond.true6569:                                    ; preds = %cond.false6564
  %3657 = load i8*, i8** %locinput, align 8
  %arrayidx6570 = getelementptr inbounds i8, i8* %3657, i64 1
  %3658 = load i8, i8* %arrayidx6570, align 1
  %conv6571 = zext i8 %3658 to i32
  %cmp6572 = icmp eq i32 10, %conv6571
  %3659 = zext i1 %cmp6572 to i64
  %cond6574 = select i1 %cmp6572, i32 2, i32 1
  br label %cond.end6617

cond.false6575:                                   ; preds = %cond.false6564
  %3660 = load i8, i8* %utf8_target, align 1
  %tobool6576 = trunc i8 %3660 to i1
  br i1 %tobool6576, label %cond.true6578, label %cond.false6610

cond.true6578:                                    ; preds = %cond.false6575
  %3661 = load i8*, i8** %locinput, align 8
  %arrayidx6579 = getelementptr inbounds i8, i8* %3661, i64 0
  %3662 = load i8, i8* %arrayidx6579, align 1
  %conv6580 = zext i8 %3662 to i32
  %cmp6581 = icmp eq i32 194, %conv6580
  br i1 %cmp6581, label %cond.true6583, label %cond.false6589

cond.true6583:                                    ; preds = %cond.true6578
  %3663 = load i8*, i8** %locinput, align 8
  %arrayidx6584 = getelementptr inbounds i8, i8* %3663, i64 1
  %3664 = load i8, i8* %arrayidx6584, align 1
  %conv6585 = zext i8 %3664 to i32
  %cmp6586 = icmp eq i32 133, %conv6585
  %3665 = zext i1 %cmp6586 to i64
  %cond6588 = select i1 %cmp6586, i32 2, i32 0
  br label %cond.end6608

cond.false6589:                                   ; preds = %cond.true6578
  %3666 = load i8*, i8** %locinput, align 8
  %arrayidx6590 = getelementptr inbounds i8, i8* %3666, i64 0
  %3667 = load i8, i8* %arrayidx6590, align 1
  %conv6591 = zext i8 %3667 to i32
  %cmp6592 = icmp eq i32 226, %conv6591
  br i1 %cmp6592, label %land.lhs.true6594, label %land.end6605

land.lhs.true6594:                                ; preds = %cond.false6589
  %3668 = load i8*, i8** %locinput, align 8
  %arrayidx6595 = getelementptr inbounds i8, i8* %3668, i64 1
  %3669 = load i8, i8* %arrayidx6595, align 1
  %conv6596 = zext i8 %3669 to i32
  %cmp6597 = icmp eq i32 128, %conv6596
  br i1 %cmp6597, label %land.rhs6599, label %land.end6605

land.rhs6599:                                     ; preds = %land.lhs.true6594
  %3670 = load i8*, i8** %locinput, align 8
  %arrayidx6600 = getelementptr inbounds i8, i8* %3670, i64 2
  %3671 = load i8, i8* %arrayidx6600, align 1
  %conv6601 = zext i8 %3671 to i32
  %and6602 = and i32 %conv6601, 254
  %cmp6603 = icmp eq i32 %and6602, 168
  br label %land.end6605

land.end6605:                                     ; preds = %land.rhs6599, %land.lhs.true6594, %cond.false6589
  %3672 = phi i1 [ false, %land.lhs.true6594 ], [ false, %cond.false6589 ], [ %cmp6603, %land.rhs6599 ]
  %3673 = zext i1 %3672 to i64
  %cond6607 = select i1 %3672, i32 3, i32 0
  br label %cond.end6608

cond.end6608:                                     ; preds = %land.end6605, %cond.true6583
  %cond6609 = phi i32 [ %cond6588, %cond.true6583 ], [ %cond6607, %land.end6605 ]
  br label %cond.end6615

cond.false6610:                                   ; preds = %cond.false6575
  %3674 = load i8*, i8** %locinput, align 8
  %arrayidx6611 = getelementptr inbounds i8, i8* %3674, i64 0
  %3675 = load i8, i8* %arrayidx6611, align 1
  %conv6612 = zext i8 %3675 to i32
  %cmp6613 = icmp eq i32 133, %conv6612
  %conv6614 = zext i1 %cmp6613 to i32
  br label %cond.end6615

cond.end6615:                                     ; preds = %cond.false6610, %cond.end6608
  %cond6616 = phi i32 [ %cond6609, %cond.end6608 ], [ %conv6614, %cond.false6610 ]
  br label %cond.end6617

cond.end6617:                                     ; preds = %cond.end6615, %cond.true6569
  %cond6618 = phi i32 [ %cond6574, %cond.true6569 ], [ %cond6616, %cond.end6615 ]
  br label %cond.end6619

cond.end6619:                                     ; preds = %cond.end6617, %cond.true6563
  %cond6620 = phi i32 [ 1, %cond.true6563 ], [ %cond6618, %cond.end6617 ]
  br label %cond.end6712

cond.false6621:                                   ; preds = %sw.bb6546
  %3676 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend6622 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %3676, i32 0, i32 2
  %3677 = load i8*, i8** %strend6622, align 8
  %3678 = load i8*, i8** %locinput, align 8
  %sub.ptr.lhs.cast6623 = ptrtoint i8* %3677 to i64
  %sub.ptr.rhs.cast6624 = ptrtoint i8* %3678 to i64
  %sub.ptr.sub6625 = sub i64 %sub.ptr.lhs.cast6623, %sub.ptr.rhs.cast6624
  %cmp6626 = icmp sgt i64 %sub.ptr.sub6625, 1
  br i1 %cmp6626, label %cond.true6628, label %cond.false6677

cond.true6628:                                    ; preds = %cond.false6621
  %3679 = load i8*, i8** %locinput, align 8
  %arrayidx6629 = getelementptr inbounds i8, i8* %3679, i64 0
  %3680 = load i8, i8* %arrayidx6629, align 1
  %conv6630 = zext i8 %3680 to i32
  %cmp6631 = icmp sle i32 10, %conv6630
  br i1 %cmp6631, label %land.lhs.true6633, label %cond.false6639

land.lhs.true6633:                                ; preds = %cond.true6628
  %3681 = load i8*, i8** %locinput, align 8
  %arrayidx6634 = getelementptr inbounds i8, i8* %3681, i64 0
  %3682 = load i8, i8* %arrayidx6634, align 1
  %conv6635 = zext i8 %3682 to i32
  %cmp6636 = icmp sle i32 %conv6635, 12
  br i1 %cmp6636, label %cond.true6638, label %cond.false6639

cond.true6638:                                    ; preds = %land.lhs.true6633
  br label %cond.end6675

cond.false6639:                                   ; preds = %land.lhs.true6633, %cond.true6628
  %3683 = load i8*, i8** %locinput, align 8
  %arrayidx6640 = getelementptr inbounds i8, i8* %3683, i64 0
  %3684 = load i8, i8* %arrayidx6640, align 1
  %conv6641 = zext i8 %3684 to i32
  %cmp6642 = icmp eq i32 13, %conv6641
  br i1 %cmp6642, label %cond.true6644, label %cond.false6650

cond.true6644:                                    ; preds = %cond.false6639
  %3685 = load i8*, i8** %locinput, align 8
  %arrayidx6645 = getelementptr inbounds i8, i8* %3685, i64 1
  %3686 = load i8, i8* %arrayidx6645, align 1
  %conv6646 = zext i8 %3686 to i32
  %cmp6647 = icmp eq i32 10, %conv6646
  %3687 = zext i1 %cmp6647 to i64
  %cond6649 = select i1 %cmp6647, i32 2, i32 1
  br label %cond.end6673

cond.false6650:                                   ; preds = %cond.false6639
  %3688 = load i8, i8* %utf8_target, align 1
  %tobool6651 = trunc i8 %3688 to i1
  br i1 %tobool6651, label %cond.true6653, label %cond.false6666

cond.true6653:                                    ; preds = %cond.false6650
  %3689 = load i8*, i8** %locinput, align 8
  %arrayidx6654 = getelementptr inbounds i8, i8* %3689, i64 0
  %3690 = load i8, i8* %arrayidx6654, align 1
  %conv6655 = zext i8 %3690 to i32
  %cmp6656 = icmp eq i32 194, %conv6655
  br i1 %cmp6656, label %land.rhs6658, label %land.end6663

land.rhs6658:                                     ; preds = %cond.true6653
  %3691 = load i8*, i8** %locinput, align 8
  %arrayidx6659 = getelementptr inbounds i8, i8* %3691, i64 1
  %3692 = load i8, i8* %arrayidx6659, align 1
  %conv6660 = zext i8 %3692 to i32
  %cmp6661 = icmp eq i32 133, %conv6660
  br label %land.end6663

land.end6663:                                     ; preds = %land.rhs6658, %cond.true6653
  %3693 = phi i1 [ false, %cond.true6653 ], [ %cmp6661, %land.rhs6658 ]
  %3694 = zext i1 %3693 to i64
  %cond6665 = select i1 %3693, i32 2, i32 0
  br label %cond.end6671

cond.false6666:                                   ; preds = %cond.false6650
  %3695 = load i8*, i8** %locinput, align 8
  %arrayidx6667 = getelementptr inbounds i8, i8* %3695, i64 0
  %3696 = load i8, i8* %arrayidx6667, align 1
  %conv6668 = zext i8 %3696 to i32
  %cmp6669 = icmp eq i32 133, %conv6668
  %conv6670 = zext i1 %cmp6669 to i32
  br label %cond.end6671

cond.end6671:                                     ; preds = %cond.false6666, %land.end6663
  %cond6672 = phi i32 [ %cond6665, %land.end6663 ], [ %conv6670, %cond.false6666 ]
  br label %cond.end6673

cond.end6673:                                     ; preds = %cond.end6671, %cond.true6644
  %cond6674 = phi i32 [ %cond6649, %cond.true6644 ], [ %cond6672, %cond.end6671 ]
  br label %cond.end6675

cond.end6675:                                     ; preds = %cond.end6673, %cond.true6638
  %cond6676 = phi i32 [ 1, %cond.true6638 ], [ %cond6674, %cond.end6673 ]
  br label %cond.end6710

cond.false6677:                                   ; preds = %cond.false6621
  %3697 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend6678 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %3697, i32 0, i32 2
  %3698 = load i8*, i8** %strend6678, align 8
  %3699 = load i8*, i8** %locinput, align 8
  %sub.ptr.lhs.cast6679 = ptrtoint i8* %3698 to i64
  %sub.ptr.rhs.cast6680 = ptrtoint i8* %3699 to i64
  %sub.ptr.sub6681 = sub i64 %sub.ptr.lhs.cast6679, %sub.ptr.rhs.cast6680
  %cmp6682 = icmp sgt i64 %sub.ptr.sub6681, 0
  br i1 %cmp6682, label %cond.true6684, label %cond.false6707

cond.true6684:                                    ; preds = %cond.false6677
  %3700 = load i8*, i8** %locinput, align 8
  %arrayidx6685 = getelementptr inbounds i8, i8* %3700, i64 0
  %3701 = load i8, i8* %arrayidx6685, align 1
  %conv6686 = zext i8 %3701 to i32
  %cmp6687 = icmp sle i32 10, %conv6686
  br i1 %cmp6687, label %land.lhs.true6689, label %cond.false6695

land.lhs.true6689:                                ; preds = %cond.true6684
  %3702 = load i8*, i8** %locinput, align 8
  %arrayidx6690 = getelementptr inbounds i8, i8* %3702, i64 0
  %3703 = load i8, i8* %arrayidx6690, align 1
  %conv6691 = zext i8 %3703 to i32
  %cmp6692 = icmp sle i32 %conv6691, 13
  br i1 %cmp6692, label %cond.true6694, label %cond.false6695

cond.true6694:                                    ; preds = %land.lhs.true6689
  br label %cond.end6705

cond.false6695:                                   ; preds = %land.lhs.true6689, %cond.true6684
  %3704 = load i8, i8* %utf8_target, align 1
  %tobool6696 = trunc i8 %3704 to i1
  br i1 %tobool6696, label %cond.false6702, label %cond.true6697

cond.true6697:                                    ; preds = %cond.false6695
  %3705 = load i8*, i8** %locinput, align 8
  %arrayidx6698 = getelementptr inbounds i8, i8* %3705, i64 0
  %3706 = load i8, i8* %arrayidx6698, align 1
  %conv6699 = zext i8 %3706 to i32
  %cmp6700 = icmp eq i32 133, %conv6699
  %conv6701 = zext i1 %cmp6700 to i32
  br label %cond.end6703

cond.false6702:                                   ; preds = %cond.false6695
  br label %cond.end6703

cond.end6703:                                     ; preds = %cond.false6702, %cond.true6697
  %cond6704 = phi i32 [ %conv6701, %cond.true6697 ], [ 0, %cond.false6702 ]
  br label %cond.end6705

cond.end6705:                                     ; preds = %cond.end6703, %cond.true6694
  %cond6706 = phi i32 [ 1, %cond.true6694 ], [ %cond6704, %cond.end6703 ]
  br label %cond.end6708

cond.false6707:                                   ; preds = %cond.false6677
  br label %cond.end6708

cond.end6708:                                     ; preds = %cond.false6707, %cond.end6705
  %cond6709 = phi i32 [ %cond6706, %cond.end6705 ], [ 0, %cond.false6707 ]
  br label %cond.end6710

cond.end6710:                                     ; preds = %cond.end6708, %cond.end6675
  %cond6711 = phi i32 [ %cond6676, %cond.end6675 ], [ %cond6709, %cond.end6708 ]
  br label %cond.end6712

cond.end6712:                                     ; preds = %cond.end6710, %cond.end6619
  %cond6713 = phi i32 [ %cond6620, %cond.end6619 ], [ %cond6711, %cond.end6710 ]
  store i32 %cond6713, i32* %n, align 4
  %tobool6714 = icmp ne i32 %cond6713, 0
  br i1 %tobool6714, label %if.then6715, label %if.else6718

if.then6715:                                      ; preds = %cond.end6712
  %3707 = load i32, i32* %n, align 4
  %3708 = load i8*, i8** %locinput, align 8
  %idx.ext6716 = zext i32 %3707 to i64
  %add.ptr6717 = getelementptr inbounds i8, i8* %3708, i64 %idx.ext6716
  store i8* %add.ptr6717, i8** %locinput, align 8
  br label %if.end6719

if.else6718:                                      ; preds = %cond.end6712
  br label %no

if.end6719:                                       ; preds = %if.then6715
  br label %sw.epilog6768

sw.default6720:                                   ; preds = %cond.end45
  %3709 = load %struct.gv*, %struct.gv** @PL_stderrgv, align 8
  %tobool6721 = icmp ne %struct.gv* %3709, null
  br i1 %tobool6721, label %land.lhs.true6722, label %cond.false6746

land.lhs.true6722:                                ; preds = %sw.default6720
  %3710 = load %struct.gv*, %struct.gv** @PL_stderrgv, align 8
  %sv_flags6723 = getelementptr inbounds %struct.gv, %struct.gv* %3710, i32 0, i32 2
  %3711 = load i32, i32* %sv_flags6723, align 4
  %and6724 = and i32 %3711, 255
  %cmp6725 = icmp eq i32 %and6724, 9
  br i1 %cmp6725, label %land.lhs.true6727, label %cond.false6746

land.lhs.true6727:                                ; preds = %land.lhs.true6722
  %3712 = load %struct.gv*, %struct.gv** @PL_stderrgv, align 8
  %sv_u6728 = getelementptr inbounds %struct.gv, %struct.gv* %3712, i32 0, i32 3
  %svu_gp6729 = bitcast %union.anon.4* %sv_u6728 to %struct.gp**
  %3713 = load %struct.gp*, %struct.gp** %svu_gp6729, align 8
  %add.ptr6730 = getelementptr inbounds %struct.gp, %struct.gp* %3713, i64 0
  %gp_io = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr6730, i32 0, i32 1
  %3714 = load %struct.io*, %struct.io** %gp_io, align 8
  %tobool6731 = icmp ne %struct.io* %3714, null
  br i1 %tobool6731, label %land.lhs.true6732, label %cond.false6746

land.lhs.true6732:                                ; preds = %land.lhs.true6727
  %3715 = load %struct.gv*, %struct.gv** @PL_stderrgv, align 8
  %sv_u6733 = getelementptr inbounds %struct.gv, %struct.gv* %3715, i32 0, i32 3
  %svu_gp6734 = bitcast %union.anon.4* %sv_u6733 to %struct.gp**
  %3716 = load %struct.gp*, %struct.gp** %svu_gp6734, align 8
  %add.ptr6735 = getelementptr inbounds %struct.gp, %struct.gp* %3716, i64 0
  %gp_io6736 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr6735, i32 0, i32 1
  %3717 = load %struct.io*, %struct.io** %gp_io6736, align 8
  %sv_any6737 = getelementptr inbounds %struct.io, %struct.io* %3717, i32 0, i32 0
  %3718 = load %struct.xpvio*, %struct.xpvio** %sv_any6737, align 8
  %xio_ofp = getelementptr inbounds %struct.xpvio, %struct.xpvio* %3718, i32 0, i32 5
  %3719 = load %struct._PerlIO**, %struct._PerlIO*** %xio_ofp, align 8
  %tobool6738 = icmp ne %struct._PerlIO** %3719, null
  br i1 %tobool6738, label %cond.true6739, label %cond.false6746

cond.true6739:                                    ; preds = %land.lhs.true6732
  %3720 = load %struct.gv*, %struct.gv** @PL_stderrgv, align 8
  %sv_u6740 = getelementptr inbounds %struct.gv, %struct.gv* %3720, i32 0, i32 3
  %svu_gp6741 = bitcast %union.anon.4* %sv_u6740 to %struct.gp**
  %3721 = load %struct.gp*, %struct.gp** %svu_gp6741, align 8
  %add.ptr6742 = getelementptr inbounds %struct.gp, %struct.gp* %3721, i64 0
  %gp_io6743 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr6742, i32 0, i32 1
  %3722 = load %struct.io*, %struct.io** %gp_io6743, align 8
  %sv_any6744 = getelementptr inbounds %struct.io, %struct.io* %3722, i32 0, i32 0
  %3723 = load %struct.xpvio*, %struct.xpvio** %sv_any6744, align 8
  %xio_ofp6745 = getelementptr inbounds %struct.xpvio, %struct.xpvio* %3723, i32 0, i32 5
  %3724 = load %struct._PerlIO**, %struct._PerlIO*** %xio_ofp6745, align 8
  br label %cond.end6748

cond.false6746:                                   ; preds = %land.lhs.true6732, %land.lhs.true6727, %land.lhs.true6722, %sw.default6720
  %call6747 = call %struct._PerlIO** @Perl_PerlIO_stderr()
  br label %cond.end6748

cond.end6748:                                     ; preds = %cond.false6746, %cond.true6739
  %cond6749 = phi %struct._PerlIO** [ %3724, %cond.true6739 ], [ %call6747, %cond.false6746 ]
  %3725 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %3726 = ptrtoint %struct.regnode* %3725 to i64
  %3727 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %type6750 = getelementptr inbounds %struct.regnode, %struct.regnode* %3727, i32 0, i32 1
  %3728 = load i8, i8* %type6750, align 1
  %conv6751 = zext i8 %3728 to i32
  %call6752 = call i32 (%struct._PerlIO**, i8*, ...) @PerlIO_printf(%struct._PerlIO** %cond6749, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.15, i64 0, i64 0), i64 %3726, i32 %conv6751)
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.16, i64 0, i64 0))
  br label %increment_locinput

increment_locinput:                               ; preds = %cond.end6748, %if.then1823, %if.end128, %if.end115
  %3729 = load i8, i8* %utf8_target, align 1
  %tobool6753 = trunc i8 %3729 to i1
  br i1 %tobool6753, label %if.then6754, label %if.else6765

if.then6754:                                      ; preds = %increment_locinput
  %3730 = load i32, i32* %nextchr, align 4
  %idxprom6755 = sext i32 %3730 to i64
  %arrayidx6756 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom6755
  %3731 = load i8, i8* %arrayidx6756, align 1
  %conv6757 = zext i8 %3731 to i32
  %3732 = load i8*, i8** %locinput, align 8
  %idx.ext6758 = sext i32 %conv6757 to i64
  %add.ptr6759 = getelementptr inbounds i8, i8* %3732, i64 %idx.ext6758
  store i8* %add.ptr6759, i8** %locinput, align 8
  %3733 = load i8*, i8** %locinput, align 8
  %3734 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend6760 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %3734, i32 0, i32 2
  %3735 = load i8*, i8** %strend6760, align 8
  %cmp6761 = icmp ugt i8* %3733, %3735
  br i1 %cmp6761, label %if.then6763, label %if.end6764

if.then6763:                                      ; preds = %if.then6754
  br label %no

if.end6764:                                       ; preds = %if.then6754
  br label %if.end6767

if.else6765:                                      ; preds = %increment_locinput
  %3736 = load i8*, i8** %locinput, align 8
  %incdec.ptr6766 = getelementptr inbounds i8, i8* %3736, i32 1
  store i8* %incdec.ptr6766, i8** %locinput, align 8
  br label %if.end6767

if.end6767:                                       ; preds = %if.else6765, %if.end6764
  br label %sw.epilog6768

sw.epilog6768:                                    ; preds = %if.end6767, %if.end6719, %if.end6493, %if.end6365, %if.end6288, %sw.bb4029, %sw.bb3450, %if.end3449, %sw.bb3429, %land.end3426, %sw.bb3406, %land.end3401, %if.end3323, %if.end3289, %if.then3080, %sw.bb2411, %sw.bb2410, %if.end2408, %if.end2362, %if.then2331, %if.end2292, %if.end2230, %if.end1853, %if.end1804, %if.end1758, %if.end1713, %if.end1321, %if.end1257, %if.end970, %if.end938, %if.end897, %if.then248, %if.end120, %if.end110, %if.end105, %if.end89, %if.then65, %if.then60, %if.then49
  %3737 = load %struct.regnode*, %struct.regnode** %next, align 8
  store %struct.regnode* %3737, %struct.regnode** %scan, align 8
  br label %while.cond

push_yes_state:                                   ; preds = %sw.bb6381, %do_ifmatch, %if.end6204, %curlym_do_A, %if.then3947, %if.end3822, %if.then3673, %if.end3471, %if.end3174
  %3738 = load %struct.regmatch_state*, %struct.regmatch_state** %yes_state, align 8
  %3739 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u6769 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3739, i32 0, i32 2
  %yes = bitcast %union.anon.19* %u6769 to %struct.anon.20*
  %prev_yes_state = getelementptr inbounds %struct.anon.20, %struct.anon.20* %yes, i32 0, i32 0
  store %struct.regmatch_state* %3738, %struct.regmatch_state** %prev_yes_state, align 8
  %3740 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  store %struct.regmatch_state* %3740, %struct.regmatch_state** %yes_state, align 8
  br label %push_state

push_state:                                       ; preds = %push_yes_state, %if.then6483, %if.then6461, %if.end6377, %if.end6090, %if.end5919, %if.end5750, %if.end4716, %cond.end3962, %if.else3949, %if.end3900, %if.then3702, %if.then3549, %if.then768, %sw.bb67
  %3741 = load i32, i32* %depth, align 4
  %inc6770 = add nsw i32 %3741, 1
  store i32 %inc6770, i32* %depth, align 4
  %3742 = load i8*, i8** %locinput, align 8
  %3743 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %locinput6771 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3743, i32 0, i32 1
  store i8* %3742, i8** %locinput6771, align 8
  %3744 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %add.ptr6772 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3744, i64 1
  store %struct.regmatch_state* %add.ptr6772, %struct.regmatch_state** %newst, align 8
  %3745 = load %struct.regmatch_state*, %struct.regmatch_state** %newst, align 8
  %3746 = load %struct.regmatch_slab*, %struct.regmatch_slab** @PL_regmatch_slab, align 8
  %states6773 = getelementptr inbounds %struct.regmatch_slab, %struct.regmatch_slab* %3746, i32 0, i32 0
  %arrayidx6774 = getelementptr inbounds [33 x %struct.regmatch_state], [33 x %struct.regmatch_state]* %states6773, i64 0, i64 32
  %cmp6775 = icmp ugt %struct.regmatch_state* %3745, %arrayidx6774
  br i1 %cmp6775, label %if.then6777, label %if.end6779

if.then6777:                                      ; preds = %push_state
  %call6778 = call %struct.regmatch_state* @S_push_slab()
  store %struct.regmatch_state* %call6778, %struct.regmatch_state** %newst, align 8
  br label %if.end6779

if.end6779:                                       ; preds = %if.then6777, %push_state
  %3747 = load %struct.regmatch_state*, %struct.regmatch_state** %newst, align 8
  store %struct.regmatch_state* %3747, %struct.regmatch_state** @PL_regmatch_state, align 8
  %3748 = load i8*, i8** %pushinput, align 8
  store i8* %3748, i8** %locinput, align 8
  %3749 = load %struct.regmatch_state*, %struct.regmatch_state** %newst, align 8
  store %struct.regmatch_state* %3749, %struct.regmatch_state** %st, align 8
  br label %while.cond

while.end6780:                                    ; preds = %while.cond
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.17, i64 0, i64 0))
  br label %no

yes6781:                                          ; preds = %if.then6849, %sw.bb6395, %sw.bb6217, %if.end6216, %sw.bb3976, %sw.bb3718, %sw.bb3497, %if.end3232
  %3750 = load %struct.regmatch_state*, %struct.regmatch_state** %yes_state, align 8
  %tobool6782 = icmp ne %struct.regmatch_state* %3750, null
  br i1 %tobool6782, label %if.then6783, label %if.end6829

if.then6783:                                      ; preds = %yes6781
  br label %while.cond6784

while.cond6784:                                   ; preds = %while.body6796, %if.then6783
  %3751 = load %struct.regmatch_state*, %struct.regmatch_state** %yes_state, align 8
  %3752 = load %struct.regmatch_slab*, %struct.regmatch_slab** @PL_regmatch_slab, align 8
  %states6785 = getelementptr inbounds %struct.regmatch_slab, %struct.regmatch_slab* %3752, i32 0, i32 0
  %arrayidx6786 = getelementptr inbounds [33 x %struct.regmatch_state], [33 x %struct.regmatch_state]* %states6785, i64 0, i64 0
  %cmp6787 = icmp ult %struct.regmatch_state* %3751, %arrayidx6786
  br i1 %cmp6787, label %lor.end6794, label %lor.rhs6789

lor.rhs6789:                                      ; preds = %while.cond6784
  %3753 = load %struct.regmatch_state*, %struct.regmatch_state** %yes_state, align 8
  %3754 = load %struct.regmatch_slab*, %struct.regmatch_slab** @PL_regmatch_slab, align 8
  %states6790 = getelementptr inbounds %struct.regmatch_slab, %struct.regmatch_slab* %3754, i32 0, i32 0
  %arrayidx6791 = getelementptr inbounds [33 x %struct.regmatch_state], [33 x %struct.regmatch_state]* %states6790, i64 0, i64 32
  %cmp6792 = icmp ugt %struct.regmatch_state* %3753, %arrayidx6791
  br label %lor.end6794

lor.end6794:                                      ; preds = %lor.rhs6789, %while.cond6784
  %3755 = phi i1 [ true, %while.cond6784 ], [ %cmp6792, %lor.rhs6789 ]
  br i1 %3755, label %while.body6796, label %while.end6810

while.body6796:                                   ; preds = %lor.end6794
  %3756 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %3757 = load %struct.regmatch_slab*, %struct.regmatch_slab** @PL_regmatch_slab, align 8
  %states6797 = getelementptr inbounds %struct.regmatch_slab, %struct.regmatch_slab* %3757, i32 0, i32 0
  %arrayidx6798 = getelementptr inbounds [33 x %struct.regmatch_state], [33 x %struct.regmatch_state]* %states6797, i64 0, i64 0
  %sub.ptr.lhs.cast6799 = ptrtoint %struct.regmatch_state* %3756 to i64
  %sub.ptr.rhs.cast6800 = ptrtoint %struct.regmatch_state* %arrayidx6798 to i64
  %sub.ptr.sub6801 = sub i64 %sub.ptr.lhs.cast6799, %sub.ptr.rhs.cast6800
  %sub.ptr.div6802 = sdiv exact i64 %sub.ptr.sub6801, 120
  %add6803 = add nsw i64 %sub.ptr.div6802, 1
  %3758 = load i32, i32* %depth, align 4
  %conv6804 = sext i32 %3758 to i64
  %sub6805 = sub nsw i64 %conv6804, %add6803
  %conv6806 = trunc i64 %sub6805 to i32
  store i32 %conv6806, i32* %depth, align 4
  %3759 = load %struct.regmatch_slab*, %struct.regmatch_slab** @PL_regmatch_slab, align 8
  %prev6807 = getelementptr inbounds %struct.regmatch_slab, %struct.regmatch_slab* %3759, i32 0, i32 1
  %3760 = load %struct.regmatch_slab*, %struct.regmatch_slab** %prev6807, align 8
  store %struct.regmatch_slab* %3760, %struct.regmatch_slab** @PL_regmatch_slab, align 8
  %3761 = load %struct.regmatch_slab*, %struct.regmatch_slab** @PL_regmatch_slab, align 8
  %states6808 = getelementptr inbounds %struct.regmatch_slab, %struct.regmatch_slab* %3761, i32 0, i32 0
  %arrayidx6809 = getelementptr inbounds [33 x %struct.regmatch_state], [33 x %struct.regmatch_state]* %states6808, i64 0, i64 32
  store %struct.regmatch_state* %arrayidx6809, %struct.regmatch_state** %st, align 8
  br label %while.cond6784

while.end6810:                                    ; preds = %lor.end6794
  %3762 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %3763 = load %struct.regmatch_state*, %struct.regmatch_state** %yes_state, align 8
  %sub.ptr.lhs.cast6811 = ptrtoint %struct.regmatch_state* %3762 to i64
  %sub.ptr.rhs.cast6812 = ptrtoint %struct.regmatch_state* %3763 to i64
  %sub.ptr.sub6813 = sub i64 %sub.ptr.lhs.cast6811, %sub.ptr.rhs.cast6812
  %sub.ptr.div6814 = sdiv exact i64 %sub.ptr.sub6813, 120
  %3764 = load i32, i32* %depth, align 4
  %conv6815 = sext i32 %3764 to i64
  %sub6816 = sub nsw i64 %conv6815, %sub.ptr.div6814
  %conv6817 = trunc i64 %sub6816 to i32
  store i32 %conv6817, i32* %depth, align 4
  %3765 = load %struct.regmatch_state*, %struct.regmatch_state** %yes_state, align 8
  store %struct.regmatch_state* %3765, %struct.regmatch_state** %st, align 8
  %3766 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u6818 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3766, i32 0, i32 2
  %yes6819 = bitcast %union.anon.19* %u6818 to %struct.anon.20*
  %prev_yes_state6820 = getelementptr inbounds %struct.anon.20, %struct.anon.20* %yes6819, i32 0, i32 0
  %3767 = load %struct.regmatch_state*, %struct.regmatch_state** %prev_yes_state6820, align 8
  store %struct.regmatch_state* %3767, %struct.regmatch_state** %yes_state, align 8
  %3768 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  store %struct.regmatch_state* %3768, %struct.regmatch_state** @PL_regmatch_state, align 8
  %3769 = load i8, i8* %no_final, align 1
  %tobool6821 = trunc i8 %3769 to i1
  br i1 %tobool6821, label %if.then6822, label %if.end6824

if.then6822:                                      ; preds = %while.end6810
  %3770 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %locinput6823 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3770, i32 0, i32 1
  %3771 = load i8*, i8** %locinput6823, align 8
  store i8* %3771, i8** %locinput, align 8
  br label %if.end6824

if.end6824:                                       ; preds = %if.then6822, %while.end6810
  %3772 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %resume_state6825 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3772, i32 0, i32 0
  %3773 = load i32, i32* %resume_state6825, align 8
  %3774 = load i8, i8* %no_final, align 1
  %tobool6826 = trunc i8 %3774 to i1
  %conv6827 = zext i1 %tobool6826 to i32
  %add6828 = add nsw i32 %3773, %conv6827
  store i32 %add6828, i32* %state_num, align 4
  br label %reenter_switch

if.end6829:                                       ; preds = %yes6781
  %3775 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %info_aux_eval6830 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %3775, i32 0, i32 8
  %3776 = load %struct.regmatch_info_aux_eval*, %struct.regmatch_info_aux_eval** %info_aux_eval6830, align 8
  %tobool6831 = icmp ne %struct.regmatch_info_aux_eval* %3776, null
  br i1 %tobool6831, label %if.then6832, label %if.end6845

if.then6832:                                      ; preds = %if.end6829
  %3777 = load %struct.sv*, %struct.sv** %oreplsv, align 8
  %3778 = load %struct.gv*, %struct.gv** @PL_replgv, align 8
  %sv_u6833 = getelementptr inbounds %struct.gv, %struct.gv* %3778, i32 0, i32 3
  %svu_gp6834 = bitcast %union.anon.4* %sv_u6833 to %struct.gp**
  %3779 = load %struct.gp*, %struct.gp** %svu_gp6834, align 8
  %add.ptr6835 = getelementptr inbounds %struct.gp, %struct.gp* %3779, i64 0
  %gp_sv6836 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr6835, i32 0, i32 0
  %3780 = load %struct.sv*, %struct.sv** %gp_sv6836, align 8
  %cmp6837 = icmp ne %struct.sv* %3777, %3780
  br i1 %cmp6837, label %if.then6839, label %if.end6844

if.then6839:                                      ; preds = %if.then6832
  %3781 = load %struct.sv*, %struct.sv** %oreplsv, align 8
  %3782 = load %struct.gv*, %struct.gv** @PL_replgv, align 8
  %sv_u6840 = getelementptr inbounds %struct.gv, %struct.gv* %3782, i32 0, i32 3
  %svu_gp6841 = bitcast %union.anon.4* %sv_u6840 to %struct.gp**
  %3783 = load %struct.gp*, %struct.gp** %svu_gp6841, align 8
  %add.ptr6842 = getelementptr inbounds %struct.gp, %struct.gp* %3783, i64 0
  %gp_sv6843 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr6842, i32 0, i32 0
  %3784 = load %struct.sv*, %struct.sv** %gp_sv6843, align 8
  call void @Perl_sv_setsv_flags(%struct.sv* %3781, %struct.sv* %3784, i32 1538)
  br label %if.end6844

if.end6844:                                       ; preds = %if.then6839, %if.then6832
  br label %if.end6845

if.end6845:                                       ; preds = %if.end6844, %if.end6829
  store i8 1, i8* %result, align 1
  br label %final_exit

no:                                               ; preds = %while.end6780, %if.then6763, %if.else6718, %if.end6545, %cond.end6456, %sw.bb6380, %if.then6329, %if.then6279, %if.then6144, %if.end5924, %if.then5800, %if.then5655, %if.then5637, %if.then5366, %if.then5222, %if.then5192, %if.then4786, %if.then4773, %if.else4714, %if.then4556, %if.then4275, %if.end3975, %if.end3899, %if.end3796, %if.end3754, %if.then3657, %do.end3513, %if.then2407, %if.then2392, %if.then2381, %if.then2361, %if.then2323, %if.then2304, %if.then2234, %if.then2220, %if.then2217, %if.then2192, %if.then2127, %if.then2044, %if.then1954, %if.then1927, %if.then1886, %if.then1859, %if.then1852, %if.then1818, %if.then1800, %if.then1778, %if.then1763, %if.then1755, %if.then1725, %if.then1718, %if.then1712, %if.then1320, %if.then1256, %if.then969, %if.then961, %if.then953, %if.then937, %if.then902, %if.then894, %if.then870, %if.then856, %if.then846, %if.then828, %if.then814, %if.then804, %if.then530, %if.then127, %if.then119, %if.then114, %if.then109, %if.then104, %if.then96, %if.then88, %if.end66, %if.end61, %if.end50
  br label %no_silent

no_silent:                                        ; preds = %no, %if.then6215, %if.then4027, %if.end3276, %if.then581, %if.else, %if.then143, %sw.bb74
  %3785 = load i8, i8* %no_final, align 1
  %tobool6846 = trunc i8 %3785 to i1
  br i1 %tobool6846, label %if.then6847, label %if.end6851

if.then6847:                                      ; preds = %no_silent
  %3786 = load %struct.regmatch_state*, %struct.regmatch_state** %yes_state, align 8
  %tobool6848 = icmp ne %struct.regmatch_state* %3786, null
  br i1 %tobool6848, label %if.then6849, label %if.else6850

if.then6849:                                      ; preds = %if.then6847
  br label %yes6781

if.else6850:                                      ; preds = %if.then6847
  br label %final_exit

if.end6851:                                       ; preds = %no_silent
  %3787 = load i32, i32* %depth, align 4
  %tobool6852 = icmp ne i32 %3787, 0
  br i1 %tobool6852, label %if.then6853, label %if.end6875

if.then6853:                                      ; preds = %if.end6851
  %3788 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %incdec.ptr6854 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3788, i32 -1
  store %struct.regmatch_state* %incdec.ptr6854, %struct.regmatch_state** %st, align 8
  %3789 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %3790 = load %struct.regmatch_slab*, %struct.regmatch_slab** @PL_regmatch_slab, align 8
  %states6855 = getelementptr inbounds %struct.regmatch_slab, %struct.regmatch_slab* %3790, i32 0, i32 0
  %arrayidx6856 = getelementptr inbounds [33 x %struct.regmatch_state], [33 x %struct.regmatch_state]* %states6855, i64 0, i64 0
  %cmp6857 = icmp ult %struct.regmatch_state* %3789, %arrayidx6856
  br i1 %cmp6857, label %if.then6859, label %if.end6863

if.then6859:                                      ; preds = %if.then6853
  %3791 = load %struct.regmatch_slab*, %struct.regmatch_slab** @PL_regmatch_slab, align 8
  %prev6860 = getelementptr inbounds %struct.regmatch_slab, %struct.regmatch_slab* %3791, i32 0, i32 1
  %3792 = load %struct.regmatch_slab*, %struct.regmatch_slab** %prev6860, align 8
  store %struct.regmatch_slab* %3792, %struct.regmatch_slab** @PL_regmatch_slab, align 8
  %3793 = load %struct.regmatch_slab*, %struct.regmatch_slab** @PL_regmatch_slab, align 8
  %states6861 = getelementptr inbounds %struct.regmatch_slab, %struct.regmatch_slab* %3793, i32 0, i32 0
  %arrayidx6862 = getelementptr inbounds [33 x %struct.regmatch_state], [33 x %struct.regmatch_state]* %states6861, i64 0, i64 32
  store %struct.regmatch_state* %arrayidx6862, %struct.regmatch_state** %st, align 8
  br label %if.end6863

if.end6863:                                       ; preds = %if.then6859, %if.then6853
  %3794 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  store %struct.regmatch_state* %3794, %struct.regmatch_state** @PL_regmatch_state, align 8
  %3795 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %locinput6864 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3795, i32 0, i32 1
  %3796 = load i8*, i8** %locinput6864, align 8
  store i8* %3796, i8** %locinput, align 8
  %3797 = load i32, i32* %depth, align 4
  %dec6865 = add nsw i32 %3797, -1
  store i32 %dec6865, i32* %depth, align 4
  %3798 = load %struct.regmatch_state*, %struct.regmatch_state** %yes_state, align 8
  %3799 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %cmp6866 = icmp eq %struct.regmatch_state* %3798, %3799
  br i1 %cmp6866, label %if.then6868, label %if.end6872

if.then6868:                                      ; preds = %if.end6863
  %3800 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u6869 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3800, i32 0, i32 2
  %yes6870 = bitcast %union.anon.19* %u6869 to %struct.anon.20*
  %prev_yes_state6871 = getelementptr inbounds %struct.anon.20, %struct.anon.20* %yes6870, i32 0, i32 0
  %3801 = load %struct.regmatch_state*, %struct.regmatch_state** %prev_yes_state6871, align 8
  store %struct.regmatch_state* %3801, %struct.regmatch_state** %yes_state, align 8
  br label %if.end6872

if.end6872:                                       ; preds = %if.then6868, %if.end6863
  %3802 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %resume_state6873 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3802, i32 0, i32 0
  %3803 = load i32, i32* %resume_state6873, align 8
  %add6874 = add nsw i32 %3803, 1
  store i32 %add6874, i32* %state_num, align 4
  br label %reenter_switch

if.end6875:                                       ; preds = %if.end6851
  store i8 0, i8* %result, align 1
  br label %final_exit

final_exit:                                       ; preds = %if.end6875, %if.else6850, %if.end6845
  %3804 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %intflags6876 = getelementptr inbounds %struct.regexp, %struct.regexp* %3804, i32 0, i32 13
  %3805 = load i32, i32* %intflags6876, align 4
  %and6877 = and i32 %3805, 8
  %tobool6878 = icmp ne i32 %and6877, 0
  br i1 %tobool6878, label %if.then6879, label %if.end6893

if.then6879:                                      ; preds = %final_exit
  %call6880 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.18, i64 0, i64 0), i32 1)
  store %struct.sv* %call6880, %struct.sv** %sv_err, align 8
  %call6882 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.13, i64 0, i64 0), i32 1)
  store %struct.sv* %call6882, %struct.sv** %sv_mrk6881, align 8
  %3806 = load i8, i8* %result, align 1
  %tobool6883 = trunc i8 %3806 to i1
  br i1 %tobool6883, label %if.then6884, label %if.else6888

if.then6884:                                      ; preds = %if.then6879
  store %struct.sv* @PL_sv_no, %struct.sv** %sv_commit, align 8
  %3807 = load %struct.sv*, %struct.sv** %sv_yes_mark, align 8
  %tobool6885 = icmp ne %struct.sv* %3807, null
  br i1 %tobool6885, label %if.end6887, label %if.then6886

if.then6886:                                      ; preds = %if.then6884
  store %struct.sv* @PL_sv_yes, %struct.sv** %sv_yes_mark, align 8
  br label %if.end6887

if.end6887:                                       ; preds = %if.then6886, %if.then6884
  br label %if.end6892

if.else6888:                                      ; preds = %if.then6879
  %3808 = load %struct.sv*, %struct.sv** %sv_commit, align 8
  %tobool6889 = icmp ne %struct.sv* %3808, null
  br i1 %tobool6889, label %if.end6891, label %if.then6890

if.then6890:                                      ; preds = %if.else6888
  store %struct.sv* @PL_sv_yes, %struct.sv** %sv_commit, align 8
  br label %if.end6891

if.end6891:                                       ; preds = %if.then6890, %if.else6888
  store %struct.sv* @PL_sv_no, %struct.sv** %sv_yes_mark, align 8
  br label %if.end6892

if.end6892:                                       ; preds = %if.end6891, %if.end6887
  %3809 = load %struct.sv*, %struct.sv** %sv_err, align 8
  %3810 = load %struct.sv*, %struct.sv** %sv_commit, align 8
  call void @Perl_sv_setsv_flags(%struct.sv* %3809, %struct.sv* %3810, i32 1538)
  %3811 = load %struct.sv*, %struct.sv** %sv_mrk6881, align 8
  %3812 = load %struct.sv*, %struct.sv** %sv_yes_mark, align 8
  call void @Perl_sv_setsv_flags(%struct.sv* %3811, %struct.sv* %3812, i32 1538)
  br label %if.end6893

if.end6893:                                       ; preds = %if.end6892, %final_exit
  %3813 = load %struct.cv*, %struct.cv** %last_pushed_cv, align 8
  %tobool6894 = icmp ne %struct.cv* %3813, null
  br i1 %tobool6894, label %if.then6895, label %if.end6975

if.then6895:                                      ; preds = %if.end6893
  %3814 = load %struct.sv**, %struct.sv*** @PL_stack_sp, align 8
  store %struct.sv** %3814, %struct.sv*** %sp6896, align 8
  br label %do.body6897

do.body6897:                                      ; preds = %if.then6895
  %3815 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxstack6898 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %3815, i32 0, i32 1
  %3816 = load %struct.context*, %struct.context** %si_cxstack6898, align 8
  %3817 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxix6899 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %3817, i32 0, i32 4
  %3818 = load i32, i32* %si_cxix6899, align 8
  %idxprom6900 = sext i32 %3818 to i64
  %arrayidx6901 = getelementptr inbounds %struct.context, %struct.context* %3816, i64 %idxprom6900
  store %struct.context* %arrayidx6901, %struct.context** %cx, align 8
  %3819 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u6902 = getelementptr inbounds %struct.context, %struct.context* %3819, i32 0, i32 0
  %cx_blk6903 = bitcast %union.anon.37* %cx_u6902 to %struct.block*
  %blk_u6904 = getelementptr inbounds %struct.block, %struct.block* %cx_blk6903, i32 0, i32 8
  %blku_sub6905 = bitcast %union.anon.38* %blk_u6904 to %struct.block_sub*
  %olddepth6906 = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub6905, i32 0, i32 4
  %3820 = load i32, i32* %olddepth6906, align 8
  %3821 = load %struct.cv*, %struct.cv** %multicall_cv, align 8
  %call6907 = call i32* @S_CvDEPTHp(%struct.cv* %3821)
  store i32 %3820, i32* %call6907, align 4
  %tobool6908 = icmp ne i32 %3820, 0
  br i1 %tobool6908, label %if.end6912, label %if.then6909

if.then6909:                                      ; preds = %do.body6897
  br label %do.body6910

do.body6910:                                      ; preds = %if.then6909
  %3822 = load %struct.cv*, %struct.cv** %multicall_cv, align 8
  %3823 = bitcast %struct.cv* %3822 to i8*
  %3824 = bitcast i8* %3823 to %struct.sv*
  call void @S_SvREFCNT_dec(%struct.sv* %3824)
  br label %do.end6911

do.end6911:                                       ; preds = %do.body6910
  br label %if.end6912

if.end6912:                                       ; preds = %do.end6911, %do.body6897
  %3825 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxstack6913 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %3825, i32 0, i32 1
  %3826 = load %struct.context*, %struct.context** %si_cxstack6913, align 8
  %3827 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxix6914 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %3827, i32 0, i32 4
  %3828 = load i32, i32* %si_cxix6914, align 8
  %dec6915 = add nsw i32 %3828, -1
  store i32 %dec6915, i32* %si_cxix6914, align 8
  %idxprom6916 = sext i32 %3828 to i64
  %arrayidx6917 = getelementptr inbounds %struct.context, %struct.context* %3826, i64 %idxprom6916
  store %struct.context* %arrayidx6917, %struct.context** %cx, align 8
  %3829 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %3830 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u6918 = getelementptr inbounds %struct.context, %struct.context* %3830, i32 0, i32 0
  %cx_blk6919 = bitcast %union.anon.37* %cx_u6918 to %struct.block*
  %blku_oldsp6920 = getelementptr inbounds %struct.block, %struct.block* %cx_blk6919, i32 0, i32 3
  %3831 = load i32, i32* %blku_oldsp6920, align 4
  %idx.ext6921 = sext i32 %3831 to i64
  %add.ptr6922 = getelementptr inbounds %struct.sv*, %struct.sv** %3829, i64 %idx.ext6921
  store %struct.sv** %add.ptr6922, %struct.sv*** %newsp, align 8
  %3832 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u6923 = getelementptr inbounds %struct.context, %struct.context* %3832, i32 0, i32 0
  %cx_blk6924 = bitcast %union.anon.37* %cx_u6923 to %struct.block*
  %blku_oldcop6925 = getelementptr inbounds %struct.block, %struct.block* %cx_blk6924, i32 0, i32 4
  %3833 = load %struct.cop*, %struct.cop** %blku_oldcop6925, align 8
  store %struct.cop* %3833, %struct.cop** @PL_curcop, align 8
  %3834 = load i32*, i32** @PL_markstack, align 8
  %3835 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u6926 = getelementptr inbounds %struct.context, %struct.context* %3835, i32 0, i32 0
  %cx_blk6927 = bitcast %union.anon.37* %cx_u6926 to %struct.block*
  %blku_oldmarksp6928 = getelementptr inbounds %struct.block, %struct.block* %cx_blk6927, i32 0, i32 5
  %3836 = load i32, i32* %blku_oldmarksp6928, align 8
  %idx.ext6929 = sext i32 %3836 to i64
  %add.ptr6930 = getelementptr inbounds i32, i32* %3834, i64 %idx.ext6929
  store i32* %add.ptr6930, i32** @PL_markstack_ptr, align 8
  %3837 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u6931 = getelementptr inbounds %struct.context, %struct.context* %3837, i32 0, i32 0
  %cx_blk6932 = bitcast %union.anon.37* %cx_u6931 to %struct.block*
  %blku_oldscopesp6933 = getelementptr inbounds %struct.block, %struct.block* %cx_blk6932, i32 0, i32 6
  %3838 = load i32, i32* %blku_oldscopesp6933, align 4
  store i32 %3838, i32* @PL_scopestack_ix, align 4
  %3839 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u6934 = getelementptr inbounds %struct.context, %struct.context* %3839, i32 0, i32 0
  %cx_blk6935 = bitcast %union.anon.37* %cx_u6934 to %struct.block*
  %blku_oldpm6936 = getelementptr inbounds %struct.block, %struct.block* %cx_blk6935, i32 0, i32 7
  %3840 = load %struct.pmop*, %struct.pmop** %blku_oldpm6936, align 8
  store %struct.pmop* %3840, %struct.pmop** @PL_curpm, align 8
  %3841 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u6937 = getelementptr inbounds %struct.context, %struct.context* %3841, i32 0, i32 0
  %cx_blk6938 = bitcast %union.anon.37* %cx_u6937 to %struct.block*
  %blku_gimme6939 = getelementptr inbounds %struct.block, %struct.block* %cx_blk6938, i32 0, i32 1
  %3842 = load i8, i8* %blku_gimme6939, align 1
  %conv6940 = zext i8 %3842 to i32
  store i32 %conv6940, i32* %gimme, align 4
  br label %do.body6941

do.body6941:                                      ; preds = %if.end6912
  %3843 = load %struct.sv**, %struct.sv*** @PL_stack_sp, align 8
  store %struct.sv** %3843, %struct.sv*** %sp6942, align 8
  %3844 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_prev6944 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %3844, i32 0, i32 2
  %3845 = load %struct.stackinfo*, %struct.stackinfo** %si_prev6944, align 8
  store %struct.stackinfo* %3845, %struct.stackinfo** %prev6943, align 8
  %3846 = load %struct.stackinfo*, %struct.stackinfo** %prev6943, align 8
  %tobool6945 = icmp ne %struct.stackinfo* %3846, null
  br i1 %tobool6945, label %if.end6947, label %if.then6946

if.then6946:                                      ; preds = %do.body6941
  call void @Perl_croak_popstack()
  br label %if.end6947

if.end6947:                                       ; preds = %if.then6946, %do.body6941
  br label %do.body6948

do.body6948:                                      ; preds = %if.end6947
  %3847 = load %struct.sv**, %struct.sv*** %sp6942, align 8
  %3848 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %sub.ptr.lhs.cast6949 = ptrtoint %struct.sv** %3847 to i64
  %sub.ptr.rhs.cast6950 = ptrtoint %struct.sv** %3848 to i64
  %sub.ptr.sub6951 = sub i64 %sub.ptr.lhs.cast6949, %sub.ptr.rhs.cast6950
  %sub.ptr.div6952 = sdiv exact i64 %sub.ptr.sub6951, 8
  %3849 = load %struct.av*, %struct.av** @PL_curstack, align 8
  %sv_any6953 = getelementptr inbounds %struct.av, %struct.av* %3849, i32 0, i32 0
  %3850 = load %struct.xpvav*, %struct.xpvav** %sv_any6953, align 8
  %xav_fill6954 = getelementptr inbounds %struct.xpvav, %struct.xpvav* %3850, i32 0, i32 2
  store i64 %sub.ptr.div6952, i64* %xav_fill6954, align 8
  %3851 = load %struct.stackinfo*, %struct.stackinfo** %prev6943, align 8
  %si_stack6955 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %3851, i32 0, i32 0
  %3852 = load %struct.av*, %struct.av** %si_stack6955, align 8
  %sv_u6956 = getelementptr inbounds %struct.av, %struct.av* %3852, i32 0, i32 3
  %svu_array6957 = bitcast %union.anon.3* %sv_u6956 to %struct.sv***
  %3853 = load %struct.sv**, %struct.sv*** %svu_array6957, align 8
  store %struct.sv** %3853, %struct.sv*** @PL_stack_base, align 8
  %3854 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %3855 = load %struct.stackinfo*, %struct.stackinfo** %prev6943, align 8
  %si_stack6958 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %3855, i32 0, i32 0
  %3856 = load %struct.av*, %struct.av** %si_stack6958, align 8
  %sv_any6959 = getelementptr inbounds %struct.av, %struct.av* %3856, i32 0, i32 0
  %3857 = load %struct.xpvav*, %struct.xpvav** %sv_any6959, align 8
  %xav_max6960 = getelementptr inbounds %struct.xpvav, %struct.xpvav* %3857, i32 0, i32 3
  %3858 = load i64, i64* %xav_max6960, align 8
  %add.ptr6961 = getelementptr inbounds %struct.sv*, %struct.sv** %3854, i64 %3858
  store %struct.sv** %add.ptr6961, %struct.sv*** @PL_stack_max, align 8
  %3859 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %3860 = load %struct.stackinfo*, %struct.stackinfo** %prev6943, align 8
  %si_stack6962 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %3860, i32 0, i32 0
  %3861 = load %struct.av*, %struct.av** %si_stack6962, align 8
  %sv_any6963 = getelementptr inbounds %struct.av, %struct.av* %3861, i32 0, i32 0
  %3862 = load %struct.xpvav*, %struct.xpvav** %sv_any6963, align 8
  %xav_fill6964 = getelementptr inbounds %struct.xpvav, %struct.xpvav* %3862, i32 0, i32 2
  %3863 = load i64, i64* %xav_fill6964, align 8
  %add.ptr6965 = getelementptr inbounds %struct.sv*, %struct.sv** %3859, i64 %3863
  store %struct.sv** %add.ptr6965, %struct.sv*** @PL_stack_sp, align 8
  store %struct.sv** %add.ptr6965, %struct.sv*** %sp6942, align 8
  %3864 = load %struct.stackinfo*, %struct.stackinfo** %prev6943, align 8
  %si_stack6966 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %3864, i32 0, i32 0
  %3865 = load %struct.av*, %struct.av** %si_stack6966, align 8
  store %struct.av* %3865, %struct.av** @PL_curstack, align 8
  br label %do.end6967

do.end6967:                                       ; preds = %do.body6948
  %3866 = load %struct.stackinfo*, %struct.stackinfo** %prev6943, align 8
  store %struct.stackinfo* %3866, %struct.stackinfo** @PL_curstackinfo, align 8
  br label %do.end6968

do.end6968:                                       ; preds = %do.end6967
  br label %do.body6969

do.body6969:                                      ; preds = %do.end6968
  %3867 = load i8, i8* %multicall_oldcatch, align 1
  %tobool6970 = trunc i8 %3867 to i1
  %3868 = load %struct.jmpenv*, %struct.jmpenv** @PL_top_env, align 8
  %je_mustcatch6971 = getelementptr inbounds %struct.jmpenv, %struct.jmpenv* %3868, i32 0, i32 3
  %frombool6972 = zext i1 %tobool6970 to i8
  store i8 %frombool6972, i8* %je_mustcatch6971, align 4
  br label %do.end6973

do.end6973:                                       ; preds = %do.body6969
  call void @Perl_pop_scope()
  %3869 = load %struct.sv**, %struct.sv*** @PL_stack_sp, align 8
  store %struct.sv** %3869, %struct.sv*** %sp6896, align 8
  br label %do.end6974

do.end6974:                                       ; preds = %do.end6973
  %3870 = load %struct.sv**, %struct.sv*** %sp6896, align 8
  br label %if.end6975

if.end6975:                                       ; preds = %do.end6974, %if.end6893
  %3871 = load i8, i8* %result, align 1
  %tobool6976 = trunc i8 %3871 to i1
  br i1 %tobool6976, label %cond.true6978, label %cond.false6983

cond.true6978:                                    ; preds = %if.end6975
  %3872 = load i8*, i8** %locinput, align 8
  %3873 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg6979 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %3873, i32 0, i32 1
  %3874 = load i8*, i8** %strbeg6979, align 8
  %sub.ptr.lhs.cast6980 = ptrtoint i8* %3872 to i64
  %sub.ptr.rhs.cast6981 = ptrtoint i8* %3874 to i64
  %sub.ptr.sub6982 = sub i64 %sub.ptr.lhs.cast6980, %sub.ptr.rhs.cast6981
  br label %cond.end6984

cond.false6983:                                   ; preds = %if.end6975
  br label %cond.end6984

cond.end6984:                                     ; preds = %cond.false6983, %cond.true6978
  %cond6985 = phi i64 [ %sub.ptr.sub6982, %cond.true6978 ], [ -1, %cond.false6983 ]
  ret i64 %cond6985
}

declare dso_local %struct.gv* @Perl_gv_add_by_type(%struct.gv*, i32) #2

declare dso_local i64 @Perl__to_uni_fold_flags(i64, i8*, i64*, i8 zeroext) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @S_reg_check_named_buff_matched(%struct.regexp* %rex, %struct.regnode* %scan) #0 {
entry:
  %retval = alloca i32, align 4
  %rex.addr = alloca %struct.regexp*, align 8
  %scan.addr = alloca %struct.regnode*, align 8
  %n = alloca i32, align 4
  %rexi = alloca %struct.regexp_internal*, align 8
  %sv_dat = alloca %struct.sv*, align 8
  %nums = alloca i32*, align 8
  store %struct.regexp* %rex, %struct.regexp** %rex.addr, align 8
  store %struct.regnode* %scan, %struct.regnode** %scan.addr, align 8
  %0 = load %struct.regexp*, %struct.regexp** %rex.addr, align 8
  %pprivate = getelementptr inbounds %struct.regexp, %struct.regexp* %0, i32 0, i32 14
  %1 = load i8*, i8** %pprivate, align 8
  %2 = bitcast i8* %1 to %struct.regexp_internal*
  store %struct.regexp_internal* %2, %struct.regexp_internal** %rexi, align 8
  %3 = load %struct.regexp_internal*, %struct.regexp_internal** %rexi, align 8
  %data = getelementptr inbounds %struct.regexp_internal, %struct.regexp_internal* %3, i32 0, i32 3
  %4 = load %struct.reg_data*, %struct.reg_data** %data, align 8
  %data1 = getelementptr inbounds %struct.reg_data, %struct.reg_data* %4, i32 0, i32 2
  %5 = load %struct.regnode*, %struct.regnode** %scan.addr, align 8
  %6 = bitcast %struct.regnode* %5 to %struct.regnode_1*
  %arg1 = getelementptr inbounds %struct.regnode_1, %struct.regnode_1* %6, i32 0, i32 3
  %7 = load i32, i32* %arg1, align 4
  %idxprom = zext i32 %7 to i64
  %arrayidx = getelementptr inbounds [1 x i8*], [1 x i8*]* %data1, i64 0, i64 %idxprom
  %8 = load i8*, i8** %arrayidx, align 8
  %9 = bitcast i8* %8 to %struct.sv*
  store %struct.sv* %9, %struct.sv** %sv_dat, align 8
  %10 = load %struct.sv*, %struct.sv** %sv_dat, align 8
  %sv_u = getelementptr inbounds %struct.sv, %struct.sv* %10, i32 0, i32 3
  %svu_pv = bitcast %union.anon* %sv_u to i8**
  %11 = load i8*, i8** %svu_pv, align 8
  %12 = bitcast i8* %11 to i32*
  store i32* %12, i32** %nums, align 8
  store i32 0, i32* %n, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %13 = load i32, i32* %n, align 4
  %conv = sext i32 %13 to i64
  %14 = load %struct.sv*, %struct.sv** %sv_dat, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %14, i32 0, i32 0
  %15 = load i8*, i8** %sv_any, align 8
  %16 = bitcast i8* %15 to %struct.xpviv*
  %xiv_u = getelementptr inbounds %struct.xpviv, %struct.xpviv* %16, i32 0, i32 4
  %xivu_iv = bitcast %union._xivu* %xiv_u to i64*
  %17 = load i64, i64* %xivu_iv, align 8
  %cmp = icmp slt i64 %conv, %17
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %18 = load %struct.regexp*, %struct.regexp** %rex.addr, align 8
  %lastparen = getelementptr inbounds %struct.regexp, %struct.regexp* %18, i32 0, i32 15
  %19 = load i32, i32* %lastparen, align 8
  %20 = load i32*, i32** %nums, align 8
  %21 = load i32, i32* %n, align 4
  %idxprom3 = sext i32 %21 to i64
  %arrayidx4 = getelementptr inbounds i32, i32* %20, i64 %idxprom3
  %22 = load i32, i32* %arrayidx4, align 4
  %cmp5 = icmp sge i32 %19, %22
  br i1 %cmp5, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %for.body
  %23 = load %struct.regexp*, %struct.regexp** %rex.addr, align 8
  %offs = getelementptr inbounds %struct.regexp, %struct.regexp* %23, i32 0, i32 17
  %24 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %offs, align 8
  %25 = load i32*, i32** %nums, align 8
  %26 = load i32, i32* %n, align 4
  %idxprom7 = sext i32 %26 to i64
  %arrayidx8 = getelementptr inbounds i32, i32* %25, i64 %idxprom7
  %27 = load i32, i32* %arrayidx8, align 4
  %idxprom9 = sext i32 %27 to i64
  %arrayidx10 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %24, i64 %idxprom9
  %end = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %arrayidx10, i32 0, i32 1
  %28 = load i64, i64* %end, align 8
  %cmp11 = icmp ne i64 %28, -1
  br i1 %cmp11, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  %29 = load i32*, i32** %nums, align 8
  %30 = load i32, i32* %n, align 4
  %idxprom13 = sext i32 %30 to i64
  %arrayidx14 = getelementptr inbounds i32, i32* %29, i64 %idxprom13
  %31 = load i32, i32* %arrayidx14, align 4
  store i32 %31, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %land.lhs.true, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %32 = load i32, i32* %n, align 4
  %inc = add nsw i32 %32, 1
  store i32 %inc, i32* %n, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4
  br label %return

return:                                           ; preds = %for.end, %if.then
  %33 = load i32, i32* %retval, align 4
  ret i32 %33
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @S_regcppush(%struct.regexp* %rex, i32 %parenfloor, i32 %maxopenparen) #0 {
entry:
  %rex.addr = alloca %struct.regexp*, align 8
  %parenfloor.addr = alloca i32, align 4
  %maxopenparen.addr = alloca i32, align 4
  %retval1 = alloca i32, align 4
  %paren_elems_to_push = alloca i32, align 4
  %total_elems = alloca i64, align 8
  %elems_shifted = alloca i64, align 8
  %p = alloca i32, align 4
  store %struct.regexp* %rex, %struct.regexp** %rex.addr, align 8
  store i32 %parenfloor, i32* %parenfloor.addr, align 4
  store i32 %maxopenparen, i32* %maxopenparen.addr, align 4
  %0 = load i32, i32* @PL_savestack_ix, align 4
  store i32 %0, i32* %retval1, align 4
  %1 = load i32, i32* %maxopenparen.addr, align 4
  %2 = load i32, i32* %parenfloor.addr, align 4
  %sub = sub i32 %1, %2
  %mul = mul i32 %sub, 3
  store i32 %mul, i32* %paren_elems_to_push, align 4
  %3 = load i32, i32* %paren_elems_to_push, align 4
  %add = add nsw i32 %3, 3
  %conv = sext i32 %add to i64
  store i64 %conv, i64* %total_elems, align 8
  %4 = load i64, i64* %total_elems, align 8
  %shl = shl i64 %4, 6
  store i64 %shl, i64* %elems_shifted, align 8
  %5 = load i32, i32* %paren_elems_to_push, align 4
  %cmp = icmp slt i32 %5, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %6 = load i32, i32* %paren_elems_to_push, align 4
  %7 = load i32, i32* %maxopenparen.addr, align 4
  %8 = load i32, i32* %parenfloor.addr, align 4
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([90 x i8], [90 x i8]* @.str.19, i64 0, i64 0), i32 %6, i32 %7, i32 %8, i32 3)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %9 = load i64, i64* %elems_shifted, align 8
  %shr = lshr i64 %9, 6
  %10 = load i64, i64* %total_elems, align 8
  %cmp3 = icmp ne i64 %shr, %10
  br i1 %cmp3, label %if.then5, label %if.end8

if.then5:                                         ; preds = %if.end
  %11 = load i64, i64* %total_elems, align 8
  %12 = load i32, i32* %maxopenparen.addr, align 4
  %conv6 = zext i32 %12 to i64
  %13 = load i32, i32* %parenfloor.addr, align 4
  %conv7 = sext i32 %13 to i64
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.20, i64 0, i64 0), i64 %11, i64 %conv6, i64 %conv7)
  br label %if.end8

if.end8:                                          ; preds = %if.then5, %if.end
  %14 = load i32, i32* @PL_savestack_ix, align 4
  %15 = load i64, i64* %total_elems, align 8
  %add9 = add i64 %15, 1
  %conv10 = trunc i64 %add9 to i32
  %add11 = add nsw i32 %14, %conv10
  %add12 = add nsw i32 %add11, 4
  %16 = load i32, i32* @PL_savestack_max, align 4
  %cmp13 = icmp sgt i32 %add12, %16
  br i1 %cmp13, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end8
  br i1 true, label %if.then15, label %if.end19

cond.false:                                       ; preds = %if.end8
  br i1 false, label %if.then15, label %if.end19

if.then15:                                        ; preds = %cond.false, %cond.true
  %17 = load i64, i64* %total_elems, align 8
  %add16 = add i64 %17, 1
  %add17 = add i64 %add16, 4
  %conv18 = trunc i64 %add17 to i32
  call void @Perl_savestack_grow_cnt(i32 %conv18)
  br label %if.end19

if.end19:                                         ; preds = %if.then15, %cond.false, %cond.true
  %18 = load i32, i32* %parenfloor.addr, align 4
  %add20 = add nsw i32 %18, 1
  store i32 %add20, i32* %p, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end19
  %19 = load i32, i32* %p, align 4
  %20 = load i32, i32* %maxopenparen.addr, align 4
  %cmp21 = icmp sle i32 %19, %20
  br i1 %cmp21, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %21 = load %struct.regexp*, %struct.regexp** %rex.addr, align 8
  %offs = getelementptr inbounds %struct.regexp, %struct.regexp* %21, i32 0, i32 17
  %22 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %offs, align 8
  %23 = load i32, i32* %p, align 4
  %idxprom = sext i32 %23 to i64
  %arrayidx = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %22, i64 %idxprom
  %end = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %arrayidx, i32 0, i32 1
  %24 = load i64, i64* %end, align 8
  %25 = load %union.any*, %union.any** @PL_savestack, align 8
  %26 = load i32, i32* @PL_savestack_ix, align 4
  %inc = add nsw i32 %26, 1
  store i32 %inc, i32* @PL_savestack_ix, align 4
  %idxprom23 = sext i32 %26 to i64
  %arrayidx24 = getelementptr inbounds %union.any, %union.any* %25, i64 %idxprom23
  %any_iv = bitcast %union.any* %arrayidx24 to i64*
  store i64 %24, i64* %any_iv, align 8
  %27 = load %struct.regexp*, %struct.regexp** %rex.addr, align 8
  %offs25 = getelementptr inbounds %struct.regexp, %struct.regexp* %27, i32 0, i32 17
  %28 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %offs25, align 8
  %29 = load i32, i32* %p, align 4
  %idxprom26 = sext i32 %29 to i64
  %arrayidx27 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %28, i64 %idxprom26
  %start = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %arrayidx27, i32 0, i32 0
  %30 = load i64, i64* %start, align 8
  %31 = load %union.any*, %union.any** @PL_savestack, align 8
  %32 = load i32, i32* @PL_savestack_ix, align 4
  %inc28 = add nsw i32 %32, 1
  store i32 %inc28, i32* @PL_savestack_ix, align 4
  %idxprom29 = sext i32 %32 to i64
  %arrayidx30 = getelementptr inbounds %union.any, %union.any* %31, i64 %idxprom29
  %any_iv31 = bitcast %union.any* %arrayidx30 to i64*
  store i64 %30, i64* %any_iv31, align 8
  %33 = load %struct.regexp*, %struct.regexp** %rex.addr, align 8
  %offs32 = getelementptr inbounds %struct.regexp, %struct.regexp* %33, i32 0, i32 17
  %34 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %offs32, align 8
  %35 = load i32, i32* %p, align 4
  %idxprom33 = sext i32 %35 to i64
  %arrayidx34 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %34, i64 %idxprom33
  %start_tmp = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %arrayidx34, i32 0, i32 2
  %36 = load i64, i64* %start_tmp, align 8
  %conv35 = trunc i64 %36 to i32
  %37 = load %union.any*, %union.any** @PL_savestack, align 8
  %38 = load i32, i32* @PL_savestack_ix, align 4
  %inc36 = add nsw i32 %38, 1
  store i32 %inc36, i32* @PL_savestack_ix, align 4
  %idxprom37 = sext i32 %38 to i64
  %arrayidx38 = getelementptr inbounds %union.any, %union.any* %37, i64 %idxprom37
  %any_i32 = bitcast %union.any* %arrayidx38 to i32*
  store i32 %conv35, i32* %any_i32, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %39 = load i32, i32* %p, align 4
  %inc39 = add nsw i32 %39, 1
  store i32 %inc39, i32* %p, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %40 = load i32, i32* %maxopenparen.addr, align 4
  %41 = load %union.any*, %union.any** @PL_savestack, align 8
  %42 = load i32, i32* @PL_savestack_ix, align 4
  %inc40 = add nsw i32 %42, 1
  store i32 %inc40, i32* @PL_savestack_ix, align 4
  %idxprom41 = sext i32 %42 to i64
  %arrayidx42 = getelementptr inbounds %union.any, %union.any* %41, i64 %idxprom41
  %any_i3243 = bitcast %union.any* %arrayidx42 to i32*
  store i32 %40, i32* %any_i3243, align 8
  %43 = load %struct.regexp*, %struct.regexp** %rex.addr, align 8
  %lastparen = getelementptr inbounds %struct.regexp, %struct.regexp* %43, i32 0, i32 15
  %44 = load i32, i32* %lastparen, align 8
  %45 = load %union.any*, %union.any** @PL_savestack, align 8
  %46 = load i32, i32* @PL_savestack_ix, align 4
  %inc44 = add nsw i32 %46, 1
  store i32 %inc44, i32* @PL_savestack_ix, align 4
  %idxprom45 = sext i32 %46 to i64
  %arrayidx46 = getelementptr inbounds %union.any, %union.any* %45, i64 %idxprom45
  %any_i3247 = bitcast %union.any* %arrayidx46 to i32*
  store i32 %44, i32* %any_i3247, align 8
  %47 = load %struct.regexp*, %struct.regexp** %rex.addr, align 8
  %lastcloseparen = getelementptr inbounds %struct.regexp, %struct.regexp* %47, i32 0, i32 16
  %48 = load i32, i32* %lastcloseparen, align 4
  %49 = load %union.any*, %union.any** @PL_savestack, align 8
  %50 = load i32, i32* @PL_savestack_ix, align 4
  %inc48 = add nsw i32 %50, 1
  store i32 %inc48, i32* @PL_savestack_ix, align 4
  %idxprom49 = sext i32 %50 to i64
  %arrayidx50 = getelementptr inbounds %union.any, %union.any* %49, i64 %idxprom49
  %any_i3251 = bitcast %union.any* %arrayidx50 to i32*
  store i32 %48, i32* %any_i3251, align 8
  %51 = load i64, i64* %elems_shifted, align 8
  %or = or i64 3, %51
  %52 = load %union.any*, %union.any** @PL_savestack, align 8
  %53 = load i32, i32* @PL_savestack_ix, align 4
  %inc52 = add nsw i32 %53, 1
  store i32 %inc52, i32* @PL_savestack_ix, align 4
  %idxprom53 = sext i32 %53 to i64
  %arrayidx54 = getelementptr inbounds %union.any, %union.any* %52, i64 %idxprom53
  %any_uv = bitcast %union.any* %arrayidx54 to i64*
  store i64 %or, i64* %any_uv, align 8
  %54 = load i32, i32* %retval1, align 4
  ret i32 %54
}

declare dso_local %struct.cv* @Perl_find_runcv(i32*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32* @S_CvDEPTHp(%struct.cv* %sv) #0 {
entry:
  %sv.addr = alloca %struct.cv*, align 8
  store %struct.cv* %sv, %struct.cv** %sv.addr, align 8
  %0 = load %struct.cv*, %struct.cv** %sv.addr, align 8
  %sv_any = getelementptr inbounds %struct.cv, %struct.cv* %0, i32 0, i32 0
  %1 = load %struct.xpvcv*, %struct.xpvcv** %sv_any, align 8
  %xcv_depth = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %1, i32 0, i32 13
  ret i32* %xcv_depth
}

declare dso_local i32 @Perl_was_lvalue_sub() #2

declare dso_local void @Perl_pad_push(%struct.padlist*, i32) #2

declare dso_local void @Perl_save_vptr(i8*) #2

declare dso_local %struct.stackinfo* @Perl_new_stackinfo(i32, i32) #2

declare dso_local i32 @Perl_cxinc() #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i1 @S_sv_only_taint_gmagic(%struct.sv* %sv) #0 {
entry:
  %retval = alloca i1, align 1
  %sv.addr = alloca %struct.sv*, align 8
  %mg = alloca %struct.magic*, align 8
  store %struct.sv* %sv, %struct.sv** %sv.addr, align 8
  %0 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %0, i32 0, i32 0
  %1 = load i8*, i8** %sv_any, align 8
  %2 = bitcast i8* %1 to %struct.xpvmg*
  %xmg_u = getelementptr inbounds %struct.xpvmg, %struct.xpvmg* %2, i32 0, i32 1
  %xmg_magic = bitcast %union._xmgu* %xmg_u to %struct.magic**
  %3 = load %struct.magic*, %struct.magic** %xmg_magic, align 8
  store %struct.magic* %3, %struct.magic** %mg, align 8
  br label %while.cond

while.cond:                                       ; preds = %if.end, %entry
  %4 = load %struct.magic*, %struct.magic** %mg, align 8
  %tobool = icmp ne %struct.magic* %4, null
  br i1 %tobool, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %5 = load %struct.magic*, %struct.magic** %mg, align 8
  %mg_type = getelementptr inbounds %struct.magic, %struct.magic* %5, i32 0, i32 3
  %6 = load i8, i8* %mg_type, align 2
  %conv = sext i8 %6 to i32
  %cmp = icmp ne i32 %conv, 116
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %while.body
  %7 = load %struct.magic*, %struct.magic** %mg, align 8
  %mg_flags = getelementptr inbounds %struct.magic, %struct.magic* %7, i32 0, i32 4
  %8 = load i8, i8* %mg_flags, align 1
  %conv2 = zext i8 %8 to i32
  %and = and i32 %conv2, 4
  %tobool3 = icmp ne i32 %and, 0
  br i1 %tobool3, label %if.end, label %land.lhs.true4

land.lhs.true4:                                   ; preds = %land.lhs.true
  %9 = load %struct.magic*, %struct.magic** %mg, align 8
  %mg_virtual = getelementptr inbounds %struct.magic, %struct.magic* %9, i32 0, i32 1
  %10 = load %struct.mgvtbl*, %struct.mgvtbl** %mg_virtual, align 8
  %svt_get = getelementptr inbounds %struct.mgvtbl, %struct.mgvtbl* %10, i32 0, i32 0
  %11 = load i32 (%struct.sv*, %struct.magic*)*, i32 (%struct.sv*, %struct.magic*)** %svt_get, align 8
  %tobool5 = icmp ne i32 (%struct.sv*, %struct.magic*)* %11, null
  br i1 %tobool5, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true4
  store i1 false, i1* %retval, align 1
  br label %return

if.end:                                           ; preds = %land.lhs.true4, %land.lhs.true, %while.body
  %12 = load %struct.magic*, %struct.magic** %mg, align 8
  %mg_moremagic = getelementptr inbounds %struct.magic, %struct.magic* %12, i32 0, i32 0
  %13 = load %struct.magic*, %struct.magic** %mg_moremagic, align 8
  store %struct.magic* %13, %struct.magic** %mg, align 8
  br label %while.cond

while.end:                                        ; preds = %while.cond
  store i1 true, i1* %retval, align 1
  br label %return

return:                                           ; preds = %while.end, %if.then
  %14 = load i1, i1* %retval, align 1
  ret i1 %14
}

declare dso_local %struct.sv* @Perl_get_sv(i8*, i32) #2

declare dso_local %struct.sv* @Perl_save_scalar(%struct.gv*) #2

declare dso_local zeroext i1 @Perl_sv_2bool_flags(%struct.sv*, i32) #2

declare dso_local %struct.sv* @Perl_sv_mortalcopy_flags(%struct.sv*, i32) #2

declare dso_local %struct.magic* @Perl_mg_find(%struct.sv*, i32) #2

declare dso_local i8* @Perl_sv_pvn_force_flags(%struct.sv*, i64*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @S_regcp_restore(%struct.regexp* %rex, i32 %ix, i32* %maxopenparen_p) #0 {
entry:
  %rex.addr = alloca %struct.regexp*, align 8
  %ix.addr = alloca i32, align 4
  %maxopenparen_p.addr = alloca i32*, align 8
  %tmpix = alloca i32, align 4
  store %struct.regexp* %rex, %struct.regexp** %rex.addr, align 8
  store i32 %ix, i32* %ix.addr, align 4
  store i32* %maxopenparen_p, i32** %maxopenparen_p.addr, align 8
  %0 = load i32, i32* @PL_savestack_ix, align 4
  store i32 %0, i32* %tmpix, align 4
  %1 = load i32, i32* %ix.addr, align 4
  store i32 %1, i32* @PL_savestack_ix, align 4
  %2 = load %struct.regexp*, %struct.regexp** %rex.addr, align 8
  %3 = load i32*, i32** %maxopenparen_p.addr, align 8
  call void @S_regcppop(%struct.regexp* %2, i32* %3)
  %4 = load i32, i32* %tmpix, align 4
  store i32 %4, i32* @PL_savestack_ix, align 4
  ret void
}

declare dso_local %struct.p5rx* @Perl_reg_temp_copy(%struct.p5rx*, %struct.p5rx*) #2

declare dso_local %struct.sv* @Perl_newSVpvn_flags(i8*, i64, i32) #2

declare dso_local void @Perl_sv_magic(%struct.sv*, %struct.sv*, i32, i8*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct.sv* @S_SvREFCNT_inc(%struct.sv* %sv) #0 {
entry:
  %sv.addr = alloca %struct.sv*, align 8
  store %struct.sv* %sv, %struct.sv** %sv.addr, align 8
  %0 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %cmp = icmp ne %struct.sv* %0, null
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  br i1 true, label %if.then, label %if.end

cond.false:                                       ; preds = %entry
  br i1 false, label %if.then, label %if.end

if.then:                                          ; preds = %cond.false, %cond.true
  %1 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_refcnt = getelementptr inbounds %struct.sv, %struct.sv* %1, i32 0, i32 1
  %2 = load i32, i32* %sv_refcnt, align 8
  %inc = add i32 %2, 1
  store i32 %inc, i32* %sv_refcnt, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %cond.false, %cond.true
  %3 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  ret %struct.sv* %3
}

; Function Attrs: noinline nounwind uwtable
define internal void @S_regcppop(%struct.regexp* %rex, i32* %maxopenparen_p) #0 {
entry:
  %rex.addr = alloca %struct.regexp*, align 8
  %maxopenparen_p.addr = alloca i32*, align 8
  %i = alloca i64, align 8
  %paren = alloca i32, align 4
  %tmps = alloca i64, align 8
  store %struct.regexp* %rex, %struct.regexp** %rex.addr, align 8
  store i32* %maxopenparen_p, i32** %maxopenparen_p.addr, align 8
  %0 = load %union.any*, %union.any** @PL_savestack, align 8
  %1 = load i32, i32* @PL_savestack_ix, align 4
  %dec = add nsw i32 %1, -1
  store i32 %dec, i32* @PL_savestack_ix, align 4
  %idxprom = sext i32 %dec to i64
  %arrayidx = getelementptr inbounds %union.any, %union.any* %0, i64 %idxprom
  %any_uv = bitcast %union.any* %arrayidx to i64*
  %2 = load i64, i64* %any_uv, align 8
  store i64 %2, i64* %i, align 8
  %3 = load i64, i64* %i, align 8
  %shr = lshr i64 %3, 6
  store i64 %shr, i64* %i, align 8
  %4 = load %union.any*, %union.any** @PL_savestack, align 8
  %5 = load i32, i32* @PL_savestack_ix, align 4
  %dec1 = add nsw i32 %5, -1
  store i32 %dec1, i32* @PL_savestack_ix, align 4
  %idxprom2 = sext i32 %dec1 to i64
  %arrayidx3 = getelementptr inbounds %union.any, %union.any* %4, i64 %idxprom2
  %any_i32 = bitcast %union.any* %arrayidx3 to i32*
  %6 = load i32, i32* %any_i32, align 8
  %7 = load %struct.regexp*, %struct.regexp** %rex.addr, align 8
  %lastcloseparen = getelementptr inbounds %struct.regexp, %struct.regexp* %7, i32 0, i32 16
  store i32 %6, i32* %lastcloseparen, align 4
  %8 = load %union.any*, %union.any** @PL_savestack, align 8
  %9 = load i32, i32* @PL_savestack_ix, align 4
  %dec4 = add nsw i32 %9, -1
  store i32 %dec4, i32* @PL_savestack_ix, align 4
  %idxprom5 = sext i32 %dec4 to i64
  %arrayidx6 = getelementptr inbounds %union.any, %union.any* %8, i64 %idxprom5
  %any_i327 = bitcast %union.any* %arrayidx6 to i32*
  %10 = load i32, i32* %any_i327, align 8
  %11 = load %struct.regexp*, %struct.regexp** %rex.addr, align 8
  %lastparen = getelementptr inbounds %struct.regexp, %struct.regexp* %11, i32 0, i32 15
  store i32 %10, i32* %lastparen, align 8
  %12 = load %union.any*, %union.any** @PL_savestack, align 8
  %13 = load i32, i32* @PL_savestack_ix, align 4
  %dec8 = add nsw i32 %13, -1
  store i32 %dec8, i32* @PL_savestack_ix, align 4
  %idxprom9 = sext i32 %dec8 to i64
  %arrayidx10 = getelementptr inbounds %union.any, %union.any* %12, i64 %idxprom9
  %any_i3211 = bitcast %union.any* %arrayidx10 to i32*
  %14 = load i32, i32* %any_i3211, align 8
  %15 = load i32*, i32** %maxopenparen_p.addr, align 8
  store i32 %14, i32* %15, align 4
  %16 = load i64, i64* %i, align 8
  %sub = sub i64 %16, 3
  store i64 %sub, i64* %i, align 8
  %17 = load i32*, i32** %maxopenparen_p.addr, align 8
  %18 = load i32, i32* %17, align 4
  store i32 %18, i32* %paren, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %19 = load i64, i64* %i, align 8
  %cmp = icmp ugt i64 %19, 0
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %20 = load %union.any*, %union.any** @PL_savestack, align 8
  %21 = load i32, i32* @PL_savestack_ix, align 4
  %dec12 = add nsw i32 %21, -1
  store i32 %dec12, i32* @PL_savestack_ix, align 4
  %idxprom13 = sext i32 %dec12 to i64
  %arrayidx14 = getelementptr inbounds %union.any, %union.any* %20, i64 %idxprom13
  %any_i3215 = bitcast %union.any* %arrayidx14 to i32*
  %22 = load i32, i32* %any_i3215, align 8
  %conv = sext i32 %22 to i64
  %23 = load %struct.regexp*, %struct.regexp** %rex.addr, align 8
  %offs = getelementptr inbounds %struct.regexp, %struct.regexp* %23, i32 0, i32 17
  %24 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %offs, align 8
  %25 = load i32, i32* %paren, align 4
  %idxprom16 = zext i32 %25 to i64
  %arrayidx17 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %24, i64 %idxprom16
  %start_tmp = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %arrayidx17, i32 0, i32 2
  store i64 %conv, i64* %start_tmp, align 8
  %26 = load %union.any*, %union.any** @PL_savestack, align 8
  %27 = load i32, i32* @PL_savestack_ix, align 4
  %dec18 = add nsw i32 %27, -1
  store i32 %dec18, i32* @PL_savestack_ix, align 4
  %idxprom19 = sext i32 %dec18 to i64
  %arrayidx20 = getelementptr inbounds %union.any, %union.any* %26, i64 %idxprom19
  %any_iv = bitcast %union.any* %arrayidx20 to i64*
  %28 = load i64, i64* %any_iv, align 8
  %29 = load %struct.regexp*, %struct.regexp** %rex.addr, align 8
  %offs21 = getelementptr inbounds %struct.regexp, %struct.regexp* %29, i32 0, i32 17
  %30 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %offs21, align 8
  %31 = load i32, i32* %paren, align 4
  %idxprom22 = zext i32 %31 to i64
  %arrayidx23 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %30, i64 %idxprom22
  %start = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %arrayidx23, i32 0, i32 0
  store i64 %28, i64* %start, align 8
  %32 = load %union.any*, %union.any** @PL_savestack, align 8
  %33 = load i32, i32* @PL_savestack_ix, align 4
  %dec24 = add nsw i32 %33, -1
  store i32 %dec24, i32* @PL_savestack_ix, align 4
  %idxprom25 = sext i32 %dec24 to i64
  %arrayidx26 = getelementptr inbounds %union.any, %union.any* %32, i64 %idxprom25
  %any_iv27 = bitcast %union.any* %arrayidx26 to i64*
  %34 = load i64, i64* %any_iv27, align 8
  store i64 %34, i64* %tmps, align 8
  %35 = load i32, i32* %paren, align 4
  %36 = load %struct.regexp*, %struct.regexp** %rex.addr, align 8
  %lastparen28 = getelementptr inbounds %struct.regexp, %struct.regexp* %36, i32 0, i32 15
  %37 = load i32, i32* %lastparen28, align 8
  %cmp29 = icmp ule i32 %35, %37
  br i1 %cmp29, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  %38 = load i64, i64* %tmps, align 8
  %39 = load %struct.regexp*, %struct.regexp** %rex.addr, align 8
  %offs31 = getelementptr inbounds %struct.regexp, %struct.regexp* %39, i32 0, i32 17
  %40 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %offs31, align 8
  %41 = load i32, i32* %paren, align 4
  %idxprom32 = zext i32 %41 to i64
  %arrayidx33 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %40, i64 %idxprom32
  %end = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %arrayidx33, i32 0, i32 1
  store i64 %38, i64* %end, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body
  %42 = load i32, i32* %paren, align 4
  %dec34 = add i32 %42, -1
  store i32 %dec34, i32* %paren, align 4
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %43 = load i64, i64* %i, align 8
  %sub35 = sub i64 %43, 3
  store i64 %sub35, i64* %i, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %44 = load %struct.regexp*, %struct.regexp** %rex.addr, align 8
  %lastparen36 = getelementptr inbounds %struct.regexp, %struct.regexp* %44, i32 0, i32 15
  %45 = load i32, i32* %lastparen36, align 8
  %add = add i32 %45, 1
  %conv37 = zext i32 %add to i64
  store i64 %conv37, i64* %i, align 8
  br label %for.cond38

for.cond38:                                       ; preds = %for.inc54, %for.end
  %46 = load i64, i64* %i, align 8
  %47 = load %struct.regexp*, %struct.regexp** %rex.addr, align 8
  %nparens = getelementptr inbounds %struct.regexp, %struct.regexp* %47, i32 0, i32 12
  %48 = load i32, i32* %nparens, align 8
  %conv39 = zext i32 %48 to i64
  %cmp40 = icmp ule i64 %46, %conv39
  br i1 %cmp40, label %for.body42, label %for.end55

for.body42:                                       ; preds = %for.cond38
  %49 = load i64, i64* %i, align 8
  %50 = load i32*, i32** %maxopenparen_p.addr, align 8
  %51 = load i32, i32* %50, align 4
  %conv43 = zext i32 %51 to i64
  %cmp44 = icmp ugt i64 %49, %conv43
  br i1 %cmp44, label %if.then46, label %if.end50

if.then46:                                        ; preds = %for.body42
  %52 = load %struct.regexp*, %struct.regexp** %rex.addr, align 8
  %offs47 = getelementptr inbounds %struct.regexp, %struct.regexp* %52, i32 0, i32 17
  %53 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %offs47, align 8
  %54 = load i64, i64* %i, align 8
  %arrayidx48 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %53, i64 %54
  %start49 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %arrayidx48, i32 0, i32 0
  store i64 -1, i64* %start49, align 8
  br label %if.end50

if.end50:                                         ; preds = %if.then46, %for.body42
  %55 = load %struct.regexp*, %struct.regexp** %rex.addr, align 8
  %offs51 = getelementptr inbounds %struct.regexp, %struct.regexp* %55, i32 0, i32 17
  %56 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %offs51, align 8
  %57 = load i64, i64* %i, align 8
  %arrayidx52 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %56, i64 %57
  %end53 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %arrayidx52, i32 0, i32 1
  store i64 -1, i64* %end53, align 8
  br label %for.inc54

for.inc54:                                        ; preds = %if.end50
  %58 = load i64, i64* %i, align 8
  %inc = add i64 %58, 1
  store i64 %inc, i64* %i, align 8
  br label %for.cond38

for.end55:                                        ; preds = %for.cond38
  ret void
}

declare dso_local %struct.regnode* @Perl_regnext(%struct.regnode*) #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: noinline nounwind uwtable
define internal zeroext i1 @S_setup_EXACTISH_ST_c1_c2(%struct.regnode* %text_node, i32* %c1p, i8* %c1_utf8, i32* %c2p, i8* %c2_utf8, %struct.regmatch_info* %reginfo) #0 {
entry:
  %retval = alloca i1, align 1
  %text_node.addr = alloca %struct.regnode*, align 8
  %c1p.addr = alloca i32*, align 8
  %c1_utf8.addr = alloca i8*, align 8
  %c2p.addr = alloca i32*, align 8
  %c2_utf8.addr = alloca i8*, align 8
  %reginfo.addr = alloca %struct.regmatch_info*, align 8
  %utf8_target = alloca i8, align 1
  %c1 = alloca i64, align 8
  %c2 = alloca i64, align 8
  %use_chrtest_void = alloca i8, align 1
  %is_utf8_pat = alloca i8, align 1
  %utf8_has_been_setup = alloca i8, align 1
  %pat = alloca i8*, align 8
  %folded = alloca [40 x i8], align 16
  %pat_end = alloca i8*, align 8
  %s = alloca i8*, align 8
  %d = alloca i8*, align 8
  %i = alloca i32, align 4
  %len = alloca i64, align 8
  %listp = alloca %struct.sv**, align 8
  %list = alloca %struct.av*, align 8
  %c_p = alloca %struct.sv**, align 8
  store %struct.regnode* %text_node, %struct.regnode** %text_node.addr, align 8
  store i32* %c1p, i32** %c1p.addr, align 8
  store i8* %c1_utf8, i8** %c1_utf8.addr, align 8
  store i32* %c2p, i32** %c2p.addr, align 8
  store i8* %c2_utf8, i8** %c2_utf8.addr, align 8
  store %struct.regmatch_info* %reginfo, %struct.regmatch_info** %reginfo.addr, align 8
  %0 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %is_utf8_target = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %0, i32 0, i32 14
  %1 = load i8, i8* %is_utf8_target, align 2
  %tobool = trunc i8 %1 to i1
  %frombool = zext i1 %tobool to i8
  store i8 %frombool, i8* %utf8_target, align 1
  store i64 -999, i64* %c1, align 8
  store i64 -998, i64* %c2, align 8
  store i8 0, i8* %use_chrtest_void, align 1
  %2 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %is_utf8_pat1 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %2, i32 0, i32 13
  %3 = load i8, i8* %is_utf8_pat1, align 1
  %tobool2 = trunc i8 %3 to i1
  %frombool3 = zext i1 %tobool2 to i8
  store i8 %frombool3, i8* %is_utf8_pat, align 1
  store i8 0, i8* %utf8_has_been_setup, align 1
  %4 = load %struct.regnode*, %struct.regnode** %text_node.addr, align 8
  %5 = bitcast %struct.regnode* %4 to %struct.regnode_string*
  %string = getelementptr inbounds %struct.regnode_string, %struct.regnode_string* %5, i32 0, i32 3
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %string, i64 0, i64 0
  store i8* %arraydecay, i8** %pat, align 8
  %6 = bitcast [40 x i8]* %folded to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %6, i8 0, i64 40, i1 false)
  %7 = load %struct.regnode*, %struct.regnode** %text_node.addr, align 8
  %type = getelementptr inbounds %struct.regnode, %struct.regnode* %7, i32 0, i32 1
  %8 = load i8, i8* %type, align 1
  %conv = zext i8 %8 to i32
  %cmp = icmp eq i32 %conv, 31
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %9 = load %struct.regnode*, %struct.regnode** %text_node.addr, align 8
  %type5 = getelementptr inbounds %struct.regnode, %struct.regnode* %9, i32 0, i32 1
  %10 = load i8, i8* %type5, align 1
  %conv6 = zext i8 %10 to i32
  %cmp7 = icmp eq i32 %conv6, 32
  br i1 %cmp7, label %if.then, label %if.else21

if.then:                                          ; preds = %lor.lhs.false, %entry
  %11 = load i8, i8* %is_utf8_pat, align 1
  %tobool9 = trunc i8 %11 to i1
  br i1 %tobool9, label %if.else, label %if.then10

if.then10:                                        ; preds = %if.then
  %12 = load i8*, i8** %pat, align 8
  %13 = load i8, i8* %12, align 1
  %conv11 = zext i8 %13 to i64
  store i64 %conv11, i64* %c1, align 8
  store i64 %conv11, i64* %c2, align 8
  br label %if.end20

if.else:                                          ; preds = %if.then
  %14 = load i8, i8* %utf8_target, align 1
  %tobool12 = trunc i8 %14 to i1
  br i1 %tobool12, label %if.then13, label %if.else19

if.then13:                                        ; preds = %if.else
  %15 = load i8*, i8** %c1_utf8.addr, align 8
  %16 = load i8*, i8** %pat, align 8
  %17 = load i8*, i8** %pat, align 8
  %18 = load i8, i8* %17, align 1
  %idxprom = zext i8 %18 to i64
  %arrayidx = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom
  %19 = load i8, i8* %arrayidx, align 1
  %conv14 = zext i8 %19 to i64
  %mul = mul i64 %conv14, 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %15, i8* align 1 %16, i64 %mul, i1 false)
  %20 = load i8*, i8** %c2_utf8.addr, align 8
  %21 = load i8*, i8** %pat, align 8
  %22 = load i8*, i8** %pat, align 8
  %23 = load i8, i8* %22, align 1
  %idxprom15 = zext i8 %23 to i64
  %arrayidx16 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom15
  %24 = load i8, i8* %arrayidx16, align 1
  %conv17 = zext i8 %24 to i64
  %mul18 = mul i64 %conv17, 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %20, i8* align 1 %21, i64 %mul18, i1 false)
  store i8 1, i8* %utf8_has_been_setup, align 1
  br label %if.end

if.else19:                                        ; preds = %if.else
  %25 = load i8*, i8** %pat, align 8
  %call = call i64 @Perl_valid_utf8_to_uvchr(i8* %25, i64* null)
  store i64 %call, i64* %c1, align 8
  store i64 %call, i64* %c2, align 8
  br label %if.end

if.end:                                           ; preds = %if.else19, %if.then13
  br label %if.end20

if.end20:                                         ; preds = %if.end, %if.then10
  br label %if.end2281

if.else21:                                        ; preds = %lor.lhs.false
  %26 = load i8*, i8** %pat, align 8
  %27 = load %struct.regnode*, %struct.regnode** %text_node.addr, align 8
  %28 = bitcast %struct.regnode* %27 to %struct.regnode_string*
  %str_len = getelementptr inbounds %struct.regnode_string, %struct.regnode_string* %28, i32 0, i32 0
  %29 = load i8, i8* %str_len, align 2
  %conv22 = zext i8 %29 to i32
  %idx.ext = sext i32 %conv22 to i64
  %add.ptr = getelementptr inbounds i8, i8* %26, i64 %idx.ext
  store i8* %add.ptr, i8** %pat_end, align 8
  %30 = load %struct.regnode*, %struct.regnode** %text_node.addr, align 8
  %type23 = getelementptr inbounds %struct.regnode, %struct.regnode* %30, i32 0, i32 1
  %31 = load i8, i8* %type23, align 1
  %conv24 = zext i8 %31 to i32
  %cmp25 = icmp eq i32 %conv24, 34
  br i1 %cmp25, label %if.then27, label %if.end211

if.then27:                                        ; preds = %if.else21
  %32 = load i8, i8* %is_utf8_pat, align 1
  %tobool28 = trunc i8 %32 to i1
  br i1 %tobool28, label %if.else42, label %if.then29

if.then29:                                        ; preds = %if.then27
  %33 = load i8, i8* @PL_in_utf8_CTYPE_locale, align 1
  %tobool30 = trunc i8 %33 to i1
  br i1 %tobool30, label %land.lhs.true, label %if.end41

land.lhs.true:                                    ; preds = %if.then29
  %34 = load i8*, i8** %pat, align 8
  %35 = load i8, i8* %34, align 1
  %conv32 = zext i8 %35 to i32
  %cmp33 = icmp eq i32 %conv32, 223
  br i1 %cmp33, label %if.then35, label %if.end41

if.then35:                                        ; preds = %land.lhs.true
  %arrayidx36 = getelementptr inbounds [40 x i8], [40 x i8]* %folded, i64 0, i64 1
  store i8 115, i8* %arrayidx36, align 1
  %arrayidx37 = getelementptr inbounds [40 x i8], [40 x i8]* %folded, i64 0, i64 0
  store i8 115, i8* %arrayidx37, align 16
  %arraydecay38 = getelementptr inbounds [40 x i8], [40 x i8]* %folded, i64 0, i64 0
  store i8* %arraydecay38, i8** %pat, align 8
  %arraydecay39 = getelementptr inbounds [40 x i8], [40 x i8]* %folded, i64 0, i64 0
  %add.ptr40 = getelementptr inbounds i8, i8* %arraydecay39, i64 2
  store i8* %add.ptr40, i8** %pat_end, align 8
  br label %if.end41

if.end41:                                         ; preds = %if.then35, %land.lhs.true, %if.then29
  br label %if.end210

if.else42:                                        ; preds = %if.then27
  %36 = load i8*, i8** %pat, align 8
  %arrayidx43 = getelementptr inbounds i8, i8* %36, i64 0
  %37 = load i8, i8* %arrayidx43, align 1
  %conv44 = zext i8 %37 to i32
  %cmp45 = icmp sle i32 %conv44, 127
  br i1 %cmp45, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.else42
  br i1 true, label %if.then178, label %if.end209

cond.false:                                       ; preds = %if.else42
  %38 = load i8*, i8** %pat, align 8
  %arrayidx47 = getelementptr inbounds i8, i8* %38, i64 0
  %39 = load i8, i8* %arrayidx47, align 1
  %conv48 = zext i8 %39 to i32
  %and = and i32 %conv48, 254
  %cmp49 = icmp eq i32 %and, 194
  br i1 %cmp49, label %cond.true51, label %cond.false52

cond.true51:                                      ; preds = %cond.false
  br i1 true, label %if.then178, label %if.end209

cond.false52:                                     ; preds = %cond.false
  %40 = load i8*, i8** %pat, align 8
  %arrayidx53 = getelementptr inbounds i8, i8* %40, i64 0
  %41 = load i8, i8* %arrayidx53, align 1
  %conv54 = zext i8 %41 to i32
  %cmp55 = icmp eq i32 196, %conv54
  br i1 %cmp55, label %cond.true62, label %lor.lhs.false57

lor.lhs.false57:                                  ; preds = %cond.false52
  %42 = load i8*, i8** %pat, align 8
  %arrayidx58 = getelementptr inbounds i8, i8* %42, i64 0
  %43 = load i8, i8* %arrayidx58, align 1
  %conv59 = zext i8 %43 to i32
  %cmp60 = icmp eq i32 199, %conv59
  br i1 %cmp60, label %cond.true62, label %cond.false69

cond.true62:                                      ; preds = %lor.lhs.false57, %cond.false52
  %44 = load i8*, i8** %pat, align 8
  %arrayidx63 = getelementptr inbounds i8, i8* %44, i64 1
  %45 = load i8, i8* %arrayidx63, align 1
  %conv64 = zext i8 %45 to i32
  %cmp65 = icmp eq i32 176, %conv64
  br i1 %cmp65, label %cond.true67, label %cond.false68

cond.true67:                                      ; preds = %cond.true62
  br i1 true, label %if.then178, label %if.end209

cond.false68:                                     ; preds = %cond.true62
  br i1 false, label %if.then178, label %if.end209

cond.false69:                                     ; preds = %lor.lhs.false57
  %46 = load i8*, i8** %pat, align 8
  %arrayidx70 = getelementptr inbounds i8, i8* %46, i64 0
  %47 = load i8, i8* %arrayidx70, align 1
  %conv71 = zext i8 %47 to i32
  %cmp72 = icmp eq i32 197, %conv71
  br i1 %cmp72, label %cond.true74, label %cond.false91

cond.true74:                                      ; preds = %cond.false69
  %48 = load i8*, i8** %pat, align 8
  %arrayidx75 = getelementptr inbounds i8, i8* %48, i64 1
  %49 = load i8, i8* %arrayidx75, align 1
  %conv76 = zext i8 %49 to i32
  %cmp77 = icmp eq i32 137, %conv76
  br i1 %cmp77, label %cond.true89, label %lor.lhs.false79

lor.lhs.false79:                                  ; preds = %cond.true74
  %50 = load i8*, i8** %pat, align 8
  %arrayidx80 = getelementptr inbounds i8, i8* %50, i64 1
  %51 = load i8, i8* %arrayidx80, align 1
  %conv81 = zext i8 %51 to i32
  %cmp82 = icmp eq i32 184, %conv81
  br i1 %cmp82, label %cond.true89, label %lor.lhs.false84

lor.lhs.false84:                                  ; preds = %lor.lhs.false79
  %52 = load i8*, i8** %pat, align 8
  %arrayidx85 = getelementptr inbounds i8, i8* %52, i64 1
  %53 = load i8, i8* %arrayidx85, align 1
  %conv86 = zext i8 %53 to i32
  %cmp87 = icmp eq i32 191, %conv86
  br i1 %cmp87, label %cond.true89, label %cond.false90

cond.true89:                                      ; preds = %lor.lhs.false84, %lor.lhs.false79, %cond.true74
  br i1 true, label %if.then178, label %if.end209

cond.false90:                                     ; preds = %lor.lhs.false84
  br i1 false, label %if.then178, label %if.end209

cond.false91:                                     ; preds = %cond.false69
  %54 = load i8*, i8** %pat, align 8
  %arrayidx92 = getelementptr inbounds i8, i8* %54, i64 0
  %55 = load i8, i8* %arrayidx92, align 1
  %conv93 = zext i8 %55 to i32
  %cmp94 = icmp eq i32 202, %conv93
  br i1 %cmp94, label %cond.true96, label %cond.false103

cond.true96:                                      ; preds = %cond.false91
  %56 = load i8*, i8** %pat, align 8
  %arrayidx97 = getelementptr inbounds i8, i8* %56, i64 1
  %57 = load i8, i8* %arrayidx97, align 1
  %conv98 = zext i8 %57 to i32
  %cmp99 = icmp eq i32 188, %conv98
  br i1 %cmp99, label %cond.true101, label %cond.false102

cond.true101:                                     ; preds = %cond.true96
  br i1 true, label %if.then178, label %if.end209

cond.false102:                                    ; preds = %cond.true96
  br i1 false, label %if.then178, label %if.end209

cond.false103:                                    ; preds = %cond.false91
  %58 = load i8*, i8** %pat, align 8
  %arrayidx104 = getelementptr inbounds i8, i8* %58, i64 0
  %59 = load i8, i8* %arrayidx104, align 1
  %conv105 = zext i8 %59 to i32
  %cmp106 = icmp eq i32 206, %conv105
  br i1 %cmp106, label %cond.true108, label %cond.false116

cond.true108:                                     ; preds = %cond.false103
  %60 = load i8*, i8** %pat, align 8
  %arrayidx109 = getelementptr inbounds i8, i8* %60, i64 1
  %61 = load i8, i8* %arrayidx109, align 1
  %conv110 = zext i8 %61 to i32
  %and111 = and i32 %conv110, 223
  %cmp112 = icmp eq i32 %and111, 156
  br i1 %cmp112, label %cond.true114, label %cond.false115

cond.true114:                                     ; preds = %cond.true108
  br i1 true, label %if.then178, label %if.end209

cond.false115:                                    ; preds = %cond.true108
  br i1 false, label %if.then178, label %if.end209

cond.false116:                                    ; preds = %cond.false103
  %62 = load i8*, i8** %pat, align 8
  %arrayidx117 = getelementptr inbounds i8, i8* %62, i64 0
  %63 = load i8, i8* %arrayidx117, align 1
  %conv118 = zext i8 %63 to i32
  %cmp119 = icmp eq i32 225, %conv118
  br i1 %cmp119, label %cond.true121, label %cond.false143

cond.true121:                                     ; preds = %cond.false116
  %64 = load i8*, i8** %pat, align 8
  %arrayidx122 = getelementptr inbounds i8, i8* %64, i64 1
  %65 = load i8, i8* %arrayidx122, align 1
  %conv123 = zext i8 %65 to i32
  %cmp124 = icmp eq i32 186, %conv123
  br i1 %cmp124, label %land.lhs.true126, label %cond.false142

land.lhs.true126:                                 ; preds = %cond.true121
  %66 = load i8*, i8** %pat, align 8
  %arrayidx127 = getelementptr inbounds i8, i8* %66, i64 2
  %67 = load i8, i8* %arrayidx127, align 1
  %conv128 = zext i8 %67 to i32
  %cmp129 = icmp sle i32 150, %conv128
  br i1 %cmp129, label %land.lhs.true131, label %lor.lhs.false136

land.lhs.true131:                                 ; preds = %land.lhs.true126
  %68 = load i8*, i8** %pat, align 8
  %arrayidx132 = getelementptr inbounds i8, i8* %68, i64 2
  %69 = load i8, i8* %arrayidx132, align 1
  %conv133 = zext i8 %69 to i32
  %cmp134 = icmp sle i32 %conv133, 154
  br i1 %cmp134, label %cond.true141, label %lor.lhs.false136

lor.lhs.false136:                                 ; preds = %land.lhs.true131, %land.lhs.true126
  %70 = load i8*, i8** %pat, align 8
  %arrayidx137 = getelementptr inbounds i8, i8* %70, i64 2
  %71 = load i8, i8* %arrayidx137, align 1
  %conv138 = zext i8 %71 to i32
  %cmp139 = icmp eq i32 158, %conv138
  br i1 %cmp139, label %cond.true141, label %cond.false142

cond.true141:                                     ; preds = %lor.lhs.false136, %land.lhs.true131
  br i1 true, label %if.then178, label %if.end209

cond.false142:                                    ; preds = %lor.lhs.false136, %cond.true121
  br i1 false, label %if.then178, label %if.end209

cond.false143:                                    ; preds = %cond.false116
  %72 = load i8*, i8** %pat, align 8
  %arrayidx144 = getelementptr inbounds i8, i8* %72, i64 0
  %73 = load i8, i8* %arrayidx144, align 1
  %conv145 = zext i8 %73 to i32
  %cmp146 = icmp eq i32 226, %conv145
  br i1 %cmp146, label %cond.true148, label %cond.false161

cond.true148:                                     ; preds = %cond.false143
  %74 = load i8*, i8** %pat, align 8
  %arrayidx149 = getelementptr inbounds i8, i8* %74, i64 1
  %75 = load i8, i8* %arrayidx149, align 1
  %conv150 = zext i8 %75 to i32
  %cmp151 = icmp eq i32 132, %conv150
  br i1 %cmp151, label %land.lhs.true153, label %cond.false160

land.lhs.true153:                                 ; preds = %cond.true148
  %76 = load i8*, i8** %pat, align 8
  %arrayidx154 = getelementptr inbounds i8, i8* %76, i64 2
  %77 = load i8, i8* %arrayidx154, align 1
  %conv155 = zext i8 %77 to i32
  %and156 = and i32 %conv155, 254
  %cmp157 = icmp eq i32 %and156, 170
  br i1 %cmp157, label %cond.true159, label %cond.false160

cond.true159:                                     ; preds = %land.lhs.true153
  br i1 true, label %if.then178, label %if.end209

cond.false160:                                    ; preds = %land.lhs.true153, %cond.true148
  br i1 false, label %if.then178, label %if.end209

cond.false161:                                    ; preds = %cond.false143
  %78 = load i8*, i8** %pat, align 8
  %arrayidx162 = getelementptr inbounds i8, i8* %78, i64 0
  %79 = load i8, i8* %arrayidx162, align 1
  %conv163 = zext i8 %79 to i32
  %cmp164 = icmp eq i32 239, %conv163
  br i1 %cmp164, label %land.lhs.true166, label %cond.false177

land.lhs.true166:                                 ; preds = %cond.false161
  %80 = load i8*, i8** %pat, align 8
  %arrayidx167 = getelementptr inbounds i8, i8* %80, i64 1
  %81 = load i8, i8* %arrayidx167, align 1
  %conv168 = zext i8 %81 to i32
  %cmp169 = icmp eq i32 172, %conv168
  br i1 %cmp169, label %land.lhs.true171, label %cond.false177

land.lhs.true171:                                 ; preds = %land.lhs.true166
  %82 = load i8*, i8** %pat, align 8
  %arrayidx172 = getelementptr inbounds i8, i8* %82, i64 2
  %83 = load i8, i8* %arrayidx172, align 1
  %conv173 = zext i8 %83 to i32
  %cmp174 = icmp sle i32 %conv173, 134
  br i1 %cmp174, label %cond.true176, label %cond.false177

cond.true176:                                     ; preds = %land.lhs.true171
  br i1 true, label %if.then178, label %if.end209

cond.false177:                                    ; preds = %land.lhs.true171, %land.lhs.true166, %cond.false161
  br i1 false, label %if.then178, label %if.end209

if.then178:                                       ; preds = %cond.false177, %cond.true176, %cond.false160, %cond.true159, %cond.false142, %cond.true141, %cond.false115, %cond.true114, %cond.false102, %cond.true101, %cond.false90, %cond.true89, %cond.false68, %cond.true67, %cond.true51, %cond.true
  %84 = load i8*, i8** %pat, align 8
  store i8* %84, i8** %s, align 8
  %arraydecay179 = getelementptr inbounds [40 x i8], [40 x i8]* %folded, i64 0, i64 0
  store i8* %arraydecay179, i8** %d, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then178
  %85 = load i32, i32* %i, align 4
  %cmp180 = icmp slt i32 %85, 3
  br i1 %cmp180, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %for.cond
  %86 = load i8*, i8** %s, align 8
  %87 = load i8*, i8** %pat_end, align 8
  %cmp182 = icmp ult i8* %86, %87
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %88 = phi i1 [ false, %for.cond ], [ %cmp182, %land.rhs ]
  br i1 %88, label %for.body, label %for.end

for.body:                                         ; preds = %land.end
  %89 = load i8*, i8** %s, align 8
  %90 = load i8, i8* %89, align 1
  %conv184 = zext i8 %90 to i64
  %cmp185 = icmp ult i64 %conv184, 128
  br i1 %cmp185, label %if.then187, label %if.else199

if.then187:                                       ; preds = %for.body
  %91 = load i8*, i8** %s, align 8
  %92 = load i8, i8* %91, align 1
  %conv188 = zext i8 %92 to i32
  %and189 = and i32 %conv188, -128
  %cmp190 = icmp eq i32 %and189, 0
  br i1 %cmp190, label %cond.true192, label %cond.false195

cond.true192:                                     ; preds = %if.then187
  %93 = load i8*, i8** %s, align 8
  %94 = load i8, i8* %93, align 1
  %conv193 = zext i8 %94 to i32
  %call194 = call i32 @tolower(i32 %conv193) #5
  br label %cond.end

cond.false195:                                    ; preds = %if.then187
  %95 = load i8*, i8** %s, align 8
  %96 = load i8, i8* %95, align 1
  %conv196 = zext i8 %96 to i32
  br label %cond.end

cond.end:                                         ; preds = %cond.false195, %cond.true192
  %cond = phi i32 [ %call194, %cond.true192 ], [ %conv196, %cond.false195 ]
  %conv197 = trunc i32 %cond to i8
  %97 = load i8*, i8** %d, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %97, i32 1
  store i8* %incdec.ptr, i8** %d, align 8
  store i8 %conv197, i8* %97, align 1
  %98 = load i8*, i8** %s, align 8
  %incdec.ptr198 = getelementptr inbounds i8, i8* %98, i32 1
  store i8* %incdec.ptr198, i8** %s, align 8
  br label %if.end207

if.else199:                                       ; preds = %for.body
  %99 = load i8*, i8** %s, align 8
  %100 = load i8*, i8** %d, align 8
  %call200 = call i64 @Perl__to_utf8_fold_flags(i8* %99, i8* %100, i64* %len, i8 zeroext 3)
  %101 = load i64, i64* %len, align 8
  %102 = load i8*, i8** %d, align 8
  %add.ptr201 = getelementptr inbounds i8, i8* %102, i64 %101
  store i8* %add.ptr201, i8** %d, align 8
  %103 = load i8*, i8** %s, align 8
  %104 = load i8, i8* %103, align 1
  %idxprom202 = zext i8 %104 to i64
  %arrayidx203 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom202
  %105 = load i8, i8* %arrayidx203, align 1
  %conv204 = zext i8 %105 to i32
  %106 = load i8*, i8** %s, align 8
  %idx.ext205 = sext i32 %conv204 to i64
  %add.ptr206 = getelementptr inbounds i8, i8* %106, i64 %idx.ext205
  store i8* %add.ptr206, i8** %s, align 8
  br label %if.end207

if.end207:                                        ; preds = %if.else199, %cond.end
  br label %for.inc

for.inc:                                          ; preds = %if.end207
  %107 = load i32, i32* %i, align 4
  %inc = add nsw i32 %107, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %land.end
  %arraydecay208 = getelementptr inbounds [40 x i8], [40 x i8]* %folded, i64 0, i64 0
  store i8* %arraydecay208, i8** %pat, align 8
  %108 = load i8*, i8** %d, align 8
  store i8* %108, i8** %pat_end, align 8
  br label %if.end209

if.end209:                                        ; preds = %for.end, %cond.false177, %cond.true176, %cond.false160, %cond.true159, %cond.false142, %cond.true141, %cond.false115, %cond.true114, %cond.false102, %cond.true101, %cond.false90, %cond.true89, %cond.false68, %cond.true67, %cond.true51, %cond.true
  br label %if.end210

if.end210:                                        ; preds = %if.end209, %if.end41
  br label %if.end211

if.end211:                                        ; preds = %if.end210, %if.else21
  %109 = load i8, i8* %is_utf8_pat, align 1
  %tobool212 = trunc i8 %109 to i1
  br i1 %tobool212, label %land.lhs.true214, label %lor.lhs.false2001

land.lhs.true214:                                 ; preds = %if.end211
  %110 = load i8*, i8** %pat_end, align 8
  %111 = load i8*, i8** %pat, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %110 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %111 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %cmp215 = icmp sgt i64 %sub.ptr.sub, 5
  br i1 %cmp215, label %cond.true217, label %cond.false828

cond.true217:                                     ; preds = %land.lhs.true214
  %112 = load i8*, i8** %pat, align 8
  %arrayidx218 = getelementptr inbounds i8, i8* %112, i64 0
  %113 = load i8, i8* %arrayidx218, align 1
  %conv219 = zext i8 %113 to i32
  %cmp220 = icmp eq i32 97, %conv219
  br i1 %cmp220, label %cond.true222, label %cond.false234

cond.true222:                                     ; preds = %cond.true217
  %114 = load i8*, i8** %pat, align 8
  %arrayidx223 = getelementptr inbounds i8, i8* %114, i64 1
  %115 = load i8, i8* %arrayidx223, align 1
  %conv224 = zext i8 %115 to i32
  %cmp225 = icmp eq i32 202, %conv224
  br i1 %cmp225, label %land.lhs.true227, label %cond.false233

land.lhs.true227:                                 ; preds = %cond.true222
  %116 = load i8*, i8** %pat, align 8
  %arrayidx228 = getelementptr inbounds i8, i8* %116, i64 2
  %117 = load i8, i8* %arrayidx228, align 1
  %conv229 = zext i8 %117 to i32
  %cmp230 = icmp eq i32 190, %conv229
  br i1 %cmp230, label %cond.true232, label %cond.false233

cond.true232:                                     ; preds = %land.lhs.true227
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false233:                                    ; preds = %land.lhs.true227, %cond.true222
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false234:                                    ; preds = %cond.true217
  %118 = load i8*, i8** %pat, align 8
  %arrayidx235 = getelementptr inbounds i8, i8* %118, i64 0
  %119 = load i8, i8* %arrayidx235, align 1
  %conv236 = zext i8 %119 to i32
  %cmp237 = icmp eq i32 102, %conv236
  br i1 %cmp237, label %cond.true239, label %cond.false268

cond.true239:                                     ; preds = %cond.false234
  %120 = load i8*, i8** %pat, align 8
  %arrayidx240 = getelementptr inbounds i8, i8* %120, i64 1
  %121 = load i8, i8* %arrayidx240, align 1
  %conv241 = zext i8 %121 to i32
  %cmp242 = icmp eq i32 102, %conv241
  br i1 %cmp242, label %cond.true244, label %cond.false256

cond.true244:                                     ; preds = %cond.true239
  %122 = load i8*, i8** %pat, align 8
  %arrayidx245 = getelementptr inbounds i8, i8* %122, i64 2
  %123 = load i8, i8* %arrayidx245, align 1
  %conv246 = zext i8 %123 to i32
  %cmp247 = icmp eq i32 105, %conv246
  br i1 %cmp247, label %cond.true254, label %lor.lhs.false249

lor.lhs.false249:                                 ; preds = %cond.true244
  %124 = load i8*, i8** %pat, align 8
  %arrayidx250 = getelementptr inbounds i8, i8* %124, i64 2
  %125 = load i8, i8* %arrayidx250, align 1
  %conv251 = zext i8 %125 to i32
  %cmp252 = icmp eq i32 108, %conv251
  br i1 %cmp252, label %cond.true254, label %cond.false255

cond.true254:                                     ; preds = %lor.lhs.false249, %cond.true244
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false255:                                    ; preds = %lor.lhs.false249
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false256:                                    ; preds = %cond.true239
  %126 = load i8*, i8** %pat, align 8
  %arrayidx257 = getelementptr inbounds i8, i8* %126, i64 1
  %127 = load i8, i8* %arrayidx257, align 1
  %conv258 = zext i8 %127 to i32
  %cmp259 = icmp eq i32 105, %conv258
  br i1 %cmp259, label %cond.true266, label %lor.lhs.false261

lor.lhs.false261:                                 ; preds = %cond.false256
  %128 = load i8*, i8** %pat, align 8
  %arrayidx262 = getelementptr inbounds i8, i8* %128, i64 1
  %129 = load i8, i8* %arrayidx262, align 1
  %conv263 = zext i8 %129 to i32
  %cmp264 = icmp eq i32 108, %conv263
  br i1 %cmp264, label %cond.true266, label %cond.false267

cond.true266:                                     ; preds = %lor.lhs.false261, %cond.false256
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false267:                                    ; preds = %lor.lhs.false261
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false268:                                    ; preds = %cond.false234
  %130 = load i8*, i8** %pat, align 8
  %arrayidx269 = getelementptr inbounds i8, i8* %130, i64 0
  %131 = load i8, i8* %arrayidx269, align 1
  %conv270 = zext i8 %131 to i32
  %cmp271 = icmp eq i32 104, %conv270
  br i1 %cmp271, label %cond.true273, label %cond.false285

cond.true273:                                     ; preds = %cond.false268
  %132 = load i8*, i8** %pat, align 8
  %arrayidx274 = getelementptr inbounds i8, i8* %132, i64 1
  %133 = load i8, i8* %arrayidx274, align 1
  %conv275 = zext i8 %133 to i32
  %cmp276 = icmp eq i32 204, %conv275
  br i1 %cmp276, label %land.lhs.true278, label %cond.false284

land.lhs.true278:                                 ; preds = %cond.true273
  %134 = load i8*, i8** %pat, align 8
  %arrayidx279 = getelementptr inbounds i8, i8* %134, i64 2
  %135 = load i8, i8* %arrayidx279, align 1
  %conv280 = zext i8 %135 to i32
  %cmp281 = icmp eq i32 177, %conv280
  br i1 %cmp281, label %cond.true283, label %cond.false284

cond.true283:                                     ; preds = %land.lhs.true278
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false284:                                    ; preds = %land.lhs.true278, %cond.true273
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false285:                                    ; preds = %cond.false268
  %136 = load i8*, i8** %pat, align 8
  %arrayidx286 = getelementptr inbounds i8, i8* %136, i64 0
  %137 = load i8, i8* %arrayidx286, align 1
  %conv287 = zext i8 %137 to i32
  %cmp288 = icmp eq i32 105, %conv287
  br i1 %cmp288, label %cond.true290, label %cond.false302

cond.true290:                                     ; preds = %cond.false285
  %138 = load i8*, i8** %pat, align 8
  %arrayidx291 = getelementptr inbounds i8, i8* %138, i64 1
  %139 = load i8, i8* %arrayidx291, align 1
  %conv292 = zext i8 %139 to i32
  %cmp293 = icmp eq i32 204, %conv292
  br i1 %cmp293, label %land.lhs.true295, label %cond.false301

land.lhs.true295:                                 ; preds = %cond.true290
  %140 = load i8*, i8** %pat, align 8
  %arrayidx296 = getelementptr inbounds i8, i8* %140, i64 2
  %141 = load i8, i8* %arrayidx296, align 1
  %conv297 = zext i8 %141 to i32
  %cmp298 = icmp eq i32 135, %conv297
  br i1 %cmp298, label %cond.true300, label %cond.false301

cond.true300:                                     ; preds = %land.lhs.true295
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false301:                                    ; preds = %land.lhs.true295, %cond.true290
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false302:                                    ; preds = %cond.false285
  %142 = load i8*, i8** %pat, align 8
  %arrayidx303 = getelementptr inbounds i8, i8* %142, i64 0
  %143 = load i8, i8* %arrayidx303, align 1
  %conv304 = zext i8 %143 to i32
  %cmp305 = icmp eq i32 106, %conv304
  br i1 %cmp305, label %cond.true307, label %cond.false319

cond.true307:                                     ; preds = %cond.false302
  %144 = load i8*, i8** %pat, align 8
  %arrayidx308 = getelementptr inbounds i8, i8* %144, i64 1
  %145 = load i8, i8* %arrayidx308, align 1
  %conv309 = zext i8 %145 to i32
  %cmp310 = icmp eq i32 204, %conv309
  br i1 %cmp310, label %land.lhs.true312, label %cond.false318

land.lhs.true312:                                 ; preds = %cond.true307
  %146 = load i8*, i8** %pat, align 8
  %arrayidx313 = getelementptr inbounds i8, i8* %146, i64 2
  %147 = load i8, i8* %arrayidx313, align 1
  %conv314 = zext i8 %147 to i32
  %cmp315 = icmp eq i32 140, %conv314
  br i1 %cmp315, label %cond.true317, label %cond.false318

cond.true317:                                     ; preds = %land.lhs.true312
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false318:                                    ; preds = %land.lhs.true312, %cond.true307
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false319:                                    ; preds = %cond.false302
  %148 = load i8*, i8** %pat, align 8
  %arrayidx320 = getelementptr inbounds i8, i8* %148, i64 0
  %149 = load i8, i8* %arrayidx320, align 1
  %conv321 = zext i8 %149 to i32
  %cmp322 = icmp eq i32 115, %conv321
  br i1 %cmp322, label %cond.true324, label %cond.false336

cond.true324:                                     ; preds = %cond.false319
  %150 = load i8*, i8** %pat, align 8
  %arrayidx325 = getelementptr inbounds i8, i8* %150, i64 1
  %151 = load i8, i8* %arrayidx325, align 1
  %conv326 = zext i8 %151 to i32
  %cmp327 = icmp eq i32 115, %conv326
  br i1 %cmp327, label %cond.true334, label %lor.lhs.false329

lor.lhs.false329:                                 ; preds = %cond.true324
  %152 = load i8*, i8** %pat, align 8
  %arrayidx330 = getelementptr inbounds i8, i8* %152, i64 1
  %153 = load i8, i8* %arrayidx330, align 1
  %conv331 = zext i8 %153 to i32
  %cmp332 = icmp eq i32 116, %conv331
  br i1 %cmp332, label %cond.true334, label %cond.false335

cond.true334:                                     ; preds = %lor.lhs.false329, %cond.true324
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false335:                                    ; preds = %lor.lhs.false329
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false336:                                    ; preds = %cond.false319
  %154 = load i8*, i8** %pat, align 8
  %arrayidx337 = getelementptr inbounds i8, i8* %154, i64 0
  %155 = load i8, i8* %arrayidx337, align 1
  %conv338 = zext i8 %155 to i32
  %cmp339 = icmp eq i32 116, %conv338
  br i1 %cmp339, label %cond.true341, label %cond.false353

cond.true341:                                     ; preds = %cond.false336
  %156 = load i8*, i8** %pat, align 8
  %arrayidx342 = getelementptr inbounds i8, i8* %156, i64 1
  %157 = load i8, i8* %arrayidx342, align 1
  %conv343 = zext i8 %157 to i32
  %cmp344 = icmp eq i32 204, %conv343
  br i1 %cmp344, label %land.lhs.true346, label %cond.false352

land.lhs.true346:                                 ; preds = %cond.true341
  %158 = load i8*, i8** %pat, align 8
  %arrayidx347 = getelementptr inbounds i8, i8* %158, i64 2
  %159 = load i8, i8* %arrayidx347, align 1
  %conv348 = zext i8 %159 to i32
  %cmp349 = icmp eq i32 136, %conv348
  br i1 %cmp349, label %cond.true351, label %cond.false352

cond.true351:                                     ; preds = %land.lhs.true346
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false352:                                    ; preds = %land.lhs.true346, %cond.true341
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false353:                                    ; preds = %cond.false336
  %160 = load i8*, i8** %pat, align 8
  %arrayidx354 = getelementptr inbounds i8, i8* %160, i64 0
  %161 = load i8, i8* %arrayidx354, align 1
  %conv355 = zext i8 %161 to i32
  %cmp356 = icmp eq i32 119, %conv355
  br i1 %cmp356, label %cond.true363, label %lor.lhs.false358

lor.lhs.false358:                                 ; preds = %cond.false353
  %162 = load i8*, i8** %pat, align 8
  %arrayidx359 = getelementptr inbounds i8, i8* %162, i64 0
  %163 = load i8, i8* %arrayidx359, align 1
  %conv360 = zext i8 %163 to i32
  %cmp361 = icmp eq i32 121, %conv360
  br i1 %cmp361, label %cond.true363, label %cond.false375

cond.true363:                                     ; preds = %lor.lhs.false358, %cond.false353
  %164 = load i8*, i8** %pat, align 8
  %arrayidx364 = getelementptr inbounds i8, i8* %164, i64 1
  %165 = load i8, i8* %arrayidx364, align 1
  %conv365 = zext i8 %165 to i32
  %cmp366 = icmp eq i32 204, %conv365
  br i1 %cmp366, label %land.lhs.true368, label %cond.false374

land.lhs.true368:                                 ; preds = %cond.true363
  %166 = load i8*, i8** %pat, align 8
  %arrayidx369 = getelementptr inbounds i8, i8* %166, i64 2
  %167 = load i8, i8* %arrayidx369, align 1
  %conv370 = zext i8 %167 to i32
  %cmp371 = icmp eq i32 138, %conv370
  br i1 %cmp371, label %cond.true373, label %cond.false374

cond.true373:                                     ; preds = %land.lhs.true368
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false374:                                    ; preds = %land.lhs.true368, %cond.true363
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false375:                                    ; preds = %lor.lhs.false358
  %168 = load i8*, i8** %pat, align 8
  %arrayidx376 = getelementptr inbounds i8, i8* %168, i64 0
  %169 = load i8, i8* %arrayidx376, align 1
  %conv377 = zext i8 %169 to i32
  %cmp378 = icmp eq i32 197, %conv377
  br i1 %cmp378, label %cond.true380, label %cond.false397

cond.true380:                                     ; preds = %cond.false375
  %170 = load i8*, i8** %pat, align 8
  %arrayidx381 = getelementptr inbounds i8, i8* %170, i64 1
  %171 = load i8, i8* %arrayidx381, align 1
  %conv382 = zext i8 %171 to i32
  %cmp383 = icmp eq i32 191, %conv382
  br i1 %cmp383, label %land.lhs.true385, label %cond.false396

land.lhs.true385:                                 ; preds = %cond.true380
  %172 = load i8*, i8** %pat, align 8
  %arrayidx386 = getelementptr inbounds i8, i8* %172, i64 2
  %173 = load i8, i8* %arrayidx386, align 1
  %conv387 = zext i8 %173 to i32
  %cmp388 = icmp eq i32 197, %conv387
  br i1 %cmp388, label %land.lhs.true390, label %cond.false396

land.lhs.true390:                                 ; preds = %land.lhs.true385
  %174 = load i8*, i8** %pat, align 8
  %arrayidx391 = getelementptr inbounds i8, i8* %174, i64 3
  %175 = load i8, i8* %arrayidx391, align 1
  %conv392 = zext i8 %175 to i32
  %cmp393 = icmp eq i32 191, %conv392
  br i1 %cmp393, label %cond.true395, label %cond.false396

cond.true395:                                     ; preds = %land.lhs.true390
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false396:                                    ; preds = %land.lhs.true390, %land.lhs.true385, %cond.true380
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false397:                                    ; preds = %cond.false375
  %176 = load i8*, i8** %pat, align 8
  %arrayidx398 = getelementptr inbounds i8, i8* %176, i64 0
  %177 = load i8, i8* %arrayidx398, align 1
  %conv399 = zext i8 %177 to i32
  %cmp400 = icmp eq i32 202, %conv399
  br i1 %cmp400, label %cond.true402, label %cond.false414

cond.true402:                                     ; preds = %cond.false397
  %178 = load i8*, i8** %pat, align 8
  %arrayidx403 = getelementptr inbounds i8, i8* %178, i64 1
  %179 = load i8, i8* %arrayidx403, align 1
  %conv404 = zext i8 %179 to i32
  %cmp405 = icmp eq i32 188, %conv404
  br i1 %cmp405, label %land.lhs.true407, label %cond.false413

land.lhs.true407:                                 ; preds = %cond.true402
  %180 = load i8*, i8** %pat, align 8
  %arrayidx408 = getelementptr inbounds i8, i8* %180, i64 2
  %181 = load i8, i8* %arrayidx408, align 1
  %conv409 = zext i8 %181 to i32
  %cmp410 = icmp eq i32 110, %conv409
  br i1 %cmp410, label %cond.true412, label %cond.false413

cond.true412:                                     ; preds = %land.lhs.true407
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false413:                                    ; preds = %land.lhs.true407, %cond.true402
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false414:                                    ; preds = %cond.false397
  %182 = load i8*, i8** %pat, align 8
  %arrayidx415 = getelementptr inbounds i8, i8* %182, i64 0
  %183 = load i8, i8* %arrayidx415, align 1
  %conv416 = zext i8 %183 to i32
  %cmp417 = icmp eq i32 206, %conv416
  br i1 %cmp417, label %cond.true419, label %cond.false536

cond.true419:                                     ; preds = %cond.false414
  %184 = load i8*, i8** %pat, align 8
  %arrayidx420 = getelementptr inbounds i8, i8* %184, i64 1
  %185 = load i8, i8* %arrayidx420, align 1
  %conv421 = zext i8 %185 to i32
  %and422 = and i32 %conv421, 253
  %cmp423 = icmp eq i32 %and422, 172
  br i1 %cmp423, label %cond.true425, label %cond.false437

cond.true425:                                     ; preds = %cond.true419
  %186 = load i8*, i8** %pat, align 8
  %arrayidx426 = getelementptr inbounds i8, i8* %186, i64 2
  %187 = load i8, i8* %arrayidx426, align 1
  %conv427 = zext i8 %187 to i32
  %cmp428 = icmp eq i32 206, %conv427
  br i1 %cmp428, label %land.lhs.true430, label %cond.false436

land.lhs.true430:                                 ; preds = %cond.true425
  %188 = load i8*, i8** %pat, align 8
  %arrayidx431 = getelementptr inbounds i8, i8* %188, i64 3
  %189 = load i8, i8* %arrayidx431, align 1
  %conv432 = zext i8 %189 to i32
  %cmp433 = icmp eq i32 185, %conv432
  br i1 %cmp433, label %cond.true435, label %cond.false436

cond.true435:                                     ; preds = %land.lhs.true430
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false436:                                    ; preds = %land.lhs.true430, %cond.true425
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false437:                                    ; preds = %cond.true419
  %190 = load i8*, i8** %pat, align 8
  %arrayidx438 = getelementptr inbounds i8, i8* %190, i64 1
  %191 = load i8, i8* %arrayidx438, align 1
  %conv439 = zext i8 %191 to i32
  %cmp440 = icmp eq i32 177, %conv439
  br i1 %cmp440, label %cond.true447, label %lor.lhs.false442

lor.lhs.false442:                                 ; preds = %cond.false437
  %192 = load i8*, i8** %pat, align 8
  %arrayidx443 = getelementptr inbounds i8, i8* %192, i64 1
  %193 = load i8, i8* %arrayidx443, align 1
  %conv444 = zext i8 %193 to i32
  %cmp445 = icmp eq i32 183, %conv444
  br i1 %cmp445, label %cond.true447, label %cond.false482

cond.true447:                                     ; preds = %lor.lhs.false442, %cond.false437
  %194 = load i8*, i8** %pat, align 8
  %arrayidx448 = getelementptr inbounds i8, i8* %194, i64 2
  %195 = load i8, i8* %arrayidx448, align 1
  %conv449 = zext i8 %195 to i32
  %cmp450 = icmp eq i32 205, %conv449
  br i1 %cmp450, label %cond.true452, label %cond.false470

cond.true452:                                     ; preds = %cond.true447
  %196 = load i8*, i8** %pat, align 8
  %arrayidx453 = getelementptr inbounds i8, i8* %196, i64 3
  %197 = load i8, i8* %arrayidx453, align 1
  %conv454 = zext i8 %197 to i32
  %cmp455 = icmp eq i32 130, %conv454
  br i1 %cmp455, label %cond.true457, label %cond.false469

cond.true457:                                     ; preds = %cond.true452
  %198 = load i8*, i8** %pat, align 8
  %arrayidx458 = getelementptr inbounds i8, i8* %198, i64 4
  %199 = load i8, i8* %arrayidx458, align 1
  %conv459 = zext i8 %199 to i32
  %cmp460 = icmp eq i32 206, %conv459
  br i1 %cmp460, label %land.lhs.true462, label %cond.false468

land.lhs.true462:                                 ; preds = %cond.true457
  %200 = load i8*, i8** %pat, align 8
  %arrayidx463 = getelementptr inbounds i8, i8* %200, i64 5
  %201 = load i8, i8* %arrayidx463, align 1
  %conv464 = zext i8 %201 to i32
  %cmp465 = icmp eq i32 185, %conv464
  br i1 %cmp465, label %cond.true467, label %cond.false468

cond.true467:                                     ; preds = %land.lhs.true462
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false468:                                    ; preds = %land.lhs.true462, %cond.true457
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false469:                                    ; preds = %cond.true452
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false470:                                    ; preds = %cond.true447
  %202 = load i8*, i8** %pat, align 8
  %arrayidx471 = getelementptr inbounds i8, i8* %202, i64 2
  %203 = load i8, i8* %arrayidx471, align 1
  %conv472 = zext i8 %203 to i32
  %cmp473 = icmp eq i32 206, %conv472
  br i1 %cmp473, label %land.lhs.true475, label %cond.false481

land.lhs.true475:                                 ; preds = %cond.false470
  %204 = load i8*, i8** %pat, align 8
  %arrayidx476 = getelementptr inbounds i8, i8* %204, i64 3
  %205 = load i8, i8* %arrayidx476, align 1
  %conv477 = zext i8 %205 to i32
  %cmp478 = icmp eq i32 185, %conv477
  br i1 %cmp478, label %cond.true480, label %cond.false481

cond.true480:                                     ; preds = %land.lhs.true475
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false481:                                    ; preds = %land.lhs.true475, %cond.false470
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false482:                                    ; preds = %lor.lhs.false442
  %206 = load i8*, i8** %pat, align 8
  %arrayidx483 = getelementptr inbounds i8, i8* %206, i64 1
  %207 = load i8, i8* %arrayidx483, align 1
  %conv484 = zext i8 %207 to i32
  %cmp485 = icmp eq i32 185, %conv484
  br i1 %cmp485, label %cond.true487, label %cond.false535

cond.true487:                                     ; preds = %cond.false482
  %208 = load i8*, i8** %pat, align 8
  %arrayidx488 = getelementptr inbounds i8, i8* %208, i64 2
  %209 = load i8, i8* %arrayidx488, align 1
  %conv489 = zext i8 %209 to i32
  %cmp490 = icmp eq i32 204, %conv489
  br i1 %cmp490, label %cond.true492, label %cond.false523

cond.true492:                                     ; preds = %cond.true487
  %210 = load i8*, i8** %pat, align 8
  %arrayidx493 = getelementptr inbounds i8, i8* %210, i64 3
  %211 = load i8, i8* %arrayidx493, align 1
  %conv494 = zext i8 %211 to i32
  %cmp495 = icmp eq i32 136, %conv494
  br i1 %cmp495, label %cond.true497, label %cond.false522

cond.true497:                                     ; preds = %cond.true492
  %212 = load i8*, i8** %pat, align 8
  %arrayidx498 = getelementptr inbounds i8, i8* %212, i64 4
  %213 = load i8, i8* %arrayidx498, align 1
  %conv499 = zext i8 %213 to i32
  %cmp500 = icmp eq i32 204, %conv499
  br i1 %cmp500, label %cond.true502, label %cond.false510

cond.true502:                                     ; preds = %cond.true497
  %214 = load i8*, i8** %pat, align 8
  %arrayidx503 = getelementptr inbounds i8, i8* %214, i64 5
  %215 = load i8, i8* %arrayidx503, align 1
  %conv504 = zext i8 %215 to i32
  %and505 = and i32 %conv504, 254
  %cmp506 = icmp eq i32 %and505, 128
  br i1 %cmp506, label %cond.true508, label %cond.false509

cond.true508:                                     ; preds = %cond.true502
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false509:                                    ; preds = %cond.true502
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false510:                                    ; preds = %cond.true497
  %216 = load i8*, i8** %pat, align 8
  %arrayidx511 = getelementptr inbounds i8, i8* %216, i64 4
  %217 = load i8, i8* %arrayidx511, align 1
  %conv512 = zext i8 %217 to i32
  %cmp513 = icmp eq i32 205, %conv512
  br i1 %cmp513, label %land.lhs.true515, label %cond.false521

land.lhs.true515:                                 ; preds = %cond.false510
  %218 = load i8*, i8** %pat, align 8
  %arrayidx516 = getelementptr inbounds i8, i8* %218, i64 5
  %219 = load i8, i8* %arrayidx516, align 1
  %conv517 = zext i8 %219 to i32
  %cmp518 = icmp eq i32 130, %conv517
  br i1 %cmp518, label %cond.true520, label %cond.false521

cond.true520:                                     ; preds = %land.lhs.true515
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false521:                                    ; preds = %land.lhs.true515, %cond.false510
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false522:                                    ; preds = %cond.true492
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false523:                                    ; preds = %cond.true487
  %220 = load i8*, i8** %pat, align 8
  %arrayidx524 = getelementptr inbounds i8, i8* %220, i64 2
  %221 = load i8, i8* %arrayidx524, align 1
  %conv525 = zext i8 %221 to i32
  %cmp526 = icmp eq i32 205, %conv525
  br i1 %cmp526, label %land.lhs.true528, label %cond.false534

land.lhs.true528:                                 ; preds = %cond.false523
  %222 = load i8*, i8** %pat, align 8
  %arrayidx529 = getelementptr inbounds i8, i8* %222, i64 3
  %223 = load i8, i8* %arrayidx529, align 1
  %conv530 = zext i8 %223 to i32
  %cmp531 = icmp eq i32 130, %conv530
  br i1 %cmp531, label %cond.true533, label %cond.false534

cond.true533:                                     ; preds = %land.lhs.true528
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false534:                                    ; preds = %land.lhs.true528, %cond.false523
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false535:                                    ; preds = %cond.false482
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false536:                                    ; preds = %cond.false414
  %224 = load i8*, i8** %pat, align 8
  %arrayidx537 = getelementptr inbounds i8, i8* %224, i64 0
  %225 = load i8, i8* %arrayidx537, align 1
  %conv538 = zext i8 %225 to i32
  %cmp539 = icmp eq i32 207, %conv538
  br i1 %cmp539, label %cond.true541, label %cond.false698

cond.true541:                                     ; preds = %cond.false536
  %226 = load i8*, i8** %pat, align 8
  %arrayidx542 = getelementptr inbounds i8, i8* %226, i64 1
  %227 = load i8, i8* %arrayidx542, align 1
  %conv543 = zext i8 %227 to i32
  %cmp544 = icmp eq i32 129, %conv543
  br i1 %cmp544, label %cond.true546, label %cond.false558

cond.true546:                                     ; preds = %cond.true541
  %228 = load i8*, i8** %pat, align 8
  %arrayidx547 = getelementptr inbounds i8, i8* %228, i64 2
  %229 = load i8, i8* %arrayidx547, align 1
  %conv548 = zext i8 %229 to i32
  %cmp549 = icmp eq i32 204, %conv548
  br i1 %cmp549, label %land.lhs.true551, label %cond.false557

land.lhs.true551:                                 ; preds = %cond.true546
  %230 = load i8*, i8** %pat, align 8
  %arrayidx552 = getelementptr inbounds i8, i8* %230, i64 3
  %231 = load i8, i8* %arrayidx552, align 1
  %conv553 = zext i8 %231 to i32
  %cmp554 = icmp eq i32 147, %conv553
  br i1 %cmp554, label %cond.true556, label %cond.false557

cond.true556:                                     ; preds = %land.lhs.true551
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false557:                                    ; preds = %land.lhs.true551, %cond.true546
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false558:                                    ; preds = %cond.true541
  %232 = load i8*, i8** %pat, align 8
  %arrayidx559 = getelementptr inbounds i8, i8* %232, i64 1
  %233 = load i8, i8* %arrayidx559, align 1
  %conv560 = zext i8 %233 to i32
  %cmp561 = icmp eq i32 133, %conv560
  br i1 %cmp561, label %cond.true563, label %cond.false641

cond.true563:                                     ; preds = %cond.false558
  %234 = load i8*, i8** %pat, align 8
  %arrayidx564 = getelementptr inbounds i8, i8* %234, i64 2
  %235 = load i8, i8* %arrayidx564, align 1
  %conv565 = zext i8 %235 to i32
  %cmp566 = icmp eq i32 204, %conv565
  br i1 %cmp566, label %cond.true568, label %cond.false629

cond.true568:                                     ; preds = %cond.true563
  %236 = load i8*, i8** %pat, align 8
  %arrayidx569 = getelementptr inbounds i8, i8* %236, i64 3
  %237 = load i8, i8* %arrayidx569, align 1
  %conv570 = zext i8 %237 to i32
  %cmp571 = icmp eq i32 136, %conv570
  br i1 %cmp571, label %cond.true573, label %cond.false598

cond.true573:                                     ; preds = %cond.true568
  %238 = load i8*, i8** %pat, align 8
  %arrayidx574 = getelementptr inbounds i8, i8* %238, i64 4
  %239 = load i8, i8* %arrayidx574, align 1
  %conv575 = zext i8 %239 to i32
  %cmp576 = icmp eq i32 204, %conv575
  br i1 %cmp576, label %cond.true578, label %cond.false586

cond.true578:                                     ; preds = %cond.true573
  %240 = load i8*, i8** %pat, align 8
  %arrayidx579 = getelementptr inbounds i8, i8* %240, i64 5
  %241 = load i8, i8* %arrayidx579, align 1
  %conv580 = zext i8 %241 to i32
  %and581 = and i32 %conv580, 254
  %cmp582 = icmp eq i32 %and581, 128
  br i1 %cmp582, label %cond.true584, label %cond.false585

cond.true584:                                     ; preds = %cond.true578
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false585:                                    ; preds = %cond.true578
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false586:                                    ; preds = %cond.true573
  %242 = load i8*, i8** %pat, align 8
  %arrayidx587 = getelementptr inbounds i8, i8* %242, i64 4
  %243 = load i8, i8* %arrayidx587, align 1
  %conv588 = zext i8 %243 to i32
  %cmp589 = icmp eq i32 205, %conv588
  br i1 %cmp589, label %land.lhs.true591, label %cond.false597

land.lhs.true591:                                 ; preds = %cond.false586
  %244 = load i8*, i8** %pat, align 8
  %arrayidx592 = getelementptr inbounds i8, i8* %244, i64 5
  %245 = load i8, i8* %arrayidx592, align 1
  %conv593 = zext i8 %245 to i32
  %cmp594 = icmp eq i32 130, %conv593
  br i1 %cmp594, label %cond.true596, label %cond.false597

cond.true596:                                     ; preds = %land.lhs.true591
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false597:                                    ; preds = %land.lhs.true591, %cond.false586
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false598:                                    ; preds = %cond.true568
  %246 = load i8*, i8** %pat, align 8
  %arrayidx599 = getelementptr inbounds i8, i8* %246, i64 3
  %247 = load i8, i8* %arrayidx599, align 1
  %conv600 = zext i8 %247 to i32
  %cmp601 = icmp eq i32 147, %conv600
  br i1 %cmp601, label %cond.true603, label %cond.false628

cond.true603:                                     ; preds = %cond.false598
  %248 = load i8*, i8** %pat, align 8
  %arrayidx604 = getelementptr inbounds i8, i8* %248, i64 4
  %249 = load i8, i8* %arrayidx604, align 1
  %conv605 = zext i8 %249 to i32
  %cmp606 = icmp eq i32 204, %conv605
  br i1 %cmp606, label %cond.true608, label %cond.false616

cond.true608:                                     ; preds = %cond.true603
  %250 = load i8*, i8** %pat, align 8
  %arrayidx609 = getelementptr inbounds i8, i8* %250, i64 5
  %251 = load i8, i8* %arrayidx609, align 1
  %conv610 = zext i8 %251 to i32
  %and611 = and i32 %conv610, 254
  %cmp612 = icmp eq i32 %and611, 128
  br i1 %cmp612, label %cond.true614, label %cond.false615

cond.true614:                                     ; preds = %cond.true608
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false615:                                    ; preds = %cond.true608
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false616:                                    ; preds = %cond.true603
  %252 = load i8*, i8** %pat, align 8
  %arrayidx617 = getelementptr inbounds i8, i8* %252, i64 4
  %253 = load i8, i8* %arrayidx617, align 1
  %conv618 = zext i8 %253 to i32
  %cmp619 = icmp eq i32 205, %conv618
  br i1 %cmp619, label %land.lhs.true621, label %cond.false627

land.lhs.true621:                                 ; preds = %cond.false616
  %254 = load i8*, i8** %pat, align 8
  %arrayidx622 = getelementptr inbounds i8, i8* %254, i64 5
  %255 = load i8, i8* %arrayidx622, align 1
  %conv623 = zext i8 %255 to i32
  %cmp624 = icmp eq i32 130, %conv623
  br i1 %cmp624, label %cond.true626, label %cond.false627

cond.true626:                                     ; preds = %land.lhs.true621
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false627:                                    ; preds = %land.lhs.true621, %cond.false616
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false628:                                    ; preds = %cond.false598
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false629:                                    ; preds = %cond.true563
  %256 = load i8*, i8** %pat, align 8
  %arrayidx630 = getelementptr inbounds i8, i8* %256, i64 2
  %257 = load i8, i8* %arrayidx630, align 1
  %conv631 = zext i8 %257 to i32
  %cmp632 = icmp eq i32 205, %conv631
  br i1 %cmp632, label %land.lhs.true634, label %cond.false640

land.lhs.true634:                                 ; preds = %cond.false629
  %258 = load i8*, i8** %pat, align 8
  %arrayidx635 = getelementptr inbounds i8, i8* %258, i64 3
  %259 = load i8, i8* %arrayidx635, align 1
  %conv636 = zext i8 %259 to i32
  %cmp637 = icmp eq i32 130, %conv636
  br i1 %cmp637, label %cond.true639, label %cond.false640

cond.true639:                                     ; preds = %land.lhs.true634
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false640:                                    ; preds = %land.lhs.true634, %cond.false629
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false641:                                    ; preds = %cond.false558
  %260 = load i8*, i8** %pat, align 8
  %arrayidx642 = getelementptr inbounds i8, i8* %260, i64 1
  %261 = load i8, i8* %arrayidx642, align 1
  %conv643 = zext i8 %261 to i32
  %cmp644 = icmp eq i32 137, %conv643
  br i1 %cmp644, label %cond.true646, label %cond.false681

cond.true646:                                     ; preds = %cond.false641
  %262 = load i8*, i8** %pat, align 8
  %arrayidx647 = getelementptr inbounds i8, i8* %262, i64 2
  %263 = load i8, i8* %arrayidx647, align 1
  %conv648 = zext i8 %263 to i32
  %cmp649 = icmp eq i32 205, %conv648
  br i1 %cmp649, label %cond.true651, label %cond.false669

cond.true651:                                     ; preds = %cond.true646
  %264 = load i8*, i8** %pat, align 8
  %arrayidx652 = getelementptr inbounds i8, i8* %264, i64 3
  %265 = load i8, i8* %arrayidx652, align 1
  %conv653 = zext i8 %265 to i32
  %cmp654 = icmp eq i32 130, %conv653
  br i1 %cmp654, label %cond.true656, label %cond.false668

cond.true656:                                     ; preds = %cond.true651
  %266 = load i8*, i8** %pat, align 8
  %arrayidx657 = getelementptr inbounds i8, i8* %266, i64 4
  %267 = load i8, i8* %arrayidx657, align 1
  %conv658 = zext i8 %267 to i32
  %cmp659 = icmp eq i32 206, %conv658
  br i1 %cmp659, label %land.lhs.true661, label %cond.false667

land.lhs.true661:                                 ; preds = %cond.true656
  %268 = load i8*, i8** %pat, align 8
  %arrayidx662 = getelementptr inbounds i8, i8* %268, i64 5
  %269 = load i8, i8* %arrayidx662, align 1
  %conv663 = zext i8 %269 to i32
  %cmp664 = icmp eq i32 185, %conv663
  br i1 %cmp664, label %cond.true666, label %cond.false667

cond.true666:                                     ; preds = %land.lhs.true661
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false667:                                    ; preds = %land.lhs.true661, %cond.true656
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false668:                                    ; preds = %cond.true651
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false669:                                    ; preds = %cond.true646
  %270 = load i8*, i8** %pat, align 8
  %arrayidx670 = getelementptr inbounds i8, i8* %270, i64 2
  %271 = load i8, i8* %arrayidx670, align 1
  %conv671 = zext i8 %271 to i32
  %cmp672 = icmp eq i32 206, %conv671
  br i1 %cmp672, label %land.lhs.true674, label %cond.false680

land.lhs.true674:                                 ; preds = %cond.false669
  %272 = load i8*, i8** %pat, align 8
  %arrayidx675 = getelementptr inbounds i8, i8* %272, i64 3
  %273 = load i8, i8* %arrayidx675, align 1
  %conv676 = zext i8 %273 to i32
  %cmp677 = icmp eq i32 185, %conv676
  br i1 %cmp677, label %cond.true679, label %cond.false680

cond.true679:                                     ; preds = %land.lhs.true674
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false680:                                    ; preds = %land.lhs.true674, %cond.false669
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false681:                                    ; preds = %cond.false641
  %274 = load i8*, i8** %pat, align 8
  %arrayidx682 = getelementptr inbounds i8, i8* %274, i64 1
  %275 = load i8, i8* %arrayidx682, align 1
  %conv683 = zext i8 %275 to i32
  %cmp684 = icmp eq i32 142, %conv683
  br i1 %cmp684, label %land.lhs.true686, label %cond.false697

land.lhs.true686:                                 ; preds = %cond.false681
  %276 = load i8*, i8** %pat, align 8
  %arrayidx687 = getelementptr inbounds i8, i8* %276, i64 2
  %277 = load i8, i8* %arrayidx687, align 1
  %conv688 = zext i8 %277 to i32
  %cmp689 = icmp eq i32 206, %conv688
  br i1 %cmp689, label %land.lhs.true691, label %cond.false697

land.lhs.true691:                                 ; preds = %land.lhs.true686
  %278 = load i8*, i8** %pat, align 8
  %arrayidx692 = getelementptr inbounds i8, i8* %278, i64 3
  %279 = load i8, i8* %arrayidx692, align 1
  %conv693 = zext i8 %279 to i32
  %cmp694 = icmp eq i32 185, %conv693
  br i1 %cmp694, label %cond.true696, label %cond.false697

cond.true696:                                     ; preds = %land.lhs.true691
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false697:                                    ; preds = %land.lhs.true691, %land.lhs.true686, %cond.false681
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false698:                                    ; preds = %cond.false536
  %280 = load i8*, i8** %pat, align 8
  %arrayidx699 = getelementptr inbounds i8, i8* %280, i64 0
  %281 = load i8, i8* %arrayidx699, align 1
  %conv700 = zext i8 %281 to i32
  %cmp701 = icmp eq i32 213, %conv700
  br i1 %cmp701, label %cond.true703, label %cond.false765

cond.true703:                                     ; preds = %cond.false698
  %282 = load i8*, i8** %pat, align 8
  %arrayidx704 = getelementptr inbounds i8, i8* %282, i64 1
  %283 = load i8, i8* %arrayidx704, align 1
  %conv705 = zext i8 %283 to i32
  %cmp706 = icmp eq i32 165, %conv705
  br i1 %cmp706, label %cond.true708, label %cond.false720

cond.true708:                                     ; preds = %cond.true703
  %284 = load i8*, i8** %pat, align 8
  %arrayidx709 = getelementptr inbounds i8, i8* %284, i64 2
  %285 = load i8, i8* %arrayidx709, align 1
  %conv710 = zext i8 %285 to i32
  %cmp711 = icmp eq i32 214, %conv710
  br i1 %cmp711, label %land.lhs.true713, label %cond.false719

land.lhs.true713:                                 ; preds = %cond.true708
  %286 = load i8*, i8** %pat, align 8
  %arrayidx714 = getelementptr inbounds i8, i8* %286, i64 3
  %287 = load i8, i8* %arrayidx714, align 1
  %conv715 = zext i8 %287 to i32
  %cmp716 = icmp eq i32 130, %conv715
  br i1 %cmp716, label %cond.true718, label %cond.false719

cond.true718:                                     ; preds = %land.lhs.true713
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false719:                                    ; preds = %land.lhs.true713, %cond.true708
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false720:                                    ; preds = %cond.true703
  %288 = load i8*, i8** %pat, align 8
  %arrayidx721 = getelementptr inbounds i8, i8* %288, i64 1
  %289 = load i8, i8* %arrayidx721, align 1
  %conv722 = zext i8 %289 to i32
  %cmp723 = icmp eq i32 180, %conv722
  br i1 %cmp723, label %cond.true725, label %cond.false748

cond.true725:                                     ; preds = %cond.false720
  %290 = load i8*, i8** %pat, align 8
  %arrayidx726 = getelementptr inbounds i8, i8* %290, i64 2
  %291 = load i8, i8* %arrayidx726, align 1
  %conv727 = zext i8 %291 to i32
  %cmp728 = icmp eq i32 213, %conv727
  br i1 %cmp728, label %land.lhs.true730, label %cond.false747

land.lhs.true730:                                 ; preds = %cond.true725
  %292 = load i8*, i8** %pat, align 8
  %arrayidx731 = getelementptr inbounds i8, i8* %292, i64 3
  %293 = load i8, i8* %arrayidx731, align 1
  %conv732 = zext i8 %293 to i32
  %and733 = and i32 %conv732, 247
  %cmp734 = icmp eq i32 %and733, 165
  br i1 %cmp734, label %cond.true746, label %lor.lhs.false736

lor.lhs.false736:                                 ; preds = %land.lhs.true730
  %294 = load i8*, i8** %pat, align 8
  %arrayidx737 = getelementptr inbounds i8, i8* %294, i64 3
  %295 = load i8, i8* %arrayidx737, align 1
  %conv738 = zext i8 %295 to i32
  %cmp739 = icmp eq i32 %conv738, 171
  br i1 %cmp739, label %cond.true746, label %lor.lhs.false741

lor.lhs.false741:                                 ; preds = %lor.lhs.false736
  %296 = load i8*, i8** %pat, align 8
  %arrayidx742 = getelementptr inbounds i8, i8* %296, i64 3
  %297 = load i8, i8* %arrayidx742, align 1
  %conv743 = zext i8 %297 to i32
  %cmp744 = icmp eq i32 %conv743, 182
  br i1 %cmp744, label %cond.true746, label %cond.false747

cond.true746:                                     ; preds = %lor.lhs.false741, %lor.lhs.false736, %land.lhs.true730
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false747:                                    ; preds = %lor.lhs.false741, %cond.true725
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false748:                                    ; preds = %cond.false720
  %298 = load i8*, i8** %pat, align 8
  %arrayidx749 = getelementptr inbounds i8, i8* %298, i64 1
  %299 = load i8, i8* %arrayidx749, align 1
  %conv750 = zext i8 %299 to i32
  %cmp751 = icmp eq i32 190, %conv750
  br i1 %cmp751, label %land.lhs.true753, label %cond.false764

land.lhs.true753:                                 ; preds = %cond.false748
  %300 = load i8*, i8** %pat, align 8
  %arrayidx754 = getelementptr inbounds i8, i8* %300, i64 2
  %301 = load i8, i8* %arrayidx754, align 1
  %conv755 = zext i8 %301 to i32
  %cmp756 = icmp eq i32 213, %conv755
  br i1 %cmp756, label %land.lhs.true758, label %cond.false764

land.lhs.true758:                                 ; preds = %land.lhs.true753
  %302 = load i8*, i8** %pat, align 8
  %arrayidx759 = getelementptr inbounds i8, i8* %302, i64 3
  %303 = load i8, i8* %arrayidx759, align 1
  %conv760 = zext i8 %303 to i32
  %cmp761 = icmp eq i32 182, %conv760
  br i1 %cmp761, label %cond.true763, label %cond.false764

cond.true763:                                     ; preds = %land.lhs.true758
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false764:                                    ; preds = %land.lhs.true758, %land.lhs.true753, %cond.false748
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false765:                                    ; preds = %cond.false698
  %304 = load i8*, i8** %pat, align 8
  %arrayidx766 = getelementptr inbounds i8, i8* %304, i64 0
  %305 = load i8, i8* %arrayidx766, align 1
  %conv767 = zext i8 %305 to i32
  %cmp768 = icmp eq i32 225, %conv767
  br i1 %cmp768, label %cond.true770, label %cond.false827

cond.true770:                                     ; preds = %cond.false765
  %306 = load i8*, i8** %pat, align 8
  %arrayidx771 = getelementptr inbounds i8, i8* %306, i64 1
  %307 = load i8, i8* %arrayidx771, align 1
  %conv772 = zext i8 %307 to i32
  %cmp773 = icmp eq i32 188, %conv772
  br i1 %cmp773, label %cond.true775, label %cond.false793

cond.true775:                                     ; preds = %cond.true770
  %308 = load i8*, i8** %pat, align 8
  %arrayidx776 = getelementptr inbounds i8, i8* %308, i64 2
  %309 = load i8, i8* %arrayidx776, align 1
  %conv777 = zext i8 %309 to i32
  %and778 = and i32 %conv777, 216
  %cmp779 = icmp eq i32 %and778, 128
  br i1 %cmp779, label %land.lhs.true781, label %cond.false792

land.lhs.true781:                                 ; preds = %cond.true775
  %310 = load i8*, i8** %pat, align 8
  %arrayidx782 = getelementptr inbounds i8, i8* %310, i64 3
  %311 = load i8, i8* %arrayidx782, align 1
  %conv783 = zext i8 %311 to i32
  %cmp784 = icmp eq i32 206, %conv783
  br i1 %cmp784, label %land.lhs.true786, label %cond.false792

land.lhs.true786:                                 ; preds = %land.lhs.true781
  %312 = load i8*, i8** %pat, align 8
  %arrayidx787 = getelementptr inbounds i8, i8* %312, i64 4
  %313 = load i8, i8* %arrayidx787, align 1
  %conv788 = zext i8 %313 to i32
  %cmp789 = icmp eq i32 185, %conv788
  br i1 %cmp789, label %cond.true791, label %cond.false792

cond.true791:                                     ; preds = %land.lhs.true786
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false792:                                    ; preds = %land.lhs.true786, %land.lhs.true781, %cond.true775
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false793:                                    ; preds = %cond.true770
  %314 = load i8*, i8** %pat, align 8
  %arrayidx794 = getelementptr inbounds i8, i8* %314, i64 1
  %315 = load i8, i8* %arrayidx794, align 1
  %conv795 = zext i8 %315 to i32
  %cmp796 = icmp eq i32 189, %conv795
  br i1 %cmp796, label %land.lhs.true798, label %cond.false826

land.lhs.true798:                                 ; preds = %cond.false793
  %316 = load i8*, i8** %pat, align 8
  %arrayidx799 = getelementptr inbounds i8, i8* %316, i64 2
  %317 = load i8, i8* %arrayidx799, align 1
  %conv800 = zext i8 %317 to i32
  %and801 = and i32 %conv800, 248
  %cmp802 = icmp eq i32 %and801, 160
  br i1 %cmp802, label %land.lhs.true815, label %lor.lhs.false804

lor.lhs.false804:                                 ; preds = %land.lhs.true798
  %318 = load i8*, i8** %pat, align 8
  %arrayidx805 = getelementptr inbounds i8, i8* %318, i64 2
  %319 = load i8, i8* %arrayidx805, align 1
  %conv806 = zext i8 %319 to i32
  %and807 = and i32 %conv806, 251
  %cmp808 = icmp eq i32 %and807, 176
  br i1 %cmp808, label %land.lhs.true815, label %lor.lhs.false810

lor.lhs.false810:                                 ; preds = %lor.lhs.false804
  %320 = load i8*, i8** %pat, align 8
  %arrayidx811 = getelementptr inbounds i8, i8* %320, i64 2
  %321 = load i8, i8* %arrayidx811, align 1
  %conv812 = zext i8 %321 to i32
  %cmp813 = icmp eq i32 %conv812, 188
  br i1 %cmp813, label %land.lhs.true815, label %cond.false826

land.lhs.true815:                                 ; preds = %lor.lhs.false810, %lor.lhs.false804, %land.lhs.true798
  %322 = load i8*, i8** %pat, align 8
  %arrayidx816 = getelementptr inbounds i8, i8* %322, i64 3
  %323 = load i8, i8* %arrayidx816, align 1
  %conv817 = zext i8 %323 to i32
  %cmp818 = icmp eq i32 206, %conv817
  br i1 %cmp818, label %land.lhs.true820, label %cond.false826

land.lhs.true820:                                 ; preds = %land.lhs.true815
  %324 = load i8*, i8** %pat, align 8
  %arrayidx821 = getelementptr inbounds i8, i8* %324, i64 4
  %325 = load i8, i8* %arrayidx821, align 1
  %conv822 = zext i8 %325 to i32
  %cmp823 = icmp eq i32 185, %conv822
  br i1 %cmp823, label %cond.true825, label %cond.false826

cond.true825:                                     ; preds = %land.lhs.true820
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false826:                                    ; preds = %land.lhs.true820, %land.lhs.true815, %lor.lhs.false810, %cond.false793
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false827:                                    ; preds = %cond.false765
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false828:                                    ; preds = %land.lhs.true214
  %326 = load i8*, i8** %pat_end, align 8
  %327 = load i8*, i8** %pat, align 8
  %sub.ptr.lhs.cast829 = ptrtoint i8* %326 to i64
  %sub.ptr.rhs.cast830 = ptrtoint i8* %327 to i64
  %sub.ptr.sub831 = sub i64 %sub.ptr.lhs.cast829, %sub.ptr.rhs.cast830
  %cmp832 = icmp sgt i64 %sub.ptr.sub831, 4
  br i1 %cmp832, label %cond.true834, label %cond.false1332

cond.true834:                                     ; preds = %cond.false828
  %328 = load i8*, i8** %pat, align 8
  %arrayidx835 = getelementptr inbounds i8, i8* %328, i64 0
  %329 = load i8, i8* %arrayidx835, align 1
  %conv836 = zext i8 %329 to i32
  %cmp837 = icmp eq i32 97, %conv836
  br i1 %cmp837, label %cond.true839, label %cond.false851

cond.true839:                                     ; preds = %cond.true834
  %330 = load i8*, i8** %pat, align 8
  %arrayidx840 = getelementptr inbounds i8, i8* %330, i64 1
  %331 = load i8, i8* %arrayidx840, align 1
  %conv841 = zext i8 %331 to i32
  %cmp842 = icmp eq i32 202, %conv841
  br i1 %cmp842, label %land.lhs.true844, label %cond.false850

land.lhs.true844:                                 ; preds = %cond.true839
  %332 = load i8*, i8** %pat, align 8
  %arrayidx845 = getelementptr inbounds i8, i8* %332, i64 2
  %333 = load i8, i8* %arrayidx845, align 1
  %conv846 = zext i8 %333 to i32
  %cmp847 = icmp eq i32 190, %conv846
  br i1 %cmp847, label %cond.true849, label %cond.false850

cond.true849:                                     ; preds = %land.lhs.true844
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false850:                                    ; preds = %land.lhs.true844, %cond.true839
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false851:                                    ; preds = %cond.true834
  %334 = load i8*, i8** %pat, align 8
  %arrayidx852 = getelementptr inbounds i8, i8* %334, i64 0
  %335 = load i8, i8* %arrayidx852, align 1
  %conv853 = zext i8 %335 to i32
  %cmp854 = icmp eq i32 102, %conv853
  br i1 %cmp854, label %cond.true856, label %cond.false885

cond.true856:                                     ; preds = %cond.false851
  %336 = load i8*, i8** %pat, align 8
  %arrayidx857 = getelementptr inbounds i8, i8* %336, i64 1
  %337 = load i8, i8* %arrayidx857, align 1
  %conv858 = zext i8 %337 to i32
  %cmp859 = icmp eq i32 102, %conv858
  br i1 %cmp859, label %cond.true861, label %cond.false873

cond.true861:                                     ; preds = %cond.true856
  %338 = load i8*, i8** %pat, align 8
  %arrayidx862 = getelementptr inbounds i8, i8* %338, i64 2
  %339 = load i8, i8* %arrayidx862, align 1
  %conv863 = zext i8 %339 to i32
  %cmp864 = icmp eq i32 105, %conv863
  br i1 %cmp864, label %cond.true871, label %lor.lhs.false866

lor.lhs.false866:                                 ; preds = %cond.true861
  %340 = load i8*, i8** %pat, align 8
  %arrayidx867 = getelementptr inbounds i8, i8* %340, i64 2
  %341 = load i8, i8* %arrayidx867, align 1
  %conv868 = zext i8 %341 to i32
  %cmp869 = icmp eq i32 108, %conv868
  br i1 %cmp869, label %cond.true871, label %cond.false872

cond.true871:                                     ; preds = %lor.lhs.false866, %cond.true861
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false872:                                    ; preds = %lor.lhs.false866
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false873:                                    ; preds = %cond.true856
  %342 = load i8*, i8** %pat, align 8
  %arrayidx874 = getelementptr inbounds i8, i8* %342, i64 1
  %343 = load i8, i8* %arrayidx874, align 1
  %conv875 = zext i8 %343 to i32
  %cmp876 = icmp eq i32 105, %conv875
  br i1 %cmp876, label %cond.true883, label %lor.lhs.false878

lor.lhs.false878:                                 ; preds = %cond.false873
  %344 = load i8*, i8** %pat, align 8
  %arrayidx879 = getelementptr inbounds i8, i8* %344, i64 1
  %345 = load i8, i8* %arrayidx879, align 1
  %conv880 = zext i8 %345 to i32
  %cmp881 = icmp eq i32 108, %conv880
  br i1 %cmp881, label %cond.true883, label %cond.false884

cond.true883:                                     ; preds = %lor.lhs.false878, %cond.false873
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false884:                                    ; preds = %lor.lhs.false878
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false885:                                    ; preds = %cond.false851
  %346 = load i8*, i8** %pat, align 8
  %arrayidx886 = getelementptr inbounds i8, i8* %346, i64 0
  %347 = load i8, i8* %arrayidx886, align 1
  %conv887 = zext i8 %347 to i32
  %cmp888 = icmp eq i32 104, %conv887
  br i1 %cmp888, label %cond.true890, label %cond.false902

cond.true890:                                     ; preds = %cond.false885
  %348 = load i8*, i8** %pat, align 8
  %arrayidx891 = getelementptr inbounds i8, i8* %348, i64 1
  %349 = load i8, i8* %arrayidx891, align 1
  %conv892 = zext i8 %349 to i32
  %cmp893 = icmp eq i32 204, %conv892
  br i1 %cmp893, label %land.lhs.true895, label %cond.false901

land.lhs.true895:                                 ; preds = %cond.true890
  %350 = load i8*, i8** %pat, align 8
  %arrayidx896 = getelementptr inbounds i8, i8* %350, i64 2
  %351 = load i8, i8* %arrayidx896, align 1
  %conv897 = zext i8 %351 to i32
  %cmp898 = icmp eq i32 177, %conv897
  br i1 %cmp898, label %cond.true900, label %cond.false901

cond.true900:                                     ; preds = %land.lhs.true895
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false901:                                    ; preds = %land.lhs.true895, %cond.true890
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false902:                                    ; preds = %cond.false885
  %352 = load i8*, i8** %pat, align 8
  %arrayidx903 = getelementptr inbounds i8, i8* %352, i64 0
  %353 = load i8, i8* %arrayidx903, align 1
  %conv904 = zext i8 %353 to i32
  %cmp905 = icmp eq i32 105, %conv904
  br i1 %cmp905, label %cond.true907, label %cond.false919

cond.true907:                                     ; preds = %cond.false902
  %354 = load i8*, i8** %pat, align 8
  %arrayidx908 = getelementptr inbounds i8, i8* %354, i64 1
  %355 = load i8, i8* %arrayidx908, align 1
  %conv909 = zext i8 %355 to i32
  %cmp910 = icmp eq i32 204, %conv909
  br i1 %cmp910, label %land.lhs.true912, label %cond.false918

land.lhs.true912:                                 ; preds = %cond.true907
  %356 = load i8*, i8** %pat, align 8
  %arrayidx913 = getelementptr inbounds i8, i8* %356, i64 2
  %357 = load i8, i8* %arrayidx913, align 1
  %conv914 = zext i8 %357 to i32
  %cmp915 = icmp eq i32 135, %conv914
  br i1 %cmp915, label %cond.true917, label %cond.false918

cond.true917:                                     ; preds = %land.lhs.true912
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false918:                                    ; preds = %land.lhs.true912, %cond.true907
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false919:                                    ; preds = %cond.false902
  %358 = load i8*, i8** %pat, align 8
  %arrayidx920 = getelementptr inbounds i8, i8* %358, i64 0
  %359 = load i8, i8* %arrayidx920, align 1
  %conv921 = zext i8 %359 to i32
  %cmp922 = icmp eq i32 106, %conv921
  br i1 %cmp922, label %cond.true924, label %cond.false936

cond.true924:                                     ; preds = %cond.false919
  %360 = load i8*, i8** %pat, align 8
  %arrayidx925 = getelementptr inbounds i8, i8* %360, i64 1
  %361 = load i8, i8* %arrayidx925, align 1
  %conv926 = zext i8 %361 to i32
  %cmp927 = icmp eq i32 204, %conv926
  br i1 %cmp927, label %land.lhs.true929, label %cond.false935

land.lhs.true929:                                 ; preds = %cond.true924
  %362 = load i8*, i8** %pat, align 8
  %arrayidx930 = getelementptr inbounds i8, i8* %362, i64 2
  %363 = load i8, i8* %arrayidx930, align 1
  %conv931 = zext i8 %363 to i32
  %cmp932 = icmp eq i32 140, %conv931
  br i1 %cmp932, label %cond.true934, label %cond.false935

cond.true934:                                     ; preds = %land.lhs.true929
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false935:                                    ; preds = %land.lhs.true929, %cond.true924
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false936:                                    ; preds = %cond.false919
  %364 = load i8*, i8** %pat, align 8
  %arrayidx937 = getelementptr inbounds i8, i8* %364, i64 0
  %365 = load i8, i8* %arrayidx937, align 1
  %conv938 = zext i8 %365 to i32
  %cmp939 = icmp eq i32 115, %conv938
  br i1 %cmp939, label %cond.true941, label %cond.false953

cond.true941:                                     ; preds = %cond.false936
  %366 = load i8*, i8** %pat, align 8
  %arrayidx942 = getelementptr inbounds i8, i8* %366, i64 1
  %367 = load i8, i8* %arrayidx942, align 1
  %conv943 = zext i8 %367 to i32
  %cmp944 = icmp eq i32 115, %conv943
  br i1 %cmp944, label %cond.true951, label %lor.lhs.false946

lor.lhs.false946:                                 ; preds = %cond.true941
  %368 = load i8*, i8** %pat, align 8
  %arrayidx947 = getelementptr inbounds i8, i8* %368, i64 1
  %369 = load i8, i8* %arrayidx947, align 1
  %conv948 = zext i8 %369 to i32
  %cmp949 = icmp eq i32 116, %conv948
  br i1 %cmp949, label %cond.true951, label %cond.false952

cond.true951:                                     ; preds = %lor.lhs.false946, %cond.true941
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false952:                                    ; preds = %lor.lhs.false946
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false953:                                    ; preds = %cond.false936
  %370 = load i8*, i8** %pat, align 8
  %arrayidx954 = getelementptr inbounds i8, i8* %370, i64 0
  %371 = load i8, i8* %arrayidx954, align 1
  %conv955 = zext i8 %371 to i32
  %cmp956 = icmp eq i32 116, %conv955
  br i1 %cmp956, label %cond.true958, label %cond.false970

cond.true958:                                     ; preds = %cond.false953
  %372 = load i8*, i8** %pat, align 8
  %arrayidx959 = getelementptr inbounds i8, i8* %372, i64 1
  %373 = load i8, i8* %arrayidx959, align 1
  %conv960 = zext i8 %373 to i32
  %cmp961 = icmp eq i32 204, %conv960
  br i1 %cmp961, label %land.lhs.true963, label %cond.false969

land.lhs.true963:                                 ; preds = %cond.true958
  %374 = load i8*, i8** %pat, align 8
  %arrayidx964 = getelementptr inbounds i8, i8* %374, i64 2
  %375 = load i8, i8* %arrayidx964, align 1
  %conv965 = zext i8 %375 to i32
  %cmp966 = icmp eq i32 136, %conv965
  br i1 %cmp966, label %cond.true968, label %cond.false969

cond.true968:                                     ; preds = %land.lhs.true963
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false969:                                    ; preds = %land.lhs.true963, %cond.true958
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false970:                                    ; preds = %cond.false953
  %376 = load i8*, i8** %pat, align 8
  %arrayidx971 = getelementptr inbounds i8, i8* %376, i64 0
  %377 = load i8, i8* %arrayidx971, align 1
  %conv972 = zext i8 %377 to i32
  %cmp973 = icmp eq i32 119, %conv972
  br i1 %cmp973, label %cond.true980, label %lor.lhs.false975

lor.lhs.false975:                                 ; preds = %cond.false970
  %378 = load i8*, i8** %pat, align 8
  %arrayidx976 = getelementptr inbounds i8, i8* %378, i64 0
  %379 = load i8, i8* %arrayidx976, align 1
  %conv977 = zext i8 %379 to i32
  %cmp978 = icmp eq i32 121, %conv977
  br i1 %cmp978, label %cond.true980, label %cond.false992

cond.true980:                                     ; preds = %lor.lhs.false975, %cond.false970
  %380 = load i8*, i8** %pat, align 8
  %arrayidx981 = getelementptr inbounds i8, i8* %380, i64 1
  %381 = load i8, i8* %arrayidx981, align 1
  %conv982 = zext i8 %381 to i32
  %cmp983 = icmp eq i32 204, %conv982
  br i1 %cmp983, label %land.lhs.true985, label %cond.false991

land.lhs.true985:                                 ; preds = %cond.true980
  %382 = load i8*, i8** %pat, align 8
  %arrayidx986 = getelementptr inbounds i8, i8* %382, i64 2
  %383 = load i8, i8* %arrayidx986, align 1
  %conv987 = zext i8 %383 to i32
  %cmp988 = icmp eq i32 138, %conv987
  br i1 %cmp988, label %cond.true990, label %cond.false991

cond.true990:                                     ; preds = %land.lhs.true985
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false991:                                    ; preds = %land.lhs.true985, %cond.true980
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false992:                                    ; preds = %lor.lhs.false975
  %384 = load i8*, i8** %pat, align 8
  %arrayidx993 = getelementptr inbounds i8, i8* %384, i64 0
  %385 = load i8, i8* %arrayidx993, align 1
  %conv994 = zext i8 %385 to i32
  %cmp995 = icmp eq i32 197, %conv994
  br i1 %cmp995, label %cond.true997, label %cond.false1014

cond.true997:                                     ; preds = %cond.false992
  %386 = load i8*, i8** %pat, align 8
  %arrayidx998 = getelementptr inbounds i8, i8* %386, i64 1
  %387 = load i8, i8* %arrayidx998, align 1
  %conv999 = zext i8 %387 to i32
  %cmp1000 = icmp eq i32 191, %conv999
  br i1 %cmp1000, label %land.lhs.true1002, label %cond.false1013

land.lhs.true1002:                                ; preds = %cond.true997
  %388 = load i8*, i8** %pat, align 8
  %arrayidx1003 = getelementptr inbounds i8, i8* %388, i64 2
  %389 = load i8, i8* %arrayidx1003, align 1
  %conv1004 = zext i8 %389 to i32
  %cmp1005 = icmp eq i32 197, %conv1004
  br i1 %cmp1005, label %land.lhs.true1007, label %cond.false1013

land.lhs.true1007:                                ; preds = %land.lhs.true1002
  %390 = load i8*, i8** %pat, align 8
  %arrayidx1008 = getelementptr inbounds i8, i8* %390, i64 3
  %391 = load i8, i8* %arrayidx1008, align 1
  %conv1009 = zext i8 %391 to i32
  %cmp1010 = icmp eq i32 191, %conv1009
  br i1 %cmp1010, label %cond.true1012, label %cond.false1013

cond.true1012:                                    ; preds = %land.lhs.true1007
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false1013:                                   ; preds = %land.lhs.true1007, %land.lhs.true1002, %cond.true997
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false1014:                                   ; preds = %cond.false992
  %392 = load i8*, i8** %pat, align 8
  %arrayidx1015 = getelementptr inbounds i8, i8* %392, i64 0
  %393 = load i8, i8* %arrayidx1015, align 1
  %conv1016 = zext i8 %393 to i32
  %cmp1017 = icmp eq i32 202, %conv1016
  br i1 %cmp1017, label %cond.true1019, label %cond.false1031

cond.true1019:                                    ; preds = %cond.false1014
  %394 = load i8*, i8** %pat, align 8
  %arrayidx1020 = getelementptr inbounds i8, i8* %394, i64 1
  %395 = load i8, i8* %arrayidx1020, align 1
  %conv1021 = zext i8 %395 to i32
  %cmp1022 = icmp eq i32 188, %conv1021
  br i1 %cmp1022, label %land.lhs.true1024, label %cond.false1030

land.lhs.true1024:                                ; preds = %cond.true1019
  %396 = load i8*, i8** %pat, align 8
  %arrayidx1025 = getelementptr inbounds i8, i8* %396, i64 2
  %397 = load i8, i8* %arrayidx1025, align 1
  %conv1026 = zext i8 %397 to i32
  %cmp1027 = icmp eq i32 110, %conv1026
  br i1 %cmp1027, label %cond.true1029, label %cond.false1030

cond.true1029:                                    ; preds = %land.lhs.true1024
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false1030:                                   ; preds = %land.lhs.true1024, %cond.true1019
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false1031:                                   ; preds = %cond.false1014
  %398 = load i8*, i8** %pat, align 8
  %arrayidx1032 = getelementptr inbounds i8, i8* %398, i64 0
  %399 = load i8, i8* %arrayidx1032, align 1
  %conv1033 = zext i8 %399 to i32
  %cmp1034 = icmp eq i32 206, %conv1033
  br i1 %cmp1034, label %cond.true1036, label %cond.false1105

cond.true1036:                                    ; preds = %cond.false1031
  %400 = load i8*, i8** %pat, align 8
  %arrayidx1037 = getelementptr inbounds i8, i8* %400, i64 1
  %401 = load i8, i8* %arrayidx1037, align 1
  %conv1038 = zext i8 %401 to i32
  %and1039 = and i32 %conv1038, 253
  %cmp1040 = icmp eq i32 %and1039, 172
  br i1 %cmp1040, label %cond.true1042, label %cond.false1054

cond.true1042:                                    ; preds = %cond.true1036
  %402 = load i8*, i8** %pat, align 8
  %arrayidx1043 = getelementptr inbounds i8, i8* %402, i64 2
  %403 = load i8, i8* %arrayidx1043, align 1
  %conv1044 = zext i8 %403 to i32
  %cmp1045 = icmp eq i32 206, %conv1044
  br i1 %cmp1045, label %land.lhs.true1047, label %cond.false1053

land.lhs.true1047:                                ; preds = %cond.true1042
  %404 = load i8*, i8** %pat, align 8
  %arrayidx1048 = getelementptr inbounds i8, i8* %404, i64 3
  %405 = load i8, i8* %arrayidx1048, align 1
  %conv1049 = zext i8 %405 to i32
  %cmp1050 = icmp eq i32 185, %conv1049
  br i1 %cmp1050, label %cond.true1052, label %cond.false1053

cond.true1052:                                    ; preds = %land.lhs.true1047
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false1053:                                   ; preds = %land.lhs.true1047, %cond.true1042
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false1054:                                   ; preds = %cond.true1036
  %406 = load i8*, i8** %pat, align 8
  %arrayidx1055 = getelementptr inbounds i8, i8* %406, i64 1
  %407 = load i8, i8* %arrayidx1055, align 1
  %conv1056 = zext i8 %407 to i32
  %cmp1057 = icmp eq i32 177, %conv1056
  br i1 %cmp1057, label %cond.true1064, label %lor.lhs.false1059

lor.lhs.false1059:                                ; preds = %cond.false1054
  %408 = load i8*, i8** %pat, align 8
  %arrayidx1060 = getelementptr inbounds i8, i8* %408, i64 1
  %409 = load i8, i8* %arrayidx1060, align 1
  %conv1061 = zext i8 %409 to i32
  %cmp1062 = icmp eq i32 183, %conv1061
  br i1 %cmp1062, label %cond.true1064, label %cond.false1088

cond.true1064:                                    ; preds = %lor.lhs.false1059, %cond.false1054
  %410 = load i8*, i8** %pat, align 8
  %arrayidx1065 = getelementptr inbounds i8, i8* %410, i64 2
  %411 = load i8, i8* %arrayidx1065, align 1
  %conv1066 = zext i8 %411 to i32
  %cmp1067 = icmp eq i32 205, %conv1066
  br i1 %cmp1067, label %cond.true1069, label %cond.false1076

cond.true1069:                                    ; preds = %cond.true1064
  %412 = load i8*, i8** %pat, align 8
  %arrayidx1070 = getelementptr inbounds i8, i8* %412, i64 3
  %413 = load i8, i8* %arrayidx1070, align 1
  %conv1071 = zext i8 %413 to i32
  %cmp1072 = icmp eq i32 130, %conv1071
  br i1 %cmp1072, label %cond.true1074, label %cond.false1075

cond.true1074:                                    ; preds = %cond.true1069
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false1075:                                   ; preds = %cond.true1069
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false1076:                                   ; preds = %cond.true1064
  %414 = load i8*, i8** %pat, align 8
  %arrayidx1077 = getelementptr inbounds i8, i8* %414, i64 2
  %415 = load i8, i8* %arrayidx1077, align 1
  %conv1078 = zext i8 %415 to i32
  %cmp1079 = icmp eq i32 206, %conv1078
  br i1 %cmp1079, label %land.lhs.true1081, label %cond.false1087

land.lhs.true1081:                                ; preds = %cond.false1076
  %416 = load i8*, i8** %pat, align 8
  %arrayidx1082 = getelementptr inbounds i8, i8* %416, i64 3
  %417 = load i8, i8* %arrayidx1082, align 1
  %conv1083 = zext i8 %417 to i32
  %cmp1084 = icmp eq i32 185, %conv1083
  br i1 %cmp1084, label %cond.true1086, label %cond.false1087

cond.true1086:                                    ; preds = %land.lhs.true1081
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false1087:                                   ; preds = %land.lhs.true1081, %cond.false1076
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false1088:                                   ; preds = %lor.lhs.false1059
  %418 = load i8*, i8** %pat, align 8
  %arrayidx1089 = getelementptr inbounds i8, i8* %418, i64 1
  %419 = load i8, i8* %arrayidx1089, align 1
  %conv1090 = zext i8 %419 to i32
  %cmp1091 = icmp eq i32 185, %conv1090
  br i1 %cmp1091, label %land.lhs.true1093, label %cond.false1104

land.lhs.true1093:                                ; preds = %cond.false1088
  %420 = load i8*, i8** %pat, align 8
  %arrayidx1094 = getelementptr inbounds i8, i8* %420, i64 2
  %421 = load i8, i8* %arrayidx1094, align 1
  %conv1095 = zext i8 %421 to i32
  %cmp1096 = icmp eq i32 205, %conv1095
  br i1 %cmp1096, label %land.lhs.true1098, label %cond.false1104

land.lhs.true1098:                                ; preds = %land.lhs.true1093
  %422 = load i8*, i8** %pat, align 8
  %arrayidx1099 = getelementptr inbounds i8, i8* %422, i64 3
  %423 = load i8, i8* %arrayidx1099, align 1
  %conv1100 = zext i8 %423 to i32
  %cmp1101 = icmp eq i32 130, %conv1100
  br i1 %cmp1101, label %cond.true1103, label %cond.false1104

cond.true1103:                                    ; preds = %land.lhs.true1098
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false1104:                                   ; preds = %land.lhs.true1098, %land.lhs.true1093, %cond.false1088
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false1105:                                   ; preds = %cond.false1031
  %424 = load i8*, i8** %pat, align 8
  %arrayidx1106 = getelementptr inbounds i8, i8* %424, i64 0
  %425 = load i8, i8* %arrayidx1106, align 1
  %conv1107 = zext i8 %425 to i32
  %cmp1108 = icmp eq i32 207, %conv1107
  br i1 %cmp1108, label %cond.true1110, label %cond.false1202

cond.true1110:                                    ; preds = %cond.false1105
  %426 = load i8*, i8** %pat, align 8
  %arrayidx1111 = getelementptr inbounds i8, i8* %426, i64 1
  %427 = load i8, i8* %arrayidx1111, align 1
  %conv1112 = zext i8 %427 to i32
  %cmp1113 = icmp eq i32 129, %conv1112
  br i1 %cmp1113, label %cond.true1115, label %cond.false1127

cond.true1115:                                    ; preds = %cond.true1110
  %428 = load i8*, i8** %pat, align 8
  %arrayidx1116 = getelementptr inbounds i8, i8* %428, i64 2
  %429 = load i8, i8* %arrayidx1116, align 1
  %conv1117 = zext i8 %429 to i32
  %cmp1118 = icmp eq i32 204, %conv1117
  br i1 %cmp1118, label %land.lhs.true1120, label %cond.false1126

land.lhs.true1120:                                ; preds = %cond.true1115
  %430 = load i8*, i8** %pat, align 8
  %arrayidx1121 = getelementptr inbounds i8, i8* %430, i64 3
  %431 = load i8, i8* %arrayidx1121, align 1
  %conv1122 = zext i8 %431 to i32
  %cmp1123 = icmp eq i32 147, %conv1122
  br i1 %cmp1123, label %cond.true1125, label %cond.false1126

cond.true1125:                                    ; preds = %land.lhs.true1120
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false1126:                                   ; preds = %land.lhs.true1120, %cond.true1115
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false1127:                                   ; preds = %cond.true1110
  %432 = load i8*, i8** %pat, align 8
  %arrayidx1128 = getelementptr inbounds i8, i8* %432, i64 1
  %433 = load i8, i8* %arrayidx1128, align 1
  %conv1129 = zext i8 %433 to i32
  %cmp1130 = icmp eq i32 133, %conv1129
  br i1 %cmp1130, label %cond.true1132, label %cond.false1156

cond.true1132:                                    ; preds = %cond.false1127
  %434 = load i8*, i8** %pat, align 8
  %arrayidx1133 = getelementptr inbounds i8, i8* %434, i64 2
  %435 = load i8, i8* %arrayidx1133, align 1
  %conv1134 = zext i8 %435 to i32
  %cmp1135 = icmp eq i32 204, %conv1134
  br i1 %cmp1135, label %cond.true1137, label %cond.false1144

cond.true1137:                                    ; preds = %cond.true1132
  %436 = load i8*, i8** %pat, align 8
  %arrayidx1138 = getelementptr inbounds i8, i8* %436, i64 3
  %437 = load i8, i8* %arrayidx1138, align 1
  %conv1139 = zext i8 %437 to i32
  %cmp1140 = icmp eq i32 147, %conv1139
  br i1 %cmp1140, label %cond.true1142, label %cond.false1143

cond.true1142:                                    ; preds = %cond.true1137
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false1143:                                   ; preds = %cond.true1137
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false1144:                                   ; preds = %cond.true1132
  %438 = load i8*, i8** %pat, align 8
  %arrayidx1145 = getelementptr inbounds i8, i8* %438, i64 2
  %439 = load i8, i8* %arrayidx1145, align 1
  %conv1146 = zext i8 %439 to i32
  %cmp1147 = icmp eq i32 205, %conv1146
  br i1 %cmp1147, label %land.lhs.true1149, label %cond.false1155

land.lhs.true1149:                                ; preds = %cond.false1144
  %440 = load i8*, i8** %pat, align 8
  %arrayidx1150 = getelementptr inbounds i8, i8* %440, i64 3
  %441 = load i8, i8* %arrayidx1150, align 1
  %conv1151 = zext i8 %441 to i32
  %cmp1152 = icmp eq i32 130, %conv1151
  br i1 %cmp1152, label %cond.true1154, label %cond.false1155

cond.true1154:                                    ; preds = %land.lhs.true1149
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false1155:                                   ; preds = %land.lhs.true1149, %cond.false1144
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false1156:                                   ; preds = %cond.false1127
  %442 = load i8*, i8** %pat, align 8
  %arrayidx1157 = getelementptr inbounds i8, i8* %442, i64 1
  %443 = load i8, i8* %arrayidx1157, align 1
  %conv1158 = zext i8 %443 to i32
  %cmp1159 = icmp eq i32 137, %conv1158
  br i1 %cmp1159, label %cond.true1161, label %cond.false1185

cond.true1161:                                    ; preds = %cond.false1156
  %444 = load i8*, i8** %pat, align 8
  %arrayidx1162 = getelementptr inbounds i8, i8* %444, i64 2
  %445 = load i8, i8* %arrayidx1162, align 1
  %conv1163 = zext i8 %445 to i32
  %cmp1164 = icmp eq i32 205, %conv1163
  br i1 %cmp1164, label %cond.true1166, label %cond.false1173

cond.true1166:                                    ; preds = %cond.true1161
  %446 = load i8*, i8** %pat, align 8
  %arrayidx1167 = getelementptr inbounds i8, i8* %446, i64 3
  %447 = load i8, i8* %arrayidx1167, align 1
  %conv1168 = zext i8 %447 to i32
  %cmp1169 = icmp eq i32 130, %conv1168
  br i1 %cmp1169, label %cond.true1171, label %cond.false1172

cond.true1171:                                    ; preds = %cond.true1166
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false1172:                                   ; preds = %cond.true1166
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false1173:                                   ; preds = %cond.true1161
  %448 = load i8*, i8** %pat, align 8
  %arrayidx1174 = getelementptr inbounds i8, i8* %448, i64 2
  %449 = load i8, i8* %arrayidx1174, align 1
  %conv1175 = zext i8 %449 to i32
  %cmp1176 = icmp eq i32 206, %conv1175
  br i1 %cmp1176, label %land.lhs.true1178, label %cond.false1184

land.lhs.true1178:                                ; preds = %cond.false1173
  %450 = load i8*, i8** %pat, align 8
  %arrayidx1179 = getelementptr inbounds i8, i8* %450, i64 3
  %451 = load i8, i8* %arrayidx1179, align 1
  %conv1180 = zext i8 %451 to i32
  %cmp1181 = icmp eq i32 185, %conv1180
  br i1 %cmp1181, label %cond.true1183, label %cond.false1184

cond.true1183:                                    ; preds = %land.lhs.true1178
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false1184:                                   ; preds = %land.lhs.true1178, %cond.false1173
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false1185:                                   ; preds = %cond.false1156
  %452 = load i8*, i8** %pat, align 8
  %arrayidx1186 = getelementptr inbounds i8, i8* %452, i64 1
  %453 = load i8, i8* %arrayidx1186, align 1
  %conv1187 = zext i8 %453 to i32
  %cmp1188 = icmp eq i32 142, %conv1187
  br i1 %cmp1188, label %land.lhs.true1190, label %cond.false1201

land.lhs.true1190:                                ; preds = %cond.false1185
  %454 = load i8*, i8** %pat, align 8
  %arrayidx1191 = getelementptr inbounds i8, i8* %454, i64 2
  %455 = load i8, i8* %arrayidx1191, align 1
  %conv1192 = zext i8 %455 to i32
  %cmp1193 = icmp eq i32 206, %conv1192
  br i1 %cmp1193, label %land.lhs.true1195, label %cond.false1201

land.lhs.true1195:                                ; preds = %land.lhs.true1190
  %456 = load i8*, i8** %pat, align 8
  %arrayidx1196 = getelementptr inbounds i8, i8* %456, i64 3
  %457 = load i8, i8* %arrayidx1196, align 1
  %conv1197 = zext i8 %457 to i32
  %cmp1198 = icmp eq i32 185, %conv1197
  br i1 %cmp1198, label %cond.true1200, label %cond.false1201

cond.true1200:                                    ; preds = %land.lhs.true1195
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false1201:                                   ; preds = %land.lhs.true1195, %land.lhs.true1190, %cond.false1185
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false1202:                                   ; preds = %cond.false1105
  %458 = load i8*, i8** %pat, align 8
  %arrayidx1203 = getelementptr inbounds i8, i8* %458, i64 0
  %459 = load i8, i8* %arrayidx1203, align 1
  %conv1204 = zext i8 %459 to i32
  %cmp1205 = icmp eq i32 213, %conv1204
  br i1 %cmp1205, label %cond.true1207, label %cond.false1269

cond.true1207:                                    ; preds = %cond.false1202
  %460 = load i8*, i8** %pat, align 8
  %arrayidx1208 = getelementptr inbounds i8, i8* %460, i64 1
  %461 = load i8, i8* %arrayidx1208, align 1
  %conv1209 = zext i8 %461 to i32
  %cmp1210 = icmp eq i32 165, %conv1209
  br i1 %cmp1210, label %cond.true1212, label %cond.false1224

cond.true1212:                                    ; preds = %cond.true1207
  %462 = load i8*, i8** %pat, align 8
  %arrayidx1213 = getelementptr inbounds i8, i8* %462, i64 2
  %463 = load i8, i8* %arrayidx1213, align 1
  %conv1214 = zext i8 %463 to i32
  %cmp1215 = icmp eq i32 214, %conv1214
  br i1 %cmp1215, label %land.lhs.true1217, label %cond.false1223

land.lhs.true1217:                                ; preds = %cond.true1212
  %464 = load i8*, i8** %pat, align 8
  %arrayidx1218 = getelementptr inbounds i8, i8* %464, i64 3
  %465 = load i8, i8* %arrayidx1218, align 1
  %conv1219 = zext i8 %465 to i32
  %cmp1220 = icmp eq i32 130, %conv1219
  br i1 %cmp1220, label %cond.true1222, label %cond.false1223

cond.true1222:                                    ; preds = %land.lhs.true1217
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false1223:                                   ; preds = %land.lhs.true1217, %cond.true1212
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false1224:                                   ; preds = %cond.true1207
  %466 = load i8*, i8** %pat, align 8
  %arrayidx1225 = getelementptr inbounds i8, i8* %466, i64 1
  %467 = load i8, i8* %arrayidx1225, align 1
  %conv1226 = zext i8 %467 to i32
  %cmp1227 = icmp eq i32 180, %conv1226
  br i1 %cmp1227, label %cond.true1229, label %cond.false1252

cond.true1229:                                    ; preds = %cond.false1224
  %468 = load i8*, i8** %pat, align 8
  %arrayidx1230 = getelementptr inbounds i8, i8* %468, i64 2
  %469 = load i8, i8* %arrayidx1230, align 1
  %conv1231 = zext i8 %469 to i32
  %cmp1232 = icmp eq i32 213, %conv1231
  br i1 %cmp1232, label %land.lhs.true1234, label %cond.false1251

land.lhs.true1234:                                ; preds = %cond.true1229
  %470 = load i8*, i8** %pat, align 8
  %arrayidx1235 = getelementptr inbounds i8, i8* %470, i64 3
  %471 = load i8, i8* %arrayidx1235, align 1
  %conv1236 = zext i8 %471 to i32
  %and1237 = and i32 %conv1236, 247
  %cmp1238 = icmp eq i32 %and1237, 165
  br i1 %cmp1238, label %cond.true1250, label %lor.lhs.false1240

lor.lhs.false1240:                                ; preds = %land.lhs.true1234
  %472 = load i8*, i8** %pat, align 8
  %arrayidx1241 = getelementptr inbounds i8, i8* %472, i64 3
  %473 = load i8, i8* %arrayidx1241, align 1
  %conv1242 = zext i8 %473 to i32
  %cmp1243 = icmp eq i32 %conv1242, 171
  br i1 %cmp1243, label %cond.true1250, label %lor.lhs.false1245

lor.lhs.false1245:                                ; preds = %lor.lhs.false1240
  %474 = load i8*, i8** %pat, align 8
  %arrayidx1246 = getelementptr inbounds i8, i8* %474, i64 3
  %475 = load i8, i8* %arrayidx1246, align 1
  %conv1247 = zext i8 %475 to i32
  %cmp1248 = icmp eq i32 %conv1247, 182
  br i1 %cmp1248, label %cond.true1250, label %cond.false1251

cond.true1250:                                    ; preds = %lor.lhs.false1245, %lor.lhs.false1240, %land.lhs.true1234
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false1251:                                   ; preds = %lor.lhs.false1245, %cond.true1229
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false1252:                                   ; preds = %cond.false1224
  %476 = load i8*, i8** %pat, align 8
  %arrayidx1253 = getelementptr inbounds i8, i8* %476, i64 1
  %477 = load i8, i8* %arrayidx1253, align 1
  %conv1254 = zext i8 %477 to i32
  %cmp1255 = icmp eq i32 190, %conv1254
  br i1 %cmp1255, label %land.lhs.true1257, label %cond.false1268

land.lhs.true1257:                                ; preds = %cond.false1252
  %478 = load i8*, i8** %pat, align 8
  %arrayidx1258 = getelementptr inbounds i8, i8* %478, i64 2
  %479 = load i8, i8* %arrayidx1258, align 1
  %conv1259 = zext i8 %479 to i32
  %cmp1260 = icmp eq i32 213, %conv1259
  br i1 %cmp1260, label %land.lhs.true1262, label %cond.false1268

land.lhs.true1262:                                ; preds = %land.lhs.true1257
  %480 = load i8*, i8** %pat, align 8
  %arrayidx1263 = getelementptr inbounds i8, i8* %480, i64 3
  %481 = load i8, i8* %arrayidx1263, align 1
  %conv1264 = zext i8 %481 to i32
  %cmp1265 = icmp eq i32 182, %conv1264
  br i1 %cmp1265, label %cond.true1267, label %cond.false1268

cond.true1267:                                    ; preds = %land.lhs.true1262
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false1268:                                   ; preds = %land.lhs.true1262, %land.lhs.true1257, %cond.false1252
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false1269:                                   ; preds = %cond.false1202
  %482 = load i8*, i8** %pat, align 8
  %arrayidx1270 = getelementptr inbounds i8, i8* %482, i64 0
  %483 = load i8, i8* %arrayidx1270, align 1
  %conv1271 = zext i8 %483 to i32
  %cmp1272 = icmp eq i32 225, %conv1271
  br i1 %cmp1272, label %cond.true1274, label %cond.false1331

cond.true1274:                                    ; preds = %cond.false1269
  %484 = load i8*, i8** %pat, align 8
  %arrayidx1275 = getelementptr inbounds i8, i8* %484, i64 1
  %485 = load i8, i8* %arrayidx1275, align 1
  %conv1276 = zext i8 %485 to i32
  %cmp1277 = icmp eq i32 188, %conv1276
  br i1 %cmp1277, label %cond.true1279, label %cond.false1297

cond.true1279:                                    ; preds = %cond.true1274
  %486 = load i8*, i8** %pat, align 8
  %arrayidx1280 = getelementptr inbounds i8, i8* %486, i64 2
  %487 = load i8, i8* %arrayidx1280, align 1
  %conv1281 = zext i8 %487 to i32
  %and1282 = and i32 %conv1281, 216
  %cmp1283 = icmp eq i32 %and1282, 128
  br i1 %cmp1283, label %land.lhs.true1285, label %cond.false1296

land.lhs.true1285:                                ; preds = %cond.true1279
  %488 = load i8*, i8** %pat, align 8
  %arrayidx1286 = getelementptr inbounds i8, i8* %488, i64 3
  %489 = load i8, i8* %arrayidx1286, align 1
  %conv1287 = zext i8 %489 to i32
  %cmp1288 = icmp eq i32 206, %conv1287
  br i1 %cmp1288, label %land.lhs.true1290, label %cond.false1296

land.lhs.true1290:                                ; preds = %land.lhs.true1285
  %490 = load i8*, i8** %pat, align 8
  %arrayidx1291 = getelementptr inbounds i8, i8* %490, i64 4
  %491 = load i8, i8* %arrayidx1291, align 1
  %conv1292 = zext i8 %491 to i32
  %cmp1293 = icmp eq i32 185, %conv1292
  br i1 %cmp1293, label %cond.true1295, label %cond.false1296

cond.true1295:                                    ; preds = %land.lhs.true1290
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false1296:                                   ; preds = %land.lhs.true1290, %land.lhs.true1285, %cond.true1279
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false1297:                                   ; preds = %cond.true1274
  %492 = load i8*, i8** %pat, align 8
  %arrayidx1298 = getelementptr inbounds i8, i8* %492, i64 1
  %493 = load i8, i8* %arrayidx1298, align 1
  %conv1299 = zext i8 %493 to i32
  %cmp1300 = icmp eq i32 189, %conv1299
  br i1 %cmp1300, label %land.lhs.true1302, label %cond.false1330

land.lhs.true1302:                                ; preds = %cond.false1297
  %494 = load i8*, i8** %pat, align 8
  %arrayidx1303 = getelementptr inbounds i8, i8* %494, i64 2
  %495 = load i8, i8* %arrayidx1303, align 1
  %conv1304 = zext i8 %495 to i32
  %and1305 = and i32 %conv1304, 248
  %cmp1306 = icmp eq i32 %and1305, 160
  br i1 %cmp1306, label %land.lhs.true1319, label %lor.lhs.false1308

lor.lhs.false1308:                                ; preds = %land.lhs.true1302
  %496 = load i8*, i8** %pat, align 8
  %arrayidx1309 = getelementptr inbounds i8, i8* %496, i64 2
  %497 = load i8, i8* %arrayidx1309, align 1
  %conv1310 = zext i8 %497 to i32
  %and1311 = and i32 %conv1310, 251
  %cmp1312 = icmp eq i32 %and1311, 176
  br i1 %cmp1312, label %land.lhs.true1319, label %lor.lhs.false1314

lor.lhs.false1314:                                ; preds = %lor.lhs.false1308
  %498 = load i8*, i8** %pat, align 8
  %arrayidx1315 = getelementptr inbounds i8, i8* %498, i64 2
  %499 = load i8, i8* %arrayidx1315, align 1
  %conv1316 = zext i8 %499 to i32
  %cmp1317 = icmp eq i32 %conv1316, 188
  br i1 %cmp1317, label %land.lhs.true1319, label %cond.false1330

land.lhs.true1319:                                ; preds = %lor.lhs.false1314, %lor.lhs.false1308, %land.lhs.true1302
  %500 = load i8*, i8** %pat, align 8
  %arrayidx1320 = getelementptr inbounds i8, i8* %500, i64 3
  %501 = load i8, i8* %arrayidx1320, align 1
  %conv1321 = zext i8 %501 to i32
  %cmp1322 = icmp eq i32 206, %conv1321
  br i1 %cmp1322, label %land.lhs.true1324, label %cond.false1330

land.lhs.true1324:                                ; preds = %land.lhs.true1319
  %502 = load i8*, i8** %pat, align 8
  %arrayidx1325 = getelementptr inbounds i8, i8* %502, i64 4
  %503 = load i8, i8* %arrayidx1325, align 1
  %conv1326 = zext i8 %503 to i32
  %cmp1327 = icmp eq i32 185, %conv1326
  br i1 %cmp1327, label %cond.true1329, label %cond.false1330

cond.true1329:                                    ; preds = %land.lhs.true1324
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false1330:                                   ; preds = %land.lhs.true1324, %land.lhs.true1319, %lor.lhs.false1314, %cond.false1297
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false1331:                                   ; preds = %cond.false1269
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false1332:                                   ; preds = %cond.false828
  %504 = load i8*, i8** %pat_end, align 8
  %505 = load i8*, i8** %pat, align 8
  %sub.ptr.lhs.cast1333 = ptrtoint i8* %504 to i64
  %sub.ptr.rhs.cast1334 = ptrtoint i8* %505 to i64
  %sub.ptr.sub1335 = sub i64 %sub.ptr.lhs.cast1333, %sub.ptr.rhs.cast1334
  %cmp1336 = icmp sgt i64 %sub.ptr.sub1335, 3
  br i1 %cmp1336, label %cond.true1338, label %cond.false1774

cond.true1338:                                    ; preds = %cond.false1332
  %506 = load i8*, i8** %pat, align 8
  %arrayidx1339 = getelementptr inbounds i8, i8* %506, i64 0
  %507 = load i8, i8* %arrayidx1339, align 1
  %conv1340 = zext i8 %507 to i32
  %cmp1341 = icmp eq i32 97, %conv1340
  br i1 %cmp1341, label %cond.true1343, label %cond.false1355

cond.true1343:                                    ; preds = %cond.true1338
  %508 = load i8*, i8** %pat, align 8
  %arrayidx1344 = getelementptr inbounds i8, i8* %508, i64 1
  %509 = load i8, i8* %arrayidx1344, align 1
  %conv1345 = zext i8 %509 to i32
  %cmp1346 = icmp eq i32 202, %conv1345
  br i1 %cmp1346, label %land.lhs.true1348, label %cond.false1354

land.lhs.true1348:                                ; preds = %cond.true1343
  %510 = load i8*, i8** %pat, align 8
  %arrayidx1349 = getelementptr inbounds i8, i8* %510, i64 2
  %511 = load i8, i8* %arrayidx1349, align 1
  %conv1350 = zext i8 %511 to i32
  %cmp1351 = icmp eq i32 190, %conv1350
  br i1 %cmp1351, label %cond.true1353, label %cond.false1354

cond.true1353:                                    ; preds = %land.lhs.true1348
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false1354:                                   ; preds = %land.lhs.true1348, %cond.true1343
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false1355:                                   ; preds = %cond.true1338
  %512 = load i8*, i8** %pat, align 8
  %arrayidx1356 = getelementptr inbounds i8, i8* %512, i64 0
  %513 = load i8, i8* %arrayidx1356, align 1
  %conv1357 = zext i8 %513 to i32
  %cmp1358 = icmp eq i32 102, %conv1357
  br i1 %cmp1358, label %cond.true1360, label %cond.false1389

cond.true1360:                                    ; preds = %cond.false1355
  %514 = load i8*, i8** %pat, align 8
  %arrayidx1361 = getelementptr inbounds i8, i8* %514, i64 1
  %515 = load i8, i8* %arrayidx1361, align 1
  %conv1362 = zext i8 %515 to i32
  %cmp1363 = icmp eq i32 102, %conv1362
  br i1 %cmp1363, label %cond.true1365, label %cond.false1377

cond.true1365:                                    ; preds = %cond.true1360
  %516 = load i8*, i8** %pat, align 8
  %arrayidx1366 = getelementptr inbounds i8, i8* %516, i64 2
  %517 = load i8, i8* %arrayidx1366, align 1
  %conv1367 = zext i8 %517 to i32
  %cmp1368 = icmp eq i32 105, %conv1367
  br i1 %cmp1368, label %cond.true1375, label %lor.lhs.false1370

lor.lhs.false1370:                                ; preds = %cond.true1365
  %518 = load i8*, i8** %pat, align 8
  %arrayidx1371 = getelementptr inbounds i8, i8* %518, i64 2
  %519 = load i8, i8* %arrayidx1371, align 1
  %conv1372 = zext i8 %519 to i32
  %cmp1373 = icmp eq i32 108, %conv1372
  br i1 %cmp1373, label %cond.true1375, label %cond.false1376

cond.true1375:                                    ; preds = %lor.lhs.false1370, %cond.true1365
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false1376:                                   ; preds = %lor.lhs.false1370
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false1377:                                   ; preds = %cond.true1360
  %520 = load i8*, i8** %pat, align 8
  %arrayidx1378 = getelementptr inbounds i8, i8* %520, i64 1
  %521 = load i8, i8* %arrayidx1378, align 1
  %conv1379 = zext i8 %521 to i32
  %cmp1380 = icmp eq i32 105, %conv1379
  br i1 %cmp1380, label %cond.true1387, label %lor.lhs.false1382

lor.lhs.false1382:                                ; preds = %cond.false1377
  %522 = load i8*, i8** %pat, align 8
  %arrayidx1383 = getelementptr inbounds i8, i8* %522, i64 1
  %523 = load i8, i8* %arrayidx1383, align 1
  %conv1384 = zext i8 %523 to i32
  %cmp1385 = icmp eq i32 108, %conv1384
  br i1 %cmp1385, label %cond.true1387, label %cond.false1388

cond.true1387:                                    ; preds = %lor.lhs.false1382, %cond.false1377
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false1388:                                   ; preds = %lor.lhs.false1382
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false1389:                                   ; preds = %cond.false1355
  %524 = load i8*, i8** %pat, align 8
  %arrayidx1390 = getelementptr inbounds i8, i8* %524, i64 0
  %525 = load i8, i8* %arrayidx1390, align 1
  %conv1391 = zext i8 %525 to i32
  %cmp1392 = icmp eq i32 104, %conv1391
  br i1 %cmp1392, label %cond.true1394, label %cond.false1406

cond.true1394:                                    ; preds = %cond.false1389
  %526 = load i8*, i8** %pat, align 8
  %arrayidx1395 = getelementptr inbounds i8, i8* %526, i64 1
  %527 = load i8, i8* %arrayidx1395, align 1
  %conv1396 = zext i8 %527 to i32
  %cmp1397 = icmp eq i32 204, %conv1396
  br i1 %cmp1397, label %land.lhs.true1399, label %cond.false1405

land.lhs.true1399:                                ; preds = %cond.true1394
  %528 = load i8*, i8** %pat, align 8
  %arrayidx1400 = getelementptr inbounds i8, i8* %528, i64 2
  %529 = load i8, i8* %arrayidx1400, align 1
  %conv1401 = zext i8 %529 to i32
  %cmp1402 = icmp eq i32 177, %conv1401
  br i1 %cmp1402, label %cond.true1404, label %cond.false1405

cond.true1404:                                    ; preds = %land.lhs.true1399
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false1405:                                   ; preds = %land.lhs.true1399, %cond.true1394
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false1406:                                   ; preds = %cond.false1389
  %530 = load i8*, i8** %pat, align 8
  %arrayidx1407 = getelementptr inbounds i8, i8* %530, i64 0
  %531 = load i8, i8* %arrayidx1407, align 1
  %conv1408 = zext i8 %531 to i32
  %cmp1409 = icmp eq i32 105, %conv1408
  br i1 %cmp1409, label %cond.true1411, label %cond.false1423

cond.true1411:                                    ; preds = %cond.false1406
  %532 = load i8*, i8** %pat, align 8
  %arrayidx1412 = getelementptr inbounds i8, i8* %532, i64 1
  %533 = load i8, i8* %arrayidx1412, align 1
  %conv1413 = zext i8 %533 to i32
  %cmp1414 = icmp eq i32 204, %conv1413
  br i1 %cmp1414, label %land.lhs.true1416, label %cond.false1422

land.lhs.true1416:                                ; preds = %cond.true1411
  %534 = load i8*, i8** %pat, align 8
  %arrayidx1417 = getelementptr inbounds i8, i8* %534, i64 2
  %535 = load i8, i8* %arrayidx1417, align 1
  %conv1418 = zext i8 %535 to i32
  %cmp1419 = icmp eq i32 135, %conv1418
  br i1 %cmp1419, label %cond.true1421, label %cond.false1422

cond.true1421:                                    ; preds = %land.lhs.true1416
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false1422:                                   ; preds = %land.lhs.true1416, %cond.true1411
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false1423:                                   ; preds = %cond.false1406
  %536 = load i8*, i8** %pat, align 8
  %arrayidx1424 = getelementptr inbounds i8, i8* %536, i64 0
  %537 = load i8, i8* %arrayidx1424, align 1
  %conv1425 = zext i8 %537 to i32
  %cmp1426 = icmp eq i32 106, %conv1425
  br i1 %cmp1426, label %cond.true1428, label %cond.false1440

cond.true1428:                                    ; preds = %cond.false1423
  %538 = load i8*, i8** %pat, align 8
  %arrayidx1429 = getelementptr inbounds i8, i8* %538, i64 1
  %539 = load i8, i8* %arrayidx1429, align 1
  %conv1430 = zext i8 %539 to i32
  %cmp1431 = icmp eq i32 204, %conv1430
  br i1 %cmp1431, label %land.lhs.true1433, label %cond.false1439

land.lhs.true1433:                                ; preds = %cond.true1428
  %540 = load i8*, i8** %pat, align 8
  %arrayidx1434 = getelementptr inbounds i8, i8* %540, i64 2
  %541 = load i8, i8* %arrayidx1434, align 1
  %conv1435 = zext i8 %541 to i32
  %cmp1436 = icmp eq i32 140, %conv1435
  br i1 %cmp1436, label %cond.true1438, label %cond.false1439

cond.true1438:                                    ; preds = %land.lhs.true1433
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false1439:                                   ; preds = %land.lhs.true1433, %cond.true1428
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false1440:                                   ; preds = %cond.false1423
  %542 = load i8*, i8** %pat, align 8
  %arrayidx1441 = getelementptr inbounds i8, i8* %542, i64 0
  %543 = load i8, i8* %arrayidx1441, align 1
  %conv1442 = zext i8 %543 to i32
  %cmp1443 = icmp eq i32 115, %conv1442
  br i1 %cmp1443, label %cond.true1445, label %cond.false1457

cond.true1445:                                    ; preds = %cond.false1440
  %544 = load i8*, i8** %pat, align 8
  %arrayidx1446 = getelementptr inbounds i8, i8* %544, i64 1
  %545 = load i8, i8* %arrayidx1446, align 1
  %conv1447 = zext i8 %545 to i32
  %cmp1448 = icmp eq i32 115, %conv1447
  br i1 %cmp1448, label %cond.true1455, label %lor.lhs.false1450

lor.lhs.false1450:                                ; preds = %cond.true1445
  %546 = load i8*, i8** %pat, align 8
  %arrayidx1451 = getelementptr inbounds i8, i8* %546, i64 1
  %547 = load i8, i8* %arrayidx1451, align 1
  %conv1452 = zext i8 %547 to i32
  %cmp1453 = icmp eq i32 116, %conv1452
  br i1 %cmp1453, label %cond.true1455, label %cond.false1456

cond.true1455:                                    ; preds = %lor.lhs.false1450, %cond.true1445
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false1456:                                   ; preds = %lor.lhs.false1450
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false1457:                                   ; preds = %cond.false1440
  %548 = load i8*, i8** %pat, align 8
  %arrayidx1458 = getelementptr inbounds i8, i8* %548, i64 0
  %549 = load i8, i8* %arrayidx1458, align 1
  %conv1459 = zext i8 %549 to i32
  %cmp1460 = icmp eq i32 116, %conv1459
  br i1 %cmp1460, label %cond.true1462, label %cond.false1474

cond.true1462:                                    ; preds = %cond.false1457
  %550 = load i8*, i8** %pat, align 8
  %arrayidx1463 = getelementptr inbounds i8, i8* %550, i64 1
  %551 = load i8, i8* %arrayidx1463, align 1
  %conv1464 = zext i8 %551 to i32
  %cmp1465 = icmp eq i32 204, %conv1464
  br i1 %cmp1465, label %land.lhs.true1467, label %cond.false1473

land.lhs.true1467:                                ; preds = %cond.true1462
  %552 = load i8*, i8** %pat, align 8
  %arrayidx1468 = getelementptr inbounds i8, i8* %552, i64 2
  %553 = load i8, i8* %arrayidx1468, align 1
  %conv1469 = zext i8 %553 to i32
  %cmp1470 = icmp eq i32 136, %conv1469
  br i1 %cmp1470, label %cond.true1472, label %cond.false1473

cond.true1472:                                    ; preds = %land.lhs.true1467
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false1473:                                   ; preds = %land.lhs.true1467, %cond.true1462
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false1474:                                   ; preds = %cond.false1457
  %554 = load i8*, i8** %pat, align 8
  %arrayidx1475 = getelementptr inbounds i8, i8* %554, i64 0
  %555 = load i8, i8* %arrayidx1475, align 1
  %conv1476 = zext i8 %555 to i32
  %cmp1477 = icmp eq i32 119, %conv1476
  br i1 %cmp1477, label %cond.true1484, label %lor.lhs.false1479

lor.lhs.false1479:                                ; preds = %cond.false1474
  %556 = load i8*, i8** %pat, align 8
  %arrayidx1480 = getelementptr inbounds i8, i8* %556, i64 0
  %557 = load i8, i8* %arrayidx1480, align 1
  %conv1481 = zext i8 %557 to i32
  %cmp1482 = icmp eq i32 121, %conv1481
  br i1 %cmp1482, label %cond.true1484, label %cond.false1496

cond.true1484:                                    ; preds = %lor.lhs.false1479, %cond.false1474
  %558 = load i8*, i8** %pat, align 8
  %arrayidx1485 = getelementptr inbounds i8, i8* %558, i64 1
  %559 = load i8, i8* %arrayidx1485, align 1
  %conv1486 = zext i8 %559 to i32
  %cmp1487 = icmp eq i32 204, %conv1486
  br i1 %cmp1487, label %land.lhs.true1489, label %cond.false1495

land.lhs.true1489:                                ; preds = %cond.true1484
  %560 = load i8*, i8** %pat, align 8
  %arrayidx1490 = getelementptr inbounds i8, i8* %560, i64 2
  %561 = load i8, i8* %arrayidx1490, align 1
  %conv1491 = zext i8 %561 to i32
  %cmp1492 = icmp eq i32 138, %conv1491
  br i1 %cmp1492, label %cond.true1494, label %cond.false1495

cond.true1494:                                    ; preds = %land.lhs.true1489
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false1495:                                   ; preds = %land.lhs.true1489, %cond.true1484
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false1496:                                   ; preds = %lor.lhs.false1479
  %562 = load i8*, i8** %pat, align 8
  %arrayidx1497 = getelementptr inbounds i8, i8* %562, i64 0
  %563 = load i8, i8* %arrayidx1497, align 1
  %conv1498 = zext i8 %563 to i32
  %cmp1499 = icmp eq i32 197, %conv1498
  br i1 %cmp1499, label %cond.true1501, label %cond.false1518

cond.true1501:                                    ; preds = %cond.false1496
  %564 = load i8*, i8** %pat, align 8
  %arrayidx1502 = getelementptr inbounds i8, i8* %564, i64 1
  %565 = load i8, i8* %arrayidx1502, align 1
  %conv1503 = zext i8 %565 to i32
  %cmp1504 = icmp eq i32 191, %conv1503
  br i1 %cmp1504, label %land.lhs.true1506, label %cond.false1517

land.lhs.true1506:                                ; preds = %cond.true1501
  %566 = load i8*, i8** %pat, align 8
  %arrayidx1507 = getelementptr inbounds i8, i8* %566, i64 2
  %567 = load i8, i8* %arrayidx1507, align 1
  %conv1508 = zext i8 %567 to i32
  %cmp1509 = icmp eq i32 197, %conv1508
  br i1 %cmp1509, label %land.lhs.true1511, label %cond.false1517

land.lhs.true1511:                                ; preds = %land.lhs.true1506
  %568 = load i8*, i8** %pat, align 8
  %arrayidx1512 = getelementptr inbounds i8, i8* %568, i64 3
  %569 = load i8, i8* %arrayidx1512, align 1
  %conv1513 = zext i8 %569 to i32
  %cmp1514 = icmp eq i32 191, %conv1513
  br i1 %cmp1514, label %cond.true1516, label %cond.false1517

cond.true1516:                                    ; preds = %land.lhs.true1511
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false1517:                                   ; preds = %land.lhs.true1511, %land.lhs.true1506, %cond.true1501
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false1518:                                   ; preds = %cond.false1496
  %570 = load i8*, i8** %pat, align 8
  %arrayidx1519 = getelementptr inbounds i8, i8* %570, i64 0
  %571 = load i8, i8* %arrayidx1519, align 1
  %conv1520 = zext i8 %571 to i32
  %cmp1521 = icmp eq i32 202, %conv1520
  br i1 %cmp1521, label %cond.true1523, label %cond.false1535

cond.true1523:                                    ; preds = %cond.false1518
  %572 = load i8*, i8** %pat, align 8
  %arrayidx1524 = getelementptr inbounds i8, i8* %572, i64 1
  %573 = load i8, i8* %arrayidx1524, align 1
  %conv1525 = zext i8 %573 to i32
  %cmp1526 = icmp eq i32 188, %conv1525
  br i1 %cmp1526, label %land.lhs.true1528, label %cond.false1534

land.lhs.true1528:                                ; preds = %cond.true1523
  %574 = load i8*, i8** %pat, align 8
  %arrayidx1529 = getelementptr inbounds i8, i8* %574, i64 2
  %575 = load i8, i8* %arrayidx1529, align 1
  %conv1530 = zext i8 %575 to i32
  %cmp1531 = icmp eq i32 110, %conv1530
  br i1 %cmp1531, label %cond.true1533, label %cond.false1534

cond.true1533:                                    ; preds = %land.lhs.true1528
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false1534:                                   ; preds = %land.lhs.true1528, %cond.true1523
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false1535:                                   ; preds = %cond.false1518
  %576 = load i8*, i8** %pat, align 8
  %arrayidx1536 = getelementptr inbounds i8, i8* %576, i64 0
  %577 = load i8, i8* %arrayidx1536, align 1
  %conv1537 = zext i8 %577 to i32
  %cmp1538 = icmp eq i32 206, %conv1537
  br i1 %cmp1538, label %cond.true1540, label %cond.false1609

cond.true1540:                                    ; preds = %cond.false1535
  %578 = load i8*, i8** %pat, align 8
  %arrayidx1541 = getelementptr inbounds i8, i8* %578, i64 1
  %579 = load i8, i8* %arrayidx1541, align 1
  %conv1542 = zext i8 %579 to i32
  %and1543 = and i32 %conv1542, 253
  %cmp1544 = icmp eq i32 %and1543, 172
  br i1 %cmp1544, label %cond.true1546, label %cond.false1558

cond.true1546:                                    ; preds = %cond.true1540
  %580 = load i8*, i8** %pat, align 8
  %arrayidx1547 = getelementptr inbounds i8, i8* %580, i64 2
  %581 = load i8, i8* %arrayidx1547, align 1
  %conv1548 = zext i8 %581 to i32
  %cmp1549 = icmp eq i32 206, %conv1548
  br i1 %cmp1549, label %land.lhs.true1551, label %cond.false1557

land.lhs.true1551:                                ; preds = %cond.true1546
  %582 = load i8*, i8** %pat, align 8
  %arrayidx1552 = getelementptr inbounds i8, i8* %582, i64 3
  %583 = load i8, i8* %arrayidx1552, align 1
  %conv1553 = zext i8 %583 to i32
  %cmp1554 = icmp eq i32 185, %conv1553
  br i1 %cmp1554, label %cond.true1556, label %cond.false1557

cond.true1556:                                    ; preds = %land.lhs.true1551
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false1557:                                   ; preds = %land.lhs.true1551, %cond.true1546
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false1558:                                   ; preds = %cond.true1540
  %584 = load i8*, i8** %pat, align 8
  %arrayidx1559 = getelementptr inbounds i8, i8* %584, i64 1
  %585 = load i8, i8* %arrayidx1559, align 1
  %conv1560 = zext i8 %585 to i32
  %cmp1561 = icmp eq i32 177, %conv1560
  br i1 %cmp1561, label %cond.true1568, label %lor.lhs.false1563

lor.lhs.false1563:                                ; preds = %cond.false1558
  %586 = load i8*, i8** %pat, align 8
  %arrayidx1564 = getelementptr inbounds i8, i8* %586, i64 1
  %587 = load i8, i8* %arrayidx1564, align 1
  %conv1565 = zext i8 %587 to i32
  %cmp1566 = icmp eq i32 183, %conv1565
  br i1 %cmp1566, label %cond.true1568, label %cond.false1592

cond.true1568:                                    ; preds = %lor.lhs.false1563, %cond.false1558
  %588 = load i8*, i8** %pat, align 8
  %arrayidx1569 = getelementptr inbounds i8, i8* %588, i64 2
  %589 = load i8, i8* %arrayidx1569, align 1
  %conv1570 = zext i8 %589 to i32
  %cmp1571 = icmp eq i32 205, %conv1570
  br i1 %cmp1571, label %cond.true1573, label %cond.false1580

cond.true1573:                                    ; preds = %cond.true1568
  %590 = load i8*, i8** %pat, align 8
  %arrayidx1574 = getelementptr inbounds i8, i8* %590, i64 3
  %591 = load i8, i8* %arrayidx1574, align 1
  %conv1575 = zext i8 %591 to i32
  %cmp1576 = icmp eq i32 130, %conv1575
  br i1 %cmp1576, label %cond.true1578, label %cond.false1579

cond.true1578:                                    ; preds = %cond.true1573
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false1579:                                   ; preds = %cond.true1573
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false1580:                                   ; preds = %cond.true1568
  %592 = load i8*, i8** %pat, align 8
  %arrayidx1581 = getelementptr inbounds i8, i8* %592, i64 2
  %593 = load i8, i8* %arrayidx1581, align 1
  %conv1582 = zext i8 %593 to i32
  %cmp1583 = icmp eq i32 206, %conv1582
  br i1 %cmp1583, label %land.lhs.true1585, label %cond.false1591

land.lhs.true1585:                                ; preds = %cond.false1580
  %594 = load i8*, i8** %pat, align 8
  %arrayidx1586 = getelementptr inbounds i8, i8* %594, i64 3
  %595 = load i8, i8* %arrayidx1586, align 1
  %conv1587 = zext i8 %595 to i32
  %cmp1588 = icmp eq i32 185, %conv1587
  br i1 %cmp1588, label %cond.true1590, label %cond.false1591

cond.true1590:                                    ; preds = %land.lhs.true1585
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false1591:                                   ; preds = %land.lhs.true1585, %cond.false1580
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false1592:                                   ; preds = %lor.lhs.false1563
  %596 = load i8*, i8** %pat, align 8
  %arrayidx1593 = getelementptr inbounds i8, i8* %596, i64 1
  %597 = load i8, i8* %arrayidx1593, align 1
  %conv1594 = zext i8 %597 to i32
  %cmp1595 = icmp eq i32 185, %conv1594
  br i1 %cmp1595, label %land.lhs.true1597, label %cond.false1608

land.lhs.true1597:                                ; preds = %cond.false1592
  %598 = load i8*, i8** %pat, align 8
  %arrayidx1598 = getelementptr inbounds i8, i8* %598, i64 2
  %599 = load i8, i8* %arrayidx1598, align 1
  %conv1599 = zext i8 %599 to i32
  %cmp1600 = icmp eq i32 205, %conv1599
  br i1 %cmp1600, label %land.lhs.true1602, label %cond.false1608

land.lhs.true1602:                                ; preds = %land.lhs.true1597
  %600 = load i8*, i8** %pat, align 8
  %arrayidx1603 = getelementptr inbounds i8, i8* %600, i64 3
  %601 = load i8, i8* %arrayidx1603, align 1
  %conv1604 = zext i8 %601 to i32
  %cmp1605 = icmp eq i32 130, %conv1604
  br i1 %cmp1605, label %cond.true1607, label %cond.false1608

cond.true1607:                                    ; preds = %land.lhs.true1602
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false1608:                                   ; preds = %land.lhs.true1602, %land.lhs.true1597, %cond.false1592
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false1609:                                   ; preds = %cond.false1535
  %602 = load i8*, i8** %pat, align 8
  %arrayidx1610 = getelementptr inbounds i8, i8* %602, i64 0
  %603 = load i8, i8* %arrayidx1610, align 1
  %conv1611 = zext i8 %603 to i32
  %cmp1612 = icmp eq i32 207, %conv1611
  br i1 %cmp1612, label %cond.true1614, label %cond.false1706

cond.true1614:                                    ; preds = %cond.false1609
  %604 = load i8*, i8** %pat, align 8
  %arrayidx1615 = getelementptr inbounds i8, i8* %604, i64 1
  %605 = load i8, i8* %arrayidx1615, align 1
  %conv1616 = zext i8 %605 to i32
  %cmp1617 = icmp eq i32 129, %conv1616
  br i1 %cmp1617, label %cond.true1619, label %cond.false1631

cond.true1619:                                    ; preds = %cond.true1614
  %606 = load i8*, i8** %pat, align 8
  %arrayidx1620 = getelementptr inbounds i8, i8* %606, i64 2
  %607 = load i8, i8* %arrayidx1620, align 1
  %conv1621 = zext i8 %607 to i32
  %cmp1622 = icmp eq i32 204, %conv1621
  br i1 %cmp1622, label %land.lhs.true1624, label %cond.false1630

land.lhs.true1624:                                ; preds = %cond.true1619
  %608 = load i8*, i8** %pat, align 8
  %arrayidx1625 = getelementptr inbounds i8, i8* %608, i64 3
  %609 = load i8, i8* %arrayidx1625, align 1
  %conv1626 = zext i8 %609 to i32
  %cmp1627 = icmp eq i32 147, %conv1626
  br i1 %cmp1627, label %cond.true1629, label %cond.false1630

cond.true1629:                                    ; preds = %land.lhs.true1624
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false1630:                                   ; preds = %land.lhs.true1624, %cond.true1619
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false1631:                                   ; preds = %cond.true1614
  %610 = load i8*, i8** %pat, align 8
  %arrayidx1632 = getelementptr inbounds i8, i8* %610, i64 1
  %611 = load i8, i8* %arrayidx1632, align 1
  %conv1633 = zext i8 %611 to i32
  %cmp1634 = icmp eq i32 133, %conv1633
  br i1 %cmp1634, label %cond.true1636, label %cond.false1660

cond.true1636:                                    ; preds = %cond.false1631
  %612 = load i8*, i8** %pat, align 8
  %arrayidx1637 = getelementptr inbounds i8, i8* %612, i64 2
  %613 = load i8, i8* %arrayidx1637, align 1
  %conv1638 = zext i8 %613 to i32
  %cmp1639 = icmp eq i32 204, %conv1638
  br i1 %cmp1639, label %cond.true1641, label %cond.false1648

cond.true1641:                                    ; preds = %cond.true1636
  %614 = load i8*, i8** %pat, align 8
  %arrayidx1642 = getelementptr inbounds i8, i8* %614, i64 3
  %615 = load i8, i8* %arrayidx1642, align 1
  %conv1643 = zext i8 %615 to i32
  %cmp1644 = icmp eq i32 147, %conv1643
  br i1 %cmp1644, label %cond.true1646, label %cond.false1647

cond.true1646:                                    ; preds = %cond.true1641
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false1647:                                   ; preds = %cond.true1641
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false1648:                                   ; preds = %cond.true1636
  %616 = load i8*, i8** %pat, align 8
  %arrayidx1649 = getelementptr inbounds i8, i8* %616, i64 2
  %617 = load i8, i8* %arrayidx1649, align 1
  %conv1650 = zext i8 %617 to i32
  %cmp1651 = icmp eq i32 205, %conv1650
  br i1 %cmp1651, label %land.lhs.true1653, label %cond.false1659

land.lhs.true1653:                                ; preds = %cond.false1648
  %618 = load i8*, i8** %pat, align 8
  %arrayidx1654 = getelementptr inbounds i8, i8* %618, i64 3
  %619 = load i8, i8* %arrayidx1654, align 1
  %conv1655 = zext i8 %619 to i32
  %cmp1656 = icmp eq i32 130, %conv1655
  br i1 %cmp1656, label %cond.true1658, label %cond.false1659

cond.true1658:                                    ; preds = %land.lhs.true1653
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false1659:                                   ; preds = %land.lhs.true1653, %cond.false1648
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false1660:                                   ; preds = %cond.false1631
  %620 = load i8*, i8** %pat, align 8
  %arrayidx1661 = getelementptr inbounds i8, i8* %620, i64 1
  %621 = load i8, i8* %arrayidx1661, align 1
  %conv1662 = zext i8 %621 to i32
  %cmp1663 = icmp eq i32 137, %conv1662
  br i1 %cmp1663, label %cond.true1665, label %cond.false1689

cond.true1665:                                    ; preds = %cond.false1660
  %622 = load i8*, i8** %pat, align 8
  %arrayidx1666 = getelementptr inbounds i8, i8* %622, i64 2
  %623 = load i8, i8* %arrayidx1666, align 1
  %conv1667 = zext i8 %623 to i32
  %cmp1668 = icmp eq i32 205, %conv1667
  br i1 %cmp1668, label %cond.true1670, label %cond.false1677

cond.true1670:                                    ; preds = %cond.true1665
  %624 = load i8*, i8** %pat, align 8
  %arrayidx1671 = getelementptr inbounds i8, i8* %624, i64 3
  %625 = load i8, i8* %arrayidx1671, align 1
  %conv1672 = zext i8 %625 to i32
  %cmp1673 = icmp eq i32 130, %conv1672
  br i1 %cmp1673, label %cond.true1675, label %cond.false1676

cond.true1675:                                    ; preds = %cond.true1670
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false1676:                                   ; preds = %cond.true1670
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false1677:                                   ; preds = %cond.true1665
  %626 = load i8*, i8** %pat, align 8
  %arrayidx1678 = getelementptr inbounds i8, i8* %626, i64 2
  %627 = load i8, i8* %arrayidx1678, align 1
  %conv1679 = zext i8 %627 to i32
  %cmp1680 = icmp eq i32 206, %conv1679
  br i1 %cmp1680, label %land.lhs.true1682, label %cond.false1688

land.lhs.true1682:                                ; preds = %cond.false1677
  %628 = load i8*, i8** %pat, align 8
  %arrayidx1683 = getelementptr inbounds i8, i8* %628, i64 3
  %629 = load i8, i8* %arrayidx1683, align 1
  %conv1684 = zext i8 %629 to i32
  %cmp1685 = icmp eq i32 185, %conv1684
  br i1 %cmp1685, label %cond.true1687, label %cond.false1688

cond.true1687:                                    ; preds = %land.lhs.true1682
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false1688:                                   ; preds = %land.lhs.true1682, %cond.false1677
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false1689:                                   ; preds = %cond.false1660
  %630 = load i8*, i8** %pat, align 8
  %arrayidx1690 = getelementptr inbounds i8, i8* %630, i64 1
  %631 = load i8, i8* %arrayidx1690, align 1
  %conv1691 = zext i8 %631 to i32
  %cmp1692 = icmp eq i32 142, %conv1691
  br i1 %cmp1692, label %land.lhs.true1694, label %cond.false1705

land.lhs.true1694:                                ; preds = %cond.false1689
  %632 = load i8*, i8** %pat, align 8
  %arrayidx1695 = getelementptr inbounds i8, i8* %632, i64 2
  %633 = load i8, i8* %arrayidx1695, align 1
  %conv1696 = zext i8 %633 to i32
  %cmp1697 = icmp eq i32 206, %conv1696
  br i1 %cmp1697, label %land.lhs.true1699, label %cond.false1705

land.lhs.true1699:                                ; preds = %land.lhs.true1694
  %634 = load i8*, i8** %pat, align 8
  %arrayidx1700 = getelementptr inbounds i8, i8* %634, i64 3
  %635 = load i8, i8* %arrayidx1700, align 1
  %conv1701 = zext i8 %635 to i32
  %cmp1702 = icmp eq i32 185, %conv1701
  br i1 %cmp1702, label %cond.true1704, label %cond.false1705

cond.true1704:                                    ; preds = %land.lhs.true1699
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false1705:                                   ; preds = %land.lhs.true1699, %land.lhs.true1694, %cond.false1689
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false1706:                                   ; preds = %cond.false1609
  %636 = load i8*, i8** %pat, align 8
  %arrayidx1707 = getelementptr inbounds i8, i8* %636, i64 0
  %637 = load i8, i8* %arrayidx1707, align 1
  %conv1708 = zext i8 %637 to i32
  %cmp1709 = icmp eq i32 213, %conv1708
  br i1 %cmp1709, label %cond.true1711, label %cond.false1773

cond.true1711:                                    ; preds = %cond.false1706
  %638 = load i8*, i8** %pat, align 8
  %arrayidx1712 = getelementptr inbounds i8, i8* %638, i64 1
  %639 = load i8, i8* %arrayidx1712, align 1
  %conv1713 = zext i8 %639 to i32
  %cmp1714 = icmp eq i32 165, %conv1713
  br i1 %cmp1714, label %cond.true1716, label %cond.false1728

cond.true1716:                                    ; preds = %cond.true1711
  %640 = load i8*, i8** %pat, align 8
  %arrayidx1717 = getelementptr inbounds i8, i8* %640, i64 2
  %641 = load i8, i8* %arrayidx1717, align 1
  %conv1718 = zext i8 %641 to i32
  %cmp1719 = icmp eq i32 214, %conv1718
  br i1 %cmp1719, label %land.lhs.true1721, label %cond.false1727

land.lhs.true1721:                                ; preds = %cond.true1716
  %642 = load i8*, i8** %pat, align 8
  %arrayidx1722 = getelementptr inbounds i8, i8* %642, i64 3
  %643 = load i8, i8* %arrayidx1722, align 1
  %conv1723 = zext i8 %643 to i32
  %cmp1724 = icmp eq i32 130, %conv1723
  br i1 %cmp1724, label %cond.true1726, label %cond.false1727

cond.true1726:                                    ; preds = %land.lhs.true1721
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false1727:                                   ; preds = %land.lhs.true1721, %cond.true1716
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false1728:                                   ; preds = %cond.true1711
  %644 = load i8*, i8** %pat, align 8
  %arrayidx1729 = getelementptr inbounds i8, i8* %644, i64 1
  %645 = load i8, i8* %arrayidx1729, align 1
  %conv1730 = zext i8 %645 to i32
  %cmp1731 = icmp eq i32 180, %conv1730
  br i1 %cmp1731, label %cond.true1733, label %cond.false1756

cond.true1733:                                    ; preds = %cond.false1728
  %646 = load i8*, i8** %pat, align 8
  %arrayidx1734 = getelementptr inbounds i8, i8* %646, i64 2
  %647 = load i8, i8* %arrayidx1734, align 1
  %conv1735 = zext i8 %647 to i32
  %cmp1736 = icmp eq i32 213, %conv1735
  br i1 %cmp1736, label %land.lhs.true1738, label %cond.false1755

land.lhs.true1738:                                ; preds = %cond.true1733
  %648 = load i8*, i8** %pat, align 8
  %arrayidx1739 = getelementptr inbounds i8, i8* %648, i64 3
  %649 = load i8, i8* %arrayidx1739, align 1
  %conv1740 = zext i8 %649 to i32
  %and1741 = and i32 %conv1740, 247
  %cmp1742 = icmp eq i32 %and1741, 165
  br i1 %cmp1742, label %cond.true1754, label %lor.lhs.false1744

lor.lhs.false1744:                                ; preds = %land.lhs.true1738
  %650 = load i8*, i8** %pat, align 8
  %arrayidx1745 = getelementptr inbounds i8, i8* %650, i64 3
  %651 = load i8, i8* %arrayidx1745, align 1
  %conv1746 = zext i8 %651 to i32
  %cmp1747 = icmp eq i32 %conv1746, 171
  br i1 %cmp1747, label %cond.true1754, label %lor.lhs.false1749

lor.lhs.false1749:                                ; preds = %lor.lhs.false1744
  %652 = load i8*, i8** %pat, align 8
  %arrayidx1750 = getelementptr inbounds i8, i8* %652, i64 3
  %653 = load i8, i8* %arrayidx1750, align 1
  %conv1751 = zext i8 %653 to i32
  %cmp1752 = icmp eq i32 %conv1751, 182
  br i1 %cmp1752, label %cond.true1754, label %cond.false1755

cond.true1754:                                    ; preds = %lor.lhs.false1749, %lor.lhs.false1744, %land.lhs.true1738
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false1755:                                   ; preds = %lor.lhs.false1749, %cond.true1733
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false1756:                                   ; preds = %cond.false1728
  %654 = load i8*, i8** %pat, align 8
  %arrayidx1757 = getelementptr inbounds i8, i8* %654, i64 1
  %655 = load i8, i8* %arrayidx1757, align 1
  %conv1758 = zext i8 %655 to i32
  %cmp1759 = icmp eq i32 190, %conv1758
  br i1 %cmp1759, label %land.lhs.true1761, label %cond.false1772

land.lhs.true1761:                                ; preds = %cond.false1756
  %656 = load i8*, i8** %pat, align 8
  %arrayidx1762 = getelementptr inbounds i8, i8* %656, i64 2
  %657 = load i8, i8* %arrayidx1762, align 1
  %conv1763 = zext i8 %657 to i32
  %cmp1764 = icmp eq i32 213, %conv1763
  br i1 %cmp1764, label %land.lhs.true1766, label %cond.false1772

land.lhs.true1766:                                ; preds = %land.lhs.true1761
  %658 = load i8*, i8** %pat, align 8
  %arrayidx1767 = getelementptr inbounds i8, i8* %658, i64 3
  %659 = load i8, i8* %arrayidx1767, align 1
  %conv1768 = zext i8 %659 to i32
  %cmp1769 = icmp eq i32 182, %conv1768
  br i1 %cmp1769, label %cond.true1771, label %cond.false1772

cond.true1771:                                    ; preds = %land.lhs.true1766
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false1772:                                   ; preds = %land.lhs.true1766, %land.lhs.true1761, %cond.false1756
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false1773:                                   ; preds = %cond.false1706
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false1774:                                   ; preds = %cond.false1332
  %660 = load i8*, i8** %pat_end, align 8
  %661 = load i8*, i8** %pat, align 8
  %sub.ptr.lhs.cast1775 = ptrtoint i8* %660 to i64
  %sub.ptr.rhs.cast1776 = ptrtoint i8* %661 to i64
  %sub.ptr.sub1777 = sub i64 %sub.ptr.lhs.cast1775, %sub.ptr.rhs.cast1776
  %cmp1778 = icmp sgt i64 %sub.ptr.sub1777, 2
  br i1 %cmp1778, label %cond.true1780, label %cond.false1955

cond.true1780:                                    ; preds = %cond.false1774
  %662 = load i8*, i8** %pat, align 8
  %arrayidx1781 = getelementptr inbounds i8, i8* %662, i64 0
  %663 = load i8, i8* %arrayidx1781, align 1
  %conv1782 = zext i8 %663 to i32
  %cmp1783 = icmp eq i32 97, %conv1782
  br i1 %cmp1783, label %cond.true1785, label %cond.false1797

cond.true1785:                                    ; preds = %cond.true1780
  %664 = load i8*, i8** %pat, align 8
  %arrayidx1786 = getelementptr inbounds i8, i8* %664, i64 1
  %665 = load i8, i8* %arrayidx1786, align 1
  %conv1787 = zext i8 %665 to i32
  %cmp1788 = icmp eq i32 202, %conv1787
  br i1 %cmp1788, label %land.lhs.true1790, label %cond.false1796

land.lhs.true1790:                                ; preds = %cond.true1785
  %666 = load i8*, i8** %pat, align 8
  %arrayidx1791 = getelementptr inbounds i8, i8* %666, i64 2
  %667 = load i8, i8* %arrayidx1791, align 1
  %conv1792 = zext i8 %667 to i32
  %cmp1793 = icmp eq i32 190, %conv1792
  br i1 %cmp1793, label %cond.true1795, label %cond.false1796

cond.true1795:                                    ; preds = %land.lhs.true1790
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false1796:                                   ; preds = %land.lhs.true1790, %cond.true1785
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false1797:                                   ; preds = %cond.true1780
  %668 = load i8*, i8** %pat, align 8
  %arrayidx1798 = getelementptr inbounds i8, i8* %668, i64 0
  %669 = load i8, i8* %arrayidx1798, align 1
  %conv1799 = zext i8 %669 to i32
  %cmp1800 = icmp eq i32 102, %conv1799
  br i1 %cmp1800, label %cond.true1802, label %cond.false1831

cond.true1802:                                    ; preds = %cond.false1797
  %670 = load i8*, i8** %pat, align 8
  %arrayidx1803 = getelementptr inbounds i8, i8* %670, i64 1
  %671 = load i8, i8* %arrayidx1803, align 1
  %conv1804 = zext i8 %671 to i32
  %cmp1805 = icmp eq i32 102, %conv1804
  br i1 %cmp1805, label %cond.true1807, label %cond.false1819

cond.true1807:                                    ; preds = %cond.true1802
  %672 = load i8*, i8** %pat, align 8
  %arrayidx1808 = getelementptr inbounds i8, i8* %672, i64 2
  %673 = load i8, i8* %arrayidx1808, align 1
  %conv1809 = zext i8 %673 to i32
  %cmp1810 = icmp eq i32 105, %conv1809
  br i1 %cmp1810, label %cond.true1817, label %lor.lhs.false1812

lor.lhs.false1812:                                ; preds = %cond.true1807
  %674 = load i8*, i8** %pat, align 8
  %arrayidx1813 = getelementptr inbounds i8, i8* %674, i64 2
  %675 = load i8, i8* %arrayidx1813, align 1
  %conv1814 = zext i8 %675 to i32
  %cmp1815 = icmp eq i32 108, %conv1814
  br i1 %cmp1815, label %cond.true1817, label %cond.false1818

cond.true1817:                                    ; preds = %lor.lhs.false1812, %cond.true1807
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false1818:                                   ; preds = %lor.lhs.false1812
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false1819:                                   ; preds = %cond.true1802
  %676 = load i8*, i8** %pat, align 8
  %arrayidx1820 = getelementptr inbounds i8, i8* %676, i64 1
  %677 = load i8, i8* %arrayidx1820, align 1
  %conv1821 = zext i8 %677 to i32
  %cmp1822 = icmp eq i32 105, %conv1821
  br i1 %cmp1822, label %cond.true1829, label %lor.lhs.false1824

lor.lhs.false1824:                                ; preds = %cond.false1819
  %678 = load i8*, i8** %pat, align 8
  %arrayidx1825 = getelementptr inbounds i8, i8* %678, i64 1
  %679 = load i8, i8* %arrayidx1825, align 1
  %conv1826 = zext i8 %679 to i32
  %cmp1827 = icmp eq i32 108, %conv1826
  br i1 %cmp1827, label %cond.true1829, label %cond.false1830

cond.true1829:                                    ; preds = %lor.lhs.false1824, %cond.false1819
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false1830:                                   ; preds = %lor.lhs.false1824
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false1831:                                   ; preds = %cond.false1797
  %680 = load i8*, i8** %pat, align 8
  %arrayidx1832 = getelementptr inbounds i8, i8* %680, i64 0
  %681 = load i8, i8* %arrayidx1832, align 1
  %conv1833 = zext i8 %681 to i32
  %cmp1834 = icmp eq i32 104, %conv1833
  br i1 %cmp1834, label %cond.true1836, label %cond.false1848

cond.true1836:                                    ; preds = %cond.false1831
  %682 = load i8*, i8** %pat, align 8
  %arrayidx1837 = getelementptr inbounds i8, i8* %682, i64 1
  %683 = load i8, i8* %arrayidx1837, align 1
  %conv1838 = zext i8 %683 to i32
  %cmp1839 = icmp eq i32 204, %conv1838
  br i1 %cmp1839, label %land.lhs.true1841, label %cond.false1847

land.lhs.true1841:                                ; preds = %cond.true1836
  %684 = load i8*, i8** %pat, align 8
  %arrayidx1842 = getelementptr inbounds i8, i8* %684, i64 2
  %685 = load i8, i8* %arrayidx1842, align 1
  %conv1843 = zext i8 %685 to i32
  %cmp1844 = icmp eq i32 177, %conv1843
  br i1 %cmp1844, label %cond.true1846, label %cond.false1847

cond.true1846:                                    ; preds = %land.lhs.true1841
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false1847:                                   ; preds = %land.lhs.true1841, %cond.true1836
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false1848:                                   ; preds = %cond.false1831
  %686 = load i8*, i8** %pat, align 8
  %arrayidx1849 = getelementptr inbounds i8, i8* %686, i64 0
  %687 = load i8, i8* %arrayidx1849, align 1
  %conv1850 = zext i8 %687 to i32
  %cmp1851 = icmp eq i32 105, %conv1850
  br i1 %cmp1851, label %cond.true1853, label %cond.false1865

cond.true1853:                                    ; preds = %cond.false1848
  %688 = load i8*, i8** %pat, align 8
  %arrayidx1854 = getelementptr inbounds i8, i8* %688, i64 1
  %689 = load i8, i8* %arrayidx1854, align 1
  %conv1855 = zext i8 %689 to i32
  %cmp1856 = icmp eq i32 204, %conv1855
  br i1 %cmp1856, label %land.lhs.true1858, label %cond.false1864

land.lhs.true1858:                                ; preds = %cond.true1853
  %690 = load i8*, i8** %pat, align 8
  %arrayidx1859 = getelementptr inbounds i8, i8* %690, i64 2
  %691 = load i8, i8* %arrayidx1859, align 1
  %conv1860 = zext i8 %691 to i32
  %cmp1861 = icmp eq i32 135, %conv1860
  br i1 %cmp1861, label %cond.true1863, label %cond.false1864

cond.true1863:                                    ; preds = %land.lhs.true1858
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false1864:                                   ; preds = %land.lhs.true1858, %cond.true1853
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false1865:                                   ; preds = %cond.false1848
  %692 = load i8*, i8** %pat, align 8
  %arrayidx1866 = getelementptr inbounds i8, i8* %692, i64 0
  %693 = load i8, i8* %arrayidx1866, align 1
  %conv1867 = zext i8 %693 to i32
  %cmp1868 = icmp eq i32 106, %conv1867
  br i1 %cmp1868, label %cond.true1870, label %cond.false1882

cond.true1870:                                    ; preds = %cond.false1865
  %694 = load i8*, i8** %pat, align 8
  %arrayidx1871 = getelementptr inbounds i8, i8* %694, i64 1
  %695 = load i8, i8* %arrayidx1871, align 1
  %conv1872 = zext i8 %695 to i32
  %cmp1873 = icmp eq i32 204, %conv1872
  br i1 %cmp1873, label %land.lhs.true1875, label %cond.false1881

land.lhs.true1875:                                ; preds = %cond.true1870
  %696 = load i8*, i8** %pat, align 8
  %arrayidx1876 = getelementptr inbounds i8, i8* %696, i64 2
  %697 = load i8, i8* %arrayidx1876, align 1
  %conv1877 = zext i8 %697 to i32
  %cmp1878 = icmp eq i32 140, %conv1877
  br i1 %cmp1878, label %cond.true1880, label %cond.false1881

cond.true1880:                                    ; preds = %land.lhs.true1875
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false1881:                                   ; preds = %land.lhs.true1875, %cond.true1870
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false1882:                                   ; preds = %cond.false1865
  %698 = load i8*, i8** %pat, align 8
  %arrayidx1883 = getelementptr inbounds i8, i8* %698, i64 0
  %699 = load i8, i8* %arrayidx1883, align 1
  %conv1884 = zext i8 %699 to i32
  %cmp1885 = icmp eq i32 115, %conv1884
  br i1 %cmp1885, label %cond.true1887, label %cond.false1899

cond.true1887:                                    ; preds = %cond.false1882
  %700 = load i8*, i8** %pat, align 8
  %arrayidx1888 = getelementptr inbounds i8, i8* %700, i64 1
  %701 = load i8, i8* %arrayidx1888, align 1
  %conv1889 = zext i8 %701 to i32
  %cmp1890 = icmp eq i32 115, %conv1889
  br i1 %cmp1890, label %cond.true1897, label %lor.lhs.false1892

lor.lhs.false1892:                                ; preds = %cond.true1887
  %702 = load i8*, i8** %pat, align 8
  %arrayidx1893 = getelementptr inbounds i8, i8* %702, i64 1
  %703 = load i8, i8* %arrayidx1893, align 1
  %conv1894 = zext i8 %703 to i32
  %cmp1895 = icmp eq i32 116, %conv1894
  br i1 %cmp1895, label %cond.true1897, label %cond.false1898

cond.true1897:                                    ; preds = %lor.lhs.false1892, %cond.true1887
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false1898:                                   ; preds = %lor.lhs.false1892
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false1899:                                   ; preds = %cond.false1882
  %704 = load i8*, i8** %pat, align 8
  %arrayidx1900 = getelementptr inbounds i8, i8* %704, i64 0
  %705 = load i8, i8* %arrayidx1900, align 1
  %conv1901 = zext i8 %705 to i32
  %cmp1902 = icmp eq i32 116, %conv1901
  br i1 %cmp1902, label %cond.true1904, label %cond.false1916

cond.true1904:                                    ; preds = %cond.false1899
  %706 = load i8*, i8** %pat, align 8
  %arrayidx1905 = getelementptr inbounds i8, i8* %706, i64 1
  %707 = load i8, i8* %arrayidx1905, align 1
  %conv1906 = zext i8 %707 to i32
  %cmp1907 = icmp eq i32 204, %conv1906
  br i1 %cmp1907, label %land.lhs.true1909, label %cond.false1915

land.lhs.true1909:                                ; preds = %cond.true1904
  %708 = load i8*, i8** %pat, align 8
  %arrayidx1910 = getelementptr inbounds i8, i8* %708, i64 2
  %709 = load i8, i8* %arrayidx1910, align 1
  %conv1911 = zext i8 %709 to i32
  %cmp1912 = icmp eq i32 136, %conv1911
  br i1 %cmp1912, label %cond.true1914, label %cond.false1915

cond.true1914:                                    ; preds = %land.lhs.true1909
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false1915:                                   ; preds = %land.lhs.true1909, %cond.true1904
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false1916:                                   ; preds = %cond.false1899
  %710 = load i8*, i8** %pat, align 8
  %arrayidx1917 = getelementptr inbounds i8, i8* %710, i64 0
  %711 = load i8, i8* %arrayidx1917, align 1
  %conv1918 = zext i8 %711 to i32
  %cmp1919 = icmp eq i32 119, %conv1918
  br i1 %cmp1919, label %cond.true1926, label %lor.lhs.false1921

lor.lhs.false1921:                                ; preds = %cond.false1916
  %712 = load i8*, i8** %pat, align 8
  %arrayidx1922 = getelementptr inbounds i8, i8* %712, i64 0
  %713 = load i8, i8* %arrayidx1922, align 1
  %conv1923 = zext i8 %713 to i32
  %cmp1924 = icmp eq i32 121, %conv1923
  br i1 %cmp1924, label %cond.true1926, label %cond.false1938

cond.true1926:                                    ; preds = %lor.lhs.false1921, %cond.false1916
  %714 = load i8*, i8** %pat, align 8
  %arrayidx1927 = getelementptr inbounds i8, i8* %714, i64 1
  %715 = load i8, i8* %arrayidx1927, align 1
  %conv1928 = zext i8 %715 to i32
  %cmp1929 = icmp eq i32 204, %conv1928
  br i1 %cmp1929, label %land.lhs.true1931, label %cond.false1937

land.lhs.true1931:                                ; preds = %cond.true1926
  %716 = load i8*, i8** %pat, align 8
  %arrayidx1932 = getelementptr inbounds i8, i8* %716, i64 2
  %717 = load i8, i8* %arrayidx1932, align 1
  %conv1933 = zext i8 %717 to i32
  %cmp1934 = icmp eq i32 138, %conv1933
  br i1 %cmp1934, label %cond.true1936, label %cond.false1937

cond.true1936:                                    ; preds = %land.lhs.true1931
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false1937:                                   ; preds = %land.lhs.true1931, %cond.true1926
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false1938:                                   ; preds = %lor.lhs.false1921
  %718 = load i8*, i8** %pat, align 8
  %arrayidx1939 = getelementptr inbounds i8, i8* %718, i64 0
  %719 = load i8, i8* %arrayidx1939, align 1
  %conv1940 = zext i8 %719 to i32
  %cmp1941 = icmp eq i32 202, %conv1940
  br i1 %cmp1941, label %land.lhs.true1943, label %cond.false1954

land.lhs.true1943:                                ; preds = %cond.false1938
  %720 = load i8*, i8** %pat, align 8
  %arrayidx1944 = getelementptr inbounds i8, i8* %720, i64 1
  %721 = load i8, i8* %arrayidx1944, align 1
  %conv1945 = zext i8 %721 to i32
  %cmp1946 = icmp eq i32 188, %conv1945
  br i1 %cmp1946, label %land.lhs.true1948, label %cond.false1954

land.lhs.true1948:                                ; preds = %land.lhs.true1943
  %722 = load i8*, i8** %pat, align 8
  %arrayidx1949 = getelementptr inbounds i8, i8* %722, i64 2
  %723 = load i8, i8* %arrayidx1949, align 1
  %conv1950 = zext i8 %723 to i32
  %cmp1951 = icmp eq i32 110, %conv1950
  br i1 %cmp1951, label %cond.true1953, label %cond.false1954

cond.true1953:                                    ; preds = %land.lhs.true1948
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false1954:                                   ; preds = %land.lhs.true1948, %land.lhs.true1943, %cond.false1938
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false1955:                                   ; preds = %cond.false1774
  %724 = load i8*, i8** %pat_end, align 8
  %725 = load i8*, i8** %pat, align 8
  %sub.ptr.lhs.cast1956 = ptrtoint i8* %724 to i64
  %sub.ptr.rhs.cast1957 = ptrtoint i8* %725 to i64
  %sub.ptr.sub1958 = sub i64 %sub.ptr.lhs.cast1956, %sub.ptr.rhs.cast1957
  %cmp1959 = icmp sgt i64 %sub.ptr.sub1958, 1
  br i1 %cmp1959, label %cond.true1961, label %cond.false2000

cond.true1961:                                    ; preds = %cond.false1955
  %726 = load i8*, i8** %pat, align 8
  %arrayidx1962 = getelementptr inbounds i8, i8* %726, i64 0
  %727 = load i8, i8* %arrayidx1962, align 1
  %conv1963 = zext i8 %727 to i32
  %cmp1964 = icmp eq i32 102, %conv1963
  br i1 %cmp1964, label %cond.true1966, label %cond.false1983

cond.true1966:                                    ; preds = %cond.true1961
  %728 = load i8*, i8** %pat, align 8
  %arrayidx1967 = getelementptr inbounds i8, i8* %728, i64 1
  %729 = load i8, i8* %arrayidx1967, align 1
  %conv1968 = zext i8 %729 to i32
  %cmp1969 = icmp eq i32 102, %conv1968
  br i1 %cmp1969, label %cond.true1981, label %lor.lhs.false1971

lor.lhs.false1971:                                ; preds = %cond.true1966
  %730 = load i8*, i8** %pat, align 8
  %arrayidx1972 = getelementptr inbounds i8, i8* %730, i64 1
  %731 = load i8, i8* %arrayidx1972, align 1
  %conv1973 = zext i8 %731 to i32
  %cmp1974 = icmp eq i32 105, %conv1973
  br i1 %cmp1974, label %cond.true1981, label %lor.lhs.false1976

lor.lhs.false1976:                                ; preds = %lor.lhs.false1971
  %732 = load i8*, i8** %pat, align 8
  %arrayidx1977 = getelementptr inbounds i8, i8* %732, i64 1
  %733 = load i8, i8* %arrayidx1977, align 1
  %conv1978 = zext i8 %733 to i32
  %cmp1979 = icmp eq i32 108, %conv1978
  br i1 %cmp1979, label %cond.true1981, label %cond.false1982

cond.true1981:                                    ; preds = %lor.lhs.false1976, %lor.lhs.false1971, %cond.true1966
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false1982:                                   ; preds = %lor.lhs.false1976
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false1983:                                   ; preds = %cond.true1961
  %734 = load i8*, i8** %pat, align 8
  %arrayidx1984 = getelementptr inbounds i8, i8* %734, i64 0
  %735 = load i8, i8* %arrayidx1984, align 1
  %conv1985 = zext i8 %735 to i32
  %cmp1986 = icmp eq i32 115, %conv1985
  br i1 %cmp1986, label %land.lhs.true1988, label %cond.false1999

land.lhs.true1988:                                ; preds = %cond.false1983
  %736 = load i8*, i8** %pat, align 8
  %arrayidx1989 = getelementptr inbounds i8, i8* %736, i64 1
  %737 = load i8, i8* %arrayidx1989, align 1
  %conv1990 = zext i8 %737 to i32
  %cmp1991 = icmp eq i32 115, %conv1990
  br i1 %cmp1991, label %cond.true1998, label %lor.lhs.false1993

lor.lhs.false1993:                                ; preds = %land.lhs.true1988
  %738 = load i8*, i8** %pat, align 8
  %arrayidx1994 = getelementptr inbounds i8, i8* %738, i64 1
  %739 = load i8, i8* %arrayidx1994, align 1
  %conv1995 = zext i8 %739 to i32
  %cmp1996 = icmp eq i32 116, %conv1995
  br i1 %cmp1996, label %cond.true1998, label %cond.false1999

cond.true1998:                                    ; preds = %lor.lhs.false1993, %land.lhs.true1988
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false1999:                                   ; preds = %lor.lhs.false1993, %cond.false1983
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false2000:                                   ; preds = %cond.false1955
  br i1 false, label %if.then2122, label %lor.lhs.false2001

lor.lhs.false2001:                                ; preds = %cond.false2000, %cond.false1999, %cond.true1998, %cond.false1982, %cond.true1981, %cond.false1954, %cond.true1953, %cond.false1937, %cond.true1936, %cond.false1915, %cond.true1914, %cond.false1898, %cond.true1897, %cond.false1881, %cond.true1880, %cond.false1864, %cond.true1863, %cond.false1847, %cond.true1846, %cond.false1830, %cond.true1829, %cond.false1818, %cond.true1817, %cond.false1796, %cond.true1795, %cond.false1773, %cond.false1772, %cond.true1771, %cond.false1755, %cond.true1754, %cond.false1727, %cond.true1726, %cond.false1705, %cond.true1704, %cond.false1688, %cond.true1687, %cond.false1676, %cond.true1675, %cond.false1659, %cond.true1658, %cond.false1647, %cond.true1646, %cond.false1630, %cond.true1629, %cond.false1608, %cond.true1607, %cond.false1591, %cond.true1590, %cond.false1579, %cond.true1578, %cond.false1557, %cond.true1556, %cond.false1534, %cond.true1533, %cond.false1517, %cond.true1516, %cond.false1495, %cond.true1494, %cond.false1473, %cond.true1472, %cond.false1456, %cond.true1455, %cond.false1439, %cond.true1438, %cond.false1422, %cond.true1421, %cond.false1405, %cond.true1404, %cond.false1388, %cond.true1387, %cond.false1376, %cond.true1375, %cond.false1354, %cond.true1353, %cond.false1331, %cond.false1330, %cond.true1329, %cond.false1296, %cond.true1295, %cond.false1268, %cond.true1267, %cond.false1251, %cond.true1250, %cond.false1223, %cond.true1222, %cond.false1201, %cond.true1200, %cond.false1184, %cond.true1183, %cond.false1172, %cond.true1171, %cond.false1155, %cond.true1154, %cond.false1143, %cond.true1142, %cond.false1126, %cond.true1125, %cond.false1104, %cond.true1103, %cond.false1087, %cond.true1086, %cond.false1075, %cond.true1074, %cond.false1053, %cond.true1052, %cond.false1030, %cond.true1029, %cond.false1013, %cond.true1012, %cond.false991, %cond.true990, %cond.false969, %cond.true968, %cond.false952, %cond.true951, %cond.false935, %cond.true934, %cond.false918, %cond.true917, %cond.false901, %cond.true900, %cond.false884, %cond.true883, %cond.false872, %cond.true871, %cond.false850, %cond.true849, %cond.false827, %cond.false826, %cond.true825, %cond.false792, %cond.true791, %cond.false764, %cond.true763, %cond.false747, %cond.true746, %cond.false719, %cond.true718, %cond.false697, %cond.true696, %cond.false680, %cond.true679, %cond.false668, %cond.false667, %cond.true666, %cond.false640, %cond.true639, %cond.false628, %cond.false627, %cond.true626, %cond.false615, %cond.true614, %cond.false597, %cond.true596, %cond.false585, %cond.true584, %cond.false557, %cond.true556, %cond.false535, %cond.false534, %cond.true533, %cond.false522, %cond.false521, %cond.true520, %cond.false509, %cond.true508, %cond.false481, %cond.true480, %cond.false469, %cond.false468, %cond.true467, %cond.false436, %cond.true435, %cond.false413, %cond.true412, %cond.false396, %cond.true395, %cond.false374, %cond.true373, %cond.false352, %cond.true351, %cond.false335, %cond.true334, %cond.false318, %cond.true317, %cond.false301, %cond.true300, %cond.false284, %cond.true283, %cond.false267, %cond.true266, %cond.false255, %cond.true254, %cond.false233, %cond.true232, %if.end211
  %740 = load i8, i8* %is_utf8_pat, align 1
  %tobool2002 = trunc i8 %740 to i1
  br i1 %tobool2002, label %if.else2123, label %land.lhs.true2003

land.lhs.true2003:                                ; preds = %lor.lhs.false2001
  %741 = load i8*, i8** %pat_end, align 8
  %742 = load i8*, i8** %pat, align 8
  %sub.ptr.lhs.cast2004 = ptrtoint i8* %741 to i64
  %sub.ptr.rhs.cast2005 = ptrtoint i8* %742 to i64
  %sub.ptr.sub2006 = sub i64 %sub.ptr.lhs.cast2004, %sub.ptr.rhs.cast2005
  %cmp2007 = icmp sgt i64 %sub.ptr.sub2006, 2
  br i1 %cmp2007, label %cond.true2009, label %cond.false2069

cond.true2009:                                    ; preds = %land.lhs.true2003
  %743 = load i8*, i8** %pat, align 8
  %arrayidx2010 = getelementptr inbounds i8, i8* %743, i64 0
  %744 = load i8, i8* %arrayidx2010, align 1
  %conv2011 = zext i8 %744 to i32
  %and2012 = and i32 %conv2011, 223
  %cmp2013 = icmp eq i32 %and2012, 70
  br i1 %cmp2013, label %cond.true2015, label %cond.false2049

cond.true2015:                                    ; preds = %cond.true2009
  %745 = load i8*, i8** %pat, align 8
  %arrayidx2016 = getelementptr inbounds i8, i8* %745, i64 1
  %746 = load i8, i8* %arrayidx2016, align 1
  %conv2017 = zext i8 %746 to i32
  %and2018 = and i32 %conv2017, 223
  %cmp2019 = icmp eq i32 %and2018, 70
  br i1 %cmp2019, label %cond.true2021, label %cond.false2035

cond.true2021:                                    ; preds = %cond.true2015
  %747 = load i8*, i8** %pat, align 8
  %arrayidx2022 = getelementptr inbounds i8, i8* %747, i64 2
  %748 = load i8, i8* %arrayidx2022, align 1
  %conv2023 = zext i8 %748 to i32
  %and2024 = and i32 %conv2023, 223
  %cmp2025 = icmp eq i32 %and2024, 73
  br i1 %cmp2025, label %cond.true2033, label %lor.lhs.false2027

lor.lhs.false2027:                                ; preds = %cond.true2021
  %749 = load i8*, i8** %pat, align 8
  %arrayidx2028 = getelementptr inbounds i8, i8* %749, i64 2
  %750 = load i8, i8* %arrayidx2028, align 1
  %conv2029 = zext i8 %750 to i32
  %and2030 = and i32 %conv2029, 223
  %cmp2031 = icmp eq i32 %and2030, 76
  br i1 %cmp2031, label %cond.true2033, label %cond.false2034

cond.true2033:                                    ; preds = %lor.lhs.false2027, %cond.true2021
  br i1 true, label %if.then2122, label %if.else2123

cond.false2034:                                   ; preds = %lor.lhs.false2027
  br i1 true, label %if.then2122, label %if.else2123

cond.false2035:                                   ; preds = %cond.true2015
  %751 = load i8*, i8** %pat, align 8
  %arrayidx2036 = getelementptr inbounds i8, i8* %751, i64 1
  %752 = load i8, i8* %arrayidx2036, align 1
  %conv2037 = zext i8 %752 to i32
  %and2038 = and i32 %conv2037, 223
  %cmp2039 = icmp eq i32 %and2038, 73
  br i1 %cmp2039, label %cond.true2047, label %lor.lhs.false2041

lor.lhs.false2041:                                ; preds = %cond.false2035
  %753 = load i8*, i8** %pat, align 8
  %arrayidx2042 = getelementptr inbounds i8, i8* %753, i64 1
  %754 = load i8, i8* %arrayidx2042, align 1
  %conv2043 = zext i8 %754 to i32
  %and2044 = and i32 %conv2043, 223
  %cmp2045 = icmp eq i32 %and2044, 76
  br i1 %cmp2045, label %cond.true2047, label %cond.false2048

cond.true2047:                                    ; preds = %lor.lhs.false2041, %cond.false2035
  br i1 true, label %if.then2122, label %if.else2123

cond.false2048:                                   ; preds = %lor.lhs.false2041
  br i1 false, label %if.then2122, label %if.else2123

cond.false2049:                                   ; preds = %cond.true2009
  %755 = load i8*, i8** %pat, align 8
  %arrayidx2050 = getelementptr inbounds i8, i8* %755, i64 0
  %756 = load i8, i8* %arrayidx2050, align 1
  %conv2051 = zext i8 %756 to i32
  %and2052 = and i32 %conv2051, 223
  %cmp2053 = icmp eq i32 %and2052, 83
  br i1 %cmp2053, label %land.lhs.true2055, label %cond.false2068

land.lhs.true2055:                                ; preds = %cond.false2049
  %757 = load i8*, i8** %pat, align 8
  %arrayidx2056 = getelementptr inbounds i8, i8* %757, i64 1
  %758 = load i8, i8* %arrayidx2056, align 1
  %conv2057 = zext i8 %758 to i32
  %and2058 = and i32 %conv2057, 223
  %cmp2059 = icmp eq i32 %and2058, 83
  br i1 %cmp2059, label %cond.true2067, label %lor.lhs.false2061

lor.lhs.false2061:                                ; preds = %land.lhs.true2055
  %759 = load i8*, i8** %pat, align 8
  %arrayidx2062 = getelementptr inbounds i8, i8* %759, i64 1
  %760 = load i8, i8* %arrayidx2062, align 1
  %conv2063 = zext i8 %760 to i32
  %and2064 = and i32 %conv2063, 223
  %cmp2065 = icmp eq i32 %and2064, 84
  br i1 %cmp2065, label %cond.true2067, label %cond.false2068

cond.true2067:                                    ; preds = %lor.lhs.false2061, %land.lhs.true2055
  br i1 true, label %if.then2122, label %if.else2123

cond.false2068:                                   ; preds = %lor.lhs.false2061, %cond.false2049
  br i1 false, label %if.then2122, label %if.else2123

cond.false2069:                                   ; preds = %land.lhs.true2003
  %761 = load i8*, i8** %pat_end, align 8
  %762 = load i8*, i8** %pat, align 8
  %sub.ptr.lhs.cast2070 = ptrtoint i8* %761 to i64
  %sub.ptr.rhs.cast2071 = ptrtoint i8* %762 to i64
  %sub.ptr.sub2072 = sub i64 %sub.ptr.lhs.cast2070, %sub.ptr.rhs.cast2071
  %cmp2073 = icmp sgt i64 %sub.ptr.sub2072, 1
  br i1 %cmp2073, label %cond.true2075, label %cond.false2121

cond.true2075:                                    ; preds = %cond.false2069
  %763 = load i8*, i8** %pat, align 8
  %arrayidx2076 = getelementptr inbounds i8, i8* %763, i64 0
  %764 = load i8, i8* %arrayidx2076, align 1
  %conv2077 = zext i8 %764 to i32
  %and2078 = and i32 %conv2077, 223
  %cmp2079 = icmp eq i32 %and2078, 70
  br i1 %cmp2079, label %cond.true2081, label %cond.false2101

cond.true2081:                                    ; preds = %cond.true2075
  %765 = load i8*, i8** %pat, align 8
  %arrayidx2082 = getelementptr inbounds i8, i8* %765, i64 1
  %766 = load i8, i8* %arrayidx2082, align 1
  %conv2083 = zext i8 %766 to i32
  %and2084 = and i32 %conv2083, 223
  %cmp2085 = icmp eq i32 %and2084, 70
  br i1 %cmp2085, label %cond.true2099, label %lor.lhs.false2087

lor.lhs.false2087:                                ; preds = %cond.true2081
  %767 = load i8*, i8** %pat, align 8
  %arrayidx2088 = getelementptr inbounds i8, i8* %767, i64 1
  %768 = load i8, i8* %arrayidx2088, align 1
  %conv2089 = zext i8 %768 to i32
  %and2090 = and i32 %conv2089, 223
  %cmp2091 = icmp eq i32 %and2090, 73
  br i1 %cmp2091, label %cond.true2099, label %lor.lhs.false2093

lor.lhs.false2093:                                ; preds = %lor.lhs.false2087
  %769 = load i8*, i8** %pat, align 8
  %arrayidx2094 = getelementptr inbounds i8, i8* %769, i64 1
  %770 = load i8, i8* %arrayidx2094, align 1
  %conv2095 = zext i8 %770 to i32
  %and2096 = and i32 %conv2095, 223
  %cmp2097 = icmp eq i32 %and2096, 76
  br i1 %cmp2097, label %cond.true2099, label %cond.false2100

cond.true2099:                                    ; preds = %lor.lhs.false2093, %lor.lhs.false2087, %cond.true2081
  br i1 true, label %if.then2122, label %if.else2123

cond.false2100:                                   ; preds = %lor.lhs.false2093
  br i1 false, label %if.then2122, label %if.else2123

cond.false2101:                                   ; preds = %cond.true2075
  %771 = load i8*, i8** %pat, align 8
  %arrayidx2102 = getelementptr inbounds i8, i8* %771, i64 0
  %772 = load i8, i8* %arrayidx2102, align 1
  %conv2103 = zext i8 %772 to i32
  %and2104 = and i32 %conv2103, 223
  %cmp2105 = icmp eq i32 %and2104, 83
  br i1 %cmp2105, label %land.lhs.true2107, label %cond.false2120

land.lhs.true2107:                                ; preds = %cond.false2101
  %773 = load i8*, i8** %pat, align 8
  %arrayidx2108 = getelementptr inbounds i8, i8* %773, i64 1
  %774 = load i8, i8* %arrayidx2108, align 1
  %conv2109 = zext i8 %774 to i32
  %and2110 = and i32 %conv2109, 223
  %cmp2111 = icmp eq i32 %and2110, 83
  br i1 %cmp2111, label %cond.true2119, label %lor.lhs.false2113

lor.lhs.false2113:                                ; preds = %land.lhs.true2107
  %775 = load i8*, i8** %pat, align 8
  %arrayidx2114 = getelementptr inbounds i8, i8* %775, i64 1
  %776 = load i8, i8* %arrayidx2114, align 1
  %conv2115 = zext i8 %776 to i32
  %and2116 = and i32 %conv2115, 223
  %cmp2117 = icmp eq i32 %and2116, 84
  br i1 %cmp2117, label %cond.true2119, label %cond.false2120

cond.true2119:                                    ; preds = %lor.lhs.false2113, %land.lhs.true2107
  br i1 true, label %if.then2122, label %if.else2123

cond.false2120:                                   ; preds = %lor.lhs.false2113, %cond.false2101
  br i1 false, label %if.then2122, label %if.else2123

cond.false2121:                                   ; preds = %cond.false2069
  br i1 false, label %if.then2122, label %if.else2123

if.then2122:                                      ; preds = %cond.false2121, %cond.false2120, %cond.true2119, %cond.false2100, %cond.true2099, %cond.false2068, %cond.true2067, %cond.false2048, %cond.true2047, %cond.false2034, %cond.true2033, %cond.false2000, %cond.false1999, %cond.true1998, %cond.false1982, %cond.true1981, %cond.false1954, %cond.true1953, %cond.false1937, %cond.true1936, %cond.false1915, %cond.true1914, %cond.false1898, %cond.true1897, %cond.false1881, %cond.true1880, %cond.false1864, %cond.true1863, %cond.false1847, %cond.true1846, %cond.false1830, %cond.true1829, %cond.false1818, %cond.true1817, %cond.false1796, %cond.true1795, %cond.false1773, %cond.false1772, %cond.true1771, %cond.false1755, %cond.true1754, %cond.false1727, %cond.true1726, %cond.false1705, %cond.true1704, %cond.false1688, %cond.true1687, %cond.false1676, %cond.true1675, %cond.false1659, %cond.true1658, %cond.false1647, %cond.true1646, %cond.false1630, %cond.true1629, %cond.false1608, %cond.true1607, %cond.false1591, %cond.true1590, %cond.false1579, %cond.true1578, %cond.false1557, %cond.true1556, %cond.false1534, %cond.true1533, %cond.false1517, %cond.true1516, %cond.false1495, %cond.true1494, %cond.false1473, %cond.true1472, %cond.false1456, %cond.true1455, %cond.false1439, %cond.true1438, %cond.false1422, %cond.true1421, %cond.false1405, %cond.true1404, %cond.false1388, %cond.true1387, %cond.false1376, %cond.true1375, %cond.false1354, %cond.true1353, %cond.false1331, %cond.false1330, %cond.true1329, %cond.false1296, %cond.true1295, %cond.false1268, %cond.true1267, %cond.false1251, %cond.true1250, %cond.false1223, %cond.true1222, %cond.false1201, %cond.true1200, %cond.false1184, %cond.true1183, %cond.false1172, %cond.true1171, %cond.false1155, %cond.true1154, %cond.false1143, %cond.true1142, %cond.false1126, %cond.true1125, %cond.false1104, %cond.true1103, %cond.false1087, %cond.true1086, %cond.false1075, %cond.true1074, %cond.false1053, %cond.true1052, %cond.false1030, %cond.true1029, %cond.false1013, %cond.true1012, %cond.false991, %cond.true990, %cond.false969, %cond.true968, %cond.false952, %cond.true951, %cond.false935, %cond.true934, %cond.false918, %cond.true917, %cond.false901, %cond.true900, %cond.false884, %cond.true883, %cond.false872, %cond.true871, %cond.false850, %cond.true849, %cond.false827, %cond.false826, %cond.true825, %cond.false792, %cond.true791, %cond.false764, %cond.true763, %cond.false747, %cond.true746, %cond.false719, %cond.true718, %cond.false697, %cond.true696, %cond.false680, %cond.true679, %cond.false668, %cond.false667, %cond.true666, %cond.false640, %cond.true639, %cond.false628, %cond.false627, %cond.true626, %cond.false615, %cond.true614, %cond.false597, %cond.true596, %cond.false585, %cond.true584, %cond.false557, %cond.true556, %cond.false535, %cond.false534, %cond.true533, %cond.false522, %cond.false521, %cond.true520, %cond.false509, %cond.true508, %cond.false481, %cond.true480, %cond.false469, %cond.false468, %cond.true467, %cond.false436, %cond.true435, %cond.false413, %cond.true412, %cond.false396, %cond.true395, %cond.false374, %cond.true373, %cond.false352, %cond.true351, %cond.false335, %cond.true334, %cond.false318, %cond.true317, %cond.false301, %cond.true300, %cond.false284, %cond.true283, %cond.false267, %cond.true266, %cond.false255, %cond.true254, %cond.false233, %cond.true232
  store i8 1, i8* %use_chrtest_void, align 1
  br label %if.end2280

if.else2123:                                      ; preds = %cond.false2121, %cond.false2120, %cond.true2119, %cond.false2100, %cond.true2099, %cond.false2068, %cond.true2067, %cond.false2048, %cond.true2047, %cond.false2034, %cond.true2033, %lor.lhs.false2001
  %777 = load i8, i8* %is_utf8_pat, align 1
  %tobool2124 = trunc i8 %777 to i1
  br i1 %tobool2124, label %cond.true2126, label %cond.false2128

cond.true2126:                                    ; preds = %if.else2123
  %778 = load i8*, i8** %pat, align 8
  %call2127 = call i64 @Perl_valid_utf8_to_uvchr(i8* %778, i64* null)
  br label %cond.end2130

cond.false2128:                                   ; preds = %if.else2123
  %779 = load i8*, i8** %pat, align 8
  %780 = load i8, i8* %779, align 1
  %conv2129 = zext i8 %780 to i64
  br label %cond.end2130

cond.end2130:                                     ; preds = %cond.false2128, %cond.true2126
  %cond2131 = phi i64 [ %call2127, %cond.true2126 ], [ %conv2129, %cond.false2128 ]
  store i64 %cond2131, i64* %c1, align 8
  %781 = load i64, i64* %c1, align 8
  %cmp2132 = icmp ugt i64 %781, 255
  br i1 %cmp2132, label %if.then2134, label %if.else2219

if.then2134:                                      ; preds = %cond.end2130
  %782 = load %struct.hv*, %struct.hv** @PL_utf8_foldclosures, align 8
  %tobool2135 = icmp ne %struct.hv* %782, null
  br i1 %tobool2135, label %if.end2137, label %if.then2136

if.then2136:                                      ; preds = %if.then2134
  call void @Perl__load_PL_utf8_foldclosures()
  br label %if.end2137

if.end2137:                                       ; preds = %if.then2136, %if.then2134
  %783 = load %struct.hv*, %struct.hv** @PL_utf8_foldclosures, align 8
  %784 = load i8*, i8** %pat, align 8
  %785 = load i8*, i8** %pat, align 8
  %786 = load i8, i8* %785, align 1
  %idxprom2138 = zext i8 %786 to i64
  %arrayidx2139 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom2138
  %787 = load i8, i8* %arrayidx2139, align 1
  %conv2140 = zext i8 %787 to i32
  %call2141 = call i8* @Perl_hv_common_key_len(%struct.hv* %783, i8* %784, i32 %conv2140, i32 32, %struct.sv* null, i32 0)
  %788 = bitcast i8* %call2141 to %struct.sv**
  store %struct.sv** %788, %struct.sv*** %listp, align 8
  %tobool2142 = icmp ne %struct.sv** %788, null
  br i1 %tobool2142, label %if.else2144, label %if.then2143

if.then2143:                                      ; preds = %if.end2137
  %789 = load i64, i64* %c1, align 8
  store i64 %789, i64* %c2, align 8
  br label %if.end2218

if.else2144:                                      ; preds = %if.end2137
  %790 = load %struct.sv**, %struct.sv*** %listp, align 8
  %791 = load %struct.sv*, %struct.sv** %790, align 8
  %792 = bitcast %struct.sv* %791 to %struct.av*
  store %struct.av* %792, %struct.av** %list, align 8
  %793 = load %struct.av*, %struct.av** %list, align 8
  %call2145 = call i64 @S_av_top_index(%struct.av* %793)
  %cmp2146 = icmp ne i64 %call2145, 1
  br i1 %cmp2146, label %if.then2148, label %if.else2149

if.then2148:                                      ; preds = %if.else2144
  store i8 1, i8* %use_chrtest_void, align 1
  br label %if.end2217

if.else2149:                                      ; preds = %if.else2144
  %794 = load %struct.av*, %struct.av** %list, align 8
  %call2150 = call %struct.sv** @Perl_av_fetch(%struct.av* %794, i64 0, i32 0)
  store %struct.sv** %call2150, %struct.sv*** %c_p, align 8
  %795 = load %struct.sv**, %struct.sv*** %c_p, align 8
  %cmp2151 = icmp eq %struct.sv** %795, null
  br i1 %cmp2151, label %if.then2153, label %if.end2154

if.then2153:                                      ; preds = %if.else2149
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.21, i64 0, i64 0))
  br label %if.end2154

if.end2154:                                       ; preds = %if.then2153, %if.else2149
  %796 = load %struct.sv**, %struct.sv*** %c_p, align 8
  %797 = load %struct.sv*, %struct.sv** %796, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %797, i32 0, i32 2
  %798 = load i32, i32* %sv_flags, align 4
  %and2155 = and i32 %798, -2145386240
  %cmp2156 = icmp eq i32 %and2155, -2147483392
  br i1 %cmp2156, label %cond.true2158, label %cond.false2159

cond.true2158:                                    ; preds = %if.end2154
  %799 = load %struct.sv**, %struct.sv*** %c_p, align 8
  %800 = load %struct.sv*, %struct.sv** %799, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %800, i32 0, i32 0
  %801 = load i8*, i8** %sv_any, align 8
  %802 = bitcast i8* %801 to %struct.xpvuv*
  %xuv_u = getelementptr inbounds %struct.xpvuv, %struct.xpvuv* %802, i32 0, i32 4
  %xivu_uv = bitcast %union._xivu* %xuv_u to i64*
  %803 = load i64, i64* %xivu_uv, align 8
  br label %cond.end2161

cond.false2159:                                   ; preds = %if.end2154
  %804 = load %struct.sv**, %struct.sv*** %c_p, align 8
  %805 = load %struct.sv*, %struct.sv** %804, align 8
  %call2160 = call i64 @Perl_sv_2uv_flags(%struct.sv* %805, i32 2)
  br label %cond.end2161

cond.end2161:                                     ; preds = %cond.false2159, %cond.true2158
  %cond2162 = phi i64 [ %803, %cond.true2158 ], [ %call2160, %cond.false2159 ]
  store i64 %cond2162, i64* %c1, align 8
  %806 = load %struct.av*, %struct.av** %list, align 8
  %call2163 = call %struct.sv** @Perl_av_fetch(%struct.av* %806, i64 1, i32 0)
  store %struct.sv** %call2163, %struct.sv*** %c_p, align 8
  %807 = load %struct.sv**, %struct.sv*** %c_p, align 8
  %cmp2164 = icmp eq %struct.sv** %807, null
  br i1 %cmp2164, label %if.then2166, label %if.end2167

if.then2166:                                      ; preds = %cond.end2161
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.21, i64 0, i64 0))
  br label %if.end2167

if.end2167:                                       ; preds = %if.then2166, %cond.end2161
  %808 = load %struct.sv**, %struct.sv*** %c_p, align 8
  %809 = load %struct.sv*, %struct.sv** %808, align 8
  %sv_flags2168 = getelementptr inbounds %struct.sv, %struct.sv* %809, i32 0, i32 2
  %810 = load i32, i32* %sv_flags2168, align 4
  %and2169 = and i32 %810, -2145386240
  %cmp2170 = icmp eq i32 %and2169, -2147483392
  br i1 %cmp2170, label %cond.true2172, label %cond.false2176

cond.true2172:                                    ; preds = %if.end2167
  %811 = load %struct.sv**, %struct.sv*** %c_p, align 8
  %812 = load %struct.sv*, %struct.sv** %811, align 8
  %sv_any2173 = getelementptr inbounds %struct.sv, %struct.sv* %812, i32 0, i32 0
  %813 = load i8*, i8** %sv_any2173, align 8
  %814 = bitcast i8* %813 to %struct.xpvuv*
  %xuv_u2174 = getelementptr inbounds %struct.xpvuv, %struct.xpvuv* %814, i32 0, i32 4
  %xivu_uv2175 = bitcast %union._xivu* %xuv_u2174 to i64*
  %815 = load i64, i64* %xivu_uv2175, align 8
  br label %cond.end2178

cond.false2176:                                   ; preds = %if.end2167
  %816 = load %struct.sv**, %struct.sv*** %c_p, align 8
  %817 = load %struct.sv*, %struct.sv** %816, align 8
  %call2177 = call i64 @Perl_sv_2uv_flags(%struct.sv* %817, i32 2)
  br label %cond.end2178

cond.end2178:                                     ; preds = %cond.false2176, %cond.true2172
  %cond2179 = phi i64 [ %815, %cond.true2172 ], [ %call2177, %cond.false2176 ]
  store i64 %cond2179, i64* %c2, align 8
  %818 = load i64, i64* %c1, align 8
  %cmp2180 = icmp ult i64 %818, 256
  %conv2181 = zext i1 %cmp2180 to i32
  %819 = load i64, i64* %c2, align 8
  %cmp2182 = icmp ult i64 %819, 256
  %conv2183 = zext i1 %cmp2182 to i32
  %cmp2184 = icmp ne i32 %conv2181, %conv2183
  br i1 %cmp2184, label %if.then2186, label %if.end2216

if.then2186:                                      ; preds = %cond.end2178
  %820 = load %struct.regnode*, %struct.regnode** %text_node.addr, align 8
  %type2187 = getelementptr inbounds %struct.regnode, %struct.regnode* %820, i32 0, i32 1
  %821 = load i8, i8* %type2187, align 1
  %conv2188 = zext i8 %821 to i32
  %cmp2189 = icmp eq i32 %conv2188, 34
  br i1 %cmp2189, label %land.lhs.true2191, label %lor.lhs.false2193

land.lhs.true2191:                                ; preds = %if.then2186
  %822 = load i8, i8* @PL_in_utf8_CTYPE_locale, align 1
  %tobool2192 = trunc i8 %822 to i1
  br i1 %tobool2192, label %lor.lhs.false2193, label %if.then2209

lor.lhs.false2193:                                ; preds = %land.lhs.true2191, %if.then2186
  %823 = load %struct.regnode*, %struct.regnode** %text_node.addr, align 8
  %type2194 = getelementptr inbounds %struct.regnode, %struct.regnode* %823, i32 0, i32 1
  %824 = load i8, i8* %type2194, align 1
  %conv2195 = zext i8 %824 to i32
  %cmp2196 = icmp eq i32 %conv2195, 36
  br i1 %cmp2196, label %land.lhs.true2203, label %lor.lhs.false2198

lor.lhs.false2198:                                ; preds = %lor.lhs.false2193
  %825 = load %struct.regnode*, %struct.regnode** %text_node.addr, align 8
  %type2199 = getelementptr inbounds %struct.regnode, %struct.regnode* %825, i32 0, i32 1
  %826 = load i8, i8* %type2199, align 1
  %conv2200 = zext i8 %826 to i32
  %cmp2201 = icmp eq i32 %conv2200, 39
  br i1 %cmp2201, label %land.lhs.true2203, label %if.end2215

land.lhs.true2203:                                ; preds = %lor.lhs.false2198, %lor.lhs.false2193
  %827 = load i64, i64* %c1, align 8
  %cmp2204 = icmp ult i64 %827, 128
  br i1 %cmp2204, label %if.then2209, label %lor.lhs.false2206

lor.lhs.false2206:                                ; preds = %land.lhs.true2203
  %828 = load i64, i64* %c2, align 8
  %cmp2207 = icmp ult i64 %828, 128
  br i1 %cmp2207, label %if.then2209, label %if.end2215

if.then2209:                                      ; preds = %lor.lhs.false2206, %land.lhs.true2203, %land.lhs.true2191
  %829 = load i64, i64* %c1, align 8
  %cmp2210 = icmp ult i64 %829, 256
  br i1 %cmp2210, label %if.then2212, label %if.else2213

if.then2212:                                      ; preds = %if.then2209
  %830 = load i64, i64* %c2, align 8
  store i64 %830, i64* %c1, align 8
  br label %if.end2214

if.else2213:                                      ; preds = %if.then2209
  %831 = load i64, i64* %c1, align 8
  store i64 %831, i64* %c2, align 8
  br label %if.end2214

if.end2214:                                       ; preds = %if.else2213, %if.then2212
  br label %if.end2215

if.end2215:                                       ; preds = %if.end2214, %lor.lhs.false2206, %lor.lhs.false2198
  br label %if.end2216

if.end2216:                                       ; preds = %if.end2215, %cond.end2178
  br label %if.end2217

if.end2217:                                       ; preds = %if.end2216, %if.then2148
  br label %if.end2218

if.end2218:                                       ; preds = %if.end2217, %if.then2143
  br label %if.end2279

if.else2219:                                      ; preds = %cond.end2130
  %832 = load i8, i8* %utf8_target, align 1
  %tobool2220 = trunc i8 %832 to i1
  br i1 %tobool2220, label %land.lhs.true2222, label %if.else2261

land.lhs.true2222:                                ; preds = %if.else2219
  %833 = load i64, i64* %c1, align 8
  %and2223 = and i64 %833, -256
  %tobool2224 = icmp ne i64 %and2223, 0
  br i1 %tobool2224, label %cond.false2226, label %cond.true2225

cond.true2225:                                    ; preds = %land.lhs.true2222
  br i1 true, label %lor.lhs.false2227, label %land.lhs.true2233

cond.false2226:                                   ; preds = %land.lhs.true2222
  br i1 false, label %lor.lhs.false2227, label %land.lhs.true2233

lor.lhs.false2227:                                ; preds = %cond.false2226, %cond.true2225
  %834 = load i64, i64* %c1, align 8
  %conv2228 = trunc i64 %834 to i8
  %idxprom2229 = zext i8 %conv2228 to i64
  %arrayidx2230 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom2229
  %835 = load i32, i32* %arrayidx2230, align 4
  %and2231 = and i32 %835, 262144
  %tobool2232 = icmp ne i32 %and2231, 0
  br i1 %tobool2232, label %land.lhs.true2233, label %if.else2261

land.lhs.true2233:                                ; preds = %lor.lhs.false2227, %cond.false2226, %cond.true2225
  %836 = load %struct.regnode*, %struct.regnode** %text_node.addr, align 8
  %type2234 = getelementptr inbounds %struct.regnode, %struct.regnode* %836, i32 0, i32 1
  %837 = load i8, i8* %type2234, align 1
  %conv2235 = zext i8 %837 to i32
  %cmp2236 = icmp eq i32 %conv2235, 34
  br i1 %cmp2236, label %land.lhs.true2238, label %land.lhs.true2240

land.lhs.true2238:                                ; preds = %land.lhs.true2233
  %838 = load i8, i8* @PL_in_utf8_CTYPE_locale, align 1
  %tobool2239 = trunc i8 %838 to i1
  br i1 %tobool2239, label %land.lhs.true2240, label %if.else2261

land.lhs.true2240:                                ; preds = %land.lhs.true2238, %land.lhs.true2233
  %839 = load %struct.regnode*, %struct.regnode** %text_node.addr, align 8
  %type2241 = getelementptr inbounds %struct.regnode, %struct.regnode* %839, i32 0, i32 1
  %840 = load i8, i8* %type2241, align 1
  %conv2242 = zext i8 %840 to i32
  %cmp2243 = icmp ne i32 %conv2242, 36
  br i1 %cmp2243, label %land.lhs.true2245, label %lor.lhs.false2250

land.lhs.true2245:                                ; preds = %land.lhs.true2240
  %841 = load %struct.regnode*, %struct.regnode** %text_node.addr, align 8
  %type2246 = getelementptr inbounds %struct.regnode, %struct.regnode* %841, i32 0, i32 1
  %842 = load i8, i8* %type2246, align 1
  %conv2247 = zext i8 %842 to i32
  %cmp2248 = icmp ne i32 %conv2247, 39
  br i1 %cmp2248, label %if.then2253, label %lor.lhs.false2250

lor.lhs.false2250:                                ; preds = %land.lhs.true2245, %land.lhs.true2240
  %843 = load i64, i64* %c1, align 8
  %cmp2251 = icmp ult i64 %843, 128
  br i1 %cmp2251, label %if.else2261, label %if.then2253

if.then2253:                                      ; preds = %lor.lhs.false2250, %land.lhs.true2245
  %844 = load i64, i64* %c1, align 8
  %cmp2254 = icmp eq i64 %844, 255
  br i1 %cmp2254, label %cond.true2256, label %cond.false2257

cond.true2256:                                    ; preds = %if.then2253
  br i1 true, label %if.then2258, label %if.else2259

cond.false2257:                                   ; preds = %if.then2253
  br i1 false, label %if.then2258, label %if.else2259

if.then2258:                                      ; preds = %cond.false2257, %cond.true2256
  store i64 376, i64* %c2, align 8
  br label %if.end2260

if.else2259:                                      ; preds = %cond.false2257, %cond.true2256
  store i8 1, i8* %use_chrtest_void, align 1
  br label %if.end2260

if.end2260:                                       ; preds = %if.else2259, %if.then2258
  br label %if.end2278

if.else2261:                                      ; preds = %lor.lhs.false2250, %land.lhs.true2238, %lor.lhs.false2227, %if.else2219
  %845 = load %struct.regnode*, %struct.regnode** %text_node.addr, align 8
  %type2262 = getelementptr inbounds %struct.regnode, %struct.regnode* %845, i32 0, i32 1
  %846 = load i8, i8* %type2262, align 1
  %conv2263 = zext i8 %846 to i32
  switch i32 %conv2263, label %sw.default [
    i32 34, label %sw.bb
    i32 33, label %sw.bb2266
    i32 39, label %sw.bb2272
    i32 36, label %sw.bb2273
    i32 37, label %sw.bb2273
    i32 35, label %sw.bb2273
  ]

sw.bb:                                            ; preds = %if.else2261
  %847 = load i64, i64* %c1, align 8
  %arrayidx2264 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_fold_locale, i64 0, i64 %847
  %848 = load i8, i8* %arrayidx2264, align 1
  %conv2265 = zext i8 %848 to i64
  store i64 %conv2265, i64* %c2, align 8
  br label %sw.epilog

sw.bb2266:                                        ; preds = %if.else2261
  %849 = load i8, i8* %utf8_target, align 1
  %tobool2267 = trunc i8 %849 to i1
  br i1 %tobool2267, label %if.end2271, label %if.then2268

if.then2268:                                      ; preds = %sw.bb2266
  %850 = load i64, i64* %c1, align 8
  %arrayidx2269 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_fold, i64 0, i64 %850
  %851 = load i8, i8* %arrayidx2269, align 1
  %conv2270 = zext i8 %851 to i64
  store i64 %conv2270, i64* %c2, align 8
  br label %sw.epilog

if.end2271:                                       ; preds = %sw.bb2266
  br label %sw.bb2272

sw.bb2272:                                        ; preds = %if.else2261, %if.end2271
  br label %sw.bb2273

sw.bb2273:                                        ; preds = %if.else2261, %if.else2261, %if.else2261, %sw.bb2272
  %852 = load i64, i64* %c1, align 8
  %arrayidx2274 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_fold_latin1, i64 0, i64 %852
  %853 = load i8, i8* %arrayidx2274, align 1
  %conv2275 = zext i8 %853 to i64
  store i64 %conv2275, i64* %c2, align 8
  br label %sw.epilog

sw.default:                                       ; preds = %if.else2261
  %854 = load %struct.regnode*, %struct.regnode** %text_node.addr, align 8
  %type2276 = getelementptr inbounds %struct.regnode, %struct.regnode* %854, i32 0, i32 1
  %855 = load i8, i8* %type2276, align 1
  %conv2277 = zext i8 %855 to i32
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.22, i64 0, i64 0), i32 %conv2277)
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb2273, %if.then2268, %sw.bb
  br label %if.end2278

if.end2278:                                       ; preds = %sw.epilog, %if.end2260
  br label %if.end2279

if.end2279:                                       ; preds = %if.end2278, %if.end2218
  br label %if.end2280

if.end2280:                                       ; preds = %if.end2279, %if.then2122
  br label %if.end2281

if.end2281:                                       ; preds = %if.end2280, %if.end20
  %856 = load i8, i8* %use_chrtest_void, align 1
  %tobool2282 = trunc i8 %856 to i1
  br i1 %tobool2282, label %if.then2283, label %if.else2284

if.then2283:                                      ; preds = %if.end2281
  %857 = load i32*, i32** %c1p.addr, align 8
  store i32 -1000, i32* %857, align 4
  %858 = load i32*, i32** %c2p.addr, align 8
  store i32 -1000, i32* %858, align 4
  br label %if.end2331

if.else2284:                                      ; preds = %if.end2281
  %859 = load i8, i8* %utf8_target, align 1
  %tobool2285 = trunc i8 %859 to i1
  br i1 %tobool2285, label %if.then2286, label %if.else2311

if.then2286:                                      ; preds = %if.else2284
  %860 = load i8, i8* %utf8_has_been_setup, align 1
  %tobool2287 = trunc i8 %860 to i1
  br i1 %tobool2287, label %if.end2291, label %if.then2288

if.then2288:                                      ; preds = %if.then2286
  %861 = load i8*, i8** %c1_utf8.addr, align 8
  %862 = load i64, i64* %c1, align 8
  %call2289 = call i8* @Perl_uvoffuni_to_utf8_flags(i8* %861, i64 %862, i64 0)
  %863 = load i8*, i8** %c2_utf8.addr, align 8
  %864 = load i64, i64* %c2, align 8
  %call2290 = call i8* @Perl_uvoffuni_to_utf8_flags(i8* %863, i64 %864, i64 0)
  br label %if.end2291

if.end2291:                                       ; preds = %if.then2288, %if.then2286
  %865 = load i8*, i8** %c1_utf8.addr, align 8
  %866 = load i8, i8* %865, align 1
  %conv2292 = zext i8 %866 to i64
  %cmp2293 = icmp ult i64 %conv2292, 128
  br i1 %cmp2293, label %cond.true2295, label %cond.false2297

cond.true2295:                                    ; preds = %if.end2291
  %867 = load i8*, i8** %c1_utf8.addr, align 8
  %868 = load i8, i8* %867, align 1
  %conv2296 = zext i8 %868 to i32
  br label %cond.end2298

cond.false2297:                                   ; preds = %if.end2291
  br label %cond.end2298

cond.end2298:                                     ; preds = %cond.false2297, %cond.true2295
  %cond2299 = phi i32 [ %conv2296, %cond.true2295 ], [ -999, %cond.false2297 ]
  %869 = load i32*, i32** %c1p.addr, align 8
  store i32 %cond2299, i32* %869, align 4
  %870 = load i8*, i8** %c2_utf8.addr, align 8
  %871 = load i8, i8* %870, align 1
  %conv2300 = zext i8 %871 to i64
  %cmp2301 = icmp ult i64 %conv2300, 128
  br i1 %cmp2301, label %cond.true2303, label %cond.false2305

cond.true2303:                                    ; preds = %cond.end2298
  %872 = load i8*, i8** %c2_utf8.addr, align 8
  %873 = load i8, i8* %872, align 1
  %conv2304 = zext i8 %873 to i32
  br label %cond.end2309

cond.false2305:                                   ; preds = %cond.end2298
  %874 = load i64, i64* %c1, align 8
  %875 = load i64, i64* %c2, align 8
  %cmp2306 = icmp eq i64 %874, %875
  %876 = zext i1 %cmp2306 to i64
  %cond2308 = select i1 %cmp2306, i32 -999, i32 -998
  br label %cond.end2309

cond.end2309:                                     ; preds = %cond.false2305, %cond.true2303
  %cond2310 = phi i32 [ %conv2304, %cond.true2303 ], [ %cond2308, %cond.false2305 ]
  %877 = load i32*, i32** %c2p.addr, align 8
  store i32 %cond2310, i32* %877, align 4
  br label %if.end2330

if.else2311:                                      ; preds = %if.else2284
  %878 = load i64, i64* %c1, align 8
  %cmp2312 = icmp ugt i64 %878, 255
  br i1 %cmp2312, label %if.then2314, label %if.else2320

if.then2314:                                      ; preds = %if.else2311
  %879 = load i64, i64* %c2, align 8
  %cmp2315 = icmp ugt i64 %879, 255
  br i1 %cmp2315, label %if.then2317, label %if.end2318

if.then2317:                                      ; preds = %if.then2314
  store i1 false, i1* %retval, align 1
  br label %return

if.end2318:                                       ; preds = %if.then2314
  %880 = load i64, i64* %c2, align 8
  %conv2319 = trunc i64 %880 to i32
  %881 = load i32*, i32** %c2p.addr, align 8
  store i32 %conv2319, i32* %881, align 4
  %882 = load i32*, i32** %c1p.addr, align 8
  store i32 %conv2319, i32* %882, align 4
  br label %if.end2329

if.else2320:                                      ; preds = %if.else2311
  %883 = load i64, i64* %c1, align 8
  %conv2321 = trunc i64 %883 to i32
  %884 = load i32*, i32** %c1p.addr, align 8
  store i32 %conv2321, i32* %884, align 4
  %885 = load i64, i64* %c2, align 8
  %cmp2322 = icmp ult i64 %885, 256
  br i1 %cmp2322, label %cond.true2324, label %cond.false2325

cond.true2324:                                    ; preds = %if.else2320
  %886 = load i64, i64* %c2, align 8
  br label %cond.end2326

cond.false2325:                                   ; preds = %if.else2320
  %887 = load i64, i64* %c1, align 8
  br label %cond.end2326

cond.end2326:                                     ; preds = %cond.false2325, %cond.true2324
  %cond2327 = phi i64 [ %886, %cond.true2324 ], [ %887, %cond.false2325 ]
  %conv2328 = trunc i64 %cond2327 to i32
  %888 = load i32*, i32** %c2p.addr, align 8
  store i32 %conv2328, i32* %888, align 4
  br label %if.end2329

if.end2329:                                       ; preds = %cond.end2326, %if.end2318
  br label %if.end2330

if.end2330:                                       ; preds = %if.end2329, %cond.end2309
  br label %if.end2331

if.end2331:                                       ; preds = %if.end2330, %if.then2283
  store i1 true, i1* %retval, align 1
  br label %return

return:                                           ; preds = %if.end2331, %if.then2317
  %889 = load i1, i1* %retval, align 1
  ret i1 %889
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @S_regrepeat(%struct.regexp* %prog, i8** %startposp, %struct.regnode* %p, %struct.regmatch_info* %reginfo, i32 %max, i32 %depth) #0 {
entry:
  %prog.addr = alloca %struct.regexp*, align 8
  %startposp.addr = alloca i8**, align 8
  %p.addr = alloca %struct.regnode*, align 8
  %reginfo.addr = alloca %struct.regmatch_info*, align 8
  %max.addr = alloca i32, align 4
  %depth.addr = alloca i32, align 4
  %scan = alloca i8*, align 8
  %c = alloca i32, align 4
  %loceol = alloca i8*, align 8
  %hardcount = alloca i32, align 4
  %utf8_target = alloca i8, align 1
  %to_complement = alloca i32, align 4
  %utf8_flags = alloca i64, align 8
  %classnum = alloca i32, align 4
  %scan_char_len = alloca i64, align 8
  %high = alloca i8, align 1
  %low = alloca i8, align 1
  %c1 = alloca i32, align 4
  %c2 = alloca i32, align 4
  %c1_utf8 = alloca [14 x i8], align 1
  %c2_utf8 = alloca [14 x i8], align 1
  %tmpeol = alloca i8*, align 8
  %pat_len = alloca i64, align 8
  %flags1176 = alloca i8, align 1
  store %struct.regexp* %prog, %struct.regexp** %prog.addr, align 8
  store i8** %startposp, i8*** %startposp.addr, align 8
  store %struct.regnode* %p, %struct.regnode** %p.addr, align 8
  store %struct.regmatch_info* %reginfo, %struct.regmatch_info** %reginfo.addr, align 8
  store i32 %max, i32* %max.addr, align 4
  store i32 %depth, i32* %depth.addr, align 4
  %0 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %0, i32 0, i32 2
  %1 = load i8*, i8** %strend, align 8
  store i8* %1, i8** %loceol, align 8
  store i32 0, i32* %hardcount, align 4
  %2 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %is_utf8_target = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %2, i32 0, i32 14
  %3 = load i8, i8* %is_utf8_target, align 2
  %tobool = trunc i8 %3 to i1
  %frombool = zext i1 %tobool to i8
  store i8 %frombool, i8* %utf8_target, align 1
  store i32 0, i32* %to_complement, align 4
  %4 = load i32, i32* %depth.addr, align 4
  %5 = load i8**, i8*** %startposp.addr, align 8
  %6 = load i8*, i8** %5, align 8
  store i8* %6, i8** %scan, align 8
  %7 = load i32, i32* %max.addr, align 4
  %cmp = icmp eq i32 %7, 32767
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  store i32 2147483647, i32* %max.addr, align 4
  br label %if.end5

if.else:                                          ; preds = %entry
  %8 = load i8, i8* %utf8_target, align 1
  %tobool1 = trunc i8 %8 to i1
  br i1 %tobool1, label %if.end, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.else
  %9 = load i8*, i8** %loceol, align 8
  %10 = load i8*, i8** %scan, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %9 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %10 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %11 = load i32, i32* %max.addr, align 4
  %conv = sext i32 %11 to i64
  %cmp2 = icmp sgt i64 %sub.ptr.sub, %conv
  br i1 %cmp2, label %if.then4, label %if.end

if.then4:                                         ; preds = %land.lhs.true
  %12 = load i8*, i8** %scan, align 8
  %13 = load i32, i32* %max.addr, align 4
  %idx.ext = sext i32 %13 to i64
  %add.ptr = getelementptr inbounds i8, i8* %12, i64 %idx.ext
  store i8* %add.ptr, i8** %loceol, align 8
  br label %if.end

if.end:                                           ; preds = %if.then4, %land.lhs.true, %if.else
  br label %if.end5

if.end5:                                          ; preds = %if.end, %if.then
  %14 = load %struct.regnode*, %struct.regnode** %p.addr, align 8
  %type = getelementptr inbounds %struct.regnode, %struct.regnode* %14, i32 0, i32 1
  %15 = load i8, i8* %type, align 1
  %conv6 = zext i8 %15 to i32
  switch i32 %conv6, label %sw.default1484 [
    i32 16, label %sw.bb
    i32 17, label %sw.bb32
    i32 18, label %sw.bb52
    i32 32, label %sw.bb67
    i32 31, label %sw.bb76
    i32 39, label %sw.bb192
    i32 36, label %sw.bb193
    i32 34, label %sw.bb194
    i32 33, label %sw.bb195
    i32 38, label %sw.bb196
    i32 37, label %sw.bb200
    i32 35, label %sw.bb200
    i32 20, label %sw.bb336
    i32 19, label %sw.bb337
    i32 26, label %sw.bb391
    i32 22, label %sw.bb392
    i32 21, label %sw.bb432
    i32 24, label %sw.bb436
    i32 25, label %sw.bb471
    i32 28, label %sw.bb475
    i32 27, label %sw.bb537
    i32 23, label %sw.bb538
    i32 91, label %sw.bb1255
    i32 9, label %sw.bb1482
    i32 13, label %sw.bb1482
    i32 8, label %sw.bb1483
    i32 11, label %sw.bb1483
    i32 10, label %sw.bb1483
    i32 6, label %sw.bb1483
    i32 7, label %sw.bb1483
    i32 90, label %sw.bb1483
    i32 12, label %sw.bb1483
    i32 15, label %sw.bb1483
    i32 14, label %sw.bb1483
    i32 82, label %sw.bb1483
    i32 2, label %sw.bb1483
    i32 4, label %sw.bb1483
  ]

sw.bb:                                            ; preds = %if.end5
  %16 = load i8, i8* %utf8_target, align 1
  %tobool7 = trunc i8 %16 to i1
  br i1 %tobool7, label %if.then8, label %if.else20

if.then8:                                         ; preds = %sw.bb
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.then8
  %17 = load i8*, i8** %scan, align 8
  %18 = load i8*, i8** %loceol, align 8
  %cmp9 = icmp ult i8* %17, %18
  br i1 %cmp9, label %land.lhs.true11, label %land.end

land.lhs.true11:                                  ; preds = %while.cond
  %19 = load i32, i32* %hardcount, align 4
  %20 = load i32, i32* %max.addr, align 4
  %cmp12 = icmp slt i32 %19, %20
  br i1 %cmp12, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %land.lhs.true11
  %21 = load i8*, i8** %scan, align 8
  %22 = load i8, i8* %21, align 1
  %conv14 = sext i8 %22 to i32
  %cmp15 = icmp ne i32 %conv14, 10
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true11, %while.cond
  %23 = phi i1 [ false, %land.lhs.true11 ], [ false, %while.cond ], [ %cmp15, %land.rhs ]
  br i1 %23, label %while.body, label %while.end

while.body:                                       ; preds = %land.end
  %24 = load i8*, i8** %scan, align 8
  %25 = load i8, i8* %24, align 1
  %idxprom = zext i8 %25 to i64
  %arrayidx = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom
  %26 = load i8, i8* %arrayidx, align 1
  %conv17 = zext i8 %26 to i32
  %27 = load i8*, i8** %scan, align 8
  %idx.ext18 = sext i32 %conv17 to i64
  %add.ptr19 = getelementptr inbounds i8, i8* %27, i64 %idx.ext18
  store i8* %add.ptr19, i8** %scan, align 8
  %28 = load i32, i32* %hardcount, align 4
  %inc = add nsw i32 %28, 1
  store i32 %inc, i32* %hardcount, align 4
  br label %while.cond

while.end:                                        ; preds = %land.end
  br label %if.end31

if.else20:                                        ; preds = %sw.bb
  br label %while.cond21

while.cond21:                                     ; preds = %while.body29, %if.else20
  %29 = load i8*, i8** %scan, align 8
  %30 = load i8*, i8** %loceol, align 8
  %cmp22 = icmp ult i8* %29, %30
  br i1 %cmp22, label %land.rhs24, label %land.end28

land.rhs24:                                       ; preds = %while.cond21
  %31 = load i8*, i8** %scan, align 8
  %32 = load i8, i8* %31, align 1
  %conv25 = sext i8 %32 to i32
  %cmp26 = icmp ne i32 %conv25, 10
  br label %land.end28

land.end28:                                       ; preds = %land.rhs24, %while.cond21
  %33 = phi i1 [ false, %while.cond21 ], [ %cmp26, %land.rhs24 ]
  br i1 %33, label %while.body29, label %while.end30

while.body29:                                     ; preds = %land.end28
  %34 = load i8*, i8** %scan, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %34, i32 1
  store i8* %incdec.ptr, i8** %scan, align 8
  br label %while.cond21

while.end30:                                      ; preds = %land.end28
  br label %if.end31

if.end31:                                         ; preds = %while.end30, %while.end
  br label %sw.epilog1490

sw.bb32:                                          ; preds = %if.end5
  %35 = load i8, i8* %utf8_target, align 1
  %tobool33 = trunc i8 %35 to i1
  br i1 %tobool33, label %if.then34, label %if.else50

if.then34:                                        ; preds = %sw.bb32
  br label %while.cond35

while.cond35:                                     ; preds = %while.body42, %if.then34
  %36 = load i8*, i8** %scan, align 8
  %37 = load i8*, i8** %loceol, align 8
  %cmp36 = icmp ult i8* %36, %37
  br i1 %cmp36, label %land.rhs38, label %land.end41

land.rhs38:                                       ; preds = %while.cond35
  %38 = load i32, i32* %hardcount, align 4
  %39 = load i32, i32* %max.addr, align 4
  %cmp39 = icmp slt i32 %38, %39
  br label %land.end41

land.end41:                                       ; preds = %land.rhs38, %while.cond35
  %40 = phi i1 [ false, %while.cond35 ], [ %cmp39, %land.rhs38 ]
  br i1 %40, label %while.body42, label %while.end49

while.body42:                                     ; preds = %land.end41
  %41 = load i8*, i8** %scan, align 8
  %42 = load i8, i8* %41, align 1
  %idxprom43 = zext i8 %42 to i64
  %arrayidx44 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom43
  %43 = load i8, i8* %arrayidx44, align 1
  %conv45 = zext i8 %43 to i32
  %44 = load i8*, i8** %scan, align 8
  %idx.ext46 = sext i32 %conv45 to i64
  %add.ptr47 = getelementptr inbounds i8, i8* %44, i64 %idx.ext46
  store i8* %add.ptr47, i8** %scan, align 8
  %45 = load i32, i32* %hardcount, align 4
  %inc48 = add nsw i32 %45, 1
  store i32 %inc48, i32* %hardcount, align 4
  br label %while.cond35

while.end49:                                      ; preds = %land.end41
  br label %if.end51

if.else50:                                        ; preds = %sw.bb32
  %46 = load i8*, i8** %loceol, align 8
  store i8* %46, i8** %scan, align 8
  br label %if.end51

if.end51:                                         ; preds = %if.else50, %while.end49
  br label %sw.epilog1490

sw.bb52:                                          ; preds = %if.end5
  %47 = load i8, i8* %utf8_target, align 1
  %tobool53 = trunc i8 %47 to i1
  br i1 %tobool53, label %land.lhs.true55, label %if.else65

land.lhs.true55:                                  ; preds = %sw.bb52
  %48 = load i8*, i8** %loceol, align 8
  %49 = load i8*, i8** %scan, align 8
  %sub.ptr.lhs.cast56 = ptrtoint i8* %48 to i64
  %sub.ptr.rhs.cast57 = ptrtoint i8* %49 to i64
  %sub.ptr.sub58 = sub i64 %sub.ptr.lhs.cast56, %sub.ptr.rhs.cast57
  %50 = load i32, i32* %max.addr, align 4
  %conv59 = sext i32 %50 to i64
  %cmp60 = icmp sgt i64 %sub.ptr.sub58, %conv59
  br i1 %cmp60, label %if.then62, label %if.else65

if.then62:                                        ; preds = %land.lhs.true55
  %51 = load i32, i32* %max.addr, align 4
  %52 = load i8*, i8** %scan, align 8
  %idx.ext63 = sext i32 %51 to i64
  %add.ptr64 = getelementptr inbounds i8, i8* %52, i64 %idx.ext63
  store i8* %add.ptr64, i8** %scan, align 8
  br label %if.end66

if.else65:                                        ; preds = %land.lhs.true55, %sw.bb52
  %53 = load i8*, i8** %loceol, align 8
  store i8* %53, i8** %scan, align 8
  br label %if.end66

if.end66:                                         ; preds = %if.else65, %if.then62
  br label %sw.epilog1490

sw.bb67:                                          ; preds = %if.end5
  %54 = load i8, i8* %utf8_target, align 1
  %tobool68 = trunc i8 %54 to i1
  br i1 %tobool68, label %land.lhs.true70, label %if.end75

land.lhs.true70:                                  ; preds = %sw.bb67
  %55 = load i8*, i8** %scan, align 8
  %56 = load i8, i8* %55, align 1
  %conv71 = zext i8 %56 to i32
  %cmp72 = icmp sge i32 %conv71, 196
  br i1 %cmp72, label %if.then74, label %if.end75

if.then74:                                        ; preds = %land.lhs.true70
  br label %if.end75

if.end75:                                         ; preds = %if.then74, %land.lhs.true70, %sw.bb67
  br label %sw.bb76

sw.bb76:                                          ; preds = %if.end5, %if.end75
  %57 = load %struct.regnode*, %struct.regnode** %p.addr, align 8
  %58 = bitcast %struct.regnode* %57 to %struct.regnode_string*
  %string = getelementptr inbounds %struct.regnode_string, %struct.regnode_string* %58, i32 0, i32 3
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %string, i64 0, i64 0
  %59 = load i8, i8* %arraydecay, align 2
  %conv77 = zext i8 %59 to i32
  store i32 %conv77, i32* %c, align 4
  %60 = load i32, i32* %c, align 4
  %conv78 = sext i32 %60 to i64
  %cmp79 = icmp ult i64 %conv78, 128
  br i1 %cmp79, label %if.then84, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %sw.bb76
  %61 = load i8, i8* %utf8_target, align 1
  %tobool81 = trunc i8 %61 to i1
  br i1 %tobool81, label %if.else109, label %land.lhs.true82

land.lhs.true82:                                  ; preds = %lor.lhs.false
  %62 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %is_utf8_pat = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %62, i32 0, i32 13
  %63 = load i8, i8* %is_utf8_pat, align 1
  %tobool83 = trunc i8 %63 to i1
  br i1 %tobool83, label %if.else109, label %if.then84

if.then84:                                        ; preds = %land.lhs.true82, %sw.bb76
  %64 = load i8, i8* %utf8_target, align 1
  %tobool85 = trunc i8 %64 to i1
  br i1 %tobool85, label %land.lhs.true87, label %if.end97

land.lhs.true87:                                  ; preds = %if.then84
  %65 = load i8*, i8** %loceol, align 8
  %66 = load i8*, i8** %scan, align 8
  %sub.ptr.lhs.cast88 = ptrtoint i8* %65 to i64
  %sub.ptr.rhs.cast89 = ptrtoint i8* %66 to i64
  %sub.ptr.sub90 = sub i64 %sub.ptr.lhs.cast88, %sub.ptr.rhs.cast89
  %67 = load i32, i32* %max.addr, align 4
  %conv91 = sext i32 %67 to i64
  %cmp92 = icmp sgt i64 %sub.ptr.sub90, %conv91
  br i1 %cmp92, label %if.then94, label %if.end97

if.then94:                                        ; preds = %land.lhs.true87
  %68 = load i8*, i8** %scan, align 8
  %69 = load i32, i32* %max.addr, align 4
  %idx.ext95 = sext i32 %69 to i64
  %add.ptr96 = getelementptr inbounds i8, i8* %68, i64 %idx.ext95
  store i8* %add.ptr96, i8** %loceol, align 8
  br label %if.end97

if.end97:                                         ; preds = %if.then94, %land.lhs.true87, %if.then84
  br label %while.cond98

while.cond98:                                     ; preds = %while.body106, %if.end97
  %70 = load i8*, i8** %scan, align 8
  %71 = load i8*, i8** %loceol, align 8
  %cmp99 = icmp ult i8* %70, %71
  br i1 %cmp99, label %land.rhs101, label %land.end105

land.rhs101:                                      ; preds = %while.cond98
  %72 = load i8*, i8** %scan, align 8
  %73 = load i8, i8* %72, align 1
  %conv102 = zext i8 %73 to i32
  %74 = load i32, i32* %c, align 4
  %cmp103 = icmp eq i32 %conv102, %74
  br label %land.end105

land.end105:                                      ; preds = %land.rhs101, %while.cond98
  %75 = phi i1 [ false, %while.cond98 ], [ %cmp103, %land.rhs101 ]
  br i1 %75, label %while.body106, label %while.end108

while.body106:                                    ; preds = %land.end105
  %76 = load i8*, i8** %scan, align 8
  %incdec.ptr107 = getelementptr inbounds i8, i8* %76, i32 1
  store i8* %incdec.ptr107, i8** %scan, align 8
  br label %while.cond98

while.end108:                                     ; preds = %land.end105
  br label %if.end191

if.else109:                                       ; preds = %land.lhs.true82, %lor.lhs.false
  %77 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %is_utf8_pat110 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %77, i32 0, i32 13
  %78 = load i8, i8* %is_utf8_pat110, align 1
  %tobool111 = trunc i8 %78 to i1
  br i1 %tobool111, label %if.then112, label %if.else161

if.then112:                                       ; preds = %if.else109
  %79 = load i8, i8* %utf8_target, align 1
  %tobool113 = trunc i8 %79 to i1
  br i1 %tobool113, label %if.then114, label %if.else137

if.then114:                                       ; preds = %if.then112
  br label %while.cond115

while.cond115:                                    ; preds = %while.body133, %if.then114
  %80 = load i32, i32* %hardcount, align 4
  %81 = load i32, i32* %max.addr, align 4
  %cmp116 = icmp slt i32 %80, %81
  br i1 %cmp116, label %land.lhs.true118, label %land.end132

land.lhs.true118:                                 ; preds = %while.cond115
  %82 = load i8*, i8** %scan, align 8
  %83 = load i8*, i8** %loceol, align 8
  %cmp119 = icmp ult i8* %82, %83
  br i1 %cmp119, label %land.lhs.true121, label %land.end132

land.lhs.true121:                                 ; preds = %land.lhs.true118
  %84 = load i8*, i8** %scan, align 8
  %85 = load i8, i8* %84, align 1
  %idxprom122 = zext i8 %85 to i64
  %arrayidx123 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom122
  %86 = load i8, i8* %arrayidx123, align 1
  %conv124 = zext i8 %86 to i64
  store i64 %conv124, i64* %scan_char_len, align 8
  %87 = load %struct.regnode*, %struct.regnode** %p.addr, align 8
  %88 = bitcast %struct.regnode* %87 to %struct.regnode_string*
  %str_len = getelementptr inbounds %struct.regnode_string, %struct.regnode_string* %88, i32 0, i32 0
  %89 = load i8, i8* %str_len, align 2
  %conv125 = zext i8 %89 to i64
  %cmp126 = icmp ule i64 %conv124, %conv125
  br i1 %cmp126, label %land.rhs128, label %land.end132

land.rhs128:                                      ; preds = %land.lhs.true121
  %90 = load i8*, i8** %scan, align 8
  %91 = load %struct.regnode*, %struct.regnode** %p.addr, align 8
  %92 = bitcast %struct.regnode* %91 to %struct.regnode_string*
  %string129 = getelementptr inbounds %struct.regnode_string, %struct.regnode_string* %92, i32 0, i32 3
  %arraydecay130 = getelementptr inbounds [1 x i8], [1 x i8]* %string129, i64 0, i64 0
  %93 = load i64, i64* %scan_char_len, align 8
  %call = call i32 @memcmp(i8* %90, i8* %arraydecay130, i64 %93) #5
  %tobool131 = icmp ne i32 %call, 0
  %lnot = xor i1 %tobool131, true
  br label %land.end132

land.end132:                                      ; preds = %land.rhs128, %land.lhs.true121, %land.lhs.true118, %while.cond115
  %94 = phi i1 [ false, %land.lhs.true121 ], [ false, %land.lhs.true118 ], [ false, %while.cond115 ], [ %lnot, %land.rhs128 ]
  br i1 %94, label %while.body133, label %while.end136

while.body133:                                    ; preds = %land.end132
  %95 = load i64, i64* %scan_char_len, align 8
  %96 = load i8*, i8** %scan, align 8
  %add.ptr134 = getelementptr inbounds i8, i8* %96, i64 %95
  store i8* %add.ptr134, i8** %scan, align 8
  %97 = load i32, i32* %hardcount, align 4
  %inc135 = add nsw i32 %97, 1
  store i32 %inc135, i32* %hardcount, align 4
  br label %while.cond115

while.end136:                                     ; preds = %land.end132
  br label %if.end160

if.else137:                                       ; preds = %if.then112
  %98 = load i32, i32* %c, align 4
  %conv138 = trunc i32 %98 to i8
  %conv139 = zext i8 %conv138 to i32
  %cmp140 = icmp sge i32 %conv139, 196
  br i1 %cmp140, label %if.end159, label %if.then142

if.then142:                                       ; preds = %if.else137
  %99 = load i32, i32* %c, align 4
  %and = and i32 %99, 31
  %shl = shl i32 %and, 6
  %100 = load %struct.regnode*, %struct.regnode** %p.addr, align 8
  %101 = bitcast %struct.regnode* %100 to %struct.regnode_string*
  %string143 = getelementptr inbounds %struct.regnode_string, %struct.regnode_string* %101, i32 0, i32 3
  %arraydecay144 = getelementptr inbounds [1 x i8], [1 x i8]* %string143, i64 0, i64 0
  %add.ptr145 = getelementptr inbounds i8, i8* %arraydecay144, i64 1
  %102 = load i8, i8* %add.ptr145, align 1
  %conv146 = zext i8 %102 to i32
  %and147 = and i32 %conv146, 63
  %or = or i32 %shl, %and147
  store i32 %or, i32* %c, align 4
  br label %while.cond148

while.cond148:                                    ; preds = %while.body156, %if.then142
  %103 = load i8*, i8** %scan, align 8
  %104 = load i8*, i8** %loceol, align 8
  %cmp149 = icmp ult i8* %103, %104
  br i1 %cmp149, label %land.rhs151, label %land.end155

land.rhs151:                                      ; preds = %while.cond148
  %105 = load i8*, i8** %scan, align 8
  %106 = load i8, i8* %105, align 1
  %conv152 = zext i8 %106 to i32
  %107 = load i32, i32* %c, align 4
  %cmp153 = icmp eq i32 %conv152, %107
  br label %land.end155

land.end155:                                      ; preds = %land.rhs151, %while.cond148
  %108 = phi i1 [ false, %while.cond148 ], [ %cmp153, %land.rhs151 ]
  br i1 %108, label %while.body156, label %while.end158

while.body156:                                    ; preds = %land.end155
  %109 = load i8*, i8** %scan, align 8
  %incdec.ptr157 = getelementptr inbounds i8, i8* %109, i32 1
  store i8* %incdec.ptr157, i8** %scan, align 8
  br label %while.cond148

while.end158:                                     ; preds = %land.end155
  br label %if.end159

if.end159:                                        ; preds = %while.end158, %if.else137
  br label %if.end160

if.end160:                                        ; preds = %if.end159, %while.end136
  br label %if.end190

if.else161:                                       ; preds = %if.else109
  %110 = load i32, i32* %c, align 4
  %shr = ashr i32 %110, 6
  %or162 = or i32 %shr, 192
  %conv163 = trunc i32 %or162 to i8
  store i8 %conv163, i8* %high, align 1
  %111 = load i32, i32* %c, align 4
  %and164 = and i32 %111, 63
  %or165 = or i32 %and164, 128
  %conv166 = trunc i32 %or165 to i8
  store i8 %conv166, i8* %low, align 1
  br label %while.cond167

while.cond167:                                    ; preds = %while.body186, %if.else161
  %112 = load i32, i32* %hardcount, align 4
  %113 = load i32, i32* %max.addr, align 4
  %cmp168 = icmp slt i32 %112, %113
  br i1 %cmp168, label %land.lhs.true170, label %land.end185

land.lhs.true170:                                 ; preds = %while.cond167
  %114 = load i8*, i8** %scan, align 8
  %add.ptr171 = getelementptr inbounds i8, i8* %114, i64 1
  %115 = load i8*, i8** %loceol, align 8
  %cmp172 = icmp ult i8* %add.ptr171, %115
  br i1 %cmp172, label %land.lhs.true174, label %land.end185

land.lhs.true174:                                 ; preds = %land.lhs.true170
  %116 = load i8*, i8** %scan, align 8
  %117 = load i8, i8* %116, align 1
  %conv175 = zext i8 %117 to i32
  %118 = load i8, i8* %high, align 1
  %conv176 = zext i8 %118 to i32
  %cmp177 = icmp eq i32 %conv175, %conv176
  br i1 %cmp177, label %land.rhs179, label %land.end185

land.rhs179:                                      ; preds = %land.lhs.true174
  %119 = load i8*, i8** %scan, align 8
  %add.ptr180 = getelementptr inbounds i8, i8* %119, i64 1
  %120 = load i8, i8* %add.ptr180, align 1
  %conv181 = zext i8 %120 to i32
  %121 = load i8, i8* %low, align 1
  %conv182 = zext i8 %121 to i32
  %cmp183 = icmp eq i32 %conv181, %conv182
  br label %land.end185

land.end185:                                      ; preds = %land.rhs179, %land.lhs.true174, %land.lhs.true170, %while.cond167
  %122 = phi i1 [ false, %land.lhs.true174 ], [ false, %land.lhs.true170 ], [ false, %while.cond167 ], [ %cmp183, %land.rhs179 ]
  br i1 %122, label %while.body186, label %while.end189

while.body186:                                    ; preds = %land.end185
  %123 = load i8*, i8** %scan, align 8
  %add.ptr187 = getelementptr inbounds i8, i8* %123, i64 2
  store i8* %add.ptr187, i8** %scan, align 8
  %124 = load i32, i32* %hardcount, align 4
  %inc188 = add nsw i32 %124, 1
  store i32 %inc188, i32* %hardcount, align 4
  br label %while.cond167

while.end189:                                     ; preds = %land.end185
  br label %if.end190

if.end190:                                        ; preds = %while.end189, %if.end160
  br label %if.end191

if.end191:                                        ; preds = %if.end190, %while.end108
  br label %sw.epilog1490

sw.bb192:                                         ; preds = %if.end5
  br label %sw.bb193

sw.bb193:                                         ; preds = %if.end5, %sw.bb192
  store i64 1, i64* %utf8_flags, align 8
  br label %do_exactf

sw.bb194:                                         ; preds = %if.end5
  store i64 2, i64* %utf8_flags, align 8
  br label %do_exactf

sw.bb195:                                         ; preds = %if.end5
  store i64 0, i64* %utf8_flags, align 8
  br label %do_exactf

sw.bb196:                                         ; preds = %if.end5
  %125 = load i8, i8* %utf8_target, align 1
  %tobool197 = trunc i8 %125 to i1
  br i1 %tobool197, label %if.end199, label %if.then198

if.then198:                                       ; preds = %sw.bb196
  br label %sw.epilog1490

if.end199:                                        ; preds = %sw.bb196
  store i64 42, i64* %utf8_flags, align 8
  br label %do_exactf

sw.bb200:                                         ; preds = %if.end5, %if.end5
  %126 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %is_utf8_pat201 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %126, i32 0, i32 13
  %127 = load i8, i8* %is_utf8_pat201, align 1
  %tobool202 = trunc i8 %127 to i1
  %128 = zext i1 %tobool202 to i64
  %cond = select i1 %tobool202, i32 8, i32 0
  %conv204 = sext i32 %cond to i64
  store i64 %conv204, i64* %utf8_flags, align 8
  br label %do_exactf

do_exactf:                                        ; preds = %sw.bb200, %if.end199, %sw.bb195, %sw.bb194, %sw.bb193
  %129 = load %struct.regnode*, %struct.regnode** %p.addr, align 8
  %arraydecay205 = getelementptr inbounds [14 x i8], [14 x i8]* %c1_utf8, i64 0, i64 0
  %arraydecay206 = getelementptr inbounds [14 x i8], [14 x i8]* %c2_utf8, i64 0, i64 0
  %130 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %call207 = call zeroext i1 @S_setup_EXACTISH_ST_c1_c2(%struct.regnode* %129, i32* %c1, i8* %arraydecay205, i32* %c2, i8* %arraydecay206, %struct.regmatch_info* %130)
  br i1 %call207, label %if.then208, label %if.end335

if.then208:                                       ; preds = %do_exactf
  %131 = load i32, i32* %c1, align 4
  %cmp209 = icmp eq i32 %131, -1000
  br i1 %cmp209, label %if.then211, label %if.else240

if.then211:                                       ; preds = %if.then208
  %132 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend212 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %132, i32 0, i32 2
  %133 = load i8*, i8** %strend212, align 8
  store i8* %133, i8** %tmpeol, align 8
  %134 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %is_utf8_pat213 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %134, i32 0, i32 13
  %135 = load i8, i8* %is_utf8_pat213, align 1
  %tobool214 = trunc i8 %135 to i1
  br i1 %tobool214, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then211
  %136 = load %struct.regnode*, %struct.regnode** %p.addr, align 8
  %137 = bitcast %struct.regnode* %136 to %struct.regnode_string*
  %string216 = getelementptr inbounds %struct.regnode_string, %struct.regnode_string* %137, i32 0, i32 3
  %arraydecay217 = getelementptr inbounds [1 x i8], [1 x i8]* %string216, i64 0, i64 0
  %138 = load i8, i8* %arraydecay217, align 2
  %idxprom218 = zext i8 %138 to i64
  %arrayidx219 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom218
  %139 = load i8, i8* %arrayidx219, align 1
  %conv220 = zext i8 %139 to i32
  br label %cond.end

cond.false:                                       ; preds = %if.then211
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond221 = phi i32 [ %conv220, %cond.true ], [ 1, %cond.false ]
  %conv222 = sext i32 %cond221 to i64
  store i64 %conv222, i64* %pat_len, align 8
  br label %while.cond223

while.cond223:                                    ; preds = %while.body236, %cond.end
  %140 = load i32, i32* %hardcount, align 4
  %141 = load i32, i32* %max.addr, align 4
  %cmp224 = icmp slt i32 %140, %141
  br i1 %cmp224, label %land.rhs226, label %land.end235

land.rhs226:                                      ; preds = %while.cond223
  %142 = load i8*, i8** %scan, align 8
  %143 = load i8, i8* %utf8_target, align 1
  %tobool227 = trunc i8 %143 to i1
  %144 = load %struct.regnode*, %struct.regnode** %p.addr, align 8
  %145 = bitcast %struct.regnode* %144 to %struct.regnode_string*
  %string228 = getelementptr inbounds %struct.regnode_string, %struct.regnode_string* %145, i32 0, i32 3
  %arraydecay229 = getelementptr inbounds [1 x i8], [1 x i8]* %string228, i64 0, i64 0
  %146 = load i64, i64* %pat_len, align 8
  %147 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %is_utf8_pat230 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %147, i32 0, i32 13
  %148 = load i8, i8* %is_utf8_pat230, align 1
  %tobool231 = trunc i8 %148 to i1
  %149 = load i64, i64* %utf8_flags, align 8
  %conv232 = trunc i64 %149 to i32
  %call233 = call i32 @Perl_foldEQ_utf8_flags(i8* %142, i8** %tmpeol, i64 0, i1 zeroext %tobool227, i8* %arraydecay229, i8** null, i64 %146, i1 zeroext %tobool231, i32 %conv232)
  %tobool234 = icmp ne i32 %call233, 0
  br label %land.end235

land.end235:                                      ; preds = %land.rhs226, %while.cond223
  %150 = phi i1 [ false, %while.cond223 ], [ %tobool234, %land.rhs226 ]
  br i1 %150, label %while.body236, label %while.end239

while.body236:                                    ; preds = %land.end235
  %151 = load i8*, i8** %tmpeol, align 8
  store i8* %151, i8** %scan, align 8
  %152 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend237 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %152, i32 0, i32 2
  %153 = load i8*, i8** %strend237, align 8
  store i8* %153, i8** %tmpeol, align 8
  %154 = load i32, i32* %hardcount, align 4
  %inc238 = add nsw i32 %154, 1
  store i32 %inc238, i32* %hardcount, align 4
  br label %while.cond223

while.end239:                                     ; preds = %land.end235
  br label %if.end334

if.else240:                                       ; preds = %if.then208
  %155 = load i8, i8* %utf8_target, align 1
  %tobool241 = trunc i8 %155 to i1
  br i1 %tobool241, label %if.then242, label %if.else300

if.then242:                                       ; preds = %if.else240
  %156 = load i32, i32* %c1, align 4
  %157 = load i32, i32* %c2, align 4
  %cmp243 = icmp eq i32 %156, %157
  br i1 %cmp243, label %if.then245, label %if.else269

if.then245:                                       ; preds = %if.then242
  br label %while.cond246

while.cond246:                                    ; preds = %while.body261, %if.then245
  %158 = load i8*, i8** %scan, align 8
  %159 = load i8*, i8** %loceol, align 8
  %cmp247 = icmp ult i8* %158, %159
  br i1 %cmp247, label %land.lhs.true249, label %land.end260

land.lhs.true249:                                 ; preds = %while.cond246
  %160 = load i32, i32* %hardcount, align 4
  %161 = load i32, i32* %max.addr, align 4
  %cmp250 = icmp slt i32 %160, %161
  br i1 %cmp250, label %land.rhs252, label %land.end260

land.rhs252:                                      ; preds = %land.lhs.true249
  %162 = load i8*, i8** %scan, align 8
  %arraydecay253 = getelementptr inbounds [14 x i8], [14 x i8]* %c1_utf8, i64 0, i64 0
  %163 = load i8*, i8** %scan, align 8
  %164 = load i8, i8* %163, align 1
  %idxprom254 = zext i8 %164 to i64
  %arrayidx255 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom254
  %165 = load i8, i8* %arrayidx255, align 1
  %conv256 = zext i8 %165 to i64
  %call257 = call i32 @memcmp(i8* %162, i8* %arraydecay253, i64 %conv256) #5
  %tobool258 = icmp ne i32 %call257, 0
  %lnot259 = xor i1 %tobool258, true
  br label %land.end260

land.end260:                                      ; preds = %land.rhs252, %land.lhs.true249, %while.cond246
  %166 = phi i1 [ false, %land.lhs.true249 ], [ false, %while.cond246 ], [ %lnot259, %land.rhs252 ]
  br i1 %166, label %while.body261, label %while.end268

while.body261:                                    ; preds = %land.end260
  %167 = load i8*, i8** %scan, align 8
  %168 = load i8, i8* %167, align 1
  %idxprom262 = zext i8 %168 to i64
  %arrayidx263 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom262
  %169 = load i8, i8* %arrayidx263, align 1
  %conv264 = zext i8 %169 to i32
  %170 = load i8*, i8** %scan, align 8
  %idx.ext265 = sext i32 %conv264 to i64
  %add.ptr266 = getelementptr inbounds i8, i8* %170, i64 %idx.ext265
  store i8* %add.ptr266, i8** %scan, align 8
  %171 = load i32, i32* %hardcount, align 4
  %inc267 = add nsw i32 %171, 1
  store i32 %inc267, i32* %hardcount, align 4
  br label %while.cond246

while.end268:                                     ; preds = %land.end260
  br label %if.end299

if.else269:                                       ; preds = %if.then242
  br label %while.cond270

while.cond270:                                    ; preds = %while.body291, %if.else269
  %172 = load i8*, i8** %scan, align 8
  %173 = load i8*, i8** %loceol, align 8
  %cmp271 = icmp ult i8* %172, %173
  br i1 %cmp271, label %land.lhs.true273, label %land.end290

land.lhs.true273:                                 ; preds = %while.cond270
  %174 = load i32, i32* %hardcount, align 4
  %175 = load i32, i32* %max.addr, align 4
  %cmp274 = icmp slt i32 %174, %175
  br i1 %cmp274, label %land.rhs276, label %land.end290

land.rhs276:                                      ; preds = %land.lhs.true273
  %176 = load i8*, i8** %scan, align 8
  %arraydecay277 = getelementptr inbounds [14 x i8], [14 x i8]* %c1_utf8, i64 0, i64 0
  %177 = load i8*, i8** %scan, align 8
  %178 = load i8, i8* %177, align 1
  %idxprom278 = zext i8 %178 to i64
  %arrayidx279 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom278
  %179 = load i8, i8* %arrayidx279, align 1
  %conv280 = zext i8 %179 to i64
  %call281 = call i32 @memcmp(i8* %176, i8* %arraydecay277, i64 %conv280) #5
  %tobool282 = icmp ne i32 %call281, 0
  br i1 %tobool282, label %lor.rhs, label %lor.end

lor.rhs:                                          ; preds = %land.rhs276
  %180 = load i8*, i8** %scan, align 8
  %arraydecay283 = getelementptr inbounds [14 x i8], [14 x i8]* %c2_utf8, i64 0, i64 0
  %181 = load i8*, i8** %scan, align 8
  %182 = load i8, i8* %181, align 1
  %idxprom284 = zext i8 %182 to i64
  %arrayidx285 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom284
  %183 = load i8, i8* %arrayidx285, align 1
  %conv286 = zext i8 %183 to i64
  %call287 = call i32 @memcmp(i8* %180, i8* %arraydecay283, i64 %conv286) #5
  %tobool288 = icmp ne i32 %call287, 0
  %lnot289 = xor i1 %tobool288, true
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %land.rhs276
  %184 = phi i1 [ true, %land.rhs276 ], [ %lnot289, %lor.rhs ]
  br label %land.end290

land.end290:                                      ; preds = %lor.end, %land.lhs.true273, %while.cond270
  %185 = phi i1 [ false, %land.lhs.true273 ], [ false, %while.cond270 ], [ %184, %lor.end ]
  br i1 %185, label %while.body291, label %while.end298

while.body291:                                    ; preds = %land.end290
  %186 = load i8*, i8** %scan, align 8
  %187 = load i8, i8* %186, align 1
  %idxprom292 = zext i8 %187 to i64
  %arrayidx293 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom292
  %188 = load i8, i8* %arrayidx293, align 1
  %conv294 = zext i8 %188 to i32
  %189 = load i8*, i8** %scan, align 8
  %idx.ext295 = sext i32 %conv294 to i64
  %add.ptr296 = getelementptr inbounds i8, i8* %189, i64 %idx.ext295
  store i8* %add.ptr296, i8** %scan, align 8
  %190 = load i32, i32* %hardcount, align 4
  %inc297 = add nsw i32 %190, 1
  store i32 %inc297, i32* %hardcount, align 4
  br label %while.cond270

while.end298:                                     ; preds = %land.end290
  br label %if.end299

if.end299:                                        ; preds = %while.end298, %while.end268
  br label %if.end333

if.else300:                                       ; preds = %if.else240
  %191 = load i32, i32* %c1, align 4
  %192 = load i32, i32* %c2, align 4
  %cmp301 = icmp eq i32 %191, %192
  br i1 %cmp301, label %if.then303, label %if.else315

if.then303:                                       ; preds = %if.else300
  br label %while.cond304

while.cond304:                                    ; preds = %while.body312, %if.then303
  %193 = load i8*, i8** %scan, align 8
  %194 = load i8*, i8** %loceol, align 8
  %cmp305 = icmp ult i8* %193, %194
  br i1 %cmp305, label %land.rhs307, label %land.end311

land.rhs307:                                      ; preds = %while.cond304
  %195 = load i8*, i8** %scan, align 8
  %196 = load i8, i8* %195, align 1
  %conv308 = zext i8 %196 to i32
  %197 = load i32, i32* %c1, align 4
  %cmp309 = icmp eq i32 %conv308, %197
  br label %land.end311

land.end311:                                      ; preds = %land.rhs307, %while.cond304
  %198 = phi i1 [ false, %while.cond304 ], [ %cmp309, %land.rhs307 ]
  br i1 %198, label %while.body312, label %while.end314

while.body312:                                    ; preds = %land.end311
  %199 = load i8*, i8** %scan, align 8
  %incdec.ptr313 = getelementptr inbounds i8, i8* %199, i32 1
  store i8* %incdec.ptr313, i8** %scan, align 8
  br label %while.cond304

while.end314:                                     ; preds = %land.end311
  br label %if.end332

if.else315:                                       ; preds = %if.else300
  br label %while.cond316

while.cond316:                                    ; preds = %while.body329, %if.else315
  %200 = load i8*, i8** %scan, align 8
  %201 = load i8*, i8** %loceol, align 8
  %cmp317 = icmp ult i8* %200, %201
  br i1 %cmp317, label %land.rhs319, label %land.end328

land.rhs319:                                      ; preds = %while.cond316
  %202 = load i8*, i8** %scan, align 8
  %203 = load i8, i8* %202, align 1
  %conv320 = zext i8 %203 to i32
  %204 = load i32, i32* %c1, align 4
  %cmp321 = icmp eq i32 %conv320, %204
  br i1 %cmp321, label %lor.end327, label %lor.rhs323

lor.rhs323:                                       ; preds = %land.rhs319
  %205 = load i8*, i8** %scan, align 8
  %206 = load i8, i8* %205, align 1
  %conv324 = zext i8 %206 to i32
  %207 = load i32, i32* %c2, align 4
  %cmp325 = icmp eq i32 %conv324, %207
  br label %lor.end327

lor.end327:                                       ; preds = %lor.rhs323, %land.rhs319
  %208 = phi i1 [ true, %land.rhs319 ], [ %cmp325, %lor.rhs323 ]
  br label %land.end328

land.end328:                                      ; preds = %lor.end327, %while.cond316
  %209 = phi i1 [ false, %while.cond316 ], [ %208, %lor.end327 ]
  br i1 %209, label %while.body329, label %while.end331

while.body329:                                    ; preds = %land.end328
  %210 = load i8*, i8** %scan, align 8
  %incdec.ptr330 = getelementptr inbounds i8, i8* %210, i32 1
  store i8* %incdec.ptr330, i8** %scan, align 8
  br label %while.cond316

while.end331:                                     ; preds = %land.end328
  br label %if.end332

if.end332:                                        ; preds = %while.end331, %while.end314
  br label %if.end333

if.end333:                                        ; preds = %if.end332, %if.end299
  br label %if.end334

if.end334:                                        ; preds = %if.end333, %while.end239
  br label %if.end335

if.end335:                                        ; preds = %if.end334, %do_exactf
  br label %sw.epilog1490

sw.bb336:                                         ; preds = %if.end5
  br label %sw.bb337

sw.bb337:                                         ; preds = %if.end5, %sw.bb336
  %211 = load i8, i8* %utf8_target, align 1
  %tobool338 = trunc i8 %211 to i1
  br i1 %tobool338, label %if.then339, label %if.else359

if.then339:                                       ; preds = %sw.bb337
  br label %while.cond340

while.cond340:                                    ; preds = %while.body351, %if.then339
  %212 = load i32, i32* %hardcount, align 4
  %213 = load i32, i32* %max.addr, align 4
  %cmp341 = icmp slt i32 %212, %213
  br i1 %cmp341, label %land.lhs.true343, label %land.end350

land.lhs.true343:                                 ; preds = %while.cond340
  %214 = load i8*, i8** %scan, align 8
  %215 = load i8*, i8** %loceol, align 8
  %cmp344 = icmp ult i8* %214, %215
  br i1 %cmp344, label %land.rhs346, label %land.end350

land.rhs346:                                      ; preds = %land.lhs.true343
  %216 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %217 = load %struct.regnode*, %struct.regnode** %p.addr, align 8
  %218 = load i8*, i8** %scan, align 8
  %219 = load i8*, i8** %loceol, align 8
  %220 = load i8, i8* %utf8_target, align 1
  %tobool347 = trunc i8 %220 to i1
  %call348 = call zeroext i1 @S_reginclass(%struct.regexp* %216, %struct.regnode* %217, i8* %218, i8* %219, i1 zeroext %tobool347)
  br label %land.end350

land.end350:                                      ; preds = %land.rhs346, %land.lhs.true343, %while.cond340
  %221 = phi i1 [ false, %land.lhs.true343 ], [ false, %while.cond340 ], [ %call348, %land.rhs346 ]
  br i1 %221, label %while.body351, label %while.end358

while.body351:                                    ; preds = %land.end350
  %222 = load i8*, i8** %scan, align 8
  %223 = load i8, i8* %222, align 1
  %idxprom352 = zext i8 %223 to i64
  %arrayidx353 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom352
  %224 = load i8, i8* %arrayidx353, align 1
  %conv354 = zext i8 %224 to i32
  %225 = load i8*, i8** %scan, align 8
  %idx.ext355 = sext i32 %conv354 to i64
  %add.ptr356 = getelementptr inbounds i8, i8* %225, i64 %idx.ext355
  store i8* %add.ptr356, i8** %scan, align 8
  %226 = load i32, i32* %hardcount, align 4
  %inc357 = add nsw i32 %226, 1
  store i32 %inc357, i32* %hardcount, align 4
  br label %while.cond340

while.end358:                                     ; preds = %land.end350
  br label %if.end390

if.else359:                                       ; preds = %sw.bb337
  br label %while.cond360

while.cond360:                                    ; preds = %while.body387, %if.else359
  %227 = load i8*, i8** %scan, align 8
  %228 = load i8*, i8** %loceol, align 8
  %cmp361 = icmp ult i8* %227, %228
  br i1 %cmp361, label %land.rhs363, label %land.end386

land.rhs363:                                      ; preds = %while.cond360
  %229 = load %struct.regnode*, %struct.regnode** %p.addr, align 8
  %flags = getelementptr inbounds %struct.regnode, %struct.regnode* %229, i32 0, i32 0
  %230 = load i8, i8* %flags, align 2
  %conv364 = zext i8 %230 to i32
  %tobool365 = icmp ne i32 %conv364, 0
  br i1 %tobool365, label %cond.true366, label %cond.false370

cond.true366:                                     ; preds = %land.rhs363
  %231 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %232 = load %struct.regnode*, %struct.regnode** %p.addr, align 8
  %233 = load i8*, i8** %scan, align 8
  %234 = load i8*, i8** %scan, align 8
  %add.ptr367 = getelementptr inbounds i8, i8* %234, i64 1
  %call368 = call zeroext i1 @S_reginclass(%struct.regexp* %231, %struct.regnode* %232, i8* %233, i8* %add.ptr367, i1 zeroext false)
  %conv369 = zext i1 %call368 to i32
  br label %cond.end383

cond.false370:                                    ; preds = %land.rhs363
  %235 = load %struct.regnode*, %struct.regnode** %p.addr, align 8
  %236 = bitcast %struct.regnode* %235 to %struct.regnode_charclass*
  %bitmap = getelementptr inbounds %struct.regnode_charclass, %struct.regnode_charclass* %236, i32 0, i32 4
  %237 = load i8*, i8** %scan, align 8
  %238 = load i8, i8* %237, align 1
  %conv371 = zext i8 %238 to i32
  %shr372 = ashr i32 %conv371, 3
  %and373 = and i32 %shr372, 31
  %idxprom374 = sext i32 %and373 to i64
  %arrayidx375 = getelementptr inbounds [32 x i8], [32 x i8]* %bitmap, i64 0, i64 %idxprom374
  %239 = load i8, i8* %arrayidx375, align 1
  %conv376 = sext i8 %239 to i32
  %240 = load i8*, i8** %scan, align 8
  %241 = load i8, i8* %240, align 1
  %conv377 = zext i8 %241 to i32
  %and378 = and i32 %conv377, 7
  %shl379 = shl i32 1, %and378
  %and380 = and i32 %conv376, %shl379
  %tobool381 = icmp ne i32 %and380, 0
  %242 = zext i1 %tobool381 to i64
  %cond382 = select i1 %tobool381, i32 1, i32 0
  br label %cond.end383

cond.end383:                                      ; preds = %cond.false370, %cond.true366
  %cond384 = phi i32 [ %conv369, %cond.true366 ], [ %cond382, %cond.false370 ]
  %tobool385 = icmp ne i32 %cond384, 0
  br label %land.end386

land.end386:                                      ; preds = %cond.end383, %while.cond360
  %243 = phi i1 [ false, %while.cond360 ], [ %tobool385, %cond.end383 ]
  br i1 %243, label %while.body387, label %while.end389

while.body387:                                    ; preds = %land.end386
  %244 = load i8*, i8** %scan, align 8
  %incdec.ptr388 = getelementptr inbounds i8, i8* %244, i32 1
  store i8* %incdec.ptr388, i8** %scan, align 8
  br label %while.cond360

while.end389:                                     ; preds = %land.end386
  br label %if.end390

if.end390:                                        ; preds = %while.end389, %while.end358
  br label %sw.epilog1490

sw.bb391:                                         ; preds = %if.end5
  store i32 1, i32* %to_complement, align 4
  br label %sw.bb392

sw.bb392:                                         ; preds = %if.end5, %sw.bb391
  %245 = load i8, i8* %utf8_target, align 1
  %tobool393 = trunc i8 %245 to i1
  br i1 %tobool393, label %if.else408, label %if.then394

if.then394:                                       ; preds = %sw.bb392
  br label %while.cond395

while.cond395:                                    ; preds = %while.body405, %if.then394
  %246 = load i8*, i8** %scan, align 8
  %247 = load i8*, i8** %loceol, align 8
  %cmp396 = icmp ult i8* %246, %247
  br i1 %cmp396, label %land.rhs398, label %land.end404

land.rhs398:                                      ; preds = %while.cond395
  %248 = load i32, i32* %to_complement, align 4
  %249 = load %struct.regnode*, %struct.regnode** %p.addr, align 8
  %flags399 = getelementptr inbounds %struct.regnode, %struct.regnode* %249, i32 0, i32 0
  %250 = load i8, i8* %flags399, align 2
  %251 = load i8*, i8** %scan, align 8
  %252 = load i8, i8* %251, align 1
  %call400 = call zeroext i1 @S_isFOO_lc(i8 zeroext %250, i8 zeroext %252)
  %253 = zext i1 %call400 to i64
  %cond402 = select i1 %call400, i32 1, i32 0
  %xor = xor i32 %248, %cond402
  %tobool403 = icmp ne i32 %xor, 0
  br label %land.end404

land.end404:                                      ; preds = %land.rhs398, %while.cond395
  %254 = phi i1 [ false, %while.cond395 ], [ %tobool403, %land.rhs398 ]
  br i1 %254, label %while.body405, label %while.end407

while.body405:                                    ; preds = %land.end404
  %255 = load i8*, i8** %scan, align 8
  %incdec.ptr406 = getelementptr inbounds i8, i8* %255, i32 1
  store i8* %incdec.ptr406, i8** %scan, align 8
  br label %while.cond395

while.end407:                                     ; preds = %land.end404
  br label %if.end431

if.else408:                                       ; preds = %sw.bb392
  br label %while.cond409

while.cond409:                                    ; preds = %while.body423, %if.else408
  %256 = load i32, i32* %hardcount, align 4
  %257 = load i32, i32* %max.addr, align 4
  %cmp410 = icmp slt i32 %256, %257
  br i1 %cmp410, label %land.lhs.true412, label %land.end422

land.lhs.true412:                                 ; preds = %while.cond409
  %258 = load i8*, i8** %scan, align 8
  %259 = load i8*, i8** %loceol, align 8
  %cmp413 = icmp ult i8* %258, %259
  br i1 %cmp413, label %land.rhs415, label %land.end422

land.rhs415:                                      ; preds = %land.lhs.true412
  %260 = load i32, i32* %to_complement, align 4
  %261 = load %struct.regnode*, %struct.regnode** %p.addr, align 8
  %flags416 = getelementptr inbounds %struct.regnode, %struct.regnode* %261, i32 0, i32 0
  %262 = load i8, i8* %flags416, align 2
  %263 = load i8*, i8** %scan, align 8
  %call417 = call zeroext i1 @S_isFOO_utf8_lc(i8 zeroext %262, i8* %263)
  %264 = zext i1 %call417 to i64
  %cond419 = select i1 %call417, i32 1, i32 0
  %xor420 = xor i32 %260, %cond419
  %tobool421 = icmp ne i32 %xor420, 0
  br label %land.end422

land.end422:                                      ; preds = %land.rhs415, %land.lhs.true412, %while.cond409
  %265 = phi i1 [ false, %land.lhs.true412 ], [ false, %while.cond409 ], [ %tobool421, %land.rhs415 ]
  br i1 %265, label %while.body423, label %while.end430

while.body423:                                    ; preds = %land.end422
  %266 = load i8*, i8** %scan, align 8
  %267 = load i8, i8* %266, align 1
  %idxprom424 = zext i8 %267 to i64
  %arrayidx425 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom424
  %268 = load i8, i8* %arrayidx425, align 1
  %conv426 = zext i8 %268 to i32
  %269 = load i8*, i8** %scan, align 8
  %idx.ext427 = sext i32 %conv426 to i64
  %add.ptr428 = getelementptr inbounds i8, i8* %269, i64 %idx.ext427
  store i8* %add.ptr428, i8** %scan, align 8
  %270 = load i32, i32* %hardcount, align 4
  %inc429 = add nsw i32 %270, 1
  store i32 %inc429, i32* %hardcount, align 4
  br label %while.cond409

while.end430:                                     ; preds = %land.end422
  br label %if.end431

if.end431:                                        ; preds = %while.end430, %while.end407
  br label %sw.epilog1490

sw.bb432:                                         ; preds = %if.end5
  %271 = load i8, i8* %utf8_target, align 1
  %tobool433 = trunc i8 %271 to i1
  br i1 %tobool433, label %if.then434, label %if.end435

if.then434:                                       ; preds = %sw.bb432
  br label %utf8_posix

if.end435:                                        ; preds = %sw.bb432
  br label %sw.bb436

sw.bb436:                                         ; preds = %if.end5, %if.end435
  %272 = load i8, i8* %utf8_target, align 1
  %tobool437 = trunc i8 %272 to i1
  br i1 %tobool437, label %land.lhs.true439, label %if.end449

land.lhs.true439:                                 ; preds = %sw.bb436
  %273 = load i8*, i8** %loceol, align 8
  %274 = load i8*, i8** %scan, align 8
  %sub.ptr.lhs.cast440 = ptrtoint i8* %273 to i64
  %sub.ptr.rhs.cast441 = ptrtoint i8* %274 to i64
  %sub.ptr.sub442 = sub i64 %sub.ptr.lhs.cast440, %sub.ptr.rhs.cast441
  %275 = load i32, i32* %max.addr, align 4
  %conv443 = sext i32 %275 to i64
  %cmp444 = icmp sgt i64 %sub.ptr.sub442, %conv443
  br i1 %cmp444, label %if.then446, label %if.end449

if.then446:                                       ; preds = %land.lhs.true439
  %276 = load i8*, i8** %scan, align 8
  %277 = load i32, i32* %max.addr, align 4
  %idx.ext447 = sext i32 %277 to i64
  %add.ptr448 = getelementptr inbounds i8, i8* %276, i64 %idx.ext447
  store i8* %add.ptr448, i8** %loceol, align 8
  br label %if.end449

if.end449:                                        ; preds = %if.then446, %land.lhs.true439, %sw.bb436
  br label %while.cond450

while.cond450:                                    ; preds = %while.body468, %if.end449
  %278 = load i8*, i8** %scan, align 8
  %279 = load i8*, i8** %loceol, align 8
  %cmp451 = icmp ult i8* %278, %279
  br i1 %cmp451, label %land.rhs453, label %land.end467

land.rhs453:                                      ; preds = %while.cond450
  %280 = load i8*, i8** %scan, align 8
  %281 = load i8, i8* %280, align 1
  %idxprom454 = zext i8 %281 to i64
  %arrayidx455 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom454
  %282 = load i32, i32* %arrayidx455, align 4
  %283 = load %struct.regnode*, %struct.regnode** %p.addr, align 8
  %flags456 = getelementptr inbounds %struct.regnode, %struct.regnode* %283, i32 0, i32 0
  %284 = load i8, i8* %flags456, align 2
  %conv457 = zext i8 %284 to i32
  %shl458 = shl i32 1, %conv457
  %or459 = or i32 %shl458, 16384
  %and460 = and i32 %282, %or459
  %285 = load %struct.regnode*, %struct.regnode** %p.addr, align 8
  %flags461 = getelementptr inbounds %struct.regnode, %struct.regnode* %285, i32 0, i32 0
  %286 = load i8, i8* %flags461, align 2
  %conv462 = zext i8 %286 to i32
  %shl463 = shl i32 1, %conv462
  %or464 = or i32 %shl463, 16384
  %cmp465 = icmp eq i32 %and460, %or464
  br label %land.end467

land.end467:                                      ; preds = %land.rhs453, %while.cond450
  %287 = phi i1 [ false, %while.cond450 ], [ %cmp465, %land.rhs453 ]
  br i1 %287, label %while.body468, label %while.end470

while.body468:                                    ; preds = %land.end467
  %288 = load i8*, i8** %scan, align 8
  %incdec.ptr469 = getelementptr inbounds i8, i8* %288, i32 1
  store i8* %incdec.ptr469, i8** %scan, align 8
  br label %while.cond450

while.end470:                                     ; preds = %land.end467
  br label %sw.epilog1490

sw.bb471:                                         ; preds = %if.end5
  %289 = load i8, i8* %utf8_target, align 1
  %tobool472 = trunc i8 %289 to i1
  br i1 %tobool472, label %if.then473, label %if.end474

if.then473:                                       ; preds = %sw.bb471
  store i32 1, i32* %to_complement, align 4
  br label %utf8_posix

if.end474:                                        ; preds = %sw.bb471
  br label %sw.bb475

sw.bb475:                                         ; preds = %if.end5, %if.end474
  %290 = load i8, i8* %utf8_target, align 1
  %tobool476 = trunc i8 %290 to i1
  br i1 %tobool476, label %if.else500, label %if.then477

if.then477:                                       ; preds = %sw.bb475
  br label %while.cond478

while.cond478:                                    ; preds = %while.body497, %if.then477
  %291 = load i8*, i8** %scan, align 8
  %292 = load i8*, i8** %loceol, align 8
  %cmp479 = icmp ult i8* %291, %292
  br i1 %cmp479, label %land.rhs481, label %land.end496

land.rhs481:                                      ; preds = %while.cond478
  %293 = load i8*, i8** %scan, align 8
  %294 = load i8, i8* %293, align 1
  %idxprom482 = zext i8 %294 to i64
  %arrayidx483 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom482
  %295 = load i32, i32* %arrayidx483, align 4
  %296 = load %struct.regnode*, %struct.regnode** %p.addr, align 8
  %flags484 = getelementptr inbounds %struct.regnode, %struct.regnode* %296, i32 0, i32 0
  %297 = load i8, i8* %flags484, align 2
  %conv485 = zext i8 %297 to i32
  %shl486 = shl i32 1, %conv485
  %or487 = or i32 %shl486, 16384
  %and488 = and i32 %295, %or487
  %298 = load %struct.regnode*, %struct.regnode** %p.addr, align 8
  %flags489 = getelementptr inbounds %struct.regnode, %struct.regnode* %298, i32 0, i32 0
  %299 = load i8, i8* %flags489, align 2
  %conv490 = zext i8 %299 to i32
  %shl491 = shl i32 1, %conv490
  %or492 = or i32 %shl491, 16384
  %cmp493 = icmp eq i32 %and488, %or492
  %lnot495 = xor i1 %cmp493, true
  br label %land.end496

land.end496:                                      ; preds = %land.rhs481, %while.cond478
  %300 = phi i1 [ false, %while.cond478 ], [ %lnot495, %land.rhs481 ]
  br i1 %300, label %while.body497, label %while.end499

while.body497:                                    ; preds = %land.end496
  %301 = load i8*, i8** %scan, align 8
  %incdec.ptr498 = getelementptr inbounds i8, i8* %301, i32 1
  store i8* %incdec.ptr498, i8** %scan, align 8
  br label %while.cond478

while.end499:                                     ; preds = %land.end496
  br label %if.end536

if.else500:                                       ; preds = %sw.bb475
  br label %while.cond501

while.cond501:                                    ; preds = %while.body528, %if.else500
  %302 = load i32, i32* %hardcount, align 4
  %303 = load i32, i32* %max.addr, align 4
  %cmp502 = icmp slt i32 %302, %303
  br i1 %cmp502, label %land.lhs.true504, label %land.end527

land.lhs.true504:                                 ; preds = %while.cond501
  %304 = load i8*, i8** %scan, align 8
  %305 = load i8*, i8** %loceol, align 8
  %cmp505 = icmp ult i8* %304, %305
  br i1 %cmp505, label %land.rhs507, label %land.end527

land.rhs507:                                      ; preds = %land.lhs.true504
  %306 = load i8*, i8** %scan, align 8
  %307 = load i8, i8* %306, align 1
  %conv508 = sext i8 %307 to i64
  %cmp509 = icmp ult i64 %conv508, 128
  br i1 %cmp509, label %lor.rhs511, label %lor.end526

lor.rhs511:                                       ; preds = %land.rhs507
  %308 = load i8*, i8** %scan, align 8
  %309 = load i8, i8* %308, align 1
  %idxprom512 = zext i8 %309 to i64
  %arrayidx513 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom512
  %310 = load i32, i32* %arrayidx513, align 4
  %311 = load %struct.regnode*, %struct.regnode** %p.addr, align 8
  %flags514 = getelementptr inbounds %struct.regnode, %struct.regnode* %311, i32 0, i32 0
  %312 = load i8, i8* %flags514, align 2
  %conv515 = zext i8 %312 to i32
  %shl516 = shl i32 1, %conv515
  %or517 = or i32 %shl516, 16384
  %and518 = and i32 %310, %or517
  %313 = load %struct.regnode*, %struct.regnode** %p.addr, align 8
  %flags519 = getelementptr inbounds %struct.regnode, %struct.regnode* %313, i32 0, i32 0
  %314 = load i8, i8* %flags519, align 2
  %conv520 = zext i8 %314 to i32
  %shl521 = shl i32 1, %conv520
  %or522 = or i32 %shl521, 16384
  %cmp523 = icmp eq i32 %and518, %or522
  %lnot525 = xor i1 %cmp523, true
  br label %lor.end526

lor.end526:                                       ; preds = %lor.rhs511, %land.rhs507
  %315 = phi i1 [ true, %land.rhs507 ], [ %lnot525, %lor.rhs511 ]
  br label %land.end527

land.end527:                                      ; preds = %lor.end526, %land.lhs.true504, %while.cond501
  %316 = phi i1 [ false, %land.lhs.true504 ], [ false, %while.cond501 ], [ %315, %lor.end526 ]
  br i1 %316, label %while.body528, label %while.end535

while.body528:                                    ; preds = %land.end527
  %317 = load i8*, i8** %scan, align 8
  %318 = load i8, i8* %317, align 1
  %idxprom529 = zext i8 %318 to i64
  %arrayidx530 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom529
  %319 = load i8, i8* %arrayidx530, align 1
  %conv531 = zext i8 %319 to i32
  %320 = load i8*, i8** %scan, align 8
  %idx.ext532 = sext i32 %conv531 to i64
  %add.ptr533 = getelementptr inbounds i8, i8* %320, i64 %idx.ext532
  store i8* %add.ptr533, i8** %scan, align 8
  %321 = load i32, i32* %hardcount, align 4
  %inc534 = add nsw i32 %321, 1
  store i32 %inc534, i32* %hardcount, align 4
  br label %while.cond501

while.end535:                                     ; preds = %land.end527
  br label %if.end536

if.end536:                                        ; preds = %while.end535, %while.end499
  br label %sw.epilog1490

sw.bb537:                                         ; preds = %if.end5
  store i32 1, i32* %to_complement, align 4
  br label %sw.bb538

sw.bb538:                                         ; preds = %if.end5, %sw.bb537
  %322 = load i8, i8* %utf8_target, align 1
  %tobool539 = trunc i8 %322 to i1
  br i1 %tobool539, label %if.else561, label %if.then540

if.then540:                                       ; preds = %sw.bb538
  br label %while.cond541

while.cond541:                                    ; preds = %while.body558, %if.then540
  %323 = load i8*, i8** %scan, align 8
  %324 = load i8*, i8** %loceol, align 8
  %cmp542 = icmp ult i8* %323, %324
  br i1 %cmp542, label %land.rhs544, label %land.end557

land.rhs544:                                      ; preds = %while.cond541
  %325 = load i32, i32* %to_complement, align 4
  %326 = load i8*, i8** %scan, align 8
  %327 = load i8, i8* %326, align 1
  %idxprom545 = zext i8 %327 to i64
  %arrayidx546 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom545
  %328 = load i32, i32* %arrayidx546, align 4
  %329 = load %struct.regnode*, %struct.regnode** %p.addr, align 8
  %flags547 = getelementptr inbounds %struct.regnode, %struct.regnode* %329, i32 0, i32 0
  %330 = load i8, i8* %flags547, align 2
  %conv548 = zext i8 %330 to i32
  %shl549 = shl i32 1, %conv548
  %and550 = and i32 %328, %shl549
  %tobool551 = icmp ne i32 %and550, 0
  %331 = zext i1 %tobool551 to i64
  %cond552 = select i1 %tobool551, i32 1, i32 0
  %tobool553 = icmp ne i32 %cond552, 0
  %332 = zext i1 %tobool553 to i64
  %cond554 = select i1 %tobool553, i32 1, i32 0
  %xor555 = xor i32 %325, %cond554
  %tobool556 = icmp ne i32 %xor555, 0
  br label %land.end557

land.end557:                                      ; preds = %land.rhs544, %while.cond541
  %333 = phi i1 [ false, %while.cond541 ], [ %tobool556, %land.rhs544 ]
  br i1 %333, label %while.body558, label %while.end560

while.body558:                                    ; preds = %land.end557
  %334 = load i8*, i8** %scan, align 8
  %incdec.ptr559 = getelementptr inbounds i8, i8* %334, i32 1
  store i8* %incdec.ptr559, i8** %scan, align 8
  br label %while.cond541

while.end560:                                     ; preds = %land.end557
  br label %if.end1171

if.else561:                                       ; preds = %sw.bb538
  br label %utf8_posix

utf8_posix:                                       ; preds = %if.else561, %if.then473, %if.then434
  %335 = load %struct.regnode*, %struct.regnode** %p.addr, align 8
  %flags562 = getelementptr inbounds %struct.regnode, %struct.regnode* %335, i32 0, i32 0
  %336 = load i8, i8* %flags562, align 2
  %conv563 = zext i8 %336 to i32
  store i32 %conv563, i32* %classnum, align 4
  %337 = load i32, i32* %classnum, align 4
  %cmp564 = icmp ult i32 %337, 10
  br i1 %cmp564, label %if.then566, label %if.else636

if.then566:                                       ; preds = %utf8_posix
  br label %while.cond567

while.cond567:                                    ; preds = %if.end633, %if.then566
  %338 = load i32, i32* %hardcount, align 4
  %339 = load i32, i32* %max.addr, align 4
  %cmp568 = icmp slt i32 %338, %339
  br i1 %cmp568, label %land.rhs570, label %land.end573

land.rhs570:                                      ; preds = %while.cond567
  %340 = load i8*, i8** %scan, align 8
  %341 = load i8*, i8** %loceol, align 8
  %cmp571 = icmp ult i8* %340, %341
  br label %land.end573

land.end573:                                      ; preds = %land.rhs570, %while.cond567
  %342 = phi i1 [ false, %while.cond567 ], [ %cmp571, %land.rhs570 ]
  br i1 %342, label %while.body574, label %while.end635

while.body574:                                    ; preds = %land.end573
  %343 = load i8*, i8** %scan, align 8
  %344 = load i8, i8* %343, align 1
  %conv575 = sext i8 %344 to i64
  %cmp576 = icmp ult i64 %conv575, 128
  br i1 %cmp576, label %if.then578, label %if.else592

if.then578:                                       ; preds = %while.body574
  %345 = load i32, i32* %to_complement, align 4
  %346 = load i8*, i8** %scan, align 8
  %347 = load i8, i8* %346, align 1
  %idxprom579 = zext i8 %347 to i64
  %arrayidx580 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom579
  %348 = load i32, i32* %arrayidx580, align 4
  %349 = load i32, i32* %classnum, align 4
  %shl581 = shl i32 1, %349
  %and582 = and i32 %348, %shl581
  %tobool583 = icmp ne i32 %and582, 0
  %350 = zext i1 %tobool583 to i64
  %cond584 = select i1 %tobool583, i32 1, i32 0
  %tobool585 = icmp ne i32 %cond584, 0
  %351 = zext i1 %tobool585 to i64
  %cond586 = select i1 %tobool585, i32 1, i32 0
  %xor587 = xor i32 %345, %cond586
  %tobool588 = icmp ne i32 %xor587, 0
  br i1 %tobool588, label %if.end590, label %if.then589

if.then589:                                       ; preds = %if.then578
  br label %while.end635

if.end590:                                        ; preds = %if.then578
  %352 = load i8*, i8** %scan, align 8
  %incdec.ptr591 = getelementptr inbounds i8, i8* %352, i32 1
  store i8* %incdec.ptr591, i8** %scan, align 8
  br label %if.end633

if.else592:                                       ; preds = %while.body574
  %353 = load i8*, i8** %scan, align 8
  %354 = load i8, i8* %353, align 1
  %conv593 = zext i8 %354 to i32
  %and594 = and i32 %conv593, 254
  %cmp595 = icmp eq i32 %and594, 194
  br i1 %cmp595, label %if.then597, label %if.else631

if.then597:                                       ; preds = %if.else592
  %355 = load i32, i32* %to_complement, align 4
  %356 = load i8*, i8** %scan, align 8
  %357 = load i8, i8* %356, align 1
  %conv598 = sext i8 %357 to i32
  %and599 = and i32 %conv598, 31
  %shl600 = shl i32 %and599, 6
  %358 = load i8*, i8** %scan, align 8
  %add.ptr601 = getelementptr inbounds i8, i8* %358, i64 1
  %359 = load i8, i8* %add.ptr601, align 1
  %conv602 = zext i8 %359 to i32
  %and603 = and i32 %conv602, 63
  %or604 = or i32 %shl600, %and603
  %conv605 = sext i32 %or604 to i64
  %and606 = and i64 %conv605, -256
  %tobool607 = icmp ne i64 %and606, 0
  br i1 %tobool607, label %land.end622, label %land.rhs608

land.rhs608:                                      ; preds = %if.then597
  %360 = load i8*, i8** %scan, align 8
  %361 = load i8, i8* %360, align 1
  %conv609 = sext i8 %361 to i32
  %and610 = and i32 %conv609, 31
  %shl611 = shl i32 %and610, 6
  %362 = load i8*, i8** %scan, align 8
  %add.ptr612 = getelementptr inbounds i8, i8* %362, i64 1
  %363 = load i8, i8* %add.ptr612, align 1
  %conv613 = zext i8 %363 to i32
  %and614 = and i32 %conv613, 63
  %or615 = or i32 %shl611, %and614
  %conv616 = trunc i32 %or615 to i8
  %idxprom617 = zext i8 %conv616 to i64
  %arrayidx618 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom617
  %364 = load i32, i32* %arrayidx618, align 4
  %365 = load i32, i32* %classnum, align 4
  %shl619 = shl i32 1, %365
  %and620 = and i32 %364, %shl619
  %tobool621 = icmp ne i32 %and620, 0
  br label %land.end622

land.end622:                                      ; preds = %land.rhs608, %if.then597
  %366 = phi i1 [ false, %if.then597 ], [ %tobool621, %land.rhs608 ]
  %367 = zext i1 %366 to i64
  %cond623 = select i1 %366, i32 1, i32 0
  %tobool624 = icmp ne i32 %cond623, 0
  %368 = zext i1 %tobool624 to i64
  %cond625 = select i1 %tobool624, i32 1, i32 0
  %xor626 = xor i32 %355, %cond625
  %tobool627 = icmp ne i32 %xor626, 0
  br i1 %tobool627, label %if.end629, label %if.then628

if.then628:                                       ; preds = %land.end622
  br label %while.end635

if.end629:                                        ; preds = %land.end622
  %369 = load i8*, i8** %scan, align 8
  %add.ptr630 = getelementptr inbounds i8, i8* %369, i64 2
  store i8* %add.ptr630, i8** %scan, align 8
  br label %if.end632

if.else631:                                       ; preds = %if.else592
  br label %found_above_latin1

if.end632:                                        ; preds = %if.end629
  br label %if.end633

if.end633:                                        ; preds = %if.end632, %if.end590
  %370 = load i32, i32* %hardcount, align 4
  %inc634 = add nsw i32 %370, 1
  store i32 %inc634, i32* %hardcount, align 4
  br label %while.cond567

while.end635:                                     ; preds = %if.then628, %if.then589, %land.end573
  br label %if.end1170

if.else636:                                       ; preds = %utf8_posix
  %371 = load i32, i32* %classnum, align 4
  switch i32 %371, label %sw.default [
    i32 10, label %sw.bb637
    i32 11, label %sw.bb782
    i32 12, label %sw.bb921
    i32 15, label %sw.bb1016
    i32 13, label %sw.bb1099
  ]

sw.bb637:                                         ; preds = %if.else636
  br label %while.cond638

while.cond638:                                    ; preds = %while.body774, %sw.bb637
  %372 = load i32, i32* %hardcount, align 4
  %373 = load i32, i32* %max.addr, align 4
  %cmp639 = icmp slt i32 %372, %373
  br i1 %cmp639, label %land.lhs.true641, label %land.end773

land.lhs.true641:                                 ; preds = %while.cond638
  %374 = load i8*, i8** %scan, align 8
  %375 = load i8*, i8** %loceol, align 8
  %cmp642 = icmp ult i8* %374, %375
  br i1 %cmp642, label %land.rhs644, label %land.end773

land.rhs644:                                      ; preds = %land.lhs.true641
  %376 = load i32, i32* %to_complement, align 4
  %377 = load i8*, i8** %scan, align 8
  %378 = load i8, i8* %377, align 1
  %conv645 = sext i8 %378 to i64
  %cmp646 = icmp ult i64 %conv645, 128
  br i1 %cmp646, label %cond.true648, label %cond.false654

cond.true648:                                     ; preds = %land.rhs644
  %379 = load i8*, i8** %scan, align 8
  %380 = load i8, i8* %379, align 1
  %idxprom649 = zext i8 %380 to i64
  %arrayidx650 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom649
  %381 = load i32, i32* %arrayidx650, align 4
  %and651 = and i32 %381, 1024
  %tobool652 = icmp ne i32 %and651, 0
  %382 = zext i1 %tobool652 to i64
  %cond653 = select i1 %tobool652, i32 1, i32 0
  br label %cond.end767

cond.false654:                                    ; preds = %land.rhs644
  %383 = load i8*, i8** %scan, align 8
  %384 = load i8, i8* %383, align 1
  %conv655 = zext i8 %384 to i32
  %and656 = and i32 %conv655, 254
  %cmp657 = icmp eq i32 %and656, 194
  br i1 %cmp657, label %cond.true659, label %cond.false685

cond.true659:                                     ; preds = %cond.false654
  %385 = load i8*, i8** %scan, align 8
  %386 = load i8, i8* %385, align 1
  %conv660 = sext i8 %386 to i32
  %and661 = and i32 %conv660, 31
  %shl662 = shl i32 %and661, 6
  %387 = load i8*, i8** %scan, align 8
  %add.ptr663 = getelementptr inbounds i8, i8* %387, i64 1
  %388 = load i8, i8* %add.ptr663, align 1
  %conv664 = zext i8 %388 to i32
  %and665 = and i32 %conv664, 63
  %or666 = or i32 %shl662, %and665
  %conv667 = sext i32 %or666 to i64
  %and668 = and i64 %conv667, -256
  %tobool669 = icmp ne i64 %and668, 0
  br i1 %tobool669, label %land.end683, label %land.rhs670

land.rhs670:                                      ; preds = %cond.true659
  %389 = load i8*, i8** %scan, align 8
  %390 = load i8, i8* %389, align 1
  %conv671 = sext i8 %390 to i32
  %and672 = and i32 %conv671, 31
  %shl673 = shl i32 %and672, 6
  %391 = load i8*, i8** %scan, align 8
  %add.ptr674 = getelementptr inbounds i8, i8* %391, i64 1
  %392 = load i8, i8* %add.ptr674, align 1
  %conv675 = zext i8 %392 to i32
  %and676 = and i32 %conv675, 63
  %or677 = or i32 %shl673, %and676
  %conv678 = trunc i32 %or677 to i8
  %idxprom679 = zext i8 %conv678 to i64
  %arrayidx680 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom679
  %393 = load i32, i32* %arrayidx680, align 4
  %and681 = and i32 %393, 1024
  %tobool682 = icmp ne i32 %and681, 0
  br label %land.end683

land.end683:                                      ; preds = %land.rhs670, %cond.true659
  %394 = phi i1 [ false, %cond.true659 ], [ %tobool682, %land.rhs670 ]
  %395 = zext i1 %394 to i64
  %cond684 = select i1 %394, i32 1, i32 0
  br label %cond.end765

cond.false685:                                    ; preds = %cond.false654
  %396 = load i8*, i8** %scan, align 8
  %arrayidx686 = getelementptr inbounds i8, i8* %396, i64 0
  %397 = load i8, i8* %arrayidx686, align 1
  %conv687 = zext i8 %397 to i32
  %cmp688 = icmp eq i32 225, %conv687
  br i1 %cmp688, label %cond.true690, label %cond.false702

cond.true690:                                     ; preds = %cond.false685
  %398 = load i8*, i8** %scan, align 8
  %arrayidx691 = getelementptr inbounds i8, i8* %398, i64 1
  %399 = load i8, i8* %arrayidx691, align 1
  %conv692 = zext i8 %399 to i32
  %cmp693 = icmp eq i32 154, %conv692
  br i1 %cmp693, label %land.rhs695, label %land.end700

land.rhs695:                                      ; preds = %cond.true690
  %400 = load i8*, i8** %scan, align 8
  %arrayidx696 = getelementptr inbounds i8, i8* %400, i64 2
  %401 = load i8, i8* %arrayidx696, align 1
  %conv697 = zext i8 %401 to i32
  %cmp698 = icmp eq i32 128, %conv697
  br label %land.end700

land.end700:                                      ; preds = %land.rhs695, %cond.true690
  %402 = phi i1 [ false, %cond.true690 ], [ %cmp698, %land.rhs695 ]
  %403 = zext i1 %402 to i64
  %cond701 = select i1 %402, i32 3, i32 0
  br label %cond.end763

cond.false702:                                    ; preds = %cond.false685
  %404 = load i8*, i8** %scan, align 8
  %arrayidx703 = getelementptr inbounds i8, i8* %404, i64 0
  %405 = load i8, i8* %arrayidx703, align 1
  %conv704 = zext i8 %405 to i32
  %cmp705 = icmp eq i32 226, %conv704
  br i1 %cmp705, label %cond.true707, label %cond.false744

cond.true707:                                     ; preds = %cond.false702
  %406 = load i8*, i8** %scan, align 8
  %arrayidx708 = getelementptr inbounds i8, i8* %406, i64 1
  %407 = load i8, i8* %arrayidx708, align 1
  %conv709 = zext i8 %407 to i32
  %cmp710 = icmp eq i32 128, %conv709
  br i1 %cmp710, label %cond.true712, label %cond.false730

cond.true712:                                     ; preds = %cond.true707
  %408 = load i8*, i8** %scan, align 8
  %arrayidx713 = getelementptr inbounds i8, i8* %408, i64 2
  %409 = load i8, i8* %arrayidx713, align 1
  %conv714 = zext i8 %409 to i32
  %cmp715 = icmp sle i32 %conv714, 138
  br i1 %cmp715, label %lor.end728, label %lor.lhs.false717

lor.lhs.false717:                                 ; preds = %cond.true712
  %410 = load i8*, i8** %scan, align 8
  %arrayidx718 = getelementptr inbounds i8, i8* %410, i64 2
  %411 = load i8, i8* %arrayidx718, align 1
  %conv719 = zext i8 %411 to i32
  %and720 = and i32 %conv719, 254
  %cmp721 = icmp eq i32 %and720, 168
  br i1 %cmp721, label %lor.end728, label %lor.rhs723

lor.rhs723:                                       ; preds = %lor.lhs.false717
  %412 = load i8*, i8** %scan, align 8
  %arrayidx724 = getelementptr inbounds i8, i8* %412, i64 2
  %413 = load i8, i8* %arrayidx724, align 1
  %conv725 = zext i8 %413 to i32
  %cmp726 = icmp eq i32 175, %conv725
  br label %lor.end728

lor.end728:                                       ; preds = %lor.rhs723, %lor.lhs.false717, %cond.true712
  %414 = phi i1 [ true, %lor.lhs.false717 ], [ true, %cond.true712 ], [ %cmp726, %lor.rhs723 ]
  %415 = zext i1 %414 to i64
  %cond729 = select i1 %414, i32 3, i32 0
  br label %cond.end742

cond.false730:                                    ; preds = %cond.true707
  %416 = load i8*, i8** %scan, align 8
  %arrayidx731 = getelementptr inbounds i8, i8* %416, i64 1
  %417 = load i8, i8* %arrayidx731, align 1
  %conv732 = zext i8 %417 to i32
  %cmp733 = icmp eq i32 129, %conv732
  br i1 %cmp733, label %land.rhs735, label %land.end740

land.rhs735:                                      ; preds = %cond.false730
  %418 = load i8*, i8** %scan, align 8
  %arrayidx736 = getelementptr inbounds i8, i8* %418, i64 2
  %419 = load i8, i8* %arrayidx736, align 1
  %conv737 = zext i8 %419 to i32
  %cmp738 = icmp eq i32 159, %conv737
  br label %land.end740

land.end740:                                      ; preds = %land.rhs735, %cond.false730
  %420 = phi i1 [ false, %cond.false730 ], [ %cmp738, %land.rhs735 ]
  %421 = zext i1 %420 to i64
  %cond741 = select i1 %420, i32 3, i32 0
  br label %cond.end742

cond.end742:                                      ; preds = %land.end740, %lor.end728
  %cond743 = phi i32 [ %cond729, %lor.end728 ], [ %cond741, %land.end740 ]
  br label %cond.end761

cond.false744:                                    ; preds = %cond.false702
  %422 = load i8*, i8** %scan, align 8
  %arrayidx745 = getelementptr inbounds i8, i8* %422, i64 0
  %423 = load i8, i8* %arrayidx745, align 1
  %conv746 = zext i8 %423 to i32
  %cmp747 = icmp eq i32 227, %conv746
  br i1 %cmp747, label %land.lhs.true749, label %land.end759

land.lhs.true749:                                 ; preds = %cond.false744
  %424 = load i8*, i8** %scan, align 8
  %arrayidx750 = getelementptr inbounds i8, i8* %424, i64 1
  %425 = load i8, i8* %arrayidx750, align 1
  %conv751 = zext i8 %425 to i32
  %cmp752 = icmp eq i32 128, %conv751
  br i1 %cmp752, label %land.rhs754, label %land.end759

land.rhs754:                                      ; preds = %land.lhs.true749
  %426 = load i8*, i8** %scan, align 8
  %arrayidx755 = getelementptr inbounds i8, i8* %426, i64 2
  %427 = load i8, i8* %arrayidx755, align 1
  %conv756 = zext i8 %427 to i32
  %cmp757 = icmp eq i32 128, %conv756
  br label %land.end759

land.end759:                                      ; preds = %land.rhs754, %land.lhs.true749, %cond.false744
  %428 = phi i1 [ false, %land.lhs.true749 ], [ false, %cond.false744 ], [ %cmp757, %land.rhs754 ]
  %429 = zext i1 %428 to i64
  %cond760 = select i1 %428, i32 3, i32 0
  br label %cond.end761

cond.end761:                                      ; preds = %land.end759, %cond.end742
  %cond762 = phi i32 [ %cond743, %cond.end742 ], [ %cond760, %land.end759 ]
  br label %cond.end763

cond.end763:                                      ; preds = %cond.end761, %land.end700
  %cond764 = phi i32 [ %cond701, %land.end700 ], [ %cond762, %cond.end761 ]
  br label %cond.end765

cond.end765:                                      ; preds = %cond.end763, %land.end683
  %cond766 = phi i32 [ %cond684, %land.end683 ], [ %cond764, %cond.end763 ]
  br label %cond.end767

cond.end767:                                      ; preds = %cond.end765, %cond.true648
  %cond768 = phi i32 [ %cond653, %cond.true648 ], [ %cond766, %cond.end765 ]
  %tobool769 = icmp ne i32 %cond768, 0
  %430 = zext i1 %tobool769 to i64
  %cond770 = select i1 %tobool769, i32 1, i32 0
  %xor771 = xor i32 %376, %cond770
  %tobool772 = icmp ne i32 %xor771, 0
  br label %land.end773

land.end773:                                      ; preds = %cond.end767, %land.lhs.true641, %while.cond638
  %431 = phi i1 [ false, %land.lhs.true641 ], [ false, %while.cond638 ], [ %tobool772, %cond.end767 ]
  br i1 %431, label %while.body774, label %while.end781

while.body774:                                    ; preds = %land.end773
  %432 = load i8*, i8** %scan, align 8
  %433 = load i8, i8* %432, align 1
  %idxprom775 = zext i8 %433 to i64
  %arrayidx776 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom775
  %434 = load i8, i8* %arrayidx776, align 1
  %conv777 = zext i8 %434 to i32
  %435 = load i8*, i8** %scan, align 8
  %idx.ext778 = sext i32 %conv777 to i64
  %add.ptr779 = getelementptr inbounds i8, i8* %435, i64 %idx.ext778
  store i8* %add.ptr779, i8** %scan, align 8
  %436 = load i32, i32* %hardcount, align 4
  %inc780 = add nsw i32 %436, 1
  store i32 %inc780, i32* %hardcount, align 4
  br label %while.cond638

while.end781:                                     ; preds = %land.end773
  br label %sw.epilog

sw.bb782:                                         ; preds = %if.else636
  br label %while.cond783

while.cond783:                                    ; preds = %while.body913, %sw.bb782
  %437 = load i32, i32* %hardcount, align 4
  %438 = load i32, i32* %max.addr, align 4
  %cmp784 = icmp slt i32 %437, %438
  br i1 %cmp784, label %land.lhs.true786, label %land.end912

land.lhs.true786:                                 ; preds = %while.cond783
  %439 = load i8*, i8** %scan, align 8
  %440 = load i8*, i8** %loceol, align 8
  %cmp787 = icmp ult i8* %439, %440
  br i1 %cmp787, label %land.rhs789, label %land.end912

land.rhs789:                                      ; preds = %land.lhs.true786
  %441 = load i32, i32* %to_complement, align 4
  %442 = load i8*, i8** %scan, align 8
  %443 = load i8, i8* %442, align 1
  %conv790 = sext i8 %443 to i64
  %cmp791 = icmp ult i64 %conv790, 128
  br i1 %cmp791, label %cond.true793, label %cond.false799

cond.true793:                                     ; preds = %land.rhs789
  %444 = load i8*, i8** %scan, align 8
  %445 = load i8, i8* %444, align 1
  %idxprom794 = zext i8 %445 to i64
  %arrayidx795 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom794
  %446 = load i32, i32* %arrayidx795, align 4
  %and796 = and i32 %446, 2048
  %tobool797 = icmp ne i32 %and796, 0
  %447 = zext i1 %tobool797 to i64
  %cond798 = select i1 %tobool797, i32 1, i32 0
  br label %cond.end906

cond.false799:                                    ; preds = %land.rhs789
  %448 = load i8*, i8** %scan, align 8
  %449 = load i8, i8* %448, align 1
  %conv800 = zext i8 %449 to i32
  %and801 = and i32 %conv800, 254
  %cmp802 = icmp eq i32 %and801, 194
  br i1 %cmp802, label %cond.true804, label %cond.false830

cond.true804:                                     ; preds = %cond.false799
  %450 = load i8*, i8** %scan, align 8
  %451 = load i8, i8* %450, align 1
  %conv805 = sext i8 %451 to i32
  %and806 = and i32 %conv805, 31
  %shl807 = shl i32 %and806, 6
  %452 = load i8*, i8** %scan, align 8
  %add.ptr808 = getelementptr inbounds i8, i8* %452, i64 1
  %453 = load i8, i8* %add.ptr808, align 1
  %conv809 = zext i8 %453 to i32
  %and810 = and i32 %conv809, 63
  %or811 = or i32 %shl807, %and810
  %conv812 = sext i32 %or811 to i64
  %and813 = and i64 %conv812, -256
  %tobool814 = icmp ne i64 %and813, 0
  br i1 %tobool814, label %land.end828, label %land.rhs815

land.rhs815:                                      ; preds = %cond.true804
  %454 = load i8*, i8** %scan, align 8
  %455 = load i8, i8* %454, align 1
  %conv816 = sext i8 %455 to i32
  %and817 = and i32 %conv816, 31
  %shl818 = shl i32 %and817, 6
  %456 = load i8*, i8** %scan, align 8
  %add.ptr819 = getelementptr inbounds i8, i8* %456, i64 1
  %457 = load i8, i8* %add.ptr819, align 1
  %conv820 = zext i8 %457 to i32
  %and821 = and i32 %conv820, 63
  %or822 = or i32 %shl818, %and821
  %conv823 = trunc i32 %or822 to i8
  %idxprom824 = zext i8 %conv823 to i64
  %arrayidx825 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom824
  %458 = load i32, i32* %arrayidx825, align 4
  %and826 = and i32 %458, 2048
  %tobool827 = icmp ne i32 %and826, 0
  br label %land.end828

land.end828:                                      ; preds = %land.rhs815, %cond.true804
  %459 = phi i1 [ false, %cond.true804 ], [ %tobool827, %land.rhs815 ]
  %460 = zext i1 %459 to i64
  %cond829 = select i1 %459, i32 1, i32 0
  br label %cond.end904

cond.false830:                                    ; preds = %cond.false799
  %461 = load i8*, i8** %scan, align 8
  %arrayidx831 = getelementptr inbounds i8, i8* %461, i64 0
  %462 = load i8, i8* %arrayidx831, align 1
  %conv832 = zext i8 %462 to i32
  %cmp833 = icmp eq i32 225, %conv832
  br i1 %cmp833, label %cond.true835, label %cond.false847

cond.true835:                                     ; preds = %cond.false830
  %463 = load i8*, i8** %scan, align 8
  %arrayidx836 = getelementptr inbounds i8, i8* %463, i64 1
  %464 = load i8, i8* %arrayidx836, align 1
  %conv837 = zext i8 %464 to i32
  %cmp838 = icmp eq i32 154, %conv837
  br i1 %cmp838, label %land.rhs840, label %land.end845

land.rhs840:                                      ; preds = %cond.true835
  %465 = load i8*, i8** %scan, align 8
  %arrayidx841 = getelementptr inbounds i8, i8* %465, i64 2
  %466 = load i8, i8* %arrayidx841, align 1
  %conv842 = zext i8 %466 to i32
  %cmp843 = icmp eq i32 128, %conv842
  br label %land.end845

land.end845:                                      ; preds = %land.rhs840, %cond.true835
  %467 = phi i1 [ false, %cond.true835 ], [ %cmp843, %land.rhs840 ]
  %468 = zext i1 %467 to i64
  %cond846 = select i1 %467, i32 3, i32 0
  br label %cond.end902

cond.false847:                                    ; preds = %cond.false830
  %469 = load i8*, i8** %scan, align 8
  %arrayidx848 = getelementptr inbounds i8, i8* %469, i64 0
  %470 = load i8, i8* %arrayidx848, align 1
  %conv849 = zext i8 %470 to i32
  %cmp850 = icmp eq i32 226, %conv849
  br i1 %cmp850, label %cond.true852, label %cond.false883

cond.true852:                                     ; preds = %cond.false847
  %471 = load i8*, i8** %scan, align 8
  %arrayidx853 = getelementptr inbounds i8, i8* %471, i64 1
  %472 = load i8, i8* %arrayidx853, align 1
  %conv854 = zext i8 %472 to i32
  %cmp855 = icmp eq i32 128, %conv854
  br i1 %cmp855, label %cond.true857, label %cond.false869

cond.true857:                                     ; preds = %cond.true852
  %473 = load i8*, i8** %scan, align 8
  %arrayidx858 = getelementptr inbounds i8, i8* %473, i64 2
  %474 = load i8, i8* %arrayidx858, align 1
  %conv859 = zext i8 %474 to i32
  %cmp860 = icmp sle i32 %conv859, 138
  br i1 %cmp860, label %lor.end867, label %lor.rhs862

lor.rhs862:                                       ; preds = %cond.true857
  %475 = load i8*, i8** %scan, align 8
  %arrayidx863 = getelementptr inbounds i8, i8* %475, i64 2
  %476 = load i8, i8* %arrayidx863, align 1
  %conv864 = zext i8 %476 to i32
  %cmp865 = icmp eq i32 175, %conv864
  br label %lor.end867

lor.end867:                                       ; preds = %lor.rhs862, %cond.true857
  %477 = phi i1 [ true, %cond.true857 ], [ %cmp865, %lor.rhs862 ]
  %478 = zext i1 %477 to i64
  %cond868 = select i1 %477, i32 3, i32 0
  br label %cond.end881

cond.false869:                                    ; preds = %cond.true852
  %479 = load i8*, i8** %scan, align 8
  %arrayidx870 = getelementptr inbounds i8, i8* %479, i64 1
  %480 = load i8, i8* %arrayidx870, align 1
  %conv871 = zext i8 %480 to i32
  %cmp872 = icmp eq i32 129, %conv871
  br i1 %cmp872, label %land.rhs874, label %land.end879

land.rhs874:                                      ; preds = %cond.false869
  %481 = load i8*, i8** %scan, align 8
  %arrayidx875 = getelementptr inbounds i8, i8* %481, i64 2
  %482 = load i8, i8* %arrayidx875, align 1
  %conv876 = zext i8 %482 to i32
  %cmp877 = icmp eq i32 159, %conv876
  br label %land.end879

land.end879:                                      ; preds = %land.rhs874, %cond.false869
  %483 = phi i1 [ false, %cond.false869 ], [ %cmp877, %land.rhs874 ]
  %484 = zext i1 %483 to i64
  %cond880 = select i1 %483, i32 3, i32 0
  br label %cond.end881

cond.end881:                                      ; preds = %land.end879, %lor.end867
  %cond882 = phi i32 [ %cond868, %lor.end867 ], [ %cond880, %land.end879 ]
  br label %cond.end900

cond.false883:                                    ; preds = %cond.false847
  %485 = load i8*, i8** %scan, align 8
  %arrayidx884 = getelementptr inbounds i8, i8* %485, i64 0
  %486 = load i8, i8* %arrayidx884, align 1
  %conv885 = zext i8 %486 to i32
  %cmp886 = icmp eq i32 227, %conv885
  br i1 %cmp886, label %land.lhs.true888, label %land.end898

land.lhs.true888:                                 ; preds = %cond.false883
  %487 = load i8*, i8** %scan, align 8
  %arrayidx889 = getelementptr inbounds i8, i8* %487, i64 1
  %488 = load i8, i8* %arrayidx889, align 1
  %conv890 = zext i8 %488 to i32
  %cmp891 = icmp eq i32 128, %conv890
  br i1 %cmp891, label %land.rhs893, label %land.end898

land.rhs893:                                      ; preds = %land.lhs.true888
  %489 = load i8*, i8** %scan, align 8
  %arrayidx894 = getelementptr inbounds i8, i8* %489, i64 2
  %490 = load i8, i8* %arrayidx894, align 1
  %conv895 = zext i8 %490 to i32
  %cmp896 = icmp eq i32 128, %conv895
  br label %land.end898

land.end898:                                      ; preds = %land.rhs893, %land.lhs.true888, %cond.false883
  %491 = phi i1 [ false, %land.lhs.true888 ], [ false, %cond.false883 ], [ %cmp896, %land.rhs893 ]
  %492 = zext i1 %491 to i64
  %cond899 = select i1 %491, i32 3, i32 0
  br label %cond.end900

cond.end900:                                      ; preds = %land.end898, %cond.end881
  %cond901 = phi i32 [ %cond882, %cond.end881 ], [ %cond899, %land.end898 ]
  br label %cond.end902

cond.end902:                                      ; preds = %cond.end900, %land.end845
  %cond903 = phi i32 [ %cond846, %land.end845 ], [ %cond901, %cond.end900 ]
  br label %cond.end904

cond.end904:                                      ; preds = %cond.end902, %land.end828
  %cond905 = phi i32 [ %cond829, %land.end828 ], [ %cond903, %cond.end902 ]
  br label %cond.end906

cond.end906:                                      ; preds = %cond.end904, %cond.true793
  %cond907 = phi i32 [ %cond798, %cond.true793 ], [ %cond905, %cond.end904 ]
  %tobool908 = icmp ne i32 %cond907, 0
  %493 = zext i1 %tobool908 to i64
  %cond909 = select i1 %tobool908, i32 1, i32 0
  %xor910 = xor i32 %441, %cond909
  %tobool911 = icmp ne i32 %xor910, 0
  br label %land.end912

land.end912:                                      ; preds = %cond.end906, %land.lhs.true786, %while.cond783
  %494 = phi i1 [ false, %land.lhs.true786 ], [ false, %while.cond783 ], [ %tobool911, %cond.end906 ]
  br i1 %494, label %while.body913, label %while.end920

while.body913:                                    ; preds = %land.end912
  %495 = load i8*, i8** %scan, align 8
  %496 = load i8, i8* %495, align 1
  %idxprom914 = zext i8 %496 to i64
  %arrayidx915 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom914
  %497 = load i8, i8* %arrayidx915, align 1
  %conv916 = zext i8 %497 to i32
  %498 = load i8*, i8** %scan, align 8
  %idx.ext917 = sext i32 %conv916 to i64
  %add.ptr918 = getelementptr inbounds i8, i8* %498, i64 %idx.ext917
  store i8* %add.ptr918, i8** %scan, align 8
  %499 = load i32, i32* %hardcount, align 4
  %inc919 = add nsw i32 %499, 1
  store i32 %inc919, i32* %hardcount, align 4
  br label %while.cond783

while.end920:                                     ; preds = %land.end912
  br label %sw.epilog

sw.bb921:                                         ; preds = %if.else636
  br label %while.cond922

while.cond922:                                    ; preds = %while.body1008, %sw.bb921
  %500 = load i32, i32* %hardcount, align 4
  %501 = load i32, i32* %max.addr, align 4
  %cmp923 = icmp slt i32 %500, %501
  br i1 %cmp923, label %land.lhs.true925, label %land.end1007

land.lhs.true925:                                 ; preds = %while.cond922
  %502 = load i8*, i8** %scan, align 8
  %503 = load i8*, i8** %loceol, align 8
  %cmp926 = icmp ult i8* %502, %503
  br i1 %cmp926, label %land.rhs928, label %land.end1007

land.rhs928:                                      ; preds = %land.lhs.true925
  %504 = load i32, i32* %to_complement, align 4
  %505 = load i8*, i8** %scan, align 8
  %506 = load i8, i8* %505, align 1
  %conv929 = sext i8 %506 to i64
  %cmp930 = icmp ult i64 %conv929, 128
  br i1 %cmp930, label %cond.true932, label %cond.false938

cond.true932:                                     ; preds = %land.rhs928
  %507 = load i8*, i8** %scan, align 8
  %508 = load i8, i8* %507, align 1
  %idxprom933 = zext i8 %508 to i64
  %arrayidx934 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom933
  %509 = load i32, i32* %arrayidx934, align 4
  %and935 = and i32 %509, 4096
  %tobool936 = icmp ne i32 %and935, 0
  %510 = zext i1 %tobool936 to i64
  %cond937 = select i1 %tobool936, i32 1, i32 0
  br label %cond.end1001

cond.false938:                                    ; preds = %land.rhs928
  %511 = load i8*, i8** %scan, align 8
  %512 = load i8, i8* %511, align 1
  %conv939 = zext i8 %512 to i32
  %cmp940 = icmp sge i32 %conv939, 196
  br i1 %cmp940, label %cond.true942, label %cond.false998

cond.true942:                                     ; preds = %cond.false938
  %513 = load i8*, i8** %scan, align 8
  %arrayidx943 = getelementptr inbounds i8, i8* %513, i64 0
  %514 = load i8, i8* %arrayidx943, align 1
  %conv944 = zext i8 %514 to i32
  %cmp945 = icmp eq i32 239, %conv944
  br i1 %cmp945, label %cond.true947, label %cond.false995

cond.true947:                                     ; preds = %cond.true942
  %515 = load i8*, i8** %scan, align 8
  %arrayidx948 = getelementptr inbounds i8, i8* %515, i64 1
  %516 = load i8, i8* %arrayidx948, align 1
  %conv949 = zext i8 %516 to i32
  %cmp950 = icmp eq i32 188, %conv949
  br i1 %cmp950, label %cond.true952, label %cond.false975

cond.true952:                                     ; preds = %cond.true947
  %517 = load i8*, i8** %scan, align 8
  %arrayidx953 = getelementptr inbounds i8, i8* %517, i64 2
  %518 = load i8, i8* %arrayidx953, align 1
  %conv954 = zext i8 %518 to i32
  %cmp955 = icmp sle i32 144, %conv954
  br i1 %cmp955, label %land.lhs.true957, label %lor.rhs962

land.lhs.true957:                                 ; preds = %cond.true952
  %519 = load i8*, i8** %scan, align 8
  %arrayidx958 = getelementptr inbounds i8, i8* %519, i64 2
  %520 = load i8, i8* %arrayidx958, align 1
  %conv959 = zext i8 %520 to i32
  %cmp960 = icmp sle i32 %conv959, 153
  br i1 %cmp960, label %lor.end973, label %lor.rhs962

lor.rhs962:                                       ; preds = %land.lhs.true957, %cond.true952
  %521 = load i8*, i8** %scan, align 8
  %arrayidx963 = getelementptr inbounds i8, i8* %521, i64 2
  %522 = load i8, i8* %arrayidx963, align 1
  %conv964 = zext i8 %522 to i32
  %cmp965 = icmp sle i32 161, %conv964
  br i1 %cmp965, label %land.rhs967, label %land.end972

land.rhs967:                                      ; preds = %lor.rhs962
  %523 = load i8*, i8** %scan, align 8
  %arrayidx968 = getelementptr inbounds i8, i8* %523, i64 2
  %524 = load i8, i8* %arrayidx968, align 1
  %conv969 = zext i8 %524 to i32
  %cmp970 = icmp sle i32 %conv969, 166
  br label %land.end972

land.end972:                                      ; preds = %land.rhs967, %lor.rhs962
  %525 = phi i1 [ false, %lor.rhs962 ], [ %cmp970, %land.rhs967 ]
  br label %lor.end973

lor.end973:                                       ; preds = %land.end972, %land.lhs.true957
  %526 = phi i1 [ true, %land.lhs.true957 ], [ %525, %land.end972 ]
  %527 = zext i1 %526 to i64
  %cond974 = select i1 %526, i32 3, i32 0
  br label %cond.end993

cond.false975:                                    ; preds = %cond.true947
  %528 = load i8*, i8** %scan, align 8
  %arrayidx976 = getelementptr inbounds i8, i8* %528, i64 1
  %529 = load i8, i8* %arrayidx976, align 1
  %conv977 = zext i8 %529 to i32
  %cmp978 = icmp eq i32 189, %conv977
  br i1 %cmp978, label %land.rhs980, label %land.end991

land.rhs980:                                      ; preds = %cond.false975
  %530 = load i8*, i8** %scan, align 8
  %arrayidx981 = getelementptr inbounds i8, i8* %530, i64 2
  %531 = load i8, i8* %arrayidx981, align 1
  %conv982 = zext i8 %531 to i32
  %cmp983 = icmp sle i32 129, %conv982
  br i1 %cmp983, label %land.rhs985, label %land.end990

land.rhs985:                                      ; preds = %land.rhs980
  %532 = load i8*, i8** %scan, align 8
  %arrayidx986 = getelementptr inbounds i8, i8* %532, i64 2
  %533 = load i8, i8* %arrayidx986, align 1
  %conv987 = zext i8 %533 to i32
  %cmp988 = icmp sle i32 %conv987, 134
  br label %land.end990

land.end990:                                      ; preds = %land.rhs985, %land.rhs980
  %534 = phi i1 [ false, %land.rhs980 ], [ %cmp988, %land.rhs985 ]
  br label %land.end991

land.end991:                                      ; preds = %land.end990, %cond.false975
  %535 = phi i1 [ false, %cond.false975 ], [ %534, %land.end990 ]
  %536 = zext i1 %535 to i64
  %cond992 = select i1 %535, i32 3, i32 0
  br label %cond.end993

cond.end993:                                      ; preds = %land.end991, %lor.end973
  %cond994 = phi i32 [ %cond974, %lor.end973 ], [ %cond992, %land.end991 ]
  br label %cond.end996

cond.false995:                                    ; preds = %cond.true942
  br label %cond.end996

cond.end996:                                      ; preds = %cond.false995, %cond.end993
  %cond997 = phi i32 [ %cond994, %cond.end993 ], [ 0, %cond.false995 ]
  br label %cond.end999

cond.false998:                                    ; preds = %cond.false938
  br label %cond.end999

cond.end999:                                      ; preds = %cond.false998, %cond.end996
  %cond1000 = phi i32 [ %cond997, %cond.end996 ], [ 0, %cond.false998 ]
  br label %cond.end1001

cond.end1001:                                     ; preds = %cond.end999, %cond.true932
  %cond1002 = phi i32 [ %cond937, %cond.true932 ], [ %cond1000, %cond.end999 ]
  %tobool1003 = icmp ne i32 %cond1002, 0
  %537 = zext i1 %tobool1003 to i64
  %cond1004 = select i1 %tobool1003, i32 1, i32 0
  %xor1005 = xor i32 %504, %cond1004
  %tobool1006 = icmp ne i32 %xor1005, 0
  br label %land.end1007

land.end1007:                                     ; preds = %cond.end1001, %land.lhs.true925, %while.cond922
  %538 = phi i1 [ false, %land.lhs.true925 ], [ false, %while.cond922 ], [ %tobool1006, %cond.end1001 ]
  br i1 %538, label %while.body1008, label %while.end1015

while.body1008:                                   ; preds = %land.end1007
  %539 = load i8*, i8** %scan, align 8
  %540 = load i8, i8* %539, align 1
  %idxprom1009 = zext i8 %540 to i64
  %arrayidx1010 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom1009
  %541 = load i8, i8* %arrayidx1010, align 1
  %conv1011 = zext i8 %541 to i32
  %542 = load i8*, i8** %scan, align 8
  %idx.ext1012 = sext i32 %conv1011 to i64
  %add.ptr1013 = getelementptr inbounds i8, i8* %542, i64 %idx.ext1012
  store i8* %add.ptr1013, i8** %scan, align 8
  %543 = load i32, i32* %hardcount, align 4
  %inc1014 = add nsw i32 %543, 1
  store i32 %inc1014, i32* %hardcount, align 4
  br label %while.cond922

while.end1015:                                    ; preds = %land.end1007
  br label %sw.epilog

sw.bb1016:                                        ; preds = %if.else636
  br label %while.cond1017

while.cond1017:                                   ; preds = %while.body1091, %sw.bb1016
  %544 = load i32, i32* %hardcount, align 4
  %545 = load i32, i32* %max.addr, align 4
  %cmp1018 = icmp slt i32 %544, %545
  br i1 %cmp1018, label %land.lhs.true1020, label %land.end1090

land.lhs.true1020:                                ; preds = %while.cond1017
  %546 = load i8*, i8** %scan, align 8
  %547 = load i8*, i8** %loceol, align 8
  %cmp1021 = icmp ult i8* %546, %547
  br i1 %cmp1021, label %land.rhs1023, label %land.end1090

land.rhs1023:                                     ; preds = %land.lhs.true1020
  %548 = load i32, i32* %to_complement, align 4
  %549 = load i8*, i8** %scan, align 8
  %550 = load i8, i8* %549, align 1
  %conv1024 = sext i8 %550 to i64
  %cmp1025 = icmp ult i64 %conv1024, 128
  br i1 %cmp1025, label %cond.true1027, label %cond.false1033

cond.true1027:                                    ; preds = %land.rhs1023
  %551 = load i8*, i8** %scan, align 8
  %552 = load i8, i8* %551, align 1
  %idxprom1028 = zext i8 %552 to i64
  %arrayidx1029 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom1028
  %553 = load i32, i32* %arrayidx1029, align 4
  %and1030 = and i32 %553, 32768
  %tobool1031 = icmp ne i32 %and1030, 0
  %554 = zext i1 %tobool1031 to i64
  %cond1032 = select i1 %tobool1031, i32 1, i32 0
  br label %cond.end1084

cond.false1033:                                   ; preds = %land.rhs1023
  %555 = load i8*, i8** %scan, align 8
  %556 = load i8, i8* %555, align 1
  %conv1034 = zext i8 %556 to i32
  %and1035 = and i32 %conv1034, 254
  %cmp1036 = icmp eq i32 %and1035, 194
  br i1 %cmp1036, label %cond.true1038, label %cond.false1064

cond.true1038:                                    ; preds = %cond.false1033
  %557 = load i8*, i8** %scan, align 8
  %558 = load i8, i8* %557, align 1
  %conv1039 = sext i8 %558 to i32
  %and1040 = and i32 %conv1039, 31
  %shl1041 = shl i32 %and1040, 6
  %559 = load i8*, i8** %scan, align 8
  %add.ptr1042 = getelementptr inbounds i8, i8* %559, i64 1
  %560 = load i8, i8* %add.ptr1042, align 1
  %conv1043 = zext i8 %560 to i32
  %and1044 = and i32 %conv1043, 63
  %or1045 = or i32 %shl1041, %and1044
  %conv1046 = sext i32 %or1045 to i64
  %and1047 = and i64 %conv1046, -256
  %tobool1048 = icmp ne i64 %and1047, 0
  br i1 %tobool1048, label %land.end1062, label %land.rhs1049

land.rhs1049:                                     ; preds = %cond.true1038
  %561 = load i8*, i8** %scan, align 8
  %562 = load i8, i8* %561, align 1
  %conv1050 = sext i8 %562 to i32
  %and1051 = and i32 %conv1050, 31
  %shl1052 = shl i32 %and1051, 6
  %563 = load i8*, i8** %scan, align 8
  %add.ptr1053 = getelementptr inbounds i8, i8* %563, i64 1
  %564 = load i8, i8* %add.ptr1053, align 1
  %conv1054 = zext i8 %564 to i32
  %and1055 = and i32 %conv1054, 63
  %or1056 = or i32 %shl1052, %and1055
  %conv1057 = trunc i32 %or1056 to i8
  %idxprom1058 = zext i8 %conv1057 to i64
  %arrayidx1059 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom1058
  %565 = load i32, i32* %arrayidx1059, align 4
  %and1060 = and i32 %565, 32768
  %tobool1061 = icmp ne i32 %and1060, 0
  br label %land.end1062

land.end1062:                                     ; preds = %land.rhs1049, %cond.true1038
  %566 = phi i1 [ false, %cond.true1038 ], [ %tobool1061, %land.rhs1049 ]
  %567 = zext i1 %566 to i64
  %cond1063 = select i1 %566, i32 1, i32 0
  br label %cond.end1082

cond.false1064:                                   ; preds = %cond.false1033
  %568 = load i8*, i8** %scan, align 8
  %arrayidx1065 = getelementptr inbounds i8, i8* %568, i64 0
  %569 = load i8, i8* %arrayidx1065, align 1
  %conv1066 = zext i8 %569 to i32
  %cmp1067 = icmp eq i32 226, %conv1066
  br i1 %cmp1067, label %land.lhs.true1069, label %land.end1080

land.lhs.true1069:                                ; preds = %cond.false1064
  %570 = load i8*, i8** %scan, align 8
  %arrayidx1070 = getelementptr inbounds i8, i8* %570, i64 1
  %571 = load i8, i8* %arrayidx1070, align 1
  %conv1071 = zext i8 %571 to i32
  %cmp1072 = icmp eq i32 128, %conv1071
  br i1 %cmp1072, label %land.rhs1074, label %land.end1080

land.rhs1074:                                     ; preds = %land.lhs.true1069
  %572 = load i8*, i8** %scan, align 8
  %arrayidx1075 = getelementptr inbounds i8, i8* %572, i64 2
  %573 = load i8, i8* %arrayidx1075, align 1
  %conv1076 = zext i8 %573 to i32
  %and1077 = and i32 %conv1076, 254
  %cmp1078 = icmp eq i32 %and1077, 168
  br label %land.end1080

land.end1080:                                     ; preds = %land.rhs1074, %land.lhs.true1069, %cond.false1064
  %574 = phi i1 [ false, %land.lhs.true1069 ], [ false, %cond.false1064 ], [ %cmp1078, %land.rhs1074 ]
  %575 = zext i1 %574 to i64
  %cond1081 = select i1 %574, i32 3, i32 0
  br label %cond.end1082

cond.end1082:                                     ; preds = %land.end1080, %land.end1062
  %cond1083 = phi i32 [ %cond1063, %land.end1062 ], [ %cond1081, %land.end1080 ]
  br label %cond.end1084

cond.end1084:                                     ; preds = %cond.end1082, %cond.true1027
  %cond1085 = phi i32 [ %cond1032, %cond.true1027 ], [ %cond1083, %cond.end1082 ]
  %tobool1086 = icmp ne i32 %cond1085, 0
  %576 = zext i1 %tobool1086 to i64
  %cond1087 = select i1 %tobool1086, i32 1, i32 0
  %xor1088 = xor i32 %548, %cond1087
  %tobool1089 = icmp ne i32 %xor1088, 0
  br label %land.end1090

land.end1090:                                     ; preds = %cond.end1084, %land.lhs.true1020, %while.cond1017
  %577 = phi i1 [ false, %land.lhs.true1020 ], [ false, %while.cond1017 ], [ %tobool1089, %cond.end1084 ]
  br i1 %577, label %while.body1091, label %while.end1098

while.body1091:                                   ; preds = %land.end1090
  %578 = load i8*, i8** %scan, align 8
  %579 = load i8, i8* %578, align 1
  %idxprom1092 = zext i8 %579 to i64
  %arrayidx1093 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom1092
  %580 = load i8, i8* %arrayidx1093, align 1
  %conv1094 = zext i8 %580 to i32
  %581 = load i8*, i8** %scan, align 8
  %idx.ext1095 = sext i32 %conv1094 to i64
  %add.ptr1096 = getelementptr inbounds i8, i8* %581, i64 %idx.ext1095
  store i8* %add.ptr1096, i8** %scan, align 8
  %582 = load i32, i32* %hardcount, align 4
  %inc1097 = add nsw i32 %582, 1
  store i32 %inc1097, i32* %hardcount, align 4
  br label %while.cond1017

while.end1098:                                    ; preds = %land.end1090
  br label %sw.epilog

sw.bb1099:                                        ; preds = %if.else636
  br label %while.cond1100

while.cond1100:                                   ; preds = %while.body1157, %sw.bb1099
  %583 = load i32, i32* %hardcount, align 4
  %584 = load i32, i32* %max.addr, align 4
  %cmp1101 = icmp slt i32 %583, %584
  br i1 %cmp1101, label %land.lhs.true1103, label %land.end1156

land.lhs.true1103:                                ; preds = %while.cond1100
  %585 = load i8*, i8** %scan, align 8
  %586 = load i8*, i8** %loceol, align 8
  %cmp1104 = icmp ult i8* %585, %586
  br i1 %cmp1104, label %land.rhs1106, label %land.end1156

land.rhs1106:                                     ; preds = %land.lhs.true1103
  %587 = load i32, i32* %to_complement, align 4
  %588 = load i8*, i8** %scan, align 8
  %589 = load i8, i8* %588, align 1
  %conv1107 = sext i8 %589 to i64
  %cmp1108 = icmp ult i64 %conv1107, 128
  br i1 %cmp1108, label %cond.true1110, label %cond.false1116

cond.true1110:                                    ; preds = %land.rhs1106
  %590 = load i8*, i8** %scan, align 8
  %591 = load i8, i8* %590, align 1
  %idxprom1111 = zext i8 %591 to i64
  %arrayidx1112 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom1111
  %592 = load i32, i32* %arrayidx1112, align 4
  %and1113 = and i32 %592, 8192
  %tobool1114 = icmp ne i32 %and1113, 0
  %593 = zext i1 %tobool1114 to i64
  %cond1115 = select i1 %tobool1114, i32 1, i32 0
  br label %cond.end1150

cond.false1116:                                   ; preds = %land.rhs1106
  %594 = load i8*, i8** %scan, align 8
  %595 = load i8, i8* %594, align 1
  %conv1117 = zext i8 %595 to i32
  %and1118 = and i32 %conv1117, 254
  %cmp1119 = icmp eq i32 %and1118, 194
  br i1 %cmp1119, label %cond.true1121, label %cond.false1147

cond.true1121:                                    ; preds = %cond.false1116
  %596 = load i8*, i8** %scan, align 8
  %597 = load i8, i8* %596, align 1
  %conv1122 = sext i8 %597 to i32
  %and1123 = and i32 %conv1122, 31
  %shl1124 = shl i32 %and1123, 6
  %598 = load i8*, i8** %scan, align 8
  %add.ptr1125 = getelementptr inbounds i8, i8* %598, i64 1
  %599 = load i8, i8* %add.ptr1125, align 1
  %conv1126 = zext i8 %599 to i32
  %and1127 = and i32 %conv1126, 63
  %or1128 = or i32 %shl1124, %and1127
  %conv1129 = sext i32 %or1128 to i64
  %and1130 = and i64 %conv1129, -256
  %tobool1131 = icmp ne i64 %and1130, 0
  br i1 %tobool1131, label %land.end1145, label %land.rhs1132

land.rhs1132:                                     ; preds = %cond.true1121
  %600 = load i8*, i8** %scan, align 8
  %601 = load i8, i8* %600, align 1
  %conv1133 = sext i8 %601 to i32
  %and1134 = and i32 %conv1133, 31
  %shl1135 = shl i32 %and1134, 6
  %602 = load i8*, i8** %scan, align 8
  %add.ptr1136 = getelementptr inbounds i8, i8* %602, i64 1
  %603 = load i8, i8* %add.ptr1136, align 1
  %conv1137 = zext i8 %603 to i32
  %and1138 = and i32 %conv1137, 63
  %or1139 = or i32 %shl1135, %and1138
  %conv1140 = trunc i32 %or1139 to i8
  %idxprom1141 = zext i8 %conv1140 to i64
  %arrayidx1142 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom1141
  %604 = load i32, i32* %arrayidx1142, align 4
  %and1143 = and i32 %604, 8192
  %tobool1144 = icmp ne i32 %and1143, 0
  br label %land.end1145

land.end1145:                                     ; preds = %land.rhs1132, %cond.true1121
  %605 = phi i1 [ false, %cond.true1121 ], [ %tobool1144, %land.rhs1132 ]
  %606 = zext i1 %605 to i64
  %cond1146 = select i1 %605, i32 1, i32 0
  br label %cond.end1148

cond.false1147:                                   ; preds = %cond.false1116
  br label %cond.end1148

cond.end1148:                                     ; preds = %cond.false1147, %land.end1145
  %cond1149 = phi i32 [ %cond1146, %land.end1145 ], [ 0, %cond.false1147 ]
  br label %cond.end1150

cond.end1150:                                     ; preds = %cond.end1148, %cond.true1110
  %cond1151 = phi i32 [ %cond1115, %cond.true1110 ], [ %cond1149, %cond.end1148 ]
  %tobool1152 = icmp ne i32 %cond1151, 0
  %607 = zext i1 %tobool1152 to i64
  %cond1153 = select i1 %tobool1152, i32 1, i32 0
  %xor1154 = xor i32 %587, %cond1153
  %tobool1155 = icmp ne i32 %xor1154, 0
  br label %land.end1156

land.end1156:                                     ; preds = %cond.end1150, %land.lhs.true1103, %while.cond1100
  %608 = phi i1 [ false, %land.lhs.true1103 ], [ false, %while.cond1100 ], [ %tobool1155, %cond.end1150 ]
  br i1 %608, label %while.body1157, label %while.end1164

while.body1157:                                   ; preds = %land.end1156
  %609 = load i8*, i8** %scan, align 8
  %610 = load i8, i8* %609, align 1
  %idxprom1158 = zext i8 %610 to i64
  %arrayidx1159 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom1158
  %611 = load i8, i8* %arrayidx1159, align 1
  %conv1160 = zext i8 %611 to i32
  %612 = load i8*, i8** %scan, align 8
  %idx.ext1161 = sext i32 %conv1160 to i64
  %add.ptr1162 = getelementptr inbounds i8, i8* %612, i64 %idx.ext1161
  store i8* %add.ptr1162, i8** %scan, align 8
  %613 = load i32, i32* %hardcount, align 4
  %inc1163 = add nsw i32 %613, 1
  store i32 %inc1163, i32* %hardcount, align 4
  br label %while.cond1100

while.end1164:                                    ; preds = %land.end1156
  br label %sw.epilog

sw.default:                                       ; preds = %if.else636
  %614 = load %struct.regnode*, %struct.regnode** %p.addr, align 8
  %type1165 = getelementptr inbounds %struct.regnode, %struct.regnode* %614, i32 0, i32 1
  %615 = load i8, i8* %type1165, align 1
  %conv1166 = zext i8 %615 to i32
  %616 = load %struct.regnode*, %struct.regnode** %p.addr, align 8
  %type1167 = getelementptr inbounds %struct.regnode, %struct.regnode* %616, i32 0, i32 1
  %617 = load i8, i8* %type1167, align 1
  %idxprom1168 = zext i8 %617 to i64
  %arrayidx1169 = getelementptr inbounds [0 x i8*], [0 x i8*]* @PL_reg_name, i64 0, i64 %idxprom1168
  %618 = load i8*, i8** %arrayidx1169, align 8
  %619 = load i32, i32* %classnum, align 4
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.23, i64 0, i64 0), i32 %conv1166, i8* %618, i32 %619)
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %while.end1164, %while.end1098, %while.end1015, %while.end920, %while.end781
  br label %if.end1170

if.end1170:                                       ; preds = %sw.epilog, %while.end635
  br label %if.end1171

if.end1171:                                       ; preds = %if.end1170, %while.end560
  br label %sw.epilog1490

found_above_latin1:                               ; preds = %if.else631
  %620 = load i32, i32* %classnum, align 4
  %idxprom1172 = zext i32 %620 to i64
  %arrayidx1173 = getelementptr inbounds [10 x %struct.sv*], [10 x %struct.sv*]* @PL_utf8_swash_ptrs, i64 0, i64 %idxprom1172
  %621 = load %struct.sv*, %struct.sv** %arrayidx1173, align 8
  %tobool1174 = icmp ne %struct.sv* %621, null
  br i1 %tobool1174, label %if.end1182, label %if.then1175

if.then1175:                                      ; preds = %found_above_latin1
  store i8 4, i8* %flags1176, align 1
  %622 = load i32, i32* %classnum, align 4
  %idxprom1177 = zext i32 %622 to i64
  %arrayidx1178 = getelementptr inbounds [16 x %struct.sv*], [16 x %struct.sv*]* @PL_XPosix_ptrs, i64 0, i64 %idxprom1177
  %623 = load %struct.sv*, %struct.sv** %arrayidx1178, align 8
  %call1179 = call %struct.sv* @Perl__core_swash_init(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.4, i64 0, i64 0), %struct.sv* @PL_sv_undef, i32 1, i32 0, %struct.sv* %623, i8* %flags1176)
  %624 = load i32, i32* %classnum, align 4
  %idxprom1180 = zext i32 %624 to i64
  %arrayidx1181 = getelementptr inbounds [10 x %struct.sv*], [10 x %struct.sv*]* @PL_utf8_swash_ptrs, i64 0, i64 %idxprom1180
  store %struct.sv* %call1179, %struct.sv** %arrayidx1181, align 8
  br label %if.end1182

if.end1182:                                       ; preds = %if.then1175, %found_above_latin1
  br label %while.cond1183

while.cond1183:                                   ; preds = %while.body1247, %if.end1182
  %625 = load i32, i32* %hardcount, align 4
  %626 = load i32, i32* %max.addr, align 4
  %cmp1184 = icmp slt i32 %625, %626
  br i1 %cmp1184, label %land.lhs.true1186, label %land.end1246

land.lhs.true1186:                                ; preds = %while.cond1183
  %627 = load i8*, i8** %scan, align 8
  %628 = load i8*, i8** %loceol, align 8
  %cmp1187 = icmp ult i8* %627, %628
  br i1 %cmp1187, label %land.rhs1189, label %land.end1246

land.rhs1189:                                     ; preds = %land.lhs.true1186
  %629 = load i32, i32* %to_complement, align 4
  %630 = load i8*, i8** %scan, align 8
  %631 = load i8, i8* %630, align 1
  %conv1190 = sext i8 %631 to i64
  %cmp1191 = icmp ult i64 %conv1190, 128
  br i1 %cmp1191, label %cond.true1193, label %cond.false1201

cond.true1193:                                    ; preds = %land.rhs1189
  %632 = load i8*, i8** %scan, align 8
  %633 = load i8, i8* %632, align 1
  %idxprom1194 = zext i8 %633 to i64
  %arrayidx1195 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom1194
  %634 = load i32, i32* %arrayidx1195, align 4
  %635 = load i32, i32* %classnum, align 4
  %shl1196 = shl i32 1, %635
  %and1197 = and i32 %634, %shl1196
  %tobool1198 = icmp ne i32 %and1197, 0
  %636 = zext i1 %tobool1198 to i64
  %cond1199 = select i1 %tobool1198, i32 1, i32 0
  %conv1200 = sext i32 %cond1199 to i64
  br label %cond.end1240

cond.false1201:                                   ; preds = %land.rhs1189
  %637 = load i8*, i8** %scan, align 8
  %638 = load i8, i8* %637, align 1
  %conv1202 = zext i8 %638 to i32
  %and1203 = and i32 %conv1202, 254
  %cmp1204 = icmp eq i32 %and1203, 194
  br i1 %cmp1204, label %cond.true1206, label %cond.false1234

cond.true1206:                                    ; preds = %cond.false1201
  %639 = load i8*, i8** %scan, align 8
  %640 = load i8, i8* %639, align 1
  %conv1207 = sext i8 %640 to i32
  %and1208 = and i32 %conv1207, 31
  %shl1209 = shl i32 %and1208, 6
  %641 = load i8*, i8** %scan, align 8
  %add.ptr1210 = getelementptr inbounds i8, i8* %641, i64 1
  %642 = load i8, i8* %add.ptr1210, align 1
  %conv1211 = zext i8 %642 to i32
  %and1212 = and i32 %conv1211, 63
  %or1213 = or i32 %shl1209, %and1212
  %conv1214 = sext i32 %or1213 to i64
  %and1215 = and i64 %conv1214, -256
  %tobool1216 = icmp ne i64 %and1215, 0
  br i1 %tobool1216, label %land.end1231, label %land.rhs1217

land.rhs1217:                                     ; preds = %cond.true1206
  %643 = load i8*, i8** %scan, align 8
  %644 = load i8, i8* %643, align 1
  %conv1218 = sext i8 %644 to i32
  %and1219 = and i32 %conv1218, 31
  %shl1220 = shl i32 %and1219, 6
  %645 = load i8*, i8** %scan, align 8
  %add.ptr1221 = getelementptr inbounds i8, i8* %645, i64 1
  %646 = load i8, i8* %add.ptr1221, align 1
  %conv1222 = zext i8 %646 to i32
  %and1223 = and i32 %conv1222, 63
  %or1224 = or i32 %shl1220, %and1223
  %conv1225 = trunc i32 %or1224 to i8
  %idxprom1226 = zext i8 %conv1225 to i64
  %arrayidx1227 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom1226
  %647 = load i32, i32* %arrayidx1227, align 4
  %648 = load i32, i32* %classnum, align 4
  %shl1228 = shl i32 1, %648
  %and1229 = and i32 %647, %shl1228
  %tobool1230 = icmp ne i32 %and1229, 0
  br label %land.end1231

land.end1231:                                     ; preds = %land.rhs1217, %cond.true1206
  %649 = phi i1 [ false, %cond.true1206 ], [ %tobool1230, %land.rhs1217 ]
  %650 = zext i1 %649 to i64
  %cond1232 = select i1 %649, i32 1, i32 0
  %conv1233 = sext i32 %cond1232 to i64
  br label %cond.end1238

cond.false1234:                                   ; preds = %cond.false1201
  %651 = load i32, i32* %classnum, align 4
  %idxprom1235 = zext i32 %651 to i64
  %arrayidx1236 = getelementptr inbounds [10 x %struct.sv*], [10 x %struct.sv*]* @PL_utf8_swash_ptrs, i64 0, i64 %idxprom1235
  %652 = load %struct.sv*, %struct.sv** %arrayidx1236, align 8
  %653 = load i8*, i8** %scan, align 8
  %call1237 = call i64 @Perl_swash_fetch(%struct.sv* %652, i8* %653, i1 zeroext true)
  br label %cond.end1238

cond.end1238:                                     ; preds = %cond.false1234, %land.end1231
  %cond1239 = phi i64 [ %conv1233, %land.end1231 ], [ %call1237, %cond.false1234 ]
  br label %cond.end1240

cond.end1240:                                     ; preds = %cond.end1238, %cond.true1193
  %cond1241 = phi i64 [ %conv1200, %cond.true1193 ], [ %cond1239, %cond.end1238 ]
  %tobool1242 = icmp ne i64 %cond1241, 0
  %654 = zext i1 %tobool1242 to i64
  %cond1243 = select i1 %tobool1242, i32 1, i32 0
  %xor1244 = xor i32 %629, %cond1243
  %tobool1245 = icmp ne i32 %xor1244, 0
  br label %land.end1246

land.end1246:                                     ; preds = %cond.end1240, %land.lhs.true1186, %while.cond1183
  %655 = phi i1 [ false, %land.lhs.true1186 ], [ false, %while.cond1183 ], [ %tobool1245, %cond.end1240 ]
  br i1 %655, label %while.body1247, label %while.end1254

while.body1247:                                   ; preds = %land.end1246
  %656 = load i8*, i8** %scan, align 8
  %657 = load i8, i8* %656, align 1
  %idxprom1248 = zext i8 %657 to i64
  %arrayidx1249 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom1248
  %658 = load i8, i8* %arrayidx1249, align 1
  %conv1250 = zext i8 %658 to i32
  %659 = load i8*, i8** %scan, align 8
  %idx.ext1251 = sext i32 %conv1250 to i64
  %add.ptr1252 = getelementptr inbounds i8, i8* %659, i64 %idx.ext1251
  store i8* %add.ptr1252, i8** %scan, align 8
  %660 = load i32, i32* %hardcount, align 4
  %inc1253 = add nsw i32 %660, 1
  store i32 %inc1253, i32* %hardcount, align 4
  br label %while.cond1183

while.end1254:                                    ; preds = %land.end1246
  br label %sw.epilog1490

sw.bb1255:                                        ; preds = %if.end5
  %661 = load i8, i8* %utf8_target, align 1
  %tobool1256 = trunc i8 %661 to i1
  br i1 %tobool1256, label %if.then1257, label %if.else1403

if.then1257:                                      ; preds = %sw.bb1255
  br label %while.cond1258

while.cond1258:                                   ; preds = %while.body1398, %if.then1257
  %662 = load i32, i32* %hardcount, align 4
  %663 = load i32, i32* %max.addr, align 4
  %cmp1259 = icmp slt i32 %662, %663
  br i1 %cmp1259, label %land.lhs.true1261, label %land.end1396

land.lhs.true1261:                                ; preds = %while.cond1258
  %664 = load i8*, i8** %scan, align 8
  %665 = load i8*, i8** %loceol, align 8
  %cmp1262 = icmp ult i8* %664, %665
  br i1 %cmp1262, label %land.rhs1264, label %land.end1396

land.rhs1264:                                     ; preds = %land.lhs.true1261
  %666 = load i8*, i8** %loceol, align 8
  %667 = load i8*, i8** %scan, align 8
  %sub.ptr.lhs.cast1265 = ptrtoint i8* %666 to i64
  %sub.ptr.rhs.cast1266 = ptrtoint i8* %667 to i64
  %sub.ptr.sub1267 = sub i64 %sub.ptr.lhs.cast1265, %sub.ptr.rhs.cast1266
  %cmp1268 = icmp sgt i64 %sub.ptr.sub1267, 2
  br i1 %cmp1268, label %cond.true1270, label %cond.false1327

cond.true1270:                                    ; preds = %land.rhs1264
  %668 = load i8*, i8** %scan, align 8
  %arrayidx1271 = getelementptr inbounds i8, i8* %668, i64 0
  %669 = load i8, i8* %arrayidx1271, align 1
  %conv1272 = zext i8 %669 to i32
  %cmp1273 = icmp sle i32 10, %conv1272
  br i1 %cmp1273, label %land.lhs.true1275, label %cond.false1281

land.lhs.true1275:                                ; preds = %cond.true1270
  %670 = load i8*, i8** %scan, align 8
  %arrayidx1276 = getelementptr inbounds i8, i8* %670, i64 0
  %671 = load i8, i8* %arrayidx1276, align 1
  %conv1277 = zext i8 %671 to i32
  %cmp1278 = icmp sle i32 %conv1277, 12
  br i1 %cmp1278, label %cond.true1280, label %cond.false1281

cond.true1280:                                    ; preds = %land.lhs.true1275
  br label %cond.end1325

cond.false1281:                                   ; preds = %land.lhs.true1275, %cond.true1270
  %672 = load i8*, i8** %scan, align 8
  %arrayidx1282 = getelementptr inbounds i8, i8* %672, i64 0
  %673 = load i8, i8* %arrayidx1282, align 1
  %conv1283 = zext i8 %673 to i32
  %cmp1284 = icmp eq i32 13, %conv1283
  br i1 %cmp1284, label %cond.true1286, label %cond.false1292

cond.true1286:                                    ; preds = %cond.false1281
  %674 = load i8*, i8** %scan, align 8
  %arrayidx1287 = getelementptr inbounds i8, i8* %674, i64 1
  %675 = load i8, i8* %arrayidx1287, align 1
  %conv1288 = zext i8 %675 to i32
  %cmp1289 = icmp eq i32 10, %conv1288
  %676 = zext i1 %cmp1289 to i64
  %cond1291 = select i1 %cmp1289, i32 2, i32 1
  br label %cond.end1323

cond.false1292:                                   ; preds = %cond.false1281
  %677 = load i8*, i8** %scan, align 8
  %arrayidx1293 = getelementptr inbounds i8, i8* %677, i64 0
  %678 = load i8, i8* %arrayidx1293, align 1
  %conv1294 = zext i8 %678 to i32
  %cmp1295 = icmp eq i32 194, %conv1294
  br i1 %cmp1295, label %cond.true1297, label %cond.false1303

cond.true1297:                                    ; preds = %cond.false1292
  %679 = load i8*, i8** %scan, align 8
  %arrayidx1298 = getelementptr inbounds i8, i8* %679, i64 1
  %680 = load i8, i8* %arrayidx1298, align 1
  %conv1299 = zext i8 %680 to i32
  %cmp1300 = icmp eq i32 133, %conv1299
  %681 = zext i1 %cmp1300 to i64
  %cond1302 = select i1 %cmp1300, i32 2, i32 0
  br label %cond.end1321

cond.false1303:                                   ; preds = %cond.false1292
  %682 = load i8*, i8** %scan, align 8
  %arrayidx1304 = getelementptr inbounds i8, i8* %682, i64 0
  %683 = load i8, i8* %arrayidx1304, align 1
  %conv1305 = zext i8 %683 to i32
  %cmp1306 = icmp eq i32 226, %conv1305
  br i1 %cmp1306, label %land.lhs.true1308, label %land.end1319

land.lhs.true1308:                                ; preds = %cond.false1303
  %684 = load i8*, i8** %scan, align 8
  %arrayidx1309 = getelementptr inbounds i8, i8* %684, i64 1
  %685 = load i8, i8* %arrayidx1309, align 1
  %conv1310 = zext i8 %685 to i32
  %cmp1311 = icmp eq i32 128, %conv1310
  br i1 %cmp1311, label %land.rhs1313, label %land.end1319

land.rhs1313:                                     ; preds = %land.lhs.true1308
  %686 = load i8*, i8** %scan, align 8
  %arrayidx1314 = getelementptr inbounds i8, i8* %686, i64 2
  %687 = load i8, i8* %arrayidx1314, align 1
  %conv1315 = zext i8 %687 to i32
  %and1316 = and i32 %conv1315, 254
  %cmp1317 = icmp eq i32 %and1316, 168
  br label %land.end1319

land.end1319:                                     ; preds = %land.rhs1313, %land.lhs.true1308, %cond.false1303
  %688 = phi i1 [ false, %land.lhs.true1308 ], [ false, %cond.false1303 ], [ %cmp1317, %land.rhs1313 ]
  %689 = zext i1 %688 to i64
  %cond1320 = select i1 %688, i32 3, i32 0
  br label %cond.end1321

cond.end1321:                                     ; preds = %land.end1319, %cond.true1297
  %cond1322 = phi i32 [ %cond1302, %cond.true1297 ], [ %cond1320, %land.end1319 ]
  br label %cond.end1323

cond.end1323:                                     ; preds = %cond.end1321, %cond.true1286
  %cond1324 = phi i32 [ %cond1291, %cond.true1286 ], [ %cond1322, %cond.end1321 ]
  br label %cond.end1325

cond.end1325:                                     ; preds = %cond.end1323, %cond.true1280
  %cond1326 = phi i32 [ 1, %cond.true1280 ], [ %cond1324, %cond.end1323 ]
  br label %cond.end1393

cond.false1327:                                   ; preds = %land.rhs1264
  %690 = load i8*, i8** %loceol, align 8
  %691 = load i8*, i8** %scan, align 8
  %sub.ptr.lhs.cast1328 = ptrtoint i8* %690 to i64
  %sub.ptr.rhs.cast1329 = ptrtoint i8* %691 to i64
  %sub.ptr.sub1330 = sub i64 %sub.ptr.lhs.cast1328, %sub.ptr.rhs.cast1329
  %cmp1331 = icmp sgt i64 %sub.ptr.sub1330, 1
  br i1 %cmp1331, label %cond.true1333, label %cond.false1371

cond.true1333:                                    ; preds = %cond.false1327
  %692 = load i8*, i8** %scan, align 8
  %arrayidx1334 = getelementptr inbounds i8, i8* %692, i64 0
  %693 = load i8, i8* %arrayidx1334, align 1
  %conv1335 = zext i8 %693 to i32
  %cmp1336 = icmp sle i32 10, %conv1335
  br i1 %cmp1336, label %land.lhs.true1338, label %cond.false1344

land.lhs.true1338:                                ; preds = %cond.true1333
  %694 = load i8*, i8** %scan, align 8
  %arrayidx1339 = getelementptr inbounds i8, i8* %694, i64 0
  %695 = load i8, i8* %arrayidx1339, align 1
  %conv1340 = zext i8 %695 to i32
  %cmp1341 = icmp sle i32 %conv1340, 12
  br i1 %cmp1341, label %cond.true1343, label %cond.false1344

cond.true1343:                                    ; preds = %land.lhs.true1338
  br label %cond.end1369

cond.false1344:                                   ; preds = %land.lhs.true1338, %cond.true1333
  %696 = load i8*, i8** %scan, align 8
  %arrayidx1345 = getelementptr inbounds i8, i8* %696, i64 0
  %697 = load i8, i8* %arrayidx1345, align 1
  %conv1346 = zext i8 %697 to i32
  %cmp1347 = icmp eq i32 13, %conv1346
  br i1 %cmp1347, label %cond.true1349, label %cond.false1355

cond.true1349:                                    ; preds = %cond.false1344
  %698 = load i8*, i8** %scan, align 8
  %arrayidx1350 = getelementptr inbounds i8, i8* %698, i64 1
  %699 = load i8, i8* %arrayidx1350, align 1
  %conv1351 = zext i8 %699 to i32
  %cmp1352 = icmp eq i32 10, %conv1351
  %700 = zext i1 %cmp1352 to i64
  %cond1354 = select i1 %cmp1352, i32 2, i32 1
  br label %cond.end1367

cond.false1355:                                   ; preds = %cond.false1344
  %701 = load i8*, i8** %scan, align 8
  %arrayidx1356 = getelementptr inbounds i8, i8* %701, i64 0
  %702 = load i8, i8* %arrayidx1356, align 1
  %conv1357 = zext i8 %702 to i32
  %cmp1358 = icmp eq i32 194, %conv1357
  br i1 %cmp1358, label %land.rhs1360, label %land.end1365

land.rhs1360:                                     ; preds = %cond.false1355
  %703 = load i8*, i8** %scan, align 8
  %arrayidx1361 = getelementptr inbounds i8, i8* %703, i64 1
  %704 = load i8, i8* %arrayidx1361, align 1
  %conv1362 = zext i8 %704 to i32
  %cmp1363 = icmp eq i32 133, %conv1362
  br label %land.end1365

land.end1365:                                     ; preds = %land.rhs1360, %cond.false1355
  %705 = phi i1 [ false, %cond.false1355 ], [ %cmp1363, %land.rhs1360 ]
  %706 = zext i1 %705 to i64
  %cond1366 = select i1 %705, i32 2, i32 0
  br label %cond.end1367

cond.end1367:                                     ; preds = %land.end1365, %cond.true1349
  %cond1368 = phi i32 [ %cond1354, %cond.true1349 ], [ %cond1366, %land.end1365 ]
  br label %cond.end1369

cond.end1369:                                     ; preds = %cond.end1367, %cond.true1343
  %cond1370 = phi i32 [ 1, %cond.true1343 ], [ %cond1368, %cond.end1367 ]
  br label %cond.end1391

cond.false1371:                                   ; preds = %cond.false1327
  %707 = load i8*, i8** %loceol, align 8
  %708 = load i8*, i8** %scan, align 8
  %sub.ptr.lhs.cast1372 = ptrtoint i8* %707 to i64
  %sub.ptr.rhs.cast1373 = ptrtoint i8* %708 to i64
  %sub.ptr.sub1374 = sub i64 %sub.ptr.lhs.cast1372, %sub.ptr.rhs.cast1373
  %cmp1375 = icmp sgt i64 %sub.ptr.sub1374, 0
  br i1 %cmp1375, label %cond.true1377, label %cond.false1388

cond.true1377:                                    ; preds = %cond.false1371
  %709 = load i8*, i8** %scan, align 8
  %arrayidx1378 = getelementptr inbounds i8, i8* %709, i64 0
  %710 = load i8, i8* %arrayidx1378, align 1
  %conv1379 = zext i8 %710 to i32
  %cmp1380 = icmp sle i32 10, %conv1379
  br i1 %cmp1380, label %land.rhs1382, label %land.end1387

land.rhs1382:                                     ; preds = %cond.true1377
  %711 = load i8*, i8** %scan, align 8
  %arrayidx1383 = getelementptr inbounds i8, i8* %711, i64 0
  %712 = load i8, i8* %arrayidx1383, align 1
  %conv1384 = zext i8 %712 to i32
  %cmp1385 = icmp sle i32 %conv1384, 13
  br label %land.end1387

land.end1387:                                     ; preds = %land.rhs1382, %cond.true1377
  %713 = phi i1 [ false, %cond.true1377 ], [ %cmp1385, %land.rhs1382 ]
  %land.ext = zext i1 %713 to i32
  br label %cond.end1389

cond.false1388:                                   ; preds = %cond.false1371
  br label %cond.end1389

cond.end1389:                                     ; preds = %cond.false1388, %land.end1387
  %cond1390 = phi i32 [ %land.ext, %land.end1387 ], [ 0, %cond.false1388 ]
  br label %cond.end1391

cond.end1391:                                     ; preds = %cond.end1389, %cond.end1369
  %cond1392 = phi i32 [ %cond1370, %cond.end1369 ], [ %cond1390, %cond.end1389 ]
  br label %cond.end1393

cond.end1393:                                     ; preds = %cond.end1391, %cond.end1325
  %cond1394 = phi i32 [ %cond1326, %cond.end1325 ], [ %cond1392, %cond.end1391 ]
  store i32 %cond1394, i32* %c, align 4
  %tobool1395 = icmp ne i32 %cond1394, 0
  br label %land.end1396

land.end1396:                                     ; preds = %cond.end1393, %land.lhs.true1261, %while.cond1258
  %714 = phi i1 [ false, %land.lhs.true1261 ], [ false, %while.cond1258 ], [ %tobool1395, %cond.end1393 ]
  br i1 %714, label %while.body1398, label %while.end1402

while.body1398:                                   ; preds = %land.end1396
  %715 = load i32, i32* %c, align 4
  %716 = load i8*, i8** %scan, align 8
  %idx.ext1399 = sext i32 %715 to i64
  %add.ptr1400 = getelementptr inbounds i8, i8* %716, i64 %idx.ext1399
  store i8* %add.ptr1400, i8** %scan, align 8
  %717 = load i32, i32* %hardcount, align 4
  %inc1401 = add nsw i32 %717, 1
  store i32 %inc1401, i32* %hardcount, align 4
  br label %while.cond1258

while.end1402:                                    ; preds = %land.end1396
  br label %if.end1481

if.else1403:                                      ; preds = %sw.bb1255
  %718 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend1404 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %718, i32 0, i32 2
  %719 = load i8*, i8** %strend1404, align 8
  store i8* %719, i8** %loceol, align 8
  br label %while.cond1405

while.cond1405:                                   ; preds = %while.body1476, %if.else1403
  %720 = load i8*, i8** %scan, align 8
  %721 = load i8*, i8** %loceol, align 8
  %cmp1406 = icmp ult i8* %720, %721
  br i1 %cmp1406, label %land.rhs1408, label %land.end1474

land.rhs1408:                                     ; preds = %while.cond1405
  %722 = load i8*, i8** %loceol, align 8
  %723 = load i8*, i8** %scan, align 8
  %sub.ptr.lhs.cast1409 = ptrtoint i8* %722 to i64
  %sub.ptr.rhs.cast1410 = ptrtoint i8* %723 to i64
  %sub.ptr.sub1411 = sub i64 %sub.ptr.lhs.cast1409, %sub.ptr.rhs.cast1410
  %cmp1412 = icmp sgt i64 %sub.ptr.sub1411, 1
  br i1 %cmp1412, label %cond.true1414, label %cond.false1446

cond.true1414:                                    ; preds = %land.rhs1408
  %724 = load i8*, i8** %scan, align 8
  %arrayidx1415 = getelementptr inbounds i8, i8* %724, i64 0
  %725 = load i8, i8* %arrayidx1415, align 1
  %conv1416 = zext i8 %725 to i32
  %cmp1417 = icmp sle i32 10, %conv1416
  br i1 %cmp1417, label %land.lhs.true1419, label %lor.lhs.false1424

land.lhs.true1419:                                ; preds = %cond.true1414
  %726 = load i8*, i8** %scan, align 8
  %arrayidx1420 = getelementptr inbounds i8, i8* %726, i64 0
  %727 = load i8, i8* %arrayidx1420, align 1
  %conv1421 = zext i8 %727 to i32
  %cmp1422 = icmp sle i32 %conv1421, 12
  br i1 %cmp1422, label %cond.true1429, label %lor.lhs.false1424

lor.lhs.false1424:                                ; preds = %land.lhs.true1419, %cond.true1414
  %728 = load i8*, i8** %scan, align 8
  %arrayidx1425 = getelementptr inbounds i8, i8* %728, i64 0
  %729 = load i8, i8* %arrayidx1425, align 1
  %conv1426 = zext i8 %729 to i32
  %cmp1427 = icmp eq i32 133, %conv1426
  br i1 %cmp1427, label %cond.true1429, label %cond.false1430

cond.true1429:                                    ; preds = %lor.lhs.false1424, %land.lhs.true1419
  br label %cond.end1444

cond.false1430:                                   ; preds = %lor.lhs.false1424
  %730 = load i8*, i8** %scan, align 8
  %arrayidx1431 = getelementptr inbounds i8, i8* %730, i64 0
  %731 = load i8, i8* %arrayidx1431, align 1
  %conv1432 = zext i8 %731 to i32
  %cmp1433 = icmp eq i32 13, %conv1432
  br i1 %cmp1433, label %cond.true1435, label %cond.false1441

cond.true1435:                                    ; preds = %cond.false1430
  %732 = load i8*, i8** %scan, align 8
  %arrayidx1436 = getelementptr inbounds i8, i8* %732, i64 1
  %733 = load i8, i8* %arrayidx1436, align 1
  %conv1437 = zext i8 %733 to i32
  %cmp1438 = icmp eq i32 10, %conv1437
  %734 = zext i1 %cmp1438 to i64
  %cond1440 = select i1 %cmp1438, i32 2, i32 1
  br label %cond.end1442

cond.false1441:                                   ; preds = %cond.false1430
  br label %cond.end1442

cond.end1442:                                     ; preds = %cond.false1441, %cond.true1435
  %cond1443 = phi i32 [ %cond1440, %cond.true1435 ], [ 0, %cond.false1441 ]
  br label %cond.end1444

cond.end1444:                                     ; preds = %cond.end1442, %cond.true1429
  %cond1445 = phi i32 [ 1, %cond.true1429 ], [ %cond1443, %cond.end1442 ]
  br label %cond.end1471

cond.false1446:                                   ; preds = %land.rhs1408
  %735 = load i8*, i8** %loceol, align 8
  %736 = load i8*, i8** %scan, align 8
  %sub.ptr.lhs.cast1447 = ptrtoint i8* %735 to i64
  %sub.ptr.rhs.cast1448 = ptrtoint i8* %736 to i64
  %sub.ptr.sub1449 = sub i64 %sub.ptr.lhs.cast1447, %sub.ptr.rhs.cast1448
  %cmp1450 = icmp sgt i64 %sub.ptr.sub1449, 0
  br i1 %cmp1450, label %cond.true1452, label %cond.false1468

cond.true1452:                                    ; preds = %cond.false1446
  %737 = load i8*, i8** %scan, align 8
  %arrayidx1453 = getelementptr inbounds i8, i8* %737, i64 0
  %738 = load i8, i8* %arrayidx1453, align 1
  %conv1454 = zext i8 %738 to i32
  %cmp1455 = icmp sle i32 10, %conv1454
  br i1 %cmp1455, label %land.lhs.true1457, label %lor.rhs1462

land.lhs.true1457:                                ; preds = %cond.true1452
  %739 = load i8*, i8** %scan, align 8
  %arrayidx1458 = getelementptr inbounds i8, i8* %739, i64 0
  %740 = load i8, i8* %arrayidx1458, align 1
  %conv1459 = zext i8 %740 to i32
  %cmp1460 = icmp sle i32 %conv1459, 13
  br i1 %cmp1460, label %lor.end1467, label %lor.rhs1462

lor.rhs1462:                                      ; preds = %land.lhs.true1457, %cond.true1452
  %741 = load i8*, i8** %scan, align 8
  %arrayidx1463 = getelementptr inbounds i8, i8* %741, i64 0
  %742 = load i8, i8* %arrayidx1463, align 1
  %conv1464 = zext i8 %742 to i32
  %cmp1465 = icmp eq i32 133, %conv1464
  br label %lor.end1467

lor.end1467:                                      ; preds = %lor.rhs1462, %land.lhs.true1457
  %743 = phi i1 [ true, %land.lhs.true1457 ], [ %cmp1465, %lor.rhs1462 ]
  %lor.ext = zext i1 %743 to i32
  br label %cond.end1469

cond.false1468:                                   ; preds = %cond.false1446
  br label %cond.end1469

cond.end1469:                                     ; preds = %cond.false1468, %lor.end1467
  %cond1470 = phi i32 [ %lor.ext, %lor.end1467 ], [ 0, %cond.false1468 ]
  br label %cond.end1471

cond.end1471:                                     ; preds = %cond.end1469, %cond.end1444
  %cond1472 = phi i32 [ %cond1445, %cond.end1444 ], [ %cond1470, %cond.end1469 ]
  store i32 %cond1472, i32* %c, align 4
  %tobool1473 = icmp ne i32 %cond1472, 0
  br label %land.end1474

land.end1474:                                     ; preds = %cond.end1471, %while.cond1405
  %744 = phi i1 [ false, %while.cond1405 ], [ %tobool1473, %cond.end1471 ]
  br i1 %744, label %while.body1476, label %while.end1480

while.body1476:                                   ; preds = %land.end1474
  %745 = load i32, i32* %c, align 4
  %746 = load i8*, i8** %scan, align 8
  %idx.ext1477 = sext i32 %745 to i64
  %add.ptr1478 = getelementptr inbounds i8, i8* %746, i64 %idx.ext1477
  store i8* %add.ptr1478, i8** %scan, align 8
  %747 = load i32, i32* %hardcount, align 4
  %inc1479 = add nsw i32 %747, 1
  store i32 %inc1479, i32* %hardcount, align 4
  br label %while.cond1405

while.end1480:                                    ; preds = %land.end1474
  br label %if.end1481

if.end1481:                                       ; preds = %while.end1480, %while.end1402
  br label %sw.epilog1490

sw.bb1482:                                        ; preds = %if.end5, %if.end5
  br label %sw.bb1483

sw.bb1483:                                        ; preds = %if.end5, %if.end5, %if.end5, %if.end5, %if.end5, %if.end5, %if.end5, %if.end5, %if.end5, %if.end5, %if.end5, %if.end5, %sw.bb1482
  br label %sw.epilog1490

sw.default1484:                                   ; preds = %if.end5
  %748 = load %struct.regnode*, %struct.regnode** %p.addr, align 8
  %type1485 = getelementptr inbounds %struct.regnode, %struct.regnode* %748, i32 0, i32 1
  %749 = load i8, i8* %type1485, align 1
  %conv1486 = zext i8 %749 to i32
  %750 = load %struct.regnode*, %struct.regnode** %p.addr, align 8
  %type1487 = getelementptr inbounds %struct.regnode, %struct.regnode* %750, i32 0, i32 1
  %751 = load i8, i8* %type1487, align 1
  %idxprom1488 = zext i8 %751 to i64
  %arrayidx1489 = getelementptr inbounds [0 x i8*], [0 x i8*]* @PL_reg_name, i64 0, i64 %idxprom1488
  %752 = load i8*, i8** %arrayidx1489, align 8
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.24, i64 0, i64 0), i32 %conv1486, i8* %752)
  br label %sw.epilog1490

sw.epilog1490:                                    ; preds = %sw.default1484, %sw.bb1483, %if.end1481, %while.end1254, %if.end1171, %if.end536, %while.end470, %if.end431, %if.end390, %if.end335, %if.then198, %if.end191, %if.end66, %if.end51, %if.end31
  %753 = load i32, i32* %hardcount, align 4
  %tobool1491 = icmp ne i32 %753, 0
  br i1 %tobool1491, label %if.then1492, label %if.else1493

if.then1492:                                      ; preds = %sw.epilog1490
  %754 = load i32, i32* %hardcount, align 4
  store i32 %754, i32* %c, align 4
  br label %if.end1498

if.else1493:                                      ; preds = %sw.epilog1490
  %755 = load i8*, i8** %scan, align 8
  %756 = load i8**, i8*** %startposp.addr, align 8
  %757 = load i8*, i8** %756, align 8
  %sub.ptr.lhs.cast1494 = ptrtoint i8* %755 to i64
  %sub.ptr.rhs.cast1495 = ptrtoint i8* %757 to i64
  %sub.ptr.sub1496 = sub i64 %sub.ptr.lhs.cast1494, %sub.ptr.rhs.cast1495
  %conv1497 = trunc i64 %sub.ptr.sub1496 to i32
  store i32 %conv1497, i32* %c, align 4
  br label %if.end1498

if.end1498:                                       ; preds = %if.else1493, %if.then1492
  %758 = load i8*, i8** %scan, align 8
  %759 = load i8**, i8*** %startposp.addr, align 8
  store i8* %758, i8** %759, align 8
  %760 = load i32, i32* %c, align 4
  ret i32 %760
}

declare dso_local i32 @Perl_sv_eq_flags(%struct.sv*, %struct.sv*, i32) #2

declare dso_local i32 @PerlIO_printf(%struct._PerlIO**, i8*, ...) #2

declare dso_local %struct._PerlIO** @Perl_PerlIO_stderr() #2

declare dso_local void @Perl_croak_popstack() #2

declare dso_local void @Perl_savestack_grow_cnt(i32) #2

declare dso_local i64 @Perl_valid_utf8_to_uvchr(i8*, i64*) #2

; Function Attrs: nounwind readonly
declare dso_local i32 @tolower(i32) #1

declare dso_local void @Perl__load_PL_utf8_foldclosures() #2

; Function Attrs: noinline nounwind uwtable
define internal i64 @S_av_top_index(%struct.av* %av) #0 {
entry:
  %av.addr = alloca %struct.av*, align 8
  store %struct.av* %av, %struct.av** %av.addr, align 8
  %0 = load %struct.av*, %struct.av** %av.addr, align 8
  %1 = bitcast %struct.av* %0 to %struct.sv*
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %1, i32 0, i32 2
  %2 = load i32, i32* %sv_flags, align 4
  %and = and i32 %2, 8388608
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %3 = load %struct.av*, %struct.av** %av.addr, align 8
  %4 = bitcast %struct.av* %3 to i8*
  %5 = bitcast i8* %4 to %struct.sv*
  %call = call i32 @Perl_mg_size(%struct.sv* %5)
  %conv = sext i32 %call to i64
  br label %cond.end

cond.false:                                       ; preds = %entry
  %6 = load %struct.av*, %struct.av** %av.addr, align 8
  %sv_any = getelementptr inbounds %struct.av, %struct.av* %6, i32 0, i32 0
  %7 = load %struct.xpvav*, %struct.xpvav** %sv_any, align 8
  %xav_fill = getelementptr inbounds %struct.xpvav, %struct.xpvav* %7, i32 0, i32 2
  %8 = load i64, i64* %xav_fill, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %conv, %cond.true ], [ %8, %cond.false ]
  ret i64 %cond
}

declare dso_local %struct.sv** @Perl_av_fetch(%struct.av*, i64, i32) #2

declare dso_local i64 @Perl_sv_2uv_flags(%struct.sv*, i32) #2

declare dso_local i8* @Perl_uvoffuni_to_utf8_flags(i8*, i64, i64) #2

declare dso_local i32 @Perl_mg_size(%struct.sv*) #2

declare dso_local void @Perl_save_gp(%struct.gv*, i32) #2

declare dso_local void @Perl_save_generic_svref(%struct.sv**) #2

declare dso_local %struct.magic* @Perl_sv_magicext_mglob(%struct.sv*) #2

declare dso_local i64 @Perl_sv_utf8_upgrade_flags_grow(%struct.sv*, i32, i64) #2

declare dso_local void @Perl_fbm_compile(%struct.sv*, i32) #2

declare dso_local zeroext i1 @Perl_sv_utf8_downgrade(%struct.sv*, i1 zeroext) #2

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind willreturn }
attributes #5 = { nounwind readonly }
attributes #6 = { nounwind readnone }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)"}
