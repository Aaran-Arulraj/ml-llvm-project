; ModuleID = 'blender/source/blender/editors/sculpt_paint/paint_vertex.c'
source_filename = "blender/source/blender/editors/sculpt_paint/paint_vertex.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.EnumPropertyItem = type { i32, i8*, i32, i8*, i8* }
%struct.bContext = type opaque
%struct.Object = type { %struct.ID, %struct.AnimData*, %struct.SculptSession*, i16, i16, i32, i32, i32, [64 x i8], %struct.Object*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Ipo*, %struct.BoundBox*, %struct.bAction*, %struct.bAction*, %struct.bPose*, i8*, %struct.bGPdata*, %struct.bAnimVizSettings, %struct.bMotionPath*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, %struct.Material**, i8*, i32, i32, [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [4 x float], [4 x float], [3 x float], [3 x float], float, float, [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i8, i8, i16, i8, i8, float, float, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, float, i16, i16, [4 x float], i32, i32, %struct.BulletSoftBody*, i8, i8, i16, [3 x float], %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.PartDeflect*, %struct.SoftBody*, %struct.Group*, i8, i8, i16, float, %struct.FluidsimSettings*, %struct.CurveCache*, %struct.DerivedMesh*, %struct.DerivedMesh*, i64, i64, i32, i32, %struct.ListBase, %struct.ListBase, %struct.ListBase*, %struct.RigidBodyOb*, %struct.RigidBodyCon*, [2 x float], %struct.ImageUser*, %struct.ListBase, %struct.LodLevel* }
%struct.ID = type { i8*, i8*, %struct.ID*, %struct.Library*, [66 x i8], i16, i32, i32, i32, %struct.IDProperty* }
%struct.Library = type { %struct.ID, %struct.ID*, %struct.FileData*, [1024 x i8], [1024 x i8], %struct.Library*, %struct.PackedFile* }
%struct.FileData = type opaque
%struct.PackedFile = type opaque
%struct.IDProperty = type { %struct.IDProperty*, %struct.IDProperty*, i8, i8, i16, [64 x i8], i32, %struct.IDPropertyData, i32, i32 }
%struct.IDPropertyData = type { i8*, %struct.ListBase, i32, i32 }
%struct.AnimData = type opaque
%struct.SculptSession = type { %struct.MultiresModifierData*, %struct.MVert*, %struct.MPoly*, %struct.MLoop*, i32, i32, [3 x float]*, %struct.KeyBlock*, float*, %struct.MeshElemMap*, %struct.BMesh*, i32, i32, i8, %struct.BMLog*, %struct.PBVH*, i8, i8, [3 x float]*, [3 x float]*, [3 x [3 x float]]*, i8, i32, i32*, i32, %struct.ImagePool*, [3 x float]*, %struct.SculptStroke*, %struct.StrokeCache*, i8, [3 x float], [3 x float], i32 }
%struct.MultiresModifierData = type { %struct.ModifierData, i8, i8, i8, i8, i8, i8, [2 x i8] }
%struct.ModifierData = type { %struct.ModifierData*, %struct.ModifierData*, i32, i32, i32, i32, [64 x i8], %struct.Scene*, i8* }
%struct.Scene = type { %struct.ID, %struct.AnimData*, %struct.Object*, %struct.World*, %struct.Scene*, %struct.ListBase, %struct.Base*, %struct.Object*, [3 x float], [3 x float], [3 x float], [3 x float], i32, i32, i32, i16, i8, [1 x i8], %struct.bNodeTree*, %struct.Editing*, %struct.ToolSettings*, %struct.SceneStats*, %struct.RenderData, %struct.AudioData, %struct.ListBase, %struct.ListBase, i8*, i8*, i8*, i8*, i8*, %struct.DagForest*, i16, i16, i32, %struct.ListBase, %struct.GameFraming, %struct.GameData, %struct.UnitSettings, %struct.bGPdata*, %struct.PhysicsSettings, %struct.MovieClip*, i64, i64, %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings, %struct.ColorManagedColorspaceSettings, %struct.RigidBodyWorld* }
%struct.World = type opaque
%struct.Base = type { %struct.Base*, %struct.Base*, i32, i32, i32, i16, i16, %struct.Object* }
%struct.bNodeTree = type { %struct.ID, %struct.AnimData*, %struct.bNodeTreeType*, [64 x i8], %struct.StructRNA*, %struct.bGPdata*, [2 x float], %struct.ListBase, %struct.ListBase, i32, i32, i32, i32, i32, i16, i16, i32, i32, i16, i16, i32, %struct.rctf, %struct.ListBase, %struct.ListBase, %struct.bNodeInstanceHash*, %struct.bNodeInstanceKey, i32, %struct.bNodeTreeExec*, void (i8*, float)*, void (i8*, i8*)*, i32 (i8*)*, void (i8*)*, i8*, i8*, i8*, i8* }
%struct.bNodeTreeType = type opaque
%struct.StructRNA = type opaque
%struct.rctf = type { float, float, float, float }
%struct.bNodeInstanceHash = type opaque
%struct.bNodeInstanceKey = type { i32 }
%struct.bNodeTreeExec = type opaque
%struct.Editing = type { %struct.ListBase*, %struct.ListBase, %struct.ListBase, %struct.Sequence*, [1024 x i8], [1024 x i8], i32, i32, i32, i32, %struct.rctf }
%struct.Sequence = type { %struct.Sequence*, %struct.Sequence*, i8*, i8*, [64 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, float, i16, i16, i32, i32, %struct.Strip*, %struct.Ipo*, %struct.Scene*, %struct.Object*, %struct.MovieClip*, %struct.Mask*, %struct.anim*, float, float, %struct.Sequence*, %struct.Sequence*, %struct.Sequence*, %struct.ListBase, %struct.bSound*, i8*, float, float, float, float, i8*, i32, i32, i32, float, i32, i8, [3 x i8], %struct.ListBase }
%struct.Strip = type { %struct.Strip*, %struct.Strip*, i32, i32, i32, i32, %struct.StripElem*, [768 x i8], %struct.StripProxy*, %struct.StripCrop*, %struct.StripTransform*, %struct.StripColorBalance*, %struct.ColorManagedColorspaceSettings }
%struct.StripElem = type { [256 x i8], i32, i32 }
%struct.StripProxy = type { [768 x i8], [256 x i8], %struct.anim*, i16, i16, i16, i16 }
%struct.StripCrop = type { i32, i32, i32, i32 }
%struct.StripTransform = type { i32, i32 }
%struct.StripColorBalance = type { [3 x float], [3 x float], [3 x float], i32, i32 }
%struct.Mask = type opaque
%struct.anim = type opaque
%struct.bSound = type opaque
%struct.ToolSettings = type { %struct.VPaint*, %struct.VPaint*, %struct.Sculpt*, %struct.UvSculpt*, float, float, float, i16, i16, i8, i8, i8, i8, float, i16, i8, [5 x i8], %struct.ImagePaintSettings, %struct.ParticleEditSettings, float, float, i16, i16, i8, [1 x i8], i16, float, float, float, float, float, float, float, float, float, float, i16, i8, i8, [3 x i8], i8, %struct.Object*, i8, i8, i8, i8, i8, [8 x i8], [8 x i8], i8, i8, i8, i8, i8, i16, i16, i16, i16, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i16, i16, i32, float, float, %struct.UnifiedPaintSettings, %struct.MeshStatVis }
%struct.VPaint = type { %struct.Paint, i16, i16, i32, i32*, %struct.MDeformVert*, i8* }
%struct.Paint = type { %struct.Brush*, %struct.Palette*, i8*, [4 x i8], i32, i32, i32 }
%struct.Brush = type { %struct.ID, %struct.BrushClone, %struct.CurveMapping*, %struct.MTex, %struct.MTex, %struct.Brush*, %struct.ImBuf*, %struct.PreviewImage*, %struct.ColorBand*, %struct.PaintCurve*, [1024 x i8], float, i16, i16, float, i32, i32, i32, float, i32, i32, i32, i32, float, float, [3 x float], float, [3 x float], i32, float, float, i32, i32, i32, i8, i8, i8, i8, float, float, float, float, float, i32, i32, i32, float, float, i32, i32, float, [3 x float], [3 x float], [2 x float], [2 x float], [2 x float], [2 x float] }
%struct.BrushClone = type { %struct.Image*, [2 x float], float, float }
%struct.Image = type { %struct.ID, [1024 x i8], %struct.MovieCache*, %struct.GPUTexture*, %struct.anim*, %struct.RenderResult*, [8 x %struct.RenderResult*], i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32*, %struct.PackedFile*, %struct.PreviewImage*, float, i32, i16, i16, i32, i32, i8, i8, i16, [4 x float], float, float, %struct.ColorManagedColorspaceSettings, i8, [7 x i8], [8 x %struct.RenderSlot] }
%struct.MovieCache = type opaque
%struct.GPUTexture = type opaque
%struct.RenderResult = type opaque
%struct.RenderSlot = type { [64 x i8] }
%struct.CurveMapping = type { i32, i32, i32, i32, %struct.rctf, %struct.rctf, [4 x %struct.CurveMap], [3 x float], [3 x float], [3 x float], [3 x float] }
%struct.CurveMap = type { i16, i16, float, float, float, [2 x float], [2 x float], %struct.CurveMapPoint*, %struct.CurveMapPoint*, %struct.CurveMapPoint*, [2 x float], [2 x float] }
%struct.CurveMapPoint = type { float, float, i16, i16 }
%struct.MTex = type { i16, i16, i16, i16, %struct.Object*, %struct.Tex*, [64 x i8], i8, i8, i8, i8, [3 x float], [3 x float], float, i16, i16, i16, i16, i16, i16, i8, [7 x i8], float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float }
%struct.Tex = type { %struct.ID, %struct.AnimData*, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, i32, i32, i16, i16, i16, i16, i32, i32, i32, i32, float, float, float, %struct.ImageUser, %struct.bNodeTree*, %struct.Ipo*, %struct.Image*, %struct.ColorBand*, %struct.EnvMap*, %struct.PreviewImage*, %struct.PointDensity*, %struct.VoxelData*, %struct.OceanTex*, i8, [7 x i8] }
%struct.ImageUser = type { %struct.Scene*, i32, i32, i32, i32, i8, i8, i8, i8, i16, i16, i16, i16, i32 }
%struct.EnvMap = type { %struct.Object*, %struct.Image*, [6 x %struct.ImBuf*], [4 x [4 x float]], [3 x [3 x float]], i16, i16, float, float, float, i32, i16, i16, i32, i32, i16, i16 }
%struct.PointDensity = type { i16, i16, float, float, i16, i16, i32, i32, %struct.Object*, i32, i16, i16, i8*, float*, float, i16, i16, i16, [3 x i16], float, float, float, float, %struct.ColorBand*, %struct.CurveMapping* }
%struct.VoxelData = type { [3 x i32], i32, i16, i16, i16, i16, i16, i16, i32, %struct.Object*, float, i32, [1024 x i8], float*, i32, i32 }
%struct.OceanTex = type { %struct.Object*, [64 x i8], i32, i32 }
%struct.ImBuf = type { %struct.ImBuf*, %struct.ImBuf*, i32, i32, i8, i32, i32, i32, i32*, float*, [2 x double], i32, i32, i32, i32, i32**, i32*, float*, float, [20 x %struct.ImBuf*], i32, i32, i32, i32, %struct.ImMetaData*, i8*, i32, [1024 x i8], [1024 x i8], %struct.MEM_CacheLimiterHandle_s*, i32, i8*, i32, i32, %struct.ColorSpace*, %struct.ColorSpace*, i32*, %struct.ColormanageCache*, i32, %struct.rcti, %struct.DDSData }
%struct.ImMetaData = type opaque
%struct.MEM_CacheLimiterHandle_s = type opaque
%struct.ColorSpace = type opaque
%struct.ColormanageCache = type opaque
%struct.rcti = type { i32, i32, i32, i32 }
%struct.DDSData = type { i32, i32, i8*, i32 }
%struct.PreviewImage = type { [2 x i32], [2 x i32], [2 x i16], [2 x i16], [2 x i32*], [2 x %struct.GPUTexture*] }
%struct.ColorBand = type { i16, i16, i8, i8, i8, [1 x i8], [32 x %struct.CBData] }
%struct.CBData = type { float, float, float, float, float, i32 }
%struct.PaintCurve = type { %struct.ID, %struct.PaintCurvePoint*, i32, i32 }
%struct.PaintCurvePoint = type { %struct.BezTriple, float }
%struct.BezTriple = type { [3 x [3 x float]], float, float, float, i8, i8, i8, i8, i8, i8, i8, i8, float, float, float, [4 x i8] }
%struct.Palette = type { %struct.ID, %struct.ListBase, %struct.ListBase, i32, i32 }
%struct.MDeformVert = type { %struct.MDeformWeight*, i32, i32 }
%struct.MDeformWeight = type { i32, float }
%struct.Sculpt = type { %struct.Paint, i32, [3 x i32], float, i32, float, float, %struct.Object*, i8* }
%struct.UvSculpt = type { %struct.Paint }
%struct.ImagePaintSettings = type { %struct.Paint, i16, i16, i16, i16, [2 x i16], i32, i8*, %struct.Image*, %struct.Image*, %struct.Image*, [3 x float], float }
%struct.ParticleEditSettings = type { i16, i16, i16, i16, [7 x %struct.ParticleBrushData], i8*, float, float, i32, i32, i32, i32, %struct.Scene*, %struct.Object* }
%struct.ParticleBrushData = type { i16, i16, i16, i16, i32, float }
%struct.UnifiedPaintSettings = type { i32, float, float, float, [3 x float], [3 x float], i32, [2 x float], float, i32, i32, i8, [7 x i8], float, [2 x float], i32, float, [2 x float], [2 x float], i32, %struct.ColorSpace*, float, i32 }
%struct.MeshStatVis = type { i8, [2 x i8], i8, float, float, float, float, i8, [3 x i8], float, float, float, float }
%struct.SceneStats = type opaque
%struct.RenderData = type { %struct.ImageFormatData, %struct.AviCodecData*, %struct.QuicktimeCodecData*, %struct.QuicktimeCodecSettings, %struct.FFMpegCodecData, i32, i32, i32, float, i32, i32, i32, i32, i16, i16, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32, i16, i16, i32, i32, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, %struct.rctf, %struct.rctf, %struct.rcti, %struct.ListBase, i16, i16, float, float, float, float, i32, float, float, float, float, i16, i16, i16, i16, i16, i16, float, float, i16, i16, float, float, [1024 x i8], i32, i16, i16, [768 x i8], [4 x float], [4 x float], i8, i8, i8, [5 x i8], i32, i16, i16, float, float, i16, i16, float, i16, i16, i32, i16, i16, i16, i16, float, float, %struct.Text*, i32, float, [32 x i8], %struct.BakeData, i32, i32 }
%struct.ImageFormatData = type { i8, i8, i8, i8, i8, i8, i8, i8, i16, i16, float, i8, i8, [6 x i8], %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings }
%struct.AviCodecData = type { i8*, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [128 x i8] }
%struct.QuicktimeCodecData = type { i8*, i8*, i32, i32, [128 x i8] }
%struct.QuicktimeCodecSettings = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32, i32 }
%struct.FFMpegCodecData = type { i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, %struct.IDProperty* }
%struct.Text = type opaque
%struct.BakeData = type { %struct.ImageFormatData, [1024 x i8], i16, i16, i16, i16, float, float, [3 x i8], i8, i8, [3 x i8], [64 x i8] }
%struct.AudioData = type { i32, float, float, float, i32, i16, i16, float, float }
%struct.DagForest = type opaque
%struct.GameFraming = type { [3 x float], i8, i8, i8, i8 }
%struct.GameData = type { %struct.GameFraming, i16, i16, i16, i16, i16, i16, i16, i16, i16, [3 x i16], %struct.GameDome, i16, i16, float, %struct.RecastData, float, float, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, float }
%struct.GameDome = type { i16, i16, i16, i16, float, float, %struct.Text* }
%struct.RecastData = type { float, float, float, float, float, float, float, float, float, float, i32, float, float, i16, i16 }
%struct.UnitSettings = type { float, i8, i8, i16 }
%struct.PhysicsSettings = type { [3 x float], i32, i32, i32 }
%struct.MovieClip = type { %struct.ID, %struct.AnimData*, [1024 x i8], i32, i32, [2 x i32], float, float, %struct.anim*, %struct.MovieClipCache*, %struct.bGPdata*, %struct.MovieTracking, i8*, %struct.MovieClipProxy, i32, i32, i32, i32, %struct.ColorManagedColorspaceSettings }
%struct.MovieClipCache = type opaque
%struct.MovieTracking = type { %struct.MovieTrackingSettings, %struct.MovieTrackingCamera, %struct.ListBase, %struct.ListBase, %struct.MovieTrackingReconstruction, %struct.MovieTrackingStabilization, %struct.MovieTrackingTrack*, %struct.MovieTrackingPlaneTrack*, %struct.ListBase, i32, i32, %struct.MovieTrackingStats*, %struct.MovieTrackingDopesheet }
%struct.MovieTrackingSettings = type { i32, i16, i16, float, i16, i16, i16, i16, i16, i16, float, i16, i16, i32, i32, i32, i16, i16, float, i32, i32, float, float, i32 }
%struct.MovieTrackingCamera = type { i8*, i16, i16, float, float, float, i16, i16, [2 x float], float, float, float, float, float }
%struct.MovieTrackingReconstruction = type { i32, float, i32, i32, %struct.MovieReconstructedCamera* }
%struct.MovieReconstructedCamera = type { i32, float, [4 x [4 x float]] }
%struct.MovieTrackingStabilization = type { i32, i32, i32, float, %struct.MovieTrackingTrack*, float, float, float, i32, i32, float }
%struct.MovieTrackingTrack = type { %struct.MovieTrackingTrack*, %struct.MovieTrackingTrack*, [64 x i8], [2 x float], [2 x float], [2 x float], [2 x float], [2 x float], i32, i32, %struct.MovieTrackingMarker*, [3 x float], float, i32, i32, i32, [3 x float], i16, i16, i16, i16, i32, float, %struct.bGPdata*, float, float }
%struct.MovieTrackingMarker = type { [2 x float], [4 x [2 x float]], [2 x float], [2 x float], i32, i32 }
%struct.MovieTrackingPlaneTrack = type { %struct.MovieTrackingPlaneTrack*, %struct.MovieTrackingPlaneTrack*, [64 x i8], %struct.MovieTrackingTrack**, i32, i32, %struct.MovieTrackingPlaneMarker*, i32, i32, %struct.Image*, float, i32 }
%struct.MovieTrackingPlaneMarker = type { [4 x [2 x float]], i32, i32 }
%struct.MovieTrackingStats = type { [256 x i8] }
%struct.MovieTrackingDopesheet = type { i32, i16, i16, %struct.ListBase, %struct.ListBase, i32, i32 }
%struct.MovieClipProxy = type { [768 x i8], i16, i16, i16, i16 }
%struct.ColorManagedViewSettings = type { i32, i32, [64 x i8], [64 x i8], float, float, %struct.CurveMapping*, i8* }
%struct.ColorManagedDisplaySettings = type { [64 x i8] }
%struct.ColorManagedColorspaceSettings = type { [64 x i8] }
%struct.RigidBodyWorld = type opaque
%struct.MVert = type { [3 x float], [3 x i16], i8, i8 }
%struct.MPoly = type { i32, i32, i16, i8, i8 }
%struct.MLoop = type { i32, i32 }
%struct.KeyBlock = type opaque
%struct.MeshElemMap = type { i32*, i32 }
%struct.BMesh = type opaque
%struct.BMLog = type opaque
%struct.PBVH = type opaque
%struct.ImagePool = type opaque
%struct.SculptStroke = type opaque
%struct.StrokeCache = type opaque
%struct.Ipo = type opaque
%struct.BoundBox = type { [8 x [3 x float]], i32, i32 }
%struct.bAction = type { %struct.ID, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, i32, i32 }
%struct.bPose = type { %struct.ListBase, %struct.GHash*, i16, i16, i32, i32, float, [3 x float], [3 x float], %struct.ListBase, i32, i32, i8*, i8*, %struct.bAnimVizSettings, [64 x i8] }
%struct.GHash = type opaque
%struct.bGPdata = type opaque
%struct.bAnimVizSettings = type { i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i32, i32, i32, i32 }
%struct.bMotionPath = type { %struct.bMotionPathVert*, i32, i32, i32, i32 }
%struct.bMotionPathVert = type { [3 x float], i32 }
%struct.Material = type opaque
%struct.BulletSoftBody = type opaque
%struct.PartDeflect = type opaque
%struct.SoftBody = type opaque
%struct.Group = type opaque
%struct.FluidsimSettings = type opaque
%struct.CurveCache = type opaque
%struct.DerivedMesh = type { %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, i32, i32, i32, i32, i32, i32, i32, %struct.LinkNode*, %struct.GPUDrawObject*, i32, float, i32, i32, %struct.Material**, i8, void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, float)*, void (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, i32, %struct.MVert*)*, void (%struct.DerivedMesh*, i32, %struct.MEdge*)*, void (%struct.DerivedMesh*, i32, %struct.MFace*)*, %struct.MVert* (%struct.DerivedMesh*)*, %struct.MEdge* (%struct.DerivedMesh*)*, %struct.MFace* (%struct.DerivedMesh*)*, %struct.MLoop* (%struct.DerivedMesh*)*, %struct.MPoly* (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, %struct.MVert*)*, void (%struct.DerivedMesh*, %struct.MEdge*)*, void (%struct.DerivedMesh*, %struct.MFace*)*, void (%struct.DerivedMesh*, %struct.MLoop*)*, void (%struct.DerivedMesh*, %struct.MPoly*)*, %struct.MVert* (%struct.DerivedMesh*)*, %struct.MEdge* (%struct.DerivedMesh*)*, %struct.MFace* (%struct.DerivedMesh*)*, %struct.MLoop* (%struct.DerivedMesh*)*, %struct.MPoly* (%struct.DerivedMesh*)*, i8* (%struct.DerivedMesh*, i32, i32)*, i8* (%struct.DerivedMesh*, i32, i32)*, i8* (%struct.DerivedMesh*, i32, i32)*, i8* (%struct.DerivedMesh*, i32, i32)*, i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)*, %struct.CustomData* (%struct.DerivedMesh*)*, %struct.CustomData* (%struct.DerivedMesh*)*, %struct.CustomData* (%struct.DerivedMesh*)*, %struct.CustomData* (%struct.DerivedMesh*)*, %struct.CustomData* (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, i32, %struct.CustomData*, i32)*, void (%struct.DerivedMesh*, i32, %struct.CustomData*, i32)*, void (%struct.DerivedMesh*, i32, %struct.CustomData*, i32)*, i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, %struct.CCGElem** (%struct.DerivedMesh*)*, %struct.DMGridAdjacency* (%struct.DerivedMesh*)*, i32* (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, %struct.CCGKey*)*, %struct.DMFlagMat* (%struct.DerivedMesh*)*, i32** (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, void (i8*, i32, float*, float*, i16*)*, i8*, i32)*, void (%struct.DerivedMesh*, void (i8*, i32, float*, float*)*, i8*)*, void (%struct.DerivedMesh*, void (i8*, i32, i32, float*, float*)*, i8*, i32)*, void (%struct.DerivedMesh*, void (i8*, i32, float*, float*)*, i8*, i32)*, void (%struct.DerivedMesh*, float*, float*)*, void (%struct.DerivedMesh*, i32, float*)*, void (%struct.DerivedMesh*, [3 x float]*)*, void (%struct.DerivedMesh*, i32, float*)*, void (%struct.DerivedMesh*, i32, float*)*, %struct.MeshElemMap* (%struct.Object*, %struct.DerivedMesh*)*, %struct.PBVH* (%struct.Object*, %struct.DerivedMesh*)*, void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, i8, i8)*, void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, [4 x float]*, i8, i32 (i32, i8*)*)*, void (%struct.DerivedMesh*, i32 (%struct.MTFace*, i8, i32)*, i32 (i8*, i32, i32)*, i8*, i32)*, void (%struct.DerivedMesh*, i32 (i32, i8*)*)*, void (%struct.DerivedMesh*, i32 (i8*, i32)*, i32 (i32, i8*)*, i32 (i8*, i32, i32)*, i8*, i32)*, void (%struct.DerivedMesh*, i32 (i8*, i32)*, i32 (i8*, i32, i32)*, i8*, i32)*, void (%struct.DerivedMesh*, i32 (i32, i8*)*, i32 (i8*, i32)*, i8*)*, void (%struct.DerivedMesh*, i32 (i8*, i32)*, i8*)*, void (%struct.DerivedMesh*, i32 (i8*, i32)*, void (i8*, i32, float)*, i8*)*, void (%struct.DerivedMesh*, void (i8*, i32, i8*)*, i8 (i8*, i32)*, i8*)*, void (%struct.DerivedMesh*)* }
%struct.CustomData = type { %struct.CustomDataLayer*, [41 x i32], i32, i32, i32, %struct.BLI_mempool*, %struct.CustomDataExternal* }
%struct.CustomDataLayer = type { i32, i32, i32, i32, i32, i32, i32, i32, [64 x i8], i8* }
%struct.BLI_mempool = type opaque
%struct.CustomDataExternal = type { [1024 x i8] }
%struct.LinkNode = type opaque
%struct.GPUDrawObject = type { %struct.GPUBuffer*, %struct.GPUBuffer*, %struct.GPUBuffer*, %struct.GPUBuffer*, %struct.GPUBuffer*, %struct.GPUBuffer*, i32*, %struct.GPUVertPointLink*, i32, %struct.GPUBufferMaterial*, i32, i32, i32, i32, i32, i8 }
%struct.GPUBuffer = type { i32, i8*, i32 }
%struct.GPUVertPointLink = type opaque
%struct.GPUBufferMaterial = type { i32, i32, i16 }
%struct.MEdge = type { i32, i32, i8, i8, i16 }
%struct.MFace = type { i32, i32, i32, i32, i16, i8, i8 }
%struct.CCGElem = type opaque
%struct.DMGridAdjacency = type { [4 x i32], [4 x i32] }
%struct.CCGKey = type opaque
%struct.DMFlagMat = type { i16, i8 }
%struct.MTFace = type { [4 x [2 x float]], %struct.Image*, i8, i8, i16, i16, i16 }
%struct.RigidBodyOb = type opaque
%struct.RigidBodyCon = type opaque
%struct.ListBase = type { i8*, i8* }
%struct.LodLevel = type { %struct.LodLevel*, %struct.LodLevel*, %struct.Object*, i32, float }
%struct.Mesh = type { %struct.ID, %struct.AnimData*, %struct.BoundBox*, %struct.Ipo*, %struct.Key*, %struct.Material**, %struct.MSelect*, %struct.MPoly*, %struct.MTexPoly*, %struct.MLoop*, %struct.MLoopUV*, %struct.MLoopCol*, %struct.MFace*, %struct.MTFace*, %struct.TFace*, %struct.MVert*, %struct.MEdge*, %struct.MDeformVert*, %struct.MCol*, %struct.Mesh*, %struct.BMEditMesh*, %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, i32, i32, i32, i32, i32, i32, i32, [3 x float], [3 x float], [3 x float], i32, i16, i16, float, i32, i8, i8, i8, i8, i8, i8, i16, %struct.Multires* }
%struct.Key = type opaque
%struct.MSelect = type { i32, i32 }
%struct.MTexPoly = type { %struct.Image*, i8, i8, i16, i16, i16 }
%struct.MLoopUV = type { [2 x float], i32 }
%struct.MLoopCol = type { i8, i8, i8, i8 }
%struct.TFace = type { i8*, [4 x [2 x float]], [4 x i32], i8, i8, i16, i16, i16 }
%struct.MCol = type { i8, i8, i8, i8 }
%struct.BMEditMesh = type opaque
%struct.Multires = type { %struct.ListBase, %struct.MVert*, i8, i8, i8, i8, i8, i8, i8, i8, %struct.CustomData, %struct.CustomData, i16*, i8* }
%struct.ScrArea = type { %struct.ScrArea*, %struct.ScrArea*, %struct.ScrVert*, %struct.ScrVert*, %struct.ScrVert*, %struct.ScrVert*, %struct.bScreen*, %struct.rcti, i8, i8, i16, i16, i16, i16, i16, i16, i8, i8, %struct.SpaceType*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase }
%struct.ScrVert = type { %struct.ScrVert*, %struct.ScrVert*, %struct.ScrVert*, %struct.vec2s, i16, i16 }
%struct.vec2s = type { i16, i16 }
%struct.bScreen = type { %struct.ID, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.Scene*, %struct.Scene*, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, %struct.wmTimer*, i8* }
%struct.wmTimer = type { %struct.wmTimer*, %struct.wmTimer*, %struct.wmWindow*, double, i32, i8*, double, double, double, double, double, i32 }
%struct.wmWindow = type { %struct.wmWindow*, %struct.wmWindow*, i8*, %struct.bScreen*, %struct.bScreen*, [64 x i8], i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i32, i16, i16, %struct.wmEvent*, %struct.wmSubWindow*, %struct.wmGesture*, i32, i32, i8*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase }
%struct.wmEvent = type { %struct.wmEvent*, %struct.wmEvent*, i16, i16, i32, i32, [2 x i32], [6 x i8], i8, i8, i16, i16, i32, i32, double, i32, i32, i16, i16, i16, i16, i16, i16, i8*, %struct.wmTabletData*, i16, i16, i32, i8* }
%struct.wmTabletData = type { i32, float, float, float }
%struct.wmSubWindow = type opaque
%struct.wmGesture = type { %struct.wmGesture*, %struct.wmGesture*, i32, i32, i32, i32, i32, i32, i8*, i8* }
%struct.SpaceType = type opaque
%struct.ARegion = type { %struct.ARegion*, %struct.ARegion*, %struct.View2D, %struct.rcti, %struct.rcti, i16, i16, i16, i16, i16, i16, float, i16, i16, i16, i16, i16, i16, i16, i16, %struct.ARegionType*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.wmTimer*, i8*, i8* }
%struct.View2D = type { %struct.rctf, %struct.rctf, %struct.rcti, %struct.rcti, %struct.rcti, [2 x float], [2 x float], float, float, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float*, i32, i32, %struct.SmoothView2DStore*, %struct.wmTimer* }
%struct.SmoothView2DStore = type opaque
%struct.ARegionType = type opaque
%struct.bDeformGroup = type { %struct.bDeformGroup*, %struct.bDeformGroup*, [64 x i8], i8, [7 x i8] }
%struct.wmOperatorType = type { i8*, i8*, i8*, i8*, i32 (%struct.bContext*, %struct.wmOperator*)*, i8 (%struct.bContext*, %struct.wmOperator*)*, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)*, void (%struct.bContext*, %struct.wmOperator*)*, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)*, i32 (%struct.bContext*)*, void (%struct.bContext*, %struct.wmOperator*)*, %struct.StructRNA*, %struct.IDProperty*, %struct.PropertyRNA*, %struct.ListBase, %struct.wmKeyMap*, i8*, i32 (%struct.bContext*, %struct.wmOperatorType*)*, %struct.ExtensionRNA, i16 }
%struct.wmOperator = type { %struct.wmOperator*, %struct.wmOperator*, [64 x i8], %struct.IDProperty*, %struct.wmOperatorType*, i8*, i8*, %struct.PointerRNA*, %struct.ReportList*, %struct.ListBase, %struct.wmOperator*, %struct.uiLayout*, i16, [3 x i16] }
%struct.PointerRNA = type { %struct.anon, %struct.StructRNA*, i8* }
%struct.anon = type { i8* }
%struct.ReportList = type { %struct.ListBase, i32, i32, i32, i32, %struct.wmTimer* }
%struct.uiLayout = type opaque
%struct.PropertyRNA = type opaque
%struct.wmKeyMap = type { %struct.wmKeyMap*, %struct.wmKeyMap*, %struct.ListBase, %struct.ListBase, [64 x i8], i16, i16, i16, i16, i32 (%struct.bContext*)*, i8* }
%struct.ExtensionRNA = type { i8*, %struct.StructRNA*, i32 (%struct.bContext*, %struct.PointerRNA*, %struct.FunctionRNA*, %struct.ParameterList*)*, void (i8*)* }
%struct.FunctionRNA = type opaque
%struct.ParameterList = type { i8*, %struct.FunctionRNA*, i32, i32, i32 }
%struct.ViewContext = type { %struct.Scene*, %struct.Object*, %struct.Object*, %struct.ARegion*, %struct.View3D*, %struct.RegionView3D*, %struct.BMEditMesh*, [2 x i32] }
%struct.View3D = type { %struct.SpaceLink*, %struct.SpaceLink*, %struct.ListBase, i32, float, [8 x i16], [4 x float], float, float, i8, [3 x i8], i32, i32, i16, i16, %struct.Object*, %struct.Object*, %struct.rctf, %struct.ListBase, %struct.BGpic*, %struct.View3D*, [64 x i8], i32, i32, i16, i16, i16, i16, i16, i16, float, float, float, float, [3 x float], [3 x float], i16, i16, i16, i8, i8, i8, i8, [2 x i8], %struct.ListBase, %struct.ListBase, %struct.ListBase, i8, i8, i8, [5 x i8], i8*, %struct.Material*, %struct.bGPdata* }
%struct.SpaceLink = type { %struct.SpaceLink*, %struct.SpaceLink*, %struct.ListBase, i32, float, [8 x i16] }
%struct.BGpic = type { %struct.BGpic*, %struct.BGpic*, %struct.Image*, %struct.ImageUser, %struct.MovieClip*, %struct.MovieClipUser, float, float, float, float, i16, i16, i16, i16 }
%struct.MovieClipUser = type { i32, i16, i16 }
%struct.RegionView3D = type { [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [6 x [4 x float]], [6 x [4 x float]], %struct.BoundBox*, %struct.RegionView3D*, %struct.RenderEngine*, %struct.ViewDepths*, i8*, %struct.SmoothView3DStore*, %struct.wmTimer*, [4 x [4 x float]], [4 x float], float, float, float, float, [3 x float], float, i8, i8, i8, i8, i8, [3 x i8], [2 x float], i16, i16, [4 x float], i16, i16, float, [3 x float], float, [3 x float] }
%struct.RenderEngine = type opaque
%struct.ViewDepths = type { i16, i16, i16, i16, float*, [2 x double], i8 }
%struct.SmoothView3DStore = type opaque
%struct.PaintStroke = type opaque
%struct.wmEventHandler = type opaque
%struct.DMGradient_vertStore = type { [2 x float], float, i32 }
%struct.DMGradient_userData = type { %struct.ARegion*, %struct.Scene*, %struct.Mesh*, %struct.Brush*, float*, float*, float, i32, i16, %struct.DMGradient_vertStore*, i32*, i16, i16, float }
%struct.WPaintData = type { %struct.ViewContext, i32*, i32, i32, i8*, %struct.DMCoNo*, [3 x [3 x float]], i8*, i8*, i32 }
%struct.DMCoNo = type { [3 x float], [3 x float] }
%struct.VertProjHandle = type opaque
%struct.WeightPaintInfo = type { i32, i32, i32, i32, i32, i8*, i8*, i8*, i8, i8, i8, float }
%struct.ParticleSystem = type { %struct.ParticleSystem*, %struct.ParticleSystem*, %struct.ParticleSettings*, %struct.ParticleData*, %struct.ChildParticle*, %struct.PTCacheEdit*, void (%struct.PTCacheEdit*)*, %struct.ParticleCacheKey**, %struct.ParticleCacheKey**, %struct.ListBase, %struct.ListBase, %struct.ClothModifierData*, %struct.DerivedMesh*, %struct.DerivedMesh*, %struct.Object*, %struct.LatticeDeformData*, %struct.Object*, %struct.ListBase, [64 x i8], [4 x [4 x float]], float, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, [3 x [64 x i8]], [12 x i16], i16, i16, i8*, %struct.PointCache*, %struct.ListBase, %struct.ListBase*, %struct.ParticleSpring*, i32, i32, %struct.KDTree*, %struct.BVHTree*, %struct.ParticleDrawData*, float, float }
%struct.ParticleSettings = type { %struct.ID, %struct.AnimData*, %struct.BoidSettings*, %struct.SPHFluidSettings*, %struct.EffectorWeights*, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, [2 x float], [2 x float], float, float, float, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, [1 x float], i32, i32, i32, i32, i16, [3 x i16], float, float, float, float, float, float, float, [3 x float], float, float, float, float, float, float, float, [3 x float], float, float, float, float, i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, [2 x float], float, float, i32, i32, [18 x %struct.MTex*], %struct.Group*, %struct.ListBase, %struct.Group*, %struct.Object*, %struct.Object*, %struct.Ipo*, %struct.PartDeflect*, %struct.PartDeflect*, i16, [3 x i16] }
%struct.BoidSettings = type { i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, %struct.ListBase }
%struct.SPHFluidSettings = type { float, float, float, float, float, float, float, float, float, float, float, float, float, i32, i32, i16, [3 x i16] }
%struct.EffectorWeights = type opaque
%struct.ParticleData = type { %struct.ParticleKey, %struct.ParticleKey, %struct.HairKey*, %struct.ParticleKey*, %struct.BoidParticle*, i32, float, float, float, i32, i32, [4 x float], float, float, float, i32, i32, i16, i16 }
%struct.ParticleKey = type { [3 x float], [3 x float], [4 x float], [3 x float], float }
%struct.HairKey = type { [3 x float], float, float, i16, i16 }
%struct.BoidParticle = type { %struct.Object*, %struct.BoidData, [3 x float], [3 x float], float }
%struct.BoidData = type { float, [3 x float], i16, i16 }
%struct.ChildParticle = type { i32, i32, [4 x i32], [4 x float], [4 x float], float, float }
%struct.PTCacheEdit = type opaque
%struct.ParticleCacheKey = type opaque
%struct.ClothModifierData = type { %struct.ModifierData, %struct.Scene*, %struct.Cloth*, %struct.ClothSimSettings*, %struct.ClothCollSettings*, %struct.PointCache*, %struct.ListBase }
%struct.Cloth = type opaque
%struct.ClothSimSettings = type opaque
%struct.ClothCollSettings = type opaque
%struct.LatticeDeformData = type opaque
%struct.PointCache = type opaque
%struct.ParticleSpring = type { float, [2 x i32], i32 }
%struct.KDTree = type opaque
%struct.BVHTree = type opaque
%struct.ParticleDrawData = type opaque
%struct.Bone = type { %struct.Bone*, %struct.Bone*, %struct.IDProperty*, %struct.Bone*, %struct.ListBase, [64 x i8], float, [3 x float], [3 x float], [3 x [3 x float]], i32, [3 x float], [3 x float], [4 x [4 x float]], float, float, float, float, float, float, float, float, float, float, [3 x float], i32, i16, [1 x i16] }
%struct.bPoseChannel = type { %struct.bPoseChannel*, %struct.bPoseChannel*, %struct.IDProperty*, %struct.ListBase, [64 x i8], i16, i16, i16, i16, i8, i8, [6 x i8], %struct.Bone*, %struct.bPoseChannel*, %struct.bPoseChannel*, %struct.ListBase, %struct.ListBase, %struct.bMotionPath*, %struct.Object*, %struct.bPoseChannel*, [3 x float], [3 x float], [3 x float], [4 x float], [3 x float], float, i16, i16, [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], float, float, float, i8* }
%struct.bArmature = type { %struct.ID, %struct.AnimData*, %struct.ListBase, %struct.ListBase, %struct.ListBase*, %struct.Bone*, %struct.EditBone*, i8*, i32, i32, i32, i32, i16, i16, i32, i32, i32, i16, i16, i16, i16, i32, i32, i32, i32, i32, i32 }
%struct.EditBone = type { %struct.EditBone*, %struct.EditBone*, %struct.IDProperty*, %struct.EditBone*, i8*, [64 x i8], float, [3 x float], [3 x float], i32, i32, float, float, float, float, float, float, float, float, float, float, i16 }
%struct.VPaintData = type { %struct.ViewContext, i32, i32*, %struct.VertProjHandle*, %struct.DMCoNo*, [3 x [3 x float]], i8, %struct.MeshElemMap*, i8*, i8*, i8*, i8 }

@MEM_callocN = external dso_local global i8* (i64, i8*)*, align 8
@.str = private unnamed_addr constant [20 x i8] c"VPaintData mlooptag\00", align 1
@MEM_freeN = external dso_local global void (i8*)*, align 8
@.str.1 = private unnamed_addr constant [27 x i8] c"Weight Paint Sample Weight\00", align 1
@.str.2 = private unnamed_addr constant [23 x i8] c"PAINT_OT_weight_sample\00", align 1
@.str.3 = private unnamed_addr constant [48 x i8] c"Use the mouse to sample a weight in the 3D view\00", align 1
@.str.4 = private unnamed_addr constant [26 x i8] c"Weight Paint Sample Group\00", align 1
@.str.5 = private unnamed_addr constant [29 x i8] c"PAINT_OT_weight_sample_group\00", align 1
@.str.6 = private unnamed_addr constant [71 x i8] c"Select one of the vertex groups available under current mouse position\00", align 1
@.str.7 = private unnamed_addr constant [6 x i8] c"group\00", align 1
@DummyRNA_DEFAULT_items = external dso_local global [0 x %struct.EnumPropertyItem], align 8
@.str.8 = private unnamed_addr constant [11 x i8] c"Keying Set\00", align 1
@.str.9 = private unnamed_addr constant [22 x i8] c"The Keying Set to use\00", align 1
@.str.10 = private unnamed_addr constant [18 x i8] c"Weight Paint Mode\00", align 1
@.str.11 = private unnamed_addr constant [29 x i8] c"PAINT_OT_weight_paint_toggle\00", align 1
@.str.12 = private unnamed_addr constant [36 x i8] c"Toggle weight paint mode in 3D view\00", align 1
@.str.13 = private unnamed_addr constant [13 x i8] c"Weight Paint\00", align 1
@.str.14 = private unnamed_addr constant [22 x i8] c"PAINT_OT_weight_paint\00", align 1
@.str.15 = private unnamed_addr constant [53 x i8] c"Paint a stroke in the current vertex group's weights\00", align 1
@.str.16 = private unnamed_addr constant [11 x i8] c"Set Weight\00", align 1
@.str.17 = private unnamed_addr constant [20 x i8] c"PAINT_OT_weight_set\00", align 1
@.str.18 = private unnamed_addr constant [59 x i8] c"Fill the active vertex group with the current paint weight\00", align 1
@.str.19 = private unnamed_addr constant [18 x i8] c"Vertex Paint Mode\00", align 1
@.str.20 = private unnamed_addr constant [29 x i8] c"PAINT_OT_vertex_paint_toggle\00", align 1
@.str.21 = private unnamed_addr constant [40 x i8] c"Toggle the vertex paint mode in 3D view\00", align 1
@.str.22 = private unnamed_addr constant [13 x i8] c"Vertex Paint\00", align 1
@.str.23 = private unnamed_addr constant [22 x i8] c"PAINT_OT_vertex_paint\00", align 1
@.str.24 = private unnamed_addr constant [48 x i8] c"Paint a stroke in the active vertex color layer\00", align 1
@PAINT_OT_weight_from_bones.type_items = internal global [3 x %struct.EnumPropertyItem] [%struct.EnumPropertyItem { i32 3, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.25, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.26, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.27, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.28, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.29, i32 0, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.30, i32 0, i32 0) }, %struct.EnumPropertyItem zeroinitializer], align 16, !dbg !0
@.str.25 = private unnamed_addr constant [10 x i8] c"AUTOMATIC\00", align 1
@.str.26 = private unnamed_addr constant [10 x i8] c"Automatic\00", align 1
@.str.27 = private unnamed_addr constant [29 x i8] c"Automatic weights from bones\00", align 1
@.str.28 = private unnamed_addr constant [10 x i8] c"ENVELOPES\00", align 1
@.str.29 = private unnamed_addr constant [15 x i8] c"From Envelopes\00", align 1
@.str.30 = private unnamed_addr constant [48 x i8] c"Weights from envelopes with user defined radius\00", align 1
@.str.31 = private unnamed_addr constant [18 x i8] c"Weight from Bones\00", align 1
@.str.32 = private unnamed_addr constant [27 x i8] c"PAINT_OT_weight_from_bones\00", align 1
@.str.33 = private unnamed_addr constant [133 x i8] c"Set the weights of the groups matching the attached armature's selected bones, using the distance between the vertices and the bones\00", align 1
@.str.34 = private unnamed_addr constant [5 x i8] c"type\00", align 1
@.str.35 = private unnamed_addr constant [5 x i8] c"Type\00", align 1
@.str.36 = private unnamed_addr constant [36 x i8] c"Method to use for assigning weights\00", align 1
@PAINT_OT_weight_gradient.gradient_types = internal global [3 x %struct.EnumPropertyItem] [%struct.EnumPropertyItem { i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.37, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.38, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.39, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.40, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.41, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.39, i32 0, i32 0) }, %struct.EnumPropertyItem zeroinitializer], align 16, !dbg !3419
@.str.37 = private unnamed_addr constant [7 x i8] c"LINEAR\00", align 1
@.str.38 = private unnamed_addr constant [7 x i8] c"Linear\00", align 1
@.str.39 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.40 = private unnamed_addr constant [7 x i8] c"RADIAL\00", align 1
@.str.41 = private unnamed_addr constant [7 x i8] c"Radial\00", align 1
@.str.42 = private unnamed_addr constant [16 x i8] c"Weight Gradient\00", align 1
@.str.43 = private unnamed_addr constant [25 x i8] c"PAINT_OT_weight_gradient\00", align 1
@.str.44 = private unnamed_addr constant [60 x i8] c"Draw a line to apply a weight gradient to selected vertices\00", align 1
@MEM_mallocN = external dso_local global i8* (i64, i8*)*, align 8
@.str.45 = private unnamed_addr constant [12 x i8] c"wpaint prev\00", align 1
@.str.46 = private unnamed_addr constant [5 x i8] c"scol\00", align 1
@.str.47 = private unnamed_addr constant [8 x i8] c"colmain\00", align 1
@.str.48 = private unnamed_addr constant [54 x i8] c"The modifier used does not support deformed locations\00", align 1
@.str.49 = private unnamed_addr constant [7 x i8] c"groups\00", align 1
@DummyRNA_NULL_items = external dso_local global [0 x %struct.EnumPropertyItem], align 8
@PAINT_CURSOR_WEIGHT_PAINT = external dso_local constant [3 x i8], align 1
@.str.50 = private unnamed_addr constant [7 x i8] c"VPaint\00", align 1
@.str.51 = private unnamed_addr constant [33 x i8] c"Active group is locked, aborting\00", align 1
@.str.52 = private unnamed_addr constant [11 x i8] c"WPaintData\00", align 1
@.str.53 = private unnamed_addr constant [46 x i8] c"No active vertex group for painting, aborting\00", align 1
@.str.54 = private unnamed_addr constant [12 x i8] c"vertexpaint\00", align 1
@.str.55 = private unnamed_addr constant [9 x i8] c"pressure\00", align 1
@.str.56 = private unnamed_addr constant [6 x i8] c"mouse\00", align 1
@.str.57 = private unnamed_addr constant [9 x i8] c"pen_flip\00", align 1
@MEM_dupallocN = external dso_local global i8* (i8*)*, align 8
@.str.58 = private unnamed_addr constant [19 x i8] c"unlocked_unchanged\00", align 1
@PAINT_CURSOR_VERTEX_PAINT = external dso_local constant [3 x i8], align 1
@.str.59 = private unnamed_addr constant [11 x i8] c"VPaintData\00", align 1
@.str.60 = private unnamed_addr constant [20 x i8] c"VPaintData mfacetag\00", align 1
@.str.61 = private unnamed_addr constant [12 x i8] c"vpaint_prev\00", align 1
@.str.62 = private unnamed_addr constant [7 x i8] c"xstart\00", align 1
@.str.63 = private unnamed_addr constant [7 x i8] c"ystart\00", align 1
@.str.64 = private unnamed_addr constant [5 x i8] c"xend\00", align 1
@.str.65 = private unnamed_addr constant [5 x i8] c"yend\00", align 1
@__func__.paint_weight_gradient_exec = private unnamed_addr constant [27 x i8] c"paint_weight_gradient_exec\00", align 1

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @vertex_paint_mode_poll(%struct.bContext* %C) #0 !dbg !3436 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %ob = alloca %struct.Object*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !3441, metadata !DIExpression()), !dbg !3442
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !3443, metadata !DIExpression()), !dbg !3446
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3447
  %call = call %struct.Object* @CTX_data_active_object(%struct.bContext* %0), !dbg !3448
  store %struct.Object* %call, %struct.Object** %ob, align 8, !dbg !3446
  %1 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !3449
  %tobool = icmp ne %struct.Object* %1, null, !dbg !3449
  br i1 %tobool, label %land.lhs.true, label %land.end, !dbg !3450

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !3451
  %mode = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 27, !dbg !3452
  %3 = load i32, i32* %mode, align 8, !dbg !3452
  %cmp = icmp eq i32 %3, 4, !dbg !3453
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !3454

land.rhs:                                         ; preds = %land.lhs.true
  %4 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !3455
  %data = getelementptr inbounds %struct.Object, %struct.Object* %4, i32 0, i32 19, !dbg !3456
  %5 = load i8*, i8** %data, align 8, !dbg !3456
  %6 = bitcast i8* %5 to %struct.Mesh*, !dbg !3457
  %totpoly = getelementptr inbounds %struct.Mesh, %struct.Mesh* %6, i32 0, i32 30, !dbg !3458
  %7 = load i32, i32* %totpoly, align 8, !dbg !3458
  %tobool1 = icmp ne i32 %7, 0, !dbg !3454
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %entry
  %8 = phi i1 [ false, %land.lhs.true ], [ false, %entry ], [ %tobool1, %land.rhs ], !dbg !3459
  %land.ext = zext i1 %8 to i32, !dbg !3454
  ret i32 %land.ext, !dbg !3460
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare dso_local %struct.Object* @CTX_data_active_object(%struct.bContext*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @vertex_paint_poll(%struct.bContext* %C) #0 !dbg !3461 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %sa = alloca %struct.ScrArea*, align 8
  %ar = alloca %struct.ARegion*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !3462, metadata !DIExpression()), !dbg !3463
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3464
  %call = call i32 @vertex_paint_mode_poll(%struct.bContext* %0), !dbg !3466
  %tobool = icmp ne i32 %call, 0, !dbg !3466
  br i1 %tobool, label %land.lhs.true, label %if.end15, !dbg !3467

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3468
  %call1 = call %struct.ToolSettings* @CTX_data_tool_settings(%struct.bContext* %1), !dbg !3469
  %vpaint = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %call1, i32 0, i32 0, !dbg !3470
  %2 = load %struct.VPaint*, %struct.VPaint** %vpaint, align 8, !dbg !3470
  %paint = getelementptr inbounds %struct.VPaint, %struct.VPaint* %2, i32 0, i32 0, !dbg !3471
  %call2 = call %struct.Brush* @BKE_paint_brush(%struct.Paint* %paint), !dbg !3472
  %tobool3 = icmp ne %struct.Brush* %call2, null, !dbg !3472
  br i1 %tobool3, label %if.then, label %if.end15, !dbg !3473

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %sa, metadata !3474, metadata !DIExpression()), !dbg !3524
  %3 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3525
  %call4 = call %struct.ScrArea* @CTX_wm_area(%struct.bContext* %3), !dbg !3526
  store %struct.ScrArea* %call4, %struct.ScrArea** %sa, align 8, !dbg !3524
  %4 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !3527
  %tobool5 = icmp ne %struct.ScrArea* %4, null, !dbg !3527
  br i1 %tobool5, label %land.lhs.true6, label %if.end14, !dbg !3529

land.lhs.true6:                                   ; preds = %if.then
  %5 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !3530
  %spacetype = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %5, i32 0, i32 8, !dbg !3531
  %6 = load i8, i8* %spacetype, align 8, !dbg !3531
  %conv = zext i8 %6 to i32, !dbg !3530
  %cmp = icmp eq i32 %conv, 1, !dbg !3532
  br i1 %cmp, label %if.then8, label %if.end14, !dbg !3533

if.then8:                                         ; preds = %land.lhs.true6
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar, metadata !3534, metadata !DIExpression()), !dbg !3606
  %7 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3607
  %call9 = call %struct.ARegion* @CTX_wm_region(%struct.bContext* %7), !dbg !3608
  store %struct.ARegion* %call9, %struct.ARegion** %ar, align 8, !dbg !3606
  %8 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !3609
  %regiontype = getelementptr inbounds %struct.ARegion, %struct.ARegion* %8, i32 0, i32 8, !dbg !3611
  %9 = load i16, i16* %regiontype, align 2, !dbg !3611
  %conv10 = sext i16 %9 to i32, !dbg !3609
  %cmp11 = icmp eq i32 %conv10, 0, !dbg !3612
  br i1 %cmp11, label %if.then13, label %if.end, !dbg !3613

if.then13:                                        ; preds = %if.then8
  store i32 1, i32* %retval, align 4, !dbg !3614
  br label %return, !dbg !3614

if.end:                                           ; preds = %if.then8
  br label %if.end14, !dbg !3615

if.end14:                                         ; preds = %if.end, %land.lhs.true6, %if.then
  br label %if.end15, !dbg !3616

if.end15:                                         ; preds = %if.end14, %land.lhs.true, %entry
  store i32 0, i32* %retval, align 4, !dbg !3617
  br label %return, !dbg !3617

return:                                           ; preds = %if.end15, %if.then13
  %10 = load i32, i32* %retval, align 4, !dbg !3618
  ret i32 %10, !dbg !3618
}

declare dso_local %struct.Brush* @BKE_paint_brush(%struct.Paint*) #2

declare dso_local %struct.ToolSettings* @CTX_data_tool_settings(%struct.bContext*) #2

declare dso_local %struct.ScrArea* @CTX_wm_area(%struct.bContext*) #2

declare dso_local %struct.ARegion* @CTX_wm_region(%struct.bContext*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @weight_paint_mode_poll(%struct.bContext* %C) #0 !dbg !3619 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %ob = alloca %struct.Object*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !3620, metadata !DIExpression()), !dbg !3621
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !3622, metadata !DIExpression()), !dbg !3623
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3624
  %call = call %struct.Object* @CTX_data_active_object(%struct.bContext* %0), !dbg !3625
  store %struct.Object* %call, %struct.Object** %ob, align 8, !dbg !3623
  %1 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !3626
  %tobool = icmp ne %struct.Object* %1, null, !dbg !3626
  br i1 %tobool, label %land.lhs.true, label %land.end, !dbg !3627

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !3628
  %mode = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 27, !dbg !3629
  %3 = load i32, i32* %mode, align 8, !dbg !3629
  %cmp = icmp eq i32 %3, 8, !dbg !3630
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !3631

land.rhs:                                         ; preds = %land.lhs.true
  %4 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !3632
  %data = getelementptr inbounds %struct.Object, %struct.Object* %4, i32 0, i32 19, !dbg !3633
  %5 = load i8*, i8** %data, align 8, !dbg !3633
  %6 = bitcast i8* %5 to %struct.Mesh*, !dbg !3634
  %totpoly = getelementptr inbounds %struct.Mesh, %struct.Mesh* %6, i32 0, i32 30, !dbg !3635
  %7 = load i32, i32* %totpoly, align 8, !dbg !3635
  %tobool1 = icmp ne i32 %7, 0, !dbg !3631
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %entry
  %8 = phi i1 [ false, %land.lhs.true ], [ false, %entry ], [ %tobool1, %land.rhs ], !dbg !3636
  %land.ext = zext i1 %8 to i32, !dbg !3631
  ret i32 %land.ext, !dbg !3637
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @weight_paint_poll(%struct.bContext* %C) #0 !dbg !3638 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %ob = alloca %struct.Object*, align 8
  %sa = alloca %struct.ScrArea*, align 8
  %ar = alloca %struct.ARegion*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !3639, metadata !DIExpression()), !dbg !3640
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !3641, metadata !DIExpression()), !dbg !3642
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3643
  %call = call %struct.Object* @CTX_data_active_object(%struct.bContext* %0), !dbg !3644
  store %struct.Object* %call, %struct.Object** %ob, align 8, !dbg !3642
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %sa, metadata !3645, metadata !DIExpression()), !dbg !3646
  %1 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !3647
  %cmp = icmp ne %struct.Object* %1, null, !dbg !3649
  br i1 %cmp, label %land.lhs.true, label %if.end16, !dbg !3650

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !3651
  %mode = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 27, !dbg !3652
  %3 = load i32, i32* %mode, align 8, !dbg !3652
  %and = and i32 %3, 8, !dbg !3653
  %tobool = icmp ne i32 %and, 0, !dbg !3653
  br i1 %tobool, label %land.lhs.true1, label %if.end16, !dbg !3654

land.lhs.true1:                                   ; preds = %land.lhs.true
  %4 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3655
  %call2 = call %struct.ToolSettings* @CTX_data_tool_settings(%struct.bContext* %4), !dbg !3656
  %wpaint = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %call2, i32 0, i32 1, !dbg !3657
  %5 = load %struct.VPaint*, %struct.VPaint** %wpaint, align 8, !dbg !3657
  %paint = getelementptr inbounds %struct.VPaint, %struct.VPaint* %5, i32 0, i32 0, !dbg !3658
  %call3 = call %struct.Brush* @BKE_paint_brush(%struct.Paint* %paint), !dbg !3659
  %cmp4 = icmp ne %struct.Brush* %call3, null, !dbg !3660
  br i1 %cmp4, label %land.lhs.true5, label %if.end16, !dbg !3661

land.lhs.true5:                                   ; preds = %land.lhs.true1
  %6 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3662
  %call6 = call %struct.ScrArea* @CTX_wm_area(%struct.bContext* %6), !dbg !3663
  store %struct.ScrArea* %call6, %struct.ScrArea** %sa, align 8, !dbg !3664
  %tobool7 = icmp ne %struct.ScrArea* %call6, null, !dbg !3664
  br i1 %tobool7, label %land.lhs.true8, label %if.end16, !dbg !3665

land.lhs.true8:                                   ; preds = %land.lhs.true5
  %7 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !3666
  %spacetype = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %7, i32 0, i32 8, !dbg !3667
  %8 = load i8, i8* %spacetype, align 8, !dbg !3667
  %conv = zext i8 %8 to i32, !dbg !3666
  %cmp9 = icmp eq i32 %conv, 1, !dbg !3668
  br i1 %cmp9, label %if.then, label %if.end16, !dbg !3669

if.then:                                          ; preds = %land.lhs.true8
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar, metadata !3670, metadata !DIExpression()), !dbg !3672
  %9 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3673
  %call11 = call %struct.ARegion* @CTX_wm_region(%struct.bContext* %9), !dbg !3674
  store %struct.ARegion* %call11, %struct.ARegion** %ar, align 8, !dbg !3672
  %10 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !3675
  %regiontype = getelementptr inbounds %struct.ARegion, %struct.ARegion* %10, i32 0, i32 8, !dbg !3677
  %11 = load i16, i16* %regiontype, align 2, !dbg !3677
  %conv12 = sext i16 %11 to i32, !dbg !3675
  %cmp13 = icmp eq i32 %conv12, 0, !dbg !3678
  br i1 %cmp13, label %if.then15, label %if.end, !dbg !3679

if.then15:                                        ; preds = %if.then
  store i32 1, i32* %retval, align 4, !dbg !3680
  br label %return, !dbg !3680

if.end:                                           ; preds = %if.then
  br label %if.end16, !dbg !3682

if.end16:                                         ; preds = %if.end, %land.lhs.true8, %land.lhs.true5, %land.lhs.true1, %land.lhs.true, %entry
  store i32 0, i32* %retval, align 4, !dbg !3683
  br label %return, !dbg !3683

return:                                           ; preds = %if.end16, %if.then15
  %12 = load i32, i32* %retval, align 4, !dbg !3684
  ret i32 %12, !dbg !3684
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @vpaint_get_current_col(%struct.Scene* %scene, %struct.VPaint* %vp) #0 !dbg !3685 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %vp.addr = alloca %struct.VPaint*, align 8
  %brush = alloca %struct.Brush*, align 8
  %col = alloca [4 x i8], align 1
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !3690, metadata !DIExpression()), !dbg !3691
  store %struct.VPaint* %vp, %struct.VPaint** %vp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VPaint** %vp.addr, metadata !3692, metadata !DIExpression()), !dbg !3693
  call void @llvm.dbg.declare(metadata %struct.Brush** %brush, metadata !3694, metadata !DIExpression()), !dbg !3697
  %0 = load %struct.VPaint*, %struct.VPaint** %vp.addr, align 8, !dbg !3698
  %paint = getelementptr inbounds %struct.VPaint, %struct.VPaint* %0, i32 0, i32 0, !dbg !3699
  %call = call %struct.Brush* @BKE_paint_brush(%struct.Paint* %paint), !dbg !3700
  store %struct.Brush* %call, %struct.Brush** %brush, align 8, !dbg !3697
  call void @llvm.dbg.declare(metadata [4 x i8]* %col, metadata !3701, metadata !DIExpression()), !dbg !3702
  %arraydecay = getelementptr inbounds [4 x i8], [4 x i8]* %col, i64 0, i64 0, !dbg !3703
  %1 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !3704
  %2 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !3705
  %call1 = call float* @BKE_brush_color_get(%struct.Scene* %1, %struct.Brush* %2), !dbg !3706
  call void @rgb_float_to_uchar(i8* %arraydecay, float* %call1), !dbg !3707
  %arrayidx = getelementptr inbounds [4 x i8], [4 x i8]* %col, i64 0, i64 3, !dbg !3708
  store i8 -1, i8* %arrayidx, align 1, !dbg !3709
  %arraydecay2 = getelementptr inbounds [4 x i8], [4 x i8]* %col, i64 0, i64 0, !dbg !3710
  %3 = bitcast i8* %arraydecay2 to i32*, !dbg !3710
  %4 = load i32, i32* %3, align 1, !dbg !3710
  ret i32 %4, !dbg !3711
}

declare dso_local void @rgb_float_to_uchar(i8*, float*) #2

declare dso_local float* @BKE_brush_color_get(%struct.Scene*, %struct.Brush*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @ED_vpaint_fill(%struct.Object* %ob, i32 %paintcol) #0 !dbg !3712 {
entry:
  %retval = alloca i8, align 1
  %ob.addr = alloca %struct.Object*, align 8
  %paintcol.addr = alloca i32, align 4
  %me = alloca %struct.Mesh*, align 8
  %mp = alloca %struct.MPoly*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %selected = alloca i8, align 1
  %lcol = alloca %struct.MLoopCol*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !3715, metadata !DIExpression()), !dbg !3716
  store i32 %paintcol, i32* %paintcol.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %paintcol.addr, metadata !3717, metadata !DIExpression()), !dbg !3718
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me, metadata !3719, metadata !DIExpression()), !dbg !3720
  call void @llvm.dbg.declare(metadata %struct.MPoly** %mp, metadata !3721, metadata !DIExpression()), !dbg !3722
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3723, metadata !DIExpression()), !dbg !3724
  call void @llvm.dbg.declare(metadata i32* %j, metadata !3725, metadata !DIExpression()), !dbg !3726
  call void @llvm.dbg.declare(metadata i8* %selected, metadata !3727, metadata !DIExpression()), !dbg !3728
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3729
  %call = call %struct.Mesh* @BKE_mesh_from_object(%struct.Object* %0), !dbg !3731
  store %struct.Mesh* %call, %struct.Mesh** %me, align 8, !dbg !3732
  %cmp = icmp eq %struct.Mesh* %call, null, !dbg !3733
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !3734

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !3735
  %mloopcol = getelementptr inbounds %struct.Mesh, %struct.Mesh* %1, i32 0, i32 11, !dbg !3736
  %2 = load %struct.MLoopCol*, %struct.MLoopCol** %mloopcol, align 8, !dbg !3736
  %cmp1 = icmp eq %struct.MLoopCol* %2, null, !dbg !3737
  br i1 %cmp1, label %land.lhs.true, label %if.end, !dbg !3738

land.lhs.true:                                    ; preds = %lor.lhs.false
  %3 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3739
  %call2 = call zeroext i8 @make_vertexcol(%struct.Object* %3), !dbg !3740
  %conv = zext i8 %call2 to i32, !dbg !3740
  %cmp3 = icmp eq i32 %conv, 0, !dbg !3741
  br i1 %cmp3, label %if.then, label %if.end, !dbg !3742

if.then:                                          ; preds = %land.lhs.true, %entry
  store i8 0, i8* %retval, align 1, !dbg !3743
  br label %return, !dbg !3743

if.end:                                           ; preds = %land.lhs.true, %lor.lhs.false
  %4 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !3745
  %editflag = getelementptr inbounds %struct.Mesh, %struct.Mesh* %4, i32 0, i32 46, !dbg !3746
  %5 = load i8, i8* %editflag, align 1, !dbg !3746
  %conv5 = zext i8 %5 to i32, !dbg !3745
  %and = and i32 %conv5, 8, !dbg !3747
  %cmp6 = icmp ne i32 %and, 0, !dbg !3748
  %conv7 = zext i1 %cmp6 to i32, !dbg !3748
  %conv8 = trunc i32 %conv7 to i8, !dbg !3749
  store i8 %conv8, i8* %selected, align 1, !dbg !3750
  %6 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !3751
  %mpoly = getelementptr inbounds %struct.Mesh, %struct.Mesh* %6, i32 0, i32 7, !dbg !3752
  %7 = load %struct.MPoly*, %struct.MPoly** %mpoly, align 8, !dbg !3752
  store %struct.MPoly* %7, %struct.MPoly** %mp, align 8, !dbg !3753
  store i32 0, i32* %i, align 4, !dbg !3754
  br label %for.cond, !dbg !3756

for.cond:                                         ; preds = %for.inc23, %if.end
  %8 = load i32, i32* %i, align 4, !dbg !3757
  %9 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !3759
  %totpoly = getelementptr inbounds %struct.Mesh, %struct.Mesh* %9, i32 0, i32 30, !dbg !3760
  %10 = load i32, i32* %totpoly, align 8, !dbg !3760
  %cmp9 = icmp slt i32 %8, %10, !dbg !3761
  br i1 %cmp9, label %for.body, label %for.end26, !dbg !3762

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.MLoopCol** %lcol, metadata !3763, metadata !DIExpression()), !dbg !3767
  %11 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !3768
  %mloopcol11 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %11, i32 0, i32 11, !dbg !3769
  %12 = load %struct.MLoopCol*, %struct.MLoopCol** %mloopcol11, align 8, !dbg !3769
  %13 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !3770
  %loopstart = getelementptr inbounds %struct.MPoly, %struct.MPoly* %13, i32 0, i32 0, !dbg !3771
  %14 = load i32, i32* %loopstart, align 4, !dbg !3771
  %idx.ext = sext i32 %14 to i64, !dbg !3772
  %add.ptr = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %12, i64 %idx.ext, !dbg !3772
  store %struct.MLoopCol* %add.ptr, %struct.MLoopCol** %lcol, align 8, !dbg !3767
  %15 = load i8, i8* %selected, align 1, !dbg !3773
  %conv12 = zext i8 %15 to i32, !dbg !3773
  %tobool = icmp ne i32 %conv12, 0, !dbg !3773
  br i1 %tobool, label %land.lhs.true13, label %if.end18, !dbg !3775

land.lhs.true13:                                  ; preds = %for.body
  %16 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !3776
  %flag = getelementptr inbounds %struct.MPoly, %struct.MPoly* %16, i32 0, i32 3, !dbg !3777
  %17 = load i8, i8* %flag, align 2, !dbg !3777
  %conv14 = zext i8 %17 to i32, !dbg !3776
  %and15 = and i32 %conv14, 2, !dbg !3778
  %tobool16 = icmp ne i32 %and15, 0, !dbg !3778
  br i1 %tobool16, label %if.end18, label %if.then17, !dbg !3779

if.then17:                                        ; preds = %land.lhs.true13
  br label %for.inc23, !dbg !3780

if.end18:                                         ; preds = %land.lhs.true13, %for.body
  store i32 0, i32* %j, align 4, !dbg !3781
  br label %for.cond19, !dbg !3783

for.cond19:                                       ; preds = %for.inc, %if.end18
  %18 = load i32, i32* %j, align 4, !dbg !3784
  %19 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !3786
  %totloop = getelementptr inbounds %struct.MPoly, %struct.MPoly* %19, i32 0, i32 1, !dbg !3787
  %20 = load i32, i32* %totloop, align 4, !dbg !3787
  %cmp20 = icmp slt i32 %18, %20, !dbg !3788
  br i1 %cmp20, label %for.body22, label %for.end, !dbg !3789

for.body22:                                       ; preds = %for.cond19
  %21 = load i32, i32* %paintcol.addr, align 4, !dbg !3790
  %22 = load %struct.MLoopCol*, %struct.MLoopCol** %lcol, align 8, !dbg !3792
  %23 = bitcast %struct.MLoopCol* %22 to i32*, !dbg !3793
  store i32 %21, i32* %23, align 4, !dbg !3794
  br label %for.inc, !dbg !3795

for.inc:                                          ; preds = %for.body22
  %24 = load i32, i32* %j, align 4, !dbg !3796
  %inc = add nsw i32 %24, 1, !dbg !3796
  store i32 %inc, i32* %j, align 4, !dbg !3796
  %25 = load %struct.MLoopCol*, %struct.MLoopCol** %lcol, align 8, !dbg !3797
  %incdec.ptr = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %25, i32 1, !dbg !3797
  store %struct.MLoopCol* %incdec.ptr, %struct.MLoopCol** %lcol, align 8, !dbg !3797
  br label %for.cond19, !dbg !3798, !llvm.loop !3799

for.end:                                          ; preds = %for.cond19
  br label %for.inc23, !dbg !3801

for.inc23:                                        ; preds = %for.end, %if.then17
  %26 = load i32, i32* %i, align 4, !dbg !3802
  %inc24 = add nsw i32 %26, 1, !dbg !3802
  store i32 %inc24, i32* %i, align 4, !dbg !3802
  %27 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !3803
  %incdec.ptr25 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %27, i32 1, !dbg !3803
  store %struct.MPoly* %incdec.ptr25, %struct.MPoly** %mp, align 8, !dbg !3803
  br label %for.cond, !dbg !3804, !llvm.loop !3805

for.end26:                                        ; preds = %for.cond
  %28 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !3807
  call void @BKE_mesh_tessface_clear(%struct.Mesh* %28), !dbg !3808
  %29 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !3809
  %id = getelementptr inbounds %struct.Mesh, %struct.Mesh* %29, i32 0, i32 0, !dbg !3810
  call void @DAG_id_tag_update(%struct.ID* %id, i16 signext 0), !dbg !3811
  store i8 1, i8* %retval, align 1, !dbg !3812
  br label %return, !dbg !3812

return:                                           ; preds = %for.end26, %if.then
  %30 = load i8, i8* %retval, align 1, !dbg !3813
  ret i8 %30, !dbg !3813
}

declare dso_local %struct.Mesh* @BKE_mesh_from_object(%struct.Object*) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @make_vertexcol(%struct.Object* %ob) #0 !dbg !3814 {
entry:
  %retval = alloca i8, align 1
  %ob.addr = alloca %struct.Object*, align 8
  %me = alloca %struct.Mesh*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !3817, metadata !DIExpression()), !dbg !3818
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me, metadata !3819, metadata !DIExpression()), !dbg !3820
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3821
  %id = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 0, !dbg !3823
  %lib = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 3, !dbg !3824
  %1 = load %struct.Library*, %struct.Library** %lib, align 8, !dbg !3824
  %tobool = icmp ne %struct.Library* %1, null, !dbg !3825
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !3826

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3827
  %call = call %struct.Mesh* @BKE_mesh_from_object(%struct.Object* %2), !dbg !3828
  store %struct.Mesh* %call, %struct.Mesh** %me, align 8, !dbg !3829
  %cmp = icmp eq %struct.Mesh* %call, null, !dbg !3830
  br i1 %cmp, label %if.then, label %lor.lhs.false1, !dbg !3831

lor.lhs.false1:                                   ; preds = %lor.lhs.false
  %3 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !3832
  %totpoly = getelementptr inbounds %struct.Mesh, %struct.Mesh* %3, i32 0, i32 30, !dbg !3833
  %4 = load i32, i32* %totpoly, align 8, !dbg !3833
  %cmp2 = icmp eq i32 %4, 0, !dbg !3834
  br i1 %cmp2, label %if.then, label %lor.lhs.false3, !dbg !3835

lor.lhs.false3:                                   ; preds = %lor.lhs.false1
  %5 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !3836
  %edit_btmesh = getelementptr inbounds %struct.Mesh, %struct.Mesh* %5, i32 0, i32 20, !dbg !3837
  %6 = load %struct.BMEditMesh*, %struct.BMEditMesh** %edit_btmesh, align 8, !dbg !3837
  %tobool4 = icmp ne %struct.BMEditMesh* %6, null, !dbg !3838
  br i1 %tobool4, label %if.then, label %if.end, !dbg !3839

if.then:                                          ; preds = %lor.lhs.false3, %lor.lhs.false1, %lor.lhs.false, %entry
  store i8 0, i8* %retval, align 1, !dbg !3840
  br label %return, !dbg !3840

if.end:                                           ; preds = %lor.lhs.false3
  %7 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !3842
  %mloopcol = getelementptr inbounds %struct.Mesh, %struct.Mesh* %7, i32 0, i32 11, !dbg !3844
  %8 = load %struct.MLoopCol*, %struct.MLoopCol** %mloopcol, align 8, !dbg !3844
  %tobool5 = icmp ne %struct.MLoopCol* %8, null, !dbg !3842
  br i1 %tobool5, label %if.end18, label %land.lhs.true, !dbg !3845

land.lhs.true:                                    ; preds = %if.end
  %9 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !3846
  %totloop = getelementptr inbounds %struct.Mesh, %struct.Mesh* %9, i32 0, i32 31, !dbg !3847
  %10 = load i32, i32* %totloop, align 4, !dbg !3847
  %tobool6 = icmp ne i32 %10, 0, !dbg !3846
  br i1 %tobool6, label %if.then7, label %if.end18, !dbg !3848

if.then7:                                         ; preds = %land.lhs.true
  %11 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !3849
  %mcol = getelementptr inbounds %struct.Mesh, %struct.Mesh* %11, i32 0, i32 18, !dbg !3852
  %12 = load %struct.MCol*, %struct.MCol** %mcol, align 8, !dbg !3852
  %tobool8 = icmp ne %struct.MCol* %12, null, !dbg !3849
  br i1 %tobool8, label %if.end11, label %if.then9, !dbg !3853

if.then9:                                         ; preds = %if.then7
  %13 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !3854
  %fdata = getelementptr inbounds %struct.Mesh, %struct.Mesh* %13, i32 0, i32 23, !dbg !3856
  %14 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !3857
  %totface = getelementptr inbounds %struct.Mesh, %struct.Mesh* %14, i32 0, i32 28, !dbg !3858
  %15 = load i32, i32* %totface, align 8, !dbg !3858
  %call10 = call i8* @CustomData_add_layer(%struct.CustomData* %fdata, i32 6, i32 2, i8* null, i32 %15), !dbg !3859
  br label %if.end11, !dbg !3860

if.end11:                                         ; preds = %if.then9, %if.then7
  %16 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !3861
  %mloopcol12 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %16, i32 0, i32 11, !dbg !3863
  %17 = load %struct.MLoopCol*, %struct.MLoopCol** %mloopcol12, align 8, !dbg !3863
  %tobool13 = icmp ne %struct.MLoopCol* %17, null, !dbg !3861
  br i1 %tobool13, label %if.end17, label %if.then14, !dbg !3864

if.then14:                                        ; preds = %if.end11
  %18 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !3865
  %ldata = getelementptr inbounds %struct.Mesh, %struct.Mesh* %18, i32 0, i32 25, !dbg !3867
  %19 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !3868
  %totloop15 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %19, i32 0, i32 31, !dbg !3869
  %20 = load i32, i32* %totloop15, align 4, !dbg !3869
  %call16 = call i8* @CustomData_add_layer(%struct.CustomData* %ldata, i32 17, i32 2, i8* null, i32 %20), !dbg !3870
  br label %if.end17, !dbg !3871

if.end17:                                         ; preds = %if.then14, %if.end11
  %21 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !3872
  call void @BKE_mesh_update_customdata_pointers(%struct.Mesh* %21, i8 zeroext 1), !dbg !3873
  br label %if.end18, !dbg !3874

if.end18:                                         ; preds = %if.end17, %land.lhs.true, %if.end
  %22 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3875
  %23 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !3876
  call void @update_tessface_data(%struct.Object* %22, %struct.Mesh* %23), !dbg !3877
  %24 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !3878
  %id19 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %24, i32 0, i32 0, !dbg !3879
  call void @DAG_id_tag_update(%struct.ID* %id19, i16 signext 0), !dbg !3880
  %25 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !3881
  %mloopcol20 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %25, i32 0, i32 11, !dbg !3882
  %26 = load %struct.MLoopCol*, %struct.MLoopCol** %mloopcol20, align 8, !dbg !3882
  %cmp21 = icmp ne %struct.MLoopCol* %26, null, !dbg !3883
  %conv = zext i1 %cmp21 to i32, !dbg !3883
  %conv22 = trunc i32 %conv to i8, !dbg !3884
  store i8 %conv22, i8* %retval, align 1, !dbg !3885
  br label %return, !dbg !3885

return:                                           ; preds = %if.end18, %if.then
  %27 = load i8, i8* %retval, align 1, !dbg !3886
  ret i8 %27, !dbg !3886
}

declare dso_local void @BKE_mesh_tessface_clear(%struct.Mesh*) #2

declare dso_local void @DAG_id_tag_update(%struct.ID*, i16 signext) #2

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @ED_wpaint_fill(%struct.VPaint* %wp, %struct.Object* %ob, float %paintweight) #0 !dbg !3887 {
entry:
  %retval = alloca i8, align 1
  %wp.addr = alloca %struct.VPaint*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %paintweight.addr = alloca float, align 4
  %me = alloca %struct.Mesh*, align 8
  %mp = alloca %struct.MPoly*, align 8
  %dw = alloca %struct.MDeformWeight*, align 8
  %dw_prev = alloca %struct.MDeformWeight*, align 8
  %vgroup_active = alloca i32, align 4
  %vgroup_mirror = alloca i32, align 4
  %index = alloca i32, align 4
  %topology = alloca i8, align 1
  %paint_selmode = alloca i16, align 2
  %fidx = alloca i32, align 4
  %vidx = alloca i32, align 4
  %j = alloca i32, align 4
  %dv = alloca %struct.MDeformVert*, align 8
  store %struct.VPaint* %wp, %struct.VPaint** %wp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VPaint** %wp.addr, metadata !3890, metadata !DIExpression()), !dbg !3891
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !3892, metadata !DIExpression()), !dbg !3893
  store float %paintweight, float* %paintweight.addr, align 4
  call void @llvm.dbg.declare(metadata float* %paintweight.addr, metadata !3894, metadata !DIExpression()), !dbg !3895
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me, metadata !3896, metadata !DIExpression()), !dbg !3897
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3898
  %data = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 19, !dbg !3899
  %1 = load i8*, i8** %data, align 8, !dbg !3899
  %2 = bitcast i8* %1 to %struct.Mesh*, !dbg !3898
  store %struct.Mesh* %2, %struct.Mesh** %me, align 8, !dbg !3897
  call void @llvm.dbg.declare(metadata %struct.MPoly** %mp, metadata !3900, metadata !DIExpression()), !dbg !3901
  call void @llvm.dbg.declare(metadata %struct.MDeformWeight** %dw, metadata !3902, metadata !DIExpression()), !dbg !3903
  call void @llvm.dbg.declare(metadata %struct.MDeformWeight** %dw_prev, metadata !3904, metadata !DIExpression()), !dbg !3905
  call void @llvm.dbg.declare(metadata i32* %vgroup_active, metadata !3906, metadata !DIExpression()), !dbg !3907
  call void @llvm.dbg.declare(metadata i32* %vgroup_mirror, metadata !3908, metadata !DIExpression()), !dbg !3909
  store i32 -1, i32* %vgroup_mirror, align 4, !dbg !3909
  call void @llvm.dbg.declare(metadata i32* %index, metadata !3910, metadata !DIExpression()), !dbg !3911
  call void @llvm.dbg.declare(metadata i8* %topology, metadata !3912, metadata !DIExpression()), !dbg !3913
  %3 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !3914
  %editflag = getelementptr inbounds %struct.Mesh, %struct.Mesh* %3, i32 0, i32 46, !dbg !3915
  %4 = load i8, i8* %editflag, align 1, !dbg !3915
  %conv = zext i8 %4 to i32, !dbg !3914
  %and = and i32 %conv, 16, !dbg !3916
  %cmp = icmp ne i32 %and, 0, !dbg !3917
  %conv1 = zext i1 %cmp to i32, !dbg !3917
  %conv2 = trunc i32 %conv1 to i8, !dbg !3918
  store i8 %conv2, i8* %topology, align 1, !dbg !3913
  call void @llvm.dbg.declare(metadata i16* %paint_selmode, metadata !3919, metadata !DIExpression()), !dbg !3920
  %5 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !3921
  %editflag3 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %5, i32 0, i32 46, !dbg !3921
  %6 = load i8, i8* %editflag3, align 1, !dbg !3921
  %conv4 = zext i8 %6 to i32, !dbg !3921
  %and5 = and i32 %conv4, 8, !dbg !3921
  %tobool = icmp ne i32 %and5, 0, !dbg !3921
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !3921

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !3921

cond.false:                                       ; preds = %entry
  %7 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !3921
  %editflag6 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %7, i32 0, i32 46, !dbg !3921
  %8 = load i8, i8* %editflag6, align 1, !dbg !3921
  %conv7 = zext i8 %8 to i32, !dbg !3921
  %and8 = and i32 %conv7, 32, !dbg !3921
  %tobool9 = icmp ne i32 %and8, 0, !dbg !3921
  %9 = zext i1 %tobool9 to i64, !dbg !3921
  %cond = select i1 %tobool9, i32 1, i32 0, !dbg !3921
  br label %cond.end, !dbg !3921

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond10 = phi i32 [ 4, %cond.true ], [ %cond, %cond.false ], !dbg !3921
  %conv11 = trunc i32 %cond10 to i16, !dbg !3921
  store i16 %conv11, i16* %paint_selmode, align 2, !dbg !3920
  %10 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !3922
  %totpoly = getelementptr inbounds %struct.Mesh, %struct.Mesh* %10, i32 0, i32 30, !dbg !3924
  %11 = load i32, i32* %totpoly, align 8, !dbg !3924
  %cmp12 = icmp eq i32 %11, 0, !dbg !3925
  br i1 %cmp12, label %if.then, label %lor.lhs.false, !dbg !3926

lor.lhs.false:                                    ; preds = %cond.end
  %12 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !3927
  %dvert = getelementptr inbounds %struct.Mesh, %struct.Mesh* %12, i32 0, i32 17, !dbg !3928
  %13 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert, align 8, !dbg !3928
  %cmp14 = icmp eq %struct.MDeformVert* %13, null, !dbg !3929
  br i1 %cmp14, label %if.then, label %lor.lhs.false16, !dbg !3930

lor.lhs.false16:                                  ; preds = %lor.lhs.false
  %14 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !3931
  %mpoly = getelementptr inbounds %struct.Mesh, %struct.Mesh* %14, i32 0, i32 7, !dbg !3932
  %15 = load %struct.MPoly*, %struct.MPoly** %mpoly, align 8, !dbg !3932
  %tobool17 = icmp ne %struct.MPoly* %15, null, !dbg !3931
  br i1 %tobool17, label %if.end, label %if.then, !dbg !3933

if.then:                                          ; preds = %lor.lhs.false16, %lor.lhs.false, %cond.end
  store i8 0, i8* %retval, align 1, !dbg !3934
  br label %return, !dbg !3934

if.end:                                           ; preds = %lor.lhs.false16
  %16 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3936
  %actdef = getelementptr inbounds %struct.Object, %struct.Object* %16, i32 0, i32 97, !dbg !3937
  %17 = load i16, i16* %actdef, align 2, !dbg !3937
  %conv18 = zext i16 %17 to i32, !dbg !3936
  %sub = sub nsw i32 %conv18, 1, !dbg !3938
  store i32 %sub, i32* %vgroup_active, align 4, !dbg !3939
  %18 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !3940
  %editflag19 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %18, i32 0, i32 46, !dbg !3942
  %19 = load i8, i8* %editflag19, align 1, !dbg !3942
  %conv20 = zext i8 %19 to i32, !dbg !3940
  %and21 = and i32 %conv20, 1, !dbg !3943
  %tobool22 = icmp ne i32 %and21, 0, !dbg !3943
  br i1 %tobool22, label %if.then23, label %if.end24, !dbg !3944

if.then23:                                        ; preds = %if.end
  %20 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3945
  %21 = load i32, i32* %vgroup_active, align 4, !dbg !3947
  %call = call i32 @wpaint_mirror_vgroup_ensure(%struct.Object* %20, i32 %21), !dbg !3948
  store i32 %call, i32* %vgroup_mirror, align 4, !dbg !3949
  br label %if.end24, !dbg !3950

if.end24:                                         ; preds = %if.then23, %if.end
  %22 = load %struct.VPaint*, %struct.VPaint** %wp.addr, align 8, !dbg !3951
  %23 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !3952
  %dvert25 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %23, i32 0, i32 17, !dbg !3953
  %24 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert25, align 8, !dbg !3953
  %25 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !3954
  %totvert = getelementptr inbounds %struct.Mesh, %struct.Mesh* %25, i32 0, i32 26, !dbg !3955
  %26 = load i32, i32* %totvert, align 8, !dbg !3955
  call void @copy_wpaint_prev(%struct.VPaint* %22, %struct.MDeformVert* %24, i32 %26), !dbg !3956
  store i32 0, i32* %index, align 4, !dbg !3957
  %27 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !3959
  %mpoly26 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %27, i32 0, i32 7, !dbg !3960
  %28 = load %struct.MPoly*, %struct.MPoly** %mpoly26, align 8, !dbg !3960
  store %struct.MPoly* %28, %struct.MPoly** %mp, align 8, !dbg !3961
  br label %for.cond, !dbg !3962

for.cond:                                         ; preds = %for.inc, %if.end24
  %29 = load i32, i32* %index, align 4, !dbg !3963
  %30 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !3965
  %totpoly27 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %30, i32 0, i32 30, !dbg !3966
  %31 = load i32, i32* %totpoly27, align 8, !dbg !3966
  %cmp28 = icmp ult i32 %29, %31, !dbg !3967
  br i1 %cmp28, label %for.body, label %for.end, !dbg !3968

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %fidx, metadata !3969, metadata !DIExpression()), !dbg !3971
  %32 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !3972
  %totloop = getelementptr inbounds %struct.MPoly, %struct.MPoly* %32, i32 0, i32 1, !dbg !3973
  %33 = load i32, i32* %totloop, align 4, !dbg !3973
  %sub30 = sub nsw i32 %33, 1, !dbg !3974
  store i32 %sub30, i32* %fidx, align 4, !dbg !3971
  %34 = load i16, i16* %paint_selmode, align 2, !dbg !3975
  %conv31 = sext i16 %34 to i32, !dbg !3975
  %cmp32 = icmp eq i32 %conv31, 4, !dbg !3977
  br i1 %cmp32, label %land.lhs.true, label %if.end38, !dbg !3978

land.lhs.true:                                    ; preds = %for.body
  %35 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !3979
  %flag = getelementptr inbounds %struct.MPoly, %struct.MPoly* %35, i32 0, i32 3, !dbg !3980
  %36 = load i8, i8* %flag, align 2, !dbg !3980
  %conv34 = zext i8 %36 to i32, !dbg !3979
  %and35 = and i32 %conv34, 2, !dbg !3981
  %tobool36 = icmp ne i32 %and35, 0, !dbg !3981
  br i1 %tobool36, label %if.end38, label %if.then37, !dbg !3982

if.then37:                                        ; preds = %land.lhs.true
  br label %for.inc, !dbg !3983

if.end38:                                         ; preds = %land.lhs.true, %for.body
  br label %do.body, !dbg !3985

do.body:                                          ; preds = %do.cond, %if.end38
  call void @llvm.dbg.declare(metadata i32* %vidx, metadata !3986, metadata !DIExpression()), !dbg !3988
  %37 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !3989
  %mloop = getelementptr inbounds %struct.Mesh, %struct.Mesh* %37, i32 0, i32 9, !dbg !3990
  %38 = load %struct.MLoop*, %struct.MLoop** %mloop, align 8, !dbg !3990
  %39 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !3991
  %loopstart = getelementptr inbounds %struct.MPoly, %struct.MPoly* %39, i32 0, i32 0, !dbg !3992
  %40 = load i32, i32* %loopstart, align 4, !dbg !3992
  %41 = load i32, i32* %fidx, align 4, !dbg !3993
  %add = add i32 %40, %41, !dbg !3994
  %idxprom = zext i32 %add to i64, !dbg !3989
  %arrayidx = getelementptr inbounds %struct.MLoop, %struct.MLoop* %38, i64 %idxprom, !dbg !3989
  %v = getelementptr inbounds %struct.MLoop, %struct.MLoop* %arrayidx, i32 0, i32 0, !dbg !3995
  %42 = load i32, i32* %v, align 4, !dbg !3995
  store i32 %42, i32* %vidx, align 4, !dbg !3988
  %43 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !3996
  %dvert39 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %43, i32 0, i32 17, !dbg !3998
  %44 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert39, align 8, !dbg !3998
  %45 = load i32, i32* %vidx, align 4, !dbg !3999
  %idxprom40 = zext i32 %45 to i64, !dbg !3996
  %arrayidx41 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %44, i64 %idxprom40, !dbg !3996
  %flag42 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %arrayidx41, i32 0, i32 2, !dbg !4000
  %46 = load i32, i32* %flag42, align 4, !dbg !4000
  %tobool43 = icmp ne i32 %46, 0, !dbg !3996
  br i1 %tobool43, label %if.end105, label %if.then44, !dbg !4001

if.then44:                                        ; preds = %do.body
  %47 = load i16, i16* %paint_selmode, align 2, !dbg !4002
  %conv45 = sext i16 %47 to i32, !dbg !4002
  %cmp46 = icmp eq i32 %conv45, 1, !dbg !4005
  br i1 %cmp46, label %land.lhs.true48, label %if.end56, !dbg !4006

land.lhs.true48:                                  ; preds = %if.then44
  %48 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !4007
  %mvert = getelementptr inbounds %struct.Mesh, %struct.Mesh* %48, i32 0, i32 15, !dbg !4008
  %49 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !4008
  %50 = load i32, i32* %vidx, align 4, !dbg !4009
  %idxprom49 = zext i32 %50 to i64, !dbg !4007
  %arrayidx50 = getelementptr inbounds %struct.MVert, %struct.MVert* %49, i64 %idxprom49, !dbg !4007
  %flag51 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx50, i32 0, i32 2, !dbg !4010
  %51 = load i8, i8* %flag51, align 2, !dbg !4010
  %conv52 = zext i8 %51 to i32, !dbg !4007
  %and53 = and i32 %conv52, 1, !dbg !4011
  %tobool54 = icmp ne i32 %and53, 0, !dbg !4011
  br i1 %tobool54, label %if.end56, label %if.then55, !dbg !4012

if.then55:                                        ; preds = %land.lhs.true48
  br label %do.cond, !dbg !4013

if.end56:                                         ; preds = %land.lhs.true48, %if.then44
  %52 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !4015
  %dvert57 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %52, i32 0, i32 17, !dbg !4016
  %53 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert57, align 8, !dbg !4016
  %54 = load i32, i32* %vidx, align 4, !dbg !4017
  %idxprom58 = zext i32 %54 to i64, !dbg !4015
  %arrayidx59 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %53, i64 %idxprom58, !dbg !4015
  %55 = load i32, i32* %vgroup_active, align 4, !dbg !4018
  %call60 = call %struct.MDeformWeight* @defvert_verify_index(%struct.MDeformVert* %arrayidx59, i32 %55), !dbg !4019
  store %struct.MDeformWeight* %call60, %struct.MDeformWeight** %dw, align 8, !dbg !4020
  %56 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !4021
  %tobool61 = icmp ne %struct.MDeformWeight* %56, null, !dbg !4021
  br i1 %tobool61, label %if.then62, label %if.end100, !dbg !4023

if.then62:                                        ; preds = %if.end56
  %57 = load %struct.VPaint*, %struct.VPaint** %wp.addr, align 8, !dbg !4024
  %wpaint_prev = getelementptr inbounds %struct.VPaint, %struct.VPaint* %57, i32 0, i32 5, !dbg !4026
  %58 = load %struct.MDeformVert*, %struct.MDeformVert** %wpaint_prev, align 8, !dbg !4026
  %59 = load i32, i32* %vidx, align 4, !dbg !4027
  %idx.ext = zext i32 %59 to i64, !dbg !4028
  %add.ptr = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %58, i64 %idx.ext, !dbg !4028
  %60 = load i32, i32* %vgroup_active, align 4, !dbg !4029
  %call63 = call %struct.MDeformWeight* @defvert_verify_index(%struct.MDeformVert* %add.ptr, i32 %60), !dbg !4030
  store %struct.MDeformWeight* %call63, %struct.MDeformWeight** %dw_prev, align 8, !dbg !4031
  %61 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !4032
  %weight = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %61, i32 0, i32 1, !dbg !4033
  %62 = load float, float* %weight, align 4, !dbg !4033
  %63 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw_prev, align 8, !dbg !4034
  %weight64 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %63, i32 0, i32 1, !dbg !4035
  store float %62, float* %weight64, align 4, !dbg !4036
  %64 = load float, float* %paintweight.addr, align 4, !dbg !4037
  %65 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !4038
  %weight65 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %65, i32 0, i32 1, !dbg !4039
  store float %64, float* %weight65, align 4, !dbg !4040
  %66 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !4041
  %editflag66 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %66, i32 0, i32 46, !dbg !4043
  %67 = load i8, i8* %editflag66, align 1, !dbg !4043
  %conv67 = zext i8 %67 to i32, !dbg !4041
  %and68 = and i32 %conv67, 1, !dbg !4044
  %tobool69 = icmp ne i32 %and68, 0, !dbg !4044
  br i1 %tobool69, label %if.then70, label %if.end99, !dbg !4045

if.then70:                                        ; preds = %if.then62
  call void @llvm.dbg.declare(metadata i32* %j, metadata !4046, metadata !DIExpression()), !dbg !4048
  %68 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4049
  %69 = load i32, i32* %vidx, align 4, !dbg !4050
  %70 = load i8, i8* %topology, align 1, !dbg !4051
  %call71 = call i32 @mesh_get_x_mirror_vert(%struct.Object* %68, i32 %69, i8 zeroext %70), !dbg !4052
  store i32 %call71, i32* %j, align 4, !dbg !4048
  %71 = load i32, i32* %j, align 4, !dbg !4053
  %cmp72 = icmp sge i32 %71, 0, !dbg !4055
  br i1 %cmp72, label %if.then74, label %if.end98, !dbg !4056

if.then74:                                        ; preds = %if.then70
  %72 = load i32, i32* %vgroup_mirror, align 4, !dbg !4057
  %cmp75 = icmp ne i32 %72, -1, !dbg !4060
  br i1 %cmp75, label %if.then77, label %if.else, !dbg !4061

if.then77:                                        ; preds = %if.then74
  %73 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !4062
  %dvert78 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %73, i32 0, i32 17, !dbg !4064
  %74 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert78, align 8, !dbg !4064
  %75 = load i32, i32* %j, align 4, !dbg !4065
  %idx.ext79 = sext i32 %75 to i64, !dbg !4066
  %add.ptr80 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %74, i64 %idx.ext79, !dbg !4066
  %76 = load i32, i32* %vgroup_mirror, align 4, !dbg !4067
  %call81 = call %struct.MDeformWeight* @defvert_verify_index(%struct.MDeformVert* %add.ptr80, i32 %76), !dbg !4068
  store %struct.MDeformWeight* %call81, %struct.MDeformWeight** %dw, align 8, !dbg !4069
  %77 = load %struct.VPaint*, %struct.VPaint** %wp.addr, align 8, !dbg !4070
  %wpaint_prev82 = getelementptr inbounds %struct.VPaint, %struct.VPaint* %77, i32 0, i32 5, !dbg !4071
  %78 = load %struct.MDeformVert*, %struct.MDeformVert** %wpaint_prev82, align 8, !dbg !4071
  %79 = load i32, i32* %j, align 4, !dbg !4072
  %idx.ext83 = sext i32 %79 to i64, !dbg !4073
  %add.ptr84 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %78, i64 %idx.ext83, !dbg !4073
  %80 = load i32, i32* %vgroup_mirror, align 4, !dbg !4074
  %call85 = call %struct.MDeformWeight* @defvert_verify_index(%struct.MDeformVert* %add.ptr84, i32 %80), !dbg !4075
  store %struct.MDeformWeight* %call85, %struct.MDeformWeight** %dw_prev, align 8, !dbg !4076
  br label %if.end94, !dbg !4077

if.else:                                          ; preds = %if.then74
  %81 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !4078
  %dvert86 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %81, i32 0, i32 17, !dbg !4080
  %82 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert86, align 8, !dbg !4080
  %83 = load i32, i32* %j, align 4, !dbg !4081
  %idx.ext87 = sext i32 %83 to i64, !dbg !4082
  %add.ptr88 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %82, i64 %idx.ext87, !dbg !4082
  %84 = load i32, i32* %vgroup_active, align 4, !dbg !4083
  %call89 = call %struct.MDeformWeight* @defvert_verify_index(%struct.MDeformVert* %add.ptr88, i32 %84), !dbg !4084
  store %struct.MDeformWeight* %call89, %struct.MDeformWeight** %dw, align 8, !dbg !4085
  %85 = load %struct.VPaint*, %struct.VPaint** %wp.addr, align 8, !dbg !4086
  %wpaint_prev90 = getelementptr inbounds %struct.VPaint, %struct.VPaint* %85, i32 0, i32 5, !dbg !4087
  %86 = load %struct.MDeformVert*, %struct.MDeformVert** %wpaint_prev90, align 8, !dbg !4087
  %87 = load i32, i32* %j, align 4, !dbg !4088
  %idx.ext91 = sext i32 %87 to i64, !dbg !4089
  %add.ptr92 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %86, i64 %idx.ext91, !dbg !4089
  %88 = load i32, i32* %vgroup_active, align 4, !dbg !4090
  %call93 = call %struct.MDeformWeight* @defvert_verify_index(%struct.MDeformVert* %add.ptr92, i32 %88), !dbg !4091
  store %struct.MDeformWeight* %call93, %struct.MDeformWeight** %dw_prev, align 8, !dbg !4092
  br label %if.end94

if.end94:                                         ; preds = %if.else, %if.then77
  %89 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !4093
  %weight95 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %89, i32 0, i32 1, !dbg !4094
  %90 = load float, float* %weight95, align 4, !dbg !4094
  %91 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw_prev, align 8, !dbg !4095
  %weight96 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %91, i32 0, i32 1, !dbg !4096
  store float %90, float* %weight96, align 4, !dbg !4097
  %92 = load float, float* %paintweight.addr, align 4, !dbg !4098
  %93 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !4099
  %weight97 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %93, i32 0, i32 1, !dbg !4100
  store float %92, float* %weight97, align 4, !dbg !4101
  br label %if.end98, !dbg !4102

if.end98:                                         ; preds = %if.end94, %if.then70
  br label %if.end99, !dbg !4103

if.end99:                                         ; preds = %if.end98, %if.then62
  br label %if.end100, !dbg !4104

if.end100:                                        ; preds = %if.end99, %if.end56
  %94 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !4105
  %dvert101 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %94, i32 0, i32 17, !dbg !4106
  %95 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert101, align 8, !dbg !4106
  %96 = load i32, i32* %vidx, align 4, !dbg !4107
  %idxprom102 = zext i32 %96 to i64, !dbg !4105
  %arrayidx103 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %95, i64 %idxprom102, !dbg !4105
  %flag104 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %arrayidx103, i32 0, i32 2, !dbg !4108
  store i32 1, i32* %flag104, align 4, !dbg !4109
  br label %if.end105, !dbg !4110

if.end105:                                        ; preds = %if.end100, %do.body
  br label %do.cond, !dbg !4111

do.cond:                                          ; preds = %if.end105, %if.then55
  %97 = load i32, i32* %fidx, align 4, !dbg !4112
  %dec = add i32 %97, -1, !dbg !4112
  store i32 %dec, i32* %fidx, align 4, !dbg !4112
  %tobool106 = icmp ne i32 %97, 0, !dbg !4111
  br i1 %tobool106, label %do.body, label %do.end, !dbg !4111, !llvm.loop !4113

do.end:                                           ; preds = %do.cond
  br label %for.inc, !dbg !4115

for.inc:                                          ; preds = %do.end, %if.then37
  %98 = load i32, i32* %index, align 4, !dbg !4116
  %inc = add i32 %98, 1, !dbg !4116
  store i32 %inc, i32* %index, align 4, !dbg !4116
  %99 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !4117
  %incdec.ptr = getelementptr inbounds %struct.MPoly, %struct.MPoly* %99, i32 1, !dbg !4117
  store %struct.MPoly* %incdec.ptr, %struct.MPoly** %mp, align 8, !dbg !4117
  br label %for.cond, !dbg !4118, !llvm.loop !4119

for.end:                                          ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.MDeformVert** %dv, metadata !4121, metadata !DIExpression()), !dbg !4123
  %100 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !4124
  %dvert107 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %100, i32 0, i32 17, !dbg !4125
  %101 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert107, align 8, !dbg !4125
  store %struct.MDeformVert* %101, %struct.MDeformVert** %dv, align 8, !dbg !4123
  %102 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !4126
  %totvert108 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %102, i32 0, i32 26, !dbg !4128
  %103 = load i32, i32* %totvert108, align 8, !dbg !4128
  store i32 %103, i32* %index, align 4, !dbg !4129
  br label %for.cond109, !dbg !4130

for.cond109:                                      ; preds = %for.inc114, %for.end
  %104 = load i32, i32* %index, align 4, !dbg !4131
  %cmp110 = icmp ne i32 %104, 0, !dbg !4133
  br i1 %cmp110, label %for.body112, label %for.end117, !dbg !4134

for.body112:                                      ; preds = %for.cond109
  %105 = load %struct.MDeformVert*, %struct.MDeformVert** %dv, align 8, !dbg !4135
  %flag113 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %105, i32 0, i32 2, !dbg !4137
  store i32 0, i32* %flag113, align 4, !dbg !4138
  br label %for.inc114, !dbg !4139

for.inc114:                                       ; preds = %for.body112
  %106 = load i32, i32* %index, align 4, !dbg !4140
  %dec115 = add i32 %106, -1, !dbg !4140
  store i32 %dec115, i32* %index, align 4, !dbg !4140
  %107 = load %struct.MDeformVert*, %struct.MDeformVert** %dv, align 8, !dbg !4141
  %incdec.ptr116 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %107, i32 1, !dbg !4141
  store %struct.MDeformVert* %incdec.ptr116, %struct.MDeformVert** %dv, align 8, !dbg !4141
  br label %for.cond109, !dbg !4142, !llvm.loop !4143

for.end117:                                       ; preds = %for.cond109
  %108 = load %struct.VPaint*, %struct.VPaint** %wp.addr, align 8, !dbg !4145
  call void @copy_wpaint_prev(%struct.VPaint* %108, %struct.MDeformVert* null, i32 0), !dbg !4146
  %109 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !4147
  %id = getelementptr inbounds %struct.Mesh, %struct.Mesh* %109, i32 0, i32 0, !dbg !4148
  call void @DAG_id_tag_update(%struct.ID* %id, i16 signext 0), !dbg !4149
  store i8 1, i8* %retval, align 1, !dbg !4150
  br label %return, !dbg !4150

return:                                           ; preds = %for.end117, %if.then
  %110 = load i8, i8* %retval, align 1, !dbg !4151
  ret i8 %110, !dbg !4151
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @wpaint_mirror_vgroup_ensure(%struct.Object* %ob, i32 %vgroup_active) #0 !dbg !4152 {
entry:
  %retval = alloca i32, align 4
  %ob.addr = alloca %struct.Object*, align 8
  %vgroup_active.addr = alloca i32, align 4
  %defgroup = alloca %struct.bDeformGroup*, align 8
  %mirrdef = alloca i32, align 4
  %name_flip = alloca [64 x i8], align 16
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !4155, metadata !DIExpression()), !dbg !4156
  store i32 %vgroup_active, i32* %vgroup_active.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %vgroup_active.addr, metadata !4157, metadata !DIExpression()), !dbg !4158
  call void @llvm.dbg.declare(metadata %struct.bDeformGroup** %defgroup, metadata !4159, metadata !DIExpression()), !dbg !4170
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4171
  %defbase = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 25, !dbg !4172
  %1 = load i32, i32* %vgroup_active.addr, align 4, !dbg !4173
  %call = call i8* @BLI_findlink(%struct.ListBase* %defbase, i32 %1), !dbg !4174
  %2 = bitcast i8* %call to %struct.bDeformGroup*, !dbg !4174
  store %struct.bDeformGroup* %2, %struct.bDeformGroup** %defgroup, align 8, !dbg !4170
  %3 = load %struct.bDeformGroup*, %struct.bDeformGroup** %defgroup, align 8, !dbg !4175
  %tobool = icmp ne %struct.bDeformGroup* %3, null, !dbg !4175
  br i1 %tobool, label %if.then, label %if.end12, !dbg !4177

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %mirrdef, metadata !4178, metadata !DIExpression()), !dbg !4180
  call void @llvm.dbg.declare(metadata [64 x i8]* %name_flip, metadata !4181, metadata !DIExpression()), !dbg !4182
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %name_flip, i64 0, i64 0, !dbg !4183
  %4 = load %struct.bDeformGroup*, %struct.bDeformGroup** %defgroup, align 8, !dbg !4184
  %name = getelementptr inbounds %struct.bDeformGroup, %struct.bDeformGroup* %4, i32 0, i32 2, !dbg !4185
  %arraydecay1 = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !4184
  call void @BKE_deform_flip_side_name(i8* %arraydecay, i8* %arraydecay1, i8 zeroext 0), !dbg !4186
  %5 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4187
  %arraydecay2 = getelementptr inbounds [64 x i8], [64 x i8]* %name_flip, i64 0, i64 0, !dbg !4188
  %call3 = call i32 @defgroup_name_index(%struct.Object* %5, i8* %arraydecay2), !dbg !4189
  store i32 %call3, i32* %mirrdef, align 4, !dbg !4190
  %6 = load i32, i32* %mirrdef, align 4, !dbg !4191
  %cmp = icmp eq i32 %6, -1, !dbg !4193
  br i1 %cmp, label %if.then4, label %if.end11, !dbg !4194

if.then4:                                         ; preds = %if.then
  %7 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4195
  %arraydecay5 = getelementptr inbounds [64 x i8], [64 x i8]* %name_flip, i64 0, i64 0, !dbg !4198
  %call6 = call %struct.bDeformGroup* @BKE_defgroup_new(%struct.Object* %7, i8* %arraydecay5), !dbg !4199
  %tobool7 = icmp ne %struct.bDeformGroup* %call6, null, !dbg !4199
  br i1 %tobool7, label %if.then8, label %if.end, !dbg !4200

if.then8:                                         ; preds = %if.then4
  %8 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4201
  %defbase9 = getelementptr inbounds %struct.Object, %struct.Object* %8, i32 0, i32 25, !dbg !4203
  %call10 = call i32 @BLI_countlist(%struct.ListBase* %defbase9), !dbg !4204
  %sub = sub nsw i32 %call10, 1, !dbg !4205
  store i32 %sub, i32* %mirrdef, align 4, !dbg !4206
  br label %if.end, !dbg !4207

if.end:                                           ; preds = %if.then8, %if.then4
  br label %if.end11, !dbg !4208

if.end11:                                         ; preds = %if.end, %if.then
  %9 = load i32, i32* %mirrdef, align 4, !dbg !4209
  store i32 %9, i32* %retval, align 4, !dbg !4210
  br label %return, !dbg !4210

if.end12:                                         ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !4211
  br label %return, !dbg !4211

return:                                           ; preds = %if.end12, %if.end11
  %10 = load i32, i32* %retval, align 4, !dbg !4212
  ret i32 %10, !dbg !4212
}

; Function Attrs: noinline nounwind uwtable
define internal void @copy_wpaint_prev(%struct.VPaint* %wp, %struct.MDeformVert* %dverts, i32 %dcount) #0 !dbg !4213 {
entry:
  %wp.addr = alloca %struct.VPaint*, align 8
  %dverts.addr = alloca %struct.MDeformVert*, align 8
  %dcount.addr = alloca i32, align 4
  store %struct.VPaint* %wp, %struct.VPaint** %wp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VPaint** %wp.addr, metadata !4216, metadata !DIExpression()), !dbg !4217
  store %struct.MDeformVert* %dverts, %struct.MDeformVert** %dverts.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MDeformVert** %dverts.addr, metadata !4218, metadata !DIExpression()), !dbg !4219
  store i32 %dcount, i32* %dcount.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dcount.addr, metadata !4220, metadata !DIExpression()), !dbg !4221
  %0 = load %struct.VPaint*, %struct.VPaint** %wp.addr, align 8, !dbg !4222
  call void @free_wpaint_prev(%struct.VPaint* %0), !dbg !4223
  %1 = load %struct.MDeformVert*, %struct.MDeformVert** %dverts.addr, align 8, !dbg !4224
  %tobool = icmp ne %struct.MDeformVert* %1, null, !dbg !4224
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !4226

land.lhs.true:                                    ; preds = %entry
  %2 = load i32, i32* %dcount.addr, align 4, !dbg !4227
  %tobool1 = icmp ne i32 %2, 0, !dbg !4227
  br i1 %tobool1, label %if.then, label %if.end, !dbg !4228

if.then:                                          ; preds = %land.lhs.true
  %3 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !4229
  %4 = load i32, i32* %dcount.addr, align 4, !dbg !4231
  %conv = sext i32 %4 to i64, !dbg !4231
  %mul = mul i64 16, %conv, !dbg !4232
  %call = call i8* %3(i64 %mul, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.45, i64 0, i64 0)), !dbg !4229
  %5 = bitcast i8* %call to %struct.MDeformVert*, !dbg !4229
  %6 = load %struct.VPaint*, %struct.VPaint** %wp.addr, align 8, !dbg !4233
  %wpaint_prev = getelementptr inbounds %struct.VPaint, %struct.VPaint* %6, i32 0, i32 5, !dbg !4234
  store %struct.MDeformVert* %5, %struct.MDeformVert** %wpaint_prev, align 8, !dbg !4235
  %7 = load i32, i32* %dcount.addr, align 4, !dbg !4236
  %8 = load %struct.VPaint*, %struct.VPaint** %wp.addr, align 8, !dbg !4237
  %tot = getelementptr inbounds %struct.VPaint, %struct.VPaint* %8, i32 0, i32 3, !dbg !4238
  store i32 %7, i32* %tot, align 4, !dbg !4239
  %9 = load %struct.VPaint*, %struct.VPaint** %wp.addr, align 8, !dbg !4240
  %wpaint_prev2 = getelementptr inbounds %struct.VPaint, %struct.VPaint* %9, i32 0, i32 5, !dbg !4241
  %10 = load %struct.MDeformVert*, %struct.MDeformVert** %wpaint_prev2, align 8, !dbg !4241
  %11 = load %struct.MDeformVert*, %struct.MDeformVert** %dverts.addr, align 8, !dbg !4242
  %12 = load i32, i32* %dcount.addr, align 4, !dbg !4243
  call void @BKE_defvert_array_copy(%struct.MDeformVert* %10, %struct.MDeformVert* %11, i32 %12), !dbg !4244
  br label %if.end, !dbg !4245

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  ret void, !dbg !4246
}

declare dso_local %struct.MDeformWeight* @defvert_verify_index(%struct.MDeformVert*, i32) #2

declare dso_local i32 @mesh_get_x_mirror_vert(%struct.Object*, i32, i8 zeroext) #2

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @ED_vpaint_smooth(%struct.Object* %ob) #0 !dbg !4247 {
entry:
  %retval = alloca i8, align 1
  %ob.addr = alloca %struct.Object*, align 8
  %me = alloca %struct.Mesh*, align 8
  %mp = alloca %struct.MPoly*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %mlooptag = alloca i8*, align 8
  %selected = alloca i8, align 1
  %ml = alloca %struct.MLoop*, align 8
  %ml_index = alloca i32, align 4
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !4248, metadata !DIExpression()), !dbg !4249
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me, metadata !4250, metadata !DIExpression()), !dbg !4251
  call void @llvm.dbg.declare(metadata %struct.MPoly** %mp, metadata !4252, metadata !DIExpression()), !dbg !4253
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4254, metadata !DIExpression()), !dbg !4255
  call void @llvm.dbg.declare(metadata i32* %j, metadata !4256, metadata !DIExpression()), !dbg !4257
  call void @llvm.dbg.declare(metadata i8** %mlooptag, metadata !4258, metadata !DIExpression()), !dbg !4259
  call void @llvm.dbg.declare(metadata i8* %selected, metadata !4260, metadata !DIExpression()), !dbg !4261
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4262
  %call = call %struct.Mesh* @BKE_mesh_from_object(%struct.Object* %0), !dbg !4264
  store %struct.Mesh* %call, %struct.Mesh** %me, align 8, !dbg !4265
  %cmp = icmp eq %struct.Mesh* %call, null, !dbg !4266
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !4267

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !4268
  %mloopcol = getelementptr inbounds %struct.Mesh, %struct.Mesh* %1, i32 0, i32 11, !dbg !4269
  %2 = load %struct.MLoopCol*, %struct.MLoopCol** %mloopcol, align 8, !dbg !4269
  %cmp1 = icmp eq %struct.MLoopCol* %2, null, !dbg !4270
  br i1 %cmp1, label %land.lhs.true, label %if.end, !dbg !4271

land.lhs.true:                                    ; preds = %lor.lhs.false
  %3 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4272
  %call2 = call zeroext i8 @make_vertexcol(%struct.Object* %3), !dbg !4273
  %conv = zext i8 %call2 to i32, !dbg !4273
  %cmp3 = icmp eq i32 %conv, 0, !dbg !4274
  br i1 %cmp3, label %if.then, label %if.end, !dbg !4275

if.then:                                          ; preds = %land.lhs.true, %entry
  store i8 0, i8* %retval, align 1, !dbg !4276
  br label %return, !dbg !4276

if.end:                                           ; preds = %land.lhs.true, %lor.lhs.false
  %4 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !4278
  %editflag = getelementptr inbounds %struct.Mesh, %struct.Mesh* %4, i32 0, i32 46, !dbg !4279
  %5 = load i8, i8* %editflag, align 1, !dbg !4279
  %conv5 = zext i8 %5 to i32, !dbg !4278
  %and = and i32 %conv5, 8, !dbg !4280
  %cmp6 = icmp ne i32 %and, 0, !dbg !4281
  %conv7 = zext i1 %cmp6 to i32, !dbg !4281
  %conv8 = trunc i32 %conv7 to i8, !dbg !4282
  store i8 %conv8, i8* %selected, align 1, !dbg !4283
  %6 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !4284
  %7 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !4285
  %totloop = getelementptr inbounds %struct.Mesh, %struct.Mesh* %7, i32 0, i32 31, !dbg !4286
  %8 = load i32, i32* %totloop, align 4, !dbg !4286
  %conv9 = sext i32 %8 to i64, !dbg !4285
  %mul = mul i64 1, %conv9, !dbg !4287
  %call10 = call i8* %6(i64 %mul, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0)), !dbg !4284
  store i8* %call10, i8** %mlooptag, align 8, !dbg !4288
  %9 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !4289
  %mpoly = getelementptr inbounds %struct.Mesh, %struct.Mesh* %9, i32 0, i32 7, !dbg !4290
  %10 = load %struct.MPoly*, %struct.MPoly** %mpoly, align 8, !dbg !4290
  store %struct.MPoly* %10, %struct.MPoly** %mp, align 8, !dbg !4291
  store i32 0, i32* %i, align 4, !dbg !4292
  br label %for.cond, !dbg !4294

for.cond:                                         ; preds = %for.inc27, %if.end
  %11 = load i32, i32* %i, align 4, !dbg !4295
  %12 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !4297
  %totpoly = getelementptr inbounds %struct.Mesh, %struct.Mesh* %12, i32 0, i32 30, !dbg !4298
  %13 = load i32, i32* %totpoly, align 8, !dbg !4298
  %cmp11 = icmp slt i32 %11, %13, !dbg !4299
  br i1 %cmp11, label %for.body, label %for.end30, !dbg !4300

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.MLoop** %ml, metadata !4301, metadata !DIExpression()), !dbg !4305
  %14 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !4306
  %mloop = getelementptr inbounds %struct.Mesh, %struct.Mesh* %14, i32 0, i32 9, !dbg !4307
  %15 = load %struct.MLoop*, %struct.MLoop** %mloop, align 8, !dbg !4307
  %16 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !4308
  %loopstart = getelementptr inbounds %struct.MPoly, %struct.MPoly* %16, i32 0, i32 0, !dbg !4309
  %17 = load i32, i32* %loopstart, align 4, !dbg !4309
  %idx.ext = sext i32 %17 to i64, !dbg !4310
  %add.ptr = getelementptr inbounds %struct.MLoop, %struct.MLoop* %15, i64 %idx.ext, !dbg !4310
  store %struct.MLoop* %add.ptr, %struct.MLoop** %ml, align 8, !dbg !4305
  call void @llvm.dbg.declare(metadata i32* %ml_index, metadata !4311, metadata !DIExpression()), !dbg !4312
  %18 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !4313
  %loopstart13 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %18, i32 0, i32 0, !dbg !4314
  %19 = load i32, i32* %loopstart13, align 4, !dbg !4314
  store i32 %19, i32* %ml_index, align 4, !dbg !4312
  %20 = load i8, i8* %selected, align 1, !dbg !4315
  %conv14 = zext i8 %20 to i32, !dbg !4315
  %tobool = icmp ne i32 %conv14, 0, !dbg !4315
  br i1 %tobool, label %land.lhs.true15, label %if.end20, !dbg !4317

land.lhs.true15:                                  ; preds = %for.body
  %21 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !4318
  %flag = getelementptr inbounds %struct.MPoly, %struct.MPoly* %21, i32 0, i32 3, !dbg !4319
  %22 = load i8, i8* %flag, align 2, !dbg !4319
  %conv16 = zext i8 %22 to i32, !dbg !4318
  %and17 = and i32 %conv16, 2, !dbg !4320
  %tobool18 = icmp ne i32 %and17, 0, !dbg !4320
  br i1 %tobool18, label %if.end20, label %if.then19, !dbg !4321

if.then19:                                        ; preds = %land.lhs.true15
  br label %for.inc27, !dbg !4322

if.end20:                                         ; preds = %land.lhs.true15, %for.body
  store i32 0, i32* %j, align 4, !dbg !4323
  br label %for.cond21, !dbg !4325

for.cond21:                                       ; preds = %for.inc, %if.end20
  %23 = load i32, i32* %j, align 4, !dbg !4326
  %24 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !4328
  %totloop22 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %24, i32 0, i32 1, !dbg !4329
  %25 = load i32, i32* %totloop22, align 4, !dbg !4329
  %cmp23 = icmp slt i32 %23, %25, !dbg !4330
  br i1 %cmp23, label %for.body25, label %for.end, !dbg !4331

for.body25:                                       ; preds = %for.cond21
  %26 = load i8*, i8** %mlooptag, align 8, !dbg !4332
  %27 = load i32, i32* %ml_index, align 4, !dbg !4334
  %idxprom = sext i32 %27 to i64, !dbg !4332
  %arrayidx = getelementptr inbounds i8, i8* %26, i64 %idxprom, !dbg !4332
  store i8 1, i8* %arrayidx, align 1, !dbg !4335
  br label %for.inc, !dbg !4336

for.inc:                                          ; preds = %for.body25
  %28 = load i32, i32* %j, align 4, !dbg !4337
  %inc = add nsw i32 %28, 1, !dbg !4337
  store i32 %inc, i32* %j, align 4, !dbg !4337
  %29 = load i32, i32* %ml_index, align 4, !dbg !4338
  %inc26 = add nsw i32 %29, 1, !dbg !4338
  store i32 %inc26, i32* %ml_index, align 4, !dbg !4338
  %30 = load %struct.MLoop*, %struct.MLoop** %ml, align 8, !dbg !4339
  %incdec.ptr = getelementptr inbounds %struct.MLoop, %struct.MLoop* %30, i32 1, !dbg !4339
  store %struct.MLoop* %incdec.ptr, %struct.MLoop** %ml, align 8, !dbg !4339
  br label %for.cond21, !dbg !4340, !llvm.loop !4341

for.end:                                          ; preds = %for.cond21
  br label %for.inc27, !dbg !4343

for.inc27:                                        ; preds = %for.end, %if.then19
  %31 = load i32, i32* %i, align 4, !dbg !4344
  %inc28 = add nsw i32 %31, 1, !dbg !4344
  store i32 %inc28, i32* %i, align 4, !dbg !4344
  %32 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !4345
  %incdec.ptr29 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %32, i32 1, !dbg !4345
  store %struct.MPoly* %incdec.ptr29, %struct.MPoly** %mp, align 8, !dbg !4345
  br label %for.cond, !dbg !4346, !llvm.loop !4347

for.end30:                                        ; preds = %for.cond
  %33 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !4349
  call void @BKE_mesh_tessface_clear(%struct.Mesh* %33), !dbg !4350
  %34 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !4351
  %35 = load i8*, i8** %mlooptag, align 8, !dbg !4352
  call void @do_shared_vertexcol(%struct.Mesh* %34, i8* %35, i8* null, i8 zeroext 0), !dbg !4353
  %36 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4354
  %37 = load i8*, i8** %mlooptag, align 8, !dbg !4355
  call void %36(i8* %37), !dbg !4354
  %38 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !4356
  %id = getelementptr inbounds %struct.Mesh, %struct.Mesh* %38, i32 0, i32 0, !dbg !4357
  call void @DAG_id_tag_update(%struct.ID* %id, i16 signext 0), !dbg !4358
  store i8 1, i8* %retval, align 1, !dbg !4359
  br label %return, !dbg !4359

return:                                           ; preds = %for.end30, %if.then
  %39 = load i8, i8* %retval, align 1, !dbg !4360
  ret i8 %39, !dbg !4360
}

; Function Attrs: noinline nounwind uwtable
define internal void @do_shared_vertexcol(%struct.Mesh* %me, i8* %mlooptag, i8* %mfacetag, i8 zeroext %do_tessface) #0 !dbg !4361 {
entry:
  %me.addr = alloca %struct.Mesh*, align 8
  %mlooptag.addr = alloca i8*, align 8
  %mfacetag.addr = alloca i8*, align 8
  %do_tessface.addr = alloca i8, align 1
  %use_face_sel = alloca i32, align 4
  %mp = alloca %struct.MPoly*, align 8
  %scol = alloca [4 x i32]*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %has_shared = alloca i8, align 1
  %ml = alloca %struct.MLoop*, align 8
  %lcol = alloca %struct.MLoopCol*, align 8
  %ml113 = alloca %struct.MLoop*, align 8
  %lcol118 = alloca %struct.MLoopCol*, align 8
  store %struct.Mesh* %me, %struct.Mesh** %me.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me.addr, metadata !4364, metadata !DIExpression()), !dbg !4365
  store i8* %mlooptag, i8** %mlooptag.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %mlooptag.addr, metadata !4366, metadata !DIExpression()), !dbg !4367
  store i8* %mfacetag, i8** %mfacetag.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %mfacetag.addr, metadata !4368, metadata !DIExpression()), !dbg !4369
  store i8 %do_tessface, i8* %do_tessface.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %do_tessface.addr, metadata !4370, metadata !DIExpression()), !dbg !4371
  call void @llvm.dbg.declare(metadata i32* %use_face_sel, metadata !4372, metadata !DIExpression()), !dbg !4373
  %0 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !4374
  %editflag = getelementptr inbounds %struct.Mesh, %struct.Mesh* %0, i32 0, i32 46, !dbg !4375
  %1 = load i8, i8* %editflag, align 1, !dbg !4375
  %conv = zext i8 %1 to i32, !dbg !4374
  %and = and i32 %conv, 8, !dbg !4376
  store i32 %and, i32* %use_face_sel, align 4, !dbg !4373
  call void @llvm.dbg.declare(metadata %struct.MPoly** %mp, metadata !4377, metadata !DIExpression()), !dbg !4378
  call void @llvm.dbg.declare(metadata [4 x i32]** %scol, metadata !4379, metadata !DIExpression()), !dbg !4381
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4382, metadata !DIExpression()), !dbg !4383
  call void @llvm.dbg.declare(metadata i32* %j, metadata !4384, metadata !DIExpression()), !dbg !4385
  call void @llvm.dbg.declare(metadata i8* %has_shared, metadata !4386, metadata !DIExpression()), !dbg !4387
  store i8 0, i8* %has_shared, align 1, !dbg !4387
  %2 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !4388
  %mloopcol = getelementptr inbounds %struct.Mesh, %struct.Mesh* %2, i32 0, i32 11, !dbg !4390
  %3 = load %struct.MLoopCol*, %struct.MLoopCol** %mloopcol, align 8, !dbg !4390
  %cmp = icmp eq %struct.MLoopCol* %3, null, !dbg !4391
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !4392

lor.lhs.false:                                    ; preds = %entry
  %4 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !4393
  %totvert = getelementptr inbounds %struct.Mesh, %struct.Mesh* %4, i32 0, i32 26, !dbg !4394
  %5 = load i32, i32* %totvert, align 8, !dbg !4394
  %cmp2 = icmp eq i32 %5, 0, !dbg !4395
  br i1 %cmp2, label %if.then, label %lor.lhs.false4, !dbg !4396

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %6 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !4397
  %totpoly = getelementptr inbounds %struct.Mesh, %struct.Mesh* %6, i32 0, i32 30, !dbg !4398
  %7 = load i32, i32* %totpoly, align 8, !dbg !4398
  %cmp5 = icmp eq i32 %7, 0, !dbg !4399
  br i1 %cmp5, label %if.then, label %if.end, !dbg !4400

if.then:                                          ; preds = %lor.lhs.false4, %lor.lhs.false, %entry
  br label %if.end169, !dbg !4401

if.end:                                           ; preds = %lor.lhs.false4
  %8 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !4402
  %9 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !4403
  %totvert7 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %9, i32 0, i32 26, !dbg !4404
  %10 = load i32, i32* %totvert7, align 8, !dbg !4404
  %conv8 = sext i32 %10 to i64, !dbg !4403
  %mul = mul i64 4, %conv8, !dbg !4405
  %mul9 = mul i64 %mul, 5, !dbg !4406
  %call = call i8* %8(i64 %mul9, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.46, i64 0, i64 0)), !dbg !4402
  %11 = bitcast i8* %call to [4 x i32]*, !dbg !4402
  store [4 x i32]* %11, [4 x i32]** %scol, align 8, !dbg !4407
  store i32 0, i32* %i, align 4, !dbg !4408
  %12 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !4410
  %mpoly = getelementptr inbounds %struct.Mesh, %struct.Mesh* %12, i32 0, i32 7, !dbg !4411
  %13 = load %struct.MPoly*, %struct.MPoly** %mpoly, align 8, !dbg !4411
  store %struct.MPoly* %13, %struct.MPoly** %mp, align 8, !dbg !4412
  br label %for.cond, !dbg !4413

for.cond:                                         ; preds = %for.inc48, %if.end
  %14 = load i32, i32* %i, align 4, !dbg !4414
  %15 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !4416
  %totpoly10 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %15, i32 0, i32 30, !dbg !4417
  %16 = load i32, i32* %totpoly10, align 8, !dbg !4417
  %cmp11 = icmp slt i32 %14, %16, !dbg !4418
  br i1 %cmp11, label %for.body, label %for.end51, !dbg !4419

for.body:                                         ; preds = %for.cond
  %17 = load i32, i32* %use_face_sel, align 4, !dbg !4420
  %cmp13 = icmp eq i32 %17, 0, !dbg !4423
  br i1 %cmp13, label %if.then18, label %lor.lhs.false15, !dbg !4424

lor.lhs.false15:                                  ; preds = %for.body
  %18 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !4425
  %flag = getelementptr inbounds %struct.MPoly, %struct.MPoly* %18, i32 0, i32 3, !dbg !4426
  %19 = load i8, i8* %flag, align 2, !dbg !4426
  %conv16 = zext i8 %19 to i32, !dbg !4425
  %and17 = and i32 %conv16, 2, !dbg !4427
  %tobool = icmp ne i32 %and17, 0, !dbg !4427
  br i1 %tobool, label %if.then18, label %if.end47, !dbg !4428

if.then18:                                        ; preds = %lor.lhs.false15, %for.body
  call void @llvm.dbg.declare(metadata %struct.MLoop** %ml, metadata !4429, metadata !DIExpression()), !dbg !4431
  %20 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !4432
  %mloop = getelementptr inbounds %struct.Mesh, %struct.Mesh* %20, i32 0, i32 9, !dbg !4433
  %21 = load %struct.MLoop*, %struct.MLoop** %mloop, align 8, !dbg !4433
  %22 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !4434
  %loopstart = getelementptr inbounds %struct.MPoly, %struct.MPoly* %22, i32 0, i32 0, !dbg !4435
  %23 = load i32, i32* %loopstart, align 4, !dbg !4435
  %idx.ext = sext i32 %23 to i64, !dbg !4436
  %add.ptr = getelementptr inbounds %struct.MLoop, %struct.MLoop* %21, i64 %idx.ext, !dbg !4436
  store %struct.MLoop* %add.ptr, %struct.MLoop** %ml, align 8, !dbg !4431
  call void @llvm.dbg.declare(metadata %struct.MLoopCol** %lcol, metadata !4437, metadata !DIExpression()), !dbg !4438
  %24 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !4439
  %mloopcol19 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %24, i32 0, i32 11, !dbg !4440
  %25 = load %struct.MLoopCol*, %struct.MLoopCol** %mloopcol19, align 8, !dbg !4440
  %26 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !4441
  %loopstart20 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %26, i32 0, i32 0, !dbg !4442
  %27 = load i32, i32* %loopstart20, align 4, !dbg !4442
  %idx.ext21 = sext i32 %27 to i64, !dbg !4443
  %add.ptr22 = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %25, i64 %idx.ext21, !dbg !4443
  store %struct.MLoopCol* %add.ptr22, %struct.MLoopCol** %lcol, align 8, !dbg !4438
  store i32 0, i32* %j, align 4, !dbg !4444
  br label %for.cond23, !dbg !4446

for.cond23:                                       ; preds = %for.inc, %if.then18
  %28 = load i32, i32* %j, align 4, !dbg !4447
  %29 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !4449
  %totloop = getelementptr inbounds %struct.MPoly, %struct.MPoly* %29, i32 0, i32 1, !dbg !4450
  %30 = load i32, i32* %totloop, align 4, !dbg !4450
  %cmp24 = icmp slt i32 %28, %30, !dbg !4451
  br i1 %cmp24, label %for.body26, label %for.end, !dbg !4452

for.body26:                                       ; preds = %for.cond23
  %31 = load %struct.MLoopCol*, %struct.MLoopCol** %lcol, align 8, !dbg !4453
  %r = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %31, i32 0, i32 0, !dbg !4455
  %32 = load i8, i8* %r, align 1, !dbg !4455
  %conv27 = zext i8 %32 to i32, !dbg !4453
  %33 = load [4 x i32]*, [4 x i32]** %scol, align 8, !dbg !4456
  %34 = load %struct.MLoop*, %struct.MLoop** %ml, align 8, !dbg !4457
  %v = getelementptr inbounds %struct.MLoop, %struct.MLoop* %34, i32 0, i32 0, !dbg !4458
  %35 = load i32, i32* %v, align 4, !dbg !4458
  %idxprom = zext i32 %35 to i64, !dbg !4456
  %arrayidx = getelementptr inbounds [4 x i32], [4 x i32]* %33, i64 %idxprom, !dbg !4456
  %arrayidx28 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx, i64 0, i64 0, !dbg !4456
  %36 = load i32, i32* %arrayidx28, align 4, !dbg !4459
  %add = add nsw i32 %36, %conv27, !dbg !4459
  store i32 %add, i32* %arrayidx28, align 4, !dbg !4459
  %37 = load %struct.MLoopCol*, %struct.MLoopCol** %lcol, align 8, !dbg !4460
  %g = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %37, i32 0, i32 1, !dbg !4461
  %38 = load i8, i8* %g, align 1, !dbg !4461
  %conv29 = zext i8 %38 to i32, !dbg !4460
  %39 = load [4 x i32]*, [4 x i32]** %scol, align 8, !dbg !4462
  %40 = load %struct.MLoop*, %struct.MLoop** %ml, align 8, !dbg !4463
  %v30 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %40, i32 0, i32 0, !dbg !4464
  %41 = load i32, i32* %v30, align 4, !dbg !4464
  %idxprom31 = zext i32 %41 to i64, !dbg !4462
  %arrayidx32 = getelementptr inbounds [4 x i32], [4 x i32]* %39, i64 %idxprom31, !dbg !4462
  %arrayidx33 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx32, i64 0, i64 1, !dbg !4462
  %42 = load i32, i32* %arrayidx33, align 4, !dbg !4465
  %add34 = add nsw i32 %42, %conv29, !dbg !4465
  store i32 %add34, i32* %arrayidx33, align 4, !dbg !4465
  %43 = load %struct.MLoopCol*, %struct.MLoopCol** %lcol, align 8, !dbg !4466
  %b = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %43, i32 0, i32 2, !dbg !4467
  %44 = load i8, i8* %b, align 1, !dbg !4467
  %conv35 = zext i8 %44 to i32, !dbg !4466
  %45 = load [4 x i32]*, [4 x i32]** %scol, align 8, !dbg !4468
  %46 = load %struct.MLoop*, %struct.MLoop** %ml, align 8, !dbg !4469
  %v36 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %46, i32 0, i32 0, !dbg !4470
  %47 = load i32, i32* %v36, align 4, !dbg !4470
  %idxprom37 = zext i32 %47 to i64, !dbg !4468
  %arrayidx38 = getelementptr inbounds [4 x i32], [4 x i32]* %45, i64 %idxprom37, !dbg !4468
  %arrayidx39 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx38, i64 0, i64 2, !dbg !4468
  %48 = load i32, i32* %arrayidx39, align 4, !dbg !4471
  %add40 = add nsw i32 %48, %conv35, !dbg !4471
  store i32 %add40, i32* %arrayidx39, align 4, !dbg !4471
  %49 = load [4 x i32]*, [4 x i32]** %scol, align 8, !dbg !4472
  %50 = load %struct.MLoop*, %struct.MLoop** %ml, align 8, !dbg !4473
  %v41 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %50, i32 0, i32 0, !dbg !4474
  %51 = load i32, i32* %v41, align 4, !dbg !4474
  %idxprom42 = zext i32 %51 to i64, !dbg !4472
  %arrayidx43 = getelementptr inbounds [4 x i32], [4 x i32]* %49, i64 %idxprom42, !dbg !4472
  %arrayidx44 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx43, i64 0, i64 3, !dbg !4472
  %52 = load i32, i32* %arrayidx44, align 4, !dbg !4475
  %add45 = add nsw i32 %52, 1, !dbg !4475
  store i32 %add45, i32* %arrayidx44, align 4, !dbg !4475
  store i8 1, i8* %has_shared, align 1, !dbg !4476
  br label %for.inc, !dbg !4477

for.inc:                                          ; preds = %for.body26
  %53 = load i32, i32* %j, align 4, !dbg !4478
  %inc = add nsw i32 %53, 1, !dbg !4478
  store i32 %inc, i32* %j, align 4, !dbg !4478
  %54 = load %struct.MLoop*, %struct.MLoop** %ml, align 8, !dbg !4479
  %incdec.ptr = getelementptr inbounds %struct.MLoop, %struct.MLoop* %54, i32 1, !dbg !4479
  store %struct.MLoop* %incdec.ptr, %struct.MLoop** %ml, align 8, !dbg !4479
  %55 = load %struct.MLoopCol*, %struct.MLoopCol** %lcol, align 8, !dbg !4480
  %incdec.ptr46 = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %55, i32 1, !dbg !4480
  store %struct.MLoopCol* %incdec.ptr46, %struct.MLoopCol** %lcol, align 8, !dbg !4480
  br label %for.cond23, !dbg !4481, !llvm.loop !4482

for.end:                                          ; preds = %for.cond23
  br label %if.end47, !dbg !4484

if.end47:                                         ; preds = %for.end, %lor.lhs.false15
  br label %for.inc48, !dbg !4485

for.inc48:                                        ; preds = %if.end47
  %56 = load i32, i32* %i, align 4, !dbg !4486
  %inc49 = add nsw i32 %56, 1, !dbg !4486
  store i32 %inc49, i32* %i, align 4, !dbg !4486
  %57 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !4487
  %incdec.ptr50 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %57, i32 1, !dbg !4487
  store %struct.MPoly* %incdec.ptr50, %struct.MPoly** %mp, align 8, !dbg !4487
  br label %for.cond, !dbg !4488, !llvm.loop !4489

for.end51:                                        ; preds = %for.cond
  %58 = load i8, i8* %has_shared, align 1, !dbg !4491
  %tobool52 = icmp ne i8 %58, 0, !dbg !4491
  br i1 %tobool52, label %if.then53, label %if.end163, !dbg !4493

if.then53:                                        ; preds = %for.end51
  store i32 0, i32* %i, align 4, !dbg !4494
  br label %for.cond54, !dbg !4497

for.cond54:                                       ; preds = %for.inc96, %if.then53
  %59 = load i32, i32* %i, align 4, !dbg !4498
  %60 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !4500
  %totvert55 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %60, i32 0, i32 26, !dbg !4501
  %61 = load i32, i32* %totvert55, align 8, !dbg !4501
  %cmp56 = icmp slt i32 %59, %61, !dbg !4502
  br i1 %cmp56, label %for.body58, label %for.end98, !dbg !4503

for.body58:                                       ; preds = %for.cond54
  %62 = load [4 x i32]*, [4 x i32]** %scol, align 8, !dbg !4504
  %63 = load i32, i32* %i, align 4, !dbg !4507
  %idxprom59 = sext i32 %63 to i64, !dbg !4504
  %arrayidx60 = getelementptr inbounds [4 x i32], [4 x i32]* %62, i64 %idxprom59, !dbg !4504
  %arrayidx61 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx60, i64 0, i64 3, !dbg !4504
  %64 = load i32, i32* %arrayidx61, align 4, !dbg !4504
  %cmp62 = icmp ne i32 %64, 0, !dbg !4508
  br i1 %cmp62, label %if.then64, label %if.end95, !dbg !4509

if.then64:                                        ; preds = %for.body58
  %65 = load [4 x i32]*, [4 x i32]** %scol, align 8, !dbg !4510
  %66 = load i32, i32* %i, align 4, !dbg !4512
  %idxprom65 = sext i32 %66 to i64, !dbg !4510
  %arrayidx66 = getelementptr inbounds [4 x i32], [4 x i32]* %65, i64 %idxprom65, !dbg !4510
  %arrayidx67 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx66, i64 0, i64 0, !dbg !4510
  %67 = load i32, i32* %arrayidx67, align 4, !dbg !4510
  %68 = load [4 x i32]*, [4 x i32]** %scol, align 8, !dbg !4513
  %69 = load i32, i32* %i, align 4, !dbg !4514
  %idxprom68 = sext i32 %69 to i64, !dbg !4513
  %arrayidx69 = getelementptr inbounds [4 x i32], [4 x i32]* %68, i64 %idxprom68, !dbg !4513
  %arrayidx70 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx69, i64 0, i64 3, !dbg !4513
  %70 = load i32, i32* %arrayidx70, align 4, !dbg !4513
  %call71 = call i32 @divide_round_i(i32 %67, i32 %70), !dbg !4515
  %71 = load [4 x i32]*, [4 x i32]** %scol, align 8, !dbg !4516
  %72 = load i32, i32* %i, align 4, !dbg !4517
  %idxprom72 = sext i32 %72 to i64, !dbg !4516
  %arrayidx73 = getelementptr inbounds [4 x i32], [4 x i32]* %71, i64 %idxprom72, !dbg !4516
  %arrayidx74 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx73, i64 0, i64 0, !dbg !4516
  store i32 %call71, i32* %arrayidx74, align 4, !dbg !4518
  %73 = load [4 x i32]*, [4 x i32]** %scol, align 8, !dbg !4519
  %74 = load i32, i32* %i, align 4, !dbg !4520
  %idxprom75 = sext i32 %74 to i64, !dbg !4519
  %arrayidx76 = getelementptr inbounds [4 x i32], [4 x i32]* %73, i64 %idxprom75, !dbg !4519
  %arrayidx77 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx76, i64 0, i64 1, !dbg !4519
  %75 = load i32, i32* %arrayidx77, align 4, !dbg !4519
  %76 = load [4 x i32]*, [4 x i32]** %scol, align 8, !dbg !4521
  %77 = load i32, i32* %i, align 4, !dbg !4522
  %idxprom78 = sext i32 %77 to i64, !dbg !4521
  %arrayidx79 = getelementptr inbounds [4 x i32], [4 x i32]* %76, i64 %idxprom78, !dbg !4521
  %arrayidx80 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx79, i64 0, i64 3, !dbg !4521
  %78 = load i32, i32* %arrayidx80, align 4, !dbg !4521
  %call81 = call i32 @divide_round_i(i32 %75, i32 %78), !dbg !4523
  %79 = load [4 x i32]*, [4 x i32]** %scol, align 8, !dbg !4524
  %80 = load i32, i32* %i, align 4, !dbg !4525
  %idxprom82 = sext i32 %80 to i64, !dbg !4524
  %arrayidx83 = getelementptr inbounds [4 x i32], [4 x i32]* %79, i64 %idxprom82, !dbg !4524
  %arrayidx84 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx83, i64 0, i64 1, !dbg !4524
  store i32 %call81, i32* %arrayidx84, align 4, !dbg !4526
  %81 = load [4 x i32]*, [4 x i32]** %scol, align 8, !dbg !4527
  %82 = load i32, i32* %i, align 4, !dbg !4528
  %idxprom85 = sext i32 %82 to i64, !dbg !4527
  %arrayidx86 = getelementptr inbounds [4 x i32], [4 x i32]* %81, i64 %idxprom85, !dbg !4527
  %arrayidx87 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx86, i64 0, i64 2, !dbg !4527
  %83 = load i32, i32* %arrayidx87, align 4, !dbg !4527
  %84 = load [4 x i32]*, [4 x i32]** %scol, align 8, !dbg !4529
  %85 = load i32, i32* %i, align 4, !dbg !4530
  %idxprom88 = sext i32 %85 to i64, !dbg !4529
  %arrayidx89 = getelementptr inbounds [4 x i32], [4 x i32]* %84, i64 %idxprom88, !dbg !4529
  %arrayidx90 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx89, i64 0, i64 3, !dbg !4529
  %86 = load i32, i32* %arrayidx90, align 4, !dbg !4529
  %call91 = call i32 @divide_round_i(i32 %83, i32 %86), !dbg !4531
  %87 = load [4 x i32]*, [4 x i32]** %scol, align 8, !dbg !4532
  %88 = load i32, i32* %i, align 4, !dbg !4533
  %idxprom92 = sext i32 %88 to i64, !dbg !4532
  %arrayidx93 = getelementptr inbounds [4 x i32], [4 x i32]* %87, i64 %idxprom92, !dbg !4532
  %arrayidx94 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx93, i64 0, i64 2, !dbg !4532
  store i32 %call91, i32* %arrayidx94, align 4, !dbg !4534
  br label %if.end95, !dbg !4535

if.end95:                                         ; preds = %if.then64, %for.body58
  br label %for.inc96, !dbg !4536

for.inc96:                                        ; preds = %if.end95
  %89 = load i32, i32* %i, align 4, !dbg !4537
  %inc97 = add nsw i32 %89, 1, !dbg !4537
  store i32 %inc97, i32* %i, align 4, !dbg !4537
  br label %for.cond54, !dbg !4538, !llvm.loop !4539

for.end98:                                        ; preds = %for.cond54
  store i32 0, i32* %i, align 4, !dbg !4541
  %90 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !4543
  %mpoly99 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %90, i32 0, i32 7, !dbg !4544
  %91 = load %struct.MPoly*, %struct.MPoly** %mpoly99, align 8, !dbg !4544
  store %struct.MPoly* %91, %struct.MPoly** %mp, align 8, !dbg !4545
  br label %for.cond100, !dbg !4546

for.cond100:                                      ; preds = %for.inc159, %for.end98
  %92 = load i32, i32* %i, align 4, !dbg !4547
  %93 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !4549
  %totpoly101 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %93, i32 0, i32 30, !dbg !4550
  %94 = load i32, i32* %totpoly101, align 8, !dbg !4550
  %cmp102 = icmp slt i32 %92, %94, !dbg !4551
  br i1 %cmp102, label %for.body104, label %for.end162, !dbg !4552

for.body104:                                      ; preds = %for.cond100
  %95 = load i32, i32* %use_face_sel, align 4, !dbg !4553
  %cmp105 = icmp eq i32 %95, 0, !dbg !4556
  br i1 %cmp105, label %if.then112, label %lor.lhs.false107, !dbg !4557

lor.lhs.false107:                                 ; preds = %for.body104
  %96 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !4558
  %flag108 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %96, i32 0, i32 3, !dbg !4559
  %97 = load i8, i8* %flag108, align 2, !dbg !4559
  %conv109 = zext i8 %97 to i32, !dbg !4558
  %and110 = and i32 %conv109, 2, !dbg !4560
  %tobool111 = icmp ne i32 %and110, 0, !dbg !4560
  br i1 %tobool111, label %if.then112, label %if.end158, !dbg !4561

if.then112:                                       ; preds = %lor.lhs.false107, %for.body104
  call void @llvm.dbg.declare(metadata %struct.MLoop** %ml113, metadata !4562, metadata !DIExpression()), !dbg !4564
  %98 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !4565
  %mloop114 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %98, i32 0, i32 9, !dbg !4566
  %99 = load %struct.MLoop*, %struct.MLoop** %mloop114, align 8, !dbg !4566
  %100 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !4567
  %loopstart115 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %100, i32 0, i32 0, !dbg !4568
  %101 = load i32, i32* %loopstart115, align 4, !dbg !4568
  %idx.ext116 = sext i32 %101 to i64, !dbg !4569
  %add.ptr117 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %99, i64 %idx.ext116, !dbg !4569
  store %struct.MLoop* %add.ptr117, %struct.MLoop** %ml113, align 8, !dbg !4564
  call void @llvm.dbg.declare(metadata %struct.MLoopCol** %lcol118, metadata !4570, metadata !DIExpression()), !dbg !4571
  %102 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !4572
  %mloopcol119 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %102, i32 0, i32 11, !dbg !4573
  %103 = load %struct.MLoopCol*, %struct.MLoopCol** %mloopcol119, align 8, !dbg !4573
  %104 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !4574
  %loopstart120 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %104, i32 0, i32 0, !dbg !4575
  %105 = load i32, i32* %loopstart120, align 4, !dbg !4575
  %idx.ext121 = sext i32 %105 to i64, !dbg !4576
  %add.ptr122 = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %103, i64 %idx.ext121, !dbg !4576
  store %struct.MLoopCol* %add.ptr122, %struct.MLoopCol** %lcol118, align 8, !dbg !4571
  store i32 0, i32* %j, align 4, !dbg !4577
  br label %for.cond123, !dbg !4579

for.cond123:                                      ; preds = %for.inc153, %if.then112
  %106 = load i32, i32* %j, align 4, !dbg !4580
  %107 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !4582
  %totloop124 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %107, i32 0, i32 1, !dbg !4583
  %108 = load i32, i32* %totloop124, align 4, !dbg !4583
  %cmp125 = icmp slt i32 %106, %108, !dbg !4584
  br i1 %cmp125, label %for.body127, label %for.end157, !dbg !4585

for.body127:                                      ; preds = %for.cond123
  %109 = load i8*, i8** %mlooptag.addr, align 8, !dbg !4586
  %110 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !4589
  %loopstart128 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %110, i32 0, i32 0, !dbg !4590
  %111 = load i32, i32* %loopstart128, align 4, !dbg !4590
  %112 = load i32, i32* %j, align 4, !dbg !4591
  %add129 = add nsw i32 %111, %112, !dbg !4592
  %idxprom130 = sext i32 %add129 to i64, !dbg !4586
  %arrayidx131 = getelementptr inbounds i8, i8* %109, i64 %idxprom130, !dbg !4586
  %113 = load i8, i8* %arrayidx131, align 1, !dbg !4586
  %tobool132 = icmp ne i8 %113, 0, !dbg !4586
  br i1 %tobool132, label %if.then133, label %if.end152, !dbg !4593

if.then133:                                       ; preds = %for.body127
  %114 = load [4 x i32]*, [4 x i32]** %scol, align 8, !dbg !4594
  %115 = load %struct.MLoop*, %struct.MLoop** %ml113, align 8, !dbg !4596
  %v134 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %115, i32 0, i32 0, !dbg !4597
  %116 = load i32, i32* %v134, align 4, !dbg !4597
  %idxprom135 = zext i32 %116 to i64, !dbg !4594
  %arrayidx136 = getelementptr inbounds [4 x i32], [4 x i32]* %114, i64 %idxprom135, !dbg !4594
  %arrayidx137 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx136, i64 0, i64 0, !dbg !4594
  %117 = load i32, i32* %arrayidx137, align 4, !dbg !4594
  %conv138 = trunc i32 %117 to i8, !dbg !4594
  %118 = load %struct.MLoopCol*, %struct.MLoopCol** %lcol118, align 8, !dbg !4598
  %r139 = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %118, i32 0, i32 0, !dbg !4599
  store i8 %conv138, i8* %r139, align 1, !dbg !4600
  %119 = load [4 x i32]*, [4 x i32]** %scol, align 8, !dbg !4601
  %120 = load %struct.MLoop*, %struct.MLoop** %ml113, align 8, !dbg !4602
  %v140 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %120, i32 0, i32 0, !dbg !4603
  %121 = load i32, i32* %v140, align 4, !dbg !4603
  %idxprom141 = zext i32 %121 to i64, !dbg !4601
  %arrayidx142 = getelementptr inbounds [4 x i32], [4 x i32]* %119, i64 %idxprom141, !dbg !4601
  %arrayidx143 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx142, i64 0, i64 1, !dbg !4601
  %122 = load i32, i32* %arrayidx143, align 4, !dbg !4601
  %conv144 = trunc i32 %122 to i8, !dbg !4601
  %123 = load %struct.MLoopCol*, %struct.MLoopCol** %lcol118, align 8, !dbg !4604
  %g145 = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %123, i32 0, i32 1, !dbg !4605
  store i8 %conv144, i8* %g145, align 1, !dbg !4606
  %124 = load [4 x i32]*, [4 x i32]** %scol, align 8, !dbg !4607
  %125 = load %struct.MLoop*, %struct.MLoop** %ml113, align 8, !dbg !4608
  %v146 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %125, i32 0, i32 0, !dbg !4609
  %126 = load i32, i32* %v146, align 4, !dbg !4609
  %idxprom147 = zext i32 %126 to i64, !dbg !4607
  %arrayidx148 = getelementptr inbounds [4 x i32], [4 x i32]* %124, i64 %idxprom147, !dbg !4607
  %arrayidx149 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx148, i64 0, i64 2, !dbg !4607
  %127 = load i32, i32* %arrayidx149, align 4, !dbg !4607
  %conv150 = trunc i32 %127 to i8, !dbg !4607
  %128 = load %struct.MLoopCol*, %struct.MLoopCol** %lcol118, align 8, !dbg !4610
  %b151 = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %128, i32 0, i32 2, !dbg !4611
  store i8 %conv150, i8* %b151, align 1, !dbg !4612
  br label %if.end152, !dbg !4613

if.end152:                                        ; preds = %if.then133, %for.body127
  br label %for.inc153, !dbg !4614

for.inc153:                                       ; preds = %if.end152
  %129 = load i32, i32* %j, align 4, !dbg !4615
  %inc154 = add nsw i32 %129, 1, !dbg !4615
  store i32 %inc154, i32* %j, align 4, !dbg !4615
  %130 = load %struct.MLoop*, %struct.MLoop** %ml113, align 8, !dbg !4616
  %incdec.ptr155 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %130, i32 1, !dbg !4616
  store %struct.MLoop* %incdec.ptr155, %struct.MLoop** %ml113, align 8, !dbg !4616
  %131 = load %struct.MLoopCol*, %struct.MLoopCol** %lcol118, align 8, !dbg !4617
  %incdec.ptr156 = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %131, i32 1, !dbg !4617
  store %struct.MLoopCol* %incdec.ptr156, %struct.MLoopCol** %lcol118, align 8, !dbg !4617
  br label %for.cond123, !dbg !4618, !llvm.loop !4619

for.end157:                                       ; preds = %for.cond123
  br label %if.end158, !dbg !4621

if.end158:                                        ; preds = %for.end157, %lor.lhs.false107
  br label %for.inc159, !dbg !4622

for.inc159:                                       ; preds = %if.end158
  %132 = load i32, i32* %i, align 4, !dbg !4623
  %inc160 = add nsw i32 %132, 1, !dbg !4623
  store i32 %inc160, i32* %i, align 4, !dbg !4623
  %133 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !4624
  %incdec.ptr161 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %133, i32 1, !dbg !4624
  store %struct.MPoly* %incdec.ptr161, %struct.MPoly** %mp, align 8, !dbg !4624
  br label %for.cond100, !dbg !4625, !llvm.loop !4626

for.end162:                                       ; preds = %for.cond100
  br label %if.end163, !dbg !4628

if.end163:                                        ; preds = %for.end162, %for.end51
  %134 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4629
  %135 = load [4 x i32]*, [4 x i32]** %scol, align 8, !dbg !4630
  %136 = bitcast [4 x i32]* %135 to i8*, !dbg !4630
  call void %134(i8* %136), !dbg !4629
  %137 = load i8, i8* %has_shared, align 1, !dbg !4631
  %conv164 = zext i8 %137 to i32, !dbg !4631
  %tobool165 = icmp ne i32 %conv164, 0, !dbg !4631
  br i1 %tobool165, label %land.lhs.true, label %if.end169, !dbg !4633

land.lhs.true:                                    ; preds = %if.end163
  %138 = load i8, i8* %do_tessface.addr, align 1, !dbg !4634
  %conv166 = zext i8 %138 to i32, !dbg !4634
  %tobool167 = icmp ne i32 %conv166, 0, !dbg !4634
  br i1 %tobool167, label %if.then168, label %if.end169, !dbg !4635

if.then168:                                       ; preds = %land.lhs.true
  %139 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !4636
  %140 = load i8*, i8** %mfacetag.addr, align 8, !dbg !4638
  call void @do_shared_vertex_tesscol(%struct.Mesh* %139, i8* %140), !dbg !4639
  br label %if.end169, !dbg !4640

if.end169:                                        ; preds = %if.then, %if.then168, %land.lhs.true, %if.end163
  ret void, !dbg !4641
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @PAINT_OT_weight_sample(%struct.wmOperatorType* %ot) #0 !dbg !4642 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !4643, metadata !DIExpression()), !dbg !4644
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4645
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !4646
  store i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1, i64 0, i64 0), i8** %name, align 8, !dbg !4647
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4648
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !4649
  store i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8** %idname, align 8, !dbg !4650
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4651
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !4652
  store i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.3, i64 0, i64 0), i8** %description, align 8, !dbg !4653
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4654
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 6, !dbg !4655
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @weight_sample_invoke, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !4656
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4657
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !4658
  store i32 (%struct.bContext*)* @weight_paint_mode_poll, i32 (%struct.bContext*)** %poll, align 8, !dbg !4659
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4660
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !4661
  store i16 2, i16* %flag, align 8, !dbg !4662
  ret void, !dbg !4663
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @weight_sample_invoke(%struct.bContext* %C, %struct.wmOperator* %op, %struct.wmEvent* %event) #0 !dbg !4664 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %event.addr = alloca %struct.wmEvent*, align 8
  %vc = alloca %struct.ViewContext, align 8
  %me = alloca %struct.Mesh*, align 8
  %changed = alloca i8, align 1
  %use_vert_sel = alloca i32, align 4
  %v_idx_best = alloca i32, align 4
  %index = alloca i32, align 4
  %ts = alloca %struct.ToolSettings*, align 8
  %brush = alloca %struct.Brush*, align 8
  %vgroup_active = alloca i32, align 4
  %vgroup_weight = alloca float, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4672, metadata !DIExpression()), !dbg !4673
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !4674, metadata !DIExpression()), !dbg !4675
  store %struct.wmEvent* %event, %struct.wmEvent** %event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event.addr, metadata !4676, metadata !DIExpression()), !dbg !4677
  call void @llvm.dbg.declare(metadata %struct.ViewContext* %vc, metadata !4678, metadata !DIExpression()), !dbg !4839
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me, metadata !4840, metadata !DIExpression()), !dbg !4841
  call void @llvm.dbg.declare(metadata i8* %changed, metadata !4842, metadata !DIExpression()), !dbg !4843
  store i8 0, i8* %changed, align 1, !dbg !4843
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4844
  call void @view3d_set_viewcontext(%struct.bContext* %0, %struct.ViewContext* %vc), !dbg !4845
  %obact = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %vc, i32 0, i32 1, !dbg !4846
  %1 = load %struct.Object*, %struct.Object** %obact, align 8, !dbg !4846
  %call = call %struct.Mesh* @BKE_mesh_from_object(%struct.Object* %1), !dbg !4847
  store %struct.Mesh* %call, %struct.Mesh** %me, align 8, !dbg !4848
  %2 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !4849
  %tobool = icmp ne %struct.Mesh* %2, null, !dbg !4849
  br i1 %tobool, label %land.lhs.true, label %if.end41, !dbg !4851

land.lhs.true:                                    ; preds = %entry
  %3 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !4852
  %dvert = getelementptr inbounds %struct.Mesh, %struct.Mesh* %3, i32 0, i32 17, !dbg !4853
  %4 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert, align 8, !dbg !4853
  %tobool1 = icmp ne %struct.MDeformVert* %4, null, !dbg !4852
  br i1 %tobool1, label %land.lhs.true2, label %if.end41, !dbg !4854

land.lhs.true2:                                   ; preds = %land.lhs.true
  %v3d = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %vc, i32 0, i32 4, !dbg !4855
  %5 = load %struct.View3D*, %struct.View3D** %v3d, align 8, !dbg !4855
  %tobool3 = icmp ne %struct.View3D* %5, null, !dbg !4856
  br i1 %tobool3, label %land.lhs.true4, label %if.end41, !dbg !4857

land.lhs.true4:                                   ; preds = %land.lhs.true2
  %rv3d = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %vc, i32 0, i32 5, !dbg !4858
  %6 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d, align 8, !dbg !4858
  %tobool5 = icmp ne %struct.RegionView3D* %6, null, !dbg !4859
  br i1 %tobool5, label %if.then, label %if.end41, !dbg !4860

if.then:                                          ; preds = %land.lhs.true4
  call void @llvm.dbg.declare(metadata i32* %use_vert_sel, metadata !4861, metadata !DIExpression()), !dbg !4863
  %7 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !4864
  %editflag = getelementptr inbounds %struct.Mesh, %struct.Mesh* %7, i32 0, i32 46, !dbg !4865
  %8 = load i8, i8* %editflag, align 1, !dbg !4865
  %conv = zext i8 %8 to i32, !dbg !4864
  %and = and i32 %conv, 32, !dbg !4866
  %cmp = icmp ne i32 %and, 0, !dbg !4867
  %conv6 = zext i1 %cmp to i32, !dbg !4867
  store i32 %conv6, i32* %use_vert_sel, align 4, !dbg !4863
  call void @llvm.dbg.declare(metadata i32* %v_idx_best, metadata !4868, metadata !DIExpression()), !dbg !4869
  store i32 -1, i32* %v_idx_best, align 4, !dbg !4869
  call void @llvm.dbg.declare(metadata i32* %index, metadata !4870, metadata !DIExpression()), !dbg !4871
  %9 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4872
  call void @view3d_operator_needs_opengl(%struct.bContext* %9), !dbg !4873
  %obact7 = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %vc, i32 0, i32 1, !dbg !4874
  %10 = load %struct.Object*, %struct.Object** %obact7, align 8, !dbg !4874
  %rv3d8 = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %vc, i32 0, i32 5, !dbg !4875
  %11 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d8, align 8, !dbg !4875
  call void @ED_view3d_init_mats_rv3d(%struct.Object* %10, %struct.RegionView3D* %11), !dbg !4876
  %12 = load i32, i32* %use_vert_sel, align 4, !dbg !4877
  %tobool9 = icmp ne i32 %12, 0, !dbg !4877
  br i1 %tobool9, label %if.then10, label %if.else, !dbg !4879

if.then10:                                        ; preds = %if.then
  %13 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4880
  %obact11 = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %vc, i32 0, i32 1, !dbg !4883
  %14 = load %struct.Object*, %struct.Object** %obact11, align 8, !dbg !4883
  %15 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !4884
  %mval = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %15, i32 0, i32 6, !dbg !4885
  %arraydecay = getelementptr inbounds [2 x i32], [2 x i32]* %mval, i64 0, i64 0, !dbg !4884
  %call12 = call zeroext i8 @ED_mesh_pick_vert(%struct.bContext* %13, %struct.Object* %14, i32* %arraydecay, i32* %index, i32 50, i8 zeroext 1), !dbg !4886
  %tobool13 = icmp ne i8 %call12, 0, !dbg !4886
  br i1 %tobool13, label %if.then14, label %if.end, !dbg !4887

if.then14:                                        ; preds = %if.then10
  %16 = load i32, i32* %index, align 4, !dbg !4888
  store i32 %16, i32* %v_idx_best, align 4, !dbg !4890
  br label %if.end, !dbg !4891

if.end:                                           ; preds = %if.then14, %if.then10
  br label %if.end30, !dbg !4892

if.else:                                          ; preds = %if.then
  %17 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4893
  %obact15 = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %vc, i32 0, i32 1, !dbg !4896
  %18 = load %struct.Object*, %struct.Object** %obact15, align 8, !dbg !4896
  %19 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !4897
  %mval16 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %19, i32 0, i32 6, !dbg !4898
  %arraydecay17 = getelementptr inbounds [2 x i32], [2 x i32]* %mval16, i64 0, i64 0, !dbg !4897
  %call18 = call zeroext i8 @ED_mesh_pick_face_vert(%struct.bContext* %17, %struct.Object* %18, i32* %arraydecay17, i32* %index, i32 3), !dbg !4899
  %tobool19 = icmp ne i8 %call18, 0, !dbg !4899
  br i1 %tobool19, label %if.then20, label %if.else21, !dbg !4900

if.then20:                                        ; preds = %if.else
  %20 = load i32, i32* %index, align 4, !dbg !4901
  store i32 %20, i32* %v_idx_best, align 4, !dbg !4903
  br label %if.end29, !dbg !4904

if.else21:                                        ; preds = %if.else
  %21 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4905
  %obact22 = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %vc, i32 0, i32 1, !dbg !4907
  %22 = load %struct.Object*, %struct.Object** %obact22, align 8, !dbg !4907
  %23 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !4908
  %mval23 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %23, i32 0, i32 6, !dbg !4909
  %arraydecay24 = getelementptr inbounds [2 x i32], [2 x i32]* %mval23, i64 0, i64 0, !dbg !4908
  %call25 = call zeroext i8 @ED_mesh_pick_face(%struct.bContext* %21, %struct.Object* %22, i32* %arraydecay24, i32* %index, i32 3), !dbg !4910
  %tobool26 = icmp ne i8 %call25, 0, !dbg !4910
  br i1 %tobool26, label %if.then27, label %if.end28, !dbg !4911

if.then27:                                        ; preds = %if.else21
  %24 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !4912
  %reports = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %24, i32 0, i32 8, !dbg !4914
  %25 = load %struct.ReportList*, %struct.ReportList** %reports, align 8, !dbg !4914
  call void @BKE_report(%struct.ReportList* %25, i32 16, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.48, i64 0, i64 0)), !dbg !4915
  br label %if.end28, !dbg !4916

if.end28:                                         ; preds = %if.then27, %if.else21
  br label %if.end29

if.end29:                                         ; preds = %if.end28, %if.then20
  br label %if.end30

if.end30:                                         ; preds = %if.end29, %if.end
  %26 = load i32, i32* %v_idx_best, align 4, !dbg !4917
  %cmp31 = icmp ne i32 %26, -1, !dbg !4919
  br i1 %cmp31, label %if.then33, label %if.end40, !dbg !4920

if.then33:                                        ; preds = %if.end30
  call void @llvm.dbg.declare(metadata %struct.ToolSettings** %ts, metadata !4921, metadata !DIExpression()), !dbg !4925
  %scene = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %vc, i32 0, i32 0, !dbg !4926
  %27 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !4926
  %toolsettings = getelementptr inbounds %struct.Scene, %struct.Scene* %27, i32 0, i32 20, !dbg !4927
  %28 = load %struct.ToolSettings*, %struct.ToolSettings** %toolsettings, align 8, !dbg !4927
  store %struct.ToolSettings* %28, %struct.ToolSettings** %ts, align 8, !dbg !4925
  call void @llvm.dbg.declare(metadata %struct.Brush** %brush, metadata !4928, metadata !DIExpression()), !dbg !4929
  %29 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !4930
  %wpaint = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %29, i32 0, i32 1, !dbg !4931
  %30 = load %struct.VPaint*, %struct.VPaint** %wpaint, align 8, !dbg !4931
  %paint = getelementptr inbounds %struct.VPaint, %struct.VPaint* %30, i32 0, i32 0, !dbg !4932
  %call34 = call %struct.Brush* @BKE_paint_brush(%struct.Paint* %paint), !dbg !4933
  store %struct.Brush* %call34, %struct.Brush** %brush, align 8, !dbg !4929
  call void @llvm.dbg.declare(metadata i32* %vgroup_active, metadata !4934, metadata !DIExpression()), !dbg !4935
  %obact35 = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %vc, i32 0, i32 1, !dbg !4936
  %31 = load %struct.Object*, %struct.Object** %obact35, align 8, !dbg !4936
  %actdef = getelementptr inbounds %struct.Object, %struct.Object* %31, i32 0, i32 97, !dbg !4937
  %32 = load i16, i16* %actdef, align 2, !dbg !4937
  %conv36 = zext i16 %32 to i32, !dbg !4938
  %sub = sub nsw i32 %conv36, 1, !dbg !4939
  store i32 %sub, i32* %vgroup_active, align 4, !dbg !4935
  call void @llvm.dbg.declare(metadata float* %vgroup_weight, metadata !4940, metadata !DIExpression()), !dbg !4941
  %33 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !4942
  %dvert37 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %33, i32 0, i32 17, !dbg !4943
  %34 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert37, align 8, !dbg !4943
  %35 = load i32, i32* %v_idx_best, align 4, !dbg !4944
  %idxprom = sext i32 %35 to i64, !dbg !4942
  %arrayidx = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %34, i64 %idxprom, !dbg !4942
  %36 = load i32, i32* %vgroup_active, align 4, !dbg !4945
  %call38 = call float @defvert_find_weight(%struct.MDeformVert* %arrayidx, i32 %36), !dbg !4946
  store float %call38, float* %vgroup_weight, align 4, !dbg !4941
  %scene39 = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %vc, i32 0, i32 0, !dbg !4947
  %37 = load %struct.Scene*, %struct.Scene** %scene39, align 8, !dbg !4947
  %38 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !4948
  %39 = load float, float* %vgroup_weight, align 4, !dbg !4949
  call void @BKE_brush_weight_set(%struct.Scene* %37, %struct.Brush* %38, float %39), !dbg !4950
  store i8 1, i8* %changed, align 1, !dbg !4951
  br label %if.end40, !dbg !4952

if.end40:                                         ; preds = %if.then33, %if.end30
  br label %if.end41, !dbg !4953

if.end41:                                         ; preds = %if.end40, %land.lhs.true4, %land.lhs.true2, %land.lhs.true, %entry
  %40 = load i8, i8* %changed, align 1, !dbg !4954
  %tobool42 = icmp ne i8 %40, 0, !dbg !4954
  br i1 %tobool42, label %if.then43, label %if.else44, !dbg !4956

if.then43:                                        ; preds = %if.end41
  call void @WM_main_add_notifier(i32 184549377, i8* null), !dbg !4957
  store i32 4, i32* %retval, align 4, !dbg !4959
  br label %return, !dbg !4959

if.else44:                                        ; preds = %if.end41
  store i32 2, i32* %retval, align 4, !dbg !4960
  br label %return, !dbg !4960

return:                                           ; preds = %if.else44, %if.then43
  %41 = load i32, i32* %retval, align 4, !dbg !4962
  ret i32 %41, !dbg !4962
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @PAINT_OT_weight_sample_group(%struct.wmOperatorType* %ot) #0 !dbg !4963 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  %prop = alloca %struct.PropertyRNA*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !4964, metadata !DIExpression()), !dbg !4965
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop, metadata !4966, metadata !DIExpression()), !dbg !4967
  store %struct.PropertyRNA* null, %struct.PropertyRNA** %prop, align 8, !dbg !4967
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4968
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !4969
  store i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.4, i64 0, i64 0), i8** %name, align 8, !dbg !4970
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4971
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !4972
  store i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.5, i64 0, i64 0), i8** %idname, align 8, !dbg !4973
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4974
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !4975
  store i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.6, i64 0, i64 0), i8** %description, align 8, !dbg !4976
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4977
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !4978
  store i32 (%struct.bContext*, %struct.wmOperator*)* @weight_sample_group_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !4979
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4980
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 6, !dbg !4981
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @WM_menu_invoke, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !4982
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4983
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 9, !dbg !4984
  store i32 (%struct.bContext*)* @weight_paint_mode_poll, i32 (%struct.bContext*)** %poll, align 8, !dbg !4985
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4986
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 19, !dbg !4987
  store i16 2, i16* %flag, align 8, !dbg !4988
  %7 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4989
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %7, i32 0, i32 11, !dbg !4990
  %8 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !4990
  %9 = bitcast %struct.StructRNA* %8 to i8*, !dbg !4989
  %call = call %struct.PropertyRNA* @RNA_def_enum(i8* %9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7, i64 0, i64 0), %struct.EnumPropertyItem* getelementptr inbounds ([0 x %struct.EnumPropertyItem], [0 x %struct.EnumPropertyItem]* @DummyRNA_DEFAULT_items, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.9, i64 0, i64 0)), !dbg !4991
  store %struct.PropertyRNA* %call, %struct.PropertyRNA** %prop, align 8, !dbg !4992
  %10 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !4993
  call void @RNA_def_enum_funcs(%struct.PropertyRNA* %10, %struct.EnumPropertyItem* (%struct.bContext*, %struct.PointerRNA*, %struct.PropertyRNA*, i8*)* @weight_paint_sample_enum_itemf), !dbg !4994
  %11 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !4995
  call void @RNA_def_property_flag(%struct.PropertyRNA* %11, i32 536870912), !dbg !4996
  %12 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !4997
  %13 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4998
  %prop1 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %13, i32 0, i32 13, !dbg !4999
  store %struct.PropertyRNA* %12, %struct.PropertyRNA** %prop1, align 8, !dbg !5000
  ret void, !dbg !5001
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @weight_sample_group_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !5002 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %type = alloca i32, align 4
  %vc = alloca %struct.ViewContext, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5005, metadata !DIExpression()), !dbg !5006
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !5007, metadata !DIExpression()), !dbg !5008
  call void @llvm.dbg.declare(metadata i32* %type, metadata !5009, metadata !DIExpression()), !dbg !5010
  %0 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5011
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %0, i32 0, i32 7, !dbg !5012
  %1 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !5012
  %call = call i32 @RNA_enum_get(%struct.PointerRNA* %1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7, i64 0, i64 0)), !dbg !5013
  store i32 %call, i32* %type, align 4, !dbg !5010
  call void @llvm.dbg.declare(metadata %struct.ViewContext* %vc, metadata !5014, metadata !DIExpression()), !dbg !5015
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5016
  call void @view3d_set_viewcontext(%struct.bContext* %2, %struct.ViewContext* %vc), !dbg !5017
  %3 = load i32, i32* %type, align 4, !dbg !5018
  %add = add nsw i32 %3, 1, !dbg !5019
  %conv = trunc i32 %add to i16, !dbg !5018
  %obact = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %vc, i32 0, i32 1, !dbg !5020
  %4 = load %struct.Object*, %struct.Object** %obact, align 8, !dbg !5020
  %actdef = getelementptr inbounds %struct.Object, %struct.Object* %4, i32 0, i32 97, !dbg !5021
  store i16 %conv, i16* %actdef, align 2, !dbg !5022
  %obact1 = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %vc, i32 0, i32 1, !dbg !5023
  %5 = load %struct.Object*, %struct.Object** %obact1, align 8, !dbg !5023
  %id = getelementptr inbounds %struct.Object, %struct.Object* %5, i32 0, i32 0, !dbg !5024
  call void @DAG_id_tag_update(%struct.ID* %id, i16 signext 2), !dbg !5025
  %6 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5026
  %obact2 = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %vc, i32 0, i32 1, !dbg !5027
  %7 = load %struct.Object*, %struct.Object** %obact2, align 8, !dbg !5027
  %8 = bitcast %struct.Object* %7 to i8*, !dbg !5028
  call void @WM_event_add_notifier(%struct.bContext* %6, i32 85393408, i8* %8), !dbg !5029
  ret i32 4, !dbg !5030
}

declare dso_local i32 @WM_menu_invoke(%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*) #2

declare dso_local %struct.PropertyRNA* @RNA_def_enum(i8*, i8*, %struct.EnumPropertyItem*, i32, i8*, i8*) #2

declare dso_local void @RNA_def_enum_funcs(%struct.PropertyRNA*, %struct.EnumPropertyItem* (%struct.bContext*, %struct.PointerRNA*, %struct.PropertyRNA*, i8*)*) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct.EnumPropertyItem* @weight_paint_sample_enum_itemf(%struct.bContext* %C, %struct.PointerRNA* %UNUSED_ptr, %struct.PropertyRNA* %UNUSED_prop, i8* %r_free) #0 !dbg !5031 {
entry:
  %retval = alloca %struct.EnumPropertyItem*, align 8
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_ptr.addr = alloca %struct.PointerRNA*, align 8
  %UNUSED_prop.addr = alloca %struct.PropertyRNA*, align 8
  %r_free.addr = alloca i8*, align 8
  %win = alloca %struct.wmWindow*, align 8
  %vc = alloca %struct.ViewContext, align 8
  %me = alloca %struct.Mesh*, align 8
  %defbase_tot = alloca i32, align 4
  %use_vert_sel = alloca i32, align 4
  %groups = alloca i32*, align 8
  %found = alloca i8, align 1
  %index = alloca i32, align 4
  %mval = alloca [2 x i32], align 4
  %dvert35 = alloca %struct.MDeformVert*, align 8
  %mp = alloca %struct.MPoly*, align 8
  %fidx = alloca i32, align 4
  %dvert49 = alloca %struct.MDeformVert*, align 8
  %item = alloca %struct.EnumPropertyItem*, align 8
  %item_tmp = alloca %struct.EnumPropertyItem, align 8
  %totitem = alloca i32, align 4
  %i = alloca i32, align 4
  %dg = alloca %struct.bDeformGroup*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5037, metadata !DIExpression()), !dbg !5038
  store %struct.PointerRNA* %UNUSED_ptr, %struct.PointerRNA** %UNUSED_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %UNUSED_ptr.addr, metadata !5039, metadata !DIExpression()), !dbg !5040
  store %struct.PropertyRNA* %UNUSED_prop, %struct.PropertyRNA** %UNUSED_prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %UNUSED_prop.addr, metadata !5041, metadata !DIExpression()), !dbg !5042
  store i8* %r_free, i8** %r_free.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %r_free.addr, metadata !5043, metadata !DIExpression()), !dbg !5044
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5045
  %tobool = icmp ne %struct.bContext* %0, null, !dbg !5045
  br i1 %tobool, label %if.then, label %if.end84, !dbg !5047

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.wmWindow** %win, metadata !5048, metadata !DIExpression()), !dbg !5052
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5053
  %call = call %struct.wmWindow* @CTX_wm_window(%struct.bContext* %1), !dbg !5054
  store %struct.wmWindow* %call, %struct.wmWindow** %win, align 8, !dbg !5052
  %2 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !5055
  %tobool1 = icmp ne %struct.wmWindow* %2, null, !dbg !5055
  br i1 %tobool1, label %land.lhs.true, label %if.end83, !dbg !5057

land.lhs.true:                                    ; preds = %if.then
  %3 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !5058
  %eventstate = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %3, i32 0, i32 21, !dbg !5059
  %4 = load %struct.wmEvent*, %struct.wmEvent** %eventstate, align 8, !dbg !5059
  %tobool2 = icmp ne %struct.wmEvent* %4, null, !dbg !5058
  br i1 %tobool2, label %if.then3, label %if.end83, !dbg !5060

if.then3:                                         ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.ViewContext* %vc, metadata !5061, metadata !DIExpression()), !dbg !5063
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me, metadata !5064, metadata !DIExpression()), !dbg !5065
  %5 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5066
  call void @view3d_set_viewcontext(%struct.bContext* %5, %struct.ViewContext* %vc), !dbg !5067
  %obact = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %vc, i32 0, i32 1, !dbg !5068
  %6 = load %struct.Object*, %struct.Object** %obact, align 8, !dbg !5068
  %call4 = call %struct.Mesh* @BKE_mesh_from_object(%struct.Object* %6), !dbg !5069
  store %struct.Mesh* %call4, %struct.Mesh** %me, align 8, !dbg !5070
  %7 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !5071
  %tobool5 = icmp ne %struct.Mesh* %7, null, !dbg !5071
  br i1 %tobool5, label %land.lhs.true6, label %if.end82, !dbg !5073

land.lhs.true6:                                   ; preds = %if.then3
  %8 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !5074
  %dvert = getelementptr inbounds %struct.Mesh, %struct.Mesh* %8, i32 0, i32 17, !dbg !5075
  %9 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert, align 8, !dbg !5075
  %tobool7 = icmp ne %struct.MDeformVert* %9, null, !dbg !5074
  br i1 %tobool7, label %land.lhs.true8, label %if.end82, !dbg !5076

land.lhs.true8:                                   ; preds = %land.lhs.true6
  %v3d = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %vc, i32 0, i32 4, !dbg !5077
  %10 = load %struct.View3D*, %struct.View3D** %v3d, align 8, !dbg !5077
  %tobool9 = icmp ne %struct.View3D* %10, null, !dbg !5078
  br i1 %tobool9, label %land.lhs.true10, label %if.end82, !dbg !5079

land.lhs.true10:                                  ; preds = %land.lhs.true8
  %rv3d = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %vc, i32 0, i32 5, !dbg !5080
  %11 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d, align 8, !dbg !5080
  %tobool11 = icmp ne %struct.RegionView3D* %11, null, !dbg !5081
  br i1 %tobool11, label %land.lhs.true12, label %if.end82, !dbg !5082

land.lhs.true12:                                  ; preds = %land.lhs.true10
  %obact13 = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %vc, i32 0, i32 1, !dbg !5083
  %12 = load %struct.Object*, %struct.Object** %obact13, align 8, !dbg !5083
  %defbase = getelementptr inbounds %struct.Object, %struct.Object* %12, i32 0, i32 25, !dbg !5084
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %defbase, i32 0, i32 0, !dbg !5085
  %13 = load i8*, i8** %first, align 8, !dbg !5085
  %tobool14 = icmp ne i8* %13, null, !dbg !5086
  br i1 %tobool14, label %if.then15, label %if.end82, !dbg !5087

if.then15:                                        ; preds = %land.lhs.true12
  call void @llvm.dbg.declare(metadata i32* %defbase_tot, metadata !5088, metadata !DIExpression()), !dbg !5090
  %obact16 = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %vc, i32 0, i32 1, !dbg !5091
  %14 = load %struct.Object*, %struct.Object** %obact16, align 8, !dbg !5091
  %defbase17 = getelementptr inbounds %struct.Object, %struct.Object* %14, i32 0, i32 25, !dbg !5092
  %call18 = call i32 @BLI_countlist(%struct.ListBase* %defbase17), !dbg !5093
  store i32 %call18, i32* %defbase_tot, align 4, !dbg !5090
  call void @llvm.dbg.declare(metadata i32* %use_vert_sel, metadata !5094, metadata !DIExpression()), !dbg !5095
  %15 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !5096
  %editflag = getelementptr inbounds %struct.Mesh, %struct.Mesh* %15, i32 0, i32 46, !dbg !5097
  %16 = load i8, i8* %editflag, align 1, !dbg !5097
  %conv = zext i8 %16 to i32, !dbg !5096
  %and = and i32 %conv, 32, !dbg !5098
  %cmp = icmp ne i32 %and, 0, !dbg !5099
  %conv19 = zext i1 %cmp to i32, !dbg !5099
  store i32 %conv19, i32* %use_vert_sel, align 4, !dbg !5095
  call void @llvm.dbg.declare(metadata i32** %groups, metadata !5100, metadata !DIExpression()), !dbg !5101
  %17 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !5102
  %18 = load i32, i32* %defbase_tot, align 4, !dbg !5103
  %conv20 = sext i32 %18 to i64, !dbg !5103
  %mul = mul i64 %conv20, 4, !dbg !5104
  %call21 = call i8* %17(i64 %mul, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.49, i64 0, i64 0)), !dbg !5102
  %19 = bitcast i8* %call21 to i32*, !dbg !5102
  store i32* %19, i32** %groups, align 8, !dbg !5101
  call void @llvm.dbg.declare(metadata i8* %found, metadata !5105, metadata !DIExpression()), !dbg !5106
  store i8 0, i8* %found, align 1, !dbg !5106
  call void @llvm.dbg.declare(metadata i32* %index, metadata !5107, metadata !DIExpression()), !dbg !5108
  call void @llvm.dbg.declare(metadata [2 x i32]* %mval, metadata !5109, metadata !DIExpression()), !dbg !5111
  %arrayinit.begin = getelementptr inbounds [2 x i32], [2 x i32]* %mval, i64 0, i64 0, !dbg !5112
  %20 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !5113
  %eventstate22 = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %20, i32 0, i32 21, !dbg !5114
  %21 = load %struct.wmEvent*, %struct.wmEvent** %eventstate22, align 8, !dbg !5114
  %x = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %21, i32 0, i32 4, !dbg !5115
  %22 = load i32, i32* %x, align 4, !dbg !5115
  %ar = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %vc, i32 0, i32 3, !dbg !5116
  %23 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !5116
  %winrct = getelementptr inbounds %struct.ARegion, %struct.ARegion* %23, i32 0, i32 3, !dbg !5117
  %xmin = getelementptr inbounds %struct.rcti, %struct.rcti* %winrct, i32 0, i32 0, !dbg !5118
  %24 = load i32, i32* %xmin, align 8, !dbg !5118
  %sub = sub nsw i32 %22, %24, !dbg !5119
  store i32 %sub, i32* %arrayinit.begin, align 4, !dbg !5112
  %arrayinit.element = getelementptr inbounds i32, i32* %arrayinit.begin, i64 1, !dbg !5112
  %25 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !5120
  %eventstate23 = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %25, i32 0, i32 21, !dbg !5121
  %26 = load %struct.wmEvent*, %struct.wmEvent** %eventstate23, align 8, !dbg !5121
  %y = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %26, i32 0, i32 5, !dbg !5122
  %27 = load i32, i32* %y, align 8, !dbg !5122
  %ar24 = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %vc, i32 0, i32 3, !dbg !5123
  %28 = load %struct.ARegion*, %struct.ARegion** %ar24, align 8, !dbg !5123
  %winrct25 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %28, i32 0, i32 3, !dbg !5124
  %ymin = getelementptr inbounds %struct.rcti, %struct.rcti* %winrct25, i32 0, i32 2, !dbg !5125
  %29 = load i32, i32* %ymin, align 8, !dbg !5125
  %sub26 = sub nsw i32 %27, %29, !dbg !5126
  store i32 %sub26, i32* %arrayinit.element, align 4, !dbg !5112
  %30 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5127
  call void @view3d_operator_needs_opengl(%struct.bContext* %30), !dbg !5128
  %obact27 = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %vc, i32 0, i32 1, !dbg !5129
  %31 = load %struct.Object*, %struct.Object** %obact27, align 8, !dbg !5129
  %rv3d28 = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %vc, i32 0, i32 5, !dbg !5130
  %32 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d28, align 8, !dbg !5130
  call void @ED_view3d_init_mats_rv3d(%struct.Object* %31, %struct.RegionView3D* %32), !dbg !5131
  %33 = load i32, i32* %use_vert_sel, align 4, !dbg !5132
  %tobool29 = icmp ne i32 %33, 0, !dbg !5132
  br i1 %tobool29, label %if.then30, label %if.else, !dbg !5134

if.then30:                                        ; preds = %if.then15
  %34 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5135
  %obact31 = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %vc, i32 0, i32 1, !dbg !5138
  %35 = load %struct.Object*, %struct.Object** %obact31, align 8, !dbg !5138
  %arraydecay = getelementptr inbounds [2 x i32], [2 x i32]* %mval, i64 0, i64 0, !dbg !5139
  %call32 = call zeroext i8 @ED_mesh_pick_vert(%struct.bContext* %34, %struct.Object* %35, i32* %arraydecay, i32* %index, i32 50, i8 zeroext 1), !dbg !5140
  %tobool33 = icmp ne i8 %call32, 0, !dbg !5140
  br i1 %tobool33, label %if.then34, label %if.end, !dbg !5141

if.then34:                                        ; preds = %if.then30
  call void @llvm.dbg.declare(metadata %struct.MDeformVert** %dvert35, metadata !5142, metadata !DIExpression()), !dbg !5144
  %36 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !5145
  %dvert36 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %36, i32 0, i32 17, !dbg !5146
  %37 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert36, align 8, !dbg !5146
  %38 = load i32, i32* %index, align 4, !dbg !5147
  %idxprom = zext i32 %38 to i64, !dbg !5145
  %arrayidx = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %37, i64 %idxprom, !dbg !5145
  store %struct.MDeformVert* %arrayidx, %struct.MDeformVert** %dvert35, align 8, !dbg !5144
  %39 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert35, align 8, !dbg !5148
  %40 = load i32, i32* %defbase_tot, align 4, !dbg !5149
  %41 = load i32*, i32** %groups, align 8, !dbg !5150
  %call37 = call zeroext i8 @weight_paint_sample_enum_itemf__helper(%struct.MDeformVert* %39, i32 %40, i32* %41), !dbg !5151
  %conv38 = zext i8 %call37 to i32, !dbg !5151
  %42 = load i8, i8* %found, align 1, !dbg !5152
  %conv39 = zext i8 %42 to i32, !dbg !5152
  %or = or i32 %conv39, %conv38, !dbg !5152
  %conv40 = trunc i32 %or to i8, !dbg !5152
  store i8 %conv40, i8* %found, align 1, !dbg !5152
  br label %if.end, !dbg !5153

if.end:                                           ; preds = %if.then34, %if.then30
  br label %if.end62, !dbg !5154

if.else:                                          ; preds = %if.then15
  %43 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5155
  %obact41 = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %vc, i32 0, i32 1, !dbg !5158
  %44 = load %struct.Object*, %struct.Object** %obact41, align 8, !dbg !5158
  %arraydecay42 = getelementptr inbounds [2 x i32], [2 x i32]* %mval, i64 0, i64 0, !dbg !5159
  %call43 = call zeroext i8 @ED_mesh_pick_face(%struct.bContext* %43, %struct.Object* %44, i32* %arraydecay42, i32* %index, i32 3), !dbg !5160
  %tobool44 = icmp ne i8 %call43, 0, !dbg !5160
  br i1 %tobool44, label %if.then45, label %if.end61, !dbg !5161

if.then45:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata %struct.MPoly** %mp, metadata !5162, metadata !DIExpression()), !dbg !5164
  %45 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !5165
  %mpoly = getelementptr inbounds %struct.Mesh, %struct.Mesh* %45, i32 0, i32 7, !dbg !5166
  %46 = load %struct.MPoly*, %struct.MPoly** %mpoly, align 8, !dbg !5166
  %47 = load i32, i32* %index, align 4, !dbg !5167
  %idxprom46 = zext i32 %47 to i64, !dbg !5165
  %arrayidx47 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %46, i64 %idxprom46, !dbg !5165
  store %struct.MPoly* %arrayidx47, %struct.MPoly** %mp, align 8, !dbg !5164
  call void @llvm.dbg.declare(metadata i32* %fidx, metadata !5168, metadata !DIExpression()), !dbg !5169
  %48 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !5170
  %totloop = getelementptr inbounds %struct.MPoly, %struct.MPoly* %48, i32 0, i32 1, !dbg !5171
  %49 = load i32, i32* %totloop, align 4, !dbg !5171
  %sub48 = sub nsw i32 %49, 1, !dbg !5172
  store i32 %sub48, i32* %fidx, align 4, !dbg !5169
  br label %do.body, !dbg !5173

do.body:                                          ; preds = %do.cond, %if.then45
  call void @llvm.dbg.declare(metadata %struct.MDeformVert** %dvert49, metadata !5174, metadata !DIExpression()), !dbg !5176
  %50 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !5177
  %dvert50 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %50, i32 0, i32 17, !dbg !5178
  %51 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert50, align 8, !dbg !5178
  %52 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !5179
  %mloop = getelementptr inbounds %struct.Mesh, %struct.Mesh* %52, i32 0, i32 9, !dbg !5180
  %53 = load %struct.MLoop*, %struct.MLoop** %mloop, align 8, !dbg !5180
  %54 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !5181
  %loopstart = getelementptr inbounds %struct.MPoly, %struct.MPoly* %54, i32 0, i32 0, !dbg !5182
  %55 = load i32, i32* %loopstart, align 4, !dbg !5182
  %56 = load i32, i32* %fidx, align 4, !dbg !5183
  %add = add i32 %55, %56, !dbg !5184
  %idxprom51 = zext i32 %add to i64, !dbg !5179
  %arrayidx52 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %53, i64 %idxprom51, !dbg !5179
  %v = getelementptr inbounds %struct.MLoop, %struct.MLoop* %arrayidx52, i32 0, i32 0, !dbg !5185
  %57 = load i32, i32* %v, align 4, !dbg !5185
  %idxprom53 = zext i32 %57 to i64, !dbg !5177
  %arrayidx54 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %51, i64 %idxprom53, !dbg !5177
  store %struct.MDeformVert* %arrayidx54, %struct.MDeformVert** %dvert49, align 8, !dbg !5176
  %58 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert49, align 8, !dbg !5186
  %59 = load i32, i32* %defbase_tot, align 4, !dbg !5187
  %60 = load i32*, i32** %groups, align 8, !dbg !5188
  %call55 = call zeroext i8 @weight_paint_sample_enum_itemf__helper(%struct.MDeformVert* %58, i32 %59, i32* %60), !dbg !5189
  %conv56 = zext i8 %call55 to i32, !dbg !5189
  %61 = load i8, i8* %found, align 1, !dbg !5190
  %conv57 = zext i8 %61 to i32, !dbg !5190
  %or58 = or i32 %conv57, %conv56, !dbg !5190
  %conv59 = trunc i32 %or58 to i8, !dbg !5190
  store i8 %conv59, i8* %found, align 1, !dbg !5190
  br label %do.cond, !dbg !5191

do.cond:                                          ; preds = %do.body
  %62 = load i32, i32* %fidx, align 4, !dbg !5192
  %dec = add i32 %62, -1, !dbg !5192
  store i32 %dec, i32* %fidx, align 4, !dbg !5192
  %tobool60 = icmp ne i32 %62, 0, !dbg !5191
  br i1 %tobool60, label %do.body, label %do.end, !dbg !5191, !llvm.loop !5193

do.end:                                           ; preds = %do.cond
  br label %if.end61, !dbg !5195

if.end61:                                         ; preds = %do.end, %if.else
  br label %if.end62

if.end62:                                         ; preds = %if.end61, %if.end
  %63 = load i8, i8* %found, align 1, !dbg !5196
  %conv63 = zext i8 %63 to i32, !dbg !5196
  %cmp64 = icmp eq i32 %conv63, 0, !dbg !5198
  br i1 %cmp64, label %if.then66, label %if.else67, !dbg !5199

if.then66:                                        ; preds = %if.end62
  %64 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !5200
  %65 = load i32*, i32** %groups, align 8, !dbg !5202
  %66 = bitcast i32* %65 to i8*, !dbg !5202
  call void %64(i8* %66), !dbg !5200
  br label %if.end81, !dbg !5203

if.else67:                                        ; preds = %if.end62
  call void @llvm.dbg.declare(metadata %struct.EnumPropertyItem** %item, metadata !5204, metadata !DIExpression()), !dbg !5206
  store %struct.EnumPropertyItem* null, %struct.EnumPropertyItem** %item, align 8, !dbg !5206
  call void @llvm.dbg.declare(metadata %struct.EnumPropertyItem* %item_tmp, metadata !5207, metadata !DIExpression()), !dbg !5208
  %67 = bitcast %struct.EnumPropertyItem* %item_tmp to i8*, !dbg !5208
  call void @llvm.memset.p0i8.i64(i8* align 8 %67, i8 0, i64 40, i1 false), !dbg !5208
  call void @llvm.dbg.declare(metadata i32* %totitem, metadata !5209, metadata !DIExpression()), !dbg !5210
  store i32 0, i32* %totitem, align 4, !dbg !5210
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5211, metadata !DIExpression()), !dbg !5212
  store i32 0, i32* %i, align 4, !dbg !5212
  call void @llvm.dbg.declare(metadata %struct.bDeformGroup** %dg, metadata !5213, metadata !DIExpression()), !dbg !5214
  %obact68 = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %vc, i32 0, i32 1, !dbg !5215
  %68 = load %struct.Object*, %struct.Object** %obact68, align 8, !dbg !5215
  %defbase69 = getelementptr inbounds %struct.Object, %struct.Object* %68, i32 0, i32 25, !dbg !5217
  %first70 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %defbase69, i32 0, i32 0, !dbg !5218
  %69 = load i8*, i8** %first70, align 8, !dbg !5218
  %70 = bitcast i8* %69 to %struct.bDeformGroup*, !dbg !5219
  store %struct.bDeformGroup* %70, %struct.bDeformGroup** %dg, align 8, !dbg !5220
  br label %for.cond, !dbg !5221

for.cond:                                         ; preds = %for.inc, %if.else67
  %71 = load %struct.bDeformGroup*, %struct.bDeformGroup** %dg, align 8, !dbg !5222
  %tobool71 = icmp ne %struct.bDeformGroup* %71, null, !dbg !5222
  br i1 %tobool71, label %land.rhs, label %land.end, !dbg !5224

land.rhs:                                         ; preds = %for.cond
  %72 = load i32, i32* %i, align 4, !dbg !5225
  %73 = load i32, i32* %defbase_tot, align 4, !dbg !5226
  %cmp72 = icmp slt i32 %72, %73, !dbg !5227
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %74 = phi i1 [ false, %for.cond ], [ %cmp72, %land.rhs ], !dbg !5228
  br i1 %74, label %for.body, label %for.end, !dbg !5229

for.body:                                         ; preds = %land.end
  %75 = load i32*, i32** %groups, align 8, !dbg !5230
  %76 = load i32, i32* %i, align 4, !dbg !5233
  %idxprom74 = sext i32 %76 to i64, !dbg !5230
  %arrayidx75 = getelementptr inbounds i32, i32* %75, i64 %idxprom74, !dbg !5230
  %77 = load i32, i32* %arrayidx75, align 4, !dbg !5230
  %tobool76 = icmp ne i32 %77, 0, !dbg !5230
  br i1 %tobool76, label %if.then77, label %if.end80, !dbg !5234

if.then77:                                        ; preds = %for.body
  %78 = load %struct.bDeformGroup*, %struct.bDeformGroup** %dg, align 8, !dbg !5235
  %name = getelementptr inbounds %struct.bDeformGroup, %struct.bDeformGroup* %78, i32 0, i32 2, !dbg !5237
  %arraydecay78 = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !5235
  %name79 = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %item_tmp, i32 0, i32 3, !dbg !5238
  store i8* %arraydecay78, i8** %name79, align 8, !dbg !5239
  %identifier = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %item_tmp, i32 0, i32 1, !dbg !5240
  store i8* %arraydecay78, i8** %identifier, align 8, !dbg !5241
  %79 = load i32, i32* %i, align 4, !dbg !5242
  %value = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %item_tmp, i32 0, i32 0, !dbg !5243
  store i32 %79, i32* %value, align 8, !dbg !5244
  call void @RNA_enum_item_add(%struct.EnumPropertyItem** %item, i32* %totitem, %struct.EnumPropertyItem* %item_tmp), !dbg !5245
  br label %if.end80, !dbg !5246

if.end80:                                         ; preds = %if.then77, %for.body
  br label %for.inc, !dbg !5247

for.inc:                                          ; preds = %if.end80
  %80 = load i32, i32* %i, align 4, !dbg !5248
  %inc = add nsw i32 %80, 1, !dbg !5248
  store i32 %inc, i32* %i, align 4, !dbg !5248
  %81 = load %struct.bDeformGroup*, %struct.bDeformGroup** %dg, align 8, !dbg !5249
  %next = getelementptr inbounds %struct.bDeformGroup, %struct.bDeformGroup* %81, i32 0, i32 0, !dbg !5250
  %82 = load %struct.bDeformGroup*, %struct.bDeformGroup** %next, align 8, !dbg !5250
  store %struct.bDeformGroup* %82, %struct.bDeformGroup** %dg, align 8, !dbg !5251
  br label %for.cond, !dbg !5252, !llvm.loop !5253

for.end:                                          ; preds = %land.end
  call void @RNA_enum_item_end(%struct.EnumPropertyItem** %item, i32* %totitem), !dbg !5255
  %83 = load i8*, i8** %r_free.addr, align 8, !dbg !5256
  store i8 1, i8* %83, align 1, !dbg !5257
  %84 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !5258
  %85 = load i32*, i32** %groups, align 8, !dbg !5259
  %86 = bitcast i32* %85 to i8*, !dbg !5259
  call void %84(i8* %86), !dbg !5258
  %87 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item, align 8, !dbg !5260
  store %struct.EnumPropertyItem* %87, %struct.EnumPropertyItem** %retval, align 8, !dbg !5261
  br label %return, !dbg !5261

if.end81:                                         ; preds = %if.then66
  br label %if.end82, !dbg !5262

if.end82:                                         ; preds = %if.end81, %land.lhs.true12, %land.lhs.true10, %land.lhs.true8, %land.lhs.true6, %if.then3
  br label %if.end83, !dbg !5263

if.end83:                                         ; preds = %if.end82, %land.lhs.true, %if.then
  br label %if.end84, !dbg !5264

if.end84:                                         ; preds = %if.end83, %entry
  store %struct.EnumPropertyItem* getelementptr inbounds ([0 x %struct.EnumPropertyItem], [0 x %struct.EnumPropertyItem]* @DummyRNA_NULL_items, i64 0, i64 0), %struct.EnumPropertyItem** %retval, align 8, !dbg !5265
  br label %return, !dbg !5265

return:                                           ; preds = %if.end84, %for.end
  %88 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %retval, align 8, !dbg !5266
  ret %struct.EnumPropertyItem* %88, !dbg !5266
}

declare dso_local void @RNA_def_property_flag(%struct.PropertyRNA*, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @PAINT_OT_weight_paint_toggle(%struct.wmOperatorType* %ot) #0 !dbg !5267 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !5268, metadata !DIExpression()), !dbg !5269
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5270
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !5271
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.10, i64 0, i64 0), i8** %name, align 8, !dbg !5272
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5273
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !5274
  store i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.11, i64 0, i64 0), i8** %idname, align 8, !dbg !5275
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5276
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !5277
  store i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.12, i64 0, i64 0), i8** %description, align 8, !dbg !5278
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5279
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !5280
  store i32 (%struct.bContext*, %struct.wmOperator*)* @wpaint_mode_toggle_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !5281
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5282
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !5283
  store i32 (%struct.bContext*)* @paint_poll_test, i32 (%struct.bContext*)** %poll, align 8, !dbg !5284
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5285
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !5286
  store i16 3, i16* %flag, align 8, !dbg !5287
  ret void, !dbg !5288
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @wpaint_mode_toggle_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !5289 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %ob = alloca %struct.Object*, align 8
  %mode_flag = alloca i32, align 4
  %is_mode_set = alloca i8, align 1
  %scene = alloca %struct.Scene*, align 8
  %wp = alloca %struct.VPaint*, align 8
  %me = alloca %struct.Mesh*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5290, metadata !DIExpression()), !dbg !5291
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !5292, metadata !DIExpression()), !dbg !5293
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !5294, metadata !DIExpression()), !dbg !5295
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5296
  %call = call %struct.Object* @CTX_data_active_object(%struct.bContext* %0), !dbg !5297
  store %struct.Object* %call, %struct.Object** %ob, align 8, !dbg !5295
  call void @llvm.dbg.declare(metadata i32* %mode_flag, metadata !5298, metadata !DIExpression()), !dbg !5299
  store i32 8, i32* %mode_flag, align 4, !dbg !5299
  call void @llvm.dbg.declare(metadata i8* %is_mode_set, metadata !5300, metadata !DIExpression()), !dbg !5301
  %1 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5302
  %mode = getelementptr inbounds %struct.Object, %struct.Object* %1, i32 0, i32 27, !dbg !5303
  %2 = load i32, i32* %mode, align 8, !dbg !5303
  %and = and i32 %2, 8, !dbg !5304
  %cmp = icmp ne i32 %and, 0, !dbg !5305
  %conv = zext i1 %cmp to i32, !dbg !5305
  %conv1 = trunc i32 %conv to i8, !dbg !5306
  store i8 %conv1, i8* %is_mode_set, align 1, !dbg !5301
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene, metadata !5307, metadata !DIExpression()), !dbg !5308
  %3 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5309
  %call2 = call %struct.Scene* @CTX_data_scene(%struct.bContext* %3), !dbg !5310
  store %struct.Scene* %call2, %struct.Scene** %scene, align 8, !dbg !5308
  call void @llvm.dbg.declare(metadata %struct.VPaint** %wp, metadata !5311, metadata !DIExpression()), !dbg !5312
  %4 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !5313
  %toolsettings = getelementptr inbounds %struct.Scene, %struct.Scene* %4, i32 0, i32 20, !dbg !5314
  %5 = load %struct.ToolSettings*, %struct.ToolSettings** %toolsettings, align 8, !dbg !5314
  %wpaint = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %5, i32 0, i32 1, !dbg !5315
  %6 = load %struct.VPaint*, %struct.VPaint** %wpaint, align 8, !dbg !5315
  store %struct.VPaint* %6, %struct.VPaint** %wp, align 8, !dbg !5312
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me, metadata !5316, metadata !DIExpression()), !dbg !5317
  %7 = load i8, i8* %is_mode_set, align 1, !dbg !5318
  %tobool = icmp ne i8 %7, 0, !dbg !5318
  br i1 %tobool, label %if.end6, label %if.then, !dbg !5320

if.then:                                          ; preds = %entry
  %8 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5321
  %9 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5324
  %10 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5325
  %reports = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %10, i32 0, i32 8, !dbg !5326
  %11 = load %struct.ReportList*, %struct.ReportList** %reports, align 8, !dbg !5326
  %call3 = call zeroext i8 @ED_object_mode_compat_set(%struct.bContext* %8, %struct.Object* %9, i32 8, %struct.ReportList* %11), !dbg !5327
  %tobool4 = icmp ne i8 %call3, 0, !dbg !5327
  br i1 %tobool4, label %if.end, label %if.then5, !dbg !5328

if.then5:                                         ; preds = %if.then
  store i32 2, i32* %retval, align 4, !dbg !5329
  br label %return, !dbg !5329

if.end:                                           ; preds = %if.then
  br label %if.end6, !dbg !5331

if.end6:                                          ; preds = %if.end, %entry
  %12 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5332
  %call7 = call %struct.Mesh* @BKE_mesh_from_object(%struct.Object* %12), !dbg !5333
  store %struct.Mesh* %call7, %struct.Mesh** %me, align 8, !dbg !5334
  %13 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5335
  %mode8 = getelementptr inbounds %struct.Object, %struct.Object* %13, i32 0, i32 27, !dbg !5337
  %14 = load i32, i32* %mode8, align 8, !dbg !5337
  %and9 = and i32 %14, 8, !dbg !5338
  %tobool10 = icmp ne i32 %and9, 0, !dbg !5338
  br i1 %tobool10, label %if.then11, label %if.else27, !dbg !5339

if.then11:                                        ; preds = %if.end6
  %15 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5340
  %mode12 = getelementptr inbounds %struct.Object, %struct.Object* %15, i32 0, i32 27, !dbg !5342
  %16 = load i32, i32* %mode12, align 8, !dbg !5343
  %and13 = and i32 %16, -9, !dbg !5343
  store i32 %and13, i32* %mode12, align 8, !dbg !5343
  %17 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !5344
  %editflag = getelementptr inbounds %struct.Mesh, %struct.Mesh* %17, i32 0, i32 46, !dbg !5346
  %18 = load i8, i8* %editflag, align 1, !dbg !5346
  %conv14 = zext i8 %18 to i32, !dbg !5344
  %and15 = and i32 %conv14, 32, !dbg !5347
  %tobool16 = icmp ne i32 %and15, 0, !dbg !5347
  br i1 %tobool16, label %if.then17, label %if.else, !dbg !5348

if.then17:                                        ; preds = %if.then11
  %19 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !5349
  call void @BKE_mesh_flush_select_from_verts(%struct.Mesh* %19), !dbg !5351
  br label %if.end24, !dbg !5352

if.else:                                          ; preds = %if.then11
  %20 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !5353
  %editflag18 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %20, i32 0, i32 46, !dbg !5355
  %21 = load i8, i8* %editflag18, align 1, !dbg !5355
  %conv19 = zext i8 %21 to i32, !dbg !5353
  %and20 = and i32 %conv19, 8, !dbg !5356
  %tobool21 = icmp ne i32 %and20, 0, !dbg !5356
  br i1 %tobool21, label %if.then22, label %if.end23, !dbg !5357

if.then22:                                        ; preds = %if.else
  %22 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !5358
  call void @BKE_mesh_flush_select_from_polys(%struct.Mesh* %22), !dbg !5360
  br label %if.end23, !dbg !5361

if.end23:                                         ; preds = %if.then22, %if.else
  br label %if.end24

if.end24:                                         ; preds = %if.end23, %if.then17
  %call25 = call i32 @ED_mesh_mirror_spatial_table(%struct.Object* null, %struct.BMEditMesh* null, float* null, i8 zeroext 101), !dbg !5362
  %call26 = call i32 @ED_mesh_mirror_topo_table(%struct.Object* null, i8 zeroext 101), !dbg !5363
  call void @paint_cursor_delete_textures(), !dbg !5364
  br label %if.end38, !dbg !5365

if.else27:                                        ; preds = %if.end6
  %23 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5366
  %mode28 = getelementptr inbounds %struct.Object, %struct.Object* %23, i32 0, i32 27, !dbg !5368
  %24 = load i32, i32* %mode28, align 8, !dbg !5369
  %or = or i32 %24, 8, !dbg !5369
  store i32 %or, i32* %mode28, align 8, !dbg !5369
  %25 = load %struct.VPaint*, %struct.VPaint** %wp, align 8, !dbg !5370
  %cmp29 = icmp eq %struct.VPaint* %25, null, !dbg !5372
  br i1 %cmp29, label %if.then31, label %if.end35, !dbg !5373

if.then31:                                        ; preds = %if.else27
  %call32 = call %struct.VPaint* @new_vpaint(i32 1), !dbg !5374
  %26 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !5375
  %toolsettings33 = getelementptr inbounds %struct.Scene, %struct.Scene* %26, i32 0, i32 20, !dbg !5376
  %27 = load %struct.ToolSettings*, %struct.ToolSettings** %toolsettings33, align 8, !dbg !5376
  %wpaint34 = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %27, i32 0, i32 1, !dbg !5377
  store %struct.VPaint* %call32, %struct.VPaint** %wpaint34, align 8, !dbg !5378
  store %struct.VPaint* %call32, %struct.VPaint** %wp, align 8, !dbg !5379
  br label %if.end35, !dbg !5380

if.end35:                                         ; preds = %if.then31, %if.else27
  %28 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5381
  call void @paint_cursor_start(%struct.bContext* %28, i32 (%struct.bContext*)* @weight_paint_poll), !dbg !5382
  %29 = load %struct.VPaint*, %struct.VPaint** %wp, align 8, !dbg !5383
  %paint = getelementptr inbounds %struct.VPaint, %struct.VPaint* %29, i32 0, i32 0, !dbg !5384
  call void @BKE_paint_init(%struct.Paint* %paint, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @PAINT_CURSOR_WEIGHT_PAINT, i64 0, i64 0)), !dbg !5385
  %30 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5386
  %call36 = call i32 @ED_mesh_mirror_spatial_table(%struct.Object* %30, %struct.BMEditMesh* null, float* null, i8 zeroext 115), !dbg !5387
  %31 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5388
  %call37 = call zeroext i8 @ED_vgroup_sync_from_pose(%struct.Object* %31), !dbg !5389
  br label %if.end38

if.end38:                                         ; preds = %if.end35, %if.end24
  %32 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !5390
  %id = getelementptr inbounds %struct.Mesh, %struct.Mesh* %32, i32 0, i32 0, !dbg !5391
  call void @DAG_id_tag_update(%struct.ID* %id, i16 signext 0), !dbg !5392
  %33 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5393
  %34 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !5394
  %35 = bitcast %struct.Scene* %34 to i8*, !dbg !5394
  call void @WM_event_add_notifier(%struct.bContext* %33, i32 67829760, i8* %35), !dbg !5395
  store i32 4, i32* %retval, align 4, !dbg !5396
  br label %return, !dbg !5396

return:                                           ; preds = %if.end38, %if.then5
  %36 = load i32, i32* %retval, align 4, !dbg !5397
  ret i32 %36, !dbg !5397
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @paint_poll_test(%struct.bContext* %C) #0 !dbg !5398 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %ob = alloca %struct.Object*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5399, metadata !DIExpression()), !dbg !5400
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !5401, metadata !DIExpression()), !dbg !5402
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5403
  %call = call %struct.Object* @CTX_data_active_object(%struct.bContext* %0), !dbg !5404
  store %struct.Object* %call, %struct.Object** %ob, align 8, !dbg !5402
  %1 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5405
  %cmp = icmp eq %struct.Object* %1, null, !dbg !5407
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !5408

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5409
  %type = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 3, !dbg !5410
  %3 = load i16, i16* %type, align 8, !dbg !5410
  %conv = sext i16 %3 to i32, !dbg !5409
  %cmp1 = icmp ne i32 %conv, 1, !dbg !5411
  br i1 %cmp1, label %if.then, label %if.end, !dbg !5412

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 0, i32* %retval, align 4, !dbg !5413
  br label %return, !dbg !5413

if.end:                                           ; preds = %lor.lhs.false
  %4 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5414
  %data = getelementptr inbounds %struct.Object, %struct.Object* %4, i32 0, i32 19, !dbg !5416
  %5 = load i8*, i8** %data, align 8, !dbg !5416
  %tobool = icmp ne i8* %5, null, !dbg !5414
  br i1 %tobool, label %lor.lhs.false3, label %if.then6, !dbg !5417

lor.lhs.false3:                                   ; preds = %if.end
  %6 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5418
  %data4 = getelementptr inbounds %struct.Object, %struct.Object* %6, i32 0, i32 19, !dbg !5419
  %7 = load i8*, i8** %data4, align 8, !dbg !5419
  %8 = bitcast i8* %7 to %struct.ID*, !dbg !5420
  %lib = getelementptr inbounds %struct.ID, %struct.ID* %8, i32 0, i32 3, !dbg !5421
  %9 = load %struct.Library*, %struct.Library** %lib, align 8, !dbg !5421
  %tobool5 = icmp ne %struct.Library* %9, null, !dbg !5422
  br i1 %tobool5, label %if.then6, label %if.end7, !dbg !5423

if.then6:                                         ; preds = %lor.lhs.false3, %if.end
  store i32 0, i32* %retval, align 4, !dbg !5424
  br label %return, !dbg !5424

if.end7:                                          ; preds = %lor.lhs.false3
  %10 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5425
  %call8 = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %10), !dbg !5427
  %tobool9 = icmp ne %struct.Object* %call8, null, !dbg !5427
  br i1 %tobool9, label %if.then10, label %if.end11, !dbg !5428

if.then10:                                        ; preds = %if.end7
  store i32 0, i32* %retval, align 4, !dbg !5429
  br label %return, !dbg !5429

if.end11:                                         ; preds = %if.end7
  store i32 1, i32* %retval, align 4, !dbg !5430
  br label %return, !dbg !5430

return:                                           ; preds = %if.end11, %if.then10, %if.then6, %if.then
  %11 = load i32, i32* %retval, align 4, !dbg !5431
  ret i32 %11, !dbg !5431
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @PAINT_OT_weight_paint(%struct.wmOperatorType* %ot) #0 !dbg !5432 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !5433, metadata !DIExpression()), !dbg !5434
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5435
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !5436
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.13, i64 0, i64 0), i8** %name, align 8, !dbg !5437
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5438
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !5439
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.14, i64 0, i64 0), i8** %idname, align 8, !dbg !5440
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5441
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !5442
  store i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.15, i64 0, i64 0), i8** %description, align 8, !dbg !5443
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5444
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 6, !dbg !5445
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @wpaint_invoke, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !5446
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5447
  %modal = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 8, !dbg !5448
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @paint_stroke_modal, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %modal, align 8, !dbg !5449
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5450
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 4, !dbg !5451
  store i32 (%struct.bContext*, %struct.wmOperator*)* @wpaint_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !5452
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5453
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 9, !dbg !5454
  store i32 (%struct.bContext*)* @weight_paint_poll, i32 (%struct.bContext*)** %poll, align 8, !dbg !5455
  %7 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5456
  %cancel = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %7, i32 0, i32 7, !dbg !5457
  store void (%struct.bContext*, %struct.wmOperator*)* @wpaint_cancel, void (%struct.bContext*, %struct.wmOperator*)** %cancel, align 8, !dbg !5458
  %8 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5459
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %8, i32 0, i32 19, !dbg !5460
  store i16 6, i16* %flag, align 8, !dbg !5461
  %9 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5462
  call void @paint_stroke_operator_properties(%struct.wmOperatorType* %9), !dbg !5463
  ret void, !dbg !5464
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @wpaint_invoke(%struct.bContext* %C, %struct.wmOperator* %op, %struct.wmEvent* %event) #0 !dbg !5465 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %event.addr = alloca %struct.wmEvent*, align 8
  %retval1 = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5466, metadata !DIExpression()), !dbg !5467
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !5468, metadata !DIExpression()), !dbg !5469
  store %struct.wmEvent* %event, %struct.wmEvent** %event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event.addr, metadata !5470, metadata !DIExpression()), !dbg !5471
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !5472, metadata !DIExpression()), !dbg !5473
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5474
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5475
  %2 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !5476
  %type = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %2, i32 0, i32 2, !dbg !5477
  %3 = load i16, i16* %type, align 8, !dbg !5477
  %conv = sext i16 %3 to i32, !dbg !5476
  %call = call %struct.PaintStroke* @paint_stroke_new(%struct.bContext* %0, %struct.wmOperator* %1, i8 (%struct.bContext*, float*, float*)* null, i8 (%struct.bContext*, %struct.wmOperator*, float*)* @wpaint_stroke_test_start, void (%struct.bContext*, %struct.PaintStroke*, %struct.PointerRNA*)* @wpaint_stroke_update_step, void (%struct.bContext*, %struct.PaintStroke*, i8)* null, void (%struct.bContext*, %struct.PaintStroke*)* @wpaint_stroke_done, i32 %conv), !dbg !5478
  %4 = bitcast %struct.PaintStroke* %call to i8*, !dbg !5478
  %5 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5479
  %customdata = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %5, i32 0, i32 5, !dbg !5480
  store i8* %4, i8** %customdata, align 8, !dbg !5481
  %6 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5482
  %type2 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %6, i32 0, i32 4, !dbg !5484
  %7 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type2, align 8, !dbg !5484
  %modal = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %7, i32 0, i32 8, !dbg !5485
  %8 = load i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)*, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %modal, align 8, !dbg !5485
  %9 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5486
  %10 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5487
  %11 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !5488
  %call3 = call i32 %8(%struct.bContext* %9, %struct.wmOperator* %10, %struct.wmEvent* %11), !dbg !5482
  store i32 %call3, i32* %retval1, align 4, !dbg !5489
  %cmp = icmp eq i32 %call3, 4, !dbg !5490
  br i1 %cmp, label %if.then, label %if.end, !dbg !5491

if.then:                                          ; preds = %entry
  %12 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5492
  call void @paint_stroke_data_free(%struct.wmOperator* %12), !dbg !5494
  store i32 4, i32* %retval, align 4, !dbg !5495
  br label %return, !dbg !5495

if.end:                                           ; preds = %entry
  %13 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5496
  %14 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5497
  %call5 = call %struct.wmEventHandler* @WM_event_add_modal_handler(%struct.bContext* %13, %struct.wmOperator* %14), !dbg !5498
  %15 = load i32, i32* %retval1, align 4, !dbg !5499
  store i32 1, i32* %retval, align 4, !dbg !5500
  br label %return, !dbg !5500

return:                                           ; preds = %if.end, %if.then
  %16 = load i32, i32* %retval, align 4, !dbg !5501
  ret i32 %16, !dbg !5501
}

declare dso_local i32 @paint_stroke_modal(%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @wpaint_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !5502 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5503, metadata !DIExpression()), !dbg !5504
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !5505, metadata !DIExpression()), !dbg !5506
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5507
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5508
  %call = call %struct.PaintStroke* @paint_stroke_new(%struct.bContext* %0, %struct.wmOperator* %1, i8 (%struct.bContext*, float*, float*)* null, i8 (%struct.bContext*, %struct.wmOperator*, float*)* @wpaint_stroke_test_start, void (%struct.bContext*, %struct.PaintStroke*, %struct.PointerRNA*)* @wpaint_stroke_update_step, void (%struct.bContext*, %struct.PaintStroke*, i8)* null, void (%struct.bContext*, %struct.PaintStroke*)* @wpaint_stroke_done, i32 0), !dbg !5509
  %2 = bitcast %struct.PaintStroke* %call to i8*, !dbg !5509
  %3 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5510
  %customdata = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %3, i32 0, i32 5, !dbg !5511
  store i8* %2, i8** %customdata, align 8, !dbg !5512
  %4 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5513
  %5 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5514
  %call1 = call i32 @paint_stroke_exec(%struct.bContext* %4, %struct.wmOperator* %5), !dbg !5515
  ret i32 4, !dbg !5516
}

; Function Attrs: noinline nounwind uwtable
define internal void @wpaint_cancel(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !5517 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5520, metadata !DIExpression()), !dbg !5521
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !5522, metadata !DIExpression()), !dbg !5523
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5524
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5525
  call void @paint_stroke_cancel(%struct.bContext* %0, %struct.wmOperator* %1), !dbg !5526
  ret void, !dbg !5527
}

declare dso_local void @paint_stroke_operator_properties(%struct.wmOperatorType*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @PAINT_OT_weight_set(%struct.wmOperatorType* %ot) #0 !dbg !5528 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !5529, metadata !DIExpression()), !dbg !5530
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5531
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !5532
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.16, i64 0, i64 0), i8** %name, align 8, !dbg !5533
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5534
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !5535
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.17, i64 0, i64 0), i8** %idname, align 8, !dbg !5536
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5537
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !5538
  store i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.18, i64 0, i64 0), i8** %description, align 8, !dbg !5539
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5540
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !5541
  store i32 (%struct.bContext*, %struct.wmOperator*)* @weight_paint_set_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !5542
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5543
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !5544
  store i32 (%struct.bContext*)* @mask_paint_poll, i32 (%struct.bContext*)** %poll, align 8, !dbg !5545
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5546
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !5547
  store i16 3, i16* %flag, align 8, !dbg !5548
  ret void, !dbg !5549
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @weight_paint_set_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !5550 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %scene = alloca %struct.Scene*, align 8
  %obact = alloca %struct.Object*, align 8
  %ts = alloca %struct.ToolSettings*, align 8
  %brush = alloca %struct.Brush*, align 8
  %vgroup_weight = alloca float, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5551, metadata !DIExpression()), !dbg !5552
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !5553, metadata !DIExpression()), !dbg !5554
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene, metadata !5555, metadata !DIExpression()), !dbg !5556
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5557
  %call = call %struct.Scene* @CTX_data_scene(%struct.bContext* %0), !dbg !5558
  store %struct.Scene* %call, %struct.Scene** %scene, align 8, !dbg !5556
  call void @llvm.dbg.declare(metadata %struct.Object** %obact, metadata !5559, metadata !DIExpression()), !dbg !5560
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5561
  %call1 = call %struct.Object* @CTX_data_active_object(%struct.bContext* %1), !dbg !5562
  store %struct.Object* %call1, %struct.Object** %obact, align 8, !dbg !5560
  call void @llvm.dbg.declare(metadata %struct.ToolSettings** %ts, metadata !5563, metadata !DIExpression()), !dbg !5564
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5565
  %call2 = call %struct.ToolSettings* @CTX_data_tool_settings(%struct.bContext* %2), !dbg !5566
  store %struct.ToolSettings* %call2, %struct.ToolSettings** %ts, align 8, !dbg !5564
  call void @llvm.dbg.declare(metadata %struct.Brush** %brush, metadata !5567, metadata !DIExpression()), !dbg !5568
  %3 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !5569
  %wpaint = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %3, i32 0, i32 1, !dbg !5570
  %4 = load %struct.VPaint*, %struct.VPaint** %wpaint, align 8, !dbg !5570
  %paint = getelementptr inbounds %struct.VPaint, %struct.VPaint* %4, i32 0, i32 0, !dbg !5571
  %call3 = call %struct.Brush* @BKE_paint_brush(%struct.Paint* %paint), !dbg !5572
  store %struct.Brush* %call3, %struct.Brush** %brush, align 8, !dbg !5568
  call void @llvm.dbg.declare(metadata float* %vgroup_weight, metadata !5573, metadata !DIExpression()), !dbg !5574
  %5 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !5575
  %6 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !5576
  %call4 = call float @BKE_brush_weight_get(%struct.Scene* %5, %struct.Brush* %6), !dbg !5577
  store float %call4, float* %vgroup_weight, align 4, !dbg !5574
  %7 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5578
  %8 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5580
  %call5 = call zeroext i8 @wpaint_ensure_data(%struct.bContext* %7, %struct.wmOperator* %8), !dbg !5581
  %conv = zext i8 %call5 to i32, !dbg !5581
  %cmp = icmp eq i32 %conv, 0, !dbg !5582
  br i1 %cmp, label %if.then, label %if.end, !dbg !5583

if.then:                                          ; preds = %entry
  store i32 2, i32* %retval, align 4, !dbg !5584
  br label %return, !dbg !5584

if.end:                                           ; preds = %entry
  %9 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !5586
  %toolsettings = getelementptr inbounds %struct.Scene, %struct.Scene* %9, i32 0, i32 20, !dbg !5588
  %10 = load %struct.ToolSettings*, %struct.ToolSettings** %toolsettings, align 8, !dbg !5588
  %wpaint7 = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %10, i32 0, i32 1, !dbg !5589
  %11 = load %struct.VPaint*, %struct.VPaint** %wpaint7, align 8, !dbg !5589
  %12 = load %struct.Object*, %struct.Object** %obact, align 8, !dbg !5590
  %13 = load float, float* %vgroup_weight, align 4, !dbg !5591
  %call8 = call zeroext i8 @ED_wpaint_fill(%struct.VPaint* %11, %struct.Object* %12, float %13), !dbg !5592
  %tobool = icmp ne i8 %call8, 0, !dbg !5592
  br i1 %tobool, label %if.then9, label %if.else, !dbg !5593

if.then9:                                         ; preds = %if.end
  %14 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5594
  %call10 = call %struct.ARegion* @CTX_wm_region(%struct.bContext* %14), !dbg !5596
  call void @ED_region_tag_redraw(%struct.ARegion* %call10), !dbg !5597
  store i32 4, i32* %retval, align 4, !dbg !5598
  br label %return, !dbg !5598

if.else:                                          ; preds = %if.end
  store i32 2, i32* %retval, align 4, !dbg !5599
  br label %return, !dbg !5599

return:                                           ; preds = %if.else, %if.then9, %if.then
  %15 = load i32, i32* %retval, align 4, !dbg !5601
  ret i32 %15, !dbg !5601
}

declare dso_local i32 @mask_paint_poll(%struct.bContext*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @PAINT_OT_vertex_paint_toggle(%struct.wmOperatorType* %ot) #0 !dbg !5602 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !5603, metadata !DIExpression()), !dbg !5604
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5605
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !5606
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.19, i64 0, i64 0), i8** %name, align 8, !dbg !5607
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5608
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !5609
  store i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.20, i64 0, i64 0), i8** %idname, align 8, !dbg !5610
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5611
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !5612
  store i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.21, i64 0, i64 0), i8** %description, align 8, !dbg !5613
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5614
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !5615
  store i32 (%struct.bContext*, %struct.wmOperator*)* @vpaint_mode_toggle_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !5616
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5617
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !5618
  store i32 (%struct.bContext*)* @paint_poll_test, i32 (%struct.bContext*)** %poll, align 8, !dbg !5619
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5620
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !5621
  store i16 3, i16* %flag, align 8, !dbg !5622
  ret void, !dbg !5623
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @vpaint_mode_toggle_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !5624 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %ob = alloca %struct.Object*, align 8
  %mode_flag = alloca i32, align 4
  %is_mode_set = alloca i8, align 1
  %scene = alloca %struct.Scene*, align 8
  %vp = alloca %struct.VPaint*, align 8
  %me = alloca %struct.Mesh*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5625, metadata !DIExpression()), !dbg !5626
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !5627, metadata !DIExpression()), !dbg !5628
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !5629, metadata !DIExpression()), !dbg !5630
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5631
  %call = call %struct.Object* @CTX_data_active_object(%struct.bContext* %0), !dbg !5632
  store %struct.Object* %call, %struct.Object** %ob, align 8, !dbg !5630
  call void @llvm.dbg.declare(metadata i32* %mode_flag, metadata !5633, metadata !DIExpression()), !dbg !5634
  store i32 4, i32* %mode_flag, align 4, !dbg !5634
  call void @llvm.dbg.declare(metadata i8* %is_mode_set, metadata !5635, metadata !DIExpression()), !dbg !5636
  %1 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5637
  %mode = getelementptr inbounds %struct.Object, %struct.Object* %1, i32 0, i32 27, !dbg !5638
  %2 = load i32, i32* %mode, align 8, !dbg !5638
  %and = and i32 %2, 4, !dbg !5639
  %cmp = icmp ne i32 %and, 0, !dbg !5640
  %conv = zext i1 %cmp to i32, !dbg !5640
  %conv1 = trunc i32 %conv to i8, !dbg !5641
  store i8 %conv1, i8* %is_mode_set, align 1, !dbg !5636
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene, metadata !5642, metadata !DIExpression()), !dbg !5643
  %3 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5644
  %call2 = call %struct.Scene* @CTX_data_scene(%struct.bContext* %3), !dbg !5645
  store %struct.Scene* %call2, %struct.Scene** %scene, align 8, !dbg !5643
  call void @llvm.dbg.declare(metadata %struct.VPaint** %vp, metadata !5646, metadata !DIExpression()), !dbg !5647
  %4 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !5648
  %toolsettings = getelementptr inbounds %struct.Scene, %struct.Scene* %4, i32 0, i32 20, !dbg !5649
  %5 = load %struct.ToolSettings*, %struct.ToolSettings** %toolsettings, align 8, !dbg !5649
  %vpaint = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %5, i32 0, i32 0, !dbg !5650
  %6 = load %struct.VPaint*, %struct.VPaint** %vpaint, align 8, !dbg !5650
  store %struct.VPaint* %6, %struct.VPaint** %vp, align 8, !dbg !5647
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me, metadata !5651, metadata !DIExpression()), !dbg !5652
  %7 = load i8, i8* %is_mode_set, align 1, !dbg !5653
  %tobool = icmp ne i8 %7, 0, !dbg !5653
  br i1 %tobool, label %if.end6, label %if.then, !dbg !5655

if.then:                                          ; preds = %entry
  %8 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5656
  %9 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5659
  %10 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5660
  %reports = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %10, i32 0, i32 8, !dbg !5661
  %11 = load %struct.ReportList*, %struct.ReportList** %reports, align 8, !dbg !5661
  %call3 = call zeroext i8 @ED_object_mode_compat_set(%struct.bContext* %8, %struct.Object* %9, i32 4, %struct.ReportList* %11), !dbg !5662
  %tobool4 = icmp ne i8 %call3, 0, !dbg !5662
  br i1 %tobool4, label %if.end, label %if.then5, !dbg !5663

if.then5:                                         ; preds = %if.then
  store i32 2, i32* %retval, align 4, !dbg !5664
  br label %return, !dbg !5664

if.end:                                           ; preds = %if.then
  br label %if.end6, !dbg !5666

if.end6:                                          ; preds = %if.end, %entry
  %12 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5667
  %call7 = call %struct.Mesh* @BKE_mesh_from_object(%struct.Object* %12), !dbg !5668
  store %struct.Mesh* %call7, %struct.Mesh** %me, align 8, !dbg !5669
  %13 = load i8, i8* %is_mode_set, align 1, !dbg !5670
  %tobool8 = icmp ne i8 %13, 0, !dbg !5670
  br i1 %tobool8, label %if.then9, label %if.else, !dbg !5672

if.then9:                                         ; preds = %if.end6
  %14 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5673
  %mode10 = getelementptr inbounds %struct.Object, %struct.Object* %14, i32 0, i32 27, !dbg !5675
  %15 = load i32, i32* %mode10, align 8, !dbg !5676
  %and11 = and i32 %15, -5, !dbg !5676
  store i32 %and11, i32* %mode10, align 8, !dbg !5676
  %16 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !5677
  %editflag = getelementptr inbounds %struct.Mesh, %struct.Mesh* %16, i32 0, i32 46, !dbg !5679
  %17 = load i8, i8* %editflag, align 1, !dbg !5679
  %conv12 = zext i8 %17 to i32, !dbg !5677
  %and13 = and i32 %conv12, 8, !dbg !5680
  %tobool14 = icmp ne i32 %and13, 0, !dbg !5680
  br i1 %tobool14, label %if.then15, label %if.end16, !dbg !5681

if.then15:                                        ; preds = %if.then9
  %18 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !5682
  call void @BKE_mesh_flush_select_from_polys(%struct.Mesh* %18), !dbg !5684
  br label %if.end16, !dbg !5685

if.end16:                                         ; preds = %if.then15, %if.then9
  call void @paint_cursor_delete_textures(), !dbg !5686
  br label %if.end30, !dbg !5687

if.else:                                          ; preds = %if.end6
  %19 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5688
  %mode17 = getelementptr inbounds %struct.Object, %struct.Object* %19, i32 0, i32 27, !dbg !5690
  %20 = load i32, i32* %mode17, align 8, !dbg !5691
  %or = or i32 %20, 4, !dbg !5691
  store i32 %or, i32* %mode17, align 8, !dbg !5691
  %21 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !5692
  %mloopcol = getelementptr inbounds %struct.Mesh, %struct.Mesh* %21, i32 0, i32 11, !dbg !5694
  %22 = load %struct.MLoopCol*, %struct.MLoopCol** %mloopcol, align 8, !dbg !5694
  %cmp18 = icmp eq %struct.MLoopCol* %22, null, !dbg !5695
  br i1 %cmp18, label %if.then20, label %if.end22, !dbg !5696

if.then20:                                        ; preds = %if.else
  %23 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5697
  %call21 = call zeroext i8 @make_vertexcol(%struct.Object* %23), !dbg !5699
  br label %if.end22, !dbg !5700

if.end22:                                         ; preds = %if.then20, %if.else
  %24 = load %struct.VPaint*, %struct.VPaint** %vp, align 8, !dbg !5701
  %cmp23 = icmp eq %struct.VPaint* %24, null, !dbg !5703
  br i1 %cmp23, label %if.then25, label %if.end29, !dbg !5704

if.then25:                                        ; preds = %if.end22
  %call26 = call %struct.VPaint* @new_vpaint(i32 0), !dbg !5705
  %25 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !5706
  %toolsettings27 = getelementptr inbounds %struct.Scene, %struct.Scene* %25, i32 0, i32 20, !dbg !5707
  %26 = load %struct.ToolSettings*, %struct.ToolSettings** %toolsettings27, align 8, !dbg !5707
  %vpaint28 = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %26, i32 0, i32 0, !dbg !5708
  store %struct.VPaint* %call26, %struct.VPaint** %vpaint28, align 8, !dbg !5709
  store %struct.VPaint* %call26, %struct.VPaint** %vp, align 8, !dbg !5710
  br label %if.end29, !dbg !5711

if.end29:                                         ; preds = %if.then25, %if.end22
  %27 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5712
  call void @paint_cursor_start(%struct.bContext* %27, i32 (%struct.bContext*)* @vertex_paint_poll), !dbg !5713
  %28 = load %struct.VPaint*, %struct.VPaint** %vp, align 8, !dbg !5714
  %paint = getelementptr inbounds %struct.VPaint, %struct.VPaint* %28, i32 0, i32 0, !dbg !5715
  call void @BKE_paint_init(%struct.Paint* %paint, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @PAINT_CURSOR_VERTEX_PAINT, i64 0, i64 0)), !dbg !5716
  br label %if.end30

if.end30:                                         ; preds = %if.end29, %if.end16
  %29 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !5717
  %id = getelementptr inbounds %struct.Mesh, %struct.Mesh* %29, i32 0, i32 0, !dbg !5718
  call void @DAG_id_tag_update(%struct.ID* %id, i16 signext 0), !dbg !5719
  %30 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5720
  %31 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !5721
  %32 = bitcast %struct.Scene* %31 to i8*, !dbg !5721
  call void @WM_event_add_notifier(%struct.bContext* %30, i32 67829760, i8* %32), !dbg !5722
  store i32 4, i32* %retval, align 4, !dbg !5723
  br label %return, !dbg !5723

return:                                           ; preds = %if.end30, %if.then5
  %33 = load i32, i32* %retval, align 4, !dbg !5724
  ret i32 %33, !dbg !5724
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @PAINT_OT_vertex_paint(%struct.wmOperatorType* %ot) #0 !dbg !5725 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !5726, metadata !DIExpression()), !dbg !5727
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5728
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !5729
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.22, i64 0, i64 0), i8** %name, align 8, !dbg !5730
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5731
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !5732
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.23, i64 0, i64 0), i8** %idname, align 8, !dbg !5733
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5734
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !5735
  store i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.24, i64 0, i64 0), i8** %description, align 8, !dbg !5736
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5737
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 6, !dbg !5738
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @vpaint_invoke, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !5739
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5740
  %modal = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 8, !dbg !5741
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @paint_stroke_modal, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %modal, align 8, !dbg !5742
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5743
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 4, !dbg !5744
  store i32 (%struct.bContext*, %struct.wmOperator*)* @vpaint_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !5745
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5746
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 9, !dbg !5747
  store i32 (%struct.bContext*)* @vertex_paint_poll, i32 (%struct.bContext*)** %poll, align 8, !dbg !5748
  %7 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5749
  %cancel = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %7, i32 0, i32 7, !dbg !5750
  store void (%struct.bContext*, %struct.wmOperator*)* @vpaint_cancel, void (%struct.bContext*, %struct.wmOperator*)** %cancel, align 8, !dbg !5751
  %8 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5752
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %8, i32 0, i32 19, !dbg !5753
  store i16 6, i16* %flag, align 8, !dbg !5754
  %9 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5755
  call void @paint_stroke_operator_properties(%struct.wmOperatorType* %9), !dbg !5756
  ret void, !dbg !5757
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @vpaint_invoke(%struct.bContext* %C, %struct.wmOperator* %op, %struct.wmEvent* %event) #0 !dbg !5758 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %event.addr = alloca %struct.wmEvent*, align 8
  %retval1 = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5759, metadata !DIExpression()), !dbg !5760
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !5761, metadata !DIExpression()), !dbg !5762
  store %struct.wmEvent* %event, %struct.wmEvent** %event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event.addr, metadata !5763, metadata !DIExpression()), !dbg !5764
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !5765, metadata !DIExpression()), !dbg !5766
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5767
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5768
  %2 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !5769
  %type = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %2, i32 0, i32 2, !dbg !5770
  %3 = load i16, i16* %type, align 8, !dbg !5770
  %conv = sext i16 %3 to i32, !dbg !5769
  %call = call %struct.PaintStroke* @paint_stroke_new(%struct.bContext* %0, %struct.wmOperator* %1, i8 (%struct.bContext*, float*, float*)* null, i8 (%struct.bContext*, %struct.wmOperator*, float*)* @vpaint_stroke_test_start, void (%struct.bContext*, %struct.PaintStroke*, %struct.PointerRNA*)* @vpaint_stroke_update_step, void (%struct.bContext*, %struct.PaintStroke*, i8)* null, void (%struct.bContext*, %struct.PaintStroke*)* @vpaint_stroke_done, i32 %conv), !dbg !5771
  %4 = bitcast %struct.PaintStroke* %call to i8*, !dbg !5771
  %5 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5772
  %customdata = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %5, i32 0, i32 5, !dbg !5773
  store i8* %4, i8** %customdata, align 8, !dbg !5774
  %6 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5775
  %type2 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %6, i32 0, i32 4, !dbg !5777
  %7 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type2, align 8, !dbg !5777
  %modal = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %7, i32 0, i32 8, !dbg !5778
  %8 = load i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)*, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %modal, align 8, !dbg !5778
  %9 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5779
  %10 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5780
  %11 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !5781
  %call3 = call i32 %8(%struct.bContext* %9, %struct.wmOperator* %10, %struct.wmEvent* %11), !dbg !5775
  store i32 %call3, i32* %retval1, align 4, !dbg !5782
  %cmp = icmp eq i32 %call3, 4, !dbg !5783
  br i1 %cmp, label %if.then, label %if.end, !dbg !5784

if.then:                                          ; preds = %entry
  %12 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5785
  call void @paint_stroke_data_free(%struct.wmOperator* %12), !dbg !5787
  store i32 4, i32* %retval, align 4, !dbg !5788
  br label %return, !dbg !5788

if.end:                                           ; preds = %entry
  %13 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5789
  %14 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5790
  %call5 = call %struct.wmEventHandler* @WM_event_add_modal_handler(%struct.bContext* %13, %struct.wmOperator* %14), !dbg !5791
  %15 = load i32, i32* %retval1, align 4, !dbg !5792
  store i32 1, i32* %retval, align 4, !dbg !5793
  br label %return, !dbg !5793

return:                                           ; preds = %if.end, %if.then
  %16 = load i32, i32* %retval, align 4, !dbg !5794
  ret i32 %16, !dbg !5794
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @vpaint_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !5795 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5796, metadata !DIExpression()), !dbg !5797
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !5798, metadata !DIExpression()), !dbg !5799
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5800
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5801
  %call = call %struct.PaintStroke* @paint_stroke_new(%struct.bContext* %0, %struct.wmOperator* %1, i8 (%struct.bContext*, float*, float*)* null, i8 (%struct.bContext*, %struct.wmOperator*, float*)* @vpaint_stroke_test_start, void (%struct.bContext*, %struct.PaintStroke*, %struct.PointerRNA*)* @vpaint_stroke_update_step, void (%struct.bContext*, %struct.PaintStroke*, i8)* null, void (%struct.bContext*, %struct.PaintStroke*)* @vpaint_stroke_done, i32 0), !dbg !5802
  %2 = bitcast %struct.PaintStroke* %call to i8*, !dbg !5802
  %3 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5803
  %customdata = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %3, i32 0, i32 5, !dbg !5804
  store i8* %2, i8** %customdata, align 8, !dbg !5805
  %4 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5806
  %5 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5807
  %call1 = call i32 @paint_stroke_exec(%struct.bContext* %4, %struct.wmOperator* %5), !dbg !5808
  ret i32 4, !dbg !5809
}

; Function Attrs: noinline nounwind uwtable
define internal void @vpaint_cancel(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !5810 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5811, metadata !DIExpression()), !dbg !5812
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !5813, metadata !DIExpression()), !dbg !5814
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5815
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5816
  call void @paint_stroke_cancel(%struct.bContext* %0, %struct.wmOperator* %1), !dbg !5817
  ret void, !dbg !5818
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @PAINT_OT_weight_from_bones(%struct.wmOperatorType* %ot) #0 !dbg !2 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !5819, metadata !DIExpression()), !dbg !5820
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5821
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !5822
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.31, i64 0, i64 0), i8** %name, align 8, !dbg !5823
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5824
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !5825
  store i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.32, i64 0, i64 0), i8** %idname, align 8, !dbg !5826
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5827
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !5828
  store i8* getelementptr inbounds ([133 x i8], [133 x i8]* @.str.33, i64 0, i64 0), i8** %description, align 8, !dbg !5829
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5830
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !5831
  store i32 (%struct.bContext*, %struct.wmOperator*)* @weight_from_bones_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !5832
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5833
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 6, !dbg !5834
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @WM_menu_invoke, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !5835
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5836
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 9, !dbg !5837
  store i32 (%struct.bContext*)* @weight_from_bones_poll, i32 (%struct.bContext*)** %poll, align 8, !dbg !5838
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5839
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 19, !dbg !5840
  store i16 3, i16* %flag, align 8, !dbg !5841
  %7 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5842
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %7, i32 0, i32 11, !dbg !5843
  %8 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !5843
  %9 = bitcast %struct.StructRNA* %8 to i8*, !dbg !5842
  %call = call %struct.PropertyRNA* @RNA_def_enum(i8* %9, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.34, i64 0, i64 0), %struct.EnumPropertyItem* getelementptr inbounds ([3 x %struct.EnumPropertyItem], [3 x %struct.EnumPropertyItem]* @PAINT_OT_weight_from_bones.type_items, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.35, i64 0, i64 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.36, i64 0, i64 0)), !dbg !5844
  %10 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5845
  %prop = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %10, i32 0, i32 13, !dbg !5846
  store %struct.PropertyRNA* %call, %struct.PropertyRNA** %prop, align 8, !dbg !5847
  ret void, !dbg !5848
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @weight_from_bones_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !5849 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %scene = alloca %struct.Scene*, align 8
  %ob = alloca %struct.Object*, align 8
  %armob = alloca %struct.Object*, align 8
  %me = alloca %struct.Mesh*, align 8
  %type = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5850, metadata !DIExpression()), !dbg !5851
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !5852, metadata !DIExpression()), !dbg !5853
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene, metadata !5854, metadata !DIExpression()), !dbg !5855
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5856
  %call = call %struct.Scene* @CTX_data_scene(%struct.bContext* %0), !dbg !5857
  store %struct.Scene* %call, %struct.Scene** %scene, align 8, !dbg !5855
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !5858, metadata !DIExpression()), !dbg !5859
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5860
  %call1 = call %struct.Object* @CTX_data_active_object(%struct.bContext* %1), !dbg !5861
  store %struct.Object* %call1, %struct.Object** %ob, align 8, !dbg !5859
  call void @llvm.dbg.declare(metadata %struct.Object** %armob, metadata !5862, metadata !DIExpression()), !dbg !5863
  %2 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5864
  %call2 = call %struct.Object* @modifiers_isDeformedByArmature(%struct.Object* %2), !dbg !5865
  store %struct.Object* %call2, %struct.Object** %armob, align 8, !dbg !5863
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me, metadata !5866, metadata !DIExpression()), !dbg !5867
  %3 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5868
  %data = getelementptr inbounds %struct.Object, %struct.Object* %3, i32 0, i32 19, !dbg !5869
  %4 = load i8*, i8** %data, align 8, !dbg !5869
  %5 = bitcast i8* %4 to %struct.Mesh*, !dbg !5868
  store %struct.Mesh* %5, %struct.Mesh** %me, align 8, !dbg !5867
  call void @llvm.dbg.declare(metadata i32* %type, metadata !5870, metadata !DIExpression()), !dbg !5871
  %6 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5872
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %6, i32 0, i32 7, !dbg !5873
  %7 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !5873
  %call3 = call i32 @RNA_enum_get(%struct.PointerRNA* %7, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.34, i64 0, i64 0)), !dbg !5874
  store i32 %call3, i32* %type, align 4, !dbg !5871
  %8 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5875
  %reports = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %8, i32 0, i32 8, !dbg !5876
  %9 = load %struct.ReportList*, %struct.ReportList** %reports, align 8, !dbg !5876
  %10 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !5877
  %11 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5878
  %12 = load %struct.Object*, %struct.Object** %armob, align 8, !dbg !5879
  %13 = load i32, i32* %type, align 4, !dbg !5880
  %14 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !5881
  %editflag = getelementptr inbounds %struct.Mesh, %struct.Mesh* %14, i32 0, i32 46, !dbg !5882
  %15 = load i8, i8* %editflag, align 1, !dbg !5882
  %conv = zext i8 %15 to i32, !dbg !5881
  %and = and i32 %conv, 1, !dbg !5883
  %conv4 = trunc i32 %and to i8, !dbg !5884
  call void @create_vgroups_from_armature(%struct.ReportList* %9, %struct.Scene* %10, %struct.Object* %11, %struct.Object* %12, i32 %13, i8 zeroext %conv4), !dbg !5885
  %16 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !5886
  %id = getelementptr inbounds %struct.Mesh, %struct.Mesh* %16, i32 0, i32 0, !dbg !5887
  call void @DAG_id_tag_update(%struct.ID* %id, i16 signext 0), !dbg !5888
  %17 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5889
  %18 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !5890
  %19 = bitcast %struct.Mesh* %18 to i8*, !dbg !5890
  call void @WM_event_add_notifier(%struct.bContext* %17, i32 274399232, i8* %19), !dbg !5891
  ret i32 4, !dbg !5892
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @weight_from_bones_poll(%struct.bContext* %C) #0 !dbg !5893 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %ob = alloca %struct.Object*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5894, metadata !DIExpression()), !dbg !5895
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !5896, metadata !DIExpression()), !dbg !5897
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5898
  %call = call %struct.Object* @CTX_data_active_object(%struct.bContext* %0), !dbg !5899
  store %struct.Object* %call, %struct.Object** %ob, align 8, !dbg !5897
  %1 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5900
  %tobool = icmp ne %struct.Object* %1, null, !dbg !5900
  br i1 %tobool, label %land.lhs.true, label %land.end, !dbg !5901

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5902
  %mode = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 27, !dbg !5903
  %3 = load i32, i32* %mode, align 8, !dbg !5903
  %and = and i32 %3, 8, !dbg !5904
  %tobool1 = icmp ne i32 %and, 0, !dbg !5904
  br i1 %tobool1, label %land.rhs, label %land.end, !dbg !5905

land.rhs:                                         ; preds = %land.lhs.true
  %4 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5906
  %call2 = call %struct.Object* @modifiers_isDeformedByArmature(%struct.Object* %4), !dbg !5907
  %tobool3 = icmp ne %struct.Object* %call2, null, !dbg !5905
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %entry
  %5 = phi i1 [ false, %land.lhs.true ], [ false, %entry ], [ %tobool3, %land.rhs ], !dbg !5908
  %land.ext = zext i1 %5 to i32, !dbg !5905
  ret i32 %land.ext, !dbg !5909
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @PAINT_OT_weight_gradient(%struct.wmOperatorType* %ot) #0 !dbg !3421 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  %prop = alloca %struct.PropertyRNA*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !5910, metadata !DIExpression()), !dbg !5911
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop, metadata !5912, metadata !DIExpression()), !dbg !5913
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5914
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !5915
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.42, i64 0, i64 0), i8** %name, align 8, !dbg !5916
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5917
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !5918
  store i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.43, i64 0, i64 0), i8** %idname, align 8, !dbg !5919
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5920
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !5921
  store i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.44, i64 0, i64 0), i8** %description, align 8, !dbg !5922
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5923
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 6, !dbg !5924
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @paint_weight_gradient_invoke, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !5925
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5926
  %modal = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 8, !dbg !5927
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @paint_weight_gradient_modal, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %modal, align 8, !dbg !5928
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5929
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 4, !dbg !5930
  store i32 (%struct.bContext*, %struct.wmOperator*)* @paint_weight_gradient_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !5931
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5932
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 9, !dbg !5933
  store i32 (%struct.bContext*)* @weight_paint_poll, i32 (%struct.bContext*)** %poll, align 8, !dbg !5934
  %7 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5935
  %cancel = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %7, i32 0, i32 7, !dbg !5936
  store void (%struct.bContext*, %struct.wmOperator*)* @WM_gesture_straightline_cancel, void (%struct.bContext*, %struct.wmOperator*)** %cancel, align 8, !dbg !5937
  %8 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5938
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %8, i32 0, i32 19, !dbg !5939
  store i16 3, i16* %flag, align 8, !dbg !5940
  %9 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5941
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %9, i32 0, i32 11, !dbg !5942
  %10 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !5942
  %11 = bitcast %struct.StructRNA* %10 to i8*, !dbg !5941
  %call = call %struct.PropertyRNA* @RNA_def_enum(i8* %11, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.34, i64 0, i64 0), %struct.EnumPropertyItem* getelementptr inbounds ([3 x %struct.EnumPropertyItem], [3 x %struct.EnumPropertyItem]* @PAINT_OT_weight_gradient.gradient_types, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.35, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.39, i64 0, i64 0)), !dbg !5943
  store %struct.PropertyRNA* %call, %struct.PropertyRNA** %prop, align 8, !dbg !5944
  %12 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !5945
  call void @RNA_def_property_flag(%struct.PropertyRNA* %12, i32 268435456), !dbg !5946
  %13 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5947
  call void @WM_operator_properties_gesture_straightline(%struct.wmOperatorType* %13, i32 1002), !dbg !5948
  ret void, !dbg !5949
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @paint_weight_gradient_invoke(%struct.bContext* %C, %struct.wmOperator* %op, %struct.wmEvent* %event) #0 !dbg !5950 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %event.addr = alloca %struct.wmEvent*, align 8
  %ret = alloca i32, align 4
  %ar = alloca %struct.ARegion*, align 8
  %gesture = alloca %struct.wmGesture*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5951, metadata !DIExpression()), !dbg !5952
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !5953, metadata !DIExpression()), !dbg !5954
  store %struct.wmEvent* %event, %struct.wmEvent** %event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event.addr, metadata !5955, metadata !DIExpression()), !dbg !5956
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5957, metadata !DIExpression()), !dbg !5958
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5959
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5961
  %call = call zeroext i8 @wpaint_ensure_data(%struct.bContext* %0, %struct.wmOperator* %1), !dbg !5962
  %conv = zext i8 %call to i32, !dbg !5962
  %cmp = icmp eq i32 %conv, 0, !dbg !5963
  br i1 %cmp, label %if.then, label %if.end, !dbg !5964

if.then:                                          ; preds = %entry
  store i32 2, i32* %retval, align 4, !dbg !5965
  br label %return, !dbg !5965

if.end:                                           ; preds = %entry
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5967
  %3 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5968
  %4 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !5969
  %call2 = call i32 @WM_gesture_straightline_invoke(%struct.bContext* %2, %struct.wmOperator* %3, %struct.wmEvent* %4), !dbg !5970
  store i32 %call2, i32* %ret, align 4, !dbg !5971
  %5 = load i32, i32* %ret, align 4, !dbg !5972
  %and = and i32 %5, 1, !dbg !5974
  %tobool = icmp ne i32 %and, 0, !dbg !5974
  br i1 %tobool, label %if.then3, label %if.end18, !dbg !5975

if.then3:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar, metadata !5976, metadata !DIExpression()), !dbg !5978
  %6 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5979
  %call4 = call %struct.ARegion* @CTX_wm_region(%struct.bContext* %6), !dbg !5980
  store %struct.ARegion* %call4, %struct.ARegion** %ar, align 8, !dbg !5978
  %7 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !5981
  %regiontype = getelementptr inbounds %struct.ARegion, %struct.ARegion* %7, i32 0, i32 8, !dbg !5983
  %8 = load i16, i16* %regiontype, align 2, !dbg !5983
  %conv5 = sext i16 %8 to i32, !dbg !5981
  %cmp6 = icmp eq i32 %conv5, 0, !dbg !5984
  br i1 %cmp6, label %if.then8, label %if.end17, !dbg !5985

if.then8:                                         ; preds = %if.then3
  %9 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !5986
  %type = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %9, i32 0, i32 2, !dbg !5989
  %10 = load i16, i16* %type, align 8, !dbg !5989
  %conv9 = sext i16 %10 to i32, !dbg !5986
  %cmp10 = icmp eq i32 %conv9, 1, !dbg !5990
  br i1 %cmp10, label %land.lhs.true, label %if.end16, !dbg !5991

land.lhs.true:                                    ; preds = %if.then8
  %11 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !5992
  %val = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %11, i32 0, i32 3, !dbg !5993
  %12 = load i16, i16* %val, align 2, !dbg !5993
  %conv12 = sext i16 %12 to i32, !dbg !5992
  %cmp13 = icmp eq i32 %conv12, 1, !dbg !5994
  br i1 %cmp13, label %if.then15, label %if.end16, !dbg !5995

if.then15:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.wmGesture** %gesture, metadata !5996, metadata !DIExpression()), !dbg !6000
  %13 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6001
  %customdata = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %13, i32 0, i32 5, !dbg !6002
  %14 = load i8*, i8** %customdata, align 8, !dbg !6002
  %15 = bitcast i8* %14 to %struct.wmGesture*, !dbg !6001
  store %struct.wmGesture* %15, %struct.wmGesture** %gesture, align 8, !dbg !6000
  %16 = load %struct.wmGesture*, %struct.wmGesture** %gesture, align 8, !dbg !6003
  %mode = getelementptr inbounds %struct.wmGesture, %struct.wmGesture* %16, i32 0, i32 3, !dbg !6004
  store i32 1, i32* %mode, align 4, !dbg !6005
  br label %if.end16, !dbg !6006

if.end16:                                         ; preds = %if.then15, %land.lhs.true, %if.then8
  br label %if.end17, !dbg !6007

if.end17:                                         ; preds = %if.end16, %if.then3
  br label %if.end18, !dbg !6008

if.end18:                                         ; preds = %if.end17, %if.end
  %17 = load i32, i32* %ret, align 4, !dbg !6009
  store i32 %17, i32* %retval, align 4, !dbg !6010
  br label %return, !dbg !6010

return:                                           ; preds = %if.end18, %if.then
  %18 = load i32, i32* %retval, align 4, !dbg !6011
  ret i32 %18, !dbg !6011
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @paint_weight_gradient_modal(%struct.bContext* %C, %struct.wmOperator* %op, %struct.wmEvent* %event) #0 !dbg !6012 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %event.addr = alloca %struct.wmEvent*, align 8
  %ret = alloca i32, align 4
  %ts = alloca %struct.ToolSettings*, align 8
  %wp = alloca %struct.VPaint*, align 8
  %ob = alloca %struct.Object*, align 8
  %me = alloca %struct.Mesh*, align 8
  %ts22 = alloca %struct.ToolSettings*, align 8
  %wp24 = alloca %struct.VPaint*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !6013, metadata !DIExpression()), !dbg !6014
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !6015, metadata !DIExpression()), !dbg !6016
  store %struct.wmEvent* %event, %struct.wmEvent** %event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event.addr, metadata !6017, metadata !DIExpression()), !dbg !6018
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6019, metadata !DIExpression()), !dbg !6020
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6021
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6022
  %2 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !6023
  %call = call i32 @WM_gesture_straightline_modal(%struct.bContext* %0, %struct.wmOperator* %1, %struct.wmEvent* %2), !dbg !6024
  store i32 %call, i32* %ret, align 4, !dbg !6020
  %3 = load i32, i32* %ret, align 4, !dbg !6025
  %and = and i32 %3, 1, !dbg !6027
  %tobool = icmp ne i32 %and, 0, !dbg !6027
  br i1 %tobool, label %if.then, label %if.end7, !dbg !6028

if.then:                                          ; preds = %entry
  %4 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !6029
  %type = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %4, i32 0, i32 2, !dbg !6032
  %5 = load i16, i16* %type, align 8, !dbg !6032
  %conv = sext i16 %5 to i32, !dbg !6029
  %cmp = icmp eq i32 %conv, 1, !dbg !6033
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !6034

land.lhs.true:                                    ; preds = %if.then
  %6 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !6035
  %val = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %6, i32 0, i32 3, !dbg !6036
  %7 = load i16, i16* %val, align 2, !dbg !6036
  %conv2 = sext i16 %7 to i32, !dbg !6035
  %cmp3 = icmp eq i32 %conv2, 2, !dbg !6037
  br i1 %cmp3, label %if.then5, label %if.end, !dbg !6038

if.then5:                                         ; preds = %land.lhs.true
  %8 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6039
  %9 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6041
  call void @WM_gesture_straightline_cancel(%struct.bContext* %8, %struct.wmOperator* %9), !dbg !6042
  %10 = load i32, i32* %ret, align 4, !dbg !6043
  %and6 = and i32 %10, -2, !dbg !6043
  store i32 %and6, i32* %ret, align 4, !dbg !6043
  %11 = load i32, i32* %ret, align 4, !dbg !6044
  %or = or i32 %11, 4, !dbg !6044
  store i32 %or, i32* %ret, align 4, !dbg !6044
  br label %if.end, !dbg !6045

if.end:                                           ; preds = %if.then5, %land.lhs.true, %if.then
  br label %if.end7, !dbg !6046

if.end7:                                          ; preds = %if.end, %entry
  %12 = load i32, i32* %ret, align 4, !dbg !6047
  %and8 = and i32 %12, 2, !dbg !6049
  %tobool9 = icmp ne i32 %and8, 0, !dbg !6049
  br i1 %tobool9, label %if.then10, label %if.else, !dbg !6050

if.then10:                                        ; preds = %if.end7
  call void @llvm.dbg.declare(metadata %struct.ToolSettings** %ts, metadata !6051, metadata !DIExpression()), !dbg !6053
  %13 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6054
  %call11 = call %struct.ToolSettings* @CTX_data_tool_settings(%struct.bContext* %13), !dbg !6055
  store %struct.ToolSettings* %call11, %struct.ToolSettings** %ts, align 8, !dbg !6053
  call void @llvm.dbg.declare(metadata %struct.VPaint** %wp, metadata !6056, metadata !DIExpression()), !dbg !6057
  %14 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !6058
  %wpaint = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %14, i32 0, i32 1, !dbg !6059
  %15 = load %struct.VPaint*, %struct.VPaint** %wpaint, align 8, !dbg !6059
  store %struct.VPaint* %15, %struct.VPaint** %wp, align 8, !dbg !6057
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !6060, metadata !DIExpression()), !dbg !6061
  %16 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6062
  %call12 = call %struct.Object* @CTX_data_active_object(%struct.bContext* %16), !dbg !6063
  store %struct.Object* %call12, %struct.Object** %ob, align 8, !dbg !6061
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me, metadata !6064, metadata !DIExpression()), !dbg !6065
  %17 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !6066
  %data = getelementptr inbounds %struct.Object, %struct.Object* %17, i32 0, i32 19, !dbg !6067
  %18 = load i8*, i8** %data, align 8, !dbg !6067
  %19 = bitcast i8* %18 to %struct.Mesh*, !dbg !6066
  store %struct.Mesh* %19, %struct.Mesh** %me, align 8, !dbg !6065
  %20 = load %struct.VPaint*, %struct.VPaint** %wp, align 8, !dbg !6068
  %wpaint_prev = getelementptr inbounds %struct.VPaint, %struct.VPaint* %20, i32 0, i32 5, !dbg !6070
  %21 = load %struct.MDeformVert*, %struct.MDeformVert** %wpaint_prev, align 8, !dbg !6070
  %tobool13 = icmp ne %struct.MDeformVert* %21, null, !dbg !6068
  br i1 %tobool13, label %if.then14, label %if.end18, !dbg !6071

if.then14:                                        ; preds = %if.then10
  %22 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !6072
  %dvert = getelementptr inbounds %struct.Mesh, %struct.Mesh* %22, i32 0, i32 17, !dbg !6074
  %23 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert, align 8, !dbg !6074
  %24 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !6075
  %totvert = getelementptr inbounds %struct.Mesh, %struct.Mesh* %24, i32 0, i32 26, !dbg !6076
  %25 = load i32, i32* %totvert, align 8, !dbg !6076
  call void @BKE_defvert_array_free_elems(%struct.MDeformVert* %23, i32 %25), !dbg !6077
  %26 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !6078
  %dvert15 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %26, i32 0, i32 17, !dbg !6079
  %27 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert15, align 8, !dbg !6079
  %28 = load %struct.VPaint*, %struct.VPaint** %wp, align 8, !dbg !6080
  %wpaint_prev16 = getelementptr inbounds %struct.VPaint, %struct.VPaint* %28, i32 0, i32 5, !dbg !6081
  %29 = load %struct.MDeformVert*, %struct.MDeformVert** %wpaint_prev16, align 8, !dbg !6081
  %30 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !6082
  %totvert17 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %30, i32 0, i32 26, !dbg !6083
  %31 = load i32, i32* %totvert17, align 8, !dbg !6083
  call void @BKE_defvert_array_copy(%struct.MDeformVert* %27, %struct.MDeformVert* %29, i32 %31), !dbg !6084
  %32 = load %struct.VPaint*, %struct.VPaint** %wp, align 8, !dbg !6085
  call void @free_wpaint_prev(%struct.VPaint* %32), !dbg !6086
  br label %if.end18, !dbg !6087

if.end18:                                         ; preds = %if.then14, %if.then10
  %33 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !6088
  %id = getelementptr inbounds %struct.Object, %struct.Object* %33, i32 0, i32 0, !dbg !6089
  call void @DAG_id_tag_update(%struct.ID* %id, i16 signext 2), !dbg !6090
  %34 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6091
  %35 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !6092
  %36 = bitcast %struct.Object* %35 to i8*, !dbg !6092
  call void @WM_event_add_notifier(%struct.bContext* %34, i32 85393408, i8* %36), !dbg !6093
  br label %if.end27, !dbg !6094

if.else:                                          ; preds = %if.end7
  %37 = load i32, i32* %ret, align 4, !dbg !6095
  %and19 = and i32 %37, 4, !dbg !6097
  %tobool20 = icmp ne i32 %and19, 0, !dbg !6097
  br i1 %tobool20, label %if.then21, label %if.end26, !dbg !6098

if.then21:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata %struct.ToolSettings** %ts22, metadata !6099, metadata !DIExpression()), !dbg !6101
  %38 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6102
  %call23 = call %struct.ToolSettings* @CTX_data_tool_settings(%struct.bContext* %38), !dbg !6103
  store %struct.ToolSettings* %call23, %struct.ToolSettings** %ts22, align 8, !dbg !6101
  call void @llvm.dbg.declare(metadata %struct.VPaint** %wp24, metadata !6104, metadata !DIExpression()), !dbg !6105
  %39 = load %struct.ToolSettings*, %struct.ToolSettings** %ts22, align 8, !dbg !6106
  %wpaint25 = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %39, i32 0, i32 1, !dbg !6107
  %40 = load %struct.VPaint*, %struct.VPaint** %wpaint25, align 8, !dbg !6107
  store %struct.VPaint* %40, %struct.VPaint** %wp24, align 8, !dbg !6105
  %41 = load %struct.VPaint*, %struct.VPaint** %wp24, align 8, !dbg !6108
  call void @free_wpaint_prev(%struct.VPaint* %41), !dbg !6109
  br label %if.end26, !dbg !6110

if.end26:                                         ; preds = %if.then21, %if.else
  br label %if.end27

if.end27:                                         ; preds = %if.end26, %if.end18
  %42 = load i32, i32* %ret, align 4, !dbg !6111
  ret i32 %42, !dbg !6112
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @paint_weight_gradient_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !6113 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %gesture = alloca %struct.wmGesture*, align 8
  %vert_cache = alloca %struct.DMGradient_vertStore*, align 8
  %ar = alloca %struct.ARegion*, align 8
  %scene = alloca %struct.Scene*, align 8
  %ob = alloca %struct.Object*, align 8
  %me = alloca %struct.Mesh*, align 8
  %x_start = alloca i32, align 4
  %y_start = alloca i32, align 4
  %x_end = alloca i32, align 4
  %y_end = alloca i32, align 4
  %sco_start = alloca [2 x float], align 4
  %sco_end = alloca [2 x float], align 4
  %is_interactive = alloca i8, align 1
  %dm = alloca %struct.DerivedMesh*, align 8
  %data18 = alloca %struct.DMGradient_userData, align 8
  %wp = alloca %struct.VPaint*, align 8
  %ts = alloca %struct.ToolSettings*, align 8
  %wp63 = alloca %struct.VPaint*, align 8
  %brush = alloca %struct.Brush*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !6114, metadata !DIExpression()), !dbg !6115
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !6116, metadata !DIExpression()), !dbg !6117
  call void @llvm.dbg.declare(metadata %struct.wmGesture** %gesture, metadata !6118, metadata !DIExpression()), !dbg !6119
  %0 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6120
  %customdata = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %0, i32 0, i32 5, !dbg !6121
  %1 = load i8*, i8** %customdata, align 8, !dbg !6121
  %2 = bitcast i8* %1 to %struct.wmGesture*, !dbg !6120
  store %struct.wmGesture* %2, %struct.wmGesture** %gesture, align 8, !dbg !6119
  call void @llvm.dbg.declare(metadata %struct.DMGradient_vertStore** %vert_cache, metadata !6122, metadata !DIExpression()), !dbg !6125
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar, metadata !6126, metadata !DIExpression()), !dbg !6127
  %3 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6128
  %call = call %struct.ARegion* @CTX_wm_region(%struct.bContext* %3), !dbg !6129
  store %struct.ARegion* %call, %struct.ARegion** %ar, align 8, !dbg !6127
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene, metadata !6130, metadata !DIExpression()), !dbg !6131
  %4 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6132
  %call1 = call %struct.Scene* @CTX_data_scene(%struct.bContext* %4), !dbg !6133
  store %struct.Scene* %call1, %struct.Scene** %scene, align 8, !dbg !6131
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !6134, metadata !DIExpression()), !dbg !6135
  %5 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6136
  %call2 = call %struct.Object* @CTX_data_active_object(%struct.bContext* %5), !dbg !6137
  store %struct.Object* %call2, %struct.Object** %ob, align 8, !dbg !6135
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me, metadata !6138, metadata !DIExpression()), !dbg !6139
  %6 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !6140
  %data = getelementptr inbounds %struct.Object, %struct.Object* %6, i32 0, i32 19, !dbg !6141
  %7 = load i8*, i8** %data, align 8, !dbg !6141
  %8 = bitcast i8* %7 to %struct.Mesh*, !dbg !6140
  store %struct.Mesh* %8, %struct.Mesh** %me, align 8, !dbg !6139
  call void @llvm.dbg.declare(metadata i32* %x_start, metadata !6142, metadata !DIExpression()), !dbg !6143
  %9 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6144
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %9, i32 0, i32 7, !dbg !6145
  %10 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !6145
  %call3 = call i32 @RNA_int_get(%struct.PointerRNA* %10, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.62, i64 0, i64 0)), !dbg !6146
  store i32 %call3, i32* %x_start, align 4, !dbg !6143
  call void @llvm.dbg.declare(metadata i32* %y_start, metadata !6147, metadata !DIExpression()), !dbg !6148
  %11 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6149
  %ptr4 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %11, i32 0, i32 7, !dbg !6150
  %12 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr4, align 8, !dbg !6150
  %call5 = call i32 @RNA_int_get(%struct.PointerRNA* %12, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.63, i64 0, i64 0)), !dbg !6151
  store i32 %call5, i32* %y_start, align 4, !dbg !6148
  call void @llvm.dbg.declare(metadata i32* %x_end, metadata !6152, metadata !DIExpression()), !dbg !6153
  %13 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6154
  %ptr6 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %13, i32 0, i32 7, !dbg !6155
  %14 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr6, align 8, !dbg !6155
  %call7 = call i32 @RNA_int_get(%struct.PointerRNA* %14, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.64, i64 0, i64 0)), !dbg !6156
  store i32 %call7, i32* %x_end, align 4, !dbg !6153
  call void @llvm.dbg.declare(metadata i32* %y_end, metadata !6157, metadata !DIExpression()), !dbg !6158
  %15 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6159
  %ptr8 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %15, i32 0, i32 7, !dbg !6160
  %16 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr8, align 8, !dbg !6160
  %call9 = call i32 @RNA_int_get(%struct.PointerRNA* %16, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.65, i64 0, i64 0)), !dbg !6161
  store i32 %call9, i32* %y_end, align 4, !dbg !6158
  call void @llvm.dbg.declare(metadata [2 x float]* %sco_start, metadata !6162, metadata !DIExpression()), !dbg !6163
  %arrayinit.begin = getelementptr inbounds [2 x float], [2 x float]* %sco_start, i64 0, i64 0, !dbg !6164
  %17 = load i32, i32* %x_start, align 4, !dbg !6165
  %conv = sitofp i32 %17 to float, !dbg !6165
  store float %conv, float* %arrayinit.begin, align 4, !dbg !6164
  %arrayinit.element = getelementptr inbounds float, float* %arrayinit.begin, i64 1, !dbg !6164
  %18 = load i32, i32* %y_start, align 4, !dbg !6166
  %conv10 = sitofp i32 %18 to float, !dbg !6166
  store float %conv10, float* %arrayinit.element, align 4, !dbg !6164
  call void @llvm.dbg.declare(metadata [2 x float]* %sco_end, metadata !6167, metadata !DIExpression()), !dbg !6168
  %arrayinit.begin11 = getelementptr inbounds [2 x float], [2 x float]* %sco_end, i64 0, i64 0, !dbg !6169
  %19 = load i32, i32* %x_end, align 4, !dbg !6170
  %conv12 = sitofp i32 %19 to float, !dbg !6170
  store float %conv12, float* %arrayinit.begin11, align 4, !dbg !6169
  %arrayinit.element13 = getelementptr inbounds float, float* %arrayinit.begin11, i64 1, !dbg !6169
  %20 = load i32, i32* %y_end, align 4, !dbg !6171
  %conv14 = sitofp i32 %20 to float, !dbg !6171
  store float %conv14, float* %arrayinit.element13, align 4, !dbg !6169
  call void @llvm.dbg.declare(metadata i8* %is_interactive, metadata !6172, metadata !DIExpression()), !dbg !6173
  %21 = load %struct.wmGesture*, %struct.wmGesture** %gesture, align 8, !dbg !6174
  %cmp = icmp ne %struct.wmGesture* %21, null, !dbg !6175
  %conv15 = zext i1 %cmp to i32, !dbg !6175
  %conv16 = trunc i32 %conv15 to i8, !dbg !6176
  store i8 %conv16, i8* %is_interactive, align 1, !dbg !6173
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm, metadata !6177, metadata !DIExpression()), !dbg !6178
  %22 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !6179
  %23 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !6180
  %24 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !6181
  %customdata_mask = getelementptr inbounds %struct.Scene, %struct.Scene* %24, i32 0, i32 42, !dbg !6182
  %25 = load i64, i64* %customdata_mask, align 8, !dbg !6182
  %call17 = call %struct.DerivedMesh* @mesh_get_derived_final(%struct.Scene* %22, %struct.Object* %23, i64 %25), !dbg !6183
  store %struct.DerivedMesh* %call17, %struct.DerivedMesh** %dm, align 8, !dbg !6178
  call void @llvm.dbg.declare(metadata %struct.DMGradient_userData* %data18, metadata !6184, metadata !DIExpression()), !dbg !6202
  %26 = bitcast %struct.DMGradient_userData* %data18 to i8*, !dbg !6202
  call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 88, i1 false), !dbg !6202
  %27 = load i8, i8* %is_interactive, align 1, !dbg !6203
  %tobool = icmp ne i8 %27, 0, !dbg !6203
  br i1 %tobool, label %if.then, label %if.else, !dbg !6205

if.then:                                          ; preds = %entry
  %28 = load %struct.wmGesture*, %struct.wmGesture** %gesture, align 8, !dbg !6206
  %userdata = getelementptr inbounds %struct.wmGesture, %struct.wmGesture* %28, i32 0, i32 9, !dbg !6209
  %29 = load i8*, i8** %userdata, align 8, !dbg !6209
  %cmp19 = icmp eq i8* %29, null, !dbg !6210
  br i1 %cmp19, label %if.then21, label %if.end29, !dbg !6211

if.then21:                                        ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.VPaint** %wp, metadata !6212, metadata !DIExpression()), !dbg !6214
  %30 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !6215
  %toolsettings = getelementptr inbounds %struct.Scene, %struct.Scene* %30, i32 0, i32 20, !dbg !6216
  %31 = load %struct.ToolSettings*, %struct.ToolSettings** %toolsettings, align 8, !dbg !6216
  %wpaint = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %31, i32 0, i32 1, !dbg !6217
  %32 = load %struct.VPaint*, %struct.VPaint** %wpaint, align 8, !dbg !6217
  store %struct.VPaint* %32, %struct.VPaint** %wp, align 8, !dbg !6214
  %33 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !6218
  %34 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !6219
  %totvert = getelementptr inbounds %struct.Mesh, %struct.Mesh* %34, i32 0, i32 26, !dbg !6220
  %35 = load i32, i32* %totvert, align 8, !dbg !6220
  %conv22 = sext i32 %35 to i64, !dbg !6219
  %mul = mul i64 16, %conv22, !dbg !6221
  %call23 = call i8* %33(i64 %mul, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.paint_weight_gradient_exec, i64 0, i64 0)), !dbg !6218
  %36 = load %struct.wmGesture*, %struct.wmGesture** %gesture, align 8, !dbg !6222
  %userdata24 = getelementptr inbounds %struct.wmGesture, %struct.wmGesture* %36, i32 0, i32 9, !dbg !6223
  store i8* %call23, i8** %userdata24, align 8, !dbg !6224
  %is_init = getelementptr inbounds %struct.DMGradient_userData, %struct.DMGradient_userData* %data18, i32 0, i32 8, !dbg !6225
  store i16 1, i16* %is_init, align 8, !dbg !6226
  %37 = load %struct.VPaint*, %struct.VPaint** %wp, align 8, !dbg !6227
  %38 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !6228
  %dvert = getelementptr inbounds %struct.Mesh, %struct.Mesh* %38, i32 0, i32 17, !dbg !6229
  %39 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert, align 8, !dbg !6229
  %40 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !6230
  %totvert25 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %40, i32 0, i32 26, !dbg !6231
  %41 = load i32, i32* %totvert25, align 8, !dbg !6231
  call void @copy_wpaint_prev(%struct.VPaint* %37, %struct.MDeformVert* %39, i32 %41), !dbg !6232
  %42 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !6233
  %editflag = getelementptr inbounds %struct.Mesh, %struct.Mesh* %42, i32 0, i32 46, !dbg !6235
  %43 = load i8, i8* %editflag, align 1, !dbg !6235
  %conv26 = zext i8 %43 to i32, !dbg !6233
  %and = and i32 %conv26, 8, !dbg !6236
  %tobool27 = icmp ne i32 %and, 0, !dbg !6236
  br i1 %tobool27, label %if.then28, label %if.end, !dbg !6237

if.then28:                                        ; preds = %if.then21
  %44 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !6238
  call void @BKE_mesh_flush_select_from_polys(%struct.Mesh* %44), !dbg !6240
  br label %if.end, !dbg !6241

if.end:                                           ; preds = %if.then28, %if.then21
  br label %if.end29, !dbg !6242

if.end29:                                         ; preds = %if.end, %if.then
  %45 = load %struct.wmGesture*, %struct.wmGesture** %gesture, align 8, !dbg !6243
  %userdata30 = getelementptr inbounds %struct.wmGesture, %struct.wmGesture* %45, i32 0, i32 9, !dbg !6244
  %46 = load i8*, i8** %userdata30, align 8, !dbg !6244
  %47 = bitcast i8* %46 to %struct.DMGradient_vertStore*, !dbg !6243
  store %struct.DMGradient_vertStore* %47, %struct.DMGradient_vertStore** %vert_cache, align 8, !dbg !6245
  br label %if.end42, !dbg !6246

if.else:                                          ; preds = %entry
  %48 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6247
  %49 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6250
  %call31 = call zeroext i8 @wpaint_ensure_data(%struct.bContext* %48, %struct.wmOperator* %49), !dbg !6251
  %conv32 = zext i8 %call31 to i32, !dbg !6251
  %cmp33 = icmp eq i32 %conv32, 0, !dbg !6252
  br i1 %cmp33, label %if.then35, label %if.end36, !dbg !6253

if.then35:                                        ; preds = %if.else
  store i32 2, i32* %retval, align 4, !dbg !6254
  br label %return, !dbg !6254

if.end36:                                         ; preds = %if.else
  %is_init37 = getelementptr inbounds %struct.DMGradient_userData, %struct.DMGradient_userData* %data18, i32 0, i32 8, !dbg !6256
  store i16 1, i16* %is_init37, align 8, !dbg !6257
  %50 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !6258
  %51 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !6259
  %totvert38 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %51, i32 0, i32 26, !dbg !6260
  %52 = load i32, i32* %totvert38, align 8, !dbg !6260
  %conv39 = sext i32 %52 to i64, !dbg !6259
  %mul40 = mul i64 16, %conv39, !dbg !6261
  %call41 = call i8* %50(i64 %mul40, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.paint_weight_gradient_exec, i64 0, i64 0)), !dbg !6258
  %53 = bitcast i8* %call41 to %struct.DMGradient_vertStore*, !dbg !6258
  store %struct.DMGradient_vertStore* %53, %struct.DMGradient_vertStore** %vert_cache, align 8, !dbg !6262
  br label %if.end42

if.end42:                                         ; preds = %if.end36, %if.end29
  %54 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !6263
  %ar43 = getelementptr inbounds %struct.DMGradient_userData, %struct.DMGradient_userData* %data18, i32 0, i32 0, !dbg !6264
  store %struct.ARegion* %54, %struct.ARegion** %ar43, align 8, !dbg !6265
  %55 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !6266
  %scene44 = getelementptr inbounds %struct.DMGradient_userData, %struct.DMGradient_userData* %data18, i32 0, i32 1, !dbg !6267
  store %struct.Scene* %55, %struct.Scene** %scene44, align 8, !dbg !6268
  %56 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !6269
  %data45 = getelementptr inbounds %struct.Object, %struct.Object* %56, i32 0, i32 19, !dbg !6270
  %57 = load i8*, i8** %data45, align 8, !dbg !6270
  %58 = bitcast i8* %57 to %struct.Mesh*, !dbg !6269
  %me46 = getelementptr inbounds %struct.DMGradient_userData, %struct.DMGradient_userData* %data18, i32 0, i32 2, !dbg !6271
  store %struct.Mesh* %58, %struct.Mesh** %me46, align 8, !dbg !6272
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %sco_start, i64 0, i64 0, !dbg !6273
  %sco_start47 = getelementptr inbounds %struct.DMGradient_userData, %struct.DMGradient_userData* %data18, i32 0, i32 4, !dbg !6274
  store float* %arraydecay, float** %sco_start47, align 8, !dbg !6275
  %arraydecay48 = getelementptr inbounds [2 x float], [2 x float]* %sco_end, i64 0, i64 0, !dbg !6276
  %sco_end49 = getelementptr inbounds %struct.DMGradient_userData, %struct.DMGradient_userData* %data18, i32 0, i32 5, !dbg !6277
  store float* %arraydecay48, float** %sco_end49, align 8, !dbg !6278
  %arraydecay50 = getelementptr inbounds [2 x float], [2 x float]* %sco_start, i64 0, i64 0, !dbg !6279
  %arraydecay51 = getelementptr inbounds [2 x float], [2 x float]* %sco_end, i64 0, i64 0, !dbg !6280
  %call52 = call float @len_v2v2(float* %arraydecay50, float* %arraydecay51), !dbg !6281
  %div = fdiv float 1.000000e+00, %call52, !dbg !6282
  %sco_line_div = getelementptr inbounds %struct.DMGradient_userData, %struct.DMGradient_userData* %data18, i32 0, i32 6, !dbg !6283
  store float %div, float* %sco_line_div, align 8, !dbg !6284
  %59 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !6285
  %actdef = getelementptr inbounds %struct.Object, %struct.Object* %59, i32 0, i32 97, !dbg !6286
  %60 = load i16, i16* %actdef, align 2, !dbg !6286
  %conv53 = zext i16 %60 to i32, !dbg !6285
  %sub = sub nsw i32 %conv53, 1, !dbg !6287
  %def_nr = getelementptr inbounds %struct.DMGradient_userData, %struct.DMGradient_userData* %data18, i32 0, i32 7, !dbg !6288
  store i32 %sub, i32* %def_nr, align 4, !dbg !6289
  %61 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !6290
  %editflag54 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %61, i32 0, i32 46, !dbg !6291
  %62 = load i8, i8* %editflag54, align 1, !dbg !6291
  %conv55 = zext i8 %62 to i32, !dbg !6290
  %and56 = and i32 %conv55, 40, !dbg !6292
  %conv57 = trunc i32 %and56 to i16, !dbg !6293
  %use_select = getelementptr inbounds %struct.DMGradient_userData, %struct.DMGradient_userData* %data18, i32 0, i32 11, !dbg !6294
  store i16 %conv57, i16* %use_select, align 8, !dbg !6295
  %63 = load %struct.DMGradient_vertStore*, %struct.DMGradient_vertStore** %vert_cache, align 8, !dbg !6296
  %vert_cache58 = getelementptr inbounds %struct.DMGradient_userData, %struct.DMGradient_userData* %data18, i32 0, i32 9, !dbg !6297
  store %struct.DMGradient_vertStore* %63, %struct.DMGradient_vertStore** %vert_cache58, align 8, !dbg !6298
  %vert_visit = getelementptr inbounds %struct.DMGradient_userData, %struct.DMGradient_userData* %data18, i32 0, i32 10, !dbg !6299
  store i32* null, i32** %vert_visit, align 8, !dbg !6300
  %64 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6301
  %ptr59 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %64, i32 0, i32 7, !dbg !6302
  %65 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr59, align 8, !dbg !6302
  %call60 = call i32 @RNA_enum_get(%struct.PointerRNA* %65, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.34, i64 0, i64 0)), !dbg !6303
  %conv61 = trunc i32 %call60 to i16, !dbg !6303
  %type = getelementptr inbounds %struct.DMGradient_userData, %struct.DMGradient_userData* %data18, i32 0, i32 12, !dbg !6304
  store i16 %conv61, i16* %type, align 2, !dbg !6305
  call void @llvm.dbg.declare(metadata %struct.ToolSettings** %ts, metadata !6306, metadata !DIExpression()), !dbg !6308
  %66 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6309
  %call62 = call %struct.ToolSettings* @CTX_data_tool_settings(%struct.bContext* %66), !dbg !6310
  store %struct.ToolSettings* %call62, %struct.ToolSettings** %ts, align 8, !dbg !6308
  call void @llvm.dbg.declare(metadata %struct.VPaint** %wp63, metadata !6311, metadata !DIExpression()), !dbg !6312
  %67 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !6313
  %wpaint64 = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %67, i32 0, i32 1, !dbg !6314
  %68 = load %struct.VPaint*, %struct.VPaint** %wpaint64, align 8, !dbg !6314
  store %struct.VPaint* %68, %struct.VPaint** %wp63, align 8, !dbg !6312
  call void @llvm.dbg.declare(metadata %struct.Brush** %brush, metadata !6315, metadata !DIExpression()), !dbg !6316
  %69 = load %struct.VPaint*, %struct.VPaint** %wp63, align 8, !dbg !6317
  %paint = getelementptr inbounds %struct.VPaint, %struct.VPaint* %69, i32 0, i32 0, !dbg !6318
  %call65 = call %struct.Brush* @BKE_paint_brush(%struct.Paint* %paint), !dbg !6319
  store %struct.Brush* %call65, %struct.Brush** %brush, align 8, !dbg !6316
  %70 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !6320
  %curve = getelementptr inbounds %struct.Brush, %struct.Brush* %70, i32 0, i32 2, !dbg !6321
  %71 = load %struct.CurveMapping*, %struct.CurveMapping** %curve, align 8, !dbg !6321
  call void @curvemapping_initialize(%struct.CurveMapping* %71), !dbg !6322
  %72 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !6323
  %brush66 = getelementptr inbounds %struct.DMGradient_userData, %struct.DMGradient_userData* %data18, i32 0, i32 3, !dbg !6324
  store %struct.Brush* %72, %struct.Brush** %brush66, align 8, !dbg !6325
  %73 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !6326
  %74 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !6327
  %call67 = call float @BKE_brush_weight_get(%struct.Scene* %73, %struct.Brush* %74), !dbg !6328
  %weightpaint = getelementptr inbounds %struct.DMGradient_userData, %struct.DMGradient_userData* %data18, i32 0, i32 13, !dbg !6329
  store float %call67, float* %weightpaint, align 4, !dbg !6330
  %75 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !6331
  %76 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !6332
  %regiondata = getelementptr inbounds %struct.ARegion, %struct.ARegion* %76, i32 0, i32 30, !dbg !6333
  %77 = load i8*, i8** %regiondata, align 8, !dbg !6333
  %78 = bitcast i8* %77 to %struct.RegionView3D*, !dbg !6332
  call void @ED_view3d_init_mats_rv3d(%struct.Object* %75, %struct.RegionView3D* %78), !dbg !6334
  %is_init68 = getelementptr inbounds %struct.DMGradient_userData, %struct.DMGradient_userData* %data18, i32 0, i32 8, !dbg !6335
  %79 = load i16, i16* %is_init68, align 8, !dbg !6335
  %tobool69 = icmp ne i16 %79, 0, !dbg !6337
  br i1 %tobool69, label %if.then70, label %if.else78, !dbg !6338

if.then70:                                        ; preds = %if.end42
  %80 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !6339
  %81 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !6339
  %totvert71 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %81, i32 0, i32 26, !dbg !6339
  %82 = load i32, i32* %totvert71, align 8, !dbg !6339
  %shr = ashr i32 %82, 5, !dbg !6339
  %add = add nsw i32 %shr, 1, !dbg !6339
  %conv72 = sext i32 %add to i64, !dbg !6339
  %mul73 = mul i64 %conv72, 4, !dbg !6339
  %call74 = call i8* %80(i64 %mul73, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.paint_weight_gradient_exec, i64 0, i64 0)), !dbg !6339
  %83 = bitcast i8* %call74 to i32*, !dbg !6339
  %vert_visit75 = getelementptr inbounds %struct.DMGradient_userData, %struct.DMGradient_userData* %data18, i32 0, i32 10, !dbg !6341
  store i32* %83, i32** %vert_visit75, align 8, !dbg !6342
  %84 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !6343
  %foreachMappedVert = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %84, i32 0, i32 71, !dbg !6344
  %85 = load void (%struct.DerivedMesh*, void (i8*, i32, float*, float*, i16*)*, i8*, i32)*, void (%struct.DerivedMesh*, void (i8*, i32, float*, float*, i16*)*, i8*, i32)** %foreachMappedVert, align 8, !dbg !6344
  %86 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !6345
  %87 = bitcast %struct.DMGradient_userData* %data18 to i8*, !dbg !6346
  call void %85(%struct.DerivedMesh* %86, void (i8*, i32, float*, float*, i16*)* @gradientVertInit__mapFunc, i8* %87, i32 0), !dbg !6343
  %88 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !6347
  %vert_visit76 = getelementptr inbounds %struct.DMGradient_userData, %struct.DMGradient_userData* %data18, i32 0, i32 10, !dbg !6348
  %89 = load i32*, i32** %vert_visit76, align 8, !dbg !6348
  %90 = bitcast i32* %89 to i8*, !dbg !6349
  call void %88(i8* %90), !dbg !6347
  %vert_visit77 = getelementptr inbounds %struct.DMGradient_userData, %struct.DMGradient_userData* %data18, i32 0, i32 10, !dbg !6350
  store i32* null, i32** %vert_visit77, align 8, !dbg !6351
  br label %if.end80, !dbg !6352

if.else78:                                        ; preds = %if.end42
  %91 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !6353
  %foreachMappedVert79 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %91, i32 0, i32 71, !dbg !6355
  %92 = load void (%struct.DerivedMesh*, void (i8*, i32, float*, float*, i16*)*, i8*, i32)*, void (%struct.DerivedMesh*, void (i8*, i32, float*, float*, i16*)*, i8*, i32)** %foreachMappedVert79, align 8, !dbg !6355
  %93 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !6356
  %94 = bitcast %struct.DMGradient_userData* %data18 to i8*, !dbg !6357
  call void %92(%struct.DerivedMesh* %93, void (i8*, i32, float*, float*, i16*)* @gradientVertUpdate__mapFunc, i8* %94, i32 0), !dbg !6353
  br label %if.end80

if.end80:                                         ; preds = %if.else78, %if.then70
  %95 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !6358
  %id = getelementptr inbounds %struct.Object, %struct.Object* %95, i32 0, i32 0, !dbg !6359
  call void @DAG_id_tag_update(%struct.ID* %id, i16 signext 2), !dbg !6360
  %96 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6361
  %97 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !6362
  %98 = bitcast %struct.Object* %97 to i8*, !dbg !6362
  call void @WM_event_add_notifier(%struct.bContext* %96, i32 85393408, i8* %98), !dbg !6363
  %99 = load i8, i8* %is_interactive, align 1, !dbg !6364
  %conv81 = zext i8 %99 to i32, !dbg !6364
  %cmp82 = icmp eq i32 %conv81, 0, !dbg !6366
  br i1 %cmp82, label %if.then84, label %if.end85, !dbg !6367

if.then84:                                        ; preds = %if.end80
  %100 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !6368
  %101 = load %struct.DMGradient_vertStore*, %struct.DMGradient_vertStore** %vert_cache, align 8, !dbg !6370
  %102 = bitcast %struct.DMGradient_vertStore* %101 to i8*, !dbg !6370
  call void %100(i8* %102), !dbg !6368
  br label %if.end85, !dbg !6371

if.end85:                                         ; preds = %if.then84, %if.end80
  store i32 4, i32* %retval, align 4, !dbg !6372
  br label %return, !dbg !6372

return:                                           ; preds = %if.end85, %if.then35
  %103 = load i32, i32* %retval, align 4, !dbg !6373
  ret i32 %103, !dbg !6373
}

declare dso_local void @WM_gesture_straightline_cancel(%struct.bContext*, %struct.wmOperator*) #2

declare dso_local void @WM_operator_properties_gesture_straightline(%struct.wmOperatorType*, i32) #2

declare dso_local i8* @CustomData_add_layer(%struct.CustomData*, i32, i32, i8*, i32) #2

declare dso_local void @BKE_mesh_update_customdata_pointers(%struct.Mesh*, i8 zeroext) #2

; Function Attrs: noinline nounwind uwtable
define internal void @update_tessface_data(%struct.Object* %ob, %struct.Mesh* %me) #0 !dbg !6374 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %me.addr = alloca %struct.Mesh*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !6377, metadata !DIExpression()), !dbg !6378
  store %struct.Mesh* %me, %struct.Mesh** %me.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me.addr, metadata !6379, metadata !DIExpression()), !dbg !6380
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6381
  %1 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !6383
  %call = call zeroext i8 @vertex_paint_use_tessface_check(%struct.Object* %0, %struct.Mesh* %1), !dbg !6384
  %tobool = icmp ne i8 %call, 0, !dbg !6384
  br i1 %tobool, label %if.then, label %if.else, !dbg !6385

if.then:                                          ; preds = %entry
  %2 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !6386
  %mcol = getelementptr inbounds %struct.Mesh, %struct.Mesh* %2, i32 0, i32 18, !dbg !6389
  %3 = load %struct.MCol*, %struct.MCol** %mcol, align 8, !dbg !6389
  %tobool1 = icmp ne %struct.MCol* %3, null, !dbg !6386
  br i1 %tobool1, label %lor.lhs.false, label %if.then3, !dbg !6390

lor.lhs.false:                                    ; preds = %if.then
  %4 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !6391
  %mface = getelementptr inbounds %struct.Mesh, %struct.Mesh* %4, i32 0, i32 12, !dbg !6392
  %5 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !6392
  %tobool2 = icmp ne %struct.MFace* %5, null, !dbg !6391
  br i1 %tobool2, label %if.end, label %if.then3, !dbg !6393

if.then3:                                         ; preds = %lor.lhs.false, %if.then
  %6 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !6394
  call void @BKE_mesh_tessface_calc(%struct.Mesh* %6), !dbg !6396
  br label %if.end, !dbg !6397

if.end:                                           ; preds = %if.then3, %lor.lhs.false
  br label %if.end7, !dbg !6398

if.else:                                          ; preds = %entry
  %7 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !6399
  %totface = getelementptr inbounds %struct.Mesh, %struct.Mesh* %7, i32 0, i32 28, !dbg !6402
  %8 = load i32, i32* %totface, align 8, !dbg !6402
  %tobool4 = icmp ne i32 %8, 0, !dbg !6399
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !6403

if.then5:                                         ; preds = %if.else
  %9 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !6404
  call void @BKE_mesh_tessface_clear(%struct.Mesh* %9), !dbg !6406
  br label %if.end6, !dbg !6407

if.end6:                                          ; preds = %if.then5, %if.else
  br label %if.end7

if.end7:                                          ; preds = %if.end6, %if.end
  ret void, !dbg !6408
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @vertex_paint_use_tessface_check(%struct.Object* %ob, %struct.Mesh* %me) #0 !dbg !6409 {
entry:
  %retval = alloca i8, align 1
  %ob.addr = alloca %struct.Object*, align 8
  %me.addr = alloca %struct.Mesh*, align 8
  %dm = alloca %struct.DerivedMesh*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !6412, metadata !DIExpression()), !dbg !6413
  store %struct.Mesh* %me, %struct.Mesh** %me.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me.addr, metadata !6414, metadata !DIExpression()), !dbg !6415
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm, metadata !6416, metadata !DIExpression()), !dbg !6417
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6418
  %derivedFinal = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 120, !dbg !6419
  %1 = load %struct.DerivedMesh*, %struct.DerivedMesh** %derivedFinal, align 8, !dbg !6419
  store %struct.DerivedMesh* %1, %struct.DerivedMesh** %dm, align 8, !dbg !6417
  %2 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !6420
  %tobool = icmp ne %struct.Mesh* %2, null, !dbg !6420
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !6422

land.lhs.true:                                    ; preds = %entry
  %3 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !6423
  %tobool1 = icmp ne %struct.DerivedMesh* %3, null, !dbg !6423
  br i1 %tobool1, label %if.then, label %if.end, !dbg !6424

if.then:                                          ; preds = %land.lhs.true
  %4 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !6425
  %mpoly = getelementptr inbounds %struct.Mesh, %struct.Mesh* %4, i32 0, i32 7, !dbg !6427
  %5 = load %struct.MPoly*, %struct.MPoly** %mpoly, align 8, !dbg !6427
  %6 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !6428
  %polyData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %6, i32 0, i32 4, !dbg !6429
  %call = call i8* @CustomData_get_layer(%struct.CustomData* %polyData, i32 25), !dbg !6430
  %7 = bitcast i8* %call to %struct.MPoly*, !dbg !6430
  %cmp = icmp eq %struct.MPoly* %5, %7, !dbg !6431
  %conv = zext i1 %cmp to i32, !dbg !6431
  %conv2 = trunc i32 %conv to i8, !dbg !6432
  store i8 %conv2, i8* %retval, align 1, !dbg !6433
  br label %return, !dbg !6433

if.end:                                           ; preds = %land.lhs.true, %entry
  store i8 0, i8* %retval, align 1, !dbg !6434
  br label %return, !dbg !6434

return:                                           ; preds = %if.end, %if.then
  %8 = load i8, i8* %retval, align 1, !dbg !6435
  ret i8 %8, !dbg !6435
}

declare dso_local void @BKE_mesh_tessface_calc(%struct.Mesh*) #2

declare dso_local i8* @CustomData_get_layer(%struct.CustomData*, i32) #2

declare dso_local i8* @BLI_findlink(%struct.ListBase*, i32) #2

declare dso_local void @BKE_deform_flip_side_name(i8*, i8*, i8 zeroext) #2

declare dso_local i32 @defgroup_name_index(%struct.Object*, i8*) #2

declare dso_local %struct.bDeformGroup* @BKE_defgroup_new(%struct.Object*, i8*) #2

declare dso_local i32 @BLI_countlist(%struct.ListBase*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @free_wpaint_prev(%struct.VPaint* %vp) #0 !dbg !6436 {
entry:
  %vp.addr = alloca %struct.VPaint*, align 8
  store %struct.VPaint* %vp, %struct.VPaint** %vp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VPaint** %vp.addr, metadata !6439, metadata !DIExpression()), !dbg !6440
  %0 = load %struct.VPaint*, %struct.VPaint** %vp.addr, align 8, !dbg !6441
  %wpaint_prev = getelementptr inbounds %struct.VPaint, %struct.VPaint* %0, i32 0, i32 5, !dbg !6443
  %1 = load %struct.MDeformVert*, %struct.MDeformVert** %wpaint_prev, align 8, !dbg !6443
  %tobool = icmp ne %struct.MDeformVert* %1, null, !dbg !6441
  br i1 %tobool, label %if.then, label %if.end, !dbg !6444

if.then:                                          ; preds = %entry
  %2 = load %struct.VPaint*, %struct.VPaint** %vp.addr, align 8, !dbg !6445
  %wpaint_prev1 = getelementptr inbounds %struct.VPaint, %struct.VPaint* %2, i32 0, i32 5, !dbg !6447
  %3 = load %struct.MDeformVert*, %struct.MDeformVert** %wpaint_prev1, align 8, !dbg !6447
  %4 = load %struct.VPaint*, %struct.VPaint** %vp.addr, align 8, !dbg !6448
  %tot = getelementptr inbounds %struct.VPaint, %struct.VPaint* %4, i32 0, i32 3, !dbg !6449
  %5 = load i32, i32* %tot, align 4, !dbg !6449
  call void @BKE_defvert_array_free(%struct.MDeformVert* %3, i32 %5), !dbg !6450
  %6 = load %struct.VPaint*, %struct.VPaint** %vp.addr, align 8, !dbg !6451
  %wpaint_prev2 = getelementptr inbounds %struct.VPaint, %struct.VPaint* %6, i32 0, i32 5, !dbg !6452
  store %struct.MDeformVert* null, %struct.MDeformVert** %wpaint_prev2, align 8, !dbg !6453
  %7 = load %struct.VPaint*, %struct.VPaint** %vp.addr, align 8, !dbg !6454
  %tot3 = getelementptr inbounds %struct.VPaint, %struct.VPaint* %7, i32 0, i32 3, !dbg !6455
  store i32 0, i32* %tot3, align 4, !dbg !6456
  br label %if.end, !dbg !6457

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !6458
}

declare dso_local void @BKE_defvert_array_copy(%struct.MDeformVert*, %struct.MDeformVert*, i32) #2

declare dso_local void @BKE_defvert_array_free(%struct.MDeformVert*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @divide_round_i(i32 %a, i32 %b) #0 !dbg !6459 {
entry:
  %a.addr = alloca i32, align 4
  %b.addr = alloca i32, align 4
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !6463, metadata !DIExpression()), !dbg !6464
  store i32 %b, i32* %b.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !6465, metadata !DIExpression()), !dbg !6466
  %0 = load i32, i32* %a.addr, align 4, !dbg !6467
  %mul = mul nsw i32 2, %0, !dbg !6468
  %1 = load i32, i32* %b.addr, align 4, !dbg !6469
  %add = add nsw i32 %mul, %1, !dbg !6470
  %2 = load i32, i32* %b.addr, align 4, !dbg !6471
  %mul1 = mul nsw i32 2, %2, !dbg !6472
  %div = sdiv i32 %add, %mul1, !dbg !6473
  ret i32 %div, !dbg !6474
}

; Function Attrs: noinline nounwind uwtable
define internal void @do_shared_vertex_tesscol(%struct.Mesh* %me, i8* %mfacetag) #0 !dbg !6475 {
entry:
  %me.addr = alloca %struct.Mesh*, align 8
  %mfacetag.addr = alloca i8*, align 8
  %use_face_sel = alloca i32, align 4
  %mface = alloca %struct.MFace*, align 8
  %a = alloca i32, align 4
  %scolmain = alloca i16*, align 8
  %scol = alloca i16*, align 8
  %mcol = alloca i8*, align 8
  %mftag = alloca i8*, align 8
  store %struct.Mesh* %me, %struct.Mesh** %me.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me.addr, metadata !6478, metadata !DIExpression()), !dbg !6479
  store i8* %mfacetag, i8** %mfacetag.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %mfacetag.addr, metadata !6480, metadata !DIExpression()), !dbg !6481
  call void @llvm.dbg.declare(metadata i32* %use_face_sel, metadata !6482, metadata !DIExpression()), !dbg !6483
  %0 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !6484
  %editflag = getelementptr inbounds %struct.Mesh, %struct.Mesh* %0, i32 0, i32 46, !dbg !6485
  %1 = load i8, i8* %editflag, align 1, !dbg !6485
  %conv = zext i8 %1 to i32, !dbg !6484
  %and = and i32 %conv, 8, !dbg !6486
  store i32 %and, i32* %use_face_sel, align 4, !dbg !6483
  call void @llvm.dbg.declare(metadata %struct.MFace** %mface, metadata !6487, metadata !DIExpression()), !dbg !6488
  call void @llvm.dbg.declare(metadata i32* %a, metadata !6489, metadata !DIExpression()), !dbg !6490
  call void @llvm.dbg.declare(metadata i16** %scolmain, metadata !6491, metadata !DIExpression()), !dbg !6492
  call void @llvm.dbg.declare(metadata i16** %scol, metadata !6493, metadata !DIExpression()), !dbg !6494
  call void @llvm.dbg.declare(metadata i8** %mcol, metadata !6495, metadata !DIExpression()), !dbg !6496
  call void @llvm.dbg.declare(metadata i8** %mftag, metadata !6497, metadata !DIExpression()), !dbg !6498
  %2 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !6499
  %mcol1 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %2, i32 0, i32 18, !dbg !6501
  %3 = load %struct.MCol*, %struct.MCol** %mcol1, align 8, !dbg !6501
  %cmp = icmp eq %struct.MCol* %3, null, !dbg !6502
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !6503

lor.lhs.false:                                    ; preds = %entry
  %4 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !6504
  %totvert = getelementptr inbounds %struct.Mesh, %struct.Mesh* %4, i32 0, i32 26, !dbg !6505
  %5 = load i32, i32* %totvert, align 8, !dbg !6505
  %cmp3 = icmp eq i32 %5, 0, !dbg !6506
  br i1 %cmp3, label %if.then, label %lor.lhs.false5, !dbg !6507

lor.lhs.false5:                                   ; preds = %lor.lhs.false
  %6 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !6508
  %totface = getelementptr inbounds %struct.Mesh, %struct.Mesh* %6, i32 0, i32 28, !dbg !6509
  %7 = load i32, i32* %totface, align 8, !dbg !6509
  %cmp6 = icmp eq i32 %7, 0, !dbg !6510
  br i1 %cmp6, label %if.then, label %if.end, !dbg !6511

if.then:                                          ; preds = %lor.lhs.false5, %lor.lhs.false, %entry
  br label %return, !dbg !6512

if.end:                                           ; preds = %lor.lhs.false5
  %8 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !6513
  %9 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !6514
  %totvert8 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %9, i32 0, i32 26, !dbg !6515
  %10 = load i32, i32* %totvert8, align 8, !dbg !6515
  %conv9 = sext i32 %10 to i64, !dbg !6514
  %mul = mul i64 8, %conv9, !dbg !6516
  %call = call i8* %8(i64 %mul, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.47, i64 0, i64 0)), !dbg !6513
  %11 = bitcast i8* %call to i16*, !dbg !6513
  store i16* %11, i16** %scolmain, align 8, !dbg !6517
  %12 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !6518
  %mface10 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %12, i32 0, i32 12, !dbg !6519
  %13 = load %struct.MFace*, %struct.MFace** %mface10, align 8, !dbg !6519
  store %struct.MFace* %13, %struct.MFace** %mface, align 8, !dbg !6520
  %14 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !6521
  %mcol11 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %14, i32 0, i32 18, !dbg !6522
  %15 = load %struct.MCol*, %struct.MCol** %mcol11, align 8, !dbg !6522
  %16 = bitcast %struct.MCol* %15 to i8*, !dbg !6523
  store i8* %16, i8** %mcol, align 8, !dbg !6524
  %17 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !6525
  %totface12 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %17, i32 0, i32 28, !dbg !6527
  %18 = load i32, i32* %totface12, align 8, !dbg !6527
  store i32 %18, i32* %a, align 4, !dbg !6528
  br label %for.cond, !dbg !6529

for.cond:                                         ; preds = %for.inc, %if.end
  %19 = load i32, i32* %a, align 4, !dbg !6530
  %cmp13 = icmp sgt i32 %19, 0, !dbg !6532
  br i1 %cmp13, label %for.body, label %for.end, !dbg !6533

for.body:                                         ; preds = %for.cond
  %20 = load i32, i32* %use_face_sel, align 4, !dbg !6534
  %cmp15 = icmp eq i32 %20, 0, !dbg !6537
  br i1 %cmp15, label %if.then20, label %lor.lhs.false17, !dbg !6538

lor.lhs.false17:                                  ; preds = %for.body
  %21 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !6539
  %flag = getelementptr inbounds %struct.MFace, %struct.MFace* %21, i32 0, i32 6, !dbg !6540
  %22 = load i8, i8* %flag, align 1, !dbg !6540
  %conv18 = zext i8 %22 to i32, !dbg !6539
  %and19 = and i32 %conv18, 2, !dbg !6541
  %tobool = icmp ne i32 %and19, 0, !dbg !6541
  br i1 %tobool, label %if.then20, label %if.end112, !dbg !6542

if.then20:                                        ; preds = %lor.lhs.false17, %for.body
  %23 = load i16*, i16** %scolmain, align 8, !dbg !6543
  %24 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !6545
  %v1 = getelementptr inbounds %struct.MFace, %struct.MFace* %24, i32 0, i32 0, !dbg !6546
  %25 = load i32, i32* %v1, align 4, !dbg !6546
  %mul21 = mul i32 4, %25, !dbg !6547
  %idx.ext = zext i32 %mul21 to i64, !dbg !6548
  %add.ptr = getelementptr inbounds i16, i16* %23, i64 %idx.ext, !dbg !6548
  store i16* %add.ptr, i16** %scol, align 8, !dbg !6549
  %26 = load i16*, i16** %scol, align 8, !dbg !6550
  %arrayidx = getelementptr inbounds i16, i16* %26, i64 0, !dbg !6550
  %27 = load i16, i16* %arrayidx, align 2, !dbg !6551
  %inc = add i16 %27, 1, !dbg !6551
  store i16 %inc, i16* %arrayidx, align 2, !dbg !6551
  %28 = load i8*, i8** %mcol, align 8, !dbg !6552
  %arrayidx22 = getelementptr inbounds i8, i8* %28, i64 1, !dbg !6552
  %29 = load i8, i8* %arrayidx22, align 1, !dbg !6552
  %conv23 = zext i8 %29 to i32, !dbg !6552
  %30 = load i16*, i16** %scol, align 8, !dbg !6553
  %arrayidx24 = getelementptr inbounds i16, i16* %30, i64 1, !dbg !6553
  %31 = load i16, i16* %arrayidx24, align 2, !dbg !6554
  %conv25 = sext i16 %31 to i32, !dbg !6554
  %add = add nsw i32 %conv25, %conv23, !dbg !6554
  %conv26 = trunc i32 %add to i16, !dbg !6554
  store i16 %conv26, i16* %arrayidx24, align 2, !dbg !6554
  %32 = load i8*, i8** %mcol, align 8, !dbg !6555
  %arrayidx27 = getelementptr inbounds i8, i8* %32, i64 2, !dbg !6555
  %33 = load i8, i8* %arrayidx27, align 1, !dbg !6555
  %conv28 = zext i8 %33 to i32, !dbg !6555
  %34 = load i16*, i16** %scol, align 8, !dbg !6556
  %arrayidx29 = getelementptr inbounds i16, i16* %34, i64 2, !dbg !6556
  %35 = load i16, i16* %arrayidx29, align 2, !dbg !6557
  %conv30 = sext i16 %35 to i32, !dbg !6557
  %add31 = add nsw i32 %conv30, %conv28, !dbg !6557
  %conv32 = trunc i32 %add31 to i16, !dbg !6557
  store i16 %conv32, i16* %arrayidx29, align 2, !dbg !6557
  %36 = load i8*, i8** %mcol, align 8, !dbg !6558
  %arrayidx33 = getelementptr inbounds i8, i8* %36, i64 3, !dbg !6558
  %37 = load i8, i8* %arrayidx33, align 1, !dbg !6558
  %conv34 = zext i8 %37 to i32, !dbg !6558
  %38 = load i16*, i16** %scol, align 8, !dbg !6559
  %arrayidx35 = getelementptr inbounds i16, i16* %38, i64 3, !dbg !6559
  %39 = load i16, i16* %arrayidx35, align 2, !dbg !6560
  %conv36 = sext i16 %39 to i32, !dbg !6560
  %add37 = add nsw i32 %conv36, %conv34, !dbg !6560
  %conv38 = trunc i32 %add37 to i16, !dbg !6560
  store i16 %conv38, i16* %arrayidx35, align 2, !dbg !6560
  %40 = load i16*, i16** %scolmain, align 8, !dbg !6561
  %41 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !6562
  %v2 = getelementptr inbounds %struct.MFace, %struct.MFace* %41, i32 0, i32 1, !dbg !6563
  %42 = load i32, i32* %v2, align 4, !dbg !6563
  %mul39 = mul i32 4, %42, !dbg !6564
  %idx.ext40 = zext i32 %mul39 to i64, !dbg !6565
  %add.ptr41 = getelementptr inbounds i16, i16* %40, i64 %idx.ext40, !dbg !6565
  store i16* %add.ptr41, i16** %scol, align 8, !dbg !6566
  %43 = load i16*, i16** %scol, align 8, !dbg !6567
  %arrayidx42 = getelementptr inbounds i16, i16* %43, i64 0, !dbg !6567
  %44 = load i16, i16* %arrayidx42, align 2, !dbg !6568
  %inc43 = add i16 %44, 1, !dbg !6568
  store i16 %inc43, i16* %arrayidx42, align 2, !dbg !6568
  %45 = load i8*, i8** %mcol, align 8, !dbg !6569
  %arrayidx44 = getelementptr inbounds i8, i8* %45, i64 5, !dbg !6569
  %46 = load i8, i8* %arrayidx44, align 1, !dbg !6569
  %conv45 = zext i8 %46 to i32, !dbg !6569
  %47 = load i16*, i16** %scol, align 8, !dbg !6570
  %arrayidx46 = getelementptr inbounds i16, i16* %47, i64 1, !dbg !6570
  %48 = load i16, i16* %arrayidx46, align 2, !dbg !6571
  %conv47 = sext i16 %48 to i32, !dbg !6571
  %add48 = add nsw i32 %conv47, %conv45, !dbg !6571
  %conv49 = trunc i32 %add48 to i16, !dbg !6571
  store i16 %conv49, i16* %arrayidx46, align 2, !dbg !6571
  %49 = load i8*, i8** %mcol, align 8, !dbg !6572
  %arrayidx50 = getelementptr inbounds i8, i8* %49, i64 6, !dbg !6572
  %50 = load i8, i8* %arrayidx50, align 1, !dbg !6572
  %conv51 = zext i8 %50 to i32, !dbg !6572
  %51 = load i16*, i16** %scol, align 8, !dbg !6573
  %arrayidx52 = getelementptr inbounds i16, i16* %51, i64 2, !dbg !6573
  %52 = load i16, i16* %arrayidx52, align 2, !dbg !6574
  %conv53 = sext i16 %52 to i32, !dbg !6574
  %add54 = add nsw i32 %conv53, %conv51, !dbg !6574
  %conv55 = trunc i32 %add54 to i16, !dbg !6574
  store i16 %conv55, i16* %arrayidx52, align 2, !dbg !6574
  %53 = load i8*, i8** %mcol, align 8, !dbg !6575
  %arrayidx56 = getelementptr inbounds i8, i8* %53, i64 7, !dbg !6575
  %54 = load i8, i8* %arrayidx56, align 1, !dbg !6575
  %conv57 = zext i8 %54 to i32, !dbg !6575
  %55 = load i16*, i16** %scol, align 8, !dbg !6576
  %arrayidx58 = getelementptr inbounds i16, i16* %55, i64 3, !dbg !6576
  %56 = load i16, i16* %arrayidx58, align 2, !dbg !6577
  %conv59 = sext i16 %56 to i32, !dbg !6577
  %add60 = add nsw i32 %conv59, %conv57, !dbg !6577
  %conv61 = trunc i32 %add60 to i16, !dbg !6577
  store i16 %conv61, i16* %arrayidx58, align 2, !dbg !6577
  %57 = load i16*, i16** %scolmain, align 8, !dbg !6578
  %58 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !6579
  %v3 = getelementptr inbounds %struct.MFace, %struct.MFace* %58, i32 0, i32 2, !dbg !6580
  %59 = load i32, i32* %v3, align 4, !dbg !6580
  %mul62 = mul i32 4, %59, !dbg !6581
  %idx.ext63 = zext i32 %mul62 to i64, !dbg !6582
  %add.ptr64 = getelementptr inbounds i16, i16* %57, i64 %idx.ext63, !dbg !6582
  store i16* %add.ptr64, i16** %scol, align 8, !dbg !6583
  %60 = load i16*, i16** %scol, align 8, !dbg !6584
  %arrayidx65 = getelementptr inbounds i16, i16* %60, i64 0, !dbg !6584
  %61 = load i16, i16* %arrayidx65, align 2, !dbg !6585
  %inc66 = add i16 %61, 1, !dbg !6585
  store i16 %inc66, i16* %arrayidx65, align 2, !dbg !6585
  %62 = load i8*, i8** %mcol, align 8, !dbg !6586
  %arrayidx67 = getelementptr inbounds i8, i8* %62, i64 9, !dbg !6586
  %63 = load i8, i8* %arrayidx67, align 1, !dbg !6586
  %conv68 = zext i8 %63 to i32, !dbg !6586
  %64 = load i16*, i16** %scol, align 8, !dbg !6587
  %arrayidx69 = getelementptr inbounds i16, i16* %64, i64 1, !dbg !6587
  %65 = load i16, i16* %arrayidx69, align 2, !dbg !6588
  %conv70 = sext i16 %65 to i32, !dbg !6588
  %add71 = add nsw i32 %conv70, %conv68, !dbg !6588
  %conv72 = trunc i32 %add71 to i16, !dbg !6588
  store i16 %conv72, i16* %arrayidx69, align 2, !dbg !6588
  %66 = load i8*, i8** %mcol, align 8, !dbg !6589
  %arrayidx73 = getelementptr inbounds i8, i8* %66, i64 10, !dbg !6589
  %67 = load i8, i8* %arrayidx73, align 1, !dbg !6589
  %conv74 = zext i8 %67 to i32, !dbg !6589
  %68 = load i16*, i16** %scol, align 8, !dbg !6590
  %arrayidx75 = getelementptr inbounds i16, i16* %68, i64 2, !dbg !6590
  %69 = load i16, i16* %arrayidx75, align 2, !dbg !6591
  %conv76 = sext i16 %69 to i32, !dbg !6591
  %add77 = add nsw i32 %conv76, %conv74, !dbg !6591
  %conv78 = trunc i32 %add77 to i16, !dbg !6591
  store i16 %conv78, i16* %arrayidx75, align 2, !dbg !6591
  %70 = load i8*, i8** %mcol, align 8, !dbg !6592
  %arrayidx79 = getelementptr inbounds i8, i8* %70, i64 11, !dbg !6592
  %71 = load i8, i8* %arrayidx79, align 1, !dbg !6592
  %conv80 = zext i8 %71 to i32, !dbg !6592
  %72 = load i16*, i16** %scol, align 8, !dbg !6593
  %arrayidx81 = getelementptr inbounds i16, i16* %72, i64 3, !dbg !6593
  %73 = load i16, i16* %arrayidx81, align 2, !dbg !6594
  %conv82 = sext i16 %73 to i32, !dbg !6594
  %add83 = add nsw i32 %conv82, %conv80, !dbg !6594
  %conv84 = trunc i32 %add83 to i16, !dbg !6594
  store i16 %conv84, i16* %arrayidx81, align 2, !dbg !6594
  %74 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !6595
  %v4 = getelementptr inbounds %struct.MFace, %struct.MFace* %74, i32 0, i32 3, !dbg !6597
  %75 = load i32, i32* %v4, align 4, !dbg !6597
  %tobool85 = icmp ne i32 %75, 0, !dbg !6595
  br i1 %tobool85, label %if.then86, label %if.end111, !dbg !6598

if.then86:                                        ; preds = %if.then20
  %76 = load i16*, i16** %scolmain, align 8, !dbg !6599
  %77 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !6601
  %v487 = getelementptr inbounds %struct.MFace, %struct.MFace* %77, i32 0, i32 3, !dbg !6602
  %78 = load i32, i32* %v487, align 4, !dbg !6602
  %mul88 = mul i32 4, %78, !dbg !6603
  %idx.ext89 = zext i32 %mul88 to i64, !dbg !6604
  %add.ptr90 = getelementptr inbounds i16, i16* %76, i64 %idx.ext89, !dbg !6604
  store i16* %add.ptr90, i16** %scol, align 8, !dbg !6605
  %79 = load i16*, i16** %scol, align 8, !dbg !6606
  %arrayidx91 = getelementptr inbounds i16, i16* %79, i64 0, !dbg !6606
  %80 = load i16, i16* %arrayidx91, align 2, !dbg !6607
  %inc92 = add i16 %80, 1, !dbg !6607
  store i16 %inc92, i16* %arrayidx91, align 2, !dbg !6607
  %81 = load i8*, i8** %mcol, align 8, !dbg !6608
  %arrayidx93 = getelementptr inbounds i8, i8* %81, i64 13, !dbg !6608
  %82 = load i8, i8* %arrayidx93, align 1, !dbg !6608
  %conv94 = zext i8 %82 to i32, !dbg !6608
  %83 = load i16*, i16** %scol, align 8, !dbg !6609
  %arrayidx95 = getelementptr inbounds i16, i16* %83, i64 1, !dbg !6609
  %84 = load i16, i16* %arrayidx95, align 2, !dbg !6610
  %conv96 = sext i16 %84 to i32, !dbg !6610
  %add97 = add nsw i32 %conv96, %conv94, !dbg !6610
  %conv98 = trunc i32 %add97 to i16, !dbg !6610
  store i16 %conv98, i16* %arrayidx95, align 2, !dbg !6610
  %85 = load i8*, i8** %mcol, align 8, !dbg !6611
  %arrayidx99 = getelementptr inbounds i8, i8* %85, i64 14, !dbg !6611
  %86 = load i8, i8* %arrayidx99, align 1, !dbg !6611
  %conv100 = zext i8 %86 to i32, !dbg !6611
  %87 = load i16*, i16** %scol, align 8, !dbg !6612
  %arrayidx101 = getelementptr inbounds i16, i16* %87, i64 2, !dbg !6612
  %88 = load i16, i16* %arrayidx101, align 2, !dbg !6613
  %conv102 = sext i16 %88 to i32, !dbg !6613
  %add103 = add nsw i32 %conv102, %conv100, !dbg !6613
  %conv104 = trunc i32 %add103 to i16, !dbg !6613
  store i16 %conv104, i16* %arrayidx101, align 2, !dbg !6613
  %89 = load i8*, i8** %mcol, align 8, !dbg !6614
  %arrayidx105 = getelementptr inbounds i8, i8* %89, i64 15, !dbg !6614
  %90 = load i8, i8* %arrayidx105, align 1, !dbg !6614
  %conv106 = zext i8 %90 to i32, !dbg !6614
  %91 = load i16*, i16** %scol, align 8, !dbg !6615
  %arrayidx107 = getelementptr inbounds i16, i16* %91, i64 3, !dbg !6615
  %92 = load i16, i16* %arrayidx107, align 2, !dbg !6616
  %conv108 = sext i16 %92 to i32, !dbg !6616
  %add109 = add nsw i32 %conv108, %conv106, !dbg !6616
  %conv110 = trunc i32 %add109 to i16, !dbg !6616
  store i16 %conv110, i16* %arrayidx107, align 2, !dbg !6616
  br label %if.end111, !dbg !6617

if.end111:                                        ; preds = %if.then86, %if.then20
  br label %if.end112, !dbg !6618

if.end112:                                        ; preds = %if.end111, %lor.lhs.false17
  br label %for.inc, !dbg !6619

for.inc:                                          ; preds = %if.end112
  %93 = load i32, i32* %a, align 4, !dbg !6620
  %dec = add nsw i32 %93, -1, !dbg !6620
  store i32 %dec, i32* %a, align 4, !dbg !6620
  %94 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !6621
  %incdec.ptr = getelementptr inbounds %struct.MFace, %struct.MFace* %94, i32 1, !dbg !6621
  store %struct.MFace* %incdec.ptr, %struct.MFace** %mface, align 8, !dbg !6621
  %95 = load i8*, i8** %mcol, align 8, !dbg !6622
  %add.ptr113 = getelementptr inbounds i8, i8* %95, i64 16, !dbg !6622
  store i8* %add.ptr113, i8** %mcol, align 8, !dbg !6622
  br label %for.cond, !dbg !6623, !llvm.loop !6624

for.end:                                          ; preds = %for.cond
  %96 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !6626
  %totvert114 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %96, i32 0, i32 26, !dbg !6627
  %97 = load i32, i32* %totvert114, align 8, !dbg !6627
  store i32 %97, i32* %a, align 4, !dbg !6628
  %98 = load i16*, i16** %scolmain, align 8, !dbg !6629
  store i16* %98, i16** %scol, align 8, !dbg !6630
  br label %while.cond, !dbg !6631

while.cond:                                       ; preds = %if.end143, %for.end
  %99 = load i32, i32* %a, align 4, !dbg !6632
  %dec115 = add nsw i32 %99, -1, !dbg !6632
  store i32 %dec115, i32* %a, align 4, !dbg !6632
  %tobool116 = icmp ne i32 %99, 0, !dbg !6631
  br i1 %tobool116, label %while.body, label %while.end, !dbg !6631

while.body:                                       ; preds = %while.cond
  %100 = load i16*, i16** %scol, align 8, !dbg !6633
  %arrayidx117 = getelementptr inbounds i16, i16* %100, i64 0, !dbg !6633
  %101 = load i16, i16* %arrayidx117, align 2, !dbg !6633
  %conv118 = sext i16 %101 to i32, !dbg !6633
  %cmp119 = icmp sgt i32 %conv118, 1, !dbg !6636
  br i1 %cmp119, label %if.then121, label %if.end143, !dbg !6637

if.then121:                                       ; preds = %while.body
  %102 = load i16*, i16** %scol, align 8, !dbg !6638
  %arrayidx122 = getelementptr inbounds i16, i16* %102, i64 1, !dbg !6638
  %103 = load i16, i16* %arrayidx122, align 2, !dbg !6638
  %conv123 = sext i16 %103 to i32, !dbg !6638
  %104 = load i16*, i16** %scol, align 8, !dbg !6640
  %arrayidx124 = getelementptr inbounds i16, i16* %104, i64 0, !dbg !6640
  %105 = load i16, i16* %arrayidx124, align 2, !dbg !6640
  %conv125 = sext i16 %105 to i32, !dbg !6640
  %call126 = call i32 @divide_round_i(i32 %conv123, i32 %conv125), !dbg !6641
  %conv127 = trunc i32 %call126 to i16, !dbg !6641
  %106 = load i16*, i16** %scol, align 8, !dbg !6642
  %arrayidx128 = getelementptr inbounds i16, i16* %106, i64 1, !dbg !6642
  store i16 %conv127, i16* %arrayidx128, align 2, !dbg !6643
  %107 = load i16*, i16** %scol, align 8, !dbg !6644
  %arrayidx129 = getelementptr inbounds i16, i16* %107, i64 2, !dbg !6644
  %108 = load i16, i16* %arrayidx129, align 2, !dbg !6644
  %conv130 = sext i16 %108 to i32, !dbg !6644
  %109 = load i16*, i16** %scol, align 8, !dbg !6645
  %arrayidx131 = getelementptr inbounds i16, i16* %109, i64 0, !dbg !6645
  %110 = load i16, i16* %arrayidx131, align 2, !dbg !6645
  %conv132 = sext i16 %110 to i32, !dbg !6645
  %call133 = call i32 @divide_round_i(i32 %conv130, i32 %conv132), !dbg !6646
  %conv134 = trunc i32 %call133 to i16, !dbg !6646
  %111 = load i16*, i16** %scol, align 8, !dbg !6647
  %arrayidx135 = getelementptr inbounds i16, i16* %111, i64 2, !dbg !6647
  store i16 %conv134, i16* %arrayidx135, align 2, !dbg !6648
  %112 = load i16*, i16** %scol, align 8, !dbg !6649
  %arrayidx136 = getelementptr inbounds i16, i16* %112, i64 3, !dbg !6649
  %113 = load i16, i16* %arrayidx136, align 2, !dbg !6649
  %conv137 = sext i16 %113 to i32, !dbg !6649
  %114 = load i16*, i16** %scol, align 8, !dbg !6650
  %arrayidx138 = getelementptr inbounds i16, i16* %114, i64 0, !dbg !6650
  %115 = load i16, i16* %arrayidx138, align 2, !dbg !6650
  %conv139 = sext i16 %115 to i32, !dbg !6650
  %call140 = call i32 @divide_round_i(i32 %conv137, i32 %conv139), !dbg !6651
  %conv141 = trunc i32 %call140 to i16, !dbg !6651
  %116 = load i16*, i16** %scol, align 8, !dbg !6652
  %arrayidx142 = getelementptr inbounds i16, i16* %116, i64 3, !dbg !6652
  store i16 %conv141, i16* %arrayidx142, align 2, !dbg !6653
  br label %if.end143, !dbg !6654

if.end143:                                        ; preds = %if.then121, %while.body
  %117 = load i16*, i16** %scol, align 8, !dbg !6655
  %add.ptr144 = getelementptr inbounds i16, i16* %117, i64 4, !dbg !6655
  store i16* %add.ptr144, i16** %scol, align 8, !dbg !6655
  br label %while.cond, !dbg !6631, !llvm.loop !6656

while.end:                                        ; preds = %while.cond
  %118 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !6658
  %mface145 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %118, i32 0, i32 12, !dbg !6659
  %119 = load %struct.MFace*, %struct.MFace** %mface145, align 8, !dbg !6659
  store %struct.MFace* %119, %struct.MFace** %mface, align 8, !dbg !6660
  %120 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !6661
  %mcol146 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %120, i32 0, i32 18, !dbg !6662
  %121 = load %struct.MCol*, %struct.MCol** %mcol146, align 8, !dbg !6662
  %122 = bitcast %struct.MCol* %121 to i8*, !dbg !6663
  store i8* %122, i8** %mcol, align 8, !dbg !6664
  %123 = load i8*, i8** %mfacetag.addr, align 8, !dbg !6665
  store i8* %123, i8** %mftag, align 8, !dbg !6666
  %124 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !6667
  %totface147 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %124, i32 0, i32 28, !dbg !6669
  %125 = load i32, i32* %totface147, align 8, !dbg !6669
  store i32 %125, i32* %a, align 4, !dbg !6670
  br label %for.cond148, !dbg !6671

for.cond148:                                      ; preds = %for.inc232, %while.end
  %126 = load i32, i32* %a, align 4, !dbg !6672
  %cmp149 = icmp sgt i32 %126, 0, !dbg !6674
  br i1 %cmp149, label %for.body151, label %for.end237, !dbg !6675

for.body151:                                      ; preds = %for.cond148
  %127 = load i32, i32* %use_face_sel, align 4, !dbg !6676
  %cmp152 = icmp eq i32 %127, 0, !dbg !6679
  br i1 %cmp152, label %if.then159, label %lor.lhs.false154, !dbg !6680

lor.lhs.false154:                                 ; preds = %for.body151
  %128 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !6681
  %flag155 = getelementptr inbounds %struct.MFace, %struct.MFace* %128, i32 0, i32 6, !dbg !6682
  %129 = load i8, i8* %flag155, align 1, !dbg !6682
  %conv156 = zext i8 %129 to i32, !dbg !6681
  %and157 = and i32 %conv156, 2, !dbg !6683
  %tobool158 = icmp ne i32 %and157, 0, !dbg !6683
  br i1 %tobool158, label %if.then159, label %if.end231, !dbg !6684

if.then159:                                       ; preds = %lor.lhs.false154, %for.body151
  %130 = load i8*, i8** %mftag, align 8, !dbg !6685
  %arrayidx160 = getelementptr inbounds i8, i8* %130, i64 0, !dbg !6685
  %131 = load i8, i8* %arrayidx160, align 1, !dbg !6685
  %tobool161 = icmp ne i8 %131, 0, !dbg !6685
  br i1 %tobool161, label %if.then162, label %if.end176, !dbg !6688

if.then162:                                       ; preds = %if.then159
  %132 = load i16*, i16** %scolmain, align 8, !dbg !6689
  %133 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !6691
  %v1163 = getelementptr inbounds %struct.MFace, %struct.MFace* %133, i32 0, i32 0, !dbg !6692
  %134 = load i32, i32* %v1163, align 4, !dbg !6692
  %mul164 = mul i32 4, %134, !dbg !6693
  %idx.ext165 = zext i32 %mul164 to i64, !dbg !6694
  %add.ptr166 = getelementptr inbounds i16, i16* %132, i64 %idx.ext165, !dbg !6694
  store i16* %add.ptr166, i16** %scol, align 8, !dbg !6695
  %135 = load i16*, i16** %scol, align 8, !dbg !6696
  %arrayidx167 = getelementptr inbounds i16, i16* %135, i64 1, !dbg !6696
  %136 = load i16, i16* %arrayidx167, align 2, !dbg !6696
  %conv168 = trunc i16 %136 to i8, !dbg !6696
  %137 = load i8*, i8** %mcol, align 8, !dbg !6697
  %arrayidx169 = getelementptr inbounds i8, i8* %137, i64 1, !dbg !6697
  store i8 %conv168, i8* %arrayidx169, align 1, !dbg !6698
  %138 = load i16*, i16** %scol, align 8, !dbg !6699
  %arrayidx170 = getelementptr inbounds i16, i16* %138, i64 2, !dbg !6699
  %139 = load i16, i16* %arrayidx170, align 2, !dbg !6699
  %conv171 = trunc i16 %139 to i8, !dbg !6699
  %140 = load i8*, i8** %mcol, align 8, !dbg !6700
  %arrayidx172 = getelementptr inbounds i8, i8* %140, i64 2, !dbg !6700
  store i8 %conv171, i8* %arrayidx172, align 1, !dbg !6701
  %141 = load i16*, i16** %scol, align 8, !dbg !6702
  %arrayidx173 = getelementptr inbounds i16, i16* %141, i64 3, !dbg !6702
  %142 = load i16, i16* %arrayidx173, align 2, !dbg !6702
  %conv174 = trunc i16 %142 to i8, !dbg !6702
  %143 = load i8*, i8** %mcol, align 8, !dbg !6703
  %arrayidx175 = getelementptr inbounds i8, i8* %143, i64 3, !dbg !6703
  store i8 %conv174, i8* %arrayidx175, align 1, !dbg !6704
  br label %if.end176, !dbg !6705

if.end176:                                        ; preds = %if.then162, %if.then159
  %144 = load i8*, i8** %mftag, align 8, !dbg !6706
  %arrayidx177 = getelementptr inbounds i8, i8* %144, i64 1, !dbg !6706
  %145 = load i8, i8* %arrayidx177, align 1, !dbg !6706
  %tobool178 = icmp ne i8 %145, 0, !dbg !6706
  br i1 %tobool178, label %if.then179, label %if.end193, !dbg !6708

if.then179:                                       ; preds = %if.end176
  %146 = load i16*, i16** %scolmain, align 8, !dbg !6709
  %147 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !6711
  %v2180 = getelementptr inbounds %struct.MFace, %struct.MFace* %147, i32 0, i32 1, !dbg !6712
  %148 = load i32, i32* %v2180, align 4, !dbg !6712
  %mul181 = mul i32 4, %148, !dbg !6713
  %idx.ext182 = zext i32 %mul181 to i64, !dbg !6714
  %add.ptr183 = getelementptr inbounds i16, i16* %146, i64 %idx.ext182, !dbg !6714
  store i16* %add.ptr183, i16** %scol, align 8, !dbg !6715
  %149 = load i16*, i16** %scol, align 8, !dbg !6716
  %arrayidx184 = getelementptr inbounds i16, i16* %149, i64 1, !dbg !6716
  %150 = load i16, i16* %arrayidx184, align 2, !dbg !6716
  %conv185 = trunc i16 %150 to i8, !dbg !6716
  %151 = load i8*, i8** %mcol, align 8, !dbg !6717
  %arrayidx186 = getelementptr inbounds i8, i8* %151, i64 5, !dbg !6717
  store i8 %conv185, i8* %arrayidx186, align 1, !dbg !6718
  %152 = load i16*, i16** %scol, align 8, !dbg !6719
  %arrayidx187 = getelementptr inbounds i16, i16* %152, i64 2, !dbg !6719
  %153 = load i16, i16* %arrayidx187, align 2, !dbg !6719
  %conv188 = trunc i16 %153 to i8, !dbg !6719
  %154 = load i8*, i8** %mcol, align 8, !dbg !6720
  %arrayidx189 = getelementptr inbounds i8, i8* %154, i64 6, !dbg !6720
  store i8 %conv188, i8* %arrayidx189, align 1, !dbg !6721
  %155 = load i16*, i16** %scol, align 8, !dbg !6722
  %arrayidx190 = getelementptr inbounds i16, i16* %155, i64 3, !dbg !6722
  %156 = load i16, i16* %arrayidx190, align 2, !dbg !6722
  %conv191 = trunc i16 %156 to i8, !dbg !6722
  %157 = load i8*, i8** %mcol, align 8, !dbg !6723
  %arrayidx192 = getelementptr inbounds i8, i8* %157, i64 7, !dbg !6723
  store i8 %conv191, i8* %arrayidx192, align 1, !dbg !6724
  br label %if.end193, !dbg !6725

if.end193:                                        ; preds = %if.then179, %if.end176
  %158 = load i8*, i8** %mftag, align 8, !dbg !6726
  %arrayidx194 = getelementptr inbounds i8, i8* %158, i64 2, !dbg !6726
  %159 = load i8, i8* %arrayidx194, align 1, !dbg !6726
  %tobool195 = icmp ne i8 %159, 0, !dbg !6726
  br i1 %tobool195, label %if.then196, label %if.end210, !dbg !6728

if.then196:                                       ; preds = %if.end193
  %160 = load i16*, i16** %scolmain, align 8, !dbg !6729
  %161 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !6731
  %v3197 = getelementptr inbounds %struct.MFace, %struct.MFace* %161, i32 0, i32 2, !dbg !6732
  %162 = load i32, i32* %v3197, align 4, !dbg !6732
  %mul198 = mul i32 4, %162, !dbg !6733
  %idx.ext199 = zext i32 %mul198 to i64, !dbg !6734
  %add.ptr200 = getelementptr inbounds i16, i16* %160, i64 %idx.ext199, !dbg !6734
  store i16* %add.ptr200, i16** %scol, align 8, !dbg !6735
  %163 = load i16*, i16** %scol, align 8, !dbg !6736
  %arrayidx201 = getelementptr inbounds i16, i16* %163, i64 1, !dbg !6736
  %164 = load i16, i16* %arrayidx201, align 2, !dbg !6736
  %conv202 = trunc i16 %164 to i8, !dbg !6736
  %165 = load i8*, i8** %mcol, align 8, !dbg !6737
  %arrayidx203 = getelementptr inbounds i8, i8* %165, i64 9, !dbg !6737
  store i8 %conv202, i8* %arrayidx203, align 1, !dbg !6738
  %166 = load i16*, i16** %scol, align 8, !dbg !6739
  %arrayidx204 = getelementptr inbounds i16, i16* %166, i64 2, !dbg !6739
  %167 = load i16, i16* %arrayidx204, align 2, !dbg !6739
  %conv205 = trunc i16 %167 to i8, !dbg !6739
  %168 = load i8*, i8** %mcol, align 8, !dbg !6740
  %arrayidx206 = getelementptr inbounds i8, i8* %168, i64 10, !dbg !6740
  store i8 %conv205, i8* %arrayidx206, align 1, !dbg !6741
  %169 = load i16*, i16** %scol, align 8, !dbg !6742
  %arrayidx207 = getelementptr inbounds i16, i16* %169, i64 3, !dbg !6742
  %170 = load i16, i16* %arrayidx207, align 2, !dbg !6742
  %conv208 = trunc i16 %170 to i8, !dbg !6742
  %171 = load i8*, i8** %mcol, align 8, !dbg !6743
  %arrayidx209 = getelementptr inbounds i8, i8* %171, i64 11, !dbg !6743
  store i8 %conv208, i8* %arrayidx209, align 1, !dbg !6744
  br label %if.end210, !dbg !6745

if.end210:                                        ; preds = %if.then196, %if.end193
  %172 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !6746
  %v4211 = getelementptr inbounds %struct.MFace, %struct.MFace* %172, i32 0, i32 3, !dbg !6748
  %173 = load i32, i32* %v4211, align 4, !dbg !6748
  %tobool212 = icmp ne i32 %173, 0, !dbg !6746
  br i1 %tobool212, label %land.lhs.true, label %if.end230, !dbg !6749

land.lhs.true:                                    ; preds = %if.end210
  %174 = load i8*, i8** %mftag, align 8, !dbg !6750
  %arrayidx213 = getelementptr inbounds i8, i8* %174, i64 3, !dbg !6750
  %175 = load i8, i8* %arrayidx213, align 1, !dbg !6750
  %conv214 = zext i8 %175 to i32, !dbg !6750
  %tobool215 = icmp ne i32 %conv214, 0, !dbg !6750
  br i1 %tobool215, label %if.then216, label %if.end230, !dbg !6751

if.then216:                                       ; preds = %land.lhs.true
  %176 = load i16*, i16** %scolmain, align 8, !dbg !6752
  %177 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !6754
  %v4217 = getelementptr inbounds %struct.MFace, %struct.MFace* %177, i32 0, i32 3, !dbg !6755
  %178 = load i32, i32* %v4217, align 4, !dbg !6755
  %mul218 = mul i32 4, %178, !dbg !6756
  %idx.ext219 = zext i32 %mul218 to i64, !dbg !6757
  %add.ptr220 = getelementptr inbounds i16, i16* %176, i64 %idx.ext219, !dbg !6757
  store i16* %add.ptr220, i16** %scol, align 8, !dbg !6758
  %179 = load i16*, i16** %scol, align 8, !dbg !6759
  %arrayidx221 = getelementptr inbounds i16, i16* %179, i64 1, !dbg !6759
  %180 = load i16, i16* %arrayidx221, align 2, !dbg !6759
  %conv222 = trunc i16 %180 to i8, !dbg !6759
  %181 = load i8*, i8** %mcol, align 8, !dbg !6760
  %arrayidx223 = getelementptr inbounds i8, i8* %181, i64 13, !dbg !6760
  store i8 %conv222, i8* %arrayidx223, align 1, !dbg !6761
  %182 = load i16*, i16** %scol, align 8, !dbg !6762
  %arrayidx224 = getelementptr inbounds i16, i16* %182, i64 2, !dbg !6762
  %183 = load i16, i16* %arrayidx224, align 2, !dbg !6762
  %conv225 = trunc i16 %183 to i8, !dbg !6762
  %184 = load i8*, i8** %mcol, align 8, !dbg !6763
  %arrayidx226 = getelementptr inbounds i8, i8* %184, i64 14, !dbg !6763
  store i8 %conv225, i8* %arrayidx226, align 1, !dbg !6764
  %185 = load i16*, i16** %scol, align 8, !dbg !6765
  %arrayidx227 = getelementptr inbounds i16, i16* %185, i64 3, !dbg !6765
  %186 = load i16, i16* %arrayidx227, align 2, !dbg !6765
  %conv228 = trunc i16 %186 to i8, !dbg !6765
  %187 = load i8*, i8** %mcol, align 8, !dbg !6766
  %arrayidx229 = getelementptr inbounds i8, i8* %187, i64 15, !dbg !6766
  store i8 %conv228, i8* %arrayidx229, align 1, !dbg !6767
  br label %if.end230, !dbg !6768

if.end230:                                        ; preds = %if.then216, %land.lhs.true, %if.end210
  br label %if.end231, !dbg !6769

if.end231:                                        ; preds = %if.end230, %lor.lhs.false154
  br label %for.inc232, !dbg !6770

for.inc232:                                       ; preds = %if.end231
  %188 = load i32, i32* %a, align 4, !dbg !6771
  %dec233 = add nsw i32 %188, -1, !dbg !6771
  store i32 %dec233, i32* %a, align 4, !dbg !6771
  %189 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !6772
  %incdec.ptr234 = getelementptr inbounds %struct.MFace, %struct.MFace* %189, i32 1, !dbg !6772
  store %struct.MFace* %incdec.ptr234, %struct.MFace** %mface, align 8, !dbg !6772
  %190 = load i8*, i8** %mcol, align 8, !dbg !6773
  %add.ptr235 = getelementptr inbounds i8, i8* %190, i64 16, !dbg !6773
  store i8* %add.ptr235, i8** %mcol, align 8, !dbg !6773
  %191 = load i8*, i8** %mftag, align 8, !dbg !6774
  %add.ptr236 = getelementptr inbounds i8, i8* %191, i64 4, !dbg !6774
  store i8* %add.ptr236, i8** %mftag, align 8, !dbg !6774
  br label %for.cond148, !dbg !6775, !llvm.loop !6776

for.end237:                                       ; preds = %for.cond148
  %192 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !6778
  %193 = load i16*, i16** %scolmain, align 8, !dbg !6779
  %194 = bitcast i16* %193 to i8*, !dbg !6779
  call void %192(i8* %194), !dbg !6778
  br label %return, !dbg !6780

return:                                           ; preds = %for.end237, %if.then
  ret void, !dbg !6780
}

declare dso_local void @view3d_set_viewcontext(%struct.bContext*, %struct.ViewContext*) #2

declare dso_local void @view3d_operator_needs_opengl(%struct.bContext*) #2

declare dso_local void @ED_view3d_init_mats_rv3d(%struct.Object*, %struct.RegionView3D*) #2

declare dso_local zeroext i8 @ED_mesh_pick_vert(%struct.bContext*, %struct.Object*, i32*, i32*, i32, i8 zeroext) #2

declare dso_local zeroext i8 @ED_mesh_pick_face_vert(%struct.bContext*, %struct.Object*, i32*, i32*, i32) #2

declare dso_local zeroext i8 @ED_mesh_pick_face(%struct.bContext*, %struct.Object*, i32*, i32*, i32) #2

declare dso_local void @BKE_report(%struct.ReportList*, i32, i8*) #2

declare dso_local float @defvert_find_weight(%struct.MDeformVert*, i32) #2

declare dso_local void @BKE_brush_weight_set(%struct.Scene*, %struct.Brush*, float) #2

declare dso_local void @WM_main_add_notifier(i32, i8*) #2

declare dso_local i32 @RNA_enum_get(%struct.PointerRNA*, i8*) #2

declare dso_local void @WM_event_add_notifier(%struct.bContext*, i32, i8*) #2

declare dso_local %struct.wmWindow* @CTX_wm_window(%struct.bContext*) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @weight_paint_sample_enum_itemf__helper(%struct.MDeformVert* %dvert, i32 %defbase_tot, i32* %groups) #0 !dbg !6781 {
entry:
  %dvert.addr = alloca %struct.MDeformVert*, align 8
  %defbase_tot.addr = alloca i32, align 4
  %groups.addr = alloca i32*, align 8
  %found = alloca i8, align 1
  %i = alloca i32, align 4
  %dw = alloca %struct.MDeformWeight*, align 8
  store %struct.MDeformVert* %dvert, %struct.MDeformVert** %dvert.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MDeformVert** %dvert.addr, metadata !6786, metadata !DIExpression()), !dbg !6787
  store i32 %defbase_tot, i32* %defbase_tot.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %defbase_tot.addr, metadata !6788, metadata !DIExpression()), !dbg !6789
  store i32* %groups, i32** %groups.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %groups.addr, metadata !6790, metadata !DIExpression()), !dbg !6791
  call void @llvm.dbg.declare(metadata i8* %found, metadata !6792, metadata !DIExpression()), !dbg !6793
  store i8 0, i8* %found, align 1, !dbg !6793
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6794, metadata !DIExpression()), !dbg !6795
  %0 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert.addr, align 8, !dbg !6796
  %totweight = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %0, i32 0, i32 1, !dbg !6797
  %1 = load i32, i32* %totweight, align 8, !dbg !6797
  store i32 %1, i32* %i, align 4, !dbg !6795
  call void @llvm.dbg.declare(metadata %struct.MDeformWeight** %dw, metadata !6798, metadata !DIExpression()), !dbg !6799
  %2 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert.addr, align 8, !dbg !6800
  %dw1 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %2, i32 0, i32 0, !dbg !6802
  %3 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw1, align 8, !dbg !6802
  store %struct.MDeformWeight* %3, %struct.MDeformWeight** %dw, align 8, !dbg !6803
  br label %for.cond, !dbg !6804

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load i32, i32* %i, align 4, !dbg !6805
  %cmp = icmp sgt i32 %4, 0, !dbg !6807
  br i1 %cmp, label %for.body, label %for.end, !dbg !6808

for.body:                                         ; preds = %for.cond
  %5 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !6809
  %def_nr = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %5, i32 0, i32 0, !dbg !6812
  %6 = load i32, i32* %def_nr, align 4, !dbg !6812
  %7 = load i32, i32* %defbase_tot.addr, align 4, !dbg !6813
  %cmp2 = icmp slt i32 %6, %7, !dbg !6814
  br i1 %cmp2, label %if.then, label %if.end, !dbg !6815

if.then:                                          ; preds = %for.body
  %8 = load i32*, i32** %groups.addr, align 8, !dbg !6816
  %9 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !6818
  %def_nr3 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %9, i32 0, i32 0, !dbg !6819
  %10 = load i32, i32* %def_nr3, align 4, !dbg !6819
  %idxprom = sext i32 %10 to i64, !dbg !6816
  %arrayidx = getelementptr inbounds i32, i32* %8, i64 %idxprom, !dbg !6816
  store i32 1, i32* %arrayidx, align 4, !dbg !6820
  store i8 1, i8* %found, align 1, !dbg !6821
  br label %if.end, !dbg !6822

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !6823

for.inc:                                          ; preds = %if.end
  %11 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !6824
  %incdec.ptr = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %11, i32 1, !dbg !6824
  store %struct.MDeformWeight* %incdec.ptr, %struct.MDeformWeight** %dw, align 8, !dbg !6824
  %12 = load i32, i32* %i, align 4, !dbg !6825
  %dec = add nsw i32 %12, -1, !dbg !6825
  store i32 %dec, i32* %i, align 4, !dbg !6825
  br label %for.cond, !dbg !6826, !llvm.loop !6827

for.end:                                          ; preds = %for.cond
  %13 = load i8, i8* %found, align 1, !dbg !6829
  ret i8 %13, !dbg !6830
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare dso_local void @RNA_enum_item_add(%struct.EnumPropertyItem**, i32*, %struct.EnumPropertyItem*) #2

declare dso_local void @RNA_enum_item_end(%struct.EnumPropertyItem**, i32*) #2

declare dso_local %struct.Scene* @CTX_data_scene(%struct.bContext*) #2

declare dso_local zeroext i8 @ED_object_mode_compat_set(%struct.bContext*, %struct.Object*, i32, %struct.ReportList*) #2

declare dso_local void @BKE_mesh_flush_select_from_verts(%struct.Mesh*) #2

declare dso_local void @BKE_mesh_flush_select_from_polys(%struct.Mesh*) #2

declare dso_local i32 @ED_mesh_mirror_spatial_table(%struct.Object*, %struct.BMEditMesh*, float*, i8 zeroext) #2

declare dso_local i32 @ED_mesh_mirror_topo_table(%struct.Object*, i8 zeroext) #2

declare dso_local void @paint_cursor_delete_textures() #2

; Function Attrs: noinline nounwind uwtable
define internal %struct.VPaint* @new_vpaint(i32 %wpaint) #0 !dbg !6831 {
entry:
  %wpaint.addr = alloca i32, align 4
  %vp = alloca %struct.VPaint*, align 8
  store i32 %wpaint, i32* %wpaint.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %wpaint.addr, metadata !6834, metadata !DIExpression()), !dbg !6835
  call void @llvm.dbg.declare(metadata %struct.VPaint** %vp, metadata !6836, metadata !DIExpression()), !dbg !6837
  %0 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !6838
  %call = call i8* %0(i64 72, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.50, i64 0, i64 0)), !dbg !6838
  %1 = bitcast i8* %call to %struct.VPaint*, !dbg !6838
  store %struct.VPaint* %1, %struct.VPaint** %vp, align 8, !dbg !6837
  %2 = load i32, i32* %wpaint.addr, align 4, !dbg !6839
  %tobool = icmp ne i32 %2, 0, !dbg !6840
  %3 = zext i1 %tobool to i64, !dbg !6840
  %cond = select i1 %tobool, i32 0, i32 16, !dbg !6840
  %conv = trunc i32 %cond to i16, !dbg !6840
  %4 = load %struct.VPaint*, %struct.VPaint** %vp, align 8, !dbg !6841
  %flag = getelementptr inbounds %struct.VPaint, %struct.VPaint* %4, i32 0, i32 1, !dbg !6842
  store i16 %conv, i16* %flag, align 8, !dbg !6843
  %5 = load %struct.VPaint*, %struct.VPaint** %vp, align 8, !dbg !6844
  %paint = getelementptr inbounds %struct.VPaint, %struct.VPaint* %5, i32 0, i32 0, !dbg !6845
  %flags = getelementptr inbounds %struct.Paint, %struct.Paint* %paint, i32 0, i32 4, !dbg !6846
  %6 = load i32, i32* %flags, align 4, !dbg !6847
  %or = or i32 %6, 1, !dbg !6847
  store i32 %or, i32* %flags, align 4, !dbg !6847
  %7 = load %struct.VPaint*, %struct.VPaint** %vp, align 8, !dbg !6848
  ret %struct.VPaint* %7, !dbg !6849
}

declare dso_local void @paint_cursor_start(%struct.bContext*, i32 (%struct.bContext*)*) #2

declare dso_local void @BKE_paint_init(%struct.Paint*, i8*) #2

declare dso_local zeroext i8 @ED_vgroup_sync_from_pose(%struct.Object*) #2

declare dso_local %struct.Object* @CTX_data_edit_object(%struct.bContext*) #2

declare dso_local %struct.PaintStroke* @paint_stroke_new(%struct.bContext*, %struct.wmOperator*, i8 (%struct.bContext*, float*, float*)*, i8 (%struct.bContext*, %struct.wmOperator*, float*)*, void (%struct.bContext*, %struct.PaintStroke*, %struct.PointerRNA*)*, void (%struct.bContext*, %struct.PaintStroke*, i8)*, void (%struct.bContext*, %struct.PaintStroke*)*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @wpaint_stroke_test_start(%struct.bContext* %C, %struct.wmOperator* %op, float* %UNUSED_mouse) #0 !dbg !6850 {
entry:
  %retval = alloca i8, align 1
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %UNUSED_mouse.addr = alloca float*, align 8
  %scene = alloca %struct.Scene*, align 8
  %stroke = alloca %struct.PaintStroke*, align 8
  %ts = alloca %struct.ToolSettings*, align 8
  %wp = alloca %struct.VPaint*, align 8
  %ob = alloca %struct.Object*, align 8
  %me = alloca %struct.Mesh*, align 8
  %wpd = alloca %struct.WPaintData*, align 8
  %mat = alloca [4 x [4 x float]], align 16
  %imat = alloca [4 x [4 x float]], align 16
  %dg = alloca %struct.bDeformGroup*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !6853, metadata !DIExpression()), !dbg !6854
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !6855, metadata !DIExpression()), !dbg !6856
  store float* %UNUSED_mouse, float** %UNUSED_mouse.addr, align 8
  call void @llvm.dbg.declare(metadata float** %UNUSED_mouse.addr, metadata !6857, metadata !DIExpression()), !dbg !6858
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene, metadata !6859, metadata !DIExpression()), !dbg !6860
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6861
  %call = call %struct.Scene* @CTX_data_scene(%struct.bContext* %0), !dbg !6862
  store %struct.Scene* %call, %struct.Scene** %scene, align 8, !dbg !6860
  call void @llvm.dbg.declare(metadata %struct.PaintStroke** %stroke, metadata !6863, metadata !DIExpression()), !dbg !6866
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6867
  %customdata = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %1, i32 0, i32 5, !dbg !6868
  %2 = load i8*, i8** %customdata, align 8, !dbg !6868
  %3 = bitcast i8* %2 to %struct.PaintStroke*, !dbg !6867
  store %struct.PaintStroke* %3, %struct.PaintStroke** %stroke, align 8, !dbg !6866
  call void @llvm.dbg.declare(metadata %struct.ToolSettings** %ts, metadata !6869, metadata !DIExpression()), !dbg !6870
  %4 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !6871
  %toolsettings = getelementptr inbounds %struct.Scene, %struct.Scene* %4, i32 0, i32 20, !dbg !6872
  %5 = load %struct.ToolSettings*, %struct.ToolSettings** %toolsettings, align 8, !dbg !6872
  store %struct.ToolSettings* %5, %struct.ToolSettings** %ts, align 8, !dbg !6870
  call void @llvm.dbg.declare(metadata %struct.VPaint** %wp, metadata !6873, metadata !DIExpression()), !dbg !6874
  %6 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !6875
  %wpaint = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %6, i32 0, i32 1, !dbg !6876
  %7 = load %struct.VPaint*, %struct.VPaint** %wpaint, align 8, !dbg !6876
  store %struct.VPaint* %7, %struct.VPaint** %wp, align 8, !dbg !6874
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !6877, metadata !DIExpression()), !dbg !6878
  %8 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6879
  %call1 = call %struct.Object* @CTX_data_active_object(%struct.bContext* %8), !dbg !6880
  store %struct.Object* %call1, %struct.Object** %ob, align 8, !dbg !6878
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me, metadata !6881, metadata !DIExpression()), !dbg !6882
  %9 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !6883
  %call2 = call %struct.Mesh* @BKE_mesh_from_object(%struct.Object* %9), !dbg !6884
  store %struct.Mesh* %call2, %struct.Mesh** %me, align 8, !dbg !6882
  call void @llvm.dbg.declare(metadata %struct.WPaintData** %wpd, metadata !6885, metadata !DIExpression()), !dbg !6905
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %mat, metadata !6906, metadata !DIExpression()), !dbg !6907
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %imat, metadata !6908, metadata !DIExpression()), !dbg !6909
  %10 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6910
  %11 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6912
  %call3 = call zeroext i8 @wpaint_ensure_data(%struct.bContext* %10, %struct.wmOperator* %11), !dbg !6913
  %conv = zext i8 %call3 to i32, !dbg !6913
  %cmp = icmp eq i32 %conv, 0, !dbg !6914
  br i1 %cmp, label %if.then, label %if.end, !dbg !6915

if.then:                                          ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !6916
  br label %return, !dbg !6916

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.bDeformGroup** %dg, metadata !6918, metadata !DIExpression()), !dbg !6920
  %12 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !6921
  %defbase = getelementptr inbounds %struct.Object, %struct.Object* %12, i32 0, i32 25, !dbg !6922
  %13 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !6923
  %actdef = getelementptr inbounds %struct.Object, %struct.Object* %13, i32 0, i32 97, !dbg !6924
  %14 = load i16, i16* %actdef, align 2, !dbg !6924
  %conv5 = zext i16 %14 to i32, !dbg !6923
  %sub = sub nsw i32 %conv5, 1, !dbg !6925
  %call6 = call i8* @BLI_findlink(%struct.ListBase* %defbase, i32 %sub), !dbg !6926
  %15 = bitcast i8* %call6 to %struct.bDeformGroup*, !dbg !6926
  store %struct.bDeformGroup* %15, %struct.bDeformGroup** %dg, align 8, !dbg !6920
  %16 = load %struct.bDeformGroup*, %struct.bDeformGroup** %dg, align 8, !dbg !6927
  %flag = getelementptr inbounds %struct.bDeformGroup, %struct.bDeformGroup* %16, i32 0, i32 3, !dbg !6929
  %17 = load i8, i8* %flag, align 8, !dbg !6929
  %conv7 = zext i8 %17 to i32, !dbg !6927
  %and = and i32 %conv7, 1, !dbg !6930
  %tobool = icmp ne i32 %and, 0, !dbg !6930
  br i1 %tobool, label %if.then8, label %if.end9, !dbg !6931

if.then8:                                         ; preds = %if.end
  %18 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6932
  %reports = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %18, i32 0, i32 8, !dbg !6934
  %19 = load %struct.ReportList*, %struct.ReportList** %reports, align 8, !dbg !6934
  call void @BKE_report(%struct.ReportList* %19, i32 16, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.51, i64 0, i64 0)), !dbg !6935
  store i8 0, i8* %retval, align 1, !dbg !6936
  br label %return, !dbg !6936

if.end9:                                          ; preds = %if.end
  %20 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !6937
  %call10 = call i8* %20(i64 160, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.52, i64 0, i64 0)), !dbg !6937
  %21 = bitcast i8* %call10 to %struct.WPaintData*, !dbg !6937
  store %struct.WPaintData* %21, %struct.WPaintData** %wpd, align 8, !dbg !6938
  %22 = load %struct.PaintStroke*, %struct.PaintStroke** %stroke, align 8, !dbg !6939
  %23 = load %struct.WPaintData*, %struct.WPaintData** %wpd, align 8, !dbg !6940
  %24 = bitcast %struct.WPaintData* %23 to i8*, !dbg !6940
  call void @paint_stroke_set_mode_data(%struct.PaintStroke* %22, i8* %24), !dbg !6941
  %25 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6942
  %26 = load %struct.WPaintData*, %struct.WPaintData** %wpd, align 8, !dbg !6943
  %vc = getelementptr inbounds %struct.WPaintData, %struct.WPaintData* %26, i32 0, i32 0, !dbg !6944
  call void @view3d_set_viewcontext(%struct.bContext* %25, %struct.ViewContext* %vc), !dbg !6945
  %27 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !6946
  %actdef11 = getelementptr inbounds %struct.Object, %struct.Object* %27, i32 0, i32 97, !dbg !6947
  %28 = load i16, i16* %actdef11, align 2, !dbg !6947
  %conv12 = zext i16 %28 to i32, !dbg !6946
  %sub13 = sub nsw i32 %conv12, 1, !dbg !6948
  %29 = load %struct.WPaintData*, %struct.WPaintData** %wpd, align 8, !dbg !6949
  %vgroup_active = getelementptr inbounds %struct.WPaintData, %struct.WPaintData* %29, i32 0, i32 2, !dbg !6950
  store i32 %sub13, i32* %vgroup_active, align 8, !dbg !6951
  %30 = load %struct.WPaintData*, %struct.WPaintData** %wpd, align 8, !dbg !6952
  %vgroup_mirror = getelementptr inbounds %struct.WPaintData, %struct.WPaintData* %30, i32 0, i32 3, !dbg !6953
  store i32 -1, i32* %vgroup_mirror, align 4, !dbg !6954
  %31 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !6955
  %defbase14 = getelementptr inbounds %struct.Object, %struct.Object* %31, i32 0, i32 25, !dbg !6956
  %call15 = call i32 @BLI_countlist(%struct.ListBase* %defbase14), !dbg !6957
  %32 = load %struct.WPaintData*, %struct.WPaintData** %wpd, align 8, !dbg !6958
  %defbase_tot = getelementptr inbounds %struct.WPaintData, %struct.WPaintData* %32, i32 0, i32 9, !dbg !6959
  store i32 %call15, i32* %defbase_tot, align 8, !dbg !6960
  %33 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !6961
  %34 = load %struct.WPaintData*, %struct.WPaintData** %wpd, align 8, !dbg !6962
  %defbase_tot16 = getelementptr inbounds %struct.WPaintData, %struct.WPaintData* %34, i32 0, i32 9, !dbg !6963
  %35 = load i32, i32* %defbase_tot16, align 8, !dbg !6963
  %call17 = call i8* @BKE_objdef_lock_flags_get(%struct.Object* %33, i32 %35), !dbg !6964
  %36 = load %struct.WPaintData*, %struct.WPaintData** %wpd, align 8, !dbg !6965
  %lock_flags = getelementptr inbounds %struct.WPaintData, %struct.WPaintData* %36, i32 0, i32 8, !dbg !6966
  store i8* %call17, i8** %lock_flags, align 8, !dbg !6967
  %37 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !6968
  %auto_normalize = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %37, i32 0, i32 60, !dbg !6970
  %38 = load i8, i8* %auto_normalize, align 4, !dbg !6970
  %conv18 = zext i8 %38 to i32, !dbg !6968
  %tobool19 = icmp ne i32 %conv18, 0, !dbg !6968
  br i1 %tobool19, label %if.then25, label %lor.lhs.false, !dbg !6971

lor.lhs.false:                                    ; preds = %if.end9
  %39 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !6972
  %multipaint = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %39, i32 0, i32 61, !dbg !6973
  %40 = load i8, i8* %multipaint, align 1, !dbg !6973
  %conv20 = zext i8 %40 to i32, !dbg !6972
  %tobool21 = icmp ne i32 %conv20, 0, !dbg !6972
  br i1 %tobool21, label %if.then25, label %lor.lhs.false22, !dbg !6974

lor.lhs.false22:                                  ; preds = %lor.lhs.false
  %41 = load %struct.WPaintData*, %struct.WPaintData** %wpd, align 8, !dbg !6975
  %lock_flags23 = getelementptr inbounds %struct.WPaintData, %struct.WPaintData* %41, i32 0, i32 8, !dbg !6976
  %42 = load i8*, i8** %lock_flags23, align 8, !dbg !6976
  %tobool24 = icmp ne i8* %42, null, !dbg !6975
  br i1 %tobool24, label %if.then25, label %if.end28, !dbg !6977

if.then25:                                        ; preds = %lor.lhs.false22, %lor.lhs.false, %if.end9
  %43 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !6978
  %44 = load %struct.WPaintData*, %struct.WPaintData** %wpd, align 8, !dbg !6980
  %defbase_tot26 = getelementptr inbounds %struct.WPaintData, %struct.WPaintData* %44, i32 0, i32 9, !dbg !6981
  %45 = load i32, i32* %defbase_tot26, align 8, !dbg !6981
  %call27 = call i8* @BKE_objdef_validmap_get(%struct.Object* %43, i32 %45), !dbg !6982
  %46 = load %struct.WPaintData*, %struct.WPaintData** %wpd, align 8, !dbg !6983
  %vgroup_validmap = getelementptr inbounds %struct.WPaintData, %struct.WPaintData* %46, i32 0, i32 7, !dbg !6984
  store i8* %call27, i8** %vgroup_validmap, align 8, !dbg !6985
  br label %if.end28, !dbg !6986

if.end28:                                         ; preds = %if.then25, %lor.lhs.false22
  %47 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !6987
  %48 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !6988
  %49 = load %struct.WPaintData*, %struct.WPaintData** %wpd, align 8, !dbg !6989
  %vertexcosnos = getelementptr inbounds %struct.WPaintData, %struct.WPaintData* %49, i32 0, i32 5, !dbg !6990
  %call29 = call %struct.VertProjHandle* @ED_vpaint_proj_handle_create(%struct.Scene* %47, %struct.Object* %48, %struct.DMCoNo** %vertexcosnos), !dbg !6991
  %50 = bitcast %struct.VertProjHandle* %call29 to i8*, !dbg !6991
  %51 = load %struct.WPaintData*, %struct.WPaintData** %wpd, align 8, !dbg !6992
  %vp_handle = getelementptr inbounds %struct.WPaintData, %struct.WPaintData* %51, i32 0, i32 4, !dbg !6993
  store i8* %50, i8** %vp_handle, align 8, !dbg !6994
  %52 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !6995
  %call30 = call i32* @get_indexarray(%struct.Mesh* %52), !dbg !6996
  %53 = load %struct.WPaintData*, %struct.WPaintData** %wpd, align 8, !dbg !6997
  %indexar = getelementptr inbounds %struct.WPaintData, %struct.WPaintData* %53, i32 0, i32 1, !dbg !6998
  store i32* %call30, i32** %indexar, align 8, !dbg !6999
  %54 = load %struct.VPaint*, %struct.VPaint** %wp, align 8, !dbg !7000
  %55 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !7001
  %dvert = getelementptr inbounds %struct.Mesh, %struct.Mesh* %55, i32 0, i32 17, !dbg !7002
  %56 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert, align 8, !dbg !7002
  %57 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !7003
  %totvert = getelementptr inbounds %struct.Mesh, %struct.Mesh* %57, i32 0, i32 26, !dbg !7004
  %58 = load i32, i32* %totvert, align 8, !dbg !7004
  call void @copy_wpaint_prev(%struct.VPaint* %54, %struct.MDeformVert* %56, i32 %58), !dbg !7005
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 0, !dbg !7006
  %59 = load %struct.WPaintData*, %struct.WPaintData** %wpd, align 8, !dbg !7007
  %vc31 = getelementptr inbounds %struct.WPaintData, %struct.WPaintData* %59, i32 0, i32 0, !dbg !7008
  %rv3d = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %vc31, i32 0, i32 5, !dbg !7009
  %60 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d, align 8, !dbg !7009
  %viewmat = getelementptr inbounds %struct.RegionView3D, %struct.RegionView3D* %60, i32 0, i32 1, !dbg !7010
  %arraydecay32 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %viewmat, i64 0, i64 0, !dbg !7007
  %61 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !7011
  %obmat = getelementptr inbounds %struct.Object, %struct.Object* %61, i32 0, i32 47, !dbg !7012
  %arraydecay33 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat, i64 0, i64 0, !dbg !7011
  call void @mul_m4_m4m4([4 x float]* %arraydecay, [4 x float]* %arraydecay32, [4 x float]* %arraydecay33), !dbg !7013
  %arraydecay34 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat, i64 0, i64 0, !dbg !7014
  %arraydecay35 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 0, !dbg !7015
  %call36 = call zeroext i8 @invert_m4_m4([4 x float]* %arraydecay34, [4 x float]* %arraydecay35), !dbg !7016
  %62 = load %struct.WPaintData*, %struct.WPaintData** %wpd, align 8, !dbg !7017
  %wpimat = getelementptr inbounds %struct.WPaintData, %struct.WPaintData* %62, i32 0, i32 6, !dbg !7018
  %arraydecay37 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %wpimat, i64 0, i64 0, !dbg !7017
  %arraydecay38 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat, i64 0, i64 0, !dbg !7019
  call void @copy_m3_m4([3 x float]* %arraydecay37, [4 x float]* %arraydecay38), !dbg !7020
  %63 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !7021
  %editflag = getelementptr inbounds %struct.Mesh, %struct.Mesh* %63, i32 0, i32 46, !dbg !7023
  %64 = load i8, i8* %editflag, align 1, !dbg !7023
  %conv39 = zext i8 %64 to i32, !dbg !7021
  %and40 = and i32 %conv39, 1, !dbg !7024
  %tobool41 = icmp ne i32 %and40, 0, !dbg !7024
  br i1 %tobool41, label %if.then42, label %if.end46, !dbg !7025

if.then42:                                        ; preds = %if.end28
  %65 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !7026
  %66 = load %struct.WPaintData*, %struct.WPaintData** %wpd, align 8, !dbg !7028
  %vgroup_active43 = getelementptr inbounds %struct.WPaintData, %struct.WPaintData* %66, i32 0, i32 2, !dbg !7029
  %67 = load i32, i32* %vgroup_active43, align 8, !dbg !7029
  %call44 = call i32 @wpaint_mirror_vgroup_ensure(%struct.Object* %65, i32 %67), !dbg !7030
  %68 = load %struct.WPaintData*, %struct.WPaintData** %wpd, align 8, !dbg !7031
  %vgroup_mirror45 = getelementptr inbounds %struct.WPaintData, %struct.WPaintData* %68, i32 0, i32 3, !dbg !7032
  store i32 %call44, i32* %vgroup_mirror45, align 4, !dbg !7033
  br label %if.end46, !dbg !7034

if.end46:                                         ; preds = %if.then42, %if.end28
  store i8 1, i8* %retval, align 1, !dbg !7035
  br label %return, !dbg !7035

return:                                           ; preds = %if.end46, %if.then8, %if.then
  %69 = load i8, i8* %retval, align 1, !dbg !7036
  ret i8 %69, !dbg !7036
}

; Function Attrs: noinline nounwind uwtable
define internal void @wpaint_stroke_update_step(%struct.bContext* %C, %struct.PaintStroke* %stroke, %struct.PointerRNA* %itemptr) #0 !dbg !7037 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %stroke.addr = alloca %struct.PaintStroke*, align 8
  %itemptr.addr = alloca %struct.PointerRNA*, align 8
  %scene = alloca %struct.Scene*, align 8
  %ts = alloca %struct.ToolSettings*, align 8
  %wp = alloca %struct.VPaint*, align 8
  %brush = alloca %struct.Brush*, align 8
  %wpd = alloca %struct.WPaintData*, align 8
  %vc = alloca %struct.ViewContext*, align 8
  %ob = alloca %struct.Object*, align 8
  %me = alloca %struct.Mesh*, align 8
  %mat = alloca [4 x [4 x float]], align 16
  %paintweight = alloca float, align 4
  %indexar = alloca i32*, align 8
  %totw = alloca float, align 4
  %index = alloca i32, align 4
  %totindex = alloca i32, align 4
  %alpha = alloca float, align 4
  %mval = alloca [2 x float], align 4
  %use_vert_sel = alloca i8, align 1
  %use_face_sel = alloca i8, align 1
  %use_depth = alloca i8, align 1
  %dw_func = alloca %struct.MDeformWeight* (%struct.MDeformVert*, i32)*, align 8
  %pressure = alloca float, align 4
  %brush_size_pressure = alloca float, align 4
  %brush_alpha_value = alloca float, align 4
  %brush_alpha_pressure = alloca float, align 4
  %wpi = alloca %struct.WeightPaintInfo, align 8
  %editflag_prev = alloca i8, align 1
  %mpoly = alloca %struct.MPoly*, align 8
  %mp = alloca %struct.MPoly*, align 8
  %mpoly165 = alloca %struct.MPoly*, align 8
  %ml = alloca %struct.MLoop*, align 8
  %i = alloca i32, align 4
  %vidx = alloca i32, align 4
  %fac = alloca float, align 4
  %dw = alloca %struct.MDeformWeight*, align 8
  %totvert = alloca i32, align 4
  %i253 = alloca i32, align 4
  %vidx298 = alloca i32, align 4
  %fac299 = alloca float, align 4
  %dw310 = alloca %struct.MDeformWeight*, align 8
  %mpoly353 = alloca %struct.MPoly*, align 8
  %ml360 = alloca %struct.MLoop*, align 8
  %i365 = alloca i32, align 4
  %vidx371 = alloca i32, align 4
  %totvert402 = alloca i32, align 4
  %i404 = alloca i32, align 4
  %vidx409 = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !7040, metadata !DIExpression()), !dbg !7041
  store %struct.PaintStroke* %stroke, %struct.PaintStroke** %stroke.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PaintStroke** %stroke.addr, metadata !7042, metadata !DIExpression()), !dbg !7043
  store %struct.PointerRNA* %itemptr, %struct.PointerRNA** %itemptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %itemptr.addr, metadata !7044, metadata !DIExpression()), !dbg !7045
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene, metadata !7046, metadata !DIExpression()), !dbg !7047
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7048
  %call = call %struct.Scene* @CTX_data_scene(%struct.bContext* %0), !dbg !7049
  store %struct.Scene* %call, %struct.Scene** %scene, align 8, !dbg !7047
  call void @llvm.dbg.declare(metadata %struct.ToolSettings** %ts, metadata !7050, metadata !DIExpression()), !dbg !7051
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7052
  %call1 = call %struct.ToolSettings* @CTX_data_tool_settings(%struct.bContext* %1), !dbg !7053
  store %struct.ToolSettings* %call1, %struct.ToolSettings** %ts, align 8, !dbg !7051
  call void @llvm.dbg.declare(metadata %struct.VPaint** %wp, metadata !7054, metadata !DIExpression()), !dbg !7055
  %2 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !7056
  %wpaint = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %2, i32 0, i32 1, !dbg !7057
  %3 = load %struct.VPaint*, %struct.VPaint** %wpaint, align 8, !dbg !7057
  store %struct.VPaint* %3, %struct.VPaint** %wp, align 8, !dbg !7055
  call void @llvm.dbg.declare(metadata %struct.Brush** %brush, metadata !7058, metadata !DIExpression()), !dbg !7059
  %4 = load %struct.VPaint*, %struct.VPaint** %wp, align 8, !dbg !7060
  %paint = getelementptr inbounds %struct.VPaint, %struct.VPaint* %4, i32 0, i32 0, !dbg !7061
  %call2 = call %struct.Brush* @BKE_paint_brush(%struct.Paint* %paint), !dbg !7062
  store %struct.Brush* %call2, %struct.Brush** %brush, align 8, !dbg !7059
  call void @llvm.dbg.declare(metadata %struct.WPaintData** %wpd, metadata !7063, metadata !DIExpression()), !dbg !7064
  %5 = load %struct.PaintStroke*, %struct.PaintStroke** %stroke.addr, align 8, !dbg !7065
  %call3 = call i8* @paint_stroke_mode_data(%struct.PaintStroke* %5), !dbg !7066
  %6 = bitcast i8* %call3 to %struct.WPaintData*, !dbg !7066
  store %struct.WPaintData* %6, %struct.WPaintData** %wpd, align 8, !dbg !7064
  call void @llvm.dbg.declare(metadata %struct.ViewContext** %vc, metadata !7067, metadata !DIExpression()), !dbg !7069
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !7070, metadata !DIExpression()), !dbg !7071
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me, metadata !7072, metadata !DIExpression()), !dbg !7073
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %mat, metadata !7074, metadata !DIExpression()), !dbg !7075
  call void @llvm.dbg.declare(metadata float* %paintweight, metadata !7076, metadata !DIExpression()), !dbg !7077
  call void @llvm.dbg.declare(metadata i32** %indexar, metadata !7078, metadata !DIExpression()), !dbg !7079
  call void @llvm.dbg.declare(metadata float* %totw, metadata !7080, metadata !DIExpression()), !dbg !7081
  call void @llvm.dbg.declare(metadata i32* %index, metadata !7082, metadata !DIExpression()), !dbg !7083
  call void @llvm.dbg.declare(metadata i32* %totindex, metadata !7084, metadata !DIExpression()), !dbg !7085
  call void @llvm.dbg.declare(metadata float* %alpha, metadata !7086, metadata !DIExpression()), !dbg !7087
  call void @llvm.dbg.declare(metadata [2 x float]* %mval, metadata !7088, metadata !DIExpression()), !dbg !7089
  call void @llvm.dbg.declare(metadata i8* %use_vert_sel, metadata !7090, metadata !DIExpression()), !dbg !7091
  call void @llvm.dbg.declare(metadata i8* %use_face_sel, metadata !7092, metadata !DIExpression()), !dbg !7093
  call void @llvm.dbg.declare(metadata i8* %use_depth, metadata !7094, metadata !DIExpression()), !dbg !7095
  call void @llvm.dbg.declare(metadata %struct.MDeformWeight* (%struct.MDeformVert*, i32)** %dw_func, metadata !7096, metadata !DIExpression()), !dbg !7097
  %7 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !7098
  %vertexpaint_tool = getelementptr inbounds %struct.Brush, %struct.Brush* %7, i32 0, i32 35, !dbg !7099
  %8 = load i8, i8* %vertexpaint_tool, align 1, !dbg !7099
  %conv = zext i8 %8 to i32, !dbg !7098
  %cmp = icmp eq i32 %conv, 4, !dbg !7100
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !7101

cond.true:                                        ; preds = %entry
  %9 = load %struct.VPaint*, %struct.VPaint** %wp, align 8, !dbg !7102
  %flag = getelementptr inbounds %struct.VPaint, %struct.VPaint* %9, i32 0, i32 1, !dbg !7103
  %10 = load i16, i16* %flag, align 8, !dbg !7103
  %conv5 = sext i16 %10 to i32, !dbg !7102
  %and = and i32 %conv5, 128, !dbg !7104
  %tobool = icmp ne i32 %and, 0, !dbg !7105
  %11 = zext i1 %tobool to i64, !dbg !7105
  %cond = select i1 %tobool, %struct.MDeformWeight* (%struct.MDeformVert*, i32)* @defvert_find_index, %struct.MDeformWeight* (%struct.MDeformVert*, i32)* @defvert_verify_index, !dbg !7105
  br label %cond.end, !dbg !7101

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !7101

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond6 = phi %struct.MDeformWeight* (%struct.MDeformVert*, i32)* [ %cond, %cond.true ], [ null, %cond.false ], !dbg !7101
  store %struct.MDeformWeight* (%struct.MDeformVert*, i32)* %cond6, %struct.MDeformWeight* (%struct.MDeformVert*, i32)** %dw_func, align 8, !dbg !7097
  call void @llvm.dbg.declare(metadata float* %pressure, metadata !7106, metadata !DIExpression()), !dbg !7107
  %12 = load %struct.PointerRNA*, %struct.PointerRNA** %itemptr.addr, align 8, !dbg !7108
  %call7 = call float @RNA_float_get(%struct.PointerRNA* %12, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.55, i64 0, i64 0)), !dbg !7109
  store float %call7, float* %pressure, align 4, !dbg !7107
  call void @llvm.dbg.declare(metadata float* %brush_size_pressure, metadata !7110, metadata !DIExpression()), !dbg !7111
  %13 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !7112
  %14 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !7113
  %call8 = call i32 @BKE_brush_size_get(%struct.Scene* %13, %struct.Brush* %14), !dbg !7114
  %conv9 = sitofp i32 %call8 to float, !dbg !7114
  %15 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !7115
  %16 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !7116
  %call10 = call i32 @BKE_brush_use_size_pressure(%struct.Scene* %15, %struct.Brush* %16), !dbg !7117
  %tobool11 = icmp ne i32 %call10, 0, !dbg !7117
  br i1 %tobool11, label %cond.true12, label %cond.false13, !dbg !7117

cond.true12:                                      ; preds = %cond.end
  %17 = load float, float* %pressure, align 4, !dbg !7118
  br label %cond.end14, !dbg !7117

cond.false13:                                     ; preds = %cond.end
  br label %cond.end14, !dbg !7117

cond.end14:                                       ; preds = %cond.false13, %cond.true12
  %cond15 = phi float [ %17, %cond.true12 ], [ 1.000000e+00, %cond.false13 ], !dbg !7117
  %mul = fmul float %conv9, %cond15, !dbg !7119
  store float %mul, float* %brush_size_pressure, align 4, !dbg !7111
  call void @llvm.dbg.declare(metadata float* %brush_alpha_value, metadata !7120, metadata !DIExpression()), !dbg !7121
  %18 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !7122
  %19 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !7123
  %call16 = call float @BKE_brush_alpha_get(%struct.Scene* %18, %struct.Brush* %19), !dbg !7124
  store float %call16, float* %brush_alpha_value, align 4, !dbg !7121
  call void @llvm.dbg.declare(metadata float* %brush_alpha_pressure, metadata !7125, metadata !DIExpression()), !dbg !7126
  %20 = load float, float* %brush_alpha_value, align 4, !dbg !7127
  %21 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !7128
  %22 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !7129
  %call17 = call i32 @BKE_brush_use_alpha_pressure(%struct.Scene* %21, %struct.Brush* %22), !dbg !7130
  %tobool18 = icmp ne i32 %call17, 0, !dbg !7130
  br i1 %tobool18, label %cond.true19, label %cond.false20, !dbg !7130

cond.true19:                                      ; preds = %cond.end14
  %23 = load float, float* %pressure, align 4, !dbg !7131
  br label %cond.end21, !dbg !7130

cond.false20:                                     ; preds = %cond.end14
  br label %cond.end21, !dbg !7130

cond.end21:                                       ; preds = %cond.false20, %cond.true19
  %cond22 = phi float [ %23, %cond.true19 ], [ 1.000000e+00, %cond.false20 ], !dbg !7130
  %mul23 = fmul float %20, %cond22, !dbg !7132
  store float %mul23, float* %brush_alpha_pressure, align 4, !dbg !7126
  call void @llvm.dbg.declare(metadata %struct.WeightPaintInfo* %wpi, metadata !7133, metadata !DIExpression()), !dbg !7149
  %24 = load %struct.WPaintData*, %struct.WPaintData** %wpd, align 8, !dbg !7150
  %cmp24 = icmp eq %struct.WPaintData* %24, null, !dbg !7152
  br i1 %cmp24, label %if.then, label %if.end, !dbg !7153

if.then:                                          ; preds = %cond.end21
  %25 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7154
  %call26 = call %struct.ARegion* @CTX_wm_region(%struct.bContext* %25), !dbg !7156
  call void @ED_region_tag_redraw(%struct.ARegion* %call26), !dbg !7157
  br label %return, !dbg !7158

if.end:                                           ; preds = %cond.end21
  %26 = load %struct.WPaintData*, %struct.WPaintData** %wpd, align 8, !dbg !7159
  %vc27 = getelementptr inbounds %struct.WPaintData, %struct.WPaintData* %26, i32 0, i32 0, !dbg !7160
  store %struct.ViewContext* %vc27, %struct.ViewContext** %vc, align 8, !dbg !7161
  %27 = load %struct.ViewContext*, %struct.ViewContext** %vc, align 8, !dbg !7162
  %obact = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %27, i32 0, i32 1, !dbg !7163
  %28 = load %struct.Object*, %struct.Object** %obact, align 8, !dbg !7163
  store %struct.Object* %28, %struct.Object** %ob, align 8, !dbg !7164
  %29 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !7165
  %data = getelementptr inbounds %struct.Object, %struct.Object* %29, i32 0, i32 19, !dbg !7166
  %30 = load i8*, i8** %data, align 8, !dbg !7166
  %31 = bitcast i8* %30 to %struct.Mesh*, !dbg !7165
  store %struct.Mesh* %31, %struct.Mesh** %me, align 8, !dbg !7167
  %32 = load %struct.WPaintData*, %struct.WPaintData** %wpd, align 8, !dbg !7168
  %indexar28 = getelementptr inbounds %struct.WPaintData, %struct.WPaintData* %32, i32 0, i32 1, !dbg !7169
  %33 = load i32*, i32** %indexar28, align 8, !dbg !7169
  store i32* %33, i32** %indexar, align 8, !dbg !7170
  %34 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7171
  call void @view3d_operator_needs_opengl(%struct.bContext* %34), !dbg !7172
  %35 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !7173
  %36 = load %struct.ViewContext*, %struct.ViewContext** %vc, align 8, !dbg !7174
  %rv3d = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %36, i32 0, i32 5, !dbg !7175
  %37 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d, align 8, !dbg !7175
  call void @ED_view3d_init_mats_rv3d(%struct.Object* %35, %struct.RegionView3D* %37), !dbg !7176
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 0, !dbg !7177
  %38 = load %struct.ViewContext*, %struct.ViewContext** %vc, align 8, !dbg !7178
  %rv3d29 = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %38, i32 0, i32 5, !dbg !7179
  %39 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d29, align 8, !dbg !7179
  %persmat = getelementptr inbounds %struct.RegionView3D, %struct.RegionView3D* %39, i32 0, i32 3, !dbg !7180
  %arraydecay30 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %persmat, i64 0, i64 0, !dbg !7178
  %40 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !7181
  %obmat = getelementptr inbounds %struct.Object, %struct.Object* %40, i32 0, i32 47, !dbg !7182
  %arraydecay31 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat, i64 0, i64 0, !dbg !7181
  call void @mul_m4_m4m4([4 x float]* %arraydecay, [4 x float]* %arraydecay30, [4 x float]* %arraydecay31), !dbg !7183
  %41 = load %struct.PointerRNA*, %struct.PointerRNA** %itemptr.addr, align 8, !dbg !7184
  %arraydecay32 = getelementptr inbounds [2 x float], [2 x float]* %mval, i64 0, i64 0, !dbg !7185
  call void @RNA_float_get_array(%struct.PointerRNA* %41, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.56, i64 0, i64 0), float* %arraydecay32), !dbg !7186
  %42 = load %struct.WPaintData*, %struct.WPaintData** %wpd, align 8, !dbg !7187
  %defbase_tot = getelementptr inbounds %struct.WPaintData, %struct.WPaintData* %42, i32 0, i32 9, !dbg !7188
  %43 = load i32, i32* %defbase_tot, align 8, !dbg !7188
  %defbase_tot33 = getelementptr inbounds %struct.WeightPaintInfo, %struct.WeightPaintInfo* %wpi, i32 0, i32 0, !dbg !7189
  store i32 %43, i32* %defbase_tot33, align 8, !dbg !7190
  %44 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !7191
  %defbase_tot34 = getelementptr inbounds %struct.WeightPaintInfo, %struct.WeightPaintInfo* %wpi, i32 0, i32 0, !dbg !7192
  %45 = load i32, i32* %defbase_tot34, align 8, !dbg !7192
  %defbase_tot_sel = getelementptr inbounds %struct.WeightPaintInfo, %struct.WeightPaintInfo* %wpi, i32 0, i32 1, !dbg !7193
  %call35 = call i8* @BKE_objdef_selected_get(%struct.Object* %44, i32 %45, i32* %defbase_tot_sel), !dbg !7194
  %defbase_sel = getelementptr inbounds %struct.WeightPaintInfo, %struct.WeightPaintInfo* %wpi, i32 0, i32 6, !dbg !7195
  store i8* %call35, i8** %defbase_sel, align 8, !dbg !7196
  %defbase_tot_sel36 = getelementptr inbounds %struct.WeightPaintInfo, %struct.WeightPaintInfo* %wpi, i32 0, i32 1, !dbg !7197
  %46 = load i32, i32* %defbase_tot_sel36, align 4, !dbg !7197
  %cmp37 = icmp eq i32 %46, 0, !dbg !7199
  br i1 %cmp37, label %land.lhs.true, label %if.end44, !dbg !7200

land.lhs.true:                                    ; preds = %if.end
  %47 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !7201
  %actdef = getelementptr inbounds %struct.Object, %struct.Object* %47, i32 0, i32 97, !dbg !7202
  %48 = load i16, i16* %actdef, align 2, !dbg !7202
  %conv39 = zext i16 %48 to i32, !dbg !7201
  %cmp40 = icmp sgt i32 %conv39, 0, !dbg !7203
  br i1 %cmp40, label %if.then42, label %if.end44, !dbg !7204

if.then42:                                        ; preds = %land.lhs.true
  %defbase_tot_sel43 = getelementptr inbounds %struct.WeightPaintInfo, %struct.WeightPaintInfo* %wpi, i32 0, i32 1, !dbg !7205
  store i32 1, i32* %defbase_tot_sel43, align 4, !dbg !7207
  br label %if.end44, !dbg !7208

if.end44:                                         ; preds = %if.then42, %land.lhs.true, %if.end
  %defbase_tot45 = getelementptr inbounds %struct.WeightPaintInfo, %struct.WeightPaintInfo* %wpi, i32 0, i32 0, !dbg !7209
  %49 = load i32, i32* %defbase_tot45, align 8, !dbg !7209
  %defbase_tot_sel46 = getelementptr inbounds %struct.WeightPaintInfo, %struct.WeightPaintInfo* %wpi, i32 0, i32 1, !dbg !7210
  %50 = load i32, i32* %defbase_tot_sel46, align 4, !dbg !7210
  %sub = sub nsw i32 %49, %50, !dbg !7211
  %defbase_tot_unsel = getelementptr inbounds %struct.WeightPaintInfo, %struct.WeightPaintInfo* %wpi, i32 0, i32 2, !dbg !7212
  store i32 %sub, i32* %defbase_tot_unsel, align 8, !dbg !7213
  %51 = load %struct.WPaintData*, %struct.WPaintData** %wpd, align 8, !dbg !7214
  %vgroup_active = getelementptr inbounds %struct.WPaintData, %struct.WPaintData* %51, i32 0, i32 2, !dbg !7215
  %52 = load i32, i32* %vgroup_active, align 8, !dbg !7215
  %vgroup_active47 = getelementptr inbounds %struct.WeightPaintInfo, %struct.WeightPaintInfo* %wpi, i32 0, i32 3, !dbg !7216
  store i32 %52, i32* %vgroup_active47, align 4, !dbg !7217
  %53 = load %struct.WPaintData*, %struct.WPaintData** %wpd, align 8, !dbg !7218
  %vgroup_mirror = getelementptr inbounds %struct.WPaintData, %struct.WPaintData* %53, i32 0, i32 3, !dbg !7219
  %54 = load i32, i32* %vgroup_mirror, align 4, !dbg !7219
  %vgroup_mirror48 = getelementptr inbounds %struct.WeightPaintInfo, %struct.WeightPaintInfo* %wpi, i32 0, i32 4, !dbg !7220
  store i32 %54, i32* %vgroup_mirror48, align 8, !dbg !7221
  %55 = load %struct.WPaintData*, %struct.WPaintData** %wpd, align 8, !dbg !7222
  %lock_flags = getelementptr inbounds %struct.WPaintData, %struct.WPaintData* %55, i32 0, i32 8, !dbg !7223
  %56 = load i8*, i8** %lock_flags, align 8, !dbg !7223
  %lock_flags49 = getelementptr inbounds %struct.WeightPaintInfo, %struct.WeightPaintInfo* %wpi, i32 0, i32 5, !dbg !7224
  store i8* %56, i8** %lock_flags49, align 8, !dbg !7225
  %57 = load %struct.WPaintData*, %struct.WPaintData** %wpd, align 8, !dbg !7226
  %vgroup_validmap = getelementptr inbounds %struct.WPaintData, %struct.WPaintData* %57, i32 0, i32 7, !dbg !7227
  %58 = load i8*, i8** %vgroup_validmap, align 8, !dbg !7227
  %vgroup_validmap50 = getelementptr inbounds %struct.WeightPaintInfo, %struct.WeightPaintInfo* %wpi, i32 0, i32 7, !dbg !7228
  store i8* %58, i8** %vgroup_validmap50, align 8, !dbg !7229
  %59 = load %struct.PointerRNA*, %struct.PointerRNA** %itemptr.addr, align 8, !dbg !7230
  %call51 = call i32 @RNA_boolean_get(%struct.PointerRNA* %59, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.57, i64 0, i64 0)), !dbg !7231
  %conv52 = trunc i32 %call51 to i8, !dbg !7231
  %do_flip = getelementptr inbounds %struct.WeightPaintInfo, %struct.WeightPaintInfo* %wpi, i32 0, i32 8, !dbg !7232
  store i8 %conv52, i8* %do_flip, align 8, !dbg !7233
  %60 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !7234
  %multipaint = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %60, i32 0, i32 61, !dbg !7235
  %61 = load i8, i8* %multipaint, align 1, !dbg !7235
  %conv53 = zext i8 %61 to i32, !dbg !7234
  %cmp54 = icmp ne i32 %conv53, 0, !dbg !7236
  %conv55 = zext i1 %cmp54 to i32, !dbg !7236
  %conv56 = trunc i32 %conv55 to i8, !dbg !7237
  %do_multipaint = getelementptr inbounds %struct.WeightPaintInfo, %struct.WeightPaintInfo* %wpi, i32 0, i32 9, !dbg !7238
  store i8 %conv56, i8* %do_multipaint, align 1, !dbg !7239
  %62 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !7240
  %auto_normalize = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %62, i32 0, i32 60, !dbg !7241
  %63 = load i8, i8* %auto_normalize, align 4, !dbg !7241
  %conv57 = zext i8 %63 to i32, !dbg !7240
  %cmp58 = icmp ne i32 %conv57, 0, !dbg !7242
  br i1 %cmp58, label %land.rhs, label %land.end, !dbg !7243

land.rhs:                                         ; preds = %if.end44
  %vgroup_validmap60 = getelementptr inbounds %struct.WeightPaintInfo, %struct.WeightPaintInfo* %wpi, i32 0, i32 7, !dbg !7244
  %64 = load i8*, i8** %vgroup_validmap60, align 8, !dbg !7244
  %cmp61 = icmp ne i8* %64, null, !dbg !7245
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end44
  %65 = phi i1 [ false, %if.end44 ], [ %cmp61, %land.rhs ], !dbg !7246
  %land.ext = zext i1 %65 to i32, !dbg !7243
  %conv63 = trunc i32 %land.ext to i8, !dbg !7247
  %do_auto_normalize = getelementptr inbounds %struct.WeightPaintInfo, %struct.WeightPaintInfo* %wpi, i32 0, i32 10, !dbg !7248
  store i8 %conv63, i8* %do_auto_normalize, align 2, !dbg !7249
  %66 = load float, float* %brush_alpha_value, align 4, !dbg !7250
  %brush_alpha_value64 = getelementptr inbounds %struct.WeightPaintInfo, %struct.WeightPaintInfo* %wpi, i32 0, i32 11, !dbg !7251
  store float %66, float* %brush_alpha_value64, align 4, !dbg !7252
  %67 = load %struct.WPaintData*, %struct.WPaintData** %wpd, align 8, !dbg !7253
  %vc65 = getelementptr inbounds %struct.WPaintData, %struct.WPaintData* %67, i32 0, i32 0, !dbg !7254
  %rv3d66 = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %vc65, i32 0, i32 5, !dbg !7255
  %68 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d66, align 8, !dbg !7255
  %persmat67 = getelementptr inbounds %struct.RegionView3D, %struct.RegionView3D* %68, i32 0, i32 3, !dbg !7256
  %arraydecay68 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %persmat67, i64 0, i64 0, !dbg !7253
  %arraydecay69 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 0, !dbg !7257
  call void @swap_m4m4([4 x float]* %arraydecay68, [4 x float]* %arraydecay69), !dbg !7258
  %69 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !7259
  %editflag = getelementptr inbounds %struct.Mesh, %struct.Mesh* %69, i32 0, i32 46, !dbg !7260
  %70 = load i8, i8* %editflag, align 1, !dbg !7260
  %conv70 = zext i8 %70 to i32, !dbg !7259
  %and71 = and i32 %conv70, 32, !dbg !7261
  %cmp72 = icmp ne i32 %and71, 0, !dbg !7262
  %conv73 = zext i1 %cmp72 to i32, !dbg !7262
  %conv74 = trunc i32 %conv73 to i8, !dbg !7263
  store i8 %conv74, i8* %use_vert_sel, align 1, !dbg !7264
  %71 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !7265
  %editflag75 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %71, i32 0, i32 46, !dbg !7266
  %72 = load i8, i8* %editflag75, align 1, !dbg !7266
  %conv76 = zext i8 %72 to i32, !dbg !7265
  %and77 = and i32 %conv76, 8, !dbg !7267
  %cmp78 = icmp ne i32 %and77, 0, !dbg !7268
  %conv79 = zext i1 %cmp78 to i32, !dbg !7268
  %conv80 = trunc i32 %conv79 to i8, !dbg !7269
  store i8 %conv80, i8* %use_face_sel, align 1, !dbg !7270
  %73 = load %struct.ViewContext*, %struct.ViewContext** %vc, align 8, !dbg !7271
  %v3d = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %73, i32 0, i32 4, !dbg !7272
  %74 = load %struct.View3D*, %struct.View3D** %v3d, align 8, !dbg !7272
  %flag81 = getelementptr inbounds %struct.View3D, %struct.View3D* %74, i32 0, i32 28, !dbg !7273
  %75 = load i16, i16* %flag81, align 8, !dbg !7273
  %conv82 = sext i16 %75 to i32, !dbg !7271
  %and83 = and i32 %conv82, 4096, !dbg !7274
  %cmp84 = icmp ne i32 %and83, 0, !dbg !7275
  %conv85 = zext i1 %cmp84 to i32, !dbg !7275
  %conv86 = trunc i32 %conv85 to i8, !dbg !7276
  store i8 %conv86, i8* %use_depth, align 1, !dbg !7277
  %76 = load i8, i8* %use_depth, align 1, !dbg !7278
  %tobool87 = icmp ne i8 %76, 0, !dbg !7278
  br i1 %tobool87, label %if.then88, label %if.else, !dbg !7280

if.then88:                                        ; preds = %land.end
  call void @llvm.dbg.declare(metadata i8* %editflag_prev, metadata !7281, metadata !DIExpression()), !dbg !7283
  %77 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !7284
  %editflag89 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %77, i32 0, i32 46, !dbg !7285
  %78 = load i8, i8* %editflag89, align 1, !dbg !7285
  store i8 %78, i8* %editflag_prev, align 1, !dbg !7283
  %79 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !7286
  %editflag90 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %79, i32 0, i32 46, !dbg !7287
  %80 = load i8, i8* %editflag90, align 1, !dbg !7288
  %conv91 = zext i8 %80 to i32, !dbg !7288
  %and92 = and i32 %conv91, -33, !dbg !7288
  %conv93 = trunc i32 %and92 to i8, !dbg !7288
  store i8 %conv93, i8* %editflag90, align 1, !dbg !7288
  %81 = load i8, i8* %use_vert_sel, align 1, !dbg !7289
  %tobool94 = icmp ne i8 %81, 0, !dbg !7289
  br i1 %tobool94, label %if.then95, label %if.end99, !dbg !7291

if.then95:                                        ; preds = %if.then88
  %82 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !7292
  %editflag96 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %82, i32 0, i32 46, !dbg !7294
  %83 = load i8, i8* %editflag96, align 1, !dbg !7295
  %conv97 = zext i8 %83 to i32, !dbg !7295
  %or = or i32 %conv97, 8, !dbg !7295
  %conv98 = trunc i32 %or to i8, !dbg !7295
  store i8 %conv98, i8* %editflag96, align 1, !dbg !7295
  br label %if.end99, !dbg !7296

if.end99:                                         ; preds = %if.then95, %if.then88
  %84 = load %struct.ViewContext*, %struct.ViewContext** %vc, align 8, !dbg !7297
  %85 = load i32*, i32** %indexar, align 8, !dbg !7298
  %86 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !7299
  %totpoly = getelementptr inbounds %struct.Mesh, %struct.Mesh* %86, i32 0, i32 30, !dbg !7300
  %87 = load i32, i32* %totpoly, align 8, !dbg !7300
  %arrayidx = getelementptr inbounds [2 x float], [2 x float]* %mval, i64 0, i64 0, !dbg !7301
  %88 = load float, float* %arrayidx, align 4, !dbg !7301
  %conv100 = fptosi float %88 to i32, !dbg !7301
  %arrayidx101 = getelementptr inbounds [2 x float], [2 x float]* %mval, i64 0, i64 1, !dbg !7302
  %89 = load float, float* %arrayidx101, align 4, !dbg !7302
  %conv102 = fptosi float %89 to i32, !dbg !7302
  %90 = load float, float* %brush_size_pressure, align 4, !dbg !7303
  %call103 = call i32 @sample_backbuf_area(%struct.ViewContext* %84, i32* %85, i32 %87, i32 %conv100, i32 %conv102, float %90), !dbg !7304
  store i32 %call103, i32* %totindex, align 4, !dbg !7305
  %91 = load i8, i8* %editflag_prev, align 1, !dbg !7306
  %92 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !7307
  %editflag104 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %92, i32 0, i32 46, !dbg !7308
  store i8 %91, i8* %editflag104, align 1, !dbg !7309
  %93 = load i8, i8* %use_face_sel, align 1, !dbg !7310
  %conv105 = zext i8 %93 to i32, !dbg !7310
  %tobool106 = icmp ne i32 %conv105, 0, !dbg !7310
  br i1 %tobool106, label %land.lhs.true107, label %if.end138, !dbg !7312

land.lhs.true107:                                 ; preds = %if.end99
  %94 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !7313
  %totpoly108 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %94, i32 0, i32 30, !dbg !7314
  %95 = load i32, i32* %totpoly108, align 8, !dbg !7314
  %tobool109 = icmp ne i32 %95, 0, !dbg !7313
  br i1 %tobool109, label %if.then110, label %if.end138, !dbg !7315

if.then110:                                       ; preds = %land.lhs.true107
  call void @llvm.dbg.declare(metadata %struct.MPoly** %mpoly, metadata !7316, metadata !DIExpression()), !dbg !7318
  %96 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !7319
  %mpoly111 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %96, i32 0, i32 7, !dbg !7320
  %97 = load %struct.MPoly*, %struct.MPoly** %mpoly111, align 8, !dbg !7320
  store %struct.MPoly* %97, %struct.MPoly** %mpoly, align 8, !dbg !7318
  store i32 0, i32* %index, align 4, !dbg !7321
  br label %for.cond, !dbg !7323

for.cond:                                         ; preds = %for.inc, %if.then110
  %98 = load i32, i32* %index, align 4, !dbg !7324
  %99 = load i32, i32* %totindex, align 4, !dbg !7326
  %cmp112 = icmp ult i32 %98, %99, !dbg !7327
  br i1 %cmp112, label %for.body, label %for.end, !dbg !7328

for.body:                                         ; preds = %for.cond
  %100 = load i32*, i32** %indexar, align 8, !dbg !7329
  %101 = load i32, i32* %index, align 4, !dbg !7332
  %idxprom = zext i32 %101 to i64, !dbg !7329
  %arrayidx114 = getelementptr inbounds i32, i32* %100, i64 %idxprom, !dbg !7329
  %102 = load i32, i32* %arrayidx114, align 4, !dbg !7329
  %tobool115 = icmp ne i32 %102, 0, !dbg !7329
  br i1 %tobool115, label %land.lhs.true116, label %if.end137, !dbg !7333

land.lhs.true116:                                 ; preds = %for.body
  %103 = load i32*, i32** %indexar, align 8, !dbg !7334
  %104 = load i32, i32* %index, align 4, !dbg !7335
  %idxprom117 = zext i32 %104 to i64, !dbg !7334
  %arrayidx118 = getelementptr inbounds i32, i32* %103, i64 %idxprom117, !dbg !7334
  %105 = load i32, i32* %arrayidx118, align 4, !dbg !7334
  %106 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !7336
  %totpoly119 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %106, i32 0, i32 30, !dbg !7337
  %107 = load i32, i32* %totpoly119, align 8, !dbg !7337
  %cmp120 = icmp sle i32 %105, %107, !dbg !7338
  br i1 %cmp120, label %if.then122, label %if.end137, !dbg !7339

if.then122:                                       ; preds = %land.lhs.true116
  call void @llvm.dbg.declare(metadata %struct.MPoly** %mp, metadata !7340, metadata !DIExpression()), !dbg !7342
  %108 = load %struct.MPoly*, %struct.MPoly** %mpoly, align 8, !dbg !7343
  %109 = load i32*, i32** %indexar, align 8, !dbg !7344
  %110 = load i32, i32* %index, align 4, !dbg !7345
  %idxprom123 = zext i32 %110 to i64, !dbg !7344
  %arrayidx124 = getelementptr inbounds i32, i32* %109, i64 %idxprom123, !dbg !7344
  %111 = load i32, i32* %arrayidx124, align 4, !dbg !7344
  %sub125 = sub nsw i32 %111, 1, !dbg !7346
  %idxprom126 = sext i32 %sub125 to i64, !dbg !7343
  %arrayidx127 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %108, i64 %idxprom126, !dbg !7343
  store %struct.MPoly* %arrayidx127, %struct.MPoly** %mp, align 8, !dbg !7342
  %112 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !7347
  %flag128 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %112, i32 0, i32 3, !dbg !7349
  %113 = load i8, i8* %flag128, align 2, !dbg !7349
  %conv129 = zext i8 %113 to i32, !dbg !7347
  %and130 = and i32 %conv129, 2, !dbg !7350
  %cmp131 = icmp eq i32 %and130, 0, !dbg !7351
  br i1 %cmp131, label %if.then133, label %if.end136, !dbg !7352

if.then133:                                       ; preds = %if.then122
  %114 = load i32*, i32** %indexar, align 8, !dbg !7353
  %115 = load i32, i32* %index, align 4, !dbg !7355
  %idxprom134 = zext i32 %115 to i64, !dbg !7353
  %arrayidx135 = getelementptr inbounds i32, i32* %114, i64 %idxprom134, !dbg !7353
  store i32 0, i32* %arrayidx135, align 4, !dbg !7356
  br label %if.end136, !dbg !7357

if.end136:                                        ; preds = %if.then133, %if.then122
  br label %if.end137, !dbg !7358

if.end137:                                        ; preds = %if.end136, %land.lhs.true116, %for.body
  br label %for.inc, !dbg !7359

for.inc:                                          ; preds = %if.end137
  %116 = load i32, i32* %index, align 4, !dbg !7360
  %inc = add i32 %116, 1, !dbg !7360
  store i32 %inc, i32* %index, align 4, !dbg !7360
  br label %for.cond, !dbg !7361, !llvm.loop !7362

for.end:                                          ; preds = %for.cond
  br label %if.end138, !dbg !7364

if.end138:                                        ; preds = %for.end, %land.lhs.true107, %if.end99
  br label %if.end139, !dbg !7365

if.else:                                          ; preds = %land.end
  store i32* null, i32** %indexar, align 8, !dbg !7366
  br label %if.end139

if.end139:                                        ; preds = %if.else, %if.end138
  %117 = load %struct.WPaintData*, %struct.WPaintData** %wpd, align 8, !dbg !7368
  %vp_handle = getelementptr inbounds %struct.WPaintData, %struct.WPaintData* %117, i32 0, i32 4, !dbg !7369
  %118 = load i8*, i8** %vp_handle, align 8, !dbg !7369
  %119 = bitcast i8* %118 to %struct.VertProjHandle*, !dbg !7368
  %120 = load %struct.ViewContext*, %struct.ViewContext** %vc, align 8, !dbg !7370
  %ar = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %120, i32 0, i32 3, !dbg !7371
  %121 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !7371
  %arraydecay140 = getelementptr inbounds [2 x float], [2 x float]* %mval, i64 0, i64 0, !dbg !7372
  call void @ED_vpaint_proj_handle_update(%struct.VertProjHandle* %119, %struct.ARegion* %121, float* %arraydecay140), !dbg !7373
  store float 0.000000e+00, float* %totw, align 4, !dbg !7374
  %122 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !7375
  %vertexpaint_tool141 = getelementptr inbounds %struct.Brush, %struct.Brush* %122, i32 0, i32 35, !dbg !7377
  %123 = load i8, i8* %vertexpaint_tool141, align 1, !dbg !7377
  %conv142 = zext i8 %123 to i32, !dbg !7375
  %cmp143 = icmp eq i32 %conv142, 4, !dbg !7378
  br i1 %cmp143, label %if.then145, label %if.else146, !dbg !7379

if.then145:                                       ; preds = %if.end139
  store float 0.000000e+00, float* %paintweight, align 4, !dbg !7380
  br label %if.end148, !dbg !7381

if.else146:                                       ; preds = %if.end139
  %124 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !7382
  %125 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !7383
  %call147 = call float @BKE_brush_weight_get(%struct.Scene* %124, %struct.Brush* %125), !dbg !7384
  store float %call147, float* %paintweight, align 4, !dbg !7385
  br label %if.end148

if.end148:                                        ; preds = %if.else146, %if.then145
  %126 = load i8, i8* %use_depth, align 1, !dbg !7386
  %tobool149 = icmp ne i8 %126, 0, !dbg !7386
  br i1 %tobool149, label %if.then150, label %if.else251, !dbg !7388

if.then150:                                       ; preds = %if.end148
  store i32 0, i32* %index, align 4, !dbg !7389
  br label %for.cond151, !dbg !7392

for.cond151:                                      ; preds = %for.inc248, %if.then150
  %127 = load i32, i32* %index, align 4, !dbg !7393
  %128 = load i32, i32* %totindex, align 4, !dbg !7395
  %cmp152 = icmp ult i32 %127, %128, !dbg !7396
  br i1 %cmp152, label %for.body154, label %for.end250, !dbg !7397

for.body154:                                      ; preds = %for.cond151
  %129 = load i32*, i32** %indexar, align 8, !dbg !7398
  %130 = load i32, i32* %index, align 4, !dbg !7401
  %idxprom155 = zext i32 %130 to i64, !dbg !7398
  %arrayidx156 = getelementptr inbounds i32, i32* %129, i64 %idxprom155, !dbg !7398
  %131 = load i32, i32* %arrayidx156, align 4, !dbg !7398
  %tobool157 = icmp ne i32 %131, 0, !dbg !7398
  br i1 %tobool157, label %land.lhs.true158, label %if.end247, !dbg !7402

land.lhs.true158:                                 ; preds = %for.body154
  %132 = load i32*, i32** %indexar, align 8, !dbg !7403
  %133 = load i32, i32* %index, align 4, !dbg !7404
  %idxprom159 = zext i32 %133 to i64, !dbg !7403
  %arrayidx160 = getelementptr inbounds i32, i32* %132, i64 %idxprom159, !dbg !7403
  %134 = load i32, i32* %arrayidx160, align 4, !dbg !7403
  %135 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !7405
  %totpoly161 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %135, i32 0, i32 30, !dbg !7406
  %136 = load i32, i32* %totpoly161, align 8, !dbg !7406
  %cmp162 = icmp sle i32 %134, %136, !dbg !7407
  br i1 %cmp162, label %if.then164, label %if.end247, !dbg !7408

if.then164:                                       ; preds = %land.lhs.true158
  call void @llvm.dbg.declare(metadata %struct.MPoly** %mpoly165, metadata !7409, metadata !DIExpression()), !dbg !7411
  %137 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !7412
  %mpoly166 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %137, i32 0, i32 7, !dbg !7413
  %138 = load %struct.MPoly*, %struct.MPoly** %mpoly166, align 8, !dbg !7413
  %139 = load i32*, i32** %indexar, align 8, !dbg !7414
  %140 = load i32, i32* %index, align 4, !dbg !7415
  %idxprom167 = zext i32 %140 to i64, !dbg !7414
  %arrayidx168 = getelementptr inbounds i32, i32* %139, i64 %idxprom167, !dbg !7414
  %141 = load i32, i32* %arrayidx168, align 4, !dbg !7414
  %sub169 = sub nsw i32 %141, 1, !dbg !7416
  %idx.ext = sext i32 %sub169 to i64, !dbg !7417
  %add.ptr = getelementptr inbounds %struct.MPoly, %struct.MPoly* %138, i64 %idx.ext, !dbg !7417
  store %struct.MPoly* %add.ptr, %struct.MPoly** %mpoly165, align 8, !dbg !7411
  call void @llvm.dbg.declare(metadata %struct.MLoop** %ml, metadata !7418, metadata !DIExpression()), !dbg !7419
  %142 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !7420
  %mloop = getelementptr inbounds %struct.Mesh, %struct.Mesh* %142, i32 0, i32 9, !dbg !7421
  %143 = load %struct.MLoop*, %struct.MLoop** %mloop, align 8, !dbg !7421
  %144 = load %struct.MPoly*, %struct.MPoly** %mpoly165, align 8, !dbg !7422
  %loopstart = getelementptr inbounds %struct.MPoly, %struct.MPoly* %144, i32 0, i32 0, !dbg !7423
  %145 = load i32, i32* %loopstart, align 4, !dbg !7423
  %idx.ext170 = sext i32 %145 to i64, !dbg !7424
  %add.ptr171 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %143, i64 %idx.ext170, !dbg !7424
  store %struct.MLoop* %add.ptr171, %struct.MLoop** %ml, align 8, !dbg !7419
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7425, metadata !DIExpression()), !dbg !7426
  %146 = load i8, i8* %use_vert_sel, align 1, !dbg !7427
  %tobool172 = icmp ne i8 %146, 0, !dbg !7427
  br i1 %tobool172, label %if.then173, label %if.else190, !dbg !7429

if.then173:                                       ; preds = %if.then164
  store i32 0, i32* %i, align 4, !dbg !7430
  br label %for.cond174, !dbg !7433

for.cond174:                                      ; preds = %for.inc187, %if.then173
  %147 = load i32, i32* %i, align 4, !dbg !7434
  %148 = load %struct.MPoly*, %struct.MPoly** %mpoly165, align 8, !dbg !7436
  %totloop = getelementptr inbounds %struct.MPoly, %struct.MPoly* %148, i32 0, i32 1, !dbg !7437
  %149 = load i32, i32* %totloop, align 4, !dbg !7437
  %cmp175 = icmp slt i32 %147, %149, !dbg !7438
  br i1 %cmp175, label %for.body177, label %for.end189, !dbg !7439

for.body177:                                      ; preds = %for.cond174
  %150 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !7440
  %mvert = getelementptr inbounds %struct.Mesh, %struct.Mesh* %150, i32 0, i32 15, !dbg !7442
  %151 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !7442
  %152 = load %struct.MLoop*, %struct.MLoop** %ml, align 8, !dbg !7443
  %v = getelementptr inbounds %struct.MLoop, %struct.MLoop* %152, i32 0, i32 0, !dbg !7444
  %153 = load i32, i32* %v, align 4, !dbg !7444
  %idxprom178 = zext i32 %153 to i64, !dbg !7440
  %arrayidx179 = getelementptr inbounds %struct.MVert, %struct.MVert* %151, i64 %idxprom178, !dbg !7440
  %flag180 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx179, i32 0, i32 2, !dbg !7445
  %154 = load i8, i8* %flag180, align 2, !dbg !7445
  %conv181 = zext i8 %154 to i32, !dbg !7440
  %and182 = and i32 %conv181, 1, !dbg !7446
  %155 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !7447
  %dvert = getelementptr inbounds %struct.Mesh, %struct.Mesh* %155, i32 0, i32 17, !dbg !7448
  %156 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert, align 8, !dbg !7448
  %157 = load %struct.MLoop*, %struct.MLoop** %ml, align 8, !dbg !7449
  %v183 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %157, i32 0, i32 0, !dbg !7450
  %158 = load i32, i32* %v183, align 4, !dbg !7450
  %idxprom184 = zext i32 %158 to i64, !dbg !7447
  %arrayidx185 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %156, i64 %idxprom184, !dbg !7447
  %flag186 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %arrayidx185, i32 0, i32 2, !dbg !7451
  store i32 %and182, i32* %flag186, align 4, !dbg !7452
  br label %for.inc187, !dbg !7453

for.inc187:                                       ; preds = %for.body177
  %159 = load i32, i32* %i, align 4, !dbg !7454
  %inc188 = add nsw i32 %159, 1, !dbg !7454
  store i32 %inc188, i32* %i, align 4, !dbg !7454
  %160 = load %struct.MLoop*, %struct.MLoop** %ml, align 8, !dbg !7455
  %incdec.ptr = getelementptr inbounds %struct.MLoop, %struct.MLoop* %160, i32 1, !dbg !7455
  store %struct.MLoop* %incdec.ptr, %struct.MLoop** %ml, align 8, !dbg !7455
  br label %for.cond174, !dbg !7456, !llvm.loop !7457

for.end189:                                       ; preds = %for.cond174
  br label %if.end205, !dbg !7459

if.else190:                                       ; preds = %if.then164
  store i32 0, i32* %i, align 4, !dbg !7460
  br label %for.cond191, !dbg !7463

for.cond191:                                      ; preds = %for.inc201, %if.else190
  %161 = load i32, i32* %i, align 4, !dbg !7464
  %162 = load %struct.MPoly*, %struct.MPoly** %mpoly165, align 8, !dbg !7466
  %totloop192 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %162, i32 0, i32 1, !dbg !7467
  %163 = load i32, i32* %totloop192, align 4, !dbg !7467
  %cmp193 = icmp slt i32 %161, %163, !dbg !7468
  br i1 %cmp193, label %for.body195, label %for.end204, !dbg !7469

for.body195:                                      ; preds = %for.cond191
  %164 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !7470
  %dvert196 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %164, i32 0, i32 17, !dbg !7472
  %165 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert196, align 8, !dbg !7472
  %166 = load %struct.MLoop*, %struct.MLoop** %ml, align 8, !dbg !7473
  %v197 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %166, i32 0, i32 0, !dbg !7474
  %167 = load i32, i32* %v197, align 4, !dbg !7474
  %idxprom198 = zext i32 %167 to i64, !dbg !7470
  %arrayidx199 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %165, i64 %idxprom198, !dbg !7470
  %flag200 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %arrayidx199, i32 0, i32 2, !dbg !7475
  store i32 1, i32* %flag200, align 4, !dbg !7476
  br label %for.inc201, !dbg !7477

for.inc201:                                       ; preds = %for.body195
  %168 = load i32, i32* %i, align 4, !dbg !7478
  %inc202 = add nsw i32 %168, 1, !dbg !7478
  store i32 %inc202, i32* %i, align 4, !dbg !7478
  %169 = load %struct.MLoop*, %struct.MLoop** %ml, align 8, !dbg !7479
  %incdec.ptr203 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %169, i32 1, !dbg !7479
  store %struct.MLoop* %incdec.ptr203, %struct.MLoop** %ml, align 8, !dbg !7479
  br label %for.cond191, !dbg !7480, !llvm.loop !7481

for.end204:                                       ; preds = %for.cond191
  br label %if.end205

if.end205:                                        ; preds = %for.end204, %for.end189
  %170 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !7483
  %vertexpaint_tool206 = getelementptr inbounds %struct.Brush, %struct.Brush* %170, i32 0, i32 35, !dbg !7485
  %171 = load i8, i8* %vertexpaint_tool206, align 1, !dbg !7485
  %conv207 = zext i8 %171 to i32, !dbg !7483
  %cmp208 = icmp eq i32 %conv207, 4, !dbg !7486
  br i1 %cmp208, label %if.then210, label %if.end246, !dbg !7487

if.then210:                                       ; preds = %if.end205
  %172 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !7488
  %mloop211 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %172, i32 0, i32 9, !dbg !7490
  %173 = load %struct.MLoop*, %struct.MLoop** %mloop211, align 8, !dbg !7490
  %174 = load %struct.MPoly*, %struct.MPoly** %mpoly165, align 8, !dbg !7491
  %loopstart212 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %174, i32 0, i32 0, !dbg !7492
  %175 = load i32, i32* %loopstart212, align 4, !dbg !7492
  %idx.ext213 = sext i32 %175 to i64, !dbg !7493
  %add.ptr214 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %173, i64 %idx.ext213, !dbg !7493
  store %struct.MLoop* %add.ptr214, %struct.MLoop** %ml, align 8, !dbg !7494
  store i32 0, i32* %i, align 4, !dbg !7495
  br label %for.cond215, !dbg !7497

for.cond215:                                      ; preds = %for.inc242, %if.then210
  %176 = load i32, i32* %i, align 4, !dbg !7498
  %177 = load %struct.MPoly*, %struct.MPoly** %mpoly165, align 8, !dbg !7500
  %totloop216 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %177, i32 0, i32 1, !dbg !7501
  %178 = load i32, i32* %totloop216, align 4, !dbg !7501
  %cmp217 = icmp slt i32 %176, %178, !dbg !7502
  br i1 %cmp217, label %for.body219, label %for.end245, !dbg !7503

for.body219:                                      ; preds = %for.cond215
  call void @llvm.dbg.declare(metadata i32* %vidx, metadata !7504, metadata !DIExpression()), !dbg !7508
  %179 = load %struct.MLoop*, %struct.MLoop** %ml, align 8, !dbg !7508
  %v220 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %179, i32 0, i32 0, !dbg !7508
  %180 = load i32, i32* %v220, align 4, !dbg !7508
  store i32 %180, i32* %vidx, align 4, !dbg !7508
  call void @llvm.dbg.declare(metadata float* %fac, metadata !7509, metadata !DIExpression()), !dbg !7508
  %181 = load %struct.VPaint*, %struct.VPaint** %wp, align 8, !dbg !7508
  %182 = load %struct.ViewContext*, %struct.ViewContext** %vc, align 8, !dbg !7508
  %183 = load %struct.WPaintData*, %struct.WPaintData** %wpd, align 8, !dbg !7508
  %vertexcosnos = getelementptr inbounds %struct.WPaintData, %struct.WPaintData* %183, i32 0, i32 5, !dbg !7508
  %184 = load %struct.DMCoNo*, %struct.DMCoNo** %vertexcosnos, align 8, !dbg !7508
  %185 = load i32, i32* %vidx, align 4, !dbg !7508
  %idxprom221 = zext i32 %185 to i64, !dbg !7508
  %arrayidx222 = getelementptr inbounds %struct.DMCoNo, %struct.DMCoNo* %184, i64 %idxprom221, !dbg !7508
  %co = getelementptr inbounds %struct.DMCoNo, %struct.DMCoNo* %arrayidx222, i32 0, i32 0, !dbg !7508
  %arraydecay223 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !7508
  %arraydecay224 = getelementptr inbounds [2 x float], [2 x float]* %mval, i64 0, i64 0, !dbg !7508
  %186 = load float, float* %brush_size_pressure, align 4, !dbg !7508
  %call225 = call float @calc_vp_strength_col_dl(%struct.VPaint* %181, %struct.ViewContext* %182, float* %arraydecay223, float* %arraydecay224, float %186, float* null), !dbg !7508
  store float %call225, float* %fac, align 4, !dbg !7508
  %187 = load float, float* %fac, align 4, !dbg !7510
  %cmp226 = fcmp ogt float %187, 0.000000e+00, !dbg !7510
  br i1 %cmp226, label %if.then228, label %if.end241, !dbg !7508

if.then228:                                       ; preds = %for.body219
  call void @llvm.dbg.declare(metadata %struct.MDeformWeight** %dw, metadata !7512, metadata !DIExpression()), !dbg !7514
  %188 = load %struct.MDeformWeight* (%struct.MDeformVert*, i32)*, %struct.MDeformWeight* (%struct.MDeformVert*, i32)** %dw_func, align 8, !dbg !7514
  %189 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !7514
  %dvert229 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %189, i32 0, i32 17, !dbg !7514
  %190 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert229, align 8, !dbg !7514
  %191 = load i32, i32* %vidx, align 4, !dbg !7514
  %idxprom230 = zext i32 %191 to i64, !dbg !7514
  %arrayidx231 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %190, i64 %idxprom230, !dbg !7514
  %vgroup_active232 = getelementptr inbounds %struct.WeightPaintInfo, %struct.WeightPaintInfo* %wpi, i32 0, i32 3, !dbg !7514
  %192 = load i32, i32* %vgroup_active232, align 4, !dbg !7514
  %call233 = call %struct.MDeformWeight* %188(%struct.MDeformVert* %arrayidx231, i32 %192), !dbg !7514
  store %struct.MDeformWeight* %call233, %struct.MDeformWeight** %dw, align 8, !dbg !7514
  %193 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !7514
  %tobool234 = icmp ne %struct.MDeformWeight* %193, null, !dbg !7514
  br i1 %tobool234, label %cond.true235, label %cond.false237, !dbg !7514

cond.true235:                                     ; preds = %if.then228
  %194 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !7514
  %weight = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %194, i32 0, i32 1, !dbg !7514
  %195 = load float, float* %weight, align 4, !dbg !7514
  %196 = load float, float* %fac, align 4, !dbg !7514
  %mul236 = fmul float %195, %196, !dbg !7514
  br label %cond.end238, !dbg !7514

cond.false237:                                    ; preds = %if.then228
  br label %cond.end238, !dbg !7514

cond.end238:                                      ; preds = %cond.false237, %cond.true235
  %cond239 = phi float [ %mul236, %cond.true235 ], [ 0.000000e+00, %cond.false237 ], !dbg !7514
  %197 = load float, float* %paintweight, align 4, !dbg !7514
  %add = fadd float %197, %cond239, !dbg !7514
  store float %add, float* %paintweight, align 4, !dbg !7514
  %198 = load float, float* %fac, align 4, !dbg !7514
  %199 = load float, float* %totw, align 4, !dbg !7514
  %add240 = fadd float %199, %198, !dbg !7514
  store float %add240, float* %totw, align 4, !dbg !7514
  br label %if.end241, !dbg !7514

if.end241:                                        ; preds = %cond.end238, %for.body219
  br label %for.inc242, !dbg !7515

for.inc242:                                       ; preds = %if.end241
  %200 = load i32, i32* %i, align 4, !dbg !7516
  %inc243 = add nsw i32 %200, 1, !dbg !7516
  store i32 %inc243, i32* %i, align 4, !dbg !7516
  %201 = load %struct.MLoop*, %struct.MLoop** %ml, align 8, !dbg !7517
  %incdec.ptr244 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %201, i32 1, !dbg !7517
  store %struct.MLoop* %incdec.ptr244, %struct.MLoop** %ml, align 8, !dbg !7517
  br label %for.cond215, !dbg !7518, !llvm.loop !7519

for.end245:                                       ; preds = %for.cond215
  br label %if.end246, !dbg !7521

if.end246:                                        ; preds = %for.end245, %if.end205
  br label %if.end247, !dbg !7522

if.end247:                                        ; preds = %if.end246, %land.lhs.true158, %for.body154
  br label %for.inc248, !dbg !7523

for.inc248:                                       ; preds = %if.end247
  %202 = load i32, i32* %index, align 4, !dbg !7524
  %inc249 = add i32 %202, 1, !dbg !7524
  store i32 %inc249, i32* %index, align 4, !dbg !7524
  br label %for.cond151, !dbg !7525, !llvm.loop !7526

for.end250:                                       ; preds = %for.cond151
  br label %if.end330, !dbg !7528

if.else251:                                       ; preds = %if.end148
  call void @llvm.dbg.declare(metadata i32* %totvert, metadata !7529, metadata !DIExpression()), !dbg !7531
  %203 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !7532
  %totvert252 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %203, i32 0, i32 26, !dbg !7533
  %204 = load i32, i32* %totvert252, align 8, !dbg !7533
  store i32 %204, i32* %totvert, align 4, !dbg !7531
  call void @llvm.dbg.declare(metadata i32* %i253, metadata !7534, metadata !DIExpression()), !dbg !7535
  %205 = load i8, i8* %use_vert_sel, align 1, !dbg !7536
  %conv254 = zext i8 %205 to i32, !dbg !7536
  %tobool255 = icmp ne i32 %conv254, 0, !dbg !7536
  br i1 %tobool255, label %if.then258, label %lor.lhs.false, !dbg !7538

lor.lhs.false:                                    ; preds = %if.else251
  %206 = load i8, i8* %use_face_sel, align 1, !dbg !7539
  %conv256 = zext i8 %206 to i32, !dbg !7539
  %tobool257 = icmp ne i32 %conv256, 0, !dbg !7539
  br i1 %tobool257, label %if.then258, label %if.else276, !dbg !7540

if.then258:                                       ; preds = %lor.lhs.false, %if.else251
  store i32 0, i32* %i253, align 4, !dbg !7541
  br label %for.cond259, !dbg !7544

for.cond259:                                      ; preds = %for.inc273, %if.then258
  %207 = load i32, i32* %i253, align 4, !dbg !7545
  %208 = load i32, i32* %totvert, align 4, !dbg !7547
  %cmp260 = icmp ult i32 %207, %208, !dbg !7548
  br i1 %cmp260, label %for.body262, label %for.end275, !dbg !7549

for.body262:                                      ; preds = %for.cond259
  %209 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !7550
  %mvert263 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %209, i32 0, i32 15, !dbg !7552
  %210 = load %struct.MVert*, %struct.MVert** %mvert263, align 8, !dbg !7552
  %211 = load i32, i32* %i253, align 4, !dbg !7553
  %idxprom264 = zext i32 %211 to i64, !dbg !7550
  %arrayidx265 = getelementptr inbounds %struct.MVert, %struct.MVert* %210, i64 %idxprom264, !dbg !7550
  %flag266 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx265, i32 0, i32 2, !dbg !7554
  %212 = load i8, i8* %flag266, align 2, !dbg !7554
  %conv267 = zext i8 %212 to i32, !dbg !7550
  %and268 = and i32 %conv267, 1, !dbg !7555
  %213 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !7556
  %dvert269 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %213, i32 0, i32 17, !dbg !7557
  %214 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert269, align 8, !dbg !7557
  %215 = load i32, i32* %i253, align 4, !dbg !7558
  %idxprom270 = zext i32 %215 to i64, !dbg !7556
  %arrayidx271 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %214, i64 %idxprom270, !dbg !7556
  %flag272 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %arrayidx271, i32 0, i32 2, !dbg !7559
  store i32 %and268, i32* %flag272, align 4, !dbg !7560
  br label %for.inc273, !dbg !7561

for.inc273:                                       ; preds = %for.body262
  %216 = load i32, i32* %i253, align 4, !dbg !7562
  %inc274 = add i32 %216, 1, !dbg !7562
  store i32 %inc274, i32* %i253, align 4, !dbg !7562
  br label %for.cond259, !dbg !7563, !llvm.loop !7564

for.end275:                                       ; preds = %for.cond259
  br label %if.end288, !dbg !7566

if.else276:                                       ; preds = %lor.lhs.false
  store i32 0, i32* %i253, align 4, !dbg !7567
  br label %for.cond277, !dbg !7570

for.cond277:                                      ; preds = %for.inc285, %if.else276
  %217 = load i32, i32* %i253, align 4, !dbg !7571
  %218 = load i32, i32* %totvert, align 4, !dbg !7573
  %cmp278 = icmp ult i32 %217, %218, !dbg !7574
  br i1 %cmp278, label %for.body280, label %for.end287, !dbg !7575

for.body280:                                      ; preds = %for.cond277
  %219 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !7576
  %dvert281 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %219, i32 0, i32 17, !dbg !7578
  %220 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert281, align 8, !dbg !7578
  %221 = load i32, i32* %i253, align 4, !dbg !7579
  %idxprom282 = zext i32 %221 to i64, !dbg !7576
  %arrayidx283 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %220, i64 %idxprom282, !dbg !7576
  %flag284 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %arrayidx283, i32 0, i32 2, !dbg !7580
  store i32 1, i32* %flag284, align 4, !dbg !7581
  br label %for.inc285, !dbg !7582

for.inc285:                                       ; preds = %for.body280
  %222 = load i32, i32* %i253, align 4, !dbg !7583
  %inc286 = add i32 %222, 1, !dbg !7583
  store i32 %inc286, i32* %i253, align 4, !dbg !7583
  br label %for.cond277, !dbg !7584, !llvm.loop !7585

for.end287:                                       ; preds = %for.cond277
  br label %if.end288

if.end288:                                        ; preds = %for.end287, %for.end275
  %223 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !7587
  %vertexpaint_tool289 = getelementptr inbounds %struct.Brush, %struct.Brush* %223, i32 0, i32 35, !dbg !7589
  %224 = load i8, i8* %vertexpaint_tool289, align 1, !dbg !7589
  %conv290 = zext i8 %224 to i32, !dbg !7587
  %cmp291 = icmp eq i32 %conv290, 4, !dbg !7590
  br i1 %cmp291, label %if.then293, label %if.end329, !dbg !7591

if.then293:                                       ; preds = %if.end288
  store i32 0, i32* %i253, align 4, !dbg !7592
  br label %for.cond294, !dbg !7595

for.cond294:                                      ; preds = %for.inc326, %if.then293
  %225 = load i32, i32* %i253, align 4, !dbg !7596
  %226 = load i32, i32* %totvert, align 4, !dbg !7598
  %cmp295 = icmp ult i32 %225, %226, !dbg !7599
  br i1 %cmp295, label %for.body297, label %for.end328, !dbg !7600

for.body297:                                      ; preds = %for.cond294
  call void @llvm.dbg.declare(metadata i32* %vidx298, metadata !7601, metadata !DIExpression()), !dbg !7604
  %227 = load i32, i32* %i253, align 4, !dbg !7604
  store i32 %227, i32* %vidx298, align 4, !dbg !7604
  call void @llvm.dbg.declare(metadata float* %fac299, metadata !7605, metadata !DIExpression()), !dbg !7604
  %228 = load %struct.VPaint*, %struct.VPaint** %wp, align 8, !dbg !7604
  %229 = load %struct.ViewContext*, %struct.ViewContext** %vc, align 8, !dbg !7604
  %230 = load %struct.WPaintData*, %struct.WPaintData** %wpd, align 8, !dbg !7604
  %vertexcosnos300 = getelementptr inbounds %struct.WPaintData, %struct.WPaintData* %230, i32 0, i32 5, !dbg !7604
  %231 = load %struct.DMCoNo*, %struct.DMCoNo** %vertexcosnos300, align 8, !dbg !7604
  %232 = load i32, i32* %vidx298, align 4, !dbg !7604
  %idxprom301 = zext i32 %232 to i64, !dbg !7604
  %arrayidx302 = getelementptr inbounds %struct.DMCoNo, %struct.DMCoNo* %231, i64 %idxprom301, !dbg !7604
  %co303 = getelementptr inbounds %struct.DMCoNo, %struct.DMCoNo* %arrayidx302, i32 0, i32 0, !dbg !7604
  %arraydecay304 = getelementptr inbounds [3 x float], [3 x float]* %co303, i64 0, i64 0, !dbg !7604
  %arraydecay305 = getelementptr inbounds [2 x float], [2 x float]* %mval, i64 0, i64 0, !dbg !7604
  %233 = load float, float* %brush_size_pressure, align 4, !dbg !7604
  %call306 = call float @calc_vp_strength_col_dl(%struct.VPaint* %228, %struct.ViewContext* %229, float* %arraydecay304, float* %arraydecay305, float %233, float* null), !dbg !7604
  store float %call306, float* %fac299, align 4, !dbg !7604
  %234 = load float, float* %fac299, align 4, !dbg !7606
  %cmp307 = fcmp ogt float %234, 0.000000e+00, !dbg !7606
  br i1 %cmp307, label %if.then309, label %if.end325, !dbg !7604

if.then309:                                       ; preds = %for.body297
  call void @llvm.dbg.declare(metadata %struct.MDeformWeight** %dw310, metadata !7608, metadata !DIExpression()), !dbg !7610
  %235 = load %struct.MDeformWeight* (%struct.MDeformVert*, i32)*, %struct.MDeformWeight* (%struct.MDeformVert*, i32)** %dw_func, align 8, !dbg !7610
  %236 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !7610
  %dvert311 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %236, i32 0, i32 17, !dbg !7610
  %237 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert311, align 8, !dbg !7610
  %238 = load i32, i32* %vidx298, align 4, !dbg !7610
  %idxprom312 = zext i32 %238 to i64, !dbg !7610
  %arrayidx313 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %237, i64 %idxprom312, !dbg !7610
  %vgroup_active314 = getelementptr inbounds %struct.WeightPaintInfo, %struct.WeightPaintInfo* %wpi, i32 0, i32 3, !dbg !7610
  %239 = load i32, i32* %vgroup_active314, align 4, !dbg !7610
  %call315 = call %struct.MDeformWeight* %235(%struct.MDeformVert* %arrayidx313, i32 %239), !dbg !7610
  store %struct.MDeformWeight* %call315, %struct.MDeformWeight** %dw310, align 8, !dbg !7610
  %240 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw310, align 8, !dbg !7610
  %tobool316 = icmp ne %struct.MDeformWeight* %240, null, !dbg !7610
  br i1 %tobool316, label %cond.true317, label %cond.false320, !dbg !7610

cond.true317:                                     ; preds = %if.then309
  %241 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw310, align 8, !dbg !7610
  %weight318 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %241, i32 0, i32 1, !dbg !7610
  %242 = load float, float* %weight318, align 4, !dbg !7610
  %243 = load float, float* %fac299, align 4, !dbg !7610
  %mul319 = fmul float %242, %243, !dbg !7610
  br label %cond.end321, !dbg !7610

cond.false320:                                    ; preds = %if.then309
  br label %cond.end321, !dbg !7610

cond.end321:                                      ; preds = %cond.false320, %cond.true317
  %cond322 = phi float [ %mul319, %cond.true317 ], [ 0.000000e+00, %cond.false320 ], !dbg !7610
  %244 = load float, float* %paintweight, align 4, !dbg !7610
  %add323 = fadd float %244, %cond322, !dbg !7610
  store float %add323, float* %paintweight, align 4, !dbg !7610
  %245 = load float, float* %fac299, align 4, !dbg !7610
  %246 = load float, float* %totw, align 4, !dbg !7610
  %add324 = fadd float %246, %245, !dbg !7610
  store float %add324, float* %totw, align 4, !dbg !7610
  br label %if.end325, !dbg !7610

if.end325:                                        ; preds = %cond.end321, %for.body297
  br label %for.inc326, !dbg !7611

for.inc326:                                       ; preds = %if.end325
  %247 = load i32, i32* %i253, align 4, !dbg !7612
  %inc327 = add i32 %247, 1, !dbg !7612
  store i32 %inc327, i32* %i253, align 4, !dbg !7612
  br label %for.cond294, !dbg !7613, !llvm.loop !7614

for.end328:                                       ; preds = %for.cond294
  br label %if.end329, !dbg !7616

if.end329:                                        ; preds = %for.end328, %if.end288
  br label %if.end330

if.end330:                                        ; preds = %if.end329, %for.end250
  %248 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !7617
  %vertexpaint_tool331 = getelementptr inbounds %struct.Brush, %struct.Brush* %248, i32 0, i32 35, !dbg !7619
  %249 = load i8, i8* %vertexpaint_tool331, align 1, !dbg !7619
  %conv332 = zext i8 %249 to i32, !dbg !7617
  %cmp333 = icmp eq i32 %conv332, 4, !dbg !7620
  br i1 %cmp333, label %if.then335, label %if.end336, !dbg !7621

if.then335:                                       ; preds = %if.end330
  %250 = load float, float* %totw, align 4, !dbg !7622
  %251 = load float, float* %paintweight, align 4, !dbg !7624
  %div = fdiv float %251, %250, !dbg !7624
  store float %div, float* %paintweight, align 4, !dbg !7624
  br label %if.end336, !dbg !7625

if.end336:                                        ; preds = %if.then335, %if.end330
  %252 = load i8, i8* %use_depth, align 1, !dbg !7626
  %tobool337 = icmp ne i8 %252, 0, !dbg !7626
  br i1 %tobool337, label %if.then338, label %if.else401, !dbg !7628

if.then338:                                       ; preds = %if.end336
  store i32 0, i32* %index, align 4, !dbg !7629
  br label %for.cond339, !dbg !7632

for.cond339:                                      ; preds = %for.inc398, %if.then338
  %253 = load i32, i32* %index, align 4, !dbg !7633
  %254 = load i32, i32* %totindex, align 4, !dbg !7635
  %cmp340 = icmp ult i32 %253, %254, !dbg !7636
  br i1 %cmp340, label %for.body342, label %for.end400, !dbg !7637

for.body342:                                      ; preds = %for.cond339
  %255 = load i32*, i32** %indexar, align 8, !dbg !7638
  %256 = load i32, i32* %index, align 4, !dbg !7641
  %idxprom343 = zext i32 %256 to i64, !dbg !7638
  %arrayidx344 = getelementptr inbounds i32, i32* %255, i64 %idxprom343, !dbg !7638
  %257 = load i32, i32* %arrayidx344, align 4, !dbg !7638
  %tobool345 = icmp ne i32 %257, 0, !dbg !7638
  br i1 %tobool345, label %land.lhs.true346, label %if.end397, !dbg !7642

land.lhs.true346:                                 ; preds = %for.body342
  %258 = load i32*, i32** %indexar, align 8, !dbg !7643
  %259 = load i32, i32* %index, align 4, !dbg !7644
  %idxprom347 = zext i32 %259 to i64, !dbg !7643
  %arrayidx348 = getelementptr inbounds i32, i32* %258, i64 %idxprom347, !dbg !7643
  %260 = load i32, i32* %arrayidx348, align 4, !dbg !7643
  %261 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !7645
  %totpoly349 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %261, i32 0, i32 30, !dbg !7646
  %262 = load i32, i32* %totpoly349, align 8, !dbg !7646
  %cmp350 = icmp sle i32 %260, %262, !dbg !7647
  br i1 %cmp350, label %if.then352, label %if.end397, !dbg !7648

if.then352:                                       ; preds = %land.lhs.true346
  call void @llvm.dbg.declare(metadata %struct.MPoly** %mpoly353, metadata !7649, metadata !DIExpression()), !dbg !7651
  %263 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !7652
  %mpoly354 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %263, i32 0, i32 7, !dbg !7653
  %264 = load %struct.MPoly*, %struct.MPoly** %mpoly354, align 8, !dbg !7653
  %265 = load i32*, i32** %indexar, align 8, !dbg !7654
  %266 = load i32, i32* %index, align 4, !dbg !7655
  %idxprom355 = zext i32 %266 to i64, !dbg !7654
  %arrayidx356 = getelementptr inbounds i32, i32* %265, i64 %idxprom355, !dbg !7654
  %267 = load i32, i32* %arrayidx356, align 4, !dbg !7654
  %sub357 = sub nsw i32 %267, 1, !dbg !7656
  %idx.ext358 = sext i32 %sub357 to i64, !dbg !7657
  %add.ptr359 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %264, i64 %idx.ext358, !dbg !7657
  store %struct.MPoly* %add.ptr359, %struct.MPoly** %mpoly353, align 8, !dbg !7651
  call void @llvm.dbg.declare(metadata %struct.MLoop** %ml360, metadata !7658, metadata !DIExpression()), !dbg !7659
  %268 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !7660
  %mloop361 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %268, i32 0, i32 9, !dbg !7661
  %269 = load %struct.MLoop*, %struct.MLoop** %mloop361, align 8, !dbg !7661
  %270 = load %struct.MPoly*, %struct.MPoly** %mpoly353, align 8, !dbg !7662
  %loopstart362 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %270, i32 0, i32 0, !dbg !7663
  %271 = load i32, i32* %loopstart362, align 4, !dbg !7663
  %idx.ext363 = sext i32 %271 to i64, !dbg !7664
  %add.ptr364 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %269, i64 %idx.ext363, !dbg !7664
  store %struct.MLoop* %add.ptr364, %struct.MLoop** %ml360, align 8, !dbg !7659
  call void @llvm.dbg.declare(metadata i32* %i365, metadata !7665, metadata !DIExpression()), !dbg !7666
  store i32 0, i32* %i365, align 4, !dbg !7667
  br label %for.cond366, !dbg !7669

for.cond366:                                      ; preds = %for.inc393, %if.then352
  %272 = load i32, i32* %i365, align 4, !dbg !7670
  %273 = load %struct.MPoly*, %struct.MPoly** %mpoly353, align 8, !dbg !7672
  %totloop367 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %273, i32 0, i32 1, !dbg !7673
  %274 = load i32, i32* %totloop367, align 4, !dbg !7673
  %cmp368 = icmp slt i32 %272, %274, !dbg !7674
  br i1 %cmp368, label %for.body370, label %for.end396, !dbg !7675

for.body370:                                      ; preds = %for.cond366
  call void @llvm.dbg.declare(metadata i32* %vidx371, metadata !7676, metadata !DIExpression()), !dbg !7679
  %275 = load %struct.MLoop*, %struct.MLoop** %ml360, align 8, !dbg !7679
  %v372 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %275, i32 0, i32 0, !dbg !7679
  %276 = load i32, i32* %v372, align 4, !dbg !7679
  store i32 %276, i32* %vidx371, align 4, !dbg !7679
  %277 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !7680
  %dvert373 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %277, i32 0, i32 17, !dbg !7680
  %278 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert373, align 8, !dbg !7680
  %279 = load i32, i32* %vidx371, align 4, !dbg !7680
  %idxprom374 = zext i32 %279 to i64, !dbg !7680
  %arrayidx375 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %278, i64 %idxprom374, !dbg !7680
  %flag376 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %arrayidx375, i32 0, i32 2, !dbg !7680
  %280 = load i32, i32* %flag376, align 4, !dbg !7680
  %tobool377 = icmp ne i32 %280, 0, !dbg !7680
  br i1 %tobool377, label %if.then378, label %if.end392, !dbg !7679

if.then378:                                       ; preds = %for.body370
  %281 = load %struct.VPaint*, %struct.VPaint** %wp, align 8, !dbg !7682
  %282 = load %struct.ViewContext*, %struct.ViewContext** %vc, align 8, !dbg !7682
  %283 = load %struct.WPaintData*, %struct.WPaintData** %wpd, align 8, !dbg !7682
  %wpimat = getelementptr inbounds %struct.WPaintData, %struct.WPaintData* %283, i32 0, i32 6, !dbg !7682
  %arraydecay379 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %wpimat, i64 0, i64 0, !dbg !7682
  %284 = load %struct.WPaintData*, %struct.WPaintData** %wpd, align 8, !dbg !7682
  %vertexcosnos380 = getelementptr inbounds %struct.WPaintData, %struct.WPaintData* %284, i32 0, i32 5, !dbg !7682
  %285 = load %struct.DMCoNo*, %struct.DMCoNo** %vertexcosnos380, align 8, !dbg !7682
  %286 = load i32, i32* %vidx371, align 4, !dbg !7682
  %idxprom381 = zext i32 %286 to i64, !dbg !7682
  %arrayidx382 = getelementptr inbounds %struct.DMCoNo, %struct.DMCoNo* %285, i64 %idxprom381, !dbg !7682
  %arraydecay383 = getelementptr inbounds [2 x float], [2 x float]* %mval, i64 0, i64 0, !dbg !7682
  %287 = load float, float* %brush_size_pressure, align 4, !dbg !7682
  %288 = load float, float* %brush_alpha_pressure, align 4, !dbg !7682
  %call384 = call float @calc_vp_alpha_col_dl(%struct.VPaint* %281, %struct.ViewContext* %282, [3 x float]* %arraydecay379, %struct.DMCoNo* %arrayidx382, float* %arraydecay383, float %287, float %288, float* null), !dbg !7682
  store float %call384, float* %alpha, align 4, !dbg !7682
  %289 = load float, float* %alpha, align 4, !dbg !7684
  %tobool385 = fcmp une float %289, 0.000000e+00, !dbg !7684
  br i1 %tobool385, label %if.then386, label %if.end387, !dbg !7682

if.then386:                                       ; preds = %if.then378
  %290 = load %struct.VPaint*, %struct.VPaint** %wp, align 8, !dbg !7686
  %291 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !7686
  %292 = load i32, i32* %vidx371, align 4, !dbg !7686
  %293 = load float, float* %alpha, align 4, !dbg !7686
  %294 = load float, float* %paintweight, align 4, !dbg !7686
  call void @do_weight_paint_vertex(%struct.VPaint* %290, %struct.Object* %291, %struct.WeightPaintInfo* %wpi, i32 %292, float %293, float %294), !dbg !7686
  br label %if.end387, !dbg !7686

if.end387:                                        ; preds = %if.then386, %if.then378
  %295 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !7682
  %dvert388 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %295, i32 0, i32 17, !dbg !7682
  %296 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert388, align 8, !dbg !7682
  %297 = load i32, i32* %vidx371, align 4, !dbg !7682
  %idxprom389 = zext i32 %297 to i64, !dbg !7682
  %arrayidx390 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %296, i64 %idxprom389, !dbg !7682
  %flag391 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %arrayidx390, i32 0, i32 2, !dbg !7682
  store i32 0, i32* %flag391, align 4, !dbg !7682
  br label %if.end392, !dbg !7682

if.end392:                                        ; preds = %if.end387, %for.body370
  br label %for.inc393, !dbg !7688

for.inc393:                                       ; preds = %if.end392
  %298 = load i32, i32* %i365, align 4, !dbg !7689
  %inc394 = add nsw i32 %298, 1, !dbg !7689
  store i32 %inc394, i32* %i365, align 4, !dbg !7689
  %299 = load %struct.MLoop*, %struct.MLoop** %ml360, align 8, !dbg !7690
  %incdec.ptr395 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %299, i32 1, !dbg !7690
  store %struct.MLoop* %incdec.ptr395, %struct.MLoop** %ml360, align 8, !dbg !7690
  br label %for.cond366, !dbg !7691, !llvm.loop !7692

for.end396:                                       ; preds = %for.cond366
  br label %if.end397, !dbg !7694

if.end397:                                        ; preds = %for.end396, %land.lhs.true346, %for.body342
  br label %for.inc398, !dbg !7695

for.inc398:                                       ; preds = %if.end397
  %300 = load i32, i32* %index, align 4, !dbg !7696
  %inc399 = add i32 %300, 1, !dbg !7696
  store i32 %inc399, i32* %index, align 4, !dbg !7696
  br label %for.cond339, !dbg !7697, !llvm.loop !7698

for.end400:                                       ; preds = %for.cond339
  br label %if.end434, !dbg !7700

if.else401:                                       ; preds = %if.end336
  call void @llvm.dbg.declare(metadata i32* %totvert402, metadata !7701, metadata !DIExpression()), !dbg !7703
  %301 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !7704
  %totvert403 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %301, i32 0, i32 26, !dbg !7705
  %302 = load i32, i32* %totvert403, align 8, !dbg !7705
  store i32 %302, i32* %totvert402, align 4, !dbg !7703
  call void @llvm.dbg.declare(metadata i32* %i404, metadata !7706, metadata !DIExpression()), !dbg !7707
  store i32 0, i32* %i404, align 4, !dbg !7708
  br label %for.cond405, !dbg !7710

for.cond405:                                      ; preds = %for.inc431, %if.else401
  %303 = load i32, i32* %i404, align 4, !dbg !7711
  %304 = load i32, i32* %totvert402, align 4, !dbg !7713
  %cmp406 = icmp ult i32 %303, %304, !dbg !7714
  br i1 %cmp406, label %for.body408, label %for.end433, !dbg !7715

for.body408:                                      ; preds = %for.cond405
  call void @llvm.dbg.declare(metadata i32* %vidx409, metadata !7716, metadata !DIExpression()), !dbg !7719
  %305 = load i32, i32* %i404, align 4, !dbg !7719
  store i32 %305, i32* %vidx409, align 4, !dbg !7719
  %306 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !7720
  %dvert410 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %306, i32 0, i32 17, !dbg !7720
  %307 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert410, align 8, !dbg !7720
  %308 = load i32, i32* %vidx409, align 4, !dbg !7720
  %idxprom411 = zext i32 %308 to i64, !dbg !7720
  %arrayidx412 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %307, i64 %idxprom411, !dbg !7720
  %flag413 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %arrayidx412, i32 0, i32 2, !dbg !7720
  %309 = load i32, i32* %flag413, align 4, !dbg !7720
  %tobool414 = icmp ne i32 %309, 0, !dbg !7720
  br i1 %tobool414, label %if.then415, label %if.end430, !dbg !7719

if.then415:                                       ; preds = %for.body408
  %310 = load %struct.VPaint*, %struct.VPaint** %wp, align 8, !dbg !7722
  %311 = load %struct.ViewContext*, %struct.ViewContext** %vc, align 8, !dbg !7722
  %312 = load %struct.WPaintData*, %struct.WPaintData** %wpd, align 8, !dbg !7722
  %wpimat416 = getelementptr inbounds %struct.WPaintData, %struct.WPaintData* %312, i32 0, i32 6, !dbg !7722
  %arraydecay417 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %wpimat416, i64 0, i64 0, !dbg !7722
  %313 = load %struct.WPaintData*, %struct.WPaintData** %wpd, align 8, !dbg !7722
  %vertexcosnos418 = getelementptr inbounds %struct.WPaintData, %struct.WPaintData* %313, i32 0, i32 5, !dbg !7722
  %314 = load %struct.DMCoNo*, %struct.DMCoNo** %vertexcosnos418, align 8, !dbg !7722
  %315 = load i32, i32* %vidx409, align 4, !dbg !7722
  %idxprom419 = zext i32 %315 to i64, !dbg !7722
  %arrayidx420 = getelementptr inbounds %struct.DMCoNo, %struct.DMCoNo* %314, i64 %idxprom419, !dbg !7722
  %arraydecay421 = getelementptr inbounds [2 x float], [2 x float]* %mval, i64 0, i64 0, !dbg !7722
  %316 = load float, float* %brush_size_pressure, align 4, !dbg !7722
  %317 = load float, float* %brush_alpha_pressure, align 4, !dbg !7722
  %call422 = call float @calc_vp_alpha_col_dl(%struct.VPaint* %310, %struct.ViewContext* %311, [3 x float]* %arraydecay417, %struct.DMCoNo* %arrayidx420, float* %arraydecay421, float %316, float %317, float* null), !dbg !7722
  store float %call422, float* %alpha, align 4, !dbg !7722
  %318 = load float, float* %alpha, align 4, !dbg !7724
  %tobool423 = fcmp une float %318, 0.000000e+00, !dbg !7724
  br i1 %tobool423, label %if.then424, label %if.end425, !dbg !7722

if.then424:                                       ; preds = %if.then415
  %319 = load %struct.VPaint*, %struct.VPaint** %wp, align 8, !dbg !7726
  %320 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !7726
  %321 = load i32, i32* %vidx409, align 4, !dbg !7726
  %322 = load float, float* %alpha, align 4, !dbg !7726
  %323 = load float, float* %paintweight, align 4, !dbg !7726
  call void @do_weight_paint_vertex(%struct.VPaint* %319, %struct.Object* %320, %struct.WeightPaintInfo* %wpi, i32 %321, float %322, float %323), !dbg !7726
  br label %if.end425, !dbg !7726

if.end425:                                        ; preds = %if.then424, %if.then415
  %324 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !7722
  %dvert426 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %324, i32 0, i32 17, !dbg !7722
  %325 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert426, align 8, !dbg !7722
  %326 = load i32, i32* %vidx409, align 4, !dbg !7722
  %idxprom427 = zext i32 %326 to i64, !dbg !7722
  %arrayidx428 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %325, i64 %idxprom427, !dbg !7722
  %flag429 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %arrayidx428, i32 0, i32 2, !dbg !7722
  store i32 0, i32* %flag429, align 4, !dbg !7722
  br label %if.end430, !dbg !7722

if.end430:                                        ; preds = %if.end425, %for.body408
  br label %for.inc431, !dbg !7728

for.inc431:                                       ; preds = %if.end430
  %327 = load i32, i32* %i404, align 4, !dbg !7729
  %inc432 = add i32 %327, 1, !dbg !7729
  store i32 %inc432, i32* %i404, align 4, !dbg !7729
  br label %for.cond405, !dbg !7730, !llvm.loop !7731

for.end433:                                       ; preds = %for.cond405
  br label %if.end434

if.end434:                                        ; preds = %for.end433, %for.end400
  %328 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !7733
  %defbase_sel435 = getelementptr inbounds %struct.WeightPaintInfo, %struct.WeightPaintInfo* %wpi, i32 0, i32 6, !dbg !7734
  %329 = load i8*, i8** %defbase_sel435, align 8, !dbg !7734
  call void %328(i8* %329), !dbg !7733
  %330 = load %struct.ViewContext*, %struct.ViewContext** %vc, align 8, !dbg !7735
  %rv3d436 = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %330, i32 0, i32 5, !dbg !7736
  %331 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d436, align 8, !dbg !7736
  %persmat437 = getelementptr inbounds %struct.RegionView3D, %struct.RegionView3D* %331, i32 0, i32 3, !dbg !7737
  %arraydecay438 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %persmat437, i64 0, i64 0, !dbg !7735
  %arraydecay439 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 0, !dbg !7738
  call void @swap_m4m4([4 x float]* %arraydecay438, [4 x float]* %arraydecay439), !dbg !7739
  %332 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !7740
  %data440 = getelementptr inbounds %struct.Object, %struct.Object* %332, i32 0, i32 19, !dbg !7741
  %333 = load i8*, i8** %data440, align 8, !dbg !7741
  %334 = bitcast i8* %333 to %struct.ID*, !dbg !7740
  call void @DAG_id_tag_update(%struct.ID* %334, i16 signext 0), !dbg !7742
  %335 = load %struct.ViewContext*, %struct.ViewContext** %vc, align 8, !dbg !7743
  %ar441 = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %335, i32 0, i32 3, !dbg !7744
  %336 = load %struct.ARegion*, %struct.ARegion** %ar441, align 8, !dbg !7744
  call void @ED_region_tag_redraw(%struct.ARegion* %336), !dbg !7745
  br label %return, !dbg !7746

return:                                           ; preds = %if.end434, %if.then
  ret void, !dbg !7746
}

; Function Attrs: noinline nounwind uwtable
define internal void @wpaint_stroke_done(%struct.bContext* %C, %struct.PaintStroke* %stroke) #0 !dbg !7747 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %stroke.addr = alloca %struct.PaintStroke*, align 8
  %ts = alloca %struct.ToolSettings*, align 8
  %ob = alloca %struct.Object*, align 8
  %wpd = alloca %struct.WPaintData*, align 8
  %psys = alloca %struct.ParticleSystem*, align 8
  %i = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !7752, metadata !DIExpression()), !dbg !7753
  store %struct.PaintStroke* %stroke, %struct.PaintStroke** %stroke.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PaintStroke** %stroke.addr, metadata !7754, metadata !DIExpression()), !dbg !7755
  call void @llvm.dbg.declare(metadata %struct.ToolSettings** %ts, metadata !7756, metadata !DIExpression()), !dbg !7757
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7758
  %call = call %struct.ToolSettings* @CTX_data_tool_settings(%struct.bContext* %0), !dbg !7759
  store %struct.ToolSettings* %call, %struct.ToolSettings** %ts, align 8, !dbg !7757
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !7760, metadata !DIExpression()), !dbg !7761
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7762
  %call1 = call %struct.Object* @CTX_data_active_object(%struct.bContext* %1), !dbg !7763
  store %struct.Object* %call1, %struct.Object** %ob, align 8, !dbg !7761
  call void @llvm.dbg.declare(metadata %struct.WPaintData** %wpd, metadata !7764, metadata !DIExpression()), !dbg !7765
  %2 = load %struct.PaintStroke*, %struct.PaintStroke** %stroke.addr, align 8, !dbg !7766
  %call2 = call i8* @paint_stroke_mode_data(%struct.PaintStroke* %2), !dbg !7767
  %3 = bitcast i8* %call2 to %struct.WPaintData*, !dbg !7767
  store %struct.WPaintData* %3, %struct.WPaintData** %wpd, align 8, !dbg !7765
  %4 = load %struct.WPaintData*, %struct.WPaintData** %wpd, align 8, !dbg !7768
  %tobool = icmp ne %struct.WPaintData* %4, null, !dbg !7768
  br i1 %tobool, label %if.then, label %if.end10, !dbg !7770

if.then:                                          ; preds = %entry
  %5 = load %struct.WPaintData*, %struct.WPaintData** %wpd, align 8, !dbg !7771
  %vp_handle = getelementptr inbounds %struct.WPaintData, %struct.WPaintData* %5, i32 0, i32 4, !dbg !7773
  %6 = load i8*, i8** %vp_handle, align 8, !dbg !7773
  %7 = bitcast i8* %6 to %struct.VertProjHandle*, !dbg !7771
  call void @ED_vpaint_proj_handle_free(%struct.VertProjHandle* %7), !dbg !7774
  %8 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !7775
  %9 = load %struct.WPaintData*, %struct.WPaintData** %wpd, align 8, !dbg !7776
  %indexar = getelementptr inbounds %struct.WPaintData, %struct.WPaintData* %9, i32 0, i32 1, !dbg !7777
  %10 = load i32*, i32** %indexar, align 8, !dbg !7777
  %11 = bitcast i32* %10 to i8*, !dbg !7776
  call void %8(i8* %11), !dbg !7775
  %12 = load %struct.WPaintData*, %struct.WPaintData** %wpd, align 8, !dbg !7778
  %vgroup_validmap = getelementptr inbounds %struct.WPaintData, %struct.WPaintData* %12, i32 0, i32 7, !dbg !7780
  %13 = load i8*, i8** %vgroup_validmap, align 8, !dbg !7780
  %tobool3 = icmp ne i8* %13, null, !dbg !7778
  br i1 %tobool3, label %if.then4, label %if.end, !dbg !7781

if.then4:                                         ; preds = %if.then
  %14 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !7782
  %15 = load %struct.WPaintData*, %struct.WPaintData** %wpd, align 8, !dbg !7783
  %vgroup_validmap5 = getelementptr inbounds %struct.WPaintData, %struct.WPaintData* %15, i32 0, i32 7, !dbg !7784
  %16 = load i8*, i8** %vgroup_validmap5, align 8, !dbg !7784
  call void %14(i8* %16), !dbg !7782
  br label %if.end, !dbg !7782

if.end:                                           ; preds = %if.then4, %if.then
  %17 = load %struct.WPaintData*, %struct.WPaintData** %wpd, align 8, !dbg !7785
  %lock_flags = getelementptr inbounds %struct.WPaintData, %struct.WPaintData* %17, i32 0, i32 8, !dbg !7787
  %18 = load i8*, i8** %lock_flags, align 8, !dbg !7787
  %tobool6 = icmp ne i8* %18, null, !dbg !7785
  br i1 %tobool6, label %if.then7, label %if.end9, !dbg !7788

if.then7:                                         ; preds = %if.end
  %19 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !7789
  %20 = load %struct.WPaintData*, %struct.WPaintData** %wpd, align 8, !dbg !7790
  %lock_flags8 = getelementptr inbounds %struct.WPaintData, %struct.WPaintData* %20, i32 0, i32 8, !dbg !7791
  %21 = load i8*, i8** %lock_flags8, align 8, !dbg !7791
  call void %19(i8* %21), !dbg !7789
  br label %if.end9, !dbg !7789

if.end9:                                          ; preds = %if.then7, %if.end
  %22 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !7792
  %23 = load %struct.WPaintData*, %struct.WPaintData** %wpd, align 8, !dbg !7793
  %24 = bitcast %struct.WPaintData* %23 to i8*, !dbg !7793
  call void %22(i8* %24), !dbg !7792
  br label %if.end10, !dbg !7794

if.end10:                                         ; preds = %if.end9, %entry
  %25 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !7795
  %wpaint = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %25, i32 0, i32 1, !dbg !7796
  %26 = load %struct.VPaint*, %struct.VPaint** %wpaint, align 8, !dbg !7796
  call void @copy_wpaint_prev(%struct.VPaint* %26, %struct.MDeformVert* null, i32 0), !dbg !7797
  %27 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !7798
  %particlesystem = getelementptr inbounds %struct.Object, %struct.Object* %27, i32 0, i32 109, !dbg !7800
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %particlesystem, i32 0, i32 0, !dbg !7801
  %28 = load i8*, i8** %first, align 8, !dbg !7801
  %tobool11 = icmp ne i8* %28, null, !dbg !7798
  br i1 %tobool11, label %if.then12, label %if.end27, !dbg !7802

if.then12:                                        ; preds = %if.end10
  call void @llvm.dbg.declare(metadata %struct.ParticleSystem** %psys, metadata !7803, metadata !DIExpression()), !dbg !8165
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8166, metadata !DIExpression()), !dbg !8167
  %29 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8168
  %particlesystem13 = getelementptr inbounds %struct.Object, %struct.Object* %29, i32 0, i32 109, !dbg !8170
  %first14 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %particlesystem13, i32 0, i32 0, !dbg !8171
  %30 = load i8*, i8** %first14, align 8, !dbg !8171
  %31 = bitcast i8* %30 to %struct.ParticleSystem*, !dbg !8168
  store %struct.ParticleSystem* %31, %struct.ParticleSystem** %psys, align 8, !dbg !8172
  br label %for.cond, !dbg !8173

for.cond:                                         ; preds = %for.inc25, %if.then12
  %32 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !8174
  %tobool15 = icmp ne %struct.ParticleSystem* %32, null, !dbg !8176
  br i1 %tobool15, label %for.body, label %for.end26, !dbg !8176

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !8177
  br label %for.cond16, !dbg !8180

for.cond16:                                       ; preds = %for.inc, %for.body
  %33 = load i32, i32* %i, align 4, !dbg !8181
  %cmp = icmp slt i32 %33, 12, !dbg !8183
  br i1 %cmp, label %for.body17, label %for.end, !dbg !8184

for.body17:                                       ; preds = %for.cond16
  %34 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !8185
  %vgroup = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %34, i32 0, i32 36, !dbg !8188
  %35 = load i32, i32* %i, align 4, !dbg !8189
  %idxprom = sext i32 %35 to i64, !dbg !8185
  %arrayidx = getelementptr inbounds [12 x i16], [12 x i16]* %vgroup, i64 0, i64 %idxprom, !dbg !8185
  %36 = load i16, i16* %arrayidx, align 2, !dbg !8185
  %conv = sext i16 %36 to i32, !dbg !8185
  %37 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8190
  %actdef = getelementptr inbounds %struct.Object, %struct.Object* %37, i32 0, i32 97, !dbg !8191
  %38 = load i16, i16* %actdef, align 2, !dbg !8191
  %conv18 = zext i16 %38 to i32, !dbg !8190
  %cmp19 = icmp eq i32 %conv, %conv18, !dbg !8192
  br i1 %cmp19, label %if.then21, label %if.end24, !dbg !8193

if.then21:                                        ; preds = %for.body17
  %39 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !8194
  %recalc = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %39, i32 0, i32 31, !dbg !8196
  %40 = load i16, i16* %recalc, align 4, !dbg !8197
  %conv22 = sext i16 %40 to i32, !dbg !8197
  %or = or i32 %conv22, 16, !dbg !8197
  %conv23 = trunc i32 %or to i16, !dbg !8197
  store i16 %conv23, i16* %recalc, align 4, !dbg !8197
  br label %for.end, !dbg !8198

if.end24:                                         ; preds = %for.body17
  br label %for.inc, !dbg !8199

for.inc:                                          ; preds = %if.end24
  %41 = load i32, i32* %i, align 4, !dbg !8200
  %inc = add nsw i32 %41, 1, !dbg !8200
  store i32 %inc, i32* %i, align 4, !dbg !8200
  br label %for.cond16, !dbg !8201, !llvm.loop !8202

for.end:                                          ; preds = %if.then21, %for.cond16
  br label %for.inc25, !dbg !8204

for.inc25:                                        ; preds = %for.end
  %42 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !8205
  %next = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %42, i32 0, i32 0, !dbg !8206
  %43 = load %struct.ParticleSystem*, %struct.ParticleSystem** %next, align 8, !dbg !8206
  store %struct.ParticleSystem* %43, %struct.ParticleSystem** %psys, align 8, !dbg !8207
  br label %for.cond, !dbg !8208, !llvm.loop !8209

for.end26:                                        ; preds = %for.cond
  br label %if.end27, !dbg !8211

if.end27:                                         ; preds = %for.end26, %if.end10
  %44 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8212
  %data = getelementptr inbounds %struct.Object, %struct.Object* %44, i32 0, i32 19, !dbg !8213
  %45 = load i8*, i8** %data, align 8, !dbg !8213
  %46 = bitcast i8* %45 to %struct.ID*, !dbg !8212
  call void @DAG_id_tag_update(%struct.ID* %46, i16 signext 0), !dbg !8214
  %47 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8215
  %48 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8216
  %49 = bitcast %struct.Object* %48 to i8*, !dbg !8216
  call void @WM_event_add_notifier(%struct.bContext* %47, i32 85393408, i8* %49), !dbg !8217
  ret void, !dbg !8218
}

declare dso_local void @paint_stroke_data_free(%struct.wmOperator*) #2

declare dso_local %struct.wmEventHandler* @WM_event_add_modal_handler(%struct.bContext*, %struct.wmOperator*) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @wpaint_ensure_data(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !8219 {
entry:
  %retval = alloca i8, align 1
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %scene = alloca %struct.Scene*, align 8
  %ob = alloca %struct.Object*, align 8
  %me = alloca %struct.Mesh*, align 8
  %modob = alloca %struct.Object*, align 8
  %actbone = alloca %struct.Bone*, align 8
  %pchan = alloca %struct.bPoseChannel*, align 8
  %dg = alloca %struct.bDeformGroup*, align 8
  %actdef30 = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !8222, metadata !DIExpression()), !dbg !8223
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !8224, metadata !DIExpression()), !dbg !8225
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene, metadata !8226, metadata !DIExpression()), !dbg !8227
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8228
  %call = call %struct.Scene* @CTX_data_scene(%struct.bContext* %0), !dbg !8229
  store %struct.Scene* %call, %struct.Scene** %scene, align 8, !dbg !8227
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !8230, metadata !DIExpression()), !dbg !8231
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8232
  %call1 = call %struct.Object* @CTX_data_active_object(%struct.bContext* %1), !dbg !8233
  store %struct.Object* %call1, %struct.Object** %ob, align 8, !dbg !8231
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me, metadata !8234, metadata !DIExpression()), !dbg !8235
  %2 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8236
  %call2 = call %struct.Mesh* @BKE_mesh_from_object(%struct.Object* %2), !dbg !8237
  store %struct.Mesh* %call2, %struct.Mesh** %me, align 8, !dbg !8235
  %3 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !8238
  %obedit = getelementptr inbounds %struct.Scene, %struct.Scene* %3, i32 0, i32 7, !dbg !8240
  %4 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !8240
  %tobool = icmp ne %struct.Object* %4, null, !dbg !8238
  br i1 %tobool, label %if.then, label %if.end, !dbg !8241

if.then:                                          ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !8242
  br label %return, !dbg !8242

if.end:                                           ; preds = %entry
  %5 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !8244
  %cmp = icmp eq %struct.Mesh* %5, null, !dbg !8246
  br i1 %cmp, label %if.then4, label %lor.lhs.false, !dbg !8247

lor.lhs.false:                                    ; preds = %if.end
  %6 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !8248
  %totpoly = getelementptr inbounds %struct.Mesh, %struct.Mesh* %6, i32 0, i32 30, !dbg !8249
  %7 = load i32, i32* %totpoly, align 8, !dbg !8249
  %cmp3 = icmp eq i32 %7, 0, !dbg !8250
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !8251

if.then4:                                         ; preds = %lor.lhs.false, %if.end
  store i8 0, i8* %retval, align 1, !dbg !8252
  br label %return, !dbg !8252

if.end5:                                          ; preds = %lor.lhs.false
  %8 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !8254
  %dvert = getelementptr inbounds %struct.Mesh, %struct.Mesh* %8, i32 0, i32 17, !dbg !8256
  %9 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert, align 8, !dbg !8256
  %tobool6 = icmp ne %struct.MDeformVert* %9, null, !dbg !8254
  br i1 %tobool6, label %if.end9, label %if.then7, !dbg !8257

if.then7:                                         ; preds = %if.end5
  %10 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !8258
  %id = getelementptr inbounds %struct.Mesh, %struct.Mesh* %10, i32 0, i32 0, !dbg !8260
  %call8 = call zeroext i8 @ED_vgroup_data_create(%struct.ID* %id), !dbg !8261
  %11 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8262
  %12 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !8263
  %13 = bitcast %struct.Mesh* %12 to i8*, !dbg !8263
  call void @WM_event_add_notifier(%struct.bContext* %11, i32 274399232, i8* %13), !dbg !8264
  br label %if.end9, !dbg !8265

if.end9:                                          ; preds = %if.then7, %if.end5
  %14 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8266
  %actdef = getelementptr inbounds %struct.Object, %struct.Object* %14, i32 0, i32 97, !dbg !8268
  %15 = load i16, i16* %actdef, align 2, !dbg !8268
  %conv = zext i16 %15 to i32, !dbg !8266
  %cmp10 = icmp sle i32 %conv, 0, !dbg !8269
  br i1 %cmp10, label %if.then12, label %if.end38, !dbg !8270

if.then12:                                        ; preds = %if.end9
  call void @llvm.dbg.declare(metadata %struct.Object** %modob, metadata !8271, metadata !DIExpression()), !dbg !8273
  %16 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8274
  %call13 = call %struct.Object* @modifiers_isDeformedByArmature(%struct.Object* %16), !dbg !8276
  store %struct.Object* %call13, %struct.Object** %modob, align 8, !dbg !8277
  %tobool14 = icmp ne %struct.Object* %call13, null, !dbg !8277
  br i1 %tobool14, label %if.then15, label %if.end37, !dbg !8278

if.then15:                                        ; preds = %if.then12
  call void @llvm.dbg.declare(metadata %struct.Bone** %actbone, metadata !8279, metadata !DIExpression()), !dbg !8281
  %17 = load %struct.Object*, %struct.Object** %modob, align 8, !dbg !8282
  %data = getelementptr inbounds %struct.Object, %struct.Object* %17, i32 0, i32 19, !dbg !8283
  %18 = load i8*, i8** %data, align 8, !dbg !8283
  %19 = bitcast i8* %18 to %struct.bArmature*, !dbg !8284
  %act_bone = getelementptr inbounds %struct.bArmature, %struct.bArmature* %19, i32 0, i32 5, !dbg !8285
  %20 = load %struct.Bone*, %struct.Bone** %act_bone, align 8, !dbg !8285
  store %struct.Bone* %20, %struct.Bone** %actbone, align 8, !dbg !8281
  %21 = load %struct.Bone*, %struct.Bone** %actbone, align 8, !dbg !8286
  %tobool16 = icmp ne %struct.Bone* %21, null, !dbg !8286
  br i1 %tobool16, label %if.then17, label %if.end36, !dbg !8288

if.then17:                                        ; preds = %if.then15
  call void @llvm.dbg.declare(metadata %struct.bPoseChannel** %pchan, metadata !8289, metadata !DIExpression()), !dbg !8336
  %22 = load %struct.Object*, %struct.Object** %modob, align 8, !dbg !8337
  %pose = getelementptr inbounds %struct.Object, %struct.Object* %22, i32 0, i32 18, !dbg !8338
  %23 = load %struct.bPose*, %struct.bPose** %pose, align 8, !dbg !8338
  %24 = load %struct.Bone*, %struct.Bone** %actbone, align 8, !dbg !8339
  %name = getelementptr inbounds %struct.Bone, %struct.Bone* %24, i32 0, i32 5, !dbg !8340
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !8339
  %call18 = call %struct.bPoseChannel* @BKE_pose_channel_find_name(%struct.bPose* %23, i8* %arraydecay), !dbg !8341
  store %struct.bPoseChannel* %call18, %struct.bPoseChannel** %pchan, align 8, !dbg !8336
  %25 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !8342
  %tobool19 = icmp ne %struct.bPoseChannel* %25, null, !dbg !8342
  br i1 %tobool19, label %if.then20, label %if.end35, !dbg !8344

if.then20:                                        ; preds = %if.then17
  call void @llvm.dbg.declare(metadata %struct.bDeformGroup** %dg, metadata !8345, metadata !DIExpression()), !dbg !8347
  %26 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8348
  %27 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !8349
  %name21 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %27, i32 0, i32 4, !dbg !8350
  %arraydecay22 = getelementptr inbounds [64 x i8], [64 x i8]* %name21, i64 0, i64 0, !dbg !8349
  %call23 = call %struct.bDeformGroup* @defgroup_find_name(%struct.Object* %26, i8* %arraydecay22), !dbg !8351
  store %struct.bDeformGroup* %call23, %struct.bDeformGroup** %dg, align 8, !dbg !8347
  %28 = load %struct.bDeformGroup*, %struct.bDeformGroup** %dg, align 8, !dbg !8352
  %cmp24 = icmp eq %struct.bDeformGroup* %28, null, !dbg !8354
  br i1 %cmp24, label %if.then26, label %if.else, !dbg !8355

if.then26:                                        ; preds = %if.then20
  %29 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8356
  %30 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !8358
  %name27 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %30, i32 0, i32 4, !dbg !8359
  %arraydecay28 = getelementptr inbounds [64 x i8], [64 x i8]* %name27, i64 0, i64 0, !dbg !8358
  %call29 = call %struct.bDeformGroup* @ED_vgroup_add_name(%struct.Object* %29, i8* %arraydecay28), !dbg !8360
  store %struct.bDeformGroup* %call29, %struct.bDeformGroup** %dg, align 8, !dbg !8361
  br label %if.end34, !dbg !8362

if.else:                                          ; preds = %if.then20
  call void @llvm.dbg.declare(metadata i32* %actdef30, metadata !8363, metadata !DIExpression()), !dbg !8365
  %31 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8366
  %defbase = getelementptr inbounds %struct.Object, %struct.Object* %31, i32 0, i32 25, !dbg !8367
  %32 = load %struct.bDeformGroup*, %struct.bDeformGroup** %dg, align 8, !dbg !8368
  %33 = bitcast %struct.bDeformGroup* %32 to i8*, !dbg !8368
  %call31 = call i32 @BLI_findindex(%struct.ListBase* %defbase, i8* %33), !dbg !8369
  %add = add nsw i32 1, %call31, !dbg !8370
  store i32 %add, i32* %actdef30, align 4, !dbg !8365
  %34 = load i32, i32* %actdef30, align 4, !dbg !8371
  %conv32 = trunc i32 %34 to i16, !dbg !8371
  %35 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8372
  %actdef33 = getelementptr inbounds %struct.Object, %struct.Object* %35, i32 0, i32 97, !dbg !8373
  store i16 %conv32, i16* %actdef33, align 2, !dbg !8374
  br label %if.end34

if.end34:                                         ; preds = %if.else, %if.then26
  br label %if.end35, !dbg !8375

if.end35:                                         ; preds = %if.end34, %if.then17
  br label %if.end36, !dbg !8376

if.end36:                                         ; preds = %if.end35, %if.then15
  br label %if.end37, !dbg !8377

if.end37:                                         ; preds = %if.end36, %if.then12
  br label %if.end38, !dbg !8378

if.end38:                                         ; preds = %if.end37, %if.end9
  %36 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8379
  %defbase39 = getelementptr inbounds %struct.Object, %struct.Object* %36, i32 0, i32 25, !dbg !8381
  %call40 = call zeroext i8 @BLI_listbase_is_empty(%struct.ListBase* %defbase39), !dbg !8382
  %tobool41 = icmp ne i8 %call40, 0, !dbg !8382
  br i1 %tobool41, label %if.then42, label %if.end44, !dbg !8383

if.then42:                                        ; preds = %if.end38
  %37 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8384
  %call43 = call %struct.bDeformGroup* @ED_vgroup_add(%struct.Object* %37), !dbg !8386
  br label %if.end44, !dbg !8387

if.end44:                                         ; preds = %if.then42, %if.end38
  %38 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8388
  %actdef45 = getelementptr inbounds %struct.Object, %struct.Object* %38, i32 0, i32 97, !dbg !8390
  %39 = load i16, i16* %actdef45, align 2, !dbg !8390
  %conv46 = zext i16 %39 to i32, !dbg !8388
  %cmp47 = icmp sle i32 %conv46, 0, !dbg !8391
  br i1 %cmp47, label %if.then49, label %if.end50, !dbg !8392

if.then49:                                        ; preds = %if.end44
  %40 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8393
  %reports = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %40, i32 0, i32 8, !dbg !8395
  %41 = load %struct.ReportList*, %struct.ReportList** %reports, align 8, !dbg !8395
  call void @BKE_report(%struct.ReportList* %41, i32 16, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.53, i64 0, i64 0)), !dbg !8396
  store i8 0, i8* %retval, align 1, !dbg !8397
  br label %return, !dbg !8397

if.end50:                                         ; preds = %if.end44
  store i8 1, i8* %retval, align 1, !dbg !8398
  br label %return, !dbg !8398

return:                                           ; preds = %if.end50, %if.then49, %if.then4, %if.then
  %42 = load i8, i8* %retval, align 1, !dbg !8399
  ret i8 %42, !dbg !8399
}

declare dso_local void @paint_stroke_set_mode_data(%struct.PaintStroke*, i8*) #2

declare dso_local i8* @BKE_objdef_lock_flags_get(%struct.Object*, i32) #2

declare dso_local i8* @BKE_objdef_validmap_get(%struct.Object*, i32) #2

declare dso_local %struct.VertProjHandle* @ED_vpaint_proj_handle_create(%struct.Scene*, %struct.Object*, %struct.DMCoNo**) #2

; Function Attrs: noinline nounwind uwtable
define internal i32* @get_indexarray(%struct.Mesh* %me) #0 !dbg !8400 {
entry:
  %me.addr = alloca %struct.Mesh*, align 8
  store %struct.Mesh* %me, %struct.Mesh** %me.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me.addr, metadata !8403, metadata !DIExpression()), !dbg !8404
  %0 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !8405
  %1 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !8406
  %totpoly = getelementptr inbounds %struct.Mesh, %struct.Mesh* %1, i32 0, i32 30, !dbg !8407
  %2 = load i32, i32* %totpoly, align 8, !dbg !8407
  %add = add nsw i32 %2, 1, !dbg !8408
  %conv = sext i32 %add to i64, !dbg !8409
  %mul = mul i64 4, %conv, !dbg !8410
  %call = call i8* %0(i64 %mul, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.54, i64 0, i64 0)), !dbg !8405
  %3 = bitcast i8* %call to i32*, !dbg !8405
  ret i32* %3, !dbg !8411
}

declare dso_local void @mul_m4_m4m4([4 x float]*, [4 x float]*, [4 x float]*) #2

declare dso_local zeroext i8 @invert_m4_m4([4 x float]*, [4 x float]*) #2

declare dso_local void @copy_m3_m4([3 x float]*, [4 x float]*) #2

declare dso_local zeroext i8 @ED_vgroup_data_create(%struct.ID*) #2

declare dso_local %struct.Object* @modifiers_isDeformedByArmature(%struct.Object*) #2

declare dso_local %struct.bPoseChannel* @BKE_pose_channel_find_name(%struct.bPose*, i8*) #2

declare dso_local %struct.bDeformGroup* @defgroup_find_name(%struct.Object*, i8*) #2

declare dso_local %struct.bDeformGroup* @ED_vgroup_add_name(%struct.Object*, i8*) #2

declare dso_local i32 @BLI_findindex(%struct.ListBase*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @BLI_listbase_is_empty(%struct.ListBase* %lb) #0 !dbg !8412 {
entry:
  %lb.addr = alloca %struct.ListBase*, align 8
  store %struct.ListBase* %lb, %struct.ListBase** %lb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %lb.addr, metadata !8418, metadata !DIExpression()), !dbg !8419
  %0 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !8420
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !8421
  %1 = load i8*, i8** %first, align 8, !dbg !8421
  %cmp = icmp eq i8* %1, null, !dbg !8422
  %conv = zext i1 %cmp to i32, !dbg !8422
  %conv1 = trunc i32 %conv to i8, !dbg !8423
  ret i8 %conv1, !dbg !8424
}

declare dso_local %struct.bDeformGroup* @ED_vgroup_add(%struct.Object*) #2

declare dso_local i8* @paint_stroke_mode_data(%struct.PaintStroke*) #2

declare dso_local %struct.MDeformWeight* @defvert_find_index(%struct.MDeformVert*, i32) #2

declare dso_local float @RNA_float_get(%struct.PointerRNA*, i8*) #2

declare dso_local i32 @BKE_brush_size_get(%struct.Scene*, %struct.Brush*) #2

declare dso_local i32 @BKE_brush_use_size_pressure(%struct.Scene*, %struct.Brush*) #2

declare dso_local float @BKE_brush_alpha_get(%struct.Scene*, %struct.Brush*) #2

declare dso_local i32 @BKE_brush_use_alpha_pressure(%struct.Scene*, %struct.Brush*) #2

declare dso_local void @ED_region_tag_redraw(%struct.ARegion*) #2

declare dso_local void @RNA_float_get_array(%struct.PointerRNA*, i8*, float*) #2

declare dso_local i8* @BKE_objdef_selected_get(%struct.Object*, i32, i32*) #2

declare dso_local i32 @RNA_boolean_get(%struct.PointerRNA*, i8*) #2

declare dso_local void @swap_m4m4([4 x float]*, [4 x float]*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @sample_backbuf_area(%struct.ViewContext* %vc, i32* %indexar, i32 %totface, i32 %x, i32 %y, float %size) #0 !dbg !8425 {
entry:
  %vc.addr = alloca %struct.ViewContext*, align 8
  %indexar.addr = alloca i32*, align 8
  %totface.addr = alloca i32, align 4
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %size.addr = alloca float, align 4
  %ibuf = alloca %struct.ImBuf*, align 8
  %a = alloca i32, align 4
  %tot = alloca i32, align 4
  %index = alloca i32, align 4
  %rt = alloca i32*, align 8
  store %struct.ViewContext* %vc, %struct.ViewContext** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ViewContext** %vc.addr, metadata !8428, metadata !DIExpression()), !dbg !8429
  store i32* %indexar, i32** %indexar.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %indexar.addr, metadata !8430, metadata !DIExpression()), !dbg !8431
  store i32 %totface, i32* %totface.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %totface.addr, metadata !8432, metadata !DIExpression()), !dbg !8433
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !8434, metadata !DIExpression()), !dbg !8435
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !8436, metadata !DIExpression()), !dbg !8437
  store float %size, float* %size.addr, align 4
  call void @llvm.dbg.declare(metadata float* %size.addr, metadata !8438, metadata !DIExpression()), !dbg !8439
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf, metadata !8440, metadata !DIExpression()), !dbg !8441
  call void @llvm.dbg.declare(metadata i32* %a, metadata !8442, metadata !DIExpression()), !dbg !8443
  call void @llvm.dbg.declare(metadata i32* %tot, metadata !8444, metadata !DIExpression()), !dbg !8445
  store i32 0, i32* %tot, align 4, !dbg !8445
  call void @llvm.dbg.declare(metadata i32* %index, metadata !8446, metadata !DIExpression()), !dbg !8447
  %0 = load %struct.ViewContext*, %struct.ViewContext** %vc.addr, align 8, !dbg !8448
  %1 = load i32, i32* %x.addr, align 4, !dbg !8449
  %conv = sitofp i32 %1 to float, !dbg !8449
  %2 = load float, float* %size.addr, align 4, !dbg !8450
  %sub = fsub float %conv, %2, !dbg !8451
  %conv1 = fptosi float %sub to i16, !dbg !8449
  %3 = load i32, i32* %y.addr, align 4, !dbg !8452
  %conv2 = sitofp i32 %3 to float, !dbg !8452
  %4 = load float, float* %size.addr, align 4, !dbg !8453
  %sub3 = fsub float %conv2, %4, !dbg !8454
  %conv4 = fptosi float %sub3 to i16, !dbg !8452
  %5 = load i32, i32* %x.addr, align 4, !dbg !8455
  %conv5 = sitofp i32 %5 to float, !dbg !8455
  %6 = load float, float* %size.addr, align 4, !dbg !8456
  %add = fadd float %conv5, %6, !dbg !8457
  %conv6 = fptosi float %add to i16, !dbg !8455
  %7 = load i32, i32* %y.addr, align 4, !dbg !8458
  %conv7 = sitofp i32 %7 to float, !dbg !8458
  %8 = load float, float* %size.addr, align 4, !dbg !8459
  %add8 = fadd float %conv7, %8, !dbg !8460
  %conv9 = fptosi float %add8 to i16, !dbg !8458
  %call = call %struct.ImBuf* @view3d_read_backbuf(%struct.ViewContext* %0, i16 signext %conv1, i16 signext %conv4, i16 signext %conv6, i16 signext %conv9), !dbg !8461
  store %struct.ImBuf* %call, %struct.ImBuf** %ibuf, align 8, !dbg !8462
  %9 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !8463
  %tobool = icmp ne %struct.ImBuf* %9, null, !dbg !8463
  br i1 %tobool, label %if.then, label %if.end35, !dbg !8465

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32** %rt, metadata !8466, metadata !DIExpression()), !dbg !8468
  %10 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !8469
  %rect = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %10, i32 0, i32 8, !dbg !8470
  %11 = load i32*, i32** %rect, align 8, !dbg !8470
  store i32* %11, i32** %rt, align 8, !dbg !8468
  %12 = load i32*, i32** %indexar.addr, align 8, !dbg !8471
  %13 = bitcast i32* %12 to i8*, !dbg !8472
  %14 = load i32, i32* %totface.addr, align 4, !dbg !8473
  %add10 = add nsw i32 %14, 1, !dbg !8474
  %conv11 = sext i32 %add10 to i64, !dbg !8475
  %mul = mul i64 4, %conv11, !dbg !8476
  call void @llvm.memset.p0i8.i64(i8* align 4 %13, i8 0, i64 %mul, i1 false), !dbg !8472
  %15 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !8477
  %x12 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %15, i32 0, i32 2, !dbg !8478
  %16 = load i32, i32* %x12, align 8, !dbg !8478
  %17 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !8479
  %y13 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %17, i32 0, i32 3, !dbg !8480
  %18 = load i32, i32* %y13, align 4, !dbg !8480
  %mul14 = mul nsw i32 %16, %18, !dbg !8481
  %conv15 = sitofp i32 %mul14 to float, !dbg !8477
  store float %conv15, float* %size.addr, align 4, !dbg !8482
  br label %while.cond, !dbg !8483

while.cond:                                       ; preds = %if.end24, %if.then
  %19 = load float, float* %size.addr, align 4, !dbg !8484
  %dec = fadd float %19, -1.000000e+00, !dbg !8484
  store float %dec, float* %size.addr, align 4, !dbg !8484
  %tobool16 = fcmp une float %19, 0.000000e+00, !dbg !8483
  br i1 %tobool16, label %while.body, label %while.end, !dbg !8483

while.body:                                       ; preds = %while.cond
  %20 = load i32*, i32** %rt, align 8, !dbg !8485
  %21 = load i32, i32* %20, align 4, !dbg !8488
  %tobool17 = icmp ne i32 %21, 0, !dbg !8488
  br i1 %tobool17, label %if.then18, label %if.end24, !dbg !8489

if.then18:                                        ; preds = %while.body
  %22 = load i32*, i32** %rt, align 8, !dbg !8490
  %23 = load i32, i32* %22, align 4, !dbg !8492
  %call19 = call i32 @WM_framebuffer_to_index(i32 %23), !dbg !8493
  store i32 %call19, i32* %index, align 4, !dbg !8494
  %24 = load i32, i32* %index, align 4, !dbg !8495
  %cmp = icmp sgt i32 %24, 0, !dbg !8497
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !8498

land.lhs.true:                                    ; preds = %if.then18
  %25 = load i32, i32* %index, align 4, !dbg !8499
  %26 = load i32, i32* %totface.addr, align 4, !dbg !8500
  %cmp21 = icmp sle i32 %25, %26, !dbg !8501
  br i1 %cmp21, label %if.then23, label %if.end, !dbg !8502

if.then23:                                        ; preds = %land.lhs.true
  %27 = load i32*, i32** %indexar.addr, align 8, !dbg !8503
  %28 = load i32, i32* %index, align 4, !dbg !8504
  %idxprom = sext i32 %28 to i64, !dbg !8503
  %arrayidx = getelementptr inbounds i32, i32* %27, i64 %idxprom, !dbg !8503
  store i32 1, i32* %arrayidx, align 4, !dbg !8505
  br label %if.end, !dbg !8503

if.end:                                           ; preds = %if.then23, %land.lhs.true, %if.then18
  br label %if.end24, !dbg !8506

if.end24:                                         ; preds = %if.end, %while.body
  %29 = load i32*, i32** %rt, align 8, !dbg !8507
  %incdec.ptr = getelementptr inbounds i32, i32* %29, i32 1, !dbg !8507
  store i32* %incdec.ptr, i32** %rt, align 8, !dbg !8507
  br label %while.cond, !dbg !8483, !llvm.loop !8508

while.end:                                        ; preds = %while.cond
  store i32 1, i32* %a, align 4, !dbg !8510
  br label %for.cond, !dbg !8512

for.cond:                                         ; preds = %for.inc, %while.end
  %30 = load i32, i32* %a, align 4, !dbg !8513
  %31 = load i32, i32* %totface.addr, align 4, !dbg !8515
  %cmp25 = icmp sle i32 %30, %31, !dbg !8516
  br i1 %cmp25, label %for.body, label %for.end, !dbg !8517

for.body:                                         ; preds = %for.cond
  %32 = load i32*, i32** %indexar.addr, align 8, !dbg !8518
  %33 = load i32, i32* %a, align 4, !dbg !8521
  %idxprom27 = sext i32 %33 to i64, !dbg !8518
  %arrayidx28 = getelementptr inbounds i32, i32* %32, i64 %idxprom27, !dbg !8518
  %34 = load i32, i32* %arrayidx28, align 4, !dbg !8518
  %tobool29 = icmp ne i32 %34, 0, !dbg !8518
  br i1 %tobool29, label %if.then30, label %if.end33, !dbg !8522

if.then30:                                        ; preds = %for.body
  %35 = load i32, i32* %a, align 4, !dbg !8523
  %36 = load i32*, i32** %indexar.addr, align 8, !dbg !8524
  %37 = load i32, i32* %tot, align 4, !dbg !8525
  %inc = add nsw i32 %37, 1, !dbg !8525
  store i32 %inc, i32* %tot, align 4, !dbg !8525
  %idxprom31 = sext i32 %37 to i64, !dbg !8524
  %arrayidx32 = getelementptr inbounds i32, i32* %36, i64 %idxprom31, !dbg !8524
  store i32 %35, i32* %arrayidx32, align 4, !dbg !8526
  br label %if.end33, !dbg !8524

if.end33:                                         ; preds = %if.then30, %for.body
  br label %for.inc, !dbg !8527

for.inc:                                          ; preds = %if.end33
  %38 = load i32, i32* %a, align 4, !dbg !8528
  %inc34 = add nsw i32 %38, 1, !dbg !8528
  store i32 %inc34, i32* %a, align 4, !dbg !8528
  br label %for.cond, !dbg !8529, !llvm.loop !8530

for.end:                                          ; preds = %for.cond
  %39 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !8532
  call void @IMB_freeImBuf(%struct.ImBuf* %39), !dbg !8533
  br label %if.end35, !dbg !8534

if.end35:                                         ; preds = %for.end, %entry
  %40 = load i32, i32* %tot, align 4, !dbg !8535
  ret i32 %40, !dbg !8536
}

declare dso_local void @ED_vpaint_proj_handle_update(%struct.VertProjHandle*, %struct.ARegion*, float*) #2

declare dso_local float @BKE_brush_weight_get(%struct.Scene*, %struct.Brush*) #2

; Function Attrs: noinline nounwind uwtable
define internal float @calc_vp_strength_col_dl(%struct.VPaint* %vp, %struct.ViewContext* %vc, float* %co, float* %mval, float %brush_size_pressure, float* %rgba) #0 !dbg !8537 {
entry:
  %retval = alloca float, align 4
  %vp.addr = alloca %struct.VPaint*, align 8
  %vc.addr = alloca %struct.ViewContext*, align 8
  %co.addr = alloca float*, align 8
  %mval.addr = alloca float*, align 8
  %brush_size_pressure.addr = alloca float, align 4
  %rgba.addr = alloca float*, align 8
  %co_ss = alloca [2 x float], align 4
  %dist_sq = alloca float, align 4
  %brush = alloca %struct.Brush*, align 8
  %dist = alloca float, align 4
  %factor = alloca float, align 4
  %co_ss_3d = alloca [3 x float], align 4
  store %struct.VPaint* %vp, %struct.VPaint** %vp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VPaint** %vp.addr, metadata !8540, metadata !DIExpression()), !dbg !8541
  store %struct.ViewContext* %vc, %struct.ViewContext** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ViewContext** %vc.addr, metadata !8542, metadata !DIExpression()), !dbg !8543
  store float* %co, float** %co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %co.addr, metadata !8544, metadata !DIExpression()), !dbg !8545
  store float* %mval, float** %mval.addr, align 8
  call void @llvm.dbg.declare(metadata float** %mval.addr, metadata !8546, metadata !DIExpression()), !dbg !8547
  store float %brush_size_pressure, float* %brush_size_pressure.addr, align 4
  call void @llvm.dbg.declare(metadata float* %brush_size_pressure.addr, metadata !8548, metadata !DIExpression()), !dbg !8549
  store float* %rgba, float** %rgba.addr, align 8
  call void @llvm.dbg.declare(metadata float** %rgba.addr, metadata !8550, metadata !DIExpression()), !dbg !8551
  call void @llvm.dbg.declare(metadata [2 x float]* %co_ss, metadata !8552, metadata !DIExpression()), !dbg !8553
  %0 = load %struct.ViewContext*, %struct.ViewContext** %vc.addr, align 8, !dbg !8554
  %ar = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %0, i32 0, i32 3, !dbg !8556
  %1 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !8556
  %2 = load float*, float** %co.addr, align 8, !dbg !8557
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %co_ss, i64 0, i64 0, !dbg !8558
  %call = call i32 @ED_view3d_project_float_object(%struct.ARegion* %1, float* %2, float* %arraydecay, i32 5), !dbg !8559
  %cmp = icmp eq i32 %call, 0, !dbg !8560
  br i1 %cmp, label %if.then, label %if.end25, !dbg !8561

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata float* %dist_sq, metadata !8562, metadata !DIExpression()), !dbg !8564
  %3 = load float*, float** %mval.addr, align 8, !dbg !8565
  %arraydecay1 = getelementptr inbounds [2 x float], [2 x float]* %co_ss, i64 0, i64 0, !dbg !8566
  %call2 = call float @len_squared_v2v2(float* %3, float* %arraydecay1), !dbg !8567
  store float %call2, float* %dist_sq, align 4, !dbg !8564
  %4 = load float, float* %dist_sq, align 4, !dbg !8568
  %5 = load float, float* %brush_size_pressure.addr, align 4, !dbg !8570
  %6 = load float, float* %brush_size_pressure.addr, align 4, !dbg !8570
  %mul = fmul float %5, %6, !dbg !8570
  %cmp3 = fcmp ole float %4, %mul, !dbg !8571
  br i1 %cmp3, label %if.then4, label %if.end24, !dbg !8572

if.then4:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.Brush** %brush, metadata !8573, metadata !DIExpression()), !dbg !8575
  %7 = load %struct.VPaint*, %struct.VPaint** %vp.addr, align 8, !dbg !8576
  %paint = getelementptr inbounds %struct.VPaint, %struct.VPaint* %7, i32 0, i32 0, !dbg !8577
  %call5 = call %struct.Brush* @BKE_paint_brush(%struct.Paint* %paint), !dbg !8578
  store %struct.Brush* %call5, %struct.Brush** %brush, align 8, !dbg !8575
  call void @llvm.dbg.declare(metadata float* %dist, metadata !8579, metadata !DIExpression()), !dbg !8580
  %8 = load float, float* %dist_sq, align 4, !dbg !8581
  %call6 = call float @sqrtf(float %8) #5, !dbg !8582
  store float %call6, float* %dist, align 4, !dbg !8580
  call void @llvm.dbg.declare(metadata float* %factor, metadata !8583, metadata !DIExpression()), !dbg !8584
  %9 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !8585
  %mtex = getelementptr inbounds %struct.Brush, %struct.Brush* %9, i32 0, i32 3, !dbg !8587
  %tex = getelementptr inbounds %struct.MTex, %struct.MTex* %mtex, i32 0, i32 5, !dbg !8588
  %10 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !8588
  %tobool = icmp ne %struct.Tex* %10, null, !dbg !8585
  br i1 %tobool, label %land.lhs.true, label %if.else20, !dbg !8589

land.lhs.true:                                    ; preds = %if.then4
  %11 = load float*, float** %rgba.addr, align 8, !dbg !8590
  %tobool7 = icmp ne float* %11, null, !dbg !8590
  br i1 %tobool7, label %if.then8, label %if.else20, !dbg !8591

if.then8:                                         ; preds = %land.lhs.true
  %12 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !8592
  %mtex9 = getelementptr inbounds %struct.Brush, %struct.Brush* %12, i32 0, i32 3, !dbg !8595
  %brush_map_mode = getelementptr inbounds %struct.MTex, %struct.MTex* %mtex9, i32 0, i32 20, !dbg !8596
  %13 = load i8, i8* %brush_map_mode, align 4, !dbg !8596
  %conv = zext i8 %13 to i32, !dbg !8592
  %cmp10 = icmp eq i32 %conv, 2, !dbg !8597
  br i1 %cmp10, label %if.then12, label %if.else, !dbg !8598

if.then12:                                        ; preds = %if.then8
  %14 = load %struct.ViewContext*, %struct.ViewContext** %vc.addr, align 8, !dbg !8599
  %scene = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %14, i32 0, i32 0, !dbg !8601
  %15 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !8601
  %16 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !8602
  %17 = load float*, float** %co.addr, align 8, !dbg !8603
  %18 = load float*, float** %rgba.addr, align 8, !dbg !8604
  %call13 = call float @BKE_brush_sample_tex_3D(%struct.Scene* %15, %struct.Brush* %16, float* %17, float* %18, i32 0, %struct.ImagePool* null), !dbg !8605
  br label %if.end, !dbg !8606

if.else:                                          ; preds = %if.then8
  call void @llvm.dbg.declare(metadata [3 x float]* %co_ss_3d, metadata !8607, metadata !DIExpression()), !dbg !8610
  %arrayinit.begin = getelementptr inbounds [3 x float], [3 x float]* %co_ss_3d, i64 0, i64 0, !dbg !8611
  %arrayidx = getelementptr inbounds [2 x float], [2 x float]* %co_ss, i64 0, i64 0, !dbg !8612
  %19 = load float, float* %arrayidx, align 4, !dbg !8612
  store float %19, float* %arrayinit.begin, align 4, !dbg !8611
  %arrayinit.element = getelementptr inbounds float, float* %arrayinit.begin, i64 1, !dbg !8611
  %arrayidx14 = getelementptr inbounds [2 x float], [2 x float]* %co_ss, i64 0, i64 1, !dbg !8613
  %20 = load float, float* %arrayidx14, align 4, !dbg !8613
  store float %20, float* %arrayinit.element, align 4, !dbg !8611
  %arrayinit.element15 = getelementptr inbounds float, float* %arrayinit.element, i64 1, !dbg !8611
  store float 0.000000e+00, float* %arrayinit.element15, align 4, !dbg !8611
  %21 = load %struct.ViewContext*, %struct.ViewContext** %vc.addr, align 8, !dbg !8614
  %scene16 = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %21, i32 0, i32 0, !dbg !8615
  %22 = load %struct.Scene*, %struct.Scene** %scene16, align 8, !dbg !8615
  %23 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !8616
  %arraydecay17 = getelementptr inbounds [3 x float], [3 x float]* %co_ss_3d, i64 0, i64 0, !dbg !8617
  %24 = load float*, float** %rgba.addr, align 8, !dbg !8618
  %call18 = call float @BKE_brush_sample_tex_3D(%struct.Scene* %22, %struct.Brush* %23, float* %arraydecay17, float* %24, i32 0, %struct.ImagePool* null), !dbg !8619
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then12
  %25 = load float*, float** %rgba.addr, align 8, !dbg !8620
  %arrayidx19 = getelementptr inbounds float, float* %25, i64 3, !dbg !8620
  %26 = load float, float* %arrayidx19, align 4, !dbg !8620
  store float %26, float* %factor, align 4, !dbg !8621
  br label %if.end21, !dbg !8622

if.else20:                                        ; preds = %land.lhs.true, %if.then4
  store float 1.000000e+00, float* %factor, align 4, !dbg !8623
  br label %if.end21

if.end21:                                         ; preds = %if.else20, %if.end
  %27 = load float, float* %factor, align 4, !dbg !8625
  %28 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !8626
  %29 = load float, float* %dist, align 4, !dbg !8627
  %30 = load float, float* %brush_size_pressure.addr, align 4, !dbg !8628
  %call22 = call float @BKE_brush_curve_strength_clamp(%struct.Brush* %28, float %29, float %30), !dbg !8629
  %mul23 = fmul float %27, %call22, !dbg !8630
  store float %mul23, float* %retval, align 4, !dbg !8631
  br label %return, !dbg !8631

if.end24:                                         ; preds = %if.then
  br label %if.end25, !dbg !8632

if.end25:                                         ; preds = %if.end24, %entry
  %31 = load float*, float** %rgba.addr, align 8, !dbg !8633
  %tobool26 = icmp ne float* %31, null, !dbg !8633
  br i1 %tobool26, label %if.then27, label %if.end28, !dbg !8635

if.then27:                                        ; preds = %if.end25
  %32 = load float*, float** %rgba.addr, align 8, !dbg !8636
  call void @zero_v4(float* %32), !dbg !8637
  br label %if.end28, !dbg !8637

if.end28:                                         ; preds = %if.then27, %if.end25
  store float 0.000000e+00, float* %retval, align 4, !dbg !8638
  br label %return, !dbg !8638

return:                                           ; preds = %if.end28, %if.end21
  %33 = load float, float* %retval, align 4, !dbg !8639
  ret float %33, !dbg !8639
}

; Function Attrs: noinline nounwind uwtable
define internal float @calc_vp_alpha_col_dl(%struct.VPaint* %vp, %struct.ViewContext* %vc, [3 x float]* %vpimat, %struct.DMCoNo* %v_co_no, float* %mval, float %brush_size_pressure, float %brush_alpha_pressure, float* %rgba) #0 !dbg !8640 {
entry:
  %retval = alloca float, align 4
  %vp.addr = alloca %struct.VPaint*, align 8
  %vc.addr = alloca %struct.ViewContext*, align 8
  %vpimat.addr = alloca [3 x float]*, align 8
  %v_co_no.addr = alloca %struct.DMCoNo*, align 8
  %mval.addr = alloca float*, align 8
  %brush_size_pressure.addr = alloca float, align 4
  %brush_alpha_pressure.addr = alloca float, align 4
  %rgba.addr = alloca float*, align 8
  %strength = alloca float, align 4
  %alpha = alloca float, align 4
  %dvec = alloca [3 x float], align 4
  store %struct.VPaint* %vp, %struct.VPaint** %vp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VPaint** %vp.addr, metadata !8645, metadata !DIExpression()), !dbg !8646
  store %struct.ViewContext* %vc, %struct.ViewContext** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ViewContext** %vc.addr, metadata !8647, metadata !DIExpression()), !dbg !8648
  store [3 x float]* %vpimat, [3 x float]** %vpimat.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x float]** %vpimat.addr, metadata !8649, metadata !DIExpression()), !dbg !8650
  store %struct.DMCoNo* %v_co_no, %struct.DMCoNo** %v_co_no.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DMCoNo** %v_co_no.addr, metadata !8651, metadata !DIExpression()), !dbg !8652
  store float* %mval, float** %mval.addr, align 8
  call void @llvm.dbg.declare(metadata float** %mval.addr, metadata !8653, metadata !DIExpression()), !dbg !8654
  store float %brush_size_pressure, float* %brush_size_pressure.addr, align 4
  call void @llvm.dbg.declare(metadata float* %brush_size_pressure.addr, metadata !8655, metadata !DIExpression()), !dbg !8656
  store float %brush_alpha_pressure, float* %brush_alpha_pressure.addr, align 4
  call void @llvm.dbg.declare(metadata float* %brush_alpha_pressure.addr, metadata !8657, metadata !DIExpression()), !dbg !8658
  store float* %rgba, float** %rgba.addr, align 8
  call void @llvm.dbg.declare(metadata float** %rgba.addr, metadata !8659, metadata !DIExpression()), !dbg !8660
  call void @llvm.dbg.declare(metadata float* %strength, metadata !8661, metadata !DIExpression()), !dbg !8662
  %0 = load %struct.VPaint*, %struct.VPaint** %vp.addr, align 8, !dbg !8663
  %1 = load %struct.ViewContext*, %struct.ViewContext** %vc.addr, align 8, !dbg !8664
  %2 = load %struct.DMCoNo*, %struct.DMCoNo** %v_co_no.addr, align 8, !dbg !8665
  %co = getelementptr inbounds %struct.DMCoNo, %struct.DMCoNo* %2, i32 0, i32 0, !dbg !8666
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !8665
  %3 = load float*, float** %mval.addr, align 8, !dbg !8667
  %4 = load float, float* %brush_size_pressure.addr, align 4, !dbg !8668
  %5 = load float*, float** %rgba.addr, align 8, !dbg !8669
  %call = call float @calc_vp_strength_col_dl(%struct.VPaint* %0, %struct.ViewContext* %1, float* %arraydecay, float* %3, float %4, float* %5), !dbg !8670
  store float %call, float* %strength, align 4, !dbg !8662
  %6 = load float, float* %strength, align 4, !dbg !8671
  %cmp = fcmp ogt float %6, 0.000000e+00, !dbg !8673
  br i1 %cmp, label %if.then, label %if.end27, !dbg !8674

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata float* %alpha, metadata !8675, metadata !DIExpression()), !dbg !8677
  %7 = load float, float* %brush_alpha_pressure.addr, align 4, !dbg !8678
  %8 = load float, float* %strength, align 4, !dbg !8679
  %mul = fmul float %7, %8, !dbg !8680
  store float %mul, float* %alpha, align 4, !dbg !8677
  %9 = load %struct.VPaint*, %struct.VPaint** %vp.addr, align 8, !dbg !8681
  %flag = getelementptr inbounds %struct.VPaint, %struct.VPaint* %9, i32 0, i32 1, !dbg !8683
  %10 = load i16, i16* %flag, align 8, !dbg !8683
  %conv = sext i16 %10 to i32, !dbg !8681
  %and = and i32 %conv, 8, !dbg !8684
  %tobool = icmp ne i32 %and, 0, !dbg !8684
  br i1 %tobool, label %if.then1, label %if.end26, !dbg !8685

if.then1:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata [3 x float]* %dvec, metadata !8686, metadata !DIExpression()), !dbg !8688
  %11 = load [3 x float]*, [3 x float]** %vpimat.addr, align 8, !dbg !8689
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %11, i64 2, !dbg !8689
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !8689
  %12 = load %struct.DMCoNo*, %struct.DMCoNo** %v_co_no.addr, align 8, !dbg !8690
  %no = getelementptr inbounds %struct.DMCoNo, %struct.DMCoNo* %12, i32 0, i32 1, !dbg !8691
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %no, i64 0, i64 0, !dbg !8690
  %call4 = call float @dot_v3v3(float* %arraydecay2, float* %arraydecay3), !dbg !8692
  %arrayidx5 = getelementptr inbounds [3 x float], [3 x float]* %dvec, i64 0, i64 2, !dbg !8693
  store float %call4, float* %arrayidx5, align 4, !dbg !8694
  %arrayidx6 = getelementptr inbounds [3 x float], [3 x float]* %dvec, i64 0, i64 2, !dbg !8695
  %13 = load float, float* %arrayidx6, align 4, !dbg !8695
  %cmp7 = fcmp ogt float %13, 0.000000e+00, !dbg !8697
  br i1 %cmp7, label %if.then9, label %if.else, !dbg !8698

if.then9:                                         ; preds = %if.then1
  %14 = load [3 x float]*, [3 x float]** %vpimat.addr, align 8, !dbg !8699
  %arrayidx10 = getelementptr inbounds [3 x float], [3 x float]* %14, i64 0, !dbg !8699
  %arraydecay11 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx10, i64 0, i64 0, !dbg !8699
  %15 = load %struct.DMCoNo*, %struct.DMCoNo** %v_co_no.addr, align 8, !dbg !8701
  %no12 = getelementptr inbounds %struct.DMCoNo, %struct.DMCoNo* %15, i32 0, i32 1, !dbg !8702
  %arraydecay13 = getelementptr inbounds [3 x float], [3 x float]* %no12, i64 0, i64 0, !dbg !8701
  %call14 = call float @dot_v3v3(float* %arraydecay11, float* %arraydecay13), !dbg !8703
  %arrayidx15 = getelementptr inbounds [3 x float], [3 x float]* %dvec, i64 0, i64 0, !dbg !8704
  store float %call14, float* %arrayidx15, align 4, !dbg !8705
  %16 = load [3 x float]*, [3 x float]** %vpimat.addr, align 8, !dbg !8706
  %arrayidx16 = getelementptr inbounds [3 x float], [3 x float]* %16, i64 1, !dbg !8706
  %arraydecay17 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx16, i64 0, i64 0, !dbg !8706
  %17 = load %struct.DMCoNo*, %struct.DMCoNo** %v_co_no.addr, align 8, !dbg !8707
  %no18 = getelementptr inbounds %struct.DMCoNo, %struct.DMCoNo* %17, i32 0, i32 1, !dbg !8708
  %arraydecay19 = getelementptr inbounds [3 x float], [3 x float]* %no18, i64 0, i64 0, !dbg !8707
  %call20 = call float @dot_v3v3(float* %arraydecay17, float* %arraydecay19), !dbg !8709
  %arrayidx21 = getelementptr inbounds [3 x float], [3 x float]* %dvec, i64 0, i64 1, !dbg !8710
  store float %call20, float* %arrayidx21, align 4, !dbg !8711
  %arrayidx22 = getelementptr inbounds [3 x float], [3 x float]* %dvec, i64 0, i64 2, !dbg !8712
  %18 = load float, float* %arrayidx22, align 4, !dbg !8712
  %arraydecay23 = getelementptr inbounds [3 x float], [3 x float]* %dvec, i64 0, i64 0, !dbg !8713
  %call24 = call float @len_v3(float* %arraydecay23), !dbg !8714
  %div = fdiv float %18, %call24, !dbg !8715
  %19 = load float, float* %alpha, align 4, !dbg !8716
  %mul25 = fmul float %19, %div, !dbg !8716
  store float %mul25, float* %alpha, align 4, !dbg !8716
  br label %if.end, !dbg !8717

if.else:                                          ; preds = %if.then1
  store float 0.000000e+00, float* %retval, align 4, !dbg !8718
  br label %return, !dbg !8718

if.end:                                           ; preds = %if.then9
  br label %if.end26, !dbg !8720

if.end26:                                         ; preds = %if.end, %if.then
  %20 = load float, float* %alpha, align 4, !dbg !8721
  store float %20, float* %retval, align 4, !dbg !8722
  br label %return, !dbg !8722

if.end27:                                         ; preds = %entry
  store float 0.000000e+00, float* %retval, align 4, !dbg !8723
  br label %return, !dbg !8723

return:                                           ; preds = %if.end27, %if.end26, %if.else
  %21 = load float, float* %retval, align 4, !dbg !8724
  ret float %21, !dbg !8724
}

; Function Attrs: noinline nounwind uwtable
define internal void @do_weight_paint_vertex(%struct.VPaint* %wp, %struct.Object* %ob, %struct.WeightPaintInfo* %wpi, i32 %index, float %alpha, float %paintweight) #0 !dbg !8725 {
entry:
  %wp.addr = alloca %struct.VPaint*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %wpi.addr = alloca %struct.WeightPaintInfo*, align 8
  %index.addr = alloca i32, align 4
  %alpha.addr = alloca float, align 4
  %paintweight.addr = alloca float, align 4
  %me = alloca %struct.Mesh*, align 8
  %dv = alloca %struct.MDeformVert*, align 8
  %topology = alloca i8, align 1
  %dw = alloca %struct.MDeformWeight*, align 8
  %dw_prev = alloca %struct.MDeformWeight*, align 8
  %index_mirr = alloca i32, align 4
  %vgroup_mirr = alloca i32, align 4
  %dv_mirr = alloca %struct.MDeformVert*, align 8
  %dw_mirr = alloca %struct.MDeformWeight*, align 8
  %do_multipaint_totsel = alloca i16, align 2
  %totweight_prev = alloca i32, align 4
  %dw_offset = alloca i32, align 4
  %oldw = alloca float, align 4
  %neww = alloca float, align 4
  %observedChange = alloca float, align 4
  %change = alloca float, align 4
  %oldChange = alloca float, align 4
  %i = alloca i32, align 4
  %tdw = alloca %struct.MDeformWeight*, align 8
  %tdw_prev = alloca %struct.MDeformWeight*, align 8
  %dv_copy = alloca %struct.MDeformVert, align 8
  store %struct.VPaint* %wp, %struct.VPaint** %wp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VPaint** %wp.addr, metadata !8730, metadata !DIExpression()), !dbg !8731
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !8732, metadata !DIExpression()), !dbg !8733
  store %struct.WeightPaintInfo* %wpi, %struct.WeightPaintInfo** %wpi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WeightPaintInfo** %wpi.addr, metadata !8734, metadata !DIExpression()), !dbg !8735
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !8736, metadata !DIExpression()), !dbg !8737
  store float %alpha, float* %alpha.addr, align 4
  call void @llvm.dbg.declare(metadata float* %alpha.addr, metadata !8738, metadata !DIExpression()), !dbg !8739
  store float %paintweight, float* %paintweight.addr, align 4
  call void @llvm.dbg.declare(metadata float* %paintweight.addr, metadata !8740, metadata !DIExpression()), !dbg !8741
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me, metadata !8742, metadata !DIExpression()), !dbg !8743
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8744
  %data = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 19, !dbg !8745
  %1 = load i8*, i8** %data, align 8, !dbg !8745
  %2 = bitcast i8* %1 to %struct.Mesh*, !dbg !8744
  store %struct.Mesh* %2, %struct.Mesh** %me, align 8, !dbg !8743
  call void @llvm.dbg.declare(metadata %struct.MDeformVert** %dv, metadata !8746, metadata !DIExpression()), !dbg !8747
  %3 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !8748
  %dvert = getelementptr inbounds %struct.Mesh, %struct.Mesh* %3, i32 0, i32 17, !dbg !8749
  %4 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert, align 8, !dbg !8749
  %5 = load i32, i32* %index.addr, align 4, !dbg !8750
  %idxprom = zext i32 %5 to i64, !dbg !8748
  %arrayidx = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %4, i64 %idxprom, !dbg !8748
  store %struct.MDeformVert* %arrayidx, %struct.MDeformVert** %dv, align 8, !dbg !8747
  call void @llvm.dbg.declare(metadata i8* %topology, metadata !8751, metadata !DIExpression()), !dbg !8752
  %6 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !8753
  %editflag = getelementptr inbounds %struct.Mesh, %struct.Mesh* %6, i32 0, i32 46, !dbg !8754
  %7 = load i8, i8* %editflag, align 1, !dbg !8754
  %conv = zext i8 %7 to i32, !dbg !8753
  %and = and i32 %conv, 16, !dbg !8755
  %cmp = icmp ne i32 %and, 0, !dbg !8756
  %conv1 = zext i1 %cmp to i32, !dbg !8756
  %conv2 = trunc i32 %conv1 to i8, !dbg !8757
  store i8 %conv2, i8* %topology, align 1, !dbg !8752
  call void @llvm.dbg.declare(metadata %struct.MDeformWeight** %dw, metadata !8758, metadata !DIExpression()), !dbg !8759
  call void @llvm.dbg.declare(metadata %struct.MDeformWeight** %dw_prev, metadata !8760, metadata !DIExpression()), !dbg !8761
  call void @llvm.dbg.declare(metadata i32* %index_mirr, metadata !8762, metadata !DIExpression()), !dbg !8763
  call void @llvm.dbg.declare(metadata i32* %vgroup_mirr, metadata !8764, metadata !DIExpression()), !dbg !8765
  call void @llvm.dbg.declare(metadata %struct.MDeformVert** %dv_mirr, metadata !8766, metadata !DIExpression()), !dbg !8767
  call void @llvm.dbg.declare(metadata %struct.MDeformWeight** %dw_mirr, metadata !8768, metadata !DIExpression()), !dbg !8769
  call void @llvm.dbg.declare(metadata i16* %do_multipaint_totsel, metadata !8770, metadata !DIExpression()), !dbg !8771
  %8 = load %struct.WeightPaintInfo*, %struct.WeightPaintInfo** %wpi.addr, align 8, !dbg !8772
  %do_multipaint = getelementptr inbounds %struct.WeightPaintInfo, %struct.WeightPaintInfo* %8, i32 0, i32 9, !dbg !8773
  %9 = load i8, i8* %do_multipaint, align 1, !dbg !8773
  %conv3 = zext i8 %9 to i32, !dbg !8772
  %tobool = icmp ne i32 %conv3, 0, !dbg !8772
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !8774

land.rhs:                                         ; preds = %entry
  %10 = load %struct.WeightPaintInfo*, %struct.WeightPaintInfo** %wpi.addr, align 8, !dbg !8775
  %defbase_tot_sel = getelementptr inbounds %struct.WeightPaintInfo, %struct.WeightPaintInfo* %10, i32 0, i32 1, !dbg !8776
  %11 = load i32, i32* %defbase_tot_sel, align 4, !dbg !8776
  %cmp4 = icmp sgt i32 %11, 1, !dbg !8777
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %12 = phi i1 [ false, %entry ], [ %cmp4, %land.rhs ], !dbg !8778
  %land.ext = zext i1 %12 to i32, !dbg !8774
  %conv6 = trunc i32 %land.ext to i16, !dbg !8779
  store i16 %conv6, i16* %do_multipaint_totsel, align 2, !dbg !8771
  %13 = load %struct.VPaint*, %struct.VPaint** %wp.addr, align 8, !dbg !8780
  %flag = getelementptr inbounds %struct.VPaint, %struct.VPaint* %13, i32 0, i32 1, !dbg !8782
  %14 = load i16, i16* %flag, align 8, !dbg !8782
  %conv7 = sext i16 %14 to i32, !dbg !8780
  %and8 = and i32 %conv7, 128, !dbg !8783
  %tobool9 = icmp ne i32 %and8, 0, !dbg !8783
  br i1 %tobool9, label %if.then, label %if.else, !dbg !8784

if.then:                                          ; preds = %land.end
  %15 = load %struct.MDeformVert*, %struct.MDeformVert** %dv, align 8, !dbg !8785
  %16 = load %struct.WeightPaintInfo*, %struct.WeightPaintInfo** %wpi.addr, align 8, !dbg !8787
  %vgroup_active = getelementptr inbounds %struct.WeightPaintInfo, %struct.WeightPaintInfo* %16, i32 0, i32 3, !dbg !8788
  %17 = load i32, i32* %vgroup_active, align 4, !dbg !8788
  %call = call %struct.MDeformWeight* @defvert_find_index(%struct.MDeformVert* %15, i32 %17), !dbg !8789
  store %struct.MDeformWeight* %call, %struct.MDeformWeight** %dw, align 8, !dbg !8790
  %18 = load %struct.VPaint*, %struct.VPaint** %wp.addr, align 8, !dbg !8791
  %wpaint_prev = getelementptr inbounds %struct.VPaint, %struct.VPaint* %18, i32 0, i32 5, !dbg !8792
  %19 = load %struct.MDeformVert*, %struct.MDeformVert** %wpaint_prev, align 8, !dbg !8792
  %20 = load i32, i32* %index.addr, align 4, !dbg !8793
  %idx.ext = zext i32 %20 to i64, !dbg !8794
  %add.ptr = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %19, i64 %idx.ext, !dbg !8794
  %21 = load %struct.WeightPaintInfo*, %struct.WeightPaintInfo** %wpi.addr, align 8, !dbg !8795
  %vgroup_active10 = getelementptr inbounds %struct.WeightPaintInfo, %struct.WeightPaintInfo* %21, i32 0, i32 3, !dbg !8796
  %22 = load i32, i32* %vgroup_active10, align 4, !dbg !8796
  %call11 = call %struct.MDeformWeight* @defvert_find_index(%struct.MDeformVert* %add.ptr, i32 %22), !dbg !8797
  store %struct.MDeformWeight* %call11, %struct.MDeformWeight** %dw_prev, align 8, !dbg !8798
  br label %if.end, !dbg !8799

if.else:                                          ; preds = %land.end
  %23 = load %struct.MDeformVert*, %struct.MDeformVert** %dv, align 8, !dbg !8800
  %24 = load %struct.WeightPaintInfo*, %struct.WeightPaintInfo** %wpi.addr, align 8, !dbg !8802
  %vgroup_active12 = getelementptr inbounds %struct.WeightPaintInfo, %struct.WeightPaintInfo* %24, i32 0, i32 3, !dbg !8803
  %25 = load i32, i32* %vgroup_active12, align 4, !dbg !8803
  %call13 = call %struct.MDeformWeight* @defvert_verify_index(%struct.MDeformVert* %23, i32 %25), !dbg !8804
  store %struct.MDeformWeight* %call13, %struct.MDeformWeight** %dw, align 8, !dbg !8805
  %26 = load %struct.VPaint*, %struct.VPaint** %wp.addr, align 8, !dbg !8806
  %wpaint_prev14 = getelementptr inbounds %struct.VPaint, %struct.VPaint* %26, i32 0, i32 5, !dbg !8807
  %27 = load %struct.MDeformVert*, %struct.MDeformVert** %wpaint_prev14, align 8, !dbg !8807
  %28 = load i32, i32* %index.addr, align 4, !dbg !8808
  %idx.ext15 = zext i32 %28 to i64, !dbg !8809
  %add.ptr16 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %27, i64 %idx.ext15, !dbg !8809
  %29 = load %struct.WeightPaintInfo*, %struct.WeightPaintInfo** %wpi.addr, align 8, !dbg !8810
  %vgroup_active17 = getelementptr inbounds %struct.WeightPaintInfo, %struct.WeightPaintInfo* %29, i32 0, i32 3, !dbg !8811
  %30 = load i32, i32* %vgroup_active17, align 4, !dbg !8811
  %call18 = call %struct.MDeformWeight* @defvert_verify_index(%struct.MDeformVert* %add.ptr16, i32 %30), !dbg !8812
  store %struct.MDeformWeight* %call18, %struct.MDeformWeight** %dw_prev, align 8, !dbg !8813
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %31 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !8814
  %cmp19 = icmp eq %struct.MDeformWeight* %31, null, !dbg !8816
  br i1 %cmp19, label %if.then23, label %lor.lhs.false, !dbg !8817

lor.lhs.false:                                    ; preds = %if.end
  %32 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw_prev, align 8, !dbg !8818
  %cmp21 = icmp eq %struct.MDeformWeight* %32, null, !dbg !8819
  br i1 %cmp21, label %if.then23, label %if.end24, !dbg !8820

if.then23:                                        ; preds = %lor.lhs.false, %if.end
  br label %if.end227, !dbg !8821

if.end24:                                         ; preds = %lor.lhs.false
  %33 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !8823
  %editflag25 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %33, i32 0, i32 46, !dbg !8825
  %34 = load i8, i8* %editflag25, align 1, !dbg !8825
  %conv26 = zext i8 %34 to i32, !dbg !8823
  %and27 = and i32 %conv26, 1, !dbg !8826
  %tobool28 = icmp ne i32 %and27, 0, !dbg !8826
  br i1 %tobool28, label %if.then29, label %if.else42, !dbg !8827

if.then29:                                        ; preds = %if.end24
  %35 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8828
  %36 = load i32, i32* %index.addr, align 4, !dbg !8830
  %37 = load i8, i8* %topology, align 1, !dbg !8831
  %call30 = call i32 @mesh_get_x_mirror_vert(%struct.Object* %35, i32 %36, i8 zeroext %37), !dbg !8832
  store i32 %call30, i32* %index_mirr, align 4, !dbg !8833
  %38 = load %struct.WeightPaintInfo*, %struct.WeightPaintInfo** %wpi.addr, align 8, !dbg !8834
  %vgroup_mirror = getelementptr inbounds %struct.WeightPaintInfo, %struct.WeightPaintInfo* %38, i32 0, i32 4, !dbg !8835
  %39 = load i32, i32* %vgroup_mirror, align 8, !dbg !8835
  %cmp31 = icmp ne i32 %39, -1, !dbg !8836
  br i1 %cmp31, label %cond.true, label %cond.false, !dbg !8837

cond.true:                                        ; preds = %if.then29
  %40 = load %struct.WeightPaintInfo*, %struct.WeightPaintInfo** %wpi.addr, align 8, !dbg !8838
  %vgroup_mirror33 = getelementptr inbounds %struct.WeightPaintInfo, %struct.WeightPaintInfo* %40, i32 0, i32 4, !dbg !8839
  %41 = load i32, i32* %vgroup_mirror33, align 8, !dbg !8839
  br label %cond.end, !dbg !8837

cond.false:                                       ; preds = %if.then29
  %42 = load %struct.WeightPaintInfo*, %struct.WeightPaintInfo** %wpi.addr, align 8, !dbg !8840
  %vgroup_active34 = getelementptr inbounds %struct.WeightPaintInfo, %struct.WeightPaintInfo* %42, i32 0, i32 3, !dbg !8841
  %43 = load i32, i32* %vgroup_active34, align 4, !dbg !8841
  br label %cond.end, !dbg !8837

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %41, %cond.true ], [ %43, %cond.false ], !dbg !8837
  store i32 %cond, i32* %vgroup_mirr, align 4, !dbg !8842
  %44 = load i32, i32* %index_mirr, align 4, !dbg !8843
  %45 = load i32, i32* %index.addr, align 4, !dbg !8845
  %cmp35 = icmp eq i32 %44, %45, !dbg !8846
  br i1 %cmp35, label %land.lhs.true, label %if.end41, !dbg !8847

land.lhs.true:                                    ; preds = %cond.end
  %46 = load i32, i32* %vgroup_mirr, align 4, !dbg !8848
  %47 = load %struct.WeightPaintInfo*, %struct.WeightPaintInfo** %wpi.addr, align 8, !dbg !8849
  %vgroup_active37 = getelementptr inbounds %struct.WeightPaintInfo, %struct.WeightPaintInfo* %47, i32 0, i32 3, !dbg !8850
  %48 = load i32, i32* %vgroup_active37, align 4, !dbg !8850
  %cmp38 = icmp eq i32 %46, %48, !dbg !8851
  br i1 %cmp38, label %if.then40, label %if.end41, !dbg !8852

if.then40:                                        ; preds = %land.lhs.true
  store i32 -1, i32* %vgroup_mirr, align 4, !dbg !8853
  store i32 -1, i32* %index_mirr, align 4, !dbg !8855
  br label %if.end41, !dbg !8856

if.end41:                                         ; preds = %if.then40, %land.lhs.true, %cond.end
  br label %if.end43, !dbg !8857

if.else42:                                        ; preds = %if.end24
  store i32 -1, i32* %vgroup_mirr, align 4, !dbg !8858
  store i32 -1, i32* %index_mirr, align 4, !dbg !8860
  br label %if.end43

if.end43:                                         ; preds = %if.else42, %if.end41
  %49 = load i32, i32* %index_mirr, align 4, !dbg !8861
  %cmp44 = icmp ne i32 %49, -1, !dbg !8863
  br i1 %cmp44, label %if.then46, label %if.else79, !dbg !8864

if.then46:                                        ; preds = %if.end43
  %50 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !8865
  %dvert47 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %50, i32 0, i32 17, !dbg !8867
  %51 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert47, align 8, !dbg !8867
  %52 = load i32, i32* %index_mirr, align 4, !dbg !8868
  %idxprom48 = sext i32 %52 to i64, !dbg !8865
  %arrayidx49 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %51, i64 %idxprom48, !dbg !8865
  store %struct.MDeformVert* %arrayidx49, %struct.MDeformVert** %dv_mirr, align 8, !dbg !8869
  %53 = load %struct.VPaint*, %struct.VPaint** %wp.addr, align 8, !dbg !8870
  %flag50 = getelementptr inbounds %struct.VPaint, %struct.VPaint* %53, i32 0, i32 1, !dbg !8872
  %54 = load i16, i16* %flag50, align 8, !dbg !8872
  %conv51 = sext i16 %54 to i32, !dbg !8870
  %and52 = and i32 %conv51, 128, !dbg !8873
  %tobool53 = icmp ne i32 %and52, 0, !dbg !8873
  br i1 %tobool53, label %if.then54, label %if.else60, !dbg !8874

if.then54:                                        ; preds = %if.then46
  %55 = load %struct.MDeformVert*, %struct.MDeformVert** %dv_mirr, align 8, !dbg !8875
  %56 = load i32, i32* %vgroup_mirr, align 4, !dbg !8877
  %call55 = call %struct.MDeformWeight* @defvert_find_index(%struct.MDeformVert* %55, i32 %56), !dbg !8878
  store %struct.MDeformWeight* %call55, %struct.MDeformWeight** %dw_mirr, align 8, !dbg !8879
  %57 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw_mirr, align 8, !dbg !8880
  %cmp56 = icmp eq %struct.MDeformWeight* %57, null, !dbg !8882
  br i1 %cmp56, label %if.then58, label %if.end59, !dbg !8883

if.then58:                                        ; preds = %if.then54
  store i32 -1, i32* %vgroup_mirr, align 4, !dbg !8884
  store i32 -1, i32* %index_mirr, align 4, !dbg !8886
  store %struct.MDeformVert* null, %struct.MDeformVert** %dv_mirr, align 8, !dbg !8887
  br label %if.end59, !dbg !8888

if.end59:                                         ; preds = %if.then58, %if.then54
  br label %if.end78, !dbg !8889

if.else60:                                        ; preds = %if.then46
  %58 = load i32, i32* %index.addr, align 4, !dbg !8890
  %59 = load i32, i32* %index_mirr, align 4, !dbg !8893
  %cmp61 = icmp ne i32 %58, %59, !dbg !8894
  br i1 %cmp61, label %if.then63, label %if.else65, !dbg !8895

if.then63:                                        ; preds = %if.else60
  %60 = load %struct.MDeformVert*, %struct.MDeformVert** %dv_mirr, align 8, !dbg !8896
  %61 = load i32, i32* %vgroup_mirr, align 4, !dbg !8898
  %call64 = call %struct.MDeformWeight* @defvert_verify_index(%struct.MDeformVert* %60, i32 %61), !dbg !8899
  store %struct.MDeformWeight* %call64, %struct.MDeformWeight** %dw_mirr, align 8, !dbg !8900
  br label %if.end77, !dbg !8901

if.else65:                                        ; preds = %if.else60
  call void @llvm.dbg.declare(metadata i32* %totweight_prev, metadata !8902, metadata !DIExpression()), !dbg !8904
  %62 = load %struct.MDeformVert*, %struct.MDeformVert** %dv_mirr, align 8, !dbg !8905
  %totweight = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %62, i32 0, i32 1, !dbg !8906
  %63 = load i32, i32* %totweight, align 8, !dbg !8906
  store i32 %63, i32* %totweight_prev, align 4, !dbg !8904
  call void @llvm.dbg.declare(metadata i32* %dw_offset, metadata !8907, metadata !DIExpression()), !dbg !8908
  %64 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !8909
  %65 = load %struct.MDeformVert*, %struct.MDeformVert** %dv_mirr, align 8, !dbg !8910
  %dw66 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %65, i32 0, i32 0, !dbg !8911
  %66 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw66, align 8, !dbg !8911
  %sub.ptr.lhs.cast = ptrtoint %struct.MDeformWeight* %64 to i64, !dbg !8912
  %sub.ptr.rhs.cast = ptrtoint %struct.MDeformWeight* %66 to i64, !dbg !8912
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !8912
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8, !dbg !8912
  %conv67 = trunc i64 %sub.ptr.div to i32, !dbg !8913
  store i32 %conv67, i32* %dw_offset, align 4, !dbg !8908
  %67 = load %struct.MDeformVert*, %struct.MDeformVert** %dv_mirr, align 8, !dbg !8914
  %68 = load i32, i32* %vgroup_mirr, align 4, !dbg !8915
  %call68 = call %struct.MDeformWeight* @defvert_verify_index(%struct.MDeformVert* %67, i32 %68), !dbg !8916
  store %struct.MDeformWeight* %call68, %struct.MDeformWeight** %dw_mirr, align 8, !dbg !8917
  %69 = load i32, i32* %totweight_prev, align 4, !dbg !8918
  %70 = load %struct.MDeformVert*, %struct.MDeformVert** %dv_mirr, align 8, !dbg !8920
  %totweight69 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %70, i32 0, i32 1, !dbg !8921
  %71 = load i32, i32* %totweight69, align 8, !dbg !8921
  %cmp70 = icmp ne i32 %69, %71, !dbg !8922
  br i1 %cmp70, label %if.then72, label %if.end76, !dbg !8923

if.then72:                                        ; preds = %if.else65
  %72 = load %struct.MDeformVert*, %struct.MDeformVert** %dv_mirr, align 8, !dbg !8924
  %dw73 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %72, i32 0, i32 0, !dbg !8926
  %73 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw73, align 8, !dbg !8926
  %74 = load i32, i32* %dw_offset, align 4, !dbg !8927
  %idxprom74 = sext i32 %74 to i64, !dbg !8924
  %arrayidx75 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %73, i64 %idxprom74, !dbg !8924
  store %struct.MDeformWeight* %arrayidx75, %struct.MDeformWeight** %dw, align 8, !dbg !8928
  br label %if.end76, !dbg !8929

if.end76:                                         ; preds = %if.then72, %if.else65
  br label %if.end77

if.end77:                                         ; preds = %if.end76, %if.then63
  br label %if.end78

if.end78:                                         ; preds = %if.end77, %if.end59
  br label %if.end80, !dbg !8930

if.else79:                                        ; preds = %if.end43
  store %struct.MDeformVert* null, %struct.MDeformVert** %dv_mirr, align 8, !dbg !8931
  store %struct.MDeformWeight* null, %struct.MDeformWeight** %dw_mirr, align 8, !dbg !8933
  br label %if.end80

if.end80:                                         ; preds = %if.else79, %if.end78
  %75 = load i16, i16* %do_multipaint_totsel, align 2, !dbg !8934
  %conv81 = sext i16 %75 to i32, !dbg !8934
  %cmp82 = icmp eq i32 %conv81, 0, !dbg !8936
  br i1 %cmp82, label %land.lhs.true84, label %if.else125, !dbg !8937

land.lhs.true84:                                  ; preds = %if.end80
  %76 = load %struct.WeightPaintInfo*, %struct.WeightPaintInfo** %wpi.addr, align 8, !dbg !8938
  %lock_flags = getelementptr inbounds %struct.WeightPaintInfo, %struct.WeightPaintInfo* %76, i32 0, i32 5, !dbg !8939
  %77 = load i8*, i8** %lock_flags, align 8, !dbg !8939
  %cmp85 = icmp eq i8* %77, null, !dbg !8940
  br i1 %cmp85, label %if.then93, label %lor.lhs.false87, !dbg !8941

lor.lhs.false87:                                  ; preds = %land.lhs.true84
  %78 = load %struct.MDeformVert*, %struct.MDeformVert** %dv, align 8, !dbg !8942
  %79 = load %struct.WeightPaintInfo*, %struct.WeightPaintInfo** %wpi.addr, align 8, !dbg !8943
  %defbase_tot = getelementptr inbounds %struct.WeightPaintInfo, %struct.WeightPaintInfo* %79, i32 0, i32 0, !dbg !8944
  %80 = load i32, i32* %defbase_tot, align 8, !dbg !8944
  %81 = load %struct.WeightPaintInfo*, %struct.WeightPaintInfo** %wpi.addr, align 8, !dbg !8945
  %vgroup_validmap = getelementptr inbounds %struct.WeightPaintInfo, %struct.WeightPaintInfo* %81, i32 0, i32 7, !dbg !8946
  %82 = load i8*, i8** %vgroup_validmap, align 8, !dbg !8946
  %83 = load %struct.WeightPaintInfo*, %struct.WeightPaintInfo** %wpi.addr, align 8, !dbg !8947
  %lock_flags88 = getelementptr inbounds %struct.WeightPaintInfo, %struct.WeightPaintInfo* %83, i32 0, i32 5, !dbg !8948
  %84 = load i8*, i8** %lock_flags88, align 8, !dbg !8948
  %call89 = call zeroext i8 @has_locked_group(%struct.MDeformVert* %78, i32 %80, i8* %82, i8* %84), !dbg !8949
  %conv90 = zext i8 %call89 to i32, !dbg !8949
  %cmp91 = icmp eq i32 %conv90, 0, !dbg !8950
  br i1 %cmp91, label %if.then93, label %if.else125, !dbg !8951

if.then93:                                        ; preds = %lor.lhs.false87, %land.lhs.true84
  %85 = load %struct.VPaint*, %struct.VPaint** %wp.addr, align 8, !dbg !8952
  %86 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !8954
  %weight = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %86, i32 0, i32 1, !dbg !8955
  %87 = load float, float* %weight, align 4, !dbg !8955
  %88 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw_prev, align 8, !dbg !8956
  %weight94 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %88, i32 0, i32 1, !dbg !8957
  %89 = load float, float* %weight94, align 4, !dbg !8957
  %90 = load float, float* %alpha.addr, align 4, !dbg !8958
  %91 = load float, float* %paintweight.addr, align 4, !dbg !8959
  %92 = load %struct.WeightPaintInfo*, %struct.WeightPaintInfo** %wpi.addr, align 8, !dbg !8960
  %brush_alpha_value = getelementptr inbounds %struct.WeightPaintInfo, %struct.WeightPaintInfo* %92, i32 0, i32 11, !dbg !8961
  %93 = load float, float* %brush_alpha_value, align 4, !dbg !8961
  %94 = load %struct.WeightPaintInfo*, %struct.WeightPaintInfo** %wpi.addr, align 8, !dbg !8962
  %do_flip = getelementptr inbounds %struct.WeightPaintInfo, %struct.WeightPaintInfo* %94, i32 0, i32 8, !dbg !8963
  %95 = load i8, i8* %do_flip, align 8, !dbg !8963
  %conv95 = zext i8 %95 to i16, !dbg !8962
  %call96 = call float @wpaint_blend(%struct.VPaint* %85, float %87, float %89, float %90, float %91, float %93, i16 signext %conv95, i16 signext 0), !dbg !8964
  %96 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !8965
  %weight97 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %96, i32 0, i32 1, !dbg !8966
  store float %call96, float* %weight97, align 4, !dbg !8967
  %97 = load i32, i32* %index_mirr, align 4, !dbg !8968
  %cmp98 = icmp ne i32 %97, -1, !dbg !8970
  br i1 %cmp98, label %if.then100, label %if.end103, !dbg !8971

if.then100:                                       ; preds = %if.then93
  %98 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !8972
  %weight101 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %98, i32 0, i32 1, !dbg !8974
  %99 = load float, float* %weight101, align 4, !dbg !8974
  %100 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw_mirr, align 8, !dbg !8975
  %weight102 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %100, i32 0, i32 1, !dbg !8976
  store float %99, float* %weight102, align 4, !dbg !8977
  br label %if.end103, !dbg !8978

if.end103:                                        ; preds = %if.then100, %if.then93
  %101 = load %struct.WeightPaintInfo*, %struct.WeightPaintInfo** %wpi.addr, align 8, !dbg !8979
  %do_auto_normalize = getelementptr inbounds %struct.WeightPaintInfo, %struct.WeightPaintInfo* %101, i32 0, i32 10, !dbg !8981
  %102 = load i8, i8* %do_auto_normalize, align 2, !dbg !8981
  %tobool104 = icmp ne i8 %102, 0, !dbg !8979
  br i1 %tobool104, label %if.then105, label %if.end124, !dbg !8982

if.then105:                                       ; preds = %if.end103
  %103 = load %struct.MDeformVert*, %struct.MDeformVert** %dv, align 8, !dbg !8983
  %104 = load %struct.WeightPaintInfo*, %struct.WeightPaintInfo** %wpi.addr, align 8, !dbg !8985
  %defbase_tot106 = getelementptr inbounds %struct.WeightPaintInfo, %struct.WeightPaintInfo* %104, i32 0, i32 0, !dbg !8986
  %105 = load i32, i32* %defbase_tot106, align 8, !dbg !8986
  %106 = load %struct.WeightPaintInfo*, %struct.WeightPaintInfo** %wpi.addr, align 8, !dbg !8987
  %vgroup_validmap107 = getelementptr inbounds %struct.WeightPaintInfo, %struct.WeightPaintInfo* %106, i32 0, i32 7, !dbg !8988
  %107 = load i8*, i8** %vgroup_validmap107, align 8, !dbg !8988
  %108 = load %struct.WeightPaintInfo*, %struct.WeightPaintInfo** %wpi.addr, align 8, !dbg !8989
  %vgroup_active108 = getelementptr inbounds %struct.WeightPaintInfo, %struct.WeightPaintInfo* %108, i32 0, i32 3, !dbg !8990
  %109 = load i32, i32* %vgroup_active108, align 4, !dbg !8990
  call void @do_weight_paint_normalize_all_active(%struct.MDeformVert* %103, i32 %105, i8* %107, i32 %109), !dbg !8991
  %110 = load i32, i32* %index_mirr, align 4, !dbg !8992
  %cmp109 = icmp ne i32 %110, -1, !dbg !8994
  br i1 %cmp109, label %if.then111, label %if.end123, !dbg !8995

if.then111:                                       ; preds = %if.then105
  %111 = load i32, i32* %index.addr, align 4, !dbg !8996
  %112 = load i32, i32* %index_mirr, align 4, !dbg !8999
  %cmp112 = icmp ne i32 %111, %112, !dbg !9000
  br i1 %cmp112, label %if.then114, label %if.else117, !dbg !9001

if.then114:                                       ; preds = %if.then111
  %113 = load %struct.MDeformVert*, %struct.MDeformVert** %dv_mirr, align 8, !dbg !9002
  %114 = load %struct.WeightPaintInfo*, %struct.WeightPaintInfo** %wpi.addr, align 8, !dbg !9004
  %defbase_tot115 = getelementptr inbounds %struct.WeightPaintInfo, %struct.WeightPaintInfo* %114, i32 0, i32 0, !dbg !9005
  %115 = load i32, i32* %defbase_tot115, align 8, !dbg !9005
  %116 = load %struct.WeightPaintInfo*, %struct.WeightPaintInfo** %wpi.addr, align 8, !dbg !9006
  %vgroup_validmap116 = getelementptr inbounds %struct.WeightPaintInfo, %struct.WeightPaintInfo* %116, i32 0, i32 7, !dbg !9007
  %117 = load i8*, i8** %vgroup_validmap116, align 8, !dbg !9007
  %118 = load i32, i32* %vgroup_mirr, align 4, !dbg !9008
  call void @do_weight_paint_normalize_all_active(%struct.MDeformVert* %113, i32 %115, i8* %117, i32 %118), !dbg !9009
  br label %if.end122, !dbg !9010

if.else117:                                       ; preds = %if.then111
  %119 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw_mirr, align 8, !dbg !9011
  %weight118 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %119, i32 0, i32 1, !dbg !9013
  %120 = load float, float* %weight118, align 4, !dbg !9013
  %121 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !9014
  %weight119 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %121, i32 0, i32 1, !dbg !9015
  %122 = load float, float* %weight119, align 4, !dbg !9015
  %add = fadd float %120, %122, !dbg !9016
  %mul = fmul float %add, 5.000000e-01, !dbg !9017
  %123 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !9018
  %weight120 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %123, i32 0, i32 1, !dbg !9019
  store float %mul, float* %weight120, align 4, !dbg !9020
  %124 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw_mirr, align 8, !dbg !9021
  %weight121 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %124, i32 0, i32 1, !dbg !9022
  store float %mul, float* %weight121, align 4, !dbg !9023
  br label %if.end122

if.end122:                                        ; preds = %if.else117, %if.then114
  br label %if.end123, !dbg !9024

if.end123:                                        ; preds = %if.end122, %if.then105
  br label %if.end124, !dbg !9025

if.end124:                                        ; preds = %if.end123, %if.end103
  br label %if.end227, !dbg !9026

if.else125:                                       ; preds = %lor.lhs.false87, %if.end80
  call void @llvm.dbg.declare(metadata float* %oldw, metadata !9027, metadata !DIExpression()), !dbg !9029
  call void @llvm.dbg.declare(metadata float* %neww, metadata !9030, metadata !DIExpression()), !dbg !9031
  call void @llvm.dbg.declare(metadata float* %observedChange, metadata !9032, metadata !DIExpression()), !dbg !9033
  store float 0.000000e+00, float* %observedChange, align 4, !dbg !9033
  call void @llvm.dbg.declare(metadata float* %change, metadata !9034, metadata !DIExpression()), !dbg !9035
  store float 0.000000e+00, float* %change, align 4, !dbg !9035
  call void @llvm.dbg.declare(metadata float* %oldChange, metadata !9036, metadata !DIExpression()), !dbg !9037
  store float 0.000000e+00, float* %oldChange, align 4, !dbg !9037
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9038, metadata !DIExpression()), !dbg !9039
  call void @llvm.dbg.declare(metadata %struct.MDeformWeight** %tdw, metadata !9040, metadata !DIExpression()), !dbg !9041
  store %struct.MDeformWeight* null, %struct.MDeformWeight** %tdw, align 8, !dbg !9041
  call void @llvm.dbg.declare(metadata %struct.MDeformWeight** %tdw_prev, metadata !9042, metadata !DIExpression()), !dbg !9043
  call void @llvm.dbg.declare(metadata %struct.MDeformVert* %dv_copy, metadata !9044, metadata !DIExpression()), !dbg !9045
  %125 = bitcast %struct.MDeformVert* %dv_copy to i8*, !dbg !9045
  call void @llvm.memset.p0i8.i64(i8* align 8 %125, i8 0, i64 16, i1 false), !dbg !9045
  %126 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !9046
  %weight126 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %126, i32 0, i32 1, !dbg !9047
  %127 = load float, float* %weight126, align 4, !dbg !9047
  store float %127, float* %oldw, align 4, !dbg !9048
  %128 = load %struct.VPaint*, %struct.VPaint** %wp.addr, align 8, !dbg !9049
  %129 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !9050
  %weight127 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %129, i32 0, i32 1, !dbg !9051
  %130 = load float, float* %weight127, align 4, !dbg !9051
  %131 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw_prev, align 8, !dbg !9052
  %weight128 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %131, i32 0, i32 1, !dbg !9053
  %132 = load float, float* %weight128, align 4, !dbg !9053
  %133 = load float, float* %alpha.addr, align 4, !dbg !9054
  %134 = load float, float* %paintweight.addr, align 4, !dbg !9055
  %135 = load %struct.WeightPaintInfo*, %struct.WeightPaintInfo** %wpi.addr, align 8, !dbg !9056
  %brush_alpha_value129 = getelementptr inbounds %struct.WeightPaintInfo, %struct.WeightPaintInfo* %135, i32 0, i32 11, !dbg !9057
  %136 = load float, float* %brush_alpha_value129, align 4, !dbg !9057
  %137 = load %struct.WeightPaintInfo*, %struct.WeightPaintInfo** %wpi.addr, align 8, !dbg !9058
  %do_flip130 = getelementptr inbounds %struct.WeightPaintInfo, %struct.WeightPaintInfo* %137, i32 0, i32 8, !dbg !9059
  %138 = load i8, i8* %do_flip130, align 8, !dbg !9059
  %conv131 = zext i8 %138 to i16, !dbg !9058
  %139 = load i16, i16* %do_multipaint_totsel, align 2, !dbg !9060
  %call132 = call float @wpaint_blend(%struct.VPaint* %128, float %130, float %132, float %133, float %134, float %136, i16 signext %conv131, i16 signext %139), !dbg !9061
  store float %call132, float* %neww, align 4, !dbg !9062
  %140 = load float, float* %neww, align 4, !dbg !9063
  %141 = load float, float* %oldw, align 4, !dbg !9064
  %sub = fsub float %140, %141, !dbg !9065
  store float %sub, float* %observedChange, align 4, !dbg !9066
  %142 = load i16, i16* %do_multipaint_totsel, align 2, !dbg !9067
  %conv133 = sext i16 %142 to i32, !dbg !9067
  %tobool134 = icmp ne i32 %conv133, 0, !dbg !9067
  br i1 %tobool134, label %land.lhs.true135, label %if.end212, !dbg !9069

land.lhs.true135:                                 ; preds = %if.else125
  %143 = load float, float* %observedChange, align 4, !dbg !9070
  %tobool136 = fcmp une float %143, 0.000000e+00, !dbg !9070
  br i1 %tobool136, label %if.then137, label %if.end212, !dbg !9071

if.then137:                                       ; preds = %land.lhs.true135
  %144 = load i8* (i8*)*, i8* (i8*)** @MEM_dupallocN, align 8, !dbg !9072
  %145 = load %struct.MDeformVert*, %struct.MDeformVert** %dv, align 8, !dbg !9074
  %dw138 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %145, i32 0, i32 0, !dbg !9075
  %146 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw138, align 8, !dbg !9075
  %147 = bitcast %struct.MDeformWeight* %146 to i8*, !dbg !9074
  %call139 = call i8* %144(i8* %147), !dbg !9072
  %148 = bitcast i8* %call139 to %struct.MDeformWeight*, !dbg !9072
  %dw140 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %dv_copy, i32 0, i32 0, !dbg !9076
  store %struct.MDeformWeight* %148, %struct.MDeformWeight** %dw140, align 8, !dbg !9077
  %149 = load %struct.MDeformVert*, %struct.MDeformVert** %dv, align 8, !dbg !9078
  %flag141 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %149, i32 0, i32 2, !dbg !9079
  %150 = load i32, i32* %flag141, align 4, !dbg !9079
  %flag142 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %dv_copy, i32 0, i32 2, !dbg !9080
  store i32 %150, i32* %flag142, align 4, !dbg !9081
  %151 = load %struct.MDeformVert*, %struct.MDeformVert** %dv, align 8, !dbg !9082
  %totweight143 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %151, i32 0, i32 1, !dbg !9083
  %152 = load i32, i32* %totweight143, align 8, !dbg !9083
  %totweight144 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %dv_copy, i32 0, i32 1, !dbg !9084
  store i32 %152, i32* %totweight144, align 8, !dbg !9085
  %153 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !9086
  store %struct.MDeformWeight* %153, %struct.MDeformWeight** %tdw, align 8, !dbg !9087
  %154 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw_prev, align 8, !dbg !9088
  store %struct.MDeformWeight* %154, %struct.MDeformWeight** %tdw_prev, align 8, !dbg !9089
  %155 = load %struct.VPaint*, %struct.VPaint** %wp.addr, align 8, !dbg !9090
  %wpaint_prev145 = getelementptr inbounds %struct.VPaint, %struct.VPaint* %155, i32 0, i32 5, !dbg !9091
  %156 = load %struct.MDeformVert*, %struct.MDeformVert** %wpaint_prev145, align 8, !dbg !9091
  %157 = load i32, i32* %index.addr, align 4, !dbg !9092
  %idxprom146 = zext i32 %157 to i64, !dbg !9090
  %arrayidx147 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %156, i64 %idxprom146, !dbg !9090
  %158 = load %struct.WeightPaintInfo*, %struct.WeightPaintInfo** %wpi.addr, align 8, !dbg !9093
  %defbase_tot148 = getelementptr inbounds %struct.WeightPaintInfo, %struct.WeightPaintInfo* %158, i32 0, i32 0, !dbg !9094
  %159 = load i32, i32* %defbase_tot148, align 8, !dbg !9094
  %160 = load %struct.WeightPaintInfo*, %struct.WeightPaintInfo** %wpi.addr, align 8, !dbg !9095
  %defbase_sel = getelementptr inbounds %struct.WeightPaintInfo, %struct.WeightPaintInfo* %160, i32 0, i32 6, !dbg !9096
  %161 = load i8*, i8** %defbase_sel, align 8, !dbg !9096
  %162 = load float, float* %observedChange, align 4, !dbg !9097
  %call149 = call float @get_mp_change(%struct.MDeformVert* %arrayidx147, i32 %159, i8* %161, float %162), !dbg !9098
  store float %call149, float* %change, align 4, !dbg !9099
  %163 = load float, float* %change, align 4, !dbg !9100
  %tobool150 = fcmp une float %163, 0.000000e+00, !dbg !9100
  br i1 %tobool150, label %if.then151, label %if.end211, !dbg !9102

if.then151:                                       ; preds = %if.then137
  %164 = load %struct.MDeformWeight*, %struct.MDeformWeight** %tdw, align 8, !dbg !9103
  %weight152 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %164, i32 0, i32 1, !dbg !9106
  %165 = load float, float* %weight152, align 4, !dbg !9106
  %tobool153 = fcmp une float %165, 0.000000e+00, !dbg !9103
  br i1 %tobool153, label %if.end170, label %if.then154, !dbg !9107

if.then154:                                       ; preds = %if.then151
  %166 = load %struct.MDeformVert*, %struct.MDeformVert** %dv, align 8, !dbg !9108
  %167 = load %struct.WeightPaintInfo*, %struct.WeightPaintInfo** %wpi.addr, align 8, !dbg !9110
  %defbase_tot155 = getelementptr inbounds %struct.WeightPaintInfo, %struct.WeightPaintInfo* %167, i32 0, i32 0, !dbg !9111
  %168 = load i32, i32* %defbase_tot155, align 8, !dbg !9111
  %169 = load %struct.WeightPaintInfo*, %struct.WeightPaintInfo** %wpi.addr, align 8, !dbg !9112
  %defbase_sel156 = getelementptr inbounds %struct.WeightPaintInfo, %struct.WeightPaintInfo* %169, i32 0, i32 6, !dbg !9113
  %170 = load i8*, i8** %defbase_sel156, align 8, !dbg !9113
  %call157 = call i32 @get_first_selected_nonzero_weight(%struct.MDeformVert* %166, i32 %168, i8* %170), !dbg !9114
  store i32 %call157, i32* %i, align 4, !dbg !9115
  %171 = load i32, i32* %i, align 4, !dbg !9116
  %cmp158 = icmp sge i32 %171, 0, !dbg !9118
  br i1 %cmp158, label %if.then160, label %if.else168, !dbg !9119

if.then160:                                       ; preds = %if.then154
  %172 = load %struct.MDeformVert*, %struct.MDeformVert** %dv, align 8, !dbg !9120
  %dw161 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %172, i32 0, i32 0, !dbg !9122
  %173 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw161, align 8, !dbg !9122
  %174 = load i32, i32* %i, align 4, !dbg !9123
  %idxprom162 = sext i32 %174 to i64, !dbg !9120
  %arrayidx163 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %173, i64 %idxprom162, !dbg !9120
  store %struct.MDeformWeight* %arrayidx163, %struct.MDeformWeight** %tdw, align 8, !dbg !9124
  %175 = load %struct.VPaint*, %struct.VPaint** %wp.addr, align 8, !dbg !9125
  %wpaint_prev164 = getelementptr inbounds %struct.VPaint, %struct.VPaint* %175, i32 0, i32 5, !dbg !9126
  %176 = load %struct.MDeformVert*, %struct.MDeformVert** %wpaint_prev164, align 8, !dbg !9126
  %177 = load i32, i32* %index.addr, align 4, !dbg !9127
  %idxprom165 = zext i32 %177 to i64, !dbg !9125
  %arrayidx166 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %176, i64 %idxprom165, !dbg !9125
  %178 = load %struct.MDeformWeight*, %struct.MDeformWeight** %tdw, align 8, !dbg !9128
  %def_nr = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %178, i32 0, i32 0, !dbg !9129
  %179 = load i32, i32* %def_nr, align 4, !dbg !9129
  %call167 = call %struct.MDeformWeight* @defvert_verify_index(%struct.MDeformVert* %arrayidx166, i32 %179), !dbg !9130
  store %struct.MDeformWeight* %call167, %struct.MDeformWeight** %tdw_prev, align 8, !dbg !9131
  br label %if.end169, !dbg !9132

if.else168:                                       ; preds = %if.then154
  store float 0.000000e+00, float* %change, align 4, !dbg !9133
  br label %if.end169

if.end169:                                        ; preds = %if.else168, %if.then160
  br label %if.end170, !dbg !9135

if.end170:                                        ; preds = %if.end169, %if.then151
  %180 = load float, float* %change, align 4, !dbg !9136
  %tobool171 = fcmp une float %180, 0.000000e+00, !dbg !9136
  br i1 %tobool171, label %land.lhs.true172, label %if.else209, !dbg !9138

land.lhs.true172:                                 ; preds = %if.end170
  %181 = load %struct.MDeformWeight*, %struct.MDeformWeight** %tdw_prev, align 8, !dbg !9139
  %weight173 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %181, i32 0, i32 1, !dbg !9140
  %182 = load float, float* %weight173, align 4, !dbg !9140
  %tobool174 = fcmp une float %182, 0.000000e+00, !dbg !9139
  br i1 %tobool174, label %land.lhs.true175, label %if.else209, !dbg !9141

land.lhs.true175:                                 ; preds = %land.lhs.true172
  %183 = load %struct.MDeformWeight*, %struct.MDeformWeight** %tdw_prev, align 8, !dbg !9142
  %weight176 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %183, i32 0, i32 1, !dbg !9143
  %184 = load float, float* %weight176, align 4, !dbg !9143
  %185 = load float, float* %change, align 4, !dbg !9144
  %mul177 = fmul float %184, %185, !dbg !9145
  %tobool178 = fcmp une float %mul177, 0.000000e+00, !dbg !9145
  br i1 %tobool178, label %if.then179, label %if.else209, !dbg !9146

if.then179:                                       ; preds = %land.lhs.true175
  %186 = load %struct.MDeformWeight*, %struct.MDeformWeight** %tdw, align 8, !dbg !9147
  %weight180 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %186, i32 0, i32 1, !dbg !9150
  %187 = load float, float* %weight180, align 4, !dbg !9150
  %188 = load %struct.MDeformWeight*, %struct.MDeformWeight** %tdw_prev, align 8, !dbg !9151
  %weight181 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %188, i32 0, i32 1, !dbg !9152
  %189 = load float, float* %weight181, align 4, !dbg !9152
  %cmp182 = fcmp une float %187, %189, !dbg !9153
  br i1 %cmp182, label %if.then184, label %if.end208, !dbg !9154

if.then184:                                       ; preds = %if.then179
  %190 = load %struct.MDeformWeight*, %struct.MDeformWeight** %tdw, align 8, !dbg !9155
  %weight185 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %190, i32 0, i32 1, !dbg !9157
  %191 = load float, float* %weight185, align 4, !dbg !9157
  %192 = load %struct.MDeformWeight*, %struct.MDeformWeight** %tdw_prev, align 8, !dbg !9158
  %weight186 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %192, i32 0, i32 1, !dbg !9159
  %193 = load float, float* %weight186, align 4, !dbg !9159
  %div = fdiv float %191, %193, !dbg !9160
  store float %div, float* %oldChange, align 4, !dbg !9161
  %194 = load float, float* %observedChange, align 4, !dbg !9162
  %cmp187 = fcmp ogt float %194, 0.000000e+00, !dbg !9164
  br i1 %cmp187, label %if.then189, label %if.else198, !dbg !9165

if.then189:                                       ; preds = %if.then184
  %195 = load float, float* %change, align 4, !dbg !9166
  %196 = load float, float* %oldChange, align 4, !dbg !9169
  %cmp190 = fcmp ogt float %195, %196, !dbg !9170
  br i1 %cmp190, label %if.then192, label %if.else196, !dbg !9171

if.then192:                                       ; preds = %if.then189
  %197 = load %struct.VPaint*, %struct.VPaint** %wp.addr, align 8, !dbg !9172
  %wpaint_prev193 = getelementptr inbounds %struct.VPaint, %struct.VPaint* %197, i32 0, i32 5, !dbg !9174
  %198 = load %struct.MDeformVert*, %struct.MDeformVert** %wpaint_prev193, align 8, !dbg !9174
  %199 = load i32, i32* %index.addr, align 4, !dbg !9175
  %idx.ext194 = zext i32 %199 to i64, !dbg !9176
  %add.ptr195 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %198, i64 %idx.ext194, !dbg !9176
  %200 = load %struct.MDeformVert*, %struct.MDeformVert** %dv, align 8, !dbg !9177
  call void @defvert_reset_to_prev(%struct.MDeformVert* %add.ptr195, %struct.MDeformVert* %200), !dbg !9178
  br label %if.end197, !dbg !9179

if.else196:                                       ; preds = %if.then189
  store float 0.000000e+00, float* %change, align 4, !dbg !9180
  br label %if.end197

if.end197:                                        ; preds = %if.else196, %if.then192
  br label %if.end207, !dbg !9182

if.else198:                                       ; preds = %if.then184
  %201 = load float, float* %change, align 4, !dbg !9183
  %202 = load float, float* %oldChange, align 4, !dbg !9186
  %cmp199 = fcmp olt float %201, %202, !dbg !9187
  br i1 %cmp199, label %if.then201, label %if.else205, !dbg !9188

if.then201:                                       ; preds = %if.else198
  %203 = load %struct.VPaint*, %struct.VPaint** %wp.addr, align 8, !dbg !9189
  %wpaint_prev202 = getelementptr inbounds %struct.VPaint, %struct.VPaint* %203, i32 0, i32 5, !dbg !9191
  %204 = load %struct.MDeformVert*, %struct.MDeformVert** %wpaint_prev202, align 8, !dbg !9191
  %205 = load i32, i32* %index.addr, align 4, !dbg !9192
  %idx.ext203 = zext i32 %205 to i64, !dbg !9193
  %add.ptr204 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %204, i64 %idx.ext203, !dbg !9193
  %206 = load %struct.MDeformVert*, %struct.MDeformVert** %dv, align 8, !dbg !9194
  call void @defvert_reset_to_prev(%struct.MDeformVert* %add.ptr204, %struct.MDeformVert* %206), !dbg !9195
  br label %if.end206, !dbg !9196

if.else205:                                       ; preds = %if.else198
  store float 0.000000e+00, float* %change, align 4, !dbg !9197
  br label %if.end206

if.end206:                                        ; preds = %if.else205, %if.then201
  br label %if.end207

if.end207:                                        ; preds = %if.end206, %if.end197
  br label %if.end208, !dbg !9199

if.end208:                                        ; preds = %if.end207, %if.then179
  br label %if.end210, !dbg !9200

if.else209:                                       ; preds = %land.lhs.true175, %land.lhs.true172, %if.end170
  store float 0.000000e+00, float* %change, align 4, !dbg !9201
  br label %if.end210

if.end210:                                        ; preds = %if.else209, %if.end208
  br label %if.end211, !dbg !9203

if.end211:                                        ; preds = %if.end210, %if.then137
  br label %if.end212, !dbg !9204

if.end212:                                        ; preds = %if.end211, %land.lhs.true135, %if.else125
  %207 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !9205
  %208 = load %struct.WeightPaintInfo*, %struct.WeightPaintInfo** %wpi.addr, align 8, !dbg !9207
  %209 = load i32, i32* %index.addr, align 4, !dbg !9208
  %210 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !9209
  %211 = load %struct.MDeformWeight*, %struct.MDeformWeight** %tdw, align 8, !dbg !9210
  %212 = load float, float* %change, align 4, !dbg !9211
  %213 = load float, float* %oldChange, align 4, !dbg !9212
  %214 = load float, float* %oldw, align 4, !dbg !9213
  %215 = load float, float* %neww, align 4, !dbg !9214
  %call213 = call i32 @apply_mp_locks_normalize(%struct.Mesh* %207, %struct.WeightPaintInfo* %208, i32 %209, %struct.MDeformWeight* %210, %struct.MDeformWeight* %211, float %212, float %213, float %214, float %215), !dbg !9215
  %tobool214 = icmp ne i32 %call213, 0, !dbg !9215
  br i1 %tobool214, label %if.then215, label %if.end216, !dbg !9216

if.then215:                                       ; preds = %if.end212
  %216 = load %struct.MDeformVert*, %struct.MDeformVert** %dv, align 8, !dbg !9217
  call void @defvert_reset_to_prev(%struct.MDeformVert* %dv_copy, %struct.MDeformVert* %216), !dbg !9219
  store float 0.000000e+00, float* %change, align 4, !dbg !9220
  store float 0.000000e+00, float* %oldChange, align 4, !dbg !9221
  br label %if.end216, !dbg !9222

if.end216:                                        ; preds = %if.then215, %if.end212
  %dw217 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %dv_copy, i32 0, i32 0, !dbg !9223
  %217 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw217, align 8, !dbg !9223
  %tobool218 = icmp ne %struct.MDeformWeight* %217, null, !dbg !9225
  br i1 %tobool218, label %if.then219, label %if.end221, !dbg !9226

if.then219:                                       ; preds = %if.end216
  %218 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !9227
  %dw220 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %dv_copy, i32 0, i32 0, !dbg !9229
  %219 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw220, align 8, !dbg !9229
  %220 = bitcast %struct.MDeformWeight* %219 to i8*, !dbg !9230
  call void %218(i8* %220), !dbg !9227
  br label %if.end221, !dbg !9231

if.end221:                                        ; preds = %if.then219, %if.end216
  store %struct.MDeformWeight* null, %struct.MDeformWeight** %dw, align 8, !dbg !9232
  %221 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !9233
  %222 = load i32, i32* %index_mirr, align 4, !dbg !9234
  %cmp222 = icmp ne i32 %222, -1, !dbg !9236
  br i1 %cmp222, label %if.then224, label %if.end226, !dbg !9237

if.then224:                                       ; preds = %if.end221
  %223 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !9238
  %224 = load %struct.WeightPaintInfo*, %struct.WeightPaintInfo** %wpi.addr, align 8, !dbg !9240
  %225 = load i32, i32* %index_mirr, align 4, !dbg !9241
  %226 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw_mirr, align 8, !dbg !9242
  %227 = load %struct.MDeformWeight*, %struct.MDeformWeight** %tdw, align 8, !dbg !9243
  %228 = load float, float* %change, align 4, !dbg !9244
  %229 = load float, float* %oldChange, align 4, !dbg !9245
  %230 = load float, float* %oldw, align 4, !dbg !9246
  %231 = load float, float* %neww, align 4, !dbg !9247
  %call225 = call i32 @apply_mp_locks_normalize(%struct.Mesh* %223, %struct.WeightPaintInfo* %224, i32 %225, %struct.MDeformWeight* %226, %struct.MDeformWeight* %227, float %228, float %229, float %230, float %231), !dbg !9248
  br label %if.end226, !dbg !9249

if.end226:                                        ; preds = %if.then224, %if.end221
  br label %if.end227

if.end227:                                        ; preds = %if.then23, %if.end226, %if.end124
  ret void, !dbg !9250
}

declare dso_local %struct.ImBuf* @view3d_read_backbuf(%struct.ViewContext*, i16 signext, i16 signext, i16 signext, i16 signext) #2

declare dso_local i32 @WM_framebuffer_to_index(i32) #2

declare dso_local void @IMB_freeImBuf(%struct.ImBuf*) #2

declare dso_local i32 @ED_view3d_project_float_object(%struct.ARegion*, float*, float*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal float @len_squared_v2v2(float* %a, float* %b) #0 !dbg !9251 {
entry:
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  %d = alloca [2 x float], align 4
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !9255, metadata !DIExpression()), !dbg !9256
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !9257, metadata !DIExpression()), !dbg !9258
  call void @llvm.dbg.declare(metadata [2 x float]* %d, metadata !9259, metadata !DIExpression()), !dbg !9260
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %d, i64 0, i64 0, !dbg !9261
  %0 = load float*, float** %b.addr, align 8, !dbg !9262
  %1 = load float*, float** %a.addr, align 8, !dbg !9263
  call void @sub_v2_v2v2(float* %arraydecay, float* %0, float* %1), !dbg !9264
  %arraydecay1 = getelementptr inbounds [2 x float], [2 x float]* %d, i64 0, i64 0, !dbg !9265
  %arraydecay2 = getelementptr inbounds [2 x float], [2 x float]* %d, i64 0, i64 0, !dbg !9266
  %call = call float @dot_v2v2(float* %arraydecay1, float* %arraydecay2), !dbg !9267
  ret float %call, !dbg !9268
}

; Function Attrs: nounwind
declare dso_local float @sqrtf(float) #4

declare dso_local float @BKE_brush_sample_tex_3D(%struct.Scene*, %struct.Brush*, float*, float*, i32, %struct.ImagePool*) #2

declare dso_local float @BKE_brush_curve_strength_clamp(%struct.Brush*, float, float) #2

; Function Attrs: noinline nounwind uwtable
define internal void @zero_v4(float* %r) #0 !dbg !9269 {
entry:
  %r.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !9272, metadata !DIExpression()), !dbg !9273
  %0 = load float*, float** %r.addr, align 8, !dbg !9274
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !9274
  store float 0.000000e+00, float* %arrayidx, align 4, !dbg !9275
  %1 = load float*, float** %r.addr, align 8, !dbg !9276
  %arrayidx1 = getelementptr inbounds float, float* %1, i64 1, !dbg !9276
  store float 0.000000e+00, float* %arrayidx1, align 4, !dbg !9277
  %2 = load float*, float** %r.addr, align 8, !dbg !9278
  %arrayidx2 = getelementptr inbounds float, float* %2, i64 2, !dbg !9278
  store float 0.000000e+00, float* %arrayidx2, align 4, !dbg !9279
  %3 = load float*, float** %r.addr, align 8, !dbg !9280
  %arrayidx3 = getelementptr inbounds float, float* %3, i64 3, !dbg !9280
  store float 0.000000e+00, float* %arrayidx3, align 4, !dbg !9281
  ret void, !dbg !9282
}

; Function Attrs: noinline nounwind uwtable
define internal void @sub_v2_v2v2(float* %r, float* %a, float* %b) #0 !dbg !9283 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !9286, metadata !DIExpression()), !dbg !9287
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !9288, metadata !DIExpression()), !dbg !9289
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !9290, metadata !DIExpression()), !dbg !9291
  %0 = load float*, float** %a.addr, align 8, !dbg !9292
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !9292
  %1 = load float, float* %arrayidx, align 4, !dbg !9292
  %2 = load float*, float** %b.addr, align 8, !dbg !9293
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !9293
  %3 = load float, float* %arrayidx1, align 4, !dbg !9293
  %sub = fsub float %1, %3, !dbg !9294
  %4 = load float*, float** %r.addr, align 8, !dbg !9295
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 0, !dbg !9295
  store float %sub, float* %arrayidx2, align 4, !dbg !9296
  %5 = load float*, float** %a.addr, align 8, !dbg !9297
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !9297
  %6 = load float, float* %arrayidx3, align 4, !dbg !9297
  %7 = load float*, float** %b.addr, align 8, !dbg !9298
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 1, !dbg !9298
  %8 = load float, float* %arrayidx4, align 4, !dbg !9298
  %sub5 = fsub float %6, %8, !dbg !9299
  %9 = load float*, float** %r.addr, align 8, !dbg !9300
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 1, !dbg !9300
  store float %sub5, float* %arrayidx6, align 4, !dbg !9301
  ret void, !dbg !9302
}

; Function Attrs: noinline nounwind uwtable
define internal float @dot_v2v2(float* %a, float* %b) #0 !dbg !9303 {
entry:
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !9304, metadata !DIExpression()), !dbg !9305
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !9306, metadata !DIExpression()), !dbg !9307
  %0 = load float*, float** %a.addr, align 8, !dbg !9308
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !9308
  %1 = load float, float* %arrayidx, align 4, !dbg !9308
  %2 = load float*, float** %b.addr, align 8, !dbg !9309
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !9309
  %3 = load float, float* %arrayidx1, align 4, !dbg !9309
  %mul = fmul float %1, %3, !dbg !9310
  %4 = load float*, float** %a.addr, align 8, !dbg !9311
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !9311
  %5 = load float, float* %arrayidx2, align 4, !dbg !9311
  %6 = load float*, float** %b.addr, align 8, !dbg !9312
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !9312
  %7 = load float, float* %arrayidx3, align 4, !dbg !9312
  %mul4 = fmul float %5, %7, !dbg !9313
  %add = fadd float %mul, %mul4, !dbg !9314
  ret float %add, !dbg !9315
}

; Function Attrs: noinline nounwind uwtable
define internal float @dot_v3v3(float* %a, float* %b) #0 !dbg !9316 {
entry:
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !9317, metadata !DIExpression()), !dbg !9318
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !9319, metadata !DIExpression()), !dbg !9320
  %0 = load float*, float** %a.addr, align 8, !dbg !9321
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !9321
  %1 = load float, float* %arrayidx, align 4, !dbg !9321
  %2 = load float*, float** %b.addr, align 8, !dbg !9322
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !9322
  %3 = load float, float* %arrayidx1, align 4, !dbg !9322
  %mul = fmul float %1, %3, !dbg !9323
  %4 = load float*, float** %a.addr, align 8, !dbg !9324
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !9324
  %5 = load float, float* %arrayidx2, align 4, !dbg !9324
  %6 = load float*, float** %b.addr, align 8, !dbg !9325
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !9325
  %7 = load float, float* %arrayidx3, align 4, !dbg !9325
  %mul4 = fmul float %5, %7, !dbg !9326
  %add = fadd float %mul, %mul4, !dbg !9327
  %8 = load float*, float** %a.addr, align 8, !dbg !9328
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !9328
  %9 = load float, float* %arrayidx5, align 4, !dbg !9328
  %10 = load float*, float** %b.addr, align 8, !dbg !9329
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 2, !dbg !9329
  %11 = load float, float* %arrayidx6, align 4, !dbg !9329
  %mul7 = fmul float %9, %11, !dbg !9330
  %add8 = fadd float %add, %mul7, !dbg !9331
  ret float %add8, !dbg !9332
}

; Function Attrs: noinline nounwind uwtable
define internal float @len_v3(float* %a) #0 !dbg !9333 {
entry:
  %a.addr = alloca float*, align 8
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !9336, metadata !DIExpression()), !dbg !9337
  %0 = load float*, float** %a.addr, align 8, !dbg !9338
  %1 = load float*, float** %a.addr, align 8, !dbg !9339
  %call = call float @dot_v3v3(float* %0, float* %1), !dbg !9340
  %call1 = call float @sqrtf(float %call) #5, !dbg !9341
  ret float %call1, !dbg !9342
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @has_locked_group(%struct.MDeformVert* %dvert, i32 %defbase_tot, i8* %bone_groups, i8* %lock_flags) #0 !dbg !9343 {
entry:
  %retval = alloca i8, align 1
  %dvert.addr = alloca %struct.MDeformVert*, align 8
  %defbase_tot.addr = alloca i32, align 4
  %bone_groups.addr = alloca i8*, align 8
  %lock_flags.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %dw = alloca %struct.MDeformWeight*, align 8
  store %struct.MDeformVert* %dvert, %struct.MDeformVert** %dvert.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MDeformVert** %dvert.addr, metadata !9346, metadata !DIExpression()), !dbg !9347
  store i32 %defbase_tot, i32* %defbase_tot.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %defbase_tot.addr, metadata !9348, metadata !DIExpression()), !dbg !9349
  store i8* %bone_groups, i8** %bone_groups.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %bone_groups.addr, metadata !9350, metadata !DIExpression()), !dbg !9351
  store i8* %lock_flags, i8** %lock_flags.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %lock_flags.addr, metadata !9352, metadata !DIExpression()), !dbg !9353
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9354, metadata !DIExpression()), !dbg !9355
  call void @llvm.dbg.declare(metadata %struct.MDeformWeight** %dw, metadata !9356, metadata !DIExpression()), !dbg !9357
  %0 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert.addr, align 8, !dbg !9358
  %totweight = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %0, i32 0, i32 1, !dbg !9360
  %1 = load i32, i32* %totweight, align 8, !dbg !9360
  store i32 %1, i32* %i, align 4, !dbg !9361
  %2 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert.addr, align 8, !dbg !9362
  %dw1 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %2, i32 0, i32 0, !dbg !9363
  %3 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw1, align 8, !dbg !9363
  store %struct.MDeformWeight* %3, %struct.MDeformWeight** %dw, align 8, !dbg !9364
  br label %for.cond, !dbg !9365

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load i32, i32* %i, align 4, !dbg !9366
  %cmp = icmp ne i32 %4, 0, !dbg !9368
  br i1 %cmp, label %for.body, label %for.end, !dbg !9369

for.body:                                         ; preds = %for.cond
  %5 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !9370
  %def_nr = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %5, i32 0, i32 0, !dbg !9373
  %6 = load i32, i32* %def_nr, align 4, !dbg !9373
  %7 = load i32, i32* %defbase_tot.addr, align 4, !dbg !9374
  %cmp2 = icmp slt i32 %6, %7, !dbg !9375
  br i1 %cmp2, label %if.then, label %if.end13, !dbg !9376

if.then:                                          ; preds = %for.body
  %8 = load i8*, i8** %bone_groups.addr, align 8, !dbg !9377
  %9 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !9380
  %def_nr3 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %9, i32 0, i32 0, !dbg !9381
  %10 = load i32, i32* %def_nr3, align 4, !dbg !9381
  %idxprom = sext i32 %10 to i64, !dbg !9377
  %arrayidx = getelementptr inbounds i8, i8* %8, i64 %idxprom, !dbg !9377
  %11 = load i8, i8* %arrayidx, align 1, !dbg !9377
  %conv = zext i8 %11 to i32, !dbg !9377
  %tobool = icmp ne i32 %conv, 0, !dbg !9377
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !9382

land.lhs.true:                                    ; preds = %if.then
  %12 = load i8*, i8** %lock_flags.addr, align 8, !dbg !9383
  %13 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !9384
  %def_nr4 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %13, i32 0, i32 0, !dbg !9385
  %14 = load i32, i32* %def_nr4, align 4, !dbg !9385
  %idxprom5 = sext i32 %14 to i64, !dbg !9383
  %arrayidx6 = getelementptr inbounds i8, i8* %12, i64 %idxprom5, !dbg !9383
  %15 = load i8, i8* %arrayidx6, align 1, !dbg !9383
  %conv7 = zext i8 %15 to i32, !dbg !9383
  %tobool8 = icmp ne i32 %conv7, 0, !dbg !9383
  br i1 %tobool8, label %land.lhs.true9, label %if.end, !dbg !9386

land.lhs.true9:                                   ; preds = %land.lhs.true
  %16 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !9387
  %weight = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %16, i32 0, i32 1, !dbg !9388
  %17 = load float, float* %weight, align 4, !dbg !9388
  %cmp10 = fcmp ogt float %17, 0.000000e+00, !dbg !9389
  br i1 %cmp10, label %if.then12, label %if.end, !dbg !9390

if.then12:                                        ; preds = %land.lhs.true9
  store i8 1, i8* %retval, align 1, !dbg !9391
  br label %return, !dbg !9391

if.end:                                           ; preds = %land.lhs.true9, %land.lhs.true, %if.then
  br label %if.end13, !dbg !9393

if.end13:                                         ; preds = %if.end, %for.body
  br label %for.inc, !dbg !9394

for.inc:                                          ; preds = %if.end13
  %18 = load i32, i32* %i, align 4, !dbg !9395
  %dec = add nsw i32 %18, -1, !dbg !9395
  store i32 %dec, i32* %i, align 4, !dbg !9395
  %19 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !9396
  %incdec.ptr = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %19, i32 1, !dbg !9396
  store %struct.MDeformWeight* %incdec.ptr, %struct.MDeformWeight** %dw, align 8, !dbg !9396
  br label %for.cond, !dbg !9397, !llvm.loop !9398

for.end:                                          ; preds = %for.cond
  store i8 0, i8* %retval, align 1, !dbg !9400
  br label %return, !dbg !9400

return:                                           ; preds = %for.end, %if.then12
  %20 = load i8, i8* %retval, align 1, !dbg !9401
  ret i8 %20, !dbg !9401
}

; Function Attrs: noinline nounwind uwtable
define internal float @wpaint_blend(%struct.VPaint* %wp, float %weight, float %weight_prev, float %alpha, float %paintval, float %brush_alpha_value, i16 signext %do_flip, i16 signext %do_multipaint_totsel) #0 !dbg !9402 {
entry:
  %wp.addr = alloca %struct.VPaint*, align 8
  %weight.addr = alloca float, align 4
  %weight_prev.addr = alloca float, align 4
  %alpha.addr = alloca float, align 4
  %paintval.addr = alloca float, align 4
  %brush_alpha_value.addr = alloca float, align 4
  %do_flip.addr = alloca i16, align 2
  %do_multipaint_totsel.addr = alloca i16, align 2
  %brush = alloca %struct.Brush*, align 8
  %tool = alloca i32, align 4
  %testw = alloca float, align 4
  store %struct.VPaint* %wp, %struct.VPaint** %wp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VPaint** %wp.addr, metadata !9405, metadata !DIExpression()), !dbg !9406
  store float %weight, float* %weight.addr, align 4
  call void @llvm.dbg.declare(metadata float* %weight.addr, metadata !9407, metadata !DIExpression()), !dbg !9408
  store float %weight_prev, float* %weight_prev.addr, align 4
  call void @llvm.dbg.declare(metadata float* %weight_prev.addr, metadata !9409, metadata !DIExpression()), !dbg !9410
  store float %alpha, float* %alpha.addr, align 4
  call void @llvm.dbg.declare(metadata float* %alpha.addr, metadata !9411, metadata !DIExpression()), !dbg !9412
  store float %paintval, float* %paintval.addr, align 4
  call void @llvm.dbg.declare(metadata float* %paintval.addr, metadata !9413, metadata !DIExpression()), !dbg !9414
  store float %brush_alpha_value, float* %brush_alpha_value.addr, align 4
  call void @llvm.dbg.declare(metadata float* %brush_alpha_value.addr, metadata !9415, metadata !DIExpression()), !dbg !9416
  store i16 %do_flip, i16* %do_flip.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %do_flip.addr, metadata !9417, metadata !DIExpression()), !dbg !9418
  store i16 %do_multipaint_totsel, i16* %do_multipaint_totsel.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %do_multipaint_totsel.addr, metadata !9419, metadata !DIExpression()), !dbg !9420
  call void @llvm.dbg.declare(metadata %struct.Brush** %brush, metadata !9421, metadata !DIExpression()), !dbg !9422
  %0 = load %struct.VPaint*, %struct.VPaint** %wp.addr, align 8, !dbg !9423
  %paint = getelementptr inbounds %struct.VPaint, %struct.VPaint* %0, i32 0, i32 0, !dbg !9424
  %call = call %struct.Brush* @BKE_paint_brush(%struct.Paint* %paint), !dbg !9425
  store %struct.Brush* %call, %struct.Brush** %brush, align 8, !dbg !9422
  call void @llvm.dbg.declare(metadata i32* %tool, metadata !9426, metadata !DIExpression()), !dbg !9427
  %1 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !9428
  %vertexpaint_tool = getelementptr inbounds %struct.Brush, %struct.Brush* %1, i32 0, i32 35, !dbg !9429
  %2 = load i8, i8* %vertexpaint_tool, align 1, !dbg !9429
  %conv = zext i8 %2 to i32, !dbg !9428
  store i32 %conv, i32* %tool, align 4, !dbg !9427
  %3 = load i16, i16* %do_flip.addr, align 2, !dbg !9430
  %tobool = icmp ne i16 %3, 0, !dbg !9430
  br i1 %tobool, label %if.then, label %if.end, !dbg !9432

if.then:                                          ; preds = %entry
  %4 = load i32, i32* %tool, align 4, !dbg !9433
  switch i32 %4, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb1
    i32 2, label %sw.bb2
    i32 5, label %sw.bb3
    i32 6, label %sw.bb4
  ], !dbg !9435

sw.bb:                                            ; preds = %if.then
  %5 = load float, float* %paintval.addr, align 4, !dbg !9436
  %sub = fsub float 1.000000e+00, %5, !dbg !9438
  store float %sub, float* %paintval.addr, align 4, !dbg !9439
  br label %sw.epilog, !dbg !9440

sw.bb1:                                           ; preds = %if.then
  store i32 2, i32* %tool, align 4, !dbg !9441
  br label %sw.epilog, !dbg !9442

sw.bb2:                                           ; preds = %if.then
  store i32 1, i32* %tool, align 4, !dbg !9443
  br label %sw.epilog, !dbg !9444

sw.bb3:                                           ; preds = %if.then
  store i32 6, i32* %tool, align 4, !dbg !9445
  br label %sw.epilog, !dbg !9446

sw.bb4:                                           ; preds = %if.then
  store i32 5, i32* %tool, align 4, !dbg !9447
  br label %sw.epilog, !dbg !9448

sw.epilog:                                        ; preds = %if.then, %sw.bb4, %sw.bb3, %sw.bb2, %sw.bb1, %sw.bb
  br label %if.end, !dbg !9449

if.end:                                           ; preds = %sw.epilog, %entry
  %6 = load i32, i32* %tool, align 4, !dbg !9450
  %7 = load float, float* %weight.addr, align 4, !dbg !9451
  %8 = load float, float* %paintval.addr, align 4, !dbg !9452
  %9 = load float, float* %alpha.addr, align 4, !dbg !9453
  %call5 = call float @wpaint_blend_tool(i32 %6, float %7, float %8, float %9), !dbg !9454
  store float %call5, float* %weight.addr, align 4, !dbg !9455
  %10 = load i16, i16* %do_multipaint_totsel.addr, align 2, !dbg !9456
  %conv6 = sext i16 %10 to i32, !dbg !9456
  %cmp = icmp eq i32 %conv6, 0, !dbg !9458
  br i1 %cmp, label %if.then8, label %if.end17, !dbg !9459

if.then8:                                         ; preds = %if.end
  %11 = load float, float* %weight.addr, align 4, !dbg !9460
  %cmp9 = fcmp olt float %11, 0.000000e+00, !dbg !9460
  br i1 %cmp9, label %if.then11, label %if.else, !dbg !9464

if.then11:                                        ; preds = %if.then8
  store float 0.000000e+00, float* %weight.addr, align 4, !dbg !9460
  br label %if.end16, !dbg !9460

if.else:                                          ; preds = %if.then8
  %12 = load float, float* %weight.addr, align 4, !dbg !9465
  %cmp12 = fcmp ogt float %12, 1.000000e+00, !dbg !9465
  br i1 %cmp12, label %if.then14, label %if.end15, !dbg !9460

if.then14:                                        ; preds = %if.else
  store float 1.000000e+00, float* %weight.addr, align 4, !dbg !9465
  br label %if.end15, !dbg !9465

if.end15:                                         ; preds = %if.then14, %if.else
  br label %if.end16

if.end16:                                         ; preds = %if.end15, %if.then11
  br label %if.end17, !dbg !9467

if.end17:                                         ; preds = %if.end16, %if.end
  %13 = load %struct.VPaint*, %struct.VPaint** %wp.addr, align 8, !dbg !9468
  %flag = getelementptr inbounds %struct.VPaint, %struct.VPaint* %13, i32 0, i32 1, !dbg !9470
  %14 = load i16, i16* %flag, align 8, !dbg !9470
  %conv18 = sext i16 %14 to i32, !dbg !9468
  %and = and i32 %conv18, 16, !dbg !9471
  %cmp19 = icmp eq i32 %and, 0, !dbg !9472
  br i1 %cmp19, label %if.then21, label %if.end60, !dbg !9473

if.then21:                                        ; preds = %if.end17
  %15 = load i16, i16* %do_multipaint_totsel.addr, align 2, !dbg !9474
  %conv22 = sext i16 %15 to i32, !dbg !9474
  %cmp23 = icmp eq i32 %conv22, 0, !dbg !9477
  br i1 %cmp23, label %if.then25, label %if.end59, !dbg !9478

if.then25:                                        ; preds = %if.then21
  call void @llvm.dbg.declare(metadata float* %testw, metadata !9479, metadata !DIExpression()), !dbg !9481
  %16 = load i32, i32* %tool, align 4, !dbg !9482
  %17 = load float, float* %weight_prev.addr, align 4, !dbg !9483
  %18 = load float, float* %paintval.addr, align 4, !dbg !9484
  %19 = load float, float* %brush_alpha_value.addr, align 4, !dbg !9485
  %call26 = call float @wpaint_blend_tool(i32 %16, float %17, float %18, float %19), !dbg !9486
  store float %call26, float* %testw, align 4, !dbg !9481
  %20 = load float, float* %testw, align 4, !dbg !9487
  %cmp27 = fcmp olt float %20, 0.000000e+00, !dbg !9487
  br i1 %cmp27, label %if.then29, label %if.else30, !dbg !9490

if.then29:                                        ; preds = %if.then25
  store float 0.000000e+00, float* %testw, align 4, !dbg !9487
  br label %if.end35, !dbg !9487

if.else30:                                        ; preds = %if.then25
  %21 = load float, float* %testw, align 4, !dbg !9491
  %cmp31 = fcmp ogt float %21, 1.000000e+00, !dbg !9491
  br i1 %cmp31, label %if.then33, label %if.end34, !dbg !9487

if.then33:                                        ; preds = %if.else30
  store float 1.000000e+00, float* %testw, align 4, !dbg !9491
  br label %if.end34, !dbg !9491

if.end34:                                         ; preds = %if.then33, %if.else30
  br label %if.end35

if.end35:                                         ; preds = %if.end34, %if.then29
  %22 = load float, float* %testw, align 4, !dbg !9493
  %23 = load float, float* %weight_prev.addr, align 4, !dbg !9495
  %cmp36 = fcmp olt float %22, %23, !dbg !9496
  br i1 %cmp36, label %if.then38, label %if.else48, !dbg !9497

if.then38:                                        ; preds = %if.end35
  %24 = load float, float* %weight.addr, align 4, !dbg !9498
  %25 = load float, float* %testw, align 4, !dbg !9501
  %cmp39 = fcmp olt float %24, %25, !dbg !9502
  br i1 %cmp39, label %if.then41, label %if.else42, !dbg !9503

if.then41:                                        ; preds = %if.then38
  %26 = load float, float* %testw, align 4, !dbg !9504
  store float %26, float* %weight.addr, align 4, !dbg !9505
  br label %if.end47, !dbg !9506

if.else42:                                        ; preds = %if.then38
  %27 = load float, float* %weight.addr, align 4, !dbg !9507
  %28 = load float, float* %weight_prev.addr, align 4, !dbg !9509
  %cmp43 = fcmp ogt float %27, %28, !dbg !9510
  br i1 %cmp43, label %if.then45, label %if.end46, !dbg !9511

if.then45:                                        ; preds = %if.else42
  %29 = load float, float* %weight_prev.addr, align 4, !dbg !9512
  store float %29, float* %weight.addr, align 4, !dbg !9513
  br label %if.end46, !dbg !9514

if.end46:                                         ; preds = %if.then45, %if.else42
  br label %if.end47

if.end47:                                         ; preds = %if.end46, %if.then41
  br label %if.end58, !dbg !9515

if.else48:                                        ; preds = %if.end35
  %30 = load float, float* %weight.addr, align 4, !dbg !9516
  %31 = load float, float* %testw, align 4, !dbg !9519
  %cmp49 = fcmp ogt float %30, %31, !dbg !9520
  br i1 %cmp49, label %if.then51, label %if.else52, !dbg !9521

if.then51:                                        ; preds = %if.else48
  %32 = load float, float* %testw, align 4, !dbg !9522
  store float %32, float* %weight.addr, align 4, !dbg !9523
  br label %if.end57, !dbg !9524

if.else52:                                        ; preds = %if.else48
  %33 = load float, float* %weight.addr, align 4, !dbg !9525
  %34 = load float, float* %weight_prev.addr, align 4, !dbg !9527
  %cmp53 = fcmp olt float %33, %34, !dbg !9528
  br i1 %cmp53, label %if.then55, label %if.end56, !dbg !9529

if.then55:                                        ; preds = %if.else52
  %35 = load float, float* %weight_prev.addr, align 4, !dbg !9530
  store float %35, float* %weight.addr, align 4, !dbg !9531
  br label %if.end56, !dbg !9532

if.end56:                                         ; preds = %if.then55, %if.else52
  br label %if.end57

if.end57:                                         ; preds = %if.end56, %if.then51
  br label %if.end58

if.end58:                                         ; preds = %if.end57, %if.end47
  br label %if.end59, !dbg !9533

if.end59:                                         ; preds = %if.end58, %if.then21
  br label %if.end60, !dbg !9534

if.end60:                                         ; preds = %if.end59, %if.end17
  %36 = load float, float* %weight.addr, align 4, !dbg !9535
  ret float %36, !dbg !9536
}

; Function Attrs: noinline nounwind uwtable
define internal void @do_weight_paint_normalize_all_active(%struct.MDeformVert* %dvert, i32 %defbase_tot, i8* %vgroup_validmap, i32 %vgroup_active) #0 !dbg !9537 {
entry:
  %dvert.addr = alloca %struct.MDeformVert*, align 8
  %defbase_tot.addr = alloca i32, align 4
  %vgroup_validmap.addr = alloca i8*, align 8
  %vgroup_active.addr = alloca i32, align 4
  %sum = alloca float, align 4
  %fac = alloca float, align 4
  %i = alloca i32, align 4
  %tot = alloca i32, align 4
  %dw = alloca %struct.MDeformWeight*, align 8
  %act_weight = alloca float, align 4
  store %struct.MDeformVert* %dvert, %struct.MDeformVert** %dvert.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MDeformVert** %dvert.addr, metadata !9540, metadata !DIExpression()), !dbg !9541
  store i32 %defbase_tot, i32* %defbase_tot.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %defbase_tot.addr, metadata !9542, metadata !DIExpression()), !dbg !9543
  store i8* %vgroup_validmap, i8** %vgroup_validmap.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %vgroup_validmap.addr, metadata !9544, metadata !DIExpression()), !dbg !9545
  store i32 %vgroup_active, i32* %vgroup_active.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %vgroup_active.addr, metadata !9546, metadata !DIExpression()), !dbg !9547
  call void @llvm.dbg.declare(metadata float* %sum, metadata !9548, metadata !DIExpression()), !dbg !9549
  store float 0.000000e+00, float* %sum, align 4, !dbg !9549
  call void @llvm.dbg.declare(metadata float* %fac, metadata !9550, metadata !DIExpression()), !dbg !9551
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9552, metadata !DIExpression()), !dbg !9553
  call void @llvm.dbg.declare(metadata i32* %tot, metadata !9554, metadata !DIExpression()), !dbg !9555
  store i32 0, i32* %tot, align 4, !dbg !9555
  call void @llvm.dbg.declare(metadata %struct.MDeformWeight** %dw, metadata !9556, metadata !DIExpression()), !dbg !9557
  call void @llvm.dbg.declare(metadata float* %act_weight, metadata !9558, metadata !DIExpression()), !dbg !9559
  store float 0.000000e+00, float* %act_weight, align 4, !dbg !9559
  %0 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert.addr, align 8, !dbg !9560
  %totweight = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %0, i32 0, i32 1, !dbg !9562
  %1 = load i32, i32* %totweight, align 8, !dbg !9562
  store i32 %1, i32* %i, align 4, !dbg !9563
  %2 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert.addr, align 8, !dbg !9564
  %dw1 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %2, i32 0, i32 0, !dbg !9565
  %3 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw1, align 8, !dbg !9565
  store %struct.MDeformWeight* %3, %struct.MDeformWeight** %dw, align 8, !dbg !9566
  br label %for.cond, !dbg !9567

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load i32, i32* %i, align 4, !dbg !9568
  %cmp = icmp ne i32 %4, 0, !dbg !9570
  br i1 %cmp, label %for.body, label %for.end, !dbg !9571

for.body:                                         ; preds = %for.cond
  %5 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !9572
  %def_nr = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %5, i32 0, i32 0, !dbg !9575
  %6 = load i32, i32* %def_nr, align 4, !dbg !9575
  %7 = load i32, i32* %defbase_tot.addr, align 4, !dbg !9576
  %cmp2 = icmp slt i32 %6, %7, !dbg !9577
  br i1 %cmp2, label %land.lhs.true, label %if.end9, !dbg !9578

land.lhs.true:                                    ; preds = %for.body
  %8 = load i8*, i8** %vgroup_validmap.addr, align 8, !dbg !9579
  %9 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !9580
  %def_nr3 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %9, i32 0, i32 0, !dbg !9581
  %10 = load i32, i32* %def_nr3, align 4, !dbg !9581
  %idxprom = sext i32 %10 to i64, !dbg !9579
  %arrayidx = getelementptr inbounds i8, i8* %8, i64 %idxprom, !dbg !9579
  %11 = load i8, i8* %arrayidx, align 1, !dbg !9579
  %conv = zext i8 %11 to i32, !dbg !9579
  %tobool = icmp ne i32 %conv, 0, !dbg !9579
  br i1 %tobool, label %if.then, label %if.end9, !dbg !9582

if.then:                                          ; preds = %land.lhs.true
  %12 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !9583
  %def_nr4 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %12, i32 0, i32 0, !dbg !9586
  %13 = load i32, i32* %def_nr4, align 4, !dbg !9586
  %14 = load i32, i32* %vgroup_active.addr, align 4, !dbg !9587
  %cmp5 = icmp ne i32 %13, %14, !dbg !9588
  br i1 %cmp5, label %if.then7, label %if.else, !dbg !9589

if.then7:                                         ; preds = %if.then
  %15 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !9590
  %weight = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %15, i32 0, i32 1, !dbg !9592
  %16 = load float, float* %weight, align 4, !dbg !9592
  %17 = load float, float* %sum, align 4, !dbg !9593
  %add = fadd float %17, %16, !dbg !9593
  store float %add, float* %sum, align 4, !dbg !9593
  %18 = load i32, i32* %tot, align 4, !dbg !9594
  %inc = add i32 %18, 1, !dbg !9594
  store i32 %inc, i32* %tot, align 4, !dbg !9594
  br label %if.end, !dbg !9595

if.else:                                          ; preds = %if.then
  %19 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !9596
  %weight8 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %19, i32 0, i32 1, !dbg !9598
  %20 = load float, float* %weight8, align 4, !dbg !9598
  store float %20, float* %act_weight, align 4, !dbg !9599
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then7
  br label %if.end9, !dbg !9600

if.end9:                                          ; preds = %if.end, %land.lhs.true, %for.body
  br label %for.inc, !dbg !9601

for.inc:                                          ; preds = %if.end9
  %21 = load i32, i32* %i, align 4, !dbg !9602
  %dec = add i32 %21, -1, !dbg !9602
  store i32 %dec, i32* %i, align 4, !dbg !9602
  %22 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !9603
  %incdec.ptr = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %22, i32 1, !dbg !9603
  store %struct.MDeformWeight* %incdec.ptr, %struct.MDeformWeight** %dw, align 8, !dbg !9603
  br label %for.cond, !dbg !9604, !llvm.loop !9605

for.end:                                          ; preds = %for.cond
  %23 = load i32, i32* %tot, align 4, !dbg !9607
  %cmp10 = icmp eq i32 %23, 0, !dbg !9609
  br i1 %cmp10, label %if.then15, label %lor.lhs.false, !dbg !9610

lor.lhs.false:                                    ; preds = %for.end
  %24 = load float, float* %sum, align 4, !dbg !9611
  %25 = load float, float* %act_weight, align 4, !dbg !9612
  %add12 = fadd float %24, %25, !dbg !9613
  %cmp13 = fcmp oeq float %add12, 1.000000e+00, !dbg !9614
  br i1 %cmp13, label %if.then15, label %if.end16, !dbg !9615

if.then15:                                        ; preds = %lor.lhs.false, %for.end
  br label %if.end101, !dbg !9616

if.end16:                                         ; preds = %lor.lhs.false
  %26 = load float, float* %sum, align 4, !dbg !9618
  %cmp17 = fcmp une float %26, 0.000000e+00, !dbg !9620
  br i1 %cmp17, label %if.then19, label %if.else61, !dbg !9621

if.then19:                                        ; preds = %if.end16
  %27 = load float, float* %sum, align 4, !dbg !9622
  %div = fdiv float 1.000000e+00, %27, !dbg !9624
  %28 = load float, float* %act_weight, align 4, !dbg !9625
  %sub = fsub float 1.000000e+00, %28, !dbg !9626
  %mul = fmul float %div, %sub, !dbg !9627
  store float %mul, float* %fac, align 4, !dbg !9628
  %29 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert.addr, align 8, !dbg !9629
  %totweight20 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %29, i32 0, i32 1, !dbg !9631
  %30 = load i32, i32* %totweight20, align 8, !dbg !9631
  store i32 %30, i32* %i, align 4, !dbg !9632
  %31 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert.addr, align 8, !dbg !9633
  %dw21 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %31, i32 0, i32 0, !dbg !9634
  %32 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw21, align 8, !dbg !9634
  store %struct.MDeformWeight* %32, %struct.MDeformWeight** %dw, align 8, !dbg !9635
  br label %for.cond22, !dbg !9636

for.cond22:                                       ; preds = %for.inc57, %if.then19
  %33 = load i32, i32* %i, align 4, !dbg !9637
  %cmp23 = icmp ne i32 %33, 0, !dbg !9639
  br i1 %cmp23, label %for.body25, label %for.end60, !dbg !9640

for.body25:                                       ; preds = %for.cond22
  %34 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !9641
  %def_nr26 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %34, i32 0, i32 0, !dbg !9644
  %35 = load i32, i32* %def_nr26, align 4, !dbg !9644
  %36 = load i32, i32* %defbase_tot.addr, align 4, !dbg !9645
  %cmp27 = icmp slt i32 %35, %36, !dbg !9646
  br i1 %cmp27, label %land.lhs.true29, label %if.end56, !dbg !9647

land.lhs.true29:                                  ; preds = %for.body25
  %37 = load i8*, i8** %vgroup_validmap.addr, align 8, !dbg !9648
  %38 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !9649
  %def_nr30 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %38, i32 0, i32 0, !dbg !9650
  %39 = load i32, i32* %def_nr30, align 4, !dbg !9650
  %idxprom31 = sext i32 %39 to i64, !dbg !9648
  %arrayidx32 = getelementptr inbounds i8, i8* %37, i64 %idxprom31, !dbg !9648
  %40 = load i8, i8* %arrayidx32, align 1, !dbg !9648
  %conv33 = zext i8 %40 to i32, !dbg !9648
  %tobool34 = icmp ne i32 %conv33, 0, !dbg !9648
  br i1 %tobool34, label %if.then35, label %if.end56, !dbg !9651

if.then35:                                        ; preds = %land.lhs.true29
  %41 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !9652
  %def_nr36 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %41, i32 0, i32 0, !dbg !9655
  %42 = load i32, i32* %def_nr36, align 4, !dbg !9655
  %43 = load i32, i32* %vgroup_active.addr, align 4, !dbg !9656
  %cmp37 = icmp ne i32 %42, %43, !dbg !9657
  br i1 %cmp37, label %if.then39, label %if.end55, !dbg !9658

if.then39:                                        ; preds = %if.then35
  %44 = load float, float* %fac, align 4, !dbg !9659
  %45 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !9661
  %weight40 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %45, i32 0, i32 1, !dbg !9662
  %46 = load float, float* %weight40, align 4, !dbg !9663
  %mul41 = fmul float %46, %44, !dbg !9663
  store float %mul41, float* %weight40, align 4, !dbg !9663
  %47 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !9664
  %weight42 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %47, i32 0, i32 1, !dbg !9664
  %48 = load float, float* %weight42, align 4, !dbg !9664
  %cmp43 = fcmp olt float %48, 0.000000e+00, !dbg !9664
  br i1 %cmp43, label %if.then45, label %if.else47, !dbg !9667

if.then45:                                        ; preds = %if.then39
  %49 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !9664
  %weight46 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %49, i32 0, i32 1, !dbg !9664
  store float 0.000000e+00, float* %weight46, align 4, !dbg !9664
  br label %if.end54, !dbg !9664

if.else47:                                        ; preds = %if.then39
  %50 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !9668
  %weight48 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %50, i32 0, i32 1, !dbg !9668
  %51 = load float, float* %weight48, align 4, !dbg !9668
  %cmp49 = fcmp ogt float %51, 1.000000e+00, !dbg !9668
  br i1 %cmp49, label %if.then51, label %if.end53, !dbg !9664

if.then51:                                        ; preds = %if.else47
  %52 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !9668
  %weight52 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %52, i32 0, i32 1, !dbg !9668
  store float 1.000000e+00, float* %weight52, align 4, !dbg !9668
  br label %if.end53, !dbg !9668

if.end53:                                         ; preds = %if.then51, %if.else47
  br label %if.end54

if.end54:                                         ; preds = %if.end53, %if.then45
  br label %if.end55, !dbg !9670

if.end55:                                         ; preds = %if.end54, %if.then35
  br label %if.end56, !dbg !9671

if.end56:                                         ; preds = %if.end55, %land.lhs.true29, %for.body25
  br label %for.inc57, !dbg !9672

for.inc57:                                        ; preds = %if.end56
  %53 = load i32, i32* %i, align 4, !dbg !9673
  %dec58 = add i32 %53, -1, !dbg !9673
  store i32 %dec58, i32* %i, align 4, !dbg !9673
  %54 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !9674
  %incdec.ptr59 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %54, i32 1, !dbg !9674
  store %struct.MDeformWeight* %incdec.ptr59, %struct.MDeformWeight** %dw, align 8, !dbg !9674
  br label %for.cond22, !dbg !9675, !llvm.loop !9676

for.end60:                                        ; preds = %for.cond22
  br label %if.end101, !dbg !9678

if.else61:                                        ; preds = %if.end16
  %55 = load float, float* %act_weight, align 4, !dbg !9679
  %sub62 = fsub float 1.000000e+00, %55, !dbg !9681
  %56 = load i32, i32* %tot, align 4, !dbg !9682
  %conv63 = uitofp i32 %56 to float, !dbg !9682
  %div64 = fdiv float %sub62, %conv63, !dbg !9683
  store float %div64, float* %fac, align 4, !dbg !9684
  %57 = load float, float* %fac, align 4, !dbg !9685
  %cmp65 = fcmp olt float %57, 0.000000e+00, !dbg !9685
  br i1 %cmp65, label %if.then67, label %if.else68, !dbg !9688

if.then67:                                        ; preds = %if.else61
  store float 0.000000e+00, float* %fac, align 4, !dbg !9685
  br label %if.end73, !dbg !9685

if.else68:                                        ; preds = %if.else61
  %58 = load float, float* %fac, align 4, !dbg !9689
  %cmp69 = fcmp ogt float %58, 1.000000e+00, !dbg !9689
  br i1 %cmp69, label %if.then71, label %if.end72, !dbg !9685

if.then71:                                        ; preds = %if.else68
  store float 1.000000e+00, float* %fac, align 4, !dbg !9689
  br label %if.end72, !dbg !9689

if.end72:                                         ; preds = %if.then71, %if.else68
  br label %if.end73

if.end73:                                         ; preds = %if.end72, %if.then67
  %59 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert.addr, align 8, !dbg !9691
  %totweight74 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %59, i32 0, i32 1, !dbg !9693
  %60 = load i32, i32* %totweight74, align 8, !dbg !9693
  store i32 %60, i32* %i, align 4, !dbg !9694
  %61 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert.addr, align 8, !dbg !9695
  %dw75 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %61, i32 0, i32 0, !dbg !9696
  %62 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw75, align 8, !dbg !9696
  store %struct.MDeformWeight* %62, %struct.MDeformWeight** %dw, align 8, !dbg !9697
  br label %for.cond76, !dbg !9698

for.cond76:                                       ; preds = %for.inc97, %if.end73
  %63 = load i32, i32* %i, align 4, !dbg !9699
  %cmp77 = icmp ne i32 %63, 0, !dbg !9701
  br i1 %cmp77, label %for.body79, label %for.end100, !dbg !9702

for.body79:                                       ; preds = %for.cond76
  %64 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !9703
  %def_nr80 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %64, i32 0, i32 0, !dbg !9706
  %65 = load i32, i32* %def_nr80, align 4, !dbg !9706
  %66 = load i32, i32* %defbase_tot.addr, align 4, !dbg !9707
  %cmp81 = icmp slt i32 %65, %66, !dbg !9708
  br i1 %cmp81, label %land.lhs.true83, label %if.end96, !dbg !9709

land.lhs.true83:                                  ; preds = %for.body79
  %67 = load i8*, i8** %vgroup_validmap.addr, align 8, !dbg !9710
  %68 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !9711
  %def_nr84 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %68, i32 0, i32 0, !dbg !9712
  %69 = load i32, i32* %def_nr84, align 4, !dbg !9712
  %idxprom85 = sext i32 %69 to i64, !dbg !9710
  %arrayidx86 = getelementptr inbounds i8, i8* %67, i64 %idxprom85, !dbg !9710
  %70 = load i8, i8* %arrayidx86, align 1, !dbg !9710
  %conv87 = zext i8 %70 to i32, !dbg !9710
  %tobool88 = icmp ne i32 %conv87, 0, !dbg !9710
  br i1 %tobool88, label %if.then89, label %if.end96, !dbg !9713

if.then89:                                        ; preds = %land.lhs.true83
  %71 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !9714
  %def_nr90 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %71, i32 0, i32 0, !dbg !9717
  %72 = load i32, i32* %def_nr90, align 4, !dbg !9717
  %73 = load i32, i32* %vgroup_active.addr, align 4, !dbg !9718
  %cmp91 = icmp ne i32 %72, %73, !dbg !9719
  br i1 %cmp91, label %if.then93, label %if.end95, !dbg !9720

if.then93:                                        ; preds = %if.then89
  %74 = load float, float* %fac, align 4, !dbg !9721
  %75 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !9723
  %weight94 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %75, i32 0, i32 1, !dbg !9724
  store float %74, float* %weight94, align 4, !dbg !9725
  br label %if.end95, !dbg !9726

if.end95:                                         ; preds = %if.then93, %if.then89
  br label %if.end96, !dbg !9727

if.end96:                                         ; preds = %if.end95, %land.lhs.true83, %for.body79
  br label %for.inc97, !dbg !9728

for.inc97:                                        ; preds = %if.end96
  %76 = load i32, i32* %i, align 4, !dbg !9729
  %dec98 = add i32 %76, -1, !dbg !9729
  store i32 %dec98, i32* %i, align 4, !dbg !9729
  %77 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !9730
  %incdec.ptr99 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %77, i32 1, !dbg !9730
  store %struct.MDeformWeight* %incdec.ptr99, %struct.MDeformWeight** %dw, align 8, !dbg !9730
  br label %for.cond76, !dbg !9731, !llvm.loop !9732

for.end100:                                       ; preds = %for.cond76
  br label %if.end101

if.end101:                                        ; preds = %if.then15, %for.end100, %for.end60
  ret void, !dbg !9734
}

; Function Attrs: noinline nounwind uwtable
define internal float @get_mp_change(%struct.MDeformVert* %odv, i32 %defbase_tot, i8* %defbase_sel, float %brush_change) #0 !dbg !9735 {
entry:
  %retval = alloca float, align 4
  %odv.addr = alloca %struct.MDeformVert*, align 8
  %defbase_tot.addr = alloca i32, align 4
  %defbase_sel.addr = alloca i8*, align 8
  %brush_change.addr = alloca float, align 4
  %selwsum = alloca float, align 4
  %i = alloca i32, align 4
  %dw = alloca %struct.MDeformWeight*, align 8
  store %struct.MDeformVert* %odv, %struct.MDeformVert** %odv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MDeformVert** %odv.addr, metadata !9738, metadata !DIExpression()), !dbg !9739
  store i32 %defbase_tot, i32* %defbase_tot.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %defbase_tot.addr, metadata !9740, metadata !DIExpression()), !dbg !9741
  store i8* %defbase_sel, i8** %defbase_sel.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %defbase_sel.addr, metadata !9742, metadata !DIExpression()), !dbg !9743
  store float %brush_change, float* %brush_change.addr, align 4
  call void @llvm.dbg.declare(metadata float* %brush_change.addr, metadata !9744, metadata !DIExpression()), !dbg !9745
  call void @llvm.dbg.declare(metadata float* %selwsum, metadata !9746, metadata !DIExpression()), !dbg !9747
  store float 0.000000e+00, float* %selwsum, align 4, !dbg !9747
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9748, metadata !DIExpression()), !dbg !9749
  call void @llvm.dbg.declare(metadata %struct.MDeformWeight** %dw, metadata !9750, metadata !DIExpression()), !dbg !9751
  %0 = load %struct.MDeformVert*, %struct.MDeformVert** %odv.addr, align 8, !dbg !9752
  %dw1 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %0, i32 0, i32 0, !dbg !9753
  %1 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw1, align 8, !dbg !9753
  store %struct.MDeformWeight* %1, %struct.MDeformWeight** %dw, align 8, !dbg !9751
  %2 = load %struct.MDeformVert*, %struct.MDeformVert** %odv.addr, align 8, !dbg !9754
  %totweight = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %2, i32 0, i32 1, !dbg !9756
  %3 = load i32, i32* %totweight, align 8, !dbg !9756
  store i32 %3, i32* %i, align 4, !dbg !9757
  br label %for.cond, !dbg !9758

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load i32, i32* %i, align 4, !dbg !9759
  %cmp = icmp ne i32 %4, 0, !dbg !9761
  br i1 %cmp, label %for.body, label %for.end, !dbg !9762

for.body:                                         ; preds = %for.cond
  %5 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !9763
  %def_nr = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %5, i32 0, i32 0, !dbg !9766
  %6 = load i32, i32* %def_nr, align 4, !dbg !9766
  %7 = load i32, i32* %defbase_tot.addr, align 4, !dbg !9767
  %cmp2 = icmp slt i32 %6, %7, !dbg !9768
  br i1 %cmp2, label %if.then, label %if.end5, !dbg !9769

if.then:                                          ; preds = %for.body
  %8 = load i8*, i8** %defbase_sel.addr, align 8, !dbg !9770
  %9 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !9773
  %def_nr3 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %9, i32 0, i32 0, !dbg !9774
  %10 = load i32, i32* %def_nr3, align 4, !dbg !9774
  %idxprom = sext i32 %10 to i64, !dbg !9770
  %arrayidx = getelementptr inbounds i8, i8* %8, i64 %idxprom, !dbg !9770
  %11 = load i8, i8* %arrayidx, align 1, !dbg !9770
  %tobool = icmp ne i8 %11, 0, !dbg !9770
  br i1 %tobool, label %if.then4, label %if.end, !dbg !9775

if.then4:                                         ; preds = %if.then
  %12 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !9776
  %weight = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %12, i32 0, i32 1, !dbg !9778
  %13 = load float, float* %weight, align 4, !dbg !9778
  %14 = load float, float* %selwsum, align 4, !dbg !9779
  %add = fadd float %14, %13, !dbg !9779
  store float %add, float* %selwsum, align 4, !dbg !9779
  br label %if.end, !dbg !9780

if.end:                                           ; preds = %if.then4, %if.then
  br label %if.end5, !dbg !9781

if.end5:                                          ; preds = %if.end, %for.body
  br label %for.inc, !dbg !9782

for.inc:                                          ; preds = %if.end5
  %15 = load i32, i32* %i, align 4, !dbg !9783
  %dec = add i32 %15, -1, !dbg !9783
  store i32 %dec, i32* %i, align 4, !dbg !9783
  %16 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !9784
  %incdec.ptr = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %16, i32 1, !dbg !9784
  store %struct.MDeformWeight* %incdec.ptr, %struct.MDeformWeight** %dw, align 8, !dbg !9784
  br label %for.cond, !dbg !9785, !llvm.loop !9786

for.end:                                          ; preds = %for.cond
  %17 = load float, float* %selwsum, align 4, !dbg !9788
  %tobool6 = fcmp une float %17, 0.000000e+00, !dbg !9788
  br i1 %tobool6, label %land.lhs.true, label %if.end11, !dbg !9790

land.lhs.true:                                    ; preds = %for.end
  %18 = load float, float* %selwsum, align 4, !dbg !9791
  %19 = load float, float* %brush_change.addr, align 4, !dbg !9792
  %add7 = fadd float %18, %19, !dbg !9793
  %cmp8 = fcmp ogt float %add7, 0.000000e+00, !dbg !9794
  br i1 %cmp8, label %if.then9, label %if.end11, !dbg !9795

if.then9:                                         ; preds = %land.lhs.true
  %20 = load float, float* %selwsum, align 4, !dbg !9796
  %21 = load float, float* %brush_change.addr, align 4, !dbg !9798
  %add10 = fadd float %20, %21, !dbg !9799
  %22 = load float, float* %selwsum, align 4, !dbg !9800
  %div = fdiv float %add10, %22, !dbg !9801
  store float %div, float* %retval, align 4, !dbg !9802
  br label %return, !dbg !9802

if.end11:                                         ; preds = %land.lhs.true, %for.end
  store float 0.000000e+00, float* %retval, align 4, !dbg !9803
  br label %return, !dbg !9803

return:                                           ; preds = %if.end11, %if.then9
  %23 = load float, float* %retval, align 4, !dbg !9804
  ret float %23, !dbg !9804
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @get_first_selected_nonzero_weight(%struct.MDeformVert* %dvert, i32 %defbase_tot, i8* %defbase_sel) #0 !dbg !9805 {
entry:
  %retval = alloca i32, align 4
  %dvert.addr = alloca %struct.MDeformVert*, align 8
  %defbase_tot.addr = alloca i32, align 4
  %defbase_sel.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %dw = alloca %struct.MDeformWeight*, align 8
  store %struct.MDeformVert* %dvert, %struct.MDeformVert** %dvert.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MDeformVert** %dvert.addr, metadata !9808, metadata !DIExpression()), !dbg !9809
  store i32 %defbase_tot, i32* %defbase_tot.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %defbase_tot.addr, metadata !9810, metadata !DIExpression()), !dbg !9811
  store i8* %defbase_sel, i8** %defbase_sel.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %defbase_sel.addr, metadata !9812, metadata !DIExpression()), !dbg !9813
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9814, metadata !DIExpression()), !dbg !9815
  call void @llvm.dbg.declare(metadata %struct.MDeformWeight** %dw, metadata !9816, metadata !DIExpression()), !dbg !9817
  %0 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert.addr, align 8, !dbg !9818
  %dw1 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %0, i32 0, i32 0, !dbg !9819
  %1 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw1, align 8, !dbg !9819
  store %struct.MDeformWeight* %1, %struct.MDeformWeight** %dw, align 8, !dbg !9817
  store i32 0, i32* %i, align 4, !dbg !9820
  br label %for.cond, !dbg !9822

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %i, align 4, !dbg !9823
  %3 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert.addr, align 8, !dbg !9825
  %totweight = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %3, i32 0, i32 1, !dbg !9826
  %4 = load i32, i32* %totweight, align 8, !dbg !9826
  %cmp = icmp slt i32 %2, %4, !dbg !9827
  br i1 %cmp, label %for.body, label %for.end, !dbg !9828

for.body:                                         ; preds = %for.cond
  %5 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !9829
  %def_nr = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %5, i32 0, i32 0, !dbg !9832
  %6 = load i32, i32* %def_nr, align 4, !dbg !9832
  %7 = load i32, i32* %defbase_tot.addr, align 4, !dbg !9833
  %cmp2 = icmp slt i32 %6, %7, !dbg !9834
  br i1 %cmp2, label %if.then, label %if.end7, !dbg !9835

if.then:                                          ; preds = %for.body
  %8 = load i8*, i8** %defbase_sel.addr, align 8, !dbg !9836
  %9 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !9839
  %def_nr3 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %9, i32 0, i32 0, !dbg !9840
  %10 = load i32, i32* %def_nr3, align 4, !dbg !9840
  %idxprom = sext i32 %10 to i64, !dbg !9836
  %arrayidx = getelementptr inbounds i8, i8* %8, i64 %idxprom, !dbg !9836
  %11 = load i8, i8* %arrayidx, align 1, !dbg !9836
  %conv = zext i8 %11 to i32, !dbg !9836
  %tobool = icmp ne i32 %conv, 0, !dbg !9836
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !9841

land.lhs.true:                                    ; preds = %if.then
  %12 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !9842
  %weight = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %12, i32 0, i32 1, !dbg !9843
  %13 = load float, float* %weight, align 4, !dbg !9843
  %cmp4 = fcmp ogt float %13, 0.000000e+00, !dbg !9844
  br i1 %cmp4, label %if.then6, label %if.end, !dbg !9845

if.then6:                                         ; preds = %land.lhs.true
  %14 = load i32, i32* %i, align 4, !dbg !9846
  store i32 %14, i32* %retval, align 4, !dbg !9848
  br label %return, !dbg !9848

if.end:                                           ; preds = %land.lhs.true, %if.then
  br label %if.end7, !dbg !9849

if.end7:                                          ; preds = %if.end, %for.body
  br label %for.inc, !dbg !9850

for.inc:                                          ; preds = %if.end7
  %15 = load i32, i32* %i, align 4, !dbg !9851
  %inc = add nsw i32 %15, 1, !dbg !9851
  store i32 %inc, i32* %i, align 4, !dbg !9851
  %16 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !9852
  %incdec.ptr = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %16, i32 1, !dbg !9852
  store %struct.MDeformWeight* %incdec.ptr, %struct.MDeformWeight** %dw, align 8, !dbg !9852
  br label %for.cond, !dbg !9853, !llvm.loop !9854

for.end:                                          ; preds = %for.cond
  store i32 -1, i32* %retval, align 4, !dbg !9856
  br label %return, !dbg !9856

return:                                           ; preds = %for.end, %if.then6
  %17 = load i32, i32* %retval, align 4, !dbg !9857
  ret i32 %17, !dbg !9857
}

; Function Attrs: noinline nounwind uwtable
define internal void @defvert_reset_to_prev(%struct.MDeformVert* %dv_prev, %struct.MDeformVert* %dv) #0 !dbg !9858 {
entry:
  %dv_prev.addr = alloca %struct.MDeformVert*, align 8
  %dv.addr = alloca %struct.MDeformVert*, align 8
  %dw = alloca %struct.MDeformWeight*, align 8
  %dw_prev = alloca %struct.MDeformWeight*, align 8
  %i = alloca i32, align 4
  store %struct.MDeformVert* %dv_prev, %struct.MDeformVert** %dv_prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MDeformVert** %dv_prev.addr, metadata !9861, metadata !DIExpression()), !dbg !9862
  store %struct.MDeformVert* %dv, %struct.MDeformVert** %dv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MDeformVert** %dv.addr, metadata !9863, metadata !DIExpression()), !dbg !9864
  call void @llvm.dbg.declare(metadata %struct.MDeformWeight** %dw, metadata !9865, metadata !DIExpression()), !dbg !9866
  %0 = load %struct.MDeformVert*, %struct.MDeformVert** %dv.addr, align 8, !dbg !9867
  %dw1 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %0, i32 0, i32 0, !dbg !9868
  %1 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw1, align 8, !dbg !9868
  store %struct.MDeformWeight* %1, %struct.MDeformWeight** %dw, align 8, !dbg !9866
  call void @llvm.dbg.declare(metadata %struct.MDeformWeight** %dw_prev, metadata !9869, metadata !DIExpression()), !dbg !9870
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9871, metadata !DIExpression()), !dbg !9872
  %2 = load %struct.MDeformVert*, %struct.MDeformVert** %dv.addr, align 8, !dbg !9873
  %totweight = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %2, i32 0, i32 1, !dbg !9875
  %3 = load i32, i32* %totweight, align 8, !dbg !9875
  store i32 %3, i32* %i, align 4, !dbg !9876
  br label %for.cond, !dbg !9877

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load i32, i32* %i, align 4, !dbg !9878
  %cmp = icmp ne i32 %4, 0, !dbg !9880
  br i1 %cmp, label %for.body, label %for.end, !dbg !9881

for.body:                                         ; preds = %for.cond
  %5 = load %struct.MDeformVert*, %struct.MDeformVert** %dv_prev.addr, align 8, !dbg !9882
  %6 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !9884
  %def_nr = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %6, i32 0, i32 0, !dbg !9885
  %7 = load i32, i32* %def_nr, align 4, !dbg !9885
  %call = call %struct.MDeformWeight* @defvert_find_index(%struct.MDeformVert* %5, i32 %7), !dbg !9886
  store %struct.MDeformWeight* %call, %struct.MDeformWeight** %dw_prev, align 8, !dbg !9887
  %8 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw_prev, align 8, !dbg !9888
  %tobool = icmp ne %struct.MDeformWeight* %8, null, !dbg !9888
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !9888

cond.true:                                        ; preds = %for.body
  %9 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw_prev, align 8, !dbg !9889
  %weight = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %9, i32 0, i32 1, !dbg !9890
  %10 = load float, float* %weight, align 4, !dbg !9890
  br label %cond.end, !dbg !9888

cond.false:                                       ; preds = %for.body
  br label %cond.end, !dbg !9888

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %10, %cond.true ], [ 0.000000e+00, %cond.false ], !dbg !9888
  %11 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !9891
  %weight2 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %11, i32 0, i32 1, !dbg !9892
  store float %cond, float* %weight2, align 4, !dbg !9893
  br label %for.inc, !dbg !9894

for.inc:                                          ; preds = %cond.end
  %12 = load i32, i32* %i, align 4, !dbg !9895
  %dec = add i32 %12, -1, !dbg !9895
  store i32 %dec, i32* %i, align 4, !dbg !9895
  %13 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !9896
  %incdec.ptr = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %13, i32 1, !dbg !9896
  store %struct.MDeformWeight* %incdec.ptr, %struct.MDeformWeight** %dw, align 8, !dbg !9896
  br label %for.cond, !dbg !9897, !llvm.loop !9898

for.end:                                          ; preds = %for.cond
  ret void, !dbg !9900
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @apply_mp_locks_normalize(%struct.Mesh* %me, %struct.WeightPaintInfo* %wpi, i32 %index, %struct.MDeformWeight* %dw, %struct.MDeformWeight* %tdw, float %change, float %oldChange, float %oldw, float %neww) #0 !dbg !9901 {
entry:
  %retval = alloca i32, align 4
  %me.addr = alloca %struct.Mesh*, align 8
  %wpi.addr = alloca %struct.WeightPaintInfo*, align 8
  %index.addr = alloca i32, align 4
  %dw.addr = alloca %struct.MDeformWeight*, align 8
  %tdw.addr = alloca %struct.MDeformWeight*, align 8
  %change.addr = alloca float, align 4
  %oldChange.addr = alloca float, align 4
  %oldw.addr = alloca float, align 4
  %neww.addr = alloca float, align 4
  %dv = alloca %struct.MDeformVert*, align 8
  %dv_test = alloca %struct.MDeformVert, align 8
  store %struct.Mesh* %me, %struct.Mesh** %me.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me.addr, metadata !9904, metadata !DIExpression()), !dbg !9905
  store %struct.WeightPaintInfo* %wpi, %struct.WeightPaintInfo** %wpi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WeightPaintInfo** %wpi.addr, metadata !9906, metadata !DIExpression()), !dbg !9907
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !9908, metadata !DIExpression()), !dbg !9909
  store %struct.MDeformWeight* %dw, %struct.MDeformWeight** %dw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MDeformWeight** %dw.addr, metadata !9910, metadata !DIExpression()), !dbg !9911
  store %struct.MDeformWeight* %tdw, %struct.MDeformWeight** %tdw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MDeformWeight** %tdw.addr, metadata !9912, metadata !DIExpression()), !dbg !9913
  store float %change, float* %change.addr, align 4
  call void @llvm.dbg.declare(metadata float* %change.addr, metadata !9914, metadata !DIExpression()), !dbg !9915
  store float %oldChange, float* %oldChange.addr, align 4
  call void @llvm.dbg.declare(metadata float* %oldChange.addr, metadata !9916, metadata !DIExpression()), !dbg !9917
  store float %oldw, float* %oldw.addr, align 4
  call void @llvm.dbg.declare(metadata float* %oldw.addr, metadata !9918, metadata !DIExpression()), !dbg !9919
  store float %neww, float* %neww.addr, align 4
  call void @llvm.dbg.declare(metadata float* %neww.addr, metadata !9920, metadata !DIExpression()), !dbg !9921
  call void @llvm.dbg.declare(metadata %struct.MDeformVert** %dv, metadata !9922, metadata !DIExpression()), !dbg !9923
  %0 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !9924
  %dvert = getelementptr inbounds %struct.Mesh, %struct.Mesh* %0, i32 0, i32 17, !dbg !9925
  %1 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert, align 8, !dbg !9925
  %2 = load i32, i32* %index.addr, align 4, !dbg !9926
  %idxprom = zext i32 %2 to i64, !dbg !9924
  %arrayidx = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %1, i64 %idxprom, !dbg !9924
  store %struct.MDeformVert* %arrayidx, %struct.MDeformVert** %dv, align 8, !dbg !9923
  call void @llvm.dbg.declare(metadata %struct.MDeformVert* %dv_test, metadata !9927, metadata !DIExpression()), !dbg !9928
  %3 = bitcast %struct.MDeformVert* %dv_test to i8*, !dbg !9928
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 16, i1 false), !dbg !9928
  %4 = load i8* (i8*)*, i8* (i8*)** @MEM_dupallocN, align 8, !dbg !9929
  %5 = load %struct.MDeformVert*, %struct.MDeformVert** %dv, align 8, !dbg !9930
  %dw1 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %5, i32 0, i32 0, !dbg !9931
  %6 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw1, align 8, !dbg !9931
  %7 = bitcast %struct.MDeformWeight* %6 to i8*, !dbg !9930
  %call = call i8* %4(i8* %7), !dbg !9929
  %8 = bitcast i8* %call to %struct.MDeformWeight*, !dbg !9929
  %dw2 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %dv_test, i32 0, i32 0, !dbg !9932
  store %struct.MDeformWeight* %8, %struct.MDeformWeight** %dw2, align 8, !dbg !9933
  %9 = load %struct.MDeformVert*, %struct.MDeformVert** %dv, align 8, !dbg !9934
  %flag = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %9, i32 0, i32 2, !dbg !9935
  %10 = load i32, i32* %flag, align 4, !dbg !9935
  %flag3 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %dv_test, i32 0, i32 2, !dbg !9936
  store i32 %10, i32* %flag3, align 4, !dbg !9937
  %11 = load %struct.MDeformVert*, %struct.MDeformVert** %dv, align 8, !dbg !9938
  %totweight = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %11, i32 0, i32 1, !dbg !9939
  %12 = load i32, i32* %totweight, align 8, !dbg !9939
  %totweight4 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %dv_test, i32 0, i32 1, !dbg !9940
  store i32 %12, i32* %totweight4, align 8, !dbg !9941
  %13 = load %struct.WeightPaintInfo*, %struct.WeightPaintInfo** %wpi.addr, align 8, !dbg !9942
  %lock_flags = getelementptr inbounds %struct.WeightPaintInfo, %struct.WeightPaintInfo* %13, i32 0, i32 5, !dbg !9944
  %14 = load i8*, i8** %lock_flags, align 8, !dbg !9944
  %cmp = icmp eq i8* %14, null, !dbg !9945
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !9946

lor.lhs.false:                                    ; preds = %entry
  %15 = load %struct.WeightPaintInfo*, %struct.WeightPaintInfo** %wpi.addr, align 8, !dbg !9947
  %lock_flags5 = getelementptr inbounds %struct.WeightPaintInfo, %struct.WeightPaintInfo* %15, i32 0, i32 5, !dbg !9948
  %16 = load i8*, i8** %lock_flags5, align 8, !dbg !9948
  %17 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw.addr, align 8, !dbg !9949
  %def_nr = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %17, i32 0, i32 0, !dbg !9950
  %18 = load i32, i32* %def_nr, align 4, !dbg !9950
  %idxprom6 = sext i32 %18 to i64, !dbg !9947
  %arrayidx7 = getelementptr inbounds i8, i8* %16, i64 %idxprom6, !dbg !9947
  %19 = load i8, i8* %arrayidx7, align 1, !dbg !9947
  %conv = zext i8 %19 to i32, !dbg !9947
  %cmp8 = icmp eq i32 %conv, 0, !dbg !9951
  br i1 %cmp8, label %land.lhs.true, label %if.end28, !dbg !9952

land.lhs.true:                                    ; preds = %lor.lhs.false
  %20 = load %struct.WeightPaintInfo*, %struct.WeightPaintInfo** %wpi.addr, align 8, !dbg !9953
  %defbase_tot = getelementptr inbounds %struct.WeightPaintInfo, %struct.WeightPaintInfo* %20, i32 0, i32 0, !dbg !9954
  %21 = load i32, i32* %defbase_tot, align 8, !dbg !9954
  %22 = load %struct.WeightPaintInfo*, %struct.WeightPaintInfo** %wpi.addr, align 8, !dbg !9955
  %defbase_sel = getelementptr inbounds %struct.WeightPaintInfo, %struct.WeightPaintInfo* %22, i32 0, i32 6, !dbg !9956
  %23 = load i8*, i8** %defbase_sel, align 8, !dbg !9956
  %24 = load %struct.WeightPaintInfo*, %struct.WeightPaintInfo** %wpi.addr, align 8, !dbg !9957
  %lock_flags10 = getelementptr inbounds %struct.WeightPaintInfo, %struct.WeightPaintInfo* %24, i32 0, i32 5, !dbg !9958
  %25 = load i8*, i8** %lock_flags10, align 8, !dbg !9958
  %call11 = call zeroext i8 @has_locked_group_selected(i32 %21, i8* %23, i8* %25), !dbg !9959
  %conv12 = zext i8 %call11 to i32, !dbg !9959
  %cmp13 = icmp eq i32 %conv12, 0, !dbg !9960
  br i1 %cmp13, label %if.then, label %if.end28, !dbg !9961

if.then:                                          ; preds = %land.lhs.true, %entry
  %26 = load %struct.WeightPaintInfo*, %struct.WeightPaintInfo** %wpi.addr, align 8, !dbg !9962
  %do_multipaint = getelementptr inbounds %struct.WeightPaintInfo, %struct.WeightPaintInfo* %26, i32 0, i32 9, !dbg !9965
  %27 = load i8, i8* %do_multipaint, align 1, !dbg !9965
  %conv15 = zext i8 %27 to i32, !dbg !9962
  %tobool = icmp ne i32 %conv15, 0, !dbg !9962
  br i1 %tobool, label %land.lhs.true16, label %if.else, !dbg !9966

land.lhs.true16:                                  ; preds = %if.then
  %28 = load %struct.WeightPaintInfo*, %struct.WeightPaintInfo** %wpi.addr, align 8, !dbg !9967
  %defbase_tot_sel = getelementptr inbounds %struct.WeightPaintInfo, %struct.WeightPaintInfo* %28, i32 0, i32 1, !dbg !9968
  %29 = load i32, i32* %defbase_tot_sel, align 4, !dbg !9968
  %cmp17 = icmp sgt i32 %29, 1, !dbg !9969
  br i1 %cmp17, label %if.then19, label %if.else, !dbg !9970

if.then19:                                        ; preds = %land.lhs.true16
  %30 = load float, float* %change.addr, align 4, !dbg !9971
  %tobool20 = fcmp une float %30, 0.000000e+00, !dbg !9971
  br i1 %tobool20, label %land.lhs.true21, label %if.end, !dbg !9974

land.lhs.true21:                                  ; preds = %if.then19
  %31 = load float, float* %change.addr, align 4, !dbg !9975
  %cmp22 = fcmp une float %31, 1.000000e+00, !dbg !9976
  br i1 %cmp22, label %if.then24, label %if.end, !dbg !9977

if.then24:                                        ; preds = %land.lhs.true21
  %32 = load %struct.MDeformVert*, %struct.MDeformVert** %dv, align 8, !dbg !9978
  %33 = load %struct.WeightPaintInfo*, %struct.WeightPaintInfo** %wpi.addr, align 8, !dbg !9980
  %defbase_tot25 = getelementptr inbounds %struct.WeightPaintInfo, %struct.WeightPaintInfo* %33, i32 0, i32 0, !dbg !9981
  %34 = load i32, i32* %defbase_tot25, align 8, !dbg !9981
  %35 = load float, float* %change.addr, align 4, !dbg !9982
  %36 = load %struct.WeightPaintInfo*, %struct.WeightPaintInfo** %wpi.addr, align 8, !dbg !9983
  %defbase_sel26 = getelementptr inbounds %struct.WeightPaintInfo, %struct.WeightPaintInfo* %36, i32 0, i32 6, !dbg !9984
  %37 = load i8*, i8** %defbase_sel26, align 8, !dbg !9984
  call void @multipaint_selection(%struct.MDeformVert* %32, i32 %34, float %35, i8* %37), !dbg !9985
  br label %if.end, !dbg !9986

if.end:                                           ; preds = %if.then24, %land.lhs.true21, %if.then19
  br label %if.end27, !dbg !9987

if.else:                                          ; preds = %land.lhs.true16, %if.then
  %38 = load float, float* %neww.addr, align 4, !dbg !9988
  %39 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw.addr, align 8, !dbg !9990
  %weight = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %39, i32 0, i32 1, !dbg !9991
  store float %38, float* %weight, align 4, !dbg !9992
  br label %if.end27

if.end27:                                         ; preds = %if.else, %if.end
  br label %if.end28, !dbg !9993

if.end28:                                         ; preds = %if.end27, %land.lhs.true, %lor.lhs.false
  %40 = load %struct.MDeformVert*, %struct.MDeformVert** %dv, align 8, !dbg !9994
  call void @clamp_weights(%struct.MDeformVert* %40), !dbg !9995
  %41 = load %struct.MDeformVert*, %struct.MDeformVert** %dv, align 8, !dbg !9996
  %42 = load %struct.WeightPaintInfo*, %struct.WeightPaintInfo** %wpi.addr, align 8, !dbg !9997
  %defbase_tot29 = getelementptr inbounds %struct.WeightPaintInfo, %struct.WeightPaintInfo* %42, i32 0, i32 0, !dbg !9998
  %43 = load i32, i32* %defbase_tot29, align 8, !dbg !9998
  %44 = load %struct.WeightPaintInfo*, %struct.WeightPaintInfo** %wpi.addr, align 8, !dbg !9999
  %defbase_sel30 = getelementptr inbounds %struct.WeightPaintInfo, %struct.WeightPaintInfo* %44, i32 0, i32 6, !dbg !10000
  %45 = load i8*, i8** %defbase_sel30, align 8, !dbg !10000
  %46 = load %struct.WeightPaintInfo*, %struct.WeightPaintInfo** %wpi.addr, align 8, !dbg !10001
  %lock_flags31 = getelementptr inbounds %struct.WeightPaintInfo, %struct.WeightPaintInfo* %46, i32 0, i32 5, !dbg !10002
  %47 = load i8*, i8** %lock_flags31, align 8, !dbg !10002
  %48 = load %struct.WeightPaintInfo*, %struct.WeightPaintInfo** %wpi.addr, align 8, !dbg !10003
  %vgroup_validmap = getelementptr inbounds %struct.WeightPaintInfo, %struct.WeightPaintInfo* %48, i32 0, i32 7, !dbg !10004
  %49 = load i8*, i8** %vgroup_validmap, align 8, !dbg !10004
  %50 = load %struct.WeightPaintInfo*, %struct.WeightPaintInfo** %wpi.addr, align 8, !dbg !10005
  %do_auto_normalize = getelementptr inbounds %struct.WeightPaintInfo, %struct.WeightPaintInfo* %50, i32 0, i32 10, !dbg !10006
  %51 = load i8, i8* %do_auto_normalize, align 2, !dbg !10006
  %52 = load %struct.WeightPaintInfo*, %struct.WeightPaintInfo** %wpi.addr, align 8, !dbg !10007
  %do_multipaint32 = getelementptr inbounds %struct.WeightPaintInfo, %struct.WeightPaintInfo* %52, i32 0, i32 9, !dbg !10008
  %53 = load i8, i8* %do_multipaint32, align 1, !dbg !10008
  call void @enforce_locks(%struct.MDeformVert* %dv_test, %struct.MDeformVert* %41, i32 %43, i8* %45, i8* %47, i8* %49, i8 zeroext %51, i8 zeroext %53), !dbg !10009
  %54 = load %struct.WeightPaintInfo*, %struct.WeightPaintInfo** %wpi.addr, align 8, !dbg !10010
  %do_auto_normalize33 = getelementptr inbounds %struct.WeightPaintInfo, %struct.WeightPaintInfo* %54, i32 0, i32 10, !dbg !10012
  %55 = load i8, i8* %do_auto_normalize33, align 2, !dbg !10012
  %tobool34 = icmp ne i8 %55, 0, !dbg !10010
  br i1 %tobool34, label %if.then35, label %if.end38, !dbg !10013

if.then35:                                        ; preds = %if.end28
  %56 = load %struct.MDeformVert*, %struct.MDeformVert** %dv, align 8, !dbg !10014
  %57 = load %struct.WeightPaintInfo*, %struct.WeightPaintInfo** %wpi.addr, align 8, !dbg !10016
  %defbase_tot36 = getelementptr inbounds %struct.WeightPaintInfo, %struct.WeightPaintInfo* %57, i32 0, i32 0, !dbg !10017
  %58 = load i32, i32* %defbase_tot36, align 8, !dbg !10017
  %59 = load %struct.WeightPaintInfo*, %struct.WeightPaintInfo** %wpi.addr, align 8, !dbg !10018
  %vgroup_validmap37 = getelementptr inbounds %struct.WeightPaintInfo, %struct.WeightPaintInfo* %59, i32 0, i32 7, !dbg !10019
  %60 = load i8*, i8** %vgroup_validmap37, align 8, !dbg !10019
  call void @do_weight_paint_normalize_all(%struct.MDeformVert* %56, i32 %58, i8* %60), !dbg !10020
  br label %if.end38, !dbg !10021

if.end38:                                         ; preds = %if.then35, %if.end28
  %61 = load float, float* %oldChange.addr, align 4, !dbg !10022
  %tobool39 = fcmp une float %61, 0.000000e+00, !dbg !10022
  br i1 %tobool39, label %land.lhs.true40, label %if.end71, !dbg !10024

land.lhs.true40:                                  ; preds = %if.end38
  %62 = load %struct.WeightPaintInfo*, %struct.WeightPaintInfo** %wpi.addr, align 8, !dbg !10025
  %do_multipaint41 = getelementptr inbounds %struct.WeightPaintInfo, %struct.WeightPaintInfo* %62, i32 0, i32 9, !dbg !10026
  %63 = load i8, i8* %do_multipaint41, align 1, !dbg !10026
  %conv42 = zext i8 %63 to i32, !dbg !10025
  %tobool43 = icmp ne i32 %conv42, 0, !dbg !10025
  br i1 %tobool43, label %land.lhs.true44, label %if.end71, !dbg !10027

land.lhs.true44:                                  ; preds = %land.lhs.true40
  %64 = load %struct.WeightPaintInfo*, %struct.WeightPaintInfo** %wpi.addr, align 8, !dbg !10028
  %defbase_tot_sel45 = getelementptr inbounds %struct.WeightPaintInfo, %struct.WeightPaintInfo* %64, i32 0, i32 1, !dbg !10029
  %65 = load i32, i32* %defbase_tot_sel45, align 4, !dbg !10029
  %cmp46 = icmp sgt i32 %65, 1, !dbg !10030
  br i1 %cmp46, label %if.then48, label %if.end71, !dbg !10031

if.then48:                                        ; preds = %land.lhs.true44
  %66 = load %struct.MDeformWeight*, %struct.MDeformWeight** %tdw.addr, align 8, !dbg !10032
  %weight49 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %66, i32 0, i32 1, !dbg !10035
  %67 = load float, float* %weight49, align 4, !dbg !10035
  %68 = load float, float* %oldw.addr, align 4, !dbg !10036
  %cmp50 = fcmp une float %67, %68, !dbg !10037
  br i1 %cmp50, label %if.then52, label %if.end70, !dbg !10038

if.then52:                                        ; preds = %if.then48
  %69 = load float, float* %neww.addr, align 4, !dbg !10039
  %70 = load float, float* %oldw.addr, align 4, !dbg !10042
  %cmp53 = fcmp ogt float %69, %70, !dbg !10043
  br i1 %cmp53, label %if.then55, label %if.else62, !dbg !10044

if.then55:                                        ; preds = %if.then52
  %71 = load %struct.MDeformWeight*, %struct.MDeformWeight** %tdw.addr, align 8, !dbg !10045
  %weight56 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %71, i32 0, i32 1, !dbg !10048
  %72 = load float, float* %weight56, align 4, !dbg !10048
  %73 = load float, float* %oldw.addr, align 4, !dbg !10049
  %cmp57 = fcmp ole float %72, %73, !dbg !10050
  br i1 %cmp57, label %if.then59, label %if.end61, !dbg !10051

if.then59:                                        ; preds = %if.then55
  %74 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !10052
  %dw60 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %dv_test, i32 0, i32 0, !dbg !10054
  %75 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw60, align 8, !dbg !10054
  %76 = bitcast %struct.MDeformWeight* %75 to i8*, !dbg !10055
  call void %74(i8* %76), !dbg !10052
  store i32 1, i32* %retval, align 4, !dbg !10056
  br label %return, !dbg !10056

if.end61:                                         ; preds = %if.then55
  br label %if.end69, !dbg !10057

if.else62:                                        ; preds = %if.then52
  %77 = load %struct.MDeformWeight*, %struct.MDeformWeight** %tdw.addr, align 8, !dbg !10058
  %weight63 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %77, i32 0, i32 1, !dbg !10061
  %78 = load float, float* %weight63, align 4, !dbg !10061
  %79 = load float, float* %oldw.addr, align 4, !dbg !10062
  %cmp64 = fcmp oge float %78, %79, !dbg !10063
  br i1 %cmp64, label %if.then66, label %if.end68, !dbg !10064

if.then66:                                        ; preds = %if.else62
  %80 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !10065
  %dw67 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %dv_test, i32 0, i32 0, !dbg !10067
  %81 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw67, align 8, !dbg !10067
  %82 = bitcast %struct.MDeformWeight* %81 to i8*, !dbg !10068
  call void %80(i8* %82), !dbg !10065
  store i32 1, i32* %retval, align 4, !dbg !10069
  br label %return, !dbg !10069

if.end68:                                         ; preds = %if.else62
  br label %if.end69

if.end69:                                         ; preds = %if.end68, %if.end61
  br label %if.end70, !dbg !10070

if.end70:                                         ; preds = %if.end69, %if.then48
  br label %if.end71, !dbg !10071

if.end71:                                         ; preds = %if.end70, %land.lhs.true44, %land.lhs.true40, %if.end38
  %83 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !10072
  %dw72 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %dv_test, i32 0, i32 0, !dbg !10073
  %84 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw72, align 8, !dbg !10073
  %85 = bitcast %struct.MDeformWeight* %84 to i8*, !dbg !10074
  call void %83(i8* %85), !dbg !10072
  store i32 0, i32* %retval, align 4, !dbg !10075
  br label %return, !dbg !10075

return:                                           ; preds = %if.end71, %if.then66, %if.then59
  %86 = load i32, i32* %retval, align 4, !dbg !10076
  ret i32 %86, !dbg !10076
}

; Function Attrs: noinline nounwind uwtable
define internal float @wpaint_blend_tool(i32 %tool, float %weight, float %paintval, float %alpha) #0 !dbg !10077 {
entry:
  %retval = alloca float, align 4
  %tool.addr = alloca i32, align 4
  %weight.addr = alloca float, align 4
  %paintval.addr = alloca float, align 4
  %alpha.addr = alloca float, align 4
  store i32 %tool, i32* %tool.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tool.addr, metadata !10080, metadata !DIExpression()), !dbg !10081
  store float %weight, float* %weight.addr, align 4
  call void @llvm.dbg.declare(metadata float* %weight.addr, metadata !10082, metadata !DIExpression()), !dbg !10083
  store float %paintval, float* %paintval.addr, align 4
  call void @llvm.dbg.declare(metadata float* %paintval.addr, metadata !10084, metadata !DIExpression()), !dbg !10085
  store float %alpha, float* %alpha.addr, align 4
  call void @llvm.dbg.declare(metadata float* %alpha.addr, metadata !10086, metadata !DIExpression()), !dbg !10087
  %0 = load i32, i32* %tool.addr, align 4, !dbg !10088
  switch i32 %0, label %sw.default [
    i32 0, label %sw.bb
    i32 4, label %sw.bb
    i32 1, label %sw.bb1
    i32 2, label %sw.bb3
    i32 3, label %sw.bb5
    i32 5, label %sw.bb7
    i32 6, label %sw.bb9
  ], !dbg !10089

sw.bb:                                            ; preds = %entry, %entry
  %1 = load float, float* %weight.addr, align 4, !dbg !10090
  %2 = load float, float* %paintval.addr, align 4, !dbg !10092
  %3 = load float, float* %alpha.addr, align 4, !dbg !10093
  %call = call float @wval_blend(float %1, float %2, float %3), !dbg !10094
  store float %call, float* %retval, align 4, !dbg !10095
  br label %return, !dbg !10095

sw.bb1:                                           ; preds = %entry
  %4 = load float, float* %weight.addr, align 4, !dbg !10096
  %5 = load float, float* %paintval.addr, align 4, !dbg !10097
  %6 = load float, float* %alpha.addr, align 4, !dbg !10098
  %call2 = call float @wval_add(float %4, float %5, float %6), !dbg !10099
  store float %call2, float* %retval, align 4, !dbg !10100
  br label %return, !dbg !10100

sw.bb3:                                           ; preds = %entry
  %7 = load float, float* %weight.addr, align 4, !dbg !10101
  %8 = load float, float* %paintval.addr, align 4, !dbg !10102
  %9 = load float, float* %alpha.addr, align 4, !dbg !10103
  %call4 = call float @wval_sub(float %7, float %8, float %9), !dbg !10104
  store float %call4, float* %retval, align 4, !dbg !10105
  br label %return, !dbg !10105

sw.bb5:                                           ; preds = %entry
  %10 = load float, float* %weight.addr, align 4, !dbg !10106
  %11 = load float, float* %paintval.addr, align 4, !dbg !10107
  %12 = load float, float* %alpha.addr, align 4, !dbg !10108
  %call6 = call float @wval_mul(float %10, float %11, float %12), !dbg !10109
  store float %call6, float* %retval, align 4, !dbg !10110
  br label %return, !dbg !10110

sw.bb7:                                           ; preds = %entry
  %13 = load float, float* %weight.addr, align 4, !dbg !10111
  %14 = load float, float* %paintval.addr, align 4, !dbg !10112
  %15 = load float, float* %alpha.addr, align 4, !dbg !10113
  %call8 = call float @wval_lighten(float %13, float %14, float %15), !dbg !10114
  store float %call8, float* %retval, align 4, !dbg !10115
  br label %return, !dbg !10115

sw.bb9:                                           ; preds = %entry
  %16 = load float, float* %weight.addr, align 4, !dbg !10116
  %17 = load float, float* %paintval.addr, align 4, !dbg !10117
  %18 = load float, float* %alpha.addr, align 4, !dbg !10118
  %call10 = call float @wval_darken(float %16, float %17, float %18), !dbg !10119
  store float %call10, float* %retval, align 4, !dbg !10120
  br label %return, !dbg !10120

sw.default:                                       ; preds = %entry
  store float 0.000000e+00, float* %retval, align 4, !dbg !10121
  br label %return, !dbg !10121

return:                                           ; preds = %sw.default, %sw.bb9, %sw.bb7, %sw.bb5, %sw.bb3, %sw.bb1, %sw.bb
  %19 = load float, float* %retval, align 4, !dbg !10122
  ret float %19, !dbg !10122
}

; Function Attrs: noinline nounwind uwtable
define internal float @wval_blend(float %weight, float %paintval, float %alpha) #0 !dbg !10123 {
entry:
  %weight.addr = alloca float, align 4
  %paintval.addr = alloca float, align 4
  %alpha.addr = alloca float, align 4
  %talpha = alloca float, align 4
  store float %weight, float* %weight.addr, align 4
  call void @llvm.dbg.declare(metadata float* %weight.addr, metadata !10126, metadata !DIExpression()), !dbg !10127
  store float %paintval, float* %paintval.addr, align 4
  call void @llvm.dbg.declare(metadata float* %paintval.addr, metadata !10128, metadata !DIExpression()), !dbg !10129
  store float %alpha, float* %alpha.addr, align 4
  call void @llvm.dbg.declare(metadata float* %alpha.addr, metadata !10130, metadata !DIExpression()), !dbg !10131
  call void @llvm.dbg.declare(metadata float* %talpha, metadata !10132, metadata !DIExpression()), !dbg !10133
  %0 = load float, float* %alpha.addr, align 4, !dbg !10134
  %call = call float @min_ff(float %0, float 1.000000e+00), !dbg !10135
  store float %call, float* %talpha, align 4, !dbg !10133
  %1 = load float, float* %paintval.addr, align 4, !dbg !10136
  %2 = load float, float* %talpha, align 4, !dbg !10137
  %mul = fmul float %1, %2, !dbg !10138
  %3 = load float, float* %weight.addr, align 4, !dbg !10139
  %4 = load float, float* %talpha, align 4, !dbg !10140
  %sub = fsub float 1.000000e+00, %4, !dbg !10141
  %mul1 = fmul float %3, %sub, !dbg !10142
  %add = fadd float %mul, %mul1, !dbg !10143
  ret float %add, !dbg !10144
}

; Function Attrs: noinline nounwind uwtable
define internal float @wval_add(float %weight, float %paintval, float %alpha) #0 !dbg !10145 {
entry:
  %weight.addr = alloca float, align 4
  %paintval.addr = alloca float, align 4
  %alpha.addr = alloca float, align 4
  store float %weight, float* %weight.addr, align 4
  call void @llvm.dbg.declare(metadata float* %weight.addr, metadata !10146, metadata !DIExpression()), !dbg !10147
  store float %paintval, float* %paintval.addr, align 4
  call void @llvm.dbg.declare(metadata float* %paintval.addr, metadata !10148, metadata !DIExpression()), !dbg !10149
  store float %alpha, float* %alpha.addr, align 4
  call void @llvm.dbg.declare(metadata float* %alpha.addr, metadata !10150, metadata !DIExpression()), !dbg !10151
  %0 = load float, float* %weight.addr, align 4, !dbg !10152
  %1 = load float, float* %paintval.addr, align 4, !dbg !10153
  %2 = load float, float* %alpha.addr, align 4, !dbg !10154
  %mul = fmul float %1, %2, !dbg !10155
  %add = fadd float %0, %mul, !dbg !10156
  ret float %add, !dbg !10157
}

; Function Attrs: noinline nounwind uwtable
define internal float @wval_sub(float %weight, float %paintval, float %alpha) #0 !dbg !10158 {
entry:
  %weight.addr = alloca float, align 4
  %paintval.addr = alloca float, align 4
  %alpha.addr = alloca float, align 4
  store float %weight, float* %weight.addr, align 4
  call void @llvm.dbg.declare(metadata float* %weight.addr, metadata !10159, metadata !DIExpression()), !dbg !10160
  store float %paintval, float* %paintval.addr, align 4
  call void @llvm.dbg.declare(metadata float* %paintval.addr, metadata !10161, metadata !DIExpression()), !dbg !10162
  store float %alpha, float* %alpha.addr, align 4
  call void @llvm.dbg.declare(metadata float* %alpha.addr, metadata !10163, metadata !DIExpression()), !dbg !10164
  %0 = load float, float* %weight.addr, align 4, !dbg !10165
  %1 = load float, float* %paintval.addr, align 4, !dbg !10166
  %2 = load float, float* %alpha.addr, align 4, !dbg !10167
  %mul = fmul float %1, %2, !dbg !10168
  %sub = fsub float %0, %mul, !dbg !10169
  ret float %sub, !dbg !10170
}

; Function Attrs: noinline nounwind uwtable
define internal float @wval_mul(float %weight, float %paintval, float %alpha) #0 !dbg !10171 {
entry:
  %weight.addr = alloca float, align 4
  %paintval.addr = alloca float, align 4
  %alpha.addr = alloca float, align 4
  store float %weight, float* %weight.addr, align 4
  call void @llvm.dbg.declare(metadata float* %weight.addr, metadata !10172, metadata !DIExpression()), !dbg !10173
  store float %paintval, float* %paintval.addr, align 4
  call void @llvm.dbg.declare(metadata float* %paintval.addr, metadata !10174, metadata !DIExpression()), !dbg !10175
  store float %alpha, float* %alpha.addr, align 4
  call void @llvm.dbg.declare(metadata float* %alpha.addr, metadata !10176, metadata !DIExpression()), !dbg !10177
  %0 = load float, float* %alpha.addr, align 4, !dbg !10178
  %sub = fsub float 1.000000e+00, %0, !dbg !10179
  %1 = load float, float* %alpha.addr, align 4, !dbg !10180
  %2 = load float, float* %paintval.addr, align 4, !dbg !10181
  %mul = fmul float %1, %2, !dbg !10182
  %add = fadd float %sub, %mul, !dbg !10183
  %3 = load float, float* %weight.addr, align 4, !dbg !10184
  %mul1 = fmul float %add, %3, !dbg !10185
  ret float %mul1, !dbg !10186
}

; Function Attrs: noinline nounwind uwtable
define internal float @wval_lighten(float %weight, float %paintval, float %alpha) #0 !dbg !10187 {
entry:
  %weight.addr = alloca float, align 4
  %paintval.addr = alloca float, align 4
  %alpha.addr = alloca float, align 4
  store float %weight, float* %weight.addr, align 4
  call void @llvm.dbg.declare(metadata float* %weight.addr, metadata !10188, metadata !DIExpression()), !dbg !10189
  store float %paintval, float* %paintval.addr, align 4
  call void @llvm.dbg.declare(metadata float* %paintval.addr, metadata !10190, metadata !DIExpression()), !dbg !10191
  store float %alpha, float* %alpha.addr, align 4
  call void @llvm.dbg.declare(metadata float* %alpha.addr, metadata !10192, metadata !DIExpression()), !dbg !10193
  %0 = load float, float* %weight.addr, align 4, !dbg !10194
  %1 = load float, float* %paintval.addr, align 4, !dbg !10195
  %cmp = fcmp olt float %0, %1, !dbg !10196
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !10197

cond.true:                                        ; preds = %entry
  %2 = load float, float* %weight.addr, align 4, !dbg !10198
  %3 = load float, float* %paintval.addr, align 4, !dbg !10199
  %4 = load float, float* %alpha.addr, align 4, !dbg !10200
  %call = call float @wval_blend(float %2, float %3, float %4), !dbg !10201
  br label %cond.end, !dbg !10197

cond.false:                                       ; preds = %entry
  %5 = load float, float* %weight.addr, align 4, !dbg !10202
  br label %cond.end, !dbg !10197

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %call, %cond.true ], [ %5, %cond.false ], !dbg !10197
  ret float %cond, !dbg !10203
}

; Function Attrs: noinline nounwind uwtable
define internal float @wval_darken(float %weight, float %paintval, float %alpha) #0 !dbg !10204 {
entry:
  %weight.addr = alloca float, align 4
  %paintval.addr = alloca float, align 4
  %alpha.addr = alloca float, align 4
  store float %weight, float* %weight.addr, align 4
  call void @llvm.dbg.declare(metadata float* %weight.addr, metadata !10205, metadata !DIExpression()), !dbg !10206
  store float %paintval, float* %paintval.addr, align 4
  call void @llvm.dbg.declare(metadata float* %paintval.addr, metadata !10207, metadata !DIExpression()), !dbg !10208
  store float %alpha, float* %alpha.addr, align 4
  call void @llvm.dbg.declare(metadata float* %alpha.addr, metadata !10209, metadata !DIExpression()), !dbg !10210
  %0 = load float, float* %weight.addr, align 4, !dbg !10211
  %1 = load float, float* %paintval.addr, align 4, !dbg !10212
  %cmp = fcmp ogt float %0, %1, !dbg !10213
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !10214

cond.true:                                        ; preds = %entry
  %2 = load float, float* %weight.addr, align 4, !dbg !10215
  %3 = load float, float* %paintval.addr, align 4, !dbg !10216
  %4 = load float, float* %alpha.addr, align 4, !dbg !10217
  %call = call float @wval_blend(float %2, float %3, float %4), !dbg !10218
  br label %cond.end, !dbg !10214

cond.false:                                       ; preds = %entry
  %5 = load float, float* %weight.addr, align 4, !dbg !10219
  br label %cond.end, !dbg !10214

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %call, %cond.true ], [ %5, %cond.false ], !dbg !10214
  ret float %cond, !dbg !10220
}

; Function Attrs: noinline nounwind uwtable
define internal float @min_ff(float %a, float %b) #0 !dbg !10221 {
entry:
  %a.addr = alloca float, align 4
  %b.addr = alloca float, align 4
  store float %a, float* %a.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a.addr, metadata !10224, metadata !DIExpression()), !dbg !10225
  store float %b, float* %b.addr, align 4
  call void @llvm.dbg.declare(metadata float* %b.addr, metadata !10226, metadata !DIExpression()), !dbg !10227
  %0 = load float, float* %a.addr, align 4, !dbg !10228
  %1 = load float, float* %b.addr, align 4, !dbg !10229
  %cmp = fcmp olt float %0, %1, !dbg !10230
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !10231

cond.true:                                        ; preds = %entry
  %2 = load float, float* %a.addr, align 4, !dbg !10232
  br label %cond.end, !dbg !10231

cond.false:                                       ; preds = %entry
  %3 = load float, float* %b.addr, align 4, !dbg !10233
  br label %cond.end, !dbg !10231

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %2, %cond.true ], [ %3, %cond.false ], !dbg !10231
  ret float %cond, !dbg !10234
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @has_locked_group_selected(i32 %defbase_tot, i8* %defbase_sel, i8* %lock_flags) #0 !dbg !10235 {
entry:
  %retval = alloca i8, align 1
  %defbase_tot.addr = alloca i32, align 4
  %defbase_sel.addr = alloca i8*, align 8
  %lock_flags.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  store i32 %defbase_tot, i32* %defbase_tot.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %defbase_tot.addr, metadata !10238, metadata !DIExpression()), !dbg !10239
  store i8* %defbase_sel, i8** %defbase_sel.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %defbase_sel.addr, metadata !10240, metadata !DIExpression()), !dbg !10241
  store i8* %lock_flags, i8** %lock_flags.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %lock_flags.addr, metadata !10242, metadata !DIExpression()), !dbg !10243
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10244, metadata !DIExpression()), !dbg !10245
  store i32 0, i32* %i, align 4, !dbg !10246
  br label %for.cond, !dbg !10248

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !10249
  %1 = load i32, i32* %defbase_tot.addr, align 4, !dbg !10251
  %cmp = icmp slt i32 %0, %1, !dbg !10252
  br i1 %cmp, label %for.body, label %for.end, !dbg !10253

for.body:                                         ; preds = %for.cond
  %2 = load i8*, i8** %defbase_sel.addr, align 8, !dbg !10254
  %3 = load i32, i32* %i, align 4, !dbg !10257
  %idxprom = sext i32 %3 to i64, !dbg !10254
  %arrayidx = getelementptr inbounds i8, i8* %2, i64 %idxprom, !dbg !10254
  %4 = load i8, i8* %arrayidx, align 1, !dbg !10254
  %conv = zext i8 %4 to i32, !dbg !10254
  %tobool = icmp ne i32 %conv, 0, !dbg !10254
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !10258

land.lhs.true:                                    ; preds = %for.body
  %5 = load i8*, i8** %lock_flags.addr, align 8, !dbg !10259
  %6 = load i32, i32* %i, align 4, !dbg !10260
  %idxprom1 = sext i32 %6 to i64, !dbg !10259
  %arrayidx2 = getelementptr inbounds i8, i8* %5, i64 %idxprom1, !dbg !10259
  %7 = load i8, i8* %arrayidx2, align 1, !dbg !10259
  %conv3 = zext i8 %7 to i32, !dbg !10259
  %tobool4 = icmp ne i32 %conv3, 0, !dbg !10259
  br i1 %tobool4, label %if.then, label %if.end, !dbg !10261

if.then:                                          ; preds = %land.lhs.true
  store i8 1, i8* %retval, align 1, !dbg !10262
  br label %return, !dbg !10262

if.end:                                           ; preds = %land.lhs.true, %for.body
  br label %for.inc, !dbg !10264

for.inc:                                          ; preds = %if.end
  %8 = load i32, i32* %i, align 4, !dbg !10265
  %inc = add nsw i32 %8, 1, !dbg !10265
  store i32 %inc, i32* %i, align 4, !dbg !10265
  br label %for.cond, !dbg !10266, !llvm.loop !10267

for.end:                                          ; preds = %for.cond
  store i8 0, i8* %retval, align 1, !dbg !10269
  br label %return, !dbg !10269

return:                                           ; preds = %for.end, %if.then
  %9 = load i8, i8* %retval, align 1, !dbg !10270
  ret i8 %9, !dbg !10270
}

; Function Attrs: noinline nounwind uwtable
define internal void @multipaint_selection(%struct.MDeformVert* %dvert, i32 %defbase_tot, float %change, i8* %defbase_sel) #0 !dbg !10271 {
entry:
  %dvert.addr = alloca %struct.MDeformVert*, align 8
  %defbase_tot.addr = alloca i32, align 4
  %change.addr = alloca float, align 4
  %defbase_sel.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %dw = alloca %struct.MDeformWeight*, align 8
  %val = alloca float, align 4
  store %struct.MDeformVert* %dvert, %struct.MDeformVert** %dvert.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MDeformVert** %dvert.addr, metadata !10274, metadata !DIExpression()), !dbg !10275
  store i32 %defbase_tot, i32* %defbase_tot.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %defbase_tot.addr, metadata !10276, metadata !DIExpression()), !dbg !10277
  store float %change, float* %change.addr, align 4
  call void @llvm.dbg.declare(metadata float* %change.addr, metadata !10278, metadata !DIExpression()), !dbg !10279
  store i8* %defbase_sel, i8** %defbase_sel.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %defbase_sel.addr, metadata !10280, metadata !DIExpression()), !dbg !10281
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10282, metadata !DIExpression()), !dbg !10283
  call void @llvm.dbg.declare(metadata %struct.MDeformWeight** %dw, metadata !10284, metadata !DIExpression()), !dbg !10285
  call void @llvm.dbg.declare(metadata float* %val, metadata !10286, metadata !DIExpression()), !dbg !10287
  store i32 0, i32* %i, align 4, !dbg !10288
  br label %for.cond, !dbg !10290

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !10291
  %1 = load i32, i32* %defbase_tot.addr, align 4, !dbg !10293
  %cmp = icmp slt i32 %0, %1, !dbg !10294
  br i1 %cmp, label %for.body, label %for.end, !dbg !10295

for.body:                                         ; preds = %for.cond
  %2 = load i8*, i8** %defbase_sel.addr, align 8, !dbg !10296
  %3 = load i32, i32* %i, align 4, !dbg !10299
  %idxprom = sext i32 %3 to i64, !dbg !10296
  %arrayidx = getelementptr inbounds i8, i8* %2, i64 %idxprom, !dbg !10296
  %4 = load i8, i8* %arrayidx, align 1, !dbg !10296
  %tobool = icmp ne i8 %4, 0, !dbg !10296
  br i1 %tobool, label %if.then, label %if.end12, !dbg !10300

if.then:                                          ; preds = %for.body
  %5 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert.addr, align 8, !dbg !10301
  %6 = load i32, i32* %i, align 4, !dbg !10303
  %call = call %struct.MDeformWeight* @defvert_find_index(%struct.MDeformVert* %5, i32 %6), !dbg !10304
  store %struct.MDeformWeight* %call, %struct.MDeformWeight** %dw, align 8, !dbg !10305
  %7 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !10306
  %tobool1 = icmp ne %struct.MDeformWeight* %7, null, !dbg !10306
  br i1 %tobool1, label %land.lhs.true, label %if.end11, !dbg !10308

land.lhs.true:                                    ; preds = %if.then
  %8 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !10309
  %weight = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %8, i32 0, i32 1, !dbg !10310
  %9 = load float, float* %weight, align 4, !dbg !10310
  %tobool2 = fcmp une float %9, 0.000000e+00, !dbg !10309
  br i1 %tobool2, label %if.then3, label %if.end11, !dbg !10311

if.then3:                                         ; preds = %land.lhs.true
  %10 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !10312
  %weight4 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %10, i32 0, i32 1, !dbg !10314
  %11 = load float, float* %weight4, align 4, !dbg !10314
  %12 = load float, float* %change.addr, align 4, !dbg !10315
  %mul = fmul float %11, %12, !dbg !10316
  store float %mul, float* %val, align 4, !dbg !10317
  %13 = load float, float* %val, align 4, !dbg !10318
  %cmp5 = fcmp ogt float %13, 1.000000e+00, !dbg !10320
  br i1 %cmp5, label %if.then6, label %if.end, !dbg !10321

if.then6:                                         ; preds = %if.then3
  %14 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !10322
  %weight7 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %14, i32 0, i32 1, !dbg !10324
  %15 = load float, float* %weight7, align 4, !dbg !10324
  %div = fdiv float 1.000000e+00, %15, !dbg !10325
  store float %div, float* %change.addr, align 4, !dbg !10326
  br label %if.end, !dbg !10327

if.end:                                           ; preds = %if.then6, %if.then3
  %16 = load float, float* %val, align 4, !dbg !10328
  %cmp8 = fcmp ole float %16, 0.000000e+00, !dbg !10330
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !10331

if.then9:                                         ; preds = %if.end
  br label %for.end33, !dbg !10332

if.end10:                                         ; preds = %if.end
  br label %if.end11, !dbg !10334

if.end11:                                         ; preds = %if.end10, %land.lhs.true, %if.then
  br label %if.end12, !dbg !10335

if.end12:                                         ; preds = %if.end11, %for.body
  br label %for.inc, !dbg !10336

for.inc:                                          ; preds = %if.end12
  %17 = load i32, i32* %i, align 4, !dbg !10337
  %inc = add nsw i32 %17, 1, !dbg !10337
  store i32 %inc, i32* %i, align 4, !dbg !10337
  br label %for.cond, !dbg !10338, !llvm.loop !10339

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !10341
  br label %for.cond13, !dbg !10343

for.cond13:                                       ; preds = %for.inc31, %for.end
  %18 = load i32, i32* %i, align 4, !dbg !10344
  %19 = load i32, i32* %defbase_tot.addr, align 4, !dbg !10346
  %cmp14 = icmp slt i32 %18, %19, !dbg !10347
  br i1 %cmp14, label %for.body15, label %for.end33, !dbg !10348

for.body15:                                       ; preds = %for.cond13
  %20 = load i8*, i8** %defbase_sel.addr, align 8, !dbg !10349
  %21 = load i32, i32* %i, align 4, !dbg !10352
  %idxprom16 = sext i32 %21 to i64, !dbg !10349
  %arrayidx17 = getelementptr inbounds i8, i8* %20, i64 %idxprom16, !dbg !10349
  %22 = load i8, i8* %arrayidx17, align 1, !dbg !10349
  %tobool18 = icmp ne i8 %22, 0, !dbg !10349
  br i1 %tobool18, label %if.then19, label %if.end30, !dbg !10353

if.then19:                                        ; preds = %for.body15
  %23 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert.addr, align 8, !dbg !10354
  %24 = load i32, i32* %i, align 4, !dbg !10356
  %call20 = call %struct.MDeformWeight* @defvert_find_index(%struct.MDeformVert* %23, i32 %24), !dbg !10357
  store %struct.MDeformWeight* %call20, %struct.MDeformWeight** %dw, align 8, !dbg !10358
  %25 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !10359
  %tobool21 = icmp ne %struct.MDeformWeight* %25, null, !dbg !10359
  br i1 %tobool21, label %land.lhs.true22, label %if.end29, !dbg !10361

land.lhs.true22:                                  ; preds = %if.then19
  %26 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !10362
  %weight23 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %26, i32 0, i32 1, !dbg !10363
  %27 = load float, float* %weight23, align 4, !dbg !10363
  %tobool24 = fcmp une float %27, 0.000000e+00, !dbg !10362
  br i1 %tobool24, label %if.then25, label %if.end29, !dbg !10364

if.then25:                                        ; preds = %land.lhs.true22
  %28 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !10365
  %weight26 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %28, i32 0, i32 1, !dbg !10367
  %29 = load float, float* %weight26, align 4, !dbg !10367
  %30 = load float, float* %change.addr, align 4, !dbg !10368
  %mul27 = fmul float %29, %30, !dbg !10369
  %31 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !10370
  %weight28 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %31, i32 0, i32 1, !dbg !10371
  store float %mul27, float* %weight28, align 4, !dbg !10372
  br label %if.end29, !dbg !10373

if.end29:                                         ; preds = %if.then25, %land.lhs.true22, %if.then19
  br label %if.end30, !dbg !10374

if.end30:                                         ; preds = %if.end29, %for.body15
  br label %for.inc31, !dbg !10375

for.inc31:                                        ; preds = %if.end30
  %32 = load i32, i32* %i, align 4, !dbg !10376
  %inc32 = add nsw i32 %32, 1, !dbg !10376
  store i32 %inc32, i32* %i, align 4, !dbg !10376
  br label %for.cond13, !dbg !10377, !llvm.loop !10378

for.end33:                                        ; preds = %if.then9, %for.cond13
  ret void, !dbg !10380
}

; Function Attrs: noinline nounwind uwtable
define internal void @clamp_weights(%struct.MDeformVert* %dvert) #0 !dbg !10381 {
entry:
  %dvert.addr = alloca %struct.MDeformVert*, align 8
  %dw = alloca %struct.MDeformWeight*, align 8
  %i = alloca i32, align 4
  store %struct.MDeformVert* %dvert, %struct.MDeformVert** %dvert.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MDeformVert** %dvert.addr, metadata !10384, metadata !DIExpression()), !dbg !10385
  call void @llvm.dbg.declare(metadata %struct.MDeformWeight** %dw, metadata !10386, metadata !DIExpression()), !dbg !10387
  %0 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert.addr, align 8, !dbg !10388
  %dw1 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %0, i32 0, i32 0, !dbg !10389
  %1 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw1, align 8, !dbg !10389
  store %struct.MDeformWeight* %1, %struct.MDeformWeight** %dw, align 8, !dbg !10387
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10390, metadata !DIExpression()), !dbg !10391
  %2 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert.addr, align 8, !dbg !10392
  %totweight = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %2, i32 0, i32 1, !dbg !10394
  %3 = load i32, i32* %totweight, align 8, !dbg !10394
  store i32 %3, i32* %i, align 4, !dbg !10395
  br label %for.cond, !dbg !10396

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load i32, i32* %i, align 4, !dbg !10397
  %cmp = icmp ne i32 %4, 0, !dbg !10399
  br i1 %cmp, label %for.body, label %for.end, !dbg !10400

for.body:                                         ; preds = %for.cond
  %5 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !10401
  %weight = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %5, i32 0, i32 1, !dbg !10401
  %6 = load float, float* %weight, align 4, !dbg !10401
  %cmp2 = fcmp olt float %6, 0.000000e+00, !dbg !10401
  br i1 %cmp2, label %if.then, label %if.else, !dbg !10405

if.then:                                          ; preds = %for.body
  %7 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !10401
  %weight3 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %7, i32 0, i32 1, !dbg !10401
  store float 0.000000e+00, float* %weight3, align 4, !dbg !10401
  br label %if.end8, !dbg !10401

if.else:                                          ; preds = %for.body
  %8 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !10406
  %weight4 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %8, i32 0, i32 1, !dbg !10406
  %9 = load float, float* %weight4, align 4, !dbg !10406
  %cmp5 = fcmp ogt float %9, 1.000000e+00, !dbg !10406
  br i1 %cmp5, label %if.then6, label %if.end, !dbg !10401

if.then6:                                         ; preds = %if.else
  %10 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !10406
  %weight7 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %10, i32 0, i32 1, !dbg !10406
  store float 1.000000e+00, float* %weight7, align 4, !dbg !10406
  br label %if.end, !dbg !10406

if.end:                                           ; preds = %if.then6, %if.else
  br label %if.end8

if.end8:                                          ; preds = %if.end, %if.then
  br label %for.inc, !dbg !10408

for.inc:                                          ; preds = %if.end8
  %11 = load i32, i32* %i, align 4, !dbg !10409
  %dec = add i32 %11, -1, !dbg !10409
  store i32 %dec, i32* %i, align 4, !dbg !10409
  %12 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !10410
  %incdec.ptr = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %12, i32 1, !dbg !10410
  store %struct.MDeformWeight* %incdec.ptr, %struct.MDeformWeight** %dw, align 8, !dbg !10410
  br label %for.cond, !dbg !10411, !llvm.loop !10412

for.end:                                          ; preds = %for.cond
  ret void, !dbg !10414
}

; Function Attrs: noinline nounwind uwtable
define internal void @enforce_locks(%struct.MDeformVert* %odv, %struct.MDeformVert* %ndv, i32 %defbase_tot, i8* %defbase_sel, i8* %lock_flags, i8* %vgroup_validmap, i8 zeroext %do_auto_normalize, i8 zeroext %do_multipaint) #0 !dbg !10415 {
entry:
  %odv.addr = alloca %struct.MDeformVert*, align 8
  %ndv.addr = alloca %struct.MDeformVert*, align 8
  %defbase_tot.addr = alloca i32, align 4
  %defbase_sel.addr = alloca i8*, align 8
  %lock_flags.addr = alloca i8*, align 8
  %vgroup_validmap.addr = alloca i8*, align 8
  %do_auto_normalize.addr = alloca i8, align 1
  %do_multipaint.addr = alloca i8, align 1
  %totchange = alloca float, align 4
  %totchange_allowed = alloca float, align 4
  %left_over = alloca float, align 4
  %total_valid = alloca i32, align 4
  %total_changed = alloca i32, align 4
  %i = alloca i32, align 4
  %ndw = alloca %struct.MDeformWeight*, align 8
  %odw = alloca %struct.MDeformWeight*, align 8
  %change_status = alloca i8*, align 8
  %undo_change = alloca float, align 4
  %dw_old = alloca %struct.MDeformWeight*, align 8
  %dw_new = alloca %struct.MDeformWeight*, align 8
  store %struct.MDeformVert* %odv, %struct.MDeformVert** %odv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MDeformVert** %odv.addr, metadata !10418, metadata !DIExpression()), !dbg !10419
  store %struct.MDeformVert* %ndv, %struct.MDeformVert** %ndv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MDeformVert** %ndv.addr, metadata !10420, metadata !DIExpression()), !dbg !10421
  store i32 %defbase_tot, i32* %defbase_tot.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %defbase_tot.addr, metadata !10422, metadata !DIExpression()), !dbg !10423
  store i8* %defbase_sel, i8** %defbase_sel.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %defbase_sel.addr, metadata !10424, metadata !DIExpression()), !dbg !10425
  store i8* %lock_flags, i8** %lock_flags.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %lock_flags.addr, metadata !10426, metadata !DIExpression()), !dbg !10427
  store i8* %vgroup_validmap, i8** %vgroup_validmap.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %vgroup_validmap.addr, metadata !10428, metadata !DIExpression()), !dbg !10429
  store i8 %do_auto_normalize, i8* %do_auto_normalize.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %do_auto_normalize.addr, metadata !10430, metadata !DIExpression()), !dbg !10431
  store i8 %do_multipaint, i8* %do_multipaint.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %do_multipaint.addr, metadata !10432, metadata !DIExpression()), !dbg !10433
  call void @llvm.dbg.declare(metadata float* %totchange, metadata !10434, metadata !DIExpression()), !dbg !10435
  store float 0.000000e+00, float* %totchange, align 4, !dbg !10435
  call void @llvm.dbg.declare(metadata float* %totchange_allowed, metadata !10436, metadata !DIExpression()), !dbg !10437
  store float 0.000000e+00, float* %totchange_allowed, align 4, !dbg !10437
  call void @llvm.dbg.declare(metadata float* %left_over, metadata !10438, metadata !DIExpression()), !dbg !10439
  call void @llvm.dbg.declare(metadata i32* %total_valid, metadata !10440, metadata !DIExpression()), !dbg !10441
  store i32 0, i32* %total_valid, align 4, !dbg !10441
  call void @llvm.dbg.declare(metadata i32* %total_changed, metadata !10442, metadata !DIExpression()), !dbg !10443
  store i32 0, i32* %total_changed, align 4, !dbg !10443
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10444, metadata !DIExpression()), !dbg !10445
  call void @llvm.dbg.declare(metadata %struct.MDeformWeight** %ndw, metadata !10446, metadata !DIExpression()), !dbg !10447
  call void @llvm.dbg.declare(metadata %struct.MDeformWeight** %odw, metadata !10448, metadata !DIExpression()), !dbg !10449
  call void @llvm.dbg.declare(metadata i8** %change_status, metadata !10450, metadata !DIExpression()), !dbg !10451
  %0 = load i8*, i8** %lock_flags.addr, align 8, !dbg !10452
  %tobool = icmp ne i8* %0, null, !dbg !10452
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !10454

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.MDeformVert*, %struct.MDeformVert** %ndv.addr, align 8, !dbg !10455
  %2 = load i32, i32* %defbase_tot.addr, align 4, !dbg !10456
  %3 = load i8*, i8** %vgroup_validmap.addr, align 8, !dbg !10457
  %4 = load i8*, i8** %lock_flags.addr, align 8, !dbg !10458
  %call = call zeroext i8 @has_locked_group(%struct.MDeformVert* %1, i32 %2, i8* %3, i8* %4), !dbg !10459
  %tobool1 = icmp ne i8 %call, 0, !dbg !10459
  br i1 %tobool1, label %if.end, label %if.then, !dbg !10460

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %return, !dbg !10461

if.end:                                           ; preds = %lor.lhs.false
  %5 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !10463
  %6 = load i32, i32* %defbase_tot.addr, align 4, !dbg !10464
  %conv = sext i32 %6 to i64, !dbg !10464
  %mul = mul i64 1, %conv, !dbg !10465
  %call2 = call i8* %5(i64 %mul, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.58, i64 0, i64 0)), !dbg !10463
  store i8* %call2, i8** %change_status, align 8, !dbg !10466
  store i32 0, i32* %i, align 4, !dbg !10467
  br label %for.cond, !dbg !10469

for.cond:                                         ; preds = %for.inc, %if.end
  %7 = load i32, i32* %i, align 4, !dbg !10470
  %8 = load i32, i32* %defbase_tot.addr, align 4, !dbg !10472
  %cmp = icmp ult i32 %7, %8, !dbg !10473
  br i1 %cmp, label %for.body, label %for.end, !dbg !10474

for.body:                                         ; preds = %for.cond
  %9 = load %struct.MDeformVert*, %struct.MDeformVert** %ndv.addr, align 8, !dbg !10475
  %10 = load i32, i32* %i, align 4, !dbg !10477
  %call4 = call %struct.MDeformWeight* @defvert_find_index(%struct.MDeformVert* %9, i32 %10), !dbg !10478
  store %struct.MDeformWeight* %call4, %struct.MDeformWeight** %ndw, align 8, !dbg !10479
  %11 = load %struct.MDeformVert*, %struct.MDeformVert** %odv.addr, align 8, !dbg !10480
  %12 = load i32, i32* %i, align 4, !dbg !10481
  %call5 = call %struct.MDeformWeight* @defvert_find_index(%struct.MDeformVert* %11, i32 %12), !dbg !10482
  store %struct.MDeformWeight* %call5, %struct.MDeformWeight** %odw, align 8, !dbg !10483
  %13 = load %struct.MDeformWeight*, %struct.MDeformWeight** %ndw, align 8, !dbg !10484
  %tobool6 = icmp ne %struct.MDeformWeight* %13, null, !dbg !10484
  br i1 %tobool6, label %lor.lhs.false7, label %if.then9, !dbg !10486

lor.lhs.false7:                                   ; preds = %for.body
  %14 = load %struct.MDeformWeight*, %struct.MDeformWeight** %odw, align 8, !dbg !10487
  %tobool8 = icmp ne %struct.MDeformWeight* %14, null, !dbg !10487
  br i1 %tobool8, label %if.end21, label %if.then9, !dbg !10488

if.then9:                                         ; preds = %lor.lhs.false7, %for.body
  %15 = load i8*, i8** %lock_flags.addr, align 8, !dbg !10489
  %16 = load i32, i32* %i, align 4, !dbg !10492
  %idxprom = zext i32 %16 to i64, !dbg !10489
  %arrayidx = getelementptr inbounds i8, i8* %15, i64 %idxprom, !dbg !10489
  %17 = load i8, i8* %arrayidx, align 1, !dbg !10489
  %tobool10 = icmp ne i8 %17, 0, !dbg !10489
  br i1 %tobool10, label %if.end20, label %land.lhs.true, !dbg !10493

land.lhs.true:                                    ; preds = %if.then9
  %18 = load i8*, i8** %vgroup_validmap.addr, align 8, !dbg !10494
  %19 = load i32, i32* %i, align 4, !dbg !10495
  %idxprom11 = zext i32 %19 to i64, !dbg !10494
  %arrayidx12 = getelementptr inbounds i8, i8* %18, i64 %idxprom11, !dbg !10494
  %20 = load i8, i8* %arrayidx12, align 1, !dbg !10494
  %conv13 = zext i8 %20 to i32, !dbg !10494
  %tobool14 = icmp ne i32 %conv13, 0, !dbg !10494
  br i1 %tobool14, label %if.then15, label %if.end20, !dbg !10496

if.then15:                                        ; preds = %land.lhs.true
  %21 = load %struct.MDeformVert*, %struct.MDeformVert** %odv.addr, align 8, !dbg !10497
  %22 = load i32, i32* %i, align 4, !dbg !10499
  %call16 = call %struct.MDeformWeight* @defvert_verify_index(%struct.MDeformVert* %21, i32 %22), !dbg !10500
  %23 = load %struct.MDeformVert*, %struct.MDeformVert** %ndv.addr, align 8, !dbg !10501
  %24 = load i32, i32* %i, align 4, !dbg !10502
  %call17 = call %struct.MDeformWeight* @defvert_verify_index(%struct.MDeformVert* %23, i32 %24), !dbg !10503
  %25 = load i32, i32* %total_valid, align 4, !dbg !10504
  %inc = add nsw i32 %25, 1, !dbg !10504
  store i32 %inc, i32* %total_valid, align 4, !dbg !10504
  %26 = load i8*, i8** %change_status, align 8, !dbg !10505
  %27 = load i32, i32* %i, align 4, !dbg !10506
  %idxprom18 = zext i32 %27 to i64, !dbg !10505
  %arrayidx19 = getelementptr inbounds i8, i8* %26, i64 %idxprom18, !dbg !10505
  store i8 1, i8* %arrayidx19, align 1, !dbg !10507
  br label %if.end20, !dbg !10508

if.end20:                                         ; preds = %if.then15, %land.lhs.true, %if.then9
  br label %for.inc, !dbg !10509

if.end21:                                         ; preds = %lor.lhs.false7
  %28 = load i8*, i8** %lock_flags.addr, align 8, !dbg !10510
  %29 = load i32, i32* %i, align 4, !dbg !10512
  %idxprom22 = zext i32 %29 to i64, !dbg !10510
  %arrayidx23 = getelementptr inbounds i8, i8* %28, i64 %idxprom22, !dbg !10510
  %30 = load i8, i8* %arrayidx23, align 1, !dbg !10510
  %tobool24 = icmp ne i8 %30, 0, !dbg !10510
  br i1 %tobool24, label %if.then25, label %if.else, !dbg !10513

if.then25:                                        ; preds = %if.end21
  %31 = load %struct.MDeformWeight*, %struct.MDeformWeight** %odw, align 8, !dbg !10514
  %weight = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %31, i32 0, i32 1, !dbg !10516
  %32 = load float, float* %weight, align 4, !dbg !10516
  %33 = load %struct.MDeformWeight*, %struct.MDeformWeight** %ndw, align 8, !dbg !10517
  %weight26 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %33, i32 0, i32 1, !dbg !10518
  store float %32, float* %weight26, align 4, !dbg !10519
  br label %if.end49, !dbg !10520

if.else:                                          ; preds = %if.end21
  %34 = load %struct.MDeformWeight*, %struct.MDeformWeight** %ndw, align 8, !dbg !10521
  %weight27 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %34, i32 0, i32 1, !dbg !10523
  %35 = load float, float* %weight27, align 4, !dbg !10523
  %36 = load %struct.MDeformWeight*, %struct.MDeformWeight** %odw, align 8, !dbg !10524
  %weight28 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %36, i32 0, i32 1, !dbg !10525
  %37 = load float, float* %weight28, align 4, !dbg !10525
  %cmp29 = fcmp une float %35, %37, !dbg !10526
  br i1 %cmp29, label %if.then31, label %if.else37, !dbg !10527

if.then31:                                        ; preds = %if.else
  %38 = load %struct.MDeformWeight*, %struct.MDeformWeight** %ndw, align 8, !dbg !10528
  %weight32 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %38, i32 0, i32 1, !dbg !10530
  %39 = load float, float* %weight32, align 4, !dbg !10530
  %40 = load %struct.MDeformWeight*, %struct.MDeformWeight** %odw, align 8, !dbg !10531
  %weight33 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %40, i32 0, i32 1, !dbg !10532
  %41 = load float, float* %weight33, align 4, !dbg !10532
  %sub = fsub float %39, %41, !dbg !10533
  %42 = load float, float* %totchange, align 4, !dbg !10534
  %add = fadd float %42, %sub, !dbg !10534
  store float %add, float* %totchange, align 4, !dbg !10534
  %43 = load i8*, i8** %change_status, align 8, !dbg !10535
  %44 = load i32, i32* %i, align 4, !dbg !10536
  %idxprom34 = zext i32 %44 to i64, !dbg !10535
  %arrayidx35 = getelementptr inbounds i8, i8* %43, i64 %idxprom34, !dbg !10535
  store i8 2, i8* %arrayidx35, align 1, !dbg !10537
  %45 = load i32, i32* %total_changed, align 4, !dbg !10538
  %inc36 = add nsw i32 %45, 1, !dbg !10538
  store i32 %inc36, i32* %total_changed, align 4, !dbg !10538
  br label %if.end48, !dbg !10539

if.else37:                                        ; preds = %if.else
  %46 = load i8*, i8** %vgroup_validmap.addr, align 8, !dbg !10540
  %47 = load i32, i32* %i, align 4, !dbg !10542
  %idxprom38 = zext i32 %47 to i64, !dbg !10540
  %arrayidx39 = getelementptr inbounds i8, i8* %46, i64 %idxprom38, !dbg !10540
  %48 = load i8, i8* %arrayidx39, align 1, !dbg !10540
  %tobool40 = icmp ne i8 %48, 0, !dbg !10540
  br i1 %tobool40, label %if.then41, label %if.end47, !dbg !10543

if.then41:                                        ; preds = %if.else37
  %49 = load %struct.MDeformWeight*, %struct.MDeformWeight** %ndw, align 8, !dbg !10544
  %weight42 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %49, i32 0, i32 1, !dbg !10546
  %50 = load float, float* %weight42, align 4, !dbg !10546
  %51 = load float, float* %totchange_allowed, align 4, !dbg !10547
  %add43 = fadd float %51, %50, !dbg !10547
  store float %add43, float* %totchange_allowed, align 4, !dbg !10547
  %52 = load i32, i32* %total_valid, align 4, !dbg !10548
  %inc44 = add nsw i32 %52, 1, !dbg !10548
  store i32 %inc44, i32* %total_valid, align 4, !dbg !10548
  %53 = load i8*, i8** %change_status, align 8, !dbg !10549
  %54 = load i32, i32* %i, align 4, !dbg !10550
  %idxprom45 = zext i32 %54 to i64, !dbg !10549
  %arrayidx46 = getelementptr inbounds i8, i8* %53, i64 %idxprom45, !dbg !10549
  store i8 1, i8* %arrayidx46, align 1, !dbg !10551
  br label %if.end47, !dbg !10552

if.end47:                                         ; preds = %if.then41, %if.else37
  br label %if.end48

if.end48:                                         ; preds = %if.end47, %if.then31
  br label %if.end49

if.end49:                                         ; preds = %if.end48, %if.then25
  br label %for.inc, !dbg !10553

for.inc:                                          ; preds = %if.end49, %if.end20
  %55 = load i32, i32* %i, align 4, !dbg !10554
  %inc50 = add i32 %55, 1, !dbg !10554
  store i32 %inc50, i32* %i, align 4, !dbg !10554
  br label %for.cond, !dbg !10555, !llvm.loop !10556

for.end:                                          ; preds = %for.cond
  %56 = load i32, i32* %total_changed, align 4, !dbg !10558
  %tobool51 = icmp ne i32 %56, 0, !dbg !10558
  br i1 %tobool51, label %if.then52, label %if.end112, !dbg !10560

if.then52:                                        ; preds = %for.end
  %57 = load i8*, i8** %vgroup_validmap.addr, align 8, !dbg !10561
  %tobool53 = icmp ne i8* %57, null, !dbg !10561
  br i1 %tobool53, label %land.lhs.true54, label %if.end61, !dbg !10564

land.lhs.true54:                                  ; preds = %if.then52
  %58 = load i32, i32* %total_changed, align 4, !dbg !10565
  %cmp55 = icmp slt i32 %58, 0, !dbg !10566
  br i1 %cmp55, label %land.lhs.true57, label %if.end61, !dbg !10567

land.lhs.true57:                                  ; preds = %land.lhs.true54
  %59 = load i32, i32* %total_valid, align 4, !dbg !10568
  %tobool58 = icmp ne i32 %59, 0, !dbg !10568
  br i1 %tobool58, label %if.then59, label %if.end61, !dbg !10569

if.then59:                                        ; preds = %land.lhs.true57
  %60 = load i32, i32* %total_valid, align 4, !dbg !10570
  %conv60 = sitofp i32 %60 to float, !dbg !10570
  store float %conv60, float* %totchange_allowed, align 4, !dbg !10572
  br label %if.end61, !dbg !10573

if.end61:                                         ; preds = %if.then59, %land.lhs.true57, %land.lhs.true54, %if.then52
  %61 = load float, float* %totchange, align 4, !dbg !10574
  %cmp62 = fcmp olt float %61, 0.000000e+00, !dbg !10576
  br i1 %cmp62, label %if.then64, label %if.else67, !dbg !10577

if.then64:                                        ; preds = %if.end61
  %62 = load i32, i32* %total_valid, align 4, !dbg !10578
  %conv65 = sitofp i32 %62 to float, !dbg !10578
  %63 = load float, float* %totchange_allowed, align 4, !dbg !10580
  %sub66 = fsub float %conv65, %63, !dbg !10581
  store float %sub66, float* %totchange_allowed, align 4, !dbg !10582
  br label %if.end69, !dbg !10583

if.else67:                                        ; preds = %if.end61
  %64 = load float, float* %totchange_allowed, align 4, !dbg !10584
  %mul68 = fmul float %64, -1.000000e+00, !dbg !10584
  store float %mul68, float* %totchange_allowed, align 4, !dbg !10584
  br label %if.end69

if.end69:                                         ; preds = %if.else67, %if.then64
  %65 = load float, float* %totchange_allowed, align 4, !dbg !10586
  %tobool70 = fcmp une float %65, 0.000000e+00, !dbg !10586
  br i1 %tobool70, label %if.then71, label %if.else100, !dbg !10588

if.then71:                                        ; preds = %if.end69
  store float 0.000000e+00, float* %left_over, align 4, !dbg !10589
  %66 = load float, float* %totchange_allowed, align 4, !dbg !10591
  %67 = call float @llvm.fabs.f32(float %66), !dbg !10593
  %68 = load float, float* %totchange, align 4, !dbg !10594
  %69 = call float @llvm.fabs.f32(float %68), !dbg !10595
  %cmp72 = fcmp olt float %67, %69, !dbg !10596
  br i1 %cmp72, label %if.then74, label %if.else81, !dbg !10597

if.then74:                                        ; preds = %if.then71
  %70 = load float, float* %totchange, align 4, !dbg !10598
  %71 = call float @llvm.fabs.f32(float %70), !dbg !10600
  %72 = load float, float* %totchange_allowed, align 4, !dbg !10601
  %73 = call float @llvm.fabs.f32(float %72), !dbg !10602
  %sub75 = fsub float %71, %73, !dbg !10603
  %74 = call float @llvm.fabs.f32(float %sub75), !dbg !10604
  store float %74, float* %left_over, align 4, !dbg !10605
  %75 = load float, float* %totchange, align 4, !dbg !10606
  %cmp76 = fcmp ogt float %75, 0.000000e+00, !dbg !10608
  br i1 %cmp76, label %if.then78, label %if.end80, !dbg !10609

if.then78:                                        ; preds = %if.then74
  %76 = load float, float* %left_over, align 4, !dbg !10610
  %mul79 = fmul float %76, -1.000000e+00, !dbg !10610
  store float %mul79, float* %left_over, align 4, !dbg !10610
  br label %if.end80, !dbg !10612

if.end80:                                         ; preds = %if.then78, %if.then74
  br label %if.end82, !dbg !10613

if.else81:                                        ; preds = %if.then71
  %77 = load float, float* %totchange, align 4, !dbg !10614
  %fneg = fneg float %77, !dbg !10616
  store float %fneg, float* %totchange_allowed, align 4, !dbg !10617
  br label %if.end82

if.end82:                                         ; preds = %if.else81, %if.end80
  %78 = load %struct.MDeformVert*, %struct.MDeformVert** %ndv.addr, align 8, !dbg !10618
  %79 = load i32, i32* %defbase_tot.addr, align 4, !dbg !10619
  %80 = load i8*, i8** %change_status, align 8, !dbg !10620
  %81 = load float, float* %totchange_allowed, align 4, !dbg !10621
  %82 = load i32, i32* %total_valid, align 4, !dbg !10622
  %conv83 = sitofp i32 %82 to float, !dbg !10622
  %83 = load i8, i8* %do_auto_normalize.addr, align 1, !dbg !10623
  %call84 = call float @redistribute_change(%struct.MDeformVert* %78, i32 %79, i8* %80, i8 zeroext 1, i32 -1, float %81, float %conv83, i8 zeroext %83), !dbg !10624
  store float %call84, float* %totchange_allowed, align 4, !dbg !10625
  %84 = load float, float* %totchange_allowed, align 4, !dbg !10626
  %85 = load float, float* %left_over, align 4, !dbg !10627
  %add85 = fadd float %85, %84, !dbg !10627
  store float %add85, float* %left_over, align 4, !dbg !10627
  %86 = load float, float* %left_over, align 4, !dbg !10628
  %tobool86 = fcmp une float %86, 0.000000e+00, !dbg !10628
  br i1 %tobool86, label %if.then87, label %if.end99, !dbg !10630

if.then87:                                        ; preds = %if.end82
  %87 = load i32, i32* %total_changed, align 4, !dbg !10631
  %cmp88 = icmp sgt i32 %87, 1, !dbg !10634
  br i1 %cmp88, label %land.lhs.true90, label %if.else95, !dbg !10635

land.lhs.true90:                                  ; preds = %if.then87
  %88 = load i8, i8* %do_multipaint.addr, align 1, !dbg !10636
  %conv91 = zext i8 %88 to i32, !dbg !10636
  %tobool92 = icmp ne i32 %conv91, 0, !dbg !10636
  br i1 %tobool92, label %if.then93, label %if.else95, !dbg !10637

if.then93:                                        ; preds = %land.lhs.true90
  call void @llvm.dbg.declare(metadata float* %undo_change, metadata !10638, metadata !DIExpression()), !dbg !10640
  %89 = load %struct.MDeformVert*, %struct.MDeformVert** %ndv.addr, align 8, !dbg !10641
  %90 = load i32, i32* %defbase_tot.addr, align 4, !dbg !10642
  %91 = load i8*, i8** %defbase_sel.addr, align 8, !dbg !10643
  %92 = load float, float* %left_over, align 4, !dbg !10644
  %call94 = call float @get_mp_change(%struct.MDeformVert* %89, i32 %90, i8* %91, float %92), !dbg !10645
  store float %call94, float* %undo_change, align 4, !dbg !10640
  %93 = load %struct.MDeformVert*, %struct.MDeformVert** %ndv.addr, align 8, !dbg !10646
  %94 = load i32, i32* %defbase_tot.addr, align 4, !dbg !10647
  %95 = load float, float* %undo_change, align 4, !dbg !10648
  %96 = load i8*, i8** %defbase_sel.addr, align 8, !dbg !10649
  call void @multipaint_selection(%struct.MDeformVert* %93, i32 %94, float %95, i8* %96), !dbg !10650
  br label %if.end98, !dbg !10651

if.else95:                                        ; preds = %land.lhs.true90, %if.then87
  %97 = load %struct.MDeformVert*, %struct.MDeformVert** %ndv.addr, align 8, !dbg !10652
  %98 = load i32, i32* %defbase_tot.addr, align 4, !dbg !10654
  %99 = load i8*, i8** %change_status, align 8, !dbg !10655
  %100 = load float, float* %left_over, align 4, !dbg !10656
  %101 = load i32, i32* %total_changed, align 4, !dbg !10657
  %conv96 = sitofp i32 %101 to float, !dbg !10657
  %102 = load i8, i8* %do_auto_normalize.addr, align 1, !dbg !10658
  %call97 = call float @redistribute_change(%struct.MDeformVert* %97, i32 %98, i8* %99, i8 zeroext 2, i32 -2, float %100, float %conv96, i8 zeroext %102), !dbg !10659
  br label %if.end98

if.end98:                                         ; preds = %if.else95, %if.then93
  br label %if.end99, !dbg !10660

if.end99:                                         ; preds = %if.end98, %if.end82
  br label %if.end111, !dbg !10661

if.else100:                                       ; preds = %if.end69
  call void @llvm.dbg.declare(metadata %struct.MDeformWeight** %dw_old, metadata !10662, metadata !DIExpression()), !dbg !10664
  %103 = load %struct.MDeformVert*, %struct.MDeformVert** %odv.addr, align 8, !dbg !10665
  %dw = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %103, i32 0, i32 0, !dbg !10666
  %104 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !10666
  store %struct.MDeformWeight* %104, %struct.MDeformWeight** %dw_old, align 8, !dbg !10664
  call void @llvm.dbg.declare(metadata %struct.MDeformWeight** %dw_new, metadata !10667, metadata !DIExpression()), !dbg !10668
  %105 = load %struct.MDeformVert*, %struct.MDeformVert** %ndv.addr, align 8, !dbg !10669
  %dw101 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %105, i32 0, i32 0, !dbg !10670
  %106 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw101, align 8, !dbg !10670
  store %struct.MDeformWeight* %106, %struct.MDeformWeight** %dw_new, align 8, !dbg !10668
  %107 = load %struct.MDeformVert*, %struct.MDeformVert** %odv.addr, align 8, !dbg !10671
  %totweight = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %107, i32 0, i32 1, !dbg !10673
  %108 = load i32, i32* %totweight, align 8, !dbg !10673
  store i32 %108, i32* %i, align 4, !dbg !10674
  br label %for.cond102, !dbg !10675

for.cond102:                                      ; preds = %for.inc108, %if.else100
  %109 = load i32, i32* %i, align 4, !dbg !10676
  %cmp103 = icmp ne i32 %109, 0, !dbg !10678
  br i1 %cmp103, label %for.body105, label %for.end110, !dbg !10679

for.body105:                                      ; preds = %for.cond102
  %110 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw_old, align 8, !dbg !10680
  %weight106 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %110, i32 0, i32 1, !dbg !10682
  %111 = load float, float* %weight106, align 4, !dbg !10682
  %112 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw_new, align 8, !dbg !10683
  %weight107 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %112, i32 0, i32 1, !dbg !10684
  store float %111, float* %weight107, align 4, !dbg !10685
  br label %for.inc108, !dbg !10686

for.inc108:                                       ; preds = %for.body105
  %113 = load i32, i32* %i, align 4, !dbg !10687
  %dec = add i32 %113, -1, !dbg !10687
  store i32 %dec, i32* %i, align 4, !dbg !10687
  %114 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw_old, align 8, !dbg !10688
  %incdec.ptr = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %114, i32 1, !dbg !10688
  store %struct.MDeformWeight* %incdec.ptr, %struct.MDeformWeight** %dw_old, align 8, !dbg !10688
  %115 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw_new, align 8, !dbg !10689
  %incdec.ptr109 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %115, i32 1, !dbg !10689
  store %struct.MDeformWeight* %incdec.ptr109, %struct.MDeformWeight** %dw_new, align 8, !dbg !10689
  br label %for.cond102, !dbg !10690, !llvm.loop !10691

for.end110:                                       ; preds = %for.cond102
  br label %if.end111

if.end111:                                        ; preds = %for.end110, %if.end99
  br label %if.end112, !dbg !10693

if.end112:                                        ; preds = %if.end111, %for.end
  %116 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !10694
  %117 = load i8*, i8** %change_status, align 8, !dbg !10695
  call void %116(i8* %117), !dbg !10694
  br label %return, !dbg !10696

return:                                           ; preds = %if.end112, %if.then
  ret void, !dbg !10696
}

; Function Attrs: noinline nounwind uwtable
define internal void @do_weight_paint_normalize_all(%struct.MDeformVert* %dvert, i32 %defbase_tot, i8* %vgroup_validmap) #0 !dbg !10697 {
entry:
  %dvert.addr = alloca %struct.MDeformVert*, align 8
  %defbase_tot.addr = alloca i32, align 4
  %vgroup_validmap.addr = alloca i8*, align 8
  %sum = alloca float, align 4
  %fac = alloca float, align 4
  %i = alloca i32, align 4
  %tot = alloca i32, align 4
  %dw = alloca %struct.MDeformWeight*, align 8
  store %struct.MDeformVert* %dvert, %struct.MDeformVert** %dvert.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MDeformVert** %dvert.addr, metadata !10700, metadata !DIExpression()), !dbg !10701
  store i32 %defbase_tot, i32* %defbase_tot.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %defbase_tot.addr, metadata !10702, metadata !DIExpression()), !dbg !10703
  store i8* %vgroup_validmap, i8** %vgroup_validmap.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %vgroup_validmap.addr, metadata !10704, metadata !DIExpression()), !dbg !10705
  call void @llvm.dbg.declare(metadata float* %sum, metadata !10706, metadata !DIExpression()), !dbg !10707
  store float 0.000000e+00, float* %sum, align 4, !dbg !10707
  call void @llvm.dbg.declare(metadata float* %fac, metadata !10708, metadata !DIExpression()), !dbg !10709
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10710, metadata !DIExpression()), !dbg !10711
  call void @llvm.dbg.declare(metadata i32* %tot, metadata !10712, metadata !DIExpression()), !dbg !10713
  store i32 0, i32* %tot, align 4, !dbg !10713
  call void @llvm.dbg.declare(metadata %struct.MDeformWeight** %dw, metadata !10714, metadata !DIExpression()), !dbg !10715
  %0 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert.addr, align 8, !dbg !10716
  %totweight = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %0, i32 0, i32 1, !dbg !10718
  %1 = load i32, i32* %totweight, align 8, !dbg !10718
  store i32 %1, i32* %i, align 4, !dbg !10719
  %2 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert.addr, align 8, !dbg !10720
  %dw1 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %2, i32 0, i32 0, !dbg !10721
  %3 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw1, align 8, !dbg !10721
  store %struct.MDeformWeight* %3, %struct.MDeformWeight** %dw, align 8, !dbg !10722
  br label %for.cond, !dbg !10723

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load i32, i32* %i, align 4, !dbg !10724
  %cmp = icmp ne i32 %4, 0, !dbg !10726
  br i1 %cmp, label %for.body, label %for.end, !dbg !10727

for.body:                                         ; preds = %for.cond
  %5 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !10728
  %def_nr = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %5, i32 0, i32 0, !dbg !10731
  %6 = load i32, i32* %def_nr, align 4, !dbg !10731
  %7 = load i32, i32* %defbase_tot.addr, align 4, !dbg !10732
  %cmp2 = icmp slt i32 %6, %7, !dbg !10733
  br i1 %cmp2, label %land.lhs.true, label %if.end, !dbg !10734

land.lhs.true:                                    ; preds = %for.body
  %8 = load i8*, i8** %vgroup_validmap.addr, align 8, !dbg !10735
  %9 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !10736
  %def_nr3 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %9, i32 0, i32 0, !dbg !10737
  %10 = load i32, i32* %def_nr3, align 4, !dbg !10737
  %idxprom = sext i32 %10 to i64, !dbg !10735
  %arrayidx = getelementptr inbounds i8, i8* %8, i64 %idxprom, !dbg !10735
  %11 = load i8, i8* %arrayidx, align 1, !dbg !10735
  %conv = zext i8 %11 to i32, !dbg !10735
  %tobool = icmp ne i32 %conv, 0, !dbg !10735
  br i1 %tobool, label %if.then, label %if.end, !dbg !10738

if.then:                                          ; preds = %land.lhs.true
  %12 = load i32, i32* %tot, align 4, !dbg !10739
  %inc = add i32 %12, 1, !dbg !10739
  store i32 %inc, i32* %tot, align 4, !dbg !10739
  %13 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !10741
  %weight = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %13, i32 0, i32 1, !dbg !10742
  %14 = load float, float* %weight, align 4, !dbg !10742
  %15 = load float, float* %sum, align 4, !dbg !10743
  %add = fadd float %15, %14, !dbg !10743
  store float %add, float* %sum, align 4, !dbg !10743
  br label %if.end, !dbg !10744

if.end:                                           ; preds = %if.then, %land.lhs.true, %for.body
  br label %for.inc, !dbg !10745

for.inc:                                          ; preds = %if.end
  %16 = load i32, i32* %i, align 4, !dbg !10746
  %dec = add i32 %16, -1, !dbg !10746
  store i32 %dec, i32* %i, align 4, !dbg !10746
  %17 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !10747
  %incdec.ptr = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %17, i32 1, !dbg !10747
  store %struct.MDeformWeight* %incdec.ptr, %struct.MDeformWeight** %dw, align 8, !dbg !10747
  br label %for.cond, !dbg !10748, !llvm.loop !10749

for.end:                                          ; preds = %for.cond
  %18 = load i32, i32* %tot, align 4, !dbg !10751
  %cmp4 = icmp eq i32 %18, 0, !dbg !10753
  br i1 %cmp4, label %if.then8, label %lor.lhs.false, !dbg !10754

lor.lhs.false:                                    ; preds = %for.end
  %19 = load float, float* %sum, align 4, !dbg !10755
  %cmp6 = fcmp oeq float %19, 1.000000e+00, !dbg !10756
  br i1 %cmp6, label %if.then8, label %if.end9, !dbg !10757

if.then8:                                         ; preds = %lor.lhs.false, %for.end
  br label %if.end59, !dbg !10758

if.end9:                                          ; preds = %lor.lhs.false
  %20 = load float, float* %sum, align 4, !dbg !10760
  %cmp10 = fcmp une float %20, 0.000000e+00, !dbg !10762
  br i1 %cmp10, label %if.then12, label %if.else, !dbg !10763

if.then12:                                        ; preds = %if.end9
  %21 = load float, float* %sum, align 4, !dbg !10764
  %div = fdiv float 1.000000e+00, %21, !dbg !10766
  store float %div, float* %fac, align 4, !dbg !10767
  %22 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert.addr, align 8, !dbg !10768
  %totweight13 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %22, i32 0, i32 1, !dbg !10770
  %23 = load i32, i32* %totweight13, align 8, !dbg !10770
  store i32 %23, i32* %i, align 4, !dbg !10771
  %24 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert.addr, align 8, !dbg !10772
  %dw14 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %24, i32 0, i32 0, !dbg !10773
  %25 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw14, align 8, !dbg !10773
  store %struct.MDeformWeight* %25, %struct.MDeformWeight** %dw, align 8, !dbg !10774
  br label %for.cond15, !dbg !10775

for.cond15:                                       ; preds = %for.inc31, %if.then12
  %26 = load i32, i32* %i, align 4, !dbg !10776
  %cmp16 = icmp ne i32 %26, 0, !dbg !10778
  br i1 %cmp16, label %for.body18, label %for.end34, !dbg !10779

for.body18:                                       ; preds = %for.cond15
  %27 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !10780
  %def_nr19 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %27, i32 0, i32 0, !dbg !10783
  %28 = load i32, i32* %def_nr19, align 4, !dbg !10783
  %29 = load i32, i32* %defbase_tot.addr, align 4, !dbg !10784
  %cmp20 = icmp slt i32 %28, %29, !dbg !10785
  br i1 %cmp20, label %land.lhs.true22, label %if.end30, !dbg !10786

land.lhs.true22:                                  ; preds = %for.body18
  %30 = load i8*, i8** %vgroup_validmap.addr, align 8, !dbg !10787
  %31 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !10788
  %def_nr23 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %31, i32 0, i32 0, !dbg !10789
  %32 = load i32, i32* %def_nr23, align 4, !dbg !10789
  %idxprom24 = sext i32 %32 to i64, !dbg !10787
  %arrayidx25 = getelementptr inbounds i8, i8* %30, i64 %idxprom24, !dbg !10787
  %33 = load i8, i8* %arrayidx25, align 1, !dbg !10787
  %conv26 = zext i8 %33 to i32, !dbg !10787
  %tobool27 = icmp ne i32 %conv26, 0, !dbg !10787
  br i1 %tobool27, label %if.then28, label %if.end30, !dbg !10790

if.then28:                                        ; preds = %land.lhs.true22
  %34 = load float, float* %fac, align 4, !dbg !10791
  %35 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !10793
  %weight29 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %35, i32 0, i32 1, !dbg !10794
  %36 = load float, float* %weight29, align 4, !dbg !10795
  %mul = fmul float %36, %34, !dbg !10795
  store float %mul, float* %weight29, align 4, !dbg !10795
  br label %if.end30, !dbg !10796

if.end30:                                         ; preds = %if.then28, %land.lhs.true22, %for.body18
  br label %for.inc31, !dbg !10797

for.inc31:                                        ; preds = %if.end30
  %37 = load i32, i32* %i, align 4, !dbg !10798
  %dec32 = add i32 %37, -1, !dbg !10798
  store i32 %dec32, i32* %i, align 4, !dbg !10798
  %38 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !10799
  %incdec.ptr33 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %38, i32 1, !dbg !10799
  store %struct.MDeformWeight* %incdec.ptr33, %struct.MDeformWeight** %dw, align 8, !dbg !10799
  br label %for.cond15, !dbg !10800, !llvm.loop !10801

for.end34:                                        ; preds = %for.cond15
  br label %if.end59, !dbg !10803

if.else:                                          ; preds = %if.end9
  %39 = load i32, i32* %tot, align 4, !dbg !10804
  %conv35 = uitofp i32 %39 to float, !dbg !10804
  %div36 = fdiv float 1.000000e+00, %conv35, !dbg !10806
  store float %div36, float* %fac, align 4, !dbg !10807
  %40 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert.addr, align 8, !dbg !10808
  %totweight37 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %40, i32 0, i32 1, !dbg !10810
  %41 = load i32, i32* %totweight37, align 8, !dbg !10810
  store i32 %41, i32* %i, align 4, !dbg !10811
  %42 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert.addr, align 8, !dbg !10812
  %dw38 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %42, i32 0, i32 0, !dbg !10813
  %43 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw38, align 8, !dbg !10813
  store %struct.MDeformWeight* %43, %struct.MDeformWeight** %dw, align 8, !dbg !10814
  br label %for.cond39, !dbg !10815

for.cond39:                                       ; preds = %for.inc55, %if.else
  %44 = load i32, i32* %i, align 4, !dbg !10816
  %cmp40 = icmp ne i32 %44, 0, !dbg !10818
  br i1 %cmp40, label %for.body42, label %for.end58, !dbg !10819

for.body42:                                       ; preds = %for.cond39
  %45 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !10820
  %def_nr43 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %45, i32 0, i32 0, !dbg !10823
  %46 = load i32, i32* %def_nr43, align 4, !dbg !10823
  %47 = load i32, i32* %defbase_tot.addr, align 4, !dbg !10824
  %cmp44 = icmp slt i32 %46, %47, !dbg !10825
  br i1 %cmp44, label %land.lhs.true46, label %if.end54, !dbg !10826

land.lhs.true46:                                  ; preds = %for.body42
  %48 = load i8*, i8** %vgroup_validmap.addr, align 8, !dbg !10827
  %49 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !10828
  %def_nr47 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %49, i32 0, i32 0, !dbg !10829
  %50 = load i32, i32* %def_nr47, align 4, !dbg !10829
  %idxprom48 = sext i32 %50 to i64, !dbg !10827
  %arrayidx49 = getelementptr inbounds i8, i8* %48, i64 %idxprom48, !dbg !10827
  %51 = load i8, i8* %arrayidx49, align 1, !dbg !10827
  %conv50 = zext i8 %51 to i32, !dbg !10827
  %tobool51 = icmp ne i32 %conv50, 0, !dbg !10827
  br i1 %tobool51, label %if.then52, label %if.end54, !dbg !10830

if.then52:                                        ; preds = %land.lhs.true46
  %52 = load float, float* %fac, align 4, !dbg !10831
  %53 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !10833
  %weight53 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %53, i32 0, i32 1, !dbg !10834
  store float %52, float* %weight53, align 4, !dbg !10835
  br label %if.end54, !dbg !10836

if.end54:                                         ; preds = %if.then52, %land.lhs.true46, %for.body42
  br label %for.inc55, !dbg !10837

for.inc55:                                        ; preds = %if.end54
  %54 = load i32, i32* %i, align 4, !dbg !10838
  %dec56 = add i32 %54, -1, !dbg !10838
  store i32 %dec56, i32* %i, align 4, !dbg !10838
  %55 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !10839
  %incdec.ptr57 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %55, i32 1, !dbg !10839
  store %struct.MDeformWeight* %incdec.ptr57, %struct.MDeformWeight** %dw, align 8, !dbg !10839
  br label %for.cond39, !dbg !10840, !llvm.loop !10841

for.end58:                                        ; preds = %for.cond39
  br label %if.end59

if.end59:                                         ; preds = %if.then8, %for.end58, %for.end34
  ret void, !dbg !10843
}

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.fabs.f32(float) #1

; Function Attrs: noinline nounwind uwtable
define internal float @redistribute_change(%struct.MDeformVert* %ndv, i32 %defbase_tot, i8* %change_status, i8 zeroext %change_me, i32 %changeto, float %totchange, float %total_valid, i8 zeroext %do_auto_normalize) #0 !dbg !10844 {
entry:
  %ndv.addr = alloca %struct.MDeformVert*, align 8
  %defbase_tot.addr = alloca i32, align 4
  %change_status.addr = alloca i8*, align 8
  %change_me.addr = alloca i8, align 1
  %changeto.addr = alloca i32, align 4
  %totchange.addr = alloca float, align 4
  %total_valid.addr = alloca float, align 4
  %do_auto_normalize.addr = alloca i8, align 1
  %changed = alloca i8, align 1
  %change = alloca float, align 4
  %oldval = alloca float, align 4
  %ndw = alloca %struct.MDeformWeight*, align 8
  %i = alloca i32, align 4
  store %struct.MDeformVert* %ndv, %struct.MDeformVert** %ndv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MDeformVert** %ndv.addr, metadata !10847, metadata !DIExpression()), !dbg !10848
  store i32 %defbase_tot, i32* %defbase_tot.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %defbase_tot.addr, metadata !10849, metadata !DIExpression()), !dbg !10850
  store i8* %change_status, i8** %change_status.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %change_status.addr, metadata !10851, metadata !DIExpression()), !dbg !10852
  store i8 %change_me, i8* %change_me.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %change_me.addr, metadata !10853, metadata !DIExpression()), !dbg !10854
  store i32 %changeto, i32* %changeto.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %changeto.addr, metadata !10855, metadata !DIExpression()), !dbg !10856
  store float %totchange, float* %totchange.addr, align 4
  call void @llvm.dbg.declare(metadata float* %totchange.addr, metadata !10857, metadata !DIExpression()), !dbg !10858
  store float %total_valid, float* %total_valid.addr, align 4
  call void @llvm.dbg.declare(metadata float* %total_valid.addr, metadata !10859, metadata !DIExpression()), !dbg !10860
  store i8 %do_auto_normalize, i8* %do_auto_normalize.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %do_auto_normalize.addr, metadata !10861, metadata !DIExpression()), !dbg !10862
  call void @llvm.dbg.declare(metadata i8* %changed, metadata !10863, metadata !DIExpression()), !dbg !10864
  call void @llvm.dbg.declare(metadata float* %change, metadata !10865, metadata !DIExpression()), !dbg !10866
  call void @llvm.dbg.declare(metadata float* %oldval, metadata !10867, metadata !DIExpression()), !dbg !10868
  call void @llvm.dbg.declare(metadata %struct.MDeformWeight** %ndw, metadata !10869, metadata !DIExpression()), !dbg !10870
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10871, metadata !DIExpression()), !dbg !10872
  br label %do.body, !dbg !10873

do.body:                                          ; preds = %land.end54, %entry
  store i8 0, i8* %changed, align 1, !dbg !10874
  %0 = load float, float* %totchange.addr, align 4, !dbg !10876
  %1 = load float, float* %total_valid.addr, align 4, !dbg !10877
  %div = fdiv float %0, %1, !dbg !10878
  store float %div, float* %change, align 4, !dbg !10879
  store i32 0, i32* %i, align 4, !dbg !10880
  br label %for.cond, !dbg !10882

for.cond:                                         ; preds = %for.inc, %do.body
  %2 = load i32, i32* %i, align 4, !dbg !10883
  %3 = load %struct.MDeformVert*, %struct.MDeformVert** %ndv.addr, align 8, !dbg !10885
  %totweight = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %3, i32 0, i32 1, !dbg !10886
  %4 = load i32, i32* %totweight, align 8, !dbg !10886
  %cmp = icmp slt i32 %2, %4, !dbg !10887
  br i1 %cmp, label %land.lhs.true, label %land.end, !dbg !10888

land.lhs.true:                                    ; preds = %for.cond
  %5 = load float, float* %total_valid.addr, align 4, !dbg !10889
  %tobool = fcmp une float %5, 0.000000e+00, !dbg !10889
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !10890

land.rhs:                                         ; preds = %land.lhs.true
  %6 = load float, float* %totchange.addr, align 4, !dbg !10891
  %tobool1 = fcmp une float %6, 0.000000e+00, !dbg !10890
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %for.cond
  %7 = phi i1 [ false, %land.lhs.true ], [ false, %for.cond ], [ %tobool1, %land.rhs ], !dbg !10892
  br i1 %7, label %for.body, label %for.end, !dbg !10893

for.body:                                         ; preds = %land.end
  %8 = load %struct.MDeformVert*, %struct.MDeformVert** %ndv.addr, align 8, !dbg !10894
  %dw = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %8, i32 0, i32 0, !dbg !10896
  %9 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !10896
  %10 = load i32, i32* %i, align 4, !dbg !10897
  %idx.ext = sext i32 %10 to i64, !dbg !10898
  %add.ptr = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %9, i64 %idx.ext, !dbg !10898
  store %struct.MDeformWeight* %add.ptr, %struct.MDeformWeight** %ndw, align 8, !dbg !10899
  %11 = load %struct.MDeformWeight*, %struct.MDeformWeight** %ndw, align 8, !dbg !10900
  %def_nr = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %11, i32 0, i32 0, !dbg !10902
  %12 = load i32, i32* %def_nr, align 4, !dbg !10902
  %13 = load i32, i32* %defbase_tot.addr, align 4, !dbg !10903
  %cmp2 = icmp slt i32 %12, %13, !dbg !10904
  br i1 %cmp2, label %if.then, label %if.end47, !dbg !10905

if.then:                                          ; preds = %for.body
  %14 = load i8*, i8** %change_status.addr, align 8, !dbg !10906
  %15 = load %struct.MDeformWeight*, %struct.MDeformWeight** %ndw, align 8, !dbg !10909
  %def_nr3 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %15, i32 0, i32 0, !dbg !10910
  %16 = load i32, i32* %def_nr3, align 4, !dbg !10910
  %idxprom = sext i32 %16 to i64, !dbg !10906
  %arrayidx = getelementptr inbounds i8, i8* %14, i64 %idxprom, !dbg !10906
  %17 = load i8, i8* %arrayidx, align 1, !dbg !10906
  %conv = zext i8 %17 to i32, !dbg !10906
  %18 = load i8, i8* %change_me.addr, align 1, !dbg !10911
  %conv4 = zext i8 %18 to i32, !dbg !10911
  %cmp5 = icmp eq i32 %conv, %conv4, !dbg !10912
  br i1 %cmp5, label %if.then7, label %if.end46, !dbg !10913

if.then7:                                         ; preds = %if.then
  %19 = load %struct.MDeformWeight*, %struct.MDeformWeight** %ndw, align 8, !dbg !10914
  %weight = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %19, i32 0, i32 1, !dbg !10916
  %20 = load float, float* %weight, align 4, !dbg !10916
  store float %20, float* %oldval, align 4, !dbg !10917
  %21 = load i8, i8* %do_auto_normalize.addr, align 1, !dbg !10918
  %conv8 = zext i8 %21 to i32, !dbg !10918
  %cmp9 = icmp eq i32 %conv8, 0, !dbg !10920
  br i1 %cmp9, label %land.lhs.true11, label %if.else, !dbg !10921

land.lhs.true11:                                  ; preds = %if.then7
  %22 = load %struct.MDeformWeight*, %struct.MDeformWeight** %ndw, align 8, !dbg !10922
  %weight12 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %22, i32 0, i32 1, !dbg !10923
  %23 = load float, float* %weight12, align 4, !dbg !10923
  %24 = load float, float* %change, align 4, !dbg !10924
  %add = fadd float %23, %24, !dbg !10925
  %cmp13 = fcmp ogt float %add, 1.000000e+00, !dbg !10926
  br i1 %cmp13, label %if.then15, label %if.else, !dbg !10927

if.then15:                                        ; preds = %land.lhs.true11
  %25 = load %struct.MDeformWeight*, %struct.MDeformWeight** %ndw, align 8, !dbg !10928
  %weight16 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %25, i32 0, i32 1, !dbg !10930
  %26 = load float, float* %weight16, align 4, !dbg !10930
  %sub = fsub float 1.000000e+00, %26, !dbg !10931
  %27 = load float, float* %totchange.addr, align 4, !dbg !10932
  %sub17 = fsub float %27, %sub, !dbg !10932
  store float %sub17, float* %totchange.addr, align 4, !dbg !10932
  %28 = load %struct.MDeformWeight*, %struct.MDeformWeight** %ndw, align 8, !dbg !10933
  %weight18 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %28, i32 0, i32 1, !dbg !10934
  store float 1.000000e+00, float* %weight18, align 4, !dbg !10935
  %29 = load i32, i32* %changeto.addr, align 4, !dbg !10936
  %conv19 = trunc i32 %29 to i8, !dbg !10936
  %30 = load i8*, i8** %change_status.addr, align 8, !dbg !10937
  %31 = load %struct.MDeformWeight*, %struct.MDeformWeight** %ndw, align 8, !dbg !10938
  %def_nr20 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %31, i32 0, i32 0, !dbg !10939
  %32 = load i32, i32* %def_nr20, align 4, !dbg !10939
  %idxprom21 = sext i32 %32 to i64, !dbg !10937
  %arrayidx22 = getelementptr inbounds i8, i8* %30, i64 %idxprom21, !dbg !10937
  store i8 %conv19, i8* %arrayidx22, align 1, !dbg !10940
  %33 = load float, float* %total_valid.addr, align 4, !dbg !10941
  %dec = fadd float %33, -1.000000e+00, !dbg !10941
  store float %dec, float* %total_valid.addr, align 4, !dbg !10941
  br label %if.end40, !dbg !10942

if.else:                                          ; preds = %land.lhs.true11, %if.then7
  %34 = load %struct.MDeformWeight*, %struct.MDeformWeight** %ndw, align 8, !dbg !10943
  %weight23 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %34, i32 0, i32 1, !dbg !10945
  %35 = load float, float* %weight23, align 4, !dbg !10945
  %36 = load float, float* %change, align 4, !dbg !10946
  %add24 = fadd float %35, %36, !dbg !10947
  %cmp25 = fcmp olt float %add24, 0.000000e+00, !dbg !10948
  br i1 %cmp25, label %if.then27, label %if.else36, !dbg !10949

if.then27:                                        ; preds = %if.else
  %37 = load %struct.MDeformWeight*, %struct.MDeformWeight** %ndw, align 8, !dbg !10950
  %weight28 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %37, i32 0, i32 1, !dbg !10952
  %38 = load float, float* %weight28, align 4, !dbg !10952
  %39 = load float, float* %totchange.addr, align 4, !dbg !10953
  %sub29 = fsub float %39, %38, !dbg !10953
  store float %sub29, float* %totchange.addr, align 4, !dbg !10953
  %40 = load %struct.MDeformWeight*, %struct.MDeformWeight** %ndw, align 8, !dbg !10954
  %weight30 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %40, i32 0, i32 1, !dbg !10955
  store float 0.000000e+00, float* %weight30, align 4, !dbg !10956
  %41 = load i32, i32* %changeto.addr, align 4, !dbg !10957
  %conv31 = trunc i32 %41 to i8, !dbg !10957
  %42 = load i8*, i8** %change_status.addr, align 8, !dbg !10958
  %43 = load %struct.MDeformWeight*, %struct.MDeformWeight** %ndw, align 8, !dbg !10959
  %def_nr32 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %43, i32 0, i32 0, !dbg !10960
  %44 = load i32, i32* %def_nr32, align 4, !dbg !10960
  %idxprom33 = sext i32 %44 to i64, !dbg !10958
  %arrayidx34 = getelementptr inbounds i8, i8* %42, i64 %idxprom33, !dbg !10958
  store i8 %conv31, i8* %arrayidx34, align 1, !dbg !10961
  %45 = load float, float* %total_valid.addr, align 4, !dbg !10962
  %dec35 = fadd float %45, -1.000000e+00, !dbg !10962
  store float %dec35, float* %total_valid.addr, align 4, !dbg !10962
  br label %if.end, !dbg !10963

if.else36:                                        ; preds = %if.else
  %46 = load float, float* %change, align 4, !dbg !10964
  %47 = load float, float* %totchange.addr, align 4, !dbg !10966
  %sub37 = fsub float %47, %46, !dbg !10966
  store float %sub37, float* %totchange.addr, align 4, !dbg !10966
  %48 = load float, float* %change, align 4, !dbg !10967
  %49 = load %struct.MDeformWeight*, %struct.MDeformWeight** %ndw, align 8, !dbg !10968
  %weight38 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %49, i32 0, i32 1, !dbg !10969
  %50 = load float, float* %weight38, align 4, !dbg !10970
  %add39 = fadd float %50, %48, !dbg !10970
  store float %add39, float* %weight38, align 4, !dbg !10970
  br label %if.end

if.end:                                           ; preds = %if.else36, %if.then27
  br label %if.end40

if.end40:                                         ; preds = %if.end, %if.then15
  %51 = load float, float* %oldval, align 4, !dbg !10971
  %52 = load %struct.MDeformWeight*, %struct.MDeformWeight** %ndw, align 8, !dbg !10973
  %weight41 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %52, i32 0, i32 1, !dbg !10974
  %53 = load float, float* %weight41, align 4, !dbg !10974
  %cmp42 = fcmp une float %51, %53, !dbg !10975
  br i1 %cmp42, label %if.then44, label %if.end45, !dbg !10976

if.then44:                                        ; preds = %if.end40
  store i8 1, i8* %changed, align 1, !dbg !10977
  br label %if.end45, !dbg !10979

if.end45:                                         ; preds = %if.then44, %if.end40
  br label %if.end46, !dbg !10980

if.end46:                                         ; preds = %if.end45, %if.then
  br label %if.end47, !dbg !10981

if.end47:                                         ; preds = %if.end46, %for.body
  br label %for.inc, !dbg !10982

for.inc:                                          ; preds = %if.end47
  %54 = load i32, i32* %i, align 4, !dbg !10983
  %inc = add nsw i32 %54, 1, !dbg !10983
  store i32 %inc, i32* %i, align 4, !dbg !10983
  br label %for.cond, !dbg !10984, !llvm.loop !10985

for.end:                                          ; preds = %land.end
  br label %do.cond, !dbg !10987

do.cond:                                          ; preds = %for.end
  %55 = load i8, i8* %changed, align 1, !dbg !10988
  %conv48 = zext i8 %55 to i32, !dbg !10988
  %tobool49 = icmp ne i32 %conv48, 0, !dbg !10988
  br i1 %tobool49, label %land.lhs.true50, label %land.end54, !dbg !10989

land.lhs.true50:                                  ; preds = %do.cond
  %56 = load float, float* %total_valid.addr, align 4, !dbg !10990
  %tobool51 = fcmp une float %56, 0.000000e+00, !dbg !10990
  br i1 %tobool51, label %land.rhs52, label %land.end54, !dbg !10991

land.rhs52:                                       ; preds = %land.lhs.true50
  %57 = load float, float* %totchange.addr, align 4, !dbg !10992
  %tobool53 = fcmp une float %57, 0.000000e+00, !dbg !10991
  br label %land.end54

land.end54:                                       ; preds = %land.rhs52, %land.lhs.true50, %do.cond
  %58 = phi i1 [ false, %land.lhs.true50 ], [ false, %do.cond ], [ %tobool53, %land.rhs52 ], !dbg !10993
  br i1 %58, label %do.body, label %do.end, !dbg !10987, !llvm.loop !10994

do.end:                                           ; preds = %land.end54
  %59 = load float, float* %totchange.addr, align 4, !dbg !10996
  ret float %59, !dbg !10997
}

declare dso_local void @ED_vpaint_proj_handle_free(%struct.VertProjHandle*) #2

declare dso_local i32 @paint_stroke_exec(%struct.bContext*, %struct.wmOperator*) #2

declare dso_local void @paint_stroke_cancel(%struct.bContext*, %struct.wmOperator*) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @vpaint_stroke_test_start(%struct.bContext* %C, %struct.wmOperator* %op, float* %UNUSED_mouse) #0 !dbg !10998 {
entry:
  %retval = alloca i8, align 1
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %UNUSED_mouse.addr = alloca float*, align 8
  %scene = alloca %struct.Scene*, align 8
  %ts = alloca %struct.ToolSettings*, align 8
  %stroke = alloca %struct.PaintStroke*, align 8
  %vp = alloca %struct.VPaint*, align 8
  %brush = alloca %struct.Brush*, align 8
  %vpd = alloca %struct.VPaintData*, align 8
  %ob = alloca %struct.Object*, align 8
  %me = alloca %struct.Mesh*, align 8
  %mat = alloca [4 x [4 x float]], align 16
  %imat = alloca [4 x [4 x float]], align 16
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !11001, metadata !DIExpression()), !dbg !11002
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !11003, metadata !DIExpression()), !dbg !11004
  store float* %UNUSED_mouse, float** %UNUSED_mouse.addr, align 8
  call void @llvm.dbg.declare(metadata float** %UNUSED_mouse.addr, metadata !11005, metadata !DIExpression()), !dbg !11006
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene, metadata !11007, metadata !DIExpression()), !dbg !11008
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !11009
  %call = call %struct.Scene* @CTX_data_scene(%struct.bContext* %0), !dbg !11010
  store %struct.Scene* %call, %struct.Scene** %scene, align 8, !dbg !11008
  call void @llvm.dbg.declare(metadata %struct.ToolSettings** %ts, metadata !11011, metadata !DIExpression()), !dbg !11012
  %1 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !11013
  %toolsettings = getelementptr inbounds %struct.Scene, %struct.Scene* %1, i32 0, i32 20, !dbg !11014
  %2 = load %struct.ToolSettings*, %struct.ToolSettings** %toolsettings, align 8, !dbg !11014
  store %struct.ToolSettings* %2, %struct.ToolSettings** %ts, align 8, !dbg !11012
  call void @llvm.dbg.declare(metadata %struct.PaintStroke** %stroke, metadata !11015, metadata !DIExpression()), !dbg !11016
  %3 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !11017
  %customdata = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %3, i32 0, i32 5, !dbg !11018
  %4 = load i8*, i8** %customdata, align 8, !dbg !11018
  %5 = bitcast i8* %4 to %struct.PaintStroke*, !dbg !11017
  store %struct.PaintStroke* %5, %struct.PaintStroke** %stroke, align 8, !dbg !11016
  call void @llvm.dbg.declare(metadata %struct.VPaint** %vp, metadata !11019, metadata !DIExpression()), !dbg !11020
  %6 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !11021
  %vpaint = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %6, i32 0, i32 0, !dbg !11022
  %7 = load %struct.VPaint*, %struct.VPaint** %vpaint, align 8, !dbg !11022
  store %struct.VPaint* %7, %struct.VPaint** %vp, align 8, !dbg !11020
  call void @llvm.dbg.declare(metadata %struct.Brush** %brush, metadata !11023, metadata !DIExpression()), !dbg !11024
  %8 = load %struct.VPaint*, %struct.VPaint** %vp, align 8, !dbg !11025
  %paint = getelementptr inbounds %struct.VPaint, %struct.VPaint* %8, i32 0, i32 0, !dbg !11026
  %call1 = call %struct.Brush* @BKE_paint_brush(%struct.Paint* %paint), !dbg !11027
  store %struct.Brush* %call1, %struct.Brush** %brush, align 8, !dbg !11024
  call void @llvm.dbg.declare(metadata %struct.VPaintData** %vpd, metadata !11028, metadata !DIExpression()), !dbg !11048
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !11049, metadata !DIExpression()), !dbg !11050
  %9 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !11051
  %call2 = call %struct.Object* @CTX_data_active_object(%struct.bContext* %9), !dbg !11052
  store %struct.Object* %call2, %struct.Object** %ob, align 8, !dbg !11050
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me, metadata !11053, metadata !DIExpression()), !dbg !11054
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %mat, metadata !11055, metadata !DIExpression()), !dbg !11056
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %imat, metadata !11057, metadata !DIExpression()), !dbg !11058
  %10 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !11059
  %call3 = call %struct.Mesh* @BKE_mesh_from_object(%struct.Object* %10), !dbg !11060
  store %struct.Mesh* %call3, %struct.Mesh** %me, align 8, !dbg !11061
  %11 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !11062
  %cmp = icmp eq %struct.Mesh* %11, null, !dbg !11064
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !11065

lor.lhs.false:                                    ; preds = %entry
  %12 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !11066
  %totpoly = getelementptr inbounds %struct.Mesh, %struct.Mesh* %12, i32 0, i32 30, !dbg !11067
  %13 = load i32, i32* %totpoly, align 8, !dbg !11067
  %cmp4 = icmp eq i32 %13, 0, !dbg !11068
  br i1 %cmp4, label %if.then, label %if.end, !dbg !11069

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i8 0, i8* %retval, align 1, !dbg !11070
  br label %return, !dbg !11070

if.end:                                           ; preds = %lor.lhs.false
  %14 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !11071
  %mloopcol = getelementptr inbounds %struct.Mesh, %struct.Mesh* %14, i32 0, i32 11, !dbg !11073
  %15 = load %struct.MLoopCol*, %struct.MLoopCol** %mloopcol, align 8, !dbg !11073
  %cmp5 = icmp eq %struct.MLoopCol* %15, null, !dbg !11074
  br i1 %cmp5, label %if.then6, label %if.end8, !dbg !11075

if.then6:                                         ; preds = %if.end
  %16 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !11076
  %call7 = call zeroext i8 @make_vertexcol(%struct.Object* %16), !dbg !11077
  br label %if.end8, !dbg !11077

if.end8:                                          ; preds = %if.then6, %if.end
  %17 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !11078
  %mloopcol9 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %17, i32 0, i32 11, !dbg !11080
  %18 = load %struct.MLoopCol*, %struct.MLoopCol** %mloopcol9, align 8, !dbg !11080
  %cmp10 = icmp eq %struct.MLoopCol* %18, null, !dbg !11081
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !11082

if.then11:                                        ; preds = %if.end8
  store i8 0, i8* %retval, align 1, !dbg !11083
  br label %return, !dbg !11083

if.end12:                                         ; preds = %if.end8
  %19 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !11084
  %20 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !11085
  call void @update_tessface_data(%struct.Object* %19, %struct.Mesh* %20), !dbg !11086
  %21 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !11087
  %call13 = call i8* %21(i64 176, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.59, i64 0, i64 0)), !dbg !11087
  %22 = bitcast i8* %call13 to %struct.VPaintData*, !dbg !11087
  store %struct.VPaintData* %22, %struct.VPaintData** %vpd, align 8, !dbg !11088
  %23 = load %struct.PaintStroke*, %struct.PaintStroke** %stroke, align 8, !dbg !11089
  %24 = load %struct.VPaintData*, %struct.VPaintData** %vpd, align 8, !dbg !11090
  %25 = bitcast %struct.VPaintData* %24 to i8*, !dbg !11090
  call void @paint_stroke_set_mode_data(%struct.PaintStroke* %23, i8* %25), !dbg !11091
  %26 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !11092
  %27 = load %struct.VPaintData*, %struct.VPaintData** %vpd, align 8, !dbg !11093
  %vc = getelementptr inbounds %struct.VPaintData, %struct.VPaintData* %27, i32 0, i32 0, !dbg !11094
  call void @view3d_set_viewcontext(%struct.bContext* %26, %struct.ViewContext* %vc), !dbg !11095
  %28 = load %struct.VPaintData*, %struct.VPaintData** %vpd, align 8, !dbg !11096
  %vc14 = getelementptr inbounds %struct.VPaintData, %struct.VPaintData* %28, i32 0, i32 0, !dbg !11097
  %scene15 = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %vc14, i32 0, i32 0, !dbg !11098
  %29 = load %struct.Scene*, %struct.Scene** %scene15, align 8, !dbg !11098
  %30 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !11099
  %31 = load %struct.VPaintData*, %struct.VPaintData** %vpd, align 8, !dbg !11100
  %vertexcosnos = getelementptr inbounds %struct.VPaintData, %struct.VPaintData* %31, i32 0, i32 4, !dbg !11101
  %call16 = call %struct.VertProjHandle* @ED_vpaint_proj_handle_create(%struct.Scene* %29, %struct.Object* %30, %struct.DMCoNo** %vertexcosnos), !dbg !11102
  %32 = load %struct.VPaintData*, %struct.VPaintData** %vpd, align 8, !dbg !11103
  %vp_handle = getelementptr inbounds %struct.VPaintData, %struct.VPaintData* %32, i32 0, i32 3, !dbg !11104
  store %struct.VertProjHandle* %call16, %struct.VertProjHandle** %vp_handle, align 8, !dbg !11105
  %33 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !11106
  %call17 = call i32* @get_indexarray(%struct.Mesh* %33), !dbg !11107
  %34 = load %struct.VPaintData*, %struct.VPaintData** %vpd, align 8, !dbg !11108
  %indexar = getelementptr inbounds %struct.VPaintData, %struct.VPaintData* %34, i32 0, i32 2, !dbg !11109
  store i32* %call17, i32** %indexar, align 8, !dbg !11110
  %35 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !11111
  %36 = load %struct.VPaint*, %struct.VPaint** %vp, align 8, !dbg !11112
  %call18 = call i32 @vpaint_get_current_col(%struct.Scene* %35, %struct.VPaint* %36), !dbg !11113
  %37 = load %struct.VPaintData*, %struct.VPaintData** %vpd, align 8, !dbg !11114
  %paintcol = getelementptr inbounds %struct.VPaintData, %struct.VPaintData* %37, i32 0, i32 1, !dbg !11115
  store i32 %call18, i32* %paintcol, align 8, !dbg !11116
  %38 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !11117
  %vertexpaint_tool = getelementptr inbounds %struct.Brush, %struct.Brush* %38, i32 0, i32 35, !dbg !11118
  %39 = load i8, i8* %vertexpaint_tool, align 1, !dbg !11118
  %conv = zext i8 %39 to i32, !dbg !11117
  %cmp19 = icmp eq i32 %conv, 4, !dbg !11119
  br i1 %cmp19, label %land.end, label %land.rhs, !dbg !11120

land.rhs:                                         ; preds = %if.end12
  %40 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !11121
  %mtex = getelementptr inbounds %struct.Brush, %struct.Brush* %40, i32 0, i32 3, !dbg !11122
  %tex = getelementptr inbounds %struct.MTex, %struct.MTex* %mtex, i32 0, i32 5, !dbg !11123
  %41 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !11123
  %tobool = icmp ne %struct.Tex* %41, null, !dbg !11120
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end12
  %42 = phi i1 [ false, %if.end12 ], [ %tobool, %land.rhs ], !dbg !11124
  %land.ext = zext i1 %42 to i32, !dbg !11120
  %conv21 = trunc i32 %land.ext to i8, !dbg !11125
  %43 = load %struct.VPaintData*, %struct.VPaintData** %vpd, align 8, !dbg !11126
  %is_texbrush = getelementptr inbounds %struct.VPaintData, %struct.VPaintData* %43, i32 0, i32 11, !dbg !11127
  store i8 %conv21, i8* %is_texbrush, align 8, !dbg !11128
  %44 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !11129
  %call22 = call zeroext i8 @vertex_paint_use_fast_update_check(%struct.Object* %44), !dbg !11131
  %tobool23 = icmp ne i8 %call22, 0, !dbg !11131
  br i1 %tobool23, label %if.then24, label %if.else, !dbg !11132

if.then24:                                        ; preds = %land.end
  %45 = load %struct.VPaintData*, %struct.VPaintData** %vpd, align 8, !dbg !11133
  %46 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !11135
  call void @vpaint_build_poly_facemap(%struct.VPaintData* %45, %struct.Mesh* %46), !dbg !11136
  %47 = load %struct.VPaintData*, %struct.VPaintData** %vpd, align 8, !dbg !11137
  %use_fast_update = getelementptr inbounds %struct.VPaintData, %struct.VPaintData* %47, i32 0, i32 6, !dbg !11138
  store i8 1, i8* %use_fast_update, align 4, !dbg !11139
  br label %if.end26, !dbg !11140

if.else:                                          ; preds = %land.end
  %48 = load %struct.VPaintData*, %struct.VPaintData** %vpd, align 8, !dbg !11141
  %use_fast_update25 = getelementptr inbounds %struct.VPaintData, %struct.VPaintData* %48, i32 0, i32 6, !dbg !11143
  store i8 0, i8* %use_fast_update25, align 4, !dbg !11144
  br label %if.end26

if.end26:                                         ; preds = %if.else, %if.then24
  %49 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !11145
  %vertexpaint_tool27 = getelementptr inbounds %struct.Brush, %struct.Brush* %49, i32 0, i32 35, !dbg !11147
  %50 = load i8, i8* %vertexpaint_tool27, align 1, !dbg !11147
  %conv28 = zext i8 %50 to i32, !dbg !11145
  %cmp29 = icmp eq i32 %conv28, 4, !dbg !11148
  br i1 %cmp29, label %if.then31, label %if.end42, !dbg !11149

if.then31:                                        ; preds = %if.end26
  %51 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !11150
  %52 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !11152
  %totloop = getelementptr inbounds %struct.Mesh, %struct.Mesh* %52, i32 0, i32 31, !dbg !11153
  %53 = load i32, i32* %totloop, align 4, !dbg !11153
  %conv32 = sext i32 %53 to i64, !dbg !11152
  %mul = mul i64 1, %conv32, !dbg !11154
  %call33 = call i8* %51(i64 %mul, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0)), !dbg !11150
  %54 = load %struct.VPaintData*, %struct.VPaintData** %vpd, align 8, !dbg !11155
  %mlooptag = getelementptr inbounds %struct.VPaintData, %struct.VPaintData* %54, i32 0, i32 9, !dbg !11156
  store i8* %call33, i8** %mlooptag, align 8, !dbg !11157
  %55 = load %struct.VPaintData*, %struct.VPaintData** %vpd, align 8, !dbg !11158
  %use_fast_update34 = getelementptr inbounds %struct.VPaintData, %struct.VPaintData* %55, i32 0, i32 6, !dbg !11160
  %56 = load i8, i8* %use_fast_update34, align 4, !dbg !11160
  %tobool35 = icmp ne i8 %56, 0, !dbg !11158
  br i1 %tobool35, label %if.then36, label %if.end41, !dbg !11161

if.then36:                                        ; preds = %if.then31
  %57 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !11162
  %58 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !11163
  %totface = getelementptr inbounds %struct.Mesh, %struct.Mesh* %58, i32 0, i32 28, !dbg !11164
  %59 = load i32, i32* %totface, align 8, !dbg !11164
  %conv37 = sext i32 %59 to i64, !dbg !11163
  %mul38 = mul i64 1, %conv37, !dbg !11165
  %mul39 = mul i64 %mul38, 4, !dbg !11166
  %call40 = call i8* %57(i64 %mul39, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.60, i64 0, i64 0)), !dbg !11162
  %60 = load %struct.VPaintData*, %struct.VPaintData** %vpd, align 8, !dbg !11167
  %mfacetag = getelementptr inbounds %struct.VPaintData, %struct.VPaintData* %60, i32 0, i32 10, !dbg !11168
  store i8* %call40, i8** %mfacetag, align 8, !dbg !11169
  br label %if.end41, !dbg !11167

if.end41:                                         ; preds = %if.then36, %if.then31
  br label %if.end42, !dbg !11170

if.end42:                                         ; preds = %if.end41, %if.end26
  %61 = load %struct.VPaint*, %struct.VPaint** %vp, align 8, !dbg !11171
  %62 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !11172
  %mloopcol43 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %62, i32 0, i32 11, !dbg !11173
  %63 = load %struct.MLoopCol*, %struct.MLoopCol** %mloopcol43, align 8, !dbg !11173
  %64 = bitcast %struct.MLoopCol* %63 to i32*, !dbg !11174
  %65 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !11175
  %totloop44 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %65, i32 0, i32 31, !dbg !11176
  %66 = load i32, i32* %totloop44, align 4, !dbg !11176
  call void @copy_vpaint_prev(%struct.VPaint* %61, i32* %64, i32 %66), !dbg !11177
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 0, !dbg !11178
  %67 = load %struct.VPaintData*, %struct.VPaintData** %vpd, align 8, !dbg !11179
  %vc45 = getelementptr inbounds %struct.VPaintData, %struct.VPaintData* %67, i32 0, i32 0, !dbg !11180
  %rv3d = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %vc45, i32 0, i32 5, !dbg !11181
  %68 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d, align 8, !dbg !11181
  %viewmat = getelementptr inbounds %struct.RegionView3D, %struct.RegionView3D* %68, i32 0, i32 1, !dbg !11182
  %arraydecay46 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %viewmat, i64 0, i64 0, !dbg !11179
  %69 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !11183
  %obmat = getelementptr inbounds %struct.Object, %struct.Object* %69, i32 0, i32 47, !dbg !11184
  %arraydecay47 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat, i64 0, i64 0, !dbg !11183
  call void @mul_m4_m4m4([4 x float]* %arraydecay, [4 x float]* %arraydecay46, [4 x float]* %arraydecay47), !dbg !11185
  %arraydecay48 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat, i64 0, i64 0, !dbg !11186
  %arraydecay49 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 0, !dbg !11187
  %call50 = call zeroext i8 @invert_m4_m4([4 x float]* %arraydecay48, [4 x float]* %arraydecay49), !dbg !11188
  %70 = load %struct.VPaintData*, %struct.VPaintData** %vpd, align 8, !dbg !11189
  %vpimat = getelementptr inbounds %struct.VPaintData, %struct.VPaintData* %70, i32 0, i32 5, !dbg !11190
  %arraydecay51 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vpimat, i64 0, i64 0, !dbg !11189
  %arraydecay52 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat, i64 0, i64 0, !dbg !11191
  call void @copy_m3_m4([3 x float]* %arraydecay51, [4 x float]* %arraydecay52), !dbg !11192
  store i8 1, i8* %retval, align 1, !dbg !11193
  br label %return, !dbg !11193

return:                                           ; preds = %if.end42, %if.then11, %if.then
  %71 = load i8, i8* %retval, align 1, !dbg !11194
  ret i8 %71, !dbg !11194
}

; Function Attrs: noinline nounwind uwtable
define internal void @vpaint_stroke_update_step(%struct.bContext* %C, %struct.PaintStroke* %stroke, %struct.PointerRNA* %itemptr) #0 !dbg !11195 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %stroke.addr = alloca %struct.PaintStroke*, align 8
  %itemptr.addr = alloca %struct.PointerRNA*, align 8
  %scene = alloca %struct.Scene*, align 8
  %ts = alloca %struct.ToolSettings*, align 8
  %vpd = alloca %struct.VPaintData*, align 8
  %vp = alloca %struct.VPaint*, align 8
  %brush = alloca %struct.Brush*, align 8
  %vc = alloca %struct.ViewContext*, align 8
  %ob = alloca %struct.Object*, align 8
  %me = alloca %struct.Mesh*, align 8
  %mat = alloca [4 x [4 x float]], align 16
  %indexar = alloca i32*, align 8
  %totindex = alloca i32, align 4
  %index = alloca i32, align 4
  %mval = alloca [2 x float], align 4
  %pressure = alloca float, align 4
  %brush_size_pressure = alloca float, align 4
  %brush_alpha_pressure = alloca float, align 4
  %mpoly38 = alloca %struct.MPoly*, align 8
  %do_tessface = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !11196, metadata !DIExpression()), !dbg !11197
  store %struct.PaintStroke* %stroke, %struct.PaintStroke** %stroke.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PaintStroke** %stroke.addr, metadata !11198, metadata !DIExpression()), !dbg !11199
  store %struct.PointerRNA* %itemptr, %struct.PointerRNA** %itemptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %itemptr.addr, metadata !11200, metadata !DIExpression()), !dbg !11201
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene, metadata !11202, metadata !DIExpression()), !dbg !11203
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !11204
  %call = call %struct.Scene* @CTX_data_scene(%struct.bContext* %0), !dbg !11205
  store %struct.Scene* %call, %struct.Scene** %scene, align 8, !dbg !11203
  call void @llvm.dbg.declare(metadata %struct.ToolSettings** %ts, metadata !11206, metadata !DIExpression()), !dbg !11207
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !11208
  %call1 = call %struct.ToolSettings* @CTX_data_tool_settings(%struct.bContext* %1), !dbg !11209
  store %struct.ToolSettings* %call1, %struct.ToolSettings** %ts, align 8, !dbg !11207
  call void @llvm.dbg.declare(metadata %struct.VPaintData** %vpd, metadata !11210, metadata !DIExpression()), !dbg !11211
  %2 = load %struct.PaintStroke*, %struct.PaintStroke** %stroke.addr, align 8, !dbg !11212
  %call2 = call i8* @paint_stroke_mode_data(%struct.PaintStroke* %2), !dbg !11213
  %3 = bitcast i8* %call2 to %struct.VPaintData*, !dbg !11213
  store %struct.VPaintData* %3, %struct.VPaintData** %vpd, align 8, !dbg !11211
  call void @llvm.dbg.declare(metadata %struct.VPaint** %vp, metadata !11214, metadata !DIExpression()), !dbg !11215
  %4 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !11216
  %vpaint = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %4, i32 0, i32 0, !dbg !11217
  %5 = load %struct.VPaint*, %struct.VPaint** %vpaint, align 8, !dbg !11217
  store %struct.VPaint* %5, %struct.VPaint** %vp, align 8, !dbg !11215
  call void @llvm.dbg.declare(metadata %struct.Brush** %brush, metadata !11218, metadata !DIExpression()), !dbg !11219
  %6 = load %struct.VPaint*, %struct.VPaint** %vp, align 8, !dbg !11220
  %paint = getelementptr inbounds %struct.VPaint, %struct.VPaint* %6, i32 0, i32 0, !dbg !11221
  %call3 = call %struct.Brush* @BKE_paint_brush(%struct.Paint* %paint), !dbg !11222
  store %struct.Brush* %call3, %struct.Brush** %brush, align 8, !dbg !11219
  call void @llvm.dbg.declare(metadata %struct.ViewContext** %vc, metadata !11223, metadata !DIExpression()), !dbg !11224
  %7 = load %struct.VPaintData*, %struct.VPaintData** %vpd, align 8, !dbg !11225
  %vc4 = getelementptr inbounds %struct.VPaintData, %struct.VPaintData* %7, i32 0, i32 0, !dbg !11226
  store %struct.ViewContext* %vc4, %struct.ViewContext** %vc, align 8, !dbg !11224
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !11227, metadata !DIExpression()), !dbg !11228
  %8 = load %struct.ViewContext*, %struct.ViewContext** %vc, align 8, !dbg !11229
  %obact = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %8, i32 0, i32 1, !dbg !11230
  %9 = load %struct.Object*, %struct.Object** %obact, align 8, !dbg !11230
  store %struct.Object* %9, %struct.Object** %ob, align 8, !dbg !11228
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me, metadata !11231, metadata !DIExpression()), !dbg !11232
  %10 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !11233
  %data = getelementptr inbounds %struct.Object, %struct.Object* %10, i32 0, i32 19, !dbg !11234
  %11 = load i8*, i8** %data, align 8, !dbg !11234
  %12 = bitcast i8* %11 to %struct.Mesh*, !dbg !11233
  store %struct.Mesh* %12, %struct.Mesh** %me, align 8, !dbg !11232
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %mat, metadata !11235, metadata !DIExpression()), !dbg !11236
  call void @llvm.dbg.declare(metadata i32** %indexar, metadata !11237, metadata !DIExpression()), !dbg !11238
  %13 = load %struct.VPaintData*, %struct.VPaintData** %vpd, align 8, !dbg !11239
  %indexar5 = getelementptr inbounds %struct.VPaintData, %struct.VPaintData* %13, i32 0, i32 2, !dbg !11240
  %14 = load i32*, i32** %indexar5, align 8, !dbg !11240
  store i32* %14, i32** %indexar, align 8, !dbg !11238
  call void @llvm.dbg.declare(metadata i32* %totindex, metadata !11241, metadata !DIExpression()), !dbg !11242
  call void @llvm.dbg.declare(metadata i32* %index, metadata !11243, metadata !DIExpression()), !dbg !11244
  call void @llvm.dbg.declare(metadata [2 x float]* %mval, metadata !11245, metadata !DIExpression()), !dbg !11246
  call void @llvm.dbg.declare(metadata float* %pressure, metadata !11247, metadata !DIExpression()), !dbg !11248
  %15 = load %struct.PointerRNA*, %struct.PointerRNA** %itemptr.addr, align 8, !dbg !11249
  %call6 = call float @RNA_float_get(%struct.PointerRNA* %15, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.55, i64 0, i64 0)), !dbg !11250
  store float %call6, float* %pressure, align 4, !dbg !11248
  call void @llvm.dbg.declare(metadata float* %brush_size_pressure, metadata !11251, metadata !DIExpression()), !dbg !11252
  %16 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !11253
  %17 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !11254
  %call7 = call i32 @BKE_brush_size_get(%struct.Scene* %16, %struct.Brush* %17), !dbg !11255
  %conv = sitofp i32 %call7 to float, !dbg !11255
  %18 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !11256
  %19 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !11257
  %call8 = call i32 @BKE_brush_use_size_pressure(%struct.Scene* %18, %struct.Brush* %19), !dbg !11258
  %tobool = icmp ne i32 %call8, 0, !dbg !11258
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !11258

cond.true:                                        ; preds = %entry
  %20 = load float, float* %pressure, align 4, !dbg !11259
  br label %cond.end, !dbg !11258

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !11258

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %20, %cond.true ], [ 1.000000e+00, %cond.false ], !dbg !11258
  %mul = fmul float %conv, %cond, !dbg !11260
  store float %mul, float* %brush_size_pressure, align 4, !dbg !11252
  call void @llvm.dbg.declare(metadata float* %brush_alpha_pressure, metadata !11261, metadata !DIExpression()), !dbg !11262
  %21 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !11263
  %22 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !11264
  %call9 = call float @BKE_brush_alpha_get(%struct.Scene* %21, %struct.Brush* %22), !dbg !11265
  %23 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !11266
  %24 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !11267
  %call10 = call i32 @BKE_brush_use_alpha_pressure(%struct.Scene* %23, %struct.Brush* %24), !dbg !11268
  %tobool11 = icmp ne i32 %call10, 0, !dbg !11268
  br i1 %tobool11, label %cond.true12, label %cond.false13, !dbg !11268

cond.true12:                                      ; preds = %cond.end
  %25 = load float, float* %pressure, align 4, !dbg !11269
  br label %cond.end14, !dbg !11268

cond.false13:                                     ; preds = %cond.end
  br label %cond.end14, !dbg !11268

cond.end14:                                       ; preds = %cond.false13, %cond.true12
  %cond15 = phi float [ %25, %cond.true12 ], [ 1.000000e+00, %cond.false13 ], !dbg !11268
  %mul16 = fmul float %call9, %cond15, !dbg !11270
  store float %mul16, float* %brush_alpha_pressure, align 4, !dbg !11262
  %26 = load %struct.PointerRNA*, %struct.PointerRNA** %itemptr.addr, align 8, !dbg !11271
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %mval, i64 0, i64 0, !dbg !11272
  call void @RNA_float_get_array(%struct.PointerRNA* %26, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.56, i64 0, i64 0), float* %arraydecay), !dbg !11273
  %27 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !11274
  call void @view3d_operator_needs_opengl(%struct.bContext* %27), !dbg !11275
  %28 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !11276
  %29 = load %struct.ViewContext*, %struct.ViewContext** %vc, align 8, !dbg !11277
  %rv3d = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %29, i32 0, i32 5, !dbg !11278
  %30 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d, align 8, !dbg !11278
  call void @ED_view3d_init_mats_rv3d(%struct.Object* %28, %struct.RegionView3D* %30), !dbg !11279
  %arraydecay17 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 0, !dbg !11280
  %31 = load %struct.ViewContext*, %struct.ViewContext** %vc, align 8, !dbg !11281
  %rv3d18 = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %31, i32 0, i32 5, !dbg !11282
  %32 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d18, align 8, !dbg !11282
  %persmat = getelementptr inbounds %struct.RegionView3D, %struct.RegionView3D* %32, i32 0, i32 3, !dbg !11283
  %arraydecay19 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %persmat, i64 0, i64 0, !dbg !11281
  %33 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !11284
  %obmat = getelementptr inbounds %struct.Object, %struct.Object* %33, i32 0, i32 47, !dbg !11285
  %arraydecay20 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat, i64 0, i64 0, !dbg !11284
  call void @mul_m4_m4m4([4 x float]* %arraydecay17, [4 x float]* %arraydecay19, [4 x float]* %arraydecay20), !dbg !11286
  %34 = load %struct.ViewContext*, %struct.ViewContext** %vc, align 8, !dbg !11287
  %35 = load i32*, i32** %indexar, align 8, !dbg !11288
  %36 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !11289
  %totpoly = getelementptr inbounds %struct.Mesh, %struct.Mesh* %36, i32 0, i32 30, !dbg !11290
  %37 = load i32, i32* %totpoly, align 8, !dbg !11290
  %arrayidx = getelementptr inbounds [2 x float], [2 x float]* %mval, i64 0, i64 0, !dbg !11291
  %38 = load float, float* %arrayidx, align 4, !dbg !11291
  %conv21 = fptosi float %38 to i32, !dbg !11291
  %arrayidx22 = getelementptr inbounds [2 x float], [2 x float]* %mval, i64 0, i64 1, !dbg !11292
  %39 = load float, float* %arrayidx22, align 4, !dbg !11292
  %conv23 = fptosi float %39 to i32, !dbg !11292
  %40 = load float, float* %brush_size_pressure, align 4, !dbg !11293
  %call24 = call i32 @sample_backbuf_area(%struct.ViewContext* %34, i32* %35, i32 %37, i32 %conv21, i32 %conv23, float %40), !dbg !11294
  store i32 %call24, i32* %totindex, align 4, !dbg !11295
  %41 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !11296
  %editflag = getelementptr inbounds %struct.Mesh, %struct.Mesh* %41, i32 0, i32 46, !dbg !11298
  %42 = load i8, i8* %editflag, align 1, !dbg !11298
  %conv25 = zext i8 %42 to i32, !dbg !11296
  %and = and i32 %conv25, 8, !dbg !11299
  %tobool26 = icmp ne i32 %and, 0, !dbg !11299
  br i1 %tobool26, label %land.lhs.true, label %if.end50, !dbg !11300

land.lhs.true:                                    ; preds = %cond.end14
  %43 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !11301
  %mpoly = getelementptr inbounds %struct.Mesh, %struct.Mesh* %43, i32 0, i32 7, !dbg !11302
  %44 = load %struct.MPoly*, %struct.MPoly** %mpoly, align 8, !dbg !11302
  %tobool27 = icmp ne %struct.MPoly* %44, null, !dbg !11301
  br i1 %tobool27, label %if.then, label %if.end50, !dbg !11303

if.then:                                          ; preds = %land.lhs.true
  store i32 0, i32* %index, align 4, !dbg !11304
  br label %for.cond, !dbg !11307

for.cond:                                         ; preds = %for.inc, %if.then
  %45 = load i32, i32* %index, align 4, !dbg !11308
  %46 = load i32, i32* %totindex, align 4, !dbg !11310
  %cmp = icmp slt i32 %45, %46, !dbg !11311
  br i1 %cmp, label %for.body, label %for.end, !dbg !11312

for.body:                                         ; preds = %for.cond
  %47 = load i32*, i32** %indexar, align 8, !dbg !11313
  %48 = load i32, i32* %index, align 4, !dbg !11316
  %idxprom = sext i32 %48 to i64, !dbg !11313
  %arrayidx29 = getelementptr inbounds i32, i32* %47, i64 %idxprom, !dbg !11313
  %49 = load i32, i32* %arrayidx29, align 4, !dbg !11313
  %tobool30 = icmp ne i32 %49, 0, !dbg !11313
  br i1 %tobool30, label %land.lhs.true31, label %if.end49, !dbg !11317

land.lhs.true31:                                  ; preds = %for.body
  %50 = load i32*, i32** %indexar, align 8, !dbg !11318
  %51 = load i32, i32* %index, align 4, !dbg !11319
  %idxprom32 = sext i32 %51 to i64, !dbg !11318
  %arrayidx33 = getelementptr inbounds i32, i32* %50, i64 %idxprom32, !dbg !11318
  %52 = load i32, i32* %arrayidx33, align 4, !dbg !11318
  %53 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !11320
  %totpoly34 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %53, i32 0, i32 30, !dbg !11321
  %54 = load i32, i32* %totpoly34, align 8, !dbg !11321
  %cmp35 = icmp sle i32 %52, %54, !dbg !11322
  br i1 %cmp35, label %if.then37, label %if.end49, !dbg !11323

if.then37:                                        ; preds = %land.lhs.true31
  call void @llvm.dbg.declare(metadata %struct.MPoly** %mpoly38, metadata !11324, metadata !DIExpression()), !dbg !11326
  %55 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !11327
  %mpoly39 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %55, i32 0, i32 7, !dbg !11328
  %56 = load %struct.MPoly*, %struct.MPoly** %mpoly39, align 8, !dbg !11328
  %57 = load i32*, i32** %indexar, align 8, !dbg !11329
  %58 = load i32, i32* %index, align 4, !dbg !11330
  %idxprom40 = sext i32 %58 to i64, !dbg !11329
  %arrayidx41 = getelementptr inbounds i32, i32* %57, i64 %idxprom40, !dbg !11329
  %59 = load i32, i32* %arrayidx41, align 4, !dbg !11329
  %sub = sub nsw i32 %59, 1, !dbg !11331
  %idx.ext = sext i32 %sub to i64, !dbg !11332
  %add.ptr = getelementptr inbounds %struct.MPoly, %struct.MPoly* %56, i64 %idx.ext, !dbg !11332
  store %struct.MPoly* %add.ptr, %struct.MPoly** %mpoly38, align 8, !dbg !11326
  %60 = load %struct.MPoly*, %struct.MPoly** %mpoly38, align 8, !dbg !11333
  %flag = getelementptr inbounds %struct.MPoly, %struct.MPoly* %60, i32 0, i32 3, !dbg !11335
  %61 = load i8, i8* %flag, align 2, !dbg !11335
  %conv42 = zext i8 %61 to i32, !dbg !11333
  %and43 = and i32 %conv42, 2, !dbg !11336
  %cmp44 = icmp eq i32 %and43, 0, !dbg !11337
  br i1 %cmp44, label %if.then46, label %if.end, !dbg !11338

if.then46:                                        ; preds = %if.then37
  %62 = load i32*, i32** %indexar, align 8, !dbg !11339
  %63 = load i32, i32* %index, align 4, !dbg !11340
  %idxprom47 = sext i32 %63 to i64, !dbg !11339
  %arrayidx48 = getelementptr inbounds i32, i32* %62, i64 %idxprom47, !dbg !11339
  store i32 0, i32* %arrayidx48, align 4, !dbg !11341
  br label %if.end, !dbg !11339

if.end:                                           ; preds = %if.then46, %if.then37
  br label %if.end49, !dbg !11342

if.end49:                                         ; preds = %if.end, %land.lhs.true31, %for.body
  br label %for.inc, !dbg !11343

for.inc:                                          ; preds = %if.end49
  %64 = load i32, i32* %index, align 4, !dbg !11344
  %inc = add nsw i32 %64, 1, !dbg !11344
  store i32 %inc, i32* %index, align 4, !dbg !11344
  br label %for.cond, !dbg !11345, !llvm.loop !11346

for.end:                                          ; preds = %for.cond
  br label %if.end50, !dbg !11348

if.end50:                                         ; preds = %for.end, %land.lhs.true, %cond.end14
  %65 = load %struct.ViewContext*, %struct.ViewContext** %vc, align 8, !dbg !11349
  %rv3d51 = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %65, i32 0, i32 5, !dbg !11350
  %66 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d51, align 8, !dbg !11350
  %persmat52 = getelementptr inbounds %struct.RegionView3D, %struct.RegionView3D* %66, i32 0, i32 3, !dbg !11351
  %arraydecay53 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %persmat52, i64 0, i64 0, !dbg !11349
  %arraydecay54 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 0, !dbg !11352
  call void @swap_m4m4([4 x float]* %arraydecay53, [4 x float]* %arraydecay54), !dbg !11353
  %67 = load %struct.VPaintData*, %struct.VPaintData** %vpd, align 8, !dbg !11354
  %vp_handle = getelementptr inbounds %struct.VPaintData, %struct.VPaintData* %67, i32 0, i32 3, !dbg !11355
  %68 = load %struct.VertProjHandle*, %struct.VertProjHandle** %vp_handle, align 8, !dbg !11355
  %69 = load %struct.ViewContext*, %struct.ViewContext** %vc, align 8, !dbg !11356
  %ar = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %69, i32 0, i32 3, !dbg !11357
  %70 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !11357
  %arraydecay55 = getelementptr inbounds [2 x float], [2 x float]* %mval, i64 0, i64 0, !dbg !11358
  call void @ED_vpaint_proj_handle_update(%struct.VertProjHandle* %68, %struct.ARegion* %70, float* %arraydecay55), !dbg !11359
  %71 = load %struct.VPaintData*, %struct.VPaintData** %vpd, align 8, !dbg !11360
  %mlooptag = getelementptr inbounds %struct.VPaintData, %struct.VPaintData* %71, i32 0, i32 9, !dbg !11362
  %72 = load i8*, i8** %mlooptag, align 8, !dbg !11362
  %tobool56 = icmp ne i8* %72, null, !dbg !11360
  br i1 %tobool56, label %if.then57, label %if.end61, !dbg !11363

if.then57:                                        ; preds = %if.end50
  %73 = load %struct.VPaintData*, %struct.VPaintData** %vpd, align 8, !dbg !11364
  %mlooptag58 = getelementptr inbounds %struct.VPaintData, %struct.VPaintData* %73, i32 0, i32 9, !dbg !11365
  %74 = load i8*, i8** %mlooptag58, align 8, !dbg !11365
  %75 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !11366
  %totloop = getelementptr inbounds %struct.Mesh, %struct.Mesh* %75, i32 0, i32 31, !dbg !11367
  %76 = load i32, i32* %totloop, align 4, !dbg !11367
  %conv59 = sext i32 %76 to i64, !dbg !11366
  %mul60 = mul i64 1, %conv59, !dbg !11368
  call void @llvm.memset.p0i8.i64(i8* align 1 %74, i8 0, i64 %mul60, i1 false), !dbg !11369
  br label %if.end61, !dbg !11369

if.end61:                                         ; preds = %if.then57, %if.end50
  %77 = load %struct.VPaintData*, %struct.VPaintData** %vpd, align 8, !dbg !11370
  %mfacetag = getelementptr inbounds %struct.VPaintData, %struct.VPaintData* %77, i32 0, i32 10, !dbg !11372
  %78 = load i8*, i8** %mfacetag, align 8, !dbg !11372
  %tobool62 = icmp ne i8* %78, null, !dbg !11370
  br i1 %tobool62, label %if.then63, label %if.end68, !dbg !11373

if.then63:                                        ; preds = %if.end61
  %79 = load %struct.VPaintData*, %struct.VPaintData** %vpd, align 8, !dbg !11374
  %mfacetag64 = getelementptr inbounds %struct.VPaintData, %struct.VPaintData* %79, i32 0, i32 10, !dbg !11375
  %80 = load i8*, i8** %mfacetag64, align 8, !dbg !11375
  %81 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !11376
  %totface = getelementptr inbounds %struct.Mesh, %struct.Mesh* %81, i32 0, i32 28, !dbg !11377
  %82 = load i32, i32* %totface, align 8, !dbg !11377
  %conv65 = sext i32 %82 to i64, !dbg !11376
  %mul66 = mul i64 1, %conv65, !dbg !11378
  %mul67 = mul i64 %mul66, 4, !dbg !11379
  call void @llvm.memset.p0i8.i64(i8* align 1 %80, i8 0, i64 %mul67, i1 false), !dbg !11380
  br label %if.end68, !dbg !11380

if.end68:                                         ; preds = %if.then63, %if.end61
  store i32 0, i32* %index, align 4, !dbg !11381
  br label %for.cond69, !dbg !11383

for.cond69:                                       ; preds = %for.inc88, %if.end68
  %83 = load i32, i32* %index, align 4, !dbg !11384
  %84 = load i32, i32* %totindex, align 4, !dbg !11386
  %cmp70 = icmp slt i32 %83, %84, !dbg !11387
  br i1 %cmp70, label %for.body72, label %for.end90, !dbg !11388

for.body72:                                       ; preds = %for.cond69
  %85 = load i32*, i32** %indexar, align 8, !dbg !11389
  %86 = load i32, i32* %index, align 4, !dbg !11392
  %idxprom73 = sext i32 %86 to i64, !dbg !11389
  %arrayidx74 = getelementptr inbounds i32, i32* %85, i64 %idxprom73, !dbg !11389
  %87 = load i32, i32* %arrayidx74, align 4, !dbg !11389
  %tobool75 = icmp ne i32 %87, 0, !dbg !11389
  br i1 %tobool75, label %land.lhs.true76, label %if.end87, !dbg !11393

land.lhs.true76:                                  ; preds = %for.body72
  %88 = load i32*, i32** %indexar, align 8, !dbg !11394
  %89 = load i32, i32* %index, align 4, !dbg !11395
  %idxprom77 = sext i32 %89 to i64, !dbg !11394
  %arrayidx78 = getelementptr inbounds i32, i32* %88, i64 %idxprom77, !dbg !11394
  %90 = load i32, i32* %arrayidx78, align 4, !dbg !11394
  %91 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !11396
  %totpoly79 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %91, i32 0, i32 30, !dbg !11397
  %92 = load i32, i32* %totpoly79, align 8, !dbg !11397
  %cmp80 = icmp sle i32 %90, %92, !dbg !11398
  br i1 %cmp80, label %if.then82, label %if.end87, !dbg !11399

if.then82:                                        ; preds = %land.lhs.true76
  %93 = load %struct.VPaint*, %struct.VPaint** %vp, align 8, !dbg !11400
  %94 = load %struct.VPaintData*, %struct.VPaintData** %vpd, align 8, !dbg !11402
  %95 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !11403
  %96 = load i32*, i32** %indexar, align 8, !dbg !11404
  %97 = load i32, i32* %index, align 4, !dbg !11405
  %idxprom83 = sext i32 %97 to i64, !dbg !11404
  %arrayidx84 = getelementptr inbounds i32, i32* %96, i64 %idxprom83, !dbg !11404
  %98 = load i32, i32* %arrayidx84, align 4, !dbg !11404
  %sub85 = sub nsw i32 %98, 1, !dbg !11406
  %arraydecay86 = getelementptr inbounds [2 x float], [2 x float]* %mval, i64 0, i64 0, !dbg !11407
  %99 = load float, float* %brush_size_pressure, align 4, !dbg !11408
  %100 = load float, float* %brush_alpha_pressure, align 4, !dbg !11409
  call void @vpaint_paint_poly(%struct.VPaint* %93, %struct.VPaintData* %94, %struct.Mesh* %95, i32 %sub85, float* %arraydecay86, float %99, float %100), !dbg !11410
  br label %if.end87, !dbg !11411

if.end87:                                         ; preds = %if.then82, %land.lhs.true76, %for.body72
  br label %for.inc88, !dbg !11412

for.inc88:                                        ; preds = %if.end87
  %101 = load i32, i32* %index, align 4, !dbg !11413
  %inc89 = add nsw i32 %101, 1, !dbg !11413
  store i32 %inc89, i32* %index, align 4, !dbg !11413
  br label %for.cond69, !dbg !11414, !llvm.loop !11415

for.end90:                                        ; preds = %for.cond69
  %102 = load %struct.ViewContext*, %struct.ViewContext** %vc, align 8, !dbg !11417
  %rv3d91 = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %102, i32 0, i32 5, !dbg !11418
  %103 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d91, align 8, !dbg !11418
  %persmat92 = getelementptr inbounds %struct.RegionView3D, %struct.RegionView3D* %103, i32 0, i32 3, !dbg !11419
  %arraydecay93 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %persmat92, i64 0, i64 0, !dbg !11417
  %arraydecay94 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 0, !dbg !11420
  call void @swap_m4m4([4 x float]* %arraydecay93, [4 x float]* %arraydecay94), !dbg !11421
  %104 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !11422
  %vertexpaint_tool = getelementptr inbounds %struct.Brush, %struct.Brush* %104, i32 0, i32 35, !dbg !11424
  %105 = load i8, i8* %vertexpaint_tool, align 1, !dbg !11424
  %conv95 = zext i8 %105 to i32, !dbg !11422
  %cmp96 = icmp eq i32 %conv95, 4, !dbg !11425
  br i1 %cmp96, label %if.then98, label %if.end103, !dbg !11426

if.then98:                                        ; preds = %for.end90
  call void @llvm.dbg.declare(metadata i32* %do_tessface, metadata !11427, metadata !DIExpression()), !dbg !11429
  %106 = load %struct.VPaintData*, %struct.VPaintData** %vpd, align 8, !dbg !11430
  %use_fast_update = getelementptr inbounds %struct.VPaintData, %struct.VPaintData* %106, i32 0, i32 6, !dbg !11431
  %107 = load i8, i8* %use_fast_update, align 4, !dbg !11431
  %conv99 = zext i8 %107 to i32, !dbg !11430
  store i32 %conv99, i32* %do_tessface, align 4, !dbg !11429
  %108 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !11432
  %109 = load %struct.VPaintData*, %struct.VPaintData** %vpd, align 8, !dbg !11433
  %mlooptag100 = getelementptr inbounds %struct.VPaintData, %struct.VPaintData* %109, i32 0, i32 9, !dbg !11434
  %110 = load i8*, i8** %mlooptag100, align 8, !dbg !11434
  %111 = load %struct.VPaintData*, %struct.VPaintData** %vpd, align 8, !dbg !11435
  %mfacetag101 = getelementptr inbounds %struct.VPaintData, %struct.VPaintData* %111, i32 0, i32 10, !dbg !11436
  %112 = load i8*, i8** %mfacetag101, align 8, !dbg !11436
  %113 = load i32, i32* %do_tessface, align 4, !dbg !11437
  %conv102 = trunc i32 %113 to i8, !dbg !11437
  call void @do_shared_vertexcol(%struct.Mesh* %108, i8* %110, i8* %112, i8 zeroext %conv102), !dbg !11438
  br label %if.end103, !dbg !11439

if.end103:                                        ; preds = %if.then98, %for.end90
  %114 = load %struct.ViewContext*, %struct.ViewContext** %vc, align 8, !dbg !11440
  %ar104 = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %114, i32 0, i32 3, !dbg !11441
  %115 = load %struct.ARegion*, %struct.ARegion** %ar104, align 8, !dbg !11441
  call void @ED_region_tag_redraw(%struct.ARegion* %115), !dbg !11442
  %116 = load %struct.VPaintData*, %struct.VPaintData** %vpd, align 8, !dbg !11443
  %use_fast_update105 = getelementptr inbounds %struct.VPaintData, %struct.VPaintData* %116, i32 0, i32 6, !dbg !11445
  %117 = load i8, i8* %use_fast_update105, align 4, !dbg !11445
  %conv106 = zext i8 %117 to i32, !dbg !11443
  %cmp107 = icmp eq i32 %conv106, 0, !dbg !11446
  br i1 %cmp107, label %if.then109, label %if.else, !dbg !11447

if.then109:                                       ; preds = %if.end103
  %118 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !11448
  %data110 = getelementptr inbounds %struct.Object, %struct.Object* %118, i32 0, i32 19, !dbg !11450
  %119 = load i8*, i8** %data110, align 8, !dbg !11450
  %120 = bitcast i8* %119 to %struct.ID*, !dbg !11448
  call void @DAG_id_tag_update(%struct.ID* %120, i16 signext 0), !dbg !11451
  br label %if.end116, !dbg !11452

if.else:                                          ; preds = %if.end103
  %121 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !11453
  %derivedFinal = getelementptr inbounds %struct.Object, %struct.Object* %121, i32 0, i32 120, !dbg !11455
  %122 = load %struct.DerivedMesh*, %struct.DerivedMesh** %derivedFinal, align 8, !dbg !11455
  %call111 = call zeroext i8 @GPU_buffer_legacy(%struct.DerivedMesh* %122), !dbg !11456
  %tobool112 = icmp ne i8 %call111, 0, !dbg !11456
  br i1 %tobool112, label %if.end115, label %if.then113, !dbg !11457

if.then113:                                       ; preds = %if.else
  %123 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !11458
  %derivedFinal114 = getelementptr inbounds %struct.Object, %struct.Object* %123, i32 0, i32 120, !dbg !11460
  %124 = load %struct.DerivedMesh*, %struct.DerivedMesh** %derivedFinal114, align 8, !dbg !11460
  %dirty = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %124, i32 0, i32 16, !dbg !11461
  %125 = load i32, i32* %dirty, align 8, !dbg !11462
  %or = or i32 %125, 2, !dbg !11462
  store i32 %or, i32* %dirty, align 8, !dbg !11462
  br label %if.end115, !dbg !11463

if.end115:                                        ; preds = %if.then113, %if.else
  br label %if.end116

if.end116:                                        ; preds = %if.end115, %if.then109
  ret void, !dbg !11464
}

; Function Attrs: noinline nounwind uwtable
define internal void @vpaint_stroke_done(%struct.bContext* %C, %struct.PaintStroke* %stroke) #0 !dbg !11465 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %stroke.addr = alloca %struct.PaintStroke*, align 8
  %ts = alloca %struct.ToolSettings*, align 8
  %vpd = alloca %struct.VPaintData*, align 8
  %vc = alloca %struct.ViewContext*, align 8
  %ob = alloca %struct.Object*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !11466, metadata !DIExpression()), !dbg !11467
  store %struct.PaintStroke* %stroke, %struct.PaintStroke** %stroke.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PaintStroke** %stroke.addr, metadata !11468, metadata !DIExpression()), !dbg !11469
  call void @llvm.dbg.declare(metadata %struct.ToolSettings** %ts, metadata !11470, metadata !DIExpression()), !dbg !11471
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !11472
  %call = call %struct.ToolSettings* @CTX_data_tool_settings(%struct.bContext* %0), !dbg !11473
  store %struct.ToolSettings* %call, %struct.ToolSettings** %ts, align 8, !dbg !11471
  call void @llvm.dbg.declare(metadata %struct.VPaintData** %vpd, metadata !11474, metadata !DIExpression()), !dbg !11475
  %1 = load %struct.PaintStroke*, %struct.PaintStroke** %stroke.addr, align 8, !dbg !11476
  %call1 = call i8* @paint_stroke_mode_data(%struct.PaintStroke* %1), !dbg !11477
  %2 = bitcast i8* %call1 to %struct.VPaintData*, !dbg !11477
  store %struct.VPaintData* %2, %struct.VPaintData** %vpd, align 8, !dbg !11475
  call void @llvm.dbg.declare(metadata %struct.ViewContext** %vc, metadata !11478, metadata !DIExpression()), !dbg !11479
  %3 = load %struct.VPaintData*, %struct.VPaintData** %vpd, align 8, !dbg !11480
  %vc2 = getelementptr inbounds %struct.VPaintData, %struct.VPaintData* %3, i32 0, i32 0, !dbg !11481
  store %struct.ViewContext* %vc2, %struct.ViewContext** %vc, align 8, !dbg !11479
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !11482, metadata !DIExpression()), !dbg !11483
  %4 = load %struct.ViewContext*, %struct.ViewContext** %vc, align 8, !dbg !11484
  %obact = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %4, i32 0, i32 1, !dbg !11485
  %5 = load %struct.Object*, %struct.Object** %obact, align 8, !dbg !11485
  store %struct.Object* %5, %struct.Object** %ob, align 8, !dbg !11483
  %6 = load %struct.VPaintData*, %struct.VPaintData** %vpd, align 8, !dbg !11486
  %vp_handle = getelementptr inbounds %struct.VPaintData, %struct.VPaintData* %6, i32 0, i32 3, !dbg !11487
  %7 = load %struct.VertProjHandle*, %struct.VertProjHandle** %vp_handle, align 8, !dbg !11487
  call void @ED_vpaint_proj_handle_free(%struct.VertProjHandle* %7), !dbg !11488
  %8 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !11489
  %9 = load %struct.VPaintData*, %struct.VPaintData** %vpd, align 8, !dbg !11490
  %indexar = getelementptr inbounds %struct.VPaintData, %struct.VPaintData* %9, i32 0, i32 2, !dbg !11491
  %10 = load i32*, i32** %indexar, align 8, !dbg !11491
  %11 = bitcast i32* %10 to i8*, !dbg !11490
  call void %8(i8* %11), !dbg !11489
  %12 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !11492
  %vpaint = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %12, i32 0, i32 0, !dbg !11493
  %13 = load %struct.VPaint*, %struct.VPaint** %vpaint, align 8, !dbg !11493
  call void @copy_vpaint_prev(%struct.VPaint* %13, i32* null, i32 0), !dbg !11494
  %14 = load %struct.VPaintData*, %struct.VPaintData** %vpd, align 8, !dbg !11495
  %polyfacemap = getelementptr inbounds %struct.VPaintData, %struct.VPaintData* %14, i32 0, i32 7, !dbg !11497
  %15 = load %struct.MeshElemMap*, %struct.MeshElemMap** %polyfacemap, align 8, !dbg !11497
  %tobool = icmp ne %struct.MeshElemMap* %15, null, !dbg !11495
  br i1 %tobool, label %if.then, label %if.end, !dbg !11498

if.then:                                          ; preds = %entry
  %16 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !11499
  %17 = load %struct.VPaintData*, %struct.VPaintData** %vpd, align 8, !dbg !11501
  %polyfacemap3 = getelementptr inbounds %struct.VPaintData, %struct.VPaintData* %17, i32 0, i32 7, !dbg !11502
  %18 = load %struct.MeshElemMap*, %struct.MeshElemMap** %polyfacemap3, align 8, !dbg !11502
  %19 = bitcast %struct.MeshElemMap* %18 to i8*, !dbg !11501
  call void %16(i8* %19), !dbg !11499
  br label %if.end, !dbg !11503

if.end:                                           ; preds = %if.then, %entry
  %20 = load %struct.VPaintData*, %struct.VPaintData** %vpd, align 8, !dbg !11504
  %polyfacemap_mem = getelementptr inbounds %struct.VPaintData, %struct.VPaintData* %20, i32 0, i32 8, !dbg !11506
  %21 = load i8*, i8** %polyfacemap_mem, align 8, !dbg !11506
  %tobool4 = icmp ne i8* %21, null, !dbg !11504
  br i1 %tobool4, label %if.then5, label %if.end7, !dbg !11507

if.then5:                                         ; preds = %if.end
  %22 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !11508
  %23 = load %struct.VPaintData*, %struct.VPaintData** %vpd, align 8, !dbg !11510
  %polyfacemap_mem6 = getelementptr inbounds %struct.VPaintData, %struct.VPaintData* %23, i32 0, i32 8, !dbg !11511
  %24 = load i8*, i8** %polyfacemap_mem6, align 8, !dbg !11511
  call void %22(i8* %24), !dbg !11508
  br label %if.end7, !dbg !11512

if.end7:                                          ; preds = %if.then5, %if.end
  %25 = load %struct.VPaintData*, %struct.VPaintData** %vpd, align 8, !dbg !11513
  %mlooptag = getelementptr inbounds %struct.VPaintData, %struct.VPaintData* %25, i32 0, i32 9, !dbg !11515
  %26 = load i8*, i8** %mlooptag, align 8, !dbg !11515
  %tobool8 = icmp ne i8* %26, null, !dbg !11513
  br i1 %tobool8, label %if.then9, label %if.end11, !dbg !11516

if.then9:                                         ; preds = %if.end7
  %27 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !11517
  %28 = load %struct.VPaintData*, %struct.VPaintData** %vpd, align 8, !dbg !11518
  %mlooptag10 = getelementptr inbounds %struct.VPaintData, %struct.VPaintData* %28, i32 0, i32 9, !dbg !11519
  %29 = load i8*, i8** %mlooptag10, align 8, !dbg !11519
  call void %27(i8* %29), !dbg !11517
  br label %if.end11, !dbg !11517

if.end11:                                         ; preds = %if.then9, %if.end7
  %30 = load %struct.VPaintData*, %struct.VPaintData** %vpd, align 8, !dbg !11520
  %mfacetag = getelementptr inbounds %struct.VPaintData, %struct.VPaintData* %30, i32 0, i32 10, !dbg !11522
  %31 = load i8*, i8** %mfacetag, align 8, !dbg !11522
  %tobool12 = icmp ne i8* %31, null, !dbg !11520
  br i1 %tobool12, label %if.then13, label %if.end15, !dbg !11523

if.then13:                                        ; preds = %if.end11
  %32 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !11524
  %33 = load %struct.VPaintData*, %struct.VPaintData** %vpd, align 8, !dbg !11525
  %mfacetag14 = getelementptr inbounds %struct.VPaintData, %struct.VPaintData* %33, i32 0, i32 10, !dbg !11526
  %34 = load i8*, i8** %mfacetag14, align 8, !dbg !11526
  call void %32(i8* %34), !dbg !11524
  br label %if.end15, !dbg !11524

if.end15:                                         ; preds = %if.then13, %if.end11
  %35 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !11527
  %36 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !11528
  %37 = bitcast %struct.Object* %36 to i8*, !dbg !11528
  call void @WM_event_add_notifier(%struct.bContext* %35, i32 85393408, i8* %37), !dbg !11529
  %38 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !11530
  %39 = load %struct.VPaintData*, %struct.VPaintData** %vpd, align 8, !dbg !11531
  %40 = bitcast %struct.VPaintData* %39 to i8*, !dbg !11531
  call void %38(i8* %40), !dbg !11530
  ret void, !dbg !11532
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @vertex_paint_use_fast_update_check(%struct.Object* %ob) #0 !dbg !11533 {
entry:
  %retval = alloca i8, align 1
  %ob.addr = alloca %struct.Object*, align 8
  %dm = alloca %struct.DerivedMesh*, align 8
  %me = alloca %struct.Mesh*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !11534, metadata !DIExpression()), !dbg !11535
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm, metadata !11536, metadata !DIExpression()), !dbg !11537
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11538
  %derivedFinal = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 120, !dbg !11539
  %1 = load %struct.DerivedMesh*, %struct.DerivedMesh** %derivedFinal, align 8, !dbg !11539
  store %struct.DerivedMesh* %1, %struct.DerivedMesh** %dm, align 8, !dbg !11537
  %2 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !11540
  %tobool = icmp ne %struct.DerivedMesh* %2, null, !dbg !11540
  br i1 %tobool, label %if.then, label %if.end7, !dbg !11542

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me, metadata !11543, metadata !DIExpression()), !dbg !11545
  %3 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11546
  %call = call %struct.Mesh* @BKE_mesh_from_object(%struct.Object* %3), !dbg !11547
  store %struct.Mesh* %call, %struct.Mesh** %me, align 8, !dbg !11545
  %4 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !11548
  %tobool1 = icmp ne %struct.Mesh* %4, null, !dbg !11548
  br i1 %tobool1, label %land.lhs.true, label %if.end, !dbg !11550

land.lhs.true:                                    ; preds = %if.then
  %5 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !11551
  %mcol = getelementptr inbounds %struct.Mesh, %struct.Mesh* %5, i32 0, i32 18, !dbg !11552
  %6 = load %struct.MCol*, %struct.MCol** %mcol, align 8, !dbg !11552
  %tobool2 = icmp ne %struct.MCol* %6, null, !dbg !11551
  br i1 %tobool2, label %if.then3, label %if.end, !dbg !11553

if.then3:                                         ; preds = %land.lhs.true
  %7 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !11554
  %mcol4 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %7, i32 0, i32 18, !dbg !11556
  %8 = load %struct.MCol*, %struct.MCol** %mcol4, align 8, !dbg !11556
  %9 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !11557
  %faceData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %9, i32 0, i32 2, !dbg !11558
  %call5 = call i8* @CustomData_get_layer(%struct.CustomData* %faceData, i32 6), !dbg !11559
  %10 = bitcast i8* %call5 to %struct.MCol*, !dbg !11559
  %cmp = icmp eq %struct.MCol* %8, %10, !dbg !11560
  %conv = zext i1 %cmp to i32, !dbg !11560
  %conv6 = trunc i32 %conv to i8, !dbg !11561
  store i8 %conv6, i8* %retval, align 1, !dbg !11562
  br label %return, !dbg !11562

if.end:                                           ; preds = %land.lhs.true, %if.then
  br label %if.end7, !dbg !11563

if.end7:                                          ; preds = %if.end, %entry
  store i8 0, i8* %retval, align 1, !dbg !11564
  br label %return, !dbg !11564

return:                                           ; preds = %if.end7, %if.then3
  %11 = load i8, i8* %retval, align 1, !dbg !11565
  ret i8 %11, !dbg !11565
}

; Function Attrs: noinline nounwind uwtable
define internal void @vpaint_build_poly_facemap(%struct.VPaintData* %vd, %struct.Mesh* %me) #0 !dbg !11566 {
entry:
  %vd.addr = alloca %struct.VPaintData*, align 8
  %me.addr = alloca %struct.Mesh*, align 8
  %tessface_origindex = alloca i32*, align 8
  store %struct.VPaintData* %vd, %struct.VPaintData** %vd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VPaintData** %vd.addr, metadata !11569, metadata !DIExpression()), !dbg !11570
  store %struct.Mesh* %me, %struct.Mesh** %me.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me.addr, metadata !11571, metadata !DIExpression()), !dbg !11572
  call void @llvm.dbg.declare(metadata i32** %tessface_origindex, metadata !11573, metadata !DIExpression()), !dbg !11575
  %0 = load %struct.VPaintData*, %struct.VPaintData** %vd.addr, align 8, !dbg !11576
  %polyfacemap = getelementptr inbounds %struct.VPaintData, %struct.VPaintData* %0, i32 0, i32 7, !dbg !11577
  store %struct.MeshElemMap* null, %struct.MeshElemMap** %polyfacemap, align 8, !dbg !11578
  %1 = load %struct.VPaintData*, %struct.VPaintData** %vd.addr, align 8, !dbg !11579
  %polyfacemap_mem = getelementptr inbounds %struct.VPaintData, %struct.VPaintData* %1, i32 0, i32 8, !dbg !11580
  store i8* null, i8** %polyfacemap_mem, align 8, !dbg !11581
  %2 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !11582
  %fdata = getelementptr inbounds %struct.Mesh, %struct.Mesh* %2, i32 0, i32 23, !dbg !11583
  %call = call i8* @CustomData_get_layer(%struct.CustomData* %fdata, i32 7), !dbg !11584
  %3 = bitcast i8* %call to i32*, !dbg !11584
  store i32* %3, i32** %tessface_origindex, align 8, !dbg !11585
  %4 = load i32*, i32** %tessface_origindex, align 8, !dbg !11586
  %tobool = icmp ne i32* %4, null, !dbg !11586
  br i1 %tobool, label %if.end, label %if.then, !dbg !11588

if.then:                                          ; preds = %entry
  br label %return, !dbg !11589

if.end:                                           ; preds = %entry
  %5 = load %struct.VPaintData*, %struct.VPaintData** %vd.addr, align 8, !dbg !11590
  %polyfacemap1 = getelementptr inbounds %struct.VPaintData, %struct.VPaintData* %5, i32 0, i32 7, !dbg !11591
  %6 = load %struct.VPaintData*, %struct.VPaintData** %vd.addr, align 8, !dbg !11592
  %polyfacemap_mem2 = getelementptr inbounds %struct.VPaintData, %struct.VPaintData* %6, i32 0, i32 8, !dbg !11593
  %7 = bitcast i8** %polyfacemap_mem2 to i32**, !dbg !11594
  %8 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !11595
  %totpoly = getelementptr inbounds %struct.Mesh, %struct.Mesh* %8, i32 0, i32 30, !dbg !11596
  %9 = load i32, i32* %totpoly, align 8, !dbg !11596
  %10 = load i32*, i32** %tessface_origindex, align 8, !dbg !11597
  %11 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !11598
  %totface = getelementptr inbounds %struct.Mesh, %struct.Mesh* %11, i32 0, i32 28, !dbg !11599
  %12 = load i32, i32* %totface, align 8, !dbg !11599
  call void @BKE_mesh_origindex_map_create(%struct.MeshElemMap** %polyfacemap1, i32** %7, i32 %9, i32* %10, i32 %12), !dbg !11600
  br label %return, !dbg !11601

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !11601
}

; Function Attrs: noinline nounwind uwtable
define internal void @copy_vpaint_prev(%struct.VPaint* %vp, i32* %lcol, i32 %tot) #0 !dbg !11602 {
entry:
  %vp.addr = alloca %struct.VPaint*, align 8
  %lcol.addr = alloca i32*, align 8
  %tot.addr = alloca i32, align 4
  store %struct.VPaint* %vp, %struct.VPaint** %vp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VPaint** %vp.addr, metadata !11605, metadata !DIExpression()), !dbg !11606
  store i32* %lcol, i32** %lcol.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %lcol.addr, metadata !11607, metadata !DIExpression()), !dbg !11608
  store i32 %tot, i32* %tot.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tot.addr, metadata !11609, metadata !DIExpression()), !dbg !11610
  %0 = load %struct.VPaint*, %struct.VPaint** %vp.addr, align 8, !dbg !11611
  call void @free_vpaint_prev(%struct.VPaint* %0), !dbg !11612
  %1 = load i32, i32* %tot.addr, align 4, !dbg !11613
  %2 = load %struct.VPaint*, %struct.VPaint** %vp.addr, align 8, !dbg !11614
  %tot1 = getelementptr inbounds %struct.VPaint, %struct.VPaint* %2, i32 0, i32 3, !dbg !11615
  store i32 %1, i32* %tot1, align 4, !dbg !11616
  %3 = load i32*, i32** %lcol.addr, align 8, !dbg !11617
  %cmp = icmp eq i32* %3, null, !dbg !11619
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !11620

lor.lhs.false:                                    ; preds = %entry
  %4 = load i32, i32* %tot.addr, align 4, !dbg !11621
  %cmp2 = icmp eq i32 %4, 0, !dbg !11622
  br i1 %cmp2, label %if.then, label %if.end, !dbg !11623

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %return, !dbg !11624

if.end:                                           ; preds = %lor.lhs.false
  %5 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !11625
  %6 = load i32, i32* %tot.addr, align 4, !dbg !11626
  %conv = sext i32 %6 to i64, !dbg !11626
  %mul = mul i64 4, %conv, !dbg !11627
  %call = call i8* %5(i64 %mul, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.61, i64 0, i64 0)), !dbg !11625
  %7 = bitcast i8* %call to i32*, !dbg !11625
  %8 = load %struct.VPaint*, %struct.VPaint** %vp.addr, align 8, !dbg !11628
  %vpaint_prev = getelementptr inbounds %struct.VPaint, %struct.VPaint* %8, i32 0, i32 4, !dbg !11629
  store i32* %7, i32** %vpaint_prev, align 8, !dbg !11630
  %9 = load %struct.VPaint*, %struct.VPaint** %vp.addr, align 8, !dbg !11631
  %vpaint_prev3 = getelementptr inbounds %struct.VPaint, %struct.VPaint* %9, i32 0, i32 4, !dbg !11632
  %10 = load i32*, i32** %vpaint_prev3, align 8, !dbg !11632
  %11 = bitcast i32* %10 to i8*, !dbg !11633
  %12 = load i32*, i32** %lcol.addr, align 8, !dbg !11634
  %13 = bitcast i32* %12 to i8*, !dbg !11633
  %14 = load i32, i32* %tot.addr, align 4, !dbg !11635
  %conv4 = sext i32 %14 to i64, !dbg !11635
  %mul5 = mul i64 4, %conv4, !dbg !11636
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %11, i8* align 4 %13, i64 %mul5, i1 false), !dbg !11633
  br label %return, !dbg !11637

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !11637
}

declare dso_local void @BKE_mesh_origindex_map_create(%struct.MeshElemMap**, i32**, i32, i32*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @free_vpaint_prev(%struct.VPaint* %vp) #0 !dbg !11638 {
entry:
  %vp.addr = alloca %struct.VPaint*, align 8
  store %struct.VPaint* %vp, %struct.VPaint** %vp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VPaint** %vp.addr, metadata !11639, metadata !DIExpression()), !dbg !11640
  %0 = load %struct.VPaint*, %struct.VPaint** %vp.addr, align 8, !dbg !11641
  %vpaint_prev = getelementptr inbounds %struct.VPaint, %struct.VPaint* %0, i32 0, i32 4, !dbg !11643
  %1 = load i32*, i32** %vpaint_prev, align 8, !dbg !11643
  %tobool = icmp ne i32* %1, null, !dbg !11641
  br i1 %tobool, label %if.then, label %if.end, !dbg !11644

if.then:                                          ; preds = %entry
  %2 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !11645
  %3 = load %struct.VPaint*, %struct.VPaint** %vp.addr, align 8, !dbg !11647
  %vpaint_prev1 = getelementptr inbounds %struct.VPaint, %struct.VPaint* %3, i32 0, i32 4, !dbg !11648
  %4 = load i32*, i32** %vpaint_prev1, align 8, !dbg !11648
  %5 = bitcast i32* %4 to i8*, !dbg !11647
  call void %2(i8* %5), !dbg !11645
  %6 = load %struct.VPaint*, %struct.VPaint** %vp.addr, align 8, !dbg !11649
  %vpaint_prev2 = getelementptr inbounds %struct.VPaint, %struct.VPaint* %6, i32 0, i32 4, !dbg !11650
  store i32* null, i32** %vpaint_prev2, align 8, !dbg !11651
  %7 = load %struct.VPaint*, %struct.VPaint** %vp.addr, align 8, !dbg !11652
  %tot = getelementptr inbounds %struct.VPaint, %struct.VPaint* %7, i32 0, i32 3, !dbg !11653
  store i32 0, i32* %tot, align 4, !dbg !11654
  br label %if.end, !dbg !11655

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !11656
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

; Function Attrs: noinline nounwind uwtable
define internal void @vpaint_paint_poly(%struct.VPaint* %vp, %struct.VPaintData* %vpd, %struct.Mesh* %me, i32 %index, float* %mval, float %brush_size_pressure, float %brush_alpha_pressure) #0 !dbg !11657 {
entry:
  %vp.addr = alloca %struct.VPaint*, align 8
  %vpd.addr = alloca %struct.VPaintData*, align 8
  %me.addr = alloca %struct.Mesh*, align 8
  %index.addr = alloca i32, align 4
  %mval.addr = alloca float*, align 8
  %brush_size_pressure.addr = alloca float, align 4
  %brush_alpha_pressure.addr = alloca float, align 4
  %vc = alloca %struct.ViewContext*, align 8
  %brush = alloca %struct.Brush*, align 8
  %mpoly = alloca %struct.MPoly*, align 8
  %mf = alloca %struct.MFace*, align 8
  %mc = alloca %struct.MCol*, align 8
  %ml = alloca %struct.MLoop*, align 8
  %mlc = alloca %struct.MLoopCol*, align 8
  %lcol = alloca i32*, align 8
  %lcolorig = alloca i32*, align 8
  %mlooptag = alloca i8*, align 8
  %mftag = alloca i8*, align 8
  %alpha = alloca float, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %totloop = alloca i32, align 4
  %brush_alpha_pressure_i = alloca i32, align 4
  %blend = alloca [4 x i32], align 16
  %tcol = alloca i32, align 4
  %col = alloca i8*, align 8
  %rgba = alloca [4 x float], align 16
  %paintcol64 = alloca i32, align 4
  %rgba_br = alloca [3 x float], align 4
  %alpha_i = alloca i32, align 4
  %map = alloca %struct.MeshElemMap*, align 8
  %index_tessface = alloca i32, align 4
  %fidx = alloca i32, align 4
  %mloopcol__tmp = alloca %struct.MLoopCol*, align 8
  %mcol__tmp = alloca %struct.MCol*, align 8
  store %struct.VPaint* %vp, %struct.VPaint** %vp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VPaint** %vp.addr, metadata !11662, metadata !DIExpression()), !dbg !11663
  store %struct.VPaintData* %vpd, %struct.VPaintData** %vpd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VPaintData** %vpd.addr, metadata !11664, metadata !DIExpression()), !dbg !11665
  store %struct.Mesh* %me, %struct.Mesh** %me.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me.addr, metadata !11666, metadata !DIExpression()), !dbg !11667
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !11668, metadata !DIExpression()), !dbg !11669
  store float* %mval, float** %mval.addr, align 8
  call void @llvm.dbg.declare(metadata float** %mval.addr, metadata !11670, metadata !DIExpression()), !dbg !11671
  store float %brush_size_pressure, float* %brush_size_pressure.addr, align 4
  call void @llvm.dbg.declare(metadata float* %brush_size_pressure.addr, metadata !11672, metadata !DIExpression()), !dbg !11673
  store float %brush_alpha_pressure, float* %brush_alpha_pressure.addr, align 4
  call void @llvm.dbg.declare(metadata float* %brush_alpha_pressure.addr, metadata !11674, metadata !DIExpression()), !dbg !11675
  call void @llvm.dbg.declare(metadata %struct.ViewContext** %vc, metadata !11676, metadata !DIExpression()), !dbg !11677
  %0 = load %struct.VPaintData*, %struct.VPaintData** %vpd.addr, align 8, !dbg !11678
  %vc1 = getelementptr inbounds %struct.VPaintData, %struct.VPaintData* %0, i32 0, i32 0, !dbg !11679
  store %struct.ViewContext* %vc1, %struct.ViewContext** %vc, align 8, !dbg !11677
  call void @llvm.dbg.declare(metadata %struct.Brush** %brush, metadata !11680, metadata !DIExpression()), !dbg !11681
  %1 = load %struct.VPaint*, %struct.VPaint** %vp.addr, align 8, !dbg !11682
  %paint = getelementptr inbounds %struct.VPaint, %struct.VPaint* %1, i32 0, i32 0, !dbg !11683
  %call = call %struct.Brush* @BKE_paint_brush(%struct.Paint* %paint), !dbg !11684
  store %struct.Brush* %call, %struct.Brush** %brush, align 8, !dbg !11681
  call void @llvm.dbg.declare(metadata %struct.MPoly** %mpoly, metadata !11685, metadata !DIExpression()), !dbg !11686
  %2 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !11687
  %mpoly2 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %2, i32 0, i32 7, !dbg !11688
  %3 = load %struct.MPoly*, %struct.MPoly** %mpoly2, align 8, !dbg !11688
  %4 = load i32, i32* %index.addr, align 4, !dbg !11689
  %idxprom = zext i32 %4 to i64, !dbg !11687
  %arrayidx = getelementptr inbounds %struct.MPoly, %struct.MPoly* %3, i64 %idxprom, !dbg !11687
  store %struct.MPoly* %arrayidx, %struct.MPoly** %mpoly, align 8, !dbg !11686
  call void @llvm.dbg.declare(metadata %struct.MFace** %mf, metadata !11690, metadata !DIExpression()), !dbg !11691
  call void @llvm.dbg.declare(metadata %struct.MCol** %mc, metadata !11692, metadata !DIExpression()), !dbg !11695
  call void @llvm.dbg.declare(metadata %struct.MLoop** %ml, metadata !11696, metadata !DIExpression()), !dbg !11697
  call void @llvm.dbg.declare(metadata %struct.MLoopCol** %mlc, metadata !11698, metadata !DIExpression()), !dbg !11699
  call void @llvm.dbg.declare(metadata i32** %lcol, metadata !11700, metadata !DIExpression()), !dbg !11701
  %5 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !11702
  %mloopcol = getelementptr inbounds %struct.Mesh, %struct.Mesh* %5, i32 0, i32 11, !dbg !11703
  %6 = load %struct.MLoopCol*, %struct.MLoopCol** %mloopcol, align 8, !dbg !11703
  %7 = bitcast %struct.MLoopCol* %6 to i32*, !dbg !11704
  %8 = load %struct.MPoly*, %struct.MPoly** %mpoly, align 8, !dbg !11705
  %loopstart = getelementptr inbounds %struct.MPoly, %struct.MPoly* %8, i32 0, i32 0, !dbg !11706
  %9 = load i32, i32* %loopstart, align 4, !dbg !11706
  %idx.ext = sext i32 %9 to i64, !dbg !11707
  %add.ptr = getelementptr inbounds i32, i32* %7, i64 %idx.ext, !dbg !11707
  store i32* %add.ptr, i32** %lcol, align 8, !dbg !11701
  call void @llvm.dbg.declare(metadata i32** %lcolorig, metadata !11708, metadata !DIExpression()), !dbg !11709
  %10 = load %struct.VPaint*, %struct.VPaint** %vp.addr, align 8, !dbg !11710
  %vpaint_prev = getelementptr inbounds %struct.VPaint, %struct.VPaint* %10, i32 0, i32 4, !dbg !11711
  %11 = load i32*, i32** %vpaint_prev, align 8, !dbg !11711
  %12 = load %struct.MPoly*, %struct.MPoly** %mpoly, align 8, !dbg !11712
  %loopstart3 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %12, i32 0, i32 0, !dbg !11713
  %13 = load i32, i32* %loopstart3, align 4, !dbg !11713
  %idx.ext4 = sext i32 %13 to i64, !dbg !11714
  %add.ptr5 = getelementptr inbounds i32, i32* %11, i64 %idx.ext4, !dbg !11714
  store i32* %add.ptr5, i32** %lcolorig, align 8, !dbg !11709
  call void @llvm.dbg.declare(metadata i8** %mlooptag, metadata !11715, metadata !DIExpression()), !dbg !11716
  %14 = load %struct.VPaintData*, %struct.VPaintData** %vpd.addr, align 8, !dbg !11717
  %mlooptag6 = getelementptr inbounds %struct.VPaintData, %struct.VPaintData* %14, i32 0, i32 9, !dbg !11718
  %15 = load i8*, i8** %mlooptag6, align 8, !dbg !11718
  %tobool = icmp ne i8* %15, null, !dbg !11719
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !11719

cond.true:                                        ; preds = %entry
  %16 = load %struct.VPaintData*, %struct.VPaintData** %vpd.addr, align 8, !dbg !11720
  %mlooptag7 = getelementptr inbounds %struct.VPaintData, %struct.VPaintData* %16, i32 0, i32 9, !dbg !11721
  %17 = load i8*, i8** %mlooptag7, align 8, !dbg !11721
  %18 = load %struct.MPoly*, %struct.MPoly** %mpoly, align 8, !dbg !11722
  %loopstart8 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %18, i32 0, i32 0, !dbg !11723
  %19 = load i32, i32* %loopstart8, align 4, !dbg !11723
  %idx.ext9 = sext i32 %19 to i64, !dbg !11724
  %add.ptr10 = getelementptr inbounds i8, i8* %17, i64 %idx.ext9, !dbg !11724
  br label %cond.end, !dbg !11719

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !11719

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %add.ptr10, %cond.true ], [ null, %cond.false ], !dbg !11719
  store i8* %cond, i8** %mlooptag, align 8, !dbg !11716
  call void @llvm.dbg.declare(metadata i8** %mftag, metadata !11725, metadata !DIExpression()), !dbg !11726
  call void @llvm.dbg.declare(metadata float* %alpha, metadata !11727, metadata !DIExpression()), !dbg !11728
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11729, metadata !DIExpression()), !dbg !11730
  call void @llvm.dbg.declare(metadata i32* %j, metadata !11731, metadata !DIExpression()), !dbg !11732
  call void @llvm.dbg.declare(metadata i32* %totloop, metadata !11733, metadata !DIExpression()), !dbg !11734
  %20 = load %struct.MPoly*, %struct.MPoly** %mpoly, align 8, !dbg !11735
  %totloop11 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %20, i32 0, i32 1, !dbg !11736
  %21 = load i32, i32* %totloop11, align 4, !dbg !11736
  store i32 %21, i32* %totloop, align 4, !dbg !11734
  call void @llvm.dbg.declare(metadata i32* %brush_alpha_pressure_i, metadata !11737, metadata !DIExpression()), !dbg !11738
  %22 = load float, float* %brush_alpha_pressure.addr, align 4, !dbg !11739
  %mul = fmul float %22, 2.550000e+02, !dbg !11740
  %conv = fptosi float %mul to i32, !dbg !11741
  store i32 %conv, i32* %brush_alpha_pressure_i, align 4, !dbg !11738
  %23 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !11742
  %vertexpaint_tool = getelementptr inbounds %struct.Brush, %struct.Brush* %23, i32 0, i32 35, !dbg !11744
  %24 = load i8, i8* %vertexpaint_tool, align 1, !dbg !11744
  %conv12 = zext i8 %24 to i32, !dbg !11742
  %cmp = icmp eq i32 %conv12, 4, !dbg !11745
  br i1 %cmp, label %if.then, label %if.end, !dbg !11746

if.then:                                          ; preds = %cond.end
  call void @llvm.dbg.declare(metadata [4 x i32]* %blend, metadata !11747, metadata !DIExpression()), !dbg !11749
  %25 = bitcast [4 x i32]* %blend to i8*, !dbg !11749
  call void @llvm.memset.p0i8.i64(i8* align 16 %25, i8 0, i64 16, i1 false), !dbg !11749
  call void @llvm.dbg.declare(metadata i32* %tcol, metadata !11750, metadata !DIExpression()), !dbg !11751
  call void @llvm.dbg.declare(metadata i8** %col, metadata !11752, metadata !DIExpression()), !dbg !11753
  store i32 0, i32* %j, align 4, !dbg !11754
  br label %for.cond, !dbg !11756

for.cond:                                         ; preds = %for.inc, %if.then
  %26 = load i32, i32* %j, align 4, !dbg !11757
  %27 = load i32, i32* %totloop, align 4, !dbg !11759
  %cmp14 = icmp slt i32 %26, %27, !dbg !11760
  br i1 %cmp14, label %for.body, label %for.end, !dbg !11761

for.body:                                         ; preds = %for.cond
  %28 = load i32*, i32** %lcol, align 8, !dbg !11762
  %29 = load i32, i32* %j, align 4, !dbg !11764
  %idx.ext16 = sext i32 %29 to i64, !dbg !11765
  %add.ptr17 = getelementptr inbounds i32, i32* %28, i64 %idx.ext16, !dbg !11765
  %30 = bitcast i32* %add.ptr17 to i8*, !dbg !11766
  store i8* %30, i8** %col, align 8, !dbg !11767
  %31 = load i8*, i8** %col, align 8, !dbg !11768
  %arrayidx18 = getelementptr inbounds i8, i8* %31, i64 0, !dbg !11768
  %32 = load i8, i8* %arrayidx18, align 1, !dbg !11768
  %conv19 = zext i8 %32 to i32, !dbg !11768
  %arrayidx20 = getelementptr inbounds [4 x i32], [4 x i32]* %blend, i64 0, i64 0, !dbg !11769
  %33 = load i32, i32* %arrayidx20, align 16, !dbg !11770
  %add = add i32 %33, %conv19, !dbg !11770
  store i32 %add, i32* %arrayidx20, align 16, !dbg !11770
  %34 = load i8*, i8** %col, align 8, !dbg !11771
  %arrayidx21 = getelementptr inbounds i8, i8* %34, i64 1, !dbg !11771
  %35 = load i8, i8* %arrayidx21, align 1, !dbg !11771
  %conv22 = zext i8 %35 to i32, !dbg !11771
  %arrayidx23 = getelementptr inbounds [4 x i32], [4 x i32]* %blend, i64 0, i64 1, !dbg !11772
  %36 = load i32, i32* %arrayidx23, align 4, !dbg !11773
  %add24 = add i32 %36, %conv22, !dbg !11773
  store i32 %add24, i32* %arrayidx23, align 4, !dbg !11773
  %37 = load i8*, i8** %col, align 8, !dbg !11774
  %arrayidx25 = getelementptr inbounds i8, i8* %37, i64 2, !dbg !11774
  %38 = load i8, i8* %arrayidx25, align 1, !dbg !11774
  %conv26 = zext i8 %38 to i32, !dbg !11774
  %arrayidx27 = getelementptr inbounds [4 x i32], [4 x i32]* %blend, i64 0, i64 2, !dbg !11775
  %39 = load i32, i32* %arrayidx27, align 8, !dbg !11776
  %add28 = add i32 %39, %conv26, !dbg !11776
  store i32 %add28, i32* %arrayidx27, align 8, !dbg !11776
  %40 = load i8*, i8** %col, align 8, !dbg !11777
  %arrayidx29 = getelementptr inbounds i8, i8* %40, i64 3, !dbg !11777
  %41 = load i8, i8* %arrayidx29, align 1, !dbg !11777
  %conv30 = zext i8 %41 to i32, !dbg !11777
  %arrayidx31 = getelementptr inbounds [4 x i32], [4 x i32]* %blend, i64 0, i64 3, !dbg !11778
  %42 = load i32, i32* %arrayidx31, align 4, !dbg !11779
  %add32 = add i32 %42, %conv30, !dbg !11779
  store i32 %add32, i32* %arrayidx31, align 4, !dbg !11779
  br label %for.inc, !dbg !11780

for.inc:                                          ; preds = %for.body
  %43 = load i32, i32* %j, align 4, !dbg !11781
  %inc = add nsw i32 %43, 1, !dbg !11781
  store i32 %inc, i32* %j, align 4, !dbg !11781
  br label %for.cond, !dbg !11782, !llvm.loop !11783

for.end:                                          ; preds = %for.cond
  %arrayidx33 = getelementptr inbounds [4 x i32], [4 x i32]* %blend, i64 0, i64 0, !dbg !11785
  %44 = load i32, i32* %arrayidx33, align 16, !dbg !11785
  %45 = load i32, i32* %totloop, align 4, !dbg !11786
  %call34 = call i32 @divide_round_i(i32 %44, i32 %45), !dbg !11787
  %arrayidx35 = getelementptr inbounds [4 x i32], [4 x i32]* %blend, i64 0, i64 0, !dbg !11788
  store i32 %call34, i32* %arrayidx35, align 16, !dbg !11789
  %arrayidx36 = getelementptr inbounds [4 x i32], [4 x i32]* %blend, i64 0, i64 1, !dbg !11790
  %46 = load i32, i32* %arrayidx36, align 4, !dbg !11790
  %47 = load i32, i32* %totloop, align 4, !dbg !11791
  %call37 = call i32 @divide_round_i(i32 %46, i32 %47), !dbg !11792
  %arrayidx38 = getelementptr inbounds [4 x i32], [4 x i32]* %blend, i64 0, i64 1, !dbg !11793
  store i32 %call37, i32* %arrayidx38, align 4, !dbg !11794
  %arrayidx39 = getelementptr inbounds [4 x i32], [4 x i32]* %blend, i64 0, i64 2, !dbg !11795
  %48 = load i32, i32* %arrayidx39, align 8, !dbg !11795
  %49 = load i32, i32* %totloop, align 4, !dbg !11796
  %call40 = call i32 @divide_round_i(i32 %48, i32 %49), !dbg !11797
  %arrayidx41 = getelementptr inbounds [4 x i32], [4 x i32]* %blend, i64 0, i64 2, !dbg !11798
  store i32 %call40, i32* %arrayidx41, align 8, !dbg !11799
  %arrayidx42 = getelementptr inbounds [4 x i32], [4 x i32]* %blend, i64 0, i64 3, !dbg !11800
  %50 = load i32, i32* %arrayidx42, align 4, !dbg !11800
  %51 = load i32, i32* %totloop, align 4, !dbg !11801
  %call43 = call i32 @divide_round_i(i32 %50, i32 %51), !dbg !11802
  %arrayidx44 = getelementptr inbounds [4 x i32], [4 x i32]* %blend, i64 0, i64 3, !dbg !11803
  store i32 %call43, i32* %arrayidx44, align 4, !dbg !11804
  %52 = bitcast i32* %tcol to i8*, !dbg !11805
  store i8* %52, i8** %col, align 8, !dbg !11806
  %arrayidx45 = getelementptr inbounds [4 x i32], [4 x i32]* %blend, i64 0, i64 0, !dbg !11807
  %53 = load i32, i32* %arrayidx45, align 16, !dbg !11807
  %conv46 = trunc i32 %53 to i8, !dbg !11807
  %54 = load i8*, i8** %col, align 8, !dbg !11808
  %arrayidx47 = getelementptr inbounds i8, i8* %54, i64 0, !dbg !11808
  store i8 %conv46, i8* %arrayidx47, align 1, !dbg !11809
  %arrayidx48 = getelementptr inbounds [4 x i32], [4 x i32]* %blend, i64 0, i64 1, !dbg !11810
  %55 = load i32, i32* %arrayidx48, align 4, !dbg !11810
  %conv49 = trunc i32 %55 to i8, !dbg !11810
  %56 = load i8*, i8** %col, align 8, !dbg !11811
  %arrayidx50 = getelementptr inbounds i8, i8* %56, i64 1, !dbg !11811
  store i8 %conv49, i8* %arrayidx50, align 1, !dbg !11812
  %arrayidx51 = getelementptr inbounds [4 x i32], [4 x i32]* %blend, i64 0, i64 2, !dbg !11813
  %57 = load i32, i32* %arrayidx51, align 8, !dbg !11813
  %conv52 = trunc i32 %57 to i8, !dbg !11813
  %58 = load i8*, i8** %col, align 8, !dbg !11814
  %arrayidx53 = getelementptr inbounds i8, i8* %58, i64 2, !dbg !11814
  store i8 %conv52, i8* %arrayidx53, align 1, !dbg !11815
  %arrayidx54 = getelementptr inbounds [4 x i32], [4 x i32]* %blend, i64 0, i64 3, !dbg !11816
  %59 = load i32, i32* %arrayidx54, align 4, !dbg !11816
  %conv55 = trunc i32 %59 to i8, !dbg !11816
  %60 = load i8*, i8** %col, align 8, !dbg !11817
  %arrayidx56 = getelementptr inbounds i8, i8* %60, i64 3, !dbg !11817
  store i8 %conv55, i8* %arrayidx56, align 1, !dbg !11818
  %61 = load i8*, i8** %col, align 8, !dbg !11819
  %62 = bitcast i8* %61 to i32*, !dbg !11820
  %63 = load i32, i32* %62, align 4, !dbg !11820
  %64 = load %struct.VPaintData*, %struct.VPaintData** %vpd.addr, align 8, !dbg !11821
  %paintcol = getelementptr inbounds %struct.VPaintData, %struct.VPaintData* %64, i32 0, i32 1, !dbg !11822
  store i32 %63, i32* %paintcol, align 8, !dbg !11823
  br label %if.end, !dbg !11824

if.end:                                           ; preds = %for.end, %cond.end
  %65 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !11825
  %mloop = getelementptr inbounds %struct.Mesh, %struct.Mesh* %65, i32 0, i32 9, !dbg !11826
  %66 = load %struct.MLoop*, %struct.MLoop** %mloop, align 8, !dbg !11826
  %67 = load %struct.MPoly*, %struct.MPoly** %mpoly, align 8, !dbg !11827
  %loopstart57 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %67, i32 0, i32 0, !dbg !11828
  %68 = load i32, i32* %loopstart57, align 4, !dbg !11828
  %idx.ext58 = sext i32 %68 to i64, !dbg !11829
  %add.ptr59 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %66, i64 %idx.ext58, !dbg !11829
  store %struct.MLoop* %add.ptr59, %struct.MLoop** %ml, align 8, !dbg !11830
  store i32 0, i32* %i, align 4, !dbg !11831
  br label %for.cond60, !dbg !11833

for.cond60:                                       ; preds = %for.inc96, %if.end
  %69 = load i32, i32* %i, align 4, !dbg !11834
  %70 = load i32, i32* %totloop, align 4, !dbg !11836
  %cmp61 = icmp slt i32 %69, %70, !dbg !11837
  br i1 %cmp61, label %for.body63, label %for.end98, !dbg !11838

for.body63:                                       ; preds = %for.cond60
  call void @llvm.dbg.declare(metadata [4 x float]* %rgba, metadata !11839, metadata !DIExpression()), !dbg !11841
  call void @llvm.dbg.declare(metadata i32* %paintcol64, metadata !11842, metadata !DIExpression()), !dbg !11843
  %71 = load %struct.VPaint*, %struct.VPaint** %vp.addr, align 8, !dbg !11844
  %72 = load %struct.ViewContext*, %struct.ViewContext** %vc, align 8, !dbg !11845
  %73 = load %struct.VPaintData*, %struct.VPaintData** %vpd.addr, align 8, !dbg !11846
  %vpimat = getelementptr inbounds %struct.VPaintData, %struct.VPaintData* %73, i32 0, i32 5, !dbg !11847
  %arraydecay = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vpimat, i64 0, i64 0, !dbg !11846
  %74 = load %struct.VPaintData*, %struct.VPaintData** %vpd.addr, align 8, !dbg !11848
  %vertexcosnos = getelementptr inbounds %struct.VPaintData, %struct.VPaintData* %74, i32 0, i32 4, !dbg !11849
  %75 = load %struct.DMCoNo*, %struct.DMCoNo** %vertexcosnos, align 8, !dbg !11849
  %76 = load %struct.MLoop*, %struct.MLoop** %ml, align 8, !dbg !11850
  %v = getelementptr inbounds %struct.MLoop, %struct.MLoop* %76, i32 0, i32 0, !dbg !11851
  %77 = load i32, i32* %v, align 4, !dbg !11851
  %idxprom65 = zext i32 %77 to i64, !dbg !11848
  %arrayidx66 = getelementptr inbounds %struct.DMCoNo, %struct.DMCoNo* %75, i64 %idxprom65, !dbg !11848
  %78 = load float*, float** %mval.addr, align 8, !dbg !11852
  %79 = load float, float* %brush_size_pressure.addr, align 4, !dbg !11853
  %80 = load float, float* %brush_alpha_pressure.addr, align 4, !dbg !11854
  %arraydecay67 = getelementptr inbounds [4 x float], [4 x float]* %rgba, i64 0, i64 0, !dbg !11855
  %call68 = call float @calc_vp_alpha_col_dl(%struct.VPaint* %71, %struct.ViewContext* %72, [3 x float]* %arraydecay, %struct.DMCoNo* %arrayidx66, float* %78, float %79, float %80, float* %arraydecay67), !dbg !11856
  store float %call68, float* %alpha, align 4, !dbg !11857
  %81 = load %struct.VPaintData*, %struct.VPaintData** %vpd.addr, align 8, !dbg !11858
  %is_texbrush = getelementptr inbounds %struct.VPaintData, %struct.VPaintData* %81, i32 0, i32 11, !dbg !11860
  %82 = load i8, i8* %is_texbrush, align 8, !dbg !11860
  %tobool69 = icmp ne i8 %82, 0, !dbg !11858
  br i1 %tobool69, label %if.then70, label %if.else, !dbg !11861

if.then70:                                        ; preds = %for.body63
  call void @llvm.dbg.declare(metadata [3 x float]* %rgba_br, metadata !11862, metadata !DIExpression()), !dbg !11864
  %arraydecay71 = getelementptr inbounds [3 x float], [3 x float]* %rgba_br, i64 0, i64 0, !dbg !11865
  %83 = load %struct.VPaintData*, %struct.VPaintData** %vpd.addr, align 8, !dbg !11866
  %paintcol72 = getelementptr inbounds %struct.VPaintData, %struct.VPaintData* %83, i32 0, i32 1, !dbg !11867
  %84 = bitcast i32* %paintcol72 to i8*, !dbg !11868
  call void @rgb_uchar_to_float(float* %arraydecay71, i8* %84), !dbg !11869
  %arraydecay73 = getelementptr inbounds [3 x float], [3 x float]* %rgba_br, i64 0, i64 0, !dbg !11870
  %arraydecay74 = getelementptr inbounds [4 x float], [4 x float]* %rgba, i64 0, i64 0, !dbg !11871
  call void @mul_v3_v3(float* %arraydecay73, float* %arraydecay74), !dbg !11872
  %85 = bitcast i32* %paintcol64 to i8*, !dbg !11873
  %arraydecay75 = getelementptr inbounds [3 x float], [3 x float]* %rgba_br, i64 0, i64 0, !dbg !11874
  call void @rgb_float_to_uchar(i8* %85, float* %arraydecay75), !dbg !11875
  br label %if.end77, !dbg !11876

if.else:                                          ; preds = %for.body63
  %86 = load %struct.VPaintData*, %struct.VPaintData** %vpd.addr, align 8, !dbg !11877
  %paintcol76 = getelementptr inbounds %struct.VPaintData, %struct.VPaintData* %86, i32 0, i32 1, !dbg !11878
  %87 = load i32, i32* %paintcol76, align 8, !dbg !11878
  store i32 %87, i32* %paintcol64, align 4, !dbg !11879
  br label %if.end77

if.end77:                                         ; preds = %if.else, %if.then70
  %88 = load float, float* %alpha, align 4, !dbg !11880
  %cmp78 = fcmp ogt float %88, 0.000000e+00, !dbg !11882
  br i1 %cmp78, label %if.then80, label %if.end95, !dbg !11883

if.then80:                                        ; preds = %if.end77
  call void @llvm.dbg.declare(metadata i32* %alpha_i, metadata !11884, metadata !DIExpression()), !dbg !11886
  %89 = load float, float* %alpha, align 4, !dbg !11887
  %mul81 = fmul float %89, 2.550000e+02, !dbg !11888
  %conv82 = fptosi float %mul81 to i32, !dbg !11889
  store i32 %conv82, i32* %alpha_i, align 4, !dbg !11886
  %90 = load %struct.VPaint*, %struct.VPaint** %vp.addr, align 8, !dbg !11890
  %91 = load i32*, i32** %lcol, align 8, !dbg !11891
  %92 = load i32, i32* %i, align 4, !dbg !11892
  %idxprom83 = sext i32 %92 to i64, !dbg !11891
  %arrayidx84 = getelementptr inbounds i32, i32* %91, i64 %idxprom83, !dbg !11891
  %93 = load i32, i32* %arrayidx84, align 4, !dbg !11891
  %94 = load i32*, i32** %lcolorig, align 8, !dbg !11893
  %95 = load i32, i32* %i, align 4, !dbg !11894
  %idxprom85 = sext i32 %95 to i64, !dbg !11893
  %arrayidx86 = getelementptr inbounds i32, i32* %94, i64 %idxprom85, !dbg !11893
  %96 = load i32, i32* %arrayidx86, align 4, !dbg !11893
  %97 = load i32, i32* %paintcol64, align 4, !dbg !11895
  %98 = load i32, i32* %alpha_i, align 4, !dbg !11896
  %99 = load i32, i32* %brush_alpha_pressure_i, align 4, !dbg !11897
  %call87 = call i32 @vpaint_blend(%struct.VPaint* %90, i32 %93, i32 %96, i32 %97, i32 %98, i32 %99), !dbg !11898
  %100 = load i32*, i32** %lcol, align 8, !dbg !11899
  %101 = load i32, i32* %i, align 4, !dbg !11900
  %idxprom88 = sext i32 %101 to i64, !dbg !11899
  %arrayidx89 = getelementptr inbounds i32, i32* %100, i64 %idxprom88, !dbg !11899
  store i32 %call87, i32* %arrayidx89, align 4, !dbg !11901
  %102 = load i8*, i8** %mlooptag, align 8, !dbg !11902
  %tobool90 = icmp ne i8* %102, null, !dbg !11902
  br i1 %tobool90, label %if.then91, label %if.end94, !dbg !11904

if.then91:                                        ; preds = %if.then80
  %103 = load i8*, i8** %mlooptag, align 8, !dbg !11905
  %104 = load i32, i32* %i, align 4, !dbg !11906
  %idxprom92 = sext i32 %104 to i64, !dbg !11905
  %arrayidx93 = getelementptr inbounds i8, i8* %103, i64 %idxprom92, !dbg !11905
  store i8 1, i8* %arrayidx93, align 1, !dbg !11907
  br label %if.end94, !dbg !11905

if.end94:                                         ; preds = %if.then91, %if.then80
  br label %if.end95, !dbg !11908

if.end95:                                         ; preds = %if.end94, %if.end77
  br label %for.inc96, !dbg !11909

for.inc96:                                        ; preds = %if.end95
  %105 = load i32, i32* %i, align 4, !dbg !11910
  %inc97 = add nsw i32 %105, 1, !dbg !11910
  store i32 %inc97, i32* %i, align 4, !dbg !11910
  %106 = load %struct.MLoop*, %struct.MLoop** %ml, align 8, !dbg !11911
  %incdec.ptr = getelementptr inbounds %struct.MLoop, %struct.MLoop* %106, i32 1, !dbg !11911
  store %struct.MLoop* %incdec.ptr, %struct.MLoop** %ml, align 8, !dbg !11911
  br label %for.cond60, !dbg !11912, !llvm.loop !11913

for.end98:                                        ; preds = %for.cond60
  %107 = load %struct.VPaintData*, %struct.VPaintData** %vpd.addr, align 8, !dbg !11915
  %use_fast_update = getelementptr inbounds %struct.VPaintData, %struct.VPaintData* %107, i32 0, i32 6, !dbg !11917
  %108 = load i8, i8* %use_fast_update, align 4, !dbg !11917
  %tobool99 = icmp ne i8 %108, 0, !dbg !11915
  br i1 %tobool99, label %if.then100, label %if.end181, !dbg !11918

if.then100:                                       ; preds = %for.end98
  call void @llvm.dbg.declare(metadata %struct.MeshElemMap** %map, metadata !11919, metadata !DIExpression()), !dbg !11923
  %109 = load %struct.VPaintData*, %struct.VPaintData** %vpd.addr, align 8, !dbg !11924
  %polyfacemap = getelementptr inbounds %struct.VPaintData, %struct.VPaintData* %109, i32 0, i32 7, !dbg !11925
  %110 = load %struct.MeshElemMap*, %struct.MeshElemMap** %polyfacemap, align 8, !dbg !11925
  %111 = load i32, i32* %index.addr, align 4, !dbg !11926
  %idxprom101 = zext i32 %111 to i64, !dbg !11924
  %arrayidx102 = getelementptr inbounds %struct.MeshElemMap, %struct.MeshElemMap* %110, i64 %idxprom101, !dbg !11924
  store %struct.MeshElemMap* %arrayidx102, %struct.MeshElemMap** %map, align 8, !dbg !11923
  store i32 0, i32* %i, align 4, !dbg !11927
  br label %for.cond103, !dbg !11929

for.cond103:                                      ; preds = %for.inc178, %if.then100
  %112 = load i32, i32* %i, align 4, !dbg !11930
  %113 = load %struct.MeshElemMap*, %struct.MeshElemMap** %map, align 8, !dbg !11932
  %count = getelementptr inbounds %struct.MeshElemMap, %struct.MeshElemMap* %113, i32 0, i32 1, !dbg !11933
  %114 = load i32, i32* %count, align 8, !dbg !11933
  %cmp104 = icmp slt i32 %112, %114, !dbg !11934
  br i1 %cmp104, label %for.body106, label %for.end180, !dbg !11935

for.body106:                                      ; preds = %for.cond103
  call void @llvm.dbg.declare(metadata i32* %index_tessface, metadata !11936, metadata !DIExpression()), !dbg !11938
  %115 = load %struct.MeshElemMap*, %struct.MeshElemMap** %map, align 8, !dbg !11939
  %indices = getelementptr inbounds %struct.MeshElemMap, %struct.MeshElemMap* %115, i32 0, i32 0, !dbg !11940
  %116 = load i32*, i32** %indices, align 8, !dbg !11940
  %117 = load i32, i32* %i, align 4, !dbg !11941
  %idxprom107 = sext i32 %117 to i64, !dbg !11939
  %arrayidx108 = getelementptr inbounds i32, i32* %116, i64 %idxprom107, !dbg !11939
  %118 = load i32, i32* %arrayidx108, align 4, !dbg !11939
  store i32 %118, i32* %index_tessface, align 4, !dbg !11938
  %119 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !11942
  %mface = getelementptr inbounds %struct.Mesh, %struct.Mesh* %119, i32 0, i32 12, !dbg !11943
  %120 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !11943
  %121 = load i32, i32* %index_tessface, align 4, !dbg !11944
  %idxprom109 = sext i32 %121 to i64, !dbg !11942
  %arrayidx110 = getelementptr inbounds %struct.MFace, %struct.MFace* %120, i64 %idxprom109, !dbg !11942
  store %struct.MFace* %arrayidx110, %struct.MFace** %mf, align 8, !dbg !11945
  %122 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !11946
  %mcol = getelementptr inbounds %struct.Mesh, %struct.Mesh* %122, i32 0, i32 18, !dbg !11947
  %123 = load %struct.MCol*, %struct.MCol** %mcol, align 8, !dbg !11947
  %124 = load i32, i32* %index_tessface, align 4, !dbg !11948
  %mul111 = mul nsw i32 %124, 4, !dbg !11949
  %idxprom112 = sext i32 %mul111 to i64, !dbg !11946
  %arrayidx113 = getelementptr inbounds %struct.MCol, %struct.MCol* %123, i64 %idxprom112, !dbg !11946
  store %struct.MCol* %arrayidx113, %struct.MCol** %mc, align 8, !dbg !11950
  %125 = load %struct.VPaintData*, %struct.VPaintData** %vpd.addr, align 8, !dbg !11951
  %mfacetag = getelementptr inbounds %struct.VPaintData, %struct.VPaintData* %125, i32 0, i32 10, !dbg !11952
  %126 = load i8*, i8** %mfacetag, align 8, !dbg !11952
  %127 = load i32, i32* %index_tessface, align 4, !dbg !11953
  %mul114 = mul nsw i32 %127, 4, !dbg !11954
  %idxprom115 = sext i32 %mul114 to i64, !dbg !11951
  %arrayidx116 = getelementptr inbounds i8, i8* %126, i64 %idxprom115, !dbg !11951
  store i8* %arrayidx116, i8** %mftag, align 8, !dbg !11955
  %128 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !11956
  %mloop117 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %128, i32 0, i32 9, !dbg !11957
  %129 = load %struct.MLoop*, %struct.MLoop** %mloop117, align 8, !dbg !11957
  %130 = load %struct.MPoly*, %struct.MPoly** %mpoly, align 8, !dbg !11958
  %loopstart118 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %130, i32 0, i32 0, !dbg !11959
  %131 = load i32, i32* %loopstart118, align 4, !dbg !11959
  %idx.ext119 = sext i32 %131 to i64, !dbg !11960
  %add.ptr120 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %129, i64 %idx.ext119, !dbg !11960
  store %struct.MLoop* %add.ptr120, %struct.MLoop** %ml, align 8, !dbg !11961
  %132 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !11962
  %mloopcol121 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %132, i32 0, i32 11, !dbg !11963
  %133 = load %struct.MLoopCol*, %struct.MLoopCol** %mloopcol121, align 8, !dbg !11963
  %134 = load %struct.MPoly*, %struct.MPoly** %mpoly, align 8, !dbg !11964
  %loopstart122 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %134, i32 0, i32 0, !dbg !11965
  %135 = load i32, i32* %loopstart122, align 4, !dbg !11965
  %idx.ext123 = sext i32 %135 to i64, !dbg !11966
  %add.ptr124 = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %133, i64 %idx.ext123, !dbg !11966
  store %struct.MLoopCol* %add.ptr124, %struct.MLoopCol** %mlc, align 8, !dbg !11967
  store i32 0, i32* %j, align 4, !dbg !11968
  br label %for.cond125, !dbg !11970

for.cond125:                                      ; preds = %for.inc173, %for.body106
  %136 = load i32, i32* %j, align 4, !dbg !11971
  %137 = load i32, i32* %totloop, align 4, !dbg !11973
  %cmp126 = icmp slt i32 %136, %137, !dbg !11974
  br i1 %cmp126, label %for.body128, label %for.end177, !dbg !11975

for.body128:                                      ; preds = %for.cond125
  call void @llvm.dbg.declare(metadata i32* %fidx, metadata !11976, metadata !DIExpression()), !dbg !11978
  %138 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !11979
  %v1 = getelementptr inbounds %struct.MFace, %struct.MFace* %138, i32 0, i32 0, !dbg !11979
  %139 = load i32, i32* %v1, align 4, !dbg !11979
  %140 = load %struct.MLoop*, %struct.MLoop** %ml, align 8, !dbg !11979
  %v129 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %140, i32 0, i32 0, !dbg !11979
  %141 = load i32, i32* %v129, align 4, !dbg !11979
  %cmp130 = icmp eq i32 %139, %141, !dbg !11979
  br i1 %cmp130, label %cond.true132, label %cond.false133, !dbg !11979

cond.true132:                                     ; preds = %for.body128
  br label %cond.end154, !dbg !11979

cond.false133:                                    ; preds = %for.body128
  %142 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !11979
  %v2 = getelementptr inbounds %struct.MFace, %struct.MFace* %142, i32 0, i32 1, !dbg !11979
  %143 = load i32, i32* %v2, align 4, !dbg !11979
  %144 = load %struct.MLoop*, %struct.MLoop** %ml, align 8, !dbg !11979
  %v134 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %144, i32 0, i32 0, !dbg !11979
  %145 = load i32, i32* %v134, align 4, !dbg !11979
  %cmp135 = icmp eq i32 %143, %145, !dbg !11979
  br i1 %cmp135, label %cond.true137, label %cond.false138, !dbg !11979

cond.true137:                                     ; preds = %cond.false133
  br label %cond.end152, !dbg !11979

cond.false138:                                    ; preds = %cond.false133
  %146 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !11979
  %v3 = getelementptr inbounds %struct.MFace, %struct.MFace* %146, i32 0, i32 2, !dbg !11979
  %147 = load i32, i32* %v3, align 4, !dbg !11979
  %148 = load %struct.MLoop*, %struct.MLoop** %ml, align 8, !dbg !11979
  %v139 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %148, i32 0, i32 0, !dbg !11979
  %149 = load i32, i32* %v139, align 4, !dbg !11979
  %cmp140 = icmp eq i32 %147, %149, !dbg !11979
  br i1 %cmp140, label %cond.true142, label %cond.false143, !dbg !11979

cond.true142:                                     ; preds = %cond.false138
  br label %cond.end150, !dbg !11979

cond.false143:                                    ; preds = %cond.false138
  %150 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !11979
  %v4 = getelementptr inbounds %struct.MFace, %struct.MFace* %150, i32 0, i32 3, !dbg !11979
  %151 = load i32, i32* %v4, align 4, !dbg !11979
  %tobool144 = icmp ne i32 %151, 0, !dbg !11979
  br i1 %tobool144, label %land.rhs, label %land.end, !dbg !11979

land.rhs:                                         ; preds = %cond.false143
  %152 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !11979
  %v4145 = getelementptr inbounds %struct.MFace, %struct.MFace* %152, i32 0, i32 3, !dbg !11979
  %153 = load i32, i32* %v4145, align 4, !dbg !11979
  %154 = load %struct.MLoop*, %struct.MLoop** %ml, align 8, !dbg !11979
  %v146 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %154, i32 0, i32 0, !dbg !11979
  %155 = load i32, i32* %v146, align 4, !dbg !11979
  %cmp147 = icmp eq i32 %153, %155, !dbg !11979
  br label %land.end

land.end:                                         ; preds = %land.rhs, %cond.false143
  %156 = phi i1 [ false, %cond.false143 ], [ %cmp147, %land.rhs ], !dbg !11980
  %157 = zext i1 %156 to i64, !dbg !11979
  %cond149 = select i1 %156, i32 3, i32 -1, !dbg !11979
  br label %cond.end150, !dbg !11979

cond.end150:                                      ; preds = %land.end, %cond.true142
  %cond151 = phi i32 [ 2, %cond.true142 ], [ %cond149, %land.end ], !dbg !11979
  br label %cond.end152, !dbg !11979

cond.end152:                                      ; preds = %cond.end150, %cond.true137
  %cond153 = phi i32 [ 1, %cond.true137 ], [ %cond151, %cond.end150 ], !dbg !11979
  br label %cond.end154, !dbg !11979

cond.end154:                                      ; preds = %cond.end152, %cond.true132
  %cond155 = phi i32 [ 0, %cond.true132 ], [ %cond153, %cond.end152 ], !dbg !11979
  store i32 %cond155, i32* %fidx, align 4, !dbg !11978
  %158 = load i32, i32* %fidx, align 4, !dbg !11981
  %cmp156 = icmp ne i32 %158, -1, !dbg !11983
  br i1 %cmp156, label %if.then158, label %if.end172, !dbg !11984

if.then158:                                       ; preds = %cond.end154
  call void @llvm.dbg.declare(metadata %struct.MLoopCol** %mloopcol__tmp, metadata !11985, metadata !DIExpression()), !dbg !11990
  %159 = load %struct.MLoopCol*, %struct.MLoopCol** %mlc, align 8, !dbg !11990
  store %struct.MLoopCol* %159, %struct.MLoopCol** %mloopcol__tmp, align 8, !dbg !11990
  call void @llvm.dbg.declare(metadata %struct.MCol** %mcol__tmp, metadata !11991, metadata !DIExpression()), !dbg !11990
  %160 = load %struct.MCol*, %struct.MCol** %mc, align 8, !dbg !11990
  %161 = load i32, i32* %fidx, align 4, !dbg !11990
  %idx.ext159 = sext i32 %161 to i64, !dbg !11990
  %add.ptr160 = getelementptr inbounds %struct.MCol, %struct.MCol* %160, i64 %idx.ext159, !dbg !11990
  store %struct.MCol* %add.ptr160, %struct.MCol** %mcol__tmp, align 8, !dbg !11990
  %162 = load %struct.MLoopCol*, %struct.MLoopCol** %mloopcol__tmp, align 8, !dbg !11990
  %r = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %162, i32 0, i32 0, !dbg !11990
  %163 = load i8, i8* %r, align 1, !dbg !11990
  %164 = load %struct.MCol*, %struct.MCol** %mcol__tmp, align 8, !dbg !11990
  %b = getelementptr inbounds %struct.MCol, %struct.MCol* %164, i32 0, i32 3, !dbg !11990
  store i8 %163, i8* %b, align 1, !dbg !11990
  %165 = load %struct.MLoopCol*, %struct.MLoopCol** %mloopcol__tmp, align 8, !dbg !11990
  %g = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %165, i32 0, i32 1, !dbg !11990
  %166 = load i8, i8* %g, align 1, !dbg !11990
  %167 = load %struct.MCol*, %struct.MCol** %mcol__tmp, align 8, !dbg !11990
  %g161 = getelementptr inbounds %struct.MCol, %struct.MCol* %167, i32 0, i32 2, !dbg !11990
  store i8 %166, i8* %g161, align 1, !dbg !11990
  %168 = load %struct.MLoopCol*, %struct.MLoopCol** %mloopcol__tmp, align 8, !dbg !11990
  %b162 = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %168, i32 0, i32 2, !dbg !11990
  %169 = load i8, i8* %b162, align 1, !dbg !11990
  %170 = load %struct.MCol*, %struct.MCol** %mcol__tmp, align 8, !dbg !11990
  %r163 = getelementptr inbounds %struct.MCol, %struct.MCol* %170, i32 0, i32 1, !dbg !11990
  store i8 %169, i8* %r163, align 1, !dbg !11990
  %171 = load %struct.MLoopCol*, %struct.MLoopCol** %mloopcol__tmp, align 8, !dbg !11990
  %a = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %171, i32 0, i32 3, !dbg !11990
  %172 = load i8, i8* %a, align 1, !dbg !11990
  %173 = load %struct.MCol*, %struct.MCol** %mcol__tmp, align 8, !dbg !11990
  %a164 = getelementptr inbounds %struct.MCol, %struct.MCol* %173, i32 0, i32 0, !dbg !11990
  store i8 %172, i8* %a164, align 1, !dbg !11990
  %174 = load i8*, i8** %mlooptag, align 8, !dbg !11992
  %tobool165 = icmp ne i8* %174, null, !dbg !11992
  br i1 %tobool165, label %if.then166, label %if.end171, !dbg !11994

if.then166:                                       ; preds = %if.then158
  %175 = load i8*, i8** %mlooptag, align 8, !dbg !11995
  %176 = load i32, i32* %j, align 4, !dbg !11997
  %idxprom167 = sext i32 %176 to i64, !dbg !11995
  %arrayidx168 = getelementptr inbounds i8, i8* %175, i64 %idxprom167, !dbg !11995
  %177 = load i8, i8* %arrayidx168, align 1, !dbg !11995
  %178 = load i8*, i8** %mftag, align 8, !dbg !11998
  %179 = load i32, i32* %fidx, align 4, !dbg !11999
  %idxprom169 = sext i32 %179 to i64, !dbg !11998
  %arrayidx170 = getelementptr inbounds i8, i8* %178, i64 %idxprom169, !dbg !11998
  store i8 %177, i8* %arrayidx170, align 1, !dbg !12000
  br label %if.end171, !dbg !12001

if.end171:                                        ; preds = %if.then166, %if.then158
  br label %if.end172, !dbg !12002

if.end172:                                        ; preds = %if.end171, %cond.end154
  br label %for.inc173, !dbg !12003

for.inc173:                                       ; preds = %if.end172
  %180 = load i32, i32* %j, align 4, !dbg !12004
  %inc174 = add nsw i32 %180, 1, !dbg !12004
  store i32 %inc174, i32* %j, align 4, !dbg !12004
  %181 = load %struct.MLoop*, %struct.MLoop** %ml, align 8, !dbg !12005
  %incdec.ptr175 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %181, i32 1, !dbg !12005
  store %struct.MLoop* %incdec.ptr175, %struct.MLoop** %ml, align 8, !dbg !12005
  %182 = load %struct.MLoopCol*, %struct.MLoopCol** %mlc, align 8, !dbg !12006
  %incdec.ptr176 = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %182, i32 1, !dbg !12006
  store %struct.MLoopCol* %incdec.ptr176, %struct.MLoopCol** %mlc, align 8, !dbg !12006
  br label %for.cond125, !dbg !12007, !llvm.loop !12008

for.end177:                                       ; preds = %for.cond125
  br label %for.inc178, !dbg !12010

for.inc178:                                       ; preds = %for.end177
  %183 = load i32, i32* %i, align 4, !dbg !12011
  %inc179 = add nsw i32 %183, 1, !dbg !12011
  store i32 %inc179, i32* %i, align 4, !dbg !12011
  br label %for.cond103, !dbg !12012, !llvm.loop !12013

for.end180:                                       ; preds = %for.cond103
  br label %if.end181, !dbg !12015

if.end181:                                        ; preds = %for.end180, %for.end98
  ret void, !dbg !12016
}

declare dso_local zeroext i8 @GPU_buffer_legacy(%struct.DerivedMesh*) #2

declare dso_local void @rgb_uchar_to_float(float*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @mul_v3_v3(float* %r, float* %a) #0 !dbg !12017 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !12020, metadata !DIExpression()), !dbg !12021
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !12022, metadata !DIExpression()), !dbg !12023
  %0 = load float*, float** %a.addr, align 8, !dbg !12024
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !12024
  %1 = load float, float* %arrayidx, align 4, !dbg !12024
  %2 = load float*, float** %r.addr, align 8, !dbg !12025
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !12025
  %3 = load float, float* %arrayidx1, align 4, !dbg !12026
  %mul = fmul float %3, %1, !dbg !12026
  store float %mul, float* %arrayidx1, align 4, !dbg !12026
  %4 = load float*, float** %a.addr, align 8, !dbg !12027
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !12027
  %5 = load float, float* %arrayidx2, align 4, !dbg !12027
  %6 = load float*, float** %r.addr, align 8, !dbg !12028
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !12028
  %7 = load float, float* %arrayidx3, align 4, !dbg !12029
  %mul4 = fmul float %7, %5, !dbg !12029
  store float %mul4, float* %arrayidx3, align 4, !dbg !12029
  %8 = load float*, float** %a.addr, align 8, !dbg !12030
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !12030
  %9 = load float, float* %arrayidx5, align 4, !dbg !12030
  %10 = load float*, float** %r.addr, align 8, !dbg !12031
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 2, !dbg !12031
  %11 = load float, float* %arrayidx6, align 4, !dbg !12032
  %mul7 = fmul float %11, %9, !dbg !12032
  store float %mul7, float* %arrayidx6, align 4, !dbg !12032
  ret void, !dbg !12033
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @vpaint_blend(%struct.VPaint* %vp, i32 %col, i32 %colorig, i32 %paintcol, i32 %alpha_i, i32 %brush_alpha_value_i) #0 !dbg !12034 {
entry:
  %vp.addr = alloca %struct.VPaint*, align 8
  %col.addr = alloca i32, align 4
  %colorig.addr = alloca i32, align 4
  %paintcol.addr = alloca i32, align 4
  %alpha_i.addr = alloca i32, align 4
  %brush_alpha_value_i.addr = alloca i32, align 4
  %brush = alloca %struct.Brush*, align 8
  %tool = alloca i32, align 4
  %testcol = alloca i32, align 4
  %a = alloca i32, align 4
  %cp = alloca i8*, align 8
  %ct = alloca i8*, align 8
  %co = alloca i8*, align 8
  store %struct.VPaint* %vp, %struct.VPaint** %vp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VPaint** %vp.addr, metadata !12037, metadata !DIExpression()), !dbg !12038
  store i32 %col, i32* %col.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %col.addr, metadata !12039, metadata !DIExpression()), !dbg !12040
  store i32 %colorig, i32* %colorig.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %colorig.addr, metadata !12041, metadata !DIExpression()), !dbg !12042
  store i32 %paintcol, i32* %paintcol.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %paintcol.addr, metadata !12043, metadata !DIExpression()), !dbg !12044
  store i32 %alpha_i, i32* %alpha_i.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %alpha_i.addr, metadata !12045, metadata !DIExpression()), !dbg !12046
  store i32 %brush_alpha_value_i, i32* %brush_alpha_value_i.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %brush_alpha_value_i.addr, metadata !12047, metadata !DIExpression()), !dbg !12048
  call void @llvm.dbg.declare(metadata %struct.Brush** %brush, metadata !12049, metadata !DIExpression()), !dbg !12050
  %0 = load %struct.VPaint*, %struct.VPaint** %vp.addr, align 8, !dbg !12051
  %paint = getelementptr inbounds %struct.VPaint, %struct.VPaint* %0, i32 0, i32 0, !dbg !12052
  %call = call %struct.Brush* @BKE_paint_brush(%struct.Paint* %paint), !dbg !12053
  store %struct.Brush* %call, %struct.Brush** %brush, align 8, !dbg !12050
  call void @llvm.dbg.declare(metadata i32* %tool, metadata !12054, metadata !DIExpression()), !dbg !12055
  %1 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !12056
  %vertexpaint_tool = getelementptr inbounds %struct.Brush, %struct.Brush* %1, i32 0, i32 35, !dbg !12057
  %2 = load i8, i8* %vertexpaint_tool, align 1, !dbg !12057
  %conv = zext i8 %2 to i32, !dbg !12056
  store i32 %conv, i32* %tool, align 4, !dbg !12055
  %3 = load i32, i32* %tool, align 4, !dbg !12058
  %4 = load i32, i32* %col.addr, align 4, !dbg !12059
  %5 = load i32, i32* %paintcol.addr, align 4, !dbg !12060
  %6 = load i32, i32* %alpha_i.addr, align 4, !dbg !12061
  %call1 = call i32 @vpaint_blend_tool(i32 %3, i32 %4, i32 %5, i32 %6), !dbg !12062
  store i32 %call1, i32* %col.addr, align 4, !dbg !12063
  %7 = load %struct.VPaint*, %struct.VPaint** %vp.addr, align 8, !dbg !12064
  %flag = getelementptr inbounds %struct.VPaint, %struct.VPaint* %7, i32 0, i32 1, !dbg !12066
  %8 = load i16, i16* %flag, align 8, !dbg !12066
  %conv2 = sext i16 %8 to i32, !dbg !12064
  %and = and i32 %conv2, 16, !dbg !12067
  %cmp = icmp eq i32 %and, 0, !dbg !12068
  br i1 %cmp, label %if.then, label %if.end72, !dbg !12069

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %testcol, metadata !12070, metadata !DIExpression()), !dbg !12072
  call void @llvm.dbg.declare(metadata i32* %a, metadata !12073, metadata !DIExpression()), !dbg !12074
  call void @llvm.dbg.declare(metadata i8** %cp, metadata !12075, metadata !DIExpression()), !dbg !12076
  call void @llvm.dbg.declare(metadata i8** %ct, metadata !12077, metadata !DIExpression()), !dbg !12078
  call void @llvm.dbg.declare(metadata i8** %co, metadata !12079, metadata !DIExpression()), !dbg !12080
  %9 = load i32, i32* %tool, align 4, !dbg !12081
  %10 = load i32, i32* %colorig.addr, align 4, !dbg !12082
  %11 = load i32, i32* %paintcol.addr, align 4, !dbg !12083
  %12 = load i32, i32* %brush_alpha_value_i.addr, align 4, !dbg !12084
  %call4 = call i32 @vpaint_blend_tool(i32 %9, i32 %10, i32 %11, i32 %12), !dbg !12085
  store i32 %call4, i32* %testcol, align 4, !dbg !12086
  %13 = bitcast i32* %col.addr to i8*, !dbg !12087
  store i8* %13, i8** %cp, align 8, !dbg !12088
  %14 = bitcast i32* %testcol to i8*, !dbg !12089
  store i8* %14, i8** %ct, align 8, !dbg !12090
  %15 = bitcast i32* %colorig.addr to i8*, !dbg !12091
  store i8* %15, i8** %co, align 8, !dbg !12092
  store i32 0, i32* %a, align 4, !dbg !12093
  br label %for.cond, !dbg !12095

for.cond:                                         ; preds = %for.inc, %if.then
  %16 = load i32, i32* %a, align 4, !dbg !12096
  %cmp5 = icmp ult i32 %16, 4, !dbg !12098
  br i1 %cmp5, label %for.body, label %for.end, !dbg !12099

for.body:                                         ; preds = %for.cond
  %17 = load i8*, i8** %ct, align 8, !dbg !12100
  %18 = load i32, i32* %a, align 4, !dbg !12103
  %idxprom = zext i32 %18 to i64, !dbg !12100
  %arrayidx = getelementptr inbounds i8, i8* %17, i64 %idxprom, !dbg !12100
  %19 = load i8, i8* %arrayidx, align 1, !dbg !12100
  %conv7 = zext i8 %19 to i32, !dbg !12100
  %20 = load i8*, i8** %co, align 8, !dbg !12104
  %21 = load i32, i32* %a, align 4, !dbg !12105
  %idxprom8 = zext i32 %21 to i64, !dbg !12104
  %arrayidx9 = getelementptr inbounds i8, i8* %20, i64 %idxprom8, !dbg !12104
  %22 = load i8, i8* %arrayidx9, align 1, !dbg !12104
  %conv10 = zext i8 %22 to i32, !dbg !12104
  %cmp11 = icmp slt i32 %conv7, %conv10, !dbg !12106
  br i1 %cmp11, label %if.then13, label %if.else41, !dbg !12107

if.then13:                                        ; preds = %for.body
  %23 = load i8*, i8** %cp, align 8, !dbg !12108
  %24 = load i32, i32* %a, align 4, !dbg !12111
  %idxprom14 = zext i32 %24 to i64, !dbg !12108
  %arrayidx15 = getelementptr inbounds i8, i8* %23, i64 %idxprom14, !dbg !12108
  %25 = load i8, i8* %arrayidx15, align 1, !dbg !12108
  %conv16 = zext i8 %25 to i32, !dbg !12108
  %26 = load i8*, i8** %ct, align 8, !dbg !12112
  %27 = load i32, i32* %a, align 4, !dbg !12113
  %idxprom17 = zext i32 %27 to i64, !dbg !12112
  %arrayidx18 = getelementptr inbounds i8, i8* %26, i64 %idxprom17, !dbg !12112
  %28 = load i8, i8* %arrayidx18, align 1, !dbg !12112
  %conv19 = zext i8 %28 to i32, !dbg !12112
  %cmp20 = icmp slt i32 %conv16, %conv19, !dbg !12114
  br i1 %cmp20, label %if.then22, label %if.else, !dbg !12115

if.then22:                                        ; preds = %if.then13
  %29 = load i8*, i8** %ct, align 8, !dbg !12116
  %30 = load i32, i32* %a, align 4, !dbg !12117
  %idxprom23 = zext i32 %30 to i64, !dbg !12116
  %arrayidx24 = getelementptr inbounds i8, i8* %29, i64 %idxprom23, !dbg !12116
  %31 = load i8, i8* %arrayidx24, align 1, !dbg !12116
  %32 = load i8*, i8** %cp, align 8, !dbg !12118
  %33 = load i32, i32* %a, align 4, !dbg !12119
  %idxprom25 = zext i32 %33 to i64, !dbg !12118
  %arrayidx26 = getelementptr inbounds i8, i8* %32, i64 %idxprom25, !dbg !12118
  store i8 %31, i8* %arrayidx26, align 1, !dbg !12120
  br label %if.end40, !dbg !12118

if.else:                                          ; preds = %if.then13
  %34 = load i8*, i8** %cp, align 8, !dbg !12121
  %35 = load i32, i32* %a, align 4, !dbg !12123
  %idxprom27 = zext i32 %35 to i64, !dbg !12121
  %arrayidx28 = getelementptr inbounds i8, i8* %34, i64 %idxprom27, !dbg !12121
  %36 = load i8, i8* %arrayidx28, align 1, !dbg !12121
  %conv29 = zext i8 %36 to i32, !dbg !12121
  %37 = load i8*, i8** %co, align 8, !dbg !12124
  %38 = load i32, i32* %a, align 4, !dbg !12125
  %idxprom30 = zext i32 %38 to i64, !dbg !12124
  %arrayidx31 = getelementptr inbounds i8, i8* %37, i64 %idxprom30, !dbg !12124
  %39 = load i8, i8* %arrayidx31, align 1, !dbg !12124
  %conv32 = zext i8 %39 to i32, !dbg !12124
  %cmp33 = icmp sgt i32 %conv29, %conv32, !dbg !12126
  br i1 %cmp33, label %if.then35, label %if.end, !dbg !12127

if.then35:                                        ; preds = %if.else
  %40 = load i8*, i8** %co, align 8, !dbg !12128
  %41 = load i32, i32* %a, align 4, !dbg !12129
  %idxprom36 = zext i32 %41 to i64, !dbg !12128
  %arrayidx37 = getelementptr inbounds i8, i8* %40, i64 %idxprom36, !dbg !12128
  %42 = load i8, i8* %arrayidx37, align 1, !dbg !12128
  %43 = load i8*, i8** %cp, align 8, !dbg !12130
  %44 = load i32, i32* %a, align 4, !dbg !12131
  %idxprom38 = zext i32 %44 to i64, !dbg !12130
  %arrayidx39 = getelementptr inbounds i8, i8* %43, i64 %idxprom38, !dbg !12130
  store i8 %42, i8* %arrayidx39, align 1, !dbg !12132
  br label %if.end, !dbg !12130

if.end:                                           ; preds = %if.then35, %if.else
  br label %if.end40

if.end40:                                         ; preds = %if.end, %if.then22
  br label %if.end71, !dbg !12133

if.else41:                                        ; preds = %for.body
  %45 = load i8*, i8** %cp, align 8, !dbg !12134
  %46 = load i32, i32* %a, align 4, !dbg !12137
  %idxprom42 = zext i32 %46 to i64, !dbg !12134
  %arrayidx43 = getelementptr inbounds i8, i8* %45, i64 %idxprom42, !dbg !12134
  %47 = load i8, i8* %arrayidx43, align 1, !dbg !12134
  %conv44 = zext i8 %47 to i32, !dbg !12134
  %48 = load i8*, i8** %co, align 8, !dbg !12138
  %49 = load i32, i32* %a, align 4, !dbg !12139
  %idxprom45 = zext i32 %49 to i64, !dbg !12138
  %arrayidx46 = getelementptr inbounds i8, i8* %48, i64 %idxprom45, !dbg !12138
  %50 = load i8, i8* %arrayidx46, align 1, !dbg !12138
  %conv47 = zext i8 %50 to i32, !dbg !12138
  %cmp48 = icmp slt i32 %conv44, %conv47, !dbg !12140
  br i1 %cmp48, label %if.then50, label %if.else55, !dbg !12141

if.then50:                                        ; preds = %if.else41
  %51 = load i8*, i8** %co, align 8, !dbg !12142
  %52 = load i32, i32* %a, align 4, !dbg !12143
  %idxprom51 = zext i32 %52 to i64, !dbg !12142
  %arrayidx52 = getelementptr inbounds i8, i8* %51, i64 %idxprom51, !dbg !12142
  %53 = load i8, i8* %arrayidx52, align 1, !dbg !12142
  %54 = load i8*, i8** %cp, align 8, !dbg !12144
  %55 = load i32, i32* %a, align 4, !dbg !12145
  %idxprom53 = zext i32 %55 to i64, !dbg !12144
  %arrayidx54 = getelementptr inbounds i8, i8* %54, i64 %idxprom53, !dbg !12144
  store i8 %53, i8* %arrayidx54, align 1, !dbg !12146
  br label %if.end70, !dbg !12144

if.else55:                                        ; preds = %if.else41
  %56 = load i8*, i8** %cp, align 8, !dbg !12147
  %57 = load i32, i32* %a, align 4, !dbg !12149
  %idxprom56 = zext i32 %57 to i64, !dbg !12147
  %arrayidx57 = getelementptr inbounds i8, i8* %56, i64 %idxprom56, !dbg !12147
  %58 = load i8, i8* %arrayidx57, align 1, !dbg !12147
  %conv58 = zext i8 %58 to i32, !dbg !12147
  %59 = load i8*, i8** %ct, align 8, !dbg !12150
  %60 = load i32, i32* %a, align 4, !dbg !12151
  %idxprom59 = zext i32 %60 to i64, !dbg !12150
  %arrayidx60 = getelementptr inbounds i8, i8* %59, i64 %idxprom59, !dbg !12150
  %61 = load i8, i8* %arrayidx60, align 1, !dbg !12150
  %conv61 = zext i8 %61 to i32, !dbg !12150
  %cmp62 = icmp sgt i32 %conv58, %conv61, !dbg !12152
  br i1 %cmp62, label %if.then64, label %if.end69, !dbg !12153

if.then64:                                        ; preds = %if.else55
  %62 = load i8*, i8** %ct, align 8, !dbg !12154
  %63 = load i32, i32* %a, align 4, !dbg !12155
  %idxprom65 = zext i32 %63 to i64, !dbg !12154
  %arrayidx66 = getelementptr inbounds i8, i8* %62, i64 %idxprom65, !dbg !12154
  %64 = load i8, i8* %arrayidx66, align 1, !dbg !12154
  %65 = load i8*, i8** %cp, align 8, !dbg !12156
  %66 = load i32, i32* %a, align 4, !dbg !12157
  %idxprom67 = zext i32 %66 to i64, !dbg !12156
  %arrayidx68 = getelementptr inbounds i8, i8* %65, i64 %idxprom67, !dbg !12156
  store i8 %64, i8* %arrayidx68, align 1, !dbg !12158
  br label %if.end69, !dbg !12156

if.end69:                                         ; preds = %if.then64, %if.else55
  br label %if.end70

if.end70:                                         ; preds = %if.end69, %if.then50
  br label %if.end71

if.end71:                                         ; preds = %if.end70, %if.end40
  br label %for.inc, !dbg !12159

for.inc:                                          ; preds = %if.end71
  %67 = load i32, i32* %a, align 4, !dbg !12160
  %inc = add i32 %67, 1, !dbg !12160
  store i32 %inc, i32* %a, align 4, !dbg !12160
  br label %for.cond, !dbg !12161, !llvm.loop !12162

for.end:                                          ; preds = %for.cond
  br label %if.end72, !dbg !12164

if.end72:                                         ; preds = %for.end, %entry
  %68 = load i32, i32* %col.addr, align 4, !dbg !12165
  ret i32 %68, !dbg !12166
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @vpaint_blend_tool(i32 %tool, i32 %col, i32 %paintcol, i32 %alpha_i) #0 !dbg !12167 {
entry:
  %retval = alloca i32, align 4
  %tool.addr = alloca i32, align 4
  %col.addr = alloca i32, align 4
  %paintcol.addr = alloca i32, align 4
  %alpha_i.addr = alloca i32, align 4
  store i32 %tool, i32* %tool.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tool.addr, metadata !12170, metadata !DIExpression()), !dbg !12171
  store i32 %col, i32* %col.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %col.addr, metadata !12172, metadata !DIExpression()), !dbg !12173
  store i32 %paintcol, i32* %paintcol.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %paintcol.addr, metadata !12174, metadata !DIExpression()), !dbg !12175
  store i32 %alpha_i, i32* %alpha_i.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %alpha_i.addr, metadata !12176, metadata !DIExpression()), !dbg !12177
  %0 = load i32, i32* %tool.addr, align 4, !dbg !12178
  switch i32 %0, label %sw.default [
    i32 0, label %sw.bb
    i32 4, label %sw.bb
    i32 1, label %sw.bb1
    i32 2, label %sw.bb3
    i32 3, label %sw.bb5
    i32 5, label %sw.bb7
    i32 6, label %sw.bb9
  ], !dbg !12179

sw.bb:                                            ; preds = %entry, %entry
  %1 = load i32, i32* %col.addr, align 4, !dbg !12180
  %2 = load i32, i32* %paintcol.addr, align 4, !dbg !12182
  %3 = load i32, i32* %alpha_i.addr, align 4, !dbg !12183
  %call = call i32 @mcol_blend(i32 %1, i32 %2, i32 %3), !dbg !12184
  store i32 %call, i32* %retval, align 4, !dbg !12185
  br label %return, !dbg !12185

sw.bb1:                                           ; preds = %entry
  %4 = load i32, i32* %col.addr, align 4, !dbg !12186
  %5 = load i32, i32* %paintcol.addr, align 4, !dbg !12187
  %6 = load i32, i32* %alpha_i.addr, align 4, !dbg !12188
  %call2 = call i32 @mcol_add(i32 %4, i32 %5, i32 %6), !dbg !12189
  store i32 %call2, i32* %retval, align 4, !dbg !12190
  br label %return, !dbg !12190

sw.bb3:                                           ; preds = %entry
  %7 = load i32, i32* %col.addr, align 4, !dbg !12191
  %8 = load i32, i32* %paintcol.addr, align 4, !dbg !12192
  %9 = load i32, i32* %alpha_i.addr, align 4, !dbg !12193
  %call4 = call i32 @mcol_sub(i32 %7, i32 %8, i32 %9), !dbg !12194
  store i32 %call4, i32* %retval, align 4, !dbg !12195
  br label %return, !dbg !12195

sw.bb5:                                           ; preds = %entry
  %10 = load i32, i32* %col.addr, align 4, !dbg !12196
  %11 = load i32, i32* %paintcol.addr, align 4, !dbg !12197
  %12 = load i32, i32* %alpha_i.addr, align 4, !dbg !12198
  %call6 = call i32 @mcol_mul(i32 %10, i32 %11, i32 %12), !dbg !12199
  store i32 %call6, i32* %retval, align 4, !dbg !12200
  br label %return, !dbg !12200

sw.bb7:                                           ; preds = %entry
  %13 = load i32, i32* %col.addr, align 4, !dbg !12201
  %14 = load i32, i32* %paintcol.addr, align 4, !dbg !12202
  %15 = load i32, i32* %alpha_i.addr, align 4, !dbg !12203
  %call8 = call i32 @mcol_lighten(i32 %13, i32 %14, i32 %15), !dbg !12204
  store i32 %call8, i32* %retval, align 4, !dbg !12205
  br label %return, !dbg !12205

sw.bb9:                                           ; preds = %entry
  %16 = load i32, i32* %col.addr, align 4, !dbg !12206
  %17 = load i32, i32* %paintcol.addr, align 4, !dbg !12207
  %18 = load i32, i32* %alpha_i.addr, align 4, !dbg !12208
  %call10 = call i32 @mcol_darken(i32 %16, i32 %17, i32 %18), !dbg !12209
  store i32 %call10, i32* %retval, align 4, !dbg !12210
  br label %return, !dbg !12210

sw.default:                                       ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !12211
  br label %return, !dbg !12211

return:                                           ; preds = %sw.default, %sw.bb9, %sw.bb7, %sw.bb5, %sw.bb3, %sw.bb1, %sw.bb
  %19 = load i32, i32* %retval, align 4, !dbg !12212
  ret i32 %19, !dbg !12212
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @mcol_blend(i32 %col1, i32 %col2, i32 %fac) #0 !dbg !12213 {
entry:
  %retval = alloca i32, align 4
  %col1.addr = alloca i32, align 4
  %col2.addr = alloca i32, align 4
  %fac.addr = alloca i32, align 4
  %cp1 = alloca i8*, align 8
  %cp2 = alloca i8*, align 8
  %cp = alloca i8*, align 8
  %mfac = alloca i32, align 4
  %col = alloca i32, align 4
  store i32 %col1, i32* %col1.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %col1.addr, metadata !12216, metadata !DIExpression()), !dbg !12217
  store i32 %col2, i32* %col2.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %col2.addr, metadata !12218, metadata !DIExpression()), !dbg !12219
  store i32 %fac, i32* %fac.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fac.addr, metadata !12220, metadata !DIExpression()), !dbg !12221
  call void @llvm.dbg.declare(metadata i8** %cp1, metadata !12222, metadata !DIExpression()), !dbg !12223
  call void @llvm.dbg.declare(metadata i8** %cp2, metadata !12224, metadata !DIExpression()), !dbg !12225
  call void @llvm.dbg.declare(metadata i8** %cp, metadata !12226, metadata !DIExpression()), !dbg !12227
  call void @llvm.dbg.declare(metadata i32* %mfac, metadata !12228, metadata !DIExpression()), !dbg !12229
  call void @llvm.dbg.declare(metadata i32* %col, metadata !12230, metadata !DIExpression()), !dbg !12231
  store i32 0, i32* %col, align 4, !dbg !12231
  %0 = load i32, i32* %fac.addr, align 4, !dbg !12232
  %cmp = icmp eq i32 %0, 0, !dbg !12234
  br i1 %cmp, label %if.then, label %if.end, !dbg !12235

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %col1.addr, align 4, !dbg !12236
  store i32 %1, i32* %retval, align 4, !dbg !12238
  br label %return, !dbg !12238

if.end:                                           ; preds = %entry
  %2 = load i32, i32* %fac.addr, align 4, !dbg !12239
  %cmp1 = icmp sge i32 %2, 255, !dbg !12241
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !12242

if.then2:                                         ; preds = %if.end
  %3 = load i32, i32* %col2.addr, align 4, !dbg !12243
  store i32 %3, i32* %retval, align 4, !dbg !12245
  br label %return, !dbg !12245

if.end3:                                          ; preds = %if.end
  %4 = load i32, i32* %fac.addr, align 4, !dbg !12246
  %sub = sub nsw i32 255, %4, !dbg !12247
  store i32 %sub, i32* %mfac, align 4, !dbg !12248
  %5 = bitcast i32* %col1.addr to i8*, !dbg !12249
  store i8* %5, i8** %cp1, align 8, !dbg !12250
  %6 = bitcast i32* %col2.addr to i8*, !dbg !12251
  store i8* %6, i8** %cp2, align 8, !dbg !12252
  %7 = bitcast i32* %col to i8*, !dbg !12253
  store i8* %7, i8** %cp, align 8, !dbg !12254
  %8 = load i32, i32* %mfac, align 4, !dbg !12255
  %9 = load i8*, i8** %cp1, align 8, !dbg !12256
  %arrayidx = getelementptr inbounds i8, i8* %9, i64 0, !dbg !12256
  %10 = load i8, i8* %arrayidx, align 1, !dbg !12256
  %conv = zext i8 %10 to i32, !dbg !12256
  %mul = mul nsw i32 %8, %conv, !dbg !12257
  %11 = load i32, i32* %fac.addr, align 4, !dbg !12258
  %12 = load i8*, i8** %cp2, align 8, !dbg !12259
  %arrayidx4 = getelementptr inbounds i8, i8* %12, i64 0, !dbg !12259
  %13 = load i8, i8* %arrayidx4, align 1, !dbg !12259
  %conv5 = zext i8 %13 to i32, !dbg !12259
  %mul6 = mul nsw i32 %11, %conv5, !dbg !12260
  %add = add nsw i32 %mul, %mul6, !dbg !12261
  %call = call i32 @divide_round_i(i32 %add, i32 255), !dbg !12262
  %conv7 = trunc i32 %call to i8, !dbg !12262
  %14 = load i8*, i8** %cp, align 8, !dbg !12263
  %arrayidx8 = getelementptr inbounds i8, i8* %14, i64 0, !dbg !12263
  store i8 %conv7, i8* %arrayidx8, align 1, !dbg !12264
  %15 = load i32, i32* %mfac, align 4, !dbg !12265
  %16 = load i8*, i8** %cp1, align 8, !dbg !12266
  %arrayidx9 = getelementptr inbounds i8, i8* %16, i64 1, !dbg !12266
  %17 = load i8, i8* %arrayidx9, align 1, !dbg !12266
  %conv10 = zext i8 %17 to i32, !dbg !12266
  %mul11 = mul nsw i32 %15, %conv10, !dbg !12267
  %18 = load i32, i32* %fac.addr, align 4, !dbg !12268
  %19 = load i8*, i8** %cp2, align 8, !dbg !12269
  %arrayidx12 = getelementptr inbounds i8, i8* %19, i64 1, !dbg !12269
  %20 = load i8, i8* %arrayidx12, align 1, !dbg !12269
  %conv13 = zext i8 %20 to i32, !dbg !12269
  %mul14 = mul nsw i32 %18, %conv13, !dbg !12270
  %add15 = add nsw i32 %mul11, %mul14, !dbg !12271
  %call16 = call i32 @divide_round_i(i32 %add15, i32 255), !dbg !12272
  %conv17 = trunc i32 %call16 to i8, !dbg !12272
  %21 = load i8*, i8** %cp, align 8, !dbg !12273
  %arrayidx18 = getelementptr inbounds i8, i8* %21, i64 1, !dbg !12273
  store i8 %conv17, i8* %arrayidx18, align 1, !dbg !12274
  %22 = load i32, i32* %mfac, align 4, !dbg !12275
  %23 = load i8*, i8** %cp1, align 8, !dbg !12276
  %arrayidx19 = getelementptr inbounds i8, i8* %23, i64 2, !dbg !12276
  %24 = load i8, i8* %arrayidx19, align 1, !dbg !12276
  %conv20 = zext i8 %24 to i32, !dbg !12276
  %mul21 = mul nsw i32 %22, %conv20, !dbg !12277
  %25 = load i32, i32* %fac.addr, align 4, !dbg !12278
  %26 = load i8*, i8** %cp2, align 8, !dbg !12279
  %arrayidx22 = getelementptr inbounds i8, i8* %26, i64 2, !dbg !12279
  %27 = load i8, i8* %arrayidx22, align 1, !dbg !12279
  %conv23 = zext i8 %27 to i32, !dbg !12279
  %mul24 = mul nsw i32 %25, %conv23, !dbg !12280
  %add25 = add nsw i32 %mul21, %mul24, !dbg !12281
  %call26 = call i32 @divide_round_i(i32 %add25, i32 255), !dbg !12282
  %conv27 = trunc i32 %call26 to i8, !dbg !12282
  %28 = load i8*, i8** %cp, align 8, !dbg !12283
  %arrayidx28 = getelementptr inbounds i8, i8* %28, i64 2, !dbg !12283
  store i8 %conv27, i8* %arrayidx28, align 1, !dbg !12284
  %29 = load i8*, i8** %cp, align 8, !dbg !12285
  %arrayidx29 = getelementptr inbounds i8, i8* %29, i64 3, !dbg !12285
  store i8 -1, i8* %arrayidx29, align 1, !dbg !12286
  %30 = load i32, i32* %col, align 4, !dbg !12287
  store i32 %30, i32* %retval, align 4, !dbg !12288
  br label %return, !dbg !12288

return:                                           ; preds = %if.end3, %if.then2, %if.then
  %31 = load i32, i32* %retval, align 4, !dbg !12289
  ret i32 %31, !dbg !12289
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @mcol_add(i32 %col1, i32 %col2, i32 %fac) #0 !dbg !12290 {
entry:
  %retval = alloca i32, align 4
  %col1.addr = alloca i32, align 4
  %col2.addr = alloca i32, align 4
  %fac.addr = alloca i32, align 4
  %cp1 = alloca i8*, align 8
  %cp2 = alloca i8*, align 8
  %cp = alloca i8*, align 8
  %temp = alloca i32, align 4
  %col = alloca i32, align 4
  store i32 %col1, i32* %col1.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %col1.addr, metadata !12291, metadata !DIExpression()), !dbg !12292
  store i32 %col2, i32* %col2.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %col2.addr, metadata !12293, metadata !DIExpression()), !dbg !12294
  store i32 %fac, i32* %fac.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fac.addr, metadata !12295, metadata !DIExpression()), !dbg !12296
  call void @llvm.dbg.declare(metadata i8** %cp1, metadata !12297, metadata !DIExpression()), !dbg !12298
  call void @llvm.dbg.declare(metadata i8** %cp2, metadata !12299, metadata !DIExpression()), !dbg !12300
  call void @llvm.dbg.declare(metadata i8** %cp, metadata !12301, metadata !DIExpression()), !dbg !12302
  call void @llvm.dbg.declare(metadata i32* %temp, metadata !12303, metadata !DIExpression()), !dbg !12304
  call void @llvm.dbg.declare(metadata i32* %col, metadata !12305, metadata !DIExpression()), !dbg !12306
  store i32 0, i32* %col, align 4, !dbg !12306
  %0 = load i32, i32* %fac.addr, align 4, !dbg !12307
  %cmp = icmp eq i32 %0, 0, !dbg !12309
  br i1 %cmp, label %if.then, label %if.end, !dbg !12310

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %col1.addr, align 4, !dbg !12311
  store i32 %1, i32* %retval, align 4, !dbg !12313
  br label %return, !dbg !12313

if.end:                                           ; preds = %entry
  %2 = bitcast i32* %col1.addr to i8*, !dbg !12314
  store i8* %2, i8** %cp1, align 8, !dbg !12315
  %3 = bitcast i32* %col2.addr to i8*, !dbg !12316
  store i8* %3, i8** %cp2, align 8, !dbg !12317
  %4 = bitcast i32* %col to i8*, !dbg !12318
  store i8* %4, i8** %cp, align 8, !dbg !12319
  %5 = load i8*, i8** %cp1, align 8, !dbg !12320
  %arrayidx = getelementptr inbounds i8, i8* %5, i64 0, !dbg !12320
  %6 = load i8, i8* %arrayidx, align 1, !dbg !12320
  %conv = zext i8 %6 to i32, !dbg !12320
  %7 = load i32, i32* %fac.addr, align 4, !dbg !12321
  %8 = load i8*, i8** %cp2, align 8, !dbg !12322
  %arrayidx1 = getelementptr inbounds i8, i8* %8, i64 0, !dbg !12322
  %9 = load i8, i8* %arrayidx1, align 1, !dbg !12322
  %conv2 = zext i8 %9 to i32, !dbg !12322
  %mul = mul nsw i32 %7, %conv2, !dbg !12323
  %call = call i32 @divide_round_i(i32 %mul, i32 255), !dbg !12324
  %add = add nsw i32 %conv, %call, !dbg !12325
  store i32 %add, i32* %temp, align 4, !dbg !12326
  %10 = load i32, i32* %temp, align 4, !dbg !12327
  %cmp3 = icmp sgt i32 %10, 254, !dbg !12328
  br i1 %cmp3, label %cond.true, label %cond.false, !dbg !12329

cond.true:                                        ; preds = %if.end
  br label %cond.end, !dbg !12329

cond.false:                                       ; preds = %if.end
  %11 = load i32, i32* %temp, align 4, !dbg !12330
  br label %cond.end, !dbg !12329

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 255, %cond.true ], [ %11, %cond.false ], !dbg !12329
  %conv5 = trunc i32 %cond to i8, !dbg !12329
  %12 = load i8*, i8** %cp, align 8, !dbg !12331
  %arrayidx6 = getelementptr inbounds i8, i8* %12, i64 0, !dbg !12331
  store i8 %conv5, i8* %arrayidx6, align 1, !dbg !12332
  %13 = load i8*, i8** %cp1, align 8, !dbg !12333
  %arrayidx7 = getelementptr inbounds i8, i8* %13, i64 1, !dbg !12333
  %14 = load i8, i8* %arrayidx7, align 1, !dbg !12333
  %conv8 = zext i8 %14 to i32, !dbg !12333
  %15 = load i32, i32* %fac.addr, align 4, !dbg !12334
  %16 = load i8*, i8** %cp2, align 8, !dbg !12335
  %arrayidx9 = getelementptr inbounds i8, i8* %16, i64 1, !dbg !12335
  %17 = load i8, i8* %arrayidx9, align 1, !dbg !12335
  %conv10 = zext i8 %17 to i32, !dbg !12335
  %mul11 = mul nsw i32 %15, %conv10, !dbg !12336
  %call12 = call i32 @divide_round_i(i32 %mul11, i32 255), !dbg !12337
  %add13 = add nsw i32 %conv8, %call12, !dbg !12338
  store i32 %add13, i32* %temp, align 4, !dbg !12339
  %18 = load i32, i32* %temp, align 4, !dbg !12340
  %cmp14 = icmp sgt i32 %18, 254, !dbg !12341
  br i1 %cmp14, label %cond.true16, label %cond.false17, !dbg !12342

cond.true16:                                      ; preds = %cond.end
  br label %cond.end18, !dbg !12342

cond.false17:                                     ; preds = %cond.end
  %19 = load i32, i32* %temp, align 4, !dbg !12343
  br label %cond.end18, !dbg !12342

cond.end18:                                       ; preds = %cond.false17, %cond.true16
  %cond19 = phi i32 [ 255, %cond.true16 ], [ %19, %cond.false17 ], !dbg !12342
  %conv20 = trunc i32 %cond19 to i8, !dbg !12342
  %20 = load i8*, i8** %cp, align 8, !dbg !12344
  %arrayidx21 = getelementptr inbounds i8, i8* %20, i64 1, !dbg !12344
  store i8 %conv20, i8* %arrayidx21, align 1, !dbg !12345
  %21 = load i8*, i8** %cp1, align 8, !dbg !12346
  %arrayidx22 = getelementptr inbounds i8, i8* %21, i64 2, !dbg !12346
  %22 = load i8, i8* %arrayidx22, align 1, !dbg !12346
  %conv23 = zext i8 %22 to i32, !dbg !12346
  %23 = load i32, i32* %fac.addr, align 4, !dbg !12347
  %24 = load i8*, i8** %cp2, align 8, !dbg !12348
  %arrayidx24 = getelementptr inbounds i8, i8* %24, i64 2, !dbg !12348
  %25 = load i8, i8* %arrayidx24, align 1, !dbg !12348
  %conv25 = zext i8 %25 to i32, !dbg !12348
  %mul26 = mul nsw i32 %23, %conv25, !dbg !12349
  %call27 = call i32 @divide_round_i(i32 %mul26, i32 255), !dbg !12350
  %add28 = add nsw i32 %conv23, %call27, !dbg !12351
  store i32 %add28, i32* %temp, align 4, !dbg !12352
  %26 = load i32, i32* %temp, align 4, !dbg !12353
  %cmp29 = icmp sgt i32 %26, 254, !dbg !12354
  br i1 %cmp29, label %cond.true31, label %cond.false32, !dbg !12355

cond.true31:                                      ; preds = %cond.end18
  br label %cond.end33, !dbg !12355

cond.false32:                                     ; preds = %cond.end18
  %27 = load i32, i32* %temp, align 4, !dbg !12356
  br label %cond.end33, !dbg !12355

cond.end33:                                       ; preds = %cond.false32, %cond.true31
  %cond34 = phi i32 [ 255, %cond.true31 ], [ %27, %cond.false32 ], !dbg !12355
  %conv35 = trunc i32 %cond34 to i8, !dbg !12355
  %28 = load i8*, i8** %cp, align 8, !dbg !12357
  %arrayidx36 = getelementptr inbounds i8, i8* %28, i64 2, !dbg !12357
  store i8 %conv35, i8* %arrayidx36, align 1, !dbg !12358
  %29 = load i8*, i8** %cp, align 8, !dbg !12359
  %arrayidx37 = getelementptr inbounds i8, i8* %29, i64 3, !dbg !12359
  store i8 -1, i8* %arrayidx37, align 1, !dbg !12360
  %30 = load i32, i32* %col, align 4, !dbg !12361
  store i32 %30, i32* %retval, align 4, !dbg !12362
  br label %return, !dbg !12362

return:                                           ; preds = %cond.end33, %if.then
  %31 = load i32, i32* %retval, align 4, !dbg !12363
  ret i32 %31, !dbg !12363
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @mcol_sub(i32 %col1, i32 %col2, i32 %fac) #0 !dbg !12364 {
entry:
  %retval = alloca i32, align 4
  %col1.addr = alloca i32, align 4
  %col2.addr = alloca i32, align 4
  %fac.addr = alloca i32, align 4
  %cp1 = alloca i8*, align 8
  %cp2 = alloca i8*, align 8
  %cp = alloca i8*, align 8
  %temp = alloca i32, align 4
  %col = alloca i32, align 4
  store i32 %col1, i32* %col1.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %col1.addr, metadata !12365, metadata !DIExpression()), !dbg !12366
  store i32 %col2, i32* %col2.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %col2.addr, metadata !12367, metadata !DIExpression()), !dbg !12368
  store i32 %fac, i32* %fac.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fac.addr, metadata !12369, metadata !DIExpression()), !dbg !12370
  call void @llvm.dbg.declare(metadata i8** %cp1, metadata !12371, metadata !DIExpression()), !dbg !12372
  call void @llvm.dbg.declare(metadata i8** %cp2, metadata !12373, metadata !DIExpression()), !dbg !12374
  call void @llvm.dbg.declare(metadata i8** %cp, metadata !12375, metadata !DIExpression()), !dbg !12376
  call void @llvm.dbg.declare(metadata i32* %temp, metadata !12377, metadata !DIExpression()), !dbg !12378
  call void @llvm.dbg.declare(metadata i32* %col, metadata !12379, metadata !DIExpression()), !dbg !12380
  store i32 0, i32* %col, align 4, !dbg !12380
  %0 = load i32, i32* %fac.addr, align 4, !dbg !12381
  %cmp = icmp eq i32 %0, 0, !dbg !12383
  br i1 %cmp, label %if.then, label %if.end, !dbg !12384

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %col1.addr, align 4, !dbg !12385
  store i32 %1, i32* %retval, align 4, !dbg !12387
  br label %return, !dbg !12387

if.end:                                           ; preds = %entry
  %2 = bitcast i32* %col1.addr to i8*, !dbg !12388
  store i8* %2, i8** %cp1, align 8, !dbg !12389
  %3 = bitcast i32* %col2.addr to i8*, !dbg !12390
  store i8* %3, i8** %cp2, align 8, !dbg !12391
  %4 = bitcast i32* %col to i8*, !dbg !12392
  store i8* %4, i8** %cp, align 8, !dbg !12393
  %5 = load i8*, i8** %cp1, align 8, !dbg !12394
  %arrayidx = getelementptr inbounds i8, i8* %5, i64 0, !dbg !12394
  %6 = load i8, i8* %arrayidx, align 1, !dbg !12394
  %conv = zext i8 %6 to i32, !dbg !12394
  %7 = load i32, i32* %fac.addr, align 4, !dbg !12395
  %8 = load i8*, i8** %cp2, align 8, !dbg !12396
  %arrayidx1 = getelementptr inbounds i8, i8* %8, i64 0, !dbg !12396
  %9 = load i8, i8* %arrayidx1, align 1, !dbg !12396
  %conv2 = zext i8 %9 to i32, !dbg !12396
  %mul = mul nsw i32 %7, %conv2, !dbg !12397
  %call = call i32 @divide_round_i(i32 %mul, i32 255), !dbg !12398
  %sub = sub nsw i32 %conv, %call, !dbg !12399
  store i32 %sub, i32* %temp, align 4, !dbg !12400
  %10 = load i32, i32* %temp, align 4, !dbg !12401
  %cmp3 = icmp slt i32 %10, 0, !dbg !12402
  br i1 %cmp3, label %cond.true, label %cond.false, !dbg !12403

cond.true:                                        ; preds = %if.end
  br label %cond.end, !dbg !12403

cond.false:                                       ; preds = %if.end
  %11 = load i32, i32* %temp, align 4, !dbg !12404
  br label %cond.end, !dbg !12403

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %11, %cond.false ], !dbg !12403
  %conv5 = trunc i32 %cond to i8, !dbg !12403
  %12 = load i8*, i8** %cp, align 8, !dbg !12405
  %arrayidx6 = getelementptr inbounds i8, i8* %12, i64 0, !dbg !12405
  store i8 %conv5, i8* %arrayidx6, align 1, !dbg !12406
  %13 = load i8*, i8** %cp1, align 8, !dbg !12407
  %arrayidx7 = getelementptr inbounds i8, i8* %13, i64 1, !dbg !12407
  %14 = load i8, i8* %arrayidx7, align 1, !dbg !12407
  %conv8 = zext i8 %14 to i32, !dbg !12407
  %15 = load i32, i32* %fac.addr, align 4, !dbg !12408
  %16 = load i8*, i8** %cp2, align 8, !dbg !12409
  %arrayidx9 = getelementptr inbounds i8, i8* %16, i64 1, !dbg !12409
  %17 = load i8, i8* %arrayidx9, align 1, !dbg !12409
  %conv10 = zext i8 %17 to i32, !dbg !12409
  %mul11 = mul nsw i32 %15, %conv10, !dbg !12410
  %call12 = call i32 @divide_round_i(i32 %mul11, i32 255), !dbg !12411
  %sub13 = sub nsw i32 %conv8, %call12, !dbg !12412
  store i32 %sub13, i32* %temp, align 4, !dbg !12413
  %18 = load i32, i32* %temp, align 4, !dbg !12414
  %cmp14 = icmp slt i32 %18, 0, !dbg !12415
  br i1 %cmp14, label %cond.true16, label %cond.false17, !dbg !12416

cond.true16:                                      ; preds = %cond.end
  br label %cond.end18, !dbg !12416

cond.false17:                                     ; preds = %cond.end
  %19 = load i32, i32* %temp, align 4, !dbg !12417
  br label %cond.end18, !dbg !12416

cond.end18:                                       ; preds = %cond.false17, %cond.true16
  %cond19 = phi i32 [ 0, %cond.true16 ], [ %19, %cond.false17 ], !dbg !12416
  %conv20 = trunc i32 %cond19 to i8, !dbg !12416
  %20 = load i8*, i8** %cp, align 8, !dbg !12418
  %arrayidx21 = getelementptr inbounds i8, i8* %20, i64 1, !dbg !12418
  store i8 %conv20, i8* %arrayidx21, align 1, !dbg !12419
  %21 = load i8*, i8** %cp1, align 8, !dbg !12420
  %arrayidx22 = getelementptr inbounds i8, i8* %21, i64 2, !dbg !12420
  %22 = load i8, i8* %arrayidx22, align 1, !dbg !12420
  %conv23 = zext i8 %22 to i32, !dbg !12420
  %23 = load i32, i32* %fac.addr, align 4, !dbg !12421
  %24 = load i8*, i8** %cp2, align 8, !dbg !12422
  %arrayidx24 = getelementptr inbounds i8, i8* %24, i64 2, !dbg !12422
  %25 = load i8, i8* %arrayidx24, align 1, !dbg !12422
  %conv25 = zext i8 %25 to i32, !dbg !12422
  %mul26 = mul nsw i32 %23, %conv25, !dbg !12423
  %call27 = call i32 @divide_round_i(i32 %mul26, i32 255), !dbg !12424
  %sub28 = sub nsw i32 %conv23, %call27, !dbg !12425
  store i32 %sub28, i32* %temp, align 4, !dbg !12426
  %26 = load i32, i32* %temp, align 4, !dbg !12427
  %cmp29 = icmp slt i32 %26, 0, !dbg !12428
  br i1 %cmp29, label %cond.true31, label %cond.false32, !dbg !12429

cond.true31:                                      ; preds = %cond.end18
  br label %cond.end33, !dbg !12429

cond.false32:                                     ; preds = %cond.end18
  %27 = load i32, i32* %temp, align 4, !dbg !12430
  br label %cond.end33, !dbg !12429

cond.end33:                                       ; preds = %cond.false32, %cond.true31
  %cond34 = phi i32 [ 0, %cond.true31 ], [ %27, %cond.false32 ], !dbg !12429
  %conv35 = trunc i32 %cond34 to i8, !dbg !12429
  %28 = load i8*, i8** %cp, align 8, !dbg !12431
  %arrayidx36 = getelementptr inbounds i8, i8* %28, i64 2, !dbg !12431
  store i8 %conv35, i8* %arrayidx36, align 1, !dbg !12432
  %29 = load i8*, i8** %cp, align 8, !dbg !12433
  %arrayidx37 = getelementptr inbounds i8, i8* %29, i64 3, !dbg !12433
  store i8 -1, i8* %arrayidx37, align 1, !dbg !12434
  %30 = load i32, i32* %col, align 4, !dbg !12435
  store i32 %30, i32* %retval, align 4, !dbg !12436
  br label %return, !dbg !12436

return:                                           ; preds = %cond.end33, %if.then
  %31 = load i32, i32* %retval, align 4, !dbg !12437
  ret i32 %31, !dbg !12437
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @mcol_mul(i32 %col1, i32 %col2, i32 %fac) #0 !dbg !12438 {
entry:
  %retval = alloca i32, align 4
  %col1.addr = alloca i32, align 4
  %col2.addr = alloca i32, align 4
  %fac.addr = alloca i32, align 4
  %cp1 = alloca i8*, align 8
  %cp2 = alloca i8*, align 8
  %cp = alloca i8*, align 8
  %mfac = alloca i32, align 4
  %col = alloca i32, align 4
  store i32 %col1, i32* %col1.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %col1.addr, metadata !12439, metadata !DIExpression()), !dbg !12440
  store i32 %col2, i32* %col2.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %col2.addr, metadata !12441, metadata !DIExpression()), !dbg !12442
  store i32 %fac, i32* %fac.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fac.addr, metadata !12443, metadata !DIExpression()), !dbg !12444
  call void @llvm.dbg.declare(metadata i8** %cp1, metadata !12445, metadata !DIExpression()), !dbg !12446
  call void @llvm.dbg.declare(metadata i8** %cp2, metadata !12447, metadata !DIExpression()), !dbg !12448
  call void @llvm.dbg.declare(metadata i8** %cp, metadata !12449, metadata !DIExpression()), !dbg !12450
  call void @llvm.dbg.declare(metadata i32* %mfac, metadata !12451, metadata !DIExpression()), !dbg !12452
  call void @llvm.dbg.declare(metadata i32* %col, metadata !12453, metadata !DIExpression()), !dbg !12454
  store i32 0, i32* %col, align 4, !dbg !12454
  %0 = load i32, i32* %fac.addr, align 4, !dbg !12455
  %cmp = icmp eq i32 %0, 0, !dbg !12457
  br i1 %cmp, label %if.then, label %if.end, !dbg !12458

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %col1.addr, align 4, !dbg !12459
  store i32 %1, i32* %retval, align 4, !dbg !12461
  br label %return, !dbg !12461

if.end:                                           ; preds = %entry
  %2 = load i32, i32* %fac.addr, align 4, !dbg !12462
  %sub = sub nsw i32 255, %2, !dbg !12463
  store i32 %sub, i32* %mfac, align 4, !dbg !12464
  %3 = bitcast i32* %col1.addr to i8*, !dbg !12465
  store i8* %3, i8** %cp1, align 8, !dbg !12466
  %4 = bitcast i32* %col2.addr to i8*, !dbg !12467
  store i8* %4, i8** %cp2, align 8, !dbg !12468
  %5 = bitcast i32* %col to i8*, !dbg !12469
  store i8* %5, i8** %cp, align 8, !dbg !12470
  %6 = load i32, i32* %mfac, align 4, !dbg !12471
  %7 = load i8*, i8** %cp1, align 8, !dbg !12472
  %arrayidx = getelementptr inbounds i8, i8* %7, i64 0, !dbg !12472
  %8 = load i8, i8* %arrayidx, align 1, !dbg !12472
  %conv = zext i8 %8 to i32, !dbg !12472
  %mul = mul nsw i32 %6, %conv, !dbg !12473
  %mul1 = mul nsw i32 %mul, 255, !dbg !12474
  %9 = load i32, i32* %fac.addr, align 4, !dbg !12475
  %10 = load i8*, i8** %cp2, align 8, !dbg !12476
  %arrayidx2 = getelementptr inbounds i8, i8* %10, i64 0, !dbg !12476
  %11 = load i8, i8* %arrayidx2, align 1, !dbg !12476
  %conv3 = zext i8 %11 to i32, !dbg !12476
  %mul4 = mul nsw i32 %9, %conv3, !dbg !12477
  %12 = load i8*, i8** %cp1, align 8, !dbg !12478
  %arrayidx5 = getelementptr inbounds i8, i8* %12, i64 0, !dbg !12478
  %13 = load i8, i8* %arrayidx5, align 1, !dbg !12478
  %conv6 = zext i8 %13 to i32, !dbg !12478
  %mul7 = mul nsw i32 %mul4, %conv6, !dbg !12479
  %add = add nsw i32 %mul1, %mul7, !dbg !12480
  %call = call i32 @divide_round_i(i32 %add, i32 65025), !dbg !12481
  %conv8 = trunc i32 %call to i8, !dbg !12481
  %14 = load i8*, i8** %cp, align 8, !dbg !12482
  %arrayidx9 = getelementptr inbounds i8, i8* %14, i64 0, !dbg !12482
  store i8 %conv8, i8* %arrayidx9, align 1, !dbg !12483
  %15 = load i32, i32* %mfac, align 4, !dbg !12484
  %16 = load i8*, i8** %cp1, align 8, !dbg !12485
  %arrayidx10 = getelementptr inbounds i8, i8* %16, i64 1, !dbg !12485
  %17 = load i8, i8* %arrayidx10, align 1, !dbg !12485
  %conv11 = zext i8 %17 to i32, !dbg !12485
  %mul12 = mul nsw i32 %15, %conv11, !dbg !12486
  %mul13 = mul nsw i32 %mul12, 255, !dbg !12487
  %18 = load i32, i32* %fac.addr, align 4, !dbg !12488
  %19 = load i8*, i8** %cp2, align 8, !dbg !12489
  %arrayidx14 = getelementptr inbounds i8, i8* %19, i64 1, !dbg !12489
  %20 = load i8, i8* %arrayidx14, align 1, !dbg !12489
  %conv15 = zext i8 %20 to i32, !dbg !12489
  %mul16 = mul nsw i32 %18, %conv15, !dbg !12490
  %21 = load i8*, i8** %cp1, align 8, !dbg !12491
  %arrayidx17 = getelementptr inbounds i8, i8* %21, i64 1, !dbg !12491
  %22 = load i8, i8* %arrayidx17, align 1, !dbg !12491
  %conv18 = zext i8 %22 to i32, !dbg !12491
  %mul19 = mul nsw i32 %mul16, %conv18, !dbg !12492
  %add20 = add nsw i32 %mul13, %mul19, !dbg !12493
  %call21 = call i32 @divide_round_i(i32 %add20, i32 65025), !dbg !12494
  %conv22 = trunc i32 %call21 to i8, !dbg !12494
  %23 = load i8*, i8** %cp, align 8, !dbg !12495
  %arrayidx23 = getelementptr inbounds i8, i8* %23, i64 1, !dbg !12495
  store i8 %conv22, i8* %arrayidx23, align 1, !dbg !12496
  %24 = load i32, i32* %mfac, align 4, !dbg !12497
  %25 = load i8*, i8** %cp1, align 8, !dbg !12498
  %arrayidx24 = getelementptr inbounds i8, i8* %25, i64 2, !dbg !12498
  %26 = load i8, i8* %arrayidx24, align 1, !dbg !12498
  %conv25 = zext i8 %26 to i32, !dbg !12498
  %mul26 = mul nsw i32 %24, %conv25, !dbg !12499
  %mul27 = mul nsw i32 %mul26, 255, !dbg !12500
  %27 = load i32, i32* %fac.addr, align 4, !dbg !12501
  %28 = load i8*, i8** %cp2, align 8, !dbg !12502
  %arrayidx28 = getelementptr inbounds i8, i8* %28, i64 2, !dbg !12502
  %29 = load i8, i8* %arrayidx28, align 1, !dbg !12502
  %conv29 = zext i8 %29 to i32, !dbg !12502
  %mul30 = mul nsw i32 %27, %conv29, !dbg !12503
  %30 = load i8*, i8** %cp1, align 8, !dbg !12504
  %arrayidx31 = getelementptr inbounds i8, i8* %30, i64 2, !dbg !12504
  %31 = load i8, i8* %arrayidx31, align 1, !dbg !12504
  %conv32 = zext i8 %31 to i32, !dbg !12504
  %mul33 = mul nsw i32 %mul30, %conv32, !dbg !12505
  %add34 = add nsw i32 %mul27, %mul33, !dbg !12506
  %call35 = call i32 @divide_round_i(i32 %add34, i32 65025), !dbg !12507
  %conv36 = trunc i32 %call35 to i8, !dbg !12507
  %32 = load i8*, i8** %cp, align 8, !dbg !12508
  %arrayidx37 = getelementptr inbounds i8, i8* %32, i64 2, !dbg !12508
  store i8 %conv36, i8* %arrayidx37, align 1, !dbg !12509
  %33 = load i8*, i8** %cp, align 8, !dbg !12510
  %arrayidx38 = getelementptr inbounds i8, i8* %33, i64 3, !dbg !12510
  store i8 -1, i8* %arrayidx38, align 1, !dbg !12511
  %34 = load i32, i32* %col, align 4, !dbg !12512
  store i32 %34, i32* %retval, align 4, !dbg !12513
  br label %return, !dbg !12513

return:                                           ; preds = %if.end, %if.then
  %35 = load i32, i32* %retval, align 4, !dbg !12514
  ret i32 %35, !dbg !12514
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @mcol_lighten(i32 %col1, i32 %col2, i32 %fac) #0 !dbg !12515 {
entry:
  %retval = alloca i32, align 4
  %col1.addr = alloca i32, align 4
  %col2.addr = alloca i32, align 4
  %fac.addr = alloca i32, align 4
  %cp1 = alloca i8*, align 8
  %cp2 = alloca i8*, align 8
  %cp = alloca i8*, align 8
  %mfac = alloca i32, align 4
  %col = alloca i32, align 4
  store i32 %col1, i32* %col1.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %col1.addr, metadata !12516, metadata !DIExpression()), !dbg !12517
  store i32 %col2, i32* %col2.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %col2.addr, metadata !12518, metadata !DIExpression()), !dbg !12519
  store i32 %fac, i32* %fac.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fac.addr, metadata !12520, metadata !DIExpression()), !dbg !12521
  call void @llvm.dbg.declare(metadata i8** %cp1, metadata !12522, metadata !DIExpression()), !dbg !12523
  call void @llvm.dbg.declare(metadata i8** %cp2, metadata !12524, metadata !DIExpression()), !dbg !12525
  call void @llvm.dbg.declare(metadata i8** %cp, metadata !12526, metadata !DIExpression()), !dbg !12527
  call void @llvm.dbg.declare(metadata i32* %mfac, metadata !12528, metadata !DIExpression()), !dbg !12529
  call void @llvm.dbg.declare(metadata i32* %col, metadata !12530, metadata !DIExpression()), !dbg !12531
  store i32 0, i32* %col, align 4, !dbg !12531
  %0 = load i32, i32* %fac.addr, align 4, !dbg !12532
  %cmp = icmp eq i32 %0, 0, !dbg !12534
  br i1 %cmp, label %if.then, label %if.else, !dbg !12535

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %col1.addr, align 4, !dbg !12536
  store i32 %1, i32* %retval, align 4, !dbg !12538
  br label %return, !dbg !12538

if.else:                                          ; preds = %entry
  %2 = load i32, i32* %fac.addr, align 4, !dbg !12539
  %cmp1 = icmp sge i32 %2, 255, !dbg !12541
  br i1 %cmp1, label %if.then2, label %if.end, !dbg !12542

if.then2:                                         ; preds = %if.else
  %3 = load i32, i32* %col2.addr, align 4, !dbg !12543
  store i32 %3, i32* %retval, align 4, !dbg !12545
  br label %return, !dbg !12545

if.end:                                           ; preds = %if.else
  br label %if.end3

if.end3:                                          ; preds = %if.end
  %4 = load i32, i32* %fac.addr, align 4, !dbg !12546
  %sub = sub nsw i32 255, %4, !dbg !12547
  store i32 %sub, i32* %mfac, align 4, !dbg !12548
  %5 = bitcast i32* %col1.addr to i8*, !dbg !12549
  store i8* %5, i8** %cp1, align 8, !dbg !12550
  %6 = bitcast i32* %col2.addr to i8*, !dbg !12551
  store i8* %6, i8** %cp2, align 8, !dbg !12552
  %7 = bitcast i32* %col to i8*, !dbg !12553
  store i8* %7, i8** %cp, align 8, !dbg !12554
  %8 = load i8*, i8** %cp1, align 8, !dbg !12555
  %call = call zeroext i8 @rgb_to_grayscale_byte(i8* %8), !dbg !12557
  %conv = zext i8 %call to i32, !dbg !12557
  %9 = load i8*, i8** %cp2, align 8, !dbg !12558
  %call4 = call zeroext i8 @rgb_to_grayscale_byte(i8* %9), !dbg !12559
  %conv5 = zext i8 %call4 to i32, !dbg !12559
  %cmp6 = icmp sgt i32 %conv, %conv5, !dbg !12560
  br i1 %cmp6, label %if.then8, label %if.end9, !dbg !12561

if.then8:                                         ; preds = %if.end3
  %10 = load i32, i32* %col1.addr, align 4, !dbg !12562
  store i32 %10, i32* %retval, align 4, !dbg !12564
  br label %return, !dbg !12564

if.end9:                                          ; preds = %if.end3
  %11 = load i32, i32* %mfac, align 4, !dbg !12565
  %12 = load i8*, i8** %cp1, align 8, !dbg !12566
  %arrayidx = getelementptr inbounds i8, i8* %12, i64 0, !dbg !12566
  %13 = load i8, i8* %arrayidx, align 1, !dbg !12566
  %conv10 = zext i8 %13 to i32, !dbg !12566
  %mul = mul nsw i32 %11, %conv10, !dbg !12567
  %14 = load i32, i32* %fac.addr, align 4, !dbg !12568
  %15 = load i8*, i8** %cp2, align 8, !dbg !12569
  %arrayidx11 = getelementptr inbounds i8, i8* %15, i64 0, !dbg !12569
  %16 = load i8, i8* %arrayidx11, align 1, !dbg !12569
  %conv12 = zext i8 %16 to i32, !dbg !12569
  %mul13 = mul nsw i32 %14, %conv12, !dbg !12570
  %add = add nsw i32 %mul, %mul13, !dbg !12571
  %call14 = call i32 @divide_round_i(i32 %add, i32 255), !dbg !12572
  %conv15 = trunc i32 %call14 to i8, !dbg !12572
  %17 = load i8*, i8** %cp, align 8, !dbg !12573
  %arrayidx16 = getelementptr inbounds i8, i8* %17, i64 0, !dbg !12573
  store i8 %conv15, i8* %arrayidx16, align 1, !dbg !12574
  %18 = load i32, i32* %mfac, align 4, !dbg !12575
  %19 = load i8*, i8** %cp1, align 8, !dbg !12576
  %arrayidx17 = getelementptr inbounds i8, i8* %19, i64 1, !dbg !12576
  %20 = load i8, i8* %arrayidx17, align 1, !dbg !12576
  %conv18 = zext i8 %20 to i32, !dbg !12576
  %mul19 = mul nsw i32 %18, %conv18, !dbg !12577
  %21 = load i32, i32* %fac.addr, align 4, !dbg !12578
  %22 = load i8*, i8** %cp2, align 8, !dbg !12579
  %arrayidx20 = getelementptr inbounds i8, i8* %22, i64 1, !dbg !12579
  %23 = load i8, i8* %arrayidx20, align 1, !dbg !12579
  %conv21 = zext i8 %23 to i32, !dbg !12579
  %mul22 = mul nsw i32 %21, %conv21, !dbg !12580
  %add23 = add nsw i32 %mul19, %mul22, !dbg !12581
  %call24 = call i32 @divide_round_i(i32 %add23, i32 255), !dbg !12582
  %conv25 = trunc i32 %call24 to i8, !dbg !12582
  %24 = load i8*, i8** %cp, align 8, !dbg !12583
  %arrayidx26 = getelementptr inbounds i8, i8* %24, i64 1, !dbg !12583
  store i8 %conv25, i8* %arrayidx26, align 1, !dbg !12584
  %25 = load i32, i32* %mfac, align 4, !dbg !12585
  %26 = load i8*, i8** %cp1, align 8, !dbg !12586
  %arrayidx27 = getelementptr inbounds i8, i8* %26, i64 2, !dbg !12586
  %27 = load i8, i8* %arrayidx27, align 1, !dbg !12586
  %conv28 = zext i8 %27 to i32, !dbg !12586
  %mul29 = mul nsw i32 %25, %conv28, !dbg !12587
  %28 = load i32, i32* %fac.addr, align 4, !dbg !12588
  %29 = load i8*, i8** %cp2, align 8, !dbg !12589
  %arrayidx30 = getelementptr inbounds i8, i8* %29, i64 2, !dbg !12589
  %30 = load i8, i8* %arrayidx30, align 1, !dbg !12589
  %conv31 = zext i8 %30 to i32, !dbg !12589
  %mul32 = mul nsw i32 %28, %conv31, !dbg !12590
  %add33 = add nsw i32 %mul29, %mul32, !dbg !12591
  %call34 = call i32 @divide_round_i(i32 %add33, i32 255), !dbg !12592
  %conv35 = trunc i32 %call34 to i8, !dbg !12592
  %31 = load i8*, i8** %cp, align 8, !dbg !12593
  %arrayidx36 = getelementptr inbounds i8, i8* %31, i64 2, !dbg !12593
  store i8 %conv35, i8* %arrayidx36, align 1, !dbg !12594
  %32 = load i8*, i8** %cp, align 8, !dbg !12595
  %arrayidx37 = getelementptr inbounds i8, i8* %32, i64 3, !dbg !12595
  store i8 -1, i8* %arrayidx37, align 1, !dbg !12596
  %33 = load i32, i32* %col, align 4, !dbg !12597
  store i32 %33, i32* %retval, align 4, !dbg !12598
  br label %return, !dbg !12598

return:                                           ; preds = %if.end9, %if.then8, %if.then2, %if.then
  %34 = load i32, i32* %retval, align 4, !dbg !12599
  ret i32 %34, !dbg !12599
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @mcol_darken(i32 %col1, i32 %col2, i32 %fac) #0 !dbg !12600 {
entry:
  %retval = alloca i32, align 4
  %col1.addr = alloca i32, align 4
  %col2.addr = alloca i32, align 4
  %fac.addr = alloca i32, align 4
  %cp1 = alloca i8*, align 8
  %cp2 = alloca i8*, align 8
  %cp = alloca i8*, align 8
  %mfac = alloca i32, align 4
  %col = alloca i32, align 4
  store i32 %col1, i32* %col1.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %col1.addr, metadata !12601, metadata !DIExpression()), !dbg !12602
  store i32 %col2, i32* %col2.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %col2.addr, metadata !12603, metadata !DIExpression()), !dbg !12604
  store i32 %fac, i32* %fac.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fac.addr, metadata !12605, metadata !DIExpression()), !dbg !12606
  call void @llvm.dbg.declare(metadata i8** %cp1, metadata !12607, metadata !DIExpression()), !dbg !12608
  call void @llvm.dbg.declare(metadata i8** %cp2, metadata !12609, metadata !DIExpression()), !dbg !12610
  call void @llvm.dbg.declare(metadata i8** %cp, metadata !12611, metadata !DIExpression()), !dbg !12612
  call void @llvm.dbg.declare(metadata i32* %mfac, metadata !12613, metadata !DIExpression()), !dbg !12614
  call void @llvm.dbg.declare(metadata i32* %col, metadata !12615, metadata !DIExpression()), !dbg !12616
  store i32 0, i32* %col, align 4, !dbg !12616
  %0 = load i32, i32* %fac.addr, align 4, !dbg !12617
  %cmp = icmp eq i32 %0, 0, !dbg !12619
  br i1 %cmp, label %if.then, label %if.else, !dbg !12620

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %col1.addr, align 4, !dbg !12621
  store i32 %1, i32* %retval, align 4, !dbg !12623
  br label %return, !dbg !12623

if.else:                                          ; preds = %entry
  %2 = load i32, i32* %fac.addr, align 4, !dbg !12624
  %cmp1 = icmp sge i32 %2, 255, !dbg !12626
  br i1 %cmp1, label %if.then2, label %if.end, !dbg !12627

if.then2:                                         ; preds = %if.else
  %3 = load i32, i32* %col2.addr, align 4, !dbg !12628
  store i32 %3, i32* %retval, align 4, !dbg !12630
  br label %return, !dbg !12630

if.end:                                           ; preds = %if.else
  br label %if.end3

if.end3:                                          ; preds = %if.end
  %4 = load i32, i32* %fac.addr, align 4, !dbg !12631
  %sub = sub nsw i32 255, %4, !dbg !12632
  store i32 %sub, i32* %mfac, align 4, !dbg !12633
  %5 = bitcast i32* %col1.addr to i8*, !dbg !12634
  store i8* %5, i8** %cp1, align 8, !dbg !12635
  %6 = bitcast i32* %col2.addr to i8*, !dbg !12636
  store i8* %6, i8** %cp2, align 8, !dbg !12637
  %7 = bitcast i32* %col to i8*, !dbg !12638
  store i8* %7, i8** %cp, align 8, !dbg !12639
  %8 = load i8*, i8** %cp1, align 8, !dbg !12640
  %call = call zeroext i8 @rgb_to_grayscale_byte(i8* %8), !dbg !12642
  %conv = zext i8 %call to i32, !dbg !12642
  %9 = load i8*, i8** %cp2, align 8, !dbg !12643
  %call4 = call zeroext i8 @rgb_to_grayscale_byte(i8* %9), !dbg !12644
  %conv5 = zext i8 %call4 to i32, !dbg !12644
  %cmp6 = icmp slt i32 %conv, %conv5, !dbg !12645
  br i1 %cmp6, label %if.then8, label %if.end9, !dbg !12646

if.then8:                                         ; preds = %if.end3
  %10 = load i32, i32* %col1.addr, align 4, !dbg !12647
  store i32 %10, i32* %retval, align 4, !dbg !12649
  br label %return, !dbg !12649

if.end9:                                          ; preds = %if.end3
  %11 = load i32, i32* %mfac, align 4, !dbg !12650
  %12 = load i8*, i8** %cp1, align 8, !dbg !12651
  %arrayidx = getelementptr inbounds i8, i8* %12, i64 0, !dbg !12651
  %13 = load i8, i8* %arrayidx, align 1, !dbg !12651
  %conv10 = zext i8 %13 to i32, !dbg !12651
  %mul = mul nsw i32 %11, %conv10, !dbg !12652
  %14 = load i32, i32* %fac.addr, align 4, !dbg !12653
  %15 = load i8*, i8** %cp2, align 8, !dbg !12654
  %arrayidx11 = getelementptr inbounds i8, i8* %15, i64 0, !dbg !12654
  %16 = load i8, i8* %arrayidx11, align 1, !dbg !12654
  %conv12 = zext i8 %16 to i32, !dbg !12654
  %mul13 = mul nsw i32 %14, %conv12, !dbg !12655
  %add = add nsw i32 %mul, %mul13, !dbg !12656
  %call14 = call i32 @divide_round_i(i32 %add, i32 255), !dbg !12657
  %conv15 = trunc i32 %call14 to i8, !dbg !12657
  %17 = load i8*, i8** %cp, align 8, !dbg !12658
  %arrayidx16 = getelementptr inbounds i8, i8* %17, i64 0, !dbg !12658
  store i8 %conv15, i8* %arrayidx16, align 1, !dbg !12659
  %18 = load i32, i32* %mfac, align 4, !dbg !12660
  %19 = load i8*, i8** %cp1, align 8, !dbg !12661
  %arrayidx17 = getelementptr inbounds i8, i8* %19, i64 1, !dbg !12661
  %20 = load i8, i8* %arrayidx17, align 1, !dbg !12661
  %conv18 = zext i8 %20 to i32, !dbg !12661
  %mul19 = mul nsw i32 %18, %conv18, !dbg !12662
  %21 = load i32, i32* %fac.addr, align 4, !dbg !12663
  %22 = load i8*, i8** %cp2, align 8, !dbg !12664
  %arrayidx20 = getelementptr inbounds i8, i8* %22, i64 1, !dbg !12664
  %23 = load i8, i8* %arrayidx20, align 1, !dbg !12664
  %conv21 = zext i8 %23 to i32, !dbg !12664
  %mul22 = mul nsw i32 %21, %conv21, !dbg !12665
  %add23 = add nsw i32 %mul19, %mul22, !dbg !12666
  %call24 = call i32 @divide_round_i(i32 %add23, i32 255), !dbg !12667
  %conv25 = trunc i32 %call24 to i8, !dbg !12667
  %24 = load i8*, i8** %cp, align 8, !dbg !12668
  %arrayidx26 = getelementptr inbounds i8, i8* %24, i64 1, !dbg !12668
  store i8 %conv25, i8* %arrayidx26, align 1, !dbg !12669
  %25 = load i32, i32* %mfac, align 4, !dbg !12670
  %26 = load i8*, i8** %cp1, align 8, !dbg !12671
  %arrayidx27 = getelementptr inbounds i8, i8* %26, i64 2, !dbg !12671
  %27 = load i8, i8* %arrayidx27, align 1, !dbg !12671
  %conv28 = zext i8 %27 to i32, !dbg !12671
  %mul29 = mul nsw i32 %25, %conv28, !dbg !12672
  %28 = load i32, i32* %fac.addr, align 4, !dbg !12673
  %29 = load i8*, i8** %cp2, align 8, !dbg !12674
  %arrayidx30 = getelementptr inbounds i8, i8* %29, i64 2, !dbg !12674
  %30 = load i8, i8* %arrayidx30, align 1, !dbg !12674
  %conv31 = zext i8 %30 to i32, !dbg !12674
  %mul32 = mul nsw i32 %28, %conv31, !dbg !12675
  %add33 = add nsw i32 %mul29, %mul32, !dbg !12676
  %call34 = call i32 @divide_round_i(i32 %add33, i32 255), !dbg !12677
  %conv35 = trunc i32 %call34 to i8, !dbg !12677
  %31 = load i8*, i8** %cp, align 8, !dbg !12678
  %arrayidx36 = getelementptr inbounds i8, i8* %31, i64 2, !dbg !12678
  store i8 %conv35, i8* %arrayidx36, align 1, !dbg !12679
  %32 = load i8*, i8** %cp, align 8, !dbg !12680
  %arrayidx37 = getelementptr inbounds i8, i8* %32, i64 3, !dbg !12680
  store i8 -1, i8* %arrayidx37, align 1, !dbg !12681
  %33 = load i32, i32* %col, align 4, !dbg !12682
  store i32 %33, i32* %retval, align 4, !dbg !12683
  br label %return, !dbg !12683

return:                                           ; preds = %if.end9, %if.then8, %if.then2, %if.then
  %34 = load i32, i32* %retval, align 4, !dbg !12684
  ret i32 %34, !dbg !12684
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @rgb_to_grayscale_byte(i8* %rgb) #0 !dbg !12685 {
entry:
  %rgb.addr = alloca i8*, align 8
  store i8* %rgb, i8** %rgb.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %rgb.addr, metadata !12689, metadata !DIExpression()), !dbg !12690
  %0 = load i8*, i8** %rgb.addr, align 8, !dbg !12691
  %arrayidx = getelementptr inbounds i8, i8* %0, i64 0, !dbg !12691
  %1 = load i8, i8* %arrayidx, align 1, !dbg !12691
  %conv = zext i8 %1 to i16, !dbg !12692
  %conv1 = zext i16 %conv to i32, !dbg !12692
  %mul = mul nsw i32 76, %conv1, !dbg !12693
  %2 = load i8*, i8** %rgb.addr, align 8, !dbg !12694
  %arrayidx2 = getelementptr inbounds i8, i8* %2, i64 1, !dbg !12694
  %3 = load i8, i8* %arrayidx2, align 1, !dbg !12694
  %conv3 = zext i8 %3 to i16, !dbg !12695
  %conv4 = zext i16 %conv3 to i32, !dbg !12695
  %mul5 = mul nsw i32 148, %conv4, !dbg !12696
  %add = add nsw i32 %mul, %mul5, !dbg !12697
  %4 = load i8*, i8** %rgb.addr, align 8, !dbg !12698
  %arrayidx6 = getelementptr inbounds i8, i8* %4, i64 2, !dbg !12698
  %5 = load i8, i8* %arrayidx6, align 1, !dbg !12698
  %conv7 = zext i8 %5 to i16, !dbg !12699
  %conv8 = zext i16 %conv7 to i32, !dbg !12699
  %mul9 = mul nsw i32 31, %conv8, !dbg !12700
  %add10 = add nsw i32 %add, %mul9, !dbg !12701
  %div = sdiv i32 %add10, 255, !dbg !12702
  %conv11 = trunc i32 %div to i8, !dbg !12703
  ret i8 %conv11, !dbg !12704
}

declare dso_local void @create_vgroups_from_armature(%struct.ReportList*, %struct.Scene*, %struct.Object*, %struct.Object*, i32, i8 zeroext) #2

declare dso_local i32 @WM_gesture_straightline_invoke(%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*) #2

declare dso_local i32 @WM_gesture_straightline_modal(%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*) #2

declare dso_local void @BKE_defvert_array_free_elems(%struct.MDeformVert*, i32) #2

declare dso_local i32 @RNA_int_get(%struct.PointerRNA*, i8*) #2

declare dso_local %struct.DerivedMesh* @mesh_get_derived_final(%struct.Scene*, %struct.Object*, i64) #2

; Function Attrs: noinline nounwind uwtable
define internal float @len_v2v2(float* %v1, float* %v2) #0 !dbg !12705 {
entry:
  %v1.addr = alloca float*, align 8
  %v2.addr = alloca float*, align 8
  %x = alloca float, align 4
  %y = alloca float, align 4
  store float* %v1, float** %v1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v1.addr, metadata !12706, metadata !DIExpression()), !dbg !12707
  store float* %v2, float** %v2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v2.addr, metadata !12708, metadata !DIExpression()), !dbg !12709
  call void @llvm.dbg.declare(metadata float* %x, metadata !12710, metadata !DIExpression()), !dbg !12711
  call void @llvm.dbg.declare(metadata float* %y, metadata !12712, metadata !DIExpression()), !dbg !12713
  %0 = load float*, float** %v1.addr, align 8, !dbg !12714
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !12714
  %1 = load float, float* %arrayidx, align 4, !dbg !12714
  %2 = load float*, float** %v2.addr, align 8, !dbg !12715
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !12715
  %3 = load float, float* %arrayidx1, align 4, !dbg !12715
  %sub = fsub float %1, %3, !dbg !12716
  store float %sub, float* %x, align 4, !dbg !12717
  %4 = load float*, float** %v1.addr, align 8, !dbg !12718
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !12718
  %5 = load float, float* %arrayidx2, align 4, !dbg !12718
  %6 = load float*, float** %v2.addr, align 8, !dbg !12719
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !12719
  %7 = load float, float* %arrayidx3, align 4, !dbg !12719
  %sub4 = fsub float %5, %7, !dbg !12720
  store float %sub4, float* %y, align 4, !dbg !12721
  %8 = load float, float* %x, align 4, !dbg !12722
  %9 = load float, float* %x, align 4, !dbg !12723
  %mul = fmul float %8, %9, !dbg !12724
  %10 = load float, float* %y, align 4, !dbg !12725
  %11 = load float, float* %y, align 4, !dbg !12726
  %mul5 = fmul float %10, %11, !dbg !12727
  %add = fadd float %mul, %mul5, !dbg !12728
  %call = call float @sqrtf(float %add) #5, !dbg !12729
  ret float %call, !dbg !12730
}

declare dso_local void @curvemapping_initialize(%struct.CurveMapping*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @gradientVertInit__mapFunc(i8* %userData, i32 %index, float* %co, float* %UNUSED_no_f, i16* %UNUSED_no_s) #0 !dbg !12731 {
entry:
  %userData.addr = alloca i8*, align 8
  %index.addr = alloca i32, align 4
  %co.addr = alloca float*, align 8
  %UNUSED_no_f.addr = alloca float*, align 8
  %UNUSED_no_s.addr = alloca i16*, align 8
  %grad_data = alloca %struct.DMGradient_userData*, align 8
  %me = alloca %struct.Mesh*, align 8
  %vs = alloca %struct.DMGradient_vertStore*, align 8
  %dv = alloca %struct.MDeformVert*, align 8
  %dw = alloca %struct.MDeformWeight*, align 8
  store i8* %userData, i8** %userData.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %userData.addr, metadata !12732, metadata !DIExpression()), !dbg !12733
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !12734, metadata !DIExpression()), !dbg !12735
  store float* %co, float** %co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %co.addr, metadata !12736, metadata !DIExpression()), !dbg !12737
  store float* %UNUSED_no_f, float** %UNUSED_no_f.addr, align 8
  call void @llvm.dbg.declare(metadata float** %UNUSED_no_f.addr, metadata !12738, metadata !DIExpression()), !dbg !12739
  store i16* %UNUSED_no_s, i16** %UNUSED_no_s.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %UNUSED_no_s.addr, metadata !12740, metadata !DIExpression()), !dbg !12741
  call void @llvm.dbg.declare(metadata %struct.DMGradient_userData** %grad_data, metadata !12742, metadata !DIExpression()), !dbg !12744
  %0 = load i8*, i8** %userData.addr, align 8, !dbg !12745
  %1 = bitcast i8* %0 to %struct.DMGradient_userData*, !dbg !12745
  store %struct.DMGradient_userData* %1, %struct.DMGradient_userData** %grad_data, align 8, !dbg !12744
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me, metadata !12746, metadata !DIExpression()), !dbg !12747
  %2 = load %struct.DMGradient_userData*, %struct.DMGradient_userData** %grad_data, align 8, !dbg !12748
  %me1 = getelementptr inbounds %struct.DMGradient_userData, %struct.DMGradient_userData* %2, i32 0, i32 2, !dbg !12749
  %3 = load %struct.Mesh*, %struct.Mesh** %me1, align 8, !dbg !12749
  store %struct.Mesh* %3, %struct.Mesh** %me, align 8, !dbg !12747
  %4 = load %struct.DMGradient_userData*, %struct.DMGradient_userData** %grad_data, align 8, !dbg !12750
  %use_select = getelementptr inbounds %struct.DMGradient_userData, %struct.DMGradient_userData* %4, i32 0, i32 11, !dbg !12752
  %5 = load i16, i16* %use_select, align 8, !dbg !12752
  %conv = sext i16 %5 to i32, !dbg !12750
  %cmp = icmp eq i32 %conv, 0, !dbg !12753
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !12754

lor.lhs.false:                                    ; preds = %entry
  %6 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !12755
  %mvert = getelementptr inbounds %struct.Mesh, %struct.Mesh* %6, i32 0, i32 15, !dbg !12756
  %7 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !12756
  %8 = load i32, i32* %index.addr, align 4, !dbg !12757
  %idxprom = sext i32 %8 to i64, !dbg !12755
  %arrayidx = getelementptr inbounds %struct.MVert, %struct.MVert* %7, i64 %idxprom, !dbg !12755
  %flag = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx, i32 0, i32 2, !dbg !12758
  %9 = load i8, i8* %flag, align 2, !dbg !12758
  %conv3 = zext i8 %9 to i32, !dbg !12755
  %and = and i32 %conv3, 1, !dbg !12759
  %tobool = icmp ne i32 %and, 0, !dbg !12759
  br i1 %tobool, label %if.then, label %if.end35, !dbg !12760

if.then:                                          ; preds = %lor.lhs.false, %entry
  %10 = load %struct.DMGradient_userData*, %struct.DMGradient_userData** %grad_data, align 8, !dbg !12761
  %vert_visit = getelementptr inbounds %struct.DMGradient_userData, %struct.DMGradient_userData* %10, i32 0, i32 10, !dbg !12761
  %11 = load i32*, i32** %vert_visit, align 8, !dbg !12761
  %12 = load i32, i32* %index.addr, align 4, !dbg !12761
  %shr = ashr i32 %12, 5, !dbg !12761
  %idxprom4 = sext i32 %shr to i64, !dbg !12761
  %arrayidx5 = getelementptr inbounds i32, i32* %11, i64 %idxprom4, !dbg !12761
  %13 = load i32, i32* %arrayidx5, align 4, !dbg !12761
  %14 = load i32, i32* %index.addr, align 4, !dbg !12761
  %and6 = and i32 %14, 31, !dbg !12761
  %shl = shl i32 1, %and6, !dbg !12761
  %and7 = and i32 %13, %shl, !dbg !12761
  %cmp8 = icmp eq i32 %and7, 0, !dbg !12764
  br i1 %cmp8, label %if.then10, label %if.end34, !dbg !12765

if.then10:                                        ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.DMGradient_vertStore** %vs, metadata !12766, metadata !DIExpression()), !dbg !12768
  %15 = load %struct.DMGradient_userData*, %struct.DMGradient_userData** %grad_data, align 8, !dbg !12769
  %vert_cache = getelementptr inbounds %struct.DMGradient_userData, %struct.DMGradient_userData* %15, i32 0, i32 9, !dbg !12770
  %16 = load %struct.DMGradient_vertStore*, %struct.DMGradient_vertStore** %vert_cache, align 8, !dbg !12770
  %17 = load i32, i32* %index.addr, align 4, !dbg !12771
  %idxprom11 = sext i32 %17 to i64, !dbg !12769
  %arrayidx12 = getelementptr inbounds %struct.DMGradient_vertStore, %struct.DMGradient_vertStore* %16, i64 %idxprom11, !dbg !12769
  store %struct.DMGradient_vertStore* %arrayidx12, %struct.DMGradient_vertStore** %vs, align 8, !dbg !12768
  %18 = load %struct.DMGradient_userData*, %struct.DMGradient_userData** %grad_data, align 8, !dbg !12772
  %ar = getelementptr inbounds %struct.DMGradient_userData, %struct.DMGradient_userData* %18, i32 0, i32 0, !dbg !12774
  %19 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !12774
  %20 = load float*, float** %co.addr, align 8, !dbg !12775
  %21 = load %struct.DMGradient_vertStore*, %struct.DMGradient_vertStore** %vs, align 8, !dbg !12776
  %sco = getelementptr inbounds %struct.DMGradient_vertStore, %struct.DMGradient_vertStore* %21, i32 0, i32 0, !dbg !12777
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %sco, i64 0, i64 0, !dbg !12776
  %call = call i32 @ED_view3d_project_float_object(%struct.ARegion* %19, float* %20, float* %arraydecay, i32 5), !dbg !12778
  %cmp13 = icmp eq i32 %call, 0, !dbg !12779
  br i1 %cmp13, label %if.then15, label %if.else30, !dbg !12780

if.then15:                                        ; preds = %if.then10
  call void @llvm.dbg.declare(metadata %struct.MDeformVert** %dv, metadata !12781, metadata !DIExpression()), !dbg !12783
  %22 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !12784
  %dvert = getelementptr inbounds %struct.Mesh, %struct.Mesh* %22, i32 0, i32 17, !dbg !12785
  %23 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert, align 8, !dbg !12785
  %24 = load i32, i32* %index.addr, align 4, !dbg !12786
  %idxprom16 = sext i32 %24 to i64, !dbg !12784
  %arrayidx17 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %23, i64 %idxprom16, !dbg !12784
  store %struct.MDeformVert* %arrayidx17, %struct.MDeformVert** %dv, align 8, !dbg !12783
  call void @llvm.dbg.declare(metadata %struct.MDeformWeight** %dw, metadata !12787, metadata !DIExpression()), !dbg !12788
  %25 = load %struct.MDeformVert*, %struct.MDeformVert** %dv, align 8, !dbg !12789
  %26 = load %struct.DMGradient_userData*, %struct.DMGradient_userData** %grad_data, align 8, !dbg !12790
  %def_nr = getelementptr inbounds %struct.DMGradient_userData, %struct.DMGradient_userData* %26, i32 0, i32 7, !dbg !12791
  %27 = load i32, i32* %def_nr, align 4, !dbg !12791
  %call18 = call %struct.MDeformWeight* @defvert_find_index(%struct.MDeformVert* %25, i32 %27), !dbg !12792
  store %struct.MDeformWeight* %call18, %struct.MDeformWeight** %dw, align 8, !dbg !12793
  %28 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !12794
  %tobool19 = icmp ne %struct.MDeformWeight* %28, null, !dbg !12794
  br i1 %tobool19, label %if.then20, label %if.else, !dbg !12796

if.then20:                                        ; preds = %if.then15
  %29 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !12797
  %weight = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %29, i32 0, i32 1, !dbg !12799
  %30 = load float, float* %weight, align 4, !dbg !12799
  %31 = load %struct.DMGradient_vertStore*, %struct.DMGradient_vertStore** %vs, align 8, !dbg !12800
  %weight_orig = getelementptr inbounds %struct.DMGradient_vertStore, %struct.DMGradient_vertStore* %31, i32 0, i32 1, !dbg !12801
  store float %30, float* %weight_orig, align 4, !dbg !12802
  %32 = load %struct.DMGradient_vertStore*, %struct.DMGradient_vertStore** %vs, align 8, !dbg !12803
  %flag21 = getelementptr inbounds %struct.DMGradient_vertStore, %struct.DMGradient_vertStore* %32, i32 0, i32 2, !dbg !12804
  store i32 1, i32* %flag21, align 4, !dbg !12805
  br label %if.end, !dbg !12806

if.else:                                          ; preds = %if.then15
  %33 = load %struct.DMGradient_vertStore*, %struct.DMGradient_vertStore** %vs, align 8, !dbg !12807
  %weight_orig22 = getelementptr inbounds %struct.DMGradient_vertStore, %struct.DMGradient_vertStore* %33, i32 0, i32 1, !dbg !12809
  store float 0.000000e+00, float* %weight_orig22, align 4, !dbg !12810
  %34 = load %struct.DMGradient_vertStore*, %struct.DMGradient_vertStore** %vs, align 8, !dbg !12811
  %flag23 = getelementptr inbounds %struct.DMGradient_vertStore, %struct.DMGradient_vertStore* %34, i32 0, i32 2, !dbg !12812
  store i32 0, i32* %flag23, align 4, !dbg !12813
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then20
  %35 = load i32, i32* %index.addr, align 4, !dbg !12814
  %and24 = and i32 %35, 31, !dbg !12814
  %shl25 = shl i32 1, %and24, !dbg !12814
  %36 = load %struct.DMGradient_userData*, %struct.DMGradient_userData** %grad_data, align 8, !dbg !12814
  %vert_visit26 = getelementptr inbounds %struct.DMGradient_userData, %struct.DMGradient_userData* %36, i32 0, i32 10, !dbg !12814
  %37 = load i32*, i32** %vert_visit26, align 8, !dbg !12814
  %38 = load i32, i32* %index.addr, align 4, !dbg !12814
  %shr27 = ashr i32 %38, 5, !dbg !12814
  %idxprom28 = sext i32 %shr27 to i64, !dbg !12814
  %arrayidx29 = getelementptr inbounds i32, i32* %37, i64 %idxprom28, !dbg !12814
  %39 = load i32, i32* %arrayidx29, align 4, !dbg !12814
  %or = or i32 %39, %shl25, !dbg !12814
  store i32 %or, i32* %arrayidx29, align 4, !dbg !12814
  %40 = load %struct.DMGradient_userData*, %struct.DMGradient_userData** %grad_data, align 8, !dbg !12815
  %41 = load i32, i32* %index.addr, align 4, !dbg !12816
  call void @gradientVert_update(%struct.DMGradient_userData* %40, i32 %41), !dbg !12817
  br label %if.end33, !dbg !12818

if.else30:                                        ; preds = %if.then10
  %42 = load %struct.DMGradient_vertStore*, %struct.DMGradient_vertStore** %vs, align 8, !dbg !12819
  %sco31 = getelementptr inbounds %struct.DMGradient_vertStore, %struct.DMGradient_vertStore* %42, i32 0, i32 0, !dbg !12821
  %arraydecay32 = getelementptr inbounds [2 x float], [2 x float]* %sco31, i64 0, i64 0, !dbg !12819
  call void @copy_v2_fl(float* %arraydecay32, float 0x47EFFFFFE0000000), !dbg !12822
  br label %if.end33

if.end33:                                         ; preds = %if.else30, %if.end
  br label %if.end34, !dbg !12823

if.end34:                                         ; preds = %if.end33, %if.then
  br label %if.end35, !dbg !12824

if.end35:                                         ; preds = %if.end34, %lor.lhs.false
  ret void, !dbg !12825
}

; Function Attrs: noinline nounwind uwtable
define internal void @gradientVertUpdate__mapFunc(i8* %userData, i32 %index, float* %UNUSED_co, float* %UNUSED_no_f, i16* %UNUSED_no_s) #0 !dbg !12826 {
entry:
  %userData.addr = alloca i8*, align 8
  %index.addr = alloca i32, align 4
  %UNUSED_co.addr = alloca float*, align 8
  %UNUSED_no_f.addr = alloca float*, align 8
  %UNUSED_no_s.addr = alloca i16*, align 8
  %grad_data = alloca %struct.DMGradient_userData*, align 8
  %me = alloca %struct.Mesh*, align 8
  %vs = alloca %struct.DMGradient_vertStore*, align 8
  store i8* %userData, i8** %userData.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %userData.addr, metadata !12827, metadata !DIExpression()), !dbg !12828
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !12829, metadata !DIExpression()), !dbg !12830
  store float* %UNUSED_co, float** %UNUSED_co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %UNUSED_co.addr, metadata !12831, metadata !DIExpression()), !dbg !12832
  store float* %UNUSED_no_f, float** %UNUSED_no_f.addr, align 8
  call void @llvm.dbg.declare(metadata float** %UNUSED_no_f.addr, metadata !12833, metadata !DIExpression()), !dbg !12834
  store i16* %UNUSED_no_s, i16** %UNUSED_no_s.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %UNUSED_no_s.addr, metadata !12835, metadata !DIExpression()), !dbg !12836
  call void @llvm.dbg.declare(metadata %struct.DMGradient_userData** %grad_data, metadata !12837, metadata !DIExpression()), !dbg !12838
  %0 = load i8*, i8** %userData.addr, align 8, !dbg !12839
  %1 = bitcast i8* %0 to %struct.DMGradient_userData*, !dbg !12839
  store %struct.DMGradient_userData* %1, %struct.DMGradient_userData** %grad_data, align 8, !dbg !12838
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me, metadata !12840, metadata !DIExpression()), !dbg !12841
  %2 = load %struct.DMGradient_userData*, %struct.DMGradient_userData** %grad_data, align 8, !dbg !12842
  %me1 = getelementptr inbounds %struct.DMGradient_userData, %struct.DMGradient_userData* %2, i32 0, i32 2, !dbg !12843
  %3 = load %struct.Mesh*, %struct.Mesh** %me1, align 8, !dbg !12843
  store %struct.Mesh* %3, %struct.Mesh** %me, align 8, !dbg !12841
  %4 = load %struct.DMGradient_userData*, %struct.DMGradient_userData** %grad_data, align 8, !dbg !12844
  %use_select = getelementptr inbounds %struct.DMGradient_userData, %struct.DMGradient_userData* %4, i32 0, i32 11, !dbg !12846
  %5 = load i16, i16* %use_select, align 8, !dbg !12846
  %conv = sext i16 %5 to i32, !dbg !12844
  %cmp = icmp eq i32 %conv, 0, !dbg !12847
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !12848

lor.lhs.false:                                    ; preds = %entry
  %6 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !12849
  %mvert = getelementptr inbounds %struct.Mesh, %struct.Mesh* %6, i32 0, i32 15, !dbg !12850
  %7 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !12850
  %8 = load i32, i32* %index.addr, align 4, !dbg !12851
  %idxprom = sext i32 %8 to i64, !dbg !12849
  %arrayidx = getelementptr inbounds %struct.MVert, %struct.MVert* %7, i64 %idxprom, !dbg !12849
  %flag = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx, i32 0, i32 2, !dbg !12852
  %9 = load i8, i8* %flag, align 2, !dbg !12852
  %conv3 = zext i8 %9 to i32, !dbg !12849
  %and = and i32 %conv3, 1, !dbg !12853
  %tobool = icmp ne i32 %and, 0, !dbg !12853
  br i1 %tobool, label %if.then, label %if.end10, !dbg !12854

if.then:                                          ; preds = %lor.lhs.false, %entry
  call void @llvm.dbg.declare(metadata %struct.DMGradient_vertStore** %vs, metadata !12855, metadata !DIExpression()), !dbg !12857
  %10 = load %struct.DMGradient_userData*, %struct.DMGradient_userData** %grad_data, align 8, !dbg !12858
  %vert_cache = getelementptr inbounds %struct.DMGradient_userData, %struct.DMGradient_userData* %10, i32 0, i32 9, !dbg !12859
  %11 = load %struct.DMGradient_vertStore*, %struct.DMGradient_vertStore** %vert_cache, align 8, !dbg !12859
  %12 = load i32, i32* %index.addr, align 4, !dbg !12860
  %idxprom4 = sext i32 %12 to i64, !dbg !12858
  %arrayidx5 = getelementptr inbounds %struct.DMGradient_vertStore, %struct.DMGradient_vertStore* %11, i64 %idxprom4, !dbg !12858
  store %struct.DMGradient_vertStore* %arrayidx5, %struct.DMGradient_vertStore** %vs, align 8, !dbg !12857
  %13 = load %struct.DMGradient_vertStore*, %struct.DMGradient_vertStore** %vs, align 8, !dbg !12861
  %sco = getelementptr inbounds %struct.DMGradient_vertStore, %struct.DMGradient_vertStore* %13, i32 0, i32 0, !dbg !12863
  %arrayidx6 = getelementptr inbounds [2 x float], [2 x float]* %sco, i64 0, i64 0, !dbg !12861
  %14 = load float, float* %arrayidx6, align 4, !dbg !12861
  %cmp7 = fcmp une float %14, 0x47EFFFFFE0000000, !dbg !12864
  br i1 %cmp7, label %if.then9, label %if.end, !dbg !12865

if.then9:                                         ; preds = %if.then
  %15 = load %struct.DMGradient_userData*, %struct.DMGradient_userData** %grad_data, align 8, !dbg !12866
  %16 = load i32, i32* %index.addr, align 4, !dbg !12868
  call void @gradientVert_update(%struct.DMGradient_userData* %15, i32 %16), !dbg !12869
  br label %if.end, !dbg !12870

if.end:                                           ; preds = %if.then9, %if.then
  br label %if.end10, !dbg !12871

if.end10:                                         ; preds = %if.end, %lor.lhs.false
  ret void, !dbg !12872
}

; Function Attrs: noinline nounwind uwtable
define internal void @gradientVert_update(%struct.DMGradient_userData* %grad_data, i32 %index) #0 !dbg !12873 {
entry:
  %grad_data.addr = alloca %struct.DMGradient_userData*, align 8
  %index.addr = alloca i32, align 4
  %me = alloca %struct.Mesh*, align 8
  %vs = alloca %struct.DMGradient_vertStore*, align 8
  %alpha = alloca float, align 4
  %dv = alloca %struct.MDeformVert*, align 8
  %dw = alloca %struct.MDeformWeight*, align 8
  %tool = alloca i32, align 4
  %testw = alloca float, align 4
  %dv30 = alloca %struct.MDeformVert*, align 8
  %dw35 = alloca %struct.MDeformWeight*, align 8
  %dw41 = alloca %struct.MDeformWeight*, align 8
  store %struct.DMGradient_userData* %grad_data, %struct.DMGradient_userData** %grad_data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DMGradient_userData** %grad_data.addr, metadata !12876, metadata !DIExpression()), !dbg !12877
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !12878, metadata !DIExpression()), !dbg !12879
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me, metadata !12880, metadata !DIExpression()), !dbg !12881
  %0 = load %struct.DMGradient_userData*, %struct.DMGradient_userData** %grad_data.addr, align 8, !dbg !12882
  %me1 = getelementptr inbounds %struct.DMGradient_userData, %struct.DMGradient_userData* %0, i32 0, i32 2, !dbg !12883
  %1 = load %struct.Mesh*, %struct.Mesh** %me1, align 8, !dbg !12883
  store %struct.Mesh* %1, %struct.Mesh** %me, align 8, !dbg !12881
  call void @llvm.dbg.declare(metadata %struct.DMGradient_vertStore** %vs, metadata !12884, metadata !DIExpression()), !dbg !12885
  %2 = load %struct.DMGradient_userData*, %struct.DMGradient_userData** %grad_data.addr, align 8, !dbg !12886
  %vert_cache = getelementptr inbounds %struct.DMGradient_userData, %struct.DMGradient_userData* %2, i32 0, i32 9, !dbg !12887
  %3 = load %struct.DMGradient_vertStore*, %struct.DMGradient_vertStore** %vert_cache, align 8, !dbg !12887
  %4 = load i32, i32* %index.addr, align 4, !dbg !12888
  %idxprom = sext i32 %4 to i64, !dbg !12886
  %arrayidx = getelementptr inbounds %struct.DMGradient_vertStore, %struct.DMGradient_vertStore* %3, i64 %idxprom, !dbg !12886
  store %struct.DMGradient_vertStore* %arrayidx, %struct.DMGradient_vertStore** %vs, align 8, !dbg !12885
  call void @llvm.dbg.declare(metadata float* %alpha, metadata !12889, metadata !DIExpression()), !dbg !12890
  %5 = load %struct.DMGradient_userData*, %struct.DMGradient_userData** %grad_data.addr, align 8, !dbg !12891
  %type = getelementptr inbounds %struct.DMGradient_userData, %struct.DMGradient_userData* %5, i32 0, i32 12, !dbg !12893
  %6 = load i16, i16* %type, align 2, !dbg !12893
  %conv = sext i16 %6 to i32, !dbg !12891
  %cmp = icmp eq i32 %conv, 0, !dbg !12894
  br i1 %cmp, label %if.then, label %if.else, !dbg !12895

if.then:                                          ; preds = %entry
  %7 = load %struct.DMGradient_vertStore*, %struct.DMGradient_vertStore** %vs, align 8, !dbg !12896
  %sco = getelementptr inbounds %struct.DMGradient_vertStore, %struct.DMGradient_vertStore* %7, i32 0, i32 0, !dbg !12898
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %sco, i64 0, i64 0, !dbg !12896
  %8 = load %struct.DMGradient_userData*, %struct.DMGradient_userData** %grad_data.addr, align 8, !dbg !12899
  %sco_start = getelementptr inbounds %struct.DMGradient_userData, %struct.DMGradient_userData* %8, i32 0, i32 4, !dbg !12900
  %9 = load float*, float** %sco_start, align 8, !dbg !12900
  %10 = load %struct.DMGradient_userData*, %struct.DMGradient_userData** %grad_data.addr, align 8, !dbg !12901
  %sco_end = getelementptr inbounds %struct.DMGradient_userData, %struct.DMGradient_userData* %10, i32 0, i32 5, !dbg !12902
  %11 = load float*, float** %sco_end, align 8, !dbg !12902
  %call = call float @line_point_factor_v2(float* %arraydecay, float* %9, float* %11), !dbg !12903
  store float %call, float* %alpha, align 4, !dbg !12904
  br label %if.end, !dbg !12905

if.else:                                          ; preds = %entry
  %12 = load %struct.DMGradient_userData*, %struct.DMGradient_userData** %grad_data.addr, align 8, !dbg !12906
  %sco_start3 = getelementptr inbounds %struct.DMGradient_userData, %struct.DMGradient_userData* %12, i32 0, i32 4, !dbg !12908
  %13 = load float*, float** %sco_start3, align 8, !dbg !12908
  %14 = load %struct.DMGradient_vertStore*, %struct.DMGradient_vertStore** %vs, align 8, !dbg !12909
  %sco4 = getelementptr inbounds %struct.DMGradient_vertStore, %struct.DMGradient_vertStore* %14, i32 0, i32 0, !dbg !12910
  %arraydecay5 = getelementptr inbounds [2 x float], [2 x float]* %sco4, i64 0, i64 0, !dbg !12909
  %call6 = call float @len_v2v2(float* %13, float* %arraydecay5), !dbg !12911
  %15 = load %struct.DMGradient_userData*, %struct.DMGradient_userData** %grad_data.addr, align 8, !dbg !12912
  %sco_line_div = getelementptr inbounds %struct.DMGradient_userData, %struct.DMGradient_userData* %15, i32 0, i32 6, !dbg !12913
  %16 = load float, float* %sco_line_div, align 8, !dbg !12913
  %mul = fmul float %call6, %16, !dbg !12914
  store float %mul, float* %alpha, align 4, !dbg !12915
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %17 = load %struct.DMGradient_userData*, %struct.DMGradient_userData** %grad_data.addr, align 8, !dbg !12916
  %brush = getelementptr inbounds %struct.DMGradient_userData, %struct.DMGradient_userData* %17, i32 0, i32 3, !dbg !12917
  %18 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !12917
  %19 = load float, float* %alpha, align 4, !dbg !12918
  %call7 = call float @BKE_brush_curve_strength_clamp(%struct.Brush* %18, float %19, float 1.000000e+00), !dbg !12919
  store float %call7, float* %alpha, align 4, !dbg !12920
  %20 = load float, float* %alpha, align 4, !dbg !12921
  %cmp8 = fcmp une float %20, 0.000000e+00, !dbg !12923
  br i1 %cmp8, label %if.then10, label %if.else29, !dbg !12924

if.then10:                                        ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.MDeformVert** %dv, metadata !12925, metadata !DIExpression()), !dbg !12927
  %21 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !12928
  %dvert = getelementptr inbounds %struct.Mesh, %struct.Mesh* %21, i32 0, i32 17, !dbg !12929
  %22 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert, align 8, !dbg !12929
  %23 = load i32, i32* %index.addr, align 4, !dbg !12930
  %idxprom11 = sext i32 %23 to i64, !dbg !12928
  %arrayidx12 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %22, i64 %idxprom11, !dbg !12928
  store %struct.MDeformVert* %arrayidx12, %struct.MDeformVert** %dv, align 8, !dbg !12927
  call void @llvm.dbg.declare(metadata %struct.MDeformWeight** %dw, metadata !12931, metadata !DIExpression()), !dbg !12932
  %24 = load %struct.MDeformVert*, %struct.MDeformVert** %dv, align 8, !dbg !12933
  %25 = load %struct.DMGradient_userData*, %struct.DMGradient_userData** %grad_data.addr, align 8, !dbg !12934
  %def_nr = getelementptr inbounds %struct.DMGradient_userData, %struct.DMGradient_userData* %25, i32 0, i32 7, !dbg !12935
  %26 = load i32, i32* %def_nr, align 4, !dbg !12935
  %call13 = call %struct.MDeformWeight* @defvert_verify_index(%struct.MDeformVert* %24, i32 %26), !dbg !12936
  store %struct.MDeformWeight* %call13, %struct.MDeformWeight** %dw, align 8, !dbg !12932
  call void @llvm.dbg.declare(metadata i32* %tool, metadata !12937, metadata !DIExpression()), !dbg !12938
  %27 = load %struct.DMGradient_userData*, %struct.DMGradient_userData** %grad_data.addr, align 8, !dbg !12939
  %brush14 = getelementptr inbounds %struct.DMGradient_userData, %struct.DMGradient_userData* %27, i32 0, i32 3, !dbg !12940
  %28 = load %struct.Brush*, %struct.Brush** %brush14, align 8, !dbg !12940
  %vertexpaint_tool = getelementptr inbounds %struct.Brush, %struct.Brush* %28, i32 0, i32 35, !dbg !12941
  %29 = load i8, i8* %vertexpaint_tool, align 1, !dbg !12941
  %conv15 = zext i8 %29 to i32, !dbg !12939
  store i32 %conv15, i32* %tool, align 4, !dbg !12938
  call void @llvm.dbg.declare(metadata float* %testw, metadata !12942, metadata !DIExpression()), !dbg !12943
  %30 = load i32, i32* %tool, align 4, !dbg !12944
  %31 = load %struct.DMGradient_vertStore*, %struct.DMGradient_vertStore** %vs, align 8, !dbg !12945
  %weight_orig = getelementptr inbounds %struct.DMGradient_vertStore, %struct.DMGradient_vertStore* %31, i32 0, i32 1, !dbg !12946
  %32 = load float, float* %weight_orig, align 4, !dbg !12946
  %33 = load %struct.DMGradient_userData*, %struct.DMGradient_userData** %grad_data.addr, align 8, !dbg !12947
  %weightpaint = getelementptr inbounds %struct.DMGradient_userData, %struct.DMGradient_userData* %33, i32 0, i32 13, !dbg !12948
  %34 = load float, float* %weightpaint, align 4, !dbg !12948
  %35 = load float, float* %alpha, align 4, !dbg !12949
  %36 = load %struct.DMGradient_userData*, %struct.DMGradient_userData** %grad_data.addr, align 8, !dbg !12950
  %brush16 = getelementptr inbounds %struct.DMGradient_userData, %struct.DMGradient_userData* %36, i32 0, i32 3, !dbg !12951
  %37 = load %struct.Brush*, %struct.Brush** %brush16, align 8, !dbg !12951
  %alpha17 = getelementptr inbounds %struct.Brush, %struct.Brush* %37, i32 0, i32 26, !dbg !12952
  %38 = load float, float* %alpha17, align 8, !dbg !12952
  %mul18 = fmul float %35, %38, !dbg !12953
  %call19 = call float @wpaint_blend_tool(i32 %30, float %32, float %34, float %mul18), !dbg !12954
  store float %call19, float* %testw, align 4, !dbg !12955
  %39 = load float, float* %testw, align 4, !dbg !12956
  %cmp20 = fcmp olt float %39, 0.000000e+00, !dbg !12956
  br i1 %cmp20, label %if.then22, label %if.else23, !dbg !12959

if.then22:                                        ; preds = %if.then10
  store float 0.000000e+00, float* %testw, align 4, !dbg !12956
  br label %if.end28, !dbg !12956

if.else23:                                        ; preds = %if.then10
  %40 = load float, float* %testw, align 4, !dbg !12960
  %cmp24 = fcmp ogt float %40, 1.000000e+00, !dbg !12960
  br i1 %cmp24, label %if.then26, label %if.end27, !dbg !12956

if.then26:                                        ; preds = %if.else23
  store float 1.000000e+00, float* %testw, align 4, !dbg !12960
  br label %if.end27, !dbg !12960

if.end27:                                         ; preds = %if.then26, %if.else23
  br label %if.end28

if.end28:                                         ; preds = %if.end27, %if.then22
  %41 = load float, float* %testw, align 4, !dbg !12962
  %42 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !12963
  %weight = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %42, i32 0, i32 1, !dbg !12964
  store float %41, float* %weight, align 4, !dbg !12965
  br label %if.end48, !dbg !12966

if.else29:                                        ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.MDeformVert** %dv30, metadata !12967, metadata !DIExpression()), !dbg !12969
  %43 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !12970
  %dvert31 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %43, i32 0, i32 17, !dbg !12971
  %44 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert31, align 8, !dbg !12971
  %45 = load i32, i32* %index.addr, align 4, !dbg !12972
  %idxprom32 = sext i32 %45 to i64, !dbg !12970
  %arrayidx33 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %44, i64 %idxprom32, !dbg !12970
  store %struct.MDeformVert* %arrayidx33, %struct.MDeformVert** %dv30, align 8, !dbg !12969
  %46 = load %struct.DMGradient_vertStore*, %struct.DMGradient_vertStore** %vs, align 8, !dbg !12973
  %flag = getelementptr inbounds %struct.DMGradient_vertStore, %struct.DMGradient_vertStore* %46, i32 0, i32 2, !dbg !12975
  %47 = load i32, i32* %flag, align 4, !dbg !12975
  %and = and i32 %47, 1, !dbg !12976
  %tobool = icmp ne i32 %and, 0, !dbg !12976
  br i1 %tobool, label %if.then34, label %if.else40, !dbg !12977

if.then34:                                        ; preds = %if.else29
  call void @llvm.dbg.declare(metadata %struct.MDeformWeight** %dw35, metadata !12978, metadata !DIExpression()), !dbg !12980
  %48 = load %struct.MDeformVert*, %struct.MDeformVert** %dv30, align 8, !dbg !12981
  %49 = load %struct.DMGradient_userData*, %struct.DMGradient_userData** %grad_data.addr, align 8, !dbg !12982
  %def_nr36 = getelementptr inbounds %struct.DMGradient_userData, %struct.DMGradient_userData* %49, i32 0, i32 7, !dbg !12983
  %50 = load i32, i32* %def_nr36, align 4, !dbg !12983
  %call37 = call %struct.MDeformWeight* @defvert_find_index(%struct.MDeformVert* %48, i32 %50), !dbg !12984
  store %struct.MDeformWeight* %call37, %struct.MDeformWeight** %dw35, align 8, !dbg !12980
  %51 = load %struct.DMGradient_vertStore*, %struct.DMGradient_vertStore** %vs, align 8, !dbg !12985
  %weight_orig38 = getelementptr inbounds %struct.DMGradient_vertStore, %struct.DMGradient_vertStore* %51, i32 0, i32 1, !dbg !12986
  %52 = load float, float* %weight_orig38, align 4, !dbg !12986
  %53 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw35, align 8, !dbg !12987
  %weight39 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %53, i32 0, i32 1, !dbg !12988
  store float %52, float* %weight39, align 4, !dbg !12989
  br label %if.end47, !dbg !12990

if.else40:                                        ; preds = %if.else29
  call void @llvm.dbg.declare(metadata %struct.MDeformWeight** %dw41, metadata !12991, metadata !DIExpression()), !dbg !12993
  %54 = load %struct.MDeformVert*, %struct.MDeformVert** %dv30, align 8, !dbg !12994
  %55 = load %struct.DMGradient_userData*, %struct.DMGradient_userData** %grad_data.addr, align 8, !dbg !12995
  %def_nr42 = getelementptr inbounds %struct.DMGradient_userData, %struct.DMGradient_userData* %55, i32 0, i32 7, !dbg !12996
  %56 = load i32, i32* %def_nr42, align 4, !dbg !12996
  %call43 = call %struct.MDeformWeight* @defvert_find_index(%struct.MDeformVert* %54, i32 %56), !dbg !12997
  store %struct.MDeformWeight* %call43, %struct.MDeformWeight** %dw41, align 8, !dbg !12993
  %57 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw41, align 8, !dbg !12998
  %tobool44 = icmp ne %struct.MDeformWeight* %57, null, !dbg !12998
  br i1 %tobool44, label %if.then45, label %if.end46, !dbg !13000

if.then45:                                        ; preds = %if.else40
  %58 = load %struct.MDeformVert*, %struct.MDeformVert** %dv30, align 8, !dbg !13001
  %59 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw41, align 8, !dbg !13003
  call void @defvert_remove_group(%struct.MDeformVert* %58, %struct.MDeformWeight* %59), !dbg !13004
  br label %if.end46, !dbg !13005

if.end46:                                         ; preds = %if.then45, %if.else40
  br label %if.end47

if.end47:                                         ; preds = %if.end46, %if.then34
  br label %if.end48

if.end48:                                         ; preds = %if.end47, %if.end28
  ret void, !dbg !13006
}

; Function Attrs: noinline nounwind uwtable
define internal void @copy_v2_fl(float* %r, float %f) #0 !dbg !13007 {
entry:
  %r.addr = alloca float*, align 8
  %f.addr = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !13010, metadata !DIExpression()), !dbg !13011
  store float %f, float* %f.addr, align 4
  call void @llvm.dbg.declare(metadata float* %f.addr, metadata !13012, metadata !DIExpression()), !dbg !13013
  %0 = load float, float* %f.addr, align 4, !dbg !13014
  %1 = load float*, float** %r.addr, align 8, !dbg !13015
  %arrayidx = getelementptr inbounds float, float* %1, i64 0, !dbg !13015
  store float %0, float* %arrayidx, align 4, !dbg !13016
  %2 = load float, float* %f.addr, align 4, !dbg !13017
  %3 = load float*, float** %r.addr, align 8, !dbg !13018
  %arrayidx1 = getelementptr inbounds float, float* %3, i64 1, !dbg !13018
  store float %2, float* %arrayidx1, align 4, !dbg !13019
  ret void, !dbg !13020
}

declare dso_local float @line_point_factor_v2(float*, float*, float*) #2

declare dso_local void @defvert_remove_group(%struct.MDeformVert*, %struct.MDeformWeight*) #2

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind willreturn }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.dbg.cu = !{!2758}
!llvm.module.flags = !{!3432, !3433, !3434}
!llvm.ident = !{!3435}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "type_items", scope: !2, file: !3, line: 3151, type: !3423, isLocal: true, isDefinition: true)
!2 = distinct !DISubprogram(name: "PAINT_OT_weight_from_bones", scope: !3, file: !3, line: 3149, type: !4, scopeLine: 3150, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2758, retainedNodes: !3422)
!3 = !DIFile(filename: "blender/source/blender/editors/sculpt_paint/paint_vertex.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4 = !DISubroutineType(types: !5)
!5 = !{null, !6}
!6 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!7 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmOperatorType", file: !8, line: 568, baseType: !9)
!8 = !DIFile(filename: "blender/source/blender/windowmanager/WM_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmOperatorType", file: !8, line: 508, size: 1536, elements: !10)
!10 = !{!11, !15, !16, !17, !18, !2684, !2688, !2694, !2698, !2699, !2703, !2704, !2705, !2706, !2710, !2711, !2726, !2727, !2731, !2757}
!11 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !9, file: !8, line: 509, baseType: !12, size: 64)
!12 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13, size: 64)
!13 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !14)
!14 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !9, file: !8, line: 510, baseType: !12, size: 64, offset: 64)
!16 = !DIDerivedType(tag: DW_TAG_member, name: "translation_context", scope: !9, file: !8, line: 511, baseType: !12, size: 64, offset: 128)
!17 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !9, file: !8, line: 512, baseType: !12, size: 64, offset: 192)
!18 = !DIDerivedType(tag: DW_TAG_member, name: "exec", scope: !9, file: !8, line: 518, baseType: !19, size: 64, offset: 256)
!19 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !20, size: 64)
!20 = !DISubroutineType(types: !21)
!21 = !{!22, !23, !26}
!22 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!23 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !24, size: 64)
!24 = !DICompositeType(tag: DW_TAG_structure_type, name: "bContext", file: !25, line: 44, flags: DIFlagFwdDecl)
!25 = !DIFile(filename: "blender/source/blender/makesrna/RNA_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!26 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !27, size: 64)
!27 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmOperator", file: !28, line: 328, size: 1344, elements: !29)
!28 = !DIFile(filename: "blender/source/blender/makesdna/DNA_windowmanager_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!29 = !{!30, !31, !32, !36, !68, !70, !71, !72, !84, !2677, !2678, !2679, !2682, !2683}
!30 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !27, file: !28, line: 329, baseType: !26, size: 64)
!31 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !27, file: !28, line: 329, baseType: !26, size: 64, offset: 64)
!32 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !27, file: !28, line: 332, baseType: !33, size: 512, offset: 128)
!33 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 512, elements: !34)
!34 = !{!35}
!35 = !DISubrange(count: 64)
!36 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !27, file: !28, line: 333, baseType: !37, size: 64, offset: 640)
!37 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !38, size: 64)
!38 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDProperty", file: !39, line: 75, baseType: !40)
!39 = !DIFile(filename: "blender/source/blender/makesdna/DNA_ID.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!40 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDProperty", file: !39, line: 62, size: 1024, elements: !41)
!41 = !{!42, !44, !45, !46, !47, !49, !50, !51, !66, !67}
!42 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !40, file: !39, line: 63, baseType: !43, size: 64)
!43 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !40, size: 64)
!44 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !40, file: !39, line: 63, baseType: !43, size: 64, offset: 64)
!45 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !40, file: !39, line: 64, baseType: !14, size: 8, offset: 128)
!46 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !40, file: !39, line: 64, baseType: !14, size: 8, offset: 136)
!47 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !40, file: !39, line: 65, baseType: !48, size: 16, offset: 144)
!48 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!49 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !40, file: !39, line: 66, baseType: !33, size: 512, offset: 160)
!50 = !DIDerivedType(tag: DW_TAG_member, name: "saved", scope: !40, file: !39, line: 67, baseType: !22, size: 32, offset: 672)
!51 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !40, file: !39, line: 69, baseType: !52, size: 256, offset: 704)
!52 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDPropertyData", file: !39, line: 60, baseType: !53)
!53 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDPropertyData", file: !39, line: 48, size: 256, elements: !54)
!54 = !{!55, !57, !64, !65}
!55 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !53, file: !39, line: 49, baseType: !56, size: 64)
!56 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!57 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !53, file: !39, line: 58, baseType: !58, size: 128, offset: 64)
!58 = !DIDerivedType(tag: DW_TAG_typedef, name: "ListBase", file: !59, line: 71, baseType: !60)
!59 = !DIFile(filename: "blender/source/blender/makesdna/DNA_listBase.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!60 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ListBase", file: !59, line: 69, size: 128, elements: !61)
!61 = !{!62, !63}
!62 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !60, file: !59, line: 70, baseType: !56, size: 64)
!63 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !60, file: !59, line: 70, baseType: !56, size: 64, offset: 64)
!64 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !53, file: !39, line: 59, baseType: !22, size: 32, offset: 192)
!65 = !DIDerivedType(tag: DW_TAG_member, name: "val2", scope: !53, file: !39, line: 59, baseType: !22, size: 32, offset: 224)
!66 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !40, file: !39, line: 70, baseType: !22, size: 32, offset: 960)
!67 = !DIDerivedType(tag: DW_TAG_member, name: "totallen", scope: !40, file: !39, line: 74, baseType: !22, size: 32, offset: 992)
!68 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !27, file: !28, line: 336, baseType: !69, size: 64, offset: 704)
!69 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9, size: 64)
!70 = !DIDerivedType(tag: DW_TAG_member, name: "customdata", scope: !27, file: !28, line: 337, baseType: !56, size: 64, offset: 768)
!71 = !DIDerivedType(tag: DW_TAG_member, name: "py_instance", scope: !27, file: !28, line: 338, baseType: !56, size: 64, offset: 832)
!72 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !27, file: !28, line: 340, baseType: !73, size: 64, offset: 896)
!73 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !74, size: 64)
!74 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PointerRNA", file: !25, line: 55, size: 192, elements: !75)
!75 = !{!76, !80, !83}
!76 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !74, file: !25, line: 58, baseType: !77, size: 64)
!77 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !74, file: !25, line: 56, size: 64, elements: !78)
!78 = !{!79}
!79 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !77, file: !25, line: 57, baseType: !56, size: 64)
!80 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !74, file: !25, line: 60, baseType: !81, size: 64, offset: 64)
!81 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !82, size: 64)
!82 = !DICompositeType(tag: DW_TAG_structure_type, name: "StructRNA", file: !25, line: 41, flags: DIFlagFwdDecl)
!83 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !74, file: !25, line: 61, baseType: !56, size: 64, offset: 128)
!84 = !DIDerivedType(tag: DW_TAG_member, name: "reports", scope: !27, file: !28, line: 341, baseType: !85, size: 64, offset: 960)
!85 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !86, size: 64)
!86 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ReportList", file: !28, line: 106, size: 320, elements: !87)
!87 = !{!88, !89, !90, !91, !92, !93}
!88 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !86, file: !28, line: 107, baseType: !58, size: 128)
!89 = !DIDerivedType(tag: DW_TAG_member, name: "printlevel", scope: !86, file: !28, line: 108, baseType: !22, size: 32, offset: 128)
!90 = !DIDerivedType(tag: DW_TAG_member, name: "storelevel", scope: !86, file: !28, line: 109, baseType: !22, size: 32, offset: 160)
!91 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !86, file: !28, line: 110, baseType: !22, size: 32, offset: 192)
!92 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !86, file: !28, line: 110, baseType: !22, size: 32, offset: 224)
!93 = !DIDerivedType(tag: DW_TAG_member, name: "reporttimer", scope: !86, file: !28, line: 111, baseType: !94, size: 64, offset: 256)
!94 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !95, size: 64)
!95 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmTimer", file: !8, line: 490, size: 768, elements: !96)
!96 = !{!97, !98, !99, !2668, !2669, !2670, !2671, !2672, !2673, !2674, !2675, !2676}
!97 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !95, file: !8, line: 491, baseType: !94, size: 64)
!98 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !95, file: !8, line: 491, baseType: !94, size: 64, offset: 64)
!99 = !DIDerivedType(tag: DW_TAG_member, name: "win", scope: !95, file: !8, line: 493, baseType: !100, size: 64, offset: 128)
!100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !101, size: 64)
!101 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmWindow", file: !28, line: 169, size: 2048, elements: !102)
!102 = !{!103, !104, !105, !106, !2586, !2587, !2588, !2589, !2590, !2591, !2592, !2593, !2594, !2595, !2596, !2597, !2598, !2599, !2600, !2601, !2602, !2603, !2643, !2646, !2660, !2661, !2662, !2663, !2664, !2665, !2666, !2667}
!103 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !101, file: !28, line: 170, baseType: !100, size: 64)
!104 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !101, file: !28, line: 170, baseType: !100, size: 64, offset: 64)
!105 = !DIDerivedType(tag: DW_TAG_member, name: "ghostwin", scope: !101, file: !28, line: 172, baseType: !56, size: 64, offset: 128)
!106 = !DIDerivedType(tag: DW_TAG_member, name: "screen", scope: !101, file: !28, line: 174, baseType: !107, size: 64, offset: 192)
!107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !108, size: 64)
!108 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bScreen", file: !109, line: 49, size: 1984, elements: !110)
!109 = !DIFile(filename: "blender/source/blender/makesdna/DNA_screen_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!110 = !{!111, !147, !148, !149, !150, !151, !2569, !2570, !2571, !2572, !2573, !2574, !2575, !2576, !2577, !2578, !2579, !2580, !2581, !2582, !2583, !2584, !2585}
!111 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !108, file: !109, line: 50, baseType: !112, size: 960)
!112 = !DIDerivedType(tag: DW_TAG_typedef, name: "ID", file: !39, line: 130, baseType: !113)
!113 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ID", file: !39, line: 117, size: 960, elements: !114)
!114 = !{!115, !116, !117, !119, !138, !142, !143, !144, !145, !146}
!115 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !113, file: !39, line: 118, baseType: !56, size: 64)
!116 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !113, file: !39, line: 118, baseType: !56, size: 64, offset: 64)
!117 = !DIDerivedType(tag: DW_TAG_member, name: "newid", scope: !113, file: !39, line: 119, baseType: !118, size: 64, offset: 128)
!118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !113, size: 64)
!119 = !DIDerivedType(tag: DW_TAG_member, name: "lib", scope: !113, file: !39, line: 120, baseType: !120, size: 64, offset: 192)
!120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !121, size: 64)
!121 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Library", file: !39, line: 136, size: 17600, elements: !122)
!122 = !{!123, !124, !126, !129, !133, !134, !135}
!123 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !121, file: !39, line: 137, baseType: !112, size: 960)
!124 = !DIDerivedType(tag: DW_TAG_member, name: "idblock", scope: !121, file: !39, line: 138, baseType: !125, size: 64, offset: 960)
!125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !112, size: 64)
!126 = !DIDerivedType(tag: DW_TAG_member, name: "filedata", scope: !121, file: !39, line: 139, baseType: !127, size: 64, offset: 1024)
!127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !128, size: 64)
!128 = !DICompositeType(tag: DW_TAG_structure_type, name: "FileData", file: !39, line: 43, flags: DIFlagFwdDecl)
!129 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !121, file: !39, line: 140, baseType: !130, size: 8192, offset: 1088)
!130 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 8192, elements: !131)
!131 = !{!132}
!132 = !DISubrange(count: 1024)
!133 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !121, file: !39, line: 141, baseType: !130, size: 8192, offset: 9280)
!134 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !121, file: !39, line: 148, baseType: !120, size: 64, offset: 17472)
!135 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !121, file: !39, line: 150, baseType: !136, size: 64, offset: 17536)
!136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !137, size: 64)
!137 = !DICompositeType(tag: DW_TAG_structure_type, name: "PackedFile", file: !39, line: 45, flags: DIFlagFwdDecl)
!138 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !113, file: !39, line: 121, baseType: !139, size: 528, offset: 256)
!139 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 528, elements: !140)
!140 = !{!141}
!141 = !DISubrange(count: 66)
!142 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !113, file: !39, line: 126, baseType: !48, size: 16, offset: 784)
!143 = !DIDerivedType(tag: DW_TAG_member, name: "us", scope: !113, file: !39, line: 127, baseType: !22, size: 32, offset: 800)
!144 = !DIDerivedType(tag: DW_TAG_member, name: "icon_id", scope: !113, file: !39, line: 128, baseType: !22, size: 32, offset: 832)
!145 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !113, file: !39, line: 128, baseType: !22, size: 32, offset: 864)
!146 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !113, file: !39, line: 129, baseType: !37, size: 64, offset: 896)
!147 = !DIDerivedType(tag: DW_TAG_member, name: "vertbase", scope: !108, file: !109, line: 52, baseType: !58, size: 128, offset: 960)
!148 = !DIDerivedType(tag: DW_TAG_member, name: "edgebase", scope: !108, file: !109, line: 53, baseType: !58, size: 128, offset: 1088)
!149 = !DIDerivedType(tag: DW_TAG_member, name: "areabase", scope: !108, file: !109, line: 54, baseType: !58, size: 128, offset: 1216)
!150 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !108, file: !109, line: 55, baseType: !58, size: 128, offset: 1344)
!151 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !108, file: !109, line: 57, baseType: !152, size: 64, offset: 1472)
!152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !153, size: 64)
!153 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Scene", file: !154, line: 1216, size: 39680, elements: !155)
!154 = !DIFile(filename: "blender/source/blender/makesdna/DNA_scene_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!155 = !{!156, !157, !161, !1084, !1087, !1088, !1089, !1101, !1102, !1103, !1104, !1105, !1106, !1107, !1108, !1109, !1110, !1111, !1115, !1187, !1533, !2202, !2205, !2445, !2457, !2458, !2459, !2460, !2461, !2462, !2463, !2464, !2467, !2468, !2469, !2470, !2471, !2479, !2545, !2552, !2553, !2560, !2561, !2562, !2563, !2564, !2565, !2566}
!156 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !153, file: !154, line: 1217, baseType: !112, size: 960)
!157 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !153, file: !154, line: 1218, baseType: !158, size: 64, offset: 960)
!158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !159, size: 64)
!159 = !DICompositeType(tag: DW_TAG_structure_type, name: "AnimData", file: !160, line: 37, flags: DIFlagFwdDecl)
!160 = !DIFile(filename: "blender/source/blender/makesdna/DNA_armature_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!161 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !153, file: !154, line: 1220, baseType: !162, size: 64, offset: 1024)
!162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !163, size: 64)
!163 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Object", file: !164, line: 115, size: 11392, elements: !165)
!164 = !DIFile(filename: "blender/source/blender/makesdna/DNA_object_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!165 = !{!166, !167, !168, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !309, !319, !333, !334, !376, !377, !380, !381, !397, !398, !399, !400, !401, !402, !403, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !422, !423, !424, !425, !426, !427, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !487, !488, !489, !490, !491, !492, !493, !494, !495, !499, !502, !505, !506, !507, !508, !509, !512, !515, !1031, !1032, !1038, !1039, !1040, !1041, !1042, !1043, !1045, !1048, !1051, !1053, !1072, !1073}
!166 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !163, file: !164, line: 116, baseType: !112, size: 960)
!167 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !163, file: !164, line: 117, baseType: !158, size: 64, offset: 960)
!168 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt", scope: !163, file: !164, line: 119, baseType: !169, size: 64, offset: 1024)
!169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !170, size: 64)
!170 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SculptSession", file: !171, line: 155, size: 1856, elements: !172)
!171 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_paint.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!172 = !{!173, !203, !217, !226, !233, !234, !235, !237, !241, !243, !252, !256, !257, !258, !260, !263, !266, !267, !268, !269, !270, !274, !275, !276, !278, !279, !283, !284, !287, !290, !291, !292, !293}
!173 = !DIDerivedType(tag: DW_TAG_member, name: "multires", scope: !170, file: !171, line: 157, baseType: !174, size: 64)
!174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !175, size: 64)
!175 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MultiresModifierData", file: !176, line: 717, size: 960, elements: !177)
!176 = !DIFile(filename: "blender/source/blender/makesdna/DNA_modifier_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!177 = !{!178, !193, !194, !195, !196, !197, !198, !199}
!178 = !DIDerivedType(tag: DW_TAG_member, name: "modifier", scope: !175, file: !176, line: 718, baseType: !179, size: 896)
!179 = !DIDerivedType(tag: DW_TAG_typedef, name: "ModifierData", file: !176, line: 110, baseType: !180)
!180 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ModifierData", file: !176, line: 99, size: 896, elements: !181)
!181 = !{!182, !184, !185, !186, !187, !188, !189, !190, !191}
!182 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !180, file: !176, line: 100, baseType: !183, size: 64)
!183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !180, size: 64)
!184 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !180, file: !176, line: 100, baseType: !183, size: 64, offset: 64)
!185 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !180, file: !176, line: 102, baseType: !22, size: 32, offset: 128)
!186 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !180, file: !176, line: 102, baseType: !22, size: 32, offset: 160)
!187 = !DIDerivedType(tag: DW_TAG_member, name: "stackindex", scope: !180, file: !176, line: 103, baseType: !22, size: 32, offset: 192)
!188 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !180, file: !176, line: 103, baseType: !22, size: 32, offset: 224)
!189 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !180, file: !176, line: 104, baseType: !33, size: 512, offset: 256)
!190 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !180, file: !176, line: 107, baseType: !152, size: 64, offset: 768)
!191 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !180, file: !176, line: 109, baseType: !192, size: 64, offset: 832)
!192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 64)
!193 = !DIDerivedType(tag: DW_TAG_member, name: "lvl", scope: !175, file: !176, line: 720, baseType: !14, size: 8, offset: 896)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "sculptlvl", scope: !175, file: !176, line: 720, baseType: !14, size: 8, offset: 904)
!195 = !DIDerivedType(tag: DW_TAG_member, name: "renderlvl", scope: !175, file: !176, line: 720, baseType: !14, size: 8, offset: 912)
!196 = !DIDerivedType(tag: DW_TAG_member, name: "totlvl", scope: !175, file: !176, line: 720, baseType: !14, size: 8, offset: 920)
!197 = !DIDerivedType(tag: DW_TAG_member, name: "simple", scope: !175, file: !176, line: 721, baseType: !14, size: 8, offset: 928)
!198 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !175, file: !176, line: 721, baseType: !14, size: 8, offset: 936)
!199 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !175, file: !176, line: 721, baseType: !200, size: 16, offset: 944)
!200 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 16, elements: !201)
!201 = !{!202}
!202 = !DISubrange(count: 2)
!203 = !DIDerivedType(tag: DW_TAG_member, name: "mvert", scope: !170, file: !171, line: 158, baseType: !204, size: 64, offset: 64)
!204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !205, size: 64)
!205 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MVert", file: !206, line: 65, size: 160, elements: !207)
!206 = !DIFile(filename: "blender/source/blender/makesdna/DNA_meshdata_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!207 = !{!208, !213, !215, !216}
!208 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !205, file: !206, line: 66, baseType: !209, size: 96)
!209 = !DICompositeType(tag: DW_TAG_array_type, baseType: !210, size: 96, elements: !211)
!210 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!211 = !{!212}
!212 = !DISubrange(count: 3)
!213 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !205, file: !206, line: 67, baseType: !214, size: 48, offset: 96)
!214 = !DICompositeType(tag: DW_TAG_array_type, baseType: !48, size: 48, elements: !211)
!215 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !205, file: !206, line: 68, baseType: !14, size: 8, offset: 144)
!216 = !DIDerivedType(tag: DW_TAG_member, name: "bweight", scope: !205, file: !206, line: 68, baseType: !14, size: 8, offset: 152)
!217 = !DIDerivedType(tag: DW_TAG_member, name: "mpoly", scope: !170, file: !171, line: 159, baseType: !218, size: 64, offset: 128)
!218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !219, size: 64)
!219 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MPoly", file: !206, line: 79, size: 96, elements: !220)
!220 = !{!221, !222, !223, !224, !225}
!221 = !DIDerivedType(tag: DW_TAG_member, name: "loopstart", scope: !219, file: !206, line: 81, baseType: !22, size: 32)
!222 = !DIDerivedType(tag: DW_TAG_member, name: "totloop", scope: !219, file: !206, line: 82, baseType: !22, size: 32, offset: 32)
!223 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !219, file: !206, line: 83, baseType: !48, size: 16, offset: 64)
!224 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !219, file: !206, line: 84, baseType: !14, size: 8, offset: 80)
!225 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !219, file: !206, line: 84, baseType: !14, size: 8, offset: 88)
!226 = !DIDerivedType(tag: DW_TAG_member, name: "mloop", scope: !170, file: !171, line: 160, baseType: !227, size: 64, offset: 192)
!227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !228, size: 64)
!228 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MLoop", file: !206, line: 88, size: 64, elements: !229)
!229 = !{!230, !232}
!230 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !228, file: !206, line: 89, baseType: !231, size: 32)
!231 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!232 = !DIDerivedType(tag: DW_TAG_member, name: "e", scope: !228, file: !206, line: 90, baseType: !231, size: 32, offset: 32)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !170, file: !171, line: 161, baseType: !22, size: 32, offset: 256)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "totpoly", scope: !170, file: !171, line: 161, baseType: !22, size: 32, offset: 288)
!235 = !DIDerivedType(tag: DW_TAG_member, name: "face_normals", scope: !170, file: !171, line: 162, baseType: !236, size: 64, offset: 320)
!236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !209, size: 64)
!237 = !DIDerivedType(tag: DW_TAG_member, name: "kb", scope: !170, file: !171, line: 163, baseType: !238, size: 64, offset: 384)
!238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !239, size: 64)
!239 = !DICompositeType(tag: DW_TAG_structure_type, name: "KeyBlock", file: !240, line: 92, flags: DIFlagFwdDecl)
!240 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_DerivedMesh.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!241 = !DIDerivedType(tag: DW_TAG_member, name: "vmask", scope: !170, file: !171, line: 164, baseType: !242, size: 64, offset: 448)
!242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !210, size: 64)
!243 = !DIDerivedType(tag: DW_TAG_member, name: "pmap", scope: !170, file: !171, line: 167, baseType: !244, size: 64, offset: 512)
!244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !245, size: 64)
!245 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !246)
!246 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MeshElemMap", file: !247, line: 96, size: 128, elements: !248)
!247 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_mesh_mapping.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!248 = !{!249, !251}
!249 = !DIDerivedType(tag: DW_TAG_member, name: "indices", scope: !246, file: !247, line: 97, baseType: !250, size: 64)
!250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !22, size: 64)
!251 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !246, file: !247, line: 98, baseType: !22, size: 32, offset: 64)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "bm", scope: !170, file: !171, line: 170, baseType: !253, size: 64, offset: 576)
!253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !254, size: 64)
!254 = !DICompositeType(tag: DW_TAG_structure_type, name: "BMesh", file: !255, line: 44, flags: DIFlagFwdDecl)
!255 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_customdata.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!256 = !DIDerivedType(tag: DW_TAG_member, name: "cd_vert_node_offset", scope: !170, file: !171, line: 171, baseType: !22, size: 32, offset: 640)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "cd_face_node_offset", scope: !170, file: !171, line: 172, baseType: !22, size: 32, offset: 672)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "bm_smooth_shading", scope: !170, file: !171, line: 173, baseType: !259, size: 8, offset: 704)
!259 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!260 = !DIDerivedType(tag: DW_TAG_member, name: "bm_log", scope: !170, file: !171, line: 175, baseType: !261, size: 64, offset: 768)
!261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !262, size: 64)
!262 = !DICompositeType(tag: DW_TAG_structure_type, name: "BMLog", file: !171, line: 175, flags: DIFlagFwdDecl)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "pbvh", scope: !170, file: !171, line: 178, baseType: !264, size: 64, offset: 832)
!264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !265, size: 64)
!265 = !DICompositeType(tag: DW_TAG_structure_type, name: "PBVH", file: !240, line: 100, flags: DIFlagFwdDecl)
!266 = !DIDerivedType(tag: DW_TAG_member, name: "show_diffuse_color", scope: !170, file: !171, line: 179, baseType: !259, size: 8, offset: 896)
!267 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers_active", scope: !170, file: !171, line: 182, baseType: !259, size: 8, offset: 904)
!268 = !DIDerivedType(tag: DW_TAG_member, name: "orig_cos", scope: !170, file: !171, line: 183, baseType: !236, size: 64, offset: 960)
!269 = !DIDerivedType(tag: DW_TAG_member, name: "deform_cos", scope: !170, file: !171, line: 184, baseType: !236, size: 64, offset: 1024)
!270 = !DIDerivedType(tag: DW_TAG_member, name: "deform_imats", scope: !170, file: !171, line: 185, baseType: !271, size: 64, offset: 1088)
!271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !272, size: 64)
!272 = !DICompositeType(tag: DW_TAG_array_type, baseType: !210, size: 288, elements: !273)
!273 = !{!212, !212}
!274 = !DIDerivedType(tag: DW_TAG_member, name: "partial_redraw", scope: !170, file: !171, line: 188, baseType: !259, size: 8, offset: 1152)
!275 = !DIDerivedType(tag: DW_TAG_member, name: "texcache_side", scope: !170, file: !171, line: 191, baseType: !231, size: 32, offset: 1184)
!276 = !DIDerivedType(tag: DW_TAG_member, name: "texcache", scope: !170, file: !171, line: 191, baseType: !277, size: 64, offset: 1216)
!277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !231, size: 64)
!278 = !DIDerivedType(tag: DW_TAG_member, name: "texcache_actual", scope: !170, file: !171, line: 191, baseType: !231, size: 32, offset: 1280)
!279 = !DIDerivedType(tag: DW_TAG_member, name: "tex_pool", scope: !170, file: !171, line: 192, baseType: !280, size: 64, offset: 1344)
!280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !281, size: 64)
!281 = !DICompositeType(tag: DW_TAG_structure_type, name: "ImagePool", file: !282, line: 33, flags: DIFlagFwdDecl)
!282 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_brush.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!283 = !DIDerivedType(tag: DW_TAG_member, name: "layer_co", scope: !170, file: !171, line: 195, baseType: !236, size: 64, offset: 1408)
!284 = !DIDerivedType(tag: DW_TAG_member, name: "stroke", scope: !170, file: !171, line: 197, baseType: !285, size: 64, offset: 1472)
!285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !286, size: 64)
!286 = !DICompositeType(tag: DW_TAG_structure_type, name: "SculptStroke", file: !171, line: 197, flags: DIFlagFwdDecl)
!287 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !170, file: !171, line: 198, baseType: !288, size: 64, offset: 1536)
!288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !289, size: 64)
!289 = !DICompositeType(tag: DW_TAG_structure_type, name: "StrokeCache", file: !171, line: 59, flags: DIFlagFwdDecl)
!290 = !DIDerivedType(tag: DW_TAG_member, name: "last_stroke_valid", scope: !170, file: !171, line: 201, baseType: !259, size: 8, offset: 1600)
!291 = !DIDerivedType(tag: DW_TAG_member, name: "last_stroke", scope: !170, file: !171, line: 202, baseType: !209, size: 96, offset: 1632)
!292 = !DIDerivedType(tag: DW_TAG_member, name: "average_stroke_accum", scope: !170, file: !171, line: 204, baseType: !209, size: 96, offset: 1728)
!293 = !DIDerivedType(tag: DW_TAG_member, name: "average_stroke_counter", scope: !170, file: !171, line: 205, baseType: !22, size: 32, offset: 1824)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !163, file: !164, line: 121, baseType: !48, size: 16, offset: 1088)
!295 = !DIDerivedType(tag: DW_TAG_member, name: "partype", scope: !163, file: !164, line: 121, baseType: !48, size: 16, offset: 1104)
!296 = !DIDerivedType(tag: DW_TAG_member, name: "par1", scope: !163, file: !164, line: 122, baseType: !22, size: 32, offset: 1120)
!297 = !DIDerivedType(tag: DW_TAG_member, name: "par2", scope: !163, file: !164, line: 122, baseType: !22, size: 32, offset: 1152)
!298 = !DIDerivedType(tag: DW_TAG_member, name: "par3", scope: !163, file: !164, line: 122, baseType: !22, size: 32, offset: 1184)
!299 = !DIDerivedType(tag: DW_TAG_member, name: "parsubstr", scope: !163, file: !164, line: 123, baseType: !33, size: 512, offset: 1216)
!300 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !163, file: !164, line: 124, baseType: !162, size: 64, offset: 1728)
!301 = !DIDerivedType(tag: DW_TAG_member, name: "track", scope: !163, file: !164, line: 124, baseType: !162, size: 64, offset: 1792)
!302 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !163, file: !164, line: 127, baseType: !162, size: 64, offset: 1856)
!303 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_group", scope: !163, file: !164, line: 127, baseType: !162, size: 64, offset: 1920)
!304 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_from", scope: !163, file: !164, line: 127, baseType: !162, size: 64, offset: 1984)
!305 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !163, file: !164, line: 128, baseType: !306, size: 64, offset: 2048)
!306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !307, size: 64)
!307 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ipo", file: !308, line: 41, flags: DIFlagFwdDecl)
!308 = !DIFile(filename: "blender/source/blender/makesdna/DNA_mesh_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!309 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !163, file: !164, line: 130, baseType: !310, size: 64, offset: 2112)
!310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !311, size: 64)
!311 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BoundBox", file: !164, line: 97, size: 832, elements: !312)
!312 = !{!313, !317, !318}
!313 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !311, file: !164, line: 98, baseType: !314, size: 768)
!314 = !DICompositeType(tag: DW_TAG_array_type, baseType: !210, size: 768, elements: !315)
!315 = !{!316, !212}
!316 = !DISubrange(count: 8)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !311, file: !164, line: 99, baseType: !22, size: 32, offset: 768)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !311, file: !164, line: 99, baseType: !22, size: 32, offset: 800)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !163, file: !164, line: 131, baseType: !320, size: 64, offset: 2176)
!320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !321, size: 64)
!321 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bAction", file: !322, line: 486, size: 1600, elements: !323)
!322 = !DIFile(filename: "blender/source/blender/makesdna/DNA_action_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!323 = !{!324, !325, !326, !327, !328, !329, !330, !331, !332}
!324 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !321, file: !322, line: 487, baseType: !112, size: 960)
!325 = !DIDerivedType(tag: DW_TAG_member, name: "curves", scope: !321, file: !322, line: 489, baseType: !58, size: 128, offset: 960)
!326 = !DIDerivedType(tag: DW_TAG_member, name: "chanbase", scope: !321, file: !322, line: 490, baseType: !58, size: 128, offset: 1088)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !321, file: !322, line: 491, baseType: !58, size: 128, offset: 1216)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !321, file: !322, line: 492, baseType: !58, size: 128, offset: 1344)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !321, file: !322, line: 494, baseType: !22, size: 32, offset: 1472)
!330 = !DIDerivedType(tag: DW_TAG_member, name: "active_marker", scope: !321, file: !322, line: 495, baseType: !22, size: 32, offset: 1504)
!331 = !DIDerivedType(tag: DW_TAG_member, name: "idroot", scope: !321, file: !322, line: 497, baseType: !22, size: 32, offset: 1536)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !321, file: !322, line: 498, baseType: !22, size: 32, offset: 1568)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "poselib", scope: !163, file: !164, line: 132, baseType: !320, size: 64, offset: 2240)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "pose", scope: !163, file: !164, line: 133, baseType: !335, size: 64, offset: 2304)
!335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !336, size: 64)
!336 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bPose", file: !322, line: 334, size: 1728, elements: !337)
!337 = !{!338, !339, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !375}
!338 = !DIDerivedType(tag: DW_TAG_member, name: "chanbase", scope: !336, file: !322, line: 335, baseType: !58, size: 128)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "chanhash", scope: !336, file: !322, line: 336, baseType: !340, size: 64, offset: 128)
!340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !341, size: 64)
!341 = !DICompositeType(tag: DW_TAG_structure_type, name: "GHash", file: !342, line: 51, flags: DIFlagFwdDecl)
!342 = !DIFile(filename: "blender/source/blender/makesdna/DNA_curve_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!343 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !336, file: !322, line: 338, baseType: !48, size: 16, offset: 192)
!344 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !336, file: !322, line: 338, baseType: !48, size: 16, offset: 208)
!345 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_layer", scope: !336, file: !322, line: 339, baseType: !231, size: 32, offset: 224)
!346 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !336, file: !322, line: 340, baseType: !22, size: 32, offset: 256)
!347 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !336, file: !322, line: 342, baseType: !210, size: 32, offset: 288)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "stride_offset", scope: !336, file: !322, line: 343, baseType: !209, size: 96, offset: 320)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "cyclic_offset", scope: !336, file: !322, line: 344, baseType: !209, size: 96, offset: 416)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "agroups", scope: !336, file: !322, line: 347, baseType: !58, size: 128, offset: 512)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "active_group", scope: !336, file: !322, line: 349, baseType: !22, size: 32, offset: 640)
!352 = !DIDerivedType(tag: DW_TAG_member, name: "iksolver", scope: !336, file: !322, line: 350, baseType: !22, size: 32, offset: 672)
!353 = !DIDerivedType(tag: DW_TAG_member, name: "ikdata", scope: !336, file: !322, line: 351, baseType: !56, size: 64, offset: 704)
!354 = !DIDerivedType(tag: DW_TAG_member, name: "ikparam", scope: !336, file: !322, line: 352, baseType: !56, size: 64, offset: 768)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "avs", scope: !336, file: !322, line: 354, baseType: !356, size: 384, offset: 832)
!356 = !DIDerivedType(tag: DW_TAG_typedef, name: "bAnimVizSettings", file: !322, line: 116, baseType: !357)
!357 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bAnimVizSettings", file: !322, line: 94, size: 384, elements: !358)
!358 = !{!359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374}
!359 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_sf", scope: !357, file: !322, line: 96, baseType: !22, size: 32)
!360 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_ef", scope: !357, file: !322, line: 96, baseType: !22, size: 32, offset: 32)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_bc", scope: !357, file: !322, line: 97, baseType: !22, size: 32, offset: 64)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_ac", scope: !357, file: !322, line: 97, baseType: !22, size: 32, offset: 96)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_type", scope: !357, file: !322, line: 99, baseType: !48, size: 16, offset: 128)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_step", scope: !357, file: !322, line: 100, baseType: !48, size: 16, offset: 144)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_flag", scope: !357, file: !322, line: 102, baseType: !48, size: 16, offset: 160)
!366 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !357, file: !322, line: 105, baseType: !48, size: 16, offset: 176)
!367 = !DIDerivedType(tag: DW_TAG_member, name: "path_type", scope: !357, file: !322, line: 108, baseType: !48, size: 16, offset: 192)
!368 = !DIDerivedType(tag: DW_TAG_member, name: "path_step", scope: !357, file: !322, line: 109, baseType: !48, size: 16, offset: 208)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "path_viewflag", scope: !357, file: !322, line: 111, baseType: !48, size: 16, offset: 224)
!370 = !DIDerivedType(tag: DW_TAG_member, name: "path_bakeflag", scope: !357, file: !322, line: 112, baseType: !48, size: 16, offset: 240)
!371 = !DIDerivedType(tag: DW_TAG_member, name: "path_sf", scope: !357, file: !322, line: 114, baseType: !22, size: 32, offset: 256)
!372 = !DIDerivedType(tag: DW_TAG_member, name: "path_ef", scope: !357, file: !322, line: 114, baseType: !22, size: 32, offset: 288)
!373 = !DIDerivedType(tag: DW_TAG_member, name: "path_bc", scope: !357, file: !322, line: 115, baseType: !22, size: 32, offset: 320)
!374 = !DIDerivedType(tag: DW_TAG_member, name: "path_ac", scope: !357, file: !322, line: 115, baseType: !22, size: 32, offset: 352)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_act_bone", scope: !336, file: !322, line: 355, baseType: !33, size: 512, offset: 1216)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !163, file: !164, line: 134, baseType: !56, size: 64, offset: 2368)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !163, file: !164, line: 136, baseType: !378, size: 64, offset: 2432)
!378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !379, size: 64)
!379 = !DICompositeType(tag: DW_TAG_structure_type, name: "bGPdata", file: !154, line: 61, flags: DIFlagFwdDecl)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "avs", scope: !163, file: !164, line: 138, baseType: !356, size: 384, offset: 2496)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "mpath", scope: !163, file: !164, line: 139, baseType: !382, size: 64, offset: 2880)
!382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !383, size: 64)
!383 = !DIDerivedType(tag: DW_TAG_typedef, name: "bMotionPath", file: !322, line: 80, baseType: !384)
!384 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bMotionPath", file: !322, line: 72, size: 192, elements: !385)
!385 = !{!386, !393, !394, !395, !396}
!386 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !384, file: !322, line: 73, baseType: !387, size: 64)
!387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !388, size: 64)
!388 = !DIDerivedType(tag: DW_TAG_typedef, name: "bMotionPathVert", file: !322, line: 59, baseType: !389)
!389 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bMotionPathVert", file: !322, line: 56, size: 128, elements: !390)
!390 = !{!391, !392}
!391 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !389, file: !322, line: 57, baseType: !209, size: 96)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !389, file: !322, line: 58, baseType: !22, size: 32, offset: 96)
!393 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !384, file: !322, line: 74, baseType: !22, size: 32, offset: 64)
!394 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !384, file: !322, line: 76, baseType: !22, size: 32, offset: 96)
!395 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !384, file: !322, line: 77, baseType: !22, size: 32, offset: 128)
!396 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !384, file: !322, line: 79, baseType: !22, size: 32, offset: 160)
!397 = !DIDerivedType(tag: DW_TAG_member, name: "constraintChannels", scope: !163, file: !164, line: 141, baseType: !58, size: 128, offset: 2944)
!398 = !DIDerivedType(tag: DW_TAG_member, name: "effect", scope: !163, file: !164, line: 142, baseType: !58, size: 128, offset: 3072)
!399 = !DIDerivedType(tag: DW_TAG_member, name: "defbase", scope: !163, file: !164, line: 143, baseType: !58, size: 128, offset: 3200)
!400 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers", scope: !163, file: !164, line: 144, baseType: !58, size: 128, offset: 3328)
!401 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !163, file: !164, line: 146, baseType: !22, size: 32, offset: 3456)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "restore_mode", scope: !163, file: !164, line: 147, baseType: !22, size: 32, offset: 3488)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !163, file: !164, line: 150, baseType: !404, size: 64, offset: 3520)
!404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !405, size: 64)
!405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !406, size: 64)
!406 = !DICompositeType(tag: DW_TAG_structure_type, name: "Material", file: !308, line: 53, flags: DIFlagFwdDecl)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "matbits", scope: !163, file: !164, line: 151, baseType: !192, size: 64, offset: 3584)
!408 = !DIDerivedType(tag: DW_TAG_member, name: "totcol", scope: !163, file: !164, line: 152, baseType: !22, size: 32, offset: 3648)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "actcol", scope: !163, file: !164, line: 153, baseType: !22, size: 32, offset: 3680)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !163, file: !164, line: 156, baseType: !209, size: 96, offset: 3712)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "dloc", scope: !163, file: !164, line: 156, baseType: !209, size: 96, offset: 3808)
!412 = !DIDerivedType(tag: DW_TAG_member, name: "orig", scope: !163, file: !164, line: 156, baseType: !209, size: 96, offset: 3904)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !163, file: !164, line: 157, baseType: !209, size: 96, offset: 4000)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "dsize", scope: !163, file: !164, line: 158, baseType: !209, size: 96, offset: 4096)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "dscale", scope: !163, file: !164, line: 159, baseType: !209, size: 96, offset: 4192)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !163, file: !164, line: 160, baseType: !209, size: 96, offset: 4288)
!417 = !DIDerivedType(tag: DW_TAG_member, name: "drot", scope: !163, file: !164, line: 160, baseType: !209, size: 96, offset: 4384)
!418 = !DIDerivedType(tag: DW_TAG_member, name: "quat", scope: !163, file: !164, line: 161, baseType: !419, size: 128, offset: 4480)
!419 = !DICompositeType(tag: DW_TAG_array_type, baseType: !210, size: 128, elements: !420)
!420 = !{!421}
!421 = !DISubrange(count: 4)
!422 = !DIDerivedType(tag: DW_TAG_member, name: "dquat", scope: !163, file: !164, line: 161, baseType: !419, size: 128, offset: 4608)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "rotAxis", scope: !163, file: !164, line: 162, baseType: !209, size: 96, offset: 4736)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "drotAxis", scope: !163, file: !164, line: 162, baseType: !209, size: 96, offset: 4832)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "rotAngle", scope: !163, file: !164, line: 163, baseType: !210, size: 32, offset: 4928)
!426 = !DIDerivedType(tag: DW_TAG_member, name: "drotAngle", scope: !163, file: !164, line: 163, baseType: !210, size: 32, offset: 4960)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "obmat", scope: !163, file: !164, line: 164, baseType: !428, size: 512, offset: 4992)
!428 = !DICompositeType(tag: DW_TAG_array_type, baseType: !210, size: 512, elements: !429)
!429 = !{!421, !421}
!430 = !DIDerivedType(tag: DW_TAG_member, name: "parentinv", scope: !163, file: !164, line: 165, baseType: !428, size: 512, offset: 5504)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "constinv", scope: !163, file: !164, line: 166, baseType: !428, size: 512, offset: 6016)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !163, file: !164, line: 167, baseType: !428, size: 512, offset: 6528)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "imat_ren", scope: !163, file: !164, line: 176, baseType: !428, size: 512, offset: 7040)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !163, file: !164, line: 178, baseType: !231, size: 32, offset: 7552)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !163, file: !164, line: 180, baseType: !48, size: 16, offset: 7584)
!436 = !DIDerivedType(tag: DW_TAG_member, name: "colbits", scope: !163, file: !164, line: 181, baseType: !48, size: 16, offset: 7600)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "transflag", scope: !163, file: !164, line: 183, baseType: !48, size: 16, offset: 7616)
!438 = !DIDerivedType(tag: DW_TAG_member, name: "protectflag", scope: !163, file: !164, line: 183, baseType: !48, size: 16, offset: 7632)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "trackflag", scope: !163, file: !164, line: 184, baseType: !48, size: 16, offset: 7648)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "upflag", scope: !163, file: !164, line: 184, baseType: !48, size: 16, offset: 7664)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "nlaflag", scope: !163, file: !164, line: 185, baseType: !48, size: 16, offset: 7680)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "ipoflag", scope: !163, file: !164, line: 186, baseType: !48, size: 16, offset: 7696)
!443 = !DIDerivedType(tag: DW_TAG_member, name: "scaflag", scope: !163, file: !164, line: 187, baseType: !48, size: 16, offset: 7712)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "scavisflag", scope: !163, file: !164, line: 188, baseType: !14, size: 8, offset: 7728)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "depsflag", scope: !163, file: !164, line: 189, baseType: !14, size: 8, offset: 7736)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "dupon", scope: !163, file: !164, line: 192, baseType: !22, size: 32, offset: 7744)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "dupoff", scope: !163, file: !164, line: 192, baseType: !22, size: 32, offset: 7776)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "dupsta", scope: !163, file: !164, line: 192, baseType: !22, size: 32, offset: 7808)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "dupend", scope: !163, file: !164, line: 192, baseType: !22, size: 32, offset: 7840)
!450 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !163, file: !164, line: 194, baseType: !22, size: 32, offset: 7872)
!451 = !DIDerivedType(tag: DW_TAG_member, name: "mass", scope: !163, file: !164, line: 202, baseType: !210, size: 32, offset: 7904)
!452 = !DIDerivedType(tag: DW_TAG_member, name: "damping", scope: !163, file: !164, line: 202, baseType: !210, size: 32, offset: 7936)
!453 = !DIDerivedType(tag: DW_TAG_member, name: "inertia", scope: !163, file: !164, line: 202, baseType: !210, size: 32, offset: 7968)
!454 = !DIDerivedType(tag: DW_TAG_member, name: "formfactor", scope: !163, file: !164, line: 211, baseType: !210, size: 32, offset: 8000)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "rdamping", scope: !163, file: !164, line: 212, baseType: !210, size: 32, offset: 8032)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !163, file: !164, line: 213, baseType: !210, size: 32, offset: 8064)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "max_vel", scope: !163, file: !164, line: 214, baseType: !210, size: 32, offset: 8096)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "min_vel", scope: !163, file: !164, line: 215, baseType: !210, size: 32, offset: 8128)
!459 = !DIDerivedType(tag: DW_TAG_member, name: "obstacleRad", scope: !163, file: !164, line: 216, baseType: !210, size: 32, offset: 8160)
!460 = !DIDerivedType(tag: DW_TAG_member, name: "step_height", scope: !163, file: !164, line: 219, baseType: !210, size: 32, offset: 8192)
!461 = !DIDerivedType(tag: DW_TAG_member, name: "jump_speed", scope: !163, file: !164, line: 220, baseType: !210, size: 32, offset: 8224)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "fall_speed", scope: !163, file: !164, line: 221, baseType: !210, size: 32, offset: 8256)
!463 = !DIDerivedType(tag: DW_TAG_member, name: "col_group", scope: !163, file: !164, line: 224, baseType: !464, size: 16, offset: 8288)
!464 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "col_mask", scope: !163, file: !164, line: 224, baseType: !464, size: 16, offset: 8304)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "rotmode", scope: !163, file: !164, line: 226, baseType: !48, size: 16, offset: 8320)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "boundtype", scope: !163, file: !164, line: 228, baseType: !14, size: 8, offset: 8336)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "collision_boundtype", scope: !163, file: !164, line: 229, baseType: !14, size: 8, offset: 8344)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "dtx", scope: !163, file: !164, line: 231, baseType: !48, size: 16, offset: 8352)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "dt", scope: !163, file: !164, line: 232, baseType: !14, size: 8, offset: 8368)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "empty_drawtype", scope: !163, file: !164, line: 233, baseType: !14, size: 8, offset: 8376)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "empty_drawsize", scope: !163, file: !164, line: 234, baseType: !210, size: 32, offset: 8384)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "dupfacesca", scope: !163, file: !164, line: 235, baseType: !210, size: 32, offset: 8416)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !163, file: !164, line: 237, baseType: !58, size: 128, offset: 8448)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "sensors", scope: !163, file: !164, line: 238, baseType: !58, size: 128, offset: 8576)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "controllers", scope: !163, file: !164, line: 239, baseType: !58, size: 128, offset: 8704)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "actuators", scope: !163, file: !164, line: 240, baseType: !58, size: 128, offset: 8832)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "sf", scope: !163, file: !164, line: 242, baseType: !210, size: 32, offset: 8960)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !163, file: !164, line: 244, baseType: !48, size: 16, offset: 8992)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "actdef", scope: !163, file: !164, line: 245, baseType: !464, size: 16, offset: 9008)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !163, file: !164, line: 246, baseType: !419, size: 128, offset: 9024)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "gameflag", scope: !163, file: !164, line: 248, baseType: !22, size: 32, offset: 9152)
!483 = !DIDerivedType(tag: DW_TAG_member, name: "gameflag2", scope: !163, file: !164, line: 249, baseType: !22, size: 32, offset: 9184)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "bsoft", scope: !163, file: !164, line: 251, baseType: !485, size: 64, offset: 9216)
!485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !486, size: 64)
!486 = !DICompositeType(tag: DW_TAG_structure_type, name: "BulletSoftBody", file: !164, line: 251, flags: DIFlagFwdDecl)
!487 = !DIDerivedType(tag: DW_TAG_member, name: "restrictflag", scope: !163, file: !164, line: 253, baseType: !14, size: 8, offset: 9280)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !163, file: !164, line: 254, baseType: !14, size: 8, offset: 9288)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "softflag", scope: !163, file: !164, line: 255, baseType: !48, size: 16, offset: 9296)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "anisotropicFriction", scope: !163, file: !164, line: 256, baseType: !209, size: 96, offset: 9312)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "constraints", scope: !163, file: !164, line: 258, baseType: !58, size: 128, offset: 9408)
!492 = !DIDerivedType(tag: DW_TAG_member, name: "nlastrips", scope: !163, file: !164, line: 259, baseType: !58, size: 128, offset: 9536)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "hooks", scope: !163, file: !164, line: 260, baseType: !58, size: 128, offset: 9664)
!494 = !DIDerivedType(tag: DW_TAG_member, name: "particlesystem", scope: !163, file: !164, line: 261, baseType: !58, size: 128, offset: 9792)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "pd", scope: !163, file: !164, line: 263, baseType: !496, size: 64, offset: 9920)
!496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !497, size: 64)
!497 = !DICompositeType(tag: DW_TAG_structure_type, name: "PartDeflect", file: !498, line: 244, flags: DIFlagFwdDecl)
!498 = !DIFile(filename: "blender/source/blender/makesdna/DNA_particle_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!499 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !163, file: !164, line: 264, baseType: !500, size: 64, offset: 9984)
!500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !501, size: 64)
!501 = !DICompositeType(tag: DW_TAG_structure_type, name: "SoftBody", file: !164, line: 53, flags: DIFlagFwdDecl)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "dup_group", scope: !163, file: !164, line: 265, baseType: !503, size: 64, offset: 10048)
!503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !504, size: 64)
!504 = !DICompositeType(tag: DW_TAG_structure_type, name: "Group", file: !498, line: 238, flags: DIFlagFwdDecl)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "body_type", scope: !163, file: !164, line: 267, baseType: !14, size: 8, offset: 10112)
!506 = !DIDerivedType(tag: DW_TAG_member, name: "shapeflag", scope: !163, file: !164, line: 268, baseType: !14, size: 8, offset: 10120)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "shapenr", scope: !163, file: !164, line: 269, baseType: !48, size: 16, offset: 10128)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "smoothresh", scope: !163, file: !164, line: 270, baseType: !210, size: 32, offset: 10144)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "fluidsimSettings", scope: !163, file: !164, line: 272, baseType: !510, size: 64, offset: 10176)
!510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !511, size: 64)
!511 = !DICompositeType(tag: DW_TAG_structure_type, name: "FluidsimSettings", file: !164, line: 54, flags: DIFlagFwdDecl)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "curve_cache", scope: !163, file: !164, line: 275, baseType: !513, size: 64, offset: 10240)
!513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !514, size: 64)
!514 = !DICompositeType(tag: DW_TAG_structure_type, name: "CurveCache", file: !164, line: 275, flags: DIFlagFwdDecl)
!515 = !DIDerivedType(tag: DW_TAG_member, name: "derivedDeform", scope: !163, file: !164, line: 277, baseType: !516, size: 64, offset: 10304)
!516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !517, size: 64)
!517 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DerivedMesh", file: !240, line: 178, size: 13504, elements: !518)
!518 = !{!519, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !572, !609, !616, !617, !624, !625, !626, !627, !633, !638, !639, !643, !644, !645, !646, !647, !651, !663, !677, !681, !685, !689, !693, !697, !701, !705, !709, !713, !717, !718, !719, !720, !721, !722, !726, !727, !728, !729, !733, !734, !735, !736, !737, !742, !743, !744, !745, !746, !750, !751, !752, !753, !754, !761, !772, !776, !782, !792, !797, !812, !819, !826, !830, !834, !838, !842, !843, !844, !848, !852, !853, !854, !858, !859, !868, !988, !992, !1000, !1004, !1008, !1012, !1020, !1030}
!519 = !DIDerivedType(tag: DW_TAG_member, name: "vertData", scope: !517, file: !240, line: 180, baseType: !520, size: 1600)
!520 = !DIDerivedType(tag: DW_TAG_typedef, name: "CustomData", file: !521, line: 73, baseType: !522)
!521 = !DIFile(filename: "blender/source/blender/makesdna/DNA_customdata_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!522 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CustomData", file: !521, line: 64, size: 1600, elements: !523)
!523 = !{!524, !539, !543, !544, !545, !546, !549}
!524 = !DIDerivedType(tag: DW_TAG_member, name: "layers", scope: !522, file: !521, line: 65, baseType: !525, size: 64)
!525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !526, size: 64)
!526 = !DIDerivedType(tag: DW_TAG_typedef, name: "CustomDataLayer", file: !521, line: 53, baseType: !527)
!527 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CustomDataLayer", file: !521, line: 42, size: 832, elements: !528)
!528 = !{!529, !530, !531, !532, !533, !534, !535, !536, !537, !538}
!529 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !527, file: !521, line: 43, baseType: !22, size: 32)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !527, file: !521, line: 44, baseType: !22, size: 32, offset: 32)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !527, file: !521, line: 45, baseType: !22, size: 32, offset: 64)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !527, file: !521, line: 46, baseType: !22, size: 32, offset: 96)
!533 = !DIDerivedType(tag: DW_TAG_member, name: "active_rnd", scope: !527, file: !521, line: 47, baseType: !22, size: 32, offset: 128)
!534 = !DIDerivedType(tag: DW_TAG_member, name: "active_clone", scope: !527, file: !521, line: 48, baseType: !22, size: 32, offset: 160)
!535 = !DIDerivedType(tag: DW_TAG_member, name: "active_mask", scope: !527, file: !521, line: 49, baseType: !22, size: 32, offset: 192)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !527, file: !521, line: 50, baseType: !22, size: 32, offset: 224)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !527, file: !521, line: 51, baseType: !33, size: 512, offset: 256)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !527, file: !521, line: 52, baseType: !56, size: 64, offset: 768)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "typemap", scope: !522, file: !521, line: 66, baseType: !540, size: 1312, offset: 64)
!540 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 1312, elements: !541)
!541 = !{!542}
!542 = !DISubrange(count: 41)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "totlayer", scope: !522, file: !521, line: 69, baseType: !22, size: 32, offset: 1376)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "maxlayer", scope: !522, file: !521, line: 69, baseType: !22, size: 32, offset: 1408)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "totsize", scope: !522, file: !521, line: 70, baseType: !22, size: 32, offset: 1440)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !522, file: !521, line: 71, baseType: !547, size: 64, offset: 1472)
!547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !548, size: 64)
!548 = !DICompositeType(tag: DW_TAG_structure_type, name: "BLI_mempool", file: !521, line: 71, flags: DIFlagFwdDecl)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "external", scope: !522, file: !521, line: 72, baseType: !550, size: 64, offset: 1536)
!550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !551, size: 64)
!551 = !DIDerivedType(tag: DW_TAG_typedef, name: "CustomDataExternal", file: !521, line: 59, baseType: !552)
!552 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CustomDataExternal", file: !521, line: 57, size: 8192, elements: !553)
!553 = !{!554}
!554 = !DIDerivedType(tag: DW_TAG_member, name: "filename", scope: !552, file: !521, line: 58, baseType: !130, size: 8192)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "edgeData", scope: !517, file: !240, line: 180, baseType: !520, size: 1600, offset: 1600)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "faceData", scope: !517, file: !240, line: 180, baseType: !520, size: 1600, offset: 3200)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "loopData", scope: !517, file: !240, line: 180, baseType: !520, size: 1600, offset: 4800)
!558 = !DIDerivedType(tag: DW_TAG_member, name: "polyData", scope: !517, file: !240, line: 180, baseType: !520, size: 1600, offset: 6400)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "numVertData", scope: !517, file: !240, line: 181, baseType: !22, size: 32, offset: 8000)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "numEdgeData", scope: !517, file: !240, line: 181, baseType: !22, size: 32, offset: 8032)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "numTessFaceData", scope: !517, file: !240, line: 181, baseType: !22, size: 32, offset: 8064)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "numLoopData", scope: !517, file: !240, line: 181, baseType: !22, size: 32, offset: 8096)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "numPolyData", scope: !517, file: !240, line: 181, baseType: !22, size: 32, offset: 8128)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "needsFree", scope: !517, file: !240, line: 182, baseType: !22, size: 32, offset: 8160)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "deformedOnly", scope: !517, file: !240, line: 183, baseType: !22, size: 32, offset: 8192)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "bvhCache", scope: !517, file: !240, line: 184, baseType: !567, size: 64, offset: 8256)
!567 = !DIDerivedType(tag: DW_TAG_typedef, name: "BVHCache", file: !568, line: 124, baseType: !569)
!568 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_bvhutils.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !570, size: 64)
!570 = !DICompositeType(tag: DW_TAG_structure_type, name: "LinkNode", file: !571, line: 118, flags: DIFlagFwdDecl)
!571 = !DIFile(filename: "blender/source/blender/blenlib/BLI_fileops.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!572 = !DIDerivedType(tag: DW_TAG_member, name: "drawObject", scope: !517, file: !240, line: 185, baseType: !573, size: 64, offset: 8320)
!573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !574, size: 64)
!574 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GPUDrawObject", file: !575, line: 84, size: 832, elements: !576)
!575 = !DIFile(filename: "blender/source/blender/gpu/GPU_buffers.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!576 = !{!577, !585, !586, !587, !588, !589, !590, !591, !594, !595, !603, !604, !605, !606, !607, !608}
!577 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !574, file: !575, line: 85, baseType: !578, size: 64)
!578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !579, size: 64)
!579 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPUBuffer", file: !575, line: 57, baseType: !580)
!580 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GPUBuffer", file: !575, line: 53, size: 192, elements: !581)
!581 = !{!582, !583, !584}
!582 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !580, file: !575, line: 54, baseType: !22, size: 32)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !580, file: !575, line: 55, baseType: !56, size: 64, offset: 64)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !580, file: !575, line: 56, baseType: !231, size: 32, offset: 128)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "normals", scope: !574, file: !575, line: 86, baseType: !578, size: 64, offset: 64)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !574, file: !575, line: 87, baseType: !578, size: 64, offset: 128)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "colors", scope: !574, file: !575, line: 88, baseType: !578, size: 64, offset: 192)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "edges", scope: !574, file: !575, line: 89, baseType: !578, size: 64, offset: 256)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "uvedges", scope: !574, file: !575, line: 90, baseType: !578, size: 64, offset: 320)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "triangle_to_mface", scope: !574, file: !575, line: 93, baseType: !250, size: 64, offset: 384)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "vert_points", scope: !574, file: !575, line: 96, baseType: !592, size: 64, offset: 448)
!592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !593, size: 64)
!593 = !DICompositeType(tag: DW_TAG_structure_type, name: "GPUVertPointLink", file: !575, line: 50, flags: DIFlagFwdDecl)
!594 = !DIDerivedType(tag: DW_TAG_member, name: "colType", scope: !574, file: !575, line: 105, baseType: !22, size: 32, offset: 512)
!595 = !DIDerivedType(tag: DW_TAG_member, name: "materials", scope: !574, file: !575, line: 107, baseType: !596, size: 64, offset: 576)
!596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !597, size: 64)
!597 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPUBufferMaterial", file: !575, line: 66, baseType: !598)
!598 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GPUBufferMaterial", file: !575, line: 59, size: 96, elements: !599)
!599 = !{!600, !601, !602}
!600 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !598, file: !575, line: 61, baseType: !22, size: 32)
!601 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !598, file: !575, line: 62, baseType: !22, size: 32, offset: 32)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !598, file: !575, line: 65, baseType: !48, size: 16, offset: 64)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "totmaterial", scope: !574, file: !575, line: 108, baseType: !22, size: 32, offset: 640)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "tot_triangle_point", scope: !574, file: !575, line: 110, baseType: !22, size: 32, offset: 672)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "tot_loose_point", scope: !574, file: !575, line: 111, baseType: !22, size: 32, offset: 704)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !574, file: !575, line: 114, baseType: !22, size: 32, offset: 736)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "totedge", scope: !574, file: !575, line: 115, baseType: !22, size: 32, offset: 768)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "legacy", scope: !574, file: !575, line: 119, baseType: !259, size: 8, offset: 800)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !517, file: !240, line: 186, baseType: !610, size: 32, offset: 8384)
!610 = !DIDerivedType(tag: DW_TAG_typedef, name: "DerivedMeshType", file: !240, line: 132, baseType: !611)
!611 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DerivedMeshType", file: !240, line: 128, baseType: !231, size: 32, elements: !612)
!612 = !{!613, !614, !615}
!613 = !DIEnumerator(name: "DM_TYPE_CDDM", value: 0, isUnsigned: true)
!614 = !DIEnumerator(name: "DM_TYPE_EDITBMESH", value: 1, isUnsigned: true)
!615 = !DIEnumerator(name: "DM_TYPE_CCGDM", value: 2, isUnsigned: true)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "auto_bump_scale", scope: !517, file: !240, line: 187, baseType: !210, size: 32, offset: 8416)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "dirty", scope: !517, file: !240, line: 188, baseType: !618, size: 32, offset: 8448)
!618 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMDirtyFlag", file: !240, line: 175, baseType: !619)
!619 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DMDirtyFlag", file: !240, line: 164, baseType: !231, size: 32, elements: !620)
!620 = !{!621, !622, !623}
!621 = !DIEnumerator(name: "DM_DIRTY_TESS_CDLAYERS", value: 1, isUnsigned: true)
!622 = !DIEnumerator(name: "DM_DIRTY_MCOL_UPDATE_DRAW", value: 2, isUnsigned: true)
!623 = !DIEnumerator(name: "DM_DIRTY_NORMALS", value: 4, isUnsigned: true)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "totmat", scope: !517, file: !240, line: 189, baseType: !22, size: 32, offset: 8480)
!625 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !517, file: !240, line: 190, baseType: !404, size: 64, offset: 8512)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "cd_flag", scope: !517, file: !240, line: 193, baseType: !14, size: 8, offset: 8576)
!627 = !DIDerivedType(tag: DW_TAG_member, name: "calcNormals", scope: !517, file: !240, line: 196, baseType: !628, size: 64, offset: 8640)
!628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !629, size: 64)
!629 = !DISubroutineType(types: !630)
!630 = !{null, !631}
!631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !632, size: 64)
!632 = !DIDerivedType(tag: DW_TAG_typedef, name: "DerivedMesh", file: !240, line: 177, baseType: !517)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "calcLoopNormals", scope: !517, file: !240, line: 199, baseType: !634, size: 64, offset: 8704)
!634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !635, size: 64)
!635 = !DISubroutineType(types: !636)
!636 = !{null, !631, !637}
!637 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !210)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "recalcTessellation", scope: !517, file: !240, line: 202, baseType: !628, size: 64, offset: 8768)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "getNumVerts", scope: !517, file: !240, line: 207, baseType: !640, size: 64, offset: 8832)
!640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !641, size: 64)
!641 = !DISubroutineType(types: !642)
!642 = !{!22, !631}
!643 = !DIDerivedType(tag: DW_TAG_member, name: "getNumEdges", scope: !517, file: !240, line: 208, baseType: !640, size: 64, offset: 8896)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "getNumTessFaces", scope: !517, file: !240, line: 209, baseType: !640, size: 64, offset: 8960)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "getNumLoops", scope: !517, file: !240, line: 210, baseType: !640, size: 64, offset: 9024)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "getNumPolys", scope: !517, file: !240, line: 211, baseType: !640, size: 64, offset: 9088)
!647 = !DIDerivedType(tag: DW_TAG_member, name: "getVert", scope: !517, file: !240, line: 218, baseType: !648, size: 64, offset: 9152)
!648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !649, size: 64)
!649 = !DISubroutineType(types: !650)
!650 = !{null, !631, !22, !204}
!651 = !DIDerivedType(tag: DW_TAG_member, name: "getEdge", scope: !517, file: !240, line: 219, baseType: !652, size: 64, offset: 9216)
!652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !653, size: 64)
!653 = !DISubroutineType(types: !654)
!654 = !{null, !631, !22, !655}
!655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !656, size: 64)
!656 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MEdge", file: !206, line: 48, size: 96, elements: !657)
!657 = !{!658, !659, !660, !661, !662}
!658 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !656, file: !206, line: 49, baseType: !231, size: 32)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !656, file: !206, line: 49, baseType: !231, size: 32, offset: 32)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "crease", scope: !656, file: !206, line: 50, baseType: !14, size: 8, offset: 64)
!661 = !DIDerivedType(tag: DW_TAG_member, name: "bweight", scope: !656, file: !206, line: 50, baseType: !14, size: 8, offset: 72)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !656, file: !206, line: 51, baseType: !48, size: 16, offset: 80)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "getTessFace", scope: !517, file: !240, line: 220, baseType: !664, size: 64, offset: 9280)
!664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !665, size: 64)
!665 = !DISubroutineType(types: !666)
!666 = !{null, !631, !22, !667}
!667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !668, size: 64)
!668 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MFace", file: !206, line: 42, size: 160, elements: !669)
!669 = !{!670, !671, !672, !673, !674, !675, !676}
!670 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !668, file: !206, line: 43, baseType: !231, size: 32)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !668, file: !206, line: 43, baseType: !231, size: 32, offset: 32)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !668, file: !206, line: 43, baseType: !231, size: 32, offset: 64)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !668, file: !206, line: 43, baseType: !231, size: 32, offset: 96)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !668, file: !206, line: 44, baseType: !48, size: 16, offset: 128)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "edcode", scope: !668, file: !206, line: 45, baseType: !14, size: 8, offset: 144)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !668, file: !206, line: 45, baseType: !14, size: 8, offset: 152)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "getVertArray", scope: !517, file: !240, line: 227, baseType: !678, size: 64, offset: 9344)
!678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !679, size: 64)
!679 = !DISubroutineType(types: !680)
!680 = !{!204, !631}
!681 = !DIDerivedType(tag: DW_TAG_member, name: "getEdgeArray", scope: !517, file: !240, line: 228, baseType: !682, size: 64, offset: 9408)
!682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !683, size: 64)
!683 = !DISubroutineType(types: !684)
!684 = !{!655, !631}
!685 = !DIDerivedType(tag: DW_TAG_member, name: "getTessFaceArray", scope: !517, file: !240, line: 229, baseType: !686, size: 64, offset: 9472)
!686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !687, size: 64)
!687 = !DISubroutineType(types: !688)
!688 = !{!667, !631}
!689 = !DIDerivedType(tag: DW_TAG_member, name: "getLoopArray", scope: !517, file: !240, line: 230, baseType: !690, size: 64, offset: 9536)
!690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !691, size: 64)
!691 = !DISubroutineType(types: !692)
!692 = !{!227, !631}
!693 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyArray", scope: !517, file: !240, line: 231, baseType: !694, size: 64, offset: 9600)
!694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !695, size: 64)
!695 = !DISubroutineType(types: !696)
!696 = !{!218, !631}
!697 = !DIDerivedType(tag: DW_TAG_member, name: "copyVertArray", scope: !517, file: !240, line: 236, baseType: !698, size: 64, offset: 9664)
!698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !699, size: 64)
!699 = !DISubroutineType(types: !700)
!700 = !{null, !631, !204}
!701 = !DIDerivedType(tag: DW_TAG_member, name: "copyEdgeArray", scope: !517, file: !240, line: 237, baseType: !702, size: 64, offset: 9728)
!702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !703, size: 64)
!703 = !DISubroutineType(types: !704)
!704 = !{null, !631, !655}
!705 = !DIDerivedType(tag: DW_TAG_member, name: "copyTessFaceArray", scope: !517, file: !240, line: 238, baseType: !706, size: 64, offset: 9792)
!706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !707, size: 64)
!707 = !DISubroutineType(types: !708)
!708 = !{null, !631, !667}
!709 = !DIDerivedType(tag: DW_TAG_member, name: "copyLoopArray", scope: !517, file: !240, line: 239, baseType: !710, size: 64, offset: 9856)
!710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !711, size: 64)
!711 = !DISubroutineType(types: !712)
!712 = !{null, !631, !227}
!713 = !DIDerivedType(tag: DW_TAG_member, name: "copyPolyArray", scope: !517, file: !240, line: 240, baseType: !714, size: 64, offset: 9920)
!714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !715, size: 64)
!715 = !DISubroutineType(types: !716)
!716 = !{null, !631, !218}
!717 = !DIDerivedType(tag: DW_TAG_member, name: "dupVertArray", scope: !517, file: !240, line: 245, baseType: !678, size: 64, offset: 9984)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "dupEdgeArray", scope: !517, file: !240, line: 246, baseType: !682, size: 64, offset: 10048)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "dupTessFaceArray", scope: !517, file: !240, line: 247, baseType: !686, size: 64, offset: 10112)
!720 = !DIDerivedType(tag: DW_TAG_member, name: "dupLoopArray", scope: !517, file: !240, line: 248, baseType: !690, size: 64, offset: 10176)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "dupPolyArray", scope: !517, file: !240, line: 249, baseType: !694, size: 64, offset: 10240)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "getVertData", scope: !517, file: !240, line: 255, baseType: !723, size: 64, offset: 10304)
!723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !724, size: 64)
!724 = !DISubroutineType(types: !725)
!725 = !{!56, !631, !22, !22}
!726 = !DIDerivedType(tag: DW_TAG_member, name: "getEdgeData", scope: !517, file: !240, line: 256, baseType: !723, size: 64, offset: 10368)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "getTessFaceData", scope: !517, file: !240, line: 257, baseType: !723, size: 64, offset: 10432)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyData", scope: !517, file: !240, line: 258, baseType: !723, size: 64, offset: 10496)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "getVertDataArray", scope: !517, file: !240, line: 264, baseType: !730, size: 64, offset: 10560)
!730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !731, size: 64)
!731 = !DISubroutineType(types: !732)
!732 = !{!56, !631, !22}
!733 = !DIDerivedType(tag: DW_TAG_member, name: "getEdgeDataArray", scope: !517, file: !240, line: 265, baseType: !730, size: 64, offset: 10624)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "getTessFaceDataArray", scope: !517, file: !240, line: 266, baseType: !730, size: 64, offset: 10688)
!735 = !DIDerivedType(tag: DW_TAG_member, name: "getLoopDataArray", scope: !517, file: !240, line: 267, baseType: !730, size: 64, offset: 10752)
!736 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyDataArray", scope: !517, file: !240, line: 268, baseType: !730, size: 64, offset: 10816)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "getVertDataLayout", scope: !517, file: !240, line: 272, baseType: !738, size: 64, offset: 10880)
!738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !739, size: 64)
!739 = !DISubroutineType(types: !740)
!740 = !{!741, !631}
!741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !520, size: 64)
!742 = !DIDerivedType(tag: DW_TAG_member, name: "getEdgeDataLayout", scope: !517, file: !240, line: 273, baseType: !738, size: 64, offset: 10944)
!743 = !DIDerivedType(tag: DW_TAG_member, name: "getTessFaceDataLayout", scope: !517, file: !240, line: 274, baseType: !738, size: 64, offset: 11008)
!744 = !DIDerivedType(tag: DW_TAG_member, name: "getLoopDataLayout", scope: !517, file: !240, line: 275, baseType: !738, size: 64, offset: 11072)
!745 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyDataLayout", scope: !517, file: !240, line: 276, baseType: !738, size: 64, offset: 11136)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "copyFromVertCData", scope: !517, file: !240, line: 279, baseType: !747, size: 64, offset: 11200)
!747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !748, size: 64)
!748 = !DISubroutineType(types: !749)
!749 = !{null, !631, !22, !741, !22}
!750 = !DIDerivedType(tag: DW_TAG_member, name: "copyFromEdgeCData", scope: !517, file: !240, line: 280, baseType: !747, size: 64, offset: 11264)
!751 = !DIDerivedType(tag: DW_TAG_member, name: "copyFromFaceCData", scope: !517, file: !240, line: 281, baseType: !747, size: 64, offset: 11328)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "getNumGrids", scope: !517, file: !240, line: 284, baseType: !640, size: 64, offset: 11392)
!753 = !DIDerivedType(tag: DW_TAG_member, name: "getGridSize", scope: !517, file: !240, line: 285, baseType: !640, size: 64, offset: 11456)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "getGridData", scope: !517, file: !240, line: 286, baseType: !755, size: 64, offset: 11520)
!755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !756, size: 64)
!756 = !DISubroutineType(types: !757)
!757 = !{!758, !631}
!758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !759, size: 64)
!759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !760, size: 64)
!760 = !DICompositeType(tag: DW_TAG_structure_type, name: "CCGElem", file: !240, line: 82, flags: DIFlagFwdDecl)
!761 = !DIDerivedType(tag: DW_TAG_member, name: "getGridAdjacency", scope: !517, file: !240, line: 287, baseType: !762, size: 64, offset: 11584)
!762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !763, size: 64)
!763 = !DISubroutineType(types: !764)
!764 = !{!765, !631}
!765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !766, size: 64)
!766 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMGridAdjacency", file: !240, line: 120, baseType: !767)
!767 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DMGridAdjacency", file: !240, line: 117, size: 256, elements: !768)
!768 = !{!769, !771}
!769 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !767, file: !240, line: 118, baseType: !770, size: 128)
!770 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 128, elements: !420)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "rotation", scope: !767, file: !240, line: 119, baseType: !770, size: 128, offset: 128)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "getGridOffset", scope: !517, file: !240, line: 288, baseType: !773, size: 64, offset: 11648)
!773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !774, size: 64)
!774 = !DISubroutineType(types: !775)
!775 = !{!250, !631}
!776 = !DIDerivedType(tag: DW_TAG_member, name: "getGridKey", scope: !517, file: !240, line: 289, baseType: !777, size: 64, offset: 11712)
!777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !778, size: 64)
!778 = !DISubroutineType(types: !779)
!779 = !{null, !631, !780}
!780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !781, size: 64)
!781 = !DICompositeType(tag: DW_TAG_structure_type, name: "CCGKey", file: !240, line: 83, flags: DIFlagFwdDecl)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "getGridFlagMats", scope: !517, file: !240, line: 290, baseType: !783, size: 64, offset: 11776)
!783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !784, size: 64)
!784 = !DISubroutineType(types: !785)
!785 = !{!786, !631}
!786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !787, size: 64)
!787 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMFlagMat", file: !240, line: 126, baseType: !788)
!788 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DMFlagMat", file: !240, line: 123, size: 32, elements: !789)
!789 = !{!790, !791}
!790 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !788, file: !240, line: 124, baseType: !48, size: 16)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !788, file: !240, line: 125, baseType: !14, size: 8, offset: 16)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "getGridHidden", scope: !517, file: !240, line: 291, baseType: !793, size: 64, offset: 11840)
!793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !794, size: 64)
!794 = !DISubroutineType(types: !795)
!795 = !{!796, !631}
!796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !277, size: 64)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "foreachMappedVert", scope: !517, file: !240, line: 299, baseType: !798, size: 64, offset: 11904)
!798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !799, size: 64)
!799 = !DISubroutineType(types: !800)
!800 = !{null, !631, !801, !56, !807}
!801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !802, size: 64)
!802 = !DISubroutineType(types: !803)
!803 = !{null, !56, !22, !804, !804, !805}
!804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !637, size: 64)
!805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !806, size: 64)
!806 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !48)
!807 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMForeachFlag", file: !240, line: 162, baseType: !808)
!808 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DMForeachFlag", file: !240, line: 159, baseType: !231, size: 32, elements: !809)
!809 = !{!810, !811}
!810 = !DIEnumerator(name: "DM_FOREACH_NOP", value: 0, isUnsigned: true)
!811 = !DIEnumerator(name: "DM_FOREACH_USE_NORMAL", value: 1, isUnsigned: true)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "foreachMappedEdge", scope: !517, file: !240, line: 309, baseType: !813, size: 64, offset: 11968)
!813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !814, size: 64)
!814 = !DISubroutineType(types: !815)
!815 = !{null, !631, !816, !56}
!816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !817, size: 64)
!817 = !DISubroutineType(types: !818)
!818 = !{null, !56, !22, !804, !804}
!819 = !DIDerivedType(tag: DW_TAG_member, name: "foreachMappedLoop", scope: !517, file: !240, line: 317, baseType: !820, size: 64, offset: 12032)
!820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !821, size: 64)
!821 = !DISubroutineType(types: !822)
!822 = !{null, !631, !823, !56, !807}
!823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !824, size: 64)
!824 = !DISubroutineType(types: !825)
!825 = !{null, !56, !22, !22, !804, !804}
!826 = !DIDerivedType(tag: DW_TAG_member, name: "foreachMappedFaceCenter", scope: !517, file: !240, line: 327, baseType: !827, size: 64, offset: 12096)
!827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !828, size: 64)
!828 = !DISubroutineType(types: !829)
!829 = !{null, !631, !816, !56, !807}
!830 = !DIDerivedType(tag: DW_TAG_member, name: "getMinMax", scope: !517, file: !240, line: 337, baseType: !831, size: 64, offset: 12160)
!831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !832, size: 64)
!832 = !DISubroutineType(types: !833)
!833 = !{null, !631, !242, !242}
!834 = !DIDerivedType(tag: DW_TAG_member, name: "getVertCo", scope: !517, file: !240, line: 344, baseType: !835, size: 64, offset: 12224)
!835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !836, size: 64)
!836 = !DISubroutineType(types: !837)
!837 = !{null, !631, !22, !242}
!838 = !DIDerivedType(tag: DW_TAG_member, name: "getVertCos", scope: !517, file: !240, line: 347, baseType: !839, size: 64, offset: 12288)
!839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !840, size: 64)
!840 = !DISubroutineType(types: !841)
!841 = !{null, !631, !236}
!842 = !DIDerivedType(tag: DW_TAG_member, name: "getVertNo", scope: !517, file: !240, line: 350, baseType: !835, size: 64, offset: 12352)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyNo", scope: !517, file: !240, line: 351, baseType: !835, size: 64, offset: 12416)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyMap", scope: !517, file: !240, line: 355, baseType: !845, size: 64, offset: 12480)
!845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !846, size: 64)
!846 = !DISubroutineType(types: !847)
!847 = !{!244, !162, !631}
!848 = !DIDerivedType(tag: DW_TAG_member, name: "getPBVH", scope: !517, file: !240, line: 359, baseType: !849, size: 64, offset: 12544)
!849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !850, size: 64)
!850 = !DISubroutineType(types: !851)
!851 = !{!264, !162, !631}
!852 = !DIDerivedType(tag: DW_TAG_member, name: "drawVerts", scope: !517, file: !240, line: 364, baseType: !628, size: 64, offset: 12608)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "drawUVEdges", scope: !517, file: !240, line: 367, baseType: !628, size: 64, offset: 12672)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "drawEdges", scope: !517, file: !240, line: 373, baseType: !855, size: 64, offset: 12736)
!855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !856, size: 64)
!856 = !DISubroutineType(types: !857)
!857 = !{null, !631, !259, !259}
!858 = !DIDerivedType(tag: DW_TAG_member, name: "drawLooseEdges", scope: !517, file: !240, line: 376, baseType: !628, size: 64, offset: 12800)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "drawFacesSolid", scope: !517, file: !240, line: 385, baseType: !860, size: 64, offset: 12864)
!860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !861, size: 64)
!861 = !DISubroutineType(types: !862)
!862 = !{null, !631, !863, !259, !864}
!863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !419, size: 64)
!864 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMSetMaterial", file: !240, line: 146, baseType: !865)
!865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !866, size: 64)
!866 = !DISubroutineType(types: !867)
!867 = !{!22, !22, !56}
!868 = !DIDerivedType(tag: DW_TAG_member, name: "drawFacesTex", scope: !517, file: !240, line: 391, baseType: !869, size: 64, offset: 12928)
!869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !870, size: 64)
!870 = !DISubroutineType(types: !871)
!871 = !{null, !631, !872, !977, !56, !981}
!872 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMSetDrawOptionsTex", file: !240, line: 150, baseType: !873)
!873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !874, size: 64)
!874 = !DISubroutineType(types: !875)
!875 = !{!876, !883, !976, !22}
!876 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMDrawOption", file: !240, line: 143, baseType: !877)
!877 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DMDrawOption", file: !240, line: 134, baseType: !231, size: 32, elements: !878)
!878 = !{!879, !880, !881, !882}
!879 = !DIEnumerator(name: "DM_DRAW_OPTION_SKIP", value: 0, isUnsigned: true)
!880 = !DIEnumerator(name: "DM_DRAW_OPTION_NORMAL", value: 1, isUnsigned: true)
!881 = !DIEnumerator(name: "DM_DRAW_OPTION_NO_MCOL", value: 2, isUnsigned: true)
!882 = !DIEnumerator(name: "DM_DRAW_OPTION_STIPPLE", value: 3, isUnsigned: true)
!883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !884, size: 64)
!884 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MTFace", file: !206, line: 160, size: 384, elements: !885)
!885 = !{!886, !889, !971, !972, !973, !974, !975}
!886 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !884, file: !206, line: 161, baseType: !887, size: 256)
!887 = !DICompositeType(tag: DW_TAG_array_type, baseType: !210, size: 256, elements: !888)
!888 = !{!421, !202}
!889 = !DIDerivedType(tag: DW_TAG_member, name: "tpage", scope: !884, file: !206, line: 162, baseType: !890, size: 64, offset: 256)
!890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !891, size: 64)
!891 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Image", file: !892, line: 77, size: 15424, elements: !893)
!892 = !DIFile(filename: "blender/source/blender/makesdna/DNA_image_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!893 = !{!894, !895, !896, !899, !902, !906, !909, !912, !913, !914, !915, !916, !917, !918, !919, !920, !921, !922, !923, !924, !925, !926, !927, !928, !942, !943, !944, !945, !946, !947, !948, !949, !950, !951, !952, !953, !954, !960, !961, !965}
!894 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !891, file: !892, line: 78, baseType: !112, size: 960)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !891, file: !892, line: 80, baseType: !130, size: 8192, offset: 960)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !891, file: !892, line: 82, baseType: !897, size: 64, offset: 9152)
!897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !898, size: 64)
!898 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieCache", file: !892, line: 43, flags: DIFlagFwdDecl)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !891, file: !892, line: 83, baseType: !900, size: 64, offset: 9216)
!900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !901, size: 64)
!901 = !DICompositeType(tag: DW_TAG_structure_type, name: "GPUTexture", file: !39, line: 46, flags: DIFlagFwdDecl)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !891, file: !892, line: 86, baseType: !903, size: 64, offset: 9280)
!903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !904, size: 64)
!904 = !DICompositeType(tag: DW_TAG_structure_type, name: "anim", file: !905, line: 85, flags: DIFlagFwdDecl)
!905 = !DIFile(filename: "blender/source/blender/imbuf/IMB_imbuf.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!906 = !DIDerivedType(tag: DW_TAG_member, name: "rr", scope: !891, file: !892, line: 87, baseType: !907, size: 64, offset: 9344)
!907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !908, size: 64)
!908 = !DICompositeType(tag: DW_TAG_structure_type, name: "RenderResult", file: !892, line: 44, flags: DIFlagFwdDecl)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "renders", scope: !891, file: !892, line: 89, baseType: !910, size: 512, offset: 9408)
!910 = !DICompositeType(tag: DW_TAG_array_type, baseType: !907, size: 512, elements: !911)
!911 = !{!316}
!912 = !DIDerivedType(tag: DW_TAG_member, name: "render_slot", scope: !891, file: !892, line: 90, baseType: !48, size: 16, offset: 9920)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "last_render_slot", scope: !891, file: !892, line: 90, baseType: !48, size: 16, offset: 9936)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !891, file: !892, line: 92, baseType: !48, size: 16, offset: 9952)
!915 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !891, file: !892, line: 92, baseType: !48, size: 16, offset: 9968)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !891, file: !892, line: 93, baseType: !48, size: 16, offset: 9984)
!917 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !891, file: !892, line: 93, baseType: !48, size: 16, offset: 10000)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !891, file: !892, line: 94, baseType: !22, size: 32, offset: 10016)
!919 = !DIDerivedType(tag: DW_TAG_member, name: "tpageflag", scope: !891, file: !892, line: 97, baseType: !48, size: 16, offset: 10048)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "totbind", scope: !891, file: !892, line: 97, baseType: !48, size: 16, offset: 10064)
!921 = !DIDerivedType(tag: DW_TAG_member, name: "xrep", scope: !891, file: !892, line: 98, baseType: !48, size: 16, offset: 10080)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "yrep", scope: !891, file: !892, line: 98, baseType: !48, size: 16, offset: 10096)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "twsta", scope: !891, file: !892, line: 99, baseType: !48, size: 16, offset: 10112)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "twend", scope: !891, file: !892, line: 99, baseType: !48, size: 16, offset: 10128)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "bindcode", scope: !891, file: !892, line: 100, baseType: !231, size: 32, offset: 10144)
!926 = !DIDerivedType(tag: DW_TAG_member, name: "repbind", scope: !891, file: !892, line: 101, baseType: !277, size: 64, offset: 10176)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !891, file: !892, line: 103, baseType: !136, size: 64, offset: 10240)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !891, file: !892, line: 104, baseType: !929, size: 64, offset: 10304)
!929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !930, size: 64)
!930 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PreviewImage", file: !39, line: 159, size: 448, elements: !931)
!931 = !{!932, !934, !935, !937, !938, !940}
!932 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !930, file: !39, line: 161, baseType: !933, size: 64)
!933 = !DICompositeType(tag: DW_TAG_array_type, baseType: !231, size: 64, elements: !201)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !930, file: !39, line: 162, baseType: !933, size: 64, offset: 64)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !930, file: !39, line: 163, baseType: !936, size: 32, offset: 128)
!936 = !DICompositeType(tag: DW_TAG_array_type, baseType: !48, size: 32, elements: !201)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !930, file: !39, line: 164, baseType: !936, size: 32, offset: 160)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "rect", scope: !930, file: !39, line: 165, baseType: !939, size: 128, offset: 192)
!939 = !DICompositeType(tag: DW_TAG_array_type, baseType: !277, size: 128, elements: !201)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !930, file: !39, line: 166, baseType: !941, size: 128, offset: 320)
!941 = !DICompositeType(tag: DW_TAG_array_type, baseType: !900, size: 128, elements: !201)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "lastupdate", scope: !891, file: !892, line: 107, baseType: !210, size: 32, offset: 10368)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "lastused", scope: !891, file: !892, line: 108, baseType: !22, size: 32, offset: 10400)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "animspeed", scope: !891, file: !892, line: 109, baseType: !48, size: 16, offset: 10432)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !891, file: !892, line: 110, baseType: !48, size: 16, offset: 10448)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "gen_x", scope: !891, file: !892, line: 113, baseType: !22, size: 32, offset: 10464)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "gen_y", scope: !891, file: !892, line: 113, baseType: !22, size: 32, offset: 10496)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "gen_type", scope: !891, file: !892, line: 114, baseType: !14, size: 8, offset: 10528)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "gen_flag", scope: !891, file: !892, line: 114, baseType: !14, size: 8, offset: 10536)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "gen_depth", scope: !891, file: !892, line: 115, baseType: !48, size: 16, offset: 10544)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "gen_color", scope: !891, file: !892, line: 116, baseType: !419, size: 128, offset: 10560)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "aspx", scope: !891, file: !892, line: 119, baseType: !210, size: 32, offset: 10688)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "aspy", scope: !891, file: !892, line: 119, baseType: !210, size: 32, offset: 10720)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !891, file: !892, line: 122, baseType: !955, size: 512, offset: 10752)
!955 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedColorspaceSettings", file: !956, line: 182, baseType: !957)
!956 = !DIFile(filename: "blender/source/blender/makesdna/DNA_color_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!957 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedColorspaceSettings", file: !956, line: 180, size: 512, elements: !958)
!958 = !{!959}
!959 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !957, file: !956, line: 181, baseType: !33, size: 512)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_mode", scope: !891, file: !892, line: 123, baseType: !14, size: 8, offset: 11264)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !891, file: !892, line: 125, baseType: !962, size: 56, offset: 11272)
!962 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 56, elements: !963)
!963 = !{!964}
!964 = !DISubrange(count: 7)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "render_slots", scope: !891, file: !892, line: 126, baseType: !966, size: 4096, offset: 11328)
!966 = !DICompositeType(tag: DW_TAG_array_type, baseType: !967, size: 4096, elements: !911)
!967 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderSlot", file: !892, line: 69, baseType: !968)
!968 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderSlot", file: !892, line: 67, size: 512, elements: !969)
!969 = !{!970}
!970 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !968, file: !892, line: 68, baseType: !33, size: 512)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !884, file: !206, line: 163, baseType: !14, size: 8, offset: 320)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "transp", scope: !884, file: !206, line: 163, baseType: !14, size: 8, offset: 328)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !884, file: !206, line: 164, baseType: !48, size: 16, offset: 336)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "tile", scope: !884, file: !206, line: 164, baseType: !48, size: 16, offset: 352)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "unwrap", scope: !884, file: !206, line: 164, baseType: !48, size: 16, offset: 368)
!976 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !259)
!977 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMCompareDrawOptions", file: !240, line: 147, baseType: !978)
!978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !979, size: 64)
!979 = !DISubroutineType(types: !980)
!980 = !{!22, !56, !22, !22}
!981 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMDrawFlag", file: !240, line: 157, baseType: !982)
!982 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DMDrawFlag", file: !240, line: 152, baseType: !231, size: 32, elements: !983)
!983 = !{!984, !985, !986, !987}
!984 = !DIEnumerator(name: "DM_DRAW_USE_COLORS", value: 1, isUnsigned: true)
!985 = !DIEnumerator(name: "DM_DRAW_ALWAYS_SMOOTH", value: 2, isUnsigned: true)
!986 = !DIEnumerator(name: "DM_DRAW_USE_ACTIVE_UV", value: 4, isUnsigned: true)
!987 = !DIEnumerator(name: "DM_DRAW_USE_TEXPAINT_UV", value: 8, isUnsigned: true)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "drawFacesGLSL", scope: !517, file: !240, line: 400, baseType: !989, size: 64, offset: 12992)
!989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !990, size: 64)
!990 = !DISubroutineType(types: !991)
!991 = !{null, !631, !864}
!992 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedFaces", scope: !517, file: !240, line: 415, baseType: !993, size: 64, offset: 13056)
!993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !994, size: 64)
!994 = !DISubroutineType(types: !995)
!995 = !{null, !631, !996, !864, !977, !56, !981}
!996 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMSetDrawOptions", file: !240, line: 149, baseType: !997)
!997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !998, size: 64)
!998 = !DISubroutineType(types: !999)
!999 = !{!876, !56, !22}
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedFacesTex", scope: !517, file: !240, line: 425, baseType: !1001, size: 64, offset: 13120)
!1001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1002, size: 64)
!1002 = !DISubroutineType(types: !1003)
!1003 = !{null, !631, !996, !977, !56, !981}
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedFacesGLSL", scope: !517, file: !240, line: 435, baseType: !1005, size: 64, offset: 13184)
!1005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1006, size: 64)
!1006 = !DISubroutineType(types: !1007)
!1007 = !{null, !631, !864, !996, !56}
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedEdges", scope: !517, file: !240, line: 444, baseType: !1009, size: 64, offset: 13248)
!1009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1010, size: 64)
!1010 = !DISubroutineType(types: !1011)
!1011 = !{null, !631, !996, !56}
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedEdgesInterp", scope: !517, file: !240, line: 455, baseType: !1013, size: 64, offset: 13312)
!1013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1014, size: 64)
!1014 = !DISubroutineType(types: !1015)
!1015 = !{null, !631, !996, !1016, !56}
!1016 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMSetDrawInterpOptions", file: !240, line: 148, baseType: !1017)
!1017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1018, size: 64)
!1018 = !DISubroutineType(types: !1019)
!1019 = !{null, !56, !22, !210}
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedFacesMat", scope: !517, file: !240, line: 464, baseType: !1021, size: 64, offset: 13376)
!1021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1022, size: 64)
!1022 = !DISubroutineType(types: !1023)
!1023 = !{null, !631, !1024, !1027, !56}
!1024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1025, size: 64)
!1025 = !DISubroutineType(types: !1026)
!1026 = !{null, !56, !22, !56}
!1027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1028, size: 64)
!1028 = !DISubroutineType(types: !1029)
!1029 = !{!259, !56, !22}
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !517, file: !240, line: 470, baseType: !628, size: 64, offset: 13440)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "derivedFinal", scope: !163, file: !164, line: 277, baseType: !516, size: 64, offset: 10368)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "lastDataMask", scope: !163, file: !164, line: 278, baseType: !1033, size: 64, offset: 10432)
!1033 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !1034, line: 27, baseType: !1035)
!1034 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h", directory: "")
!1035 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint64_t", file: !1036, line: 45, baseType: !1037)
!1036 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!1037 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask", scope: !163, file: !164, line: 279, baseType: !1033, size: 64, offset: 10496)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !163, file: !164, line: 280, baseType: !231, size: 32, offset: 10560)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "init_state", scope: !163, file: !164, line: 281, baseType: !231, size: 32, offset: 10592)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "gpulamp", scope: !163, file: !164, line: 283, baseType: !58, size: 128, offset: 10624)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "pc_ids", scope: !163, file: !164, line: 284, baseType: !58, size: 128, offset: 10752)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "duplilist", scope: !163, file: !164, line: 285, baseType: !1044, size: 64, offset: 10880)
!1044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !58, size: 64)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_object", scope: !163, file: !164, line: 287, baseType: !1046, size: 64, offset: 10944)
!1046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1047, size: 64)
!1047 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyOb", file: !164, line: 59, flags: DIFlagFwdDecl)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_constraint", scope: !163, file: !164, line: 288, baseType: !1049, size: 64, offset: 11008)
!1049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1050, size: 64)
!1050 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyCon", file: !164, line: 288, flags: DIFlagFwdDecl)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "ima_ofs", scope: !163, file: !164, line: 290, baseType: !1052, size: 64, offset: 11072)
!1052 = !DICompositeType(tag: DW_TAG_array_type, baseType: !210, size: 64, elements: !201)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "iuser", scope: !163, file: !164, line: 291, baseType: !1054, size: 64, offset: 11136)
!1054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1055, size: 64)
!1055 = !DIDerivedType(tag: DW_TAG_typedef, name: "ImageUser", file: !892, line: 65, baseType: !1056)
!1056 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageUser", file: !892, line: 50, size: 320, elements: !1057)
!1057 = !{!1058, !1059, !1060, !1061, !1062, !1063, !1064, !1065, !1066, !1067, !1068, !1069, !1070, !1071}
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !1056, file: !892, line: 51, baseType: !152, size: 64)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !1056, file: !892, line: 53, baseType: !22, size: 32, offset: 64)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "frames", scope: !1056, file: !892, line: 54, baseType: !22, size: 32, offset: 96)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1056, file: !892, line: 55, baseType: !22, size: 32, offset: 128)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !1056, file: !892, line: 55, baseType: !22, size: 32, offset: 160)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "fie_ima", scope: !1056, file: !892, line: 56, baseType: !14, size: 8, offset: 192)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "cycl", scope: !1056, file: !892, line: 56, baseType: !14, size: 8, offset: 200)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1056, file: !892, line: 57, baseType: !14, size: 8, offset: 208)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1056, file: !892, line: 57, baseType: !14, size: 8, offset: 216)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "multi_index", scope: !1056, file: !892, line: 59, baseType: !48, size: 16, offset: 224)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "layer", scope: !1056, file: !892, line: 59, baseType: !48, size: 16, offset: 240)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "pass", scope: !1056, file: !892, line: 59, baseType: !48, size: 16, offset: 256)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1056, file: !892, line: 61, baseType: !48, size: 16, offset: 272)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1056, file: !892, line: 63, baseType: !22, size: 32, offset: 288)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "lodlevels", scope: !163, file: !164, line: 293, baseType: !58, size: 128, offset: 11200)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "currentlod", scope: !163, file: !164, line: 294, baseType: !1074, size: 64, offset: 11328)
!1074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1075, size: 64)
!1075 = !DIDerivedType(tag: DW_TAG_typedef, name: "LodLevel", file: !164, line: 113, baseType: !1076)
!1076 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LodLevel", file: !164, line: 108, size: 256, elements: !1077)
!1077 = !{!1078, !1080, !1081, !1082, !1083}
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1076, file: !164, line: 109, baseType: !1079, size: 64)
!1079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1076, size: 64)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1076, file: !164, line: 109, baseType: !1079, size: 64, offset: 64)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !1076, file: !164, line: 110, baseType: !162, size: 64, offset: 128)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1076, file: !164, line: 111, baseType: !22, size: 32, offset: 192)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "distance", scope: !1076, file: !164, line: 112, baseType: !210, size: 32, offset: 224)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "world", scope: !153, file: !154, line: 1221, baseType: !1085, size: 64, offset: 1088)
!1085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1086, size: 64)
!1086 = !DICompositeType(tag: DW_TAG_structure_type, name: "World", file: !154, line: 52, flags: DIFlagFwdDecl)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !153, file: !154, line: 1223, baseType: !152, size: 64, offset: 1152)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !153, file: !154, line: 1225, baseType: !58, size: 128, offset: 1216)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "basact", scope: !153, file: !154, line: 1226, baseType: !1090, size: 64, offset: 1344)
!1090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1091, size: 64)
!1091 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Base", file: !154, line: 69, size: 320, elements: !1092)
!1092 = !{!1093, !1094, !1095, !1096, !1097, !1098, !1099, !1100}
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1091, file: !154, line: 70, baseType: !1090, size: 64)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1091, file: !154, line: 70, baseType: !1090, size: 64, offset: 64)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !1091, file: !154, line: 71, baseType: !231, size: 32, offset: 128)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "selcol", scope: !1091, file: !154, line: 71, baseType: !231, size: 32, offset: 160)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1091, file: !154, line: 72, baseType: !22, size: 32, offset: 192)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "sx", scope: !1091, file: !154, line: 73, baseType: !48, size: 16, offset: 224)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "sy", scope: !1091, file: !154, line: 73, baseType: !48, size: 16, offset: 240)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1091, file: !154, line: 74, baseType: !162, size: 64, offset: 256)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "obedit", scope: !153, file: !154, line: 1227, baseType: !162, size: 64, offset: 1408)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !153, file: !154, line: 1229, baseType: !209, size: 96, offset: 1472)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "twcent", scope: !153, file: !154, line: 1230, baseType: !209, size: 96, offset: 1568)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "twmin", scope: !153, file: !154, line: 1231, baseType: !209, size: 96, offset: 1664)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "twmax", scope: !153, file: !154, line: 1231, baseType: !209, size: 96, offset: 1760)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !153, file: !154, line: 1233, baseType: !231, size: 32, offset: 1856)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "layact", scope: !153, file: !154, line: 1234, baseType: !22, size: 32, offset: 1888)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "lay_updated", scope: !153, file: !154, line: 1235, baseType: !231, size: 32, offset: 1920)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !153, file: !154, line: 1237, baseType: !48, size: 16, offset: 1952)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !153, file: !154, line: 1239, baseType: !14, size: 8, offset: 1968)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !153, file: !154, line: 1240, baseType: !1112, size: 8, offset: 1976)
!1112 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 8, elements: !1113)
!1113 = !{!1114}
!1114 = !DISubrange(count: 1)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !153, file: !154, line: 1242, baseType: !1116, size: 64, offset: 1984)
!1116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1117, size: 64)
!1117 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTree", file: !1118, line: 328, size: 3456, elements: !1119)
!1118 = !DIFile(filename: "blender/source/blender/makesdna/DNA_node_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1119 = !{!1120, !1121, !1122, !1126, !1127, !1128, !1129, !1130, !1131, !1132, !1133, !1134, !1135, !1136, !1137, !1138, !1139, !1140, !1141, !1142, !1143, !1144, !1153, !1154, !1155, !1158, !1163, !1164, !1167, !1171, !1175, !1179, !1183, !1184, !1185, !1186}
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1117, file: !1118, line: 329, baseType: !112, size: 960)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !1117, file: !1118, line: 330, baseType: !158, size: 64, offset: 960)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "typeinfo", scope: !1117, file: !1118, line: 332, baseType: !1123, size: 64, offset: 1024)
!1123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1124, size: 64)
!1124 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTreeType", file: !1125, line: 32, flags: DIFlagFwdDecl)
!1125 = !DIFile(filename: "blender/source/blender/makesrna/RNA_enum_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !1117, file: !1118, line: 333, baseType: !33, size: 512, offset: 1088)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "interface_type", scope: !1117, file: !1118, line: 335, baseType: !81, size: 64, offset: 1600)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !1117, file: !1118, line: 337, baseType: !378, size: 64, offset: 1664)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "view_center", scope: !1117, file: !1118, line: 338, baseType: !1052, size: 64, offset: 1728)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "nodes", scope: !1117, file: !1118, line: 340, baseType: !58, size: 128, offset: 1792)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !1117, file: !1118, line: 340, baseType: !58, size: 128, offset: 1920)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1117, file: !1118, line: 342, baseType: !22, size: 32, offset: 2048)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1117, file: !1118, line: 342, baseType: !22, size: 32, offset: 2080)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "cur_index", scope: !1117, file: !1118, line: 343, baseType: !22, size: 32, offset: 2112)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1117, file: !1118, line: 345, baseType: !22, size: 32, offset: 2144)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "update", scope: !1117, file: !1118, line: 346, baseType: !22, size: 32, offset: 2176)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "is_updating", scope: !1117, file: !1118, line: 347, baseType: !48, size: 16, offset: 2208)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !1117, file: !1118, line: 348, baseType: !48, size: 16, offset: 2224)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1117, file: !1118, line: 349, baseType: !22, size: 32, offset: 2240)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "nodetype", scope: !1117, file: !1118, line: 351, baseType: !22, size: 32, offset: 2272)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "edit_quality", scope: !1117, file: !1118, line: 353, baseType: !48, size: 16, offset: 2304)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "render_quality", scope: !1117, file: !1118, line: 354, baseType: !48, size: 16, offset: 2320)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "chunksize", scope: !1117, file: !1118, line: 355, baseType: !22, size: 32, offset: 2336)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "viewer_border", scope: !1117, file: !1118, line: 357, baseType: !1145, size: 128, offset: 2368)
!1145 = !DIDerivedType(tag: DW_TAG_typedef, name: "rctf", file: !1146, line: 95, baseType: !1147)
!1146 = !DIFile(filename: "blender/source/blender/makesdna/DNA_vec_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1147 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rctf", file: !1146, line: 92, size: 128, elements: !1148)
!1148 = !{!1149, !1150, !1151, !1152}
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !1147, file: !1146, line: 93, baseType: !210, size: 32)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !1147, file: !1146, line: 93, baseType: !210, size: 32, offset: 32)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !1147, file: !1146, line: 94, baseType: !210, size: 32, offset: 64)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !1147, file: !1146, line: 94, baseType: !210, size: 32, offset: 96)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "inputs", scope: !1117, file: !1118, line: 363, baseType: !58, size: 128, offset: 2496)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "outputs", scope: !1117, file: !1118, line: 363, baseType: !58, size: 128, offset: 2624)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "previews", scope: !1117, file: !1118, line: 368, baseType: !1156, size: 64, offset: 2752)
!1156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1157, size: 64)
!1157 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeInstanceHash", file: !1118, line: 48, flags: DIFlagFwdDecl)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "active_viewer_key", scope: !1117, file: !1118, line: 372, baseType: !1159, size: 32, offset: 2816)
!1159 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeInstanceKey", file: !1118, line: 274, baseType: !1160)
!1160 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeInstanceKey", file: !1118, line: 271, size: 32, elements: !1161)
!1161 = !{!1162}
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1160, file: !1118, line: 273, baseType: !231, size: 32)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1117, file: !1118, line: 373, baseType: !22, size: 32, offset: 2848)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "execdata", scope: !1117, file: !1118, line: 382, baseType: !1165, size: 64, offset: 2880)
!1165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1166, size: 64)
!1166 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTreeExec", file: !1118, line: 46, flags: DIFlagFwdDecl)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "progress", scope: !1117, file: !1118, line: 385, baseType: !1168, size: 64, offset: 2944)
!1168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1169, size: 64)
!1169 = !DISubroutineType(types: !1170)
!1170 = !{null, !56, !210}
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "stats_draw", scope: !1117, file: !1118, line: 386, baseType: !1172, size: 64, offset: 3008)
!1172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1173, size: 64)
!1173 = !DISubroutineType(types: !1174)
!1174 = !{null, !56, !192}
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "test_break", scope: !1117, file: !1118, line: 387, baseType: !1176, size: 64, offset: 3072)
!1176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1177, size: 64)
!1177 = !DISubroutineType(types: !1178)
!1178 = !{!22, !56}
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "update_draw", scope: !1117, file: !1118, line: 388, baseType: !1180, size: 64, offset: 3136)
!1180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1181, size: 64)
!1181 = !DISubroutineType(types: !1182)
!1182 = !{null, !56}
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "tbh", scope: !1117, file: !1118, line: 389, baseType: !56, size: 64, offset: 3200)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "prh", scope: !1117, file: !1118, line: 389, baseType: !56, size: 64, offset: 3264)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "sdh", scope: !1117, file: !1118, line: 389, baseType: !56, size: 64, offset: 3328)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "udh", scope: !1117, file: !1118, line: 389, baseType: !56, size: 64, offset: 3392)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "ed", scope: !153, file: !154, line: 1244, baseType: !1188, size: 64, offset: 2048)
!1188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1189, size: 64)
!1189 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Editing", file: !1190, line: 200, size: 17024, elements: !1191)
!1190 = !DIFile(filename: "blender/source/blender/makesdna/DNA_sequence_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1191 = !{!1192, !1193, !1194, !1195, !1526, !1527, !1528, !1529, !1530, !1531, !1532}
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "seqbasep", scope: !1189, file: !1190, line: 201, baseType: !1044, size: 64)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "seqbase", scope: !1189, file: !1190, line: 202, baseType: !58, size: 128, offset: 64)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "metastack", scope: !1189, file: !1190, line: 203, baseType: !58, size: 128, offset: 192)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "act_seq", scope: !1189, file: !1190, line: 206, baseType: !1196, size: 64, offset: 320)
!1196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1197, size: 64)
!1197 = !DIDerivedType(tag: DW_TAG_typedef, name: "Sequence", file: !1190, line: 190, baseType: !1198)
!1198 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Sequence", file: !1190, line: 126, size: 2816, elements: !1199)
!1199 = !{!1200, !1202, !1203, !1204, !1205, !1206, !1207, !1208, !1209, !1210, !1211, !1212, !1213, !1214, !1215, !1216, !1217, !1218, !1219, !1220, !1221, !1222, !1223, !1224, !1225, !1291, !1292, !1293, !1294, !1497, !1501, !1502, !1503, !1504, !1505, !1506, !1507, !1508, !1511, !1512, !1513, !1514, !1515, !1516, !1517, !1518, !1519, !1520, !1521, !1522, !1523, !1525}
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1198, file: !1190, line: 127, baseType: !1201, size: 64)
!1201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1198, size: 64)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1198, file: !1190, line: 127, baseType: !1201, size: 64, offset: 64)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "tmp", scope: !1198, file: !1190, line: 128, baseType: !56, size: 64, offset: 128)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "lib", scope: !1198, file: !1190, line: 129, baseType: !56, size: 64, offset: 192)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1198, file: !1190, line: 130, baseType: !33, size: 512, offset: 256)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1198, file: !1190, line: 132, baseType: !22, size: 32, offset: 768)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1198, file: !1190, line: 132, baseType: !22, size: 32, offset: 800)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1198, file: !1190, line: 133, baseType: !22, size: 32, offset: 832)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1198, file: !1190, line: 134, baseType: !22, size: 32, offset: 864)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "startofs", scope: !1198, file: !1190, line: 134, baseType: !22, size: 32, offset: 896)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "endofs", scope: !1198, file: !1190, line: 134, baseType: !22, size: 32, offset: 928)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "startstill", scope: !1198, file: !1190, line: 135, baseType: !22, size: 32, offset: 960)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "endstill", scope: !1198, file: !1190, line: 135, baseType: !22, size: 32, offset: 992)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "machine", scope: !1198, file: !1190, line: 136, baseType: !22, size: 32, offset: 1024)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1198, file: !1190, line: 136, baseType: !22, size: 32, offset: 1056)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "startdisp", scope: !1198, file: !1190, line: 137, baseType: !22, size: 32, offset: 1088)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "enddisp", scope: !1198, file: !1190, line: 137, baseType: !22, size: 32, offset: 1120)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "sat", scope: !1198, file: !1190, line: 138, baseType: !210, size: 32, offset: 1152)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "mul", scope: !1198, file: !1190, line: 139, baseType: !210, size: 32, offset: 1184)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "handsize", scope: !1198, file: !1190, line: 139, baseType: !210, size: 32, offset: 1216)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "anim_preseek", scope: !1198, file: !1190, line: 141, baseType: !48, size: 16, offset: 1248)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "streamindex", scope: !1198, file: !1190, line: 142, baseType: !48, size: 16, offset: 1264)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "multicam_source", scope: !1198, file: !1190, line: 143, baseType: !22, size: 32, offset: 1280)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "clip_flag", scope: !1198, file: !1190, line: 144, baseType: !22, size: 32, offset: 1312)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "strip", scope: !1198, file: !1190, line: 146, baseType: !1226, size: 64, offset: 1344)
!1226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1227, size: 64)
!1227 = !DIDerivedType(tag: DW_TAG_typedef, name: "Strip", file: !1190, line: 114, baseType: !1228)
!1228 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Strip", file: !1190, line: 99, size: 7232, elements: !1229)
!1229 = !{!1230, !1232, !1233, !1234, !1235, !1236, !1237, !1248, !1252, !1264, !1273, !1280, !1290}
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1228, file: !1190, line: 100, baseType: !1231, size: 64)
!1231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1228, size: 64)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1228, file: !1190, line: 100, baseType: !1231, size: 64, offset: 64)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "us", scope: !1228, file: !1190, line: 101, baseType: !22, size: 32, offset: 128)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !1228, file: !1190, line: 101, baseType: !22, size: 32, offset: 160)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "startstill", scope: !1228, file: !1190, line: 102, baseType: !22, size: 32, offset: 192)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "endstill", scope: !1228, file: !1190, line: 102, baseType: !22, size: 32, offset: 224)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "stripdata", scope: !1228, file: !1190, line: 103, baseType: !1238, size: 64, offset: 256)
!1238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1239, size: 64)
!1239 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripElem", file: !1190, line: 59, baseType: !1240)
!1240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripElem", file: !1190, line: 56, size: 2112, elements: !1241)
!1241 = !{!1242, !1246, !1247}
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1240, file: !1190, line: 57, baseType: !1243, size: 2048)
!1243 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 2048, elements: !1244)
!1244 = !{!1245}
!1245 = !DISubrange(count: 256)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "orig_width", scope: !1240, file: !1190, line: 58, baseType: !22, size: 32, offset: 2048)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "orig_height", scope: !1240, file: !1190, line: 58, baseType: !22, size: 32, offset: 2080)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !1228, file: !1190, line: 106, baseType: !1249, size: 6144, offset: 320)
!1249 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 6144, elements: !1250)
!1250 = !{!1251}
!1251 = !DISubrange(count: 768)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !1228, file: !1190, line: 107, baseType: !1253, size: 64, offset: 6464)
!1253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1254, size: 64)
!1254 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripProxy", file: !1190, line: 97, baseType: !1255)
!1255 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripProxy", file: !1190, line: 83, size: 8320, elements: !1256)
!1256 = !{!1257, !1258, !1259, !1260, !1261, !1262, !1263}
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !1255, file: !1190, line: 84, baseType: !1249, size: 6144)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !1255, file: !1190, line: 87, baseType: !1243, size: 2048, offset: 6144)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !1255, file: !1190, line: 88, baseType: !903, size: 64, offset: 8192)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "tc", scope: !1255, file: !1190, line: 90, baseType: !48, size: 16, offset: 8256)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1255, file: !1190, line: 92, baseType: !48, size: 16, offset: 8272)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "build_size_flags", scope: !1255, file: !1190, line: 93, baseType: !48, size: 16, offset: 8288)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "build_tc_flags", scope: !1255, file: !1190, line: 95, baseType: !48, size: 16, offset: 8304)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "crop", scope: !1228, file: !1190, line: 108, baseType: !1265, size: 64, offset: 6528)
!1265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1266, size: 64)
!1266 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripCrop", file: !1190, line: 66, baseType: !1267)
!1267 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripCrop", file: !1190, line: 61, size: 128, elements: !1268)
!1268 = !{!1269, !1270, !1271, !1272}
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !1267, file: !1190, line: 62, baseType: !22, size: 32)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "bottom", scope: !1267, file: !1190, line: 63, baseType: !22, size: 32, offset: 32)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "left", scope: !1267, file: !1190, line: 64, baseType: !22, size: 32, offset: 64)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "right", scope: !1267, file: !1190, line: 65, baseType: !22, size: 32, offset: 96)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "transform", scope: !1228, file: !1190, line: 109, baseType: !1274, size: 64, offset: 6592)
!1274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1275, size: 64)
!1275 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripTransform", file: !1190, line: 71, baseType: !1276)
!1276 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripTransform", file: !1190, line: 68, size: 64, elements: !1277)
!1277 = !{!1278, !1279}
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "xofs", scope: !1276, file: !1190, line: 69, baseType: !22, size: 32)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "yofs", scope: !1276, file: !1190, line: 70, baseType: !22, size: 32, offset: 32)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "color_balance", scope: !1228, file: !1190, line: 110, baseType: !1281, size: 64, offset: 6656)
!1281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1282, size: 64)
!1282 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripColorBalance", file: !1190, line: 81, baseType: !1283)
!1283 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripColorBalance", file: !1190, line: 73, size: 352, elements: !1284)
!1284 = !{!1285, !1286, !1287, !1288, !1289}
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "lift", scope: !1283, file: !1190, line: 74, baseType: !209, size: 96)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !1283, file: !1190, line: 75, baseType: !209, size: 96, offset: 96)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "gain", scope: !1283, file: !1190, line: 76, baseType: !209, size: 96, offset: 192)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1283, file: !1190, line: 77, baseType: !22, size: 32, offset: 288)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1283, file: !1190, line: 78, baseType: !22, size: 32, offset: 320)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !1228, file: !1190, line: 113, baseType: !955, size: 512, offset: 6720)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !1198, file: !1190, line: 148, baseType: !306, size: 64, offset: 1408)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !1198, file: !1190, line: 151, baseType: !152, size: 64, offset: 1472)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "scene_camera", scope: !1198, file: !1190, line: 152, baseType: !162, size: 64, offset: 1536)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !1198, file: !1190, line: 153, baseType: !1295, size: 64, offset: 1600)
!1295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1296, size: 64)
!1296 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClip", file: !1297, line: 64, size: 19136, elements: !1298)
!1297 = !DIFile(filename: "blender/source/blender/makesdna/DNA_movieclip_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1298 = !{!1299, !1300, !1301, !1302, !1303, !1304, !1306, !1307, !1308, !1309, !1312, !1313, !1483, !1484, !1492, !1493, !1494, !1495, !1496}
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1296, file: !1297, line: 65, baseType: !112, size: 960)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !1296, file: !1297, line: 66, baseType: !158, size: 64, offset: 960)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1296, file: !1297, line: 68, baseType: !130, size: 8192, offset: 1024)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !1296, file: !1297, line: 70, baseType: !22, size: 32, offset: 9216)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !1296, file: !1297, line: 71, baseType: !22, size: 32, offset: 9248)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "lastsize", scope: !1296, file: !1297, line: 72, baseType: !1305, size: 64, offset: 9280)
!1305 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 64, elements: !201)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "aspx", scope: !1296, file: !1297, line: 74, baseType: !210, size: 32, offset: 9344)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "aspy", scope: !1296, file: !1297, line: 74, baseType: !210, size: 32, offset: 9376)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !1296, file: !1297, line: 76, baseType: !903, size: 64, offset: 9408)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !1296, file: !1297, line: 77, baseType: !1310, size: 64, offset: 9472)
!1310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1311, size: 64)
!1311 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClipCache", file: !1297, line: 77, flags: DIFlagFwdDecl)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !1296, file: !1297, line: 78, baseType: !378, size: 64, offset: 9536)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "tracking", scope: !1296, file: !1297, line: 80, baseType: !1314, size: 2624, offset: 9600)
!1314 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTracking", file: !1315, line: 340, size: 2624, elements: !1316)
!1315 = !DIFile(filename: "blender/source/blender/makesdna/DNA_tracking_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1316 = !{!1317, !1345, !1363, !1364, !1365, !1380, !1436, !1437, !1463, !1464, !1465, !1466, !1472}
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "settings", scope: !1314, file: !1315, line: 341, baseType: !1318, size: 576)
!1318 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingSettings", file: !1315, line: 251, baseType: !1319)
!1319 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingSettings", file: !1315, line: 207, size: 576, elements: !1320)
!1320 = !{!1321, !1322, !1323, !1324, !1325, !1326, !1327, !1328, !1329, !1330, !1331, !1332, !1333, !1334, !1335, !1336, !1337, !1338, !1339, !1340, !1341, !1342, !1343, !1344}
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1319, file: !1315, line: 208, baseType: !22, size: 32)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "default_motion_model", scope: !1319, file: !1315, line: 211, baseType: !48, size: 16, offset: 32)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "default_algorithm_flag", scope: !1319, file: !1315, line: 212, baseType: !48, size: 16, offset: 48)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "default_minimum_correlation", scope: !1319, file: !1315, line: 213, baseType: !210, size: 32, offset: 64)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "default_pattern_size", scope: !1319, file: !1315, line: 214, baseType: !48, size: 16, offset: 96)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "default_search_size", scope: !1319, file: !1315, line: 215, baseType: !48, size: 16, offset: 112)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "default_frames_limit", scope: !1319, file: !1315, line: 216, baseType: !48, size: 16, offset: 128)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "default_margin", scope: !1319, file: !1315, line: 217, baseType: !48, size: 16, offset: 144)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "default_pattern_match", scope: !1319, file: !1315, line: 218, baseType: !48, size: 16, offset: 160)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "default_flag", scope: !1319, file: !1315, line: 219, baseType: !48, size: 16, offset: 176)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "default_weight", scope: !1319, file: !1315, line: 220, baseType: !210, size: 32, offset: 192)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "motion_flag", scope: !1319, file: !1315, line: 222, baseType: !48, size: 16, offset: 224)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "speed", scope: !1319, file: !1315, line: 225, baseType: !48, size: 16, offset: 240)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "keyframe1", scope: !1319, file: !1315, line: 228, baseType: !22, size: 32, offset: 256)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "keyframe2", scope: !1319, file: !1315, line: 229, baseType: !22, size: 32, offset: 288)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "reconstruction_flag", scope: !1319, file: !1315, line: 233, baseType: !22, size: 32, offset: 320)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "refine_camera_intrinsics", scope: !1319, file: !1315, line: 236, baseType: !48, size: 16, offset: 352)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1319, file: !1315, line: 236, baseType: !48, size: 16, offset: 368)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !1319, file: !1315, line: 241, baseType: !210, size: 32, offset: 384)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "clean_frames", scope: !1319, file: !1315, line: 244, baseType: !22, size: 32, offset: 416)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "clean_action", scope: !1319, file: !1315, line: 244, baseType: !22, size: 32, offset: 448)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "clean_error", scope: !1319, file: !1315, line: 245, baseType: !210, size: 32, offset: 480)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "object_distance", scope: !1319, file: !1315, line: 248, baseType: !210, size: 32, offset: 512)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1319, file: !1315, line: 250, baseType: !22, size: 32, offset: 544)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !1314, file: !1315, line: 342, baseType: !1346, size: 448, offset: 576)
!1346 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingCamera", file: !1315, line: 79, baseType: !1347)
!1347 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingCamera", file: !1315, line: 61, size: 448, elements: !1348)
!1348 = !{!1349, !1350, !1351, !1352, !1353, !1354, !1355, !1356, !1357, !1358, !1359, !1360, !1361, !1362}
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "intrinsics", scope: !1347, file: !1315, line: 62, baseType: !56, size: 64)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "distortion_model", scope: !1347, file: !1315, line: 64, baseType: !48, size: 16, offset: 64)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1347, file: !1315, line: 65, baseType: !48, size: 16, offset: 80)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "sensor_width", scope: !1347, file: !1315, line: 67, baseType: !210, size: 32, offset: 96)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_aspect", scope: !1347, file: !1315, line: 68, baseType: !210, size: 32, offset: 128)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "focal", scope: !1347, file: !1315, line: 69, baseType: !210, size: 32, offset: 160)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !1347, file: !1315, line: 70, baseType: !48, size: 16, offset: 192)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1347, file: !1315, line: 71, baseType: !48, size: 16, offset: 208)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "principal", scope: !1347, file: !1315, line: 72, baseType: !1052, size: 64, offset: 224)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "k1", scope: !1347, file: !1315, line: 75, baseType: !210, size: 32, offset: 288)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "k2", scope: !1347, file: !1315, line: 75, baseType: !210, size: 32, offset: 320)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "k3", scope: !1347, file: !1315, line: 75, baseType: !210, size: 32, offset: 352)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "division_k1", scope: !1347, file: !1315, line: 78, baseType: !210, size: 32, offset: 384)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "division_k2", scope: !1347, file: !1315, line: 78, baseType: !210, size: 32, offset: 416)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "tracks", scope: !1314, file: !1315, line: 343, baseType: !58, size: 128, offset: 1024)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "plane_tracks", scope: !1314, file: !1315, line: 344, baseType: !58, size: 128, offset: 1152)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "reconstruction", scope: !1314, file: !1315, line: 345, baseType: !1366, size: 192, offset: 1280)
!1366 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingReconstruction", file: !1315, line: 278, baseType: !1367)
!1367 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingReconstruction", file: !1315, line: 270, size: 192, elements: !1368)
!1368 = !{!1369, !1370, !1371, !1372, !1373}
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1367, file: !1315, line: 271, baseType: !22, size: 32)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1367, file: !1315, line: 273, baseType: !210, size: 32, offset: 32)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "last_camera", scope: !1367, file: !1315, line: 275, baseType: !22, size: 32, offset: 64)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "camnr", scope: !1367, file: !1315, line: 276, baseType: !22, size: 32, offset: 96)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "cameras", scope: !1367, file: !1315, line: 277, baseType: !1374, size: 64, offset: 128)
!1374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1375, size: 64)
!1375 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieReconstructedCamera", file: !1315, line: 55, size: 576, elements: !1376)
!1376 = !{!1377, !1378, !1379}
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !1375, file: !1315, line: 56, baseType: !22, size: 32)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1375, file: !1315, line: 57, baseType: !210, size: 32, offset: 32)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !1375, file: !1315, line: 58, baseType: !428, size: 512, offset: 64)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "stabilization", scope: !1314, file: !1315, line: 346, baseType: !1381, size: 384, offset: 1472)
!1381 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingStabilization", file: !1315, line: 268, baseType: !1382)
!1382 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingStabilization", file: !1315, line: 253, size: 384, elements: !1383)
!1383 = !{!1384, !1385, !1386, !1387, !1388, !1430, !1431, !1432, !1433, !1434, !1435}
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1382, file: !1315, line: 254, baseType: !22, size: 32)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "tot_track", scope: !1382, file: !1315, line: 255, baseType: !22, size: 32, offset: 32)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "act_track", scope: !1382, file: !1315, line: 255, baseType: !22, size: 32, offset: 64)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "maxscale", scope: !1382, file: !1315, line: 258, baseType: !210, size: 32, offset: 96)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "rot_track", scope: !1382, file: !1315, line: 259, baseType: !1389, size: 64, offset: 128)
!1389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1390, size: 64)
!1390 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingTrack", file: !1315, line: 164, baseType: !1391)
!1391 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingTrack", file: !1315, line: 108, size: 1664, elements: !1392)
!1392 = !{!1393, !1395, !1396, !1397, !1398, !1399, !1400, !1401, !1402, !1403, !1404, !1415, !1416, !1417, !1418, !1419, !1420, !1421, !1422, !1423, !1424, !1425, !1426, !1427, !1428, !1429}
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1391, file: !1315, line: 109, baseType: !1394, size: 64)
!1394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1391, size: 64)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1391, file: !1315, line: 109, baseType: !1394, size: 64, offset: 64)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1391, file: !1315, line: 111, baseType: !33, size: 512, offset: 128)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "pat_min", scope: !1391, file: !1315, line: 119, baseType: !1052, size: 64, offset: 640)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "pat_max", scope: !1391, file: !1315, line: 119, baseType: !1052, size: 64, offset: 704)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "search_min", scope: !1391, file: !1315, line: 125, baseType: !1052, size: 64, offset: 768)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "search_max", scope: !1391, file: !1315, line: 125, baseType: !1052, size: 64, offset: 832)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1391, file: !1315, line: 127, baseType: !1052, size: 64, offset: 896)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "markersnr", scope: !1391, file: !1315, line: 130, baseType: !22, size: 32, offset: 960)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "last_marker", scope: !1391, file: !1315, line: 131, baseType: !22, size: 32, offset: 992)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !1391, file: !1315, line: 132, baseType: !1405, size: 64, offset: 1024)
!1405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1406, size: 64)
!1406 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingMarker", file: !1315, line: 106, baseType: !1407)
!1407 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingMarker", file: !1315, line: 81, size: 512, elements: !1408)
!1408 = !{!1409, !1410, !1411, !1412, !1413, !1414}
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1407, file: !1315, line: 82, baseType: !1052, size: 64)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "pattern_corners", scope: !1407, file: !1315, line: 97, baseType: !887, size: 256, offset: 64)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "search_min", scope: !1407, file: !1315, line: 102, baseType: !1052, size: 64, offset: 320)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "search_max", scope: !1407, file: !1315, line: 102, baseType: !1052, size: 64, offset: 384)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !1407, file: !1315, line: 104, baseType: !22, size: 32, offset: 448)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1407, file: !1315, line: 105, baseType: !22, size: 32, offset: 480)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "bundle_pos", scope: !1391, file: !1315, line: 135, baseType: !209, size: 96, offset: 1088)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1391, file: !1315, line: 136, baseType: !210, size: 32, offset: 1184)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1391, file: !1315, line: 139, baseType: !22, size: 32, offset: 1216)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "pat_flag", scope: !1391, file: !1315, line: 139, baseType: !22, size: 32, offset: 1248)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "search_flag", scope: !1391, file: !1315, line: 139, baseType: !22, size: 32, offset: 1280)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "color", scope: !1391, file: !1315, line: 140, baseType: !209, size: 96, offset: 1312)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "frames_limit", scope: !1391, file: !1315, line: 143, baseType: !48, size: 16, offset: 1408)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !1391, file: !1315, line: 144, baseType: !48, size: 16, offset: 1424)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "pattern_match", scope: !1391, file: !1315, line: 145, baseType: !48, size: 16, offset: 1440)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "motion_model", scope: !1391, file: !1315, line: 148, baseType: !48, size: 16, offset: 1456)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "algorithm_flag", scope: !1391, file: !1315, line: 149, baseType: !22, size: 32, offset: 1472)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "minimum_correlation", scope: !1391, file: !1315, line: 150, baseType: !210, size: 32, offset: 1504)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !1391, file: !1315, line: 152, baseType: !378, size: 64, offset: 1536)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1391, file: !1315, line: 163, baseType: !210, size: 32, offset: 1600)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1391, file: !1315, line: 163, baseType: !210, size: 32, offset: 1632)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "locinf", scope: !1382, file: !1315, line: 261, baseType: !210, size: 32, offset: 192)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "scaleinf", scope: !1382, file: !1315, line: 261, baseType: !210, size: 32, offset: 224)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "rotinf", scope: !1382, file: !1315, line: 261, baseType: !210, size: 32, offset: 256)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1382, file: !1315, line: 263, baseType: !22, size: 32, offset: 288)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1382, file: !1315, line: 266, baseType: !22, size: 32, offset: 320)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !1382, file: !1315, line: 267, baseType: !210, size: 32, offset: 352)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "act_track", scope: !1314, file: !1315, line: 347, baseType: !1389, size: 64, offset: 1856)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "act_plane_track", scope: !1314, file: !1315, line: 348, baseType: !1438, size: 64, offset: 1920)
!1438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1439, size: 64)
!1439 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingPlaneTrack", file: !1315, line: 205, baseType: !1440)
!1440 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingPlaneTrack", file: !1315, line: 186, size: 1024, elements: !1441)
!1441 = !{!1442, !1444, !1445, !1446, !1448, !1449, !1450, !1458, !1459, !1460, !1461, !1462}
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1440, file: !1315, line: 187, baseType: !1443, size: 64)
!1443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1440, size: 64)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1440, file: !1315, line: 187, baseType: !1443, size: 64, offset: 64)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1440, file: !1315, line: 189, baseType: !33, size: 512, offset: 128)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "point_tracks", scope: !1440, file: !1315, line: 191, baseType: !1447, size: 64, offset: 640)
!1447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1389, size: 64)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "point_tracksnr", scope: !1440, file: !1315, line: 193, baseType: !22, size: 32, offset: 704)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1440, file: !1315, line: 193, baseType: !22, size: 32, offset: 736)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !1440, file: !1315, line: 195, baseType: !1451, size: 64, offset: 768)
!1451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1452, size: 64)
!1452 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingPlaneMarker", file: !1315, line: 184, baseType: !1453)
!1453 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingPlaneMarker", file: !1315, line: 166, size: 320, elements: !1454)
!1454 = !{!1455, !1456, !1457}
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "corners", scope: !1453, file: !1315, line: 180, baseType: !887, size: 256)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !1453, file: !1315, line: 182, baseType: !22, size: 32, offset: 256)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1453, file: !1315, line: 183, baseType: !22, size: 32, offset: 288)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "markersnr", scope: !1440, file: !1315, line: 196, baseType: !22, size: 32, offset: 832)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1440, file: !1315, line: 198, baseType: !22, size: 32, offset: 864)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !1440, file: !1315, line: 200, baseType: !890, size: 64, offset: 896)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "image_opacity", scope: !1440, file: !1315, line: 201, baseType: !210, size: 32, offset: 960)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "last_marker", scope: !1440, file: !1315, line: 204, baseType: !22, size: 32, offset: 992)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !1314, file: !1315, line: 350, baseType: !58, size: 128, offset: 1984)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "objectnr", scope: !1314, file: !1315, line: 351, baseType: !22, size: 32, offset: 2112)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "tot_object", scope: !1314, file: !1315, line: 351, baseType: !22, size: 32, offset: 2144)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !1314, file: !1315, line: 353, baseType: !1467, size: 64, offset: 2176)
!1467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1468, size: 64)
!1468 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingStats", file: !1315, line: 297, baseType: !1469)
!1469 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingStats", file: !1315, line: 295, size: 2048, elements: !1470)
!1470 = !{!1471}
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "message", scope: !1469, file: !1315, line: 296, baseType: !1243, size: 2048)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "dopesheet", scope: !1314, file: !1315, line: 355, baseType: !1473, size: 384, offset: 2240)
!1473 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingDopesheet", file: !1315, line: 338, baseType: !1474)
!1474 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingDopesheet", file: !1315, line: 322, size: 384, elements: !1475)
!1475 = !{!1476, !1477, !1478, !1479, !1480, !1481, !1482}
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1474, file: !1315, line: 323, baseType: !22, size: 32)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "sort_method", scope: !1474, file: !1315, line: 325, baseType: !48, size: 16, offset: 32)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1474, file: !1315, line: 326, baseType: !48, size: 16, offset: 48)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "coverage_segments", scope: !1474, file: !1315, line: 331, baseType: !58, size: 128, offset: 64)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1474, file: !1315, line: 334, baseType: !58, size: 128, offset: 192)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "tot_channel", scope: !1474, file: !1315, line: 335, baseType: !22, size: 32, offset: 320)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1474, file: !1315, line: 337, baseType: !22, size: 32, offset: 352)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "tracking_context", scope: !1296, file: !1297, line: 81, baseType: !56, size: 64, offset: 12224)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !1296, file: !1297, line: 85, baseType: !1485, size: 6208, offset: 12288)
!1485 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClipProxy", file: !1297, line: 55, size: 6208, elements: !1486)
!1486 = !{!1487, !1488, !1489, !1490, !1491}
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !1485, file: !1297, line: 56, baseType: !1249, size: 6144)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "tc", scope: !1485, file: !1297, line: 58, baseType: !48, size: 16, offset: 6144)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1485, file: !1297, line: 59, baseType: !48, size: 16, offset: 6160)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "build_size_flag", scope: !1485, file: !1297, line: 60, baseType: !48, size: 16, offset: 6176)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "build_tc_flag", scope: !1485, file: !1297, line: 61, baseType: !48, size: 16, offset: 6192)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1296, file: !1297, line: 86, baseType: !22, size: 32, offset: 18496)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1296, file: !1297, line: 88, baseType: !22, size: 32, offset: 18528)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1296, file: !1297, line: 90, baseType: !22, size: 32, offset: 18560)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "frame_offset", scope: !1296, file: !1297, line: 94, baseType: !22, size: 32, offset: 18592)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !1296, file: !1297, line: 100, baseType: !955, size: 512, offset: 18624)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !1198, file: !1190, line: 154, baseType: !1498, size: 64, offset: 1664)
!1498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1499, size: 64)
!1499 = !DICompositeType(tag: DW_TAG_structure_type, name: "Mask", file: !1500, line: 264, flags: DIFlagFwdDecl)
!1500 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_context.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !1198, file: !1190, line: 156, baseType: !903, size: 64, offset: 1728)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "effect_fader", scope: !1198, file: !1190, line: 158, baseType: !210, size: 32, offset: 1792)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "speed_fader", scope: !1198, file: !1190, line: 159, baseType: !210, size: 32, offset: 1824)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "seq1", scope: !1198, file: !1190, line: 162, baseType: !1201, size: 64, offset: 1856)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "seq2", scope: !1198, file: !1190, line: 162, baseType: !1201, size: 64, offset: 1920)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "seq3", scope: !1198, file: !1190, line: 162, baseType: !1201, size: 64, offset: 1984)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "seqbase", scope: !1198, file: !1190, line: 164, baseType: !58, size: 128, offset: 2048)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "sound", scope: !1198, file: !1190, line: 166, baseType: !1509, size: 64, offset: 2176)
!1509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1510, size: 64)
!1510 = !DICompositeType(tag: DW_TAG_structure_type, name: "bSound", file: !1190, line: 51, flags: DIFlagFwdDecl)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "scene_sound", scope: !1198, file: !1190, line: 167, baseType: !56, size: 64, offset: 2240)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "volume", scope: !1198, file: !1190, line: 168, baseType: !210, size: 32, offset: 2304)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "pitch", scope: !1198, file: !1190, line: 170, baseType: !210, size: 32, offset: 2336)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "pan", scope: !1198, file: !1190, line: 170, baseType: !210, size: 32, offset: 2368)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "strobe", scope: !1198, file: !1190, line: 171, baseType: !210, size: 32, offset: 2400)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "effectdata", scope: !1198, file: !1190, line: 173, baseType: !56, size: 64, offset: 2432)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "anim_startofs", scope: !1198, file: !1190, line: 175, baseType: !22, size: 32, offset: 2496)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "anim_endofs", scope: !1198, file: !1190, line: 176, baseType: !22, size: 32, offset: 2528)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "blend_mode", scope: !1198, file: !1190, line: 179, baseType: !22, size: 32, offset: 2560)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "blend_opacity", scope: !1198, file: !1190, line: 180, baseType: !210, size: 32, offset: 2592)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !1198, file: !1190, line: 183, baseType: !22, size: 32, offset: 2624)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_mode", scope: !1198, file: !1190, line: 185, baseType: !14, size: 8, offset: 2656)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1198, file: !1190, line: 186, baseType: !1524, size: 24, offset: 2664)
!1524 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 24, elements: !211)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers", scope: !1198, file: !1190, line: 189, baseType: !58, size: 128, offset: 2688)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "act_imagedir", scope: !1189, file: !1190, line: 207, baseType: !130, size: 8192, offset: 384)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "act_sounddir", scope: !1189, file: !1190, line: 208, baseType: !130, size: 8192, offset: 8576)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "over_ofs", scope: !1189, file: !1190, line: 210, baseType: !22, size: 32, offset: 16768)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "over_cfra", scope: !1189, file: !1190, line: 210, baseType: !22, size: 32, offset: 16800)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "over_flag", scope: !1189, file: !1190, line: 211, baseType: !22, size: 32, offset: 16832)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1189, file: !1190, line: 211, baseType: !22, size: 32, offset: 16864)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "over_border", scope: !1189, file: !1190, line: 212, baseType: !1145, size: 128, offset: 16896)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "toolsettings", scope: !153, file: !154, line: 1246, baseType: !1534, size: 64, offset: 2112)
!1534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1535, size: 64)
!1535 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ToolSettings", file: !154, line: 1067, size: 5184, elements: !1536)
!1536 = !{!1537, !2025, !2026, !2040, !2046, !2047, !2048, !2049, !2050, !2051, !2052, !2053, !2054, !2055, !2056, !2057, !2058, !2062, !2078, !2105, !2106, !2107, !2108, !2109, !2110, !2111, !2112, !2113, !2114, !2115, !2116, !2117, !2118, !2119, !2120, !2121, !2122, !2123, !2124, !2125, !2126, !2127, !2128, !2129, !2130, !2131, !2132, !2133, !2135, !2136, !2137, !2138, !2139, !2140, !2141, !2142, !2143, !2144, !2145, !2146, !2147, !2148, !2149, !2150, !2151, !2152, !2153, !2154, !2155, !2156, !2157, !2158, !2159, !2160, !2186}
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint", scope: !1535, file: !154, line: 1068, baseType: !1538, size: 64)
!1538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1539, size: 64)
!1539 = !DIDerivedType(tag: DW_TAG_typedef, name: "VPaint", file: !154, line: 934, baseType: !1540)
!1540 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VPaint", file: !154, line: 925, size: 576, elements: !1541)
!1541 = !{!1542, !2008, !2009, !2010, !2011, !2012, !2024}
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1540, file: !154, line: 926, baseType: !1543, size: 320)
!1543 = !DIDerivedType(tag: DW_TAG_typedef, name: "Paint", file: !154, line: 830, baseType: !1544)
!1544 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Paint", file: !154, line: 813, size: 320, elements: !1545)
!1545 = !{!1546, !1993, !2002, !2003, !2005, !2006, !2007}
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !1544, file: !154, line: 814, baseType: !1547, size: 64)
!1547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1548, size: 64)
!1548 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Brush", file: !1549, line: 54, size: 16448, elements: !1550)
!1549 = !DIFile(filename: "blender/source/blender/makesdna/DNA_brush_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1550 = !{!1551, !1552, !1559, !1598, !1905, !1906, !1907, !1908, !1911, !1912, !1946, !1947, !1948, !1949, !1950, !1951, !1952, !1953, !1954, !1955, !1956, !1957, !1958, !1959, !1960, !1961, !1962, !1963, !1964, !1965, !1966, !1967, !1968, !1969, !1970, !1971, !1972, !1973, !1974, !1975, !1976, !1977, !1978, !1979, !1980, !1981, !1982, !1983, !1984, !1985, !1986, !1987, !1988, !1989, !1990, !1991, !1992}
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1548, file: !1549, line: 55, baseType: !112, size: 960)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "clone", scope: !1548, file: !1549, line: 57, baseType: !1553, size: 192, offset: 960)
!1553 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BrushClone", file: !1549, line: 48, size: 192, elements: !1554)
!1554 = !{!1555, !1556, !1557, !1558}
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !1553, file: !1549, line: 49, baseType: !890, size: 64)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1553, file: !1549, line: 50, baseType: !1052, size: 64, offset: 64)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !1553, file: !1549, line: 51, baseType: !210, size: 32, offset: 128)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1553, file: !1549, line: 51, baseType: !210, size: 32, offset: 160)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "curve", scope: !1548, file: !1549, line: 58, baseType: !1560, size: 64, offset: 1152)
!1560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1561, size: 64)
!1561 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapping", file: !956, line: 72, size: 3072, elements: !1562)
!1562 = !{!1563, !1564, !1565, !1566, !1567, !1568, !1569, !1594, !1595, !1596, !1597}
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1561, file: !956, line: 73, baseType: !22, size: 32)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !1561, file: !956, line: 73, baseType: !22, size: 32, offset: 32)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "preset", scope: !1561, file: !956, line: 74, baseType: !22, size: 32, offset: 64)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !1561, file: !956, line: 75, baseType: !22, size: 32, offset: 96)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "curr", scope: !1561, file: !956, line: 77, baseType: !1145, size: 128, offset: 128)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "clipr", scope: !1561, file: !956, line: 77, baseType: !1145, size: 128, offset: 256)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "cm", scope: !1561, file: !956, line: 79, baseType: !1570, size: 2304, offset: 384)
!1570 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1571, size: 2304, elements: !420)
!1571 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMap", file: !956, line: 67, baseType: !1572)
!1572 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMap", file: !956, line: 55, size: 576, elements: !1573)
!1573 = !{!1574, !1575, !1576, !1577, !1578, !1579, !1580, !1581, !1590, !1591, !1592, !1593}
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !1572, file: !956, line: 56, baseType: !48, size: 16)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1572, file: !956, line: 56, baseType: !48, size: 16, offset: 16)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !1572, file: !956, line: 58, baseType: !210, size: 32, offset: 32)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "mintable", scope: !1572, file: !956, line: 59, baseType: !210, size: 32, offset: 64)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "maxtable", scope: !1572, file: !956, line: 59, baseType: !210, size: 32, offset: 96)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "ext_in", scope: !1572, file: !956, line: 60, baseType: !1052, size: 64, offset: 128)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "ext_out", scope: !1572, file: !956, line: 60, baseType: !1052, size: 64, offset: 192)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "curve", scope: !1572, file: !956, line: 61, baseType: !1582, size: 64, offset: 256)
!1582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1583, size: 64)
!1583 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMapPoint", file: !956, line: 47, baseType: !1584)
!1584 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapPoint", file: !956, line: 44, size: 96, elements: !1585)
!1585 = !{!1586, !1587, !1588, !1589}
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1584, file: !956, line: 45, baseType: !210, size: 32)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1584, file: !956, line: 45, baseType: !210, size: 32, offset: 32)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1584, file: !956, line: 46, baseType: !48, size: 16, offset: 64)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "shorty", scope: !1584, file: !956, line: 46, baseType: !48, size: 16, offset: 80)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !1572, file: !956, line: 62, baseType: !1582, size: 64, offset: 320)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "premultable", scope: !1572, file: !956, line: 64, baseType: !1582, size: 64, offset: 384)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_in", scope: !1572, file: !956, line: 65, baseType: !1052, size: 64, offset: 448)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_out", scope: !1572, file: !956, line: 66, baseType: !1052, size: 64, offset: 512)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "black", scope: !1561, file: !956, line: 80, baseType: !209, size: 96, offset: 2688)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "white", scope: !1561, file: !956, line: 80, baseType: !209, size: 96, offset: 2784)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "bwmul", scope: !1561, file: !956, line: 81, baseType: !209, size: 96, offset: 2880)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "sample", scope: !1561, file: !956, line: 83, baseType: !209, size: 96, offset: 2976)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "mtex", scope: !1548, file: !1549, line: 59, baseType: !1599, size: 2496, offset: 1216)
!1599 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MTex", file: !1600, line: 57, size: 2496, elements: !1601)
!1600 = !DIFile(filename: "blender/source/blender/makesdna/DNA_texture_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1601 = !{!1602, !1603, !1604, !1605, !1606, !1607, !1846, !1847, !1848, !1849, !1850, !1851, !1852, !1853, !1854, !1855, !1856, !1857, !1858, !1859, !1860, !1861, !1862, !1863, !1864, !1865, !1866, !1867, !1868, !1869, !1870, !1871, !1872, !1873, !1874, !1875, !1876, !1877, !1878, !1879, !1880, !1881, !1882, !1883, !1884, !1885, !1886, !1887, !1888, !1889, !1890, !1891, !1892, !1893, !1894, !1895, !1896, !1897, !1898, !1899, !1900, !1901, !1902, !1903, !1904}
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "texco", scope: !1599, file: !1600, line: 59, baseType: !48, size: 16)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "mapto", scope: !1599, file: !1600, line: 59, baseType: !48, size: 16, offset: 16)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "maptoneg", scope: !1599, file: !1600, line: 59, baseType: !48, size: 16, offset: 32)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "blendtype", scope: !1599, file: !1600, line: 59, baseType: !48, size: 16, offset: 48)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1599, file: !1600, line: 60, baseType: !162, size: 64, offset: 64)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "tex", scope: !1599, file: !1600, line: 61, baseType: !1608, size: 64, offset: 128)
!1608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1609, size: 64)
!1609 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Tex", file: !1600, line: 202, size: 3328, elements: !1610)
!1610 = !{!1611, !1612, !1613, !1614, !1615, !1616, !1617, !1618, !1619, !1620, !1621, !1622, !1623, !1624, !1625, !1626, !1627, !1628, !1629, !1630, !1631, !1632, !1633, !1634, !1635, !1636, !1637, !1638, !1639, !1640, !1641, !1642, !1643, !1644, !1645, !1646, !1647, !1648, !1649, !1650, !1651, !1652, !1653, !1654, !1655, !1656, !1657, !1658, !1659, !1660, !1661, !1662, !1663, !1664, !1665, !1666, !1689, !1785, !1786, !1815, !1836, !1844, !1845}
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1609, file: !1600, line: 203, baseType: !112, size: 960)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !1609, file: !1600, line: 204, baseType: !158, size: 64, offset: 960)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "noisesize", scope: !1609, file: !1600, line: 206, baseType: !210, size: 32, offset: 1024)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "turbul", scope: !1609, file: !1600, line: 206, baseType: !210, size: 32, offset: 1056)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "bright", scope: !1609, file: !1600, line: 207, baseType: !210, size: 32, offset: 1088)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "contrast", scope: !1609, file: !1600, line: 207, baseType: !210, size: 32, offset: 1120)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "saturation", scope: !1609, file: !1600, line: 207, baseType: !210, size: 32, offset: 1152)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "rfac", scope: !1609, file: !1600, line: 207, baseType: !210, size: 32, offset: 1184)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "gfac", scope: !1609, file: !1600, line: 207, baseType: !210, size: 32, offset: 1216)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "bfac", scope: !1609, file: !1600, line: 207, baseType: !210, size: 32, offset: 1248)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "filtersize", scope: !1609, file: !1600, line: 208, baseType: !210, size: 32, offset: 1280)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1609, file: !1600, line: 208, baseType: !210, size: 32, offset: 1312)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "mg_H", scope: !1609, file: !1600, line: 211, baseType: !210, size: 32, offset: 1344)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "mg_lacunarity", scope: !1609, file: !1600, line: 211, baseType: !210, size: 32, offset: 1376)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "mg_octaves", scope: !1609, file: !1600, line: 211, baseType: !210, size: 32, offset: 1408)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "mg_offset", scope: !1609, file: !1600, line: 211, baseType: !210, size: 32, offset: 1440)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "mg_gain", scope: !1609, file: !1600, line: 211, baseType: !210, size: 32, offset: 1472)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "dist_amount", scope: !1609, file: !1600, line: 214, baseType: !210, size: 32, offset: 1504)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "ns_outscale", scope: !1609, file: !1600, line: 214, baseType: !210, size: 32, offset: 1536)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w1", scope: !1609, file: !1600, line: 217, baseType: !210, size: 32, offset: 1568)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w2", scope: !1609, file: !1600, line: 218, baseType: !210, size: 32, offset: 1600)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w3", scope: !1609, file: !1600, line: 219, baseType: !210, size: 32, offset: 1632)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w4", scope: !1609, file: !1600, line: 220, baseType: !210, size: 32, offset: 1664)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "vn_mexp", scope: !1609, file: !1600, line: 221, baseType: !210, size: 32, offset: 1696)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "vn_distm", scope: !1609, file: !1600, line: 222, baseType: !48, size: 16, offset: 1728)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "vn_coltype", scope: !1609, file: !1600, line: 222, baseType: !48, size: 16, offset: 1744)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "noisedepth", scope: !1609, file: !1600, line: 224, baseType: !48, size: 16, offset: 1760)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "noisetype", scope: !1609, file: !1600, line: 224, baseType: !48, size: 16, offset: 1776)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "noisebasis", scope: !1609, file: !1600, line: 227, baseType: !48, size: 16, offset: 1792)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "noisebasis2", scope: !1609, file: !1600, line: 227, baseType: !48, size: 16, offset: 1808)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "imaflag", scope: !1609, file: !1600, line: 229, baseType: !48, size: 16, offset: 1824)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1609, file: !1600, line: 229, baseType: !48, size: 16, offset: 1840)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1609, file: !1600, line: 230, baseType: !48, size: 16, offset: 1856)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "stype", scope: !1609, file: !1600, line: 230, baseType: !48, size: 16, offset: 1872)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "cropxmin", scope: !1609, file: !1600, line: 232, baseType: !210, size: 32, offset: 1888)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "cropymin", scope: !1609, file: !1600, line: 232, baseType: !210, size: 32, offset: 1920)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "cropxmax", scope: !1609, file: !1600, line: 232, baseType: !210, size: 32, offset: 1952)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "cropymax", scope: !1609, file: !1600, line: 232, baseType: !210, size: 32, offset: 1984)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "texfilter", scope: !1609, file: !1600, line: 233, baseType: !22, size: 32, offset: 2016)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "afmax", scope: !1609, file: !1600, line: 234, baseType: !22, size: 32, offset: 2048)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "xrepeat", scope: !1609, file: !1600, line: 235, baseType: !48, size: 16, offset: 2080)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "yrepeat", scope: !1609, file: !1600, line: 235, baseType: !48, size: 16, offset: 2096)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "extend", scope: !1609, file: !1600, line: 236, baseType: !48, size: 16, offset: 2112)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "fie_ima", scope: !1609, file: !1600, line: 239, baseType: !48, size: 16, offset: 2128)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1609, file: !1600, line: 240, baseType: !22, size: 32, offset: 2144)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "frames", scope: !1609, file: !1600, line: 241, baseType: !22, size: 32, offset: 2176)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1609, file: !1600, line: 241, baseType: !22, size: 32, offset: 2208)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !1609, file: !1600, line: 241, baseType: !22, size: 32, offset: 2240)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "checkerdist", scope: !1609, file: !1600, line: 243, baseType: !210, size: 32, offset: 2272)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "nabla", scope: !1609, file: !1600, line: 243, baseType: !210, size: 32, offset: 2304)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1609, file: !1600, line: 244, baseType: !210, size: 32, offset: 2336)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "iuser", scope: !1609, file: !1600, line: 246, baseType: !1056, size: 320, offset: 2368)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !1609, file: !1600, line: 248, baseType: !1116, size: 64, offset: 2688)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !1609, file: !1600, line: 249, baseType: !306, size: 64, offset: 2752)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !1609, file: !1600, line: 250, baseType: !890, size: 64, offset: 2816)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "coba", scope: !1609, file: !1600, line: 251, baseType: !1667, size: 64, offset: 2880)
!1667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1668, size: 64)
!1668 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorBand", file: !1600, line: 113, size: 6208, elements: !1669)
!1669 = !{!1670, !1671, !1672, !1673, !1674, !1675, !1676}
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !1668, file: !1600, line: 114, baseType: !48, size: 16)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !1668, file: !1600, line: 114, baseType: !48, size: 16, offset: 16)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "ipotype", scope: !1668, file: !1600, line: 115, baseType: !14, size: 8, offset: 32)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "ipotype_hue", scope: !1668, file: !1600, line: 115, baseType: !14, size: 8, offset: 40)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "color_mode", scope: !1668, file: !1600, line: 116, baseType: !14, size: 8, offset: 48)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1668, file: !1600, line: 117, baseType: !1112, size: 8, offset: 56)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1668, file: !1600, line: 119, baseType: !1677, size: 6144, offset: 64)
!1677 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1678, size: 6144, elements: !1687)
!1678 = !DIDerivedType(tag: DW_TAG_typedef, name: "CBData", file: !1600, line: 109, baseType: !1679)
!1679 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CBData", file: !1600, line: 106, size: 192, elements: !1680)
!1680 = !{!1681, !1682, !1683, !1684, !1685, !1686}
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !1679, file: !1600, line: 107, baseType: !210, size: 32)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !1679, file: !1600, line: 107, baseType: !210, size: 32, offset: 32)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !1679, file: !1600, line: 107, baseType: !210, size: 32, offset: 64)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !1679, file: !1600, line: 107, baseType: !210, size: 32, offset: 96)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1679, file: !1600, line: 107, baseType: !210, size: 32, offset: 128)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !1679, file: !1600, line: 108, baseType: !22, size: 32, offset: 160)
!1687 = !{!1688}
!1688 = !DISubrange(count: 32)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "env", scope: !1609, file: !1600, line: 252, baseType: !1690, size: 64, offset: 2944)
!1690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1691, size: 64)
!1691 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EnvMap", file: !1600, line: 122, size: 1600, elements: !1692)
!1692 = !{!1693, !1694, !1695, !1771, !1772, !1773, !1774, !1775, !1776, !1777, !1778, !1779, !1780, !1781, !1782, !1783, !1784}
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1691, file: !1600, line: 123, baseType: !162, size: 64)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !1691, file: !1600, line: 124, baseType: !890, size: 64, offset: 64)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "cube", scope: !1691, file: !1600, line: 125, baseType: !1696, size: 384, offset: 128)
!1696 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1697, size: 384, elements: !1769)
!1697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1698, size: 64)
!1698 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImBuf", file: !1699, line: 70, size: 19840, elements: !1700)
!1699 = !DIFile(filename: "blender/source/blender/imbuf/IMB_imbuf_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1700 = !{!1701, !1702, !1703, !1704, !1705, !1706, !1707, !1708, !1709, !1710, !1711, !1714, !1715, !1716, !1717, !1718, !1719, !1720, !1721, !1722, !1726, !1727, !1728, !1729, !1730, !1733, !1734, !1735, !1736, !1737, !1740, !1741, !1743, !1744, !1745, !1748, !1749, !1750, !1753, !1754, !1762}
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1698, file: !1699, line: 71, baseType: !1697, size: 64)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1698, file: !1699, line: 71, baseType: !1697, size: 64, offset: 64)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1698, file: !1699, line: 74, baseType: !22, size: 32, offset: 128)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1698, file: !1699, line: 74, baseType: !22, size: 32, offset: 160)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !1698, file: !1699, line: 79, baseType: !259, size: 8, offset: 192)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1698, file: !1699, line: 80, baseType: !22, size: 32, offset: 224)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1698, file: !1699, line: 83, baseType: !22, size: 32, offset: 256)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "mall", scope: !1698, file: !1699, line: 84, baseType: !22, size: 32, offset: 288)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "rect", scope: !1698, file: !1699, line: 87, baseType: !277, size: 64, offset: 320)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "rect_float", scope: !1698, file: !1699, line: 88, baseType: !242, size: 64, offset: 384)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "ppm", scope: !1698, file: !1699, line: 93, baseType: !1712, size: 128, offset: 448)
!1712 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1713, size: 128, elements: !201)
!1713 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "tilex", scope: !1698, file: !1699, line: 96, baseType: !22, size: 32, offset: 576)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "tiley", scope: !1698, file: !1699, line: 96, baseType: !22, size: 32, offset: 608)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "xtiles", scope: !1698, file: !1699, line: 97, baseType: !22, size: 32, offset: 640)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "ytiles", scope: !1698, file: !1699, line: 97, baseType: !22, size: 32, offset: 672)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "tiles", scope: !1698, file: !1699, line: 98, baseType: !796, size: 64, offset: 704)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "zbuf", scope: !1698, file: !1699, line: 101, baseType: !250, size: 64, offset: 768)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "zbuf_float", scope: !1698, file: !1699, line: 102, baseType: !242, size: 64, offset: 832)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "dither", scope: !1698, file: !1699, line: 105, baseType: !210, size: 32, offset: 896)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "mipmap", scope: !1698, file: !1699, line: 108, baseType: !1723, size: 1280, offset: 960)
!1723 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1697, size: 1280, elements: !1724)
!1724 = !{!1725}
!1725 = !DISubrange(count: 20)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "miptot", scope: !1698, file: !1699, line: 109, baseType: !22, size: 32, offset: 2240)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "miplevel", scope: !1698, file: !1699, line: 109, baseType: !22, size: 32, offset: 2272)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1698, file: !1699, line: 112, baseType: !22, size: 32, offset: 2304)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "userflags", scope: !1698, file: !1699, line: 113, baseType: !22, size: 32, offset: 2336)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1698, file: !1699, line: 114, baseType: !1731, size: 64, offset: 2368)
!1731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1732, size: 64)
!1732 = !DICompositeType(tag: DW_TAG_structure_type, name: "ImMetaData", file: !1699, line: 50, flags: DIFlagFwdDecl)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "userdata", scope: !1698, file: !1699, line: 115, baseType: !56, size: 64, offset: 2432)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "ftype", scope: !1698, file: !1699, line: 118, baseType: !22, size: 32, offset: 2496)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1698, file: !1699, line: 119, baseType: !130, size: 8192, offset: 2528)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "cachename", scope: !1698, file: !1699, line: 120, baseType: !130, size: 8192, offset: 10720)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "c_handle", scope: !1698, file: !1699, line: 123, baseType: !1738, size: 64, offset: 18944)
!1738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1739, size: 64)
!1739 = !DICompositeType(tag: DW_TAG_structure_type, name: "MEM_CacheLimiterHandle_s", file: !1699, line: 123, flags: DIFlagFwdDecl)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "refcounter", scope: !1698, file: !1699, line: 124, baseType: !22, size: 32, offset: 19008)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "encodedbuffer", scope: !1698, file: !1699, line: 127, baseType: !1742, size: 64, offset: 19072)
!1742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !259, size: 64)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "encodedsize", scope: !1698, file: !1699, line: 128, baseType: !231, size: 32, offset: 19136)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "encodedbuffersize", scope: !1698, file: !1699, line: 129, baseType: !231, size: 32, offset: 19168)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "rect_colorspace", scope: !1698, file: !1699, line: 132, baseType: !1746, size: 64, offset: 19200)
!1746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1747, size: 64)
!1747 = !DICompositeType(tag: DW_TAG_structure_type, name: "ColorSpace", file: !1699, line: 132, flags: DIFlagFwdDecl)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "float_colorspace", scope: !1698, file: !1699, line: 133, baseType: !1746, size: 64, offset: 19264)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "display_buffer_flags", scope: !1698, file: !1699, line: 134, baseType: !277, size: 64, offset: 19328)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "colormanage_cache", scope: !1698, file: !1699, line: 135, baseType: !1751, size: 64, offset: 19392)
!1751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1752, size: 64)
!1752 = !DICompositeType(tag: DW_TAG_structure_type, name: "ColormanageCache", file: !1699, line: 135, flags: DIFlagFwdDecl)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "colormanage_flag", scope: !1698, file: !1699, line: 136, baseType: !22, size: 32, offset: 19456)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "invalid_rect", scope: !1698, file: !1699, line: 137, baseType: !1755, size: 128, offset: 19488)
!1755 = !DIDerivedType(tag: DW_TAG_typedef, name: "rcti", file: !1146, line: 89, baseType: !1756)
!1756 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcti", file: !1146, line: 86, size: 128, elements: !1757)
!1757 = !{!1758, !1759, !1760, !1761}
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !1756, file: !1146, line: 87, baseType: !22, size: 32)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !1756, file: !1146, line: 87, baseType: !22, size: 32, offset: 32)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !1756, file: !1146, line: 88, baseType: !22, size: 32, offset: 64)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !1756, file: !1146, line: 88, baseType: !22, size: 32, offset: 96)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "dds_data", scope: !1698, file: !1699, line: 140, baseType: !1763, size: 192, offset: 19648)
!1763 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DDSData", file: !1699, line: 55, size: 192, elements: !1764)
!1764 = !{!1765, !1766, !1767, !1768}
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "fourcc", scope: !1763, file: !1699, line: 56, baseType: !231, size: 32)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "nummipmaps", scope: !1763, file: !1699, line: 57, baseType: !231, size: 32, offset: 32)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1763, file: !1699, line: 58, baseType: !1742, size: 64, offset: 64)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1763, file: !1699, line: 59, baseType: !231, size: 32, offset: 128)
!1769 = !{!1770}
!1770 = !DISubrange(count: 6)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !1691, file: !1600, line: 126, baseType: !428, size: 512, offset: 512)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "obimat", scope: !1691, file: !1600, line: 127, baseType: !272, size: 288, offset: 1024)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1691, file: !1600, line: 128, baseType: !48, size: 16, offset: 1312)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "stype", scope: !1691, file: !1600, line: 128, baseType: !48, size: 16, offset: 1328)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "clipsta", scope: !1691, file: !1600, line: 129, baseType: !210, size: 32, offset: 1344)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "clipend", scope: !1691, file: !1600, line: 129, baseType: !210, size: 32, offset: 1376)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "viewscale", scope: !1691, file: !1600, line: 130, baseType: !210, size: 32, offset: 1408)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "notlay", scope: !1691, file: !1600, line: 131, baseType: !231, size: 32, offset: 1440)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "cuberes", scope: !1691, file: !1600, line: 132, baseType: !48, size: 16, offset: 1472)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1691, file: !1600, line: 132, baseType: !48, size: 16, offset: 1488)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1691, file: !1600, line: 133, baseType: !22, size: 32, offset: 1504)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !1691, file: !1600, line: 133, baseType: !22, size: 32, offset: 1536)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !1691, file: !1600, line: 134, baseType: !48, size: 16, offset: 1568)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "lastsize", scope: !1691, file: !1600, line: 134, baseType: !48, size: 16, offset: 1584)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !1609, file: !1600, line: 253, baseType: !929, size: 64, offset: 3008)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "pd", scope: !1609, file: !1600, line: 254, baseType: !1787, size: 64, offset: 3072)
!1787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1788, size: 64)
!1788 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PointDensity", file: !1600, line: 137, size: 832, elements: !1789)
!1789 = !{!1790, !1791, !1792, !1793, !1794, !1795, !1796, !1797, !1798, !1799, !1800, !1801, !1802, !1803, !1804, !1805, !1806, !1807, !1808, !1809, !1810, !1811, !1812, !1813, !1814}
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1788, file: !1600, line: 138, baseType: !48, size: 16)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_type", scope: !1788, file: !1600, line: 140, baseType: !48, size: 16, offset: 16)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_softness", scope: !1788, file: !1600, line: 141, baseType: !210, size: 32, offset: 32)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "radius", scope: !1788, file: !1600, line: 142, baseType: !210, size: 32, offset: 64)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !1788, file: !1600, line: 143, baseType: !48, size: 16, offset: 96)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "color_source", scope: !1788, file: !1600, line: 144, baseType: !48, size: 16, offset: 112)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "totpoints", scope: !1788, file: !1600, line: 145, baseType: !22, size: 32, offset: 128)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "pdpad", scope: !1788, file: !1600, line: 147, baseType: !22, size: 32, offset: 160)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1788, file: !1600, line: 149, baseType: !162, size: 64, offset: 192)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "psys", scope: !1788, file: !1600, line: 150, baseType: !22, size: 32, offset: 256)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "psys_cache_space", scope: !1788, file: !1600, line: 151, baseType: !48, size: 16, offset: 288)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "ob_cache_space", scope: !1788, file: !1600, line: 152, baseType: !48, size: 16, offset: 304)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "point_tree", scope: !1788, file: !1600, line: 154, baseType: !56, size: 64, offset: 320)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "point_data", scope: !1788, file: !1600, line: 155, baseType: !242, size: 64, offset: 384)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "noise_size", scope: !1788, file: !1600, line: 157, baseType: !210, size: 32, offset: 448)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "noise_depth", scope: !1788, file: !1600, line: 158, baseType: !48, size: 16, offset: 480)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "noise_influence", scope: !1788, file: !1600, line: 159, baseType: !48, size: 16, offset: 496)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "noise_basis", scope: !1788, file: !1600, line: 160, baseType: !48, size: 16, offset: 512)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "pdpad3", scope: !1788, file: !1600, line: 161, baseType: !214, size: 48, offset: 528)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "noise_fac", scope: !1788, file: !1600, line: 162, baseType: !210, size: 32, offset: 576)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "speed_scale", scope: !1788, file: !1600, line: 164, baseType: !210, size: 32, offset: 608)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_speed_scale", scope: !1788, file: !1600, line: 164, baseType: !210, size: 32, offset: 640)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "pdpad2", scope: !1788, file: !1600, line: 164, baseType: !210, size: 32, offset: 672)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "coba", scope: !1788, file: !1600, line: 165, baseType: !1667, size: 64, offset: 704)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_curve", scope: !1788, file: !1600, line: 167, baseType: !1560, size: 64, offset: 768)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "vd", scope: !1609, file: !1600, line: 255, baseType: !1816, size: 64, offset: 3136)
!1816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1817, size: 64)
!1817 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VoxelData", file: !1600, line: 170, size: 8704, elements: !1818)
!1818 = !{!1819, !1821, !1822, !1823, !1824, !1825, !1826, !1827, !1828, !1829, !1830, !1831, !1832, !1833, !1834, !1835}
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "resol", scope: !1817, file: !1600, line: 171, baseType: !1820, size: 96)
!1820 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 96, elements: !211)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "interp_type", scope: !1817, file: !1600, line: 172, baseType: !22, size: 32, offset: 96)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "file_format", scope: !1817, file: !1600, line: 173, baseType: !48, size: 16, offset: 128)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1817, file: !1600, line: 174, baseType: !48, size: 16, offset: 144)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "extend", scope: !1817, file: !1600, line: 175, baseType: !48, size: 16, offset: 160)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "smoked_type", scope: !1817, file: !1600, line: 176, baseType: !48, size: 16, offset: 176)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "data_type", scope: !1817, file: !1600, line: 177, baseType: !48, size: 16, offset: 192)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1817, file: !1600, line: 178, baseType: !48, size: 16, offset: 208)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "_pad", scope: !1817, file: !1600, line: 179, baseType: !22, size: 32, offset: 224)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1817, file: !1600, line: 181, baseType: !162, size: 64, offset: 256)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "int_multiplier", scope: !1817, file: !1600, line: 182, baseType: !210, size: 32, offset: 320)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "still_frame", scope: !1817, file: !1600, line: 183, baseType: !22, size: 32, offset: 352)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "source_path", scope: !1817, file: !1600, line: 184, baseType: !130, size: 8192, offset: 384)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "dataset", scope: !1817, file: !1600, line: 187, baseType: !242, size: 64, offset: 8576)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "cachedframe", scope: !1817, file: !1600, line: 188, baseType: !22, size: 32, offset: 8640)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1817, file: !1600, line: 189, baseType: !22, size: 32, offset: 8672)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "ot", scope: !1609, file: !1600, line: 256, baseType: !1837, size: 64, offset: 3200)
!1837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1838, size: 64)
!1838 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "OceanTex", file: !1600, line: 193, size: 640, elements: !1839)
!1839 = !{!1840, !1841, !1842, !1843}
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1838, file: !1600, line: 194, baseType: !162, size: 64)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "oceanmod", scope: !1838, file: !1600, line: 195, baseType: !33, size: 512, offset: 64)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "output", scope: !1838, file: !1600, line: 197, baseType: !22, size: 32, offset: 576)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1838, file: !1600, line: 198, baseType: !22, size: 32, offset: 608)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !1609, file: !1600, line: 258, baseType: !14, size: 8, offset: 3264)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1609, file: !1600, line: 259, baseType: !962, size: 56, offset: 3272)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "uvname", scope: !1599, file: !1600, line: 62, baseType: !33, size: 512, offset: 192)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "projx", scope: !1599, file: !1600, line: 64, baseType: !14, size: 8, offset: 704)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "projy", scope: !1599, file: !1600, line: 64, baseType: !14, size: 8, offset: 712)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "projz", scope: !1599, file: !1600, line: 64, baseType: !14, size: 8, offset: 720)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !1599, file: !1600, line: 64, baseType: !14, size: 8, offset: 728)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "ofs", scope: !1599, file: !1600, line: 65, baseType: !209, size: 96, offset: 736)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1599, file: !1600, line: 65, baseType: !209, size: 96, offset: 832)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !1599, file: !1600, line: 65, baseType: !210, size: 32, offset: 928)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "texflag", scope: !1599, file: !1600, line: 67, baseType: !48, size: 16, offset: 960)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "colormodel", scope: !1599, file: !1600, line: 67, baseType: !48, size: 16, offset: 976)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "pmapto", scope: !1599, file: !1600, line: 67, baseType: !48, size: 16, offset: 992)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "pmaptoneg", scope: !1599, file: !1600, line: 67, baseType: !48, size: 16, offset: 1008)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "normapspace", scope: !1599, file: !1600, line: 68, baseType: !48, size: 16, offset: 1024)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "which_output", scope: !1599, file: !1600, line: 68, baseType: !48, size: 16, offset: 1040)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "brush_map_mode", scope: !1599, file: !1600, line: 69, baseType: !14, size: 8, offset: 1056)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1599, file: !1600, line: 69, baseType: !962, size: 56, offset: 1064)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !1599, file: !1600, line: 70, baseType: !210, size: 32, offset: 1120)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !1599, file: !1600, line: 70, baseType: !210, size: 32, offset: 1152)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !1599, file: !1600, line: 70, baseType: !210, size: 32, offset: 1184)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "k", scope: !1599, file: !1600, line: 70, baseType: !210, size: 32, offset: 1216)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "def_var", scope: !1599, file: !1600, line: 71, baseType: !210, size: 32, offset: 1248)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1599, file: !1600, line: 71, baseType: !210, size: 32, offset: 1280)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "colfac", scope: !1599, file: !1600, line: 74, baseType: !210, size: 32, offset: 1312)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "varfac", scope: !1599, file: !1600, line: 74, baseType: !210, size: 32, offset: 1344)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "norfac", scope: !1599, file: !1600, line: 77, baseType: !210, size: 32, offset: 1376)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "dispfac", scope: !1599, file: !1600, line: 77, baseType: !210, size: 32, offset: 1408)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "warpfac", scope: !1599, file: !1600, line: 77, baseType: !210, size: 32, offset: 1440)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "colspecfac", scope: !1599, file: !1600, line: 78, baseType: !210, size: 32, offset: 1472)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "mirrfac", scope: !1599, file: !1600, line: 78, baseType: !210, size: 32, offset: 1504)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "alphafac", scope: !1599, file: !1600, line: 78, baseType: !210, size: 32, offset: 1536)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "difffac", scope: !1599, file: !1600, line: 79, baseType: !210, size: 32, offset: 1568)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "specfac", scope: !1599, file: !1600, line: 79, baseType: !210, size: 32, offset: 1600)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "emitfac", scope: !1599, file: !1600, line: 79, baseType: !210, size: 32, offset: 1632)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "hardfac", scope: !1599, file: !1600, line: 79, baseType: !210, size: 32, offset: 1664)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "raymirrfac", scope: !1599, file: !1600, line: 80, baseType: !210, size: 32, offset: 1696)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "translfac", scope: !1599, file: !1600, line: 80, baseType: !210, size: 32, offset: 1728)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "ambfac", scope: !1599, file: !1600, line: 80, baseType: !210, size: 32, offset: 1760)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "colemitfac", scope: !1599, file: !1600, line: 81, baseType: !210, size: 32, offset: 1792)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "colreflfac", scope: !1599, file: !1600, line: 81, baseType: !210, size: 32, offset: 1824)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "coltransfac", scope: !1599, file: !1600, line: 81, baseType: !210, size: 32, offset: 1856)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "densfac", scope: !1599, file: !1600, line: 82, baseType: !210, size: 32, offset: 1888)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "scatterfac", scope: !1599, file: !1600, line: 82, baseType: !210, size: 32, offset: 1920)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "reflfac", scope: !1599, file: !1600, line: 82, baseType: !210, size: 32, offset: 1952)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "timefac", scope: !1599, file: !1600, line: 85, baseType: !210, size: 32, offset: 1984)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "lengthfac", scope: !1599, file: !1600, line: 85, baseType: !210, size: 32, offset: 2016)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "clumpfac", scope: !1599, file: !1600, line: 85, baseType: !210, size: 32, offset: 2048)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "dampfac", scope: !1599, file: !1600, line: 85, baseType: !210, size: 32, offset: 2080)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "kinkfac", scope: !1599, file: !1600, line: 86, baseType: !210, size: 32, offset: 2112)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "roughfac", scope: !1599, file: !1600, line: 86, baseType: !210, size: 32, offset: 2144)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "padensfac", scope: !1599, file: !1600, line: 86, baseType: !210, size: 32, offset: 2176)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "gravityfac", scope: !1599, file: !1600, line: 86, baseType: !210, size: 32, offset: 2208)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "lifefac", scope: !1599, file: !1600, line: 87, baseType: !210, size: 32, offset: 2240)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "sizefac", scope: !1599, file: !1600, line: 87, baseType: !210, size: 32, offset: 2272)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "ivelfac", scope: !1599, file: !1600, line: 87, baseType: !210, size: 32, offset: 2304)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "fieldfac", scope: !1599, file: !1600, line: 87, baseType: !210, size: 32, offset: 2336)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "shadowfac", scope: !1599, file: !1600, line: 90, baseType: !210, size: 32, offset: 2368)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "zenupfac", scope: !1599, file: !1600, line: 93, baseType: !210, size: 32, offset: 2400)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "zendownfac", scope: !1599, file: !1600, line: 93, baseType: !210, size: 32, offset: 2432)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "blendfac", scope: !1599, file: !1600, line: 93, baseType: !210, size: 32, offset: 2464)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "mask_mtex", scope: !1548, file: !1549, line: 60, baseType: !1599, size: 2496, offset: 3712)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "toggle_brush", scope: !1548, file: !1549, line: 62, baseType: !1547, size: 64, offset: 6208)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "icon_imbuf", scope: !1548, file: !1549, line: 64, baseType: !1697, size: 64, offset: 6272)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !1548, file: !1549, line: 65, baseType: !1909, size: 64, offset: 6336)
!1909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1910, size: 64)
!1910 = !DIDerivedType(tag: DW_TAG_typedef, name: "PreviewImage", file: !39, line: 167, baseType: !930)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "gradient", scope: !1548, file: !1549, line: 66, baseType: !1667, size: 64, offset: 6400)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "paint_curve", scope: !1548, file: !1549, line: 67, baseType: !1913, size: 64, offset: 6464)
!1913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1914, size: 64)
!1914 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PaintCurve", file: !1549, line: 166, size: 1088, elements: !1915)
!1915 = !{!1916, !1917, !1944, !1945}
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1914, file: !1549, line: 168, baseType: !112, size: 960)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !1914, file: !1549, line: 169, baseType: !1918, size: 64, offset: 960)
!1918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1919, size: 64)
!1919 = !DIDerivedType(tag: DW_TAG_typedef, name: "PaintCurvePoint", file: !1549, line: 164, baseType: !1920)
!1920 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PaintCurvePoint", file: !1549, line: 160, size: 608, elements: !1921)
!1921 = !{!1922, !1943}
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "bez", scope: !1920, file: !1549, line: 162, baseType: !1923, size: 576)
!1923 = !DIDerivedType(tag: DW_TAG_typedef, name: "BezTriple", file: !342, line: 133, baseType: !1924)
!1924 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BezTriple", file: !342, line: 117, size: 576, elements: !1925)
!1925 = !{!1926, !1927, !1928, !1929, !1930, !1931, !1932, !1933, !1934, !1935, !1936, !1937, !1938, !1939, !1940, !1941}
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1924, file: !342, line: 118, baseType: !272, size: 288)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "alfa", scope: !1924, file: !342, line: 119, baseType: !210, size: 32, offset: 288)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1924, file: !342, line: 119, baseType: !210, size: 32, offset: 320)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "radius", scope: !1924, file: !342, line: 119, baseType: !210, size: 32, offset: 352)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !1924, file: !342, line: 121, baseType: !14, size: 8, offset: 384)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "h1", scope: !1924, file: !342, line: 123, baseType: !14, size: 8, offset: 392)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "h2", scope: !1924, file: !342, line: 123, baseType: !14, size: 8, offset: 400)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "f1", scope: !1924, file: !342, line: 124, baseType: !14, size: 8, offset: 408)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "f2", scope: !1924, file: !342, line: 124, baseType: !14, size: 8, offset: 416)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "f3", scope: !1924, file: !342, line: 124, baseType: !14, size: 8, offset: 424)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "hide", scope: !1924, file: !342, line: 126, baseType: !14, size: 8, offset: 432)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "easing", scope: !1924, file: !342, line: 128, baseType: !14, size: 8, offset: 440)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !1924, file: !342, line: 129, baseType: !210, size: 32, offset: 448)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "amplitude", scope: !1924, file: !342, line: 130, baseType: !210, size: 32, offset: 480)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "period", scope: !1924, file: !342, line: 130, baseType: !210, size: 32, offset: 512)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1924, file: !342, line: 132, baseType: !1942, size: 32, offset: 544)
!1942 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 32, elements: !420)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "pressure", scope: !1920, file: !1549, line: 163, baseType: !210, size: 32, offset: 576)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "tot_points", scope: !1914, file: !1549, line: 170, baseType: !22, size: 32, offset: 1024)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "add_index", scope: !1914, file: !1549, line: 171, baseType: !22, size: 32, offset: 1056)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "icon_filepath", scope: !1548, file: !1549, line: 69, baseType: !130, size: 8192, offset: 6528)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "normal_weight", scope: !1548, file: !1549, line: 71, baseType: !210, size: 32, offset: 14720)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "blend", scope: !1548, file: !1549, line: 73, baseType: !48, size: 16, offset: 14752)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "ob_mode", scope: !1548, file: !1549, line: 74, baseType: !48, size: 16, offset: 14768)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1548, file: !1549, line: 75, baseType: !210, size: 32, offset: 14784)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1548, file: !1549, line: 76, baseType: !22, size: 32, offset: 14816)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1548, file: !1549, line: 77, baseType: !22, size: 32, offset: 14848)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "mask_pressure", scope: !1548, file: !1549, line: 78, baseType: !22, size: 32, offset: 14880)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "jitter", scope: !1548, file: !1549, line: 79, baseType: !210, size: 32, offset: 14912)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "jitter_absolute", scope: !1548, file: !1549, line: 80, baseType: !22, size: 32, offset: 14944)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "overlay_flags", scope: !1548, file: !1549, line: 81, baseType: !22, size: 32, offset: 14976)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "spacing", scope: !1548, file: !1549, line: 82, baseType: !22, size: 32, offset: 15008)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "smooth_stroke_radius", scope: !1548, file: !1549, line: 83, baseType: !22, size: 32, offset: 15040)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "smooth_stroke_factor", scope: !1548, file: !1549, line: 84, baseType: !210, size: 32, offset: 15072)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "rate", scope: !1548, file: !1549, line: 85, baseType: !210, size: 32, offset: 15104)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "rgb", scope: !1548, file: !1549, line: 87, baseType: !209, size: 96, offset: 15136)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !1548, file: !1549, line: 88, baseType: !210, size: 32, offset: 15232)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "secondary_rgb", scope: !1548, file: !1549, line: 90, baseType: !209, size: 96, offset: 15264)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_plane", scope: !1548, file: !1549, line: 92, baseType: !22, size: 32, offset: 15360)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "plane_offset", scope: !1548, file: !1549, line: 94, baseType: !210, size: 32, offset: 15392)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1548, file: !1549, line: 96, baseType: !210, size: 32, offset: 15424)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "gradient_spacing", scope: !1548, file: !1549, line: 97, baseType: !22, size: 32, offset: 15456)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "gradient_stroke_mode", scope: !1548, file: !1549, line: 98, baseType: !22, size: 32, offset: 15488)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "gradient_fill_mode", scope: !1548, file: !1549, line: 99, baseType: !22, size: 32, offset: 15520)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_tool", scope: !1548, file: !1549, line: 101, baseType: !14, size: 8, offset: 15552)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "vertexpaint_tool", scope: !1548, file: !1549, line: 102, baseType: !14, size: 8, offset: 15560)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "imagepaint_tool", scope: !1548, file: !1549, line: 103, baseType: !14, size: 8, offset: 15568)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "mask_tool", scope: !1548, file: !1549, line: 104, baseType: !14, size: 8, offset: 15576)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "autosmooth_factor", scope: !1548, file: !1549, line: 106, baseType: !210, size: 32, offset: 15584)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "crease_pinch_factor", scope: !1548, file: !1549, line: 108, baseType: !210, size: 32, offset: 15616)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "plane_trim", scope: !1548, file: !1549, line: 110, baseType: !210, size: 32, offset: 15648)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1548, file: !1549, line: 111, baseType: !210, size: 32, offset: 15680)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "texture_sample_bias", scope: !1548, file: !1549, line: 113, baseType: !210, size: 32, offset: 15712)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "texture_overlay_alpha", scope: !1548, file: !1549, line: 116, baseType: !22, size: 32, offset: 15744)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "mask_overlay_alpha", scope: !1548, file: !1549, line: 117, baseType: !22, size: 32, offset: 15776)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "cursor_overlay_alpha", scope: !1548, file: !1549, line: 118, baseType: !22, size: 32, offset: 15808)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "unprojected_radius", scope: !1548, file: !1549, line: 120, baseType: !210, size: 32, offset: 15840)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_threshold", scope: !1548, file: !1549, line: 123, baseType: !210, size: 32, offset: 15872)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "blur_kernel_radius", scope: !1548, file: !1549, line: 124, baseType: !22, size: 32, offset: 15904)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "blur_mode", scope: !1548, file: !1549, line: 125, baseType: !22, size: 32, offset: 15936)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "fill_threshold", scope: !1548, file: !1549, line: 128, baseType: !210, size: 32, offset: 15968)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "add_col", scope: !1548, file: !1549, line: 130, baseType: !209, size: 96, offset: 16000)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "sub_col", scope: !1548, file: !1549, line: 131, baseType: !209, size: 96, offset: 16096)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "stencil_pos", scope: !1548, file: !1549, line: 133, baseType: !1052, size: 64, offset: 16192)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "stencil_dimension", scope: !1548, file: !1549, line: 134, baseType: !1052, size: 64, offset: 16256)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "mask_stencil_pos", scope: !1548, file: !1549, line: 136, baseType: !1052, size: 64, offset: 16320)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "mask_stencil_dimension", scope: !1548, file: !1549, line: 137, baseType: !1052, size: 64, offset: 16384)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "palette", scope: !1544, file: !154, line: 815, baseType: !1994, size: 64, offset: 64)
!1994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1995, size: 64)
!1995 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Palette", file: !1549, line: 148, size: 1280, elements: !1996)
!1996 = !{!1997, !1998, !1999, !2000, !2001}
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1995, file: !1549, line: 150, baseType: !112, size: 960)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "colors", scope: !1995, file: !1549, line: 153, baseType: !58, size: 128, offset: 960)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "deleted", scope: !1995, file: !1549, line: 154, baseType: !58, size: 128, offset: 1088)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "active_color", scope: !1995, file: !1549, line: 156, baseType: !22, size: 32, offset: 1216)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1995, file: !1549, line: 157, baseType: !22, size: 32, offset: 1248)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor", scope: !1544, file: !154, line: 818, baseType: !56, size: 64, offset: 128)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor_col", scope: !1544, file: !154, line: 819, baseType: !2004, size: 32, offset: 192)
!2004 = !DICompositeType(tag: DW_TAG_array_type, baseType: !259, size: 32, elements: !420)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1544, file: !154, line: 822, baseType: !22, size: 32, offset: 224)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "num_input_samples", scope: !1544, file: !154, line: 826, baseType: !22, size: 32, offset: 256)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "symmetry_flags", scope: !1544, file: !154, line: 829, baseType: !22, size: 32, offset: 288)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1540, file: !154, line: 928, baseType: !48, size: 16, offset: 320)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1540, file: !154, line: 928, baseType: !48, size: 16, offset: 336)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !1540, file: !154, line: 929, baseType: !22, size: 32, offset: 352)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint_prev", scope: !1540, file: !154, line: 930, baseType: !277, size: 64, offset: 384)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint_prev", scope: !1540, file: !154, line: 931, baseType: !2013, size: 64, offset: 448)
!2013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2014, size: 64)
!2014 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MDeformVert", file: !206, line: 59, size: 128, elements: !2015)
!2015 = !{!2016, !2022, !2023}
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "dw", scope: !2014, file: !206, line: 60, baseType: !2017, size: 64)
!2017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2018, size: 64)
!2018 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MDeformWeight", file: !206, line: 54, size: 64, elements: !2019)
!2019 = !{!2020, !2021}
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "def_nr", scope: !2018, file: !206, line: 55, baseType: !22, size: 32)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !2018, file: !206, line: 56, baseType: !210, size: 32, offset: 32)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "totweight", scope: !2014, file: !206, line: 61, baseType: !22, size: 32, offset: 64)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2014, file: !206, line: 62, baseType: !22, size: 32, offset: 96)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !1540, file: !154, line: 933, baseType: !56, size: 64, offset: 512)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint", scope: !1535, file: !154, line: 1069, baseType: !1538, size: 64, offset: 64)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt", scope: !1535, file: !154, line: 1070, baseType: !2027, size: 64, offset: 128)
!2027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2028, size: 64)
!2028 = !DIDerivedType(tag: DW_TAG_typedef, name: "Sculpt", file: !154, line: 916, baseType: !2029)
!2029 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Sculpt", file: !154, line: 891, size: 704, elements: !2030)
!2030 = !{!2031, !2032, !2033, !2034, !2035, !2036, !2037, !2038, !2039}
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !2029, file: !154, line: 892, baseType: !1543, size: 320)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2029, file: !154, line: 896, baseType: !22, size: 32, offset: 320)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "radial_symm", scope: !2029, file: !154, line: 900, baseType: !1820, size: 96, offset: 352)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "detail_size", scope: !2029, file: !154, line: 903, baseType: !210, size: 32, offset: 448)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "symmetrize_direction", scope: !2029, file: !154, line: 906, baseType: !22, size: 32, offset: 480)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_factor", scope: !2029, file: !154, line: 909, baseType: !210, size: 32, offset: 512)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "constant_detail", scope: !2029, file: !154, line: 912, baseType: !210, size: 32, offset: 544)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_object", scope: !2029, file: !154, line: 914, baseType: !162, size: 64, offset: 576)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2029, file: !154, line: 915, baseType: !56, size: 64, offset: 640)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "uvsculpt", scope: !1535, file: !154, line: 1071, baseType: !2041, size: 64, offset: 192)
!2041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2042, size: 64)
!2042 = !DIDerivedType(tag: DW_TAG_typedef, name: "UvSculpt", file: !154, line: 920, baseType: !2043)
!2043 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UvSculpt", file: !154, line: 918, size: 320, elements: !2044)
!2044 = !{!2045}
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !2043, file: !154, line: 919, baseType: !1543, size: 320)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "vgroup_weight", scope: !1535, file: !154, line: 1075, baseType: !210, size: 32, offset: 256)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "doublimit", scope: !1535, file: !154, line: 1077, baseType: !210, size: 32, offset: 288)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "normalsize", scope: !1535, file: !154, line: 1078, baseType: !210, size: 32, offset: 320)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "automerge", scope: !1535, file: !154, line: 1079, baseType: !48, size: 16, offset: 352)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !1535, file: !154, line: 1082, baseType: !48, size: 16, offset: 368)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "unwrapper", scope: !1535, file: !154, line: 1085, baseType: !14, size: 8, offset: 384)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_flag", scope: !1535, file: !154, line: 1086, baseType: !14, size: 8, offset: 392)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "uv_flag", scope: !1535, file: !154, line: 1087, baseType: !14, size: 8, offset: 400)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "uv_selectmode", scope: !1535, file: !154, line: 1088, baseType: !14, size: 8, offset: 408)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_margin", scope: !1535, file: !154, line: 1090, baseType: !210, size: 32, offset: 416)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "autoik_chainlen", scope: !1535, file: !154, line: 1093, baseType: !48, size: 16, offset: 448)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "gpencil_flags", scope: !1535, file: !154, line: 1096, baseType: !14, size: 8, offset: 464)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1535, file: !154, line: 1098, baseType: !2059, size: 40, offset: 472)
!2059 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 40, elements: !2060)
!2060 = !{!2061}
!2061 = !DISubrange(count: 5)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "imapaint", scope: !1535, file: !154, line: 1101, baseType: !2063, size: 832, offset: 512)
!2063 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImagePaintSettings", file: !154, line: 836, size: 832, elements: !2064)
!2064 = !{!2065, !2066, !2067, !2068, !2069, !2070, !2071, !2072, !2073, !2074, !2075, !2076, !2077}
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !2063, file: !154, line: 837, baseType: !1543, size: 320)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2063, file: !154, line: 839, baseType: !48, size: 16, offset: 320)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "missing_data", scope: !2063, file: !154, line: 839, baseType: !48, size: 16, offset: 336)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "seam_bleed", scope: !2063, file: !154, line: 842, baseType: !48, size: 16, offset: 352)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "normal_angle", scope: !2063, file: !154, line: 842, baseType: !48, size: 16, offset: 368)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "screen_grab_size", scope: !2063, file: !154, line: 843, baseType: !936, size: 32, offset: 384)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2063, file: !154, line: 845, baseType: !22, size: 32, offset: 416)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !2063, file: !154, line: 847, baseType: !56, size: 64, offset: 448)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "stencil", scope: !2063, file: !154, line: 848, baseType: !890, size: 64, offset: 512)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "clone", scope: !2063, file: !154, line: 849, baseType: !890, size: 64, offset: 576)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "canvas", scope: !2063, file: !154, line: 850, baseType: !890, size: 64, offset: 640)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "stencil_col", scope: !2063, file: !154, line: 851, baseType: !209, size: 96, offset: 704)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2063, file: !154, line: 852, baseType: !210, size: 32, offset: 800)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "particle", scope: !1535, file: !154, line: 1104, baseType: !2079, size: 1344, offset: 1344)
!2079 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleEditSettings", file: !154, line: 867, size: 1344, elements: !2080)
!2080 = !{!2081, !2082, !2083, !2084, !2085, !2096, !2097, !2098, !2099, !2100, !2101, !2102, !2103, !2104}
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2079, file: !154, line: 868, baseType: !48, size: 16)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "totrekey", scope: !2079, file: !154, line: 869, baseType: !48, size: 16, offset: 16)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "totaddkey", scope: !2079, file: !154, line: 870, baseType: !48, size: 16, offset: 32)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "brushtype", scope: !2079, file: !154, line: 871, baseType: !48, size: 16, offset: 48)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !2079, file: !154, line: 873, baseType: !2086, size: 896, offset: 64)
!2086 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2087, size: 896, elements: !963)
!2087 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleBrushData", file: !154, line: 864, baseType: !2088)
!2088 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleBrushData", file: !154, line: 859, size: 128, elements: !2089)
!2089 = !{!2090, !2091, !2092, !2093, !2094, !2095}
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2088, file: !154, line: 860, baseType: !48, size: 16)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !2088, file: !154, line: 861, baseType: !48, size: 16, offset: 16)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !2088, file: !154, line: 861, baseType: !48, size: 16, offset: 32)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2088, file: !154, line: 861, baseType: !48, size: 16, offset: 48)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2088, file: !154, line: 862, baseType: !22, size: 32, offset: 64)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "strength", scope: !2088, file: !154, line: 863, baseType: !210, size: 32, offset: 96)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !2079, file: !154, line: 874, baseType: !56, size: 64, offset: 960)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "emitterdist", scope: !2079, file: !154, line: 876, baseType: !210, size: 32, offset: 1024)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !2079, file: !154, line: 876, baseType: !210, size: 32, offset: 1056)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !2079, file: !154, line: 878, baseType: !22, size: 32, offset: 1088)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "edittype", scope: !2079, file: !154, line: 879, baseType: !22, size: 32, offset: 1120)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "draw_step", scope: !2079, file: !154, line: 881, baseType: !22, size: 32, offset: 1152)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "fade_frames", scope: !2079, file: !154, line: 881, baseType: !22, size: 32, offset: 1184)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !2079, file: !154, line: 883, baseType: !152, size: 64, offset: 1216)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !2079, file: !154, line: 884, baseType: !162, size: 64, offset: 1280)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_size", scope: !1535, file: !154, line: 1107, baseType: !210, size: 32, offset: 2688)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "select_thresh", scope: !1535, file: !154, line: 1110, baseType: !210, size: 32, offset: 2720)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_mode", scope: !1535, file: !154, line: 1113, baseType: !48, size: 16, offset: 2752)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_flag", scope: !1535, file: !154, line: 1113, baseType: !48, size: 16, offset: 2768)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "multires_subdiv_type", scope: !1535, file: !154, line: 1116, baseType: !14, size: 8, offset: 2784)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1535, file: !154, line: 1117, baseType: !1112, size: 8, offset: 2792)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_resolution", scope: !1535, file: !154, line: 1120, baseType: !48, size: 16, offset: 2800)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_internal", scope: !1535, file: !154, line: 1121, baseType: !210, size: 32, offset: 2816)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_external", scope: !1535, file: !154, line: 1122, baseType: !210, size: 32, offset: 2848)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_ratio", scope: !1535, file: !154, line: 1123, baseType: !210, size: 32, offset: 2880)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_limit", scope: !1535, file: !154, line: 1124, baseType: !210, size: 32, offset: 2912)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_angle_limit", scope: !1535, file: !154, line: 1125, baseType: !210, size: 32, offset: 2944)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_correlation_limit", scope: !1535, file: !154, line: 1126, baseType: !210, size: 32, offset: 2976)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_symmetry_limit", scope: !1535, file: !154, line: 1127, baseType: !210, size: 32, offset: 3008)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_angle_weight", scope: !1535, file: !154, line: 1128, baseType: !210, size: 32, offset: 3040)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_length_weight", scope: !1535, file: !154, line: 1129, baseType: !210, size: 32, offset: 3072)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_distance_weight", scope: !1535, file: !154, line: 1130, baseType: !210, size: 32, offset: 3104)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_options", scope: !1535, file: !154, line: 1131, baseType: !48, size: 16, offset: 3136)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro", scope: !1535, file: !154, line: 1132, baseType: !14, size: 8, offset: 3152)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro_passes", scope: !1535, file: !154, line: 1133, baseType: !14, size: 8, offset: 3160)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivisions", scope: !1535, file: !154, line: 1134, baseType: !1524, size: 24, offset: 3168)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_multi_level", scope: !1535, file: !154, line: 1135, baseType: !14, size: 8, offset: 3192)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_template", scope: !1535, file: !154, line: 1138, baseType: !162, size: 64, offset: 3200)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching", scope: !1535, file: !154, line: 1139, baseType: !14, size: 8, offset: 3264)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching_convert", scope: !1535, file: !154, line: 1140, baseType: !14, size: 8, offset: 3272)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivision_number", scope: !1535, file: !154, line: 1141, baseType: !14, size: 8, offset: 3280)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_options", scope: !1535, file: !154, line: 1142, baseType: !14, size: 8, offset: 3288)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_roll", scope: !1535, file: !154, line: 1143, baseType: !14, size: 8, offset: 3296)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_side_string", scope: !1535, file: !154, line: 1144, baseType: !2134, size: 64, offset: 3304)
!2134 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 64, elements: !911)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_num_string", scope: !1535, file: !154, line: 1145, baseType: !2134, size: 64, offset: 3368)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode", scope: !1535, file: !154, line: 1148, baseType: !14, size: 8, offset: 3432)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode_live_unwrap", scope: !1535, file: !154, line: 1149, baseType: !14, size: 8, offset: 3440)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "snap_mode", scope: !1535, file: !154, line: 1152, baseType: !14, size: 8, offset: 3448)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "snap_node_mode", scope: !1535, file: !154, line: 1152, baseType: !14, size: 8, offset: 3456)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "snap_uv_mode", scope: !1535, file: !154, line: 1153, baseType: !14, size: 8, offset: 3464)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "snap_flag", scope: !1535, file: !154, line: 1154, baseType: !48, size: 16, offset: 3472)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "snap_target", scope: !1535, file: !154, line: 1154, baseType: !48, size: 16, offset: 3488)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "proportional", scope: !1535, file: !154, line: 1155, baseType: !48, size: 16, offset: 3504)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "prop_mode", scope: !1535, file: !154, line: 1155, baseType: !48, size: 16, offset: 3520)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_objects", scope: !1535, file: !154, line: 1156, baseType: !14, size: 8, offset: 3536)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_mask", scope: !1535, file: !154, line: 1157, baseType: !14, size: 8, offset: 3544)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "auto_normalize", scope: !1535, file: !154, line: 1159, baseType: !14, size: 8, offset: 3552)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "multipaint", scope: !1535, file: !154, line: 1160, baseType: !14, size: 8, offset: 3560)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "weightuser", scope: !1535, file: !154, line: 1161, baseType: !14, size: 8, offset: 3568)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "vgroupsubset", scope: !1535, file: !154, line: 1162, baseType: !14, size: 8, offset: 3576)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "use_uv_sculpt", scope: !1535, file: !154, line: 1165, baseType: !22, size: 32, offset: 3584)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_settings", scope: !1535, file: !154, line: 1166, baseType: !22, size: 32, offset: 3616)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_tool", scope: !1535, file: !154, line: 1167, baseType: !22, size: 32, offset: 3648)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "uv_relax_method", scope: !1535, file: !154, line: 1168, baseType: !22, size: 32, offset: 3680)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_settings", scope: !1535, file: !154, line: 1171, baseType: !48, size: 16, offset: 3712)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !1535, file: !154, line: 1171, baseType: !48, size: 16, offset: 3728)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_size", scope: !1535, file: !154, line: 1172, baseType: !22, size: 32, offset: 3744)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_unprojected_radius", scope: !1535, file: !154, line: 1173, baseType: !210, size: 32, offset: 3776)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_alpha", scope: !1535, file: !154, line: 1174, baseType: !210, size: 32, offset: 3808)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "unified_paint_settings", scope: !1535, file: !154, line: 1177, baseType: !2161, size: 1024, offset: 3840)
!2161 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnifiedPaintSettings", file: !154, line: 963, size: 1024, elements: !2162)
!2162 = !{!2163, !2164, !2165, !2166, !2167, !2168, !2169, !2170, !2171, !2172, !2173, !2174, !2175, !2176, !2177, !2178, !2179, !2180, !2181, !2182, !2183, !2184, !2185}
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2161, file: !154, line: 965, baseType: !22, size: 32)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "unprojected_radius", scope: !2161, file: !154, line: 968, baseType: !210, size: 32, offset: 32)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !2161, file: !154, line: 971, baseType: !210, size: 32, offset: 64)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !2161, file: !154, line: 974, baseType: !210, size: 32, offset: 96)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "rgb", scope: !2161, file: !154, line: 977, baseType: !209, size: 96, offset: 128)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "secondary_rgb", scope: !2161, file: !154, line: 979, baseType: !209, size: 96, offset: 224)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2161, file: !154, line: 982, baseType: !22, size: 32, offset: 320)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "last_rake", scope: !2161, file: !154, line: 987, baseType: !1052, size: 64, offset: 352)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "brush_rotation", scope: !2161, file: !154, line: 989, baseType: !210, size: 32, offset: 416)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "draw_anchored", scope: !2161, file: !154, line: 994, baseType: !22, size: 32, offset: 448)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_size", scope: !2161, file: !154, line: 995, baseType: !22, size: 32, offset: 480)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "draw_inverted", scope: !2161, file: !154, line: 997, baseType: !14, size: 8, offset: 512)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !2161, file: !154, line: 998, baseType: !962, size: 56, offset: 520)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "overlap_factor", scope: !2161, file: !154, line: 1000, baseType: !210, size: 32, offset: 576)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_initial_mouse", scope: !2161, file: !154, line: 1003, baseType: !1052, size: 64, offset: 608)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "stroke_active", scope: !2161, file: !154, line: 1006, baseType: !22, size: 32, offset: 672)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "size_pressure_value", scope: !2161, file: !154, line: 1009, baseType: !210, size: 32, offset: 704)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "tex_mouse", scope: !2161, file: !154, line: 1012, baseType: !1052, size: 64, offset: 736)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "mask_tex_mouse", scope: !2161, file: !154, line: 1015, baseType: !1052, size: 64, offset: 800)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "do_linear_conversion", scope: !2161, file: !154, line: 1018, baseType: !22, size: 32, offset: 864)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !2161, file: !154, line: 1019, baseType: !1746, size: 64, offset: 896)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_radius", scope: !2161, file: !154, line: 1023, baseType: !210, size: 32, offset: 960)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !2161, file: !154, line: 1024, baseType: !22, size: 32, offset: 992)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "statvis", scope: !1535, file: !154, line: 1179, baseType: !2187, size: 320, offset: 4864)
!2187 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MeshStatVis", file: !154, line: 1043, size: 320, elements: !2188)
!2188 = !{!2189, !2190, !2191, !2192, !2193, !2194, !2195, !2196, !2197, !2198, !2199, !2200, !2201}
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2187, file: !154, line: 1044, baseType: !14, size: 8)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "_pad1", scope: !2187, file: !154, line: 1045, baseType: !200, size: 16, offset: 8)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_axis", scope: !2187, file: !154, line: 1048, baseType: !14, size: 8, offset: 24)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_min", scope: !2187, file: !154, line: 1049, baseType: !210, size: 32, offset: 32)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_max", scope: !2187, file: !154, line: 1049, baseType: !210, size: 32, offset: 64)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_min", scope: !2187, file: !154, line: 1052, baseType: !210, size: 32, offset: 96)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_max", scope: !2187, file: !154, line: 1052, baseType: !210, size: 32, offset: 128)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_samples", scope: !2187, file: !154, line: 1053, baseType: !14, size: 8, offset: 160)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "_pad2", scope: !2187, file: !154, line: 1054, baseType: !1524, size: 24, offset: 168)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "distort_min", scope: !2187, file: !154, line: 1057, baseType: !210, size: 32, offset: 192)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "distort_max", scope: !2187, file: !154, line: 1057, baseType: !210, size: 32, offset: 224)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_min", scope: !2187, file: !154, line: 1060, baseType: !210, size: 32, offset: 256)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_max", scope: !2187, file: !154, line: 1060, baseType: !210, size: 32, offset: 288)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !153, file: !154, line: 1247, baseType: !2203, size: 64, offset: 2176)
!2203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2204, size: 64)
!2204 = !DICompositeType(tag: DW_TAG_structure_type, name: "SceneStats", file: !154, line: 60, flags: DIFlagFwdDecl)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !153, file: !154, line: 1251, baseType: !2206, size: 31872, offset: 2240)
!2206 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderData", file: !154, line: 403, size: 31872, elements: !2207)
!2207 = !{!2208, !2243, !2263, !2272, !2292, !2312, !2313, !2314, !2315, !2316, !2317, !2318, !2319, !2320, !2321, !2322, !2323, !2324, !2325, !2326, !2327, !2328, !2329, !2330, !2331, !2332, !2333, !2334, !2335, !2336, !2337, !2338, !2339, !2340, !2341, !2342, !2343, !2344, !2345, !2346, !2347, !2348, !2349, !2350, !2351, !2352, !2353, !2354, !2355, !2356, !2357, !2358, !2359, !2360, !2361, !2362, !2363, !2364, !2365, !2366, !2367, !2368, !2369, !2370, !2371, !2372, !2373, !2374, !2375, !2376, !2377, !2378, !2379, !2380, !2381, !2382, !2383, !2384, !2385, !2386, !2387, !2388, !2389, !2390, !2391, !2392, !2393, !2394, !2395, !2396, !2397, !2398, !2399, !2400, !2401, !2402, !2403, !2404, !2405, !2406, !2407, !2408, !2409, !2410, !2411, !2412, !2413, !2414, !2415, !2416, !2417, !2418, !2419, !2423, !2424, !2425, !2427, !2443, !2444}
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !2206, file: !154, line: 404, baseType: !2209, size: 1984)
!2209 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageFormatData", file: !154, line: 259, size: 1984, elements: !2210)
!2210 = !{!2211, !2212, !2213, !2214, !2215, !2216, !2217, !2218, !2219, !2220, !2221, !2222, !2223, !2224, !2226, !2238}
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !2209, file: !154, line: 260, baseType: !14, size: 8)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !2209, file: !154, line: 263, baseType: !14, size: 8, offset: 8)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !2209, file: !154, line: 266, baseType: !14, size: 8, offset: 16)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2209, file: !154, line: 267, baseType: !14, size: 8, offset: 24)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !2209, file: !154, line: 269, baseType: !14, size: 8, offset: 32)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "compress", scope: !2209, file: !154, line: 270, baseType: !14, size: 8, offset: 40)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "exr_codec", scope: !2209, file: !154, line: 276, baseType: !14, size: 8, offset: 48)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_flag", scope: !2209, file: !154, line: 279, baseType: !14, size: 8, offset: 56)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_white", scope: !2209, file: !154, line: 280, baseType: !48, size: 16, offset: 64)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_black", scope: !2209, file: !154, line: 280, baseType: !48, size: 16, offset: 80)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_gamma", scope: !2209, file: !154, line: 281, baseType: !210, size: 32, offset: 96)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_flag", scope: !2209, file: !154, line: 284, baseType: !14, size: 8, offset: 128)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_codec", scope: !2209, file: !154, line: 285, baseType: !14, size: 8, offset: 136)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2209, file: !154, line: 287, baseType: !2225, size: 48, offset: 144)
!2225 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 48, elements: !1769)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !2209, file: !154, line: 290, baseType: !2227, size: 1280, offset: 192)
!2227 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedViewSettings", file: !956, line: 174, baseType: !2228)
!2228 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedViewSettings", file: !956, line: 166, size: 1280, elements: !2229)
!2229 = !{!2230, !2231, !2232, !2233, !2234, !2235, !2236, !2237}
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2228, file: !956, line: 167, baseType: !22, size: 32)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2228, file: !956, line: 167, baseType: !22, size: 32, offset: 32)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "look", scope: !2228, file: !956, line: 168, baseType: !33, size: 512, offset: 64)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "view_transform", scope: !2228, file: !956, line: 169, baseType: !33, size: 512, offset: 576)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "exposure", scope: !2228, file: !956, line: 170, baseType: !210, size: 32, offset: 1088)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !2228, file: !956, line: 171, baseType: !210, size: 32, offset: 1120)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "curve_mapping", scope: !2228, file: !956, line: 172, baseType: !1560, size: 64, offset: 1152)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2228, file: !956, line: 173, baseType: !56, size: 64, offset: 1216)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !2209, file: !154, line: 291, baseType: !2239, size: 512, offset: 1472)
!2239 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedDisplaySettings", file: !956, line: 178, baseType: !2240)
!2240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedDisplaySettings", file: !956, line: 176, size: 512, elements: !2241)
!2241 = !{!2242}
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "display_device", scope: !2240, file: !956, line: 177, baseType: !33, size: 512)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecdata", scope: !2206, file: !154, line: 406, baseType: !2244, size: 64, offset: 1984)
!2244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2245, size: 64)
!2245 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AviCodecData", file: !154, line: 80, size: 1472, elements: !2246)
!2246 = !{!2247, !2248, !2249, !2250, !2251, !2252, !2253, !2254, !2255, !2256, !2257, !2258, !2259}
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "lpFormat", scope: !2245, file: !154, line: 81, baseType: !56, size: 64)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "lpParms", scope: !2245, file: !154, line: 82, baseType: !56, size: 64, offset: 64)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "cbFormat", scope: !2245, file: !154, line: 83, baseType: !231, size: 32, offset: 128)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "cbParms", scope: !2245, file: !154, line: 84, baseType: !231, size: 32, offset: 160)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "fccType", scope: !2245, file: !154, line: 86, baseType: !231, size: 32, offset: 192)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "fccHandler", scope: !2245, file: !154, line: 87, baseType: !231, size: 32, offset: 224)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "dwKeyFrameEvery", scope: !2245, file: !154, line: 88, baseType: !231, size: 32, offset: 256)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "dwQuality", scope: !2245, file: !154, line: 89, baseType: !231, size: 32, offset: 288)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "dwBytesPerSecond", scope: !2245, file: !154, line: 90, baseType: !231, size: 32, offset: 320)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "dwFlags", scope: !2245, file: !154, line: 91, baseType: !231, size: 32, offset: 352)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "dwInterleaveEvery", scope: !2245, file: !154, line: 92, baseType: !231, size: 32, offset: 384)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2245, file: !154, line: 93, baseType: !231, size: 32, offset: 416)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecname", scope: !2245, file: !154, line: 95, baseType: !2260, size: 1024, offset: 448)
!2260 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 1024, elements: !2261)
!2261 = !{!2262}
!2262 = !DISubrange(count: 128)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecdata", scope: !2206, file: !154, line: 407, baseType: !2264, size: 64, offset: 2048)
!2264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2265, size: 64)
!2265 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecData", file: !154, line: 98, size: 1216, elements: !2266)
!2266 = !{!2267, !2268, !2269, !2270, !2271}
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "cdParms", scope: !2265, file: !154, line: 100, baseType: !56, size: 64)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2265, file: !154, line: 101, baseType: !56, size: 64, offset: 64)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "cdSize", scope: !2265, file: !154, line: 103, baseType: !231, size: 32, offset: 128)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2265, file: !154, line: 104, baseType: !231, size: 32, offset: 160)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecname", scope: !2265, file: !154, line: 106, baseType: !2260, size: 1024, offset: 192)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecsettings", scope: !2206, file: !154, line: 408, baseType: !2273, size: 512, offset: 2112)
!2273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecSettings", file: !154, line: 109, size: 512, elements: !2274)
!2274 = !{!2275, !2276, !2277, !2278, !2279, !2280, !2281, !2282, !2283, !2284, !2285, !2286, !2287, !2288, !2289, !2290, !2291}
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "codecType", scope: !2273, file: !154, line: 111, baseType: !22, size: 32)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "codecSpatialQuality", scope: !2273, file: !154, line: 112, baseType: !22, size: 32, offset: 32)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !2273, file: !154, line: 115, baseType: !22, size: 32, offset: 64)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "codecFlags", scope: !2273, file: !154, line: 116, baseType: !22, size: 32, offset: 96)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "colorDepth", scope: !2273, file: !154, line: 117, baseType: !22, size: 32, offset: 128)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "codecTemporalQuality", scope: !2273, file: !154, line: 118, baseType: !22, size: 32, offset: 160)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "minSpatialQuality", scope: !2273, file: !154, line: 119, baseType: !22, size: 32, offset: 192)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "minTemporalQuality", scope: !2273, file: !154, line: 120, baseType: !22, size: 32, offset: 224)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "keyFrameRate", scope: !2273, file: !154, line: 121, baseType: !22, size: 32, offset: 256)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "bitRate", scope: !2273, file: !154, line: 122, baseType: !22, size: 32, offset: 288)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "audiocodecType", scope: !2273, file: !154, line: 125, baseType: !22, size: 32, offset: 320)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "audioSampleRate", scope: !2273, file: !154, line: 126, baseType: !22, size: 32, offset: 352)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitDepth", scope: !2273, file: !154, line: 127, baseType: !48, size: 16, offset: 384)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "audioChannels", scope: !2273, file: !154, line: 128, baseType: !48, size: 16, offset: 400)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "audioCodecFlags", scope: !2273, file: !154, line: 129, baseType: !22, size: 32, offset: 416)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitRate", scope: !2273, file: !154, line: 130, baseType: !22, size: 32, offset: 448)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2273, file: !154, line: 131, baseType: !22, size: 32, offset: 480)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "ffcodecdata", scope: !2206, file: !154, line: 409, baseType: !2293, size: 576, offset: 2624)
!2293 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFMpegCodecData", file: !154, line: 134, size: 576, elements: !2294)
!2294 = !{!2295, !2296, !2297, !2298, !2299, !2300, !2301, !2302, !2303, !2304, !2305, !2306, !2307, !2308, !2309, !2310, !2311}
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2293, file: !154, line: 135, baseType: !22, size: 32)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !2293, file: !154, line: 136, baseType: !22, size: 32, offset: 32)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "audio_codec", scope: !2293, file: !154, line: 137, baseType: !22, size: 32, offset: 64)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "video_bitrate", scope: !2293, file: !154, line: 138, baseType: !22, size: 32, offset: 96)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "audio_bitrate", scope: !2293, file: !154, line: 139, baseType: !22, size: 32, offset: 128)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "audio_mixrate", scope: !2293, file: !154, line: 140, baseType: !22, size: 32, offset: 160)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "audio_channels", scope: !2293, file: !154, line: 141, baseType: !22, size: 32, offset: 192)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "audio_pad", scope: !2293, file: !154, line: 142, baseType: !22, size: 32, offset: 224)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "audio_volume", scope: !2293, file: !154, line: 143, baseType: !210, size: 32, offset: 256)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "gop_size", scope: !2293, file: !154, line: 144, baseType: !22, size: 32, offset: 288)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2293, file: !154, line: 145, baseType: !22, size: 32, offset: 320)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_rate", scope: !2293, file: !154, line: 147, baseType: !22, size: 32, offset: 352)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_rate", scope: !2293, file: !154, line: 148, baseType: !22, size: 32, offset: 384)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "rc_buffer_size", scope: !2293, file: !154, line: 149, baseType: !22, size: 32, offset: 416)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "mux_packet_size", scope: !2293, file: !154, line: 150, baseType: !22, size: 32, offset: 448)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "mux_rate", scope: !2293, file: !154, line: 151, baseType: !22, size: 32, offset: 480)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !2293, file: !154, line: 152, baseType: !37, size: 64, offset: 512)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "cfra", scope: !2206, file: !154, line: 411, baseType: !22, size: 32, offset: 3200)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !2206, file: !154, line: 411, baseType: !22, size: 32, offset: 3232)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "efra", scope: !2206, file: !154, line: 411, baseType: !22, size: 32, offset: 3264)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "subframe", scope: !2206, file: !154, line: 412, baseType: !210, size: 32, offset: 3296)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "psfra", scope: !2206, file: !154, line: 413, baseType: !22, size: 32, offset: 3328)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "pefra", scope: !2206, file: !154, line: 413, baseType: !22, size: 32, offset: 3360)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "images", scope: !2206, file: !154, line: 415, baseType: !22, size: 32, offset: 3392)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "framapto", scope: !2206, file: !154, line: 415, baseType: !22, size: 32, offset: 3424)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2206, file: !154, line: 416, baseType: !48, size: 16, offset: 3456)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "threads", scope: !2206, file: !154, line: 416, baseType: !48, size: 16, offset: 3472)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "framelen", scope: !2206, file: !154, line: 418, baseType: !210, size: 32, offset: 3488)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "blurfac", scope: !2206, file: !154, line: 418, baseType: !210, size: 32, offset: 3520)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "edgeR", scope: !2206, file: !154, line: 421, baseType: !210, size: 32, offset: 3552)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "edgeG", scope: !2206, file: !154, line: 421, baseType: !210, size: 32, offset: 3584)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "edgeB", scope: !2206, file: !154, line: 421, baseType: !210, size: 32, offset: 3616)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "fullscreen", scope: !2206, file: !154, line: 425, baseType: !48, size: 16, offset: 3648)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !2206, file: !154, line: 425, baseType: !48, size: 16, offset: 3664)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !2206, file: !154, line: 425, baseType: !48, size: 16, offset: 3680)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !2206, file: !154, line: 426, baseType: !48, size: 16, offset: 3696)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !2206, file: !154, line: 428, baseType: !48, size: 16, offset: 3712)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !2206, file: !154, line: 428, baseType: !48, size: 16, offset: 3728)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "frame_step", scope: !2206, file: !154, line: 431, baseType: !22, size: 32, offset: 3744)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !2206, file: !154, line: 433, baseType: !48, size: 16, offset: 3776)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "dimensionspreset", scope: !2206, file: !154, line: 435, baseType: !48, size: 16, offset: 3792)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "filtertype", scope: !2206, file: !154, line: 437, baseType: !48, size: 16, offset: 3808)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2206, file: !154, line: 439, baseType: !48, size: 16, offset: 3824)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "maximsize", scope: !2206, file: !154, line: 441, baseType: !48, size: 16, offset: 3840)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "pad6", scope: !2206, file: !154, line: 443, baseType: !48, size: 16, offset: 3856)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "xsch", scope: !2206, file: !154, line: 449, baseType: !22, size: 32, offset: 3872)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "ysch", scope: !2206, file: !154, line: 453, baseType: !22, size: 32, offset: 3904)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "xparts", scope: !2206, file: !154, line: 458, baseType: !48, size: 16, offset: 3936)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "yparts", scope: !2206, file: !154, line: 462, baseType: !48, size: 16, offset: 3952)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "tilex", scope: !2206, file: !154, line: 467, baseType: !22, size: 32, offset: 3968)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "tiley", scope: !2206, file: !154, line: 467, baseType: !22, size: 32, offset: 4000)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !2206, file: !154, line: 469, baseType: !48, size: 16, offset: 4032)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !2206, file: !154, line: 469, baseType: !48, size: 16, offset: 4048)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "subimtype", scope: !2206, file: !154, line: 469, baseType: !48, size: 16, offset: 4064)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !2206, file: !154, line: 469, baseType: !48, size: 16, offset: 4080)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "displaymode", scope: !2206, file: !154, line: 474, baseType: !48, size: 16, offset: 4096)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "use_lock_interface", scope: !2206, file: !154, line: 475, baseType: !14, size: 8, offset: 4112)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "pad7", scope: !2206, file: !154, line: 476, baseType: !14, size: 8, offset: 4120)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "scemode", scope: !2206, file: !154, line: 481, baseType: !22, size: 32, offset: 4128)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2206, file: !154, line: 486, baseType: !22, size: 32, offset: 4160)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_options", scope: !2206, file: !154, line: 491, baseType: !22, size: 32, offset: 4192)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_structure", scope: !2206, file: !154, line: 496, baseType: !48, size: 16, offset: 4224)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2206, file: !154, line: 498, baseType: !48, size: 16, offset: 4240)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "ocres", scope: !2206, file: !154, line: 501, baseType: !48, size: 16, offset: 4256)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !2206, file: !154, line: 502, baseType: !48, size: 16, offset: 4272)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "alphamode", scope: !2206, file: !154, line: 508, baseType: !48, size: 16, offset: 4288)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "osa", scope: !2206, file: !154, line: 513, baseType: !48, size: 16, offset: 4304)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec", scope: !2206, file: !154, line: 515, baseType: !48, size: 16, offset: 4320)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "edgeint", scope: !2206, file: !154, line: 515, baseType: !48, size: 16, offset: 4336)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "safety", scope: !2206, file: !154, line: 519, baseType: !1145, size: 128, offset: 4352)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "border", scope: !2206, file: !154, line: 519, baseType: !1145, size: 128, offset: 4480)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "disprect", scope: !2206, file: !154, line: 520, baseType: !1755, size: 128, offset: 4608)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "layers", scope: !2206, file: !154, line: 523, baseType: !58, size: 128, offset: 4736)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "actlay", scope: !2206, file: !154, line: 524, baseType: !48, size: 16, offset: 4864)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "mblur_samples", scope: !2206, file: !154, line: 527, baseType: !48, size: 16, offset: 4880)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "xasp", scope: !2206, file: !154, line: 532, baseType: !210, size: 32, offset: 4896)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "yasp", scope: !2206, file: !154, line: 532, baseType: !210, size: 32, offset: 4928)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec_base", scope: !2206, file: !154, line: 534, baseType: !210, size: 32, offset: 4960)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "gauss", scope: !2206, file: !154, line: 538, baseType: !210, size: 32, offset: 4992)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "color_mgt_flag", scope: !2206, file: !154, line: 542, baseType: !22, size: 32, offset: 5024)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "postgamma", scope: !2206, file: !154, line: 545, baseType: !210, size: 32, offset: 5056)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "posthue", scope: !2206, file: !154, line: 545, baseType: !210, size: 32, offset: 5088)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "postsat", scope: !2206, file: !154, line: 545, baseType: !210, size: 32, offset: 5120)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "dither_intensity", scope: !2206, file: !154, line: 548, baseType: !210, size: 32, offset: 5152)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "bake_osa", scope: !2206, file: !154, line: 551, baseType: !48, size: 16, offset: 5184)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "bake_filter", scope: !2206, file: !154, line: 551, baseType: !48, size: 16, offset: 5200)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "bake_mode", scope: !2206, file: !154, line: 551, baseType: !48, size: 16, offset: 5216)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "bake_flag", scope: !2206, file: !154, line: 551, baseType: !48, size: 16, offset: 5232)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "bake_normal_space", scope: !2206, file: !154, line: 552, baseType: !48, size: 16, offset: 5248)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "bake_quad_split", scope: !2206, file: !154, line: 552, baseType: !48, size: 16, offset: 5264)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "bake_maxdist", scope: !2206, file: !154, line: 553, baseType: !210, size: 32, offset: 5280)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "bake_biasdist", scope: !2206, file: !154, line: 553, baseType: !210, size: 32, offset: 5312)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "bake_samples", scope: !2206, file: !154, line: 554, baseType: !48, size: 16, offset: 5344)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad", scope: !2206, file: !154, line: 554, baseType: !48, size: 16, offset: 5360)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "bake_user_scale", scope: !2206, file: !154, line: 555, baseType: !210, size: 32, offset: 5376)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad1", scope: !2206, file: !154, line: 555, baseType: !210, size: 32, offset: 5408)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "pic", scope: !2206, file: !154, line: 558, baseType: !130, size: 8192, offset: 5440)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !2206, file: !154, line: 561, baseType: !22, size: 32, offset: 13632)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_font_id", scope: !2206, file: !154, line: 562, baseType: !48, size: 16, offset: 13664)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !2206, file: !154, line: 562, baseType: !48, size: 16, offset: 13680)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_udata", scope: !2206, file: !154, line: 565, baseType: !1249, size: 6144, offset: 13696)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "fg_stamp", scope: !2206, file: !154, line: 568, baseType: !419, size: 128, offset: 19840)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "bg_stamp", scope: !2206, file: !154, line: 569, baseType: !419, size: 128, offset: 19968)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "seq_prev_type", scope: !2206, file: !154, line: 572, baseType: !14, size: 8, offset: 20096)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "seq_rend_type", scope: !2206, file: !154, line: 573, baseType: !14, size: 8, offset: 20104)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "seq_flag", scope: !2206, file: !154, line: 574, baseType: !14, size: 8, offset: 20112)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !2206, file: !154, line: 575, baseType: !2059, size: 40, offset: 20120)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_flag", scope: !2206, file: !154, line: 578, baseType: !22, size: 32, offset: 20160)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_subsurf", scope: !2206, file: !154, line: 579, baseType: !48, size: 16, offset: 20192)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_shadowsamples", scope: !2206, file: !154, line: 580, baseType: !48, size: 16, offset: 20208)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_particles", scope: !2206, file: !154, line: 581, baseType: !210, size: 32, offset: 20224)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_aosss", scope: !2206, file: !154, line: 582, baseType: !210, size: 32, offset: 20256)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "cineonwhite", scope: !2206, file: !154, line: 585, baseType: !48, size: 16, offset: 20288)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "cineonblack", scope: !2206, file: !154, line: 585, baseType: !48, size: 16, offset: 20304)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "cineongamma", scope: !2206, file: !154, line: 586, baseType: !210, size: 32, offset: 20320)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_preset", scope: !2206, file: !154, line: 589, baseType: !48, size: 16, offset: 20352)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_depth", scope: !2206, file: !154, line: 589, baseType: !48, size: 16, offset: 20368)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "rpad3", scope: !2206, file: !154, line: 590, baseType: !22, size: 32, offset: 20384)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "domeres", scope: !2206, file: !154, line: 593, baseType: !48, size: 16, offset: 20416)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "domemode", scope: !2206, file: !154, line: 593, baseType: !48, size: 16, offset: 20432)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "domeangle", scope: !2206, file: !154, line: 594, baseType: !48, size: 16, offset: 20448)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "dometilt", scope: !2206, file: !154, line: 594, baseType: !48, size: 16, offset: 20464)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "domeresbuf", scope: !2206, file: !154, line: 595, baseType: !210, size: 32, offset: 20480)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2206, file: !154, line: 596, baseType: !210, size: 32, offset: 20512)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "dometext", scope: !2206, file: !154, line: 597, baseType: !2420, size: 64, offset: 20544)
!2420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2421, size: 64)
!2421 = !DICompositeType(tag: DW_TAG_structure_type, name: "Text", file: !2422, line: 44, flags: DIFlagFwdDecl)
!2422 = !DIFile(filename: "blender/source/blender/makesdna/DNA_freestyle_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "line_thickness_mode", scope: !2206, file: !154, line: 600, baseType: !22, size: 32, offset: 20608)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "unit_line_thickness", scope: !2206, file: !154, line: 601, baseType: !210, size: 32, offset: 20640)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "engine", scope: !2206, file: !154, line: 604, baseType: !2426, size: 256, offset: 20672)
!2426 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 256, elements: !1687)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "bake", scope: !2206, file: !154, line: 607, baseType: !2428, size: 10880, offset: 20928)
!2428 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BakeData", file: !154, line: 364, size: 10880, elements: !2429)
!2429 = !{!2430, !2431, !2432, !2433, !2434, !2435, !2436, !2437, !2438, !2439, !2440, !2441, !2442}
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !2428, file: !154, line: 365, baseType: !2209, size: 1984)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !2428, file: !154, line: 367, baseType: !130, size: 8192, offset: 1984)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !2428, file: !154, line: 369, baseType: !48, size: 16, offset: 10176)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !2428, file: !154, line: 369, baseType: !48, size: 16, offset: 10192)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !2428, file: !154, line: 370, baseType: !48, size: 16, offset: 10208)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2428, file: !154, line: 370, baseType: !48, size: 16, offset: 10224)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "cage_extrusion", scope: !2428, file: !154, line: 372, baseType: !210, size: 32, offset: 10240)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2428, file: !154, line: 373, baseType: !210, size: 32, offset: 10272)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "normal_swizzle", scope: !2428, file: !154, line: 375, baseType: !1524, size: 24, offset: 10304)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "normal_space", scope: !2428, file: !154, line: 376, baseType: !14, size: 8, offset: 10328)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "save_mode", scope: !2428, file: !154, line: 378, baseType: !14, size: 8, offset: 10336)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2428, file: !154, line: 379, baseType: !1524, size: 24, offset: 10344)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "cage", scope: !2428, file: !154, line: 381, baseType: !33, size: 512, offset: 10368)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "preview_start_resolution", scope: !2206, file: !154, line: 609, baseType: !22, size: 32, offset: 31808)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2206, file: !154, line: 610, baseType: !22, size: 32, offset: 31840)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "audio", scope: !153, file: !154, line: 1252, baseType: !2446, size: 256, offset: 34112)
!2446 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AudioData", file: !154, line: 158, size: 256, elements: !2447)
!2447 = !{!2448, !2449, !2450, !2451, !2452, !2453, !2454, !2455, !2456}
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "mixrate", scope: !2446, file: !154, line: 159, baseType: !22, size: 32)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "main", scope: !2446, file: !154, line: 160, baseType: !210, size: 32, offset: 32)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "speed_of_sound", scope: !2446, file: !154, line: 161, baseType: !210, size: 32, offset: 64)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "doppler_factor", scope: !2446, file: !154, line: 162, baseType: !210, size: 32, offset: 96)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "distance_model", scope: !2446, file: !154, line: 163, baseType: !22, size: 32, offset: 128)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2446, file: !154, line: 164, baseType: !48, size: 16, offset: 160)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2446, file: !154, line: 165, baseType: !48, size: 16, offset: 176)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "volume", scope: !2446, file: !154, line: 166, baseType: !210, size: 32, offset: 192)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2446, file: !154, line: 167, baseType: !210, size: 32, offset: 224)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !153, file: !154, line: 1254, baseType: !58, size: 128, offset: 34368)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "transform_spaces", scope: !153, file: !154, line: 1255, baseType: !58, size: 128, offset: 34496)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene", scope: !153, file: !154, line: 1257, baseType: !56, size: 64, offset: 34624)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene_handle", scope: !153, file: !154, line: 1258, baseType: !56, size: 64, offset: 34688)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scrub_handle", scope: !153, file: !154, line: 1259, baseType: !56, size: 64, offset: 34752)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "speaker_handles", scope: !153, file: !154, line: 1260, baseType: !56, size: 64, offset: 34816)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "fps_info", scope: !153, file: !154, line: 1262, baseType: !56, size: 64, offset: 34880)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "theDag", scope: !153, file: !154, line: 1265, baseType: !2465, size: 64, offset: 34944)
!2465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2466, size: 64)
!2466 = !DICompositeType(tag: DW_TAG_structure_type, name: "DagForest", file: !154, line: 1265, flags: DIFlagFwdDecl)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "dagflags", scope: !153, file: !154, line: 1266, baseType: !48, size: 16, offset: 35008)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !153, file: !154, line: 1267, baseType: !48, size: 16, offset: 35024)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "active_keyingset", scope: !153, file: !154, line: 1270, baseType: !22, size: 32, offset: 35040)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "keyingsets", scope: !153, file: !154, line: 1271, baseType: !58, size: 128, offset: 35072)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !153, file: !154, line: 1274, baseType: !2472, size: 128, offset: 35200)
!2472 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameFraming", file: !154, line: 650, size: 128, elements: !2473)
!2473 = !{!2474, !2475, !2476, !2477, !2478}
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !2472, file: !154, line: 651, baseType: !209, size: 96)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2472, file: !154, line: 652, baseType: !14, size: 8, offset: 96)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2472, file: !154, line: 652, baseType: !14, size: 8, offset: 104)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2472, file: !154, line: 652, baseType: !14, size: 8, offset: 112)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !2472, file: !154, line: 652, baseType: !14, size: 8, offset: 120)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "gm", scope: !153, file: !154, line: 1275, baseType: !2480, size: 1472, offset: 35328)
!2480 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameData", file: !154, line: 676, size: 1472, elements: !2481)
!2481 = !{!2482, !2483, !2484, !2485, !2486, !2487, !2488, !2489, !2490, !2491, !2492, !2493, !2503, !2504, !2505, !2506, !2525, !2526, !2527, !2528, !2529, !2530, !2531, !2532, !2533, !2534, !2535, !2536, !2537, !2538, !2539, !2540, !2541, !2542, !2543, !2544}
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !2480, file: !154, line: 679, baseType: !2472, size: 128)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "playerflag", scope: !2480, file: !154, line: 680, baseType: !48, size: 16, offset: 128)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !2480, file: !154, line: 680, baseType: !48, size: 16, offset: 144)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !2480, file: !154, line: 680, baseType: !48, size: 16, offset: 160)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !2480, file: !154, line: 680, baseType: !48, size: 16, offset: 176)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !2480, file: !154, line: 681, baseType: !48, size: 16, offset: 192)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !2480, file: !154, line: 681, baseType: !48, size: 16, offset: 208)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "rt1", scope: !2480, file: !154, line: 681, baseType: !48, size: 16, offset: 224)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "rt2", scope: !2480, file: !154, line: 681, baseType: !48, size: 16, offset: 240)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "aasamples", scope: !2480, file: !154, line: 682, baseType: !48, size: 16, offset: 256)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !2480, file: !154, line: 682, baseType: !214, size: 48, offset: 272)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "dome", scope: !2480, file: !154, line: 685, baseType: !2494, size: 192, offset: 320)
!2494 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameDome", file: !154, line: 633, size: 192, elements: !2495)
!2495 = !{!2496, !2497, !2498, !2499, !2500, !2501, !2502}
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "res", scope: !2494, file: !154, line: 634, baseType: !48, size: 16)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2494, file: !154, line: 634, baseType: !48, size: 16, offset: 16)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "angle", scope: !2494, file: !154, line: 635, baseType: !48, size: 16, offset: 32)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "tilt", scope: !2494, file: !154, line: 635, baseType: !48, size: 16, offset: 48)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "resbuf", scope: !2494, file: !154, line: 636, baseType: !210, size: 32, offset: 64)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2494, file: !154, line: 636, baseType: !210, size: 32, offset: 96)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "warptext", scope: !2494, file: !154, line: 637, baseType: !2420, size: 64, offset: 128)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "stereoflag", scope: !2480, file: !154, line: 686, baseType: !48, size: 16, offset: 512)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !2480, file: !154, line: 686, baseType: !48, size: 16, offset: 528)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "eyeseparation", scope: !2480, file: !154, line: 687, baseType: !210, size: 32, offset: 544)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "recastData", scope: !2480, file: !154, line: 688, baseType: !2507, size: 448, offset: 576)
!2507 = !DIDerivedType(tag: DW_TAG_typedef, name: "RecastData", file: !154, line: 674, baseType: !2508)
!2508 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RecastData", file: !154, line: 659, size: 448, elements: !2509)
!2509 = !{!2510, !2511, !2512, !2513, !2514, !2515, !2516, !2517, !2518, !2519, !2520, !2521, !2522, !2523, !2524}
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "cellsize", scope: !2508, file: !154, line: 660, baseType: !210, size: 32)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "cellheight", scope: !2508, file: !154, line: 661, baseType: !210, size: 32, offset: 32)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxslope", scope: !2508, file: !154, line: 662, baseType: !210, size: 32, offset: 64)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxclimb", scope: !2508, file: !154, line: 663, baseType: !210, size: 32, offset: 96)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "agentheight", scope: !2508, file: !154, line: 664, baseType: !210, size: 32, offset: 128)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "agentradius", scope: !2508, file: !154, line: 665, baseType: !210, size: 32, offset: 160)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxlen", scope: !2508, file: !154, line: 666, baseType: !210, size: 32, offset: 192)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxerror", scope: !2508, file: !154, line: 667, baseType: !210, size: 32, offset: 224)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "regionminsize", scope: !2508, file: !154, line: 668, baseType: !210, size: 32, offset: 256)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "regionmergesize", scope: !2508, file: !154, line: 669, baseType: !210, size: 32, offset: 288)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "vertsperpoly", scope: !2508, file: !154, line: 670, baseType: !22, size: 32, offset: 320)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "detailsampledist", scope: !2508, file: !154, line: 671, baseType: !210, size: 32, offset: 352)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "detailsamplemaxerror", scope: !2508, file: !154, line: 672, baseType: !210, size: 32, offset: 384)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2508, file: !154, line: 673, baseType: !48, size: 16, offset: 416)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2508, file: !154, line: 673, baseType: !48, size: 16, offset: 432)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !2480, file: !154, line: 692, baseType: !210, size: 32, offset: 1024)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "activityBoxRadius", scope: !2480, file: !154, line: 697, baseType: !210, size: 32, offset: 1056)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2480, file: !154, line: 703, baseType: !22, size: 32, offset: 1088)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2480, file: !154, line: 704, baseType: !48, size: 16, offset: 1120)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "matmode", scope: !2480, file: !154, line: 704, baseType: !48, size: 16, offset: 1136)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "occlusionRes", scope: !2480, file: !154, line: 705, baseType: !48, size: 16, offset: 1152)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "physicsEngine", scope: !2480, file: !154, line: 706, baseType: !48, size: 16, offset: 1168)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "exitkey", scope: !2480, file: !154, line: 707, baseType: !48, size: 16, offset: 1184)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "vsync", scope: !2480, file: !154, line: 708, baseType: !48, size: 16, offset: 1200)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "ticrate", scope: !2480, file: !154, line: 709, baseType: !48, size: 16, offset: 1216)
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "maxlogicstep", scope: !2480, file: !154, line: 709, baseType: !48, size: 16, offset: 1232)
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "physubstep", scope: !2480, file: !154, line: 709, baseType: !48, size: 16, offset: 1248)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "maxphystep", scope: !2480, file: !154, line: 709, baseType: !48, size: 16, offset: 1264)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "obstacleSimulation", scope: !2480, file: !154, line: 710, baseType: !48, size: 16, offset: 1280)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "raster_storage", scope: !2480, file: !154, line: 711, baseType: !48, size: 16, offset: 1296)
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "levelHeight", scope: !2480, file: !154, line: 712, baseType: !210, size: 32, offset: 1312)
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "deactivationtime", scope: !2480, file: !154, line: 713, baseType: !210, size: 32, offset: 1344)
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "lineardeactthreshold", scope: !2480, file: !154, line: 713, baseType: !210, size: 32, offset: 1376)
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "angulardeactthreshold", scope: !2480, file: !154, line: 713, baseType: !210, size: 32, offset: 1408)
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2480, file: !154, line: 713, baseType: !210, size: 32, offset: 1440)
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "unit", scope: !153, file: !154, line: 1278, baseType: !2546, size: 64, offset: 36800)
!2546 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnitSettings", file: !154, line: 1197, size: 64, elements: !2547)
!2547 = !{!2548, !2549, !2550, !2551}
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "scale_length", scope: !2546, file: !154, line: 1199, baseType: !210, size: 32)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "system", scope: !2546, file: !154, line: 1200, baseType: !14, size: 8, offset: 32)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "system_rotation", scope: !2546, file: !154, line: 1201, baseType: !14, size: 8, offset: 40)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2546, file: !154, line: 1202, baseType: !48, size: 16, offset: 48)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !153, file: !154, line: 1281, baseType: !378, size: 64, offset: 36864)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "physics_settings", scope: !153, file: !154, line: 1284, baseType: !2554, size: 192, offset: 36928)
!2554 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PhysicsSettings", file: !154, line: 1208, size: 192, elements: !2555)
!2555 = !{!2556, !2557, !2558, !2559}
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !2554, file: !154, line: 1209, baseType: !209, size: 96)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2554, file: !154, line: 1210, baseType: !22, size: 32, offset: 96)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "quick_cache_step", scope: !2554, file: !154, line: 1210, baseType: !22, size: 32, offset: 128)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !2554, file: !154, line: 1210, baseType: !22, size: 32, offset: 160)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !153, file: !154, line: 1287, baseType: !1295, size: 64, offset: 37120)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask", scope: !153, file: !154, line: 1289, baseType: !1033, size: 64, offset: 37184)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask_modal", scope: !153, file: !154, line: 1290, baseType: !1033, size: 64, offset: 37248)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !153, file: !154, line: 1293, baseType: !2227, size: 1280, offset: 37312)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !153, file: !154, line: 1294, baseType: !2239, size: 512, offset: 38592)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "sequencer_colorspace_settings", scope: !153, file: !154, line: 1295, baseType: !955, size: 512, offset: 39104)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_world", scope: !153, file: !154, line: 1298, baseType: !2567, size: 64, offset: 39616)
!2567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2568, size: 64)
!2568 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyWorld", file: !154, line: 1298, flags: DIFlagFwdDecl)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "newscene", scope: !108, file: !109, line: 58, baseType: !152, size: 64, offset: 1536)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "redraws_flag", scope: !108, file: !109, line: 60, baseType: !22, size: 32, offset: 1600)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !108, file: !109, line: 61, baseType: !22, size: 32, offset: 1632)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !108, file: !109, line: 63, baseType: !48, size: 16, offset: 1664)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !108, file: !109, line: 64, baseType: !48, size: 16, offset: 1680)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "winid", scope: !108, file: !109, line: 65, baseType: !48, size: 16, offset: 1696)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw", scope: !108, file: !109, line: 66, baseType: !48, size: 16, offset: 1712)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "do_refresh", scope: !108, file: !109, line: 67, baseType: !48, size: 16, offset: 1728)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_gesture", scope: !108, file: !109, line: 68, baseType: !48, size: 16, offset: 1744)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_paintcursor", scope: !108, file: !109, line: 69, baseType: !48, size: 16, offset: 1760)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_drag", scope: !108, file: !109, line: 70, baseType: !48, size: 16, offset: 1776)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "swap", scope: !108, file: !109, line: 71, baseType: !48, size: 16, offset: 1792)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "mainwin", scope: !108, file: !109, line: 73, baseType: !48, size: 16, offset: 1808)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "subwinactive", scope: !108, file: !109, line: 74, baseType: !48, size: 16, offset: 1824)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !108, file: !109, line: 76, baseType: !48, size: 16, offset: 1840)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "animtimer", scope: !108, file: !109, line: 78, baseType: !94, size: 64, offset: 1856)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !108, file: !109, line: 79, baseType: !56, size: 64, offset: 1920)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "newscreen", scope: !101, file: !28, line: 175, baseType: !107, size: 64, offset: 256)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "screenname", scope: !101, file: !28, line: 176, baseType: !33, size: 512, offset: 320)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "posx", scope: !101, file: !28, line: 178, baseType: !48, size: 16, offset: 832)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "posy", scope: !101, file: !28, line: 178, baseType: !48, size: 16, offset: 848)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "sizex", scope: !101, file: !28, line: 178, baseType: !48, size: 16, offset: 864)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "sizey", scope: !101, file: !28, line: 178, baseType: !48, size: 16, offset: 880)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "windowstate", scope: !101, file: !28, line: 179, baseType: !48, size: 16, offset: 896)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "monitor", scope: !101, file: !28, line: 180, baseType: !48, size: 16, offset: 912)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !101, file: !28, line: 181, baseType: !48, size: 16, offset: 928)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !101, file: !28, line: 182, baseType: !48, size: 16, offset: 944)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "lastcursor", scope: !101, file: !28, line: 183, baseType: !48, size: 16, offset: 960)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "modalcursor", scope: !101, file: !28, line: 184, baseType: !48, size: 16, offset: 976)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "grabcursor", scope: !101, file: !28, line: 185, baseType: !48, size: 16, offset: 992)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "addmousemove", scope: !101, file: !28, line: 186, baseType: !48, size: 16, offset: 1008)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "winid", scope: !101, file: !28, line: 188, baseType: !22, size: 32, offset: 1024)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "lock_pie_event", scope: !101, file: !28, line: 190, baseType: !48, size: 16, offset: 1056)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "last_pie_event", scope: !101, file: !28, line: 191, baseType: !48, size: 16, offset: 1072)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "eventstate", scope: !101, file: !28, line: 194, baseType: !2604, size: 64, offset: 1088)
!2604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2605, size: 64)
!2605 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmEvent", file: !8, line: 421, size: 960, elements: !2606)
!2606 = !{!2607, !2608, !2609, !2610, !2611, !2612, !2613, !2614, !2615, !2616, !2617, !2618, !2619, !2620, !2621, !2622, !2623, !2624, !2625, !2626, !2627, !2628, !2629, !2630, !2631, !2639, !2640, !2641, !2642}
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2605, file: !8, line: 422, baseType: !2604, size: 64)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2605, file: !8, line: 422, baseType: !2604, size: 64, offset: 64)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2605, file: !8, line: 424, baseType: !48, size: 16, offset: 128)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2605, file: !8, line: 425, baseType: !48, size: 16, offset: 144)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !2605, file: !8, line: 426, baseType: !22, size: 32, offset: 160)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !2605, file: !8, line: 426, baseType: !22, size: 32, offset: 192)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "mval", scope: !2605, file: !8, line: 427, baseType: !1305, size: 64, offset: 224)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "utf8_buf", scope: !2605, file: !8, line: 428, baseType: !2225, size: 48, offset: 288)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "ascii", scope: !2605, file: !8, line: 431, baseType: !14, size: 8, offset: 336)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2605, file: !8, line: 432, baseType: !14, size: 8, offset: 344)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "prevtype", scope: !2605, file: !8, line: 435, baseType: !48, size: 16, offset: 352)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "prevval", scope: !2605, file: !8, line: 436, baseType: !48, size: 16, offset: 368)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "prevx", scope: !2605, file: !8, line: 437, baseType: !22, size: 32, offset: 384)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "prevy", scope: !2605, file: !8, line: 437, baseType: !22, size: 32, offset: 416)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "prevclicktime", scope: !2605, file: !8, line: 438, baseType: !1713, size: 64, offset: 448)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "prevclickx", scope: !2605, file: !8, line: 439, baseType: !22, size: 32, offset: 512)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "prevclicky", scope: !2605, file: !8, line: 439, baseType: !22, size: 32, offset: 544)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "shift", scope: !2605, file: !8, line: 442, baseType: !48, size: 16, offset: 576)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "ctrl", scope: !2605, file: !8, line: 442, baseType: !48, size: 16, offset: 592)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !2605, file: !8, line: 442, baseType: !48, size: 16, offset: 608)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "oskey", scope: !2605, file: !8, line: 442, baseType: !48, size: 16, offset: 624)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "keymodifier", scope: !2605, file: !8, line: 443, baseType: !48, size: 16, offset: 640)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "check_click", scope: !2605, file: !8, line: 446, baseType: !48, size: 16, offset: 656)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "keymap_idname", scope: !2605, file: !8, line: 449, baseType: !12, size: 64, offset: 704)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "tablet_data", scope: !2605, file: !8, line: 452, baseType: !2632, size: 64, offset: 768)
!2632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2633, size: 64)
!2633 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmTabletData", file: !8, line: 463, size: 128, elements: !2634)
!2634 = !{!2635, !2636, !2637, !2638}
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "Active", scope: !2633, file: !8, line: 464, baseType: !22, size: 32)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "Pressure", scope: !2633, file: !8, line: 465, baseType: !210, size: 32, offset: 32)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "Xtilt", scope: !2633, file: !8, line: 466, baseType: !210, size: 32, offset: 64)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "Ytilt", scope: !2633, file: !8, line: 467, baseType: !210, size: 32, offset: 96)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "custom", scope: !2605, file: !8, line: 455, baseType: !48, size: 16, offset: 832)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "customdatafree", scope: !2605, file: !8, line: 456, baseType: !48, size: 16, offset: 848)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2605, file: !8, line: 457, baseType: !22, size: 32, offset: 864)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "customdata", scope: !2605, file: !8, line: 458, baseType: !56, size: 64, offset: 896)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "curswin", scope: !101, file: !28, line: 196, baseType: !2644, size: 64, offset: 1152)
!2644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2645, size: 64)
!2645 = !DICompositeType(tag: DW_TAG_structure_type, name: "wmSubWindow", file: !28, line: 55, flags: DIFlagFwdDecl)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "tweak", scope: !101, file: !28, line: 198, baseType: !2647, size: 64, offset: 1216)
!2647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2648, size: 64)
!2648 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmGesture", file: !8, line: 398, size: 448, elements: !2649)
!2649 = !{!2650, !2651, !2652, !2653, !2654, !2655, !2656, !2657, !2658, !2659}
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2648, file: !8, line: 399, baseType: !2647, size: 64)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2648, file: !8, line: 399, baseType: !2647, size: 64, offset: 64)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "event_type", scope: !2648, file: !8, line: 400, baseType: !22, size: 32, offset: 128)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2648, file: !8, line: 401, baseType: !22, size: 32, offset: 160)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2648, file: !8, line: 402, baseType: !22, size: 32, offset: 192)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "swinid", scope: !2648, file: !8, line: 403, baseType: !22, size: 32, offset: 224)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !2648, file: !8, line: 404, baseType: !22, size: 32, offset: 256)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2648, file: !8, line: 405, baseType: !22, size: 32, offset: 288)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "customdata", scope: !2648, file: !8, line: 407, baseType: !56, size: 64, offset: 320)
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "userdata", scope: !2648, file: !8, line: 414, baseType: !56, size: 64, offset: 384)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "drawmethod", scope: !101, file: !28, line: 200, baseType: !22, size: 32, offset: 1280)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "drawfail", scope: !101, file: !28, line: 200, baseType: !22, size: 32, offset: 1312)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "drawdata", scope: !101, file: !28, line: 201, baseType: !56, size: 64, offset: 1344)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !101, file: !28, line: 203, baseType: !58, size: 128, offset: 1408)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "handlers", scope: !101, file: !28, line: 204, baseType: !58, size: 128, offset: 1536)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "modalhandlers", scope: !101, file: !28, line: 205, baseType: !58, size: 128, offset: 1664)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "subwindows", scope: !101, file: !28, line: 207, baseType: !58, size: 128, offset: 1792)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "gesture", scope: !101, file: !28, line: 208, baseType: !58, size: 128, offset: 1920)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "timestep", scope: !95, file: !8, line: 495, baseType: !1713, size: 64, offset: 192)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "event_type", scope: !95, file: !8, line: 496, baseType: !22, size: 32, offset: 256)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "customdata", scope: !95, file: !8, line: 497, baseType: !56, size: 64, offset: 320)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !95, file: !8, line: 499, baseType: !1713, size: 64, offset: 384)
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !95, file: !8, line: 500, baseType: !1713, size: 64, offset: 448)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "ltime", scope: !95, file: !8, line: 502, baseType: !1713, size: 64, offset: 512)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "ntime", scope: !95, file: !8, line: 503, baseType: !1713, size: 64, offset: 576)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !95, file: !8, line: 504, baseType: !1713, size: 64, offset: 640)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "sleep", scope: !95, file: !8, line: 505, baseType: !22, size: 32, offset: 704)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "macro", scope: !27, file: !28, line: 343, baseType: !58, size: 128, offset: 1024)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "opm", scope: !27, file: !28, line: 344, baseType: !26, size: 64, offset: 1152)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "layout", scope: !27, file: !28, line: 345, baseType: !2680, size: 64, offset: 1216)
!2680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2681, size: 64)
!2681 = !DICompositeType(tag: DW_TAG_structure_type, name: "uiLayout", file: !28, line: 61, flags: DIFlagFwdDecl)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !27, file: !28, line: 346, baseType: !48, size: 16, offset: 1280)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !27, file: !28, line: 346, baseType: !214, size: 48, offset: 1296)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !9, file: !8, line: 524, baseType: !2685, size: 64, offset: 320)
!2685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2686, size: 64)
!2686 = !DISubroutineType(types: !2687)
!2687 = !{!259, !23, !26}
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "invoke", scope: !9, file: !8, line: 530, baseType: !2689, size: 64, offset: 384)
!2689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2690, size: 64)
!2690 = !DISubroutineType(types: !2691)
!2691 = !{!22, !23, !26, !2692}
!2692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2693, size: 64)
!2693 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2605)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "cancel", scope: !9, file: !8, line: 531, baseType: !2695, size: 64, offset: 448)
!2695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2696, size: 64)
!2696 = !DISubroutineType(types: !2697)
!2697 = !{null, !23, !26}
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "modal", scope: !9, file: !8, line: 532, baseType: !2689, size: 64, offset: 512)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !9, file: !8, line: 536, baseType: !2700, size: 64, offset: 576)
!2700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2701, size: 64)
!2701 = !DISubroutineType(types: !2702)
!2702 = !{!22, !23}
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "ui", scope: !9, file: !8, line: 539, baseType: !2695, size: 64, offset: 640)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "srna", scope: !9, file: !8, line: 542, baseType: !81, size: 64, offset: 704)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "last_properties", scope: !9, file: !8, line: 545, baseType: !43, size: 64, offset: 768)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !9, file: !8, line: 549, baseType: !2707, size: 64, offset: 832)
!2707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2708, size: 64)
!2708 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropertyRNA", file: !25, line: 333, baseType: !2709)
!2709 = !DICompositeType(tag: DW_TAG_structure_type, name: "PropertyRNA", file: !25, line: 39, flags: DIFlagFwdDecl)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "macro", scope: !9, file: !8, line: 552, baseType: !58, size: 128, offset: 896)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "modalkeymap", scope: !9, file: !8, line: 555, baseType: !2712, size: 64, offset: 1024)
!2712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2713, size: 64)
!2713 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmKeyMap", file: !28, line: 281, size: 1088, elements: !2714)
!2714 = !{!2715, !2716, !2717, !2718, !2719, !2720, !2721, !2722, !2723, !2724, !2725}
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2713, file: !28, line: 282, baseType: !2712, size: 64)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2713, file: !28, line: 282, baseType: !2712, size: 64, offset: 64)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "items", scope: !2713, file: !28, line: 284, baseType: !58, size: 128, offset: 128)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "diff_items", scope: !2713, file: !28, line: 285, baseType: !58, size: 128, offset: 256)
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !2713, file: !28, line: 287, baseType: !33, size: 512, offset: 384)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "spaceid", scope: !2713, file: !28, line: 288, baseType: !48, size: 16, offset: 896)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "regionid", scope: !2713, file: !28, line: 289, baseType: !48, size: 16, offset: 912)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2713, file: !28, line: 291, baseType: !48, size: 16, offset: 928)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "kmi_id", scope: !2713, file: !28, line: 292, baseType: !48, size: 16, offset: 944)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !2713, file: !28, line: 295, baseType: !2700, size: 64, offset: 960)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "modal_items", scope: !2713, file: !28, line: 296, baseType: !56, size: 64, offset: 1024)
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "pyop_data", scope: !9, file: !8, line: 559, baseType: !56, size: 64, offset: 1088)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "pyop_poll", scope: !9, file: !8, line: 560, baseType: !2728, size: 64, offset: 1152)
!2728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2729, size: 64)
!2729 = !DISubroutineType(types: !2730)
!2730 = !{!22, !23, !69}
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "ext", scope: !9, file: !8, line: 563, baseType: !2732, size: 256, offset: 1216)
!2732 = !DIDerivedType(tag: DW_TAG_typedef, name: "ExtensionRNA", file: !25, line: 436, baseType: !2733)
!2733 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ExtensionRNA", file: !25, line: 430, size: 256, elements: !2734)
!2734 = !{!2735, !2736, !2739, !2755}
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2733, file: !25, line: 431, baseType: !56, size: 64)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "srna", scope: !2733, file: !25, line: 432, baseType: !2737, size: 64, offset: 64)
!2737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2738, size: 64)
!2738 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructRNA", file: !25, line: 417, baseType: !82)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "call", scope: !2733, file: !25, line: 433, baseType: !2740, size: 64, offset: 128)
!2740 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructCallbackFunc", file: !25, line: 408, baseType: !2741)
!2741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2742, size: 64)
!2742 = !DISubroutineType(types: !2743)
!2743 = !{!22, !23, !73, !2744, !2746}
!2744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2745, size: 64)
!2745 = !DICompositeType(tag: DW_TAG_structure_type, name: "FunctionRNA", file: !25, line: 38, flags: DIFlagFwdDecl)
!2746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2747, size: 64)
!2747 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParameterList", file: !25, line: 348, baseType: !2748)
!2748 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParameterList", file: !25, line: 337, size: 256, elements: !2749)
!2749 = !{!2750, !2751, !2752, !2753, !2754}
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2748, file: !25, line: 339, baseType: !56, size: 64)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !2748, file: !25, line: 342, baseType: !2744, size: 64, offset: 64)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_size", scope: !2748, file: !25, line: 345, baseType: !22, size: 32, offset: 128)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "arg_count", scope: !2748, file: !25, line: 347, baseType: !22, size: 32, offset: 160)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "ret_count", scope: !2748, file: !25, line: 347, baseType: !22, size: 32, offset: 192)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !2733, file: !25, line: 434, baseType: !2756, size: 64, offset: 192)
!2756 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructFreeFunc", file: !25, line: 409, baseType: !1180)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !9, file: !8, line: 566, baseType: !48, size: 16, offset: 1472)
!2758 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2759, retainedTypes: !3186, globals: !3418, splitDebugInlining: false, nameTableKind: None)
!2759 = !{!611, !619, !808, !877, !982, !2760, !2770, !2795, !2805, !2809, !2842, !2855, !2898, !2909, !2917, !2923, !2928, !2933, !2946, !2955, !2963, !2971, !3172, !3181}
!2760 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ObjectMode", file: !164, line: 666, baseType: !231, size: 32, elements: !2761)
!2761 = !{!2762, !2763, !2764, !2765, !2766, !2767, !2768, !2769}
!2762 = !DIEnumerator(name: "OB_MODE_OBJECT", value: 0, isUnsigned: true)
!2763 = !DIEnumerator(name: "OB_MODE_EDIT", value: 1, isUnsigned: true)
!2764 = !DIEnumerator(name: "OB_MODE_SCULPT", value: 2, isUnsigned: true)
!2765 = !DIEnumerator(name: "OB_MODE_VERTEX_PAINT", value: 4, isUnsigned: true)
!2766 = !DIEnumerator(name: "OB_MODE_WEIGHT_PAINT", value: 8, isUnsigned: true)
!2767 = !DIEnumerator(name: "OB_MODE_TEXTURE_PAINT", value: 16, isUnsigned: true)
!2768 = !DIEnumerator(name: "OB_MODE_PARTICLE_EDIT", value: 32, isUnsigned: true)
!2769 = !DIEnumerator(name: "OB_MODE_POSE", value: 64, isUnsigned: true)
!2770 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eSpace_Type", file: !2771, line: 1163, baseType: !231, size: 32, elements: !2772)
!2771 = !DIFile(filename: "blender/source/blender/makesdna/DNA_space_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2772 = !{!2773, !2774, !2775, !2776, !2777, !2778, !2779, !2780, !2781, !2782, !2783, !2784, !2785, !2786, !2787, !2788, !2789, !2790, !2791, !2792, !2793, !2794}
!2773 = !DIEnumerator(name: "SPACE_EMPTY", value: 0, isUnsigned: true)
!2774 = !DIEnumerator(name: "SPACE_VIEW3D", value: 1, isUnsigned: true)
!2775 = !DIEnumerator(name: "SPACE_IPO", value: 2, isUnsigned: true)
!2776 = !DIEnumerator(name: "SPACE_OUTLINER", value: 3, isUnsigned: true)
!2777 = !DIEnumerator(name: "SPACE_BUTS", value: 4, isUnsigned: true)
!2778 = !DIEnumerator(name: "SPACE_FILE", value: 5, isUnsigned: true)
!2779 = !DIEnumerator(name: "SPACE_IMAGE", value: 6, isUnsigned: true)
!2780 = !DIEnumerator(name: "SPACE_INFO", value: 7, isUnsigned: true)
!2781 = !DIEnumerator(name: "SPACE_SEQ", value: 8, isUnsigned: true)
!2782 = !DIEnumerator(name: "SPACE_TEXT", value: 9, isUnsigned: true)
!2783 = !DIEnumerator(name: "SPACE_IMASEL", value: 10, isUnsigned: true)
!2784 = !DIEnumerator(name: "SPACE_SOUND", value: 11, isUnsigned: true)
!2785 = !DIEnumerator(name: "SPACE_ACTION", value: 12, isUnsigned: true)
!2786 = !DIEnumerator(name: "SPACE_NLA", value: 13, isUnsigned: true)
!2787 = !DIEnumerator(name: "SPACE_SCRIPT", value: 14, isUnsigned: true)
!2788 = !DIEnumerator(name: "SPACE_TIME", value: 15, isUnsigned: true)
!2789 = !DIEnumerator(name: "SPACE_NODE", value: 16, isUnsigned: true)
!2790 = !DIEnumerator(name: "SPACE_LOGIC", value: 17, isUnsigned: true)
!2791 = !DIEnumerator(name: "SPACE_CONSOLE", value: 18, isUnsigned: true)
!2792 = !DIEnumerator(name: "SPACE_USERPREF", value: 19, isUnsigned: true)
!2793 = !DIEnumerator(name: "SPACE_CLIP", value: 20, isUnsigned: true)
!2794 = !DIEnumerator(name: "SPACEICONMAX", value: 20, isUnsigned: true)
!2795 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !109, line: 361, baseType: !231, size: 32, elements: !2796)
!2796 = !{!2797, !2798, !2799, !2800, !2801, !2802, !2803, !2804}
!2797 = !DIEnumerator(name: "RGN_TYPE_WINDOW", value: 0, isUnsigned: true)
!2798 = !DIEnumerator(name: "RGN_TYPE_HEADER", value: 1, isUnsigned: true)
!2799 = !DIEnumerator(name: "RGN_TYPE_CHANNELS", value: 2, isUnsigned: true)
!2800 = !DIEnumerator(name: "RGN_TYPE_TEMPORARY", value: 3, isUnsigned: true)
!2801 = !DIEnumerator(name: "RGN_TYPE_UI", value: 4, isUnsigned: true)
!2802 = !DIEnumerator(name: "RGN_TYPE_TOOLS", value: 5, isUnsigned: true)
!2803 = !DIEnumerator(name: "RGN_TYPE_TOOL_PROPS", value: 6, isUnsigned: true)
!2804 = !DIEnumerator(name: "RGN_TYPE_PREVIEW", value: 7, isUnsigned: true)
!2805 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !206, line: 341, baseType: !231, size: 32, elements: !2806)
!2806 = !{!2807, !2808}
!2807 = !DIEnumerator(name: "ME_SMOOTH", value: 1, isUnsigned: true)
!2808 = !DIEnumerator(name: "ME_FACE_SEL", value: 2, isUnsigned: true)
!2809 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "PropertyFlag", file: !25, line: 151, baseType: !231, size: 32, elements: !2810)
!2810 = !{!2811, !2812, !2813, !2814, !2815, !2816, !2817, !2818, !2819, !2820, !2821, !2822, !2823, !2824, !2825, !2826, !2827, !2828, !2829, !2830, !2831, !2832, !2833, !2834, !2835, !2836, !2837, !2838, !2839, !2840, !2841}
!2811 = !DIEnumerator(name: "PROP_EDITABLE", value: 1, isUnsigned: true)
!2812 = !DIEnumerator(name: "PROP_LIB_EXCEPTION", value: 65536, isUnsigned: true)
!2813 = !DIEnumerator(name: "PROP_ANIMATABLE", value: 2, isUnsigned: true)
!2814 = !DIEnumerator(name: "PROP_ICONS_CONSECUTIVE", value: 4096, isUnsigned: true)
!2815 = !DIEnumerator(name: "PROP_HIDDEN", value: 524288, isUnsigned: true)
!2816 = !DIEnumerator(name: "PROP_SKIP_SAVE", value: 268435456, isUnsigned: true)
!2817 = !DIEnumerator(name: "PROP_REQUIRED", value: 4, isUnsigned: true)
!2818 = !DIEnumerator(name: "PROP_OUTPUT", value: 8, isUnsigned: true)
!2819 = !DIEnumerator(name: "PROP_RNAPTR", value: 2048, isUnsigned: true)
!2820 = !DIEnumerator(name: "PROP_PYFUNC_OPTIONAL", value: 1073741824, isUnsigned: true)
!2821 = !DIEnumerator(name: "PROP_REGISTER", value: 16, isUnsigned: true)
!2822 = !DIEnumerator(name: "PROP_REGISTER_OPTIONAL", value: 48, isUnsigned: true)
!2823 = !DIEnumerator(name: "PROP_PROPORTIONAL", value: 67108864, isUnsigned: true)
!2824 = !DIEnumerator(name: "PROP_ID_REFCOUNT", value: 64, isUnsigned: true)
!2825 = !DIEnumerator(name: "PROP_ID_SELF_CHECK", value: 1048576, isUnsigned: true)
!2826 = !DIEnumerator(name: "PROP_NEVER_NULL", value: 262144, isUnsigned: true)
!2827 = !DIEnumerator(name: "PROP_NEVER_UNLINK", value: 33554432, isUnsigned: true)
!2828 = !DIEnumerator(name: "PROP_ENUM_FLAG", value: 2097152, isUnsigned: true)
!2829 = !DIEnumerator(name: "PROP_CONTEXT_UPDATE", value: 4194304, isUnsigned: true)
!2830 = !DIEnumerator(name: "PROP_CONTEXT_PROPERTY_UPDATE", value: 138412032, isUnsigned: true)
!2831 = !DIEnumerator(name: "PROP_THICK_WRAP", value: 8388608, isUnsigned: true)
!2832 = !DIEnumerator(name: "PROP_BUILTIN", value: 128, isUnsigned: true)
!2833 = !DIEnumerator(name: "PROP_EXPORT", value: 256, isUnsigned: true)
!2834 = !DIEnumerator(name: "PROP_RUNTIME", value: 512, isUnsigned: true)
!2835 = !DIEnumerator(name: "PROP_IDPROPERTY", value: 1024, isUnsigned: true)
!2836 = !DIEnumerator(name: "PROP_RAW_ACCESS", value: 8192, isUnsigned: true)
!2837 = !DIEnumerator(name: "PROP_RAW_ARRAY", value: 16384, isUnsigned: true)
!2838 = !DIEnumerator(name: "PROP_FREE_POINTERS", value: 32768, isUnsigned: true)
!2839 = !DIEnumerator(name: "PROP_DYNAMIC", value: 131072, isUnsigned: true)
!2840 = !DIEnumerator(name: "PROP_ENUM_NO_CONTEXT", value: 16777216, isUnsigned: true)
!2841 = !DIEnumerator(name: "PROP_ENUM_NO_TRANSLATE", value: 536870912, isUnsigned: true)
!2842 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2843, line: 43, baseType: !231, size: 32, elements: !2844)
!2843 = !DIFile(filename: "blender/source/blender/windowmanager/wm_cursors.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2844 = !{!2845, !2846, !2847, !2848, !2849, !2850, !2851, !2852, !2853, !2854}
!2845 = !DIEnumerator(name: "CURSOR_FACESEL", value: 1000, isUnsigned: true)
!2846 = !DIEnumerator(name: "CURSOR_WAIT", value: 1001, isUnsigned: true)
!2847 = !DIEnumerator(name: "CURSOR_EDIT", value: 1002, isUnsigned: true)
!2848 = !DIEnumerator(name: "CURSOR_X_MOVE", value: 1003, isUnsigned: true)
!2849 = !DIEnumerator(name: "CURSOR_Y_MOVE", value: 1004, isUnsigned: true)
!2850 = !DIEnumerator(name: "CURSOR_HELP", value: 1005, isUnsigned: true)
!2851 = !DIEnumerator(name: "CURSOR_STD", value: 1006, isUnsigned: true)
!2852 = !DIEnumerator(name: "CURSOR_NONE", value: 1007, isUnsigned: true)
!2853 = !DIEnumerator(name: "CURSOR_PENCIL", value: 1008, isUnsigned: true)
!2854 = !DIEnumerator(name: "CURSOR_COPY", value: 1009, isUnsigned: true)
!2855 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !521, line: 76, baseType: !231, size: 32, elements: !2856)
!2856 = !{!2857, !2858, !2859, !2860, !2861, !2862, !2863, !2864, !2865, !2866, !2867, !2868, !2869, !2870, !2871, !2872, !2873, !2874, !2875, !2876, !2877, !2878, !2879, !2880, !2881, !2882, !2883, !2884, !2885, !2886, !2887, !2888, !2889, !2890, !2891, !2892, !2893, !2894, !2895, !2896, !2897}
!2857 = !DIEnumerator(name: "CD_MVERT", value: 0, isUnsigned: true)
!2858 = !DIEnumerator(name: "CD_MSTICKY", value: 1, isUnsigned: true)
!2859 = !DIEnumerator(name: "CD_MDEFORMVERT", value: 2, isUnsigned: true)
!2860 = !DIEnumerator(name: "CD_MEDGE", value: 3, isUnsigned: true)
!2861 = !DIEnumerator(name: "CD_MFACE", value: 4, isUnsigned: true)
!2862 = !DIEnumerator(name: "CD_MTFACE", value: 5, isUnsigned: true)
!2863 = !DIEnumerator(name: "CD_MCOL", value: 6, isUnsigned: true)
!2864 = !DIEnumerator(name: "CD_ORIGINDEX", value: 7, isUnsigned: true)
!2865 = !DIEnumerator(name: "CD_NORMAL", value: 8, isUnsigned: true)
!2866 = !DIEnumerator(name: "CD_PROP_FLT", value: 10, isUnsigned: true)
!2867 = !DIEnumerator(name: "CD_PROP_INT", value: 11, isUnsigned: true)
!2868 = !DIEnumerator(name: "CD_PROP_STR", value: 12, isUnsigned: true)
!2869 = !DIEnumerator(name: "CD_ORIGSPACE", value: 13, isUnsigned: true)
!2870 = !DIEnumerator(name: "CD_ORCO", value: 14, isUnsigned: true)
!2871 = !DIEnumerator(name: "CD_MTEXPOLY", value: 15, isUnsigned: true)
!2872 = !DIEnumerator(name: "CD_MLOOPUV", value: 16, isUnsigned: true)
!2873 = !DIEnumerator(name: "CD_MLOOPCOL", value: 17, isUnsigned: true)
!2874 = !DIEnumerator(name: "CD_TANGENT", value: 18, isUnsigned: true)
!2875 = !DIEnumerator(name: "CD_MDISPS", value: 19, isUnsigned: true)
!2876 = !DIEnumerator(name: "CD_PREVIEW_MCOL", value: 20, isUnsigned: true)
!2877 = !DIEnumerator(name: "CD_ID_MCOL", value: 21, isUnsigned: true)
!2878 = !DIEnumerator(name: "CD_TEXTURE_MCOL", value: 22, isUnsigned: true)
!2879 = !DIEnumerator(name: "CD_CLOTH_ORCO", value: 23, isUnsigned: true)
!2880 = !DIEnumerator(name: "CD_RECAST", value: 24, isUnsigned: true)
!2881 = !DIEnumerator(name: "CD_MPOLY", value: 25, isUnsigned: true)
!2882 = !DIEnumerator(name: "CD_MLOOP", value: 26, isUnsigned: true)
!2883 = !DIEnumerator(name: "CD_SHAPE_KEYINDEX", value: 27, isUnsigned: true)
!2884 = !DIEnumerator(name: "CD_SHAPEKEY", value: 28, isUnsigned: true)
!2885 = !DIEnumerator(name: "CD_BWEIGHT", value: 29, isUnsigned: true)
!2886 = !DIEnumerator(name: "CD_CREASE", value: 30, isUnsigned: true)
!2887 = !DIEnumerator(name: "CD_ORIGSPACE_MLOOP", value: 31, isUnsigned: true)
!2888 = !DIEnumerator(name: "CD_PREVIEW_MLOOPCOL", value: 32, isUnsigned: true)
!2889 = !DIEnumerator(name: "CD_BM_ELEM_PYPTR", value: 33, isUnsigned: true)
!2890 = !DIEnumerator(name: "CD_PAINT_MASK", value: 34, isUnsigned: true)
!2891 = !DIEnumerator(name: "CD_GRID_PAINT_MASK", value: 35, isUnsigned: true)
!2892 = !DIEnumerator(name: "CD_MVERT_SKIN", value: 36, isUnsigned: true)
!2893 = !DIEnumerator(name: "CD_FREESTYLE_EDGE", value: 37, isUnsigned: true)
!2894 = !DIEnumerator(name: "CD_FREESTYLE_FACE", value: 38, isUnsigned: true)
!2895 = !DIEnumerator(name: "CD_MLOOPTANGENT", value: 39, isUnsigned: true)
!2896 = !DIEnumerator(name: "CD_TESSLOOPNORMAL", value: 40, isUnsigned: true)
!2897 = !DIEnumerator(name: "CD_NUMTYPES", value: 41, isUnsigned: true)
!2898 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ReportType", file: !28, line: 67, baseType: !231, size: 32, elements: !2899)
!2899 = !{!2900, !2901, !2902, !2903, !2904, !2905, !2906, !2907, !2908}
!2900 = !DIEnumerator(name: "RPT_DEBUG", value: 1, isUnsigned: true)
!2901 = !DIEnumerator(name: "RPT_INFO", value: 2, isUnsigned: true)
!2902 = !DIEnumerator(name: "RPT_OPERATOR", value: 4, isUnsigned: true)
!2903 = !DIEnumerator(name: "RPT_PROPERTY", value: 8, isUnsigned: true)
!2904 = !DIEnumerator(name: "RPT_WARNING", value: 16, isUnsigned: true)
!2905 = !DIEnumerator(name: "RPT_ERROR", value: 32, isUnsigned: true)
!2906 = !DIEnumerator(name: "RPT_ERROR_INVALID_INPUT", value: 64, isUnsigned: true)
!2907 = !DIEnumerator(name: "RPT_ERROR_INVALID_CONTEXT", value: 128, isUnsigned: true)
!2908 = !DIEnumerator(name: "RPT_ERROR_OUT_OF_MEMORY", value: 256, isUnsigned: true)
!2909 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !28, line: 351, baseType: !231, size: 32, elements: !2910)
!2910 = !{!2911, !2912, !2913, !2914, !2915, !2916}
!2911 = !DIEnumerator(name: "OPERATOR_RUNNING_MODAL", value: 1, isUnsigned: true)
!2912 = !DIEnumerator(name: "OPERATOR_CANCELLED", value: 2, isUnsigned: true)
!2913 = !DIEnumerator(name: "OPERATOR_FINISHED", value: 4, isUnsigned: true)
!2914 = !DIEnumerator(name: "OPERATOR_PASS_THROUGH", value: 8, isUnsigned: true)
!2915 = !DIEnumerator(name: "OPERATOR_HANDLED", value: 16, isUnsigned: true)
!2916 = !DIEnumerator(name: "OPERATOR_INTERFACE", value: 32, isUnsigned: true)
!2917 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !164, line: 519, baseType: !231, size: 32, elements: !2918)
!2918 = !{!2919, !2920, !2921, !2922}
!2919 = !DIEnumerator(name: "OB_RECALC_OB", value: 1, isUnsigned: true)
!2920 = !DIEnumerator(name: "OB_RECALC_DATA", value: 2, isUnsigned: true)
!2921 = !DIEnumerator(name: "OB_RECALC_TIME", value: 4, isUnsigned: true)
!2922 = !DIEnumerator(name: "OB_RECALC_ALL", value: 7, isUnsigned: true)
!2923 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !154, line: 937, baseType: !231, size: 32, elements: !2924)
!2924 = !{!2925, !2926, !2927}
!2925 = !DIEnumerator(name: "VP_NORMALS", value: 8, isUnsigned: true)
!2926 = !DIEnumerator(name: "VP_SPRAY", value: 16, isUnsigned: true)
!2927 = !DIEnumerator(name: "VP_ONLYVGROUP", value: 128, isUnsigned: true)
!2928 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !154, line: 1669, baseType: !231, size: 32, elements: !2929)
!2929 = !{!2930, !2931, !2932}
!2930 = !DIEnumerator(name: "PAINT_SHOW_BRUSH", value: 1, isUnsigned: true)
!2931 = !DIEnumerator(name: "PAINT_FAST_NAVIGATE", value: 2, isUnsigned: true)
!2932 = !DIEnumerator(name: "PAINT_SHOW_BRUSH_ON_SURFACE", value: 4, isUnsigned: true)
!2933 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !164, line: 339, baseType: !231, size: 32, elements: !2934)
!2934 = !{!2935, !2936, !2937, !2938, !2939, !2940, !2941, !2942, !2943, !2944, !2945}
!2935 = !DIEnumerator(name: "OB_EMPTY", value: 0, isUnsigned: true)
!2936 = !DIEnumerator(name: "OB_MESH", value: 1, isUnsigned: true)
!2937 = !DIEnumerator(name: "OB_CURVE", value: 2, isUnsigned: true)
!2938 = !DIEnumerator(name: "OB_SURF", value: 3, isUnsigned: true)
!2939 = !DIEnumerator(name: "OB_FONT", value: 4, isUnsigned: true)
!2940 = !DIEnumerator(name: "OB_MBALL", value: 5, isUnsigned: true)
!2941 = !DIEnumerator(name: "OB_LAMP", value: 10, isUnsigned: true)
!2942 = !DIEnumerator(name: "OB_CAMERA", value: 11, isUnsigned: true)
!2943 = !DIEnumerator(name: "OB_SPEAKER", value: 12, isUnsigned: true)
!2944 = !DIEnumerator(name: "OB_LATTICE", value: 22, isUnsigned: true)
!2945 = !DIEnumerator(name: "OB_ARMATURE", value: 25, isUnsigned: true)
!2946 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1549, line: 282, baseType: !231, size: 32, elements: !2947)
!2947 = !{!2948, !2949, !2950, !2951, !2952, !2953, !2954}
!2948 = !DIEnumerator(name: "PAINT_BLEND_MIX", value: 0, isUnsigned: true)
!2949 = !DIEnumerator(name: "PAINT_BLEND_ADD", value: 1, isUnsigned: true)
!2950 = !DIEnumerator(name: "PAINT_BLEND_SUB", value: 2, isUnsigned: true)
!2951 = !DIEnumerator(name: "PAINT_BLEND_MUL", value: 3, isUnsigned: true)
!2952 = !DIEnumerator(name: "PAINT_BLEND_BLUR", value: 4, isUnsigned: true)
!2953 = !DIEnumerator(name: "PAINT_BLEND_LIGHTEN", value: 5, isUnsigned: true)
!2954 = !DIEnumerator(name: "PAINT_BLEND_DARKEN", value: 6, isUnsigned: true)
!2955 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2956, line: 119, baseType: !231, size: 32, elements: !2957)
!2956 = !DIFile(filename: "blender/source/blender/editors/include/ED_view3d.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2957 = !{!2958, !2959, !2960, !2961, !2962}
!2958 = !DIEnumerator(name: "V3D_PROJ_TEST_NOP", value: 0, isUnsigned: true)
!2959 = !DIEnumerator(name: "V3D_PROJ_TEST_CLIP_BB", value: 1, isUnsigned: true)
!2960 = !DIEnumerator(name: "V3D_PROJ_TEST_CLIP_WIN", value: 2, isUnsigned: true)
!2961 = !DIEnumerator(name: "V3D_PROJ_TEST_CLIP_NEAR", value: 4, isUnsigned: true)
!2962 = !DIEnumerator(name: "V3D_PROJ_TEST_CLIP_ZERO", value: 8, isUnsigned: true)
!2963 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2956, line: 109, baseType: !231, size: 32, elements: !2964)
!2964 = !{!2965, !2966, !2967, !2968, !2969, !2970}
!2965 = !DIEnumerator(name: "V3D_PROJ_RET_OK", value: 0, isUnsigned: true)
!2966 = !DIEnumerator(name: "V3D_PROJ_RET_CLIP_NEAR", value: 1, isUnsigned: true)
!2967 = !DIEnumerator(name: "V3D_PROJ_RET_CLIP_ZERO", value: 2, isUnsigned: true)
!2968 = !DIEnumerator(name: "V3D_PROJ_RET_CLIP_BB", value: 3, isUnsigned: true)
!2969 = !DIEnumerator(name: "V3D_PROJ_RET_CLIP_WIN", value: 4, isUnsigned: true)
!2970 = !DIEnumerator(name: "V3D_PROJ_RET_OVERFLOW", value: 5, isUnsigned: true)
!2971 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2972, line: 54, baseType: !231, size: 32, elements: !2973)
!2972 = !DIFile(filename: "blender/source/blender/windowmanager/wm_event_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2973 = !{!2974, !2975, !2976, !2977, !2978, !2979, !2980, !2981, !2982, !2983, !2984, !2985, !2986, !2987, !2988, !2989, !2990, !2991, !2992, !2993, !2994, !2995, !2996, !2997, !2998, !2999, !3000, !3001, !3002, !3003, !3004, !3005, !3006, !3007, !3008, !3009, !3010, !3011, !3012, !3013, !3014, !3015, !3016, !3017, !3018, !3019, !3020, !3021, !3022, !3023, !3024, !3025, !3026, !3027, !3028, !3029, !3030, !3031, !3032, !3033, !3034, !3035, !3036, !3037, !3038, !3039, !3040, !3041, !3042, !3043, !3044, !3045, !3046, !3047, !3048, !3049, !3050, !3051, !3052, !3053, !3054, !3055, !3056, !3057, !3058, !3059, !3060, !3061, !3062, !3063, !3064, !3065, !3066, !3067, !3068, !3069, !3070, !3071, !3072, !3073, !3074, !3075, !3076, !3077, !3078, !3079, !3080, !3081, !3082, !3083, !3084, !3085, !3086, !3087, !3088, !3089, !3090, !3091, !3092, !3093, !3094, !3095, !3096, !3097, !3098, !3099, !3100, !3101, !3102, !3103, !3104, !3105, !3106, !3107, !3108, !3109, !3110, !3111, !3112, !3113, !3114, !3115, !3116, !3117, !3118, !3119, !3120, !3121, !3122, !3123, !3124, !3125, !3126, !3127, !3128, !3129, !3130, !3131, !3132, !3133, !3134, !3135, !3136, !3137, !3138, !3139, !3140, !3141, !3142, !3143, !3144, !3145, !3146, !3147, !3148, !3149, !3150, !3151, !3152, !3153, !3154, !3155, !3156, !3157, !3158, !3159, !3160, !3161, !3162, !3163, !3164, !3165, !3166, !3167, !3168, !3169, !3170, !3171}
!2974 = !DIEnumerator(name: "EVENT_NONE", value: 0, isUnsigned: true)
!2975 = !DIEnumerator(name: "LEFTMOUSE", value: 1, isUnsigned: true)
!2976 = !DIEnumerator(name: "MIDDLEMOUSE", value: 2, isUnsigned: true)
!2977 = !DIEnumerator(name: "RIGHTMOUSE", value: 3, isUnsigned: true)
!2978 = !DIEnumerator(name: "MOUSEMOVE", value: 4, isUnsigned: true)
!2979 = !DIEnumerator(name: "ACTIONMOUSE", value: 5, isUnsigned: true)
!2980 = !DIEnumerator(name: "SELECTMOUSE", value: 6, isUnsigned: true)
!2981 = !DIEnumerator(name: "BUTTON4MOUSE", value: 7, isUnsigned: true)
!2982 = !DIEnumerator(name: "BUTTON5MOUSE", value: 8, isUnsigned: true)
!2983 = !DIEnumerator(name: "BUTTON6MOUSE", value: 18, isUnsigned: true)
!2984 = !DIEnumerator(name: "BUTTON7MOUSE", value: 19, isUnsigned: true)
!2985 = !DIEnumerator(name: "MOUSEPAN", value: 14, isUnsigned: true)
!2986 = !DIEnumerator(name: "MOUSEZOOM", value: 15, isUnsigned: true)
!2987 = !DIEnumerator(name: "MOUSEROTATE", value: 16, isUnsigned: true)
!2988 = !DIEnumerator(name: "WHEELUPMOUSE", value: 10, isUnsigned: true)
!2989 = !DIEnumerator(name: "WHEELDOWNMOUSE", value: 11, isUnsigned: true)
!2990 = !DIEnumerator(name: "WHEELINMOUSE", value: 12, isUnsigned: true)
!2991 = !DIEnumerator(name: "WHEELOUTMOUSE", value: 13, isUnsigned: true)
!2992 = !DIEnumerator(name: "INBETWEEN_MOUSEMOVE", value: 17, isUnsigned: true)
!2993 = !DIEnumerator(name: "AKEY", value: 97, isUnsigned: true)
!2994 = !DIEnumerator(name: "BKEY", value: 98, isUnsigned: true)
!2995 = !DIEnumerator(name: "CKEY", value: 99, isUnsigned: true)
!2996 = !DIEnumerator(name: "DKEY", value: 100, isUnsigned: true)
!2997 = !DIEnumerator(name: "EKEY", value: 101, isUnsigned: true)
!2998 = !DIEnumerator(name: "FKEY", value: 102, isUnsigned: true)
!2999 = !DIEnumerator(name: "GKEY", value: 103, isUnsigned: true)
!3000 = !DIEnumerator(name: "HKEY", value: 104, isUnsigned: true)
!3001 = !DIEnumerator(name: "IKEY", value: 105, isUnsigned: true)
!3002 = !DIEnumerator(name: "JKEY", value: 106, isUnsigned: true)
!3003 = !DIEnumerator(name: "KKEY", value: 107, isUnsigned: true)
!3004 = !DIEnumerator(name: "LKEY", value: 108, isUnsigned: true)
!3005 = !DIEnumerator(name: "MKEY", value: 109, isUnsigned: true)
!3006 = !DIEnumerator(name: "NKEY", value: 110, isUnsigned: true)
!3007 = !DIEnumerator(name: "OKEY", value: 111, isUnsigned: true)
!3008 = !DIEnumerator(name: "PKEY", value: 112, isUnsigned: true)
!3009 = !DIEnumerator(name: "QKEY", value: 113, isUnsigned: true)
!3010 = !DIEnumerator(name: "RKEY", value: 114, isUnsigned: true)
!3011 = !DIEnumerator(name: "SKEY", value: 115, isUnsigned: true)
!3012 = !DIEnumerator(name: "TKEY", value: 116, isUnsigned: true)
!3013 = !DIEnumerator(name: "UKEY", value: 117, isUnsigned: true)
!3014 = !DIEnumerator(name: "VKEY", value: 118, isUnsigned: true)
!3015 = !DIEnumerator(name: "WKEY", value: 119, isUnsigned: true)
!3016 = !DIEnumerator(name: "XKEY", value: 120, isUnsigned: true)
!3017 = !DIEnumerator(name: "YKEY", value: 121, isUnsigned: true)
!3018 = !DIEnumerator(name: "ZKEY", value: 122, isUnsigned: true)
!3019 = !DIEnumerator(name: "ZEROKEY", value: 48, isUnsigned: true)
!3020 = !DIEnumerator(name: "ONEKEY", value: 49, isUnsigned: true)
!3021 = !DIEnumerator(name: "TWOKEY", value: 50, isUnsigned: true)
!3022 = !DIEnumerator(name: "THREEKEY", value: 51, isUnsigned: true)
!3023 = !DIEnumerator(name: "FOURKEY", value: 52, isUnsigned: true)
!3024 = !DIEnumerator(name: "FIVEKEY", value: 53, isUnsigned: true)
!3025 = !DIEnumerator(name: "SIXKEY", value: 54, isUnsigned: true)
!3026 = !DIEnumerator(name: "SEVENKEY", value: 55, isUnsigned: true)
!3027 = !DIEnumerator(name: "EIGHTKEY", value: 56, isUnsigned: true)
!3028 = !DIEnumerator(name: "NINEKEY", value: 57, isUnsigned: true)
!3029 = !DIEnumerator(name: "CAPSLOCKKEY", value: 211, isUnsigned: true)
!3030 = !DIEnumerator(name: "LEFTCTRLKEY", value: 212, isUnsigned: true)
!3031 = !DIEnumerator(name: "LEFTALTKEY", value: 213, isUnsigned: true)
!3032 = !DIEnumerator(name: "RIGHTALTKEY", value: 214, isUnsigned: true)
!3033 = !DIEnumerator(name: "RIGHTCTRLKEY", value: 215, isUnsigned: true)
!3034 = !DIEnumerator(name: "RIGHTSHIFTKEY", value: 216, isUnsigned: true)
!3035 = !DIEnumerator(name: "LEFTSHIFTKEY", value: 217, isUnsigned: true)
!3036 = !DIEnumerator(name: "ESCKEY", value: 218, isUnsigned: true)
!3037 = !DIEnumerator(name: "TABKEY", value: 219, isUnsigned: true)
!3038 = !DIEnumerator(name: "RETKEY", value: 220, isUnsigned: true)
!3039 = !DIEnumerator(name: "SPACEKEY", value: 221, isUnsigned: true)
!3040 = !DIEnumerator(name: "LINEFEEDKEY", value: 222, isUnsigned: true)
!3041 = !DIEnumerator(name: "BACKSPACEKEY", value: 223, isUnsigned: true)
!3042 = !DIEnumerator(name: "DELKEY", value: 224, isUnsigned: true)
!3043 = !DIEnumerator(name: "SEMICOLONKEY", value: 225, isUnsigned: true)
!3044 = !DIEnumerator(name: "PERIODKEY", value: 226, isUnsigned: true)
!3045 = !DIEnumerator(name: "COMMAKEY", value: 227, isUnsigned: true)
!3046 = !DIEnumerator(name: "QUOTEKEY", value: 228, isUnsigned: true)
!3047 = !DIEnumerator(name: "ACCENTGRAVEKEY", value: 229, isUnsigned: true)
!3048 = !DIEnumerator(name: "MINUSKEY", value: 230, isUnsigned: true)
!3049 = !DIEnumerator(name: "SLASHKEY", value: 232, isUnsigned: true)
!3050 = !DIEnumerator(name: "BACKSLASHKEY", value: 233, isUnsigned: true)
!3051 = !DIEnumerator(name: "EQUALKEY", value: 234, isUnsigned: true)
!3052 = !DIEnumerator(name: "LEFTBRACKETKEY", value: 235, isUnsigned: true)
!3053 = !DIEnumerator(name: "RIGHTBRACKETKEY", value: 236, isUnsigned: true)
!3054 = !DIEnumerator(name: "LEFTARROWKEY", value: 137, isUnsigned: true)
!3055 = !DIEnumerator(name: "DOWNARROWKEY", value: 138, isUnsigned: true)
!3056 = !DIEnumerator(name: "RIGHTARROWKEY", value: 139, isUnsigned: true)
!3057 = !DIEnumerator(name: "UPARROWKEY", value: 140, isUnsigned: true)
!3058 = !DIEnumerator(name: "PAD0", value: 150, isUnsigned: true)
!3059 = !DIEnumerator(name: "PAD1", value: 151, isUnsigned: true)
!3060 = !DIEnumerator(name: "PAD2", value: 152, isUnsigned: true)
!3061 = !DIEnumerator(name: "PAD3", value: 153, isUnsigned: true)
!3062 = !DIEnumerator(name: "PAD4", value: 154, isUnsigned: true)
!3063 = !DIEnumerator(name: "PAD5", value: 155, isUnsigned: true)
!3064 = !DIEnumerator(name: "PAD6", value: 156, isUnsigned: true)
!3065 = !DIEnumerator(name: "PAD7", value: 157, isUnsigned: true)
!3066 = !DIEnumerator(name: "PAD8", value: 158, isUnsigned: true)
!3067 = !DIEnumerator(name: "PAD9", value: 159, isUnsigned: true)
!3068 = !DIEnumerator(name: "PADPERIOD", value: 199, isUnsigned: true)
!3069 = !DIEnumerator(name: "PADASTERKEY", value: 160, isUnsigned: true)
!3070 = !DIEnumerator(name: "PADSLASHKEY", value: 161, isUnsigned: true)
!3071 = !DIEnumerator(name: "PADMINUS", value: 162, isUnsigned: true)
!3072 = !DIEnumerator(name: "PADENTER", value: 163, isUnsigned: true)
!3073 = !DIEnumerator(name: "PADPLUSKEY", value: 164, isUnsigned: true)
!3074 = !DIEnumerator(name: "PAUSEKEY", value: 165, isUnsigned: true)
!3075 = !DIEnumerator(name: "INSERTKEY", value: 166, isUnsigned: true)
!3076 = !DIEnumerator(name: "HOMEKEY", value: 167, isUnsigned: true)
!3077 = !DIEnumerator(name: "PAGEUPKEY", value: 168, isUnsigned: true)
!3078 = !DIEnumerator(name: "PAGEDOWNKEY", value: 169, isUnsigned: true)
!3079 = !DIEnumerator(name: "ENDKEY", value: 170, isUnsigned: true)
!3080 = !DIEnumerator(name: "UNKNOWNKEY", value: 171, isUnsigned: true)
!3081 = !DIEnumerator(name: "OSKEY", value: 172, isUnsigned: true)
!3082 = !DIEnumerator(name: "GRLESSKEY", value: 173, isUnsigned: true)
!3083 = !DIEnumerator(name: "MEDIAPLAY", value: 174, isUnsigned: true)
!3084 = !DIEnumerator(name: "MEDIASTOP", value: 175, isUnsigned: true)
!3085 = !DIEnumerator(name: "MEDIAFIRST", value: 176, isUnsigned: true)
!3086 = !DIEnumerator(name: "MEDIALAST", value: 177, isUnsigned: true)
!3087 = !DIEnumerator(name: "F1KEY", value: 300, isUnsigned: true)
!3088 = !DIEnumerator(name: "F2KEY", value: 301, isUnsigned: true)
!3089 = !DIEnumerator(name: "F3KEY", value: 302, isUnsigned: true)
!3090 = !DIEnumerator(name: "F4KEY", value: 303, isUnsigned: true)
!3091 = !DIEnumerator(name: "F5KEY", value: 304, isUnsigned: true)
!3092 = !DIEnumerator(name: "F6KEY", value: 305, isUnsigned: true)
!3093 = !DIEnumerator(name: "F7KEY", value: 306, isUnsigned: true)
!3094 = !DIEnumerator(name: "F8KEY", value: 307, isUnsigned: true)
!3095 = !DIEnumerator(name: "F9KEY", value: 308, isUnsigned: true)
!3096 = !DIEnumerator(name: "F10KEY", value: 309, isUnsigned: true)
!3097 = !DIEnumerator(name: "F11KEY", value: 310, isUnsigned: true)
!3098 = !DIEnumerator(name: "F12KEY", value: 311, isUnsigned: true)
!3099 = !DIEnumerator(name: "F13KEY", value: 312, isUnsigned: true)
!3100 = !DIEnumerator(name: "F14KEY", value: 313, isUnsigned: true)
!3101 = !DIEnumerator(name: "F15KEY", value: 314, isUnsigned: true)
!3102 = !DIEnumerator(name: "F16KEY", value: 315, isUnsigned: true)
!3103 = !DIEnumerator(name: "F17KEY", value: 316, isUnsigned: true)
!3104 = !DIEnumerator(name: "F18KEY", value: 317, isUnsigned: true)
!3105 = !DIEnumerator(name: "F19KEY", value: 318, isUnsigned: true)
!3106 = !DIEnumerator(name: "NDOF_MOTION", value: 400, isUnsigned: true)
!3107 = !DIEnumerator(name: "NDOF_BUTTON_NONE", value: 400, isUnsigned: true)
!3108 = !DIEnumerator(name: "NDOF_BUTTON_MENU", value: 401, isUnsigned: true)
!3109 = !DIEnumerator(name: "NDOF_BUTTON_FIT", value: 402, isUnsigned: true)
!3110 = !DIEnumerator(name: "NDOF_BUTTON_TOP", value: 403, isUnsigned: true)
!3111 = !DIEnumerator(name: "NDOF_BUTTON_BOTTOM", value: 404, isUnsigned: true)
!3112 = !DIEnumerator(name: "NDOF_BUTTON_LEFT", value: 405, isUnsigned: true)
!3113 = !DIEnumerator(name: "NDOF_BUTTON_RIGHT", value: 406, isUnsigned: true)
!3114 = !DIEnumerator(name: "NDOF_BUTTON_FRONT", value: 407, isUnsigned: true)
!3115 = !DIEnumerator(name: "NDOF_BUTTON_BACK", value: 408, isUnsigned: true)
!3116 = !DIEnumerator(name: "NDOF_BUTTON_ISO1", value: 409, isUnsigned: true)
!3117 = !DIEnumerator(name: "NDOF_BUTTON_ISO2", value: 410, isUnsigned: true)
!3118 = !DIEnumerator(name: "NDOF_BUTTON_ROLL_CW", value: 411, isUnsigned: true)
!3119 = !DIEnumerator(name: "NDOF_BUTTON_ROLL_CCW", value: 412, isUnsigned: true)
!3120 = !DIEnumerator(name: "NDOF_BUTTON_SPIN_CW", value: 413, isUnsigned: true)
!3121 = !DIEnumerator(name: "NDOF_BUTTON_SPIN_CCW", value: 414, isUnsigned: true)
!3122 = !DIEnumerator(name: "NDOF_BUTTON_TILT_CW", value: 415, isUnsigned: true)
!3123 = !DIEnumerator(name: "NDOF_BUTTON_TILT_CCW", value: 416, isUnsigned: true)
!3124 = !DIEnumerator(name: "NDOF_BUTTON_ROTATE", value: 417, isUnsigned: true)
!3125 = !DIEnumerator(name: "NDOF_BUTTON_PANZOOM", value: 418, isUnsigned: true)
!3126 = !DIEnumerator(name: "NDOF_BUTTON_DOMINANT", value: 419, isUnsigned: true)
!3127 = !DIEnumerator(name: "NDOF_BUTTON_PLUS", value: 420, isUnsigned: true)
!3128 = !DIEnumerator(name: "NDOF_BUTTON_MINUS", value: 421, isUnsigned: true)
!3129 = !DIEnumerator(name: "NDOF_BUTTON_ESC", value: 422, isUnsigned: true)
!3130 = !DIEnumerator(name: "NDOF_BUTTON_ALT", value: 423, isUnsigned: true)
!3131 = !DIEnumerator(name: "NDOF_BUTTON_SHIFT", value: 424, isUnsigned: true)
!3132 = !DIEnumerator(name: "NDOF_BUTTON_CTRL", value: 425, isUnsigned: true)
!3133 = !DIEnumerator(name: "NDOF_BUTTON_1", value: 426, isUnsigned: true)
!3134 = !DIEnumerator(name: "NDOF_BUTTON_2", value: 427, isUnsigned: true)
!3135 = !DIEnumerator(name: "NDOF_BUTTON_3", value: 428, isUnsigned: true)
!3136 = !DIEnumerator(name: "NDOF_BUTTON_4", value: 429, isUnsigned: true)
!3137 = !DIEnumerator(name: "NDOF_BUTTON_5", value: 430, isUnsigned: true)
!3138 = !DIEnumerator(name: "NDOF_BUTTON_6", value: 431, isUnsigned: true)
!3139 = !DIEnumerator(name: "NDOF_BUTTON_7", value: 432, isUnsigned: true)
!3140 = !DIEnumerator(name: "NDOF_BUTTON_8", value: 433, isUnsigned: true)
!3141 = !DIEnumerator(name: "NDOF_BUTTON_9", value: 434, isUnsigned: true)
!3142 = !DIEnumerator(name: "NDOF_BUTTON_10", value: 435, isUnsigned: true)
!3143 = !DIEnumerator(name: "NDOF_BUTTON_A", value: 436, isUnsigned: true)
!3144 = !DIEnumerator(name: "NDOF_BUTTON_B", value: 437, isUnsigned: true)
!3145 = !DIEnumerator(name: "NDOF_BUTTON_C", value: 438, isUnsigned: true)
!3146 = !DIEnumerator(name: "NDOF_LAST", value: 439, isUnsigned: true)
!3147 = !DIEnumerator(name: "INPUTCHANGE", value: 259, isUnsigned: true)
!3148 = !DIEnumerator(name: "WINDEACTIVATE", value: 260, isUnsigned: true)
!3149 = !DIEnumerator(name: "TIMER", value: 272, isUnsigned: true)
!3150 = !DIEnumerator(name: "TIMER0", value: 273, isUnsigned: true)
!3151 = !DIEnumerator(name: "TIMER1", value: 274, isUnsigned: true)
!3152 = !DIEnumerator(name: "TIMER2", value: 275, isUnsigned: true)
!3153 = !DIEnumerator(name: "TIMERJOBS", value: 276, isUnsigned: true)
!3154 = !DIEnumerator(name: "TIMERAUTOSAVE", value: 277, isUnsigned: true)
!3155 = !DIEnumerator(name: "TIMERREPORT", value: 278, isUnsigned: true)
!3156 = !DIEnumerator(name: "TIMERREGION", value: 279, isUnsigned: true)
!3157 = !DIEnumerator(name: "TIMERF", value: 287, isUnsigned: true)
!3158 = !DIEnumerator(name: "EVT_ACTIONZONE_AREA", value: 20480, isUnsigned: true)
!3159 = !DIEnumerator(name: "EVT_ACTIONZONE_REGION", value: 20481, isUnsigned: true)
!3160 = !DIEnumerator(name: "EVT_ACTIONZONE_FULLSCREEN", value: 20482, isUnsigned: true)
!3161 = !DIEnumerator(name: "EVT_TWEAK_L", value: 20483, isUnsigned: true)
!3162 = !DIEnumerator(name: "EVT_TWEAK_M", value: 20484, isUnsigned: true)
!3163 = !DIEnumerator(name: "EVT_TWEAK_R", value: 20485, isUnsigned: true)
!3164 = !DIEnumerator(name: "EVT_TWEAK_A", value: 20486, isUnsigned: true)
!3165 = !DIEnumerator(name: "EVT_TWEAK_S", value: 20487, isUnsigned: true)
!3166 = !DIEnumerator(name: "EVT_GESTURE", value: 20496, isUnsigned: true)
!3167 = !DIEnumerator(name: "EVT_FILESELECT", value: 20512, isUnsigned: true)
!3168 = !DIEnumerator(name: "EVT_BUT_OPEN", value: 20513, isUnsigned: true)
!3169 = !DIEnumerator(name: "EVT_MODAL_MAP", value: 20514, isUnsigned: true)
!3170 = !DIEnumerator(name: "EVT_DROP", value: 20515, isUnsigned: true)
!3171 = !DIEnumerator(name: "EVT_BUT_CANCEL", value: 20516, isUnsigned: true)
!3172 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !3173, file: !3, line: 3178, baseType: !231, size: 32, elements: !3178)
!3173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DMGradient_vertStore", file: !3, line: 3175, size: 128, elements: !3174)
!3174 = !{!3175, !3176, !3177}
!3175 = !DIDerivedType(tag: DW_TAG_member, name: "sco", scope: !3173, file: !3, line: 3176, baseType: !1052, size: 64)
!3176 = !DIDerivedType(tag: DW_TAG_member, name: "weight_orig", scope: !3173, file: !3, line: 3177, baseType: !210, size: 32, offset: 64)
!3177 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3173, file: !3, line: 3181, baseType: !3172, size: 32, offset: 96)
!3178 = !{!3179, !3180}
!3179 = !DIEnumerator(name: "VGRAD_STORE_NOP", value: 0, isUnsigned: true)
!3180 = !DIEnumerator(name: "VGRAD_STORE_DW_EXIST", value: 1, isUnsigned: true)
!3181 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3182, line: 122, baseType: !231, size: 32, elements: !3183)
!3182 = !DIFile(filename: "blender/source/blender/editors/sculpt_paint/paint_intern.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3183 = !{!3184, !3185}
!3184 = !DIEnumerator(name: "WPAINT_GRADIENT_TYPE_LINEAR", value: 0, isUnsigned: true)
!3185 = !DIEnumerator(name: "WPAINT_GRADIENT_TYPE_RADIAL", value: 1, isUnsigned: true)
!3186 = !{!3187, !56, !277, !250, !192, !125, !3310, !3401, !22, !3409, !3410, !3412, !1742, !3413, !259, !464, !3415}
!3187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3188, size: 64)
!3188 = !DIDerivedType(tag: DW_TAG_typedef, name: "Mesh", file: !308, line: 133, baseType: !3189)
!3189 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Mesh", file: !308, line: 58, size: 11008, elements: !3190)
!3190 = !{!3191, !3192, !3193, !3194, !3195, !3198, !3199, !3205, !3206, !3216, !3217, !3223, !3231, !3232, !3233, !3246, !3247, !3248, !3249, !3257, !3259, !3262, !3263, !3264, !3265, !3266, !3267, !3268, !3269, !3270, !3271, !3272, !3273, !3274, !3275, !3276, !3277, !3278, !3279, !3280, !3281, !3282, !3283, !3284, !3285, !3286, !3287, !3288, !3289}
!3191 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3189, file: !308, line: 59, baseType: !112, size: 960)
!3192 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !3189, file: !308, line: 60, baseType: !158, size: 64, offset: 960)
!3193 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !3189, file: !308, line: 62, baseType: !310, size: 64, offset: 1024)
!3194 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !3189, file: !308, line: 64, baseType: !306, size: 64, offset: 1088)
!3195 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !3189, file: !308, line: 65, baseType: !3196, size: 64, offset: 1152)
!3196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3197, size: 64)
!3197 = !DICompositeType(tag: DW_TAG_structure_type, name: "Key", file: !308, line: 42, flags: DIFlagFwdDecl)
!3198 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !3189, file: !308, line: 66, baseType: !404, size: 64, offset: 1216)
!3199 = !DIDerivedType(tag: DW_TAG_member, name: "mselect", scope: !3189, file: !308, line: 67, baseType: !3200, size: 64, offset: 1280)
!3200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3201, size: 64)
!3201 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MSelect", file: !206, line: 154, size: 64, elements: !3202)
!3202 = !{!3203, !3204}
!3203 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !3201, file: !206, line: 155, baseType: !22, size: 32)
!3204 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3201, file: !206, line: 156, baseType: !22, size: 32, offset: 32)
!3205 = !DIDerivedType(tag: DW_TAG_member, name: "mpoly", scope: !3189, file: !308, line: 71, baseType: !218, size: 64, offset: 1344)
!3206 = !DIDerivedType(tag: DW_TAG_member, name: "mtpoly", scope: !3189, file: !308, line: 72, baseType: !3207, size: 64, offset: 1408)
!3207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3208, size: 64)
!3208 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MTexPoly", file: !206, line: 93, size: 128, elements: !3209)
!3209 = !{!3210, !3211, !3212, !3213, !3214, !3215}
!3210 = !DIDerivedType(tag: DW_TAG_member, name: "tpage", scope: !3208, file: !206, line: 94, baseType: !890, size: 64)
!3211 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3208, file: !206, line: 95, baseType: !14, size: 8, offset: 64)
!3212 = !DIDerivedType(tag: DW_TAG_member, name: "transp", scope: !3208, file: !206, line: 95, baseType: !14, size: 8, offset: 72)
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3208, file: !206, line: 96, baseType: !48, size: 16, offset: 80)
!3214 = !DIDerivedType(tag: DW_TAG_member, name: "tile", scope: !3208, file: !206, line: 96, baseType: !48, size: 16, offset: 96)
!3215 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3208, file: !206, line: 96, baseType: !48, size: 16, offset: 112)
!3216 = !DIDerivedType(tag: DW_TAG_member, name: "mloop", scope: !3189, file: !308, line: 73, baseType: !227, size: 64, offset: 1472)
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "mloopuv", scope: !3189, file: !308, line: 74, baseType: !3218, size: 64, offset: 1536)
!3218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3219, size: 64)
!3219 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MLoopUV", file: !206, line: 109, size: 96, elements: !3220)
!3220 = !{!3221, !3222}
!3221 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !3219, file: !206, line: 110, baseType: !1052, size: 64)
!3222 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3219, file: !206, line: 111, baseType: !22, size: 32, offset: 64)
!3223 = !DIDerivedType(tag: DW_TAG_member, name: "mloopcol", scope: !3189, file: !308, line: 75, baseType: !3224, size: 64, offset: 1600)
!3224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3225, size: 64)
!3225 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MLoopCol", file: !206, line: 129, size: 32, elements: !3226)
!3226 = !{!3227, !3228, !3229, !3230}
!3227 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !3225, file: !206, line: 130, baseType: !14, size: 8)
!3228 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !3225, file: !206, line: 130, baseType: !14, size: 8, offset: 8)
!3229 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !3225, file: !206, line: 130, baseType: !14, size: 8, offset: 16)
!3230 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !3225, file: !206, line: 130, baseType: !14, size: 8, offset: 24)
!3231 = !DIDerivedType(tag: DW_TAG_member, name: "mface", scope: !3189, file: !308, line: 80, baseType: !667, size: 64, offset: 1664)
!3232 = !DIDerivedType(tag: DW_TAG_member, name: "mtface", scope: !3189, file: !308, line: 81, baseType: !883, size: 64, offset: 1728)
!3233 = !DIDerivedType(tag: DW_TAG_member, name: "tface", scope: !3189, file: !308, line: 82, baseType: !3234, size: 64, offset: 1792)
!3234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3235, size: 64)
!3235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "TFace", file: !308, line: 136, size: 512, elements: !3236)
!3236 = !{!3237, !3238, !3239, !3241, !3242, !3243, !3244, !3245}
!3237 = !DIDerivedType(tag: DW_TAG_member, name: "tpage", scope: !3235, file: !308, line: 137, baseType: !56, size: 64)
!3238 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !3235, file: !308, line: 138, baseType: !887, size: 256, offset: 64)
!3239 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !3235, file: !308, line: 139, baseType: !3240, size: 128, offset: 320)
!3240 = !DICompositeType(tag: DW_TAG_array_type, baseType: !231, size: 128, elements: !420)
!3241 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3235, file: !308, line: 140, baseType: !14, size: 8, offset: 448)
!3242 = !DIDerivedType(tag: DW_TAG_member, name: "transp", scope: !3235, file: !308, line: 140, baseType: !14, size: 8, offset: 456)
!3243 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3235, file: !308, line: 141, baseType: !48, size: 16, offset: 464)
!3244 = !DIDerivedType(tag: DW_TAG_member, name: "tile", scope: !3235, file: !308, line: 141, baseType: !48, size: 16, offset: 480)
!3245 = !DIDerivedType(tag: DW_TAG_member, name: "unwrap", scope: !3235, file: !308, line: 141, baseType: !48, size: 16, offset: 496)
!3246 = !DIDerivedType(tag: DW_TAG_member, name: "mvert", scope: !3189, file: !308, line: 83, baseType: !204, size: 64, offset: 1856)
!3247 = !DIDerivedType(tag: DW_TAG_member, name: "medge", scope: !3189, file: !308, line: 84, baseType: !655, size: 64, offset: 1920)
!3248 = !DIDerivedType(tag: DW_TAG_member, name: "dvert", scope: !3189, file: !308, line: 85, baseType: !2013, size: 64, offset: 1984)
!3249 = !DIDerivedType(tag: DW_TAG_member, name: "mcol", scope: !3189, file: !308, line: 89, baseType: !3250, size: 64, offset: 2048)
!3250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3251, size: 64)
!3251 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MCol", file: !206, line: 74, size: 32, elements: !3252)
!3252 = !{!3253, !3254, !3255, !3256}
!3253 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !3251, file: !206, line: 75, baseType: !14, size: 8)
!3254 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !3251, file: !206, line: 75, baseType: !14, size: 8, offset: 8)
!3255 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !3251, file: !206, line: 75, baseType: !14, size: 8, offset: 16)
!3256 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !3251, file: !206, line: 75, baseType: !14, size: 8, offset: 24)
!3257 = !DIDerivedType(tag: DW_TAG_member, name: "texcomesh", scope: !3189, file: !308, line: 90, baseType: !3258, size: 64, offset: 2112)
!3258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3189, size: 64)
!3259 = !DIDerivedType(tag: DW_TAG_member, name: "edit_btmesh", scope: !3189, file: !308, line: 93, baseType: !3260, size: 64, offset: 2176)
!3260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3261, size: 64)
!3261 = !DICompositeType(tag: DW_TAG_structure_type, name: "BMEditMesh", file: !308, line: 93, flags: DIFlagFwdDecl)
!3262 = !DIDerivedType(tag: DW_TAG_member, name: "vdata", scope: !3189, file: !308, line: 95, baseType: !522, size: 1600, offset: 2240)
!3263 = !DIDerivedType(tag: DW_TAG_member, name: "edata", scope: !3189, file: !308, line: 95, baseType: !522, size: 1600, offset: 3840)
!3264 = !DIDerivedType(tag: DW_TAG_member, name: "fdata", scope: !3189, file: !308, line: 95, baseType: !522, size: 1600, offset: 5440)
!3265 = !DIDerivedType(tag: DW_TAG_member, name: "pdata", scope: !3189, file: !308, line: 98, baseType: !522, size: 1600, offset: 7040)
!3266 = !DIDerivedType(tag: DW_TAG_member, name: "ldata", scope: !3189, file: !308, line: 98, baseType: !522, size: 1600, offset: 8640)
!3267 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !3189, file: !308, line: 101, baseType: !22, size: 32, offset: 10240)
!3268 = !DIDerivedType(tag: DW_TAG_member, name: "totedge", scope: !3189, file: !308, line: 101, baseType: !22, size: 32, offset: 10272)
!3269 = !DIDerivedType(tag: DW_TAG_member, name: "totface", scope: !3189, file: !308, line: 101, baseType: !22, size: 32, offset: 10304)
!3270 = !DIDerivedType(tag: DW_TAG_member, name: "totselect", scope: !3189, file: !308, line: 101, baseType: !22, size: 32, offset: 10336)
!3271 = !DIDerivedType(tag: DW_TAG_member, name: "totpoly", scope: !3189, file: !308, line: 104, baseType: !22, size: 32, offset: 10368)
!3272 = !DIDerivedType(tag: DW_TAG_member, name: "totloop", scope: !3189, file: !308, line: 104, baseType: !22, size: 32, offset: 10400)
!3273 = !DIDerivedType(tag: DW_TAG_member, name: "act_face", scope: !3189, file: !308, line: 111, baseType: !22, size: 32, offset: 10432)
!3274 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !3189, file: !308, line: 114, baseType: !209, size: 96, offset: 10464)
!3275 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3189, file: !308, line: 115, baseType: !209, size: 96, offset: 10560)
!3276 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !3189, file: !308, line: 116, baseType: !209, size: 96, offset: 10656)
!3277 = !DIDerivedType(tag: DW_TAG_member, name: "drawflag", scope: !3189, file: !308, line: 118, baseType: !22, size: 32, offset: 10752)
!3278 = !DIDerivedType(tag: DW_TAG_member, name: "texflag", scope: !3189, file: !308, line: 119, baseType: !48, size: 16, offset: 10784)
!3279 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3189, file: !308, line: 119, baseType: !48, size: 16, offset: 10800)
!3280 = !DIDerivedType(tag: DW_TAG_member, name: "smoothresh", scope: !3189, file: !308, line: 120, baseType: !210, size: 32, offset: 10816)
!3281 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !3189, file: !308, line: 121, baseType: !22, size: 32, offset: 10848)
!3282 = !DIDerivedType(tag: DW_TAG_member, name: "cd_flag", scope: !3189, file: !308, line: 124, baseType: !14, size: 8, offset: 10880)
!3283 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3189, file: !308, line: 124, baseType: !14, size: 8, offset: 10888)
!3284 = !DIDerivedType(tag: DW_TAG_member, name: "subdiv", scope: !3189, file: !308, line: 126, baseType: !14, size: 8, offset: 10896)
!3285 = !DIDerivedType(tag: DW_TAG_member, name: "subdivr", scope: !3189, file: !308, line: 126, baseType: !14, size: 8, offset: 10904)
!3286 = !DIDerivedType(tag: DW_TAG_member, name: "subsurftype", scope: !3189, file: !308, line: 127, baseType: !14, size: 8, offset: 10912)
!3287 = !DIDerivedType(tag: DW_TAG_member, name: "editflag", scope: !3189, file: !308, line: 128, baseType: !14, size: 8, offset: 10920)
!3288 = !DIDerivedType(tag: DW_TAG_member, name: "totcol", scope: !3189, file: !308, line: 130, baseType: !48, size: 16, offset: 10928)
!3289 = !DIDerivedType(tag: DW_TAG_member, name: "mr", scope: !3189, file: !308, line: 132, baseType: !3290, size: 64, offset: 10944)
!3290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3291, size: 64)
!3291 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Multires", file: !206, line: 233, size: 3584, elements: !3292)
!3292 = !{!3293, !3294, !3297, !3298, !3299, !3300, !3301, !3302, !3303, !3304, !3305, !3306, !3307, !3309}
!3293 = !DIDerivedType(tag: DW_TAG_member, name: "levels", scope: !3291, file: !206, line: 234, baseType: !58, size: 128)
!3294 = !DIDerivedType(tag: DW_TAG_member, name: "verts", scope: !3291, file: !206, line: 235, baseType: !3295, size: 64, offset: 128)
!3295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3296, size: 64)
!3296 = !DIDerivedType(tag: DW_TAG_typedef, name: "MVert", file: !206, line: 69, baseType: !205)
!3297 = !DIDerivedType(tag: DW_TAG_member, name: "level_count", scope: !3291, file: !206, line: 237, baseType: !259, size: 8, offset: 192)
!3298 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !3291, file: !206, line: 237, baseType: !259, size: 8, offset: 200)
!3299 = !DIDerivedType(tag: DW_TAG_member, name: "newlvl", scope: !3291, file: !206, line: 237, baseType: !259, size: 8, offset: 208)
!3300 = !DIDerivedType(tag: DW_TAG_member, name: "edgelvl", scope: !3291, file: !206, line: 237, baseType: !259, size: 8, offset: 216)
!3301 = !DIDerivedType(tag: DW_TAG_member, name: "pinlvl", scope: !3291, file: !206, line: 237, baseType: !259, size: 8, offset: 224)
!3302 = !DIDerivedType(tag: DW_TAG_member, name: "renderlvl", scope: !3291, file: !206, line: 237, baseType: !259, size: 8, offset: 232)
!3303 = !DIDerivedType(tag: DW_TAG_member, name: "use_col", scope: !3291, file: !206, line: 238, baseType: !259, size: 8, offset: 240)
!3304 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3291, file: !206, line: 238, baseType: !259, size: 8, offset: 248)
!3305 = !DIDerivedType(tag: DW_TAG_member, name: "vdata", scope: !3291, file: !206, line: 241, baseType: !520, size: 1600, offset: 256)
!3306 = !DIDerivedType(tag: DW_TAG_member, name: "fdata", scope: !3291, file: !206, line: 242, baseType: !520, size: 1600, offset: 1856)
!3307 = !DIDerivedType(tag: DW_TAG_member, name: "edge_flags", scope: !3291, file: !206, line: 243, baseType: !3308, size: 64, offset: 3456)
!3308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !48, size: 64)
!3309 = !DIDerivedType(tag: DW_TAG_member, name: "edge_creases", scope: !3291, file: !206, line: 244, baseType: !192, size: 64, offset: 3520)
!3310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3311, size: 64)
!3311 = !DIDerivedType(tag: DW_TAG_typedef, name: "bArmature", file: !160, line: 114, baseType: !3312)
!3312 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bArmature", file: !160, line: 78, size: 2048, elements: !3313)
!3313 = !{!3314, !3315, !3316, !3317, !3318, !3319, !3354, !3381, !3382, !3383, !3384, !3385, !3386, !3387, !3388, !3389, !3390, !3391, !3392, !3393, !3394, !3395, !3396, !3397, !3398, !3399, !3400}
!3314 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3312, file: !160, line: 79, baseType: !112, size: 960)
!3315 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !3312, file: !160, line: 80, baseType: !158, size: 64, offset: 960)
!3316 = !DIDerivedType(tag: DW_TAG_member, name: "bonebase", scope: !3312, file: !160, line: 82, baseType: !58, size: 128, offset: 1024)
!3317 = !DIDerivedType(tag: DW_TAG_member, name: "chainbase", scope: !3312, file: !160, line: 83, baseType: !58, size: 128, offset: 1152)
!3318 = !DIDerivedType(tag: DW_TAG_member, name: "edbo", scope: !3312, file: !160, line: 84, baseType: !1044, size: 64, offset: 1280)
!3319 = !DIDerivedType(tag: DW_TAG_member, name: "act_bone", scope: !3312, file: !160, line: 92, baseType: !3320, size: 64, offset: 1344)
!3320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3321, size: 64)
!3321 = !DIDerivedType(tag: DW_TAG_typedef, name: "Bone", file: !160, line: 76, baseType: !3322)
!3322 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Bone", file: !160, line: 48, size: 2624, elements: !3323)
!3323 = !{!3324, !3326, !3327, !3328, !3329, !3330, !3331, !3332, !3333, !3334, !3335, !3336, !3337, !3338, !3339, !3340, !3341, !3342, !3343, !3344, !3345, !3346, !3347, !3348, !3349, !3350, !3351, !3352}
!3324 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3322, file: !160, line: 49, baseType: !3325, size: 64)
!3325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3322, size: 64)
!3326 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3322, file: !160, line: 49, baseType: !3325, size: 64, offset: 64)
!3327 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !3322, file: !160, line: 50, baseType: !37, size: 64, offset: 128)
!3328 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3322, file: !160, line: 51, baseType: !3325, size: 64, offset: 192)
!3329 = !DIDerivedType(tag: DW_TAG_member, name: "childbase", scope: !3322, file: !160, line: 52, baseType: !58, size: 128, offset: 256)
!3330 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3322, file: !160, line: 53, baseType: !33, size: 512, offset: 384)
!3331 = !DIDerivedType(tag: DW_TAG_member, name: "roll", scope: !3322, file: !160, line: 55, baseType: !210, size: 32, offset: 896)
!3332 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3322, file: !160, line: 56, baseType: !209, size: 96, offset: 928)
!3333 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3322, file: !160, line: 57, baseType: !209, size: 96, offset: 1024)
!3334 = !DIDerivedType(tag: DW_TAG_member, name: "bone_mat", scope: !3322, file: !160, line: 58, baseType: !272, size: 288, offset: 1120)
!3335 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3322, file: !160, line: 60, baseType: !22, size: 32, offset: 1408)
!3336 = !DIDerivedType(tag: DW_TAG_member, name: "arm_head", scope: !3322, file: !160, line: 62, baseType: !209, size: 96, offset: 1440)
!3337 = !DIDerivedType(tag: DW_TAG_member, name: "arm_tail", scope: !3322, file: !160, line: 63, baseType: !209, size: 96, offset: 1536)
!3338 = !DIDerivedType(tag: DW_TAG_member, name: "arm_mat", scope: !3322, file: !160, line: 64, baseType: !428, size: 512, offset: 1632)
!3339 = !DIDerivedType(tag: DW_TAG_member, name: "arm_roll", scope: !3322, file: !160, line: 65, baseType: !210, size: 32, offset: 2144)
!3340 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !3322, file: !160, line: 67, baseType: !210, size: 32, offset: 2176)
!3341 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !3322, file: !160, line: 67, baseType: !210, size: 32, offset: 2208)
!3342 = !DIDerivedType(tag: DW_TAG_member, name: "xwidth", scope: !3322, file: !160, line: 68, baseType: !210, size: 32, offset: 2240)
!3343 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !3322, file: !160, line: 68, baseType: !210, size: 32, offset: 2272)
!3344 = !DIDerivedType(tag: DW_TAG_member, name: "zwidth", scope: !3322, file: !160, line: 68, baseType: !210, size: 32, offset: 2304)
!3345 = !DIDerivedType(tag: DW_TAG_member, name: "ease1", scope: !3322, file: !160, line: 69, baseType: !210, size: 32, offset: 2336)
!3346 = !DIDerivedType(tag: DW_TAG_member, name: "ease2", scope: !3322, file: !160, line: 69, baseType: !210, size: 32, offset: 2368)
!3347 = !DIDerivedType(tag: DW_TAG_member, name: "rad_head", scope: !3322, file: !160, line: 70, baseType: !210, size: 32, offset: 2400)
!3348 = !DIDerivedType(tag: DW_TAG_member, name: "rad_tail", scope: !3322, file: !160, line: 70, baseType: !210, size: 32, offset: 2432)
!3349 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3322, file: !160, line: 72, baseType: !209, size: 96, offset: 2464)
!3350 = !DIDerivedType(tag: DW_TAG_member, name: "layer", scope: !3322, file: !160, line: 73, baseType: !22, size: 32, offset: 2560)
!3351 = !DIDerivedType(tag: DW_TAG_member, name: "segments", scope: !3322, file: !160, line: 74, baseType: !48, size: 16, offset: 2592)
!3352 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3322, file: !160, line: 75, baseType: !3353, size: 16, offset: 2608)
!3353 = !DICompositeType(tag: DW_TAG_array_type, baseType: !48, size: 16, elements: !1113)
!3354 = !DIDerivedType(tag: DW_TAG_member, name: "act_edbone", scope: !3312, file: !160, line: 93, baseType: !3355, size: 64, offset: 1408)
!3355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3356, size: 64)
!3356 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EditBone", file: !3357, line: 56, size: 1472, elements: !3358)
!3357 = !DIFile(filename: "blender/source/blender/editors/include/ED_armature.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3358 = !{!3359, !3360, !3361, !3362, !3363, !3364, !3365, !3366, !3367, !3368, !3369, !3370, !3371, !3372, !3373, !3374, !3375, !3376, !3377, !3378, !3379, !3380}
!3359 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3356, file: !3357, line: 57, baseType: !3355, size: 64)
!3360 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3356, file: !3357, line: 57, baseType: !3355, size: 64, offset: 64)
!3361 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !3356, file: !3357, line: 58, baseType: !43, size: 64, offset: 128)
!3362 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3356, file: !3357, line: 59, baseType: !3355, size: 64, offset: 192)
!3363 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !3356, file: !3357, line: 62, baseType: !56, size: 64, offset: 256)
!3364 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3356, file: !3357, line: 64, baseType: !33, size: 512, offset: 320)
!3365 = !DIDerivedType(tag: DW_TAG_member, name: "roll", scope: !3356, file: !3357, line: 65, baseType: !210, size: 32, offset: 832)
!3366 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3356, file: !3357, line: 70, baseType: !209, size: 96, offset: 864)
!3367 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3356, file: !3357, line: 71, baseType: !209, size: 96, offset: 960)
!3368 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3356, file: !3357, line: 75, baseType: !22, size: 32, offset: 1056)
!3369 = !DIDerivedType(tag: DW_TAG_member, name: "layer", scope: !3356, file: !3357, line: 76, baseType: !22, size: 32, offset: 1088)
!3370 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !3356, file: !3357, line: 78, baseType: !210, size: 32, offset: 1120)
!3371 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !3356, file: !3357, line: 78, baseType: !210, size: 32, offset: 1152)
!3372 = !DIDerivedType(tag: DW_TAG_member, name: "xwidth", scope: !3356, file: !3357, line: 79, baseType: !210, size: 32, offset: 1184)
!3373 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !3356, file: !3357, line: 79, baseType: !210, size: 32, offset: 1216)
!3374 = !DIDerivedType(tag: DW_TAG_member, name: "zwidth", scope: !3356, file: !3357, line: 79, baseType: !210, size: 32, offset: 1248)
!3375 = !DIDerivedType(tag: DW_TAG_member, name: "ease1", scope: !3356, file: !3357, line: 80, baseType: !210, size: 32, offset: 1280)
!3376 = !DIDerivedType(tag: DW_TAG_member, name: "ease2", scope: !3356, file: !3357, line: 80, baseType: !210, size: 32, offset: 1312)
!3377 = !DIDerivedType(tag: DW_TAG_member, name: "rad_head", scope: !3356, file: !3357, line: 81, baseType: !210, size: 32, offset: 1344)
!3378 = !DIDerivedType(tag: DW_TAG_member, name: "rad_tail", scope: !3356, file: !3357, line: 81, baseType: !210, size: 32, offset: 1376)
!3379 = !DIDerivedType(tag: DW_TAG_member, name: "oldlength", scope: !3356, file: !3357, line: 83, baseType: !210, size: 32, offset: 1408)
!3380 = !DIDerivedType(tag: DW_TAG_member, name: "segments", scope: !3356, file: !3357, line: 85, baseType: !48, size: 16, offset: 1440)
!3381 = !DIDerivedType(tag: DW_TAG_member, name: "sketch", scope: !3312, file: !160, line: 95, baseType: !56, size: 64, offset: 1472)
!3382 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3312, file: !160, line: 97, baseType: !22, size: 32, offset: 1536)
!3383 = !DIDerivedType(tag: DW_TAG_member, name: "drawtype", scope: !3312, file: !160, line: 98, baseType: !22, size: 32, offset: 1568)
!3384 = !DIDerivedType(tag: DW_TAG_member, name: "gevertdeformer", scope: !3312, file: !160, line: 99, baseType: !22, size: 32, offset: 1600)
!3385 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3312, file: !160, line: 100, baseType: !22, size: 32, offset: 1632)
!3386 = !DIDerivedType(tag: DW_TAG_member, name: "deformflag", scope: !3312, file: !160, line: 101, baseType: !48, size: 16, offset: 1664)
!3387 = !DIDerivedType(tag: DW_TAG_member, name: "pathflag", scope: !3312, file: !160, line: 102, baseType: !48, size: 16, offset: 1680)
!3388 = !DIDerivedType(tag: DW_TAG_member, name: "layer_used", scope: !3312, file: !160, line: 104, baseType: !231, size: 32, offset: 1696)
!3389 = !DIDerivedType(tag: DW_TAG_member, name: "layer", scope: !3312, file: !160, line: 105, baseType: !231, size: 32, offset: 1728)
!3390 = !DIDerivedType(tag: DW_TAG_member, name: "layer_protected", scope: !3312, file: !160, line: 105, baseType: !231, size: 32, offset: 1760)
!3391 = !DIDerivedType(tag: DW_TAG_member, name: "ghostep", scope: !3312, file: !160, line: 108, baseType: !48, size: 16, offset: 1792)
!3392 = !DIDerivedType(tag: DW_TAG_member, name: "ghostsize", scope: !3312, file: !160, line: 108, baseType: !48, size: 16, offset: 1808)
!3393 = !DIDerivedType(tag: DW_TAG_member, name: "ghosttype", scope: !3312, file: !160, line: 109, baseType: !48, size: 16, offset: 1824)
!3394 = !DIDerivedType(tag: DW_TAG_member, name: "pathsize", scope: !3312, file: !160, line: 109, baseType: !48, size: 16, offset: 1840)
!3395 = !DIDerivedType(tag: DW_TAG_member, name: "ghostsf", scope: !3312, file: !160, line: 110, baseType: !22, size: 32, offset: 1856)
!3396 = !DIDerivedType(tag: DW_TAG_member, name: "ghostef", scope: !3312, file: !160, line: 110, baseType: !22, size: 32, offset: 1888)
!3397 = !DIDerivedType(tag: DW_TAG_member, name: "pathsf", scope: !3312, file: !160, line: 111, baseType: !22, size: 32, offset: 1920)
!3398 = !DIDerivedType(tag: DW_TAG_member, name: "pathef", scope: !3312, file: !160, line: 111, baseType: !22, size: 32, offset: 1952)
!3399 = !DIDerivedType(tag: DW_TAG_member, name: "pathbc", scope: !3312, file: !160, line: 112, baseType: !22, size: 32, offset: 1984)
!3400 = !DIDerivedType(tag: DW_TAG_member, name: "pathac", scope: !3312, file: !160, line: 112, baseType: !22, size: 32, offset: 2016)
!3401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3402, size: 64)
!3402 = !DISubroutineType(types: !3403)
!3403 = !{!3404, !3406, !3408}
!3404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3405, size: 64)
!3405 = !DIDerivedType(tag: DW_TAG_typedef, name: "MDeformWeight", file: !206, line: 57, baseType: !2018)
!3406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3407, size: 64)
!3407 = !DIDerivedType(tag: DW_TAG_typedef, name: "MDeformVert", file: !206, line: 63, baseType: !2014)
!3408 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !22)
!3409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !250, size: 64)
!3410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3411, size: 64)
!3411 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPoly", file: !206, line: 85, baseType: !219)
!3412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !976, size: 64)
!3413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3414, size: 64)
!3414 = !DIDerivedType(tag: DW_TAG_typedef, name: "MFace", file: !206, line: 46, baseType: !668)
!3415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3416, size: 64)
!3416 = !DIDerivedType(tag: DW_TAG_typedef, name: "BLI_bitmap", file: !3417, line: 33, baseType: !231)
!3417 = !DIFile(filename: "blender/source/blender/blenlib/BLI_bitmap.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3418 = !{!0, !3419}
!3419 = !DIGlobalVariableExpression(var: !3420, expr: !DIExpression())
!3420 = distinct !DIGlobalVariable(name: "gradient_types", scope: !3421, file: !3, line: 3460, type: !3423, isLocal: true, isDefinition: true)
!3421 = distinct !DISubprogram(name: "PAINT_OT_weight_gradient", scope: !3, file: !3, line: 3457, type: !4, scopeLine: 3458, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2758, retainedNodes: !3422)
!3422 = !{}
!3423 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3424, size: 960, elements: !211)
!3424 = !DIDerivedType(tag: DW_TAG_typedef, name: "EnumPropertyItem", file: !25, line: 308, baseType: !3425)
!3425 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EnumPropertyItem", file: !25, line: 302, size: 320, elements: !3426)
!3426 = !{!3427, !3428, !3429, !3430, !3431}
!3427 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !3425, file: !25, line: 303, baseType: !22, size: 32)
!3428 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !3425, file: !25, line: 304, baseType: !12, size: 64, offset: 64)
!3429 = !DIDerivedType(tag: DW_TAG_member, name: "icon", scope: !3425, file: !25, line: 305, baseType: !22, size: 32, offset: 128)
!3430 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3425, file: !25, line: 306, baseType: !12, size: 64, offset: 192)
!3431 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !3425, file: !25, line: 307, baseType: !12, size: 64, offset: 256)
!3432 = !{i32 7, !"Dwarf Version", i32 4}
!3433 = !{i32 2, !"Debug Info Version", i32 3}
!3434 = !{i32 1, !"wchar_size", i32 4}
!3435 = !{!"clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)"}
!3436 = distinct !DISubprogram(name: "vertex_paint_mode_poll", scope: !3, file: !3, line: 137, type: !3437, scopeLine: 138, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2758, retainedNodes: !3422)
!3437 = !DISubroutineType(types: !3438)
!3438 = !{!22, !3439}
!3439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3440, size: 64)
!3440 = !DIDerivedType(tag: DW_TAG_typedef, name: "bContext", file: !1500, line: 69, baseType: !24)
!3441 = !DILocalVariable(name: "C", arg: 1, scope: !3436, file: !3, line: 137, type: !3439)
!3442 = !DILocation(line: 137, column: 38, scope: !3436)
!3443 = !DILocalVariable(name: "ob", scope: !3436, file: !3, line: 139, type: !3444)
!3444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3445, size: 64)
!3445 = !DIDerivedType(tag: DW_TAG_typedef, name: "Object", file: !164, line: 295, baseType: !163)
!3446 = !DILocation(line: 139, column: 10, scope: !3436)
!3447 = !DILocation(line: 139, column: 38, scope: !3436)
!3448 = !DILocation(line: 139, column: 15, scope: !3436)
!3449 = !DILocation(line: 141, column: 9, scope: !3436)
!3450 = !DILocation(line: 141, column: 12, scope: !3436)
!3451 = !DILocation(line: 141, column: 15, scope: !3436)
!3452 = !DILocation(line: 141, column: 19, scope: !3436)
!3453 = !DILocation(line: 141, column: 24, scope: !3436)
!3454 = !DILocation(line: 141, column: 48, scope: !3436)
!3455 = !DILocation(line: 141, column: 60, scope: !3436)
!3456 = !DILocation(line: 141, column: 64, scope: !3436)
!3457 = !DILocation(line: 141, column: 52, scope: !3436)
!3458 = !DILocation(line: 141, column: 71, scope: !3436)
!3459 = !DILocation(line: 0, scope: !3436)
!3460 = !DILocation(line: 141, column: 2, scope: !3436)
!3461 = distinct !DISubprogram(name: "vertex_paint_poll", scope: !3, file: !3, line: 144, type: !3437, scopeLine: 145, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2758, retainedNodes: !3422)
!3462 = !DILocalVariable(name: "C", arg: 1, scope: !3461, file: !3, line: 144, type: !3439)
!3463 = !DILocation(line: 144, column: 33, scope: !3461)
!3464 = !DILocation(line: 146, column: 29, scope: !3465)
!3465 = distinct !DILexicalBlock(scope: !3461, file: !3, line: 146, column: 6)
!3466 = !DILocation(line: 146, column: 6, scope: !3465)
!3467 = !DILocation(line: 146, column: 32, scope: !3465)
!3468 = !DILocation(line: 147, column: 46, scope: !3465)
!3469 = !DILocation(line: 147, column: 23, scope: !3465)
!3470 = !DILocation(line: 147, column: 50, scope: !3465)
!3471 = !DILocation(line: 147, column: 58, scope: !3465)
!3472 = !DILocation(line: 147, column: 6, scope: !3465)
!3473 = !DILocation(line: 146, column: 6, scope: !3461)
!3474 = !DILocalVariable(name: "sa", scope: !3475, file: !3, line: 149, type: !3476)
!3475 = distinct !DILexicalBlock(scope: !3465, file: !3, line: 148, column: 2)
!3476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3477, size: 64)
!3477 = !DIDerivedType(tag: DW_TAG_typedef, name: "ScrArea", file: !109, line: 228, baseType: !3478)
!3478 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ScrArea", file: !109, line: 203, size: 1280, elements: !3479)
!3479 = !{!3480, !3482, !3483, !3500, !3501, !3502, !3503, !3506, !3507, !3508, !3509, !3510, !3511, !3512, !3513, !3514, !3515, !3516, !3517, !3520, !3521, !3522, !3523}
!3480 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3478, file: !109, line: 204, baseType: !3481, size: 64)
!3481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3478, size: 64)
!3482 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3478, file: !109, line: 204, baseType: !3481, size: 64, offset: 64)
!3483 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3478, file: !109, line: 206, baseType: !3484, size: 64, offset: 128)
!3484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3485, size: 64)
!3485 = !DIDerivedType(tag: DW_TAG_typedef, name: "ScrVert", file: !109, line: 87, baseType: !3486)
!3486 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ScrVert", file: !109, line: 82, size: 256, elements: !3487)
!3487 = !{!3488, !3490, !3491, !3492, !3498, !3499}
!3488 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3486, file: !109, line: 83, baseType: !3489, size: 64)
!3489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3486, size: 64)
!3490 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3486, file: !109, line: 83, baseType: !3489, size: 64, offset: 64)
!3491 = !DIDerivedType(tag: DW_TAG_member, name: "newv", scope: !3486, file: !109, line: 83, baseType: !3489, size: 64, offset: 128)
!3492 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !3486, file: !109, line: 84, baseType: !3493, size: 32, offset: 192)
!3493 = !DIDerivedType(tag: DW_TAG_typedef, name: "vec2s", file: !1146, line: 43, baseType: !3494)
!3494 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vec2s", file: !1146, line: 41, size: 32, elements: !3495)
!3495 = !{!3496, !3497}
!3496 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !3494, file: !1146, line: 42, baseType: !48, size: 16)
!3497 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !3494, file: !1146, line: 42, baseType: !48, size: 16, offset: 16)
!3498 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3486, file: !109, line: 86, baseType: !48, size: 16, offset: 224)
!3499 = !DIDerivedType(tag: DW_TAG_member, name: "editflag", scope: !3486, file: !109, line: 86, baseType: !48, size: 16, offset: 240)
!3500 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3478, file: !109, line: 206, baseType: !3484, size: 64, offset: 192)
!3501 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !3478, file: !109, line: 206, baseType: !3484, size: 64, offset: 256)
!3502 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3478, file: !109, line: 206, baseType: !3484, size: 64, offset: 320)
!3503 = !DIDerivedType(tag: DW_TAG_member, name: "full", scope: !3478, file: !109, line: 207, baseType: !3504, size: 64, offset: 384)
!3504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3505, size: 64)
!3505 = !DIDerivedType(tag: DW_TAG_typedef, name: "bScreen", file: !109, line: 80, baseType: !108)
!3506 = !DIDerivedType(tag: DW_TAG_member, name: "totrct", scope: !3478, file: !109, line: 209, baseType: !1755, size: 128, offset: 448)
!3507 = !DIDerivedType(tag: DW_TAG_member, name: "spacetype", scope: !3478, file: !109, line: 211, baseType: !14, size: 8, offset: 576)
!3508 = !DIDerivedType(tag: DW_TAG_member, name: "butspacetype", scope: !3478, file: !109, line: 211, baseType: !14, size: 8, offset: 584)
!3509 = !DIDerivedType(tag: DW_TAG_member, name: "winx", scope: !3478, file: !109, line: 212, baseType: !48, size: 16, offset: 592)
!3510 = !DIDerivedType(tag: DW_TAG_member, name: "winy", scope: !3478, file: !109, line: 212, baseType: !48, size: 16, offset: 608)
!3511 = !DIDerivedType(tag: DW_TAG_member, name: "headertype", scope: !3478, file: !109, line: 214, baseType: !48, size: 16, offset: 624)
!3512 = !DIDerivedType(tag: DW_TAG_member, name: "do_refresh", scope: !3478, file: !109, line: 215, baseType: !48, size: 16, offset: 640)
!3513 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3478, file: !109, line: 216, baseType: !48, size: 16, offset: 656)
!3514 = !DIDerivedType(tag: DW_TAG_member, name: "region_active_win", scope: !3478, file: !109, line: 217, baseType: !48, size: 16, offset: 672)
!3515 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !3478, file: !109, line: 219, baseType: !14, size: 8, offset: 688)
!3516 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3478, file: !109, line: 219, baseType: !14, size: 8, offset: 696)
!3517 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3478, file: !109, line: 221, baseType: !3518, size: 64, offset: 704)
!3518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3519, size: 64)
!3519 = !DICompositeType(tag: DW_TAG_structure_type, name: "SpaceType", file: !109, line: 39, flags: DIFlagFwdDecl)
!3520 = !DIDerivedType(tag: DW_TAG_member, name: "spacedata", scope: !3478, file: !109, line: 223, baseType: !58, size: 128, offset: 768)
!3521 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !3478, file: !109, line: 224, baseType: !58, size: 128, offset: 896)
!3522 = !DIDerivedType(tag: DW_TAG_member, name: "handlers", scope: !3478, file: !109, line: 225, baseType: !58, size: 128, offset: 1024)
!3523 = !DIDerivedType(tag: DW_TAG_member, name: "actionzones", scope: !3478, file: !109, line: 227, baseType: !58, size: 128, offset: 1152)
!3524 = !DILocation(line: 149, column: 12, scope: !3475)
!3525 = !DILocation(line: 149, column: 29, scope: !3475)
!3526 = !DILocation(line: 149, column: 17, scope: !3475)
!3527 = !DILocation(line: 150, column: 7, scope: !3528)
!3528 = distinct !DILexicalBlock(scope: !3475, file: !3, line: 150, column: 7)
!3529 = !DILocation(line: 150, column: 10, scope: !3528)
!3530 = !DILocation(line: 150, column: 13, scope: !3528)
!3531 = !DILocation(line: 150, column: 17, scope: !3528)
!3532 = !DILocation(line: 150, column: 27, scope: !3528)
!3533 = !DILocation(line: 150, column: 7, scope: !3475)
!3534 = !DILocalVariable(name: "ar", scope: !3535, file: !3, line: 151, type: !3536)
!3535 = distinct !DILexicalBlock(scope: !3528, file: !3, line: 150, column: 44)
!3536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3537, size: 64)
!3537 = !DIDerivedType(tag: DW_TAG_typedef, name: "ARegion", file: !109, line: 267, baseType: !3538)
!3538 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ARegion", file: !109, line: 230, size: 3072, elements: !3539)
!3539 = !{!3540, !3542, !3543, !3576, !3577, !3578, !3579, !3580, !3581, !3582, !3583, !3584, !3585, !3586, !3587, !3588, !3589, !3590, !3591, !3592, !3593, !3596, !3597, !3598, !3599, !3600, !3601, !3602, !3603, !3604, !3605}
!3540 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3538, file: !109, line: 231, baseType: !3541, size: 64)
!3541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3538, size: 64)
!3542 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3538, file: !109, line: 231, baseType: !3541, size: 64, offset: 64)
!3543 = !DIDerivedType(tag: DW_TAG_member, name: "v2d", scope: !3538, file: !109, line: 233, baseType: !3544, size: 1280, offset: 128)
!3544 = !DIDerivedType(tag: DW_TAG_typedef, name: "View2D", file: !3545, line: 71, baseType: !3546)
!3545 = !DIFile(filename: "blender/source/blender/makesdna/DNA_view2d_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3546 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "View2D", file: !3545, line: 40, size: 1280, elements: !3547)
!3547 = !{!3548, !3549, !3550, !3551, !3552, !3553, !3554, !3555, !3556, !3557, !3558, !3559, !3560, !3561, !3562, !3563, !3564, !3565, !3566, !3567, !3568, !3569, !3570, !3571, !3572, !3575}
!3548 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !3546, file: !3545, line: 41, baseType: !1145, size: 128)
!3549 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !3546, file: !3545, line: 41, baseType: !1145, size: 128, offset: 128)
!3550 = !DIDerivedType(tag: DW_TAG_member, name: "vert", scope: !3546, file: !3545, line: 42, baseType: !1755, size: 128, offset: 256)
!3551 = !DIDerivedType(tag: DW_TAG_member, name: "hor", scope: !3546, file: !3545, line: 42, baseType: !1755, size: 128, offset: 384)
!3552 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !3546, file: !3545, line: 43, baseType: !1755, size: 128, offset: 512)
!3553 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !3546, file: !3545, line: 45, baseType: !1052, size: 64, offset: 640)
!3554 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !3546, file: !3545, line: 45, baseType: !1052, size: 64, offset: 704)
!3555 = !DIDerivedType(tag: DW_TAG_member, name: "minzoom", scope: !3546, file: !3545, line: 46, baseType: !210, size: 32, offset: 768)
!3556 = !DIDerivedType(tag: DW_TAG_member, name: "maxzoom", scope: !3546, file: !3545, line: 46, baseType: !210, size: 32, offset: 800)
!3557 = !DIDerivedType(tag: DW_TAG_member, name: "scroll", scope: !3546, file: !3545, line: 48, baseType: !48, size: 16, offset: 832)
!3558 = !DIDerivedType(tag: DW_TAG_member, name: "scroll_ui", scope: !3546, file: !3545, line: 49, baseType: !48, size: 16, offset: 848)
!3559 = !DIDerivedType(tag: DW_TAG_member, name: "keeptot", scope: !3546, file: !3545, line: 51, baseType: !48, size: 16, offset: 864)
!3560 = !DIDerivedType(tag: DW_TAG_member, name: "keepzoom", scope: !3546, file: !3545, line: 52, baseType: !48, size: 16, offset: 880)
!3561 = !DIDerivedType(tag: DW_TAG_member, name: "keepofs", scope: !3546, file: !3545, line: 53, baseType: !48, size: 16, offset: 896)
!3562 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3546, file: !3545, line: 55, baseType: !48, size: 16, offset: 912)
!3563 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !3546, file: !3545, line: 56, baseType: !48, size: 16, offset: 928)
!3564 = !DIDerivedType(tag: DW_TAG_member, name: "winx", scope: !3546, file: !3545, line: 58, baseType: !48, size: 16, offset: 944)
!3565 = !DIDerivedType(tag: DW_TAG_member, name: "winy", scope: !3546, file: !3545, line: 58, baseType: !48, size: 16, offset: 960)
!3566 = !DIDerivedType(tag: DW_TAG_member, name: "oldwinx", scope: !3546, file: !3545, line: 59, baseType: !48, size: 16, offset: 976)
!3567 = !DIDerivedType(tag: DW_TAG_member, name: "oldwiny", scope: !3546, file: !3545, line: 59, baseType: !48, size: 16, offset: 992)
!3568 = !DIDerivedType(tag: DW_TAG_member, name: "around", scope: !3546, file: !3545, line: 61, baseType: !48, size: 16, offset: 1008)
!3569 = !DIDerivedType(tag: DW_TAG_member, name: "tab_offset", scope: !3546, file: !3545, line: 63, baseType: !242, size: 64, offset: 1024)
!3570 = !DIDerivedType(tag: DW_TAG_member, name: "tab_num", scope: !3546, file: !3545, line: 64, baseType: !22, size: 32, offset: 1088)
!3571 = !DIDerivedType(tag: DW_TAG_member, name: "tab_cur", scope: !3546, file: !3545, line: 65, baseType: !22, size: 32, offset: 1120)
!3572 = !DIDerivedType(tag: DW_TAG_member, name: "sms", scope: !3546, file: !3545, line: 68, baseType: !3573, size: 64, offset: 1152)
!3573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3574, size: 64)
!3574 = !DICompositeType(tag: DW_TAG_structure_type, name: "SmoothView2DStore", file: !3545, line: 68, flags: DIFlagFwdDecl)
!3575 = !DIDerivedType(tag: DW_TAG_member, name: "smooth_timer", scope: !3546, file: !3545, line: 69, baseType: !94, size: 64, offset: 1216)
!3576 = !DIDerivedType(tag: DW_TAG_member, name: "winrct", scope: !3538, file: !109, line: 234, baseType: !1755, size: 128, offset: 1408)
!3577 = !DIDerivedType(tag: DW_TAG_member, name: "drawrct", scope: !3538, file: !109, line: 235, baseType: !1755, size: 128, offset: 1536)
!3578 = !DIDerivedType(tag: DW_TAG_member, name: "winx", scope: !3538, file: !109, line: 236, baseType: !48, size: 16, offset: 1664)
!3579 = !DIDerivedType(tag: DW_TAG_member, name: "winy", scope: !3538, file: !109, line: 236, baseType: !48, size: 16, offset: 1680)
!3580 = !DIDerivedType(tag: DW_TAG_member, name: "swinid", scope: !3538, file: !109, line: 238, baseType: !48, size: 16, offset: 1696)
!3581 = !DIDerivedType(tag: DW_TAG_member, name: "regiontype", scope: !3538, file: !109, line: 239, baseType: !48, size: 16, offset: 1712)
!3582 = !DIDerivedType(tag: DW_TAG_member, name: "alignment", scope: !3538, file: !109, line: 240, baseType: !48, size: 16, offset: 1728)
!3583 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3538, file: !109, line: 241, baseType: !48, size: 16, offset: 1744)
!3584 = !DIDerivedType(tag: DW_TAG_member, name: "fsize", scope: !3538, file: !109, line: 243, baseType: !210, size: 32, offset: 1760)
!3585 = !DIDerivedType(tag: DW_TAG_member, name: "sizex", scope: !3538, file: !109, line: 244, baseType: !48, size: 16, offset: 1792)
!3586 = !DIDerivedType(tag: DW_TAG_member, name: "sizey", scope: !3538, file: !109, line: 244, baseType: !48, size: 16, offset: 1808)
!3587 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw", scope: !3538, file: !109, line: 246, baseType: !48, size: 16, offset: 1824)
!3588 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_overlay", scope: !3538, file: !109, line: 247, baseType: !48, size: 16, offset: 1840)
!3589 = !DIDerivedType(tag: DW_TAG_member, name: "swap", scope: !3538, file: !109, line: 248, baseType: !48, size: 16, offset: 1856)
!3590 = !DIDerivedType(tag: DW_TAG_member, name: "overlap", scope: !3538, file: !109, line: 249, baseType: !48, size: 16, offset: 1872)
!3591 = !DIDerivedType(tag: DW_TAG_member, name: "flagfullscreen", scope: !3538, file: !109, line: 250, baseType: !48, size: 16, offset: 1888)
!3592 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3538, file: !109, line: 251, baseType: !48, size: 16, offset: 1904)
!3593 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3538, file: !109, line: 253, baseType: !3594, size: 64, offset: 1920)
!3594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3595, size: 64)
!3595 = !DICompositeType(tag: DW_TAG_structure_type, name: "ARegionType", file: !109, line: 42, flags: DIFlagFwdDecl)
!3596 = !DIDerivedType(tag: DW_TAG_member, name: "uiblocks", scope: !3538, file: !109, line: 255, baseType: !58, size: 128, offset: 1984)
!3597 = !DIDerivedType(tag: DW_TAG_member, name: "panels", scope: !3538, file: !109, line: 256, baseType: !58, size: 128, offset: 2112)
!3598 = !DIDerivedType(tag: DW_TAG_member, name: "panels_category_active", scope: !3538, file: !109, line: 257, baseType: !58, size: 128, offset: 2240)
!3599 = !DIDerivedType(tag: DW_TAG_member, name: "ui_lists", scope: !3538, file: !109, line: 258, baseType: !58, size: 128, offset: 2368)
!3600 = !DIDerivedType(tag: DW_TAG_member, name: "ui_previews", scope: !3538, file: !109, line: 259, baseType: !58, size: 128, offset: 2496)
!3601 = !DIDerivedType(tag: DW_TAG_member, name: "handlers", scope: !3538, file: !109, line: 260, baseType: !58, size: 128, offset: 2624)
!3602 = !DIDerivedType(tag: DW_TAG_member, name: "panels_category", scope: !3538, file: !109, line: 261, baseType: !58, size: 128, offset: 2752)
!3603 = !DIDerivedType(tag: DW_TAG_member, name: "regiontimer", scope: !3538, file: !109, line: 263, baseType: !94, size: 64, offset: 2880)
!3604 = !DIDerivedType(tag: DW_TAG_member, name: "headerstr", scope: !3538, file: !109, line: 265, baseType: !192, size: 64, offset: 2944)
!3605 = !DIDerivedType(tag: DW_TAG_member, name: "regiondata", scope: !3538, file: !109, line: 266, baseType: !56, size: 64, offset: 3008)
!3606 = !DILocation(line: 151, column: 13, scope: !3535)
!3607 = !DILocation(line: 151, column: 32, scope: !3535)
!3608 = !DILocation(line: 151, column: 18, scope: !3535)
!3609 = !DILocation(line: 152, column: 8, scope: !3610)
!3610 = distinct !DILexicalBlock(scope: !3535, file: !3, line: 152, column: 8)
!3611 = !DILocation(line: 152, column: 12, scope: !3610)
!3612 = !DILocation(line: 152, column: 23, scope: !3610)
!3613 = !DILocation(line: 152, column: 8, scope: !3535)
!3614 = !DILocation(line: 153, column: 5, scope: !3610)
!3615 = !DILocation(line: 154, column: 3, scope: !3535)
!3616 = !DILocation(line: 155, column: 2, scope: !3475)
!3617 = !DILocation(line: 156, column: 2, scope: !3461)
!3618 = !DILocation(line: 157, column: 1, scope: !3461)
!3619 = distinct !DISubprogram(name: "weight_paint_mode_poll", scope: !3, file: !3, line: 159, type: !3437, scopeLine: 160, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2758, retainedNodes: !3422)
!3620 = !DILocalVariable(name: "C", arg: 1, scope: !3619, file: !3, line: 159, type: !3439)
!3621 = !DILocation(line: 159, column: 38, scope: !3619)
!3622 = !DILocalVariable(name: "ob", scope: !3619, file: !3, line: 161, type: !3444)
!3623 = !DILocation(line: 161, column: 10, scope: !3619)
!3624 = !DILocation(line: 161, column: 38, scope: !3619)
!3625 = !DILocation(line: 161, column: 15, scope: !3619)
!3626 = !DILocation(line: 163, column: 9, scope: !3619)
!3627 = !DILocation(line: 163, column: 12, scope: !3619)
!3628 = !DILocation(line: 163, column: 15, scope: !3619)
!3629 = !DILocation(line: 163, column: 19, scope: !3619)
!3630 = !DILocation(line: 163, column: 24, scope: !3619)
!3631 = !DILocation(line: 163, column: 48, scope: !3619)
!3632 = !DILocation(line: 163, column: 60, scope: !3619)
!3633 = !DILocation(line: 163, column: 64, scope: !3619)
!3634 = !DILocation(line: 163, column: 52, scope: !3619)
!3635 = !DILocation(line: 163, column: 71, scope: !3619)
!3636 = !DILocation(line: 0, scope: !3619)
!3637 = !DILocation(line: 163, column: 2, scope: !3619)
!3638 = distinct !DISubprogram(name: "weight_paint_poll", scope: !3, file: !3, line: 166, type: !3437, scopeLine: 167, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2758, retainedNodes: !3422)
!3639 = !DILocalVariable(name: "C", arg: 1, scope: !3638, file: !3, line: 166, type: !3439)
!3640 = !DILocation(line: 166, column: 33, scope: !3638)
!3641 = !DILocalVariable(name: "ob", scope: !3638, file: !3, line: 168, type: !3444)
!3642 = !DILocation(line: 168, column: 10, scope: !3638)
!3643 = !DILocation(line: 168, column: 38, scope: !3638)
!3644 = !DILocation(line: 168, column: 15, scope: !3638)
!3645 = !DILocalVariable(name: "sa", scope: !3638, file: !3, line: 169, type: !3476)
!3646 = !DILocation(line: 169, column: 11, scope: !3638)
!3647 = !DILocation(line: 171, column: 7, scope: !3648)
!3648 = distinct !DILexicalBlock(scope: !3638, file: !3, line: 171, column: 6)
!3649 = !DILocation(line: 171, column: 10, scope: !3648)
!3650 = !DILocation(line: 171, column: 19, scope: !3648)
!3651 = !DILocation(line: 172, column: 7, scope: !3648)
!3652 = !DILocation(line: 172, column: 11, scope: !3648)
!3653 = !DILocation(line: 172, column: 16, scope: !3648)
!3654 = !DILocation(line: 172, column: 40, scope: !3648)
!3655 = !DILocation(line: 173, column: 47, scope: !3648)
!3656 = !DILocation(line: 173, column: 24, scope: !3648)
!3657 = !DILocation(line: 173, column: 51, scope: !3648)
!3658 = !DILocation(line: 173, column: 59, scope: !3648)
!3659 = !DILocation(line: 173, column: 7, scope: !3648)
!3660 = !DILocation(line: 173, column: 66, scope: !3648)
!3661 = !DILocation(line: 173, column: 75, scope: !3648)
!3662 = !DILocation(line: 174, column: 24, scope: !3648)
!3663 = !DILocation(line: 174, column: 12, scope: !3648)
!3664 = !DILocation(line: 174, column: 10, scope: !3648)
!3665 = !DILocation(line: 174, column: 28, scope: !3648)
!3666 = !DILocation(line: 175, column: 7, scope: !3648)
!3667 = !DILocation(line: 175, column: 11, scope: !3648)
!3668 = !DILocation(line: 175, column: 21, scope: !3648)
!3669 = !DILocation(line: 171, column: 6, scope: !3638)
!3670 = !DILocalVariable(name: "ar", scope: !3671, file: !3, line: 177, type: !3536)
!3671 = distinct !DILexicalBlock(scope: !3648, file: !3, line: 176, column: 2)
!3672 = !DILocation(line: 177, column: 12, scope: !3671)
!3673 = !DILocation(line: 177, column: 31, scope: !3671)
!3674 = !DILocation(line: 177, column: 17, scope: !3671)
!3675 = !DILocation(line: 178, column: 7, scope: !3676)
!3676 = distinct !DILexicalBlock(scope: !3671, file: !3, line: 178, column: 7)
!3677 = !DILocation(line: 178, column: 11, scope: !3676)
!3678 = !DILocation(line: 178, column: 22, scope: !3676)
!3679 = !DILocation(line: 178, column: 7, scope: !3671)
!3680 = !DILocation(line: 179, column: 4, scope: !3681)
!3681 = distinct !DILexicalBlock(scope: !3676, file: !3, line: 178, column: 42)
!3682 = !DILocation(line: 181, column: 2, scope: !3671)
!3683 = !DILocation(line: 182, column: 2, scope: !3638)
!3684 = !DILocation(line: 183, column: 1, scope: !3638)
!3685 = distinct !DISubprogram(name: "vpaint_get_current_col", scope: !3, file: !3, line: 200, type: !3686, scopeLine: 201, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2758, retainedNodes: !3422)
!3686 = !DISubroutineType(types: !3687)
!3687 = !{!231, !3688, !1538}
!3688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3689, size: 64)
!3689 = !DIDerivedType(tag: DW_TAG_typedef, name: "Scene", file: !154, line: 1299, baseType: !153)
!3690 = !DILocalVariable(name: "scene", arg: 1, scope: !3685, file: !3, line: 200, type: !3688)
!3691 = !DILocation(line: 200, column: 44, scope: !3685)
!3692 = !DILocalVariable(name: "vp", arg: 2, scope: !3685, file: !3, line: 200, type: !1538)
!3693 = !DILocation(line: 200, column: 59, scope: !3685)
!3694 = !DILocalVariable(name: "brush", scope: !3685, file: !3, line: 202, type: !3695)
!3695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3696, size: 64)
!3696 = !DIDerivedType(tag: DW_TAG_typedef, name: "Brush", file: !1549, line: 138, baseType: !1548)
!3697 = !DILocation(line: 202, column: 9, scope: !3685)
!3698 = !DILocation(line: 202, column: 34, scope: !3685)
!3699 = !DILocation(line: 202, column: 38, scope: !3685)
!3700 = !DILocation(line: 202, column: 17, scope: !3685)
!3701 = !DILocalVariable(name: "col", scope: !3685, file: !3, line: 203, type: !2004)
!3702 = !DILocation(line: 203, column: 16, scope: !3685)
!3703 = !DILocation(line: 204, column: 21, scope: !3685)
!3704 = !DILocation(line: 204, column: 46, scope: !3685)
!3705 = !DILocation(line: 204, column: 53, scope: !3685)
!3706 = !DILocation(line: 204, column: 26, scope: !3685)
!3707 = !DILocation(line: 204, column: 2, scope: !3685)
!3708 = !DILocation(line: 205, column: 2, scope: !3685)
!3709 = !DILocation(line: 205, column: 9, scope: !3685)
!3710 = !DILocation(line: 206, column: 9, scope: !3685)
!3711 = !DILocation(line: 206, column: 2, scope: !3685)
!3712 = distinct !DISubprogram(name: "ED_vpaint_fill", scope: !3, file: !3, line: 440, type: !3713, scopeLine: 441, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2758, retainedNodes: !3422)
!3713 = !DISubroutineType(types: !3714)
!3714 = !{!259, !3444, !231}
!3715 = !DILocalVariable(name: "ob", arg: 1, scope: !3712, file: !3, line: 440, type: !3444)
!3716 = !DILocation(line: 440, column: 29, scope: !3712)
!3717 = !DILocalVariable(name: "paintcol", arg: 2, scope: !3712, file: !3, line: 440, type: !231)
!3718 = !DILocation(line: 440, column: 46, scope: !3712)
!3719 = !DILocalVariable(name: "me", scope: !3712, file: !3, line: 442, type: !3187)
!3720 = !DILocation(line: 442, column: 8, scope: !3712)
!3721 = !DILocalVariable(name: "mp", scope: !3712, file: !3, line: 443, type: !3410)
!3722 = !DILocation(line: 443, column: 9, scope: !3712)
!3723 = !DILocalVariable(name: "i", scope: !3712, file: !3, line: 444, type: !22)
!3724 = !DILocation(line: 444, column: 6, scope: !3712)
!3725 = !DILocalVariable(name: "j", scope: !3712, file: !3, line: 444, type: !22)
!3726 = !DILocation(line: 444, column: 9, scope: !3712)
!3727 = !DILocalVariable(name: "selected", scope: !3712, file: !3, line: 445, type: !259)
!3728 = !DILocation(line: 445, column: 7, scope: !3712)
!3729 = !DILocation(line: 447, column: 34, scope: !3730)
!3730 = distinct !DILexicalBlock(scope: !3712, file: !3, line: 447, column: 6)
!3731 = !DILocation(line: 447, column: 13, scope: !3730)
!3732 = !DILocation(line: 447, column: 11, scope: !3730)
!3733 = !DILocation(line: 447, column: 39, scope: !3730)
!3734 = !DILocation(line: 447, column: 48, scope: !3730)
!3735 = !DILocation(line: 448, column: 7, scope: !3730)
!3736 = !DILocation(line: 448, column: 11, scope: !3730)
!3737 = !DILocation(line: 448, column: 20, scope: !3730)
!3738 = !DILocation(line: 448, column: 28, scope: !3730)
!3739 = !DILocation(line: 448, column: 47, scope: !3730)
!3740 = !DILocation(line: 448, column: 32, scope: !3730)
!3741 = !DILocation(line: 448, column: 51, scope: !3730)
!3742 = !DILocation(line: 447, column: 6, scope: !3712)
!3743 = !DILocation(line: 450, column: 3, scope: !3744)
!3744 = distinct !DILexicalBlock(scope: !3730, file: !3, line: 449, column: 2)
!3745 = !DILocation(line: 453, column: 14, scope: !3712)
!3746 = !DILocation(line: 453, column: 18, scope: !3712)
!3747 = !DILocation(line: 453, column: 27, scope: !3712)
!3748 = !DILocation(line: 453, column: 53, scope: !3712)
!3749 = !DILocation(line: 453, column: 13, scope: !3712)
!3750 = !DILocation(line: 453, column: 11, scope: !3712)
!3751 = !DILocation(line: 455, column: 7, scope: !3712)
!3752 = !DILocation(line: 455, column: 11, scope: !3712)
!3753 = !DILocation(line: 455, column: 5, scope: !3712)
!3754 = !DILocation(line: 456, column: 9, scope: !3755)
!3755 = distinct !DILexicalBlock(scope: !3712, file: !3, line: 456, column: 2)
!3756 = !DILocation(line: 456, column: 7, scope: !3755)
!3757 = !DILocation(line: 456, column: 14, scope: !3758)
!3758 = distinct !DILexicalBlock(scope: !3755, file: !3, line: 456, column: 2)
!3759 = !DILocation(line: 456, column: 18, scope: !3758)
!3760 = !DILocation(line: 456, column: 22, scope: !3758)
!3761 = !DILocation(line: 456, column: 16, scope: !3758)
!3762 = !DILocation(line: 456, column: 2, scope: !3755)
!3763 = !DILocalVariable(name: "lcol", scope: !3764, file: !3, line: 457, type: !3765)
!3764 = distinct !DILexicalBlock(scope: !3758, file: !3, line: 456, column: 42)
!3765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3766, size: 64)
!3766 = !DIDerivedType(tag: DW_TAG_typedef, name: "MLoopCol", file: !206, line: 131, baseType: !3225)
!3767 = !DILocation(line: 457, column: 13, scope: !3764)
!3768 = !DILocation(line: 457, column: 20, scope: !3764)
!3769 = !DILocation(line: 457, column: 24, scope: !3764)
!3770 = !DILocation(line: 457, column: 35, scope: !3764)
!3771 = !DILocation(line: 457, column: 39, scope: !3764)
!3772 = !DILocation(line: 457, column: 33, scope: !3764)
!3773 = !DILocation(line: 459, column: 7, scope: !3774)
!3774 = distinct !DILexicalBlock(scope: !3764, file: !3, line: 459, column: 7)
!3775 = !DILocation(line: 459, column: 16, scope: !3774)
!3776 = !DILocation(line: 459, column: 21, scope: !3774)
!3777 = !DILocation(line: 459, column: 25, scope: !3774)
!3778 = !DILocation(line: 459, column: 30, scope: !3774)
!3779 = !DILocation(line: 459, column: 7, scope: !3764)
!3780 = !DILocation(line: 460, column: 4, scope: !3774)
!3781 = !DILocation(line: 462, column: 10, scope: !3782)
!3782 = distinct !DILexicalBlock(scope: !3764, file: !3, line: 462, column: 3)
!3783 = !DILocation(line: 462, column: 8, scope: !3782)
!3784 = !DILocation(line: 462, column: 15, scope: !3785)
!3785 = distinct !DILexicalBlock(scope: !3782, file: !3, line: 462, column: 3)
!3786 = !DILocation(line: 462, column: 19, scope: !3785)
!3787 = !DILocation(line: 462, column: 23, scope: !3785)
!3788 = !DILocation(line: 462, column: 17, scope: !3785)
!3789 = !DILocation(line: 462, column: 3, scope: !3782)
!3790 = !DILocation(line: 463, column: 19, scope: !3791)
!3791 = distinct !DILexicalBlock(scope: !3785, file: !3, line: 462, column: 45)
!3792 = !DILocation(line: 463, column: 12, scope: !3791)
!3793 = !DILocation(line: 463, column: 4, scope: !3791)
!3794 = !DILocation(line: 463, column: 17, scope: !3791)
!3795 = !DILocation(line: 464, column: 3, scope: !3791)
!3796 = !DILocation(line: 462, column: 33, scope: !3785)
!3797 = !DILocation(line: 462, column: 41, scope: !3785)
!3798 = !DILocation(line: 462, column: 3, scope: !3785)
!3799 = distinct !{!3799, !3789, !3800}
!3800 = !DILocation(line: 464, column: 3, scope: !3782)
!3801 = !DILocation(line: 465, column: 2, scope: !3764)
!3802 = !DILocation(line: 456, column: 32, scope: !3758)
!3803 = !DILocation(line: 456, column: 38, scope: !3758)
!3804 = !DILocation(line: 456, column: 2, scope: !3758)
!3805 = distinct !{!3805, !3762, !3806}
!3806 = !DILocation(line: 465, column: 2, scope: !3755)
!3807 = !DILocation(line: 468, column: 26, scope: !3712)
!3808 = !DILocation(line: 468, column: 2, scope: !3712)
!3809 = !DILocation(line: 470, column: 21, scope: !3712)
!3810 = !DILocation(line: 470, column: 25, scope: !3712)
!3811 = !DILocation(line: 470, column: 2, scope: !3712)
!3812 = !DILocation(line: 472, column: 2, scope: !3712)
!3813 = !DILocation(line: 473, column: 1, scope: !3712)
!3814 = distinct !DISubprogram(name: "make_vertexcol", scope: !3, file: !3, line: 342, type: !3815, scopeLine: 343, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2758, retainedNodes: !3422)
!3815 = !DISubroutineType(types: !3816)
!3816 = !{!259, !3444}
!3817 = !DILocalVariable(name: "ob", arg: 1, scope: !3814, file: !3, line: 342, type: !3444)
!3818 = !DILocation(line: 342, column: 36, scope: !3814)
!3819 = !DILocalVariable(name: "me", scope: !3814, file: !3, line: 344, type: !3187)
!3820 = !DILocation(line: 344, column: 8, scope: !3814)
!3821 = !DILocation(line: 346, column: 7, scope: !3822)
!3822 = distinct !DILexicalBlock(scope: !3814, file: !3, line: 346, column: 6)
!3823 = !DILocation(line: 346, column: 11, scope: !3822)
!3824 = !DILocation(line: 346, column: 14, scope: !3822)
!3825 = !DILocation(line: 346, column: 6, scope: !3822)
!3826 = !DILocation(line: 346, column: 19, scope: !3822)
!3827 = !DILocation(line: 347, column: 34, scope: !3822)
!3828 = !DILocation(line: 347, column: 13, scope: !3822)
!3829 = !DILocation(line: 347, column: 11, scope: !3822)
!3830 = !DILocation(line: 347, column: 39, scope: !3822)
!3831 = !DILocation(line: 347, column: 48, scope: !3822)
!3832 = !DILocation(line: 348, column: 7, scope: !3822)
!3833 = !DILocation(line: 348, column: 11, scope: !3822)
!3834 = !DILocation(line: 348, column: 19, scope: !3822)
!3835 = !DILocation(line: 348, column: 25, scope: !3822)
!3836 = !DILocation(line: 349, column: 7, scope: !3822)
!3837 = !DILocation(line: 349, column: 11, scope: !3822)
!3838 = !DILocation(line: 349, column: 6, scope: !3822)
!3839 = !DILocation(line: 346, column: 6, scope: !3814)
!3840 = !DILocation(line: 351, column: 3, scope: !3841)
!3841 = distinct !DILexicalBlock(scope: !3822, file: !3, line: 350, column: 2)
!3842 = !DILocation(line: 355, column: 7, scope: !3843)
!3843 = distinct !DILexicalBlock(scope: !3814, file: !3, line: 355, column: 6)
!3844 = !DILocation(line: 355, column: 11, scope: !3843)
!3845 = !DILocation(line: 355, column: 20, scope: !3843)
!3846 = !DILocation(line: 355, column: 23, scope: !3843)
!3847 = !DILocation(line: 355, column: 27, scope: !3843)
!3848 = !DILocation(line: 355, column: 6, scope: !3814)
!3849 = !DILocation(line: 356, column: 8, scope: !3850)
!3850 = distinct !DILexicalBlock(scope: !3851, file: !3, line: 356, column: 7)
!3851 = distinct !DILexicalBlock(scope: !3843, file: !3, line: 355, column: 36)
!3852 = !DILocation(line: 356, column: 12, scope: !3850)
!3853 = !DILocation(line: 356, column: 7, scope: !3851)
!3854 = !DILocation(line: 357, column: 26, scope: !3855)
!3855 = distinct !DILexicalBlock(scope: !3850, file: !3, line: 356, column: 18)
!3856 = !DILocation(line: 357, column: 30, scope: !3855)
!3857 = !DILocation(line: 357, column: 64, scope: !3855)
!3858 = !DILocation(line: 357, column: 68, scope: !3855)
!3859 = !DILocation(line: 357, column: 4, scope: !3855)
!3860 = !DILocation(line: 358, column: 3, scope: !3855)
!3861 = !DILocation(line: 359, column: 8, scope: !3862)
!3862 = distinct !DILexicalBlock(scope: !3851, file: !3, line: 359, column: 7)
!3863 = !DILocation(line: 359, column: 12, scope: !3862)
!3864 = !DILocation(line: 359, column: 7, scope: !3851)
!3865 = !DILocation(line: 360, column: 26, scope: !3866)
!3866 = distinct !DILexicalBlock(scope: !3862, file: !3, line: 359, column: 22)
!3867 = !DILocation(line: 360, column: 30, scope: !3866)
!3868 = !DILocation(line: 360, column: 68, scope: !3866)
!3869 = !DILocation(line: 360, column: 72, scope: !3866)
!3870 = !DILocation(line: 360, column: 4, scope: !3866)
!3871 = !DILocation(line: 361, column: 3, scope: !3866)
!3872 = !DILocation(line: 362, column: 39, scope: !3851)
!3873 = !DILocation(line: 362, column: 3, scope: !3851)
!3874 = !DILocation(line: 363, column: 2, scope: !3851)
!3875 = !DILocation(line: 365, column: 23, scope: !3814)
!3876 = !DILocation(line: 365, column: 27, scope: !3814)
!3877 = !DILocation(line: 365, column: 2, scope: !3814)
!3878 = !DILocation(line: 367, column: 21, scope: !3814)
!3879 = !DILocation(line: 367, column: 25, scope: !3814)
!3880 = !DILocation(line: 367, column: 2, scope: !3814)
!3881 = !DILocation(line: 369, column: 10, scope: !3814)
!3882 = !DILocation(line: 369, column: 14, scope: !3814)
!3883 = !DILocation(line: 369, column: 23, scope: !3814)
!3884 = !DILocation(line: 369, column: 9, scope: !3814)
!3885 = !DILocation(line: 369, column: 2, scope: !3814)
!3886 = !DILocation(line: 370, column: 1, scope: !3814)
!3887 = distinct !DISubprogram(name: "ED_wpaint_fill", scope: !3, file: !3, line: 477, type: !3888, scopeLine: 478, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2758, retainedNodes: !3422)
!3888 = !DISubroutineType(types: !3889)
!3889 = !{!259, !1538, !3444, !210}
!3890 = !DILocalVariable(name: "wp", arg: 1, scope: !3887, file: !3, line: 477, type: !1538)
!3891 = !DILocation(line: 477, column: 29, scope: !3887)
!3892 = !DILocalVariable(name: "ob", arg: 2, scope: !3887, file: !3, line: 477, type: !3444)
!3893 = !DILocation(line: 477, column: 41, scope: !3887)
!3894 = !DILocalVariable(name: "paintweight", arg: 3, scope: !3887, file: !3, line: 477, type: !210)
!3895 = !DILocation(line: 477, column: 51, scope: !3887)
!3896 = !DILocalVariable(name: "me", scope: !3887, file: !3, line: 479, type: !3187)
!3897 = !DILocation(line: 479, column: 8, scope: !3887)
!3898 = !DILocation(line: 479, column: 13, scope: !3887)
!3899 = !DILocation(line: 479, column: 17, scope: !3887)
!3900 = !DILocalVariable(name: "mp", scope: !3887, file: !3, line: 480, type: !3410)
!3901 = !DILocation(line: 480, column: 9, scope: !3887)
!3902 = !DILocalVariable(name: "dw", scope: !3887, file: !3, line: 481, type: !3404)
!3903 = !DILocation(line: 481, column: 17, scope: !3887)
!3904 = !DILocalVariable(name: "dw_prev", scope: !3887, file: !3, line: 481, type: !3404)
!3905 = !DILocation(line: 481, column: 22, scope: !3887)
!3906 = !DILocalVariable(name: "vgroup_active", scope: !3887, file: !3, line: 482, type: !22)
!3907 = !DILocation(line: 482, column: 6, scope: !3887)
!3908 = !DILocalVariable(name: "vgroup_mirror", scope: !3887, file: !3, line: 482, type: !22)
!3909 = !DILocation(line: 482, column: 21, scope: !3887)
!3910 = !DILocalVariable(name: "index", scope: !3887, file: !3, line: 483, type: !231)
!3911 = !DILocation(line: 483, column: 15, scope: !3887)
!3912 = !DILocalVariable(name: "topology", scope: !3887, file: !3, line: 484, type: !976)
!3913 = !DILocation(line: 484, column: 13, scope: !3887)
!3914 = !DILocation(line: 484, column: 25, scope: !3887)
!3915 = !DILocation(line: 484, column: 29, scope: !3887)
!3916 = !DILocation(line: 484, column: 38, scope: !3887)
!3917 = !DILocation(line: 484, column: 61, scope: !3887)
!3918 = !DILocation(line: 484, column: 24, scope: !3887)
!3919 = !DILocalVariable(name: "paint_selmode", scope: !3887, file: !3, line: 487, type: !806)
!3920 = !DILocation(line: 487, column: 14, scope: !3887)
!3921 = !DILocation(line: 487, column: 30, scope: !3887)
!3922 = !DILocation(line: 489, column: 6, scope: !3923)
!3923 = distinct !DILexicalBlock(scope: !3887, file: !3, line: 489, column: 6)
!3924 = !DILocation(line: 489, column: 10, scope: !3923)
!3925 = !DILocation(line: 489, column: 18, scope: !3923)
!3926 = !DILocation(line: 489, column: 23, scope: !3923)
!3927 = !DILocation(line: 489, column: 26, scope: !3923)
!3928 = !DILocation(line: 489, column: 30, scope: !3923)
!3929 = !DILocation(line: 489, column: 36, scope: !3923)
!3930 = !DILocation(line: 489, column: 44, scope: !3923)
!3931 = !DILocation(line: 489, column: 48, scope: !3923)
!3932 = !DILocation(line: 489, column: 52, scope: !3923)
!3933 = !DILocation(line: 489, column: 6, scope: !3887)
!3934 = !DILocation(line: 490, column: 3, scope: !3935)
!3935 = distinct !DILexicalBlock(scope: !3923, file: !3, line: 489, column: 59)
!3936 = !DILocation(line: 493, column: 18, scope: !3887)
!3937 = !DILocation(line: 493, column: 22, scope: !3887)
!3938 = !DILocation(line: 493, column: 29, scope: !3887)
!3939 = !DILocation(line: 493, column: 16, scope: !3887)
!3940 = !DILocation(line: 496, column: 6, scope: !3941)
!3941 = distinct !DILexicalBlock(scope: !3887, file: !3, line: 496, column: 6)
!3942 = !DILocation(line: 496, column: 10, scope: !3941)
!3943 = !DILocation(line: 496, column: 19, scope: !3941)
!3944 = !DILocation(line: 496, column: 6, scope: !3887)
!3945 = !DILocation(line: 497, column: 47, scope: !3946)
!3946 = distinct !DILexicalBlock(scope: !3941, file: !3, line: 496, column: 39)
!3947 = !DILocation(line: 497, column: 51, scope: !3946)
!3948 = !DILocation(line: 497, column: 19, scope: !3946)
!3949 = !DILocation(line: 497, column: 17, scope: !3946)
!3950 = !DILocation(line: 498, column: 2, scope: !3946)
!3951 = !DILocation(line: 500, column: 19, scope: !3887)
!3952 = !DILocation(line: 500, column: 23, scope: !3887)
!3953 = !DILocation(line: 500, column: 27, scope: !3887)
!3954 = !DILocation(line: 500, column: 34, scope: !3887)
!3955 = !DILocation(line: 500, column: 38, scope: !3887)
!3956 = !DILocation(line: 500, column: 2, scope: !3887)
!3957 = !DILocation(line: 502, column: 13, scope: !3958)
!3958 = distinct !DILexicalBlock(scope: !3887, file: !3, line: 502, column: 2)
!3959 = !DILocation(line: 502, column: 23, scope: !3958)
!3960 = !DILocation(line: 502, column: 27, scope: !3958)
!3961 = !DILocation(line: 502, column: 21, scope: !3958)
!3962 = !DILocation(line: 502, column: 7, scope: !3958)
!3963 = !DILocation(line: 502, column: 34, scope: !3964)
!3964 = distinct !DILexicalBlock(scope: !3958, file: !3, line: 502, column: 2)
!3965 = !DILocation(line: 502, column: 42, scope: !3964)
!3966 = !DILocation(line: 502, column: 46, scope: !3964)
!3967 = !DILocation(line: 502, column: 40, scope: !3964)
!3968 = !DILocation(line: 502, column: 2, scope: !3958)
!3969 = !DILocalVariable(name: "fidx", scope: !3970, file: !3, line: 503, type: !231)
!3970 = distinct !DILexicalBlock(scope: !3964, file: !3, line: 502, column: 70)
!3971 = !DILocation(line: 503, column: 16, scope: !3970)
!3972 = !DILocation(line: 503, column: 23, scope: !3970)
!3973 = !DILocation(line: 503, column: 27, scope: !3970)
!3974 = !DILocation(line: 503, column: 35, scope: !3970)
!3975 = !DILocation(line: 505, column: 8, scope: !3976)
!3976 = distinct !DILexicalBlock(scope: !3970, file: !3, line: 505, column: 7)
!3977 = !DILocation(line: 505, column: 22, scope: !3976)
!3978 = !DILocation(line: 505, column: 42, scope: !3976)
!3979 = !DILocation(line: 505, column: 47, scope: !3976)
!3980 = !DILocation(line: 505, column: 51, scope: !3976)
!3981 = !DILocation(line: 505, column: 56, scope: !3976)
!3982 = !DILocation(line: 505, column: 7, scope: !3970)
!3983 = !DILocation(line: 506, column: 4, scope: !3984)
!3984 = distinct !DILexicalBlock(scope: !3976, file: !3, line: 505, column: 72)
!3985 = !DILocation(line: 509, column: 3, scope: !3970)
!3986 = !DILocalVariable(name: "vidx", scope: !3987, file: !3, line: 510, type: !231)
!3987 = distinct !DILexicalBlock(scope: !3970, file: !3, line: 509, column: 6)
!3988 = !DILocation(line: 510, column: 17, scope: !3987)
!3989 = !DILocation(line: 510, column: 24, scope: !3987)
!3990 = !DILocation(line: 510, column: 28, scope: !3987)
!3991 = !DILocation(line: 510, column: 34, scope: !3987)
!3992 = !DILocation(line: 510, column: 38, scope: !3987)
!3993 = !DILocation(line: 510, column: 50, scope: !3987)
!3994 = !DILocation(line: 510, column: 48, scope: !3987)
!3995 = !DILocation(line: 510, column: 56, scope: !3987)
!3996 = !DILocation(line: 512, column: 9, scope: !3997)
!3997 = distinct !DILexicalBlock(scope: !3987, file: !3, line: 512, column: 8)
!3998 = !DILocation(line: 512, column: 13, scope: !3997)
!3999 = !DILocation(line: 512, column: 19, scope: !3997)
!4000 = !DILocation(line: 512, column: 25, scope: !3997)
!4001 = !DILocation(line: 512, column: 8, scope: !3987)
!4002 = !DILocation(line: 513, column: 10, scope: !4003)
!4003 = distinct !DILexicalBlock(scope: !4004, file: !3, line: 513, column: 9)
!4004 = distinct !DILexicalBlock(scope: !3997, file: !3, line: 512, column: 31)
!4005 = !DILocation(line: 513, column: 24, scope: !4003)
!4006 = !DILocation(line: 513, column: 46, scope: !4003)
!4007 = !DILocation(line: 513, column: 51, scope: !4003)
!4008 = !DILocation(line: 513, column: 55, scope: !4003)
!4009 = !DILocation(line: 513, column: 61, scope: !4003)
!4010 = !DILocation(line: 513, column: 67, scope: !4003)
!4011 = !DILocation(line: 513, column: 72, scope: !4003)
!4012 = !DILocation(line: 513, column: 9, scope: !4004)
!4013 = !DILocation(line: 514, column: 6, scope: !4014)
!4014 = distinct !DILexicalBlock(scope: !4003, file: !3, line: 513, column: 83)
!4015 = !DILocation(line: 517, column: 32, scope: !4004)
!4016 = !DILocation(line: 517, column: 36, scope: !4004)
!4017 = !DILocation(line: 517, column: 42, scope: !4004)
!4018 = !DILocation(line: 517, column: 49, scope: !4004)
!4019 = !DILocation(line: 517, column: 10, scope: !4004)
!4020 = !DILocation(line: 517, column: 8, scope: !4004)
!4021 = !DILocation(line: 518, column: 9, scope: !4022)
!4022 = distinct !DILexicalBlock(scope: !4004, file: !3, line: 518, column: 9)
!4023 = !DILocation(line: 518, column: 9, scope: !4004)
!4024 = !DILocation(line: 519, column: 37, scope: !4025)
!4025 = distinct !DILexicalBlock(scope: !4022, file: !3, line: 518, column: 13)
!4026 = !DILocation(line: 519, column: 41, scope: !4025)
!4027 = !DILocation(line: 519, column: 55, scope: !4025)
!4028 = !DILocation(line: 519, column: 53, scope: !4025)
!4029 = !DILocation(line: 519, column: 61, scope: !4025)
!4030 = !DILocation(line: 519, column: 16, scope: !4025)
!4031 = !DILocation(line: 519, column: 14, scope: !4025)
!4032 = !DILocation(line: 520, column: 24, scope: !4025)
!4033 = !DILocation(line: 520, column: 28, scope: !4025)
!4034 = !DILocation(line: 520, column: 6, scope: !4025)
!4035 = !DILocation(line: 520, column: 15, scope: !4025)
!4036 = !DILocation(line: 520, column: 22, scope: !4025)
!4037 = !DILocation(line: 521, column: 19, scope: !4025)
!4038 = !DILocation(line: 521, column: 6, scope: !4025)
!4039 = !DILocation(line: 521, column: 10, scope: !4025)
!4040 = !DILocation(line: 521, column: 17, scope: !4025)
!4041 = !DILocation(line: 523, column: 10, scope: !4042)
!4042 = distinct !DILexicalBlock(scope: !4025, file: !3, line: 523, column: 10)
!4043 = !DILocation(line: 523, column: 14, scope: !4042)
!4044 = !DILocation(line: 523, column: 23, scope: !4042)
!4045 = !DILocation(line: 523, column: 10, scope: !4025)
!4046 = !DILocalVariable(name: "j", scope: !4047, file: !3, line: 524, type: !22)
!4047 = distinct !DILexicalBlock(scope: !4042, file: !3, line: 523, column: 43)
!4048 = !DILocation(line: 524, column: 11, scope: !4047)
!4049 = !DILocation(line: 524, column: 38, scope: !4047)
!4050 = !DILocation(line: 524, column: 42, scope: !4047)
!4051 = !DILocation(line: 524, column: 48, scope: !4047)
!4052 = !DILocation(line: 524, column: 15, scope: !4047)
!4053 = !DILocation(line: 525, column: 11, scope: !4054)
!4054 = distinct !DILexicalBlock(scope: !4047, file: !3, line: 525, column: 11)
!4055 = !DILocation(line: 525, column: 13, scope: !4054)
!4056 = !DILocation(line: 525, column: 11, scope: !4047)
!4057 = !DILocation(line: 527, column: 12, scope: !4058)
!4058 = distinct !DILexicalBlock(scope: !4059, file: !3, line: 527, column: 12)
!4059 = distinct !DILexicalBlock(scope: !4054, file: !3, line: 525, column: 19)
!4060 = !DILocation(line: 527, column: 26, scope: !4058)
!4061 = !DILocation(line: 527, column: 12, scope: !4059)
!4062 = !DILocation(line: 528, column: 35, scope: !4063)
!4063 = distinct !DILexicalBlock(scope: !4058, file: !3, line: 527, column: 33)
!4064 = !DILocation(line: 528, column: 39, scope: !4063)
!4065 = !DILocation(line: 528, column: 47, scope: !4063)
!4066 = !DILocation(line: 528, column: 45, scope: !4063)
!4067 = !DILocation(line: 528, column: 50, scope: !4063)
!4068 = !DILocation(line: 528, column: 14, scope: !4063)
!4069 = !DILocation(line: 528, column: 12, scope: !4063)
!4070 = !DILocation(line: 529, column: 40, scope: !4063)
!4071 = !DILocation(line: 529, column: 44, scope: !4063)
!4072 = !DILocation(line: 529, column: 58, scope: !4063)
!4073 = !DILocation(line: 529, column: 56, scope: !4063)
!4074 = !DILocation(line: 529, column: 61, scope: !4063)
!4075 = !DILocation(line: 529, column: 19, scope: !4063)
!4076 = !DILocation(line: 529, column: 17, scope: !4063)
!4077 = !DILocation(line: 530, column: 8, scope: !4063)
!4078 = !DILocation(line: 532, column: 35, scope: !4079)
!4079 = distinct !DILexicalBlock(scope: !4058, file: !3, line: 531, column: 13)
!4080 = !DILocation(line: 532, column: 39, scope: !4079)
!4081 = !DILocation(line: 532, column: 47, scope: !4079)
!4082 = !DILocation(line: 532, column: 45, scope: !4079)
!4083 = !DILocation(line: 532, column: 50, scope: !4079)
!4084 = !DILocation(line: 532, column: 14, scope: !4079)
!4085 = !DILocation(line: 532, column: 12, scope: !4079)
!4086 = !DILocation(line: 533, column: 40, scope: !4079)
!4087 = !DILocation(line: 533, column: 44, scope: !4079)
!4088 = !DILocation(line: 533, column: 58, scope: !4079)
!4089 = !DILocation(line: 533, column: 56, scope: !4079)
!4090 = !DILocation(line: 533, column: 61, scope: !4079)
!4091 = !DILocation(line: 533, column: 19, scope: !4079)
!4092 = !DILocation(line: 533, column: 17, scope: !4079)
!4093 = !DILocation(line: 535, column: 26, scope: !4059)
!4094 = !DILocation(line: 535, column: 30, scope: !4059)
!4095 = !DILocation(line: 535, column: 8, scope: !4059)
!4096 = !DILocation(line: 535, column: 17, scope: !4059)
!4097 = !DILocation(line: 535, column: 24, scope: !4059)
!4098 = !DILocation(line: 536, column: 21, scope: !4059)
!4099 = !DILocation(line: 536, column: 8, scope: !4059)
!4100 = !DILocation(line: 536, column: 12, scope: !4059)
!4101 = !DILocation(line: 536, column: 19, scope: !4059)
!4102 = !DILocation(line: 537, column: 7, scope: !4059)
!4103 = !DILocation(line: 538, column: 6, scope: !4047)
!4104 = !DILocation(line: 539, column: 5, scope: !4025)
!4105 = !DILocation(line: 540, column: 5, scope: !4004)
!4106 = !DILocation(line: 540, column: 9, scope: !4004)
!4107 = !DILocation(line: 540, column: 15, scope: !4004)
!4108 = !DILocation(line: 540, column: 21, scope: !4004)
!4109 = !DILocation(line: 540, column: 26, scope: !4004)
!4110 = !DILocation(line: 541, column: 4, scope: !4004)
!4111 = !DILocation(line: 543, column: 3, scope: !3987)
!4112 = !DILocation(line: 543, column: 16, scope: !3970)
!4113 = distinct !{!4113, !3985, !4114}
!4114 = !DILocation(line: 543, column: 18, scope: !3970)
!4115 = !DILocation(line: 544, column: 2, scope: !3970)
!4116 = !DILocation(line: 502, column: 60, scope: !3964)
!4117 = !DILocation(line: 502, column: 66, scope: !3964)
!4118 = !DILocation(line: 502, column: 2, scope: !3964)
!4119 = distinct !{!4119, !3968, !4120}
!4120 = !DILocation(line: 544, column: 2, scope: !3958)
!4121 = !DILocalVariable(name: "dv", scope: !4122, file: !3, line: 547, type: !3406)
!4122 = distinct !DILexicalBlock(scope: !3887, file: !3, line: 546, column: 2)
!4123 = !DILocation(line: 547, column: 16, scope: !4122)
!4124 = !DILocation(line: 547, column: 21, scope: !4122)
!4125 = !DILocation(line: 547, column: 25, scope: !4122)
!4126 = !DILocation(line: 548, column: 16, scope: !4127)
!4127 = distinct !DILexicalBlock(scope: !4122, file: !3, line: 548, column: 3)
!4128 = !DILocation(line: 548, column: 20, scope: !4127)
!4129 = !DILocation(line: 548, column: 14, scope: !4127)
!4130 = !DILocation(line: 548, column: 8, scope: !4127)
!4131 = !DILocation(line: 548, column: 29, scope: !4132)
!4132 = distinct !DILexicalBlock(scope: !4127, file: !3, line: 548, column: 3)
!4133 = !DILocation(line: 548, column: 35, scope: !4132)
!4134 = !DILocation(line: 548, column: 3, scope: !4127)
!4135 = !DILocation(line: 549, column: 4, scope: !4136)
!4136 = distinct !DILexicalBlock(scope: !4132, file: !3, line: 548, column: 56)
!4137 = !DILocation(line: 549, column: 8, scope: !4136)
!4138 = !DILocation(line: 549, column: 13, scope: !4136)
!4139 = !DILocation(line: 550, column: 3, scope: !4136)
!4140 = !DILocation(line: 548, column: 46, scope: !4132)
!4141 = !DILocation(line: 548, column: 52, scope: !4132)
!4142 = !DILocation(line: 548, column: 3, scope: !4132)
!4143 = distinct !{!4143, !4134, !4144}
!4144 = !DILocation(line: 550, column: 3, scope: !4127)
!4145 = !DILocation(line: 553, column: 19, scope: !3887)
!4146 = !DILocation(line: 553, column: 2, scope: !3887)
!4147 = !DILocation(line: 555, column: 21, scope: !3887)
!4148 = !DILocation(line: 555, column: 25, scope: !3887)
!4149 = !DILocation(line: 555, column: 2, scope: !3887)
!4150 = !DILocation(line: 557, column: 2, scope: !3887)
!4151 = !DILocation(line: 558, column: 1, scope: !3887)
!4152 = distinct !DISubprogram(name: "wpaint_mirror_vgroup_ensure", scope: !3, file: !3, line: 373, type: !4153, scopeLine: 374, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2758, retainedNodes: !3422)
!4153 = !DISubroutineType(types: !4154)
!4154 = !{!22, !3444, !3408}
!4155 = !DILocalVariable(name: "ob", arg: 1, scope: !4152, file: !3, line: 373, type: !3444)
!4156 = !DILocation(line: 373, column: 48, scope: !4152)
!4157 = !DILocalVariable(name: "vgroup_active", arg: 2, scope: !4152, file: !3, line: 373, type: !3408)
!4158 = !DILocation(line: 373, column: 62, scope: !4152)
!4159 = !DILocalVariable(name: "defgroup", scope: !4152, file: !3, line: 375, type: !4160)
!4160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4161, size: 64)
!4161 = !DIDerivedType(tag: DW_TAG_typedef, name: "bDeformGroup", file: !164, line: 68, baseType: !4162)
!4162 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bDeformGroup", file: !164, line: 63, size: 704, elements: !4163)
!4163 = !{!4164, !4166, !4167, !4168, !4169}
!4164 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4162, file: !164, line: 64, baseType: !4165, size: 64)
!4165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4162, size: 64)
!4166 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4162, file: !164, line: 64, baseType: !4165, size: 64, offset: 64)
!4167 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4162, file: !164, line: 65, baseType: !33, size: 512, offset: 128)
!4168 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !4162, file: !164, line: 67, baseType: !14, size: 8, offset: 640)
!4169 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !4162, file: !164, line: 67, baseType: !962, size: 56, offset: 648)
!4170 = !DILocation(line: 375, column: 16, scope: !4152)
!4171 = !DILocation(line: 375, column: 41, scope: !4152)
!4172 = !DILocation(line: 375, column: 45, scope: !4152)
!4173 = !DILocation(line: 375, column: 54, scope: !4152)
!4174 = !DILocation(line: 375, column: 27, scope: !4152)
!4175 = !DILocation(line: 377, column: 6, scope: !4176)
!4176 = distinct !DILexicalBlock(scope: !4152, file: !3, line: 377, column: 6)
!4177 = !DILocation(line: 377, column: 6, scope: !4152)
!4178 = !DILocalVariable(name: "mirrdef", scope: !4179, file: !3, line: 378, type: !22)
!4179 = distinct !DILexicalBlock(scope: !4176, file: !3, line: 377, column: 16)
!4180 = !DILocation(line: 378, column: 7, scope: !4179)
!4181 = !DILocalVariable(name: "name_flip", scope: !4179, file: !3, line: 379, type: !33)
!4182 = !DILocation(line: 379, column: 8, scope: !4179)
!4183 = !DILocation(line: 381, column: 29, scope: !4179)
!4184 = !DILocation(line: 381, column: 40, scope: !4179)
!4185 = !DILocation(line: 381, column: 50, scope: !4179)
!4186 = !DILocation(line: 381, column: 3, scope: !4179)
!4187 = !DILocation(line: 382, column: 33, scope: !4179)
!4188 = !DILocation(line: 382, column: 37, scope: !4179)
!4189 = !DILocation(line: 382, column: 13, scope: !4179)
!4190 = !DILocation(line: 382, column: 11, scope: !4179)
!4191 = !DILocation(line: 383, column: 7, scope: !4192)
!4192 = distinct !DILexicalBlock(scope: !4179, file: !3, line: 383, column: 7)
!4193 = !DILocation(line: 383, column: 15, scope: !4192)
!4194 = !DILocation(line: 383, column: 7, scope: !4179)
!4195 = !DILocation(line: 384, column: 25, scope: !4196)
!4196 = distinct !DILexicalBlock(scope: !4197, file: !3, line: 384, column: 8)
!4197 = distinct !DILexicalBlock(scope: !4192, file: !3, line: 383, column: 22)
!4198 = !DILocation(line: 384, column: 29, scope: !4196)
!4199 = !DILocation(line: 384, column: 8, scope: !4196)
!4200 = !DILocation(line: 384, column: 8, scope: !4197)
!4201 = !DILocation(line: 385, column: 30, scope: !4202)
!4202 = distinct !DILexicalBlock(scope: !4196, file: !3, line: 384, column: 41)
!4203 = !DILocation(line: 385, column: 34, scope: !4202)
!4204 = !DILocation(line: 385, column: 15, scope: !4202)
!4205 = !DILocation(line: 385, column: 43, scope: !4202)
!4206 = !DILocation(line: 385, column: 13, scope: !4202)
!4207 = !DILocation(line: 386, column: 4, scope: !4202)
!4208 = !DILocation(line: 387, column: 3, scope: !4197)
!4209 = !DILocation(line: 391, column: 10, scope: !4179)
!4210 = !DILocation(line: 391, column: 3, scope: !4179)
!4211 = !DILocation(line: 394, column: 2, scope: !4152)
!4212 = !DILocation(line: 395, column: 1, scope: !4152)
!4213 = distinct !DISubprogram(name: "copy_wpaint_prev", scope: !3, file: !3, line: 428, type: !4214, scopeLine: 429, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2758, retainedNodes: !3422)
!4214 = !DISubroutineType(types: !4215)
!4215 = !{null, !1538, !3406, !22}
!4216 = !DILocalVariable(name: "wp", arg: 1, scope: !4213, file: !3, line: 428, type: !1538)
!4217 = !DILocation(line: 428, column: 38, scope: !4213)
!4218 = !DILocalVariable(name: "dverts", arg: 2, scope: !4213, file: !3, line: 428, type: !3406)
!4219 = !DILocation(line: 428, column: 55, scope: !4213)
!4220 = !DILocalVariable(name: "dcount", arg: 3, scope: !4213, file: !3, line: 428, type: !22)
!4221 = !DILocation(line: 428, column: 67, scope: !4213)
!4222 = !DILocation(line: 430, column: 19, scope: !4213)
!4223 = !DILocation(line: 430, column: 2, scope: !4213)
!4224 = !DILocation(line: 432, column: 6, scope: !4225)
!4225 = distinct !DILexicalBlock(scope: !4213, file: !3, line: 432, column: 6)
!4226 = !DILocation(line: 432, column: 13, scope: !4225)
!4227 = !DILocation(line: 432, column: 16, scope: !4225)
!4228 = !DILocation(line: 432, column: 6, scope: !4213)
!4229 = !DILocation(line: 434, column: 21, scope: !4230)
!4230 = distinct !DILexicalBlock(scope: !4225, file: !3, line: 432, column: 24)
!4231 = !DILocation(line: 434, column: 55, scope: !4230)
!4232 = !DILocation(line: 434, column: 53, scope: !4230)
!4233 = !DILocation(line: 434, column: 3, scope: !4230)
!4234 = !DILocation(line: 434, column: 7, scope: !4230)
!4235 = !DILocation(line: 434, column: 19, scope: !4230)
!4236 = !DILocation(line: 435, column: 13, scope: !4230)
!4237 = !DILocation(line: 435, column: 3, scope: !4230)
!4238 = !DILocation(line: 435, column: 7, scope: !4230)
!4239 = !DILocation(line: 435, column: 11, scope: !4230)
!4240 = !DILocation(line: 436, column: 26, scope: !4230)
!4241 = !DILocation(line: 436, column: 30, scope: !4230)
!4242 = !DILocation(line: 436, column: 43, scope: !4230)
!4243 = !DILocation(line: 436, column: 51, scope: !4230)
!4244 = !DILocation(line: 436, column: 3, scope: !4230)
!4245 = !DILocation(line: 437, column: 2, scope: !4230)
!4246 = !DILocation(line: 438, column: 1, scope: !4213)
!4247 = distinct !DISubprogram(name: "ED_vpaint_smooth", scope: !3, file: !3, line: 560, type: !3815, scopeLine: 561, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2758, retainedNodes: !3422)
!4248 = !DILocalVariable(name: "ob", arg: 1, scope: !4247, file: !3, line: 560, type: !3444)
!4249 = !DILocation(line: 560, column: 31, scope: !4247)
!4250 = !DILocalVariable(name: "me", scope: !4247, file: !3, line: 562, type: !3187)
!4251 = !DILocation(line: 562, column: 8, scope: !4247)
!4252 = !DILocalVariable(name: "mp", scope: !4247, file: !3, line: 563, type: !3410)
!4253 = !DILocation(line: 563, column: 9, scope: !4247)
!4254 = !DILocalVariable(name: "i", scope: !4247, file: !3, line: 565, type: !22)
!4255 = !DILocation(line: 565, column: 6, scope: !4247)
!4256 = !DILocalVariable(name: "j", scope: !4247, file: !3, line: 565, type: !22)
!4257 = !DILocation(line: 565, column: 9, scope: !4247)
!4258 = !DILocalVariable(name: "mlooptag", scope: !4247, file: !3, line: 567, type: !1742)
!4259 = !DILocation(line: 567, column: 8, scope: !4247)
!4260 = !DILocalVariable(name: "selected", scope: !4247, file: !3, line: 568, type: !259)
!4261 = !DILocation(line: 568, column: 7, scope: !4247)
!4262 = !DILocation(line: 570, column: 34, scope: !4263)
!4263 = distinct !DILexicalBlock(scope: !4247, file: !3, line: 570, column: 6)
!4264 = !DILocation(line: 570, column: 13, scope: !4263)
!4265 = !DILocation(line: 570, column: 11, scope: !4263)
!4266 = !DILocation(line: 570, column: 39, scope: !4263)
!4267 = !DILocation(line: 570, column: 48, scope: !4263)
!4268 = !DILocation(line: 571, column: 7, scope: !4263)
!4269 = !DILocation(line: 571, column: 11, scope: !4263)
!4270 = !DILocation(line: 571, column: 20, scope: !4263)
!4271 = !DILocation(line: 571, column: 28, scope: !4263)
!4272 = !DILocation(line: 571, column: 47, scope: !4263)
!4273 = !DILocation(line: 571, column: 32, scope: !4263)
!4274 = !DILocation(line: 571, column: 51, scope: !4263)
!4275 = !DILocation(line: 570, column: 6, scope: !4247)
!4276 = !DILocation(line: 573, column: 3, scope: !4277)
!4277 = distinct !DILexicalBlock(scope: !4263, file: !3, line: 572, column: 2)
!4278 = !DILocation(line: 576, column: 14, scope: !4247)
!4279 = !DILocation(line: 576, column: 18, scope: !4247)
!4280 = !DILocation(line: 576, column: 27, scope: !4247)
!4281 = !DILocation(line: 576, column: 53, scope: !4247)
!4282 = !DILocation(line: 576, column: 13, scope: !4247)
!4283 = !DILocation(line: 576, column: 11, scope: !4247)
!4284 = !DILocation(line: 578, column: 13, scope: !4247)
!4285 = !DILocation(line: 578, column: 40, scope: !4247)
!4286 = !DILocation(line: 578, column: 44, scope: !4247)
!4287 = !DILocation(line: 578, column: 38, scope: !4247)
!4288 = !DILocation(line: 578, column: 11, scope: !4247)
!4289 = !DILocation(line: 581, column: 7, scope: !4247)
!4290 = !DILocation(line: 581, column: 11, scope: !4247)
!4291 = !DILocation(line: 581, column: 5, scope: !4247)
!4292 = !DILocation(line: 582, column: 9, scope: !4293)
!4293 = distinct !DILexicalBlock(scope: !4247, file: !3, line: 582, column: 2)
!4294 = !DILocation(line: 582, column: 7, scope: !4293)
!4295 = !DILocation(line: 582, column: 14, scope: !4296)
!4296 = distinct !DILexicalBlock(scope: !4293, file: !3, line: 582, column: 2)
!4297 = !DILocation(line: 582, column: 18, scope: !4296)
!4298 = !DILocation(line: 582, column: 22, scope: !4296)
!4299 = !DILocation(line: 582, column: 16, scope: !4296)
!4300 = !DILocation(line: 582, column: 2, scope: !4293)
!4301 = !DILocalVariable(name: "ml", scope: !4302, file: !3, line: 583, type: !4303)
!4302 = distinct !DILexicalBlock(scope: !4296, file: !3, line: 582, column: 42)
!4303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4304, size: 64)
!4304 = !DIDerivedType(tag: DW_TAG_typedef, name: "MLoop", file: !206, line: 91, baseType: !228)
!4305 = !DILocation(line: 583, column: 10, scope: !4302)
!4306 = !DILocation(line: 583, column: 15, scope: !4302)
!4307 = !DILocation(line: 583, column: 19, scope: !4302)
!4308 = !DILocation(line: 583, column: 27, scope: !4302)
!4309 = !DILocation(line: 583, column: 31, scope: !4302)
!4310 = !DILocation(line: 583, column: 25, scope: !4302)
!4311 = !DILocalVariable(name: "ml_index", scope: !4302, file: !3, line: 584, type: !22)
!4312 = !DILocation(line: 584, column: 7, scope: !4302)
!4313 = !DILocation(line: 584, column: 18, scope: !4302)
!4314 = !DILocation(line: 584, column: 22, scope: !4302)
!4315 = !DILocation(line: 586, column: 7, scope: !4316)
!4316 = distinct !DILexicalBlock(scope: !4302, file: !3, line: 586, column: 7)
!4317 = !DILocation(line: 586, column: 16, scope: !4316)
!4318 = !DILocation(line: 586, column: 21, scope: !4316)
!4319 = !DILocation(line: 586, column: 25, scope: !4316)
!4320 = !DILocation(line: 586, column: 30, scope: !4316)
!4321 = !DILocation(line: 586, column: 7, scope: !4302)
!4322 = !DILocation(line: 587, column: 4, scope: !4316)
!4323 = !DILocation(line: 589, column: 10, scope: !4324)
!4324 = distinct !DILexicalBlock(scope: !4302, file: !3, line: 589, column: 3)
!4325 = !DILocation(line: 589, column: 8, scope: !4324)
!4326 = !DILocation(line: 589, column: 15, scope: !4327)
!4327 = distinct !DILexicalBlock(scope: !4324, file: !3, line: 589, column: 3)
!4328 = !DILocation(line: 589, column: 19, scope: !4327)
!4329 = !DILocation(line: 589, column: 23, scope: !4327)
!4330 = !DILocation(line: 589, column: 17, scope: !4327)
!4331 = !DILocation(line: 589, column: 3, scope: !4324)
!4332 = !DILocation(line: 590, column: 4, scope: !4333)
!4333 = distinct !DILexicalBlock(scope: !4327, file: !3, line: 589, column: 55)
!4334 = !DILocation(line: 590, column: 13, scope: !4333)
!4335 = !DILocation(line: 590, column: 23, scope: !4333)
!4336 = !DILocation(line: 591, column: 3, scope: !4333)
!4337 = !DILocation(line: 589, column: 33, scope: !4327)
!4338 = !DILocation(line: 589, column: 45, scope: !4327)
!4339 = !DILocation(line: 589, column: 51, scope: !4327)
!4340 = !DILocation(line: 589, column: 3, scope: !4327)
!4341 = distinct !{!4341, !4331, !4342}
!4342 = !DILocation(line: 591, column: 3, scope: !4324)
!4343 = !DILocation(line: 592, column: 2, scope: !4302)
!4344 = !DILocation(line: 582, column: 32, scope: !4296)
!4345 = !DILocation(line: 582, column: 38, scope: !4296)
!4346 = !DILocation(line: 582, column: 2, scope: !4296)
!4347 = distinct !{!4347, !4300, !4348}
!4348 = !DILocation(line: 592, column: 2, scope: !4293)
!4349 = !DILocation(line: 595, column: 26, scope: !4247)
!4350 = !DILocation(line: 595, column: 2, scope: !4247)
!4351 = !DILocation(line: 597, column: 22, scope: !4247)
!4352 = !DILocation(line: 597, column: 26, scope: !4247)
!4353 = !DILocation(line: 597, column: 2, scope: !4247)
!4354 = !DILocation(line: 599, column: 2, scope: !4247)
!4355 = !DILocation(line: 599, column: 12, scope: !4247)
!4356 = !DILocation(line: 601, column: 21, scope: !4247)
!4357 = !DILocation(line: 601, column: 25, scope: !4247)
!4358 = !DILocation(line: 601, column: 2, scope: !4247)
!4359 = !DILocation(line: 603, column: 2, scope: !4247)
!4360 = !DILocation(line: 604, column: 1, scope: !4247)
!4361 = distinct !DISubprogram(name: "do_shared_vertexcol", scope: !3, file: !3, line: 282, type: !4362, scopeLine: 283, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2758, retainedNodes: !3422)
!4362 = !DISubroutineType(types: !4363)
!4363 = !{null, !3187, !1742, !1742, !976}
!4364 = !DILocalVariable(name: "me", arg: 1, scope: !4361, file: !3, line: 282, type: !3187)
!4365 = !DILocation(line: 282, column: 39, scope: !4361)
!4366 = !DILocalVariable(name: "mlooptag", arg: 2, scope: !4361, file: !3, line: 282, type: !1742)
!4367 = !DILocation(line: 282, column: 49, scope: !4361)
!4368 = !DILocalVariable(name: "mfacetag", arg: 3, scope: !4361, file: !3, line: 282, type: !1742)
!4369 = !DILocation(line: 282, column: 65, scope: !4361)
!4370 = !DILocalVariable(name: "do_tessface", arg: 4, scope: !4361, file: !3, line: 282, type: !976)
!4371 = !DILocation(line: 282, column: 86, scope: !4361)
!4372 = !DILocalVariable(name: "use_face_sel", scope: !4361, file: !3, line: 284, type: !3408)
!4373 = !DILocation(line: 284, column: 12, scope: !4361)
!4374 = !DILocation(line: 284, column: 28, scope: !4361)
!4375 = !DILocation(line: 284, column: 32, scope: !4361)
!4376 = !DILocation(line: 284, column: 41, scope: !4361)
!4377 = !DILocalVariable(name: "mp", scope: !4361, file: !3, line: 285, type: !3410)
!4378 = !DILocation(line: 285, column: 9, scope: !4361)
!4379 = !DILocalVariable(name: "scol", scope: !4361, file: !3, line: 286, type: !4380)
!4380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !770, size: 64)
!4381 = !DILocation(line: 286, column: 8, scope: !4361)
!4382 = !DILocalVariable(name: "i", scope: !4361, file: !3, line: 287, type: !22)
!4383 = !DILocation(line: 287, column: 6, scope: !4361)
!4384 = !DILocalVariable(name: "j", scope: !4361, file: !3, line: 287, type: !22)
!4385 = !DILocation(line: 287, column: 9, scope: !4361)
!4386 = !DILocalVariable(name: "has_shared", scope: !4361, file: !3, line: 288, type: !259)
!4387 = !DILocation(line: 288, column: 7, scope: !4361)
!4388 = !DILocation(line: 293, column: 6, scope: !4389)
!4389 = distinct !DILexicalBlock(scope: !4361, file: !3, line: 293, column: 6)
!4390 = !DILocation(line: 293, column: 10, scope: !4389)
!4391 = !DILocation(line: 293, column: 19, scope: !4389)
!4392 = !DILocation(line: 293, column: 27, scope: !4389)
!4393 = !DILocation(line: 293, column: 30, scope: !4389)
!4394 = !DILocation(line: 293, column: 34, scope: !4389)
!4395 = !DILocation(line: 293, column: 42, scope: !4389)
!4396 = !DILocation(line: 293, column: 47, scope: !4389)
!4397 = !DILocation(line: 293, column: 50, scope: !4389)
!4398 = !DILocation(line: 293, column: 54, scope: !4389)
!4399 = !DILocation(line: 293, column: 62, scope: !4389)
!4400 = !DILocation(line: 293, column: 6, scope: !4361)
!4401 = !DILocation(line: 293, column: 68, scope: !4389)
!4402 = !DILocation(line: 295, column: 9, scope: !4361)
!4403 = !DILocation(line: 295, column: 35, scope: !4361)
!4404 = !DILocation(line: 295, column: 39, scope: !4361)
!4405 = !DILocation(line: 295, column: 33, scope: !4361)
!4406 = !DILocation(line: 295, column: 47, scope: !4361)
!4407 = !DILocation(line: 295, column: 7, scope: !4361)
!4408 = !DILocation(line: 297, column: 9, scope: !4409)
!4409 = distinct !DILexicalBlock(scope: !4361, file: !3, line: 297, column: 2)
!4410 = !DILocation(line: 297, column: 19, scope: !4409)
!4411 = !DILocation(line: 297, column: 23, scope: !4409)
!4412 = !DILocation(line: 297, column: 17, scope: !4409)
!4413 = !DILocation(line: 297, column: 7, scope: !4409)
!4414 = !DILocation(line: 297, column: 30, scope: !4415)
!4415 = distinct !DILexicalBlock(scope: !4409, file: !3, line: 297, column: 2)
!4416 = !DILocation(line: 297, column: 34, scope: !4415)
!4417 = !DILocation(line: 297, column: 38, scope: !4415)
!4418 = !DILocation(line: 297, column: 32, scope: !4415)
!4419 = !DILocation(line: 297, column: 2, scope: !4409)
!4420 = !DILocation(line: 298, column: 8, scope: !4421)
!4421 = distinct !DILexicalBlock(scope: !4422, file: !3, line: 298, column: 7)
!4422 = distinct !DILexicalBlock(scope: !4415, file: !3, line: 297, column: 58)
!4423 = !DILocation(line: 298, column: 21, scope: !4421)
!4424 = !DILocation(line: 298, column: 31, scope: !4421)
!4425 = !DILocation(line: 298, column: 35, scope: !4421)
!4426 = !DILocation(line: 298, column: 39, scope: !4421)
!4427 = !DILocation(line: 298, column: 44, scope: !4421)
!4428 = !DILocation(line: 298, column: 7, scope: !4422)
!4429 = !DILocalVariable(name: "ml", scope: !4430, file: !3, line: 299, type: !4303)
!4430 = distinct !DILexicalBlock(scope: !4421, file: !3, line: 298, column: 60)
!4431 = !DILocation(line: 299, column: 11, scope: !4430)
!4432 = !DILocation(line: 299, column: 16, scope: !4430)
!4433 = !DILocation(line: 299, column: 20, scope: !4430)
!4434 = !DILocation(line: 299, column: 28, scope: !4430)
!4435 = !DILocation(line: 299, column: 32, scope: !4430)
!4436 = !DILocation(line: 299, column: 26, scope: !4430)
!4437 = !DILocalVariable(name: "lcol", scope: !4430, file: !3, line: 300, type: !3765)
!4438 = !DILocation(line: 300, column: 14, scope: !4430)
!4439 = !DILocation(line: 300, column: 21, scope: !4430)
!4440 = !DILocation(line: 300, column: 25, scope: !4430)
!4441 = !DILocation(line: 300, column: 36, scope: !4430)
!4442 = !DILocation(line: 300, column: 40, scope: !4430)
!4443 = !DILocation(line: 300, column: 34, scope: !4430)
!4444 = !DILocation(line: 301, column: 11, scope: !4445)
!4445 = distinct !DILexicalBlock(scope: !4430, file: !3, line: 301, column: 4)
!4446 = !DILocation(line: 301, column: 9, scope: !4445)
!4447 = !DILocation(line: 301, column: 16, scope: !4448)
!4448 = distinct !DILexicalBlock(scope: !4445, file: !3, line: 301, column: 4)
!4449 = !DILocation(line: 301, column: 20, scope: !4448)
!4450 = !DILocation(line: 301, column: 24, scope: !4448)
!4451 = !DILocation(line: 301, column: 18, scope: !4448)
!4452 = !DILocation(line: 301, column: 4, scope: !4445)
!4453 = !DILocation(line: 302, column: 23, scope: !4454)
!4454 = distinct !DILexicalBlock(scope: !4448, file: !3, line: 301, column: 52)
!4455 = !DILocation(line: 302, column: 29, scope: !4454)
!4456 = !DILocation(line: 302, column: 5, scope: !4454)
!4457 = !DILocation(line: 302, column: 10, scope: !4454)
!4458 = !DILocation(line: 302, column: 14, scope: !4454)
!4459 = !DILocation(line: 302, column: 20, scope: !4454)
!4460 = !DILocation(line: 303, column: 23, scope: !4454)
!4461 = !DILocation(line: 303, column: 29, scope: !4454)
!4462 = !DILocation(line: 303, column: 5, scope: !4454)
!4463 = !DILocation(line: 303, column: 10, scope: !4454)
!4464 = !DILocation(line: 303, column: 14, scope: !4454)
!4465 = !DILocation(line: 303, column: 20, scope: !4454)
!4466 = !DILocation(line: 304, column: 23, scope: !4454)
!4467 = !DILocation(line: 304, column: 29, scope: !4454)
!4468 = !DILocation(line: 304, column: 5, scope: !4454)
!4469 = !DILocation(line: 304, column: 10, scope: !4454)
!4470 = !DILocation(line: 304, column: 14, scope: !4454)
!4471 = !DILocation(line: 304, column: 20, scope: !4454)
!4472 = !DILocation(line: 305, column: 5, scope: !4454)
!4473 = !DILocation(line: 305, column: 10, scope: !4454)
!4474 = !DILocation(line: 305, column: 14, scope: !4454)
!4475 = !DILocation(line: 305, column: 20, scope: !4454)
!4476 = !DILocation(line: 306, column: 16, scope: !4454)
!4477 = !DILocation(line: 307, column: 4, scope: !4454)
!4478 = !DILocation(line: 301, column: 34, scope: !4448)
!4479 = !DILocation(line: 301, column: 40, scope: !4448)
!4480 = !DILocation(line: 301, column: 48, scope: !4448)
!4481 = !DILocation(line: 301, column: 4, scope: !4448)
!4482 = distinct !{!4482, !4452, !4483}
!4483 = !DILocation(line: 307, column: 4, scope: !4445)
!4484 = !DILocation(line: 308, column: 3, scope: !4430)
!4485 = !DILocation(line: 309, column: 2, scope: !4422)
!4486 = !DILocation(line: 297, column: 48, scope: !4415)
!4487 = !DILocation(line: 297, column: 54, scope: !4415)
!4488 = !DILocation(line: 297, column: 2, scope: !4415)
!4489 = distinct !{!4489, !4419, !4490}
!4490 = !DILocation(line: 309, column: 2, scope: !4409)
!4491 = !DILocation(line: 311, column: 6, scope: !4492)
!4492 = distinct !DILexicalBlock(scope: !4361, file: !3, line: 311, column: 6)
!4493 = !DILocation(line: 311, column: 6, scope: !4361)
!4494 = !DILocation(line: 312, column: 10, scope: !4495)
!4495 = distinct !DILexicalBlock(scope: !4496, file: !3, line: 312, column: 3)
!4496 = distinct !DILexicalBlock(scope: !4492, file: !3, line: 311, column: 18)
!4497 = !DILocation(line: 312, column: 8, scope: !4495)
!4498 = !DILocation(line: 312, column: 15, scope: !4499)
!4499 = distinct !DILexicalBlock(scope: !4495, file: !3, line: 312, column: 3)
!4500 = !DILocation(line: 312, column: 19, scope: !4499)
!4501 = !DILocation(line: 312, column: 23, scope: !4499)
!4502 = !DILocation(line: 312, column: 17, scope: !4499)
!4503 = !DILocation(line: 312, column: 3, scope: !4495)
!4504 = !DILocation(line: 313, column: 8, scope: !4505)
!4505 = distinct !DILexicalBlock(scope: !4506, file: !3, line: 313, column: 8)
!4506 = distinct !DILexicalBlock(scope: !4499, file: !3, line: 312, column: 37)
!4507 = !DILocation(line: 313, column: 13, scope: !4505)
!4508 = !DILocation(line: 313, column: 19, scope: !4505)
!4509 = !DILocation(line: 313, column: 8, scope: !4506)
!4510 = !DILocation(line: 314, column: 33, scope: !4511)
!4511 = distinct !DILexicalBlock(scope: !4505, file: !3, line: 313, column: 25)
!4512 = !DILocation(line: 314, column: 38, scope: !4511)
!4513 = !DILocation(line: 314, column: 45, scope: !4511)
!4514 = !DILocation(line: 314, column: 50, scope: !4511)
!4515 = !DILocation(line: 314, column: 18, scope: !4511)
!4516 = !DILocation(line: 314, column: 5, scope: !4511)
!4517 = !DILocation(line: 314, column: 10, scope: !4511)
!4518 = !DILocation(line: 314, column: 16, scope: !4511)
!4519 = !DILocation(line: 315, column: 33, scope: !4511)
!4520 = !DILocation(line: 315, column: 38, scope: !4511)
!4521 = !DILocation(line: 315, column: 45, scope: !4511)
!4522 = !DILocation(line: 315, column: 50, scope: !4511)
!4523 = !DILocation(line: 315, column: 18, scope: !4511)
!4524 = !DILocation(line: 315, column: 5, scope: !4511)
!4525 = !DILocation(line: 315, column: 10, scope: !4511)
!4526 = !DILocation(line: 315, column: 16, scope: !4511)
!4527 = !DILocation(line: 316, column: 33, scope: !4511)
!4528 = !DILocation(line: 316, column: 38, scope: !4511)
!4529 = !DILocation(line: 316, column: 45, scope: !4511)
!4530 = !DILocation(line: 316, column: 50, scope: !4511)
!4531 = !DILocation(line: 316, column: 18, scope: !4511)
!4532 = !DILocation(line: 316, column: 5, scope: !4511)
!4533 = !DILocation(line: 316, column: 10, scope: !4511)
!4534 = !DILocation(line: 316, column: 16, scope: !4511)
!4535 = !DILocation(line: 317, column: 4, scope: !4511)
!4536 = !DILocation(line: 318, column: 3, scope: !4506)
!4537 = !DILocation(line: 312, column: 33, scope: !4499)
!4538 = !DILocation(line: 312, column: 3, scope: !4499)
!4539 = distinct !{!4539, !4503, !4540}
!4540 = !DILocation(line: 318, column: 3, scope: !4495)
!4541 = !DILocation(line: 320, column: 10, scope: !4542)
!4542 = distinct !DILexicalBlock(scope: !4496, file: !3, line: 320, column: 3)
!4543 = !DILocation(line: 320, column: 20, scope: !4542)
!4544 = !DILocation(line: 320, column: 24, scope: !4542)
!4545 = !DILocation(line: 320, column: 18, scope: !4542)
!4546 = !DILocation(line: 320, column: 8, scope: !4542)
!4547 = !DILocation(line: 320, column: 31, scope: !4548)
!4548 = distinct !DILexicalBlock(scope: !4542, file: !3, line: 320, column: 3)
!4549 = !DILocation(line: 320, column: 35, scope: !4548)
!4550 = !DILocation(line: 320, column: 39, scope: !4548)
!4551 = !DILocation(line: 320, column: 33, scope: !4548)
!4552 = !DILocation(line: 320, column: 3, scope: !4542)
!4553 = !DILocation(line: 321, column: 9, scope: !4554)
!4554 = distinct !DILexicalBlock(scope: !4555, file: !3, line: 321, column: 8)
!4555 = distinct !DILexicalBlock(scope: !4548, file: !3, line: 320, column: 59)
!4556 = !DILocation(line: 321, column: 22, scope: !4554)
!4557 = !DILocation(line: 321, column: 32, scope: !4554)
!4558 = !DILocation(line: 321, column: 36, scope: !4554)
!4559 = !DILocation(line: 321, column: 40, scope: !4554)
!4560 = !DILocation(line: 321, column: 45, scope: !4554)
!4561 = !DILocation(line: 321, column: 8, scope: !4555)
!4562 = !DILocalVariable(name: "ml", scope: !4563, file: !3, line: 322, type: !4303)
!4563 = distinct !DILexicalBlock(scope: !4554, file: !3, line: 321, column: 61)
!4564 = !DILocation(line: 322, column: 12, scope: !4563)
!4565 = !DILocation(line: 322, column: 17, scope: !4563)
!4566 = !DILocation(line: 322, column: 21, scope: !4563)
!4567 = !DILocation(line: 322, column: 29, scope: !4563)
!4568 = !DILocation(line: 322, column: 33, scope: !4563)
!4569 = !DILocation(line: 322, column: 27, scope: !4563)
!4570 = !DILocalVariable(name: "lcol", scope: !4563, file: !3, line: 323, type: !3765)
!4571 = !DILocation(line: 323, column: 15, scope: !4563)
!4572 = !DILocation(line: 323, column: 22, scope: !4563)
!4573 = !DILocation(line: 323, column: 26, scope: !4563)
!4574 = !DILocation(line: 323, column: 37, scope: !4563)
!4575 = !DILocation(line: 323, column: 41, scope: !4563)
!4576 = !DILocation(line: 323, column: 35, scope: !4563)
!4577 = !DILocation(line: 324, column: 12, scope: !4578)
!4578 = distinct !DILexicalBlock(scope: !4563, file: !3, line: 324, column: 5)
!4579 = !DILocation(line: 324, column: 10, scope: !4578)
!4580 = !DILocation(line: 324, column: 17, scope: !4581)
!4581 = distinct !DILexicalBlock(scope: !4578, file: !3, line: 324, column: 5)
!4582 = !DILocation(line: 324, column: 21, scope: !4581)
!4583 = !DILocation(line: 324, column: 25, scope: !4581)
!4584 = !DILocation(line: 324, column: 19, scope: !4581)
!4585 = !DILocation(line: 324, column: 5, scope: !4578)
!4586 = !DILocation(line: 325, column: 10, scope: !4587)
!4587 = distinct !DILexicalBlock(scope: !4588, file: !3, line: 325, column: 10)
!4588 = distinct !DILexicalBlock(scope: !4581, file: !3, line: 324, column: 53)
!4589 = !DILocation(line: 325, column: 19, scope: !4587)
!4590 = !DILocation(line: 325, column: 23, scope: !4587)
!4591 = !DILocation(line: 325, column: 35, scope: !4587)
!4592 = !DILocation(line: 325, column: 33, scope: !4587)
!4593 = !DILocation(line: 325, column: 10, scope: !4588)
!4594 = !DILocation(line: 326, column: 17, scope: !4595)
!4595 = distinct !DILexicalBlock(scope: !4587, file: !3, line: 325, column: 39)
!4596 = !DILocation(line: 326, column: 22, scope: !4595)
!4597 = !DILocation(line: 326, column: 26, scope: !4595)
!4598 = !DILocation(line: 326, column: 7, scope: !4595)
!4599 = !DILocation(line: 326, column: 13, scope: !4595)
!4600 = !DILocation(line: 326, column: 15, scope: !4595)
!4601 = !DILocation(line: 327, column: 17, scope: !4595)
!4602 = !DILocation(line: 327, column: 22, scope: !4595)
!4603 = !DILocation(line: 327, column: 26, scope: !4595)
!4604 = !DILocation(line: 327, column: 7, scope: !4595)
!4605 = !DILocation(line: 327, column: 13, scope: !4595)
!4606 = !DILocation(line: 327, column: 15, scope: !4595)
!4607 = !DILocation(line: 328, column: 17, scope: !4595)
!4608 = !DILocation(line: 328, column: 22, scope: !4595)
!4609 = !DILocation(line: 328, column: 26, scope: !4595)
!4610 = !DILocation(line: 328, column: 7, scope: !4595)
!4611 = !DILocation(line: 328, column: 13, scope: !4595)
!4612 = !DILocation(line: 328, column: 15, scope: !4595)
!4613 = !DILocation(line: 329, column: 6, scope: !4595)
!4614 = !DILocation(line: 330, column: 5, scope: !4588)
!4615 = !DILocation(line: 324, column: 35, scope: !4581)
!4616 = !DILocation(line: 324, column: 41, scope: !4581)
!4617 = !DILocation(line: 324, column: 49, scope: !4581)
!4618 = !DILocation(line: 324, column: 5, scope: !4581)
!4619 = distinct !{!4619, !4585, !4620}
!4620 = !DILocation(line: 330, column: 5, scope: !4578)
!4621 = !DILocation(line: 331, column: 4, scope: !4563)
!4622 = !DILocation(line: 332, column: 3, scope: !4555)
!4623 = !DILocation(line: 320, column: 49, scope: !4548)
!4624 = !DILocation(line: 320, column: 55, scope: !4548)
!4625 = !DILocation(line: 320, column: 3, scope: !4548)
!4626 = distinct !{!4626, !4552, !4627}
!4627 = !DILocation(line: 332, column: 3, scope: !4542)
!4628 = !DILocation(line: 333, column: 2, scope: !4496)
!4629 = !DILocation(line: 335, column: 2, scope: !4361)
!4630 = !DILocation(line: 335, column: 12, scope: !4361)
!4631 = !DILocation(line: 337, column: 6, scope: !4632)
!4632 = distinct !DILexicalBlock(scope: !4361, file: !3, line: 337, column: 6)
!4633 = !DILocation(line: 337, column: 17, scope: !4632)
!4634 = !DILocation(line: 337, column: 20, scope: !4632)
!4635 = !DILocation(line: 337, column: 6, scope: !4361)
!4636 = !DILocation(line: 338, column: 28, scope: !4637)
!4637 = distinct !DILexicalBlock(scope: !4632, file: !3, line: 337, column: 33)
!4638 = !DILocation(line: 338, column: 32, scope: !4637)
!4639 = !DILocation(line: 338, column: 3, scope: !4637)
!4640 = !DILocation(line: 339, column: 2, scope: !4637)
!4641 = !DILocation(line: 340, column: 1, scope: !4361)
!4642 = distinct !DISubprogram(name: "PAINT_OT_weight_sample", scope: !3, file: !3, line: 1138, type: !4, scopeLine: 1139, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2758, retainedNodes: !3422)
!4643 = !DILocalVariable(name: "ot", arg: 1, scope: !4642, file: !3, line: 1138, type: !6)
!4644 = !DILocation(line: 1138, column: 45, scope: !4642)
!4645 = !DILocation(line: 1141, column: 2, scope: !4642)
!4646 = !DILocation(line: 1141, column: 6, scope: !4642)
!4647 = !DILocation(line: 1141, column: 11, scope: !4642)
!4648 = !DILocation(line: 1142, column: 2, scope: !4642)
!4649 = !DILocation(line: 1142, column: 6, scope: !4642)
!4650 = !DILocation(line: 1142, column: 13, scope: !4642)
!4651 = !DILocation(line: 1143, column: 2, scope: !4642)
!4652 = !DILocation(line: 1143, column: 6, scope: !4642)
!4653 = !DILocation(line: 1143, column: 18, scope: !4642)
!4654 = !DILocation(line: 1146, column: 2, scope: !4642)
!4655 = !DILocation(line: 1146, column: 6, scope: !4642)
!4656 = !DILocation(line: 1146, column: 13, scope: !4642)
!4657 = !DILocation(line: 1147, column: 2, scope: !4642)
!4658 = !DILocation(line: 1147, column: 6, scope: !4642)
!4659 = !DILocation(line: 1147, column: 11, scope: !4642)
!4660 = !DILocation(line: 1150, column: 2, scope: !4642)
!4661 = !DILocation(line: 1150, column: 6, scope: !4642)
!4662 = !DILocation(line: 1150, column: 11, scope: !4642)
!4663 = !DILocation(line: 1151, column: 1, scope: !4642)
!4664 = distinct !DISubprogram(name: "weight_sample_invoke", scope: !3, file: !3, line: 1085, type: !4665, scopeLine: 1086, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2758, retainedNodes: !3422)
!4665 = !DISubroutineType(types: !4666)
!4666 = !{!22, !3439, !4667, !4669}
!4667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4668, size: 64)
!4668 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmOperator", file: !28, line: 348, baseType: !27)
!4669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4670, size: 64)
!4670 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4671)
!4671 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmEvent", file: !8, line: 460, baseType: !2605)
!4672 = !DILocalVariable(name: "C", arg: 1, scope: !4664, file: !3, line: 1085, type: !3439)
!4673 = !DILocation(line: 1085, column: 43, scope: !4664)
!4674 = !DILocalVariable(name: "op", arg: 2, scope: !4664, file: !3, line: 1085, type: !4667)
!4675 = !DILocation(line: 1085, column: 58, scope: !4664)
!4676 = !DILocalVariable(name: "event", arg: 3, scope: !4664, file: !3, line: 1085, type: !4669)
!4677 = !DILocation(line: 1085, column: 77, scope: !4664)
!4678 = !DILocalVariable(name: "vc", scope: !4664, file: !3, line: 1087, type: !4679)
!4679 = !DIDerivedType(tag: DW_TAG_typedef, name: "ViewContext", file: !2956, line: 75, baseType: !4680)
!4680 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ViewContext", file: !2956, line: 66, size: 512, elements: !4681)
!4681 = !{!4682, !4683, !4684, !4685, !4686, !4777, !4837, !4838}
!4682 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !4680, file: !2956, line: 67, baseType: !152, size: 64)
!4683 = !DIDerivedType(tag: DW_TAG_member, name: "obact", scope: !4680, file: !2956, line: 68, baseType: !162, size: 64, offset: 64)
!4684 = !DIDerivedType(tag: DW_TAG_member, name: "obedit", scope: !4680, file: !2956, line: 69, baseType: !162, size: 64, offset: 128)
!4685 = !DIDerivedType(tag: DW_TAG_member, name: "ar", scope: !4680, file: !2956, line: 70, baseType: !3541, size: 64, offset: 192)
!4686 = !DIDerivedType(tag: DW_TAG_member, name: "v3d", scope: !4680, file: !2956, line: 71, baseType: !4687, size: 64, offset: 256)
!4687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4688, size: 64)
!4688 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "View3D", file: !4689, line: 151, size: 3008, elements: !4690)
!4689 = !DIFile(filename: "blender/source/blender/makesdna/DNA_view3d_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4690 = !{!4691, !4702, !4703, !4704, !4705, !4706, !4707, !4708, !4709, !4710, !4711, !4712, !4713, !4714, !4715, !4716, !4717, !4718, !4719, !4720, !4743, !4744, !4745, !4746, !4747, !4748, !4749, !4750, !4751, !4752, !4753, !4754, !4755, !4756, !4757, !4758, !4759, !4760, !4761, !4762, !4763, !4764, !4765, !4766, !4767, !4768, !4769, !4770, !4771, !4772, !4773, !4774, !4775, !4776}
!4691 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4688, file: !4689, line: 152, baseType: !4692, size: 64)
!4692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4693, size: 64)
!4693 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SpaceLink", file: !2771, line: 85, size: 448, elements: !4694)
!4694 = !{!4695, !4696, !4697, !4698, !4699, !4700}
!4695 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4693, file: !2771, line: 86, baseType: !4692, size: 64)
!4696 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4693, file: !2771, line: 86, baseType: !4692, size: 64, offset: 64)
!4697 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !4693, file: !2771, line: 87, baseType: !58, size: 128, offset: 128)
!4698 = !DIDerivedType(tag: DW_TAG_member, name: "spacetype", scope: !4693, file: !2771, line: 88, baseType: !22, size: 32, offset: 256)
!4699 = !DIDerivedType(tag: DW_TAG_member, name: "blockscale", scope: !4693, file: !2771, line: 89, baseType: !210, size: 32, offset: 288)
!4700 = !DIDerivedType(tag: DW_TAG_member, name: "blockhandler", scope: !4693, file: !2771, line: 90, baseType: !4701, size: 128, offset: 320)
!4701 = !DICompositeType(tag: DW_TAG_array_type, baseType: !48, size: 128, elements: !911)
!4702 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4688, file: !4689, line: 152, baseType: !4692, size: 64, offset: 64)
!4703 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !4688, file: !4689, line: 153, baseType: !58, size: 128, offset: 128)
!4704 = !DIDerivedType(tag: DW_TAG_member, name: "spacetype", scope: !4688, file: !4689, line: 154, baseType: !22, size: 32, offset: 256)
!4705 = !DIDerivedType(tag: DW_TAG_member, name: "blockscale", scope: !4688, file: !4689, line: 155, baseType: !210, size: 32, offset: 288)
!4706 = !DIDerivedType(tag: DW_TAG_member, name: "blockhandler", scope: !4688, file: !4689, line: 156, baseType: !4701, size: 128, offset: 320)
!4707 = !DIDerivedType(tag: DW_TAG_member, name: "viewquat", scope: !4688, file: !4689, line: 158, baseType: !419, size: 128, offset: 448)
!4708 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !4688, file: !4689, line: 159, baseType: !210, size: 32, offset: 576)
!4709 = !DIDerivedType(tag: DW_TAG_member, name: "bundle_size", scope: !4688, file: !4689, line: 161, baseType: !210, size: 32, offset: 608)
!4710 = !DIDerivedType(tag: DW_TAG_member, name: "bundle_drawtype", scope: !4688, file: !4689, line: 162, baseType: !14, size: 8, offset: 640)
!4711 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !4688, file: !4689, line: 163, baseType: !1524, size: 24, offset: 648)
!4712 = !DIDerivedType(tag: DW_TAG_member, name: "lay_prev", scope: !4688, file: !4689, line: 165, baseType: !231, size: 32, offset: 672)
!4713 = !DIDerivedType(tag: DW_TAG_member, name: "lay_used", scope: !4688, file: !4689, line: 166, baseType: !231, size: 32, offset: 704)
!4714 = !DIDerivedType(tag: DW_TAG_member, name: "persp", scope: !4688, file: !4689, line: 168, baseType: !48, size: 16, offset: 736)
!4715 = !DIDerivedType(tag: DW_TAG_member, name: "view", scope: !4688, file: !4689, line: 169, baseType: !48, size: 16, offset: 752)
!4716 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !4688, file: !4689, line: 171, baseType: !162, size: 64, offset: 768)
!4717 = !DIDerivedType(tag: DW_TAG_member, name: "ob_centre", scope: !4688, file: !4689, line: 171, baseType: !162, size: 64, offset: 832)
!4718 = !DIDerivedType(tag: DW_TAG_member, name: "render_border", scope: !4688, file: !4689, line: 172, baseType: !1145, size: 128, offset: 896)
!4719 = !DIDerivedType(tag: DW_TAG_member, name: "bgpicbase", scope: !4688, file: !4689, line: 174, baseType: !60, size: 128, offset: 1024)
!4720 = !DIDerivedType(tag: DW_TAG_member, name: "bgpic", scope: !4688, file: !4689, line: 175, baseType: !4721, size: 64, offset: 1152)
!4721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4722, size: 64)
!4722 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BGpic", file: !4689, line: 70, size: 832, elements: !4723)
!4723 = !{!4724, !4725, !4726, !4727, !4728, !4729, !4735, !4736, !4737, !4738, !4739, !4740, !4741, !4742}
!4724 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4722, file: !4689, line: 71, baseType: !4721, size: 64)
!4725 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4722, file: !4689, line: 71, baseType: !4721, size: 64, offset: 64)
!4726 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !4722, file: !4689, line: 73, baseType: !890, size: 64, offset: 128)
!4727 = !DIDerivedType(tag: DW_TAG_member, name: "iuser", scope: !4722, file: !4689, line: 74, baseType: !1056, size: 320, offset: 192)
!4728 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !4722, file: !4689, line: 75, baseType: !1295, size: 64, offset: 512)
!4729 = !DIDerivedType(tag: DW_TAG_member, name: "cuser", scope: !4722, file: !4689, line: 76, baseType: !4730, size: 64, offset: 576)
!4730 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClipUser", file: !1297, line: 50, size: 64, elements: !4731)
!4731 = !{!4732, !4733, !4734}
!4732 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !4730, file: !1297, line: 51, baseType: !22, size: 32)
!4733 = !DIDerivedType(tag: DW_TAG_member, name: "render_size", scope: !4730, file: !1297, line: 52, baseType: !48, size: 16, offset: 32)
!4734 = !DIDerivedType(tag: DW_TAG_member, name: "render_flag", scope: !4730, file: !1297, line: 52, baseType: !48, size: 16, offset: 48)
!4735 = !DIDerivedType(tag: DW_TAG_member, name: "xof", scope: !4722, file: !4689, line: 77, baseType: !210, size: 32, offset: 640)
!4736 = !DIDerivedType(tag: DW_TAG_member, name: "yof", scope: !4722, file: !4689, line: 77, baseType: !210, size: 32, offset: 672)
!4737 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4722, file: !4689, line: 77, baseType: !210, size: 32, offset: 704)
!4738 = !DIDerivedType(tag: DW_TAG_member, name: "blend", scope: !4722, file: !4689, line: 77, baseType: !210, size: 32, offset: 736)
!4739 = !DIDerivedType(tag: DW_TAG_member, name: "view", scope: !4722, file: !4689, line: 78, baseType: !48, size: 16, offset: 768)
!4740 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !4722, file: !4689, line: 79, baseType: !48, size: 16, offset: 784)
!4741 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !4722, file: !4689, line: 80, baseType: !48, size: 16, offset: 800)
!4742 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !4722, file: !4689, line: 80, baseType: !48, size: 16, offset: 816)
!4743 = !DIDerivedType(tag: DW_TAG_member, name: "localvd", scope: !4688, file: !4689, line: 177, baseType: !4687, size: 64, offset: 1216)
!4744 = !DIDerivedType(tag: DW_TAG_member, name: "ob_centre_bone", scope: !4688, file: !4689, line: 179, baseType: !33, size: 512, offset: 1280)
!4745 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !4688, file: !4689, line: 181, baseType: !231, size: 32, offset: 1792)
!4746 = !DIDerivedType(tag: DW_TAG_member, name: "layact", scope: !4688, file: !4689, line: 182, baseType: !22, size: 32, offset: 1824)
!4747 = !DIDerivedType(tag: DW_TAG_member, name: "drawtype", scope: !4688, file: !4689, line: 187, baseType: !48, size: 16, offset: 1856)
!4748 = !DIDerivedType(tag: DW_TAG_member, name: "ob_centre_cursor", scope: !4688, file: !4689, line: 188, baseType: !48, size: 16, offset: 1872)
!4749 = !DIDerivedType(tag: DW_TAG_member, name: "scenelock", scope: !4688, file: !4689, line: 189, baseType: !48, size: 16, offset: 1888)
!4750 = !DIDerivedType(tag: DW_TAG_member, name: "around", scope: !4688, file: !4689, line: 189, baseType: !48, size: 16, offset: 1904)
!4751 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !4688, file: !4689, line: 190, baseType: !48, size: 16, offset: 1920)
!4752 = !DIDerivedType(tag: DW_TAG_member, name: "flag2", scope: !4688, file: !4689, line: 190, baseType: !48, size: 16, offset: 1936)
!4753 = !DIDerivedType(tag: DW_TAG_member, name: "lens", scope: !4688, file: !4689, line: 192, baseType: !210, size: 32, offset: 1952)
!4754 = !DIDerivedType(tag: DW_TAG_member, name: "grid", scope: !4688, file: !4689, line: 192, baseType: !210, size: 32, offset: 1984)
!4755 = !DIDerivedType(tag: DW_TAG_member, name: "near", scope: !4688, file: !4689, line: 193, baseType: !210, size: 32, offset: 2016)
!4756 = !DIDerivedType(tag: DW_TAG_member, name: "far", scope: !4688, file: !4689, line: 193, baseType: !210, size: 32, offset: 2048)
!4757 = !DIDerivedType(tag: DW_TAG_member, name: "ofs", scope: !4688, file: !4689, line: 194, baseType: !209, size: 96, offset: 2080)
!4758 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !4688, file: !4689, line: 195, baseType: !209, size: 96, offset: 2176)
!4759 = !DIDerivedType(tag: DW_TAG_member, name: "matcap_icon", scope: !4688, file: !4689, line: 197, baseType: !48, size: 16, offset: 2272)
!4760 = !DIDerivedType(tag: DW_TAG_member, name: "gridlines", scope: !4688, file: !4689, line: 199, baseType: !48, size: 16, offset: 2288)
!4761 = !DIDerivedType(tag: DW_TAG_member, name: "gridsubdiv", scope: !4688, file: !4689, line: 200, baseType: !48, size: 16, offset: 2304)
!4762 = !DIDerivedType(tag: DW_TAG_member, name: "gridflag", scope: !4688, file: !4689, line: 201, baseType: !14, size: 8, offset: 2320)
!4763 = !DIDerivedType(tag: DW_TAG_member, name: "twtype", scope: !4688, file: !4689, line: 204, baseType: !14, size: 8, offset: 2328)
!4764 = !DIDerivedType(tag: DW_TAG_member, name: "twmode", scope: !4688, file: !4689, line: 204, baseType: !14, size: 8, offset: 2336)
!4765 = !DIDerivedType(tag: DW_TAG_member, name: "twflag", scope: !4688, file: !4689, line: 204, baseType: !14, size: 8, offset: 2344)
!4766 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !4688, file: !4689, line: 204, baseType: !200, size: 16, offset: 2352)
!4767 = !DIDerivedType(tag: DW_TAG_member, name: "afterdraw_transp", scope: !4688, file: !4689, line: 207, baseType: !60, size: 128, offset: 2368)
!4768 = !DIDerivedType(tag: DW_TAG_member, name: "afterdraw_xray", scope: !4688, file: !4689, line: 208, baseType: !60, size: 128, offset: 2496)
!4769 = !DIDerivedType(tag: DW_TAG_member, name: "afterdraw_xraytransp", scope: !4688, file: !4689, line: 209, baseType: !60, size: 128, offset: 2624)
!4770 = !DIDerivedType(tag: DW_TAG_member, name: "zbuf", scope: !4688, file: !4689, line: 212, baseType: !14, size: 8, offset: 2752)
!4771 = !DIDerivedType(tag: DW_TAG_member, name: "transp", scope: !4688, file: !4689, line: 212, baseType: !14, size: 8, offset: 2760)
!4772 = !DIDerivedType(tag: DW_TAG_member, name: "xray", scope: !4688, file: !4689, line: 212, baseType: !14, size: 8, offset: 2768)
!4773 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !4688, file: !4689, line: 213, baseType: !2059, size: 40, offset: 2776)
!4774 = !DIDerivedType(tag: DW_TAG_member, name: "properties_storage", scope: !4688, file: !4689, line: 215, baseType: !56, size: 64, offset: 2816)
!4775 = !DIDerivedType(tag: DW_TAG_member, name: "defmaterial", scope: !4688, file: !4689, line: 216, baseType: !405, size: 64, offset: 2880)
!4776 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !4688, file: !4689, line: 219, baseType: !378, size: 64, offset: 2944)
!4777 = !DIDerivedType(tag: DW_TAG_member, name: "rv3d", scope: !4680, file: !2956, line: 72, baseType: !4778, size: 64, offset: 320)
!4778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4779, size: 64)
!4779 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RegionView3D", file: !4689, line: 85, size: 7040, elements: !4780)
!4780 = !{!4781, !4782, !4783, !4784, !4785, !4786, !4787, !4788, !4791, !4792, !4793, !4794, !4797, !4808, !4809, !4812, !4813, !4814, !4815, !4816, !4817, !4818, !4819, !4820, !4821, !4822, !4823, !4824, !4825, !4826, !4827, !4828, !4829, !4830, !4831, !4832, !4833, !4834, !4835, !4836}
!4781 = !DIDerivedType(tag: DW_TAG_member, name: "winmat", scope: !4779, file: !4689, line: 87, baseType: !428, size: 512)
!4782 = !DIDerivedType(tag: DW_TAG_member, name: "viewmat", scope: !4779, file: !4689, line: 88, baseType: !428, size: 512, offset: 512)
!4783 = !DIDerivedType(tag: DW_TAG_member, name: "viewinv", scope: !4779, file: !4689, line: 89, baseType: !428, size: 512, offset: 1024)
!4784 = !DIDerivedType(tag: DW_TAG_member, name: "persmat", scope: !4779, file: !4689, line: 90, baseType: !428, size: 512, offset: 1536)
!4785 = !DIDerivedType(tag: DW_TAG_member, name: "persinv", scope: !4779, file: !4689, line: 91, baseType: !428, size: 512, offset: 2048)
!4786 = !DIDerivedType(tag: DW_TAG_member, name: "viewmatob", scope: !4779, file: !4689, line: 94, baseType: !428, size: 512, offset: 2560)
!4787 = !DIDerivedType(tag: DW_TAG_member, name: "persmatob", scope: !4779, file: !4689, line: 95, baseType: !428, size: 512, offset: 3072)
!4788 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !4779, file: !4689, line: 99, baseType: !4789, size: 768, offset: 3584)
!4789 = !DICompositeType(tag: DW_TAG_array_type, baseType: !210, size: 768, elements: !4790)
!4790 = !{!1770, !421}
!4791 = !DIDerivedType(tag: DW_TAG_member, name: "clip_local", scope: !4779, file: !4689, line: 100, baseType: !4789, size: 768, offset: 4352)
!4792 = !DIDerivedType(tag: DW_TAG_member, name: "clipbb", scope: !4779, file: !4689, line: 101, baseType: !310, size: 64, offset: 5120)
!4793 = !DIDerivedType(tag: DW_TAG_member, name: "localvd", scope: !4779, file: !4689, line: 103, baseType: !4778, size: 64, offset: 5184)
!4794 = !DIDerivedType(tag: DW_TAG_member, name: "render_engine", scope: !4779, file: !4689, line: 104, baseType: !4795, size: 64, offset: 5248)
!4795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4796, size: 64)
!4796 = !DICompositeType(tag: DW_TAG_structure_type, name: "RenderEngine", file: !4689, line: 44, flags: DIFlagFwdDecl)
!4797 = !DIDerivedType(tag: DW_TAG_member, name: "depths", scope: !4779, file: !4689, line: 105, baseType: !4798, size: 64, offset: 5312)
!4798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4799, size: 64)
!4799 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ViewDepths", file: !2956, line: 77, size: 320, elements: !4800)
!4800 = !{!4801, !4802, !4803, !4804, !4805, !4806, !4807}
!4801 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !4799, file: !2956, line: 78, baseType: !464, size: 16)
!4802 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !4799, file: !2956, line: 78, baseType: !464, size: 16, offset: 16)
!4803 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !4799, file: !2956, line: 79, baseType: !48, size: 16, offset: 32)
!4804 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !4799, file: !2956, line: 79, baseType: !48, size: 16, offset: 48)
!4805 = !DIDerivedType(tag: DW_TAG_member, name: "depths", scope: !4799, file: !2956, line: 80, baseType: !242, size: 64, offset: 64)
!4806 = !DIDerivedType(tag: DW_TAG_member, name: "depth_range", scope: !4799, file: !2956, line: 81, baseType: !1712, size: 128, offset: 128)
!4807 = !DIDerivedType(tag: DW_TAG_member, name: "damaged", scope: !4799, file: !2956, line: 83, baseType: !259, size: 8, offset: 256)
!4808 = !DIDerivedType(tag: DW_TAG_member, name: "gpuoffscreen", scope: !4779, file: !4689, line: 106, baseType: !56, size: 64, offset: 5376)
!4809 = !DIDerivedType(tag: DW_TAG_member, name: "sms", scope: !4779, file: !4689, line: 109, baseType: !4810, size: 64, offset: 5440)
!4810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4811, size: 64)
!4811 = !DICompositeType(tag: DW_TAG_structure_type, name: "SmoothView3DStore", file: !4689, line: 46, flags: DIFlagFwdDecl)
!4812 = !DIDerivedType(tag: DW_TAG_member, name: "smooth_timer", scope: !4779, file: !4689, line: 110, baseType: !94, size: 64, offset: 5504)
!4813 = !DIDerivedType(tag: DW_TAG_member, name: "twmat", scope: !4779, file: !4689, line: 114, baseType: !428, size: 512, offset: 5568)
!4814 = !DIDerivedType(tag: DW_TAG_member, name: "viewquat", scope: !4779, file: !4689, line: 116, baseType: !419, size: 128, offset: 6080)
!4815 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !4779, file: !4689, line: 117, baseType: !210, size: 32, offset: 6208)
!4816 = !DIDerivedType(tag: DW_TAG_member, name: "camdx", scope: !4779, file: !4689, line: 118, baseType: !210, size: 32, offset: 6240)
!4817 = !DIDerivedType(tag: DW_TAG_member, name: "camdy", scope: !4779, file: !4689, line: 118, baseType: !210, size: 32, offset: 6272)
!4818 = !DIDerivedType(tag: DW_TAG_member, name: "pixsize", scope: !4779, file: !4689, line: 119, baseType: !210, size: 32, offset: 6304)
!4819 = !DIDerivedType(tag: DW_TAG_member, name: "ofs", scope: !4779, file: !4689, line: 120, baseType: !209, size: 96, offset: 6336)
!4820 = !DIDerivedType(tag: DW_TAG_member, name: "camzoom", scope: !4779, file: !4689, line: 122, baseType: !210, size: 32, offset: 6432)
!4821 = !DIDerivedType(tag: DW_TAG_member, name: "is_persp", scope: !4779, file: !4689, line: 123, baseType: !14, size: 8, offset: 6464)
!4822 = !DIDerivedType(tag: DW_TAG_member, name: "persp", scope: !4779, file: !4689, line: 125, baseType: !14, size: 8, offset: 6472)
!4823 = !DIDerivedType(tag: DW_TAG_member, name: "view", scope: !4779, file: !4689, line: 126, baseType: !14, size: 8, offset: 6480)
!4824 = !DIDerivedType(tag: DW_TAG_member, name: "viewlock", scope: !4779, file: !4689, line: 127, baseType: !14, size: 8, offset: 6488)
!4825 = !DIDerivedType(tag: DW_TAG_member, name: "viewlock_quad", scope: !4779, file: !4689, line: 128, baseType: !14, size: 8, offset: 6496)
!4826 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !4779, file: !4689, line: 129, baseType: !1524, size: 24, offset: 6504)
!4827 = !DIDerivedType(tag: DW_TAG_member, name: "ofs_lock", scope: !4779, file: !4689, line: 130, baseType: !1052, size: 64, offset: 6528)
!4828 = !DIDerivedType(tag: DW_TAG_member, name: "twdrawflag", scope: !4779, file: !4689, line: 132, baseType: !48, size: 16, offset: 6592)
!4829 = !DIDerivedType(tag: DW_TAG_member, name: "rflag", scope: !4779, file: !4689, line: 133, baseType: !48, size: 16, offset: 6608)
!4830 = !DIDerivedType(tag: DW_TAG_member, name: "lviewquat", scope: !4779, file: !4689, line: 137, baseType: !419, size: 128, offset: 6624)
!4831 = !DIDerivedType(tag: DW_TAG_member, name: "lpersp", scope: !4779, file: !4689, line: 138, baseType: !48, size: 16, offset: 6752)
!4832 = !DIDerivedType(tag: DW_TAG_member, name: "lview", scope: !4779, file: !4689, line: 138, baseType: !48, size: 16, offset: 6768)
!4833 = !DIDerivedType(tag: DW_TAG_member, name: "gridview", scope: !4779, file: !4689, line: 140, baseType: !210, size: 32, offset: 6784)
!4834 = !DIDerivedType(tag: DW_TAG_member, name: "tw_idot", scope: !4779, file: !4689, line: 141, baseType: !209, size: 96, offset: 6816)
!4835 = !DIDerivedType(tag: DW_TAG_member, name: "rot_angle", scope: !4779, file: !4689, line: 145, baseType: !210, size: 32, offset: 6912)
!4836 = !DIDerivedType(tag: DW_TAG_member, name: "rot_axis", scope: !4779, file: !4689, line: 146, baseType: !209, size: 96, offset: 6944)
!4837 = !DIDerivedType(tag: DW_TAG_member, name: "em", scope: !4680, file: !2956, line: 73, baseType: !3260, size: 64, offset: 384)
!4838 = !DIDerivedType(tag: DW_TAG_member, name: "mval", scope: !4680, file: !2956, line: 74, baseType: !1305, size: 64, offset: 448)
!4839 = !DILocation(line: 1087, column: 14, scope: !4664)
!4840 = !DILocalVariable(name: "me", scope: !4664, file: !3, line: 1088, type: !3187)
!4841 = !DILocation(line: 1088, column: 8, scope: !4664)
!4842 = !DILocalVariable(name: "changed", scope: !4664, file: !3, line: 1089, type: !259)
!4843 = !DILocation(line: 1089, column: 7, scope: !4664)
!4844 = !DILocation(line: 1091, column: 25, scope: !4664)
!4845 = !DILocation(line: 1091, column: 2, scope: !4664)
!4846 = !DILocation(line: 1092, column: 31, scope: !4664)
!4847 = !DILocation(line: 1092, column: 7, scope: !4664)
!4848 = !DILocation(line: 1092, column: 5, scope: !4664)
!4849 = !DILocation(line: 1094, column: 6, scope: !4850)
!4850 = distinct !DILexicalBlock(scope: !4664, file: !3, line: 1094, column: 6)
!4851 = !DILocation(line: 1094, column: 9, scope: !4850)
!4852 = !DILocation(line: 1094, column: 12, scope: !4850)
!4853 = !DILocation(line: 1094, column: 16, scope: !4850)
!4854 = !DILocation(line: 1094, column: 22, scope: !4850)
!4855 = !DILocation(line: 1094, column: 28, scope: !4850)
!4856 = !DILocation(line: 1094, column: 25, scope: !4850)
!4857 = !DILocation(line: 1094, column: 32, scope: !4850)
!4858 = !DILocation(line: 1094, column: 38, scope: !4850)
!4859 = !DILocation(line: 1094, column: 35, scope: !4850)
!4860 = !DILocation(line: 1094, column: 6, scope: !4664)
!4861 = !DILocalVariable(name: "use_vert_sel", scope: !4862, file: !3, line: 1095, type: !3408)
!4862 = distinct !DILexicalBlock(scope: !4850, file: !3, line: 1094, column: 44)
!4863 = !DILocation(line: 1095, column: 13, scope: !4862)
!4864 = !DILocation(line: 1095, column: 29, scope: !4862)
!4865 = !DILocation(line: 1095, column: 33, scope: !4862)
!4866 = !DILocation(line: 1095, column: 42, scope: !4862)
!4867 = !DILocation(line: 1095, column: 68, scope: !4862)
!4868 = !DILocalVariable(name: "v_idx_best", scope: !4862, file: !3, line: 1096, type: !22)
!4869 = !DILocation(line: 1096, column: 7, scope: !4862)
!4870 = !DILocalVariable(name: "index", scope: !4862, file: !3, line: 1097, type: !231)
!4871 = !DILocation(line: 1097, column: 16, scope: !4862)
!4872 = !DILocation(line: 1099, column: 32, scope: !4862)
!4873 = !DILocation(line: 1099, column: 3, scope: !4862)
!4874 = !DILocation(line: 1100, column: 31, scope: !4862)
!4875 = !DILocation(line: 1100, column: 41, scope: !4862)
!4876 = !DILocation(line: 1100, column: 3, scope: !4862)
!4877 = !DILocation(line: 1102, column: 7, scope: !4878)
!4878 = distinct !DILexicalBlock(scope: !4862, file: !3, line: 1102, column: 7)
!4879 = !DILocation(line: 1102, column: 7, scope: !4862)
!4880 = !DILocation(line: 1103, column: 26, scope: !4881)
!4881 = distinct !DILexicalBlock(scope: !4882, file: !3, line: 1103, column: 8)
!4882 = distinct !DILexicalBlock(scope: !4878, file: !3, line: 1102, column: 21)
!4883 = !DILocation(line: 1103, column: 32, scope: !4881)
!4884 = !DILocation(line: 1103, column: 39, scope: !4881)
!4885 = !DILocation(line: 1103, column: 46, scope: !4881)
!4886 = !DILocation(line: 1103, column: 8, scope: !4881)
!4887 = !DILocation(line: 1103, column: 8, scope: !4882)
!4888 = !DILocation(line: 1104, column: 18, scope: !4889)
!4889 = distinct !DILexicalBlock(scope: !4881, file: !3, line: 1103, column: 99)
!4890 = !DILocation(line: 1104, column: 16, scope: !4889)
!4891 = !DILocation(line: 1105, column: 4, scope: !4889)
!4892 = !DILocation(line: 1106, column: 3, scope: !4882)
!4893 = !DILocation(line: 1108, column: 31, scope: !4894)
!4894 = distinct !DILexicalBlock(scope: !4895, file: !3, line: 1108, column: 8)
!4895 = distinct !DILexicalBlock(scope: !4878, file: !3, line: 1107, column: 8)
!4896 = !DILocation(line: 1108, column: 37, scope: !4894)
!4897 = !DILocation(line: 1108, column: 44, scope: !4894)
!4898 = !DILocation(line: 1108, column: 51, scope: !4894)
!4899 = !DILocation(line: 1108, column: 8, scope: !4894)
!4900 = !DILocation(line: 1108, column: 8, scope: !4895)
!4901 = !DILocation(line: 1109, column: 18, scope: !4902)
!4902 = distinct !DILexicalBlock(scope: !4894, file: !3, line: 1108, column: 98)
!4903 = !DILocation(line: 1109, column: 16, scope: !4902)
!4904 = !DILocation(line: 1110, column: 4, scope: !4902)
!4905 = !DILocation(line: 1111, column: 31, scope: !4906)
!4906 = distinct !DILexicalBlock(scope: !4894, file: !3, line: 1111, column: 13)
!4907 = !DILocation(line: 1111, column: 37, scope: !4906)
!4908 = !DILocation(line: 1111, column: 44, scope: !4906)
!4909 = !DILocation(line: 1111, column: 51, scope: !4906)
!4910 = !DILocation(line: 1111, column: 13, scope: !4906)
!4911 = !DILocation(line: 1111, column: 13, scope: !4894)
!4912 = !DILocation(line: 1113, column: 16, scope: !4913)
!4913 = distinct !DILexicalBlock(scope: !4906, file: !3, line: 1111, column: 98)
!4914 = !DILocation(line: 1113, column: 20, scope: !4913)
!4915 = !DILocation(line: 1113, column: 5, scope: !4913)
!4916 = !DILocation(line: 1114, column: 4, scope: !4913)
!4917 = !DILocation(line: 1117, column: 7, scope: !4918)
!4918 = distinct !DILexicalBlock(scope: !4862, file: !3, line: 1117, column: 7)
!4919 = !DILocation(line: 1117, column: 18, scope: !4918)
!4920 = !DILocation(line: 1117, column: 7, scope: !4862)
!4921 = !DILocalVariable(name: "ts", scope: !4922, file: !3, line: 1118, type: !4923)
!4922 = distinct !DILexicalBlock(scope: !4918, file: !3, line: 1117, column: 25)
!4923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4924, size: 64)
!4924 = !DIDerivedType(tag: DW_TAG_typedef, name: "ToolSettings", file: !154, line: 1180, baseType: !1535)
!4925 = !DILocation(line: 1118, column: 18, scope: !4922)
!4926 = !DILocation(line: 1118, column: 26, scope: !4922)
!4927 = !DILocation(line: 1118, column: 33, scope: !4922)
!4928 = !DILocalVariable(name: "brush", scope: !4922, file: !3, line: 1119, type: !3695)
!4929 = !DILocation(line: 1119, column: 11, scope: !4922)
!4930 = !DILocation(line: 1119, column: 36, scope: !4922)
!4931 = !DILocation(line: 1119, column: 40, scope: !4922)
!4932 = !DILocation(line: 1119, column: 48, scope: !4922)
!4933 = !DILocation(line: 1119, column: 19, scope: !4922)
!4934 = !DILocalVariable(name: "vgroup_active", scope: !4922, file: !3, line: 1120, type: !3408)
!4935 = !DILocation(line: 1120, column: 14, scope: !4922)
!4936 = !DILocation(line: 1120, column: 33, scope: !4922)
!4937 = !DILocation(line: 1120, column: 40, scope: !4922)
!4938 = !DILocation(line: 1120, column: 30, scope: !4922)
!4939 = !DILocation(line: 1120, column: 47, scope: !4922)
!4940 = !DILocalVariable(name: "vgroup_weight", scope: !4922, file: !3, line: 1121, type: !210)
!4941 = !DILocation(line: 1121, column: 10, scope: !4922)
!4942 = !DILocation(line: 1121, column: 47, scope: !4922)
!4943 = !DILocation(line: 1121, column: 51, scope: !4922)
!4944 = !DILocation(line: 1121, column: 57, scope: !4922)
!4945 = !DILocation(line: 1121, column: 70, scope: !4922)
!4946 = !DILocation(line: 1121, column: 26, scope: !4922)
!4947 = !DILocation(line: 1122, column: 28, scope: !4922)
!4948 = !DILocation(line: 1122, column: 35, scope: !4922)
!4949 = !DILocation(line: 1122, column: 42, scope: !4922)
!4950 = !DILocation(line: 1122, column: 4, scope: !4922)
!4951 = !DILocation(line: 1123, column: 12, scope: !4922)
!4952 = !DILocation(line: 1124, column: 3, scope: !4922)
!4953 = !DILocation(line: 1125, column: 2, scope: !4862)
!4954 = !DILocation(line: 1127, column: 6, scope: !4955)
!4955 = distinct !DILexicalBlock(scope: !4664, file: !3, line: 1127, column: 6)
!4956 = !DILocation(line: 1127, column: 6, scope: !4664)
!4957 = !DILocation(line: 1129, column: 3, scope: !4958)
!4958 = distinct !DILexicalBlock(scope: !4955, file: !3, line: 1127, column: 15)
!4959 = !DILocation(line: 1131, column: 3, scope: !4958)
!4960 = !DILocation(line: 1134, column: 3, scope: !4961)
!4961 = distinct !DILexicalBlock(scope: !4955, file: !3, line: 1133, column: 7)
!4962 = !DILocation(line: 1136, column: 1, scope: !4664)
!4963 = distinct !DISubprogram(name: "PAINT_OT_weight_sample_group", scope: !3, file: !3, line: 1256, type: !4, scopeLine: 1257, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2758, retainedNodes: !3422)
!4964 = !DILocalVariable(name: "ot", arg: 1, scope: !4963, file: !3, line: 1256, type: !6)
!4965 = !DILocation(line: 1256, column: 51, scope: !4963)
!4966 = !DILocalVariable(name: "prop", scope: !4963, file: !3, line: 1258, type: !2707)
!4967 = !DILocation(line: 1258, column: 15, scope: !4963)
!4968 = !DILocation(line: 1261, column: 2, scope: !4963)
!4969 = !DILocation(line: 1261, column: 6, scope: !4963)
!4970 = !DILocation(line: 1261, column: 11, scope: !4963)
!4971 = !DILocation(line: 1262, column: 2, scope: !4963)
!4972 = !DILocation(line: 1262, column: 6, scope: !4963)
!4973 = !DILocation(line: 1262, column: 13, scope: !4963)
!4974 = !DILocation(line: 1263, column: 2, scope: !4963)
!4975 = !DILocation(line: 1263, column: 6, scope: !4963)
!4976 = !DILocation(line: 1263, column: 18, scope: !4963)
!4977 = !DILocation(line: 1266, column: 2, scope: !4963)
!4978 = !DILocation(line: 1266, column: 6, scope: !4963)
!4979 = !DILocation(line: 1266, column: 11, scope: !4963)
!4980 = !DILocation(line: 1267, column: 2, scope: !4963)
!4981 = !DILocation(line: 1267, column: 6, scope: !4963)
!4982 = !DILocation(line: 1267, column: 13, scope: !4963)
!4983 = !DILocation(line: 1268, column: 2, scope: !4963)
!4984 = !DILocation(line: 1268, column: 6, scope: !4963)
!4985 = !DILocation(line: 1268, column: 11, scope: !4963)
!4986 = !DILocation(line: 1271, column: 2, scope: !4963)
!4987 = !DILocation(line: 1271, column: 6, scope: !4963)
!4988 = !DILocation(line: 1271, column: 11, scope: !4963)
!4989 = !DILocation(line: 1274, column: 22, scope: !4963)
!4990 = !DILocation(line: 1274, column: 26, scope: !4963)
!4991 = !DILocation(line: 1274, column: 9, scope: !4963)
!4992 = !DILocation(line: 1274, column: 7, scope: !4963)
!4993 = !DILocation(line: 1275, column: 21, scope: !4963)
!4994 = !DILocation(line: 1275, column: 2, scope: !4963)
!4995 = !DILocation(line: 1276, column: 24, scope: !4963)
!4996 = !DILocation(line: 1276, column: 2, scope: !4963)
!4997 = !DILocation(line: 1277, column: 13, scope: !4963)
!4998 = !DILocation(line: 1277, column: 2, scope: !4963)
!4999 = !DILocation(line: 1277, column: 6, scope: !4963)
!5000 = !DILocation(line: 1277, column: 11, scope: !4963)
!5001 = !DILocation(line: 1278, column: 1, scope: !4963)
!5002 = distinct !DISubprogram(name: "weight_sample_group_exec", scope: !3, file: !3, line: 1241, type: !5003, scopeLine: 1242, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2758, retainedNodes: !3422)
!5003 = !DISubroutineType(types: !5004)
!5004 = !{!22, !3439, !4667}
!5005 = !DILocalVariable(name: "C", arg: 1, scope: !5002, file: !3, line: 1241, type: !3439)
!5006 = !DILocation(line: 1241, column: 47, scope: !5002)
!5007 = !DILocalVariable(name: "op", arg: 2, scope: !5002, file: !3, line: 1241, type: !4667)
!5008 = !DILocation(line: 1241, column: 62, scope: !5002)
!5009 = !DILocalVariable(name: "type", scope: !5002, file: !3, line: 1243, type: !22)
!5010 = !DILocation(line: 1243, column: 6, scope: !5002)
!5011 = !DILocation(line: 1243, column: 26, scope: !5002)
!5012 = !DILocation(line: 1243, column: 30, scope: !5002)
!5013 = !DILocation(line: 1243, column: 13, scope: !5002)
!5014 = !DILocalVariable(name: "vc", scope: !5002, file: !3, line: 1244, type: !4679)
!5015 = !DILocation(line: 1244, column: 14, scope: !5002)
!5016 = !DILocation(line: 1245, column: 25, scope: !5002)
!5017 = !DILocation(line: 1245, column: 2, scope: !5002)
!5018 = !DILocation(line: 1248, column: 21, scope: !5002)
!5019 = !DILocation(line: 1248, column: 26, scope: !5002)
!5020 = !DILocation(line: 1248, column: 5, scope: !5002)
!5021 = !DILocation(line: 1248, column: 12, scope: !5002)
!5022 = !DILocation(line: 1248, column: 19, scope: !5002)
!5023 = !DILocation(line: 1250, column: 24, scope: !5002)
!5024 = !DILocation(line: 1250, column: 31, scope: !5002)
!5025 = !DILocation(line: 1250, column: 2, scope: !5002)
!5026 = !DILocation(line: 1251, column: 24, scope: !5002)
!5027 = !DILocation(line: 1251, column: 51, scope: !5002)
!5028 = !DILocation(line: 1251, column: 48, scope: !5002)
!5029 = !DILocation(line: 1251, column: 2, scope: !5002)
!5030 = !DILocation(line: 1252, column: 2, scope: !5002)
!5031 = distinct !DISubprogram(name: "weight_paint_sample_enum_itemf", scope: !3, file: !3, line: 1168, type: !5032, scopeLine: 1169, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2758, retainedNodes: !3422)
!5032 = !DISubroutineType(types: !5033)
!5033 = !{!5034, !3439, !5035, !2707, !1742}
!5034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3424, size: 64)
!5035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5036, size: 64)
!5036 = !DIDerivedType(tag: DW_TAG_typedef, name: "PointerRNA", file: !25, line: 62, baseType: !74)
!5037 = !DILocalVariable(name: "C", arg: 1, scope: !5031, file: !3, line: 1168, type: !3439)
!5038 = !DILocation(line: 1168, column: 67, scope: !5031)
!5039 = !DILocalVariable(name: "UNUSED_ptr", arg: 2, scope: !5031, file: !3, line: 1168, type: !5035)
!5040 = !DILocation(line: 1168, column: 82, scope: !5031)
!5041 = !DILocalVariable(name: "UNUSED_prop", arg: 3, scope: !5031, file: !3, line: 1168, type: !2707)
!5042 = !DILocation(line: 1168, column: 108, scope: !5031)
!5043 = !DILocalVariable(name: "r_free", arg: 4, scope: !5031, file: !3, line: 1168, type: !1742)
!5044 = !DILocation(line: 1168, column: 128, scope: !5031)
!5045 = !DILocation(line: 1170, column: 6, scope: !5046)
!5046 = distinct !DILexicalBlock(scope: !5031, file: !3, line: 1170, column: 6)
!5047 = !DILocation(line: 1170, column: 6, scope: !5031)
!5048 = !DILocalVariable(name: "win", scope: !5049, file: !3, line: 1171, type: !5050)
!5049 = distinct !DILexicalBlock(scope: !5046, file: !3, line: 1170, column: 9)
!5050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5051, size: 64)
!5051 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmWindow", file: !28, line: 209, baseType: !101)
!5052 = !DILocation(line: 1171, column: 13, scope: !5049)
!5053 = !DILocation(line: 1171, column: 33, scope: !5049)
!5054 = !DILocation(line: 1171, column: 19, scope: !5049)
!5055 = !DILocation(line: 1172, column: 7, scope: !5056)
!5056 = distinct !DILexicalBlock(scope: !5049, file: !3, line: 1172, column: 7)
!5057 = !DILocation(line: 1172, column: 11, scope: !5056)
!5058 = !DILocation(line: 1172, column: 14, scope: !5056)
!5059 = !DILocation(line: 1172, column: 19, scope: !5056)
!5060 = !DILocation(line: 1172, column: 7, scope: !5049)
!5061 = !DILocalVariable(name: "vc", scope: !5062, file: !3, line: 1173, type: !4679)
!5062 = distinct !DILexicalBlock(scope: !5056, file: !3, line: 1172, column: 31)
!5063 = !DILocation(line: 1173, column: 16, scope: !5062)
!5064 = !DILocalVariable(name: "me", scope: !5062, file: !3, line: 1174, type: !3187)
!5065 = !DILocation(line: 1174, column: 10, scope: !5062)
!5066 = !DILocation(line: 1176, column: 27, scope: !5062)
!5067 = !DILocation(line: 1176, column: 4, scope: !5062)
!5068 = !DILocation(line: 1177, column: 33, scope: !5062)
!5069 = !DILocation(line: 1177, column: 9, scope: !5062)
!5070 = !DILocation(line: 1177, column: 7, scope: !5062)
!5071 = !DILocation(line: 1179, column: 8, scope: !5072)
!5072 = distinct !DILexicalBlock(scope: !5062, file: !3, line: 1179, column: 8)
!5073 = !DILocation(line: 1179, column: 11, scope: !5072)
!5074 = !DILocation(line: 1179, column: 14, scope: !5072)
!5075 = !DILocation(line: 1179, column: 18, scope: !5072)
!5076 = !DILocation(line: 1179, column: 24, scope: !5072)
!5077 = !DILocation(line: 1179, column: 30, scope: !5072)
!5078 = !DILocation(line: 1179, column: 27, scope: !5072)
!5079 = !DILocation(line: 1179, column: 34, scope: !5072)
!5080 = !DILocation(line: 1179, column: 40, scope: !5072)
!5081 = !DILocation(line: 1179, column: 37, scope: !5072)
!5082 = !DILocation(line: 1179, column: 45, scope: !5072)
!5083 = !DILocation(line: 1179, column: 51, scope: !5072)
!5084 = !DILocation(line: 1179, column: 58, scope: !5072)
!5085 = !DILocation(line: 1179, column: 66, scope: !5072)
!5086 = !DILocation(line: 1179, column: 48, scope: !5072)
!5087 = !DILocation(line: 1179, column: 8, scope: !5062)
!5088 = !DILocalVariable(name: "defbase_tot", scope: !5089, file: !3, line: 1180, type: !3408)
!5089 = distinct !DILexicalBlock(scope: !5072, file: !3, line: 1179, column: 73)
!5090 = !DILocation(line: 1180, column: 15, scope: !5089)
!5091 = !DILocation(line: 1180, column: 47, scope: !5089)
!5092 = !DILocation(line: 1180, column: 54, scope: !5089)
!5093 = !DILocation(line: 1180, column: 29, scope: !5089)
!5094 = !DILocalVariable(name: "use_vert_sel", scope: !5089, file: !3, line: 1181, type: !3408)
!5095 = !DILocation(line: 1181, column: 15, scope: !5089)
!5096 = !DILocation(line: 1181, column: 31, scope: !5089)
!5097 = !DILocation(line: 1181, column: 35, scope: !5089)
!5098 = !DILocation(line: 1181, column: 44, scope: !5089)
!5099 = !DILocation(line: 1181, column: 70, scope: !5089)
!5100 = !DILocalVariable(name: "groups", scope: !5089, file: !3, line: 1182, type: !250)
!5101 = !DILocation(line: 1182, column: 10, scope: !5089)
!5102 = !DILocation(line: 1182, column: 19, scope: !5089)
!5103 = !DILocation(line: 1182, column: 31, scope: !5089)
!5104 = !DILocation(line: 1182, column: 43, scope: !5089)
!5105 = !DILocalVariable(name: "found", scope: !5089, file: !3, line: 1183, type: !259)
!5106 = !DILocation(line: 1183, column: 10, scope: !5089)
!5107 = !DILocalVariable(name: "index", scope: !5089, file: !3, line: 1184, type: !231)
!5108 = !DILocation(line: 1184, column: 18, scope: !5089)
!5109 = !DILocalVariable(name: "mval", scope: !5089, file: !3, line: 1186, type: !5110)
!5110 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3408, size: 64, elements: !201)
!5111 = !DILocation(line: 1186, column: 15, scope: !5089)
!5112 = !DILocation(line: 1186, column: 25, scope: !5089)
!5113 = !DILocation(line: 1187, column: 9, scope: !5089)
!5114 = !DILocation(line: 1187, column: 14, scope: !5089)
!5115 = !DILocation(line: 1187, column: 26, scope: !5089)
!5116 = !DILocation(line: 1187, column: 33, scope: !5089)
!5117 = !DILocation(line: 1187, column: 37, scope: !5089)
!5118 = !DILocation(line: 1187, column: 44, scope: !5089)
!5119 = !DILocation(line: 1187, column: 28, scope: !5089)
!5120 = !DILocation(line: 1188, column: 9, scope: !5089)
!5121 = !DILocation(line: 1188, column: 14, scope: !5089)
!5122 = !DILocation(line: 1188, column: 26, scope: !5089)
!5123 = !DILocation(line: 1188, column: 33, scope: !5089)
!5124 = !DILocation(line: 1188, column: 37, scope: !5089)
!5125 = !DILocation(line: 1188, column: 44, scope: !5089)
!5126 = !DILocation(line: 1188, column: 28, scope: !5089)
!5127 = !DILocation(line: 1191, column: 34, scope: !5089)
!5128 = !DILocation(line: 1191, column: 5, scope: !5089)
!5129 = !DILocation(line: 1192, column: 33, scope: !5089)
!5130 = !DILocation(line: 1192, column: 43, scope: !5089)
!5131 = !DILocation(line: 1192, column: 5, scope: !5089)
!5132 = !DILocation(line: 1194, column: 9, scope: !5133)
!5133 = distinct !DILexicalBlock(scope: !5089, file: !3, line: 1194, column: 9)
!5134 = !DILocation(line: 1194, column: 9, scope: !5089)
!5135 = !DILocation(line: 1195, column: 28, scope: !5136)
!5136 = distinct !DILexicalBlock(scope: !5137, file: !3, line: 1195, column: 10)
!5137 = distinct !DILexicalBlock(scope: !5133, file: !3, line: 1194, column: 23)
!5138 = !DILocation(line: 1195, column: 34, scope: !5136)
!5139 = !DILocation(line: 1195, column: 41, scope: !5136)
!5140 = !DILocation(line: 1195, column: 10, scope: !5136)
!5141 = !DILocation(line: 1195, column: 10, scope: !5137)
!5142 = !DILocalVariable(name: "dvert", scope: !5143, file: !3, line: 1196, type: !3406)
!5143 = distinct !DILexicalBlock(scope: !5136, file: !3, line: 1195, column: 94)
!5144 = !DILocation(line: 1196, column: 20, scope: !5143)
!5145 = !DILocation(line: 1196, column: 29, scope: !5143)
!5146 = !DILocation(line: 1196, column: 33, scope: !5143)
!5147 = !DILocation(line: 1196, column: 39, scope: !5143)
!5148 = !DILocation(line: 1197, column: 55, scope: !5143)
!5149 = !DILocation(line: 1197, column: 62, scope: !5143)
!5150 = !DILocation(line: 1197, column: 75, scope: !5143)
!5151 = !DILocation(line: 1197, column: 16, scope: !5143)
!5152 = !DILocation(line: 1197, column: 13, scope: !5143)
!5153 = !DILocation(line: 1198, column: 6, scope: !5143)
!5154 = !DILocation(line: 1199, column: 5, scope: !5137)
!5155 = !DILocation(line: 1201, column: 28, scope: !5156)
!5156 = distinct !DILexicalBlock(scope: !5157, file: !3, line: 1201, column: 10)
!5157 = distinct !DILexicalBlock(scope: !5133, file: !3, line: 1200, column: 10)
!5158 = !DILocation(line: 1201, column: 34, scope: !5156)
!5159 = !DILocation(line: 1201, column: 41, scope: !5156)
!5160 = !DILocation(line: 1201, column: 10, scope: !5156)
!5161 = !DILocation(line: 1201, column: 10, scope: !5157)
!5162 = !DILocalVariable(name: "mp", scope: !5163, file: !3, line: 1202, type: !3410)
!5163 = distinct !DILexicalBlock(scope: !5156, file: !3, line: 1201, column: 88)
!5164 = !DILocation(line: 1202, column: 14, scope: !5163)
!5165 = !DILocation(line: 1202, column: 20, scope: !5163)
!5166 = !DILocation(line: 1202, column: 24, scope: !5163)
!5167 = !DILocation(line: 1202, column: 30, scope: !5163)
!5168 = !DILocalVariable(name: "fidx", scope: !5163, file: !3, line: 1203, type: !231)
!5169 = !DILocation(line: 1203, column: 20, scope: !5163)
!5170 = !DILocation(line: 1203, column: 27, scope: !5163)
!5171 = !DILocation(line: 1203, column: 31, scope: !5163)
!5172 = !DILocation(line: 1203, column: 39, scope: !5163)
!5173 = !DILocation(line: 1205, column: 7, scope: !5163)
!5174 = !DILocalVariable(name: "dvert", scope: !5175, file: !3, line: 1206, type: !3406)
!5175 = distinct !DILexicalBlock(scope: !5163, file: !3, line: 1205, column: 10)
!5176 = !DILocation(line: 1206, column: 21, scope: !5175)
!5177 = !DILocation(line: 1206, column: 30, scope: !5175)
!5178 = !DILocation(line: 1206, column: 34, scope: !5175)
!5179 = !DILocation(line: 1206, column: 40, scope: !5175)
!5180 = !DILocation(line: 1206, column: 44, scope: !5175)
!5181 = !DILocation(line: 1206, column: 50, scope: !5175)
!5182 = !DILocation(line: 1206, column: 54, scope: !5175)
!5183 = !DILocation(line: 1206, column: 66, scope: !5175)
!5184 = !DILocation(line: 1206, column: 64, scope: !5175)
!5185 = !DILocation(line: 1206, column: 72, scope: !5175)
!5186 = !DILocation(line: 1207, column: 56, scope: !5175)
!5187 = !DILocation(line: 1207, column: 63, scope: !5175)
!5188 = !DILocation(line: 1207, column: 76, scope: !5175)
!5189 = !DILocation(line: 1207, column: 17, scope: !5175)
!5190 = !DILocation(line: 1207, column: 14, scope: !5175)
!5191 = !DILocation(line: 1208, column: 7, scope: !5175)
!5192 = !DILocation(line: 1208, column: 20, scope: !5163)
!5193 = distinct !{!5193, !5173, !5194}
!5194 = !DILocation(line: 1208, column: 22, scope: !5163)
!5195 = !DILocation(line: 1209, column: 6, scope: !5163)
!5196 = !DILocation(line: 1212, column: 9, scope: !5197)
!5197 = distinct !DILexicalBlock(scope: !5089, file: !3, line: 1212, column: 9)
!5198 = !DILocation(line: 1212, column: 15, scope: !5197)
!5199 = !DILocation(line: 1212, column: 9, scope: !5089)
!5200 = !DILocation(line: 1213, column: 6, scope: !5201)
!5201 = distinct !DILexicalBlock(scope: !5197, file: !3, line: 1212, column: 25)
!5202 = !DILocation(line: 1213, column: 16, scope: !5201)
!5203 = !DILocation(line: 1214, column: 5, scope: !5201)
!5204 = !DILocalVariable(name: "item", scope: !5205, file: !3, line: 1216, type: !5034)
!5205 = distinct !DILexicalBlock(scope: !5197, file: !3, line: 1215, column: 10)
!5206 = !DILocation(line: 1216, column: 24, scope: !5205)
!5207 = !DILocalVariable(name: "item_tmp", scope: !5205, file: !3, line: 1216, type: !3424)
!5208 = !DILocation(line: 1216, column: 37, scope: !5205)
!5209 = !DILocalVariable(name: "totitem", scope: !5205, file: !3, line: 1217, type: !22)
!5210 = !DILocation(line: 1217, column: 10, scope: !5205)
!5211 = !DILocalVariable(name: "i", scope: !5205, file: !3, line: 1218, type: !22)
!5212 = !DILocation(line: 1218, column: 10, scope: !5205)
!5213 = !DILocalVariable(name: "dg", scope: !5205, file: !3, line: 1219, type: !4160)
!5214 = !DILocation(line: 1219, column: 20, scope: !5205)
!5215 = !DILocation(line: 1220, column: 19, scope: !5216)
!5216 = distinct !DILexicalBlock(scope: !5205, file: !3, line: 1220, column: 6)
!5217 = !DILocation(line: 1220, column: 26, scope: !5216)
!5218 = !DILocation(line: 1220, column: 34, scope: !5216)
!5219 = !DILocation(line: 1220, column: 16, scope: !5216)
!5220 = !DILocation(line: 1220, column: 14, scope: !5216)
!5221 = !DILocation(line: 1220, column: 11, scope: !5216)
!5222 = !DILocation(line: 1220, column: 41, scope: !5223)
!5223 = distinct !DILexicalBlock(scope: !5216, file: !3, line: 1220, column: 6)
!5224 = !DILocation(line: 1220, column: 44, scope: !5223)
!5225 = !DILocation(line: 1220, column: 47, scope: !5223)
!5226 = !DILocation(line: 1220, column: 51, scope: !5223)
!5227 = !DILocation(line: 1220, column: 49, scope: !5223)
!5228 = !DILocation(line: 0, scope: !5223)
!5229 = !DILocation(line: 1220, column: 6, scope: !5216)
!5230 = !DILocation(line: 1221, column: 11, scope: !5231)
!5231 = distinct !DILexicalBlock(scope: !5232, file: !3, line: 1221, column: 11)
!5232 = distinct !DILexicalBlock(scope: !5223, file: !3, line: 1220, column: 84)
!5233 = !DILocation(line: 1221, column: 18, scope: !5231)
!5234 = !DILocation(line: 1221, column: 11, scope: !5232)
!5235 = !DILocation(line: 1222, column: 46, scope: !5236)
!5236 = distinct !DILexicalBlock(scope: !5231, file: !3, line: 1221, column: 22)
!5237 = !DILocation(line: 1222, column: 50, scope: !5236)
!5238 = !DILocation(line: 1222, column: 39, scope: !5236)
!5239 = !DILocation(line: 1222, column: 44, scope: !5236)
!5240 = !DILocation(line: 1222, column: 17, scope: !5236)
!5241 = !DILocation(line: 1222, column: 28, scope: !5236)
!5242 = !DILocation(line: 1223, column: 25, scope: !5236)
!5243 = !DILocation(line: 1223, column: 17, scope: !5236)
!5244 = !DILocation(line: 1223, column: 23, scope: !5236)
!5245 = !DILocation(line: 1224, column: 8, scope: !5236)
!5246 = !DILocation(line: 1225, column: 7, scope: !5236)
!5247 = !DILocation(line: 1226, column: 6, scope: !5232)
!5248 = !DILocation(line: 1220, column: 65, scope: !5223)
!5249 = !DILocation(line: 1220, column: 74, scope: !5223)
!5250 = !DILocation(line: 1220, column: 78, scope: !5223)
!5251 = !DILocation(line: 1220, column: 72, scope: !5223)
!5252 = !DILocation(line: 1220, column: 6, scope: !5223)
!5253 = distinct !{!5253, !5229, !5254}
!5254 = !DILocation(line: 1226, column: 6, scope: !5216)
!5255 = !DILocation(line: 1228, column: 6, scope: !5205)
!5256 = !DILocation(line: 1229, column: 7, scope: !5205)
!5257 = !DILocation(line: 1229, column: 14, scope: !5205)
!5258 = !DILocation(line: 1231, column: 6, scope: !5205)
!5259 = !DILocation(line: 1231, column: 16, scope: !5205)
!5260 = !DILocation(line: 1232, column: 13, scope: !5205)
!5261 = !DILocation(line: 1232, column: 6, scope: !5205)
!5262 = !DILocation(line: 1234, column: 4, scope: !5089)
!5263 = !DILocation(line: 1235, column: 3, scope: !5062)
!5264 = !DILocation(line: 1236, column: 2, scope: !5049)
!5265 = !DILocation(line: 1238, column: 2, scope: !5031)
!5266 = !DILocation(line: 1239, column: 1, scope: !5031)
!5267 = distinct !DISubprogram(name: "PAINT_OT_weight_paint_toggle", scope: !3, file: !3, line: 2109, type: !4, scopeLine: 2110, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2758, retainedNodes: !3422)
!5268 = !DILocalVariable(name: "ot", arg: 1, scope: !5267, file: !3, line: 2109, type: !6)
!5269 = !DILocation(line: 2109, column: 51, scope: !5267)
!5270 = !DILocation(line: 2113, column: 2, scope: !5267)
!5271 = !DILocation(line: 2113, column: 6, scope: !5267)
!5272 = !DILocation(line: 2113, column: 11, scope: !5267)
!5273 = !DILocation(line: 2114, column: 2, scope: !5267)
!5274 = !DILocation(line: 2114, column: 6, scope: !5267)
!5275 = !DILocation(line: 2114, column: 13, scope: !5267)
!5276 = !DILocation(line: 2115, column: 2, scope: !5267)
!5277 = !DILocation(line: 2115, column: 6, scope: !5267)
!5278 = !DILocation(line: 2115, column: 18, scope: !5267)
!5279 = !DILocation(line: 2118, column: 2, scope: !5267)
!5280 = !DILocation(line: 2118, column: 6, scope: !5267)
!5281 = !DILocation(line: 2118, column: 11, scope: !5267)
!5282 = !DILocation(line: 2119, column: 2, scope: !5267)
!5283 = !DILocation(line: 2119, column: 6, scope: !5267)
!5284 = !DILocation(line: 2119, column: 11, scope: !5267)
!5285 = !DILocation(line: 2122, column: 2, scope: !5267)
!5286 = !DILocation(line: 2122, column: 6, scope: !5267)
!5287 = !DILocation(line: 2122, column: 11, scope: !5267)
!5288 = !DILocation(line: 2124, column: 1, scope: !5267)
!5289 = distinct !DISubprogram(name: "wpaint_mode_toggle_exec", scope: !3, file: !3, line: 2036, type: !5003, scopeLine: 2037, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2758, retainedNodes: !3422)
!5290 = !DILocalVariable(name: "C", arg: 1, scope: !5289, file: !3, line: 2036, type: !3439)
!5291 = !DILocation(line: 2036, column: 46, scope: !5289)
!5292 = !DILocalVariable(name: "op", arg: 2, scope: !5289, file: !3, line: 2036, type: !4667)
!5293 = !DILocation(line: 2036, column: 61, scope: !5289)
!5294 = !DILocalVariable(name: "ob", scope: !5289, file: !3, line: 2038, type: !3444)
!5295 = !DILocation(line: 2038, column: 10, scope: !5289)
!5296 = !DILocation(line: 2038, column: 38, scope: !5289)
!5297 = !DILocation(line: 2038, column: 15, scope: !5289)
!5298 = !DILocalVariable(name: "mode_flag", scope: !5289, file: !3, line: 2039, type: !3408)
!5299 = !DILocation(line: 2039, column: 12, scope: !5289)
!5300 = !DILocalVariable(name: "is_mode_set", scope: !5289, file: !3, line: 2040, type: !976)
!5301 = !DILocation(line: 2040, column: 13, scope: !5289)
!5302 = !DILocation(line: 2040, column: 28, scope: !5289)
!5303 = !DILocation(line: 2040, column: 32, scope: !5289)
!5304 = !DILocation(line: 2040, column: 37, scope: !5289)
!5305 = !DILocation(line: 2040, column: 50, scope: !5289)
!5306 = !DILocation(line: 2040, column: 27, scope: !5289)
!5307 = !DILocalVariable(name: "scene", scope: !5289, file: !3, line: 2041, type: !3688)
!5308 = !DILocation(line: 2041, column: 9, scope: !5289)
!5309 = !DILocation(line: 2041, column: 32, scope: !5289)
!5310 = !DILocation(line: 2041, column: 17, scope: !5289)
!5311 = !DILocalVariable(name: "wp", scope: !5289, file: !3, line: 2042, type: !1538)
!5312 = !DILocation(line: 2042, column: 10, scope: !5289)
!5313 = !DILocation(line: 2042, column: 15, scope: !5289)
!5314 = !DILocation(line: 2042, column: 22, scope: !5289)
!5315 = !DILocation(line: 2042, column: 36, scope: !5289)
!5316 = !DILocalVariable(name: "me", scope: !5289, file: !3, line: 2043, type: !3187)
!5317 = !DILocation(line: 2043, column: 8, scope: !5289)
!5318 = !DILocation(line: 2045, column: 7, scope: !5319)
!5319 = distinct !DILexicalBlock(scope: !5289, file: !3, line: 2045, column: 6)
!5320 = !DILocation(line: 2045, column: 6, scope: !5289)
!5321 = !DILocation(line: 2046, column: 34, scope: !5322)
!5322 = distinct !DILexicalBlock(scope: !5323, file: !3, line: 2046, column: 7)
!5323 = distinct !DILexicalBlock(scope: !5319, file: !3, line: 2045, column: 20)
!5324 = !DILocation(line: 2046, column: 37, scope: !5322)
!5325 = !DILocation(line: 2046, column: 52, scope: !5322)
!5326 = !DILocation(line: 2046, column: 56, scope: !5322)
!5327 = !DILocation(line: 2046, column: 8, scope: !5322)
!5328 = !DILocation(line: 2046, column: 7, scope: !5323)
!5329 = !DILocation(line: 2047, column: 4, scope: !5330)
!5330 = distinct !DILexicalBlock(scope: !5322, file: !3, line: 2046, column: 66)
!5331 = !DILocation(line: 2049, column: 2, scope: !5323)
!5332 = !DILocation(line: 2051, column: 28, scope: !5289)
!5333 = !DILocation(line: 2051, column: 7, scope: !5289)
!5334 = !DILocation(line: 2051, column: 5, scope: !5289)
!5335 = !DILocation(line: 2053, column: 6, scope: !5336)
!5336 = distinct !DILexicalBlock(scope: !5289, file: !3, line: 2053, column: 6)
!5337 = !DILocation(line: 2053, column: 10, scope: !5336)
!5338 = !DILocation(line: 2053, column: 15, scope: !5336)
!5339 = !DILocation(line: 2053, column: 6, scope: !5289)
!5340 = !DILocation(line: 2054, column: 3, scope: !5341)
!5341 = distinct !DILexicalBlock(scope: !5336, file: !3, line: 2053, column: 28)
!5342 = !DILocation(line: 2054, column: 7, scope: !5341)
!5343 = !DILocation(line: 2054, column: 12, scope: !5341)
!5344 = !DILocation(line: 2056, column: 7, scope: !5345)
!5345 = distinct !DILexicalBlock(scope: !5341, file: !3, line: 2056, column: 7)
!5346 = !DILocation(line: 2056, column: 11, scope: !5345)
!5347 = !DILocation(line: 2056, column: 20, scope: !5345)
!5348 = !DILocation(line: 2056, column: 7, scope: !5341)
!5349 = !DILocation(line: 2057, column: 37, scope: !5350)
!5350 = distinct !DILexicalBlock(scope: !5345, file: !3, line: 2056, column: 46)
!5351 = !DILocation(line: 2057, column: 4, scope: !5350)
!5352 = !DILocation(line: 2058, column: 3, scope: !5350)
!5353 = !DILocation(line: 2059, column: 12, scope: !5354)
!5354 = distinct !DILexicalBlock(scope: !5345, file: !3, line: 2059, column: 12)
!5355 = !DILocation(line: 2059, column: 16, scope: !5354)
!5356 = !DILocation(line: 2059, column: 25, scope: !5354)
!5357 = !DILocation(line: 2059, column: 12, scope: !5345)
!5358 = !DILocation(line: 2060, column: 37, scope: !5359)
!5359 = distinct !DILexicalBlock(scope: !5354, file: !3, line: 2059, column: 51)
!5360 = !DILocation(line: 2060, column: 4, scope: !5359)
!5361 = !DILocation(line: 2061, column: 3, scope: !5359)
!5362 = !DILocation(line: 2064, column: 3, scope: !5341)
!5363 = !DILocation(line: 2065, column: 3, scope: !5341)
!5364 = !DILocation(line: 2067, column: 3, scope: !5341)
!5365 = !DILocation(line: 2068, column: 2, scope: !5341)
!5366 = !DILocation(line: 2070, column: 3, scope: !5367)
!5367 = distinct !DILexicalBlock(scope: !5336, file: !3, line: 2069, column: 7)
!5368 = !DILocation(line: 2070, column: 7, scope: !5367)
!5369 = !DILocation(line: 2070, column: 12, scope: !5367)
!5370 = !DILocation(line: 2072, column: 7, scope: !5371)
!5371 = distinct !DILexicalBlock(scope: !5367, file: !3, line: 2072, column: 7)
!5372 = !DILocation(line: 2072, column: 10, scope: !5371)
!5373 = !DILocation(line: 2072, column: 7, scope: !5367)
!5374 = !DILocation(line: 2073, column: 39, scope: !5371)
!5375 = !DILocation(line: 2073, column: 9, scope: !5371)
!5376 = !DILocation(line: 2073, column: 16, scope: !5371)
!5377 = !DILocation(line: 2073, column: 30, scope: !5371)
!5378 = !DILocation(line: 2073, column: 37, scope: !5371)
!5379 = !DILocation(line: 2073, column: 7, scope: !5371)
!5380 = !DILocation(line: 2073, column: 4, scope: !5371)
!5381 = !DILocation(line: 2075, column: 22, scope: !5367)
!5382 = !DILocation(line: 2075, column: 3, scope: !5367)
!5383 = !DILocation(line: 2077, column: 19, scope: !5367)
!5384 = !DILocation(line: 2077, column: 23, scope: !5367)
!5385 = !DILocation(line: 2077, column: 3, scope: !5367)
!5386 = !DILocation(line: 2080, column: 32, scope: !5367)
!5387 = !DILocation(line: 2080, column: 3, scope: !5367)
!5388 = !DILocation(line: 2081, column: 28, scope: !5367)
!5389 = !DILocation(line: 2081, column: 3, scope: !5367)
!5390 = !DILocation(line: 2089, column: 21, scope: !5289)
!5391 = !DILocation(line: 2089, column: 25, scope: !5289)
!5392 = !DILocation(line: 2089, column: 2, scope: !5289)
!5393 = !DILocation(line: 2091, column: 24, scope: !5289)
!5394 = !DILocation(line: 2091, column: 47, scope: !5289)
!5395 = !DILocation(line: 2091, column: 2, scope: !5289)
!5396 = !DILocation(line: 2093, column: 2, scope: !5289)
!5397 = !DILocation(line: 2094, column: 1, scope: !5289)
!5398 = distinct !DISubprogram(name: "paint_poll_test", scope: !3, file: !3, line: 2097, type: !3437, scopeLine: 2098, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2758, retainedNodes: !3422)
!5399 = !DILocalVariable(name: "C", arg: 1, scope: !5398, file: !3, line: 2097, type: !3439)
!5400 = !DILocation(line: 2097, column: 38, scope: !5398)
!5401 = !DILocalVariable(name: "ob", scope: !5398, file: !3, line: 2099, type: !3444)
!5402 = !DILocation(line: 2099, column: 10, scope: !5398)
!5403 = !DILocation(line: 2099, column: 38, scope: !5398)
!5404 = !DILocation(line: 2099, column: 15, scope: !5398)
!5405 = !DILocation(line: 2100, column: 6, scope: !5406)
!5406 = distinct !DILexicalBlock(scope: !5398, file: !3, line: 2100, column: 6)
!5407 = !DILocation(line: 2100, column: 9, scope: !5406)
!5408 = !DILocation(line: 2100, column: 17, scope: !5406)
!5409 = !DILocation(line: 2100, column: 20, scope: !5406)
!5410 = !DILocation(line: 2100, column: 24, scope: !5406)
!5411 = !DILocation(line: 2100, column: 29, scope: !5406)
!5412 = !DILocation(line: 2100, column: 6, scope: !5398)
!5413 = !DILocation(line: 2101, column: 3, scope: !5406)
!5414 = !DILocation(line: 2102, column: 7, scope: !5415)
!5415 = distinct !DILexicalBlock(scope: !5398, file: !3, line: 2102, column: 6)
!5416 = !DILocation(line: 2102, column: 11, scope: !5415)
!5417 = !DILocation(line: 2102, column: 16, scope: !5415)
!5418 = !DILocation(line: 2102, column: 26, scope: !5415)
!5419 = !DILocation(line: 2102, column: 30, scope: !5415)
!5420 = !DILocation(line: 2102, column: 20, scope: !5415)
!5421 = !DILocation(line: 2102, column: 37, scope: !5415)
!5422 = !DILocation(line: 2102, column: 19, scope: !5415)
!5423 = !DILocation(line: 2102, column: 6, scope: !5398)
!5424 = !DILocation(line: 2103, column: 3, scope: !5415)
!5425 = !DILocation(line: 2104, column: 27, scope: !5426)
!5426 = distinct !DILexicalBlock(scope: !5398, file: !3, line: 2104, column: 6)
!5427 = !DILocation(line: 2104, column: 6, scope: !5426)
!5428 = !DILocation(line: 2104, column: 6, scope: !5398)
!5429 = !DILocation(line: 2105, column: 3, scope: !5426)
!5430 = !DILocation(line: 2106, column: 2, scope: !5398)
!5431 = !DILocation(line: 2107, column: 1, scope: !5398)
!5432 = distinct !DISubprogram(name: "PAINT_OT_weight_paint", scope: !3, file: !3, line: 2584, type: !4, scopeLine: 2585, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2758, retainedNodes: !3422)
!5433 = !DILocalVariable(name: "ot", arg: 1, scope: !5432, file: !3, line: 2584, type: !6)
!5434 = !DILocation(line: 2584, column: 44, scope: !5432)
!5435 = !DILocation(line: 2588, column: 2, scope: !5432)
!5436 = !DILocation(line: 2588, column: 6, scope: !5432)
!5437 = !DILocation(line: 2588, column: 11, scope: !5432)
!5438 = !DILocation(line: 2589, column: 2, scope: !5432)
!5439 = !DILocation(line: 2589, column: 6, scope: !5432)
!5440 = !DILocation(line: 2589, column: 13, scope: !5432)
!5441 = !DILocation(line: 2590, column: 2, scope: !5432)
!5442 = !DILocation(line: 2590, column: 6, scope: !5432)
!5443 = !DILocation(line: 2590, column: 18, scope: !5432)
!5444 = !DILocation(line: 2593, column: 2, scope: !5432)
!5445 = !DILocation(line: 2593, column: 6, scope: !5432)
!5446 = !DILocation(line: 2593, column: 13, scope: !5432)
!5447 = !DILocation(line: 2594, column: 2, scope: !5432)
!5448 = !DILocation(line: 2594, column: 6, scope: !5432)
!5449 = !DILocation(line: 2594, column: 12, scope: !5432)
!5450 = !DILocation(line: 2595, column: 2, scope: !5432)
!5451 = !DILocation(line: 2595, column: 6, scope: !5432)
!5452 = !DILocation(line: 2595, column: 11, scope: !5432)
!5453 = !DILocation(line: 2596, column: 2, scope: !5432)
!5454 = !DILocation(line: 2596, column: 6, scope: !5432)
!5455 = !DILocation(line: 2596, column: 11, scope: !5432)
!5456 = !DILocation(line: 2597, column: 2, scope: !5432)
!5457 = !DILocation(line: 2597, column: 6, scope: !5432)
!5458 = !DILocation(line: 2597, column: 13, scope: !5432)
!5459 = !DILocation(line: 2600, column: 2, scope: !5432)
!5460 = !DILocation(line: 2600, column: 6, scope: !5432)
!5461 = !DILocation(line: 2600, column: 11, scope: !5432)
!5462 = !DILocation(line: 2602, column: 35, scope: !5432)
!5463 = !DILocation(line: 2602, column: 2, scope: !5432)
!5464 = !DILocation(line: 2603, column: 1, scope: !5432)
!5465 = distinct !DISubprogram(name: "wpaint_invoke", scope: !3, file: !3, line: 2546, type: !4665, scopeLine: 2547, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2758, retainedNodes: !3422)
!5466 = !DILocalVariable(name: "C", arg: 1, scope: !5465, file: !3, line: 2546, type: !3439)
!5467 = !DILocation(line: 2546, column: 36, scope: !5465)
!5468 = !DILocalVariable(name: "op", arg: 2, scope: !5465, file: !3, line: 2546, type: !4667)
!5469 = !DILocation(line: 2546, column: 51, scope: !5465)
!5470 = !DILocalVariable(name: "event", arg: 3, scope: !5465, file: !3, line: 2546, type: !4669)
!5471 = !DILocation(line: 2546, column: 70, scope: !5465)
!5472 = !DILocalVariable(name: "retval", scope: !5465, file: !3, line: 2548, type: !22)
!5473 = !DILocation(line: 2548, column: 6, scope: !5465)
!5474 = !DILocation(line: 2550, column: 36, scope: !5465)
!5475 = !DILocation(line: 2550, column: 39, scope: !5465)
!5476 = !DILocation(line: 2552, column: 56, scope: !5465)
!5477 = !DILocation(line: 2552, column: 63, scope: !5465)
!5478 = !DILocation(line: 2550, column: 19, scope: !5465)
!5479 = !DILocation(line: 2550, column: 2, scope: !5465)
!5480 = !DILocation(line: 2550, column: 6, scope: !5465)
!5481 = !DILocation(line: 2550, column: 17, scope: !5465)
!5482 = !DILocation(line: 2554, column: 16, scope: !5483)
!5483 = distinct !DILexicalBlock(scope: !5465, file: !3, line: 2554, column: 6)
!5484 = !DILocation(line: 2554, column: 20, scope: !5483)
!5485 = !DILocation(line: 2554, column: 26, scope: !5483)
!5486 = !DILocation(line: 2554, column: 32, scope: !5483)
!5487 = !DILocation(line: 2554, column: 35, scope: !5483)
!5488 = !DILocation(line: 2554, column: 39, scope: !5483)
!5489 = !DILocation(line: 2554, column: 14, scope: !5483)
!5490 = !DILocation(line: 2554, column: 47, scope: !5483)
!5491 = !DILocation(line: 2554, column: 6, scope: !5465)
!5492 = !DILocation(line: 2555, column: 26, scope: !5493)
!5493 = distinct !DILexicalBlock(scope: !5483, file: !3, line: 2554, column: 69)
!5494 = !DILocation(line: 2555, column: 3, scope: !5493)
!5495 = !DILocation(line: 2556, column: 3, scope: !5493)
!5496 = !DILocation(line: 2559, column: 29, scope: !5465)
!5497 = !DILocation(line: 2559, column: 32, scope: !5465)
!5498 = !DILocation(line: 2559, column: 2, scope: !5465)
!5499 = !DILocation(line: 2561, column: 2, scope: !5465)
!5500 = !DILocation(line: 2564, column: 2, scope: !5465)
!5501 = !DILocation(line: 2565, column: 1, scope: !5465)
!5502 = distinct !DISubprogram(name: "wpaint_exec", scope: !3, file: !3, line: 2567, type: !5003, scopeLine: 2568, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2758, retainedNodes: !3422)
!5503 = !DILocalVariable(name: "C", arg: 1, scope: !5502, file: !3, line: 2567, type: !3439)
!5504 = !DILocation(line: 2567, column: 34, scope: !5502)
!5505 = !DILocalVariable(name: "op", arg: 2, scope: !5502, file: !3, line: 2567, type: !4667)
!5506 = !DILocation(line: 2567, column: 49, scope: !5502)
!5507 = !DILocation(line: 2569, column: 36, scope: !5502)
!5508 = !DILocation(line: 2569, column: 39, scope: !5502)
!5509 = !DILocation(line: 2569, column: 19, scope: !5502)
!5510 = !DILocation(line: 2569, column: 2, scope: !5502)
!5511 = !DILocation(line: 2569, column: 6, scope: !5502)
!5512 = !DILocation(line: 2569, column: 17, scope: !5502)
!5513 = !DILocation(line: 2574, column: 20, scope: !5502)
!5514 = !DILocation(line: 2574, column: 23, scope: !5502)
!5515 = !DILocation(line: 2574, column: 2, scope: !5502)
!5516 = !DILocation(line: 2576, column: 2, scope: !5502)
!5517 = distinct !DISubprogram(name: "wpaint_cancel", scope: !3, file: !3, line: 2579, type: !5518, scopeLine: 2580, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2758, retainedNodes: !3422)
!5518 = !DISubroutineType(types: !5519)
!5519 = !{null, !3439, !4667}
!5520 = !DILocalVariable(name: "C", arg: 1, scope: !5517, file: !3, line: 2579, type: !3439)
!5521 = !DILocation(line: 2579, column: 37, scope: !5517)
!5522 = !DILocalVariable(name: "op", arg: 2, scope: !5517, file: !3, line: 2579, type: !4667)
!5523 = !DILocation(line: 2579, column: 52, scope: !5517)
!5524 = !DILocation(line: 2581, column: 22, scope: !5517)
!5525 = !DILocation(line: 2581, column: 25, scope: !5517)
!5526 = !DILocation(line: 2581, column: 2, scope: !5517)
!5527 = !DILocation(line: 2582, column: 1, scope: !5517)
!5528 = distinct !DISubprogram(name: "PAINT_OT_weight_set", scope: !3, file: !3, line: 2626, type: !4, scopeLine: 2627, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2758, retainedNodes: !3422)
!5529 = !DILocalVariable(name: "ot", arg: 1, scope: !5528, file: !3, line: 2626, type: !6)
!5530 = !DILocation(line: 2626, column: 42, scope: !5528)
!5531 = !DILocation(line: 2629, column: 2, scope: !5528)
!5532 = !DILocation(line: 2629, column: 6, scope: !5528)
!5533 = !DILocation(line: 2629, column: 11, scope: !5528)
!5534 = !DILocation(line: 2630, column: 2, scope: !5528)
!5535 = !DILocation(line: 2630, column: 6, scope: !5528)
!5536 = !DILocation(line: 2630, column: 13, scope: !5528)
!5537 = !DILocation(line: 2631, column: 2, scope: !5528)
!5538 = !DILocation(line: 2631, column: 6, scope: !5528)
!5539 = !DILocation(line: 2631, column: 18, scope: !5528)
!5540 = !DILocation(line: 2634, column: 2, scope: !5528)
!5541 = !DILocation(line: 2634, column: 6, scope: !5528)
!5542 = !DILocation(line: 2634, column: 11, scope: !5528)
!5543 = !DILocation(line: 2635, column: 2, scope: !5528)
!5544 = !DILocation(line: 2635, column: 6, scope: !5528)
!5545 = !DILocation(line: 2635, column: 11, scope: !5528)
!5546 = !DILocation(line: 2638, column: 2, scope: !5528)
!5547 = !DILocation(line: 2638, column: 6, scope: !5528)
!5548 = !DILocation(line: 2638, column: 11, scope: !5528)
!5549 = !DILocation(line: 2639, column: 1, scope: !5528)
!5550 = distinct !DISubprogram(name: "weight_paint_set_exec", scope: !3, file: !3, line: 2605, type: !5003, scopeLine: 2606, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2758, retainedNodes: !3422)
!5551 = !DILocalVariable(name: "C", arg: 1, scope: !5550, file: !3, line: 2605, type: !3439)
!5552 = !DILocation(line: 2605, column: 44, scope: !5550)
!5553 = !DILocalVariable(name: "op", arg: 2, scope: !5550, file: !3, line: 2605, type: !4667)
!5554 = !DILocation(line: 2605, column: 59, scope: !5550)
!5555 = !DILocalVariable(name: "scene", scope: !5550, file: !3, line: 2607, type: !152)
!5556 = !DILocation(line: 2607, column: 16, scope: !5550)
!5557 = !DILocation(line: 2607, column: 39, scope: !5550)
!5558 = !DILocation(line: 2607, column: 24, scope: !5550)
!5559 = !DILocalVariable(name: "obact", scope: !5550, file: !3, line: 2608, type: !3444)
!5560 = !DILocation(line: 2608, column: 10, scope: !5550)
!5561 = !DILocation(line: 2608, column: 41, scope: !5550)
!5562 = !DILocation(line: 2608, column: 18, scope: !5550)
!5563 = !DILocalVariable(name: "ts", scope: !5550, file: !3, line: 2609, type: !4923)
!5564 = !DILocation(line: 2609, column: 16, scope: !5550)
!5565 = !DILocation(line: 2609, column: 44, scope: !5550)
!5566 = !DILocation(line: 2609, column: 21, scope: !5550)
!5567 = !DILocalVariable(name: "brush", scope: !5550, file: !3, line: 2610, type: !3695)
!5568 = !DILocation(line: 2610, column: 9, scope: !5550)
!5569 = !DILocation(line: 2610, column: 34, scope: !5550)
!5570 = !DILocation(line: 2610, column: 38, scope: !5550)
!5571 = !DILocation(line: 2610, column: 46, scope: !5550)
!5572 = !DILocation(line: 2610, column: 17, scope: !5550)
!5573 = !DILocalVariable(name: "vgroup_weight", scope: !5550, file: !3, line: 2611, type: !210)
!5574 = !DILocation(line: 2611, column: 8, scope: !5550)
!5575 = !DILocation(line: 2611, column: 45, scope: !5550)
!5576 = !DILocation(line: 2611, column: 52, scope: !5550)
!5577 = !DILocation(line: 2611, column: 24, scope: !5550)
!5578 = !DILocation(line: 2613, column: 25, scope: !5579)
!5579 = distinct !DILexicalBlock(scope: !5550, file: !3, line: 2613, column: 6)
!5580 = !DILocation(line: 2613, column: 28, scope: !5579)
!5581 = !DILocation(line: 2613, column: 6, scope: !5579)
!5582 = !DILocation(line: 2613, column: 32, scope: !5579)
!5583 = !DILocation(line: 2613, column: 6, scope: !5550)
!5584 = !DILocation(line: 2614, column: 3, scope: !5585)
!5585 = distinct !DILexicalBlock(scope: !5579, file: !3, line: 2613, column: 42)
!5586 = !DILocation(line: 2617, column: 21, scope: !5587)
!5587 = distinct !DILexicalBlock(scope: !5550, file: !3, line: 2617, column: 6)
!5588 = !DILocation(line: 2617, column: 28, scope: !5587)
!5589 = !DILocation(line: 2617, column: 42, scope: !5587)
!5590 = !DILocation(line: 2617, column: 50, scope: !5587)
!5591 = !DILocation(line: 2617, column: 57, scope: !5587)
!5592 = !DILocation(line: 2617, column: 6, scope: !5587)
!5593 = !DILocation(line: 2617, column: 6, scope: !5550)
!5594 = !DILocation(line: 2618, column: 38, scope: !5595)
!5595 = distinct !DILexicalBlock(scope: !5587, file: !3, line: 2617, column: 73)
!5596 = !DILocation(line: 2618, column: 24, scope: !5595)
!5597 = !DILocation(line: 2618, column: 3, scope: !5595)
!5598 = !DILocation(line: 2619, column: 3, scope: !5595)
!5599 = !DILocation(line: 2622, column: 3, scope: !5600)
!5600 = distinct !DILexicalBlock(scope: !5587, file: !3, line: 2621, column: 7)
!5601 = !DILocation(line: 2624, column: 1, scope: !5550)
!5602 = distinct !DISubprogram(name: "PAINT_OT_vertex_paint_toggle", scope: !3, file: !3, line: 2696, type: !4, scopeLine: 2697, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2758, retainedNodes: !3422)
!5603 = !DILocalVariable(name: "ot", arg: 1, scope: !5602, file: !3, line: 2696, type: !6)
!5604 = !DILocation(line: 2696, column: 51, scope: !5602)
!5605 = !DILocation(line: 2700, column: 2, scope: !5602)
!5606 = !DILocation(line: 2700, column: 6, scope: !5602)
!5607 = !DILocation(line: 2700, column: 11, scope: !5602)
!5608 = !DILocation(line: 2701, column: 2, scope: !5602)
!5609 = !DILocation(line: 2701, column: 6, scope: !5602)
!5610 = !DILocation(line: 2701, column: 13, scope: !5602)
!5611 = !DILocation(line: 2702, column: 2, scope: !5602)
!5612 = !DILocation(line: 2702, column: 6, scope: !5602)
!5613 = !DILocation(line: 2702, column: 18, scope: !5602)
!5614 = !DILocation(line: 2705, column: 2, scope: !5602)
!5615 = !DILocation(line: 2705, column: 6, scope: !5602)
!5616 = !DILocation(line: 2705, column: 11, scope: !5602)
!5617 = !DILocation(line: 2706, column: 2, scope: !5602)
!5618 = !DILocation(line: 2706, column: 6, scope: !5602)
!5619 = !DILocation(line: 2706, column: 11, scope: !5602)
!5620 = !DILocation(line: 2709, column: 2, scope: !5602)
!5621 = !DILocation(line: 2709, column: 6, scope: !5602)
!5622 = !DILocation(line: 2709, column: 11, scope: !5602)
!5623 = !DILocation(line: 2710, column: 1, scope: !5602)
!5624 = distinct !DISubprogram(name: "vpaint_mode_toggle_exec", scope: !3, file: !3, line: 2646, type: !5003, scopeLine: 2647, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2758, retainedNodes: !3422)
!5625 = !DILocalVariable(name: "C", arg: 1, scope: !5624, file: !3, line: 2646, type: !3439)
!5626 = !DILocation(line: 2646, column: 46, scope: !5624)
!5627 = !DILocalVariable(name: "op", arg: 2, scope: !5624, file: !3, line: 2646, type: !4667)
!5628 = !DILocation(line: 2646, column: 61, scope: !5624)
!5629 = !DILocalVariable(name: "ob", scope: !5624, file: !3, line: 2648, type: !3444)
!5630 = !DILocation(line: 2648, column: 10, scope: !5624)
!5631 = !DILocation(line: 2648, column: 38, scope: !5624)
!5632 = !DILocation(line: 2648, column: 15, scope: !5624)
!5633 = !DILocalVariable(name: "mode_flag", scope: !5624, file: !3, line: 2649, type: !3408)
!5634 = !DILocation(line: 2649, column: 12, scope: !5624)
!5635 = !DILocalVariable(name: "is_mode_set", scope: !5624, file: !3, line: 2650, type: !976)
!5636 = !DILocation(line: 2650, column: 13, scope: !5624)
!5637 = !DILocation(line: 2650, column: 28, scope: !5624)
!5638 = !DILocation(line: 2650, column: 32, scope: !5624)
!5639 = !DILocation(line: 2650, column: 37, scope: !5624)
!5640 = !DILocation(line: 2650, column: 50, scope: !5624)
!5641 = !DILocation(line: 2650, column: 27, scope: !5624)
!5642 = !DILocalVariable(name: "scene", scope: !5624, file: !3, line: 2651, type: !3688)
!5643 = !DILocation(line: 2651, column: 9, scope: !5624)
!5644 = !DILocation(line: 2651, column: 32, scope: !5624)
!5645 = !DILocation(line: 2651, column: 17, scope: !5624)
!5646 = !DILocalVariable(name: "vp", scope: !5624, file: !3, line: 2652, type: !1538)
!5647 = !DILocation(line: 2652, column: 10, scope: !5624)
!5648 = !DILocation(line: 2652, column: 15, scope: !5624)
!5649 = !DILocation(line: 2652, column: 22, scope: !5624)
!5650 = !DILocation(line: 2652, column: 36, scope: !5624)
!5651 = !DILocalVariable(name: "me", scope: !5624, file: !3, line: 2653, type: !3187)
!5652 = !DILocation(line: 2653, column: 8, scope: !5624)
!5653 = !DILocation(line: 2655, column: 7, scope: !5654)
!5654 = distinct !DILexicalBlock(scope: !5624, file: !3, line: 2655, column: 6)
!5655 = !DILocation(line: 2655, column: 6, scope: !5624)
!5656 = !DILocation(line: 2656, column: 34, scope: !5657)
!5657 = distinct !DILexicalBlock(scope: !5658, file: !3, line: 2656, column: 7)
!5658 = distinct !DILexicalBlock(scope: !5654, file: !3, line: 2655, column: 20)
!5659 = !DILocation(line: 2656, column: 37, scope: !5657)
!5660 = !DILocation(line: 2656, column: 52, scope: !5657)
!5661 = !DILocation(line: 2656, column: 56, scope: !5657)
!5662 = !DILocation(line: 2656, column: 8, scope: !5657)
!5663 = !DILocation(line: 2656, column: 7, scope: !5658)
!5664 = !DILocation(line: 2657, column: 4, scope: !5665)
!5665 = distinct !DILexicalBlock(scope: !5657, file: !3, line: 2656, column: 66)
!5666 = !DILocation(line: 2659, column: 2, scope: !5658)
!5667 = !DILocation(line: 2661, column: 28, scope: !5624)
!5668 = !DILocation(line: 2661, column: 7, scope: !5624)
!5669 = !DILocation(line: 2661, column: 5, scope: !5624)
!5670 = !DILocation(line: 2664, column: 6, scope: !5671)
!5671 = distinct !DILexicalBlock(scope: !5624, file: !3, line: 2664, column: 6)
!5672 = !DILocation(line: 2664, column: 6, scope: !5624)
!5673 = !DILocation(line: 2665, column: 3, scope: !5674)
!5674 = distinct !DILexicalBlock(scope: !5671, file: !3, line: 2664, column: 19)
!5675 = !DILocation(line: 2665, column: 7, scope: !5674)
!5676 = !DILocation(line: 2665, column: 12, scope: !5674)
!5677 = !DILocation(line: 2667, column: 7, scope: !5678)
!5678 = distinct !DILexicalBlock(scope: !5674, file: !3, line: 2667, column: 7)
!5679 = !DILocation(line: 2667, column: 11, scope: !5678)
!5680 = !DILocation(line: 2667, column: 20, scope: !5678)
!5681 = !DILocation(line: 2667, column: 7, scope: !5674)
!5682 = !DILocation(line: 2668, column: 37, scope: !5683)
!5683 = distinct !DILexicalBlock(scope: !5678, file: !3, line: 2667, column: 46)
!5684 = !DILocation(line: 2668, column: 4, scope: !5683)
!5685 = !DILocation(line: 2669, column: 3, scope: !5683)
!5686 = !DILocation(line: 2671, column: 3, scope: !5674)
!5687 = !DILocation(line: 2672, column: 2, scope: !5674)
!5688 = !DILocation(line: 2674, column: 3, scope: !5689)
!5689 = distinct !DILexicalBlock(scope: !5671, file: !3, line: 2673, column: 7)
!5690 = !DILocation(line: 2674, column: 7, scope: !5689)
!5691 = !DILocation(line: 2674, column: 12, scope: !5689)
!5692 = !DILocation(line: 2676, column: 7, scope: !5693)
!5693 = distinct !DILexicalBlock(scope: !5689, file: !3, line: 2676, column: 7)
!5694 = !DILocation(line: 2676, column: 11, scope: !5693)
!5695 = !DILocation(line: 2676, column: 20, scope: !5693)
!5696 = !DILocation(line: 2676, column: 7, scope: !5689)
!5697 = !DILocation(line: 2677, column: 19, scope: !5698)
!5698 = distinct !DILexicalBlock(scope: !5693, file: !3, line: 2676, column: 29)
!5699 = !DILocation(line: 2677, column: 4, scope: !5698)
!5700 = !DILocation(line: 2678, column: 3, scope: !5698)
!5701 = !DILocation(line: 2680, column: 7, scope: !5702)
!5702 = distinct !DILexicalBlock(scope: !5689, file: !3, line: 2680, column: 7)
!5703 = !DILocation(line: 2680, column: 10, scope: !5702)
!5704 = !DILocation(line: 2680, column: 7, scope: !5689)
!5705 = !DILocation(line: 2681, column: 39, scope: !5702)
!5706 = !DILocation(line: 2681, column: 9, scope: !5702)
!5707 = !DILocation(line: 2681, column: 16, scope: !5702)
!5708 = !DILocation(line: 2681, column: 30, scope: !5702)
!5709 = !DILocation(line: 2681, column: 37, scope: !5702)
!5710 = !DILocation(line: 2681, column: 7, scope: !5702)
!5711 = !DILocation(line: 2681, column: 4, scope: !5702)
!5712 = !DILocation(line: 2683, column: 22, scope: !5689)
!5713 = !DILocation(line: 2683, column: 3, scope: !5689)
!5714 = !DILocation(line: 2685, column: 19, scope: !5689)
!5715 = !DILocation(line: 2685, column: 23, scope: !5689)
!5716 = !DILocation(line: 2685, column: 3, scope: !5689)
!5717 = !DILocation(line: 2689, column: 21, scope: !5624)
!5718 = !DILocation(line: 2689, column: 25, scope: !5624)
!5719 = !DILocation(line: 2689, column: 2, scope: !5624)
!5720 = !DILocation(line: 2691, column: 24, scope: !5624)
!5721 = !DILocation(line: 2691, column: 47, scope: !5624)
!5722 = !DILocation(line: 2691, column: 2, scope: !5624)
!5723 = !DILocation(line: 2693, column: 2, scope: !5624)
!5724 = !DILocation(line: 2694, column: 1, scope: !5624)
!5725 = distinct !DISubprogram(name: "PAINT_OT_vertex_paint", scope: !3, file: !3, line: 3104, type: !4, scopeLine: 3105, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2758, retainedNodes: !3422)
!5726 = !DILocalVariable(name: "ot", arg: 1, scope: !5725, file: !3, line: 3104, type: !6)
!5727 = !DILocation(line: 3104, column: 44, scope: !5725)
!5728 = !DILocation(line: 3107, column: 2, scope: !5725)
!5729 = !DILocation(line: 3107, column: 6, scope: !5725)
!5730 = !DILocation(line: 3107, column: 11, scope: !5725)
!5731 = !DILocation(line: 3108, column: 2, scope: !5725)
!5732 = !DILocation(line: 3108, column: 6, scope: !5725)
!5733 = !DILocation(line: 3108, column: 13, scope: !5725)
!5734 = !DILocation(line: 3109, column: 2, scope: !5725)
!5735 = !DILocation(line: 3109, column: 6, scope: !5725)
!5736 = !DILocation(line: 3109, column: 18, scope: !5725)
!5737 = !DILocation(line: 3112, column: 2, scope: !5725)
!5738 = !DILocation(line: 3112, column: 6, scope: !5725)
!5739 = !DILocation(line: 3112, column: 13, scope: !5725)
!5740 = !DILocation(line: 3113, column: 2, scope: !5725)
!5741 = !DILocation(line: 3113, column: 6, scope: !5725)
!5742 = !DILocation(line: 3113, column: 12, scope: !5725)
!5743 = !DILocation(line: 3114, column: 2, scope: !5725)
!5744 = !DILocation(line: 3114, column: 6, scope: !5725)
!5745 = !DILocation(line: 3114, column: 11, scope: !5725)
!5746 = !DILocation(line: 3115, column: 2, scope: !5725)
!5747 = !DILocation(line: 3115, column: 6, scope: !5725)
!5748 = !DILocation(line: 3115, column: 11, scope: !5725)
!5749 = !DILocation(line: 3116, column: 2, scope: !5725)
!5750 = !DILocation(line: 3116, column: 6, scope: !5725)
!5751 = !DILocation(line: 3116, column: 13, scope: !5725)
!5752 = !DILocation(line: 3119, column: 2, scope: !5725)
!5753 = !DILocation(line: 3119, column: 6, scope: !5725)
!5754 = !DILocation(line: 3119, column: 11, scope: !5725)
!5755 = !DILocation(line: 3121, column: 35, scope: !5725)
!5756 = !DILocation(line: 3121, column: 2, scope: !5725)
!5757 = !DILocation(line: 3122, column: 1, scope: !5725)
!5758 = distinct !DISubprogram(name: "vpaint_invoke", scope: !3, file: !3, line: 3065, type: !4665, scopeLine: 3066, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2758, retainedNodes: !3422)
!5759 = !DILocalVariable(name: "C", arg: 1, scope: !5758, file: !3, line: 3065, type: !3439)
!5760 = !DILocation(line: 3065, column: 36, scope: !5758)
!5761 = !DILocalVariable(name: "op", arg: 2, scope: !5758, file: !3, line: 3065, type: !4667)
!5762 = !DILocation(line: 3065, column: 51, scope: !5758)
!5763 = !DILocalVariable(name: "event", arg: 3, scope: !5758, file: !3, line: 3065, type: !4669)
!5764 = !DILocation(line: 3065, column: 70, scope: !5758)
!5765 = !DILocalVariable(name: "retval", scope: !5758, file: !3, line: 3067, type: !22)
!5766 = !DILocation(line: 3067, column: 6, scope: !5758)
!5767 = !DILocation(line: 3069, column: 36, scope: !5758)
!5768 = !DILocation(line: 3069, column: 39, scope: !5758)
!5769 = !DILocation(line: 3071, column: 56, scope: !5758)
!5770 = !DILocation(line: 3071, column: 63, scope: !5758)
!5771 = !DILocation(line: 3069, column: 19, scope: !5758)
!5772 = !DILocation(line: 3069, column: 2, scope: !5758)
!5773 = !DILocation(line: 3069, column: 6, scope: !5758)
!5774 = !DILocation(line: 3069, column: 17, scope: !5758)
!5775 = !DILocation(line: 3073, column: 16, scope: !5776)
!5776 = distinct !DILexicalBlock(scope: !5758, file: !3, line: 3073, column: 6)
!5777 = !DILocation(line: 3073, column: 20, scope: !5776)
!5778 = !DILocation(line: 3073, column: 26, scope: !5776)
!5779 = !DILocation(line: 3073, column: 32, scope: !5776)
!5780 = !DILocation(line: 3073, column: 35, scope: !5776)
!5781 = !DILocation(line: 3073, column: 39, scope: !5776)
!5782 = !DILocation(line: 3073, column: 14, scope: !5776)
!5783 = !DILocation(line: 3073, column: 47, scope: !5776)
!5784 = !DILocation(line: 3073, column: 6, scope: !5758)
!5785 = !DILocation(line: 3074, column: 26, scope: !5786)
!5786 = distinct !DILexicalBlock(scope: !5776, file: !3, line: 3073, column: 69)
!5787 = !DILocation(line: 3074, column: 3, scope: !5786)
!5788 = !DILocation(line: 3075, column: 3, scope: !5786)
!5789 = !DILocation(line: 3079, column: 29, scope: !5758)
!5790 = !DILocation(line: 3079, column: 32, scope: !5758)
!5791 = !DILocation(line: 3079, column: 2, scope: !5758)
!5792 = !DILocation(line: 3081, column: 2, scope: !5758)
!5793 = !DILocation(line: 3084, column: 2, scope: !5758)
!5794 = !DILocation(line: 3085, column: 1, scope: !5758)
!5795 = distinct !DISubprogram(name: "vpaint_exec", scope: !3, file: !3, line: 3087, type: !5003, scopeLine: 3088, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2758, retainedNodes: !3422)
!5796 = !DILocalVariable(name: "C", arg: 1, scope: !5795, file: !3, line: 3087, type: !3439)
!5797 = !DILocation(line: 3087, column: 34, scope: !5795)
!5798 = !DILocalVariable(name: "op", arg: 2, scope: !5795, file: !3, line: 3087, type: !4667)
!5799 = !DILocation(line: 3087, column: 49, scope: !5795)
!5800 = !DILocation(line: 3089, column: 36, scope: !5795)
!5801 = !DILocation(line: 3089, column: 39, scope: !5795)
!5802 = !DILocation(line: 3089, column: 19, scope: !5795)
!5803 = !DILocation(line: 3089, column: 2, scope: !5795)
!5804 = !DILocation(line: 3089, column: 6, scope: !5795)
!5805 = !DILocation(line: 3089, column: 17, scope: !5795)
!5806 = !DILocation(line: 3094, column: 20, scope: !5795)
!5807 = !DILocation(line: 3094, column: 23, scope: !5795)
!5808 = !DILocation(line: 3094, column: 2, scope: !5795)
!5809 = !DILocation(line: 3096, column: 2, scope: !5795)
!5810 = distinct !DISubprogram(name: "vpaint_cancel", scope: !3, file: !3, line: 3099, type: !5518, scopeLine: 3100, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2758, retainedNodes: !3422)
!5811 = !DILocalVariable(name: "C", arg: 1, scope: !5810, file: !3, line: 3099, type: !3439)
!5812 = !DILocation(line: 3099, column: 37, scope: !5810)
!5813 = !DILocalVariable(name: "op", arg: 2, scope: !5810, file: !3, line: 3099, type: !4667)
!5814 = !DILocation(line: 3099, column: 52, scope: !5810)
!5815 = !DILocation(line: 3101, column: 22, scope: !5810)
!5816 = !DILocation(line: 3101, column: 25, scope: !5810)
!5817 = !DILocation(line: 3101, column: 2, scope: !5810)
!5818 = !DILocation(line: 3102, column: 1, scope: !5810)
!5819 = !DILocalVariable(name: "ot", arg: 1, scope: !2, file: !3, line: 3149, type: !6)
!5820 = !DILocation(line: 3149, column: 49, scope: !2)
!5821 = !DILocation(line: 3157, column: 2, scope: !2)
!5822 = !DILocation(line: 3157, column: 6, scope: !2)
!5823 = !DILocation(line: 3157, column: 11, scope: !2)
!5824 = !DILocation(line: 3158, column: 2, scope: !2)
!5825 = !DILocation(line: 3158, column: 6, scope: !2)
!5826 = !DILocation(line: 3158, column: 13, scope: !2)
!5827 = !DILocation(line: 3159, column: 2, scope: !2)
!5828 = !DILocation(line: 3159, column: 6, scope: !2)
!5829 = !DILocation(line: 3159, column: 18, scope: !2)
!5830 = !DILocation(line: 3163, column: 2, scope: !2)
!5831 = !DILocation(line: 3163, column: 6, scope: !2)
!5832 = !DILocation(line: 3163, column: 11, scope: !2)
!5833 = !DILocation(line: 3164, column: 2, scope: !2)
!5834 = !DILocation(line: 3164, column: 6, scope: !2)
!5835 = !DILocation(line: 3164, column: 13, scope: !2)
!5836 = !DILocation(line: 3165, column: 2, scope: !2)
!5837 = !DILocation(line: 3165, column: 6, scope: !2)
!5838 = !DILocation(line: 3165, column: 11, scope: !2)
!5839 = !DILocation(line: 3168, column: 2, scope: !2)
!5840 = !DILocation(line: 3168, column: 6, scope: !2)
!5841 = !DILocation(line: 3168, column: 11, scope: !2)
!5842 = !DILocation(line: 3171, column: 26, scope: !2)
!5843 = !DILocation(line: 3171, column: 30, scope: !2)
!5844 = !DILocation(line: 3171, column: 13, scope: !2)
!5845 = !DILocation(line: 3171, column: 2, scope: !2)
!5846 = !DILocation(line: 3171, column: 6, scope: !2)
!5847 = !DILocation(line: 3171, column: 11, scope: !2)
!5848 = !DILocation(line: 3172, column: 1, scope: !2)
!5849 = distinct !DISubprogram(name: "weight_from_bones_exec", scope: !3, file: !3, line: 3133, type: !5003, scopeLine: 3134, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2758, retainedNodes: !3422)
!5850 = !DILocalVariable(name: "C", arg: 1, scope: !5849, file: !3, line: 3133, type: !3439)
!5851 = !DILocation(line: 3133, column: 45, scope: !5849)
!5852 = !DILocalVariable(name: "op", arg: 2, scope: !5849, file: !3, line: 3133, type: !4667)
!5853 = !DILocation(line: 3133, column: 60, scope: !5849)
!5854 = !DILocalVariable(name: "scene", scope: !5849, file: !3, line: 3135, type: !3688)
!5855 = !DILocation(line: 3135, column: 9, scope: !5849)
!5856 = !DILocation(line: 3135, column: 32, scope: !5849)
!5857 = !DILocation(line: 3135, column: 17, scope: !5849)
!5858 = !DILocalVariable(name: "ob", scope: !5849, file: !3, line: 3136, type: !3444)
!5859 = !DILocation(line: 3136, column: 10, scope: !5849)
!5860 = !DILocation(line: 3136, column: 38, scope: !5849)
!5861 = !DILocation(line: 3136, column: 15, scope: !5849)
!5862 = !DILocalVariable(name: "armob", scope: !5849, file: !3, line: 3137, type: !3444)
!5863 = !DILocation(line: 3137, column: 10, scope: !5849)
!5864 = !DILocation(line: 3137, column: 49, scope: !5849)
!5865 = !DILocation(line: 3137, column: 18, scope: !5849)
!5866 = !DILocalVariable(name: "me", scope: !5849, file: !3, line: 3138, type: !3187)
!5867 = !DILocation(line: 3138, column: 8, scope: !5849)
!5868 = !DILocation(line: 3138, column: 13, scope: !5849)
!5869 = !DILocation(line: 3138, column: 17, scope: !5849)
!5870 = !DILocalVariable(name: "type", scope: !5849, file: !3, line: 3139, type: !22)
!5871 = !DILocation(line: 3139, column: 6, scope: !5849)
!5872 = !DILocation(line: 3139, column: 26, scope: !5849)
!5873 = !DILocation(line: 3139, column: 30, scope: !5849)
!5874 = !DILocation(line: 3139, column: 13, scope: !5849)
!5875 = !DILocation(line: 3141, column: 31, scope: !5849)
!5876 = !DILocation(line: 3141, column: 35, scope: !5849)
!5877 = !DILocation(line: 3141, column: 44, scope: !5849)
!5878 = !DILocation(line: 3141, column: 51, scope: !5849)
!5879 = !DILocation(line: 3141, column: 55, scope: !5849)
!5880 = !DILocation(line: 3141, column: 62, scope: !5849)
!5881 = !DILocation(line: 3141, column: 69, scope: !5849)
!5882 = !DILocation(line: 3141, column: 73, scope: !5849)
!5883 = !DILocation(line: 3141, column: 82, scope: !5849)
!5884 = !DILocation(line: 3141, column: 68, scope: !5849)
!5885 = !DILocation(line: 3141, column: 2, scope: !5849)
!5886 = !DILocation(line: 3143, column: 21, scope: !5849)
!5887 = !DILocation(line: 3143, column: 25, scope: !5849)
!5888 = !DILocation(line: 3143, column: 2, scope: !5849)
!5889 = !DILocation(line: 3144, column: 24, scope: !5849)
!5890 = !DILocation(line: 3144, column: 46, scope: !5849)
!5891 = !DILocation(line: 3144, column: 2, scope: !5849)
!5892 = !DILocation(line: 3146, column: 2, scope: !5849)
!5893 = distinct !DISubprogram(name: "weight_from_bones_poll", scope: !3, file: !3, line: 3126, type: !3437, scopeLine: 3127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2758, retainedNodes: !3422)
!5894 = !DILocalVariable(name: "C", arg: 1, scope: !5893, file: !3, line: 3126, type: !3439)
!5895 = !DILocation(line: 3126, column: 45, scope: !5893)
!5896 = !DILocalVariable(name: "ob", scope: !5893, file: !3, line: 3128, type: !3444)
!5897 = !DILocation(line: 3128, column: 10, scope: !5893)
!5898 = !DILocation(line: 3128, column: 38, scope: !5893)
!5899 = !DILocation(line: 3128, column: 15, scope: !5893)
!5900 = !DILocation(line: 3130, column: 10, scope: !5893)
!5901 = !DILocation(line: 3130, column: 13, scope: !5893)
!5902 = !DILocation(line: 3130, column: 17, scope: !5893)
!5903 = !DILocation(line: 3130, column: 21, scope: !5893)
!5904 = !DILocation(line: 3130, column: 26, scope: !5893)
!5905 = !DILocation(line: 3130, column: 50, scope: !5893)
!5906 = !DILocation(line: 3130, column: 84, scope: !5893)
!5907 = !DILocation(line: 3130, column: 53, scope: !5893)
!5908 = !DILocation(line: 0, scope: !5893)
!5909 = !DILocation(line: 3130, column: 2, scope: !5893)
!5910 = !DILocalVariable(name: "ot", arg: 1, scope: !3421, file: !3, line: 3457, type: !6)
!5911 = !DILocation(line: 3457, column: 47, scope: !3421)
!5912 = !DILocalVariable(name: "prop", scope: !3421, file: !3, line: 3466, type: !2707)
!5913 = !DILocation(line: 3466, column: 15, scope: !3421)
!5914 = !DILocation(line: 3469, column: 2, scope: !3421)
!5915 = !DILocation(line: 3469, column: 6, scope: !3421)
!5916 = !DILocation(line: 3469, column: 11, scope: !3421)
!5917 = !DILocation(line: 3470, column: 2, scope: !3421)
!5918 = !DILocation(line: 3470, column: 6, scope: !3421)
!5919 = !DILocation(line: 3470, column: 13, scope: !3421)
!5920 = !DILocation(line: 3471, column: 2, scope: !3421)
!5921 = !DILocation(line: 3471, column: 6, scope: !3421)
!5922 = !DILocation(line: 3471, column: 18, scope: !3421)
!5923 = !DILocation(line: 3474, column: 2, scope: !3421)
!5924 = !DILocation(line: 3474, column: 6, scope: !3421)
!5925 = !DILocation(line: 3474, column: 13, scope: !3421)
!5926 = !DILocation(line: 3475, column: 2, scope: !3421)
!5927 = !DILocation(line: 3475, column: 6, scope: !3421)
!5928 = !DILocation(line: 3475, column: 12, scope: !3421)
!5929 = !DILocation(line: 3476, column: 2, scope: !3421)
!5930 = !DILocation(line: 3476, column: 6, scope: !3421)
!5931 = !DILocation(line: 3476, column: 11, scope: !3421)
!5932 = !DILocation(line: 3477, column: 2, scope: !3421)
!5933 = !DILocation(line: 3477, column: 6, scope: !3421)
!5934 = !DILocation(line: 3477, column: 11, scope: !3421)
!5935 = !DILocation(line: 3478, column: 2, scope: !3421)
!5936 = !DILocation(line: 3478, column: 6, scope: !3421)
!5937 = !DILocation(line: 3478, column: 13, scope: !3421)
!5938 = !DILocation(line: 3481, column: 2, scope: !3421)
!5939 = !DILocation(line: 3481, column: 6, scope: !3421)
!5940 = !DILocation(line: 3481, column: 11, scope: !3421)
!5941 = !DILocation(line: 3483, column: 22, scope: !3421)
!5942 = !DILocation(line: 3483, column: 26, scope: !3421)
!5943 = !DILocation(line: 3483, column: 9, scope: !3421)
!5944 = !DILocation(line: 3483, column: 7, scope: !3421)
!5945 = !DILocation(line: 3484, column: 24, scope: !3421)
!5946 = !DILocation(line: 3484, column: 2, scope: !3421)
!5947 = !DILocation(line: 3486, column: 46, scope: !3421)
!5948 = !DILocation(line: 3486, column: 2, scope: !3421)
!5949 = !DILocation(line: 3487, column: 1, scope: !3421)
!5950 = distinct !DISubprogram(name: "paint_weight_gradient_invoke", scope: !3, file: !3, line: 3436, type: !4665, scopeLine: 3437, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2758, retainedNodes: !3422)
!5951 = !DILocalVariable(name: "C", arg: 1, scope: !5950, file: !3, line: 3436, type: !3439)
!5952 = !DILocation(line: 3436, column: 51, scope: !5950)
!5953 = !DILocalVariable(name: "op", arg: 2, scope: !5950, file: !3, line: 3436, type: !4667)
!5954 = !DILocation(line: 3436, column: 66, scope: !5950)
!5955 = !DILocalVariable(name: "event", arg: 3, scope: !5950, file: !3, line: 3436, type: !4669)
!5956 = !DILocation(line: 3436, column: 85, scope: !5950)
!5957 = !DILocalVariable(name: "ret", scope: !5950, file: !3, line: 3438, type: !22)
!5958 = !DILocation(line: 3438, column: 6, scope: !5950)
!5959 = !DILocation(line: 3440, column: 25, scope: !5960)
!5960 = distinct !DILexicalBlock(scope: !5950, file: !3, line: 3440, column: 6)
!5961 = !DILocation(line: 3440, column: 28, scope: !5960)
!5962 = !DILocation(line: 3440, column: 6, scope: !5960)
!5963 = !DILocation(line: 3440, column: 32, scope: !5960)
!5964 = !DILocation(line: 3440, column: 6, scope: !5950)
!5965 = !DILocation(line: 3441, column: 3, scope: !5966)
!5966 = distinct !DILexicalBlock(scope: !5960, file: !3, line: 3440, column: 42)
!5967 = !DILocation(line: 3444, column: 39, scope: !5950)
!5968 = !DILocation(line: 3444, column: 42, scope: !5950)
!5969 = !DILocation(line: 3444, column: 46, scope: !5950)
!5970 = !DILocation(line: 3444, column: 8, scope: !5950)
!5971 = !DILocation(line: 3444, column: 6, scope: !5950)
!5972 = !DILocation(line: 3445, column: 6, scope: !5973)
!5973 = distinct !DILexicalBlock(scope: !5950, file: !3, line: 3445, column: 6)
!5974 = !DILocation(line: 3445, column: 10, scope: !5973)
!5975 = !DILocation(line: 3445, column: 6, scope: !5950)
!5976 = !DILocalVariable(name: "ar", scope: !5977, file: !3, line: 3446, type: !3541)
!5977 = distinct !DILexicalBlock(scope: !5973, file: !3, line: 3445, column: 36)
!5978 = !DILocation(line: 3446, column: 19, scope: !5977)
!5979 = !DILocation(line: 3446, column: 38, scope: !5977)
!5980 = !DILocation(line: 3446, column: 24, scope: !5977)
!5981 = !DILocation(line: 3447, column: 7, scope: !5982)
!5982 = distinct !DILexicalBlock(scope: !5977, file: !3, line: 3447, column: 7)
!5983 = !DILocation(line: 3447, column: 11, scope: !5982)
!5984 = !DILocation(line: 3447, column: 22, scope: !5982)
!5985 = !DILocation(line: 3447, column: 7, scope: !5977)
!5986 = !DILocation(line: 3448, column: 8, scope: !5987)
!5987 = distinct !DILexicalBlock(scope: !5988, file: !3, line: 3448, column: 8)
!5988 = distinct !DILexicalBlock(scope: !5982, file: !3, line: 3447, column: 42)
!5989 = !DILocation(line: 3448, column: 15, scope: !5987)
!5990 = !DILocation(line: 3448, column: 20, scope: !5987)
!5991 = !DILocation(line: 3448, column: 33, scope: !5987)
!5992 = !DILocation(line: 3448, column: 36, scope: !5987)
!5993 = !DILocation(line: 3448, column: 43, scope: !5987)
!5994 = !DILocation(line: 3448, column: 47, scope: !5987)
!5995 = !DILocation(line: 3448, column: 8, scope: !5988)
!5996 = !DILocalVariable(name: "gesture", scope: !5997, file: !3, line: 3449, type: !5998)
!5997 = distinct !DILexicalBlock(scope: !5987, file: !3, line: 3448, column: 60)
!5998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5999, size: 64)
!5999 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmGesture", file: !8, line: 415, baseType: !2648)
!6000 = !DILocation(line: 3449, column: 16, scope: !5997)
!6001 = !DILocation(line: 3449, column: 26, scope: !5997)
!6002 = !DILocation(line: 3449, column: 30, scope: !5997)
!6003 = !DILocation(line: 3450, column: 5, scope: !5997)
!6004 = !DILocation(line: 3450, column: 14, scope: !5997)
!6005 = !DILocation(line: 3450, column: 19, scope: !5997)
!6006 = !DILocation(line: 3451, column: 4, scope: !5997)
!6007 = !DILocation(line: 3452, column: 3, scope: !5988)
!6008 = !DILocation(line: 3453, column: 2, scope: !5977)
!6009 = !DILocation(line: 3454, column: 9, scope: !5950)
!6010 = !DILocation(line: 3454, column: 2, scope: !5950)
!6011 = !DILocation(line: 3455, column: 1, scope: !5950)
!6012 = distinct !DISubprogram(name: "paint_weight_gradient_modal", scope: !3, file: !3, line: 3308, type: !4665, scopeLine: 3309, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2758, retainedNodes: !3422)
!6013 = !DILocalVariable(name: "C", arg: 1, scope: !6012, file: !3, line: 3308, type: !3439)
!6014 = !DILocation(line: 3308, column: 50, scope: !6012)
!6015 = !DILocalVariable(name: "op", arg: 2, scope: !6012, file: !3, line: 3308, type: !4667)
!6016 = !DILocation(line: 3308, column: 65, scope: !6012)
!6017 = !DILocalVariable(name: "event", arg: 3, scope: !6012, file: !3, line: 3308, type: !4669)
!6018 = !DILocation(line: 3308, column: 84, scope: !6012)
!6019 = !DILocalVariable(name: "ret", scope: !6012, file: !3, line: 3310, type: !22)
!6020 = !DILocation(line: 3310, column: 6, scope: !6012)
!6021 = !DILocation(line: 3310, column: 42, scope: !6012)
!6022 = !DILocation(line: 3310, column: 45, scope: !6012)
!6023 = !DILocation(line: 3310, column: 49, scope: !6012)
!6024 = !DILocation(line: 3310, column: 12, scope: !6012)
!6025 = !DILocation(line: 3312, column: 6, scope: !6026)
!6026 = distinct !DILexicalBlock(scope: !6012, file: !3, line: 3312, column: 6)
!6027 = !DILocation(line: 3312, column: 10, scope: !6026)
!6028 = !DILocation(line: 3312, column: 6, scope: !6012)
!6029 = !DILocation(line: 3313, column: 7, scope: !6030)
!6030 = distinct !DILexicalBlock(scope: !6031, file: !3, line: 3313, column: 7)
!6031 = distinct !DILexicalBlock(scope: !6026, file: !3, line: 3312, column: 36)
!6032 = !DILocation(line: 3313, column: 14, scope: !6030)
!6033 = !DILocation(line: 3313, column: 19, scope: !6030)
!6034 = !DILocation(line: 3313, column: 32, scope: !6030)
!6035 = !DILocation(line: 3313, column: 35, scope: !6030)
!6036 = !DILocation(line: 3313, column: 42, scope: !6030)
!6037 = !DILocation(line: 3313, column: 46, scope: !6030)
!6038 = !DILocation(line: 3313, column: 7, scope: !6031)
!6039 = !DILocation(line: 3315, column: 35, scope: !6040)
!6040 = distinct !DILexicalBlock(scope: !6030, file: !3, line: 3313, column: 61)
!6041 = !DILocation(line: 3315, column: 38, scope: !6040)
!6042 = !DILocation(line: 3315, column: 4, scope: !6040)
!6043 = !DILocation(line: 3316, column: 8, scope: !6040)
!6044 = !DILocation(line: 3317, column: 8, scope: !6040)
!6045 = !DILocation(line: 3318, column: 3, scope: !6040)
!6046 = !DILocation(line: 3319, column: 2, scope: !6031)
!6047 = !DILocation(line: 3321, column: 6, scope: !6048)
!6048 = distinct !DILexicalBlock(scope: !6012, file: !3, line: 3321, column: 6)
!6049 = !DILocation(line: 3321, column: 10, scope: !6048)
!6050 = !DILocation(line: 3321, column: 6, scope: !6012)
!6051 = !DILocalVariable(name: "ts", scope: !6052, file: !3, line: 3322, type: !4923)
!6052 = distinct !DILexicalBlock(scope: !6048, file: !3, line: 3321, column: 32)
!6053 = !DILocation(line: 3322, column: 17, scope: !6052)
!6054 = !DILocation(line: 3322, column: 45, scope: !6052)
!6055 = !DILocation(line: 3322, column: 22, scope: !6052)
!6056 = !DILocalVariable(name: "wp", scope: !6052, file: !3, line: 3323, type: !1538)
!6057 = !DILocation(line: 3323, column: 11, scope: !6052)
!6058 = !DILocation(line: 3323, column: 16, scope: !6052)
!6059 = !DILocation(line: 3323, column: 20, scope: !6052)
!6060 = !DILocalVariable(name: "ob", scope: !6052, file: !3, line: 3324, type: !3444)
!6061 = !DILocation(line: 3324, column: 11, scope: !6052)
!6062 = !DILocation(line: 3324, column: 39, scope: !6052)
!6063 = !DILocation(line: 3324, column: 16, scope: !6052)
!6064 = !DILocalVariable(name: "me", scope: !6052, file: !3, line: 3325, type: !3187)
!6065 = !DILocation(line: 3325, column: 9, scope: !6052)
!6066 = !DILocation(line: 3325, column: 14, scope: !6052)
!6067 = !DILocation(line: 3325, column: 18, scope: !6052)
!6068 = !DILocation(line: 3326, column: 7, scope: !6069)
!6069 = distinct !DILexicalBlock(scope: !6052, file: !3, line: 3326, column: 7)
!6070 = !DILocation(line: 3326, column: 11, scope: !6069)
!6071 = !DILocation(line: 3326, column: 7, scope: !6052)
!6072 = !DILocation(line: 3327, column: 33, scope: !6073)
!6073 = distinct !DILexicalBlock(scope: !6069, file: !3, line: 3326, column: 24)
!6074 = !DILocation(line: 3327, column: 37, scope: !6073)
!6075 = !DILocation(line: 3327, column: 44, scope: !6073)
!6076 = !DILocation(line: 3327, column: 48, scope: !6073)
!6077 = !DILocation(line: 3327, column: 4, scope: !6073)
!6078 = !DILocation(line: 3328, column: 27, scope: !6073)
!6079 = !DILocation(line: 3328, column: 31, scope: !6073)
!6080 = !DILocation(line: 3328, column: 38, scope: !6073)
!6081 = !DILocation(line: 3328, column: 42, scope: !6073)
!6082 = !DILocation(line: 3328, column: 55, scope: !6073)
!6083 = !DILocation(line: 3328, column: 59, scope: !6073)
!6084 = !DILocation(line: 3328, column: 4, scope: !6073)
!6085 = !DILocation(line: 3329, column: 21, scope: !6073)
!6086 = !DILocation(line: 3329, column: 4, scope: !6073)
!6087 = !DILocation(line: 3330, column: 3, scope: !6073)
!6088 = !DILocation(line: 3332, column: 22, scope: !6052)
!6089 = !DILocation(line: 3332, column: 26, scope: !6052)
!6090 = !DILocation(line: 3332, column: 3, scope: !6052)
!6091 = !DILocation(line: 3333, column: 25, scope: !6052)
!6092 = !DILocation(line: 3333, column: 49, scope: !6052)
!6093 = !DILocation(line: 3333, column: 3, scope: !6052)
!6094 = !DILocation(line: 3334, column: 2, scope: !6052)
!6095 = !DILocation(line: 3335, column: 11, scope: !6096)
!6096 = distinct !DILexicalBlock(scope: !6048, file: !3, line: 3335, column: 11)
!6097 = !DILocation(line: 3335, column: 15, scope: !6096)
!6098 = !DILocation(line: 3335, column: 11, scope: !6048)
!6099 = !DILocalVariable(name: "ts", scope: !6100, file: !3, line: 3336, type: !4923)
!6100 = distinct !DILexicalBlock(scope: !6096, file: !3, line: 3335, column: 36)
!6101 = !DILocation(line: 3336, column: 17, scope: !6100)
!6102 = !DILocation(line: 3336, column: 45, scope: !6100)
!6103 = !DILocation(line: 3336, column: 22, scope: !6100)
!6104 = !DILocalVariable(name: "wp", scope: !6100, file: !3, line: 3337, type: !1538)
!6105 = !DILocation(line: 3337, column: 11, scope: !6100)
!6106 = !DILocation(line: 3337, column: 16, scope: !6100)
!6107 = !DILocation(line: 3337, column: 20, scope: !6100)
!6108 = !DILocation(line: 3338, column: 20, scope: !6100)
!6109 = !DILocation(line: 3338, column: 3, scope: !6100)
!6110 = !DILocation(line: 3339, column: 2, scope: !6100)
!6111 = !DILocation(line: 3341, column: 9, scope: !6012)
!6112 = !DILocation(line: 3341, column: 2, scope: !6012)
!6113 = distinct !DISubprogram(name: "paint_weight_gradient_exec", scope: !3, file: !3, line: 3344, type: !5003, scopeLine: 3345, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2758, retainedNodes: !3422)
!6114 = !DILocalVariable(name: "C", arg: 1, scope: !6113, file: !3, line: 3344, type: !3439)
!6115 = !DILocation(line: 3344, column: 49, scope: !6113)
!6116 = !DILocalVariable(name: "op", arg: 2, scope: !6113, file: !3, line: 3344, type: !4667)
!6117 = !DILocation(line: 3344, column: 64, scope: !6113)
!6118 = !DILocalVariable(name: "gesture", scope: !6113, file: !3, line: 3346, type: !5998)
!6119 = !DILocation(line: 3346, column: 13, scope: !6113)
!6120 = !DILocation(line: 3346, column: 23, scope: !6113)
!6121 = !DILocation(line: 3346, column: 27, scope: !6113)
!6122 = !DILocalVariable(name: "vert_cache", scope: !6113, file: !3, line: 3347, type: !6123)
!6123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6124, size: 64)
!6124 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMGradient_vertStore", file: !3, line: 3182, baseType: !3173)
!6125 = !DILocation(line: 3347, column: 24, scope: !6113)
!6126 = !DILocalVariable(name: "ar", scope: !6113, file: !3, line: 3348, type: !3541)
!6127 = !DILocation(line: 3348, column: 18, scope: !6113)
!6128 = !DILocation(line: 3348, column: 37, scope: !6113)
!6129 = !DILocation(line: 3348, column: 23, scope: !6113)
!6130 = !DILocalVariable(name: "scene", scope: !6113, file: !3, line: 3349, type: !3688)
!6131 = !DILocation(line: 3349, column: 9, scope: !6113)
!6132 = !DILocation(line: 3349, column: 32, scope: !6113)
!6133 = !DILocation(line: 3349, column: 17, scope: !6113)
!6134 = !DILocalVariable(name: "ob", scope: !6113, file: !3, line: 3350, type: !3444)
!6135 = !DILocation(line: 3350, column: 10, scope: !6113)
!6136 = !DILocation(line: 3350, column: 38, scope: !6113)
!6137 = !DILocation(line: 3350, column: 15, scope: !6113)
!6138 = !DILocalVariable(name: "me", scope: !6113, file: !3, line: 3351, type: !3187)
!6139 = !DILocation(line: 3351, column: 8, scope: !6113)
!6140 = !DILocation(line: 3351, column: 13, scope: !6113)
!6141 = !DILocation(line: 3351, column: 17, scope: !6113)
!6142 = !DILocalVariable(name: "x_start", scope: !6113, file: !3, line: 3352, type: !22)
!6143 = !DILocation(line: 3352, column: 6, scope: !6113)
!6144 = !DILocation(line: 3352, column: 28, scope: !6113)
!6145 = !DILocation(line: 3352, column: 32, scope: !6113)
!6146 = !DILocation(line: 3352, column: 16, scope: !6113)
!6147 = !DILocalVariable(name: "y_start", scope: !6113, file: !3, line: 3353, type: !22)
!6148 = !DILocation(line: 3353, column: 6, scope: !6113)
!6149 = !DILocation(line: 3353, column: 28, scope: !6113)
!6150 = !DILocation(line: 3353, column: 32, scope: !6113)
!6151 = !DILocation(line: 3353, column: 16, scope: !6113)
!6152 = !DILocalVariable(name: "x_end", scope: !6113, file: !3, line: 3354, type: !22)
!6153 = !DILocation(line: 3354, column: 6, scope: !6113)
!6154 = !DILocation(line: 3354, column: 26, scope: !6113)
!6155 = !DILocation(line: 3354, column: 30, scope: !6113)
!6156 = !DILocation(line: 3354, column: 14, scope: !6113)
!6157 = !DILocalVariable(name: "y_end", scope: !6113, file: !3, line: 3355, type: !22)
!6158 = !DILocation(line: 3355, column: 6, scope: !6113)
!6159 = !DILocation(line: 3355, column: 26, scope: !6113)
!6160 = !DILocation(line: 3355, column: 30, scope: !6113)
!6161 = !DILocation(line: 3355, column: 14, scope: !6113)
!6162 = !DILocalVariable(name: "sco_start", scope: !6113, file: !3, line: 3356, type: !1052)
!6163 = !DILocation(line: 3356, column: 8, scope: !6113)
!6164 = !DILocation(line: 3356, column: 23, scope: !6113)
!6165 = !DILocation(line: 3356, column: 24, scope: !6113)
!6166 = !DILocation(line: 3356, column: 33, scope: !6113)
!6167 = !DILocalVariable(name: "sco_end", scope: !6113, file: !3, line: 3357, type: !1052)
!6168 = !DILocation(line: 3357, column: 8, scope: !6113)
!6169 = !DILocation(line: 3357, column: 21, scope: !6113)
!6170 = !DILocation(line: 3357, column: 22, scope: !6113)
!6171 = !DILocation(line: 3357, column: 29, scope: !6113)
!6172 = !DILocalVariable(name: "is_interactive", scope: !6113, file: !3, line: 3358, type: !976)
!6173 = !DILocation(line: 3358, column: 13, scope: !6113)
!6174 = !DILocation(line: 3358, column: 31, scope: !6113)
!6175 = !DILocation(line: 3358, column: 39, scope: !6113)
!6176 = !DILocation(line: 3358, column: 30, scope: !6113)
!6177 = !DILocalVariable(name: "dm", scope: !6113, file: !3, line: 3359, type: !631)
!6178 = !DILocation(line: 3359, column: 15, scope: !6113)
!6179 = !DILocation(line: 3359, column: 43, scope: !6113)
!6180 = !DILocation(line: 3359, column: 50, scope: !6113)
!6181 = !DILocation(line: 3359, column: 54, scope: !6113)
!6182 = !DILocation(line: 3359, column: 61, scope: !6113)
!6183 = !DILocation(line: 3359, column: 20, scope: !6113)
!6184 = !DILocalVariable(name: "data", scope: !6113, file: !3, line: 3361, type: !6185)
!6185 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMGradient_userData", file: !3, line: 3202, baseType: !6186)
!6186 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DMGradient_userData", file: !3, line: 3184, size: 704, elements: !6187)
!6187 = !{!6188, !6189, !6190, !6191, !6192, !6193, !6194, !6195, !6196, !6197, !6198, !6199, !6200, !6201}
!6188 = !DIDerivedType(tag: DW_TAG_member, name: "ar", scope: !6186, file: !3, line: 3185, baseType: !3541, size: 64)
!6189 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !6186, file: !3, line: 3186, baseType: !3688, size: 64, offset: 64)
!6190 = !DIDerivedType(tag: DW_TAG_member, name: "me", scope: !6186, file: !3, line: 3187, baseType: !3187, size: 64, offset: 128)
!6191 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !6186, file: !3, line: 3188, baseType: !3695, size: 64, offset: 192)
!6192 = !DIDerivedType(tag: DW_TAG_member, name: "sco_start", scope: !6186, file: !3, line: 3189, baseType: !804, size: 64, offset: 256)
!6193 = !DIDerivedType(tag: DW_TAG_member, name: "sco_end", scope: !6186, file: !3, line: 3190, baseType: !804, size: 64, offset: 320)
!6194 = !DIDerivedType(tag: DW_TAG_member, name: "sco_line_div", scope: !6186, file: !3, line: 3191, baseType: !210, size: 32, offset: 384)
!6195 = !DIDerivedType(tag: DW_TAG_member, name: "def_nr", scope: !6186, file: !3, line: 3192, baseType: !22, size: 32, offset: 416)
!6196 = !DIDerivedType(tag: DW_TAG_member, name: "is_init", scope: !6186, file: !3, line: 3193, baseType: !48, size: 16, offset: 448)
!6197 = !DIDerivedType(tag: DW_TAG_member, name: "vert_cache", scope: !6186, file: !3, line: 3194, baseType: !6123, size: 64, offset: 512)
!6198 = !DIDerivedType(tag: DW_TAG_member, name: "vert_visit", scope: !6186, file: !3, line: 3196, baseType: !3415, size: 64, offset: 576)
!6199 = !DIDerivedType(tag: DW_TAG_member, name: "use_select", scope: !6186, file: !3, line: 3199, baseType: !48, size: 16, offset: 640)
!6200 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !6186, file: !3, line: 3200, baseType: !48, size: 16, offset: 656)
!6201 = !DIDerivedType(tag: DW_TAG_member, name: "weightpaint", scope: !6186, file: !3, line: 3201, baseType: !210, size: 32, offset: 672)
!6202 = !DILocation(line: 3361, column: 22, scope: !6113)
!6203 = !DILocation(line: 3363, column: 6, scope: !6204)
!6204 = distinct !DILexicalBlock(scope: !6113, file: !3, line: 3363, column: 6)
!6205 = !DILocation(line: 3363, column: 6, scope: !6113)
!6206 = !DILocation(line: 3364, column: 7, scope: !6207)
!6207 = distinct !DILexicalBlock(scope: !6208, file: !3, line: 3364, column: 7)
!6208 = distinct !DILexicalBlock(scope: !6204, file: !3, line: 3363, column: 22)
!6209 = !DILocation(line: 3364, column: 16, scope: !6207)
!6210 = !DILocation(line: 3364, column: 25, scope: !6207)
!6211 = !DILocation(line: 3364, column: 7, scope: !6208)
!6212 = !DILocalVariable(name: "wp", scope: !6213, file: !3, line: 3365, type: !1538)
!6213 = distinct !DILexicalBlock(scope: !6207, file: !3, line: 3364, column: 34)
!6214 = !DILocation(line: 3365, column: 12, scope: !6213)
!6215 = !DILocation(line: 3365, column: 17, scope: !6213)
!6216 = !DILocation(line: 3365, column: 24, scope: !6213)
!6217 = !DILocation(line: 3365, column: 38, scope: !6213)
!6218 = !DILocation(line: 3367, column: 24, scope: !6213)
!6219 = !DILocation(line: 3367, column: 67, scope: !6213)
!6220 = !DILocation(line: 3367, column: 71, scope: !6213)
!6221 = !DILocation(line: 3367, column: 65, scope: !6213)
!6222 = !DILocation(line: 3367, column: 4, scope: !6213)
!6223 = !DILocation(line: 3367, column: 13, scope: !6213)
!6224 = !DILocation(line: 3367, column: 22, scope: !6213)
!6225 = !DILocation(line: 3368, column: 9, scope: !6213)
!6226 = !DILocation(line: 3368, column: 17, scope: !6213)
!6227 = !DILocation(line: 3370, column: 21, scope: !6213)
!6228 = !DILocation(line: 3370, column: 25, scope: !6213)
!6229 = !DILocation(line: 3370, column: 29, scope: !6213)
!6230 = !DILocation(line: 3370, column: 36, scope: !6213)
!6231 = !DILocation(line: 3370, column: 40, scope: !6213)
!6232 = !DILocation(line: 3370, column: 4, scope: !6213)
!6233 = !DILocation(line: 3373, column: 8, scope: !6234)
!6234 = distinct !DILexicalBlock(scope: !6213, file: !3, line: 3373, column: 8)
!6235 = !DILocation(line: 3373, column: 12, scope: !6234)
!6236 = !DILocation(line: 3373, column: 21, scope: !6234)
!6237 = !DILocation(line: 3373, column: 8, scope: !6213)
!6238 = !DILocation(line: 3374, column: 38, scope: !6239)
!6239 = distinct !DILexicalBlock(scope: !6234, file: !3, line: 3373, column: 47)
!6240 = !DILocation(line: 3374, column: 5, scope: !6239)
!6241 = !DILocation(line: 3375, column: 4, scope: !6239)
!6242 = !DILocation(line: 3376, column: 3, scope: !6213)
!6243 = !DILocation(line: 3378, column: 16, scope: !6208)
!6244 = !DILocation(line: 3378, column: 25, scope: !6208)
!6245 = !DILocation(line: 3378, column: 14, scope: !6208)
!6246 = !DILocation(line: 3379, column: 2, scope: !6208)
!6247 = !DILocation(line: 3381, column: 26, scope: !6248)
!6248 = distinct !DILexicalBlock(scope: !6249, file: !3, line: 3381, column: 7)
!6249 = distinct !DILexicalBlock(scope: !6204, file: !3, line: 3380, column: 7)
!6250 = !DILocation(line: 3381, column: 29, scope: !6248)
!6251 = !DILocation(line: 3381, column: 7, scope: !6248)
!6252 = !DILocation(line: 3381, column: 33, scope: !6248)
!6253 = !DILocation(line: 3381, column: 7, scope: !6249)
!6254 = !DILocation(line: 3382, column: 4, scope: !6255)
!6255 = distinct !DILexicalBlock(scope: !6248, file: !3, line: 3381, column: 43)
!6256 = !DILocation(line: 3385, column: 8, scope: !6249)
!6257 = !DILocation(line: 3385, column: 16, scope: !6249)
!6258 = !DILocation(line: 3386, column: 16, scope: !6249)
!6259 = !DILocation(line: 3386, column: 59, scope: !6249)
!6260 = !DILocation(line: 3386, column: 63, scope: !6249)
!6261 = !DILocation(line: 3386, column: 57, scope: !6249)
!6262 = !DILocation(line: 3386, column: 14, scope: !6249)
!6263 = !DILocation(line: 3389, column: 12, scope: !6113)
!6264 = !DILocation(line: 3389, column: 7, scope: !6113)
!6265 = !DILocation(line: 3389, column: 10, scope: !6113)
!6266 = !DILocation(line: 3390, column: 15, scope: !6113)
!6267 = !DILocation(line: 3390, column: 7, scope: !6113)
!6268 = !DILocation(line: 3390, column: 13, scope: !6113)
!6269 = !DILocation(line: 3391, column: 12, scope: !6113)
!6270 = !DILocation(line: 3391, column: 16, scope: !6113)
!6271 = !DILocation(line: 3391, column: 7, scope: !6113)
!6272 = !DILocation(line: 3391, column: 10, scope: !6113)
!6273 = !DILocation(line: 3392, column: 19, scope: !6113)
!6274 = !DILocation(line: 3392, column: 7, scope: !6113)
!6275 = !DILocation(line: 3392, column: 17, scope: !6113)
!6276 = !DILocation(line: 3393, column: 19, scope: !6113)
!6277 = !DILocation(line: 3393, column: 7, scope: !6113)
!6278 = !DILocation(line: 3393, column: 17, scope: !6113)
!6279 = !DILocation(line: 3394, column: 38, scope: !6113)
!6280 = !DILocation(line: 3394, column: 49, scope: !6113)
!6281 = !DILocation(line: 3394, column: 29, scope: !6113)
!6282 = !DILocation(line: 3394, column: 27, scope: !6113)
!6283 = !DILocation(line: 3394, column: 7, scope: !6113)
!6284 = !DILocation(line: 3394, column: 20, scope: !6113)
!6285 = !DILocation(line: 3395, column: 16, scope: !6113)
!6286 = !DILocation(line: 3395, column: 20, scope: !6113)
!6287 = !DILocation(line: 3395, column: 27, scope: !6113)
!6288 = !DILocation(line: 3395, column: 7, scope: !6113)
!6289 = !DILocation(line: 3395, column: 14, scope: !6113)
!6290 = !DILocation(line: 3396, column: 21, scope: !6113)
!6291 = !DILocation(line: 3396, column: 25, scope: !6113)
!6292 = !DILocation(line: 3396, column: 34, scope: !6113)
!6293 = !DILocation(line: 3396, column: 20, scope: !6113)
!6294 = !DILocation(line: 3396, column: 7, scope: !6113)
!6295 = !DILocation(line: 3396, column: 18, scope: !6113)
!6296 = !DILocation(line: 3397, column: 20, scope: !6113)
!6297 = !DILocation(line: 3397, column: 7, scope: !6113)
!6298 = !DILocation(line: 3397, column: 18, scope: !6113)
!6299 = !DILocation(line: 3398, column: 7, scope: !6113)
!6300 = !DILocation(line: 3398, column: 18, scope: !6113)
!6301 = !DILocation(line: 3399, column: 27, scope: !6113)
!6302 = !DILocation(line: 3399, column: 31, scope: !6113)
!6303 = !DILocation(line: 3399, column: 14, scope: !6113)
!6304 = !DILocation(line: 3399, column: 7, scope: !6113)
!6305 = !DILocation(line: 3399, column: 12, scope: !6113)
!6306 = !DILocalVariable(name: "ts", scope: !6307, file: !3, line: 3402, type: !4923)
!6307 = distinct !DILexicalBlock(scope: !6113, file: !3, line: 3401, column: 2)
!6308 = !DILocation(line: 3402, column: 17, scope: !6307)
!6309 = !DILocation(line: 3402, column: 45, scope: !6307)
!6310 = !DILocation(line: 3402, column: 22, scope: !6307)
!6311 = !DILocalVariable(name: "wp", scope: !6307, file: !3, line: 3403, type: !1538)
!6312 = !DILocation(line: 3403, column: 11, scope: !6307)
!6313 = !DILocation(line: 3403, column: 16, scope: !6307)
!6314 = !DILocation(line: 3403, column: 20, scope: !6307)
!6315 = !DILocalVariable(name: "brush", scope: !6307, file: !3, line: 3404, type: !1547)
!6316 = !DILocation(line: 3404, column: 17, scope: !6307)
!6317 = !DILocation(line: 3404, column: 42, scope: !6307)
!6318 = !DILocation(line: 3404, column: 46, scope: !6307)
!6319 = !DILocation(line: 3404, column: 25, scope: !6307)
!6320 = !DILocation(line: 3406, column: 27, scope: !6307)
!6321 = !DILocation(line: 3406, column: 34, scope: !6307)
!6322 = !DILocation(line: 3406, column: 3, scope: !6307)
!6323 = !DILocation(line: 3408, column: 16, scope: !6307)
!6324 = !DILocation(line: 3408, column: 8, scope: !6307)
!6325 = !DILocation(line: 3408, column: 14, scope: !6307)
!6326 = !DILocation(line: 3409, column: 43, scope: !6307)
!6327 = !DILocation(line: 3409, column: 50, scope: !6307)
!6328 = !DILocation(line: 3409, column: 22, scope: !6307)
!6329 = !DILocation(line: 3409, column: 8, scope: !6307)
!6330 = !DILocation(line: 3409, column: 20, scope: !6307)
!6331 = !DILocation(line: 3412, column: 27, scope: !6113)
!6332 = !DILocation(line: 3412, column: 31, scope: !6113)
!6333 = !DILocation(line: 3412, column: 35, scope: !6113)
!6334 = !DILocation(line: 3412, column: 2, scope: !6113)
!6335 = !DILocation(line: 3414, column: 11, scope: !6336)
!6336 = distinct !DILexicalBlock(scope: !6113, file: !3, line: 3414, column: 6)
!6337 = !DILocation(line: 3414, column: 6, scope: !6336)
!6338 = !DILocation(line: 3414, column: 6, scope: !6113)
!6339 = !DILocation(line: 3415, column: 21, scope: !6340)
!6340 = distinct !DILexicalBlock(scope: !6336, file: !3, line: 3414, column: 20)
!6341 = !DILocation(line: 3415, column: 8, scope: !6340)
!6342 = !DILocation(line: 3415, column: 19, scope: !6340)
!6343 = !DILocation(line: 3417, column: 3, scope: !6340)
!6344 = !DILocation(line: 3417, column: 7, scope: !6340)
!6345 = !DILocation(line: 3417, column: 25, scope: !6340)
!6346 = !DILocation(line: 3417, column: 56, scope: !6340)
!6347 = !DILocation(line: 3419, column: 3, scope: !6340)
!6348 = !DILocation(line: 3419, column: 18, scope: !6340)
!6349 = !DILocation(line: 3419, column: 13, scope: !6340)
!6350 = !DILocation(line: 3420, column: 8, scope: !6340)
!6351 = !DILocation(line: 3420, column: 19, scope: !6340)
!6352 = !DILocation(line: 3421, column: 2, scope: !6340)
!6353 = !DILocation(line: 3423, column: 3, scope: !6354)
!6354 = distinct !DILexicalBlock(scope: !6336, file: !3, line: 3422, column: 7)
!6355 = !DILocation(line: 3423, column: 7, scope: !6354)
!6356 = !DILocation(line: 3423, column: 25, scope: !6354)
!6357 = !DILocation(line: 3423, column: 58, scope: !6354)
!6358 = !DILocation(line: 3426, column: 21, scope: !6113)
!6359 = !DILocation(line: 3426, column: 25, scope: !6113)
!6360 = !DILocation(line: 3426, column: 2, scope: !6113)
!6361 = !DILocation(line: 3427, column: 24, scope: !6113)
!6362 = !DILocation(line: 3427, column: 48, scope: !6113)
!6363 = !DILocation(line: 3427, column: 2, scope: !6113)
!6364 = !DILocation(line: 3429, column: 6, scope: !6365)
!6365 = distinct !DILexicalBlock(scope: !6113, file: !3, line: 3429, column: 6)
!6366 = !DILocation(line: 3429, column: 21, scope: !6365)
!6367 = !DILocation(line: 3429, column: 6, scope: !6113)
!6368 = !DILocation(line: 3430, column: 3, scope: !6369)
!6369 = distinct !DILexicalBlock(scope: !6365, file: !3, line: 3429, column: 31)
!6370 = !DILocation(line: 3430, column: 13, scope: !6369)
!6371 = !DILocation(line: 3431, column: 2, scope: !6369)
!6372 = !DILocation(line: 3433, column: 2, scope: !6113)
!6373 = !DILocation(line: 3434, column: 1, scope: !6113)
!6374 = distinct !DISubprogram(name: "update_tessface_data", scope: !3, file: !3, line: 109, type: !6375, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2758, retainedNodes: !3422)
!6375 = !DISubroutineType(types: !6376)
!6376 = !{null, !3444, !3187}
!6377 = !DILocalVariable(name: "ob", arg: 1, scope: !6374, file: !3, line: 109, type: !3444)
!6378 = !DILocation(line: 109, column: 42, scope: !6374)
!6379 = !DILocalVariable(name: "me", arg: 2, scope: !6374, file: !3, line: 109, type: !3187)
!6380 = !DILocation(line: 109, column: 52, scope: !6374)
!6381 = !DILocation(line: 111, column: 38, scope: !6382)
!6382 = distinct !DILexicalBlock(scope: !6374, file: !3, line: 111, column: 6)
!6383 = !DILocation(line: 111, column: 42, scope: !6382)
!6384 = !DILocation(line: 111, column: 6, scope: !6382)
!6385 = !DILocation(line: 111, column: 6, scope: !6374)
!6386 = !DILocation(line: 113, column: 8, scope: !6387)
!6387 = distinct !DILexicalBlock(scope: !6388, file: !3, line: 113, column: 7)
!6388 = distinct !DILexicalBlock(scope: !6382, file: !3, line: 111, column: 47)
!6389 = !DILocation(line: 113, column: 12, scope: !6387)
!6390 = !DILocation(line: 113, column: 17, scope: !6387)
!6391 = !DILocation(line: 113, column: 21, scope: !6387)
!6392 = !DILocation(line: 113, column: 25, scope: !6387)
!6393 = !DILocation(line: 113, column: 7, scope: !6388)
!6394 = !DILocation(line: 123, column: 27, scope: !6395)
!6395 = distinct !DILexicalBlock(scope: !6387, file: !3, line: 113, column: 32)
!6396 = !DILocation(line: 123, column: 4, scope: !6395)
!6397 = !DILocation(line: 124, column: 3, scope: !6395)
!6398 = !DILocation(line: 125, column: 2, scope: !6388)
!6399 = !DILocation(line: 127, column: 7, scope: !6400)
!6400 = distinct !DILexicalBlock(scope: !6401, file: !3, line: 127, column: 7)
!6401 = distinct !DILexicalBlock(scope: !6382, file: !3, line: 126, column: 7)
!6402 = !DILocation(line: 127, column: 11, scope: !6400)
!6403 = !DILocation(line: 127, column: 7, scope: !6401)
!6404 = !DILocation(line: 129, column: 28, scope: !6405)
!6405 = distinct !DILexicalBlock(scope: !6400, file: !3, line: 127, column: 20)
!6406 = !DILocation(line: 129, column: 4, scope: !6405)
!6407 = !DILocation(line: 130, column: 3, scope: !6405)
!6408 = !DILocation(line: 133, column: 1, scope: !6374)
!6409 = distinct !DISubprogram(name: "vertex_paint_use_tessface_check", scope: !3, file: !3, line: 98, type: !6410, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2758, retainedNodes: !3422)
!6410 = !DISubroutineType(types: !6411)
!6411 = !{!259, !3444, !3187}
!6412 = !DILocalVariable(name: "ob", arg: 1, scope: !6409, file: !3, line: 98, type: !3444)
!6413 = !DILocation(line: 98, column: 53, scope: !6409)
!6414 = !DILocalVariable(name: "me", arg: 2, scope: !6409, file: !3, line: 98, type: !3187)
!6415 = !DILocation(line: 98, column: 63, scope: !6409)
!6416 = !DILocalVariable(name: "dm", scope: !6409, file: !3, line: 100, type: !631)
!6417 = !DILocation(line: 100, column: 15, scope: !6409)
!6418 = !DILocation(line: 100, column: 20, scope: !6409)
!6419 = !DILocation(line: 100, column: 24, scope: !6409)
!6420 = !DILocation(line: 102, column: 6, scope: !6421)
!6421 = distinct !DILexicalBlock(scope: !6409, file: !3, line: 102, column: 6)
!6422 = !DILocation(line: 102, column: 9, scope: !6421)
!6423 = !DILocation(line: 102, column: 12, scope: !6421)
!6424 = !DILocation(line: 102, column: 6, scope: !6409)
!6425 = !DILocation(line: 103, column: 11, scope: !6426)
!6426 = distinct !DILexicalBlock(scope: !6421, file: !3, line: 102, column: 16)
!6427 = !DILocation(line: 103, column: 15, scope: !6426)
!6428 = !DILocation(line: 103, column: 46, scope: !6426)
!6429 = !DILocation(line: 103, column: 50, scope: !6426)
!6430 = !DILocation(line: 103, column: 24, scope: !6426)
!6431 = !DILocation(line: 103, column: 21, scope: !6426)
!6432 = !DILocation(line: 103, column: 10, scope: !6426)
!6433 = !DILocation(line: 103, column: 3, scope: !6426)
!6434 = !DILocation(line: 106, column: 2, scope: !6409)
!6435 = !DILocation(line: 107, column: 1, scope: !6409)
!6436 = distinct !DISubprogram(name: "free_wpaint_prev", scope: !3, file: !3, line: 406, type: !6437, scopeLine: 407, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2758, retainedNodes: !3422)
!6437 = !DISubroutineType(types: !6438)
!6438 = !{null, !1538}
!6439 = !DILocalVariable(name: "vp", arg: 1, scope: !6436, file: !3, line: 406, type: !1538)
!6440 = !DILocation(line: 406, column: 38, scope: !6436)
!6441 = !DILocation(line: 408, column: 6, scope: !6442)
!6442 = distinct !DILexicalBlock(scope: !6436, file: !3, line: 408, column: 6)
!6443 = !DILocation(line: 408, column: 10, scope: !6442)
!6444 = !DILocation(line: 408, column: 6, scope: !6436)
!6445 = !DILocation(line: 409, column: 26, scope: !6446)
!6446 = distinct !DILexicalBlock(scope: !6442, file: !3, line: 408, column: 23)
!6447 = !DILocation(line: 409, column: 30, scope: !6446)
!6448 = !DILocation(line: 409, column: 43, scope: !6446)
!6449 = !DILocation(line: 409, column: 47, scope: !6446)
!6450 = !DILocation(line: 409, column: 3, scope: !6446)
!6451 = !DILocation(line: 410, column: 3, scope: !6446)
!6452 = !DILocation(line: 410, column: 7, scope: !6446)
!6453 = !DILocation(line: 410, column: 19, scope: !6446)
!6454 = !DILocation(line: 411, column: 3, scope: !6446)
!6455 = !DILocation(line: 411, column: 7, scope: !6446)
!6456 = !DILocation(line: 411, column: 11, scope: !6446)
!6457 = !DILocation(line: 412, column: 2, scope: !6446)
!6458 = !DILocation(line: 413, column: 1, scope: !6436)
!6459 = distinct !DISubprogram(name: "divide_round_i", scope: !6460, file: !6460, line: 170, type: !6461, scopeLine: 171, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2758, retainedNodes: !3422)
!6460 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_base_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!6461 = !DISubroutineType(types: !6462)
!6462 = !{!22, !22, !22}
!6463 = !DILocalVariable(name: "a", arg: 1, scope: !6459, file: !6460, line: 170, type: !22)
!6464 = !DILocation(line: 170, column: 32, scope: !6459)
!6465 = !DILocalVariable(name: "b", arg: 2, scope: !6459, file: !6460, line: 170, type: !22)
!6466 = !DILocation(line: 170, column: 39, scope: !6459)
!6467 = !DILocation(line: 172, column: 14, scope: !6459)
!6468 = !DILocation(line: 172, column: 12, scope: !6459)
!6469 = !DILocation(line: 172, column: 18, scope: !6459)
!6470 = !DILocation(line: 172, column: 16, scope: !6459)
!6471 = !DILocation(line: 172, column: 28, scope: !6459)
!6472 = !DILocation(line: 172, column: 26, scope: !6459)
!6473 = !DILocation(line: 172, column: 21, scope: !6459)
!6474 = !DILocation(line: 172, column: 2, scope: !6459)
!6475 = distinct !DISubprogram(name: "do_shared_vertex_tesscol", scope: !3, file: !3, line: 209, type: !6476, scopeLine: 210, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2758, retainedNodes: !3422)
!6476 = !DISubroutineType(types: !6477)
!6477 = !{null, !3187, !1742}
!6478 = !DILocalVariable(name: "me", arg: 1, scope: !6475, file: !3, line: 209, type: !3187)
!6479 = !DILocation(line: 209, column: 44, scope: !6475)
!6480 = !DILocalVariable(name: "mfacetag", arg: 2, scope: !6475, file: !3, line: 209, type: !1742)
!6481 = !DILocation(line: 209, column: 54, scope: !6475)
!6482 = !DILocalVariable(name: "use_face_sel", scope: !6475, file: !3, line: 213, type: !3408)
!6483 = !DILocation(line: 213, column: 12, scope: !6475)
!6484 = !DILocation(line: 213, column: 28, scope: !6475)
!6485 = !DILocation(line: 213, column: 32, scope: !6475)
!6486 = !DILocation(line: 213, column: 41, scope: !6475)
!6487 = !DILocalVariable(name: "mface", scope: !6475, file: !3, line: 214, type: !3413)
!6488 = !DILocation(line: 214, column: 9, scope: !6475)
!6489 = !DILocalVariable(name: "a", scope: !6475, file: !3, line: 215, type: !22)
!6490 = !DILocation(line: 215, column: 6, scope: !6475)
!6491 = !DILocalVariable(name: "scolmain", scope: !6475, file: !3, line: 216, type: !3308)
!6492 = !DILocation(line: 216, column: 9, scope: !6475)
!6493 = !DILocalVariable(name: "scol", scope: !6475, file: !3, line: 216, type: !3308)
!6494 = !DILocation(line: 216, column: 20, scope: !6475)
!6495 = !DILocalVariable(name: "mcol", scope: !6475, file: !3, line: 217, type: !192)
!6496 = !DILocation(line: 217, column: 8, scope: !6475)
!6497 = !DILocalVariable(name: "mftag", scope: !6475, file: !3, line: 218, type: !3412)
!6498 = !DILocation(line: 218, column: 14, scope: !6475)
!6499 = !DILocation(line: 220, column: 6, scope: !6500)
!6500 = distinct !DILexicalBlock(scope: !6475, file: !3, line: 220, column: 6)
!6501 = !DILocation(line: 220, column: 10, scope: !6500)
!6502 = !DILocation(line: 220, column: 15, scope: !6500)
!6503 = !DILocation(line: 220, column: 23, scope: !6500)
!6504 = !DILocation(line: 220, column: 26, scope: !6500)
!6505 = !DILocation(line: 220, column: 30, scope: !6500)
!6506 = !DILocation(line: 220, column: 38, scope: !6500)
!6507 = !DILocation(line: 220, column: 43, scope: !6500)
!6508 = !DILocation(line: 220, column: 46, scope: !6500)
!6509 = !DILocation(line: 220, column: 50, scope: !6500)
!6510 = !DILocation(line: 220, column: 58, scope: !6500)
!6511 = !DILocation(line: 220, column: 6, scope: !6475)
!6512 = !DILocation(line: 220, column: 64, scope: !6500)
!6513 = !DILocation(line: 222, column: 13, scope: !6475)
!6514 = !DILocation(line: 222, column: 45, scope: !6475)
!6515 = !DILocation(line: 222, column: 49, scope: !6475)
!6516 = !DILocation(line: 222, column: 43, scope: !6475)
!6517 = !DILocation(line: 222, column: 11, scope: !6475)
!6518 = !DILocation(line: 224, column: 10, scope: !6475)
!6519 = !DILocation(line: 224, column: 14, scope: !6475)
!6520 = !DILocation(line: 224, column: 8, scope: !6475)
!6521 = !DILocation(line: 225, column: 17, scope: !6475)
!6522 = !DILocation(line: 225, column: 21, scope: !6475)
!6523 = !DILocation(line: 225, column: 9, scope: !6475)
!6524 = !DILocation(line: 225, column: 7, scope: !6475)
!6525 = !DILocation(line: 226, column: 11, scope: !6526)
!6526 = distinct !DILexicalBlock(scope: !6475, file: !3, line: 226, column: 2)
!6527 = !DILocation(line: 226, column: 15, scope: !6526)
!6528 = !DILocation(line: 226, column: 9, scope: !6526)
!6529 = !DILocation(line: 226, column: 7, scope: !6526)
!6530 = !DILocation(line: 226, column: 24, scope: !6531)
!6531 = distinct !DILexicalBlock(scope: !6526, file: !3, line: 226, column: 2)
!6532 = !DILocation(line: 226, column: 26, scope: !6531)
!6533 = !DILocation(line: 226, column: 2, scope: !6526)
!6534 = !DILocation(line: 227, column: 8, scope: !6535)
!6535 = distinct !DILexicalBlock(scope: !6536, file: !3, line: 227, column: 7)
!6536 = distinct !DILexicalBlock(scope: !6531, file: !3, line: 226, column: 57)
!6537 = !DILocation(line: 227, column: 21, scope: !6535)
!6538 = !DILocation(line: 227, column: 31, scope: !6535)
!6539 = !DILocation(line: 227, column: 35, scope: !6535)
!6540 = !DILocation(line: 227, column: 42, scope: !6535)
!6541 = !DILocation(line: 227, column: 47, scope: !6535)
!6542 = !DILocation(line: 227, column: 7, scope: !6536)
!6543 = !DILocation(line: 228, column: 11, scope: !6544)
!6544 = distinct !DILexicalBlock(scope: !6535, file: !3, line: 227, column: 63)
!6545 = !DILocation(line: 228, column: 26, scope: !6544)
!6546 = !DILocation(line: 228, column: 33, scope: !6544)
!6547 = !DILocation(line: 228, column: 24, scope: !6544)
!6548 = !DILocation(line: 228, column: 20, scope: !6544)
!6549 = !DILocation(line: 228, column: 9, scope: !6544)
!6550 = !DILocation(line: 229, column: 4, scope: !6544)
!6551 = !DILocation(line: 229, column: 11, scope: !6544)
!6552 = !DILocation(line: 229, column: 26, scope: !6544)
!6553 = !DILocation(line: 229, column: 15, scope: !6544)
!6554 = !DILocation(line: 229, column: 23, scope: !6544)
!6555 = !DILocation(line: 229, column: 46, scope: !6544)
!6556 = !DILocation(line: 229, column: 35, scope: !6544)
!6557 = !DILocation(line: 229, column: 43, scope: !6544)
!6558 = !DILocation(line: 229, column: 66, scope: !6544)
!6559 = !DILocation(line: 229, column: 55, scope: !6544)
!6560 = !DILocation(line: 229, column: 63, scope: !6544)
!6561 = !DILocation(line: 230, column: 11, scope: !6544)
!6562 = !DILocation(line: 230, column: 26, scope: !6544)
!6563 = !DILocation(line: 230, column: 33, scope: !6544)
!6564 = !DILocation(line: 230, column: 24, scope: !6544)
!6565 = !DILocation(line: 230, column: 20, scope: !6544)
!6566 = !DILocation(line: 230, column: 9, scope: !6544)
!6567 = !DILocation(line: 231, column: 4, scope: !6544)
!6568 = !DILocation(line: 231, column: 11, scope: !6544)
!6569 = !DILocation(line: 231, column: 26, scope: !6544)
!6570 = !DILocation(line: 231, column: 15, scope: !6544)
!6571 = !DILocation(line: 231, column: 23, scope: !6544)
!6572 = !DILocation(line: 231, column: 46, scope: !6544)
!6573 = !DILocation(line: 231, column: 35, scope: !6544)
!6574 = !DILocation(line: 231, column: 43, scope: !6544)
!6575 = !DILocation(line: 231, column: 66, scope: !6544)
!6576 = !DILocation(line: 231, column: 55, scope: !6544)
!6577 = !DILocation(line: 231, column: 63, scope: !6544)
!6578 = !DILocation(line: 232, column: 11, scope: !6544)
!6579 = !DILocation(line: 232, column: 26, scope: !6544)
!6580 = !DILocation(line: 232, column: 33, scope: !6544)
!6581 = !DILocation(line: 232, column: 24, scope: !6544)
!6582 = !DILocation(line: 232, column: 20, scope: !6544)
!6583 = !DILocation(line: 232, column: 9, scope: !6544)
!6584 = !DILocation(line: 233, column: 4, scope: !6544)
!6585 = !DILocation(line: 233, column: 11, scope: !6544)
!6586 = !DILocation(line: 233, column: 26, scope: !6544)
!6587 = !DILocation(line: 233, column: 15, scope: !6544)
!6588 = !DILocation(line: 233, column: 23, scope: !6544)
!6589 = !DILocation(line: 233, column: 46, scope: !6544)
!6590 = !DILocation(line: 233, column: 35, scope: !6544)
!6591 = !DILocation(line: 233, column: 43, scope: !6544)
!6592 = !DILocation(line: 233, column: 67, scope: !6544)
!6593 = !DILocation(line: 233, column: 56, scope: !6544)
!6594 = !DILocation(line: 233, column: 64, scope: !6544)
!6595 = !DILocation(line: 234, column: 8, scope: !6596)
!6596 = distinct !DILexicalBlock(scope: !6544, file: !3, line: 234, column: 8)
!6597 = !DILocation(line: 234, column: 15, scope: !6596)
!6598 = !DILocation(line: 234, column: 8, scope: !6544)
!6599 = !DILocation(line: 235, column: 12, scope: !6600)
!6600 = distinct !DILexicalBlock(scope: !6596, file: !3, line: 234, column: 19)
!6601 = !DILocation(line: 235, column: 27, scope: !6600)
!6602 = !DILocation(line: 235, column: 34, scope: !6600)
!6603 = !DILocation(line: 235, column: 25, scope: !6600)
!6604 = !DILocation(line: 235, column: 21, scope: !6600)
!6605 = !DILocation(line: 235, column: 10, scope: !6600)
!6606 = !DILocation(line: 236, column: 5, scope: !6600)
!6607 = !DILocation(line: 236, column: 12, scope: !6600)
!6608 = !DILocation(line: 236, column: 27, scope: !6600)
!6609 = !DILocation(line: 236, column: 16, scope: !6600)
!6610 = !DILocation(line: 236, column: 24, scope: !6600)
!6611 = !DILocation(line: 236, column: 48, scope: !6600)
!6612 = !DILocation(line: 236, column: 37, scope: !6600)
!6613 = !DILocation(line: 236, column: 45, scope: !6600)
!6614 = !DILocation(line: 236, column: 69, scope: !6600)
!6615 = !DILocation(line: 236, column: 58, scope: !6600)
!6616 = !DILocation(line: 236, column: 66, scope: !6600)
!6617 = !DILocation(line: 237, column: 4, scope: !6600)
!6618 = !DILocation(line: 238, column: 3, scope: !6544)
!6619 = !DILocation(line: 239, column: 2, scope: !6536)
!6620 = !DILocation(line: 226, column: 32, scope: !6531)
!6621 = !DILocation(line: 226, column: 41, scope: !6531)
!6622 = !DILocation(line: 226, column: 50, scope: !6531)
!6623 = !DILocation(line: 226, column: 2, scope: !6531)
!6624 = distinct !{!6624, !6533, !6625}
!6625 = !DILocation(line: 239, column: 2, scope: !6526)
!6626 = !DILocation(line: 241, column: 6, scope: !6475)
!6627 = !DILocation(line: 241, column: 10, scope: !6475)
!6628 = !DILocation(line: 241, column: 4, scope: !6475)
!6629 = !DILocation(line: 242, column: 9, scope: !6475)
!6630 = !DILocation(line: 242, column: 7, scope: !6475)
!6631 = !DILocation(line: 243, column: 2, scope: !6475)
!6632 = !DILocation(line: 243, column: 10, scope: !6475)
!6633 = !DILocation(line: 244, column: 7, scope: !6634)
!6634 = distinct !DILexicalBlock(scope: !6635, file: !3, line: 244, column: 7)
!6635 = distinct !DILexicalBlock(scope: !6475, file: !3, line: 243, column: 14)
!6636 = !DILocation(line: 244, column: 15, scope: !6634)
!6637 = !DILocation(line: 244, column: 7, scope: !6635)
!6638 = !DILocation(line: 245, column: 29, scope: !6639)
!6639 = distinct !DILexicalBlock(scope: !6634, file: !3, line: 244, column: 20)
!6640 = !DILocation(line: 245, column: 38, scope: !6639)
!6641 = !DILocation(line: 245, column: 14, scope: !6639)
!6642 = !DILocation(line: 245, column: 4, scope: !6639)
!6643 = !DILocation(line: 245, column: 12, scope: !6639)
!6644 = !DILocation(line: 246, column: 29, scope: !6639)
!6645 = !DILocation(line: 246, column: 38, scope: !6639)
!6646 = !DILocation(line: 246, column: 14, scope: !6639)
!6647 = !DILocation(line: 246, column: 4, scope: !6639)
!6648 = !DILocation(line: 246, column: 12, scope: !6639)
!6649 = !DILocation(line: 247, column: 29, scope: !6639)
!6650 = !DILocation(line: 247, column: 38, scope: !6639)
!6651 = !DILocation(line: 247, column: 14, scope: !6639)
!6652 = !DILocation(line: 247, column: 4, scope: !6639)
!6653 = !DILocation(line: 247, column: 12, scope: !6639)
!6654 = !DILocation(line: 248, column: 3, scope: !6639)
!6655 = !DILocation(line: 249, column: 8, scope: !6635)
!6656 = distinct !{!6656, !6631, !6657}
!6657 = !DILocation(line: 250, column: 2, scope: !6475)
!6658 = !DILocation(line: 252, column: 10, scope: !6475)
!6659 = !DILocation(line: 252, column: 14, scope: !6475)
!6660 = !DILocation(line: 252, column: 8, scope: !6475)
!6661 = !DILocation(line: 253, column: 17, scope: !6475)
!6662 = !DILocation(line: 253, column: 21, scope: !6475)
!6663 = !DILocation(line: 253, column: 9, scope: !6475)
!6664 = !DILocation(line: 253, column: 7, scope: !6475)
!6665 = !DILocation(line: 254, column: 10, scope: !6475)
!6666 = !DILocation(line: 254, column: 8, scope: !6475)
!6667 = !DILocation(line: 255, column: 11, scope: !6668)
!6668 = distinct !DILexicalBlock(scope: !6475, file: !3, line: 255, column: 2)
!6669 = !DILocation(line: 255, column: 15, scope: !6668)
!6670 = !DILocation(line: 255, column: 9, scope: !6668)
!6671 = !DILocation(line: 255, column: 7, scope: !6668)
!6672 = !DILocation(line: 255, column: 24, scope: !6673)
!6673 = distinct !DILexicalBlock(scope: !6668, file: !3, line: 255, column: 2)
!6674 = !DILocation(line: 255, column: 26, scope: !6673)
!6675 = !DILocation(line: 255, column: 2, scope: !6668)
!6676 = !DILocation(line: 256, column: 8, scope: !6677)
!6677 = distinct !DILexicalBlock(scope: !6678, file: !3, line: 256, column: 7)
!6678 = distinct !DILexicalBlock(scope: !6673, file: !3, line: 255, column: 69)
!6679 = !DILocation(line: 256, column: 21, scope: !6677)
!6680 = !DILocation(line: 256, column: 31, scope: !6677)
!6681 = !DILocation(line: 256, column: 35, scope: !6677)
!6682 = !DILocation(line: 256, column: 42, scope: !6677)
!6683 = !DILocation(line: 256, column: 47, scope: !6677)
!6684 = !DILocation(line: 256, column: 7, scope: !6678)
!6685 = !DILocation(line: 257, column: 8, scope: !6686)
!6686 = distinct !DILexicalBlock(scope: !6687, file: !3, line: 257, column: 8)
!6687 = distinct !DILexicalBlock(scope: !6677, file: !3, line: 256, column: 63)
!6688 = !DILocation(line: 257, column: 8, scope: !6687)
!6689 = !DILocation(line: 258, column: 12, scope: !6690)
!6690 = distinct !DILexicalBlock(scope: !6686, file: !3, line: 257, column: 18)
!6691 = !DILocation(line: 258, column: 27, scope: !6690)
!6692 = !DILocation(line: 258, column: 34, scope: !6690)
!6693 = !DILocation(line: 258, column: 25, scope: !6690)
!6694 = !DILocation(line: 258, column: 21, scope: !6690)
!6695 = !DILocation(line: 258, column: 10, scope: !6690)
!6696 = !DILocation(line: 259, column: 15, scope: !6690)
!6697 = !DILocation(line: 259, column: 5, scope: !6690)
!6698 = !DILocation(line: 259, column: 13, scope: !6690)
!6699 = !DILocation(line: 259, column: 34, scope: !6690)
!6700 = !DILocation(line: 259, column: 24, scope: !6690)
!6701 = !DILocation(line: 259, column: 32, scope: !6690)
!6702 = !DILocation(line: 259, column: 53, scope: !6690)
!6703 = !DILocation(line: 259, column: 43, scope: !6690)
!6704 = !DILocation(line: 259, column: 51, scope: !6690)
!6705 = !DILocation(line: 260, column: 4, scope: !6690)
!6706 = !DILocation(line: 262, column: 8, scope: !6707)
!6707 = distinct !DILexicalBlock(scope: !6687, file: !3, line: 262, column: 8)
!6708 = !DILocation(line: 262, column: 8, scope: !6687)
!6709 = !DILocation(line: 263, column: 12, scope: !6710)
!6710 = distinct !DILexicalBlock(scope: !6707, file: !3, line: 262, column: 18)
!6711 = !DILocation(line: 263, column: 27, scope: !6710)
!6712 = !DILocation(line: 263, column: 34, scope: !6710)
!6713 = !DILocation(line: 263, column: 25, scope: !6710)
!6714 = !DILocation(line: 263, column: 21, scope: !6710)
!6715 = !DILocation(line: 263, column: 10, scope: !6710)
!6716 = !DILocation(line: 264, column: 15, scope: !6710)
!6717 = !DILocation(line: 264, column: 5, scope: !6710)
!6718 = !DILocation(line: 264, column: 13, scope: !6710)
!6719 = !DILocation(line: 264, column: 34, scope: !6710)
!6720 = !DILocation(line: 264, column: 24, scope: !6710)
!6721 = !DILocation(line: 264, column: 32, scope: !6710)
!6722 = !DILocation(line: 264, column: 53, scope: !6710)
!6723 = !DILocation(line: 264, column: 43, scope: !6710)
!6724 = !DILocation(line: 264, column: 51, scope: !6710)
!6725 = !DILocation(line: 265, column: 4, scope: !6710)
!6726 = !DILocation(line: 267, column: 8, scope: !6727)
!6727 = distinct !DILexicalBlock(scope: !6687, file: !3, line: 267, column: 8)
!6728 = !DILocation(line: 267, column: 8, scope: !6687)
!6729 = !DILocation(line: 268, column: 12, scope: !6730)
!6730 = distinct !DILexicalBlock(scope: !6727, file: !3, line: 267, column: 18)
!6731 = !DILocation(line: 268, column: 27, scope: !6730)
!6732 = !DILocation(line: 268, column: 34, scope: !6730)
!6733 = !DILocation(line: 268, column: 25, scope: !6730)
!6734 = !DILocation(line: 268, column: 21, scope: !6730)
!6735 = !DILocation(line: 268, column: 10, scope: !6730)
!6736 = !DILocation(line: 269, column: 15, scope: !6730)
!6737 = !DILocation(line: 269, column: 5, scope: !6730)
!6738 = !DILocation(line: 269, column: 13, scope: !6730)
!6739 = !DILocation(line: 269, column: 35, scope: !6730)
!6740 = !DILocation(line: 269, column: 24, scope: !6730)
!6741 = !DILocation(line: 269, column: 33, scope: !6730)
!6742 = !DILocation(line: 269, column: 55, scope: !6730)
!6743 = !DILocation(line: 269, column: 44, scope: !6730)
!6744 = !DILocation(line: 269, column: 53, scope: !6730)
!6745 = !DILocation(line: 270, column: 4, scope: !6730)
!6746 = !DILocation(line: 272, column: 8, scope: !6747)
!6747 = distinct !DILexicalBlock(scope: !6687, file: !3, line: 272, column: 8)
!6748 = !DILocation(line: 272, column: 15, scope: !6747)
!6749 = !DILocation(line: 272, column: 18, scope: !6747)
!6750 = !DILocation(line: 272, column: 21, scope: !6747)
!6751 = !DILocation(line: 272, column: 8, scope: !6687)
!6752 = !DILocation(line: 273, column: 12, scope: !6753)
!6753 = distinct !DILexicalBlock(scope: !6747, file: !3, line: 272, column: 31)
!6754 = !DILocation(line: 273, column: 27, scope: !6753)
!6755 = !DILocation(line: 273, column: 34, scope: !6753)
!6756 = !DILocation(line: 273, column: 25, scope: !6753)
!6757 = !DILocation(line: 273, column: 21, scope: !6753)
!6758 = !DILocation(line: 273, column: 10, scope: !6753)
!6759 = !DILocation(line: 274, column: 16, scope: !6753)
!6760 = !DILocation(line: 274, column: 5, scope: !6753)
!6761 = !DILocation(line: 274, column: 14, scope: !6753)
!6762 = !DILocation(line: 274, column: 36, scope: !6753)
!6763 = !DILocation(line: 274, column: 25, scope: !6753)
!6764 = !DILocation(line: 274, column: 34, scope: !6753)
!6765 = !DILocation(line: 274, column: 56, scope: !6753)
!6766 = !DILocation(line: 274, column: 45, scope: !6753)
!6767 = !DILocation(line: 274, column: 54, scope: !6753)
!6768 = !DILocation(line: 275, column: 4, scope: !6753)
!6769 = !DILocation(line: 276, column: 3, scope: !6687)
!6770 = !DILocation(line: 277, column: 2, scope: !6678)
!6771 = !DILocation(line: 255, column: 32, scope: !6673)
!6772 = !DILocation(line: 255, column: 41, scope: !6673)
!6773 = !DILocation(line: 255, column: 50, scope: !6673)
!6774 = !DILocation(line: 255, column: 63, scope: !6673)
!6775 = !DILocation(line: 255, column: 2, scope: !6673)
!6776 = distinct !{!6776, !6675, !6777}
!6777 = !DILocation(line: 277, column: 2, scope: !6668)
!6778 = !DILocation(line: 279, column: 2, scope: !6475)
!6779 = !DILocation(line: 279, column: 12, scope: !6475)
!6780 = !DILocation(line: 280, column: 1, scope: !6475)
!6781 = distinct !DISubprogram(name: "weight_paint_sample_enum_itemf__helper", scope: !3, file: !3, line: 1154, type: !6782, scopeLine: 1155, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2758, retainedNodes: !3422)
!6782 = !DISubroutineType(types: !6783)
!6783 = !{!259, !6784, !3408, !250}
!6784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6785, size: 64)
!6785 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3407)
!6786 = !DILocalVariable(name: "dvert", arg: 1, scope: !6781, file: !3, line: 1154, type: !6784)
!6787 = !DILocation(line: 1154, column: 71, scope: !6781)
!6788 = !DILocalVariable(name: "defbase_tot", arg: 2, scope: !6781, file: !3, line: 1154, type: !3408)
!6789 = !DILocation(line: 1154, column: 88, scope: !6781)
!6790 = !DILocalVariable(name: "groups", arg: 3, scope: !6781, file: !3, line: 1154, type: !250)
!6791 = !DILocation(line: 1154, column: 106, scope: !6781)
!6792 = !DILocalVariable(name: "found", scope: !6781, file: !3, line: 1157, type: !259)
!6793 = !DILocation(line: 1157, column: 7, scope: !6781)
!6794 = !DILocalVariable(name: "i", scope: !6781, file: !3, line: 1158, type: !22)
!6795 = !DILocation(line: 1158, column: 6, scope: !6781)
!6796 = !DILocation(line: 1158, column: 10, scope: !6781)
!6797 = !DILocation(line: 1158, column: 17, scope: !6781)
!6798 = !DILocalVariable(name: "dw", scope: !6781, file: !3, line: 1159, type: !3404)
!6799 = !DILocation(line: 1159, column: 17, scope: !6781)
!6800 = !DILocation(line: 1160, column: 12, scope: !6801)
!6801 = distinct !DILexicalBlock(scope: !6781, file: !3, line: 1160, column: 2)
!6802 = !DILocation(line: 1160, column: 19, scope: !6801)
!6803 = !DILocation(line: 1160, column: 10, scope: !6801)
!6804 = !DILocation(line: 1160, column: 7, scope: !6801)
!6805 = !DILocation(line: 1160, column: 23, scope: !6806)
!6806 = distinct !DILexicalBlock(scope: !6801, file: !3, line: 1160, column: 2)
!6807 = !DILocation(line: 1160, column: 25, scope: !6806)
!6808 = !DILocation(line: 1160, column: 2, scope: !6801)
!6809 = !DILocation(line: 1161, column: 7, scope: !6810)
!6810 = distinct !DILexicalBlock(scope: !6811, file: !3, line: 1161, column: 7)
!6811 = distinct !DILexicalBlock(scope: !6806, file: !3, line: 1160, column: 41)
!6812 = !DILocation(line: 1161, column: 11, scope: !6810)
!6813 = !DILocation(line: 1161, column: 20, scope: !6810)
!6814 = !DILocation(line: 1161, column: 18, scope: !6810)
!6815 = !DILocation(line: 1161, column: 7, scope: !6811)
!6816 = !DILocation(line: 1162, column: 4, scope: !6817)
!6817 = distinct !DILexicalBlock(scope: !6810, file: !3, line: 1161, column: 33)
!6818 = !DILocation(line: 1162, column: 11, scope: !6817)
!6819 = !DILocation(line: 1162, column: 15, scope: !6817)
!6820 = !DILocation(line: 1162, column: 23, scope: !6817)
!6821 = !DILocation(line: 1163, column: 10, scope: !6817)
!6822 = !DILocation(line: 1164, column: 3, scope: !6817)
!6823 = !DILocation(line: 1165, column: 2, scope: !6811)
!6824 = !DILocation(line: 1160, column: 32, scope: !6806)
!6825 = !DILocation(line: 1160, column: 37, scope: !6806)
!6826 = !DILocation(line: 1160, column: 2, scope: !6806)
!6827 = distinct !{!6827, !6808, !6828}
!6828 = !DILocation(line: 1165, column: 2, scope: !6801)
!6829 = !DILocation(line: 1166, column: 9, scope: !6781)
!6830 = !DILocation(line: 1166, column: 2, scope: !6781)
!6831 = distinct !DISubprogram(name: "new_vpaint", scope: !3, file: !3, line: 185, type: !6832, scopeLine: 186, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2758, retainedNodes: !3422)
!6832 = !DISubroutineType(types: !6833)
!6833 = !{!1538, !22}
!6834 = !DILocalVariable(name: "wpaint", arg: 1, scope: !6831, file: !3, line: 185, type: !22)
!6835 = !DILocation(line: 185, column: 31, scope: !6831)
!6836 = !DILocalVariable(name: "vp", scope: !6831, file: !3, line: 187, type: !1538)
!6837 = !DILocation(line: 187, column: 10, scope: !6831)
!6838 = !DILocation(line: 187, column: 15, scope: !6831)
!6839 = !DILocation(line: 189, column: 14, scope: !6831)
!6840 = !DILocation(line: 189, column: 13, scope: !6831)
!6841 = !DILocation(line: 189, column: 2, scope: !6831)
!6842 = !DILocation(line: 189, column: 6, scope: !6831)
!6843 = !DILocation(line: 189, column: 11, scope: !6831)
!6844 = !DILocation(line: 190, column: 2, scope: !6831)
!6845 = !DILocation(line: 190, column: 6, scope: !6831)
!6846 = !DILocation(line: 190, column: 12, scope: !6831)
!6847 = !DILocation(line: 190, column: 18, scope: !6831)
!6848 = !DILocation(line: 192, column: 9, scope: !6831)
!6849 = !DILocation(line: 192, column: 2, scope: !6831)
!6850 = distinct !DISubprogram(name: "wpaint_stroke_test_start", scope: !3, file: !3, line: 2201, type: !6851, scopeLine: 2202, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2758, retainedNodes: !3422)
!6851 = !DISubroutineType(types: !6852)
!6852 = !{!259, !3439, !4667, !804}
!6853 = !DILocalVariable(name: "C", arg: 1, scope: !6850, file: !3, line: 2201, type: !3439)
!6854 = !DILocation(line: 2201, column: 48, scope: !6850)
!6855 = !DILocalVariable(name: "op", arg: 2, scope: !6850, file: !3, line: 2201, type: !4667)
!6856 = !DILocation(line: 2201, column: 63, scope: !6850)
!6857 = !DILocalVariable(name: "UNUSED_mouse", arg: 3, scope: !6850, file: !3, line: 2201, type: !804)
!6858 = !DILocation(line: 2201, column: 79, scope: !6850)
!6859 = !DILocalVariable(name: "scene", scope: !6850, file: !3, line: 2203, type: !3688)
!6860 = !DILocation(line: 2203, column: 9, scope: !6850)
!6861 = !DILocation(line: 2203, column: 32, scope: !6850)
!6862 = !DILocation(line: 2203, column: 17, scope: !6850)
!6863 = !DILocalVariable(name: "stroke", scope: !6850, file: !3, line: 2204, type: !6864)
!6864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6865, size: 64)
!6865 = !DICompositeType(tag: DW_TAG_structure_type, name: "PaintStroke", file: !3182, line: 51, flags: DIFlagFwdDecl)
!6866 = !DILocation(line: 2204, column: 22, scope: !6850)
!6867 = !DILocation(line: 2204, column: 31, scope: !6850)
!6868 = !DILocation(line: 2204, column: 35, scope: !6850)
!6869 = !DILocalVariable(name: "ts", scope: !6850, file: !3, line: 2205, type: !4923)
!6870 = !DILocation(line: 2205, column: 16, scope: !6850)
!6871 = !DILocation(line: 2205, column: 21, scope: !6850)
!6872 = !DILocation(line: 2205, column: 28, scope: !6850)
!6873 = !DILocalVariable(name: "wp", scope: !6850, file: !3, line: 2206, type: !1538)
!6874 = !DILocation(line: 2206, column: 10, scope: !6850)
!6875 = !DILocation(line: 2206, column: 15, scope: !6850)
!6876 = !DILocation(line: 2206, column: 19, scope: !6850)
!6877 = !DILocalVariable(name: "ob", scope: !6850, file: !3, line: 2207, type: !3444)
!6878 = !DILocation(line: 2207, column: 10, scope: !6850)
!6879 = !DILocation(line: 2207, column: 38, scope: !6850)
!6880 = !DILocation(line: 2207, column: 15, scope: !6850)
!6881 = !DILocalVariable(name: "me", scope: !6850, file: !3, line: 2208, type: !3187)
!6882 = !DILocation(line: 2208, column: 8, scope: !6850)
!6883 = !DILocation(line: 2208, column: 34, scope: !6850)
!6884 = !DILocation(line: 2208, column: 13, scope: !6850)
!6885 = !DILocalVariable(name: "wpd", scope: !6850, file: !3, line: 2209, type: !6886)
!6886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6887, size: 64)
!6887 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "WPaintData", file: !3, line: 2128, size: 1280, elements: !6888)
!6888 = !{!6889, !6890, !6891, !6892, !6893, !6894, !6901, !6902, !6903, !6904}
!6889 = !DIDerivedType(tag: DW_TAG_member, name: "vc", scope: !6887, file: !3, line: 2129, baseType: !4679, size: 512)
!6890 = !DIDerivedType(tag: DW_TAG_member, name: "indexar", scope: !6887, file: !3, line: 2130, baseType: !250, size: 64, offset: 512)
!6891 = !DIDerivedType(tag: DW_TAG_member, name: "vgroup_active", scope: !6887, file: !3, line: 2131, baseType: !22, size: 32, offset: 576)
!6892 = !DIDerivedType(tag: DW_TAG_member, name: "vgroup_mirror", scope: !6887, file: !3, line: 2132, baseType: !22, size: 32, offset: 608)
!6893 = !DIDerivedType(tag: DW_TAG_member, name: "vp_handle", scope: !6887, file: !3, line: 2134, baseType: !56, size: 64, offset: 640)
!6894 = !DIDerivedType(tag: DW_TAG_member, name: "vertexcosnos", scope: !6887, file: !3, line: 2135, baseType: !6895, size: 64, offset: 704)
!6895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6896, size: 64)
!6896 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMCoNo", file: !240, line: 115, baseType: !6897)
!6897 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DMCoNo", file: !240, line: 112, size: 192, elements: !6898)
!6898 = !{!6899, !6900}
!6899 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !6897, file: !240, line: 113, baseType: !209, size: 96)
!6900 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !6897, file: !240, line: 114, baseType: !209, size: 96, offset: 96)
!6901 = !DIDerivedType(tag: DW_TAG_member, name: "wpimat", scope: !6887, file: !3, line: 2137, baseType: !272, size: 288, offset: 768)
!6902 = !DIDerivedType(tag: DW_TAG_member, name: "vgroup_validmap", scope: !6887, file: !3, line: 2140, baseType: !3412, size: 64, offset: 1088)
!6903 = !DIDerivedType(tag: DW_TAG_member, name: "lock_flags", scope: !6887, file: !3, line: 2141, baseType: !3412, size: 64, offset: 1152)
!6904 = !DIDerivedType(tag: DW_TAG_member, name: "defbase_tot", scope: !6887, file: !3, line: 2142, baseType: !22, size: 32, offset: 1216)
!6905 = !DILocation(line: 2209, column: 21, scope: !6850)
!6906 = !DILocalVariable(name: "mat", scope: !6850, file: !3, line: 2211, type: !428)
!6907 = !DILocation(line: 2211, column: 8, scope: !6850)
!6908 = !DILocalVariable(name: "imat", scope: !6850, file: !3, line: 2211, type: !428)
!6909 = !DILocation(line: 2211, column: 19, scope: !6850)
!6910 = !DILocation(line: 2213, column: 25, scope: !6911)
!6911 = distinct !DILexicalBlock(scope: !6850, file: !3, line: 2213, column: 6)
!6912 = !DILocation(line: 2213, column: 28, scope: !6911)
!6913 = !DILocation(line: 2213, column: 6, scope: !6911)
!6914 = !DILocation(line: 2213, column: 32, scope: !6911)
!6915 = !DILocation(line: 2213, column: 6, scope: !6850)
!6916 = !DILocation(line: 2214, column: 3, scope: !6917)
!6917 = distinct !DILexicalBlock(scope: !6911, file: !3, line: 2213, column: 42)
!6918 = !DILocalVariable(name: "dg", scope: !6919, file: !3, line: 2220, type: !4160)
!6919 = distinct !DILexicalBlock(scope: !6850, file: !3, line: 2217, column: 2)
!6920 = !DILocation(line: 2220, column: 17, scope: !6919)
!6921 = !DILocation(line: 2220, column: 36, scope: !6919)
!6922 = !DILocation(line: 2220, column: 40, scope: !6919)
!6923 = !DILocation(line: 2220, column: 50, scope: !6919)
!6924 = !DILocation(line: 2220, column: 54, scope: !6919)
!6925 = !DILocation(line: 2220, column: 61, scope: !6919)
!6926 = !DILocation(line: 2220, column: 22, scope: !6919)
!6927 = !DILocation(line: 2221, column: 7, scope: !6928)
!6928 = distinct !DILexicalBlock(scope: !6919, file: !3, line: 2221, column: 7)
!6929 = !DILocation(line: 2221, column: 11, scope: !6928)
!6930 = !DILocation(line: 2221, column: 16, scope: !6928)
!6931 = !DILocation(line: 2221, column: 7, scope: !6919)
!6932 = !DILocation(line: 2222, column: 15, scope: !6933)
!6933 = distinct !DILexicalBlock(scope: !6928, file: !3, line: 2221, column: 34)
!6934 = !DILocation(line: 2222, column: 19, scope: !6933)
!6935 = !DILocation(line: 2222, column: 4, scope: !6933)
!6936 = !DILocation(line: 2223, column: 4, scope: !6933)
!6937 = !DILocation(line: 2229, column: 8, scope: !6850)
!6938 = !DILocation(line: 2229, column: 6, scope: !6850)
!6939 = !DILocation(line: 2230, column: 29, scope: !6850)
!6940 = !DILocation(line: 2230, column: 37, scope: !6850)
!6941 = !DILocation(line: 2230, column: 2, scope: !6850)
!6942 = !DILocation(line: 2231, column: 25, scope: !6850)
!6943 = !DILocation(line: 2231, column: 29, scope: !6850)
!6944 = !DILocation(line: 2231, column: 34, scope: !6850)
!6945 = !DILocation(line: 2231, column: 2, scope: !6850)
!6946 = !DILocation(line: 2233, column: 23, scope: !6850)
!6947 = !DILocation(line: 2233, column: 27, scope: !6850)
!6948 = !DILocation(line: 2233, column: 34, scope: !6850)
!6949 = !DILocation(line: 2233, column: 2, scope: !6850)
!6950 = !DILocation(line: 2233, column: 7, scope: !6850)
!6951 = !DILocation(line: 2233, column: 21, scope: !6850)
!6952 = !DILocation(line: 2234, column: 2, scope: !6850)
!6953 = !DILocation(line: 2234, column: 7, scope: !6850)
!6954 = !DILocation(line: 2234, column: 21, scope: !6850)
!6955 = !DILocation(line: 2238, column: 36, scope: !6850)
!6956 = !DILocation(line: 2238, column: 40, scope: !6850)
!6957 = !DILocation(line: 2238, column: 21, scope: !6850)
!6958 = !DILocation(line: 2238, column: 2, scope: !6850)
!6959 = !DILocation(line: 2238, column: 7, scope: !6850)
!6960 = !DILocation(line: 2238, column: 19, scope: !6850)
!6961 = !DILocation(line: 2239, column: 46, scope: !6850)
!6962 = !DILocation(line: 2239, column: 50, scope: !6850)
!6963 = !DILocation(line: 2239, column: 55, scope: !6850)
!6964 = !DILocation(line: 2239, column: 20, scope: !6850)
!6965 = !DILocation(line: 2239, column: 2, scope: !6850)
!6966 = !DILocation(line: 2239, column: 7, scope: !6850)
!6967 = !DILocation(line: 2239, column: 18, scope: !6850)
!6968 = !DILocation(line: 2240, column: 6, scope: !6969)
!6969 = distinct !DILexicalBlock(scope: !6850, file: !3, line: 2240, column: 6)
!6970 = !DILocation(line: 2240, column: 10, scope: !6969)
!6971 = !DILocation(line: 2240, column: 25, scope: !6969)
!6972 = !DILocation(line: 2240, column: 28, scope: !6969)
!6973 = !DILocation(line: 2240, column: 32, scope: !6969)
!6974 = !DILocation(line: 2240, column: 43, scope: !6969)
!6975 = !DILocation(line: 2240, column: 46, scope: !6969)
!6976 = !DILocation(line: 2240, column: 51, scope: !6969)
!6977 = !DILocation(line: 2240, column: 6, scope: !6850)
!6978 = !DILocation(line: 2241, column: 50, scope: !6979)
!6979 = distinct !DILexicalBlock(scope: !6969, file: !3, line: 2240, column: 63)
!6980 = !DILocation(line: 2241, column: 54, scope: !6979)
!6981 = !DILocation(line: 2241, column: 59, scope: !6979)
!6982 = !DILocation(line: 2241, column: 26, scope: !6979)
!6983 = !DILocation(line: 2241, column: 3, scope: !6979)
!6984 = !DILocation(line: 2241, column: 8, scope: !6979)
!6985 = !DILocation(line: 2241, column: 24, scope: !6979)
!6986 = !DILocation(line: 2242, column: 2, scope: !6979)
!6987 = !DILocation(line: 2245, column: 48, scope: !6850)
!6988 = !DILocation(line: 2245, column: 55, scope: !6850)
!6989 = !DILocation(line: 2245, column: 60, scope: !6850)
!6990 = !DILocation(line: 2245, column: 65, scope: !6850)
!6991 = !DILocation(line: 2245, column: 19, scope: !6850)
!6992 = !DILocation(line: 2245, column: 2, scope: !6850)
!6993 = !DILocation(line: 2245, column: 7, scope: !6850)
!6994 = !DILocation(line: 2245, column: 17, scope: !6850)
!6995 = !DILocation(line: 2247, column: 32, scope: !6850)
!6996 = !DILocation(line: 2247, column: 17, scope: !6850)
!6997 = !DILocation(line: 2247, column: 2, scope: !6850)
!6998 = !DILocation(line: 2247, column: 7, scope: !6850)
!6999 = !DILocation(line: 2247, column: 15, scope: !6850)
!7000 = !DILocation(line: 2248, column: 19, scope: !6850)
!7001 = !DILocation(line: 2248, column: 23, scope: !6850)
!7002 = !DILocation(line: 2248, column: 27, scope: !6850)
!7003 = !DILocation(line: 2248, column: 34, scope: !6850)
!7004 = !DILocation(line: 2248, column: 38, scope: !6850)
!7005 = !DILocation(line: 2248, column: 2, scope: !6850)
!7006 = !DILocation(line: 2251, column: 14, scope: !6850)
!7007 = !DILocation(line: 2251, column: 19, scope: !6850)
!7008 = !DILocation(line: 2251, column: 24, scope: !6850)
!7009 = !DILocation(line: 2251, column: 27, scope: !6850)
!7010 = !DILocation(line: 2251, column: 33, scope: !6850)
!7011 = !DILocation(line: 2251, column: 42, scope: !6850)
!7012 = !DILocation(line: 2251, column: 46, scope: !6850)
!7013 = !DILocation(line: 2251, column: 2, scope: !6850)
!7014 = !DILocation(line: 2252, column: 15, scope: !6850)
!7015 = !DILocation(line: 2252, column: 21, scope: !6850)
!7016 = !DILocation(line: 2252, column: 2, scope: !6850)
!7017 = !DILocation(line: 2253, column: 13, scope: !6850)
!7018 = !DILocation(line: 2253, column: 18, scope: !6850)
!7019 = !DILocation(line: 2253, column: 26, scope: !6850)
!7020 = !DILocation(line: 2253, column: 2, scope: !6850)
!7021 = !DILocation(line: 2256, column: 6, scope: !7022)
!7022 = distinct !DILexicalBlock(scope: !6850, file: !3, line: 2256, column: 6)
!7023 = !DILocation(line: 2256, column: 10, scope: !7022)
!7024 = !DILocation(line: 2256, column: 19, scope: !7022)
!7025 = !DILocation(line: 2256, column: 6, scope: !6850)
!7026 = !DILocation(line: 2257, column: 52, scope: !7027)
!7027 = distinct !DILexicalBlock(scope: !7022, file: !3, line: 2256, column: 39)
!7028 = !DILocation(line: 2257, column: 56, scope: !7027)
!7029 = !DILocation(line: 2257, column: 61, scope: !7027)
!7030 = !DILocation(line: 2257, column: 24, scope: !7027)
!7031 = !DILocation(line: 2257, column: 3, scope: !7027)
!7032 = !DILocation(line: 2257, column: 8, scope: !7027)
!7033 = !DILocation(line: 2257, column: 22, scope: !7027)
!7034 = !DILocation(line: 2258, column: 2, scope: !7027)
!7035 = !DILocation(line: 2260, column: 2, scope: !6850)
!7036 = !DILocation(line: 2261, column: 1, scope: !6850)
!7037 = distinct !DISubprogram(name: "wpaint_stroke_update_step", scope: !3, file: !3, line: 2263, type: !7038, scopeLine: 2264, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2758, retainedNodes: !3422)
!7038 = !DISubroutineType(types: !7039)
!7039 = !{null, !3439, !6864, !5035}
!7040 = !DILocalVariable(name: "C", arg: 1, scope: !7037, file: !3, line: 2263, type: !3439)
!7041 = !DILocation(line: 2263, column: 49, scope: !7037)
!7042 = !DILocalVariable(name: "stroke", arg: 2, scope: !7037, file: !3, line: 2263, type: !6864)
!7043 = !DILocation(line: 2263, column: 72, scope: !7037)
!7044 = !DILocalVariable(name: "itemptr", arg: 3, scope: !7037, file: !3, line: 2263, type: !5035)
!7045 = !DILocation(line: 2263, column: 92, scope: !7037)
!7046 = !DILocalVariable(name: "scene", scope: !7037, file: !3, line: 2265, type: !3688)
!7047 = !DILocation(line: 2265, column: 9, scope: !7037)
!7048 = !DILocation(line: 2265, column: 32, scope: !7037)
!7049 = !DILocation(line: 2265, column: 17, scope: !7037)
!7050 = !DILocalVariable(name: "ts", scope: !7037, file: !3, line: 2266, type: !4923)
!7051 = !DILocation(line: 2266, column: 16, scope: !7037)
!7052 = !DILocation(line: 2266, column: 44, scope: !7037)
!7053 = !DILocation(line: 2266, column: 21, scope: !7037)
!7054 = !DILocalVariable(name: "wp", scope: !7037, file: !3, line: 2267, type: !1538)
!7055 = !DILocation(line: 2267, column: 10, scope: !7037)
!7056 = !DILocation(line: 2267, column: 15, scope: !7037)
!7057 = !DILocation(line: 2267, column: 19, scope: !7037)
!7058 = !DILocalVariable(name: "brush", scope: !7037, file: !3, line: 2268, type: !3695)
!7059 = !DILocation(line: 2268, column: 9, scope: !7037)
!7060 = !DILocation(line: 2268, column: 34, scope: !7037)
!7061 = !DILocation(line: 2268, column: 38, scope: !7037)
!7062 = !DILocation(line: 2268, column: 17, scope: !7037)
!7063 = !DILocalVariable(name: "wpd", scope: !7037, file: !3, line: 2269, type: !6886)
!7064 = !DILocation(line: 2269, column: 21, scope: !7037)
!7065 = !DILocation(line: 2269, column: 50, scope: !7037)
!7066 = !DILocation(line: 2269, column: 27, scope: !7037)
!7067 = !DILocalVariable(name: "vc", scope: !7037, file: !3, line: 2270, type: !7068)
!7068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4679, size: 64)
!7069 = !DILocation(line: 2270, column: 15, scope: !7037)
!7070 = !DILocalVariable(name: "ob", scope: !7037, file: !3, line: 2271, type: !3444)
!7071 = !DILocation(line: 2271, column: 10, scope: !7037)
!7072 = !DILocalVariable(name: "me", scope: !7037, file: !3, line: 2272, type: !3187)
!7073 = !DILocation(line: 2272, column: 8, scope: !7037)
!7074 = !DILocalVariable(name: "mat", scope: !7037, file: !3, line: 2273, type: !428)
!7075 = !DILocation(line: 2273, column: 8, scope: !7037)
!7076 = !DILocalVariable(name: "paintweight", scope: !7037, file: !3, line: 2274, type: !210)
!7077 = !DILocation(line: 2274, column: 8, scope: !7037)
!7078 = !DILocalVariable(name: "indexar", scope: !7037, file: !3, line: 2275, type: !250)
!7079 = !DILocation(line: 2275, column: 7, scope: !7037)
!7080 = !DILocalVariable(name: "totw", scope: !7037, file: !3, line: 2276, type: !210)
!7081 = !DILocation(line: 2276, column: 8, scope: !7037)
!7082 = !DILocalVariable(name: "index", scope: !7037, file: !3, line: 2277, type: !231)
!7083 = !DILocation(line: 2277, column: 15, scope: !7037)
!7084 = !DILocalVariable(name: "totindex", scope: !7037, file: !3, line: 2277, type: !231)
!7085 = !DILocation(line: 2277, column: 22, scope: !7037)
!7086 = !DILocalVariable(name: "alpha", scope: !7037, file: !3, line: 2278, type: !210)
!7087 = !DILocation(line: 2278, column: 8, scope: !7037)
!7088 = !DILocalVariable(name: "mval", scope: !7037, file: !3, line: 2279, type: !1052)
!7089 = !DILocation(line: 2279, column: 8, scope: !7037)
!7090 = !DILocalVariable(name: "use_vert_sel", scope: !7037, file: !3, line: 2280, type: !259)
!7091 = !DILocation(line: 2280, column: 7, scope: !7037)
!7092 = !DILocalVariable(name: "use_face_sel", scope: !7037, file: !3, line: 2281, type: !259)
!7093 = !DILocation(line: 2281, column: 7, scope: !7037)
!7094 = !DILocalVariable(name: "use_depth", scope: !7037, file: !3, line: 2282, type: !259)
!7095 = !DILocation(line: 2282, column: 7, scope: !7037)
!7096 = !DILocalVariable(name: "dw_func", scope: !7037, file: !3, line: 2284, type: !3401)
!7097 = !DILocation(line: 2284, column: 19, scope: !7037)
!7098 = !DILocation(line: 2285, column: 11, scope: !7037)
!7099 = !DILocation(line: 2285, column: 18, scope: !7037)
!7100 = !DILocation(line: 2285, column: 35, scope: !7037)
!7101 = !DILocation(line: 2285, column: 10, scope: !7037)
!7102 = !DILocation(line: 2286, column: 12, scope: !7037)
!7103 = !DILocation(line: 2286, column: 16, scope: !7037)
!7104 = !DILocation(line: 2286, column: 21, scope: !7037)
!7105 = !DILocation(line: 2286, column: 11, scope: !7037)
!7106 = !DILocalVariable(name: "pressure", scope: !7037, file: !3, line: 2290, type: !637)
!7107 = !DILocation(line: 2290, column: 14, scope: !7037)
!7108 = !DILocation(line: 2290, column: 39, scope: !7037)
!7109 = !DILocation(line: 2290, column: 25, scope: !7037)
!7110 = !DILocalVariable(name: "brush_size_pressure", scope: !7037, file: !3, line: 2291, type: !637)
!7111 = !DILocation(line: 2291, column: 14, scope: !7037)
!7112 = !DILocation(line: 2291, column: 55, scope: !7037)
!7113 = !DILocation(line: 2291, column: 62, scope: !7037)
!7114 = !DILocation(line: 2291, column: 36, scope: !7037)
!7115 = !DILocation(line: 2291, column: 100, scope: !7037)
!7116 = !DILocation(line: 2291, column: 107, scope: !7037)
!7117 = !DILocation(line: 2291, column: 72, scope: !7037)
!7118 = !DILocation(line: 2291, column: 116, scope: !7037)
!7119 = !DILocation(line: 2291, column: 69, scope: !7037)
!7120 = !DILocalVariable(name: "brush_alpha_value", scope: !7037, file: !3, line: 2292, type: !637)
!7121 = !DILocation(line: 2292, column: 14, scope: !7037)
!7122 = !DILocation(line: 2292, column: 54, scope: !7037)
!7123 = !DILocation(line: 2292, column: 61, scope: !7037)
!7124 = !DILocation(line: 2292, column: 34, scope: !7037)
!7125 = !DILocalVariable(name: "brush_alpha_pressure", scope: !7037, file: !3, line: 2293, type: !637)
!7126 = !DILocation(line: 2293, column: 14, scope: !7037)
!7127 = !DILocation(line: 2293, column: 37, scope: !7037)
!7128 = !DILocation(line: 2293, column: 87, scope: !7037)
!7129 = !DILocation(line: 2293, column: 94, scope: !7037)
!7130 = !DILocation(line: 2293, column: 58, scope: !7037)
!7131 = !DILocation(line: 2293, column: 103, scope: !7037)
!7132 = !DILocation(line: 2293, column: 55, scope: !7037)
!7133 = !DILocalVariable(name: "wpi", scope: !7037, file: !3, line: 2296, type: !7134)
!7134 = !DIDerivedType(tag: DW_TAG_typedef, name: "WeightPaintInfo", file: !3, line: 1708, baseType: !7135)
!7135 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "WeightPaintInfo", file: !3, line: 1684, size: 448, elements: !7136)
!7136 = !{!7137, !7138, !7139, !7140, !7141, !7142, !7143, !7144, !7145, !7146, !7147, !7148}
!7137 = !DIDerivedType(tag: DW_TAG_member, name: "defbase_tot", scope: !7135, file: !3, line: 1686, baseType: !22, size: 32)
!7138 = !DIDerivedType(tag: DW_TAG_member, name: "defbase_tot_sel", scope: !7135, file: !3, line: 1689, baseType: !22, size: 32, offset: 32)
!7139 = !DIDerivedType(tag: DW_TAG_member, name: "defbase_tot_unsel", scope: !7135, file: !3, line: 1690, baseType: !22, size: 32, offset: 64)
!7140 = !DIDerivedType(tag: DW_TAG_member, name: "vgroup_active", scope: !7135, file: !3, line: 1692, baseType: !22, size: 32, offset: 96)
!7141 = !DIDerivedType(tag: DW_TAG_member, name: "vgroup_mirror", scope: !7135, file: !3, line: 1693, baseType: !22, size: 32, offset: 128)
!7142 = !DIDerivedType(tag: DW_TAG_member, name: "lock_flags", scope: !7135, file: !3, line: 1695, baseType: !3412, size: 64, offset: 192)
!7143 = !DIDerivedType(tag: DW_TAG_member, name: "defbase_sel", scope: !7135, file: !3, line: 1697, baseType: !3412, size: 64, offset: 256)
!7144 = !DIDerivedType(tag: DW_TAG_member, name: "vgroup_validmap", scope: !7135, file: !3, line: 1700, baseType: !3412, size: 64, offset: 320)
!7145 = !DIDerivedType(tag: DW_TAG_member, name: "do_flip", scope: !7135, file: !3, line: 1703, baseType: !259, size: 8, offset: 384)
!7146 = !DIDerivedType(tag: DW_TAG_member, name: "do_multipaint", scope: !7135, file: !3, line: 1704, baseType: !259, size: 8, offset: 392)
!7147 = !DIDerivedType(tag: DW_TAG_member, name: "do_auto_normalize", scope: !7135, file: !3, line: 1705, baseType: !259, size: 8, offset: 400)
!7148 = !DIDerivedType(tag: DW_TAG_member, name: "brush_alpha_value", scope: !7135, file: !3, line: 1707, baseType: !210, size: 32, offset: 416)
!7149 = !DILocation(line: 2296, column: 18, scope: !7037)
!7150 = !DILocation(line: 2299, column: 6, scope: !7151)
!7151 = distinct !DILexicalBlock(scope: !7037, file: !3, line: 2299, column: 6)
!7152 = !DILocation(line: 2299, column: 10, scope: !7151)
!7153 = !DILocation(line: 2299, column: 6, scope: !7037)
!7154 = !DILocation(line: 2302, column: 38, scope: !7155)
!7155 = distinct !DILexicalBlock(scope: !7151, file: !3, line: 2299, column: 19)
!7156 = !DILocation(line: 2302, column: 24, scope: !7155)
!7157 = !DILocation(line: 2302, column: 3, scope: !7155)
!7158 = !DILocation(line: 2303, column: 3, scope: !7155)
!7159 = !DILocation(line: 2306, column: 8, scope: !7037)
!7160 = !DILocation(line: 2306, column: 13, scope: !7037)
!7161 = !DILocation(line: 2306, column: 5, scope: !7037)
!7162 = !DILocation(line: 2307, column: 7, scope: !7037)
!7163 = !DILocation(line: 2307, column: 11, scope: !7037)
!7164 = !DILocation(line: 2307, column: 5, scope: !7037)
!7165 = !DILocation(line: 2308, column: 7, scope: !7037)
!7166 = !DILocation(line: 2308, column: 11, scope: !7037)
!7167 = !DILocation(line: 2308, column: 5, scope: !7037)
!7168 = !DILocation(line: 2309, column: 12, scope: !7037)
!7169 = !DILocation(line: 2309, column: 17, scope: !7037)
!7170 = !DILocation(line: 2309, column: 10, scope: !7037)
!7171 = !DILocation(line: 2311, column: 31, scope: !7037)
!7172 = !DILocation(line: 2311, column: 2, scope: !7037)
!7173 = !DILocation(line: 2312, column: 27, scope: !7037)
!7174 = !DILocation(line: 2312, column: 31, scope: !7037)
!7175 = !DILocation(line: 2312, column: 35, scope: !7037)
!7176 = !DILocation(line: 2312, column: 2, scope: !7037)
!7177 = !DILocation(line: 2315, column: 14, scope: !7037)
!7178 = !DILocation(line: 2315, column: 19, scope: !7037)
!7179 = !DILocation(line: 2315, column: 23, scope: !7037)
!7180 = !DILocation(line: 2315, column: 29, scope: !7037)
!7181 = !DILocation(line: 2315, column: 38, scope: !7037)
!7182 = !DILocation(line: 2315, column: 42, scope: !7037)
!7183 = !DILocation(line: 2315, column: 2, scope: !7037)
!7184 = !DILocation(line: 2317, column: 22, scope: !7037)
!7185 = !DILocation(line: 2317, column: 40, scope: !7037)
!7186 = !DILocation(line: 2317, column: 2, scope: !7037)
!7187 = !DILocation(line: 2320, column: 27, scope: !7037)
!7188 = !DILocation(line: 2320, column: 32, scope: !7037)
!7189 = !DILocation(line: 2320, column: 6, scope: !7037)
!7190 = !DILocation(line: 2320, column: 18, scope: !7037)
!7191 = !DILocation(line: 2321, column: 44, scope: !7037)
!7192 = !DILocation(line: 2321, column: 52, scope: !7037)
!7193 = !DILocation(line: 2321, column: 70, scope: !7037)
!7194 = !DILocation(line: 2321, column: 20, scope: !7037)
!7195 = !DILocation(line: 2321, column: 6, scope: !7037)
!7196 = !DILocation(line: 2321, column: 18, scope: !7037)
!7197 = !DILocation(line: 2322, column: 10, scope: !7198)
!7198 = distinct !DILexicalBlock(scope: !7037, file: !3, line: 2322, column: 6)
!7199 = !DILocation(line: 2322, column: 26, scope: !7198)
!7200 = !DILocation(line: 2322, column: 31, scope: !7198)
!7201 = !DILocation(line: 2322, column: 34, scope: !7198)
!7202 = !DILocation(line: 2322, column: 38, scope: !7198)
!7203 = !DILocation(line: 2322, column: 45, scope: !7198)
!7204 = !DILocation(line: 2322, column: 6, scope: !7037)
!7205 = !DILocation(line: 2323, column: 7, scope: !7206)
!7206 = distinct !DILexicalBlock(scope: !7198, file: !3, line: 2322, column: 50)
!7207 = !DILocation(line: 2323, column: 23, scope: !7206)
!7208 = !DILocation(line: 2324, column: 2, scope: !7206)
!7209 = !DILocation(line: 2326, column: 31, scope: !7037)
!7210 = !DILocation(line: 2326, column: 49, scope: !7037)
!7211 = !DILocation(line: 2326, column: 43, scope: !7037)
!7212 = !DILocation(line: 2326, column: 6, scope: !7037)
!7213 = !DILocation(line: 2326, column: 24, scope: !7037)
!7214 = !DILocation(line: 2327, column: 27, scope: !7037)
!7215 = !DILocation(line: 2327, column: 32, scope: !7037)
!7216 = !DILocation(line: 2327, column: 6, scope: !7037)
!7217 = !DILocation(line: 2327, column: 20, scope: !7037)
!7218 = !DILocation(line: 2328, column: 27, scope: !7037)
!7219 = !DILocation(line: 2328, column: 32, scope: !7037)
!7220 = !DILocation(line: 2328, column: 6, scope: !7037)
!7221 = !DILocation(line: 2328, column: 20, scope: !7037)
!7222 = !DILocation(line: 2329, column: 27, scope: !7037)
!7223 = !DILocation(line: 2329, column: 32, scope: !7037)
!7224 = !DILocation(line: 2329, column: 6, scope: !7037)
!7225 = !DILocation(line: 2329, column: 17, scope: !7037)
!7226 = !DILocation(line: 2330, column: 27, scope: !7037)
!7227 = !DILocation(line: 2330, column: 32, scope: !7037)
!7228 = !DILocation(line: 2330, column: 6, scope: !7037)
!7229 = !DILocation(line: 2330, column: 22, scope: !7037)
!7230 = !DILocation(line: 2331, column: 43, scope: !7037)
!7231 = !DILocation(line: 2331, column: 27, scope: !7037)
!7232 = !DILocation(line: 2331, column: 6, scope: !7037)
!7233 = !DILocation(line: 2331, column: 14, scope: !7037)
!7234 = !DILocation(line: 2332, column: 28, scope: !7037)
!7235 = !DILocation(line: 2332, column: 32, scope: !7037)
!7236 = !DILocation(line: 2332, column: 43, scope: !7037)
!7237 = !DILocation(line: 2332, column: 27, scope: !7037)
!7238 = !DILocation(line: 2332, column: 6, scope: !7037)
!7239 = !DILocation(line: 2332, column: 20, scope: !7037)
!7240 = !DILocation(line: 2333, column: 29, scope: !7037)
!7241 = !DILocation(line: 2333, column: 33, scope: !7037)
!7242 = !DILocation(line: 2333, column: 48, scope: !7037)
!7243 = !DILocation(line: 2333, column: 54, scope: !7037)
!7244 = !DILocation(line: 2333, column: 62, scope: !7037)
!7245 = !DILocation(line: 2333, column: 78, scope: !7037)
!7246 = !DILocation(line: 0, scope: !7037)
!7247 = !DILocation(line: 2333, column: 27, scope: !7037)
!7248 = !DILocation(line: 2333, column: 6, scope: !7037)
!7249 = !DILocation(line: 2333, column: 24, scope: !7037)
!7250 = !DILocation(line: 2334, column: 27, scope: !7037)
!7251 = !DILocation(line: 2334, column: 6, scope: !7037)
!7252 = !DILocation(line: 2334, column: 24, scope: !7037)
!7253 = !DILocation(line: 2339, column: 12, scope: !7037)
!7254 = !DILocation(line: 2339, column: 17, scope: !7037)
!7255 = !DILocation(line: 2339, column: 20, scope: !7037)
!7256 = !DILocation(line: 2339, column: 26, scope: !7037)
!7257 = !DILocation(line: 2339, column: 35, scope: !7037)
!7258 = !DILocation(line: 2339, column: 2, scope: !7037)
!7259 = !DILocation(line: 2341, column: 18, scope: !7037)
!7260 = !DILocation(line: 2341, column: 22, scope: !7037)
!7261 = !DILocation(line: 2341, column: 31, scope: !7037)
!7262 = !DILocation(line: 2341, column: 57, scope: !7037)
!7263 = !DILocation(line: 2341, column: 17, scope: !7037)
!7264 = !DILocation(line: 2341, column: 15, scope: !7037)
!7265 = !DILocation(line: 2342, column: 18, scope: !7037)
!7266 = !DILocation(line: 2342, column: 22, scope: !7037)
!7267 = !DILocation(line: 2342, column: 31, scope: !7037)
!7268 = !DILocation(line: 2342, column: 57, scope: !7037)
!7269 = !DILocation(line: 2342, column: 17, scope: !7037)
!7270 = !DILocation(line: 2342, column: 15, scope: !7037)
!7271 = !DILocation(line: 2343, column: 15, scope: !7037)
!7272 = !DILocation(line: 2343, column: 19, scope: !7037)
!7273 = !DILocation(line: 2343, column: 24, scope: !7037)
!7274 = !DILocation(line: 2343, column: 29, scope: !7037)
!7275 = !DILocation(line: 2343, column: 48, scope: !7037)
!7276 = !DILocation(line: 2343, column: 14, scope: !7037)
!7277 = !DILocation(line: 2343, column: 12, scope: !7037)
!7278 = !DILocation(line: 2346, column: 6, scope: !7279)
!7279 = distinct !DILexicalBlock(scope: !7037, file: !3, line: 2346, column: 6)
!7280 = !DILocation(line: 2346, column: 6, scope: !7037)
!7281 = !DILocalVariable(name: "editflag_prev", scope: !7282, file: !3, line: 2347, type: !14)
!7282 = distinct !DILexicalBlock(scope: !7279, file: !3, line: 2346, column: 17)
!7283 = !DILocation(line: 2347, column: 8, scope: !7282)
!7284 = !DILocation(line: 2347, column: 24, scope: !7282)
!7285 = !DILocation(line: 2347, column: 28, scope: !7282)
!7286 = !DILocation(line: 2350, column: 3, scope: !7282)
!7287 = !DILocation(line: 2350, column: 7, scope: !7282)
!7288 = !DILocation(line: 2350, column: 16, scope: !7282)
!7289 = !DILocation(line: 2351, column: 7, scope: !7290)
!7290 = distinct !DILexicalBlock(scope: !7282, file: !3, line: 2351, column: 7)
!7291 = !DILocation(line: 2351, column: 7, scope: !7282)
!7292 = !DILocation(line: 2353, column: 4, scope: !7293)
!7293 = distinct !DILexicalBlock(scope: !7290, file: !3, line: 2351, column: 21)
!7294 = !DILocation(line: 2353, column: 8, scope: !7293)
!7295 = !DILocation(line: 2353, column: 17, scope: !7293)
!7296 = !DILocation(line: 2354, column: 3, scope: !7293)
!7297 = !DILocation(line: 2355, column: 34, scope: !7282)
!7298 = !DILocation(line: 2355, column: 38, scope: !7282)
!7299 = !DILocation(line: 2355, column: 47, scope: !7282)
!7300 = !DILocation(line: 2355, column: 51, scope: !7282)
!7301 = !DILocation(line: 2355, column: 60, scope: !7282)
!7302 = !DILocation(line: 2355, column: 69, scope: !7282)
!7303 = !DILocation(line: 2355, column: 78, scope: !7282)
!7304 = !DILocation(line: 2355, column: 14, scope: !7282)
!7305 = !DILocation(line: 2355, column: 12, scope: !7282)
!7306 = !DILocation(line: 2356, column: 18, scope: !7282)
!7307 = !DILocation(line: 2356, column: 3, scope: !7282)
!7308 = !DILocation(line: 2356, column: 7, scope: !7282)
!7309 = !DILocation(line: 2356, column: 16, scope: !7282)
!7310 = !DILocation(line: 2358, column: 7, scope: !7311)
!7311 = distinct !DILexicalBlock(scope: !7282, file: !3, line: 2358, column: 7)
!7312 = !DILocation(line: 2358, column: 20, scope: !7311)
!7313 = !DILocation(line: 2358, column: 23, scope: !7311)
!7314 = !DILocation(line: 2358, column: 27, scope: !7311)
!7315 = !DILocation(line: 2358, column: 7, scope: !7282)
!7316 = !DILocalVariable(name: "mpoly", scope: !7317, file: !3, line: 2359, type: !3410)
!7317 = distinct !DILexicalBlock(scope: !7311, file: !3, line: 2358, column: 36)
!7318 = !DILocation(line: 2359, column: 11, scope: !7317)
!7319 = !DILocation(line: 2359, column: 19, scope: !7317)
!7320 = !DILocation(line: 2359, column: 23, scope: !7317)
!7321 = !DILocation(line: 2360, column: 15, scope: !7322)
!7322 = distinct !DILexicalBlock(scope: !7317, file: !3, line: 2360, column: 4)
!7323 = !DILocation(line: 2360, column: 9, scope: !7322)
!7324 = !DILocation(line: 2360, column: 20, scope: !7325)
!7325 = distinct !DILexicalBlock(scope: !7322, file: !3, line: 2360, column: 4)
!7326 = !DILocation(line: 2360, column: 28, scope: !7325)
!7327 = !DILocation(line: 2360, column: 26, scope: !7325)
!7328 = !DILocation(line: 2360, column: 4, scope: !7322)
!7329 = !DILocation(line: 2361, column: 9, scope: !7330)
!7330 = distinct !DILexicalBlock(scope: !7331, file: !3, line: 2361, column: 9)
!7331 = distinct !DILexicalBlock(scope: !7325, file: !3, line: 2360, column: 47)
!7332 = !DILocation(line: 2361, column: 17, scope: !7330)
!7333 = !DILocation(line: 2361, column: 24, scope: !7330)
!7334 = !DILocation(line: 2361, column: 27, scope: !7330)
!7335 = !DILocation(line: 2361, column: 35, scope: !7330)
!7336 = !DILocation(line: 2361, column: 45, scope: !7330)
!7337 = !DILocation(line: 2361, column: 49, scope: !7330)
!7338 = !DILocation(line: 2361, column: 42, scope: !7330)
!7339 = !DILocation(line: 2361, column: 9, scope: !7331)
!7340 = !DILocalVariable(name: "mp", scope: !7341, file: !3, line: 2362, type: !3410)
!7341 = distinct !DILexicalBlock(scope: !7330, file: !3, line: 2361, column: 58)
!7342 = !DILocation(line: 2362, column: 13, scope: !7341)
!7343 = !DILocation(line: 2362, column: 19, scope: !7341)
!7344 = !DILocation(line: 2362, column: 25, scope: !7341)
!7345 = !DILocation(line: 2362, column: 33, scope: !7341)
!7346 = !DILocation(line: 2362, column: 40, scope: !7341)
!7347 = !DILocation(line: 2364, column: 11, scope: !7348)
!7348 = distinct !DILexicalBlock(scope: !7341, file: !3, line: 2364, column: 10)
!7349 = !DILocation(line: 2364, column: 15, scope: !7348)
!7350 = !DILocation(line: 2364, column: 20, scope: !7348)
!7351 = !DILocation(line: 2364, column: 35, scope: !7348)
!7352 = !DILocation(line: 2364, column: 10, scope: !7341)
!7353 = !DILocation(line: 2365, column: 7, scope: !7354)
!7354 = distinct !DILexicalBlock(scope: !7348, file: !3, line: 2364, column: 41)
!7355 = !DILocation(line: 2365, column: 15, scope: !7354)
!7356 = !DILocation(line: 2365, column: 22, scope: !7354)
!7357 = !DILocation(line: 2366, column: 6, scope: !7354)
!7358 = !DILocation(line: 2367, column: 5, scope: !7341)
!7359 = !DILocation(line: 2368, column: 4, scope: !7331)
!7360 = !DILocation(line: 2360, column: 43, scope: !7325)
!7361 = !DILocation(line: 2360, column: 4, scope: !7325)
!7362 = distinct !{!7362, !7328, !7363}
!7363 = !DILocation(line: 2368, column: 4, scope: !7322)
!7364 = !DILocation(line: 2369, column: 3, scope: !7317)
!7365 = !DILocation(line: 2370, column: 2, scope: !7282)
!7366 = !DILocation(line: 2372, column: 11, scope: !7367)
!7367 = distinct !DILexicalBlock(scope: !7279, file: !3, line: 2371, column: 7)
!7368 = !DILocation(line: 2376, column: 31, scope: !7037)
!7369 = !DILocation(line: 2376, column: 36, scope: !7037)
!7370 = !DILocation(line: 2376, column: 47, scope: !7037)
!7371 = !DILocation(line: 2376, column: 51, scope: !7037)
!7372 = !DILocation(line: 2376, column: 55, scope: !7037)
!7373 = !DILocation(line: 2376, column: 2, scope: !7037)
!7374 = !DILocation(line: 2380, column: 7, scope: !7037)
!7375 = !DILocation(line: 2381, column: 6, scope: !7376)
!7376 = distinct !DILexicalBlock(scope: !7037, file: !3, line: 2381, column: 6)
!7377 = !DILocation(line: 2381, column: 13, scope: !7376)
!7378 = !DILocation(line: 2381, column: 30, scope: !7376)
!7379 = !DILocation(line: 2381, column: 6, scope: !7037)
!7380 = !DILocation(line: 2382, column: 15, scope: !7376)
!7381 = !DILocation(line: 2382, column: 3, scope: !7376)
!7382 = !DILocation(line: 2384, column: 38, scope: !7376)
!7383 = !DILocation(line: 2384, column: 45, scope: !7376)
!7384 = !DILocation(line: 2384, column: 17, scope: !7376)
!7385 = !DILocation(line: 2384, column: 15, scope: !7376)
!7386 = !DILocation(line: 2398, column: 6, scope: !7387)
!7387 = distinct !DILexicalBlock(scope: !7037, file: !3, line: 2398, column: 6)
!7388 = !DILocation(line: 2398, column: 6, scope: !7037)
!7389 = !DILocation(line: 2399, column: 14, scope: !7390)
!7390 = distinct !DILexicalBlock(scope: !7391, file: !3, line: 2399, column: 3)
!7391 = distinct !DILexicalBlock(scope: !7387, file: !3, line: 2398, column: 17)
!7392 = !DILocation(line: 2399, column: 8, scope: !7390)
!7393 = !DILocation(line: 2399, column: 19, scope: !7394)
!7394 = distinct !DILexicalBlock(scope: !7390, file: !3, line: 2399, column: 3)
!7395 = !DILocation(line: 2399, column: 27, scope: !7394)
!7396 = !DILocation(line: 2399, column: 25, scope: !7394)
!7397 = !DILocation(line: 2399, column: 3, scope: !7390)
!7398 = !DILocation(line: 2400, column: 8, scope: !7399)
!7399 = distinct !DILexicalBlock(scope: !7400, file: !3, line: 2400, column: 8)
!7400 = distinct !DILexicalBlock(scope: !7394, file: !3, line: 2399, column: 46)
!7401 = !DILocation(line: 2400, column: 16, scope: !7399)
!7402 = !DILocation(line: 2400, column: 23, scope: !7399)
!7403 = !DILocation(line: 2400, column: 26, scope: !7399)
!7404 = !DILocation(line: 2400, column: 34, scope: !7399)
!7405 = !DILocation(line: 2400, column: 44, scope: !7399)
!7406 = !DILocation(line: 2400, column: 48, scope: !7399)
!7407 = !DILocation(line: 2400, column: 41, scope: !7399)
!7408 = !DILocation(line: 2400, column: 8, scope: !7400)
!7409 = !DILocalVariable(name: "mpoly", scope: !7410, file: !3, line: 2401, type: !3410)
!7410 = distinct !DILexicalBlock(scope: !7399, file: !3, line: 2400, column: 57)
!7411 = !DILocation(line: 2401, column: 12, scope: !7410)
!7412 = !DILocation(line: 2401, column: 20, scope: !7410)
!7413 = !DILocation(line: 2401, column: 24, scope: !7410)
!7414 = !DILocation(line: 2401, column: 33, scope: !7410)
!7415 = !DILocation(line: 2401, column: 41, scope: !7410)
!7416 = !DILocation(line: 2401, column: 48, scope: !7410)
!7417 = !DILocation(line: 2401, column: 30, scope: !7410)
!7418 = !DILocalVariable(name: "ml", scope: !7410, file: !3, line: 2402, type: !4303)
!7419 = !DILocation(line: 2402, column: 12, scope: !7410)
!7420 = !DILocation(line: 2402, column: 17, scope: !7410)
!7421 = !DILocation(line: 2402, column: 21, scope: !7410)
!7422 = !DILocation(line: 2402, column: 29, scope: !7410)
!7423 = !DILocation(line: 2402, column: 36, scope: !7410)
!7424 = !DILocation(line: 2402, column: 27, scope: !7410)
!7425 = !DILocalVariable(name: "i", scope: !7410, file: !3, line: 2403, type: !22)
!7426 = !DILocation(line: 2403, column: 9, scope: !7410)
!7427 = !DILocation(line: 2405, column: 9, scope: !7428)
!7428 = distinct !DILexicalBlock(scope: !7410, file: !3, line: 2405, column: 9)
!7429 = !DILocation(line: 2405, column: 9, scope: !7410)
!7430 = !DILocation(line: 2406, column: 13, scope: !7431)
!7431 = distinct !DILexicalBlock(scope: !7432, file: !3, line: 2406, column: 6)
!7432 = distinct !DILexicalBlock(scope: !7428, file: !3, line: 2405, column: 23)
!7433 = !DILocation(line: 2406, column: 11, scope: !7431)
!7434 = !DILocation(line: 2406, column: 18, scope: !7435)
!7435 = distinct !DILexicalBlock(scope: !7431, file: !3, line: 2406, column: 6)
!7436 = !DILocation(line: 2406, column: 22, scope: !7435)
!7437 = !DILocation(line: 2406, column: 29, scope: !7435)
!7438 = !DILocation(line: 2406, column: 20, scope: !7435)
!7439 = !DILocation(line: 2406, column: 6, scope: !7431)
!7440 = !DILocation(line: 2407, column: 32, scope: !7441)
!7441 = distinct !DILexicalBlock(scope: !7435, file: !3, line: 2406, column: 49)
!7442 = !DILocation(line: 2407, column: 36, scope: !7441)
!7443 = !DILocation(line: 2407, column: 42, scope: !7441)
!7444 = !DILocation(line: 2407, column: 46, scope: !7441)
!7445 = !DILocation(line: 2407, column: 49, scope: !7441)
!7446 = !DILocation(line: 2407, column: 54, scope: !7441)
!7447 = !DILocation(line: 2407, column: 7, scope: !7441)
!7448 = !DILocation(line: 2407, column: 11, scope: !7441)
!7449 = !DILocation(line: 2407, column: 17, scope: !7441)
!7450 = !DILocation(line: 2407, column: 21, scope: !7441)
!7451 = !DILocation(line: 2407, column: 24, scope: !7441)
!7452 = !DILocation(line: 2407, column: 29, scope: !7441)
!7453 = !DILocation(line: 2408, column: 6, scope: !7441)
!7454 = !DILocation(line: 2406, column: 39, scope: !7435)
!7455 = !DILocation(line: 2406, column: 45, scope: !7435)
!7456 = !DILocation(line: 2406, column: 6, scope: !7435)
!7457 = distinct !{!7457, !7439, !7458}
!7458 = !DILocation(line: 2408, column: 6, scope: !7431)
!7459 = !DILocation(line: 2409, column: 5, scope: !7432)
!7460 = !DILocation(line: 2411, column: 13, scope: !7461)
!7461 = distinct !DILexicalBlock(scope: !7462, file: !3, line: 2411, column: 6)
!7462 = distinct !DILexicalBlock(scope: !7428, file: !3, line: 2410, column: 10)
!7463 = !DILocation(line: 2411, column: 11, scope: !7461)
!7464 = !DILocation(line: 2411, column: 18, scope: !7465)
!7465 = distinct !DILexicalBlock(scope: !7461, file: !3, line: 2411, column: 6)
!7466 = !DILocation(line: 2411, column: 22, scope: !7465)
!7467 = !DILocation(line: 2411, column: 29, scope: !7465)
!7468 = !DILocation(line: 2411, column: 20, scope: !7465)
!7469 = !DILocation(line: 2411, column: 6, scope: !7461)
!7470 = !DILocation(line: 2412, column: 7, scope: !7471)
!7471 = distinct !DILexicalBlock(scope: !7465, file: !3, line: 2411, column: 49)
!7472 = !DILocation(line: 2412, column: 11, scope: !7471)
!7473 = !DILocation(line: 2412, column: 17, scope: !7471)
!7474 = !DILocation(line: 2412, column: 21, scope: !7471)
!7475 = !DILocation(line: 2412, column: 24, scope: !7471)
!7476 = !DILocation(line: 2412, column: 29, scope: !7471)
!7477 = !DILocation(line: 2413, column: 6, scope: !7471)
!7478 = !DILocation(line: 2411, column: 39, scope: !7465)
!7479 = !DILocation(line: 2411, column: 45, scope: !7465)
!7480 = !DILocation(line: 2411, column: 6, scope: !7465)
!7481 = distinct !{!7481, !7469, !7482}
!7482 = !DILocation(line: 2413, column: 6, scope: !7461)
!7483 = !DILocation(line: 2416, column: 9, scope: !7484)
!7484 = distinct !DILexicalBlock(scope: !7410, file: !3, line: 2416, column: 9)
!7485 = !DILocation(line: 2416, column: 16, scope: !7484)
!7486 = !DILocation(line: 2416, column: 33, scope: !7484)
!7487 = !DILocation(line: 2416, column: 9, scope: !7410)
!7488 = !DILocation(line: 2417, column: 11, scope: !7489)
!7489 = distinct !DILexicalBlock(scope: !7484, file: !3, line: 2416, column: 54)
!7490 = !DILocation(line: 2417, column: 15, scope: !7489)
!7491 = !DILocation(line: 2417, column: 23, scope: !7489)
!7492 = !DILocation(line: 2417, column: 30, scope: !7489)
!7493 = !DILocation(line: 2417, column: 21, scope: !7489)
!7494 = !DILocation(line: 2417, column: 9, scope: !7489)
!7495 = !DILocation(line: 2418, column: 13, scope: !7496)
!7496 = distinct !DILexicalBlock(scope: !7489, file: !3, line: 2418, column: 6)
!7497 = !DILocation(line: 2418, column: 11, scope: !7496)
!7498 = !DILocation(line: 2418, column: 18, scope: !7499)
!7499 = distinct !DILexicalBlock(scope: !7496, file: !3, line: 2418, column: 6)
!7500 = !DILocation(line: 2418, column: 22, scope: !7499)
!7501 = !DILocation(line: 2418, column: 29, scope: !7499)
!7502 = !DILocation(line: 2418, column: 20, scope: !7499)
!7503 = !DILocation(line: 2418, column: 6, scope: !7496)
!7504 = !DILocalVariable(name: "vidx", scope: !7505, file: !3, line: 2419, type: !7507)
!7505 = distinct !DILexicalBlock(scope: !7506, file: !3, line: 2419, column: 7)
!7506 = distinct !DILexicalBlock(scope: !7499, file: !3, line: 2418, column: 49)
!7507 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !231)
!7508 = !DILocation(line: 2419, column: 7, scope: !7505)
!7509 = !DILocalVariable(name: "fac", scope: !7505, file: !3, line: 2419, type: !637)
!7510 = !DILocation(line: 2419, column: 7, scope: !7511)
!7511 = distinct !DILexicalBlock(scope: !7505, file: !3, line: 2419, column: 7)
!7512 = !DILocalVariable(name: "dw", scope: !7513, file: !3, line: 2419, type: !3404)
!7513 = distinct !DILexicalBlock(scope: !7511, file: !3, line: 2419, column: 7)
!7514 = !DILocation(line: 2419, column: 7, scope: !7513)
!7515 = !DILocation(line: 2420, column: 6, scope: !7506)
!7516 = !DILocation(line: 2418, column: 39, scope: !7499)
!7517 = !DILocation(line: 2418, column: 45, scope: !7499)
!7518 = !DILocation(line: 2418, column: 6, scope: !7499)
!7519 = distinct !{!7519, !7503, !7520}
!7520 = !DILocation(line: 2420, column: 6, scope: !7496)
!7521 = !DILocation(line: 2421, column: 5, scope: !7489)
!7522 = !DILocation(line: 2422, column: 4, scope: !7410)
!7523 = !DILocation(line: 2423, column: 3, scope: !7400)
!7524 = !DILocation(line: 2399, column: 42, scope: !7394)
!7525 = !DILocation(line: 2399, column: 3, scope: !7394)
!7526 = distinct !{!7526, !7397, !7527}
!7527 = !DILocation(line: 2423, column: 3, scope: !7390)
!7528 = !DILocation(line: 2424, column: 2, scope: !7391)
!7529 = !DILocalVariable(name: "totvert", scope: !7530, file: !3, line: 2426, type: !7507)
!7530 = distinct !DILexicalBlock(scope: !7387, file: !3, line: 2425, column: 7)
!7531 = !DILocation(line: 2426, column: 22, scope: !7530)
!7532 = !DILocation(line: 2426, column: 32, scope: !7530)
!7533 = !DILocation(line: 2426, column: 36, scope: !7530)
!7534 = !DILocalVariable(name: "i", scope: !7530, file: !3, line: 2427, type: !231)
!7535 = !DILocation(line: 2427, column: 22, scope: !7530)
!7536 = !DILocation(line: 2430, column: 7, scope: !7537)
!7537 = distinct !DILexicalBlock(scope: !7530, file: !3, line: 2430, column: 7)
!7538 = !DILocation(line: 2430, column: 20, scope: !7537)
!7539 = !DILocation(line: 2430, column: 23, scope: !7537)
!7540 = !DILocation(line: 2430, column: 7, scope: !7530)
!7541 = !DILocation(line: 2431, column: 11, scope: !7542)
!7542 = distinct !DILexicalBlock(scope: !7543, file: !3, line: 2431, column: 4)
!7543 = distinct !DILexicalBlock(scope: !7537, file: !3, line: 2430, column: 37)
!7544 = !DILocation(line: 2431, column: 9, scope: !7542)
!7545 = !DILocation(line: 2431, column: 16, scope: !7546)
!7546 = distinct !DILexicalBlock(scope: !7542, file: !3, line: 2431, column: 4)
!7547 = !DILocation(line: 2431, column: 20, scope: !7546)
!7548 = !DILocation(line: 2431, column: 18, scope: !7546)
!7549 = !DILocation(line: 2431, column: 4, scope: !7542)
!7550 = !DILocation(line: 2432, column: 25, scope: !7551)
!7551 = distinct !DILexicalBlock(scope: !7546, file: !3, line: 2431, column: 34)
!7552 = !DILocation(line: 2432, column: 29, scope: !7551)
!7553 = !DILocation(line: 2432, column: 35, scope: !7551)
!7554 = !DILocation(line: 2432, column: 38, scope: !7551)
!7555 = !DILocation(line: 2432, column: 43, scope: !7551)
!7556 = !DILocation(line: 2432, column: 5, scope: !7551)
!7557 = !DILocation(line: 2432, column: 9, scope: !7551)
!7558 = !DILocation(line: 2432, column: 15, scope: !7551)
!7559 = !DILocation(line: 2432, column: 18, scope: !7551)
!7560 = !DILocation(line: 2432, column: 23, scope: !7551)
!7561 = !DILocation(line: 2433, column: 4, scope: !7551)
!7562 = !DILocation(line: 2431, column: 30, scope: !7546)
!7563 = !DILocation(line: 2431, column: 4, scope: !7546)
!7564 = distinct !{!7564, !7549, !7565}
!7565 = !DILocation(line: 2433, column: 4, scope: !7542)
!7566 = !DILocation(line: 2434, column: 3, scope: !7543)
!7567 = !DILocation(line: 2436, column: 11, scope: !7568)
!7568 = distinct !DILexicalBlock(scope: !7569, file: !3, line: 2436, column: 4)
!7569 = distinct !DILexicalBlock(scope: !7537, file: !3, line: 2435, column: 8)
!7570 = !DILocation(line: 2436, column: 9, scope: !7568)
!7571 = !DILocation(line: 2436, column: 16, scope: !7572)
!7572 = distinct !DILexicalBlock(scope: !7568, file: !3, line: 2436, column: 4)
!7573 = !DILocation(line: 2436, column: 20, scope: !7572)
!7574 = !DILocation(line: 2436, column: 18, scope: !7572)
!7575 = !DILocation(line: 2436, column: 4, scope: !7568)
!7576 = !DILocation(line: 2437, column: 5, scope: !7577)
!7577 = distinct !DILexicalBlock(scope: !7572, file: !3, line: 2436, column: 34)
!7578 = !DILocation(line: 2437, column: 9, scope: !7577)
!7579 = !DILocation(line: 2437, column: 15, scope: !7577)
!7580 = !DILocation(line: 2437, column: 18, scope: !7577)
!7581 = !DILocation(line: 2437, column: 23, scope: !7577)
!7582 = !DILocation(line: 2438, column: 4, scope: !7577)
!7583 = !DILocation(line: 2436, column: 30, scope: !7572)
!7584 = !DILocation(line: 2436, column: 4, scope: !7572)
!7585 = distinct !{!7585, !7575, !7586}
!7586 = !DILocation(line: 2438, column: 4, scope: !7568)
!7587 = !DILocation(line: 2441, column: 7, scope: !7588)
!7588 = distinct !DILexicalBlock(scope: !7530, file: !3, line: 2441, column: 7)
!7589 = !DILocation(line: 2441, column: 14, scope: !7588)
!7590 = !DILocation(line: 2441, column: 31, scope: !7588)
!7591 = !DILocation(line: 2441, column: 7, scope: !7530)
!7592 = !DILocation(line: 2442, column: 11, scope: !7593)
!7593 = distinct !DILexicalBlock(scope: !7594, file: !3, line: 2442, column: 4)
!7594 = distinct !DILexicalBlock(scope: !7588, file: !3, line: 2441, column: 52)
!7595 = !DILocation(line: 2442, column: 9, scope: !7593)
!7596 = !DILocation(line: 2442, column: 16, scope: !7597)
!7597 = distinct !DILexicalBlock(scope: !7593, file: !3, line: 2442, column: 4)
!7598 = !DILocation(line: 2442, column: 20, scope: !7597)
!7599 = !DILocation(line: 2442, column: 18, scope: !7597)
!7600 = !DILocation(line: 2442, column: 4, scope: !7593)
!7601 = !DILocalVariable(name: "vidx", scope: !7602, file: !3, line: 2443, type: !7507)
!7602 = distinct !DILexicalBlock(scope: !7603, file: !3, line: 2443, column: 5)
!7603 = distinct !DILexicalBlock(scope: !7597, file: !3, line: 2442, column: 34)
!7604 = !DILocation(line: 2443, column: 5, scope: !7602)
!7605 = !DILocalVariable(name: "fac", scope: !7602, file: !3, line: 2443, type: !637)
!7606 = !DILocation(line: 2443, column: 5, scope: !7607)
!7607 = distinct !DILexicalBlock(scope: !7602, file: !3, line: 2443, column: 5)
!7608 = !DILocalVariable(name: "dw", scope: !7609, file: !3, line: 2443, type: !3404)
!7609 = distinct !DILexicalBlock(scope: !7607, file: !3, line: 2443, column: 5)
!7610 = !DILocation(line: 2443, column: 5, scope: !7609)
!7611 = !DILocation(line: 2444, column: 4, scope: !7603)
!7612 = !DILocation(line: 2442, column: 30, scope: !7597)
!7613 = !DILocation(line: 2442, column: 4, scope: !7597)
!7614 = distinct !{!7614, !7600, !7615}
!7615 = !DILocation(line: 2444, column: 4, scope: !7593)
!7616 = !DILocation(line: 2445, column: 3, scope: !7594)
!7617 = !DILocation(line: 2451, column: 6, scope: !7618)
!7618 = distinct !DILexicalBlock(scope: !7037, file: !3, line: 2451, column: 6)
!7619 = !DILocation(line: 2451, column: 13, scope: !7618)
!7620 = !DILocation(line: 2451, column: 30, scope: !7618)
!7621 = !DILocation(line: 2451, column: 6, scope: !7037)
!7622 = !DILocation(line: 2452, column: 18, scope: !7623)
!7623 = distinct !DILexicalBlock(scope: !7618, file: !3, line: 2451, column: 51)
!7624 = !DILocation(line: 2452, column: 15, scope: !7623)
!7625 = !DILocation(line: 2453, column: 2, scope: !7623)
!7626 = !DILocation(line: 2468, column: 6, scope: !7627)
!7627 = distinct !DILexicalBlock(scope: !7037, file: !3, line: 2468, column: 6)
!7628 = !DILocation(line: 2468, column: 6, scope: !7037)
!7629 = !DILocation(line: 2469, column: 14, scope: !7630)
!7630 = distinct !DILexicalBlock(scope: !7631, file: !3, line: 2469, column: 3)
!7631 = distinct !DILexicalBlock(scope: !7627, file: !3, line: 2468, column: 17)
!7632 = !DILocation(line: 2469, column: 8, scope: !7630)
!7633 = !DILocation(line: 2469, column: 19, scope: !7634)
!7634 = distinct !DILexicalBlock(scope: !7630, file: !3, line: 2469, column: 3)
!7635 = !DILocation(line: 2469, column: 27, scope: !7634)
!7636 = !DILocation(line: 2469, column: 25, scope: !7634)
!7637 = !DILocation(line: 2469, column: 3, scope: !7630)
!7638 = !DILocation(line: 2471, column: 8, scope: !7639)
!7639 = distinct !DILexicalBlock(scope: !7640, file: !3, line: 2471, column: 8)
!7640 = distinct !DILexicalBlock(scope: !7634, file: !3, line: 2469, column: 46)
!7641 = !DILocation(line: 2471, column: 16, scope: !7639)
!7642 = !DILocation(line: 2471, column: 23, scope: !7639)
!7643 = !DILocation(line: 2471, column: 26, scope: !7639)
!7644 = !DILocation(line: 2471, column: 34, scope: !7639)
!7645 = !DILocation(line: 2471, column: 44, scope: !7639)
!7646 = !DILocation(line: 2471, column: 48, scope: !7639)
!7647 = !DILocation(line: 2471, column: 41, scope: !7639)
!7648 = !DILocation(line: 2471, column: 8, scope: !7640)
!7649 = !DILocalVariable(name: "mpoly", scope: !7650, file: !3, line: 2472, type: !3410)
!7650 = distinct !DILexicalBlock(scope: !7639, file: !3, line: 2471, column: 57)
!7651 = !DILocation(line: 2472, column: 12, scope: !7650)
!7652 = !DILocation(line: 2472, column: 20, scope: !7650)
!7653 = !DILocation(line: 2472, column: 24, scope: !7650)
!7654 = !DILocation(line: 2472, column: 33, scope: !7650)
!7655 = !DILocation(line: 2472, column: 41, scope: !7650)
!7656 = !DILocation(line: 2472, column: 48, scope: !7650)
!7657 = !DILocation(line: 2472, column: 30, scope: !7650)
!7658 = !DILocalVariable(name: "ml", scope: !7650, file: !3, line: 2473, type: !4303)
!7659 = !DILocation(line: 2473, column: 12, scope: !7650)
!7660 = !DILocation(line: 2473, column: 17, scope: !7650)
!7661 = !DILocation(line: 2473, column: 21, scope: !7650)
!7662 = !DILocation(line: 2473, column: 29, scope: !7650)
!7663 = !DILocation(line: 2473, column: 36, scope: !7650)
!7664 = !DILocation(line: 2473, column: 27, scope: !7650)
!7665 = !DILocalVariable(name: "i", scope: !7650, file: !3, line: 2474, type: !22)
!7666 = !DILocation(line: 2474, column: 9, scope: !7650)
!7667 = !DILocation(line: 2476, column: 12, scope: !7668)
!7668 = distinct !DILexicalBlock(scope: !7650, file: !3, line: 2476, column: 5)
!7669 = !DILocation(line: 2476, column: 10, scope: !7668)
!7670 = !DILocation(line: 2476, column: 17, scope: !7671)
!7671 = distinct !DILexicalBlock(scope: !7668, file: !3, line: 2476, column: 5)
!7672 = !DILocation(line: 2476, column: 21, scope: !7671)
!7673 = !DILocation(line: 2476, column: 28, scope: !7671)
!7674 = !DILocation(line: 2476, column: 19, scope: !7671)
!7675 = !DILocation(line: 2476, column: 5, scope: !7668)
!7676 = !DILocalVariable(name: "vidx", scope: !7677, file: !3, line: 2477, type: !231)
!7677 = distinct !DILexicalBlock(scope: !7678, file: !3, line: 2477, column: 6)
!7678 = distinct !DILexicalBlock(scope: !7671, file: !3, line: 2476, column: 48)
!7679 = !DILocation(line: 2477, column: 6, scope: !7677)
!7680 = !DILocation(line: 2477, column: 6, scope: !7681)
!7681 = distinct !DILexicalBlock(scope: !7677, file: !3, line: 2477, column: 6)
!7682 = !DILocation(line: 2477, column: 6, scope: !7683)
!7683 = distinct !DILexicalBlock(scope: !7681, file: !3, line: 2477, column: 6)
!7684 = !DILocation(line: 2477, column: 6, scope: !7685)
!7685 = distinct !DILexicalBlock(scope: !7683, file: !3, line: 2477, column: 6)
!7686 = !DILocation(line: 2477, column: 6, scope: !7687)
!7687 = distinct !DILexicalBlock(scope: !7685, file: !3, line: 2477, column: 6)
!7688 = !DILocation(line: 2478, column: 5, scope: !7678)
!7689 = !DILocation(line: 2476, column: 38, scope: !7671)
!7690 = !DILocation(line: 2476, column: 44, scope: !7671)
!7691 = !DILocation(line: 2476, column: 5, scope: !7671)
!7692 = distinct !{!7692, !7675, !7693}
!7693 = !DILocation(line: 2478, column: 5, scope: !7668)
!7694 = !DILocation(line: 2479, column: 4, scope: !7650)
!7695 = !DILocation(line: 2480, column: 3, scope: !7640)
!7696 = !DILocation(line: 2469, column: 42, scope: !7634)
!7697 = !DILocation(line: 2469, column: 3, scope: !7634)
!7698 = distinct !{!7698, !7637, !7699}
!7699 = !DILocation(line: 2480, column: 3, scope: !7630)
!7700 = !DILocation(line: 2481, column: 2, scope: !7631)
!7701 = !DILocalVariable(name: "totvert", scope: !7702, file: !3, line: 2483, type: !7507)
!7702 = distinct !DILexicalBlock(scope: !7627, file: !3, line: 2482, column: 7)
!7703 = !DILocation(line: 2483, column: 22, scope: !7702)
!7704 = !DILocation(line: 2483, column: 32, scope: !7702)
!7705 = !DILocation(line: 2483, column: 36, scope: !7702)
!7706 = !DILocalVariable(name: "i", scope: !7702, file: !3, line: 2484, type: !231)
!7707 = !DILocation(line: 2484, column: 22, scope: !7702)
!7708 = !DILocation(line: 2486, column: 10, scope: !7709)
!7709 = distinct !DILexicalBlock(scope: !7702, file: !3, line: 2486, column: 3)
!7710 = !DILocation(line: 2486, column: 8, scope: !7709)
!7711 = !DILocation(line: 2486, column: 15, scope: !7712)
!7712 = distinct !DILexicalBlock(scope: !7709, file: !3, line: 2486, column: 3)
!7713 = !DILocation(line: 2486, column: 19, scope: !7712)
!7714 = !DILocation(line: 2486, column: 17, scope: !7712)
!7715 = !DILocation(line: 2486, column: 3, scope: !7709)
!7716 = !DILocalVariable(name: "vidx", scope: !7717, file: !3, line: 2487, type: !231)
!7717 = distinct !DILexicalBlock(scope: !7718, file: !3, line: 2487, column: 4)
!7718 = distinct !DILexicalBlock(scope: !7712, file: !3, line: 2486, column: 33)
!7719 = !DILocation(line: 2487, column: 4, scope: !7717)
!7720 = !DILocation(line: 2487, column: 4, scope: !7721)
!7721 = distinct !DILexicalBlock(scope: !7717, file: !3, line: 2487, column: 4)
!7722 = !DILocation(line: 2487, column: 4, scope: !7723)
!7723 = distinct !DILexicalBlock(scope: !7721, file: !3, line: 2487, column: 4)
!7724 = !DILocation(line: 2487, column: 4, scope: !7725)
!7725 = distinct !DILexicalBlock(scope: !7723, file: !3, line: 2487, column: 4)
!7726 = !DILocation(line: 2487, column: 4, scope: !7727)
!7727 = distinct !DILexicalBlock(scope: !7725, file: !3, line: 2487, column: 4)
!7728 = !DILocation(line: 2488, column: 3, scope: !7718)
!7729 = !DILocation(line: 2486, column: 29, scope: !7712)
!7730 = !DILocation(line: 2486, column: 3, scope: !7712)
!7731 = distinct !{!7731, !7715, !7732}
!7732 = !DILocation(line: 2488, column: 3, scope: !7709)
!7733 = !DILocation(line: 2494, column: 2, scope: !7037)
!7734 = !DILocation(line: 2494, column: 24, scope: !7037)
!7735 = !DILocation(line: 2498, column: 12, scope: !7037)
!7736 = !DILocation(line: 2498, column: 16, scope: !7037)
!7737 = !DILocation(line: 2498, column: 22, scope: !7037)
!7738 = !DILocation(line: 2498, column: 31, scope: !7037)
!7739 = !DILocation(line: 2498, column: 2, scope: !7037)
!7740 = !DILocation(line: 2500, column: 20, scope: !7037)
!7741 = !DILocation(line: 2500, column: 24, scope: !7037)
!7742 = !DILocation(line: 2500, column: 2, scope: !7037)
!7743 = !DILocation(line: 2501, column: 23, scope: !7037)
!7744 = !DILocation(line: 2501, column: 27, scope: !7037)
!7745 = !DILocation(line: 2501, column: 2, scope: !7037)
!7746 = !DILocation(line: 2502, column: 1, scope: !7037)
!7747 = distinct !DISubprogram(name: "wpaint_stroke_done", scope: !3, file: !3, line: 2504, type: !7748, scopeLine: 2505, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2758, retainedNodes: !3422)
!7748 = !DISubroutineType(types: !7749)
!7749 = !{null, !7750, !6864}
!7750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7751, size: 64)
!7751 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3440)
!7752 = !DILocalVariable(name: "C", arg: 1, scope: !7747, file: !3, line: 2504, type: !7750)
!7753 = !DILocation(line: 2504, column: 48, scope: !7747)
!7754 = !DILocalVariable(name: "stroke", arg: 2, scope: !7747, file: !3, line: 2504, type: !6864)
!7755 = !DILocation(line: 2504, column: 71, scope: !7747)
!7756 = !DILocalVariable(name: "ts", scope: !7747, file: !3, line: 2506, type: !4923)
!7757 = !DILocation(line: 2506, column: 16, scope: !7747)
!7758 = !DILocation(line: 2506, column: 44, scope: !7747)
!7759 = !DILocation(line: 2506, column: 21, scope: !7747)
!7760 = !DILocalVariable(name: "ob", scope: !7747, file: !3, line: 2507, type: !3444)
!7761 = !DILocation(line: 2507, column: 10, scope: !7747)
!7762 = !DILocation(line: 2507, column: 38, scope: !7747)
!7763 = !DILocation(line: 2507, column: 15, scope: !7747)
!7764 = !DILocalVariable(name: "wpd", scope: !7747, file: !3, line: 2508, type: !6886)
!7765 = !DILocation(line: 2508, column: 21, scope: !7747)
!7766 = !DILocation(line: 2508, column: 50, scope: !7747)
!7767 = !DILocation(line: 2508, column: 27, scope: !7747)
!7768 = !DILocation(line: 2510, column: 6, scope: !7769)
!7769 = distinct !DILexicalBlock(scope: !7747, file: !3, line: 2510, column: 6)
!7770 = !DILocation(line: 2510, column: 6, scope: !7747)
!7771 = !DILocation(line: 2511, column: 30, scope: !7772)
!7772 = distinct !DILexicalBlock(scope: !7769, file: !3, line: 2510, column: 11)
!7773 = !DILocation(line: 2511, column: 35, scope: !7772)
!7774 = !DILocation(line: 2511, column: 3, scope: !7772)
!7775 = !DILocation(line: 2512, column: 3, scope: !7772)
!7776 = !DILocation(line: 2512, column: 13, scope: !7772)
!7777 = !DILocation(line: 2512, column: 18, scope: !7772)
!7778 = !DILocation(line: 2514, column: 7, scope: !7779)
!7779 = distinct !DILexicalBlock(scope: !7772, file: !3, line: 2514, column: 7)
!7780 = !DILocation(line: 2514, column: 12, scope: !7779)
!7781 = !DILocation(line: 2514, column: 7, scope: !7772)
!7782 = !DILocation(line: 2515, column: 4, scope: !7779)
!7783 = !DILocation(line: 2515, column: 22, scope: !7779)
!7784 = !DILocation(line: 2515, column: 27, scope: !7779)
!7785 = !DILocation(line: 2516, column: 7, scope: !7786)
!7786 = distinct !DILexicalBlock(scope: !7772, file: !3, line: 2516, column: 7)
!7787 = !DILocation(line: 2516, column: 12, scope: !7786)
!7788 = !DILocation(line: 2516, column: 7, scope: !7772)
!7789 = !DILocation(line: 2517, column: 4, scope: !7786)
!7790 = !DILocation(line: 2517, column: 22, scope: !7786)
!7791 = !DILocation(line: 2517, column: 27, scope: !7786)
!7792 = !DILocation(line: 2519, column: 3, scope: !7772)
!7793 = !DILocation(line: 2519, column: 13, scope: !7772)
!7794 = !DILocation(line: 2520, column: 2, scope: !7772)
!7795 = !DILocation(line: 2523, column: 19, scope: !7747)
!7796 = !DILocation(line: 2523, column: 23, scope: !7747)
!7797 = !DILocation(line: 2523, column: 2, scope: !7747)
!7798 = !DILocation(line: 2526, column: 6, scope: !7799)
!7799 = distinct !DILexicalBlock(scope: !7747, file: !3, line: 2526, column: 6)
!7800 = !DILocation(line: 2526, column: 10, scope: !7799)
!7801 = !DILocation(line: 2526, column: 25, scope: !7799)
!7802 = !DILocation(line: 2526, column: 6, scope: !7747)
!7803 = !DILocalVariable(name: "psys", scope: !7804, file: !3, line: 2527, type: !7805)
!7804 = distinct !DILexicalBlock(scope: !7799, file: !3, line: 2526, column: 32)
!7805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7806, size: 64)
!7806 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleSystem", file: !498, line: 314, baseType: !7807)
!7807 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleSystem", file: !498, line: 253, size: 5248, elements: !7808)
!7808 = !{!7809, !7811, !7812, !8003, !8060, !8072, !8075, !8079, !8083, !8084, !8085, !8086, !8105, !8106, !8107, !8108, !8111, !8112, !8113, !8114, !8115, !8116, !8117, !8118, !8119, !8120, !8121, !8122, !8123, !8124, !8125, !8126, !8127, !8128, !8129, !8130, !8133, !8137, !8138, !8139, !8140, !8141, !8142, !8144, !8152, !8153, !8154, !8157, !8160, !8163, !8164}
!7809 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7807, file: !498, line: 257, baseType: !7810, size: 64)
!7810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7807, size: 64)
!7811 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7807, file: !498, line: 257, baseType: !7810, size: 64, offset: 64)
!7812 = !DIDerivedType(tag: DW_TAG_member, name: "part", scope: !7807, file: !498, line: 259, baseType: !7813, size: 64, offset: 128)
!7813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7814, size: 64)
!7814 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleSettings", file: !498, line: 251, baseType: !7815)
!7815 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleSettings", file: !498, line: 153, size: 6400, elements: !7816)
!7816 = !{!7817, !7818, !7819, !7847, !7868, !7871, !7872, !7873, !7874, !7875, !7876, !7877, !7878, !7879, !7880, !7881, !7882, !7883, !7884, !7885, !7886, !7887, !7888, !7889, !7890, !7891, !7892, !7893, !7894, !7895, !7896, !7897, !7898, !7899, !7900, !7901, !7902, !7903, !7904, !7905, !7906, !7907, !7908, !7909, !7910, !7911, !7912, !7913, !7914, !7915, !7916, !7917, !7918, !7919, !7920, !7921, !7922, !7923, !7924, !7925, !7926, !7927, !7928, !7930, !7931, !7932, !7933, !7934, !7935, !7936, !7937, !7938, !7939, !7940, !7941, !7942, !7943, !7944, !7945, !7946, !7947, !7948, !7949, !7950, !7951, !7952, !7953, !7954, !7955, !7956, !7957, !7958, !7959, !7960, !7961, !7962, !7963, !7964, !7965, !7966, !7967, !7968, !7969, !7970, !7971, !7972, !7973, !7974, !7975, !7976, !7977, !7978, !7979, !7980, !7981, !7982, !7983, !7984, !7985, !7986, !7987, !7988, !7993, !7994, !7995, !7996, !7997, !7998, !7999, !8000, !8001, !8002}
!7817 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !7815, file: !498, line: 154, baseType: !112, size: 960)
!7818 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !7815, file: !498, line: 155, baseType: !158, size: 64, offset: 960)
!7819 = !DIDerivedType(tag: DW_TAG_member, name: "boids", scope: !7815, file: !498, line: 157, baseType: !7820, size: 64, offset: 1024)
!7820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7821, size: 64)
!7821 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BoidSettings", file: !7822, line: 189, size: 832, elements: !7823)
!7822 = !DIFile(filename: "blender/source/blender/makesdna/DNA_boid_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!7823 = !{!7824, !7825, !7826, !7827, !7828, !7829, !7830, !7831, !7832, !7833, !7834, !7835, !7836, !7837, !7838, !7839, !7840, !7841, !7842, !7843, !7844, !7845, !7846}
!7824 = !DIDerivedType(tag: DW_TAG_member, name: "options", scope: !7821, file: !7822, line: 190, baseType: !22, size: 32)
!7825 = !DIDerivedType(tag: DW_TAG_member, name: "last_state_id", scope: !7821, file: !7822, line: 190, baseType: !22, size: 32, offset: 32)
!7826 = !DIDerivedType(tag: DW_TAG_member, name: "landing_smoothness", scope: !7821, file: !7822, line: 192, baseType: !210, size: 32, offset: 64)
!7827 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !7821, file: !7822, line: 192, baseType: !210, size: 32, offset: 96)
!7828 = !DIDerivedType(tag: DW_TAG_member, name: "banking", scope: !7821, file: !7822, line: 193, baseType: !210, size: 32, offset: 128)
!7829 = !DIDerivedType(tag: DW_TAG_member, name: "pitch", scope: !7821, file: !7822, line: 193, baseType: !210, size: 32, offset: 160)
!7830 = !DIDerivedType(tag: DW_TAG_member, name: "health", scope: !7821, file: !7822, line: 195, baseType: !210, size: 32, offset: 192)
!7831 = !DIDerivedType(tag: DW_TAG_member, name: "aggression", scope: !7821, file: !7822, line: 195, baseType: !210, size: 32, offset: 224)
!7832 = !DIDerivedType(tag: DW_TAG_member, name: "strength", scope: !7821, file: !7822, line: 196, baseType: !210, size: 32, offset: 256)
!7833 = !DIDerivedType(tag: DW_TAG_member, name: "accuracy", scope: !7821, file: !7822, line: 196, baseType: !210, size: 32, offset: 288)
!7834 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !7821, file: !7822, line: 196, baseType: !210, size: 32, offset: 320)
!7835 = !DIDerivedType(tag: DW_TAG_member, name: "air_min_speed", scope: !7821, file: !7822, line: 199, baseType: !210, size: 32, offset: 352)
!7836 = !DIDerivedType(tag: DW_TAG_member, name: "air_max_speed", scope: !7821, file: !7822, line: 199, baseType: !210, size: 32, offset: 384)
!7837 = !DIDerivedType(tag: DW_TAG_member, name: "air_max_acc", scope: !7821, file: !7822, line: 200, baseType: !210, size: 32, offset: 416)
!7838 = !DIDerivedType(tag: DW_TAG_member, name: "air_max_ave", scope: !7821, file: !7822, line: 200, baseType: !210, size: 32, offset: 448)
!7839 = !DIDerivedType(tag: DW_TAG_member, name: "air_personal_space", scope: !7821, file: !7822, line: 201, baseType: !210, size: 32, offset: 480)
!7840 = !DIDerivedType(tag: DW_TAG_member, name: "land_jump_speed", scope: !7821, file: !7822, line: 204, baseType: !210, size: 32, offset: 512)
!7841 = !DIDerivedType(tag: DW_TAG_member, name: "land_max_speed", scope: !7821, file: !7822, line: 204, baseType: !210, size: 32, offset: 544)
!7842 = !DIDerivedType(tag: DW_TAG_member, name: "land_max_acc", scope: !7821, file: !7822, line: 205, baseType: !210, size: 32, offset: 576)
!7843 = !DIDerivedType(tag: DW_TAG_member, name: "land_max_ave", scope: !7821, file: !7822, line: 205, baseType: !210, size: 32, offset: 608)
!7844 = !DIDerivedType(tag: DW_TAG_member, name: "land_personal_space", scope: !7821, file: !7822, line: 206, baseType: !210, size: 32, offset: 640)
!7845 = !DIDerivedType(tag: DW_TAG_member, name: "land_stick_force", scope: !7821, file: !7822, line: 207, baseType: !210, size: 32, offset: 672)
!7846 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !7821, file: !7822, line: 209, baseType: !60, size: 128, offset: 704)
!7847 = !DIDerivedType(tag: DW_TAG_member, name: "fluid", scope: !7815, file: !498, line: 158, baseType: !7848, size: 64, offset: 1088)
!7848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7849, size: 64)
!7849 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SPHFluidSettings", file: !498, line: 127, size: 544, elements: !7850)
!7850 = !{!7851, !7852, !7853, !7854, !7855, !7856, !7857, !7858, !7859, !7860, !7861, !7862, !7863, !7864, !7865, !7866, !7867}
!7851 = !DIDerivedType(tag: DW_TAG_member, name: "radius", scope: !7849, file: !498, line: 129, baseType: !210, size: 32)
!7852 = !DIDerivedType(tag: DW_TAG_member, name: "spring_k", scope: !7849, file: !498, line: 129, baseType: !210, size: 32, offset: 32)
!7853 = !DIDerivedType(tag: DW_TAG_member, name: "rest_length", scope: !7849, file: !498, line: 129, baseType: !210, size: 32, offset: 64)
!7854 = !DIDerivedType(tag: DW_TAG_member, name: "plasticity_constant", scope: !7849, file: !498, line: 130, baseType: !210, size: 32, offset: 96)
!7855 = !DIDerivedType(tag: DW_TAG_member, name: "yield_ratio", scope: !7849, file: !498, line: 130, baseType: !210, size: 32, offset: 128)
!7856 = !DIDerivedType(tag: DW_TAG_member, name: "plasticity_balance", scope: !7849, file: !498, line: 131, baseType: !210, size: 32, offset: 160)
!7857 = !DIDerivedType(tag: DW_TAG_member, name: "yield_balance", scope: !7849, file: !498, line: 131, baseType: !210, size: 32, offset: 192)
!7858 = !DIDerivedType(tag: DW_TAG_member, name: "viscosity_omega", scope: !7849, file: !498, line: 132, baseType: !210, size: 32, offset: 224)
!7859 = !DIDerivedType(tag: DW_TAG_member, name: "viscosity_beta", scope: !7849, file: !498, line: 132, baseType: !210, size: 32, offset: 256)
!7860 = !DIDerivedType(tag: DW_TAG_member, name: "stiffness_k", scope: !7849, file: !498, line: 133, baseType: !210, size: 32, offset: 288)
!7861 = !DIDerivedType(tag: DW_TAG_member, name: "stiffness_knear", scope: !7849, file: !498, line: 133, baseType: !210, size: 32, offset: 320)
!7862 = !DIDerivedType(tag: DW_TAG_member, name: "rest_density", scope: !7849, file: !498, line: 133, baseType: !210, size: 32, offset: 352)
!7863 = !DIDerivedType(tag: DW_TAG_member, name: "buoyancy", scope: !7849, file: !498, line: 134, baseType: !210, size: 32, offset: 384)
!7864 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !7849, file: !498, line: 135, baseType: !22, size: 32, offset: 416)
!7865 = !DIDerivedType(tag: DW_TAG_member, name: "spring_frames", scope: !7849, file: !498, line: 135, baseType: !22, size: 32, offset: 448)
!7866 = !DIDerivedType(tag: DW_TAG_member, name: "solver", scope: !7849, file: !498, line: 136, baseType: !48, size: 16, offset: 480)
!7867 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !7849, file: !498, line: 137, baseType: !214, size: 48, offset: 496)
!7868 = !DIDerivedType(tag: DW_TAG_member, name: "effector_weights", scope: !7815, file: !498, line: 160, baseType: !7869, size: 64, offset: 1152)
!7869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7870, size: 64)
!7870 = !DICompositeType(tag: DW_TAG_structure_type, name: "EffectorWeights", file: !498, line: 160, flags: DIFlagFwdDecl)
!7871 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !7815, file: !498, line: 162, baseType: !22, size: 32, offset: 1216)
!7872 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !7815, file: !498, line: 162, baseType: !22, size: 32, offset: 1248)
!7873 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !7815, file: !498, line: 163, baseType: !48, size: 16, offset: 1280)
!7874 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !7815, file: !498, line: 163, baseType: !48, size: 16, offset: 1296)
!7875 = !DIDerivedType(tag: DW_TAG_member, name: "distr", scope: !7815, file: !498, line: 163, baseType: !48, size: 16, offset: 1312)
!7876 = !DIDerivedType(tag: DW_TAG_member, name: "texact", scope: !7815, file: !498, line: 163, baseType: !48, size: 16, offset: 1328)
!7877 = !DIDerivedType(tag: DW_TAG_member, name: "phystype", scope: !7815, file: !498, line: 165, baseType: !48, size: 16, offset: 1344)
!7878 = !DIDerivedType(tag: DW_TAG_member, name: "rotmode", scope: !7815, file: !498, line: 165, baseType: !48, size: 16, offset: 1360)
!7879 = !DIDerivedType(tag: DW_TAG_member, name: "avemode", scope: !7815, file: !498, line: 165, baseType: !48, size: 16, offset: 1376)
!7880 = !DIDerivedType(tag: DW_TAG_member, name: "reactevent", scope: !7815, file: !498, line: 165, baseType: !48, size: 16, offset: 1392)
!7881 = !DIDerivedType(tag: DW_TAG_member, name: "draw", scope: !7815, file: !498, line: 166, baseType: !22, size: 32, offset: 1408)
!7882 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !7815, file: !498, line: 166, baseType: !22, size: 32, offset: 1440)
!7883 = !DIDerivedType(tag: DW_TAG_member, name: "draw_as", scope: !7815, file: !498, line: 167, baseType: !48, size: 16, offset: 1472)
!7884 = !DIDerivedType(tag: DW_TAG_member, name: "draw_size", scope: !7815, file: !498, line: 167, baseType: !48, size: 16, offset: 1488)
!7885 = !DIDerivedType(tag: DW_TAG_member, name: "childtype", scope: !7815, file: !498, line: 167, baseType: !48, size: 16, offset: 1504)
!7886 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !7815, file: !498, line: 167, baseType: !48, size: 16, offset: 1520)
!7887 = !DIDerivedType(tag: DW_TAG_member, name: "ren_as", scope: !7815, file: !498, line: 168, baseType: !48, size: 16, offset: 1536)
!7888 = !DIDerivedType(tag: DW_TAG_member, name: "subframes", scope: !7815, file: !498, line: 168, baseType: !48, size: 16, offset: 1552)
!7889 = !DIDerivedType(tag: DW_TAG_member, name: "draw_col", scope: !7815, file: !498, line: 168, baseType: !48, size: 16, offset: 1568)
!7890 = !DIDerivedType(tag: DW_TAG_member, name: "draw_step", scope: !7815, file: !498, line: 170, baseType: !48, size: 16, offset: 1584)
!7891 = !DIDerivedType(tag: DW_TAG_member, name: "ren_step", scope: !7815, file: !498, line: 170, baseType: !48, size: 16, offset: 1600)
!7892 = !DIDerivedType(tag: DW_TAG_member, name: "hair_step", scope: !7815, file: !498, line: 171, baseType: !48, size: 16, offset: 1616)
!7893 = !DIDerivedType(tag: DW_TAG_member, name: "keys_step", scope: !7815, file: !498, line: 171, baseType: !48, size: 16, offset: 1632)
!7894 = !DIDerivedType(tag: DW_TAG_member, name: "adapt_angle", scope: !7815, file: !498, line: 174, baseType: !48, size: 16, offset: 1648)
!7895 = !DIDerivedType(tag: DW_TAG_member, name: "adapt_pix", scope: !7815, file: !498, line: 174, baseType: !48, size: 16, offset: 1664)
!7896 = !DIDerivedType(tag: DW_TAG_member, name: "disp", scope: !7815, file: !498, line: 176, baseType: !48, size: 16, offset: 1680)
!7897 = !DIDerivedType(tag: DW_TAG_member, name: "omat", scope: !7815, file: !498, line: 176, baseType: !48, size: 16, offset: 1696)
!7898 = !DIDerivedType(tag: DW_TAG_member, name: "interpolation", scope: !7815, file: !498, line: 176, baseType: !48, size: 16, offset: 1712)
!7899 = !DIDerivedType(tag: DW_TAG_member, name: "integrator", scope: !7815, file: !498, line: 176, baseType: !48, size: 16, offset: 1728)
!7900 = !DIDerivedType(tag: DW_TAG_member, name: "rotfrom", scope: !7815, file: !498, line: 177, baseType: !48, size: 16, offset: 1744)
!7901 = !DIDerivedType(tag: DW_TAG_member, name: "kink", scope: !7815, file: !498, line: 178, baseType: !48, size: 16, offset: 1760)
!7902 = !DIDerivedType(tag: DW_TAG_member, name: "kink_axis", scope: !7815, file: !498, line: 178, baseType: !48, size: 16, offset: 1776)
!7903 = !DIDerivedType(tag: DW_TAG_member, name: "bb_align", scope: !7815, file: !498, line: 181, baseType: !48, size: 16, offset: 1792)
!7904 = !DIDerivedType(tag: DW_TAG_member, name: "bb_uv_split", scope: !7815, file: !498, line: 181, baseType: !48, size: 16, offset: 1808)
!7905 = !DIDerivedType(tag: DW_TAG_member, name: "bb_anim", scope: !7815, file: !498, line: 181, baseType: !48, size: 16, offset: 1824)
!7906 = !DIDerivedType(tag: DW_TAG_member, name: "bb_split_offset", scope: !7815, file: !498, line: 181, baseType: !48, size: 16, offset: 1840)
!7907 = !DIDerivedType(tag: DW_TAG_member, name: "bb_tilt", scope: !7815, file: !498, line: 182, baseType: !210, size: 32, offset: 1856)
!7908 = !DIDerivedType(tag: DW_TAG_member, name: "bb_rand_tilt", scope: !7815, file: !498, line: 182, baseType: !210, size: 32, offset: 1888)
!7909 = !DIDerivedType(tag: DW_TAG_member, name: "bb_offset", scope: !7815, file: !498, line: 182, baseType: !1052, size: 64, offset: 1920)
!7910 = !DIDerivedType(tag: DW_TAG_member, name: "bb_size", scope: !7815, file: !498, line: 182, baseType: !1052, size: 64, offset: 1984)
!7911 = !DIDerivedType(tag: DW_TAG_member, name: "bb_vel_head", scope: !7815, file: !498, line: 182, baseType: !210, size: 32, offset: 2048)
!7912 = !DIDerivedType(tag: DW_TAG_member, name: "bb_vel_tail", scope: !7815, file: !498, line: 182, baseType: !210, size: 32, offset: 2080)
!7913 = !DIDerivedType(tag: DW_TAG_member, name: "color_vec_max", scope: !7815, file: !498, line: 185, baseType: !210, size: 32, offset: 2112)
!7914 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_flag", scope: !7815, file: !498, line: 188, baseType: !48, size: 16, offset: 2144)
!7915 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_refsize", scope: !7815, file: !498, line: 188, baseType: !48, size: 16, offset: 2160)
!7916 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_rate", scope: !7815, file: !498, line: 189, baseType: !210, size: 32, offset: 2176)
!7917 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_transition", scope: !7815, file: !498, line: 189, baseType: !210, size: 32, offset: 2208)
!7918 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_viewport", scope: !7815, file: !498, line: 190, baseType: !210, size: 32, offset: 2240)
!7919 = !DIDerivedType(tag: DW_TAG_member, name: "sta", scope: !7815, file: !498, line: 193, baseType: !210, size: 32, offset: 2272)
!7920 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !7815, file: !498, line: 193, baseType: !210, size: 32, offset: 2304)
!7921 = !DIDerivedType(tag: DW_TAG_member, name: "lifetime", scope: !7815, file: !498, line: 193, baseType: !210, size: 32, offset: 2336)
!7922 = !DIDerivedType(tag: DW_TAG_member, name: "randlife", scope: !7815, file: !498, line: 193, baseType: !210, size: 32, offset: 2368)
!7923 = !DIDerivedType(tag: DW_TAG_member, name: "timetweak", scope: !7815, file: !498, line: 194, baseType: !210, size: 32, offset: 2400)
!7924 = !DIDerivedType(tag: DW_TAG_member, name: "courant_target", scope: !7815, file: !498, line: 194, baseType: !210, size: 32, offset: 2432)
!7925 = !DIDerivedType(tag: DW_TAG_member, name: "jitfac", scope: !7815, file: !498, line: 195, baseType: !210, size: 32, offset: 2464)
!7926 = !DIDerivedType(tag: DW_TAG_member, name: "eff_hair", scope: !7815, file: !498, line: 195, baseType: !210, size: 32, offset: 2496)
!7927 = !DIDerivedType(tag: DW_TAG_member, name: "grid_rand", scope: !7815, file: !498, line: 195, baseType: !210, size: 32, offset: 2528)
!7928 = !DIDerivedType(tag: DW_TAG_member, name: "ps_offset", scope: !7815, file: !498, line: 195, baseType: !7929, size: 32, offset: 2560)
!7929 = !DICompositeType(tag: DW_TAG_array_type, baseType: !210, size: 32, elements: !1113)
!7930 = !DIDerivedType(tag: DW_TAG_member, name: "totpart", scope: !7815, file: !498, line: 196, baseType: !22, size: 32, offset: 2592)
!7931 = !DIDerivedType(tag: DW_TAG_member, name: "userjit", scope: !7815, file: !498, line: 196, baseType: !22, size: 32, offset: 2624)
!7932 = !DIDerivedType(tag: DW_TAG_member, name: "grid_res", scope: !7815, file: !498, line: 196, baseType: !22, size: 32, offset: 2656)
!7933 = !DIDerivedType(tag: DW_TAG_member, name: "effector_amount", scope: !7815, file: !498, line: 196, baseType: !22, size: 32, offset: 2688)
!7934 = !DIDerivedType(tag: DW_TAG_member, name: "time_flag", scope: !7815, file: !498, line: 197, baseType: !48, size: 16, offset: 2720)
!7935 = !DIDerivedType(tag: DW_TAG_member, name: "time_pad", scope: !7815, file: !498, line: 197, baseType: !214, size: 48, offset: 2736)
!7936 = !DIDerivedType(tag: DW_TAG_member, name: "normfac", scope: !7815, file: !498, line: 200, baseType: !210, size: 32, offset: 2784)
!7937 = !DIDerivedType(tag: DW_TAG_member, name: "obfac", scope: !7815, file: !498, line: 200, baseType: !210, size: 32, offset: 2816)
!7938 = !DIDerivedType(tag: DW_TAG_member, name: "randfac", scope: !7815, file: !498, line: 200, baseType: !210, size: 32, offset: 2848)
!7939 = !DIDerivedType(tag: DW_TAG_member, name: "partfac", scope: !7815, file: !498, line: 200, baseType: !210, size: 32, offset: 2880)
!7940 = !DIDerivedType(tag: DW_TAG_member, name: "tanfac", scope: !7815, file: !498, line: 200, baseType: !210, size: 32, offset: 2912)
!7941 = !DIDerivedType(tag: DW_TAG_member, name: "tanphase", scope: !7815, file: !498, line: 200, baseType: !210, size: 32, offset: 2944)
!7942 = !DIDerivedType(tag: DW_TAG_member, name: "reactfac", scope: !7815, file: !498, line: 200, baseType: !210, size: 32, offset: 2976)
!7943 = !DIDerivedType(tag: DW_TAG_member, name: "ob_vel", scope: !7815, file: !498, line: 201, baseType: !209, size: 96, offset: 3008)
!7944 = !DIDerivedType(tag: DW_TAG_member, name: "avefac", scope: !7815, file: !498, line: 202, baseType: !210, size: 32, offset: 3104)
!7945 = !DIDerivedType(tag: DW_TAG_member, name: "phasefac", scope: !7815, file: !498, line: 202, baseType: !210, size: 32, offset: 3136)
!7946 = !DIDerivedType(tag: DW_TAG_member, name: "randrotfac", scope: !7815, file: !498, line: 202, baseType: !210, size: 32, offset: 3168)
!7947 = !DIDerivedType(tag: DW_TAG_member, name: "randphasefac", scope: !7815, file: !498, line: 202, baseType: !210, size: 32, offset: 3200)
!7948 = !DIDerivedType(tag: DW_TAG_member, name: "mass", scope: !7815, file: !498, line: 204, baseType: !210, size: 32, offset: 3232)
!7949 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7815, file: !498, line: 204, baseType: !210, size: 32, offset: 3264)
!7950 = !DIDerivedType(tag: DW_TAG_member, name: "randsize", scope: !7815, file: !498, line: 204, baseType: !210, size: 32, offset: 3296)
!7951 = !DIDerivedType(tag: DW_TAG_member, name: "acc", scope: !7815, file: !498, line: 206, baseType: !209, size: 96, offset: 3328)
!7952 = !DIDerivedType(tag: DW_TAG_member, name: "dragfac", scope: !7815, file: !498, line: 206, baseType: !210, size: 32, offset: 3424)
!7953 = !DIDerivedType(tag: DW_TAG_member, name: "brownfac", scope: !7815, file: !498, line: 206, baseType: !210, size: 32, offset: 3456)
!7954 = !DIDerivedType(tag: DW_TAG_member, name: "dampfac", scope: !7815, file: !498, line: 206, baseType: !210, size: 32, offset: 3488)
!7955 = !DIDerivedType(tag: DW_TAG_member, name: "randlength", scope: !7815, file: !498, line: 208, baseType: !210, size: 32, offset: 3520)
!7956 = !DIDerivedType(tag: DW_TAG_member, name: "child_nbr", scope: !7815, file: !498, line: 210, baseType: !22, size: 32, offset: 3552)
!7957 = !DIDerivedType(tag: DW_TAG_member, name: "ren_child_nbr", scope: !7815, file: !498, line: 210, baseType: !22, size: 32, offset: 3584)
!7958 = !DIDerivedType(tag: DW_TAG_member, name: "parents", scope: !7815, file: !498, line: 211, baseType: !210, size: 32, offset: 3616)
!7959 = !DIDerivedType(tag: DW_TAG_member, name: "childsize", scope: !7815, file: !498, line: 211, baseType: !210, size: 32, offset: 3648)
!7960 = !DIDerivedType(tag: DW_TAG_member, name: "childrandsize", scope: !7815, file: !498, line: 211, baseType: !210, size: 32, offset: 3680)
!7961 = !DIDerivedType(tag: DW_TAG_member, name: "childrad", scope: !7815, file: !498, line: 212, baseType: !210, size: 32, offset: 3712)
!7962 = !DIDerivedType(tag: DW_TAG_member, name: "childflat", scope: !7815, file: !498, line: 212, baseType: !210, size: 32, offset: 3744)
!7963 = !DIDerivedType(tag: DW_TAG_member, name: "clumpfac", scope: !7815, file: !498, line: 214, baseType: !210, size: 32, offset: 3776)
!7964 = !DIDerivedType(tag: DW_TAG_member, name: "clumppow", scope: !7815, file: !498, line: 214, baseType: !210, size: 32, offset: 3808)
!7965 = !DIDerivedType(tag: DW_TAG_member, name: "kink_amp", scope: !7815, file: !498, line: 216, baseType: !210, size: 32, offset: 3840)
!7966 = !DIDerivedType(tag: DW_TAG_member, name: "kink_freq", scope: !7815, file: !498, line: 216, baseType: !210, size: 32, offset: 3872)
!7967 = !DIDerivedType(tag: DW_TAG_member, name: "kink_shape", scope: !7815, file: !498, line: 216, baseType: !210, size: 32, offset: 3904)
!7968 = !DIDerivedType(tag: DW_TAG_member, name: "kink_flat", scope: !7815, file: !498, line: 216, baseType: !210, size: 32, offset: 3936)
!7969 = !DIDerivedType(tag: DW_TAG_member, name: "kink_amp_clump", scope: !7815, file: !498, line: 217, baseType: !210, size: 32, offset: 3968)
!7970 = !DIDerivedType(tag: DW_TAG_member, name: "rough1", scope: !7815, file: !498, line: 219, baseType: !210, size: 32, offset: 4000)
!7971 = !DIDerivedType(tag: DW_TAG_member, name: "rough1_size", scope: !7815, file: !498, line: 219, baseType: !210, size: 32, offset: 4032)
!7972 = !DIDerivedType(tag: DW_TAG_member, name: "rough2", scope: !7815, file: !498, line: 220, baseType: !210, size: 32, offset: 4064)
!7973 = !DIDerivedType(tag: DW_TAG_member, name: "rough2_size", scope: !7815, file: !498, line: 220, baseType: !210, size: 32, offset: 4096)
!7974 = !DIDerivedType(tag: DW_TAG_member, name: "rough2_thres", scope: !7815, file: !498, line: 220, baseType: !210, size: 32, offset: 4128)
!7975 = !DIDerivedType(tag: DW_TAG_member, name: "rough_end", scope: !7815, file: !498, line: 221, baseType: !210, size: 32, offset: 4160)
!7976 = !DIDerivedType(tag: DW_TAG_member, name: "rough_end_shape", scope: !7815, file: !498, line: 221, baseType: !210, size: 32, offset: 4192)
!7977 = !DIDerivedType(tag: DW_TAG_member, name: "clength", scope: !7815, file: !498, line: 223, baseType: !210, size: 32, offset: 4224)
!7978 = !DIDerivedType(tag: DW_TAG_member, name: "clength_thres", scope: !7815, file: !498, line: 223, baseType: !210, size: 32, offset: 4256)
!7979 = !DIDerivedType(tag: DW_TAG_member, name: "parting_fac", scope: !7815, file: !498, line: 225, baseType: !210, size: 32, offset: 4288)
!7980 = !DIDerivedType(tag: DW_TAG_member, name: "parting_min", scope: !7815, file: !498, line: 226, baseType: !210, size: 32, offset: 4320)
!7981 = !DIDerivedType(tag: DW_TAG_member, name: "parting_max", scope: !7815, file: !498, line: 226, baseType: !210, size: 32, offset: 4352)
!7982 = !DIDerivedType(tag: DW_TAG_member, name: "branch_thres", scope: !7815, file: !498, line: 228, baseType: !210, size: 32, offset: 4384)
!7983 = !DIDerivedType(tag: DW_TAG_member, name: "draw_line", scope: !7815, file: !498, line: 230, baseType: !1052, size: 64, offset: 4416)
!7984 = !DIDerivedType(tag: DW_TAG_member, name: "path_start", scope: !7815, file: !498, line: 231, baseType: !210, size: 32, offset: 4480)
!7985 = !DIDerivedType(tag: DW_TAG_member, name: "path_end", scope: !7815, file: !498, line: 231, baseType: !210, size: 32, offset: 4512)
!7986 = !DIDerivedType(tag: DW_TAG_member, name: "trail_count", scope: !7815, file: !498, line: 232, baseType: !22, size: 32, offset: 4544)
!7987 = !DIDerivedType(tag: DW_TAG_member, name: "keyed_loops", scope: !7815, file: !498, line: 234, baseType: !22, size: 32, offset: 4576)
!7988 = !DIDerivedType(tag: DW_TAG_member, name: "mtex", scope: !7815, file: !498, line: 236, baseType: !7989, size: 1152, offset: 4608)
!7989 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7990, size: 1152, elements: !7991)
!7990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1599, size: 64)
!7991 = !{!7992}
!7992 = !DISubrange(count: 18)
!7993 = !DIDerivedType(tag: DW_TAG_member, name: "dup_group", scope: !7815, file: !498, line: 238, baseType: !503, size: 64, offset: 5760)
!7994 = !DIDerivedType(tag: DW_TAG_member, name: "dupliweights", scope: !7815, file: !498, line: 239, baseType: !60, size: 128, offset: 5824)
!7995 = !DIDerivedType(tag: DW_TAG_member, name: "eff_group", scope: !7815, file: !498, line: 240, baseType: !503, size: 64, offset: 5952)
!7996 = !DIDerivedType(tag: DW_TAG_member, name: "dup_ob", scope: !7815, file: !498, line: 241, baseType: !162, size: 64, offset: 6016)
!7997 = !DIDerivedType(tag: DW_TAG_member, name: "bb_ob", scope: !7815, file: !498, line: 242, baseType: !162, size: 64, offset: 6080)
!7998 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !7815, file: !498, line: 243, baseType: !306, size: 64, offset: 6144)
!7999 = !DIDerivedType(tag: DW_TAG_member, name: "pd", scope: !7815, file: !498, line: 244, baseType: !496, size: 64, offset: 6208)
!8000 = !DIDerivedType(tag: DW_TAG_member, name: "pd2", scope: !7815, file: !498, line: 245, baseType: !496, size: 64, offset: 6272)
!8001 = !DIDerivedType(tag: DW_TAG_member, name: "use_modifier_stack", scope: !7815, file: !498, line: 248, baseType: !48, size: 16, offset: 6336)
!8002 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !7815, file: !498, line: 249, baseType: !214, size: 48, offset: 6352)
!8003 = !DIDerivedType(tag: DW_TAG_member, name: "particles", scope: !7807, file: !498, line: 261, baseType: !8004, size: 64, offset: 192)
!8004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8005, size: 64)
!8005 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleData", file: !498, line: 125, baseType: !8006)
!8006 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleData", file: !498, line: 95, size: 1600, elements: !8007)
!8007 = !{!8008, !8017, !8018, !8028, !8030, !8046, !8047, !8048, !8049, !8050, !8051, !8052, !8053, !8054, !8055, !8056, !8057, !8058, !8059}
!8008 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !8006, file: !498, line: 96, baseType: !8009, size: 448)
!8009 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleKey", file: !498, line: 55, baseType: !8010)
!8010 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleKey", file: !498, line: 49, size: 448, elements: !8011)
!8011 = !{!8012, !8013, !8014, !8015, !8016}
!8012 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !8010, file: !498, line: 50, baseType: !209, size: 96)
!8013 = !DIDerivedType(tag: DW_TAG_member, name: "vel", scope: !8010, file: !498, line: 51, baseType: !209, size: 96, offset: 96)
!8014 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !8010, file: !498, line: 52, baseType: !419, size: 128, offset: 192)
!8015 = !DIDerivedType(tag: DW_TAG_member, name: "ave", scope: !8010, file: !498, line: 53, baseType: !209, size: 96, offset: 320)
!8016 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !8010, file: !498, line: 54, baseType: !210, size: 32, offset: 416)
!8017 = !DIDerivedType(tag: DW_TAG_member, name: "prev_state", scope: !8006, file: !498, line: 98, baseType: !8009, size: 448, offset: 448)
!8018 = !DIDerivedType(tag: DW_TAG_member, name: "hair", scope: !8006, file: !498, line: 100, baseType: !8019, size: 64, offset: 896)
!8019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8020, size: 64)
!8020 = !DIDerivedType(tag: DW_TAG_typedef, name: "HairKey", file: !498, line: 47, baseType: !8021)
!8021 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "HairKey", file: !498, line: 41, size: 192, elements: !8022)
!8022 = !{!8023, !8024, !8025, !8026, !8027}
!8023 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !8021, file: !498, line: 42, baseType: !209, size: 96)
!8024 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !8021, file: !498, line: 43, baseType: !210, size: 32, offset: 96)
!8025 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !8021, file: !498, line: 44, baseType: !210, size: 32, offset: 128)
!8026 = !DIDerivedType(tag: DW_TAG_member, name: "editflag", scope: !8021, file: !498, line: 45, baseType: !48, size: 16, offset: 160)
!8027 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !8021, file: !498, line: 46, baseType: !48, size: 16, offset: 176)
!8028 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !8006, file: !498, line: 102, baseType: !8029, size: 64, offset: 960)
!8029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8009, size: 64)
!8030 = !DIDerivedType(tag: DW_TAG_member, name: "boid", scope: !8006, file: !498, line: 104, baseType: !8031, size: 64, offset: 1024)
!8031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8032, size: 64)
!8032 = !DIDerivedType(tag: DW_TAG_typedef, name: "BoidParticle", file: !498, line: 63, baseType: !8033)
!8033 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BoidParticle", file: !498, line: 57, size: 448, elements: !8034)
!8034 = !{!8035, !8036, !8043, !8044, !8045}
!8035 = !DIDerivedType(tag: DW_TAG_member, name: "ground", scope: !8033, file: !498, line: 58, baseType: !162, size: 64)
!8036 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8033, file: !498, line: 59, baseType: !8037, size: 160, offset: 64)
!8037 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BoidData", file: !7822, line: 109, size: 160, elements: !8038)
!8038 = !{!8039, !8040, !8041, !8042}
!8039 = !DIDerivedType(tag: DW_TAG_member, name: "health", scope: !8037, file: !7822, line: 110, baseType: !210, size: 32)
!8040 = !DIDerivedType(tag: DW_TAG_member, name: "acc", scope: !8037, file: !7822, line: 110, baseType: !209, size: 96, offset: 32)
!8041 = !DIDerivedType(tag: DW_TAG_member, name: "state_id", scope: !8037, file: !7822, line: 111, baseType: !48, size: 16, offset: 128)
!8042 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !8037, file: !7822, line: 111, baseType: !48, size: 16, offset: 144)
!8043 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !8033, file: !498, line: 60, baseType: !209, size: 96, offset: 224)
!8044 = !DIDerivedType(tag: DW_TAG_member, name: "wander", scope: !8033, file: !498, line: 61, baseType: !209, size: 96, offset: 320)
!8045 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !8033, file: !498, line: 62, baseType: !210, size: 32, offset: 416)
!8046 = !DIDerivedType(tag: DW_TAG_member, name: "totkey", scope: !8006, file: !498, line: 106, baseType: !22, size: 32, offset: 1088)
!8047 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !8006, file: !498, line: 108, baseType: !210, size: 32, offset: 1120)
!8048 = !DIDerivedType(tag: DW_TAG_member, name: "lifetime", scope: !8006, file: !498, line: 108, baseType: !210, size: 32, offset: 1152)
!8049 = !DIDerivedType(tag: DW_TAG_member, name: "dietime", scope: !8006, file: !498, line: 109, baseType: !210, size: 32, offset: 1184)
!8050 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !8006, file: !498, line: 111, baseType: !22, size: 32, offset: 1216)
!8051 = !DIDerivedType(tag: DW_TAG_member, name: "num_dmcache", scope: !8006, file: !498, line: 112, baseType: !22, size: 32, offset: 1248)
!8052 = !DIDerivedType(tag: DW_TAG_member, name: "fuv", scope: !8006, file: !498, line: 114, baseType: !419, size: 128, offset: 1280)
!8053 = !DIDerivedType(tag: DW_TAG_member, name: "foffset", scope: !8006, file: !498, line: 114, baseType: !210, size: 32, offset: 1408)
!8054 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !8006, file: !498, line: 117, baseType: !210, size: 32, offset: 1440)
!8055 = !DIDerivedType(tag: DW_TAG_member, name: "sphdensity", scope: !8006, file: !498, line: 119, baseType: !210, size: 32, offset: 1472)
!8056 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !8006, file: !498, line: 120, baseType: !22, size: 32, offset: 1504)
!8057 = !DIDerivedType(tag: DW_TAG_member, name: "hair_index", scope: !8006, file: !498, line: 122, baseType: !22, size: 32, offset: 1536)
!8058 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !8006, file: !498, line: 123, baseType: !48, size: 16, offset: 1568)
!8059 = !DIDerivedType(tag: DW_TAG_member, name: "alive", scope: !8006, file: !498, line: 124, baseType: !48, size: 16, offset: 1584)
!8060 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !7807, file: !498, line: 262, baseType: !8061, size: 64, offset: 256)
!8061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8062, size: 64)
!8062 = !DIDerivedType(tag: DW_TAG_typedef, name: "ChildParticle", file: !498, line: 77, baseType: !8063)
!8063 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ChildParticle", file: !498, line: 71, size: 512, elements: !8064)
!8064 = !{!8065, !8066, !8067, !8068, !8069, !8070, !8071}
!8065 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !8063, file: !498, line: 72, baseType: !22, size: 32)
!8066 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !8063, file: !498, line: 72, baseType: !22, size: 32, offset: 32)
!8067 = !DIDerivedType(tag: DW_TAG_member, name: "pa", scope: !8063, file: !498, line: 73, baseType: !770, size: 128, offset: 64)
!8068 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !8063, file: !498, line: 74, baseType: !419, size: 128, offset: 192)
!8069 = !DIDerivedType(tag: DW_TAG_member, name: "fuv", scope: !8063, file: !498, line: 75, baseType: !419, size: 128, offset: 320)
!8070 = !DIDerivedType(tag: DW_TAG_member, name: "foffset", scope: !8063, file: !498, line: 75, baseType: !210, size: 32, offset: 448)
!8071 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !8063, file: !498, line: 76, baseType: !210, size: 32, offset: 480)
!8072 = !DIDerivedType(tag: DW_TAG_member, name: "edit", scope: !7807, file: !498, line: 264, baseType: !8073, size: 64, offset: 320)
!8073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8074, size: 64)
!8074 = !DICompositeType(tag: DW_TAG_structure_type, name: "PTCacheEdit", file: !498, line: 264, flags: DIFlagFwdDecl)
!8075 = !DIDerivedType(tag: DW_TAG_member, name: "free_edit", scope: !7807, file: !498, line: 265, baseType: !8076, size: 64, offset: 384)
!8076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8077, size: 64)
!8077 = !DISubroutineType(types: !8078)
!8078 = !{null, !8073}
!8079 = !DIDerivedType(tag: DW_TAG_member, name: "pathcache", scope: !7807, file: !498, line: 267, baseType: !8080, size: 64, offset: 448)
!8080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8081, size: 64)
!8081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8082, size: 64)
!8082 = !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleCacheKey", file: !498, line: 267, flags: DIFlagFwdDecl)
!8083 = !DIDerivedType(tag: DW_TAG_member, name: "childcache", scope: !7807, file: !498, line: 268, baseType: !8080, size: 64, offset: 512)
!8084 = !DIDerivedType(tag: DW_TAG_member, name: "pathcachebufs", scope: !7807, file: !498, line: 269, baseType: !58, size: 128, offset: 576)
!8085 = !DIDerivedType(tag: DW_TAG_member, name: "childcachebufs", scope: !7807, file: !498, line: 269, baseType: !58, size: 128, offset: 704)
!8086 = !DIDerivedType(tag: DW_TAG_member, name: "clmd", scope: !7807, file: !498, line: 271, baseType: !8087, size: 64, offset: 832)
!8087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8088, size: 64)
!8088 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ClothModifierData", file: !176, line: 557, size: 1344, elements: !8089)
!8089 = !{!8090, !8091, !8092, !8095, !8098, !8101, !8104}
!8090 = !DIDerivedType(tag: DW_TAG_member, name: "modifier", scope: !8088, file: !176, line: 558, baseType: !179, size: 896)
!8091 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !8088, file: !176, line: 560, baseType: !152, size: 64, offset: 896)
!8092 = !DIDerivedType(tag: DW_TAG_member, name: "clothObject", scope: !8088, file: !176, line: 561, baseType: !8093, size: 64, offset: 960)
!8093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8094, size: 64)
!8094 = !DICompositeType(tag: DW_TAG_structure_type, name: "Cloth", file: !176, line: 561, flags: DIFlagFwdDecl)
!8095 = !DIDerivedType(tag: DW_TAG_member, name: "sim_parms", scope: !8088, file: !176, line: 562, baseType: !8096, size: 64, offset: 1024)
!8096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8097, size: 64)
!8097 = !DICompositeType(tag: DW_TAG_structure_type, name: "ClothSimSettings", file: !176, line: 562, flags: DIFlagFwdDecl)
!8098 = !DIDerivedType(tag: DW_TAG_member, name: "coll_parms", scope: !8088, file: !176, line: 563, baseType: !8099, size: 64, offset: 1088)
!8099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8100, size: 64)
!8100 = !DICompositeType(tag: DW_TAG_structure_type, name: "ClothCollSettings", file: !176, line: 563, flags: DIFlagFwdDecl)
!8101 = !DIDerivedType(tag: DW_TAG_member, name: "point_cache", scope: !8088, file: !176, line: 564, baseType: !8102, size: 64, offset: 1152)
!8102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8103, size: 64)
!8103 = !DICompositeType(tag: DW_TAG_structure_type, name: "PointCache", file: !498, line: 299, flags: DIFlagFwdDecl)
!8104 = !DIDerivedType(tag: DW_TAG_member, name: "ptcaches", scope: !8088, file: !176, line: 565, baseType: !60, size: 128, offset: 1216)
!8105 = !DIDerivedType(tag: DW_TAG_member, name: "hair_in_dm", scope: !7807, file: !498, line: 272, baseType: !516, size: 64, offset: 896)
!8106 = !DIDerivedType(tag: DW_TAG_member, name: "hair_out_dm", scope: !7807, file: !498, line: 272, baseType: !516, size: 64, offset: 960)
!8107 = !DIDerivedType(tag: DW_TAG_member, name: "target_ob", scope: !7807, file: !498, line: 274, baseType: !162, size: 64, offset: 1024)
!8108 = !DIDerivedType(tag: DW_TAG_member, name: "lattice_deform_data", scope: !7807, file: !498, line: 276, baseType: !8109, size: 64, offset: 1088)
!8109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8110, size: 64)
!8110 = !DICompositeType(tag: DW_TAG_structure_type, name: "LatticeDeformData", file: !498, line: 276, flags: DIFlagFwdDecl)
!8111 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !7807, file: !498, line: 278, baseType: !162, size: 64, offset: 1152)
!8112 = !DIDerivedType(tag: DW_TAG_member, name: "targets", scope: !7807, file: !498, line: 280, baseType: !60, size: 128, offset: 1216)
!8113 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !7807, file: !498, line: 282, baseType: !33, size: 512, offset: 1344)
!8114 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !7807, file: !498, line: 284, baseType: !428, size: 512, offset: 1856)
!8115 = !DIDerivedType(tag: DW_TAG_member, name: "cfra", scope: !7807, file: !498, line: 285, baseType: !210, size: 32, offset: 2368)
!8116 = !DIDerivedType(tag: DW_TAG_member, name: "tree_frame", scope: !7807, file: !498, line: 285, baseType: !210, size: 32, offset: 2400)
!8117 = !DIDerivedType(tag: DW_TAG_member, name: "bvhtree_frame", scope: !7807, file: !498, line: 285, baseType: !210, size: 32, offset: 2432)
!8118 = !DIDerivedType(tag: DW_TAG_member, name: "seed", scope: !7807, file: !498, line: 286, baseType: !22, size: 32, offset: 2464)
!8119 = !DIDerivedType(tag: DW_TAG_member, name: "child_seed", scope: !7807, file: !498, line: 286, baseType: !22, size: 32, offset: 2496)
!8120 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !7807, file: !498, line: 287, baseType: !22, size: 32, offset: 2528)
!8121 = !DIDerivedType(tag: DW_TAG_member, name: "totpart", scope: !7807, file: !498, line: 287, baseType: !22, size: 32, offset: 2560)
!8122 = !DIDerivedType(tag: DW_TAG_member, name: "totunexist", scope: !7807, file: !498, line: 287, baseType: !22, size: 32, offset: 2592)
!8123 = !DIDerivedType(tag: DW_TAG_member, name: "totchild", scope: !7807, file: !498, line: 287, baseType: !22, size: 32, offset: 2624)
!8124 = !DIDerivedType(tag: DW_TAG_member, name: "totcached", scope: !7807, file: !498, line: 287, baseType: !22, size: 32, offset: 2656)
!8125 = !DIDerivedType(tag: DW_TAG_member, name: "totchildcache", scope: !7807, file: !498, line: 287, baseType: !22, size: 32, offset: 2688)
!8126 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !7807, file: !498, line: 288, baseType: !48, size: 16, offset: 2720)
!8127 = !DIDerivedType(tag: DW_TAG_member, name: "target_psys", scope: !7807, file: !498, line: 288, baseType: !48, size: 16, offset: 2736)
!8128 = !DIDerivedType(tag: DW_TAG_member, name: "totkeyed", scope: !7807, file: !498, line: 288, baseType: !48, size: 16, offset: 2752)
!8129 = !DIDerivedType(tag: DW_TAG_member, name: "bakespace", scope: !7807, file: !498, line: 288, baseType: !48, size: 16, offset: 2768)
!8130 = !DIDerivedType(tag: DW_TAG_member, name: "bb_uvname", scope: !7807, file: !498, line: 290, baseType: !8131, size: 1536, offset: 2784)
!8131 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 1536, elements: !8132)
!8132 = !{!212, !35}
!8133 = !DIDerivedType(tag: DW_TAG_member, name: "vgroup", scope: !7807, file: !498, line: 293, baseType: !8134, size: 192, offset: 4320)
!8134 = !DICompositeType(tag: DW_TAG_array_type, baseType: !48, size: 192, elements: !8135)
!8135 = !{!8136}
!8136 = !DISubrange(count: 12)
!8137 = !DIDerivedType(tag: DW_TAG_member, name: "vg_neg", scope: !7807, file: !498, line: 293, baseType: !48, size: 16, offset: 4512)
!8138 = !DIDerivedType(tag: DW_TAG_member, name: "rt3", scope: !7807, file: !498, line: 293, baseType: !48, size: 16, offset: 4528)
!8139 = !DIDerivedType(tag: DW_TAG_member, name: "renderdata", scope: !7807, file: !498, line: 296, baseType: !56, size: 64, offset: 4544)
!8140 = !DIDerivedType(tag: DW_TAG_member, name: "pointcache", scope: !7807, file: !498, line: 299, baseType: !8102, size: 64, offset: 4608)
!8141 = !DIDerivedType(tag: DW_TAG_member, name: "ptcaches", scope: !7807, file: !498, line: 300, baseType: !60, size: 128, offset: 4672)
!8142 = !DIDerivedType(tag: DW_TAG_member, name: "effectors", scope: !7807, file: !498, line: 302, baseType: !8143, size: 64, offset: 4800)
!8143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !60, size: 64)
!8144 = !DIDerivedType(tag: DW_TAG_member, name: "fluid_springs", scope: !7807, file: !498, line: 304, baseType: !8145, size: 64, offset: 4864)
!8145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8146, size: 64)
!8146 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleSpring", file: !498, line: 68, baseType: !8147)
!8147 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleSpring", file: !498, line: 65, size: 128, elements: !8148)
!8148 = !{!8149, !8150, !8151}
!8149 = !DIDerivedType(tag: DW_TAG_member, name: "rest_length", scope: !8147, file: !498, line: 66, baseType: !210, size: 32)
!8150 = !DIDerivedType(tag: DW_TAG_member, name: "particle_index", scope: !8147, file: !498, line: 67, baseType: !933, size: 64, offset: 32)
!8151 = !DIDerivedType(tag: DW_TAG_member, name: "delete_flag", scope: !8147, file: !498, line: 67, baseType: !231, size: 32, offset: 96)
!8152 = !DIDerivedType(tag: DW_TAG_member, name: "tot_fluidsprings", scope: !7807, file: !498, line: 305, baseType: !22, size: 32, offset: 4928)
!8153 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_fluidsprings", scope: !7807, file: !498, line: 305, baseType: !22, size: 32, offset: 4960)
!8154 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !7807, file: !498, line: 307, baseType: !8155, size: 64, offset: 4992)
!8155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8156, size: 64)
!8156 = !DICompositeType(tag: DW_TAG_structure_type, name: "KDTree", file: !498, line: 307, flags: DIFlagFwdDecl)
!8157 = !DIDerivedType(tag: DW_TAG_member, name: "bvhtree", scope: !7807, file: !498, line: 308, baseType: !8158, size: 64, offset: 5056)
!8158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8159, size: 64)
!8159 = !DICompositeType(tag: DW_TAG_structure_type, name: "BVHTree", file: !498, line: 308, flags: DIFlagFwdDecl)
!8160 = !DIDerivedType(tag: DW_TAG_member, name: "pdd", scope: !7807, file: !498, line: 310, baseType: !8161, size: 64, offset: 5120)
!8161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8162, size: 64)
!8162 = !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleDrawData", file: !498, line: 310, flags: DIFlagFwdDecl)
!8163 = !DIDerivedType(tag: DW_TAG_member, name: "dt_frac", scope: !7807, file: !498, line: 312, baseType: !210, size: 32, offset: 5184)
!8164 = !DIDerivedType(tag: DW_TAG_member, name: "_pad", scope: !7807, file: !498, line: 313, baseType: !210, size: 32, offset: 5216)
!8165 = !DILocation(line: 2527, column: 19, scope: !7804)
!8166 = !DILocalVariable(name: "i", scope: !7804, file: !3, line: 2528, type: !22)
!8167 = !DILocation(line: 2528, column: 7, scope: !7804)
!8168 = !DILocation(line: 2530, column: 15, scope: !8169)
!8169 = distinct !DILexicalBlock(scope: !7804, file: !3, line: 2530, column: 3)
!8170 = !DILocation(line: 2530, column: 19, scope: !8169)
!8171 = !DILocation(line: 2530, column: 34, scope: !8169)
!8172 = !DILocation(line: 2530, column: 13, scope: !8169)
!8173 = !DILocation(line: 2530, column: 8, scope: !8169)
!8174 = !DILocation(line: 2530, column: 41, scope: !8175)
!8175 = distinct !DILexicalBlock(scope: !8169, file: !3, line: 2530, column: 3)
!8176 = !DILocation(line: 2530, column: 3, scope: !8169)
!8177 = !DILocation(line: 2531, column: 11, scope: !8178)
!8178 = distinct !DILexicalBlock(scope: !8179, file: !3, line: 2531, column: 4)
!8179 = distinct !DILexicalBlock(scope: !8175, file: !3, line: 2530, column: 66)
!8180 = !DILocation(line: 2531, column: 9, scope: !8178)
!8181 = !DILocation(line: 2531, column: 16, scope: !8182)
!8182 = distinct !DILexicalBlock(scope: !8178, file: !3, line: 2531, column: 4)
!8183 = !DILocation(line: 2531, column: 18, scope: !8182)
!8184 = !DILocation(line: 2531, column: 4, scope: !8178)
!8185 = !DILocation(line: 2532, column: 9, scope: !8186)
!8186 = distinct !DILexicalBlock(scope: !8187, file: !3, line: 2532, column: 9)
!8187 = distinct !DILexicalBlock(scope: !8182, file: !3, line: 2531, column: 38)
!8188 = !DILocation(line: 2532, column: 15, scope: !8186)
!8189 = !DILocation(line: 2532, column: 22, scope: !8186)
!8190 = !DILocation(line: 2532, column: 28, scope: !8186)
!8191 = !DILocation(line: 2532, column: 32, scope: !8186)
!8192 = !DILocation(line: 2532, column: 25, scope: !8186)
!8193 = !DILocation(line: 2532, column: 9, scope: !8187)
!8194 = !DILocation(line: 2533, column: 6, scope: !8195)
!8195 = distinct !DILexicalBlock(scope: !8186, file: !3, line: 2532, column: 40)
!8196 = !DILocation(line: 2533, column: 12, scope: !8195)
!8197 = !DILocation(line: 2533, column: 19, scope: !8195)
!8198 = !DILocation(line: 2534, column: 6, scope: !8195)
!8199 = !DILocation(line: 2536, column: 4, scope: !8187)
!8200 = !DILocation(line: 2531, column: 34, scope: !8182)
!8201 = !DILocation(line: 2531, column: 4, scope: !8182)
!8202 = distinct !{!8202, !8184, !8203}
!8203 = !DILocation(line: 2536, column: 4, scope: !8178)
!8204 = !DILocation(line: 2537, column: 3, scope: !8179)
!8205 = !DILocation(line: 2530, column: 54, scope: !8175)
!8206 = !DILocation(line: 2530, column: 60, scope: !8175)
!8207 = !DILocation(line: 2530, column: 52, scope: !8175)
!8208 = !DILocation(line: 2530, column: 3, scope: !8175)
!8209 = distinct !{!8209, !8176, !8210}
!8210 = !DILocation(line: 2537, column: 3, scope: !8169)
!8211 = !DILocation(line: 2538, column: 2, scope: !7804)
!8212 = !DILocation(line: 2540, column: 20, scope: !7747)
!8213 = !DILocation(line: 2540, column: 24, scope: !7747)
!8214 = !DILocation(line: 2540, column: 2, scope: !7747)
!8215 = !DILocation(line: 2542, column: 24, scope: !7747)
!8216 = !DILocation(line: 2542, column: 48, scope: !7747)
!8217 = !DILocation(line: 2542, column: 2, scope: !7747)
!8218 = !DILocation(line: 2543, column: 1, scope: !7747)
!8219 = distinct !DISubprogram(name: "wpaint_ensure_data", scope: !3, file: !3, line: 2146, type: !8220, scopeLine: 2147, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2758, retainedNodes: !3422)
!8220 = !DISubroutineType(types: !8221)
!8221 = !{!259, !3439, !4667}
!8222 = !DILocalVariable(name: "C", arg: 1, scope: !8219, file: !3, line: 2146, type: !3439)
!8223 = !DILocation(line: 2146, column: 42, scope: !8219)
!8224 = !DILocalVariable(name: "op", arg: 2, scope: !8219, file: !3, line: 2146, type: !4667)
!8225 = !DILocation(line: 2146, column: 57, scope: !8219)
!8226 = !DILocalVariable(name: "scene", scope: !8219, file: !3, line: 2148, type: !3688)
!8227 = !DILocation(line: 2148, column: 9, scope: !8219)
!8228 = !DILocation(line: 2148, column: 32, scope: !8219)
!8229 = !DILocation(line: 2148, column: 17, scope: !8219)
!8230 = !DILocalVariable(name: "ob", scope: !8219, file: !3, line: 2149, type: !3444)
!8231 = !DILocation(line: 2149, column: 10, scope: !8219)
!8232 = !DILocation(line: 2149, column: 38, scope: !8219)
!8233 = !DILocation(line: 2149, column: 15, scope: !8219)
!8234 = !DILocalVariable(name: "me", scope: !8219, file: !3, line: 2150, type: !3187)
!8235 = !DILocation(line: 2150, column: 8, scope: !8219)
!8236 = !DILocation(line: 2150, column: 34, scope: !8219)
!8237 = !DILocation(line: 2150, column: 13, scope: !8219)
!8238 = !DILocation(line: 2152, column: 6, scope: !8239)
!8239 = distinct !DILexicalBlock(scope: !8219, file: !3, line: 2152, column: 6)
!8240 = !DILocation(line: 2152, column: 13, scope: !8239)
!8241 = !DILocation(line: 2152, column: 6, scope: !8219)
!8242 = !DILocation(line: 2153, column: 3, scope: !8243)
!8243 = distinct !DILexicalBlock(scope: !8239, file: !3, line: 2152, column: 21)
!8244 = !DILocation(line: 2156, column: 6, scope: !8245)
!8245 = distinct !DILexicalBlock(scope: !8219, file: !3, line: 2156, column: 6)
!8246 = !DILocation(line: 2156, column: 9, scope: !8245)
!8247 = !DILocation(line: 2156, column: 17, scope: !8245)
!8248 = !DILocation(line: 2156, column: 20, scope: !8245)
!8249 = !DILocation(line: 2156, column: 24, scope: !8245)
!8250 = !DILocation(line: 2156, column: 32, scope: !8245)
!8251 = !DILocation(line: 2156, column: 6, scope: !8219)
!8252 = !DILocation(line: 2157, column: 3, scope: !8253)
!8253 = distinct !DILexicalBlock(scope: !8245, file: !3, line: 2156, column: 38)
!8254 = !DILocation(line: 2161, column: 7, scope: !8255)
!8255 = distinct !DILexicalBlock(scope: !8219, file: !3, line: 2161, column: 6)
!8256 = !DILocation(line: 2161, column: 11, scope: !8255)
!8257 = !DILocation(line: 2161, column: 6, scope: !8219)
!8258 = !DILocation(line: 2162, column: 26, scope: !8259)
!8259 = distinct !DILexicalBlock(scope: !8255, file: !3, line: 2161, column: 18)
!8260 = !DILocation(line: 2162, column: 30, scope: !8259)
!8261 = !DILocation(line: 2162, column: 3, scope: !8259)
!8262 = !DILocation(line: 2163, column: 25, scope: !8259)
!8263 = !DILocation(line: 2163, column: 47, scope: !8259)
!8264 = !DILocation(line: 2163, column: 3, scope: !8259)
!8265 = !DILocation(line: 2164, column: 2, scope: !8259)
!8266 = !DILocation(line: 2167, column: 6, scope: !8267)
!8267 = distinct !DILexicalBlock(scope: !8219, file: !3, line: 2167, column: 6)
!8268 = !DILocation(line: 2167, column: 10, scope: !8267)
!8269 = !DILocation(line: 2167, column: 17, scope: !8267)
!8270 = !DILocation(line: 2167, column: 6, scope: !8219)
!8271 = !DILocalVariable(name: "modob", scope: !8272, file: !3, line: 2168, type: !3444)
!8272 = distinct !DILexicalBlock(scope: !8267, file: !3, line: 2167, column: 23)
!8273 = !DILocation(line: 2168, column: 11, scope: !8272)
!8274 = !DILocation(line: 2169, column: 47, scope: !8275)
!8275 = distinct !DILexicalBlock(scope: !8272, file: !3, line: 2169, column: 7)
!8276 = !DILocation(line: 2169, column: 16, scope: !8275)
!8277 = !DILocation(line: 2169, column: 14, scope: !8275)
!8278 = !DILocation(line: 2169, column: 7, scope: !8272)
!8279 = !DILocalVariable(name: "actbone", scope: !8280, file: !3, line: 2170, type: !3320)
!8280 = distinct !DILexicalBlock(scope: !8275, file: !3, line: 2169, column: 53)
!8281 = !DILocation(line: 2170, column: 10, scope: !8280)
!8282 = !DILocation(line: 2170, column: 34, scope: !8280)
!8283 = !DILocation(line: 2170, column: 41, scope: !8280)
!8284 = !DILocation(line: 2170, column: 21, scope: !8280)
!8285 = !DILocation(line: 2170, column: 48, scope: !8280)
!8286 = !DILocation(line: 2171, column: 8, scope: !8287)
!8287 = distinct !DILexicalBlock(scope: !8280, file: !3, line: 2171, column: 8)
!8288 = !DILocation(line: 2171, column: 8, scope: !8280)
!8289 = !DILocalVariable(name: "pchan", scope: !8290, file: !3, line: 2172, type: !8291)
!8290 = distinct !DILexicalBlock(scope: !8287, file: !3, line: 2171, column: 17)
!8291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8292, size: 64)
!8292 = !DIDerivedType(tag: DW_TAG_typedef, name: "bPoseChannel", file: !322, line: 243, baseType: !8293)
!8293 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bPoseChannel", file: !322, line: 187, size: 4352, elements: !8294)
!8294 = !{!8295, !8297, !8298, !8299, !8300, !8301, !8302, !8303, !8304, !8305, !8306, !8307, !8308, !8309, !8310, !8311, !8312, !8313, !8314, !8315, !8316, !8317, !8318, !8319, !8320, !8321, !8322, !8323, !8324, !8325, !8326, !8327, !8328, !8329, !8330, !8331, !8332, !8333, !8334, !8335}
!8295 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8293, file: !322, line: 188, baseType: !8296, size: 64)
!8296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8293, size: 64)
!8297 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !8293, file: !322, line: 188, baseType: !8296, size: 64, offset: 64)
!8298 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !8293, file: !322, line: 190, baseType: !37, size: 64, offset: 128)
!8299 = !DIDerivedType(tag: DW_TAG_member, name: "constraints", scope: !8293, file: !322, line: 192, baseType: !58, size: 128, offset: 192)
!8300 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !8293, file: !322, line: 193, baseType: !33, size: 512, offset: 320)
!8301 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !8293, file: !322, line: 195, baseType: !48, size: 16, offset: 832)
!8302 = !DIDerivedType(tag: DW_TAG_member, name: "ikflag", scope: !8293, file: !322, line: 196, baseType: !48, size: 16, offset: 848)
!8303 = !DIDerivedType(tag: DW_TAG_member, name: "protectflag", scope: !8293, file: !322, line: 197, baseType: !48, size: 16, offset: 864)
!8304 = !DIDerivedType(tag: DW_TAG_member, name: "agrp_index", scope: !8293, file: !322, line: 198, baseType: !48, size: 16, offset: 880)
!8305 = !DIDerivedType(tag: DW_TAG_member, name: "constflag", scope: !8293, file: !322, line: 199, baseType: !14, size: 8, offset: 896)
!8306 = !DIDerivedType(tag: DW_TAG_member, name: "selectflag", scope: !8293, file: !322, line: 200, baseType: !14, size: 8, offset: 904)
!8307 = !DIDerivedType(tag: DW_TAG_member, name: "pad0", scope: !8293, file: !322, line: 201, baseType: !2225, size: 48, offset: 912)
!8308 = !DIDerivedType(tag: DW_TAG_member, name: "bone", scope: !8293, file: !322, line: 203, baseType: !3325, size: 64, offset: 960)
!8309 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !8293, file: !322, line: 204, baseType: !8296, size: 64, offset: 1024)
!8310 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !8293, file: !322, line: 205, baseType: !8296, size: 64, offset: 1088)
!8311 = !DIDerivedType(tag: DW_TAG_member, name: "iktree", scope: !8293, file: !322, line: 207, baseType: !60, size: 128, offset: 1152)
!8312 = !DIDerivedType(tag: DW_TAG_member, name: "siktree", scope: !8293, file: !322, line: 208, baseType: !60, size: 128, offset: 1280)
!8313 = !DIDerivedType(tag: DW_TAG_member, name: "mpath", scope: !8293, file: !322, line: 210, baseType: !382, size: 64, offset: 1408)
!8314 = !DIDerivedType(tag: DW_TAG_member, name: "custom", scope: !8293, file: !322, line: 211, baseType: !162, size: 64, offset: 1472)
!8315 = !DIDerivedType(tag: DW_TAG_member, name: "custom_tx", scope: !8293, file: !322, line: 212, baseType: !8296, size: 64, offset: 1536)
!8316 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !8293, file: !322, line: 217, baseType: !209, size: 96, offset: 1600)
!8317 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !8293, file: !322, line: 218, baseType: !209, size: 96, offset: 1696)
!8318 = !DIDerivedType(tag: DW_TAG_member, name: "eul", scope: !8293, file: !322, line: 221, baseType: !209, size: 96, offset: 1792)
!8319 = !DIDerivedType(tag: DW_TAG_member, name: "quat", scope: !8293, file: !322, line: 222, baseType: !419, size: 128, offset: 1888)
!8320 = !DIDerivedType(tag: DW_TAG_member, name: "rotAxis", scope: !8293, file: !322, line: 223, baseType: !209, size: 96, offset: 2016)
!8321 = !DIDerivedType(tag: DW_TAG_member, name: "rotAngle", scope: !8293, file: !322, line: 223, baseType: !210, size: 32, offset: 2112)
!8322 = !DIDerivedType(tag: DW_TAG_member, name: "rotmode", scope: !8293, file: !322, line: 224, baseType: !48, size: 16, offset: 2144)
!8323 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !8293, file: !322, line: 225, baseType: !48, size: 16, offset: 2160)
!8324 = !DIDerivedType(tag: DW_TAG_member, name: "chan_mat", scope: !8293, file: !322, line: 227, baseType: !428, size: 512, offset: 2176)
!8325 = !DIDerivedType(tag: DW_TAG_member, name: "pose_mat", scope: !8293, file: !322, line: 228, baseType: !428, size: 512, offset: 2688)
!8326 = !DIDerivedType(tag: DW_TAG_member, name: "constinv", scope: !8293, file: !322, line: 230, baseType: !428, size: 512, offset: 3200)
!8327 = !DIDerivedType(tag: DW_TAG_member, name: "pose_head", scope: !8293, file: !322, line: 233, baseType: !209, size: 96, offset: 3712)
!8328 = !DIDerivedType(tag: DW_TAG_member, name: "pose_tail", scope: !8293, file: !322, line: 234, baseType: !209, size: 96, offset: 3808)
!8329 = !DIDerivedType(tag: DW_TAG_member, name: "limitmin", scope: !8293, file: !322, line: 236, baseType: !209, size: 96, offset: 3904)
!8330 = !DIDerivedType(tag: DW_TAG_member, name: "limitmax", scope: !8293, file: !322, line: 236, baseType: !209, size: 96, offset: 4000)
!8331 = !DIDerivedType(tag: DW_TAG_member, name: "stiffness", scope: !8293, file: !322, line: 237, baseType: !209, size: 96, offset: 4096)
!8332 = !DIDerivedType(tag: DW_TAG_member, name: "ikstretch", scope: !8293, file: !322, line: 238, baseType: !210, size: 32, offset: 4192)
!8333 = !DIDerivedType(tag: DW_TAG_member, name: "ikrotweight", scope: !8293, file: !322, line: 239, baseType: !210, size: 32, offset: 4224)
!8334 = !DIDerivedType(tag: DW_TAG_member, name: "iklinweight", scope: !8293, file: !322, line: 240, baseType: !210, size: 32, offset: 4256)
!8335 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !8293, file: !322, line: 242, baseType: !56, size: 64, offset: 4288)
!8336 = !DILocation(line: 2172, column: 19, scope: !8290)
!8337 = !DILocation(line: 2172, column: 54, scope: !8290)
!8338 = !DILocation(line: 2172, column: 61, scope: !8290)
!8339 = !DILocation(line: 2172, column: 67, scope: !8290)
!8340 = !DILocation(line: 2172, column: 76, scope: !8290)
!8341 = !DILocation(line: 2172, column: 27, scope: !8290)
!8342 = !DILocation(line: 2174, column: 9, scope: !8343)
!8343 = distinct !DILexicalBlock(scope: !8290, file: !3, line: 2174, column: 9)
!8344 = !DILocation(line: 2174, column: 9, scope: !8290)
!8345 = !DILocalVariable(name: "dg", scope: !8346, file: !3, line: 2175, type: !4160)
!8346 = distinct !DILexicalBlock(scope: !8343, file: !3, line: 2174, column: 16)
!8347 = !DILocation(line: 2175, column: 20, scope: !8346)
!8348 = !DILocation(line: 2175, column: 44, scope: !8346)
!8349 = !DILocation(line: 2175, column: 48, scope: !8346)
!8350 = !DILocation(line: 2175, column: 55, scope: !8346)
!8351 = !DILocation(line: 2175, column: 25, scope: !8346)
!8352 = !DILocation(line: 2176, column: 10, scope: !8353)
!8353 = distinct !DILexicalBlock(scope: !8346, file: !3, line: 2176, column: 10)
!8354 = !DILocation(line: 2176, column: 13, scope: !8353)
!8355 = !DILocation(line: 2176, column: 10, scope: !8346)
!8356 = !DILocation(line: 2177, column: 31, scope: !8357)
!8357 = distinct !DILexicalBlock(scope: !8353, file: !3, line: 2176, column: 22)
!8358 = !DILocation(line: 2177, column: 35, scope: !8357)
!8359 = !DILocation(line: 2177, column: 42, scope: !8357)
!8360 = !DILocation(line: 2177, column: 12, scope: !8357)
!8361 = !DILocation(line: 2177, column: 10, scope: !8357)
!8362 = !DILocation(line: 2178, column: 6, scope: !8357)
!8363 = !DILocalVariable(name: "actdef", scope: !8364, file: !3, line: 2180, type: !22)
!8364 = distinct !DILexicalBlock(scope: !8353, file: !3, line: 2179, column: 11)
!8365 = !DILocation(line: 2180, column: 11, scope: !8364)
!8366 = !DILocation(line: 2180, column: 39, scope: !8364)
!8367 = !DILocation(line: 2180, column: 43, scope: !8364)
!8368 = !DILocation(line: 2180, column: 52, scope: !8364)
!8369 = !DILocation(line: 2180, column: 24, scope: !8364)
!8370 = !DILocation(line: 2180, column: 22, scope: !8364)
!8371 = !DILocation(line: 2182, column: 20, scope: !8364)
!8372 = !DILocation(line: 2182, column: 7, scope: !8364)
!8373 = !DILocation(line: 2182, column: 11, scope: !8364)
!8374 = !DILocation(line: 2182, column: 18, scope: !8364)
!8375 = !DILocation(line: 2184, column: 5, scope: !8346)
!8376 = !DILocation(line: 2185, column: 4, scope: !8290)
!8377 = !DILocation(line: 2186, column: 3, scope: !8280)
!8378 = !DILocation(line: 2187, column: 2, scope: !8272)
!8379 = !DILocation(line: 2188, column: 29, scope: !8380)
!8380 = distinct !DILexicalBlock(scope: !8219, file: !3, line: 2188, column: 6)
!8381 = !DILocation(line: 2188, column: 33, scope: !8380)
!8382 = !DILocation(line: 2188, column: 6, scope: !8380)
!8383 = !DILocation(line: 2188, column: 6, scope: !8219)
!8384 = !DILocation(line: 2189, column: 17, scope: !8385)
!8385 = distinct !DILexicalBlock(scope: !8380, file: !3, line: 2188, column: 43)
!8386 = !DILocation(line: 2189, column: 3, scope: !8385)
!8387 = !DILocation(line: 2190, column: 2, scope: !8385)
!8388 = !DILocation(line: 2193, column: 6, scope: !8389)
!8389 = distinct !DILexicalBlock(scope: !8219, file: !3, line: 2193, column: 6)
!8390 = !DILocation(line: 2193, column: 10, scope: !8389)
!8391 = !DILocation(line: 2193, column: 17, scope: !8389)
!8392 = !DILocation(line: 2193, column: 6, scope: !8219)
!8393 = !DILocation(line: 2194, column: 14, scope: !8394)
!8394 = distinct !DILexicalBlock(scope: !8389, file: !3, line: 2193, column: 23)
!8395 = !DILocation(line: 2194, column: 18, scope: !8394)
!8396 = !DILocation(line: 2194, column: 3, scope: !8394)
!8397 = !DILocation(line: 2195, column: 3, scope: !8394)
!8398 = !DILocation(line: 2198, column: 2, scope: !8219)
!8399 = !DILocation(line: 2199, column: 1, scope: !8219)
!8400 = distinct !DISubprogram(name: "get_indexarray", scope: !3, file: !3, line: 195, type: !8401, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2758, retainedNodes: !3422)
!8401 = !DISubroutineType(types: !8402)
!8402 = !{!250, !3187}
!8403 = !DILocalVariable(name: "me", arg: 1, scope: !8400, file: !3, line: 195, type: !3187)
!8404 = !DILocation(line: 195, column: 34, scope: !8400)
!8405 = !DILocation(line: 197, column: 9, scope: !8400)
!8406 = !DILocation(line: 197, column: 36, scope: !8400)
!8407 = !DILocation(line: 197, column: 40, scope: !8400)
!8408 = !DILocation(line: 197, column: 48, scope: !8400)
!8409 = !DILocation(line: 197, column: 35, scope: !8400)
!8410 = !DILocation(line: 197, column: 33, scope: !8400)
!8411 = !DILocation(line: 197, column: 2, scope: !8400)
!8412 = distinct !DISubprogram(name: "BLI_listbase_is_empty", scope: !8413, file: !8413, line: 88, type: !8414, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2758, retainedNodes: !3422)
!8413 = !DIFile(filename: "blender/source/blender/blenlib/BLI_listbase.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!8414 = !DISubroutineType(types: !8415)
!8415 = !{!259, !8416}
!8416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8417, size: 64)
!8417 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !60)
!8418 = !DILocalVariable(name: "lb", arg: 1, scope: !8412, file: !8413, line: 88, type: !8416)
!8419 = !DILocation(line: 88, column: 62, scope: !8412)
!8420 = !DILocation(line: 88, column: 76, scope: !8412)
!8421 = !DILocation(line: 88, column: 80, scope: !8412)
!8422 = !DILocation(line: 88, column: 86, scope: !8412)
!8423 = !DILocation(line: 88, column: 75, scope: !8412)
!8424 = !DILocation(line: 88, column: 68, scope: !8412)
!8425 = distinct !DISubprogram(name: "sample_backbuf_area", scope: !3, file: !3, line: 873, type: !8426, scopeLine: 874, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2758, retainedNodes: !3422)
!8426 = !DISubroutineType(types: !8427)
!8427 = !{!22, !7068, !250, !22, !22, !22, !210}
!8428 = !DILocalVariable(name: "vc", arg: 1, scope: !8425, file: !3, line: 873, type: !7068)
!8429 = !DILocation(line: 873, column: 45, scope: !8425)
!8430 = !DILocalVariable(name: "indexar", arg: 2, scope: !8425, file: !3, line: 873, type: !250)
!8431 = !DILocation(line: 873, column: 54, scope: !8425)
!8432 = !DILocalVariable(name: "totface", arg: 3, scope: !8425, file: !3, line: 873, type: !22)
!8433 = !DILocation(line: 873, column: 67, scope: !8425)
!8434 = !DILocalVariable(name: "x", arg: 4, scope: !8425, file: !3, line: 873, type: !22)
!8435 = !DILocation(line: 873, column: 80, scope: !8425)
!8436 = !DILocalVariable(name: "y", arg: 5, scope: !8425, file: !3, line: 873, type: !22)
!8437 = !DILocation(line: 873, column: 87, scope: !8425)
!8438 = !DILocalVariable(name: "size", arg: 6, scope: !8425, file: !3, line: 873, type: !210)
!8439 = !DILocation(line: 873, column: 96, scope: !8425)
!8440 = !DILocalVariable(name: "ibuf", scope: !8425, file: !3, line: 875, type: !1697)
!8441 = !DILocation(line: 875, column: 16, scope: !8425)
!8442 = !DILocalVariable(name: "a", scope: !8425, file: !3, line: 876, type: !22)
!8443 = !DILocation(line: 876, column: 6, scope: !8425)
!8444 = !DILocalVariable(name: "tot", scope: !8425, file: !3, line: 876, type: !22)
!8445 = !DILocation(line: 876, column: 9, scope: !8425)
!8446 = !DILocalVariable(name: "index", scope: !8425, file: !3, line: 876, type: !22)
!8447 = !DILocation(line: 876, column: 18, scope: !8425)
!8448 = !DILocation(line: 882, column: 29, scope: !8425)
!8449 = !DILocation(line: 882, column: 33, scope: !8425)
!8450 = !DILocation(line: 882, column: 37, scope: !8425)
!8451 = !DILocation(line: 882, column: 35, scope: !8425)
!8452 = !DILocation(line: 882, column: 43, scope: !8425)
!8453 = !DILocation(line: 882, column: 47, scope: !8425)
!8454 = !DILocation(line: 882, column: 45, scope: !8425)
!8455 = !DILocation(line: 882, column: 53, scope: !8425)
!8456 = !DILocation(line: 882, column: 57, scope: !8425)
!8457 = !DILocation(line: 882, column: 55, scope: !8425)
!8458 = !DILocation(line: 882, column: 63, scope: !8425)
!8459 = !DILocation(line: 882, column: 67, scope: !8425)
!8460 = !DILocation(line: 882, column: 65, scope: !8425)
!8461 = !DILocation(line: 882, column: 9, scope: !8425)
!8462 = !DILocation(line: 882, column: 7, scope: !8425)
!8463 = !DILocation(line: 883, column: 6, scope: !8464)
!8464 = distinct !DILexicalBlock(scope: !8425, file: !3, line: 883, column: 6)
!8465 = !DILocation(line: 883, column: 6, scope: !8425)
!8466 = !DILocalVariable(name: "rt", scope: !8467, file: !3, line: 884, type: !277)
!8467 = distinct !DILexicalBlock(scope: !8464, file: !3, line: 883, column: 12)
!8468 = !DILocation(line: 884, column: 17, scope: !8467)
!8469 = !DILocation(line: 884, column: 22, scope: !8467)
!8470 = !DILocation(line: 884, column: 28, scope: !8467)
!8471 = !DILocation(line: 886, column: 10, scope: !8467)
!8472 = !DILocation(line: 886, column: 3, scope: !8467)
!8473 = !DILocation(line: 886, column: 37, scope: !8467)
!8474 = !DILocation(line: 886, column: 45, scope: !8467)
!8475 = !DILocation(line: 886, column: 36, scope: !8467)
!8476 = !DILocation(line: 886, column: 34, scope: !8467)
!8477 = !DILocation(line: 888, column: 10, scope: !8467)
!8478 = !DILocation(line: 888, column: 16, scope: !8467)
!8479 = !DILocation(line: 888, column: 20, scope: !8467)
!8480 = !DILocation(line: 888, column: 26, scope: !8467)
!8481 = !DILocation(line: 888, column: 18, scope: !8467)
!8482 = !DILocation(line: 888, column: 8, scope: !8467)
!8483 = !DILocation(line: 889, column: 3, scope: !8467)
!8484 = !DILocation(line: 889, column: 14, scope: !8467)
!8485 = !DILocation(line: 891, column: 9, scope: !8486)
!8486 = distinct !DILexicalBlock(scope: !8487, file: !3, line: 891, column: 8)
!8487 = distinct !DILexicalBlock(scope: !8467, file: !3, line: 889, column: 18)
!8488 = !DILocation(line: 891, column: 8, scope: !8486)
!8489 = !DILocation(line: 891, column: 8, scope: !8487)
!8490 = !DILocation(line: 892, column: 38, scope: !8491)
!8491 = distinct !DILexicalBlock(scope: !8486, file: !3, line: 891, column: 13)
!8492 = !DILocation(line: 892, column: 37, scope: !8491)
!8493 = !DILocation(line: 892, column: 13, scope: !8491)
!8494 = !DILocation(line: 892, column: 11, scope: !8491)
!8495 = !DILocation(line: 893, column: 9, scope: !8496)
!8496 = distinct !DILexicalBlock(scope: !8491, file: !3, line: 893, column: 9)
!8497 = !DILocation(line: 893, column: 15, scope: !8496)
!8498 = !DILocation(line: 893, column: 19, scope: !8496)
!8499 = !DILocation(line: 893, column: 22, scope: !8496)
!8500 = !DILocation(line: 893, column: 31, scope: !8496)
!8501 = !DILocation(line: 893, column: 28, scope: !8496)
!8502 = !DILocation(line: 893, column: 9, scope: !8491)
!8503 = !DILocation(line: 894, column: 6, scope: !8496)
!8504 = !DILocation(line: 894, column: 14, scope: !8496)
!8505 = !DILocation(line: 894, column: 21, scope: !8496)
!8506 = !DILocation(line: 895, column: 4, scope: !8491)
!8507 = !DILocation(line: 897, column: 6, scope: !8487)
!8508 = distinct !{!8508, !8483, !8509}
!8509 = !DILocation(line: 898, column: 3, scope: !8467)
!8510 = !DILocation(line: 900, column: 10, scope: !8511)
!8511 = distinct !DILexicalBlock(scope: !8467, file: !3, line: 900, column: 3)
!8512 = !DILocation(line: 900, column: 8, scope: !8511)
!8513 = !DILocation(line: 900, column: 15, scope: !8514)
!8514 = distinct !DILexicalBlock(scope: !8511, file: !3, line: 900, column: 3)
!8515 = !DILocation(line: 900, column: 20, scope: !8514)
!8516 = !DILocation(line: 900, column: 17, scope: !8514)
!8517 = !DILocation(line: 900, column: 3, scope: !8511)
!8518 = !DILocation(line: 901, column: 8, scope: !8519)
!8519 = distinct !DILexicalBlock(scope: !8520, file: !3, line: 901, column: 8)
!8520 = distinct !DILexicalBlock(scope: !8514, file: !3, line: 900, column: 34)
!8521 = !DILocation(line: 901, column: 16, scope: !8519)
!8522 = !DILocation(line: 901, column: 8, scope: !8520)
!8523 = !DILocation(line: 901, column: 37, scope: !8519)
!8524 = !DILocation(line: 901, column: 20, scope: !8519)
!8525 = !DILocation(line: 901, column: 31, scope: !8519)
!8526 = !DILocation(line: 901, column: 35, scope: !8519)
!8527 = !DILocation(line: 902, column: 3, scope: !8520)
!8528 = !DILocation(line: 900, column: 30, scope: !8514)
!8529 = !DILocation(line: 900, column: 3, scope: !8514)
!8530 = distinct !{!8530, !8517, !8531}
!8531 = !DILocation(line: 902, column: 3, scope: !8511)
!8532 = !DILocation(line: 904, column: 17, scope: !8467)
!8533 = !DILocation(line: 904, column: 3, scope: !8467)
!8534 = !DILocation(line: 905, column: 2, scope: !8467)
!8535 = !DILocation(line: 907, column: 9, scope: !8425)
!8536 = !DILocation(line: 907, column: 2, scope: !8425)
!8537 = distinct !DISubprogram(name: "calc_vp_strength_col_dl", scope: !3, file: !3, line: 911, type: !8538, scopeLine: 913, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2758, retainedNodes: !3422)
!8538 = !DISubroutineType(types: !8539)
!8539 = !{!210, !1538, !7068, !804, !804, !637, !242}
!8540 = !DILocalVariable(name: "vp", arg: 1, scope: !8537, file: !3, line: 911, type: !1538)
!8541 = !DILocation(line: 911, column: 46, scope: !8537)
!8542 = !DILocalVariable(name: "vc", arg: 2, scope: !8537, file: !3, line: 911, type: !7068)
!8543 = !DILocation(line: 911, column: 63, scope: !8537)
!8544 = !DILocalVariable(name: "co", arg: 3, scope: !8537, file: !3, line: 911, type: !804)
!8545 = !DILocation(line: 911, column: 79, scope: !8537)
!8546 = !DILocalVariable(name: "mval", arg: 4, scope: !8537, file: !3, line: 912, type: !804)
!8547 = !DILocation(line: 912, column: 46, scope: !8537)
!8548 = !DILocalVariable(name: "brush_size_pressure", arg: 5, scope: !8537, file: !3, line: 912, type: !637)
!8549 = !DILocation(line: 912, column: 67, scope: !8537)
!8550 = !DILocalVariable(name: "rgba", arg: 6, scope: !8537, file: !3, line: 912, type: !242)
!8551 = !DILocation(line: 912, column: 94, scope: !8537)
!8552 = !DILocalVariable(name: "co_ss", scope: !8537, file: !3, line: 914, type: !1052)
!8553 = !DILocation(line: 914, column: 8, scope: !8537)
!8554 = !DILocation(line: 916, column: 37, scope: !8555)
!8555 = distinct !DILexicalBlock(scope: !8537, file: !3, line: 916, column: 6)
!8556 = !DILocation(line: 916, column: 41, scope: !8555)
!8557 = !DILocation(line: 917, column: 37, scope: !8555)
!8558 = !DILocation(line: 917, column: 41, scope: !8555)
!8559 = !DILocation(line: 916, column: 6, scope: !8555)
!8560 = !DILocation(line: 918, column: 86, scope: !8555)
!8561 = !DILocation(line: 916, column: 6, scope: !8537)
!8562 = !DILocalVariable(name: "dist_sq", scope: !8563, file: !3, line: 920, type: !637)
!8563 = distinct !DILexicalBlock(scope: !8555, file: !3, line: 919, column: 2)
!8564 = !DILocation(line: 920, column: 15, scope: !8563)
!8565 = !DILocation(line: 920, column: 42, scope: !8563)
!8566 = !DILocation(line: 920, column: 48, scope: !8563)
!8567 = !DILocation(line: 920, column: 25, scope: !8563)
!8568 = !DILocation(line: 922, column: 7, scope: !8569)
!8569 = distinct !DILexicalBlock(scope: !8563, file: !3, line: 922, column: 7)
!8570 = !DILocation(line: 922, column: 18, scope: !8569)
!8571 = !DILocation(line: 922, column: 15, scope: !8569)
!8572 = !DILocation(line: 922, column: 7, scope: !8563)
!8573 = !DILocalVariable(name: "brush", scope: !8574, file: !3, line: 923, type: !3695)
!8574 = distinct !DILexicalBlock(scope: !8569, file: !3, line: 922, column: 47)
!8575 = !DILocation(line: 923, column: 11, scope: !8574)
!8576 = !DILocation(line: 923, column: 36, scope: !8574)
!8577 = !DILocation(line: 923, column: 40, scope: !8574)
!8578 = !DILocation(line: 923, column: 19, scope: !8574)
!8579 = !DILocalVariable(name: "dist", scope: !8574, file: !3, line: 924, type: !637)
!8580 = !DILocation(line: 924, column: 16, scope: !8574)
!8581 = !DILocation(line: 924, column: 29, scope: !8574)
!8582 = !DILocation(line: 924, column: 23, scope: !8574)
!8583 = !DILocalVariable(name: "factor", scope: !8574, file: !3, line: 925, type: !210)
!8584 = !DILocation(line: 925, column: 10, scope: !8574)
!8585 = !DILocation(line: 927, column: 8, scope: !8586)
!8586 = distinct !DILexicalBlock(scope: !8574, file: !3, line: 927, column: 8)
!8587 = !DILocation(line: 927, column: 15, scope: !8586)
!8588 = !DILocation(line: 927, column: 20, scope: !8586)
!8589 = !DILocation(line: 927, column: 24, scope: !8586)
!8590 = !DILocation(line: 927, column: 27, scope: !8586)
!8591 = !DILocation(line: 927, column: 8, scope: !8574)
!8592 = !DILocation(line: 928, column: 9, scope: !8593)
!8593 = distinct !DILexicalBlock(scope: !8594, file: !3, line: 928, column: 9)
!8594 = distinct !DILexicalBlock(scope: !8586, file: !3, line: 927, column: 33)
!8595 = !DILocation(line: 928, column: 16, scope: !8593)
!8596 = !DILocation(line: 928, column: 21, scope: !8593)
!8597 = !DILocation(line: 928, column: 36, scope: !8593)
!8598 = !DILocation(line: 928, column: 9, scope: !8594)
!8599 = !DILocation(line: 929, column: 30, scope: !8600)
!8600 = distinct !DILexicalBlock(scope: !8593, file: !3, line: 928, column: 57)
!8601 = !DILocation(line: 929, column: 34, scope: !8600)
!8602 = !DILocation(line: 929, column: 41, scope: !8600)
!8603 = !DILocation(line: 929, column: 48, scope: !8600)
!8604 = !DILocation(line: 929, column: 52, scope: !8600)
!8605 = !DILocation(line: 929, column: 6, scope: !8600)
!8606 = !DILocation(line: 930, column: 5, scope: !8600)
!8607 = !DILocalVariable(name: "co_ss_3d", scope: !8608, file: !3, line: 932, type: !8609)
!8608 = distinct !DILexicalBlock(scope: !8593, file: !3, line: 931, column: 10)
!8609 = !DICompositeType(tag: DW_TAG_array_type, baseType: !637, size: 96, elements: !211)
!8610 = !DILocation(line: 932, column: 18, scope: !8608)
!8611 = !DILocation(line: 932, column: 32, scope: !8608)
!8612 = !DILocation(line: 932, column: 33, scope: !8608)
!8613 = !DILocation(line: 932, column: 43, scope: !8608)
!8614 = !DILocation(line: 933, column: 30, scope: !8608)
!8615 = !DILocation(line: 933, column: 34, scope: !8608)
!8616 = !DILocation(line: 933, column: 41, scope: !8608)
!8617 = !DILocation(line: 933, column: 48, scope: !8608)
!8618 = !DILocation(line: 933, column: 58, scope: !8608)
!8619 = !DILocation(line: 933, column: 6, scope: !8608)
!8620 = !DILocation(line: 935, column: 14, scope: !8594)
!8621 = !DILocation(line: 935, column: 12, scope: !8594)
!8622 = !DILocation(line: 936, column: 4, scope: !8594)
!8623 = !DILocation(line: 938, column: 12, scope: !8624)
!8624 = distinct !DILexicalBlock(scope: !8586, file: !3, line: 937, column: 9)
!8625 = !DILocation(line: 940, column: 11, scope: !8574)
!8626 = !DILocation(line: 940, column: 51, scope: !8574)
!8627 = !DILocation(line: 940, column: 58, scope: !8574)
!8628 = !DILocation(line: 940, column: 64, scope: !8574)
!8629 = !DILocation(line: 940, column: 20, scope: !8574)
!8630 = !DILocation(line: 940, column: 18, scope: !8574)
!8631 = !DILocation(line: 940, column: 4, scope: !8574)
!8632 = !DILocation(line: 942, column: 2, scope: !8563)
!8633 = !DILocation(line: 943, column: 6, scope: !8634)
!8634 = distinct !DILexicalBlock(scope: !8537, file: !3, line: 943, column: 6)
!8635 = !DILocation(line: 943, column: 6, scope: !8537)
!8636 = !DILocation(line: 944, column: 11, scope: !8634)
!8637 = !DILocation(line: 944, column: 3, scope: !8634)
!8638 = !DILocation(line: 945, column: 2, scope: !8537)
!8639 = !DILocation(line: 946, column: 1, scope: !8537)
!8640 = distinct !DISubprogram(name: "calc_vp_alpha_col_dl", scope: !3, file: !3, line: 948, type: !8641, scopeLine: 952, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2758, retainedNodes: !3422)
!8641 = !DISubroutineType(types: !8642)
!8642 = !{!210, !1538, !7068, !236, !8643, !804, !637, !637, !242}
!8643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8644, size: 64)
!8644 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6896)
!8645 = !DILocalVariable(name: "vp", arg: 1, scope: !8640, file: !3, line: 948, type: !1538)
!8646 = !DILocation(line: 948, column: 43, scope: !8640)
!8647 = !DILocalVariable(name: "vc", arg: 2, scope: !8640, file: !3, line: 948, type: !7068)
!8648 = !DILocation(line: 948, column: 60, scope: !8640)
!8649 = !DILocalVariable(name: "vpimat", arg: 3, scope: !8640, file: !3, line: 949, type: !236)
!8650 = !DILocation(line: 949, column: 37, scope: !8640)
!8651 = !DILocalVariable(name: "v_co_no", arg: 4, scope: !8640, file: !3, line: 949, type: !8643)
!8652 = !DILocation(line: 949, column: 65, scope: !8640)
!8653 = !DILocalVariable(name: "mval", arg: 5, scope: !8640, file: !3, line: 950, type: !804)
!8654 = !DILocation(line: 950, column: 43, scope: !8640)
!8655 = !DILocalVariable(name: "brush_size_pressure", arg: 6, scope: !8640, file: !3, line: 951, type: !637)
!8656 = !DILocation(line: 951, column: 43, scope: !8640)
!8657 = !DILocalVariable(name: "brush_alpha_pressure", arg: 7, scope: !8640, file: !3, line: 951, type: !637)
!8658 = !DILocation(line: 951, column: 76, scope: !8640)
!8659 = !DILocalVariable(name: "rgba", arg: 8, scope: !8640, file: !3, line: 951, type: !242)
!8660 = !DILocation(line: 951, column: 104, scope: !8640)
!8661 = !DILocalVariable(name: "strength", scope: !8640, file: !3, line: 953, type: !210)
!8662 = !DILocation(line: 953, column: 8, scope: !8640)
!8663 = !DILocation(line: 953, column: 43, scope: !8640)
!8664 = !DILocation(line: 953, column: 47, scope: !8640)
!8665 = !DILocation(line: 953, column: 51, scope: !8640)
!8666 = !DILocation(line: 953, column: 60, scope: !8640)
!8667 = !DILocation(line: 953, column: 64, scope: !8640)
!8668 = !DILocation(line: 953, column: 70, scope: !8640)
!8669 = !DILocation(line: 953, column: 91, scope: !8640)
!8670 = !DILocation(line: 953, column: 19, scope: !8640)
!8671 = !DILocation(line: 955, column: 6, scope: !8672)
!8672 = distinct !DILexicalBlock(scope: !8640, file: !3, line: 955, column: 6)
!8673 = !DILocation(line: 955, column: 15, scope: !8672)
!8674 = !DILocation(line: 955, column: 6, scope: !8640)
!8675 = !DILocalVariable(name: "alpha", scope: !8676, file: !3, line: 956, type: !210)
!8676 = distinct !DILexicalBlock(scope: !8672, file: !3, line: 955, column: 23)
!8677 = !DILocation(line: 956, column: 9, scope: !8676)
!8678 = !DILocation(line: 956, column: 17, scope: !8676)
!8679 = !DILocation(line: 956, column: 40, scope: !8676)
!8680 = !DILocation(line: 956, column: 38, scope: !8676)
!8681 = !DILocation(line: 958, column: 7, scope: !8682)
!8682 = distinct !DILexicalBlock(scope: !8676, file: !3, line: 958, column: 7)
!8683 = !DILocation(line: 958, column: 11, scope: !8682)
!8684 = !DILocation(line: 958, column: 16, scope: !8682)
!8685 = !DILocation(line: 958, column: 7, scope: !8676)
!8686 = !DILocalVariable(name: "dvec", scope: !8687, file: !3, line: 959, type: !209)
!8687 = distinct !DILexicalBlock(scope: !8682, file: !3, line: 958, column: 30)
!8688 = !DILocation(line: 959, column: 10, scope: !8687)
!8689 = !DILocation(line: 962, column: 23, scope: !8687)
!8690 = !DILocation(line: 962, column: 34, scope: !8687)
!8691 = !DILocation(line: 962, column: 43, scope: !8687)
!8692 = !DILocation(line: 962, column: 14, scope: !8687)
!8693 = !DILocation(line: 962, column: 4, scope: !8687)
!8694 = !DILocation(line: 962, column: 12, scope: !8687)
!8695 = !DILocation(line: 963, column: 8, scope: !8696)
!8696 = distinct !DILexicalBlock(scope: !8687, file: !3, line: 963, column: 8)
!8697 = !DILocation(line: 963, column: 16, scope: !8696)
!8698 = !DILocation(line: 963, column: 8, scope: !8687)
!8699 = !DILocation(line: 964, column: 24, scope: !8700)
!8700 = distinct !DILexicalBlock(scope: !8696, file: !3, line: 963, column: 24)
!8701 = !DILocation(line: 964, column: 35, scope: !8700)
!8702 = !DILocation(line: 964, column: 44, scope: !8700)
!8703 = !DILocation(line: 964, column: 15, scope: !8700)
!8704 = !DILocation(line: 964, column: 5, scope: !8700)
!8705 = !DILocation(line: 964, column: 13, scope: !8700)
!8706 = !DILocation(line: 965, column: 24, scope: !8700)
!8707 = !DILocation(line: 965, column: 35, scope: !8700)
!8708 = !DILocation(line: 965, column: 44, scope: !8700)
!8709 = !DILocation(line: 965, column: 15, scope: !8700)
!8710 = !DILocation(line: 965, column: 5, scope: !8700)
!8711 = !DILocation(line: 965, column: 13, scope: !8700)
!8712 = !DILocation(line: 967, column: 14, scope: !8700)
!8713 = !DILocation(line: 967, column: 31, scope: !8700)
!8714 = !DILocation(line: 967, column: 24, scope: !8700)
!8715 = !DILocation(line: 967, column: 22, scope: !8700)
!8716 = !DILocation(line: 967, column: 11, scope: !8700)
!8717 = !DILocation(line: 968, column: 4, scope: !8700)
!8718 = !DILocation(line: 970, column: 5, scope: !8719)
!8719 = distinct !DILexicalBlock(scope: !8696, file: !3, line: 969, column: 9)
!8720 = !DILocation(line: 972, column: 3, scope: !8687)
!8721 = !DILocation(line: 974, column: 10, scope: !8676)
!8722 = !DILocation(line: 974, column: 3, scope: !8676)
!8723 = !DILocation(line: 977, column: 2, scope: !8640)
!8724 = !DILocation(line: 978, column: 1, scope: !8640)
!8725 = distinct !DISubprogram(name: "do_weight_paint_vertex", scope: !3, file: !3, line: 1788, type: !8726, scopeLine: 1794, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2758, retainedNodes: !3422)
!8726 = !DISubroutineType(types: !8727)
!8727 = !{null, !1538, !3444, !8728, !7507, !210, !210}
!8728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8729, size: 64)
!8729 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7134)
!8730 = !DILocalVariable(name: "wp", arg: 1, scope: !8725, file: !3, line: 1790, type: !1538)
!8731 = !DILocation(line: 1790, column: 17, scope: !8725)
!8732 = !DILocalVariable(name: "ob", arg: 2, scope: !8725, file: !3, line: 1790, type: !3444)
!8733 = !DILocation(line: 1790, column: 29, scope: !8725)
!8734 = !DILocalVariable(name: "wpi", arg: 3, scope: !8725, file: !3, line: 1790, type: !8728)
!8735 = !DILocation(line: 1790, column: 56, scope: !8725)
!8736 = !DILocalVariable(name: "index", arg: 4, scope: !8725, file: !3, line: 1792, type: !7507)
!8737 = !DILocation(line: 1792, column: 28, scope: !8725)
!8738 = !DILocalVariable(name: "alpha", arg: 5, scope: !8725, file: !3, line: 1792, type: !210)
!8739 = !DILocation(line: 1792, column: 41, scope: !8725)
!8740 = !DILocalVariable(name: "paintweight", arg: 6, scope: !8725, file: !3, line: 1792, type: !210)
!8741 = !DILocation(line: 1792, column: 54, scope: !8725)
!8742 = !DILocalVariable(name: "me", scope: !8725, file: !3, line: 1795, type: !3187)
!8743 = !DILocation(line: 1795, column: 8, scope: !8725)
!8744 = !DILocation(line: 1795, column: 13, scope: !8725)
!8745 = !DILocation(line: 1795, column: 17, scope: !8725)
!8746 = !DILocalVariable(name: "dv", scope: !8725, file: !3, line: 1796, type: !3406)
!8747 = !DILocation(line: 1796, column: 15, scope: !8725)
!8748 = !DILocation(line: 1796, column: 21, scope: !8725)
!8749 = !DILocation(line: 1796, column: 25, scope: !8725)
!8750 = !DILocation(line: 1796, column: 31, scope: !8725)
!8751 = !DILocalVariable(name: "topology", scope: !8725, file: !3, line: 1797, type: !259)
!8752 = !DILocation(line: 1797, column: 7, scope: !8725)
!8753 = !DILocation(line: 1797, column: 19, scope: !8725)
!8754 = !DILocation(line: 1797, column: 23, scope: !8725)
!8755 = !DILocation(line: 1797, column: 32, scope: !8725)
!8756 = !DILocation(line: 1797, column: 55, scope: !8725)
!8757 = !DILocation(line: 1797, column: 18, scope: !8725)
!8758 = !DILocalVariable(name: "dw", scope: !8725, file: !3, line: 1799, type: !3404)
!8759 = !DILocation(line: 1799, column: 17, scope: !8725)
!8760 = !DILocalVariable(name: "dw_prev", scope: !8725, file: !3, line: 1799, type: !3404)
!8761 = !DILocation(line: 1799, column: 22, scope: !8725)
!8762 = !DILocalVariable(name: "index_mirr", scope: !8725, file: !3, line: 1802, type: !22)
!8763 = !DILocation(line: 1802, column: 6, scope: !8725)
!8764 = !DILocalVariable(name: "vgroup_mirr", scope: !8725, file: !3, line: 1803, type: !22)
!8765 = !DILocation(line: 1803, column: 6, scope: !8725)
!8766 = !DILocalVariable(name: "dv_mirr", scope: !8725, file: !3, line: 1805, type: !3406)
!8767 = !DILocation(line: 1805, column: 15, scope: !8725)
!8768 = !DILocalVariable(name: "dw_mirr", scope: !8725, file: !3, line: 1806, type: !3404)
!8769 = !DILocation(line: 1806, column: 17, scope: !8725)
!8770 = !DILocalVariable(name: "do_multipaint_totsel", scope: !8725, file: !3, line: 1808, type: !806)
!8771 = !DILocation(line: 1808, column: 14, scope: !8725)
!8772 = !DILocation(line: 1808, column: 38, scope: !8725)
!8773 = !DILocation(line: 1808, column: 43, scope: !8725)
!8774 = !DILocation(line: 1808, column: 57, scope: !8725)
!8775 = !DILocation(line: 1808, column: 60, scope: !8725)
!8776 = !DILocation(line: 1808, column: 65, scope: !8725)
!8777 = !DILocation(line: 1808, column: 81, scope: !8725)
!8778 = !DILocation(line: 0, scope: !8725)
!8779 = !DILocation(line: 1808, column: 37, scope: !8725)
!8780 = !DILocation(line: 1810, column: 6, scope: !8781)
!8781 = distinct !DILexicalBlock(scope: !8725, file: !3, line: 1810, column: 6)
!8782 = !DILocation(line: 1810, column: 10, scope: !8781)
!8783 = !DILocation(line: 1810, column: 15, scope: !8781)
!8784 = !DILocation(line: 1810, column: 6, scope: !8725)
!8785 = !DILocation(line: 1811, column: 27, scope: !8786)
!8786 = distinct !DILexicalBlock(scope: !8781, file: !3, line: 1810, column: 32)
!8787 = !DILocation(line: 1811, column: 31, scope: !8786)
!8788 = !DILocation(line: 1811, column: 36, scope: !8786)
!8789 = !DILocation(line: 1811, column: 8, scope: !8786)
!8790 = !DILocation(line: 1811, column: 6, scope: !8786)
!8791 = !DILocation(line: 1812, column: 32, scope: !8786)
!8792 = !DILocation(line: 1812, column: 36, scope: !8786)
!8793 = !DILocation(line: 1812, column: 50, scope: !8786)
!8794 = !DILocation(line: 1812, column: 48, scope: !8786)
!8795 = !DILocation(line: 1812, column: 57, scope: !8786)
!8796 = !DILocation(line: 1812, column: 62, scope: !8786)
!8797 = !DILocation(line: 1812, column: 13, scope: !8786)
!8798 = !DILocation(line: 1812, column: 11, scope: !8786)
!8799 = !DILocation(line: 1813, column: 2, scope: !8786)
!8800 = !DILocation(line: 1815, column: 29, scope: !8801)
!8801 = distinct !DILexicalBlock(scope: !8781, file: !3, line: 1814, column: 7)
!8802 = !DILocation(line: 1815, column: 33, scope: !8801)
!8803 = !DILocation(line: 1815, column: 38, scope: !8801)
!8804 = !DILocation(line: 1815, column: 8, scope: !8801)
!8805 = !DILocation(line: 1815, column: 6, scope: !8801)
!8806 = !DILocation(line: 1816, column: 34, scope: !8801)
!8807 = !DILocation(line: 1816, column: 38, scope: !8801)
!8808 = !DILocation(line: 1816, column: 52, scope: !8801)
!8809 = !DILocation(line: 1816, column: 50, scope: !8801)
!8810 = !DILocation(line: 1816, column: 59, scope: !8801)
!8811 = !DILocation(line: 1816, column: 64, scope: !8801)
!8812 = !DILocation(line: 1816, column: 13, scope: !8801)
!8813 = !DILocation(line: 1816, column: 11, scope: !8801)
!8814 = !DILocation(line: 1819, column: 6, scope: !8815)
!8815 = distinct !DILexicalBlock(scope: !8725, file: !3, line: 1819, column: 6)
!8816 = !DILocation(line: 1819, column: 9, scope: !8815)
!8817 = !DILocation(line: 1819, column: 17, scope: !8815)
!8818 = !DILocation(line: 1819, column: 20, scope: !8815)
!8819 = !DILocation(line: 1819, column: 28, scope: !8815)
!8820 = !DILocation(line: 1819, column: 6, scope: !8725)
!8821 = !DILocation(line: 1820, column: 3, scope: !8822)
!8822 = distinct !DILexicalBlock(scope: !8815, file: !3, line: 1819, column: 37)
!8823 = !DILocation(line: 1825, column: 6, scope: !8824)
!8824 = distinct !DILexicalBlock(scope: !8725, file: !3, line: 1825, column: 6)
!8825 = !DILocation(line: 1825, column: 10, scope: !8824)
!8826 = !DILocation(line: 1825, column: 19, scope: !8824)
!8827 = !DILocation(line: 1825, column: 6, scope: !8725)
!8828 = !DILocation(line: 1826, column: 39, scope: !8829)
!8829 = distinct !DILexicalBlock(scope: !8824, file: !3, line: 1825, column: 39)
!8830 = !DILocation(line: 1826, column: 43, scope: !8829)
!8831 = !DILocation(line: 1826, column: 50, scope: !8829)
!8832 = !DILocation(line: 1826, column: 16, scope: !8829)
!8833 = !DILocation(line: 1826, column: 14, scope: !8829)
!8834 = !DILocation(line: 1827, column: 18, scope: !8829)
!8835 = !DILocation(line: 1827, column: 23, scope: !8829)
!8836 = !DILocation(line: 1827, column: 37, scope: !8829)
!8837 = !DILocation(line: 1827, column: 17, scope: !8829)
!8838 = !DILocation(line: 1827, column: 46, scope: !8829)
!8839 = !DILocation(line: 1827, column: 51, scope: !8829)
!8840 = !DILocation(line: 1827, column: 67, scope: !8829)
!8841 = !DILocation(line: 1827, column: 72, scope: !8829)
!8842 = !DILocation(line: 1827, column: 15, scope: !8829)
!8843 = !DILocation(line: 1831, column: 7, scope: !8844)
!8844 = distinct !DILexicalBlock(scope: !8829, file: !3, line: 1831, column: 7)
!8845 = !DILocation(line: 1831, column: 21, scope: !8844)
!8846 = !DILocation(line: 1831, column: 18, scope: !8844)
!8847 = !DILocation(line: 1831, column: 27, scope: !8844)
!8848 = !DILocation(line: 1831, column: 30, scope: !8844)
!8849 = !DILocation(line: 1831, column: 45, scope: !8844)
!8850 = !DILocation(line: 1831, column: 50, scope: !8844)
!8851 = !DILocation(line: 1831, column: 42, scope: !8844)
!8852 = !DILocation(line: 1831, column: 7, scope: !8829)
!8853 = !DILocation(line: 1832, column: 29, scope: !8854)
!8854 = distinct !DILexicalBlock(scope: !8844, file: !3, line: 1831, column: 65)
!8855 = !DILocation(line: 1832, column: 15, scope: !8854)
!8856 = !DILocation(line: 1833, column: 3, scope: !8854)
!8857 = !DILocation(line: 1834, column: 2, scope: !8829)
!8858 = !DILocation(line: 1836, column: 28, scope: !8859)
!8859 = distinct !DILexicalBlock(scope: !8824, file: !3, line: 1835, column: 7)
!8860 = !DILocation(line: 1836, column: 14, scope: !8859)
!8861 = !DILocation(line: 1841, column: 6, scope: !8862)
!8862 = distinct !DILexicalBlock(scope: !8725, file: !3, line: 1841, column: 6)
!8863 = !DILocation(line: 1841, column: 17, scope: !8862)
!8864 = !DILocation(line: 1841, column: 6, scope: !8725)
!8865 = !DILocation(line: 1842, column: 14, scope: !8866)
!8866 = distinct !DILexicalBlock(scope: !8862, file: !3, line: 1841, column: 24)
!8867 = !DILocation(line: 1842, column: 18, scope: !8866)
!8868 = !DILocation(line: 1842, column: 24, scope: !8866)
!8869 = !DILocation(line: 1842, column: 11, scope: !8866)
!8870 = !DILocation(line: 1843, column: 7, scope: !8871)
!8871 = distinct !DILexicalBlock(scope: !8866, file: !3, line: 1843, column: 7)
!8872 = !DILocation(line: 1843, column: 11, scope: !8871)
!8873 = !DILocation(line: 1843, column: 16, scope: !8871)
!8874 = !DILocation(line: 1843, column: 7, scope: !8866)
!8875 = !DILocation(line: 1844, column: 33, scope: !8876)
!8876 = distinct !DILexicalBlock(scope: !8871, file: !3, line: 1843, column: 33)
!8877 = !DILocation(line: 1844, column: 42, scope: !8876)
!8878 = !DILocation(line: 1844, column: 14, scope: !8876)
!8879 = !DILocation(line: 1844, column: 12, scope: !8876)
!8880 = !DILocation(line: 1846, column: 8, scope: !8881)
!8881 = distinct !DILexicalBlock(scope: !8876, file: !3, line: 1846, column: 8)
!8882 = !DILocation(line: 1846, column: 16, scope: !8881)
!8883 = !DILocation(line: 1846, column: 8, scope: !8876)
!8884 = !DILocation(line: 1847, column: 30, scope: !8885)
!8885 = distinct !DILexicalBlock(scope: !8881, file: !3, line: 1846, column: 25)
!8886 = !DILocation(line: 1847, column: 16, scope: !8885)
!8887 = !DILocation(line: 1848, column: 13, scope: !8885)
!8888 = !DILocation(line: 1849, column: 4, scope: !8885)
!8889 = !DILocation(line: 1850, column: 3, scope: !8876)
!8890 = !DILocation(line: 1852, column: 8, scope: !8891)
!8891 = distinct !DILexicalBlock(scope: !8892, file: !3, line: 1852, column: 8)
!8892 = distinct !DILexicalBlock(scope: !8871, file: !3, line: 1851, column: 8)
!8893 = !DILocation(line: 1852, column: 17, scope: !8891)
!8894 = !DILocation(line: 1852, column: 14, scope: !8891)
!8895 = !DILocation(line: 1852, column: 8, scope: !8892)
!8896 = !DILocation(line: 1853, column: 36, scope: !8897)
!8897 = distinct !DILexicalBlock(scope: !8891, file: !3, line: 1852, column: 29)
!8898 = !DILocation(line: 1853, column: 45, scope: !8897)
!8899 = !DILocation(line: 1853, column: 15, scope: !8897)
!8900 = !DILocation(line: 1853, column: 13, scope: !8897)
!8901 = !DILocation(line: 1854, column: 4, scope: !8897)
!8902 = !DILocalVariable(name: "totweight_prev", scope: !8903, file: !3, line: 1857, type: !22)
!8903 = distinct !DILexicalBlock(scope: !8891, file: !3, line: 1855, column: 9)
!8904 = !DILocation(line: 1857, column: 9, scope: !8903)
!8905 = !DILocation(line: 1857, column: 26, scope: !8903)
!8906 = !DILocation(line: 1857, column: 35, scope: !8903)
!8907 = !DILocalVariable(name: "dw_offset", scope: !8903, file: !3, line: 1858, type: !22)
!8908 = !DILocation(line: 1858, column: 9, scope: !8903)
!8909 = !DILocation(line: 1858, column: 27, scope: !8903)
!8910 = !DILocation(line: 1858, column: 32, scope: !8903)
!8911 = !DILocation(line: 1858, column: 41, scope: !8903)
!8912 = !DILocation(line: 1858, column: 30, scope: !8903)
!8913 = !DILocation(line: 1858, column: 21, scope: !8903)
!8914 = !DILocation(line: 1859, column: 36, scope: !8903)
!8915 = !DILocation(line: 1859, column: 45, scope: !8903)
!8916 = !DILocation(line: 1859, column: 15, scope: !8903)
!8917 = !DILocation(line: 1859, column: 13, scope: !8903)
!8918 = !DILocation(line: 1862, column: 9, scope: !8919)
!8919 = distinct !DILexicalBlock(scope: !8903, file: !3, line: 1862, column: 9)
!8920 = !DILocation(line: 1862, column: 27, scope: !8919)
!8921 = !DILocation(line: 1862, column: 36, scope: !8919)
!8922 = !DILocation(line: 1862, column: 24, scope: !8919)
!8923 = !DILocation(line: 1862, column: 9, scope: !8903)
!8924 = !DILocation(line: 1863, column: 12, scope: !8925)
!8925 = distinct !DILexicalBlock(scope: !8919, file: !3, line: 1862, column: 47)
!8926 = !DILocation(line: 1863, column: 21, scope: !8925)
!8927 = !DILocation(line: 1863, column: 24, scope: !8925)
!8928 = !DILocation(line: 1863, column: 9, scope: !8925)
!8929 = !DILocation(line: 1864, column: 5, scope: !8925)
!8930 = !DILocation(line: 1867, column: 2, scope: !8866)
!8931 = !DILocation(line: 1869, column: 11, scope: !8932)
!8932 = distinct !DILexicalBlock(scope: !8862, file: !3, line: 1868, column: 7)
!8933 = !DILocation(line: 1870, column: 11, scope: !8932)
!8934 = !DILocation(line: 1879, column: 7, scope: !8935)
!8935 = distinct !DILexicalBlock(scope: !8725, file: !3, line: 1879, column: 6)
!8936 = !DILocation(line: 1879, column: 28, scope: !8935)
!8937 = !DILocation(line: 1879, column: 38, scope: !8935)
!8938 = !DILocation(line: 1880, column: 7, scope: !8935)
!8939 = !DILocation(line: 1880, column: 12, scope: !8935)
!8940 = !DILocation(line: 1880, column: 23, scope: !8935)
!8941 = !DILocation(line: 1880, column: 31, scope: !8935)
!8942 = !DILocation(line: 1880, column: 51, scope: !8935)
!8943 = !DILocation(line: 1880, column: 55, scope: !8935)
!8944 = !DILocation(line: 1880, column: 60, scope: !8935)
!8945 = !DILocation(line: 1880, column: 73, scope: !8935)
!8946 = !DILocation(line: 1880, column: 78, scope: !8935)
!8947 = !DILocation(line: 1880, column: 95, scope: !8935)
!8948 = !DILocation(line: 1880, column: 100, scope: !8935)
!8949 = !DILocation(line: 1880, column: 34, scope: !8935)
!8950 = !DILocation(line: 1880, column: 112, scope: !8935)
!8951 = !DILocation(line: 1879, column: 6, scope: !8725)
!8952 = !DILocation(line: 1882, column: 29, scope: !8953)
!8953 = distinct !DILexicalBlock(scope: !8935, file: !3, line: 1881, column: 2)
!8954 = !DILocation(line: 1882, column: 33, scope: !8953)
!8955 = !DILocation(line: 1882, column: 37, scope: !8953)
!8956 = !DILocation(line: 1882, column: 45, scope: !8953)
!8957 = !DILocation(line: 1882, column: 54, scope: !8953)
!8958 = !DILocation(line: 1882, column: 62, scope: !8953)
!8959 = !DILocation(line: 1882, column: 69, scope: !8953)
!8960 = !DILocation(line: 1883, column: 29, scope: !8953)
!8961 = !DILocation(line: 1883, column: 34, scope: !8953)
!8962 = !DILocation(line: 1883, column: 53, scope: !8953)
!8963 = !DILocation(line: 1883, column: 58, scope: !8953)
!8964 = !DILocation(line: 1882, column: 16, scope: !8953)
!8965 = !DILocation(line: 1882, column: 3, scope: !8953)
!8966 = !DILocation(line: 1882, column: 7, scope: !8953)
!8967 = !DILocation(line: 1882, column: 14, scope: !8953)
!8968 = !DILocation(line: 1889, column: 7, scope: !8969)
!8969 = distinct !DILexicalBlock(scope: !8953, file: !3, line: 1889, column: 7)
!8970 = !DILocation(line: 1889, column: 18, scope: !8969)
!8971 = !DILocation(line: 1889, column: 7, scope: !8953)
!8972 = !DILocation(line: 1891, column: 22, scope: !8973)
!8973 = distinct !DILexicalBlock(scope: !8969, file: !3, line: 1889, column: 25)
!8974 = !DILocation(line: 1891, column: 26, scope: !8973)
!8975 = !DILocation(line: 1891, column: 4, scope: !8973)
!8976 = !DILocation(line: 1891, column: 13, scope: !8973)
!8977 = !DILocation(line: 1891, column: 20, scope: !8973)
!8978 = !DILocation(line: 1892, column: 3, scope: !8973)
!8979 = !DILocation(line: 1895, column: 7, scope: !8980)
!8980 = distinct !DILexicalBlock(scope: !8953, file: !3, line: 1895, column: 7)
!8981 = !DILocation(line: 1895, column: 12, scope: !8980)
!8982 = !DILocation(line: 1895, column: 7, scope: !8953)
!8983 = !DILocation(line: 1908, column: 41, scope: !8984)
!8984 = distinct !DILexicalBlock(scope: !8980, file: !3, line: 1895, column: 31)
!8985 = !DILocation(line: 1908, column: 45, scope: !8984)
!8986 = !DILocation(line: 1908, column: 50, scope: !8984)
!8987 = !DILocation(line: 1908, column: 63, scope: !8984)
!8988 = !DILocation(line: 1908, column: 68, scope: !8984)
!8989 = !DILocation(line: 1908, column: 85, scope: !8984)
!8990 = !DILocation(line: 1908, column: 90, scope: !8984)
!8991 = !DILocation(line: 1908, column: 4, scope: !8984)
!8992 = !DILocation(line: 1910, column: 8, scope: !8993)
!8993 = distinct !DILexicalBlock(scope: !8984, file: !3, line: 1910, column: 8)
!8994 = !DILocation(line: 1910, column: 19, scope: !8993)
!8995 = !DILocation(line: 1910, column: 8, scope: !8984)
!8996 = !DILocation(line: 1912, column: 9, scope: !8997)
!8997 = distinct !DILexicalBlock(scope: !8998, file: !3, line: 1912, column: 9)
!8998 = distinct !DILexicalBlock(scope: !8993, file: !3, line: 1910, column: 26)
!8999 = !DILocation(line: 1912, column: 18, scope: !8997)
!9000 = !DILocation(line: 1912, column: 15, scope: !8997)
!9001 = !DILocation(line: 1912, column: 9, scope: !8998)
!9002 = !DILocation(line: 1913, column: 43, scope: !9003)
!9003 = distinct !DILexicalBlock(scope: !8997, file: !3, line: 1912, column: 30)
!9004 = !DILocation(line: 1913, column: 52, scope: !9003)
!9005 = !DILocation(line: 1913, column: 57, scope: !9003)
!9006 = !DILocation(line: 1913, column: 70, scope: !9003)
!9007 = !DILocation(line: 1913, column: 75, scope: !9003)
!9008 = !DILocation(line: 1913, column: 92, scope: !9003)
!9009 = !DILocation(line: 1913, column: 6, scope: !9003)
!9010 = !DILocation(line: 1914, column: 5, scope: !9003)
!9011 = !DILocation(line: 1931, column: 38, scope: !9012)
!9012 = distinct !DILexicalBlock(scope: !8997, file: !3, line: 1915, column: 10)
!9013 = !DILocation(line: 1931, column: 47, scope: !9012)
!9014 = !DILocation(line: 1931, column: 56, scope: !9012)
!9015 = !DILocation(line: 1931, column: 60, scope: !9012)
!9016 = !DILocation(line: 1931, column: 54, scope: !9012)
!9017 = !DILocation(line: 1931, column: 68, scope: !9012)
!9018 = !DILocation(line: 1931, column: 24, scope: !9012)
!9019 = !DILocation(line: 1931, column: 28, scope: !9012)
!9020 = !DILocation(line: 1931, column: 35, scope: !9012)
!9021 = !DILocation(line: 1931, column: 6, scope: !9012)
!9022 = !DILocation(line: 1931, column: 15, scope: !9012)
!9023 = !DILocation(line: 1931, column: 22, scope: !9012)
!9024 = !DILocation(line: 1933, column: 4, scope: !8998)
!9025 = !DILocation(line: 1934, column: 3, scope: !8984)
!9026 = !DILocation(line: 1935, column: 2, scope: !8953)
!9027 = !DILocalVariable(name: "oldw", scope: !9028, file: !3, line: 1938, type: !210)
!9028 = distinct !DILexicalBlock(scope: !8935, file: !3, line: 1936, column: 7)
!9029 = !DILocation(line: 1938, column: 9, scope: !9028)
!9030 = !DILocalVariable(name: "neww", scope: !9028, file: !3, line: 1939, type: !210)
!9031 = !DILocation(line: 1939, column: 9, scope: !9028)
!9032 = !DILocalVariable(name: "observedChange", scope: !9028, file: !3, line: 1941, type: !210)
!9033 = !DILocation(line: 1941, column: 9, scope: !9028)
!9034 = !DILocalVariable(name: "change", scope: !9028, file: !3, line: 1942, type: !210)
!9035 = !DILocation(line: 1942, column: 9, scope: !9028)
!9036 = !DILocalVariable(name: "oldChange", scope: !9028, file: !3, line: 1943, type: !210)
!9037 = !DILocation(line: 1943, column: 9, scope: !9028)
!9038 = !DILocalVariable(name: "i", scope: !9028, file: !3, line: 1944, type: !22)
!9039 = !DILocation(line: 1944, column: 7, scope: !9028)
!9040 = !DILocalVariable(name: "tdw", scope: !9028, file: !3, line: 1945, type: !3404)
!9041 = !DILocation(line: 1945, column: 18, scope: !9028)
!9042 = !DILocalVariable(name: "tdw_prev", scope: !9028, file: !3, line: 1945, type: !3404)
!9043 = !DILocation(line: 1945, column: 31, scope: !9028)
!9044 = !DILocalVariable(name: "dv_copy", scope: !9028, file: !3, line: 1946, type: !3407)
!9045 = !DILocation(line: 1946, column: 15, scope: !9028)
!9046 = !DILocation(line: 1948, column: 10, scope: !9028)
!9047 = !DILocation(line: 1948, column: 14, scope: !9028)
!9048 = !DILocation(line: 1948, column: 8, scope: !9028)
!9049 = !DILocation(line: 1949, column: 23, scope: !9028)
!9050 = !DILocation(line: 1949, column: 27, scope: !9028)
!9051 = !DILocation(line: 1949, column: 31, scope: !9028)
!9052 = !DILocation(line: 1949, column: 39, scope: !9028)
!9053 = !DILocation(line: 1949, column: 48, scope: !9028)
!9054 = !DILocation(line: 1949, column: 56, scope: !9028)
!9055 = !DILocation(line: 1949, column: 63, scope: !9028)
!9056 = !DILocation(line: 1950, column: 23, scope: !9028)
!9057 = !DILocation(line: 1950, column: 28, scope: !9028)
!9058 = !DILocation(line: 1950, column: 47, scope: !9028)
!9059 = !DILocation(line: 1950, column: 52, scope: !9028)
!9060 = !DILocation(line: 1950, column: 61, scope: !9028)
!9061 = !DILocation(line: 1949, column: 10, scope: !9028)
!9062 = !DILocation(line: 1949, column: 8, scope: !9028)
!9063 = !DILocation(line: 1953, column: 20, scope: !9028)
!9064 = !DILocation(line: 1953, column: 27, scope: !9028)
!9065 = !DILocation(line: 1953, column: 25, scope: !9028)
!9066 = !DILocation(line: 1953, column: 18, scope: !9028)
!9067 = !DILocation(line: 1954, column: 7, scope: !9068)
!9068 = distinct !DILexicalBlock(scope: !9028, file: !3, line: 1954, column: 7)
!9069 = !DILocation(line: 1954, column: 28, scope: !9068)
!9070 = !DILocation(line: 1954, column: 31, scope: !9068)
!9071 = !DILocation(line: 1954, column: 7, scope: !9028)
!9072 = !DILocation(line: 1955, column: 17, scope: !9073)
!9073 = distinct !DILexicalBlock(scope: !9068, file: !3, line: 1954, column: 47)
!9074 = !DILocation(line: 1955, column: 31, scope: !9073)
!9075 = !DILocation(line: 1955, column: 35, scope: !9073)
!9076 = !DILocation(line: 1955, column: 12, scope: !9073)
!9077 = !DILocation(line: 1955, column: 15, scope: !9073)
!9078 = !DILocation(line: 1956, column: 19, scope: !9073)
!9079 = !DILocation(line: 1956, column: 23, scope: !9073)
!9080 = !DILocation(line: 1956, column: 12, scope: !9073)
!9081 = !DILocation(line: 1956, column: 17, scope: !9073)
!9082 = !DILocation(line: 1957, column: 24, scope: !9073)
!9083 = !DILocation(line: 1957, column: 28, scope: !9073)
!9084 = !DILocation(line: 1957, column: 12, scope: !9073)
!9085 = !DILocation(line: 1957, column: 22, scope: !9073)
!9086 = !DILocation(line: 1958, column: 10, scope: !9073)
!9087 = !DILocation(line: 1958, column: 8, scope: !9073)
!9088 = !DILocation(line: 1959, column: 15, scope: !9073)
!9089 = !DILocation(line: 1959, column: 13, scope: !9073)
!9090 = !DILocation(line: 1960, column: 28, scope: !9073)
!9091 = !DILocation(line: 1960, column: 32, scope: !9073)
!9092 = !DILocation(line: 1960, column: 44, scope: !9073)
!9093 = !DILocation(line: 1960, column: 52, scope: !9073)
!9094 = !DILocation(line: 1960, column: 57, scope: !9073)
!9095 = !DILocation(line: 1960, column: 70, scope: !9073)
!9096 = !DILocation(line: 1960, column: 75, scope: !9073)
!9097 = !DILocation(line: 1960, column: 88, scope: !9073)
!9098 = !DILocation(line: 1960, column: 13, scope: !9073)
!9099 = !DILocation(line: 1960, column: 11, scope: !9073)
!9100 = !DILocation(line: 1961, column: 8, scope: !9101)
!9101 = distinct !DILexicalBlock(scope: !9073, file: !3, line: 1961, column: 8)
!9102 = !DILocation(line: 1961, column: 8, scope: !9073)
!9103 = !DILocation(line: 1962, column: 10, scope: !9104)
!9104 = distinct !DILexicalBlock(scope: !9105, file: !3, line: 1962, column: 9)
!9105 = distinct !DILexicalBlock(scope: !9101, file: !3, line: 1961, column: 16)
!9106 = !DILocation(line: 1962, column: 15, scope: !9104)
!9107 = !DILocation(line: 1962, column: 9, scope: !9105)
!9108 = !DILocation(line: 1963, column: 44, scope: !9109)
!9109 = distinct !DILexicalBlock(scope: !9104, file: !3, line: 1962, column: 23)
!9110 = !DILocation(line: 1963, column: 48, scope: !9109)
!9111 = !DILocation(line: 1963, column: 53, scope: !9109)
!9112 = !DILocation(line: 1963, column: 66, scope: !9109)
!9113 = !DILocation(line: 1963, column: 71, scope: !9109)
!9114 = !DILocation(line: 1963, column: 10, scope: !9109)
!9115 = !DILocation(line: 1963, column: 8, scope: !9109)
!9116 = !DILocation(line: 1964, column: 10, scope: !9117)
!9117 = distinct !DILexicalBlock(scope: !9109, file: !3, line: 1964, column: 10)
!9118 = !DILocation(line: 1964, column: 12, scope: !9117)
!9119 = !DILocation(line: 1964, column: 10, scope: !9109)
!9120 = !DILocation(line: 1965, column: 15, scope: !9121)
!9121 = distinct !DILexicalBlock(scope: !9117, file: !3, line: 1964, column: 18)
!9122 = !DILocation(line: 1965, column: 19, scope: !9121)
!9123 = !DILocation(line: 1965, column: 22, scope: !9121)
!9124 = !DILocation(line: 1965, column: 11, scope: !9121)
!9125 = !DILocation(line: 1966, column: 40, scope: !9121)
!9126 = !DILocation(line: 1966, column: 44, scope: !9121)
!9127 = !DILocation(line: 1966, column: 56, scope: !9121)
!9128 = !DILocation(line: 1966, column: 64, scope: !9121)
!9129 = !DILocation(line: 1966, column: 69, scope: !9121)
!9130 = !DILocation(line: 1966, column: 18, scope: !9121)
!9131 = !DILocation(line: 1966, column: 16, scope: !9121)
!9132 = !DILocation(line: 1967, column: 6, scope: !9121)
!9133 = !DILocation(line: 1969, column: 14, scope: !9134)
!9134 = distinct !DILexicalBlock(scope: !9117, file: !3, line: 1968, column: 11)
!9135 = !DILocation(line: 1971, column: 5, scope: !9109)
!9136 = !DILocation(line: 1972, column: 9, scope: !9137)
!9137 = distinct !DILexicalBlock(scope: !9105, file: !3, line: 1972, column: 9)
!9138 = !DILocation(line: 1972, column: 16, scope: !9137)
!9139 = !DILocation(line: 1972, column: 19, scope: !9137)
!9140 = !DILocation(line: 1972, column: 29, scope: !9137)
!9141 = !DILocation(line: 1972, column: 36, scope: !9137)
!9142 = !DILocation(line: 1972, column: 39, scope: !9137)
!9143 = !DILocation(line: 1972, column: 49, scope: !9137)
!9144 = !DILocation(line: 1972, column: 58, scope: !9137)
!9145 = !DILocation(line: 1972, column: 56, scope: !9137)
!9146 = !DILocation(line: 1972, column: 9, scope: !9105)
!9147 = !DILocation(line: 1973, column: 10, scope: !9148)
!9148 = distinct !DILexicalBlock(scope: !9149, file: !3, line: 1973, column: 10)
!9149 = distinct !DILexicalBlock(scope: !9137, file: !3, line: 1972, column: 66)
!9150 = !DILocation(line: 1973, column: 15, scope: !9148)
!9151 = !DILocation(line: 1973, column: 25, scope: !9148)
!9152 = !DILocation(line: 1973, column: 35, scope: !9148)
!9153 = !DILocation(line: 1973, column: 22, scope: !9148)
!9154 = !DILocation(line: 1973, column: 10, scope: !9149)
!9155 = !DILocation(line: 1974, column: 19, scope: !9156)
!9156 = distinct !DILexicalBlock(scope: !9148, file: !3, line: 1973, column: 43)
!9157 = !DILocation(line: 1974, column: 24, scope: !9156)
!9158 = !DILocation(line: 1974, column: 33, scope: !9156)
!9159 = !DILocation(line: 1974, column: 43, scope: !9156)
!9160 = !DILocation(line: 1974, column: 31, scope: !9156)
!9161 = !DILocation(line: 1974, column: 17, scope: !9156)
!9162 = !DILocation(line: 1976, column: 11, scope: !9163)
!9163 = distinct !DILexicalBlock(scope: !9156, file: !3, line: 1976, column: 11)
!9164 = !DILocation(line: 1976, column: 26, scope: !9163)
!9165 = !DILocation(line: 1976, column: 11, scope: !9156)
!9166 = !DILocation(line: 1977, column: 12, scope: !9167)
!9167 = distinct !DILexicalBlock(scope: !9168, file: !3, line: 1977, column: 12)
!9168 = distinct !DILexicalBlock(scope: !9163, file: !3, line: 1976, column: 31)
!9169 = !DILocation(line: 1977, column: 21, scope: !9167)
!9170 = !DILocation(line: 1977, column: 19, scope: !9167)
!9171 = !DILocation(line: 1977, column: 12, scope: !9168)
!9172 = !DILocation(line: 1979, column: 31, scope: !9173)
!9173 = distinct !DILexicalBlock(scope: !9167, file: !3, line: 1977, column: 32)
!9174 = !DILocation(line: 1979, column: 35, scope: !9173)
!9175 = !DILocation(line: 1979, column: 49, scope: !9173)
!9176 = !DILocation(line: 1979, column: 47, scope: !9173)
!9177 = !DILocation(line: 1979, column: 56, scope: !9173)
!9178 = !DILocation(line: 1979, column: 9, scope: !9173)
!9179 = !DILocation(line: 1980, column: 8, scope: !9173)
!9180 = !DILocation(line: 1984, column: 16, scope: !9181)
!9181 = distinct !DILexicalBlock(scope: !9167, file: !3, line: 1981, column: 13)
!9182 = !DILocation(line: 1986, column: 7, scope: !9168)
!9183 = !DILocation(line: 1988, column: 12, scope: !9184)
!9184 = distinct !DILexicalBlock(scope: !9185, file: !3, line: 1988, column: 12)
!9185 = distinct !DILexicalBlock(scope: !9163, file: !3, line: 1987, column: 12)
!9186 = !DILocation(line: 1988, column: 21, scope: !9184)
!9187 = !DILocation(line: 1988, column: 19, scope: !9184)
!9188 = !DILocation(line: 1988, column: 12, scope: !9185)
!9189 = !DILocation(line: 1989, column: 31, scope: !9190)
!9190 = distinct !DILexicalBlock(scope: !9184, file: !3, line: 1988, column: 32)
!9191 = !DILocation(line: 1989, column: 35, scope: !9190)
!9192 = !DILocation(line: 1989, column: 49, scope: !9190)
!9193 = !DILocation(line: 1989, column: 47, scope: !9190)
!9194 = !DILocation(line: 1989, column: 56, scope: !9190)
!9195 = !DILocation(line: 1989, column: 9, scope: !9190)
!9196 = !DILocation(line: 1990, column: 8, scope: !9190)
!9197 = !DILocation(line: 1992, column: 16, scope: !9198)
!9198 = distinct !DILexicalBlock(scope: !9184, file: !3, line: 1991, column: 13)
!9199 = !DILocation(line: 1995, column: 6, scope: !9156)
!9200 = !DILocation(line: 1996, column: 5, scope: !9149)
!9201 = !DILocation(line: 1998, column: 13, scope: !9202)
!9202 = distinct !DILexicalBlock(scope: !9137, file: !3, line: 1997, column: 10)
!9203 = !DILocation(line: 2000, column: 4, scope: !9105)
!9204 = !DILocation(line: 2001, column: 3, scope: !9073)
!9205 = !DILocation(line: 2003, column: 32, scope: !9206)
!9206 = distinct !DILexicalBlock(scope: !9028, file: !3, line: 2003, column: 7)
!9207 = !DILocation(line: 2003, column: 36, scope: !9206)
!9208 = !DILocation(line: 2003, column: 41, scope: !9206)
!9209 = !DILocation(line: 2003, column: 48, scope: !9206)
!9210 = !DILocation(line: 2003, column: 52, scope: !9206)
!9211 = !DILocation(line: 2003, column: 57, scope: !9206)
!9212 = !DILocation(line: 2003, column: 65, scope: !9206)
!9213 = !DILocation(line: 2003, column: 76, scope: !9206)
!9214 = !DILocation(line: 2003, column: 82, scope: !9206)
!9215 = !DILocation(line: 2003, column: 7, scope: !9206)
!9216 = !DILocation(line: 2003, column: 7, scope: !9028)
!9217 = !DILocation(line: 2004, column: 36, scope: !9218)
!9218 = distinct !DILexicalBlock(scope: !9206, file: !3, line: 2003, column: 89)
!9219 = !DILocation(line: 2004, column: 4, scope: !9218)
!9220 = !DILocation(line: 2005, column: 11, scope: !9218)
!9221 = !DILocation(line: 2006, column: 14, scope: !9218)
!9222 = !DILocation(line: 2007, column: 3, scope: !9218)
!9223 = !DILocation(line: 2008, column: 15, scope: !9224)
!9224 = distinct !DILexicalBlock(scope: !9028, file: !3, line: 2008, column: 7)
!9225 = !DILocation(line: 2008, column: 7, scope: !9224)
!9226 = !DILocation(line: 2008, column: 7, scope: !9028)
!9227 = !DILocation(line: 2009, column: 4, scope: !9228)
!9228 = distinct !DILexicalBlock(scope: !9224, file: !3, line: 2008, column: 19)
!9229 = !DILocation(line: 2009, column: 22, scope: !9228)
!9230 = !DILocation(line: 2009, column: 14, scope: !9228)
!9231 = !DILocation(line: 2010, column: 3, scope: !9228)
!9232 = !DILocation(line: 2015, column: 6, scope: !9028)
!9233 = !DILocation(line: 2017, column: 9, scope: !9028)
!9234 = !DILocation(line: 2021, column: 7, scope: !9235)
!9235 = distinct !DILexicalBlock(scope: !9028, file: !3, line: 2021, column: 7)
!9236 = !DILocation(line: 2021, column: 18, scope: !9235)
!9237 = !DILocation(line: 2021, column: 7, scope: !9028)
!9238 = !DILocation(line: 2025, column: 29, scope: !9239)
!9239 = distinct !DILexicalBlock(scope: !9235, file: !3, line: 2021, column: 25)
!9240 = !DILocation(line: 2025, column: 33, scope: !9239)
!9241 = !DILocation(line: 2025, column: 38, scope: !9239)
!9242 = !DILocation(line: 2025, column: 50, scope: !9239)
!9243 = !DILocation(line: 2025, column: 59, scope: !9239)
!9244 = !DILocation(line: 2025, column: 64, scope: !9239)
!9245 = !DILocation(line: 2025, column: 72, scope: !9239)
!9246 = !DILocation(line: 2025, column: 83, scope: !9239)
!9247 = !DILocation(line: 2025, column: 89, scope: !9239)
!9248 = !DILocation(line: 2025, column: 4, scope: !9239)
!9249 = !DILocation(line: 2026, column: 3, scope: !9239)
!9250 = !DILocation(line: 2028, column: 1, scope: !8725)
!9251 = distinct !DISubprogram(name: "len_squared_v2v2", scope: !9252, file: !9252, line: 719, type: !9253, scopeLine: 720, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2758, retainedNodes: !3422)
!9252 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_vector_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!9253 = !DISubroutineType(types: !9254)
!9254 = !{!210, !804, !804}
!9255 = !DILocalVariable(name: "a", arg: 1, scope: !9251, file: !9252, line: 719, type: !804)
!9256 = !DILocation(line: 719, column: 44, scope: !9251)
!9257 = !DILocalVariable(name: "b", arg: 2, scope: !9251, file: !9252, line: 719, type: !804)
!9258 = !DILocation(line: 719, column: 62, scope: !9251)
!9259 = !DILocalVariable(name: "d", scope: !9251, file: !9252, line: 721, type: !1052)
!9260 = !DILocation(line: 721, column: 8, scope: !9251)
!9261 = !DILocation(line: 723, column: 14, scope: !9251)
!9262 = !DILocation(line: 723, column: 17, scope: !9251)
!9263 = !DILocation(line: 723, column: 20, scope: !9251)
!9264 = !DILocation(line: 723, column: 2, scope: !9251)
!9265 = !DILocation(line: 724, column: 18, scope: !9251)
!9266 = !DILocation(line: 724, column: 21, scope: !9251)
!9267 = !DILocation(line: 724, column: 9, scope: !9251)
!9268 = !DILocation(line: 724, column: 2, scope: !9251)
!9269 = distinct !DISubprogram(name: "zero_v4", scope: !9252, file: !9252, line: 50, type: !9270, scopeLine: 51, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2758, retainedNodes: !3422)
!9270 = !DISubroutineType(types: !9271)
!9271 = !{null, !242}
!9272 = !DILocalVariable(name: "r", arg: 1, scope: !9269, file: !9252, line: 50, type: !242)
!9273 = !DILocation(line: 50, column: 28, scope: !9269)
!9274 = !DILocation(line: 52, column: 2, scope: !9269)
!9275 = !DILocation(line: 52, column: 7, scope: !9269)
!9276 = !DILocation(line: 53, column: 2, scope: !9269)
!9277 = !DILocation(line: 53, column: 7, scope: !9269)
!9278 = !DILocation(line: 54, column: 2, scope: !9269)
!9279 = !DILocation(line: 54, column: 7, scope: !9269)
!9280 = !DILocation(line: 55, column: 2, scope: !9269)
!9281 = !DILocation(line: 55, column: 7, scope: !9269)
!9282 = !DILocation(line: 56, column: 1, scope: !9269)
!9283 = distinct !DISubprogram(name: "sub_v2_v2v2", scope: !9252, file: !9252, line: 338, type: !9284, scopeLine: 339, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2758, retainedNodes: !3422)
!9284 = !DISubroutineType(types: !9285)
!9285 = !{null, !242, !804, !804}
!9286 = !DILocalVariable(name: "r", arg: 1, scope: !9283, file: !9252, line: 338, type: !242)
!9287 = !DILocation(line: 338, column: 32, scope: !9283)
!9288 = !DILocalVariable(name: "a", arg: 2, scope: !9283, file: !9252, line: 338, type: !804)
!9289 = !DILocation(line: 338, column: 50, scope: !9283)
!9290 = !DILocalVariable(name: "b", arg: 3, scope: !9283, file: !9252, line: 338, type: !804)
!9291 = !DILocation(line: 338, column: 68, scope: !9283)
!9292 = !DILocation(line: 340, column: 9, scope: !9283)
!9293 = !DILocation(line: 340, column: 16, scope: !9283)
!9294 = !DILocation(line: 340, column: 14, scope: !9283)
!9295 = !DILocation(line: 340, column: 2, scope: !9283)
!9296 = !DILocation(line: 340, column: 7, scope: !9283)
!9297 = !DILocation(line: 341, column: 9, scope: !9283)
!9298 = !DILocation(line: 341, column: 16, scope: !9283)
!9299 = !DILocation(line: 341, column: 14, scope: !9283)
!9300 = !DILocation(line: 341, column: 2, scope: !9283)
!9301 = !DILocation(line: 341, column: 7, scope: !9283)
!9302 = !DILocation(line: 342, column: 1, scope: !9283)
!9303 = distinct !DISubprogram(name: "dot_v2v2", scope: !9252, file: !9252, line: 614, type: !9253, scopeLine: 615, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2758, retainedNodes: !3422)
!9304 = !DILocalVariable(name: "a", arg: 1, scope: !9303, file: !9252, line: 614, type: !804)
!9305 = !DILocation(line: 614, column: 36, scope: !9303)
!9306 = !DILocalVariable(name: "b", arg: 2, scope: !9303, file: !9252, line: 614, type: !804)
!9307 = !DILocation(line: 614, column: 54, scope: !9303)
!9308 = !DILocation(line: 616, column: 9, scope: !9303)
!9309 = !DILocation(line: 616, column: 16, scope: !9303)
!9310 = !DILocation(line: 616, column: 14, scope: !9303)
!9311 = !DILocation(line: 616, column: 23, scope: !9303)
!9312 = !DILocation(line: 616, column: 30, scope: !9303)
!9313 = !DILocation(line: 616, column: 28, scope: !9303)
!9314 = !DILocation(line: 616, column: 21, scope: !9303)
!9315 = !DILocation(line: 616, column: 2, scope: !9303)
!9316 = distinct !DISubprogram(name: "dot_v3v3", scope: !9252, file: !9252, line: 619, type: !9253, scopeLine: 620, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2758, retainedNodes: !3422)
!9317 = !DILocalVariable(name: "a", arg: 1, scope: !9316, file: !9252, line: 619, type: !804)
!9318 = !DILocation(line: 619, column: 36, scope: !9316)
!9319 = !DILocalVariable(name: "b", arg: 2, scope: !9316, file: !9252, line: 619, type: !804)
!9320 = !DILocation(line: 619, column: 54, scope: !9316)
!9321 = !DILocation(line: 621, column: 9, scope: !9316)
!9322 = !DILocation(line: 621, column: 16, scope: !9316)
!9323 = !DILocation(line: 621, column: 14, scope: !9316)
!9324 = !DILocation(line: 621, column: 23, scope: !9316)
!9325 = !DILocation(line: 621, column: 30, scope: !9316)
!9326 = !DILocation(line: 621, column: 28, scope: !9316)
!9327 = !DILocation(line: 621, column: 21, scope: !9316)
!9328 = !DILocation(line: 621, column: 37, scope: !9316)
!9329 = !DILocation(line: 621, column: 44, scope: !9316)
!9330 = !DILocation(line: 621, column: 42, scope: !9316)
!9331 = !DILocation(line: 621, column: 35, scope: !9316)
!9332 = !DILocation(line: 621, column: 2, scope: !9316)
!9333 = distinct !DISubprogram(name: "len_v3", scope: !9252, file: !9252, line: 714, type: !9334, scopeLine: 715, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2758, retainedNodes: !3422)
!9334 = !DISubroutineType(types: !9335)
!9335 = !{!210, !804}
!9336 = !DILocalVariable(name: "a", arg: 1, scope: !9333, file: !9252, line: 714, type: !804)
!9337 = !DILocation(line: 714, column: 34, scope: !9333)
!9338 = !DILocation(line: 716, column: 24, scope: !9333)
!9339 = !DILocation(line: 716, column: 27, scope: !9333)
!9340 = !DILocation(line: 716, column: 15, scope: !9333)
!9341 = !DILocation(line: 716, column: 9, scope: !9333)
!9342 = !DILocation(line: 716, column: 2, scope: !9333)
!9343 = distinct !DISubprogram(name: "has_locked_group", scope: !3, file: !3, line: 1382, type: !9344, scopeLine: 1384, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2758, retainedNodes: !3422)
!9344 = !DISubroutineType(types: !9345)
!9345 = !{!259, !3406, !3408, !3412, !3412}
!9346 = !DILocalVariable(name: "dvert", arg: 1, scope: !9343, file: !3, line: 1382, type: !3406)
!9347 = !DILocation(line: 1382, column: 43, scope: !9343)
!9348 = !DILocalVariable(name: "defbase_tot", arg: 2, scope: !9343, file: !3, line: 1382, type: !3408)
!9349 = !DILocation(line: 1382, column: 60, scope: !9343)
!9350 = !DILocalVariable(name: "bone_groups", arg: 3, scope: !9343, file: !3, line: 1383, type: !3412)
!9351 = !DILocation(line: 1383, column: 42, scope: !9343)
!9352 = !DILocalVariable(name: "lock_flags", arg: 4, scope: !9343, file: !3, line: 1383, type: !3412)
!9353 = !DILocation(line: 1383, column: 67, scope: !9343)
!9354 = !DILocalVariable(name: "i", scope: !9343, file: !3, line: 1385, type: !22)
!9355 = !DILocation(line: 1385, column: 6, scope: !9343)
!9356 = !DILocalVariable(name: "dw", scope: !9343, file: !3, line: 1386, type: !3404)
!9357 = !DILocation(line: 1386, column: 17, scope: !9343)
!9358 = !DILocation(line: 1388, column: 11, scope: !9359)
!9359 = distinct !DILexicalBlock(scope: !9343, file: !3, line: 1388, column: 2)
!9360 = !DILocation(line: 1388, column: 18, scope: !9359)
!9361 = !DILocation(line: 1388, column: 9, scope: !9359)
!9362 = !DILocation(line: 1388, column: 34, scope: !9359)
!9363 = !DILocation(line: 1388, column: 41, scope: !9359)
!9364 = !DILocation(line: 1388, column: 32, scope: !9359)
!9365 = !DILocation(line: 1388, column: 7, scope: !9359)
!9366 = !DILocation(line: 1388, column: 45, scope: !9367)
!9367 = distinct !DILexicalBlock(scope: !9359, file: !3, line: 1388, column: 2)
!9368 = !DILocation(line: 1388, column: 47, scope: !9367)
!9369 = !DILocation(line: 1388, column: 2, scope: !9359)
!9370 = !DILocation(line: 1389, column: 7, scope: !9371)
!9371 = distinct !DILexicalBlock(scope: !9372, file: !3, line: 1389, column: 7)
!9372 = distinct !DILexicalBlock(scope: !9367, file: !3, line: 1388, column: 64)
!9373 = !DILocation(line: 1389, column: 11, scope: !9371)
!9374 = !DILocation(line: 1389, column: 20, scope: !9371)
!9375 = !DILocation(line: 1389, column: 18, scope: !9371)
!9376 = !DILocation(line: 1389, column: 7, scope: !9372)
!9377 = !DILocation(line: 1390, column: 8, scope: !9378)
!9378 = distinct !DILexicalBlock(scope: !9379, file: !3, line: 1390, column: 8)
!9379 = distinct !DILexicalBlock(scope: !9371, file: !3, line: 1389, column: 33)
!9380 = !DILocation(line: 1390, column: 20, scope: !9378)
!9381 = !DILocation(line: 1390, column: 24, scope: !9378)
!9382 = !DILocation(line: 1390, column: 32, scope: !9378)
!9383 = !DILocation(line: 1390, column: 35, scope: !9378)
!9384 = !DILocation(line: 1390, column: 46, scope: !9378)
!9385 = !DILocation(line: 1390, column: 50, scope: !9378)
!9386 = !DILocation(line: 1390, column: 58, scope: !9378)
!9387 = !DILocation(line: 1390, column: 61, scope: !9378)
!9388 = !DILocation(line: 1390, column: 65, scope: !9378)
!9389 = !DILocation(line: 1390, column: 72, scope: !9378)
!9390 = !DILocation(line: 1390, column: 8, scope: !9379)
!9391 = !DILocation(line: 1391, column: 5, scope: !9392)
!9392 = distinct !DILexicalBlock(scope: !9378, file: !3, line: 1390, column: 80)
!9393 = !DILocation(line: 1393, column: 3, scope: !9379)
!9394 = !DILocation(line: 1394, column: 2, scope: !9372)
!9395 = !DILocation(line: 1388, column: 54, scope: !9367)
!9396 = !DILocation(line: 1388, column: 60, scope: !9367)
!9397 = !DILocation(line: 1388, column: 2, scope: !9367)
!9398 = distinct !{!9398, !9369, !9399}
!9399 = !DILocation(line: 1394, column: 2, scope: !9359)
!9400 = !DILocation(line: 1395, column: 2, scope: !9343)
!9401 = !DILocation(line: 1396, column: 1, scope: !9343)
!9402 = distinct !DISubprogram(name: "wpaint_blend", scope: !3, file: !3, line: 1030, type: !9403, scopeLine: 1034, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2758, retainedNodes: !3422)
!9403 = !DISubroutineType(types: !9404)
!9404 = !{!210, !1538, !210, !210, !637, !210, !637, !806, !806}
!9405 = !DILocalVariable(name: "wp", arg: 1, scope: !9402, file: !3, line: 1030, type: !1538)
!9406 = !DILocation(line: 1030, column: 35, scope: !9402)
!9407 = !DILocalVariable(name: "weight", arg: 2, scope: !9402, file: !3, line: 1030, type: !210)
!9408 = !DILocation(line: 1030, column: 45, scope: !9402)
!9409 = !DILocalVariable(name: "weight_prev", arg: 3, scope: !9402, file: !3, line: 1030, type: !210)
!9410 = !DILocation(line: 1030, column: 59, scope: !9402)
!9411 = !DILocalVariable(name: "alpha", arg: 4, scope: !9402, file: !3, line: 1031, type: !637)
!9412 = !DILocation(line: 1031, column: 39, scope: !9402)
!9413 = !DILocalVariable(name: "paintval", arg: 5, scope: !9402, file: !3, line: 1031, type: !210)
!9414 = !DILocation(line: 1031, column: 52, scope: !9402)
!9415 = !DILocalVariable(name: "brush_alpha_value", arg: 6, scope: !9402, file: !3, line: 1032, type: !637)
!9416 = !DILocation(line: 1032, column: 39, scope: !9402)
!9417 = !DILocalVariable(name: "do_flip", arg: 7, scope: !9402, file: !3, line: 1033, type: !806)
!9418 = !DILocation(line: 1033, column: 39, scope: !9402)
!9419 = !DILocalVariable(name: "do_multipaint_totsel", arg: 8, scope: !9402, file: !3, line: 1033, type: !806)
!9420 = !DILocation(line: 1033, column: 60, scope: !9402)
!9421 = !DILocalVariable(name: "brush", scope: !9402, file: !3, line: 1035, type: !3695)
!9422 = !DILocation(line: 1035, column: 9, scope: !9402)
!9423 = !DILocation(line: 1035, column: 34, scope: !9402)
!9424 = !DILocation(line: 1035, column: 38, scope: !9402)
!9425 = !DILocation(line: 1035, column: 17, scope: !9402)
!9426 = !DILocalVariable(name: "tool", scope: !9402, file: !3, line: 1036, type: !22)
!9427 = !DILocation(line: 1036, column: 6, scope: !9402)
!9428 = !DILocation(line: 1036, column: 13, scope: !9402)
!9429 = !DILocation(line: 1036, column: 20, scope: !9402)
!9430 = !DILocation(line: 1038, column: 6, scope: !9431)
!9431 = distinct !DILexicalBlock(scope: !9402, file: !3, line: 1038, column: 6)
!9432 = !DILocation(line: 1038, column: 6, scope: !9402)
!9433 = !DILocation(line: 1039, column: 11, scope: !9434)
!9434 = distinct !DILexicalBlock(scope: !9431, file: !3, line: 1038, column: 15)
!9435 = !DILocation(line: 1039, column: 3, scope: !9434)
!9436 = !DILocation(line: 1041, column: 22, scope: !9437)
!9437 = distinct !DILexicalBlock(scope: !9434, file: !3, line: 1039, column: 17)
!9438 = !DILocation(line: 1041, column: 20, scope: !9437)
!9439 = !DILocation(line: 1041, column: 14, scope: !9437)
!9440 = !DILocation(line: 1041, column: 32, scope: !9437)
!9441 = !DILocation(line: 1043, column: 10, scope: !9437)
!9442 = !DILocation(line: 1043, column: 29, scope: !9437)
!9443 = !DILocation(line: 1045, column: 10, scope: !9437)
!9444 = !DILocation(line: 1045, column: 29, scope: !9437)
!9445 = !DILocation(line: 1047, column: 10, scope: !9437)
!9446 = !DILocation(line: 1047, column: 32, scope: !9437)
!9447 = !DILocation(line: 1049, column: 10, scope: !9437)
!9448 = !DILocation(line: 1049, column: 33, scope: !9437)
!9449 = !DILocation(line: 1051, column: 2, scope: !9434)
!9450 = !DILocation(line: 1053, column: 29, scope: !9402)
!9451 = !DILocation(line: 1053, column: 35, scope: !9402)
!9452 = !DILocation(line: 1053, column: 43, scope: !9402)
!9453 = !DILocation(line: 1053, column: 53, scope: !9402)
!9454 = !DILocation(line: 1053, column: 11, scope: !9402)
!9455 = !DILocation(line: 1053, column: 9, scope: !9402)
!9456 = !DILocation(line: 1056, column: 6, scope: !9457)
!9457 = distinct !DILexicalBlock(scope: !9402, file: !3, line: 1056, column: 6)
!9458 = !DILocation(line: 1056, column: 27, scope: !9457)
!9459 = !DILocation(line: 1056, column: 6, scope: !9402)
!9460 = !DILocation(line: 1057, column: 3, scope: !9461)
!9461 = distinct !DILexicalBlock(scope: !9462, file: !3, line: 1057, column: 3)
!9462 = distinct !DILexicalBlock(scope: !9463, file: !3, line: 1057, column: 3)
!9463 = distinct !DILexicalBlock(scope: !9457, file: !3, line: 1056, column: 37)
!9464 = !DILocation(line: 1057, column: 3, scope: !9462)
!9465 = !DILocation(line: 1057, column: 3, scope: !9466)
!9466 = distinct !DILexicalBlock(scope: !9461, file: !3, line: 1057, column: 3)
!9467 = !DILocation(line: 1058, column: 2, scope: !9463)
!9468 = !DILocation(line: 1061, column: 7, scope: !9469)
!9469 = distinct !DILexicalBlock(scope: !9402, file: !3, line: 1061, column: 6)
!9470 = !DILocation(line: 1061, column: 11, scope: !9469)
!9471 = !DILocation(line: 1061, column: 16, scope: !9469)
!9472 = !DILocation(line: 1061, column: 28, scope: !9469)
!9473 = !DILocation(line: 1061, column: 6, scope: !9402)
!9474 = !DILocation(line: 1062, column: 7, scope: !9475)
!9475 = distinct !DILexicalBlock(scope: !9476, file: !3, line: 1062, column: 7)
!9476 = distinct !DILexicalBlock(scope: !9469, file: !3, line: 1061, column: 34)
!9477 = !DILocation(line: 1062, column: 28, scope: !9475)
!9478 = !DILocation(line: 1062, column: 7, scope: !9476)
!9479 = !DILocalVariable(name: "testw", scope: !9480, file: !3, line: 1063, type: !210)
!9480 = distinct !DILexicalBlock(scope: !9475, file: !3, line: 1062, column: 38)
!9481 = !DILocation(line: 1063, column: 10, scope: !9480)
!9482 = !DILocation(line: 1063, column: 36, scope: !9480)
!9483 = !DILocation(line: 1063, column: 42, scope: !9480)
!9484 = !DILocation(line: 1063, column: 55, scope: !9480)
!9485 = !DILocation(line: 1063, column: 65, scope: !9480)
!9486 = !DILocation(line: 1063, column: 18, scope: !9480)
!9487 = !DILocation(line: 1065, column: 4, scope: !9488)
!9488 = distinct !DILexicalBlock(scope: !9489, file: !3, line: 1065, column: 4)
!9489 = distinct !DILexicalBlock(scope: !9480, file: !3, line: 1065, column: 4)
!9490 = !DILocation(line: 1065, column: 4, scope: !9489)
!9491 = !DILocation(line: 1065, column: 4, scope: !9492)
!9492 = distinct !DILexicalBlock(scope: !9488, file: !3, line: 1065, column: 4)
!9493 = !DILocation(line: 1066, column: 8, scope: !9494)
!9494 = distinct !DILexicalBlock(scope: !9480, file: !3, line: 1066, column: 8)
!9495 = !DILocation(line: 1066, column: 16, scope: !9494)
!9496 = !DILocation(line: 1066, column: 14, scope: !9494)
!9497 = !DILocation(line: 1066, column: 8, scope: !9480)
!9498 = !DILocation(line: 1067, column: 9, scope: !9499)
!9499 = distinct !DILexicalBlock(scope: !9500, file: !3, line: 1067, column: 9)
!9500 = distinct !DILexicalBlock(scope: !9494, file: !3, line: 1066, column: 29)
!9501 = !DILocation(line: 1067, column: 18, scope: !9499)
!9502 = !DILocation(line: 1067, column: 16, scope: !9499)
!9503 = !DILocation(line: 1067, column: 9, scope: !9500)
!9504 = !DILocation(line: 1067, column: 34, scope: !9499)
!9505 = !DILocation(line: 1067, column: 32, scope: !9499)
!9506 = !DILocation(line: 1067, column: 25, scope: !9499)
!9507 = !DILocation(line: 1068, column: 14, scope: !9508)
!9508 = distinct !DILexicalBlock(scope: !9499, file: !3, line: 1068, column: 14)
!9509 = !DILocation(line: 1068, column: 23, scope: !9508)
!9510 = !DILocation(line: 1068, column: 21, scope: !9508)
!9511 = !DILocation(line: 1068, column: 14, scope: !9499)
!9512 = !DILocation(line: 1068, column: 45, scope: !9508)
!9513 = !DILocation(line: 1068, column: 43, scope: !9508)
!9514 = !DILocation(line: 1068, column: 36, scope: !9508)
!9515 = !DILocation(line: 1069, column: 4, scope: !9500)
!9516 = !DILocation(line: 1071, column: 9, scope: !9517)
!9517 = distinct !DILexicalBlock(scope: !9518, file: !3, line: 1071, column: 9)
!9518 = distinct !DILexicalBlock(scope: !9494, file: !3, line: 1070, column: 9)
!9519 = !DILocation(line: 1071, column: 18, scope: !9517)
!9520 = !DILocation(line: 1071, column: 16, scope: !9517)
!9521 = !DILocation(line: 1071, column: 9, scope: !9518)
!9522 = !DILocation(line: 1071, column: 34, scope: !9517)
!9523 = !DILocation(line: 1071, column: 32, scope: !9517)
!9524 = !DILocation(line: 1071, column: 25, scope: !9517)
!9525 = !DILocation(line: 1072, column: 14, scope: !9526)
!9526 = distinct !DILexicalBlock(scope: !9517, file: !3, line: 1072, column: 14)
!9527 = !DILocation(line: 1072, column: 23, scope: !9526)
!9528 = !DILocation(line: 1072, column: 21, scope: !9526)
!9529 = !DILocation(line: 1072, column: 14, scope: !9517)
!9530 = !DILocation(line: 1072, column: 45, scope: !9526)
!9531 = !DILocation(line: 1072, column: 43, scope: !9526)
!9532 = !DILocation(line: 1072, column: 36, scope: !9526)
!9533 = !DILocation(line: 1074, column: 3, scope: !9480)
!9534 = !DILocation(line: 1075, column: 2, scope: !9476)
!9535 = !DILocation(line: 1077, column: 9, scope: !9402)
!9536 = !DILocation(line: 1077, column: 2, scope: !9402)
!9537 = distinct !DISubprogram(name: "do_weight_paint_normalize_all_active", scope: !3, file: !3, line: 1322, type: !9538, scopeLine: 1324, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2758, retainedNodes: !3422)
!9538 = !DISubroutineType(types: !9539)
!9539 = !{null, !3406, !3408, !3412, !3408}
!9540 = !DILocalVariable(name: "dvert", arg: 1, scope: !9537, file: !3, line: 1322, type: !3406)
!9541 = !DILocation(line: 1322, column: 63, scope: !9537)
!9542 = !DILocalVariable(name: "defbase_tot", arg: 2, scope: !9537, file: !3, line: 1322, type: !3408)
!9543 = !DILocation(line: 1322, column: 80, scope: !9537)
!9544 = !DILocalVariable(name: "vgroup_validmap", arg: 3, scope: !9537, file: !3, line: 1322, type: !3412)
!9545 = !DILocation(line: 1322, column: 105, scope: !9537)
!9546 = !DILocalVariable(name: "vgroup_active", arg: 4, scope: !9537, file: !3, line: 1323, type: !3408)
!9547 = !DILocation(line: 1323, column: 60, scope: !9537)
!9548 = !DILocalVariable(name: "sum", scope: !9537, file: !3, line: 1325, type: !210)
!9549 = !DILocation(line: 1325, column: 8, scope: !9537)
!9550 = !DILocalVariable(name: "fac", scope: !9537, file: !3, line: 1325, type: !210)
!9551 = !DILocation(line: 1325, column: 20, scope: !9537)
!9552 = !DILocalVariable(name: "i", scope: !9537, file: !3, line: 1326, type: !231)
!9553 = !DILocation(line: 1326, column: 15, scope: !9537)
!9554 = !DILocalVariable(name: "tot", scope: !9537, file: !3, line: 1326, type: !231)
!9555 = !DILocation(line: 1326, column: 18, scope: !9537)
!9556 = !DILocalVariable(name: "dw", scope: !9537, file: !3, line: 1327, type: !3404)
!9557 = !DILocation(line: 1327, column: 17, scope: !9537)
!9558 = !DILocalVariable(name: "act_weight", scope: !9537, file: !3, line: 1328, type: !210)
!9559 = !DILocation(line: 1328, column: 8, scope: !9537)
!9560 = !DILocation(line: 1330, column: 11, scope: !9561)
!9561 = distinct !DILexicalBlock(scope: !9537, file: !3, line: 1330, column: 2)
!9562 = !DILocation(line: 1330, column: 18, scope: !9561)
!9563 = !DILocation(line: 1330, column: 9, scope: !9561)
!9564 = !DILocation(line: 1330, column: 34, scope: !9561)
!9565 = !DILocation(line: 1330, column: 41, scope: !9561)
!9566 = !DILocation(line: 1330, column: 32, scope: !9561)
!9567 = !DILocation(line: 1330, column: 7, scope: !9561)
!9568 = !DILocation(line: 1330, column: 45, scope: !9569)
!9569 = distinct !DILexicalBlock(scope: !9561, file: !3, line: 1330, column: 2)
!9570 = !DILocation(line: 1330, column: 47, scope: !9569)
!9571 = !DILocation(line: 1330, column: 2, scope: !9561)
!9572 = !DILocation(line: 1331, column: 7, scope: !9573)
!9573 = distinct !DILexicalBlock(scope: !9574, file: !3, line: 1331, column: 7)
!9574 = distinct !DILexicalBlock(scope: !9569, file: !3, line: 1330, column: 64)
!9575 = !DILocation(line: 1331, column: 11, scope: !9573)
!9576 = !DILocation(line: 1331, column: 20, scope: !9573)
!9577 = !DILocation(line: 1331, column: 18, scope: !9573)
!9578 = !DILocation(line: 1331, column: 32, scope: !9573)
!9579 = !DILocation(line: 1331, column: 35, scope: !9573)
!9580 = !DILocation(line: 1331, column: 51, scope: !9573)
!9581 = !DILocation(line: 1331, column: 55, scope: !9573)
!9582 = !DILocation(line: 1331, column: 7, scope: !9574)
!9583 = !DILocation(line: 1332, column: 8, scope: !9584)
!9584 = distinct !DILexicalBlock(scope: !9585, file: !3, line: 1332, column: 8)
!9585 = distinct !DILexicalBlock(scope: !9573, file: !3, line: 1331, column: 64)
!9586 = !DILocation(line: 1332, column: 12, scope: !9584)
!9587 = !DILocation(line: 1332, column: 22, scope: !9584)
!9588 = !DILocation(line: 1332, column: 19, scope: !9584)
!9589 = !DILocation(line: 1332, column: 8, scope: !9585)
!9590 = !DILocation(line: 1333, column: 12, scope: !9591)
!9591 = distinct !DILexicalBlock(scope: !9584, file: !3, line: 1332, column: 37)
!9592 = !DILocation(line: 1333, column: 16, scope: !9591)
!9593 = !DILocation(line: 1333, column: 9, scope: !9591)
!9594 = !DILocation(line: 1334, column: 8, scope: !9591)
!9595 = !DILocation(line: 1335, column: 4, scope: !9591)
!9596 = !DILocation(line: 1337, column: 18, scope: !9597)
!9597 = distinct !DILexicalBlock(scope: !9584, file: !3, line: 1336, column: 9)
!9598 = !DILocation(line: 1337, column: 22, scope: !9597)
!9599 = !DILocation(line: 1337, column: 16, scope: !9597)
!9600 = !DILocation(line: 1339, column: 3, scope: !9585)
!9601 = !DILocation(line: 1340, column: 2, scope: !9574)
!9602 = !DILocation(line: 1330, column: 54, scope: !9569)
!9603 = !DILocation(line: 1330, column: 60, scope: !9569)
!9604 = !DILocation(line: 1330, column: 2, scope: !9569)
!9605 = distinct !{!9605, !9571, !9606}
!9606 = !DILocation(line: 1340, column: 2, scope: !9561)
!9607 = !DILocation(line: 1342, column: 7, scope: !9608)
!9608 = distinct !DILexicalBlock(scope: !9537, file: !3, line: 1342, column: 6)
!9609 = !DILocation(line: 1342, column: 11, scope: !9608)
!9610 = !DILocation(line: 1342, column: 17, scope: !9608)
!9611 = !DILocation(line: 1342, column: 21, scope: !9608)
!9612 = !DILocation(line: 1342, column: 27, scope: !9608)
!9613 = !DILocation(line: 1342, column: 25, scope: !9608)
!9614 = !DILocation(line: 1342, column: 38, scope: !9608)
!9615 = !DILocation(line: 1342, column: 6, scope: !9537)
!9616 = !DILocation(line: 1343, column: 3, scope: !9617)
!9617 = distinct !DILexicalBlock(scope: !9608, file: !3, line: 1342, column: 48)
!9618 = !DILocation(line: 1346, column: 6, scope: !9619)
!9619 = distinct !DILexicalBlock(scope: !9537, file: !3, line: 1346, column: 6)
!9620 = !DILocation(line: 1346, column: 10, scope: !9619)
!9621 = !DILocation(line: 1346, column: 6, scope: !9537)
!9622 = !DILocation(line: 1347, column: 17, scope: !9623)
!9623 = distinct !DILexicalBlock(scope: !9619, file: !3, line: 1346, column: 19)
!9624 = !DILocation(line: 1347, column: 15, scope: !9623)
!9625 = !DILocation(line: 1347, column: 32, scope: !9623)
!9626 = !DILocation(line: 1347, column: 30, scope: !9623)
!9627 = !DILocation(line: 1347, column: 22, scope: !9623)
!9628 = !DILocation(line: 1347, column: 7, scope: !9623)
!9629 = !DILocation(line: 1349, column: 12, scope: !9630)
!9630 = distinct !DILexicalBlock(scope: !9623, file: !3, line: 1349, column: 3)
!9631 = !DILocation(line: 1349, column: 19, scope: !9630)
!9632 = !DILocation(line: 1349, column: 10, scope: !9630)
!9633 = !DILocation(line: 1349, column: 35, scope: !9630)
!9634 = !DILocation(line: 1349, column: 42, scope: !9630)
!9635 = !DILocation(line: 1349, column: 33, scope: !9630)
!9636 = !DILocation(line: 1349, column: 8, scope: !9630)
!9637 = !DILocation(line: 1349, column: 46, scope: !9638)
!9638 = distinct !DILexicalBlock(scope: !9630, file: !3, line: 1349, column: 3)
!9639 = !DILocation(line: 1349, column: 48, scope: !9638)
!9640 = !DILocation(line: 1349, column: 3, scope: !9630)
!9641 = !DILocation(line: 1350, column: 8, scope: !9642)
!9642 = distinct !DILexicalBlock(scope: !9643, file: !3, line: 1350, column: 8)
!9643 = distinct !DILexicalBlock(scope: !9638, file: !3, line: 1349, column: 65)
!9644 = !DILocation(line: 1350, column: 12, scope: !9642)
!9645 = !DILocation(line: 1350, column: 21, scope: !9642)
!9646 = !DILocation(line: 1350, column: 19, scope: !9642)
!9647 = !DILocation(line: 1350, column: 33, scope: !9642)
!9648 = !DILocation(line: 1350, column: 36, scope: !9642)
!9649 = !DILocation(line: 1350, column: 52, scope: !9642)
!9650 = !DILocation(line: 1350, column: 56, scope: !9642)
!9651 = !DILocation(line: 1350, column: 8, scope: !9643)
!9652 = !DILocation(line: 1351, column: 9, scope: !9653)
!9653 = distinct !DILexicalBlock(scope: !9654, file: !3, line: 1351, column: 9)
!9654 = distinct !DILexicalBlock(scope: !9642, file: !3, line: 1350, column: 65)
!9655 = !DILocation(line: 1351, column: 13, scope: !9653)
!9656 = !DILocation(line: 1351, column: 23, scope: !9653)
!9657 = !DILocation(line: 1351, column: 20, scope: !9653)
!9658 = !DILocation(line: 1351, column: 9, scope: !9654)
!9659 = !DILocation(line: 1352, column: 20, scope: !9660)
!9660 = distinct !DILexicalBlock(scope: !9653, file: !3, line: 1351, column: 38)
!9661 = !DILocation(line: 1352, column: 6, scope: !9660)
!9662 = !DILocation(line: 1352, column: 10, scope: !9660)
!9663 = !DILocation(line: 1352, column: 17, scope: !9660)
!9664 = !DILocation(line: 1355, column: 6, scope: !9665)
!9665 = distinct !DILexicalBlock(scope: !9666, file: !3, line: 1355, column: 6)
!9666 = distinct !DILexicalBlock(scope: !9660, file: !3, line: 1355, column: 6)
!9667 = !DILocation(line: 1355, column: 6, scope: !9666)
!9668 = !DILocation(line: 1355, column: 6, scope: !9669)
!9669 = distinct !DILexicalBlock(scope: !9665, file: !3, line: 1355, column: 6)
!9670 = !DILocation(line: 1356, column: 5, scope: !9660)
!9671 = !DILocation(line: 1357, column: 4, scope: !9654)
!9672 = !DILocation(line: 1358, column: 3, scope: !9643)
!9673 = !DILocation(line: 1349, column: 55, scope: !9638)
!9674 = !DILocation(line: 1349, column: 61, scope: !9638)
!9675 = !DILocation(line: 1349, column: 3, scope: !9638)
!9676 = distinct !{!9676, !9640, !9677}
!9677 = !DILocation(line: 1358, column: 3, scope: !9630)
!9678 = !DILocation(line: 1359, column: 2, scope: !9623)
!9679 = !DILocation(line: 1364, column: 17, scope: !9680)
!9680 = distinct !DILexicalBlock(scope: !9619, file: !3, line: 1360, column: 7)
!9681 = !DILocation(line: 1364, column: 15, scope: !9680)
!9682 = !DILocation(line: 1364, column: 31, scope: !9680)
!9683 = !DILocation(line: 1364, column: 29, scope: !9680)
!9684 = !DILocation(line: 1364, column: 7, scope: !9680)
!9685 = !DILocation(line: 1367, column: 3, scope: !9686)
!9686 = distinct !DILexicalBlock(scope: !9687, file: !3, line: 1367, column: 3)
!9687 = distinct !DILexicalBlock(scope: !9680, file: !3, line: 1367, column: 3)
!9688 = !DILocation(line: 1367, column: 3, scope: !9687)
!9689 = !DILocation(line: 1367, column: 3, scope: !9690)
!9690 = distinct !DILexicalBlock(scope: !9686, file: !3, line: 1367, column: 3)
!9691 = !DILocation(line: 1369, column: 12, scope: !9692)
!9692 = distinct !DILexicalBlock(scope: !9680, file: !3, line: 1369, column: 3)
!9693 = !DILocation(line: 1369, column: 19, scope: !9692)
!9694 = !DILocation(line: 1369, column: 10, scope: !9692)
!9695 = !DILocation(line: 1369, column: 35, scope: !9692)
!9696 = !DILocation(line: 1369, column: 42, scope: !9692)
!9697 = !DILocation(line: 1369, column: 33, scope: !9692)
!9698 = !DILocation(line: 1369, column: 8, scope: !9692)
!9699 = !DILocation(line: 1369, column: 46, scope: !9700)
!9700 = distinct !DILexicalBlock(scope: !9692, file: !3, line: 1369, column: 3)
!9701 = !DILocation(line: 1369, column: 48, scope: !9700)
!9702 = !DILocation(line: 1369, column: 3, scope: !9692)
!9703 = !DILocation(line: 1370, column: 8, scope: !9704)
!9704 = distinct !DILexicalBlock(scope: !9705, file: !3, line: 1370, column: 8)
!9705 = distinct !DILexicalBlock(scope: !9700, file: !3, line: 1369, column: 65)
!9706 = !DILocation(line: 1370, column: 12, scope: !9704)
!9707 = !DILocation(line: 1370, column: 21, scope: !9704)
!9708 = !DILocation(line: 1370, column: 19, scope: !9704)
!9709 = !DILocation(line: 1370, column: 33, scope: !9704)
!9710 = !DILocation(line: 1370, column: 36, scope: !9704)
!9711 = !DILocation(line: 1370, column: 52, scope: !9704)
!9712 = !DILocation(line: 1370, column: 56, scope: !9704)
!9713 = !DILocation(line: 1370, column: 8, scope: !9705)
!9714 = !DILocation(line: 1371, column: 9, scope: !9715)
!9715 = distinct !DILexicalBlock(scope: !9716, file: !3, line: 1371, column: 9)
!9716 = distinct !DILexicalBlock(scope: !9704, file: !3, line: 1370, column: 65)
!9717 = !DILocation(line: 1371, column: 13, scope: !9715)
!9718 = !DILocation(line: 1371, column: 23, scope: !9715)
!9719 = !DILocation(line: 1371, column: 20, scope: !9715)
!9720 = !DILocation(line: 1371, column: 9, scope: !9716)
!9721 = !DILocation(line: 1372, column: 19, scope: !9722)
!9722 = distinct !DILexicalBlock(scope: !9715, file: !3, line: 1371, column: 38)
!9723 = !DILocation(line: 1372, column: 6, scope: !9722)
!9724 = !DILocation(line: 1372, column: 10, scope: !9722)
!9725 = !DILocation(line: 1372, column: 17, scope: !9722)
!9726 = !DILocation(line: 1373, column: 5, scope: !9722)
!9727 = !DILocation(line: 1374, column: 4, scope: !9716)
!9728 = !DILocation(line: 1375, column: 3, scope: !9705)
!9729 = !DILocation(line: 1369, column: 55, scope: !9700)
!9730 = !DILocation(line: 1369, column: 61, scope: !9700)
!9731 = !DILocation(line: 1369, column: 3, scope: !9700)
!9732 = distinct !{!9732, !9702, !9733}
!9733 = !DILocation(line: 1375, column: 3, scope: !9692)
!9734 = !DILocation(line: 1377, column: 1, scope: !9537)
!9735 = distinct !DISubprogram(name: "get_mp_change", scope: !3, file: !3, line: 1638, type: !9736, scopeLine: 1639, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2758, retainedNodes: !3422)
!9736 = !DISubroutineType(types: !9737)
!9737 = !{!210, !3406, !3408, !3412, !210}
!9738 = !DILocalVariable(name: "odv", arg: 1, scope: !9735, file: !3, line: 1638, type: !3406)
!9739 = !DILocation(line: 1638, column: 41, scope: !9735)
!9740 = !DILocalVariable(name: "defbase_tot", arg: 2, scope: !9735, file: !3, line: 1638, type: !3408)
!9741 = !DILocation(line: 1638, column: 56, scope: !9735)
!9742 = !DILocalVariable(name: "defbase_sel", arg: 3, scope: !9735, file: !3, line: 1638, type: !3412)
!9743 = !DILocation(line: 1638, column: 81, scope: !9735)
!9744 = !DILocalVariable(name: "brush_change", arg: 4, scope: !9735, file: !3, line: 1638, type: !210)
!9745 = !DILocation(line: 1638, column: 100, scope: !9735)
!9746 = !DILocalVariable(name: "selwsum", scope: !9735, file: !3, line: 1640, type: !210)
!9747 = !DILocation(line: 1640, column: 8, scope: !9735)
!9748 = !DILocalVariable(name: "i", scope: !9735, file: !3, line: 1641, type: !231)
!9749 = !DILocation(line: 1641, column: 15, scope: !9735)
!9750 = !DILocalVariable(name: "dw", scope: !9735, file: !3, line: 1642, type: !3404)
!9751 = !DILocation(line: 1642, column: 17, scope: !9735)
!9752 = !DILocation(line: 1642, column: 22, scope: !9735)
!9753 = !DILocation(line: 1642, column: 27, scope: !9735)
!9754 = !DILocation(line: 1644, column: 11, scope: !9755)
!9755 = distinct !DILexicalBlock(scope: !9735, file: !3, line: 1644, column: 2)
!9756 = !DILocation(line: 1644, column: 16, scope: !9755)
!9757 = !DILocation(line: 1644, column: 9, scope: !9755)
!9758 = !DILocation(line: 1644, column: 7, scope: !9755)
!9759 = !DILocation(line: 1644, column: 27, scope: !9760)
!9760 = distinct !DILexicalBlock(scope: !9755, file: !3, line: 1644, column: 2)
!9761 = !DILocation(line: 1644, column: 29, scope: !9760)
!9762 = !DILocation(line: 1644, column: 2, scope: !9755)
!9763 = !DILocation(line: 1645, column: 7, scope: !9764)
!9764 = distinct !DILexicalBlock(scope: !9765, file: !3, line: 1645, column: 7)
!9765 = distinct !DILexicalBlock(scope: !9760, file: !3, line: 1644, column: 46)
!9766 = !DILocation(line: 1645, column: 11, scope: !9764)
!9767 = !DILocation(line: 1645, column: 20, scope: !9764)
!9768 = !DILocation(line: 1645, column: 18, scope: !9764)
!9769 = !DILocation(line: 1645, column: 7, scope: !9765)
!9770 = !DILocation(line: 1646, column: 8, scope: !9771)
!9771 = distinct !DILexicalBlock(scope: !9772, file: !3, line: 1646, column: 8)
!9772 = distinct !DILexicalBlock(scope: !9764, file: !3, line: 1645, column: 33)
!9773 = !DILocation(line: 1646, column: 20, scope: !9771)
!9774 = !DILocation(line: 1646, column: 24, scope: !9771)
!9775 = !DILocation(line: 1646, column: 8, scope: !9772)
!9776 = !DILocation(line: 1647, column: 16, scope: !9777)
!9777 = distinct !DILexicalBlock(scope: !9771, file: !3, line: 1646, column: 33)
!9778 = !DILocation(line: 1647, column: 20, scope: !9777)
!9779 = !DILocation(line: 1647, column: 13, scope: !9777)
!9780 = !DILocation(line: 1648, column: 4, scope: !9777)
!9781 = !DILocation(line: 1649, column: 3, scope: !9772)
!9782 = !DILocation(line: 1650, column: 2, scope: !9765)
!9783 = !DILocation(line: 1644, column: 36, scope: !9760)
!9784 = !DILocation(line: 1644, column: 42, scope: !9760)
!9785 = !DILocation(line: 1644, column: 2, scope: !9760)
!9786 = distinct !{!9786, !9762, !9787}
!9787 = !DILocation(line: 1650, column: 2, scope: !9755)
!9788 = !DILocation(line: 1651, column: 6, scope: !9789)
!9789 = distinct !DILexicalBlock(scope: !9735, file: !3, line: 1651, column: 6)
!9790 = !DILocation(line: 1651, column: 14, scope: !9789)
!9791 = !DILocation(line: 1651, column: 17, scope: !9789)
!9792 = !DILocation(line: 1651, column: 27, scope: !9789)
!9793 = !DILocation(line: 1651, column: 25, scope: !9789)
!9794 = !DILocation(line: 1651, column: 40, scope: !9789)
!9795 = !DILocation(line: 1651, column: 6, scope: !9735)
!9796 = !DILocation(line: 1652, column: 11, scope: !9797)
!9797 = distinct !DILexicalBlock(scope: !9789, file: !3, line: 1651, column: 45)
!9798 = !DILocation(line: 1652, column: 21, scope: !9797)
!9799 = !DILocation(line: 1652, column: 19, scope: !9797)
!9800 = !DILocation(line: 1652, column: 37, scope: !9797)
!9801 = !DILocation(line: 1652, column: 35, scope: !9797)
!9802 = !DILocation(line: 1652, column: 3, scope: !9797)
!9803 = !DILocation(line: 1654, column: 2, scope: !9735)
!9804 = !DILocation(line: 1655, column: 1, scope: !9735)
!9805 = distinct !DISubprogram(name: "get_first_selected_nonzero_weight", scope: !3, file: !3, line: 1774, type: !9806, scopeLine: 1775, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2758, retainedNodes: !3422)
!9806 = !DISubroutineType(types: !9807)
!9807 = !{!22, !3406, !3408, !3412}
!9808 = !DILocalVariable(name: "dvert", arg: 1, scope: !9805, file: !3, line: 1774, type: !3406)
!9809 = !DILocation(line: 1774, column: 59, scope: !9805)
!9810 = !DILocalVariable(name: "defbase_tot", arg: 2, scope: !9805, file: !3, line: 1774, type: !3408)
!9811 = !DILocation(line: 1774, column: 76, scope: !9805)
!9812 = !DILocalVariable(name: "defbase_sel", arg: 3, scope: !9805, file: !3, line: 1774, type: !3412)
!9813 = !DILocation(line: 1774, column: 101, scope: !9805)
!9814 = !DILocalVariable(name: "i", scope: !9805, file: !3, line: 1776, type: !22)
!9815 = !DILocation(line: 1776, column: 6, scope: !9805)
!9816 = !DILocalVariable(name: "dw", scope: !9805, file: !3, line: 1777, type: !3404)
!9817 = !DILocation(line: 1777, column: 17, scope: !9805)
!9818 = !DILocation(line: 1777, column: 22, scope: !9805)
!9819 = !DILocation(line: 1777, column: 29, scope: !9805)
!9820 = !DILocation(line: 1778, column: 9, scope: !9821)
!9821 = distinct !DILexicalBlock(scope: !9805, file: !3, line: 1778, column: 2)
!9822 = !DILocation(line: 1778, column: 7, scope: !9821)
!9823 = !DILocation(line: 1778, column: 14, scope: !9824)
!9824 = distinct !DILexicalBlock(scope: !9821, file: !3, line: 1778, column: 2)
!9825 = !DILocation(line: 1778, column: 18, scope: !9824)
!9826 = !DILocation(line: 1778, column: 25, scope: !9824)
!9827 = !DILocation(line: 1778, column: 16, scope: !9824)
!9828 = !DILocation(line: 1778, column: 2, scope: !9821)
!9829 = !DILocation(line: 1779, column: 7, scope: !9830)
!9830 = distinct !DILexicalBlock(scope: !9831, file: !3, line: 1779, column: 7)
!9831 = distinct !DILexicalBlock(scope: !9824, file: !3, line: 1778, column: 47)
!9832 = !DILocation(line: 1779, column: 11, scope: !9830)
!9833 = !DILocation(line: 1779, column: 20, scope: !9830)
!9834 = !DILocation(line: 1779, column: 18, scope: !9830)
!9835 = !DILocation(line: 1779, column: 7, scope: !9831)
!9836 = !DILocation(line: 1780, column: 8, scope: !9837)
!9837 = distinct !DILexicalBlock(scope: !9838, file: !3, line: 1780, column: 8)
!9838 = distinct !DILexicalBlock(scope: !9830, file: !3, line: 1779, column: 33)
!9839 = !DILocation(line: 1780, column: 20, scope: !9837)
!9840 = !DILocation(line: 1780, column: 24, scope: !9837)
!9841 = !DILocation(line: 1780, column: 32, scope: !9837)
!9842 = !DILocation(line: 1780, column: 35, scope: !9837)
!9843 = !DILocation(line: 1780, column: 39, scope: !9837)
!9844 = !DILocation(line: 1780, column: 46, scope: !9837)
!9845 = !DILocation(line: 1780, column: 8, scope: !9838)
!9846 = !DILocation(line: 1781, column: 12, scope: !9847)
!9847 = distinct !DILexicalBlock(scope: !9837, file: !3, line: 1780, column: 54)
!9848 = !DILocation(line: 1781, column: 5, scope: !9847)
!9849 = !DILocation(line: 1783, column: 3, scope: !9838)
!9850 = !DILocation(line: 1784, column: 2, scope: !9831)
!9851 = !DILocation(line: 1778, column: 37, scope: !9824)
!9852 = !DILocation(line: 1778, column: 43, scope: !9824)
!9853 = !DILocation(line: 1778, column: 2, scope: !9824)
!9854 = distinct !{!9854, !9828, !9855}
!9855 = !DILocation(line: 1784, column: 2, scope: !9821)
!9856 = !DILocation(line: 1785, column: 2, scope: !9805)
!9857 = !DILocation(line: 1786, column: 1, scope: !9805)
!9858 = distinct !DISubprogram(name: "defvert_reset_to_prev", scope: !3, file: !3, line: 1659, type: !9859, scopeLine: 1660, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2758, retainedNodes: !3422)
!9859 = !DISubroutineType(types: !9860)
!9860 = !{null, !3406, !3406}
!9861 = !DILocalVariable(name: "dv_prev", arg: 1, scope: !9858, file: !3, line: 1659, type: !3406)
!9862 = !DILocation(line: 1659, column: 48, scope: !9858)
!9863 = !DILocalVariable(name: "dv", arg: 2, scope: !9858, file: !3, line: 1659, type: !3406)
!9864 = !DILocation(line: 1659, column: 70, scope: !9858)
!9865 = !DILocalVariable(name: "dw", scope: !9858, file: !3, line: 1661, type: !3404)
!9866 = !DILocation(line: 1661, column: 17, scope: !9858)
!9867 = !DILocation(line: 1661, column: 22, scope: !9858)
!9868 = !DILocation(line: 1661, column: 26, scope: !9858)
!9869 = !DILocalVariable(name: "dw_prev", scope: !9858, file: !3, line: 1662, type: !3404)
!9870 = !DILocation(line: 1662, column: 17, scope: !9858)
!9871 = !DILocalVariable(name: "i", scope: !9858, file: !3, line: 1663, type: !231)
!9872 = !DILocation(line: 1663, column: 15, scope: !9858)
!9873 = !DILocation(line: 1664, column: 11, scope: !9874)
!9874 = distinct !DILexicalBlock(scope: !9858, file: !3, line: 1664, column: 2)
!9875 = !DILocation(line: 1664, column: 15, scope: !9874)
!9876 = !DILocation(line: 1664, column: 9, scope: !9874)
!9877 = !DILocation(line: 1664, column: 7, scope: !9874)
!9878 = !DILocation(line: 1664, column: 26, scope: !9879)
!9879 = distinct !DILexicalBlock(scope: !9874, file: !3, line: 1664, column: 2)
!9880 = !DILocation(line: 1664, column: 28, scope: !9879)
!9881 = !DILocation(line: 1664, column: 2, scope: !9874)
!9882 = !DILocation(line: 1665, column: 32, scope: !9883)
!9883 = distinct !DILexicalBlock(scope: !9879, file: !3, line: 1664, column: 45)
!9884 = !DILocation(line: 1665, column: 41, scope: !9883)
!9885 = !DILocation(line: 1665, column: 45, scope: !9883)
!9886 = !DILocation(line: 1665, column: 13, scope: !9883)
!9887 = !DILocation(line: 1665, column: 11, scope: !9883)
!9888 = !DILocation(line: 1667, column: 16, scope: !9883)
!9889 = !DILocation(line: 1667, column: 26, scope: !9883)
!9890 = !DILocation(line: 1667, column: 35, scope: !9883)
!9891 = !DILocation(line: 1667, column: 3, scope: !9883)
!9892 = !DILocation(line: 1667, column: 7, scope: !9883)
!9893 = !DILocation(line: 1667, column: 14, scope: !9883)
!9894 = !DILocation(line: 1668, column: 2, scope: !9883)
!9895 = !DILocation(line: 1664, column: 35, scope: !9879)
!9896 = !DILocation(line: 1664, column: 41, scope: !9879)
!9897 = !DILocation(line: 1664, column: 2, scope: !9879)
!9898 = distinct !{!9898, !9881, !9899}
!9899 = !DILocation(line: 1668, column: 2, scope: !9874)
!9900 = !DILocation(line: 1669, column: 1, scope: !9858)
!9901 = distinct !DISubprogram(name: "apply_mp_locks_normalize", scope: !3, file: !3, line: 1716, type: !9902, scopeLine: 1721, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2758, retainedNodes: !3422)
!9902 = !DISubroutineType(types: !9903)
!9903 = !{!22, !3187, !8728, !7507, !3404, !3404, !210, !210, !210, !210}
!9904 = !DILocalVariable(name: "me", arg: 1, scope: !9901, file: !3, line: 1716, type: !3187)
!9905 = !DILocation(line: 1716, column: 43, scope: !9901)
!9906 = !DILocalVariable(name: "wpi", arg: 2, scope: !9901, file: !3, line: 1716, type: !8728)
!9907 = !DILocation(line: 1716, column: 70, scope: !9901)
!9908 = !DILocalVariable(name: "index", arg: 3, scope: !9901, file: !3, line: 1717, type: !7507)
!9909 = !DILocation(line: 1717, column: 56, scope: !9901)
!9910 = !DILocalVariable(name: "dw", arg: 4, scope: !9901, file: !3, line: 1718, type: !3404)
!9911 = !DILocation(line: 1718, column: 52, scope: !9901)
!9912 = !DILocalVariable(name: "tdw", arg: 5, scope: !9901, file: !3, line: 1718, type: !3404)
!9913 = !DILocation(line: 1718, column: 71, scope: !9901)
!9914 = !DILocalVariable(name: "change", arg: 6, scope: !9901, file: !3, line: 1719, type: !210)
!9915 = !DILocation(line: 1719, column: 43, scope: !9901)
!9916 = !DILocalVariable(name: "oldChange", arg: 7, scope: !9901, file: !3, line: 1719, type: !210)
!9917 = !DILocation(line: 1719, column: 57, scope: !9901)
!9918 = !DILocalVariable(name: "oldw", arg: 8, scope: !9901, file: !3, line: 1720, type: !210)
!9919 = !DILocation(line: 1720, column: 43, scope: !9901)
!9920 = !DILocalVariable(name: "neww", arg: 9, scope: !9901, file: !3, line: 1720, type: !210)
!9921 = !DILocation(line: 1720, column: 55, scope: !9901)
!9922 = !DILocalVariable(name: "dv", scope: !9901, file: !3, line: 1722, type: !3406)
!9923 = !DILocation(line: 1722, column: 15, scope: !9901)
!9924 = !DILocation(line: 1722, column: 21, scope: !9901)
!9925 = !DILocation(line: 1722, column: 25, scope: !9901)
!9926 = !DILocation(line: 1722, column: 31, scope: !9901)
!9927 = !DILocalVariable(name: "dv_test", scope: !9901, file: !3, line: 1723, type: !3407)
!9928 = !DILocation(line: 1723, column: 14, scope: !9901)
!9929 = !DILocation(line: 1725, column: 15, scope: !9901)
!9930 = !DILocation(line: 1725, column: 29, scope: !9901)
!9931 = !DILocation(line: 1725, column: 33, scope: !9901)
!9932 = !DILocation(line: 1725, column: 10, scope: !9901)
!9933 = !DILocation(line: 1725, column: 13, scope: !9901)
!9934 = !DILocation(line: 1726, column: 17, scope: !9901)
!9935 = !DILocation(line: 1726, column: 21, scope: !9901)
!9936 = !DILocation(line: 1726, column: 10, scope: !9901)
!9937 = !DILocation(line: 1726, column: 15, scope: !9901)
!9938 = !DILocation(line: 1727, column: 22, scope: !9901)
!9939 = !DILocation(line: 1727, column: 26, scope: !9901)
!9940 = !DILocation(line: 1727, column: 10, scope: !9901)
!9941 = !DILocation(line: 1727, column: 20, scope: !9901)
!9942 = !DILocation(line: 1730, column: 7, scope: !9943)
!9943 = distinct !DILexicalBlock(scope: !9901, file: !3, line: 1730, column: 6)
!9944 = !DILocation(line: 1730, column: 12, scope: !9943)
!9945 = !DILocation(line: 1730, column: 23, scope: !9943)
!9946 = !DILocation(line: 1730, column: 32, scope: !9943)
!9947 = !DILocation(line: 1731, column: 8, scope: !9943)
!9948 = !DILocation(line: 1731, column: 13, scope: !9943)
!9949 = !DILocation(line: 1731, column: 24, scope: !9943)
!9950 = !DILocation(line: 1731, column: 28, scope: !9943)
!9951 = !DILocation(line: 1731, column: 36, scope: !9943)
!9952 = !DILocation(line: 1731, column: 46, scope: !9943)
!9953 = !DILocation(line: 1732, column: 33, scope: !9943)
!9954 = !DILocation(line: 1732, column: 38, scope: !9943)
!9955 = !DILocation(line: 1732, column: 51, scope: !9943)
!9956 = !DILocation(line: 1732, column: 56, scope: !9943)
!9957 = !DILocation(line: 1732, column: 69, scope: !9943)
!9958 = !DILocation(line: 1732, column: 74, scope: !9943)
!9959 = !DILocation(line: 1732, column: 7, scope: !9943)
!9960 = !DILocation(line: 1732, column: 86, scope: !9943)
!9961 = !DILocation(line: 1730, column: 6, scope: !9901)
!9962 = !DILocation(line: 1734, column: 7, scope: !9963)
!9963 = distinct !DILexicalBlock(scope: !9964, file: !3, line: 1734, column: 7)
!9964 = distinct !DILexicalBlock(scope: !9943, file: !3, line: 1733, column: 2)
!9965 = !DILocation(line: 1734, column: 12, scope: !9963)
!9966 = !DILocation(line: 1734, column: 26, scope: !9963)
!9967 = !DILocation(line: 1734, column: 29, scope: !9963)
!9968 = !DILocation(line: 1734, column: 34, scope: !9963)
!9969 = !DILocation(line: 1734, column: 50, scope: !9963)
!9970 = !DILocation(line: 1734, column: 7, scope: !9964)
!9971 = !DILocation(line: 1735, column: 8, scope: !9972)
!9972 = distinct !DILexicalBlock(scope: !9973, file: !3, line: 1735, column: 8)
!9973 = distinct !DILexicalBlock(scope: !9963, file: !3, line: 1734, column: 55)
!9974 = !DILocation(line: 1735, column: 15, scope: !9972)
!9975 = !DILocation(line: 1735, column: 18, scope: !9972)
!9976 = !DILocation(line: 1735, column: 25, scope: !9972)
!9977 = !DILocation(line: 1735, column: 8, scope: !9973)
!9978 = !DILocation(line: 1736, column: 26, scope: !9979)
!9979 = distinct !DILexicalBlock(scope: !9972, file: !3, line: 1735, column: 31)
!9980 = !DILocation(line: 1736, column: 30, scope: !9979)
!9981 = !DILocation(line: 1736, column: 35, scope: !9979)
!9982 = !DILocation(line: 1736, column: 48, scope: !9979)
!9983 = !DILocation(line: 1736, column: 56, scope: !9979)
!9984 = !DILocation(line: 1736, column: 61, scope: !9979)
!9985 = !DILocation(line: 1736, column: 5, scope: !9979)
!9986 = !DILocation(line: 1737, column: 4, scope: !9979)
!9987 = !DILocation(line: 1738, column: 3, scope: !9973)
!9988 = !DILocation(line: 1740, column: 17, scope: !9989)
!9989 = distinct !DILexicalBlock(scope: !9963, file: !3, line: 1739, column: 8)
!9990 = !DILocation(line: 1740, column: 4, scope: !9989)
!9991 = !DILocation(line: 1740, column: 8, scope: !9989)
!9992 = !DILocation(line: 1740, column: 15, scope: !9989)
!9993 = !DILocation(line: 1742, column: 2, scope: !9964)
!9994 = !DILocation(line: 1743, column: 16, scope: !9901)
!9995 = !DILocation(line: 1743, column: 2, scope: !9901)
!9996 = !DILocation(line: 1745, column: 26, scope: !9901)
!9997 = !DILocation(line: 1745, column: 30, scope: !9901)
!9998 = !DILocation(line: 1745, column: 35, scope: !9901)
!9999 = !DILocation(line: 1745, column: 48, scope: !9901)
!10000 = !DILocation(line: 1745, column: 53, scope: !9901)
!10001 = !DILocation(line: 1745, column: 66, scope: !9901)
!10002 = !DILocation(line: 1745, column: 71, scope: !9901)
!10003 = !DILocation(line: 1745, column: 83, scope: !9901)
!10004 = !DILocation(line: 1745, column: 88, scope: !9901)
!10005 = !DILocation(line: 1745, column: 105, scope: !9901)
!10006 = !DILocation(line: 1745, column: 110, scope: !9901)
!10007 = !DILocation(line: 1745, column: 129, scope: !9901)
!10008 = !DILocation(line: 1745, column: 134, scope: !9901)
!10009 = !DILocation(line: 1745, column: 2, scope: !9901)
!10010 = !DILocation(line: 1747, column: 6, scope: !10011)
!10011 = distinct !DILexicalBlock(scope: !9901, file: !3, line: 1747, column: 6)
!10012 = !DILocation(line: 1747, column: 11, scope: !10011)
!10013 = !DILocation(line: 1747, column: 6, scope: !9901)
!10014 = !DILocation(line: 1749, column: 33, scope: !10015)
!10015 = distinct !DILexicalBlock(scope: !10011, file: !3, line: 1747, column: 30)
!10016 = !DILocation(line: 1749, column: 37, scope: !10015)
!10017 = !DILocation(line: 1749, column: 42, scope: !10015)
!10018 = !DILocation(line: 1749, column: 55, scope: !10015)
!10019 = !DILocation(line: 1749, column: 60, scope: !10015)
!10020 = !DILocation(line: 1749, column: 3, scope: !10015)
!10021 = !DILocation(line: 1750, column: 2, scope: !10015)
!10022 = !DILocation(line: 1752, column: 6, scope: !10023)
!10023 = distinct !DILexicalBlock(scope: !9901, file: !3, line: 1752, column: 6)
!10024 = !DILocation(line: 1752, column: 16, scope: !10023)
!10025 = !DILocation(line: 1752, column: 19, scope: !10023)
!10026 = !DILocation(line: 1752, column: 24, scope: !10023)
!10027 = !DILocation(line: 1752, column: 38, scope: !10023)
!10028 = !DILocation(line: 1752, column: 41, scope: !10023)
!10029 = !DILocation(line: 1752, column: 46, scope: !10023)
!10030 = !DILocation(line: 1752, column: 62, scope: !10023)
!10031 = !DILocation(line: 1752, column: 6, scope: !9901)
!10032 = !DILocation(line: 1753, column: 7, scope: !10033)
!10033 = distinct !DILexicalBlock(scope: !10034, file: !3, line: 1753, column: 7)
!10034 = distinct !DILexicalBlock(scope: !10023, file: !3, line: 1752, column: 67)
!10035 = !DILocation(line: 1753, column: 12, scope: !10033)
!10036 = !DILocation(line: 1753, column: 22, scope: !10033)
!10037 = !DILocation(line: 1753, column: 19, scope: !10033)
!10038 = !DILocation(line: 1753, column: 7, scope: !10034)
!10039 = !DILocation(line: 1754, column: 8, scope: !10040)
!10040 = distinct !DILexicalBlock(scope: !10041, file: !3, line: 1754, column: 8)
!10041 = distinct !DILexicalBlock(scope: !10033, file: !3, line: 1753, column: 28)
!10042 = !DILocation(line: 1754, column: 15, scope: !10040)
!10043 = !DILocation(line: 1754, column: 13, scope: !10040)
!10044 = !DILocation(line: 1754, column: 8, scope: !10041)
!10045 = !DILocation(line: 1755, column: 9, scope: !10046)
!10046 = distinct !DILexicalBlock(scope: !10047, file: !3, line: 1755, column: 9)
!10047 = distinct !DILexicalBlock(scope: !10040, file: !3, line: 1754, column: 21)
!10048 = !DILocation(line: 1755, column: 14, scope: !10046)
!10049 = !DILocation(line: 1755, column: 24, scope: !10046)
!10050 = !DILocation(line: 1755, column: 21, scope: !10046)
!10051 = !DILocation(line: 1755, column: 9, scope: !10047)
!10052 = !DILocation(line: 1756, column: 6, scope: !10053)
!10053 = distinct !DILexicalBlock(scope: !10046, file: !3, line: 1755, column: 30)
!10054 = !DILocation(line: 1756, column: 24, scope: !10053)
!10055 = !DILocation(line: 1756, column: 16, scope: !10053)
!10056 = !DILocation(line: 1757, column: 6, scope: !10053)
!10057 = !DILocation(line: 1759, column: 4, scope: !10047)
!10058 = !DILocation(line: 1761, column: 9, scope: !10059)
!10059 = distinct !DILexicalBlock(scope: !10060, file: !3, line: 1761, column: 9)
!10060 = distinct !DILexicalBlock(scope: !10040, file: !3, line: 1760, column: 9)
!10061 = !DILocation(line: 1761, column: 14, scope: !10059)
!10062 = !DILocation(line: 1761, column: 24, scope: !10059)
!10063 = !DILocation(line: 1761, column: 21, scope: !10059)
!10064 = !DILocation(line: 1761, column: 9, scope: !10060)
!10065 = !DILocation(line: 1762, column: 6, scope: !10066)
!10066 = distinct !DILexicalBlock(scope: !10059, file: !3, line: 1761, column: 30)
!10067 = !DILocation(line: 1762, column: 24, scope: !10066)
!10068 = !DILocation(line: 1762, column: 16, scope: !10066)
!10069 = !DILocation(line: 1763, column: 6, scope: !10066)
!10070 = !DILocation(line: 1766, column: 3, scope: !10041)
!10071 = !DILocation(line: 1767, column: 2, scope: !10034)
!10072 = !DILocation(line: 1768, column: 2, scope: !9901)
!10073 = !DILocation(line: 1768, column: 20, scope: !9901)
!10074 = !DILocation(line: 1768, column: 12, scope: !9901)
!10075 = !DILocation(line: 1769, column: 2, scope: !9901)
!10076 = !DILocation(line: 1770, column: 1, scope: !9901)
!10077 = distinct !DISubprogram(name: "wpaint_blend_tool", scope: !3, file: !3, line: 1010, type: !10078, scopeLine: 1014, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2758, retainedNodes: !3422)
!10078 = !DISubroutineType(types: !10079)
!10079 = !{!210, !3408, !637, !637, !637}
!10080 = !DILocalVariable(name: "tool", arg: 1, scope: !10077, file: !3, line: 1010, type: !3408)
!10081 = !DILocation(line: 1010, column: 42, scope: !10077)
!10082 = !DILocalVariable(name: "weight", arg: 2, scope: !10077, file: !3, line: 1012, type: !637)
!10083 = !DILocation(line: 1012, column: 44, scope: !10077)
!10084 = !DILocalVariable(name: "paintval", arg: 3, scope: !10077, file: !3, line: 1013, type: !637)
!10085 = !DILocation(line: 1013, column: 44, scope: !10077)
!10086 = !DILocalVariable(name: "alpha", arg: 4, scope: !10077, file: !3, line: 1013, type: !637)
!10087 = !DILocation(line: 1013, column: 66, scope: !10077)
!10088 = !DILocation(line: 1015, column: 10, scope: !10077)
!10089 = !DILocation(line: 1015, column: 2, scope: !10077)
!10090 = !DILocation(line: 1017, column: 48, scope: !10091)
!10091 = distinct !DILexicalBlock(scope: !10077, file: !3, line: 1015, column: 16)
!10092 = !DILocation(line: 1017, column: 56, scope: !10091)
!10093 = !DILocation(line: 1017, column: 66, scope: !10091)
!10094 = !DILocation(line: 1017, column: 37, scope: !10091)
!10095 = !DILocation(line: 1017, column: 30, scope: !10091)
!10096 = !DILocation(line: 1018, column: 46, scope: !10091)
!10097 = !DILocation(line: 1018, column: 54, scope: !10091)
!10098 = !DILocation(line: 1018, column: 64, scope: !10091)
!10099 = !DILocation(line: 1018, column: 37, scope: !10091)
!10100 = !DILocation(line: 1018, column: 30, scope: !10091)
!10101 = !DILocation(line: 1019, column: 46, scope: !10091)
!10102 = !DILocation(line: 1019, column: 54, scope: !10091)
!10103 = !DILocation(line: 1019, column: 64, scope: !10091)
!10104 = !DILocation(line: 1019, column: 37, scope: !10091)
!10105 = !DILocation(line: 1019, column: 30, scope: !10091)
!10106 = !DILocation(line: 1020, column: 46, scope: !10091)
!10107 = !DILocation(line: 1020, column: 54, scope: !10091)
!10108 = !DILocation(line: 1020, column: 64, scope: !10091)
!10109 = !DILocation(line: 1020, column: 37, scope: !10091)
!10110 = !DILocation(line: 1020, column: 30, scope: !10091)
!10111 = !DILocation(line: 1021, column: 50, scope: !10091)
!10112 = !DILocation(line: 1021, column: 58, scope: !10091)
!10113 = !DILocation(line: 1021, column: 68, scope: !10091)
!10114 = !DILocation(line: 1021, column: 37, scope: !10091)
!10115 = !DILocation(line: 1021, column: 30, scope: !10091)
!10116 = !DILocation(line: 1022, column: 49, scope: !10091)
!10117 = !DILocation(line: 1022, column: 57, scope: !10091)
!10118 = !DILocation(line: 1022, column: 67, scope: !10091)
!10119 = !DILocation(line: 1022, column: 37, scope: !10091)
!10120 = !DILocation(line: 1022, column: 30, scope: !10091)
!10121 = !DILocation(line: 1025, column: 4, scope: !10091)
!10122 = !DILocation(line: 1027, column: 1, scope: !10077)
!10123 = distinct !DISubprogram(name: "wval_blend", scope: !3, file: !3, line: 981, type: !10124, scopeLine: 982, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2758, retainedNodes: !3422)
!10124 = !DISubroutineType(types: !10125)
!10125 = !{!210, !637, !637, !637}
!10126 = !DILocalVariable(name: "weight", arg: 1, scope: !10123, file: !3, line: 981, type: !637)
!10127 = !DILocation(line: 981, column: 41, scope: !10123)
!10128 = !DILocalVariable(name: "paintval", arg: 2, scope: !10123, file: !3, line: 981, type: !637)
!10129 = !DILocation(line: 981, column: 61, scope: !10123)
!10130 = !DILocalVariable(name: "alpha", arg: 3, scope: !10123, file: !3, line: 981, type: !637)
!10131 = !DILocation(line: 981, column: 83, scope: !10123)
!10132 = !DILocalVariable(name: "talpha", scope: !10123, file: !3, line: 983, type: !637)
!10133 = !DILocation(line: 983, column: 14, scope: !10123)
!10134 = !DILocation(line: 983, column: 30, scope: !10123)
!10135 = !DILocation(line: 983, column: 23, scope: !10123)
!10136 = !DILocation(line: 984, column: 10, scope: !10123)
!10137 = !DILocation(line: 984, column: 21, scope: !10123)
!10138 = !DILocation(line: 984, column: 19, scope: !10123)
!10139 = !DILocation(line: 984, column: 32, scope: !10123)
!10140 = !DILocation(line: 984, column: 49, scope: !10123)
!10141 = !DILocation(line: 984, column: 47, scope: !10123)
!10142 = !DILocation(line: 984, column: 39, scope: !10123)
!10143 = !DILocation(line: 984, column: 29, scope: !10123)
!10144 = !DILocation(line: 984, column: 2, scope: !10123)
!10145 = distinct !DISubprogram(name: "wval_add", scope: !3, file: !3, line: 986, type: !10124, scopeLine: 987, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2758, retainedNodes: !3422)
!10146 = !DILocalVariable(name: "weight", arg: 1, scope: !10145, file: !3, line: 986, type: !637)
!10147 = !DILocation(line: 986, column: 39, scope: !10145)
!10148 = !DILocalVariable(name: "paintval", arg: 2, scope: !10145, file: !3, line: 986, type: !637)
!10149 = !DILocation(line: 986, column: 59, scope: !10145)
!10150 = !DILocalVariable(name: "alpha", arg: 3, scope: !10145, file: !3, line: 986, type: !637)
!10151 = !DILocation(line: 986, column: 81, scope: !10145)
!10152 = !DILocation(line: 988, column: 9, scope: !10145)
!10153 = !DILocation(line: 988, column: 19, scope: !10145)
!10154 = !DILocation(line: 988, column: 30, scope: !10145)
!10155 = !DILocation(line: 988, column: 28, scope: !10145)
!10156 = !DILocation(line: 988, column: 16, scope: !10145)
!10157 = !DILocation(line: 988, column: 2, scope: !10145)
!10158 = distinct !DISubprogram(name: "wval_sub", scope: !3, file: !3, line: 990, type: !10124, scopeLine: 991, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2758, retainedNodes: !3422)
!10159 = !DILocalVariable(name: "weight", arg: 1, scope: !10158, file: !3, line: 990, type: !637)
!10160 = !DILocation(line: 990, column: 39, scope: !10158)
!10161 = !DILocalVariable(name: "paintval", arg: 2, scope: !10158, file: !3, line: 990, type: !637)
!10162 = !DILocation(line: 990, column: 59, scope: !10158)
!10163 = !DILocalVariable(name: "alpha", arg: 3, scope: !10158, file: !3, line: 990, type: !637)
!10164 = !DILocation(line: 990, column: 81, scope: !10158)
!10165 = !DILocation(line: 992, column: 9, scope: !10158)
!10166 = !DILocation(line: 992, column: 19, scope: !10158)
!10167 = !DILocation(line: 992, column: 30, scope: !10158)
!10168 = !DILocation(line: 992, column: 28, scope: !10158)
!10169 = !DILocation(line: 992, column: 16, scope: !10158)
!10170 = !DILocation(line: 992, column: 2, scope: !10158)
!10171 = distinct !DISubprogram(name: "wval_mul", scope: !3, file: !3, line: 994, type: !10124, scopeLine: 995, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2758, retainedNodes: !3422)
!10172 = !DILocalVariable(name: "weight", arg: 1, scope: !10171, file: !3, line: 994, type: !637)
!10173 = !DILocation(line: 994, column: 39, scope: !10171)
!10174 = !DILocalVariable(name: "paintval", arg: 2, scope: !10171, file: !3, line: 994, type: !637)
!10175 = !DILocation(line: 994, column: 59, scope: !10171)
!10176 = !DILocalVariable(name: "alpha", arg: 3, scope: !10171, file: !3, line: 994, type: !637)
!10177 = !DILocation(line: 994, column: 81, scope: !10171)
!10178 = !DILocation(line: 996, column: 18, scope: !10171)
!10179 = !DILocation(line: 996, column: 16, scope: !10171)
!10180 = !DILocation(line: 996, column: 28, scope: !10171)
!10181 = !DILocation(line: 996, column: 36, scope: !10171)
!10182 = !DILocation(line: 996, column: 34, scope: !10171)
!10183 = !DILocation(line: 996, column: 25, scope: !10171)
!10184 = !DILocation(line: 996, column: 49, scope: !10171)
!10185 = !DILocation(line: 996, column: 47, scope: !10171)
!10186 = !DILocation(line: 996, column: 2, scope: !10171)
!10187 = distinct !DISubprogram(name: "wval_lighten", scope: !3, file: !3, line: 998, type: !10124, scopeLine: 999, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2758, retainedNodes: !3422)
!10188 = !DILocalVariable(name: "weight", arg: 1, scope: !10187, file: !3, line: 998, type: !637)
!10189 = !DILocation(line: 998, column: 43, scope: !10187)
!10190 = !DILocalVariable(name: "paintval", arg: 2, scope: !10187, file: !3, line: 998, type: !637)
!10191 = !DILocation(line: 998, column: 63, scope: !10187)
!10192 = !DILocalVariable(name: "alpha", arg: 3, scope: !10187, file: !3, line: 998, type: !637)
!10193 = !DILocation(line: 998, column: 85, scope: !10187)
!10194 = !DILocation(line: 1000, column: 10, scope: !10187)
!10195 = !DILocation(line: 1000, column: 19, scope: !10187)
!10196 = !DILocation(line: 1000, column: 17, scope: !10187)
!10197 = !DILocation(line: 1000, column: 9, scope: !10187)
!10198 = !DILocation(line: 1000, column: 42, scope: !10187)
!10199 = !DILocation(line: 1000, column: 50, scope: !10187)
!10200 = !DILocation(line: 1000, column: 60, scope: !10187)
!10201 = !DILocation(line: 1000, column: 31, scope: !10187)
!10202 = !DILocation(line: 1000, column: 69, scope: !10187)
!10203 = !DILocation(line: 1000, column: 2, scope: !10187)
!10204 = distinct !DISubprogram(name: "wval_darken", scope: !3, file: !3, line: 1002, type: !10124, scopeLine: 1003, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2758, retainedNodes: !3422)
!10205 = !DILocalVariable(name: "weight", arg: 1, scope: !10204, file: !3, line: 1002, type: !637)
!10206 = !DILocation(line: 1002, column: 42, scope: !10204)
!10207 = !DILocalVariable(name: "paintval", arg: 2, scope: !10204, file: !3, line: 1002, type: !637)
!10208 = !DILocation(line: 1002, column: 62, scope: !10204)
!10209 = !DILocalVariable(name: "alpha", arg: 3, scope: !10204, file: !3, line: 1002, type: !637)
!10210 = !DILocation(line: 1002, column: 84, scope: !10204)
!10211 = !DILocation(line: 1004, column: 10, scope: !10204)
!10212 = !DILocation(line: 1004, column: 19, scope: !10204)
!10213 = !DILocation(line: 1004, column: 17, scope: !10204)
!10214 = !DILocation(line: 1004, column: 9, scope: !10204)
!10215 = !DILocation(line: 1004, column: 42, scope: !10204)
!10216 = !DILocation(line: 1004, column: 50, scope: !10204)
!10217 = !DILocation(line: 1004, column: 60, scope: !10204)
!10218 = !DILocation(line: 1004, column: 31, scope: !10204)
!10219 = !DILocation(line: 1004, column: 69, scope: !10204)
!10220 = !DILocation(line: 1004, column: 2, scope: !10204)
!10221 = distinct !DISubprogram(name: "min_ff", scope: !6460, file: !6460, line: 202, type: !10222, scopeLine: 203, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2758, retainedNodes: !3422)
!10222 = !DISubroutineType(types: !10223)
!10223 = !{!210, !210, !210}
!10224 = !DILocalVariable(name: "a", arg: 1, scope: !10221, file: !6460, line: 202, type: !210)
!10225 = !DILocation(line: 202, column: 28, scope: !10221)
!10226 = !DILocalVariable(name: "b", arg: 2, scope: !10221, file: !6460, line: 202, type: !210)
!10227 = !DILocation(line: 202, column: 37, scope: !10221)
!10228 = !DILocation(line: 204, column: 10, scope: !10221)
!10229 = !DILocation(line: 204, column: 14, scope: !10221)
!10230 = !DILocation(line: 204, column: 12, scope: !10221)
!10231 = !DILocation(line: 204, column: 9, scope: !10221)
!10232 = !DILocation(line: 204, column: 19, scope: !10221)
!10233 = !DILocation(line: 204, column: 23, scope: !10221)
!10234 = !DILocation(line: 204, column: 2, scope: !10221)
!10235 = distinct !DISubprogram(name: "has_locked_group_selected", scope: !3, file: !3, line: 1398, type: !10236, scopeLine: 1399, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2758, retainedNodes: !3422)
!10236 = !DISubroutineType(types: !10237)
!10237 = !{!259, !22, !3412, !3412}
!10238 = !DILocalVariable(name: "defbase_tot", arg: 1, scope: !10235, file: !3, line: 1398, type: !22)
!10239 = !DILocation(line: 1398, column: 43, scope: !10235)
!10240 = !DILocalVariable(name: "defbase_sel", arg: 2, scope: !10235, file: !3, line: 1398, type: !3412)
!10241 = !DILocation(line: 1398, column: 68, scope: !10235)
!10242 = !DILocalVariable(name: "lock_flags", arg: 3, scope: !10235, file: !3, line: 1398, type: !3412)
!10243 = !DILocation(line: 1398, column: 93, scope: !10235)
!10244 = !DILocalVariable(name: "i", scope: !10235, file: !3, line: 1400, type: !22)
!10245 = !DILocation(line: 1400, column: 6, scope: !10235)
!10246 = !DILocation(line: 1401, column: 9, scope: !10247)
!10247 = distinct !DILexicalBlock(scope: !10235, file: !3, line: 1401, column: 2)
!10248 = !DILocation(line: 1401, column: 7, scope: !10247)
!10249 = !DILocation(line: 1401, column: 14, scope: !10250)
!10250 = distinct !DILexicalBlock(scope: !10247, file: !3, line: 1401, column: 2)
!10251 = !DILocation(line: 1401, column: 18, scope: !10250)
!10252 = !DILocation(line: 1401, column: 16, scope: !10250)
!10253 = !DILocation(line: 1401, column: 2, scope: !10247)
!10254 = !DILocation(line: 1402, column: 7, scope: !10255)
!10255 = distinct !DILexicalBlock(scope: !10256, file: !3, line: 1402, column: 7)
!10256 = distinct !DILexicalBlock(scope: !10250, file: !3, line: 1401, column: 36)
!10257 = !DILocation(line: 1402, column: 19, scope: !10255)
!10258 = !DILocation(line: 1402, column: 22, scope: !10255)
!10259 = !DILocation(line: 1402, column: 25, scope: !10255)
!10260 = !DILocation(line: 1402, column: 36, scope: !10255)
!10261 = !DILocation(line: 1402, column: 7, scope: !10256)
!10262 = !DILocation(line: 1403, column: 4, scope: !10263)
!10263 = distinct !DILexicalBlock(scope: !10255, file: !3, line: 1402, column: 40)
!10264 = !DILocation(line: 1405, column: 2, scope: !10256)
!10265 = !DILocation(line: 1401, column: 32, scope: !10250)
!10266 = !DILocation(line: 1401, column: 2, scope: !10250)
!10267 = distinct !{!10267, !10253, !10268}
!10268 = !DILocation(line: 1405, column: 2, scope: !10247)
!10269 = !DILocation(line: 1406, column: 2, scope: !10235)
!10270 = !DILocation(line: 1407, column: 1, scope: !10235)
!10271 = distinct !DISubprogram(name: "multipaint_selection", scope: !3, file: !3, line: 1428, type: !10272, scopeLine: 1429, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2758, retainedNodes: !3422)
!10272 = !DISubroutineType(types: !10273)
!10273 = !{null, !3406, !3408, !210, !3412}
!10274 = !DILocalVariable(name: "dvert", arg: 1, scope: !10271, file: !3, line: 1428, type: !3406)
!10275 = !DILocation(line: 1428, column: 47, scope: !10271)
!10276 = !DILocalVariable(name: "defbase_tot", arg: 2, scope: !10271, file: !3, line: 1428, type: !3408)
!10277 = !DILocation(line: 1428, column: 64, scope: !10271)
!10278 = !DILocalVariable(name: "change", arg: 3, scope: !10271, file: !3, line: 1428, type: !210)
!10279 = !DILocation(line: 1428, column: 83, scope: !10271)
!10280 = !DILocalVariable(name: "defbase_sel", arg: 4, scope: !10271, file: !3, line: 1428, type: !3412)
!10281 = !DILocation(line: 1428, column: 103, scope: !10271)
!10282 = !DILocalVariable(name: "i", scope: !10271, file: !3, line: 1430, type: !22)
!10283 = !DILocation(line: 1430, column: 6, scope: !10271)
!10284 = !DILocalVariable(name: "dw", scope: !10271, file: !3, line: 1431, type: !3404)
!10285 = !DILocation(line: 1431, column: 17, scope: !10271)
!10286 = !DILocalVariable(name: "val", scope: !10271, file: !3, line: 1432, type: !210)
!10287 = !DILocation(line: 1432, column: 8, scope: !10271)
!10288 = !DILocation(line: 1434, column: 9, scope: !10289)
!10289 = distinct !DILexicalBlock(scope: !10271, file: !3, line: 1434, column: 2)
!10290 = !DILocation(line: 1434, column: 7, scope: !10289)
!10291 = !DILocation(line: 1434, column: 14, scope: !10292)
!10292 = distinct !DILexicalBlock(scope: !10289, file: !3, line: 1434, column: 2)
!10293 = !DILocation(line: 1434, column: 18, scope: !10292)
!10294 = !DILocation(line: 1434, column: 16, scope: !10292)
!10295 = !DILocation(line: 1434, column: 2, scope: !10289)
!10296 = !DILocation(line: 1435, column: 7, scope: !10297)
!10297 = distinct !DILexicalBlock(scope: !10298, file: !3, line: 1435, column: 7)
!10298 = distinct !DILexicalBlock(scope: !10292, file: !3, line: 1434, column: 36)
!10299 = !DILocation(line: 1435, column: 19, scope: !10297)
!10300 = !DILocation(line: 1435, column: 7, scope: !10298)
!10301 = !DILocation(line: 1436, column: 28, scope: !10302)
!10302 = distinct !DILexicalBlock(scope: !10297, file: !3, line: 1435, column: 23)
!10303 = !DILocation(line: 1436, column: 35, scope: !10302)
!10304 = !DILocation(line: 1436, column: 9, scope: !10302)
!10305 = !DILocation(line: 1436, column: 7, scope: !10302)
!10306 = !DILocation(line: 1437, column: 8, scope: !10307)
!10307 = distinct !DILexicalBlock(scope: !10302, file: !3, line: 1437, column: 8)
!10308 = !DILocation(line: 1437, column: 11, scope: !10307)
!10309 = !DILocation(line: 1437, column: 14, scope: !10307)
!10310 = !DILocation(line: 1437, column: 18, scope: !10307)
!10311 = !DILocation(line: 1437, column: 8, scope: !10302)
!10312 = !DILocation(line: 1438, column: 11, scope: !10313)
!10313 = distinct !DILexicalBlock(scope: !10307, file: !3, line: 1437, column: 26)
!10314 = !DILocation(line: 1438, column: 15, scope: !10313)
!10315 = !DILocation(line: 1438, column: 24, scope: !10313)
!10316 = !DILocation(line: 1438, column: 22, scope: !10313)
!10317 = !DILocation(line: 1438, column: 9, scope: !10313)
!10318 = !DILocation(line: 1439, column: 9, scope: !10319)
!10319 = distinct !DILexicalBlock(scope: !10313, file: !3, line: 1439, column: 9)
!10320 = !DILocation(line: 1439, column: 13, scope: !10319)
!10321 = !DILocation(line: 1439, column: 9, scope: !10313)
!10322 = !DILocation(line: 1443, column: 22, scope: !10323)
!10323 = distinct !DILexicalBlock(scope: !10319, file: !3, line: 1439, column: 18)
!10324 = !DILocation(line: 1443, column: 26, scope: !10323)
!10325 = !DILocation(line: 1443, column: 20, scope: !10323)
!10326 = !DILocation(line: 1443, column: 13, scope: !10323)
!10327 = !DILocation(line: 1444, column: 5, scope: !10323)
!10328 = !DILocation(line: 1447, column: 9, scope: !10329)
!10329 = distinct !DILexicalBlock(scope: !10313, file: !3, line: 1447, column: 9)
!10330 = !DILocation(line: 1447, column: 13, scope: !10329)
!10331 = !DILocation(line: 1447, column: 9, scope: !10313)
!10332 = !DILocation(line: 1448, column: 6, scope: !10333)
!10333 = distinct !DILexicalBlock(scope: !10329, file: !3, line: 1447, column: 19)
!10334 = !DILocation(line: 1450, column: 4, scope: !10313)
!10335 = !DILocation(line: 1451, column: 3, scope: !10302)
!10336 = !DILocation(line: 1452, column: 2, scope: !10298)
!10337 = !DILocation(line: 1434, column: 32, scope: !10292)
!10338 = !DILocation(line: 1434, column: 2, scope: !10292)
!10339 = distinct !{!10339, !10295, !10340}
!10340 = !DILocation(line: 1452, column: 2, scope: !10289)
!10341 = !DILocation(line: 1454, column: 9, scope: !10342)
!10342 = distinct !DILexicalBlock(scope: !10271, file: !3, line: 1454, column: 2)
!10343 = !DILocation(line: 1454, column: 7, scope: !10342)
!10344 = !DILocation(line: 1454, column: 14, scope: !10345)
!10345 = distinct !DILexicalBlock(scope: !10342, file: !3, line: 1454, column: 2)
!10346 = !DILocation(line: 1454, column: 18, scope: !10345)
!10347 = !DILocation(line: 1454, column: 16, scope: !10345)
!10348 = !DILocation(line: 1454, column: 2, scope: !10342)
!10349 = !DILocation(line: 1455, column: 7, scope: !10350)
!10350 = distinct !DILexicalBlock(scope: !10351, file: !3, line: 1455, column: 7)
!10351 = distinct !DILexicalBlock(scope: !10345, file: !3, line: 1454, column: 36)
!10352 = !DILocation(line: 1455, column: 19, scope: !10350)
!10353 = !DILocation(line: 1455, column: 7, scope: !10351)
!10354 = !DILocation(line: 1456, column: 28, scope: !10355)
!10355 = distinct !DILexicalBlock(scope: !10350, file: !3, line: 1455, column: 23)
!10356 = !DILocation(line: 1456, column: 35, scope: !10355)
!10357 = !DILocation(line: 1456, column: 9, scope: !10355)
!10358 = !DILocation(line: 1456, column: 7, scope: !10355)
!10359 = !DILocation(line: 1457, column: 8, scope: !10360)
!10360 = distinct !DILexicalBlock(scope: !10355, file: !3, line: 1457, column: 8)
!10361 = !DILocation(line: 1457, column: 11, scope: !10360)
!10362 = !DILocation(line: 1457, column: 14, scope: !10360)
!10363 = !DILocation(line: 1457, column: 18, scope: !10360)
!10364 = !DILocation(line: 1457, column: 8, scope: !10355)
!10365 = !DILocation(line: 1458, column: 18, scope: !10366)
!10366 = distinct !DILexicalBlock(scope: !10360, file: !3, line: 1457, column: 26)
!10367 = !DILocation(line: 1458, column: 22, scope: !10366)
!10368 = !DILocation(line: 1458, column: 31, scope: !10366)
!10369 = !DILocation(line: 1458, column: 29, scope: !10366)
!10370 = !DILocation(line: 1458, column: 5, scope: !10366)
!10371 = !DILocation(line: 1458, column: 9, scope: !10366)
!10372 = !DILocation(line: 1458, column: 16, scope: !10366)
!10373 = !DILocation(line: 1459, column: 4, scope: !10366)
!10374 = !DILocation(line: 1460, column: 3, scope: !10355)
!10375 = !DILocation(line: 1461, column: 2, scope: !10351)
!10376 = !DILocation(line: 1454, column: 32, scope: !10345)
!10377 = !DILocation(line: 1454, column: 2, scope: !10345)
!10378 = distinct !{!10378, !10348, !10379}
!10379 = !DILocation(line: 1461, column: 2, scope: !10342)
!10380 = !DILocation(line: 1462, column: 1, scope: !10271)
!10381 = distinct !DISubprogram(name: "clamp_weights", scope: !3, file: !3, line: 1671, type: !10382, scopeLine: 1672, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2758, retainedNodes: !3422)
!10382 = !DISubroutineType(types: !10383)
!10383 = !{null, !3406}
!10384 = !DILocalVariable(name: "dvert", arg: 1, scope: !10381, file: !3, line: 1671, type: !3406)
!10385 = !DILocation(line: 1671, column: 40, scope: !10381)
!10386 = !DILocalVariable(name: "dw", scope: !10381, file: !3, line: 1673, type: !3404)
!10387 = !DILocation(line: 1673, column: 17, scope: !10381)
!10388 = !DILocation(line: 1673, column: 22, scope: !10381)
!10389 = !DILocation(line: 1673, column: 29, scope: !10381)
!10390 = !DILocalVariable(name: "i", scope: !10381, file: !3, line: 1674, type: !231)
!10391 = !DILocation(line: 1674, column: 15, scope: !10381)
!10392 = !DILocation(line: 1675, column: 11, scope: !10393)
!10393 = distinct !DILexicalBlock(scope: !10381, file: !3, line: 1675, column: 2)
!10394 = !DILocation(line: 1675, column: 18, scope: !10393)
!10395 = !DILocation(line: 1675, column: 9, scope: !10393)
!10396 = !DILocation(line: 1675, column: 7, scope: !10393)
!10397 = !DILocation(line: 1675, column: 29, scope: !10398)
!10398 = distinct !DILexicalBlock(scope: !10393, file: !3, line: 1675, column: 2)
!10399 = !DILocation(line: 1675, column: 31, scope: !10398)
!10400 = !DILocation(line: 1675, column: 2, scope: !10393)
!10401 = !DILocation(line: 1676, column: 3, scope: !10402)
!10402 = distinct !DILexicalBlock(scope: !10403, file: !3, line: 1676, column: 3)
!10403 = distinct !DILexicalBlock(scope: !10404, file: !3, line: 1676, column: 3)
!10404 = distinct !DILexicalBlock(scope: !10398, file: !3, line: 1675, column: 48)
!10405 = !DILocation(line: 1676, column: 3, scope: !10403)
!10406 = !DILocation(line: 1676, column: 3, scope: !10407)
!10407 = distinct !DILexicalBlock(scope: !10402, file: !3, line: 1676, column: 3)
!10408 = !DILocation(line: 1677, column: 2, scope: !10404)
!10409 = !DILocation(line: 1675, column: 38, scope: !10398)
!10410 = !DILocation(line: 1675, column: 44, scope: !10398)
!10411 = !DILocation(line: 1675, column: 2, scope: !10398)
!10412 = distinct !{!10412, !10400, !10413}
!10413 = !DILocation(line: 1677, column: 2, scope: !10393)
!10414 = !DILocation(line: 1678, column: 1, scope: !10381)
!10415 = distinct !DISubprogram(name: "enforce_locks", scope: !3, file: !3, line: 1526, type: !10416, scopeLine: 1530, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2758, retainedNodes: !3422)
!10416 = !DISubroutineType(types: !10417)
!10417 = !{null, !3406, !3406, !3408, !3412, !3412, !3412, !259, !259}
!10418 = !DILocalVariable(name: "odv", arg: 1, scope: !10415, file: !3, line: 1526, type: !3406)
!10419 = !DILocation(line: 1526, column: 40, scope: !10415)
!10420 = !DILocalVariable(name: "ndv", arg: 2, scope: !10415, file: !3, line: 1526, type: !3406)
!10421 = !DILocation(line: 1526, column: 58, scope: !10415)
!10422 = !DILocalVariable(name: "defbase_tot", arg: 3, scope: !10415, file: !3, line: 1527, type: !3408)
!10423 = !DILocation(line: 1527, column: 37, scope: !10415)
!10424 = !DILocalVariable(name: "defbase_sel", arg: 4, scope: !10415, file: !3, line: 1527, type: !3412)
!10425 = !DILocation(line: 1527, column: 62, scope: !10415)
!10426 = !DILocalVariable(name: "lock_flags", arg: 5, scope: !10415, file: !3, line: 1528, type: !3412)
!10427 = !DILocation(line: 1528, column: 39, scope: !10415)
!10428 = !DILocalVariable(name: "vgroup_validmap", arg: 6, scope: !10415, file: !3, line: 1528, type: !3412)
!10429 = !DILocation(line: 1528, column: 63, scope: !10415)
!10430 = !DILocalVariable(name: "do_auto_normalize", arg: 7, scope: !10415, file: !3, line: 1529, type: !259)
!10431 = !DILocation(line: 1529, column: 32, scope: !10415)
!10432 = !DILocalVariable(name: "do_multipaint", arg: 8, scope: !10415, file: !3, line: 1529, type: !259)
!10433 = !DILocation(line: 1529, column: 56, scope: !10415)
!10434 = !DILocalVariable(name: "totchange", scope: !10415, file: !3, line: 1531, type: !210)
!10435 = !DILocation(line: 1531, column: 8, scope: !10415)
!10436 = !DILocalVariable(name: "totchange_allowed", scope: !10415, file: !3, line: 1532, type: !210)
!10437 = !DILocation(line: 1532, column: 8, scope: !10415)
!10438 = !DILocalVariable(name: "left_over", scope: !10415, file: !3, line: 1533, type: !210)
!10439 = !DILocation(line: 1533, column: 8, scope: !10415)
!10440 = !DILocalVariable(name: "total_valid", scope: !10415, file: !3, line: 1535, type: !22)
!10441 = !DILocation(line: 1535, column: 6, scope: !10415)
!10442 = !DILocalVariable(name: "total_changed", scope: !10415, file: !3, line: 1536, type: !22)
!10443 = !DILocation(line: 1536, column: 6, scope: !10415)
!10444 = !DILocalVariable(name: "i", scope: !10415, file: !3, line: 1537, type: !231)
!10445 = !DILocation(line: 1537, column: 15, scope: !10415)
!10446 = !DILocalVariable(name: "ndw", scope: !10415, file: !3, line: 1538, type: !3404)
!10447 = !DILocation(line: 1538, column: 17, scope: !10415)
!10448 = !DILocalVariable(name: "odw", scope: !10415, file: !3, line: 1539, type: !3404)
!10449 = !DILocation(line: 1539, column: 17, scope: !10415)
!10450 = !DILocalVariable(name: "change_status", scope: !10415, file: !3, line: 1543, type: !192)
!10451 = !DILocation(line: 1543, column: 8, scope: !10415)
!10452 = !DILocation(line: 1545, column: 7, scope: !10453)
!10453 = distinct !DILexicalBlock(scope: !10415, file: !3, line: 1545, column: 6)
!10454 = !DILocation(line: 1545, column: 18, scope: !10453)
!10455 = !DILocation(line: 1545, column: 39, scope: !10453)
!10456 = !DILocation(line: 1545, column: 44, scope: !10453)
!10457 = !DILocation(line: 1545, column: 57, scope: !10453)
!10458 = !DILocation(line: 1545, column: 74, scope: !10453)
!10459 = !DILocation(line: 1545, column: 22, scope: !10453)
!10460 = !DILocation(line: 1545, column: 6, scope: !10415)
!10461 = !DILocation(line: 1546, column: 3, scope: !10462)
!10462 = distinct !DILexicalBlock(scope: !10453, file: !3, line: 1545, column: 87)
!10463 = !DILocation(line: 1549, column: 18, scope: !10415)
!10464 = !DILocation(line: 1549, column: 45, scope: !10415)
!10465 = !DILocation(line: 1549, column: 43, scope: !10415)
!10466 = !DILocation(line: 1549, column: 16, scope: !10415)
!10467 = !DILocation(line: 1551, column: 9, scope: !10468)
!10468 = distinct !DILexicalBlock(scope: !10415, file: !3, line: 1551, column: 2)
!10469 = !DILocation(line: 1551, column: 7, scope: !10468)
!10470 = !DILocation(line: 1551, column: 14, scope: !10471)
!10471 = distinct !DILexicalBlock(scope: !10468, file: !3, line: 1551, column: 2)
!10472 = !DILocation(line: 1551, column: 18, scope: !10471)
!10473 = !DILocation(line: 1551, column: 16, scope: !10471)
!10474 = !DILocation(line: 1551, column: 2, scope: !10468)
!10475 = !DILocation(line: 1552, column: 28, scope: !10476)
!10476 = distinct !DILexicalBlock(scope: !10471, file: !3, line: 1551, column: 36)
!10477 = !DILocation(line: 1552, column: 33, scope: !10476)
!10478 = !DILocation(line: 1552, column: 9, scope: !10476)
!10479 = !DILocation(line: 1552, column: 7, scope: !10476)
!10480 = !DILocation(line: 1553, column: 28, scope: !10476)
!10481 = !DILocation(line: 1553, column: 33, scope: !10476)
!10482 = !DILocation(line: 1553, column: 9, scope: !10476)
!10483 = !DILocation(line: 1553, column: 7, scope: !10476)
!10484 = !DILocation(line: 1555, column: 8, scope: !10485)
!10485 = distinct !DILexicalBlock(scope: !10476, file: !3, line: 1555, column: 7)
!10486 = !DILocation(line: 1555, column: 12, scope: !10485)
!10487 = !DILocation(line: 1555, column: 16, scope: !10485)
!10488 = !DILocation(line: 1555, column: 7, scope: !10476)
!10489 = !DILocation(line: 1556, column: 9, scope: !10490)
!10490 = distinct !DILexicalBlock(scope: !10491, file: !3, line: 1556, column: 8)
!10491 = distinct !DILexicalBlock(scope: !10485, file: !3, line: 1555, column: 21)
!10492 = !DILocation(line: 1556, column: 20, scope: !10490)
!10493 = !DILocation(line: 1556, column: 23, scope: !10490)
!10494 = !DILocation(line: 1556, column: 26, scope: !10490)
!10495 = !DILocation(line: 1556, column: 42, scope: !10490)
!10496 = !DILocation(line: 1556, column: 8, scope: !10491)
!10497 = !DILocation(line: 1557, column: 26, scope: !10498)
!10498 = distinct !DILexicalBlock(scope: !10490, file: !3, line: 1556, column: 46)
!10499 = !DILocation(line: 1557, column: 31, scope: !10498)
!10500 = !DILocation(line: 1557, column: 5, scope: !10498)
!10501 = !DILocation(line: 1558, column: 26, scope: !10498)
!10502 = !DILocation(line: 1558, column: 31, scope: !10498)
!10503 = !DILocation(line: 1558, column: 5, scope: !10498)
!10504 = !DILocation(line: 1559, column: 16, scope: !10498)
!10505 = !DILocation(line: 1560, column: 5, scope: !10498)
!10506 = !DILocation(line: 1560, column: 19, scope: !10498)
!10507 = !DILocation(line: 1560, column: 22, scope: !10498)
!10508 = !DILocation(line: 1561, column: 4, scope: !10498)
!10509 = !DILocation(line: 1562, column: 4, scope: !10491)
!10510 = !DILocation(line: 1565, column: 7, scope: !10511)
!10511 = distinct !DILexicalBlock(scope: !10476, file: !3, line: 1565, column: 7)
!10512 = !DILocation(line: 1565, column: 18, scope: !10511)
!10513 = !DILocation(line: 1565, column: 7, scope: !10476)
!10514 = !DILocation(line: 1566, column: 18, scope: !10515)
!10515 = distinct !DILexicalBlock(scope: !10511, file: !3, line: 1565, column: 22)
!10516 = !DILocation(line: 1566, column: 23, scope: !10515)
!10517 = !DILocation(line: 1566, column: 4, scope: !10515)
!10518 = !DILocation(line: 1566, column: 9, scope: !10515)
!10519 = !DILocation(line: 1566, column: 16, scope: !10515)
!10520 = !DILocation(line: 1567, column: 3, scope: !10515)
!10521 = !DILocation(line: 1568, column: 12, scope: !10522)
!10522 = distinct !DILexicalBlock(scope: !10511, file: !3, line: 1568, column: 12)
!10523 = !DILocation(line: 1568, column: 17, scope: !10522)
!10524 = !DILocation(line: 1568, column: 27, scope: !10522)
!10525 = !DILocation(line: 1568, column: 32, scope: !10522)
!10526 = !DILocation(line: 1568, column: 24, scope: !10522)
!10527 = !DILocation(line: 1568, column: 12, scope: !10511)
!10528 = !DILocation(line: 1569, column: 17, scope: !10529)
!10529 = distinct !DILexicalBlock(scope: !10522, file: !3, line: 1568, column: 40)
!10530 = !DILocation(line: 1569, column: 22, scope: !10529)
!10531 = !DILocation(line: 1569, column: 31, scope: !10529)
!10532 = !DILocation(line: 1569, column: 36, scope: !10529)
!10533 = !DILocation(line: 1569, column: 29, scope: !10529)
!10534 = !DILocation(line: 1569, column: 14, scope: !10529)
!10535 = !DILocation(line: 1571, column: 4, scope: !10529)
!10536 = !DILocation(line: 1571, column: 18, scope: !10529)
!10537 = !DILocation(line: 1571, column: 21, scope: !10529)
!10538 = !DILocation(line: 1572, column: 17, scope: !10529)
!10539 = !DILocation(line: 1573, column: 3, scope: !10529)
!10540 = !DILocation(line: 1574, column: 12, scope: !10541)
!10541 = distinct !DILexicalBlock(scope: !10522, file: !3, line: 1574, column: 12)
!10542 = !DILocation(line: 1574, column: 28, scope: !10541)
!10543 = !DILocation(line: 1574, column: 12, scope: !10522)
!10544 = !DILocation(line: 1575, column: 25, scope: !10545)
!10545 = distinct !DILexicalBlock(scope: !10541, file: !3, line: 1574, column: 32)
!10546 = !DILocation(line: 1575, column: 30, scope: !10545)
!10547 = !DILocation(line: 1575, column: 22, scope: !10545)
!10548 = !DILocation(line: 1576, column: 15, scope: !10545)
!10549 = !DILocation(line: 1577, column: 4, scope: !10545)
!10550 = !DILocation(line: 1577, column: 18, scope: !10545)
!10551 = !DILocation(line: 1577, column: 21, scope: !10545)
!10552 = !DILocation(line: 1578, column: 3, scope: !10545)
!10553 = !DILocation(line: 1579, column: 2, scope: !10476)
!10554 = !DILocation(line: 1551, column: 32, scope: !10471)
!10555 = !DILocation(line: 1551, column: 2, scope: !10471)
!10556 = distinct !{!10556, !10474, !10557}
!10557 = !DILocation(line: 1579, column: 2, scope: !10468)
!10558 = !DILocation(line: 1581, column: 6, scope: !10559)
!10559 = distinct !DILexicalBlock(scope: !10415, file: !3, line: 1581, column: 6)
!10560 = !DILocation(line: 1581, column: 6, scope: !10415)
!10561 = !DILocation(line: 1583, column: 7, scope: !10562)
!10562 = distinct !DILexicalBlock(scope: !10563, file: !3, line: 1583, column: 7)
!10563 = distinct !DILexicalBlock(scope: !10559, file: !3, line: 1581, column: 21)
!10564 = !DILocation(line: 1583, column: 23, scope: !10562)
!10565 = !DILocation(line: 1583, column: 26, scope: !10562)
!10566 = !DILocation(line: 1583, column: 40, scope: !10562)
!10567 = !DILocation(line: 1583, column: 44, scope: !10562)
!10568 = !DILocation(line: 1583, column: 47, scope: !10562)
!10569 = !DILocation(line: 1583, column: 7, scope: !10563)
!10570 = !DILocation(line: 1584, column: 24, scope: !10571)
!10571 = distinct !DILexicalBlock(scope: !10562, file: !3, line: 1583, column: 60)
!10572 = !DILocation(line: 1584, column: 22, scope: !10571)
!10573 = !DILocation(line: 1585, column: 3, scope: !10571)
!10574 = !DILocation(line: 1588, column: 7, scope: !10575)
!10575 = distinct !DILexicalBlock(scope: !10563, file: !3, line: 1588, column: 7)
!10576 = !DILocation(line: 1588, column: 17, scope: !10575)
!10577 = !DILocation(line: 1588, column: 7, scope: !10563)
!10578 = !DILocation(line: 1589, column: 24, scope: !10579)
!10579 = distinct !DILexicalBlock(scope: !10575, file: !3, line: 1588, column: 22)
!10580 = !DILocation(line: 1589, column: 38, scope: !10579)
!10581 = !DILocation(line: 1589, column: 36, scope: !10579)
!10582 = !DILocation(line: 1589, column: 22, scope: !10579)
!10583 = !DILocation(line: 1590, column: 3, scope: !10579)
!10584 = !DILocation(line: 1592, column: 22, scope: !10585)
!10585 = distinct !DILexicalBlock(scope: !10575, file: !3, line: 1591, column: 8)
!10586 = !DILocation(line: 1595, column: 7, scope: !10587)
!10587 = distinct !DILexicalBlock(scope: !10563, file: !3, line: 1595, column: 7)
!10588 = !DILocation(line: 1595, column: 7, scope: !10563)
!10589 = !DILocation(line: 1596, column: 14, scope: !10590)
!10590 = distinct !DILexicalBlock(scope: !10587, file: !3, line: 1595, column: 26)
!10591 = !DILocation(line: 1597, column: 14, scope: !10592)
!10592 = distinct !DILexicalBlock(scope: !10590, file: !3, line: 1597, column: 8)
!10593 = !DILocation(line: 1597, column: 8, scope: !10592)
!10594 = !DILocation(line: 1597, column: 41, scope: !10592)
!10595 = !DILocation(line: 1597, column: 35, scope: !10592)
!10596 = !DILocation(line: 1597, column: 33, scope: !10592)
!10597 = !DILocation(line: 1597, column: 8, scope: !10590)
!10598 = !DILocation(line: 1599, column: 29, scope: !10599)
!10599 = distinct !DILexicalBlock(scope: !10592, file: !3, line: 1597, column: 53)
!10600 = !DILocation(line: 1599, column: 23, scope: !10599)
!10601 = !DILocation(line: 1599, column: 48, scope: !10599)
!10602 = !DILocation(line: 1599, column: 42, scope: !10599)
!10603 = !DILocation(line: 1599, column: 40, scope: !10599)
!10604 = !DILocation(line: 1599, column: 17, scope: !10599)
!10605 = !DILocation(line: 1599, column: 15, scope: !10599)
!10606 = !DILocation(line: 1600, column: 9, scope: !10607)
!10607 = distinct !DILexicalBlock(scope: !10599, file: !3, line: 1600, column: 9)
!10608 = !DILocation(line: 1600, column: 19, scope: !10607)
!10609 = !DILocation(line: 1600, column: 9, scope: !10599)
!10610 = !DILocation(line: 1601, column: 16, scope: !10611)
!10611 = distinct !DILexicalBlock(scope: !10607, file: !3, line: 1600, column: 24)
!10612 = !DILocation(line: 1602, column: 5, scope: !10611)
!10613 = !DILocation(line: 1603, column: 4, scope: !10599)
!10614 = !DILocation(line: 1606, column: 26, scope: !10615)
!10615 = distinct !DILexicalBlock(scope: !10592, file: !3, line: 1604, column: 9)
!10616 = !DILocation(line: 1606, column: 25, scope: !10615)
!10617 = !DILocation(line: 1606, column: 23, scope: !10615)
!10618 = !DILocation(line: 1609, column: 44, scope: !10590)
!10619 = !DILocation(line: 1609, column: 49, scope: !10590)
!10620 = !DILocation(line: 1609, column: 62, scope: !10590)
!10621 = !DILocation(line: 1609, column: 84, scope: !10590)
!10622 = !DILocation(line: 1609, column: 103, scope: !10590)
!10623 = !DILocation(line: 1609, column: 116, scope: !10590)
!10624 = !DILocation(line: 1609, column: 24, scope: !10590)
!10625 = !DILocation(line: 1609, column: 22, scope: !10590)
!10626 = !DILocation(line: 1610, column: 17, scope: !10590)
!10627 = !DILocation(line: 1610, column: 14, scope: !10590)
!10628 = !DILocation(line: 1611, column: 8, scope: !10629)
!10629 = distinct !DILexicalBlock(scope: !10590, file: !3, line: 1611, column: 8)
!10630 = !DILocation(line: 1611, column: 8, scope: !10590)
!10631 = !DILocation(line: 1613, column: 9, scope: !10632)
!10632 = distinct !DILexicalBlock(scope: !10633, file: !3, line: 1613, column: 9)
!10633 = distinct !DILexicalBlock(scope: !10629, file: !3, line: 1611, column: 19)
!10634 = !DILocation(line: 1613, column: 23, scope: !10632)
!10635 = !DILocation(line: 1613, column: 27, scope: !10632)
!10636 = !DILocation(line: 1613, column: 30, scope: !10632)
!10637 = !DILocation(line: 1613, column: 9, scope: !10633)
!10638 = !DILocalVariable(name: "undo_change", scope: !10639, file: !3, line: 1614, type: !210)
!10639 = distinct !DILexicalBlock(scope: !10632, file: !3, line: 1613, column: 45)
!10640 = !DILocation(line: 1614, column: 12, scope: !10639)
!10641 = !DILocation(line: 1614, column: 40, scope: !10639)
!10642 = !DILocation(line: 1614, column: 45, scope: !10639)
!10643 = !DILocation(line: 1614, column: 58, scope: !10639)
!10644 = !DILocation(line: 1614, column: 71, scope: !10639)
!10645 = !DILocation(line: 1614, column: 26, scope: !10639)
!10646 = !DILocation(line: 1615, column: 27, scope: !10639)
!10647 = !DILocation(line: 1615, column: 32, scope: !10639)
!10648 = !DILocation(line: 1615, column: 45, scope: !10639)
!10649 = !DILocation(line: 1615, column: 58, scope: !10639)
!10650 = !DILocation(line: 1615, column: 6, scope: !10639)
!10651 = !DILocation(line: 1616, column: 5, scope: !10639)
!10652 = !DILocation(line: 1619, column: 26, scope: !10653)
!10653 = distinct !DILexicalBlock(scope: !10632, file: !3, line: 1618, column: 10)
!10654 = !DILocation(line: 1619, column: 31, scope: !10653)
!10655 = !DILocation(line: 1619, column: 44, scope: !10653)
!10656 = !DILocation(line: 1619, column: 66, scope: !10653)
!10657 = !DILocation(line: 1619, column: 77, scope: !10653)
!10658 = !DILocation(line: 1619, column: 92, scope: !10653)
!10659 = !DILocation(line: 1619, column: 6, scope: !10653)
!10660 = !DILocation(line: 1621, column: 4, scope: !10633)
!10661 = !DILocation(line: 1622, column: 3, scope: !10590)
!10662 = !DILocalVariable(name: "dw_old", scope: !10663, file: !3, line: 1625, type: !3404)
!10663 = distinct !DILexicalBlock(scope: !10587, file: !3, line: 1623, column: 8)
!10664 = !DILocation(line: 1625, column: 19, scope: !10663)
!10665 = !DILocation(line: 1625, column: 28, scope: !10663)
!10666 = !DILocation(line: 1625, column: 33, scope: !10663)
!10667 = !DILocalVariable(name: "dw_new", scope: !10663, file: !3, line: 1626, type: !3404)
!10668 = !DILocation(line: 1626, column: 19, scope: !10663)
!10669 = !DILocation(line: 1626, column: 28, scope: !10663)
!10670 = !DILocation(line: 1626, column: 33, scope: !10663)
!10671 = !DILocation(line: 1628, column: 13, scope: !10672)
!10672 = distinct !DILexicalBlock(scope: !10663, file: !3, line: 1628, column: 4)
!10673 = !DILocation(line: 1628, column: 18, scope: !10672)
!10674 = !DILocation(line: 1628, column: 11, scope: !10672)
!10675 = !DILocation(line: 1628, column: 9, scope: !10672)
!10676 = !DILocation(line: 1628, column: 29, scope: !10677)
!10677 = distinct !DILexicalBlock(scope: !10672, file: !3, line: 1628, column: 4)
!10678 = !DILocation(line: 1628, column: 31, scope: !10677)
!10679 = !DILocation(line: 1628, column: 4, scope: !10672)
!10680 = !DILocation(line: 1629, column: 22, scope: !10681)
!10681 = distinct !DILexicalBlock(scope: !10677, file: !3, line: 1628, column: 62)
!10682 = !DILocation(line: 1629, column: 30, scope: !10681)
!10683 = !DILocation(line: 1629, column: 5, scope: !10681)
!10684 = !DILocation(line: 1629, column: 13, scope: !10681)
!10685 = !DILocation(line: 1629, column: 20, scope: !10681)
!10686 = !DILocation(line: 1630, column: 4, scope: !10681)
!10687 = !DILocation(line: 1628, column: 38, scope: !10677)
!10688 = !DILocation(line: 1628, column: 48, scope: !10677)
!10689 = !DILocation(line: 1628, column: 58, scope: !10677)
!10690 = !DILocation(line: 1628, column: 4, scope: !10677)
!10691 = distinct !{!10691, !10679, !10692}
!10692 = !DILocation(line: 1630, column: 4, scope: !10672)
!10693 = !DILocation(line: 1632, column: 2, scope: !10563)
!10694 = !DILocation(line: 1634, column: 2, scope: !10415)
!10695 = !DILocation(line: 1634, column: 12, scope: !10415)
!10696 = !DILocation(line: 1635, column: 1, scope: !10415)
!10697 = distinct !DISubprogram(name: "do_weight_paint_normalize_all", scope: !3, file: !3, line: 1280, type: !10698, scopeLine: 1281, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2758, retainedNodes: !3422)
!10698 = !DISubroutineType(types: !10699)
!10699 = !{null, !3406, !3408, !3412}
!10700 = !DILocalVariable(name: "dvert", arg: 1, scope: !10697, file: !3, line: 1280, type: !3406)
!10701 = !DILocation(line: 1280, column: 56, scope: !10697)
!10702 = !DILocalVariable(name: "defbase_tot", arg: 2, scope: !10697, file: !3, line: 1280, type: !3408)
!10703 = !DILocation(line: 1280, column: 73, scope: !10697)
!10704 = !DILocalVariable(name: "vgroup_validmap", arg: 3, scope: !10697, file: !3, line: 1280, type: !3412)
!10705 = !DILocation(line: 1280, column: 98, scope: !10697)
!10706 = !DILocalVariable(name: "sum", scope: !10697, file: !3, line: 1282, type: !210)
!10707 = !DILocation(line: 1282, column: 8, scope: !10697)
!10708 = !DILocalVariable(name: "fac", scope: !10697, file: !3, line: 1282, type: !210)
!10709 = !DILocation(line: 1282, column: 20, scope: !10697)
!10710 = !DILocalVariable(name: "i", scope: !10697, file: !3, line: 1283, type: !231)
!10711 = !DILocation(line: 1283, column: 15, scope: !10697)
!10712 = !DILocalVariable(name: "tot", scope: !10697, file: !3, line: 1283, type: !231)
!10713 = !DILocation(line: 1283, column: 18, scope: !10697)
!10714 = !DILocalVariable(name: "dw", scope: !10697, file: !3, line: 1284, type: !3404)
!10715 = !DILocation(line: 1284, column: 17, scope: !10697)
!10716 = !DILocation(line: 1286, column: 11, scope: !10717)
!10717 = distinct !DILexicalBlock(scope: !10697, file: !3, line: 1286, column: 2)
!10718 = !DILocation(line: 1286, column: 18, scope: !10717)
!10719 = !DILocation(line: 1286, column: 9, scope: !10717)
!10720 = !DILocation(line: 1286, column: 34, scope: !10717)
!10721 = !DILocation(line: 1286, column: 41, scope: !10717)
!10722 = !DILocation(line: 1286, column: 32, scope: !10717)
!10723 = !DILocation(line: 1286, column: 7, scope: !10717)
!10724 = !DILocation(line: 1286, column: 45, scope: !10725)
!10725 = distinct !DILexicalBlock(scope: !10717, file: !3, line: 1286, column: 2)
!10726 = !DILocation(line: 1286, column: 47, scope: !10725)
!10727 = !DILocation(line: 1286, column: 2, scope: !10717)
!10728 = !DILocation(line: 1287, column: 7, scope: !10729)
!10729 = distinct !DILexicalBlock(scope: !10730, file: !3, line: 1287, column: 7)
!10730 = distinct !DILexicalBlock(scope: !10725, file: !3, line: 1286, column: 64)
!10731 = !DILocation(line: 1287, column: 11, scope: !10729)
!10732 = !DILocation(line: 1287, column: 20, scope: !10729)
!10733 = !DILocation(line: 1287, column: 18, scope: !10729)
!10734 = !DILocation(line: 1287, column: 32, scope: !10729)
!10735 = !DILocation(line: 1287, column: 35, scope: !10729)
!10736 = !DILocation(line: 1287, column: 51, scope: !10729)
!10737 = !DILocation(line: 1287, column: 55, scope: !10729)
!10738 = !DILocation(line: 1287, column: 7, scope: !10730)
!10739 = !DILocation(line: 1288, column: 7, scope: !10740)
!10740 = distinct !DILexicalBlock(scope: !10729, file: !3, line: 1287, column: 64)
!10741 = !DILocation(line: 1289, column: 11, scope: !10740)
!10742 = !DILocation(line: 1289, column: 15, scope: !10740)
!10743 = !DILocation(line: 1289, column: 8, scope: !10740)
!10744 = !DILocation(line: 1290, column: 3, scope: !10740)
!10745 = !DILocation(line: 1291, column: 2, scope: !10730)
!10746 = !DILocation(line: 1286, column: 54, scope: !10725)
!10747 = !DILocation(line: 1286, column: 60, scope: !10725)
!10748 = !DILocation(line: 1286, column: 2, scope: !10725)
!10749 = distinct !{!10749, !10727, !10750}
!10750 = !DILocation(line: 1291, column: 2, scope: !10717)
!10751 = !DILocation(line: 1293, column: 7, scope: !10752)
!10752 = distinct !DILexicalBlock(scope: !10697, file: !3, line: 1293, column: 6)
!10753 = !DILocation(line: 1293, column: 11, scope: !10752)
!10754 = !DILocation(line: 1293, column: 17, scope: !10752)
!10755 = !DILocation(line: 1293, column: 21, scope: !10752)
!10756 = !DILocation(line: 1293, column: 25, scope: !10752)
!10757 = !DILocation(line: 1293, column: 6, scope: !10697)
!10758 = !DILocation(line: 1294, column: 3, scope: !10759)
!10759 = distinct !DILexicalBlock(scope: !10752, file: !3, line: 1293, column: 35)
!10760 = !DILocation(line: 1297, column: 6, scope: !10761)
!10761 = distinct !DILexicalBlock(scope: !10697, file: !3, line: 1297, column: 6)
!10762 = !DILocation(line: 1297, column: 10, scope: !10761)
!10763 = !DILocation(line: 1297, column: 6, scope: !10697)
!10764 = !DILocation(line: 1298, column: 16, scope: !10765)
!10765 = distinct !DILexicalBlock(scope: !10761, file: !3, line: 1297, column: 19)
!10766 = !DILocation(line: 1298, column: 14, scope: !10765)
!10767 = !DILocation(line: 1298, column: 7, scope: !10765)
!10768 = !DILocation(line: 1300, column: 12, scope: !10769)
!10769 = distinct !DILexicalBlock(scope: !10765, file: !3, line: 1300, column: 3)
!10770 = !DILocation(line: 1300, column: 19, scope: !10769)
!10771 = !DILocation(line: 1300, column: 10, scope: !10769)
!10772 = !DILocation(line: 1300, column: 35, scope: !10769)
!10773 = !DILocation(line: 1300, column: 42, scope: !10769)
!10774 = !DILocation(line: 1300, column: 33, scope: !10769)
!10775 = !DILocation(line: 1300, column: 8, scope: !10769)
!10776 = !DILocation(line: 1300, column: 46, scope: !10777)
!10777 = distinct !DILexicalBlock(scope: !10769, file: !3, line: 1300, column: 3)
!10778 = !DILocation(line: 1300, column: 48, scope: !10777)
!10779 = !DILocation(line: 1300, column: 3, scope: !10769)
!10780 = !DILocation(line: 1301, column: 8, scope: !10781)
!10781 = distinct !DILexicalBlock(scope: !10782, file: !3, line: 1301, column: 8)
!10782 = distinct !DILexicalBlock(scope: !10777, file: !3, line: 1300, column: 65)
!10783 = !DILocation(line: 1301, column: 12, scope: !10781)
!10784 = !DILocation(line: 1301, column: 21, scope: !10781)
!10785 = !DILocation(line: 1301, column: 19, scope: !10781)
!10786 = !DILocation(line: 1301, column: 33, scope: !10781)
!10787 = !DILocation(line: 1301, column: 36, scope: !10781)
!10788 = !DILocation(line: 1301, column: 52, scope: !10781)
!10789 = !DILocation(line: 1301, column: 56, scope: !10781)
!10790 = !DILocation(line: 1301, column: 8, scope: !10782)
!10791 = !DILocation(line: 1302, column: 19, scope: !10792)
!10792 = distinct !DILexicalBlock(scope: !10781, file: !3, line: 1301, column: 65)
!10793 = !DILocation(line: 1302, column: 5, scope: !10792)
!10794 = !DILocation(line: 1302, column: 9, scope: !10792)
!10795 = !DILocation(line: 1302, column: 16, scope: !10792)
!10796 = !DILocation(line: 1303, column: 4, scope: !10792)
!10797 = !DILocation(line: 1304, column: 3, scope: !10782)
!10798 = !DILocation(line: 1300, column: 55, scope: !10777)
!10799 = !DILocation(line: 1300, column: 61, scope: !10777)
!10800 = !DILocation(line: 1300, column: 3, scope: !10777)
!10801 = distinct !{!10801, !10779, !10802}
!10802 = !DILocation(line: 1304, column: 3, scope: !10769)
!10803 = !DILocation(line: 1305, column: 2, scope: !10765)
!10804 = !DILocation(line: 1308, column: 16, scope: !10805)
!10805 = distinct !DILexicalBlock(scope: !10761, file: !3, line: 1306, column: 7)
!10806 = !DILocation(line: 1308, column: 14, scope: !10805)
!10807 = !DILocation(line: 1308, column: 7, scope: !10805)
!10808 = !DILocation(line: 1310, column: 12, scope: !10809)
!10809 = distinct !DILexicalBlock(scope: !10805, file: !3, line: 1310, column: 3)
!10810 = !DILocation(line: 1310, column: 19, scope: !10809)
!10811 = !DILocation(line: 1310, column: 10, scope: !10809)
!10812 = !DILocation(line: 1310, column: 35, scope: !10809)
!10813 = !DILocation(line: 1310, column: 42, scope: !10809)
!10814 = !DILocation(line: 1310, column: 33, scope: !10809)
!10815 = !DILocation(line: 1310, column: 8, scope: !10809)
!10816 = !DILocation(line: 1310, column: 46, scope: !10817)
!10817 = distinct !DILexicalBlock(scope: !10809, file: !3, line: 1310, column: 3)
!10818 = !DILocation(line: 1310, column: 48, scope: !10817)
!10819 = !DILocation(line: 1310, column: 3, scope: !10809)
!10820 = !DILocation(line: 1311, column: 8, scope: !10821)
!10821 = distinct !DILexicalBlock(scope: !10822, file: !3, line: 1311, column: 8)
!10822 = distinct !DILexicalBlock(scope: !10817, file: !3, line: 1310, column: 65)
!10823 = !DILocation(line: 1311, column: 12, scope: !10821)
!10824 = !DILocation(line: 1311, column: 21, scope: !10821)
!10825 = !DILocation(line: 1311, column: 19, scope: !10821)
!10826 = !DILocation(line: 1311, column: 33, scope: !10821)
!10827 = !DILocation(line: 1311, column: 36, scope: !10821)
!10828 = !DILocation(line: 1311, column: 52, scope: !10821)
!10829 = !DILocation(line: 1311, column: 56, scope: !10821)
!10830 = !DILocation(line: 1311, column: 8, scope: !10822)
!10831 = !DILocation(line: 1312, column: 18, scope: !10832)
!10832 = distinct !DILexicalBlock(scope: !10821, file: !3, line: 1311, column: 65)
!10833 = !DILocation(line: 1312, column: 5, scope: !10832)
!10834 = !DILocation(line: 1312, column: 9, scope: !10832)
!10835 = !DILocation(line: 1312, column: 16, scope: !10832)
!10836 = !DILocation(line: 1313, column: 4, scope: !10832)
!10837 = !DILocation(line: 1314, column: 3, scope: !10822)
!10838 = !DILocation(line: 1310, column: 55, scope: !10817)
!10839 = !DILocation(line: 1310, column: 61, scope: !10817)
!10840 = !DILocation(line: 1310, column: 3, scope: !10817)
!10841 = distinct !{!10841, !10819, !10842}
!10842 = !DILocation(line: 1314, column: 3, scope: !10809)
!10843 = !DILocation(line: 1316, column: 1, scope: !10697)
!10844 = distinct !DISubprogram(name: "redistribute_change", scope: !3, file: !3, line: 1467, type: !10845, scopeLine: 1471, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2758, retainedNodes: !3422)
!10845 = !DISubroutineType(types: !10846)
!10846 = !{!210, !3406, !3408, !192, !13, !22, !210, !210, !259}
!10847 = !DILocalVariable(name: "ndv", arg: 1, scope: !10844, file: !3, line: 1467, type: !3406)
!10848 = !DILocation(line: 1467, column: 47, scope: !10844)
!10849 = !DILocalVariable(name: "defbase_tot", arg: 2, scope: !10844, file: !3, line: 1467, type: !3408)
!10850 = !DILocation(line: 1467, column: 62, scope: !10844)
!10851 = !DILocalVariable(name: "change_status", arg: 3, scope: !10844, file: !3, line: 1468, type: !192)
!10852 = !DILocation(line: 1468, column: 40, scope: !10844)
!10853 = !DILocalVariable(name: "change_me", arg: 4, scope: !10844, file: !3, line: 1468, type: !13)
!10854 = !DILocation(line: 1468, column: 66, scope: !10844)
!10855 = !DILocalVariable(name: "changeto", arg: 5, scope: !10844, file: !3, line: 1468, type: !22)
!10856 = !DILocation(line: 1468, column: 81, scope: !10844)
!10857 = !DILocalVariable(name: "totchange", arg: 6, scope: !10844, file: !3, line: 1469, type: !210)
!10858 = !DILocation(line: 1469, column: 40, scope: !10844)
!10859 = !DILocalVariable(name: "total_valid", arg: 7, scope: !10844, file: !3, line: 1469, type: !210)
!10860 = !DILocation(line: 1469, column: 57, scope: !10844)
!10861 = !DILocalVariable(name: "do_auto_normalize", arg: 8, scope: !10844, file: !3, line: 1470, type: !259)
!10862 = !DILocation(line: 1470, column: 39, scope: !10844)
!10863 = !DILocalVariable(name: "changed", scope: !10844, file: !3, line: 1472, type: !259)
!10864 = !DILocation(line: 1472, column: 7, scope: !10844)
!10865 = !DILocalVariable(name: "change", scope: !10844, file: !3, line: 1473, type: !210)
!10866 = !DILocation(line: 1473, column: 8, scope: !10844)
!10867 = !DILocalVariable(name: "oldval", scope: !10844, file: !3, line: 1474, type: !210)
!10868 = !DILocation(line: 1474, column: 8, scope: !10844)
!10869 = !DILocalVariable(name: "ndw", scope: !10844, file: !3, line: 1475, type: !3404)
!10870 = !DILocation(line: 1475, column: 17, scope: !10844)
!10871 = !DILocalVariable(name: "i", scope: !10844, file: !3, line: 1476, type: !22)
!10872 = !DILocation(line: 1476, column: 6, scope: !10844)
!10873 = !DILocation(line: 1477, column: 2, scope: !10844)
!10874 = !DILocation(line: 1479, column: 11, scope: !10875)
!10875 = distinct !DILexicalBlock(scope: !10844, file: !3, line: 1477, column: 5)
!10876 = !DILocation(line: 1481, column: 12, scope: !10875)
!10877 = !DILocation(line: 1481, column: 24, scope: !10875)
!10878 = !DILocation(line: 1481, column: 22, scope: !10875)
!10879 = !DILocation(line: 1481, column: 10, scope: !10875)
!10880 = !DILocation(line: 1482, column: 10, scope: !10881)
!10881 = distinct !DILexicalBlock(scope: !10875, file: !3, line: 1482, column: 3)
!10882 = !DILocation(line: 1482, column: 8, scope: !10881)
!10883 = !DILocation(line: 1482, column: 15, scope: !10884)
!10884 = distinct !DILexicalBlock(scope: !10881, file: !3, line: 1482, column: 3)
!10885 = !DILocation(line: 1482, column: 19, scope: !10884)
!10886 = !DILocation(line: 1482, column: 24, scope: !10884)
!10887 = !DILocation(line: 1482, column: 17, scope: !10884)
!10888 = !DILocation(line: 1482, column: 34, scope: !10884)
!10889 = !DILocation(line: 1482, column: 37, scope: !10884)
!10890 = !DILocation(line: 1482, column: 49, scope: !10884)
!10891 = !DILocation(line: 1482, column: 52, scope: !10884)
!10892 = !DILocation(line: 0, scope: !10884)
!10893 = !DILocation(line: 1482, column: 3, scope: !10881)
!10894 = !DILocation(line: 1483, column: 11, scope: !10895)
!10895 = distinct !DILexicalBlock(scope: !10884, file: !3, line: 1482, column: 68)
!10896 = !DILocation(line: 1483, column: 16, scope: !10895)
!10897 = !DILocation(line: 1483, column: 21, scope: !10895)
!10898 = !DILocation(line: 1483, column: 19, scope: !10895)
!10899 = !DILocation(line: 1483, column: 8, scope: !10895)
!10900 = !DILocation(line: 1486, column: 8, scope: !10901)
!10901 = distinct !DILexicalBlock(scope: !10895, file: !3, line: 1486, column: 8)
!10902 = !DILocation(line: 1486, column: 13, scope: !10901)
!10903 = !DILocation(line: 1486, column: 22, scope: !10901)
!10904 = !DILocation(line: 1486, column: 20, scope: !10901)
!10905 = !DILocation(line: 1486, column: 8, scope: !10895)
!10906 = !DILocation(line: 1489, column: 9, scope: !10907)
!10907 = distinct !DILexicalBlock(scope: !10908, file: !3, line: 1489, column: 9)
!10908 = distinct !DILexicalBlock(scope: !10901, file: !3, line: 1486, column: 35)
!10909 = !DILocation(line: 1489, column: 23, scope: !10907)
!10910 = !DILocation(line: 1489, column: 28, scope: !10907)
!10911 = !DILocation(line: 1489, column: 39, scope: !10907)
!10912 = !DILocation(line: 1489, column: 36, scope: !10907)
!10913 = !DILocation(line: 1489, column: 9, scope: !10908)
!10914 = !DILocation(line: 1490, column: 15, scope: !10915)
!10915 = distinct !DILexicalBlock(scope: !10907, file: !3, line: 1489, column: 50)
!10916 = !DILocation(line: 1490, column: 20, scope: !10915)
!10917 = !DILocation(line: 1490, column: 13, scope: !10915)
!10918 = !DILocation(line: 1492, column: 10, scope: !10919)
!10919 = distinct !DILexicalBlock(scope: !10915, file: !3, line: 1492, column: 10)
!10920 = !DILocation(line: 1492, column: 28, scope: !10919)
!10921 = !DILocation(line: 1492, column: 37, scope: !10919)
!10922 = !DILocation(line: 1492, column: 40, scope: !10919)
!10923 = !DILocation(line: 1492, column: 45, scope: !10919)
!10924 = !DILocation(line: 1492, column: 54, scope: !10919)
!10925 = !DILocation(line: 1492, column: 52, scope: !10919)
!10926 = !DILocation(line: 1492, column: 61, scope: !10919)
!10927 = !DILocation(line: 1492, column: 10, scope: !10915)
!10928 = !DILocation(line: 1493, column: 27, scope: !10929)
!10929 = distinct !DILexicalBlock(scope: !10919, file: !3, line: 1492, column: 66)
!10930 = !DILocation(line: 1493, column: 32, scope: !10929)
!10931 = !DILocation(line: 1493, column: 25, scope: !10929)
!10932 = !DILocation(line: 1493, column: 17, scope: !10929)
!10933 = !DILocation(line: 1494, column: 7, scope: !10929)
!10934 = !DILocation(line: 1494, column: 12, scope: !10929)
!10935 = !DILocation(line: 1494, column: 19, scope: !10929)
!10936 = !DILocation(line: 1496, column: 36, scope: !10929)
!10937 = !DILocation(line: 1496, column: 7, scope: !10929)
!10938 = !DILocation(line: 1496, column: 21, scope: !10929)
!10939 = !DILocation(line: 1496, column: 26, scope: !10929)
!10940 = !DILocation(line: 1496, column: 34, scope: !10929)
!10941 = !DILocation(line: 1497, column: 18, scope: !10929)
!10942 = !DILocation(line: 1498, column: 6, scope: !10929)
!10943 = !DILocation(line: 1499, column: 15, scope: !10944)
!10944 = distinct !DILexicalBlock(scope: !10919, file: !3, line: 1499, column: 15)
!10945 = !DILocation(line: 1499, column: 20, scope: !10944)
!10946 = !DILocation(line: 1499, column: 29, scope: !10944)
!10947 = !DILocation(line: 1499, column: 27, scope: !10944)
!10948 = !DILocation(line: 1499, column: 36, scope: !10944)
!10949 = !DILocation(line: 1499, column: 15, scope: !10919)
!10950 = !DILocation(line: 1500, column: 20, scope: !10951)
!10951 = distinct !DILexicalBlock(scope: !10944, file: !3, line: 1499, column: 41)
!10952 = !DILocation(line: 1500, column: 25, scope: !10951)
!10953 = !DILocation(line: 1500, column: 17, scope: !10951)
!10954 = !DILocation(line: 1501, column: 7, scope: !10951)
!10955 = !DILocation(line: 1501, column: 12, scope: !10951)
!10956 = !DILocation(line: 1501, column: 19, scope: !10951)
!10957 = !DILocation(line: 1502, column: 36, scope: !10951)
!10958 = !DILocation(line: 1502, column: 7, scope: !10951)
!10959 = !DILocation(line: 1502, column: 21, scope: !10951)
!10960 = !DILocation(line: 1502, column: 26, scope: !10951)
!10961 = !DILocation(line: 1502, column: 34, scope: !10951)
!10962 = !DILocation(line: 1503, column: 18, scope: !10951)
!10963 = !DILocation(line: 1504, column: 6, scope: !10951)
!10964 = !DILocation(line: 1506, column: 20, scope: !10965)
!10965 = distinct !DILexicalBlock(scope: !10944, file: !3, line: 1505, column: 11)
!10966 = !DILocation(line: 1506, column: 17, scope: !10965)
!10967 = !DILocation(line: 1507, column: 22, scope: !10965)
!10968 = !DILocation(line: 1507, column: 7, scope: !10965)
!10969 = !DILocation(line: 1507, column: 12, scope: !10965)
!10970 = !DILocation(line: 1507, column: 19, scope: !10965)
!10971 = !DILocation(line: 1510, column: 10, scope: !10972)
!10972 = distinct !DILexicalBlock(scope: !10915, file: !3, line: 1510, column: 10)
!10973 = !DILocation(line: 1510, column: 20, scope: !10972)
!10974 = !DILocation(line: 1510, column: 25, scope: !10972)
!10975 = !DILocation(line: 1510, column: 17, scope: !10972)
!10976 = !DILocation(line: 1510, column: 10, scope: !10915)
!10977 = !DILocation(line: 1511, column: 15, scope: !10978)
!10978 = distinct !DILexicalBlock(scope: !10972, file: !3, line: 1510, column: 33)
!10979 = !DILocation(line: 1512, column: 6, scope: !10978)
!10980 = !DILocation(line: 1513, column: 5, scope: !10915)
!10981 = !DILocation(line: 1514, column: 4, scope: !10908)
!10982 = !DILocation(line: 1515, column: 3, scope: !10895)
!10983 = !DILocation(line: 1482, column: 64, scope: !10884)
!10984 = !DILocation(line: 1482, column: 3, scope: !10884)
!10985 = distinct !{!10985, !10893, !10986}
!10986 = !DILocation(line: 1515, column: 3, scope: !10881)
!10987 = !DILocation(line: 1518, column: 2, scope: !10875)
!10988 = !DILocation(line: 1518, column: 11, scope: !10844)
!10989 = !DILocation(line: 1518, column: 19, scope: !10844)
!10990 = !DILocation(line: 1518, column: 22, scope: !10844)
!10991 = !DILocation(line: 1518, column: 34, scope: !10844)
!10992 = !DILocation(line: 1518, column: 37, scope: !10844)
!10993 = !DILocation(line: 0, scope: !10844)
!10994 = distinct !{!10994, !10873, !10995}
!10995 = !DILocation(line: 1518, column: 46, scope: !10844)
!10996 = !DILocation(line: 1520, column: 9, scope: !10844)
!10997 = !DILocation(line: 1520, column: 2, scope: !10844)
!10998 = distinct !DISubprogram(name: "vpaint_stroke_test_start", scope: !3, file: !3, line: 2782, type: !10999, scopeLine: 2783, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2758, retainedNodes: !3422)
!10999 = !DISubroutineType(types: !11000)
!11000 = !{!259, !3439, !26, !804}
!11001 = !DILocalVariable(name: "C", arg: 1, scope: !10998, file: !3, line: 2782, type: !3439)
!11002 = !DILocation(line: 2782, column: 48, scope: !10998)
!11003 = !DILocalVariable(name: "op", arg: 2, scope: !10998, file: !3, line: 2782, type: !26)
!11004 = !DILocation(line: 2782, column: 70, scope: !10998)
!11005 = !DILocalVariable(name: "UNUSED_mouse", arg: 3, scope: !10998, file: !3, line: 2782, type: !804)
!11006 = !DILocation(line: 2782, column: 86, scope: !10998)
!11007 = !DILocalVariable(name: "scene", scope: !10998, file: !3, line: 2784, type: !3688)
!11008 = !DILocation(line: 2784, column: 9, scope: !10998)
!11009 = !DILocation(line: 2784, column: 32, scope: !10998)
!11010 = !DILocation(line: 2784, column: 17, scope: !10998)
!11011 = !DILocalVariable(name: "ts", scope: !10998, file: !3, line: 2785, type: !4923)
!11012 = !DILocation(line: 2785, column: 16, scope: !10998)
!11013 = !DILocation(line: 2785, column: 21, scope: !10998)
!11014 = !DILocation(line: 2785, column: 28, scope: !10998)
!11015 = !DILocalVariable(name: "stroke", scope: !10998, file: !3, line: 2786, type: !6864)
!11016 = !DILocation(line: 2786, column: 22, scope: !10998)
!11017 = !DILocation(line: 2786, column: 31, scope: !10998)
!11018 = !DILocation(line: 2786, column: 35, scope: !10998)
!11019 = !DILocalVariable(name: "vp", scope: !10998, file: !3, line: 2787, type: !1538)
!11020 = !DILocation(line: 2787, column: 10, scope: !10998)
!11021 = !DILocation(line: 2787, column: 15, scope: !10998)
!11022 = !DILocation(line: 2787, column: 19, scope: !10998)
!11023 = !DILocalVariable(name: "brush", scope: !10998, file: !3, line: 2788, type: !3695)
!11024 = !DILocation(line: 2788, column: 9, scope: !10998)
!11025 = !DILocation(line: 2788, column: 34, scope: !10998)
!11026 = !DILocation(line: 2788, column: 38, scope: !10998)
!11027 = !DILocation(line: 2788, column: 17, scope: !10998)
!11028 = !DILocalVariable(name: "vpd", scope: !10998, file: !3, line: 2789, type: !11029)
!11029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11030, size: 64)
!11030 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VPaintData", file: !3, line: 2739, size: 1408, elements: !11031)
!11031 = !{!11032, !11033, !11034, !11035, !11038, !11039, !11040, !11041, !11044, !11045, !11046, !11047}
!11032 = !DIDerivedType(tag: DW_TAG_member, name: "vc", scope: !11030, file: !3, line: 2740, baseType: !4679, size: 512)
!11033 = !DIDerivedType(tag: DW_TAG_member, name: "paintcol", scope: !11030, file: !3, line: 2741, baseType: !231, size: 32, offset: 512)
!11034 = !DIDerivedType(tag: DW_TAG_member, name: "indexar", scope: !11030, file: !3, line: 2742, baseType: !250, size: 64, offset: 576)
!11035 = !DIDerivedType(tag: DW_TAG_member, name: "vp_handle", scope: !11030, file: !3, line: 2744, baseType: !11036, size: 64, offset: 640)
!11036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11037, size: 64)
!11037 = !DICompositeType(tag: DW_TAG_structure_type, name: "VertProjHandle", file: !3182, line: 135, flags: DIFlagFwdDecl)
!11038 = !DIDerivedType(tag: DW_TAG_member, name: "vertexcosnos", scope: !11030, file: !3, line: 2745, baseType: !6895, size: 64, offset: 704)
!11039 = !DIDerivedType(tag: DW_TAG_member, name: "vpimat", scope: !11030, file: !3, line: 2747, baseType: !272, size: 288, offset: 768)
!11040 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_update", scope: !11030, file: !3, line: 2751, baseType: !259, size: 8, offset: 1056)
!11041 = !DIDerivedType(tag: DW_TAG_member, name: "polyfacemap", scope: !11030, file: !3, line: 2754, baseType: !11042, size: 64, offset: 1088)
!11042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11043, size: 64)
!11043 = !DIDerivedType(tag: DW_TAG_typedef, name: "MeshElemMap", file: !247, line: 99, baseType: !246)
!11044 = !DIDerivedType(tag: DW_TAG_member, name: "polyfacemap_mem", scope: !11030, file: !3, line: 2755, baseType: !56, size: 64, offset: 1152)
!11045 = !DIDerivedType(tag: DW_TAG_member, name: "mlooptag", scope: !11030, file: !3, line: 2759, baseType: !1742, size: 64, offset: 1216)
!11046 = !DIDerivedType(tag: DW_TAG_member, name: "mfacetag", scope: !11030, file: !3, line: 2760, baseType: !1742, size: 64, offset: 1280)
!11047 = !DIDerivedType(tag: DW_TAG_member, name: "is_texbrush", scope: !11030, file: !3, line: 2762, baseType: !259, size: 8, offset: 1344)
!11048 = !DILocation(line: 2789, column: 21, scope: !10998)
!11049 = !DILocalVariable(name: "ob", scope: !10998, file: !3, line: 2790, type: !3444)
!11050 = !DILocation(line: 2790, column: 10, scope: !10998)
!11051 = !DILocation(line: 2790, column: 38, scope: !10998)
!11052 = !DILocation(line: 2790, column: 15, scope: !10998)
!11053 = !DILocalVariable(name: "me", scope: !10998, file: !3, line: 2791, type: !3187)
!11054 = !DILocation(line: 2791, column: 8, scope: !10998)
!11055 = !DILocalVariable(name: "mat", scope: !10998, file: !3, line: 2792, type: !428)
!11056 = !DILocation(line: 2792, column: 8, scope: !10998)
!11057 = !DILocalVariable(name: "imat", scope: !10998, file: !3, line: 2792, type: !428)
!11058 = !DILocation(line: 2792, column: 19, scope: !10998)
!11059 = !DILocation(line: 2795, column: 28, scope: !10998)
!11060 = !DILocation(line: 2795, column: 7, scope: !10998)
!11061 = !DILocation(line: 2795, column: 5, scope: !10998)
!11062 = !DILocation(line: 2796, column: 6, scope: !11063)
!11063 = distinct !DILexicalBlock(scope: !10998, file: !3, line: 2796, column: 6)
!11064 = !DILocation(line: 2796, column: 9, scope: !11063)
!11065 = !DILocation(line: 2796, column: 17, scope: !11063)
!11066 = !DILocation(line: 2796, column: 20, scope: !11063)
!11067 = !DILocation(line: 2796, column: 24, scope: !11063)
!11068 = !DILocation(line: 2796, column: 32, scope: !11063)
!11069 = !DILocation(line: 2796, column: 6, scope: !10998)
!11070 = !DILocation(line: 2797, column: 3, scope: !11063)
!11071 = !DILocation(line: 2799, column: 6, scope: !11072)
!11072 = distinct !DILexicalBlock(scope: !10998, file: !3, line: 2799, column: 6)
!11073 = !DILocation(line: 2799, column: 10, scope: !11072)
!11074 = !DILocation(line: 2799, column: 19, scope: !11072)
!11075 = !DILocation(line: 2799, column: 6, scope: !10998)
!11076 = !DILocation(line: 2800, column: 18, scope: !11072)
!11077 = !DILocation(line: 2800, column: 3, scope: !11072)
!11078 = !DILocation(line: 2801, column: 6, scope: !11079)
!11079 = distinct !DILexicalBlock(scope: !10998, file: !3, line: 2801, column: 6)
!11080 = !DILocation(line: 2801, column: 10, scope: !11079)
!11081 = !DILocation(line: 2801, column: 19, scope: !11079)
!11082 = !DILocation(line: 2801, column: 6, scope: !10998)
!11083 = !DILocation(line: 2802, column: 3, scope: !11079)
!11084 = !DILocation(line: 2807, column: 23, scope: !10998)
!11085 = !DILocation(line: 2807, column: 27, scope: !10998)
!11086 = !DILocation(line: 2807, column: 2, scope: !10998)
!11087 = !DILocation(line: 2810, column: 8, scope: !10998)
!11088 = !DILocation(line: 2810, column: 6, scope: !10998)
!11089 = !DILocation(line: 2811, column: 29, scope: !10998)
!11090 = !DILocation(line: 2811, column: 37, scope: !10998)
!11091 = !DILocation(line: 2811, column: 2, scope: !10998)
!11092 = !DILocation(line: 2812, column: 25, scope: !10998)
!11093 = !DILocation(line: 2812, column: 29, scope: !10998)
!11094 = !DILocation(line: 2812, column: 34, scope: !10998)
!11095 = !DILocation(line: 2812, column: 2, scope: !10998)
!11096 = !DILocation(line: 2814, column: 48, scope: !10998)
!11097 = !DILocation(line: 2814, column: 53, scope: !10998)
!11098 = !DILocation(line: 2814, column: 56, scope: !10998)
!11099 = !DILocation(line: 2814, column: 63, scope: !10998)
!11100 = !DILocation(line: 2814, column: 68, scope: !10998)
!11101 = !DILocation(line: 2814, column: 73, scope: !10998)
!11102 = !DILocation(line: 2814, column: 19, scope: !10998)
!11103 = !DILocation(line: 2814, column: 2, scope: !10998)
!11104 = !DILocation(line: 2814, column: 7, scope: !10998)
!11105 = !DILocation(line: 2814, column: 17, scope: !10998)
!11106 = !DILocation(line: 2816, column: 32, scope: !10998)
!11107 = !DILocation(line: 2816, column: 17, scope: !10998)
!11108 = !DILocation(line: 2816, column: 2, scope: !10998)
!11109 = !DILocation(line: 2816, column: 7, scope: !10998)
!11110 = !DILocation(line: 2816, column: 15, scope: !10998)
!11111 = !DILocation(line: 2817, column: 41, scope: !10998)
!11112 = !DILocation(line: 2817, column: 48, scope: !10998)
!11113 = !DILocation(line: 2817, column: 18, scope: !10998)
!11114 = !DILocation(line: 2817, column: 2, scope: !10998)
!11115 = !DILocation(line: 2817, column: 7, scope: !10998)
!11116 = !DILocation(line: 2817, column: 16, scope: !10998)
!11117 = !DILocation(line: 2819, column: 23, scope: !10998)
!11118 = !DILocation(line: 2819, column: 30, scope: !10998)
!11119 = !DILocation(line: 2819, column: 47, scope: !10998)
!11120 = !DILocation(line: 2819, column: 68, scope: !10998)
!11121 = !DILocation(line: 2820, column: 21, scope: !10998)
!11122 = !DILocation(line: 2820, column: 28, scope: !10998)
!11123 = !DILocation(line: 2820, column: 33, scope: !10998)
!11124 = !DILocation(line: 0, scope: !10998)
!11125 = !DILocation(line: 2819, column: 21, scope: !10998)
!11126 = !DILocation(line: 2819, column: 2, scope: !10998)
!11127 = !DILocation(line: 2819, column: 7, scope: !10998)
!11128 = !DILocation(line: 2819, column: 19, scope: !10998)
!11129 = !DILocation(line: 2824, column: 41, scope: !11130)
!11130 = distinct !DILexicalBlock(scope: !10998, file: !3, line: 2824, column: 6)
!11131 = !DILocation(line: 2824, column: 6, scope: !11130)
!11132 = !DILocation(line: 2824, column: 6, scope: !10998)
!11133 = !DILocation(line: 2825, column: 29, scope: !11134)
!11134 = distinct !DILexicalBlock(scope: !11130, file: !3, line: 2824, column: 46)
!11135 = !DILocation(line: 2825, column: 34, scope: !11134)
!11136 = !DILocation(line: 2825, column: 3, scope: !11134)
!11137 = !DILocation(line: 2826, column: 3, scope: !11134)
!11138 = !DILocation(line: 2826, column: 8, scope: !11134)
!11139 = !DILocation(line: 2826, column: 24, scope: !11134)
!11140 = !DILocation(line: 2828, column: 2, scope: !11134)
!11141 = !DILocation(line: 2830, column: 3, scope: !11142)
!11142 = distinct !DILexicalBlock(scope: !11130, file: !3, line: 2829, column: 7)
!11143 = !DILocation(line: 2830, column: 8, scope: !11142)
!11144 = !DILocation(line: 2830, column: 24, scope: !11142)
!11145 = !DILocation(line: 2835, column: 6, scope: !11146)
!11146 = distinct !DILexicalBlock(scope: !10998, file: !3, line: 2835, column: 6)
!11147 = !DILocation(line: 2835, column: 13, scope: !11146)
!11148 = !DILocation(line: 2835, column: 30, scope: !11146)
!11149 = !DILocation(line: 2835, column: 6, scope: !10998)
!11150 = !DILocation(line: 2836, column: 19, scope: !11151)
!11151 = distinct !DILexicalBlock(scope: !11146, file: !3, line: 2835, column: 51)
!11152 = !DILocation(line: 2836, column: 46, scope: !11151)
!11153 = !DILocation(line: 2836, column: 50, scope: !11151)
!11154 = !DILocation(line: 2836, column: 44, scope: !11151)
!11155 = !DILocation(line: 2836, column: 3, scope: !11151)
!11156 = !DILocation(line: 2836, column: 8, scope: !11151)
!11157 = !DILocation(line: 2836, column: 17, scope: !11151)
!11158 = !DILocation(line: 2837, column: 7, scope: !11159)
!11159 = distinct !DILexicalBlock(scope: !11151, file: !3, line: 2837, column: 7)
!11160 = !DILocation(line: 2837, column: 12, scope: !11159)
!11161 = !DILocation(line: 2837, column: 7, scope: !11151)
!11162 = !DILocation(line: 2838, column: 20, scope: !11159)
!11163 = !DILocation(line: 2838, column: 47, scope: !11159)
!11164 = !DILocation(line: 2838, column: 51, scope: !11159)
!11165 = !DILocation(line: 2838, column: 45, scope: !11159)
!11166 = !DILocation(line: 2838, column: 59, scope: !11159)
!11167 = !DILocation(line: 2838, column: 4, scope: !11159)
!11168 = !DILocation(line: 2838, column: 9, scope: !11159)
!11169 = !DILocation(line: 2838, column: 18, scope: !11159)
!11170 = !DILocation(line: 2839, column: 2, scope: !11151)
!11171 = !DILocation(line: 2842, column: 19, scope: !10998)
!11172 = !DILocation(line: 2842, column: 39, scope: !10998)
!11173 = !DILocation(line: 2842, column: 43, scope: !10998)
!11174 = !DILocation(line: 2842, column: 23, scope: !10998)
!11175 = !DILocation(line: 2842, column: 53, scope: !10998)
!11176 = !DILocation(line: 2842, column: 57, scope: !10998)
!11177 = !DILocation(line: 2842, column: 2, scope: !10998)
!11178 = !DILocation(line: 2845, column: 14, scope: !10998)
!11179 = !DILocation(line: 2845, column: 19, scope: !10998)
!11180 = !DILocation(line: 2845, column: 24, scope: !10998)
!11181 = !DILocation(line: 2845, column: 27, scope: !10998)
!11182 = !DILocation(line: 2845, column: 33, scope: !10998)
!11183 = !DILocation(line: 2845, column: 42, scope: !10998)
!11184 = !DILocation(line: 2845, column: 46, scope: !10998)
!11185 = !DILocation(line: 2845, column: 2, scope: !10998)
!11186 = !DILocation(line: 2846, column: 15, scope: !10998)
!11187 = !DILocation(line: 2846, column: 21, scope: !10998)
!11188 = !DILocation(line: 2846, column: 2, scope: !10998)
!11189 = !DILocation(line: 2847, column: 13, scope: !10998)
!11190 = !DILocation(line: 2847, column: 18, scope: !10998)
!11191 = !DILocation(line: 2847, column: 26, scope: !10998)
!11192 = !DILocation(line: 2847, column: 2, scope: !10998)
!11193 = !DILocation(line: 2849, column: 2, scope: !10998)
!11194 = !DILocation(line: 2850, column: 1, scope: !10998)
!11195 = distinct !DISubprogram(name: "vpaint_stroke_update_step", scope: !3, file: !3, line: 2954, type: !7038, scopeLine: 2955, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2758, retainedNodes: !3422)
!11196 = !DILocalVariable(name: "C", arg: 1, scope: !11195, file: !3, line: 2954, type: !3439)
!11197 = !DILocation(line: 2954, column: 49, scope: !11195)
!11198 = !DILocalVariable(name: "stroke", arg: 2, scope: !11195, file: !3, line: 2954, type: !6864)
!11199 = !DILocation(line: 2954, column: 72, scope: !11195)
!11200 = !DILocalVariable(name: "itemptr", arg: 3, scope: !11195, file: !3, line: 2954, type: !5035)
!11201 = !DILocation(line: 2954, column: 92, scope: !11195)
!11202 = !DILocalVariable(name: "scene", scope: !11195, file: !3, line: 2956, type: !3688)
!11203 = !DILocation(line: 2956, column: 9, scope: !11195)
!11204 = !DILocation(line: 2956, column: 32, scope: !11195)
!11205 = !DILocation(line: 2956, column: 17, scope: !11195)
!11206 = !DILocalVariable(name: "ts", scope: !11195, file: !3, line: 2957, type: !4923)
!11207 = !DILocation(line: 2957, column: 16, scope: !11195)
!11208 = !DILocation(line: 2957, column: 44, scope: !11195)
!11209 = !DILocation(line: 2957, column: 21, scope: !11195)
!11210 = !DILocalVariable(name: "vpd", scope: !11195, file: !3, line: 2958, type: !11029)
!11211 = !DILocation(line: 2958, column: 21, scope: !11195)
!11212 = !DILocation(line: 2958, column: 50, scope: !11195)
!11213 = !DILocation(line: 2958, column: 27, scope: !11195)
!11214 = !DILocalVariable(name: "vp", scope: !11195, file: !3, line: 2959, type: !1538)
!11215 = !DILocation(line: 2959, column: 10, scope: !11195)
!11216 = !DILocation(line: 2959, column: 15, scope: !11195)
!11217 = !DILocation(line: 2959, column: 19, scope: !11195)
!11218 = !DILocalVariable(name: "brush", scope: !11195, file: !3, line: 2960, type: !3695)
!11219 = !DILocation(line: 2960, column: 9, scope: !11195)
!11220 = !DILocation(line: 2960, column: 34, scope: !11195)
!11221 = !DILocation(line: 2960, column: 38, scope: !11195)
!11222 = !DILocation(line: 2960, column: 17, scope: !11195)
!11223 = !DILocalVariable(name: "vc", scope: !11195, file: !3, line: 2961, type: !7068)
!11224 = !DILocation(line: 2961, column: 15, scope: !11195)
!11225 = !DILocation(line: 2961, column: 21, scope: !11195)
!11226 = !DILocation(line: 2961, column: 26, scope: !11195)
!11227 = !DILocalVariable(name: "ob", scope: !11195, file: !3, line: 2962, type: !3444)
!11228 = !DILocation(line: 2962, column: 10, scope: !11195)
!11229 = !DILocation(line: 2962, column: 15, scope: !11195)
!11230 = !DILocation(line: 2962, column: 19, scope: !11195)
!11231 = !DILocalVariable(name: "me", scope: !11195, file: !3, line: 2963, type: !3187)
!11232 = !DILocation(line: 2963, column: 8, scope: !11195)
!11233 = !DILocation(line: 2963, column: 13, scope: !11195)
!11234 = !DILocation(line: 2963, column: 17, scope: !11195)
!11235 = !DILocalVariable(name: "mat", scope: !11195, file: !3, line: 2964, type: !428)
!11236 = !DILocation(line: 2964, column: 8, scope: !11195)
!11237 = !DILocalVariable(name: "indexar", scope: !11195, file: !3, line: 2965, type: !250)
!11238 = !DILocation(line: 2965, column: 7, scope: !11195)
!11239 = !DILocation(line: 2965, column: 17, scope: !11195)
!11240 = !DILocation(line: 2965, column: 22, scope: !11195)
!11241 = !DILocalVariable(name: "totindex", scope: !11195, file: !3, line: 2966, type: !22)
!11242 = !DILocation(line: 2966, column: 6, scope: !11195)
!11243 = !DILocalVariable(name: "index", scope: !11195, file: !3, line: 2966, type: !22)
!11244 = !DILocation(line: 2966, column: 16, scope: !11195)
!11245 = !DILocalVariable(name: "mval", scope: !11195, file: !3, line: 2967, type: !1052)
!11246 = !DILocation(line: 2967, column: 8, scope: !11195)
!11247 = !DILocalVariable(name: "pressure", scope: !11195, file: !3, line: 2969, type: !637)
!11248 = !DILocation(line: 2969, column: 14, scope: !11195)
!11249 = !DILocation(line: 2969, column: 39, scope: !11195)
!11250 = !DILocation(line: 2969, column: 25, scope: !11195)
!11251 = !DILocalVariable(name: "brush_size_pressure", scope: !11195, file: !3, line: 2970, type: !637)
!11252 = !DILocation(line: 2970, column: 14, scope: !11195)
!11253 = !DILocation(line: 2970, column: 55, scope: !11195)
!11254 = !DILocation(line: 2970, column: 62, scope: !11195)
!11255 = !DILocation(line: 2970, column: 36, scope: !11195)
!11256 = !DILocation(line: 2970, column: 100, scope: !11195)
!11257 = !DILocation(line: 2970, column: 107, scope: !11195)
!11258 = !DILocation(line: 2970, column: 72, scope: !11195)
!11259 = !DILocation(line: 2970, column: 116, scope: !11195)
!11260 = !DILocation(line: 2970, column: 69, scope: !11195)
!11261 = !DILocalVariable(name: "brush_alpha_pressure", scope: !11195, file: !3, line: 2971, type: !637)
!11262 = !DILocation(line: 2971, column: 14, scope: !11195)
!11263 = !DILocation(line: 2971, column: 57, scope: !11195)
!11264 = !DILocation(line: 2971, column: 64, scope: !11195)
!11265 = !DILocation(line: 2971, column: 37, scope: !11195)
!11266 = !DILocation(line: 2971, column: 103, scope: !11195)
!11267 = !DILocation(line: 2971, column: 110, scope: !11195)
!11268 = !DILocation(line: 2971, column: 74, scope: !11195)
!11269 = !DILocation(line: 2971, column: 119, scope: !11195)
!11270 = !DILocation(line: 2971, column: 71, scope: !11195)
!11271 = !DILocation(line: 2973, column: 22, scope: !11195)
!11272 = !DILocation(line: 2973, column: 40, scope: !11195)
!11273 = !DILocation(line: 2973, column: 2, scope: !11195)
!11274 = !DILocation(line: 2975, column: 31, scope: !11195)
!11275 = !DILocation(line: 2975, column: 2, scope: !11195)
!11276 = !DILocation(line: 2976, column: 27, scope: !11195)
!11277 = !DILocation(line: 2976, column: 31, scope: !11195)
!11278 = !DILocation(line: 2976, column: 35, scope: !11195)
!11279 = !DILocation(line: 2976, column: 2, scope: !11195)
!11280 = !DILocation(line: 2979, column: 14, scope: !11195)
!11281 = !DILocation(line: 2979, column: 19, scope: !11195)
!11282 = !DILocation(line: 2979, column: 23, scope: !11195)
!11283 = !DILocation(line: 2979, column: 29, scope: !11195)
!11284 = !DILocation(line: 2979, column: 38, scope: !11195)
!11285 = !DILocation(line: 2979, column: 42, scope: !11195)
!11286 = !DILocation(line: 2979, column: 2, scope: !11195)
!11287 = !DILocation(line: 2982, column: 33, scope: !11195)
!11288 = !DILocation(line: 2982, column: 37, scope: !11195)
!11289 = !DILocation(line: 2982, column: 46, scope: !11195)
!11290 = !DILocation(line: 2982, column: 50, scope: !11195)
!11291 = !DILocation(line: 2982, column: 59, scope: !11195)
!11292 = !DILocation(line: 2982, column: 68, scope: !11195)
!11293 = !DILocation(line: 2982, column: 77, scope: !11195)
!11294 = !DILocation(line: 2982, column: 13, scope: !11195)
!11295 = !DILocation(line: 2982, column: 11, scope: !11195)
!11296 = !DILocation(line: 2984, column: 7, scope: !11297)
!11297 = distinct !DILexicalBlock(scope: !11195, file: !3, line: 2984, column: 6)
!11298 = !DILocation(line: 2984, column: 11, scope: !11297)
!11299 = !DILocation(line: 2984, column: 20, scope: !11297)
!11300 = !DILocation(line: 2984, column: 46, scope: !11297)
!11301 = !DILocation(line: 2984, column: 49, scope: !11297)
!11302 = !DILocation(line: 2984, column: 53, scope: !11297)
!11303 = !DILocation(line: 2984, column: 6, scope: !11195)
!11304 = !DILocation(line: 2985, column: 14, scope: !11305)
!11305 = distinct !DILexicalBlock(scope: !11306, file: !3, line: 2985, column: 3)
!11306 = distinct !DILexicalBlock(scope: !11297, file: !3, line: 2984, column: 60)
!11307 = !DILocation(line: 2985, column: 8, scope: !11305)
!11308 = !DILocation(line: 2985, column: 19, scope: !11309)
!11309 = distinct !DILexicalBlock(scope: !11305, file: !3, line: 2985, column: 3)
!11310 = !DILocation(line: 2985, column: 27, scope: !11309)
!11311 = !DILocation(line: 2985, column: 25, scope: !11309)
!11312 = !DILocation(line: 2985, column: 3, scope: !11305)
!11313 = !DILocation(line: 2986, column: 8, scope: !11314)
!11314 = distinct !DILexicalBlock(scope: !11315, file: !3, line: 2986, column: 8)
!11315 = distinct !DILexicalBlock(scope: !11309, file: !3, line: 2985, column: 46)
!11316 = !DILocation(line: 2986, column: 16, scope: !11314)
!11317 = !DILocation(line: 2986, column: 23, scope: !11314)
!11318 = !DILocation(line: 2986, column: 26, scope: !11314)
!11319 = !DILocation(line: 2986, column: 34, scope: !11314)
!11320 = !DILocation(line: 2986, column: 44, scope: !11314)
!11321 = !DILocation(line: 2986, column: 48, scope: !11314)
!11322 = !DILocation(line: 2986, column: 41, scope: !11314)
!11323 = !DILocation(line: 2986, column: 8, scope: !11315)
!11324 = !DILocalVariable(name: "mpoly", scope: !11325, file: !3, line: 2987, type: !3410)
!11325 = distinct !DILexicalBlock(scope: !11314, file: !3, line: 2986, column: 57)
!11326 = !DILocation(line: 2987, column: 12, scope: !11325)
!11327 = !DILocation(line: 2987, column: 30, scope: !11325)
!11328 = !DILocation(line: 2987, column: 34, scope: !11325)
!11329 = !DILocation(line: 2987, column: 44, scope: !11325)
!11330 = !DILocation(line: 2987, column: 52, scope: !11325)
!11331 = !DILocation(line: 2987, column: 59, scope: !11325)
!11332 = !DILocation(line: 2987, column: 41, scope: !11325)
!11333 = !DILocation(line: 2989, column: 10, scope: !11334)
!11334 = distinct !DILexicalBlock(scope: !11325, file: !3, line: 2989, column: 9)
!11335 = !DILocation(line: 2989, column: 17, scope: !11334)
!11336 = !DILocation(line: 2989, column: 22, scope: !11334)
!11337 = !DILocation(line: 2989, column: 37, scope: !11334)
!11338 = !DILocation(line: 2989, column: 9, scope: !11325)
!11339 = !DILocation(line: 2990, column: 6, scope: !11334)
!11340 = !DILocation(line: 2990, column: 14, scope: !11334)
!11341 = !DILocation(line: 2990, column: 21, scope: !11334)
!11342 = !DILocation(line: 2991, column: 4, scope: !11325)
!11343 = !DILocation(line: 2992, column: 3, scope: !11315)
!11344 = !DILocation(line: 2985, column: 42, scope: !11309)
!11345 = !DILocation(line: 2985, column: 3, scope: !11309)
!11346 = distinct !{!11346, !11312, !11347}
!11347 = !DILocation(line: 2992, column: 3, scope: !11305)
!11348 = !DILocation(line: 2993, column: 2, scope: !11306)
!11349 = !DILocation(line: 2995, column: 12, scope: !11195)
!11350 = !DILocation(line: 2995, column: 16, scope: !11195)
!11351 = !DILocation(line: 2995, column: 22, scope: !11195)
!11352 = !DILocation(line: 2995, column: 31, scope: !11195)
!11353 = !DILocation(line: 2995, column: 2, scope: !11195)
!11354 = !DILocation(line: 2998, column: 31, scope: !11195)
!11355 = !DILocation(line: 2998, column: 36, scope: !11195)
!11356 = !DILocation(line: 2998, column: 47, scope: !11195)
!11357 = !DILocation(line: 2998, column: 51, scope: !11195)
!11358 = !DILocation(line: 2998, column: 55, scope: !11195)
!11359 = !DILocation(line: 2998, column: 2, scope: !11195)
!11360 = !DILocation(line: 3001, column: 6, scope: !11361)
!11361 = distinct !DILexicalBlock(scope: !11195, file: !3, line: 3001, column: 6)
!11362 = !DILocation(line: 3001, column: 11, scope: !11361)
!11363 = !DILocation(line: 3001, column: 6, scope: !11195)
!11364 = !DILocation(line: 3002, column: 10, scope: !11361)
!11365 = !DILocation(line: 3002, column: 15, scope: !11361)
!11366 = !DILocation(line: 3002, column: 43, scope: !11361)
!11367 = !DILocation(line: 3002, column: 47, scope: !11361)
!11368 = !DILocation(line: 3002, column: 41, scope: !11361)
!11369 = !DILocation(line: 3002, column: 3, scope: !11361)
!11370 = !DILocation(line: 3003, column: 6, scope: !11371)
!11371 = distinct !DILexicalBlock(scope: !11195, file: !3, line: 3003, column: 6)
!11372 = !DILocation(line: 3003, column: 11, scope: !11371)
!11373 = !DILocation(line: 3003, column: 6, scope: !11195)
!11374 = !DILocation(line: 3004, column: 10, scope: !11371)
!11375 = !DILocation(line: 3004, column: 15, scope: !11371)
!11376 = !DILocation(line: 3004, column: 43, scope: !11371)
!11377 = !DILocation(line: 3004, column: 47, scope: !11371)
!11378 = !DILocation(line: 3004, column: 41, scope: !11371)
!11379 = !DILocation(line: 3004, column: 55, scope: !11371)
!11380 = !DILocation(line: 3004, column: 3, scope: !11371)
!11381 = !DILocation(line: 3006, column: 13, scope: !11382)
!11382 = distinct !DILexicalBlock(scope: !11195, file: !3, line: 3006, column: 2)
!11383 = !DILocation(line: 3006, column: 7, scope: !11382)
!11384 = !DILocation(line: 3006, column: 18, scope: !11385)
!11385 = distinct !DILexicalBlock(scope: !11382, file: !3, line: 3006, column: 2)
!11386 = !DILocation(line: 3006, column: 26, scope: !11385)
!11387 = !DILocation(line: 3006, column: 24, scope: !11385)
!11388 = !DILocation(line: 3006, column: 2, scope: !11382)
!11389 = !DILocation(line: 3007, column: 7, scope: !11390)
!11390 = distinct !DILexicalBlock(scope: !11391, file: !3, line: 3007, column: 7)
!11391 = distinct !DILexicalBlock(scope: !11385, file: !3, line: 3006, column: 45)
!11392 = !DILocation(line: 3007, column: 15, scope: !11390)
!11393 = !DILocation(line: 3007, column: 22, scope: !11390)
!11394 = !DILocation(line: 3007, column: 25, scope: !11390)
!11395 = !DILocation(line: 3007, column: 33, scope: !11390)
!11396 = !DILocation(line: 3007, column: 43, scope: !11390)
!11397 = !DILocation(line: 3007, column: 47, scope: !11390)
!11398 = !DILocation(line: 3007, column: 40, scope: !11390)
!11399 = !DILocation(line: 3007, column: 7, scope: !11391)
!11400 = !DILocation(line: 3008, column: 22, scope: !11401)
!11401 = distinct !DILexicalBlock(scope: !11390, file: !3, line: 3007, column: 56)
!11402 = !DILocation(line: 3008, column: 26, scope: !11401)
!11403 = !DILocation(line: 3008, column: 31, scope: !11401)
!11404 = !DILocation(line: 3008, column: 35, scope: !11401)
!11405 = !DILocation(line: 3008, column: 43, scope: !11401)
!11406 = !DILocation(line: 3008, column: 50, scope: !11401)
!11407 = !DILocation(line: 3008, column: 55, scope: !11401)
!11408 = !DILocation(line: 3008, column: 61, scope: !11401)
!11409 = !DILocation(line: 3008, column: 82, scope: !11401)
!11410 = !DILocation(line: 3008, column: 4, scope: !11401)
!11411 = !DILocation(line: 3009, column: 3, scope: !11401)
!11412 = !DILocation(line: 3010, column: 2, scope: !11391)
!11413 = !DILocation(line: 3006, column: 41, scope: !11385)
!11414 = !DILocation(line: 3006, column: 2, scope: !11385)
!11415 = distinct !{!11415, !11388, !11416}
!11416 = !DILocation(line: 3010, column: 2, scope: !11382)
!11417 = !DILocation(line: 3012, column: 12, scope: !11195)
!11418 = !DILocation(line: 3012, column: 16, scope: !11195)
!11419 = !DILocation(line: 3012, column: 22, scope: !11195)
!11420 = !DILocation(line: 3012, column: 31, scope: !11195)
!11421 = !DILocation(line: 3012, column: 2, scope: !11195)
!11422 = !DILocation(line: 3015, column: 6, scope: !11423)
!11423 = distinct !DILexicalBlock(scope: !11195, file: !3, line: 3015, column: 6)
!11424 = !DILocation(line: 3015, column: 13, scope: !11423)
!11425 = !DILocation(line: 3015, column: 30, scope: !11423)
!11426 = !DILocation(line: 3015, column: 6, scope: !11195)
!11427 = !DILocalVariable(name: "do_tessface", scope: !11428, file: !3, line: 3016, type: !22)
!11428 = distinct !DILexicalBlock(scope: !11423, file: !3, line: 3015, column: 51)
!11429 = !DILocation(line: 3016, column: 7, scope: !11428)
!11430 = !DILocation(line: 3016, column: 21, scope: !11428)
!11431 = !DILocation(line: 3016, column: 26, scope: !11428)
!11432 = !DILocation(line: 3017, column: 23, scope: !11428)
!11433 = !DILocation(line: 3017, column: 27, scope: !11428)
!11434 = !DILocation(line: 3017, column: 32, scope: !11428)
!11435 = !DILocation(line: 3017, column: 42, scope: !11428)
!11436 = !DILocation(line: 3017, column: 47, scope: !11428)
!11437 = !DILocation(line: 3017, column: 57, scope: !11428)
!11438 = !DILocation(line: 3017, column: 3, scope: !11428)
!11439 = !DILocation(line: 3018, column: 2, scope: !11428)
!11440 = !DILocation(line: 3020, column: 23, scope: !11195)
!11441 = !DILocation(line: 3020, column: 27, scope: !11195)
!11442 = !DILocation(line: 3020, column: 2, scope: !11195)
!11443 = !DILocation(line: 3022, column: 6, scope: !11444)
!11444 = distinct !DILexicalBlock(scope: !11195, file: !3, line: 3022, column: 6)
!11445 = !DILocation(line: 3022, column: 11, scope: !11444)
!11446 = !DILocation(line: 3022, column: 27, scope: !11444)
!11447 = !DILocation(line: 3022, column: 6, scope: !11195)
!11448 = !DILocation(line: 3025, column: 21, scope: !11449)
!11449 = distinct !DILexicalBlock(scope: !11444, file: !3, line: 3022, column: 37)
!11450 = !DILocation(line: 3025, column: 25, scope: !11449)
!11451 = !DILocation(line: 3025, column: 3, scope: !11449)
!11452 = !DILocation(line: 3026, column: 2, scope: !11449)
!11453 = !DILocation(line: 3027, column: 30, scope: !11454)
!11454 = distinct !DILexicalBlock(scope: !11444, file: !3, line: 3027, column: 11)
!11455 = !DILocation(line: 3027, column: 34, scope: !11454)
!11456 = !DILocation(line: 3027, column: 12, scope: !11454)
!11457 = !DILocation(line: 3027, column: 11, scope: !11444)
!11458 = !DILocation(line: 3029, column: 3, scope: !11459)
!11459 = distinct !DILexicalBlock(scope: !11454, file: !3, line: 3027, column: 49)
!11460 = !DILocation(line: 3029, column: 7, scope: !11459)
!11461 = !DILocation(line: 3029, column: 21, scope: !11459)
!11462 = !DILocation(line: 3029, column: 27, scope: !11459)
!11463 = !DILocation(line: 3030, column: 2, scope: !11459)
!11464 = !DILocation(line: 3031, column: 1, scope: !11195)
!11465 = distinct !DISubprogram(name: "vpaint_stroke_done", scope: !3, file: !3, line: 3033, type: !7748, scopeLine: 3034, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2758, retainedNodes: !3422)
!11466 = !DILocalVariable(name: "C", arg: 1, scope: !11465, file: !3, line: 3033, type: !7750)
!11467 = !DILocation(line: 3033, column: 48, scope: !11465)
!11468 = !DILocalVariable(name: "stroke", arg: 2, scope: !11465, file: !3, line: 3033, type: !6864)
!11469 = !DILocation(line: 3033, column: 71, scope: !11465)
!11470 = !DILocalVariable(name: "ts", scope: !11465, file: !3, line: 3035, type: !4923)
!11471 = !DILocation(line: 3035, column: 16, scope: !11465)
!11472 = !DILocation(line: 3035, column: 44, scope: !11465)
!11473 = !DILocation(line: 3035, column: 21, scope: !11465)
!11474 = !DILocalVariable(name: "vpd", scope: !11465, file: !3, line: 3036, type: !11029)
!11475 = !DILocation(line: 3036, column: 21, scope: !11465)
!11476 = !DILocation(line: 3036, column: 50, scope: !11465)
!11477 = !DILocation(line: 3036, column: 27, scope: !11465)
!11478 = !DILocalVariable(name: "vc", scope: !11465, file: !3, line: 3037, type: !7068)
!11479 = !DILocation(line: 3037, column: 15, scope: !11465)
!11480 = !DILocation(line: 3037, column: 21, scope: !11465)
!11481 = !DILocation(line: 3037, column: 26, scope: !11465)
!11482 = !DILocalVariable(name: "ob", scope: !11465, file: !3, line: 3038, type: !3444)
!11483 = !DILocation(line: 3038, column: 10, scope: !11465)
!11484 = !DILocation(line: 3038, column: 15, scope: !11465)
!11485 = !DILocation(line: 3038, column: 19, scope: !11465)
!11486 = !DILocation(line: 3040, column: 29, scope: !11465)
!11487 = !DILocation(line: 3040, column: 34, scope: !11465)
!11488 = !DILocation(line: 3040, column: 2, scope: !11465)
!11489 = !DILocation(line: 3041, column: 2, scope: !11465)
!11490 = !DILocation(line: 3041, column: 12, scope: !11465)
!11491 = !DILocation(line: 3041, column: 17, scope: !11465)
!11492 = !DILocation(line: 3044, column: 19, scope: !11465)
!11493 = !DILocation(line: 3044, column: 23, scope: !11465)
!11494 = !DILocation(line: 3044, column: 2, scope: !11465)
!11495 = !DILocation(line: 3046, column: 6, scope: !11496)
!11496 = distinct !DILexicalBlock(scope: !11465, file: !3, line: 3046, column: 6)
!11497 = !DILocation(line: 3046, column: 11, scope: !11496)
!11498 = !DILocation(line: 3046, column: 6, scope: !11465)
!11499 = !DILocation(line: 3047, column: 3, scope: !11500)
!11500 = distinct !DILexicalBlock(scope: !11496, file: !3, line: 3046, column: 24)
!11501 = !DILocation(line: 3047, column: 13, scope: !11500)
!11502 = !DILocation(line: 3047, column: 18, scope: !11500)
!11503 = !DILocation(line: 3048, column: 2, scope: !11500)
!11504 = !DILocation(line: 3050, column: 6, scope: !11505)
!11505 = distinct !DILexicalBlock(scope: !11465, file: !3, line: 3050, column: 6)
!11506 = !DILocation(line: 3050, column: 11, scope: !11505)
!11507 = !DILocation(line: 3050, column: 6, scope: !11465)
!11508 = !DILocation(line: 3051, column: 3, scope: !11509)
!11509 = distinct !DILexicalBlock(scope: !11505, file: !3, line: 3050, column: 28)
!11510 = !DILocation(line: 3051, column: 13, scope: !11509)
!11511 = !DILocation(line: 3051, column: 18, scope: !11509)
!11512 = !DILocation(line: 3052, column: 2, scope: !11509)
!11513 = !DILocation(line: 3054, column: 6, scope: !11514)
!11514 = distinct !DILexicalBlock(scope: !11465, file: !3, line: 3054, column: 6)
!11515 = !DILocation(line: 3054, column: 11, scope: !11514)
!11516 = !DILocation(line: 3054, column: 6, scope: !11465)
!11517 = !DILocation(line: 3055, column: 3, scope: !11514)
!11518 = !DILocation(line: 3055, column: 13, scope: !11514)
!11519 = !DILocation(line: 3055, column: 18, scope: !11514)
!11520 = !DILocation(line: 3057, column: 6, scope: !11521)
!11521 = distinct !DILexicalBlock(scope: !11465, file: !3, line: 3057, column: 6)
!11522 = !DILocation(line: 3057, column: 11, scope: !11521)
!11523 = !DILocation(line: 3057, column: 6, scope: !11465)
!11524 = !DILocation(line: 3058, column: 3, scope: !11521)
!11525 = !DILocation(line: 3058, column: 13, scope: !11521)
!11526 = !DILocation(line: 3058, column: 18, scope: !11521)
!11527 = !DILocation(line: 3060, column: 24, scope: !11465)
!11528 = !DILocation(line: 3060, column: 48, scope: !11465)
!11529 = !DILocation(line: 3060, column: 2, scope: !11465)
!11530 = !DILocation(line: 3062, column: 2, scope: !11465)
!11531 = !DILocation(line: 3062, column: 12, scope: !11465)
!11532 = !DILocation(line: 3063, column: 1, scope: !11465)
!11533 = distinct !DISubprogram(name: "vertex_paint_use_fast_update_check", scope: !3, file: !3, line: 81, type: !3815, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2758, retainedNodes: !3422)
!11534 = !DILocalVariable(name: "ob", arg: 1, scope: !11533, file: !3, line: 81, type: !3444)
!11535 = !DILocation(line: 81, column: 56, scope: !11533)
!11536 = !DILocalVariable(name: "dm", scope: !11533, file: !3, line: 83, type: !631)
!11537 = !DILocation(line: 83, column: 15, scope: !11533)
!11538 = !DILocation(line: 83, column: 20, scope: !11533)
!11539 = !DILocation(line: 83, column: 24, scope: !11533)
!11540 = !DILocation(line: 85, column: 6, scope: !11541)
!11541 = distinct !DILexicalBlock(scope: !11533, file: !3, line: 85, column: 6)
!11542 = !DILocation(line: 85, column: 6, scope: !11533)
!11543 = !DILocalVariable(name: "me", scope: !11544, file: !3, line: 86, type: !3187)
!11544 = distinct !DILexicalBlock(scope: !11541, file: !3, line: 85, column: 10)
!11545 = !DILocation(line: 86, column: 9, scope: !11544)
!11546 = !DILocation(line: 86, column: 35, scope: !11544)
!11547 = !DILocation(line: 86, column: 14, scope: !11544)
!11548 = !DILocation(line: 87, column: 7, scope: !11549)
!11549 = distinct !DILexicalBlock(scope: !11544, file: !3, line: 87, column: 7)
!11550 = !DILocation(line: 87, column: 10, scope: !11549)
!11551 = !DILocation(line: 87, column: 13, scope: !11549)
!11552 = !DILocation(line: 87, column: 17, scope: !11549)
!11553 = !DILocation(line: 87, column: 7, scope: !11544)
!11554 = !DILocation(line: 88, column: 12, scope: !11555)
!11555 = distinct !DILexicalBlock(scope: !11549, file: !3, line: 87, column: 23)
!11556 = !DILocation(line: 88, column: 16, scope: !11555)
!11557 = !DILocation(line: 88, column: 46, scope: !11555)
!11558 = !DILocation(line: 88, column: 50, scope: !11555)
!11559 = !DILocation(line: 88, column: 24, scope: !11555)
!11560 = !DILocation(line: 88, column: 21, scope: !11555)
!11561 = !DILocation(line: 88, column: 11, scope: !11555)
!11562 = !DILocation(line: 88, column: 4, scope: !11555)
!11563 = !DILocation(line: 90, column: 2, scope: !11544)
!11564 = !DILocation(line: 92, column: 2, scope: !11533)
!11565 = !DILocation(line: 93, column: 1, scope: !11533)
!11566 = distinct !DISubprogram(name: "vpaint_build_poly_facemap", scope: !3, file: !3, line: 2765, type: !11567, scopeLine: 2766, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2758, retainedNodes: !3422)
!11567 = !DISubroutineType(types: !11568)
!11568 = !{null, !11029, !3187}
!11569 = !DILocalVariable(name: "vd", arg: 1, scope: !11566, file: !3, line: 2765, type: !11029)
!11570 = !DILocation(line: 2765, column: 58, scope: !11566)
!11571 = !DILocalVariable(name: "me", arg: 2, scope: !11566, file: !3, line: 2765, type: !3187)
!11572 = !DILocation(line: 2765, column: 68, scope: !11566)
!11573 = !DILocalVariable(name: "tessface_origindex", scope: !11566, file: !3, line: 2767, type: !11574)
!11574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3408, size: 64)
!11575 = !DILocation(line: 2767, column: 13, scope: !11566)
!11576 = !DILocation(line: 2769, column: 2, scope: !11566)
!11577 = !DILocation(line: 2769, column: 6, scope: !11566)
!11578 = !DILocation(line: 2769, column: 18, scope: !11566)
!11579 = !DILocation(line: 2770, column: 2, scope: !11566)
!11580 = !DILocation(line: 2770, column: 6, scope: !11566)
!11581 = !DILocation(line: 2770, column: 22, scope: !11566)
!11582 = !DILocation(line: 2772, column: 45, scope: !11566)
!11583 = !DILocation(line: 2772, column: 49, scope: !11566)
!11584 = !DILocation(line: 2772, column: 23, scope: !11566)
!11585 = !DILocation(line: 2772, column: 21, scope: !11566)
!11586 = !DILocation(line: 2774, column: 7, scope: !11587)
!11587 = distinct !DILexicalBlock(scope: !11566, file: !3, line: 2774, column: 6)
!11588 = !DILocation(line: 2774, column: 6, scope: !11566)
!11589 = !DILocation(line: 2775, column: 3, scope: !11587)
!11590 = !DILocation(line: 2777, column: 33, scope: !11566)
!11591 = !DILocation(line: 2777, column: 37, scope: !11566)
!11592 = !DILocation(line: 2777, column: 59, scope: !11566)
!11593 = !DILocation(line: 2777, column: 63, scope: !11566)
!11594 = !DILocation(line: 2777, column: 50, scope: !11566)
!11595 = !DILocation(line: 2778, column: 32, scope: !11566)
!11596 = !DILocation(line: 2778, column: 36, scope: !11566)
!11597 = !DILocation(line: 2779, column: 32, scope: !11566)
!11598 = !DILocation(line: 2779, column: 52, scope: !11566)
!11599 = !DILocation(line: 2779, column: 56, scope: !11566)
!11600 = !DILocation(line: 2777, column: 2, scope: !11566)
!11601 = !DILocation(line: 2780, column: 1, scope: !11566)
!11602 = distinct !DISubprogram(name: "copy_vpaint_prev", scope: !3, file: !3, line: 415, type: !11603, scopeLine: 416, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2758, retainedNodes: !3422)
!11603 = !DISubroutineType(types: !11604)
!11604 = !{null, !1538, !277, !22}
!11605 = !DILocalVariable(name: "vp", arg: 1, scope: !11602, file: !3, line: 415, type: !1538)
!11606 = !DILocation(line: 415, column: 38, scope: !11602)
!11607 = !DILocalVariable(name: "lcol", arg: 2, scope: !11602, file: !3, line: 415, type: !277)
!11608 = !DILocation(line: 415, column: 56, scope: !11602)
!11609 = !DILocalVariable(name: "tot", arg: 3, scope: !11602, file: !3, line: 415, type: !22)
!11610 = !DILocation(line: 415, column: 66, scope: !11602)
!11611 = !DILocation(line: 417, column: 19, scope: !11602)
!11612 = !DILocation(line: 417, column: 2, scope: !11602)
!11613 = !DILocation(line: 419, column: 12, scope: !11602)
!11614 = !DILocation(line: 419, column: 2, scope: !11602)
!11615 = !DILocation(line: 419, column: 6, scope: !11602)
!11616 = !DILocation(line: 419, column: 10, scope: !11602)
!11617 = !DILocation(line: 421, column: 6, scope: !11618)
!11618 = distinct !DILexicalBlock(scope: !11602, file: !3, line: 421, column: 6)
!11619 = !DILocation(line: 421, column: 11, scope: !11618)
!11620 = !DILocation(line: 421, column: 19, scope: !11618)
!11621 = !DILocation(line: 421, column: 22, scope: !11618)
!11622 = !DILocation(line: 421, column: 26, scope: !11618)
!11623 = !DILocation(line: 421, column: 6, scope: !11602)
!11624 = !DILocation(line: 421, column: 32, scope: !11618)
!11625 = !DILocation(line: 423, column: 20, scope: !11602)
!11626 = !DILocation(line: 423, column: 46, scope: !11602)
!11627 = !DILocation(line: 423, column: 44, scope: !11602)
!11628 = !DILocation(line: 423, column: 2, scope: !11602)
!11629 = !DILocation(line: 423, column: 6, scope: !11602)
!11630 = !DILocation(line: 423, column: 18, scope: !11602)
!11631 = !DILocation(line: 424, column: 9, scope: !11602)
!11632 = !DILocation(line: 424, column: 13, scope: !11602)
!11633 = !DILocation(line: 424, column: 2, scope: !11602)
!11634 = !DILocation(line: 424, column: 26, scope: !11602)
!11635 = !DILocation(line: 424, column: 46, scope: !11602)
!11636 = !DILocation(line: 424, column: 44, scope: !11602)
!11637 = !DILocation(line: 426, column: 1, scope: !11602)
!11638 = distinct !DISubprogram(name: "free_vpaint_prev", scope: !3, file: !3, line: 397, type: !6437, scopeLine: 398, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2758, retainedNodes: !3422)
!11639 = !DILocalVariable(name: "vp", arg: 1, scope: !11638, file: !3, line: 397, type: !1538)
!11640 = !DILocation(line: 397, column: 38, scope: !11638)
!11641 = !DILocation(line: 399, column: 6, scope: !11642)
!11642 = distinct !DILexicalBlock(scope: !11638, file: !3, line: 399, column: 6)
!11643 = !DILocation(line: 399, column: 10, scope: !11642)
!11644 = !DILocation(line: 399, column: 6, scope: !11638)
!11645 = !DILocation(line: 400, column: 3, scope: !11646)
!11646 = distinct !DILexicalBlock(scope: !11642, file: !3, line: 399, column: 23)
!11647 = !DILocation(line: 400, column: 13, scope: !11646)
!11648 = !DILocation(line: 400, column: 17, scope: !11646)
!11649 = !DILocation(line: 401, column: 3, scope: !11646)
!11650 = !DILocation(line: 401, column: 7, scope: !11646)
!11651 = !DILocation(line: 401, column: 19, scope: !11646)
!11652 = !DILocation(line: 402, column: 3, scope: !11646)
!11653 = !DILocation(line: 402, column: 7, scope: !11646)
!11654 = !DILocation(line: 402, column: 11, scope: !11646)
!11655 = !DILocation(line: 403, column: 2, scope: !11646)
!11656 = !DILocation(line: 404, column: 1, scope: !11638)
!11657 = distinct !DISubprogram(name: "vpaint_paint_poly", scope: !3, file: !3, line: 2852, type: !11658, scopeLine: 2855, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2758, retainedNodes: !3422)
!11658 = !DISubroutineType(types: !11659)
!11659 = !{null, !1538, !11660, !3187, !7507, !804, !637, !637}
!11660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11661, size: 64)
!11661 = !DIDerivedType(tag: DW_TAG_typedef, name: "VPaintData", file: !3, line: 2763, baseType: !11030)
!11662 = !DILocalVariable(name: "vp", arg: 1, scope: !11657, file: !3, line: 2852, type: !1538)
!11663 = !DILocation(line: 2852, column: 39, scope: !11657)
!11664 = !DILocalVariable(name: "vpd", arg: 2, scope: !11657, file: !3, line: 2852, type: !11660)
!11665 = !DILocation(line: 2852, column: 55, scope: !11657)
!11666 = !DILocalVariable(name: "me", arg: 3, scope: !11657, file: !3, line: 2852, type: !3187)
!11667 = !DILocation(line: 2852, column: 66, scope: !11657)
!11668 = !DILocalVariable(name: "index", arg: 4, scope: !11657, file: !3, line: 2853, type: !7507)
!11669 = !DILocation(line: 2853, column: 50, scope: !11657)
!11670 = !DILocalVariable(name: "mval", arg: 5, scope: !11657, file: !3, line: 2853, type: !804)
!11671 = !DILocation(line: 2853, column: 69, scope: !11657)
!11672 = !DILocalVariable(name: "brush_size_pressure", arg: 6, scope: !11657, file: !3, line: 2854, type: !637)
!11673 = !DILocation(line: 2854, column: 43, scope: !11657)
!11674 = !DILocalVariable(name: "brush_alpha_pressure", arg: 7, scope: !11657, file: !3, line: 2854, type: !637)
!11675 = !DILocation(line: 2854, column: 76, scope: !11657)
!11676 = !DILocalVariable(name: "vc", scope: !11657, file: !3, line: 2856, type: !7068)
!11677 = !DILocation(line: 2856, column: 15, scope: !11657)
!11678 = !DILocation(line: 2856, column: 21, scope: !11657)
!11679 = !DILocation(line: 2856, column: 26, scope: !11657)
!11680 = !DILocalVariable(name: "brush", scope: !11657, file: !3, line: 2857, type: !3695)
!11681 = !DILocation(line: 2857, column: 9, scope: !11657)
!11682 = !DILocation(line: 2857, column: 34, scope: !11657)
!11683 = !DILocation(line: 2857, column: 38, scope: !11657)
!11684 = !DILocation(line: 2857, column: 17, scope: !11657)
!11685 = !DILocalVariable(name: "mpoly", scope: !11657, file: !3, line: 2858, type: !3410)
!11686 = !DILocation(line: 2858, column: 9, scope: !11657)
!11687 = !DILocation(line: 2858, column: 18, scope: !11657)
!11688 = !DILocation(line: 2858, column: 22, scope: !11657)
!11689 = !DILocation(line: 2858, column: 28, scope: !11657)
!11690 = !DILocalVariable(name: "mf", scope: !11657, file: !3, line: 2859, type: !3413)
!11691 = !DILocation(line: 2859, column: 9, scope: !11657)
!11692 = !DILocalVariable(name: "mc", scope: !11657, file: !3, line: 2860, type: !11693)
!11693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11694, size: 64)
!11694 = !DIDerivedType(tag: DW_TAG_typedef, name: "MCol", file: !206, line: 76, baseType: !3251)
!11695 = !DILocation(line: 2860, column: 8, scope: !11657)
!11696 = !DILocalVariable(name: "ml", scope: !11657, file: !3, line: 2861, type: !4303)
!11697 = !DILocation(line: 2861, column: 9, scope: !11657)
!11698 = !DILocalVariable(name: "mlc", scope: !11657, file: !3, line: 2862, type: !3765)
!11699 = !DILocation(line: 2862, column: 12, scope: !11657)
!11700 = !DILocalVariable(name: "lcol", scope: !11657, file: !3, line: 2863, type: !277)
!11701 = !DILocation(line: 2863, column: 16, scope: !11657)
!11702 = !DILocation(line: 2863, column: 40, scope: !11657)
!11703 = !DILocation(line: 2863, column: 44, scope: !11657)
!11704 = !DILocation(line: 2863, column: 24, scope: !11657)
!11705 = !DILocation(line: 2863, column: 56, scope: !11657)
!11706 = !DILocation(line: 2863, column: 63, scope: !11657)
!11707 = !DILocation(line: 2863, column: 54, scope: !11657)
!11708 = !DILocalVariable(name: "lcolorig", scope: !11657, file: !3, line: 2864, type: !277)
!11709 = !DILocation(line: 2864, column: 16, scope: !11657)
!11710 = !DILocation(line: 2864, column: 44, scope: !11657)
!11711 = !DILocation(line: 2864, column: 48, scope: !11657)
!11712 = !DILocation(line: 2864, column: 63, scope: !11657)
!11713 = !DILocation(line: 2864, column: 70, scope: !11657)
!11714 = !DILocation(line: 2864, column: 61, scope: !11657)
!11715 = !DILocalVariable(name: "mlooptag", scope: !11657, file: !3, line: 2865, type: !1742)
!11716 = !DILocation(line: 2865, column: 8, scope: !11657)
!11717 = !DILocation(line: 2865, column: 20, scope: !11657)
!11718 = !DILocation(line: 2865, column: 25, scope: !11657)
!11719 = !DILocation(line: 2865, column: 19, scope: !11657)
!11720 = !DILocation(line: 2865, column: 37, scope: !11657)
!11721 = !DILocation(line: 2865, column: 42, scope: !11657)
!11722 = !DILocation(line: 2865, column: 53, scope: !11657)
!11723 = !DILocation(line: 2865, column: 60, scope: !11657)
!11724 = !DILocation(line: 2865, column: 51, scope: !11657)
!11725 = !DILocalVariable(name: "mftag", scope: !11657, file: !3, line: 2866, type: !1742)
!11726 = !DILocation(line: 2866, column: 8, scope: !11657)
!11727 = !DILocalVariable(name: "alpha", scope: !11657, file: !3, line: 2867, type: !210)
!11728 = !DILocation(line: 2867, column: 8, scope: !11657)
!11729 = !DILocalVariable(name: "i", scope: !11657, file: !3, line: 2868, type: !22)
!11730 = !DILocation(line: 2868, column: 6, scope: !11657)
!11731 = !DILocalVariable(name: "j", scope: !11657, file: !3, line: 2868, type: !22)
!11732 = !DILocation(line: 2868, column: 9, scope: !11657)
!11733 = !DILocalVariable(name: "totloop", scope: !11657, file: !3, line: 2869, type: !22)
!11734 = !DILocation(line: 2869, column: 6, scope: !11657)
!11735 = !DILocation(line: 2869, column: 16, scope: !11657)
!11736 = !DILocation(line: 2869, column: 23, scope: !11657)
!11737 = !DILocalVariable(name: "brush_alpha_pressure_i", scope: !11657, file: !3, line: 2871, type: !22)
!11738 = !DILocation(line: 2871, column: 6, scope: !11657)
!11739 = !DILocation(line: 2871, column: 37, scope: !11657)
!11740 = !DILocation(line: 2871, column: 58, scope: !11657)
!11741 = !DILocation(line: 2871, column: 31, scope: !11657)
!11742 = !DILocation(line: 2873, column: 6, scope: !11743)
!11743 = distinct !DILexicalBlock(scope: !11657, file: !3, line: 2873, column: 6)
!11744 = !DILocation(line: 2873, column: 13, scope: !11743)
!11745 = !DILocation(line: 2873, column: 30, scope: !11743)
!11746 = !DILocation(line: 2873, column: 6, scope: !11657)
!11747 = !DILocalVariable(name: "blend", scope: !11748, file: !3, line: 2874, type: !3240)
!11748 = distinct !DILexicalBlock(scope: !11743, file: !3, line: 2873, column: 51)
!11749 = !DILocation(line: 2874, column: 16, scope: !11748)
!11750 = !DILocalVariable(name: "tcol", scope: !11748, file: !3, line: 2875, type: !231)
!11751 = !DILocation(line: 2875, column: 16, scope: !11748)
!11752 = !DILocalVariable(name: "col", scope: !11748, file: !3, line: 2876, type: !192)
!11753 = !DILocation(line: 2876, column: 9, scope: !11748)
!11754 = !DILocation(line: 2878, column: 10, scope: !11755)
!11755 = distinct !DILexicalBlock(scope: !11748, file: !3, line: 2878, column: 3)
!11756 = !DILocation(line: 2878, column: 8, scope: !11755)
!11757 = !DILocation(line: 2878, column: 15, scope: !11758)
!11758 = distinct !DILexicalBlock(scope: !11755, file: !3, line: 2878, column: 3)
!11759 = !DILocation(line: 2878, column: 19, scope: !11758)
!11760 = !DILocation(line: 2878, column: 17, scope: !11758)
!11761 = !DILocation(line: 2878, column: 3, scope: !11755)
!11762 = !DILocation(line: 2879, column: 19, scope: !11763)
!11763 = distinct !DILexicalBlock(scope: !11758, file: !3, line: 2878, column: 33)
!11764 = !DILocation(line: 2879, column: 26, scope: !11763)
!11765 = !DILocation(line: 2879, column: 24, scope: !11763)
!11766 = !DILocation(line: 2879, column: 10, scope: !11763)
!11767 = !DILocation(line: 2879, column: 8, scope: !11763)
!11768 = !DILocation(line: 2880, column: 16, scope: !11763)
!11769 = !DILocation(line: 2880, column: 4, scope: !11763)
!11770 = !DILocation(line: 2880, column: 13, scope: !11763)
!11771 = !DILocation(line: 2881, column: 16, scope: !11763)
!11772 = !DILocation(line: 2881, column: 4, scope: !11763)
!11773 = !DILocation(line: 2881, column: 13, scope: !11763)
!11774 = !DILocation(line: 2882, column: 16, scope: !11763)
!11775 = !DILocation(line: 2882, column: 4, scope: !11763)
!11776 = !DILocation(line: 2882, column: 13, scope: !11763)
!11777 = !DILocation(line: 2883, column: 16, scope: !11763)
!11778 = !DILocation(line: 2883, column: 4, scope: !11763)
!11779 = !DILocation(line: 2883, column: 13, scope: !11763)
!11780 = !DILocation(line: 2884, column: 3, scope: !11763)
!11781 = !DILocation(line: 2878, column: 29, scope: !11758)
!11782 = !DILocation(line: 2878, column: 3, scope: !11758)
!11783 = distinct !{!11783, !11761, !11784}
!11784 = !DILocation(line: 2884, column: 3, scope: !11755)
!11785 = !DILocation(line: 2886, column: 29, scope: !11748)
!11786 = !DILocation(line: 2886, column: 39, scope: !11748)
!11787 = !DILocation(line: 2886, column: 14, scope: !11748)
!11788 = !DILocation(line: 2886, column: 3, scope: !11748)
!11789 = !DILocation(line: 2886, column: 12, scope: !11748)
!11790 = !DILocation(line: 2887, column: 29, scope: !11748)
!11791 = !DILocation(line: 2887, column: 39, scope: !11748)
!11792 = !DILocation(line: 2887, column: 14, scope: !11748)
!11793 = !DILocation(line: 2887, column: 3, scope: !11748)
!11794 = !DILocation(line: 2887, column: 12, scope: !11748)
!11795 = !DILocation(line: 2888, column: 29, scope: !11748)
!11796 = !DILocation(line: 2888, column: 39, scope: !11748)
!11797 = !DILocation(line: 2888, column: 14, scope: !11748)
!11798 = !DILocation(line: 2888, column: 3, scope: !11748)
!11799 = !DILocation(line: 2888, column: 12, scope: !11748)
!11800 = !DILocation(line: 2889, column: 29, scope: !11748)
!11801 = !DILocation(line: 2889, column: 39, scope: !11748)
!11802 = !DILocation(line: 2889, column: 14, scope: !11748)
!11803 = !DILocation(line: 2889, column: 3, scope: !11748)
!11804 = !DILocation(line: 2889, column: 12, scope: !11748)
!11805 = !DILocation(line: 2890, column: 9, scope: !11748)
!11806 = !DILocation(line: 2890, column: 7, scope: !11748)
!11807 = !DILocation(line: 2891, column: 12, scope: !11748)
!11808 = !DILocation(line: 2891, column: 3, scope: !11748)
!11809 = !DILocation(line: 2891, column: 10, scope: !11748)
!11810 = !DILocation(line: 2892, column: 12, scope: !11748)
!11811 = !DILocation(line: 2892, column: 3, scope: !11748)
!11812 = !DILocation(line: 2892, column: 10, scope: !11748)
!11813 = !DILocation(line: 2893, column: 12, scope: !11748)
!11814 = !DILocation(line: 2893, column: 3, scope: !11748)
!11815 = !DILocation(line: 2893, column: 10, scope: !11748)
!11816 = !DILocation(line: 2894, column: 12, scope: !11748)
!11817 = !DILocation(line: 2894, column: 3, scope: !11748)
!11818 = !DILocation(line: 2894, column: 10, scope: !11748)
!11819 = !DILocation(line: 2896, column: 37, scope: !11748)
!11820 = !DILocation(line: 2896, column: 19, scope: !11748)
!11821 = !DILocation(line: 2896, column: 3, scope: !11748)
!11822 = !DILocation(line: 2896, column: 8, scope: !11748)
!11823 = !DILocation(line: 2896, column: 17, scope: !11748)
!11824 = !DILocation(line: 2897, column: 2, scope: !11748)
!11825 = !DILocation(line: 2899, column: 7, scope: !11657)
!11826 = !DILocation(line: 2899, column: 11, scope: !11657)
!11827 = !DILocation(line: 2899, column: 19, scope: !11657)
!11828 = !DILocation(line: 2899, column: 26, scope: !11657)
!11829 = !DILocation(line: 2899, column: 17, scope: !11657)
!11830 = !DILocation(line: 2899, column: 5, scope: !11657)
!11831 = !DILocation(line: 2900, column: 9, scope: !11832)
!11832 = distinct !DILexicalBlock(scope: !11657, file: !3, line: 2900, column: 2)
!11833 = !DILocation(line: 2900, column: 7, scope: !11832)
!11834 = !DILocation(line: 2900, column: 14, scope: !11835)
!11835 = distinct !DILexicalBlock(scope: !11832, file: !3, line: 2900, column: 2)
!11836 = !DILocation(line: 2900, column: 18, scope: !11835)
!11837 = !DILocation(line: 2900, column: 16, scope: !11835)
!11838 = !DILocation(line: 2900, column: 2, scope: !11832)
!11839 = !DILocalVariable(name: "rgba", scope: !11840, file: !3, line: 2901, type: !419)
!11840 = distinct !DILexicalBlock(scope: !11835, file: !3, line: 2900, column: 38)
!11841 = !DILocation(line: 2901, column: 9, scope: !11840)
!11842 = !DILocalVariable(name: "paintcol", scope: !11840, file: !3, line: 2902, type: !231)
!11843 = !DILocation(line: 2902, column: 16, scope: !11840)
!11844 = !DILocation(line: 2903, column: 32, scope: !11840)
!11845 = !DILocation(line: 2903, column: 36, scope: !11840)
!11846 = !DILocation(line: 2903, column: 40, scope: !11840)
!11847 = !DILocation(line: 2903, column: 45, scope: !11840)
!11848 = !DILocation(line: 2904, column: 29, scope: !11840)
!11849 = !DILocation(line: 2904, column: 34, scope: !11840)
!11850 = !DILocation(line: 2904, column: 47, scope: !11840)
!11851 = !DILocation(line: 2904, column: 51, scope: !11840)
!11852 = !DILocation(line: 2904, column: 55, scope: !11840)
!11853 = !DILocation(line: 2905, column: 28, scope: !11840)
!11854 = !DILocation(line: 2905, column: 49, scope: !11840)
!11855 = !DILocation(line: 2905, column: 71, scope: !11840)
!11856 = !DILocation(line: 2903, column: 11, scope: !11840)
!11857 = !DILocation(line: 2903, column: 9, scope: !11840)
!11858 = !DILocation(line: 2907, column: 7, scope: !11859)
!11859 = distinct !DILexicalBlock(scope: !11840, file: !3, line: 2907, column: 7)
!11860 = !DILocation(line: 2907, column: 12, scope: !11859)
!11861 = !DILocation(line: 2907, column: 7, scope: !11840)
!11862 = !DILocalVariable(name: "rgba_br", scope: !11863, file: !3, line: 2908, type: !209)
!11863 = distinct !DILexicalBlock(scope: !11859, file: !3, line: 2907, column: 25)
!11864 = !DILocation(line: 2908, column: 10, scope: !11863)
!11865 = !DILocation(line: 2909, column: 23, scope: !11863)
!11866 = !DILocation(line: 2909, column: 56, scope: !11863)
!11867 = !DILocation(line: 2909, column: 61, scope: !11863)
!11868 = !DILocation(line: 2909, column: 32, scope: !11863)
!11869 = !DILocation(line: 2909, column: 4, scope: !11863)
!11870 = !DILocation(line: 2910, column: 14, scope: !11863)
!11871 = !DILocation(line: 2910, column: 23, scope: !11863)
!11872 = !DILocation(line: 2910, column: 4, scope: !11863)
!11873 = !DILocation(line: 2911, column: 23, scope: !11863)
!11874 = !DILocation(line: 2911, column: 51, scope: !11863)
!11875 = !DILocation(line: 2911, column: 4, scope: !11863)
!11876 = !DILocation(line: 2912, column: 3, scope: !11863)
!11877 = !DILocation(line: 2914, column: 15, scope: !11859)
!11878 = !DILocation(line: 2914, column: 20, scope: !11859)
!11879 = !DILocation(line: 2914, column: 13, scope: !11859)
!11880 = !DILocation(line: 2916, column: 7, scope: !11881)
!11881 = distinct !DILexicalBlock(scope: !11840, file: !3, line: 2916, column: 7)
!11882 = !DILocation(line: 2916, column: 13, scope: !11881)
!11883 = !DILocation(line: 2916, column: 7, scope: !11840)
!11884 = !DILocalVariable(name: "alpha_i", scope: !11885, file: !3, line: 2917, type: !3408)
!11885 = distinct !DILexicalBlock(scope: !11881, file: !3, line: 2916, column: 21)
!11886 = !DILocation(line: 2917, column: 14, scope: !11885)
!11887 = !DILocation(line: 2917, column: 30, scope: !11885)
!11888 = !DILocation(line: 2917, column: 36, scope: !11885)
!11889 = !DILocation(line: 2917, column: 24, scope: !11885)
!11890 = !DILocation(line: 2918, column: 27, scope: !11885)
!11891 = !DILocation(line: 2918, column: 31, scope: !11885)
!11892 = !DILocation(line: 2918, column: 36, scope: !11885)
!11893 = !DILocation(line: 2918, column: 40, scope: !11885)
!11894 = !DILocation(line: 2918, column: 49, scope: !11885)
!11895 = !DILocation(line: 2918, column: 53, scope: !11885)
!11896 = !DILocation(line: 2918, column: 63, scope: !11885)
!11897 = !DILocation(line: 2918, column: 72, scope: !11885)
!11898 = !DILocation(line: 2918, column: 14, scope: !11885)
!11899 = !DILocation(line: 2918, column: 4, scope: !11885)
!11900 = !DILocation(line: 2918, column: 9, scope: !11885)
!11901 = !DILocation(line: 2918, column: 12, scope: !11885)
!11902 = !DILocation(line: 2920, column: 8, scope: !11903)
!11903 = distinct !DILexicalBlock(scope: !11885, file: !3, line: 2920, column: 8)
!11904 = !DILocation(line: 2920, column: 8, scope: !11885)
!11905 = !DILocation(line: 2920, column: 18, scope: !11903)
!11906 = !DILocation(line: 2920, column: 27, scope: !11903)
!11907 = !DILocation(line: 2920, column: 30, scope: !11903)
!11908 = !DILocation(line: 2921, column: 3, scope: !11885)
!11909 = !DILocation(line: 2922, column: 2, scope: !11840)
!11910 = !DILocation(line: 2900, column: 28, scope: !11835)
!11911 = !DILocation(line: 2900, column: 34, scope: !11835)
!11912 = !DILocation(line: 2900, column: 2, scope: !11835)
!11913 = distinct !{!11913, !11838, !11914}
!11914 = !DILocation(line: 2922, column: 2, scope: !11832)
!11915 = !DILocation(line: 2924, column: 6, scope: !11916)
!11916 = distinct !DILexicalBlock(scope: !11657, file: !3, line: 2924, column: 6)
!11917 = !DILocation(line: 2924, column: 11, scope: !11916)
!11918 = !DILocation(line: 2924, column: 6, scope: !11657)
!11919 = !DILocalVariable(name: "map", scope: !11920, file: !3, line: 2925, type: !11921)
!11920 = distinct !DILexicalBlock(scope: !11916, file: !3, line: 2924, column: 28)
!11921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11922, size: 64)
!11922 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11043)
!11923 = !DILocation(line: 2925, column: 22, scope: !11920)
!11924 = !DILocation(line: 2925, column: 29, scope: !11920)
!11925 = !DILocation(line: 2925, column: 34, scope: !11920)
!11926 = !DILocation(line: 2925, column: 46, scope: !11920)
!11927 = !DILocation(line: 2929, column: 10, scope: !11928)
!11928 = distinct !DILexicalBlock(scope: !11920, file: !3, line: 2929, column: 3)
!11929 = !DILocation(line: 2929, column: 8, scope: !11928)
!11930 = !DILocation(line: 2929, column: 15, scope: !11931)
!11931 = distinct !DILexicalBlock(scope: !11928, file: !3, line: 2929, column: 3)
!11932 = !DILocation(line: 2929, column: 19, scope: !11931)
!11933 = !DILocation(line: 2929, column: 24, scope: !11931)
!11934 = !DILocation(line: 2929, column: 17, scope: !11931)
!11935 = !DILocation(line: 2929, column: 3, scope: !11928)
!11936 = !DILocalVariable(name: "index_tessface", scope: !11937, file: !3, line: 2930, type: !3408)
!11937 = distinct !DILexicalBlock(scope: !11931, file: !3, line: 2929, column: 36)
!11938 = !DILocation(line: 2930, column: 14, scope: !11937)
!11939 = !DILocation(line: 2930, column: 31, scope: !11937)
!11940 = !DILocation(line: 2930, column: 36, scope: !11937)
!11941 = !DILocation(line: 2930, column: 44, scope: !11937)
!11942 = !DILocation(line: 2932, column: 10, scope: !11937)
!11943 = !DILocation(line: 2932, column: 14, scope: !11937)
!11944 = !DILocation(line: 2932, column: 20, scope: !11937)
!11945 = !DILocation(line: 2932, column: 7, scope: !11937)
!11946 = !DILocation(line: 2933, column: 10, scope: !11937)
!11947 = !DILocation(line: 2933, column: 14, scope: !11937)
!11948 = !DILocation(line: 2933, column: 19, scope: !11937)
!11949 = !DILocation(line: 2933, column: 34, scope: !11937)
!11950 = !DILocation(line: 2933, column: 7, scope: !11937)
!11951 = !DILocation(line: 2934, column: 13, scope: !11937)
!11952 = !DILocation(line: 2934, column: 18, scope: !11937)
!11953 = !DILocation(line: 2934, column: 27, scope: !11937)
!11954 = !DILocation(line: 2934, column: 42, scope: !11937)
!11955 = !DILocation(line: 2934, column: 10, scope: !11937)
!11956 = !DILocation(line: 2936, column: 9, scope: !11937)
!11957 = !DILocation(line: 2936, column: 13, scope: !11937)
!11958 = !DILocation(line: 2936, column: 21, scope: !11937)
!11959 = !DILocation(line: 2936, column: 28, scope: !11937)
!11960 = !DILocation(line: 2936, column: 19, scope: !11937)
!11961 = !DILocation(line: 2936, column: 7, scope: !11937)
!11962 = !DILocation(line: 2937, column: 10, scope: !11937)
!11963 = !DILocation(line: 2937, column: 14, scope: !11937)
!11964 = !DILocation(line: 2937, column: 25, scope: !11937)
!11965 = !DILocation(line: 2937, column: 32, scope: !11937)
!11966 = !DILocation(line: 2937, column: 23, scope: !11937)
!11967 = !DILocation(line: 2937, column: 8, scope: !11937)
!11968 = !DILocation(line: 2939, column: 11, scope: !11969)
!11969 = distinct !DILexicalBlock(scope: !11937, file: !3, line: 2939, column: 4)
!11970 = !DILocation(line: 2939, column: 9, scope: !11969)
!11971 = !DILocation(line: 2939, column: 16, scope: !11972)
!11972 = distinct !DILexicalBlock(scope: !11969, file: !3, line: 2939, column: 4)
!11973 = !DILocation(line: 2939, column: 20, scope: !11972)
!11974 = !DILocation(line: 2939, column: 18, scope: !11972)
!11975 = !DILocation(line: 2939, column: 4, scope: !11969)
!11976 = !DILocalVariable(name: "fidx", scope: !11977, file: !3, line: 2941, type: !3408)
!11977 = distinct !DILexicalBlock(scope: !11972, file: !3, line: 2939, column: 47)
!11978 = !DILocation(line: 2941, column: 15, scope: !11977)
!11979 = !DILocation(line: 2941, column: 22, scope: !11977)
!11980 = !DILocation(line: 0, scope: !11977)
!11981 = !DILocation(line: 2942, column: 9, scope: !11982)
!11982 = distinct !DILexicalBlock(scope: !11977, file: !3, line: 2942, column: 9)
!11983 = !DILocation(line: 2942, column: 14, scope: !11982)
!11984 = !DILocation(line: 2942, column: 9, scope: !11977)
!11985 = !DILocalVariable(name: "mloopcol__tmp", scope: !11986, file: !3, line: 2943, type: !11988)
!11986 = distinct !DILexicalBlock(scope: !11987, file: !3, line: 2943, column: 6)
!11987 = distinct !DILexicalBlock(scope: !11982, file: !3, line: 2942, column: 21)
!11988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11989, size: 64)
!11989 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3766)
!11990 = !DILocation(line: 2943, column: 6, scope: !11986)
!11991 = !DILocalVariable(name: "mcol__tmp", scope: !11986, file: !3, line: 2943, type: !11693)
!11992 = !DILocation(line: 2944, column: 10, scope: !11993)
!11993 = distinct !DILexicalBlock(scope: !11987, file: !3, line: 2944, column: 10)
!11994 = !DILocation(line: 2944, column: 10, scope: !11987)
!11995 = !DILocation(line: 2945, column: 21, scope: !11996)
!11996 = distinct !DILexicalBlock(scope: !11993, file: !3, line: 2944, column: 20)
!11997 = !DILocation(line: 2945, column: 30, scope: !11996)
!11998 = !DILocation(line: 2945, column: 7, scope: !11996)
!11999 = !DILocation(line: 2945, column: 13, scope: !11996)
!12000 = !DILocation(line: 2945, column: 19, scope: !11996)
!12001 = !DILocation(line: 2946, column: 6, scope: !11996)
!12002 = !DILocation(line: 2947, column: 5, scope: !11987)
!12003 = !DILocation(line: 2948, column: 4, scope: !11977)
!12004 = !DILocation(line: 2939, column: 30, scope: !11972)
!12005 = !DILocation(line: 2939, column: 36, scope: !11972)
!12006 = !DILocation(line: 2939, column: 43, scope: !11972)
!12007 = !DILocation(line: 2939, column: 4, scope: !11972)
!12008 = distinct !{!12008, !11975, !12009}
!12009 = !DILocation(line: 2948, column: 4, scope: !11969)
!12010 = !DILocation(line: 2949, column: 3, scope: !11937)
!12011 = !DILocation(line: 2929, column: 32, scope: !11931)
!12012 = !DILocation(line: 2929, column: 3, scope: !11931)
!12013 = distinct !{!12013, !11935, !12014}
!12014 = !DILocation(line: 2949, column: 3, scope: !11928)
!12015 = !DILocation(line: 2950, column: 2, scope: !11920)
!12016 = !DILocation(line: 2952, column: 1, scope: !11657)
!12017 = distinct !DISubprogram(name: "mul_v3_v3", scope: !9252, file: !9252, line: 412, type: !12018, scopeLine: 413, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2758, retainedNodes: !3422)
!12018 = !DISubroutineType(types: !12019)
!12019 = !{null, !242, !804}
!12020 = !DILocalVariable(name: "r", arg: 1, scope: !12017, file: !9252, line: 412, type: !242)
!12021 = !DILocation(line: 412, column: 30, scope: !12017)
!12022 = !DILocalVariable(name: "a", arg: 2, scope: !12017, file: !9252, line: 412, type: !804)
!12023 = !DILocation(line: 412, column: 48, scope: !12017)
!12024 = !DILocation(line: 414, column: 10, scope: !12017)
!12025 = !DILocation(line: 414, column: 2, scope: !12017)
!12026 = !DILocation(line: 414, column: 7, scope: !12017)
!12027 = !DILocation(line: 415, column: 10, scope: !12017)
!12028 = !DILocation(line: 415, column: 2, scope: !12017)
!12029 = !DILocation(line: 415, column: 7, scope: !12017)
!12030 = !DILocation(line: 416, column: 10, scope: !12017)
!12031 = !DILocation(line: 416, column: 2, scope: !12017)
!12032 = !DILocation(line: 416, column: 7, scope: !12017)
!12033 = !DILocation(line: 417, column: 1, scope: !12017)
!12034 = distinct !DISubprogram(name: "vpaint_blend", scope: !3, file: !3, line: 836, type: !12035, scopeLine: 840, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2758, retainedNodes: !3422)
!12035 = !DISubroutineType(types: !12036)
!12036 = !{!231, !1538, !231, !231, !7507, !3408, !3408}
!12037 = !DILocalVariable(name: "vp", arg: 1, scope: !12034, file: !3, line: 836, type: !1538)
!12038 = !DILocation(line: 836, column: 42, scope: !12034)
!12039 = !DILocalVariable(name: "col", arg: 2, scope: !12034, file: !3, line: 836, type: !231)
!12040 = !DILocation(line: 836, column: 59, scope: !12034)
!12041 = !DILocalVariable(name: "colorig", arg: 3, scope: !12034, file: !3, line: 836, type: !231)
!12042 = !DILocation(line: 836, column: 77, scope: !12034)
!12043 = !DILocalVariable(name: "paintcol", arg: 4, scope: !12034, file: !3, line: 837, type: !7507)
!12044 = !DILocation(line: 837, column: 47, scope: !12034)
!12045 = !DILocalVariable(name: "alpha_i", arg: 5, scope: !12034, file: !3, line: 837, type: !3408)
!12046 = !DILocation(line: 837, column: 67, scope: !12034)
!12047 = !DILocalVariable(name: "brush_alpha_value_i", arg: 6, scope: !12034, file: !3, line: 839, type: !3408)
!12048 = !DILocation(line: 839, column: 44, scope: !12034)
!12049 = !DILocalVariable(name: "brush", scope: !12034, file: !3, line: 841, type: !3695)
!12050 = !DILocation(line: 841, column: 9, scope: !12034)
!12051 = !DILocation(line: 841, column: 34, scope: !12034)
!12052 = !DILocation(line: 841, column: 38, scope: !12034)
!12053 = !DILocation(line: 841, column: 17, scope: !12034)
!12054 = !DILocalVariable(name: "tool", scope: !12034, file: !3, line: 842, type: !3408)
!12055 = !DILocation(line: 842, column: 12, scope: !12034)
!12056 = !DILocation(line: 842, column: 19, scope: !12034)
!12057 = !DILocation(line: 842, column: 26, scope: !12034)
!12058 = !DILocation(line: 844, column: 26, scope: !12034)
!12059 = !DILocation(line: 844, column: 32, scope: !12034)
!12060 = !DILocation(line: 844, column: 37, scope: !12034)
!12061 = !DILocation(line: 844, column: 47, scope: !12034)
!12062 = !DILocation(line: 844, column: 8, scope: !12034)
!12063 = !DILocation(line: 844, column: 6, scope: !12034)
!12064 = !DILocation(line: 847, column: 7, scope: !12065)
!12065 = distinct !DILexicalBlock(scope: !12034, file: !3, line: 847, column: 6)
!12066 = !DILocation(line: 847, column: 11, scope: !12065)
!12067 = !DILocation(line: 847, column: 16, scope: !12065)
!12068 = !DILocation(line: 847, column: 28, scope: !12065)
!12069 = !DILocation(line: 847, column: 6, scope: !12034)
!12070 = !DILocalVariable(name: "testcol", scope: !12071, file: !3, line: 848, type: !231)
!12071 = distinct !DILexicalBlock(scope: !12065, file: !3, line: 847, column: 34)
!12072 = !DILocation(line: 848, column: 16, scope: !12071)
!12073 = !DILocalVariable(name: "a", scope: !12071, file: !3, line: 848, type: !231)
!12074 = !DILocation(line: 848, column: 25, scope: !12071)
!12075 = !DILocalVariable(name: "cp", scope: !12071, file: !3, line: 849, type: !192)
!12076 = !DILocation(line: 849, column: 9, scope: !12071)
!12077 = !DILocalVariable(name: "ct", scope: !12071, file: !3, line: 849, type: !192)
!12078 = !DILocation(line: 849, column: 14, scope: !12071)
!12079 = !DILocalVariable(name: "co", scope: !12071, file: !3, line: 849, type: !192)
!12080 = !DILocation(line: 849, column: 19, scope: !12071)
!12081 = !DILocation(line: 851, column: 31, scope: !12071)
!12082 = !DILocation(line: 851, column: 37, scope: !12071)
!12083 = !DILocation(line: 851, column: 46, scope: !12071)
!12084 = !DILocation(line: 851, column: 56, scope: !12071)
!12085 = !DILocation(line: 851, column: 13, scope: !12071)
!12086 = !DILocation(line: 851, column: 11, scope: !12071)
!12087 = !DILocation(line: 853, column: 8, scope: !12071)
!12088 = !DILocation(line: 853, column: 6, scope: !12071)
!12089 = !DILocation(line: 854, column: 8, scope: !12071)
!12090 = !DILocation(line: 854, column: 6, scope: !12071)
!12091 = !DILocation(line: 855, column: 8, scope: !12071)
!12092 = !DILocation(line: 855, column: 6, scope: !12071)
!12093 = !DILocation(line: 857, column: 10, scope: !12094)
!12094 = distinct !DILexicalBlock(scope: !12071, file: !3, line: 857, column: 3)
!12095 = !DILocation(line: 857, column: 8, scope: !12094)
!12096 = !DILocation(line: 857, column: 15, scope: !12097)
!12097 = distinct !DILexicalBlock(scope: !12094, file: !3, line: 857, column: 3)
!12098 = !DILocation(line: 857, column: 17, scope: !12097)
!12099 = !DILocation(line: 857, column: 3, scope: !12094)
!12100 = !DILocation(line: 858, column: 8, scope: !12101)
!12101 = distinct !DILexicalBlock(scope: !12102, file: !3, line: 858, column: 8)
!12102 = distinct !DILexicalBlock(scope: !12097, file: !3, line: 857, column: 27)
!12103 = !DILocation(line: 858, column: 11, scope: !12101)
!12104 = !DILocation(line: 858, column: 16, scope: !12101)
!12105 = !DILocation(line: 858, column: 19, scope: !12101)
!12106 = !DILocation(line: 858, column: 14, scope: !12101)
!12107 = !DILocation(line: 858, column: 8, scope: !12102)
!12108 = !DILocation(line: 859, column: 9, scope: !12109)
!12109 = distinct !DILexicalBlock(scope: !12110, file: !3, line: 859, column: 9)
!12110 = distinct !DILexicalBlock(scope: !12101, file: !3, line: 858, column: 23)
!12111 = !DILocation(line: 859, column: 12, scope: !12109)
!12112 = !DILocation(line: 859, column: 17, scope: !12109)
!12113 = !DILocation(line: 859, column: 20, scope: !12109)
!12114 = !DILocation(line: 859, column: 15, scope: !12109)
!12115 = !DILocation(line: 859, column: 9, scope: !12110)
!12116 = !DILocation(line: 859, column: 32, scope: !12109)
!12117 = !DILocation(line: 859, column: 35, scope: !12109)
!12118 = !DILocation(line: 859, column: 24, scope: !12109)
!12119 = !DILocation(line: 859, column: 27, scope: !12109)
!12120 = !DILocation(line: 859, column: 30, scope: !12109)
!12121 = !DILocation(line: 860, column: 14, scope: !12122)
!12122 = distinct !DILexicalBlock(scope: !12109, file: !3, line: 860, column: 14)
!12123 = !DILocation(line: 860, column: 17, scope: !12122)
!12124 = !DILocation(line: 860, column: 22, scope: !12122)
!12125 = !DILocation(line: 860, column: 25, scope: !12122)
!12126 = !DILocation(line: 860, column: 20, scope: !12122)
!12127 = !DILocation(line: 860, column: 14, scope: !12109)
!12128 = !DILocation(line: 860, column: 37, scope: !12122)
!12129 = !DILocation(line: 860, column: 40, scope: !12122)
!12130 = !DILocation(line: 860, column: 29, scope: !12122)
!12131 = !DILocation(line: 860, column: 32, scope: !12122)
!12132 = !DILocation(line: 860, column: 35, scope: !12122)
!12133 = !DILocation(line: 861, column: 4, scope: !12110)
!12134 = !DILocation(line: 863, column: 9, scope: !12135)
!12135 = distinct !DILexicalBlock(scope: !12136, file: !3, line: 863, column: 9)
!12136 = distinct !DILexicalBlock(scope: !12101, file: !3, line: 862, column: 9)
!12137 = !DILocation(line: 863, column: 12, scope: !12135)
!12138 = !DILocation(line: 863, column: 17, scope: !12135)
!12139 = !DILocation(line: 863, column: 20, scope: !12135)
!12140 = !DILocation(line: 863, column: 15, scope: !12135)
!12141 = !DILocation(line: 863, column: 9, scope: !12136)
!12142 = !DILocation(line: 863, column: 32, scope: !12135)
!12143 = !DILocation(line: 863, column: 35, scope: !12135)
!12144 = !DILocation(line: 863, column: 24, scope: !12135)
!12145 = !DILocation(line: 863, column: 27, scope: !12135)
!12146 = !DILocation(line: 863, column: 30, scope: !12135)
!12147 = !DILocation(line: 864, column: 14, scope: !12148)
!12148 = distinct !DILexicalBlock(scope: !12135, file: !3, line: 864, column: 14)
!12149 = !DILocation(line: 864, column: 17, scope: !12148)
!12150 = !DILocation(line: 864, column: 22, scope: !12148)
!12151 = !DILocation(line: 864, column: 25, scope: !12148)
!12152 = !DILocation(line: 864, column: 20, scope: !12148)
!12153 = !DILocation(line: 864, column: 14, scope: !12135)
!12154 = !DILocation(line: 864, column: 37, scope: !12148)
!12155 = !DILocation(line: 864, column: 40, scope: !12148)
!12156 = !DILocation(line: 864, column: 29, scope: !12148)
!12157 = !DILocation(line: 864, column: 32, scope: !12148)
!12158 = !DILocation(line: 864, column: 35, scope: !12148)
!12159 = !DILocation(line: 866, column: 3, scope: !12102)
!12160 = !DILocation(line: 857, column: 23, scope: !12097)
!12161 = !DILocation(line: 857, column: 3, scope: !12097)
!12162 = distinct !{!12162, !12099, !12163}
!12163 = !DILocation(line: 866, column: 3, scope: !12094)
!12164 = !DILocation(line: 867, column: 2, scope: !12071)
!12165 = !DILocation(line: 869, column: 9, scope: !12034)
!12166 = !DILocation(line: 869, column: 2, scope: !12034)
!12167 = distinct !DISubprogram(name: "vpaint_blend_tool", scope: !3, file: !3, line: 818, type: !12168, scopeLine: 820, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2758, retainedNodes: !3422)
!12168 = !DISubroutineType(types: !12169)
!12169 = !{!231, !3408, !7507, !7507, !3408}
!12170 = !DILocalVariable(name: "tool", arg: 1, scope: !12167, file: !3, line: 818, type: !3408)
!12171 = !DILocation(line: 818, column: 49, scope: !12167)
!12172 = !DILocalVariable(name: "col", arg: 2, scope: !12167, file: !3, line: 818, type: !7507)
!12173 = !DILocation(line: 818, column: 74, scope: !12167)
!12174 = !DILocalVariable(name: "paintcol", arg: 3, scope: !12167, file: !3, line: 819, type: !7507)
!12175 = !DILocation(line: 819, column: 58, scope: !12167)
!12176 = !DILocalVariable(name: "alpha_i", arg: 4, scope: !12167, file: !3, line: 819, type: !3408)
!12177 = !DILocation(line: 819, column: 78, scope: !12167)
!12178 = !DILocation(line: 821, column: 10, scope: !12167)
!12179 = !DILocation(line: 821, column: 2, scope: !12167)
!12180 = !DILocation(line: 823, column: 48, scope: !12181)
!12181 = distinct !DILexicalBlock(scope: !12167, file: !3, line: 821, column: 16)
!12182 = !DILocation(line: 823, column: 53, scope: !12181)
!12183 = !DILocation(line: 823, column: 63, scope: !12181)
!12184 = !DILocation(line: 823, column: 37, scope: !12181)
!12185 = !DILocation(line: 823, column: 30, scope: !12181)
!12186 = !DILocation(line: 824, column: 46, scope: !12181)
!12187 = !DILocation(line: 824, column: 51, scope: !12181)
!12188 = !DILocation(line: 824, column: 61, scope: !12181)
!12189 = !DILocation(line: 824, column: 37, scope: !12181)
!12190 = !DILocation(line: 824, column: 30, scope: !12181)
!12191 = !DILocation(line: 825, column: 46, scope: !12181)
!12192 = !DILocation(line: 825, column: 51, scope: !12181)
!12193 = !DILocation(line: 825, column: 61, scope: !12181)
!12194 = !DILocation(line: 825, column: 37, scope: !12181)
!12195 = !DILocation(line: 825, column: 30, scope: !12181)
!12196 = !DILocation(line: 826, column: 46, scope: !12181)
!12197 = !DILocation(line: 826, column: 51, scope: !12181)
!12198 = !DILocation(line: 826, column: 61, scope: !12181)
!12199 = !DILocation(line: 826, column: 37, scope: !12181)
!12200 = !DILocation(line: 826, column: 30, scope: !12181)
!12201 = !DILocation(line: 827, column: 50, scope: !12181)
!12202 = !DILocation(line: 827, column: 55, scope: !12181)
!12203 = !DILocation(line: 827, column: 65, scope: !12181)
!12204 = !DILocation(line: 827, column: 37, scope: !12181)
!12205 = !DILocation(line: 827, column: 30, scope: !12181)
!12206 = !DILocation(line: 828, column: 49, scope: !12181)
!12207 = !DILocation(line: 828, column: 54, scope: !12181)
!12208 = !DILocation(line: 828, column: 64, scope: !12181)
!12209 = !DILocation(line: 828, column: 37, scope: !12181)
!12210 = !DILocation(line: 828, column: 30, scope: !12181)
!12211 = !DILocation(line: 831, column: 4, scope: !12181)
!12212 = !DILocation(line: 833, column: 1, scope: !12167)
!12213 = distinct !DISubprogram(name: "mcol_blend", scope: !3, file: !3, line: 649, type: !12214, scopeLine: 650, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2758, retainedNodes: !3422)
!12214 = !DISubroutineType(types: !12215)
!12215 = !{!231, !231, !231, !22}
!12216 = !DILocalVariable(name: "col1", arg: 1, scope: !12213, file: !3, line: 649, type: !231)
!12217 = !DILocation(line: 649, column: 49, scope: !12213)
!12218 = !DILocalVariable(name: "col2", arg: 2, scope: !12213, file: !3, line: 649, type: !231)
!12219 = !DILocation(line: 649, column: 68, scope: !12213)
!12220 = !DILocalVariable(name: "fac", arg: 3, scope: !12213, file: !3, line: 649, type: !22)
!12221 = !DILocation(line: 649, column: 78, scope: !12213)
!12222 = !DILocalVariable(name: "cp1", scope: !12213, file: !3, line: 651, type: !1742)
!12223 = !DILocation(line: 651, column: 17, scope: !12213)
!12224 = !DILocalVariable(name: "cp2", scope: !12213, file: !3, line: 651, type: !1742)
!12225 = !DILocation(line: 651, column: 23, scope: !12213)
!12226 = !DILocalVariable(name: "cp", scope: !12213, file: !3, line: 651, type: !1742)
!12227 = !DILocation(line: 651, column: 29, scope: !12213)
!12228 = !DILocalVariable(name: "mfac", scope: !12213, file: !3, line: 652, type: !22)
!12229 = !DILocation(line: 652, column: 6, scope: !12213)
!12230 = !DILocalVariable(name: "col", scope: !12213, file: !3, line: 653, type: !231)
!12231 = !DILocation(line: 653, column: 15, scope: !12213)
!12232 = !DILocation(line: 655, column: 6, scope: !12233)
!12233 = distinct !DILexicalBlock(scope: !12213, file: !3, line: 655, column: 6)
!12234 = !DILocation(line: 655, column: 10, scope: !12233)
!12235 = !DILocation(line: 655, column: 6, scope: !12213)
!12236 = !DILocation(line: 656, column: 10, scope: !12237)
!12237 = distinct !DILexicalBlock(scope: !12233, file: !3, line: 655, column: 16)
!12238 = !DILocation(line: 656, column: 3, scope: !12237)
!12239 = !DILocation(line: 659, column: 6, scope: !12240)
!12240 = distinct !DILexicalBlock(scope: !12213, file: !3, line: 659, column: 6)
!12241 = !DILocation(line: 659, column: 10, scope: !12240)
!12242 = !DILocation(line: 659, column: 6, scope: !12213)
!12243 = !DILocation(line: 660, column: 10, scope: !12244)
!12244 = distinct !DILexicalBlock(scope: !12240, file: !3, line: 659, column: 18)
!12245 = !DILocation(line: 660, column: 3, scope: !12244)
!12246 = !DILocation(line: 663, column: 15, scope: !12213)
!12247 = !DILocation(line: 663, column: 13, scope: !12213)
!12248 = !DILocation(line: 663, column: 7, scope: !12213)
!12249 = !DILocation(line: 665, column: 8, scope: !12213)
!12250 = !DILocation(line: 665, column: 6, scope: !12213)
!12251 = !DILocation(line: 666, column: 8, scope: !12213)
!12252 = !DILocation(line: 666, column: 6, scope: !12213)
!12253 = !DILocation(line: 667, column: 8, scope: !12213)
!12254 = !DILocation(line: 667, column: 6, scope: !12213)
!12255 = !DILocation(line: 669, column: 26, scope: !12213)
!12256 = !DILocation(line: 669, column: 33, scope: !12213)
!12257 = !DILocation(line: 669, column: 31, scope: !12213)
!12258 = !DILocation(line: 669, column: 42, scope: !12213)
!12259 = !DILocation(line: 669, column: 48, scope: !12213)
!12260 = !DILocation(line: 669, column: 46, scope: !12213)
!12261 = !DILocation(line: 669, column: 40, scope: !12213)
!12262 = !DILocation(line: 669, column: 10, scope: !12213)
!12263 = !DILocation(line: 669, column: 2, scope: !12213)
!12264 = !DILocation(line: 669, column: 8, scope: !12213)
!12265 = !DILocation(line: 670, column: 26, scope: !12213)
!12266 = !DILocation(line: 670, column: 33, scope: !12213)
!12267 = !DILocation(line: 670, column: 31, scope: !12213)
!12268 = !DILocation(line: 670, column: 42, scope: !12213)
!12269 = !DILocation(line: 670, column: 48, scope: !12213)
!12270 = !DILocation(line: 670, column: 46, scope: !12213)
!12271 = !DILocation(line: 670, column: 40, scope: !12213)
!12272 = !DILocation(line: 670, column: 10, scope: !12213)
!12273 = !DILocation(line: 670, column: 2, scope: !12213)
!12274 = !DILocation(line: 670, column: 8, scope: !12213)
!12275 = !DILocation(line: 671, column: 26, scope: !12213)
!12276 = !DILocation(line: 671, column: 33, scope: !12213)
!12277 = !DILocation(line: 671, column: 31, scope: !12213)
!12278 = !DILocation(line: 671, column: 42, scope: !12213)
!12279 = !DILocation(line: 671, column: 48, scope: !12213)
!12280 = !DILocation(line: 671, column: 46, scope: !12213)
!12281 = !DILocation(line: 671, column: 40, scope: !12213)
!12282 = !DILocation(line: 671, column: 10, scope: !12213)
!12283 = !DILocation(line: 671, column: 2, scope: !12213)
!12284 = !DILocation(line: 671, column: 8, scope: !12213)
!12285 = !DILocation(line: 672, column: 2, scope: !12213)
!12286 = !DILocation(line: 672, column: 8, scope: !12213)
!12287 = !DILocation(line: 674, column: 9, scope: !12213)
!12288 = !DILocation(line: 674, column: 2, scope: !12213)
!12289 = !DILocation(line: 675, column: 1, scope: !12213)
!12290 = distinct !DISubprogram(name: "mcol_add", scope: !3, file: !3, line: 677, type: !12214, scopeLine: 678, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2758, retainedNodes: !3422)
!12291 = !DILocalVariable(name: "col1", arg: 1, scope: !12290, file: !3, line: 677, type: !231)
!12292 = !DILocation(line: 677, column: 47, scope: !12290)
!12293 = !DILocalVariable(name: "col2", arg: 2, scope: !12290, file: !3, line: 677, type: !231)
!12294 = !DILocation(line: 677, column: 66, scope: !12290)
!12295 = !DILocalVariable(name: "fac", arg: 3, scope: !12290, file: !3, line: 677, type: !22)
!12296 = !DILocation(line: 677, column: 76, scope: !12290)
!12297 = !DILocalVariable(name: "cp1", scope: !12290, file: !3, line: 679, type: !1742)
!12298 = !DILocation(line: 679, column: 17, scope: !12290)
!12299 = !DILocalVariable(name: "cp2", scope: !12290, file: !3, line: 679, type: !1742)
!12300 = !DILocation(line: 679, column: 23, scope: !12290)
!12301 = !DILocalVariable(name: "cp", scope: !12290, file: !3, line: 679, type: !1742)
!12302 = !DILocation(line: 679, column: 29, scope: !12290)
!12303 = !DILocalVariable(name: "temp", scope: !12290, file: !3, line: 680, type: !22)
!12304 = !DILocation(line: 680, column: 6, scope: !12290)
!12305 = !DILocalVariable(name: "col", scope: !12290, file: !3, line: 681, type: !231)
!12306 = !DILocation(line: 681, column: 15, scope: !12290)
!12307 = !DILocation(line: 683, column: 6, scope: !12308)
!12308 = distinct !DILexicalBlock(scope: !12290, file: !3, line: 683, column: 6)
!12309 = !DILocation(line: 683, column: 10, scope: !12308)
!12310 = !DILocation(line: 683, column: 6, scope: !12290)
!12311 = !DILocation(line: 684, column: 10, scope: !12312)
!12312 = distinct !DILexicalBlock(scope: !12308, file: !3, line: 683, column: 16)
!12313 = !DILocation(line: 684, column: 3, scope: !12312)
!12314 = !DILocation(line: 687, column: 8, scope: !12290)
!12315 = !DILocation(line: 687, column: 6, scope: !12290)
!12316 = !DILocation(line: 688, column: 8, scope: !12290)
!12317 = !DILocation(line: 688, column: 6, scope: !12290)
!12318 = !DILocation(line: 689, column: 8, scope: !12290)
!12319 = !DILocation(line: 689, column: 6, scope: !12290)
!12320 = !DILocation(line: 691, column: 9, scope: !12290)
!12321 = !DILocation(line: 691, column: 34, scope: !12290)
!12322 = !DILocation(line: 691, column: 40, scope: !12290)
!12323 = !DILocation(line: 691, column: 38, scope: !12290)
!12324 = !DILocation(line: 691, column: 18, scope: !12290)
!12325 = !DILocation(line: 691, column: 16, scope: !12290)
!12326 = !DILocation(line: 691, column: 7, scope: !12290)
!12327 = !DILocation(line: 692, column: 11, scope: !12290)
!12328 = !DILocation(line: 692, column: 16, scope: !12290)
!12329 = !DILocation(line: 692, column: 10, scope: !12290)
!12330 = !DILocation(line: 692, column: 31, scope: !12290)
!12331 = !DILocation(line: 692, column: 2, scope: !12290)
!12332 = !DILocation(line: 692, column: 8, scope: !12290)
!12333 = !DILocation(line: 693, column: 9, scope: !12290)
!12334 = !DILocation(line: 693, column: 34, scope: !12290)
!12335 = !DILocation(line: 693, column: 40, scope: !12290)
!12336 = !DILocation(line: 693, column: 38, scope: !12290)
!12337 = !DILocation(line: 693, column: 18, scope: !12290)
!12338 = !DILocation(line: 693, column: 16, scope: !12290)
!12339 = !DILocation(line: 693, column: 7, scope: !12290)
!12340 = !DILocation(line: 694, column: 11, scope: !12290)
!12341 = !DILocation(line: 694, column: 16, scope: !12290)
!12342 = !DILocation(line: 694, column: 10, scope: !12290)
!12343 = !DILocation(line: 694, column: 31, scope: !12290)
!12344 = !DILocation(line: 694, column: 2, scope: !12290)
!12345 = !DILocation(line: 694, column: 8, scope: !12290)
!12346 = !DILocation(line: 695, column: 9, scope: !12290)
!12347 = !DILocation(line: 695, column: 34, scope: !12290)
!12348 = !DILocation(line: 695, column: 40, scope: !12290)
!12349 = !DILocation(line: 695, column: 38, scope: !12290)
!12350 = !DILocation(line: 695, column: 18, scope: !12290)
!12351 = !DILocation(line: 695, column: 16, scope: !12290)
!12352 = !DILocation(line: 695, column: 7, scope: !12290)
!12353 = !DILocation(line: 696, column: 11, scope: !12290)
!12354 = !DILocation(line: 696, column: 16, scope: !12290)
!12355 = !DILocation(line: 696, column: 10, scope: !12290)
!12356 = !DILocation(line: 696, column: 31, scope: !12290)
!12357 = !DILocation(line: 696, column: 2, scope: !12290)
!12358 = !DILocation(line: 696, column: 8, scope: !12290)
!12359 = !DILocation(line: 697, column: 2, scope: !12290)
!12360 = !DILocation(line: 697, column: 8, scope: !12290)
!12361 = !DILocation(line: 699, column: 9, scope: !12290)
!12362 = !DILocation(line: 699, column: 2, scope: !12290)
!12363 = !DILocation(line: 700, column: 1, scope: !12290)
!12364 = distinct !DISubprogram(name: "mcol_sub", scope: !3, file: !3, line: 702, type: !12214, scopeLine: 703, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2758, retainedNodes: !3422)
!12365 = !DILocalVariable(name: "col1", arg: 1, scope: !12364, file: !3, line: 702, type: !231)
!12366 = !DILocation(line: 702, column: 47, scope: !12364)
!12367 = !DILocalVariable(name: "col2", arg: 2, scope: !12364, file: !3, line: 702, type: !231)
!12368 = !DILocation(line: 702, column: 66, scope: !12364)
!12369 = !DILocalVariable(name: "fac", arg: 3, scope: !12364, file: !3, line: 702, type: !22)
!12370 = !DILocation(line: 702, column: 76, scope: !12364)
!12371 = !DILocalVariable(name: "cp1", scope: !12364, file: !3, line: 704, type: !1742)
!12372 = !DILocation(line: 704, column: 17, scope: !12364)
!12373 = !DILocalVariable(name: "cp2", scope: !12364, file: !3, line: 704, type: !1742)
!12374 = !DILocation(line: 704, column: 23, scope: !12364)
!12375 = !DILocalVariable(name: "cp", scope: !12364, file: !3, line: 704, type: !1742)
!12376 = !DILocation(line: 704, column: 29, scope: !12364)
!12377 = !DILocalVariable(name: "temp", scope: !12364, file: !3, line: 705, type: !22)
!12378 = !DILocation(line: 705, column: 6, scope: !12364)
!12379 = !DILocalVariable(name: "col", scope: !12364, file: !3, line: 706, type: !231)
!12380 = !DILocation(line: 706, column: 15, scope: !12364)
!12381 = !DILocation(line: 708, column: 6, scope: !12382)
!12382 = distinct !DILexicalBlock(scope: !12364, file: !3, line: 708, column: 6)
!12383 = !DILocation(line: 708, column: 10, scope: !12382)
!12384 = !DILocation(line: 708, column: 6, scope: !12364)
!12385 = !DILocation(line: 709, column: 10, scope: !12386)
!12386 = distinct !DILexicalBlock(scope: !12382, file: !3, line: 708, column: 16)
!12387 = !DILocation(line: 709, column: 3, scope: !12386)
!12388 = !DILocation(line: 712, column: 8, scope: !12364)
!12389 = !DILocation(line: 712, column: 6, scope: !12364)
!12390 = !DILocation(line: 713, column: 8, scope: !12364)
!12391 = !DILocation(line: 713, column: 6, scope: !12364)
!12392 = !DILocation(line: 714, column: 8, scope: !12364)
!12393 = !DILocation(line: 714, column: 6, scope: !12364)
!12394 = !DILocation(line: 716, column: 9, scope: !12364)
!12395 = !DILocation(line: 716, column: 34, scope: !12364)
!12396 = !DILocation(line: 716, column: 40, scope: !12364)
!12397 = !DILocation(line: 716, column: 38, scope: !12364)
!12398 = !DILocation(line: 716, column: 18, scope: !12364)
!12399 = !DILocation(line: 716, column: 16, scope: !12364)
!12400 = !DILocation(line: 716, column: 7, scope: !12364)
!12401 = !DILocation(line: 717, column: 11, scope: !12364)
!12402 = !DILocation(line: 717, column: 16, scope: !12364)
!12403 = !DILocation(line: 717, column: 10, scope: !12364)
!12404 = !DILocation(line: 717, column: 27, scope: !12364)
!12405 = !DILocation(line: 717, column: 2, scope: !12364)
!12406 = !DILocation(line: 717, column: 8, scope: !12364)
!12407 = !DILocation(line: 718, column: 9, scope: !12364)
!12408 = !DILocation(line: 718, column: 34, scope: !12364)
!12409 = !DILocation(line: 718, column: 40, scope: !12364)
!12410 = !DILocation(line: 718, column: 38, scope: !12364)
!12411 = !DILocation(line: 718, column: 18, scope: !12364)
!12412 = !DILocation(line: 718, column: 16, scope: !12364)
!12413 = !DILocation(line: 718, column: 7, scope: !12364)
!12414 = !DILocation(line: 719, column: 11, scope: !12364)
!12415 = !DILocation(line: 719, column: 16, scope: !12364)
!12416 = !DILocation(line: 719, column: 10, scope: !12364)
!12417 = !DILocation(line: 719, column: 27, scope: !12364)
!12418 = !DILocation(line: 719, column: 2, scope: !12364)
!12419 = !DILocation(line: 719, column: 8, scope: !12364)
!12420 = !DILocation(line: 720, column: 9, scope: !12364)
!12421 = !DILocation(line: 720, column: 34, scope: !12364)
!12422 = !DILocation(line: 720, column: 40, scope: !12364)
!12423 = !DILocation(line: 720, column: 38, scope: !12364)
!12424 = !DILocation(line: 720, column: 18, scope: !12364)
!12425 = !DILocation(line: 720, column: 16, scope: !12364)
!12426 = !DILocation(line: 720, column: 7, scope: !12364)
!12427 = !DILocation(line: 721, column: 11, scope: !12364)
!12428 = !DILocation(line: 721, column: 16, scope: !12364)
!12429 = !DILocation(line: 721, column: 10, scope: !12364)
!12430 = !DILocation(line: 721, column: 27, scope: !12364)
!12431 = !DILocation(line: 721, column: 2, scope: !12364)
!12432 = !DILocation(line: 721, column: 8, scope: !12364)
!12433 = !DILocation(line: 722, column: 2, scope: !12364)
!12434 = !DILocation(line: 722, column: 8, scope: !12364)
!12435 = !DILocation(line: 724, column: 9, scope: !12364)
!12436 = !DILocation(line: 724, column: 2, scope: !12364)
!12437 = !DILocation(line: 725, column: 1, scope: !12364)
!12438 = distinct !DISubprogram(name: "mcol_mul", scope: !3, file: !3, line: 727, type: !12214, scopeLine: 728, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2758, retainedNodes: !3422)
!12439 = !DILocalVariable(name: "col1", arg: 1, scope: !12438, file: !3, line: 727, type: !231)
!12440 = !DILocation(line: 727, column: 47, scope: !12438)
!12441 = !DILocalVariable(name: "col2", arg: 2, scope: !12438, file: !3, line: 727, type: !231)
!12442 = !DILocation(line: 727, column: 66, scope: !12438)
!12443 = !DILocalVariable(name: "fac", arg: 3, scope: !12438, file: !3, line: 727, type: !22)
!12444 = !DILocation(line: 727, column: 76, scope: !12438)
!12445 = !DILocalVariable(name: "cp1", scope: !12438, file: !3, line: 729, type: !1742)
!12446 = !DILocation(line: 729, column: 17, scope: !12438)
!12447 = !DILocalVariable(name: "cp2", scope: !12438, file: !3, line: 729, type: !1742)
!12448 = !DILocation(line: 729, column: 23, scope: !12438)
!12449 = !DILocalVariable(name: "cp", scope: !12438, file: !3, line: 729, type: !1742)
!12450 = !DILocation(line: 729, column: 29, scope: !12438)
!12451 = !DILocalVariable(name: "mfac", scope: !12438, file: !3, line: 730, type: !22)
!12452 = !DILocation(line: 730, column: 6, scope: !12438)
!12453 = !DILocalVariable(name: "col", scope: !12438, file: !3, line: 731, type: !231)
!12454 = !DILocation(line: 731, column: 15, scope: !12438)
!12455 = !DILocation(line: 733, column: 6, scope: !12456)
!12456 = distinct !DILexicalBlock(scope: !12438, file: !3, line: 733, column: 6)
!12457 = !DILocation(line: 733, column: 10, scope: !12456)
!12458 = !DILocation(line: 733, column: 6, scope: !12438)
!12459 = !DILocation(line: 734, column: 10, scope: !12460)
!12460 = distinct !DILexicalBlock(scope: !12456, file: !3, line: 733, column: 16)
!12461 = !DILocation(line: 734, column: 3, scope: !12460)
!12462 = !DILocation(line: 737, column: 15, scope: !12438)
!12463 = !DILocation(line: 737, column: 13, scope: !12438)
!12464 = !DILocation(line: 737, column: 7, scope: !12438)
!12465 = !DILocation(line: 739, column: 8, scope: !12438)
!12466 = !DILocation(line: 739, column: 6, scope: !12438)
!12467 = !DILocation(line: 740, column: 8, scope: !12438)
!12468 = !DILocation(line: 740, column: 6, scope: !12438)
!12469 = !DILocation(line: 741, column: 8, scope: !12438)
!12470 = !DILocation(line: 741, column: 6, scope: !12438)
!12471 = !DILocation(line: 744, column: 25, scope: !12438)
!12472 = !DILocation(line: 744, column: 32, scope: !12438)
!12473 = !DILocation(line: 744, column: 30, scope: !12438)
!12474 = !DILocation(line: 744, column: 39, scope: !12438)
!12475 = !DILocation(line: 744, column: 47, scope: !12438)
!12476 = !DILocation(line: 744, column: 53, scope: !12438)
!12477 = !DILocation(line: 744, column: 51, scope: !12438)
!12478 = !DILocation(line: 744, column: 62, scope: !12438)
!12479 = !DILocation(line: 744, column: 60, scope: !12438)
!12480 = !DILocation(line: 744, column: 45, scope: !12438)
!12481 = !DILocation(line: 744, column: 10, scope: !12438)
!12482 = !DILocation(line: 744, column: 2, scope: !12438)
!12483 = !DILocation(line: 744, column: 8, scope: !12438)
!12484 = !DILocation(line: 745, column: 25, scope: !12438)
!12485 = !DILocation(line: 745, column: 32, scope: !12438)
!12486 = !DILocation(line: 745, column: 30, scope: !12438)
!12487 = !DILocation(line: 745, column: 39, scope: !12438)
!12488 = !DILocation(line: 745, column: 47, scope: !12438)
!12489 = !DILocation(line: 745, column: 53, scope: !12438)
!12490 = !DILocation(line: 745, column: 51, scope: !12438)
!12491 = !DILocation(line: 745, column: 62, scope: !12438)
!12492 = !DILocation(line: 745, column: 60, scope: !12438)
!12493 = !DILocation(line: 745, column: 45, scope: !12438)
!12494 = !DILocation(line: 745, column: 10, scope: !12438)
!12495 = !DILocation(line: 745, column: 2, scope: !12438)
!12496 = !DILocation(line: 745, column: 8, scope: !12438)
!12497 = !DILocation(line: 746, column: 25, scope: !12438)
!12498 = !DILocation(line: 746, column: 32, scope: !12438)
!12499 = !DILocation(line: 746, column: 30, scope: !12438)
!12500 = !DILocation(line: 746, column: 39, scope: !12438)
!12501 = !DILocation(line: 746, column: 47, scope: !12438)
!12502 = !DILocation(line: 746, column: 53, scope: !12438)
!12503 = !DILocation(line: 746, column: 51, scope: !12438)
!12504 = !DILocation(line: 746, column: 62, scope: !12438)
!12505 = !DILocation(line: 746, column: 60, scope: !12438)
!12506 = !DILocation(line: 746, column: 45, scope: !12438)
!12507 = !DILocation(line: 746, column: 10, scope: !12438)
!12508 = !DILocation(line: 746, column: 2, scope: !12438)
!12509 = !DILocation(line: 746, column: 8, scope: !12438)
!12510 = !DILocation(line: 747, column: 2, scope: !12438)
!12511 = !DILocation(line: 747, column: 8, scope: !12438)
!12512 = !DILocation(line: 749, column: 9, scope: !12438)
!12513 = !DILocation(line: 749, column: 2, scope: !12438)
!12514 = !DILocation(line: 750, column: 1, scope: !12438)
!12515 = distinct !DISubprogram(name: "mcol_lighten", scope: !3, file: !3, line: 752, type: !12214, scopeLine: 753, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2758, retainedNodes: !3422)
!12516 = !DILocalVariable(name: "col1", arg: 1, scope: !12515, file: !3, line: 752, type: !231)
!12517 = !DILocation(line: 752, column: 51, scope: !12515)
!12518 = !DILocalVariable(name: "col2", arg: 2, scope: !12515, file: !3, line: 752, type: !231)
!12519 = !DILocation(line: 752, column: 70, scope: !12515)
!12520 = !DILocalVariable(name: "fac", arg: 3, scope: !12515, file: !3, line: 752, type: !22)
!12521 = !DILocation(line: 752, column: 80, scope: !12515)
!12522 = !DILocalVariable(name: "cp1", scope: !12515, file: !3, line: 754, type: !1742)
!12523 = !DILocation(line: 754, column: 17, scope: !12515)
!12524 = !DILocalVariable(name: "cp2", scope: !12515, file: !3, line: 754, type: !1742)
!12525 = !DILocation(line: 754, column: 23, scope: !12515)
!12526 = !DILocalVariable(name: "cp", scope: !12515, file: !3, line: 754, type: !1742)
!12527 = !DILocation(line: 754, column: 29, scope: !12515)
!12528 = !DILocalVariable(name: "mfac", scope: !12515, file: !3, line: 755, type: !22)
!12529 = !DILocation(line: 755, column: 6, scope: !12515)
!12530 = !DILocalVariable(name: "col", scope: !12515, file: !3, line: 756, type: !231)
!12531 = !DILocation(line: 756, column: 15, scope: !12515)
!12532 = !DILocation(line: 758, column: 6, scope: !12533)
!12533 = distinct !DILexicalBlock(scope: !12515, file: !3, line: 758, column: 6)
!12534 = !DILocation(line: 758, column: 10, scope: !12533)
!12535 = !DILocation(line: 758, column: 6, scope: !12515)
!12536 = !DILocation(line: 759, column: 10, scope: !12537)
!12537 = distinct !DILexicalBlock(scope: !12533, file: !3, line: 758, column: 16)
!12538 = !DILocation(line: 759, column: 3, scope: !12537)
!12539 = !DILocation(line: 761, column: 11, scope: !12540)
!12540 = distinct !DILexicalBlock(scope: !12533, file: !3, line: 761, column: 11)
!12541 = !DILocation(line: 761, column: 15, scope: !12540)
!12542 = !DILocation(line: 761, column: 11, scope: !12533)
!12543 = !DILocation(line: 762, column: 10, scope: !12544)
!12544 = distinct !DILexicalBlock(scope: !12540, file: !3, line: 761, column: 23)
!12545 = !DILocation(line: 762, column: 3, scope: !12544)
!12546 = !DILocation(line: 765, column: 15, scope: !12515)
!12547 = !DILocation(line: 765, column: 13, scope: !12515)
!12548 = !DILocation(line: 765, column: 7, scope: !12515)
!12549 = !DILocation(line: 767, column: 8, scope: !12515)
!12550 = !DILocation(line: 767, column: 6, scope: !12515)
!12551 = !DILocation(line: 768, column: 8, scope: !12515)
!12552 = !DILocation(line: 768, column: 6, scope: !12515)
!12553 = !DILocation(line: 769, column: 8, scope: !12515)
!12554 = !DILocation(line: 769, column: 6, scope: !12515)
!12555 = !DILocation(line: 773, column: 28, scope: !12556)
!12556 = distinct !DILexicalBlock(scope: !12515, file: !3, line: 773, column: 6)
!12557 = !DILocation(line: 773, column: 6, scope: !12556)
!12558 = !DILocation(line: 773, column: 57, scope: !12556)
!12559 = !DILocation(line: 773, column: 35, scope: !12556)
!12560 = !DILocation(line: 773, column: 33, scope: !12556)
!12561 = !DILocation(line: 773, column: 6, scope: !12515)
!12562 = !DILocation(line: 774, column: 10, scope: !12563)
!12563 = distinct !DILexicalBlock(scope: !12556, file: !3, line: 773, column: 63)
!12564 = !DILocation(line: 774, column: 3, scope: !12563)
!12565 = !DILocation(line: 777, column: 25, scope: !12515)
!12566 = !DILocation(line: 777, column: 32, scope: !12515)
!12567 = !DILocation(line: 777, column: 30, scope: !12515)
!12568 = !DILocation(line: 777, column: 41, scope: !12515)
!12569 = !DILocation(line: 777, column: 47, scope: !12515)
!12570 = !DILocation(line: 777, column: 45, scope: !12515)
!12571 = !DILocation(line: 777, column: 39, scope: !12515)
!12572 = !DILocation(line: 777, column: 10, scope: !12515)
!12573 = !DILocation(line: 777, column: 2, scope: !12515)
!12574 = !DILocation(line: 777, column: 8, scope: !12515)
!12575 = !DILocation(line: 778, column: 25, scope: !12515)
!12576 = !DILocation(line: 778, column: 32, scope: !12515)
!12577 = !DILocation(line: 778, column: 30, scope: !12515)
!12578 = !DILocation(line: 778, column: 41, scope: !12515)
!12579 = !DILocation(line: 778, column: 47, scope: !12515)
!12580 = !DILocation(line: 778, column: 45, scope: !12515)
!12581 = !DILocation(line: 778, column: 39, scope: !12515)
!12582 = !DILocation(line: 778, column: 10, scope: !12515)
!12583 = !DILocation(line: 778, column: 2, scope: !12515)
!12584 = !DILocation(line: 778, column: 8, scope: !12515)
!12585 = !DILocation(line: 779, column: 25, scope: !12515)
!12586 = !DILocation(line: 779, column: 32, scope: !12515)
!12587 = !DILocation(line: 779, column: 30, scope: !12515)
!12588 = !DILocation(line: 779, column: 41, scope: !12515)
!12589 = !DILocation(line: 779, column: 47, scope: !12515)
!12590 = !DILocation(line: 779, column: 45, scope: !12515)
!12591 = !DILocation(line: 779, column: 39, scope: !12515)
!12592 = !DILocation(line: 779, column: 10, scope: !12515)
!12593 = !DILocation(line: 779, column: 2, scope: !12515)
!12594 = !DILocation(line: 779, column: 8, scope: !12515)
!12595 = !DILocation(line: 780, column: 2, scope: !12515)
!12596 = !DILocation(line: 780, column: 8, scope: !12515)
!12597 = !DILocation(line: 782, column: 9, scope: !12515)
!12598 = !DILocation(line: 782, column: 2, scope: !12515)
!12599 = !DILocation(line: 783, column: 1, scope: !12515)
!12600 = distinct !DISubprogram(name: "mcol_darken", scope: !3, file: !3, line: 785, type: !12214, scopeLine: 786, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2758, retainedNodes: !3422)
!12601 = !DILocalVariable(name: "col1", arg: 1, scope: !12600, file: !3, line: 785, type: !231)
!12602 = !DILocation(line: 785, column: 50, scope: !12600)
!12603 = !DILocalVariable(name: "col2", arg: 2, scope: !12600, file: !3, line: 785, type: !231)
!12604 = !DILocation(line: 785, column: 69, scope: !12600)
!12605 = !DILocalVariable(name: "fac", arg: 3, scope: !12600, file: !3, line: 785, type: !22)
!12606 = !DILocation(line: 785, column: 79, scope: !12600)
!12607 = !DILocalVariable(name: "cp1", scope: !12600, file: !3, line: 787, type: !1742)
!12608 = !DILocation(line: 787, column: 17, scope: !12600)
!12609 = !DILocalVariable(name: "cp2", scope: !12600, file: !3, line: 787, type: !1742)
!12610 = !DILocation(line: 787, column: 23, scope: !12600)
!12611 = !DILocalVariable(name: "cp", scope: !12600, file: !3, line: 787, type: !1742)
!12612 = !DILocation(line: 787, column: 29, scope: !12600)
!12613 = !DILocalVariable(name: "mfac", scope: !12600, file: !3, line: 788, type: !22)
!12614 = !DILocation(line: 788, column: 6, scope: !12600)
!12615 = !DILocalVariable(name: "col", scope: !12600, file: !3, line: 789, type: !231)
!12616 = !DILocation(line: 789, column: 15, scope: !12600)
!12617 = !DILocation(line: 791, column: 6, scope: !12618)
!12618 = distinct !DILexicalBlock(scope: !12600, file: !3, line: 791, column: 6)
!12619 = !DILocation(line: 791, column: 10, scope: !12618)
!12620 = !DILocation(line: 791, column: 6, scope: !12600)
!12621 = !DILocation(line: 792, column: 10, scope: !12622)
!12622 = distinct !DILexicalBlock(scope: !12618, file: !3, line: 791, column: 16)
!12623 = !DILocation(line: 792, column: 3, scope: !12622)
!12624 = !DILocation(line: 794, column: 11, scope: !12625)
!12625 = distinct !DILexicalBlock(scope: !12618, file: !3, line: 794, column: 11)
!12626 = !DILocation(line: 794, column: 15, scope: !12625)
!12627 = !DILocation(line: 794, column: 11, scope: !12618)
!12628 = !DILocation(line: 795, column: 10, scope: !12629)
!12629 = distinct !DILexicalBlock(scope: !12625, file: !3, line: 794, column: 23)
!12630 = !DILocation(line: 795, column: 3, scope: !12629)
!12631 = !DILocation(line: 798, column: 15, scope: !12600)
!12632 = !DILocation(line: 798, column: 13, scope: !12600)
!12633 = !DILocation(line: 798, column: 7, scope: !12600)
!12634 = !DILocation(line: 800, column: 8, scope: !12600)
!12635 = !DILocation(line: 800, column: 6, scope: !12600)
!12636 = !DILocation(line: 801, column: 8, scope: !12600)
!12637 = !DILocation(line: 801, column: 6, scope: !12600)
!12638 = !DILocation(line: 802, column: 8, scope: !12600)
!12639 = !DILocation(line: 802, column: 6, scope: !12600)
!12640 = !DILocation(line: 806, column: 28, scope: !12641)
!12641 = distinct !DILexicalBlock(scope: !12600, file: !3, line: 806, column: 6)
!12642 = !DILocation(line: 806, column: 6, scope: !12641)
!12643 = !DILocation(line: 806, column: 57, scope: !12641)
!12644 = !DILocation(line: 806, column: 35, scope: !12641)
!12645 = !DILocation(line: 806, column: 33, scope: !12641)
!12646 = !DILocation(line: 806, column: 6, scope: !12600)
!12647 = !DILocation(line: 807, column: 10, scope: !12648)
!12648 = distinct !DILexicalBlock(scope: !12641, file: !3, line: 806, column: 63)
!12649 = !DILocation(line: 807, column: 3, scope: !12648)
!12650 = !DILocation(line: 810, column: 26, scope: !12600)
!12651 = !DILocation(line: 810, column: 33, scope: !12600)
!12652 = !DILocation(line: 810, column: 31, scope: !12600)
!12653 = !DILocation(line: 810, column: 42, scope: !12600)
!12654 = !DILocation(line: 810, column: 48, scope: !12600)
!12655 = !DILocation(line: 810, column: 46, scope: !12600)
!12656 = !DILocation(line: 810, column: 40, scope: !12600)
!12657 = !DILocation(line: 810, column: 10, scope: !12600)
!12658 = !DILocation(line: 810, column: 2, scope: !12600)
!12659 = !DILocation(line: 810, column: 8, scope: !12600)
!12660 = !DILocation(line: 811, column: 26, scope: !12600)
!12661 = !DILocation(line: 811, column: 33, scope: !12600)
!12662 = !DILocation(line: 811, column: 31, scope: !12600)
!12663 = !DILocation(line: 811, column: 42, scope: !12600)
!12664 = !DILocation(line: 811, column: 48, scope: !12600)
!12665 = !DILocation(line: 811, column: 46, scope: !12600)
!12666 = !DILocation(line: 811, column: 40, scope: !12600)
!12667 = !DILocation(line: 811, column: 10, scope: !12600)
!12668 = !DILocation(line: 811, column: 2, scope: !12600)
!12669 = !DILocation(line: 811, column: 8, scope: !12600)
!12670 = !DILocation(line: 812, column: 26, scope: !12600)
!12671 = !DILocation(line: 812, column: 33, scope: !12600)
!12672 = !DILocation(line: 812, column: 31, scope: !12600)
!12673 = !DILocation(line: 812, column: 42, scope: !12600)
!12674 = !DILocation(line: 812, column: 48, scope: !12600)
!12675 = !DILocation(line: 812, column: 46, scope: !12600)
!12676 = !DILocation(line: 812, column: 40, scope: !12600)
!12677 = !DILocation(line: 812, column: 10, scope: !12600)
!12678 = !DILocation(line: 812, column: 2, scope: !12600)
!12679 = !DILocation(line: 812, column: 8, scope: !12600)
!12680 = !DILocation(line: 813, column: 2, scope: !12600)
!12681 = !DILocation(line: 813, column: 8, scope: !12600)
!12682 = !DILocation(line: 814, column: 9, scope: !12600)
!12683 = !DILocation(line: 814, column: 2, scope: !12600)
!12684 = !DILocation(line: 815, column: 1, scope: !12600)
!12685 = distinct !DISubprogram(name: "rgb_to_grayscale_byte", scope: !12686, file: !12686, line: 225, type: !12687, scopeLine: 226, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2758, retainedNodes: !3422)
!12686 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_color_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!12687 = !DISubroutineType(types: !12688)
!12688 = !{!259, !3412}
!12689 = !DILocalVariable(name: "rgb", arg: 1, scope: !12685, file: !12686, line: 225, type: !3412)
!12690 = !DILocation(line: 225, column: 65, scope: !12685)
!12691 = !DILocation(line: 227, column: 49, scope: !12685)
!12692 = !DILocation(line: 227, column: 33, scope: !12685)
!12693 = !DILocation(line: 227, column: 31, scope: !12685)
!12694 = !DILocation(line: 228, column: 49, scope: !12685)
!12695 = !DILocation(line: 228, column: 33, scope: !12685)
!12696 = !DILocation(line: 228, column: 31, scope: !12685)
!12697 = !DILocation(line: 227, column: 57, scope: !12685)
!12698 = !DILocation(line: 229, column: 49, scope: !12685)
!12699 = !DILocation(line: 229, column: 33, scope: !12685)
!12700 = !DILocation(line: 229, column: 31, scope: !12685)
!12701 = !DILocation(line: 228, column: 57, scope: !12685)
!12702 = !DILocation(line: 229, column: 58, scope: !12685)
!12703 = !DILocation(line: 227, column: 9, scope: !12685)
!12704 = !DILocation(line: 227, column: 2, scope: !12685)
!12705 = distinct !DISubprogram(name: "len_v2v2", scope: !9252, file: !9252, line: 696, type: !9253, scopeLine: 697, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2758, retainedNodes: !3422)
!12706 = !DILocalVariable(name: "v1", arg: 1, scope: !12705, file: !9252, line: 696, type: !804)
!12707 = !DILocation(line: 696, column: 36, scope: !12705)
!12708 = !DILocalVariable(name: "v2", arg: 2, scope: !12705, file: !9252, line: 696, type: !804)
!12709 = !DILocation(line: 696, column: 55, scope: !12705)
!12710 = !DILocalVariable(name: "x", scope: !12705, file: !9252, line: 698, type: !210)
!12711 = !DILocation(line: 698, column: 8, scope: !12705)
!12712 = !DILocalVariable(name: "y", scope: !12705, file: !9252, line: 698, type: !210)
!12713 = !DILocation(line: 698, column: 11, scope: !12705)
!12714 = !DILocation(line: 700, column: 6, scope: !12705)
!12715 = !DILocation(line: 700, column: 14, scope: !12705)
!12716 = !DILocation(line: 700, column: 12, scope: !12705)
!12717 = !DILocation(line: 700, column: 4, scope: !12705)
!12718 = !DILocation(line: 701, column: 6, scope: !12705)
!12719 = !DILocation(line: 701, column: 14, scope: !12705)
!12720 = !DILocation(line: 701, column: 12, scope: !12705)
!12721 = !DILocation(line: 701, column: 4, scope: !12705)
!12722 = !DILocation(line: 702, column: 15, scope: !12705)
!12723 = !DILocation(line: 702, column: 19, scope: !12705)
!12724 = !DILocation(line: 702, column: 17, scope: !12705)
!12725 = !DILocation(line: 702, column: 23, scope: !12705)
!12726 = !DILocation(line: 702, column: 27, scope: !12705)
!12727 = !DILocation(line: 702, column: 25, scope: !12705)
!12728 = !DILocation(line: 702, column: 21, scope: !12705)
!12729 = !DILocation(line: 702, column: 9, scope: !12705)
!12730 = !DILocation(line: 702, column: 2, scope: !12705)
!12731 = distinct !DISubprogram(name: "gradientVertInit__mapFunc", scope: !3, file: !3, line: 3265, type: !802, scopeLine: 3268, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2758, retainedNodes: !3422)
!12732 = !DILocalVariable(name: "userData", arg: 1, scope: !12731, file: !3, line: 3266, type: !56)
!12733 = !DILocation(line: 3266, column: 15, scope: !12731)
!12734 = !DILocalVariable(name: "index", arg: 2, scope: !12731, file: !3, line: 3266, type: !22)
!12735 = !DILocation(line: 3266, column: 29, scope: !12731)
!12736 = !DILocalVariable(name: "co", arg: 3, scope: !12731, file: !3, line: 3266, type: !804)
!12737 = !DILocation(line: 3266, column: 48, scope: !12731)
!12738 = !DILocalVariable(name: "UNUSED_no_f", arg: 4, scope: !12731, file: !3, line: 3267, type: !804)
!12739 = !DILocation(line: 3267, column: 21, scope: !12731)
!12740 = !DILocalVariable(name: "UNUSED_no_s", arg: 5, scope: !12731, file: !3, line: 3267, type: !805)
!12741 = !DILocation(line: 3267, column: 50, scope: !12731)
!12742 = !DILocalVariable(name: "grad_data", scope: !12731, file: !3, line: 3269, type: !12743)
!12743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6185, size: 64)
!12744 = !DILocation(line: 3269, column: 23, scope: !12731)
!12745 = !DILocation(line: 3269, column: 35, scope: !12731)
!12746 = !DILocalVariable(name: "me", scope: !12731, file: !3, line: 3270, type: !3187)
!12747 = !DILocation(line: 3270, column: 8, scope: !12731)
!12748 = !DILocation(line: 3270, column: 13, scope: !12731)
!12749 = !DILocation(line: 3270, column: 24, scope: !12731)
!12750 = !DILocation(line: 3272, column: 7, scope: !12751)
!12751 = distinct !DILexicalBlock(scope: !12731, file: !3, line: 3272, column: 6)
!12752 = !DILocation(line: 3272, column: 18, scope: !12751)
!12753 = !DILocation(line: 3272, column: 29, scope: !12751)
!12754 = !DILocation(line: 3272, column: 39, scope: !12751)
!12755 = !DILocation(line: 3272, column: 43, scope: !12751)
!12756 = !DILocation(line: 3272, column: 47, scope: !12751)
!12757 = !DILocation(line: 3272, column: 53, scope: !12751)
!12758 = !DILocation(line: 3272, column: 60, scope: !12751)
!12759 = !DILocation(line: 3272, column: 65, scope: !12751)
!12760 = !DILocation(line: 3272, column: 6, scope: !12731)
!12761 = !DILocation(line: 3277, column: 7, scope: !12762)
!12762 = distinct !DILexicalBlock(scope: !12763, file: !3, line: 3277, column: 7)
!12763 = distinct !DILexicalBlock(scope: !12751, file: !3, line: 3272, column: 76)
!12764 = !DILocation(line: 3277, column: 53, scope: !12762)
!12765 = !DILocation(line: 3277, column: 7, scope: !12763)
!12766 = !DILocalVariable(name: "vs", scope: !12767, file: !3, line: 3278, type: !6123)
!12767 = distinct !DILexicalBlock(scope: !12762, file: !3, line: 3277, column: 59)
!12768 = !DILocation(line: 3278, column: 26, scope: !12767)
!12769 = !DILocation(line: 3278, column: 32, scope: !12767)
!12770 = !DILocation(line: 3278, column: 43, scope: !12767)
!12771 = !DILocation(line: 3278, column: 54, scope: !12767)
!12772 = !DILocation(line: 3279, column: 39, scope: !12773)
!12773 = distinct !DILexicalBlock(scope: !12767, file: !3, line: 3279, column: 8)
!12774 = !DILocation(line: 3279, column: 50, scope: !12773)
!12775 = !DILocation(line: 3280, column: 39, scope: !12773)
!12776 = !DILocation(line: 3280, column: 43, scope: !12773)
!12777 = !DILocation(line: 3280, column: 47, scope: !12773)
!12778 = !DILocation(line: 3279, column: 8, scope: !12773)
!12779 = !DILocation(line: 3281, column: 88, scope: !12773)
!12780 = !DILocation(line: 3279, column: 8, scope: !12767)
!12781 = !DILocalVariable(name: "dv", scope: !12782, file: !3, line: 3284, type: !3406)
!12782 = distinct !DILexicalBlock(scope: !12773, file: !3, line: 3282, column: 4)
!12783 = !DILocation(line: 3284, column: 18, scope: !12782)
!12784 = !DILocation(line: 3284, column: 24, scope: !12782)
!12785 = !DILocation(line: 3284, column: 28, scope: !12782)
!12786 = !DILocation(line: 3284, column: 34, scope: !12782)
!12787 = !DILocalVariable(name: "dw", scope: !12782, file: !3, line: 3285, type: !3404)
!12788 = !DILocation(line: 3285, column: 20, scope: !12782)
!12789 = !DILocation(line: 3286, column: 29, scope: !12782)
!12790 = !DILocation(line: 3286, column: 33, scope: !12782)
!12791 = !DILocation(line: 3286, column: 44, scope: !12782)
!12792 = !DILocation(line: 3286, column: 10, scope: !12782)
!12793 = !DILocation(line: 3286, column: 8, scope: !12782)
!12794 = !DILocation(line: 3287, column: 9, scope: !12795)
!12795 = distinct !DILexicalBlock(scope: !12782, file: !3, line: 3287, column: 9)
!12796 = !DILocation(line: 3287, column: 9, scope: !12782)
!12797 = !DILocation(line: 3288, column: 24, scope: !12798)
!12798 = distinct !DILexicalBlock(scope: !12795, file: !3, line: 3287, column: 13)
!12799 = !DILocation(line: 3288, column: 28, scope: !12798)
!12800 = !DILocation(line: 3288, column: 6, scope: !12798)
!12801 = !DILocation(line: 3288, column: 10, scope: !12798)
!12802 = !DILocation(line: 3288, column: 22, scope: !12798)
!12803 = !DILocation(line: 3289, column: 6, scope: !12798)
!12804 = !DILocation(line: 3289, column: 10, scope: !12798)
!12805 = !DILocation(line: 3289, column: 15, scope: !12798)
!12806 = !DILocation(line: 3290, column: 5, scope: !12798)
!12807 = !DILocation(line: 3292, column: 6, scope: !12808)
!12808 = distinct !DILexicalBlock(scope: !12795, file: !3, line: 3291, column: 10)
!12809 = !DILocation(line: 3292, column: 10, scope: !12808)
!12810 = !DILocation(line: 3292, column: 22, scope: !12808)
!12811 = !DILocation(line: 3293, column: 6, scope: !12808)
!12812 = !DILocation(line: 3293, column: 10, scope: !12808)
!12813 = !DILocation(line: 3293, column: 15, scope: !12808)
!12814 = !DILocation(line: 3296, column: 5, scope: !12782)
!12815 = !DILocation(line: 3298, column: 25, scope: !12782)
!12816 = !DILocation(line: 3298, column: 36, scope: !12782)
!12817 = !DILocation(line: 3298, column: 5, scope: !12782)
!12818 = !DILocation(line: 3299, column: 4, scope: !12782)
!12819 = !DILocation(line: 3302, column: 16, scope: !12820)
!12820 = distinct !DILexicalBlock(scope: !12773, file: !3, line: 3300, column: 9)
!12821 = !DILocation(line: 3302, column: 20, scope: !12820)
!12822 = !DILocation(line: 3302, column: 5, scope: !12820)
!12823 = !DILocation(line: 3304, column: 3, scope: !12767)
!12824 = !DILocation(line: 3305, column: 2, scope: !12763)
!12825 = !DILocation(line: 3306, column: 1, scope: !12731)
!12826 = distinct !DISubprogram(name: "gradientVertUpdate__mapFunc", scope: !3, file: !3, line: 3251, type: !802, scopeLine: 3254, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2758, retainedNodes: !3422)
!12827 = !DILocalVariable(name: "userData", arg: 1, scope: !12826, file: !3, line: 3252, type: !56)
!12828 = !DILocation(line: 3252, column: 15, scope: !12826)
!12829 = !DILocalVariable(name: "index", arg: 2, scope: !12826, file: !3, line: 3252, type: !22)
!12830 = !DILocation(line: 3252, column: 29, scope: !12826)
!12831 = !DILocalVariable(name: "UNUSED_co", arg: 3, scope: !12826, file: !3, line: 3252, type: !804)
!12832 = !DILocation(line: 3252, column: 48, scope: !12826)
!12833 = !DILocalVariable(name: "UNUSED_no_f", arg: 4, scope: !12826, file: !3, line: 3253, type: !804)
!12834 = !DILocation(line: 3253, column: 21, scope: !12826)
!12835 = !DILocalVariable(name: "UNUSED_no_s", arg: 5, scope: !12826, file: !3, line: 3253, type: !805)
!12836 = !DILocation(line: 3253, column: 50, scope: !12826)
!12837 = !DILocalVariable(name: "grad_data", scope: !12826, file: !3, line: 3255, type: !12743)
!12838 = !DILocation(line: 3255, column: 23, scope: !12826)
!12839 = !DILocation(line: 3255, column: 35, scope: !12826)
!12840 = !DILocalVariable(name: "me", scope: !12826, file: !3, line: 3256, type: !3187)
!12841 = !DILocation(line: 3256, column: 8, scope: !12826)
!12842 = !DILocation(line: 3256, column: 13, scope: !12826)
!12843 = !DILocation(line: 3256, column: 24, scope: !12826)
!12844 = !DILocation(line: 3257, column: 7, scope: !12845)
!12845 = distinct !DILexicalBlock(scope: !12826, file: !3, line: 3257, column: 6)
!12846 = !DILocation(line: 3257, column: 18, scope: !12845)
!12847 = !DILocation(line: 3257, column: 29, scope: !12845)
!12848 = !DILocation(line: 3257, column: 39, scope: !12845)
!12849 = !DILocation(line: 3257, column: 43, scope: !12845)
!12850 = !DILocation(line: 3257, column: 47, scope: !12845)
!12851 = !DILocation(line: 3257, column: 53, scope: !12845)
!12852 = !DILocation(line: 3257, column: 60, scope: !12845)
!12853 = !DILocation(line: 3257, column: 65, scope: !12845)
!12854 = !DILocation(line: 3257, column: 6, scope: !12826)
!12855 = !DILocalVariable(name: "vs", scope: !12856, file: !3, line: 3258, type: !6123)
!12856 = distinct !DILexicalBlock(scope: !12845, file: !3, line: 3257, column: 76)
!12857 = !DILocation(line: 3258, column: 25, scope: !12856)
!12858 = !DILocation(line: 3258, column: 31, scope: !12856)
!12859 = !DILocation(line: 3258, column: 42, scope: !12856)
!12860 = !DILocation(line: 3258, column: 53, scope: !12856)
!12861 = !DILocation(line: 3259, column: 7, scope: !12862)
!12862 = distinct !DILexicalBlock(scope: !12856, file: !3, line: 3259, column: 7)
!12863 = !DILocation(line: 3259, column: 11, scope: !12862)
!12864 = !DILocation(line: 3259, column: 18, scope: !12862)
!12865 = !DILocation(line: 3259, column: 7, scope: !12856)
!12866 = !DILocation(line: 3260, column: 24, scope: !12867)
!12867 = distinct !DILexicalBlock(scope: !12862, file: !3, line: 3259, column: 30)
!12868 = !DILocation(line: 3260, column: 35, scope: !12867)
!12869 = !DILocation(line: 3260, column: 4, scope: !12867)
!12870 = !DILocation(line: 3261, column: 3, scope: !12867)
!12871 = !DILocation(line: 3262, column: 2, scope: !12856)
!12872 = !DILocation(line: 3263, column: 1, scope: !12826)
!12873 = distinct !DISubprogram(name: "gradientVert_update", scope: !3, file: !3, line: 3204, type: !12874, scopeLine: 3205, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2758, retainedNodes: !3422)
!12874 = !DISubroutineType(types: !12875)
!12875 = !{null, !12743, !22}
!12876 = !DILocalVariable(name: "grad_data", arg: 1, scope: !12873, file: !3, line: 3204, type: !12743)
!12877 = !DILocation(line: 3204, column: 54, scope: !12873)
!12878 = !DILocalVariable(name: "index", arg: 2, scope: !12873, file: !3, line: 3204, type: !22)
!12879 = !DILocation(line: 3204, column: 69, scope: !12873)
!12880 = !DILocalVariable(name: "me", scope: !12873, file: !3, line: 3206, type: !3187)
!12881 = !DILocation(line: 3206, column: 8, scope: !12873)
!12882 = !DILocation(line: 3206, column: 13, scope: !12873)
!12883 = !DILocation(line: 3206, column: 24, scope: !12873)
!12884 = !DILocalVariable(name: "vs", scope: !12873, file: !3, line: 3207, type: !6123)
!12885 = !DILocation(line: 3207, column: 24, scope: !12873)
!12886 = !DILocation(line: 3207, column: 30, scope: !12873)
!12887 = !DILocation(line: 3207, column: 41, scope: !12873)
!12888 = !DILocation(line: 3207, column: 52, scope: !12873)
!12889 = !DILocalVariable(name: "alpha", scope: !12873, file: !3, line: 3208, type: !210)
!12890 = !DILocation(line: 3208, column: 8, scope: !12873)
!12891 = !DILocation(line: 3210, column: 6, scope: !12892)
!12892 = distinct !DILexicalBlock(scope: !12873, file: !3, line: 3210, column: 6)
!12893 = !DILocation(line: 3210, column: 17, scope: !12892)
!12894 = !DILocation(line: 3210, column: 22, scope: !12892)
!12895 = !DILocation(line: 3210, column: 6, scope: !12873)
!12896 = !DILocation(line: 3211, column: 32, scope: !12897)
!12897 = distinct !DILexicalBlock(scope: !12892, file: !3, line: 3210, column: 54)
!12898 = !DILocation(line: 3211, column: 36, scope: !12897)
!12899 = !DILocation(line: 3211, column: 41, scope: !12897)
!12900 = !DILocation(line: 3211, column: 52, scope: !12897)
!12901 = !DILocation(line: 3211, column: 63, scope: !12897)
!12902 = !DILocation(line: 3211, column: 74, scope: !12897)
!12903 = !DILocation(line: 3211, column: 11, scope: !12897)
!12904 = !DILocation(line: 3211, column: 9, scope: !12897)
!12905 = !DILocation(line: 3212, column: 2, scope: !12897)
!12906 = !DILocation(line: 3215, column: 20, scope: !12907)
!12907 = distinct !DILexicalBlock(scope: !12892, file: !3, line: 3213, column: 7)
!12908 = !DILocation(line: 3215, column: 31, scope: !12907)
!12909 = !DILocation(line: 3215, column: 42, scope: !12907)
!12910 = !DILocation(line: 3215, column: 46, scope: !12907)
!12911 = !DILocation(line: 3215, column: 11, scope: !12907)
!12912 = !DILocation(line: 3215, column: 53, scope: !12907)
!12913 = !DILocation(line: 3215, column: 64, scope: !12907)
!12914 = !DILocation(line: 3215, column: 51, scope: !12907)
!12915 = !DILocation(line: 3215, column: 9, scope: !12907)
!12916 = !DILocation(line: 3220, column: 41, scope: !12873)
!12917 = !DILocation(line: 3220, column: 52, scope: !12873)
!12918 = !DILocation(line: 3220, column: 59, scope: !12873)
!12919 = !DILocation(line: 3220, column: 10, scope: !12873)
!12920 = !DILocation(line: 3220, column: 8, scope: !12873)
!12921 = !DILocation(line: 3222, column: 6, scope: !12922)
!12922 = distinct !DILexicalBlock(scope: !12873, file: !3, line: 3222, column: 6)
!12923 = !DILocation(line: 3222, column: 12, scope: !12922)
!12924 = !DILocation(line: 3222, column: 6, scope: !12873)
!12925 = !DILocalVariable(name: "dv", scope: !12926, file: !3, line: 3223, type: !3406)
!12926 = distinct !DILexicalBlock(scope: !12922, file: !3, line: 3222, column: 21)
!12927 = !DILocation(line: 3223, column: 16, scope: !12926)
!12928 = !DILocation(line: 3223, column: 22, scope: !12926)
!12929 = !DILocation(line: 3223, column: 26, scope: !12926)
!12930 = !DILocation(line: 3223, column: 32, scope: !12926)
!12931 = !DILocalVariable(name: "dw", scope: !12926, file: !3, line: 3224, type: !3404)
!12932 = !DILocation(line: 3224, column: 18, scope: !12926)
!12933 = !DILocation(line: 3224, column: 44, scope: !12926)
!12934 = !DILocation(line: 3224, column: 48, scope: !12926)
!12935 = !DILocation(line: 3224, column: 59, scope: !12926)
!12936 = !DILocation(line: 3224, column: 23, scope: !12926)
!12937 = !DILocalVariable(name: "tool", scope: !12926, file: !3, line: 3226, type: !22)
!12938 = !DILocation(line: 3226, column: 7, scope: !12926)
!12939 = !DILocation(line: 3226, column: 14, scope: !12926)
!12940 = !DILocation(line: 3226, column: 25, scope: !12926)
!12941 = !DILocation(line: 3226, column: 32, scope: !12926)
!12942 = !DILocalVariable(name: "testw", scope: !12926, file: !3, line: 3227, type: !210)
!12943 = !DILocation(line: 3227, column: 9, scope: !12926)
!12944 = !DILocation(line: 3230, column: 29, scope: !12926)
!12945 = !DILocation(line: 3230, column: 35, scope: !12926)
!12946 = !DILocation(line: 3230, column: 39, scope: !12926)
!12947 = !DILocation(line: 3230, column: 52, scope: !12926)
!12948 = !DILocation(line: 3230, column: 63, scope: !12926)
!12949 = !DILocation(line: 3230, column: 76, scope: !12926)
!12950 = !DILocation(line: 3230, column: 84, scope: !12926)
!12951 = !DILocation(line: 3230, column: 95, scope: !12926)
!12952 = !DILocation(line: 3230, column: 102, scope: !12926)
!12953 = !DILocation(line: 3230, column: 82, scope: !12926)
!12954 = !DILocation(line: 3230, column: 11, scope: !12926)
!12955 = !DILocation(line: 3230, column: 9, scope: !12926)
!12956 = !DILocation(line: 3231, column: 3, scope: !12957)
!12957 = distinct !DILexicalBlock(scope: !12958, file: !3, line: 3231, column: 3)
!12958 = distinct !DILexicalBlock(scope: !12926, file: !3, line: 3231, column: 3)
!12959 = !DILocation(line: 3231, column: 3, scope: !12958)
!12960 = !DILocation(line: 3231, column: 3, scope: !12961)
!12961 = distinct !DILexicalBlock(scope: !12957, file: !3, line: 3231, column: 3)
!12962 = !DILocation(line: 3232, column: 16, scope: !12926)
!12963 = !DILocation(line: 3232, column: 3, scope: !12926)
!12964 = !DILocation(line: 3232, column: 7, scope: !12926)
!12965 = !DILocation(line: 3232, column: 14, scope: !12926)
!12966 = !DILocation(line: 3233, column: 2, scope: !12926)
!12967 = !DILocalVariable(name: "dv", scope: !12968, file: !3, line: 3235, type: !3406)
!12968 = distinct !DILexicalBlock(scope: !12922, file: !3, line: 3234, column: 7)
!12969 = !DILocation(line: 3235, column: 16, scope: !12968)
!12970 = !DILocation(line: 3235, column: 22, scope: !12968)
!12971 = !DILocation(line: 3235, column: 26, scope: !12968)
!12972 = !DILocation(line: 3235, column: 32, scope: !12968)
!12973 = !DILocation(line: 3236, column: 7, scope: !12974)
!12974 = distinct !DILexicalBlock(scope: !12968, file: !3, line: 3236, column: 7)
!12975 = !DILocation(line: 3236, column: 11, scope: !12974)
!12976 = !DILocation(line: 3236, column: 16, scope: !12974)
!12977 = !DILocation(line: 3236, column: 7, scope: !12968)
!12978 = !DILocalVariable(name: "dw", scope: !12979, file: !3, line: 3238, type: !3404)
!12979 = distinct !DILexicalBlock(scope: !12974, file: !3, line: 3236, column: 40)
!12980 = !DILocation(line: 3238, column: 19, scope: !12979)
!12981 = !DILocation(line: 3238, column: 43, scope: !12979)
!12982 = !DILocation(line: 3238, column: 47, scope: !12979)
!12983 = !DILocation(line: 3238, column: 58, scope: !12979)
!12984 = !DILocation(line: 3238, column: 24, scope: !12979)
!12985 = !DILocation(line: 3239, column: 17, scope: !12979)
!12986 = !DILocation(line: 3239, column: 21, scope: !12979)
!12987 = !DILocation(line: 3239, column: 4, scope: !12979)
!12988 = !DILocation(line: 3239, column: 8, scope: !12979)
!12989 = !DILocation(line: 3239, column: 15, scope: !12979)
!12990 = !DILocation(line: 3240, column: 3, scope: !12979)
!12991 = !DILocalVariable(name: "dw", scope: !12992, file: !3, line: 3243, type: !3404)
!12992 = distinct !DILexicalBlock(scope: !12974, file: !3, line: 3241, column: 8)
!12993 = !DILocation(line: 3243, column: 19, scope: !12992)
!12994 = !DILocation(line: 3243, column: 43, scope: !12992)
!12995 = !DILocation(line: 3243, column: 47, scope: !12992)
!12996 = !DILocation(line: 3243, column: 58, scope: !12992)
!12997 = !DILocation(line: 3243, column: 24, scope: !12992)
!12998 = !DILocation(line: 3244, column: 8, scope: !12999)
!12999 = distinct !DILexicalBlock(scope: !12992, file: !3, line: 3244, column: 8)
!13000 = !DILocation(line: 3244, column: 8, scope: !12992)
!13001 = !DILocation(line: 3245, column: 26, scope: !13002)
!13002 = distinct !DILexicalBlock(scope: !12999, file: !3, line: 3244, column: 12)
!13003 = !DILocation(line: 3245, column: 30, scope: !13002)
!13004 = !DILocation(line: 3245, column: 5, scope: !13002)
!13005 = !DILocation(line: 3246, column: 4, scope: !13002)
!13006 = !DILocation(line: 3249, column: 1, scope: !12873)
!13007 = distinct !DISubprogram(name: "copy_v2_fl", scope: !9252, file: !9252, line: 79, type: !13008, scopeLine: 80, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2758, retainedNodes: !3422)
!13008 = !DISubroutineType(types: !13009)
!13009 = !{null, !242, !210}
!13010 = !DILocalVariable(name: "r", arg: 1, scope: !13007, file: !9252, line: 79, type: !242)
!13011 = !DILocation(line: 79, column: 31, scope: !13007)
!13012 = !DILocalVariable(name: "f", arg: 2, scope: !13007, file: !9252, line: 79, type: !210)
!13013 = !DILocation(line: 79, column: 43, scope: !13007)
!13014 = !DILocation(line: 81, column: 9, scope: !13007)
!13015 = !DILocation(line: 81, column: 2, scope: !13007)
!13016 = !DILocation(line: 81, column: 7, scope: !13007)
!13017 = !DILocation(line: 82, column: 9, scope: !13007)
!13018 = !DILocation(line: 82, column: 2, scope: !13007)
!13019 = !DILocation(line: 82, column: 7, scope: !13007)
!13020 = !DILocation(line: 83, column: 1, scope: !13007)
