; ModuleID = 'blender/source/blender/editors/uvedit/uvedit_ops.c'
source_filename = "blender/source/blender/editors/uvedit/uvedit_ops.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.StructRNA = type opaque
%struct.EnumPropertyItem = type { i32, i8*, i32, i8*, i8* }
%struct.Object = type { %struct.ID, %struct.AnimData*, %struct.SculptSession*, i16, i16, i32, i32, i32, [64 x i8], %struct.Object*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Ipo*, %struct.BoundBox*, %struct.bAction*, %struct.bAction*, %struct.bPose*, i8*, %struct.bGPdata*, %struct.bAnimVizSettings, %struct.bMotionPath*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, %struct.Material**, i8*, i32, i32, [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [4 x float], [4 x float], [3 x float], [3 x float], float, float, [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i8, i8, i16, i8, i8, float, float, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, float, i16, i16, [4 x float], i32, i32, %struct.BulletSoftBody*, i8, i8, i16, [3 x float], %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.PartDeflect*, %struct.SoftBody*, %struct.Group*, i8, i8, i16, float, %struct.FluidsimSettings*, %struct.CurveCache*, %struct.DerivedMesh*, %struct.DerivedMesh*, i64, i64, i32, i32, %struct.ListBase, %struct.ListBase, %struct.ListBase*, %struct.RigidBodyOb*, %struct.RigidBodyCon*, [2 x float], %struct.ImageUser*, %struct.ListBase, %struct.LodLevel* }
%struct.ID = type { i8*, i8*, %struct.ID*, %struct.Library*, [66 x i8], i16, i32, i32, i32, %struct.IDProperty* }
%struct.Library = type { %struct.ID, %struct.ID*, %struct.FileData*, [1024 x i8], [1024 x i8], %struct.Library*, %struct.PackedFile* }
%struct.FileData = type opaque
%struct.PackedFile = type opaque
%struct.IDProperty = type { %struct.IDProperty*, %struct.IDProperty*, i8, i8, i16, [64 x i8], i32, %struct.IDPropertyData, i32, i32 }
%struct.IDPropertyData = type { i8*, %struct.ListBase, i32, i32 }
%struct.AnimData = type opaque
%struct.SculptSession = type opaque
%struct.Ipo = type opaque
%struct.BoundBox = type { [8 x [3 x float]], i32, i32 }
%struct.bAction = type { %struct.ID, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, i32, i32 }
%struct.bPose = type { %struct.ListBase, %struct.GHash*, i16, i16, i32, i32, float, [3 x float], [3 x float], %struct.ListBase, i32, i32, i8*, i8*, %struct.bAnimVizSettings, [64 x i8] }
%struct.GHash = type opaque
%struct.bGPdata = type opaque
%struct.bAnimVizSettings = type { i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i32, i32, i32, i32 }
%struct.bMotionPath = type { %struct.bMotionPathVert*, i32, i32, i32, i32 }
%struct.bMotionPathVert = type { [3 x float], i32 }
%struct.Material = type { %struct.ID, %struct.AnimData*, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, %struct.VolumeSettings, %struct.GameSettings, float, float, float, float, float, float, float, i16, i16, i16, i8, i8, float, float, i16, i16, float, float, float, float, i16, i16, i32, i32, i32, i32, i16, i16, i16, i16, float, float, float, float, float, float, float, float, float, float, [64 x i8], float, float, float, i32, i8, i8, i8, i8, i16, i16, i16, i8, i8, i16, i16, float, float, [4 x float], float, float, i16, i16, %struct.ColorBand*, %struct.ColorBand*, i8, i8, i8, i8, i16, i16, float, float, [18 x %struct.MTex*], %struct.bNodeTree*, %struct.Ipo*, %struct.Group*, %struct.PreviewImage*, float, float, float, float, float, i16, i16, [3 x float], [3 x float], float, float, float, float, float, float, float, i16, i16, i32, i16, i16, [4 x float], i16, i16, i16, i16, i16, [3 x i16], %struct.TexPaintSlot*, %struct.ListBase }
%struct.VolumeSettings = type { float, float, float, float, [3 x float], [3 x float], [3 x float], float, float, float, i16, i16, i16, i16, float, float, float, float }
%struct.GameSettings = type { i32, i32, i32, i32 }
%struct.ColorBand = type { i16, i16, i8, i8, i8, [1 x i8], [32 x %struct.CBData] }
%struct.CBData = type { float, float, float, float, float, i32 }
%struct.MTex = type { i16, i16, i16, i16, %struct.Object*, %struct.Tex*, [64 x i8], i8, i8, i8, i8, [3 x float], [3 x float], float, i16, i16, i16, i16, i16, i16, i8, [7 x i8], float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float }
%struct.Tex = type { %struct.ID, %struct.AnimData*, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, i32, i32, i16, i16, i16, i16, i32, i32, i32, i32, float, float, float, %struct.ImageUser, %struct.bNodeTree*, %struct.Ipo*, %struct.Image*, %struct.ColorBand*, %struct.EnvMap*, %struct.PreviewImage*, %struct.PointDensity*, %struct.VoxelData*, %struct.OceanTex*, i8, [7 x i8] }
%struct.ImageUser = type { %struct.Scene*, i32, i32, i32, i32, i8, i8, i8, i8, i16, i16, i16, i16, i32 }
%struct.Scene = type { %struct.ID, %struct.AnimData*, %struct.Object*, %struct.World*, %struct.Scene*, %struct.ListBase, %struct.Base*, %struct.Object*, [3 x float], [3 x float], [3 x float], [3 x float], i32, i32, i32, i16, i8, [1 x i8], %struct.bNodeTree*, %struct.Editing*, %struct.ToolSettings*, %struct.SceneStats*, %struct.RenderData, %struct.AudioData, %struct.ListBase, %struct.ListBase, i8*, i8*, i8*, i8*, i8*, %struct.DagForest*, i16, i16, i32, %struct.ListBase, %struct.GameFraming, %struct.GameData, %struct.UnitSettings, %struct.bGPdata*, %struct.PhysicsSettings, %struct.MovieClip*, i64, i64, %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings, %struct.ColorManagedColorspaceSettings, %struct.RigidBodyWorld* }
%struct.World = type { %struct.ID, %struct.AnimData*, i16, i16, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i16, float, float, float, float, i16, i16, i16, i16, float, float, float, float, float, float, float, i16, i16, i16, i16, i16, i16, float*, float*, %struct.Ipo*, [18 x %struct.MTex*], i16, i16, [2 x i16], %struct.PreviewImage*, %struct.bNodeTree* }
%struct.Base = type { %struct.Base*, %struct.Base*, i32, i32, i32, i16, i16, %struct.Object* }
%struct.Editing = type { %struct.ListBase*, %struct.ListBase, %struct.ListBase, %struct.Sequence*, [1024 x i8], [1024 x i8], i32, i32, i32, i32, %struct.rctf }
%struct.Sequence = type { %struct.Sequence*, %struct.Sequence*, i8*, i8*, [64 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, float, i16, i16, i32, i32, %struct.Strip*, %struct.Ipo*, %struct.Scene*, %struct.Object*, %struct.MovieClip*, %struct.Mask*, %struct.anim*, float, float, %struct.Sequence*, %struct.Sequence*, %struct.Sequence*, %struct.ListBase, %struct.bSound*, i8*, float, float, float, float, i8*, i32, i32, i32, float, i32, i8, [3 x i8], %struct.ListBase }
%struct.Strip = type { %struct.Strip*, %struct.Strip*, i32, i32, i32, i32, %struct.StripElem*, [768 x i8], %struct.StripProxy*, %struct.StripCrop*, %struct.StripTransform*, %struct.StripColorBalance*, %struct.ColorManagedColorspaceSettings }
%struct.StripElem = type { [256 x i8], i32, i32 }
%struct.StripProxy = type { [768 x i8], [256 x i8], %struct.anim*, i16, i16, i16, i16 }
%struct.StripCrop = type { i32, i32, i32, i32 }
%struct.StripTransform = type { i32, i32 }
%struct.StripColorBalance = type { [3 x float], [3 x float], [3 x float], i32, i32 }
%struct.Mask = type opaque
%struct.anim = type opaque
%struct.bSound = type opaque
%struct.rctf = type { float, float, float, float }
%struct.ToolSettings = type { %struct.VPaint*, %struct.VPaint*, %struct.Sculpt*, %struct.UvSculpt*, float, float, float, i16, i16, i8, i8, i8, i8, float, i16, i8, [5 x i8], %struct.ImagePaintSettings, %struct.ParticleEditSettings, float, float, i16, i16, i8, [1 x i8], i16, float, float, float, float, float, float, float, float, float, float, i16, i8, i8, [3 x i8], i8, %struct.Object*, i8, i8, i8, i8, i8, [8 x i8], [8 x i8], i8, i8, i8, i8, i8, i16, i16, i16, i16, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i16, i16, i32, float, float, %struct.UnifiedPaintSettings, %struct.MeshStatVis }
%struct.VPaint = type { %struct.Paint, i16, i16, i32, i32*, %struct.MDeformVert*, i8* }
%struct.Paint = type { %struct.Brush*, %struct.Palette*, i8*, [4 x i8], i32, i32, i32 }
%struct.Brush = type opaque
%struct.Palette = type opaque
%struct.MDeformVert = type { %struct.MDeformWeight*, i32, i32 }
%struct.MDeformWeight = type { i32, float }
%struct.Sculpt = type { %struct.Paint, i32, [3 x i32], float, i32, float, float, %struct.Object*, i8* }
%struct.UvSculpt = type { %struct.Paint }
%struct.ImagePaintSettings = type { %struct.Paint, i16, i16, i16, i16, [2 x i16], i32, i8*, %struct.Image*, %struct.Image*, %struct.Image*, [3 x float], float }
%struct.ParticleEditSettings = type { i16, i16, i16, i16, [7 x %struct.ParticleBrushData], i8*, float, float, i32, i32, i32, i32, %struct.Scene*, %struct.Object* }
%struct.ParticleBrushData = type { i16, i16, i16, i16, i32, float }
%struct.UnifiedPaintSettings = type { i32, float, float, float, [3 x float], [3 x float], i32, [2 x float], float, i32, i32, i8, [7 x i8], float, [2 x float], i32, float, [2 x float], [2 x float], i32, %struct.ColorSpace*, float, i32 }
%struct.ColorSpace = type opaque
%struct.MeshStatVis = type { i8, [2 x i8], i8, float, float, float, float, i8, [3 x i8], float, float, float, float }
%struct.SceneStats = type opaque
%struct.RenderData = type { %struct.ImageFormatData, %struct.AviCodecData*, %struct.QuicktimeCodecData*, %struct.QuicktimeCodecSettings, %struct.FFMpegCodecData, i32, i32, i32, float, i32, i32, i32, i32, i16, i16, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32, i16, i16, i32, i32, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, %struct.rctf, %struct.rctf, %struct.rcti, %struct.ListBase, i16, i16, float, float, float, float, i32, float, float, float, float, i16, i16, i16, i16, i16, i16, float, float, i16, i16, float, float, [1024 x i8], i32, i16, i16, [768 x i8], [4 x float], [4 x float], i8, i8, i8, [5 x i8], i32, i16, i16, float, float, i16, i16, float, i16, i16, i32, i16, i16, i16, i16, float, float, %struct.Text*, i32, float, [32 x i8], %struct.BakeData, i32, i32 }
%struct.ImageFormatData = type { i8, i8, i8, i8, i8, i8, i8, i8, i16, i16, float, i8, i8, [6 x i8], %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings }
%struct.AviCodecData = type { i8*, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [128 x i8] }
%struct.QuicktimeCodecData = type { i8*, i8*, i32, i32, [128 x i8] }
%struct.QuicktimeCodecSettings = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32, i32 }
%struct.FFMpegCodecData = type { i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, %struct.IDProperty* }
%struct.rcti = type { i32, i32, i32, i32 }
%struct.Text = type opaque
%struct.BakeData = type { %struct.ImageFormatData, [1024 x i8], i16, i16, i16, i16, float, float, [3 x i8], i8, i8, [3 x i8], [64 x i8] }
%struct.AudioData = type { i32, float, float, float, i32, i16, i16, float, float }
%struct.DagForest = type opaque
%struct.GameFraming = type { [3 x float], i8, i8, i8, i8 }
%struct.GameData = type { %struct.GameFraming, i16, i16, i16, i16, i16, i16, i16, i16, i16, [3 x i16], %struct.GameDome, i16, i16, float, %struct.RecastData, float, float, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, float }
%struct.GameDome = type { i16, i16, i16, i16, float, float, %struct.Text* }
%struct.RecastData = type { float, float, float, float, float, float, float, float, float, float, i32, float, float, i16, i16 }
%struct.UnitSettings = type { float, i8, i8, i16 }
%struct.PhysicsSettings = type { [3 x float], i32, i32, i32 }
%struct.MovieClip = type { %struct.ID, %struct.AnimData*, [1024 x i8], i32, i32, [2 x i32], float, float, %struct.anim*, %struct.MovieClipCache*, %struct.bGPdata*, %struct.MovieTracking, i8*, %struct.MovieClipProxy, i32, i32, i32, i32, %struct.ColorManagedColorspaceSettings }
%struct.MovieClipCache = type opaque
%struct.MovieTracking = type { %struct.MovieTrackingSettings, %struct.MovieTrackingCamera, %struct.ListBase, %struct.ListBase, %struct.MovieTrackingReconstruction, %struct.MovieTrackingStabilization, %struct.MovieTrackingTrack*, %struct.MovieTrackingPlaneTrack*, %struct.ListBase, i32, i32, %struct.MovieTrackingStats*, %struct.MovieTrackingDopesheet }
%struct.MovieTrackingSettings = type { i32, i16, i16, float, i16, i16, i16, i16, i16, i16, float, i16, i16, i32, i32, i32, i16, i16, float, i32, i32, float, float, i32 }
%struct.MovieTrackingCamera = type { i8*, i16, i16, float, float, float, i16, i16, [2 x float], float, float, float, float, float }
%struct.MovieTrackingReconstruction = type { i32, float, i32, i32, %struct.MovieReconstructedCamera* }
%struct.MovieReconstructedCamera = type { i32, float, [4 x [4 x float]] }
%struct.MovieTrackingStabilization = type { i32, i32, i32, float, %struct.MovieTrackingTrack*, float, float, float, i32, i32, float }
%struct.MovieTrackingTrack = type { %struct.MovieTrackingTrack*, %struct.MovieTrackingTrack*, [64 x i8], [2 x float], [2 x float], [2 x float], [2 x float], [2 x float], i32, i32, %struct.MovieTrackingMarker*, [3 x float], float, i32, i32, i32, [3 x float], i16, i16, i16, i16, i32, float, %struct.bGPdata*, float, float }
%struct.MovieTrackingMarker = type { [2 x float], [4 x [2 x float]], [2 x float], [2 x float], i32, i32 }
%struct.MovieTrackingPlaneTrack = type { %struct.MovieTrackingPlaneTrack*, %struct.MovieTrackingPlaneTrack*, [64 x i8], %struct.MovieTrackingTrack**, i32, i32, %struct.MovieTrackingPlaneMarker*, i32, i32, %struct.Image*, float, i32 }
%struct.MovieTrackingPlaneMarker = type { [4 x [2 x float]], i32, i32 }
%struct.MovieTrackingStats = type { [256 x i8] }
%struct.MovieTrackingDopesheet = type { i32, i16, i16, %struct.ListBase, %struct.ListBase, i32, i32 }
%struct.MovieClipProxy = type { [768 x i8], i16, i16, i16, i16 }
%struct.ColorManagedViewSettings = type { i32, i32, [64 x i8], [64 x i8], float, float, %struct.CurveMapping*, i8* }
%struct.CurveMapping = type { i32, i32, i32, i32, %struct.rctf, %struct.rctf, [4 x %struct.CurveMap], [3 x float], [3 x float], [3 x float], [3 x float] }
%struct.CurveMap = type { i16, i16, float, float, float, [2 x float], [2 x float], %struct.CurveMapPoint*, %struct.CurveMapPoint*, %struct.CurveMapPoint*, [2 x float], [2 x float] }
%struct.CurveMapPoint = type { float, float, i16, i16 }
%struct.ColorManagedDisplaySettings = type { [64 x i8] }
%struct.ColorManagedColorspaceSettings = type { [64 x i8] }
%struct.RigidBodyWorld = type opaque
%struct.Image = type { %struct.ID, [1024 x i8], %struct.MovieCache*, %struct.GPUTexture*, %struct.anim*, %struct.RenderResult*, [8 x %struct.RenderResult*], i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32*, %struct.PackedFile*, %struct.PreviewImage*, float, i32, i16, i16, i32, i32, i8, i8, i16, [4 x float], float, float, %struct.ColorManagedColorspaceSettings, i8, [7 x i8], [8 x %struct.RenderSlot] }
%struct.MovieCache = type opaque
%struct.GPUTexture = type opaque
%struct.RenderResult = type opaque
%struct.RenderSlot = type { [64 x i8] }
%struct.EnvMap = type { %struct.Object*, %struct.Image*, [6 x %struct.ImBuf*], [4 x [4 x float]], [3 x [3 x float]], i16, i16, float, float, float, i32, i16, i16, i32, i32, i16, i16 }
%struct.ImBuf = type opaque
%struct.PointDensity = type { i16, i16, float, float, i16, i16, i32, i32, %struct.Object*, i32, i16, i16, i8*, float*, float, i16, i16, i16, [3 x i16], float, float, float, float, %struct.ColorBand*, %struct.CurveMapping* }
%struct.VoxelData = type { [3 x i32], i32, i16, i16, i16, i16, i16, i16, i32, %struct.Object*, float, i32, [1024 x i8], float*, i32, i32 }
%struct.OceanTex = type { %struct.Object*, [64 x i8], i32, i32 }
%struct.bNodeTree = type { %struct.ID, %struct.AnimData*, %struct.bNodeTreeType*, [64 x i8], %struct.StructRNA*, %struct.bGPdata*, [2 x float], %struct.ListBase, %struct.ListBase, i32, i32, i32, i32, i32, i16, i16, i32, i32, i16, i16, i32, %struct.rctf, %struct.ListBase, %struct.ListBase, %struct.bNodeInstanceHash*, %struct.bNodeInstanceKey, i32, %struct.bNodeTreeExec*, void (i8*, float)*, void (i8*, i8*)*, i32 (i8*)*, void (i8*)*, i8*, i8*, i8*, i8* }
%struct.bNodeTreeType = type { i32, [64 x i8], [64 x i8], [256 x i8], i32, void (%struct.bNodeTree*)*, void (%struct.bNodeTree*, %struct.bNode*)*, void (%struct.Scene*, i8*, void (i8*, i32, i8*)*)*, i32 (%struct.bContext*, %struct.bNodeTreeType*)*, void (%struct.bContext*, %struct.bNodeTreeType*, %struct.bNodeTree**, %struct.ID**, %struct.ID**)*, void (%struct.bNodeTree*, %struct.bNodeTree*)*, void (%struct.bNodeTree*, %struct.bNodeTree*)*, void (%struct.bNodeTree*, %struct.bNodeTree*)*, void (%struct.bNodeTree*)*, i32 (%struct.bNodeTree*, %struct.bNodeLink*)*, void (%struct.bNodeTree*, %struct.bNode*)*, %struct.ExtensionRNA }
%struct.bContext = type opaque
%struct.bNodeLink = type { %struct.bNodeLink*, %struct.bNodeLink*, %struct.bNode*, %struct.bNode*, %struct.bNodeSocket*, %struct.bNodeSocket*, i32, i32 }
%struct.bNode = type { %struct.bNode*, %struct.bNode*, %struct.bNode*, %struct.IDProperty*, %struct.bNodeType*, [64 x i8], [64 x i8], i32, i16, i16, i16, i16, i16, i16, i16, i16, [3 x float], %struct.ListBase, %struct.ListBase, %struct.bNode*, %struct.ID*, i8*, %struct.bNode*, %struct.ListBase, float, float, float, float, float, float, float, i32, [64 x i8], i16, i16, float, float, i16, i16, i8*, %struct.rctf, %struct.rctf, %struct.rctf, i16, i16, i32, %struct.uiBlock* }
%struct.bNodeType = type { i8*, i8*, i16, [64 x i8], i32, [64 x i8], [256 x i8], i32, float, float, float, float, float, float, i16, i16, i16, %struct.bNodeSocketTemplate*, %struct.bNodeSocketTemplate*, [64 x i8], void (%struct.bContext*, %struct.ARegion*, %struct.SpaceNode*, %struct.bNodeTree*, %struct.bNode*, i32)*, void (%struct.bContext*, %struct.bNodeTree*, %struct.bNode*)*, void (%struct.uiLayout*, %struct.bContext*, %struct.PointerRNA*)*, void (%struct.uiLayout*, %struct.bContext*, %struct.PointerRNA*)*, void (%struct.SpaceNode*, %struct.ImBuf*, %struct.bNode*, i32, i32)*, void (%struct.bNodeTree*, %struct.bNode*, i8*, i32)*, i32 (%struct.bNode*, i32, i32)*, i32 (%struct.bNode*, i32, i32)*, i32 (%struct.bNode*, i32, i32)*, {}*, void (%struct.bNodeTree*, %struct.bNode*, %struct.ID*)*, {}*, void (%struct.bNode*)*, void (%struct.bNodeTree*, %struct.bNode*, %struct.bNode*)*, void (%struct.bContext*, %struct.PointerRNA*)*, void (%struct.PointerRNA*)*, void (%struct.PointerRNA*, %struct.bNode*)*, i32 (%struct.bNodeType*, %struct.bNodeTree*)*, i32 (%struct.bNode*, %struct.bNodeTree*)*, {}*, i8* (%struct.bNodeExecContext*, %struct.bNode*, i32)*, void (i8*)*, void (i8*, i32, %struct.bNode*, %struct.bNodeExecData*, %struct.bNodeStack**, %struct.bNodeStack**)*, i32 (%struct.GPUMaterial*, %struct.bNode*, %struct.bNodeExecData*, %struct.GPUNodeStack*, %struct.GPUNodeStack*)*, %struct.ExtensionRNA }
%struct.bNodeSocketTemplate = type { i32, i32, [64 x i8], float, float, float, float, float, float, i32, i32, %struct.bNodeSocket*, [64 x i8] }
%struct.ARegion = type { %struct.ARegion*, %struct.ARegion*, %struct.View2D, %struct.rcti, %struct.rcti, i16, i16, i16, i16, i16, i16, float, i16, i16, i16, i16, i16, i16, i16, i16, %struct.ARegionType*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.wmTimer*, i8*, i8* }
%struct.View2D = type { %struct.rctf, %struct.rctf, %struct.rcti, %struct.rcti, %struct.rcti, [2 x float], [2 x float], float, float, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float*, i32, i32, %struct.SmoothView2DStore*, %struct.wmTimer* }
%struct.SmoothView2DStore = type opaque
%struct.ARegionType = type opaque
%struct.wmTimer = type { %struct.wmTimer*, %struct.wmTimer*, %struct.wmWindow*, double, i32, i8*, double, double, double, double, double, i32 }
%struct.wmWindow = type { %struct.wmWindow*, %struct.wmWindow*, i8*, %struct.bScreen*, %struct.bScreen*, [64 x i8], i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i32, i16, i16, %struct.wmEvent*, %struct.wmSubWindow*, %struct.wmGesture*, i32, i32, i8*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase }
%struct.bScreen = type { %struct.ID, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.Scene*, %struct.Scene*, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, %struct.wmTimer*, i8* }
%struct.wmEvent = type { %struct.wmEvent*, %struct.wmEvent*, i16, i16, i32, i32, [2 x i32], [6 x i8], i8, i8, i16, i16, i32, i32, double, i32, i32, i16, i16, i16, i16, i16, i16, i8*, %struct.wmTabletData*, i16, i16, i32, i8* }
%struct.wmTabletData = type { i32, float, float, float }
%struct.wmSubWindow = type opaque
%struct.wmGesture = type { %struct.wmGesture*, %struct.wmGesture*, i32, i32, i32, i32, i32, i32, i8*, i8* }
%struct.SpaceNode = type { %struct.SpaceLink*, %struct.SpaceLink*, %struct.ListBase, i32, float, [8 x i16], %struct.View2D, %struct.ID*, %struct.ID*, i16, i16, float, float, float, float, float, [2 x float], %struct.ListBase, %struct.bNodeTree*, %struct.bNodeTree*, [64 x i8], i32, i32, i16, i16, i16, i16, %struct.ListBase, %struct.bGPdata* }
%struct.SpaceLink = type { %struct.SpaceLink*, %struct.SpaceLink*, %struct.ListBase, i32, float, [8 x i16] }
%struct.uiLayout = type opaque
%struct.PointerRNA = type { %struct.anon, %struct.StructRNA*, i8* }
%struct.anon = type { i8* }
%struct.bNodeExecContext = type opaque
%struct.bNodeExecData = type opaque
%struct.bNodeStack = type { [4 x float], float, float, i8*, i16, i16, i16, i16, i16, i16, [2 x i16] }
%struct.GPUMaterial = type opaque
%struct.GPUNodeStack = type opaque
%struct.uiBlock = type opaque
%struct.bNodeSocket = type { %struct.bNodeSocket*, %struct.bNodeSocket*, %struct.bNodeSocket*, %struct.IDProperty*, [64 x i8], [64 x i8], i8*, i16, i16, i16, i16, %struct.bNodeSocketType*, [64 x i8], float, float, i8*, i16, i16, i32, i8*, i32, i32, %struct.bNodeSocket*, %struct.bNodeLink*, %struct.bNodeStack }
%struct.bNodeSocketType = type { [64 x i8], void (%struct.bContext*, %struct.uiLayout*, %struct.PointerRNA*, %struct.PointerRNA*, i8*)*, void (%struct.bContext*, %struct.PointerRNA*, %struct.PointerRNA*, float*)*, void (%struct.bContext*, %struct.uiLayout*, %struct.PointerRNA*)*, void (%struct.bContext*, %struct.PointerRNA*, float*)*, void (%struct.bNodeTree*, %struct.bNodeSocket*, %struct.StructRNA*)*, void (%struct.bNodeTree*, %struct.bNodeSocket*, %struct.bNode*, %struct.bNodeSocket*, i8*)*, void (%struct.bNodeTree*, %struct.bNodeSocket*, %struct.bNode*, %struct.bNodeSocket*, i8*)*, void (%struct.bNodeTree*, %struct.bNodeSocket*, %struct.bNode*, %struct.bNodeSocket*)*, %struct.ExtensionRNA, %struct.ExtensionRNA, i32, i32 }
%struct.ExtensionRNA = type { i8*, %struct.StructRNA*, i32 (%struct.bContext*, %struct.PointerRNA*, %struct.FunctionRNA*, %struct.ParameterList*)*, void (i8*)* }
%struct.FunctionRNA = type opaque
%struct.ParameterList = type { i8*, %struct.FunctionRNA*, i32, i32, i32 }
%struct.bNodeInstanceHash = type { %struct.GHash* }
%struct.bNodeInstanceKey = type { i32 }
%struct.bNodeTreeExec = type opaque
%struct.PreviewImage = type { [2 x i32], [2 x i32], [2 x i16], [2 x i16], [2 x i32*], [2 x %struct.GPUTexture*] }
%struct.TexPaintSlot = type { %struct.Image*, i8*, i32, i32 }
%struct.BulletSoftBody = type opaque
%struct.PartDeflect = type opaque
%struct.SoftBody = type opaque
%struct.Group = type opaque
%struct.FluidsimSettings = type opaque
%struct.CurveCache = type opaque
%struct.DerivedMesh = type opaque
%struct.RigidBodyOb = type opaque
%struct.RigidBodyCon = type opaque
%struct.ListBase = type { i8*, i8* }
%struct.LodLevel = type { %struct.LodLevel*, %struct.LodLevel*, %struct.Object*, i32, float }
%struct.BMEditMesh = type { %struct.BMesh*, %struct.BMEditMesh*, i32, [3 x %struct.BMLoop*]*, i32, %struct.DerivedMesh*, %struct.DerivedMesh*, i64, [4 x i8]*, i32, [4 x i8]*, i32, i16, i16, %struct.Object*, i32 }
%struct.BMesh = type { i32, i32, i32, i32, i32, i32, i32, i8, i8, %struct.BLI_mempool*, %struct.BLI_mempool*, %struct.BLI_mempool*, %struct.BLI_mempool*, %struct.BMVert**, %struct.BMEdge**, %struct.BMFace**, i32, i32, i32, %struct.BLI_mempool*, %struct.BLI_mempool*, %struct.BLI_mempool*, i32, %struct.BMOperator*, %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, i16, i32, i32, i32, %struct.ListBase, %struct.BMFace*, %struct.ListBase, i8* }
%struct.BMVert = type { %struct.BMHeader, %struct.BMFlagLayer*, [3 x float], [3 x float], %struct.BMEdge* }
%struct.BMHeader = type { i8*, i32, i8, i8, i8 }
%struct.BMFlagLayer = type { i16 }
%struct.BMEdge = type { %struct.BMHeader, %struct.BMFlagLayer*, %struct.BMVert*, %struct.BMVert*, %struct.BMLoop*, %struct.BMDiskLink, %struct.BMDiskLink }
%struct.BMLoop = type { %struct.BMHeader, %struct.BMVert*, %struct.BMEdge*, %struct.BMFace*, %struct.BMLoop*, %struct.BMLoop*, %struct.BMLoop*, %struct.BMLoop* }
%struct.BMDiskLink = type { %struct.BMEdge*, %struct.BMEdge* }
%struct.BLI_mempool = type opaque
%struct.BMOperator = type { [16 x %struct.BMOpSlot], [16 x %struct.BMOpSlot], void (%struct.BMesh*, %struct.BMOperator*)*, %struct.MemArena*, i32, i32, i32 }
%struct.BMOpSlot = type { i8*, i32, %union.eBMOpSlotSubType_Union, i32, %union.anon }
%union.eBMOpSlotSubType_Union = type { i32 }
%union.anon = type { i8*, [8 x i8] }
%struct.MemArena = type opaque
%struct.CustomData = type { %struct.CustomDataLayer*, [41 x i32], i32, i32, i32, %struct.BLI_mempool*, %struct.CustomDataExternal* }
%struct.CustomDataLayer = type { i32, i32, i32, i32, i32, i32, i32, i32, [64 x i8], i8* }
%struct.CustomDataExternal = type { [1024 x i8] }
%struct.BMFace = type { %struct.BMHeader, %struct.BMFlagLayer*, %struct.BMLoop*, i32, [3 x float], i16 }
%struct.Main = type { %struct.Main*, %struct.Main*, [1024 x i8], i16, i16, i16, i16, i64, [16 x i8], i16, %struct.Library*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, [256 x i8], %struct.EvaluationContext*, %struct.MainLock* }
%struct.EvaluationContext = type { i32 }
%struct.MainLock = type opaque
%struct.BMIter = type { %union.anon.0, void (i8*)*, i8* (i8*)*, i32, i8 }
%union.anon.0 = type { %struct.BMIter__face_of_vert }
%struct.BMIter__face_of_vert = type { %struct.BMVert*, %struct.BMLoop*, %struct.BMLoop*, %struct.BMEdge*, %struct.BMEdge* }
%struct.MTexPoly = type { %struct.Image*, i8, i8, i16, i16, i16 }
%struct.Mesh = type { %struct.ID, %struct.AnimData*, %struct.BoundBox*, %struct.Ipo*, %struct.Key*, %struct.Material**, %struct.MSelect*, %struct.MPoly*, %struct.MTexPoly*, %struct.MLoop*, %struct.MLoopUV*, %struct.MLoopCol*, %struct.MFace*, %struct.MTFace*, %struct.TFace*, %struct.MVert*, %struct.MEdge*, %struct.MDeformVert*, %struct.MCol*, %struct.Mesh*, %struct.BMEditMesh*, %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, i32, i32, i32, i32, i32, i32, i32, [3 x float], [3 x float], [3 x float], i32, i16, i16, float, i32, i8, i8, i8, i8, i8, i8, i16, %struct.Multires* }
%struct.Key = type opaque
%struct.MSelect = type { i32, i32 }
%struct.MPoly = type { i32, i32, i16, i8, i8 }
%struct.MLoop = type { i32, i32 }
%struct.MLoopUV = type { [2 x float], i32 }
%struct.MLoopCol = type { i8, i8, i8, i8 }
%struct.MFace = type { i32, i32, i32, i32, i16, i8, i8 }
%struct.MTFace = type { [4 x [2 x float]], %struct.Image*, i8, i8, i16, i16, i16 }
%struct.TFace = type { i8*, [4 x [2 x float]], [4 x i32], i8, i8, i16, i16, i16 }
%struct.MVert = type { [3 x float], [3 x i16], i8, i8 }
%struct.MEdge = type { i32, i32, i8, i8, i16 }
%struct.MCol = type { i8, i8, i8, i8 }
%struct.Multires = type { %struct.ListBase, %struct.MVert*, i8, i8, i8, i8, i8, i8, i8, i8, %struct.CustomData, %struct.CustomData, i16*, i8* }
%struct.BMElem = type { %struct.BMHeader }
%struct.SpaceImage = type { %struct.SpaceLink*, %struct.SpaceLink*, %struct.ListBase, i32, i32, %struct.Image*, %struct.ImageUser, %struct.CurveMapping*, %struct.Scopes, %struct.Histogram, %struct.bGPdata*, [2 x float], float, float, float, float, float, i8, i8, i16, i16, i16, i8, i8, i8, i8, %struct.MaskSpaceInfo }
%struct.Scopes = type { i32, i32, i32, float, i32, float, float, i32, float, i32, [3 x [2 x float]], %struct.Histogram, float*, float*, float*, float*, i32, i32 }
%struct.Histogram = type { i32, i32, [256 x float], [256 x float], [256 x float], [256 x float], [256 x float], float, float, i16, i16, i32, [2 x [2 x float]] }
%struct.MaskSpaceInfo = type { %struct.Mask*, i8, i8, i8, [5 x i8] }
%struct.NearestHit = type { %struct.BMFace*, %struct.MTexPoly*, %struct.BMLoop*, %struct.MLoopUV*, %struct.MLoopUV*, i32 }
%struct.wmOperatorType = type { i8*, i8*, i8*, i8*, i32 (%struct.bContext*, %struct.wmOperator*)*, i8 (%struct.bContext*, %struct.wmOperator*)*, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)*, void (%struct.bContext*, %struct.wmOperator*)*, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)*, i32 (%struct.bContext*)*, void (%struct.bContext*, %struct.wmOperator*)*, %struct.StructRNA*, %struct.IDProperty*, %struct.PropertyRNA*, %struct.ListBase, %struct.wmKeyMap*, i8*, i32 (%struct.bContext*, %struct.wmOperatorType*)*, %struct.ExtensionRNA, i16 }
%struct.wmOperator = type { %struct.wmOperator*, %struct.wmOperator*, [64 x i8], %struct.IDProperty*, %struct.wmOperatorType*, i8*, i8*, %struct.PointerRNA*, %struct.ReportList*, %struct.ListBase, %struct.wmOperator*, %struct.uiLayout*, i16, [3 x i16] }
%struct.ReportList = type { %struct.ListBase, i32, i32, i32, i32, %struct.wmTimer* }
%struct.PropertyRNA = type opaque
%struct.wmKeyMap = type { %struct.wmKeyMap*, %struct.wmKeyMap*, %struct.ListBase, %struct.ListBase, [64 x i8], i16, i16, i16, i16, i32 (%struct.bContext*)*, i8* }
%struct.wmKeyConfig = type { %struct.wmKeyConfig*, %struct.wmKeyConfig*, [64 x i8], [64 x i8], %struct.ListBase, i32, i32 }
%struct.wmKeyMapItem = type { %struct.wmKeyMapItem*, %struct.wmKeyMapItem*, [64 x i8], %struct.IDProperty*, [64 x i8], i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, %struct.PointerRNA* }
%struct.BMIter__elem_of_mesh = type { %struct.BLI_mempool_iter }
%struct.BLI_mempool_iter = type { %struct.BLI_mempool*, %struct.BLI_mempool_chunk*, i32 }
%struct.BLI_mempool_chunk = type opaque
%struct.BMIter__edge_of_vert = type { %struct.BMVert*, %struct.BMEdge*, %struct.BMEdge* }
%struct.BMIter__loop_of_vert = type { %struct.BMVert*, %struct.BMLoop*, %struct.BMLoop*, %struct.BMEdge*, %struct.BMEdge* }
%struct.BMIter__vert_of_edge = type { %struct.BMEdge* }
%struct.BMIter__face_of_edge = type { %struct.BMEdge*, %struct.BMLoop*, %struct.BMLoop* }
%struct.BMIter__vert_of_face = type { %struct.BMFace*, %struct.BMLoop*, %struct.BMLoop* }
%struct.BMIter__edge_of_face = type { %struct.BMFace*, %struct.BMLoop*, %struct.BMLoop* }
%struct.BMIter__loop_of_face = type { %struct.BMFace*, %struct.BMLoop*, %struct.BMLoop* }
%struct.BMIter__loop_of_loop = type { %struct.BMLoop*, %struct.BMLoop*, %struct.BMLoop* }
%struct.BMIter__loop_of_edge = type { %struct.BMEdge*, %struct.BMLoop*, %struct.BMLoop* }
%struct.UvVertMap = type { %struct.UvMapVert**, %struct.UvMapVert* }
%struct.UvMapVert = type { %struct.UvMapVert*, i32, i8, i8, i8 }
%struct.UVvert = type { %struct.MLoopUV*, i8 }

@.str = private unnamed_addr constant [10 x i8] c"UV Editor\00", align 1
@.str.1 = private unnamed_addr constant [21 x i8] c"WM_OT_context_toggle\00", align 1
@.str.2 = private unnamed_addr constant [10 x i8] c"data_path\00", align 1
@.str.3 = private unnamed_addr constant [28 x i8] c"tool_settings.use_uv_sculpt\00", align 1
@.str.4 = private unnamed_addr constant [16 x i8] c"UV_OT_mark_seam\00", align 1
@.str.5 = private unnamed_addr constant [13 x i8] c"UV_OT_select\00", align 1
@.str.6 = private unnamed_addr constant [7 x i8] c"extend\00", align 1
@.str.7 = private unnamed_addr constant [18 x i8] c"UV_OT_select_loop\00", align 1
@.str.8 = private unnamed_addr constant [19 x i8] c"UV_OT_select_split\00", align 1
@.str.9 = private unnamed_addr constant [20 x i8] c"UV_OT_select_border\00", align 1
@.str.10 = private unnamed_addr constant [7 x i8] c"pinned\00", align 1
@.str.11 = private unnamed_addr constant [20 x i8] c"UV_OT_circle_select\00", align 1
@.str.12 = private unnamed_addr constant [19 x i8] c"UV_OT_select_lasso\00", align 1
@.str.13 = private unnamed_addr constant [9 x i8] c"deselect\00", align 1
@.str.14 = private unnamed_addr constant [20 x i8] c"UV_OT_select_linked\00", align 1
@.str.15 = private unnamed_addr constant [25 x i8] c"UV_OT_select_linked_pick\00", align 1
@.str.16 = private unnamed_addr constant [18 x i8] c"UV_OT_select_more\00", align 1
@.str.17 = private unnamed_addr constant [18 x i8] c"UV_OT_select_less\00", align 1
@.str.18 = private unnamed_addr constant [17 x i8] c"UV_OT_select_all\00", align 1
@.str.19 = private unnamed_addr constant [7 x i8] c"action\00", align 1
@.str.20 = private unnamed_addr constant [20 x i8] c"UV_OT_select_pinned\00", align 1
@.str.21 = private unnamed_addr constant [23 x i8] c"IMAGE_MT_uvs_weldalign\00", align 1
@.str.22 = private unnamed_addr constant [13 x i8] c"UV_OT_stitch\00", align 1
@.str.23 = private unnamed_addr constant [10 x i8] c"UV_OT_pin\00", align 1
@.str.24 = private unnamed_addr constant [6 x i8] c"clear\00", align 1
@.str.25 = private unnamed_addr constant [13 x i8] c"UV_OT_unwrap\00", align 1
@.str.26 = private unnamed_addr constant [23 x i8] c"UV_OT_minimize_stretch\00", align 1
@.str.27 = private unnamed_addr constant [19 x i8] c"UV_OT_pack_islands\00", align 1
@.str.28 = private unnamed_addr constant [28 x i8] c"UV_OT_average_islands_scale\00", align 1
@.str.29 = private unnamed_addr constant [11 x i8] c"UV_OT_hide\00", align 1
@.str.30 = private unnamed_addr constant [11 x i8] c"unselected\00", align 1
@.str.31 = private unnamed_addr constant [13 x i8] c"UV_OT_reveal\00", align 1
@.str.32 = private unnamed_addr constant [17 x i8] c"UV_OT_cursor_set\00", align 1
@.str.33 = private unnamed_addr constant [15 x i8] c"UV_OT_tile_set\00", align 1
@.str.34 = private unnamed_addr constant [18 x i8] c"IMAGE_MT_uvs_snap\00", align 1
@.str.35 = private unnamed_addr constant [25 x i8] c"IMAGE_MT_uvs_select_mode\00", align 1
@.str.36 = private unnamed_addr constant [15 x i8] c"(De)select All\00", align 1
@.str.37 = private unnamed_addr constant [36 x i8] c"Change selection of all UV vertices\00", align 1
@.str.38 = private unnamed_addr constant [7 x i8] c"Select\00", align 1
@.str.39 = private unnamed_addr constant [19 x i8] c"Select UV vertices\00", align 1
@.str.40 = private unnamed_addr constant [7 x i8] c"Extend\00", align 1
@.str.41 = private unnamed_addr constant [61 x i8] c"Extend selection rather than clearing the existing selection\00", align 1
@.str.42 = private unnamed_addr constant [9 x i8] c"location\00", align 1
@.str.43 = private unnamed_addr constant [9 x i8] c"Location\00", align 1
@.str.44 = private unnamed_addr constant [80 x i8] c"Mouse location in normalized coordinates, 0.0 to 1.0 is within the image bounds\00", align 1
@MEM_mallocN = external dso_local global i8* (i64, i8*)*, align 8
@.str.45 = private unnamed_addr constant [12 x i8] c"UvLinkStack\00", align 1
@MEM_callocN = external dso_local global i8* (i64, i8*)*, align 8
@.str.46 = private unnamed_addr constant [11 x i8] c"UvLinkFlag\00", align 1
@MEM_freeN = external dso_local global void (i8*)*, align 8
@.str.47 = private unnamed_addr constant [12 x i8] c"Loop Select\00", align 1
@.str.48 = private unnamed_addr constant [39 x i8] c"Select a loop of connected UV vertices\00", align 1
@.str.49 = private unnamed_addr constant [14 x i8] c"Select Linked\00", align 1
@.str.50 = private unnamed_addr constant [51 x i8] c"Select all UV vertices linked to the active UV map\00", align 1
@.str.51 = private unnamed_addr constant [52 x i8] c"Cannot select linked when sync selection is enabled\00", align 1
@.str.52 = private unnamed_addr constant [19 x i8] c"Select Linked Pick\00", align 1
@.str.53 = private unnamed_addr constant [46 x i8] c"Select all UV vertices linked under the mouse\00", align 1
@.str.54 = private unnamed_addr constant [13 x i8] c"Select Split\00", align 1
@.str.55 = private unnamed_addr constant [36 x i8] c"Select only entirely selected faces\00", align 1
@.str.56 = private unnamed_addr constant [54 x i8] c"Cannot split selection when sync selection is enabled\00", align 1
@.str.57 = private unnamed_addr constant [16 x i8] c"Selected Pinned\00", align 1
@.str.58 = private unnamed_addr constant [30 x i8] c"Select all pinned UV vertices\00", align 1
@.str.59 = private unnamed_addr constant [14 x i8] c"Border Select\00", align 1
@.str.60 = private unnamed_addr constant [42 x i8] c"Select UV vertices using border selection\00", align 1
@.str.61 = private unnamed_addr constant [7 x i8] c"Pinned\00", align 1
@.str.62 = private unnamed_addr constant [30 x i8] c"Border select pinned UVs only\00", align 1
@.str.63 = private unnamed_addr constant [13 x i8] c"gesture_mode\00", align 1
@.str.64 = private unnamed_addr constant [16 x i8] c"Lasso Select UV\00", align 1
@.str.65 = private unnamed_addr constant [33 x i8] c"Select UVs using lasso selection\00", align 1
@.str.66 = private unnamed_addr constant [5 x i8] c"path\00", align 1
@RNA_OperatorMousePath = external dso_local global %struct.StructRNA, align 1
@.str.67 = private unnamed_addr constant [5 x i8] c"Path\00", align 1
@.str.68 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.69 = private unnamed_addr constant [9 x i8] c"Deselect\00", align 1
@.str.70 = private unnamed_addr constant [34 x i8] c"Deselect rather than select items\00", align 1
@.str.71 = private unnamed_addr constant [57 x i8] c"Extend selection instead of deselecting everything first\00", align 1
@.str.72 = private unnamed_addr constant [14 x i8] c"Circle Select\00", align 1
@.str.73 = private unnamed_addr constant [42 x i8] c"Select UV vertices using circle selection\00", align 1
@.str.74 = private unnamed_addr constant [2 x i8] c"x\00", align 1
@.str.75 = private unnamed_addr constant [2 x i8] c"X\00", align 1
@.str.76 = private unnamed_addr constant [2 x i8] c"y\00", align 1
@.str.77 = private unnamed_addr constant [2 x i8] c"Y\00", align 1
@.str.78 = private unnamed_addr constant [7 x i8] c"radius\00", align 1
@.str.79 = private unnamed_addr constant [7 x i8] c"Radius\00", align 1
@.str.80 = private unnamed_addr constant [13 x i8] c"Gesture Mode\00", align 1
@.str.81 = private unnamed_addr constant [12 x i8] c"Select More\00", align 1
@.str.82 = private unnamed_addr constant [55 x i8] c"Select more UV vertices connected to initial selection\00", align 1
@.str.83 = private unnamed_addr constant [12 x i8] c"Select Less\00", align 1
@.str.84 = private unnamed_addr constant [62 x i8] c"Deselect UV vertices at the boundary of each selection region\00", align 1
@UV_OT_snap_cursor.target_items = internal global [3 x %struct.EnumPropertyItem] [%struct.EnumPropertyItem { i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.85, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.86, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.68, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.87, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.88, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.68, i32 0, i32 0) }, %struct.EnumPropertyItem zeroinitializer], align 16, !dbg !0
@.str.85 = private unnamed_addr constant [7 x i8] c"PIXELS\00", align 1
@.str.86 = private unnamed_addr constant [7 x i8] c"Pixels\00", align 1
@.str.87 = private unnamed_addr constant [9 x i8] c"SELECTED\00", align 1
@.str.88 = private unnamed_addr constant [9 x i8] c"Selected\00", align 1
@.str.89 = private unnamed_addr constant [12 x i8] c"Snap Cursor\00", align 1
@.str.90 = private unnamed_addr constant [27 x i8] c"Snap cursor to target type\00", align 1
@.str.91 = private unnamed_addr constant [18 x i8] c"UV_OT_snap_cursor\00", align 1
@.str.92 = private unnamed_addr constant [7 x i8] c"target\00", align 1
@.str.93 = private unnamed_addr constant [7 x i8] c"Target\00", align 1
@.str.94 = private unnamed_addr constant [35 x i8] c"Target to snap the selected UVs to\00", align 1
@UV_OT_snap_selected.target_items = internal global [5 x %struct.EnumPropertyItem] [%struct.EnumPropertyItem { i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.85, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.86, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.68, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.95, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.96, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.68, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 2, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.97, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.98, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.68, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 3, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.99, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.100, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.68, i32 0, i32 0) }, %struct.EnumPropertyItem zeroinitializer], align 16, !dbg !3563
@.str.95 = private unnamed_addr constant [7 x i8] c"CURSOR\00", align 1
@.str.96 = private unnamed_addr constant [7 x i8] c"Cursor\00", align 1
@.str.97 = private unnamed_addr constant [14 x i8] c"CURSOR_OFFSET\00", align 1
@.str.98 = private unnamed_addr constant [16 x i8] c"Cursor (Offset)\00", align 1
@.str.99 = private unnamed_addr constant [20 x i8] c"ADJACENT_UNSELECTED\00", align 1
@.str.100 = private unnamed_addr constant [20 x i8] c"Adjacent Unselected\00", align 1
@.str.101 = private unnamed_addr constant [15 x i8] c"Snap Selection\00", align 1
@.str.102 = private unnamed_addr constant [41 x i8] c"Snap selected UV vertices to target type\00", align 1
@.str.103 = private unnamed_addr constant [20 x i8] c"UV_OT_snap_selected\00", align 1
@UV_OT_align.axis_items = internal global [7 x %struct.EnumPropertyItem] [%struct.EnumPropertyItem { i32 115, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.104, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.105, i32 0, i32 0), i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.106, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 116, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.107, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.108, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.109, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 117, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.110, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.111, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.112, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 97, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.113, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.114, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.115, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 120, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.116, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.117, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.118, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 121, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.119, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.120, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.121, i32 0, i32 0) }, %struct.EnumPropertyItem zeroinitializer], align 16, !dbg !3576
@.str.104 = private unnamed_addr constant [8 x i8] c"ALIGN_S\00", align 1
@.str.105 = private unnamed_addr constant [11 x i8] c"Straighten\00", align 1
@.str.106 = private unnamed_addr constant [50 x i8] c"Align UVs along the line defined by the endpoints\00", align 1
@.str.107 = private unnamed_addr constant [8 x i8] c"ALIGN_T\00", align 1
@.str.108 = private unnamed_addr constant [13 x i8] c"Straighten X\00", align 1
@.str.109 = private unnamed_addr constant [67 x i8] c"Align UVs along the line defined by the endpoints along the X axis\00", align 1
@.str.110 = private unnamed_addr constant [8 x i8] c"ALIGN_U\00", align 1
@.str.111 = private unnamed_addr constant [13 x i8] c"Straighten Y\00", align 1
@.str.112 = private unnamed_addr constant [67 x i8] c"Align UVs along the line defined by the endpoints along the Y axis\00", align 1
@.str.113 = private unnamed_addr constant [11 x i8] c"ALIGN_AUTO\00", align 1
@.str.114 = private unnamed_addr constant [11 x i8] c"Align Auto\00", align 1
@.str.115 = private unnamed_addr constant [71 x i8] c"Automatically choose the axis on which there is most alignment already\00", align 1
@.str.116 = private unnamed_addr constant [8 x i8] c"ALIGN_X\00", align 1
@.str.117 = private unnamed_addr constant [8 x i8] c"Align X\00", align 1
@.str.118 = private unnamed_addr constant [20 x i8] c"Align UVs on X axis\00", align 1
@.str.119 = private unnamed_addr constant [8 x i8] c"ALIGN_Y\00", align 1
@.str.120 = private unnamed_addr constant [8 x i8] c"Align Y\00", align 1
@.str.121 = private unnamed_addr constant [20 x i8] c"Align UVs on Y axis\00", align 1
@.str.122 = private unnamed_addr constant [6 x i8] c"Align\00", align 1
@.str.123 = private unnamed_addr constant [38 x i8] c"Align selected UV vertices to an axis\00", align 1
@.str.124 = private unnamed_addr constant [12 x i8] c"UV_OT_align\00", align 1
@.str.125 = private unnamed_addr constant [5 x i8] c"axis\00", align 1
@.str.126 = private unnamed_addr constant [5 x i8] c"Axis\00", align 1
@.str.127 = private unnamed_addr constant [30 x i8] c"Axis to align UV locations on\00", align 1
@MEM_allocN_len = external dso_local global i64 (i8*)*, align 8
@.str.128 = private unnamed_addr constant [19 x i8] c"BLI_array.eve_line\00", align 1
@.str.129 = private unnamed_addr constant [19 x i8] c"Seams From Islands\00", align 1
@.str.130 = private unnamed_addr constant [58 x i8] c"Set mesh seams according to island setup in the UV editor\00", align 1
@.str.131 = private unnamed_addr constant [25 x i8] c"UV_OT_seams_from_islands\00", align 1
@.str.132 = private unnamed_addr constant [11 x i8] c"mark_seams\00", align 1
@.str.133 = private unnamed_addr constant [11 x i8] c"Mark Seams\00", align 1
@.str.134 = private unnamed_addr constant [29 x i8] c"Mark boundary edges as seams\00", align 1
@.str.135 = private unnamed_addr constant [11 x i8] c"mark_sharp\00", align 1
@.str.136 = private unnamed_addr constant [11 x i8] c"Mark Sharp\00", align 1
@.str.137 = private unnamed_addr constant [29 x i8] c"Mark boundary edges as sharp\00", align 1
@__const.uv_seams_from_islands_exec.limit = private unnamed_addr constant [2 x float] [float 0x3F1A36E2E0000000, float 0x3F1A36E2E0000000], align 4
@.str.138 = private unnamed_addr constant [32 x i8] c"Mark selected UV edges as seams\00", align 1
@.str.139 = private unnamed_addr constant [5 x i8] c"Weld\00", align 1
@.str.140 = private unnamed_addr constant [35 x i8] c"Weld selected UV vertices together\00", align 1
@.str.141 = private unnamed_addr constant [11 x i8] c"UV_OT_weld\00", align 1
@.str.142 = private unnamed_addr constant [18 x i8] c"Remove Doubles UV\00", align 1
@.str.143 = private unnamed_addr constant [80 x i8] c"Selected UV vertices that are within a radius of each other are welded together\00", align 1
@.str.144 = private unnamed_addr constant [21 x i8] c"UV_OT_remove_doubles\00", align 1
@.str.145 = private unnamed_addr constant [10 x i8] c"threshold\00", align 1
@.str.146 = private unnamed_addr constant [15 x i8] c"Merge Distance\00", align 1
@.str.147 = private unnamed_addr constant [41 x i8] c"Maximum distance between welded vertices\00", align 1
@.str.148 = private unnamed_addr constant [15 x i8] c"use_unselected\00", align 1
@.str.149 = private unnamed_addr constant [11 x i8] c"Unselected\00", align 1
@.str.150 = private unnamed_addr constant [44 x i8] c"Merge selected to other unselected vertices\00", align 1
@.str.151 = private unnamed_addr constant [19 x i8] c"BLI_array.vert_arr\00", align 1
@.str.152 = private unnamed_addr constant [19 x i8] c"BLI_array.loop_arr\00", align 1
@.str.153 = private unnamed_addr constant [30 x i8] c"BLI_array.loop_arr_unselected\00", align 1
@.str.154 = private unnamed_addr constant [4 x i8] c"Pin\00", align 1
@.str.155 = private unnamed_addr constant [78 x i8] c"Set/clear selected UV vertices as anchored between multiple unwrap operations\00", align 1
@.str.156 = private unnamed_addr constant [6 x i8] c"Clear\00", align 1
@.str.157 = private unnamed_addr constant [54 x i8] c"Clear pinning for the selection instead of setting it\00", align 1
@.str.158 = private unnamed_addr constant [14 x i8] c"Reveal Hidden\00", align 1
@.str.159 = private unnamed_addr constant [30 x i8] c"Reveal all hidden UV vertices\00", align 1
@.str.160 = private unnamed_addr constant [14 x i8] c"Hide Selected\00", align 1
@.str.161 = private unnamed_addr constant [30 x i8] c"Hide (un)selected UV vertices\00", align 1
@.str.162 = private unnamed_addr constant [37 x i8] c"Hide unselected rather than selected\00", align 1
@.str.163 = private unnamed_addr constant [14 x i8] c"Set 2D Cursor\00", align 1
@.str.164 = private unnamed_addr constant [23 x i8] c"Set 2D cursor location\00", align 1
@.str.165 = private unnamed_addr constant [52 x i8] c"Cursor location in normalized (0.0-1.0) coordinates\00", align 1
@.str.166 = private unnamed_addr constant [9 x i8] c"Set Tile\00", align 1
@.str.167 = private unnamed_addr constant [30 x i8] c"Set UV image tile coordinates\00", align 1
@.str.168 = private unnamed_addr constant [5 x i8] c"tile\00", align 1
@.str.169 = private unnamed_addr constant [5 x i8] c"Tile\00", align 1
@.str.170 = private unnamed_addr constant [16 x i8] c"Tile coordinate\00", align 1

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @ED_uvedit_test(%struct.Object* %obedit) #0 !dbg !3585 {
entry:
  %retval = alloca i8, align 1
  %obedit.addr = alloca %struct.Object*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  %ret = alloca i32, align 4
  store %struct.Object* %obedit, %struct.Object** %obedit.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit.addr, metadata !3590, metadata !DIExpression()), !dbg !3591
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !3592, metadata !DIExpression()), !dbg !3595
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !3596, metadata !DIExpression()), !dbg !3597
  %0 = load %struct.Object*, %struct.Object** %obedit.addr, align 8, !dbg !3598
  %tobool = icmp ne %struct.Object* %0, null, !dbg !3598
  br i1 %tobool, label %if.end, label %if.then, !dbg !3600

if.then:                                          ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !3601
  br label %return, !dbg !3601

if.end:                                           ; preds = %entry
  %1 = load %struct.Object*, %struct.Object** %obedit.addr, align 8, !dbg !3602
  %type = getelementptr inbounds %struct.Object, %struct.Object* %1, i32 0, i32 3, !dbg !3604
  %2 = load i16, i16* %type, align 8, !dbg !3604
  %conv = sext i16 %2 to i32, !dbg !3602
  %cmp = icmp ne i32 %conv, 1, !dbg !3605
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !3606

if.then2:                                         ; preds = %if.end
  store i8 0, i8* %retval, align 1, !dbg !3607
  br label %return, !dbg !3607

if.end3:                                          ; preds = %if.end
  %3 = load %struct.Object*, %struct.Object** %obedit.addr, align 8, !dbg !3608
  %call = call %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object* %3), !dbg !3609
  store %struct.BMEditMesh* %call, %struct.BMEditMesh** %em, align 8, !dbg !3610
  %4 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !3611
  %call4 = call zeroext i8 @EDBM_mtexpoly_check(%struct.BMEditMesh* %4), !dbg !3612
  %conv5 = zext i8 %call4 to i32, !dbg !3612
  store i32 %conv5, i32* %ret, align 4, !dbg !3613
  %5 = load i32, i32* %ret, align 4, !dbg !3614
  %conv6 = trunc i32 %5 to i8, !dbg !3614
  store i8 %conv6, i8* %retval, align 1, !dbg !3615
  br label %return, !dbg !3615

return:                                           ; preds = %if.end3, %if.then2, %if.then
  %6 = load i8, i8* %retval, align 1, !dbg !3616
  ret i8 %6, !dbg !3616
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare dso_local %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object*) #2

declare dso_local zeroext i8 @EDBM_mtexpoly_check(%struct.BMEditMesh*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @ED_object_get_active_image(%struct.Object* %ob, i32 %mat_nr, %struct.Image** %r_ima, %struct.ImageUser** %r_iuser, %struct.bNode** %r_node, %struct.bNodeTree** %r_ntree) #0 !dbg !3617 {
entry:
  %retval = alloca i8, align 1
  %ob.addr = alloca %struct.Object*, align 8
  %mat_nr.addr = alloca i32, align 4
  %r_ima.addr = alloca %struct.Image**, align 8
  %r_iuser.addr = alloca %struct.ImageUser**, align 8
  %r_node.addr = alloca %struct.bNode**, align 8
  %r_ntree.addr = alloca %struct.bNodeTree**, align 8
  %ma = alloca %struct.Material*, align 8
  %ntree = alloca %struct.bNodeTree*, align 8
  %node = alloca %struct.bNode*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !3626, metadata !DIExpression()), !dbg !3627
  store i32 %mat_nr, i32* %mat_nr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mat_nr.addr, metadata !3628, metadata !DIExpression()), !dbg !3629
  store %struct.Image** %r_ima, %struct.Image*** %r_ima.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Image*** %r_ima.addr, metadata !3630, metadata !DIExpression()), !dbg !3631
  store %struct.ImageUser** %r_iuser, %struct.ImageUser*** %r_iuser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImageUser*** %r_iuser.addr, metadata !3632, metadata !DIExpression()), !dbg !3633
  store %struct.bNode** %r_node, %struct.bNode*** %r_node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNode*** %r_node.addr, metadata !3634, metadata !DIExpression()), !dbg !3635
  store %struct.bNodeTree** %r_ntree, %struct.bNodeTree*** %r_ntree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeTree*** %r_ntree.addr, metadata !3636, metadata !DIExpression()), !dbg !3637
  call void @llvm.dbg.declare(metadata %struct.Material** %ma, metadata !3638, metadata !DIExpression()), !dbg !3641
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3642
  %1 = load i32, i32* %mat_nr.addr, align 4, !dbg !3643
  %conv = trunc i32 %1 to i16, !dbg !3643
  %call = call %struct.Material* @give_current_material(%struct.Object* %0, i16 signext %conv), !dbg !3644
  store %struct.Material* %call, %struct.Material** %ma, align 8, !dbg !3641
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ntree, metadata !3645, metadata !DIExpression()), !dbg !3646
  %2 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !3647
  %tobool = icmp ne %struct.Material* %2, null, !dbg !3647
  br i1 %tobool, label %land.lhs.true, label %cond.false, !dbg !3648

land.lhs.true:                                    ; preds = %entry
  %3 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !3649
  %use_nodes = getelementptr inbounds %struct.Material, %struct.Material* %3, i32 0, i32 77, !dbg !3650
  %4 = load i8, i8* %use_nodes, align 1, !dbg !3650
  %conv1 = zext i8 %4 to i32, !dbg !3649
  %tobool2 = icmp ne i32 %conv1, 0, !dbg !3649
  br i1 %tobool2, label %cond.true, label %cond.false, !dbg !3651

cond.true:                                        ; preds = %land.lhs.true
  %5 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !3652
  %nodetree = getelementptr inbounds %struct.Material, %struct.Material* %5, i32 0, i32 103, !dbg !3653
  %6 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree, align 8, !dbg !3653
  br label %cond.end, !dbg !3651

cond.false:                                       ; preds = %land.lhs.true, %entry
  br label %cond.end, !dbg !3651

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.bNodeTree* [ %6, %cond.true ], [ null, %cond.false ], !dbg !3651
  store %struct.bNodeTree* %cond, %struct.bNodeTree** %ntree, align 8, !dbg !3646
  call void @llvm.dbg.declare(metadata %struct.bNode** %node, metadata !3654, metadata !DIExpression()), !dbg !3655
  %7 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !3656
  %tobool3 = icmp ne %struct.bNodeTree* %7, null, !dbg !3657
  br i1 %tobool3, label %cond.true4, label %cond.false6, !dbg !3657

cond.true4:                                       ; preds = %cond.end
  %8 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !3658
  %call5 = call %struct.bNode* @nodeGetActiveTexture(%struct.bNodeTree* %8), !dbg !3659
  br label %cond.end7, !dbg !3657

cond.false6:                                      ; preds = %cond.end
  br label %cond.end7, !dbg !3657

cond.end7:                                        ; preds = %cond.false6, %cond.true4
  %cond8 = phi %struct.bNode* [ %call5, %cond.true4 ], [ null, %cond.false6 ], !dbg !3657
  store %struct.bNode* %cond8, %struct.bNode** %node, align 8, !dbg !3655
  %9 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !3660
  %tobool9 = icmp ne %struct.bNode* %9, null, !dbg !3660
  br i1 %tobool9, label %land.lhs.true10, label %if.end25, !dbg !3662

land.lhs.true10:                                  ; preds = %cond.end7
  %10 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !3663
  %call11 = call zeroext i8 @is_image_texture_node(%struct.bNode* %10), !dbg !3664
  %conv12 = zext i8 %call11 to i32, !dbg !3664
  %tobool13 = icmp ne i32 %conv12, 0, !dbg !3664
  br i1 %tobool13, label %if.then, label %if.end25, !dbg !3665

if.then:                                          ; preds = %land.lhs.true10
  %11 = load %struct.Image**, %struct.Image*** %r_ima.addr, align 8, !dbg !3666
  %tobool14 = icmp ne %struct.Image** %11, null, !dbg !3666
  br i1 %tobool14, label %if.then15, label %if.end, !dbg !3669

if.then15:                                        ; preds = %if.then
  %12 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !3670
  %id = getelementptr inbounds %struct.bNode, %struct.bNode* %12, i32 0, i32 20, !dbg !3671
  %13 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !3671
  %14 = bitcast %struct.ID* %13 to %struct.Image*, !dbg !3672
  %15 = load %struct.Image**, %struct.Image*** %r_ima.addr, align 8, !dbg !3673
  store %struct.Image* %14, %struct.Image** %15, align 8, !dbg !3674
  br label %if.end, !dbg !3675

if.end:                                           ; preds = %if.then15, %if.then
  %16 = load %struct.ImageUser**, %struct.ImageUser*** %r_iuser.addr, align 8, !dbg !3676
  %tobool16 = icmp ne %struct.ImageUser** %16, null, !dbg !3676
  br i1 %tobool16, label %if.then17, label %if.end18, !dbg !3678

if.then17:                                        ; preds = %if.end
  %17 = load %struct.ImageUser**, %struct.ImageUser*** %r_iuser.addr, align 8, !dbg !3679
  store %struct.ImageUser* null, %struct.ImageUser** %17, align 8, !dbg !3680
  br label %if.end18, !dbg !3681

if.end18:                                         ; preds = %if.then17, %if.end
  %18 = load %struct.bNode**, %struct.bNode*** %r_node.addr, align 8, !dbg !3682
  %tobool19 = icmp ne %struct.bNode** %18, null, !dbg !3682
  br i1 %tobool19, label %if.then20, label %if.end21, !dbg !3684

if.then20:                                        ; preds = %if.end18
  %19 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !3685
  %20 = load %struct.bNode**, %struct.bNode*** %r_node.addr, align 8, !dbg !3686
  store %struct.bNode* %19, %struct.bNode** %20, align 8, !dbg !3687
  br label %if.end21, !dbg !3688

if.end21:                                         ; preds = %if.then20, %if.end18
  %21 = load %struct.bNodeTree**, %struct.bNodeTree*** %r_ntree.addr, align 8, !dbg !3689
  %tobool22 = icmp ne %struct.bNodeTree** %21, null, !dbg !3689
  br i1 %tobool22, label %if.then23, label %if.end24, !dbg !3691

if.then23:                                        ; preds = %if.end21
  %22 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !3692
  %23 = load %struct.bNodeTree**, %struct.bNodeTree*** %r_ntree.addr, align 8, !dbg !3693
  store %struct.bNodeTree* %22, %struct.bNodeTree** %23, align 8, !dbg !3694
  br label %if.end24, !dbg !3695

if.end24:                                         ; preds = %if.then23, %if.end21
  store i8 1, i8* %retval, align 1, !dbg !3696
  br label %return, !dbg !3696

if.end25:                                         ; preds = %land.lhs.true10, %cond.end7
  %24 = load %struct.Image**, %struct.Image*** %r_ima.addr, align 8, !dbg !3697
  %tobool26 = icmp ne %struct.Image** %24, null, !dbg !3697
  br i1 %tobool26, label %if.then27, label %if.end28, !dbg !3699

if.then27:                                        ; preds = %if.end25
  %25 = load %struct.Image**, %struct.Image*** %r_ima.addr, align 8, !dbg !3700
  store %struct.Image* null, %struct.Image** %25, align 8, !dbg !3701
  br label %if.end28, !dbg !3702

if.end28:                                         ; preds = %if.then27, %if.end25
  %26 = load %struct.ImageUser**, %struct.ImageUser*** %r_iuser.addr, align 8, !dbg !3703
  %tobool29 = icmp ne %struct.ImageUser** %26, null, !dbg !3703
  br i1 %tobool29, label %if.then30, label %if.end31, !dbg !3705

if.then30:                                        ; preds = %if.end28
  %27 = load %struct.ImageUser**, %struct.ImageUser*** %r_iuser.addr, align 8, !dbg !3706
  store %struct.ImageUser* null, %struct.ImageUser** %27, align 8, !dbg !3707
  br label %if.end31, !dbg !3708

if.end31:                                         ; preds = %if.then30, %if.end28
  %28 = load %struct.bNode**, %struct.bNode*** %r_node.addr, align 8, !dbg !3709
  %tobool32 = icmp ne %struct.bNode** %28, null, !dbg !3709
  br i1 %tobool32, label %if.then33, label %if.end34, !dbg !3711

if.then33:                                        ; preds = %if.end31
  %29 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !3712
  %30 = load %struct.bNode**, %struct.bNode*** %r_node.addr, align 8, !dbg !3713
  store %struct.bNode* %29, %struct.bNode** %30, align 8, !dbg !3714
  br label %if.end34, !dbg !3715

if.end34:                                         ; preds = %if.then33, %if.end31
  %31 = load %struct.bNodeTree**, %struct.bNodeTree*** %r_ntree.addr, align 8, !dbg !3716
  %tobool35 = icmp ne %struct.bNodeTree** %31, null, !dbg !3716
  br i1 %tobool35, label %if.then36, label %if.end37, !dbg !3718

if.then36:                                        ; preds = %if.end34
  %32 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !3719
  %33 = load %struct.bNodeTree**, %struct.bNodeTree*** %r_ntree.addr, align 8, !dbg !3720
  store %struct.bNodeTree* %32, %struct.bNodeTree** %33, align 8, !dbg !3721
  br label %if.end37, !dbg !3722

if.end37:                                         ; preds = %if.then36, %if.end34
  store i8 0, i8* %retval, align 1, !dbg !3723
  br label %return, !dbg !3723

return:                                           ; preds = %if.end37, %if.end24
  %34 = load i8, i8* %retval, align 1, !dbg !3724
  ret i8 %34, !dbg !3724
}

declare dso_local %struct.Material* @give_current_material(%struct.Object*, i16 signext) #2

declare dso_local %struct.bNode* @nodeGetActiveTexture(%struct.bNodeTree*) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @is_image_texture_node(%struct.bNode* %node) #0 !dbg !3725 {
entry:
  %node.addr = alloca %struct.bNode*, align 8
  store %struct.bNode* %node, %struct.bNode** %node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNode** %node.addr, metadata !3728, metadata !DIExpression()), !dbg !3729
  %0 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !3730
  %type = getelementptr inbounds %struct.bNode, %struct.bNode* %0, i32 0, i32 8, !dbg !3730
  %1 = load i16, i16* %type, align 4, !dbg !3730
  %conv = sext i16 %1 to i32, !dbg !3730
  %cmp = icmp eq i32 %conv, 143, !dbg !3730
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !3730

lor.rhs:                                          ; preds = %entry
  %2 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !3730
  %type2 = getelementptr inbounds %struct.bNode, %struct.bNode* %2, i32 0, i32 8, !dbg !3730
  %3 = load i16, i16* %type2, align 4, !dbg !3730
  %conv3 = sext i16 %3 to i32, !dbg !3730
  %cmp4 = icmp eq i32 %conv3, 157, !dbg !3730
  br label %lor.end, !dbg !3730

lor.end:                                          ; preds = %lor.rhs, %entry
  %4 = phi i1 [ true, %entry ], [ %cmp4, %lor.rhs ]
  %lor.ext = zext i1 %4 to i32, !dbg !3730
  %conv6 = trunc i32 %lor.ext to i8, !dbg !3730
  ret i8 %conv6, !dbg !3731
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @ED_object_assign_active_image(%struct.Main* %bmain, %struct.Object* %ob, i32 %mat_nr, %struct.Image* %ima) #0 !dbg !3732 {
entry:
  %bmain.addr = alloca %struct.Main*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %mat_nr.addr = alloca i32, align 4
  %ima.addr = alloca %struct.Image*, align 8
  %ma = alloca %struct.Material*, align 8
  %node = alloca %struct.bNode*, align 8
  store %struct.Main* %bmain, %struct.Main** %bmain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain.addr, metadata !3797, metadata !DIExpression()), !dbg !3798
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !3799, metadata !DIExpression()), !dbg !3800
  store i32 %mat_nr, i32* %mat_nr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mat_nr.addr, metadata !3801, metadata !DIExpression()), !dbg !3802
  store %struct.Image* %ima, %struct.Image** %ima.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Image** %ima.addr, metadata !3803, metadata !DIExpression()), !dbg !3804
  call void @llvm.dbg.declare(metadata %struct.Material** %ma, metadata !3805, metadata !DIExpression()), !dbg !3806
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3807
  %1 = load i32, i32* %mat_nr.addr, align 4, !dbg !3808
  %conv = trunc i32 %1 to i16, !dbg !3808
  %call = call %struct.Material* @give_current_material(%struct.Object* %0, i16 signext %conv), !dbg !3809
  store %struct.Material* %call, %struct.Material** %ma, align 8, !dbg !3806
  call void @llvm.dbg.declare(metadata %struct.bNode** %node, metadata !3810, metadata !DIExpression()), !dbg !3811
  %2 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !3812
  %tobool = icmp ne %struct.Material* %2, null, !dbg !3812
  br i1 %tobool, label %land.lhs.true, label %cond.false, !dbg !3813

land.lhs.true:                                    ; preds = %entry
  %3 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !3814
  %use_nodes = getelementptr inbounds %struct.Material, %struct.Material* %3, i32 0, i32 77, !dbg !3815
  %4 = load i8, i8* %use_nodes, align 1, !dbg !3815
  %conv1 = zext i8 %4 to i32, !dbg !3814
  %tobool2 = icmp ne i32 %conv1, 0, !dbg !3814
  br i1 %tobool2, label %cond.true, label %cond.false, !dbg !3816

cond.true:                                        ; preds = %land.lhs.true
  %5 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !3817
  %nodetree = getelementptr inbounds %struct.Material, %struct.Material* %5, i32 0, i32 103, !dbg !3818
  %6 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree, align 8, !dbg !3818
  %call3 = call %struct.bNode* @nodeGetActiveTexture(%struct.bNodeTree* %6), !dbg !3819
  br label %cond.end, !dbg !3816

cond.false:                                       ; preds = %land.lhs.true, %entry
  br label %cond.end, !dbg !3816

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.bNode* [ %call3, %cond.true ], [ null, %cond.false ], !dbg !3816
  store %struct.bNode* %cond, %struct.bNode** %node, align 8, !dbg !3811
  %7 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !3820
  %tobool4 = icmp ne %struct.bNode* %7, null, !dbg !3820
  br i1 %tobool4, label %land.lhs.true5, label %if.end, !dbg !3822

land.lhs.true5:                                   ; preds = %cond.end
  %8 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !3823
  %call6 = call zeroext i8 @is_image_texture_node(%struct.bNode* %8), !dbg !3824
  %conv7 = zext i8 %call6 to i32, !dbg !3824
  %tobool8 = icmp ne i32 %conv7, 0, !dbg !3824
  br i1 %tobool8, label %if.then, label %if.end, !dbg !3825

if.then:                                          ; preds = %land.lhs.true5
  %9 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !3826
  %id = getelementptr inbounds %struct.Image, %struct.Image* %9, i32 0, i32 0, !dbg !3828
  %10 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !3829
  %id9 = getelementptr inbounds %struct.bNode, %struct.bNode* %10, i32 0, i32 20, !dbg !3830
  store %struct.ID* %id, %struct.ID** %id9, align 8, !dbg !3831
  %11 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !3832
  %12 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !3833
  %nodetree10 = getelementptr inbounds %struct.Material, %struct.Material* %12, i32 0, i32 103, !dbg !3834
  %13 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree10, align 8, !dbg !3834
  call void @ED_node_tag_update_nodetree(%struct.Main* %11, %struct.bNodeTree* %13), !dbg !3835
  br label %if.end, !dbg !3836

if.end:                                           ; preds = %if.then, %land.lhs.true5, %cond.end
  ret void, !dbg !3837
}

declare dso_local void @ED_node_tag_update_nodetree(%struct.Main*, %struct.bNodeTree*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @ED_uvedit_assign_image(%struct.Main* %UNUSED_bmain, %struct.Scene* %scene, %struct.Object* %obedit, %struct.Image* %ima, %struct.Image* %previma) #0 !dbg !3838 {
entry:
  %UNUSED_bmain.addr = alloca %struct.Main*, align 8
  %scene.addr = alloca %struct.Scene*, align 8
  %obedit.addr = alloca %struct.Object*, align 8
  %ima.addr = alloca %struct.Image*, align 8
  %previma.addr = alloca %struct.Image*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  %iter = alloca %struct.BMIter, align 8
  %tf = alloca %struct.MTexPoly*, align 8
  %update = alloca i8, align 1
  %selected = alloca i8, align 1
  %efa = alloca %struct.BMFace*, align 8
  %cd_loop_uv_offset = alloca i32, align 4
  %cd_poly_tex_offset = alloca i32, align 4
  store %struct.Main* %UNUSED_bmain, %struct.Main** %UNUSED_bmain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Main** %UNUSED_bmain.addr, metadata !3843, metadata !DIExpression()), !dbg !3844
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !3845, metadata !DIExpression()), !dbg !3846
  store %struct.Object* %obedit, %struct.Object** %obedit.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit.addr, metadata !3847, metadata !DIExpression()), !dbg !3848
  store %struct.Image* %ima, %struct.Image** %ima.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Image** %ima.addr, metadata !3849, metadata !DIExpression()), !dbg !3850
  store %struct.Image* %previma, %struct.Image** %previma.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Image** %previma.addr, metadata !3851, metadata !DIExpression()), !dbg !3852
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !3853, metadata !DIExpression()), !dbg !3854
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iter, metadata !3855, metadata !DIExpression()), !dbg !3943
  call void @llvm.dbg.declare(metadata %struct.MTexPoly** %tf, metadata !3944, metadata !DIExpression()), !dbg !3947
  call void @llvm.dbg.declare(metadata i8* %update, metadata !3948, metadata !DIExpression()), !dbg !3949
  store i8 0, i8* %update, align 1, !dbg !3949
  call void @llvm.dbg.declare(metadata i8* %selected, metadata !3950, metadata !DIExpression()), !dbg !3952
  %0 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !3953
  %toolsettings = getelementptr inbounds %struct.Scene, %struct.Scene* %0, i32 0, i32 20, !dbg !3954
  %1 = load %struct.ToolSettings*, %struct.ToolSettings** %toolsettings, align 8, !dbg !3954
  %uv_flag = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %1, i32 0, i32 11, !dbg !3955
  %2 = load i8, i8* %uv_flag, align 2, !dbg !3955
  %conv = zext i8 %2 to i32, !dbg !3953
  %and = and i32 %conv, 1, !dbg !3956
  %tobool = icmp ne i32 %and, 0, !dbg !3957
  %lnot = xor i1 %tobool, true, !dbg !3957
  %lnot.ext = zext i1 %lnot to i32, !dbg !3957
  %conv1 = trunc i32 %lnot.ext to i8, !dbg !3957
  store i8 %conv1, i8* %selected, align 1, !dbg !3952
  %3 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !3958
  %tobool2 = icmp ne %struct.Image* %3, null, !dbg !3958
  br i1 %tobool2, label %land.lhs.true, label %if.end, !dbg !3960

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !3961
  %type = getelementptr inbounds %struct.Image, %struct.Image* %4, i32 0, i32 12, !dbg !3962
  %5 = load i16, i16* %type, align 2, !dbg !3962
  %conv3 = sext i16 %5 to i32, !dbg !3961
  %cmp = icmp eq i32 %conv3, 4, !dbg !3963
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !3964

lor.lhs.false:                                    ; preds = %land.lhs.true
  %6 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !3965
  %type5 = getelementptr inbounds %struct.Image, %struct.Image* %6, i32 0, i32 12, !dbg !3966
  %7 = load i16, i16* %type5, align 2, !dbg !3966
  %conv6 = sext i16 %7 to i32, !dbg !3965
  %cmp7 = icmp eq i32 %conv6, 5, !dbg !3967
  br i1 %cmp7, label %if.then, label %if.end, !dbg !3968

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true
  br label %if.end78, !dbg !3969

if.end:                                           ; preds = %lor.lhs.false, %entry
  %8 = load %struct.Object*, %struct.Object** %obedit.addr, align 8, !dbg !3970
  %tobool9 = icmp ne %struct.Object* %8, null, !dbg !3970
  br i1 %tobool9, label %lor.lhs.false10, label %if.then15, !dbg !3972

lor.lhs.false10:                                  ; preds = %if.end
  %9 = load %struct.Object*, %struct.Object** %obedit.addr, align 8, !dbg !3973
  %type11 = getelementptr inbounds %struct.Object, %struct.Object* %9, i32 0, i32 3, !dbg !3974
  %10 = load i16, i16* %type11, align 8, !dbg !3974
  %conv12 = sext i16 %10 to i32, !dbg !3973
  %cmp13 = icmp ne i32 %conv12, 1, !dbg !3975
  br i1 %cmp13, label %if.then15, label %if.end16, !dbg !3976

if.then15:                                        ; preds = %lor.lhs.false10, %if.end
  br label %if.end78, !dbg !3977

if.end16:                                         ; preds = %lor.lhs.false10
  %11 = load %struct.Object*, %struct.Object** %obedit.addr, align 8, !dbg !3978
  %call = call %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object* %11), !dbg !3979
  store %struct.BMEditMesh* %call, %struct.BMEditMesh** %em, align 8, !dbg !3980
  %12 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !3981
  %tobool17 = icmp ne %struct.BMEditMesh* %12, null, !dbg !3981
  br i1 %tobool17, label %lor.lhs.false18, label %if.then20, !dbg !3983

lor.lhs.false18:                                  ; preds = %if.end16
  %13 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !3984
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %13, i32 0, i32 0, !dbg !3985
  %14 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !3985
  %totface = getelementptr inbounds %struct.BMesh, %struct.BMesh* %14, i32 0, i32 3, !dbg !3986
  %15 = load i32, i32* %totface, align 4, !dbg !3986
  %tobool19 = icmp ne i32 %15, 0, !dbg !3984
  br i1 %tobool19, label %if.end21, label %if.then20, !dbg !3987

if.then20:                                        ; preds = %lor.lhs.false18, %if.end16
  br label %if.end78, !dbg !3988

if.end21:                                         ; preds = %lor.lhs.false18
  %16 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !3990
  %call22 = call zeroext i8 @BKE_scene_use_new_shading_nodes(%struct.Scene* %16), !dbg !3992
  %tobool23 = icmp ne i8 %call22, 0, !dbg !3992
  br i1 %tobool23, label %if.then24, label %if.else, !dbg !3993

if.then24:                                        ; preds = %if.end21
  br label %if.end78, !dbg !3994

if.else:                                          ; preds = %if.end21
  call void @llvm.dbg.declare(metadata %struct.BMFace** %efa, metadata !3996, metadata !DIExpression()), !dbg !3998
  call void @llvm.dbg.declare(metadata i32* %cd_loop_uv_offset, metadata !3999, metadata !DIExpression()), !dbg !4000
  call void @llvm.dbg.declare(metadata i32* %cd_poly_tex_offset, metadata !4001, metadata !DIExpression()), !dbg !4002
  %17 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !4003
  %bm25 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %17, i32 0, i32 0, !dbg !4005
  %18 = load %struct.BMesh*, %struct.BMesh** %bm25, align 8, !dbg !4005
  %pdata = getelementptr inbounds %struct.BMesh, %struct.BMesh* %18, i32 0, i32 27, !dbg !4006
  %call26 = call zeroext i8 @CustomData_has_layer(%struct.CustomData* %pdata, i32 15), !dbg !4007
  %tobool27 = icmp ne i8 %call26, 0, !dbg !4007
  br i1 %tobool27, label %if.end37, label %if.then28, !dbg !4008

if.then28:                                        ; preds = %if.else
  %19 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !4009
  %bm29 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %19, i32 0, i32 0, !dbg !4011
  %20 = load %struct.BMesh*, %struct.BMesh** %bm29, align 8, !dbg !4011
  %21 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !4012
  %bm30 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %21, i32 0, i32 0, !dbg !4013
  %22 = load %struct.BMesh*, %struct.BMesh** %bm30, align 8, !dbg !4013
  %pdata31 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %22, i32 0, i32 27, !dbg !4014
  call void @BM_data_layer_add(%struct.BMesh* %20, %struct.CustomData* %pdata31, i32 15), !dbg !4015
  %23 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !4016
  %bm32 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %23, i32 0, i32 0, !dbg !4017
  %24 = load %struct.BMesh*, %struct.BMesh** %bm32, align 8, !dbg !4017
  %25 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !4018
  %bm33 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %25, i32 0, i32 0, !dbg !4019
  %26 = load %struct.BMesh*, %struct.BMesh** %bm33, align 8, !dbg !4019
  %ldata = getelementptr inbounds %struct.BMesh, %struct.BMesh* %26, i32 0, i32 26, !dbg !4020
  call void @BM_data_layer_add(%struct.BMesh* %24, %struct.CustomData* %ldata, i32 16), !dbg !4021
  %27 = load %struct.Object*, %struct.Object** %obedit.addr, align 8, !dbg !4022
  %data = getelementptr inbounds %struct.Object, %struct.Object* %27, i32 0, i32 19, !dbg !4023
  %28 = load i8*, i8** %data, align 8, !dbg !4023
  %29 = bitcast i8* %28 to %struct.Mesh*, !dbg !4022
  %30 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !4024
  %bm34 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %30, i32 0, i32 0, !dbg !4025
  %31 = load %struct.BMesh*, %struct.BMesh** %bm34, align 8, !dbg !4025
  %pdata35 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %31, i32 0, i32 27, !dbg !4026
  %call36 = call i32 @CustomData_get_active_layer_index(%struct.CustomData* %pdata35, i32 15), !dbg !4027
  call void @ED_mesh_uv_loop_reset_ex(%struct.Mesh* %29, i32 %call36), !dbg !4028
  store i8 1, i8* %update, align 1, !dbg !4029
  br label %if.end37, !dbg !4030

if.end37:                                         ; preds = %if.then28, %if.else
  %32 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !4031
  %bm38 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %32, i32 0, i32 0, !dbg !4032
  %33 = load %struct.BMesh*, %struct.BMesh** %bm38, align 8, !dbg !4032
  %ldata39 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %33, i32 0, i32 26, !dbg !4033
  %call40 = call i32 @CustomData_get_offset(%struct.CustomData* %ldata39, i32 16), !dbg !4034
  store i32 %call40, i32* %cd_loop_uv_offset, align 4, !dbg !4035
  %34 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !4036
  %bm41 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %34, i32 0, i32 0, !dbg !4037
  %35 = load %struct.BMesh*, %struct.BMesh** %bm41, align 8, !dbg !4037
  %pdata42 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %35, i32 0, i32 27, !dbg !4038
  %call43 = call i32 @CustomData_get_offset(%struct.CustomData* %pdata42, i32 15), !dbg !4039
  store i32 %call43, i32* %cd_poly_tex_offset, align 4, !dbg !4040
  %36 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !4041
  %bm44 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %36, i32 0, i32 0, !dbg !4041
  %37 = load %struct.BMesh*, %struct.BMesh** %bm44, align 8, !dbg !4041
  %call45 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %37, i8 zeroext 3, i8* null), !dbg !4041
  %38 = bitcast i8* %call45 to %struct.BMFace*, !dbg !4041
  store %struct.BMFace* %38, %struct.BMFace** %efa, align 8, !dbg !4041
  br label %for.cond, !dbg !4041

for.cond:                                         ; preds = %for.inc, %if.end37
  %39 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !4043
  %tobool46 = icmp ne %struct.BMFace* %39, null, !dbg !4041
  br i1 %tobool46, label %for.body, label %for.end, !dbg !4041

for.body:                                         ; preds = %for.cond
  %40 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !4045
  %head = getelementptr inbounds %struct.BMFace, %struct.BMFace* %40, i32 0, i32 0, !dbg !4045
  %data47 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head, i32 0, i32 0, !dbg !4045
  %41 = load i8*, i8** %data47, align 8, !dbg !4045
  %42 = load i32, i32* %cd_poly_tex_offset, align 4, !dbg !4045
  %idx.ext = sext i32 %42 to i64, !dbg !4045
  %add.ptr = getelementptr inbounds i8, i8* %41, i64 %idx.ext, !dbg !4045
  %43 = bitcast i8* %add.ptr to %struct.MTexPoly*, !dbg !4045
  store %struct.MTexPoly* %43, %struct.MTexPoly** %tf, align 8, !dbg !4047
  %44 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !4048
  %45 = load %struct.Image*, %struct.Image** %previma.addr, align 8, !dbg !4050
  %46 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !4051
  %47 = load %struct.MTexPoly*, %struct.MTexPoly** %tf, align 8, !dbg !4052
  %call48 = call zeroext i8 @uvedit_face_visible_test(%struct.Scene* %44, %struct.Image* %45, %struct.BMFace* %46, %struct.MTexPoly* %47), !dbg !4053
  %conv49 = zext i8 %call48 to i32, !dbg !4053
  %tobool50 = icmp ne i32 %conv49, 0, !dbg !4053
  br i1 %tobool50, label %land.lhs.true51, label %if.end72, !dbg !4054

land.lhs.true51:                                  ; preds = %for.body
  %48 = load i8, i8* %selected, align 1, !dbg !4055
  %conv52 = zext i8 %48 to i32, !dbg !4055
  %cmp53 = icmp eq i32 %conv52, 1, !dbg !4056
  br i1 %cmp53, label %if.then59, label %lor.lhs.false55, !dbg !4057

lor.lhs.false55:                                  ; preds = %land.lhs.true51
  %49 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !4058
  %50 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !4059
  %51 = load i32, i32* %cd_loop_uv_offset, align 4, !dbg !4060
  %call56 = call zeroext i8 @uvedit_face_select_test(%struct.Scene* %49, %struct.BMFace* %50, i32 %51), !dbg !4061
  %conv57 = zext i8 %call56 to i32, !dbg !4061
  %tobool58 = icmp ne i32 %conv57, 0, !dbg !4061
  br i1 %tobool58, label %if.then59, label %if.end72, !dbg !4062

if.then59:                                        ; preds = %lor.lhs.false55, %land.lhs.true51
  %52 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !4063
  %tobool60 = icmp ne %struct.Image* %52, null, !dbg !4063
  br i1 %tobool60, label %if.then61, label %if.else69, !dbg !4066

if.then61:                                        ; preds = %if.then59
  %53 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !4067
  %54 = load %struct.MTexPoly*, %struct.MTexPoly** %tf, align 8, !dbg !4069
  %tpage = getelementptr inbounds %struct.MTexPoly, %struct.MTexPoly* %54, i32 0, i32 0, !dbg !4070
  store %struct.Image* %53, %struct.Image** %tpage, align 8, !dbg !4071
  %55 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !4072
  %id = getelementptr inbounds %struct.Image, %struct.Image* %55, i32 0, i32 0, !dbg !4074
  %us = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 6, !dbg !4075
  %56 = load i32, i32* %us, align 4, !dbg !4075
  %cmp62 = icmp eq i32 %56, 0, !dbg !4076
  br i1 %cmp62, label %if.then64, label %if.else66, !dbg !4077

if.then64:                                        ; preds = %if.then61
  %57 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !4078
  %id65 = getelementptr inbounds %struct.Image, %struct.Image* %57, i32 0, i32 0, !dbg !4079
  call void @id_us_plus(%struct.ID* %id65), !dbg !4080
  br label %if.end68, !dbg !4080

if.else66:                                        ; preds = %if.then61
  %58 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !4081
  %id67 = getelementptr inbounds %struct.Image, %struct.Image* %58, i32 0, i32 0, !dbg !4082
  call void @id_lib_extern(%struct.ID* %id67), !dbg !4083
  br label %if.end68

if.end68:                                         ; preds = %if.else66, %if.then64
  br label %if.end71, !dbg !4084

if.else69:                                        ; preds = %if.then59
  %59 = load %struct.MTexPoly*, %struct.MTexPoly** %tf, align 8, !dbg !4085
  %tpage70 = getelementptr inbounds %struct.MTexPoly, %struct.MTexPoly* %59, i32 0, i32 0, !dbg !4087
  store %struct.Image* null, %struct.Image** %tpage70, align 8, !dbg !4088
  br label %if.end71

if.end71:                                         ; preds = %if.else69, %if.end68
  store i8 1, i8* %update, align 1, !dbg !4089
  br label %if.end72, !dbg !4090

if.end72:                                         ; preds = %if.end71, %lor.lhs.false55, %for.body
  br label %for.inc, !dbg !4091

for.inc:                                          ; preds = %if.end72
  %call73 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !4043
  %60 = bitcast i8* %call73 to %struct.BMFace*, !dbg !4043
  store %struct.BMFace* %60, %struct.BMFace** %efa, align 8, !dbg !4043
  br label %for.cond, !dbg !4043, !llvm.loop !4092

for.end:                                          ; preds = %for.cond
  %61 = load i8, i8* %update, align 1, !dbg !4094
  %tobool74 = icmp ne i8 %61, 0, !dbg !4094
  br i1 %tobool74, label %if.then75, label %if.end77, !dbg !4096

if.then75:                                        ; preds = %for.end
  %62 = load %struct.Object*, %struct.Object** %obedit.addr, align 8, !dbg !4097
  %data76 = getelementptr inbounds %struct.Object, %struct.Object* %62, i32 0, i32 19, !dbg !4099
  %63 = load i8*, i8** %data76, align 8, !dbg !4099
  %64 = bitcast i8* %63 to %struct.ID*, !dbg !4097
  call void @DAG_id_tag_update(%struct.ID* %64, i16 signext 0), !dbg !4100
  br label %if.end77, !dbg !4101

if.end77:                                         ; preds = %if.then75, %for.end
  br label %if.end78

if.end78:                                         ; preds = %if.then, %if.then15, %if.then20, %if.end77, %if.then24
  ret void, !dbg !4102
}

declare dso_local zeroext i8 @BKE_scene_use_new_shading_nodes(%struct.Scene*) #2

declare dso_local zeroext i8 @CustomData_has_layer(%struct.CustomData*, i32) #2

declare dso_local void @BM_data_layer_add(%struct.BMesh*, %struct.CustomData*, i32) #2

declare dso_local void @ED_mesh_uv_loop_reset_ex(%struct.Mesh*, i32) #2

declare dso_local i32 @CustomData_get_active_layer_index(%struct.CustomData*, i32) #2

declare dso_local i32 @CustomData_get_offset(%struct.CustomData*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %bm, i8 zeroext %itype, i8* %data) #0 !dbg !4103 {
entry:
  %retval = alloca i8*, align 8
  %iter.addr = alloca %struct.BMIter*, align 8
  %bm.addr = alloca %struct.BMesh*, align 8
  %itype.addr = alloca i8, align 1
  %data.addr = alloca i8*, align 8
  store %struct.BMIter* %iter, %struct.BMIter** %iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMIter** %iter.addr, metadata !4108, metadata !DIExpression()), !dbg !4109
  store %struct.BMesh* %bm, %struct.BMesh** %bm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm.addr, metadata !4110, metadata !DIExpression()), !dbg !4111
  store i8 %itype, i8* %itype.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %itype.addr, metadata !4112, metadata !DIExpression()), !dbg !4113
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !4114, metadata !DIExpression()), !dbg !4115
  %0 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !4116
  %1 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !4116
  %2 = load i8, i8* %itype.addr, align 1, !dbg !4116
  %3 = load i8*, i8** %data.addr, align 8, !dbg !4116
  %call = call zeroext i8 @BM_iter_init(%struct.BMIter* %0, %struct.BMesh* %1, i8 zeroext %2, i8* %3), !dbg !4116
  %tobool = icmp ne i8 %call, 0, !dbg !4116
  br i1 %tobool, label %if.then, label %if.else, !dbg !4118

if.then:                                          ; preds = %entry
  %4 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !4119
  %call1 = call i8* @BM_iter_step(%struct.BMIter* %4), !dbg !4121
  store i8* %call1, i8** %retval, align 8, !dbg !4122
  br label %return, !dbg !4122

if.else:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !4123
  br label %return, !dbg !4123

return:                                           ; preds = %if.else, %if.then
  %5 = load i8*, i8** %retval, align 8, !dbg !4125
  ret i8* %5, !dbg !4125
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @uvedit_face_visible_test(%struct.Scene* %scene, %struct.Image* %ima, %struct.BMFace* %efa, %struct.MTexPoly* %tf) #0 !dbg !4126 {
entry:
  %retval = alloca i8, align 1
  %scene.addr = alloca %struct.Scene*, align 8
  %ima.addr = alloca %struct.Image*, align 8
  %efa.addr = alloca %struct.BMFace*, align 8
  %tf.addr = alloca %struct.MTexPoly*, align 8
  %ts = alloca %struct.ToolSettings*, align 8
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !4129, metadata !DIExpression()), !dbg !4130
  store %struct.Image* %ima, %struct.Image** %ima.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Image** %ima.addr, metadata !4131, metadata !DIExpression()), !dbg !4132
  store %struct.BMFace* %efa, %struct.BMFace** %efa.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMFace** %efa.addr, metadata !4133, metadata !DIExpression()), !dbg !4134
  store %struct.MTexPoly* %tf, %struct.MTexPoly** %tf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MTexPoly** %tf.addr, metadata !4135, metadata !DIExpression()), !dbg !4136
  call void @llvm.dbg.declare(metadata %struct.ToolSettings** %ts, metadata !4137, metadata !DIExpression()), !dbg !4140
  %0 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !4141
  %toolsettings = getelementptr inbounds %struct.Scene, %struct.Scene* %0, i32 0, i32 20, !dbg !4142
  %1 = load %struct.ToolSettings*, %struct.ToolSettings** %toolsettings, align 8, !dbg !4142
  store %struct.ToolSettings* %1, %struct.ToolSettings** %ts, align 8, !dbg !4140
  %2 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !4143
  %uv_flag = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %2, i32 0, i32 11, !dbg !4145
  %3 = load i8, i8* %uv_flag, align 2, !dbg !4145
  %conv = zext i8 %3 to i32, !dbg !4143
  %and = and i32 %conv, 2, !dbg !4146
  %tobool = icmp ne i32 %and, 0, !dbg !4146
  br i1 %tobool, label %if.then, label %if.else, !dbg !4147

if.then:                                          ; preds = %entry
  %4 = load %struct.MTexPoly*, %struct.MTexPoly** %tf.addr, align 8, !dbg !4148
  %tpage = getelementptr inbounds %struct.MTexPoly, %struct.MTexPoly* %4, i32 0, i32 0, !dbg !4149
  %5 = load %struct.Image*, %struct.Image** %tpage, align 8, !dbg !4149
  %6 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !4150
  %cmp = icmp eq %struct.Image* %5, %6, !dbg !4151
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !4152

cond.true:                                        ; preds = %if.then
  %7 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !4153
  %8 = load %struct.BMFace*, %struct.BMFace** %efa.addr, align 8, !dbg !4154
  %call = call zeroext i8 @uvedit_face_visible_nolocal(%struct.Scene* %7, %struct.BMFace* %8), !dbg !4155
  %conv2 = zext i8 %call to i32, !dbg !4155
  br label %cond.end, !dbg !4152

cond.false:                                       ; preds = %if.then
  br label %cond.end, !dbg !4152

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv2, %cond.true ], [ 0, %cond.false ], !dbg !4152
  %conv3 = trunc i32 %cond to i8, !dbg !4152
  store i8 %conv3, i8* %retval, align 1, !dbg !4156
  br label %return, !dbg !4156

if.else:                                          ; preds = %entry
  %9 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !4157
  %10 = load %struct.BMFace*, %struct.BMFace** %efa.addr, align 8, !dbg !4158
  %call4 = call zeroext i8 @uvedit_face_visible_nolocal(%struct.Scene* %9, %struct.BMFace* %10), !dbg !4159
  store i8 %call4, i8* %retval, align 1, !dbg !4160
  br label %return, !dbg !4160

return:                                           ; preds = %if.else, %cond.end
  %11 = load i8, i8* %retval, align 1, !dbg !4161
  ret i8 %11, !dbg !4161
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @uvedit_face_select_test(%struct.Scene* %scene, %struct.BMFace* %efa, i32 %cd_loop_uv_offset) #0 !dbg !4162 {
entry:
  %retval = alloca i8, align 1
  %scene.addr = alloca %struct.Scene*, align 8
  %efa.addr = alloca %struct.BMFace*, align 8
  %cd_loop_uv_offset.addr = alloca i32, align 4
  %ts = alloca %struct.ToolSettings*, align 8
  %l = alloca %struct.BMLoop*, align 8
  %luv = alloca %struct.MLoopUV*, align 8
  %liter = alloca %struct.BMIter, align 8
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !4166, metadata !DIExpression()), !dbg !4167
  store %struct.BMFace* %efa, %struct.BMFace** %efa.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMFace** %efa.addr, metadata !4168, metadata !DIExpression()), !dbg !4169
  store i32 %cd_loop_uv_offset, i32* %cd_loop_uv_offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cd_loop_uv_offset.addr, metadata !4170, metadata !DIExpression()), !dbg !4171
  call void @llvm.dbg.declare(metadata %struct.ToolSettings** %ts, metadata !4172, metadata !DIExpression()), !dbg !4173
  %0 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !4174
  %toolsettings = getelementptr inbounds %struct.Scene, %struct.Scene* %0, i32 0, i32 20, !dbg !4175
  %1 = load %struct.ToolSettings*, %struct.ToolSettings** %toolsettings, align 8, !dbg !4175
  store %struct.ToolSettings* %1, %struct.ToolSettings** %ts, align 8, !dbg !4173
  %2 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !4176
  %uv_flag = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %2, i32 0, i32 11, !dbg !4178
  %3 = load i8, i8* %uv_flag, align 2, !dbg !4178
  %conv = zext i8 %3 to i32, !dbg !4176
  %and = and i32 %conv, 1, !dbg !4179
  %tobool = icmp ne i32 %and, 0, !dbg !4179
  br i1 %tobool, label %if.then, label %if.else, !dbg !4180

if.then:                                          ; preds = %entry
  %4 = load %struct.BMFace*, %struct.BMFace** %efa.addr, align 8, !dbg !4181
  %head = getelementptr inbounds %struct.BMFace, %struct.BMFace* %4, i32 0, i32 0, !dbg !4181
  %call = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head, i8 zeroext 1), !dbg !4181
  store i8 %call, i8* %retval, align 1, !dbg !4183
  br label %return, !dbg !4183

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l, metadata !4184, metadata !DIExpression()), !dbg !4186
  call void @llvm.dbg.declare(metadata %struct.MLoopUV** %luv, metadata !4187, metadata !DIExpression()), !dbg !4188
  call void @llvm.dbg.declare(metadata %struct.BMIter* %liter, metadata !4189, metadata !DIExpression()), !dbg !4190
  %5 = load %struct.BMFace*, %struct.BMFace** %efa.addr, align 8, !dbg !4191
  %6 = bitcast %struct.BMFace* %5 to i8*, !dbg !4191
  %call1 = call i8* @BM_iter_new(%struct.BMIter* %liter, %struct.BMesh* null, i8 zeroext 11, i8* %6), !dbg !4191
  %7 = bitcast i8* %call1 to %struct.BMLoop*, !dbg !4191
  store %struct.BMLoop* %7, %struct.BMLoop** %l, align 8, !dbg !4191
  br label %for.cond, !dbg !4191

for.cond:                                         ; preds = %for.inc, %if.else
  %8 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !4193
  %tobool2 = icmp ne %struct.BMLoop* %8, null, !dbg !4191
  br i1 %tobool2, label %for.body, label %for.end, !dbg !4191

for.body:                                         ; preds = %for.cond
  %9 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !4195
  %head3 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %9, i32 0, i32 0, !dbg !4195
  %data = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head3, i32 0, i32 0, !dbg !4195
  %10 = load i8*, i8** %data, align 8, !dbg !4195
  %11 = load i32, i32* %cd_loop_uv_offset.addr, align 4, !dbg !4195
  %idx.ext = sext i32 %11 to i64, !dbg !4195
  %add.ptr = getelementptr inbounds i8, i8* %10, i64 %idx.ext, !dbg !4195
  %12 = bitcast i8* %add.ptr to %struct.MLoopUV*, !dbg !4195
  store %struct.MLoopUV* %12, %struct.MLoopUV** %luv, align 8, !dbg !4197
  %13 = load %struct.MLoopUV*, %struct.MLoopUV** %luv, align 8, !dbg !4198
  %flag = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %13, i32 0, i32 1, !dbg !4200
  %14 = load i32, i32* %flag, align 4, !dbg !4200
  %and4 = and i32 %14, 2, !dbg !4201
  %tobool5 = icmp ne i32 %and4, 0, !dbg !4201
  br i1 %tobool5, label %if.end, label %if.then6, !dbg !4202

if.then6:                                         ; preds = %for.body
  store i8 0, i8* %retval, align 1, !dbg !4203
  br label %return, !dbg !4203

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !4204

for.inc:                                          ; preds = %if.end
  %call7 = call i8* @BM_iter_step(%struct.BMIter* %liter), !dbg !4193
  %15 = bitcast i8* %call7 to %struct.BMLoop*, !dbg !4193
  store %struct.BMLoop* %15, %struct.BMLoop** %l, align 8, !dbg !4193
  br label %for.cond, !dbg !4193, !llvm.loop !4205

for.end:                                          ; preds = %for.cond
  store i8 1, i8* %retval, align 1, !dbg !4207
  br label %return, !dbg !4207

return:                                           ; preds = %for.end, %if.then6, %if.then
  %16 = load i8, i8* %retval, align 1, !dbg !4208
  ret i8 %16, !dbg !4208
}

declare dso_local void @id_us_plus(%struct.ID*) #2

declare dso_local void @id_lib_extern(%struct.ID*) #2

; Function Attrs: noinline nounwind uwtable
define internal i8* @BM_iter_step(%struct.BMIter* %iter) #0 !dbg !4209 {
entry:
  %iter.addr = alloca %struct.BMIter*, align 8
  store %struct.BMIter* %iter, %struct.BMIter** %iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMIter** %iter.addr, metadata !4212, metadata !DIExpression()), !dbg !4213
  %0 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !4214
  %step = getelementptr inbounds %struct.BMIter, %struct.BMIter* %0, i32 0, i32 2, !dbg !4215
  %1 = load i8* (i8*)*, i8* (i8*)** %step, align 8, !dbg !4215
  %2 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !4216
  %3 = bitcast %struct.BMIter* %2 to i8*, !dbg !4216
  %call = call i8* %1(i8* %3), !dbg !4214
  ret i8* %call, !dbg !4217
}

declare dso_local void @DAG_id_tag_update(%struct.ID*, i16 signext) #2

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @uvedit_face_visible_nolocal(%struct.Scene* %scene, %struct.BMFace* %efa) #0 !dbg !4218 {
entry:
  %retval = alloca i8, align 1
  %scene.addr = alloca %struct.Scene*, align 8
  %efa.addr = alloca %struct.BMFace*, align 8
  %ts = alloca %struct.ToolSettings*, align 8
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !4221, metadata !DIExpression()), !dbg !4222
  store %struct.BMFace* %efa, %struct.BMFace** %efa.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMFace** %efa.addr, metadata !4223, metadata !DIExpression()), !dbg !4224
  call void @llvm.dbg.declare(metadata %struct.ToolSettings** %ts, metadata !4225, metadata !DIExpression()), !dbg !4226
  %0 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !4227
  %toolsettings = getelementptr inbounds %struct.Scene, %struct.Scene* %0, i32 0, i32 20, !dbg !4228
  %1 = load %struct.ToolSettings*, %struct.ToolSettings** %toolsettings, align 8, !dbg !4228
  store %struct.ToolSettings* %1, %struct.ToolSettings** %ts, align 8, !dbg !4226
  %2 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !4229
  %uv_flag = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %2, i32 0, i32 11, !dbg !4231
  %3 = load i8, i8* %uv_flag, align 2, !dbg !4231
  %conv = zext i8 %3 to i32, !dbg !4229
  %and = and i32 %conv, 1, !dbg !4232
  %tobool = icmp ne i32 %and, 0, !dbg !4232
  br i1 %tobool, label %if.then, label %if.else, !dbg !4233

if.then:                                          ; preds = %entry
  %4 = load %struct.BMFace*, %struct.BMFace** %efa.addr, align 8, !dbg !4234
  %head = getelementptr inbounds %struct.BMFace, %struct.BMFace* %4, i32 0, i32 0, !dbg !4234
  %call = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head, i8 zeroext 2), !dbg !4234
  %conv1 = zext i8 %call to i32, !dbg !4234
  %cmp = icmp eq i32 %conv1, 0, !dbg !4235
  %conv2 = zext i1 %cmp to i32, !dbg !4235
  %conv3 = trunc i32 %conv2 to i8, !dbg !4236
  store i8 %conv3, i8* %retval, align 1, !dbg !4237
  br label %return, !dbg !4237

if.else:                                          ; preds = %entry
  %5 = load %struct.BMFace*, %struct.BMFace** %efa.addr, align 8, !dbg !4238
  %head4 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %5, i32 0, i32 0, !dbg !4238
  %call5 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head4, i8 zeroext 2), !dbg !4238
  %conv6 = zext i8 %call5 to i32, !dbg !4238
  %cmp7 = icmp eq i32 %conv6, 0, !dbg !4239
  br i1 %cmp7, label %land.rhs, label %land.end, !dbg !4240

land.rhs:                                         ; preds = %if.else
  %6 = load %struct.BMFace*, %struct.BMFace** %efa.addr, align 8, !dbg !4241
  %head9 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %6, i32 0, i32 0, !dbg !4241
  %call10 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head9, i8 zeroext 1), !dbg !4241
  %conv11 = zext i8 %call10 to i32, !dbg !4241
  %tobool12 = icmp ne i32 %conv11, 0, !dbg !4240
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.else
  %7 = phi i1 [ false, %if.else ], [ %tobool12, %land.rhs ], !dbg !4242
  %land.ext = zext i1 %7 to i32, !dbg !4240
  %conv13 = trunc i32 %land.ext to i8, !dbg !4243
  store i8 %conv13, i8* %retval, align 1, !dbg !4244
  br label %return, !dbg !4244

return:                                           ; preds = %land.end, %if.then
  %8 = load i8, i8* %retval, align 1, !dbg !4245
  ret i8 %8, !dbg !4245
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head, i8 zeroext %hflag) #0 !dbg !4246 {
entry:
  %head.addr = alloca %struct.BMHeader*, align 8
  %hflag.addr = alloca i8, align 1
  store %struct.BMHeader* %head, %struct.BMHeader** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMHeader** %head.addr, metadata !4252, metadata !DIExpression()), !dbg !4253
  store i8 %hflag, i8* %hflag.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %hflag.addr, metadata !4254, metadata !DIExpression()), !dbg !4255
  %0 = load %struct.BMHeader*, %struct.BMHeader** %head.addr, align 8, !dbg !4256
  %hflag1 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %0, i32 0, i32 3, !dbg !4257
  %1 = load i8, i8* %hflag1, align 1, !dbg !4257
  %conv = zext i8 %1 to i32, !dbg !4256
  %2 = load i8, i8* %hflag.addr, align 1, !dbg !4258
  %conv2 = zext i8 %2 to i32, !dbg !4258
  %and = and i32 %conv, %conv2, !dbg !4259
  %conv3 = trunc i32 %and to i8, !dbg !4256
  ret i8 %conv3, !dbg !4260
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @uvedit_face_select_set(%struct.Scene* %scene, %struct.BMEditMesh* %em, %struct.BMFace* %efa, i8 zeroext %select, i8 zeroext %do_history, i32 %cd_loop_uv_offset) #0 !dbg !4261 {
entry:
  %retval = alloca i8, align 1
  %scene.addr = alloca %struct.Scene*, align 8
  %em.addr = alloca %struct.BMEditMesh*, align 8
  %efa.addr = alloca %struct.BMFace*, align 8
  %select.addr = alloca i8, align 1
  %do_history.addr = alloca i8, align 1
  %cd_loop_uv_offset.addr = alloca i32, align 4
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !4264, metadata !DIExpression()), !dbg !4265
  store %struct.BMEditMesh* %em, %struct.BMEditMesh** %em.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em.addr, metadata !4266, metadata !DIExpression()), !dbg !4267
  store %struct.BMFace* %efa, %struct.BMFace** %efa.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMFace** %efa.addr, metadata !4268, metadata !DIExpression()), !dbg !4269
  store i8 %select, i8* %select.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %select.addr, metadata !4270, metadata !DIExpression()), !dbg !4271
  store i8 %do_history, i8* %do_history.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %do_history.addr, metadata !4272, metadata !DIExpression()), !dbg !4273
  store i32 %cd_loop_uv_offset, i32* %cd_loop_uv_offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cd_loop_uv_offset.addr, metadata !4274, metadata !DIExpression()), !dbg !4275
  %0 = load i8, i8* %select.addr, align 1, !dbg !4276
  %tobool = icmp ne i8 %0, 0, !dbg !4276
  br i1 %tobool, label %if.then, label %if.else, !dbg !4278

if.then:                                          ; preds = %entry
  %1 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !4279
  %2 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !4281
  %3 = load %struct.BMFace*, %struct.BMFace** %efa.addr, align 8, !dbg !4282
  %4 = load i8, i8* %do_history.addr, align 1, !dbg !4283
  %5 = load i32, i32* %cd_loop_uv_offset.addr, align 4, !dbg !4284
  %call = call zeroext i8 @uvedit_face_select_enable(%struct.Scene* %1, %struct.BMEditMesh* %2, %struct.BMFace* %3, i8 zeroext %4, i32 %5), !dbg !4285
  store i8 %call, i8* %retval, align 1, !dbg !4286
  br label %return, !dbg !4286

if.else:                                          ; preds = %entry
  %6 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !4287
  %7 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !4289
  %8 = load %struct.BMFace*, %struct.BMFace** %efa.addr, align 8, !dbg !4290
  %9 = load i32, i32* %cd_loop_uv_offset.addr, align 4, !dbg !4291
  %call1 = call zeroext i8 @uvedit_face_select_disable(%struct.Scene* %6, %struct.BMEditMesh* %7, %struct.BMFace* %8, i32 %9), !dbg !4292
  store i8 %call1, i8* %retval, align 1, !dbg !4293
  br label %return, !dbg !4293

return:                                           ; preds = %if.else, %if.then
  %10 = load i8, i8* %retval, align 1, !dbg !4294
  ret i8 %10, !dbg !4294
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @uvedit_face_select_enable(%struct.Scene* %scene, %struct.BMEditMesh* %em, %struct.BMFace* %efa, i8 zeroext %do_history, i32 %cd_loop_uv_offset) #0 !dbg !4295 {
entry:
  %retval = alloca i8, align 1
  %scene.addr = alloca %struct.Scene*, align 8
  %em.addr = alloca %struct.BMEditMesh*, align 8
  %efa.addr = alloca %struct.BMFace*, align 8
  %do_history.addr = alloca i8, align 1
  %cd_loop_uv_offset.addr = alloca i32, align 4
  %ts = alloca %struct.ToolSettings*, align 8
  %l = alloca %struct.BMLoop*, align 8
  %luv = alloca %struct.MLoopUV*, align 8
  %liter = alloca %struct.BMIter, align 8
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !4298, metadata !DIExpression()), !dbg !4299
  store %struct.BMEditMesh* %em, %struct.BMEditMesh** %em.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em.addr, metadata !4300, metadata !DIExpression()), !dbg !4301
  store %struct.BMFace* %efa, %struct.BMFace** %efa.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMFace** %efa.addr, metadata !4302, metadata !DIExpression()), !dbg !4303
  store i8 %do_history, i8* %do_history.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %do_history.addr, metadata !4304, metadata !DIExpression()), !dbg !4305
  store i32 %cd_loop_uv_offset, i32* %cd_loop_uv_offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cd_loop_uv_offset.addr, metadata !4306, metadata !DIExpression()), !dbg !4307
  call void @llvm.dbg.declare(metadata %struct.ToolSettings** %ts, metadata !4308, metadata !DIExpression()), !dbg !4309
  %0 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !4310
  %toolsettings = getelementptr inbounds %struct.Scene, %struct.Scene* %0, i32 0, i32 20, !dbg !4311
  %1 = load %struct.ToolSettings*, %struct.ToolSettings** %toolsettings, align 8, !dbg !4311
  store %struct.ToolSettings* %1, %struct.ToolSettings** %ts, align 8, !dbg !4309
  %2 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !4312
  %uv_flag = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %2, i32 0, i32 11, !dbg !4314
  %3 = load i8, i8* %uv_flag, align 2, !dbg !4314
  %conv = zext i8 %3 to i32, !dbg !4312
  %and = and i32 %conv, 1, !dbg !4315
  %tobool = icmp ne i32 %and, 0, !dbg !4315
  br i1 %tobool, label %if.then, label %if.else, !dbg !4316

if.then:                                          ; preds = %entry
  %4 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !4317
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %4, i32 0, i32 0, !dbg !4319
  %5 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !4319
  %6 = load %struct.BMFace*, %struct.BMFace** %efa.addr, align 8, !dbg !4320
  call void @BM_face_select_set(%struct.BMesh* %5, %struct.BMFace* %6, i8 zeroext 1), !dbg !4321
  %7 = load i8, i8* %do_history.addr, align 1, !dbg !4322
  %tobool1 = icmp ne i8 %7, 0, !dbg !4322
  br i1 %tobool1, label %if.then2, label %if.end, !dbg !4324

if.then2:                                         ; preds = %if.then
  %8 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !4325
  %bm3 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %8, i32 0, i32 0, !dbg !4325
  %9 = load %struct.BMesh*, %struct.BMesh** %bm3, align 8, !dbg !4325
  %10 = load %struct.BMFace*, %struct.BMFace** %efa.addr, align 8, !dbg !4325
  %11 = bitcast %struct.BMFace* %10 to %struct.BMElem*, !dbg !4325
  %head = getelementptr inbounds %struct.BMElem, %struct.BMElem* %11, i32 0, i32 0, !dbg !4325
  call void @_bm_select_history_store(%struct.BMesh* %9, %struct.BMHeader* %head), !dbg !4325
  br label %if.end, !dbg !4327

if.end:                                           ; preds = %if.then2, %if.then
  br label %if.end7, !dbg !4328

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l, metadata !4329, metadata !DIExpression()), !dbg !4331
  call void @llvm.dbg.declare(metadata %struct.MLoopUV** %luv, metadata !4332, metadata !DIExpression()), !dbg !4333
  call void @llvm.dbg.declare(metadata %struct.BMIter* %liter, metadata !4334, metadata !DIExpression()), !dbg !4335
  %12 = load %struct.BMFace*, %struct.BMFace** %efa.addr, align 8, !dbg !4336
  %13 = bitcast %struct.BMFace* %12 to i8*, !dbg !4336
  %call = call i8* @BM_iter_new(%struct.BMIter* %liter, %struct.BMesh* null, i8 zeroext 11, i8* %13), !dbg !4336
  %14 = bitcast i8* %call to %struct.BMLoop*, !dbg !4336
  store %struct.BMLoop* %14, %struct.BMLoop** %l, align 8, !dbg !4336
  br label %for.cond, !dbg !4336

for.cond:                                         ; preds = %for.inc, %if.else
  %15 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !4338
  %tobool4 = icmp ne %struct.BMLoop* %15, null, !dbg !4336
  br i1 %tobool4, label %for.body, label %for.end, !dbg !4336

for.body:                                         ; preds = %for.cond
  %16 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !4340
  %head5 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %16, i32 0, i32 0, !dbg !4340
  %data = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head5, i32 0, i32 0, !dbg !4340
  %17 = load i8*, i8** %data, align 8, !dbg !4340
  %18 = load i32, i32* %cd_loop_uv_offset.addr, align 4, !dbg !4340
  %idx.ext = sext i32 %18 to i64, !dbg !4340
  %add.ptr = getelementptr inbounds i8, i8* %17, i64 %idx.ext, !dbg !4340
  %19 = bitcast i8* %add.ptr to %struct.MLoopUV*, !dbg !4340
  store %struct.MLoopUV* %19, %struct.MLoopUV** %luv, align 8, !dbg !4342
  %20 = load %struct.MLoopUV*, %struct.MLoopUV** %luv, align 8, !dbg !4343
  %flag = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %20, i32 0, i32 1, !dbg !4344
  %21 = load i32, i32* %flag, align 4, !dbg !4345
  %or = or i32 %21, 2, !dbg !4345
  store i32 %or, i32* %flag, align 4, !dbg !4345
  br label %for.inc, !dbg !4346

for.inc:                                          ; preds = %for.body
  %call6 = call i8* @BM_iter_step(%struct.BMIter* %liter), !dbg !4338
  %22 = bitcast i8* %call6 to %struct.BMLoop*, !dbg !4338
  store %struct.BMLoop* %22, %struct.BMLoop** %l, align 8, !dbg !4338
  br label %for.cond, !dbg !4338, !llvm.loop !4347

for.end:                                          ; preds = %for.cond
  store i8 1, i8* %retval, align 1, !dbg !4349
  br label %return, !dbg !4349

if.end7:                                          ; preds = %if.end
  store i8 0, i8* %retval, align 1, !dbg !4350
  br label %return, !dbg !4350

return:                                           ; preds = %if.end7, %for.end
  %23 = load i8, i8* %retval, align 1, !dbg !4351
  ret i8 %23, !dbg !4351
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @uvedit_face_select_disable(%struct.Scene* %scene, %struct.BMEditMesh* %em, %struct.BMFace* %efa, i32 %cd_loop_uv_offset) #0 !dbg !4352 {
entry:
  %retval = alloca i8, align 1
  %scene.addr = alloca %struct.Scene*, align 8
  %em.addr = alloca %struct.BMEditMesh*, align 8
  %efa.addr = alloca %struct.BMFace*, align 8
  %cd_loop_uv_offset.addr = alloca i32, align 4
  %ts = alloca %struct.ToolSettings*, align 8
  %l = alloca %struct.BMLoop*, align 8
  %luv = alloca %struct.MLoopUV*, align 8
  %liter = alloca %struct.BMIter, align 8
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !4355, metadata !DIExpression()), !dbg !4356
  store %struct.BMEditMesh* %em, %struct.BMEditMesh** %em.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em.addr, metadata !4357, metadata !DIExpression()), !dbg !4358
  store %struct.BMFace* %efa, %struct.BMFace** %efa.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMFace** %efa.addr, metadata !4359, metadata !DIExpression()), !dbg !4360
  store i32 %cd_loop_uv_offset, i32* %cd_loop_uv_offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cd_loop_uv_offset.addr, metadata !4361, metadata !DIExpression()), !dbg !4362
  call void @llvm.dbg.declare(metadata %struct.ToolSettings** %ts, metadata !4363, metadata !DIExpression()), !dbg !4364
  %0 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !4365
  %toolsettings = getelementptr inbounds %struct.Scene, %struct.Scene* %0, i32 0, i32 20, !dbg !4366
  %1 = load %struct.ToolSettings*, %struct.ToolSettings** %toolsettings, align 8, !dbg !4366
  store %struct.ToolSettings* %1, %struct.ToolSettings** %ts, align 8, !dbg !4364
  %2 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !4367
  %uv_flag = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %2, i32 0, i32 11, !dbg !4369
  %3 = load i8, i8* %uv_flag, align 2, !dbg !4369
  %conv = zext i8 %3 to i32, !dbg !4367
  %and = and i32 %conv, 1, !dbg !4370
  %tobool = icmp ne i32 %and, 0, !dbg !4370
  br i1 %tobool, label %if.then, label %if.else, !dbg !4371

if.then:                                          ; preds = %entry
  %4 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !4372
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %4, i32 0, i32 0, !dbg !4374
  %5 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !4374
  %6 = load %struct.BMFace*, %struct.BMFace** %efa.addr, align 8, !dbg !4375
  call void @BM_face_select_set(%struct.BMesh* %5, %struct.BMFace* %6, i8 zeroext 0), !dbg !4376
  br label %if.end, !dbg !4377

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l, metadata !4378, metadata !DIExpression()), !dbg !4380
  call void @llvm.dbg.declare(metadata %struct.MLoopUV** %luv, metadata !4381, metadata !DIExpression()), !dbg !4382
  call void @llvm.dbg.declare(metadata %struct.BMIter* %liter, metadata !4383, metadata !DIExpression()), !dbg !4384
  %7 = load %struct.BMFace*, %struct.BMFace** %efa.addr, align 8, !dbg !4385
  %8 = bitcast %struct.BMFace* %7 to i8*, !dbg !4385
  %call = call i8* @BM_iter_new(%struct.BMIter* %liter, %struct.BMesh* null, i8 zeroext 11, i8* %8), !dbg !4385
  %9 = bitcast i8* %call to %struct.BMLoop*, !dbg !4385
  store %struct.BMLoop* %9, %struct.BMLoop** %l, align 8, !dbg !4385
  br label %for.cond, !dbg !4385

for.cond:                                         ; preds = %for.inc, %if.else
  %10 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !4387
  %tobool1 = icmp ne %struct.BMLoop* %10, null, !dbg !4385
  br i1 %tobool1, label %for.body, label %for.end, !dbg !4385

for.body:                                         ; preds = %for.cond
  %11 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !4389
  %head = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %11, i32 0, i32 0, !dbg !4389
  %data = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head, i32 0, i32 0, !dbg !4389
  %12 = load i8*, i8** %data, align 8, !dbg !4389
  %13 = load i32, i32* %cd_loop_uv_offset.addr, align 4, !dbg !4389
  %idx.ext = sext i32 %13 to i64, !dbg !4389
  %add.ptr = getelementptr inbounds i8, i8* %12, i64 %idx.ext, !dbg !4389
  %14 = bitcast i8* %add.ptr to %struct.MLoopUV*, !dbg !4389
  store %struct.MLoopUV* %14, %struct.MLoopUV** %luv, align 8, !dbg !4391
  %15 = load %struct.MLoopUV*, %struct.MLoopUV** %luv, align 8, !dbg !4392
  %flag = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %15, i32 0, i32 1, !dbg !4393
  %16 = load i32, i32* %flag, align 4, !dbg !4394
  %and2 = and i32 %16, -3, !dbg !4394
  store i32 %and2, i32* %flag, align 4, !dbg !4394
  br label %for.inc, !dbg !4395

for.inc:                                          ; preds = %for.body
  %call3 = call i8* @BM_iter_step(%struct.BMIter* %liter), !dbg !4387
  %17 = bitcast i8* %call3 to %struct.BMLoop*, !dbg !4387
  store %struct.BMLoop* %17, %struct.BMLoop** %l, align 8, !dbg !4387
  br label %for.cond, !dbg !4387, !llvm.loop !4396

for.end:                                          ; preds = %for.cond
  store i8 1, i8* %retval, align 1, !dbg !4398
  br label %return, !dbg !4398

if.end:                                           ; preds = %if.then
  store i8 0, i8* %retval, align 1, !dbg !4399
  br label %return, !dbg !4399

return:                                           ; preds = %if.end, %for.end
  %18 = load i8, i8* %retval, align 1, !dbg !4400
  ret i8 %18, !dbg !4400
}

declare dso_local void @BM_face_select_set(%struct.BMesh*, %struct.BMFace*, i8 zeroext) #2

declare dso_local void @_bm_select_history_store(%struct.BMesh*, %struct.BMHeader*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @uvedit_edge_select_test(%struct.Scene* %scene, %struct.BMLoop* %l, i32 %cd_loop_uv_offset) #0 !dbg !4401 {
entry:
  %retval = alloca i8, align 1
  %scene.addr = alloca %struct.Scene*, align 8
  %l.addr = alloca %struct.BMLoop*, align 8
  %cd_loop_uv_offset.addr = alloca i32, align 4
  %ts = alloca %struct.ToolSettings*, align 8
  %luv1 = alloca %struct.MLoopUV*, align 8
  %luv2 = alloca %struct.MLoopUV*, align 8
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !4404, metadata !DIExpression()), !dbg !4405
  store %struct.BMLoop* %l, %struct.BMLoop** %l.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l.addr, metadata !4406, metadata !DIExpression()), !dbg !4407
  store i32 %cd_loop_uv_offset, i32* %cd_loop_uv_offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cd_loop_uv_offset.addr, metadata !4408, metadata !DIExpression()), !dbg !4409
  call void @llvm.dbg.declare(metadata %struct.ToolSettings** %ts, metadata !4410, metadata !DIExpression()), !dbg !4411
  %0 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !4412
  %toolsettings = getelementptr inbounds %struct.Scene, %struct.Scene* %0, i32 0, i32 20, !dbg !4413
  %1 = load %struct.ToolSettings*, %struct.ToolSettings** %toolsettings, align 8, !dbg !4413
  store %struct.ToolSettings* %1, %struct.ToolSettings** %ts, align 8, !dbg !4411
  %2 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !4414
  %uv_flag = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %2, i32 0, i32 11, !dbg !4416
  %3 = load i8, i8* %uv_flag, align 2, !dbg !4416
  %conv = zext i8 %3 to i32, !dbg !4414
  %and = and i32 %conv, 1, !dbg !4417
  %tobool = icmp ne i32 %and, 0, !dbg !4417
  br i1 %tobool, label %if.then, label %if.else22, !dbg !4418

if.then:                                          ; preds = %entry
  %4 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !4419
  %selectmode = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %4, i32 0, i32 8, !dbg !4422
  %5 = load i16, i16* %selectmode, align 2, !dbg !4422
  %conv1 = sext i16 %5 to i32, !dbg !4419
  %and2 = and i32 %conv1, 4, !dbg !4423
  %tobool3 = icmp ne i32 %and2, 0, !dbg !4423
  br i1 %tobool3, label %if.then4, label %if.else, !dbg !4424

if.then4:                                         ; preds = %if.then
  %6 = load %struct.BMLoop*, %struct.BMLoop** %l.addr, align 8, !dbg !4425
  %f = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %6, i32 0, i32 3, !dbg !4425
  %7 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !4425
  %head = getelementptr inbounds %struct.BMFace, %struct.BMFace* %7, i32 0, i32 0, !dbg !4425
  %call = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head, i8 zeroext 1), !dbg !4425
  store i8 %call, i8* %retval, align 1, !dbg !4427
  br label %return, !dbg !4427

if.else:                                          ; preds = %if.then
  %8 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !4428
  %selectmode5 = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %8, i32 0, i32 8, !dbg !4430
  %9 = load i16, i16* %selectmode5, align 2, !dbg !4430
  %conv6 = sext i16 %9 to i32, !dbg !4428
  %cmp = icmp eq i32 %conv6, 2, !dbg !4431
  br i1 %cmp, label %if.then8, label %if.else11, !dbg !4432

if.then8:                                         ; preds = %if.else
  %10 = load %struct.BMLoop*, %struct.BMLoop** %l.addr, align 8, !dbg !4433
  %e = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %10, i32 0, i32 2, !dbg !4433
  %11 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !4433
  %head9 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %11, i32 0, i32 0, !dbg !4433
  %call10 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head9, i8 zeroext 1), !dbg !4433
  store i8 %call10, i8* %retval, align 1, !dbg !4435
  br label %return, !dbg !4435

if.else11:                                        ; preds = %if.else
  %12 = load %struct.BMLoop*, %struct.BMLoop** %l.addr, align 8, !dbg !4436
  %v = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %12, i32 0, i32 1, !dbg !4436
  %13 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !4436
  %head12 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %13, i32 0, i32 0, !dbg !4436
  %call13 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head12, i8 zeroext 1), !dbg !4436
  %conv14 = zext i8 %call13 to i32, !dbg !4436
  %tobool15 = icmp ne i32 %conv14, 0, !dbg !4436
  br i1 %tobool15, label %land.rhs, label %land.end, !dbg !4438

land.rhs:                                         ; preds = %if.else11
  %14 = load %struct.BMLoop*, %struct.BMLoop** %l.addr, align 8, !dbg !4439
  %next = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %14, i32 0, i32 6, !dbg !4439
  %15 = load %struct.BMLoop*, %struct.BMLoop** %next, align 8, !dbg !4439
  %v16 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %15, i32 0, i32 1, !dbg !4439
  %16 = load %struct.BMVert*, %struct.BMVert** %v16, align 8, !dbg !4439
  %head17 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %16, i32 0, i32 0, !dbg !4439
  %call18 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head17, i8 zeroext 1), !dbg !4439
  %conv19 = zext i8 %call18 to i32, !dbg !4439
  %tobool20 = icmp ne i32 %conv19, 0, !dbg !4438
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.else11
  %17 = phi i1 [ false, %if.else11 ], [ %tobool20, %land.rhs ], !dbg !4440
  %land.ext = zext i1 %17 to i32, !dbg !4438
  %conv21 = trunc i32 %land.ext to i8, !dbg !4436
  store i8 %conv21, i8* %retval, align 1, !dbg !4441
  br label %return, !dbg !4441

if.else22:                                        ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.MLoopUV** %luv1, metadata !4442, metadata !DIExpression()), !dbg !4444
  call void @llvm.dbg.declare(metadata %struct.MLoopUV** %luv2, metadata !4445, metadata !DIExpression()), !dbg !4446
  %18 = load %struct.BMLoop*, %struct.BMLoop** %l.addr, align 8, !dbg !4447
  %head23 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %18, i32 0, i32 0, !dbg !4447
  %data = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head23, i32 0, i32 0, !dbg !4447
  %19 = load i8*, i8** %data, align 8, !dbg !4447
  %20 = load i32, i32* %cd_loop_uv_offset.addr, align 4, !dbg !4447
  %idx.ext = sext i32 %20 to i64, !dbg !4447
  %add.ptr = getelementptr inbounds i8, i8* %19, i64 %idx.ext, !dbg !4447
  %21 = bitcast i8* %add.ptr to %struct.MLoopUV*, !dbg !4447
  store %struct.MLoopUV* %21, %struct.MLoopUV** %luv1, align 8, !dbg !4448
  %22 = load %struct.BMLoop*, %struct.BMLoop** %l.addr, align 8, !dbg !4449
  %next24 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %22, i32 0, i32 6, !dbg !4449
  %23 = load %struct.BMLoop*, %struct.BMLoop** %next24, align 8, !dbg !4449
  %head25 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %23, i32 0, i32 0, !dbg !4449
  %data26 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head25, i32 0, i32 0, !dbg !4449
  %24 = load i8*, i8** %data26, align 8, !dbg !4449
  %25 = load i32, i32* %cd_loop_uv_offset.addr, align 4, !dbg !4449
  %idx.ext27 = sext i32 %25 to i64, !dbg !4449
  %add.ptr28 = getelementptr inbounds i8, i8* %24, i64 %idx.ext27, !dbg !4449
  %26 = bitcast i8* %add.ptr28 to %struct.MLoopUV*, !dbg !4449
  store %struct.MLoopUV* %26, %struct.MLoopUV** %luv2, align 8, !dbg !4450
  %27 = load %struct.MLoopUV*, %struct.MLoopUV** %luv1, align 8, !dbg !4451
  %flag = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %27, i32 0, i32 1, !dbg !4452
  %28 = load i32, i32* %flag, align 4, !dbg !4452
  %and29 = and i32 %28, 2, !dbg !4453
  %tobool30 = icmp ne i32 %and29, 0, !dbg !4453
  br i1 %tobool30, label %land.rhs31, label %land.end35, !dbg !4454

land.rhs31:                                       ; preds = %if.else22
  %29 = load %struct.MLoopUV*, %struct.MLoopUV** %luv2, align 8, !dbg !4455
  %flag32 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %29, i32 0, i32 1, !dbg !4456
  %30 = load i32, i32* %flag32, align 4, !dbg !4456
  %and33 = and i32 %30, 2, !dbg !4457
  %tobool34 = icmp ne i32 %and33, 0, !dbg !4454
  br label %land.end35

land.end35:                                       ; preds = %land.rhs31, %if.else22
  %31 = phi i1 [ false, %if.else22 ], [ %tobool34, %land.rhs31 ], !dbg !4458
  %land.ext36 = zext i1 %31 to i32, !dbg !4454
  %conv37 = trunc i32 %land.ext36 to i8, !dbg !4459
  store i8 %conv37, i8* %retval, align 1, !dbg !4460
  br label %return, !dbg !4460

return:                                           ; preds = %land.end35, %land.end, %if.then8, %if.then4
  %32 = load i8, i8* %retval, align 1, !dbg !4461
  ret i8 %32, !dbg !4461
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @uvedit_edge_select_set(%struct.BMEditMesh* %em, %struct.Scene* %scene, %struct.BMLoop* %l, i8 zeroext %select, i8 zeroext %do_history, i32 %cd_loop_uv_offset) #0 !dbg !4462 {
entry:
  %em.addr = alloca %struct.BMEditMesh*, align 8
  %scene.addr = alloca %struct.Scene*, align 8
  %l.addr = alloca %struct.BMLoop*, align 8
  %select.addr = alloca i8, align 1
  %do_history.addr = alloca i8, align 1
  %cd_loop_uv_offset.addr = alloca i32, align 4
  store %struct.BMEditMesh* %em, %struct.BMEditMesh** %em.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em.addr, metadata !4465, metadata !DIExpression()), !dbg !4466
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !4467, metadata !DIExpression()), !dbg !4468
  store %struct.BMLoop* %l, %struct.BMLoop** %l.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l.addr, metadata !4469, metadata !DIExpression()), !dbg !4470
  store i8 %select, i8* %select.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %select.addr, metadata !4471, metadata !DIExpression()), !dbg !4472
  store i8 %do_history, i8* %do_history.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %do_history.addr, metadata !4473, metadata !DIExpression()), !dbg !4474
  store i32 %cd_loop_uv_offset, i32* %cd_loop_uv_offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cd_loop_uv_offset.addr, metadata !4475, metadata !DIExpression()), !dbg !4476
  %0 = load i8, i8* %select.addr, align 1, !dbg !4477
  %tobool = icmp ne i8 %0, 0, !dbg !4477
  br i1 %tobool, label %if.then, label %if.else, !dbg !4479

if.then:                                          ; preds = %entry
  %1 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !4480
  %2 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !4482
  %3 = load %struct.BMLoop*, %struct.BMLoop** %l.addr, align 8, !dbg !4483
  %4 = load i8, i8* %do_history.addr, align 1, !dbg !4484
  %5 = load i32, i32* %cd_loop_uv_offset.addr, align 4, !dbg !4485
  call void @uvedit_edge_select_enable(%struct.BMEditMesh* %1, %struct.Scene* %2, %struct.BMLoop* %3, i8 zeroext %4, i32 %5), !dbg !4486
  br label %if.end, !dbg !4487

if.else:                                          ; preds = %entry
  %6 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !4488
  %7 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !4490
  %8 = load %struct.BMLoop*, %struct.BMLoop** %l.addr, align 8, !dbg !4491
  %9 = load i32, i32* %cd_loop_uv_offset.addr, align 4, !dbg !4492
  call void @uvedit_edge_select_disable(%struct.BMEditMesh* %6, %struct.Scene* %7, %struct.BMLoop* %8, i32 %9), !dbg !4493
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !4494
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @uvedit_edge_select_enable(%struct.BMEditMesh* %em, %struct.Scene* %scene, %struct.BMLoop* %l, i8 zeroext %do_history, i32 %cd_loop_uv_offset) #0 !dbg !4495 {
entry:
  %em.addr = alloca %struct.BMEditMesh*, align 8
  %scene.addr = alloca %struct.Scene*, align 8
  %l.addr = alloca %struct.BMLoop*, align 8
  %do_history.addr = alloca i8, align 1
  %cd_loop_uv_offset.addr = alloca i32, align 4
  %ts = alloca %struct.ToolSettings*, align 8
  %luv1 = alloca %struct.MLoopUV*, align 8
  %luv2 = alloca %struct.MLoopUV*, align 8
  store %struct.BMEditMesh* %em, %struct.BMEditMesh** %em.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em.addr, metadata !4498, metadata !DIExpression()), !dbg !4499
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !4500, metadata !DIExpression()), !dbg !4501
  store %struct.BMLoop* %l, %struct.BMLoop** %l.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l.addr, metadata !4502, metadata !DIExpression()), !dbg !4503
  store i8 %do_history, i8* %do_history.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %do_history.addr, metadata !4504, metadata !DIExpression()), !dbg !4505
  store i32 %cd_loop_uv_offset, i32* %cd_loop_uv_offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cd_loop_uv_offset.addr, metadata !4506, metadata !DIExpression()), !dbg !4507
  call void @llvm.dbg.declare(metadata %struct.ToolSettings** %ts, metadata !4508, metadata !DIExpression()), !dbg !4509
  %0 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !4510
  %toolsettings = getelementptr inbounds %struct.Scene, %struct.Scene* %0, i32 0, i32 20, !dbg !4511
  %1 = load %struct.ToolSettings*, %struct.ToolSettings** %toolsettings, align 8, !dbg !4511
  store %struct.ToolSettings* %1, %struct.ToolSettings** %ts, align 8, !dbg !4509
  %2 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !4512
  %uv_flag = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %2, i32 0, i32 11, !dbg !4514
  %3 = load i8, i8* %uv_flag, align 2, !dbg !4514
  %conv = zext i8 %3 to i32, !dbg !4512
  %and = and i32 %conv, 1, !dbg !4515
  %tobool = icmp ne i32 %and, 0, !dbg !4515
  br i1 %tobool, label %if.then, label %if.else22, !dbg !4516

if.then:                                          ; preds = %entry
  %4 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !4517
  %selectmode = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %4, i32 0, i32 8, !dbg !4520
  %5 = load i16, i16* %selectmode, align 2, !dbg !4520
  %conv1 = sext i16 %5 to i32, !dbg !4517
  %and2 = and i32 %conv1, 4, !dbg !4521
  %tobool3 = icmp ne i32 %and2, 0, !dbg !4521
  br i1 %tobool3, label %if.then4, label %if.else, !dbg !4522

if.then4:                                         ; preds = %if.then
  %6 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !4523
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %6, i32 0, i32 0, !dbg !4524
  %7 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !4524
  %8 = load %struct.BMLoop*, %struct.BMLoop** %l.addr, align 8, !dbg !4525
  %f = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %8, i32 0, i32 3, !dbg !4526
  %9 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !4526
  call void @BM_face_select_set(%struct.BMesh* %7, %struct.BMFace* %9, i8 zeroext 1), !dbg !4527
  br label %if.end16, !dbg !4527

if.else:                                          ; preds = %if.then
  %10 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !4528
  %selectmode5 = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %10, i32 0, i32 8, !dbg !4530
  %11 = load i16, i16* %selectmode5, align 2, !dbg !4530
  %conv6 = sext i16 %11 to i32, !dbg !4528
  %and7 = and i32 %conv6, 2, !dbg !4531
  %tobool8 = icmp ne i32 %and7, 0, !dbg !4531
  br i1 %tobool8, label %if.then9, label %if.else11, !dbg !4532

if.then9:                                         ; preds = %if.else
  %12 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !4533
  %bm10 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %12, i32 0, i32 0, !dbg !4534
  %13 = load %struct.BMesh*, %struct.BMesh** %bm10, align 8, !dbg !4534
  %14 = load %struct.BMLoop*, %struct.BMLoop** %l.addr, align 8, !dbg !4535
  %e = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %14, i32 0, i32 2, !dbg !4536
  %15 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !4536
  call void @BM_edge_select_set(%struct.BMesh* %13, %struct.BMEdge* %15, i8 zeroext 1), !dbg !4537
  br label %if.end, !dbg !4537

if.else11:                                        ; preds = %if.else
  %16 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !4538
  %bm12 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %16, i32 0, i32 0, !dbg !4540
  %17 = load %struct.BMesh*, %struct.BMesh** %bm12, align 8, !dbg !4540
  %18 = load %struct.BMLoop*, %struct.BMLoop** %l.addr, align 8, !dbg !4541
  %e13 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %18, i32 0, i32 2, !dbg !4542
  %19 = load %struct.BMEdge*, %struct.BMEdge** %e13, align 8, !dbg !4542
  %v1 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %19, i32 0, i32 2, !dbg !4543
  %20 = load %struct.BMVert*, %struct.BMVert** %v1, align 8, !dbg !4543
  call void @BM_vert_select_set(%struct.BMesh* %17, %struct.BMVert* %20, i8 zeroext 1), !dbg !4544
  %21 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !4545
  %bm14 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %21, i32 0, i32 0, !dbg !4546
  %22 = load %struct.BMesh*, %struct.BMesh** %bm14, align 8, !dbg !4546
  %23 = load %struct.BMLoop*, %struct.BMLoop** %l.addr, align 8, !dbg !4547
  %e15 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %23, i32 0, i32 2, !dbg !4548
  %24 = load %struct.BMEdge*, %struct.BMEdge** %e15, align 8, !dbg !4548
  %v2 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %24, i32 0, i32 3, !dbg !4549
  %25 = load %struct.BMVert*, %struct.BMVert** %v2, align 8, !dbg !4549
  call void @BM_vert_select_set(%struct.BMesh* %22, %struct.BMVert* %25, i8 zeroext 1), !dbg !4550
  br label %if.end

if.end:                                           ; preds = %if.else11, %if.then9
  br label %if.end16

if.end16:                                         ; preds = %if.end, %if.then4
  %26 = load i8, i8* %do_history.addr, align 1, !dbg !4551
  %tobool17 = icmp ne i8 %26, 0, !dbg !4551
  br i1 %tobool17, label %if.then18, label %if.end21, !dbg !4553

if.then18:                                        ; preds = %if.end16
  %27 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !4554
  %bm19 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %27, i32 0, i32 0, !dbg !4554
  %28 = load %struct.BMesh*, %struct.BMesh** %bm19, align 8, !dbg !4554
  %29 = load %struct.BMLoop*, %struct.BMLoop** %l.addr, align 8, !dbg !4554
  %e20 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %29, i32 0, i32 2, !dbg !4554
  %30 = load %struct.BMEdge*, %struct.BMEdge** %e20, align 8, !dbg !4554
  %31 = bitcast %struct.BMEdge* %30 to %struct.BMElem*, !dbg !4554
  %head = getelementptr inbounds %struct.BMElem, %struct.BMElem* %31, i32 0, i32 0, !dbg !4554
  call void @_bm_select_history_store(%struct.BMesh* %28, %struct.BMHeader* %head), !dbg !4554
  br label %if.end21, !dbg !4556

if.end21:                                         ; preds = %if.then18, %if.end16
  br label %if.end30, !dbg !4557

if.else22:                                        ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.MLoopUV** %luv1, metadata !4558, metadata !DIExpression()), !dbg !4560
  call void @llvm.dbg.declare(metadata %struct.MLoopUV** %luv2, metadata !4561, metadata !DIExpression()), !dbg !4562
  %32 = load %struct.BMLoop*, %struct.BMLoop** %l.addr, align 8, !dbg !4563
  %head23 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %32, i32 0, i32 0, !dbg !4563
  %data = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head23, i32 0, i32 0, !dbg !4563
  %33 = load i8*, i8** %data, align 8, !dbg !4563
  %34 = load i32, i32* %cd_loop_uv_offset.addr, align 4, !dbg !4563
  %idx.ext = sext i32 %34 to i64, !dbg !4563
  %add.ptr = getelementptr inbounds i8, i8* %33, i64 %idx.ext, !dbg !4563
  %35 = bitcast i8* %add.ptr to %struct.MLoopUV*, !dbg !4563
  store %struct.MLoopUV* %35, %struct.MLoopUV** %luv1, align 8, !dbg !4564
  %36 = load %struct.BMLoop*, %struct.BMLoop** %l.addr, align 8, !dbg !4565
  %next = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %36, i32 0, i32 6, !dbg !4565
  %37 = load %struct.BMLoop*, %struct.BMLoop** %next, align 8, !dbg !4565
  %head24 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %37, i32 0, i32 0, !dbg !4565
  %data25 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head24, i32 0, i32 0, !dbg !4565
  %38 = load i8*, i8** %data25, align 8, !dbg !4565
  %39 = load i32, i32* %cd_loop_uv_offset.addr, align 4, !dbg !4565
  %idx.ext26 = sext i32 %39 to i64, !dbg !4565
  %add.ptr27 = getelementptr inbounds i8, i8* %38, i64 %idx.ext26, !dbg !4565
  %40 = bitcast i8* %add.ptr27 to %struct.MLoopUV*, !dbg !4565
  store %struct.MLoopUV* %40, %struct.MLoopUV** %luv2, align 8, !dbg !4566
  %41 = load %struct.MLoopUV*, %struct.MLoopUV** %luv1, align 8, !dbg !4567
  %flag = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %41, i32 0, i32 1, !dbg !4568
  %42 = load i32, i32* %flag, align 4, !dbg !4569
  %or = or i32 %42, 2, !dbg !4569
  store i32 %or, i32* %flag, align 4, !dbg !4569
  %43 = load %struct.MLoopUV*, %struct.MLoopUV** %luv2, align 8, !dbg !4570
  %flag28 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %43, i32 0, i32 1, !dbg !4571
  %44 = load i32, i32* %flag28, align 4, !dbg !4572
  %or29 = or i32 %44, 2, !dbg !4572
  store i32 %or29, i32* %flag28, align 4, !dbg !4572
  br label %if.end30

if.end30:                                         ; preds = %if.else22, %if.end21
  ret void, !dbg !4573
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @uvedit_edge_select_disable(%struct.BMEditMesh* %em, %struct.Scene* %scene, %struct.BMLoop* %l, i32 %cd_loop_uv_offset) #0 !dbg !4574 {
entry:
  %em.addr = alloca %struct.BMEditMesh*, align 8
  %scene.addr = alloca %struct.Scene*, align 8
  %l.addr = alloca %struct.BMLoop*, align 8
  %cd_loop_uv_offset.addr = alloca i32, align 4
  %ts = alloca %struct.ToolSettings*, align 8
  %luv1 = alloca %struct.MLoopUV*, align 8
  %luv2 = alloca %struct.MLoopUV*, align 8
  store %struct.BMEditMesh* %em, %struct.BMEditMesh** %em.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em.addr, metadata !4577, metadata !DIExpression()), !dbg !4578
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !4579, metadata !DIExpression()), !dbg !4580
  store %struct.BMLoop* %l, %struct.BMLoop** %l.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l.addr, metadata !4581, metadata !DIExpression()), !dbg !4582
  store i32 %cd_loop_uv_offset, i32* %cd_loop_uv_offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cd_loop_uv_offset.addr, metadata !4583, metadata !DIExpression()), !dbg !4584
  call void @llvm.dbg.declare(metadata %struct.ToolSettings** %ts, metadata !4585, metadata !DIExpression()), !dbg !4586
  %0 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !4587
  %toolsettings = getelementptr inbounds %struct.Scene, %struct.Scene* %0, i32 0, i32 20, !dbg !4588
  %1 = load %struct.ToolSettings*, %struct.ToolSettings** %toolsettings, align 8, !dbg !4588
  store %struct.ToolSettings* %1, %struct.ToolSettings** %ts, align 8, !dbg !4586
  %2 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !4589
  %uv_flag = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %2, i32 0, i32 11, !dbg !4591
  %3 = load i8, i8* %uv_flag, align 2, !dbg !4591
  %conv = zext i8 %3 to i32, !dbg !4589
  %and = and i32 %conv, 1, !dbg !4592
  %tobool = icmp ne i32 %and, 0, !dbg !4592
  br i1 %tobool, label %if.then, label %if.else17, !dbg !4593

if.then:                                          ; preds = %entry
  %4 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !4594
  %selectmode = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %4, i32 0, i32 8, !dbg !4597
  %5 = load i16, i16* %selectmode, align 2, !dbg !4597
  %conv1 = sext i16 %5 to i32, !dbg !4594
  %and2 = and i32 %conv1, 4, !dbg !4598
  %tobool3 = icmp ne i32 %and2, 0, !dbg !4598
  br i1 %tobool3, label %if.then4, label %if.else, !dbg !4599

if.then4:                                         ; preds = %if.then
  %6 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !4600
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %6, i32 0, i32 0, !dbg !4601
  %7 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !4601
  %8 = load %struct.BMLoop*, %struct.BMLoop** %l.addr, align 8, !dbg !4602
  %f = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %8, i32 0, i32 3, !dbg !4603
  %9 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !4603
  call void @BM_face_select_set(%struct.BMesh* %7, %struct.BMFace* %9, i8 zeroext 0), !dbg !4604
  br label %if.end16, !dbg !4604

if.else:                                          ; preds = %if.then
  %10 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !4605
  %selectmode5 = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %10, i32 0, i32 8, !dbg !4607
  %11 = load i16, i16* %selectmode5, align 2, !dbg !4607
  %conv6 = sext i16 %11 to i32, !dbg !4605
  %and7 = and i32 %conv6, 2, !dbg !4608
  %tobool8 = icmp ne i32 %and7, 0, !dbg !4608
  br i1 %tobool8, label %if.then9, label %if.else11, !dbg !4609

if.then9:                                         ; preds = %if.else
  %12 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !4610
  %bm10 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %12, i32 0, i32 0, !dbg !4611
  %13 = load %struct.BMesh*, %struct.BMesh** %bm10, align 8, !dbg !4611
  %14 = load %struct.BMLoop*, %struct.BMLoop** %l.addr, align 8, !dbg !4612
  %e = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %14, i32 0, i32 2, !dbg !4613
  %15 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !4613
  call void @BM_edge_select_set(%struct.BMesh* %13, %struct.BMEdge* %15, i8 zeroext 0), !dbg !4614
  br label %if.end, !dbg !4614

if.else11:                                        ; preds = %if.else
  %16 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !4615
  %bm12 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %16, i32 0, i32 0, !dbg !4617
  %17 = load %struct.BMesh*, %struct.BMesh** %bm12, align 8, !dbg !4617
  %18 = load %struct.BMLoop*, %struct.BMLoop** %l.addr, align 8, !dbg !4618
  %e13 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %18, i32 0, i32 2, !dbg !4619
  %19 = load %struct.BMEdge*, %struct.BMEdge** %e13, align 8, !dbg !4619
  %v1 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %19, i32 0, i32 2, !dbg !4620
  %20 = load %struct.BMVert*, %struct.BMVert** %v1, align 8, !dbg !4620
  call void @BM_vert_select_set(%struct.BMesh* %17, %struct.BMVert* %20, i8 zeroext 0), !dbg !4621
  %21 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !4622
  %bm14 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %21, i32 0, i32 0, !dbg !4623
  %22 = load %struct.BMesh*, %struct.BMesh** %bm14, align 8, !dbg !4623
  %23 = load %struct.BMLoop*, %struct.BMLoop** %l.addr, align 8, !dbg !4624
  %e15 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %23, i32 0, i32 2, !dbg !4625
  %24 = load %struct.BMEdge*, %struct.BMEdge** %e15, align 8, !dbg !4625
  %v2 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %24, i32 0, i32 3, !dbg !4626
  %25 = load %struct.BMVert*, %struct.BMVert** %v2, align 8, !dbg !4626
  call void @BM_vert_select_set(%struct.BMesh* %22, %struct.BMVert* %25, i8 zeroext 0), !dbg !4627
  br label %if.end

if.end:                                           ; preds = %if.else11, %if.then9
  br label %if.end16

if.end16:                                         ; preds = %if.end, %if.then4
  br label %if.end25, !dbg !4628

if.else17:                                        ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.MLoopUV** %luv1, metadata !4629, metadata !DIExpression()), !dbg !4631
  call void @llvm.dbg.declare(metadata %struct.MLoopUV** %luv2, metadata !4632, metadata !DIExpression()), !dbg !4633
  %26 = load %struct.BMLoop*, %struct.BMLoop** %l.addr, align 8, !dbg !4634
  %head = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %26, i32 0, i32 0, !dbg !4634
  %data = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head, i32 0, i32 0, !dbg !4634
  %27 = load i8*, i8** %data, align 8, !dbg !4634
  %28 = load i32, i32* %cd_loop_uv_offset.addr, align 4, !dbg !4634
  %idx.ext = sext i32 %28 to i64, !dbg !4634
  %add.ptr = getelementptr inbounds i8, i8* %27, i64 %idx.ext, !dbg !4634
  %29 = bitcast i8* %add.ptr to %struct.MLoopUV*, !dbg !4634
  store %struct.MLoopUV* %29, %struct.MLoopUV** %luv1, align 8, !dbg !4635
  %30 = load %struct.BMLoop*, %struct.BMLoop** %l.addr, align 8, !dbg !4636
  %next = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %30, i32 0, i32 6, !dbg !4636
  %31 = load %struct.BMLoop*, %struct.BMLoop** %next, align 8, !dbg !4636
  %head18 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %31, i32 0, i32 0, !dbg !4636
  %data19 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head18, i32 0, i32 0, !dbg !4636
  %32 = load i8*, i8** %data19, align 8, !dbg !4636
  %33 = load i32, i32* %cd_loop_uv_offset.addr, align 4, !dbg !4636
  %idx.ext20 = sext i32 %33 to i64, !dbg !4636
  %add.ptr21 = getelementptr inbounds i8, i8* %32, i64 %idx.ext20, !dbg !4636
  %34 = bitcast i8* %add.ptr21 to %struct.MLoopUV*, !dbg !4636
  store %struct.MLoopUV* %34, %struct.MLoopUV** %luv2, align 8, !dbg !4637
  %35 = load %struct.MLoopUV*, %struct.MLoopUV** %luv1, align 8, !dbg !4638
  %flag = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %35, i32 0, i32 1, !dbg !4639
  %36 = load i32, i32* %flag, align 4, !dbg !4640
  %and22 = and i32 %36, -3, !dbg !4640
  store i32 %and22, i32* %flag, align 4, !dbg !4640
  %37 = load %struct.MLoopUV*, %struct.MLoopUV** %luv2, align 8, !dbg !4641
  %flag23 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %37, i32 0, i32 1, !dbg !4642
  %38 = load i32, i32* %flag23, align 4, !dbg !4643
  %and24 = and i32 %38, -3, !dbg !4643
  store i32 %and24, i32* %flag23, align 4, !dbg !4643
  br label %if.end25

if.end25:                                         ; preds = %if.else17, %if.end16
  ret void, !dbg !4644
}

declare dso_local void @BM_edge_select_set(%struct.BMesh*, %struct.BMEdge*, i8 zeroext) #2

declare dso_local void @BM_vert_select_set(%struct.BMesh*, %struct.BMVert*, i8 zeroext) #2

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @uvedit_uv_select_test(%struct.Scene* %scene, %struct.BMLoop* %l, i32 %cd_loop_uv_offset) #0 !dbg !4645 {
entry:
  %retval = alloca i8, align 1
  %scene.addr = alloca %struct.Scene*, align 8
  %l.addr = alloca %struct.BMLoop*, align 8
  %cd_loop_uv_offset.addr = alloca i32, align 4
  %ts = alloca %struct.ToolSettings*, align 8
  %luv = alloca %struct.MLoopUV*, align 8
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !4646, metadata !DIExpression()), !dbg !4647
  store %struct.BMLoop* %l, %struct.BMLoop** %l.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l.addr, metadata !4648, metadata !DIExpression()), !dbg !4649
  store i32 %cd_loop_uv_offset, i32* %cd_loop_uv_offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cd_loop_uv_offset.addr, metadata !4650, metadata !DIExpression()), !dbg !4651
  call void @llvm.dbg.declare(metadata %struct.ToolSettings** %ts, metadata !4652, metadata !DIExpression()), !dbg !4653
  %0 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !4654
  %toolsettings = getelementptr inbounds %struct.Scene, %struct.Scene* %0, i32 0, i32 20, !dbg !4655
  %1 = load %struct.ToolSettings*, %struct.ToolSettings** %toolsettings, align 8, !dbg !4655
  store %struct.ToolSettings* %1, %struct.ToolSettings** %ts, align 8, !dbg !4653
  %2 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !4656
  %uv_flag = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %2, i32 0, i32 11, !dbg !4658
  %3 = load i8, i8* %uv_flag, align 2, !dbg !4658
  %conv = zext i8 %3 to i32, !dbg !4656
  %and = and i32 %conv, 1, !dbg !4659
  %tobool = icmp ne i32 %and, 0, !dbg !4659
  br i1 %tobool, label %if.then, label %if.else7, !dbg !4660

if.then:                                          ; preds = %entry
  %4 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !4661
  %selectmode = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %4, i32 0, i32 8, !dbg !4664
  %5 = load i16, i16* %selectmode, align 2, !dbg !4664
  %conv1 = sext i16 %5 to i32, !dbg !4661
  %and2 = and i32 %conv1, 4, !dbg !4665
  %tobool3 = icmp ne i32 %and2, 0, !dbg !4665
  br i1 %tobool3, label %if.then4, label %if.else, !dbg !4666

if.then4:                                         ; preds = %if.then
  %6 = load %struct.BMLoop*, %struct.BMLoop** %l.addr, align 8, !dbg !4667
  %f = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %6, i32 0, i32 3, !dbg !4667
  %7 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !4667
  %head = getelementptr inbounds %struct.BMFace, %struct.BMFace* %7, i32 0, i32 0, !dbg !4667
  %call = call zeroext i8 @_bm_elem_flag_test_bool(%struct.BMHeader* %head, i8 zeroext 1), !dbg !4667
  store i8 %call, i8* %retval, align 1, !dbg !4668
  br label %return, !dbg !4668

if.else:                                          ; preds = %if.then
  %8 = load %struct.BMLoop*, %struct.BMLoop** %l.addr, align 8, !dbg !4669
  %v = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %8, i32 0, i32 1, !dbg !4669
  %9 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !4669
  %head5 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %9, i32 0, i32 0, !dbg !4669
  %call6 = call zeroext i8 @_bm_elem_flag_test_bool(%struct.BMHeader* %head5, i8 zeroext 1), !dbg !4669
  store i8 %call6, i8* %retval, align 1, !dbg !4670
  br label %return, !dbg !4670

if.else7:                                         ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.MLoopUV** %luv, metadata !4671, metadata !DIExpression()), !dbg !4673
  %10 = load %struct.BMLoop*, %struct.BMLoop** %l.addr, align 8, !dbg !4674
  %head8 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %10, i32 0, i32 0, !dbg !4674
  %data = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head8, i32 0, i32 0, !dbg !4674
  %11 = load i8*, i8** %data, align 8, !dbg !4674
  %12 = load i32, i32* %cd_loop_uv_offset.addr, align 4, !dbg !4674
  %idx.ext = sext i32 %12 to i64, !dbg !4674
  %add.ptr = getelementptr inbounds i8, i8* %11, i64 %idx.ext, !dbg !4674
  %13 = bitcast i8* %add.ptr to %struct.MLoopUV*, !dbg !4674
  store %struct.MLoopUV* %13, %struct.MLoopUV** %luv, align 8, !dbg !4673
  %14 = load %struct.MLoopUV*, %struct.MLoopUV** %luv, align 8, !dbg !4675
  %flag = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %14, i32 0, i32 1, !dbg !4676
  %15 = load i32, i32* %flag, align 4, !dbg !4676
  %and9 = and i32 %15, 2, !dbg !4677
  %cmp = icmp ne i32 %and9, 0, !dbg !4678
  %conv10 = zext i1 %cmp to i32, !dbg !4678
  %conv11 = trunc i32 %conv10 to i8, !dbg !4679
  store i8 %conv11, i8* %retval, align 1, !dbg !4680
  br label %return, !dbg !4680

return:                                           ; preds = %if.else7, %if.else, %if.then4
  %16 = load i8, i8* %retval, align 1, !dbg !4681
  ret i8 %16, !dbg !4681
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @_bm_elem_flag_test_bool(%struct.BMHeader* %head, i8 zeroext %hflag) #0 !dbg !4682 {
entry:
  %head.addr = alloca %struct.BMHeader*, align 8
  %hflag.addr = alloca i8, align 1
  store %struct.BMHeader* %head, %struct.BMHeader** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMHeader** %head.addr, metadata !4685, metadata !DIExpression()), !dbg !4686
  store i8 %hflag, i8* %hflag.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %hflag.addr, metadata !4687, metadata !DIExpression()), !dbg !4688
  %0 = load %struct.BMHeader*, %struct.BMHeader** %head.addr, align 8, !dbg !4689
  %hflag1 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %0, i32 0, i32 3, !dbg !4690
  %1 = load i8, i8* %hflag1, align 1, !dbg !4690
  %conv = zext i8 %1 to i32, !dbg !4689
  %2 = load i8, i8* %hflag.addr, align 1, !dbg !4691
  %conv2 = zext i8 %2 to i32, !dbg !4691
  %and = and i32 %conv, %conv2, !dbg !4692
  %cmp = icmp ne i32 %and, 0, !dbg !4693
  %conv3 = zext i1 %cmp to i32, !dbg !4693
  %conv4 = trunc i32 %conv3 to i8, !dbg !4694
  ret i8 %conv4, !dbg !4695
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @uvedit_uv_select_set(%struct.BMEditMesh* %em, %struct.Scene* %scene, %struct.BMLoop* %l, i8 zeroext %select, i8 zeroext %do_history, i32 %cd_loop_uv_offset) #0 !dbg !4696 {
entry:
  %em.addr = alloca %struct.BMEditMesh*, align 8
  %scene.addr = alloca %struct.Scene*, align 8
  %l.addr = alloca %struct.BMLoop*, align 8
  %select.addr = alloca i8, align 1
  %do_history.addr = alloca i8, align 1
  %cd_loop_uv_offset.addr = alloca i32, align 4
  store %struct.BMEditMesh* %em, %struct.BMEditMesh** %em.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em.addr, metadata !4697, metadata !DIExpression()), !dbg !4698
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !4699, metadata !DIExpression()), !dbg !4700
  store %struct.BMLoop* %l, %struct.BMLoop** %l.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l.addr, metadata !4701, metadata !DIExpression()), !dbg !4702
  store i8 %select, i8* %select.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %select.addr, metadata !4703, metadata !DIExpression()), !dbg !4704
  store i8 %do_history, i8* %do_history.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %do_history.addr, metadata !4705, metadata !DIExpression()), !dbg !4706
  store i32 %cd_loop_uv_offset, i32* %cd_loop_uv_offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cd_loop_uv_offset.addr, metadata !4707, metadata !DIExpression()), !dbg !4708
  %0 = load i8, i8* %select.addr, align 1, !dbg !4709
  %tobool = icmp ne i8 %0, 0, !dbg !4709
  br i1 %tobool, label %if.then, label %if.else, !dbg !4711

if.then:                                          ; preds = %entry
  %1 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !4712
  %2 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !4714
  %3 = load %struct.BMLoop*, %struct.BMLoop** %l.addr, align 8, !dbg !4715
  %4 = load i8, i8* %do_history.addr, align 1, !dbg !4716
  %5 = load i32, i32* %cd_loop_uv_offset.addr, align 4, !dbg !4717
  call void @uvedit_uv_select_enable(%struct.BMEditMesh* %1, %struct.Scene* %2, %struct.BMLoop* %3, i8 zeroext %4, i32 %5), !dbg !4718
  br label %if.end, !dbg !4719

if.else:                                          ; preds = %entry
  %6 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !4720
  %7 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !4722
  %8 = load %struct.BMLoop*, %struct.BMLoop** %l.addr, align 8, !dbg !4723
  %9 = load i32, i32* %cd_loop_uv_offset.addr, align 4, !dbg !4724
  call void @uvedit_uv_select_disable(%struct.BMEditMesh* %6, %struct.Scene* %7, %struct.BMLoop* %8, i32 %9), !dbg !4725
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !4726
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @uvedit_uv_select_enable(%struct.BMEditMesh* %em, %struct.Scene* %scene, %struct.BMLoop* %l, i8 zeroext %do_history, i32 %cd_loop_uv_offset) #0 !dbg !4727 {
entry:
  %em.addr = alloca %struct.BMEditMesh*, align 8
  %scene.addr = alloca %struct.Scene*, align 8
  %l.addr = alloca %struct.BMLoop*, align 8
  %do_history.addr = alloca i8, align 1
  %cd_loop_uv_offset.addr = alloca i32, align 4
  %ts = alloca %struct.ToolSettings*, align 8
  %luv = alloca %struct.MLoopUV*, align 8
  store %struct.BMEditMesh* %em, %struct.BMEditMesh** %em.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em.addr, metadata !4728, metadata !DIExpression()), !dbg !4729
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !4730, metadata !DIExpression()), !dbg !4731
  store %struct.BMLoop* %l, %struct.BMLoop** %l.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l.addr, metadata !4732, metadata !DIExpression()), !dbg !4733
  store i8 %do_history, i8* %do_history.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %do_history.addr, metadata !4734, metadata !DIExpression()), !dbg !4735
  store i32 %cd_loop_uv_offset, i32* %cd_loop_uv_offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cd_loop_uv_offset.addr, metadata !4736, metadata !DIExpression()), !dbg !4737
  call void @llvm.dbg.declare(metadata %struct.ToolSettings** %ts, metadata !4738, metadata !DIExpression()), !dbg !4739
  %0 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !4740
  %toolsettings = getelementptr inbounds %struct.Scene, %struct.Scene* %0, i32 0, i32 20, !dbg !4741
  %1 = load %struct.ToolSettings*, %struct.ToolSettings** %toolsettings, align 8, !dbg !4741
  store %struct.ToolSettings* %1, %struct.ToolSettings** %ts, align 8, !dbg !4739
  %2 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !4742
  %uv_flag = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %2, i32 0, i32 11, !dbg !4744
  %3 = load i8, i8* %uv_flag, align 2, !dbg !4744
  %conv = zext i8 %3 to i32, !dbg !4742
  %and = and i32 %conv, 1, !dbg !4745
  %tobool = icmp ne i32 %and, 0, !dbg !4745
  br i1 %tobool, label %if.then, label %if.else11, !dbg !4746

if.then:                                          ; preds = %entry
  %4 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !4747
  %selectmode = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %4, i32 0, i32 8, !dbg !4750
  %5 = load i16, i16* %selectmode, align 2, !dbg !4750
  %conv1 = sext i16 %5 to i32, !dbg !4747
  %and2 = and i32 %conv1, 4, !dbg !4751
  %tobool3 = icmp ne i32 %and2, 0, !dbg !4751
  br i1 %tobool3, label %if.then4, label %if.else, !dbg !4752

if.then4:                                         ; preds = %if.then
  %6 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !4753
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %6, i32 0, i32 0, !dbg !4754
  %7 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !4754
  %8 = load %struct.BMLoop*, %struct.BMLoop** %l.addr, align 8, !dbg !4755
  %f = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %8, i32 0, i32 3, !dbg !4756
  %9 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !4756
  call void @BM_face_select_set(%struct.BMesh* %7, %struct.BMFace* %9, i8 zeroext 1), !dbg !4757
  br label %if.end, !dbg !4757

if.else:                                          ; preds = %if.then
  %10 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !4758
  %bm5 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %10, i32 0, i32 0, !dbg !4759
  %11 = load %struct.BMesh*, %struct.BMesh** %bm5, align 8, !dbg !4759
  %12 = load %struct.BMLoop*, %struct.BMLoop** %l.addr, align 8, !dbg !4760
  %v = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %12, i32 0, i32 1, !dbg !4761
  %13 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !4761
  call void @BM_vert_select_set(%struct.BMesh* %11, %struct.BMVert* %13, i8 zeroext 1), !dbg !4762
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then4
  %14 = load i8, i8* %do_history.addr, align 1, !dbg !4763
  %tobool6 = icmp ne i8 %14, 0, !dbg !4763
  br i1 %tobool6, label %if.then7, label %if.end10, !dbg !4765

if.then7:                                         ; preds = %if.end
  %15 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !4766
  %bm8 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %15, i32 0, i32 0, !dbg !4766
  %16 = load %struct.BMesh*, %struct.BMesh** %bm8, align 8, !dbg !4766
  %17 = load %struct.BMLoop*, %struct.BMLoop** %l.addr, align 8, !dbg !4766
  %v9 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %17, i32 0, i32 1, !dbg !4766
  %18 = load %struct.BMVert*, %struct.BMVert** %v9, align 8, !dbg !4766
  %19 = bitcast %struct.BMVert* %18 to %struct.BMElem*, !dbg !4766
  %head = getelementptr inbounds %struct.BMElem, %struct.BMElem* %19, i32 0, i32 0, !dbg !4766
  %call = call zeroext i8 @_bm_select_history_remove(%struct.BMesh* %16, %struct.BMHeader* %head), !dbg !4766
  br label %if.end10, !dbg !4768

if.end10:                                         ; preds = %if.then7, %if.end
  br label %if.end13, !dbg !4769

if.else11:                                        ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.MLoopUV** %luv, metadata !4770, metadata !DIExpression()), !dbg !4772
  %20 = load %struct.BMLoop*, %struct.BMLoop** %l.addr, align 8, !dbg !4773
  %head12 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %20, i32 0, i32 0, !dbg !4773
  %data = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head12, i32 0, i32 0, !dbg !4773
  %21 = load i8*, i8** %data, align 8, !dbg !4773
  %22 = load i32, i32* %cd_loop_uv_offset.addr, align 4, !dbg !4773
  %idx.ext = sext i32 %22 to i64, !dbg !4773
  %add.ptr = getelementptr inbounds i8, i8* %21, i64 %idx.ext, !dbg !4773
  %23 = bitcast i8* %add.ptr to %struct.MLoopUV*, !dbg !4773
  store %struct.MLoopUV* %23, %struct.MLoopUV** %luv, align 8, !dbg !4772
  %24 = load %struct.MLoopUV*, %struct.MLoopUV** %luv, align 8, !dbg !4774
  %flag = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %24, i32 0, i32 1, !dbg !4775
  %25 = load i32, i32* %flag, align 4, !dbg !4776
  %or = or i32 %25, 2, !dbg !4776
  store i32 %or, i32* %flag, align 4, !dbg !4776
  br label %if.end13

if.end13:                                         ; preds = %if.else11, %if.end10
  ret void, !dbg !4777
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @uvedit_uv_select_disable(%struct.BMEditMesh* %em, %struct.Scene* %scene, %struct.BMLoop* %l, i32 %cd_loop_uv_offset) #0 !dbg !4778 {
entry:
  %em.addr = alloca %struct.BMEditMesh*, align 8
  %scene.addr = alloca %struct.Scene*, align 8
  %l.addr = alloca %struct.BMLoop*, align 8
  %cd_loop_uv_offset.addr = alloca i32, align 4
  %ts = alloca %struct.ToolSettings*, align 8
  %luv = alloca %struct.MLoopUV*, align 8
  store %struct.BMEditMesh* %em, %struct.BMEditMesh** %em.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em.addr, metadata !4779, metadata !DIExpression()), !dbg !4780
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !4781, metadata !DIExpression()), !dbg !4782
  store %struct.BMLoop* %l, %struct.BMLoop** %l.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l.addr, metadata !4783, metadata !DIExpression()), !dbg !4784
  store i32 %cd_loop_uv_offset, i32* %cd_loop_uv_offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cd_loop_uv_offset.addr, metadata !4785, metadata !DIExpression()), !dbg !4786
  call void @llvm.dbg.declare(metadata %struct.ToolSettings** %ts, metadata !4787, metadata !DIExpression()), !dbg !4788
  %0 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !4789
  %toolsettings = getelementptr inbounds %struct.Scene, %struct.Scene* %0, i32 0, i32 20, !dbg !4790
  %1 = load %struct.ToolSettings*, %struct.ToolSettings** %toolsettings, align 8, !dbg !4790
  store %struct.ToolSettings* %1, %struct.ToolSettings** %ts, align 8, !dbg !4788
  %2 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !4791
  %uv_flag = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %2, i32 0, i32 11, !dbg !4793
  %3 = load i8, i8* %uv_flag, align 2, !dbg !4793
  %conv = zext i8 %3 to i32, !dbg !4791
  %and = and i32 %conv, 1, !dbg !4794
  %tobool = icmp ne i32 %and, 0, !dbg !4794
  br i1 %tobool, label %if.then, label %if.else6, !dbg !4795

if.then:                                          ; preds = %entry
  %4 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !4796
  %selectmode = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %4, i32 0, i32 8, !dbg !4799
  %5 = load i16, i16* %selectmode, align 2, !dbg !4799
  %conv1 = sext i16 %5 to i32, !dbg !4796
  %and2 = and i32 %conv1, 4, !dbg !4800
  %tobool3 = icmp ne i32 %and2, 0, !dbg !4800
  br i1 %tobool3, label %if.then4, label %if.else, !dbg !4801

if.then4:                                         ; preds = %if.then
  %6 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !4802
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %6, i32 0, i32 0, !dbg !4803
  %7 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !4803
  %8 = load %struct.BMLoop*, %struct.BMLoop** %l.addr, align 8, !dbg !4804
  %f = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %8, i32 0, i32 3, !dbg !4805
  %9 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !4805
  call void @BM_face_select_set(%struct.BMesh* %7, %struct.BMFace* %9, i8 zeroext 0), !dbg !4806
  br label %if.end, !dbg !4806

if.else:                                          ; preds = %if.then
  %10 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !4807
  %bm5 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %10, i32 0, i32 0, !dbg !4808
  %11 = load %struct.BMesh*, %struct.BMesh** %bm5, align 8, !dbg !4808
  %12 = load %struct.BMLoop*, %struct.BMLoop** %l.addr, align 8, !dbg !4809
  %v = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %12, i32 0, i32 1, !dbg !4810
  %13 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !4810
  call void @BM_vert_select_set(%struct.BMesh* %11, %struct.BMVert* %13, i8 zeroext 0), !dbg !4811
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then4
  br label %if.end8, !dbg !4812

if.else6:                                         ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.MLoopUV** %luv, metadata !4813, metadata !DIExpression()), !dbg !4815
  %14 = load %struct.BMLoop*, %struct.BMLoop** %l.addr, align 8, !dbg !4816
  %head = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %14, i32 0, i32 0, !dbg !4816
  %data = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head, i32 0, i32 0, !dbg !4816
  %15 = load i8*, i8** %data, align 8, !dbg !4816
  %16 = load i32, i32* %cd_loop_uv_offset.addr, align 4, !dbg !4816
  %idx.ext = sext i32 %16 to i64, !dbg !4816
  %add.ptr = getelementptr inbounds i8, i8* %15, i64 %idx.ext, !dbg !4816
  %17 = bitcast i8* %add.ptr to %struct.MLoopUV*, !dbg !4816
  store %struct.MLoopUV* %17, %struct.MLoopUV** %luv, align 8, !dbg !4815
  %18 = load %struct.MLoopUV*, %struct.MLoopUV** %luv, align 8, !dbg !4817
  %flag = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %18, i32 0, i32 1, !dbg !4818
  %19 = load i32, i32* %flag, align 4, !dbg !4819
  %and7 = and i32 %19, -3, !dbg !4819
  store i32 %and7, i32* %flag, align 4, !dbg !4819
  br label %if.end8

if.end8:                                          ; preds = %if.else6, %if.end
  ret void, !dbg !4820
}

declare dso_local zeroext i8 @_bm_select_history_remove(%struct.BMesh*, %struct.BMHeader*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @uvedit_live_unwrap_update(%struct.SpaceImage* %sima, %struct.Scene* %scene, %struct.Object* %obedit) #0 !dbg !4821 {
entry:
  %sima.addr = alloca %struct.SpaceImage*, align 8
  %scene.addr = alloca %struct.Scene*, align 8
  %obedit.addr = alloca %struct.Object*, align 8
  store %struct.SpaceImage* %sima, %struct.SpaceImage** %sima.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SpaceImage** %sima.addr, metadata !4903, metadata !DIExpression()), !dbg !4904
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !4905, metadata !DIExpression()), !dbg !4906
  store %struct.Object* %obedit, %struct.Object** %obedit.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit.addr, metadata !4907, metadata !DIExpression()), !dbg !4908
  %0 = load %struct.SpaceImage*, %struct.SpaceImage** %sima.addr, align 8, !dbg !4909
  %tobool = icmp ne %struct.SpaceImage* %0, null, !dbg !4909
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !4911

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.SpaceImage*, %struct.SpaceImage** %sima.addr, align 8, !dbg !4912
  %flag = getelementptr inbounds %struct.SpaceImage, %struct.SpaceImage* %1, i32 0, i32 4, !dbg !4913
  %2 = load i32, i32* %flag, align 4, !dbg !4913
  %and = and i32 %2, 2048, !dbg !4914
  %tobool1 = icmp ne i32 %and, 0, !dbg !4914
  br i1 %tobool1, label %if.then, label %if.end, !dbg !4915

if.then:                                          ; preds = %land.lhs.true
  %3 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !4916
  %4 = load %struct.Object*, %struct.Object** %obedit.addr, align 8, !dbg !4918
  call void @ED_uvedit_live_unwrap_begin(%struct.Scene* %3, %struct.Object* %4), !dbg !4919
  call void @ED_uvedit_live_unwrap_re_solve(), !dbg !4920
  call void @ED_uvedit_live_unwrap_end(i16 signext 0), !dbg !4921
  br label %if.end, !dbg !4922

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  ret void, !dbg !4923
}

declare dso_local void @ED_uvedit_live_unwrap_begin(%struct.Scene*, %struct.Object*) #2

declare dso_local void @ED_uvedit_live_unwrap_re_solve() #2

declare dso_local void @ED_uvedit_live_unwrap_end(i16 signext) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @uv_poly_center(%struct.BMFace* %f, float* %r_cent, i32 %cd_loop_uv_offset) #0 !dbg !4924 {
entry:
  %f.addr = alloca %struct.BMFace*, align 8
  %r_cent.addr = alloca float*, align 8
  %cd_loop_uv_offset.addr = alloca i32, align 4
  %l = alloca %struct.BMLoop*, align 8
  %luv = alloca %struct.MLoopUV*, align 8
  %liter = alloca %struct.BMIter, align 8
  store %struct.BMFace* %f, %struct.BMFace** %f.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMFace** %f.addr, metadata !4927, metadata !DIExpression()), !dbg !4928
  store float* %r_cent, float** %r_cent.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_cent.addr, metadata !4929, metadata !DIExpression()), !dbg !4930
  store i32 %cd_loop_uv_offset, i32* %cd_loop_uv_offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cd_loop_uv_offset.addr, metadata !4931, metadata !DIExpression()), !dbg !4932
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l, metadata !4933, metadata !DIExpression()), !dbg !4934
  call void @llvm.dbg.declare(metadata %struct.MLoopUV** %luv, metadata !4935, metadata !DIExpression()), !dbg !4936
  call void @llvm.dbg.declare(metadata %struct.BMIter* %liter, metadata !4937, metadata !DIExpression()), !dbg !4938
  %0 = load float*, float** %r_cent.addr, align 8, !dbg !4939
  call void @zero_v2(float* %0), !dbg !4940
  %1 = load %struct.BMFace*, %struct.BMFace** %f.addr, align 8, !dbg !4941
  %2 = bitcast %struct.BMFace* %1 to i8*, !dbg !4941
  %call = call i8* @BM_iter_new(%struct.BMIter* %liter, %struct.BMesh* null, i8 zeroext 11, i8* %2), !dbg !4941
  %3 = bitcast i8* %call to %struct.BMLoop*, !dbg !4941
  store %struct.BMLoop* %3, %struct.BMLoop** %l, align 8, !dbg !4941
  br label %for.cond, !dbg !4941

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !4943
  %tobool = icmp ne %struct.BMLoop* %4, null, !dbg !4941
  br i1 %tobool, label %for.body, label %for.end, !dbg !4941

for.body:                                         ; preds = %for.cond
  %5 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !4945
  %head = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %5, i32 0, i32 0, !dbg !4945
  %data = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head, i32 0, i32 0, !dbg !4945
  %6 = load i8*, i8** %data, align 8, !dbg !4945
  %7 = load i32, i32* %cd_loop_uv_offset.addr, align 4, !dbg !4945
  %idx.ext = sext i32 %7 to i64, !dbg !4945
  %add.ptr = getelementptr inbounds i8, i8* %6, i64 %idx.ext, !dbg !4945
  %8 = bitcast i8* %add.ptr to %struct.MLoopUV*, !dbg !4945
  store %struct.MLoopUV* %8, %struct.MLoopUV** %luv, align 8, !dbg !4947
  %9 = load float*, float** %r_cent.addr, align 8, !dbg !4948
  %10 = load %struct.MLoopUV*, %struct.MLoopUV** %luv, align 8, !dbg !4949
  %uv = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %10, i32 0, i32 0, !dbg !4950
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %uv, i64 0, i64 0, !dbg !4949
  call void @add_v2_v2(float* %9, float* %arraydecay), !dbg !4951
  br label %for.inc, !dbg !4952

for.inc:                                          ; preds = %for.body
  %call1 = call i8* @BM_iter_step(%struct.BMIter* %liter), !dbg !4943
  %11 = bitcast i8* %call1 to %struct.BMLoop*, !dbg !4943
  store %struct.BMLoop* %11, %struct.BMLoop** %l, align 8, !dbg !4943
  br label %for.cond, !dbg !4943, !llvm.loop !4953

for.end:                                          ; preds = %for.cond
  %12 = load float*, float** %r_cent.addr, align 8, !dbg !4955
  %13 = load %struct.BMFace*, %struct.BMFace** %f.addr, align 8, !dbg !4956
  %len = getelementptr inbounds %struct.BMFace, %struct.BMFace* %13, i32 0, i32 3, !dbg !4957
  %14 = load i32, i32* %len, align 8, !dbg !4957
  %conv = sitofp i32 %14 to float, !dbg !4958
  %div = fdiv float 1.000000e+00, %conv, !dbg !4959
  call void @mul_v2_fl(float* %12, float %div), !dbg !4960
  ret void, !dbg !4961
}

; Function Attrs: noinline nounwind uwtable
define internal void @zero_v2(float* %r) #0 !dbg !4962 {
entry:
  %r.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !4966, metadata !DIExpression()), !dbg !4967
  %0 = load float*, float** %r.addr, align 8, !dbg !4968
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !4968
  store float 0.000000e+00, float* %arrayidx, align 4, !dbg !4969
  %1 = load float*, float** %r.addr, align 8, !dbg !4970
  %arrayidx1 = getelementptr inbounds float, float* %1, i64 1, !dbg !4970
  store float 0.000000e+00, float* %arrayidx1, align 4, !dbg !4971
  ret void, !dbg !4972
}

; Function Attrs: noinline nounwind uwtable
define internal void @add_v2_v2(float* %r, float* %a) #0 !dbg !4973 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !4978, metadata !DIExpression()), !dbg !4979
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !4980, metadata !DIExpression()), !dbg !4981
  %0 = load float*, float** %a.addr, align 8, !dbg !4982
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !4982
  %1 = load float, float* %arrayidx, align 4, !dbg !4982
  %2 = load float*, float** %r.addr, align 8, !dbg !4983
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !4983
  %3 = load float, float* %arrayidx1, align 4, !dbg !4984
  %add = fadd float %3, %1, !dbg !4984
  store float %add, float* %arrayidx1, align 4, !dbg !4984
  %4 = load float*, float** %a.addr, align 8, !dbg !4985
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !4985
  %5 = load float, float* %arrayidx2, align 4, !dbg !4985
  %6 = load float*, float** %r.addr, align 8, !dbg !4986
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !4986
  %7 = load float, float* %arrayidx3, align 4, !dbg !4987
  %add4 = fadd float %7, %5, !dbg !4987
  store float %add4, float* %arrayidx3, align 4, !dbg !4987
  ret void, !dbg !4988
}

; Function Attrs: noinline nounwind uwtable
define internal void @mul_v2_fl(float* %r, float %f) #0 !dbg !4989 {
entry:
  %r.addr = alloca float*, align 8
  %f.addr = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !4992, metadata !DIExpression()), !dbg !4993
  store float %f, float* %f.addr, align 4
  call void @llvm.dbg.declare(metadata float* %f.addr, metadata !4994, metadata !DIExpression()), !dbg !4995
  %0 = load float, float* %f.addr, align 4, !dbg !4996
  %1 = load float*, float** %r.addr, align 8, !dbg !4997
  %arrayidx = getelementptr inbounds float, float* %1, i64 0, !dbg !4997
  %2 = load float, float* %arrayidx, align 4, !dbg !4998
  %mul = fmul float %2, %0, !dbg !4998
  store float %mul, float* %arrayidx, align 4, !dbg !4998
  %3 = load float, float* %f.addr, align 4, !dbg !4999
  %4 = load float*, float** %r.addr, align 8, !dbg !5000
  %arrayidx1 = getelementptr inbounds float, float* %4, i64 1, !dbg !5000
  %5 = load float, float* %arrayidx1, align 4, !dbg !5001
  %mul2 = fmul float %5, %3, !dbg !5001
  store float %mul2, float* %arrayidx1, align 4, !dbg !5001
  ret void, !dbg !5002
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @uv_poly_copy_aspect([2 x float]* %uv_orig, [2 x float]* %uv, float %aspx, float %aspy, i32 %len) #0 !dbg !5003 {
entry:
  %uv_orig.addr = alloca [2 x float]*, align 8
  %uv.addr = alloca [2 x float]*, align 8
  %aspx.addr = alloca float, align 4
  %aspy.addr = alloca float, align 4
  %len.addr = alloca i32, align 4
  %i = alloca i32, align 4
  store [2 x float]* %uv_orig, [2 x float]** %uv_orig.addr, align 8
  call void @llvm.dbg.declare(metadata [2 x float]** %uv_orig.addr, metadata !5007, metadata !DIExpression()), !dbg !5008
  store [2 x float]* %uv, [2 x float]** %uv.addr, align 8
  call void @llvm.dbg.declare(metadata [2 x float]** %uv.addr, metadata !5009, metadata !DIExpression()), !dbg !5010
  store float %aspx, float* %aspx.addr, align 4
  call void @llvm.dbg.declare(metadata float* %aspx.addr, metadata !5011, metadata !DIExpression()), !dbg !5012
  store float %aspy, float* %aspy.addr, align 4
  call void @llvm.dbg.declare(metadata float* %aspy.addr, metadata !5013, metadata !DIExpression()), !dbg !5014
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !5015, metadata !DIExpression()), !dbg !5016
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5017, metadata !DIExpression()), !dbg !5018
  store i32 0, i32* %i, align 4, !dbg !5019
  br label %for.cond, !dbg !5021

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !5022
  %1 = load i32, i32* %len.addr, align 4, !dbg !5024
  %cmp = icmp slt i32 %0, %1, !dbg !5025
  br i1 %cmp, label %for.body, label %for.end, !dbg !5026

for.body:                                         ; preds = %for.cond
  %2 = load [2 x float]*, [2 x float]** %uv_orig.addr, align 8, !dbg !5027
  %3 = load i32, i32* %i, align 4, !dbg !5029
  %idxprom = sext i32 %3 to i64, !dbg !5027
  %arrayidx = getelementptr inbounds [2 x float], [2 x float]* %2, i64 %idxprom, !dbg !5027
  %arrayidx1 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx, i64 0, i64 0, !dbg !5027
  %4 = load float, float* %arrayidx1, align 4, !dbg !5027
  %5 = load float, float* %aspx.addr, align 4, !dbg !5030
  %mul = fmul float %4, %5, !dbg !5031
  %6 = load [2 x float]*, [2 x float]** %uv.addr, align 8, !dbg !5032
  %7 = load i32, i32* %i, align 4, !dbg !5033
  %idxprom2 = sext i32 %7 to i64, !dbg !5032
  %arrayidx3 = getelementptr inbounds [2 x float], [2 x float]* %6, i64 %idxprom2, !dbg !5032
  %arrayidx4 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx3, i64 0, i64 0, !dbg !5032
  store float %mul, float* %arrayidx4, align 4, !dbg !5034
  %8 = load [2 x float]*, [2 x float]** %uv_orig.addr, align 8, !dbg !5035
  %9 = load i32, i32* %i, align 4, !dbg !5036
  %idxprom5 = sext i32 %9 to i64, !dbg !5035
  %arrayidx6 = getelementptr inbounds [2 x float], [2 x float]* %8, i64 %idxprom5, !dbg !5035
  %arrayidx7 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx6, i64 0, i64 1, !dbg !5035
  %10 = load float, float* %arrayidx7, align 4, !dbg !5035
  %11 = load float, float* %aspy.addr, align 4, !dbg !5037
  %mul8 = fmul float %10, %11, !dbg !5038
  %12 = load [2 x float]*, [2 x float]** %uv.addr, align 8, !dbg !5039
  %13 = load i32, i32* %i, align 4, !dbg !5040
  %idxprom9 = sext i32 %13 to i64, !dbg !5039
  %arrayidx10 = getelementptr inbounds [2 x float], [2 x float]* %12, i64 %idxprom9, !dbg !5039
  %arrayidx11 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx10, i64 0, i64 1, !dbg !5039
  store float %mul8, float* %arrayidx11, align 4, !dbg !5041
  br label %for.inc, !dbg !5042

for.inc:                                          ; preds = %for.body
  %14 = load i32, i32* %i, align 4, !dbg !5043
  %inc = add nsw i32 %14, 1, !dbg !5043
  store i32 %inc, i32* %i, align 4, !dbg !5043
  br label %for.cond, !dbg !5044, !llvm.loop !5045

for.end:                                          ; preds = %for.cond
  ret void, !dbg !5047
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @ED_uvedit_minmax(%struct.Scene* %scene, %struct.Image* %ima, %struct.Object* %obedit, float* %r_min, float* %r_max) #0 !dbg !5048 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %ima.addr = alloca %struct.Image*, align 8
  %obedit.addr = alloca %struct.Object*, align 8
  %r_min.addr = alloca float*, align 8
  %r_max.addr = alloca float*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  %efa = alloca %struct.BMFace*, align 8
  %l = alloca %struct.BMLoop*, align 8
  %iter = alloca %struct.BMIter, align 8
  %liter = alloca %struct.BMIter, align 8
  %tf = alloca %struct.MTexPoly*, align 8
  %luv = alloca %struct.MLoopUV*, align 8
  %changed = alloca i8, align 1
  %cd_loop_uv_offset = alloca i32, align 4
  %cd_poly_tex_offset = alloca i32, align 4
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !5051, metadata !DIExpression()), !dbg !5052
  store %struct.Image* %ima, %struct.Image** %ima.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Image** %ima.addr, metadata !5053, metadata !DIExpression()), !dbg !5054
  store %struct.Object* %obedit, %struct.Object** %obedit.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit.addr, metadata !5055, metadata !DIExpression()), !dbg !5056
  store float* %r_min, float** %r_min.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_min.addr, metadata !5057, metadata !DIExpression()), !dbg !5058
  store float* %r_max, float** %r_max.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_max.addr, metadata !5059, metadata !DIExpression()), !dbg !5060
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !5061, metadata !DIExpression()), !dbg !5062
  %0 = load %struct.Object*, %struct.Object** %obedit.addr, align 8, !dbg !5063
  %call = call %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object* %0), !dbg !5064
  store %struct.BMEditMesh* %call, %struct.BMEditMesh** %em, align 8, !dbg !5062
  call void @llvm.dbg.declare(metadata %struct.BMFace** %efa, metadata !5065, metadata !DIExpression()), !dbg !5066
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l, metadata !5067, metadata !DIExpression()), !dbg !5068
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iter, metadata !5069, metadata !DIExpression()), !dbg !5070
  call void @llvm.dbg.declare(metadata %struct.BMIter* %liter, metadata !5071, metadata !DIExpression()), !dbg !5072
  call void @llvm.dbg.declare(metadata %struct.MTexPoly** %tf, metadata !5073, metadata !DIExpression()), !dbg !5074
  call void @llvm.dbg.declare(metadata %struct.MLoopUV** %luv, metadata !5075, metadata !DIExpression()), !dbg !5076
  call void @llvm.dbg.declare(metadata i8* %changed, metadata !5077, metadata !DIExpression()), !dbg !5078
  store i8 0, i8* %changed, align 1, !dbg !5078
  call void @llvm.dbg.declare(metadata i32* %cd_loop_uv_offset, metadata !5079, metadata !DIExpression()), !dbg !5080
  %1 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !5081
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %1, i32 0, i32 0, !dbg !5082
  %2 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !5082
  %ldata = getelementptr inbounds %struct.BMesh, %struct.BMesh* %2, i32 0, i32 26, !dbg !5083
  %call1 = call i32 @CustomData_get_offset(%struct.CustomData* %ldata, i32 16), !dbg !5084
  store i32 %call1, i32* %cd_loop_uv_offset, align 4, !dbg !5080
  call void @llvm.dbg.declare(metadata i32* %cd_poly_tex_offset, metadata !5085, metadata !DIExpression()), !dbg !5086
  %3 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !5087
  %bm2 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %3, i32 0, i32 0, !dbg !5088
  %4 = load %struct.BMesh*, %struct.BMesh** %bm2, align 8, !dbg !5088
  %pdata = getelementptr inbounds %struct.BMesh, %struct.BMesh* %4, i32 0, i32 27, !dbg !5089
  %call3 = call i32 @CustomData_get_offset(%struct.CustomData* %pdata, i32 15), !dbg !5090
  store i32 %call3, i32* %cd_poly_tex_offset, align 4, !dbg !5086
  %5 = load float*, float** %r_min.addr, align 8, !dbg !5091
  %arrayidx = getelementptr inbounds float, float* %5, i64 1, !dbg !5091
  store float 0x46293E5940000000, float* %arrayidx, align 4, !dbg !5091
  %6 = load float*, float** %r_min.addr, align 8, !dbg !5091
  %arrayidx4 = getelementptr inbounds float, float* %6, i64 0, !dbg !5091
  store float 0x46293E5940000000, float* %arrayidx4, align 4, !dbg !5091
  %7 = load float*, float** %r_max.addr, align 8, !dbg !5091
  %arrayidx5 = getelementptr inbounds float, float* %7, i64 1, !dbg !5091
  store float 0xC6293E5940000000, float* %arrayidx5, align 4, !dbg !5091
  %8 = load float*, float** %r_max.addr, align 8, !dbg !5091
  %arrayidx6 = getelementptr inbounds float, float* %8, i64 0, !dbg !5091
  store float 0xC6293E5940000000, float* %arrayidx6, align 4, !dbg !5091
  %9 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !5093
  %bm7 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %9, i32 0, i32 0, !dbg !5093
  %10 = load %struct.BMesh*, %struct.BMesh** %bm7, align 8, !dbg !5093
  %call8 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %10, i8 zeroext 3, i8* null), !dbg !5093
  %11 = bitcast i8* %call8 to %struct.BMFace*, !dbg !5093
  store %struct.BMFace* %11, %struct.BMFace** %efa, align 8, !dbg !5093
  br label %for.cond, !dbg !5093

for.cond:                                         ; preds = %for.inc24, %entry
  %12 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !5095
  %tobool = icmp ne %struct.BMFace* %12, null, !dbg !5093
  br i1 %tobool, label %for.body, label %for.end26, !dbg !5093

for.body:                                         ; preds = %for.cond
  %13 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !5097
  %head = getelementptr inbounds %struct.BMFace, %struct.BMFace* %13, i32 0, i32 0, !dbg !5097
  %data = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head, i32 0, i32 0, !dbg !5097
  %14 = load i8*, i8** %data, align 8, !dbg !5097
  %15 = load i32, i32* %cd_poly_tex_offset, align 4, !dbg !5097
  %idx.ext = sext i32 %15 to i64, !dbg !5097
  %add.ptr = getelementptr inbounds i8, i8* %14, i64 %idx.ext, !dbg !5097
  %16 = bitcast i8* %add.ptr to %struct.MTexPoly*, !dbg !5097
  store %struct.MTexPoly* %16, %struct.MTexPoly** %tf, align 8, !dbg !5099
  %17 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !5100
  %18 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !5102
  %19 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !5103
  %20 = load %struct.MTexPoly*, %struct.MTexPoly** %tf, align 8, !dbg !5104
  %call9 = call zeroext i8 @uvedit_face_visible_test(%struct.Scene* %17, %struct.Image* %18, %struct.BMFace* %19, %struct.MTexPoly* %20), !dbg !5105
  %tobool10 = icmp ne i8 %call9, 0, !dbg !5105
  br i1 %tobool10, label %if.end, label %if.then, !dbg !5106

if.then:                                          ; preds = %for.body
  br label %for.inc24, !dbg !5107

if.end:                                           ; preds = %for.body
  %21 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !5108
  %22 = bitcast %struct.BMFace* %21 to i8*, !dbg !5108
  %call11 = call i8* @BM_iter_new(%struct.BMIter* %liter, %struct.BMesh* null, i8 zeroext 11, i8* %22), !dbg !5108
  %23 = bitcast i8* %call11 to %struct.BMLoop*, !dbg !5108
  store %struct.BMLoop* %23, %struct.BMLoop** %l, align 8, !dbg !5108
  br label %for.cond12, !dbg !5108

for.cond12:                                       ; preds = %for.inc, %if.end
  %24 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !5110
  %tobool13 = icmp ne %struct.BMLoop* %24, null, !dbg !5108
  br i1 %tobool13, label %for.body14, label %for.end, !dbg !5108

for.body14:                                       ; preds = %for.cond12
  %25 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !5112
  %26 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !5115
  %27 = load i32, i32* %cd_loop_uv_offset, align 4, !dbg !5116
  %call15 = call zeroext i8 @uvedit_uv_select_test(%struct.Scene* %25, %struct.BMLoop* %26, i32 %27), !dbg !5117
  %tobool16 = icmp ne i8 %call15, 0, !dbg !5117
  br i1 %tobool16, label %if.then17, label %if.end22, !dbg !5118

if.then17:                                        ; preds = %for.body14
  %28 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !5119
  %head18 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %28, i32 0, i32 0, !dbg !5119
  %data19 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head18, i32 0, i32 0, !dbg !5119
  %29 = load i8*, i8** %data19, align 8, !dbg !5119
  %30 = load i32, i32* %cd_loop_uv_offset, align 4, !dbg !5119
  %idx.ext20 = sext i32 %30 to i64, !dbg !5119
  %add.ptr21 = getelementptr inbounds i8, i8* %29, i64 %idx.ext20, !dbg !5119
  %31 = bitcast i8* %add.ptr21 to %struct.MLoopUV*, !dbg !5119
  store %struct.MLoopUV* %31, %struct.MLoopUV** %luv, align 8, !dbg !5121
  %32 = load float*, float** %r_min.addr, align 8, !dbg !5122
  %33 = load float*, float** %r_max.addr, align 8, !dbg !5123
  %34 = load %struct.MLoopUV*, %struct.MLoopUV** %luv, align 8, !dbg !5124
  %uv = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %34, i32 0, i32 0, !dbg !5125
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %uv, i64 0, i64 0, !dbg !5124
  call void @minmax_v2v2_v2(float* %32, float* %33, float* %arraydecay), !dbg !5126
  store i8 1, i8* %changed, align 1, !dbg !5127
  br label %if.end22, !dbg !5128

if.end22:                                         ; preds = %if.then17, %for.body14
  br label %for.inc, !dbg !5129

for.inc:                                          ; preds = %if.end22
  %call23 = call i8* @BM_iter_step(%struct.BMIter* %liter), !dbg !5110
  %35 = bitcast i8* %call23 to %struct.BMLoop*, !dbg !5110
  store %struct.BMLoop* %35, %struct.BMLoop** %l, align 8, !dbg !5110
  br label %for.cond12, !dbg !5110, !llvm.loop !5130

for.end:                                          ; preds = %for.cond12
  br label %for.inc24, !dbg !5132

for.inc24:                                        ; preds = %for.end, %if.then
  %call25 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !5095
  %36 = bitcast i8* %call25 to %struct.BMFace*, !dbg !5095
  store %struct.BMFace* %36, %struct.BMFace** %efa, align 8, !dbg !5095
  br label %for.cond, !dbg !5095, !llvm.loop !5133

for.end26:                                        ; preds = %for.cond
  %37 = load i8, i8* %changed, align 1, !dbg !5135
  ret i8 %37, !dbg !5136
}

declare dso_local void @minmax_v2v2_v2(float*, float*, float*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @uv_find_nearest_edge(%struct.Scene* %scene, %struct.Image* %ima, %struct.BMEditMesh* %em, float* %co, %struct.NearestHit* %hit) #0 !dbg !5137 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %ima.addr = alloca %struct.Image*, align 8
  %em.addr = alloca %struct.BMEditMesh*, align 8
  %co.addr = alloca float*, align 8
  %hit.addr = alloca %struct.NearestHit*, align 8
  %tf = alloca %struct.MTexPoly*, align 8
  %efa = alloca %struct.BMFace*, align 8
  %l = alloca %struct.BMLoop*, align 8
  %iter = alloca %struct.BMIter, align 8
  %liter = alloca %struct.BMIter, align 8
  %luv = alloca %struct.MLoopUV*, align 8
  %luv_next = alloca %struct.MLoopUV*, align 8
  %mindist_squared = alloca float, align 4
  %dist_squared = alloca float, align 4
  %i = alloca i32, align 4
  %cd_loop_uv_offset = alloca i32, align 4
  %cd_poly_tex_offset = alloca i32, align 4
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !5151, metadata !DIExpression()), !dbg !5152
  store %struct.Image* %ima, %struct.Image** %ima.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Image** %ima.addr, metadata !5153, metadata !DIExpression()), !dbg !5154
  store %struct.BMEditMesh* %em, %struct.BMEditMesh** %em.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em.addr, metadata !5155, metadata !DIExpression()), !dbg !5156
  store float* %co, float** %co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %co.addr, metadata !5157, metadata !DIExpression()), !dbg !5158
  store %struct.NearestHit* %hit, %struct.NearestHit** %hit.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.NearestHit** %hit.addr, metadata !5159, metadata !DIExpression()), !dbg !5160
  call void @llvm.dbg.declare(metadata %struct.MTexPoly** %tf, metadata !5161, metadata !DIExpression()), !dbg !5162
  call void @llvm.dbg.declare(metadata %struct.BMFace** %efa, metadata !5163, metadata !DIExpression()), !dbg !5164
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l, metadata !5165, metadata !DIExpression()), !dbg !5166
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iter, metadata !5167, metadata !DIExpression()), !dbg !5168
  call void @llvm.dbg.declare(metadata %struct.BMIter* %liter, metadata !5169, metadata !DIExpression()), !dbg !5170
  call void @llvm.dbg.declare(metadata %struct.MLoopUV** %luv, metadata !5171, metadata !DIExpression()), !dbg !5172
  call void @llvm.dbg.declare(metadata %struct.MLoopUV** %luv_next, metadata !5173, metadata !DIExpression()), !dbg !5174
  call void @llvm.dbg.declare(metadata float* %mindist_squared, metadata !5175, metadata !DIExpression()), !dbg !5176
  call void @llvm.dbg.declare(metadata float* %dist_squared, metadata !5177, metadata !DIExpression()), !dbg !5178
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5179, metadata !DIExpression()), !dbg !5180
  call void @llvm.dbg.declare(metadata i32* %cd_loop_uv_offset, metadata !5181, metadata !DIExpression()), !dbg !5182
  %0 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !5183
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %0, i32 0, i32 0, !dbg !5184
  %1 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !5184
  %ldata = getelementptr inbounds %struct.BMesh, %struct.BMesh* %1, i32 0, i32 26, !dbg !5185
  %call = call i32 @CustomData_get_offset(%struct.CustomData* %ldata, i32 16), !dbg !5186
  store i32 %call, i32* %cd_loop_uv_offset, align 4, !dbg !5182
  call void @llvm.dbg.declare(metadata i32* %cd_poly_tex_offset, metadata !5187, metadata !DIExpression()), !dbg !5188
  %2 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !5189
  %bm1 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %2, i32 0, i32 0, !dbg !5190
  %3 = load %struct.BMesh*, %struct.BMesh** %bm1, align 8, !dbg !5190
  %pdata = getelementptr inbounds %struct.BMesh, %struct.BMesh* %3, i32 0, i32 27, !dbg !5191
  %call2 = call i32 @CustomData_get_offset(%struct.CustomData* %pdata, i32 15), !dbg !5192
  store i32 %call2, i32* %cd_poly_tex_offset, align 4, !dbg !5188
  store float 1.000000e+10, float* %mindist_squared, align 4, !dbg !5193
  %4 = load %struct.NearestHit*, %struct.NearestHit** %hit.addr, align 8, !dbg !5194
  %5 = bitcast %struct.NearestHit* %4 to i8*, !dbg !5195
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 48, i1 false), !dbg !5195
  %6 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !5196
  %bm3 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %6, i32 0, i32 0, !dbg !5197
  %7 = load %struct.BMesh*, %struct.BMesh** %bm3, align 8, !dbg !5197
  call void @BM_mesh_elem_index_ensure(%struct.BMesh* %7, i8 zeroext 1), !dbg !5198
  %8 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !5199
  %bm4 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %8, i32 0, i32 0, !dbg !5199
  %9 = load %struct.BMesh*, %struct.BMesh** %bm4, align 8, !dbg !5199
  %call5 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %9, i8 zeroext 3, i8* null), !dbg !5199
  %10 = bitcast i8* %call5 to %struct.BMFace*, !dbg !5199
  store %struct.BMFace* %10, %struct.BMFace** %efa, align 8, !dbg !5199
  br label %for.cond, !dbg !5199

for.cond:                                         ; preds = %for.inc31, %entry
  %11 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !5201
  %tobool = icmp ne %struct.BMFace* %11, null, !dbg !5199
  br i1 %tobool, label %for.body, label %for.end33, !dbg !5199

for.body:                                         ; preds = %for.cond
  %12 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !5203
  %head = getelementptr inbounds %struct.BMFace, %struct.BMFace* %12, i32 0, i32 0, !dbg !5203
  %data = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head, i32 0, i32 0, !dbg !5203
  %13 = load i8*, i8** %data, align 8, !dbg !5203
  %14 = load i32, i32* %cd_poly_tex_offset, align 4, !dbg !5203
  %idx.ext = sext i32 %14 to i64, !dbg !5203
  %add.ptr = getelementptr inbounds i8, i8* %13, i64 %idx.ext, !dbg !5203
  %15 = bitcast i8* %add.ptr to %struct.MTexPoly*, !dbg !5203
  store %struct.MTexPoly* %15, %struct.MTexPoly** %tf, align 8, !dbg !5205
  %16 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !5206
  %17 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !5208
  %18 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !5209
  %19 = load %struct.MTexPoly*, %struct.MTexPoly** %tf, align 8, !dbg !5210
  %call6 = call zeroext i8 @uvedit_face_visible_test(%struct.Scene* %16, %struct.Image* %17, %struct.BMFace* %18, %struct.MTexPoly* %19), !dbg !5211
  %tobool7 = icmp ne i8 %call6, 0, !dbg !5211
  br i1 %tobool7, label %if.end, label %if.then, !dbg !5212

if.then:                                          ; preds = %for.body
  br label %for.inc31, !dbg !5213

if.end:                                           ; preds = %for.body
  %20 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !5214
  %21 = bitcast %struct.BMFace* %20 to i8*, !dbg !5214
  %call8 = call i8* @BM_iter_new(%struct.BMIter* %liter, %struct.BMesh* null, i8 zeroext 11, i8* %21), !dbg !5214
  %22 = bitcast i8* %call8 to %struct.BMLoop*, !dbg !5214
  store %struct.BMLoop* %22, %struct.BMLoop** %l, align 8, !dbg !5214
  store i32 0, i32* %i, align 4, !dbg !5214
  br label %for.cond9, !dbg !5214

for.cond9:                                        ; preds = %for.inc, %if.end
  %23 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !5216
  %tobool10 = icmp ne %struct.BMLoop* %23, null, !dbg !5214
  br i1 %tobool10, label %for.body11, label %for.end, !dbg !5214

for.body11:                                       ; preds = %for.cond9
  %24 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !5218
  %head12 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %24, i32 0, i32 0, !dbg !5218
  %data13 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head12, i32 0, i32 0, !dbg !5218
  %25 = load i8*, i8** %data13, align 8, !dbg !5218
  %26 = load i32, i32* %cd_loop_uv_offset, align 4, !dbg !5218
  %idx.ext14 = sext i32 %26 to i64, !dbg !5218
  %add.ptr15 = getelementptr inbounds i8, i8* %25, i64 %idx.ext14, !dbg !5218
  %27 = bitcast i8* %add.ptr15 to %struct.MLoopUV*, !dbg !5218
  store %struct.MLoopUV* %27, %struct.MLoopUV** %luv, align 8, !dbg !5220
  %28 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !5221
  %next = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %28, i32 0, i32 6, !dbg !5221
  %29 = load %struct.BMLoop*, %struct.BMLoop** %next, align 8, !dbg !5221
  %head16 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %29, i32 0, i32 0, !dbg !5221
  %data17 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head16, i32 0, i32 0, !dbg !5221
  %30 = load i8*, i8** %data17, align 8, !dbg !5221
  %31 = load i32, i32* %cd_loop_uv_offset, align 4, !dbg !5221
  %idx.ext18 = sext i32 %31 to i64, !dbg !5221
  %add.ptr19 = getelementptr inbounds i8, i8* %30, i64 %idx.ext18, !dbg !5221
  %32 = bitcast i8* %add.ptr19 to %struct.MLoopUV*, !dbg !5221
  store %struct.MLoopUV* %32, %struct.MLoopUV** %luv_next, align 8, !dbg !5222
  %33 = load float*, float** %co.addr, align 8, !dbg !5223
  %34 = load %struct.MLoopUV*, %struct.MLoopUV** %luv, align 8, !dbg !5224
  %uv = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %34, i32 0, i32 0, !dbg !5225
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %uv, i64 0, i64 0, !dbg !5224
  %35 = load %struct.MLoopUV*, %struct.MLoopUV** %luv_next, align 8, !dbg !5226
  %uv20 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %35, i32 0, i32 0, !dbg !5227
  %arraydecay21 = getelementptr inbounds [2 x float], [2 x float]* %uv20, i64 0, i64 0, !dbg !5226
  %call22 = call float @dist_squared_to_line_segment_v2(float* %33, float* %arraydecay, float* %arraydecay21), !dbg !5228
  store float %call22, float* %dist_squared, align 4, !dbg !5229
  %36 = load float, float* %dist_squared, align 4, !dbg !5230
  %37 = load float, float* %mindist_squared, align 4, !dbg !5232
  %cmp = fcmp olt float %36, %37, !dbg !5233
  br i1 %cmp, label %if.then23, label %if.end29, !dbg !5234

if.then23:                                        ; preds = %for.body11
  %38 = load %struct.MTexPoly*, %struct.MTexPoly** %tf, align 8, !dbg !5235
  %39 = load %struct.NearestHit*, %struct.NearestHit** %hit.addr, align 8, !dbg !5237
  %tf24 = getelementptr inbounds %struct.NearestHit, %struct.NearestHit* %39, i32 0, i32 1, !dbg !5238
  store %struct.MTexPoly* %38, %struct.MTexPoly** %tf24, align 8, !dbg !5239
  %40 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !5240
  %41 = load %struct.NearestHit*, %struct.NearestHit** %hit.addr, align 8, !dbg !5241
  %efa25 = getelementptr inbounds %struct.NearestHit, %struct.NearestHit* %41, i32 0, i32 0, !dbg !5242
  store %struct.BMFace* %40, %struct.BMFace** %efa25, align 8, !dbg !5243
  %42 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !5244
  %43 = load %struct.NearestHit*, %struct.NearestHit** %hit.addr, align 8, !dbg !5245
  %l26 = getelementptr inbounds %struct.NearestHit, %struct.NearestHit* %43, i32 0, i32 2, !dbg !5246
  store %struct.BMLoop* %42, %struct.BMLoop** %l26, align 8, !dbg !5247
  %44 = load %struct.MLoopUV*, %struct.MLoopUV** %luv, align 8, !dbg !5248
  %45 = load %struct.NearestHit*, %struct.NearestHit** %hit.addr, align 8, !dbg !5249
  %luv27 = getelementptr inbounds %struct.NearestHit, %struct.NearestHit* %45, i32 0, i32 3, !dbg !5250
  store %struct.MLoopUV* %44, %struct.MLoopUV** %luv27, align 8, !dbg !5251
  %46 = load %struct.MLoopUV*, %struct.MLoopUV** %luv_next, align 8, !dbg !5252
  %47 = load %struct.NearestHit*, %struct.NearestHit** %hit.addr, align 8, !dbg !5253
  %luv_next28 = getelementptr inbounds %struct.NearestHit, %struct.NearestHit* %47, i32 0, i32 4, !dbg !5254
  store %struct.MLoopUV* %46, %struct.MLoopUV** %luv_next28, align 8, !dbg !5255
  %48 = load i32, i32* %i, align 4, !dbg !5256
  %49 = load %struct.NearestHit*, %struct.NearestHit** %hit.addr, align 8, !dbg !5257
  %lindex = getelementptr inbounds %struct.NearestHit, %struct.NearestHit* %49, i32 0, i32 5, !dbg !5258
  store i32 %48, i32* %lindex, align 8, !dbg !5259
  %50 = load float, float* %dist_squared, align 4, !dbg !5260
  store float %50, float* %mindist_squared, align 4, !dbg !5261
  br label %if.end29, !dbg !5262

if.end29:                                         ; preds = %if.then23, %for.body11
  br label %for.inc, !dbg !5263

for.inc:                                          ; preds = %if.end29
  %call30 = call i8* @BM_iter_step(%struct.BMIter* %liter), !dbg !5216
  %51 = bitcast i8* %call30 to %struct.BMLoop*, !dbg !5216
  store %struct.BMLoop* %51, %struct.BMLoop** %l, align 8, !dbg !5216
  %52 = load i32, i32* %i, align 4, !dbg !5216
  %inc = add nsw i32 %52, 1, !dbg !5216
  store i32 %inc, i32* %i, align 4, !dbg !5216
  br label %for.cond9, !dbg !5216, !llvm.loop !5264

for.end:                                          ; preds = %for.cond9
  br label %for.inc31, !dbg !5266

for.inc31:                                        ; preds = %for.end, %if.then
  %call32 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !5201
  %53 = bitcast i8* %call32 to %struct.BMFace*, !dbg !5201
  store %struct.BMFace* %53, %struct.BMFace** %efa, align 8, !dbg !5201
  br label %for.cond, !dbg !5201, !llvm.loop !5267

for.end33:                                        ; preds = %for.cond
  ret void, !dbg !5269
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare dso_local void @BM_mesh_elem_index_ensure(%struct.BMesh*, i8 zeroext) #2

declare dso_local float @dist_squared_to_line_segment_v2(float*, float*, float*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @uv_find_nearest_vert(%struct.Scene* %scene, %struct.Image* %ima, %struct.BMEditMesh* %em, float* %co, float* %penalty, %struct.NearestHit* %hit) #0 !dbg !5270 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %ima.addr = alloca %struct.Image*, align 8
  %em.addr = alloca %struct.BMEditMesh*, align 8
  %co.addr = alloca float*, align 8
  %penalty.addr = alloca float*, align 8
  %hit.addr = alloca %struct.NearestHit*, align 8
  %efa = alloca %struct.BMFace*, align 8
  %l = alloca %struct.BMLoop*, align 8
  %iter = alloca %struct.BMIter, align 8
  %liter = alloca %struct.BMIter, align 8
  %tf = alloca %struct.MTexPoly*, align 8
  %luv = alloca %struct.MLoopUV*, align 8
  %mindist = alloca float, align 4
  %dist = alloca float, align 4
  %i = alloca i32, align 4
  %cd_loop_uv_offset = alloca i32, align 4
  %cd_poly_tex_offset = alloca i32, align 4
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !5273, metadata !DIExpression()), !dbg !5274
  store %struct.Image* %ima, %struct.Image** %ima.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Image** %ima.addr, metadata !5275, metadata !DIExpression()), !dbg !5276
  store %struct.BMEditMesh* %em, %struct.BMEditMesh** %em.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em.addr, metadata !5277, metadata !DIExpression()), !dbg !5278
  store float* %co, float** %co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %co.addr, metadata !5279, metadata !DIExpression()), !dbg !5280
  store float* %penalty, float** %penalty.addr, align 8
  call void @llvm.dbg.declare(metadata float** %penalty.addr, metadata !5281, metadata !DIExpression()), !dbg !5282
  store %struct.NearestHit* %hit, %struct.NearestHit** %hit.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.NearestHit** %hit.addr, metadata !5283, metadata !DIExpression()), !dbg !5284
  call void @llvm.dbg.declare(metadata %struct.BMFace** %efa, metadata !5285, metadata !DIExpression()), !dbg !5286
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l, metadata !5287, metadata !DIExpression()), !dbg !5288
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iter, metadata !5289, metadata !DIExpression()), !dbg !5290
  call void @llvm.dbg.declare(metadata %struct.BMIter* %liter, metadata !5291, metadata !DIExpression()), !dbg !5292
  call void @llvm.dbg.declare(metadata %struct.MTexPoly** %tf, metadata !5293, metadata !DIExpression()), !dbg !5294
  call void @llvm.dbg.declare(metadata %struct.MLoopUV** %luv, metadata !5295, metadata !DIExpression()), !dbg !5296
  call void @llvm.dbg.declare(metadata float* %mindist, metadata !5297, metadata !DIExpression()), !dbg !5298
  call void @llvm.dbg.declare(metadata float* %dist, metadata !5299, metadata !DIExpression()), !dbg !5300
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5301, metadata !DIExpression()), !dbg !5302
  call void @llvm.dbg.declare(metadata i32* %cd_loop_uv_offset, metadata !5303, metadata !DIExpression()), !dbg !5304
  %0 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !5305
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %0, i32 0, i32 0, !dbg !5306
  %1 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !5306
  %ldata = getelementptr inbounds %struct.BMesh, %struct.BMesh* %1, i32 0, i32 26, !dbg !5307
  %call = call i32 @CustomData_get_offset(%struct.CustomData* %ldata, i32 16), !dbg !5308
  store i32 %call, i32* %cd_loop_uv_offset, align 4, !dbg !5304
  call void @llvm.dbg.declare(metadata i32* %cd_poly_tex_offset, metadata !5309, metadata !DIExpression()), !dbg !5310
  %2 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !5311
  %bm1 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %2, i32 0, i32 0, !dbg !5312
  %3 = load %struct.BMesh*, %struct.BMesh** %bm1, align 8, !dbg !5312
  %pdata = getelementptr inbounds %struct.BMesh, %struct.BMesh* %3, i32 0, i32 27, !dbg !5313
  %call2 = call i32 @CustomData_get_offset(%struct.CustomData* %pdata, i32 15), !dbg !5314
  store i32 %call2, i32* %cd_poly_tex_offset, align 4, !dbg !5310
  %4 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !5315
  %5 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !5316
  %6 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !5317
  %7 = load float*, float** %co.addr, align 8, !dbg !5318
  %8 = load %struct.NearestHit*, %struct.NearestHit** %hit.addr, align 8, !dbg !5319
  call void @uv_find_nearest_edge(%struct.Scene* %4, %struct.Image* %5, %struct.BMEditMesh* %6, float* %7, %struct.NearestHit* %8), !dbg !5320
  %9 = load %struct.NearestHit*, %struct.NearestHit** %hit.addr, align 8, !dbg !5321
  %l3 = getelementptr inbounds %struct.NearestHit, %struct.NearestHit* %9, i32 0, i32 2, !dbg !5322
  store %struct.BMLoop* null, %struct.BMLoop** %l3, align 8, !dbg !5323
  %10 = load %struct.NearestHit*, %struct.NearestHit** %hit.addr, align 8, !dbg !5324
  %luv_next = getelementptr inbounds %struct.NearestHit, %struct.NearestHit* %10, i32 0, i32 4, !dbg !5325
  store %struct.MLoopUV* null, %struct.MLoopUV** %luv_next, align 8, !dbg !5326
  %11 = load %struct.NearestHit*, %struct.NearestHit** %hit.addr, align 8, !dbg !5327
  %luv4 = getelementptr inbounds %struct.NearestHit, %struct.NearestHit* %11, i32 0, i32 3, !dbg !5328
  store %struct.MLoopUV* null, %struct.MLoopUV** %luv4, align 8, !dbg !5329
  store float 1.000000e+10, float* %mindist, align 4, !dbg !5330
  %12 = load %struct.NearestHit*, %struct.NearestHit** %hit.addr, align 8, !dbg !5331
  %13 = bitcast %struct.NearestHit* %12 to i8*, !dbg !5332
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 48, i1 false), !dbg !5332
  %14 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !5333
  %bm5 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %14, i32 0, i32 0, !dbg !5334
  %15 = load %struct.BMesh*, %struct.BMesh** %bm5, align 8, !dbg !5334
  call void @BM_mesh_elem_index_ensure(%struct.BMesh* %15, i8 zeroext 1), !dbg !5335
  %16 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !5336
  %bm6 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %16, i32 0, i32 0, !dbg !5336
  %17 = load %struct.BMesh*, %struct.BMesh** %bm6, align 8, !dbg !5336
  %call7 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %17, i8 zeroext 3, i8* null), !dbg !5336
  %18 = bitcast i8* %call7 to %struct.BMFace*, !dbg !5336
  store %struct.BMFace* %18, %struct.BMFace** %efa, align 8, !dbg !5336
  br label %for.cond, !dbg !5336

for.cond:                                         ; preds = %for.inc49, %entry
  %19 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !5338
  %tobool = icmp ne %struct.BMFace* %19, null, !dbg !5336
  br i1 %tobool, label %for.body, label %for.end51, !dbg !5336

for.body:                                         ; preds = %for.cond
  %20 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !5340
  %head = getelementptr inbounds %struct.BMFace, %struct.BMFace* %20, i32 0, i32 0, !dbg !5340
  %data = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head, i32 0, i32 0, !dbg !5340
  %21 = load i8*, i8** %data, align 8, !dbg !5340
  %22 = load i32, i32* %cd_poly_tex_offset, align 4, !dbg !5340
  %idx.ext = sext i32 %22 to i64, !dbg !5340
  %add.ptr = getelementptr inbounds i8, i8* %21, i64 %idx.ext, !dbg !5340
  %23 = bitcast i8* %add.ptr to %struct.MTexPoly*, !dbg !5340
  store %struct.MTexPoly* %23, %struct.MTexPoly** %tf, align 8, !dbg !5342
  %24 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !5343
  %25 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !5345
  %26 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !5346
  %27 = load %struct.MTexPoly*, %struct.MTexPoly** %tf, align 8, !dbg !5347
  %call8 = call zeroext i8 @uvedit_face_visible_test(%struct.Scene* %24, %struct.Image* %25, %struct.BMFace* %26, %struct.MTexPoly* %27), !dbg !5348
  %tobool9 = icmp ne i8 %call8, 0, !dbg !5348
  br i1 %tobool9, label %if.end, label %if.then, !dbg !5349

if.then:                                          ; preds = %for.body
  br label %for.inc49, !dbg !5350

if.end:                                           ; preds = %for.body
  %28 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !5351
  %29 = bitcast %struct.BMFace* %28 to i8*, !dbg !5351
  %call10 = call i8* @BM_iter_new(%struct.BMIter* %liter, %struct.BMesh* null, i8 zeroext 11, i8* %29), !dbg !5351
  %30 = bitcast i8* %call10 to %struct.BMLoop*, !dbg !5351
  store %struct.BMLoop* %30, %struct.BMLoop** %l, align 8, !dbg !5351
  store i32 0, i32* %i, align 4, !dbg !5351
  br label %for.cond11, !dbg !5351

for.cond11:                                       ; preds = %for.inc, %if.end
  %31 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !5353
  %tobool12 = icmp ne %struct.BMLoop* %31, null, !dbg !5351
  br i1 %tobool12, label %for.body13, label %for.end, !dbg !5351

for.body13:                                       ; preds = %for.cond11
  %32 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !5355
  %head14 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %32, i32 0, i32 0, !dbg !5355
  %data15 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head14, i32 0, i32 0, !dbg !5355
  %33 = load i8*, i8** %data15, align 8, !dbg !5355
  %34 = load i32, i32* %cd_loop_uv_offset, align 4, !dbg !5355
  %idx.ext16 = sext i32 %34 to i64, !dbg !5355
  %add.ptr17 = getelementptr inbounds i8, i8* %33, i64 %idx.ext16, !dbg !5355
  %35 = bitcast i8* %add.ptr17 to %struct.MLoopUV*, !dbg !5355
  store %struct.MLoopUV* %35, %struct.MLoopUV** %luv, align 8, !dbg !5357
  %36 = load float*, float** %penalty.addr, align 8, !dbg !5358
  %tobool18 = icmp ne float* %36, null, !dbg !5358
  br i1 %tobool18, label %land.lhs.true, label %if.else, !dbg !5360

land.lhs.true:                                    ; preds = %for.body13
  %37 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !5361
  %38 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !5362
  %39 = load i32, i32* %cd_loop_uv_offset, align 4, !dbg !5363
  %call19 = call zeroext i8 @uvedit_uv_select_test(%struct.Scene* %37, %struct.BMLoop* %38, i32 %39), !dbg !5364
  %conv = zext i8 %call19 to i32, !dbg !5364
  %tobool20 = icmp ne i32 %conv, 0, !dbg !5364
  br i1 %tobool20, label %if.then21, label %if.else, !dbg !5365

if.then21:                                        ; preds = %land.lhs.true
  %40 = load float*, float** %co.addr, align 8, !dbg !5366
  %41 = load %struct.MLoopUV*, %struct.MLoopUV** %luv, align 8, !dbg !5367
  %uv = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %41, i32 0, i32 0, !dbg !5368
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %uv, i64 0, i64 0, !dbg !5367
  %call22 = call float @len_manhattan_v2v2(float* %40, float* %arraydecay), !dbg !5369
  %42 = load float*, float** %penalty.addr, align 8, !dbg !5370
  %call23 = call float @len_manhattan_v2(float* %42), !dbg !5371
  %add = fadd float %call22, %call23, !dbg !5372
  store float %add, float* %dist, align 4, !dbg !5373
  br label %if.end27, !dbg !5374

if.else:                                          ; preds = %land.lhs.true, %for.body13
  %43 = load float*, float** %co.addr, align 8, !dbg !5375
  %44 = load %struct.MLoopUV*, %struct.MLoopUV** %luv, align 8, !dbg !5376
  %uv24 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %44, i32 0, i32 0, !dbg !5377
  %arraydecay25 = getelementptr inbounds [2 x float], [2 x float]* %uv24, i64 0, i64 0, !dbg !5376
  %call26 = call float @len_manhattan_v2v2(float* %43, float* %arraydecay25), !dbg !5378
  store float %call26, float* %dist, align 4, !dbg !5379
  br label %if.end27

if.end27:                                         ; preds = %if.else, %if.then21
  %45 = load float, float* %dist, align 4, !dbg !5380
  %46 = load float, float* %mindist, align 4, !dbg !5382
  %cmp = fcmp ole float %45, %46, !dbg !5383
  br i1 %cmp, label %if.then29, label %if.end47, !dbg !5384

if.then29:                                        ; preds = %if.end27
  %47 = load float, float* %dist, align 4, !dbg !5385
  %48 = load float, float* %mindist, align 4, !dbg !5388
  %cmp30 = fcmp oeq float %47, %48, !dbg !5389
  br i1 %cmp30, label %if.then32, label %if.end37, !dbg !5390

if.then32:                                        ; preds = %if.then29
  %49 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !5391
  %50 = load float*, float** %co.addr, align 8, !dbg !5394
  %51 = load i32, i32* %cd_loop_uv_offset, align 4, !dbg !5395
  %call33 = call zeroext i8 @uv_nearest_between(%struct.BMLoop* %49, float* %50, i32 %51), !dbg !5396
  %tobool34 = icmp ne i8 %call33, 0, !dbg !5396
  br i1 %tobool34, label %if.end36, label %if.then35, !dbg !5397

if.then35:                                        ; preds = %if.then32
  br label %for.inc, !dbg !5398

if.end36:                                         ; preds = %if.then32
  br label %if.end37, !dbg !5400

if.end37:                                         ; preds = %if.end36, %if.then29
  %52 = load float, float* %dist, align 4, !dbg !5401
  store float %52, float* %mindist, align 4, !dbg !5402
  %53 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !5403
  %54 = load %struct.NearestHit*, %struct.NearestHit** %hit.addr, align 8, !dbg !5404
  %l38 = getelementptr inbounds %struct.NearestHit, %struct.NearestHit* %54, i32 0, i32 2, !dbg !5405
  store %struct.BMLoop* %53, %struct.BMLoop** %l38, align 8, !dbg !5406
  %55 = load %struct.MLoopUV*, %struct.MLoopUV** %luv, align 8, !dbg !5407
  %56 = load %struct.NearestHit*, %struct.NearestHit** %hit.addr, align 8, !dbg !5408
  %luv39 = getelementptr inbounds %struct.NearestHit, %struct.NearestHit* %56, i32 0, i32 3, !dbg !5409
  store %struct.MLoopUV* %55, %struct.MLoopUV** %luv39, align 8, !dbg !5410
  %57 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !5411
  %next = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %57, i32 0, i32 6, !dbg !5411
  %58 = load %struct.BMLoop*, %struct.BMLoop** %next, align 8, !dbg !5411
  %head40 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %58, i32 0, i32 0, !dbg !5411
  %data41 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head40, i32 0, i32 0, !dbg !5411
  %59 = load i8*, i8** %data41, align 8, !dbg !5411
  %60 = load i32, i32* %cd_loop_uv_offset, align 4, !dbg !5411
  %idx.ext42 = sext i32 %60 to i64, !dbg !5411
  %add.ptr43 = getelementptr inbounds i8, i8* %59, i64 %idx.ext42, !dbg !5411
  %61 = bitcast i8* %add.ptr43 to %struct.MLoopUV*, !dbg !5411
  %62 = load %struct.NearestHit*, %struct.NearestHit** %hit.addr, align 8, !dbg !5412
  %luv_next44 = getelementptr inbounds %struct.NearestHit, %struct.NearestHit* %62, i32 0, i32 4, !dbg !5413
  store %struct.MLoopUV* %61, %struct.MLoopUV** %luv_next44, align 8, !dbg !5414
  %63 = load %struct.MTexPoly*, %struct.MTexPoly** %tf, align 8, !dbg !5415
  %64 = load %struct.NearestHit*, %struct.NearestHit** %hit.addr, align 8, !dbg !5416
  %tf45 = getelementptr inbounds %struct.NearestHit, %struct.NearestHit* %64, i32 0, i32 1, !dbg !5417
  store %struct.MTexPoly* %63, %struct.MTexPoly** %tf45, align 8, !dbg !5418
  %65 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !5419
  %66 = load %struct.NearestHit*, %struct.NearestHit** %hit.addr, align 8, !dbg !5420
  %efa46 = getelementptr inbounds %struct.NearestHit, %struct.NearestHit* %66, i32 0, i32 0, !dbg !5421
  store %struct.BMFace* %65, %struct.BMFace** %efa46, align 8, !dbg !5422
  %67 = load i32, i32* %i, align 4, !dbg !5423
  %68 = load %struct.NearestHit*, %struct.NearestHit** %hit.addr, align 8, !dbg !5424
  %lindex = getelementptr inbounds %struct.NearestHit, %struct.NearestHit* %68, i32 0, i32 5, !dbg !5425
  store i32 %67, i32* %lindex, align 8, !dbg !5426
  br label %if.end47, !dbg !5427

if.end47:                                         ; preds = %if.end37, %if.end27
  br label %for.inc, !dbg !5428

for.inc:                                          ; preds = %if.end47, %if.then35
  %call48 = call i8* @BM_iter_step(%struct.BMIter* %liter), !dbg !5353
  %69 = bitcast i8* %call48 to %struct.BMLoop*, !dbg !5353
  store %struct.BMLoop* %69, %struct.BMLoop** %l, align 8, !dbg !5353
  %70 = load i32, i32* %i, align 4, !dbg !5353
  %inc = add nsw i32 %70, 1, !dbg !5353
  store i32 %inc, i32* %i, align 4, !dbg !5353
  br label %for.cond11, !dbg !5353, !llvm.loop !5429

for.end:                                          ; preds = %for.cond11
  br label %for.inc49, !dbg !5431

for.inc49:                                        ; preds = %for.end, %if.then
  %call50 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !5338
  %71 = bitcast i8* %call50 to %struct.BMFace*, !dbg !5338
  store %struct.BMFace* %71, %struct.BMFace** %efa, align 8, !dbg !5338
  br label %for.cond, !dbg !5338, !llvm.loop !5432

for.end51:                                        ; preds = %for.cond
  ret void, !dbg !5434
}

; Function Attrs: noinline nounwind uwtable
define internal float @len_manhattan_v2v2(float* %a, float* %b) #0 !dbg !5435 {
entry:
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  %d = alloca [2 x float], align 4
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !5438, metadata !DIExpression()), !dbg !5439
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !5440, metadata !DIExpression()), !dbg !5441
  call void @llvm.dbg.declare(metadata [2 x float]* %d, metadata !5442, metadata !DIExpression()), !dbg !5443
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %d, i64 0, i64 0, !dbg !5444
  %0 = load float*, float** %b.addr, align 8, !dbg !5445
  %1 = load float*, float** %a.addr, align 8, !dbg !5446
  call void @sub_v2_v2v2(float* %arraydecay, float* %0, float* %1), !dbg !5447
  %arraydecay1 = getelementptr inbounds [2 x float], [2 x float]* %d, i64 0, i64 0, !dbg !5448
  %call = call float @len_manhattan_v2(float* %arraydecay1), !dbg !5449
  ret float %call, !dbg !5450
}

; Function Attrs: noinline nounwind uwtable
define internal float @len_manhattan_v2(float* %v) #0 !dbg !5451 {
entry:
  %v.addr = alloca float*, align 8
  store float* %v, float** %v.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v.addr, metadata !5454, metadata !DIExpression()), !dbg !5455
  %0 = load float*, float** %v.addr, align 8, !dbg !5456
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !5456
  %1 = load float, float* %arrayidx, align 4, !dbg !5456
  %2 = call float @llvm.fabs.f32(float %1), !dbg !5457
  %3 = load float*, float** %v.addr, align 8, !dbg !5458
  %arrayidx1 = getelementptr inbounds float, float* %3, i64 1, !dbg !5458
  %4 = load float, float* %arrayidx1, align 4, !dbg !5458
  %5 = call float @llvm.fabs.f32(float %4), !dbg !5459
  %add = fadd float %2, %5, !dbg !5460
  ret float %add, !dbg !5461
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @uv_nearest_between(%struct.BMLoop* %l, float* %co, i32 %cd_loop_uv_offset) #0 !dbg !5462 {
entry:
  %l.addr = alloca %struct.BMLoop*, align 8
  %co.addr = alloca float*, align 8
  %cd_loop_uv_offset.addr = alloca i32, align 4
  %uv_prev = alloca float*, align 8
  %uv_curr = alloca float*, align 8
  %uv_next = alloca float*, align 8
  store %struct.BMLoop* %l, %struct.BMLoop** %l.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l.addr, metadata !5467, metadata !DIExpression()), !dbg !5468
  store float* %co, float** %co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %co.addr, metadata !5469, metadata !DIExpression()), !dbg !5470
  store i32 %cd_loop_uv_offset, i32* %cd_loop_uv_offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cd_loop_uv_offset.addr, metadata !5471, metadata !DIExpression()), !dbg !5472
  call void @llvm.dbg.declare(metadata float** %uv_prev, metadata !5473, metadata !DIExpression()), !dbg !5474
  %0 = load %struct.BMLoop*, %struct.BMLoop** %l.addr, align 8, !dbg !5475
  %prev = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %0, i32 0, i32 7, !dbg !5475
  %1 = load %struct.BMLoop*, %struct.BMLoop** %prev, align 8, !dbg !5475
  %head = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %1, i32 0, i32 0, !dbg !5475
  %data = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head, i32 0, i32 0, !dbg !5475
  %2 = load i8*, i8** %data, align 8, !dbg !5475
  %3 = load i32, i32* %cd_loop_uv_offset.addr, align 4, !dbg !5475
  %idx.ext = sext i32 %3 to i64, !dbg !5475
  %add.ptr = getelementptr inbounds i8, i8* %2, i64 %idx.ext, !dbg !5475
  %4 = bitcast i8* %add.ptr to %struct.MLoopUV*, !dbg !5476
  %uv = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %4, i32 0, i32 0, !dbg !5477
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %uv, i64 0, i64 0, !dbg !5478
  store float* %arraydecay, float** %uv_prev, align 8, !dbg !5474
  call void @llvm.dbg.declare(metadata float** %uv_curr, metadata !5479, metadata !DIExpression()), !dbg !5480
  %5 = load %struct.BMLoop*, %struct.BMLoop** %l.addr, align 8, !dbg !5481
  %head1 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %5, i32 0, i32 0, !dbg !5481
  %data2 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head1, i32 0, i32 0, !dbg !5481
  %6 = load i8*, i8** %data2, align 8, !dbg !5481
  %7 = load i32, i32* %cd_loop_uv_offset.addr, align 4, !dbg !5481
  %idx.ext3 = sext i32 %7 to i64, !dbg !5481
  %add.ptr4 = getelementptr inbounds i8, i8* %6, i64 %idx.ext3, !dbg !5481
  %8 = bitcast i8* %add.ptr4 to %struct.MLoopUV*, !dbg !5482
  %uv5 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %8, i32 0, i32 0, !dbg !5483
  %arraydecay6 = getelementptr inbounds [2 x float], [2 x float]* %uv5, i64 0, i64 0, !dbg !5484
  store float* %arraydecay6, float** %uv_curr, align 8, !dbg !5480
  call void @llvm.dbg.declare(metadata float** %uv_next, metadata !5485, metadata !DIExpression()), !dbg !5486
  %9 = load %struct.BMLoop*, %struct.BMLoop** %l.addr, align 8, !dbg !5487
  %next = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %9, i32 0, i32 6, !dbg !5487
  %10 = load %struct.BMLoop*, %struct.BMLoop** %next, align 8, !dbg !5487
  %head7 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %10, i32 0, i32 0, !dbg !5487
  %data8 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head7, i32 0, i32 0, !dbg !5487
  %11 = load i8*, i8** %data8, align 8, !dbg !5487
  %12 = load i32, i32* %cd_loop_uv_offset.addr, align 4, !dbg !5487
  %idx.ext9 = sext i32 %12 to i64, !dbg !5487
  %add.ptr10 = getelementptr inbounds i8, i8* %11, i64 %idx.ext9, !dbg !5487
  %13 = bitcast i8* %add.ptr10 to %struct.MLoopUV*, !dbg !5488
  %uv11 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %13, i32 0, i32 0, !dbg !5489
  %arraydecay12 = getelementptr inbounds [2 x float], [2 x float]* %uv11, i64 0, i64 0, !dbg !5490
  store float* %arraydecay12, float** %uv_next, align 8, !dbg !5486
  %14 = load float*, float** %uv_prev, align 8, !dbg !5491
  %15 = load float*, float** %uv_curr, align 8, !dbg !5492
  %16 = load float*, float** %co.addr, align 8, !dbg !5493
  %call = call float @line_point_side_v2(float* %14, float* %15, float* %16), !dbg !5494
  %cmp = fcmp ogt float %call, 0.000000e+00, !dbg !5495
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !5496

land.rhs:                                         ; preds = %entry
  %17 = load float*, float** %uv_next, align 8, !dbg !5497
  %18 = load float*, float** %uv_curr, align 8, !dbg !5498
  %19 = load float*, float** %co.addr, align 8, !dbg !5499
  %call13 = call float @line_point_side_v2(float* %17, float* %18, float* %19), !dbg !5500
  %cmp14 = fcmp ole float %call13, 0.000000e+00, !dbg !5501
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %20 = phi i1 [ false, %entry ], [ %cmp14, %land.rhs ], !dbg !5502
  %land.ext = zext i1 %20 to i32, !dbg !5496
  %conv = trunc i32 %land.ext to i8, !dbg !5503
  ret i8 %conv, !dbg !5504
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @ED_uvedit_nearest_uv(%struct.Scene* %scene, %struct.Object* %obedit, %struct.Image* %ima, float* %co, float* %r_uv) #0 !dbg !5505 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %obedit.addr = alloca %struct.Object*, align 8
  %ima.addr = alloca %struct.Image*, align 8
  %co.addr = alloca float*, align 8
  %r_uv.addr = alloca float*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  %efa = alloca %struct.BMFace*, align 8
  %l = alloca %struct.BMLoop*, align 8
  %iter = alloca %struct.BMIter, align 8
  %liter = alloca %struct.BMIter, align 8
  %tf = alloca %struct.MTexPoly*, align 8
  %luv = alloca %struct.MLoopUV*, align 8
  %mindist = alloca float, align 4
  %dist = alloca float, align 4
  %found = alloca i8, align 1
  %cd_loop_uv_offset = alloca i32, align 4
  %cd_poly_tex_offset = alloca i32, align 4
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !5508, metadata !DIExpression()), !dbg !5509
  store %struct.Object* %obedit, %struct.Object** %obedit.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit.addr, metadata !5510, metadata !DIExpression()), !dbg !5511
  store %struct.Image* %ima, %struct.Image** %ima.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Image** %ima.addr, metadata !5512, metadata !DIExpression()), !dbg !5513
  store float* %co, float** %co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %co.addr, metadata !5514, metadata !DIExpression()), !dbg !5515
  store float* %r_uv, float** %r_uv.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_uv.addr, metadata !5516, metadata !DIExpression()), !dbg !5517
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !5518, metadata !DIExpression()), !dbg !5519
  %0 = load %struct.Object*, %struct.Object** %obedit.addr, align 8, !dbg !5520
  %call = call %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object* %0), !dbg !5521
  store %struct.BMEditMesh* %call, %struct.BMEditMesh** %em, align 8, !dbg !5519
  call void @llvm.dbg.declare(metadata %struct.BMFace** %efa, metadata !5522, metadata !DIExpression()), !dbg !5523
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l, metadata !5524, metadata !DIExpression()), !dbg !5525
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iter, metadata !5526, metadata !DIExpression()), !dbg !5527
  call void @llvm.dbg.declare(metadata %struct.BMIter* %liter, metadata !5528, metadata !DIExpression()), !dbg !5529
  call void @llvm.dbg.declare(metadata %struct.MTexPoly** %tf, metadata !5530, metadata !DIExpression()), !dbg !5531
  call void @llvm.dbg.declare(metadata %struct.MLoopUV** %luv, metadata !5532, metadata !DIExpression()), !dbg !5533
  call void @llvm.dbg.declare(metadata float* %mindist, metadata !5534, metadata !DIExpression()), !dbg !5535
  call void @llvm.dbg.declare(metadata float* %dist, metadata !5536, metadata !DIExpression()), !dbg !5537
  call void @llvm.dbg.declare(metadata i8* %found, metadata !5538, metadata !DIExpression()), !dbg !5539
  store i8 0, i8* %found, align 1, !dbg !5539
  call void @llvm.dbg.declare(metadata i32* %cd_loop_uv_offset, metadata !5540, metadata !DIExpression()), !dbg !5541
  %1 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !5542
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %1, i32 0, i32 0, !dbg !5543
  %2 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !5543
  %ldata = getelementptr inbounds %struct.BMesh, %struct.BMesh* %2, i32 0, i32 26, !dbg !5544
  %call1 = call i32 @CustomData_get_offset(%struct.CustomData* %ldata, i32 16), !dbg !5545
  store i32 %call1, i32* %cd_loop_uv_offset, align 4, !dbg !5541
  call void @llvm.dbg.declare(metadata i32* %cd_poly_tex_offset, metadata !5546, metadata !DIExpression()), !dbg !5547
  %3 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !5548
  %bm2 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %3, i32 0, i32 0, !dbg !5549
  %4 = load %struct.BMesh*, %struct.BMesh** %bm2, align 8, !dbg !5549
  %pdata = getelementptr inbounds %struct.BMesh, %struct.BMesh* %4, i32 0, i32 27, !dbg !5550
  %call3 = call i32 @CustomData_get_offset(%struct.CustomData* %pdata, i32 15), !dbg !5551
  store i32 %call3, i32* %cd_poly_tex_offset, align 4, !dbg !5547
  store float 1.000000e+10, float* %mindist, align 4, !dbg !5552
  %5 = load float*, float** %r_uv.addr, align 8, !dbg !5553
  %6 = load float*, float** %co.addr, align 8, !dbg !5554
  call void @copy_v2_v2(float* %5, float* %6), !dbg !5555
  %7 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !5556
  %bm4 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %7, i32 0, i32 0, !dbg !5556
  %8 = load %struct.BMesh*, %struct.BMesh** %bm4, align 8, !dbg !5556
  %call5 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %8, i8 zeroext 3, i8* null), !dbg !5556
  %9 = bitcast i8* %call5 to %struct.BMFace*, !dbg !5556
  store %struct.BMFace* %9, %struct.BMFace** %efa, align 8, !dbg !5556
  br label %for.cond, !dbg !5556

for.cond:                                         ; preds = %for.inc22, %entry
  %10 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !5558
  %tobool = icmp ne %struct.BMFace* %10, null, !dbg !5556
  br i1 %tobool, label %for.body, label %for.end24, !dbg !5556

for.body:                                         ; preds = %for.cond
  %11 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !5560
  %head = getelementptr inbounds %struct.BMFace, %struct.BMFace* %11, i32 0, i32 0, !dbg !5560
  %data = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head, i32 0, i32 0, !dbg !5560
  %12 = load i8*, i8** %data, align 8, !dbg !5560
  %13 = load i32, i32* %cd_poly_tex_offset, align 4, !dbg !5560
  %idx.ext = sext i32 %13 to i64, !dbg !5560
  %add.ptr = getelementptr inbounds i8, i8* %12, i64 %idx.ext, !dbg !5560
  %14 = bitcast i8* %add.ptr to %struct.MTexPoly*, !dbg !5560
  store %struct.MTexPoly* %14, %struct.MTexPoly** %tf, align 8, !dbg !5562
  %15 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !5563
  %16 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !5565
  %17 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !5566
  %18 = load %struct.MTexPoly*, %struct.MTexPoly** %tf, align 8, !dbg !5567
  %call6 = call zeroext i8 @uvedit_face_visible_test(%struct.Scene* %15, %struct.Image* %16, %struct.BMFace* %17, %struct.MTexPoly* %18), !dbg !5568
  %tobool7 = icmp ne i8 %call6, 0, !dbg !5568
  br i1 %tobool7, label %if.end, label %if.then, !dbg !5569

if.then:                                          ; preds = %for.body
  br label %for.inc22, !dbg !5570

if.end:                                           ; preds = %for.body
  %19 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !5571
  %20 = bitcast %struct.BMFace* %19 to i8*, !dbg !5571
  %call8 = call i8* @BM_iter_new(%struct.BMIter* %liter, %struct.BMesh* null, i8 zeroext 11, i8* %20), !dbg !5571
  %21 = bitcast i8* %call8 to %struct.BMLoop*, !dbg !5571
  store %struct.BMLoop* %21, %struct.BMLoop** %l, align 8, !dbg !5571
  br label %for.cond9, !dbg !5571

for.cond9:                                        ; preds = %for.inc, %if.end
  %22 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !5573
  %tobool10 = icmp ne %struct.BMLoop* %22, null, !dbg !5571
  br i1 %tobool10, label %for.body11, label %for.end, !dbg !5571

for.body11:                                       ; preds = %for.cond9
  %23 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !5575
  %head12 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %23, i32 0, i32 0, !dbg !5575
  %data13 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head12, i32 0, i32 0, !dbg !5575
  %24 = load i8*, i8** %data13, align 8, !dbg !5575
  %25 = load i32, i32* %cd_loop_uv_offset, align 4, !dbg !5575
  %idx.ext14 = sext i32 %25 to i64, !dbg !5575
  %add.ptr15 = getelementptr inbounds i8, i8* %24, i64 %idx.ext14, !dbg !5575
  %26 = bitcast i8* %add.ptr15 to %struct.MLoopUV*, !dbg !5575
  store %struct.MLoopUV* %26, %struct.MLoopUV** %luv, align 8, !dbg !5577
  %27 = load float*, float** %co.addr, align 8, !dbg !5578
  %28 = load %struct.MLoopUV*, %struct.MLoopUV** %luv, align 8, !dbg !5579
  %uv = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %28, i32 0, i32 0, !dbg !5580
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %uv, i64 0, i64 0, !dbg !5579
  %call16 = call float @len_manhattan_v2v2(float* %27, float* %arraydecay), !dbg !5581
  store float %call16, float* %dist, align 4, !dbg !5582
  %29 = load float, float* %dist, align 4, !dbg !5583
  %30 = load float, float* %mindist, align 4, !dbg !5585
  %cmp = fcmp ole float %29, %30, !dbg !5586
  br i1 %cmp, label %if.then17, label %if.end20, !dbg !5587

if.then17:                                        ; preds = %for.body11
  %31 = load float, float* %dist, align 4, !dbg !5588
  store float %31, float* %mindist, align 4, !dbg !5590
  %32 = load float*, float** %r_uv.addr, align 8, !dbg !5591
  %33 = load %struct.MLoopUV*, %struct.MLoopUV** %luv, align 8, !dbg !5592
  %uv18 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %33, i32 0, i32 0, !dbg !5593
  %arraydecay19 = getelementptr inbounds [2 x float], [2 x float]* %uv18, i64 0, i64 0, !dbg !5592
  call void @copy_v2_v2(float* %32, float* %arraydecay19), !dbg !5594
  store i8 1, i8* %found, align 1, !dbg !5595
  br label %if.end20, !dbg !5596

if.end20:                                         ; preds = %if.then17, %for.body11
  br label %for.inc, !dbg !5597

for.inc:                                          ; preds = %if.end20
  %call21 = call i8* @BM_iter_step(%struct.BMIter* %liter), !dbg !5573
  %34 = bitcast i8* %call21 to %struct.BMLoop*, !dbg !5573
  store %struct.BMLoop* %34, %struct.BMLoop** %l, align 8, !dbg !5573
  br label %for.cond9, !dbg !5573, !llvm.loop !5598

for.end:                                          ; preds = %for.cond9
  br label %for.inc22, !dbg !5600

for.inc22:                                        ; preds = %for.end, %if.then
  %call23 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !5558
  %35 = bitcast i8* %call23 to %struct.BMFace*, !dbg !5558
  store %struct.BMFace* %35, %struct.BMFace** %efa, align 8, !dbg !5558
  br label %for.cond, !dbg !5558, !llvm.loop !5601

for.end24:                                        ; preds = %for.cond
  %36 = load i8, i8* %found, align 1, !dbg !5603
  ret i8 %36, !dbg !5604
}

; Function Attrs: noinline nounwind uwtable
define internal void @copy_v2_v2(float* %r, float* %a) #0 !dbg !5605 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !5606, metadata !DIExpression()), !dbg !5607
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !5608, metadata !DIExpression()), !dbg !5609
  %0 = load float*, float** %a.addr, align 8, !dbg !5610
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !5610
  %1 = load float, float* %arrayidx, align 4, !dbg !5610
  %2 = load float*, float** %r.addr, align 8, !dbg !5611
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !5611
  store float %1, float* %arrayidx1, align 4, !dbg !5612
  %3 = load float*, float** %a.addr, align 8, !dbg !5613
  %arrayidx2 = getelementptr inbounds float, float* %3, i64 1, !dbg !5613
  %4 = load float, float* %arrayidx2, align 4, !dbg !5613
  %5 = load float*, float** %r.addr, align 8, !dbg !5614
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !5614
  store float %4, float* %arrayidx3, align 4, !dbg !5615
  ret void, !dbg !5616
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @ED_operatortypes_uvedit() #0 !dbg !5617 {
entry:
  call void @WM_operatortype_append(void (%struct.wmOperatorType*)* @UV_OT_select_all), !dbg !5620
  call void @WM_operatortype_append(void (%struct.wmOperatorType*)* @UV_OT_select), !dbg !5621
  call void @WM_operatortype_append(void (%struct.wmOperatorType*)* @UV_OT_select_loop), !dbg !5622
  call void @WM_operatortype_append(void (%struct.wmOperatorType*)* @UV_OT_select_linked), !dbg !5623
  call void @WM_operatortype_append(void (%struct.wmOperatorType*)* @UV_OT_select_linked_pick), !dbg !5624
  call void @WM_operatortype_append(void (%struct.wmOperatorType*)* @UV_OT_select_split), !dbg !5625
  call void @WM_operatortype_append(void (%struct.wmOperatorType*)* @UV_OT_select_pinned), !dbg !5626
  call void @WM_operatortype_append(void (%struct.wmOperatorType*)* @UV_OT_select_border), !dbg !5627
  call void @WM_operatortype_append(void (%struct.wmOperatorType*)* @UV_OT_select_lasso), !dbg !5628
  call void @WM_operatortype_append(void (%struct.wmOperatorType*)* @UV_OT_circle_select), !dbg !5629
  call void @WM_operatortype_append(void (%struct.wmOperatorType*)* @UV_OT_select_more), !dbg !5630
  call void @WM_operatortype_append(void (%struct.wmOperatorType*)* @UV_OT_select_less), !dbg !5631
  call void @WM_operatortype_append(void (%struct.wmOperatorType*)* @UV_OT_snap_cursor), !dbg !5632
  call void @WM_operatortype_append(void (%struct.wmOperatorType*)* @UV_OT_snap_selected), !dbg !5633
  call void @WM_operatortype_append(void (%struct.wmOperatorType*)* @UV_OT_align), !dbg !5634
  call void @WM_operatortype_append(void (%struct.wmOperatorType*)* @UV_OT_stitch), !dbg !5635
  call void @WM_operatortype_append(void (%struct.wmOperatorType*)* @UV_OT_seams_from_islands), !dbg !5636
  call void @WM_operatortype_append(void (%struct.wmOperatorType*)* @UV_OT_mark_seam), !dbg !5637
  call void @WM_operatortype_append(void (%struct.wmOperatorType*)* @UV_OT_weld), !dbg !5638
  call void @WM_operatortype_append(void (%struct.wmOperatorType*)* @UV_OT_remove_doubles), !dbg !5639
  call void @WM_operatortype_append(void (%struct.wmOperatorType*)* @UV_OT_pin), !dbg !5640
  call void @WM_operatortype_append(void (%struct.wmOperatorType*)* @UV_OT_average_islands_scale), !dbg !5641
  call void @WM_operatortype_append(void (%struct.wmOperatorType*)* @UV_OT_cube_project), !dbg !5642
  call void @WM_operatortype_append(void (%struct.wmOperatorType*)* @UV_OT_cylinder_project), !dbg !5643
  call void @WM_operatortype_append(void (%struct.wmOperatorType*)* @UV_OT_project_from_view), !dbg !5644
  call void @WM_operatortype_append(void (%struct.wmOperatorType*)* @UV_OT_minimize_stretch), !dbg !5645
  call void @WM_operatortype_append(void (%struct.wmOperatorType*)* @UV_OT_pack_islands), !dbg !5646
  call void @WM_operatortype_append(void (%struct.wmOperatorType*)* @UV_OT_reset), !dbg !5647
  call void @WM_operatortype_append(void (%struct.wmOperatorType*)* @UV_OT_sphere_project), !dbg !5648
  call void @WM_operatortype_append(void (%struct.wmOperatorType*)* @UV_OT_unwrap), !dbg !5649
  call void @WM_operatortype_append(void (%struct.wmOperatorType*)* @UV_OT_reveal), !dbg !5650
  call void @WM_operatortype_append(void (%struct.wmOperatorType*)* @UV_OT_hide), !dbg !5651
  call void @WM_operatortype_append(void (%struct.wmOperatorType*)* @UV_OT_cursor_set), !dbg !5652
  call void @WM_operatortype_append(void (%struct.wmOperatorType*)* @UV_OT_tile_set), !dbg !5653
  ret void, !dbg !5654
}

declare dso_local void @WM_operatortype_append(void (%struct.wmOperatorType*)*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @UV_OT_select_all(%struct.wmOperatorType* %ot) #0 !dbg !5655 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !5656, metadata !DIExpression()), !dbg !5657
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5658
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !5659
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.36, i64 0, i64 0), i8** %name, align 8, !dbg !5660
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5661
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !5662
  store i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.37, i64 0, i64 0), i8** %description, align 8, !dbg !5663
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5664
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !5665
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.18, i64 0, i64 0), i8** %idname, align 8, !dbg !5666
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5667
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 19, !dbg !5668
  store i16 3, i16* %flag, align 8, !dbg !5669
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5670
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 4, !dbg !5671
  store i32 (%struct.bContext*, %struct.wmOperator*)* @uv_select_all_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !5672
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5673
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 9, !dbg !5674
  store i32 (%struct.bContext*)* @ED_operator_uvedit, i32 (%struct.bContext*)** %poll, align 8, !dbg !5675
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5676
  call void @WM_operator_properties_select_all(%struct.wmOperatorType* %6), !dbg !5677
  ret void, !dbg !5678
}

; Function Attrs: noinline nounwind uwtable
define internal void @UV_OT_select(%struct.wmOperatorType* %ot) #0 !dbg !5679 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !5680, metadata !DIExpression()), !dbg !5681
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5682
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !5683
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.38, i64 0, i64 0), i8** %name, align 8, !dbg !5684
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5685
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !5686
  store i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.39, i64 0, i64 0), i8** %description, align 8, !dbg !5687
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5688
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !5689
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.5, i64 0, i64 0), i8** %idname, align 8, !dbg !5690
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5691
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 19, !dbg !5692
  store i16 2, i16* %flag, align 8, !dbg !5693
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5694
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 4, !dbg !5695
  store i32 (%struct.bContext*, %struct.wmOperator*)* @uv_select_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !5696
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5697
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 6, !dbg !5698
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @uv_select_invoke, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !5699
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5700
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 9, !dbg !5701
  store i32 (%struct.bContext*)* @ED_operator_uvedit, i32 (%struct.bContext*)** %poll, align 8, !dbg !5702
  %7 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5703
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %7, i32 0, i32 11, !dbg !5704
  %8 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !5704
  %9 = bitcast %struct.StructRNA* %8 to i8*, !dbg !5703
  %call = call %struct.PropertyRNA* @RNA_def_boolean(i8* %9, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.40, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.41, i64 0, i64 0)), !dbg !5705
  %10 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5706
  %srna1 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %10, i32 0, i32 11, !dbg !5707
  %11 = load %struct.StructRNA*, %struct.StructRNA** %srna1, align 8, !dbg !5707
  %12 = bitcast %struct.StructRNA* %11 to i8*, !dbg !5706
  %call2 = call %struct.PropertyRNA* @RNA_def_float_vector(i8* %12, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.42, i64 0, i64 0), i32 2, float* null, float 0xC7EFFFFFE0000000, float 0x47EFFFFFE0000000, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.43, i64 0, i64 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str.44, i64 0, i64 0), float -1.000000e+02, float 1.000000e+02), !dbg !5708
  ret void, !dbg !5709
}

; Function Attrs: noinline nounwind uwtable
define internal void @UV_OT_select_loop(%struct.wmOperatorType* %ot) #0 !dbg !5710 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !5711, metadata !DIExpression()), !dbg !5712
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5713
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !5714
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.47, i64 0, i64 0), i8** %name, align 8, !dbg !5715
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5716
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !5717
  store i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.48, i64 0, i64 0), i8** %description, align 8, !dbg !5718
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5719
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !5720
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i8** %idname, align 8, !dbg !5721
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5722
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 19, !dbg !5723
  store i16 2, i16* %flag, align 8, !dbg !5724
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5725
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 4, !dbg !5726
  store i32 (%struct.bContext*, %struct.wmOperator*)* @uv_select_loop_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !5727
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5728
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 6, !dbg !5729
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @uv_select_loop_invoke, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !5730
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5731
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 9, !dbg !5732
  store i32 (%struct.bContext*)* @ED_operator_uvedit, i32 (%struct.bContext*)** %poll, align 8, !dbg !5733
  %7 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5734
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %7, i32 0, i32 11, !dbg !5735
  %8 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !5735
  %9 = bitcast %struct.StructRNA* %8 to i8*, !dbg !5734
  %call = call %struct.PropertyRNA* @RNA_def_boolean(i8* %9, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.40, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.41, i64 0, i64 0)), !dbg !5736
  %10 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5737
  %srna1 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %10, i32 0, i32 11, !dbg !5738
  %11 = load %struct.StructRNA*, %struct.StructRNA** %srna1, align 8, !dbg !5738
  %12 = bitcast %struct.StructRNA* %11 to i8*, !dbg !5737
  %call2 = call %struct.PropertyRNA* @RNA_def_float_vector(i8* %12, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.42, i64 0, i64 0), i32 2, float* null, float 0xC7EFFFFFE0000000, float 0x47EFFFFFE0000000, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.43, i64 0, i64 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str.44, i64 0, i64 0), float -1.000000e+02, float 1.000000e+02), !dbg !5739
  ret void, !dbg !5740
}

; Function Attrs: noinline nounwind uwtable
define internal void @UV_OT_select_linked(%struct.wmOperatorType* %ot) #0 !dbg !5741 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !5742, metadata !DIExpression()), !dbg !5743
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5744
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !5745
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.49, i64 0, i64 0), i8** %name, align 8, !dbg !5746
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5747
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !5748
  store i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.50, i64 0, i64 0), i8** %description, align 8, !dbg !5749
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5750
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !5751
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.14, i64 0, i64 0), i8** %idname, align 8, !dbg !5752
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5753
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 19, !dbg !5754
  store i16 3, i16* %flag, align 8, !dbg !5755
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5756
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 4, !dbg !5757
  store i32 (%struct.bContext*, %struct.wmOperator*)* @uv_select_linked_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !5758
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5759
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 9, !dbg !5760
  store i32 (%struct.bContext*)* @ED_operator_uvedit, i32 (%struct.bContext*)** %poll, align 8, !dbg !5761
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5762
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 11, !dbg !5763
  %7 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !5763
  %8 = bitcast %struct.StructRNA* %7 to i8*, !dbg !5762
  %call = call %struct.PropertyRNA* @RNA_def_boolean(i8* %8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.40, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.41, i64 0, i64 0)), !dbg !5764
  ret void, !dbg !5765
}

; Function Attrs: noinline nounwind uwtable
define internal void @UV_OT_select_linked_pick(%struct.wmOperatorType* %ot) #0 !dbg !5766 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !5767, metadata !DIExpression()), !dbg !5768
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5769
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !5770
  store i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.52, i64 0, i64 0), i8** %name, align 8, !dbg !5771
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5772
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !5773
  store i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.53, i64 0, i64 0), i8** %description, align 8, !dbg !5774
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5775
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !5776
  store i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.15, i64 0, i64 0), i8** %idname, align 8, !dbg !5777
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5778
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 19, !dbg !5779
  store i16 2, i16* %flag, align 8, !dbg !5780
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5781
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 6, !dbg !5782
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @uv_select_linked_pick_invoke, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !5783
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5784
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 4, !dbg !5785
  store i32 (%struct.bContext*, %struct.wmOperator*)* @uv_select_linked_pick_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !5786
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5787
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 9, !dbg !5788
  store i32 (%struct.bContext*)* @ED_operator_uvedit, i32 (%struct.bContext*)** %poll, align 8, !dbg !5789
  %7 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5790
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %7, i32 0, i32 11, !dbg !5791
  %8 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !5791
  %9 = bitcast %struct.StructRNA* %8 to i8*, !dbg !5790
  %call = call %struct.PropertyRNA* @RNA_def_boolean(i8* %9, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.40, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.41, i64 0, i64 0)), !dbg !5792
  %10 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5793
  %srna1 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %10, i32 0, i32 11, !dbg !5794
  %11 = load %struct.StructRNA*, %struct.StructRNA** %srna1, align 8, !dbg !5794
  %12 = bitcast %struct.StructRNA* %11 to i8*, !dbg !5793
  %call2 = call %struct.PropertyRNA* @RNA_def_float_vector(i8* %12, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.42, i64 0, i64 0), i32 2, float* null, float 0xC7EFFFFFE0000000, float 0x47EFFFFFE0000000, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.43, i64 0, i64 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str.44, i64 0, i64 0), float -1.000000e+02, float 1.000000e+02), !dbg !5795
  ret void, !dbg !5796
}

; Function Attrs: noinline nounwind uwtable
define internal void @UV_OT_select_split(%struct.wmOperatorType* %ot) #0 !dbg !5797 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !5798, metadata !DIExpression()), !dbg !5799
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5800
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !5801
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.54, i64 0, i64 0), i8** %name, align 8, !dbg !5802
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5803
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !5804
  store i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.55, i64 0, i64 0), i8** %description, align 8, !dbg !5805
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5806
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !5807
  store i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.8, i64 0, i64 0), i8** %idname, align 8, !dbg !5808
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5809
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 19, !dbg !5810
  store i16 3, i16* %flag, align 8, !dbg !5811
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5812
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 4, !dbg !5813
  store i32 (%struct.bContext*, %struct.wmOperator*)* @uv_select_split_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !5814
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5815
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 9, !dbg !5816
  store i32 (%struct.bContext*)* @ED_operator_uvedit, i32 (%struct.bContext*)** %poll, align 8, !dbg !5817
  ret void, !dbg !5818
}

; Function Attrs: noinline nounwind uwtable
define internal void @UV_OT_select_pinned(%struct.wmOperatorType* %ot) #0 !dbg !5819 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !5820, metadata !DIExpression()), !dbg !5821
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5822
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !5823
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.57, i64 0, i64 0), i8** %name, align 8, !dbg !5824
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5825
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !5826
  store i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.58, i64 0, i64 0), i8** %description, align 8, !dbg !5827
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5828
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !5829
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.20, i64 0, i64 0), i8** %idname, align 8, !dbg !5830
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5831
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 19, !dbg !5832
  store i16 3, i16* %flag, align 8, !dbg !5833
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5834
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 4, !dbg !5835
  store i32 (%struct.bContext*, %struct.wmOperator*)* @uv_select_pinned_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !5836
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5837
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 9, !dbg !5838
  store i32 (%struct.bContext*)* @ED_operator_uvedit, i32 (%struct.bContext*)** %poll, align 8, !dbg !5839
  ret void, !dbg !5840
}

; Function Attrs: noinline nounwind uwtable
define internal void @UV_OT_select_border(%struct.wmOperatorType* %ot) #0 !dbg !5841 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !5842, metadata !DIExpression()), !dbg !5843
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5844
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !5845
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.59, i64 0, i64 0), i8** %name, align 8, !dbg !5846
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5847
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !5848
  store i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.60, i64 0, i64 0), i8** %description, align 8, !dbg !5849
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5850
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !5851
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.9, i64 0, i64 0), i8** %idname, align 8, !dbg !5852
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5853
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 6, !dbg !5854
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @WM_border_select_invoke, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !5855
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5856
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 4, !dbg !5857
  store i32 (%struct.bContext*, %struct.wmOperator*)* @uv_border_select_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !5858
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5859
  %modal = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 8, !dbg !5860
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @WM_border_select_modal, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %modal, align 8, !dbg !5861
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5862
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 9, !dbg !5863
  store i32 (%struct.bContext*)* @ED_operator_uvedit_space_image, i32 (%struct.bContext*)** %poll, align 8, !dbg !5864
  %7 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5865
  %cancel = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %7, i32 0, i32 7, !dbg !5866
  store void (%struct.bContext*, %struct.wmOperator*)* @WM_border_select_cancel, void (%struct.bContext*, %struct.wmOperator*)** %cancel, align 8, !dbg !5867
  %8 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5868
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %8, i32 0, i32 19, !dbg !5869
  store i16 3, i16* %flag, align 8, !dbg !5870
  %9 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5871
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %9, i32 0, i32 11, !dbg !5872
  %10 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !5872
  %11 = bitcast %struct.StructRNA* %10 to i8*, !dbg !5871
  %call = call %struct.PropertyRNA* @RNA_def_boolean(i8* %11, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.10, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.61, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.62, i64 0, i64 0)), !dbg !5873
  %12 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5874
  call void @WM_operator_properties_gesture_border(%struct.wmOperatorType* %12, i8 zeroext 1), !dbg !5875
  ret void, !dbg !5876
}

; Function Attrs: noinline nounwind uwtable
define internal void @UV_OT_select_lasso(%struct.wmOperatorType* %ot) #0 !dbg !5877 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !5878, metadata !DIExpression()), !dbg !5879
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5880
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !5881
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.64, i64 0, i64 0), i8** %name, align 8, !dbg !5882
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5883
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !5884
  store i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.65, i64 0, i64 0), i8** %description, align 8, !dbg !5885
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5886
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !5887
  store i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.12, i64 0, i64 0), i8** %idname, align 8, !dbg !5888
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5889
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 6, !dbg !5890
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @WM_gesture_lasso_invoke, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !5891
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5892
  %modal = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 8, !dbg !5893
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @WM_gesture_lasso_modal, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %modal, align 8, !dbg !5894
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5895
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 4, !dbg !5896
  store i32 (%struct.bContext*, %struct.wmOperator*)* @uv_lasso_select_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !5897
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5898
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 9, !dbg !5899
  store i32 (%struct.bContext*)* @ED_operator_uvedit_space_image, i32 (%struct.bContext*)** %poll, align 8, !dbg !5900
  %7 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5901
  %cancel = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %7, i32 0, i32 7, !dbg !5902
  store void (%struct.bContext*, %struct.wmOperator*)* @WM_gesture_lasso_cancel, void (%struct.bContext*, %struct.wmOperator*)** %cancel, align 8, !dbg !5903
  %8 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5904
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %8, i32 0, i32 19, !dbg !5905
  store i16 2, i16* %flag, align 8, !dbg !5906
  %9 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5907
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %9, i32 0, i32 11, !dbg !5908
  %10 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !5908
  %11 = bitcast %struct.StructRNA* %10 to i8*, !dbg !5907
  %call = call %struct.PropertyRNA* @RNA_def_collection_runtime(i8* %11, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.66, i64 0, i64 0), %struct.StructRNA* @RNA_OperatorMousePath, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.67, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.68, i64 0, i64 0)), !dbg !5909
  %12 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5910
  %srna1 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %12, i32 0, i32 11, !dbg !5911
  %13 = load %struct.StructRNA*, %struct.StructRNA** %srna1, align 8, !dbg !5911
  %14 = bitcast %struct.StructRNA* %13 to i8*, !dbg !5910
  %call2 = call %struct.PropertyRNA* @RNA_def_boolean(i8* %14, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.13, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.69, i64 0, i64 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.70, i64 0, i64 0)), !dbg !5912
  %15 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5913
  %srna3 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %15, i32 0, i32 11, !dbg !5914
  %16 = load %struct.StructRNA*, %struct.StructRNA** %srna3, align 8, !dbg !5914
  %17 = bitcast %struct.StructRNA* %16 to i8*, !dbg !5913
  %call4 = call %struct.PropertyRNA* @RNA_def_boolean(i8* %17, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6, i64 0, i64 0), i32 1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.40, i64 0, i64 0), i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.71, i64 0, i64 0)), !dbg !5915
  ret void, !dbg !5916
}

; Function Attrs: noinline nounwind uwtable
define internal void @UV_OT_circle_select(%struct.wmOperatorType* %ot) #0 !dbg !5917 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !5918, metadata !DIExpression()), !dbg !5919
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5920
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !5921
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.72, i64 0, i64 0), i8** %name, align 8, !dbg !5922
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5923
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !5924
  store i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.73, i64 0, i64 0), i8** %description, align 8, !dbg !5925
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5926
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !5927
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.11, i64 0, i64 0), i8** %idname, align 8, !dbg !5928
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5929
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 6, !dbg !5930
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @WM_gesture_circle_invoke, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !5931
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5932
  %modal = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 8, !dbg !5933
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @WM_gesture_circle_modal, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %modal, align 8, !dbg !5934
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5935
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 4, !dbg !5936
  store i32 (%struct.bContext*, %struct.wmOperator*)* @uv_circle_select_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !5937
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5938
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 9, !dbg !5939
  store i32 (%struct.bContext*)* @ED_operator_uvedit_space_image, i32 (%struct.bContext*)** %poll, align 8, !dbg !5940
  %7 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5941
  %cancel = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %7, i32 0, i32 7, !dbg !5942
  store void (%struct.bContext*, %struct.wmOperator*)* @WM_gesture_circle_cancel, void (%struct.bContext*, %struct.wmOperator*)** %cancel, align 8, !dbg !5943
  %8 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5944
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %8, i32 0, i32 19, !dbg !5945
  store i16 3, i16* %flag, align 8, !dbg !5946
  %9 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5947
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %9, i32 0, i32 11, !dbg !5948
  %10 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !5948
  %11 = bitcast %struct.StructRNA* %10 to i8*, !dbg !5947
  %call = call %struct.PropertyRNA* @RNA_def_int(i8* %11, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.74, i64 0, i64 0), i32 0, i32 -2147483648, i32 2147483647, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.75, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.68, i64 0, i64 0), i32 -2147483648, i32 2147483647), !dbg !5949
  %12 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5950
  %srna1 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %12, i32 0, i32 11, !dbg !5951
  %13 = load %struct.StructRNA*, %struct.StructRNA** %srna1, align 8, !dbg !5951
  %14 = bitcast %struct.StructRNA* %13 to i8*, !dbg !5950
  %call2 = call %struct.PropertyRNA* @RNA_def_int(i8* %14, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.76, i64 0, i64 0), i32 0, i32 -2147483648, i32 2147483647, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.77, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.68, i64 0, i64 0), i32 -2147483648, i32 2147483647), !dbg !5952
  %15 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5953
  %srna3 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %15, i32 0, i32 11, !dbg !5954
  %16 = load %struct.StructRNA*, %struct.StructRNA** %srna3, align 8, !dbg !5954
  %17 = bitcast %struct.StructRNA* %16 to i8*, !dbg !5953
  %call4 = call %struct.PropertyRNA* @RNA_def_int(i8* %17, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.78, i64 0, i64 0), i32 1, i32 1, i32 2147483647, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.79, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.68, i64 0, i64 0), i32 1, i32 2147483647), !dbg !5955
  %18 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5956
  %srna5 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %18, i32 0, i32 11, !dbg !5957
  %19 = load %struct.StructRNA*, %struct.StructRNA** %srna5, align 8, !dbg !5957
  %20 = bitcast %struct.StructRNA* %19 to i8*, !dbg !5956
  %call6 = call %struct.PropertyRNA* @RNA_def_int(i8* %20, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.63, i64 0, i64 0), i32 0, i32 -2147483648, i32 2147483647, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.80, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.68, i64 0, i64 0), i32 -2147483648, i32 2147483647), !dbg !5958
  ret void, !dbg !5959
}

; Function Attrs: noinline nounwind uwtable
define internal void @UV_OT_select_more(%struct.wmOperatorType* %ot) #0 !dbg !5960 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !5961, metadata !DIExpression()), !dbg !5962
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5963
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !5964
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.81, i64 0, i64 0), i8** %name, align 8, !dbg !5965
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5966
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !5967
  store i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.82, i64 0, i64 0), i8** %description, align 8, !dbg !5968
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5969
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !5970
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.16, i64 0, i64 0), i8** %idname, align 8, !dbg !5971
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5972
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 19, !dbg !5973
  store i16 3, i16* %flag, align 8, !dbg !5974
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5975
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 4, !dbg !5976
  store i32 (%struct.bContext*, %struct.wmOperator*)* @uv_select_more_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !5977
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5978
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 9, !dbg !5979
  store i32 (%struct.bContext*)* @ED_operator_uvedit_space_image, i32 (%struct.bContext*)** %poll, align 8, !dbg !5980
  ret void, !dbg !5981
}

; Function Attrs: noinline nounwind uwtable
define internal void @UV_OT_select_less(%struct.wmOperatorType* %ot) #0 !dbg !5982 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !5983, metadata !DIExpression()), !dbg !5984
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5985
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !5986
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.83, i64 0, i64 0), i8** %name, align 8, !dbg !5987
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5988
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !5989
  store i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.84, i64 0, i64 0), i8** %description, align 8, !dbg !5990
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5991
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !5992
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.17, i64 0, i64 0), i8** %idname, align 8, !dbg !5993
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5994
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 19, !dbg !5995
  store i16 3, i16* %flag, align 8, !dbg !5996
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5997
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 4, !dbg !5998
  store i32 (%struct.bContext*, %struct.wmOperator*)* @uv_select_less_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !5999
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6000
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 9, !dbg !6001
  store i32 (%struct.bContext*)* @ED_operator_uvedit_space_image, i32 (%struct.bContext*)** %poll, align 8, !dbg !6002
  ret void, !dbg !6003
}

; Function Attrs: noinline nounwind uwtable
define internal void @UV_OT_snap_cursor(%struct.wmOperatorType* %ot) #0 !dbg !2 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !6004, metadata !DIExpression()), !dbg !6005
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6006
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !6007
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.89, i64 0, i64 0), i8** %name, align 8, !dbg !6008
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6009
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !6010
  store i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.90, i64 0, i64 0), i8** %description, align 8, !dbg !6011
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6012
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !6013
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.91, i64 0, i64 0), i8** %idname, align 8, !dbg !6014
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6015
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 19, !dbg !6016
  store i16 3, i16* %flag, align 8, !dbg !6017
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6018
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 4, !dbg !6019
  store i32 (%struct.bContext*, %struct.wmOperator*)* @uv_snap_cursor_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !6020
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6021
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 9, !dbg !6022
  store i32 (%struct.bContext*)* @ED_operator_uvedit_space_image, i32 (%struct.bContext*)** %poll, align 8, !dbg !6023
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6024
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 11, !dbg !6025
  %7 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !6025
  %8 = bitcast %struct.StructRNA* %7 to i8*, !dbg !6024
  %call = call %struct.PropertyRNA* @RNA_def_enum(i8* %8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.92, i64 0, i64 0), %struct.EnumPropertyItem* getelementptr inbounds ([3 x %struct.EnumPropertyItem], [3 x %struct.EnumPropertyItem]* @UV_OT_snap_cursor.target_items, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.93, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.94, i64 0, i64 0)), !dbg !6026
  ret void, !dbg !6027
}

; Function Attrs: noinline nounwind uwtable
define internal void @UV_OT_snap_selected(%struct.wmOperatorType* %ot) #0 !dbg !3565 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !6028, metadata !DIExpression()), !dbg !6029
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6030
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !6031
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.101, i64 0, i64 0), i8** %name, align 8, !dbg !6032
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6033
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !6034
  store i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.102, i64 0, i64 0), i8** %description, align 8, !dbg !6035
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6036
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !6037
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.103, i64 0, i64 0), i8** %idname, align 8, !dbg !6038
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6039
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 19, !dbg !6040
  store i16 3, i16* %flag, align 8, !dbg !6041
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6042
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 4, !dbg !6043
  store i32 (%struct.bContext*, %struct.wmOperator*)* @uv_snap_selection_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !6044
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6045
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 9, !dbg !6046
  store i32 (%struct.bContext*)* @ED_operator_uvedit_space_image, i32 (%struct.bContext*)** %poll, align 8, !dbg !6047
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6048
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 11, !dbg !6049
  %7 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !6049
  %8 = bitcast %struct.StructRNA* %7 to i8*, !dbg !6048
  %call = call %struct.PropertyRNA* @RNA_def_enum(i8* %8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.92, i64 0, i64 0), %struct.EnumPropertyItem* getelementptr inbounds ([5 x %struct.EnumPropertyItem], [5 x %struct.EnumPropertyItem]* @UV_OT_snap_selected.target_items, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.93, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.94, i64 0, i64 0)), !dbg !6050
  ret void, !dbg !6051
}

; Function Attrs: noinline nounwind uwtable
define internal void @UV_OT_align(%struct.wmOperatorType* %ot) #0 !dbg !3578 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !6052, metadata !DIExpression()), !dbg !6053
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6054
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !6055
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.122, i64 0, i64 0), i8** %name, align 8, !dbg !6056
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6057
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !6058
  store i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.123, i64 0, i64 0), i8** %description, align 8, !dbg !6059
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6060
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !6061
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.124, i64 0, i64 0), i8** %idname, align 8, !dbg !6062
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6063
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 19, !dbg !6064
  store i16 3, i16* %flag, align 8, !dbg !6065
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6066
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 4, !dbg !6067
  store i32 (%struct.bContext*, %struct.wmOperator*)* @uv_align_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !6068
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6069
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 9, !dbg !6070
  store i32 (%struct.bContext*)* @ED_operator_uvedit, i32 (%struct.bContext*)** %poll, align 8, !dbg !6071
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6072
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 11, !dbg !6073
  %7 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !6073
  %8 = bitcast %struct.StructRNA* %7 to i8*, !dbg !6072
  %call = call %struct.PropertyRNA* @RNA_def_enum(i8* %8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.125, i64 0, i64 0), %struct.EnumPropertyItem* getelementptr inbounds ([7 x %struct.EnumPropertyItem], [7 x %struct.EnumPropertyItem]* @UV_OT_align.axis_items, i64 0, i64 0), i32 97, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.126, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.127, i64 0, i64 0)), !dbg !6074
  ret void, !dbg !6075
}

declare dso_local void @UV_OT_stitch(%struct.wmOperatorType*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @UV_OT_seams_from_islands(%struct.wmOperatorType* %ot) #0 !dbg !6076 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !6077, metadata !DIExpression()), !dbg !6078
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6079
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !6080
  store i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.129, i64 0, i64 0), i8** %name, align 8, !dbg !6081
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6082
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !6083
  store i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.130, i64 0, i64 0), i8** %description, align 8, !dbg !6084
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6085
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !6086
  store i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.131, i64 0, i64 0), i8** %idname, align 8, !dbg !6087
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6088
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 19, !dbg !6089
  store i16 3, i16* %flag, align 8, !dbg !6090
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6091
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 4, !dbg !6092
  store i32 (%struct.bContext*, %struct.wmOperator*)* @uv_seams_from_islands_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !6093
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6094
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 9, !dbg !6095
  store i32 (%struct.bContext*)* @ED_operator_uvedit, i32 (%struct.bContext*)** %poll, align 8, !dbg !6096
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6097
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 11, !dbg !6098
  %7 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !6098
  %8 = bitcast %struct.StructRNA* %7 to i8*, !dbg !6097
  %call = call %struct.PropertyRNA* @RNA_def_boolean(i8* %8, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.132, i64 0, i64 0), i32 1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.133, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.134, i64 0, i64 0)), !dbg !6099
  %9 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6100
  %srna1 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %9, i32 0, i32 11, !dbg !6101
  %10 = load %struct.StructRNA*, %struct.StructRNA** %srna1, align 8, !dbg !6101
  %11 = bitcast %struct.StructRNA* %10 to i8*, !dbg !6100
  %call2 = call %struct.PropertyRNA* @RNA_def_boolean(i8* %11, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.135, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.136, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.137, i64 0, i64 0)), !dbg !6102
  ret void, !dbg !6103
}

; Function Attrs: noinline nounwind uwtable
define internal void @UV_OT_mark_seam(%struct.wmOperatorType* %ot) #0 !dbg !6104 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !6105, metadata !DIExpression()), !dbg !6106
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6107
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !6108
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.133, i64 0, i64 0), i8** %name, align 8, !dbg !6109
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6110
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !6111
  store i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.138, i64 0, i64 0), i8** %description, align 8, !dbg !6112
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6113
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !6114
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4, i64 0, i64 0), i8** %idname, align 8, !dbg !6115
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6116
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 19, !dbg !6117
  store i16 3, i16* %flag, align 8, !dbg !6118
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6119
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 4, !dbg !6120
  store i32 (%struct.bContext*, %struct.wmOperator*)* @uv_mark_seam_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !6121
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6122
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 9, !dbg !6123
  store i32 (%struct.bContext*)* @ED_operator_uvedit, i32 (%struct.bContext*)** %poll, align 8, !dbg !6124
  ret void, !dbg !6125
}

; Function Attrs: noinline nounwind uwtable
define internal void @UV_OT_weld(%struct.wmOperatorType* %ot) #0 !dbg !6126 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !6127, metadata !DIExpression()), !dbg !6128
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6129
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !6130
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.139, i64 0, i64 0), i8** %name, align 8, !dbg !6131
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6132
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !6133
  store i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.140, i64 0, i64 0), i8** %description, align 8, !dbg !6134
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6135
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !6136
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.141, i64 0, i64 0), i8** %idname, align 8, !dbg !6137
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6138
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 19, !dbg !6139
  store i16 3, i16* %flag, align 8, !dbg !6140
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6141
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 4, !dbg !6142
  store i32 (%struct.bContext*, %struct.wmOperator*)* @uv_weld_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !6143
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6144
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 9, !dbg !6145
  store i32 (%struct.bContext*)* @ED_operator_uvedit, i32 (%struct.bContext*)** %poll, align 8, !dbg !6146
  ret void, !dbg !6147
}

; Function Attrs: noinline nounwind uwtable
define internal void @UV_OT_remove_doubles(%struct.wmOperatorType* %ot) #0 !dbg !6148 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !6149, metadata !DIExpression()), !dbg !6150
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6151
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !6152
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.142, i64 0, i64 0), i8** %name, align 8, !dbg !6153
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6154
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !6155
  store i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str.143, i64 0, i64 0), i8** %description, align 8, !dbg !6156
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6157
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !6158
  store i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.144, i64 0, i64 0), i8** %idname, align 8, !dbg !6159
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6160
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 19, !dbg !6161
  store i16 3, i16* %flag, align 8, !dbg !6162
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6163
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 4, !dbg !6164
  store i32 (%struct.bContext*, %struct.wmOperator*)* @uv_remove_doubles_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !6165
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6166
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 9, !dbg !6167
  store i32 (%struct.bContext*)* @ED_operator_uvedit, i32 (%struct.bContext*)** %poll, align 8, !dbg !6168
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6169
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 11, !dbg !6170
  %7 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !6170
  %8 = bitcast %struct.StructRNA* %7 to i8*, !dbg !6169
  %call = call %struct.PropertyRNA* @RNA_def_float(i8* %8, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.145, i64 0, i64 0), float 0x3F947AE140000000, float 0.000000e+00, float 1.000000e+01, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.146, i64 0, i64 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.147, i64 0, i64 0), float 0.000000e+00, float 1.000000e+00), !dbg !6171
  %9 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6172
  %srna1 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %9, i32 0, i32 11, !dbg !6173
  %10 = load %struct.StructRNA*, %struct.StructRNA** %srna1, align 8, !dbg !6173
  %11 = bitcast %struct.StructRNA* %10 to i8*, !dbg !6172
  %call2 = call %struct.PropertyRNA* @RNA_def_boolean(i8* %11, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.148, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.149, i64 0, i64 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.150, i64 0, i64 0)), !dbg !6174
  ret void, !dbg !6175
}

; Function Attrs: noinline nounwind uwtable
define internal void @UV_OT_pin(%struct.wmOperatorType* %ot) #0 !dbg !6176 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !6177, metadata !DIExpression()), !dbg !6178
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6179
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !6180
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.154, i64 0, i64 0), i8** %name, align 8, !dbg !6181
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6182
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !6183
  store i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.155, i64 0, i64 0), i8** %description, align 8, !dbg !6184
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6185
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !6186
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.23, i64 0, i64 0), i8** %idname, align 8, !dbg !6187
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6188
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 19, !dbg !6189
  store i16 3, i16* %flag, align 8, !dbg !6190
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6191
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 4, !dbg !6192
  store i32 (%struct.bContext*, %struct.wmOperator*)* @uv_pin_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !6193
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6194
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 9, !dbg !6195
  store i32 (%struct.bContext*)* @ED_operator_uvedit, i32 (%struct.bContext*)** %poll, align 8, !dbg !6196
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6197
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 11, !dbg !6198
  %7 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !6198
  %8 = bitcast %struct.StructRNA* %7 to i8*, !dbg !6197
  %call = call %struct.PropertyRNA* @RNA_def_boolean(i8* %8, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.24, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.156, i64 0, i64 0), i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.157, i64 0, i64 0)), !dbg !6199
  ret void, !dbg !6200
}

declare dso_local void @UV_OT_average_islands_scale(%struct.wmOperatorType*) #2

declare dso_local void @UV_OT_cube_project(%struct.wmOperatorType*) #2

declare dso_local void @UV_OT_cylinder_project(%struct.wmOperatorType*) #2

declare dso_local void @UV_OT_project_from_view(%struct.wmOperatorType*) #2

declare dso_local void @UV_OT_minimize_stretch(%struct.wmOperatorType*) #2

declare dso_local void @UV_OT_pack_islands(%struct.wmOperatorType*) #2

declare dso_local void @UV_OT_reset(%struct.wmOperatorType*) #2

declare dso_local void @UV_OT_sphere_project(%struct.wmOperatorType*) #2

declare dso_local void @UV_OT_unwrap(%struct.wmOperatorType*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @UV_OT_reveal(%struct.wmOperatorType* %ot) #0 !dbg !6201 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !6202, metadata !DIExpression()), !dbg !6203
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6204
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !6205
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.158, i64 0, i64 0), i8** %name, align 8, !dbg !6206
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6207
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !6208
  store i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.159, i64 0, i64 0), i8** %description, align 8, !dbg !6209
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6210
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !6211
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.31, i64 0, i64 0), i8** %idname, align 8, !dbg !6212
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6213
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 19, !dbg !6214
  store i16 3, i16* %flag, align 8, !dbg !6215
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6216
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 4, !dbg !6217
  store i32 (%struct.bContext*, %struct.wmOperator*)* @uv_reveal_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !6218
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6219
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 9, !dbg !6220
  store i32 (%struct.bContext*)* @ED_operator_uvedit, i32 (%struct.bContext*)** %poll, align 8, !dbg !6221
  ret void, !dbg !6222
}

; Function Attrs: noinline nounwind uwtable
define internal void @UV_OT_hide(%struct.wmOperatorType* %ot) #0 !dbg !6223 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !6224, metadata !DIExpression()), !dbg !6225
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6226
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !6227
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.160, i64 0, i64 0), i8** %name, align 8, !dbg !6228
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6229
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !6230
  store i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.161, i64 0, i64 0), i8** %description, align 8, !dbg !6231
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6232
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !6233
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.29, i64 0, i64 0), i8** %idname, align 8, !dbg !6234
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6235
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 19, !dbg !6236
  store i16 3, i16* %flag, align 8, !dbg !6237
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6238
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 4, !dbg !6239
  store i32 (%struct.bContext*, %struct.wmOperator*)* @uv_hide_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !6240
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6241
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 9, !dbg !6242
  store i32 (%struct.bContext*)* @ED_operator_uvedit, i32 (%struct.bContext*)** %poll, align 8, !dbg !6243
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6244
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 11, !dbg !6245
  %7 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !6245
  %8 = bitcast %struct.StructRNA* %7 to i8*, !dbg !6244
  %call = call %struct.PropertyRNA* @RNA_def_boolean(i8* %8, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.30, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.149, i64 0, i64 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.162, i64 0, i64 0)), !dbg !6246
  ret void, !dbg !6247
}

; Function Attrs: noinline nounwind uwtable
define internal void @UV_OT_cursor_set(%struct.wmOperatorType* %ot) #0 !dbg !6248 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !6249, metadata !DIExpression()), !dbg !6250
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6251
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !6252
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.163, i64 0, i64 0), i8** %name, align 8, !dbg !6253
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6254
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !6255
  store i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.164, i64 0, i64 0), i8** %description, align 8, !dbg !6256
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6257
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !6258
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.32, i64 0, i64 0), i8** %idname, align 8, !dbg !6259
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6260
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !6261
  store i32 (%struct.bContext*, %struct.wmOperator*)* @uv_set_2d_cursor_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !6262
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6263
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 6, !dbg !6264
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @uv_set_2d_cursor_invoke, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !6265
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6266
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 9, !dbg !6267
  store i32 (%struct.bContext*)* @uv_set_2d_cursor_poll, i32 (%struct.bContext*)** %poll, align 8, !dbg !6268
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6269
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 19, !dbg !6270
  store i16 3, i16* %flag, align 8, !dbg !6271
  %7 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6272
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %7, i32 0, i32 11, !dbg !6273
  %8 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !6273
  %9 = bitcast %struct.StructRNA* %8 to i8*, !dbg !6272
  %call = call %struct.PropertyRNA* @RNA_def_float_vector(i8* %9, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.42, i64 0, i64 0), i32 2, float* null, float 0xC7EFFFFFE0000000, float 0x47EFFFFFE0000000, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.43, i64 0, i64 0), i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.165, i64 0, i64 0), float -1.000000e+01, float 1.000000e+01), !dbg !6274
  ret void, !dbg !6275
}

; Function Attrs: noinline nounwind uwtable
define internal void @UV_OT_tile_set(%struct.wmOperatorType* %ot) #0 !dbg !6276 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !6277, metadata !DIExpression()), !dbg !6278
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6279
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !6280
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.166, i64 0, i64 0), i8** %name, align 8, !dbg !6281
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6282
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !6283
  store i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.167, i64 0, i64 0), i8** %description, align 8, !dbg !6284
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6285
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !6286
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.33, i64 0, i64 0), i8** %idname, align 8, !dbg !6287
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6288
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !6289
  store i32 (%struct.bContext*, %struct.wmOperator*)* @set_tile_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !6290
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6291
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 6, !dbg !6292
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @set_tile_invoke, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !6293
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6294
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 9, !dbg !6295
  store i32 (%struct.bContext*)* @ED_operator_image_active, i32 (%struct.bContext*)** %poll, align 8, !dbg !6296
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6297
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 19, !dbg !6298
  store i16 3, i16* %flag, align 8, !dbg !6299
  %7 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6300
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %7, i32 0, i32 11, !dbg !6301
  %8 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !6301
  %9 = bitcast %struct.StructRNA* %8 to i8*, !dbg !6300
  %call = call %struct.PropertyRNA* @RNA_def_int_vector(i8* %9, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.168, i64 0, i64 0), i32 2, i32* null, i32 0, i32 2147483647, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.169, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.170, i64 0, i64 0), i32 0, i32 10), !dbg !6302
  ret void, !dbg !6303
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @ED_keymap_uvedit(%struct.wmKeyConfig* %keyconf) #0 !dbg !6304 {
entry:
  %keyconf.addr = alloca %struct.wmKeyConfig*, align 8
  %keymap = alloca %struct.wmKeyMap*, align 8
  %kmi = alloca %struct.wmKeyMapItem*, align 8
  store %struct.wmKeyConfig* %keyconf, %struct.wmKeyConfig** %keyconf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmKeyConfig** %keyconf.addr, metadata !6319, metadata !DIExpression()), !dbg !6320
  call void @llvm.dbg.declare(metadata %struct.wmKeyMap** %keymap, metadata !6321, metadata !DIExpression()), !dbg !6324
  call void @llvm.dbg.declare(metadata %struct.wmKeyMapItem** %kmi, metadata !6325, metadata !DIExpression()), !dbg !6349
  %0 = load %struct.wmKeyConfig*, %struct.wmKeyConfig** %keyconf.addr, align 8, !dbg !6350
  %call = call %struct.wmKeyMap* @WM_keymap_find(%struct.wmKeyConfig* %0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i32 0, i32 0), !dbg !6351
  store %struct.wmKeyMap* %call, %struct.wmKeyMap** %keymap, align 8, !dbg !6352
  %1 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !6353
  %poll = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %1, i32 0, i32 9, !dbg !6354
  store i32 (%struct.bContext*)* @ED_operator_uvedit_can_uv_sculpt, i32 (%struct.bContext*)** %poll, align 8, !dbg !6355
  %2 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !6356
  %call1 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %2, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1, i64 0, i64 0), i32 113, i32 1, i32 0, i32 0), !dbg !6357
  store %struct.wmKeyMapItem* %call1, %struct.wmKeyMapItem** %kmi, align 8, !dbg !6358
  %3 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !6359
  %ptr = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %3, i32 0, i32 17, !dbg !6360
  %4 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !6360
  call void @RNA_string_set(%struct.PointerRNA* %4, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.3, i64 0, i64 0)), !dbg !6361
  %5 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !6362
  %call2 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %5, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4, i64 0, i64 0), i32 101, i32 1, i32 2, i32 0), !dbg !6363
  %6 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !6364
  %call3 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %6, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.5, i64 0, i64 0), i32 6, i32 1, i32 0, i32 0), !dbg !6365
  %ptr4 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %call3, i32 0, i32 17, !dbg !6366
  %7 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr4, align 8, !dbg !6366
  call void @RNA_boolean_set(%struct.PointerRNA* %7, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6, i64 0, i64 0), i32 0), !dbg !6367
  %8 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !6368
  %call5 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %8, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.5, i64 0, i64 0), i32 6, i32 1, i32 1, i32 0), !dbg !6369
  %ptr6 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %call5, i32 0, i32 17, !dbg !6370
  %9 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr6, align 8, !dbg !6370
  call void @RNA_boolean_set(%struct.PointerRNA* %9, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6, i64 0, i64 0), i32 1), !dbg !6371
  %10 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !6372
  %call7 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %10, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i32 6, i32 1, i32 4, i32 0), !dbg !6373
  %ptr8 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %call7, i32 0, i32 17, !dbg !6374
  %11 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr8, align 8, !dbg !6374
  call void @RNA_boolean_set(%struct.PointerRNA* %11, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6, i64 0, i64 0), i32 0), !dbg !6375
  %12 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !6376
  %call9 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %12, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i32 6, i32 1, i32 5, i32 0), !dbg !6377
  %ptr10 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %call9, i32 0, i32 17, !dbg !6378
  %13 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr10, align 8, !dbg !6378
  call void @RNA_boolean_set(%struct.PointerRNA* %13, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6, i64 0, i64 0), i32 1), !dbg !6379
  %14 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !6380
  %call11 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %14, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.8, i64 0, i64 0), i32 121, i32 1, i32 0, i32 0), !dbg !6381
  %15 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !6382
  %call12 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %15, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.9, i64 0, i64 0), i32 98, i32 1, i32 0, i32 0), !dbg !6383
  store %struct.wmKeyMapItem* %call12, %struct.wmKeyMapItem** %kmi, align 8, !dbg !6384
  %16 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !6385
  %ptr13 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %16, i32 0, i32 17, !dbg !6386
  %17 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr13, align 8, !dbg !6386
  call void @RNA_boolean_set(%struct.PointerRNA* %17, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.10, i64 0, i64 0), i32 0), !dbg !6387
  %18 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !6388
  %call14 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %18, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.9, i64 0, i64 0), i32 98, i32 1, i32 1, i32 0), !dbg !6389
  store %struct.wmKeyMapItem* %call14, %struct.wmKeyMapItem** %kmi, align 8, !dbg !6390
  %19 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !6391
  %ptr15 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %19, i32 0, i32 17, !dbg !6392
  %20 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr15, align 8, !dbg !6392
  call void @RNA_boolean_set(%struct.PointerRNA* %20, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.10, i64 0, i64 0), i32 1), !dbg !6393
  %21 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !6394
  %call16 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %21, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.11, i64 0, i64 0), i32 99, i32 1, i32 0, i32 0), !dbg !6395
  %22 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !6396
  %call17 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %22, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.12, i64 0, i64 0), i32 20486, i32 -1, i32 2, i32 0), !dbg !6397
  store %struct.wmKeyMapItem* %call17, %struct.wmKeyMapItem** %kmi, align 8, !dbg !6398
  %23 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !6399
  %ptr18 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %23, i32 0, i32 17, !dbg !6400
  %24 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr18, align 8, !dbg !6400
  call void @RNA_boolean_set(%struct.PointerRNA* %24, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.13, i64 0, i64 0), i32 0), !dbg !6401
  %25 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !6402
  %call19 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %25, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.12, i64 0, i64 0), i32 20486, i32 -1, i32 3, i32 0), !dbg !6403
  store %struct.wmKeyMapItem* %call19, %struct.wmKeyMapItem** %kmi, align 8, !dbg !6404
  %26 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !6405
  %ptr20 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %26, i32 0, i32 17, !dbg !6406
  %27 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr20, align 8, !dbg !6406
  call void @RNA_boolean_set(%struct.PointerRNA* %27, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.13, i64 0, i64 0), i32 1), !dbg !6407
  %28 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !6408
  %call21 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %28, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.14, i64 0, i64 0), i32 108, i32 1, i32 2, i32 0), !dbg !6409
  %ptr22 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %call21, i32 0, i32 17, !dbg !6410
  %29 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr22, align 8, !dbg !6410
  call void @RNA_boolean_set(%struct.PointerRNA* %29, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6, i64 0, i64 0), i32 0), !dbg !6411
  %30 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !6412
  %call23 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %30, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.15, i64 0, i64 0), i32 108, i32 1, i32 0, i32 0), !dbg !6413
  %ptr24 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %call23, i32 0, i32 17, !dbg !6414
  %31 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr24, align 8, !dbg !6414
  call void @RNA_boolean_set(%struct.PointerRNA* %31, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6, i64 0, i64 0), i32 0), !dbg !6415
  %32 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !6416
  %call25 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %32, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.14, i64 0, i64 0), i32 108, i32 1, i32 3, i32 0), !dbg !6417
  %ptr26 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %call25, i32 0, i32 17, !dbg !6418
  %33 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr26, align 8, !dbg !6418
  call void @RNA_boolean_set(%struct.PointerRNA* %33, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6, i64 0, i64 0), i32 1), !dbg !6419
  %34 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !6420
  %call27 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %34, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.15, i64 0, i64 0), i32 108, i32 1, i32 1, i32 0), !dbg !6421
  %ptr28 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %call27, i32 0, i32 17, !dbg !6422
  %35 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr28, align 8, !dbg !6422
  call void @RNA_boolean_set(%struct.PointerRNA* %35, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6, i64 0, i64 0), i32 1), !dbg !6423
  %36 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !6424
  %call29 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %36, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.16, i64 0, i64 0), i32 164, i32 1, i32 2, i32 0), !dbg !6425
  %37 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !6426
  %call30 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %37, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.17, i64 0, i64 0), i32 162, i32 1, i32 2, i32 0), !dbg !6427
  %38 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !6428
  %call31 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %38, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.18, i64 0, i64 0), i32 97, i32 1, i32 0, i32 0), !dbg !6429
  store %struct.wmKeyMapItem* %call31, %struct.wmKeyMapItem** %kmi, align 8, !dbg !6430
  %39 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !6431
  %ptr32 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %39, i32 0, i32 17, !dbg !6432
  %40 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr32, align 8, !dbg !6432
  call void @RNA_enum_set(%struct.PointerRNA* %40, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.19, i64 0, i64 0), i32 0), !dbg !6433
  %41 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !6434
  %call33 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %41, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.18, i64 0, i64 0), i32 105, i32 1, i32 2, i32 0), !dbg !6435
  store %struct.wmKeyMapItem* %call33, %struct.wmKeyMapItem** %kmi, align 8, !dbg !6436
  %42 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !6437
  %ptr34 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %42, i32 0, i32 17, !dbg !6438
  %43 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr34, align 8, !dbg !6438
  call void @RNA_enum_set(%struct.PointerRNA* %43, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.19, i64 0, i64 0), i32 3), !dbg !6439
  %44 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !6440
  %call35 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %44, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.20, i64 0, i64 0), i32 112, i32 1, i32 1, i32 0), !dbg !6441
  %45 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !6442
  %call36 = call %struct.wmKeyMapItem* @WM_keymap_add_menu(%struct.wmKeyMap* %45, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.21, i64 0, i64 0), i32 119, i32 1, i32 0, i32 0), !dbg !6443
  %46 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !6444
  %call37 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %46, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.22, i64 0, i64 0), i32 118, i32 1, i32 0, i32 0), !dbg !6445
  %47 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !6446
  %call38 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %47, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.23, i64 0, i64 0), i32 112, i32 1, i32 0, i32 0), !dbg !6447
  store %struct.wmKeyMapItem* %call38, %struct.wmKeyMapItem** %kmi, align 8, !dbg !6448
  %48 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !6449
  %ptr39 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %48, i32 0, i32 17, !dbg !6450
  %49 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr39, align 8, !dbg !6450
  call void @RNA_boolean_set(%struct.PointerRNA* %49, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.24, i64 0, i64 0), i32 0), !dbg !6451
  %50 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !6452
  %call40 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %50, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.23, i64 0, i64 0), i32 112, i32 1, i32 4, i32 0), !dbg !6453
  store %struct.wmKeyMapItem* %call40, %struct.wmKeyMapItem** %kmi, align 8, !dbg !6454
  %51 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !6455
  %ptr41 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %51, i32 0, i32 17, !dbg !6456
  %52 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr41, align 8, !dbg !6456
  call void @RNA_boolean_set(%struct.PointerRNA* %52, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.24, i64 0, i64 0), i32 1), !dbg !6457
  %53 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !6458
  %call42 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %53, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.25, i64 0, i64 0), i32 101, i32 1, i32 0, i32 0), !dbg !6459
  %54 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !6460
  %call43 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %54, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.26, i64 0, i64 0), i32 118, i32 1, i32 2, i32 0), !dbg !6461
  %55 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !6462
  %call44 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %55, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.27, i64 0, i64 0), i32 112, i32 1, i32 2, i32 0), !dbg !6463
  %56 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !6464
  %call45 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %56, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.28, i64 0, i64 0), i32 97, i32 1, i32 2, i32 0), !dbg !6465
  %57 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !6466
  %call46 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %57, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.29, i64 0, i64 0), i32 104, i32 1, i32 0, i32 0), !dbg !6467
  store %struct.wmKeyMapItem* %call46, %struct.wmKeyMapItem** %kmi, align 8, !dbg !6468
  %58 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !6469
  %ptr47 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %58, i32 0, i32 17, !dbg !6470
  %59 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr47, align 8, !dbg !6470
  call void @RNA_boolean_set(%struct.PointerRNA* %59, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.30, i64 0, i64 0), i32 0), !dbg !6471
  %60 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !6472
  %call48 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %60, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.29, i64 0, i64 0), i32 104, i32 1, i32 1, i32 0), !dbg !6473
  store %struct.wmKeyMapItem* %call48, %struct.wmKeyMapItem** %kmi, align 8, !dbg !6474
  %61 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !6475
  %ptr49 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %61, i32 0, i32 17, !dbg !6476
  %62 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr49, align 8, !dbg !6476
  call void @RNA_boolean_set(%struct.PointerRNA* %62, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.30, i64 0, i64 0), i32 1), !dbg !6477
  %63 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !6478
  %call50 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %63, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.31, i64 0, i64 0), i32 104, i32 1, i32 4, i32 0), !dbg !6479
  %64 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !6480
  %call51 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %64, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.32, i64 0, i64 0), i32 5, i32 1, i32 0, i32 0), !dbg !6481
  %65 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !6482
  %call52 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %65, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.33, i64 0, i64 0), i32 5, i32 1, i32 1, i32 0), !dbg !6483
  %66 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !6484
  %call53 = call %struct.wmKeyMapItem* @WM_keymap_add_menu(%struct.wmKeyMap* %66, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.34, i64 0, i64 0), i32 115, i32 1, i32 1, i32 0), !dbg !6485
  %67 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !6486
  %call54 = call %struct.wmKeyMapItem* @WM_keymap_add_menu(%struct.wmKeyMap* %67, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.35, i64 0, i64 0), i32 219, i32 1, i32 2, i32 0), !dbg !6487
  %68 = load %struct.wmKeyConfig*, %struct.wmKeyConfig** %keyconf.addr, align 8, !dbg !6488
  %69 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !6489
  call void @ED_keymap_proportional_cycle(%struct.wmKeyConfig* %68, %struct.wmKeyMap* %69), !dbg !6490
  %70 = load %struct.wmKeyConfig*, %struct.wmKeyConfig** %keyconf.addr, align 8, !dbg !6491
  %71 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !6492
  call void @ED_keymap_proportional_editmode(%struct.wmKeyConfig* %70, %struct.wmKeyMap* %71, i8 zeroext 0), !dbg !6493
  %72 = load %struct.wmKeyConfig*, %struct.wmKeyConfig** %keyconf.addr, align 8, !dbg !6494
  %73 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !6495
  call void @transform_keymap_for_space(%struct.wmKeyConfig* %72, %struct.wmKeyMap* %73, i32 6), !dbg !6496
  ret void, !dbg !6497
}

declare dso_local %struct.wmKeyMap* @WM_keymap_find(%struct.wmKeyConfig*, i8*, i32, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @ED_operator_uvedit_can_uv_sculpt(%struct.bContext* %C) #0 !dbg !6498 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %sima = alloca %struct.SpaceImage*, align 8
  %toolsettings = alloca %struct.ToolSettings*, align 8
  %obedit = alloca %struct.Object*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !6499, metadata !DIExpression()), !dbg !6500
  call void @llvm.dbg.declare(metadata %struct.SpaceImage** %sima, metadata !6501, metadata !DIExpression()), !dbg !6502
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6503
  %call = call %struct.SpaceImage* @CTX_wm_space_image(%struct.bContext* %0), !dbg !6504
  store %struct.SpaceImage* %call, %struct.SpaceImage** %sima, align 8, !dbg !6502
  call void @llvm.dbg.declare(metadata %struct.ToolSettings** %toolsettings, metadata !6505, metadata !DIExpression()), !dbg !6506
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6507
  %call1 = call %struct.ToolSettings* @CTX_data_tool_settings(%struct.bContext* %1), !dbg !6508
  store %struct.ToolSettings* %call1, %struct.ToolSettings** %toolsettings, align 8, !dbg !6506
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !6509, metadata !DIExpression()), !dbg !6510
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6511
  %call2 = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %2), !dbg !6512
  store %struct.Object* %call2, %struct.Object** %obedit, align 8, !dbg !6510
  %3 = load %struct.SpaceImage*, %struct.SpaceImage** %sima, align 8, !dbg !6513
  %4 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !6514
  %call3 = call zeroext i8 @ED_space_image_show_uvedit(%struct.SpaceImage* %3, %struct.Object* %4), !dbg !6515
  %conv = zext i8 %call3 to i32, !dbg !6515
  %tobool = icmp ne i32 %conv, 0, !dbg !6515
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !6516

land.rhs:                                         ; preds = %entry
  %5 = load %struct.ToolSettings*, %struct.ToolSettings** %toolsettings, align 8, !dbg !6517
  %use_uv_sculpt = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %5, i32 0, i32 64, !dbg !6518
  %6 = load i32, i32* %use_uv_sculpt, align 8, !dbg !6518
  %tobool4 = icmp ne i32 %6, 0, !dbg !6519
  %lnot = xor i1 %tobool4, true, !dbg !6519
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %7 = phi i1 [ false, %entry ], [ %lnot, %land.rhs ], !dbg !6520
  %land.ext = zext i1 %7 to i32, !dbg !6516
  ret i32 %land.ext, !dbg !6521
}

declare dso_local %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap*, i8*, i32, i32, i32, i32) #2

declare dso_local void @RNA_string_set(%struct.PointerRNA*, i8*, i8*) #2

declare dso_local void @RNA_boolean_set(%struct.PointerRNA*, i8*, i32) #2

declare dso_local void @RNA_enum_set(%struct.PointerRNA*, i8*, i32) #2

declare dso_local %struct.wmKeyMapItem* @WM_keymap_add_menu(%struct.wmKeyMap*, i8*, i32, i32, i32, i32) #2

declare dso_local void @ED_keymap_proportional_cycle(%struct.wmKeyConfig*, %struct.wmKeyMap*) #2

declare dso_local void @ED_keymap_proportional_editmode(%struct.wmKeyConfig*, %struct.wmKeyMap*, i8 zeroext) #2

declare dso_local void @transform_keymap_for_space(%struct.wmKeyConfig*, %struct.wmKeyMap*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @BM_iter_init(%struct.BMIter* %iter, %struct.BMesh* %bm, i8 zeroext %itype, i8* %data) #0 !dbg !6522 {
entry:
  %retval = alloca i8, align 1
  %iter.addr = alloca %struct.BMIter*, align 8
  %bm.addr = alloca %struct.BMesh*, align 8
  %itype.addr = alloca i8, align 1
  %data.addr = alloca i8*, align 8
  store %struct.BMIter* %iter, %struct.BMIter** %iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMIter** %iter.addr, metadata !6525, metadata !DIExpression()), !dbg !6526
  store %struct.BMesh* %bm, %struct.BMesh** %bm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm.addr, metadata !6527, metadata !DIExpression()), !dbg !6528
  store i8 %itype, i8* %itype.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %itype.addr, metadata !6529, metadata !DIExpression()), !dbg !6530
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !6531, metadata !DIExpression()), !dbg !6532
  %0 = load i8, i8* %itype.addr, align 1, !dbg !6533
  %1 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !6534
  %itype1 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %1, i32 0, i32 4, !dbg !6535
  store i8 %0, i8* %itype1, align 4, !dbg !6536
  %2 = load i8, i8* %itype.addr, align 1, !dbg !6537
  %conv = zext i8 %2 to i32, !dbg !6538
  switch i32 %conv, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb3
    i32 3, label %sw.bb10
    i32 4, label %sw.bb17
    i32 5, label %sw.bb21
    i32 6, label %sw.bb26
    i32 7, label %sw.bb31
    i32 8, label %sw.bb35
    i32 9, label %sw.bb40
    i32 10, label %sw.bb44
    i32 11, label %sw.bb49
    i32 13, label %sw.bb54
    i32 14, label %sw.bb58
  ], !dbg !6539

sw.bb:                                            ; preds = %entry
  %3 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !6540
  %begin = getelementptr inbounds %struct.BMIter, %struct.BMIter* %3, i32 0, i32 1, !dbg !6542
  store void (i8*)* bitcast (void (%struct.BMIter__elem_of_mesh*)* @bmiter__elem_of_mesh_begin to void (i8*)*), void (i8*)** %begin, align 8, !dbg !6543
  %4 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !6544
  %step = getelementptr inbounds %struct.BMIter, %struct.BMIter* %4, i32 0, i32 2, !dbg !6545
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__elem_of_mesh*)* @bmiter__elem_of_mesh_step to i8* (i8*)*), i8* (i8*)** %step, align 8, !dbg !6546
  %5 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !6547
  %vpool = getelementptr inbounds %struct.BMesh, %struct.BMesh* %5, i32 0, i32 9, !dbg !6548
  %6 = load %struct.BLI_mempool*, %struct.BLI_mempool** %vpool, align 8, !dbg !6548
  %7 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !6549
  %data2 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %7, i32 0, i32 0, !dbg !6550
  %elem_of_mesh = bitcast %union.anon.0* %data2 to %struct.BMIter__elem_of_mesh*, !dbg !6551
  %pooliter = getelementptr inbounds %struct.BMIter__elem_of_mesh, %struct.BMIter__elem_of_mesh* %elem_of_mesh, i32 0, i32 0, !dbg !6552
  %pool = getelementptr inbounds %struct.BLI_mempool_iter, %struct.BLI_mempool_iter* %pooliter, i32 0, i32 0, !dbg !6553
  store %struct.BLI_mempool* %6, %struct.BLI_mempool** %pool, align 8, !dbg !6554
  br label %sw.epilog, !dbg !6555

sw.bb3:                                           ; preds = %entry
  %8 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !6556
  %begin4 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %8, i32 0, i32 1, !dbg !6557
  store void (i8*)* bitcast (void (%struct.BMIter__elem_of_mesh*)* @bmiter__elem_of_mesh_begin to void (i8*)*), void (i8*)** %begin4, align 8, !dbg !6558
  %9 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !6559
  %step5 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %9, i32 0, i32 2, !dbg !6560
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__elem_of_mesh*)* @bmiter__elem_of_mesh_step to i8* (i8*)*), i8* (i8*)** %step5, align 8, !dbg !6561
  %10 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !6562
  %epool = getelementptr inbounds %struct.BMesh, %struct.BMesh* %10, i32 0, i32 10, !dbg !6563
  %11 = load %struct.BLI_mempool*, %struct.BLI_mempool** %epool, align 8, !dbg !6563
  %12 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !6564
  %data6 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %12, i32 0, i32 0, !dbg !6565
  %elem_of_mesh7 = bitcast %union.anon.0* %data6 to %struct.BMIter__elem_of_mesh*, !dbg !6566
  %pooliter8 = getelementptr inbounds %struct.BMIter__elem_of_mesh, %struct.BMIter__elem_of_mesh* %elem_of_mesh7, i32 0, i32 0, !dbg !6567
  %pool9 = getelementptr inbounds %struct.BLI_mempool_iter, %struct.BLI_mempool_iter* %pooliter8, i32 0, i32 0, !dbg !6568
  store %struct.BLI_mempool* %11, %struct.BLI_mempool** %pool9, align 8, !dbg !6569
  br label %sw.epilog, !dbg !6570

sw.bb10:                                          ; preds = %entry
  %13 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !6571
  %begin11 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %13, i32 0, i32 1, !dbg !6572
  store void (i8*)* bitcast (void (%struct.BMIter__elem_of_mesh*)* @bmiter__elem_of_mesh_begin to void (i8*)*), void (i8*)** %begin11, align 8, !dbg !6573
  %14 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !6574
  %step12 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %14, i32 0, i32 2, !dbg !6575
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__elem_of_mesh*)* @bmiter__elem_of_mesh_step to i8* (i8*)*), i8* (i8*)** %step12, align 8, !dbg !6576
  %15 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !6577
  %fpool = getelementptr inbounds %struct.BMesh, %struct.BMesh* %15, i32 0, i32 12, !dbg !6578
  %16 = load %struct.BLI_mempool*, %struct.BLI_mempool** %fpool, align 8, !dbg !6578
  %17 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !6579
  %data13 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %17, i32 0, i32 0, !dbg !6580
  %elem_of_mesh14 = bitcast %union.anon.0* %data13 to %struct.BMIter__elem_of_mesh*, !dbg !6581
  %pooliter15 = getelementptr inbounds %struct.BMIter__elem_of_mesh, %struct.BMIter__elem_of_mesh* %elem_of_mesh14, i32 0, i32 0, !dbg !6582
  %pool16 = getelementptr inbounds %struct.BLI_mempool_iter, %struct.BLI_mempool_iter* %pooliter15, i32 0, i32 0, !dbg !6583
  store %struct.BLI_mempool* %16, %struct.BLI_mempool** %pool16, align 8, !dbg !6584
  br label %sw.epilog, !dbg !6585

sw.bb17:                                          ; preds = %entry
  %18 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !6586
  %begin18 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %18, i32 0, i32 1, !dbg !6587
  store void (i8*)* bitcast (void (%struct.BMIter__edge_of_vert*)* @bmiter__edge_of_vert_begin to void (i8*)*), void (i8*)** %begin18, align 8, !dbg !6588
  %19 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !6589
  %step19 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %19, i32 0, i32 2, !dbg !6590
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__edge_of_vert*)* @bmiter__edge_of_vert_step to i8* (i8*)*), i8* (i8*)** %step19, align 8, !dbg !6591
  %20 = load i8*, i8** %data.addr, align 8, !dbg !6592
  %21 = bitcast i8* %20 to %struct.BMVert*, !dbg !6593
  %22 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !6594
  %data20 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %22, i32 0, i32 0, !dbg !6595
  %edge_of_vert = bitcast %union.anon.0* %data20 to %struct.BMIter__edge_of_vert*, !dbg !6596
  %vdata = getelementptr inbounds %struct.BMIter__edge_of_vert, %struct.BMIter__edge_of_vert* %edge_of_vert, i32 0, i32 0, !dbg !6597
  store %struct.BMVert* %21, %struct.BMVert** %vdata, align 8, !dbg !6598
  br label %sw.epilog, !dbg !6599

sw.bb21:                                          ; preds = %entry
  %23 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !6600
  %begin22 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %23, i32 0, i32 1, !dbg !6601
  store void (i8*)* bitcast (void (%struct.BMIter__face_of_vert*)* @bmiter__face_of_vert_begin to void (i8*)*), void (i8*)** %begin22, align 8, !dbg !6602
  %24 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !6603
  %step23 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %24, i32 0, i32 2, !dbg !6604
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__face_of_vert*)* @bmiter__face_of_vert_step to i8* (i8*)*), i8* (i8*)** %step23, align 8, !dbg !6605
  %25 = load i8*, i8** %data.addr, align 8, !dbg !6606
  %26 = bitcast i8* %25 to %struct.BMVert*, !dbg !6607
  %27 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !6608
  %data24 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %27, i32 0, i32 0, !dbg !6609
  %face_of_vert = bitcast %union.anon.0* %data24 to %struct.BMIter__face_of_vert*, !dbg !6610
  %vdata25 = getelementptr inbounds %struct.BMIter__face_of_vert, %struct.BMIter__face_of_vert* %face_of_vert, i32 0, i32 0, !dbg !6611
  store %struct.BMVert* %26, %struct.BMVert** %vdata25, align 8, !dbg !6612
  br label %sw.epilog, !dbg !6613

sw.bb26:                                          ; preds = %entry
  %28 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !6614
  %begin27 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %28, i32 0, i32 1, !dbg !6615
  store void (i8*)* bitcast (void (%struct.BMIter__loop_of_vert*)* @bmiter__loop_of_vert_begin to void (i8*)*), void (i8*)** %begin27, align 8, !dbg !6616
  %29 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !6617
  %step28 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %29, i32 0, i32 2, !dbg !6618
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__loop_of_vert*)* @bmiter__loop_of_vert_step to i8* (i8*)*), i8* (i8*)** %step28, align 8, !dbg !6619
  %30 = load i8*, i8** %data.addr, align 8, !dbg !6620
  %31 = bitcast i8* %30 to %struct.BMVert*, !dbg !6621
  %32 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !6622
  %data29 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %32, i32 0, i32 0, !dbg !6623
  %loop_of_vert = bitcast %union.anon.0* %data29 to %struct.BMIter__loop_of_vert*, !dbg !6624
  %vdata30 = getelementptr inbounds %struct.BMIter__loop_of_vert, %struct.BMIter__loop_of_vert* %loop_of_vert, i32 0, i32 0, !dbg !6625
  store %struct.BMVert* %31, %struct.BMVert** %vdata30, align 8, !dbg !6626
  br label %sw.epilog, !dbg !6627

sw.bb31:                                          ; preds = %entry
  %33 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !6628
  %begin32 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %33, i32 0, i32 1, !dbg !6629
  store void (i8*)* bitcast (void (%struct.BMIter__vert_of_edge*)* @bmiter__vert_of_edge_begin to void (i8*)*), void (i8*)** %begin32, align 8, !dbg !6630
  %34 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !6631
  %step33 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %34, i32 0, i32 2, !dbg !6632
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__vert_of_edge*)* @bmiter__vert_of_edge_step to i8* (i8*)*), i8* (i8*)** %step33, align 8, !dbg !6633
  %35 = load i8*, i8** %data.addr, align 8, !dbg !6634
  %36 = bitcast i8* %35 to %struct.BMEdge*, !dbg !6635
  %37 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !6636
  %data34 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %37, i32 0, i32 0, !dbg !6637
  %vert_of_edge = bitcast %union.anon.0* %data34 to %struct.BMIter__vert_of_edge*, !dbg !6638
  %edata = getelementptr inbounds %struct.BMIter__vert_of_edge, %struct.BMIter__vert_of_edge* %vert_of_edge, i32 0, i32 0, !dbg !6639
  store %struct.BMEdge* %36, %struct.BMEdge** %edata, align 8, !dbg !6640
  br label %sw.epilog, !dbg !6641

sw.bb35:                                          ; preds = %entry
  %38 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !6642
  %begin36 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %38, i32 0, i32 1, !dbg !6643
  store void (i8*)* bitcast (void (%struct.BMIter__face_of_edge*)* @bmiter__face_of_edge_begin to void (i8*)*), void (i8*)** %begin36, align 8, !dbg !6644
  %39 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !6645
  %step37 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %39, i32 0, i32 2, !dbg !6646
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__face_of_edge*)* @bmiter__face_of_edge_step to i8* (i8*)*), i8* (i8*)** %step37, align 8, !dbg !6647
  %40 = load i8*, i8** %data.addr, align 8, !dbg !6648
  %41 = bitcast i8* %40 to %struct.BMEdge*, !dbg !6649
  %42 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !6650
  %data38 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %42, i32 0, i32 0, !dbg !6651
  %face_of_edge = bitcast %union.anon.0* %data38 to %struct.BMIter__face_of_edge*, !dbg !6652
  %edata39 = getelementptr inbounds %struct.BMIter__face_of_edge, %struct.BMIter__face_of_edge* %face_of_edge, i32 0, i32 0, !dbg !6653
  store %struct.BMEdge* %41, %struct.BMEdge** %edata39, align 8, !dbg !6654
  br label %sw.epilog, !dbg !6655

sw.bb40:                                          ; preds = %entry
  %43 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !6656
  %begin41 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %43, i32 0, i32 1, !dbg !6657
  store void (i8*)* bitcast (void (%struct.BMIter__vert_of_face*)* @bmiter__vert_of_face_begin to void (i8*)*), void (i8*)** %begin41, align 8, !dbg !6658
  %44 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !6659
  %step42 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %44, i32 0, i32 2, !dbg !6660
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__vert_of_face*)* @bmiter__vert_of_face_step to i8* (i8*)*), i8* (i8*)** %step42, align 8, !dbg !6661
  %45 = load i8*, i8** %data.addr, align 8, !dbg !6662
  %46 = bitcast i8* %45 to %struct.BMFace*, !dbg !6663
  %47 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !6664
  %data43 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %47, i32 0, i32 0, !dbg !6665
  %vert_of_face = bitcast %union.anon.0* %data43 to %struct.BMIter__vert_of_face*, !dbg !6666
  %pdata = getelementptr inbounds %struct.BMIter__vert_of_face, %struct.BMIter__vert_of_face* %vert_of_face, i32 0, i32 0, !dbg !6667
  store %struct.BMFace* %46, %struct.BMFace** %pdata, align 8, !dbg !6668
  br label %sw.epilog, !dbg !6669

sw.bb44:                                          ; preds = %entry
  %48 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !6670
  %begin45 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %48, i32 0, i32 1, !dbg !6671
  store void (i8*)* bitcast (void (%struct.BMIter__edge_of_face*)* @bmiter__edge_of_face_begin to void (i8*)*), void (i8*)** %begin45, align 8, !dbg !6672
  %49 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !6673
  %step46 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %49, i32 0, i32 2, !dbg !6674
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__edge_of_face*)* @bmiter__edge_of_face_step to i8* (i8*)*), i8* (i8*)** %step46, align 8, !dbg !6675
  %50 = load i8*, i8** %data.addr, align 8, !dbg !6676
  %51 = bitcast i8* %50 to %struct.BMFace*, !dbg !6677
  %52 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !6678
  %data47 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %52, i32 0, i32 0, !dbg !6679
  %edge_of_face = bitcast %union.anon.0* %data47 to %struct.BMIter__edge_of_face*, !dbg !6680
  %pdata48 = getelementptr inbounds %struct.BMIter__edge_of_face, %struct.BMIter__edge_of_face* %edge_of_face, i32 0, i32 0, !dbg !6681
  store %struct.BMFace* %51, %struct.BMFace** %pdata48, align 8, !dbg !6682
  br label %sw.epilog, !dbg !6683

sw.bb49:                                          ; preds = %entry
  %53 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !6684
  %begin50 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %53, i32 0, i32 1, !dbg !6685
  store void (i8*)* bitcast (void (%struct.BMIter__loop_of_face*)* @bmiter__loop_of_face_begin to void (i8*)*), void (i8*)** %begin50, align 8, !dbg !6686
  %54 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !6687
  %step51 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %54, i32 0, i32 2, !dbg !6688
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__loop_of_face*)* @bmiter__loop_of_face_step to i8* (i8*)*), i8* (i8*)** %step51, align 8, !dbg !6689
  %55 = load i8*, i8** %data.addr, align 8, !dbg !6690
  %56 = bitcast i8* %55 to %struct.BMFace*, !dbg !6691
  %57 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !6692
  %data52 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %57, i32 0, i32 0, !dbg !6693
  %loop_of_face = bitcast %union.anon.0* %data52 to %struct.BMIter__loop_of_face*, !dbg !6694
  %pdata53 = getelementptr inbounds %struct.BMIter__loop_of_face, %struct.BMIter__loop_of_face* %loop_of_face, i32 0, i32 0, !dbg !6695
  store %struct.BMFace* %56, %struct.BMFace** %pdata53, align 8, !dbg !6696
  br label %sw.epilog, !dbg !6697

sw.bb54:                                          ; preds = %entry
  %58 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !6698
  %begin55 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %58, i32 0, i32 1, !dbg !6699
  store void (i8*)* bitcast (void (%struct.BMIter__loop_of_loop*)* @bmiter__loop_of_loop_begin to void (i8*)*), void (i8*)** %begin55, align 8, !dbg !6700
  %59 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !6701
  %step56 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %59, i32 0, i32 2, !dbg !6702
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__loop_of_loop*)* @bmiter__loop_of_loop_step to i8* (i8*)*), i8* (i8*)** %step56, align 8, !dbg !6703
  %60 = load i8*, i8** %data.addr, align 8, !dbg !6704
  %61 = bitcast i8* %60 to %struct.BMLoop*, !dbg !6705
  %62 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !6706
  %data57 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %62, i32 0, i32 0, !dbg !6707
  %loop_of_loop = bitcast %union.anon.0* %data57 to %struct.BMIter__loop_of_loop*, !dbg !6708
  %ldata = getelementptr inbounds %struct.BMIter__loop_of_loop, %struct.BMIter__loop_of_loop* %loop_of_loop, i32 0, i32 0, !dbg !6709
  store %struct.BMLoop* %61, %struct.BMLoop** %ldata, align 8, !dbg !6710
  br label %sw.epilog, !dbg !6711

sw.bb58:                                          ; preds = %entry
  %63 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !6712
  %begin59 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %63, i32 0, i32 1, !dbg !6713
  store void (i8*)* bitcast (void (%struct.BMIter__loop_of_edge*)* @bmiter__loop_of_edge_begin to void (i8*)*), void (i8*)** %begin59, align 8, !dbg !6714
  %64 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !6715
  %step60 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %64, i32 0, i32 2, !dbg !6716
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__loop_of_edge*)* @bmiter__loop_of_edge_step to i8* (i8*)*), i8* (i8*)** %step60, align 8, !dbg !6717
  %65 = load i8*, i8** %data.addr, align 8, !dbg !6718
  %66 = bitcast i8* %65 to %struct.BMEdge*, !dbg !6719
  %67 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !6720
  %data61 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %67, i32 0, i32 0, !dbg !6721
  %loop_of_edge = bitcast %union.anon.0* %data61 to %struct.BMIter__loop_of_edge*, !dbg !6722
  %edata62 = getelementptr inbounds %struct.BMIter__loop_of_edge, %struct.BMIter__loop_of_edge* %loop_of_edge, i32 0, i32 0, !dbg !6723
  store %struct.BMEdge* %66, %struct.BMEdge** %edata62, align 8, !dbg !6724
  br label %sw.epilog, !dbg !6725

sw.default:                                       ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !6726
  br label %return, !dbg !6726

sw.epilog:                                        ; preds = %sw.bb58, %sw.bb54, %sw.bb49, %sw.bb44, %sw.bb40, %sw.bb35, %sw.bb31, %sw.bb26, %sw.bb21, %sw.bb17, %sw.bb10, %sw.bb3, %sw.bb
  %68 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !6727
  %begin63 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %68, i32 0, i32 1, !dbg !6728
  %69 = load void (i8*)*, void (i8*)** %begin63, align 8, !dbg !6728
  %70 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !6729
  %71 = bitcast %struct.BMIter* %70 to i8*, !dbg !6729
  call void %69(i8* %71), !dbg !6727
  store i8 1, i8* %retval, align 1, !dbg !6730
  br label %return, !dbg !6730

return:                                           ; preds = %sw.epilog, %sw.default
  %72 = load i8, i8* %retval, align 1, !dbg !6731
  ret i8 %72, !dbg !6731
}

declare dso_local void @bmiter__elem_of_mesh_begin(%struct.BMIter__elem_of_mesh*) #2

declare dso_local i8* @bmiter__elem_of_mesh_step(%struct.BMIter__elem_of_mesh*) #2

declare dso_local void @bmiter__edge_of_vert_begin(%struct.BMIter__edge_of_vert*) #2

declare dso_local i8* @bmiter__edge_of_vert_step(%struct.BMIter__edge_of_vert*) #2

declare dso_local void @bmiter__face_of_vert_begin(%struct.BMIter__face_of_vert*) #2

declare dso_local i8* @bmiter__face_of_vert_step(%struct.BMIter__face_of_vert*) #2

declare dso_local void @bmiter__loop_of_vert_begin(%struct.BMIter__loop_of_vert*) #2

declare dso_local i8* @bmiter__loop_of_vert_step(%struct.BMIter__loop_of_vert*) #2

declare dso_local void @bmiter__vert_of_edge_begin(%struct.BMIter__vert_of_edge*) #2

declare dso_local i8* @bmiter__vert_of_edge_step(%struct.BMIter__vert_of_edge*) #2

declare dso_local void @bmiter__face_of_edge_begin(%struct.BMIter__face_of_edge*) #2

declare dso_local i8* @bmiter__face_of_edge_step(%struct.BMIter__face_of_edge*) #2

declare dso_local void @bmiter__vert_of_face_begin(%struct.BMIter__vert_of_face*) #2

declare dso_local i8* @bmiter__vert_of_face_step(%struct.BMIter__vert_of_face*) #2

declare dso_local void @bmiter__edge_of_face_begin(%struct.BMIter__edge_of_face*) #2

declare dso_local i8* @bmiter__edge_of_face_step(%struct.BMIter__edge_of_face*) #2

declare dso_local void @bmiter__loop_of_face_begin(%struct.BMIter__loop_of_face*) #2

declare dso_local i8* @bmiter__loop_of_face_step(%struct.BMIter__loop_of_face*) #2

declare dso_local void @bmiter__loop_of_loop_begin(%struct.BMIter__loop_of_loop*) #2

declare dso_local i8* @bmiter__loop_of_loop_step(%struct.BMIter__loop_of_loop*) #2

declare dso_local void @bmiter__loop_of_edge_begin(%struct.BMIter__loop_of_edge*) #2

declare dso_local i8* @bmiter__loop_of_edge_step(%struct.BMIter__loop_of_edge*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @sub_v2_v2v2(float* %r, float* %a, float* %b) #0 !dbg !6732 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !6735, metadata !DIExpression()), !dbg !6736
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !6737, metadata !DIExpression()), !dbg !6738
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !6739, metadata !DIExpression()), !dbg !6740
  %0 = load float*, float** %a.addr, align 8, !dbg !6741
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !6741
  %1 = load float, float* %arrayidx, align 4, !dbg !6741
  %2 = load float*, float** %b.addr, align 8, !dbg !6742
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !6742
  %3 = load float, float* %arrayidx1, align 4, !dbg !6742
  %sub = fsub float %1, %3, !dbg !6743
  %4 = load float*, float** %r.addr, align 8, !dbg !6744
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 0, !dbg !6744
  store float %sub, float* %arrayidx2, align 4, !dbg !6745
  %5 = load float*, float** %a.addr, align 8, !dbg !6746
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !6746
  %6 = load float, float* %arrayidx3, align 4, !dbg !6746
  %7 = load float*, float** %b.addr, align 8, !dbg !6747
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 1, !dbg !6747
  %8 = load float, float* %arrayidx4, align 4, !dbg !6747
  %sub5 = fsub float %6, %8, !dbg !6748
  %9 = load float*, float** %r.addr, align 8, !dbg !6749
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 1, !dbg !6749
  store float %sub5, float* %arrayidx6, align 4, !dbg !6750
  ret void, !dbg !6751
}

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.fabs.f32(float) #1

; Function Attrs: noinline nounwind uwtable
define internal float @line_point_side_v2(float* %l1, float* %l2, float* %pt) #0 !dbg !6752 {
entry:
  %l1.addr = alloca float*, align 8
  %l2.addr = alloca float*, align 8
  %pt.addr = alloca float*, align 8
  store float* %l1, float** %l1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %l1.addr, metadata !6755, metadata !DIExpression()), !dbg !6756
  store float* %l2, float** %l2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %l2.addr, metadata !6757, metadata !DIExpression()), !dbg !6758
  store float* %pt, float** %pt.addr, align 8
  call void @llvm.dbg.declare(metadata float** %pt.addr, metadata !6759, metadata !DIExpression()), !dbg !6760
  %0 = load float*, float** %l1.addr, align 8, !dbg !6761
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !6761
  %1 = load float, float* %arrayidx, align 4, !dbg !6761
  %2 = load float*, float** %pt.addr, align 8, !dbg !6762
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !6762
  %3 = load float, float* %arrayidx1, align 4, !dbg !6762
  %sub = fsub float %1, %3, !dbg !6763
  %4 = load float*, float** %l2.addr, align 8, !dbg !6764
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !6764
  %5 = load float, float* %arrayidx2, align 4, !dbg !6764
  %6 = load float*, float** %pt.addr, align 8, !dbg !6765
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !6765
  %7 = load float, float* %arrayidx3, align 4, !dbg !6765
  %sub4 = fsub float %5, %7, !dbg !6766
  %mul = fmul float %sub, %sub4, !dbg !6767
  %8 = load float*, float** %l2.addr, align 8, !dbg !6768
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 0, !dbg !6768
  %9 = load float, float* %arrayidx5, align 4, !dbg !6768
  %10 = load float*, float** %pt.addr, align 8, !dbg !6769
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 0, !dbg !6769
  %11 = load float, float* %arrayidx6, align 4, !dbg !6769
  %sub7 = fsub float %9, %11, !dbg !6770
  %12 = load float*, float** %l1.addr, align 8, !dbg !6771
  %arrayidx8 = getelementptr inbounds float, float* %12, i64 1, !dbg !6771
  %13 = load float, float* %arrayidx8, align 4, !dbg !6771
  %14 = load float*, float** %pt.addr, align 8, !dbg !6772
  %arrayidx9 = getelementptr inbounds float, float* %14, i64 1, !dbg !6772
  %15 = load float, float* %arrayidx9, align 4, !dbg !6772
  %sub10 = fsub float %13, %15, !dbg !6773
  %mul11 = fmul float %sub7, %sub10, !dbg !6774
  %sub12 = fsub float %mul, %mul11, !dbg !6775
  ret float %sub12, !dbg !6776
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @uv_select_all_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !6777 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %scene = alloca %struct.Scene*, align 8
  %obedit = alloca %struct.Object*, align 8
  %ima = alloca %struct.Image*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  %action = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !6785, metadata !DIExpression()), !dbg !6786
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !6787, metadata !DIExpression()), !dbg !6788
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene, metadata !6789, metadata !DIExpression()), !dbg !6790
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6791
  %call = call %struct.Scene* @CTX_data_scene(%struct.bContext* %0), !dbg !6792
  store %struct.Scene* %call, %struct.Scene** %scene, align 8, !dbg !6790
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !6793, metadata !DIExpression()), !dbg !6794
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6795
  %call1 = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %1), !dbg !6796
  store %struct.Object* %call1, %struct.Object** %obedit, align 8, !dbg !6794
  call void @llvm.dbg.declare(metadata %struct.Image** %ima, metadata !6797, metadata !DIExpression()), !dbg !6798
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6799
  %call2 = call %struct.Image* @CTX_data_edit_image(%struct.bContext* %2), !dbg !6800
  store %struct.Image* %call2, %struct.Image** %ima, align 8, !dbg !6798
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !6801, metadata !DIExpression()), !dbg !6802
  %3 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !6803
  %call3 = call %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object* %3), !dbg !6804
  store %struct.BMEditMesh* %call3, %struct.BMEditMesh** %em, align 8, !dbg !6802
  call void @llvm.dbg.declare(metadata i32* %action, metadata !6805, metadata !DIExpression()), !dbg !6806
  %4 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6807
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %4, i32 0, i32 7, !dbg !6808
  %5 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !6808
  %call4 = call i32 @RNA_enum_get(%struct.PointerRNA* %5, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.19, i64 0, i64 0)), !dbg !6809
  store i32 %call4, i32* %action, align 4, !dbg !6806
  %6 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !6810
  %7 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !6811
  %8 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !6812
  %9 = load i32, i32* %action, align 4, !dbg !6813
  call void @uv_select_all_perform(%struct.Scene* %6, %struct.Image* %7, %struct.BMEditMesh* %8, i32 %9), !dbg !6814
  %10 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6815
  %11 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !6816
  %data = getelementptr inbounds %struct.Object, %struct.Object* %11, i32 0, i32 19, !dbg !6817
  %12 = load i8*, i8** %data, align 8, !dbg !6817
  call void @WM_event_add_notifier(%struct.bContext* %10, i32 274333696, i8* %12), !dbg !6818
  ret i32 4, !dbg !6819
}

declare dso_local i32 @ED_operator_uvedit(%struct.bContext*) #2

declare dso_local void @WM_operator_properties_select_all(%struct.wmOperatorType*) #2

declare dso_local %struct.Scene* @CTX_data_scene(%struct.bContext*) #2

declare dso_local %struct.Object* @CTX_data_edit_object(%struct.bContext*) #2

declare dso_local %struct.Image* @CTX_data_edit_image(%struct.bContext*) #2

declare dso_local i32 @RNA_enum_get(%struct.PointerRNA*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @uv_select_all_perform(%struct.Scene* %scene, %struct.Image* %ima, %struct.BMEditMesh* %em, i32 %action) #0 !dbg !6820 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %ima.addr = alloca %struct.Image*, align 8
  %em.addr = alloca %struct.BMEditMesh*, align 8
  %action.addr = alloca i32, align 4
  %ts = alloca %struct.ToolSettings*, align 8
  %efa = alloca %struct.BMFace*, align 8
  %l = alloca %struct.BMLoop*, align 8
  %iter = alloca %struct.BMIter, align 8
  %liter = alloca %struct.BMIter, align 8
  %tf = alloca %struct.MTexPoly*, align 8
  %luv = alloca %struct.MLoopUV*, align 8
  %cd_loop_uv_offset = alloca i32, align 4
  %cd_poly_tex_offset = alloca i32, align 4
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !6823, metadata !DIExpression()), !dbg !6824
  store %struct.Image* %ima, %struct.Image** %ima.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Image** %ima.addr, metadata !6825, metadata !DIExpression()), !dbg !6826
  store %struct.BMEditMesh* %em, %struct.BMEditMesh** %em.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em.addr, metadata !6827, metadata !DIExpression()), !dbg !6828
  store i32 %action, i32* %action.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %action.addr, metadata !6829, metadata !DIExpression()), !dbg !6830
  call void @llvm.dbg.declare(metadata %struct.ToolSettings** %ts, metadata !6831, metadata !DIExpression()), !dbg !6832
  %0 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6833
  %toolsettings = getelementptr inbounds %struct.Scene, %struct.Scene* %0, i32 0, i32 20, !dbg !6834
  %1 = load %struct.ToolSettings*, %struct.ToolSettings** %toolsettings, align 8, !dbg !6834
  store %struct.ToolSettings* %1, %struct.ToolSettings** %ts, align 8, !dbg !6832
  call void @llvm.dbg.declare(metadata %struct.BMFace** %efa, metadata !6835, metadata !DIExpression()), !dbg !6836
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l, metadata !6837, metadata !DIExpression()), !dbg !6838
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iter, metadata !6839, metadata !DIExpression()), !dbg !6840
  call void @llvm.dbg.declare(metadata %struct.BMIter* %liter, metadata !6841, metadata !DIExpression()), !dbg !6842
  call void @llvm.dbg.declare(metadata %struct.MTexPoly** %tf, metadata !6843, metadata !DIExpression()), !dbg !6844
  call void @llvm.dbg.declare(metadata %struct.MLoopUV** %luv, metadata !6845, metadata !DIExpression()), !dbg !6846
  call void @llvm.dbg.declare(metadata i32* %cd_loop_uv_offset, metadata !6847, metadata !DIExpression()), !dbg !6848
  %2 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !6849
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %2, i32 0, i32 0, !dbg !6850
  %3 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !6850
  %ldata = getelementptr inbounds %struct.BMesh, %struct.BMesh* %3, i32 0, i32 26, !dbg !6851
  %call = call i32 @CustomData_get_offset(%struct.CustomData* %ldata, i32 16), !dbg !6852
  store i32 %call, i32* %cd_loop_uv_offset, align 4, !dbg !6848
  call void @llvm.dbg.declare(metadata i32* %cd_poly_tex_offset, metadata !6853, metadata !DIExpression()), !dbg !6854
  %4 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !6855
  %bm1 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %4, i32 0, i32 0, !dbg !6856
  %5 = load %struct.BMesh*, %struct.BMesh** %bm1, align 8, !dbg !6856
  %pdata = getelementptr inbounds %struct.BMesh, %struct.BMesh* %5, i32 0, i32 27, !dbg !6857
  %call2 = call i32 @CustomData_get_offset(%struct.CustomData* %pdata, i32 15), !dbg !6858
  store i32 %call2, i32* %cd_poly_tex_offset, align 4, !dbg !6854
  %6 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !6859
  %uv_flag = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %6, i32 0, i32 11, !dbg !6861
  %7 = load i8, i8* %uv_flag, align 2, !dbg !6861
  %conv = zext i8 %7 to i32, !dbg !6859
  %and = and i32 %conv, 1, !dbg !6862
  %tobool = icmp ne i32 %and, 0, !dbg !6862
  br i1 %tobool, label %if.then, label %if.else, !dbg !6863

if.then:                                          ; preds = %entry
  %8 = load i32, i32* %action.addr, align 4, !dbg !6864
  switch i32 %8, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb3
    i32 2, label %sw.bb4
    i32 3, label %sw.bb5
  ], !dbg !6866

sw.bb:                                            ; preds = %if.then
  %9 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !6867
  call void @EDBM_select_toggle_all(%struct.BMEditMesh* %9), !dbg !6869
  br label %sw.epilog, !dbg !6870

sw.bb3:                                           ; preds = %if.then
  %10 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !6871
  call void @EDBM_flag_enable_all(%struct.BMEditMesh* %10, i8 zeroext 1), !dbg !6872
  br label %sw.epilog, !dbg !6873

sw.bb4:                                           ; preds = %if.then
  %11 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !6874
  call void @EDBM_flag_disable_all(%struct.BMEditMesh* %11, i8 zeroext 1), !dbg !6875
  br label %sw.epilog, !dbg !6876

sw.bb5:                                           ; preds = %if.then
  %12 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !6877
  call void @EDBM_select_swap(%struct.BMEditMesh* %12), !dbg !6878
  %13 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !6879
  call void @EDBM_selectmode_flush(%struct.BMEditMesh* %13), !dbg !6880
  br label %sw.epilog, !dbg !6881

sw.epilog:                                        ; preds = %if.then, %sw.bb5, %sw.bb4, %sw.bb3, %sw.bb
  br label %if.end66, !dbg !6882

if.else:                                          ; preds = %entry
  %14 = load i32, i32* %action.addr, align 4, !dbg !6883
  %cmp = icmp eq i32 %14, 0, !dbg !6886
  br i1 %cmp, label %if.then7, label %if.end30, !dbg !6887

if.then7:                                         ; preds = %if.else
  store i32 1, i32* %action.addr, align 4, !dbg !6888
  %15 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !6890
  %bm8 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %15, i32 0, i32 0, !dbg !6890
  %16 = load %struct.BMesh*, %struct.BMesh** %bm8, align 8, !dbg !6890
  %call9 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %16, i8 zeroext 3, i8* null), !dbg !6890
  %17 = bitcast i8* %call9 to %struct.BMFace*, !dbg !6890
  store %struct.BMFace* %17, %struct.BMFace** %efa, align 8, !dbg !6890
  br label %for.cond, !dbg !6890

for.cond:                                         ; preds = %for.inc27, %if.then7
  %18 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !6892
  %tobool10 = icmp ne %struct.BMFace* %18, null, !dbg !6890
  br i1 %tobool10, label %for.body, label %for.end29, !dbg !6890

for.body:                                         ; preds = %for.cond
  %19 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !6894
  %head = getelementptr inbounds %struct.BMFace, %struct.BMFace* %19, i32 0, i32 0, !dbg !6894
  %data = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head, i32 0, i32 0, !dbg !6894
  %20 = load i8*, i8** %data, align 8, !dbg !6894
  %21 = load i32, i32* %cd_poly_tex_offset, align 4, !dbg !6894
  %idx.ext = sext i32 %21 to i64, !dbg !6894
  %add.ptr = getelementptr inbounds i8, i8* %20, i64 %idx.ext, !dbg !6894
  %22 = bitcast i8* %add.ptr to %struct.MTexPoly*, !dbg !6894
  store %struct.MTexPoly* %22, %struct.MTexPoly** %tf, align 8, !dbg !6896
  %23 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6897
  %24 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !6899
  %25 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !6900
  %26 = load %struct.MTexPoly*, %struct.MTexPoly** %tf, align 8, !dbg !6901
  %call11 = call zeroext i8 @uvedit_face_visible_test(%struct.Scene* %23, %struct.Image* %24, %struct.BMFace* %25, %struct.MTexPoly* %26), !dbg !6902
  %tobool12 = icmp ne i8 %call11, 0, !dbg !6902
  br i1 %tobool12, label %if.end, label %if.then13, !dbg !6903

if.then13:                                        ; preds = %for.body
  br label %for.inc27, !dbg !6904

if.end:                                           ; preds = %for.body
  %27 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !6905
  %28 = bitcast %struct.BMFace* %27 to i8*, !dbg !6905
  %call14 = call i8* @BM_iter_new(%struct.BMIter* %liter, %struct.BMesh* null, i8 zeroext 11, i8* %28), !dbg !6905
  %29 = bitcast i8* %call14 to %struct.BMLoop*, !dbg !6905
  store %struct.BMLoop* %29, %struct.BMLoop** %l, align 8, !dbg !6905
  br label %for.cond15, !dbg !6905

for.cond15:                                       ; preds = %for.inc, %if.end
  %30 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !6907
  %tobool16 = icmp ne %struct.BMLoop* %30, null, !dbg !6905
  br i1 %tobool16, label %for.body17, label %for.end, !dbg !6905

for.body17:                                       ; preds = %for.cond15
  %31 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !6909
  %head18 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %31, i32 0, i32 0, !dbg !6909
  %data19 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head18, i32 0, i32 0, !dbg !6909
  %32 = load i8*, i8** %data19, align 8, !dbg !6909
  %33 = load i32, i32* %cd_loop_uv_offset, align 4, !dbg !6909
  %idx.ext20 = sext i32 %33 to i64, !dbg !6909
  %add.ptr21 = getelementptr inbounds i8, i8* %32, i64 %idx.ext20, !dbg !6909
  %34 = bitcast i8* %add.ptr21 to %struct.MLoopUV*, !dbg !6909
  store %struct.MLoopUV* %34, %struct.MLoopUV** %luv, align 8, !dbg !6911
  %35 = load %struct.MLoopUV*, %struct.MLoopUV** %luv, align 8, !dbg !6912
  %flag = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %35, i32 0, i32 1, !dbg !6914
  %36 = load i32, i32* %flag, align 4, !dbg !6914
  %and22 = and i32 %36, 2, !dbg !6915
  %tobool23 = icmp ne i32 %and22, 0, !dbg !6915
  br i1 %tobool23, label %if.then24, label %if.end25, !dbg !6916

if.then24:                                        ; preds = %for.body17
  store i32 2, i32* %action.addr, align 4, !dbg !6917
  br label %for.end, !dbg !6919

if.end25:                                         ; preds = %for.body17
  br label %for.inc, !dbg !6920

for.inc:                                          ; preds = %if.end25
  %call26 = call i8* @BM_iter_step(%struct.BMIter* %liter), !dbg !6907
  %37 = bitcast i8* %call26 to %struct.BMLoop*, !dbg !6907
  store %struct.BMLoop* %37, %struct.BMLoop** %l, align 8, !dbg !6907
  br label %for.cond15, !dbg !6907, !llvm.loop !6921

for.end:                                          ; preds = %if.then24, %for.cond15
  br label %for.inc27, !dbg !6923

for.inc27:                                        ; preds = %for.end, %if.then13
  %call28 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !6892
  %38 = bitcast i8* %call28 to %struct.BMFace*, !dbg !6892
  store %struct.BMFace* %38, %struct.BMFace** %efa, align 8, !dbg !6892
  br label %for.cond, !dbg !6892, !llvm.loop !6924

for.end29:                                        ; preds = %for.cond
  br label %if.end30, !dbg !6926

if.end30:                                         ; preds = %for.end29, %if.else
  %39 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !6927
  %bm31 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %39, i32 0, i32 0, !dbg !6927
  %40 = load %struct.BMesh*, %struct.BMesh** %bm31, align 8, !dbg !6927
  %call32 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %40, i8 zeroext 3, i8* null), !dbg !6927
  %41 = bitcast i8* %call32 to %struct.BMFace*, !dbg !6927
  store %struct.BMFace* %41, %struct.BMFace** %efa, align 8, !dbg !6927
  br label %for.cond33, !dbg !6927

for.cond33:                                       ; preds = %for.inc63, %if.end30
  %42 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !6929
  %tobool34 = icmp ne %struct.BMFace* %42, null, !dbg !6927
  br i1 %tobool34, label %for.body35, label %for.end65, !dbg !6927

for.body35:                                       ; preds = %for.cond33
  %43 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !6931
  %head36 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %43, i32 0, i32 0, !dbg !6931
  %data37 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head36, i32 0, i32 0, !dbg !6931
  %44 = load i8*, i8** %data37, align 8, !dbg !6931
  %45 = load i32, i32* %cd_poly_tex_offset, align 4, !dbg !6931
  %idx.ext38 = sext i32 %45 to i64, !dbg !6931
  %add.ptr39 = getelementptr inbounds i8, i8* %44, i64 %idx.ext38, !dbg !6931
  %46 = bitcast i8* %add.ptr39 to %struct.MTexPoly*, !dbg !6931
  store %struct.MTexPoly* %46, %struct.MTexPoly** %tf, align 8, !dbg !6933
  %47 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6934
  %48 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !6936
  %49 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !6937
  %50 = load %struct.MTexPoly*, %struct.MTexPoly** %tf, align 8, !dbg !6938
  %call40 = call zeroext i8 @uvedit_face_visible_test(%struct.Scene* %47, %struct.Image* %48, %struct.BMFace* %49, %struct.MTexPoly* %50), !dbg !6939
  %tobool41 = icmp ne i8 %call40, 0, !dbg !6939
  br i1 %tobool41, label %if.end43, label %if.then42, !dbg !6940

if.then42:                                        ; preds = %for.body35
  br label %for.inc63, !dbg !6941

if.end43:                                         ; preds = %for.body35
  %51 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !6942
  %52 = bitcast %struct.BMFace* %51 to i8*, !dbg !6942
  %call44 = call i8* @BM_iter_new(%struct.BMIter* %liter, %struct.BMesh* null, i8 zeroext 11, i8* %52), !dbg !6942
  %53 = bitcast i8* %call44 to %struct.BMLoop*, !dbg !6942
  store %struct.BMLoop* %53, %struct.BMLoop** %l, align 8, !dbg !6942
  br label %for.cond45, !dbg !6942

for.cond45:                                       ; preds = %for.inc60, %if.end43
  %54 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !6944
  %tobool46 = icmp ne %struct.BMLoop* %54, null, !dbg !6942
  br i1 %tobool46, label %for.body47, label %for.end62, !dbg !6942

for.body47:                                       ; preds = %for.cond45
  %55 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !6946
  %head48 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %55, i32 0, i32 0, !dbg !6946
  %data49 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head48, i32 0, i32 0, !dbg !6946
  %56 = load i8*, i8** %data49, align 8, !dbg !6946
  %57 = load i32, i32* %cd_loop_uv_offset, align 4, !dbg !6946
  %idx.ext50 = sext i32 %57 to i64, !dbg !6946
  %add.ptr51 = getelementptr inbounds i8, i8* %56, i64 %idx.ext50, !dbg !6946
  %58 = bitcast i8* %add.ptr51 to %struct.MLoopUV*, !dbg !6946
  store %struct.MLoopUV* %58, %struct.MLoopUV** %luv, align 8, !dbg !6948
  %59 = load i32, i32* %action.addr, align 4, !dbg !6949
  switch i32 %59, label %sw.epilog59 [
    i32 1, label %sw.bb52
    i32 2, label %sw.bb54
    i32 3, label %sw.bb57
  ], !dbg !6950

sw.bb52:                                          ; preds = %for.body47
  %60 = load %struct.MLoopUV*, %struct.MLoopUV** %luv, align 8, !dbg !6951
  %flag53 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %60, i32 0, i32 1, !dbg !6953
  %61 = load i32, i32* %flag53, align 4, !dbg !6954
  %or = or i32 %61, 2, !dbg !6954
  store i32 %or, i32* %flag53, align 4, !dbg !6954
  br label %sw.epilog59, !dbg !6955

sw.bb54:                                          ; preds = %for.body47
  %62 = load %struct.MLoopUV*, %struct.MLoopUV** %luv, align 8, !dbg !6956
  %flag55 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %62, i32 0, i32 1, !dbg !6957
  %63 = load i32, i32* %flag55, align 4, !dbg !6958
  %and56 = and i32 %63, -3, !dbg !6958
  store i32 %and56, i32* %flag55, align 4, !dbg !6958
  br label %sw.epilog59, !dbg !6959

sw.bb57:                                          ; preds = %for.body47
  %64 = load %struct.MLoopUV*, %struct.MLoopUV** %luv, align 8, !dbg !6960
  %flag58 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %64, i32 0, i32 1, !dbg !6961
  %65 = load i32, i32* %flag58, align 4, !dbg !6962
  %xor = xor i32 %65, 2, !dbg !6962
  store i32 %xor, i32* %flag58, align 4, !dbg !6962
  br label %sw.epilog59, !dbg !6963

sw.epilog59:                                      ; preds = %for.body47, %sw.bb57, %sw.bb54, %sw.bb52
  br label %for.inc60, !dbg !6964

for.inc60:                                        ; preds = %sw.epilog59
  %call61 = call i8* @BM_iter_step(%struct.BMIter* %liter), !dbg !6944
  %66 = bitcast i8* %call61 to %struct.BMLoop*, !dbg !6944
  store %struct.BMLoop* %66, %struct.BMLoop** %l, align 8, !dbg !6944
  br label %for.cond45, !dbg !6944, !llvm.loop !6965

for.end62:                                        ; preds = %for.cond45
  br label %for.inc63, !dbg !6967

for.inc63:                                        ; preds = %for.end62, %if.then42
  %call64 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !6929
  %67 = bitcast i8* %call64 to %struct.BMFace*, !dbg !6929
  store %struct.BMFace* %67, %struct.BMFace** %efa, align 8, !dbg !6929
  br label %for.cond33, !dbg !6929, !llvm.loop !6968

for.end65:                                        ; preds = %for.cond33
  br label %if.end66

if.end66:                                         ; preds = %for.end65, %sw.epilog
  ret void, !dbg !6970
}

declare dso_local void @WM_event_add_notifier(%struct.bContext*, i32, i8*) #2

declare dso_local void @EDBM_select_toggle_all(%struct.BMEditMesh*) #2

declare dso_local void @EDBM_flag_enable_all(%struct.BMEditMesh*, i8 zeroext) #2

declare dso_local void @EDBM_flag_disable_all(%struct.BMEditMesh*, i8 zeroext) #2

declare dso_local void @EDBM_select_swap(%struct.BMEditMesh*) #2

declare dso_local void @EDBM_selectmode_flush(%struct.BMEditMesh*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @uv_select_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !6971 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %co = alloca [2 x float], align 4
  %extend = alloca i8, align 1
  %loop = alloca i8, align 1
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !6972, metadata !DIExpression()), !dbg !6973
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !6974, metadata !DIExpression()), !dbg !6975
  call void @llvm.dbg.declare(metadata [2 x float]* %co, metadata !6976, metadata !DIExpression()), !dbg !6977
  call void @llvm.dbg.declare(metadata i8* %extend, metadata !6978, metadata !DIExpression()), !dbg !6979
  call void @llvm.dbg.declare(metadata i8* %loop, metadata !6980, metadata !DIExpression()), !dbg !6981
  %0 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6982
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %0, i32 0, i32 7, !dbg !6983
  %1 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !6983
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %co, i64 0, i64 0, !dbg !6984
  call void @RNA_float_get_array(%struct.PointerRNA* %1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.42, i64 0, i64 0), float* %arraydecay), !dbg !6985
  %2 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6986
  %ptr1 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %2, i32 0, i32 7, !dbg !6987
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr1, align 8, !dbg !6987
  %call = call i32 @RNA_boolean_get(%struct.PointerRNA* %3, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6, i64 0, i64 0)), !dbg !6988
  %conv = trunc i32 %call to i8, !dbg !6988
  store i8 %conv, i8* %extend, align 1, !dbg !6989
  store i8 0, i8* %loop, align 1, !dbg !6990
  %4 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6991
  %arraydecay2 = getelementptr inbounds [2 x float], [2 x float]* %co, i64 0, i64 0, !dbg !6992
  %5 = load i8, i8* %extend, align 1, !dbg !6993
  %6 = load i8, i8* %loop, align 1, !dbg !6994
  %call3 = call i32 @uv_mouse_select(%struct.bContext* %4, float* %arraydecay2, i8 zeroext %5, i8 zeroext %6), !dbg !6995
  ret i32 %call3, !dbg !6996
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @uv_select_invoke(%struct.bContext* %C, %struct.wmOperator* %op, %struct.wmEvent* %event) #0 !dbg !6997 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %event.addr = alloca %struct.wmEvent*, align 8
  %ar = alloca %struct.ARegion*, align 8
  %co = alloca [2 x float], align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !7003, metadata !DIExpression()), !dbg !7004
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !7005, metadata !DIExpression()), !dbg !7006
  store %struct.wmEvent* %event, %struct.wmEvent** %event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event.addr, metadata !7007, metadata !DIExpression()), !dbg !7008
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar, metadata !7009, metadata !DIExpression()), !dbg !7012
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7013
  %call = call %struct.ARegion* @CTX_wm_region(%struct.bContext* %0), !dbg !7014
  store %struct.ARegion* %call, %struct.ARegion** %ar, align 8, !dbg !7012
  call void @llvm.dbg.declare(metadata [2 x float]* %co, metadata !7015, metadata !DIExpression()), !dbg !7016
  %1 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !7017
  %v2d = getelementptr inbounds %struct.ARegion, %struct.ARegion* %1, i32 0, i32 2, !dbg !7018
  %2 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7019
  %mval = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %2, i32 0, i32 6, !dbg !7020
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %mval, i64 0, i64 0, !dbg !7019
  %3 = load i32, i32* %arrayidx, align 4, !dbg !7019
  %conv = sitofp i32 %3 to float, !dbg !7019
  %4 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7021
  %mval1 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %4, i32 0, i32 6, !dbg !7022
  %arrayidx2 = getelementptr inbounds [2 x i32], [2 x i32]* %mval1, i64 0, i64 1, !dbg !7021
  %5 = load i32, i32* %arrayidx2, align 4, !dbg !7021
  %conv3 = sitofp i32 %5 to float, !dbg !7021
  %arrayidx4 = getelementptr inbounds [2 x float], [2 x float]* %co, i64 0, i64 0, !dbg !7023
  %arrayidx5 = getelementptr inbounds [2 x float], [2 x float]* %co, i64 0, i64 1, !dbg !7024
  call void @UI_view2d_region_to_view(%struct.View2D* %v2d, float %conv, float %conv3, float* %arrayidx4, float* %arrayidx5), !dbg !7025
  %6 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7026
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %6, i32 0, i32 7, !dbg !7027
  %7 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !7027
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %co, i64 0, i64 0, !dbg !7028
  call void @RNA_float_set_array(%struct.PointerRNA* %7, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.42, i64 0, i64 0), float* %arraydecay), !dbg !7029
  %8 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7030
  %9 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7031
  %call6 = call i32 @uv_select_exec(%struct.bContext* %8, %struct.wmOperator* %9), !dbg !7032
  ret i32 %call6, !dbg !7033
}

declare dso_local %struct.PropertyRNA* @RNA_def_boolean(i8*, i8*, i32, i8*, i8*) #2

declare dso_local %struct.PropertyRNA* @RNA_def_float_vector(i8*, i8*, i32, float*, float, float, i8*, i8*, float, float) #2

declare dso_local void @RNA_float_get_array(%struct.PointerRNA*, i8*, float*) #2

declare dso_local i32 @RNA_boolean_get(%struct.PointerRNA*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @uv_mouse_select(%struct.bContext* %C, float* %co, i8 zeroext %extend, i8 zeroext %loop) #0 !dbg !7034 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %co.addr = alloca float*, align 8
  %extend.addr = alloca i8, align 1
  %loop.addr = alloca i8, align 1
  %sima = alloca %struct.SpaceImage*, align 8
  %scene = alloca %struct.Scene*, align 8
  %ts = alloca %struct.ToolSettings*, align 8
  %obedit = alloca %struct.Object*, align 8
  %ima = alloca %struct.Image*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  %efa = alloca %struct.BMFace*, align 8
  %l = alloca %struct.BMLoop*, align 8
  %iter = alloca %struct.BMIter, align 8
  %liter = alloca %struct.BMIter, align 8
  %tf = alloca %struct.MTexPoly*, align 8
  %luv = alloca %struct.MLoopUV*, align 8
  %hit = alloca %struct.NearestHit, align 8
  %i = alloca i32, align 4
  %selectmode = alloca i32, align 4
  %sticky = alloca i32, align 4
  %sync = alloca i32, align 4
  %hitv = alloca i32*, align 8
  %select = alloca i8, align 1
  %flush = alloca i32, align 4
  %hitlen = alloca i32, align 4
  %limit = alloca [2 x float], align 4
  %hituv = alloca float**, align 8
  %penalty = alloca [2 x float], align 4
  %cd_loop_uv_offset = alloca i32, align 4
  %cd_poly_tex_offset = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !7037, metadata !DIExpression()), !dbg !7038
  store float* %co, float** %co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %co.addr, metadata !7039, metadata !DIExpression()), !dbg !7040
  store i8 %extend, i8* %extend.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %extend.addr, metadata !7041, metadata !DIExpression()), !dbg !7042
  store i8 %loop, i8* %loop.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %loop.addr, metadata !7043, metadata !DIExpression()), !dbg !7044
  call void @llvm.dbg.declare(metadata %struct.SpaceImage** %sima, metadata !7045, metadata !DIExpression()), !dbg !7046
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7047
  %call = call %struct.SpaceImage* @CTX_wm_space_image(%struct.bContext* %0), !dbg !7048
  store %struct.SpaceImage* %call, %struct.SpaceImage** %sima, align 8, !dbg !7046
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene, metadata !7049, metadata !DIExpression()), !dbg !7050
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7051
  %call1 = call %struct.Scene* @CTX_data_scene(%struct.bContext* %1), !dbg !7052
  store %struct.Scene* %call1, %struct.Scene** %scene, align 8, !dbg !7050
  call void @llvm.dbg.declare(metadata %struct.ToolSettings** %ts, metadata !7053, metadata !DIExpression()), !dbg !7054
  %2 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !7055
  %toolsettings = getelementptr inbounds %struct.Scene, %struct.Scene* %2, i32 0, i32 20, !dbg !7056
  %3 = load %struct.ToolSettings*, %struct.ToolSettings** %toolsettings, align 8, !dbg !7056
  store %struct.ToolSettings* %3, %struct.ToolSettings** %ts, align 8, !dbg !7054
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !7057, metadata !DIExpression()), !dbg !7058
  %4 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7059
  %call2 = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %4), !dbg !7060
  store %struct.Object* %call2, %struct.Object** %obedit, align 8, !dbg !7058
  call void @llvm.dbg.declare(metadata %struct.Image** %ima, metadata !7061, metadata !DIExpression()), !dbg !7062
  %5 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7063
  %call3 = call %struct.Image* @CTX_data_edit_image(%struct.bContext* %5), !dbg !7064
  store %struct.Image* %call3, %struct.Image** %ima, align 8, !dbg !7062
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !7065, metadata !DIExpression()), !dbg !7066
  %6 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !7067
  %call4 = call %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object* %6), !dbg !7068
  store %struct.BMEditMesh* %call4, %struct.BMEditMesh** %em, align 8, !dbg !7066
  call void @llvm.dbg.declare(metadata %struct.BMFace** %efa, metadata !7069, metadata !DIExpression()), !dbg !7070
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l, metadata !7071, metadata !DIExpression()), !dbg !7072
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iter, metadata !7073, metadata !DIExpression()), !dbg !7074
  call void @llvm.dbg.declare(metadata %struct.BMIter* %liter, metadata !7075, metadata !DIExpression()), !dbg !7076
  call void @llvm.dbg.declare(metadata %struct.MTexPoly** %tf, metadata !7077, metadata !DIExpression()), !dbg !7078
  call void @llvm.dbg.declare(metadata %struct.MLoopUV** %luv, metadata !7079, metadata !DIExpression()), !dbg !7080
  call void @llvm.dbg.declare(metadata %struct.NearestHit* %hit, metadata !7081, metadata !DIExpression()), !dbg !7082
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7083, metadata !DIExpression()), !dbg !7084
  call void @llvm.dbg.declare(metadata i32* %selectmode, metadata !7085, metadata !DIExpression()), !dbg !7086
  call void @llvm.dbg.declare(metadata i32* %sticky, metadata !7087, metadata !DIExpression()), !dbg !7088
  call void @llvm.dbg.declare(metadata i32* %sync, metadata !7089, metadata !DIExpression()), !dbg !7090
  call void @llvm.dbg.declare(metadata i32** %hitv, metadata !7091, metadata !DIExpression()), !dbg !7093
  store i32* null, i32** %hitv, align 8, !dbg !7093
  call void @llvm.dbg.declare(metadata i8* %select, metadata !7094, metadata !DIExpression()), !dbg !7095
  store i8 1, i8* %select, align 1, !dbg !7095
  call void @llvm.dbg.declare(metadata i32* %flush, metadata !7096, metadata !DIExpression()), !dbg !7097
  store i32 0, i32* %flush, align 4, !dbg !7097
  call void @llvm.dbg.declare(metadata i32* %hitlen, metadata !7098, metadata !DIExpression()), !dbg !7099
  store i32 0, i32* %hitlen, align 4, !dbg !7099
  call void @llvm.dbg.declare(metadata [2 x float]* %limit, metadata !7100, metadata !DIExpression()), !dbg !7101
  call void @llvm.dbg.declare(metadata float*** %hituv, metadata !7102, metadata !DIExpression()), !dbg !7104
  store float** null, float*** %hituv, align 8, !dbg !7104
  call void @llvm.dbg.declare(metadata [2 x float]* %penalty, metadata !7105, metadata !DIExpression()), !dbg !7106
  call void @llvm.dbg.declare(metadata i32* %cd_loop_uv_offset, metadata !7107, metadata !DIExpression()), !dbg !7108
  %7 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !7109
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %7, i32 0, i32 0, !dbg !7110
  %8 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !7110
  %ldata = getelementptr inbounds %struct.BMesh, %struct.BMesh* %8, i32 0, i32 26, !dbg !7111
  %call5 = call i32 @CustomData_get_offset(%struct.CustomData* %ldata, i32 16), !dbg !7112
  store i32 %call5, i32* %cd_loop_uv_offset, align 4, !dbg !7108
  call void @llvm.dbg.declare(metadata i32* %cd_poly_tex_offset, metadata !7113, metadata !DIExpression()), !dbg !7114
  %9 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !7115
  %bm6 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %9, i32 0, i32 0, !dbg !7116
  %10 = load %struct.BMesh*, %struct.BMesh** %bm6, align 8, !dbg !7116
  %pdata = getelementptr inbounds %struct.BMesh, %struct.BMesh* %10, i32 0, i32 27, !dbg !7117
  %call7 = call i32 @CustomData_get_offset(%struct.CustomData* %pdata, i32 15), !dbg !7118
  store i32 %call7, i32* %cd_poly_tex_offset, align 4, !dbg !7114
  %11 = load %struct.SpaceImage*, %struct.SpaceImage** %sima, align 8, !dbg !7119
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %limit, i64 0, i64 0, !dbg !7120
  call void @uvedit_pixel_to_float(%struct.SpaceImage* %11, float* %arraydecay, float 0x3FA99999A0000000), !dbg !7121
  %12 = load %struct.SpaceImage*, %struct.SpaceImage** %sima, align 8, !dbg !7122
  %arraydecay8 = getelementptr inbounds [2 x float], [2 x float]* %penalty, i64 0, i64 0, !dbg !7123
  %13 = load %struct.SpaceImage*, %struct.SpaceImage** %sima, align 8, !dbg !7124
  %tobool = icmp ne %struct.SpaceImage* %13, null, !dbg !7124
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !7124

cond.true:                                        ; preds = %entry
  %14 = load %struct.SpaceImage*, %struct.SpaceImage** %sima, align 8, !dbg !7125
  %zoom = getelementptr inbounds %struct.SpaceImage, %struct.SpaceImage* %14, i32 0, i32 14, !dbg !7126
  %15 = load float, float* %zoom, align 8, !dbg !7126
  br label %cond.end, !dbg !7124

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !7124

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %15, %cond.true ], [ 1.000000e+00, %cond.false ], !dbg !7124
  %div = fdiv float 5.000000e+00, %cond, !dbg !7127
  call void @uvedit_pixel_to_float(%struct.SpaceImage* %12, float* %arraydecay8, float %div), !dbg !7128
  %16 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !7129
  %uv_flag = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %16, i32 0, i32 11, !dbg !7131
  %17 = load i8, i8* %uv_flag, align 2, !dbg !7131
  %conv = zext i8 %17 to i32, !dbg !7129
  %and = and i32 %conv, 1, !dbg !7132
  %tobool9 = icmp ne i32 %and, 0, !dbg !7132
  br i1 %tobool9, label %if.then, label %if.else22, !dbg !7133

if.then:                                          ; preds = %cond.end
  store i32 1, i32* %sync, align 4, !dbg !7134
  %18 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !7136
  %selectmode10 = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %18, i32 0, i32 8, !dbg !7138
  %19 = load i16, i16* %selectmode10, align 2, !dbg !7138
  %conv11 = sext i16 %19 to i32, !dbg !7136
  %and12 = and i32 %conv11, 4, !dbg !7139
  %tobool13 = icmp ne i32 %and12, 0, !dbg !7139
  br i1 %tobool13, label %if.then14, label %if.else, !dbg !7140

if.then14:                                        ; preds = %if.then
  store i32 4, i32* %selectmode, align 4, !dbg !7141
  br label %if.end21, !dbg !7142

if.else:                                          ; preds = %if.then
  %20 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !7143
  %selectmode15 = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %20, i32 0, i32 8, !dbg !7145
  %21 = load i16, i16* %selectmode15, align 2, !dbg !7145
  %conv16 = sext i16 %21 to i32, !dbg !7143
  %and17 = and i32 %conv16, 2, !dbg !7146
  %tobool18 = icmp ne i32 %and17, 0, !dbg !7146
  br i1 %tobool18, label %if.then19, label %if.else20, !dbg !7147

if.then19:                                        ; preds = %if.else
  store i32 2, i32* %selectmode, align 4, !dbg !7148
  br label %if.end, !dbg !7149

if.else20:                                        ; preds = %if.else
  store i32 1, i32* %selectmode, align 4, !dbg !7150
  br label %if.end

if.end:                                           ; preds = %if.else20, %if.then19
  br label %if.end21

if.end21:                                         ; preds = %if.end, %if.then14
  store i32 1, i32* %sticky, align 4, !dbg !7151
  br label %if.end31, !dbg !7152

if.else22:                                        ; preds = %cond.end
  store i32 0, i32* %sync, align 4, !dbg !7153
  %22 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !7155
  %uv_selectmode = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %22, i32 0, i32 12, !dbg !7156
  %23 = load i8, i8* %uv_selectmode, align 1, !dbg !7156
  %conv23 = zext i8 %23 to i32, !dbg !7155
  store i32 %conv23, i32* %selectmode, align 4, !dbg !7157
  %24 = load %struct.SpaceImage*, %struct.SpaceImage** %sima, align 8, !dbg !7158
  %tobool24 = icmp ne %struct.SpaceImage* %24, null, !dbg !7159
  br i1 %tobool24, label %cond.true25, label %cond.false28, !dbg !7159

cond.true25:                                      ; preds = %if.else22
  %25 = load %struct.SpaceImage*, %struct.SpaceImage** %sima, align 8, !dbg !7160
  %sticky26 = getelementptr inbounds %struct.SpaceImage, %struct.SpaceImage* %25, i32 0, i32 23, !dbg !7161
  %26 = load i8, i8* %sticky26, align 1, !dbg !7161
  %conv27 = zext i8 %26 to i32, !dbg !7160
  br label %cond.end29, !dbg !7159

cond.false28:                                     ; preds = %if.else22
  br label %cond.end29, !dbg !7159

cond.end29:                                       ; preds = %cond.false28, %cond.true25
  %cond30 = phi i32 [ %conv27, %cond.true25 ], [ 1, %cond.false28 ], !dbg !7159
  store i32 %cond30, i32* %sticky, align 4, !dbg !7162
  br label %if.end31

if.end31:                                         ; preds = %cond.end29, %if.end21
  %27 = load i8, i8* %loop.addr, align 1, !dbg !7163
  %tobool32 = icmp ne i8 %27, 0, !dbg !7163
  br i1 %tobool32, label %if.then33, label %if.else38, !dbg !7165

if.then33:                                        ; preds = %if.end31
  %28 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !7166
  %29 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !7168
  %30 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !7169
  %31 = load float*, float** %co.addr, align 8, !dbg !7170
  call void @uv_find_nearest_edge(%struct.Scene* %28, %struct.Image* %29, %struct.BMEditMesh* %30, float* %31, %struct.NearestHit* %hit), !dbg !7171
  %efa34 = getelementptr inbounds %struct.NearestHit, %struct.NearestHit* %hit, i32 0, i32 0, !dbg !7172
  %32 = load %struct.BMFace*, %struct.BMFace** %efa34, align 8, !dbg !7172
  %cmp = icmp eq %struct.BMFace* %32, null, !dbg !7174
  br i1 %cmp, label %if.then36, label %if.end37, !dbg !7175

if.then36:                                        ; preds = %if.then33
  store i32 2, i32* %retval, align 4, !dbg !7176
  br label %return, !dbg !7176

if.end37:                                         ; preds = %if.then33
  store i32 0, i32* %hitlen, align 4, !dbg !7178
  br label %if.end166, !dbg !7179

if.else38:                                        ; preds = %if.end31
  %33 = load i32, i32* %selectmode, align 4, !dbg !7180
  %cmp39 = icmp eq i32 %33, 1, !dbg !7182
  br i1 %cmp39, label %if.then41, label %if.else65, !dbg !7183

if.then41:                                        ; preds = %if.else38
  %34 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !7184
  %35 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !7186
  %36 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !7187
  %37 = load float*, float** %co.addr, align 8, !dbg !7188
  %arraydecay42 = getelementptr inbounds [2 x float], [2 x float]* %penalty, i64 0, i64 0, !dbg !7189
  call void @uv_find_nearest_vert(%struct.Scene* %34, %struct.Image* %35, %struct.BMEditMesh* %36, float* %37, float* %arraydecay42, %struct.NearestHit* %hit), !dbg !7190
  %efa43 = getelementptr inbounds %struct.NearestHit, %struct.NearestHit* %hit, i32 0, i32 0, !dbg !7191
  %38 = load %struct.BMFace*, %struct.BMFace** %efa43, align 8, !dbg !7191
  %cmp44 = icmp eq %struct.BMFace* %38, null, !dbg !7193
  br i1 %cmp44, label %if.then46, label %if.end47, !dbg !7194

if.then46:                                        ; preds = %if.then41
  store i32 2, i32* %retval, align 4, !dbg !7195
  br label %return, !dbg !7195

if.end47:                                         ; preds = %if.then41
  %efa48 = getelementptr inbounds %struct.NearestHit, %struct.NearestHit* %hit, i32 0, i32 0, !dbg !7197
  %39 = load %struct.BMFace*, %struct.BMFace** %efa48, align 8, !dbg !7197
  %len = getelementptr inbounds %struct.BMFace, %struct.BMFace* %39, i32 0, i32 3, !dbg !7197
  %40 = load i32, i32* %len, align 8, !dbg !7197
  %conv49 = sext i32 %40 to i64, !dbg !7197
  %mul = mul i64 4, %conv49, !dbg !7197
  %41 = alloca i8, i64 %mul, align 16, !dbg !7197
  %42 = bitcast i8* %41 to i32*, !dbg !7197
  store i32* %42, i32** %hitv, align 8, !dbg !7198
  %efa50 = getelementptr inbounds %struct.NearestHit, %struct.NearestHit* %hit, i32 0, i32 0, !dbg !7199
  %43 = load %struct.BMFace*, %struct.BMFace** %efa50, align 8, !dbg !7199
  %len51 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %43, i32 0, i32 3, !dbg !7199
  %44 = load i32, i32* %len51, align 8, !dbg !7199
  %conv52 = sext i32 %44 to i64, !dbg !7199
  %mul53 = mul i64 8, %conv52, !dbg !7199
  %45 = alloca i8, i64 %mul53, align 16, !dbg !7199
  %46 = bitcast i8* %45 to float**, !dbg !7199
  store float** %46, float*** %hituv, align 8, !dbg !7200
  %47 = load i32*, i32** %hitv, align 8, !dbg !7201
  %efa54 = getelementptr inbounds %struct.NearestHit, %struct.NearestHit* %hit, i32 0, i32 0, !dbg !7202
  %48 = load %struct.BMFace*, %struct.BMFace** %efa54, align 8, !dbg !7202
  %len55 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %48, i32 0, i32 3, !dbg !7203
  %49 = load i32, i32* %len55, align 8, !dbg !7203
  call void @fill_vn_i(i32* %47, i32 %49, i32 -1), !dbg !7204
  %l56 = getelementptr inbounds %struct.NearestHit, %struct.NearestHit* %hit, i32 0, i32 2, !dbg !7205
  %50 = load %struct.BMLoop*, %struct.BMLoop** %l56, align 8, !dbg !7205
  %v = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %50, i32 0, i32 1, !dbg !7205
  %51 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !7205
  %head = getelementptr inbounds %struct.BMVert, %struct.BMVert* %51, i32 0, i32 0, !dbg !7205
  %call57 = call i32 @_bm_elem_index_get(%struct.BMHeader* %head), !dbg !7205
  %52 = load i32*, i32** %hitv, align 8, !dbg !7206
  %lindex = getelementptr inbounds %struct.NearestHit, %struct.NearestHit* %hit, i32 0, i32 5, !dbg !7207
  %53 = load i32, i32* %lindex, align 8, !dbg !7207
  %idxprom = sext i32 %53 to i64, !dbg !7206
  %arrayidx = getelementptr inbounds i32, i32* %52, i64 %idxprom, !dbg !7206
  store i32 %call57, i32* %arrayidx, align 4, !dbg !7208
  %luv58 = getelementptr inbounds %struct.NearestHit, %struct.NearestHit* %hit, i32 0, i32 3, !dbg !7209
  %54 = load %struct.MLoopUV*, %struct.MLoopUV** %luv58, align 8, !dbg !7209
  %uv = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %54, i32 0, i32 0, !dbg !7210
  %arraydecay59 = getelementptr inbounds [2 x float], [2 x float]* %uv, i64 0, i64 0, !dbg !7211
  %55 = load float**, float*** %hituv, align 8, !dbg !7212
  %lindex60 = getelementptr inbounds %struct.NearestHit, %struct.NearestHit* %hit, i32 0, i32 5, !dbg !7213
  %56 = load i32, i32* %lindex60, align 8, !dbg !7213
  %idxprom61 = sext i32 %56 to i64, !dbg !7212
  %arrayidx62 = getelementptr inbounds float*, float** %55, i64 %idxprom61, !dbg !7212
  store float* %arraydecay59, float** %arrayidx62, align 8, !dbg !7214
  %efa63 = getelementptr inbounds %struct.NearestHit, %struct.NearestHit* %hit, i32 0, i32 0, !dbg !7215
  %57 = load %struct.BMFace*, %struct.BMFace** %efa63, align 8, !dbg !7215
  %len64 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %57, i32 0, i32 3, !dbg !7216
  %58 = load i32, i32* %len64, align 8, !dbg !7216
  store i32 %58, i32* %hitlen, align 4, !dbg !7217
  br label %if.end165, !dbg !7218

if.else65:                                        ; preds = %if.else38
  %59 = load i32, i32* %selectmode, align 4, !dbg !7219
  %cmp66 = icmp eq i32 %59, 2, !dbg !7221
  br i1 %cmp66, label %if.then68, label %if.else117, !dbg !7222

if.then68:                                        ; preds = %if.else65
  %60 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !7223
  %61 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !7225
  %62 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !7226
  %63 = load float*, float** %co.addr, align 8, !dbg !7227
  call void @uv_find_nearest_edge(%struct.Scene* %60, %struct.Image* %61, %struct.BMEditMesh* %62, float* %63, %struct.NearestHit* %hit), !dbg !7228
  %efa69 = getelementptr inbounds %struct.NearestHit, %struct.NearestHit* %hit, i32 0, i32 0, !dbg !7229
  %64 = load %struct.BMFace*, %struct.BMFace** %efa69, align 8, !dbg !7229
  %cmp70 = icmp eq %struct.BMFace* %64, null, !dbg !7231
  br i1 %cmp70, label %if.then72, label %if.end73, !dbg !7232

if.then72:                                        ; preds = %if.then68
  store i32 2, i32* %retval, align 4, !dbg !7233
  br label %return, !dbg !7233

if.end73:                                         ; preds = %if.then68
  %efa74 = getelementptr inbounds %struct.NearestHit, %struct.NearestHit* %hit, i32 0, i32 0, !dbg !7235
  %65 = load %struct.BMFace*, %struct.BMFace** %efa74, align 8, !dbg !7235
  %len75 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %65, i32 0, i32 3, !dbg !7235
  %66 = load i32, i32* %len75, align 8, !dbg !7235
  %conv76 = sext i32 %66 to i64, !dbg !7235
  %mul77 = mul i64 4, %conv76, !dbg !7235
  %67 = alloca i8, i64 %mul77, align 16, !dbg !7235
  %68 = bitcast i8* %67 to i32*, !dbg !7235
  store i32* %68, i32** %hitv, align 8, !dbg !7236
  %efa78 = getelementptr inbounds %struct.NearestHit, %struct.NearestHit* %hit, i32 0, i32 0, !dbg !7237
  %69 = load %struct.BMFace*, %struct.BMFace** %efa78, align 8, !dbg !7237
  %len79 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %69, i32 0, i32 3, !dbg !7237
  %70 = load i32, i32* %len79, align 8, !dbg !7237
  %conv80 = sext i32 %70 to i64, !dbg !7237
  %mul81 = mul i64 8, %conv80, !dbg !7237
  %71 = alloca i8, i64 %mul81, align 16, !dbg !7237
  %72 = bitcast i8* %71 to float**, !dbg !7237
  store float** %72, float*** %hituv, align 8, !dbg !7238
  %73 = load i32*, i32** %hitv, align 8, !dbg !7239
  %efa82 = getelementptr inbounds %struct.NearestHit, %struct.NearestHit* %hit, i32 0, i32 0, !dbg !7240
  %74 = load %struct.BMFace*, %struct.BMFace** %efa82, align 8, !dbg !7240
  %len83 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %74, i32 0, i32 3, !dbg !7241
  %75 = load i32, i32* %len83, align 8, !dbg !7241
  call void @fill_vn_i(i32* %73, i32 %75, i32 -1), !dbg !7242
  %l84 = getelementptr inbounds %struct.NearestHit, %struct.NearestHit* %hit, i32 0, i32 2, !dbg !7243
  %76 = load %struct.BMLoop*, %struct.BMLoop** %l84, align 8, !dbg !7243
  %v85 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %76, i32 0, i32 1, !dbg !7243
  %77 = load %struct.BMVert*, %struct.BMVert** %v85, align 8, !dbg !7243
  %head86 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %77, i32 0, i32 0, !dbg !7243
  %call87 = call i32 @_bm_elem_index_get(%struct.BMHeader* %head86), !dbg !7243
  %78 = load i32*, i32** %hitv, align 8, !dbg !7244
  %lindex88 = getelementptr inbounds %struct.NearestHit, %struct.NearestHit* %hit, i32 0, i32 5, !dbg !7245
  %79 = load i32, i32* %lindex88, align 8, !dbg !7245
  %idxprom89 = sext i32 %79 to i64, !dbg !7244
  %arrayidx90 = getelementptr inbounds i32, i32* %78, i64 %idxprom89, !dbg !7244
  store i32 %call87, i32* %arrayidx90, align 4, !dbg !7246
  %l91 = getelementptr inbounds %struct.NearestHit, %struct.NearestHit* %hit, i32 0, i32 2, !dbg !7247
  %80 = load %struct.BMLoop*, %struct.BMLoop** %l91, align 8, !dbg !7247
  %next = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %80, i32 0, i32 6, !dbg !7247
  %81 = load %struct.BMLoop*, %struct.BMLoop** %next, align 8, !dbg !7247
  %v92 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %81, i32 0, i32 1, !dbg !7247
  %82 = load %struct.BMVert*, %struct.BMVert** %v92, align 8, !dbg !7247
  %head93 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %82, i32 0, i32 0, !dbg !7247
  %call94 = call i32 @_bm_elem_index_get(%struct.BMHeader* %head93), !dbg !7247
  %83 = load i32*, i32** %hitv, align 8, !dbg !7248
  %lindex95 = getelementptr inbounds %struct.NearestHit, %struct.NearestHit* %hit, i32 0, i32 5, !dbg !7249
  %84 = load i32, i32* %lindex95, align 8, !dbg !7249
  %add = add nsw i32 %84, 1, !dbg !7250
  %efa96 = getelementptr inbounds %struct.NearestHit, %struct.NearestHit* %hit, i32 0, i32 0, !dbg !7251
  %85 = load %struct.BMFace*, %struct.BMFace** %efa96, align 8, !dbg !7251
  %len97 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %85, i32 0, i32 3, !dbg !7252
  %86 = load i32, i32* %len97, align 8, !dbg !7252
  %rem = srem i32 %add, %86, !dbg !7253
  %idxprom98 = sext i32 %rem to i64, !dbg !7248
  %arrayidx99 = getelementptr inbounds i32, i32* %83, i64 %idxprom98, !dbg !7248
  store i32 %call94, i32* %arrayidx99, align 4, !dbg !7254
  %luv100 = getelementptr inbounds %struct.NearestHit, %struct.NearestHit* %hit, i32 0, i32 3, !dbg !7255
  %87 = load %struct.MLoopUV*, %struct.MLoopUV** %luv100, align 8, !dbg !7255
  %uv101 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %87, i32 0, i32 0, !dbg !7256
  %arraydecay102 = getelementptr inbounds [2 x float], [2 x float]* %uv101, i64 0, i64 0, !dbg !7257
  %88 = load float**, float*** %hituv, align 8, !dbg !7258
  %lindex103 = getelementptr inbounds %struct.NearestHit, %struct.NearestHit* %hit, i32 0, i32 5, !dbg !7259
  %89 = load i32, i32* %lindex103, align 8, !dbg !7259
  %idxprom104 = sext i32 %89 to i64, !dbg !7258
  %arrayidx105 = getelementptr inbounds float*, float** %88, i64 %idxprom104, !dbg !7258
  store float* %arraydecay102, float** %arrayidx105, align 8, !dbg !7260
  %luv_next = getelementptr inbounds %struct.NearestHit, %struct.NearestHit* %hit, i32 0, i32 4, !dbg !7261
  %90 = load %struct.MLoopUV*, %struct.MLoopUV** %luv_next, align 8, !dbg !7261
  %uv106 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %90, i32 0, i32 0, !dbg !7262
  %arraydecay107 = getelementptr inbounds [2 x float], [2 x float]* %uv106, i64 0, i64 0, !dbg !7263
  %91 = load float**, float*** %hituv, align 8, !dbg !7264
  %lindex108 = getelementptr inbounds %struct.NearestHit, %struct.NearestHit* %hit, i32 0, i32 5, !dbg !7265
  %92 = load i32, i32* %lindex108, align 8, !dbg !7265
  %add109 = add nsw i32 %92, 1, !dbg !7266
  %efa110 = getelementptr inbounds %struct.NearestHit, %struct.NearestHit* %hit, i32 0, i32 0, !dbg !7267
  %93 = load %struct.BMFace*, %struct.BMFace** %efa110, align 8, !dbg !7267
  %len111 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %93, i32 0, i32 3, !dbg !7268
  %94 = load i32, i32* %len111, align 8, !dbg !7268
  %rem112 = srem i32 %add109, %94, !dbg !7269
  %idxprom113 = sext i32 %rem112 to i64, !dbg !7264
  %arrayidx114 = getelementptr inbounds float*, float** %91, i64 %idxprom113, !dbg !7264
  store float* %arraydecay107, float** %arrayidx114, align 8, !dbg !7270
  %efa115 = getelementptr inbounds %struct.NearestHit, %struct.NearestHit* %hit, i32 0, i32 0, !dbg !7271
  %95 = load %struct.BMFace*, %struct.BMFace** %efa115, align 8, !dbg !7271
  %len116 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %95, i32 0, i32 3, !dbg !7272
  %96 = load i32, i32* %len116, align 8, !dbg !7272
  store i32 %96, i32* %hitlen, align 4, !dbg !7273
  br label %if.end164, !dbg !7274

if.else117:                                       ; preds = %if.else65
  %97 = load i32, i32* %selectmode, align 4, !dbg !7275
  %cmp118 = icmp eq i32 %97, 4, !dbg !7277
  br i1 %cmp118, label %if.then120, label %if.else152, !dbg !7278

if.then120:                                       ; preds = %if.else117
  %98 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !7279
  %99 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !7281
  %100 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !7282
  %101 = load float*, float** %co.addr, align 8, !dbg !7283
  call void @uv_find_nearest_face(%struct.Scene* %98, %struct.Image* %99, %struct.BMEditMesh* %100, float* %101, %struct.NearestHit* %hit), !dbg !7284
  %efa121 = getelementptr inbounds %struct.NearestHit, %struct.NearestHit* %hit, i32 0, i32 0, !dbg !7285
  %102 = load %struct.BMFace*, %struct.BMFace** %efa121, align 8, !dbg !7285
  %cmp122 = icmp eq %struct.BMFace* %102, null, !dbg !7287
  br i1 %cmp122, label %if.then124, label %if.end125, !dbg !7288

if.then124:                                       ; preds = %if.then120
  store i32 2, i32* %retval, align 4, !dbg !7289
  br label %return, !dbg !7289

if.end125:                                        ; preds = %if.then120
  %103 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !7291
  %bm126 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %103, i32 0, i32 0, !dbg !7292
  %104 = load %struct.BMesh*, %struct.BMesh** %bm126, align 8, !dbg !7292
  %efa127 = getelementptr inbounds %struct.NearestHit, %struct.NearestHit* %hit, i32 0, i32 0, !dbg !7293
  %105 = load %struct.BMFace*, %struct.BMFace** %efa127, align 8, !dbg !7293
  call void @BM_mesh_active_face_set(%struct.BMesh* %104, %struct.BMFace* %105), !dbg !7294
  %efa128 = getelementptr inbounds %struct.NearestHit, %struct.NearestHit* %hit, i32 0, i32 0, !dbg !7295
  %106 = load %struct.BMFace*, %struct.BMFace** %efa128, align 8, !dbg !7295
  %len129 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %106, i32 0, i32 3, !dbg !7295
  %107 = load i32, i32* %len129, align 8, !dbg !7295
  %conv130 = sext i32 %107 to i64, !dbg !7295
  %mul131 = mul i64 4, %conv130, !dbg !7295
  %108 = alloca i8, i64 %mul131, align 16, !dbg !7295
  %109 = bitcast i8* %108 to i32*, !dbg !7295
  store i32* %109, i32** %hitv, align 8, !dbg !7296
  %efa132 = getelementptr inbounds %struct.NearestHit, %struct.NearestHit* %hit, i32 0, i32 0, !dbg !7297
  %110 = load %struct.BMFace*, %struct.BMFace** %efa132, align 8, !dbg !7297
  %len133 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %110, i32 0, i32 3, !dbg !7297
  %111 = load i32, i32* %len133, align 8, !dbg !7297
  %conv134 = sext i32 %111 to i64, !dbg !7297
  %mul135 = mul i64 8, %conv134, !dbg !7297
  %112 = alloca i8, i64 %mul135, align 16, !dbg !7297
  %113 = bitcast i8* %112 to float**, !dbg !7297
  store float** %113, float*** %hituv, align 8, !dbg !7298
  %efa136 = getelementptr inbounds %struct.NearestHit, %struct.NearestHit* %hit, i32 0, i32 0, !dbg !7299
  %114 = load %struct.BMFace*, %struct.BMFace** %efa136, align 8, !dbg !7299
  %115 = bitcast %struct.BMFace* %114 to i8*, !dbg !7299
  %call137 = call i8* @BM_iter_new(%struct.BMIter* %liter, %struct.BMesh* null, i8 zeroext 11, i8* %115), !dbg !7299
  %116 = bitcast i8* %call137 to %struct.BMLoop*, !dbg !7299
  store %struct.BMLoop* %116, %struct.BMLoop** %l, align 8, !dbg !7299
  store i32 0, i32* %i, align 4, !dbg !7299
  br label %for.cond, !dbg !7299

for.cond:                                         ; preds = %for.inc, %if.end125
  %117 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !7301
  %tobool138 = icmp ne %struct.BMLoop* %117, null, !dbg !7299
  br i1 %tobool138, label %for.body, label %for.end, !dbg !7299

for.body:                                         ; preds = %for.cond
  %118 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !7303
  %head139 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %118, i32 0, i32 0, !dbg !7303
  %data = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head139, i32 0, i32 0, !dbg !7303
  %119 = load i8*, i8** %data, align 8, !dbg !7303
  %120 = load i32, i32* %cd_loop_uv_offset, align 4, !dbg !7303
  %idx.ext = sext i32 %120 to i64, !dbg !7303
  %add.ptr = getelementptr inbounds i8, i8* %119, i64 %idx.ext, !dbg !7303
  %121 = bitcast i8* %add.ptr to %struct.MLoopUV*, !dbg !7303
  store %struct.MLoopUV* %121, %struct.MLoopUV** %luv, align 8, !dbg !7305
  %122 = load %struct.MLoopUV*, %struct.MLoopUV** %luv, align 8, !dbg !7306
  %uv140 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %122, i32 0, i32 0, !dbg !7307
  %arraydecay141 = getelementptr inbounds [2 x float], [2 x float]* %uv140, i64 0, i64 0, !dbg !7306
  %123 = load float**, float*** %hituv, align 8, !dbg !7308
  %124 = load i32, i32* %i, align 4, !dbg !7309
  %idxprom142 = sext i32 %124 to i64, !dbg !7308
  %arrayidx143 = getelementptr inbounds float*, float** %123, i64 %idxprom142, !dbg !7308
  store float* %arraydecay141, float** %arrayidx143, align 8, !dbg !7310
  %125 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !7311
  %v144 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %125, i32 0, i32 1, !dbg !7311
  %126 = load %struct.BMVert*, %struct.BMVert** %v144, align 8, !dbg !7311
  %head145 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %126, i32 0, i32 0, !dbg !7311
  %call146 = call i32 @_bm_elem_index_get(%struct.BMHeader* %head145), !dbg !7311
  %127 = load i32*, i32** %hitv, align 8, !dbg !7312
  %128 = load i32, i32* %i, align 4, !dbg !7313
  %idxprom147 = sext i32 %128 to i64, !dbg !7312
  %arrayidx148 = getelementptr inbounds i32, i32* %127, i64 %idxprom147, !dbg !7312
  store i32 %call146, i32* %arrayidx148, align 4, !dbg !7314
  br label %for.inc, !dbg !7315

for.inc:                                          ; preds = %for.body
  %call149 = call i8* @BM_iter_step(%struct.BMIter* %liter), !dbg !7301
  %129 = bitcast i8* %call149 to %struct.BMLoop*, !dbg !7301
  store %struct.BMLoop* %129, %struct.BMLoop** %l, align 8, !dbg !7301
  %130 = load i32, i32* %i, align 4, !dbg !7301
  %inc = add nsw i32 %130, 1, !dbg !7301
  store i32 %inc, i32* %i, align 4, !dbg !7301
  br label %for.cond, !dbg !7301, !llvm.loop !7316

for.end:                                          ; preds = %for.cond
  %efa150 = getelementptr inbounds %struct.NearestHit, %struct.NearestHit* %hit, i32 0, i32 0, !dbg !7318
  %131 = load %struct.BMFace*, %struct.BMFace** %efa150, align 8, !dbg !7318
  %len151 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %131, i32 0, i32 3, !dbg !7319
  %132 = load i32, i32* %len151, align 8, !dbg !7319
  store i32 %132, i32* %hitlen, align 4, !dbg !7320
  br label %if.end163, !dbg !7321

if.else152:                                       ; preds = %if.else117
  %133 = load i32, i32* %selectmode, align 4, !dbg !7322
  %cmp153 = icmp eq i32 %133, 8, !dbg !7324
  br i1 %cmp153, label %if.then155, label %if.else161, !dbg !7325

if.then155:                                       ; preds = %if.else152
  %134 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !7326
  %135 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !7328
  %136 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !7329
  %137 = load float*, float** %co.addr, align 8, !dbg !7330
  call void @uv_find_nearest_edge(%struct.Scene* %134, %struct.Image* %135, %struct.BMEditMesh* %136, float* %137, %struct.NearestHit* %hit), !dbg !7331
  %efa156 = getelementptr inbounds %struct.NearestHit, %struct.NearestHit* %hit, i32 0, i32 0, !dbg !7332
  %138 = load %struct.BMFace*, %struct.BMFace** %efa156, align 8, !dbg !7332
  %cmp157 = icmp eq %struct.BMFace* %138, null, !dbg !7334
  br i1 %cmp157, label %if.then159, label %if.end160, !dbg !7335

if.then159:                                       ; preds = %if.then155
  store i32 2, i32* %retval, align 4, !dbg !7336
  br label %return, !dbg !7336

if.end160:                                        ; preds = %if.then155
  store i32 0, i32* %hitlen, align 4, !dbg !7338
  br label %if.end162, !dbg !7339

if.else161:                                       ; preds = %if.else152
  store i32 0, i32* %hitlen, align 4, !dbg !7340
  store i32 2, i32* %retval, align 4, !dbg !7342
  br label %return, !dbg !7342

if.end162:                                        ; preds = %if.end160
  br label %if.end163

if.end163:                                        ; preds = %if.end162, %for.end
  br label %if.end164

if.end164:                                        ; preds = %if.end163, %if.end73
  br label %if.end165

if.end165:                                        ; preds = %if.end164, %if.end47
  br label %if.end166

if.end166:                                        ; preds = %if.end165, %if.end37
  %139 = load i8, i8* %loop.addr, align 1, !dbg !7343
  %tobool167 = icmp ne i8 %139, 0, !dbg !7343
  br i1 %tobool167, label %if.then168, label %if.else171, !dbg !7345

if.then168:                                       ; preds = %if.end166
  %140 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !7346
  %141 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !7348
  %142 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !7349
  %arraydecay169 = getelementptr inbounds [2 x float], [2 x float]* %limit, i64 0, i64 0, !dbg !7350
  %143 = load i8, i8* %extend.addr, align 1, !dbg !7351
  %call170 = call i32 @uv_select_edgeloop(%struct.Scene* %140, %struct.Image* %141, %struct.BMEditMesh* %142, %struct.NearestHit* %hit, float* %arraydecay169, i8 zeroext %143), !dbg !7352
  store i32 %call170, i32* %flush, align 4, !dbg !7353
  br label %if.end333, !dbg !7354

if.else171:                                       ; preds = %if.end166
  %144 = load i32, i32* %selectmode, align 4, !dbg !7355
  %cmp172 = icmp eq i32 %144, 8, !dbg !7357
  br i1 %cmp172, label %if.then174, label %if.else176, !dbg !7358

if.then174:                                       ; preds = %if.else171
  %145 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !7359
  %146 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !7361
  %147 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !7362
  %arraydecay175 = getelementptr inbounds [2 x float], [2 x float]* %limit, i64 0, i64 0, !dbg !7363
  %148 = load i8, i8* %extend.addr, align 1, !dbg !7364
  call void @uv_select_linked(%struct.Scene* %145, %struct.Image* %146, %struct.BMEditMesh* %147, float* %arraydecay175, %struct.NearestHit* %hit, i8 zeroext %148), !dbg !7365
  br label %if.end332, !dbg !7366

if.else176:                                       ; preds = %if.else171
  %149 = load i8, i8* %extend.addr, align 1, !dbg !7367
  %tobool177 = icmp ne i8 %149, 0, !dbg !7367
  br i1 %tobool177, label %if.then178, label %if.else267, !dbg !7369

if.then178:                                       ; preds = %if.else176
  %150 = load i32, i32* %selectmode, align 4, !dbg !7370
  %cmp179 = icmp eq i32 %150, 1, !dbg !7373
  br i1 %cmp179, label %if.then181, label %if.else187, !dbg !7374

if.then181:                                       ; preds = %if.then178
  %151 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !7375
  %l182 = getelementptr inbounds %struct.NearestHit, %struct.NearestHit* %hit, i32 0, i32 2, !dbg !7377
  %152 = load %struct.BMLoop*, %struct.BMLoop** %l182, align 8, !dbg !7377
  %153 = load i32, i32* %cd_loop_uv_offset, align 4, !dbg !7378
  %call183 = call zeroext i8 @uvedit_uv_select_test(%struct.Scene* %151, %struct.BMLoop* %152, i32 %153), !dbg !7379
  %tobool184 = icmp ne i8 %call183, 0, !dbg !7380
  %lnot = xor i1 %tobool184, true, !dbg !7380
  %lnot.ext = zext i1 %lnot to i32, !dbg !7380
  %conv185 = trunc i32 %lnot.ext to i8, !dbg !7380
  store i8 %conv185, i8* %select, align 1, !dbg !7381
  %154 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !7382
  %155 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !7383
  %l186 = getelementptr inbounds %struct.NearestHit, %struct.NearestHit* %hit, i32 0, i32 2, !dbg !7384
  %156 = load %struct.BMLoop*, %struct.BMLoop** %l186, align 8, !dbg !7384
  %157 = load i8, i8* %select, align 1, !dbg !7385
  %158 = load i32, i32* %cd_loop_uv_offset, align 4, !dbg !7386
  call void @uvedit_uv_select_set(%struct.BMEditMesh* %154, %struct.Scene* %155, %struct.BMLoop* %156, i8 zeroext %157, i8 zeroext 1, i32 %158), !dbg !7387
  store i32 1, i32* %flush, align 4, !dbg !7388
  br label %if.end212, !dbg !7389

if.else187:                                       ; preds = %if.then178
  %159 = load i32, i32* %selectmode, align 4, !dbg !7390
  %cmp188 = icmp eq i32 %159, 2, !dbg !7392
  br i1 %cmp188, label %if.then190, label %if.else198, !dbg !7393

if.then190:                                       ; preds = %if.else187
  %160 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !7394
  %l191 = getelementptr inbounds %struct.NearestHit, %struct.NearestHit* %hit, i32 0, i32 2, !dbg !7396
  %161 = load %struct.BMLoop*, %struct.BMLoop** %l191, align 8, !dbg !7396
  %162 = load i32, i32* %cd_loop_uv_offset, align 4, !dbg !7397
  %call192 = call zeroext i8 @uvedit_edge_select_test(%struct.Scene* %160, %struct.BMLoop* %161, i32 %162), !dbg !7398
  %tobool193 = icmp ne i8 %call192, 0, !dbg !7399
  %lnot194 = xor i1 %tobool193, true, !dbg !7399
  %lnot.ext195 = zext i1 %lnot194 to i32, !dbg !7399
  %conv196 = trunc i32 %lnot.ext195 to i8, !dbg !7399
  store i8 %conv196, i8* %select, align 1, !dbg !7400
  %163 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !7401
  %164 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !7402
  %l197 = getelementptr inbounds %struct.NearestHit, %struct.NearestHit* %hit, i32 0, i32 2, !dbg !7403
  %165 = load %struct.BMLoop*, %struct.BMLoop** %l197, align 8, !dbg !7403
  %166 = load i8, i8* %select, align 1, !dbg !7404
  %167 = load i32, i32* %cd_loop_uv_offset, align 4, !dbg !7405
  call void @uvedit_edge_select_set(%struct.BMEditMesh* %163, %struct.Scene* %164, %struct.BMLoop* %165, i8 zeroext %166, i8 zeroext 1, i32 %167), !dbg !7406
  store i32 1, i32* %flush, align 4, !dbg !7407
  br label %if.end211, !dbg !7408

if.else198:                                       ; preds = %if.else187
  %168 = load i32, i32* %selectmode, align 4, !dbg !7409
  %cmp199 = icmp eq i32 %168, 4, !dbg !7411
  br i1 %cmp199, label %if.then201, label %if.end210, !dbg !7412

if.then201:                                       ; preds = %if.else198
  %169 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !7413
  %efa202 = getelementptr inbounds %struct.NearestHit, %struct.NearestHit* %hit, i32 0, i32 0, !dbg !7415
  %170 = load %struct.BMFace*, %struct.BMFace** %efa202, align 8, !dbg !7415
  %171 = load i32, i32* %cd_loop_uv_offset, align 4, !dbg !7416
  %call203 = call zeroext i8 @uvedit_face_select_test(%struct.Scene* %169, %struct.BMFace* %170, i32 %171), !dbg !7417
  %tobool204 = icmp ne i8 %call203, 0, !dbg !7418
  %lnot205 = xor i1 %tobool204, true, !dbg !7418
  %lnot.ext206 = zext i1 %lnot205 to i32, !dbg !7418
  %conv207 = trunc i32 %lnot.ext206 to i8, !dbg !7418
  store i8 %conv207, i8* %select, align 1, !dbg !7419
  %172 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !7420
  %173 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !7421
  %efa208 = getelementptr inbounds %struct.NearestHit, %struct.NearestHit* %hit, i32 0, i32 0, !dbg !7422
  %174 = load %struct.BMFace*, %struct.BMFace** %efa208, align 8, !dbg !7422
  %175 = load i8, i8* %select, align 1, !dbg !7423
  %176 = load i32, i32* %cd_loop_uv_offset, align 4, !dbg !7424
  %call209 = call zeroext i8 @uvedit_face_select_set(%struct.Scene* %172, %struct.BMEditMesh* %173, %struct.BMFace* %174, i8 zeroext %175, i8 zeroext 1, i32 %176), !dbg !7425
  store i32 -1, i32* %flush, align 4, !dbg !7426
  br label %if.end210, !dbg !7427

if.end210:                                        ; preds = %if.then201, %if.else198
  br label %if.end211

if.end211:                                        ; preds = %if.end210, %if.then190
  br label %if.end212

if.end212:                                        ; preds = %if.end211, %if.then181
  %177 = load i32, i32* %sync, align 4, !dbg !7428
  %tobool213 = icmp ne i32 %177, 0, !dbg !7428
  br i1 %tobool213, label %if.then214, label %if.end221, !dbg !7430

if.then214:                                       ; preds = %if.end212
  %178 = load i8, i8* %select, align 1, !dbg !7431
  %conv215 = zext i8 %178 to i32, !dbg !7431
  %cmp216 = icmp eq i32 %conv215, 0, !dbg !7434
  br i1 %cmp216, label %if.then218, label %if.end220, !dbg !7435

if.then218:                                       ; preds = %if.then214
  %179 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !7436
  %bm219 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %179, i32 0, i32 0, !dbg !7438
  %180 = load %struct.BMesh*, %struct.BMesh** %bm219, align 8, !dbg !7438
  call void @BM_select_history_validate(%struct.BMesh* %180), !dbg !7439
  br label %if.end220, !dbg !7440

if.end220:                                        ; preds = %if.then218, %if.then214
  br label %if.end221, !dbg !7441

if.end221:                                        ; preds = %if.end220, %if.end212
  %181 = load i32, i32* %sticky, align 4, !dbg !7442
  %cmp222 = icmp ne i32 %181, 1, !dbg !7444
  br i1 %cmp222, label %if.then224, label %if.end266, !dbg !7445

if.then224:                                       ; preds = %if.end221
  %182 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !7446
  %bm225 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %182, i32 0, i32 0, !dbg !7448
  %183 = load %struct.BMesh*, %struct.BMesh** %bm225, align 8, !dbg !7448
  call void @BM_mesh_elem_index_ensure(%struct.BMesh* %183, i8 zeroext 1), !dbg !7449
  %184 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !7450
  %bm226 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %184, i32 0, i32 0, !dbg !7450
  %185 = load %struct.BMesh*, %struct.BMesh** %bm226, align 8, !dbg !7450
  %call227 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %185, i8 zeroext 3, i8* null), !dbg !7450
  %186 = bitcast i8* %call227 to %struct.BMFace*, !dbg !7450
  store %struct.BMFace* %186, %struct.BMFace** %efa, align 8, !dbg !7450
  br label %for.cond228, !dbg !7450

for.cond228:                                      ; preds = %for.inc260, %if.then224
  %187 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !7452
  %tobool229 = icmp ne %struct.BMFace* %187, null, !dbg !7450
  br i1 %tobool229, label %for.body230, label %for.end262, !dbg !7450

for.body230:                                      ; preds = %for.cond228
  %188 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !7454
  %head231 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %188, i32 0, i32 0, !dbg !7454
  %data232 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head231, i32 0, i32 0, !dbg !7454
  %189 = load i8*, i8** %data232, align 8, !dbg !7454
  %190 = load i32, i32* %cd_poly_tex_offset, align 4, !dbg !7454
  %idx.ext233 = sext i32 %190 to i64, !dbg !7454
  %add.ptr234 = getelementptr inbounds i8, i8* %189, i64 %idx.ext233, !dbg !7454
  %191 = bitcast i8* %add.ptr234 to %struct.MTexPoly*, !dbg !7454
  store %struct.MTexPoly* %191, %struct.MTexPoly** %tf, align 8, !dbg !7456
  %192 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !7457
  %193 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !7459
  %194 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !7460
  %195 = load %struct.MTexPoly*, %struct.MTexPoly** %tf, align 8, !dbg !7461
  %call235 = call zeroext i8 @uvedit_face_visible_test(%struct.Scene* %192, %struct.Image* %193, %struct.BMFace* %194, %struct.MTexPoly* %195), !dbg !7462
  %tobool236 = icmp ne i8 %call235, 0, !dbg !7462
  br i1 %tobool236, label %if.end238, label %if.then237, !dbg !7463

if.then237:                                       ; preds = %for.body230
  br label %for.inc260, !dbg !7464

if.end238:                                        ; preds = %for.body230
  %196 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !7465
  %197 = bitcast %struct.BMFace* %196 to i8*, !dbg !7465
  %call239 = call i8* @BM_iter_new(%struct.BMIter* %liter, %struct.BMesh* null, i8 zeroext 11, i8* %197), !dbg !7465
  %198 = bitcast i8* %call239 to %struct.BMLoop*, !dbg !7465
  store %struct.BMLoop* %198, %struct.BMLoop** %l, align 8, !dbg !7465
  br label %for.cond240, !dbg !7465

for.cond240:                                      ; preds = %for.inc257, %if.end238
  %199 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !7467
  %tobool241 = icmp ne %struct.BMLoop* %199, null, !dbg !7465
  br i1 %tobool241, label %for.body242, label %for.end259, !dbg !7465

for.body242:                                      ; preds = %for.cond240
  %200 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !7469
  %head243 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %200, i32 0, i32 0, !dbg !7469
  %data244 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head243, i32 0, i32 0, !dbg !7469
  %201 = load i8*, i8** %data244, align 8, !dbg !7469
  %202 = load i32, i32* %cd_loop_uv_offset, align 4, !dbg !7469
  %idx.ext245 = sext i32 %202 to i64, !dbg !7469
  %add.ptr246 = getelementptr inbounds i8, i8* %201, i64 %idx.ext245, !dbg !7469
  %203 = bitcast i8* %add.ptr246 to %struct.MLoopUV*, !dbg !7469
  store %struct.MLoopUV* %203, %struct.MLoopUV** %luv, align 8, !dbg !7471
  %arraydecay247 = getelementptr inbounds [2 x float], [2 x float]* %limit, i64 0, i64 0, !dbg !7472
  %204 = load i32*, i32** %hitv, align 8, !dbg !7474
  %205 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !7475
  %v248 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %205, i32 0, i32 1, !dbg !7475
  %206 = load %struct.BMVert*, %struct.BMVert** %v248, align 8, !dbg !7475
  %head249 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %206, i32 0, i32 0, !dbg !7475
  %call250 = call i32 @_bm_elem_index_get(%struct.BMHeader* %head249), !dbg !7475
  %207 = load float**, float*** %hituv, align 8, !dbg !7476
  %208 = load %struct.MLoopUV*, %struct.MLoopUV** %luv, align 8, !dbg !7477
  %uv251 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %208, i32 0, i32 0, !dbg !7478
  %arraydecay252 = getelementptr inbounds [2 x float], [2 x float]* %uv251, i64 0, i64 0, !dbg !7477
  %209 = load i32, i32* %sticky, align 4, !dbg !7479
  %210 = load i32, i32* %hitlen, align 4, !dbg !7480
  %call253 = call zeroext i8 @uv_sticky_select(float* %arraydecay247, i32* %204, i32 %call250, float** %207, float* %arraydecay252, i32 %209, i32 %210), !dbg !7481
  %tobool254 = icmp ne i8 %call253, 0, !dbg !7481
  br i1 %tobool254, label %if.then255, label %if.end256, !dbg !7482

if.then255:                                       ; preds = %for.body242
  %211 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !7483
  %212 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !7484
  %213 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !7485
  %214 = load i8, i8* %select, align 1, !dbg !7486
  %215 = load i32, i32* %cd_loop_uv_offset, align 4, !dbg !7487
  call void @uvedit_uv_select_set(%struct.BMEditMesh* %211, %struct.Scene* %212, %struct.BMLoop* %213, i8 zeroext %214, i8 zeroext 0, i32 %215), !dbg !7488
  br label %if.end256, !dbg !7488

if.end256:                                        ; preds = %if.then255, %for.body242
  br label %for.inc257, !dbg !7489

for.inc257:                                       ; preds = %if.end256
  %call258 = call i8* @BM_iter_step(%struct.BMIter* %liter), !dbg !7467
  %216 = bitcast i8* %call258 to %struct.BMLoop*, !dbg !7467
  store %struct.BMLoop* %216, %struct.BMLoop** %l, align 8, !dbg !7467
  br label %for.cond240, !dbg !7467, !llvm.loop !7490

for.end259:                                       ; preds = %for.cond240
  br label %for.inc260, !dbg !7492

for.inc260:                                       ; preds = %for.end259, %if.then237
  %call261 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !7452
  %217 = bitcast i8* %call261 to %struct.BMFace*, !dbg !7452
  store %struct.BMFace* %217, %struct.BMFace** %efa, align 8, !dbg !7452
  br label %for.cond228, !dbg !7452, !llvm.loop !7493

for.end262:                                       ; preds = %for.cond228
  %218 = load i8, i8* %select, align 1, !dbg !7495
  %conv263 = zext i8 %218 to i32, !dbg !7495
  %tobool264 = icmp ne i32 %conv263, 0, !dbg !7495
  %219 = zext i1 %tobool264 to i64, !dbg !7495
  %cond265 = select i1 %tobool264, i32 1, i32 -1, !dbg !7495
  store i32 %cond265, i32* %flush, align 4, !dbg !7496
  br label %if.end266, !dbg !7497

if.end266:                                        ; preds = %for.end262, %if.end221
  br label %if.end331, !dbg !7498

if.else267:                                       ; preds = %if.else176
  %220 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !7499
  %221 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !7501
  %222 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !7502
  call void @uv_select_all_perform(%struct.Scene* %220, %struct.Image* %221, %struct.BMEditMesh* %222, i32 2), !dbg !7503
  %223 = load i32, i32* %selectmode, align 4, !dbg !7504
  %cmp268 = icmp eq i32 %223, 1, !dbg !7506
  br i1 %cmp268, label %if.then270, label %if.else272, !dbg !7507

if.then270:                                       ; preds = %if.else267
  %224 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !7508
  %225 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !7510
  %l271 = getelementptr inbounds %struct.NearestHit, %struct.NearestHit* %hit, i32 0, i32 2, !dbg !7511
  %226 = load %struct.BMLoop*, %struct.BMLoop** %l271, align 8, !dbg !7511
  %227 = load i32, i32* %cd_loop_uv_offset, align 4, !dbg !7512
  call void @uvedit_uv_select_enable(%struct.BMEditMesh* %224, %struct.Scene* %225, %struct.BMLoop* %226, i8 zeroext 1, i32 %227), !dbg !7513
  store i32 1, i32* %flush, align 4, !dbg !7514
  br label %if.end285, !dbg !7515

if.else272:                                       ; preds = %if.else267
  %228 = load i32, i32* %selectmode, align 4, !dbg !7516
  %cmp273 = icmp eq i32 %228, 2, !dbg !7518
  br i1 %cmp273, label %if.then275, label %if.else277, !dbg !7519

if.then275:                                       ; preds = %if.else272
  %229 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !7520
  %230 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !7522
  %l276 = getelementptr inbounds %struct.NearestHit, %struct.NearestHit* %hit, i32 0, i32 2, !dbg !7523
  %231 = load %struct.BMLoop*, %struct.BMLoop** %l276, align 8, !dbg !7523
  %232 = load i32, i32* %cd_loop_uv_offset, align 4, !dbg !7524
  call void @uvedit_edge_select_enable(%struct.BMEditMesh* %229, %struct.Scene* %230, %struct.BMLoop* %231, i8 zeroext 1, i32 %232), !dbg !7525
  store i32 1, i32* %flush, align 4, !dbg !7526
  br label %if.end284, !dbg !7527

if.else277:                                       ; preds = %if.else272
  %233 = load i32, i32* %selectmode, align 4, !dbg !7528
  %cmp278 = icmp eq i32 %233, 4, !dbg !7530
  br i1 %cmp278, label %if.then280, label %if.end283, !dbg !7531

if.then280:                                       ; preds = %if.else277
  %234 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !7532
  %235 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !7534
  %efa281 = getelementptr inbounds %struct.NearestHit, %struct.NearestHit* %hit, i32 0, i32 0, !dbg !7535
  %236 = load %struct.BMFace*, %struct.BMFace** %efa281, align 8, !dbg !7535
  %237 = load i32, i32* %cd_loop_uv_offset, align 4, !dbg !7536
  %call282 = call zeroext i8 @uvedit_face_select_enable(%struct.Scene* %234, %struct.BMEditMesh* %235, %struct.BMFace* %236, i8 zeroext 1, i32 %237), !dbg !7537
  br label %if.end283, !dbg !7538

if.end283:                                        ; preds = %if.then280, %if.else277
  br label %if.end284

if.end284:                                        ; preds = %if.end283, %if.then275
  br label %if.end285

if.end285:                                        ; preds = %if.end284, %if.then270
  %238 = load i32, i32* %sticky, align 4, !dbg !7539
  %cmp286 = icmp ne i32 %238, 1, !dbg !7541
  br i1 %cmp286, label %if.then288, label %if.end330, !dbg !7542

if.then288:                                       ; preds = %if.end285
  %239 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !7543
  %bm289 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %239, i32 0, i32 0, !dbg !7543
  %240 = load %struct.BMesh*, %struct.BMesh** %bm289, align 8, !dbg !7543
  %call290 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %240, i8 zeroext 3, i8* null), !dbg !7543
  %241 = bitcast i8* %call290 to %struct.BMFace*, !dbg !7543
  store %struct.BMFace* %241, %struct.BMFace** %efa, align 8, !dbg !7543
  br label %for.cond291, !dbg !7543

for.cond291:                                      ; preds = %for.inc327, %if.then288
  %242 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !7546
  %tobool292 = icmp ne %struct.BMFace* %242, null, !dbg !7543
  br i1 %tobool292, label %for.body293, label %for.end329, !dbg !7543

for.body293:                                      ; preds = %for.cond291
  %243 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !7548
  %head294 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %243, i32 0, i32 0, !dbg !7548
  %data295 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head294, i32 0, i32 0, !dbg !7548
  %244 = load i8*, i8** %data295, align 8, !dbg !7548
  %245 = load i32, i32* %cd_poly_tex_offset, align 4, !dbg !7548
  %idx.ext296 = sext i32 %245 to i64, !dbg !7548
  %add.ptr297 = getelementptr inbounds i8, i8* %244, i64 %idx.ext296, !dbg !7548
  %246 = bitcast i8* %add.ptr297 to %struct.MTexPoly*, !dbg !7548
  store %struct.MTexPoly* %246, %struct.MTexPoly** %tf, align 8, !dbg !7550
  %247 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !7551
  %248 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !7553
  %249 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !7554
  %250 = load %struct.MTexPoly*, %struct.MTexPoly** %tf, align 8, !dbg !7555
  %call298 = call zeroext i8 @uvedit_face_visible_test(%struct.Scene* %247, %struct.Image* %248, %struct.BMFace* %249, %struct.MTexPoly* %250), !dbg !7556
  %tobool299 = icmp ne i8 %call298, 0, !dbg !7556
  br i1 %tobool299, label %if.end301, label %if.then300, !dbg !7557

if.then300:                                       ; preds = %for.body293
  br label %for.inc327, !dbg !7558

if.end301:                                        ; preds = %for.body293
  %251 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !7559
  %252 = bitcast %struct.BMFace* %251 to i8*, !dbg !7559
  %call302 = call i8* @BM_iter_new(%struct.BMIter* %liter, %struct.BMesh* null, i8 zeroext 11, i8* %252), !dbg !7559
  %253 = bitcast i8* %call302 to %struct.BMLoop*, !dbg !7559
  store %struct.BMLoop* %253, %struct.BMLoop** %l, align 8, !dbg !7559
  br label %for.cond303, !dbg !7559

for.cond303:                                      ; preds = %for.inc324, %if.end301
  %254 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !7561
  %tobool304 = icmp ne %struct.BMLoop* %254, null, !dbg !7559
  br i1 %tobool304, label %for.body305, label %for.end326, !dbg !7559

for.body305:                                      ; preds = %for.cond303
  %255 = load i32, i32* %sticky, align 4, !dbg !7563
  %cmp306 = icmp eq i32 %255, 1, !dbg !7566
  br i1 %cmp306, label %if.then308, label %if.end309, !dbg !7567

if.then308:                                       ; preds = %for.body305
  br label %for.inc324, !dbg !7568

if.end309:                                        ; preds = %for.body305
  %256 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !7569
  %head310 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %256, i32 0, i32 0, !dbg !7569
  %data311 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head310, i32 0, i32 0, !dbg !7569
  %257 = load i8*, i8** %data311, align 8, !dbg !7569
  %258 = load i32, i32* %cd_loop_uv_offset, align 4, !dbg !7569
  %idx.ext312 = sext i32 %258 to i64, !dbg !7569
  %add.ptr313 = getelementptr inbounds i8, i8* %257, i64 %idx.ext312, !dbg !7569
  %259 = bitcast i8* %add.ptr313 to %struct.MLoopUV*, !dbg !7569
  store %struct.MLoopUV* %259, %struct.MLoopUV** %luv, align 8, !dbg !7570
  %arraydecay314 = getelementptr inbounds [2 x float], [2 x float]* %limit, i64 0, i64 0, !dbg !7571
  %260 = load i32*, i32** %hitv, align 8, !dbg !7573
  %261 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !7574
  %v315 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %261, i32 0, i32 1, !dbg !7574
  %262 = load %struct.BMVert*, %struct.BMVert** %v315, align 8, !dbg !7574
  %head316 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %262, i32 0, i32 0, !dbg !7574
  %call317 = call i32 @_bm_elem_index_get(%struct.BMHeader* %head316), !dbg !7574
  %263 = load float**, float*** %hituv, align 8, !dbg !7575
  %264 = load %struct.MLoopUV*, %struct.MLoopUV** %luv, align 8, !dbg !7576
  %uv318 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %264, i32 0, i32 0, !dbg !7577
  %arraydecay319 = getelementptr inbounds [2 x float], [2 x float]* %uv318, i64 0, i64 0, !dbg !7576
  %265 = load i32, i32* %sticky, align 4, !dbg !7578
  %266 = load i32, i32* %hitlen, align 4, !dbg !7579
  %call320 = call zeroext i8 @uv_sticky_select(float* %arraydecay314, i32* %260, i32 %call317, float** %263, float* %arraydecay319, i32 %265, i32 %266), !dbg !7580
  %tobool321 = icmp ne i8 %call320, 0, !dbg !7580
  br i1 %tobool321, label %if.then322, label %if.end323, !dbg !7581

if.then322:                                       ; preds = %if.end309
  %267 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !7582
  %268 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !7583
  %269 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !7584
  %270 = load i32, i32* %cd_loop_uv_offset, align 4, !dbg !7585
  call void @uvedit_uv_select_enable(%struct.BMEditMesh* %267, %struct.Scene* %268, %struct.BMLoop* %269, i8 zeroext 0, i32 %270), !dbg !7586
  br label %if.end323, !dbg !7586

if.end323:                                        ; preds = %if.then322, %if.end309
  store i32 1, i32* %flush, align 4, !dbg !7587
  br label %for.inc324, !dbg !7588

for.inc324:                                       ; preds = %if.end323, %if.then308
  %call325 = call i8* @BM_iter_step(%struct.BMIter* %liter), !dbg !7561
  %271 = bitcast i8* %call325 to %struct.BMLoop*, !dbg !7561
  store %struct.BMLoop* %271, %struct.BMLoop** %l, align 8, !dbg !7561
  br label %for.cond303, !dbg !7561, !llvm.loop !7589

for.end326:                                       ; preds = %for.cond303
  br label %for.inc327, !dbg !7591

for.inc327:                                       ; preds = %for.end326, %if.then300
  %call328 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !7546
  %272 = bitcast i8* %call328 to %struct.BMFace*, !dbg !7546
  store %struct.BMFace* %272, %struct.BMFace** %efa, align 8, !dbg !7546
  br label %for.cond291, !dbg !7546, !llvm.loop !7592

for.end329:                                       ; preds = %for.cond291
  br label %if.end330, !dbg !7594

if.end330:                                        ; preds = %for.end329, %if.end285
  br label %if.end331

if.end331:                                        ; preds = %if.end330, %if.end266
  br label %if.end332

if.end332:                                        ; preds = %if.end331, %if.then174
  br label %if.end333

if.end333:                                        ; preds = %if.end332, %if.then168
  %273 = load i32, i32* %sync, align 4, !dbg !7595
  %tobool334 = icmp ne i32 %273, 0, !dbg !7595
  br i1 %tobool334, label %if.then335, label %if.end348, !dbg !7597

if.then335:                                       ; preds = %if.end333
  %274 = load i32, i32* %flush, align 4, !dbg !7598
  %cmp336 = icmp ne i32 %274, 0, !dbg !7601
  br i1 %cmp336, label %if.then338, label %if.end347, !dbg !7602

if.then338:                                       ; preds = %if.then335
  %275 = load i8, i8* %loop.addr, align 1, !dbg !7603
  %tobool339 = icmp ne i8 %275, 0, !dbg !7603
  br i1 %tobool339, label %if.then340, label %if.else345, !dbg !7606

if.then340:                                       ; preds = %if.then338
  %276 = load i8, i8* %select, align 1, !dbg !7607
  %tobool341 = icmp ne i8 %276, 0, !dbg !7607
  br i1 %tobool341, label %if.then342, label %if.else343, !dbg !7610

if.then342:                                       ; preds = %if.then340
  %277 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !7611
  call void @EDBM_select_flush(%struct.BMEditMesh* %277), !dbg !7613
  br label %if.end344, !dbg !7614

if.else343:                                       ; preds = %if.then340
  %278 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !7615
  call void @EDBM_deselect_flush(%struct.BMEditMesh* %278), !dbg !7617
  br label %if.end344

if.end344:                                        ; preds = %if.else343, %if.then342
  br label %if.end346, !dbg !7618

if.else345:                                       ; preds = %if.then338
  %279 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !7619
  call void @EDBM_selectmode_flush(%struct.BMEditMesh* %279), !dbg !7621
  br label %if.end346

if.end346:                                        ; preds = %if.else345, %if.end344
  br label %if.end347, !dbg !7622

if.end347:                                        ; preds = %if.end346, %if.then335
  br label %if.end348, !dbg !7623

if.end348:                                        ; preds = %if.end347, %if.end333
  %280 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !7624
  %data349 = getelementptr inbounds %struct.Object, %struct.Object* %280, i32 0, i32 19, !dbg !7625
  %281 = load i8*, i8** %data349, align 8, !dbg !7625
  %282 = bitcast i8* %281 to %struct.ID*, !dbg !7624
  call void @DAG_id_tag_update(%struct.ID* %282, i16 signext 0), !dbg !7626
  %283 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7627
  %284 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !7628
  %data350 = getelementptr inbounds %struct.Object, %struct.Object* %284, i32 0, i32 19, !dbg !7629
  %285 = load i8*, i8** %data350, align 8, !dbg !7629
  call void @WM_event_add_notifier(%struct.bContext* %283, i32 274333696, i8* %285), !dbg !7630
  store i32 12, i32* %retval, align 4, !dbg !7631
  br label %return, !dbg !7631

return:                                           ; preds = %if.end348, %if.else161, %if.then159, %if.then124, %if.then72, %if.then46, %if.then36
  %286 = load i32, i32* %retval, align 4, !dbg !7632
  ret i32 %286, !dbg !7632
}

declare dso_local %struct.SpaceImage* @CTX_wm_space_image(%struct.bContext*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @uvedit_pixel_to_float(%struct.SpaceImage* %sima, float* %dist, float %pixeldist) #0 !dbg !7633 {
entry:
  %sima.addr = alloca %struct.SpaceImage*, align 8
  %dist.addr = alloca float*, align 8
  %pixeldist.addr = alloca float, align 4
  %width = alloca i32, align 4
  %height = alloca i32, align 4
  store %struct.SpaceImage* %sima, %struct.SpaceImage** %sima.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SpaceImage** %sima.addr, metadata !7636, metadata !DIExpression()), !dbg !7637
  store float* %dist, float** %dist.addr, align 8
  call void @llvm.dbg.declare(metadata float** %dist.addr, metadata !7638, metadata !DIExpression()), !dbg !7639
  store float %pixeldist, float* %pixeldist.addr, align 4
  call void @llvm.dbg.declare(metadata float* %pixeldist.addr, metadata !7640, metadata !DIExpression()), !dbg !7641
  call void @llvm.dbg.declare(metadata i32* %width, metadata !7642, metadata !DIExpression()), !dbg !7643
  call void @llvm.dbg.declare(metadata i32* %height, metadata !7644, metadata !DIExpression()), !dbg !7645
  %0 = load %struct.SpaceImage*, %struct.SpaceImage** %sima.addr, align 8, !dbg !7646
  %tobool = icmp ne %struct.SpaceImage* %0, null, !dbg !7646
  br i1 %tobool, label %if.then, label %if.else, !dbg !7648

if.then:                                          ; preds = %entry
  %1 = load %struct.SpaceImage*, %struct.SpaceImage** %sima.addr, align 8, !dbg !7649
  call void @ED_space_image_get_size(%struct.SpaceImage* %1, i32* %width, i32* %height), !dbg !7651
  br label %if.end, !dbg !7652

if.else:                                          ; preds = %entry
  store i32 256, i32* %width, align 4, !dbg !7653
  store i32 256, i32* %height, align 4, !dbg !7655
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %2 = load float, float* %pixeldist.addr, align 4, !dbg !7656
  %3 = load i32, i32* %width, align 4, !dbg !7657
  %conv = sitofp i32 %3 to float, !dbg !7657
  %div = fdiv float %2, %conv, !dbg !7658
  %4 = load float*, float** %dist.addr, align 8, !dbg !7659
  %arrayidx = getelementptr inbounds float, float* %4, i64 0, !dbg !7659
  store float %div, float* %arrayidx, align 4, !dbg !7660
  %5 = load float, float* %pixeldist.addr, align 4, !dbg !7661
  %6 = load i32, i32* %height, align 4, !dbg !7662
  %conv1 = sitofp i32 %6 to float, !dbg !7662
  %div2 = fdiv float %5, %conv1, !dbg !7663
  %7 = load float*, float** %dist.addr, align 8, !dbg !7664
  %arrayidx3 = getelementptr inbounds float, float* %7, i64 1, !dbg !7664
  store float %div2, float* %arrayidx3, align 4, !dbg !7665
  ret void, !dbg !7666
}

declare dso_local void @fill_vn_i(i32*, i32, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @_bm_elem_index_get(%struct.BMHeader* %head) #0 !dbg !7667 {
entry:
  %head.addr = alloca %struct.BMHeader*, align 8
  store %struct.BMHeader* %head, %struct.BMHeader** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMHeader** %head.addr, metadata !7670, metadata !DIExpression()), !dbg !7671
  %0 = load %struct.BMHeader*, %struct.BMHeader** %head.addr, align 8, !dbg !7672
  %index = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %0, i32 0, i32 1, !dbg !7673
  %1 = load i32, i32* %index, align 8, !dbg !7673
  ret i32 %1, !dbg !7674
}

; Function Attrs: noinline nounwind uwtable
define internal void @uv_find_nearest_face(%struct.Scene* %scene, %struct.Image* %ima, %struct.BMEditMesh* %em, float* %co, %struct.NearestHit* %hit) #0 !dbg !7675 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %ima.addr = alloca %struct.Image*, align 8
  %em.addr = alloca %struct.BMEditMesh*, align 8
  %co.addr = alloca float*, align 8
  %hit.addr = alloca %struct.NearestHit*, align 8
  %tf = alloca %struct.MTexPoly*, align 8
  %efa = alloca %struct.BMFace*, align 8
  %iter = alloca %struct.BMIter, align 8
  %mindist = alloca float, align 4
  %dist = alloca float, align 4
  %cent = alloca [2 x float], align 4
  %cd_loop_uv_offset = alloca i32, align 4
  %cd_poly_tex_offset = alloca i32, align 4
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !7676, metadata !DIExpression()), !dbg !7677
  store %struct.Image* %ima, %struct.Image** %ima.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Image** %ima.addr, metadata !7678, metadata !DIExpression()), !dbg !7679
  store %struct.BMEditMesh* %em, %struct.BMEditMesh** %em.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em.addr, metadata !7680, metadata !DIExpression()), !dbg !7681
  store float* %co, float** %co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %co.addr, metadata !7682, metadata !DIExpression()), !dbg !7683
  store %struct.NearestHit* %hit, %struct.NearestHit** %hit.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.NearestHit** %hit.addr, metadata !7684, metadata !DIExpression()), !dbg !7685
  call void @llvm.dbg.declare(metadata %struct.MTexPoly** %tf, metadata !7686, metadata !DIExpression()), !dbg !7687
  call void @llvm.dbg.declare(metadata %struct.BMFace** %efa, metadata !7688, metadata !DIExpression()), !dbg !7689
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iter, metadata !7690, metadata !DIExpression()), !dbg !7691
  call void @llvm.dbg.declare(metadata float* %mindist, metadata !7692, metadata !DIExpression()), !dbg !7693
  call void @llvm.dbg.declare(metadata float* %dist, metadata !7694, metadata !DIExpression()), !dbg !7695
  call void @llvm.dbg.declare(metadata [2 x float]* %cent, metadata !7696, metadata !DIExpression()), !dbg !7697
  call void @llvm.dbg.declare(metadata i32* %cd_loop_uv_offset, metadata !7698, metadata !DIExpression()), !dbg !7699
  %0 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !7700
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %0, i32 0, i32 0, !dbg !7701
  %1 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !7701
  %ldata = getelementptr inbounds %struct.BMesh, %struct.BMesh* %1, i32 0, i32 26, !dbg !7702
  %call = call i32 @CustomData_get_offset(%struct.CustomData* %ldata, i32 16), !dbg !7703
  store i32 %call, i32* %cd_loop_uv_offset, align 4, !dbg !7699
  call void @llvm.dbg.declare(metadata i32* %cd_poly_tex_offset, metadata !7704, metadata !DIExpression()), !dbg !7705
  %2 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !7706
  %bm1 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %2, i32 0, i32 0, !dbg !7707
  %3 = load %struct.BMesh*, %struct.BMesh** %bm1, align 8, !dbg !7707
  %pdata = getelementptr inbounds %struct.BMesh, %struct.BMesh* %3, i32 0, i32 27, !dbg !7708
  %call2 = call i32 @CustomData_get_offset(%struct.CustomData* %pdata, i32 15), !dbg !7709
  store i32 %call2, i32* %cd_poly_tex_offset, align 4, !dbg !7705
  store float 1.000000e+10, float* %mindist, align 4, !dbg !7710
  %4 = load %struct.NearestHit*, %struct.NearestHit** %hit.addr, align 8, !dbg !7711
  %5 = bitcast %struct.NearestHit* %4 to i8*, !dbg !7712
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 48, i1 false), !dbg !7712
  %6 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !7713
  %7 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !7714
  %8 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !7715
  %9 = load float*, float** %co.addr, align 8, !dbg !7716
  %10 = load %struct.NearestHit*, %struct.NearestHit** %hit.addr, align 8, !dbg !7717
  call void @uv_find_nearest_edge(%struct.Scene* %6, %struct.Image* %7, %struct.BMEditMesh* %8, float* %9, %struct.NearestHit* %10), !dbg !7718
  %11 = load %struct.NearestHit*, %struct.NearestHit** %hit.addr, align 8, !dbg !7719
  %l = getelementptr inbounds %struct.NearestHit, %struct.NearestHit* %11, i32 0, i32 2, !dbg !7720
  store %struct.BMLoop* null, %struct.BMLoop** %l, align 8, !dbg !7721
  %12 = load %struct.NearestHit*, %struct.NearestHit** %hit.addr, align 8, !dbg !7722
  %luv_next = getelementptr inbounds %struct.NearestHit, %struct.NearestHit* %12, i32 0, i32 4, !dbg !7723
  store %struct.MLoopUV* null, %struct.MLoopUV** %luv_next, align 8, !dbg !7724
  %13 = load %struct.NearestHit*, %struct.NearestHit** %hit.addr, align 8, !dbg !7725
  %luv = getelementptr inbounds %struct.NearestHit, %struct.NearestHit* %13, i32 0, i32 3, !dbg !7726
  store %struct.MLoopUV* null, %struct.MLoopUV** %luv, align 8, !dbg !7727
  %14 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !7728
  %bm3 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %14, i32 0, i32 0, !dbg !7728
  %15 = load %struct.BMesh*, %struct.BMesh** %bm3, align 8, !dbg !7728
  %call4 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %15, i8 zeroext 3, i8* null), !dbg !7728
  %16 = bitcast i8* %call4 to %struct.BMFace*, !dbg !7728
  store %struct.BMFace* %16, %struct.BMFace** %efa, align 8, !dbg !7728
  br label %for.cond, !dbg !7728

for.cond:                                         ; preds = %for.inc, %entry
  %17 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !7730
  %tobool = icmp ne %struct.BMFace* %17, null, !dbg !7728
  br i1 %tobool, label %for.body, label %for.end, !dbg !7728

for.body:                                         ; preds = %for.cond
  %18 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !7732
  %head = getelementptr inbounds %struct.BMFace, %struct.BMFace* %18, i32 0, i32 0, !dbg !7732
  %data = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head, i32 0, i32 0, !dbg !7732
  %19 = load i8*, i8** %data, align 8, !dbg !7732
  %20 = load i32, i32* %cd_poly_tex_offset, align 4, !dbg !7732
  %idx.ext = sext i32 %20 to i64, !dbg !7732
  %add.ptr = getelementptr inbounds i8, i8* %19, i64 %idx.ext, !dbg !7732
  %21 = bitcast i8* %add.ptr to %struct.MTexPoly*, !dbg !7732
  store %struct.MTexPoly* %21, %struct.MTexPoly** %tf, align 8, !dbg !7734
  %22 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !7735
  %23 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !7737
  %24 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !7738
  %25 = load %struct.MTexPoly*, %struct.MTexPoly** %tf, align 8, !dbg !7739
  %call5 = call zeroext i8 @uvedit_face_visible_test(%struct.Scene* %22, %struct.Image* %23, %struct.BMFace* %24, %struct.MTexPoly* %25), !dbg !7740
  %tobool6 = icmp ne i8 %call5, 0, !dbg !7740
  br i1 %tobool6, label %if.end, label %if.then, !dbg !7741

if.then:                                          ; preds = %for.body
  br label %for.inc, !dbg !7742

if.end:                                           ; preds = %for.body
  %26 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !7743
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %cent, i64 0, i64 0, !dbg !7744
  %27 = load i32, i32* %cd_loop_uv_offset, align 4, !dbg !7745
  call void @uv_poly_center(%struct.BMFace* %26, float* %arraydecay, i32 %27), !dbg !7746
  %28 = load float*, float** %co.addr, align 8, !dbg !7747
  %arraydecay7 = getelementptr inbounds [2 x float], [2 x float]* %cent, i64 0, i64 0, !dbg !7748
  %call8 = call float @len_manhattan_v2v2(float* %28, float* %arraydecay7), !dbg !7749
  store float %call8, float* %dist, align 4, !dbg !7750
  %29 = load float, float* %dist, align 4, !dbg !7751
  %30 = load float, float* %mindist, align 4, !dbg !7753
  %cmp = fcmp olt float %29, %30, !dbg !7754
  br i1 %cmp, label %if.then9, label %if.end12, !dbg !7755

if.then9:                                         ; preds = %if.end
  %31 = load %struct.MTexPoly*, %struct.MTexPoly** %tf, align 8, !dbg !7756
  %32 = load %struct.NearestHit*, %struct.NearestHit** %hit.addr, align 8, !dbg !7758
  %tf10 = getelementptr inbounds %struct.NearestHit, %struct.NearestHit* %32, i32 0, i32 1, !dbg !7759
  store %struct.MTexPoly* %31, %struct.MTexPoly** %tf10, align 8, !dbg !7760
  %33 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !7761
  %34 = load %struct.NearestHit*, %struct.NearestHit** %hit.addr, align 8, !dbg !7762
  %efa11 = getelementptr inbounds %struct.NearestHit, %struct.NearestHit* %34, i32 0, i32 0, !dbg !7763
  store %struct.BMFace* %33, %struct.BMFace** %efa11, align 8, !dbg !7764
  %35 = load float, float* %dist, align 4, !dbg !7765
  store float %35, float* %mindist, align 4, !dbg !7766
  br label %if.end12, !dbg !7767

if.end12:                                         ; preds = %if.then9, %if.end
  br label %for.inc, !dbg !7768

for.inc:                                          ; preds = %if.end12, %if.then
  %call13 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !7730
  %36 = bitcast i8* %call13 to %struct.BMFace*, !dbg !7730
  store %struct.BMFace* %36, %struct.BMFace** %efa, align 8, !dbg !7730
  br label %for.cond, !dbg !7730, !llvm.loop !7769

for.end:                                          ; preds = %for.cond
  ret void, !dbg !7771
}

declare dso_local void @BM_mesh_active_face_set(%struct.BMesh*, %struct.BMFace*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @uv_select_edgeloop(%struct.Scene* %scene, %struct.Image* %ima, %struct.BMEditMesh* %em, %struct.NearestHit* %hit, float* %limit, i8 zeroext %extend) #0 !dbg !7772 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %ima.addr = alloca %struct.Image*, align 8
  %em.addr = alloca %struct.BMEditMesh*, align 8
  %hit.addr = alloca %struct.NearestHit*, align 8
  %limit.addr = alloca float*, align 8
  %extend.addr = alloca i8, align 1
  %efa = alloca %struct.BMFace*, align 8
  %iter = alloca %struct.BMIter, align 8
  %liter = alloca %struct.BMIter, align 8
  %l = alloca %struct.BMLoop*, align 8
  %tf = alloca %struct.MTexPoly*, align 8
  %vmap = alloca %struct.UvVertMap*, align 8
  %iterv_curr = alloca %struct.UvMapVert*, align 8
  %iterv_next = alloca %struct.UvMapVert*, align 8
  %starttotf = alloca i32, align 4
  %looking = alloca i8, align 1
  %select = alloca i8, align 1
  %cd_loop_uv_offset = alloca i32, align 4
  %cd_poly_tex_offset = alloca i32, align 4
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !7775, metadata !DIExpression()), !dbg !7776
  store %struct.Image* %ima, %struct.Image** %ima.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Image** %ima.addr, metadata !7777, metadata !DIExpression()), !dbg !7778
  store %struct.BMEditMesh* %em, %struct.BMEditMesh** %em.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em.addr, metadata !7779, metadata !DIExpression()), !dbg !7780
  store %struct.NearestHit* %hit, %struct.NearestHit** %hit.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.NearestHit** %hit.addr, metadata !7781, metadata !DIExpression()), !dbg !7782
  store float* %limit, float** %limit.addr, align 8
  call void @llvm.dbg.declare(metadata float** %limit.addr, metadata !7783, metadata !DIExpression()), !dbg !7784
  store i8 %extend, i8* %extend.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %extend.addr, metadata !7785, metadata !DIExpression()), !dbg !7786
  call void @llvm.dbg.declare(metadata %struct.BMFace** %efa, metadata !7787, metadata !DIExpression()), !dbg !7788
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iter, metadata !7789, metadata !DIExpression()), !dbg !7790
  call void @llvm.dbg.declare(metadata %struct.BMIter* %liter, metadata !7791, metadata !DIExpression()), !dbg !7792
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l, metadata !7793, metadata !DIExpression()), !dbg !7794
  call void @llvm.dbg.declare(metadata %struct.MTexPoly** %tf, metadata !7795, metadata !DIExpression()), !dbg !7796
  call void @llvm.dbg.declare(metadata %struct.UvVertMap** %vmap, metadata !7797, metadata !DIExpression()), !dbg !7814
  call void @llvm.dbg.declare(metadata %struct.UvMapVert** %iterv_curr, metadata !7815, metadata !DIExpression()), !dbg !7818
  call void @llvm.dbg.declare(metadata %struct.UvMapVert** %iterv_next, metadata !7819, metadata !DIExpression()), !dbg !7820
  call void @llvm.dbg.declare(metadata i32* %starttotf, metadata !7821, metadata !DIExpression()), !dbg !7822
  call void @llvm.dbg.declare(metadata i8* %looking, metadata !7823, metadata !DIExpression()), !dbg !7824
  call void @llvm.dbg.declare(metadata i8* %select, metadata !7825, metadata !DIExpression()), !dbg !7826
  call void @llvm.dbg.declare(metadata i32* %cd_loop_uv_offset, metadata !7827, metadata !DIExpression()), !dbg !7828
  %0 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !7829
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %0, i32 0, i32 0, !dbg !7830
  %1 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !7830
  %ldata = getelementptr inbounds %struct.BMesh, %struct.BMesh* %1, i32 0, i32 26, !dbg !7831
  %call = call i32 @CustomData_get_offset(%struct.CustomData* %ldata, i32 16), !dbg !7832
  store i32 %call, i32* %cd_loop_uv_offset, align 4, !dbg !7828
  call void @llvm.dbg.declare(metadata i32* %cd_poly_tex_offset, metadata !7833, metadata !DIExpression()), !dbg !7834
  %2 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !7835
  %bm1 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %2, i32 0, i32 0, !dbg !7836
  %3 = load %struct.BMesh*, %struct.BMesh** %bm1, align 8, !dbg !7836
  %pdata = getelementptr inbounds %struct.BMesh, %struct.BMesh* %3, i32 0, i32 27, !dbg !7837
  %call2 = call i32 @CustomData_get_offset(%struct.CustomData* %pdata, i32 15), !dbg !7838
  store i32 %call2, i32* %cd_poly_tex_offset, align 4, !dbg !7834
  %4 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !7839
  %bm3 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %4, i32 0, i32 0, !dbg !7840
  %5 = load %struct.BMesh*, %struct.BMesh** %bm3, align 8, !dbg !7840
  call void @BM_mesh_elem_table_ensure(%struct.BMesh* %5, i8 zeroext 8), !dbg !7841
  %6 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !7842
  %bm4 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %6, i32 0, i32 0, !dbg !7843
  %7 = load %struct.BMesh*, %struct.BMesh** %bm4, align 8, !dbg !7843
  %8 = load float*, float** %limit.addr, align 8, !dbg !7844
  %call5 = call %struct.UvVertMap* @BM_uv_vert_map_create(%struct.BMesh* %7, i8 zeroext 0, float* %8), !dbg !7845
  store %struct.UvVertMap* %call5, %struct.UvVertMap** %vmap, align 8, !dbg !7846
  %9 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !7847
  %bm6 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %9, i32 0, i32 0, !dbg !7848
  %10 = load %struct.BMesh*, %struct.BMesh** %bm6, align 8, !dbg !7848
  call void @BM_mesh_elem_index_ensure(%struct.BMesh* %10, i8 zeroext 9), !dbg !7849
  %11 = load i8, i8* %extend.addr, align 1, !dbg !7850
  %tobool = icmp ne i8 %11, 0, !dbg !7850
  br i1 %tobool, label %if.end, label %if.then, !dbg !7852

if.then:                                          ; preds = %entry
  %12 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !7853
  %13 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !7855
  %14 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !7856
  call void @uv_select_all_perform(%struct.Scene* %12, %struct.Image* %13, %struct.BMEditMesh* %14, i32 2), !dbg !7857
  br label %if.end, !dbg !7858

if.end:                                           ; preds = %if.then, %entry
  %15 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !7859
  %bm7 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %15, i32 0, i32 0, !dbg !7860
  %16 = load %struct.BMesh*, %struct.BMesh** %bm7, align 8, !dbg !7860
  call void @BM_mesh_elem_hflag_disable_all(%struct.BMesh* %16, i8 zeroext 8, i8 zeroext 16, i8 zeroext 0), !dbg !7861
  %17 = load %struct.UvVertMap*, %struct.UvVertMap** %vmap, align 8, !dbg !7862
  %18 = load %struct.NearestHit*, %struct.NearestHit** %hit.addr, align 8, !dbg !7863
  %efa8 = getelementptr inbounds %struct.NearestHit, %struct.NearestHit* %18, i32 0, i32 0, !dbg !7864
  %19 = load %struct.BMFace*, %struct.BMFace** %efa8, align 8, !dbg !7864
  %20 = load %struct.NearestHit*, %struct.NearestHit** %hit.addr, align 8, !dbg !7865
  %l9 = getelementptr inbounds %struct.NearestHit, %struct.NearestHit* %20, i32 0, i32 2, !dbg !7866
  %21 = load %struct.BMLoop*, %struct.BMLoop** %l9, align 8, !dbg !7866
  %call10 = call %struct.UvMapVert* @uv_select_edgeloop_vertex_map_get(%struct.UvVertMap* %17, %struct.BMFace* %19, %struct.BMLoop* %21), !dbg !7867
  store %struct.UvMapVert* %call10, %struct.UvMapVert** %iterv_curr, align 8, !dbg !7868
  %22 = load %struct.UvVertMap*, %struct.UvVertMap** %vmap, align 8, !dbg !7869
  %23 = load %struct.NearestHit*, %struct.NearestHit** %hit.addr, align 8, !dbg !7870
  %efa11 = getelementptr inbounds %struct.NearestHit, %struct.NearestHit* %23, i32 0, i32 0, !dbg !7871
  %24 = load %struct.BMFace*, %struct.BMFace** %efa11, align 8, !dbg !7871
  %25 = load %struct.NearestHit*, %struct.NearestHit** %hit.addr, align 8, !dbg !7872
  %l12 = getelementptr inbounds %struct.NearestHit, %struct.NearestHit* %25, i32 0, i32 2, !dbg !7873
  %26 = load %struct.BMLoop*, %struct.BMLoop** %l12, align 8, !dbg !7873
  %next = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %26, i32 0, i32 6, !dbg !7874
  %27 = load %struct.BMLoop*, %struct.BMLoop** %next, align 8, !dbg !7874
  %call13 = call %struct.UvMapVert* @uv_select_edgeloop_vertex_map_get(%struct.UvVertMap* %22, %struct.BMFace* %24, %struct.BMLoop* %27), !dbg !7875
  store %struct.UvMapVert* %call13, %struct.UvMapVert** %iterv_next, align 8, !dbg !7876
  %28 = load %struct.UvMapVert*, %struct.UvMapVert** %iterv_curr, align 8, !dbg !7877
  call void @uv_select_edgeloop_vertex_loop_flag(%struct.UvMapVert* %28), !dbg !7878
  %29 = load %struct.UvMapVert*, %struct.UvMapVert** %iterv_next, align 8, !dbg !7879
  call void @uv_select_edgeloop_vertex_loop_flag(%struct.UvMapVert* %29), !dbg !7880
  store i32 0, i32* %starttotf, align 4, !dbg !7881
  %30 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !7882
  %31 = load %struct.UvMapVert*, %struct.UvMapVert** %iterv_curr, align 8, !dbg !7883
  %32 = load %struct.UvMapVert*, %struct.UvMapVert** %iterv_next, align 8, !dbg !7884
  %call14 = call zeroext i8 @uv_select_edgeloop_edge_tag_faces(%struct.BMEditMesh* %30, %struct.UvMapVert* %31, %struct.UvMapVert* %32, i32* %starttotf), !dbg !7885
  %33 = load %struct.UvMapVert*, %struct.UvMapVert** %iterv_curr, align 8, !dbg !7886
  %flag = getelementptr inbounds %struct.UvMapVert, %struct.UvMapVert* %33, i32 0, i32 4, !dbg !7887
  %34 = load i8, i8* %flag, align 2, !dbg !7887
  %conv = zext i8 %34 to i32, !dbg !7886
  %cmp = icmp eq i32 %conv, 0, !dbg !7888
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !7889

land.rhs:                                         ; preds = %if.end
  %35 = load %struct.UvMapVert*, %struct.UvMapVert** %iterv_next, align 8, !dbg !7890
  %flag16 = getelementptr inbounds %struct.UvMapVert, %struct.UvMapVert* %35, i32 0, i32 4, !dbg !7891
  %36 = load i8, i8* %flag16, align 2, !dbg !7891
  %conv17 = zext i8 %36 to i32, !dbg !7890
  %cmp18 = icmp eq i32 %conv17, 0, !dbg !7892
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end
  %37 = phi i1 [ false, %if.end ], [ %cmp18, %land.rhs ], !dbg !7893
  %lnot = xor i1 %37, true, !dbg !7894
  %lnot.ext = zext i1 %lnot to i32, !dbg !7894
  %conv20 = trunc i32 %lnot.ext to i8, !dbg !7894
  store i8 %conv20, i8* %looking, align 1, !dbg !7895
  br label %while.cond, !dbg !7896

while.cond:                                       ; preds = %for.end62, %land.end
  %38 = load i8, i8* %looking, align 1, !dbg !7897
  %tobool21 = icmp ne i8 %38, 0, !dbg !7896
  br i1 %tobool21, label %while.body, label %while.end, !dbg !7896

while.body:                                       ; preds = %while.cond
  store i8 0, i8* %looking, align 1, !dbg !7898
  %39 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !7900
  %bm22 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %39, i32 0, i32 0, !dbg !7900
  %40 = load %struct.BMesh*, %struct.BMesh** %bm22, align 8, !dbg !7900
  %call23 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %40, i8 zeroext 3, i8* null), !dbg !7900
  %41 = bitcast i8* %call23 to %struct.BMFace*, !dbg !7900
  store %struct.BMFace* %41, %struct.BMFace** %efa, align 8, !dbg !7900
  br label %for.cond, !dbg !7900

for.cond:                                         ; preds = %for.inc60, %while.body
  %42 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !7902
  %tobool24 = icmp ne %struct.BMFace* %42, null, !dbg !7900
  br i1 %tobool24, label %for.body, label %for.end62, !dbg !7900

for.body:                                         ; preds = %for.cond
  %43 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !7904
  %head = getelementptr inbounds %struct.BMFace, %struct.BMFace* %43, i32 0, i32 0, !dbg !7904
  %data = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head, i32 0, i32 0, !dbg !7904
  %44 = load i8*, i8** %data, align 8, !dbg !7904
  %45 = load i32, i32* %cd_poly_tex_offset, align 4, !dbg !7904
  %idx.ext = sext i32 %45 to i64, !dbg !7904
  %add.ptr = getelementptr inbounds i8, i8* %44, i64 %idx.ext, !dbg !7904
  %46 = bitcast i8* %add.ptr to %struct.MTexPoly*, !dbg !7904
  store %struct.MTexPoly* %46, %struct.MTexPoly** %tf, align 8, !dbg !7906
  %47 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !7907
  %head25 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %47, i32 0, i32 0, !dbg !7907
  %call26 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head25, i8 zeroext 16), !dbg !7907
  %tobool27 = icmp ne i8 %call26, 0, !dbg !7907
  br i1 %tobool27, label %if.end59, label %land.lhs.true, !dbg !7909

land.lhs.true:                                    ; preds = %for.body
  %48 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !7910
  %49 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !7911
  %50 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !7912
  %51 = load %struct.MTexPoly*, %struct.MTexPoly** %tf, align 8, !dbg !7913
  %call28 = call zeroext i8 @uvedit_face_visible_test(%struct.Scene* %48, %struct.Image* %49, %struct.BMFace* %50, %struct.MTexPoly* %51), !dbg !7914
  %conv29 = zext i8 %call28 to i32, !dbg !7914
  %tobool30 = icmp ne i32 %conv29, 0, !dbg !7914
  br i1 %tobool30, label %if.then31, label %if.end59, !dbg !7915

if.then31:                                        ; preds = %land.lhs.true
  %52 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !7916
  %53 = bitcast %struct.BMFace* %52 to i8*, !dbg !7916
  %call32 = call i8* @BM_iter_new(%struct.BMIter* %liter, %struct.BMesh* null, i8 zeroext 11, i8* %53), !dbg !7916
  %54 = bitcast i8* %call32 to %struct.BMLoop*, !dbg !7916
  store %struct.BMLoop* %54, %struct.BMLoop** %l, align 8, !dbg !7916
  br label %for.cond33, !dbg !7916

for.cond33:                                       ; preds = %for.inc, %if.then31
  %55 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !7919
  %tobool34 = icmp ne %struct.BMLoop* %55, null, !dbg !7916
  br i1 %tobool34, label %for.body35, label %for.end, !dbg !7916

for.body35:                                       ; preds = %for.cond33
  %56 = load %struct.UvVertMap*, %struct.UvVertMap** %vmap, align 8, !dbg !7921
  %57 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !7924
  %58 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !7925
  %call36 = call %struct.UvMapVert* @uv_select_edgeloop_vertex_map_get(%struct.UvVertMap* %56, %struct.BMFace* %57, %struct.BMLoop* %58), !dbg !7926
  store %struct.UvMapVert* %call36, %struct.UvMapVert** %iterv_curr, align 8, !dbg !7927
  %tobool37 = icmp ne %struct.UvMapVert* %call36, null, !dbg !7927
  br i1 %tobool37, label %if.end39, label %if.then38, !dbg !7928

if.then38:                                        ; preds = %for.body35
  br label %for.inc, !dbg !7929

if.end39:                                         ; preds = %for.body35
  %59 = load %struct.UvVertMap*, %struct.UvVertMap** %vmap, align 8, !dbg !7930
  %60 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !7932
  %61 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !7933
  %next40 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %61, i32 0, i32 6, !dbg !7934
  %62 = load %struct.BMLoop*, %struct.BMLoop** %next40, align 8, !dbg !7934
  %call41 = call %struct.UvMapVert* @uv_select_edgeloop_vertex_map_get(%struct.UvVertMap* %59, %struct.BMFace* %60, %struct.BMLoop* %62), !dbg !7935
  store %struct.UvMapVert* %call41, %struct.UvMapVert** %iterv_next, align 8, !dbg !7936
  %tobool42 = icmp ne %struct.UvMapVert* %call41, null, !dbg !7936
  br i1 %tobool42, label %if.end44, label %if.then43, !dbg !7937

if.then43:                                        ; preds = %if.end39
  br label %for.inc, !dbg !7938

if.end44:                                         ; preds = %if.end39
  %63 = load %struct.UvMapVert*, %struct.UvMapVert** %iterv_curr, align 8, !dbg !7939
  %flag45 = getelementptr inbounds %struct.UvMapVert, %struct.UvMapVert* %63, i32 0, i32 4, !dbg !7941
  %64 = load i8, i8* %flag45, align 2, !dbg !7941
  %conv46 = zext i8 %64 to i32, !dbg !7939
  %tobool47 = icmp ne i32 %conv46, 0, !dbg !7939
  br i1 %tobool47, label %if.then51, label %lor.lhs.false, !dbg !7942

lor.lhs.false:                                    ; preds = %if.end44
  %65 = load %struct.UvMapVert*, %struct.UvMapVert** %iterv_next, align 8, !dbg !7943
  %flag48 = getelementptr inbounds %struct.UvMapVert, %struct.UvMapVert* %65, i32 0, i32 4, !dbg !7944
  %66 = load i8, i8* %flag48, align 2, !dbg !7944
  %conv49 = zext i8 %66 to i32, !dbg !7943
  %tobool50 = icmp ne i32 %conv49, 0, !dbg !7943
  br i1 %tobool50, label %if.then51, label %if.end57, !dbg !7945

if.then51:                                        ; preds = %lor.lhs.false, %if.end44
  %67 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !7946
  %68 = load %struct.UvMapVert*, %struct.UvMapVert** %iterv_curr, align 8, !dbg !7949
  %69 = load %struct.UvMapVert*, %struct.UvMapVert** %iterv_next, align 8, !dbg !7950
  %call52 = call zeroext i8 @uv_select_edgeloop_edge_tag_faces(%struct.BMEditMesh* %67, %struct.UvMapVert* %68, %struct.UvMapVert* %69, i32* %starttotf), !dbg !7951
  %tobool53 = icmp ne i8 %call52, 0, !dbg !7951
  br i1 %tobool53, label %if.then54, label %if.end56, !dbg !7952

if.then54:                                        ; preds = %if.then51
  store i8 1, i8* %looking, align 1, !dbg !7953
  %70 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !7955
  %head55 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %70, i32 0, i32 0, !dbg !7955
  call void @_bm_elem_flag_enable(%struct.BMHeader* %head55, i8 zeroext 16), !dbg !7955
  %71 = load %struct.UvMapVert*, %struct.UvMapVert** %iterv_curr, align 8, !dbg !7956
  call void @uv_select_edgeloop_vertex_loop_flag(%struct.UvMapVert* %71), !dbg !7957
  %72 = load %struct.UvMapVert*, %struct.UvMapVert** %iterv_next, align 8, !dbg !7958
  call void @uv_select_edgeloop_vertex_loop_flag(%struct.UvMapVert* %72), !dbg !7959
  br label %for.end, !dbg !7960

if.end56:                                         ; preds = %if.then51
  br label %if.end57, !dbg !7961

if.end57:                                         ; preds = %if.end56, %lor.lhs.false
  br label %for.inc, !dbg !7962

for.inc:                                          ; preds = %if.end57, %if.then43, %if.then38
  %call58 = call i8* @BM_iter_step(%struct.BMIter* %liter), !dbg !7919
  %73 = bitcast i8* %call58 to %struct.BMLoop*, !dbg !7919
  store %struct.BMLoop* %73, %struct.BMLoop** %l, align 8, !dbg !7919
  br label %for.cond33, !dbg !7919, !llvm.loop !7963

for.end:                                          ; preds = %if.then54, %for.cond33
  br label %if.end59, !dbg !7965

if.end59:                                         ; preds = %for.end, %land.lhs.true, %for.body
  br label %for.inc60, !dbg !7966

for.inc60:                                        ; preds = %if.end59
  %call61 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !7902
  %74 = bitcast i8* %call61 to %struct.BMFace*, !dbg !7902
  store %struct.BMFace* %74, %struct.BMFace** %efa, align 8, !dbg !7902
  br label %for.cond, !dbg !7902, !llvm.loop !7967

for.end62:                                        ; preds = %for.cond
  br label %while.cond, !dbg !7896, !llvm.loop !7969

while.end:                                        ; preds = %while.cond
  %75 = load %struct.UvVertMap*, %struct.UvVertMap** %vmap, align 8, !dbg !7971
  %76 = load %struct.NearestHit*, %struct.NearestHit** %hit.addr, align 8, !dbg !7972
  %efa63 = getelementptr inbounds %struct.NearestHit, %struct.NearestHit* %76, i32 0, i32 0, !dbg !7973
  %77 = load %struct.BMFace*, %struct.BMFace** %efa63, align 8, !dbg !7973
  %78 = load %struct.NearestHit*, %struct.NearestHit** %hit.addr, align 8, !dbg !7974
  %l64 = getelementptr inbounds %struct.NearestHit, %struct.NearestHit* %78, i32 0, i32 2, !dbg !7975
  %79 = load %struct.BMLoop*, %struct.BMLoop** %l64, align 8, !dbg !7975
  %call65 = call %struct.UvMapVert* @uv_select_edgeloop_vertex_map_get(%struct.UvVertMap* %75, %struct.BMFace* %77, %struct.BMLoop* %79), !dbg !7976
  store %struct.UvMapVert* %call65, %struct.UvMapVert** %iterv_curr, align 8, !dbg !7977
  %80 = load %struct.UvVertMap*, %struct.UvVertMap** %vmap, align 8, !dbg !7978
  %81 = load %struct.NearestHit*, %struct.NearestHit** %hit.addr, align 8, !dbg !7979
  %efa66 = getelementptr inbounds %struct.NearestHit, %struct.NearestHit* %81, i32 0, i32 0, !dbg !7980
  %82 = load %struct.BMFace*, %struct.BMFace** %efa66, align 8, !dbg !7980
  %83 = load %struct.NearestHit*, %struct.NearestHit** %hit.addr, align 8, !dbg !7981
  %l67 = getelementptr inbounds %struct.NearestHit, %struct.NearestHit* %83, i32 0, i32 2, !dbg !7982
  %84 = load %struct.BMLoop*, %struct.BMLoop** %l67, align 8, !dbg !7982
  %next68 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %84, i32 0, i32 6, !dbg !7983
  %85 = load %struct.BMLoop*, %struct.BMLoop** %next68, align 8, !dbg !7983
  %call69 = call %struct.UvMapVert* @uv_select_edgeloop_vertex_map_get(%struct.UvVertMap* %80, %struct.BMFace* %82, %struct.BMLoop* %85), !dbg !7984
  store %struct.UvMapVert* %call69, %struct.UvMapVert** %iterv_next, align 8, !dbg !7985
  %86 = load %struct.UvMapVert*, %struct.UvMapVert** %iterv_curr, align 8, !dbg !7986
  %flag70 = getelementptr inbounds %struct.UvMapVert, %struct.UvMapVert* %86, i32 0, i32 4, !dbg !7987
  store i8 1, i8* %flag70, align 2, !dbg !7988
  %87 = load %struct.UvMapVert*, %struct.UvMapVert** %iterv_next, align 8, !dbg !7989
  %flag71 = getelementptr inbounds %struct.UvMapVert, %struct.UvMapVert* %87, i32 0, i32 4, !dbg !7990
  store i8 1, i8* %flag71, align 2, !dbg !7991
  %88 = load i8, i8* %extend.addr, align 1, !dbg !7992
  %tobool72 = icmp ne i8 %88, 0, !dbg !7992
  br i1 %tobool72, label %if.then73, label %if.else, !dbg !7994

if.then73:                                        ; preds = %while.end
  %89 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !7995
  %90 = load %struct.NearestHit*, %struct.NearestHit** %hit.addr, align 8, !dbg !7997
  %l74 = getelementptr inbounds %struct.NearestHit, %struct.NearestHit* %90, i32 0, i32 2, !dbg !7998
  %91 = load %struct.BMLoop*, %struct.BMLoop** %l74, align 8, !dbg !7998
  %92 = load i32, i32* %cd_loop_uv_offset, align 4, !dbg !7999
  %call75 = call zeroext i8 @uvedit_uv_select_test(%struct.Scene* %89, %struct.BMLoop* %91, i32 %92), !dbg !8000
  %tobool76 = icmp ne i8 %call75, 0, !dbg !8001
  %lnot77 = xor i1 %tobool76, true, !dbg !8001
  %lnot.ext78 = zext i1 %lnot77 to i32, !dbg !8001
  %conv79 = trunc i32 %lnot.ext78 to i8, !dbg !8001
  store i8 %conv79, i8* %select, align 1, !dbg !8002
  br label %if.end80, !dbg !8003

if.else:                                          ; preds = %while.end
  store i8 1, i8* %select, align 1, !dbg !8004
  br label %if.end80

if.end80:                                         ; preds = %if.else, %if.then73
  %93 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !8006
  %bm81 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %93, i32 0, i32 0, !dbg !8006
  %94 = load %struct.BMesh*, %struct.BMesh** %bm81, align 8, !dbg !8006
  %call82 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %94, i8 zeroext 3, i8* null), !dbg !8006
  %95 = bitcast i8* %call82 to %struct.BMFace*, !dbg !8006
  store %struct.BMFace* %95, %struct.BMFace** %efa, align 8, !dbg !8006
  br label %for.cond83, !dbg !8006

for.cond83:                                       ; preds = %for.inc98, %if.end80
  %96 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !8008
  %tobool84 = icmp ne %struct.BMFace* %96, null, !dbg !8006
  br i1 %tobool84, label %for.body85, label %for.end100, !dbg !8006

for.body85:                                       ; preds = %for.cond83
  %97 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !8010
  %98 = bitcast %struct.BMFace* %97 to i8*, !dbg !8010
  %call86 = call i8* @BM_iter_new(%struct.BMIter* %liter, %struct.BMesh* null, i8 zeroext 11, i8* %98), !dbg !8010
  %99 = bitcast i8* %call86 to %struct.BMLoop*, !dbg !8010
  store %struct.BMLoop* %99, %struct.BMLoop** %l, align 8, !dbg !8010
  br label %for.cond87, !dbg !8010

for.cond87:                                       ; preds = %for.inc95, %for.body85
  %100 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !8013
  %tobool88 = icmp ne %struct.BMLoop* %100, null, !dbg !8010
  br i1 %tobool88, label %for.body89, label %for.end97, !dbg !8010

for.body89:                                       ; preds = %for.cond87
  %101 = load %struct.UvVertMap*, %struct.UvVertMap** %vmap, align 8, !dbg !8015
  %102 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !8017
  %103 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !8018
  %call90 = call %struct.UvMapVert* @uv_select_edgeloop_vertex_map_get(%struct.UvVertMap* %101, %struct.BMFace* %102, %struct.BMLoop* %103), !dbg !8019
  store %struct.UvMapVert* %call90, %struct.UvMapVert** %iterv_curr, align 8, !dbg !8020
  %104 = load %struct.UvMapVert*, %struct.UvMapVert** %iterv_curr, align 8, !dbg !8021
  %flag91 = getelementptr inbounds %struct.UvMapVert, %struct.UvMapVert* %104, i32 0, i32 4, !dbg !8023
  %105 = load i8, i8* %flag91, align 2, !dbg !8023
  %tobool92 = icmp ne i8 %105, 0, !dbg !8021
  br i1 %tobool92, label %if.then93, label %if.end94, !dbg !8024

if.then93:                                        ; preds = %for.body89
  %106 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !8025
  %107 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !8027
  %108 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !8028
  %109 = load i8, i8* %select, align 1, !dbg !8029
  %110 = load i32, i32* %cd_loop_uv_offset, align 4, !dbg !8030
  call void @uvedit_uv_select_set(%struct.BMEditMesh* %106, %struct.Scene* %107, %struct.BMLoop* %108, i8 zeroext %109, i8 zeroext 0, i32 %110), !dbg !8031
  br label %if.end94, !dbg !8032

if.end94:                                         ; preds = %if.then93, %for.body89
  br label %for.inc95, !dbg !8033

for.inc95:                                        ; preds = %if.end94
  %call96 = call i8* @BM_iter_step(%struct.BMIter* %liter), !dbg !8013
  %111 = bitcast i8* %call96 to %struct.BMLoop*, !dbg !8013
  store %struct.BMLoop* %111, %struct.BMLoop** %l, align 8, !dbg !8013
  br label %for.cond87, !dbg !8013, !llvm.loop !8034

for.end97:                                        ; preds = %for.cond87
  br label %for.inc98, !dbg !8036

for.inc98:                                        ; preds = %for.end97
  %call99 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !8008
  %112 = bitcast i8* %call99 to %struct.BMFace*, !dbg !8008
  store %struct.BMFace* %112, %struct.BMFace** %efa, align 8, !dbg !8008
  br label %for.cond83, !dbg !8008, !llvm.loop !8037

for.end100:                                       ; preds = %for.cond83
  %113 = load %struct.UvVertMap*, %struct.UvVertMap** %vmap, align 8, !dbg !8039
  call void @BM_uv_vert_map_free(%struct.UvVertMap* %113), !dbg !8040
  %114 = load i8, i8* %select, align 1, !dbg !8041
  %conv101 = zext i8 %114 to i32, !dbg !8042
  %tobool102 = icmp ne i32 %conv101, 0, !dbg !8042
  %115 = zext i1 %tobool102 to i64, !dbg !8042
  %cond = select i1 %tobool102, i32 1, i32 -1, !dbg !8042
  ret i32 %cond, !dbg !8043
}

; Function Attrs: noinline nounwind uwtable
define internal void @uv_select_linked(%struct.Scene* %scene, %struct.Image* %ima, %struct.BMEditMesh* %em, float* %limit, %struct.NearestHit* %hit, i8 zeroext %extend) #0 !dbg !8044 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %ima.addr = alloca %struct.Image*, align 8
  %em.addr = alloca %struct.BMEditMesh*, align 8
  %limit.addr = alloca float*, align 8
  %hit.addr = alloca %struct.NearestHit*, align 8
  %extend.addr = alloca i8, align 1
  %efa = alloca %struct.BMFace*, align 8
  %l = alloca %struct.BMLoop*, align 8
  %iter = alloca %struct.BMIter, align 8
  %liter = alloca %struct.BMIter, align 8
  %tf = alloca %struct.MTexPoly*, align 8
  %luv = alloca %struct.MLoopUV*, align 8
  %vmap = alloca %struct.UvVertMap*, align 8
  %vlist = alloca %struct.UvMapVert*, align 8
  %iterv = alloca %struct.UvMapVert*, align 8
  %startv = alloca %struct.UvMapVert*, align 8
  %i = alloca i32, align 4
  %stacksize = alloca i32, align 4
  %stack = alloca i32*, align 8
  %a = alloca i32, align 4
  %flag = alloca i8*, align 8
  %cd_loop_uv_offset = alloca i32, align 4
  %cd_poly_tex_offset = alloca i32, align 4
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !8047, metadata !DIExpression()), !dbg !8048
  store %struct.Image* %ima, %struct.Image** %ima.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Image** %ima.addr, metadata !8049, metadata !DIExpression()), !dbg !8050
  store %struct.BMEditMesh* %em, %struct.BMEditMesh** %em.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em.addr, metadata !8051, metadata !DIExpression()), !dbg !8052
  store float* %limit, float** %limit.addr, align 8
  call void @llvm.dbg.declare(metadata float** %limit.addr, metadata !8053, metadata !DIExpression()), !dbg !8054
  store %struct.NearestHit* %hit, %struct.NearestHit** %hit.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.NearestHit** %hit.addr, metadata !8055, metadata !DIExpression()), !dbg !8056
  store i8 %extend, i8* %extend.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %extend.addr, metadata !8057, metadata !DIExpression()), !dbg !8058
  call void @llvm.dbg.declare(metadata %struct.BMFace** %efa, metadata !8059, metadata !DIExpression()), !dbg !8060
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l, metadata !8061, metadata !DIExpression()), !dbg !8062
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iter, metadata !8063, metadata !DIExpression()), !dbg !8064
  call void @llvm.dbg.declare(metadata %struct.BMIter* %liter, metadata !8065, metadata !DIExpression()), !dbg !8066
  call void @llvm.dbg.declare(metadata %struct.MTexPoly** %tf, metadata !8067, metadata !DIExpression()), !dbg !8068
  call void @llvm.dbg.declare(metadata %struct.MLoopUV** %luv, metadata !8069, metadata !DIExpression()), !dbg !8070
  call void @llvm.dbg.declare(metadata %struct.UvVertMap** %vmap, metadata !8071, metadata !DIExpression()), !dbg !8072
  call void @llvm.dbg.declare(metadata %struct.UvMapVert** %vlist, metadata !8073, metadata !DIExpression()), !dbg !8074
  call void @llvm.dbg.declare(metadata %struct.UvMapVert** %iterv, metadata !8075, metadata !DIExpression()), !dbg !8076
  call void @llvm.dbg.declare(metadata %struct.UvMapVert** %startv, metadata !8077, metadata !DIExpression()), !dbg !8078
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8079, metadata !DIExpression()), !dbg !8080
  call void @llvm.dbg.declare(metadata i32* %stacksize, metadata !8081, metadata !DIExpression()), !dbg !8082
  store i32 0, i32* %stacksize, align 4, !dbg !8082
  call void @llvm.dbg.declare(metadata i32** %stack, metadata !8083, metadata !DIExpression()), !dbg !8084
  call void @llvm.dbg.declare(metadata i32* %a, metadata !8085, metadata !DIExpression()), !dbg !8086
  call void @llvm.dbg.declare(metadata i8** %flag, metadata !8087, metadata !DIExpression()), !dbg !8088
  call void @llvm.dbg.declare(metadata i32* %cd_loop_uv_offset, metadata !8089, metadata !DIExpression()), !dbg !8090
  %0 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !8091
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %0, i32 0, i32 0, !dbg !8092
  %1 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !8092
  %ldata = getelementptr inbounds %struct.BMesh, %struct.BMesh* %1, i32 0, i32 26, !dbg !8093
  %call = call i32 @CustomData_get_offset(%struct.CustomData* %ldata, i32 16), !dbg !8094
  store i32 %call, i32* %cd_loop_uv_offset, align 4, !dbg !8090
  call void @llvm.dbg.declare(metadata i32* %cd_poly_tex_offset, metadata !8095, metadata !DIExpression()), !dbg !8096
  %2 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !8097
  %bm1 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %2, i32 0, i32 0, !dbg !8098
  %3 = load %struct.BMesh*, %struct.BMesh** %bm1, align 8, !dbg !8098
  %pdata = getelementptr inbounds %struct.BMesh, %struct.BMesh* %3, i32 0, i32 27, !dbg !8099
  %call2 = call i32 @CustomData_get_offset(%struct.CustomData* %pdata, i32 15), !dbg !8100
  store i32 %call2, i32* %cd_poly_tex_offset, align 4, !dbg !8096
  %4 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !8101
  %bm3 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %4, i32 0, i32 0, !dbg !8102
  %5 = load %struct.BMesh*, %struct.BMesh** %bm3, align 8, !dbg !8102
  call void @BM_mesh_elem_table_ensure(%struct.BMesh* %5, i8 zeroext 8), !dbg !8103
  %6 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !8104
  %bm4 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %6, i32 0, i32 0, !dbg !8105
  %7 = load %struct.BMesh*, %struct.BMesh** %bm4, align 8, !dbg !8105
  %8 = load float*, float** %limit.addr, align 8, !dbg !8106
  %call5 = call %struct.UvVertMap* @BM_uv_vert_map_create(%struct.BMesh* %7, i8 zeroext 1, float* %8), !dbg !8107
  store %struct.UvVertMap* %call5, %struct.UvVertMap** %vmap, align 8, !dbg !8108
  %9 = load %struct.UvVertMap*, %struct.UvVertMap** %vmap, align 8, !dbg !8109
  %cmp = icmp eq %struct.UvVertMap* %9, null, !dbg !8111
  br i1 %cmp, label %if.then, label %if.end, !dbg !8112

if.then:                                          ; preds = %entry
  br label %return, !dbg !8113

if.end:                                           ; preds = %entry
  %10 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !8114
  %11 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !8115
  %bm6 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %11, i32 0, i32 0, !dbg !8116
  %12 = load %struct.BMesh*, %struct.BMesh** %bm6, align 8, !dbg !8116
  %totface = getelementptr inbounds %struct.BMesh, %struct.BMesh* %12, i32 0, i32 3, !dbg !8117
  %13 = load i32, i32* %totface, align 4, !dbg !8117
  %add = add nsw i32 %13, 1, !dbg !8118
  %conv = sext i32 %add to i64, !dbg !8119
  %mul = mul i64 4, %conv, !dbg !8120
  %call7 = call i8* %10(i64 %mul, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.45, i64 0, i64 0)), !dbg !8114
  %14 = bitcast i8* %call7 to i32*, !dbg !8114
  store i32* %14, i32** %stack, align 8, !dbg !8121
  %15 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !8122
  %16 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !8123
  %bm8 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %16, i32 0, i32 0, !dbg !8124
  %17 = load %struct.BMesh*, %struct.BMesh** %bm8, align 8, !dbg !8124
  %totface9 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %17, i32 0, i32 3, !dbg !8125
  %18 = load i32, i32* %totface9, align 4, !dbg !8125
  %conv10 = sext i32 %18 to i64, !dbg !8123
  %mul11 = mul i64 1, %conv10, !dbg !8126
  %call12 = call i8* %15(i64 %mul11, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.46, i64 0, i64 0)), !dbg !8122
  store i8* %call12, i8** %flag, align 8, !dbg !8127
  %19 = load %struct.NearestHit*, %struct.NearestHit** %hit.addr, align 8, !dbg !8128
  %tobool = icmp ne %struct.NearestHit* %19, null, !dbg !8128
  br i1 %tobool, label %if.else, label %if.then13, !dbg !8130

if.then13:                                        ; preds = %if.end
  %20 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !8131
  %bm14 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %20, i32 0, i32 0, !dbg !8131
  %21 = load %struct.BMesh*, %struct.BMesh** %bm14, align 8, !dbg !8131
  %call15 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %21, i8 zeroext 3, i8* null), !dbg !8131
  %22 = bitcast i8* %call15 to %struct.BMFace*, !dbg !8131
  store %struct.BMFace* %22, %struct.BMFace** %efa, align 8, !dbg !8131
  store i32 0, i32* %a, align 4, !dbg !8131
  br label %for.cond, !dbg !8131

for.cond:                                         ; preds = %for.inc36, %if.then13
  %23 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !8134
  %tobool16 = icmp ne %struct.BMFace* %23, null, !dbg !8131
  br i1 %tobool16, label %for.body, label %for.end39, !dbg !8131

for.body:                                         ; preds = %for.cond
  %24 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !8136
  %head = getelementptr inbounds %struct.BMFace, %struct.BMFace* %24, i32 0, i32 0, !dbg !8136
  %data = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head, i32 0, i32 0, !dbg !8136
  %25 = load i8*, i8** %data, align 8, !dbg !8136
  %26 = load i32, i32* %cd_poly_tex_offset, align 4, !dbg !8136
  %idx.ext = sext i32 %26 to i64, !dbg !8136
  %add.ptr = getelementptr inbounds i8, i8* %25, i64 %idx.ext, !dbg !8136
  %27 = bitcast i8* %add.ptr to %struct.MTexPoly*, !dbg !8136
  store %struct.MTexPoly* %27, %struct.MTexPoly** %tf, align 8, !dbg !8138
  %28 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !8139
  %29 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !8141
  %30 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !8142
  %31 = load %struct.MTexPoly*, %struct.MTexPoly** %tf, align 8, !dbg !8143
  %call17 = call zeroext i8 @uvedit_face_visible_test(%struct.Scene* %28, %struct.Image* %29, %struct.BMFace* %30, %struct.MTexPoly* %31), !dbg !8144
  %tobool18 = icmp ne i8 %call17, 0, !dbg !8144
  br i1 %tobool18, label %if.then19, label %if.end35, !dbg !8145

if.then19:                                        ; preds = %for.body
  %32 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !8146
  %33 = bitcast %struct.BMFace* %32 to i8*, !dbg !8146
  %call20 = call i8* @BM_iter_new(%struct.BMIter* %liter, %struct.BMesh* null, i8 zeroext 11, i8* %33), !dbg !8146
  %34 = bitcast i8* %call20 to %struct.BMLoop*, !dbg !8146
  store %struct.BMLoop* %34, %struct.BMLoop** %l, align 8, !dbg !8146
  br label %for.cond21, !dbg !8146

for.cond21:                                       ; preds = %for.inc, %if.then19
  %35 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !8149
  %tobool22 = icmp ne %struct.BMLoop* %35, null, !dbg !8146
  br i1 %tobool22, label %for.body23, label %for.end, !dbg !8146

for.body23:                                       ; preds = %for.cond21
  %36 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !8151
  %head24 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %36, i32 0, i32 0, !dbg !8151
  %data25 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head24, i32 0, i32 0, !dbg !8151
  %37 = load i8*, i8** %data25, align 8, !dbg !8151
  %38 = load i32, i32* %cd_loop_uv_offset, align 4, !dbg !8151
  %idx.ext26 = sext i32 %38 to i64, !dbg !8151
  %add.ptr27 = getelementptr inbounds i8, i8* %37, i64 %idx.ext26, !dbg !8151
  %39 = bitcast i8* %add.ptr27 to %struct.MLoopUV*, !dbg !8151
  store %struct.MLoopUV* %39, %struct.MLoopUV** %luv, align 8, !dbg !8153
  %40 = load %struct.MLoopUV*, %struct.MLoopUV** %luv, align 8, !dbg !8154
  %flag28 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %40, i32 0, i32 1, !dbg !8156
  %41 = load i32, i32* %flag28, align 4, !dbg !8156
  %and = and i32 %41, 2, !dbg !8157
  %tobool29 = icmp ne i32 %and, 0, !dbg !8157
  br i1 %tobool29, label %if.then30, label %if.end33, !dbg !8158

if.then30:                                        ; preds = %for.body23
  %42 = load i32, i32* %a, align 4, !dbg !8159
  %43 = load i32*, i32** %stack, align 8, !dbg !8161
  %44 = load i32, i32* %stacksize, align 4, !dbg !8162
  %idxprom = sext i32 %44 to i64, !dbg !8161
  %arrayidx = getelementptr inbounds i32, i32* %43, i64 %idxprom, !dbg !8161
  store i32 %42, i32* %arrayidx, align 4, !dbg !8163
  %45 = load i32, i32* %stacksize, align 4, !dbg !8164
  %inc = add nsw i32 %45, 1, !dbg !8164
  store i32 %inc, i32* %stacksize, align 4, !dbg !8164
  %46 = load i8*, i8** %flag, align 8, !dbg !8165
  %47 = load i32, i32* %a, align 4, !dbg !8166
  %idxprom31 = zext i32 %47 to i64, !dbg !8165
  %arrayidx32 = getelementptr inbounds i8, i8* %46, i64 %idxprom31, !dbg !8165
  store i8 1, i8* %arrayidx32, align 1, !dbg !8167
  br label %for.end, !dbg !8168

if.end33:                                         ; preds = %for.body23
  br label %for.inc, !dbg !8169

for.inc:                                          ; preds = %if.end33
  %call34 = call i8* @BM_iter_step(%struct.BMIter* %liter), !dbg !8149
  %48 = bitcast i8* %call34 to %struct.BMLoop*, !dbg !8149
  store %struct.BMLoop* %48, %struct.BMLoop** %l, align 8, !dbg !8149
  br label %for.cond21, !dbg !8149, !llvm.loop !8170

for.end:                                          ; preds = %if.then30, %for.cond21
  br label %if.end35, !dbg !8172

if.end35:                                         ; preds = %for.end, %for.body
  br label %for.inc36, !dbg !8173

for.inc36:                                        ; preds = %if.end35
  %call37 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !8134
  %49 = bitcast i8* %call37 to %struct.BMFace*, !dbg !8134
  store %struct.BMFace* %49, %struct.BMFace** %efa, align 8, !dbg !8134
  %50 = load i32, i32* %a, align 4, !dbg !8134
  %inc38 = add i32 %50, 1, !dbg !8134
  store i32 %inc38, i32* %a, align 4, !dbg !8134
  br label %for.cond, !dbg !8134, !llvm.loop !8174

for.end39:                                        ; preds = %for.cond
  br label %if.end59, !dbg !8176

if.else:                                          ; preds = %if.end
  %51 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !8177
  %bm40 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %51, i32 0, i32 0, !dbg !8177
  %52 = load %struct.BMesh*, %struct.BMesh** %bm40, align 8, !dbg !8177
  %call41 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %52, i8 zeroext 3, i8* null), !dbg !8177
  %53 = bitcast i8* %call41 to %struct.BMFace*, !dbg !8177
  store %struct.BMFace* %53, %struct.BMFace** %efa, align 8, !dbg !8177
  store i32 0, i32* %a, align 4, !dbg !8177
  br label %for.cond42, !dbg !8177

for.cond42:                                       ; preds = %for.inc55, %if.else
  %54 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !8180
  %tobool43 = icmp ne %struct.BMFace* %54, null, !dbg !8177
  br i1 %tobool43, label %for.body44, label %for.end58, !dbg !8177

for.body44:                                       ; preds = %for.cond42
  %55 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !8182
  %56 = load %struct.NearestHit*, %struct.NearestHit** %hit.addr, align 8, !dbg !8185
  %efa45 = getelementptr inbounds %struct.NearestHit, %struct.NearestHit* %56, i32 0, i32 0, !dbg !8186
  %57 = load %struct.BMFace*, %struct.BMFace** %efa45, align 8, !dbg !8186
  %cmp46 = icmp eq %struct.BMFace* %55, %57, !dbg !8187
  br i1 %cmp46, label %if.then48, label %if.end54, !dbg !8188

if.then48:                                        ; preds = %for.body44
  %58 = load i32, i32* %a, align 4, !dbg !8189
  %59 = load i32*, i32** %stack, align 8, !dbg !8191
  %60 = load i32, i32* %stacksize, align 4, !dbg !8192
  %idxprom49 = sext i32 %60 to i64, !dbg !8191
  %arrayidx50 = getelementptr inbounds i32, i32* %59, i64 %idxprom49, !dbg !8191
  store i32 %58, i32* %arrayidx50, align 4, !dbg !8193
  %61 = load i32, i32* %stacksize, align 4, !dbg !8194
  %inc51 = add nsw i32 %61, 1, !dbg !8194
  store i32 %inc51, i32* %stacksize, align 4, !dbg !8194
  %62 = load i8*, i8** %flag, align 8, !dbg !8195
  %63 = load i32, i32* %a, align 4, !dbg !8196
  %idxprom52 = zext i32 %63 to i64, !dbg !8195
  %arrayidx53 = getelementptr inbounds i8, i8* %62, i64 %idxprom52, !dbg !8195
  store i8 1, i8* %arrayidx53, align 1, !dbg !8197
  br label %for.end58, !dbg !8198

if.end54:                                         ; preds = %for.body44
  br label %for.inc55, !dbg !8199

for.inc55:                                        ; preds = %if.end54
  %call56 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !8180
  %64 = bitcast i8* %call56 to %struct.BMFace*, !dbg !8180
  store %struct.BMFace* %64, %struct.BMFace** %efa, align 8, !dbg !8180
  %65 = load i32, i32* %a, align 4, !dbg !8180
  %inc57 = add i32 %65, 1, !dbg !8180
  store i32 %inc57, i32* %a, align 4, !dbg !8180
  br label %for.cond42, !dbg !8180, !llvm.loop !8200

for.end58:                                        ; preds = %if.then48, %for.cond42
  br label %if.end59

if.end59:                                         ; preds = %for.end58, %for.end39
  br label %while.cond, !dbg !8202

while.cond:                                       ; preds = %for.end115, %if.end59
  %66 = load i32, i32* %stacksize, align 4, !dbg !8203
  %cmp60 = icmp sgt i32 %66, 0, !dbg !8204
  br i1 %cmp60, label %while.body, label %while.end, !dbg !8202

while.body:                                       ; preds = %while.cond
  %67 = load i32, i32* %stacksize, align 4, !dbg !8205
  %dec = add nsw i32 %67, -1, !dbg !8205
  store i32 %dec, i32* %stacksize, align 4, !dbg !8205
  %68 = load i32*, i32** %stack, align 8, !dbg !8207
  %69 = load i32, i32* %stacksize, align 4, !dbg !8208
  %idxprom62 = sext i32 %69 to i64, !dbg !8207
  %arrayidx63 = getelementptr inbounds i32, i32* %68, i64 %idxprom62, !dbg !8207
  %70 = load i32, i32* %arrayidx63, align 4, !dbg !8207
  store i32 %70, i32* %a, align 4, !dbg !8209
  %71 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !8210
  %bm64 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %71, i32 0, i32 0, !dbg !8211
  %72 = load %struct.BMesh*, %struct.BMesh** %bm64, align 8, !dbg !8211
  %73 = load i32, i32* %a, align 4, !dbg !8212
  %call65 = call %struct.BMFace* @BM_face_at_index(%struct.BMesh* %72, i32 %73), !dbg !8213
  store %struct.BMFace* %call65, %struct.BMFace** %efa, align 8, !dbg !8214
  %74 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !8215
  %75 = bitcast %struct.BMFace* %74 to i8*, !dbg !8215
  %call66 = call i8* @BM_iter_new(%struct.BMIter* %liter, %struct.BMesh* null, i8 zeroext 11, i8* %75), !dbg !8215
  %76 = bitcast i8* %call66 to %struct.BMLoop*, !dbg !8215
  store %struct.BMLoop* %76, %struct.BMLoop** %l, align 8, !dbg !8215
  store i32 0, i32* %i, align 4, !dbg !8215
  br label %for.cond67, !dbg !8215

for.cond67:                                       ; preds = %for.inc112, %while.body
  %77 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !8217
  %tobool68 = icmp ne %struct.BMLoop* %77, null, !dbg !8215
  br i1 %tobool68, label %for.body69, label %for.end115, !dbg !8215

for.body69:                                       ; preds = %for.cond67
  %78 = load %struct.UvVertMap*, %struct.UvVertMap** %vmap, align 8, !dbg !8219
  %79 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !8221
  %v = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %79, i32 0, i32 1, !dbg !8221
  %80 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !8221
  %head70 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %80, i32 0, i32 0, !dbg !8221
  %call71 = call i32 @_bm_elem_index_get(%struct.BMHeader* %head70), !dbg !8221
  %call72 = call %struct.UvMapVert* @BM_uv_vert_map_at_index(%struct.UvVertMap* %78, i32 %call71), !dbg !8222
  store %struct.UvMapVert* %call72, %struct.UvMapVert** %vlist, align 8, !dbg !8223
  %81 = load %struct.UvMapVert*, %struct.UvMapVert** %vlist, align 8, !dbg !8224
  store %struct.UvMapVert* %81, %struct.UvMapVert** %startv, align 8, !dbg !8225
  %82 = load %struct.UvMapVert*, %struct.UvMapVert** %vlist, align 8, !dbg !8226
  store %struct.UvMapVert* %82, %struct.UvMapVert** %iterv, align 8, !dbg !8228
  br label %for.cond73, !dbg !8229

for.cond73:                                       ; preds = %for.inc83, %for.body69
  %83 = load %struct.UvMapVert*, %struct.UvMapVert** %iterv, align 8, !dbg !8230
  %tobool74 = icmp ne %struct.UvMapVert* %83, null, !dbg !8232
  br i1 %tobool74, label %for.body75, label %for.end84, !dbg !8232

for.body75:                                       ; preds = %for.cond73
  %84 = load %struct.UvMapVert*, %struct.UvMapVert** %iterv, align 8, !dbg !8233
  %separate = getelementptr inbounds %struct.UvMapVert, %struct.UvMapVert* %84, i32 0, i32 3, !dbg !8236
  %85 = load i8, i8* %separate, align 1, !dbg !8236
  %tobool76 = icmp ne i8 %85, 0, !dbg !8233
  br i1 %tobool76, label %if.then77, label %if.end78, !dbg !8237

if.then77:                                        ; preds = %for.body75
  %86 = load %struct.UvMapVert*, %struct.UvMapVert** %iterv, align 8, !dbg !8238
  store %struct.UvMapVert* %86, %struct.UvMapVert** %startv, align 8, !dbg !8239
  br label %if.end78, !dbg !8240

if.end78:                                         ; preds = %if.then77, %for.body75
  %87 = load %struct.UvMapVert*, %struct.UvMapVert** %iterv, align 8, !dbg !8241
  %f = getelementptr inbounds %struct.UvMapVert, %struct.UvMapVert* %87, i32 0, i32 1, !dbg !8243
  %88 = load i32, i32* %f, align 8, !dbg !8243
  %89 = load i32, i32* %a, align 4, !dbg !8244
  %cmp79 = icmp eq i32 %88, %89, !dbg !8245
  br i1 %cmp79, label %if.then81, label %if.end82, !dbg !8246

if.then81:                                        ; preds = %if.end78
  br label %for.end84, !dbg !8247

if.end82:                                         ; preds = %if.end78
  br label %for.inc83, !dbg !8248

for.inc83:                                        ; preds = %if.end82
  %90 = load %struct.UvMapVert*, %struct.UvMapVert** %iterv, align 8, !dbg !8249
  %next = getelementptr inbounds %struct.UvMapVert, %struct.UvMapVert* %90, i32 0, i32 0, !dbg !8250
  %91 = load %struct.UvMapVert*, %struct.UvMapVert** %next, align 8, !dbg !8250
  store %struct.UvMapVert* %91, %struct.UvMapVert** %iterv, align 8, !dbg !8251
  br label %for.cond73, !dbg !8252, !llvm.loop !8253

for.end84:                                        ; preds = %if.then81, %for.cond73
  %92 = load %struct.UvMapVert*, %struct.UvMapVert** %startv, align 8, !dbg !8255
  store %struct.UvMapVert* %92, %struct.UvMapVert** %iterv, align 8, !dbg !8257
  br label %for.cond85, !dbg !8258

for.cond85:                                       ; preds = %for.inc109, %for.end84
  %93 = load %struct.UvMapVert*, %struct.UvMapVert** %iterv, align 8, !dbg !8259
  %tobool86 = icmp ne %struct.UvMapVert* %93, null, !dbg !8261
  br i1 %tobool86, label %for.body87, label %for.end111, !dbg !8261

for.body87:                                       ; preds = %for.cond85
  %94 = load %struct.UvMapVert*, %struct.UvMapVert** %startv, align 8, !dbg !8262
  %95 = load %struct.UvMapVert*, %struct.UvMapVert** %iterv, align 8, !dbg !8265
  %cmp88 = icmp ne %struct.UvMapVert* %94, %95, !dbg !8266
  br i1 %cmp88, label %land.lhs.true, label %if.else94, !dbg !8267

land.lhs.true:                                    ; preds = %for.body87
  %96 = load %struct.UvMapVert*, %struct.UvMapVert** %iterv, align 8, !dbg !8268
  %separate90 = getelementptr inbounds %struct.UvMapVert, %struct.UvMapVert* %96, i32 0, i32 3, !dbg !8269
  %97 = load i8, i8* %separate90, align 1, !dbg !8269
  %conv91 = zext i8 %97 to i32, !dbg !8270
  %tobool92 = icmp ne i32 %conv91, 0, !dbg !8270
  br i1 %tobool92, label %if.then93, label %if.else94, !dbg !8271

if.then93:                                        ; preds = %land.lhs.true
  br label %for.end111, !dbg !8272

if.else94:                                        ; preds = %land.lhs.true, %for.body87
  %98 = load i8*, i8** %flag, align 8, !dbg !8273
  %99 = load %struct.UvMapVert*, %struct.UvMapVert** %iterv, align 8, !dbg !8275
  %f95 = getelementptr inbounds %struct.UvMapVert, %struct.UvMapVert* %99, i32 0, i32 1, !dbg !8276
  %100 = load i32, i32* %f95, align 8, !dbg !8276
  %idxprom96 = zext i32 %100 to i64, !dbg !8273
  %arrayidx97 = getelementptr inbounds i8, i8* %98, i64 %idxprom96, !dbg !8273
  %101 = load i8, i8* %arrayidx97, align 1, !dbg !8273
  %tobool98 = icmp ne i8 %101, 0, !dbg !8273
  br i1 %tobool98, label %if.end107, label %if.then99, !dbg !8277

if.then99:                                        ; preds = %if.else94
  %102 = load i8*, i8** %flag, align 8, !dbg !8278
  %103 = load %struct.UvMapVert*, %struct.UvMapVert** %iterv, align 8, !dbg !8280
  %f100 = getelementptr inbounds %struct.UvMapVert, %struct.UvMapVert* %103, i32 0, i32 1, !dbg !8281
  %104 = load i32, i32* %f100, align 8, !dbg !8281
  %idxprom101 = zext i32 %104 to i64, !dbg !8278
  %arrayidx102 = getelementptr inbounds i8, i8* %102, i64 %idxprom101, !dbg !8278
  store i8 1, i8* %arrayidx102, align 1, !dbg !8282
  %105 = load %struct.UvMapVert*, %struct.UvMapVert** %iterv, align 8, !dbg !8283
  %f103 = getelementptr inbounds %struct.UvMapVert, %struct.UvMapVert* %105, i32 0, i32 1, !dbg !8284
  %106 = load i32, i32* %f103, align 8, !dbg !8284
  %107 = load i32*, i32** %stack, align 8, !dbg !8285
  %108 = load i32, i32* %stacksize, align 4, !dbg !8286
  %idxprom104 = sext i32 %108 to i64, !dbg !8285
  %arrayidx105 = getelementptr inbounds i32, i32* %107, i64 %idxprom104, !dbg !8285
  store i32 %106, i32* %arrayidx105, align 4, !dbg !8287
  %109 = load i32, i32* %stacksize, align 4, !dbg !8288
  %inc106 = add nsw i32 %109, 1, !dbg !8288
  store i32 %inc106, i32* %stacksize, align 4, !dbg !8288
  br label %if.end107, !dbg !8289

if.end107:                                        ; preds = %if.then99, %if.else94
  br label %if.end108

if.end108:                                        ; preds = %if.end107
  br label %for.inc109, !dbg !8290

for.inc109:                                       ; preds = %if.end108
  %110 = load %struct.UvMapVert*, %struct.UvMapVert** %iterv, align 8, !dbg !8291
  %next110 = getelementptr inbounds %struct.UvMapVert, %struct.UvMapVert* %110, i32 0, i32 0, !dbg !8292
  %111 = load %struct.UvMapVert*, %struct.UvMapVert** %next110, align 8, !dbg !8292
  store %struct.UvMapVert* %111, %struct.UvMapVert** %iterv, align 8, !dbg !8293
  br label %for.cond85, !dbg !8294, !llvm.loop !8295

for.end111:                                       ; preds = %if.then93, %for.cond85
  br label %for.inc112, !dbg !8297

for.inc112:                                       ; preds = %for.end111
  %call113 = call i8* @BM_iter_step(%struct.BMIter* %liter), !dbg !8217
  %112 = bitcast i8* %call113 to %struct.BMLoop*, !dbg !8217
  store %struct.BMLoop* %112, %struct.BMLoop** %l, align 8, !dbg !8217
  %113 = load i32, i32* %i, align 4, !dbg !8217
  %inc114 = add nsw i32 %113, 1, !dbg !8217
  store i32 %inc114, i32* %i, align 4, !dbg !8217
  br label %for.cond67, !dbg !8217, !llvm.loop !8298

for.end115:                                       ; preds = %for.cond67
  br label %while.cond, !dbg !8202, !llvm.loop !8300

while.end:                                        ; preds = %while.cond
  %114 = load i8, i8* %extend.addr, align 1, !dbg !8302
  %tobool116 = icmp ne i8 %114, 0, !dbg !8302
  br i1 %tobool116, label %if.else147, label %if.then117, !dbg !8304

if.then117:                                       ; preds = %while.end
  %115 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !8305
  %bm118 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %115, i32 0, i32 0, !dbg !8305
  %116 = load %struct.BMesh*, %struct.BMesh** %bm118, align 8, !dbg !8305
  %call119 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %116, i8 zeroext 3, i8* null), !dbg !8305
  %117 = bitcast i8* %call119 to %struct.BMFace*, !dbg !8305
  store %struct.BMFace* %117, %struct.BMFace** %efa, align 8, !dbg !8305
  store i32 0, i32* %a, align 4, !dbg !8305
  br label %for.cond120, !dbg !8305

for.cond120:                                      ; preds = %for.inc143, %if.then117
  %118 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !8308
  %tobool121 = icmp ne %struct.BMFace* %118, null, !dbg !8305
  br i1 %tobool121, label %for.body122, label %for.end146, !dbg !8305

for.body122:                                      ; preds = %for.cond120
  %119 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !8310
  %120 = bitcast %struct.BMFace* %119 to i8*, !dbg !8310
  %call123 = call i8* @BM_iter_new(%struct.BMIter* %liter, %struct.BMesh* null, i8 zeroext 11, i8* %120), !dbg !8310
  %121 = bitcast i8* %call123 to %struct.BMLoop*, !dbg !8310
  store %struct.BMLoop* %121, %struct.BMLoop** %l, align 8, !dbg !8310
  br label %for.cond124, !dbg !8310

for.cond124:                                      ; preds = %for.inc140, %for.body122
  %122 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !8313
  %tobool125 = icmp ne %struct.BMLoop* %122, null, !dbg !8310
  br i1 %tobool125, label %for.body126, label %for.end142, !dbg !8310

for.body126:                                      ; preds = %for.cond124
  %123 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !8315
  %head127 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %123, i32 0, i32 0, !dbg !8315
  %data128 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head127, i32 0, i32 0, !dbg !8315
  %124 = load i8*, i8** %data128, align 8, !dbg !8315
  %125 = load i32, i32* %cd_loop_uv_offset, align 4, !dbg !8315
  %idx.ext129 = sext i32 %125 to i64, !dbg !8315
  %add.ptr130 = getelementptr inbounds i8, i8* %124, i64 %idx.ext129, !dbg !8315
  %126 = bitcast i8* %add.ptr130 to %struct.MLoopUV*, !dbg !8315
  store %struct.MLoopUV* %126, %struct.MLoopUV** %luv, align 8, !dbg !8317
  %127 = load i8*, i8** %flag, align 8, !dbg !8318
  %128 = load i32, i32* %a, align 4, !dbg !8320
  %idxprom131 = zext i32 %128 to i64, !dbg !8318
  %arrayidx132 = getelementptr inbounds i8, i8* %127, i64 %idxprom131, !dbg !8318
  %129 = load i8, i8* %arrayidx132, align 1, !dbg !8318
  %tobool133 = icmp ne i8 %129, 0, !dbg !8318
  br i1 %tobool133, label %if.then134, label %if.else136, !dbg !8321

if.then134:                                       ; preds = %for.body126
  %130 = load %struct.MLoopUV*, %struct.MLoopUV** %luv, align 8, !dbg !8322
  %flag135 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %130, i32 0, i32 1, !dbg !8323
  %131 = load i32, i32* %flag135, align 4, !dbg !8324
  %or = or i32 %131, 2, !dbg !8324
  store i32 %or, i32* %flag135, align 4, !dbg !8324
  br label %if.end139, !dbg !8322

if.else136:                                       ; preds = %for.body126
  %132 = load %struct.MLoopUV*, %struct.MLoopUV** %luv, align 8, !dbg !8325
  %flag137 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %132, i32 0, i32 1, !dbg !8326
  %133 = load i32, i32* %flag137, align 4, !dbg !8327
  %and138 = and i32 %133, -3, !dbg !8327
  store i32 %and138, i32* %flag137, align 4, !dbg !8327
  br label %if.end139

if.end139:                                        ; preds = %if.else136, %if.then134
  br label %for.inc140, !dbg !8328

for.inc140:                                       ; preds = %if.end139
  %call141 = call i8* @BM_iter_step(%struct.BMIter* %liter), !dbg !8313
  %134 = bitcast i8* %call141 to %struct.BMLoop*, !dbg !8313
  store %struct.BMLoop* %134, %struct.BMLoop** %l, align 8, !dbg !8313
  br label %for.cond124, !dbg !8313, !llvm.loop !8329

for.end142:                                       ; preds = %for.cond124
  br label %for.inc143, !dbg !8331

for.inc143:                                       ; preds = %for.end142
  %call144 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !8308
  %135 = bitcast i8* %call144 to %struct.BMFace*, !dbg !8308
  store %struct.BMFace* %135, %struct.BMFace** %efa, align 8, !dbg !8308
  %136 = load i32, i32* %a, align 4, !dbg !8308
  %inc145 = add i32 %136, 1, !dbg !8308
  store i32 %inc145, i32* %a, align 4, !dbg !8308
  br label %for.cond120, !dbg !8308, !llvm.loop !8332

for.end146:                                       ; preds = %for.cond120
  br label %if.end239, !dbg !8334

if.else147:                                       ; preds = %while.end
  %137 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !8335
  %bm148 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %137, i32 0, i32 0, !dbg !8335
  %138 = load %struct.BMesh*, %struct.BMesh** %bm148, align 8, !dbg !8335
  %call149 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %138, i8 zeroext 3, i8* null), !dbg !8335
  %139 = bitcast i8* %call149 to %struct.BMFace*, !dbg !8335
  store %struct.BMFace* %139, %struct.BMFace** %efa, align 8, !dbg !8335
  store i32 0, i32* %a, align 4, !dbg !8335
  br label %for.cond150, !dbg !8335

for.cond150:                                      ; preds = %for.inc177, %if.else147
  %140 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !8338
  %tobool151 = icmp ne %struct.BMFace* %140, null, !dbg !8335
  br i1 %tobool151, label %for.body152, label %for.end180, !dbg !8335

for.body152:                                      ; preds = %for.cond150
  %141 = load i8*, i8** %flag, align 8, !dbg !8340
  %142 = load i32, i32* %a, align 4, !dbg !8343
  %idxprom153 = zext i32 %142 to i64, !dbg !8340
  %arrayidx154 = getelementptr inbounds i8, i8* %141, i64 %idxprom153, !dbg !8340
  %143 = load i8, i8* %arrayidx154, align 1, !dbg !8340
  %tobool155 = icmp ne i8 %143, 0, !dbg !8340
  br i1 %tobool155, label %if.end157, label %if.then156, !dbg !8344

if.then156:                                       ; preds = %for.body152
  br label %for.inc177, !dbg !8345

if.end157:                                        ; preds = %for.body152
  %144 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !8347
  %145 = bitcast %struct.BMFace* %144 to i8*, !dbg !8347
  %call158 = call i8* @BM_iter_new(%struct.BMIter* %liter, %struct.BMesh* null, i8 zeroext 11, i8* %145), !dbg !8347
  %146 = bitcast i8* %call158 to %struct.BMLoop*, !dbg !8347
  store %struct.BMLoop* %146, %struct.BMLoop** %l, align 8, !dbg !8347
  br label %for.cond159, !dbg !8347

for.cond159:                                      ; preds = %for.inc171, %if.end157
  %147 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !8349
  %tobool160 = icmp ne %struct.BMLoop* %147, null, !dbg !8347
  br i1 %tobool160, label %for.body161, label %for.end173, !dbg !8347

for.body161:                                      ; preds = %for.cond159
  %148 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !8351
  %head162 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %148, i32 0, i32 0, !dbg !8351
  %data163 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head162, i32 0, i32 0, !dbg !8351
  %149 = load i8*, i8** %data163, align 8, !dbg !8351
  %150 = load i32, i32* %cd_loop_uv_offset, align 4, !dbg !8351
  %idx.ext164 = sext i32 %150 to i64, !dbg !8351
  %add.ptr165 = getelementptr inbounds i8, i8* %149, i64 %idx.ext164, !dbg !8351
  %151 = bitcast i8* %add.ptr165 to %struct.MLoopUV*, !dbg !8351
  store %struct.MLoopUV* %151, %struct.MLoopUV** %luv, align 8, !dbg !8353
  %152 = load %struct.MLoopUV*, %struct.MLoopUV** %luv, align 8, !dbg !8354
  %flag166 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %152, i32 0, i32 1, !dbg !8356
  %153 = load i32, i32* %flag166, align 4, !dbg !8356
  %and167 = and i32 %153, 2, !dbg !8357
  %tobool168 = icmp ne i32 %and167, 0, !dbg !8357
  br i1 %tobool168, label %if.then169, label %if.end170, !dbg !8358

if.then169:                                       ; preds = %for.body161
  br label %for.end173, !dbg !8359

if.end170:                                        ; preds = %for.body161
  br label %for.inc171, !dbg !8361

for.inc171:                                       ; preds = %if.end170
  %call172 = call i8* @BM_iter_step(%struct.BMIter* %liter), !dbg !8349
  %154 = bitcast i8* %call172 to %struct.BMLoop*, !dbg !8349
  store %struct.BMLoop* %154, %struct.BMLoop** %l, align 8, !dbg !8349
  br label %for.cond159, !dbg !8349, !llvm.loop !8362

for.end173:                                       ; preds = %if.then169, %for.cond159
  %155 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !8364
  %tobool174 = icmp ne %struct.BMLoop* %155, null, !dbg !8364
  br i1 %tobool174, label %if.then175, label %if.end176, !dbg !8366

if.then175:                                       ; preds = %for.end173
  br label %for.end180, !dbg !8367

if.end176:                                        ; preds = %for.end173
  br label %for.inc177, !dbg !8369

for.inc177:                                       ; preds = %if.end176, %if.then156
  %call178 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !8338
  %156 = bitcast i8* %call178 to %struct.BMFace*, !dbg !8338
  store %struct.BMFace* %156, %struct.BMFace** %efa, align 8, !dbg !8338
  %157 = load i32, i32* %a, align 4, !dbg !8338
  %inc179 = add i32 %157, 1, !dbg !8338
  store i32 %inc179, i32* %a, align 4, !dbg !8338
  br label %for.cond150, !dbg !8338, !llvm.loop !8370

for.end180:                                       ; preds = %if.then175, %for.cond150
  %158 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !8372
  %tobool181 = icmp ne %struct.BMFace* %158, null, !dbg !8372
  br i1 %tobool181, label %if.then182, label %if.else210, !dbg !8374

if.then182:                                       ; preds = %for.end180
  %159 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !8375
  %bm183 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %159, i32 0, i32 0, !dbg !8375
  %160 = load %struct.BMesh*, %struct.BMesh** %bm183, align 8, !dbg !8375
  %call184 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %160, i8 zeroext 3, i8* null), !dbg !8375
  %161 = bitcast i8* %call184 to %struct.BMFace*, !dbg !8375
  store %struct.BMFace* %161, %struct.BMFace** %efa, align 8, !dbg !8375
  store i32 0, i32* %a, align 4, !dbg !8375
  br label %for.cond185, !dbg !8375

for.cond185:                                      ; preds = %for.inc206, %if.then182
  %162 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !8378
  %tobool186 = icmp ne %struct.BMFace* %162, null, !dbg !8375
  br i1 %tobool186, label %for.body187, label %for.end209, !dbg !8375

for.body187:                                      ; preds = %for.cond185
  %163 = load i8*, i8** %flag, align 8, !dbg !8380
  %164 = load i32, i32* %a, align 4, !dbg !8383
  %idxprom188 = zext i32 %164 to i64, !dbg !8380
  %arrayidx189 = getelementptr inbounds i8, i8* %163, i64 %idxprom188, !dbg !8380
  %165 = load i8, i8* %arrayidx189, align 1, !dbg !8380
  %tobool190 = icmp ne i8 %165, 0, !dbg !8380
  br i1 %tobool190, label %if.end192, label %if.then191, !dbg !8384

if.then191:                                       ; preds = %for.body187
  br label %for.inc206, !dbg !8385

if.end192:                                        ; preds = %for.body187
  %166 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !8387
  %167 = bitcast %struct.BMFace* %166 to i8*, !dbg !8387
  %call193 = call i8* @BM_iter_new(%struct.BMIter* %liter, %struct.BMesh* null, i8 zeroext 11, i8* %167), !dbg !8387
  %168 = bitcast i8* %call193 to %struct.BMLoop*, !dbg !8387
  store %struct.BMLoop* %168, %struct.BMLoop** %l, align 8, !dbg !8387
  br label %for.cond194, !dbg !8387

for.cond194:                                      ; preds = %for.inc203, %if.end192
  %169 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !8389
  %tobool195 = icmp ne %struct.BMLoop* %169, null, !dbg !8387
  br i1 %tobool195, label %for.body196, label %for.end205, !dbg !8387

for.body196:                                      ; preds = %for.cond194
  %170 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !8391
  %head197 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %170, i32 0, i32 0, !dbg !8391
  %data198 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head197, i32 0, i32 0, !dbg !8391
  %171 = load i8*, i8** %data198, align 8, !dbg !8391
  %172 = load i32, i32* %cd_loop_uv_offset, align 4, !dbg !8391
  %idx.ext199 = sext i32 %172 to i64, !dbg !8391
  %add.ptr200 = getelementptr inbounds i8, i8* %171, i64 %idx.ext199, !dbg !8391
  %173 = bitcast i8* %add.ptr200 to %struct.MLoopUV*, !dbg !8391
  store %struct.MLoopUV* %173, %struct.MLoopUV** %luv, align 8, !dbg !8393
  %174 = load %struct.MLoopUV*, %struct.MLoopUV** %luv, align 8, !dbg !8394
  %flag201 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %174, i32 0, i32 1, !dbg !8395
  %175 = load i32, i32* %flag201, align 4, !dbg !8396
  %and202 = and i32 %175, -3, !dbg !8396
  store i32 %and202, i32* %flag201, align 4, !dbg !8396
  br label %for.inc203, !dbg !8397

for.inc203:                                       ; preds = %for.body196
  %call204 = call i8* @BM_iter_step(%struct.BMIter* %liter), !dbg !8389
  %176 = bitcast i8* %call204 to %struct.BMLoop*, !dbg !8389
  store %struct.BMLoop* %176, %struct.BMLoop** %l, align 8, !dbg !8389
  br label %for.cond194, !dbg !8389, !llvm.loop !8398

for.end205:                                       ; preds = %for.cond194
  br label %for.inc206, !dbg !8400

for.inc206:                                       ; preds = %for.end205, %if.then191
  %call207 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !8378
  %177 = bitcast i8* %call207 to %struct.BMFace*, !dbg !8378
  store %struct.BMFace* %177, %struct.BMFace** %efa, align 8, !dbg !8378
  %178 = load i32, i32* %a, align 4, !dbg !8378
  %inc208 = add i32 %178, 1, !dbg !8378
  store i32 %inc208, i32* %a, align 4, !dbg !8378
  br label %for.cond185, !dbg !8378, !llvm.loop !8401

for.end209:                                       ; preds = %for.cond185
  br label %if.end238, !dbg !8403

if.else210:                                       ; preds = %for.end180
  %179 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !8404
  %bm211 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %179, i32 0, i32 0, !dbg !8404
  %180 = load %struct.BMesh*, %struct.BMesh** %bm211, align 8, !dbg !8404
  %call212 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %180, i8 zeroext 3, i8* null), !dbg !8404
  %181 = bitcast i8* %call212 to %struct.BMFace*, !dbg !8404
  store %struct.BMFace* %181, %struct.BMFace** %efa, align 8, !dbg !8404
  store i32 0, i32* %a, align 4, !dbg !8404
  br label %for.cond213, !dbg !8404

for.cond213:                                      ; preds = %for.inc234, %if.else210
  %182 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !8407
  %tobool214 = icmp ne %struct.BMFace* %182, null, !dbg !8404
  br i1 %tobool214, label %for.body215, label %for.end237, !dbg !8404

for.body215:                                      ; preds = %for.cond213
  %183 = load i8*, i8** %flag, align 8, !dbg !8409
  %184 = load i32, i32* %a, align 4, !dbg !8412
  %idxprom216 = zext i32 %184 to i64, !dbg !8409
  %arrayidx217 = getelementptr inbounds i8, i8* %183, i64 %idxprom216, !dbg !8409
  %185 = load i8, i8* %arrayidx217, align 1, !dbg !8409
  %tobool218 = icmp ne i8 %185, 0, !dbg !8409
  br i1 %tobool218, label %if.end220, label %if.then219, !dbg !8413

if.then219:                                       ; preds = %for.body215
  br label %for.inc234, !dbg !8414

if.end220:                                        ; preds = %for.body215
  %186 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !8416
  %187 = bitcast %struct.BMFace* %186 to i8*, !dbg !8416
  %call221 = call i8* @BM_iter_new(%struct.BMIter* %liter, %struct.BMesh* null, i8 zeroext 11, i8* %187), !dbg !8416
  %188 = bitcast i8* %call221 to %struct.BMLoop*, !dbg !8416
  store %struct.BMLoop* %188, %struct.BMLoop** %l, align 8, !dbg !8416
  br label %for.cond222, !dbg !8416

for.cond222:                                      ; preds = %for.inc231, %if.end220
  %189 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !8418
  %tobool223 = icmp ne %struct.BMLoop* %189, null, !dbg !8416
  br i1 %tobool223, label %for.body224, label %for.end233, !dbg !8416

for.body224:                                      ; preds = %for.cond222
  %190 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !8420
  %head225 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %190, i32 0, i32 0, !dbg !8420
  %data226 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head225, i32 0, i32 0, !dbg !8420
  %191 = load i8*, i8** %data226, align 8, !dbg !8420
  %192 = load i32, i32* %cd_loop_uv_offset, align 4, !dbg !8420
  %idx.ext227 = sext i32 %192 to i64, !dbg !8420
  %add.ptr228 = getelementptr inbounds i8, i8* %191, i64 %idx.ext227, !dbg !8420
  %193 = bitcast i8* %add.ptr228 to %struct.MLoopUV*, !dbg !8420
  store %struct.MLoopUV* %193, %struct.MLoopUV** %luv, align 8, !dbg !8422
  %194 = load %struct.MLoopUV*, %struct.MLoopUV** %luv, align 8, !dbg !8423
  %flag229 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %194, i32 0, i32 1, !dbg !8424
  %195 = load i32, i32* %flag229, align 4, !dbg !8425
  %or230 = or i32 %195, 2, !dbg !8425
  store i32 %or230, i32* %flag229, align 4, !dbg !8425
  br label %for.inc231, !dbg !8426

for.inc231:                                       ; preds = %for.body224
  %call232 = call i8* @BM_iter_step(%struct.BMIter* %liter), !dbg !8418
  %196 = bitcast i8* %call232 to %struct.BMLoop*, !dbg !8418
  store %struct.BMLoop* %196, %struct.BMLoop** %l, align 8, !dbg !8418
  br label %for.cond222, !dbg !8418, !llvm.loop !8427

for.end233:                                       ; preds = %for.cond222
  br label %for.inc234, !dbg !8429

for.inc234:                                       ; preds = %for.end233, %if.then219
  %call235 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !8407
  %197 = bitcast i8* %call235 to %struct.BMFace*, !dbg !8407
  store %struct.BMFace* %197, %struct.BMFace** %efa, align 8, !dbg !8407
  %198 = load i32, i32* %a, align 4, !dbg !8407
  %inc236 = add i32 %198, 1, !dbg !8407
  store i32 %inc236, i32* %a, align 4, !dbg !8407
  br label %for.cond213, !dbg !8407, !llvm.loop !8430

for.end237:                                       ; preds = %for.cond213
  br label %if.end238

if.end238:                                        ; preds = %for.end237, %for.end209
  br label %if.end239

if.end239:                                        ; preds = %if.end238, %for.end146
  %199 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !8432
  %200 = load i32*, i32** %stack, align 8, !dbg !8433
  %201 = bitcast i32* %200 to i8*, !dbg !8433
  call void %199(i8* %201), !dbg !8432
  %202 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !8434
  %203 = load i8*, i8** %flag, align 8, !dbg !8435
  call void %202(i8* %203), !dbg !8434
  %204 = load %struct.UvVertMap*, %struct.UvVertMap** %vmap, align 8, !dbg !8436
  call void @BM_uv_vert_map_free(%struct.UvVertMap* %204), !dbg !8437
  br label %return, !dbg !8438

return:                                           ; preds = %if.end239, %if.then
  ret void, !dbg !8438
}

declare dso_local void @BM_select_history_validate(%struct.BMesh*) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @uv_sticky_select(float* %limit, i32* %hitv, i32 %v, float** %hituv, float* %uv, i32 %sticky, i32 %hitlen) #0 !dbg !8439 {
entry:
  %retval = alloca i8, align 1
  %limit.addr = alloca float*, align 8
  %hitv.addr = alloca i32*, align 8
  %v.addr = alloca i32, align 4
  %hituv.addr = alloca float**, align 8
  %uv.addr = alloca float*, align 8
  %sticky.addr = alloca i32, align 4
  %hitlen.addr = alloca i32, align 4
  %i = alloca i32, align 4
  store float* %limit, float** %limit.addr, align 8
  call void @llvm.dbg.declare(metadata float** %limit.addr, metadata !8442, metadata !DIExpression()), !dbg !8443
  store i32* %hitv, i32** %hitv.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %hitv.addr, metadata !8444, metadata !DIExpression()), !dbg !8445
  store i32 %v, i32* %v.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %v.addr, metadata !8446, metadata !DIExpression()), !dbg !8447
  store float** %hituv, float*** %hituv.addr, align 8
  call void @llvm.dbg.declare(metadata float*** %hituv.addr, metadata !8448, metadata !DIExpression()), !dbg !8449
  store float* %uv, float** %uv.addr, align 8
  call void @llvm.dbg.declare(metadata float** %uv.addr, metadata !8450, metadata !DIExpression()), !dbg !8451
  store i32 %sticky, i32* %sticky.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sticky.addr, metadata !8452, metadata !DIExpression()), !dbg !8453
  store i32 %hitlen, i32* %hitlen.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %hitlen.addr, metadata !8454, metadata !DIExpression()), !dbg !8455
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8456, metadata !DIExpression()), !dbg !8457
  %0 = load i32, i32* %sticky.addr, align 4, !dbg !8458
  %cmp = icmp eq i32 %0, 1, !dbg !8460
  br i1 %cmp, label %if.then, label %if.end, !dbg !8461

if.then:                                          ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !8462
  br label %return, !dbg !8462

if.end:                                           ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !8463
  br label %for.cond, !dbg !8465

for.cond:                                         ; preds = %for.inc, %if.end
  %1 = load i32, i32* %i, align 4, !dbg !8466
  %2 = load i32, i32* %hitlen.addr, align 4, !dbg !8468
  %cmp1 = icmp slt i32 %1, %2, !dbg !8469
  br i1 %cmp1, label %for.body, label %for.end, !dbg !8470

for.body:                                         ; preds = %for.cond
  %3 = load i32*, i32** %hitv.addr, align 8, !dbg !8471
  %4 = load i32, i32* %i, align 4, !dbg !8474
  %idxprom = sext i32 %4 to i64, !dbg !8471
  %arrayidx = getelementptr inbounds i32, i32* %3, i64 %idxprom, !dbg !8471
  %5 = load i32, i32* %arrayidx, align 4, !dbg !8471
  %6 = load i32, i32* %v.addr, align 4, !dbg !8475
  %cmp2 = icmp eq i32 %5, %6, !dbg !8476
  br i1 %cmp2, label %if.then3, label %if.end25, !dbg !8477

if.then3:                                         ; preds = %for.body
  %7 = load i32, i32* %sticky.addr, align 4, !dbg !8478
  %cmp4 = icmp eq i32 %7, 0, !dbg !8481
  br i1 %cmp4, label %if.then5, label %if.else, !dbg !8482

if.then5:                                         ; preds = %if.then3
  %8 = load float**, float*** %hituv.addr, align 8, !dbg !8483
  %9 = load i32, i32* %i, align 4, !dbg !8486
  %idxprom6 = sext i32 %9 to i64, !dbg !8483
  %arrayidx7 = getelementptr inbounds float*, float** %8, i64 %idxprom6, !dbg !8483
  %10 = load float*, float** %arrayidx7, align 8, !dbg !8483
  %arrayidx8 = getelementptr inbounds float, float* %10, i64 0, !dbg !8483
  %11 = load float, float* %arrayidx8, align 4, !dbg !8483
  %12 = load float*, float** %uv.addr, align 8, !dbg !8487
  %arrayidx9 = getelementptr inbounds float, float* %12, i64 0, !dbg !8487
  %13 = load float, float* %arrayidx9, align 4, !dbg !8487
  %sub = fsub float %11, %13, !dbg !8488
  %14 = call float @llvm.fabs.f32(float %sub), !dbg !8489
  %15 = load float*, float** %limit.addr, align 8, !dbg !8490
  %arrayidx10 = getelementptr inbounds float, float* %15, i64 0, !dbg !8490
  %16 = load float, float* %arrayidx10, align 4, !dbg !8490
  %cmp11 = fcmp olt float %14, %16, !dbg !8491
  br i1 %cmp11, label %land.lhs.true, label %if.end20, !dbg !8492

land.lhs.true:                                    ; preds = %if.then5
  %17 = load float**, float*** %hituv.addr, align 8, !dbg !8493
  %18 = load i32, i32* %i, align 4, !dbg !8494
  %idxprom12 = sext i32 %18 to i64, !dbg !8493
  %arrayidx13 = getelementptr inbounds float*, float** %17, i64 %idxprom12, !dbg !8493
  %19 = load float*, float** %arrayidx13, align 8, !dbg !8493
  %arrayidx14 = getelementptr inbounds float, float* %19, i64 1, !dbg !8493
  %20 = load float, float* %arrayidx14, align 4, !dbg !8493
  %21 = load float*, float** %uv.addr, align 8, !dbg !8495
  %arrayidx15 = getelementptr inbounds float, float* %21, i64 1, !dbg !8495
  %22 = load float, float* %arrayidx15, align 4, !dbg !8495
  %sub16 = fsub float %20, %22, !dbg !8496
  %23 = call float @llvm.fabs.f32(float %sub16), !dbg !8497
  %24 = load float*, float** %limit.addr, align 8, !dbg !8498
  %arrayidx17 = getelementptr inbounds float, float* %24, i64 1, !dbg !8498
  %25 = load float, float* %arrayidx17, align 4, !dbg !8498
  %cmp18 = fcmp olt float %23, %25, !dbg !8499
  br i1 %cmp18, label %if.then19, label %if.end20, !dbg !8500

if.then19:                                        ; preds = %land.lhs.true
  store i8 1, i8* %retval, align 1, !dbg !8501
  br label %return, !dbg !8501

if.end20:                                         ; preds = %land.lhs.true, %if.then5
  br label %if.end24, !dbg !8502

if.else:                                          ; preds = %if.then3
  %26 = load i32, i32* %sticky.addr, align 4, !dbg !8503
  %cmp21 = icmp eq i32 %26, 2, !dbg !8505
  br i1 %cmp21, label %if.then22, label %if.end23, !dbg !8506

if.then22:                                        ; preds = %if.else
  store i8 1, i8* %retval, align 1, !dbg !8507
  br label %return, !dbg !8507

if.end23:                                         ; preds = %if.else
  br label %if.end24

if.end24:                                         ; preds = %if.end23, %if.end20
  br label %if.end25, !dbg !8508

if.end25:                                         ; preds = %if.end24, %for.body
  br label %for.inc, !dbg !8509

for.inc:                                          ; preds = %if.end25
  %27 = load i32, i32* %i, align 4, !dbg !8510
  %inc = add nsw i32 %27, 1, !dbg !8510
  store i32 %inc, i32* %i, align 4, !dbg !8510
  br label %for.cond, !dbg !8511, !llvm.loop !8512

for.end:                                          ; preds = %for.cond
  store i8 0, i8* %retval, align 1, !dbg !8514
  br label %return, !dbg !8514

return:                                           ; preds = %for.end, %if.then22, %if.then19, %if.then
  %28 = load i8, i8* %retval, align 1, !dbg !8515
  ret i8 %28, !dbg !8515
}

declare dso_local void @EDBM_select_flush(%struct.BMEditMesh*) #2

declare dso_local void @EDBM_deselect_flush(%struct.BMEditMesh*) #2

declare dso_local void @ED_space_image_get_size(%struct.SpaceImage*, i32*, i32*) #2

declare dso_local void @BM_mesh_elem_table_ensure(%struct.BMesh*, i8 zeroext) #2

declare dso_local %struct.UvVertMap* @BM_uv_vert_map_create(%struct.BMesh*, i8 zeroext, float*) #2

declare dso_local void @BM_mesh_elem_hflag_disable_all(%struct.BMesh*, i8 zeroext, i8 zeroext, i8 zeroext) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct.UvMapVert* @uv_select_edgeloop_vertex_map_get(%struct.UvVertMap* %vmap, %struct.BMFace* %efa, %struct.BMLoop* %l) #0 !dbg !8516 {
entry:
  %retval = alloca %struct.UvMapVert*, align 8
  %vmap.addr = alloca %struct.UvVertMap*, align 8
  %efa.addr = alloca %struct.BMFace*, align 8
  %l.addr = alloca %struct.BMLoop*, align 8
  %iterv = alloca %struct.UvMapVert*, align 8
  %first = alloca %struct.UvMapVert*, align 8
  store %struct.UvVertMap* %vmap, %struct.UvVertMap** %vmap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.UvVertMap** %vmap.addr, metadata !8519, metadata !DIExpression()), !dbg !8520
  store %struct.BMFace* %efa, %struct.BMFace** %efa.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMFace** %efa.addr, metadata !8521, metadata !DIExpression()), !dbg !8522
  store %struct.BMLoop* %l, %struct.BMLoop** %l.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l.addr, metadata !8523, metadata !DIExpression()), !dbg !8524
  call void @llvm.dbg.declare(metadata %struct.UvMapVert** %iterv, metadata !8525, metadata !DIExpression()), !dbg !8526
  call void @llvm.dbg.declare(metadata %struct.UvMapVert** %first, metadata !8527, metadata !DIExpression()), !dbg !8528
  %0 = load %struct.UvVertMap*, %struct.UvVertMap** %vmap.addr, align 8, !dbg !8529
  %1 = load %struct.BMLoop*, %struct.BMLoop** %l.addr, align 8, !dbg !8530
  %v = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %1, i32 0, i32 1, !dbg !8530
  %2 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !8530
  %head = getelementptr inbounds %struct.BMVert, %struct.BMVert* %2, i32 0, i32 0, !dbg !8530
  %call = call i32 @_bm_elem_index_get(%struct.BMHeader* %head), !dbg !8530
  %call1 = call %struct.UvMapVert* @BM_uv_vert_map_at_index(%struct.UvVertMap* %0, i32 %call), !dbg !8531
  store %struct.UvMapVert* %call1, %struct.UvMapVert** %first, align 8, !dbg !8532
  %3 = load %struct.UvMapVert*, %struct.UvMapVert** %first, align 8, !dbg !8533
  store %struct.UvMapVert* %3, %struct.UvMapVert** %iterv, align 8, !dbg !8535
  br label %for.cond, !dbg !8536

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load %struct.UvMapVert*, %struct.UvMapVert** %iterv, align 8, !dbg !8537
  %tobool = icmp ne %struct.UvMapVert* %4, null, !dbg !8539
  br i1 %tobool, label %for.body, label %for.end, !dbg !8539

for.body:                                         ; preds = %for.cond
  %5 = load %struct.UvMapVert*, %struct.UvMapVert** %iterv, align 8, !dbg !8540
  %separate = getelementptr inbounds %struct.UvMapVert, %struct.UvMapVert* %5, i32 0, i32 3, !dbg !8543
  %6 = load i8, i8* %separate, align 1, !dbg !8543
  %tobool2 = icmp ne i8 %6, 0, !dbg !8540
  br i1 %tobool2, label %if.then, label %if.end, !dbg !8544

if.then:                                          ; preds = %for.body
  %7 = load %struct.UvMapVert*, %struct.UvMapVert** %iterv, align 8, !dbg !8545
  store %struct.UvMapVert* %7, %struct.UvMapVert** %first, align 8, !dbg !8546
  br label %if.end, !dbg !8547

if.end:                                           ; preds = %if.then, %for.body
  %8 = load %struct.UvMapVert*, %struct.UvMapVert** %iterv, align 8, !dbg !8548
  %f = getelementptr inbounds %struct.UvMapVert, %struct.UvMapVert* %8, i32 0, i32 1, !dbg !8550
  %9 = load i32, i32* %f, align 8, !dbg !8550
  %10 = load %struct.BMFace*, %struct.BMFace** %efa.addr, align 8, !dbg !8551
  %head3 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %10, i32 0, i32 0, !dbg !8551
  %call4 = call i32 @_bm_elem_index_get(%struct.BMHeader* %head3), !dbg !8551
  %cmp = icmp eq i32 %9, %call4, !dbg !8552
  br i1 %cmp, label %if.then5, label %if.end6, !dbg !8553

if.then5:                                         ; preds = %if.end
  %11 = load %struct.UvMapVert*, %struct.UvMapVert** %first, align 8, !dbg !8554
  store %struct.UvMapVert* %11, %struct.UvMapVert** %retval, align 8, !dbg !8555
  br label %return, !dbg !8555

if.end6:                                          ; preds = %if.end
  br label %for.inc, !dbg !8556

for.inc:                                          ; preds = %if.end6
  %12 = load %struct.UvMapVert*, %struct.UvMapVert** %iterv, align 8, !dbg !8557
  %next = getelementptr inbounds %struct.UvMapVert, %struct.UvMapVert* %12, i32 0, i32 0, !dbg !8558
  %13 = load %struct.UvMapVert*, %struct.UvMapVert** %next, align 8, !dbg !8558
  store %struct.UvMapVert* %13, %struct.UvMapVert** %iterv, align 8, !dbg !8559
  br label %for.cond, !dbg !8560, !llvm.loop !8561

for.end:                                          ; preds = %for.cond
  store %struct.UvMapVert* null, %struct.UvMapVert** %retval, align 8, !dbg !8563
  br label %return, !dbg !8563

return:                                           ; preds = %for.end, %if.then5
  %14 = load %struct.UvMapVert*, %struct.UvMapVert** %retval, align 8, !dbg !8564
  ret %struct.UvMapVert* %14, !dbg !8564
}

; Function Attrs: noinline nounwind uwtable
define internal void @uv_select_edgeloop_vertex_loop_flag(%struct.UvMapVert* %first) #0 !dbg !8565 {
entry:
  %first.addr = alloca %struct.UvMapVert*, align 8
  %iterv = alloca %struct.UvMapVert*, align 8
  %count = alloca i32, align 4
  store %struct.UvMapVert* %first, %struct.UvMapVert** %first.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.UvMapVert** %first.addr, metadata !8568, metadata !DIExpression()), !dbg !8569
  call void @llvm.dbg.declare(metadata %struct.UvMapVert** %iterv, metadata !8570, metadata !DIExpression()), !dbg !8571
  call void @llvm.dbg.declare(metadata i32* %count, metadata !8572, metadata !DIExpression()), !dbg !8573
  store i32 0, i32* %count, align 4, !dbg !8573
  %0 = load %struct.UvMapVert*, %struct.UvMapVert** %first.addr, align 8, !dbg !8574
  store %struct.UvMapVert* %0, %struct.UvMapVert** %iterv, align 8, !dbg !8576
  br label %for.cond, !dbg !8577

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load %struct.UvMapVert*, %struct.UvMapVert** %iterv, align 8, !dbg !8578
  %tobool = icmp ne %struct.UvMapVert* %1, null, !dbg !8580
  br i1 %tobool, label %for.body, label %for.end, !dbg !8580

for.body:                                         ; preds = %for.cond
  %2 = load %struct.UvMapVert*, %struct.UvMapVert** %iterv, align 8, !dbg !8581
  %separate = getelementptr inbounds %struct.UvMapVert, %struct.UvMapVert* %2, i32 0, i32 3, !dbg !8584
  %3 = load i8, i8* %separate, align 1, !dbg !8584
  %conv = zext i8 %3 to i32, !dbg !8581
  %tobool1 = icmp ne i32 %conv, 0, !dbg !8581
  br i1 %tobool1, label %land.lhs.true, label %if.end, !dbg !8585

land.lhs.true:                                    ; preds = %for.body
  %4 = load %struct.UvMapVert*, %struct.UvMapVert** %iterv, align 8, !dbg !8586
  %5 = load %struct.UvMapVert*, %struct.UvMapVert** %first.addr, align 8, !dbg !8587
  %cmp = icmp ne %struct.UvMapVert* %4, %5, !dbg !8588
  br i1 %cmp, label %if.then, label %if.end, !dbg !8589

if.then:                                          ; preds = %land.lhs.true
  br label %for.end, !dbg !8590

if.end:                                           ; preds = %land.lhs.true, %for.body
  %6 = load i32, i32* %count, align 4, !dbg !8591
  %inc = add nsw i32 %6, 1, !dbg !8591
  store i32 %inc, i32* %count, align 4, !dbg !8591
  br label %for.inc, !dbg !8592

for.inc:                                          ; preds = %if.end
  %7 = load %struct.UvMapVert*, %struct.UvMapVert** %iterv, align 8, !dbg !8593
  %next = getelementptr inbounds %struct.UvMapVert, %struct.UvMapVert* %7, i32 0, i32 0, !dbg !8594
  %8 = load %struct.UvMapVert*, %struct.UvMapVert** %next, align 8, !dbg !8594
  store %struct.UvMapVert* %8, %struct.UvMapVert** %iterv, align 8, !dbg !8595
  br label %for.cond, !dbg !8596, !llvm.loop !8597

for.end:                                          ; preds = %if.then, %for.cond
  %9 = load i32, i32* %count, align 4, !dbg !8599
  %cmp3 = icmp slt i32 %9, 5, !dbg !8601
  br i1 %cmp3, label %if.then5, label %if.end6, !dbg !8602

if.then5:                                         ; preds = %for.end
  %10 = load %struct.UvMapVert*, %struct.UvMapVert** %first.addr, align 8, !dbg !8603
  %flag = getelementptr inbounds %struct.UvMapVert, %struct.UvMapVert* %10, i32 0, i32 4, !dbg !8604
  store i8 1, i8* %flag, align 2, !dbg !8605
  br label %if.end6, !dbg !8603

if.end6:                                          ; preds = %if.then5, %for.end
  ret void, !dbg !8606
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @uv_select_edgeloop_edge_tag_faces(%struct.BMEditMesh* %em, %struct.UvMapVert* %first1, %struct.UvMapVert* %first2, i32* %totface) #0 !dbg !8607 {
entry:
  %retval = alloca i8, align 1
  %em.addr = alloca %struct.BMEditMesh*, align 8
  %first1.addr = alloca %struct.UvMapVert*, align 8
  %first2.addr = alloca %struct.UvMapVert*, align 8
  %totface.addr = alloca i32*, align 8
  %iterv1 = alloca %struct.UvMapVert*, align 8
  %iterv2 = alloca %struct.UvMapVert*, align 8
  %efa = alloca %struct.BMFace*, align 8
  %tot = alloca i32, align 4
  store %struct.BMEditMesh* %em, %struct.BMEditMesh** %em.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em.addr, metadata !8610, metadata !DIExpression()), !dbg !8611
  store %struct.UvMapVert* %first1, %struct.UvMapVert** %first1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.UvMapVert** %first1.addr, metadata !8612, metadata !DIExpression()), !dbg !8613
  store %struct.UvMapVert* %first2, %struct.UvMapVert** %first2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.UvMapVert** %first2.addr, metadata !8614, metadata !DIExpression()), !dbg !8615
  store i32* %totface, i32** %totface.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %totface.addr, metadata !8616, metadata !DIExpression()), !dbg !8617
  call void @llvm.dbg.declare(metadata %struct.UvMapVert** %iterv1, metadata !8618, metadata !DIExpression()), !dbg !8619
  call void @llvm.dbg.declare(metadata %struct.UvMapVert** %iterv2, metadata !8620, metadata !DIExpression()), !dbg !8621
  call void @llvm.dbg.declare(metadata %struct.BMFace** %efa, metadata !8622, metadata !DIExpression()), !dbg !8623
  call void @llvm.dbg.declare(metadata i32* %tot, metadata !8624, metadata !DIExpression()), !dbg !8625
  store i32 0, i32* %tot, align 4, !dbg !8625
  %0 = load %struct.UvMapVert*, %struct.UvMapVert** %first1.addr, align 8, !dbg !8626
  store %struct.UvMapVert* %0, %struct.UvMapVert** %iterv1, align 8, !dbg !8628
  br label %for.cond, !dbg !8629

for.cond:                                         ; preds = %for.inc24, %entry
  %1 = load %struct.UvMapVert*, %struct.UvMapVert** %iterv1, align 8, !dbg !8630
  %tobool = icmp ne %struct.UvMapVert* %1, null, !dbg !8632
  br i1 %tobool, label %for.body, label %for.end26, !dbg !8632

for.body:                                         ; preds = %for.cond
  %2 = load %struct.UvMapVert*, %struct.UvMapVert** %iterv1, align 8, !dbg !8633
  %separate = getelementptr inbounds %struct.UvMapVert, %struct.UvMapVert* %2, i32 0, i32 3, !dbg !8636
  %3 = load i8, i8* %separate, align 1, !dbg !8636
  %conv = zext i8 %3 to i32, !dbg !8633
  %tobool1 = icmp ne i32 %conv, 0, !dbg !8633
  br i1 %tobool1, label %land.lhs.true, label %if.end, !dbg !8637

land.lhs.true:                                    ; preds = %for.body
  %4 = load %struct.UvMapVert*, %struct.UvMapVert** %iterv1, align 8, !dbg !8638
  %5 = load %struct.UvMapVert*, %struct.UvMapVert** %first1.addr, align 8, !dbg !8639
  %cmp = icmp ne %struct.UvMapVert* %4, %5, !dbg !8640
  br i1 %cmp, label %if.then, label %if.end, !dbg !8641

if.then:                                          ; preds = %land.lhs.true
  br label %for.end26, !dbg !8642

if.end:                                           ; preds = %land.lhs.true, %for.body
  %6 = load %struct.UvMapVert*, %struct.UvMapVert** %first2.addr, align 8, !dbg !8643
  store %struct.UvMapVert* %6, %struct.UvMapVert** %iterv2, align 8, !dbg !8645
  br label %for.cond3, !dbg !8646

for.cond3:                                        ; preds = %for.inc, %if.end
  %7 = load %struct.UvMapVert*, %struct.UvMapVert** %iterv2, align 8, !dbg !8647
  %tobool4 = icmp ne %struct.UvMapVert* %7, null, !dbg !8649
  br i1 %tobool4, label %for.body5, label %for.end, !dbg !8649

for.body5:                                        ; preds = %for.cond3
  %8 = load %struct.UvMapVert*, %struct.UvMapVert** %iterv2, align 8, !dbg !8650
  %separate6 = getelementptr inbounds %struct.UvMapVert, %struct.UvMapVert* %8, i32 0, i32 3, !dbg !8653
  %9 = load i8, i8* %separate6, align 1, !dbg !8653
  %conv7 = zext i8 %9 to i32, !dbg !8650
  %tobool8 = icmp ne i32 %conv7, 0, !dbg !8650
  br i1 %tobool8, label %land.lhs.true9, label %if.end13, !dbg !8654

land.lhs.true9:                                   ; preds = %for.body5
  %10 = load %struct.UvMapVert*, %struct.UvMapVert** %iterv2, align 8, !dbg !8655
  %11 = load %struct.UvMapVert*, %struct.UvMapVert** %first2.addr, align 8, !dbg !8656
  %cmp10 = icmp ne %struct.UvMapVert* %10, %11, !dbg !8657
  br i1 %cmp10, label %if.then12, label %if.end13, !dbg !8658

if.then12:                                        ; preds = %land.lhs.true9
  br label %for.end, !dbg !8659

if.end13:                                         ; preds = %land.lhs.true9, %for.body5
  %12 = load %struct.UvMapVert*, %struct.UvMapVert** %iterv1, align 8, !dbg !8660
  %f = getelementptr inbounds %struct.UvMapVert, %struct.UvMapVert* %12, i32 0, i32 1, !dbg !8662
  %13 = load i32, i32* %f, align 8, !dbg !8662
  %14 = load %struct.UvMapVert*, %struct.UvMapVert** %iterv2, align 8, !dbg !8663
  %f14 = getelementptr inbounds %struct.UvMapVert, %struct.UvMapVert* %14, i32 0, i32 1, !dbg !8664
  %15 = load i32, i32* %f14, align 8, !dbg !8664
  %cmp15 = icmp eq i32 %13, %15, !dbg !8665
  br i1 %cmp15, label %if.then17, label %if.end23, !dbg !8666

if.then17:                                        ; preds = %if.end13
  %16 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !8667
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %16, i32 0, i32 0, !dbg !8669
  %17 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !8669
  %18 = load %struct.UvMapVert*, %struct.UvMapVert** %iterv1, align 8, !dbg !8670
  %f18 = getelementptr inbounds %struct.UvMapVert, %struct.UvMapVert* %18, i32 0, i32 1, !dbg !8671
  %19 = load i32, i32* %f18, align 8, !dbg !8671
  %call = call %struct.BMFace* @BM_face_at_index(%struct.BMesh* %17, i32 %19), !dbg !8672
  store %struct.BMFace* %call, %struct.BMFace** %efa, align 8, !dbg !8673
  %20 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !8674
  %head = getelementptr inbounds %struct.BMFace, %struct.BMFace* %20, i32 0, i32 0, !dbg !8674
  %call19 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head, i8 zeroext 16), !dbg !8674
  %tobool20 = icmp ne i8 %call19, 0, !dbg !8674
  br i1 %tobool20, label %if.then21, label %if.end22, !dbg !8676

if.then21:                                        ; preds = %if.then17
  store i8 0, i8* %retval, align 1, !dbg !8677
  br label %return, !dbg !8677

if.end22:                                         ; preds = %if.then17
  %21 = load i32, i32* %tot, align 4, !dbg !8678
  %inc = add nsw i32 %21, 1, !dbg !8678
  store i32 %inc, i32* %tot, align 4, !dbg !8678
  br label %for.end, !dbg !8679

if.end23:                                         ; preds = %if.end13
  br label %for.inc, !dbg !8680

for.inc:                                          ; preds = %if.end23
  %22 = load %struct.UvMapVert*, %struct.UvMapVert** %iterv2, align 8, !dbg !8681
  %next = getelementptr inbounds %struct.UvMapVert, %struct.UvMapVert* %22, i32 0, i32 0, !dbg !8682
  %23 = load %struct.UvMapVert*, %struct.UvMapVert** %next, align 8, !dbg !8682
  store %struct.UvMapVert* %23, %struct.UvMapVert** %iterv2, align 8, !dbg !8683
  br label %for.cond3, !dbg !8684, !llvm.loop !8685

for.end:                                          ; preds = %if.end22, %if.then12, %for.cond3
  br label %for.inc24, !dbg !8687

for.inc24:                                        ; preds = %for.end
  %24 = load %struct.UvMapVert*, %struct.UvMapVert** %iterv1, align 8, !dbg !8688
  %next25 = getelementptr inbounds %struct.UvMapVert, %struct.UvMapVert* %24, i32 0, i32 0, !dbg !8689
  %25 = load %struct.UvMapVert*, %struct.UvMapVert** %next25, align 8, !dbg !8689
  store %struct.UvMapVert* %25, %struct.UvMapVert** %iterv1, align 8, !dbg !8690
  br label %for.cond, !dbg !8691, !llvm.loop !8692

for.end26:                                        ; preds = %if.then, %for.cond
  %26 = load i32*, i32** %totface.addr, align 8, !dbg !8694
  %27 = load i32, i32* %26, align 4, !dbg !8696
  %cmp27 = icmp eq i32 %27, 0, !dbg !8697
  br i1 %cmp27, label %if.then29, label %if.else, !dbg !8698

if.then29:                                        ; preds = %for.end26
  %28 = load i32, i32* %tot, align 4, !dbg !8699
  %29 = load i32*, i32** %totface.addr, align 8, !dbg !8700
  store i32 %28, i32* %29, align 4, !dbg !8701
  br label %if.end34, !dbg !8702

if.else:                                          ; preds = %for.end26
  %30 = load i32, i32* %tot, align 4, !dbg !8703
  %31 = load i32*, i32** %totface.addr, align 8, !dbg !8705
  %32 = load i32, i32* %31, align 4, !dbg !8706
  %cmp30 = icmp ne i32 %30, %32, !dbg !8707
  br i1 %cmp30, label %if.then32, label %if.end33, !dbg !8708

if.then32:                                        ; preds = %if.else
  store i8 0, i8* %retval, align 1, !dbg !8709
  br label %return, !dbg !8709

if.end33:                                         ; preds = %if.else
  br label %if.end34

if.end34:                                         ; preds = %if.end33, %if.then29
  %33 = load %struct.UvMapVert*, %struct.UvMapVert** %first1.addr, align 8, !dbg !8710
  store %struct.UvMapVert* %33, %struct.UvMapVert** %iterv1, align 8, !dbg !8712
  br label %for.cond35, !dbg !8713

for.cond35:                                       ; preds = %for.inc70, %if.end34
  %34 = load %struct.UvMapVert*, %struct.UvMapVert** %iterv1, align 8, !dbg !8714
  %tobool36 = icmp ne %struct.UvMapVert* %34, null, !dbg !8716
  br i1 %tobool36, label %for.body37, label %for.end72, !dbg !8716

for.body37:                                       ; preds = %for.cond35
  %35 = load %struct.UvMapVert*, %struct.UvMapVert** %iterv1, align 8, !dbg !8717
  %separate38 = getelementptr inbounds %struct.UvMapVert, %struct.UvMapVert* %35, i32 0, i32 3, !dbg !8720
  %36 = load i8, i8* %separate38, align 1, !dbg !8720
  %conv39 = zext i8 %36 to i32, !dbg !8717
  %tobool40 = icmp ne i32 %conv39, 0, !dbg !8717
  br i1 %tobool40, label %land.lhs.true41, label %if.end45, !dbg !8721

land.lhs.true41:                                  ; preds = %for.body37
  %37 = load %struct.UvMapVert*, %struct.UvMapVert** %iterv1, align 8, !dbg !8722
  %38 = load %struct.UvMapVert*, %struct.UvMapVert** %first1.addr, align 8, !dbg !8723
  %cmp42 = icmp ne %struct.UvMapVert* %37, %38, !dbg !8724
  br i1 %cmp42, label %if.then44, label %if.end45, !dbg !8725

if.then44:                                        ; preds = %land.lhs.true41
  br label %for.end72, !dbg !8726

if.end45:                                         ; preds = %land.lhs.true41, %for.body37
  %39 = load %struct.UvMapVert*, %struct.UvMapVert** %first2.addr, align 8, !dbg !8727
  store %struct.UvMapVert* %39, %struct.UvMapVert** %iterv2, align 8, !dbg !8729
  br label %for.cond46, !dbg !8730

for.cond46:                                       ; preds = %for.inc67, %if.end45
  %40 = load %struct.UvMapVert*, %struct.UvMapVert** %iterv2, align 8, !dbg !8731
  %tobool47 = icmp ne %struct.UvMapVert* %40, null, !dbg !8733
  br i1 %tobool47, label %for.body48, label %for.end69, !dbg !8733

for.body48:                                       ; preds = %for.cond46
  %41 = load %struct.UvMapVert*, %struct.UvMapVert** %iterv2, align 8, !dbg !8734
  %separate49 = getelementptr inbounds %struct.UvMapVert, %struct.UvMapVert* %41, i32 0, i32 3, !dbg !8737
  %42 = load i8, i8* %separate49, align 1, !dbg !8737
  %conv50 = zext i8 %42 to i32, !dbg !8734
  %tobool51 = icmp ne i32 %conv50, 0, !dbg !8734
  br i1 %tobool51, label %land.lhs.true52, label %if.end56, !dbg !8738

land.lhs.true52:                                  ; preds = %for.body48
  %43 = load %struct.UvMapVert*, %struct.UvMapVert** %iterv2, align 8, !dbg !8739
  %44 = load %struct.UvMapVert*, %struct.UvMapVert** %first2.addr, align 8, !dbg !8740
  %cmp53 = icmp ne %struct.UvMapVert* %43, %44, !dbg !8741
  br i1 %cmp53, label %if.then55, label %if.end56, !dbg !8742

if.then55:                                        ; preds = %land.lhs.true52
  br label %for.end69, !dbg !8743

if.end56:                                         ; preds = %land.lhs.true52, %for.body48
  %45 = load %struct.UvMapVert*, %struct.UvMapVert** %iterv1, align 8, !dbg !8744
  %f57 = getelementptr inbounds %struct.UvMapVert, %struct.UvMapVert* %45, i32 0, i32 1, !dbg !8746
  %46 = load i32, i32* %f57, align 8, !dbg !8746
  %47 = load %struct.UvMapVert*, %struct.UvMapVert** %iterv2, align 8, !dbg !8747
  %f58 = getelementptr inbounds %struct.UvMapVert, %struct.UvMapVert* %47, i32 0, i32 1, !dbg !8748
  %48 = load i32, i32* %f58, align 8, !dbg !8748
  %cmp59 = icmp eq i32 %46, %48, !dbg !8749
  br i1 %cmp59, label %if.then61, label %if.end66, !dbg !8750

if.then61:                                        ; preds = %if.end56
  %49 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !8751
  %bm62 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %49, i32 0, i32 0, !dbg !8753
  %50 = load %struct.BMesh*, %struct.BMesh** %bm62, align 8, !dbg !8753
  %51 = load %struct.UvMapVert*, %struct.UvMapVert** %iterv1, align 8, !dbg !8754
  %f63 = getelementptr inbounds %struct.UvMapVert, %struct.UvMapVert* %51, i32 0, i32 1, !dbg !8755
  %52 = load i32, i32* %f63, align 8, !dbg !8755
  %call64 = call %struct.BMFace* @BM_face_at_index(%struct.BMesh* %50, i32 %52), !dbg !8756
  store %struct.BMFace* %call64, %struct.BMFace** %efa, align 8, !dbg !8757
  %53 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !8758
  %head65 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %53, i32 0, i32 0, !dbg !8758
  call void @_bm_elem_flag_enable(%struct.BMHeader* %head65, i8 zeroext 16), !dbg !8758
  br label %for.end69, !dbg !8759

if.end66:                                         ; preds = %if.end56
  br label %for.inc67, !dbg !8760

for.inc67:                                        ; preds = %if.end66
  %54 = load %struct.UvMapVert*, %struct.UvMapVert** %iterv2, align 8, !dbg !8761
  %next68 = getelementptr inbounds %struct.UvMapVert, %struct.UvMapVert* %54, i32 0, i32 0, !dbg !8762
  %55 = load %struct.UvMapVert*, %struct.UvMapVert** %next68, align 8, !dbg !8762
  store %struct.UvMapVert* %55, %struct.UvMapVert** %iterv2, align 8, !dbg !8763
  br label %for.cond46, !dbg !8764, !llvm.loop !8765

for.end69:                                        ; preds = %if.then61, %if.then55, %for.cond46
  br label %for.inc70, !dbg !8767

for.inc70:                                        ; preds = %for.end69
  %56 = load %struct.UvMapVert*, %struct.UvMapVert** %iterv1, align 8, !dbg !8768
  %next71 = getelementptr inbounds %struct.UvMapVert, %struct.UvMapVert* %56, i32 0, i32 0, !dbg !8769
  %57 = load %struct.UvMapVert*, %struct.UvMapVert** %next71, align 8, !dbg !8769
  store %struct.UvMapVert* %57, %struct.UvMapVert** %iterv1, align 8, !dbg !8770
  br label %for.cond35, !dbg !8771, !llvm.loop !8772

for.end72:                                        ; preds = %if.then44, %for.cond35
  store i8 1, i8* %retval, align 1, !dbg !8774
  br label %return, !dbg !8774

return:                                           ; preds = %for.end72, %if.then32, %if.then21
  %58 = load i8, i8* %retval, align 1, !dbg !8775
  ret i8 %58, !dbg !8775
}

; Function Attrs: noinline nounwind uwtable
define internal void @_bm_elem_flag_enable(%struct.BMHeader* %head, i8 zeroext %hflag) #0 !dbg !8776 {
entry:
  %head.addr = alloca %struct.BMHeader*, align 8
  %hflag.addr = alloca i8, align 1
  store %struct.BMHeader* %head, %struct.BMHeader** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMHeader** %head.addr, metadata !8780, metadata !DIExpression()), !dbg !8781
  store i8 %hflag, i8* %hflag.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %hflag.addr, metadata !8782, metadata !DIExpression()), !dbg !8783
  %0 = load i8, i8* %hflag.addr, align 1, !dbg !8784
  %conv = zext i8 %0 to i32, !dbg !8784
  %1 = load %struct.BMHeader*, %struct.BMHeader** %head.addr, align 8, !dbg !8785
  %hflag1 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %1, i32 0, i32 3, !dbg !8786
  %2 = load i8, i8* %hflag1, align 1, !dbg !8787
  %conv2 = zext i8 %2 to i32, !dbg !8787
  %or = or i32 %conv2, %conv, !dbg !8787
  %conv3 = trunc i32 %or to i8, !dbg !8787
  store i8 %conv3, i8* %hflag1, align 1, !dbg !8787
  ret void, !dbg !8788
}

declare dso_local void @BM_uv_vert_map_free(%struct.UvVertMap*) #2

declare dso_local %struct.UvMapVert* @BM_uv_vert_map_at_index(%struct.UvVertMap*, i32) #2

declare dso_local %struct.BMFace* @BM_face_at_index(%struct.BMesh*, i32) #2

declare dso_local %struct.ARegion* @CTX_wm_region(%struct.bContext*) #2

declare dso_local void @UI_view2d_region_to_view(%struct.View2D*, float, float, float*, float*) #2

declare dso_local void @RNA_float_set_array(%struct.PointerRNA*, i8*, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @uv_select_loop_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !8789 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %co = alloca [2 x float], align 4
  %extend = alloca i8, align 1
  %loop = alloca i8, align 1
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !8790, metadata !DIExpression()), !dbg !8791
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !8792, metadata !DIExpression()), !dbg !8793
  call void @llvm.dbg.declare(metadata [2 x float]* %co, metadata !8794, metadata !DIExpression()), !dbg !8795
  call void @llvm.dbg.declare(metadata i8* %extend, metadata !8796, metadata !DIExpression()), !dbg !8797
  call void @llvm.dbg.declare(metadata i8* %loop, metadata !8798, metadata !DIExpression()), !dbg !8799
  %0 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8800
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %0, i32 0, i32 7, !dbg !8801
  %1 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !8801
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %co, i64 0, i64 0, !dbg !8802
  call void @RNA_float_get_array(%struct.PointerRNA* %1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.42, i64 0, i64 0), float* %arraydecay), !dbg !8803
  %2 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8804
  %ptr1 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %2, i32 0, i32 7, !dbg !8805
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr1, align 8, !dbg !8805
  %call = call i32 @RNA_boolean_get(%struct.PointerRNA* %3, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6, i64 0, i64 0)), !dbg !8806
  %conv = trunc i32 %call to i8, !dbg !8806
  store i8 %conv, i8* %extend, align 1, !dbg !8807
  store i8 1, i8* %loop, align 1, !dbg !8808
  %4 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8809
  %arraydecay2 = getelementptr inbounds [2 x float], [2 x float]* %co, i64 0, i64 0, !dbg !8810
  %5 = load i8, i8* %extend, align 1, !dbg !8811
  %6 = load i8, i8* %loop, align 1, !dbg !8812
  %call3 = call i32 @uv_mouse_select(%struct.bContext* %4, float* %arraydecay2, i8 zeroext %5, i8 zeroext %6), !dbg !8813
  ret i32 %call3, !dbg !8814
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @uv_select_loop_invoke(%struct.bContext* %C, %struct.wmOperator* %op, %struct.wmEvent* %event) #0 !dbg !8815 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %event.addr = alloca %struct.wmEvent*, align 8
  %ar = alloca %struct.ARegion*, align 8
  %co = alloca [2 x float], align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !8816, metadata !DIExpression()), !dbg !8817
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !8818, metadata !DIExpression()), !dbg !8819
  store %struct.wmEvent* %event, %struct.wmEvent** %event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event.addr, metadata !8820, metadata !DIExpression()), !dbg !8821
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar, metadata !8822, metadata !DIExpression()), !dbg !8823
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8824
  %call = call %struct.ARegion* @CTX_wm_region(%struct.bContext* %0), !dbg !8825
  store %struct.ARegion* %call, %struct.ARegion** %ar, align 8, !dbg !8823
  call void @llvm.dbg.declare(metadata [2 x float]* %co, metadata !8826, metadata !DIExpression()), !dbg !8827
  %1 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !8828
  %v2d = getelementptr inbounds %struct.ARegion, %struct.ARegion* %1, i32 0, i32 2, !dbg !8829
  %2 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !8830
  %mval = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %2, i32 0, i32 6, !dbg !8831
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %mval, i64 0, i64 0, !dbg !8830
  %3 = load i32, i32* %arrayidx, align 4, !dbg !8830
  %conv = sitofp i32 %3 to float, !dbg !8830
  %4 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !8832
  %mval1 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %4, i32 0, i32 6, !dbg !8833
  %arrayidx2 = getelementptr inbounds [2 x i32], [2 x i32]* %mval1, i64 0, i64 1, !dbg !8832
  %5 = load i32, i32* %arrayidx2, align 4, !dbg !8832
  %conv3 = sitofp i32 %5 to float, !dbg !8832
  %arrayidx4 = getelementptr inbounds [2 x float], [2 x float]* %co, i64 0, i64 0, !dbg !8834
  %arrayidx5 = getelementptr inbounds [2 x float], [2 x float]* %co, i64 0, i64 1, !dbg !8835
  call void @UI_view2d_region_to_view(%struct.View2D* %v2d, float %conv, float %conv3, float* %arrayidx4, float* %arrayidx5), !dbg !8836
  %6 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8837
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %6, i32 0, i32 7, !dbg !8838
  %7 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !8838
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %co, i64 0, i64 0, !dbg !8839
  call void @RNA_float_set_array(%struct.PointerRNA* %7, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.42, i64 0, i64 0), float* %arraydecay), !dbg !8840
  %8 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8841
  %9 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8842
  %call6 = call i32 @uv_select_loop_exec(%struct.bContext* %8, %struct.wmOperator* %9), !dbg !8843
  ret i32 %call6, !dbg !8844
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @uv_select_linked_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !8845 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !8846, metadata !DIExpression()), !dbg !8847
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !8848, metadata !DIExpression()), !dbg !8849
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8850
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8851
  %call = call i32 @uv_select_linked_internal(%struct.bContext* %0, %struct.wmOperator* %1, %struct.wmEvent* null, i32 0), !dbg !8852
  ret i32 %call, !dbg !8853
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @uv_select_linked_internal(%struct.bContext* %C, %struct.wmOperator* %op, %struct.wmEvent* %event, i32 %pick) #0 !dbg !8854 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %event.addr = alloca %struct.wmEvent*, align 8
  %pick.addr = alloca i32, align 4
  %sima = alloca %struct.SpaceImage*, align 8
  %scene = alloca %struct.Scene*, align 8
  %ts = alloca %struct.ToolSettings*, align 8
  %obedit = alloca %struct.Object*, align 8
  %ima = alloca %struct.Image*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  %limit = alloca [2 x float], align 4
  %extend = alloca i32, align 4
  %hit = alloca %struct.NearestHit, align 8
  %hit_p = alloca %struct.NearestHit*, align 8
  %co = alloca [2 x float], align 4
  %ar = alloca %struct.ARegion*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !8857, metadata !DIExpression()), !dbg !8858
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !8859, metadata !DIExpression()), !dbg !8860
  store %struct.wmEvent* %event, %struct.wmEvent** %event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event.addr, metadata !8861, metadata !DIExpression()), !dbg !8862
  store i32 %pick, i32* %pick.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pick.addr, metadata !8863, metadata !DIExpression()), !dbg !8864
  call void @llvm.dbg.declare(metadata %struct.SpaceImage** %sima, metadata !8865, metadata !DIExpression()), !dbg !8866
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8867
  %call = call %struct.SpaceImage* @CTX_wm_space_image(%struct.bContext* %0), !dbg !8868
  store %struct.SpaceImage* %call, %struct.SpaceImage** %sima, align 8, !dbg !8866
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene, metadata !8869, metadata !DIExpression()), !dbg !8870
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8871
  %call1 = call %struct.Scene* @CTX_data_scene(%struct.bContext* %1), !dbg !8872
  store %struct.Scene* %call1, %struct.Scene** %scene, align 8, !dbg !8870
  call void @llvm.dbg.declare(metadata %struct.ToolSettings** %ts, metadata !8873, metadata !DIExpression()), !dbg !8874
  %2 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !8875
  %toolsettings = getelementptr inbounds %struct.Scene, %struct.Scene* %2, i32 0, i32 20, !dbg !8876
  %3 = load %struct.ToolSettings*, %struct.ToolSettings** %toolsettings, align 8, !dbg !8876
  store %struct.ToolSettings* %3, %struct.ToolSettings** %ts, align 8, !dbg !8874
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !8877, metadata !DIExpression()), !dbg !8878
  %4 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8879
  %call2 = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %4), !dbg !8880
  store %struct.Object* %call2, %struct.Object** %obedit, align 8, !dbg !8878
  call void @llvm.dbg.declare(metadata %struct.Image** %ima, metadata !8881, metadata !DIExpression()), !dbg !8882
  %5 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8883
  %call3 = call %struct.Image* @CTX_data_edit_image(%struct.bContext* %5), !dbg !8884
  store %struct.Image* %call3, %struct.Image** %ima, align 8, !dbg !8882
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !8885, metadata !DIExpression()), !dbg !8886
  %6 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !8887
  %call4 = call %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object* %6), !dbg !8888
  store %struct.BMEditMesh* %call4, %struct.BMEditMesh** %em, align 8, !dbg !8886
  call void @llvm.dbg.declare(metadata [2 x float]* %limit, metadata !8889, metadata !DIExpression()), !dbg !8890
  call void @llvm.dbg.declare(metadata i32* %extend, metadata !8891, metadata !DIExpression()), !dbg !8892
  call void @llvm.dbg.declare(metadata %struct.NearestHit* %hit, metadata !8893, metadata !DIExpression()), !dbg !8894
  call void @llvm.dbg.declare(metadata %struct.NearestHit** %hit_p, metadata !8895, metadata !DIExpression()), !dbg !8896
  store %struct.NearestHit* null, %struct.NearestHit** %hit_p, align 8, !dbg !8896
  %7 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !8897
  %uv_flag = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %7, i32 0, i32 11, !dbg !8899
  %8 = load i8, i8* %uv_flag, align 2, !dbg !8899
  %conv = zext i8 %8 to i32, !dbg !8897
  %and = and i32 %conv, 1, !dbg !8900
  %tobool = icmp ne i32 %and, 0, !dbg !8900
  br i1 %tobool, label %if.then, label %if.end, !dbg !8901

if.then:                                          ; preds = %entry
  %9 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8902
  %reports = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %9, i32 0, i32 8, !dbg !8904
  %10 = load %struct.ReportList*, %struct.ReportList** %reports, align 8, !dbg !8904
  call void @BKE_report(%struct.ReportList* %10, i32 32, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.51, i64 0, i64 0)), !dbg !8905
  store i32 2, i32* %retval, align 4, !dbg !8906
  br label %return, !dbg !8906

if.end:                                           ; preds = %entry
  %11 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8907
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %11, i32 0, i32 7, !dbg !8908
  %12 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !8908
  %call5 = call i32 @RNA_boolean_get(%struct.PointerRNA* %12, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6, i64 0, i64 0)), !dbg !8909
  store i32 %call5, i32* %extend, align 4, !dbg !8910
  %13 = load %struct.SpaceImage*, %struct.SpaceImage** %sima, align 8, !dbg !8911
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %limit, i64 0, i64 0, !dbg !8912
  call void @uvedit_pixel_to_float(%struct.SpaceImage* %13, float* %arraydecay, float 0x3FA99999A0000000), !dbg !8913
  %14 = load i32, i32* %pick.addr, align 4, !dbg !8914
  %tobool6 = icmp ne i32 %14, 0, !dbg !8914
  br i1 %tobool6, label %if.then7, label %if.end23, !dbg !8916

if.then7:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata [2 x float]* %co, metadata !8917, metadata !DIExpression()), !dbg !8919
  %15 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !8920
  %tobool8 = icmp ne %struct.wmEvent* %15, null, !dbg !8920
  br i1 %tobool8, label %if.then9, label %if.else, !dbg !8922

if.then9:                                         ; preds = %if.then7
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar, metadata !8923, metadata !DIExpression()), !dbg !8925
  %16 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8926
  %call10 = call %struct.ARegion* @CTX_wm_region(%struct.bContext* %16), !dbg !8927
  store %struct.ARegion* %call10, %struct.ARegion** %ar, align 8, !dbg !8925
  %17 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !8928
  %v2d = getelementptr inbounds %struct.ARegion, %struct.ARegion* %17, i32 0, i32 2, !dbg !8929
  %18 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !8930
  %mval = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %18, i32 0, i32 6, !dbg !8931
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %mval, i64 0, i64 0, !dbg !8930
  %19 = load i32, i32* %arrayidx, align 4, !dbg !8930
  %conv11 = sitofp i32 %19 to float, !dbg !8930
  %20 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !8932
  %mval12 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %20, i32 0, i32 6, !dbg !8933
  %arrayidx13 = getelementptr inbounds [2 x i32], [2 x i32]* %mval12, i64 0, i64 1, !dbg !8932
  %21 = load i32, i32* %arrayidx13, align 4, !dbg !8932
  %conv14 = sitofp i32 %21 to float, !dbg !8932
  %arrayidx15 = getelementptr inbounds [2 x float], [2 x float]* %co, i64 0, i64 0, !dbg !8934
  %arrayidx16 = getelementptr inbounds [2 x float], [2 x float]* %co, i64 0, i64 1, !dbg !8935
  call void @UI_view2d_region_to_view(%struct.View2D* %v2d, float %conv11, float %conv14, float* %arrayidx15, float* %arrayidx16), !dbg !8936
  %22 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8937
  %ptr17 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %22, i32 0, i32 7, !dbg !8938
  %23 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr17, align 8, !dbg !8938
  %arraydecay18 = getelementptr inbounds [2 x float], [2 x float]* %co, i64 0, i64 0, !dbg !8939
  call void @RNA_float_set_array(%struct.PointerRNA* %23, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.42, i64 0, i64 0), float* %arraydecay18), !dbg !8940
  br label %if.end21, !dbg !8941

if.else:                                          ; preds = %if.then7
  %24 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8942
  %ptr19 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %24, i32 0, i32 7, !dbg !8944
  %25 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr19, align 8, !dbg !8944
  %arraydecay20 = getelementptr inbounds [2 x float], [2 x float]* %co, i64 0, i64 0, !dbg !8945
  call void @RNA_float_get_array(%struct.PointerRNA* %25, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.42, i64 0, i64 0), float* %arraydecay20), !dbg !8946
  br label %if.end21

if.end21:                                         ; preds = %if.else, %if.then9
  %26 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !8947
  %27 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !8948
  %28 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !8949
  %arraydecay22 = getelementptr inbounds [2 x float], [2 x float]* %co, i64 0, i64 0, !dbg !8950
  call void @uv_find_nearest_edge(%struct.Scene* %26, %struct.Image* %27, %struct.BMEditMesh* %28, float* %arraydecay22, %struct.NearestHit* %hit), !dbg !8951
  store %struct.NearestHit* %hit, %struct.NearestHit** %hit_p, align 8, !dbg !8952
  br label %if.end23, !dbg !8953

if.end23:                                         ; preds = %if.end21, %if.end
  %29 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !8954
  %30 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !8955
  %31 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !8956
  %arraydecay24 = getelementptr inbounds [2 x float], [2 x float]* %limit, i64 0, i64 0, !dbg !8957
  %32 = load %struct.NearestHit*, %struct.NearestHit** %hit_p, align 8, !dbg !8958
  %33 = load i32, i32* %extend, align 4, !dbg !8959
  %conv25 = trunc i32 %33 to i8, !dbg !8959
  call void @uv_select_linked(%struct.Scene* %29, %struct.Image* %30, %struct.BMEditMesh* %31, float* %arraydecay24, %struct.NearestHit* %32, i8 zeroext %conv25), !dbg !8960
  %34 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !8961
  %data = getelementptr inbounds %struct.Object, %struct.Object* %34, i32 0, i32 19, !dbg !8962
  %35 = load i8*, i8** %data, align 8, !dbg !8962
  %36 = bitcast i8* %35 to %struct.ID*, !dbg !8961
  call void @DAG_id_tag_update(%struct.ID* %36, i16 signext 0), !dbg !8963
  %37 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8964
  %38 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !8965
  %data26 = getelementptr inbounds %struct.Object, %struct.Object* %38, i32 0, i32 19, !dbg !8966
  %39 = load i8*, i8** %data26, align 8, !dbg !8966
  call void @WM_event_add_notifier(%struct.bContext* %37, i32 274333696, i8* %39), !dbg !8967
  store i32 4, i32* %retval, align 4, !dbg !8968
  br label %return, !dbg !8968

return:                                           ; preds = %if.end23, %if.then
  %40 = load i32, i32* %retval, align 4, !dbg !8969
  ret i32 %40, !dbg !8969
}

declare dso_local void @BKE_report(%struct.ReportList*, i32, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @uv_select_linked_pick_invoke(%struct.bContext* %C, %struct.wmOperator* %op, %struct.wmEvent* %event) #0 !dbg !8970 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %event.addr = alloca %struct.wmEvent*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !8971, metadata !DIExpression()), !dbg !8972
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !8973, metadata !DIExpression()), !dbg !8974
  store %struct.wmEvent* %event, %struct.wmEvent** %event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event.addr, metadata !8975, metadata !DIExpression()), !dbg !8976
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8977
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8978
  %2 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !8979
  %call = call i32 @uv_select_linked_internal(%struct.bContext* %0, %struct.wmOperator* %1, %struct.wmEvent* %2, i32 1), !dbg !8980
  ret i32 %call, !dbg !8981
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @uv_select_linked_pick_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !8982 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !8983, metadata !DIExpression()), !dbg !8984
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !8985, metadata !DIExpression()), !dbg !8986
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8987
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8988
  %call = call i32 @uv_select_linked_internal(%struct.bContext* %0, %struct.wmOperator* %1, %struct.wmEvent* null, i32 1), !dbg !8989
  ret i32 %call, !dbg !8990
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @uv_select_split_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !8991 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %scene = alloca %struct.Scene*, align 8
  %ts = alloca %struct.ToolSettings*, align 8
  %ima = alloca %struct.Image*, align 8
  %obedit = alloca %struct.Object*, align 8
  %bm = alloca %struct.BMesh*, align 8
  %efa = alloca %struct.BMFace*, align 8
  %l = alloca %struct.BMLoop*, align 8
  %iter = alloca %struct.BMIter, align 8
  %liter = alloca %struct.BMIter, align 8
  %tf = alloca %struct.MTexPoly*, align 8
  %luv = alloca %struct.MLoopUV*, align 8
  %changed = alloca i8, align 1
  %cd_loop_uv_offset = alloca i32, align 4
  %cd_poly_tex_offset = alloca i32, align 4
  %is_sel = alloca i8, align 1
  %is_unsel = alloca i8, align 1
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !8992, metadata !DIExpression()), !dbg !8993
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !8994, metadata !DIExpression()), !dbg !8995
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene, metadata !8996, metadata !DIExpression()), !dbg !8997
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8998
  %call = call %struct.Scene* @CTX_data_scene(%struct.bContext* %0), !dbg !8999
  store %struct.Scene* %call, %struct.Scene** %scene, align 8, !dbg !8997
  call void @llvm.dbg.declare(metadata %struct.ToolSettings** %ts, metadata !9000, metadata !DIExpression()), !dbg !9001
  %1 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !9002
  %toolsettings = getelementptr inbounds %struct.Scene, %struct.Scene* %1, i32 0, i32 20, !dbg !9003
  %2 = load %struct.ToolSettings*, %struct.ToolSettings** %toolsettings, align 8, !dbg !9003
  store %struct.ToolSettings* %2, %struct.ToolSettings** %ts, align 8, !dbg !9001
  call void @llvm.dbg.declare(metadata %struct.Image** %ima, metadata !9004, metadata !DIExpression()), !dbg !9005
  %3 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9006
  %call1 = call %struct.Image* @CTX_data_edit_image(%struct.bContext* %3), !dbg !9007
  store %struct.Image* %call1, %struct.Image** %ima, align 8, !dbg !9005
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !9008, metadata !DIExpression()), !dbg !9009
  %4 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9010
  %call2 = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %4), !dbg !9011
  store %struct.Object* %call2, %struct.Object** %obedit, align 8, !dbg !9009
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm, metadata !9012, metadata !DIExpression()), !dbg !9013
  %5 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !9014
  %call3 = call %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object* %5), !dbg !9015
  %bm4 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %call3, i32 0, i32 0, !dbg !9016
  %6 = load %struct.BMesh*, %struct.BMesh** %bm4, align 8, !dbg !9016
  store %struct.BMesh* %6, %struct.BMesh** %bm, align 8, !dbg !9013
  call void @llvm.dbg.declare(metadata %struct.BMFace** %efa, metadata !9017, metadata !DIExpression()), !dbg !9018
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l, metadata !9019, metadata !DIExpression()), !dbg !9020
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iter, metadata !9021, metadata !DIExpression()), !dbg !9022
  call void @llvm.dbg.declare(metadata %struct.BMIter* %liter, metadata !9023, metadata !DIExpression()), !dbg !9024
  call void @llvm.dbg.declare(metadata %struct.MTexPoly** %tf, metadata !9025, metadata !DIExpression()), !dbg !9026
  call void @llvm.dbg.declare(metadata %struct.MLoopUV** %luv, metadata !9027, metadata !DIExpression()), !dbg !9028
  call void @llvm.dbg.declare(metadata i8* %changed, metadata !9029, metadata !DIExpression()), !dbg !9030
  store i8 0, i8* %changed, align 1, !dbg !9030
  call void @llvm.dbg.declare(metadata i32* %cd_loop_uv_offset, metadata !9031, metadata !DIExpression()), !dbg !9032
  %7 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !9033
  %ldata = getelementptr inbounds %struct.BMesh, %struct.BMesh* %7, i32 0, i32 26, !dbg !9034
  %call5 = call i32 @CustomData_get_offset(%struct.CustomData* %ldata, i32 16), !dbg !9035
  store i32 %call5, i32* %cd_loop_uv_offset, align 4, !dbg !9032
  call void @llvm.dbg.declare(metadata i32* %cd_poly_tex_offset, metadata !9036, metadata !DIExpression()), !dbg !9037
  %8 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !9038
  %pdata = getelementptr inbounds %struct.BMesh, %struct.BMesh* %8, i32 0, i32 27, !dbg !9039
  %call6 = call i32 @CustomData_get_offset(%struct.CustomData* %pdata, i32 15), !dbg !9040
  store i32 %call6, i32* %cd_poly_tex_offset, align 4, !dbg !9037
  %9 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !9041
  %uv_flag = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %9, i32 0, i32 11, !dbg !9043
  %10 = load i8, i8* %uv_flag, align 2, !dbg !9043
  %conv = zext i8 %10 to i32, !dbg !9041
  %and = and i32 %conv, 1, !dbg !9044
  %tobool = icmp ne i32 %and, 0, !dbg !9044
  br i1 %tobool, label %if.then, label %if.end, !dbg !9045

if.then:                                          ; preds = %entry
  %11 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9046
  %reports = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %11, i32 0, i32 8, !dbg !9048
  %12 = load %struct.ReportList*, %struct.ReportList** %reports, align 8, !dbg !9048
  call void @BKE_report(%struct.ReportList* %12, i32 32, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.56, i64 0, i64 0)), !dbg !9049
  store i32 2, i32* %retval, align 4, !dbg !9050
  br label %return, !dbg !9050

if.end:                                           ; preds = %entry
  %13 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !9051
  %call7 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %13, i8 zeroext 3, i8* null), !dbg !9051
  %14 = bitcast i8* %call7 to %struct.BMFace*, !dbg !9051
  store %struct.BMFace* %14, %struct.BMFace** %efa, align 8, !dbg !9051
  br label %for.cond, !dbg !9051

for.cond:                                         ; preds = %for.inc52, %if.end
  %15 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !9053
  %tobool8 = icmp ne %struct.BMFace* %15, null, !dbg !9051
  br i1 %tobool8, label %for.body, label %for.end54, !dbg !9051

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i8* %is_sel, metadata !9055, metadata !DIExpression()), !dbg !9057
  store i8 0, i8* %is_sel, align 1, !dbg !9057
  call void @llvm.dbg.declare(metadata i8* %is_unsel, metadata !9058, metadata !DIExpression()), !dbg !9059
  store i8 0, i8* %is_unsel, align 1, !dbg !9059
  %16 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !9060
  %head = getelementptr inbounds %struct.BMFace, %struct.BMFace* %16, i32 0, i32 0, !dbg !9060
  %data = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head, i32 0, i32 0, !dbg !9060
  %17 = load i8*, i8** %data, align 8, !dbg !9060
  %18 = load i32, i32* %cd_poly_tex_offset, align 4, !dbg !9060
  %idx.ext = sext i32 %18 to i64, !dbg !9060
  %add.ptr = getelementptr inbounds i8, i8* %17, i64 %idx.ext, !dbg !9060
  %19 = bitcast i8* %add.ptr to %struct.MTexPoly*, !dbg !9060
  store %struct.MTexPoly* %19, %struct.MTexPoly** %tf, align 8, !dbg !9061
  %20 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !9062
  %21 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !9064
  %22 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !9065
  %23 = load %struct.MTexPoly*, %struct.MTexPoly** %tf, align 8, !dbg !9066
  %call9 = call zeroext i8 @uvedit_face_visible_test(%struct.Scene* %20, %struct.Image* %21, %struct.BMFace* %22, %struct.MTexPoly* %23), !dbg !9067
  %tobool10 = icmp ne i8 %call9, 0, !dbg !9067
  br i1 %tobool10, label %if.end12, label %if.then11, !dbg !9068

if.then11:                                        ; preds = %for.body
  br label %for.inc52, !dbg !9069

if.end12:                                         ; preds = %for.body
  %24 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !9070
  %25 = bitcast %struct.BMFace* %24 to i8*, !dbg !9070
  %call13 = call i8* @BM_iter_new(%struct.BMIter* %liter, %struct.BMesh* null, i8 zeroext 11, i8* %25), !dbg !9070
  %26 = bitcast i8* %call13 to %struct.BMLoop*, !dbg !9070
  store %struct.BMLoop* %26, %struct.BMLoop** %l, align 8, !dbg !9070
  br label %for.cond14, !dbg !9070

for.cond14:                                       ; preds = %for.inc, %if.end12
  %27 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !9072
  %tobool15 = icmp ne %struct.BMLoop* %27, null, !dbg !9070
  br i1 %tobool15, label %for.body16, label %for.end, !dbg !9070

for.body16:                                       ; preds = %for.cond14
  %28 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !9074
  %head17 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %28, i32 0, i32 0, !dbg !9074
  %data18 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head17, i32 0, i32 0, !dbg !9074
  %29 = load i8*, i8** %data18, align 8, !dbg !9074
  %30 = load i32, i32* %cd_loop_uv_offset, align 4, !dbg !9074
  %idx.ext19 = sext i32 %30 to i64, !dbg !9074
  %add.ptr20 = getelementptr inbounds i8, i8* %29, i64 %idx.ext19, !dbg !9074
  %31 = bitcast i8* %add.ptr20 to %struct.MLoopUV*, !dbg !9074
  store %struct.MLoopUV* %31, %struct.MLoopUV** %luv, align 8, !dbg !9076
  %32 = load %struct.MLoopUV*, %struct.MLoopUV** %luv, align 8, !dbg !9077
  %flag = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %32, i32 0, i32 1, !dbg !9079
  %33 = load i32, i32* %flag, align 4, !dbg !9079
  %and21 = and i32 %33, 2, !dbg !9080
  %tobool22 = icmp ne i32 %and21, 0, !dbg !9080
  br i1 %tobool22, label %if.then23, label %if.else, !dbg !9081

if.then23:                                        ; preds = %for.body16
  store i8 1, i8* %is_sel, align 1, !dbg !9082
  br label %if.end24, !dbg !9084

if.else:                                          ; preds = %for.body16
  store i8 1, i8* %is_unsel, align 1, !dbg !9085
  br label %if.end24

if.end24:                                         ; preds = %if.else, %if.then23
  %34 = load i8, i8* %is_sel, align 1, !dbg !9087
  %conv25 = zext i8 %34 to i32, !dbg !9087
  %tobool26 = icmp ne i32 %conv25, 0, !dbg !9087
  br i1 %tobool26, label %land.lhs.true, label %if.end30, !dbg !9089

land.lhs.true:                                    ; preds = %if.end24
  %35 = load i8, i8* %is_unsel, align 1, !dbg !9090
  %conv27 = zext i8 %35 to i32, !dbg !9090
  %tobool28 = icmp ne i32 %conv27, 0, !dbg !9090
  br i1 %tobool28, label %if.then29, label %if.end30, !dbg !9091

if.then29:                                        ; preds = %land.lhs.true
  br label %for.end, !dbg !9092

if.end30:                                         ; preds = %land.lhs.true, %if.end24
  br label %for.inc, !dbg !9094

for.inc:                                          ; preds = %if.end30
  %call31 = call i8* @BM_iter_step(%struct.BMIter* %liter), !dbg !9072
  %36 = bitcast i8* %call31 to %struct.BMLoop*, !dbg !9072
  store %struct.BMLoop* %36, %struct.BMLoop** %l, align 8, !dbg !9072
  br label %for.cond14, !dbg !9072, !llvm.loop !9095

for.end:                                          ; preds = %if.then29, %for.cond14
  %37 = load i8, i8* %is_sel, align 1, !dbg !9097
  %conv32 = zext i8 %37 to i32, !dbg !9097
  %tobool33 = icmp ne i32 %conv32, 0, !dbg !9097
  br i1 %tobool33, label %land.lhs.true34, label %if.end51, !dbg !9099

land.lhs.true34:                                  ; preds = %for.end
  %38 = load i8, i8* %is_unsel, align 1, !dbg !9100
  %conv35 = zext i8 %38 to i32, !dbg !9100
  %tobool36 = icmp ne i32 %conv35, 0, !dbg !9100
  br i1 %tobool36, label %if.then37, label %if.end51, !dbg !9101

if.then37:                                        ; preds = %land.lhs.true34
  %39 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !9102
  %40 = bitcast %struct.BMFace* %39 to i8*, !dbg !9102
  %call38 = call i8* @BM_iter_new(%struct.BMIter* %liter, %struct.BMesh* null, i8 zeroext 11, i8* %40), !dbg !9102
  %41 = bitcast i8* %call38 to %struct.BMLoop*, !dbg !9102
  store %struct.BMLoop* %41, %struct.BMLoop** %l, align 8, !dbg !9102
  br label %for.cond39, !dbg !9102

for.cond39:                                       ; preds = %for.inc48, %if.then37
  %42 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !9105
  %tobool40 = icmp ne %struct.BMLoop* %42, null, !dbg !9102
  br i1 %tobool40, label %for.body41, label %for.end50, !dbg !9102

for.body41:                                       ; preds = %for.cond39
  %43 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !9107
  %head42 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %43, i32 0, i32 0, !dbg !9107
  %data43 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head42, i32 0, i32 0, !dbg !9107
  %44 = load i8*, i8** %data43, align 8, !dbg !9107
  %45 = load i32, i32* %cd_loop_uv_offset, align 4, !dbg !9107
  %idx.ext44 = sext i32 %45 to i64, !dbg !9107
  %add.ptr45 = getelementptr inbounds i8, i8* %44, i64 %idx.ext44, !dbg !9107
  %46 = bitcast i8* %add.ptr45 to %struct.MLoopUV*, !dbg !9107
  store %struct.MLoopUV* %46, %struct.MLoopUV** %luv, align 8, !dbg !9109
  %47 = load %struct.MLoopUV*, %struct.MLoopUV** %luv, align 8, !dbg !9110
  %flag46 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %47, i32 0, i32 1, !dbg !9111
  %48 = load i32, i32* %flag46, align 4, !dbg !9112
  %and47 = and i32 %48, -3, !dbg !9112
  store i32 %and47, i32* %flag46, align 4, !dbg !9112
  br label %for.inc48, !dbg !9113

for.inc48:                                        ; preds = %for.body41
  %call49 = call i8* @BM_iter_step(%struct.BMIter* %liter), !dbg !9105
  %49 = bitcast i8* %call49 to %struct.BMLoop*, !dbg !9105
  store %struct.BMLoop* %49, %struct.BMLoop** %l, align 8, !dbg !9105
  br label %for.cond39, !dbg !9105, !llvm.loop !9114

for.end50:                                        ; preds = %for.cond39
  store i8 1, i8* %changed, align 1, !dbg !9116
  br label %if.end51, !dbg !9117

if.end51:                                         ; preds = %for.end50, %land.lhs.true34, %for.end
  br label %for.inc52, !dbg !9118

for.inc52:                                        ; preds = %if.end51, %if.then11
  %call53 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !9053
  %50 = bitcast i8* %call53 to %struct.BMFace*, !dbg !9053
  store %struct.BMFace* %50, %struct.BMFace** %efa, align 8, !dbg !9053
  br label %for.cond, !dbg !9053, !llvm.loop !9119

for.end54:                                        ; preds = %for.cond
  %51 = load i8, i8* %changed, align 1, !dbg !9121
  %tobool55 = icmp ne i8 %51, 0, !dbg !9121
  br i1 %tobool55, label %if.then56, label %if.else57, !dbg !9123

if.then56:                                        ; preds = %for.end54
  %52 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9124
  call void @WM_event_add_notifier(%struct.bContext* %52, i32 251920384, i8* null), !dbg !9126
  store i32 4, i32* %retval, align 4, !dbg !9127
  br label %return, !dbg !9127

if.else57:                                        ; preds = %for.end54
  store i32 2, i32* %retval, align 4, !dbg !9128
  br label %return, !dbg !9128

return:                                           ; preds = %if.else57, %if.then56, %if.then
  %53 = load i32, i32* %retval, align 4, !dbg !9130
  ret i32 %53, !dbg !9130
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @uv_select_pinned_exec(%struct.bContext* %C, %struct.wmOperator* %UNUSED_op) #0 !dbg !9131 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_op.addr = alloca %struct.wmOperator*, align 8
  %scene = alloca %struct.Scene*, align 8
  %obedit = alloca %struct.Object*, align 8
  %ima = alloca %struct.Image*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  %efa = alloca %struct.BMFace*, align 8
  %l = alloca %struct.BMLoop*, align 8
  %iter = alloca %struct.BMIter, align 8
  %liter = alloca %struct.BMIter, align 8
  %tface = alloca %struct.MTexPoly*, align 8
  %luv = alloca %struct.MLoopUV*, align 8
  %cd_loop_uv_offset = alloca i32, align 4
  %cd_poly_tex_offset = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !9132, metadata !DIExpression()), !dbg !9133
  store %struct.wmOperator* %UNUSED_op, %struct.wmOperator** %UNUSED_op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %UNUSED_op.addr, metadata !9134, metadata !DIExpression()), !dbg !9135
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene, metadata !9136, metadata !DIExpression()), !dbg !9137
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9138
  %call = call %struct.Scene* @CTX_data_scene(%struct.bContext* %0), !dbg !9139
  store %struct.Scene* %call, %struct.Scene** %scene, align 8, !dbg !9137
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !9140, metadata !DIExpression()), !dbg !9141
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9142
  %call1 = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %1), !dbg !9143
  store %struct.Object* %call1, %struct.Object** %obedit, align 8, !dbg !9141
  call void @llvm.dbg.declare(metadata %struct.Image** %ima, metadata !9144, metadata !DIExpression()), !dbg !9145
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9146
  %call2 = call %struct.Image* @CTX_data_edit_image(%struct.bContext* %2), !dbg !9147
  store %struct.Image* %call2, %struct.Image** %ima, align 8, !dbg !9145
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !9148, metadata !DIExpression()), !dbg !9149
  %3 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !9150
  %call3 = call %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object* %3), !dbg !9151
  store %struct.BMEditMesh* %call3, %struct.BMEditMesh** %em, align 8, !dbg !9149
  call void @llvm.dbg.declare(metadata %struct.BMFace** %efa, metadata !9152, metadata !DIExpression()), !dbg !9153
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l, metadata !9154, metadata !DIExpression()), !dbg !9155
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iter, metadata !9156, metadata !DIExpression()), !dbg !9157
  call void @llvm.dbg.declare(metadata %struct.BMIter* %liter, metadata !9158, metadata !DIExpression()), !dbg !9159
  call void @llvm.dbg.declare(metadata %struct.MTexPoly** %tface, metadata !9160, metadata !DIExpression()), !dbg !9161
  call void @llvm.dbg.declare(metadata %struct.MLoopUV** %luv, metadata !9162, metadata !DIExpression()), !dbg !9163
  call void @llvm.dbg.declare(metadata i32* %cd_loop_uv_offset, metadata !9164, metadata !DIExpression()), !dbg !9165
  %4 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !9166
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %4, i32 0, i32 0, !dbg !9167
  %5 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !9167
  %ldata = getelementptr inbounds %struct.BMesh, %struct.BMesh* %5, i32 0, i32 26, !dbg !9168
  %call4 = call i32 @CustomData_get_offset(%struct.CustomData* %ldata, i32 16), !dbg !9169
  store i32 %call4, i32* %cd_loop_uv_offset, align 4, !dbg !9165
  call void @llvm.dbg.declare(metadata i32* %cd_poly_tex_offset, metadata !9170, metadata !DIExpression()), !dbg !9171
  %6 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !9172
  %bm5 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %6, i32 0, i32 0, !dbg !9173
  %7 = load %struct.BMesh*, %struct.BMesh** %bm5, align 8, !dbg !9173
  %pdata = getelementptr inbounds %struct.BMesh, %struct.BMesh* %7, i32 0, i32 27, !dbg !9174
  %call6 = call i32 @CustomData_get_offset(%struct.CustomData* %pdata, i32 15), !dbg !9175
  store i32 %call6, i32* %cd_poly_tex_offset, align 4, !dbg !9171
  %8 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !9176
  %bm7 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %8, i32 0, i32 0, !dbg !9176
  %9 = load %struct.BMesh*, %struct.BMesh** %bm7, align 8, !dbg !9176
  %call8 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %9, i8 zeroext 3, i8* null), !dbg !9176
  %10 = bitcast i8* %call8 to %struct.BMFace*, !dbg !9176
  store %struct.BMFace* %10, %struct.BMFace** %efa, align 8, !dbg !9176
  br label %for.cond, !dbg !9176

for.cond:                                         ; preds = %for.inc23, %entry
  %11 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !9178
  %tobool = icmp ne %struct.BMFace* %11, null, !dbg !9176
  br i1 %tobool, label %for.body, label %for.end25, !dbg !9176

for.body:                                         ; preds = %for.cond
  %12 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !9180
  %head = getelementptr inbounds %struct.BMFace, %struct.BMFace* %12, i32 0, i32 0, !dbg !9180
  %data = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head, i32 0, i32 0, !dbg !9180
  %13 = load i8*, i8** %data, align 8, !dbg !9180
  %14 = load i32, i32* %cd_poly_tex_offset, align 4, !dbg !9180
  %idx.ext = sext i32 %14 to i64, !dbg !9180
  %add.ptr = getelementptr inbounds i8, i8* %13, i64 %idx.ext, !dbg !9180
  %15 = bitcast i8* %add.ptr to %struct.MTexPoly*, !dbg !9180
  store %struct.MTexPoly* %15, %struct.MTexPoly** %tface, align 8, !dbg !9182
  %16 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !9183
  %17 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !9185
  %18 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !9186
  %19 = load %struct.MTexPoly*, %struct.MTexPoly** %tface, align 8, !dbg !9187
  %call9 = call zeroext i8 @uvedit_face_visible_test(%struct.Scene* %16, %struct.Image* %17, %struct.BMFace* %18, %struct.MTexPoly* %19), !dbg !9188
  %tobool10 = icmp ne i8 %call9, 0, !dbg !9188
  br i1 %tobool10, label %if.end, label %if.then, !dbg !9189

if.then:                                          ; preds = %for.body
  br label %for.inc23, !dbg !9190

if.end:                                           ; preds = %for.body
  %20 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !9191
  %21 = bitcast %struct.BMFace* %20 to i8*, !dbg !9191
  %call11 = call i8* @BM_iter_new(%struct.BMIter* %liter, %struct.BMesh* null, i8 zeroext 11, i8* %21), !dbg !9191
  %22 = bitcast i8* %call11 to %struct.BMLoop*, !dbg !9191
  store %struct.BMLoop* %22, %struct.BMLoop** %l, align 8, !dbg !9191
  br label %for.cond12, !dbg !9191

for.cond12:                                       ; preds = %for.inc, %if.end
  %23 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !9193
  %tobool13 = icmp ne %struct.BMLoop* %23, null, !dbg !9191
  br i1 %tobool13, label %for.body14, label %for.end, !dbg !9191

for.body14:                                       ; preds = %for.cond12
  %24 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !9195
  %head15 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %24, i32 0, i32 0, !dbg !9195
  %data16 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head15, i32 0, i32 0, !dbg !9195
  %25 = load i8*, i8** %data16, align 8, !dbg !9195
  %26 = load i32, i32* %cd_loop_uv_offset, align 4, !dbg !9195
  %idx.ext17 = sext i32 %26 to i64, !dbg !9195
  %add.ptr18 = getelementptr inbounds i8, i8* %25, i64 %idx.ext17, !dbg !9195
  %27 = bitcast i8* %add.ptr18 to %struct.MLoopUV*, !dbg !9195
  store %struct.MLoopUV* %27, %struct.MLoopUV** %luv, align 8, !dbg !9197
  %28 = load %struct.MLoopUV*, %struct.MLoopUV** %luv, align 8, !dbg !9198
  %flag = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %28, i32 0, i32 1, !dbg !9200
  %29 = load i32, i32* %flag, align 4, !dbg !9200
  %and = and i32 %29, 4, !dbg !9201
  %tobool19 = icmp ne i32 %and, 0, !dbg !9201
  br i1 %tobool19, label %if.then20, label %if.end21, !dbg !9202

if.then20:                                        ; preds = %for.body14
  %30 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !9203
  %31 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !9204
  %32 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !9205
  %33 = load i32, i32* %cd_loop_uv_offset, align 4, !dbg !9206
  call void @uvedit_uv_select_enable(%struct.BMEditMesh* %30, %struct.Scene* %31, %struct.BMLoop* %32, i8 zeroext 0, i32 %33), !dbg !9207
  br label %if.end21, !dbg !9207

if.end21:                                         ; preds = %if.then20, %for.body14
  br label %for.inc, !dbg !9208

for.inc:                                          ; preds = %if.end21
  %call22 = call i8* @BM_iter_step(%struct.BMIter* %liter), !dbg !9193
  %34 = bitcast i8* %call22 to %struct.BMLoop*, !dbg !9193
  store %struct.BMLoop* %34, %struct.BMLoop** %l, align 8, !dbg !9193
  br label %for.cond12, !dbg !9193, !llvm.loop !9209

for.end:                                          ; preds = %for.cond12
  br label %for.inc23, !dbg !9211

for.inc23:                                        ; preds = %for.end, %if.then
  %call24 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !9178
  %35 = bitcast i8* %call24 to %struct.BMFace*, !dbg !9178
  store %struct.BMFace* %35, %struct.BMFace** %efa, align 8, !dbg !9178
  br label %for.cond, !dbg !9178, !llvm.loop !9212

for.end25:                                        ; preds = %for.cond
  %36 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9214
  %37 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !9215
  %data26 = getelementptr inbounds %struct.Object, %struct.Object* %37, i32 0, i32 19, !dbg !9216
  %38 = load i8*, i8** %data26, align 8, !dbg !9216
  call void @WM_event_add_notifier(%struct.bContext* %36, i32 274333696, i8* %38), !dbg !9217
  ret i32 4, !dbg !9218
}

declare dso_local i32 @WM_border_select_invoke(%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @uv_border_select_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !9219 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %sima = alloca %struct.SpaceImage*, align 8
  %scene = alloca %struct.Scene*, align 8
  %ts = alloca %struct.ToolSettings*, align 8
  %obedit = alloca %struct.Object*, align 8
  %ima = alloca %struct.Image*, align 8
  %ar = alloca %struct.ARegion*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  %efa = alloca %struct.BMFace*, align 8
  %l = alloca %struct.BMLoop*, align 8
  %iter = alloca %struct.BMIter, align 8
  %liter = alloca %struct.BMIter, align 8
  %tf = alloca %struct.MTexPoly*, align 8
  %luv = alloca %struct.MLoopUV*, align 8
  %rectf = alloca %struct.rctf, align 4
  %changed = alloca i8, align 1
  %pinned = alloca i8, align 1
  %select = alloca i8, align 1
  %extend = alloca i8, align 1
  %use_face_center = alloca i8, align 1
  %cd_loop_uv_offset = alloca i32, align 4
  %cd_poly_tex_offset = alloca i32, align 4
  %cent = alloca [2 x float], align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !9220, metadata !DIExpression()), !dbg !9221
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !9222, metadata !DIExpression()), !dbg !9223
  call void @llvm.dbg.declare(metadata %struct.SpaceImage** %sima, metadata !9224, metadata !DIExpression()), !dbg !9225
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9226
  %call = call %struct.SpaceImage* @CTX_wm_space_image(%struct.bContext* %0), !dbg !9227
  store %struct.SpaceImage* %call, %struct.SpaceImage** %sima, align 8, !dbg !9225
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene, metadata !9228, metadata !DIExpression()), !dbg !9229
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9230
  %call1 = call %struct.Scene* @CTX_data_scene(%struct.bContext* %1), !dbg !9231
  store %struct.Scene* %call1, %struct.Scene** %scene, align 8, !dbg !9229
  call void @llvm.dbg.declare(metadata %struct.ToolSettings** %ts, metadata !9232, metadata !DIExpression()), !dbg !9233
  %2 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !9234
  %toolsettings = getelementptr inbounds %struct.Scene, %struct.Scene* %2, i32 0, i32 20, !dbg !9235
  %3 = load %struct.ToolSettings*, %struct.ToolSettings** %toolsettings, align 8, !dbg !9235
  store %struct.ToolSettings* %3, %struct.ToolSettings** %ts, align 8, !dbg !9233
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !9236, metadata !DIExpression()), !dbg !9237
  %4 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9238
  %call2 = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %4), !dbg !9239
  store %struct.Object* %call2, %struct.Object** %obedit, align 8, !dbg !9237
  call void @llvm.dbg.declare(metadata %struct.Image** %ima, metadata !9240, metadata !DIExpression()), !dbg !9241
  %5 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9242
  %call3 = call %struct.Image* @CTX_data_edit_image(%struct.bContext* %5), !dbg !9243
  store %struct.Image* %call3, %struct.Image** %ima, align 8, !dbg !9241
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar, metadata !9244, metadata !DIExpression()), !dbg !9245
  %6 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9246
  %call4 = call %struct.ARegion* @CTX_wm_region(%struct.bContext* %6), !dbg !9247
  store %struct.ARegion* %call4, %struct.ARegion** %ar, align 8, !dbg !9245
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !9248, metadata !DIExpression()), !dbg !9249
  %7 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !9250
  %call5 = call %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object* %7), !dbg !9251
  store %struct.BMEditMesh* %call5, %struct.BMEditMesh** %em, align 8, !dbg !9249
  call void @llvm.dbg.declare(metadata %struct.BMFace** %efa, metadata !9252, metadata !DIExpression()), !dbg !9253
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l, metadata !9254, metadata !DIExpression()), !dbg !9255
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iter, metadata !9256, metadata !DIExpression()), !dbg !9257
  call void @llvm.dbg.declare(metadata %struct.BMIter* %liter, metadata !9258, metadata !DIExpression()), !dbg !9259
  call void @llvm.dbg.declare(metadata %struct.MTexPoly** %tf, metadata !9260, metadata !DIExpression()), !dbg !9261
  call void @llvm.dbg.declare(metadata %struct.MLoopUV** %luv, metadata !9262, metadata !DIExpression()), !dbg !9263
  call void @llvm.dbg.declare(metadata %struct.rctf* %rectf, metadata !9264, metadata !DIExpression()), !dbg !9265
  call void @llvm.dbg.declare(metadata i8* %changed, metadata !9266, metadata !DIExpression()), !dbg !9267
  call void @llvm.dbg.declare(metadata i8* %pinned, metadata !9268, metadata !DIExpression()), !dbg !9269
  call void @llvm.dbg.declare(metadata i8* %select, metadata !9270, metadata !DIExpression()), !dbg !9271
  call void @llvm.dbg.declare(metadata i8* %extend, metadata !9272, metadata !DIExpression()), !dbg !9273
  call void @llvm.dbg.declare(metadata i8* %use_face_center, metadata !9274, metadata !DIExpression()), !dbg !9275
  %8 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !9276
  %uv_flag = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %8, i32 0, i32 11, !dbg !9277
  %9 = load i8, i8* %uv_flag, align 2, !dbg !9277
  %conv = zext i8 %9 to i32, !dbg !9276
  %and = and i32 %conv, 1, !dbg !9278
  %tobool = icmp ne i32 %and, 0, !dbg !9278
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !9279

cond.true:                                        ; preds = %entry
  %10 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !9280
  %selectmode = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %10, i32 0, i32 8, !dbg !9281
  %11 = load i16, i16* %selectmode, align 2, !dbg !9281
  %conv6 = sext i16 %11 to i32, !dbg !9280
  %cmp = icmp eq i32 %conv6, 4, !dbg !9282
  %conv7 = zext i1 %cmp to i32, !dbg !9282
  br label %cond.end, !dbg !9279

cond.false:                                       ; preds = %entry
  %12 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !9283
  %uv_selectmode = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %12, i32 0, i32 12, !dbg !9284
  %13 = load i8, i8* %uv_selectmode, align 1, !dbg !9284
  %conv8 = zext i8 %13 to i32, !dbg !9283
  %cmp9 = icmp eq i32 %conv8, 4, !dbg !9285
  %conv10 = zext i1 %cmp9 to i32, !dbg !9285
  br label %cond.end, !dbg !9279

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv7, %cond.true ], [ %conv10, %cond.false ], !dbg !9279
  %conv11 = trunc i32 %cond to i8, !dbg !9279
  store i8 %conv11, i8* %use_face_center, align 1, !dbg !9275
  call void @llvm.dbg.declare(metadata i32* %cd_loop_uv_offset, metadata !9286, metadata !DIExpression()), !dbg !9287
  %14 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !9288
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %14, i32 0, i32 0, !dbg !9289
  %15 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !9289
  %ldata = getelementptr inbounds %struct.BMesh, %struct.BMesh* %15, i32 0, i32 26, !dbg !9290
  %call12 = call i32 @CustomData_get_offset(%struct.CustomData* %ldata, i32 16), !dbg !9291
  store i32 %call12, i32* %cd_loop_uv_offset, align 4, !dbg !9287
  call void @llvm.dbg.declare(metadata i32* %cd_poly_tex_offset, metadata !9292, metadata !DIExpression()), !dbg !9293
  %16 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !9294
  %bm13 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %16, i32 0, i32 0, !dbg !9295
  %17 = load %struct.BMesh*, %struct.BMesh** %bm13, align 8, !dbg !9295
  %pdata = getelementptr inbounds %struct.BMesh, %struct.BMesh* %17, i32 0, i32 27, !dbg !9296
  %call14 = call i32 @CustomData_get_offset(%struct.CustomData* %pdata, i32 15), !dbg !9297
  store i32 %call14, i32* %cd_poly_tex_offset, align 4, !dbg !9293
  %18 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9298
  call void @WM_operator_properties_border_to_rctf(%struct.wmOperator* %18, %struct.rctf* %rectf), !dbg !9299
  %19 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !9300
  %v2d = getelementptr inbounds %struct.ARegion, %struct.ARegion* %19, i32 0, i32 2, !dbg !9301
  call void @UI_view2d_region_to_view_rctf(%struct.View2D* %v2d, %struct.rctf* %rectf, %struct.rctf* %rectf), !dbg !9302
  %20 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9303
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %20, i32 0, i32 7, !dbg !9304
  %21 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !9304
  %call15 = call i32 @RNA_int_get(%struct.PointerRNA* %21, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.63, i64 0, i64 0)), !dbg !9305
  %cmp16 = icmp eq i32 %call15, 3, !dbg !9306
  %conv17 = zext i1 %cmp16 to i32, !dbg !9306
  %conv18 = trunc i32 %conv17 to i8, !dbg !9307
  store i8 %conv18, i8* %select, align 1, !dbg !9308
  %22 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9309
  %ptr19 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %22, i32 0, i32 7, !dbg !9310
  %23 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr19, align 8, !dbg !9310
  %call20 = call i32 @RNA_boolean_get(%struct.PointerRNA* %23, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.10, i64 0, i64 0)), !dbg !9311
  %conv21 = trunc i32 %call20 to i8, !dbg !9311
  store i8 %conv21, i8* %pinned, align 1, !dbg !9312
  %24 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9313
  %ptr22 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %24, i32 0, i32 7, !dbg !9314
  %25 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr22, align 8, !dbg !9314
  %call23 = call i32 @RNA_boolean_get(%struct.PointerRNA* %25, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6, i64 0, i64 0)), !dbg !9315
  %conv24 = trunc i32 %call23 to i8, !dbg !9315
  store i8 %conv24, i8* %extend, align 1, !dbg !9316
  %26 = load i8, i8* %extend, align 1, !dbg !9317
  %tobool25 = icmp ne i8 %26, 0, !dbg !9317
  br i1 %tobool25, label %if.end, label %if.then, !dbg !9319

if.then:                                          ; preds = %cond.end
  %27 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !9320
  %28 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !9321
  %29 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !9322
  call void @uv_select_all_perform(%struct.Scene* %27, %struct.Image* %28, %struct.BMEditMesh* %29, i32 2), !dbg !9323
  br label %if.end, !dbg !9323

if.end:                                           ; preds = %if.then, %cond.end
  %30 = load i8, i8* %use_face_center, align 1, !dbg !9324
  %conv26 = zext i8 %30 to i32, !dbg !9324
  %tobool27 = icmp ne i32 %conv26, 0, !dbg !9324
  br i1 %tobool27, label %land.lhs.true, label %if.else, !dbg !9326

land.lhs.true:                                    ; preds = %if.end
  %31 = load i8, i8* %pinned, align 1, !dbg !9327
  %tobool28 = icmp ne i8 %31, 0, !dbg !9327
  br i1 %tobool28, label %if.else, label %if.then29, !dbg !9328

if.then29:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata [2 x float]* %cent, metadata !9329, metadata !DIExpression()), !dbg !9331
  store i8 0, i8* %changed, align 1, !dbg !9332
  %32 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !9333
  %bm30 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %32, i32 0, i32 0, !dbg !9333
  %33 = load %struct.BMesh*, %struct.BMesh** %bm30, align 8, !dbg !9333
  %call31 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %33, i8 zeroext 3, i8* null), !dbg !9333
  %34 = bitcast i8* %call31 to %struct.BMFace*, !dbg !9333
  store %struct.BMFace* %34, %struct.BMFace** %efa, align 8, !dbg !9333
  br label %for.cond, !dbg !9333

for.cond:                                         ; preds = %for.inc, %if.then29
  %35 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !9335
  %tobool32 = icmp ne %struct.BMFace* %35, null, !dbg !9333
  br i1 %tobool32, label %for.body, label %for.end, !dbg !9333

for.body:                                         ; preds = %for.cond
  %36 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !9337
  %head = getelementptr inbounds %struct.BMFace, %struct.BMFace* %36, i32 0, i32 0, !dbg !9337
  call void @_bm_elem_flag_disable(%struct.BMHeader* %head, i8 zeroext 16), !dbg !9337
  %37 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !9339
  %head33 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %37, i32 0, i32 0, !dbg !9339
  %data = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head33, i32 0, i32 0, !dbg !9339
  %38 = load i8*, i8** %data, align 8, !dbg !9339
  %39 = load i32, i32* %cd_poly_tex_offset, align 4, !dbg !9339
  %idx.ext = sext i32 %39 to i64, !dbg !9339
  %add.ptr = getelementptr inbounds i8, i8* %38, i64 %idx.ext, !dbg !9339
  %40 = bitcast i8* %add.ptr to %struct.MTexPoly*, !dbg !9339
  store %struct.MTexPoly* %40, %struct.MTexPoly** %tf, align 8, !dbg !9340
  %41 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !9341
  %42 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !9343
  %43 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !9344
  %44 = load %struct.MTexPoly*, %struct.MTexPoly** %tf, align 8, !dbg !9345
  %call34 = call zeroext i8 @uvedit_face_visible_test(%struct.Scene* %41, %struct.Image* %42, %struct.BMFace* %43, %struct.MTexPoly* %44), !dbg !9346
  %tobool35 = icmp ne i8 %call34, 0, !dbg !9346
  br i1 %tobool35, label %if.then36, label %if.end43, !dbg !9347

if.then36:                                        ; preds = %for.body
  %45 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !9348
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %cent, i64 0, i64 0, !dbg !9350
  %46 = load i32, i32* %cd_loop_uv_offset, align 4, !dbg !9351
  call void @uv_poly_center(%struct.BMFace* %45, float* %arraydecay, i32 %46), !dbg !9352
  %arraydecay37 = getelementptr inbounds [2 x float], [2 x float]* %cent, i64 0, i64 0, !dbg !9353
  %call38 = call zeroext i8 @BLI_rctf_isect_pt_v(%struct.rctf* %rectf, float* %arraydecay37), !dbg !9355
  %tobool39 = icmp ne i8 %call38, 0, !dbg !9355
  br i1 %tobool39, label %if.then40, label %if.end42, !dbg !9356

if.then40:                                        ; preds = %if.then36
  %47 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !9357
  %head41 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %47, i32 0, i32 0, !dbg !9357
  call void @_bm_elem_flag_enable(%struct.BMHeader* %head41, i8 zeroext 16), !dbg !9357
  store i8 1, i8* %changed, align 1, !dbg !9359
  br label %if.end42, !dbg !9360

if.end42:                                         ; preds = %if.then40, %if.then36
  br label %if.end43, !dbg !9361

if.end43:                                         ; preds = %if.end42, %for.body
  br label %for.inc, !dbg !9362

for.inc:                                          ; preds = %if.end43
  %call44 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !9335
  %48 = bitcast i8* %call44 to %struct.BMFace*, !dbg !9335
  store %struct.BMFace* %48, %struct.BMFace** %efa, align 8, !dbg !9335
  br label %for.cond, !dbg !9335, !llvm.loop !9363

for.end:                                          ; preds = %for.cond
  %49 = load i8, i8* %changed, align 1, !dbg !9365
  %tobool45 = icmp ne i8 %49, 0, !dbg !9365
  br i1 %tobool45, label %if.then46, label %if.end47, !dbg !9367

if.then46:                                        ; preds = %for.end
  %50 = load %struct.SpaceImage*, %struct.SpaceImage** %sima, align 8, !dbg !9368
  %51 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !9370
  %52 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !9371
  %53 = load i8, i8* %select, align 1, !dbg !9372
  call void @uv_select_flush_from_tag_face(%struct.SpaceImage* %50, %struct.Scene* %51, %struct.Object* %52, i8 zeroext %53), !dbg !9373
  br label %if.end47, !dbg !9374

if.end47:                                         ; preds = %if.then46, %for.end
  br label %if.end101, !dbg !9375

if.else:                                          ; preds = %land.lhs.true, %if.end
  store i8 1, i8* %changed, align 1, !dbg !9376
  %54 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !9378
  %bm48 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %54, i32 0, i32 0, !dbg !9378
  %55 = load %struct.BMesh*, %struct.BMesh** %bm48, align 8, !dbg !9378
  %call49 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %55, i8 zeroext 3, i8* null), !dbg !9378
  %56 = bitcast i8* %call49 to %struct.BMFace*, !dbg !9378
  store %struct.BMFace* %56, %struct.BMFace** %efa, align 8, !dbg !9378
  br label %for.cond50, !dbg !9378

for.cond50:                                       ; preds = %for.inc98, %if.else
  %57 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !9380
  %tobool51 = icmp ne %struct.BMFace* %57, null, !dbg !9378
  br i1 %tobool51, label %for.body52, label %for.end100, !dbg !9378

for.body52:                                       ; preds = %for.cond50
  %58 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !9382
  %head53 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %58, i32 0, i32 0, !dbg !9382
  %data54 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head53, i32 0, i32 0, !dbg !9382
  %59 = load i8*, i8** %data54, align 8, !dbg !9382
  %60 = load i32, i32* %cd_poly_tex_offset, align 4, !dbg !9382
  %idx.ext55 = sext i32 %60 to i64, !dbg !9382
  %add.ptr56 = getelementptr inbounds i8, i8* %59, i64 %idx.ext55, !dbg !9382
  %61 = bitcast i8* %add.ptr56 to %struct.MTexPoly*, !dbg !9382
  store %struct.MTexPoly* %61, %struct.MTexPoly** %tf, align 8, !dbg !9384
  %62 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !9385
  %63 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !9387
  %64 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !9388
  %65 = load %struct.MTexPoly*, %struct.MTexPoly** %tf, align 8, !dbg !9389
  %call57 = call zeroext i8 @uvedit_face_visible_test(%struct.Scene* %62, %struct.Image* %63, %struct.BMFace* %64, %struct.MTexPoly* %65), !dbg !9390
  %tobool58 = icmp ne i8 %call57, 0, !dbg !9390
  br i1 %tobool58, label %if.end60, label %if.then59, !dbg !9391

if.then59:                                        ; preds = %for.body52
  br label %for.inc98, !dbg !9392

if.end60:                                         ; preds = %for.body52
  %66 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !9393
  %67 = bitcast %struct.BMFace* %66 to i8*, !dbg !9393
  %call61 = call i8* @BM_iter_new(%struct.BMIter* %liter, %struct.BMesh* null, i8 zeroext 11, i8* %67), !dbg !9393
  %68 = bitcast i8* %call61 to %struct.BMLoop*, !dbg !9393
  store %struct.BMLoop* %68, %struct.BMLoop** %l, align 8, !dbg !9393
  br label %for.cond62, !dbg !9393

for.cond62:                                       ; preds = %for.inc95, %if.end60
  %69 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !9395
  %tobool63 = icmp ne %struct.BMLoop* %69, null, !dbg !9393
  br i1 %tobool63, label %for.body64, label %for.end97, !dbg !9393

for.body64:                                       ; preds = %for.cond62
  %70 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !9397
  %head65 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %70, i32 0, i32 0, !dbg !9397
  %data66 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head65, i32 0, i32 0, !dbg !9397
  %71 = load i8*, i8** %data66, align 8, !dbg !9397
  %72 = load i32, i32* %cd_loop_uv_offset, align 4, !dbg !9397
  %idx.ext67 = sext i32 %72 to i64, !dbg !9397
  %add.ptr68 = getelementptr inbounds i8, i8* %71, i64 %idx.ext67, !dbg !9397
  %73 = bitcast i8* %add.ptr68 to %struct.MLoopUV*, !dbg !9397
  store %struct.MLoopUV* %73, %struct.MLoopUV** %luv, align 8, !dbg !9399
  %74 = load i8, i8* %pinned, align 1, !dbg !9400
  %tobool69 = icmp ne i8 %74, 0, !dbg !9400
  br i1 %tobool69, label %lor.lhs.false, label %if.then74, !dbg !9402

lor.lhs.false:                                    ; preds = %for.body64
  %75 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !9403
  %uv_flag70 = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %75, i32 0, i32 11, !dbg !9404
  %76 = load i8, i8* %uv_flag70, align 2, !dbg !9404
  %conv71 = zext i8 %76 to i32, !dbg !9403
  %and72 = and i32 %conv71, 1, !dbg !9405
  %tobool73 = icmp ne i32 %and72, 0, !dbg !9405
  br i1 %tobool73, label %if.then74, label %if.else80, !dbg !9406

if.then74:                                        ; preds = %lor.lhs.false, %for.body64
  %77 = load %struct.MLoopUV*, %struct.MLoopUV** %luv, align 8, !dbg !9407
  %uv = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %77, i32 0, i32 0, !dbg !9410
  %arraydecay75 = getelementptr inbounds [2 x float], [2 x float]* %uv, i64 0, i64 0, !dbg !9407
  %call76 = call zeroext i8 @BLI_rctf_isect_pt_v(%struct.rctf* %rectf, float* %arraydecay75), !dbg !9411
  %tobool77 = icmp ne i8 %call76, 0, !dbg !9411
  br i1 %tobool77, label %if.then78, label %if.end79, !dbg !9412

if.then78:                                        ; preds = %if.then74
  %78 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !9413
  %79 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !9415
  %80 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !9416
  %81 = load i8, i8* %select, align 1, !dbg !9417
  %82 = load i32, i32* %cd_loop_uv_offset, align 4, !dbg !9418
  call void @uvedit_uv_select_set(%struct.BMEditMesh* %78, %struct.Scene* %79, %struct.BMLoop* %80, i8 zeroext %81, i8 zeroext 0, i32 %82), !dbg !9419
  br label %if.end79, !dbg !9420

if.end79:                                         ; preds = %if.then78, %if.then74
  br label %if.end94, !dbg !9421

if.else80:                                        ; preds = %lor.lhs.false
  %83 = load i8, i8* %pinned, align 1, !dbg !9422
  %tobool81 = icmp ne i8 %83, 0, !dbg !9422
  br i1 %tobool81, label %if.then82, label %if.end93, !dbg !9424

if.then82:                                        ; preds = %if.else80
  %84 = load %struct.MLoopUV*, %struct.MLoopUV** %luv, align 8, !dbg !9425
  %flag = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %84, i32 0, i32 1, !dbg !9428
  %85 = load i32, i32* %flag, align 4, !dbg !9428
  %and83 = and i32 %85, 4, !dbg !9429
  %tobool84 = icmp ne i32 %and83, 0, !dbg !9429
  br i1 %tobool84, label %land.lhs.true85, label %if.end92, !dbg !9430

land.lhs.true85:                                  ; preds = %if.then82
  %86 = load %struct.MLoopUV*, %struct.MLoopUV** %luv, align 8, !dbg !9431
  %uv86 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %86, i32 0, i32 0, !dbg !9432
  %arraydecay87 = getelementptr inbounds [2 x float], [2 x float]* %uv86, i64 0, i64 0, !dbg !9431
  %call88 = call zeroext i8 @BLI_rctf_isect_pt_v(%struct.rctf* %rectf, float* %arraydecay87), !dbg !9433
  %conv89 = zext i8 %call88 to i32, !dbg !9433
  %tobool90 = icmp ne i32 %conv89, 0, !dbg !9433
  br i1 %tobool90, label %if.then91, label %if.end92, !dbg !9434

if.then91:                                        ; preds = %land.lhs.true85
  %87 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !9435
  %88 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !9437
  %89 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !9438
  %90 = load i8, i8* %select, align 1, !dbg !9439
  %91 = load i32, i32* %cd_loop_uv_offset, align 4, !dbg !9440
  call void @uvedit_uv_select_set(%struct.BMEditMesh* %87, %struct.Scene* %88, %struct.BMLoop* %89, i8 zeroext %90, i8 zeroext 0, i32 %91), !dbg !9441
  br label %if.end92, !dbg !9442

if.end92:                                         ; preds = %if.then91, %land.lhs.true85, %if.then82
  br label %if.end93, !dbg !9443

if.end93:                                         ; preds = %if.end92, %if.else80
  br label %if.end94

if.end94:                                         ; preds = %if.end93, %if.end79
  br label %for.inc95, !dbg !9444

for.inc95:                                        ; preds = %if.end94
  %call96 = call i8* @BM_iter_step(%struct.BMIter* %liter), !dbg !9395
  %92 = bitcast i8* %call96 to %struct.BMLoop*, !dbg !9395
  store %struct.BMLoop* %92, %struct.BMLoop** %l, align 8, !dbg !9395
  br label %for.cond62, !dbg !9395, !llvm.loop !9445

for.end97:                                        ; preds = %for.cond62
  br label %for.inc98, !dbg !9447

for.inc98:                                        ; preds = %for.end97, %if.then59
  %call99 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !9380
  %93 = bitcast i8* %call99 to %struct.BMFace*, !dbg !9380
  store %struct.BMFace* %93, %struct.BMFace** %efa, align 8, !dbg !9380
  br label %for.cond50, !dbg !9380, !llvm.loop !9448

for.end100:                                       ; preds = %for.cond50
  br label %if.end101

if.end101:                                        ; preds = %for.end100, %if.end47
  %94 = load i8, i8* %changed, align 1, !dbg !9450
  %tobool102 = icmp ne i8 %94, 0, !dbg !9450
  br i1 %tobool102, label %if.then103, label %if.end112, !dbg !9452

if.then103:                                       ; preds = %if.end101
  %95 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !9453
  %96 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !9455
  %97 = load i8, i8* %select, align 1, !dbg !9456
  %conv104 = zext i8 %97 to i16, !dbg !9456
  call void @uv_select_sync_flush(%struct.ToolSettings* %95, %struct.BMEditMesh* %96, i16 signext %conv104), !dbg !9457
  %98 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !9458
  %uv_flag105 = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %98, i32 0, i32 11, !dbg !9460
  %99 = load i8, i8* %uv_flag105, align 2, !dbg !9460
  %conv106 = zext i8 %99 to i32, !dbg !9458
  %and107 = and i32 %conv106, 1, !dbg !9461
  %tobool108 = icmp ne i32 %and107, 0, !dbg !9461
  br i1 %tobool108, label %if.then109, label %if.end111, !dbg !9462

if.then109:                                       ; preds = %if.then103
  %100 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9463
  %101 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !9465
  %data110 = getelementptr inbounds %struct.Object, %struct.Object* %101, i32 0, i32 19, !dbg !9466
  %102 = load i8*, i8** %data110, align 8, !dbg !9466
  call void @WM_event_add_notifier(%struct.bContext* %100, i32 274333696, i8* %102), !dbg !9467
  br label %if.end111, !dbg !9468

if.end111:                                        ; preds = %if.then109, %if.then103
  store i32 4, i32* %retval, align 4, !dbg !9469
  br label %return, !dbg !9469

if.end112:                                        ; preds = %if.end101
  store i32 2, i32* %retval, align 4, !dbg !9470
  br label %return, !dbg !9470

return:                                           ; preds = %if.end112, %if.end111
  %103 = load i32, i32* %retval, align 4, !dbg !9471
  ret i32 %103, !dbg !9471
}

declare dso_local i32 @WM_border_select_modal(%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*) #2

declare dso_local i32 @ED_operator_uvedit_space_image(%struct.bContext*) #2

declare dso_local void @WM_border_select_cancel(%struct.bContext*, %struct.wmOperator*) #2

declare dso_local void @WM_operator_properties_gesture_border(%struct.wmOperatorType*, i8 zeroext) #2

declare dso_local void @WM_operator_properties_border_to_rctf(%struct.wmOperator*, %struct.rctf*) #2

declare dso_local void @UI_view2d_region_to_view_rctf(%struct.View2D*, %struct.rctf*, %struct.rctf*) #2

declare dso_local i32 @RNA_int_get(%struct.PointerRNA*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @_bm_elem_flag_disable(%struct.BMHeader* %head, i8 zeroext %hflag) #0 !dbg !9472 {
entry:
  %head.addr = alloca %struct.BMHeader*, align 8
  %hflag.addr = alloca i8, align 1
  store %struct.BMHeader* %head, %struct.BMHeader** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMHeader** %head.addr, metadata !9473, metadata !DIExpression()), !dbg !9474
  store i8 %hflag, i8* %hflag.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %hflag.addr, metadata !9475, metadata !DIExpression()), !dbg !9476
  %0 = load i8, i8* %hflag.addr, align 1, !dbg !9477
  %conv = zext i8 %0 to i32, !dbg !9477
  %neg = xor i32 %conv, -1, !dbg !9478
  %conv1 = trunc i32 %neg to i8, !dbg !9479
  %conv2 = zext i8 %conv1 to i32, !dbg !9479
  %1 = load %struct.BMHeader*, %struct.BMHeader** %head.addr, align 8, !dbg !9480
  %hflag3 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %1, i32 0, i32 3, !dbg !9481
  %2 = load i8, i8* %hflag3, align 1, !dbg !9482
  %conv4 = zext i8 %2 to i32, !dbg !9482
  %and = and i32 %conv4, %conv2, !dbg !9482
  %conv5 = trunc i32 %and to i8, !dbg !9482
  store i8 %conv5, i8* %hflag3, align 1, !dbg !9482
  ret void, !dbg !9483
}

declare dso_local zeroext i8 @BLI_rctf_isect_pt_v(%struct.rctf*, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @uv_select_flush_from_tag_face(%struct.SpaceImage* %sima, %struct.Scene* %scene, %struct.Object* %obedit, i8 zeroext %select) #0 !dbg !9484 {
entry:
  %sima.addr = alloca %struct.SpaceImage*, align 8
  %scene.addr = alloca %struct.Scene*, align 8
  %obedit.addr = alloca %struct.Object*, align 8
  %select.addr = alloca i8, align 1
  %ts = alloca %struct.ToolSettings*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  %efa = alloca %struct.BMFace*, align 8
  %l = alloca %struct.BMLoop*, align 8
  %iter = alloca %struct.BMIter, align 8
  %liter = alloca %struct.BMIter, align 8
  %cd_loop_uv_offset = alloca i32, align 4
  %eve = alloca %struct.BMVert*, align 8
  %vmap = alloca %struct.UvVertMap*, align 8
  %limit = alloca [2 x float], align 4
  %efa_index = alloca i32, align 4
  store %struct.SpaceImage* %sima, %struct.SpaceImage** %sima.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SpaceImage** %sima.addr, metadata !9487, metadata !DIExpression()), !dbg !9488
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !9489, metadata !DIExpression()), !dbg !9490
  store %struct.Object* %obedit, %struct.Object** %obedit.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit.addr, metadata !9491, metadata !DIExpression()), !dbg !9492
  store i8 %select, i8* %select.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %select.addr, metadata !9493, metadata !DIExpression()), !dbg !9494
  call void @llvm.dbg.declare(metadata %struct.ToolSettings** %ts, metadata !9495, metadata !DIExpression()), !dbg !9496
  %0 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !9497
  %toolsettings = getelementptr inbounds %struct.Scene, %struct.Scene* %0, i32 0, i32 20, !dbg !9498
  %1 = load %struct.ToolSettings*, %struct.ToolSettings** %toolsettings, align 8, !dbg !9498
  store %struct.ToolSettings* %1, %struct.ToolSettings** %ts, align 8, !dbg !9496
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !9499, metadata !DIExpression()), !dbg !9500
  %2 = load %struct.Object*, %struct.Object** %obedit.addr, align 8, !dbg !9501
  %call = call %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object* %2), !dbg !9502
  store %struct.BMEditMesh* %call, %struct.BMEditMesh** %em, align 8, !dbg !9500
  call void @llvm.dbg.declare(metadata %struct.BMFace** %efa, metadata !9503, metadata !DIExpression()), !dbg !9504
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l, metadata !9505, metadata !DIExpression()), !dbg !9506
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iter, metadata !9507, metadata !DIExpression()), !dbg !9508
  call void @llvm.dbg.declare(metadata %struct.BMIter* %liter, metadata !9509, metadata !DIExpression()), !dbg !9510
  call void @llvm.dbg.declare(metadata i32* %cd_loop_uv_offset, metadata !9511, metadata !DIExpression()), !dbg !9512
  %3 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !9513
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %3, i32 0, i32 0, !dbg !9514
  %4 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !9514
  %ldata = getelementptr inbounds %struct.BMesh, %struct.BMesh* %4, i32 0, i32 26, !dbg !9515
  %call1 = call i32 @CustomData_get_offset(%struct.CustomData* %ldata, i32 16), !dbg !9516
  store i32 %call1, i32* %cd_loop_uv_offset, align 4, !dbg !9512
  %5 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !9517
  %uv_flag = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %5, i32 0, i32 11, !dbg !9519
  %6 = load i8, i8* %uv_flag, align 2, !dbg !9519
  %conv = zext i8 %6 to i32, !dbg !9517
  %and = and i32 %conv, 1, !dbg !9520
  %cmp = icmp eq i32 %and, 0, !dbg !9521
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !9522

land.lhs.true:                                    ; preds = %entry
  %7 = load %struct.SpaceImage*, %struct.SpaceImage** %sima.addr, align 8, !dbg !9523
  %sticky = getelementptr inbounds %struct.SpaceImage, %struct.SpaceImage* %7, i32 0, i32 23, !dbg !9524
  %8 = load i8, i8* %sticky, align 1, !dbg !9524
  %conv3 = zext i8 %8 to i32, !dbg !9523
  %cmp4 = icmp eq i32 %conv3, 2, !dbg !9525
  br i1 %cmp4, label %if.then, label %if.else, !dbg !9526

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.BMVert** %eve, metadata !9527, metadata !DIExpression()), !dbg !9529
  %9 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !9530
  %bm6 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %9, i32 0, i32 0, !dbg !9530
  %10 = load %struct.BMesh*, %struct.BMesh** %bm6, align 8, !dbg !9530
  %call7 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %10, i8 zeroext 1, i8* null), !dbg !9530
  %11 = bitcast i8* %call7 to %struct.BMVert*, !dbg !9530
  store %struct.BMVert* %11, %struct.BMVert** %eve, align 8, !dbg !9530
  br label %for.cond, !dbg !9530

for.cond:                                         ; preds = %for.inc, %if.then
  %12 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !9532
  %tobool = icmp ne %struct.BMVert* %12, null, !dbg !9530
  br i1 %tobool, label %for.body, label %for.end, !dbg !9530

for.body:                                         ; preds = %for.cond
  %13 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !9534
  %head = getelementptr inbounds %struct.BMVert, %struct.BMVert* %13, i32 0, i32 0, !dbg !9534
  call void @_bm_elem_flag_disable(%struct.BMHeader* %head, i8 zeroext 16), !dbg !9534
  br label %for.inc, !dbg !9536

for.inc:                                          ; preds = %for.body
  %call8 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !9532
  %14 = bitcast i8* %call8 to %struct.BMVert*, !dbg !9532
  store %struct.BMVert* %14, %struct.BMVert** %eve, align 8, !dbg !9532
  br label %for.cond, !dbg !9532, !llvm.loop !9537

for.end:                                          ; preds = %for.cond
  %15 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !9539
  %bm9 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %15, i32 0, i32 0, !dbg !9539
  %16 = load %struct.BMesh*, %struct.BMesh** %bm9, align 8, !dbg !9539
  %call10 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %16, i8 zeroext 3, i8* null), !dbg !9539
  %17 = bitcast i8* %call10 to %struct.BMFace*, !dbg !9539
  store %struct.BMFace* %17, %struct.BMFace** %efa, align 8, !dbg !9539
  br label %for.cond11, !dbg !9539

for.cond11:                                       ; preds = %for.inc26, %for.end
  %18 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !9541
  %tobool12 = icmp ne %struct.BMFace* %18, null, !dbg !9539
  br i1 %tobool12, label %for.body13, label %for.end28, !dbg !9539

for.body13:                                       ; preds = %for.cond11
  %19 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !9543
  %head14 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %19, i32 0, i32 0, !dbg !9543
  %call15 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head14, i8 zeroext 16), !dbg !9543
  %tobool16 = icmp ne i8 %call15, 0, !dbg !9543
  br i1 %tobool16, label %if.then17, label %if.end, !dbg !9546

if.then17:                                        ; preds = %for.body13
  %20 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !9547
  %21 = bitcast %struct.BMFace* %20 to i8*, !dbg !9547
  %call18 = call i8* @BM_iter_new(%struct.BMIter* %liter, %struct.BMesh* null, i8 zeroext 11, i8* %21), !dbg !9547
  %22 = bitcast i8* %call18 to %struct.BMLoop*, !dbg !9547
  store %struct.BMLoop* %22, %struct.BMLoop** %l, align 8, !dbg !9547
  br label %for.cond19, !dbg !9547

for.cond19:                                       ; preds = %for.inc23, %if.then17
  %23 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !9550
  %tobool20 = icmp ne %struct.BMLoop* %23, null, !dbg !9547
  br i1 %tobool20, label %for.body21, label %for.end25, !dbg !9547

for.body21:                                       ; preds = %for.cond19
  %24 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !9552
  %v = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %24, i32 0, i32 1, !dbg !9552
  %25 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !9552
  %head22 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %25, i32 0, i32 0, !dbg !9552
  call void @_bm_elem_flag_enable(%struct.BMHeader* %head22, i8 zeroext 16), !dbg !9552
  br label %for.inc23, !dbg !9554

for.inc23:                                        ; preds = %for.body21
  %call24 = call i8* @BM_iter_step(%struct.BMIter* %liter), !dbg !9550
  %26 = bitcast i8* %call24 to %struct.BMLoop*, !dbg !9550
  store %struct.BMLoop* %26, %struct.BMLoop** %l, align 8, !dbg !9550
  br label %for.cond19, !dbg !9550, !llvm.loop !9555

for.end25:                                        ; preds = %for.cond19
  br label %if.end, !dbg !9557

if.end:                                           ; preds = %for.end25, %for.body13
  br label %for.inc26, !dbg !9558

for.inc26:                                        ; preds = %if.end
  %call27 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !9541
  %27 = bitcast i8* %call27 to %struct.BMFace*, !dbg !9541
  store %struct.BMFace* %27, %struct.BMFace** %efa, align 8, !dbg !9541
  br label %for.cond11, !dbg !9541, !llvm.loop !9559

for.end28:                                        ; preds = %for.cond11
  %28 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !9561
  %bm29 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %28, i32 0, i32 0, !dbg !9561
  %29 = load %struct.BMesh*, %struct.BMesh** %bm29, align 8, !dbg !9561
  %call30 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %29, i8 zeroext 3, i8* null), !dbg !9561
  %30 = bitcast i8* %call30 to %struct.BMFace*, !dbg !9561
  store %struct.BMFace* %30, %struct.BMFace** %efa, align 8, !dbg !9561
  br label %for.cond31, !dbg !9561

for.cond31:                                       ; preds = %for.inc47, %for.end28
  %31 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !9563
  %tobool32 = icmp ne %struct.BMFace* %31, null, !dbg !9561
  br i1 %tobool32, label %for.body33, label %for.end49, !dbg !9561

for.body33:                                       ; preds = %for.cond31
  %32 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !9565
  %33 = bitcast %struct.BMFace* %32 to i8*, !dbg !9565
  %call34 = call i8* @BM_iter_new(%struct.BMIter* %liter, %struct.BMesh* null, i8 zeroext 11, i8* %33), !dbg !9565
  %34 = bitcast i8* %call34 to %struct.BMLoop*, !dbg !9565
  store %struct.BMLoop* %34, %struct.BMLoop** %l, align 8, !dbg !9565
  br label %for.cond35, !dbg !9565

for.cond35:                                       ; preds = %for.inc44, %for.body33
  %35 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !9568
  %tobool36 = icmp ne %struct.BMLoop* %35, null, !dbg !9565
  br i1 %tobool36, label %for.body37, label %for.end46, !dbg !9565

for.body37:                                       ; preds = %for.cond35
  %36 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !9570
  %v38 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %36, i32 0, i32 1, !dbg !9570
  %37 = load %struct.BMVert*, %struct.BMVert** %v38, align 8, !dbg !9570
  %head39 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %37, i32 0, i32 0, !dbg !9570
  %call40 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head39, i8 zeroext 16), !dbg !9570
  %tobool41 = icmp ne i8 %call40, 0, !dbg !9570
  br i1 %tobool41, label %if.then42, label %if.end43, !dbg !9573

if.then42:                                        ; preds = %for.body37
  %38 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !9574
  %39 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !9576
  %40 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !9577
  %41 = load i8, i8* %select.addr, align 1, !dbg !9578
  %42 = load i32, i32* %cd_loop_uv_offset, align 4, !dbg !9579
  call void @uvedit_uv_select_set(%struct.BMEditMesh* %38, %struct.Scene* %39, %struct.BMLoop* %40, i8 zeroext %41, i8 zeroext 0, i32 %42), !dbg !9580
  br label %if.end43, !dbg !9581

if.end43:                                         ; preds = %if.then42, %for.body37
  br label %for.inc44, !dbg !9582

for.inc44:                                        ; preds = %if.end43
  %call45 = call i8* @BM_iter_step(%struct.BMIter* %liter), !dbg !9568
  %43 = bitcast i8* %call45 to %struct.BMLoop*, !dbg !9568
  store %struct.BMLoop* %43, %struct.BMLoop** %l, align 8, !dbg !9568
  br label %for.cond35, !dbg !9568, !llvm.loop !9583

for.end46:                                        ; preds = %for.cond35
  br label %for.inc47, !dbg !9585

for.inc47:                                        ; preds = %for.end46
  %call48 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !9563
  %44 = bitcast i8* %call48 to %struct.BMFace*, !dbg !9563
  store %struct.BMFace* %44, %struct.BMFace** %efa, align 8, !dbg !9563
  br label %for.cond31, !dbg !9563, !llvm.loop !9586

for.end49:                                        ; preds = %for.cond31
  br label %if.end105, !dbg !9588

if.else:                                          ; preds = %land.lhs.true, %entry
  %45 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !9589
  %uv_flag50 = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %45, i32 0, i32 11, !dbg !9591
  %46 = load i8, i8* %uv_flag50, align 2, !dbg !9591
  %conv51 = zext i8 %46 to i32, !dbg !9589
  %and52 = and i32 %conv51, 1, !dbg !9592
  %cmp53 = icmp eq i32 %and52, 0, !dbg !9593
  br i1 %cmp53, label %land.lhs.true55, label %if.else89, !dbg !9594

land.lhs.true55:                                  ; preds = %if.else
  %47 = load %struct.SpaceImage*, %struct.SpaceImage** %sima.addr, align 8, !dbg !9595
  %sticky56 = getelementptr inbounds %struct.SpaceImage, %struct.SpaceImage* %47, i32 0, i32 23, !dbg !9596
  %48 = load i8, i8* %sticky56, align 1, !dbg !9596
  %conv57 = zext i8 %48 to i32, !dbg !9595
  %cmp58 = icmp eq i32 %conv57, 0, !dbg !9597
  br i1 %cmp58, label %if.then60, label %if.else89, !dbg !9598

if.then60:                                        ; preds = %land.lhs.true55
  call void @llvm.dbg.declare(metadata %struct.UvVertMap** %vmap, metadata !9599, metadata !DIExpression()), !dbg !9602
  call void @llvm.dbg.declare(metadata [2 x float]* %limit, metadata !9603, metadata !DIExpression()), !dbg !9604
  call void @llvm.dbg.declare(metadata i32* %efa_index, metadata !9605, metadata !DIExpression()), !dbg !9606
  %49 = load %struct.SpaceImage*, %struct.SpaceImage** %sima.addr, align 8, !dbg !9607
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %limit, i64 0, i64 0, !dbg !9608
  call void @uvedit_pixel_to_float(%struct.SpaceImage* %49, float* %arraydecay, float 0x3FA99999A0000000), !dbg !9609
  %50 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !9610
  %bm61 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %50, i32 0, i32 0, !dbg !9611
  %51 = load %struct.BMesh*, %struct.BMesh** %bm61, align 8, !dbg !9611
  call void @BM_mesh_elem_table_ensure(%struct.BMesh* %51, i8 zeroext 8), !dbg !9612
  %52 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !9613
  %bm62 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %52, i32 0, i32 0, !dbg !9614
  %53 = load %struct.BMesh*, %struct.BMesh** %bm62, align 8, !dbg !9614
  %arraydecay63 = getelementptr inbounds [2 x float], [2 x float]* %limit, i64 0, i64 0, !dbg !9615
  %call64 = call %struct.UvVertMap* @BM_uv_vert_map_create(%struct.BMesh* %53, i8 zeroext 0, float* %arraydecay63), !dbg !9616
  store %struct.UvVertMap* %call64, %struct.UvVertMap** %vmap, align 8, !dbg !9617
  %54 = load %struct.UvVertMap*, %struct.UvVertMap** %vmap, align 8, !dbg !9618
  %cmp65 = icmp eq %struct.UvVertMap* %54, null, !dbg !9620
  br i1 %cmp65, label %if.then67, label %if.end68, !dbg !9621

if.then67:                                        ; preds = %if.then60
  br label %if.end105, !dbg !9622

if.end68:                                         ; preds = %if.then60
  %55 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !9624
  %bm69 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %55, i32 0, i32 0, !dbg !9624
  %56 = load %struct.BMesh*, %struct.BMesh** %bm69, align 8, !dbg !9624
  %call70 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %56, i8 zeroext 3, i8* null), !dbg !9624
  %57 = bitcast i8* %call70 to %struct.BMFace*, !dbg !9624
  store %struct.BMFace* %57, %struct.BMFace** %efa, align 8, !dbg !9624
  store i32 0, i32* %efa_index, align 4, !dbg !9624
  br label %for.cond71, !dbg !9624

for.cond71:                                       ; preds = %for.inc86, %if.end68
  %58 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !9626
  %tobool72 = icmp ne %struct.BMFace* %58, null, !dbg !9624
  br i1 %tobool72, label %for.body73, label %for.end88, !dbg !9624

for.body73:                                       ; preds = %for.cond71
  %59 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !9628
  %head74 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %59, i32 0, i32 0, !dbg !9628
  %call75 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head74, i8 zeroext 16), !dbg !9628
  %tobool76 = icmp ne i8 %call75, 0, !dbg !9628
  br i1 %tobool76, label %if.then77, label %if.end85, !dbg !9631

if.then77:                                        ; preds = %for.body73
  %60 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !9632
  %61 = bitcast %struct.BMFace* %60 to i8*, !dbg !9632
  %call78 = call i8* @BM_iter_new(%struct.BMIter* %liter, %struct.BMesh* null, i8 zeroext 11, i8* %61), !dbg !9632
  %62 = bitcast i8* %call78 to %struct.BMLoop*, !dbg !9632
  store %struct.BMLoop* %62, %struct.BMLoop** %l, align 8, !dbg !9632
  br label %for.cond79, !dbg !9632

for.cond79:                                       ; preds = %for.inc82, %if.then77
  %63 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !9635
  %tobool80 = icmp ne %struct.BMLoop* %63, null, !dbg !9632
  br i1 %tobool80, label %for.body81, label %for.end84, !dbg !9632

for.body81:                                       ; preds = %for.cond79
  %64 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !9637
  %65 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !9639
  %66 = load %struct.UvVertMap*, %struct.UvVertMap** %vmap, align 8, !dbg !9640
  %67 = load i32, i32* %efa_index, align 4, !dbg !9641
  %68 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !9642
  %69 = load i8, i8* %select.addr, align 1, !dbg !9643
  %70 = load i32, i32* %cd_loop_uv_offset, align 4, !dbg !9644
  call void @uv_select_flush_from_tag_sticky_loc_internal(%struct.Scene* %64, %struct.BMEditMesh* %65, %struct.UvVertMap* %66, i32 %67, %struct.BMLoop* %68, i8 zeroext %69, i32 %70), !dbg !9645
  br label %for.inc82, !dbg !9646

for.inc82:                                        ; preds = %for.body81
  %call83 = call i8* @BM_iter_step(%struct.BMIter* %liter), !dbg !9635
  %71 = bitcast i8* %call83 to %struct.BMLoop*, !dbg !9635
  store %struct.BMLoop* %71, %struct.BMLoop** %l, align 8, !dbg !9635
  br label %for.cond79, !dbg !9635, !llvm.loop !9647

for.end84:                                        ; preds = %for.cond79
  br label %if.end85, !dbg !9649

if.end85:                                         ; preds = %for.end84, %for.body73
  br label %for.inc86, !dbg !9650

for.inc86:                                        ; preds = %if.end85
  %call87 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !9626
  %72 = bitcast i8* %call87 to %struct.BMFace*, !dbg !9626
  store %struct.BMFace* %72, %struct.BMFace** %efa, align 8, !dbg !9626
  %73 = load i32, i32* %efa_index, align 4, !dbg !9626
  %inc = add i32 %73, 1, !dbg !9626
  store i32 %inc, i32* %efa_index, align 4, !dbg !9626
  br label %for.cond71, !dbg !9626, !llvm.loop !9651

for.end88:                                        ; preds = %for.cond71
  %74 = load %struct.UvVertMap*, %struct.UvVertMap** %vmap, align 8, !dbg !9653
  call void @BM_uv_vert_map_free(%struct.UvVertMap* %74), !dbg !9654
  br label %if.end104, !dbg !9655

if.else89:                                        ; preds = %land.lhs.true55, %if.else
  %75 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !9656
  %bm90 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %75, i32 0, i32 0, !dbg !9656
  %76 = load %struct.BMesh*, %struct.BMesh** %bm90, align 8, !dbg !9656
  %call91 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %76, i8 zeroext 3, i8* null), !dbg !9656
  %77 = bitcast i8* %call91 to %struct.BMFace*, !dbg !9656
  store %struct.BMFace* %77, %struct.BMFace** %efa, align 8, !dbg !9656
  br label %for.cond92, !dbg !9656

for.cond92:                                       ; preds = %for.inc101, %if.else89
  %78 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !9659
  %tobool93 = icmp ne %struct.BMFace* %78, null, !dbg !9656
  br i1 %tobool93, label %for.body94, label %for.end103, !dbg !9656

for.body94:                                       ; preds = %for.cond92
  %79 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !9661
  %head95 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %79, i32 0, i32 0, !dbg !9661
  %call96 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head95, i8 zeroext 16), !dbg !9661
  %tobool97 = icmp ne i8 %call96, 0, !dbg !9661
  br i1 %tobool97, label %if.then98, label %if.end100, !dbg !9664

if.then98:                                        ; preds = %for.body94
  %80 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !9665
  %81 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !9667
  %82 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !9668
  %83 = load i8, i8* %select.addr, align 1, !dbg !9669
  %84 = load i32, i32* %cd_loop_uv_offset, align 4, !dbg !9670
  %call99 = call zeroext i8 @uvedit_face_select_set(%struct.Scene* %80, %struct.BMEditMesh* %81, %struct.BMFace* %82, i8 zeroext %83, i8 zeroext 0, i32 %84), !dbg !9671
  br label %if.end100, !dbg !9672

if.end100:                                        ; preds = %if.then98, %for.body94
  br label %for.inc101, !dbg !9673

for.inc101:                                       ; preds = %if.end100
  %call102 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !9659
  %85 = bitcast i8* %call102 to %struct.BMFace*, !dbg !9659
  store %struct.BMFace* %85, %struct.BMFace** %efa, align 8, !dbg !9659
  br label %for.cond92, !dbg !9659, !llvm.loop !9674

for.end103:                                       ; preds = %for.cond92
  br label %if.end104

if.end104:                                        ; preds = %for.end103, %for.end88
  br label %if.end105

if.end105:                                        ; preds = %if.then67, %if.end104, %for.end49
  ret void, !dbg !9676
}

; Function Attrs: noinline nounwind uwtable
define internal void @uv_select_sync_flush(%struct.ToolSettings* %ts, %struct.BMEditMesh* %em, i16 signext %select) #0 !dbg !9677 {
entry:
  %ts.addr = alloca %struct.ToolSettings*, align 8
  %em.addr = alloca %struct.BMEditMesh*, align 8
  %select.addr = alloca i16, align 2
  store %struct.ToolSettings* %ts, %struct.ToolSettings** %ts.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ToolSettings** %ts.addr, metadata !9681, metadata !DIExpression()), !dbg !9682
  store %struct.BMEditMesh* %em, %struct.BMEditMesh** %em.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em.addr, metadata !9683, metadata !DIExpression()), !dbg !9684
  store i16 %select, i16* %select.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %select.addr, metadata !9685, metadata !DIExpression()), !dbg !9686
  %0 = load %struct.ToolSettings*, %struct.ToolSettings** %ts.addr, align 8, !dbg !9687
  %uv_flag = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %0, i32 0, i32 11, !dbg !9689
  %1 = load i8, i8* %uv_flag, align 2, !dbg !9689
  %conv = zext i8 %1 to i32, !dbg !9687
  %and = and i32 %conv, 1, !dbg !9690
  %tobool = icmp ne i32 %and, 0, !dbg !9690
  br i1 %tobool, label %if.then, label %if.end14, !dbg !9691

if.then:                                          ; preds = %entry
  %2 = load %struct.ToolSettings*, %struct.ToolSettings** %ts.addr, align 8, !dbg !9692
  %selectmode = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %2, i32 0, i32 8, !dbg !9695
  %3 = load i16, i16* %selectmode, align 2, !dbg !9695
  %conv1 = sext i16 %3 to i32, !dbg !9692
  %cmp = icmp ne i32 %conv1, 4, !dbg !9696
  br i1 %cmp, label %if.then3, label %if.end8, !dbg !9697

if.then3:                                         ; preds = %if.then
  %4 = load i16, i16* %select.addr, align 2, !dbg !9698
  %conv4 = sext i16 %4 to i32, !dbg !9698
  %cmp5 = icmp eq i32 %conv4, 0, !dbg !9701
  br i1 %cmp5, label %if.then7, label %if.else, !dbg !9702

if.then7:                                         ; preds = %if.then3
  %5 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !9703
  call void @EDBM_deselect_flush(%struct.BMEditMesh* %5), !dbg !9705
  br label %if.end, !dbg !9706

if.else:                                          ; preds = %if.then3
  %6 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !9707
  call void @EDBM_select_flush(%struct.BMEditMesh* %6), !dbg !9709
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then7
  br label %if.end8, !dbg !9710

if.end8:                                          ; preds = %if.end, %if.then
  %7 = load i16, i16* %select.addr, align 2, !dbg !9711
  %conv9 = sext i16 %7 to i32, !dbg !9711
  %cmp10 = icmp eq i32 %conv9, 0, !dbg !9713
  br i1 %cmp10, label %if.then12, label %if.end13, !dbg !9714

if.then12:                                        ; preds = %if.end8
  %8 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !9715
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %8, i32 0, i32 0, !dbg !9717
  %9 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !9717
  call void @BM_select_history_validate(%struct.BMesh* %9), !dbg !9718
  br label %if.end13, !dbg !9719

if.end13:                                         ; preds = %if.then12, %if.end8
  br label %if.end14, !dbg !9720

if.end14:                                         ; preds = %if.end13, %entry
  ret void, !dbg !9721
}

; Function Attrs: noinline nounwind uwtable
define internal void @uv_select_flush_from_tag_sticky_loc_internal(%struct.Scene* %scene, %struct.BMEditMesh* %em, %struct.UvVertMap* %vmap, i32 %efa_index, %struct.BMLoop* %l, i8 zeroext %select, i32 %cd_loop_uv_offset) #0 !dbg !9722 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %em.addr = alloca %struct.BMEditMesh*, align 8
  %vmap.addr = alloca %struct.UvVertMap*, align 8
  %efa_index.addr = alloca i32, align 4
  %l.addr = alloca %struct.BMLoop*, align 8
  %select.addr = alloca i8, align 1
  %cd_loop_uv_offset.addr = alloca i32, align 4
  %start_vlist = alloca %struct.UvMapVert*, align 8
  %vlist_iter = alloca %struct.UvMapVert*, align 8
  %efa_vlist = alloca %struct.BMFace*, align 8
  %l_other = alloca %struct.BMLoop*, align 8
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !9726, metadata !DIExpression()), !dbg !9727
  store %struct.BMEditMesh* %em, %struct.BMEditMesh** %em.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em.addr, metadata !9728, metadata !DIExpression()), !dbg !9729
  store %struct.UvVertMap* %vmap, %struct.UvVertMap** %vmap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.UvVertMap** %vmap.addr, metadata !9730, metadata !DIExpression()), !dbg !9731
  store i32 %efa_index, i32* %efa_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %efa_index.addr, metadata !9732, metadata !DIExpression()), !dbg !9733
  store %struct.BMLoop* %l, %struct.BMLoop** %l.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l.addr, metadata !9734, metadata !DIExpression()), !dbg !9735
  store i8 %select, i8* %select.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %select.addr, metadata !9736, metadata !DIExpression()), !dbg !9737
  store i32 %cd_loop_uv_offset, i32* %cd_loop_uv_offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cd_loop_uv_offset.addr, metadata !9738, metadata !DIExpression()), !dbg !9739
  call void @llvm.dbg.declare(metadata %struct.UvMapVert** %start_vlist, metadata !9740, metadata !DIExpression()), !dbg !9741
  store %struct.UvMapVert* null, %struct.UvMapVert** %start_vlist, align 8, !dbg !9741
  call void @llvm.dbg.declare(metadata %struct.UvMapVert** %vlist_iter, metadata !9742, metadata !DIExpression()), !dbg !9743
  call void @llvm.dbg.declare(metadata %struct.BMFace** %efa_vlist, metadata !9744, metadata !DIExpression()), !dbg !9745
  %0 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !9746
  %1 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !9747
  %2 = load %struct.BMLoop*, %struct.BMLoop** %l.addr, align 8, !dbg !9748
  %3 = load i8, i8* %select.addr, align 1, !dbg !9749
  %4 = load i32, i32* %cd_loop_uv_offset.addr, align 4, !dbg !9750
  call void @uvedit_uv_select_set(%struct.BMEditMesh* %0, %struct.Scene* %1, %struct.BMLoop* %2, i8 zeroext %3, i8 zeroext 0, i32 %4), !dbg !9751
  %5 = load %struct.UvVertMap*, %struct.UvVertMap** %vmap.addr, align 8, !dbg !9752
  %6 = load %struct.BMLoop*, %struct.BMLoop** %l.addr, align 8, !dbg !9753
  %v = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %6, i32 0, i32 1, !dbg !9753
  %7 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !9753
  %head = getelementptr inbounds %struct.BMVert, %struct.BMVert* %7, i32 0, i32 0, !dbg !9753
  %call = call i32 @_bm_elem_index_get(%struct.BMHeader* %head), !dbg !9753
  %call1 = call %struct.UvMapVert* @BM_uv_vert_map_at_index(%struct.UvVertMap* %5, i32 %call), !dbg !9754
  store %struct.UvMapVert* %call1, %struct.UvMapVert** %vlist_iter, align 8, !dbg !9755
  br label %while.cond, !dbg !9756

while.cond:                                       ; preds = %if.end4, %entry
  %8 = load %struct.UvMapVert*, %struct.UvMapVert** %vlist_iter, align 8, !dbg !9757
  %tobool = icmp ne %struct.UvMapVert* %8, null, !dbg !9756
  br i1 %tobool, label %while.body, label %while.end, !dbg !9756

while.body:                                       ; preds = %while.cond
  %9 = load %struct.UvMapVert*, %struct.UvMapVert** %vlist_iter, align 8, !dbg !9758
  %separate = getelementptr inbounds %struct.UvMapVert, %struct.UvMapVert* %9, i32 0, i32 3, !dbg !9761
  %10 = load i8, i8* %separate, align 1, !dbg !9761
  %tobool2 = icmp ne i8 %10, 0, !dbg !9758
  br i1 %tobool2, label %if.then, label %if.end, !dbg !9762

if.then:                                          ; preds = %while.body
  %11 = load %struct.UvMapVert*, %struct.UvMapVert** %vlist_iter, align 8, !dbg !9763
  store %struct.UvMapVert* %11, %struct.UvMapVert** %start_vlist, align 8, !dbg !9764
  br label %if.end, !dbg !9765

if.end:                                           ; preds = %if.then, %while.body
  %12 = load i32, i32* %efa_index.addr, align 4, !dbg !9766
  %13 = load %struct.UvMapVert*, %struct.UvMapVert** %vlist_iter, align 8, !dbg !9768
  %f = getelementptr inbounds %struct.UvMapVert, %struct.UvMapVert* %13, i32 0, i32 1, !dbg !9769
  %14 = load i32, i32* %f, align 8, !dbg !9769
  %cmp = icmp eq i32 %12, %14, !dbg !9770
  br i1 %cmp, label %if.then3, label %if.end4, !dbg !9771

if.then3:                                         ; preds = %if.end
  br label %while.end, !dbg !9772

if.end4:                                          ; preds = %if.end
  %15 = load %struct.UvMapVert*, %struct.UvMapVert** %vlist_iter, align 8, !dbg !9773
  %next = getelementptr inbounds %struct.UvMapVert, %struct.UvMapVert* %15, i32 0, i32 0, !dbg !9774
  %16 = load %struct.UvMapVert*, %struct.UvMapVert** %next, align 8, !dbg !9774
  store %struct.UvMapVert* %16, %struct.UvMapVert** %vlist_iter, align 8, !dbg !9775
  br label %while.cond, !dbg !9756, !llvm.loop !9776

while.end:                                        ; preds = %if.then3, %while.cond
  %17 = load %struct.UvMapVert*, %struct.UvMapVert** %start_vlist, align 8, !dbg !9778
  store %struct.UvMapVert* %17, %struct.UvMapVert** %vlist_iter, align 8, !dbg !9779
  br label %while.cond5, !dbg !9780

while.cond5:                                      ; preds = %if.end22, %while.end
  %18 = load %struct.UvMapVert*, %struct.UvMapVert** %vlist_iter, align 8, !dbg !9781
  %tobool6 = icmp ne %struct.UvMapVert* %18, null, !dbg !9780
  br i1 %tobool6, label %while.body7, label %while.end24, !dbg !9780

while.body7:                                      ; preds = %while.cond5
  %19 = load %struct.UvMapVert*, %struct.UvMapVert** %vlist_iter, align 8, !dbg !9782
  %20 = load %struct.UvMapVert*, %struct.UvMapVert** %start_vlist, align 8, !dbg !9785
  %cmp8 = icmp ne %struct.UvMapVert* %19, %20, !dbg !9786
  br i1 %cmp8, label %land.lhs.true, label %if.end12, !dbg !9787

land.lhs.true:                                    ; preds = %while.body7
  %21 = load %struct.UvMapVert*, %struct.UvMapVert** %vlist_iter, align 8, !dbg !9788
  %separate9 = getelementptr inbounds %struct.UvMapVert, %struct.UvMapVert* %21, i32 0, i32 3, !dbg !9789
  %22 = load i8, i8* %separate9, align 1, !dbg !9789
  %conv = zext i8 %22 to i32, !dbg !9788
  %tobool10 = icmp ne i32 %conv, 0, !dbg !9788
  br i1 %tobool10, label %if.then11, label %if.end12, !dbg !9790

if.then11:                                        ; preds = %land.lhs.true
  br label %while.end24, !dbg !9791

if.end12:                                         ; preds = %land.lhs.true, %while.body7
  %23 = load i32, i32* %efa_index.addr, align 4, !dbg !9792
  %24 = load %struct.UvMapVert*, %struct.UvMapVert** %vlist_iter, align 8, !dbg !9794
  %f13 = getelementptr inbounds %struct.UvMapVert, %struct.UvMapVert* %24, i32 0, i32 1, !dbg !9795
  %25 = load i32, i32* %f13, align 8, !dbg !9795
  %cmp14 = icmp ne i32 %23, %25, !dbg !9796
  br i1 %cmp14, label %if.then16, label %if.end22, !dbg !9797

if.then16:                                        ; preds = %if.end12
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l_other, metadata !9798, metadata !DIExpression()), !dbg !9800
  %26 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !9801
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %26, i32 0, i32 0, !dbg !9802
  %27 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !9802
  %28 = load %struct.UvMapVert*, %struct.UvMapVert** %vlist_iter, align 8, !dbg !9803
  %f17 = getelementptr inbounds %struct.UvMapVert, %struct.UvMapVert* %28, i32 0, i32 1, !dbg !9804
  %29 = load i32, i32* %f17, align 8, !dbg !9804
  %call18 = call %struct.BMFace* @BM_face_at_index(%struct.BMesh* %27, i32 %29), !dbg !9805
  store %struct.BMFace* %call18, %struct.BMFace** %efa_vlist, align 8, !dbg !9806
  %30 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !9807
  %bm19 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %30, i32 0, i32 0, !dbg !9808
  %31 = load %struct.BMesh*, %struct.BMesh** %bm19, align 8, !dbg !9808
  %32 = load %struct.BMFace*, %struct.BMFace** %efa_vlist, align 8, !dbg !9809
  %33 = bitcast %struct.BMFace* %32 to i8*, !dbg !9809
  %34 = load %struct.UvMapVert*, %struct.UvMapVert** %vlist_iter, align 8, !dbg !9810
  %tfindex = getelementptr inbounds %struct.UvMapVert, %struct.UvMapVert* %34, i32 0, i32 2, !dbg !9811
  %35 = load i8, i8* %tfindex, align 4, !dbg !9811
  %conv20 = zext i8 %35 to i32, !dbg !9810
  %call21 = call i8* @BM_iter_at_index(%struct.BMesh* %31, i8 zeroext 11, i8* %33, i32 %conv20), !dbg !9812
  %36 = bitcast i8* %call21 to %struct.BMLoop*, !dbg !9812
  store %struct.BMLoop* %36, %struct.BMLoop** %l_other, align 8, !dbg !9813
  %37 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !9814
  %38 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !9815
  %39 = load %struct.BMLoop*, %struct.BMLoop** %l_other, align 8, !dbg !9816
  %40 = load i8, i8* %select.addr, align 1, !dbg !9817
  %41 = load i32, i32* %cd_loop_uv_offset.addr, align 4, !dbg !9818
  call void @uvedit_uv_select_set(%struct.BMEditMesh* %37, %struct.Scene* %38, %struct.BMLoop* %39, i8 zeroext %40, i8 zeroext 0, i32 %41), !dbg !9819
  br label %if.end22, !dbg !9820

if.end22:                                         ; preds = %if.then16, %if.end12
  %42 = load %struct.UvMapVert*, %struct.UvMapVert** %vlist_iter, align 8, !dbg !9821
  %next23 = getelementptr inbounds %struct.UvMapVert, %struct.UvMapVert* %42, i32 0, i32 0, !dbg !9822
  %43 = load %struct.UvMapVert*, %struct.UvMapVert** %next23, align 8, !dbg !9822
  store %struct.UvMapVert* %43, %struct.UvMapVert** %vlist_iter, align 8, !dbg !9823
  br label %while.cond5, !dbg !9780, !llvm.loop !9824

while.end24:                                      ; preds = %if.then11, %while.cond5
  ret void, !dbg !9826
}

declare dso_local i8* @BM_iter_at_index(%struct.BMesh*, i8 zeroext, i8*, i32) #2

declare dso_local i32 @WM_gesture_lasso_invoke(%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*) #2

declare dso_local i32 @WM_gesture_lasso_modal(%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @uv_lasso_select_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !9827 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %mcords_tot = alloca i32, align 4
  %mcords = alloca [2 x i32]*, align 8
  %select = alloca i8, align 1
  %extend = alloca i8, align 1
  %changed = alloca i8, align 1
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !9828, metadata !DIExpression()), !dbg !9829
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !9830, metadata !DIExpression()), !dbg !9831
  call void @llvm.dbg.declare(metadata i32* %mcords_tot, metadata !9832, metadata !DIExpression()), !dbg !9833
  call void @llvm.dbg.declare(metadata [2 x i32]** %mcords, metadata !9834, metadata !DIExpression()), !dbg !9837
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9838
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9839
  %call = call [2 x i32]* @WM_gesture_lasso_path_to_array(%struct.bContext* %0, %struct.wmOperator* %1, i32* %mcords_tot), !dbg !9840
  store [2 x i32]* %call, [2 x i32]** %mcords, align 8, !dbg !9837
  %2 = load [2 x i32]*, [2 x i32]** %mcords, align 8, !dbg !9841
  %tobool = icmp ne [2 x i32]* %2, null, !dbg !9841
  br i1 %tobool, label %if.then, label %if.end, !dbg !9843

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %select, metadata !9844, metadata !DIExpression()), !dbg !9846
  call void @llvm.dbg.declare(metadata i8* %extend, metadata !9847, metadata !DIExpression()), !dbg !9848
  call void @llvm.dbg.declare(metadata i8* %changed, metadata !9849, metadata !DIExpression()), !dbg !9850
  %3 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9851
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %3, i32 0, i32 7, !dbg !9852
  %4 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !9852
  %call1 = call i32 @RNA_boolean_get(%struct.PointerRNA* %4, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.13, i64 0, i64 0)), !dbg !9853
  %tobool2 = icmp ne i32 %call1, 0, !dbg !9854
  %lnot = xor i1 %tobool2, true, !dbg !9854
  %lnot.ext = zext i1 %lnot to i32, !dbg !9854
  %conv = trunc i32 %lnot.ext to i8, !dbg !9854
  store i8 %conv, i8* %select, align 1, !dbg !9855
  %5 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9856
  %ptr3 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %5, i32 0, i32 7, !dbg !9857
  %6 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr3, align 8, !dbg !9857
  %call4 = call i32 @RNA_boolean_get(%struct.PointerRNA* %6, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6, i64 0, i64 0)), !dbg !9858
  %conv5 = trunc i32 %call4 to i8, !dbg !9858
  store i8 %conv5, i8* %extend, align 1, !dbg !9859
  %7 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9860
  %8 = load [2 x i32]*, [2 x i32]** %mcords, align 8, !dbg !9861
  %9 = load i32, i32* %mcords_tot, align 4, !dbg !9862
  %conv6 = trunc i32 %9 to i16, !dbg !9862
  %10 = load i8, i8* %select, align 1, !dbg !9863
  %11 = load i8, i8* %extend, align 1, !dbg !9864
  %call7 = call zeroext i8 @do_lasso_select_mesh_uv(%struct.bContext* %7, [2 x i32]* %8, i16 signext %conv6, i8 zeroext %10, i8 zeroext %11), !dbg !9865
  store i8 %call7, i8* %changed, align 1, !dbg !9866
  %12 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !9867
  %13 = load [2 x i32]*, [2 x i32]** %mcords, align 8, !dbg !9868
  %14 = bitcast [2 x i32]* %13 to i8*, !dbg !9869
  call void %12(i8* %14), !dbg !9867
  %15 = load i8, i8* %changed, align 1, !dbg !9870
  %conv8 = zext i8 %15 to i32, !dbg !9870
  %tobool9 = icmp ne i32 %conv8, 0, !dbg !9870
  %16 = zext i1 %tobool9 to i64, !dbg !9870
  %cond = select i1 %tobool9, i32 4, i32 2, !dbg !9870
  store i32 %cond, i32* %retval, align 4, !dbg !9871
  br label %return, !dbg !9871

if.end:                                           ; preds = %entry
  store i32 8, i32* %retval, align 4, !dbg !9872
  br label %return, !dbg !9872

return:                                           ; preds = %if.end, %if.then
  %17 = load i32, i32* %retval, align 4, !dbg !9873
  ret i32 %17, !dbg !9873
}

declare dso_local void @WM_gesture_lasso_cancel(%struct.bContext*, %struct.wmOperator*) #2

declare dso_local %struct.PropertyRNA* @RNA_def_collection_runtime(i8*, i8*, %struct.StructRNA*, i8*, i8*) #2

declare dso_local [2 x i32]* @WM_gesture_lasso_path_to_array(%struct.bContext*, %struct.wmOperator*, i32*) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @do_lasso_select_mesh_uv(%struct.bContext* %C, [2 x i32]* %mcords, i16 signext %moves, i8 zeroext %select, i8 zeroext %extend) #0 !dbg !9874 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %mcords.addr = alloca [2 x i32]*, align 8
  %moves.addr = alloca i16, align 2
  %select.addr = alloca i8, align 1
  %extend.addr = alloca i8, align 1
  %sima = alloca %struct.SpaceImage*, align 8
  %ima = alloca %struct.Image*, align 8
  %ar = alloca %struct.ARegion*, align 8
  %obedit = alloca %struct.Object*, align 8
  %scene = alloca %struct.Scene*, align 8
  %ts = alloca %struct.ToolSettings*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  %use_face_center = alloca i32, align 4
  %cd_loop_uv_offset = alloca i32, align 4
  %cd_poly_tex_offset = alloca i32, align 4
  %iter = alloca %struct.BMIter, align 8
  %liter = alloca %struct.BMIter, align 8
  %efa = alloca %struct.BMFace*, align 8
  %l = alloca %struct.BMLoop*, align 8
  %tf = alloca %struct.MTexPoly*, align 8
  %screen_uv = alloca [2 x i32], align 4
  %changed = alloca i8, align 1
  %rect = alloca %struct.rcti, align 4
  %cent = alloca [2 x float], align 4
  %luv = alloca %struct.MLoopUV*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !9877, metadata !DIExpression()), !dbg !9878
  store [2 x i32]* %mcords, [2 x i32]** %mcords.addr, align 8
  call void @llvm.dbg.declare(metadata [2 x i32]** %mcords.addr, metadata !9879, metadata !DIExpression()), !dbg !9880
  store i16 %moves, i16* %moves.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %moves.addr, metadata !9881, metadata !DIExpression()), !dbg !9882
  store i8 %select, i8* %select.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %select.addr, metadata !9883, metadata !DIExpression()), !dbg !9884
  store i8 %extend, i8* %extend.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %extend.addr, metadata !9885, metadata !DIExpression()), !dbg !9886
  call void @llvm.dbg.declare(metadata %struct.SpaceImage** %sima, metadata !9887, metadata !DIExpression()), !dbg !9888
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9889
  %call = call %struct.SpaceImage* @CTX_wm_space_image(%struct.bContext* %0), !dbg !9890
  store %struct.SpaceImage* %call, %struct.SpaceImage** %sima, align 8, !dbg !9888
  call void @llvm.dbg.declare(metadata %struct.Image** %ima, metadata !9891, metadata !DIExpression()), !dbg !9892
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9893
  %call1 = call %struct.Image* @CTX_data_edit_image(%struct.bContext* %1), !dbg !9894
  store %struct.Image* %call1, %struct.Image** %ima, align 8, !dbg !9892
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar, metadata !9895, metadata !DIExpression()), !dbg !9896
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9897
  %call2 = call %struct.ARegion* @CTX_wm_region(%struct.bContext* %2), !dbg !9898
  store %struct.ARegion* %call2, %struct.ARegion** %ar, align 8, !dbg !9896
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !9899, metadata !DIExpression()), !dbg !9900
  %3 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9901
  %call3 = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %3), !dbg !9902
  store %struct.Object* %call3, %struct.Object** %obedit, align 8, !dbg !9900
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene, metadata !9903, metadata !DIExpression()), !dbg !9904
  %4 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9905
  %call4 = call %struct.Scene* @CTX_data_scene(%struct.bContext* %4), !dbg !9906
  store %struct.Scene* %call4, %struct.Scene** %scene, align 8, !dbg !9904
  call void @llvm.dbg.declare(metadata %struct.ToolSettings** %ts, metadata !9907, metadata !DIExpression()), !dbg !9908
  %5 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !9909
  %toolsettings = getelementptr inbounds %struct.Scene, %struct.Scene* %5, i32 0, i32 20, !dbg !9910
  %6 = load %struct.ToolSettings*, %struct.ToolSettings** %toolsettings, align 8, !dbg !9910
  store %struct.ToolSettings* %6, %struct.ToolSettings** %ts, align 8, !dbg !9908
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !9911, metadata !DIExpression()), !dbg !9912
  %7 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !9913
  %call5 = call %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object* %7), !dbg !9914
  store %struct.BMEditMesh* %call5, %struct.BMEditMesh** %em, align 8, !dbg !9912
  call void @llvm.dbg.declare(metadata i32* %use_face_center, metadata !9915, metadata !DIExpression()), !dbg !9916
  %8 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !9917
  %uv_flag = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %8, i32 0, i32 11, !dbg !9918
  %9 = load i8, i8* %uv_flag, align 2, !dbg !9918
  %conv = zext i8 %9 to i32, !dbg !9917
  %and = and i32 %conv, 1, !dbg !9919
  %tobool = icmp ne i32 %and, 0, !dbg !9919
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !9920

cond.true:                                        ; preds = %entry
  %10 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !9921
  %selectmode = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %10, i32 0, i32 8, !dbg !9922
  %11 = load i16, i16* %selectmode, align 2, !dbg !9922
  %conv6 = sext i16 %11 to i32, !dbg !9921
  %cmp = icmp eq i32 %conv6, 4, !dbg !9923
  %conv7 = zext i1 %cmp to i32, !dbg !9923
  br label %cond.end, !dbg !9920

cond.false:                                       ; preds = %entry
  %12 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !9924
  %uv_selectmode = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %12, i32 0, i32 12, !dbg !9925
  %13 = load i8, i8* %uv_selectmode, align 1, !dbg !9925
  %conv8 = zext i8 %13 to i32, !dbg !9924
  %cmp9 = icmp eq i32 %conv8, 4, !dbg !9926
  %conv10 = zext i1 %cmp9 to i32, !dbg !9926
  br label %cond.end, !dbg !9920

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv7, %cond.true ], [ %conv10, %cond.false ], !dbg !9920
  store i32 %cond, i32* %use_face_center, align 4, !dbg !9916
  call void @llvm.dbg.declare(metadata i32* %cd_loop_uv_offset, metadata !9927, metadata !DIExpression()), !dbg !9928
  %14 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !9929
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %14, i32 0, i32 0, !dbg !9930
  %15 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !9930
  %ldata = getelementptr inbounds %struct.BMesh, %struct.BMesh* %15, i32 0, i32 26, !dbg !9931
  %call11 = call i32 @CustomData_get_offset(%struct.CustomData* %ldata, i32 16), !dbg !9932
  store i32 %call11, i32* %cd_loop_uv_offset, align 4, !dbg !9928
  call void @llvm.dbg.declare(metadata i32* %cd_poly_tex_offset, metadata !9933, metadata !DIExpression()), !dbg !9934
  %16 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !9935
  %bm12 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %16, i32 0, i32 0, !dbg !9936
  %17 = load %struct.BMesh*, %struct.BMesh** %bm12, align 8, !dbg !9936
  %pdata = getelementptr inbounds %struct.BMesh, %struct.BMesh* %17, i32 0, i32 27, !dbg !9937
  %call13 = call i32 @CustomData_get_offset(%struct.CustomData* %pdata, i32 15), !dbg !9938
  store i32 %call13, i32* %cd_poly_tex_offset, align 4, !dbg !9934
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iter, metadata !9939, metadata !DIExpression()), !dbg !9940
  call void @llvm.dbg.declare(metadata %struct.BMIter* %liter, metadata !9941, metadata !DIExpression()), !dbg !9942
  call void @llvm.dbg.declare(metadata %struct.BMFace** %efa, metadata !9943, metadata !DIExpression()), !dbg !9944
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l, metadata !9945, metadata !DIExpression()), !dbg !9946
  call void @llvm.dbg.declare(metadata %struct.MTexPoly** %tf, metadata !9947, metadata !DIExpression()), !dbg !9948
  call void @llvm.dbg.declare(metadata [2 x i32]* %screen_uv, metadata !9949, metadata !DIExpression()), !dbg !9950
  call void @llvm.dbg.declare(metadata i8* %changed, metadata !9951, metadata !DIExpression()), !dbg !9952
  store i8 0, i8* %changed, align 1, !dbg !9952
  call void @llvm.dbg.declare(metadata %struct.rcti* %rect, metadata !9953, metadata !DIExpression()), !dbg !9954
  %18 = load [2 x i32]*, [2 x i32]** %mcords.addr, align 8, !dbg !9955
  %19 = load i16, i16* %moves.addr, align 2, !dbg !9956
  %conv14 = sext i16 %19 to i32, !dbg !9956
  call void @BLI_lasso_boundbox(%struct.rcti* %rect, [2 x i32]* %18, i32 %conv14), !dbg !9957
  %20 = load i8, i8* %extend.addr, align 1, !dbg !9958
  %tobool15 = icmp ne i8 %20, 0, !dbg !9958
  br i1 %tobool15, label %if.end, label %land.lhs.true, !dbg !9960

land.lhs.true:                                    ; preds = %cond.end
  %21 = load i8, i8* %select.addr, align 1, !dbg !9961
  %conv16 = zext i8 %21 to i32, !dbg !9961
  %tobool17 = icmp ne i32 %conv16, 0, !dbg !9961
  br i1 %tobool17, label %if.then, label %if.end, !dbg !9962

if.then:                                          ; preds = %land.lhs.true
  %22 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !9963
  %23 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !9965
  %24 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !9966
  call void @uv_select_all_perform(%struct.Scene* %22, %struct.Image* %23, %struct.BMEditMesh* %24, i32 2), !dbg !9967
  br label %if.end, !dbg !9968

if.end:                                           ; preds = %if.then, %land.lhs.true, %cond.end
  %25 = load i32, i32* %use_face_center, align 4, !dbg !9969
  %tobool18 = icmp ne i32 %25, 0, !dbg !9969
  br i1 %tobool18, label %if.then19, label %if.else, !dbg !9971

if.then19:                                        ; preds = %if.end
  %26 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !9972
  %bm20 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %26, i32 0, i32 0, !dbg !9972
  %27 = load %struct.BMesh*, %struct.BMesh** %bm20, align 8, !dbg !9972
  %call21 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %27, i8 zeroext 3, i8* null), !dbg !9972
  %28 = bitcast i8* %call21 to %struct.BMFace*, !dbg !9972
  store %struct.BMFace* %28, %struct.BMFace** %efa, align 8, !dbg !9972
  br label %for.cond, !dbg !9972

for.cond:                                         ; preds = %for.inc, %if.then19
  %29 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !9975
  %tobool22 = icmp ne %struct.BMFace* %29, null, !dbg !9972
  br i1 %tobool22, label %for.body, label %for.end, !dbg !9972

for.body:                                         ; preds = %for.cond
  %30 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !9977
  %head = getelementptr inbounds %struct.BMFace, %struct.BMFace* %30, i32 0, i32 0, !dbg !9977
  call void @_bm_elem_flag_disable(%struct.BMHeader* %head, i8 zeroext 16), !dbg !9977
  %31 = load i8, i8* %select.addr, align 1, !dbg !9979
  %conv23 = zext i8 %31 to i32, !dbg !9979
  %32 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !9981
  %33 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !9982
  %34 = load i32, i32* %cd_loop_uv_offset, align 4, !dbg !9983
  %call24 = call zeroext i8 @uvedit_face_select_test(%struct.Scene* %32, %struct.BMFace* %33, i32 %34), !dbg !9984
  %conv25 = zext i8 %call24 to i32, !dbg !9984
  %cmp26 = icmp ne i32 %conv23, %conv25, !dbg !9985
  br i1 %cmp26, label %if.then28, label %if.end50, !dbg !9986

if.then28:                                        ; preds = %for.body
  call void @llvm.dbg.declare(metadata [2 x float]* %cent, metadata !9987, metadata !DIExpression()), !dbg !9989
  %35 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !9990
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %cent, i64 0, i64 0, !dbg !9991
  %36 = load i32, i32* %cd_loop_uv_offset, align 4, !dbg !9992
  call void @uv_poly_center(%struct.BMFace* %35, float* %arraydecay, i32 %36), !dbg !9993
  %37 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !9994
  %v2d = getelementptr inbounds %struct.ARegion, %struct.ARegion* %37, i32 0, i32 2, !dbg !9996
  %arrayidx = getelementptr inbounds [2 x float], [2 x float]* %cent, i64 0, i64 0, !dbg !9997
  %38 = load float, float* %arrayidx, align 4, !dbg !9997
  %arrayidx29 = getelementptr inbounds [2 x float], [2 x float]* %cent, i64 0, i64 1, !dbg !9998
  %39 = load float, float* %arrayidx29, align 4, !dbg !9998
  %arrayidx30 = getelementptr inbounds [2 x i32], [2 x i32]* %screen_uv, i64 0, i64 0, !dbg !9999
  %arrayidx31 = getelementptr inbounds [2 x i32], [2 x i32]* %screen_uv, i64 0, i64 1, !dbg !10000
  %call32 = call zeroext i8 @UI_view2d_view_to_region_clip(%struct.View2D* %v2d, float %38, float %39, i32* %arrayidx30, i32* %arrayidx31), !dbg !10001
  %conv33 = zext i8 %call32 to i32, !dbg !10001
  %tobool34 = icmp ne i32 %conv33, 0, !dbg !10001
  br i1 %tobool34, label %land.lhs.true35, label %if.end49, !dbg !10002

land.lhs.true35:                                  ; preds = %if.then28
  %arraydecay36 = getelementptr inbounds [2 x i32], [2 x i32]* %screen_uv, i64 0, i64 0, !dbg !10003
  %call37 = call zeroext i8 @BLI_rcti_isect_pt_v(%struct.rcti* %rect, i32* %arraydecay36), !dbg !10004
  %conv38 = zext i8 %call37 to i32, !dbg !10004
  %tobool39 = icmp ne i32 %conv38, 0, !dbg !10004
  br i1 %tobool39, label %land.lhs.true40, label %if.end49, !dbg !10005

land.lhs.true40:                                  ; preds = %land.lhs.true35
  %40 = load [2 x i32]*, [2 x i32]** %mcords.addr, align 8, !dbg !10006
  %41 = load i16, i16* %moves.addr, align 2, !dbg !10007
  %conv41 = sext i16 %41 to i32, !dbg !10007
  %arrayidx42 = getelementptr inbounds [2 x i32], [2 x i32]* %screen_uv, i64 0, i64 0, !dbg !10008
  %42 = load i32, i32* %arrayidx42, align 4, !dbg !10008
  %arrayidx43 = getelementptr inbounds [2 x i32], [2 x i32]* %screen_uv, i64 0, i64 1, !dbg !10009
  %43 = load i32, i32* %arrayidx43, align 4, !dbg !10009
  %call44 = call zeroext i8 @BLI_lasso_is_point_inside([2 x i32]* %40, i32 %conv41, i32 %42, i32 %43, i32 12000), !dbg !10010
  %conv45 = zext i8 %call44 to i32, !dbg !10010
  %tobool46 = icmp ne i32 %conv45, 0, !dbg !10010
  br i1 %tobool46, label %if.then47, label %if.end49, !dbg !10011

if.then47:                                        ; preds = %land.lhs.true40
  %44 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !10012
  %head48 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %44, i32 0, i32 0, !dbg !10012
  call void @_bm_elem_flag_enable(%struct.BMHeader* %head48, i8 zeroext 16), !dbg !10012
  store i8 1, i8* %changed, align 1, !dbg !10014
  br label %if.end49, !dbg !10015

if.end49:                                         ; preds = %if.then47, %land.lhs.true40, %land.lhs.true35, %if.then28
  br label %if.end50, !dbg !10016

if.end50:                                         ; preds = %if.end49, %for.body
  br label %for.inc, !dbg !10017

for.inc:                                          ; preds = %if.end50
  %call51 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !9975
  %45 = bitcast i8* %call51 to %struct.BMFace*, !dbg !9975
  store %struct.BMFace* %45, %struct.BMFace** %efa, align 8, !dbg !9975
  br label %for.cond, !dbg !9975, !llvm.loop !10018

for.end:                                          ; preds = %for.cond
  %46 = load i8, i8* %changed, align 1, !dbg !10020
  %tobool52 = icmp ne i8 %46, 0, !dbg !10020
  br i1 %tobool52, label %if.then53, label %if.end54, !dbg !10022

if.then53:                                        ; preds = %for.end
  %47 = load %struct.SpaceImage*, %struct.SpaceImage** %sima, align 8, !dbg !10023
  %48 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !10025
  %49 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !10026
  %50 = load i8, i8* %select.addr, align 1, !dbg !10027
  call void @uv_select_flush_from_tag_face(%struct.SpaceImage* %47, %struct.Scene* %48, %struct.Object* %49, i8 zeroext %50), !dbg !10028
  br label %if.end54, !dbg !10029

if.end54:                                         ; preds = %if.then53, %for.end
  br label %if.end109, !dbg !10030

if.else:                                          ; preds = %if.end
  %51 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !10031
  %bm55 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %51, i32 0, i32 0, !dbg !10031
  %52 = load %struct.BMesh*, %struct.BMesh** %bm55, align 8, !dbg !10031
  %call56 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %52, i8 zeroext 3, i8* null), !dbg !10031
  %53 = bitcast i8* %call56 to %struct.BMFace*, !dbg !10031
  store %struct.BMFace* %53, %struct.BMFace** %efa, align 8, !dbg !10031
  br label %for.cond57, !dbg !10031

for.cond57:                                       ; preds = %for.inc106, %if.else
  %54 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !10034
  %tobool58 = icmp ne %struct.BMFace* %54, null, !dbg !10031
  br i1 %tobool58, label %for.body59, label %for.end108, !dbg !10031

for.body59:                                       ; preds = %for.cond57
  %55 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !10036
  %head60 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %55, i32 0, i32 0, !dbg !10036
  %data = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head60, i32 0, i32 0, !dbg !10036
  %56 = load i8*, i8** %data, align 8, !dbg !10036
  %57 = load i32, i32* %cd_poly_tex_offset, align 4, !dbg !10036
  %idx.ext = sext i32 %57 to i64, !dbg !10036
  %add.ptr = getelementptr inbounds i8, i8* %56, i64 %idx.ext, !dbg !10036
  %58 = bitcast i8* %add.ptr to %struct.MTexPoly*, !dbg !10036
  store %struct.MTexPoly* %58, %struct.MTexPoly** %tf, align 8, !dbg !10038
  %59 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !10039
  %60 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !10041
  %61 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !10042
  %62 = load %struct.MTexPoly*, %struct.MTexPoly** %tf, align 8, !dbg !10043
  %call61 = call zeroext i8 @uvedit_face_visible_test(%struct.Scene* %59, %struct.Image* %60, %struct.BMFace* %61, %struct.MTexPoly* %62), !dbg !10044
  %tobool62 = icmp ne i8 %call61, 0, !dbg !10044
  br i1 %tobool62, label %if.then63, label %if.end105, !dbg !10045

if.then63:                                        ; preds = %for.body59
  %63 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !10046
  %64 = bitcast %struct.BMFace* %63 to i8*, !dbg !10046
  %call64 = call i8* @BM_iter_new(%struct.BMIter* %liter, %struct.BMesh* null, i8 zeroext 11, i8* %64), !dbg !10046
  %65 = bitcast i8* %call64 to %struct.BMLoop*, !dbg !10046
  store %struct.BMLoop* %65, %struct.BMLoop** %l, align 8, !dbg !10046
  br label %for.cond65, !dbg !10046

for.cond65:                                       ; preds = %for.inc102, %if.then63
  %66 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !10049
  %tobool66 = icmp ne %struct.BMLoop* %66, null, !dbg !10046
  br i1 %tobool66, label %for.body67, label %for.end104, !dbg !10046

for.body67:                                       ; preds = %for.cond65
  %67 = load i8, i8* %select.addr, align 1, !dbg !10051
  %conv68 = zext i8 %67 to i32, !dbg !10054
  %68 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !10055
  %69 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !10056
  %70 = load i32, i32* %cd_loop_uv_offset, align 4, !dbg !10057
  %call69 = call zeroext i8 @uvedit_uv_select_test(%struct.Scene* %68, %struct.BMLoop* %69, i32 %70), !dbg !10058
  %conv70 = zext i8 %call69 to i32, !dbg !10059
  %cmp71 = icmp ne i32 %conv68, %conv70, !dbg !10060
  br i1 %cmp71, label %if.then73, label %if.end101, !dbg !10061

if.then73:                                        ; preds = %for.body67
  call void @llvm.dbg.declare(metadata %struct.MLoopUV** %luv, metadata !10062, metadata !DIExpression()), !dbg !10064
  %71 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !10065
  %head74 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %71, i32 0, i32 0, !dbg !10065
  %data75 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head74, i32 0, i32 0, !dbg !10065
  %72 = load i8*, i8** %data75, align 8, !dbg !10065
  %73 = load i32, i32* %cd_loop_uv_offset, align 4, !dbg !10065
  %idx.ext76 = sext i32 %73 to i64, !dbg !10065
  %add.ptr77 = getelementptr inbounds i8, i8* %72, i64 %idx.ext76, !dbg !10065
  %74 = bitcast i8* %add.ptr77 to %struct.MLoopUV*, !dbg !10065
  store %struct.MLoopUV* %74, %struct.MLoopUV** %luv, align 8, !dbg !10064
  %75 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !10066
  %v2d78 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %75, i32 0, i32 2, !dbg !10068
  %76 = load %struct.MLoopUV*, %struct.MLoopUV** %luv, align 8, !dbg !10069
  %uv = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %76, i32 0, i32 0, !dbg !10070
  %arrayidx79 = getelementptr inbounds [2 x float], [2 x float]* %uv, i64 0, i64 0, !dbg !10069
  %77 = load float, float* %arrayidx79, align 4, !dbg !10069
  %78 = load %struct.MLoopUV*, %struct.MLoopUV** %luv, align 8, !dbg !10071
  %uv80 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %78, i32 0, i32 0, !dbg !10072
  %arrayidx81 = getelementptr inbounds [2 x float], [2 x float]* %uv80, i64 0, i64 1, !dbg !10071
  %79 = load float, float* %arrayidx81, align 4, !dbg !10071
  %arrayidx82 = getelementptr inbounds [2 x i32], [2 x i32]* %screen_uv, i64 0, i64 0, !dbg !10073
  %arrayidx83 = getelementptr inbounds [2 x i32], [2 x i32]* %screen_uv, i64 0, i64 1, !dbg !10074
  %call84 = call zeroext i8 @UI_view2d_view_to_region_clip(%struct.View2D* %v2d78, float %77, float %79, i32* %arrayidx82, i32* %arrayidx83), !dbg !10075
  %conv85 = zext i8 %call84 to i32, !dbg !10075
  %tobool86 = icmp ne i32 %conv85, 0, !dbg !10075
  br i1 %tobool86, label %land.lhs.true87, label %if.end100, !dbg !10076

land.lhs.true87:                                  ; preds = %if.then73
  %arraydecay88 = getelementptr inbounds [2 x i32], [2 x i32]* %screen_uv, i64 0, i64 0, !dbg !10077
  %call89 = call zeroext i8 @BLI_rcti_isect_pt_v(%struct.rcti* %rect, i32* %arraydecay88), !dbg !10078
  %conv90 = zext i8 %call89 to i32, !dbg !10078
  %tobool91 = icmp ne i32 %conv90, 0, !dbg !10078
  br i1 %tobool91, label %land.lhs.true92, label %if.end100, !dbg !10079

land.lhs.true92:                                  ; preds = %land.lhs.true87
  %80 = load [2 x i32]*, [2 x i32]** %mcords.addr, align 8, !dbg !10080
  %81 = load i16, i16* %moves.addr, align 2, !dbg !10081
  %conv93 = sext i16 %81 to i32, !dbg !10081
  %arrayidx94 = getelementptr inbounds [2 x i32], [2 x i32]* %screen_uv, i64 0, i64 0, !dbg !10082
  %82 = load i32, i32* %arrayidx94, align 4, !dbg !10082
  %arrayidx95 = getelementptr inbounds [2 x i32], [2 x i32]* %screen_uv, i64 0, i64 1, !dbg !10083
  %83 = load i32, i32* %arrayidx95, align 4, !dbg !10083
  %call96 = call zeroext i8 @BLI_lasso_is_point_inside([2 x i32]* %80, i32 %conv93, i32 %82, i32 %83, i32 12000), !dbg !10084
  %conv97 = zext i8 %call96 to i32, !dbg !10084
  %tobool98 = icmp ne i32 %conv97, 0, !dbg !10084
  br i1 %tobool98, label %if.then99, label %if.end100, !dbg !10085

if.then99:                                        ; preds = %land.lhs.true92
  %84 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !10086
  %85 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !10088
  %86 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !10089
  %87 = load i8, i8* %select.addr, align 1, !dbg !10090
  %88 = load i32, i32* %cd_loop_uv_offset, align 4, !dbg !10091
  call void @uvedit_uv_select_set(%struct.BMEditMesh* %84, %struct.Scene* %85, %struct.BMLoop* %86, i8 zeroext %87, i8 zeroext 0, i32 %88), !dbg !10092
  store i8 1, i8* %changed, align 1, !dbg !10093
  br label %if.end100, !dbg !10094

if.end100:                                        ; preds = %if.then99, %land.lhs.true92, %land.lhs.true87, %if.then73
  br label %if.end101, !dbg !10095

if.end101:                                        ; preds = %if.end100, %for.body67
  br label %for.inc102, !dbg !10096

for.inc102:                                       ; preds = %if.end101
  %call103 = call i8* @BM_iter_step(%struct.BMIter* %liter), !dbg !10049
  %89 = bitcast i8* %call103 to %struct.BMLoop*, !dbg !10049
  store %struct.BMLoop* %89, %struct.BMLoop** %l, align 8, !dbg !10049
  br label %for.cond65, !dbg !10049, !llvm.loop !10097

for.end104:                                       ; preds = %for.cond65
  br label %if.end105, !dbg !10099

if.end105:                                        ; preds = %for.end104, %for.body59
  br label %for.inc106, !dbg !10100

for.inc106:                                       ; preds = %if.end105
  %call107 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !10034
  %90 = bitcast i8* %call107 to %struct.BMFace*, !dbg !10034
  store %struct.BMFace* %90, %struct.BMFace** %efa, align 8, !dbg !10034
  br label %for.cond57, !dbg !10034, !llvm.loop !10101

for.end108:                                       ; preds = %for.cond57
  br label %if.end109

if.end109:                                        ; preds = %for.end108, %if.end54
  %91 = load i8, i8* %changed, align 1, !dbg !10103
  %tobool110 = icmp ne i8 %91, 0, !dbg !10103
  br i1 %tobool110, label %if.then111, label %if.end121, !dbg !10105

if.then111:                                       ; preds = %if.end109
  %92 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !10106
  %toolsettings112 = getelementptr inbounds %struct.Scene, %struct.Scene* %92, i32 0, i32 20, !dbg !10108
  %93 = load %struct.ToolSettings*, %struct.ToolSettings** %toolsettings112, align 8, !dbg !10108
  %94 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !10109
  %95 = load i8, i8* %select.addr, align 1, !dbg !10110
  %conv113 = zext i8 %95 to i16, !dbg !10110
  call void @uv_select_sync_flush(%struct.ToolSettings* %93, %struct.BMEditMesh* %94, i16 signext %conv113), !dbg !10111
  %96 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !10112
  %uv_flag114 = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %96, i32 0, i32 11, !dbg !10114
  %97 = load i8, i8* %uv_flag114, align 2, !dbg !10114
  %conv115 = zext i8 %97 to i32, !dbg !10112
  %and116 = and i32 %conv115, 1, !dbg !10115
  %tobool117 = icmp ne i32 %and116, 0, !dbg !10115
  br i1 %tobool117, label %if.then118, label %if.end120, !dbg !10116

if.then118:                                       ; preds = %if.then111
  %98 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10117
  %99 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !10119
  %data119 = getelementptr inbounds %struct.Object, %struct.Object* %99, i32 0, i32 19, !dbg !10120
  %100 = load i8*, i8** %data119, align 8, !dbg !10120
  call void @WM_event_add_notifier(%struct.bContext* %98, i32 274333696, i8* %100), !dbg !10121
  br label %if.end120, !dbg !10122

if.end120:                                        ; preds = %if.then118, %if.then111
  br label %if.end121, !dbg !10123

if.end121:                                        ; preds = %if.end120, %if.end109
  %101 = load i8, i8* %changed, align 1, !dbg !10124
  ret i8 %101, !dbg !10125
}

declare dso_local void @BLI_lasso_boundbox(%struct.rcti*, [2 x i32]*, i32) #2

declare dso_local zeroext i8 @UI_view2d_view_to_region_clip(%struct.View2D*, float, float, i32*, i32*) #2

declare dso_local zeroext i8 @BLI_rcti_isect_pt_v(%struct.rcti*, i32*) #2

declare dso_local zeroext i8 @BLI_lasso_is_point_inside([2 x i32]*, i32, i32, i32, i32) #2

declare dso_local i32 @WM_gesture_circle_invoke(%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*) #2

declare dso_local i32 @WM_gesture_circle_modal(%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @uv_circle_select_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !10126 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %sima = alloca %struct.SpaceImage*, align 8
  %scene = alloca %struct.Scene*, align 8
  %ts = alloca %struct.ToolSettings*, align 8
  %obedit = alloca %struct.Object*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  %ar = alloca %struct.ARegion*, align 8
  %efa = alloca %struct.BMFace*, align 8
  %l = alloca %struct.BMLoop*, align 8
  %iter = alloca %struct.BMIter, align 8
  %liter = alloca %struct.BMIter, align 8
  %luv = alloca %struct.MLoopUV*, align 8
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %radius = alloca i32, align 4
  %width = alloca i32, align 4
  %height = alloca i32, align 4
  %zoomx = alloca float, align 4
  %zoomy = alloca float, align 4
  %offset = alloca [2 x float], align 4
  %ellipse = alloca [2 x float], align 4
  %gesture_mode = alloca i32, align 4
  %select = alloca i8, align 1
  %changed = alloca i8, align 1
  %use_face_center = alloca i8, align 1
  %cd_loop_uv_offset = alloca i32, align 4
  %cent = alloca [2 x float], align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !10127, metadata !DIExpression()), !dbg !10128
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !10129, metadata !DIExpression()), !dbg !10130
  call void @llvm.dbg.declare(metadata %struct.SpaceImage** %sima, metadata !10131, metadata !DIExpression()), !dbg !10132
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10133
  %call = call %struct.SpaceImage* @CTX_wm_space_image(%struct.bContext* %0), !dbg !10134
  store %struct.SpaceImage* %call, %struct.SpaceImage** %sima, align 8, !dbg !10132
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene, metadata !10135, metadata !DIExpression()), !dbg !10136
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10137
  %call1 = call %struct.Scene* @CTX_data_scene(%struct.bContext* %1), !dbg !10138
  store %struct.Scene* %call1, %struct.Scene** %scene, align 8, !dbg !10136
  call void @llvm.dbg.declare(metadata %struct.ToolSettings** %ts, metadata !10139, metadata !DIExpression()), !dbg !10140
  %2 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !10141
  %toolsettings = getelementptr inbounds %struct.Scene, %struct.Scene* %2, i32 0, i32 20, !dbg !10142
  %3 = load %struct.ToolSettings*, %struct.ToolSettings** %toolsettings, align 8, !dbg !10142
  store %struct.ToolSettings* %3, %struct.ToolSettings** %ts, align 8, !dbg !10140
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !10143, metadata !DIExpression()), !dbg !10144
  %4 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10145
  %call2 = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %4), !dbg !10146
  store %struct.Object* %call2, %struct.Object** %obedit, align 8, !dbg !10144
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !10147, metadata !DIExpression()), !dbg !10148
  %5 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !10149
  %call3 = call %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object* %5), !dbg !10150
  store %struct.BMEditMesh* %call3, %struct.BMEditMesh** %em, align 8, !dbg !10148
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar, metadata !10151, metadata !DIExpression()), !dbg !10152
  %6 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10153
  %call4 = call %struct.ARegion* @CTX_wm_region(%struct.bContext* %6), !dbg !10154
  store %struct.ARegion* %call4, %struct.ARegion** %ar, align 8, !dbg !10152
  call void @llvm.dbg.declare(metadata %struct.BMFace** %efa, metadata !10155, metadata !DIExpression()), !dbg !10156
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l, metadata !10157, metadata !DIExpression()), !dbg !10158
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iter, metadata !10159, metadata !DIExpression()), !dbg !10160
  call void @llvm.dbg.declare(metadata %struct.BMIter* %liter, metadata !10161, metadata !DIExpression()), !dbg !10162
  call void @llvm.dbg.declare(metadata %struct.MLoopUV** %luv, metadata !10163, metadata !DIExpression()), !dbg !10164
  call void @llvm.dbg.declare(metadata i32* %x, metadata !10165, metadata !DIExpression()), !dbg !10166
  call void @llvm.dbg.declare(metadata i32* %y, metadata !10167, metadata !DIExpression()), !dbg !10168
  call void @llvm.dbg.declare(metadata i32* %radius, metadata !10169, metadata !DIExpression()), !dbg !10170
  call void @llvm.dbg.declare(metadata i32* %width, metadata !10171, metadata !DIExpression()), !dbg !10172
  call void @llvm.dbg.declare(metadata i32* %height, metadata !10173, metadata !DIExpression()), !dbg !10174
  call void @llvm.dbg.declare(metadata float* %zoomx, metadata !10175, metadata !DIExpression()), !dbg !10176
  call void @llvm.dbg.declare(metadata float* %zoomy, metadata !10177, metadata !DIExpression()), !dbg !10178
  call void @llvm.dbg.declare(metadata [2 x float]* %offset, metadata !10179, metadata !DIExpression()), !dbg !10180
  call void @llvm.dbg.declare(metadata [2 x float]* %ellipse, metadata !10181, metadata !DIExpression()), !dbg !10182
  call void @llvm.dbg.declare(metadata i32* %gesture_mode, metadata !10183, metadata !DIExpression()), !dbg !10184
  %7 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10185
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %7, i32 0, i32 7, !dbg !10186
  %8 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !10186
  %call5 = call i32 @RNA_int_get(%struct.PointerRNA* %8, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.63, i64 0, i64 0)), !dbg !10187
  store i32 %call5, i32* %gesture_mode, align 4, !dbg !10184
  call void @llvm.dbg.declare(metadata i8* %select, metadata !10188, metadata !DIExpression()), !dbg !10189
  %9 = load i32, i32* %gesture_mode, align 4, !dbg !10190
  %cmp = icmp eq i32 %9, 3, !dbg !10191
  %conv = zext i1 %cmp to i32, !dbg !10191
  %conv6 = trunc i32 %conv to i8, !dbg !10192
  store i8 %conv6, i8* %select, align 1, !dbg !10189
  call void @llvm.dbg.declare(metadata i8* %changed, metadata !10193, metadata !DIExpression()), !dbg !10194
  store i8 0, i8* %changed, align 1, !dbg !10194
  call void @llvm.dbg.declare(metadata i8* %use_face_center, metadata !10195, metadata !DIExpression()), !dbg !10196
  %10 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !10197
  %uv_flag = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %10, i32 0, i32 11, !dbg !10198
  %11 = load i8, i8* %uv_flag, align 2, !dbg !10198
  %conv7 = zext i8 %11 to i32, !dbg !10197
  %and = and i32 %conv7, 1, !dbg !10199
  %tobool = icmp ne i32 %and, 0, !dbg !10199
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !10200

cond.true:                                        ; preds = %entry
  %12 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !10201
  %selectmode = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %12, i32 0, i32 8, !dbg !10202
  %13 = load i16, i16* %selectmode, align 2, !dbg !10202
  %conv8 = sext i16 %13 to i32, !dbg !10201
  %cmp9 = icmp eq i32 %conv8, 4, !dbg !10203
  %conv10 = zext i1 %cmp9 to i32, !dbg !10203
  br label %cond.end, !dbg !10200

cond.false:                                       ; preds = %entry
  %14 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !10204
  %uv_selectmode = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %14, i32 0, i32 12, !dbg !10205
  %15 = load i8, i8* %uv_selectmode, align 1, !dbg !10205
  %conv11 = zext i8 %15 to i32, !dbg !10204
  %cmp12 = icmp eq i32 %conv11, 4, !dbg !10206
  %conv13 = zext i1 %cmp12 to i32, !dbg !10206
  br label %cond.end, !dbg !10200

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv10, %cond.true ], [ %conv13, %cond.false ], !dbg !10200
  %conv14 = trunc i32 %cond to i8, !dbg !10200
  store i8 %conv14, i8* %use_face_center, align 1, !dbg !10196
  call void @llvm.dbg.declare(metadata i32* %cd_loop_uv_offset, metadata !10207, metadata !DIExpression()), !dbg !10208
  %16 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !10209
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %16, i32 0, i32 0, !dbg !10210
  %17 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !10210
  %ldata = getelementptr inbounds %struct.BMesh, %struct.BMesh* %17, i32 0, i32 26, !dbg !10211
  %call15 = call i32 @CustomData_get_offset(%struct.CustomData* %ldata, i32 16), !dbg !10212
  store i32 %call15, i32* %cd_loop_uv_offset, align 4, !dbg !10208
  %18 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10213
  %ptr16 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %18, i32 0, i32 7, !dbg !10214
  %19 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr16, align 8, !dbg !10214
  %call17 = call i32 @RNA_int_get(%struct.PointerRNA* %19, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.74, i64 0, i64 0)), !dbg !10215
  store i32 %call17, i32* %x, align 4, !dbg !10216
  %20 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10217
  %ptr18 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %20, i32 0, i32 7, !dbg !10218
  %21 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr18, align 8, !dbg !10218
  %call19 = call i32 @RNA_int_get(%struct.PointerRNA* %21, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.76, i64 0, i64 0)), !dbg !10219
  store i32 %call19, i32* %y, align 4, !dbg !10220
  %22 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10221
  %ptr20 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %22, i32 0, i32 7, !dbg !10222
  %23 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr20, align 8, !dbg !10222
  %call21 = call i32 @RNA_int_get(%struct.PointerRNA* %23, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.78, i64 0, i64 0)), !dbg !10223
  store i32 %call21, i32* %radius, align 4, !dbg !10224
  %24 = load %struct.SpaceImage*, %struct.SpaceImage** %sima, align 8, !dbg !10225
  call void @ED_space_image_get_size(%struct.SpaceImage* %24, i32* %width, i32* %height), !dbg !10226
  %25 = load %struct.SpaceImage*, %struct.SpaceImage** %sima, align 8, !dbg !10227
  %26 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !10228
  call void @ED_space_image_get_zoom(%struct.SpaceImage* %25, %struct.ARegion* %26, float* %zoomx, float* %zoomy), !dbg !10229
  %27 = load i32, i32* %width, align 4, !dbg !10230
  %conv22 = sitofp i32 %27 to float, !dbg !10230
  %28 = load float, float* %zoomx, align 4, !dbg !10231
  %mul = fmul float %conv22, %28, !dbg !10232
  %29 = load i32, i32* %radius, align 4, !dbg !10233
  %conv23 = sitofp i32 %29 to float, !dbg !10233
  %div = fdiv float %mul, %conv23, !dbg !10234
  %arrayidx = getelementptr inbounds [2 x float], [2 x float]* %ellipse, i64 0, i64 0, !dbg !10235
  store float %div, float* %arrayidx, align 4, !dbg !10236
  %30 = load i32, i32* %height, align 4, !dbg !10237
  %conv24 = sitofp i32 %30 to float, !dbg !10237
  %31 = load float, float* %zoomy, align 4, !dbg !10238
  %mul25 = fmul float %conv24, %31, !dbg !10239
  %32 = load i32, i32* %radius, align 4, !dbg !10240
  %conv26 = sitofp i32 %32 to float, !dbg !10240
  %div27 = fdiv float %mul25, %conv26, !dbg !10241
  %arrayidx28 = getelementptr inbounds [2 x float], [2 x float]* %ellipse, i64 0, i64 1, !dbg !10242
  store float %div27, float* %arrayidx28, align 4, !dbg !10243
  %33 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !10244
  %v2d = getelementptr inbounds %struct.ARegion, %struct.ARegion* %33, i32 0, i32 2, !dbg !10245
  %34 = load i32, i32* %x, align 4, !dbg !10246
  %conv29 = sitofp i32 %34 to float, !dbg !10246
  %35 = load i32, i32* %y, align 4, !dbg !10247
  %conv30 = sitofp i32 %35 to float, !dbg !10247
  %arrayidx31 = getelementptr inbounds [2 x float], [2 x float]* %offset, i64 0, i64 0, !dbg !10248
  %arrayidx32 = getelementptr inbounds [2 x float], [2 x float]* %offset, i64 0, i64 1, !dbg !10249
  call void @UI_view2d_region_to_view(%struct.View2D* %v2d, float %conv29, float %conv30, float* %arrayidx31, float* %arrayidx32), !dbg !10250
  %36 = load i8, i8* %use_face_center, align 1, !dbg !10251
  %tobool33 = icmp ne i8 %36, 0, !dbg !10251
  br i1 %tobool33, label %if.then, label %if.else, !dbg !10253

if.then:                                          ; preds = %cond.end
  store i8 0, i8* %changed, align 1, !dbg !10254
  %37 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !10256
  %bm34 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %37, i32 0, i32 0, !dbg !10256
  %38 = load %struct.BMesh*, %struct.BMesh** %bm34, align 8, !dbg !10256
  %call35 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %38, i8 zeroext 3, i8* null), !dbg !10256
  %39 = bitcast i8* %call35 to %struct.BMFace*, !dbg !10256
  store %struct.BMFace* %39, %struct.BMFace** %efa, align 8, !dbg !10256
  br label %for.cond, !dbg !10256

for.cond:                                         ; preds = %for.inc, %if.then
  %40 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !10258
  %tobool36 = icmp ne %struct.BMFace* %40, null, !dbg !10256
  br i1 %tobool36, label %for.body, label %for.end, !dbg !10256

for.body:                                         ; preds = %for.cond
  %41 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !10260
  %head = getelementptr inbounds %struct.BMFace, %struct.BMFace* %41, i32 0, i32 0, !dbg !10260
  call void @_bm_elem_flag_disable(%struct.BMHeader* %head, i8 zeroext 16), !dbg !10260
  %42 = load i8, i8* %select, align 1, !dbg !10262
  %conv37 = zext i8 %42 to i32, !dbg !10262
  %43 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !10264
  %44 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !10265
  %45 = load i32, i32* %cd_loop_uv_offset, align 4, !dbg !10266
  %call38 = call zeroext i8 @uvedit_face_select_test(%struct.Scene* %43, %struct.BMFace* %44, i32 %45), !dbg !10267
  %conv39 = zext i8 %call38 to i32, !dbg !10267
  %cmp40 = icmp ne i32 %conv37, %conv39, !dbg !10268
  br i1 %cmp40, label %if.then42, label %if.end50, !dbg !10269

if.then42:                                        ; preds = %for.body
  call void @llvm.dbg.declare(metadata [2 x float]* %cent, metadata !10270, metadata !DIExpression()), !dbg !10272
  %46 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !10273
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %cent, i64 0, i64 0, !dbg !10274
  %47 = load i32, i32* %cd_loop_uv_offset, align 4, !dbg !10275
  call void @uv_poly_center(%struct.BMFace* %46, float* %arraydecay, i32 %47), !dbg !10276
  %arraydecay43 = getelementptr inbounds [2 x float], [2 x float]* %cent, i64 0, i64 0, !dbg !10277
  %arraydecay44 = getelementptr inbounds [2 x float], [2 x float]* %offset, i64 0, i64 0, !dbg !10279
  %arraydecay45 = getelementptr inbounds [2 x float], [2 x float]* %ellipse, i64 0, i64 0, !dbg !10280
  %call46 = call i32 @uv_inside_circle(float* %arraydecay43, float* %arraydecay44, float* %arraydecay45), !dbg !10281
  %tobool47 = icmp ne i32 %call46, 0, !dbg !10281
  br i1 %tobool47, label %if.then48, label %if.end, !dbg !10282

if.then48:                                        ; preds = %if.then42
  %48 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !10283
  %head49 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %48, i32 0, i32 0, !dbg !10283
  call void @_bm_elem_flag_enable(%struct.BMHeader* %head49, i8 zeroext 16), !dbg !10283
  store i8 1, i8* %changed, align 1, !dbg !10285
  br label %if.end, !dbg !10286

if.end:                                           ; preds = %if.then48, %if.then42
  br label %if.end50, !dbg !10287

if.end50:                                         ; preds = %if.end, %for.body
  br label %for.inc, !dbg !10288

for.inc:                                          ; preds = %if.end50
  %call51 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !10258
  %49 = bitcast i8* %call51 to %struct.BMFace*, !dbg !10258
  store %struct.BMFace* %49, %struct.BMFace** %efa, align 8, !dbg !10258
  br label %for.cond, !dbg !10258, !llvm.loop !10289

for.end:                                          ; preds = %for.cond
  %50 = load i8, i8* %changed, align 1, !dbg !10291
  %tobool52 = icmp ne i8 %50, 0, !dbg !10291
  br i1 %tobool52, label %if.then53, label %if.end54, !dbg !10293

if.then53:                                        ; preds = %for.end
  %51 = load %struct.SpaceImage*, %struct.SpaceImage** %sima, align 8, !dbg !10294
  %52 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !10296
  %53 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !10297
  %54 = load i8, i8* %select, align 1, !dbg !10298
  call void @uv_select_flush_from_tag_face(%struct.SpaceImage* %51, %struct.Scene* %52, %struct.Object* %53, i8 zeroext %54), !dbg !10299
  br label %if.end54, !dbg !10300

if.end54:                                         ; preds = %if.then53, %for.end
  br label %if.end77, !dbg !10301

if.else:                                          ; preds = %cond.end
  %55 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !10302
  %bm55 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %55, i32 0, i32 0, !dbg !10302
  %56 = load %struct.BMesh*, %struct.BMesh** %bm55, align 8, !dbg !10302
  %call56 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %56, i8 zeroext 3, i8* null), !dbg !10302
  %57 = bitcast i8* %call56 to %struct.BMFace*, !dbg !10302
  store %struct.BMFace* %57, %struct.BMFace** %efa, align 8, !dbg !10302
  br label %for.cond57, !dbg !10302

for.cond57:                                       ; preds = %for.inc74, %if.else
  %58 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !10305
  %tobool58 = icmp ne %struct.BMFace* %58, null, !dbg !10302
  br i1 %tobool58, label %for.body59, label %for.end76, !dbg !10302

for.body59:                                       ; preds = %for.cond57
  %59 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !10307
  %60 = bitcast %struct.BMFace* %59 to i8*, !dbg !10307
  %call60 = call i8* @BM_iter_new(%struct.BMIter* %liter, %struct.BMesh* null, i8 zeroext 11, i8* %60), !dbg !10307
  %61 = bitcast i8* %call60 to %struct.BMLoop*, !dbg !10307
  store %struct.BMLoop* %61, %struct.BMLoop** %l, align 8, !dbg !10307
  br label %for.cond61, !dbg !10307

for.cond61:                                       ; preds = %for.inc71, %for.body59
  %62 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !10310
  %tobool62 = icmp ne %struct.BMLoop* %62, null, !dbg !10307
  br i1 %tobool62, label %for.body63, label %for.end73, !dbg !10307

for.body63:                                       ; preds = %for.cond61
  %63 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !10312
  %head64 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %63, i32 0, i32 0, !dbg !10312
  %data = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head64, i32 0, i32 0, !dbg !10312
  %64 = load i8*, i8** %data, align 8, !dbg !10312
  %65 = load i32, i32* %cd_loop_uv_offset, align 4, !dbg !10312
  %idx.ext = sext i32 %65 to i64, !dbg !10312
  %add.ptr = getelementptr inbounds i8, i8* %64, i64 %idx.ext, !dbg !10312
  %66 = bitcast i8* %add.ptr to %struct.MLoopUV*, !dbg !10312
  store %struct.MLoopUV* %66, %struct.MLoopUV** %luv, align 8, !dbg !10314
  %67 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !10315
  %68 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !10316
  %69 = load i8, i8* %select, align 1, !dbg !10317
  %arraydecay65 = getelementptr inbounds [2 x float], [2 x float]* %offset, i64 0, i64 0, !dbg !10318
  %arraydecay66 = getelementptr inbounds [2 x float], [2 x float]* %ellipse, i64 0, i64 0, !dbg !10319
  %70 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !10320
  %71 = load %struct.MLoopUV*, %struct.MLoopUV** %luv, align 8, !dbg !10321
  %72 = load i32, i32* %cd_loop_uv_offset, align 4, !dbg !10322
  %call67 = call zeroext i8 @uv_select_inside_ellipse(%struct.BMEditMesh* %67, %struct.Scene* %68, i8 zeroext %69, float* %arraydecay65, float* %arraydecay66, %struct.BMLoop* %70, %struct.MLoopUV* %71, i32 %72), !dbg !10323
  %conv68 = zext i8 %call67 to i32, !dbg !10323
  %73 = load i8, i8* %changed, align 1, !dbg !10324
  %conv69 = zext i8 %73 to i32, !dbg !10324
  %or = or i32 %conv69, %conv68, !dbg !10324
  %conv70 = trunc i32 %or to i8, !dbg !10324
  store i8 %conv70, i8* %changed, align 1, !dbg !10324
  br label %for.inc71, !dbg !10325

for.inc71:                                        ; preds = %for.body63
  %call72 = call i8* @BM_iter_step(%struct.BMIter* %liter), !dbg !10310
  %74 = bitcast i8* %call72 to %struct.BMLoop*, !dbg !10310
  store %struct.BMLoop* %74, %struct.BMLoop** %l, align 8, !dbg !10310
  br label %for.cond61, !dbg !10310, !llvm.loop !10326

for.end73:                                        ; preds = %for.cond61
  br label %for.inc74, !dbg !10328

for.inc74:                                        ; preds = %for.end73
  %call75 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !10305
  %75 = bitcast i8* %call75 to %struct.BMFace*, !dbg !10305
  store %struct.BMFace* %75, %struct.BMFace** %efa, align 8, !dbg !10305
  br label %for.cond57, !dbg !10305, !llvm.loop !10329

for.end76:                                        ; preds = %for.cond57
  br label %if.end77

if.end77:                                         ; preds = %for.end76, %if.end54
  %76 = load i8, i8* %changed, align 1, !dbg !10331
  %tobool78 = icmp ne i8 %76, 0, !dbg !10331
  br i1 %tobool78, label %if.then79, label %if.end82, !dbg !10333

if.then79:                                        ; preds = %if.end77
  %77 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !10334
  %78 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !10336
  %79 = load i8, i8* %select, align 1, !dbg !10337
  %conv80 = zext i8 %79 to i16, !dbg !10337
  call void @uv_select_sync_flush(%struct.ToolSettings* %77, %struct.BMEditMesh* %78, i16 signext %conv80), !dbg !10338
  %80 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10339
  %81 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !10340
  %data81 = getelementptr inbounds %struct.Object, %struct.Object* %81, i32 0, i32 19, !dbg !10341
  %82 = load i8*, i8** %data81, align 8, !dbg !10341
  call void @WM_event_add_notifier(%struct.bContext* %80, i32 274333696, i8* %82), !dbg !10342
  br label %if.end82, !dbg !10343

if.end82:                                         ; preds = %if.then79, %if.end77
  ret i32 4, !dbg !10344
}

declare dso_local void @WM_gesture_circle_cancel(%struct.bContext*, %struct.wmOperator*) #2

declare dso_local %struct.PropertyRNA* @RNA_def_int(i8*, i8*, i32, i32, i32, i8*, i8*, i32, i32) #2

declare dso_local void @ED_space_image_get_zoom(%struct.SpaceImage*, %struct.ARegion*, float*, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @uv_inside_circle(float* %uv, float* %offset, float* %ellipse) #0 !dbg !10345 {
entry:
  %uv.addr = alloca float*, align 8
  %offset.addr = alloca float*, align 8
  %ellipse.addr = alloca float*, align 8
  %x = alloca float, align 4
  %y = alloca float, align 4
  store float* %uv, float** %uv.addr, align 8
  call void @llvm.dbg.declare(metadata float** %uv.addr, metadata !10348, metadata !DIExpression()), !dbg !10349
  store float* %offset, float** %offset.addr, align 8
  call void @llvm.dbg.declare(metadata float** %offset.addr, metadata !10350, metadata !DIExpression()), !dbg !10351
  store float* %ellipse, float** %ellipse.addr, align 8
  call void @llvm.dbg.declare(metadata float** %ellipse.addr, metadata !10352, metadata !DIExpression()), !dbg !10353
  call void @llvm.dbg.declare(metadata float* %x, metadata !10354, metadata !DIExpression()), !dbg !10355
  call void @llvm.dbg.declare(metadata float* %y, metadata !10356, metadata !DIExpression()), !dbg !10357
  %0 = load float*, float** %uv.addr, align 8, !dbg !10358
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !10358
  %1 = load float, float* %arrayidx, align 4, !dbg !10358
  %2 = load float*, float** %offset.addr, align 8, !dbg !10359
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !10359
  %3 = load float, float* %arrayidx1, align 4, !dbg !10359
  %sub = fsub float %1, %3, !dbg !10360
  %4 = load float*, float** %ellipse.addr, align 8, !dbg !10361
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 0, !dbg !10361
  %5 = load float, float* %arrayidx2, align 4, !dbg !10361
  %mul = fmul float %sub, %5, !dbg !10362
  store float %mul, float* %x, align 4, !dbg !10363
  %6 = load float*, float** %uv.addr, align 8, !dbg !10364
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !10364
  %7 = load float, float* %arrayidx3, align 4, !dbg !10364
  %8 = load float*, float** %offset.addr, align 8, !dbg !10365
  %arrayidx4 = getelementptr inbounds float, float* %8, i64 1, !dbg !10365
  %9 = load float, float* %arrayidx4, align 4, !dbg !10365
  %sub5 = fsub float %7, %9, !dbg !10366
  %10 = load float*, float** %ellipse.addr, align 8, !dbg !10367
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 1, !dbg !10367
  %11 = load float, float* %arrayidx6, align 4, !dbg !10367
  %mul7 = fmul float %sub5, %11, !dbg !10368
  store float %mul7, float* %y, align 4, !dbg !10369
  %12 = load float, float* %x, align 4, !dbg !10370
  %13 = load float, float* %x, align 4, !dbg !10371
  %mul8 = fmul float %12, %13, !dbg !10372
  %14 = load float, float* %y, align 4, !dbg !10373
  %15 = load float, float* %y, align 4, !dbg !10374
  %mul9 = fmul float %14, %15, !dbg !10375
  %add = fadd float %mul8, %mul9, !dbg !10376
  %cmp = fcmp olt float %add, 1.000000e+00, !dbg !10377
  %conv = zext i1 %cmp to i32, !dbg !10377
  ret i32 %conv, !dbg !10378
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @uv_select_inside_ellipse(%struct.BMEditMesh* %em, %struct.Scene* %scene, i8 zeroext %select, float* %offset, float* %ellipse, %struct.BMLoop* %l, %struct.MLoopUV* %luv, i32 %cd_loop_uv_offset) #0 !dbg !10379 {
entry:
  %retval = alloca i8, align 1
  %em.addr = alloca %struct.BMEditMesh*, align 8
  %scene.addr = alloca %struct.Scene*, align 8
  %select.addr = alloca i8, align 1
  %offset.addr = alloca float*, align 8
  %ellipse.addr = alloca float*, align 8
  %l.addr = alloca %struct.BMLoop*, align 8
  %luv.addr = alloca %struct.MLoopUV*, align 8
  %cd_loop_uv_offset.addr = alloca i32, align 4
  store %struct.BMEditMesh* %em, %struct.BMEditMesh** %em.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em.addr, metadata !10382, metadata !DIExpression()), !dbg !10383
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !10384, metadata !DIExpression()), !dbg !10385
  store i8 %select, i8* %select.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %select.addr, metadata !10386, metadata !DIExpression()), !dbg !10387
  store float* %offset, float** %offset.addr, align 8
  call void @llvm.dbg.declare(metadata float** %offset.addr, metadata !10388, metadata !DIExpression()), !dbg !10389
  store float* %ellipse, float** %ellipse.addr, align 8
  call void @llvm.dbg.declare(metadata float** %ellipse.addr, metadata !10390, metadata !DIExpression()), !dbg !10391
  store %struct.BMLoop* %l, %struct.BMLoop** %l.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l.addr, metadata !10392, metadata !DIExpression()), !dbg !10393
  store %struct.MLoopUV* %luv, %struct.MLoopUV** %luv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MLoopUV** %luv.addr, metadata !10394, metadata !DIExpression()), !dbg !10395
  store i32 %cd_loop_uv_offset, i32* %cd_loop_uv_offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cd_loop_uv_offset.addr, metadata !10396, metadata !DIExpression()), !dbg !10397
  %0 = load %struct.MLoopUV*, %struct.MLoopUV** %luv.addr, align 8, !dbg !10398
  %uv = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %0, i32 0, i32 0, !dbg !10400
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %uv, i64 0, i64 0, !dbg !10398
  %1 = load float*, float** %offset.addr, align 8, !dbg !10401
  %2 = load float*, float** %ellipse.addr, align 8, !dbg !10402
  %call = call i32 @uv_inside_circle(float* %arraydecay, float* %1, float* %2), !dbg !10403
  %tobool = icmp ne i32 %call, 0, !dbg !10403
  br i1 %tobool, label %if.then, label %if.else, !dbg !10404

if.then:                                          ; preds = %entry
  %3 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !10405
  %4 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !10407
  %5 = load %struct.BMLoop*, %struct.BMLoop** %l.addr, align 8, !dbg !10408
  %6 = load i8, i8* %select.addr, align 1, !dbg !10409
  %7 = load i32, i32* %cd_loop_uv_offset.addr, align 4, !dbg !10410
  call void @uvedit_uv_select_set(%struct.BMEditMesh* %3, %struct.Scene* %4, %struct.BMLoop* %5, i8 zeroext %6, i8 zeroext 0, i32 %7), !dbg !10411
  store i8 1, i8* %retval, align 1, !dbg !10412
  br label %return, !dbg !10412

if.else:                                          ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !10413
  br label %return, !dbg !10413

return:                                           ; preds = %if.else, %if.then
  %8 = load i8, i8* %retval, align 1, !dbg !10415
  ret i8 %8, !dbg !10415
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @uv_select_more_exec(%struct.bContext* %C, %struct.wmOperator* %UNUSED_op) #0 !dbg !10416 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_op.addr = alloca %struct.wmOperator*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !10417, metadata !DIExpression()), !dbg !10418
  store %struct.wmOperator* %UNUSED_op, %struct.wmOperator** %UNUSED_op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %UNUSED_op.addr, metadata !10419, metadata !DIExpression()), !dbg !10420
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10421
  %call = call i32 @uv_select_more_less(%struct.bContext* %0, i8 zeroext 1), !dbg !10422
  ret i32 %call, !dbg !10423
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @uv_select_more_less(%struct.bContext* %C, i8 zeroext %select) #0 !dbg !10424 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %select.addr = alloca i8, align 1
  %scene = alloca %struct.Scene*, align 8
  %obedit = alloca %struct.Object*, align 8
  %ima = alloca %struct.Image*, align 8
  %sima = alloca %struct.SpaceImage*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  %efa = alloca %struct.BMFace*, align 8
  %l = alloca %struct.BMLoop*, align 8
  %iter = alloca %struct.BMIter, align 8
  %liter = alloca %struct.BMIter, align 8
  %ts = alloca %struct.ToolSettings*, align 8
  %cd_loop_uv_offset = alloca i32, align 4
  %cd_poly_tex_offset = alloca i32, align 4
  %tf = alloca %struct.MTexPoly*, align 8
  %sel_state = alloca i32, align 4
  %luv = alloca %struct.MLoopUV*, align 8
  %tf76 = alloca %struct.MTexPoly*, align 8
  %luv88 = alloca %struct.MLoopUV*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !10427, metadata !DIExpression()), !dbg !10428
  store i8 %select, i8* %select.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %select.addr, metadata !10429, metadata !DIExpression()), !dbg !10430
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene, metadata !10431, metadata !DIExpression()), !dbg !10432
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10433
  %call = call %struct.Scene* @CTX_data_scene(%struct.bContext* %0), !dbg !10434
  store %struct.Scene* %call, %struct.Scene** %scene, align 8, !dbg !10432
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !10435, metadata !DIExpression()), !dbg !10436
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10437
  %call1 = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %1), !dbg !10438
  store %struct.Object* %call1, %struct.Object** %obedit, align 8, !dbg !10436
  call void @llvm.dbg.declare(metadata %struct.Image** %ima, metadata !10439, metadata !DIExpression()), !dbg !10440
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10441
  %call2 = call %struct.Image* @CTX_data_edit_image(%struct.bContext* %2), !dbg !10442
  store %struct.Image* %call2, %struct.Image** %ima, align 8, !dbg !10440
  call void @llvm.dbg.declare(metadata %struct.SpaceImage** %sima, metadata !10443, metadata !DIExpression()), !dbg !10444
  %3 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10445
  %call3 = call %struct.SpaceImage* @CTX_wm_space_image(%struct.bContext* %3), !dbg !10446
  store %struct.SpaceImage* %call3, %struct.SpaceImage** %sima, align 8, !dbg !10444
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !10447, metadata !DIExpression()), !dbg !10448
  %4 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !10449
  %call4 = call %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object* %4), !dbg !10450
  store %struct.BMEditMesh* %call4, %struct.BMEditMesh** %em, align 8, !dbg !10448
  call void @llvm.dbg.declare(metadata %struct.BMFace** %efa, metadata !10451, metadata !DIExpression()), !dbg !10452
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l, metadata !10453, metadata !DIExpression()), !dbg !10454
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iter, metadata !10455, metadata !DIExpression()), !dbg !10456
  call void @llvm.dbg.declare(metadata %struct.BMIter* %liter, metadata !10457, metadata !DIExpression()), !dbg !10458
  call void @llvm.dbg.declare(metadata %struct.ToolSettings** %ts, metadata !10459, metadata !DIExpression()), !dbg !10460
  %5 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !10461
  %toolsettings = getelementptr inbounds %struct.Scene, %struct.Scene* %5, i32 0, i32 20, !dbg !10462
  %6 = load %struct.ToolSettings*, %struct.ToolSettings** %toolsettings, align 8, !dbg !10462
  store %struct.ToolSettings* %6, %struct.ToolSettings** %ts, align 8, !dbg !10460
  call void @llvm.dbg.declare(metadata i32* %cd_loop_uv_offset, metadata !10463, metadata !DIExpression()), !dbg !10464
  %7 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !10465
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %7, i32 0, i32 0, !dbg !10466
  %8 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !10466
  %ldata = getelementptr inbounds %struct.BMesh, %struct.BMesh* %8, i32 0, i32 26, !dbg !10467
  %call5 = call i32 @CustomData_get_offset(%struct.CustomData* %ldata, i32 16), !dbg !10468
  store i32 %call5, i32* %cd_loop_uv_offset, align 4, !dbg !10464
  call void @llvm.dbg.declare(metadata i32* %cd_poly_tex_offset, metadata !10469, metadata !DIExpression()), !dbg !10470
  %9 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !10471
  %bm6 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %9, i32 0, i32 0, !dbg !10472
  %10 = load %struct.BMesh*, %struct.BMesh** %bm6, align 8, !dbg !10472
  %pdata = getelementptr inbounds %struct.BMesh, %struct.BMesh* %10, i32 0, i32 27, !dbg !10473
  %call7 = call i32 @CustomData_get_offset(%struct.CustomData* %pdata, i32 15), !dbg !10474
  store i32 %call7, i32* %cd_poly_tex_offset, align 4, !dbg !10470
  %11 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !10475
  %uv_flag = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %11, i32 0, i32 11, !dbg !10477
  %12 = load i8, i8* %uv_flag, align 2, !dbg !10477
  %conv = zext i8 %12 to i32, !dbg !10475
  %and = and i32 %conv, 1, !dbg !10478
  %tobool = icmp ne i32 %and, 0, !dbg !10478
  br i1 %tobool, label %if.then, label %if.end10, !dbg !10479

if.then:                                          ; preds = %entry
  %13 = load i8, i8* %select.addr, align 1, !dbg !10480
  %tobool8 = icmp ne i8 %13, 0, !dbg !10480
  br i1 %tobool8, label %if.then9, label %if.else, !dbg !10483

if.then9:                                         ; preds = %if.then
  %14 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !10484
  call void @EDBM_select_more(%struct.BMEditMesh* %14), !dbg !10486
  br label %if.end, !dbg !10487

if.else:                                          ; preds = %if.then
  %15 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !10488
  call void @EDBM_select_less(%struct.BMEditMesh* %15), !dbg !10490
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then9
  %16 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10491
  %17 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !10492
  %data = getelementptr inbounds %struct.Object, %struct.Object* %17, i32 0, i32 19, !dbg !10493
  %18 = load i8*, i8** %data, align 8, !dbg !10493
  call void @WM_event_add_notifier(%struct.bContext* %16, i32 274333696, i8* %18), !dbg !10494
  store i32 4, i32* %retval, align 4, !dbg !10495
  br label %return, !dbg !10495

if.end10:                                         ; preds = %entry
  %19 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !10496
  %uv_selectmode = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %19, i32 0, i32 12, !dbg !10498
  %20 = load i8, i8* %uv_selectmode, align 1, !dbg !10498
  %conv11 = zext i8 %20 to i32, !dbg !10496
  %cmp = icmp eq i32 %conv11, 4, !dbg !10499
  br i1 %cmp, label %if.then13, label %if.else54, !dbg !10500

if.then13:                                        ; preds = %if.end10
  %21 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !10501
  %bm14 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %21, i32 0, i32 0, !dbg !10501
  %22 = load %struct.BMesh*, %struct.BMesh** %bm14, align 8, !dbg !10501
  %call15 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %22, i8 zeroext 3, i8* null), !dbg !10501
  %23 = bitcast i8* %call15 to %struct.BMFace*, !dbg !10501
  store %struct.BMFace* %23, %struct.BMFace** %efa, align 8, !dbg !10501
  br label %for.cond, !dbg !10501

for.cond:                                         ; preds = %for.inc, %if.then13
  %24 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !10504
  %tobool16 = icmp ne %struct.BMFace* %24, null, !dbg !10501
  br i1 %tobool16, label %for.body, label %for.end, !dbg !10501

for.body:                                         ; preds = %for.cond
  %25 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !10506
  %head = getelementptr inbounds %struct.BMFace, %struct.BMFace* %25, i32 0, i32 0, !dbg !10506
  call void @_bm_elem_flag_disable(%struct.BMHeader* %head, i8 zeroext 16), !dbg !10506
  br label %for.inc, !dbg !10508

for.inc:                                          ; preds = %for.body
  %call17 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !10504
  %26 = bitcast i8* %call17 to %struct.BMFace*, !dbg !10504
  store %struct.BMFace* %26, %struct.BMFace** %efa, align 8, !dbg !10504
  br label %for.cond, !dbg !10504, !llvm.loop !10509

for.end:                                          ; preds = %for.cond
  %27 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !10511
  %bm18 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %27, i32 0, i32 0, !dbg !10511
  %28 = load %struct.BMesh*, %struct.BMesh** %bm18, align 8, !dbg !10511
  %call19 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %28, i8 zeroext 3, i8* null), !dbg !10511
  %29 = bitcast i8* %call19 to %struct.BMFace*, !dbg !10511
  store %struct.BMFace* %29, %struct.BMFace** %efa, align 8, !dbg !10511
  br label %for.cond20, !dbg !10511

for.cond20:                                       ; preds = %for.inc51, %for.end
  %30 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !10513
  %tobool21 = icmp ne %struct.BMFace* %30, null, !dbg !10511
  br i1 %tobool21, label %for.body22, label %for.end53, !dbg !10511

for.body22:                                       ; preds = %for.cond20
  call void @llvm.dbg.declare(metadata %struct.MTexPoly** %tf, metadata !10515, metadata !DIExpression()), !dbg !10517
  %31 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !10518
  %head23 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %31, i32 0, i32 0, !dbg !10518
  %data24 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head23, i32 0, i32 0, !dbg !10518
  %32 = load i8*, i8** %data24, align 8, !dbg !10518
  %33 = load i32, i32* %cd_poly_tex_offset, align 4, !dbg !10518
  %idx.ext = sext i32 %33 to i64, !dbg !10518
  %add.ptr = getelementptr inbounds i8, i8* %32, i64 %idx.ext, !dbg !10518
  %34 = bitcast i8* %add.ptr to %struct.MTexPoly*, !dbg !10518
  store %struct.MTexPoly* %34, %struct.MTexPoly** %tf, align 8, !dbg !10517
  %35 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !10519
  %36 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !10521
  %37 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !10522
  %38 = load %struct.MTexPoly*, %struct.MTexPoly** %tf, align 8, !dbg !10523
  %call25 = call zeroext i8 @uvedit_face_visible_test(%struct.Scene* %35, %struct.Image* %36, %struct.BMFace* %37, %struct.MTexPoly* %38), !dbg !10524
  %tobool26 = icmp ne i8 %call25, 0, !dbg !10524
  br i1 %tobool26, label %if.then27, label %if.end50, !dbg !10525

if.then27:                                        ; preds = %for.body22
  call void @llvm.dbg.declare(metadata i32* %sel_state, metadata !10526, metadata !DIExpression()), !dbg !10528
  store i32 0, i32* %sel_state, align 4, !dbg !10528
  %39 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !10529
  %40 = bitcast %struct.BMFace* %39 to i8*, !dbg !10529
  %call28 = call i8* @BM_iter_new(%struct.BMIter* %liter, %struct.BMesh* null, i8 zeroext 11, i8* %40), !dbg !10529
  %41 = bitcast i8* %call28 to %struct.BMLoop*, !dbg !10529
  store %struct.BMLoop* %41, %struct.BMLoop** %l, align 8, !dbg !10529
  br label %for.cond29, !dbg !10529

for.cond29:                                       ; preds = %for.inc47, %if.then27
  %42 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !10531
  %tobool30 = icmp ne %struct.BMLoop* %42, null, !dbg !10529
  br i1 %tobool30, label %for.body31, label %for.end49, !dbg !10529

for.body31:                                       ; preds = %for.cond29
  call void @llvm.dbg.declare(metadata %struct.MLoopUV** %luv, metadata !10533, metadata !DIExpression()), !dbg !10535
  %43 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !10536
  %head32 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %43, i32 0, i32 0, !dbg !10536
  %data33 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head32, i32 0, i32 0, !dbg !10536
  %44 = load i8*, i8** %data33, align 8, !dbg !10536
  %45 = load i32, i32* %cd_loop_uv_offset, align 4, !dbg !10536
  %idx.ext34 = sext i32 %45 to i64, !dbg !10536
  %add.ptr35 = getelementptr inbounds i8, i8* %44, i64 %idx.ext34, !dbg !10536
  %46 = bitcast i8* %add.ptr35 to %struct.MLoopUV*, !dbg !10536
  store %struct.MLoopUV* %46, %struct.MLoopUV** %luv, align 8, !dbg !10535
  %47 = load %struct.MLoopUV*, %struct.MLoopUV** %luv, align 8, !dbg !10537
  %flag = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %47, i32 0, i32 1, !dbg !10539
  %48 = load i32, i32* %flag, align 4, !dbg !10539
  %and36 = and i32 %48, 2, !dbg !10540
  %tobool37 = icmp ne i32 %and36, 0, !dbg !10540
  br i1 %tobool37, label %if.then38, label %if.else39, !dbg !10541

if.then38:                                        ; preds = %for.body31
  %49 = load i32, i32* %sel_state, align 4, !dbg !10542
  %or = or i32 %49, 1, !dbg !10542
  store i32 %or, i32* %sel_state, align 4, !dbg !10542
  br label %if.end41, !dbg !10544

if.else39:                                        ; preds = %for.body31
  %50 = load i32, i32* %sel_state, align 4, !dbg !10545
  %or40 = or i32 %50, 2, !dbg !10545
  store i32 %or40, i32* %sel_state, align 4, !dbg !10545
  br label %if.end41

if.end41:                                         ; preds = %if.else39, %if.then38
  %51 = load i32, i32* %sel_state, align 4, !dbg !10547
  %cmp42 = icmp eq i32 %51, 3, !dbg !10549
  br i1 %cmp42, label %if.then44, label %if.end46, !dbg !10550

if.then44:                                        ; preds = %if.end41
  %52 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !10551
  %head45 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %52, i32 0, i32 0, !dbg !10551
  call void @_bm_elem_flag_enable(%struct.BMHeader* %head45, i8 zeroext 16), !dbg !10551
  br label %for.end49, !dbg !10553

if.end46:                                         ; preds = %if.end41
  br label %for.inc47, !dbg !10554

for.inc47:                                        ; preds = %if.end46
  %call48 = call i8* @BM_iter_step(%struct.BMIter* %liter), !dbg !10531
  %53 = bitcast i8* %call48 to %struct.BMLoop*, !dbg !10531
  store %struct.BMLoop* %53, %struct.BMLoop** %l, align 8, !dbg !10531
  br label %for.cond29, !dbg !10531, !llvm.loop !10555

for.end49:                                        ; preds = %if.then44, %for.cond29
  br label %if.end50, !dbg !10557

if.end50:                                         ; preds = %for.end49, %for.body22
  br label %for.inc51, !dbg !10558

for.inc51:                                        ; preds = %if.end50
  %call52 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !10513
  %54 = bitcast i8* %call52 to %struct.BMFace*, !dbg !10513
  store %struct.BMFace* %54, %struct.BMFace** %efa, align 8, !dbg !10513
  br label %for.cond20, !dbg !10513, !llvm.loop !10559

for.end53:                                        ; preds = %for.cond20
  %55 = load %struct.SpaceImage*, %struct.SpaceImage** %sima, align 8, !dbg !10561
  %56 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !10562
  %57 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !10563
  %58 = load i8, i8* %select.addr, align 1, !dbg !10564
  call void @uv_select_flush_from_tag_face(%struct.SpaceImage* %55, %struct.Scene* %56, %struct.Object* %57, i8 zeroext %58), !dbg !10565
  br label %if.end111, !dbg !10566

if.else54:                                        ; preds = %if.end10
  %59 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !10567
  %bm55 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %59, i32 0, i32 0, !dbg !10567
  %60 = load %struct.BMesh*, %struct.BMesh** %bm55, align 8, !dbg !10567
  %call56 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %60, i8 zeroext 3, i8* null), !dbg !10567
  %61 = bitcast i8* %call56 to %struct.BMFace*, !dbg !10567
  store %struct.BMFace* %61, %struct.BMFace** %efa, align 8, !dbg !10567
  br label %for.cond57, !dbg !10567

for.cond57:                                       ; preds = %for.inc68, %if.else54
  %62 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !10570
  %tobool58 = icmp ne %struct.BMFace* %62, null, !dbg !10567
  br i1 %tobool58, label %for.body59, label %for.end70, !dbg !10567

for.body59:                                       ; preds = %for.cond57
  %63 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !10572
  %64 = bitcast %struct.BMFace* %63 to i8*, !dbg !10572
  %call60 = call i8* @BM_iter_new(%struct.BMIter* %liter, %struct.BMesh* null, i8 zeroext 11, i8* %64), !dbg !10572
  %65 = bitcast i8* %call60 to %struct.BMLoop*, !dbg !10572
  store %struct.BMLoop* %65, %struct.BMLoop** %l, align 8, !dbg !10572
  br label %for.cond61, !dbg !10572

for.cond61:                                       ; preds = %for.inc65, %for.body59
  %66 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !10575
  %tobool62 = icmp ne %struct.BMLoop* %66, null, !dbg !10572
  br i1 %tobool62, label %for.body63, label %for.end67, !dbg !10572

for.body63:                                       ; preds = %for.cond61
  %67 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !10577
  %head64 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %67, i32 0, i32 0, !dbg !10577
  call void @_bm_elem_flag_disable(%struct.BMHeader* %head64, i8 zeroext 16), !dbg !10577
  br label %for.inc65, !dbg !10579

for.inc65:                                        ; preds = %for.body63
  %call66 = call i8* @BM_iter_step(%struct.BMIter* %liter), !dbg !10575
  %68 = bitcast i8* %call66 to %struct.BMLoop*, !dbg !10575
  store %struct.BMLoop* %68, %struct.BMLoop** %l, align 8, !dbg !10575
  br label %for.cond61, !dbg !10575, !llvm.loop !10580

for.end67:                                        ; preds = %for.cond61
  br label %for.inc68, !dbg !10582

for.inc68:                                        ; preds = %for.end67
  %call69 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !10570
  %69 = bitcast i8* %call69 to %struct.BMFace*, !dbg !10570
  store %struct.BMFace* %69, %struct.BMFace** %efa, align 8, !dbg !10570
  br label %for.cond57, !dbg !10570, !llvm.loop !10583

for.end70:                                        ; preds = %for.cond57
  %70 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !10585
  %bm71 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %70, i32 0, i32 0, !dbg !10585
  %71 = load %struct.BMesh*, %struct.BMesh** %bm71, align 8, !dbg !10585
  %call72 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %71, i8 zeroext 3, i8* null), !dbg !10585
  %72 = bitcast i8* %call72 to %struct.BMFace*, !dbg !10585
  store %struct.BMFace* %72, %struct.BMFace** %efa, align 8, !dbg !10585
  br label %for.cond73, !dbg !10585

for.cond73:                                       ; preds = %for.inc108, %for.end70
  %73 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !10587
  %tobool74 = icmp ne %struct.BMFace* %73, null, !dbg !10585
  br i1 %tobool74, label %for.body75, label %for.end110, !dbg !10585

for.body75:                                       ; preds = %for.cond73
  call void @llvm.dbg.declare(metadata %struct.MTexPoly** %tf76, metadata !10589, metadata !DIExpression()), !dbg !10591
  %74 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !10592
  %head77 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %74, i32 0, i32 0, !dbg !10592
  %data78 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head77, i32 0, i32 0, !dbg !10592
  %75 = load i8*, i8** %data78, align 8, !dbg !10592
  %76 = load i32, i32* %cd_poly_tex_offset, align 4, !dbg !10592
  %idx.ext79 = sext i32 %76 to i64, !dbg !10592
  %add.ptr80 = getelementptr inbounds i8, i8* %75, i64 %idx.ext79, !dbg !10592
  %77 = bitcast i8* %add.ptr80 to %struct.MTexPoly*, !dbg !10592
  store %struct.MTexPoly* %77, %struct.MTexPoly** %tf76, align 8, !dbg !10591
  %78 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !10593
  %79 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !10595
  %80 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !10596
  %81 = load %struct.MTexPoly*, %struct.MTexPoly** %tf76, align 8, !dbg !10597
  %call81 = call zeroext i8 @uvedit_face_visible_test(%struct.Scene* %78, %struct.Image* %79, %struct.BMFace* %80, %struct.MTexPoly* %81), !dbg !10598
  %tobool82 = icmp ne i8 %call81, 0, !dbg !10598
  br i1 %tobool82, label %if.then83, label %if.end107, !dbg !10599

if.then83:                                        ; preds = %for.body75
  %82 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !10600
  %83 = bitcast %struct.BMFace* %82 to i8*, !dbg !10600
  %call84 = call i8* @BM_iter_new(%struct.BMIter* %liter, %struct.BMesh* null, i8 zeroext 11, i8* %83), !dbg !10600
  %84 = bitcast i8* %call84 to %struct.BMLoop*, !dbg !10600
  store %struct.BMLoop* %84, %struct.BMLoop** %l, align 8, !dbg !10600
  br label %for.cond85, !dbg !10600

for.cond85:                                       ; preds = %for.inc104, %if.then83
  %85 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !10603
  %tobool86 = icmp ne %struct.BMLoop* %85, null, !dbg !10600
  br i1 %tobool86, label %for.body87, label %for.end106, !dbg !10600

for.body87:                                       ; preds = %for.cond85
  call void @llvm.dbg.declare(metadata %struct.MLoopUV** %luv88, metadata !10605, metadata !DIExpression()), !dbg !10607
  %86 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !10608
  %head89 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %86, i32 0, i32 0, !dbg !10608
  %data90 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head89, i32 0, i32 0, !dbg !10608
  %87 = load i8*, i8** %data90, align 8, !dbg !10608
  %88 = load i32, i32* %cd_loop_uv_offset, align 4, !dbg !10608
  %idx.ext91 = sext i32 %88 to i64, !dbg !10608
  %add.ptr92 = getelementptr inbounds i8, i8* %87, i64 %idx.ext91, !dbg !10608
  %89 = bitcast i8* %add.ptr92 to %struct.MLoopUV*, !dbg !10608
  store %struct.MLoopUV* %89, %struct.MLoopUV** %luv88, align 8, !dbg !10607
  %90 = load %struct.MLoopUV*, %struct.MLoopUV** %luv88, align 8, !dbg !10609
  %flag93 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %90, i32 0, i32 1, !dbg !10611
  %91 = load i32, i32* %flag93, align 4, !dbg !10611
  %and94 = and i32 %91, 2, !dbg !10612
  %cmp95 = icmp ne i32 %and94, 0, !dbg !10613
  %conv96 = zext i1 %cmp95 to i32, !dbg !10613
  %92 = load i8, i8* %select.addr, align 1, !dbg !10614
  %conv97 = zext i8 %92 to i32, !dbg !10614
  %cmp98 = icmp eq i32 %conv96, %conv97, !dbg !10615
  br i1 %cmp98, label %if.then100, label %if.end103, !dbg !10616

if.then100:                                       ; preds = %for.body87
  %93 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !10617
  %next = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %93, i32 0, i32 6, !dbg !10617
  %94 = load %struct.BMLoop*, %struct.BMLoop** %next, align 8, !dbg !10617
  %head101 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %94, i32 0, i32 0, !dbg !10617
  call void @_bm_elem_flag_enable(%struct.BMHeader* %head101, i8 zeroext 16), !dbg !10617
  %95 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !10619
  %prev = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %95, i32 0, i32 7, !dbg !10619
  %96 = load %struct.BMLoop*, %struct.BMLoop** %prev, align 8, !dbg !10619
  %head102 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %96, i32 0, i32 0, !dbg !10619
  call void @_bm_elem_flag_enable(%struct.BMHeader* %head102, i8 zeroext 16), !dbg !10619
  br label %if.end103, !dbg !10620

if.end103:                                        ; preds = %if.then100, %for.body87
  br label %for.inc104, !dbg !10621

for.inc104:                                       ; preds = %if.end103
  %call105 = call i8* @BM_iter_step(%struct.BMIter* %liter), !dbg !10603
  %97 = bitcast i8* %call105 to %struct.BMLoop*, !dbg !10603
  store %struct.BMLoop* %97, %struct.BMLoop** %l, align 8, !dbg !10603
  br label %for.cond85, !dbg !10603, !llvm.loop !10622

for.end106:                                       ; preds = %for.cond85
  br label %if.end107, !dbg !10624

if.end107:                                        ; preds = %for.end106, %for.body75
  br label %for.inc108, !dbg !10625

for.inc108:                                       ; preds = %if.end107
  %call109 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !10587
  %98 = bitcast i8* %call109 to %struct.BMFace*, !dbg !10587
  store %struct.BMFace* %98, %struct.BMFace** %efa, align 8, !dbg !10587
  br label %for.cond73, !dbg !10587, !llvm.loop !10626

for.end110:                                       ; preds = %for.cond73
  %99 = load %struct.SpaceImage*, %struct.SpaceImage** %sima, align 8, !dbg !10628
  %100 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !10629
  %101 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !10630
  %102 = load i8, i8* %select.addr, align 1, !dbg !10631
  call void @uv_select_flush_from_tag_loop(%struct.SpaceImage* %99, %struct.Scene* %100, %struct.Object* %101, i8 zeroext %102), !dbg !10632
  br label %if.end111

if.end111:                                        ; preds = %for.end110, %for.end53
  %103 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10633
  %104 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !10634
  %data112 = getelementptr inbounds %struct.Object, %struct.Object* %104, i32 0, i32 19, !dbg !10635
  %105 = load i8*, i8** %data112, align 8, !dbg !10635
  call void @WM_event_add_notifier(%struct.bContext* %103, i32 274333696, i8* %105), !dbg !10636
  store i32 4, i32* %retval, align 4, !dbg !10637
  br label %return, !dbg !10637

return:                                           ; preds = %if.end111, %if.end
  %106 = load i32, i32* %retval, align 4, !dbg !10638
  ret i32 %106, !dbg !10638
}

declare dso_local void @EDBM_select_more(%struct.BMEditMesh*) #2

declare dso_local void @EDBM_select_less(%struct.BMEditMesh*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @uv_select_flush_from_tag_loop(%struct.SpaceImage* %sima, %struct.Scene* %scene, %struct.Object* %obedit, i8 zeroext %select) #0 !dbg !10639 {
entry:
  %sima.addr = alloca %struct.SpaceImage*, align 8
  %scene.addr = alloca %struct.Scene*, align 8
  %obedit.addr = alloca %struct.Object*, align 8
  %select.addr = alloca i8, align 1
  %ts = alloca %struct.ToolSettings*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  %efa = alloca %struct.BMFace*, align 8
  %l = alloca %struct.BMLoop*, align 8
  %iter = alloca %struct.BMIter, align 8
  %liter = alloca %struct.BMIter, align 8
  %cd_loop_uv_offset = alloca i32, align 4
  %eve = alloca %struct.BMVert*, align 8
  %vmap = alloca %struct.UvVertMap*, align 8
  %limit = alloca [2 x float], align 4
  %efa_index = alloca i32, align 4
  store %struct.SpaceImage* %sima, %struct.SpaceImage** %sima.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SpaceImage** %sima.addr, metadata !10640, metadata !DIExpression()), !dbg !10641
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !10642, metadata !DIExpression()), !dbg !10643
  store %struct.Object* %obedit, %struct.Object** %obedit.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit.addr, metadata !10644, metadata !DIExpression()), !dbg !10645
  store i8 %select, i8* %select.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %select.addr, metadata !10646, metadata !DIExpression()), !dbg !10647
  call void @llvm.dbg.declare(metadata %struct.ToolSettings** %ts, metadata !10648, metadata !DIExpression()), !dbg !10649
  %0 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !10650
  %toolsettings = getelementptr inbounds %struct.Scene, %struct.Scene* %0, i32 0, i32 20, !dbg !10651
  %1 = load %struct.ToolSettings*, %struct.ToolSettings** %toolsettings, align 8, !dbg !10651
  store %struct.ToolSettings* %1, %struct.ToolSettings** %ts, align 8, !dbg !10649
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !10652, metadata !DIExpression()), !dbg !10653
  %2 = load %struct.Object*, %struct.Object** %obedit.addr, align 8, !dbg !10654
  %call = call %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object* %2), !dbg !10655
  store %struct.BMEditMesh* %call, %struct.BMEditMesh** %em, align 8, !dbg !10653
  call void @llvm.dbg.declare(metadata %struct.BMFace** %efa, metadata !10656, metadata !DIExpression()), !dbg !10657
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l, metadata !10658, metadata !DIExpression()), !dbg !10659
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iter, metadata !10660, metadata !DIExpression()), !dbg !10661
  call void @llvm.dbg.declare(metadata %struct.BMIter* %liter, metadata !10662, metadata !DIExpression()), !dbg !10663
  call void @llvm.dbg.declare(metadata i32* %cd_loop_uv_offset, metadata !10664, metadata !DIExpression()), !dbg !10665
  %3 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !10666
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %3, i32 0, i32 0, !dbg !10667
  %4 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !10667
  %ldata = getelementptr inbounds %struct.BMesh, %struct.BMesh* %4, i32 0, i32 26, !dbg !10668
  %call1 = call i32 @CustomData_get_offset(%struct.CustomData* %ldata, i32 16), !dbg !10669
  store i32 %call1, i32* %cd_loop_uv_offset, align 4, !dbg !10665
  %5 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !10670
  %uv_flag = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %5, i32 0, i32 11, !dbg !10672
  %6 = load i8, i8* %uv_flag, align 2, !dbg !10672
  %conv = zext i8 %6 to i32, !dbg !10670
  %and = and i32 %conv, 1, !dbg !10673
  %cmp = icmp eq i32 %and, 0, !dbg !10674
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !10675

land.lhs.true:                                    ; preds = %entry
  %7 = load %struct.SpaceImage*, %struct.SpaceImage** %sima.addr, align 8, !dbg !10676
  %sticky = getelementptr inbounds %struct.SpaceImage, %struct.SpaceImage* %7, i32 0, i32 23, !dbg !10677
  %8 = load i8, i8* %sticky, align 1, !dbg !10677
  %conv3 = zext i8 %8 to i32, !dbg !10676
  %cmp4 = icmp eq i32 %conv3, 2, !dbg !10678
  br i1 %cmp4, label %if.then, label %if.else, !dbg !10679

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.BMVert** %eve, metadata !10680, metadata !DIExpression()), !dbg !10682
  %9 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !10683
  %bm6 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %9, i32 0, i32 0, !dbg !10683
  %10 = load %struct.BMesh*, %struct.BMesh** %bm6, align 8, !dbg !10683
  %call7 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %10, i8 zeroext 1, i8* null), !dbg !10683
  %11 = bitcast i8* %call7 to %struct.BMVert*, !dbg !10683
  store %struct.BMVert* %11, %struct.BMVert** %eve, align 8, !dbg !10683
  br label %for.cond, !dbg !10683

for.cond:                                         ; preds = %for.inc, %if.then
  %12 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !10685
  %tobool = icmp ne %struct.BMVert* %12, null, !dbg !10683
  br i1 %tobool, label %for.body, label %for.end, !dbg !10683

for.body:                                         ; preds = %for.cond
  %13 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !10687
  %head = getelementptr inbounds %struct.BMVert, %struct.BMVert* %13, i32 0, i32 0, !dbg !10687
  call void @_bm_elem_flag_disable(%struct.BMHeader* %head, i8 zeroext 16), !dbg !10687
  br label %for.inc, !dbg !10689

for.inc:                                          ; preds = %for.body
  %call8 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !10685
  %14 = bitcast i8* %call8 to %struct.BMVert*, !dbg !10685
  store %struct.BMVert* %14, %struct.BMVert** %eve, align 8, !dbg !10685
  br label %for.cond, !dbg !10685, !llvm.loop !10690

for.end:                                          ; preds = %for.cond
  %15 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !10692
  %bm9 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %15, i32 0, i32 0, !dbg !10692
  %16 = load %struct.BMesh*, %struct.BMesh** %bm9, align 8, !dbg !10692
  %call10 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %16, i8 zeroext 3, i8* null), !dbg !10692
  %17 = bitcast i8* %call10 to %struct.BMFace*, !dbg !10692
  store %struct.BMFace* %17, %struct.BMFace** %efa, align 8, !dbg !10692
  br label %for.cond11, !dbg !10692

for.cond11:                                       ; preds = %for.inc26, %for.end
  %18 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !10694
  %tobool12 = icmp ne %struct.BMFace* %18, null, !dbg !10692
  br i1 %tobool12, label %for.body13, label %for.end28, !dbg !10692

for.body13:                                       ; preds = %for.cond11
  %19 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !10696
  %20 = bitcast %struct.BMFace* %19 to i8*, !dbg !10696
  %call14 = call i8* @BM_iter_new(%struct.BMIter* %liter, %struct.BMesh* null, i8 zeroext 11, i8* %20), !dbg !10696
  %21 = bitcast i8* %call14 to %struct.BMLoop*, !dbg !10696
  store %struct.BMLoop* %21, %struct.BMLoop** %l, align 8, !dbg !10696
  br label %for.cond15, !dbg !10696

for.cond15:                                       ; preds = %for.inc23, %for.body13
  %22 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !10699
  %tobool16 = icmp ne %struct.BMLoop* %22, null, !dbg !10696
  br i1 %tobool16, label %for.body17, label %for.end25, !dbg !10696

for.body17:                                       ; preds = %for.cond15
  %23 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !10701
  %head18 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %23, i32 0, i32 0, !dbg !10701
  %call19 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head18, i8 zeroext 16), !dbg !10701
  %tobool20 = icmp ne i8 %call19, 0, !dbg !10701
  br i1 %tobool20, label %if.then21, label %if.end, !dbg !10704

if.then21:                                        ; preds = %for.body17
  %24 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !10705
  %v = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %24, i32 0, i32 1, !dbg !10705
  %25 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !10705
  %head22 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %25, i32 0, i32 0, !dbg !10705
  call void @_bm_elem_flag_enable(%struct.BMHeader* %head22, i8 zeroext 16), !dbg !10705
  br label %if.end, !dbg !10707

if.end:                                           ; preds = %if.then21, %for.body17
  br label %for.inc23, !dbg !10708

for.inc23:                                        ; preds = %if.end
  %call24 = call i8* @BM_iter_step(%struct.BMIter* %liter), !dbg !10699
  %26 = bitcast i8* %call24 to %struct.BMLoop*, !dbg !10699
  store %struct.BMLoop* %26, %struct.BMLoop** %l, align 8, !dbg !10699
  br label %for.cond15, !dbg !10699, !llvm.loop !10709

for.end25:                                        ; preds = %for.cond15
  br label %for.inc26, !dbg !10711

for.inc26:                                        ; preds = %for.end25
  %call27 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !10694
  %27 = bitcast i8* %call27 to %struct.BMFace*, !dbg !10694
  store %struct.BMFace* %27, %struct.BMFace** %efa, align 8, !dbg !10694
  br label %for.cond11, !dbg !10694, !llvm.loop !10712

for.end28:                                        ; preds = %for.cond11
  %28 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !10714
  %bm29 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %28, i32 0, i32 0, !dbg !10714
  %29 = load %struct.BMesh*, %struct.BMesh** %bm29, align 8, !dbg !10714
  %call30 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %29, i8 zeroext 3, i8* null), !dbg !10714
  %30 = bitcast i8* %call30 to %struct.BMFace*, !dbg !10714
  store %struct.BMFace* %30, %struct.BMFace** %efa, align 8, !dbg !10714
  br label %for.cond31, !dbg !10714

for.cond31:                                       ; preds = %for.inc47, %for.end28
  %31 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !10716
  %tobool32 = icmp ne %struct.BMFace* %31, null, !dbg !10714
  br i1 %tobool32, label %for.body33, label %for.end49, !dbg !10714

for.body33:                                       ; preds = %for.cond31
  %32 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !10718
  %33 = bitcast %struct.BMFace* %32 to i8*, !dbg !10718
  %call34 = call i8* @BM_iter_new(%struct.BMIter* %liter, %struct.BMesh* null, i8 zeroext 11, i8* %33), !dbg !10718
  %34 = bitcast i8* %call34 to %struct.BMLoop*, !dbg !10718
  store %struct.BMLoop* %34, %struct.BMLoop** %l, align 8, !dbg !10718
  br label %for.cond35, !dbg !10718

for.cond35:                                       ; preds = %for.inc44, %for.body33
  %35 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !10721
  %tobool36 = icmp ne %struct.BMLoop* %35, null, !dbg !10718
  br i1 %tobool36, label %for.body37, label %for.end46, !dbg !10718

for.body37:                                       ; preds = %for.cond35
  %36 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !10723
  %v38 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %36, i32 0, i32 1, !dbg !10723
  %37 = load %struct.BMVert*, %struct.BMVert** %v38, align 8, !dbg !10723
  %head39 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %37, i32 0, i32 0, !dbg !10723
  %call40 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head39, i8 zeroext 16), !dbg !10723
  %tobool41 = icmp ne i8 %call40, 0, !dbg !10723
  br i1 %tobool41, label %if.then42, label %if.end43, !dbg !10726

if.then42:                                        ; preds = %for.body37
  %38 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !10727
  %39 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !10729
  %40 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !10730
  %41 = load i8, i8* %select.addr, align 1, !dbg !10731
  %42 = load i32, i32* %cd_loop_uv_offset, align 4, !dbg !10732
  call void @uvedit_uv_select_set(%struct.BMEditMesh* %38, %struct.Scene* %39, %struct.BMLoop* %40, i8 zeroext %41, i8 zeroext 0, i32 %42), !dbg !10733
  br label %if.end43, !dbg !10734

if.end43:                                         ; preds = %if.then42, %for.body37
  br label %for.inc44, !dbg !10735

for.inc44:                                        ; preds = %if.end43
  %call45 = call i8* @BM_iter_step(%struct.BMIter* %liter), !dbg !10721
  %43 = bitcast i8* %call45 to %struct.BMLoop*, !dbg !10721
  store %struct.BMLoop* %43, %struct.BMLoop** %l, align 8, !dbg !10721
  br label %for.cond35, !dbg !10721, !llvm.loop !10736

for.end46:                                        ; preds = %for.cond35
  br label %for.inc47, !dbg !10738

for.inc47:                                        ; preds = %for.end46
  %call48 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !10716
  %44 = bitcast i8* %call48 to %struct.BMFace*, !dbg !10716
  store %struct.BMFace* %44, %struct.BMFace** %efa, align 8, !dbg !10716
  br label %for.cond31, !dbg !10716, !llvm.loop !10739

for.end49:                                        ; preds = %for.cond31
  br label %if.end111, !dbg !10741

if.else:                                          ; preds = %land.lhs.true, %entry
  %45 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !10742
  %uv_flag50 = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %45, i32 0, i32 11, !dbg !10744
  %46 = load i8, i8* %uv_flag50, align 2, !dbg !10744
  %conv51 = zext i8 %46 to i32, !dbg !10742
  %and52 = and i32 %conv51, 1, !dbg !10745
  %cmp53 = icmp eq i32 %and52, 0, !dbg !10746
  br i1 %cmp53, label %land.lhs.true55, label %if.else89, !dbg !10747

land.lhs.true55:                                  ; preds = %if.else
  %47 = load %struct.SpaceImage*, %struct.SpaceImage** %sima.addr, align 8, !dbg !10748
  %sticky56 = getelementptr inbounds %struct.SpaceImage, %struct.SpaceImage* %47, i32 0, i32 23, !dbg !10749
  %48 = load i8, i8* %sticky56, align 1, !dbg !10749
  %conv57 = zext i8 %48 to i32, !dbg !10748
  %cmp58 = icmp eq i32 %conv57, 0, !dbg !10750
  br i1 %cmp58, label %if.then60, label %if.else89, !dbg !10751

if.then60:                                        ; preds = %land.lhs.true55
  call void @llvm.dbg.declare(metadata %struct.UvVertMap** %vmap, metadata !10752, metadata !DIExpression()), !dbg !10754
  call void @llvm.dbg.declare(metadata [2 x float]* %limit, metadata !10755, metadata !DIExpression()), !dbg !10756
  call void @llvm.dbg.declare(metadata i32* %efa_index, metadata !10757, metadata !DIExpression()), !dbg !10758
  %49 = load %struct.SpaceImage*, %struct.SpaceImage** %sima.addr, align 8, !dbg !10759
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %limit, i64 0, i64 0, !dbg !10760
  call void @uvedit_pixel_to_float(%struct.SpaceImage* %49, float* %arraydecay, float 0x3FA99999A0000000), !dbg !10761
  %50 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !10762
  %bm61 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %50, i32 0, i32 0, !dbg !10763
  %51 = load %struct.BMesh*, %struct.BMesh** %bm61, align 8, !dbg !10763
  call void @BM_mesh_elem_table_ensure(%struct.BMesh* %51, i8 zeroext 8), !dbg !10764
  %52 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !10765
  %bm62 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %52, i32 0, i32 0, !dbg !10766
  %53 = load %struct.BMesh*, %struct.BMesh** %bm62, align 8, !dbg !10766
  %arraydecay63 = getelementptr inbounds [2 x float], [2 x float]* %limit, i64 0, i64 0, !dbg !10767
  %call64 = call %struct.UvVertMap* @BM_uv_vert_map_create(%struct.BMesh* %53, i8 zeroext 0, float* %arraydecay63), !dbg !10768
  store %struct.UvVertMap* %call64, %struct.UvVertMap** %vmap, align 8, !dbg !10769
  %54 = load %struct.UvVertMap*, %struct.UvVertMap** %vmap, align 8, !dbg !10770
  %cmp65 = icmp eq %struct.UvVertMap* %54, null, !dbg !10772
  br i1 %cmp65, label %if.then67, label %if.end68, !dbg !10773

if.then67:                                        ; preds = %if.then60
  br label %if.end111, !dbg !10774

if.end68:                                         ; preds = %if.then60
  %55 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !10776
  %bm69 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %55, i32 0, i32 0, !dbg !10776
  %56 = load %struct.BMesh*, %struct.BMesh** %bm69, align 8, !dbg !10776
  %call70 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %56, i8 zeroext 3, i8* null), !dbg !10776
  %57 = bitcast i8* %call70 to %struct.BMFace*, !dbg !10776
  store %struct.BMFace* %57, %struct.BMFace** %efa, align 8, !dbg !10776
  store i32 0, i32* %efa_index, align 4, !dbg !10776
  br label %for.cond71, !dbg !10776

for.cond71:                                       ; preds = %for.inc86, %if.end68
  %58 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !10778
  %tobool72 = icmp ne %struct.BMFace* %58, null, !dbg !10776
  br i1 %tobool72, label %for.body73, label %for.end88, !dbg !10776

for.body73:                                       ; preds = %for.cond71
  %59 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !10780
  %60 = bitcast %struct.BMFace* %59 to i8*, !dbg !10780
  %call74 = call i8* @BM_iter_new(%struct.BMIter* %liter, %struct.BMesh* null, i8 zeroext 11, i8* %60), !dbg !10780
  %61 = bitcast i8* %call74 to %struct.BMLoop*, !dbg !10780
  store %struct.BMLoop* %61, %struct.BMLoop** %l, align 8, !dbg !10780
  br label %for.cond75, !dbg !10780

for.cond75:                                       ; preds = %for.inc83, %for.body73
  %62 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !10783
  %tobool76 = icmp ne %struct.BMLoop* %62, null, !dbg !10780
  br i1 %tobool76, label %for.body77, label %for.end85, !dbg !10780

for.body77:                                       ; preds = %for.cond75
  %63 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !10785
  %head78 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %63, i32 0, i32 0, !dbg !10785
  %call79 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head78, i8 zeroext 16), !dbg !10785
  %tobool80 = icmp ne i8 %call79, 0, !dbg !10785
  br i1 %tobool80, label %if.then81, label %if.end82, !dbg !10788

if.then81:                                        ; preds = %for.body77
  %64 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !10789
  %65 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !10791
  %66 = load %struct.UvVertMap*, %struct.UvVertMap** %vmap, align 8, !dbg !10792
  %67 = load i32, i32* %efa_index, align 4, !dbg !10793
  %68 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !10794
  %69 = load i8, i8* %select.addr, align 1, !dbg !10795
  %70 = load i32, i32* %cd_loop_uv_offset, align 4, !dbg !10796
  call void @uv_select_flush_from_tag_sticky_loc_internal(%struct.Scene* %64, %struct.BMEditMesh* %65, %struct.UvVertMap* %66, i32 %67, %struct.BMLoop* %68, i8 zeroext %69, i32 %70), !dbg !10797
  br label %if.end82, !dbg !10798

if.end82:                                         ; preds = %if.then81, %for.body77
  br label %for.inc83, !dbg !10799

for.inc83:                                        ; preds = %if.end82
  %call84 = call i8* @BM_iter_step(%struct.BMIter* %liter), !dbg !10783
  %71 = bitcast i8* %call84 to %struct.BMLoop*, !dbg !10783
  store %struct.BMLoop* %71, %struct.BMLoop** %l, align 8, !dbg !10783
  br label %for.cond75, !dbg !10783, !llvm.loop !10800

for.end85:                                        ; preds = %for.cond75
  br label %for.inc86, !dbg !10802

for.inc86:                                        ; preds = %for.end85
  %call87 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !10778
  %72 = bitcast i8* %call87 to %struct.BMFace*, !dbg !10778
  store %struct.BMFace* %72, %struct.BMFace** %efa, align 8, !dbg !10778
  %73 = load i32, i32* %efa_index, align 4, !dbg !10778
  %inc = add i32 %73, 1, !dbg !10778
  store i32 %inc, i32* %efa_index, align 4, !dbg !10778
  br label %for.cond71, !dbg !10778, !llvm.loop !10803

for.end88:                                        ; preds = %for.cond71
  %74 = load %struct.UvVertMap*, %struct.UvVertMap** %vmap, align 8, !dbg !10805
  call void @BM_uv_vert_map_free(%struct.UvVertMap* %74), !dbg !10806
  br label %if.end110, !dbg !10807

if.else89:                                        ; preds = %land.lhs.true55, %if.else
  %75 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !10808
  %bm90 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %75, i32 0, i32 0, !dbg !10808
  %76 = load %struct.BMesh*, %struct.BMesh** %bm90, align 8, !dbg !10808
  %call91 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %76, i8 zeroext 3, i8* null), !dbg !10808
  %77 = bitcast i8* %call91 to %struct.BMFace*, !dbg !10808
  store %struct.BMFace* %77, %struct.BMFace** %efa, align 8, !dbg !10808
  br label %for.cond92, !dbg !10808

for.cond92:                                       ; preds = %for.inc107, %if.else89
  %78 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !10811
  %tobool93 = icmp ne %struct.BMFace* %78, null, !dbg !10808
  br i1 %tobool93, label %for.body94, label %for.end109, !dbg !10808

for.body94:                                       ; preds = %for.cond92
  %79 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !10813
  %80 = bitcast %struct.BMFace* %79 to i8*, !dbg !10813
  %call95 = call i8* @BM_iter_new(%struct.BMIter* %liter, %struct.BMesh* null, i8 zeroext 11, i8* %80), !dbg !10813
  %81 = bitcast i8* %call95 to %struct.BMLoop*, !dbg !10813
  store %struct.BMLoop* %81, %struct.BMLoop** %l, align 8, !dbg !10813
  br label %for.cond96, !dbg !10813

for.cond96:                                       ; preds = %for.inc104, %for.body94
  %82 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !10816
  %tobool97 = icmp ne %struct.BMLoop* %82, null, !dbg !10813
  br i1 %tobool97, label %for.body98, label %for.end106, !dbg !10813

for.body98:                                       ; preds = %for.cond96
  %83 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !10818
  %head99 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %83, i32 0, i32 0, !dbg !10818
  %call100 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head99, i8 zeroext 16), !dbg !10818
  %tobool101 = icmp ne i8 %call100, 0, !dbg !10818
  br i1 %tobool101, label %if.then102, label %if.end103, !dbg !10821

if.then102:                                       ; preds = %for.body98
  %84 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !10822
  %85 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !10824
  %86 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !10825
  %87 = load i8, i8* %select.addr, align 1, !dbg !10826
  %88 = load i32, i32* %cd_loop_uv_offset, align 4, !dbg !10827
  call void @uvedit_uv_select_set(%struct.BMEditMesh* %84, %struct.Scene* %85, %struct.BMLoop* %86, i8 zeroext %87, i8 zeroext 0, i32 %88), !dbg !10828
  br label %if.end103, !dbg !10829

if.end103:                                        ; preds = %if.then102, %for.body98
  br label %for.inc104, !dbg !10830

for.inc104:                                       ; preds = %if.end103
  %call105 = call i8* @BM_iter_step(%struct.BMIter* %liter), !dbg !10816
  %89 = bitcast i8* %call105 to %struct.BMLoop*, !dbg !10816
  store %struct.BMLoop* %89, %struct.BMLoop** %l, align 8, !dbg !10816
  br label %for.cond96, !dbg !10816, !llvm.loop !10831

for.end106:                                       ; preds = %for.cond96
  br label %for.inc107, !dbg !10833

for.inc107:                                       ; preds = %for.end106
  %call108 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !10811
  %90 = bitcast i8* %call108 to %struct.BMFace*, !dbg !10811
  store %struct.BMFace* %90, %struct.BMFace** %efa, align 8, !dbg !10811
  br label %for.cond92, !dbg !10811, !llvm.loop !10834

for.end109:                                       ; preds = %for.cond92
  br label %if.end110

if.end110:                                        ; preds = %for.end109, %for.end88
  br label %if.end111

if.end111:                                        ; preds = %if.then67, %if.end110, %for.end49
  ret void, !dbg !10836
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @uv_select_less_exec(%struct.bContext* %C, %struct.wmOperator* %UNUSED_op) #0 !dbg !10837 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_op.addr = alloca %struct.wmOperator*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !10838, metadata !DIExpression()), !dbg !10839
  store %struct.wmOperator* %UNUSED_op, %struct.wmOperator** %UNUSED_op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %UNUSED_op.addr, metadata !10840, metadata !DIExpression()), !dbg !10841
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10842
  %call = call i32 @uv_select_more_less(%struct.bContext* %0, i8 zeroext 0), !dbg !10843
  ret i32 %call, !dbg !10844
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @uv_snap_cursor_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !10845 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %sima = alloca %struct.SpaceImage*, align 8
  %scene = alloca %struct.Scene*, align 8
  %obedit = alloca %struct.Object*, align 8
  %ima = alloca %struct.Image*, align 8
  %changed = alloca i8, align 1
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !10846, metadata !DIExpression()), !dbg !10847
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !10848, metadata !DIExpression()), !dbg !10849
  call void @llvm.dbg.declare(metadata %struct.SpaceImage** %sima, metadata !10850, metadata !DIExpression()), !dbg !10851
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10852
  %call = call %struct.SpaceImage* @CTX_wm_space_image(%struct.bContext* %0), !dbg !10853
  store %struct.SpaceImage* %call, %struct.SpaceImage** %sima, align 8, !dbg !10851
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene, metadata !10854, metadata !DIExpression()), !dbg !10855
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10856
  %call1 = call %struct.Scene* @CTX_data_scene(%struct.bContext* %1), !dbg !10857
  store %struct.Scene* %call1, %struct.Scene** %scene, align 8, !dbg !10855
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !10858, metadata !DIExpression()), !dbg !10859
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10860
  %call2 = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %2), !dbg !10861
  store %struct.Object* %call2, %struct.Object** %obedit, align 8, !dbg !10859
  call void @llvm.dbg.declare(metadata %struct.Image** %ima, metadata !10862, metadata !DIExpression()), !dbg !10863
  %3 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10864
  %call3 = call %struct.Image* @CTX_data_edit_image(%struct.bContext* %3), !dbg !10865
  store %struct.Image* %call3, %struct.Image** %ima, align 8, !dbg !10863
  call void @llvm.dbg.declare(metadata i8* %changed, metadata !10866, metadata !DIExpression()), !dbg !10867
  store i8 0, i8* %changed, align 1, !dbg !10867
  %4 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10868
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %4, i32 0, i32 7, !dbg !10869
  %5 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !10869
  %call4 = call i32 @RNA_enum_get(%struct.PointerRNA* %5, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.92, i64 0, i64 0)), !dbg !10870
  switch i32 %call4, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb5
  ], !dbg !10871

sw.bb:                                            ; preds = %entry
  %6 = load %struct.SpaceImage*, %struct.SpaceImage** %sima, align 8, !dbg !10872
  call void @uv_snap_cursor_to_pixels(%struct.SpaceImage* %6), !dbg !10874
  store i8 1, i8* %changed, align 1, !dbg !10875
  br label %sw.epilog, !dbg !10876

sw.bb5:                                           ; preds = %entry
  %7 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !10877
  %8 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !10878
  %9 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !10879
  %10 = load %struct.SpaceImage*, %struct.SpaceImage** %sima, align 8, !dbg !10880
  %call6 = call zeroext i8 @uv_snap_cursor_to_selection(%struct.Scene* %7, %struct.Image* %8, %struct.Object* %9, %struct.SpaceImage* %10), !dbg !10881
  store i8 %call6, i8* %changed, align 1, !dbg !10882
  br label %sw.epilog, !dbg !10883

sw.epilog:                                        ; preds = %entry, %sw.bb5, %sw.bb
  %11 = load i8, i8* %changed, align 1, !dbg !10884
  %tobool = icmp ne i8 %11, 0, !dbg !10884
  br i1 %tobool, label %if.end, label %if.then, !dbg !10886

if.then:                                          ; preds = %sw.epilog
  store i32 2, i32* %retval, align 4, !dbg !10887
  br label %return, !dbg !10887

if.end:                                           ; preds = %sw.epilog
  %12 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10888
  %13 = load %struct.SpaceImage*, %struct.SpaceImage** %sima, align 8, !dbg !10889
  %14 = bitcast %struct.SpaceImage* %13 to i8*, !dbg !10889
  call void @WM_event_add_notifier(%struct.bContext* %12, i32 251920384, i8* %14), !dbg !10890
  store i32 4, i32* %retval, align 4, !dbg !10891
  br label %return, !dbg !10891

return:                                           ; preds = %if.end, %if.then
  %15 = load i32, i32* %retval, align 4, !dbg !10892
  ret i32 %15, !dbg !10892
}

declare dso_local %struct.PropertyRNA* @RNA_def_enum(i8*, i8*, %struct.EnumPropertyItem*, i32, i8*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @uv_snap_cursor_to_pixels(%struct.SpaceImage* %sima) #0 !dbg !10893 {
entry:
  %sima.addr = alloca %struct.SpaceImage*, align 8
  %width = alloca i32, align 4
  %height = alloca i32, align 4
  store %struct.SpaceImage* %sima, %struct.SpaceImage** %sima.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SpaceImage** %sima.addr, metadata !10896, metadata !DIExpression()), !dbg !10897
  call void @llvm.dbg.declare(metadata i32* %width, metadata !10898, metadata !DIExpression()), !dbg !10899
  store i32 0, i32* %width, align 4, !dbg !10899
  call void @llvm.dbg.declare(metadata i32* %height, metadata !10900, metadata !DIExpression()), !dbg !10901
  store i32 0, i32* %height, align 4, !dbg !10901
  %0 = load %struct.SpaceImage*, %struct.SpaceImage** %sima.addr, align 8, !dbg !10902
  call void @ED_space_image_get_size(%struct.SpaceImage* %0, i32* %width, i32* %height), !dbg !10903
  %1 = load %struct.SpaceImage*, %struct.SpaceImage** %sima.addr, align 8, !dbg !10904
  %cursor = getelementptr inbounds %struct.SpaceImage, %struct.SpaceImage* %1, i32 0, i32 11, !dbg !10905
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %cursor, i64 0, i64 0, !dbg !10904
  %2 = load i32, i32* %width, align 4, !dbg !10906
  %conv = sitofp i32 %2 to float, !dbg !10906
  %3 = load i32, i32* %height, align 4, !dbg !10907
  %conv1 = sitofp i32 %3 to float, !dbg !10907
  call void @uv_snap_to_pixel(float* %arraydecay, float %conv, float %conv1), !dbg !10908
  ret void, !dbg !10909
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @uv_snap_cursor_to_selection(%struct.Scene* %scene, %struct.Image* %ima, %struct.Object* %obedit, %struct.SpaceImage* %sima) #0 !dbg !10910 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %ima.addr = alloca %struct.Image*, align 8
  %obedit.addr = alloca %struct.Object*, align 8
  %sima.addr = alloca %struct.SpaceImage*, align 8
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !10913, metadata !DIExpression()), !dbg !10914
  store %struct.Image* %ima, %struct.Image** %ima.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Image** %ima.addr, metadata !10915, metadata !DIExpression()), !dbg !10916
  store %struct.Object* %obedit, %struct.Object** %obedit.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit.addr, metadata !10917, metadata !DIExpression()), !dbg !10918
  store %struct.SpaceImage* %sima, %struct.SpaceImage** %sima.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SpaceImage** %sima.addr, metadata !10919, metadata !DIExpression()), !dbg !10920
  %0 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !10921
  %1 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !10922
  %2 = load %struct.Object*, %struct.Object** %obedit.addr, align 8, !dbg !10923
  %3 = load %struct.SpaceImage*, %struct.SpaceImage** %sima.addr, align 8, !dbg !10924
  %cursor = getelementptr inbounds %struct.SpaceImage, %struct.SpaceImage* %3, i32 0, i32 11, !dbg !10925
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %cursor, i64 0, i64 0, !dbg !10924
  %4 = load %struct.SpaceImage*, %struct.SpaceImage** %sima.addr, align 8, !dbg !10926
  %around = getelementptr inbounds %struct.SpaceImage, %struct.SpaceImage* %4, i32 0, i32 25, !dbg !10927
  %5 = load i8, i8* %around, align 1, !dbg !10927
  %call = call zeroext i8 @uvedit_center(%struct.Scene* %0, %struct.Image* %1, %struct.Object* %2, float* %arraydecay, i8 zeroext %5), !dbg !10928
  ret i8 %call, !dbg !10929
}

; Function Attrs: noinline nounwind uwtable
define internal void @uv_snap_to_pixel(float* %uvco, float %w, float %h) #0 !dbg !10930 {
entry:
  %uvco.addr = alloca float*, align 8
  %w.addr = alloca float, align 4
  %h.addr = alloca float, align 4
  store float* %uvco, float** %uvco.addr, align 8
  call void @llvm.dbg.declare(metadata float** %uvco.addr, metadata !10933, metadata !DIExpression()), !dbg !10934
  store float %w, float* %w.addr, align 4
  call void @llvm.dbg.declare(metadata float* %w.addr, metadata !10935, metadata !DIExpression()), !dbg !10936
  store float %h, float* %h.addr, align 4
  call void @llvm.dbg.declare(metadata float* %h.addr, metadata !10937, metadata !DIExpression()), !dbg !10938
  %0 = load float*, float** %uvco.addr, align 8, !dbg !10939
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !10939
  %1 = load float, float* %arrayidx, align 4, !dbg !10939
  %2 = load float, float* %w.addr, align 4, !dbg !10940
  %mul = fmul float %1, %2, !dbg !10941
  %add = fadd float %mul, 5.000000e-01, !dbg !10942
  %conv = fptosi float %add to i32, !dbg !10943
  %conv1 = sitofp i32 %conv to float, !dbg !10944
  %3 = load float, float* %w.addr, align 4, !dbg !10945
  %div = fdiv float %conv1, %3, !dbg !10946
  %4 = load float*, float** %uvco.addr, align 8, !dbg !10947
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 0, !dbg !10947
  store float %div, float* %arrayidx2, align 4, !dbg !10948
  %5 = load float*, float** %uvco.addr, align 8, !dbg !10949
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !10949
  %6 = load float, float* %arrayidx3, align 4, !dbg !10949
  %7 = load float, float* %h.addr, align 4, !dbg !10950
  %mul4 = fmul float %6, %7, !dbg !10951
  %add5 = fadd float %mul4, 5.000000e-01, !dbg !10952
  %conv6 = fptosi float %add5 to i32, !dbg !10953
  %conv7 = sitofp i32 %conv6 to float, !dbg !10954
  %8 = load float, float* %h.addr, align 4, !dbg !10955
  %div8 = fdiv float %conv7, %8, !dbg !10956
  %9 = load float*, float** %uvco.addr, align 8, !dbg !10957
  %arrayidx9 = getelementptr inbounds float, float* %9, i64 1, !dbg !10957
  store float %div8, float* %arrayidx9, align 4, !dbg !10958
  ret void, !dbg !10959
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @uvedit_center(%struct.Scene* %scene, %struct.Image* %ima, %struct.Object* %obedit, float* %cent, i8 zeroext %mode) #0 !dbg !10960 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %ima.addr = alloca %struct.Image*, align 8
  %obedit.addr = alloca %struct.Object*, align 8
  %cent.addr = alloca float*, align 8
  %mode.addr = alloca i8, align 1
  %changed = alloca i8, align 1
  %min = alloca [2 x float], align 4
  %max = alloca [2 x float], align 4
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !10963, metadata !DIExpression()), !dbg !10964
  store %struct.Image* %ima, %struct.Image** %ima.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Image** %ima.addr, metadata !10965, metadata !DIExpression()), !dbg !10966
  store %struct.Object* %obedit, %struct.Object** %obedit.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit.addr, metadata !10967, metadata !DIExpression()), !dbg !10968
  store float* %cent, float** %cent.addr, align 8
  call void @llvm.dbg.declare(metadata float** %cent.addr, metadata !10969, metadata !DIExpression()), !dbg !10970
  store i8 %mode, i8* %mode.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %mode.addr, metadata !10971, metadata !DIExpression()), !dbg !10972
  call void @llvm.dbg.declare(metadata i8* %changed, metadata !10973, metadata !DIExpression()), !dbg !10974
  store i8 0, i8* %changed, align 1, !dbg !10974
  %0 = load i8, i8* %mode.addr, align 1, !dbg !10975
  %conv = zext i8 %0 to i32, !dbg !10975
  %cmp = icmp eq i32 %conv, 0, !dbg !10977
  br i1 %cmp, label %if.then, label %if.else, !dbg !10978

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata [2 x float]* %min, metadata !10979, metadata !DIExpression()), !dbg !10981
  call void @llvm.dbg.declare(metadata [2 x float]* %max, metadata !10982, metadata !DIExpression()), !dbg !10983
  %1 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !10984
  %2 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !10986
  %3 = load %struct.Object*, %struct.Object** %obedit.addr, align 8, !dbg !10987
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %min, i64 0, i64 0, !dbg !10988
  %arraydecay2 = getelementptr inbounds [2 x float], [2 x float]* %max, i64 0, i64 0, !dbg !10989
  %call = call zeroext i8 @ED_uvedit_minmax(%struct.Scene* %1, %struct.Image* %2, %struct.Object* %3, float* %arraydecay, float* %arraydecay2), !dbg !10990
  %tobool = icmp ne i8 %call, 0, !dbg !10990
  br i1 %tobool, label %if.then3, label %if.end, !dbg !10991

if.then3:                                         ; preds = %if.then
  %4 = load float*, float** %cent.addr, align 8, !dbg !10992
  %arraydecay4 = getelementptr inbounds [2 x float], [2 x float]* %min, i64 0, i64 0, !dbg !10994
  %arraydecay5 = getelementptr inbounds [2 x float], [2 x float]* %max, i64 0, i64 0, !dbg !10995
  call void @mid_v2_v2v2(float* %4, float* %arraydecay4, float* %arraydecay5), !dbg !10996
  store i8 1, i8* %changed, align 1, !dbg !10997
  br label %if.end, !dbg !10998

if.end:                                           ; preds = %if.then3, %if.then
  br label %if.end10, !dbg !10999

if.else:                                          ; preds = %entry
  %5 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !11000
  %6 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !11003
  %7 = load %struct.Object*, %struct.Object** %obedit.addr, align 8, !dbg !11004
  %8 = load float*, float** %cent.addr, align 8, !dbg !11005
  %call6 = call zeroext i8 @ED_uvedit_median(%struct.Scene* %5, %struct.Image* %6, %struct.Object* %7, float* %8), !dbg !11006
  %tobool7 = icmp ne i8 %call6, 0, !dbg !11006
  br i1 %tobool7, label %if.then8, label %if.end9, !dbg !11007

if.then8:                                         ; preds = %if.else
  store i8 1, i8* %changed, align 1, !dbg !11008
  br label %if.end9, !dbg !11010

if.end9:                                          ; preds = %if.then8, %if.else
  br label %if.end10

if.end10:                                         ; preds = %if.end9, %if.end
  %9 = load i8, i8* %changed, align 1, !dbg !11011
  ret i8 %9, !dbg !11012
}

declare dso_local void @mid_v2_v2v2(float*, float*, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @ED_uvedit_median(%struct.Scene* %scene, %struct.Image* %ima, %struct.Object* %obedit, float* %co) #0 !dbg !11013 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %ima.addr = alloca %struct.Image*, align 8
  %obedit.addr = alloca %struct.Object*, align 8
  %co.addr = alloca float*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  %efa = alloca %struct.BMFace*, align 8
  %l = alloca %struct.BMLoop*, align 8
  %iter = alloca %struct.BMIter, align 8
  %liter = alloca %struct.BMIter, align 8
  %tf = alloca %struct.MTexPoly*, align 8
  %luv = alloca %struct.MLoopUV*, align 8
  %sel = alloca i32, align 4
  %cd_loop_uv_offset = alloca i32, align 4
  %cd_poly_tex_offset = alloca i32, align 4
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !11016, metadata !DIExpression()), !dbg !11017
  store %struct.Image* %ima, %struct.Image** %ima.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Image** %ima.addr, metadata !11018, metadata !DIExpression()), !dbg !11019
  store %struct.Object* %obedit, %struct.Object** %obedit.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit.addr, metadata !11020, metadata !DIExpression()), !dbg !11021
  store float* %co, float** %co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %co.addr, metadata !11022, metadata !DIExpression()), !dbg !11023
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !11024, metadata !DIExpression()), !dbg !11025
  %0 = load %struct.Object*, %struct.Object** %obedit.addr, align 8, !dbg !11026
  %call = call %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object* %0), !dbg !11027
  store %struct.BMEditMesh* %call, %struct.BMEditMesh** %em, align 8, !dbg !11025
  call void @llvm.dbg.declare(metadata %struct.BMFace** %efa, metadata !11028, metadata !DIExpression()), !dbg !11029
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l, metadata !11030, metadata !DIExpression()), !dbg !11031
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iter, metadata !11032, metadata !DIExpression()), !dbg !11033
  call void @llvm.dbg.declare(metadata %struct.BMIter* %liter, metadata !11034, metadata !DIExpression()), !dbg !11035
  call void @llvm.dbg.declare(metadata %struct.MTexPoly** %tf, metadata !11036, metadata !DIExpression()), !dbg !11037
  call void @llvm.dbg.declare(metadata %struct.MLoopUV** %luv, metadata !11038, metadata !DIExpression()), !dbg !11039
  call void @llvm.dbg.declare(metadata i32* %sel, metadata !11040, metadata !DIExpression()), !dbg !11041
  store i32 0, i32* %sel, align 4, !dbg !11041
  call void @llvm.dbg.declare(metadata i32* %cd_loop_uv_offset, metadata !11042, metadata !DIExpression()), !dbg !11043
  %1 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !11044
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %1, i32 0, i32 0, !dbg !11045
  %2 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !11045
  %ldata = getelementptr inbounds %struct.BMesh, %struct.BMesh* %2, i32 0, i32 26, !dbg !11046
  %call1 = call i32 @CustomData_get_offset(%struct.CustomData* %ldata, i32 16), !dbg !11047
  store i32 %call1, i32* %cd_loop_uv_offset, align 4, !dbg !11043
  call void @llvm.dbg.declare(metadata i32* %cd_poly_tex_offset, metadata !11048, metadata !DIExpression()), !dbg !11049
  %3 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !11050
  %bm2 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %3, i32 0, i32 0, !dbg !11051
  %4 = load %struct.BMesh*, %struct.BMesh** %bm2, align 8, !dbg !11051
  %pdata = getelementptr inbounds %struct.BMesh, %struct.BMesh* %4, i32 0, i32 27, !dbg !11052
  %call3 = call i32 @CustomData_get_offset(%struct.CustomData* %pdata, i32 15), !dbg !11053
  store i32 %call3, i32* %cd_poly_tex_offset, align 4, !dbg !11049
  %5 = load float*, float** %co.addr, align 8, !dbg !11054
  call void @zero_v2(float* %5), !dbg !11055
  %6 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !11056
  %bm4 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %6, i32 0, i32 0, !dbg !11056
  %7 = load %struct.BMesh*, %struct.BMesh** %bm4, align 8, !dbg !11056
  %call5 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %7, i8 zeroext 3, i8* null), !dbg !11056
  %8 = bitcast i8* %call5 to %struct.BMFace*, !dbg !11056
  store %struct.BMFace* %8, %struct.BMFace** %efa, align 8, !dbg !11056
  br label %for.cond, !dbg !11056

for.cond:                                         ; preds = %for.inc21, %entry
  %9 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !11058
  %tobool = icmp ne %struct.BMFace* %9, null, !dbg !11056
  br i1 %tobool, label %for.body, label %for.end23, !dbg !11056

for.body:                                         ; preds = %for.cond
  %10 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !11060
  %head = getelementptr inbounds %struct.BMFace, %struct.BMFace* %10, i32 0, i32 0, !dbg !11060
  %data = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head, i32 0, i32 0, !dbg !11060
  %11 = load i8*, i8** %data, align 8, !dbg !11060
  %12 = load i32, i32* %cd_poly_tex_offset, align 4, !dbg !11060
  %idx.ext = sext i32 %12 to i64, !dbg !11060
  %add.ptr = getelementptr inbounds i8, i8* %11, i64 %idx.ext, !dbg !11060
  %13 = bitcast i8* %add.ptr to %struct.MTexPoly*, !dbg !11060
  store %struct.MTexPoly* %13, %struct.MTexPoly** %tf, align 8, !dbg !11062
  %14 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !11063
  %15 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !11065
  %16 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !11066
  %17 = load %struct.MTexPoly*, %struct.MTexPoly** %tf, align 8, !dbg !11067
  %call6 = call zeroext i8 @uvedit_face_visible_test(%struct.Scene* %14, %struct.Image* %15, %struct.BMFace* %16, %struct.MTexPoly* %17), !dbg !11068
  %tobool7 = icmp ne i8 %call6, 0, !dbg !11068
  br i1 %tobool7, label %if.end, label %if.then, !dbg !11069

if.then:                                          ; preds = %for.body
  br label %for.inc21, !dbg !11070

if.end:                                           ; preds = %for.body
  %18 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !11071
  %19 = bitcast %struct.BMFace* %18 to i8*, !dbg !11071
  %call8 = call i8* @BM_iter_new(%struct.BMIter* %liter, %struct.BMesh* null, i8 zeroext 11, i8* %19), !dbg !11071
  %20 = bitcast i8* %call8 to %struct.BMLoop*, !dbg !11071
  store %struct.BMLoop* %20, %struct.BMLoop** %l, align 8, !dbg !11071
  br label %for.cond9, !dbg !11071

for.cond9:                                        ; preds = %for.inc, %if.end
  %21 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !11073
  %tobool10 = icmp ne %struct.BMLoop* %21, null, !dbg !11071
  br i1 %tobool10, label %for.body11, label %for.end, !dbg !11071

for.body11:                                       ; preds = %for.cond9
  %22 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !11075
  %head12 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %22, i32 0, i32 0, !dbg !11075
  %data13 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head12, i32 0, i32 0, !dbg !11075
  %23 = load i8*, i8** %data13, align 8, !dbg !11075
  %24 = load i32, i32* %cd_loop_uv_offset, align 4, !dbg !11075
  %idx.ext14 = sext i32 %24 to i64, !dbg !11075
  %add.ptr15 = getelementptr inbounds i8, i8* %23, i64 %idx.ext14, !dbg !11075
  %25 = bitcast i8* %add.ptr15 to %struct.MLoopUV*, !dbg !11075
  store %struct.MLoopUV* %25, %struct.MLoopUV** %luv, align 8, !dbg !11077
  %26 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !11078
  %27 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !11080
  %28 = load i32, i32* %cd_loop_uv_offset, align 4, !dbg !11081
  %call16 = call zeroext i8 @uvedit_uv_select_test(%struct.Scene* %26, %struct.BMLoop* %27, i32 %28), !dbg !11082
  %tobool17 = icmp ne i8 %call16, 0, !dbg !11082
  br i1 %tobool17, label %if.then18, label %if.end19, !dbg !11083

if.then18:                                        ; preds = %for.body11
  %29 = load float*, float** %co.addr, align 8, !dbg !11084
  %30 = load %struct.MLoopUV*, %struct.MLoopUV** %luv, align 8, !dbg !11086
  %uv = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %30, i32 0, i32 0, !dbg !11087
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %uv, i64 0, i64 0, !dbg !11086
  call void @add_v2_v2(float* %29, float* %arraydecay), !dbg !11088
  %31 = load i32, i32* %sel, align 4, !dbg !11089
  %inc = add i32 %31, 1, !dbg !11089
  store i32 %inc, i32* %sel, align 4, !dbg !11089
  br label %if.end19, !dbg !11090

if.end19:                                         ; preds = %if.then18, %for.body11
  br label %for.inc, !dbg !11091

for.inc:                                          ; preds = %if.end19
  %call20 = call i8* @BM_iter_step(%struct.BMIter* %liter), !dbg !11073
  %32 = bitcast i8* %call20 to %struct.BMLoop*, !dbg !11073
  store %struct.BMLoop* %32, %struct.BMLoop** %l, align 8, !dbg !11073
  br label %for.cond9, !dbg !11073, !llvm.loop !11092

for.end:                                          ; preds = %for.cond9
  br label %for.inc21, !dbg !11094

for.inc21:                                        ; preds = %for.end, %if.then
  %call22 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !11058
  %33 = bitcast i8* %call22 to %struct.BMFace*, !dbg !11058
  store %struct.BMFace* %33, %struct.BMFace** %efa, align 8, !dbg !11058
  br label %for.cond, !dbg !11058, !llvm.loop !11095

for.end23:                                        ; preds = %for.cond
  %34 = load float*, float** %co.addr, align 8, !dbg !11097
  %35 = load i32, i32* %sel, align 4, !dbg !11098
  %conv = uitofp i32 %35 to float, !dbg !11099
  %div = fdiv float 1.000000e+00, %conv, !dbg !11100
  call void @mul_v2_fl(float* %34, float %div), !dbg !11101
  %36 = load i32, i32* %sel, align 4, !dbg !11102
  %cmp = icmp ne i32 %36, 0, !dbg !11103
  %conv24 = zext i1 %cmp to i32, !dbg !11103
  %conv25 = trunc i32 %conv24 to i8, !dbg !11104
  ret i8 %conv25, !dbg !11105
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @uv_snap_selection_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !11106 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %sima = alloca %struct.SpaceImage*, align 8
  %scene = alloca %struct.Scene*, align 8
  %obedit = alloca %struct.Object*, align 8
  %ima = alloca %struct.Image*, align 8
  %changed = alloca i8, align 1
  %center = alloca [2 x float], align 4
  %offset = alloca [2 x float], align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !11107, metadata !DIExpression()), !dbg !11108
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !11109, metadata !DIExpression()), !dbg !11110
  call void @llvm.dbg.declare(metadata %struct.SpaceImage** %sima, metadata !11111, metadata !DIExpression()), !dbg !11112
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !11113
  %call = call %struct.SpaceImage* @CTX_wm_space_image(%struct.bContext* %0), !dbg !11114
  store %struct.SpaceImage* %call, %struct.SpaceImage** %sima, align 8, !dbg !11112
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene, metadata !11115, metadata !DIExpression()), !dbg !11116
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !11117
  %call1 = call %struct.Scene* @CTX_data_scene(%struct.bContext* %1), !dbg !11118
  store %struct.Scene* %call1, %struct.Scene** %scene, align 8, !dbg !11116
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !11119, metadata !DIExpression()), !dbg !11120
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !11121
  %call2 = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %2), !dbg !11122
  store %struct.Object* %call2, %struct.Object** %obedit, align 8, !dbg !11120
  call void @llvm.dbg.declare(metadata %struct.Image** %ima, metadata !11123, metadata !DIExpression()), !dbg !11124
  %3 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !11125
  %call3 = call %struct.Image* @CTX_data_edit_image(%struct.bContext* %3), !dbg !11126
  store %struct.Image* %call3, %struct.Image** %ima, align 8, !dbg !11124
  call void @llvm.dbg.declare(metadata i8* %changed, metadata !11127, metadata !DIExpression()), !dbg !11128
  store i8 0, i8* %changed, align 1, !dbg !11128
  %4 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !11129
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %4, i32 0, i32 7, !dbg !11130
  %5 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !11130
  %call4 = call i32 @RNA_enum_get(%struct.PointerRNA* %5, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.92, i64 0, i64 0)), !dbg !11131
  switch i32 %call4, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb6
    i32 2, label %sw.bb8
    i32 3, label %sw.bb17
  ], !dbg !11132

sw.bb:                                            ; preds = %entry
  %6 = load %struct.SpaceImage*, %struct.SpaceImage** %sima, align 8, !dbg !11133
  %7 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !11135
  %8 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !11136
  %call5 = call zeroext i8 @uv_snap_uvs_to_pixels(%struct.SpaceImage* %6, %struct.Scene* %7, %struct.Object* %8), !dbg !11137
  store i8 %call5, i8* %changed, align 1, !dbg !11138
  br label %sw.epilog, !dbg !11139

sw.bb6:                                           ; preds = %entry
  %9 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !11140
  %10 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !11141
  %11 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !11142
  %12 = load %struct.SpaceImage*, %struct.SpaceImage** %sima, align 8, !dbg !11143
  %cursor = getelementptr inbounds %struct.SpaceImage, %struct.SpaceImage* %12, i32 0, i32 11, !dbg !11144
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %cursor, i64 0, i64 0, !dbg !11143
  %call7 = call zeroext i8 @uv_snap_uvs_to_cursor(%struct.Scene* %9, %struct.Image* %10, %struct.Object* %11, float* %arraydecay), !dbg !11145
  store i8 %call7, i8* %changed, align 1, !dbg !11146
  br label %sw.epilog, !dbg !11147

sw.bb8:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata [2 x float]* %center, metadata !11148, metadata !DIExpression()), !dbg !11150
  %13 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !11151
  %14 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !11153
  %15 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !11154
  %arraydecay9 = getelementptr inbounds [2 x float], [2 x float]* %center, i64 0, i64 0, !dbg !11155
  %16 = load %struct.SpaceImage*, %struct.SpaceImage** %sima, align 8, !dbg !11156
  %around = getelementptr inbounds %struct.SpaceImage, %struct.SpaceImage* %16, i32 0, i32 25, !dbg !11157
  %17 = load i8, i8* %around, align 1, !dbg !11157
  %call10 = call zeroext i8 @uvedit_center(%struct.Scene* %13, %struct.Image* %14, %struct.Object* %15, float* %arraydecay9, i8 zeroext %17), !dbg !11158
  %tobool = icmp ne i8 %call10, 0, !dbg !11158
  br i1 %tobool, label %if.then, label %if.end, !dbg !11159

if.then:                                          ; preds = %sw.bb8
  call void @llvm.dbg.declare(metadata [2 x float]* %offset, metadata !11160, metadata !DIExpression()), !dbg !11162
  %arraydecay11 = getelementptr inbounds [2 x float], [2 x float]* %offset, i64 0, i64 0, !dbg !11163
  %18 = load %struct.SpaceImage*, %struct.SpaceImage** %sima, align 8, !dbg !11164
  %cursor12 = getelementptr inbounds %struct.SpaceImage, %struct.SpaceImage* %18, i32 0, i32 11, !dbg !11165
  %arraydecay13 = getelementptr inbounds [2 x float], [2 x float]* %cursor12, i64 0, i64 0, !dbg !11164
  %arraydecay14 = getelementptr inbounds [2 x float], [2 x float]* %center, i64 0, i64 0, !dbg !11166
  call void @sub_v2_v2v2(float* %arraydecay11, float* %arraydecay13, float* %arraydecay14), !dbg !11167
  %19 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !11168
  %20 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !11169
  %21 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !11170
  %arraydecay15 = getelementptr inbounds [2 x float], [2 x float]* %offset, i64 0, i64 0, !dbg !11171
  %call16 = call zeroext i8 @uv_snap_uvs_offset(%struct.Scene* %19, %struct.Image* %20, %struct.Object* %21, float* %arraydecay15), !dbg !11172
  store i8 %call16, i8* %changed, align 1, !dbg !11173
  br label %if.end, !dbg !11174

if.end:                                           ; preds = %if.then, %sw.bb8
  br label %sw.epilog, !dbg !11175

sw.bb17:                                          ; preds = %entry
  %22 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !11176
  %23 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !11177
  %24 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !11178
  %call18 = call zeroext i8 @uv_snap_uvs_to_adjacent_unselected(%struct.Scene* %22, %struct.Image* %23, %struct.Object* %24), !dbg !11179
  store i8 %call18, i8* %changed, align 1, !dbg !11180
  br label %sw.epilog, !dbg !11181

sw.epilog:                                        ; preds = %entry, %sw.bb17, %if.end, %sw.bb6, %sw.bb
  %25 = load i8, i8* %changed, align 1, !dbg !11182
  %tobool19 = icmp ne i8 %25, 0, !dbg !11182
  br i1 %tobool19, label %if.end21, label %if.then20, !dbg !11184

if.then20:                                        ; preds = %sw.epilog
  store i32 2, i32* %retval, align 4, !dbg !11185
  br label %return, !dbg !11185

if.end21:                                         ; preds = %sw.epilog
  %26 = load %struct.SpaceImage*, %struct.SpaceImage** %sima, align 8, !dbg !11186
  %27 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !11187
  %28 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !11188
  call void @uvedit_live_unwrap_update(%struct.SpaceImage* %26, %struct.Scene* %27, %struct.Object* %28), !dbg !11189
  %29 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !11190
  %data = getelementptr inbounds %struct.Object, %struct.Object* %29, i32 0, i32 19, !dbg !11191
  %30 = load i8*, i8** %data, align 8, !dbg !11191
  %31 = bitcast i8* %30 to %struct.ID*, !dbg !11190
  call void @DAG_id_tag_update(%struct.ID* %31, i16 signext 0), !dbg !11192
  %32 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !11193
  %33 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !11194
  %data22 = getelementptr inbounds %struct.Object, %struct.Object* %33, i32 0, i32 19, !dbg !11195
  %34 = load i8*, i8** %data22, align 8, !dbg !11195
  call void @WM_event_add_notifier(%struct.bContext* %32, i32 274399232, i8* %34), !dbg !11196
  store i32 4, i32* %retval, align 4, !dbg !11197
  br label %return, !dbg !11197

return:                                           ; preds = %if.end21, %if.then20
  %35 = load i32, i32* %retval, align 4, !dbg !11198
  ret i32 %35, !dbg !11198
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @uv_snap_uvs_to_pixels(%struct.SpaceImage* %sima, %struct.Scene* %scene, %struct.Object* %obedit) #0 !dbg !11199 {
entry:
  %sima.addr = alloca %struct.SpaceImage*, align 8
  %scene.addr = alloca %struct.Scene*, align 8
  %obedit.addr = alloca %struct.Object*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  %ima = alloca %struct.Image*, align 8
  %efa = alloca %struct.BMFace*, align 8
  %l = alloca %struct.BMLoop*, align 8
  %iter = alloca %struct.BMIter, align 8
  %liter = alloca %struct.BMIter, align 8
  %tface = alloca %struct.MTexPoly*, align 8
  %luv = alloca %struct.MLoopUV*, align 8
  %width = alloca i32, align 4
  %height = alloca i32, align 4
  %w = alloca float, align 4
  %h = alloca float, align 4
  %changed = alloca i8, align 1
  %cd_loop_uv_offset = alloca i32, align 4
  %cd_poly_tex_offset = alloca i32, align 4
  store %struct.SpaceImage* %sima, %struct.SpaceImage** %sima.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SpaceImage** %sima.addr, metadata !11202, metadata !DIExpression()), !dbg !11203
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !11204, metadata !DIExpression()), !dbg !11205
  store %struct.Object* %obedit, %struct.Object** %obedit.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit.addr, metadata !11206, metadata !DIExpression()), !dbg !11207
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !11208, metadata !DIExpression()), !dbg !11209
  %0 = load %struct.Object*, %struct.Object** %obedit.addr, align 8, !dbg !11210
  %call = call %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object* %0), !dbg !11211
  store %struct.BMEditMesh* %call, %struct.BMEditMesh** %em, align 8, !dbg !11209
  call void @llvm.dbg.declare(metadata %struct.Image** %ima, metadata !11212, metadata !DIExpression()), !dbg !11213
  %1 = load %struct.SpaceImage*, %struct.SpaceImage** %sima.addr, align 8, !dbg !11214
  %image = getelementptr inbounds %struct.SpaceImage, %struct.SpaceImage* %1, i32 0, i32 5, !dbg !11215
  %2 = load %struct.Image*, %struct.Image** %image, align 8, !dbg !11215
  store %struct.Image* %2, %struct.Image** %ima, align 8, !dbg !11213
  call void @llvm.dbg.declare(metadata %struct.BMFace** %efa, metadata !11216, metadata !DIExpression()), !dbg !11217
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l, metadata !11218, metadata !DIExpression()), !dbg !11219
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iter, metadata !11220, metadata !DIExpression()), !dbg !11221
  call void @llvm.dbg.declare(metadata %struct.BMIter* %liter, metadata !11222, metadata !DIExpression()), !dbg !11223
  call void @llvm.dbg.declare(metadata %struct.MTexPoly** %tface, metadata !11224, metadata !DIExpression()), !dbg !11225
  call void @llvm.dbg.declare(metadata %struct.MLoopUV** %luv, metadata !11226, metadata !DIExpression()), !dbg !11227
  call void @llvm.dbg.declare(metadata i32* %width, metadata !11228, metadata !DIExpression()), !dbg !11229
  store i32 0, i32* %width, align 4, !dbg !11229
  call void @llvm.dbg.declare(metadata i32* %height, metadata !11230, metadata !DIExpression()), !dbg !11231
  store i32 0, i32* %height, align 4, !dbg !11231
  call void @llvm.dbg.declare(metadata float* %w, metadata !11232, metadata !DIExpression()), !dbg !11233
  call void @llvm.dbg.declare(metadata float* %h, metadata !11234, metadata !DIExpression()), !dbg !11235
  call void @llvm.dbg.declare(metadata i8* %changed, metadata !11236, metadata !DIExpression()), !dbg !11237
  store i8 0, i8* %changed, align 1, !dbg !11237
  call void @llvm.dbg.declare(metadata i32* %cd_loop_uv_offset, metadata !11238, metadata !DIExpression()), !dbg !11239
  %3 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !11240
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %3, i32 0, i32 0, !dbg !11241
  %4 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !11241
  %ldata = getelementptr inbounds %struct.BMesh, %struct.BMesh* %4, i32 0, i32 26, !dbg !11242
  %call1 = call i32 @CustomData_get_offset(%struct.CustomData* %ldata, i32 16), !dbg !11243
  store i32 %call1, i32* %cd_loop_uv_offset, align 4, !dbg !11239
  call void @llvm.dbg.declare(metadata i32* %cd_poly_tex_offset, metadata !11244, metadata !DIExpression()), !dbg !11245
  %5 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !11246
  %bm2 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %5, i32 0, i32 0, !dbg !11247
  %6 = load %struct.BMesh*, %struct.BMesh** %bm2, align 8, !dbg !11247
  %pdata = getelementptr inbounds %struct.BMesh, %struct.BMesh* %6, i32 0, i32 27, !dbg !11248
  %call3 = call i32 @CustomData_get_offset(%struct.CustomData* %pdata, i32 15), !dbg !11249
  store i32 %call3, i32* %cd_poly_tex_offset, align 4, !dbg !11245
  %7 = load %struct.SpaceImage*, %struct.SpaceImage** %sima.addr, align 8, !dbg !11250
  call void @ED_space_image_get_size(%struct.SpaceImage* %7, i32* %width, i32* %height), !dbg !11251
  %8 = load i32, i32* %width, align 4, !dbg !11252
  %conv = sitofp i32 %8 to float, !dbg !11253
  store float %conv, float* %w, align 4, !dbg !11254
  %9 = load i32, i32* %height, align 4, !dbg !11255
  %conv4 = sitofp i32 %9 to float, !dbg !11256
  store float %conv4, float* %h, align 4, !dbg !11257
  %10 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !11258
  %bm5 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %10, i32 0, i32 0, !dbg !11258
  %11 = load %struct.BMesh*, %struct.BMesh** %bm5, align 8, !dbg !11258
  %call6 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %11, i8 zeroext 3, i8* null), !dbg !11258
  %12 = bitcast i8* %call6 to %struct.BMFace*, !dbg !11258
  store %struct.BMFace* %12, %struct.BMFace** %efa, align 8, !dbg !11258
  br label %for.cond, !dbg !11258

for.cond:                                         ; preds = %for.inc22, %entry
  %13 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !11260
  %tobool = icmp ne %struct.BMFace* %13, null, !dbg !11258
  br i1 %tobool, label %for.body, label %for.end24, !dbg !11258

for.body:                                         ; preds = %for.cond
  %14 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !11262
  %head = getelementptr inbounds %struct.BMFace, %struct.BMFace* %14, i32 0, i32 0, !dbg !11262
  %data = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head, i32 0, i32 0, !dbg !11262
  %15 = load i8*, i8** %data, align 8, !dbg !11262
  %16 = load i32, i32* %cd_poly_tex_offset, align 4, !dbg !11262
  %idx.ext = sext i32 %16 to i64, !dbg !11262
  %add.ptr = getelementptr inbounds i8, i8* %15, i64 %idx.ext, !dbg !11262
  %17 = bitcast i8* %add.ptr to %struct.MTexPoly*, !dbg !11262
  store %struct.MTexPoly* %17, %struct.MTexPoly** %tface, align 8, !dbg !11264
  %18 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !11265
  %19 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !11267
  %20 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !11268
  %21 = load %struct.MTexPoly*, %struct.MTexPoly** %tface, align 8, !dbg !11269
  %call7 = call zeroext i8 @uvedit_face_visible_test(%struct.Scene* %18, %struct.Image* %19, %struct.BMFace* %20, %struct.MTexPoly* %21), !dbg !11270
  %tobool8 = icmp ne i8 %call7, 0, !dbg !11270
  br i1 %tobool8, label %if.end, label %if.then, !dbg !11271

if.then:                                          ; preds = %for.body
  br label %for.inc22, !dbg !11272

if.end:                                           ; preds = %for.body
  %22 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !11273
  %23 = bitcast %struct.BMFace* %22 to i8*, !dbg !11273
  %call9 = call i8* @BM_iter_new(%struct.BMIter* %liter, %struct.BMesh* null, i8 zeroext 11, i8* %23), !dbg !11273
  %24 = bitcast i8* %call9 to %struct.BMLoop*, !dbg !11273
  store %struct.BMLoop* %24, %struct.BMLoop** %l, align 8, !dbg !11273
  br label %for.cond10, !dbg !11273

for.cond10:                                       ; preds = %for.inc, %if.end
  %25 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !11275
  %tobool11 = icmp ne %struct.BMLoop* %25, null, !dbg !11273
  br i1 %tobool11, label %for.body12, label %for.end, !dbg !11273

for.body12:                                       ; preds = %for.cond10
  %26 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !11277
  %27 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !11280
  %28 = load i32, i32* %cd_loop_uv_offset, align 4, !dbg !11281
  %call13 = call zeroext i8 @uvedit_uv_select_test(%struct.Scene* %26, %struct.BMLoop* %27, i32 %28), !dbg !11282
  %tobool14 = icmp ne i8 %call13, 0, !dbg !11282
  br i1 %tobool14, label %if.then15, label %if.end20, !dbg !11283

if.then15:                                        ; preds = %for.body12
  %29 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !11284
  %head16 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %29, i32 0, i32 0, !dbg !11284
  %data17 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head16, i32 0, i32 0, !dbg !11284
  %30 = load i8*, i8** %data17, align 8, !dbg !11284
  %31 = load i32, i32* %cd_loop_uv_offset, align 4, !dbg !11284
  %idx.ext18 = sext i32 %31 to i64, !dbg !11284
  %add.ptr19 = getelementptr inbounds i8, i8* %30, i64 %idx.ext18, !dbg !11284
  %32 = bitcast i8* %add.ptr19 to %struct.MLoopUV*, !dbg !11284
  store %struct.MLoopUV* %32, %struct.MLoopUV** %luv, align 8, !dbg !11286
  %33 = load %struct.MLoopUV*, %struct.MLoopUV** %luv, align 8, !dbg !11287
  %uv = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %33, i32 0, i32 0, !dbg !11288
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %uv, i64 0, i64 0, !dbg !11287
  %34 = load float, float* %w, align 4, !dbg !11289
  %35 = load float, float* %h, align 4, !dbg !11290
  call void @uv_snap_to_pixel(float* %arraydecay, float %34, float %35), !dbg !11291
  br label %if.end20, !dbg !11292

if.end20:                                         ; preds = %if.then15, %for.body12
  br label %for.inc, !dbg !11293

for.inc:                                          ; preds = %if.end20
  %call21 = call i8* @BM_iter_step(%struct.BMIter* %liter), !dbg !11275
  %36 = bitcast i8* %call21 to %struct.BMLoop*, !dbg !11275
  store %struct.BMLoop* %36, %struct.BMLoop** %l, align 8, !dbg !11275
  br label %for.cond10, !dbg !11275, !llvm.loop !11294

for.end:                                          ; preds = %for.cond10
  store i8 1, i8* %changed, align 1, !dbg !11296
  br label %for.inc22, !dbg !11297

for.inc22:                                        ; preds = %for.end, %if.then
  %call23 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !11260
  %37 = bitcast i8* %call23 to %struct.BMFace*, !dbg !11260
  store %struct.BMFace* %37, %struct.BMFace** %efa, align 8, !dbg !11260
  br label %for.cond, !dbg !11260, !llvm.loop !11298

for.end24:                                        ; preds = %for.cond
  %38 = load i8, i8* %changed, align 1, !dbg !11300
  ret i8 %38, !dbg !11301
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @uv_snap_uvs_to_cursor(%struct.Scene* %scene, %struct.Image* %ima, %struct.Object* %obedit, float* %cursor) #0 !dbg !11302 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %ima.addr = alloca %struct.Image*, align 8
  %obedit.addr = alloca %struct.Object*, align 8
  %cursor.addr = alloca float*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  %efa = alloca %struct.BMFace*, align 8
  %l = alloca %struct.BMLoop*, align 8
  %iter = alloca %struct.BMIter, align 8
  %liter = alloca %struct.BMIter, align 8
  %tface = alloca %struct.MTexPoly*, align 8
  %luv = alloca %struct.MLoopUV*, align 8
  %changed = alloca i8, align 1
  %cd_loop_uv_offset = alloca i32, align 4
  %cd_poly_tex_offset = alloca i32, align 4
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !11305, metadata !DIExpression()), !dbg !11306
  store %struct.Image* %ima, %struct.Image** %ima.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Image** %ima.addr, metadata !11307, metadata !DIExpression()), !dbg !11308
  store %struct.Object* %obedit, %struct.Object** %obedit.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit.addr, metadata !11309, metadata !DIExpression()), !dbg !11310
  store float* %cursor, float** %cursor.addr, align 8
  call void @llvm.dbg.declare(metadata float** %cursor.addr, metadata !11311, metadata !DIExpression()), !dbg !11312
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !11313, metadata !DIExpression()), !dbg !11314
  %0 = load %struct.Object*, %struct.Object** %obedit.addr, align 8, !dbg !11315
  %call = call %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object* %0), !dbg !11316
  store %struct.BMEditMesh* %call, %struct.BMEditMesh** %em, align 8, !dbg !11314
  call void @llvm.dbg.declare(metadata %struct.BMFace** %efa, metadata !11317, metadata !DIExpression()), !dbg !11318
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l, metadata !11319, metadata !DIExpression()), !dbg !11320
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iter, metadata !11321, metadata !DIExpression()), !dbg !11322
  call void @llvm.dbg.declare(metadata %struct.BMIter* %liter, metadata !11323, metadata !DIExpression()), !dbg !11324
  call void @llvm.dbg.declare(metadata %struct.MTexPoly** %tface, metadata !11325, metadata !DIExpression()), !dbg !11326
  call void @llvm.dbg.declare(metadata %struct.MLoopUV** %luv, metadata !11327, metadata !DIExpression()), !dbg !11328
  call void @llvm.dbg.declare(metadata i8* %changed, metadata !11329, metadata !DIExpression()), !dbg !11330
  store i8 0, i8* %changed, align 1, !dbg !11330
  call void @llvm.dbg.declare(metadata i32* %cd_loop_uv_offset, metadata !11331, metadata !DIExpression()), !dbg !11332
  %1 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !11333
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %1, i32 0, i32 0, !dbg !11334
  %2 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !11334
  %ldata = getelementptr inbounds %struct.BMesh, %struct.BMesh* %2, i32 0, i32 26, !dbg !11335
  %call1 = call i32 @CustomData_get_offset(%struct.CustomData* %ldata, i32 16), !dbg !11336
  store i32 %call1, i32* %cd_loop_uv_offset, align 4, !dbg !11332
  call void @llvm.dbg.declare(metadata i32* %cd_poly_tex_offset, metadata !11337, metadata !DIExpression()), !dbg !11338
  %3 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !11339
  %bm2 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %3, i32 0, i32 0, !dbg !11340
  %4 = load %struct.BMesh*, %struct.BMesh** %bm2, align 8, !dbg !11340
  %pdata = getelementptr inbounds %struct.BMesh, %struct.BMesh* %4, i32 0, i32 27, !dbg !11341
  %call3 = call i32 @CustomData_get_offset(%struct.CustomData* %pdata, i32 15), !dbg !11342
  store i32 %call3, i32* %cd_poly_tex_offset, align 4, !dbg !11338
  %5 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !11343
  %bm4 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %5, i32 0, i32 0, !dbg !11343
  %6 = load %struct.BMesh*, %struct.BMesh** %bm4, align 8, !dbg !11343
  %call5 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %6, i8 zeroext 3, i8* null), !dbg !11343
  %7 = bitcast i8* %call5 to %struct.BMFace*, !dbg !11343
  store %struct.BMFace* %7, %struct.BMFace** %efa, align 8, !dbg !11343
  br label %for.cond, !dbg !11343

for.cond:                                         ; preds = %for.inc21, %entry
  %8 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !11345
  %tobool = icmp ne %struct.BMFace* %8, null, !dbg !11343
  br i1 %tobool, label %for.body, label %for.end23, !dbg !11343

for.body:                                         ; preds = %for.cond
  %9 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !11347
  %head = getelementptr inbounds %struct.BMFace, %struct.BMFace* %9, i32 0, i32 0, !dbg !11347
  %data = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head, i32 0, i32 0, !dbg !11347
  %10 = load i8*, i8** %data, align 8, !dbg !11347
  %11 = load i32, i32* %cd_poly_tex_offset, align 4, !dbg !11347
  %idx.ext = sext i32 %11 to i64, !dbg !11347
  %add.ptr = getelementptr inbounds i8, i8* %10, i64 %idx.ext, !dbg !11347
  %12 = bitcast i8* %add.ptr to %struct.MTexPoly*, !dbg !11347
  store %struct.MTexPoly* %12, %struct.MTexPoly** %tface, align 8, !dbg !11349
  %13 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !11350
  %14 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !11352
  %15 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !11353
  %16 = load %struct.MTexPoly*, %struct.MTexPoly** %tface, align 8, !dbg !11354
  %call6 = call zeroext i8 @uvedit_face_visible_test(%struct.Scene* %13, %struct.Image* %14, %struct.BMFace* %15, %struct.MTexPoly* %16), !dbg !11355
  %tobool7 = icmp ne i8 %call6, 0, !dbg !11355
  br i1 %tobool7, label %if.end, label %if.then, !dbg !11356

if.then:                                          ; preds = %for.body
  br label %for.inc21, !dbg !11357

if.end:                                           ; preds = %for.body
  %17 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !11358
  %18 = bitcast %struct.BMFace* %17 to i8*, !dbg !11358
  %call8 = call i8* @BM_iter_new(%struct.BMIter* %liter, %struct.BMesh* null, i8 zeroext 11, i8* %18), !dbg !11358
  %19 = bitcast i8* %call8 to %struct.BMLoop*, !dbg !11358
  store %struct.BMLoop* %19, %struct.BMLoop** %l, align 8, !dbg !11358
  br label %for.cond9, !dbg !11358

for.cond9:                                        ; preds = %for.inc, %if.end
  %20 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !11360
  %tobool10 = icmp ne %struct.BMLoop* %20, null, !dbg !11358
  br i1 %tobool10, label %for.body11, label %for.end, !dbg !11358

for.body11:                                       ; preds = %for.cond9
  %21 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !11362
  %22 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !11365
  %23 = load i32, i32* %cd_loop_uv_offset, align 4, !dbg !11366
  %call12 = call zeroext i8 @uvedit_uv_select_test(%struct.Scene* %21, %struct.BMLoop* %22, i32 %23), !dbg !11367
  %tobool13 = icmp ne i8 %call12, 0, !dbg !11367
  br i1 %tobool13, label %if.then14, label %if.end19, !dbg !11368

if.then14:                                        ; preds = %for.body11
  %24 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !11369
  %head15 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %24, i32 0, i32 0, !dbg !11369
  %data16 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head15, i32 0, i32 0, !dbg !11369
  %25 = load i8*, i8** %data16, align 8, !dbg !11369
  %26 = load i32, i32* %cd_loop_uv_offset, align 4, !dbg !11369
  %idx.ext17 = sext i32 %26 to i64, !dbg !11369
  %add.ptr18 = getelementptr inbounds i8, i8* %25, i64 %idx.ext17, !dbg !11369
  %27 = bitcast i8* %add.ptr18 to %struct.MLoopUV*, !dbg !11369
  store %struct.MLoopUV* %27, %struct.MLoopUV** %luv, align 8, !dbg !11371
  %28 = load %struct.MLoopUV*, %struct.MLoopUV** %luv, align 8, !dbg !11372
  %uv = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %28, i32 0, i32 0, !dbg !11373
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %uv, i64 0, i64 0, !dbg !11372
  %29 = load float*, float** %cursor.addr, align 8, !dbg !11374
  call void @copy_v2_v2(float* %arraydecay, float* %29), !dbg !11375
  store i8 1, i8* %changed, align 1, !dbg !11376
  br label %if.end19, !dbg !11377

if.end19:                                         ; preds = %if.then14, %for.body11
  br label %for.inc, !dbg !11378

for.inc:                                          ; preds = %if.end19
  %call20 = call i8* @BM_iter_step(%struct.BMIter* %liter), !dbg !11360
  %30 = bitcast i8* %call20 to %struct.BMLoop*, !dbg !11360
  store %struct.BMLoop* %30, %struct.BMLoop** %l, align 8, !dbg !11360
  br label %for.cond9, !dbg !11360, !llvm.loop !11379

for.end:                                          ; preds = %for.cond9
  br label %for.inc21, !dbg !11381

for.inc21:                                        ; preds = %for.end, %if.then
  %call22 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !11345
  %31 = bitcast i8* %call22 to %struct.BMFace*, !dbg !11345
  store %struct.BMFace* %31, %struct.BMFace** %efa, align 8, !dbg !11345
  br label %for.cond, !dbg !11345, !llvm.loop !11382

for.end23:                                        ; preds = %for.cond
  %32 = load i8, i8* %changed, align 1, !dbg !11384
  ret i8 %32, !dbg !11385
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @uv_snap_uvs_offset(%struct.Scene* %scene, %struct.Image* %ima, %struct.Object* %obedit, float* %offset) #0 !dbg !11386 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %ima.addr = alloca %struct.Image*, align 8
  %obedit.addr = alloca %struct.Object*, align 8
  %offset.addr = alloca float*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  %efa = alloca %struct.BMFace*, align 8
  %l = alloca %struct.BMLoop*, align 8
  %iter = alloca %struct.BMIter, align 8
  %liter = alloca %struct.BMIter, align 8
  %tface = alloca %struct.MTexPoly*, align 8
  %luv = alloca %struct.MLoopUV*, align 8
  %changed = alloca i8, align 1
  %cd_loop_uv_offset = alloca i32, align 4
  %cd_poly_tex_offset = alloca i32, align 4
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !11387, metadata !DIExpression()), !dbg !11388
  store %struct.Image* %ima, %struct.Image** %ima.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Image** %ima.addr, metadata !11389, metadata !DIExpression()), !dbg !11390
  store %struct.Object* %obedit, %struct.Object** %obedit.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit.addr, metadata !11391, metadata !DIExpression()), !dbg !11392
  store float* %offset, float** %offset.addr, align 8
  call void @llvm.dbg.declare(metadata float** %offset.addr, metadata !11393, metadata !DIExpression()), !dbg !11394
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !11395, metadata !DIExpression()), !dbg !11396
  %0 = load %struct.Object*, %struct.Object** %obedit.addr, align 8, !dbg !11397
  %call = call %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object* %0), !dbg !11398
  store %struct.BMEditMesh* %call, %struct.BMEditMesh** %em, align 8, !dbg !11396
  call void @llvm.dbg.declare(metadata %struct.BMFace** %efa, metadata !11399, metadata !DIExpression()), !dbg !11400
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l, metadata !11401, metadata !DIExpression()), !dbg !11402
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iter, metadata !11403, metadata !DIExpression()), !dbg !11404
  call void @llvm.dbg.declare(metadata %struct.BMIter* %liter, metadata !11405, metadata !DIExpression()), !dbg !11406
  call void @llvm.dbg.declare(metadata %struct.MTexPoly** %tface, metadata !11407, metadata !DIExpression()), !dbg !11408
  call void @llvm.dbg.declare(metadata %struct.MLoopUV** %luv, metadata !11409, metadata !DIExpression()), !dbg !11410
  call void @llvm.dbg.declare(metadata i8* %changed, metadata !11411, metadata !DIExpression()), !dbg !11412
  store i8 0, i8* %changed, align 1, !dbg !11412
  call void @llvm.dbg.declare(metadata i32* %cd_loop_uv_offset, metadata !11413, metadata !DIExpression()), !dbg !11414
  %1 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !11415
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %1, i32 0, i32 0, !dbg !11416
  %2 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !11416
  %ldata = getelementptr inbounds %struct.BMesh, %struct.BMesh* %2, i32 0, i32 26, !dbg !11417
  %call1 = call i32 @CustomData_get_offset(%struct.CustomData* %ldata, i32 16), !dbg !11418
  store i32 %call1, i32* %cd_loop_uv_offset, align 4, !dbg !11414
  call void @llvm.dbg.declare(metadata i32* %cd_poly_tex_offset, metadata !11419, metadata !DIExpression()), !dbg !11420
  %3 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !11421
  %bm2 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %3, i32 0, i32 0, !dbg !11422
  %4 = load %struct.BMesh*, %struct.BMesh** %bm2, align 8, !dbg !11422
  %pdata = getelementptr inbounds %struct.BMesh, %struct.BMesh* %4, i32 0, i32 27, !dbg !11423
  %call3 = call i32 @CustomData_get_offset(%struct.CustomData* %pdata, i32 15), !dbg !11424
  store i32 %call3, i32* %cd_poly_tex_offset, align 4, !dbg !11420
  %5 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !11425
  %bm4 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %5, i32 0, i32 0, !dbg !11425
  %6 = load %struct.BMesh*, %struct.BMesh** %bm4, align 8, !dbg !11425
  %call5 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %6, i8 zeroext 3, i8* null), !dbg !11425
  %7 = bitcast i8* %call5 to %struct.BMFace*, !dbg !11425
  store %struct.BMFace* %7, %struct.BMFace** %efa, align 8, !dbg !11425
  br label %for.cond, !dbg !11425

for.cond:                                         ; preds = %for.inc21, %entry
  %8 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !11427
  %tobool = icmp ne %struct.BMFace* %8, null, !dbg !11425
  br i1 %tobool, label %for.body, label %for.end23, !dbg !11425

for.body:                                         ; preds = %for.cond
  %9 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !11429
  %head = getelementptr inbounds %struct.BMFace, %struct.BMFace* %9, i32 0, i32 0, !dbg !11429
  %data = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head, i32 0, i32 0, !dbg !11429
  %10 = load i8*, i8** %data, align 8, !dbg !11429
  %11 = load i32, i32* %cd_poly_tex_offset, align 4, !dbg !11429
  %idx.ext = sext i32 %11 to i64, !dbg !11429
  %add.ptr = getelementptr inbounds i8, i8* %10, i64 %idx.ext, !dbg !11429
  %12 = bitcast i8* %add.ptr to %struct.MTexPoly*, !dbg !11429
  store %struct.MTexPoly* %12, %struct.MTexPoly** %tface, align 8, !dbg !11431
  %13 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !11432
  %14 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !11434
  %15 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !11435
  %16 = load %struct.MTexPoly*, %struct.MTexPoly** %tface, align 8, !dbg !11436
  %call6 = call zeroext i8 @uvedit_face_visible_test(%struct.Scene* %13, %struct.Image* %14, %struct.BMFace* %15, %struct.MTexPoly* %16), !dbg !11437
  %tobool7 = icmp ne i8 %call6, 0, !dbg !11437
  br i1 %tobool7, label %if.end, label %if.then, !dbg !11438

if.then:                                          ; preds = %for.body
  br label %for.inc21, !dbg !11439

if.end:                                           ; preds = %for.body
  %17 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !11440
  %18 = bitcast %struct.BMFace* %17 to i8*, !dbg !11440
  %call8 = call i8* @BM_iter_new(%struct.BMIter* %liter, %struct.BMesh* null, i8 zeroext 11, i8* %18), !dbg !11440
  %19 = bitcast i8* %call8 to %struct.BMLoop*, !dbg !11440
  store %struct.BMLoop* %19, %struct.BMLoop** %l, align 8, !dbg !11440
  br label %for.cond9, !dbg !11440

for.cond9:                                        ; preds = %for.inc, %if.end
  %20 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !11442
  %tobool10 = icmp ne %struct.BMLoop* %20, null, !dbg !11440
  br i1 %tobool10, label %for.body11, label %for.end, !dbg !11440

for.body11:                                       ; preds = %for.cond9
  %21 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !11444
  %22 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !11447
  %23 = load i32, i32* %cd_loop_uv_offset, align 4, !dbg !11448
  %call12 = call zeroext i8 @uvedit_uv_select_test(%struct.Scene* %21, %struct.BMLoop* %22, i32 %23), !dbg !11449
  %tobool13 = icmp ne i8 %call12, 0, !dbg !11449
  br i1 %tobool13, label %if.then14, label %if.end19, !dbg !11450

if.then14:                                        ; preds = %for.body11
  %24 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !11451
  %head15 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %24, i32 0, i32 0, !dbg !11451
  %data16 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head15, i32 0, i32 0, !dbg !11451
  %25 = load i8*, i8** %data16, align 8, !dbg !11451
  %26 = load i32, i32* %cd_loop_uv_offset, align 4, !dbg !11451
  %idx.ext17 = sext i32 %26 to i64, !dbg !11451
  %add.ptr18 = getelementptr inbounds i8, i8* %25, i64 %idx.ext17, !dbg !11451
  %27 = bitcast i8* %add.ptr18 to %struct.MLoopUV*, !dbg !11451
  store %struct.MLoopUV* %27, %struct.MLoopUV** %luv, align 8, !dbg !11453
  %28 = load %struct.MLoopUV*, %struct.MLoopUV** %luv, align 8, !dbg !11454
  %uv = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %28, i32 0, i32 0, !dbg !11455
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %uv, i64 0, i64 0, !dbg !11454
  %29 = load float*, float** %offset.addr, align 8, !dbg !11456
  call void @add_v2_v2(float* %arraydecay, float* %29), !dbg !11457
  store i8 1, i8* %changed, align 1, !dbg !11458
  br label %if.end19, !dbg !11459

if.end19:                                         ; preds = %if.then14, %for.body11
  br label %for.inc, !dbg !11460

for.inc:                                          ; preds = %if.end19
  %call20 = call i8* @BM_iter_step(%struct.BMIter* %liter), !dbg !11442
  %30 = bitcast i8* %call20 to %struct.BMLoop*, !dbg !11442
  store %struct.BMLoop* %30, %struct.BMLoop** %l, align 8, !dbg !11442
  br label %for.cond9, !dbg !11442, !llvm.loop !11461

for.end:                                          ; preds = %for.cond9
  br label %for.inc21, !dbg !11463

for.inc21:                                        ; preds = %for.end, %if.then
  %call22 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !11427
  %31 = bitcast i8* %call22 to %struct.BMFace*, !dbg !11427
  store %struct.BMFace* %31, %struct.BMFace** %efa, align 8, !dbg !11427
  br label %for.cond, !dbg !11427, !llvm.loop !11464

for.end23:                                        ; preds = %for.cond
  %32 = load i8, i8* %changed, align 1, !dbg !11466
  ret i8 %32, !dbg !11467
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @uv_snap_uvs_to_adjacent_unselected(%struct.Scene* %scene, %struct.Image* %ima, %struct.Object* %obedit) #0 !dbg !11468 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %ima.addr = alloca %struct.Image*, align 8
  %obedit.addr = alloca %struct.Object*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  %bm = alloca %struct.BMesh*, align 8
  %f = alloca %struct.BMFace*, align 8
  %l = alloca %struct.BMLoop*, align 8
  %lsub = alloca %struct.BMLoop*, align 8
  %iter = alloca %struct.BMIter, align 8
  %liter = alloca %struct.BMIter, align 8
  %lsubiter = alloca %struct.BMIter, align 8
  %tface = alloca %struct.MTexPoly*, align 8
  %luv = alloca %struct.MLoopUV*, align 8
  %changed = alloca i8, align 1
  %cd_loop_uv_offset = alloca i32, align 4
  %cd_poly_tex_offset = alloca i32, align 4
  %uv = alloca [2 x float], align 4
  %uv_tot = alloca i32, align 4
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !11471, metadata !DIExpression()), !dbg !11472
  store %struct.Image* %ima, %struct.Image** %ima.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Image** %ima.addr, metadata !11473, metadata !DIExpression()), !dbg !11474
  store %struct.Object* %obedit, %struct.Object** %obedit.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit.addr, metadata !11475, metadata !DIExpression()), !dbg !11476
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !11477, metadata !DIExpression()), !dbg !11478
  %0 = load %struct.Object*, %struct.Object** %obedit.addr, align 8, !dbg !11479
  %call = call %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object* %0), !dbg !11480
  store %struct.BMEditMesh* %call, %struct.BMEditMesh** %em, align 8, !dbg !11478
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm, metadata !11481, metadata !DIExpression()), !dbg !11482
  %1 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !11483
  %bm1 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %1, i32 0, i32 0, !dbg !11484
  %2 = load %struct.BMesh*, %struct.BMesh** %bm1, align 8, !dbg !11484
  store %struct.BMesh* %2, %struct.BMesh** %bm, align 8, !dbg !11482
  call void @llvm.dbg.declare(metadata %struct.BMFace** %f, metadata !11485, metadata !DIExpression()), !dbg !11486
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l, metadata !11487, metadata !DIExpression()), !dbg !11488
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %lsub, metadata !11489, metadata !DIExpression()), !dbg !11490
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iter, metadata !11491, metadata !DIExpression()), !dbg !11492
  call void @llvm.dbg.declare(metadata %struct.BMIter* %liter, metadata !11493, metadata !DIExpression()), !dbg !11494
  call void @llvm.dbg.declare(metadata %struct.BMIter* %lsubiter, metadata !11495, metadata !DIExpression()), !dbg !11496
  call void @llvm.dbg.declare(metadata %struct.MTexPoly** %tface, metadata !11497, metadata !DIExpression()), !dbg !11498
  call void @llvm.dbg.declare(metadata %struct.MLoopUV** %luv, metadata !11499, metadata !DIExpression()), !dbg !11500
  call void @llvm.dbg.declare(metadata i8* %changed, metadata !11501, metadata !DIExpression()), !dbg !11502
  store i8 0, i8* %changed, align 1, !dbg !11502
  call void @llvm.dbg.declare(metadata i32* %cd_loop_uv_offset, metadata !11503, metadata !DIExpression()), !dbg !11504
  %3 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !11505
  %ldata = getelementptr inbounds %struct.BMesh, %struct.BMesh* %3, i32 0, i32 26, !dbg !11506
  %call2 = call i32 @CustomData_get_offset(%struct.CustomData* %ldata, i32 16), !dbg !11507
  store i32 %call2, i32* %cd_loop_uv_offset, align 4, !dbg !11504
  call void @llvm.dbg.declare(metadata i32* %cd_poly_tex_offset, metadata !11508, metadata !DIExpression()), !dbg !11509
  %4 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !11510
  %pdata = getelementptr inbounds %struct.BMesh, %struct.BMesh* %4, i32 0, i32 27, !dbg !11511
  %call3 = call i32 @CustomData_get_offset(%struct.CustomData* %pdata, i32 15), !dbg !11512
  store i32 %call3, i32* %cd_poly_tex_offset, align 4, !dbg !11509
  %5 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !11513
  %call4 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %5, i8 zeroext 3, i8* null), !dbg !11513
  %6 = bitcast i8* %call4 to %struct.BMFace*, !dbg !11513
  store %struct.BMFace* %6, %struct.BMFace** %f, align 8, !dbg !11513
  br label %for.cond, !dbg !11513

for.cond:                                         ; preds = %for.inc16, %entry
  %7 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !11515
  %tobool = icmp ne %struct.BMFace* %7, null, !dbg !11513
  br i1 %tobool, label %for.body, label %for.end18, !dbg !11513

for.body:                                         ; preds = %for.cond
  %8 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !11517
  %head = getelementptr inbounds %struct.BMFace, %struct.BMFace* %8, i32 0, i32 0, !dbg !11517
  %data = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head, i32 0, i32 0, !dbg !11517
  %9 = load i8*, i8** %data, align 8, !dbg !11517
  %10 = load i32, i32* %cd_poly_tex_offset, align 4, !dbg !11517
  %idx.ext = sext i32 %10 to i64, !dbg !11517
  %add.ptr = getelementptr inbounds i8, i8* %9, i64 %idx.ext, !dbg !11517
  %11 = bitcast i8* %add.ptr to %struct.MTexPoly*, !dbg !11517
  store %struct.MTexPoly* %11, %struct.MTexPoly** %tface, align 8, !dbg !11519
  %12 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !11520
  %13 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !11522
  %14 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !11523
  %15 = load %struct.MTexPoly*, %struct.MTexPoly** %tface, align 8, !dbg !11524
  %call5 = call zeroext i8 @uvedit_face_visible_test(%struct.Scene* %12, %struct.Image* %13, %struct.BMFace* %14, %struct.MTexPoly* %15), !dbg !11525
  %tobool6 = icmp ne i8 %call5, 0, !dbg !11525
  br i1 %tobool6, label %if.then, label %if.else, !dbg !11526

if.then:                                          ; preds = %for.body
  %16 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !11527
  %head7 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %16, i32 0, i32 0, !dbg !11527
  call void @_bm_elem_flag_enable(%struct.BMHeader* %head7, i8 zeroext 16), !dbg !11527
  %17 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !11529
  %18 = bitcast %struct.BMFace* %17 to i8*, !dbg !11529
  %call8 = call i8* @BM_iter_new(%struct.BMIter* %liter, %struct.BMesh* null, i8 zeroext 11, i8* %18), !dbg !11529
  %19 = bitcast i8* %call8 to %struct.BMLoop*, !dbg !11529
  store %struct.BMLoop* %19, %struct.BMLoop** %l, align 8, !dbg !11529
  br label %for.cond9, !dbg !11529

for.cond9:                                        ; preds = %for.inc, %if.then
  %20 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !11531
  %tobool10 = icmp ne %struct.BMLoop* %20, null, !dbg !11529
  br i1 %tobool10, label %for.body11, label %for.end, !dbg !11529

for.body11:                                       ; preds = %for.cond9
  %21 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !11533
  %head12 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %21, i32 0, i32 0, !dbg !11533
  %22 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !11533
  %23 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !11533
  %24 = load i32, i32* %cd_loop_uv_offset, align 4, !dbg !11533
  %call13 = call zeroext i8 @uvedit_uv_select_test(%struct.Scene* %22, %struct.BMLoop* %23, i32 %24), !dbg !11533
  %conv = zext i8 %call13 to i32, !dbg !11533
  call void @_bm_elem_flag_set(%struct.BMHeader* %head12, i8 zeroext 16, i32 %conv), !dbg !11533
  br label %for.inc, !dbg !11535

for.inc:                                          ; preds = %for.body11
  %call14 = call i8* @BM_iter_step(%struct.BMIter* %liter), !dbg !11531
  %25 = bitcast i8* %call14 to %struct.BMLoop*, !dbg !11531
  store %struct.BMLoop* %25, %struct.BMLoop** %l, align 8, !dbg !11531
  br label %for.cond9, !dbg !11531, !llvm.loop !11536

for.end:                                          ; preds = %for.cond9
  br label %if.end, !dbg !11538

if.else:                                          ; preds = %for.body
  %26 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !11539
  %head15 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %26, i32 0, i32 0, !dbg !11539
  call void @_bm_elem_flag_disable(%struct.BMHeader* %head15, i8 zeroext 16), !dbg !11539
  br label %if.end

if.end:                                           ; preds = %if.else, %for.end
  br label %for.inc16, !dbg !11541

for.inc16:                                        ; preds = %if.end
  %call17 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !11515
  %27 = bitcast i8* %call17 to %struct.BMFace*, !dbg !11515
  store %struct.BMFace* %27, %struct.BMFace** %f, align 8, !dbg !11515
  br label %for.cond, !dbg !11515, !llvm.loop !11542

for.end18:                                        ; preds = %for.cond
  %28 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !11544
  %call19 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %28, i8 zeroext 3, i8* null), !dbg !11544
  %29 = bitcast i8* %call19 to %struct.BMFace*, !dbg !11544
  store %struct.BMFace* %29, %struct.BMFace** %f, align 8, !dbg !11544
  br label %for.cond20, !dbg !11544

for.cond20:                                       ; preds = %for.inc74, %for.end18
  %30 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !11546
  %tobool21 = icmp ne %struct.BMFace* %30, null, !dbg !11544
  br i1 %tobool21, label %for.body22, label %for.end76, !dbg !11544

for.body22:                                       ; preds = %for.cond20
  %31 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !11548
  %head23 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %31, i32 0, i32 0, !dbg !11548
  %call24 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head23, i8 zeroext 16), !dbg !11548
  %tobool25 = icmp ne i8 %call24, 0, !dbg !11548
  br i1 %tobool25, label %if.then26, label %if.end73, !dbg !11551

if.then26:                                        ; preds = %for.body22
  %32 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !11552
  %33 = bitcast %struct.BMFace* %32 to i8*, !dbg !11552
  %call27 = call i8* @BM_iter_new(%struct.BMIter* %liter, %struct.BMesh* null, i8 zeroext 11, i8* %33), !dbg !11552
  %34 = bitcast i8* %call27 to %struct.BMLoop*, !dbg !11552
  store %struct.BMLoop* %34, %struct.BMLoop** %l, align 8, !dbg !11552
  br label %for.cond28, !dbg !11552

for.cond28:                                       ; preds = %for.inc70, %if.then26
  %35 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !11555
  %tobool29 = icmp ne %struct.BMLoop* %35, null, !dbg !11552
  br i1 %tobool29, label %for.body30, label %for.end72, !dbg !11552

for.body30:                                       ; preds = %for.cond28
  %36 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !11557
  %head31 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %36, i32 0, i32 0, !dbg !11557
  %call32 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head31, i8 zeroext 16), !dbg !11557
  %tobool33 = icmp ne i8 %call32, 0, !dbg !11557
  br i1 %tobool33, label %if.then34, label %if.end69, !dbg !11560

if.then34:                                        ; preds = %for.body30
  call void @llvm.dbg.declare(metadata [2 x float]* %uv, metadata !11561, metadata !DIExpression()), !dbg !11563
  %37 = bitcast [2 x float]* %uv to i8*, !dbg !11563
  call void @llvm.memset.p0i8.i64(i8* align 4 %37, i8 0, i64 8, i1 false), !dbg !11563
  call void @llvm.dbg.declare(metadata i32* %uv_tot, metadata !11564, metadata !DIExpression()), !dbg !11565
  store i32 0, i32* %uv_tot, align 4, !dbg !11565
  %38 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !11566
  %v = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %38, i32 0, i32 1, !dbg !11566
  %39 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !11566
  %40 = bitcast %struct.BMVert* %39 to i8*, !dbg !11566
  %call35 = call i8* @BM_iter_new(%struct.BMIter* %lsubiter, %struct.BMesh* null, i8 zeroext 6, i8* %40), !dbg !11566
  %41 = bitcast i8* %call35 to %struct.BMLoop*, !dbg !11566
  store %struct.BMLoop* %41, %struct.BMLoop** %lsub, align 8, !dbg !11566
  br label %for.cond36, !dbg !11566

for.cond36:                                       ; preds = %for.inc55, %if.then34
  %42 = load %struct.BMLoop*, %struct.BMLoop** %lsub, align 8, !dbg !11568
  %tobool37 = icmp ne %struct.BMLoop* %42, null, !dbg !11566
  br i1 %tobool37, label %for.body38, label %for.end57, !dbg !11566

for.body38:                                       ; preds = %for.cond36
  %43 = load %struct.BMLoop*, %struct.BMLoop** %lsub, align 8, !dbg !11570
  %f39 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %43, i32 0, i32 3, !dbg !11570
  %44 = load %struct.BMFace*, %struct.BMFace** %f39, align 8, !dbg !11570
  %head40 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %44, i32 0, i32 0, !dbg !11570
  %call41 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head40, i8 zeroext 16), !dbg !11570
  %conv42 = zext i8 %call41 to i32, !dbg !11570
  %tobool43 = icmp ne i32 %conv42, 0, !dbg !11570
  br i1 %tobool43, label %land.lhs.true, label %if.end54, !dbg !11573

land.lhs.true:                                    ; preds = %for.body38
  %45 = load %struct.BMLoop*, %struct.BMLoop** %lsub, align 8, !dbg !11574
  %head44 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %45, i32 0, i32 0, !dbg !11574
  %call45 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head44, i8 zeroext 16), !dbg !11574
  %tobool46 = icmp ne i8 %call45, 0, !dbg !11574
  br i1 %tobool46, label %if.end54, label %if.then47, !dbg !11575

if.then47:                                        ; preds = %land.lhs.true
  %46 = load %struct.BMLoop*, %struct.BMLoop** %lsub, align 8, !dbg !11576
  %head48 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %46, i32 0, i32 0, !dbg !11576
  %data49 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head48, i32 0, i32 0, !dbg !11576
  %47 = load i8*, i8** %data49, align 8, !dbg !11576
  %48 = load i32, i32* %cd_loop_uv_offset, align 4, !dbg !11576
  %idx.ext50 = sext i32 %48 to i64, !dbg !11576
  %add.ptr51 = getelementptr inbounds i8, i8* %47, i64 %idx.ext50, !dbg !11576
  %49 = bitcast i8* %add.ptr51 to %struct.MLoopUV*, !dbg !11576
  store %struct.MLoopUV* %49, %struct.MLoopUV** %luv, align 8, !dbg !11578
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %uv, i64 0, i64 0, !dbg !11579
  %50 = load %struct.MLoopUV*, %struct.MLoopUV** %luv, align 8, !dbg !11580
  %uv52 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %50, i32 0, i32 0, !dbg !11581
  %arraydecay53 = getelementptr inbounds [2 x float], [2 x float]* %uv52, i64 0, i64 0, !dbg !11580
  call void @add_v2_v2(float* %arraydecay, float* %arraydecay53), !dbg !11582
  %51 = load i32, i32* %uv_tot, align 4, !dbg !11583
  %inc = add nsw i32 %51, 1, !dbg !11583
  store i32 %inc, i32* %uv_tot, align 4, !dbg !11583
  br label %if.end54, !dbg !11584

if.end54:                                         ; preds = %if.then47, %land.lhs.true, %for.body38
  br label %for.inc55, !dbg !11585

for.inc55:                                        ; preds = %if.end54
  %call56 = call i8* @BM_iter_step(%struct.BMIter* %lsubiter), !dbg !11568
  %52 = bitcast i8* %call56 to %struct.BMLoop*, !dbg !11568
  store %struct.BMLoop* %52, %struct.BMLoop** %lsub, align 8, !dbg !11568
  br label %for.cond36, !dbg !11568, !llvm.loop !11586

for.end57:                                        ; preds = %for.cond36
  %53 = load i32, i32* %uv_tot, align 4, !dbg !11588
  %tobool58 = icmp ne i32 %53, 0, !dbg !11588
  br i1 %tobool58, label %if.then59, label %if.end68, !dbg !11590

if.then59:                                        ; preds = %for.end57
  %54 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !11591
  %head60 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %54, i32 0, i32 0, !dbg !11591
  %data61 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head60, i32 0, i32 0, !dbg !11591
  %55 = load i8*, i8** %data61, align 8, !dbg !11591
  %56 = load i32, i32* %cd_loop_uv_offset, align 4, !dbg !11591
  %idx.ext62 = sext i32 %56 to i64, !dbg !11591
  %add.ptr63 = getelementptr inbounds i8, i8* %55, i64 %idx.ext62, !dbg !11591
  %57 = bitcast i8* %add.ptr63 to %struct.MLoopUV*, !dbg !11591
  store %struct.MLoopUV* %57, %struct.MLoopUV** %luv, align 8, !dbg !11593
  %58 = load %struct.MLoopUV*, %struct.MLoopUV** %luv, align 8, !dbg !11594
  %uv64 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %58, i32 0, i32 0, !dbg !11595
  %arraydecay65 = getelementptr inbounds [2 x float], [2 x float]* %uv64, i64 0, i64 0, !dbg !11594
  %arraydecay66 = getelementptr inbounds [2 x float], [2 x float]* %uv, i64 0, i64 0, !dbg !11596
  %59 = load i32, i32* %uv_tot, align 4, !dbg !11597
  %conv67 = sitofp i32 %59 to float, !dbg !11598
  %div = fdiv float 1.000000e+00, %conv67, !dbg !11599
  call void @mul_v2_v2fl(float* %arraydecay65, float* %arraydecay66, float %div), !dbg !11600
  store i8 1, i8* %changed, align 1, !dbg !11601
  br label %if.end68, !dbg !11602

if.end68:                                         ; preds = %if.then59, %for.end57
  br label %if.end69, !dbg !11603

if.end69:                                         ; preds = %if.end68, %for.body30
  br label %for.inc70, !dbg !11604

for.inc70:                                        ; preds = %if.end69
  %call71 = call i8* @BM_iter_step(%struct.BMIter* %liter), !dbg !11555
  %60 = bitcast i8* %call71 to %struct.BMLoop*, !dbg !11555
  store %struct.BMLoop* %60, %struct.BMLoop** %l, align 8, !dbg !11555
  br label %for.cond28, !dbg !11555, !llvm.loop !11605

for.end72:                                        ; preds = %for.cond28
  br label %if.end73, !dbg !11607

if.end73:                                         ; preds = %for.end72, %for.body22
  br label %for.inc74, !dbg !11608

for.inc74:                                        ; preds = %if.end73
  %call75 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !11546
  %61 = bitcast i8* %call75 to %struct.BMFace*, !dbg !11546
  store %struct.BMFace* %61, %struct.BMFace** %f, align 8, !dbg !11546
  br label %for.cond20, !dbg !11546, !llvm.loop !11609

for.end76:                                        ; preds = %for.cond20
  %62 = load i8, i8* %changed, align 1, !dbg !11611
  ret i8 %62, !dbg !11612
}

; Function Attrs: noinline nounwind uwtable
define internal void @_bm_elem_flag_set(%struct.BMHeader* %head, i8 zeroext %hflag, i32 %val) #0 !dbg !11613 {
entry:
  %head.addr = alloca %struct.BMHeader*, align 8
  %hflag.addr = alloca i8, align 1
  %val.addr = alloca i32, align 4
  store %struct.BMHeader* %head, %struct.BMHeader** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMHeader** %head.addr, metadata !11616, metadata !DIExpression()), !dbg !11617
  store i8 %hflag, i8* %hflag.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %hflag.addr, metadata !11618, metadata !DIExpression()), !dbg !11619
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !11620, metadata !DIExpression()), !dbg !11621
  %0 = load i32, i32* %val.addr, align 4, !dbg !11622
  %tobool = icmp ne i32 %0, 0, !dbg !11622
  br i1 %tobool, label %if.then, label %if.else, !dbg !11624

if.then:                                          ; preds = %entry
  %1 = load %struct.BMHeader*, %struct.BMHeader** %head.addr, align 8, !dbg !11625
  %2 = load i8, i8* %hflag.addr, align 1, !dbg !11626
  call void @_bm_elem_flag_enable(%struct.BMHeader* %1, i8 zeroext %2), !dbg !11627
  br label %if.end, !dbg !11627

if.else:                                          ; preds = %entry
  %3 = load %struct.BMHeader*, %struct.BMHeader** %head.addr, align 8, !dbg !11628
  %4 = load i8, i8* %hflag.addr, align 1, !dbg !11629
  call void @_bm_elem_flag_disable(%struct.BMHeader* %3, i8 zeroext %4), !dbg !11630
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !11631
}

; Function Attrs: noinline nounwind uwtable
define internal void @mul_v2_v2fl(float* %r, float* %a, float %f) #0 !dbg !11632 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %f.addr = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !11635, metadata !DIExpression()), !dbg !11636
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !11637, metadata !DIExpression()), !dbg !11638
  store float %f, float* %f.addr, align 4
  call void @llvm.dbg.declare(metadata float* %f.addr, metadata !11639, metadata !DIExpression()), !dbg !11640
  %0 = load float*, float** %a.addr, align 8, !dbg !11641
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !11641
  %1 = load float, float* %arrayidx, align 4, !dbg !11641
  %2 = load float, float* %f.addr, align 4, !dbg !11642
  %mul = fmul float %1, %2, !dbg !11643
  %3 = load float*, float** %r.addr, align 8, !dbg !11644
  %arrayidx1 = getelementptr inbounds float, float* %3, i64 0, !dbg !11644
  store float %mul, float* %arrayidx1, align 4, !dbg !11645
  %4 = load float*, float** %a.addr, align 8, !dbg !11646
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !11646
  %5 = load float, float* %arrayidx2, align 4, !dbg !11646
  %6 = load float, float* %f.addr, align 4, !dbg !11647
  %mul3 = fmul float %5, %6, !dbg !11648
  %7 = load float*, float** %r.addr, align 8, !dbg !11649
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 1, !dbg !11649
  store float %mul3, float* %arrayidx4, align 4, !dbg !11650
  ret void, !dbg !11651
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @uv_align_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !11652 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !11653, metadata !DIExpression()), !dbg !11654
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !11655, metadata !DIExpression()), !dbg !11656
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !11657
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !11658
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %1, i32 0, i32 7, !dbg !11659
  %2 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !11659
  %call = call i32 @RNA_enum_get(%struct.PointerRNA* %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.125, i64 0, i64 0)), !dbg !11660
  call void @uv_weld_align(%struct.bContext* %0, i32 %call), !dbg !11661
  ret i32 4, !dbg !11662
}

; Function Attrs: noinline nounwind uwtable
define internal void @uv_weld_align(%struct.bContext* %C, i32 %tool) #0 !dbg !11663 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %tool.addr = alloca i32, align 4
  %obedit = alloca %struct.Object*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  %sima = alloca %struct.SpaceImage*, align 8
  %scene = alloca %struct.Scene*, align 8
  %ima = alloca %struct.Image*, align 8
  %tf = alloca %struct.MTexPoly*, align 8
  %cent = alloca [2 x float], align 4
  %min = alloca [2 x float], align 4
  %max = alloca [2 x float], align 4
  %cd_loop_uv_offset = alloca i32, align 4
  %cd_poly_tex_offset = alloca i32, align 4
  %iter = alloca %struct.BMIter, align 8
  %liter = alloca %struct.BMIter, align 8
  %efa = alloca %struct.BMFace*, align 8
  %l = alloca %struct.BMLoop*, align 8
  %luv = alloca %struct.MLoopUV*, align 8
  %iter46 = alloca %struct.BMIter, align 8
  %liter47 = alloca %struct.BMIter, align 8
  %efa48 = alloca %struct.BMFace*, align 8
  %l49 = alloca %struct.BMLoop*, align 8
  %luv70 = alloca %struct.MLoopUV*, align 8
  %iter90 = alloca %struct.BMIter, align 8
  %liter91 = alloca %struct.BMIter, align 8
  %efa92 = alloca %struct.BMFace*, align 8
  %l93 = alloca %struct.BMLoop*, align 8
  %luv114 = alloca %struct.MLoopUV*, align 8
  %eed = alloca %struct.BMEdge*, align 8
  %l136 = alloca %struct.BMLoop*, align 8
  %eve = alloca %struct.BMVert*, align 8
  %eve_start = alloca %struct.BMVert*, align 8
  %iter137 = alloca %struct.BMIter, align 8
  %liter138 = alloca %struct.BMIter, align 8
  %eiter = alloca %struct.BMIter, align 8
  %tot_eed_tag = alloca i32, align 4
  %eve_line = alloca %struct.BMVert**, align 8
  %eve_next = alloca %struct.BMVert*, align 8
  %_eve_line_count = alloca i32, align 4
  %_eve_line_static = alloca i8*, align 8
  %i = alloca i32, align 4
  %eve_other = alloca %struct.BMVert*, align 8
  %uv_start = alloca float*, align 8
  %uv_end = alloca float*, align 8
  %a = alloca float, align 4
  %luv341 = alloca %struct.MLoopUV*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !11666, metadata !DIExpression()), !dbg !11667
  store i32 %tool, i32* %tool.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tool.addr, metadata !11668, metadata !DIExpression()), !dbg !11669
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !11670, metadata !DIExpression()), !dbg !11671
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !11672
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !11673
  store %struct.Object* %call, %struct.Object** %obedit, align 8, !dbg !11671
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !11674, metadata !DIExpression()), !dbg !11675
  %1 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !11676
  %call1 = call %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object* %1), !dbg !11677
  store %struct.BMEditMesh* %call1, %struct.BMEditMesh** %em, align 8, !dbg !11675
  call void @llvm.dbg.declare(metadata %struct.SpaceImage** %sima, metadata !11678, metadata !DIExpression()), !dbg !11679
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene, metadata !11680, metadata !DIExpression()), !dbg !11681
  call void @llvm.dbg.declare(metadata %struct.Image** %ima, metadata !11682, metadata !DIExpression()), !dbg !11683
  call void @llvm.dbg.declare(metadata %struct.MTexPoly** %tf, metadata !11684, metadata !DIExpression()), !dbg !11685
  call void @llvm.dbg.declare(metadata [2 x float]* %cent, metadata !11686, metadata !DIExpression()), !dbg !11687
  call void @llvm.dbg.declare(metadata [2 x float]* %min, metadata !11688, metadata !DIExpression()), !dbg !11689
  call void @llvm.dbg.declare(metadata [2 x float]* %max, metadata !11690, metadata !DIExpression()), !dbg !11691
  call void @llvm.dbg.declare(metadata i32* %cd_loop_uv_offset, metadata !11692, metadata !DIExpression()), !dbg !11693
  %2 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !11694
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %2, i32 0, i32 0, !dbg !11695
  %3 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !11695
  %ldata = getelementptr inbounds %struct.BMesh, %struct.BMesh* %3, i32 0, i32 26, !dbg !11696
  %call2 = call i32 @CustomData_get_offset(%struct.CustomData* %ldata, i32 16), !dbg !11697
  store i32 %call2, i32* %cd_loop_uv_offset, align 4, !dbg !11693
  call void @llvm.dbg.declare(metadata i32* %cd_poly_tex_offset, metadata !11698, metadata !DIExpression()), !dbg !11699
  %4 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !11700
  %bm3 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %4, i32 0, i32 0, !dbg !11701
  %5 = load %struct.BMesh*, %struct.BMesh** %bm3, align 8, !dbg !11701
  %pdata = getelementptr inbounds %struct.BMesh, %struct.BMesh* %5, i32 0, i32 27, !dbg !11702
  %call4 = call i32 @CustomData_get_offset(%struct.CustomData* %pdata, i32 15), !dbg !11703
  store i32 %call4, i32* %cd_poly_tex_offset, align 4, !dbg !11699
  %6 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !11704
  %call5 = call %struct.Scene* @CTX_data_scene(%struct.bContext* %6), !dbg !11705
  store %struct.Scene* %call5, %struct.Scene** %scene, align 8, !dbg !11706
  %7 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !11707
  %call6 = call %struct.Image* @CTX_data_edit_image(%struct.bContext* %7), !dbg !11708
  store %struct.Image* %call6, %struct.Image** %ima, align 8, !dbg !11709
  %8 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !11710
  %call7 = call %struct.SpaceImage* @CTX_wm_space_image(%struct.bContext* %8), !dbg !11711
  store %struct.SpaceImage* %call7, %struct.SpaceImage** %sima, align 8, !dbg !11712
  %arrayidx = getelementptr inbounds [2 x float], [2 x float]* %min, i64 0, i64 1, !dbg !11713
  store float 0x46293E5940000000, float* %arrayidx, align 4, !dbg !11713
  %arrayidx8 = getelementptr inbounds [2 x float], [2 x float]* %min, i64 0, i64 0, !dbg !11713
  store float 0x46293E5940000000, float* %arrayidx8, align 4, !dbg !11713
  %arrayidx9 = getelementptr inbounds [2 x float], [2 x float]* %max, i64 0, i64 1, !dbg !11713
  store float 0xC6293E5940000000, float* %arrayidx9, align 4, !dbg !11713
  %arrayidx10 = getelementptr inbounds [2 x float], [2 x float]* %max, i64 0, i64 0, !dbg !11713
  store float 0xC6293E5940000000, float* %arrayidx10, align 4, !dbg !11713
  %9 = load i32, i32* %tool.addr, align 4, !dbg !11715
  %cmp = icmp eq i32 %9, 97, !dbg !11717
  br i1 %cmp, label %if.then, label %if.end40, !dbg !11718

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iter, metadata !11719, metadata !DIExpression()), !dbg !11721
  call void @llvm.dbg.declare(metadata %struct.BMIter* %liter, metadata !11722, metadata !DIExpression()), !dbg !11723
  call void @llvm.dbg.declare(metadata %struct.BMFace** %efa, metadata !11724, metadata !DIExpression()), !dbg !11725
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l, metadata !11726, metadata !DIExpression()), !dbg !11727
  %10 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !11728
  %bm11 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %10, i32 0, i32 0, !dbg !11728
  %11 = load %struct.BMesh*, %struct.BMesh** %bm11, align 8, !dbg !11728
  %call12 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %11, i8 zeroext 3, i8* null), !dbg !11728
  %12 = bitcast i8* %call12 to %struct.BMFace*, !dbg !11728
  store %struct.BMFace* %12, %struct.BMFace** %efa, align 8, !dbg !11728
  br label %for.cond, !dbg !11728

for.cond:                                         ; preds = %for.inc31, %if.then
  %13 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !11730
  %tobool = icmp ne %struct.BMFace* %13, null, !dbg !11728
  br i1 %tobool, label %for.body, label %for.end33, !dbg !11728

for.body:                                         ; preds = %for.cond
  %14 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !11732
  %head = getelementptr inbounds %struct.BMFace, %struct.BMFace* %14, i32 0, i32 0, !dbg !11732
  %data = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head, i32 0, i32 0, !dbg !11732
  %15 = load i8*, i8** %data, align 8, !dbg !11732
  %16 = load i32, i32* %cd_poly_tex_offset, align 4, !dbg !11732
  %idx.ext = sext i32 %16 to i64, !dbg !11732
  %add.ptr = getelementptr inbounds i8, i8* %15, i64 %idx.ext, !dbg !11732
  %17 = bitcast i8* %add.ptr to %struct.MTexPoly*, !dbg !11732
  store %struct.MTexPoly* %17, %struct.MTexPoly** %tf, align 8, !dbg !11734
  %18 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !11735
  %19 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !11737
  %20 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !11738
  %21 = load %struct.MTexPoly*, %struct.MTexPoly** %tf, align 8, !dbg !11739
  %call13 = call zeroext i8 @uvedit_face_visible_test(%struct.Scene* %18, %struct.Image* %19, %struct.BMFace* %20, %struct.MTexPoly* %21), !dbg !11740
  %tobool14 = icmp ne i8 %call13, 0, !dbg !11740
  br i1 %tobool14, label %if.end, label %if.then15, !dbg !11741

if.then15:                                        ; preds = %for.body
  br label %for.inc31, !dbg !11742

if.end:                                           ; preds = %for.body
  %22 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !11743
  %23 = bitcast %struct.BMFace* %22 to i8*, !dbg !11743
  %call16 = call i8* @BM_iter_new(%struct.BMIter* %liter, %struct.BMesh* null, i8 zeroext 11, i8* %23), !dbg !11743
  %24 = bitcast i8* %call16 to %struct.BMLoop*, !dbg !11743
  store %struct.BMLoop* %24, %struct.BMLoop** %l, align 8, !dbg !11743
  br label %for.cond17, !dbg !11743

for.cond17:                                       ; preds = %for.inc, %if.end
  %25 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !11745
  %tobool18 = icmp ne %struct.BMLoop* %25, null, !dbg !11743
  br i1 %tobool18, label %for.body19, label %for.end, !dbg !11743

for.body19:                                       ; preds = %for.cond17
  %26 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !11747
  %27 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !11750
  %28 = load i32, i32* %cd_loop_uv_offset, align 4, !dbg !11751
  %call20 = call zeroext i8 @uvedit_uv_select_test(%struct.Scene* %26, %struct.BMLoop* %27, i32 %28), !dbg !11752
  %tobool21 = icmp ne i8 %call20, 0, !dbg !11752
  br i1 %tobool21, label %if.then22, label %if.end29, !dbg !11753

if.then22:                                        ; preds = %for.body19
  call void @llvm.dbg.declare(metadata %struct.MLoopUV** %luv, metadata !11754, metadata !DIExpression()), !dbg !11756
  %29 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !11757
  %head23 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %29, i32 0, i32 0, !dbg !11757
  %data24 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head23, i32 0, i32 0, !dbg !11757
  %30 = load i8*, i8** %data24, align 8, !dbg !11757
  %31 = load i32, i32* %cd_loop_uv_offset, align 4, !dbg !11757
  %idx.ext25 = sext i32 %31 to i64, !dbg !11757
  %add.ptr26 = getelementptr inbounds i8, i8* %30, i64 %idx.ext25, !dbg !11757
  %32 = bitcast i8* %add.ptr26 to %struct.MLoopUV*, !dbg !11757
  store %struct.MLoopUV* %32, %struct.MLoopUV** %luv, align 8, !dbg !11756
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %min, i64 0, i64 0, !dbg !11758
  %arraydecay27 = getelementptr inbounds [2 x float], [2 x float]* %max, i64 0, i64 0, !dbg !11759
  %33 = load %struct.MLoopUV*, %struct.MLoopUV** %luv, align 8, !dbg !11760
  %uv = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %33, i32 0, i32 0, !dbg !11761
  %arraydecay28 = getelementptr inbounds [2 x float], [2 x float]* %uv, i64 0, i64 0, !dbg !11760
  call void @minmax_v2v2_v2(float* %arraydecay, float* %arraydecay27, float* %arraydecay28), !dbg !11762
  br label %if.end29, !dbg !11763

if.end29:                                         ; preds = %if.then22, %for.body19
  br label %for.inc, !dbg !11764

for.inc:                                          ; preds = %if.end29
  %call30 = call i8* @BM_iter_step(%struct.BMIter* %liter), !dbg !11745
  %34 = bitcast i8* %call30 to %struct.BMLoop*, !dbg !11745
  store %struct.BMLoop* %34, %struct.BMLoop** %l, align 8, !dbg !11745
  br label %for.cond17, !dbg !11745, !llvm.loop !11765

for.end:                                          ; preds = %for.cond17
  br label %for.inc31, !dbg !11767

for.inc31:                                        ; preds = %for.end, %if.then15
  %call32 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !11730
  %35 = bitcast i8* %call32 to %struct.BMFace*, !dbg !11730
  store %struct.BMFace* %35, %struct.BMFace** %efa, align 8, !dbg !11730
  br label %for.cond, !dbg !11730, !llvm.loop !11768

for.end33:                                        ; preds = %for.cond
  %arrayidx34 = getelementptr inbounds [2 x float], [2 x float]* %max, i64 0, i64 0, !dbg !11770
  %36 = load float, float* %arrayidx34, align 4, !dbg !11770
  %arrayidx35 = getelementptr inbounds [2 x float], [2 x float]* %min, i64 0, i64 0, !dbg !11771
  %37 = load float, float* %arrayidx35, align 4, !dbg !11771
  %sub = fsub float %36, %37, !dbg !11772
  %arrayidx36 = getelementptr inbounds [2 x float], [2 x float]* %max, i64 0, i64 1, !dbg !11773
  %38 = load float, float* %arrayidx36, align 4, !dbg !11773
  %arrayidx37 = getelementptr inbounds [2 x float], [2 x float]* %min, i64 0, i64 1, !dbg !11774
  %39 = load float, float* %arrayidx37, align 4, !dbg !11774
  %sub38 = fsub float %38, %39, !dbg !11775
  %cmp39 = fcmp oge float %sub, %sub38, !dbg !11776
  %40 = zext i1 %cmp39 to i64, !dbg !11777
  %cond = select i1 %cmp39, i32 121, i32 120, !dbg !11777
  store i32 %cond, i32* %tool.addr, align 4, !dbg !11778
  br label %if.end40, !dbg !11779

if.end40:                                         ; preds = %for.end33, %entry
  %41 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !11780
  %42 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !11781
  %43 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !11782
  %arraydecay41 = getelementptr inbounds [2 x float], [2 x float]* %cent, i64 0, i64 0, !dbg !11783
  %call42 = call zeroext i8 @uvedit_center(%struct.Scene* %41, %struct.Image* %42, %struct.Object* %43, float* %arraydecay41, i8 zeroext 0), !dbg !11784
  %44 = load i32, i32* %tool.addr, align 4, !dbg !11785
  %cmp43 = icmp eq i32 %44, 120, !dbg !11787
  br i1 %cmp43, label %if.then45, label %lor.lhs.false, !dbg !11788

lor.lhs.false:                                    ; preds = %if.end40
  %45 = load i32, i32* %tool.addr, align 4, !dbg !11789
  %cmp44 = icmp eq i32 %45, 119, !dbg !11790
  br i1 %cmp44, label %if.then45, label %if.end85, !dbg !11791

if.then45:                                        ; preds = %lor.lhs.false, %if.end40
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iter46, metadata !11792, metadata !DIExpression()), !dbg !11794
  call void @llvm.dbg.declare(metadata %struct.BMIter* %liter47, metadata !11795, metadata !DIExpression()), !dbg !11796
  call void @llvm.dbg.declare(metadata %struct.BMFace** %efa48, metadata !11797, metadata !DIExpression()), !dbg !11798
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l49, metadata !11799, metadata !DIExpression()), !dbg !11800
  %46 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !11801
  %bm50 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %46, i32 0, i32 0, !dbg !11801
  %47 = load %struct.BMesh*, %struct.BMesh** %bm50, align 8, !dbg !11801
  %call51 = call i8* @BM_iter_new(%struct.BMIter* %iter46, %struct.BMesh* %47, i8 zeroext 3, i8* null), !dbg !11801
  %48 = bitcast i8* %call51 to %struct.BMFace*, !dbg !11801
  store %struct.BMFace* %48, %struct.BMFace** %efa48, align 8, !dbg !11801
  br label %for.cond52, !dbg !11801

for.cond52:                                       ; preds = %for.inc82, %if.then45
  %49 = load %struct.BMFace*, %struct.BMFace** %efa48, align 8, !dbg !11803
  %tobool53 = icmp ne %struct.BMFace* %49, null, !dbg !11801
  br i1 %tobool53, label %for.body54, label %for.end84, !dbg !11801

for.body54:                                       ; preds = %for.cond52
  %50 = load %struct.BMFace*, %struct.BMFace** %efa48, align 8, !dbg !11805
  %head55 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %50, i32 0, i32 0, !dbg !11805
  %data56 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head55, i32 0, i32 0, !dbg !11805
  %51 = load i8*, i8** %data56, align 8, !dbg !11805
  %52 = load i32, i32* %cd_poly_tex_offset, align 4, !dbg !11805
  %idx.ext57 = sext i32 %52 to i64, !dbg !11805
  %add.ptr58 = getelementptr inbounds i8, i8* %51, i64 %idx.ext57, !dbg !11805
  %53 = bitcast i8* %add.ptr58 to %struct.MTexPoly*, !dbg !11805
  store %struct.MTexPoly* %53, %struct.MTexPoly** %tf, align 8, !dbg !11807
  %54 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !11808
  %55 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !11810
  %56 = load %struct.BMFace*, %struct.BMFace** %efa48, align 8, !dbg !11811
  %57 = load %struct.MTexPoly*, %struct.MTexPoly** %tf, align 8, !dbg !11812
  %call59 = call zeroext i8 @uvedit_face_visible_test(%struct.Scene* %54, %struct.Image* %55, %struct.BMFace* %56, %struct.MTexPoly* %57), !dbg !11813
  %tobool60 = icmp ne i8 %call59, 0, !dbg !11813
  br i1 %tobool60, label %if.end62, label %if.then61, !dbg !11814

if.then61:                                        ; preds = %for.body54
  br label %for.inc82, !dbg !11815

if.end62:                                         ; preds = %for.body54
  %58 = load %struct.BMFace*, %struct.BMFace** %efa48, align 8, !dbg !11816
  %59 = bitcast %struct.BMFace* %58 to i8*, !dbg !11816
  %call63 = call i8* @BM_iter_new(%struct.BMIter* %liter47, %struct.BMesh* null, i8 zeroext 11, i8* %59), !dbg !11816
  %60 = bitcast i8* %call63 to %struct.BMLoop*, !dbg !11816
  store %struct.BMLoop* %60, %struct.BMLoop** %l49, align 8, !dbg !11816
  br label %for.cond64, !dbg !11816

for.cond64:                                       ; preds = %for.inc79, %if.end62
  %61 = load %struct.BMLoop*, %struct.BMLoop** %l49, align 8, !dbg !11818
  %tobool65 = icmp ne %struct.BMLoop* %61, null, !dbg !11816
  br i1 %tobool65, label %for.body66, label %for.end81, !dbg !11816

for.body66:                                       ; preds = %for.cond64
  %62 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !11820
  %63 = load %struct.BMLoop*, %struct.BMLoop** %l49, align 8, !dbg !11823
  %64 = load i32, i32* %cd_loop_uv_offset, align 4, !dbg !11824
  %call67 = call zeroext i8 @uvedit_uv_select_test(%struct.Scene* %62, %struct.BMLoop* %63, i32 %64), !dbg !11825
  %tobool68 = icmp ne i8 %call67, 0, !dbg !11825
  br i1 %tobool68, label %if.then69, label %if.end78, !dbg !11826

if.then69:                                        ; preds = %for.body66
  call void @llvm.dbg.declare(metadata %struct.MLoopUV** %luv70, metadata !11827, metadata !DIExpression()), !dbg !11829
  %65 = load %struct.BMLoop*, %struct.BMLoop** %l49, align 8, !dbg !11830
  %head71 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %65, i32 0, i32 0, !dbg !11830
  %data72 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head71, i32 0, i32 0, !dbg !11830
  %66 = load i8*, i8** %data72, align 8, !dbg !11830
  %67 = load i32, i32* %cd_loop_uv_offset, align 4, !dbg !11830
  %idx.ext73 = sext i32 %67 to i64, !dbg !11830
  %add.ptr74 = getelementptr inbounds i8, i8* %66, i64 %idx.ext73, !dbg !11830
  %68 = bitcast i8* %add.ptr74 to %struct.MLoopUV*, !dbg !11830
  store %struct.MLoopUV* %68, %struct.MLoopUV** %luv70, align 8, !dbg !11829
  %arrayidx75 = getelementptr inbounds [2 x float], [2 x float]* %cent, i64 0, i64 0, !dbg !11831
  %69 = load float, float* %arrayidx75, align 4, !dbg !11831
  %70 = load %struct.MLoopUV*, %struct.MLoopUV** %luv70, align 8, !dbg !11832
  %uv76 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %70, i32 0, i32 0, !dbg !11833
  %arrayidx77 = getelementptr inbounds [2 x float], [2 x float]* %uv76, i64 0, i64 0, !dbg !11832
  store float %69, float* %arrayidx77, align 4, !dbg !11834
  br label %if.end78, !dbg !11835

if.end78:                                         ; preds = %if.then69, %for.body66
  br label %for.inc79, !dbg !11836

for.inc79:                                        ; preds = %if.end78
  %call80 = call i8* @BM_iter_step(%struct.BMIter* %liter47), !dbg !11818
  %71 = bitcast i8* %call80 to %struct.BMLoop*, !dbg !11818
  store %struct.BMLoop* %71, %struct.BMLoop** %l49, align 8, !dbg !11818
  br label %for.cond64, !dbg !11818, !llvm.loop !11837

for.end81:                                        ; preds = %for.cond64
  br label %for.inc82, !dbg !11839

for.inc82:                                        ; preds = %for.end81, %if.then61
  %call83 = call i8* @BM_iter_step(%struct.BMIter* %iter46), !dbg !11803
  %72 = bitcast i8* %call83 to %struct.BMFace*, !dbg !11803
  store %struct.BMFace* %72, %struct.BMFace** %efa48, align 8, !dbg !11803
  br label %for.cond52, !dbg !11803, !llvm.loop !11840

for.end84:                                        ; preds = %for.cond52
  br label %if.end85, !dbg !11842

if.end85:                                         ; preds = %for.end84, %lor.lhs.false
  %73 = load i32, i32* %tool.addr, align 4, !dbg !11843
  %cmp86 = icmp eq i32 %73, 121, !dbg !11845
  br i1 %cmp86, label %if.then89, label %lor.lhs.false87, !dbg !11846

lor.lhs.false87:                                  ; preds = %if.end85
  %74 = load i32, i32* %tool.addr, align 4, !dbg !11847
  %cmp88 = icmp eq i32 %74, 119, !dbg !11848
  br i1 %cmp88, label %if.then89, label %if.end129, !dbg !11849

if.then89:                                        ; preds = %lor.lhs.false87, %if.end85
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iter90, metadata !11850, metadata !DIExpression()), !dbg !11852
  call void @llvm.dbg.declare(metadata %struct.BMIter* %liter91, metadata !11853, metadata !DIExpression()), !dbg !11854
  call void @llvm.dbg.declare(metadata %struct.BMFace** %efa92, metadata !11855, metadata !DIExpression()), !dbg !11856
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l93, metadata !11857, metadata !DIExpression()), !dbg !11858
  %75 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !11859
  %bm94 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %75, i32 0, i32 0, !dbg !11859
  %76 = load %struct.BMesh*, %struct.BMesh** %bm94, align 8, !dbg !11859
  %call95 = call i8* @BM_iter_new(%struct.BMIter* %iter90, %struct.BMesh* %76, i8 zeroext 3, i8* null), !dbg !11859
  %77 = bitcast i8* %call95 to %struct.BMFace*, !dbg !11859
  store %struct.BMFace* %77, %struct.BMFace** %efa92, align 8, !dbg !11859
  br label %for.cond96, !dbg !11859

for.cond96:                                       ; preds = %for.inc126, %if.then89
  %78 = load %struct.BMFace*, %struct.BMFace** %efa92, align 8, !dbg !11861
  %tobool97 = icmp ne %struct.BMFace* %78, null, !dbg !11859
  br i1 %tobool97, label %for.body98, label %for.end128, !dbg !11859

for.body98:                                       ; preds = %for.cond96
  %79 = load %struct.BMFace*, %struct.BMFace** %efa92, align 8, !dbg !11863
  %head99 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %79, i32 0, i32 0, !dbg !11863
  %data100 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head99, i32 0, i32 0, !dbg !11863
  %80 = load i8*, i8** %data100, align 8, !dbg !11863
  %81 = load i32, i32* %cd_poly_tex_offset, align 4, !dbg !11863
  %idx.ext101 = sext i32 %81 to i64, !dbg !11863
  %add.ptr102 = getelementptr inbounds i8, i8* %80, i64 %idx.ext101, !dbg !11863
  %82 = bitcast i8* %add.ptr102 to %struct.MTexPoly*, !dbg !11863
  store %struct.MTexPoly* %82, %struct.MTexPoly** %tf, align 8, !dbg !11865
  %83 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !11866
  %84 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !11868
  %85 = load %struct.BMFace*, %struct.BMFace** %efa92, align 8, !dbg !11869
  %86 = load %struct.MTexPoly*, %struct.MTexPoly** %tf, align 8, !dbg !11870
  %call103 = call zeroext i8 @uvedit_face_visible_test(%struct.Scene* %83, %struct.Image* %84, %struct.BMFace* %85, %struct.MTexPoly* %86), !dbg !11871
  %tobool104 = icmp ne i8 %call103, 0, !dbg !11871
  br i1 %tobool104, label %if.end106, label %if.then105, !dbg !11872

if.then105:                                       ; preds = %for.body98
  br label %for.inc126, !dbg !11873

if.end106:                                        ; preds = %for.body98
  %87 = load %struct.BMFace*, %struct.BMFace** %efa92, align 8, !dbg !11874
  %88 = bitcast %struct.BMFace* %87 to i8*, !dbg !11874
  %call107 = call i8* @BM_iter_new(%struct.BMIter* %liter91, %struct.BMesh* null, i8 zeroext 11, i8* %88), !dbg !11874
  %89 = bitcast i8* %call107 to %struct.BMLoop*, !dbg !11874
  store %struct.BMLoop* %89, %struct.BMLoop** %l93, align 8, !dbg !11874
  br label %for.cond108, !dbg !11874

for.cond108:                                      ; preds = %for.inc123, %if.end106
  %90 = load %struct.BMLoop*, %struct.BMLoop** %l93, align 8, !dbg !11876
  %tobool109 = icmp ne %struct.BMLoop* %90, null, !dbg !11874
  br i1 %tobool109, label %for.body110, label %for.end125, !dbg !11874

for.body110:                                      ; preds = %for.cond108
  %91 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !11878
  %92 = load %struct.BMLoop*, %struct.BMLoop** %l93, align 8, !dbg !11881
  %93 = load i32, i32* %cd_loop_uv_offset, align 4, !dbg !11882
  %call111 = call zeroext i8 @uvedit_uv_select_test(%struct.Scene* %91, %struct.BMLoop* %92, i32 %93), !dbg !11883
  %tobool112 = icmp ne i8 %call111, 0, !dbg !11883
  br i1 %tobool112, label %if.then113, label %if.end122, !dbg !11884

if.then113:                                       ; preds = %for.body110
  call void @llvm.dbg.declare(metadata %struct.MLoopUV** %luv114, metadata !11885, metadata !DIExpression()), !dbg !11887
  %94 = load %struct.BMLoop*, %struct.BMLoop** %l93, align 8, !dbg !11888
  %head115 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %94, i32 0, i32 0, !dbg !11888
  %data116 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head115, i32 0, i32 0, !dbg !11888
  %95 = load i8*, i8** %data116, align 8, !dbg !11888
  %96 = load i32, i32* %cd_loop_uv_offset, align 4, !dbg !11888
  %idx.ext117 = sext i32 %96 to i64, !dbg !11888
  %add.ptr118 = getelementptr inbounds i8, i8* %95, i64 %idx.ext117, !dbg !11888
  %97 = bitcast i8* %add.ptr118 to %struct.MLoopUV*, !dbg !11888
  store %struct.MLoopUV* %97, %struct.MLoopUV** %luv114, align 8, !dbg !11887
  %arrayidx119 = getelementptr inbounds [2 x float], [2 x float]* %cent, i64 0, i64 1, !dbg !11889
  %98 = load float, float* %arrayidx119, align 4, !dbg !11889
  %99 = load %struct.MLoopUV*, %struct.MLoopUV** %luv114, align 8, !dbg !11890
  %uv120 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %99, i32 0, i32 0, !dbg !11891
  %arrayidx121 = getelementptr inbounds [2 x float], [2 x float]* %uv120, i64 0, i64 1, !dbg !11890
  store float %98, float* %arrayidx121, align 4, !dbg !11892
  br label %if.end122, !dbg !11893

if.end122:                                        ; preds = %if.then113, %for.body110
  br label %for.inc123, !dbg !11894

for.inc123:                                       ; preds = %if.end122
  %call124 = call i8* @BM_iter_step(%struct.BMIter* %liter91), !dbg !11876
  %100 = bitcast i8* %call124 to %struct.BMLoop*, !dbg !11876
  store %struct.BMLoop* %100, %struct.BMLoop** %l93, align 8, !dbg !11876
  br label %for.cond108, !dbg !11876, !llvm.loop !11895

for.end125:                                       ; preds = %for.cond108
  br label %for.inc126, !dbg !11897

for.inc126:                                       ; preds = %for.end125, %if.then105
  %call127 = call i8* @BM_iter_step(%struct.BMIter* %iter90), !dbg !11861
  %101 = bitcast i8* %call127 to %struct.BMFace*, !dbg !11861
  store %struct.BMFace* %101, %struct.BMFace** %efa92, align 8, !dbg !11861
  br label %for.cond96, !dbg !11861, !llvm.loop !11898

for.end128:                                       ; preds = %for.cond96
  br label %if.end129, !dbg !11900

if.end129:                                        ; preds = %for.end128, %lor.lhs.false87
  %102 = load i32, i32* %tool.addr, align 4, !dbg !11901
  %cmp130 = icmp eq i32 %102, 115, !dbg !11903
  br i1 %cmp130, label %if.then135, label %lor.lhs.false131, !dbg !11904

lor.lhs.false131:                                 ; preds = %if.end129
  %103 = load i32, i32* %tool.addr, align 4, !dbg !11905
  %cmp132 = icmp eq i32 %103, 116, !dbg !11906
  br i1 %cmp132, label %if.then135, label %lor.lhs.false133, !dbg !11907

lor.lhs.false133:                                 ; preds = %lor.lhs.false131
  %104 = load i32, i32* %tool.addr, align 4, !dbg !11908
  %cmp134 = icmp eq i32 %104, 117, !dbg !11909
  br i1 %cmp134, label %if.then135, label %if.end391, !dbg !11910

if.then135:                                       ; preds = %lor.lhs.false133, %lor.lhs.false131, %if.end129
  call void @llvm.dbg.declare(metadata %struct.BMEdge** %eed, metadata !11911, metadata !DIExpression()), !dbg !11913
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l136, metadata !11914, metadata !DIExpression()), !dbg !11915
  call void @llvm.dbg.declare(metadata %struct.BMVert** %eve, metadata !11916, metadata !DIExpression()), !dbg !11917
  call void @llvm.dbg.declare(metadata %struct.BMVert** %eve_start, metadata !11918, metadata !DIExpression()), !dbg !11919
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iter137, metadata !11920, metadata !DIExpression()), !dbg !11921
  call void @llvm.dbg.declare(metadata %struct.BMIter* %liter138, metadata !11922, metadata !DIExpression()), !dbg !11923
  call void @llvm.dbg.declare(metadata %struct.BMIter* %eiter, metadata !11924, metadata !DIExpression()), !dbg !11925
  %105 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !11926
  %bm139 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %105, i32 0, i32 0, !dbg !11926
  %106 = load %struct.BMesh*, %struct.BMesh** %bm139, align 8, !dbg !11926
  %call140 = call i8* @BM_iter_new(%struct.BMIter* %iter137, %struct.BMesh* %106, i8 zeroext 1, i8* null), !dbg !11926
  %107 = bitcast i8* %call140 to %struct.BMVert*, !dbg !11926
  store %struct.BMVert* %107, %struct.BMVert** %eve, align 8, !dbg !11926
  br label %for.cond141, !dbg !11926

for.cond141:                                      ; preds = %for.inc145, %if.then135
  %108 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !11928
  %tobool142 = icmp ne %struct.BMVert* %108, null, !dbg !11926
  br i1 %tobool142, label %for.body143, label %for.end147, !dbg !11926

for.body143:                                      ; preds = %for.cond141
  %109 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !11930
  %head144 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %109, i32 0, i32 0, !dbg !11930
  call void @_bm_elem_flag_disable(%struct.BMHeader* %head144, i8 zeroext 16), !dbg !11930
  br label %for.inc145, !dbg !11932

for.inc145:                                       ; preds = %for.body143
  %call146 = call i8* @BM_iter_step(%struct.BMIter* %iter137), !dbg !11928
  %110 = bitcast i8* %call146 to %struct.BMVert*, !dbg !11928
  store %struct.BMVert* %110, %struct.BMVert** %eve, align 8, !dbg !11928
  br label %for.cond141, !dbg !11928, !llvm.loop !11933

for.end147:                                       ; preds = %for.cond141
  %111 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !11935
  %bm148 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %111, i32 0, i32 0, !dbg !11935
  %112 = load %struct.BMesh*, %struct.BMesh** %bm148, align 8, !dbg !11935
  %call149 = call i8* @BM_iter_new(%struct.BMIter* %iter137, %struct.BMesh* %112, i8 zeroext 1, i8* null), !dbg !11935
  %113 = bitcast i8* %call149 to %struct.BMVert*, !dbg !11935
  store %struct.BMVert* %113, %struct.BMVert** %eve, align 8, !dbg !11935
  br label %for.cond150, !dbg !11935

for.cond150:                                      ; preds = %for.inc174, %for.end147
  %114 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !11937
  %tobool151 = icmp ne %struct.BMVert* %114, null, !dbg !11935
  br i1 %tobool151, label %for.body152, label %for.end176, !dbg !11935

for.body152:                                      ; preds = %for.cond150
  %115 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !11939
  %116 = bitcast %struct.BMVert* %115 to i8*, !dbg !11939
  %call153 = call i8* @BM_iter_new(%struct.BMIter* %liter138, %struct.BMesh* null, i8 zeroext 6, i8* %116), !dbg !11939
  %117 = bitcast i8* %call153 to %struct.BMLoop*, !dbg !11939
  store %struct.BMLoop* %117, %struct.BMLoop** %l136, align 8, !dbg !11939
  br label %for.cond154, !dbg !11939

for.cond154:                                      ; preds = %for.inc171, %for.body152
  %118 = load %struct.BMLoop*, %struct.BMLoop** %l136, align 8, !dbg !11942
  %tobool155 = icmp ne %struct.BMLoop* %118, null, !dbg !11939
  br i1 %tobool155, label %for.body156, label %for.end173, !dbg !11939

for.body156:                                      ; preds = %for.cond154
  %119 = load %struct.BMLoop*, %struct.BMLoop** %l136, align 8, !dbg !11944
  %f = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %119, i32 0, i32 3, !dbg !11944
  %120 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !11944
  %head157 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %120, i32 0, i32 0, !dbg !11944
  %data158 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head157, i32 0, i32 0, !dbg !11944
  %121 = load i8*, i8** %data158, align 8, !dbg !11944
  %122 = load i32, i32* %cd_poly_tex_offset, align 4, !dbg !11944
  %idx.ext159 = sext i32 %122 to i64, !dbg !11944
  %add.ptr160 = getelementptr inbounds i8, i8* %121, i64 %idx.ext159, !dbg !11944
  %123 = bitcast i8* %add.ptr160 to %struct.MTexPoly*, !dbg !11944
  store %struct.MTexPoly* %123, %struct.MTexPoly** %tf, align 8, !dbg !11946
  %124 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !11947
  %125 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !11949
  %126 = load %struct.BMLoop*, %struct.BMLoop** %l136, align 8, !dbg !11950
  %f161 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %126, i32 0, i32 3, !dbg !11951
  %127 = load %struct.BMFace*, %struct.BMFace** %f161, align 8, !dbg !11951
  %128 = load %struct.MTexPoly*, %struct.MTexPoly** %tf, align 8, !dbg !11952
  %call162 = call zeroext i8 @uvedit_face_visible_test(%struct.Scene* %124, %struct.Image* %125, %struct.BMFace* %127, %struct.MTexPoly* %128), !dbg !11953
  %tobool163 = icmp ne i8 %call162, 0, !dbg !11953
  br i1 %tobool163, label %if.end165, label %if.then164, !dbg !11954

if.then164:                                       ; preds = %for.body156
  br label %for.inc171, !dbg !11955

if.end165:                                        ; preds = %for.body156
  %129 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !11956
  %130 = load %struct.BMLoop*, %struct.BMLoop** %l136, align 8, !dbg !11958
  %131 = load i32, i32* %cd_loop_uv_offset, align 4, !dbg !11959
  %call166 = call zeroext i8 @uvedit_uv_select_test(%struct.Scene* %129, %struct.BMLoop* %130, i32 %131), !dbg !11960
  %tobool167 = icmp ne i8 %call166, 0, !dbg !11960
  br i1 %tobool167, label %if.then168, label %if.end170, !dbg !11961

if.then168:                                       ; preds = %if.end165
  %132 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !11962
  %head169 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %132, i32 0, i32 0, !dbg !11962
  call void @_bm_elem_flag_enable(%struct.BMHeader* %head169, i8 zeroext 16), !dbg !11962
  br label %for.end173, !dbg !11964

if.end170:                                        ; preds = %if.end165
  br label %for.inc171, !dbg !11965

for.inc171:                                       ; preds = %if.end170, %if.then164
  %call172 = call i8* @BM_iter_step(%struct.BMIter* %liter138), !dbg !11942
  %133 = bitcast i8* %call172 to %struct.BMLoop*, !dbg !11942
  store %struct.BMLoop* %133, %struct.BMLoop** %l136, align 8, !dbg !11942
  br label %for.cond154, !dbg !11942, !llvm.loop !11966

for.end173:                                       ; preds = %if.then168, %for.cond154
  br label %for.inc174, !dbg !11968

for.inc174:                                       ; preds = %for.end173
  %call175 = call i8* @BM_iter_step(%struct.BMIter* %iter137), !dbg !11937
  %134 = bitcast i8* %call175 to %struct.BMVert*, !dbg !11937
  store %struct.BMVert* %134, %struct.BMVert** %eve, align 8, !dbg !11937
  br label %for.cond150, !dbg !11937, !llvm.loop !11969

for.end176:                                       ; preds = %for.cond150
  %135 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !11971
  %bm177 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %135, i32 0, i32 0, !dbg !11971
  %136 = load %struct.BMesh*, %struct.BMesh** %bm177, align 8, !dbg !11971
  %call178 = call i8* @BM_iter_new(%struct.BMIter* %iter137, %struct.BMesh* %136, i8 zeroext 2, i8* null), !dbg !11971
  %137 = bitcast i8* %call178 to %struct.BMEdge*, !dbg !11971
  store %struct.BMEdge* %137, %struct.BMEdge** %eed, align 8, !dbg !11971
  br label %for.cond179, !dbg !11971

for.cond179:                                      ; preds = %for.inc190, %for.end176
  %138 = load %struct.BMEdge*, %struct.BMEdge** %eed, align 8, !dbg !11973
  %tobool180 = icmp ne %struct.BMEdge* %138, null, !dbg !11971
  br i1 %tobool180, label %for.body181, label %for.end192, !dbg !11971

for.body181:                                      ; preds = %for.cond179
  %139 = load %struct.BMEdge*, %struct.BMEdge** %eed, align 8, !dbg !11975
  %head182 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %139, i32 0, i32 0, !dbg !11975
  %140 = load %struct.BMEdge*, %struct.BMEdge** %eed, align 8, !dbg !11975
  %v1 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %140, i32 0, i32 2, !dbg !11975
  %141 = load %struct.BMVert*, %struct.BMVert** %v1, align 8, !dbg !11975
  %head183 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %141, i32 0, i32 0, !dbg !11975
  %call184 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head183, i8 zeroext 16), !dbg !11975
  %conv = zext i8 %call184 to i32, !dbg !11975
  %tobool185 = icmp ne i32 %conv, 0, !dbg !11975
  br i1 %tobool185, label %land.rhs, label %land.end, !dbg !11975

land.rhs:                                         ; preds = %for.body181
  %142 = load %struct.BMEdge*, %struct.BMEdge** %eed, align 8, !dbg !11975
  %v2 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %142, i32 0, i32 3, !dbg !11975
  %143 = load %struct.BMVert*, %struct.BMVert** %v2, align 8, !dbg !11975
  %head186 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %143, i32 0, i32 0, !dbg !11975
  %call187 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head186, i8 zeroext 16), !dbg !11975
  %conv188 = zext i8 %call187 to i32, !dbg !11975
  %tobool189 = icmp ne i32 %conv188, 0, !dbg !11975
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.body181
  %144 = phi i1 [ false, %for.body181 ], [ %tobool189, %land.rhs ], !dbg !11977
  %land.ext = zext i1 %144 to i32, !dbg !11975
  call void @_bm_elem_flag_set(%struct.BMHeader* %head182, i8 zeroext 16, i32 %land.ext), !dbg !11975
  br label %for.inc190, !dbg !11978

for.inc190:                                       ; preds = %land.end
  %call191 = call i8* @BM_iter_step(%struct.BMIter* %iter137), !dbg !11973
  %145 = bitcast i8* %call191 to %struct.BMEdge*, !dbg !11973
  store %struct.BMEdge* %145, %struct.BMEdge** %eed, align 8, !dbg !11973
  br label %for.cond179, !dbg !11973, !llvm.loop !11979

for.end192:                                       ; preds = %for.cond179
  store %struct.BMVert* null, %struct.BMVert** %eve_start, align 8, !dbg !11981
  %146 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !11982
  %bm193 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %146, i32 0, i32 0, !dbg !11982
  %147 = load %struct.BMesh*, %struct.BMesh** %bm193, align 8, !dbg !11982
  %call194 = call i8* @BM_iter_new(%struct.BMIter* %iter137, %struct.BMesh* %147, i8 zeroext 1, i8* null), !dbg !11982
  %148 = bitcast i8* %call194 to %struct.BMVert*, !dbg !11982
  store %struct.BMVert* %148, %struct.BMVert** %eve, align 8, !dbg !11982
  br label %for.cond195, !dbg !11982

for.cond195:                                      ; preds = %for.inc214, %for.end192
  %149 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !11984
  %tobool196 = icmp ne %struct.BMVert* %149, null, !dbg !11982
  br i1 %tobool196, label %for.body197, label %for.end216, !dbg !11982

for.body197:                                      ; preds = %for.cond195
  call void @llvm.dbg.declare(metadata i32* %tot_eed_tag, metadata !11986, metadata !DIExpression()), !dbg !11988
  store i32 0, i32* %tot_eed_tag, align 4, !dbg !11988
  %150 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !11989
  %151 = bitcast %struct.BMVert* %150 to i8*, !dbg !11989
  %call198 = call i8* @BM_iter_new(%struct.BMIter* %eiter, %struct.BMesh* null, i8 zeroext 4, i8* %151), !dbg !11989
  %152 = bitcast i8* %call198 to %struct.BMEdge*, !dbg !11989
  store %struct.BMEdge* %152, %struct.BMEdge** %eed, align 8, !dbg !11989
  br label %for.cond199, !dbg !11989

for.cond199:                                      ; preds = %for.inc207, %for.body197
  %153 = load %struct.BMEdge*, %struct.BMEdge** %eed, align 8, !dbg !11991
  %tobool200 = icmp ne %struct.BMEdge* %153, null, !dbg !11989
  br i1 %tobool200, label %for.body201, label %for.end209, !dbg !11989

for.body201:                                      ; preds = %for.cond199
  %154 = load %struct.BMEdge*, %struct.BMEdge** %eed, align 8, !dbg !11993
  %head202 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %154, i32 0, i32 0, !dbg !11993
  %call203 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head202, i8 zeroext 16), !dbg !11993
  %tobool204 = icmp ne i8 %call203, 0, !dbg !11993
  br i1 %tobool204, label %if.then205, label %if.end206, !dbg !11996

if.then205:                                       ; preds = %for.body201
  %155 = load i32, i32* %tot_eed_tag, align 4, !dbg !11997
  %inc = add nsw i32 %155, 1, !dbg !11997
  store i32 %inc, i32* %tot_eed_tag, align 4, !dbg !11997
  br label %if.end206, !dbg !11999

if.end206:                                        ; preds = %if.then205, %for.body201
  br label %for.inc207, !dbg !12000

for.inc207:                                       ; preds = %if.end206
  %call208 = call i8* @BM_iter_step(%struct.BMIter* %eiter), !dbg !11991
  %156 = bitcast i8* %call208 to %struct.BMEdge*, !dbg !11991
  store %struct.BMEdge* %156, %struct.BMEdge** %eed, align 8, !dbg !11991
  br label %for.cond199, !dbg !11991, !llvm.loop !12001

for.end209:                                       ; preds = %for.cond199
  %157 = load i32, i32* %tot_eed_tag, align 4, !dbg !12003
  %cmp210 = icmp eq i32 %157, 1, !dbg !12005
  br i1 %cmp210, label %if.then212, label %if.end213, !dbg !12006

if.then212:                                       ; preds = %for.end209
  %158 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !12007
  store %struct.BMVert* %158, %struct.BMVert** %eve_start, align 8, !dbg !12009
  br label %for.end216, !dbg !12010

if.end213:                                        ; preds = %for.end209
  br label %for.inc214, !dbg !12011

for.inc214:                                       ; preds = %if.end213
  %call215 = call i8* @BM_iter_step(%struct.BMIter* %iter137), !dbg !11984
  %159 = bitcast i8* %call215 to %struct.BMVert*, !dbg !11984
  store %struct.BMVert* %159, %struct.BMVert** %eve, align 8, !dbg !11984
  br label %for.cond195, !dbg !11984, !llvm.loop !12012

for.end216:                                       ; preds = %if.then212, %for.cond195
  %160 = load %struct.BMVert*, %struct.BMVert** %eve_start, align 8, !dbg !12014
  %tobool217 = icmp ne %struct.BMVert* %160, null, !dbg !12014
  br i1 %tobool217, label %if.then218, label %if.else389, !dbg !12016

if.then218:                                       ; preds = %for.end216
  call void @llvm.dbg.declare(metadata %struct.BMVert*** %eve_line, metadata !12017, metadata !DIExpression()), !dbg !12019
  store %struct.BMVert** null, %struct.BMVert*** %eve_line, align 8, !dbg !12019
  call void @llvm.dbg.declare(metadata %struct.BMVert** %eve_next, metadata !12020, metadata !DIExpression()), !dbg !12021
  store %struct.BMVert* null, %struct.BMVert** %eve_next, align 8, !dbg !12021
  call void @llvm.dbg.declare(metadata i32* %_eve_line_count, metadata !12022, metadata !DIExpression()), !dbg !12023
  store i32 0, i32* %_eve_line_count, align 4, !dbg !12023
  call void @llvm.dbg.declare(metadata i8** %_eve_line_static, metadata !12024, metadata !DIExpression()), !dbg !12023
  store i8* null, i8** %_eve_line_static, align 8, !dbg !12023
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12025, metadata !DIExpression()), !dbg !12026
  %161 = load %struct.BMVert*, %struct.BMVert** %eve_start, align 8, !dbg !12027
  store %struct.BMVert* %161, %struct.BMVert** %eve, align 8, !dbg !12028
  br label %while.cond, !dbg !12029

while.cond:                                       ; preds = %for.end272, %if.then218
  %162 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !12030
  %tobool219 = icmp ne %struct.BMVert* %162, null, !dbg !12029
  br i1 %tobool219, label %while.body, label %while.end, !dbg !12029

while.body:                                       ; preds = %while.cond
  %163 = load %struct.BMVert**, %struct.BMVert*** %eve_line, align 8, !dbg !12031
  %164 = bitcast %struct.BMVert** %163 to i8*, !dbg !12031
  %cmp220 = icmp eq i8* %164, null, !dbg !12031
  br i1 %cmp220, label %land.lhs.true, label %cond.false, !dbg !12031

land.lhs.true:                                    ; preds = %while.body
  %165 = load i8*, i8** %_eve_line_static, align 8, !dbg !12031
  %cmp222 = icmp ne i8* %165, null, !dbg !12031
  br i1 %cmp222, label %land.lhs.true224, label %cond.false, !dbg !12031

land.lhs.true224:                                 ; preds = %land.lhs.true
  %166 = load i32, i32* %_eve_line_count, align 4, !dbg !12031
  %add = add nsw i32 %166, 1, !dbg !12031
  %conv225 = sext i32 %add to i64, !dbg !12031
  %cmp226 = icmp uge i64 1, %conv225, !dbg !12031
  br i1 %cmp226, label %cond.true, label %cond.false, !dbg !12031

cond.true:                                        ; preds = %land.lhs.true224
  %167 = load i8*, i8** %_eve_line_static, align 8, !dbg !12031
  %168 = bitcast i8* %167 to %struct.BMVert**, !dbg !12031
  store %struct.BMVert** %168, %struct.BMVert*** %eve_line, align 8, !dbg !12031
  br label %cond.end250, !dbg !12031

cond.false:                                       ; preds = %land.lhs.true224, %land.lhs.true, %while.body
  %169 = load %struct.BMVert**, %struct.BMVert*** %eve_line, align 8, !dbg !12031
  %170 = bitcast %struct.BMVert** %169 to i8*, !dbg !12031
  %171 = load i8*, i8** %_eve_line_static, align 8, !dbg !12031
  %cmp228 = icmp eq i8* %170, %171, !dbg !12031
  br i1 %cmp228, label %land.lhs.true230, label %cond.false234, !dbg !12031

land.lhs.true230:                                 ; preds = %cond.false
  %172 = load %struct.BMVert**, %struct.BMVert*** %eve_line, align 8, !dbg !12031
  %173 = bitcast %struct.BMVert** %172 to i8*, !dbg !12031
  %cmp231 = icmp ne i8* %173, null, !dbg !12031
  br i1 %cmp231, label %cond.true233, label %cond.false234, !dbg !12031

cond.true233:                                     ; preds = %land.lhs.true230
  br label %cond.end241, !dbg !12031

cond.false234:                                    ; preds = %land.lhs.true230, %cond.false
  %174 = load %struct.BMVert**, %struct.BMVert*** %eve_line, align 8, !dbg !12031
  %cmp235 = icmp eq %struct.BMVert** %174, null, !dbg !12031
  br i1 %cmp235, label %cond.true237, label %cond.false238, !dbg !12031

cond.true237:                                     ; preds = %cond.false234
  br label %cond.end, !dbg !12031

cond.false238:                                    ; preds = %cond.false234
  %175 = load i64 (i8*)*, i64 (i8*)** @MEM_allocN_len, align 8, !dbg !12031
  %176 = load %struct.BMVert**, %struct.BMVert*** %eve_line, align 8, !dbg !12031
  %177 = bitcast %struct.BMVert** %176 to i8*, !dbg !12031
  %call239 = call i64 %175(i8* %177), !dbg !12031
  %div = udiv i64 %call239, 8, !dbg !12031
  br label %cond.end, !dbg !12031

cond.end:                                         ; preds = %cond.false238, %cond.true237
  %cond240 = phi i64 [ 0, %cond.true237 ], [ %div, %cond.false238 ], !dbg !12031
  br label %cond.end241, !dbg !12031

cond.end241:                                      ; preds = %cond.end, %cond.true233
  %cond242 = phi i64 [ 1, %cond.true233 ], [ %cond240, %cond.end ], !dbg !12031
  %178 = load i32, i32* %_eve_line_count, align 4, !dbg !12031
  %add243 = add nsw i32 %178, 1, !dbg !12031
  %conv244 = sext i32 %add243 to i64, !dbg !12031
  %cmp245 = icmp uge i64 %cond242, %conv244, !dbg !12031
  br i1 %cmp245, label %cond.true247, label %cond.false248, !dbg !12031

cond.true247:                                     ; preds = %cond.end241
  br label %cond.end249, !dbg !12031

cond.false248:                                    ; preds = %cond.end241
  %179 = bitcast %struct.BMVert*** %eve_line to i8**, !dbg !12031
  %180 = load i8*, i8** %_eve_line_static, align 8, !dbg !12031
  %181 = load i32, i32* %_eve_line_count, align 4, !dbg !12031
  call void @_bli_array_grow_func(i8** %179, i8* %180, i32 8, i32 %181, i32 1, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.128, i64 0, i64 0)), !dbg !12031
  br label %cond.end249, !dbg !12031

cond.end249:                                      ; preds = %cond.false248, %cond.true247
  br label %cond.end250, !dbg !12031

cond.end250:                                      ; preds = %cond.end249, %cond.true
  %182 = load i32, i32* %_eve_line_count, align 4, !dbg !12031
  %add251 = add nsw i32 %182, 1, !dbg !12031
  store i32 %add251, i32* %_eve_line_count, align 4, !dbg !12031
  %183 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !12031
  %184 = load %struct.BMVert**, %struct.BMVert*** %eve_line, align 8, !dbg !12031
  %185 = load i32, i32* %_eve_line_count, align 4, !dbg !12031
  %sub252 = sub nsw i32 %185, 1, !dbg !12031
  %idxprom = sext i32 %sub252 to i64, !dbg !12031
  %arrayidx253 = getelementptr inbounds %struct.BMVert*, %struct.BMVert** %184, i64 %idxprom, !dbg !12031
  store %struct.BMVert* %183, %struct.BMVert** %arrayidx253, align 8, !dbg !12031
  %186 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !12033
  %head254 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %186, i32 0, i32 0, !dbg !12033
  call void @_bm_elem_flag_disable(%struct.BMHeader* %head254, i8 zeroext 16), !dbg !12033
  store %struct.BMVert* null, %struct.BMVert** %eve_next, align 8, !dbg !12034
  %187 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !12035
  %188 = bitcast %struct.BMVert* %187 to i8*, !dbg !12035
  %call255 = call i8* @BM_iter_new(%struct.BMIter* %eiter, %struct.BMesh* null, i8 zeroext 4, i8* %188), !dbg !12035
  %189 = bitcast i8* %call255 to %struct.BMEdge*, !dbg !12035
  store %struct.BMEdge* %189, %struct.BMEdge** %eed, align 8, !dbg !12035
  br label %for.cond256, !dbg !12035

for.cond256:                                      ; preds = %for.inc270, %cond.end250
  %190 = load %struct.BMEdge*, %struct.BMEdge** %eed, align 8, !dbg !12037
  %tobool257 = icmp ne %struct.BMEdge* %190, null, !dbg !12035
  br i1 %tobool257, label %for.body258, label %for.end272, !dbg !12035

for.body258:                                      ; preds = %for.cond256
  %191 = load %struct.BMEdge*, %struct.BMEdge** %eed, align 8, !dbg !12039
  %head259 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %191, i32 0, i32 0, !dbg !12039
  %call260 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head259, i8 zeroext 16), !dbg !12039
  %tobool261 = icmp ne i8 %call260, 0, !dbg !12039
  br i1 %tobool261, label %if.then262, label %if.end269, !dbg !12042

if.then262:                                       ; preds = %for.body258
  call void @llvm.dbg.declare(metadata %struct.BMVert** %eve_other, metadata !12043, metadata !DIExpression()), !dbg !12045
  %192 = load %struct.BMEdge*, %struct.BMEdge** %eed, align 8, !dbg !12046
  %193 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !12047
  %call263 = call %struct.BMVert* @BM_edge_other_vert(%struct.BMEdge* %192, %struct.BMVert* %193), !dbg !12048
  store %struct.BMVert* %call263, %struct.BMVert** %eve_other, align 8, !dbg !12045
  %194 = load %struct.BMVert*, %struct.BMVert** %eve_other, align 8, !dbg !12049
  %head264 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %194, i32 0, i32 0, !dbg !12049
  %call265 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head264, i8 zeroext 16), !dbg !12049
  %tobool266 = icmp ne i8 %call265, 0, !dbg !12049
  br i1 %tobool266, label %if.then267, label %if.end268, !dbg !12051

if.then267:                                       ; preds = %if.then262
  %195 = load %struct.BMVert*, %struct.BMVert** %eve_other, align 8, !dbg !12052
  store %struct.BMVert* %195, %struct.BMVert** %eve_next, align 8, !dbg !12054
  br label %for.end272, !dbg !12055

if.end268:                                        ; preds = %if.then262
  br label %if.end269, !dbg !12056

if.end269:                                        ; preds = %if.end268, %for.body258
  br label %for.inc270, !dbg !12057

for.inc270:                                       ; preds = %if.end269
  %call271 = call i8* @BM_iter_step(%struct.BMIter* %eiter), !dbg !12037
  %196 = bitcast i8* %call271 to %struct.BMEdge*, !dbg !12037
  store %struct.BMEdge* %196, %struct.BMEdge** %eed, align 8, !dbg !12037
  br label %for.cond256, !dbg !12037, !llvm.loop !12058

for.end272:                                       ; preds = %if.then267, %for.cond256
  %197 = load %struct.BMVert*, %struct.BMVert** %eve_next, align 8, !dbg !12060
  store %struct.BMVert* %197, %struct.BMVert** %eve, align 8, !dbg !12061
  br label %while.cond, !dbg !12029, !llvm.loop !12062

while.end:                                        ; preds = %while.cond
  %198 = load i32, i32* %_eve_line_count, align 4, !dbg !12064
  %cmp273 = icmp sgt i32 %198, 2, !dbg !12066
  br i1 %cmp273, label %if.then275, label %if.else384, !dbg !12067

if.then275:                                       ; preds = %while.end
  call void @llvm.dbg.declare(metadata float** %uv_start, metadata !12068, metadata !DIExpression()), !dbg !12070
  %199 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !12071
  %200 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !12072
  %201 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !12073
  %202 = load %struct.BMVert**, %struct.BMVert*** %eve_line, align 8, !dbg !12074
  %arrayidx276 = getelementptr inbounds %struct.BMVert*, %struct.BMVert** %202, i64 0, !dbg !12074
  %203 = load %struct.BMVert*, %struct.BMVert** %arrayidx276, align 8, !dbg !12074
  %call277 = call float* @uv_sel_co_from_eve(%struct.Scene* %199, %struct.Image* %200, %struct.BMEditMesh* %201, %struct.BMVert* %203), !dbg !12075
  store float* %call277, float** %uv_start, align 8, !dbg !12070
  call void @llvm.dbg.declare(metadata float** %uv_end, metadata !12076, metadata !DIExpression()), !dbg !12077
  %204 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !12078
  %205 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !12079
  %206 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !12080
  %207 = load %struct.BMVert**, %struct.BMVert*** %eve_line, align 8, !dbg !12081
  %208 = load i32, i32* %_eve_line_count, align 4, !dbg !12082
  %sub278 = sub nsw i32 %208, 1, !dbg !12083
  %idxprom279 = sext i32 %sub278 to i64, !dbg !12081
  %arrayidx280 = getelementptr inbounds %struct.BMVert*, %struct.BMVert** %207, i64 %idxprom279, !dbg !12081
  %209 = load %struct.BMVert*, %struct.BMVert** %arrayidx280, align 8, !dbg !12081
  %call281 = call float* @uv_sel_co_from_eve(%struct.Scene* %204, %struct.Image* %205, %struct.BMEditMesh* %206, %struct.BMVert* %209), !dbg !12084
  store float* %call281, float** %uv_end, align 8, !dbg !12077
  call void @llvm.dbg.declare(metadata float* %a, metadata !12085, metadata !DIExpression()), !dbg !12086
  store float 0.000000e+00, float* %a, align 4, !dbg !12086
  %210 = load i32, i32* %tool.addr, align 4, !dbg !12087
  %cmp282 = icmp eq i32 %210, 116, !dbg !12089
  br i1 %cmp282, label %if.then284, label %if.else298, !dbg !12090

if.then284:                                       ; preds = %if.then275
  %211 = load float*, float** %uv_start, align 8, !dbg !12091
  %arrayidx285 = getelementptr inbounds float, float* %211, i64 1, !dbg !12091
  %212 = load float, float* %arrayidx285, align 4, !dbg !12091
  %213 = load float*, float** %uv_end, align 8, !dbg !12094
  %arrayidx286 = getelementptr inbounds float, float* %213, i64 1, !dbg !12094
  %214 = load float, float* %arrayidx286, align 4, !dbg !12094
  %cmp287 = fcmp oeq float %212, %214, !dbg !12095
  br i1 %cmp287, label %if.then289, label %if.else, !dbg !12096

if.then289:                                       ; preds = %if.then284
  store i32 115, i32* %tool.addr, align 4, !dbg !12097
  br label %if.end297, !dbg !12098

if.else:                                          ; preds = %if.then284
  %215 = load float*, float** %uv_end, align 8, !dbg !12099
  %arrayidx290 = getelementptr inbounds float, float* %215, i64 0, !dbg !12099
  %216 = load float, float* %arrayidx290, align 4, !dbg !12099
  %217 = load float*, float** %uv_start, align 8, !dbg !12100
  %arrayidx291 = getelementptr inbounds float, float* %217, i64 0, !dbg !12100
  %218 = load float, float* %arrayidx291, align 4, !dbg !12100
  %sub292 = fsub float %216, %218, !dbg !12101
  %219 = load float*, float** %uv_end, align 8, !dbg !12102
  %arrayidx293 = getelementptr inbounds float, float* %219, i64 1, !dbg !12102
  %220 = load float, float* %arrayidx293, align 4, !dbg !12102
  %221 = load float*, float** %uv_start, align 8, !dbg !12103
  %arrayidx294 = getelementptr inbounds float, float* %221, i64 1, !dbg !12103
  %222 = load float, float* %arrayidx294, align 4, !dbg !12103
  %sub295 = fsub float %220, %222, !dbg !12104
  %div296 = fdiv float %sub292, %sub295, !dbg !12105
  store float %div296, float* %a, align 4, !dbg !12106
  br label %if.end297

if.end297:                                        ; preds = %if.else, %if.then289
  br label %if.end317, !dbg !12107

if.else298:                                       ; preds = %if.then275
  %223 = load i32, i32* %tool.addr, align 4, !dbg !12108
  %cmp299 = icmp eq i32 %223, 117, !dbg !12110
  br i1 %cmp299, label %if.then301, label %if.end316, !dbg !12111

if.then301:                                       ; preds = %if.else298
  %224 = load float*, float** %uv_start, align 8, !dbg !12112
  %arrayidx302 = getelementptr inbounds float, float* %224, i64 0, !dbg !12112
  %225 = load float, float* %arrayidx302, align 4, !dbg !12112
  %226 = load float*, float** %uv_end, align 8, !dbg !12115
  %arrayidx303 = getelementptr inbounds float, float* %226, i64 0, !dbg !12115
  %227 = load float, float* %arrayidx303, align 4, !dbg !12115
  %cmp304 = fcmp oeq float %225, %227, !dbg !12116
  br i1 %cmp304, label %if.then306, label %if.else307, !dbg !12117

if.then306:                                       ; preds = %if.then301
  store i32 115, i32* %tool.addr, align 4, !dbg !12118
  br label %if.end315, !dbg !12119

if.else307:                                       ; preds = %if.then301
  %228 = load float*, float** %uv_end, align 8, !dbg !12120
  %arrayidx308 = getelementptr inbounds float, float* %228, i64 1, !dbg !12120
  %229 = load float, float* %arrayidx308, align 4, !dbg !12120
  %230 = load float*, float** %uv_start, align 8, !dbg !12121
  %arrayidx309 = getelementptr inbounds float, float* %230, i64 1, !dbg !12121
  %231 = load float, float* %arrayidx309, align 4, !dbg !12121
  %sub310 = fsub float %229, %231, !dbg !12122
  %232 = load float*, float** %uv_end, align 8, !dbg !12123
  %arrayidx311 = getelementptr inbounds float, float* %232, i64 0, !dbg !12123
  %233 = load float, float* %arrayidx311, align 4, !dbg !12123
  %234 = load float*, float** %uv_start, align 8, !dbg !12124
  %arrayidx312 = getelementptr inbounds float, float* %234, i64 0, !dbg !12124
  %235 = load float, float* %arrayidx312, align 4, !dbg !12124
  %sub313 = fsub float %233, %235, !dbg !12125
  %div314 = fdiv float %sub310, %sub313, !dbg !12126
  store float %div314, float* %a, align 4, !dbg !12127
  br label %if.end315

if.end315:                                        ; preds = %if.else307, %if.then306
  br label %if.end316, !dbg !12128

if.end316:                                        ; preds = %if.end315, %if.else298
  br label %if.end317

if.end317:                                        ; preds = %if.end316, %if.end297
  store i32 0, i32* %i, align 4, !dbg !12129
  br label %for.cond318, !dbg !12131

for.cond318:                                      ; preds = %for.inc381, %if.end317
  %236 = load i32, i32* %i, align 4, !dbg !12132
  %237 = load i32, i32* %_eve_line_count, align 4, !dbg !12134
  %cmp319 = icmp slt i32 %236, %237, !dbg !12135
  br i1 %cmp319, label %for.body321, label %for.end383, !dbg !12136

for.body321:                                      ; preds = %for.cond318
  %238 = load %struct.BMVert**, %struct.BMVert*** %eve_line, align 8, !dbg !12137
  %239 = load i32, i32* %i, align 4, !dbg !12137
  %idxprom322 = sext i32 %239 to i64, !dbg !12137
  %arrayidx323 = getelementptr inbounds %struct.BMVert*, %struct.BMVert** %238, i64 %idxprom322, !dbg !12137
  %240 = load %struct.BMVert*, %struct.BMVert** %arrayidx323, align 8, !dbg !12137
  %241 = bitcast %struct.BMVert* %240 to i8*, !dbg !12137
  %call324 = call i8* @BM_iter_new(%struct.BMIter* %liter138, %struct.BMesh* null, i8 zeroext 6, i8* %241), !dbg !12137
  %242 = bitcast i8* %call324 to %struct.BMLoop*, !dbg !12137
  store %struct.BMLoop* %242, %struct.BMLoop** %l136, align 8, !dbg !12137
  br label %for.cond325, !dbg !12137

for.cond325:                                      ; preds = %for.inc378, %for.body321
  %243 = load %struct.BMLoop*, %struct.BMLoop** %l136, align 8, !dbg !12140
  %tobool326 = icmp ne %struct.BMLoop* %243, null, !dbg !12137
  br i1 %tobool326, label %for.body327, label %for.end380, !dbg !12137

for.body327:                                      ; preds = %for.cond325
  %244 = load %struct.BMLoop*, %struct.BMLoop** %l136, align 8, !dbg !12142
  %f328 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %244, i32 0, i32 3, !dbg !12142
  %245 = load %struct.BMFace*, %struct.BMFace** %f328, align 8, !dbg !12142
  %head329 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %245, i32 0, i32 0, !dbg !12142
  %data330 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head329, i32 0, i32 0, !dbg !12142
  %246 = load i8*, i8** %data330, align 8, !dbg !12142
  %247 = load i32, i32* %cd_poly_tex_offset, align 4, !dbg !12142
  %idx.ext331 = sext i32 %247 to i64, !dbg !12142
  %add.ptr332 = getelementptr inbounds i8, i8* %246, i64 %idx.ext331, !dbg !12142
  %248 = bitcast i8* %add.ptr332 to %struct.MTexPoly*, !dbg !12142
  store %struct.MTexPoly* %248, %struct.MTexPoly** %tf, align 8, !dbg !12144
  %249 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !12145
  %250 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !12147
  %251 = load %struct.BMLoop*, %struct.BMLoop** %l136, align 8, !dbg !12148
  %f333 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %251, i32 0, i32 3, !dbg !12149
  %252 = load %struct.BMFace*, %struct.BMFace** %f333, align 8, !dbg !12149
  %253 = load %struct.MTexPoly*, %struct.MTexPoly** %tf, align 8, !dbg !12150
  %call334 = call zeroext i8 @uvedit_face_visible_test(%struct.Scene* %249, %struct.Image* %250, %struct.BMFace* %252, %struct.MTexPoly* %253), !dbg !12151
  %tobool335 = icmp ne i8 %call334, 0, !dbg !12151
  br i1 %tobool335, label %if.end337, label %if.then336, !dbg !12152

if.then336:                                       ; preds = %for.body327
  br label %for.inc378, !dbg !12153

if.end337:                                        ; preds = %for.body327
  %254 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !12154
  %255 = load %struct.BMLoop*, %struct.BMLoop** %l136, align 8, !dbg !12156
  %256 = load i32, i32* %cd_loop_uv_offset, align 4, !dbg !12157
  %call338 = call zeroext i8 @uvedit_uv_select_test(%struct.Scene* %254, %struct.BMLoop* %255, i32 %256), !dbg !12158
  %tobool339 = icmp ne i8 %call338, 0, !dbg !12158
  br i1 %tobool339, label %if.then340, label %if.end377, !dbg !12159

if.then340:                                       ; preds = %if.end337
  call void @llvm.dbg.declare(metadata %struct.MLoopUV** %luv341, metadata !12160, metadata !DIExpression()), !dbg !12162
  %257 = load %struct.BMLoop*, %struct.BMLoop** %l136, align 8, !dbg !12163
  %head342 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %257, i32 0, i32 0, !dbg !12163
  %data343 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head342, i32 0, i32 0, !dbg !12163
  %258 = load i8*, i8** %data343, align 8, !dbg !12163
  %259 = load i32, i32* %cd_loop_uv_offset, align 4, !dbg !12163
  %idx.ext344 = sext i32 %259 to i64, !dbg !12163
  %add.ptr345 = getelementptr inbounds i8, i8* %258, i64 %idx.ext344, !dbg !12163
  %260 = bitcast i8* %add.ptr345 to %struct.MLoopUV*, !dbg !12163
  store %struct.MLoopUV* %260, %struct.MLoopUV** %luv341, align 8, !dbg !12162
  %261 = load i32, i32* %tool.addr, align 4, !dbg !12164
  %cmp346 = icmp eq i32 %261, 116, !dbg !12166
  br i1 %cmp346, label %if.then348, label %if.else357, !dbg !12167

if.then348:                                       ; preds = %if.then340
  %262 = load float, float* %a, align 4, !dbg !12168
  %263 = load %struct.MLoopUV*, %struct.MLoopUV** %luv341, align 8, !dbg !12169
  %uv349 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %263, i32 0, i32 0, !dbg !12170
  %arrayidx350 = getelementptr inbounds [2 x float], [2 x float]* %uv349, i64 0, i64 1, !dbg !12169
  %264 = load float, float* %arrayidx350, align 4, !dbg !12169
  %265 = load float*, float** %uv_start, align 8, !dbg !12171
  %arrayidx351 = getelementptr inbounds float, float* %265, i64 1, !dbg !12171
  %266 = load float, float* %arrayidx351, align 4, !dbg !12171
  %sub352 = fsub float %264, %266, !dbg !12172
  %mul = fmul float %262, %sub352, !dbg !12173
  %267 = load float*, float** %uv_start, align 8, !dbg !12174
  %arrayidx353 = getelementptr inbounds float, float* %267, i64 0, !dbg !12174
  %268 = load float, float* %arrayidx353, align 4, !dbg !12174
  %add354 = fadd float %mul, %268, !dbg !12175
  %269 = load %struct.MLoopUV*, %struct.MLoopUV** %luv341, align 8, !dbg !12176
  %uv355 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %269, i32 0, i32 0, !dbg !12177
  %arrayidx356 = getelementptr inbounds [2 x float], [2 x float]* %uv355, i64 0, i64 0, !dbg !12176
  store float %add354, float* %arrayidx356, align 4, !dbg !12178
  br label %if.end376, !dbg !12176

if.else357:                                       ; preds = %if.then340
  %270 = load i32, i32* %tool.addr, align 4, !dbg !12179
  %cmp358 = icmp eq i32 %270, 117, !dbg !12181
  br i1 %cmp358, label %if.then360, label %if.else370, !dbg !12182

if.then360:                                       ; preds = %if.else357
  %271 = load float, float* %a, align 4, !dbg !12183
  %272 = load %struct.MLoopUV*, %struct.MLoopUV** %luv341, align 8, !dbg !12184
  %uv361 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %272, i32 0, i32 0, !dbg !12185
  %arrayidx362 = getelementptr inbounds [2 x float], [2 x float]* %uv361, i64 0, i64 0, !dbg !12184
  %273 = load float, float* %arrayidx362, align 4, !dbg !12184
  %274 = load float*, float** %uv_start, align 8, !dbg !12186
  %arrayidx363 = getelementptr inbounds float, float* %274, i64 0, !dbg !12186
  %275 = load float, float* %arrayidx363, align 4, !dbg !12186
  %sub364 = fsub float %273, %275, !dbg !12187
  %mul365 = fmul float %271, %sub364, !dbg !12188
  %276 = load float*, float** %uv_start, align 8, !dbg !12189
  %arrayidx366 = getelementptr inbounds float, float* %276, i64 1, !dbg !12189
  %277 = load float, float* %arrayidx366, align 4, !dbg !12189
  %add367 = fadd float %mul365, %277, !dbg !12190
  %278 = load %struct.MLoopUV*, %struct.MLoopUV** %luv341, align 8, !dbg !12191
  %uv368 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %278, i32 0, i32 0, !dbg !12192
  %arrayidx369 = getelementptr inbounds [2 x float], [2 x float]* %uv368, i64 0, i64 1, !dbg !12191
  store float %add367, float* %arrayidx369, align 4, !dbg !12193
  br label %if.end375, !dbg !12191

if.else370:                                       ; preds = %if.else357
  %279 = load %struct.MLoopUV*, %struct.MLoopUV** %luv341, align 8, !dbg !12194
  %uv371 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %279, i32 0, i32 0, !dbg !12195
  %arraydecay372 = getelementptr inbounds [2 x float], [2 x float]* %uv371, i64 0, i64 0, !dbg !12194
  %280 = load %struct.MLoopUV*, %struct.MLoopUV** %luv341, align 8, !dbg !12196
  %uv373 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %280, i32 0, i32 0, !dbg !12197
  %arraydecay374 = getelementptr inbounds [2 x float], [2 x float]* %uv373, i64 0, i64 0, !dbg !12196
  %281 = load float*, float** %uv_start, align 8, !dbg !12198
  %282 = load float*, float** %uv_end, align 8, !dbg !12199
  call void @closest_to_line_segment_v2(float* %arraydecay372, float* %arraydecay374, float* %281, float* %282), !dbg !12200
  br label %if.end375

if.end375:                                        ; preds = %if.else370, %if.then360
  br label %if.end376

if.end376:                                        ; preds = %if.end375, %if.then348
  br label %if.end377, !dbg !12201

if.end377:                                        ; preds = %if.end376, %if.end337
  br label %for.inc378, !dbg !12202

for.inc378:                                       ; preds = %if.end377, %if.then336
  %call379 = call i8* @BM_iter_step(%struct.BMIter* %liter138), !dbg !12140
  %283 = bitcast i8* %call379 to %struct.BMLoop*, !dbg !12140
  store %struct.BMLoop* %283, %struct.BMLoop** %l136, align 8, !dbg !12140
  br label %for.cond325, !dbg !12140, !llvm.loop !12203

for.end380:                                       ; preds = %for.cond325
  br label %for.inc381, !dbg !12205

for.inc381:                                       ; preds = %for.end380
  %284 = load i32, i32* %i, align 4, !dbg !12206
  %inc382 = add nsw i32 %284, 1, !dbg !12206
  store i32 %inc382, i32* %i, align 4, !dbg !12206
  br label %for.cond318, !dbg !12207, !llvm.loop !12208

for.end383:                                       ; preds = %for.cond318
  br label %if.end385, !dbg !12210

if.else384:                                       ; preds = %while.end
  br label %if.end385

if.end385:                                        ; preds = %if.else384, %for.end383
  %285 = load %struct.BMVert**, %struct.BMVert*** %eve_line, align 8, !dbg !12211
  %tobool386 = icmp ne %struct.BMVert** %285, null, !dbg !12211
  br i1 %tobool386, label %if.then387, label %if.end388, !dbg !12213

if.then387:                                       ; preds = %if.end385
  %286 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !12214
  %287 = load %struct.BMVert**, %struct.BMVert*** %eve_line, align 8, !dbg !12216
  %288 = bitcast %struct.BMVert** %287 to i8*, !dbg !12216
  call void %286(i8* %288), !dbg !12214
  br label %if.end388, !dbg !12217

if.end388:                                        ; preds = %if.then387, %if.end385
  br label %if.end390, !dbg !12218

if.else389:                                       ; preds = %for.end216
  br label %if.end390

if.end390:                                        ; preds = %if.else389, %if.end388
  br label %if.end391, !dbg !12219

if.end391:                                        ; preds = %if.end390, %lor.lhs.false133
  %289 = load %struct.SpaceImage*, %struct.SpaceImage** %sima, align 8, !dbg !12220
  %290 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !12221
  %291 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !12222
  call void @uvedit_live_unwrap_update(%struct.SpaceImage* %289, %struct.Scene* %290, %struct.Object* %291), !dbg !12223
  %292 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !12224
  %data392 = getelementptr inbounds %struct.Object, %struct.Object* %292, i32 0, i32 19, !dbg !12225
  %293 = load i8*, i8** %data392, align 8, !dbg !12225
  %294 = bitcast i8* %293 to %struct.ID*, !dbg !12224
  call void @DAG_id_tag_update(%struct.ID* %294, i16 signext 0), !dbg !12226
  %295 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !12227
  %296 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !12228
  %data393 = getelementptr inbounds %struct.Object, %struct.Object* %296, i32 0, i32 19, !dbg !12229
  %297 = load i8*, i8** %data393, align 8, !dbg !12229
  call void @WM_event_add_notifier(%struct.bContext* %295, i32 274399232, i8* %297), !dbg !12230
  ret void, !dbg !12231
}

declare dso_local void @_bli_array_grow_func(i8**, i8*, i32, i32, i32, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct.BMVert* @BM_edge_other_vert(%struct.BMEdge* %e, %struct.BMVert* %v) #0 !dbg !12232 {
entry:
  %retval = alloca %struct.BMVert*, align 8
  %e.addr = alloca %struct.BMEdge*, align 8
  %v.addr = alloca %struct.BMVert*, align 8
  store %struct.BMEdge* %e, %struct.BMEdge** %e.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMEdge** %e.addr, metadata !12238, metadata !DIExpression()), !dbg !12239
  store %struct.BMVert* %v, %struct.BMVert** %v.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMVert** %v.addr, metadata !12240, metadata !DIExpression()), !dbg !12241
  %0 = load %struct.BMEdge*, %struct.BMEdge** %e.addr, align 8, !dbg !12242
  %v1 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %0, i32 0, i32 2, !dbg !12244
  %1 = load %struct.BMVert*, %struct.BMVert** %v1, align 8, !dbg !12244
  %2 = load %struct.BMVert*, %struct.BMVert** %v.addr, align 8, !dbg !12245
  %cmp = icmp eq %struct.BMVert* %1, %2, !dbg !12246
  br i1 %cmp, label %if.then, label %if.else, !dbg !12247

if.then:                                          ; preds = %entry
  %3 = load %struct.BMEdge*, %struct.BMEdge** %e.addr, align 8, !dbg !12248
  %v2 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %3, i32 0, i32 3, !dbg !12250
  %4 = load %struct.BMVert*, %struct.BMVert** %v2, align 8, !dbg !12250
  store %struct.BMVert* %4, %struct.BMVert** %retval, align 8, !dbg !12251
  br label %return, !dbg !12251

if.else:                                          ; preds = %entry
  %5 = load %struct.BMEdge*, %struct.BMEdge** %e.addr, align 8, !dbg !12252
  %v21 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %5, i32 0, i32 3, !dbg !12254
  %6 = load %struct.BMVert*, %struct.BMVert** %v21, align 8, !dbg !12254
  %7 = load %struct.BMVert*, %struct.BMVert** %v.addr, align 8, !dbg !12255
  %cmp2 = icmp eq %struct.BMVert* %6, %7, !dbg !12256
  br i1 %cmp2, label %if.then3, label %if.end, !dbg !12257

if.then3:                                         ; preds = %if.else
  %8 = load %struct.BMEdge*, %struct.BMEdge** %e.addr, align 8, !dbg !12258
  %v14 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %8, i32 0, i32 2, !dbg !12260
  %9 = load %struct.BMVert*, %struct.BMVert** %v14, align 8, !dbg !12260
  store %struct.BMVert* %9, %struct.BMVert** %retval, align 8, !dbg !12261
  br label %return, !dbg !12261

if.end:                                           ; preds = %if.else
  br label %if.end5

if.end5:                                          ; preds = %if.end
  store %struct.BMVert* null, %struct.BMVert** %retval, align 8, !dbg !12262
  br label %return, !dbg !12262

return:                                           ; preds = %if.end5, %if.then3, %if.then
  %10 = load %struct.BMVert*, %struct.BMVert** %retval, align 8, !dbg !12263
  ret %struct.BMVert* %10, !dbg !12263
}

; Function Attrs: noinline nounwind uwtable
define internal float* @uv_sel_co_from_eve(%struct.Scene* %scene, %struct.Image* %ima, %struct.BMEditMesh* %em, %struct.BMVert* %eve) #0 !dbg !12264 {
entry:
  %retval = alloca float*, align 8
  %scene.addr = alloca %struct.Scene*, align 8
  %ima.addr = alloca %struct.Image*, align 8
  %em.addr = alloca %struct.BMEditMesh*, align 8
  %eve.addr = alloca %struct.BMVert*, align 8
  %liter = alloca %struct.BMIter, align 8
  %l = alloca %struct.BMLoop*, align 8
  %cd_loop_uv_offset = alloca i32, align 4
  %cd_poly_tex_offset = alloca i32, align 4
  %tf = alloca %struct.MTexPoly*, align 8
  %luv = alloca %struct.MLoopUV*, align 8
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !12267, metadata !DIExpression()), !dbg !12268
  store %struct.Image* %ima, %struct.Image** %ima.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Image** %ima.addr, metadata !12269, metadata !DIExpression()), !dbg !12270
  store %struct.BMEditMesh* %em, %struct.BMEditMesh** %em.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em.addr, metadata !12271, metadata !DIExpression()), !dbg !12272
  store %struct.BMVert* %eve, %struct.BMVert** %eve.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMVert** %eve.addr, metadata !12273, metadata !DIExpression()), !dbg !12274
  call void @llvm.dbg.declare(metadata %struct.BMIter* %liter, metadata !12275, metadata !DIExpression()), !dbg !12276
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l, metadata !12277, metadata !DIExpression()), !dbg !12278
  call void @llvm.dbg.declare(metadata i32* %cd_loop_uv_offset, metadata !12279, metadata !DIExpression()), !dbg !12280
  %0 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !12281
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %0, i32 0, i32 0, !dbg !12282
  %1 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !12282
  %ldata = getelementptr inbounds %struct.BMesh, %struct.BMesh* %1, i32 0, i32 26, !dbg !12283
  %call = call i32 @CustomData_get_offset(%struct.CustomData* %ldata, i32 16), !dbg !12284
  store i32 %call, i32* %cd_loop_uv_offset, align 4, !dbg !12280
  call void @llvm.dbg.declare(metadata i32* %cd_poly_tex_offset, metadata !12285, metadata !DIExpression()), !dbg !12286
  %2 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !12287
  %bm1 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %2, i32 0, i32 0, !dbg !12288
  %3 = load %struct.BMesh*, %struct.BMesh** %bm1, align 8, !dbg !12288
  %pdata = getelementptr inbounds %struct.BMesh, %struct.BMesh* %3, i32 0, i32 27, !dbg !12289
  %call2 = call i32 @CustomData_get_offset(%struct.CustomData* %pdata, i32 15), !dbg !12290
  store i32 %call2, i32* %cd_poly_tex_offset, align 4, !dbg !12286
  %4 = load %struct.BMVert*, %struct.BMVert** %eve.addr, align 8, !dbg !12291
  %5 = bitcast %struct.BMVert* %4 to i8*, !dbg !12291
  %call3 = call i8* @BM_iter_new(%struct.BMIter* %liter, %struct.BMesh* null, i8 zeroext 6, i8* %5), !dbg !12291
  %6 = bitcast i8* %call3 to %struct.BMLoop*, !dbg !12291
  store %struct.BMLoop* %6, %struct.BMLoop** %l, align 8, !dbg !12291
  br label %for.cond, !dbg !12291

for.cond:                                         ; preds = %for.inc, %entry
  %7 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !12293
  %tobool = icmp ne %struct.BMLoop* %7, null, !dbg !12291
  br i1 %tobool, label %for.body, label %for.end, !dbg !12291

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.MTexPoly** %tf, metadata !12295, metadata !DIExpression()), !dbg !12297
  %8 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !12298
  %f = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %8, i32 0, i32 3, !dbg !12298
  %9 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !12298
  %head = getelementptr inbounds %struct.BMFace, %struct.BMFace* %9, i32 0, i32 0, !dbg !12298
  %data = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head, i32 0, i32 0, !dbg !12298
  %10 = load i8*, i8** %data, align 8, !dbg !12298
  %11 = load i32, i32* %cd_poly_tex_offset, align 4, !dbg !12298
  %idx.ext = sext i32 %11 to i64, !dbg !12298
  %add.ptr = getelementptr inbounds i8, i8* %10, i64 %idx.ext, !dbg !12298
  %12 = bitcast i8* %add.ptr to %struct.MTexPoly*, !dbg !12298
  store %struct.MTexPoly* %12, %struct.MTexPoly** %tf, align 8, !dbg !12297
  %13 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !12299
  %14 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !12301
  %15 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !12302
  %f4 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %15, i32 0, i32 3, !dbg !12303
  %16 = load %struct.BMFace*, %struct.BMFace** %f4, align 8, !dbg !12303
  %17 = load %struct.MTexPoly*, %struct.MTexPoly** %tf, align 8, !dbg !12304
  %call5 = call zeroext i8 @uvedit_face_visible_test(%struct.Scene* %13, %struct.Image* %14, %struct.BMFace* %16, %struct.MTexPoly* %17), !dbg !12305
  %tobool6 = icmp ne i8 %call5, 0, !dbg !12305
  br i1 %tobool6, label %if.end, label %if.then, !dbg !12306

if.then:                                          ; preds = %for.body
  br label %for.inc, !dbg !12307

if.end:                                           ; preds = %for.body
  %18 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !12308
  %19 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !12310
  %20 = load i32, i32* %cd_loop_uv_offset, align 4, !dbg !12311
  %call7 = call zeroext i8 @uvedit_uv_select_test(%struct.Scene* %18, %struct.BMLoop* %19, i32 %20), !dbg !12312
  %tobool8 = icmp ne i8 %call7, 0, !dbg !12312
  br i1 %tobool8, label %if.then9, label %if.end14, !dbg !12313

if.then9:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.MLoopUV** %luv, metadata !12314, metadata !DIExpression()), !dbg !12316
  %21 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !12317
  %head10 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %21, i32 0, i32 0, !dbg !12317
  %data11 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head10, i32 0, i32 0, !dbg !12317
  %22 = load i8*, i8** %data11, align 8, !dbg !12317
  %23 = load i32, i32* %cd_loop_uv_offset, align 4, !dbg !12317
  %idx.ext12 = sext i32 %23 to i64, !dbg !12317
  %add.ptr13 = getelementptr inbounds i8, i8* %22, i64 %idx.ext12, !dbg !12317
  %24 = bitcast i8* %add.ptr13 to %struct.MLoopUV*, !dbg !12317
  store %struct.MLoopUV* %24, %struct.MLoopUV** %luv, align 8, !dbg !12316
  %25 = load %struct.MLoopUV*, %struct.MLoopUV** %luv, align 8, !dbg !12318
  %uv = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %25, i32 0, i32 0, !dbg !12319
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %uv, i64 0, i64 0, !dbg !12318
  store float* %arraydecay, float** %retval, align 8, !dbg !12320
  br label %return, !dbg !12320

if.end14:                                         ; preds = %if.end
  br label %for.inc, !dbg !12321

for.inc:                                          ; preds = %if.end14, %if.then
  %call15 = call i8* @BM_iter_step(%struct.BMIter* %liter), !dbg !12293
  %26 = bitcast i8* %call15 to %struct.BMLoop*, !dbg !12293
  store %struct.BMLoop* %26, %struct.BMLoop** %l, align 8, !dbg !12293
  br label %for.cond, !dbg !12293, !llvm.loop !12322

for.end:                                          ; preds = %for.cond
  store float* null, float** %retval, align 8, !dbg !12324
  br label %return, !dbg !12324

return:                                           ; preds = %for.end, %if.then9
  %27 = load float*, float** %retval, align 8, !dbg !12325
  ret float* %27, !dbg !12325
}

declare dso_local void @closest_to_line_segment_v2(float*, float*, float*, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @uv_seams_from_islands_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !12326 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %vmap = alloca %struct.UvVertMap*, align 8
  %ob = alloca %struct.Object*, align 8
  %me = alloca %struct.Mesh*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  %editedge = alloca %struct.BMEdge*, align 8
  %limit = alloca [2 x float], align 4
  %mark_seams = alloca i8, align 1
  %mark_sharp = alloca i8, align 1
  %bm = alloca %struct.BMesh*, align 8
  %iter = alloca %struct.BMIter, align 8
  %separated1 = alloca i8, align 1
  %separated2 = alloca i8, align 1
  %faces_separated = alloca i8, align 1
  %v1coincident = alloca i8, align 1
  %commonFaces = alloca i32, align 4
  %efa1 = alloca %struct.BMFace*, align 8
  %efa2 = alloca %struct.BMFace*, align 8
  %mv1 = alloca %struct.UvMapVert*, align 8
  %mvinit1 = alloca %struct.UvMapVert*, align 8
  %mv2 = alloca %struct.UvMapVert*, align 8
  %mvinit2 = alloca %struct.UvMapVert*, align 8
  %mviter = alloca %struct.UvMapVert*, align 8
  %mv2cache = alloca %struct.UvMapVert*, align 8
  %mv2sep = alloca %struct.UvMapVert*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !12327, metadata !DIExpression()), !dbg !12328
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !12329, metadata !DIExpression()), !dbg !12330
  call void @llvm.dbg.declare(metadata %struct.UvVertMap** %vmap, metadata !12331, metadata !DIExpression()), !dbg !12332
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !12333, metadata !DIExpression()), !dbg !12334
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !12335
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !12336
  store %struct.Object* %call, %struct.Object** %ob, align 8, !dbg !12334
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me, metadata !12337, metadata !DIExpression()), !dbg !12338
  %1 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !12339
  %data = getelementptr inbounds %struct.Object, %struct.Object* %1, i32 0, i32 19, !dbg !12340
  %2 = load i8*, i8** %data, align 8, !dbg !12340
  %3 = bitcast i8* %2 to %struct.Mesh*, !dbg !12341
  store %struct.Mesh* %3, %struct.Mesh** %me, align 8, !dbg !12338
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !12342, metadata !DIExpression()), !dbg !12343
  call void @llvm.dbg.declare(metadata %struct.BMEdge** %editedge, metadata !12344, metadata !DIExpression()), !dbg !12345
  call void @llvm.dbg.declare(metadata [2 x float]* %limit, metadata !12346, metadata !DIExpression()), !dbg !12347
  %4 = bitcast [2 x float]* %limit to i8*, !dbg !12347
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 4 bitcast ([2 x float]* @__const.uv_seams_from_islands_exec.limit to i8*), i64 8, i1 false), !dbg !12347
  call void @llvm.dbg.declare(metadata i8* %mark_seams, metadata !12348, metadata !DIExpression()), !dbg !12349
  %5 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !12350
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %5, i32 0, i32 7, !dbg !12351
  %6 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !12351
  %call1 = call i32 @RNA_boolean_get(%struct.PointerRNA* %6, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.132, i64 0, i64 0)), !dbg !12352
  %conv = trunc i32 %call1 to i8, !dbg !12352
  store i8 %conv, i8* %mark_seams, align 1, !dbg !12349
  call void @llvm.dbg.declare(metadata i8* %mark_sharp, metadata !12353, metadata !DIExpression()), !dbg !12354
  %7 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !12355
  %ptr2 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %7, i32 0, i32 7, !dbg !12356
  %8 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr2, align 8, !dbg !12356
  %call3 = call i32 @RNA_boolean_get(%struct.PointerRNA* %8, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.135, i64 0, i64 0)), !dbg !12357
  %conv4 = trunc i32 %call3 to i8, !dbg !12357
  store i8 %conv4, i8* %mark_sharp, align 1, !dbg !12354
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm, metadata !12358, metadata !DIExpression()), !dbg !12359
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iter, metadata !12360, metadata !DIExpression()), !dbg !12361
  %9 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !12362
  %edit_btmesh = getelementptr inbounds %struct.Mesh, %struct.Mesh* %9, i32 0, i32 20, !dbg !12363
  %10 = load %struct.BMEditMesh*, %struct.BMEditMesh** %edit_btmesh, align 8, !dbg !12363
  store %struct.BMEditMesh* %10, %struct.BMEditMesh** %em, align 8, !dbg !12364
  %11 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !12365
  %bm5 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %11, i32 0, i32 0, !dbg !12366
  %12 = load %struct.BMesh*, %struct.BMesh** %bm5, align 8, !dbg !12366
  store %struct.BMesh* %12, %struct.BMesh** %bm, align 8, !dbg !12367
  %13 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !12368
  %call6 = call zeroext i8 @EDBM_mtexpoly_check(%struct.BMEditMesh* %13), !dbg !12370
  %tobool = icmp ne i8 %call6, 0, !dbg !12370
  br i1 %tobool, label %if.end, label %if.then, !dbg !12371

if.then:                                          ; preds = %entry
  store i32 2, i32* %retval, align 4, !dbg !12372
  br label %return, !dbg !12372

if.end:                                           ; preds = %entry
  %14 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !12374
  call void @BM_mesh_elem_table_ensure(%struct.BMesh* %14, i8 zeroext 8), !dbg !12375
  %15 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !12376
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %limit, i64 0, i64 0, !dbg !12377
  %call7 = call %struct.UvVertMap* @BM_uv_vert_map_create(%struct.BMesh* %15, i8 zeroext 0, float* %arraydecay), !dbg !12378
  store %struct.UvVertMap* %call7, %struct.UvVertMap** %vmap, align 8, !dbg !12379
  %16 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !12380
  %call8 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %16, i8 zeroext 2, i8* null), !dbg !12380
  %17 = bitcast i8* %call8 to %struct.BMEdge*, !dbg !12380
  store %struct.BMEdge* %17, %struct.BMEdge** %editedge, align 8, !dbg !12380
  br label %for.cond, !dbg !12380

for.cond:                                         ; preds = %for.inc87, %if.end
  %18 = load %struct.BMEdge*, %struct.BMEdge** %editedge, align 8, !dbg !12382
  %tobool9 = icmp ne %struct.BMEdge* %18, null, !dbg !12380
  br i1 %tobool9, label %for.body, label %for.end89, !dbg !12380

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i8* %separated1, metadata !12384, metadata !DIExpression()), !dbg !12386
  store i8 0, i8* %separated1, align 1, !dbg !12386
  call void @llvm.dbg.declare(metadata i8* %separated2, metadata !12387, metadata !DIExpression()), !dbg !12388
  call void @llvm.dbg.declare(metadata i8* %faces_separated, metadata !12389, metadata !DIExpression()), !dbg !12390
  store i8 0, i8* %faces_separated, align 1, !dbg !12390
  call void @llvm.dbg.declare(metadata i8* %v1coincident, metadata !12391, metadata !DIExpression()), !dbg !12392
  store i8 1, i8* %v1coincident, align 1, !dbg !12392
  call void @llvm.dbg.declare(metadata i32* %commonFaces, metadata !12393, metadata !DIExpression()), !dbg !12394
  store i32 0, i32* %commonFaces, align 4, !dbg !12394
  call void @llvm.dbg.declare(metadata %struct.BMFace** %efa1, metadata !12395, metadata !DIExpression()), !dbg !12396
  call void @llvm.dbg.declare(metadata %struct.BMFace** %efa2, metadata !12397, metadata !DIExpression()), !dbg !12398
  call void @llvm.dbg.declare(metadata %struct.UvMapVert** %mv1, metadata !12399, metadata !DIExpression()), !dbg !12400
  call void @llvm.dbg.declare(metadata %struct.UvMapVert** %mvinit1, metadata !12401, metadata !DIExpression()), !dbg !12402
  call void @llvm.dbg.declare(metadata %struct.UvMapVert** %mv2, metadata !12403, metadata !DIExpression()), !dbg !12404
  call void @llvm.dbg.declare(metadata %struct.UvMapVert** %mvinit2, metadata !12405, metadata !DIExpression()), !dbg !12406
  call void @llvm.dbg.declare(metadata %struct.UvMapVert** %mviter, metadata !12407, metadata !DIExpression()), !dbg !12408
  call void @llvm.dbg.declare(metadata %struct.UvMapVert** %mv2cache, metadata !12409, metadata !DIExpression()), !dbg !12410
  store %struct.UvMapVert* null, %struct.UvMapVert** %mv2cache, align 8, !dbg !12410
  call void @llvm.dbg.declare(metadata %struct.UvMapVert** %mv2sep, metadata !12411, metadata !DIExpression()), !dbg !12412
  store %struct.UvMapVert* null, %struct.UvMapVert** %mv2sep, align 8, !dbg !12412
  %19 = load %struct.UvVertMap*, %struct.UvVertMap** %vmap, align 8, !dbg !12413
  %vert = getelementptr inbounds %struct.UvVertMap, %struct.UvVertMap* %19, i32 0, i32 0, !dbg !12414
  %20 = load %struct.UvMapVert**, %struct.UvMapVert*** %vert, align 8, !dbg !12414
  %21 = load %struct.BMEdge*, %struct.BMEdge** %editedge, align 8, !dbg !12415
  %v1 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %21, i32 0, i32 2, !dbg !12415
  %22 = load %struct.BMVert*, %struct.BMVert** %v1, align 8, !dbg !12415
  %head = getelementptr inbounds %struct.BMVert, %struct.BMVert* %22, i32 0, i32 0, !dbg !12415
  %call10 = call i32 @_bm_elem_index_get(%struct.BMHeader* %head), !dbg !12415
  %idxprom = sext i32 %call10 to i64, !dbg !12413
  %arrayidx = getelementptr inbounds %struct.UvMapVert*, %struct.UvMapVert** %20, i64 %idxprom, !dbg !12413
  %23 = load %struct.UvMapVert*, %struct.UvMapVert** %arrayidx, align 8, !dbg !12413
  store %struct.UvMapVert* %23, %struct.UvMapVert** %mvinit1, align 8, !dbg !12416
  %24 = load i8, i8* %mark_seams, align 1, !dbg !12417
  %tobool11 = icmp ne i8 %24, 0, !dbg !12417
  br i1 %tobool11, label %if.then12, label %if.end14, !dbg !12419

if.then12:                                        ; preds = %for.body
  %25 = load %struct.BMEdge*, %struct.BMEdge** %editedge, align 8, !dbg !12420
  %head13 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %25, i32 0, i32 0, !dbg !12420
  call void @_bm_elem_flag_disable(%struct.BMHeader* %head13, i8 zeroext 4), !dbg !12420
  br label %if.end14, !dbg !12420

if.end14:                                         ; preds = %if.then12, %for.body
  %26 = load %struct.UvMapVert*, %struct.UvMapVert** %mvinit1, align 8, !dbg !12421
  store %struct.UvMapVert* %26, %struct.UvMapVert** %mv1, align 8, !dbg !12423
  br label %for.cond15, !dbg !12424

for.cond15:                                       ; preds = %for.inc73, %if.end14
  %27 = load %struct.UvMapVert*, %struct.UvMapVert** %mv1, align 8, !dbg !12425
  %tobool16 = icmp ne %struct.UvMapVert* %27, null, !dbg !12425
  br i1 %tobool16, label %land.rhs, label %land.end, !dbg !12427

land.rhs:                                         ; preds = %for.cond15
  %28 = load i8, i8* %faces_separated, align 1, !dbg !12428
  %tobool17 = icmp ne i8 %28, 0, !dbg !12429
  %lnot = xor i1 %tobool17, true, !dbg !12429
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond15
  %29 = phi i1 [ false, %for.cond15 ], [ %lnot, %land.rhs ], !dbg !12430
  br i1 %29, label %for.body18, label %for.end75, !dbg !12431

for.body18:                                       ; preds = %land.end
  %30 = load %struct.UvMapVert*, %struct.UvMapVert** %mv1, align 8, !dbg !12432
  %separate = getelementptr inbounds %struct.UvMapVert, %struct.UvMapVert* %30, i32 0, i32 3, !dbg !12435
  %31 = load i8, i8* %separate, align 1, !dbg !12435
  %conv19 = zext i8 %31 to i32, !dbg !12432
  %tobool20 = icmp ne i32 %conv19, 0, !dbg !12432
  br i1 %tobool20, label %land.lhs.true, label %if.end23, !dbg !12436

land.lhs.true:                                    ; preds = %for.body18
  %32 = load i32, i32* %commonFaces, align 4, !dbg !12437
  %tobool21 = icmp ne i32 %32, 0, !dbg !12437
  br i1 %tobool21, label %if.then22, label %if.end23, !dbg !12438

if.then22:                                        ; preds = %land.lhs.true
  store i8 0, i8* %v1coincident, align 1, !dbg !12439
  br label %if.end23, !dbg !12440

if.end23:                                         ; preds = %if.then22, %land.lhs.true, %for.body18
  store i8 0, i8* %separated2, align 1, !dbg !12441
  %33 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !12442
  %34 = load %struct.UvMapVert*, %struct.UvMapVert** %mv1, align 8, !dbg !12443
  %f = getelementptr inbounds %struct.UvMapVert, %struct.UvMapVert* %34, i32 0, i32 1, !dbg !12444
  %35 = load i32, i32* %f, align 8, !dbg !12444
  %call24 = call %struct.BMFace* @BM_face_at_index(%struct.BMesh* %33, i32 %35), !dbg !12445
  store %struct.BMFace* %call24, %struct.BMFace** %efa1, align 8, !dbg !12446
  %36 = load %struct.UvVertMap*, %struct.UvVertMap** %vmap, align 8, !dbg !12447
  %vert25 = getelementptr inbounds %struct.UvVertMap, %struct.UvVertMap* %36, i32 0, i32 0, !dbg !12448
  %37 = load %struct.UvMapVert**, %struct.UvMapVert*** %vert25, align 8, !dbg !12448
  %38 = load %struct.BMEdge*, %struct.BMEdge** %editedge, align 8, !dbg !12449
  %v2 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %38, i32 0, i32 3, !dbg !12449
  %39 = load %struct.BMVert*, %struct.BMVert** %v2, align 8, !dbg !12449
  %head26 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %39, i32 0, i32 0, !dbg !12449
  %call27 = call i32 @_bm_elem_index_get(%struct.BMHeader* %head26), !dbg !12449
  %idxprom28 = sext i32 %call27 to i64, !dbg !12447
  %arrayidx29 = getelementptr inbounds %struct.UvMapVert*, %struct.UvMapVert** %37, i64 %idxprom28, !dbg !12447
  %40 = load %struct.UvMapVert*, %struct.UvMapVert** %arrayidx29, align 8, !dbg !12447
  store %struct.UvMapVert* %40, %struct.UvMapVert** %mvinit2, align 8, !dbg !12450
  %41 = load %struct.UvMapVert*, %struct.UvMapVert** %mvinit2, align 8, !dbg !12451
  store %struct.UvMapVert* %41, %struct.UvMapVert** %mv2, align 8, !dbg !12453
  br label %for.cond30, !dbg !12454

for.cond30:                                       ; preds = %for.inc70, %if.end23
  %42 = load %struct.UvMapVert*, %struct.UvMapVert** %mv2, align 8, !dbg !12455
  %tobool31 = icmp ne %struct.UvMapVert* %42, null, !dbg !12457
  br i1 %tobool31, label %for.body32, label %for.end72, !dbg !12457

for.body32:                                       ; preds = %for.cond30
  %43 = load %struct.UvMapVert*, %struct.UvMapVert** %mv2, align 8, !dbg !12458
  %separate33 = getelementptr inbounds %struct.UvMapVert, %struct.UvMapVert* %43, i32 0, i32 3, !dbg !12461
  %44 = load i8, i8* %separate33, align 1, !dbg !12461
  %tobool34 = icmp ne i8 %44, 0, !dbg !12458
  br i1 %tobool34, label %if.then35, label %if.end36, !dbg !12462

if.then35:                                        ; preds = %for.body32
  %45 = load %struct.UvMapVert*, %struct.UvMapVert** %mv2, align 8, !dbg !12463
  store %struct.UvMapVert* %45, %struct.UvMapVert** %mv2sep, align 8, !dbg !12464
  br label %if.end36, !dbg !12465

if.end36:                                         ; preds = %if.then35, %for.body32
  %46 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !12466
  %47 = load %struct.UvMapVert*, %struct.UvMapVert** %mv2, align 8, !dbg !12467
  %f37 = getelementptr inbounds %struct.UvMapVert, %struct.UvMapVert* %47, i32 0, i32 1, !dbg !12468
  %48 = load i32, i32* %f37, align 8, !dbg !12468
  %call38 = call %struct.BMFace* @BM_face_at_index(%struct.BMesh* %46, i32 %48), !dbg !12469
  store %struct.BMFace* %call38, %struct.BMFace** %efa2, align 8, !dbg !12470
  %49 = load %struct.BMFace*, %struct.BMFace** %efa1, align 8, !dbg !12471
  %50 = load %struct.BMFace*, %struct.BMFace** %efa2, align 8, !dbg !12473
  %cmp = icmp eq %struct.BMFace* %49, %50, !dbg !12474
  br i1 %cmp, label %if.then40, label %if.end69, !dbg !12475

if.then40:                                        ; preds = %if.end36
  %51 = load i8, i8* %v1coincident, align 1, !dbg !12476
  %tobool41 = icmp ne i8 %51, 0, !dbg !12476
  br i1 %tobool41, label %if.then42, label %if.else61, !dbg !12479

if.then42:                                        ; preds = %if.then40
  %52 = load %struct.UvMapVert*, %struct.UvMapVert** %mv2cache, align 8, !dbg !12480
  %tobool43 = icmp ne %struct.UvMapVert* %52, null, !dbg !12480
  br i1 %tobool43, label %if.then44, label %if.else, !dbg !12483

if.then44:                                        ; preds = %if.then42
  store i8 1, i8* %separated2, align 1, !dbg !12484
  %53 = load %struct.UvMapVert*, %struct.UvMapVert** %mv2cache, align 8, !dbg !12486
  store %struct.UvMapVert* %53, %struct.UvMapVert** %mviter, align 8, !dbg !12488
  br label %for.cond45, !dbg !12489

for.cond45:                                       ; preds = %for.inc, %if.then44
  %54 = load %struct.UvMapVert*, %struct.UvMapVert** %mviter, align 8, !dbg !12490
  %tobool46 = icmp ne %struct.UvMapVert* %54, null, !dbg !12492
  br i1 %tobool46, label %for.body47, label %for.end, !dbg !12492

for.body47:                                       ; preds = %for.cond45
  %55 = load %struct.UvMapVert*, %struct.UvMapVert** %mviter, align 8, !dbg !12493
  %separate48 = getelementptr inbounds %struct.UvMapVert, %struct.UvMapVert* %55, i32 0, i32 3, !dbg !12496
  %56 = load i8, i8* %separate48, align 1, !dbg !12496
  %conv49 = zext i8 %56 to i32, !dbg !12493
  %tobool50 = icmp ne i32 %conv49, 0, !dbg !12493
  br i1 %tobool50, label %land.lhs.true51, label %if.end55, !dbg !12497

land.lhs.true51:                                  ; preds = %for.body47
  %57 = load %struct.UvMapVert*, %struct.UvMapVert** %mviter, align 8, !dbg !12498
  %58 = load %struct.UvMapVert*, %struct.UvMapVert** %mv2cache, align 8, !dbg !12499
  %cmp52 = icmp ne %struct.UvMapVert* %57, %58, !dbg !12500
  br i1 %cmp52, label %if.then54, label %if.end55, !dbg !12501

if.then54:                                        ; preds = %land.lhs.true51
  br label %for.end, !dbg !12502

if.end55:                                         ; preds = %land.lhs.true51, %for.body47
  %59 = load %struct.UvMapVert*, %struct.UvMapVert** %mviter, align 8, !dbg !12503
  %60 = load %struct.UvMapVert*, %struct.UvMapVert** %mv2, align 8, !dbg !12505
  %cmp56 = icmp eq %struct.UvMapVert* %59, %60, !dbg !12506
  br i1 %cmp56, label %if.then58, label %if.end59, !dbg !12507

if.then58:                                        ; preds = %if.end55
  store i8 0, i8* %separated2, align 1, !dbg !12508
  br label %if.end59, !dbg !12509

if.end59:                                         ; preds = %if.then58, %if.end55
  br label %for.inc, !dbg !12510

for.inc:                                          ; preds = %if.end59
  %61 = load %struct.UvMapVert*, %struct.UvMapVert** %mviter, align 8, !dbg !12511
  %next = getelementptr inbounds %struct.UvMapVert, %struct.UvMapVert* %61, i32 0, i32 0, !dbg !12512
  %62 = load %struct.UvMapVert*, %struct.UvMapVert** %next, align 8, !dbg !12512
  store %struct.UvMapVert* %62, %struct.UvMapVert** %mviter, align 8, !dbg !12513
  br label %for.cond45, !dbg !12514, !llvm.loop !12515

for.end:                                          ; preds = %if.then54, %for.cond45
  br label %if.end60, !dbg !12517

if.else:                                          ; preds = %if.then42
  %63 = load %struct.UvMapVert*, %struct.UvMapVert** %mv2sep, align 8, !dbg !12518
  store %struct.UvMapVert* %63, %struct.UvMapVert** %mv2cache, align 8, !dbg !12520
  store i32 1, i32* %commonFaces, align 4, !dbg !12521
  br label %if.end60

if.end60:                                         ; preds = %if.else, %for.end
  br label %if.end62, !dbg !12522

if.else61:                                        ; preds = %if.then40
  store i8 1, i8* %separated1, align 1, !dbg !12523
  br label %if.end62

if.end62:                                         ; preds = %if.else61, %if.end60
  %64 = load i8, i8* %separated1, align 1, !dbg !12524
  %conv63 = zext i8 %64 to i32, !dbg !12524
  %tobool64 = icmp ne i32 %conv63, 0, !dbg !12524
  br i1 %tobool64, label %if.then67, label %lor.lhs.false, !dbg !12526

lor.lhs.false:                                    ; preds = %if.end62
  %65 = load i8, i8* %separated2, align 1, !dbg !12527
  %conv65 = zext i8 %65 to i32, !dbg !12527
  %tobool66 = icmp ne i32 %conv65, 0, !dbg !12527
  br i1 %tobool66, label %if.then67, label %if.end68, !dbg !12528

if.then67:                                        ; preds = %lor.lhs.false, %if.end62
  store i8 1, i8* %faces_separated, align 1, !dbg !12529
  br label %for.end72, !dbg !12531

if.end68:                                         ; preds = %lor.lhs.false
  br label %if.end69, !dbg !12532

if.end69:                                         ; preds = %if.end68, %if.end36
  br label %for.inc70, !dbg !12533

for.inc70:                                        ; preds = %if.end69
  %66 = load %struct.UvMapVert*, %struct.UvMapVert** %mv2, align 8, !dbg !12534
  %next71 = getelementptr inbounds %struct.UvMapVert, %struct.UvMapVert* %66, i32 0, i32 0, !dbg !12535
  %67 = load %struct.UvMapVert*, %struct.UvMapVert** %next71, align 8, !dbg !12535
  store %struct.UvMapVert* %67, %struct.UvMapVert** %mv2, align 8, !dbg !12536
  br label %for.cond30, !dbg !12537, !llvm.loop !12538

for.end72:                                        ; preds = %if.then67, %for.cond30
  br label %for.inc73, !dbg !12540

for.inc73:                                        ; preds = %for.end72
  %68 = load %struct.UvMapVert*, %struct.UvMapVert** %mv1, align 8, !dbg !12541
  %next74 = getelementptr inbounds %struct.UvMapVert, %struct.UvMapVert* %68, i32 0, i32 0, !dbg !12542
  %69 = load %struct.UvMapVert*, %struct.UvMapVert** %next74, align 8, !dbg !12542
  store %struct.UvMapVert* %69, %struct.UvMapVert** %mv1, align 8, !dbg !12543
  br label %for.cond15, !dbg !12544, !llvm.loop !12545

for.end75:                                        ; preds = %land.end
  %70 = load i8, i8* %faces_separated, align 1, !dbg !12547
  %tobool76 = icmp ne i8 %70, 0, !dbg !12547
  br i1 %tobool76, label %if.then77, label %if.end86, !dbg !12549

if.then77:                                        ; preds = %for.end75
  %71 = load i8, i8* %mark_seams, align 1, !dbg !12550
  %tobool78 = icmp ne i8 %71, 0, !dbg !12550
  br i1 %tobool78, label %if.then79, label %if.end81, !dbg !12553

if.then79:                                        ; preds = %if.then77
  %72 = load %struct.BMEdge*, %struct.BMEdge** %editedge, align 8, !dbg !12554
  %head80 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %72, i32 0, i32 0, !dbg !12554
  call void @_bm_elem_flag_enable(%struct.BMHeader* %head80, i8 zeroext 4), !dbg !12554
  br label %if.end81, !dbg !12554

if.end81:                                         ; preds = %if.then79, %if.then77
  %73 = load i8, i8* %mark_sharp, align 1, !dbg !12555
  %tobool82 = icmp ne i8 %73, 0, !dbg !12555
  br i1 %tobool82, label %if.then83, label %if.end85, !dbg !12557

if.then83:                                        ; preds = %if.end81
  %74 = load %struct.BMEdge*, %struct.BMEdge** %editedge, align 8, !dbg !12558
  %head84 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %74, i32 0, i32 0, !dbg !12558
  call void @_bm_elem_flag_disable(%struct.BMHeader* %head84, i8 zeroext 8), !dbg !12558
  br label %if.end85, !dbg !12558

if.end85:                                         ; preds = %if.then83, %if.end81
  br label %if.end86, !dbg !12559

if.end86:                                         ; preds = %if.end85, %for.end75
  br label %for.inc87, !dbg !12560

for.inc87:                                        ; preds = %if.end86
  %call88 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !12382
  %75 = bitcast i8* %call88 to %struct.BMEdge*, !dbg !12382
  store %struct.BMEdge* %75, %struct.BMEdge** %editedge, align 8, !dbg !12382
  br label %for.cond, !dbg !12382, !llvm.loop !12561

for.end89:                                        ; preds = %for.cond
  %76 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !12563
  %drawflag = getelementptr inbounds %struct.Mesh, %struct.Mesh* %76, i32 0, i32 36, !dbg !12564
  %77 = load i32, i32* %drawflag, align 8, !dbg !12565
  %or = or i32 %77, 128, !dbg !12565
  store i32 %or, i32* %drawflag, align 8, !dbg !12565
  %78 = load %struct.UvVertMap*, %struct.UvVertMap** %vmap, align 8, !dbg !12566
  call void @BM_uv_vert_map_free(%struct.UvVertMap* %78), !dbg !12567
  %79 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !12568
  %id = getelementptr inbounds %struct.Mesh, %struct.Mesh* %79, i32 0, i32 0, !dbg !12569
  call void @DAG_id_tag_update(%struct.ID* %id, i16 signext 0), !dbg !12570
  %80 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !12571
  %81 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !12572
  %82 = bitcast %struct.Mesh* %81 to i8*, !dbg !12572
  call void @WM_event_add_notifier(%struct.bContext* %80, i32 274399232, i8* %82), !dbg !12573
  store i32 4, i32* %retval, align 4, !dbg !12574
  br label %return, !dbg !12574

return:                                           ; preds = %for.end89, %if.then
  %83 = load i32, i32* %retval, align 4, !dbg !12575
  ret i32 %83, !dbg !12575
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

; Function Attrs: noinline nounwind uwtable
define internal i32 @uv_mark_seam_exec(%struct.bContext* %C, %struct.wmOperator* %UNUSED_op) #0 !dbg !12576 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_op.addr = alloca %struct.wmOperator*, align 8
  %ob = alloca %struct.Object*, align 8
  %scene = alloca %struct.Scene*, align 8
  %me = alloca %struct.Mesh*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  %bm = alloca %struct.BMesh*, align 8
  %efa = alloca %struct.BMFace*, align 8
  %loop = alloca %struct.BMLoop*, align 8
  %iter = alloca %struct.BMIter, align 8
  %liter = alloca %struct.BMIter, align 8
  %cd_loop_uv_offset = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !12577, metadata !DIExpression()), !dbg !12578
  store %struct.wmOperator* %UNUSED_op, %struct.wmOperator** %UNUSED_op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %UNUSED_op.addr, metadata !12579, metadata !DIExpression()), !dbg !12580
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !12581, metadata !DIExpression()), !dbg !12582
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !12583
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !12584
  store %struct.Object* %call, %struct.Object** %ob, align 8, !dbg !12582
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene, metadata !12585, metadata !DIExpression()), !dbg !12586
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !12587
  %call1 = call %struct.Scene* @CTX_data_scene(%struct.bContext* %1), !dbg !12588
  store %struct.Scene* %call1, %struct.Scene** %scene, align 8, !dbg !12586
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me, metadata !12589, metadata !DIExpression()), !dbg !12590
  %2 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !12591
  %data = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 19, !dbg !12592
  %3 = load i8*, i8** %data, align 8, !dbg !12592
  %4 = bitcast i8* %3 to %struct.Mesh*, !dbg !12593
  store %struct.Mesh* %4, %struct.Mesh** %me, align 8, !dbg !12590
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !12594, metadata !DIExpression()), !dbg !12595
  %5 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !12596
  %edit_btmesh = getelementptr inbounds %struct.Mesh, %struct.Mesh* %5, i32 0, i32 20, !dbg !12597
  %6 = load %struct.BMEditMesh*, %struct.BMEditMesh** %edit_btmesh, align 8, !dbg !12597
  store %struct.BMEditMesh* %6, %struct.BMEditMesh** %em, align 8, !dbg !12595
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm, metadata !12598, metadata !DIExpression()), !dbg !12599
  %7 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !12600
  %bm2 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %7, i32 0, i32 0, !dbg !12601
  %8 = load %struct.BMesh*, %struct.BMesh** %bm2, align 8, !dbg !12601
  store %struct.BMesh* %8, %struct.BMesh** %bm, align 8, !dbg !12599
  call void @llvm.dbg.declare(metadata %struct.BMFace** %efa, metadata !12602, metadata !DIExpression()), !dbg !12603
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %loop, metadata !12604, metadata !DIExpression()), !dbg !12605
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iter, metadata !12606, metadata !DIExpression()), !dbg !12607
  call void @llvm.dbg.declare(metadata %struct.BMIter* %liter, metadata !12608, metadata !DIExpression()), !dbg !12609
  call void @llvm.dbg.declare(metadata i32* %cd_loop_uv_offset, metadata !12610, metadata !DIExpression()), !dbg !12611
  %9 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !12612
  %ldata = getelementptr inbounds %struct.BMesh, %struct.BMesh* %9, i32 0, i32 26, !dbg !12613
  %call3 = call i32 @CustomData_get_offset(%struct.CustomData* %ldata, i32 16), !dbg !12614
  store i32 %call3, i32* %cd_loop_uv_offset, align 4, !dbg !12611
  %10 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !12615
  %call4 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %10, i8 zeroext 3, i8* null), !dbg !12615
  %11 = bitcast i8* %call4 to %struct.BMFace*, !dbg !12615
  store %struct.BMFace* %11, %struct.BMFace** %efa, align 8, !dbg !12615
  br label %for.cond, !dbg !12615

for.cond:                                         ; preds = %for.inc12, %entry
  %12 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !12617
  %tobool = icmp ne %struct.BMFace* %12, null, !dbg !12615
  br i1 %tobool, label %for.body, label %for.end14, !dbg !12615

for.body:                                         ; preds = %for.cond
  %13 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !12619
  %14 = bitcast %struct.BMFace* %13 to i8*, !dbg !12619
  %call5 = call i8* @BM_iter_new(%struct.BMIter* %liter, %struct.BMesh* null, i8 zeroext 11, i8* %14), !dbg !12619
  %15 = bitcast i8* %call5 to %struct.BMLoop*, !dbg !12619
  store %struct.BMLoop* %15, %struct.BMLoop** %loop, align 8, !dbg !12619
  br label %for.cond6, !dbg !12619

for.cond6:                                        ; preds = %for.inc, %for.body
  %16 = load %struct.BMLoop*, %struct.BMLoop** %loop, align 8, !dbg !12622
  %tobool7 = icmp ne %struct.BMLoop* %16, null, !dbg !12619
  br i1 %tobool7, label %for.body8, label %for.end, !dbg !12619

for.body8:                                        ; preds = %for.cond6
  %17 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !12624
  %18 = load %struct.BMLoop*, %struct.BMLoop** %loop, align 8, !dbg !12627
  %19 = load i32, i32* %cd_loop_uv_offset, align 4, !dbg !12628
  %call9 = call zeroext i8 @uvedit_edge_select_test(%struct.Scene* %17, %struct.BMLoop* %18, i32 %19), !dbg !12629
  %tobool10 = icmp ne i8 %call9, 0, !dbg !12629
  br i1 %tobool10, label %if.then, label %if.end, !dbg !12630

if.then:                                          ; preds = %for.body8
  %20 = load %struct.BMLoop*, %struct.BMLoop** %loop, align 8, !dbg !12631
  %e = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %20, i32 0, i32 2, !dbg !12631
  %21 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !12631
  %head = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %21, i32 0, i32 0, !dbg !12631
  call void @_bm_elem_flag_enable(%struct.BMHeader* %head, i8 zeroext 4), !dbg !12631
  br label %if.end, !dbg !12633

if.end:                                           ; preds = %if.then, %for.body8
  br label %for.inc, !dbg !12634

for.inc:                                          ; preds = %if.end
  %call11 = call i8* @BM_iter_step(%struct.BMIter* %liter), !dbg !12622
  %22 = bitcast i8* %call11 to %struct.BMLoop*, !dbg !12622
  store %struct.BMLoop* %22, %struct.BMLoop** %loop, align 8, !dbg !12622
  br label %for.cond6, !dbg !12622, !llvm.loop !12635

for.end:                                          ; preds = %for.cond6
  br label %for.inc12, !dbg !12637

for.inc12:                                        ; preds = %for.end
  %call13 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !12617
  %23 = bitcast i8* %call13 to %struct.BMFace*, !dbg !12617
  store %struct.BMFace* %23, %struct.BMFace** %efa, align 8, !dbg !12617
  br label %for.cond, !dbg !12617, !llvm.loop !12638

for.end14:                                        ; preds = %for.cond
  %24 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !12640
  %drawflag = getelementptr inbounds %struct.Mesh, %struct.Mesh* %24, i32 0, i32 36, !dbg !12641
  %25 = load i32, i32* %drawflag, align 8, !dbg !12642
  %or = or i32 %25, 128, !dbg !12642
  store i32 %or, i32* %drawflag, align 8, !dbg !12642
  %26 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !12643
  %toolsettings = getelementptr inbounds %struct.Scene, %struct.Scene* %26, i32 0, i32 20, !dbg !12645
  %27 = load %struct.ToolSettings*, %struct.ToolSettings** %toolsettings, align 8, !dbg !12645
  %edge_mode_live_unwrap = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %27, i32 0, i32 50, !dbg !12646
  %28 = load i8, i8* %edge_mode_live_unwrap, align 2, !dbg !12646
  %tobool15 = icmp ne i8 %28, 0, !dbg !12643
  br i1 %tobool15, label %if.then16, label %if.end17, !dbg !12647

if.then16:                                        ; preds = %for.end14
  %29 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !12648
  %30 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !12649
  call void @ED_unwrap_lscm(%struct.Scene* %29, %struct.Object* %30, i16 signext 0), !dbg !12650
  br label %if.end17, !dbg !12650

if.end17:                                         ; preds = %if.then16, %for.end14
  %31 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !12651
  %id = getelementptr inbounds %struct.Mesh, %struct.Mesh* %31, i32 0, i32 0, !dbg !12652
  call void @DAG_id_tag_update(%struct.ID* %id, i16 signext 0), !dbg !12653
  %32 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !12654
  %33 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !12655
  %34 = bitcast %struct.Mesh* %33 to i8*, !dbg !12655
  call void @WM_event_add_notifier(%struct.bContext* %32, i32 274399232, i8* %34), !dbg !12656
  ret i32 4, !dbg !12657
}

declare dso_local void @ED_unwrap_lscm(%struct.Scene*, %struct.Object*, i16 signext) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @uv_weld_exec(%struct.bContext* %C, %struct.wmOperator* %UNUSED_op) #0 !dbg !12658 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_op.addr = alloca %struct.wmOperator*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !12659, metadata !DIExpression()), !dbg !12660
  store %struct.wmOperator* %UNUSED_op, %struct.wmOperator** %UNUSED_op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %UNUSED_op.addr, metadata !12661, metadata !DIExpression()), !dbg !12662
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !12663
  call void @uv_weld_align(%struct.bContext* %0, i32 119), !dbg !12664
  ret i32 4, !dbg !12665
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @uv_remove_doubles_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !12666 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %threshold = alloca float, align 4
  %use_unselected = alloca i8, align 1
  %sima = alloca %struct.SpaceImage*, align 8
  %scene = alloca %struct.Scene*, align 8
  %obedit = alloca %struct.Object*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  %ima = alloca %struct.Image*, align 8
  %tf = alloca %struct.MTexPoly*, align 8
  %uv_a_index = alloca i32, align 4
  %uv_b_index = alloca i32, align 4
  %uv_a = alloca float*, align 8
  %uv_b = alloca float*, align 8
  %iter = alloca %struct.BMIter, align 8
  %liter = alloca %struct.BMIter, align 8
  %efa = alloca %struct.BMFace*, align 8
  %l = alloca %struct.BMLoop*, align 8
  %cd_loop_uv_offset = alloca i32, align 4
  %cd_poly_tex_offset = alloca i32, align 4
  %vert_arr = alloca %struct.UVvert*, align 8
  %_vert_arr_count = alloca i32, align 4
  %_vert_arr_static = alloca i8*, align 8
  %loop_arr = alloca %struct.MLoopUV**, align 8
  %_loop_arr_count = alloca i32, align 4
  %_loop_arr_static = alloca i8*, align 8
  %luv = alloca %struct.MLoopUV*, align 8
  %vert = alloca %struct.UVvert, align 8
  %uv_min = alloca [2 x float], align 4
  %uv_max = alloca [2 x float], align 4
  %uv_mid = alloca [2 x float], align 4
  %loop_arr235 = alloca %struct.MLoopUV**, align 8
  %_loop_arr_count236 = alloca i32, align 4
  %_loop_arr_static237 = alloca i8*, align 8
  %loop_arr_unselected = alloca %struct.MLoopUV**, align 8
  %_loop_arr_unselected_count = alloca i32, align 4
  %_loop_arr_unselected_static = alloca i8*, align 8
  %luv255 = alloca %struct.MLoopUV*, align 8
  %dist_best = alloca float, align 4
  %dist = alloca float, align 4
  %uv_best = alloca float*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !12667, metadata !DIExpression()), !dbg !12668
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !12669, metadata !DIExpression()), !dbg !12670
  call void @llvm.dbg.declare(metadata float* %threshold, metadata !12671, metadata !DIExpression()), !dbg !12672
  %0 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !12673
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %0, i32 0, i32 7, !dbg !12674
  %1 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !12674
  %call = call float @RNA_float_get(%struct.PointerRNA* %1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.145, i64 0, i64 0)), !dbg !12675
  store float %call, float* %threshold, align 4, !dbg !12672
  call void @llvm.dbg.declare(metadata i8* %use_unselected, metadata !12676, metadata !DIExpression()), !dbg !12677
  %2 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !12678
  %ptr1 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %2, i32 0, i32 7, !dbg !12679
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr1, align 8, !dbg !12679
  %call2 = call i32 @RNA_boolean_get(%struct.PointerRNA* %3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.148, i64 0, i64 0)), !dbg !12680
  %conv = trunc i32 %call2 to i8, !dbg !12680
  store i8 %conv, i8* %use_unselected, align 1, !dbg !12677
  call void @llvm.dbg.declare(metadata %struct.SpaceImage** %sima, metadata !12681, metadata !DIExpression()), !dbg !12682
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene, metadata !12683, metadata !DIExpression()), !dbg !12684
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !12685, metadata !DIExpression()), !dbg !12686
  %4 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !12687
  %call3 = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %4), !dbg !12688
  store %struct.Object* %call3, %struct.Object** %obedit, align 8, !dbg !12686
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !12689, metadata !DIExpression()), !dbg !12690
  %5 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !12691
  %call4 = call %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object* %5), !dbg !12692
  store %struct.BMEditMesh* %call4, %struct.BMEditMesh** %em, align 8, !dbg !12690
  call void @llvm.dbg.declare(metadata %struct.Image** %ima, metadata !12693, metadata !DIExpression()), !dbg !12694
  call void @llvm.dbg.declare(metadata %struct.MTexPoly** %tf, metadata !12695, metadata !DIExpression()), !dbg !12696
  call void @llvm.dbg.declare(metadata i32* %uv_a_index, metadata !12697, metadata !DIExpression()), !dbg !12698
  call void @llvm.dbg.declare(metadata i32* %uv_b_index, metadata !12699, metadata !DIExpression()), !dbg !12700
  call void @llvm.dbg.declare(metadata float** %uv_a, metadata !12701, metadata !DIExpression()), !dbg !12702
  call void @llvm.dbg.declare(metadata float** %uv_b, metadata !12703, metadata !DIExpression()), !dbg !12704
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iter, metadata !12705, metadata !DIExpression()), !dbg !12706
  call void @llvm.dbg.declare(metadata %struct.BMIter* %liter, metadata !12707, metadata !DIExpression()), !dbg !12708
  call void @llvm.dbg.declare(metadata %struct.BMFace** %efa, metadata !12709, metadata !DIExpression()), !dbg !12710
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l, metadata !12711, metadata !DIExpression()), !dbg !12712
  call void @llvm.dbg.declare(metadata i32* %cd_loop_uv_offset, metadata !12713, metadata !DIExpression()), !dbg !12714
  %6 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !12715
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %6, i32 0, i32 0, !dbg !12716
  %7 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !12716
  %ldata = getelementptr inbounds %struct.BMesh, %struct.BMesh* %7, i32 0, i32 26, !dbg !12717
  %call5 = call i32 @CustomData_get_offset(%struct.CustomData* %ldata, i32 16), !dbg !12718
  store i32 %call5, i32* %cd_loop_uv_offset, align 4, !dbg !12714
  call void @llvm.dbg.declare(metadata i32* %cd_poly_tex_offset, metadata !12719, metadata !DIExpression()), !dbg !12720
  %8 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !12721
  %bm6 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %8, i32 0, i32 0, !dbg !12722
  %9 = load %struct.BMesh*, %struct.BMesh** %bm6, align 8, !dbg !12722
  %pdata = getelementptr inbounds %struct.BMesh, %struct.BMesh* %9, i32 0, i32 27, !dbg !12723
  %call7 = call i32 @CustomData_get_offset(%struct.CustomData* %pdata, i32 15), !dbg !12724
  store i32 %call7, i32* %cd_poly_tex_offset, align 4, !dbg !12720
  %10 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !12725
  %call8 = call %struct.SpaceImage* @CTX_wm_space_image(%struct.bContext* %10), !dbg !12726
  store %struct.SpaceImage* %call8, %struct.SpaceImage** %sima, align 8, !dbg !12727
  %11 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !12728
  %call9 = call %struct.Scene* @CTX_data_scene(%struct.bContext* %11), !dbg !12729
  store %struct.Scene* %call9, %struct.Scene** %scene, align 8, !dbg !12730
  %12 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !12731
  %call10 = call %struct.Image* @CTX_data_edit_image(%struct.bContext* %12), !dbg !12732
  store %struct.Image* %call10, %struct.Image** %ima, align 8, !dbg !12733
  %13 = load i8, i8* %use_unselected, align 1, !dbg !12734
  %conv11 = zext i8 %13 to i32, !dbg !12734
  %cmp = icmp eq i32 %conv11, 0, !dbg !12736
  br i1 %cmp, label %if.then, label %if.else, !dbg !12737

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.UVvert** %vert_arr, metadata !12738, metadata !DIExpression()), !dbg !12746
  store %struct.UVvert* null, %struct.UVvert** %vert_arr, align 8, !dbg !12746
  call void @llvm.dbg.declare(metadata i32* %_vert_arr_count, metadata !12747, metadata !DIExpression()), !dbg !12748
  store i32 0, i32* %_vert_arr_count, align 4, !dbg !12748
  call void @llvm.dbg.declare(metadata i8** %_vert_arr_static, metadata !12749, metadata !DIExpression()), !dbg !12748
  store i8* null, i8** %_vert_arr_static, align 8, !dbg !12748
  call void @llvm.dbg.declare(metadata %struct.MLoopUV*** %loop_arr, metadata !12750, metadata !DIExpression()), !dbg !12752
  store %struct.MLoopUV** null, %struct.MLoopUV*** %loop_arr, align 8, !dbg !12752
  call void @llvm.dbg.declare(metadata i32* %_loop_arr_count, metadata !12753, metadata !DIExpression()), !dbg !12754
  store i32 0, i32* %_loop_arr_count, align 4, !dbg !12754
  call void @llvm.dbg.declare(metadata i8** %_loop_arr_static, metadata !12755, metadata !DIExpression()), !dbg !12754
  store i8* null, i8** %_loop_arr_static, align 8, !dbg !12754
  %14 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !12756
  %bm13 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %14, i32 0, i32 0, !dbg !12756
  %15 = load %struct.BMesh*, %struct.BMesh** %bm13, align 8, !dbg !12756
  %call14 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %15, i8 zeroext 3, i8* null), !dbg !12756
  %16 = bitcast i8* %call14 to %struct.BMFace*, !dbg !12756
  store %struct.BMFace* %16, %struct.BMFace** %efa, align 8, !dbg !12756
  br label %for.cond, !dbg !12756

for.cond:                                         ; preds = %for.inc62, %if.then
  %17 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !12758
  %tobool = icmp ne %struct.BMFace* %17, null, !dbg !12756
  br i1 %tobool, label %for.body, label %for.end64, !dbg !12756

for.body:                                         ; preds = %for.cond
  %18 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !12760
  %head = getelementptr inbounds %struct.BMFace, %struct.BMFace* %18, i32 0, i32 0, !dbg !12760
  %data = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head, i32 0, i32 0, !dbg !12760
  %19 = load i8*, i8** %data, align 8, !dbg !12760
  %20 = load i32, i32* %cd_poly_tex_offset, align 4, !dbg !12760
  %idx.ext = sext i32 %20 to i64, !dbg !12760
  %add.ptr = getelementptr inbounds i8, i8* %19, i64 %idx.ext, !dbg !12760
  %21 = bitcast i8* %add.ptr to %struct.MTexPoly*, !dbg !12760
  store %struct.MTexPoly* %21, %struct.MTexPoly** %tf, align 8, !dbg !12762
  %22 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !12763
  %23 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !12765
  %24 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !12766
  %25 = load %struct.MTexPoly*, %struct.MTexPoly** %tf, align 8, !dbg !12767
  %call15 = call zeroext i8 @uvedit_face_visible_test(%struct.Scene* %22, %struct.Image* %23, %struct.BMFace* %24, %struct.MTexPoly* %25), !dbg !12768
  %tobool16 = icmp ne i8 %call15, 0, !dbg !12768
  br i1 %tobool16, label %if.end, label %if.then17, !dbg !12769

if.then17:                                        ; preds = %for.body
  br label %for.inc62, !dbg !12770

if.end:                                           ; preds = %for.body
  %26 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !12771
  %27 = bitcast %struct.BMFace* %26 to i8*, !dbg !12771
  %call18 = call i8* @BM_iter_new(%struct.BMIter* %liter, %struct.BMesh* null, i8 zeroext 11, i8* %27), !dbg !12771
  %28 = bitcast i8* %call18 to %struct.BMLoop*, !dbg !12771
  store %struct.BMLoop* %28, %struct.BMLoop** %l, align 8, !dbg !12771
  br label %for.cond19, !dbg !12771

for.cond19:                                       ; preds = %for.inc, %if.end
  %29 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !12773
  %tobool20 = icmp ne %struct.BMLoop* %29, null, !dbg !12771
  br i1 %tobool20, label %for.body21, label %for.end, !dbg !12771

for.body21:                                       ; preds = %for.cond19
  %30 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !12775
  %31 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !12778
  %32 = load i32, i32* %cd_loop_uv_offset, align 4, !dbg !12779
  %call22 = call zeroext i8 @uvedit_uv_select_test(%struct.Scene* %30, %struct.BMLoop* %31, i32 %32), !dbg !12780
  %tobool23 = icmp ne i8 %call22, 0, !dbg !12780
  br i1 %tobool23, label %if.then24, label %if.end60, !dbg !12781

if.then24:                                        ; preds = %for.body21
  call void @llvm.dbg.declare(metadata %struct.MLoopUV** %luv, metadata !12782, metadata !DIExpression()), !dbg !12784
  %33 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !12785
  %head25 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %33, i32 0, i32 0, !dbg !12785
  %data26 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head25, i32 0, i32 0, !dbg !12785
  %34 = load i8*, i8** %data26, align 8, !dbg !12785
  %35 = load i32, i32* %cd_loop_uv_offset, align 4, !dbg !12785
  %idx.ext27 = sext i32 %35 to i64, !dbg !12785
  %add.ptr28 = getelementptr inbounds i8, i8* %34, i64 %idx.ext27, !dbg !12785
  %36 = bitcast i8* %add.ptr28 to %struct.MLoopUV*, !dbg !12785
  store %struct.MLoopUV* %36, %struct.MLoopUV** %luv, align 8, !dbg !12784
  call void @llvm.dbg.declare(metadata %struct.UVvert* %vert, metadata !12786, metadata !DIExpression()), !dbg !12787
  %37 = load %struct.MLoopUV*, %struct.MLoopUV** %luv, align 8, !dbg !12788
  %uv_loop = getelementptr inbounds %struct.UVvert, %struct.UVvert* %vert, i32 0, i32 0, !dbg !12789
  store %struct.MLoopUV* %37, %struct.MLoopUV** %uv_loop, align 8, !dbg !12790
  %weld = getelementptr inbounds %struct.UVvert, %struct.UVvert* %vert, i32 0, i32 1, !dbg !12791
  store i8 0, i8* %weld, align 8, !dbg !12792
  %38 = load %struct.UVvert*, %struct.UVvert** %vert_arr, align 8, !dbg !12793
  %39 = bitcast %struct.UVvert* %38 to i8*, !dbg !12793
  %cmp29 = icmp eq i8* %39, null, !dbg !12793
  br i1 %cmp29, label %land.lhs.true, label %cond.false, !dbg !12793

land.lhs.true:                                    ; preds = %if.then24
  %40 = load i8*, i8** %_vert_arr_static, align 8, !dbg !12793
  %cmp31 = icmp ne i8* %40, null, !dbg !12793
  br i1 %cmp31, label %land.lhs.true33, label %cond.false, !dbg !12793

land.lhs.true33:                                  ; preds = %land.lhs.true
  %41 = load i32, i32* %_vert_arr_count, align 4, !dbg !12793
  %add = add nsw i32 %41, 1, !dbg !12793
  %conv34 = sext i32 %add to i64, !dbg !12793
  %cmp35 = icmp uge i64 0, %conv34, !dbg !12793
  br i1 %cmp35, label %cond.true, label %cond.false, !dbg !12793

cond.true:                                        ; preds = %land.lhs.true33
  %42 = load i8*, i8** %_vert_arr_static, align 8, !dbg !12793
  %43 = bitcast i8* %42 to %struct.UVvert*, !dbg !12793
  store %struct.UVvert* %43, %struct.UVvert** %vert_arr, align 8, !dbg !12793
  br label %cond.end58, !dbg !12793

cond.false:                                       ; preds = %land.lhs.true33, %land.lhs.true, %if.then24
  %44 = load %struct.UVvert*, %struct.UVvert** %vert_arr, align 8, !dbg !12793
  %45 = bitcast %struct.UVvert* %44 to i8*, !dbg !12793
  %46 = load i8*, i8** %_vert_arr_static, align 8, !dbg !12793
  %cmp37 = icmp eq i8* %45, %46, !dbg !12793
  br i1 %cmp37, label %land.lhs.true39, label %cond.false43, !dbg !12793

land.lhs.true39:                                  ; preds = %cond.false
  %47 = load %struct.UVvert*, %struct.UVvert** %vert_arr, align 8, !dbg !12793
  %48 = bitcast %struct.UVvert* %47 to i8*, !dbg !12793
  %cmp40 = icmp ne i8* %48, null, !dbg !12793
  br i1 %cmp40, label %cond.true42, label %cond.false43, !dbg !12793

cond.true42:                                      ; preds = %land.lhs.true39
  br label %cond.end49, !dbg !12793

cond.false43:                                     ; preds = %land.lhs.true39, %cond.false
  %49 = load %struct.UVvert*, %struct.UVvert** %vert_arr, align 8, !dbg !12793
  %cmp44 = icmp eq %struct.UVvert* %49, null, !dbg !12793
  br i1 %cmp44, label %cond.true46, label %cond.false47, !dbg !12793

cond.true46:                                      ; preds = %cond.false43
  br label %cond.end, !dbg !12793

cond.false47:                                     ; preds = %cond.false43
  %50 = load i64 (i8*)*, i64 (i8*)** @MEM_allocN_len, align 8, !dbg !12793
  %51 = load %struct.UVvert*, %struct.UVvert** %vert_arr, align 8, !dbg !12793
  %52 = bitcast %struct.UVvert* %51 to i8*, !dbg !12793
  %call48 = call i64 %50(i8* %52), !dbg !12793
  %div = udiv i64 %call48, 16, !dbg !12793
  br label %cond.end, !dbg !12793

cond.end:                                         ; preds = %cond.false47, %cond.true46
  %cond = phi i64 [ 0, %cond.true46 ], [ %div, %cond.false47 ], !dbg !12793
  br label %cond.end49, !dbg !12793

cond.end49:                                       ; preds = %cond.end, %cond.true42
  %cond50 = phi i64 [ 0, %cond.true42 ], [ %cond, %cond.end ], !dbg !12793
  %53 = load i32, i32* %_vert_arr_count, align 4, !dbg !12793
  %add51 = add nsw i32 %53, 1, !dbg !12793
  %conv52 = sext i32 %add51 to i64, !dbg !12793
  %cmp53 = icmp uge i64 %cond50, %conv52, !dbg !12793
  br i1 %cmp53, label %cond.true55, label %cond.false56, !dbg !12793

cond.true55:                                      ; preds = %cond.end49
  br label %cond.end57, !dbg !12793

cond.false56:                                     ; preds = %cond.end49
  %54 = bitcast %struct.UVvert** %vert_arr to i8**, !dbg !12793
  %55 = load i8*, i8** %_vert_arr_static, align 8, !dbg !12793
  %56 = load i32, i32* %_vert_arr_count, align 4, !dbg !12793
  call void @_bli_array_grow_func(i8** %54, i8* %55, i32 16, i32 %56, i32 1, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.151, i64 0, i64 0)), !dbg !12793
  br label %cond.end57, !dbg !12793

cond.end57:                                       ; preds = %cond.false56, %cond.true55
  br label %cond.end58, !dbg !12793

cond.end58:                                       ; preds = %cond.end57, %cond.true
  %57 = load i32, i32* %_vert_arr_count, align 4, !dbg !12793
  %add59 = add nsw i32 %57, 1, !dbg !12793
  store i32 %add59, i32* %_vert_arr_count, align 4, !dbg !12793
  %58 = load %struct.UVvert*, %struct.UVvert** %vert_arr, align 8, !dbg !12793
  %59 = load i32, i32* %_vert_arr_count, align 4, !dbg !12793
  %sub = sub nsw i32 %59, 1, !dbg !12793
  %idxprom = sext i32 %sub to i64, !dbg !12793
  %arrayidx = getelementptr inbounds %struct.UVvert, %struct.UVvert* %58, i64 %idxprom, !dbg !12793
  %60 = bitcast %struct.UVvert* %arrayidx to i8*, !dbg !12793
  %61 = bitcast %struct.UVvert* %vert to i8*, !dbg !12793
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %60, i8* align 8 %61, i64 16, i1 false), !dbg !12793
  br label %if.end60, !dbg !12794

if.end60:                                         ; preds = %cond.end58, %for.body21
  br label %for.inc, !dbg !12795

for.inc:                                          ; preds = %if.end60
  %call61 = call i8* @BM_iter_step(%struct.BMIter* %liter), !dbg !12773
  %62 = bitcast i8* %call61 to %struct.BMLoop*, !dbg !12773
  store %struct.BMLoop* %62, %struct.BMLoop** %l, align 8, !dbg !12773
  br label %for.cond19, !dbg !12773, !llvm.loop !12796

for.end:                                          ; preds = %for.cond19
  br label %for.inc62, !dbg !12798

for.inc62:                                        ; preds = %for.end, %if.then17
  %call63 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !12758
  %63 = bitcast i8* %call63 to %struct.BMFace*, !dbg !12758
  store %struct.BMFace* %63, %struct.BMFace** %efa, align 8, !dbg !12758
  br label %for.cond, !dbg !12758, !llvm.loop !12799

for.end64:                                        ; preds = %for.cond
  store i32 0, i32* %uv_a_index, align 4, !dbg !12801
  br label %for.cond65, !dbg !12803

for.cond65:                                       ; preds = %for.inc220, %for.end64
  %64 = load i32, i32* %uv_a_index, align 4, !dbg !12804
  %65 = load i32, i32* %_vert_arr_count, align 4, !dbg !12806
  %cmp66 = icmp slt i32 %64, %65, !dbg !12807
  br i1 %cmp66, label %for.body68, label %for.end222, !dbg !12808

for.body68:                                       ; preds = %for.cond65
  %66 = load %struct.UVvert*, %struct.UVvert** %vert_arr, align 8, !dbg !12809
  %67 = load i32, i32* %uv_a_index, align 4, !dbg !12812
  %idxprom69 = sext i32 %67 to i64, !dbg !12809
  %arrayidx70 = getelementptr inbounds %struct.UVvert, %struct.UVvert* %66, i64 %idxprom69, !dbg !12809
  %weld71 = getelementptr inbounds %struct.UVvert, %struct.UVvert* %arrayidx70, i32 0, i32 1, !dbg !12813
  %68 = load i8, i8* %weld71, align 8, !dbg !12813
  %conv72 = zext i8 %68 to i32, !dbg !12809
  %cmp73 = icmp eq i32 %conv72, 0, !dbg !12814
  br i1 %cmp73, label %if.then75, label %if.end219, !dbg !12815

if.then75:                                        ; preds = %for.body68
  call void @llvm.dbg.declare(metadata [2 x float]* %uv_min, metadata !12816, metadata !DIExpression()), !dbg !12818
  call void @llvm.dbg.declare(metadata [2 x float]* %uv_max, metadata !12819, metadata !DIExpression()), !dbg !12820
  store i32 0, i32* %_loop_arr_count, align 4, !dbg !12821
  %69 = load %struct.MLoopUV**, %struct.MLoopUV*** %loop_arr, align 8, !dbg !12823
  %70 = bitcast %struct.MLoopUV** %69 to i8*, !dbg !12823
  %cmp76 = icmp eq i8* %70, null, !dbg !12823
  br i1 %cmp76, label %land.lhs.true78, label %cond.false87, !dbg !12823

land.lhs.true78:                                  ; preds = %if.then75
  %71 = load i8*, i8** %_loop_arr_static, align 8, !dbg !12823
  %cmp79 = icmp ne i8* %71, null, !dbg !12823
  br i1 %cmp79, label %land.lhs.true81, label %cond.false87, !dbg !12823

land.lhs.true81:                                  ; preds = %land.lhs.true78
  %72 = load i32, i32* %_loop_arr_count, align 4, !dbg !12823
  %add82 = add nsw i32 %72, 1, !dbg !12823
  %conv83 = sext i32 %add82 to i64, !dbg !12823
  %cmp84 = icmp uge i64 1, %conv83, !dbg !12823
  br i1 %cmp84, label %cond.true86, label %cond.false87, !dbg !12823

cond.true86:                                      ; preds = %land.lhs.true81
  %73 = load i8*, i8** %_loop_arr_static, align 8, !dbg !12823
  %74 = bitcast i8* %73 to %struct.MLoopUV**, !dbg !12823
  store %struct.MLoopUV** %74, %struct.MLoopUV*** %loop_arr, align 8, !dbg !12823
  br label %cond.end112, !dbg !12823

cond.false87:                                     ; preds = %land.lhs.true81, %land.lhs.true78, %if.then75
  %75 = load %struct.MLoopUV**, %struct.MLoopUV*** %loop_arr, align 8, !dbg !12823
  %76 = bitcast %struct.MLoopUV** %75 to i8*, !dbg !12823
  %77 = load i8*, i8** %_loop_arr_static, align 8, !dbg !12823
  %cmp88 = icmp eq i8* %76, %77, !dbg !12823
  br i1 %cmp88, label %land.lhs.true90, label %cond.false94, !dbg !12823

land.lhs.true90:                                  ; preds = %cond.false87
  %78 = load %struct.MLoopUV**, %struct.MLoopUV*** %loop_arr, align 8, !dbg !12823
  %79 = bitcast %struct.MLoopUV** %78 to i8*, !dbg !12823
  %cmp91 = icmp ne i8* %79, null, !dbg !12823
  br i1 %cmp91, label %cond.true93, label %cond.false94, !dbg !12823

cond.true93:                                      ; preds = %land.lhs.true90
  br label %cond.end103, !dbg !12823

cond.false94:                                     ; preds = %land.lhs.true90, %cond.false87
  %80 = load %struct.MLoopUV**, %struct.MLoopUV*** %loop_arr, align 8, !dbg !12823
  %cmp95 = icmp eq %struct.MLoopUV** %80, null, !dbg !12823
  br i1 %cmp95, label %cond.true97, label %cond.false98, !dbg !12823

cond.true97:                                      ; preds = %cond.false94
  br label %cond.end101, !dbg !12823

cond.false98:                                     ; preds = %cond.false94
  %81 = load i64 (i8*)*, i64 (i8*)** @MEM_allocN_len, align 8, !dbg !12823
  %82 = load %struct.MLoopUV**, %struct.MLoopUV*** %loop_arr, align 8, !dbg !12823
  %83 = bitcast %struct.MLoopUV** %82 to i8*, !dbg !12823
  %call99 = call i64 %81(i8* %83), !dbg !12823
  %div100 = udiv i64 %call99, 8, !dbg !12823
  br label %cond.end101, !dbg !12823

cond.end101:                                      ; preds = %cond.false98, %cond.true97
  %cond102 = phi i64 [ 0, %cond.true97 ], [ %div100, %cond.false98 ], !dbg !12823
  br label %cond.end103, !dbg !12823

cond.end103:                                      ; preds = %cond.end101, %cond.true93
  %cond104 = phi i64 [ 1, %cond.true93 ], [ %cond102, %cond.end101 ], !dbg !12823
  %84 = load i32, i32* %_loop_arr_count, align 4, !dbg !12823
  %add105 = add nsw i32 %84, 1, !dbg !12823
  %conv106 = sext i32 %add105 to i64, !dbg !12823
  %cmp107 = icmp uge i64 %cond104, %conv106, !dbg !12823
  br i1 %cmp107, label %cond.true109, label %cond.false110, !dbg !12823

cond.true109:                                     ; preds = %cond.end103
  br label %cond.end111, !dbg !12823

cond.false110:                                    ; preds = %cond.end103
  %85 = bitcast %struct.MLoopUV*** %loop_arr to i8**, !dbg !12823
  %86 = load i8*, i8** %_loop_arr_static, align 8, !dbg !12823
  %87 = load i32, i32* %_loop_arr_count, align 4, !dbg !12823
  call void @_bli_array_grow_func(i8** %85, i8* %86, i32 8, i32 %87, i32 1, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.152, i64 0, i64 0)), !dbg !12823
  br label %cond.end111, !dbg !12823

cond.end111:                                      ; preds = %cond.false110, %cond.true109
  br label %cond.end112, !dbg !12823

cond.end112:                                      ; preds = %cond.end111, %cond.true86
  %88 = load i32, i32* %_loop_arr_count, align 4, !dbg !12823
  %add113 = add nsw i32 %88, 1, !dbg !12823
  store i32 %add113, i32* %_loop_arr_count, align 4, !dbg !12823
  %89 = load %struct.UVvert*, %struct.UVvert** %vert_arr, align 8, !dbg !12823
  %90 = load i32, i32* %uv_a_index, align 4, !dbg !12823
  %idxprom114 = sext i32 %90 to i64, !dbg !12823
  %arrayidx115 = getelementptr inbounds %struct.UVvert, %struct.UVvert* %89, i64 %idxprom114, !dbg !12823
  %uv_loop116 = getelementptr inbounds %struct.UVvert, %struct.UVvert* %arrayidx115, i32 0, i32 0, !dbg !12823
  %91 = load %struct.MLoopUV*, %struct.MLoopUV** %uv_loop116, align 8, !dbg !12823
  %92 = load %struct.MLoopUV**, %struct.MLoopUV*** %loop_arr, align 8, !dbg !12823
  %93 = load i32, i32* %_loop_arr_count, align 4, !dbg !12823
  %sub117 = sub nsw i32 %93, 1, !dbg !12823
  %idxprom118 = sext i32 %sub117 to i64, !dbg !12823
  %arrayidx119 = getelementptr inbounds %struct.MLoopUV*, %struct.MLoopUV** %92, i64 %idxprom118, !dbg !12823
  store %struct.MLoopUV* %91, %struct.MLoopUV** %arrayidx119, align 8, !dbg !12823
  %94 = load %struct.UVvert*, %struct.UVvert** %vert_arr, align 8, !dbg !12824
  %95 = load i32, i32* %uv_a_index, align 4, !dbg !12825
  %idxprom120 = sext i32 %95 to i64, !dbg !12824
  %arrayidx121 = getelementptr inbounds %struct.UVvert, %struct.UVvert* %94, i64 %idxprom120, !dbg !12824
  %uv_loop122 = getelementptr inbounds %struct.UVvert, %struct.UVvert* %arrayidx121, i32 0, i32 0, !dbg !12826
  %96 = load %struct.MLoopUV*, %struct.MLoopUV** %uv_loop122, align 8, !dbg !12826
  %uv = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %96, i32 0, i32 0, !dbg !12827
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %uv, i64 0, i64 0, !dbg !12824
  store float* %arraydecay, float** %uv_a, align 8, !dbg !12828
  %arraydecay123 = getelementptr inbounds [2 x float], [2 x float]* %uv_max, i64 0, i64 0, !dbg !12829
  %97 = load float*, float** %uv_a, align 8, !dbg !12830
  call void @copy_v2_v2(float* %arraydecay123, float* %97), !dbg !12831
  %arraydecay124 = getelementptr inbounds [2 x float], [2 x float]* %uv_min, i64 0, i64 0, !dbg !12832
  %98 = load float*, float** %uv_a, align 8, !dbg !12833
  call void @copy_v2_v2(float* %arraydecay124, float* %98), !dbg !12834
  %99 = load %struct.UVvert*, %struct.UVvert** %vert_arr, align 8, !dbg !12835
  %100 = load i32, i32* %uv_a_index, align 4, !dbg !12836
  %idxprom125 = sext i32 %100 to i64, !dbg !12835
  %arrayidx126 = getelementptr inbounds %struct.UVvert, %struct.UVvert* %99, i64 %idxprom125, !dbg !12835
  %weld127 = getelementptr inbounds %struct.UVvert, %struct.UVvert* %arrayidx126, i32 0, i32 1, !dbg !12837
  store i8 1, i8* %weld127, align 8, !dbg !12838
  %101 = load i32, i32* %uv_a_index, align 4, !dbg !12839
  %add128 = add nsw i32 %101, 1, !dbg !12841
  store i32 %add128, i32* %uv_b_index, align 4, !dbg !12842
  br label %for.cond129, !dbg !12843

for.cond129:                                      ; preds = %for.inc199, %cond.end112
  %102 = load i32, i32* %uv_b_index, align 4, !dbg !12844
  %103 = load i32, i32* %_vert_arr_count, align 4, !dbg !12846
  %cmp130 = icmp slt i32 %102, %103, !dbg !12847
  br i1 %cmp130, label %for.body132, label %for.end200, !dbg !12848

for.body132:                                      ; preds = %for.cond129
  %104 = load %struct.UVvert*, %struct.UVvert** %vert_arr, align 8, !dbg !12849
  %105 = load i32, i32* %uv_b_index, align 4, !dbg !12851
  %idxprom133 = sext i32 %105 to i64, !dbg !12849
  %arrayidx134 = getelementptr inbounds %struct.UVvert, %struct.UVvert* %104, i64 %idxprom133, !dbg !12849
  %uv_loop135 = getelementptr inbounds %struct.UVvert, %struct.UVvert* %arrayidx134, i32 0, i32 0, !dbg !12852
  %106 = load %struct.MLoopUV*, %struct.MLoopUV** %uv_loop135, align 8, !dbg !12852
  %uv136 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %106, i32 0, i32 0, !dbg !12853
  %arraydecay137 = getelementptr inbounds [2 x float], [2 x float]* %uv136, i64 0, i64 0, !dbg !12849
  store float* %arraydecay137, float** %uv_b, align 8, !dbg !12854
  %107 = load %struct.UVvert*, %struct.UVvert** %vert_arr, align 8, !dbg !12855
  %108 = load i32, i32* %uv_b_index, align 4, !dbg !12857
  %idxprom138 = sext i32 %108 to i64, !dbg !12855
  %arrayidx139 = getelementptr inbounds %struct.UVvert, %struct.UVvert* %107, i64 %idxprom138, !dbg !12855
  %weld140 = getelementptr inbounds %struct.UVvert, %struct.UVvert* %arrayidx139, i32 0, i32 1, !dbg !12858
  %109 = load i8, i8* %weld140, align 8, !dbg !12858
  %conv141 = zext i8 %109 to i32, !dbg !12855
  %cmp142 = icmp eq i32 %conv141, 0, !dbg !12859
  br i1 %cmp142, label %land.lhs.true144, label %if.end198, !dbg !12860

land.lhs.true144:                                 ; preds = %for.body132
  %110 = load float*, float** %uv_a, align 8, !dbg !12861
  %111 = load float*, float** %uv_b, align 8, !dbg !12862
  %call145 = call float @len_manhattan_v2v2(float* %110, float* %111), !dbg !12863
  %112 = load float, float* %threshold, align 4, !dbg !12864
  %cmp146 = fcmp olt float %call145, %112, !dbg !12865
  br i1 %cmp146, label %if.then148, label %if.end198, !dbg !12866

if.then148:                                       ; preds = %land.lhs.true144
  %arraydecay149 = getelementptr inbounds [2 x float], [2 x float]* %uv_max, i64 0, i64 0, !dbg !12867
  %arraydecay150 = getelementptr inbounds [2 x float], [2 x float]* %uv_min, i64 0, i64 0, !dbg !12869
  %113 = load float*, float** %uv_b, align 8, !dbg !12870
  call void @minmax_v2v2_v2(float* %arraydecay149, float* %arraydecay150, float* %113), !dbg !12871
  %114 = load %struct.MLoopUV**, %struct.MLoopUV*** %loop_arr, align 8, !dbg !12872
  %115 = bitcast %struct.MLoopUV** %114 to i8*, !dbg !12872
  %cmp151 = icmp eq i8* %115, null, !dbg !12872
  br i1 %cmp151, label %land.lhs.true153, label %cond.false162, !dbg !12872

land.lhs.true153:                                 ; preds = %if.then148
  %116 = load i8*, i8** %_loop_arr_static, align 8, !dbg !12872
  %cmp154 = icmp ne i8* %116, null, !dbg !12872
  br i1 %cmp154, label %land.lhs.true156, label %cond.false162, !dbg !12872

land.lhs.true156:                                 ; preds = %land.lhs.true153
  %117 = load i32, i32* %_loop_arr_count, align 4, !dbg !12872
  %add157 = add nsw i32 %117, 1, !dbg !12872
  %conv158 = sext i32 %add157 to i64, !dbg !12872
  %cmp159 = icmp uge i64 1, %conv158, !dbg !12872
  br i1 %cmp159, label %cond.true161, label %cond.false162, !dbg !12872

cond.true161:                                     ; preds = %land.lhs.true156
  %118 = load i8*, i8** %_loop_arr_static, align 8, !dbg !12872
  %119 = bitcast i8* %118 to %struct.MLoopUV**, !dbg !12872
  store %struct.MLoopUV** %119, %struct.MLoopUV*** %loop_arr, align 8, !dbg !12872
  br label %cond.end187, !dbg !12872

cond.false162:                                    ; preds = %land.lhs.true156, %land.lhs.true153, %if.then148
  %120 = load %struct.MLoopUV**, %struct.MLoopUV*** %loop_arr, align 8, !dbg !12872
  %121 = bitcast %struct.MLoopUV** %120 to i8*, !dbg !12872
  %122 = load i8*, i8** %_loop_arr_static, align 8, !dbg !12872
  %cmp163 = icmp eq i8* %121, %122, !dbg !12872
  br i1 %cmp163, label %land.lhs.true165, label %cond.false169, !dbg !12872

land.lhs.true165:                                 ; preds = %cond.false162
  %123 = load %struct.MLoopUV**, %struct.MLoopUV*** %loop_arr, align 8, !dbg !12872
  %124 = bitcast %struct.MLoopUV** %123 to i8*, !dbg !12872
  %cmp166 = icmp ne i8* %124, null, !dbg !12872
  br i1 %cmp166, label %cond.true168, label %cond.false169, !dbg !12872

cond.true168:                                     ; preds = %land.lhs.true165
  br label %cond.end178, !dbg !12872

cond.false169:                                    ; preds = %land.lhs.true165, %cond.false162
  %125 = load %struct.MLoopUV**, %struct.MLoopUV*** %loop_arr, align 8, !dbg !12872
  %cmp170 = icmp eq %struct.MLoopUV** %125, null, !dbg !12872
  br i1 %cmp170, label %cond.true172, label %cond.false173, !dbg !12872

cond.true172:                                     ; preds = %cond.false169
  br label %cond.end176, !dbg !12872

cond.false173:                                    ; preds = %cond.false169
  %126 = load i64 (i8*)*, i64 (i8*)** @MEM_allocN_len, align 8, !dbg !12872
  %127 = load %struct.MLoopUV**, %struct.MLoopUV*** %loop_arr, align 8, !dbg !12872
  %128 = bitcast %struct.MLoopUV** %127 to i8*, !dbg !12872
  %call174 = call i64 %126(i8* %128), !dbg !12872
  %div175 = udiv i64 %call174, 8, !dbg !12872
  br label %cond.end176, !dbg !12872

cond.end176:                                      ; preds = %cond.false173, %cond.true172
  %cond177 = phi i64 [ 0, %cond.true172 ], [ %div175, %cond.false173 ], !dbg !12872
  br label %cond.end178, !dbg !12872

cond.end178:                                      ; preds = %cond.end176, %cond.true168
  %cond179 = phi i64 [ 1, %cond.true168 ], [ %cond177, %cond.end176 ], !dbg !12872
  %129 = load i32, i32* %_loop_arr_count, align 4, !dbg !12872
  %add180 = add nsw i32 %129, 1, !dbg !12872
  %conv181 = sext i32 %add180 to i64, !dbg !12872
  %cmp182 = icmp uge i64 %cond179, %conv181, !dbg !12872
  br i1 %cmp182, label %cond.true184, label %cond.false185, !dbg !12872

cond.true184:                                     ; preds = %cond.end178
  br label %cond.end186, !dbg !12872

cond.false185:                                    ; preds = %cond.end178
  %130 = bitcast %struct.MLoopUV*** %loop_arr to i8**, !dbg !12872
  %131 = load i8*, i8** %_loop_arr_static, align 8, !dbg !12872
  %132 = load i32, i32* %_loop_arr_count, align 4, !dbg !12872
  call void @_bli_array_grow_func(i8** %130, i8* %131, i32 8, i32 %132, i32 1, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.152, i64 0, i64 0)), !dbg !12872
  br label %cond.end186, !dbg !12872

cond.end186:                                      ; preds = %cond.false185, %cond.true184
  br label %cond.end187, !dbg !12872

cond.end187:                                      ; preds = %cond.end186, %cond.true161
  %133 = load i32, i32* %_loop_arr_count, align 4, !dbg !12872
  %add188 = add nsw i32 %133, 1, !dbg !12872
  store i32 %add188, i32* %_loop_arr_count, align 4, !dbg !12872
  %134 = load %struct.UVvert*, %struct.UVvert** %vert_arr, align 8, !dbg !12872
  %135 = load i32, i32* %uv_b_index, align 4, !dbg !12872
  %idxprom189 = sext i32 %135 to i64, !dbg !12872
  %arrayidx190 = getelementptr inbounds %struct.UVvert, %struct.UVvert* %134, i64 %idxprom189, !dbg !12872
  %uv_loop191 = getelementptr inbounds %struct.UVvert, %struct.UVvert* %arrayidx190, i32 0, i32 0, !dbg !12872
  %136 = load %struct.MLoopUV*, %struct.MLoopUV** %uv_loop191, align 8, !dbg !12872
  %137 = load %struct.MLoopUV**, %struct.MLoopUV*** %loop_arr, align 8, !dbg !12872
  %138 = load i32, i32* %_loop_arr_count, align 4, !dbg !12872
  %sub192 = sub nsw i32 %138, 1, !dbg !12872
  %idxprom193 = sext i32 %sub192 to i64, !dbg !12872
  %arrayidx194 = getelementptr inbounds %struct.MLoopUV*, %struct.MLoopUV** %137, i64 %idxprom193, !dbg !12872
  store %struct.MLoopUV* %136, %struct.MLoopUV** %arrayidx194, align 8, !dbg !12872
  %139 = load %struct.UVvert*, %struct.UVvert** %vert_arr, align 8, !dbg !12873
  %140 = load i32, i32* %uv_b_index, align 4, !dbg !12874
  %idxprom195 = sext i32 %140 to i64, !dbg !12873
  %arrayidx196 = getelementptr inbounds %struct.UVvert, %struct.UVvert* %139, i64 %idxprom195, !dbg !12873
  %weld197 = getelementptr inbounds %struct.UVvert, %struct.UVvert* %arrayidx196, i32 0, i32 1, !dbg !12875
  store i8 1, i8* %weld197, align 8, !dbg !12876
  br label %if.end198, !dbg !12877

if.end198:                                        ; preds = %cond.end187, %land.lhs.true144, %for.body132
  br label %for.inc199, !dbg !12878

for.inc199:                                       ; preds = %if.end198
  %141 = load i32, i32* %uv_b_index, align 4, !dbg !12879
  %inc = add nsw i32 %141, 1, !dbg !12879
  store i32 %inc, i32* %uv_b_index, align 4, !dbg !12879
  br label %for.cond129, !dbg !12880, !llvm.loop !12881

for.end200:                                       ; preds = %for.cond129
  %142 = load i32, i32* %_loop_arr_count, align 4, !dbg !12883
  %tobool201 = icmp ne i32 %142, 0, !dbg !12883
  br i1 %tobool201, label %if.then202, label %if.end218, !dbg !12885

if.then202:                                       ; preds = %for.end200
  call void @llvm.dbg.declare(metadata [2 x float]* %uv_mid, metadata !12886, metadata !DIExpression()), !dbg !12888
  %arraydecay203 = getelementptr inbounds [2 x float], [2 x float]* %uv_mid, i64 0, i64 0, !dbg !12889
  %arraydecay204 = getelementptr inbounds [2 x float], [2 x float]* %uv_min, i64 0, i64 0, !dbg !12890
  %arraydecay205 = getelementptr inbounds [2 x float], [2 x float]* %uv_max, i64 0, i64 0, !dbg !12891
  call void @mid_v2_v2v2(float* %arraydecay203, float* %arraydecay204, float* %arraydecay205), !dbg !12892
  store i32 0, i32* %uv_b_index, align 4, !dbg !12893
  br label %for.cond206, !dbg !12895

for.cond206:                                      ; preds = %for.inc215, %if.then202
  %143 = load i32, i32* %uv_b_index, align 4, !dbg !12896
  %144 = load i32, i32* %_loop_arr_count, align 4, !dbg !12898
  %cmp207 = icmp slt i32 %143, %144, !dbg !12899
  br i1 %cmp207, label %for.body209, label %for.end217, !dbg !12900

for.body209:                                      ; preds = %for.cond206
  %145 = load %struct.MLoopUV**, %struct.MLoopUV*** %loop_arr, align 8, !dbg !12901
  %146 = load i32, i32* %uv_b_index, align 4, !dbg !12903
  %idxprom210 = sext i32 %146 to i64, !dbg !12901
  %arrayidx211 = getelementptr inbounds %struct.MLoopUV*, %struct.MLoopUV** %145, i64 %idxprom210, !dbg !12901
  %147 = load %struct.MLoopUV*, %struct.MLoopUV** %arrayidx211, align 8, !dbg !12901
  %uv212 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %147, i32 0, i32 0, !dbg !12904
  %arraydecay213 = getelementptr inbounds [2 x float], [2 x float]* %uv212, i64 0, i64 0, !dbg !12901
  %arraydecay214 = getelementptr inbounds [2 x float], [2 x float]* %uv_mid, i64 0, i64 0, !dbg !12905
  call void @copy_v2_v2(float* %arraydecay213, float* %arraydecay214), !dbg !12906
  br label %for.inc215, !dbg !12907

for.inc215:                                       ; preds = %for.body209
  %148 = load i32, i32* %uv_b_index, align 4, !dbg !12908
  %inc216 = add nsw i32 %148, 1, !dbg !12908
  store i32 %inc216, i32* %uv_b_index, align 4, !dbg !12908
  br label %for.cond206, !dbg !12909, !llvm.loop !12910

for.end217:                                       ; preds = %for.cond206
  br label %if.end218, !dbg !12912

if.end218:                                        ; preds = %for.end217, %for.end200
  br label %if.end219, !dbg !12913

if.end219:                                        ; preds = %if.end218, %for.body68
  br label %for.inc220, !dbg !12914

for.inc220:                                       ; preds = %if.end219
  %149 = load i32, i32* %uv_a_index, align 4, !dbg !12915
  %inc221 = add nsw i32 %149, 1, !dbg !12915
  store i32 %inc221, i32* %uv_a_index, align 4, !dbg !12915
  br label %for.cond65, !dbg !12916, !llvm.loop !12917

for.end222:                                       ; preds = %for.cond65
  %150 = load %struct.UVvert*, %struct.UVvert** %vert_arr, align 8, !dbg !12919
  %tobool223 = icmp ne %struct.UVvert* %150, null, !dbg !12919
  br i1 %tobool223, label %land.lhs.true224, label %if.end228, !dbg !12919

land.lhs.true224:                                 ; preds = %for.end222
  %151 = load %struct.UVvert*, %struct.UVvert** %vert_arr, align 8, !dbg !12919
  %152 = bitcast %struct.UVvert* %151 to i8*, !dbg !12919
  %153 = load i8*, i8** %_vert_arr_static, align 8, !dbg !12919
  %cmp225 = icmp ne i8* %152, %153, !dbg !12919
  br i1 %cmp225, label %if.then227, label %if.end228, !dbg !12921

if.then227:                                       ; preds = %land.lhs.true224
  %154 = load i32, i32* %_vert_arr_count, align 4, !dbg !12922
  %155 = load i8*, i8** %_vert_arr_static, align 8, !dbg !12922
  %156 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !12922
  %157 = load %struct.UVvert*, %struct.UVvert** %vert_arr, align 8, !dbg !12922
  %158 = bitcast %struct.UVvert* %157 to i8*, !dbg !12922
  call void %156(i8* %158), !dbg !12922
  br label %if.end228, !dbg !12922

if.end228:                                        ; preds = %if.then227, %land.lhs.true224, %for.end222
  %159 = load %struct.MLoopUV**, %struct.MLoopUV*** %loop_arr, align 8, !dbg !12924
  %tobool229 = icmp ne %struct.MLoopUV** %159, null, !dbg !12924
  br i1 %tobool229, label %land.lhs.true230, label %if.end234, !dbg !12924

land.lhs.true230:                                 ; preds = %if.end228
  %160 = load %struct.MLoopUV**, %struct.MLoopUV*** %loop_arr, align 8, !dbg !12924
  %161 = bitcast %struct.MLoopUV** %160 to i8*, !dbg !12924
  %162 = load i8*, i8** %_loop_arr_static, align 8, !dbg !12924
  %cmp231 = icmp ne i8* %161, %162, !dbg !12924
  br i1 %cmp231, label %if.then233, label %if.end234, !dbg !12926

if.then233:                                       ; preds = %land.lhs.true230
  %163 = load i32, i32* %_loop_arr_count, align 4, !dbg !12927
  %164 = load i8*, i8** %_loop_arr_static, align 8, !dbg !12927
  %165 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !12927
  %166 = load %struct.MLoopUV**, %struct.MLoopUV*** %loop_arr, align 8, !dbg !12927
  %167 = bitcast %struct.MLoopUV** %166 to i8*, !dbg !12927
  call void %165(i8* %167), !dbg !12927
  br label %if.end234, !dbg !12927

if.end234:                                        ; preds = %if.then233, %land.lhs.true230, %if.end228
  br label %if.end398, !dbg !12929

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.MLoopUV*** %loop_arr235, metadata !12930, metadata !DIExpression()), !dbg !12932
  store %struct.MLoopUV** null, %struct.MLoopUV*** %loop_arr235, align 8, !dbg !12932
  call void @llvm.dbg.declare(metadata i32* %_loop_arr_count236, metadata !12933, metadata !DIExpression()), !dbg !12934
  store i32 0, i32* %_loop_arr_count236, align 4, !dbg !12934
  call void @llvm.dbg.declare(metadata i8** %_loop_arr_static237, metadata !12935, metadata !DIExpression()), !dbg !12934
  store i8* null, i8** %_loop_arr_static237, align 8, !dbg !12934
  call void @llvm.dbg.declare(metadata %struct.MLoopUV*** %loop_arr_unselected, metadata !12936, metadata !DIExpression()), !dbg !12937
  store %struct.MLoopUV** null, %struct.MLoopUV*** %loop_arr_unselected, align 8, !dbg !12937
  call void @llvm.dbg.declare(metadata i32* %_loop_arr_unselected_count, metadata !12938, metadata !DIExpression()), !dbg !12939
  store i32 0, i32* %_loop_arr_unselected_count, align 4, !dbg !12939
  call void @llvm.dbg.declare(metadata i8** %_loop_arr_unselected_static, metadata !12940, metadata !DIExpression()), !dbg !12939
  store i8* null, i8** %_loop_arr_unselected_static, align 8, !dbg !12939
  %168 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !12941
  %bm238 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %168, i32 0, i32 0, !dbg !12941
  %169 = load %struct.BMesh*, %struct.BMesh** %bm238, align 8, !dbg !12941
  %call239 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %169, i8 zeroext 3, i8* null), !dbg !12941
  %170 = bitcast i8* %call239 to %struct.BMFace*, !dbg !12941
  store %struct.BMFace* %170, %struct.BMFace** %efa, align 8, !dbg !12941
  br label %for.cond240, !dbg !12941

for.cond240:                                      ; preds = %for.inc350, %if.else
  %171 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !12943
  %tobool241 = icmp ne %struct.BMFace* %171, null, !dbg !12941
  br i1 %tobool241, label %for.body242, label %for.end352, !dbg !12941

for.body242:                                      ; preds = %for.cond240
  %172 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !12945
  %head243 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %172, i32 0, i32 0, !dbg !12945
  %data244 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head243, i32 0, i32 0, !dbg !12945
  %173 = load i8*, i8** %data244, align 8, !dbg !12945
  %174 = load i32, i32* %cd_poly_tex_offset, align 4, !dbg !12945
  %idx.ext245 = sext i32 %174 to i64, !dbg !12945
  %add.ptr246 = getelementptr inbounds i8, i8* %173, i64 %idx.ext245, !dbg !12945
  %175 = bitcast i8* %add.ptr246 to %struct.MTexPoly*, !dbg !12945
  store %struct.MTexPoly* %175, %struct.MTexPoly** %tf, align 8, !dbg !12947
  %176 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !12948
  %177 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !12950
  %178 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !12951
  %179 = load %struct.MTexPoly*, %struct.MTexPoly** %tf, align 8, !dbg !12952
  %call247 = call zeroext i8 @uvedit_face_visible_test(%struct.Scene* %176, %struct.Image* %177, %struct.BMFace* %178, %struct.MTexPoly* %179), !dbg !12953
  %tobool248 = icmp ne i8 %call247, 0, !dbg !12953
  br i1 %tobool248, label %if.end250, label %if.then249, !dbg !12954

if.then249:                                       ; preds = %for.body242
  br label %for.inc350, !dbg !12955

if.end250:                                        ; preds = %for.body242
  %180 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !12956
  %181 = bitcast %struct.BMFace* %180 to i8*, !dbg !12956
  %call251 = call i8* @BM_iter_new(%struct.BMIter* %liter, %struct.BMesh* null, i8 zeroext 11, i8* %181), !dbg !12956
  %182 = bitcast i8* %call251 to %struct.BMLoop*, !dbg !12956
  store %struct.BMLoop* %182, %struct.BMLoop** %l, align 8, !dbg !12956
  br label %for.cond252, !dbg !12956

for.cond252:                                      ; preds = %for.inc347, %if.end250
  %183 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !12958
  %tobool253 = icmp ne %struct.BMLoop* %183, null, !dbg !12956
  br i1 %tobool253, label %for.body254, label %for.end349, !dbg !12956

for.body254:                                      ; preds = %for.cond252
  call void @llvm.dbg.declare(metadata %struct.MLoopUV** %luv255, metadata !12960, metadata !DIExpression()), !dbg !12962
  %184 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !12963
  %head256 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %184, i32 0, i32 0, !dbg !12963
  %data257 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head256, i32 0, i32 0, !dbg !12963
  %185 = load i8*, i8** %data257, align 8, !dbg !12963
  %186 = load i32, i32* %cd_loop_uv_offset, align 4, !dbg !12963
  %idx.ext258 = sext i32 %186 to i64, !dbg !12963
  %add.ptr259 = getelementptr inbounds i8, i8* %185, i64 %idx.ext258, !dbg !12963
  %187 = bitcast i8* %add.ptr259 to %struct.MLoopUV*, !dbg !12963
  store %struct.MLoopUV* %187, %struct.MLoopUV** %luv255, align 8, !dbg !12962
  %188 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !12964
  %189 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !12966
  %190 = load i32, i32* %cd_loop_uv_offset, align 4, !dbg !12967
  %call260 = call zeroext i8 @uvedit_uv_select_test(%struct.Scene* %188, %struct.BMLoop* %189, i32 %190), !dbg !12968
  %tobool261 = icmp ne i8 %call260, 0, !dbg !12968
  br i1 %tobool261, label %if.then262, label %if.else304, !dbg !12969

if.then262:                                       ; preds = %for.body254
  %191 = load %struct.MLoopUV**, %struct.MLoopUV*** %loop_arr235, align 8, !dbg !12970
  %192 = bitcast %struct.MLoopUV** %191 to i8*, !dbg !12970
  %cmp263 = icmp eq i8* %192, null, !dbg !12970
  br i1 %cmp263, label %land.lhs.true265, label %cond.false274, !dbg !12970

land.lhs.true265:                                 ; preds = %if.then262
  %193 = load i8*, i8** %_loop_arr_static237, align 8, !dbg !12970
  %cmp266 = icmp ne i8* %193, null, !dbg !12970
  br i1 %cmp266, label %land.lhs.true268, label %cond.false274, !dbg !12970

land.lhs.true268:                                 ; preds = %land.lhs.true265
  %194 = load i32, i32* %_loop_arr_count236, align 4, !dbg !12970
  %add269 = add nsw i32 %194, 1, !dbg !12970
  %conv270 = sext i32 %add269 to i64, !dbg !12970
  %cmp271 = icmp uge i64 1, %conv270, !dbg !12970
  br i1 %cmp271, label %cond.true273, label %cond.false274, !dbg !12970

cond.true273:                                     ; preds = %land.lhs.true268
  %195 = load i8*, i8** %_loop_arr_static237, align 8, !dbg !12970
  %196 = bitcast i8* %195 to %struct.MLoopUV**, !dbg !12970
  store %struct.MLoopUV** %196, %struct.MLoopUV*** %loop_arr235, align 8, !dbg !12970
  br label %cond.end299, !dbg !12970

cond.false274:                                    ; preds = %land.lhs.true268, %land.lhs.true265, %if.then262
  %197 = load %struct.MLoopUV**, %struct.MLoopUV*** %loop_arr235, align 8, !dbg !12970
  %198 = bitcast %struct.MLoopUV** %197 to i8*, !dbg !12970
  %199 = load i8*, i8** %_loop_arr_static237, align 8, !dbg !12970
  %cmp275 = icmp eq i8* %198, %199, !dbg !12970
  br i1 %cmp275, label %land.lhs.true277, label %cond.false281, !dbg !12970

land.lhs.true277:                                 ; preds = %cond.false274
  %200 = load %struct.MLoopUV**, %struct.MLoopUV*** %loop_arr235, align 8, !dbg !12970
  %201 = bitcast %struct.MLoopUV** %200 to i8*, !dbg !12970
  %cmp278 = icmp ne i8* %201, null, !dbg !12970
  br i1 %cmp278, label %cond.true280, label %cond.false281, !dbg !12970

cond.true280:                                     ; preds = %land.lhs.true277
  br label %cond.end290, !dbg !12970

cond.false281:                                    ; preds = %land.lhs.true277, %cond.false274
  %202 = load %struct.MLoopUV**, %struct.MLoopUV*** %loop_arr235, align 8, !dbg !12970
  %cmp282 = icmp eq %struct.MLoopUV** %202, null, !dbg !12970
  br i1 %cmp282, label %cond.true284, label %cond.false285, !dbg !12970

cond.true284:                                     ; preds = %cond.false281
  br label %cond.end288, !dbg !12970

cond.false285:                                    ; preds = %cond.false281
  %203 = load i64 (i8*)*, i64 (i8*)** @MEM_allocN_len, align 8, !dbg !12970
  %204 = load %struct.MLoopUV**, %struct.MLoopUV*** %loop_arr235, align 8, !dbg !12970
  %205 = bitcast %struct.MLoopUV** %204 to i8*, !dbg !12970
  %call286 = call i64 %203(i8* %205), !dbg !12970
  %div287 = udiv i64 %call286, 8, !dbg !12970
  br label %cond.end288, !dbg !12970

cond.end288:                                      ; preds = %cond.false285, %cond.true284
  %cond289 = phi i64 [ 0, %cond.true284 ], [ %div287, %cond.false285 ], !dbg !12970
  br label %cond.end290, !dbg !12970

cond.end290:                                      ; preds = %cond.end288, %cond.true280
  %cond291 = phi i64 [ 1, %cond.true280 ], [ %cond289, %cond.end288 ], !dbg !12970
  %206 = load i32, i32* %_loop_arr_count236, align 4, !dbg !12970
  %add292 = add nsw i32 %206, 1, !dbg !12970
  %conv293 = sext i32 %add292 to i64, !dbg !12970
  %cmp294 = icmp uge i64 %cond291, %conv293, !dbg !12970
  br i1 %cmp294, label %cond.true296, label %cond.false297, !dbg !12970

cond.true296:                                     ; preds = %cond.end290
  br label %cond.end298, !dbg !12970

cond.false297:                                    ; preds = %cond.end290
  %207 = bitcast %struct.MLoopUV*** %loop_arr235 to i8**, !dbg !12970
  %208 = load i8*, i8** %_loop_arr_static237, align 8, !dbg !12970
  %209 = load i32, i32* %_loop_arr_count236, align 4, !dbg !12970
  call void @_bli_array_grow_func(i8** %207, i8* %208, i32 8, i32 %209, i32 1, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.152, i64 0, i64 0)), !dbg !12970
  br label %cond.end298, !dbg !12970

cond.end298:                                      ; preds = %cond.false297, %cond.true296
  br label %cond.end299, !dbg !12970

cond.end299:                                      ; preds = %cond.end298, %cond.true273
  %210 = load i32, i32* %_loop_arr_count236, align 4, !dbg !12970
  %add300 = add nsw i32 %210, 1, !dbg !12970
  store i32 %add300, i32* %_loop_arr_count236, align 4, !dbg !12970
  %211 = load %struct.MLoopUV*, %struct.MLoopUV** %luv255, align 8, !dbg !12970
  %212 = load %struct.MLoopUV**, %struct.MLoopUV*** %loop_arr235, align 8, !dbg !12970
  %213 = load i32, i32* %_loop_arr_count236, align 4, !dbg !12970
  %sub301 = sub nsw i32 %213, 1, !dbg !12970
  %idxprom302 = sext i32 %sub301 to i64, !dbg !12970
  %arrayidx303 = getelementptr inbounds %struct.MLoopUV*, %struct.MLoopUV** %212, i64 %idxprom302, !dbg !12970
  store %struct.MLoopUV* %211, %struct.MLoopUV** %arrayidx303, align 8, !dbg !12970
  br label %if.end346, !dbg !12972

if.else304:                                       ; preds = %for.body254
  %214 = load %struct.MLoopUV**, %struct.MLoopUV*** %loop_arr_unselected, align 8, !dbg !12973
  %215 = bitcast %struct.MLoopUV** %214 to i8*, !dbg !12973
  %cmp305 = icmp eq i8* %215, null, !dbg !12973
  br i1 %cmp305, label %land.lhs.true307, label %cond.false316, !dbg !12973

land.lhs.true307:                                 ; preds = %if.else304
  %216 = load i8*, i8** %_loop_arr_unselected_static, align 8, !dbg !12973
  %cmp308 = icmp ne i8* %216, null, !dbg !12973
  br i1 %cmp308, label %land.lhs.true310, label %cond.false316, !dbg !12973

land.lhs.true310:                                 ; preds = %land.lhs.true307
  %217 = load i32, i32* %_loop_arr_unselected_count, align 4, !dbg !12973
  %add311 = add nsw i32 %217, 1, !dbg !12973
  %conv312 = sext i32 %add311 to i64, !dbg !12973
  %cmp313 = icmp uge i64 1, %conv312, !dbg !12973
  br i1 %cmp313, label %cond.true315, label %cond.false316, !dbg !12973

cond.true315:                                     ; preds = %land.lhs.true310
  %218 = load i8*, i8** %_loop_arr_unselected_static, align 8, !dbg !12973
  %219 = bitcast i8* %218 to %struct.MLoopUV**, !dbg !12973
  store %struct.MLoopUV** %219, %struct.MLoopUV*** %loop_arr_unselected, align 8, !dbg !12973
  br label %cond.end341, !dbg !12973

cond.false316:                                    ; preds = %land.lhs.true310, %land.lhs.true307, %if.else304
  %220 = load %struct.MLoopUV**, %struct.MLoopUV*** %loop_arr_unselected, align 8, !dbg !12973
  %221 = bitcast %struct.MLoopUV** %220 to i8*, !dbg !12973
  %222 = load i8*, i8** %_loop_arr_unselected_static, align 8, !dbg !12973
  %cmp317 = icmp eq i8* %221, %222, !dbg !12973
  br i1 %cmp317, label %land.lhs.true319, label %cond.false323, !dbg !12973

land.lhs.true319:                                 ; preds = %cond.false316
  %223 = load %struct.MLoopUV**, %struct.MLoopUV*** %loop_arr_unselected, align 8, !dbg !12973
  %224 = bitcast %struct.MLoopUV** %223 to i8*, !dbg !12973
  %cmp320 = icmp ne i8* %224, null, !dbg !12973
  br i1 %cmp320, label %cond.true322, label %cond.false323, !dbg !12973

cond.true322:                                     ; preds = %land.lhs.true319
  br label %cond.end332, !dbg !12973

cond.false323:                                    ; preds = %land.lhs.true319, %cond.false316
  %225 = load %struct.MLoopUV**, %struct.MLoopUV*** %loop_arr_unselected, align 8, !dbg !12973
  %cmp324 = icmp eq %struct.MLoopUV** %225, null, !dbg !12973
  br i1 %cmp324, label %cond.true326, label %cond.false327, !dbg !12973

cond.true326:                                     ; preds = %cond.false323
  br label %cond.end330, !dbg !12973

cond.false327:                                    ; preds = %cond.false323
  %226 = load i64 (i8*)*, i64 (i8*)** @MEM_allocN_len, align 8, !dbg !12973
  %227 = load %struct.MLoopUV**, %struct.MLoopUV*** %loop_arr_unselected, align 8, !dbg !12973
  %228 = bitcast %struct.MLoopUV** %227 to i8*, !dbg !12973
  %call328 = call i64 %226(i8* %228), !dbg !12973
  %div329 = udiv i64 %call328, 8, !dbg !12973
  br label %cond.end330, !dbg !12973

cond.end330:                                      ; preds = %cond.false327, %cond.true326
  %cond331 = phi i64 [ 0, %cond.true326 ], [ %div329, %cond.false327 ], !dbg !12973
  br label %cond.end332, !dbg !12973

cond.end332:                                      ; preds = %cond.end330, %cond.true322
  %cond333 = phi i64 [ 1, %cond.true322 ], [ %cond331, %cond.end330 ], !dbg !12973
  %229 = load i32, i32* %_loop_arr_unselected_count, align 4, !dbg !12973
  %add334 = add nsw i32 %229, 1, !dbg !12973
  %conv335 = sext i32 %add334 to i64, !dbg !12973
  %cmp336 = icmp uge i64 %cond333, %conv335, !dbg !12973
  br i1 %cmp336, label %cond.true338, label %cond.false339, !dbg !12973

cond.true338:                                     ; preds = %cond.end332
  br label %cond.end340, !dbg !12973

cond.false339:                                    ; preds = %cond.end332
  %230 = bitcast %struct.MLoopUV*** %loop_arr_unselected to i8**, !dbg !12973
  %231 = load i8*, i8** %_loop_arr_unselected_static, align 8, !dbg !12973
  %232 = load i32, i32* %_loop_arr_unselected_count, align 4, !dbg !12973
  call void @_bli_array_grow_func(i8** %230, i8* %231, i32 8, i32 %232, i32 1, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.153, i64 0, i64 0)), !dbg !12973
  br label %cond.end340, !dbg !12973

cond.end340:                                      ; preds = %cond.false339, %cond.true338
  br label %cond.end341, !dbg !12973

cond.end341:                                      ; preds = %cond.end340, %cond.true315
  %233 = load i32, i32* %_loop_arr_unselected_count, align 4, !dbg !12973
  %add342 = add nsw i32 %233, 1, !dbg !12973
  store i32 %add342, i32* %_loop_arr_unselected_count, align 4, !dbg !12973
  %234 = load %struct.MLoopUV*, %struct.MLoopUV** %luv255, align 8, !dbg !12973
  %235 = load %struct.MLoopUV**, %struct.MLoopUV*** %loop_arr_unselected, align 8, !dbg !12973
  %236 = load i32, i32* %_loop_arr_unselected_count, align 4, !dbg !12973
  %sub343 = sub nsw i32 %236, 1, !dbg !12973
  %idxprom344 = sext i32 %sub343 to i64, !dbg !12973
  %arrayidx345 = getelementptr inbounds %struct.MLoopUV*, %struct.MLoopUV** %235, i64 %idxprom344, !dbg !12973
  store %struct.MLoopUV* %234, %struct.MLoopUV** %arrayidx345, align 8, !dbg !12973
  br label %if.end346

if.end346:                                        ; preds = %cond.end341, %cond.end299
  br label %for.inc347, !dbg !12975

for.inc347:                                       ; preds = %if.end346
  %call348 = call i8* @BM_iter_step(%struct.BMIter* %liter), !dbg !12958
  %237 = bitcast i8* %call348 to %struct.BMLoop*, !dbg !12958
  store %struct.BMLoop* %237, %struct.BMLoop** %l, align 8, !dbg !12958
  br label %for.cond252, !dbg !12958, !llvm.loop !12976

for.end349:                                       ; preds = %for.cond252
  br label %for.inc350, !dbg !12978

for.inc350:                                       ; preds = %for.end349, %if.then249
  %call351 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !12943
  %238 = bitcast i8* %call351 to %struct.BMFace*, !dbg !12943
  store %struct.BMFace* %238, %struct.BMFace** %efa, align 8, !dbg !12943
  br label %for.cond240, !dbg !12943, !llvm.loop !12979

for.end352:                                       ; preds = %for.cond240
  store i32 0, i32* %uv_a_index, align 4, !dbg !12981
  br label %for.cond353, !dbg !12983

for.cond353:                                      ; preds = %for.inc383, %for.end352
  %239 = load i32, i32* %uv_a_index, align 4, !dbg !12984
  %240 = load i32, i32* %_loop_arr_count236, align 4, !dbg !12986
  %cmp354 = icmp slt i32 %239, %240, !dbg !12987
  br i1 %cmp354, label %for.body356, label %for.end385, !dbg !12988

for.body356:                                      ; preds = %for.cond353
  call void @llvm.dbg.declare(metadata float* %dist_best, metadata !12989, metadata !DIExpression()), !dbg !12991
  store float 0x47EFFFFFE0000000, float* %dist_best, align 4, !dbg !12991
  call void @llvm.dbg.declare(metadata float* %dist, metadata !12992, metadata !DIExpression()), !dbg !12993
  call void @llvm.dbg.declare(metadata float** %uv_best, metadata !12994, metadata !DIExpression()), !dbg !12995
  store float* null, float** %uv_best, align 8, !dbg !12995
  %241 = load %struct.MLoopUV**, %struct.MLoopUV*** %loop_arr235, align 8, !dbg !12996
  %242 = load i32, i32* %uv_a_index, align 4, !dbg !12997
  %idxprom357 = sext i32 %242 to i64, !dbg !12996
  %arrayidx358 = getelementptr inbounds %struct.MLoopUV*, %struct.MLoopUV** %241, i64 %idxprom357, !dbg !12996
  %243 = load %struct.MLoopUV*, %struct.MLoopUV** %arrayidx358, align 8, !dbg !12996
  %uv359 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %243, i32 0, i32 0, !dbg !12998
  %arraydecay360 = getelementptr inbounds [2 x float], [2 x float]* %uv359, i64 0, i64 0, !dbg !12996
  store float* %arraydecay360, float** %uv_a, align 8, !dbg !12999
  store i32 0, i32* %uv_b_index, align 4, !dbg !13000
  br label %for.cond361, !dbg !13002

for.cond361:                                      ; preds = %for.inc377, %for.body356
  %244 = load i32, i32* %uv_b_index, align 4, !dbg !13003
  %245 = load i32, i32* %_loop_arr_unselected_count, align 4, !dbg !13005
  %cmp362 = icmp slt i32 %244, %245, !dbg !13006
  br i1 %cmp362, label %for.body364, label %for.end379, !dbg !13007

for.body364:                                      ; preds = %for.cond361
  %246 = load %struct.MLoopUV**, %struct.MLoopUV*** %loop_arr_unselected, align 8, !dbg !13008
  %247 = load i32, i32* %uv_b_index, align 4, !dbg !13010
  %idxprom365 = sext i32 %247 to i64, !dbg !13008
  %arrayidx366 = getelementptr inbounds %struct.MLoopUV*, %struct.MLoopUV** %246, i64 %idxprom365, !dbg !13008
  %248 = load %struct.MLoopUV*, %struct.MLoopUV** %arrayidx366, align 8, !dbg !13008
  %uv367 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %248, i32 0, i32 0, !dbg !13011
  %arraydecay368 = getelementptr inbounds [2 x float], [2 x float]* %uv367, i64 0, i64 0, !dbg !13008
  store float* %arraydecay368, float** %uv_b, align 8, !dbg !13012
  %249 = load float*, float** %uv_a, align 8, !dbg !13013
  %250 = load float*, float** %uv_b, align 8, !dbg !13014
  %call369 = call float @len_manhattan_v2v2(float* %249, float* %250), !dbg !13015
  store float %call369, float* %dist, align 4, !dbg !13016
  %251 = load float, float* %dist, align 4, !dbg !13017
  %252 = load float, float* %threshold, align 4, !dbg !13019
  %cmp370 = fcmp olt float %251, %252, !dbg !13020
  br i1 %cmp370, label %land.lhs.true372, label %if.end376, !dbg !13021

land.lhs.true372:                                 ; preds = %for.body364
  %253 = load float, float* %dist, align 4, !dbg !13022
  %254 = load float, float* %dist_best, align 4, !dbg !13023
  %cmp373 = fcmp olt float %253, %254, !dbg !13024
  br i1 %cmp373, label %if.then375, label %if.end376, !dbg !13025

if.then375:                                       ; preds = %land.lhs.true372
  %255 = load float*, float** %uv_b, align 8, !dbg !13026
  store float* %255, float** %uv_best, align 8, !dbg !13028
  %256 = load float, float* %dist, align 4, !dbg !13029
  store float %256, float* %dist_best, align 4, !dbg !13030
  br label %if.end376, !dbg !13031

if.end376:                                        ; preds = %if.then375, %land.lhs.true372, %for.body364
  br label %for.inc377, !dbg !13032

for.inc377:                                       ; preds = %if.end376
  %257 = load i32, i32* %uv_b_index, align 4, !dbg !13033
  %inc378 = add nsw i32 %257, 1, !dbg !13033
  store i32 %inc378, i32* %uv_b_index, align 4, !dbg !13033
  br label %for.cond361, !dbg !13034, !llvm.loop !13035

for.end379:                                       ; preds = %for.cond361
  %258 = load float*, float** %uv_best, align 8, !dbg !13037
  %tobool380 = icmp ne float* %258, null, !dbg !13037
  br i1 %tobool380, label %if.then381, label %if.end382, !dbg !13039

if.then381:                                       ; preds = %for.end379
  %259 = load float*, float** %uv_a, align 8, !dbg !13040
  %260 = load float*, float** %uv_best, align 8, !dbg !13042
  call void @copy_v2_v2(float* %259, float* %260), !dbg !13043
  br label %if.end382, !dbg !13044

if.end382:                                        ; preds = %if.then381, %for.end379
  br label %for.inc383, !dbg !13045

for.inc383:                                       ; preds = %if.end382
  %261 = load i32, i32* %uv_a_index, align 4, !dbg !13046
  %inc384 = add nsw i32 %261, 1, !dbg !13046
  store i32 %inc384, i32* %uv_a_index, align 4, !dbg !13046
  br label %for.cond353, !dbg !13047, !llvm.loop !13048

for.end385:                                       ; preds = %for.cond353
  %262 = load %struct.MLoopUV**, %struct.MLoopUV*** %loop_arr235, align 8, !dbg !13050
  %tobool386 = icmp ne %struct.MLoopUV** %262, null, !dbg !13050
  br i1 %tobool386, label %land.lhs.true387, label %if.end391, !dbg !13050

land.lhs.true387:                                 ; preds = %for.end385
  %263 = load %struct.MLoopUV**, %struct.MLoopUV*** %loop_arr235, align 8, !dbg !13050
  %264 = bitcast %struct.MLoopUV** %263 to i8*, !dbg !13050
  %265 = load i8*, i8** %_loop_arr_static237, align 8, !dbg !13050
  %cmp388 = icmp ne i8* %264, %265, !dbg !13050
  br i1 %cmp388, label %if.then390, label %if.end391, !dbg !13052

if.then390:                                       ; preds = %land.lhs.true387
  %266 = load i32, i32* %_loop_arr_count236, align 4, !dbg !13053
  %267 = load i8*, i8** %_loop_arr_static237, align 8, !dbg !13053
  %268 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !13053
  %269 = load %struct.MLoopUV**, %struct.MLoopUV*** %loop_arr235, align 8, !dbg !13053
  %270 = bitcast %struct.MLoopUV** %269 to i8*, !dbg !13053
  call void %268(i8* %270), !dbg !13053
  br label %if.end391, !dbg !13053

if.end391:                                        ; preds = %if.then390, %land.lhs.true387, %for.end385
  %271 = load %struct.MLoopUV**, %struct.MLoopUV*** %loop_arr_unselected, align 8, !dbg !13055
  %tobool392 = icmp ne %struct.MLoopUV** %271, null, !dbg !13055
  br i1 %tobool392, label %land.lhs.true393, label %if.end397, !dbg !13055

land.lhs.true393:                                 ; preds = %if.end391
  %272 = load %struct.MLoopUV**, %struct.MLoopUV*** %loop_arr_unselected, align 8, !dbg !13055
  %273 = bitcast %struct.MLoopUV** %272 to i8*, !dbg !13055
  %274 = load i8*, i8** %_loop_arr_unselected_static, align 8, !dbg !13055
  %cmp394 = icmp ne i8* %273, %274, !dbg !13055
  br i1 %cmp394, label %if.then396, label %if.end397, !dbg !13057

if.then396:                                       ; preds = %land.lhs.true393
  %275 = load i32, i32* %_loop_arr_unselected_count, align 4, !dbg !13058
  %276 = load i8*, i8** %_loop_arr_unselected_static, align 8, !dbg !13058
  %277 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !13058
  %278 = load %struct.MLoopUV**, %struct.MLoopUV*** %loop_arr_unselected, align 8, !dbg !13058
  %279 = bitcast %struct.MLoopUV** %278 to i8*, !dbg !13058
  call void %277(i8* %279), !dbg !13058
  br label %if.end397, !dbg !13058

if.end397:                                        ; preds = %if.then396, %land.lhs.true393, %if.end391
  br label %if.end398

if.end398:                                        ; preds = %if.end397, %if.end234
  %280 = load %struct.SpaceImage*, %struct.SpaceImage** %sima, align 8, !dbg !13060
  %281 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !13061
  %282 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !13062
  call void @uvedit_live_unwrap_update(%struct.SpaceImage* %280, %struct.Scene* %281, %struct.Object* %282), !dbg !13063
  %283 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !13064
  %data399 = getelementptr inbounds %struct.Object, %struct.Object* %283, i32 0, i32 19, !dbg !13065
  %284 = load i8*, i8** %data399, align 8, !dbg !13065
  %285 = bitcast i8* %284 to %struct.ID*, !dbg !13064
  call void @DAG_id_tag_update(%struct.ID* %285, i16 signext 0), !dbg !13066
  %286 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !13067
  %287 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !13068
  %data400 = getelementptr inbounds %struct.Object, %struct.Object* %287, i32 0, i32 19, !dbg !13069
  %288 = load i8*, i8** %data400, align 8, !dbg !13069
  call void @WM_event_add_notifier(%struct.bContext* %286, i32 274399232, i8* %288), !dbg !13070
  ret i32 4, !dbg !13071
}

declare dso_local %struct.PropertyRNA* @RNA_def_float(i8*, i8*, float, float, float, i8*, i8*, float, float) #2

declare dso_local float @RNA_float_get(%struct.PointerRNA*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @uv_pin_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !13072 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %scene = alloca %struct.Scene*, align 8
  %obedit = alloca %struct.Object*, align 8
  %ima = alloca %struct.Image*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  %efa = alloca %struct.BMFace*, align 8
  %l = alloca %struct.BMLoop*, align 8
  %iter = alloca %struct.BMIter, align 8
  %liter = alloca %struct.BMIter, align 8
  %tface = alloca %struct.MTexPoly*, align 8
  %luv = alloca %struct.MLoopUV*, align 8
  %clear = alloca i8, align 1
  %cd_loop_uv_offset = alloca i32, align 4
  %cd_poly_tex_offset = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !13073, metadata !DIExpression()), !dbg !13074
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !13075, metadata !DIExpression()), !dbg !13076
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene, metadata !13077, metadata !DIExpression()), !dbg !13078
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !13079
  %call = call %struct.Scene* @CTX_data_scene(%struct.bContext* %0), !dbg !13080
  store %struct.Scene* %call, %struct.Scene** %scene, align 8, !dbg !13078
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !13081, metadata !DIExpression()), !dbg !13082
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !13083
  %call1 = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %1), !dbg !13084
  store %struct.Object* %call1, %struct.Object** %obedit, align 8, !dbg !13082
  call void @llvm.dbg.declare(metadata %struct.Image** %ima, metadata !13085, metadata !DIExpression()), !dbg !13086
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !13087
  %call2 = call %struct.Image* @CTX_data_edit_image(%struct.bContext* %2), !dbg !13088
  store %struct.Image* %call2, %struct.Image** %ima, align 8, !dbg !13086
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !13089, metadata !DIExpression()), !dbg !13090
  %3 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !13091
  %call3 = call %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object* %3), !dbg !13092
  store %struct.BMEditMesh* %call3, %struct.BMEditMesh** %em, align 8, !dbg !13090
  call void @llvm.dbg.declare(metadata %struct.BMFace** %efa, metadata !13093, metadata !DIExpression()), !dbg !13094
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l, metadata !13095, metadata !DIExpression()), !dbg !13096
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iter, metadata !13097, metadata !DIExpression()), !dbg !13098
  call void @llvm.dbg.declare(metadata %struct.BMIter* %liter, metadata !13099, metadata !DIExpression()), !dbg !13100
  call void @llvm.dbg.declare(metadata %struct.MTexPoly** %tface, metadata !13101, metadata !DIExpression()), !dbg !13102
  call void @llvm.dbg.declare(metadata %struct.MLoopUV** %luv, metadata !13103, metadata !DIExpression()), !dbg !13104
  call void @llvm.dbg.declare(metadata i8* %clear, metadata !13105, metadata !DIExpression()), !dbg !13106
  %4 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !13107
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %4, i32 0, i32 7, !dbg !13108
  %5 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !13108
  %call4 = call i32 @RNA_boolean_get(%struct.PointerRNA* %5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.24, i64 0, i64 0)), !dbg !13109
  %conv = trunc i32 %call4 to i8, !dbg !13109
  store i8 %conv, i8* %clear, align 1, !dbg !13106
  call void @llvm.dbg.declare(metadata i32* %cd_loop_uv_offset, metadata !13110, metadata !DIExpression()), !dbg !13111
  %6 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !13112
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %6, i32 0, i32 0, !dbg !13113
  %7 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !13113
  %ldata = getelementptr inbounds %struct.BMesh, %struct.BMesh* %7, i32 0, i32 26, !dbg !13114
  %call5 = call i32 @CustomData_get_offset(%struct.CustomData* %ldata, i32 16), !dbg !13115
  store i32 %call5, i32* %cd_loop_uv_offset, align 4, !dbg !13111
  call void @llvm.dbg.declare(metadata i32* %cd_poly_tex_offset, metadata !13116, metadata !DIExpression()), !dbg !13117
  %8 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !13118
  %bm6 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %8, i32 0, i32 0, !dbg !13119
  %9 = load %struct.BMesh*, %struct.BMesh** %bm6, align 8, !dbg !13119
  %pdata = getelementptr inbounds %struct.BMesh, %struct.BMesh* %9, i32 0, i32 27, !dbg !13120
  %call7 = call i32 @CustomData_get_offset(%struct.CustomData* %pdata, i32 15), !dbg !13121
  store i32 %call7, i32* %cd_poly_tex_offset, align 4, !dbg !13117
  %10 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !13122
  %bm8 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %10, i32 0, i32 0, !dbg !13122
  %11 = load %struct.BMesh*, %struct.BMesh** %bm8, align 8, !dbg !13122
  %call9 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %11, i8 zeroext 3, i8* null), !dbg !13122
  %12 = bitcast i8* %call9 to %struct.BMFace*, !dbg !13122
  store %struct.BMFace* %12, %struct.BMFace** %efa, align 8, !dbg !13122
  br label %for.cond, !dbg !13122

for.cond:                                         ; preds = %for.inc33, %entry
  %13 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !13124
  %tobool = icmp ne %struct.BMFace* %13, null, !dbg !13122
  br i1 %tobool, label %for.body, label %for.end35, !dbg !13122

for.body:                                         ; preds = %for.cond
  %14 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !13126
  %head = getelementptr inbounds %struct.BMFace, %struct.BMFace* %14, i32 0, i32 0, !dbg !13126
  %data = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head, i32 0, i32 0, !dbg !13126
  %15 = load i8*, i8** %data, align 8, !dbg !13126
  %16 = load i32, i32* %cd_poly_tex_offset, align 4, !dbg !13126
  %idx.ext = sext i32 %16 to i64, !dbg !13126
  %add.ptr = getelementptr inbounds i8, i8* %15, i64 %idx.ext, !dbg !13126
  %17 = bitcast i8* %add.ptr to %struct.MTexPoly*, !dbg !13126
  store %struct.MTexPoly* %17, %struct.MTexPoly** %tface, align 8, !dbg !13128
  %18 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !13129
  %19 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !13131
  %20 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !13132
  %21 = load %struct.MTexPoly*, %struct.MTexPoly** %tface, align 8, !dbg !13133
  %call10 = call zeroext i8 @uvedit_face_visible_test(%struct.Scene* %18, %struct.Image* %19, %struct.BMFace* %20, %struct.MTexPoly* %21), !dbg !13134
  %tobool11 = icmp ne i8 %call10, 0, !dbg !13134
  br i1 %tobool11, label %if.end, label %if.then, !dbg !13135

if.then:                                          ; preds = %for.body
  br label %for.inc33, !dbg !13136

if.end:                                           ; preds = %for.body
  %22 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !13137
  %23 = bitcast %struct.BMFace* %22 to i8*, !dbg !13137
  %call12 = call i8* @BM_iter_new(%struct.BMIter* %liter, %struct.BMesh* null, i8 zeroext 11, i8* %23), !dbg !13137
  %24 = bitcast i8* %call12 to %struct.BMLoop*, !dbg !13137
  store %struct.BMLoop* %24, %struct.BMLoop** %l, align 8, !dbg !13137
  br label %for.cond13, !dbg !13137

for.cond13:                                       ; preds = %for.inc, %if.end
  %25 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !13139
  %tobool14 = icmp ne %struct.BMLoop* %25, null, !dbg !13137
  br i1 %tobool14, label %for.body15, label %for.end, !dbg !13137

for.body15:                                       ; preds = %for.cond13
  %26 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !13141
  %head16 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %26, i32 0, i32 0, !dbg !13141
  %data17 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head16, i32 0, i32 0, !dbg !13141
  %27 = load i8*, i8** %data17, align 8, !dbg !13141
  %28 = load i32, i32* %cd_loop_uv_offset, align 4, !dbg !13141
  %idx.ext18 = sext i32 %28 to i64, !dbg !13141
  %add.ptr19 = getelementptr inbounds i8, i8* %27, i64 %idx.ext18, !dbg !13141
  %29 = bitcast i8* %add.ptr19 to %struct.MLoopUV*, !dbg !13141
  store %struct.MLoopUV* %29, %struct.MLoopUV** %luv, align 8, !dbg !13143
  %30 = load i8, i8* %clear, align 1, !dbg !13144
  %tobool20 = icmp ne i8 %30, 0, !dbg !13144
  br i1 %tobool20, label %if.else, label %if.then21, !dbg !13146

if.then21:                                        ; preds = %for.body15
  %31 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !13147
  %32 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !13150
  %33 = load i32, i32* %cd_loop_uv_offset, align 4, !dbg !13151
  %call22 = call zeroext i8 @uvedit_uv_select_test(%struct.Scene* %31, %struct.BMLoop* %32, i32 %33), !dbg !13152
  %tobool23 = icmp ne i8 %call22, 0, !dbg !13152
  br i1 %tobool23, label %if.then24, label %if.end25, !dbg !13153

if.then24:                                        ; preds = %if.then21
  %34 = load %struct.MLoopUV*, %struct.MLoopUV** %luv, align 8, !dbg !13154
  %flag = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %34, i32 0, i32 1, !dbg !13155
  %35 = load i32, i32* %flag, align 4, !dbg !13156
  %or = or i32 %35, 4, !dbg !13156
  store i32 %or, i32* %flag, align 4, !dbg !13156
  br label %if.end25, !dbg !13154

if.end25:                                         ; preds = %if.then24, %if.then21
  br label %if.end31, !dbg !13157

if.else:                                          ; preds = %for.body15
  %36 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !13158
  %37 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !13161
  %38 = load i32, i32* %cd_loop_uv_offset, align 4, !dbg !13162
  %call26 = call zeroext i8 @uvedit_uv_select_test(%struct.Scene* %36, %struct.BMLoop* %37, i32 %38), !dbg !13163
  %tobool27 = icmp ne i8 %call26, 0, !dbg !13163
  br i1 %tobool27, label %if.then28, label %if.end30, !dbg !13164

if.then28:                                        ; preds = %if.else
  %39 = load %struct.MLoopUV*, %struct.MLoopUV** %luv, align 8, !dbg !13165
  %flag29 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %39, i32 0, i32 1, !dbg !13166
  %40 = load i32, i32* %flag29, align 4, !dbg !13167
  %and = and i32 %40, -5, !dbg !13167
  store i32 %and, i32* %flag29, align 4, !dbg !13167
  br label %if.end30, !dbg !13165

if.end30:                                         ; preds = %if.then28, %if.else
  br label %if.end31

if.end31:                                         ; preds = %if.end30, %if.end25
  br label %for.inc, !dbg !13168

for.inc:                                          ; preds = %if.end31
  %call32 = call i8* @BM_iter_step(%struct.BMIter* %liter), !dbg !13139
  %41 = bitcast i8* %call32 to %struct.BMLoop*, !dbg !13139
  store %struct.BMLoop* %41, %struct.BMLoop** %l, align 8, !dbg !13139
  br label %for.cond13, !dbg !13139, !llvm.loop !13169

for.end:                                          ; preds = %for.cond13
  br label %for.inc33, !dbg !13171

for.inc33:                                        ; preds = %for.end, %if.then
  %call34 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !13124
  %42 = bitcast i8* %call34 to %struct.BMFace*, !dbg !13124
  store %struct.BMFace* %42, %struct.BMFace** %efa, align 8, !dbg !13124
  br label %for.cond, !dbg !13124, !llvm.loop !13172

for.end35:                                        ; preds = %for.cond
  %43 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !13174
  %44 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !13175
  %data36 = getelementptr inbounds %struct.Object, %struct.Object* %44, i32 0, i32 19, !dbg !13176
  %45 = load i8*, i8** %data36, align 8, !dbg !13176
  call void @WM_event_add_notifier(%struct.bContext* %43, i32 274399232, i8* %45), !dbg !13177
  ret i32 4, !dbg !13178
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @uv_reveal_exec(%struct.bContext* %C, %struct.wmOperator* %UNUSED_op) #0 !dbg !13179 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_op.addr = alloca %struct.wmOperator*, align 8
  %sima = alloca %struct.SpaceImage*, align 8
  %obedit = alloca %struct.Object*, align 8
  %scene = alloca %struct.Scene*, align 8
  %ts = alloca %struct.ToolSettings*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  %efa = alloca %struct.BMFace*, align 8
  %l = alloca %struct.BMLoop*, align 8
  %iter = alloca %struct.BMIter, align 8
  %liter = alloca %struct.BMIter, align 8
  %luv = alloca %struct.MLoopUV*, align 8
  %use_face_center = alloca i32, align 4
  %stickymode = alloca i32, align 4
  %cd_loop_uv_offset = alloca i32, align 4
  %totsel = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !13180, metadata !DIExpression()), !dbg !13181
  store %struct.wmOperator* %UNUSED_op, %struct.wmOperator** %UNUSED_op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %UNUSED_op.addr, metadata !13182, metadata !DIExpression()), !dbg !13183
  call void @llvm.dbg.declare(metadata %struct.SpaceImage** %sima, metadata !13184, metadata !DIExpression()), !dbg !13185
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !13186
  %call = call %struct.SpaceImage* @CTX_wm_space_image(%struct.bContext* %0), !dbg !13187
  store %struct.SpaceImage* %call, %struct.SpaceImage** %sima, align 8, !dbg !13185
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !13188, metadata !DIExpression()), !dbg !13189
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !13190
  %call1 = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %1), !dbg !13191
  store %struct.Object* %call1, %struct.Object** %obedit, align 8, !dbg !13189
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene, metadata !13192, metadata !DIExpression()), !dbg !13193
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !13194
  %call2 = call %struct.Scene* @CTX_data_scene(%struct.bContext* %2), !dbg !13195
  store %struct.Scene* %call2, %struct.Scene** %scene, align 8, !dbg !13193
  call void @llvm.dbg.declare(metadata %struct.ToolSettings** %ts, metadata !13196, metadata !DIExpression()), !dbg !13197
  %3 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !13198
  %toolsettings = getelementptr inbounds %struct.Scene, %struct.Scene* %3, i32 0, i32 20, !dbg !13199
  %4 = load %struct.ToolSettings*, %struct.ToolSettings** %toolsettings, align 8, !dbg !13199
  store %struct.ToolSettings* %4, %struct.ToolSettings** %ts, align 8, !dbg !13197
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !13200, metadata !DIExpression()), !dbg !13201
  %5 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !13202
  %call3 = call %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object* %5), !dbg !13203
  store %struct.BMEditMesh* %call3, %struct.BMEditMesh** %em, align 8, !dbg !13201
  call void @llvm.dbg.declare(metadata %struct.BMFace** %efa, metadata !13204, metadata !DIExpression()), !dbg !13205
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l, metadata !13206, metadata !DIExpression()), !dbg !13207
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iter, metadata !13208, metadata !DIExpression()), !dbg !13209
  call void @llvm.dbg.declare(metadata %struct.BMIter* %liter, metadata !13210, metadata !DIExpression()), !dbg !13211
  call void @llvm.dbg.declare(metadata %struct.MLoopUV** %luv, metadata !13212, metadata !DIExpression()), !dbg !13213
  call void @llvm.dbg.declare(metadata i32* %use_face_center, metadata !13214, metadata !DIExpression()), !dbg !13215
  %6 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !13216
  %uv_selectmode = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %6, i32 0, i32 12, !dbg !13217
  %7 = load i8, i8* %uv_selectmode, align 1, !dbg !13217
  %conv = zext i8 %7 to i32, !dbg !13216
  %cmp = icmp eq i32 %conv, 4, !dbg !13218
  %conv4 = zext i1 %cmp to i32, !dbg !13218
  store i32 %conv4, i32* %use_face_center, align 4, !dbg !13215
  call void @llvm.dbg.declare(metadata i32* %stickymode, metadata !13219, metadata !DIExpression()), !dbg !13220
  %8 = load %struct.SpaceImage*, %struct.SpaceImage** %sima, align 8, !dbg !13221
  %tobool = icmp ne %struct.SpaceImage* %8, null, !dbg !13221
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !13221

cond.true:                                        ; preds = %entry
  %9 = load %struct.SpaceImage*, %struct.SpaceImage** %sima, align 8, !dbg !13222
  %sticky = getelementptr inbounds %struct.SpaceImage, %struct.SpaceImage* %9, i32 0, i32 23, !dbg !13223
  %10 = load i8, i8* %sticky, align 1, !dbg !13223
  %conv5 = zext i8 %10 to i32, !dbg !13222
  %cmp6 = icmp ne i32 %conv5, 1, !dbg !13224
  %conv7 = zext i1 %cmp6 to i32, !dbg !13224
  br label %cond.end, !dbg !13221

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !13221

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv7, %cond.true ], [ 1, %cond.false ], !dbg !13221
  store i32 %cond, i32* %stickymode, align 4, !dbg !13220
  call void @llvm.dbg.declare(metadata i32* %cd_loop_uv_offset, metadata !13225, metadata !DIExpression()), !dbg !13226
  %11 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !13227
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %11, i32 0, i32 0, !dbg !13228
  %12 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !13228
  %ldata = getelementptr inbounds %struct.BMesh, %struct.BMesh* %12, i32 0, i32 26, !dbg !13229
  %call8 = call i32 @CustomData_get_offset(%struct.CustomData* %ldata, i32 16), !dbg !13230
  store i32 %call8, i32* %cd_loop_uv_offset, align 4, !dbg !13226
  %13 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !13231
  %uv_flag = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %13, i32 0, i32 11, !dbg !13233
  %14 = load i8, i8* %uv_flag, align 2, !dbg !13233
  %conv9 = zext i8 %14 to i32, !dbg !13231
  %and = and i32 %conv9, 1, !dbg !13234
  %tobool10 = icmp ne i32 %and, 0, !dbg !13234
  br i1 %tobool10, label %if.then, label %if.end, !dbg !13235

if.then:                                          ; preds = %cond.end
  %15 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !13236
  call void @EDBM_mesh_reveal(%struct.BMEditMesh* %15), !dbg !13238
  %16 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !13239
  %17 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !13240
  %data = getelementptr inbounds %struct.Object, %struct.Object* %17, i32 0, i32 19, !dbg !13241
  %18 = load i8*, i8** %data, align 8, !dbg !13241
  call void @WM_event_add_notifier(%struct.bContext* %16, i32 274333696, i8* %18), !dbg !13242
  store i32 4, i32* %retval, align 4, !dbg !13243
  br label %return, !dbg !13243

if.end:                                           ; preds = %cond.end
  %19 = load i32, i32* %use_face_center, align 4, !dbg !13244
  %tobool11 = icmp ne i32 %19, 0, !dbg !13244
  br i1 %tobool11, label %if.then12, label %if.else129, !dbg !13246

if.then12:                                        ; preds = %if.end
  %20 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !13247
  %selectmode = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %20, i32 0, i32 12, !dbg !13250
  %21 = load i16, i16* %selectmode, align 4, !dbg !13250
  %conv13 = sext i16 %21 to i32, !dbg !13247
  %cmp14 = icmp eq i32 %conv13, 4, !dbg !13251
  br i1 %cmp14, label %if.then16, label %if.else, !dbg !13252

if.then16:                                        ; preds = %if.then12
  %22 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !13253
  %bm17 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %22, i32 0, i32 0, !dbg !13253
  %23 = load %struct.BMesh*, %struct.BMesh** %bm17, align 8, !dbg !13253
  %call18 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %23, i8 zeroext 3, i8* null), !dbg !13253
  %24 = bitcast i8* %call18 to %struct.BMFace*, !dbg !13253
  store %struct.BMFace* %24, %struct.BMFace** %efa, align 8, !dbg !13253
  br label %for.cond, !dbg !13253

for.cond:                                         ; preds = %for.inc36, %if.then16
  %25 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !13256
  %tobool19 = icmp ne %struct.BMFace* %25, null, !dbg !13253
  br i1 %tobool19, label %for.body, label %for.end38, !dbg !13253

for.body:                                         ; preds = %for.cond
  %26 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !13258
  %head = getelementptr inbounds %struct.BMFace, %struct.BMFace* %26, i32 0, i32 0, !dbg !13258
  call void @_bm_elem_flag_disable(%struct.BMHeader* %head, i8 zeroext 16), !dbg !13258
  %27 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !13260
  %head20 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %27, i32 0, i32 0, !dbg !13260
  %call21 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head20, i8 zeroext 2), !dbg !13260
  %tobool22 = icmp ne i8 %call21, 0, !dbg !13260
  br i1 %tobool22, label %if.end35, label %land.lhs.true, !dbg !13262

land.lhs.true:                                    ; preds = %for.body
  %28 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !13263
  %head23 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %28, i32 0, i32 0, !dbg !13263
  %call24 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head23, i8 zeroext 1), !dbg !13263
  %tobool25 = icmp ne i8 %call24, 0, !dbg !13263
  br i1 %tobool25, label %if.end35, label %if.then26, !dbg !13264

if.then26:                                        ; preds = %land.lhs.true
  %29 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !13265
  %30 = bitcast %struct.BMFace* %29 to i8*, !dbg !13265
  %call27 = call i8* @BM_iter_new(%struct.BMIter* %liter, %struct.BMesh* null, i8 zeroext 11, i8* %30), !dbg !13265
  %31 = bitcast i8* %call27 to %struct.BMLoop*, !dbg !13265
  store %struct.BMLoop* %31, %struct.BMLoop** %l, align 8, !dbg !13265
  br label %for.cond28, !dbg !13265

for.cond28:                                       ; preds = %for.inc, %if.then26
  %32 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !13268
  %tobool29 = icmp ne %struct.BMLoop* %32, null, !dbg !13265
  br i1 %tobool29, label %for.body30, label %for.end, !dbg !13265

for.body30:                                       ; preds = %for.cond28
  %33 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !13270
  %head31 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %33, i32 0, i32 0, !dbg !13270
  %data32 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head31, i32 0, i32 0, !dbg !13270
  %34 = load i8*, i8** %data32, align 8, !dbg !13270
  %35 = load i32, i32* %cd_loop_uv_offset, align 4, !dbg !13270
  %idx.ext = sext i32 %35 to i64, !dbg !13270
  %add.ptr = getelementptr inbounds i8, i8* %34, i64 %idx.ext, !dbg !13270
  %36 = bitcast i8* %add.ptr to %struct.MLoopUV*, !dbg !13270
  store %struct.MLoopUV* %36, %struct.MLoopUV** %luv, align 8, !dbg !13272
  %37 = load %struct.MLoopUV*, %struct.MLoopUV** %luv, align 8, !dbg !13273
  %flag = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %37, i32 0, i32 1, !dbg !13274
  %38 = load i32, i32* %flag, align 4, !dbg !13275
  %or = or i32 %38, 2, !dbg !13275
  store i32 %or, i32* %flag, align 4, !dbg !13275
  br label %for.inc, !dbg !13276

for.inc:                                          ; preds = %for.body30
  %call33 = call i8* @BM_iter_step(%struct.BMIter* %liter), !dbg !13268
  %39 = bitcast i8* %call33 to %struct.BMLoop*, !dbg !13268
  store %struct.BMLoop* %39, %struct.BMLoop** %l, align 8, !dbg !13268
  br label %for.cond28, !dbg !13268, !llvm.loop !13277

for.end:                                          ; preds = %for.cond28
  %40 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !13279
  %head34 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %40, i32 0, i32 0, !dbg !13279
  call void @_bm_elem_flag_enable(%struct.BMHeader* %head34, i8 zeroext 16), !dbg !13279
  br label %if.end35, !dbg !13280

if.end35:                                         ; preds = %for.end, %land.lhs.true, %for.body
  br label %for.inc36, !dbg !13281

for.inc36:                                        ; preds = %if.end35
  %call37 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !13256
  %41 = bitcast i8* %call37 to %struct.BMFace*, !dbg !13256
  store %struct.BMFace* %41, %struct.BMFace** %efa, align 8, !dbg !13256
  br label %for.cond, !dbg !13256, !llvm.loop !13282

for.end38:                                        ; preds = %for.cond
  br label %if.end128, !dbg !13284

if.else:                                          ; preds = %if.then12
  %42 = load i32, i32* %stickymode, align 4, !dbg !13285
  %tobool39 = icmp ne i32 %42, 0, !dbg !13285
  br i1 %tobool39, label %if.else86, label %if.then40, !dbg !13288

if.then40:                                        ; preds = %if.else
  %43 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !13289
  %bm41 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %43, i32 0, i32 0, !dbg !13289
  %44 = load %struct.BMesh*, %struct.BMesh** %bm41, align 8, !dbg !13289
  %call42 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %44, i8 zeroext 3, i8* null), !dbg !13289
  %45 = bitcast i8* %call42 to %struct.BMFace*, !dbg !13289
  store %struct.BMFace* %45, %struct.BMFace** %efa, align 8, !dbg !13289
  br label %for.cond43, !dbg !13289

for.cond43:                                       ; preds = %for.inc83, %if.then40
  %46 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !13292
  %tobool44 = icmp ne %struct.BMFace* %46, null, !dbg !13289
  br i1 %tobool44, label %for.body45, label %for.end85, !dbg !13289

for.body45:                                       ; preds = %for.cond43
  %47 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !13294
  %head46 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %47, i32 0, i32 0, !dbg !13294
  call void @_bm_elem_flag_disable(%struct.BMHeader* %head46, i8 zeroext 16), !dbg !13294
  %48 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !13296
  %head47 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %48, i32 0, i32 0, !dbg !13296
  %call48 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head47, i8 zeroext 2), !dbg !13296
  %tobool49 = icmp ne i8 %call48, 0, !dbg !13296
  br i1 %tobool49, label %if.end82, label %land.lhs.true50, !dbg !13298

land.lhs.true50:                                  ; preds = %for.body45
  %49 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !13299
  %head51 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %49, i32 0, i32 0, !dbg !13299
  %call52 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head51, i8 zeroext 1), !dbg !13299
  %tobool53 = icmp ne i8 %call52, 0, !dbg !13299
  br i1 %tobool53, label %if.end82, label %if.then54, !dbg !13300

if.then54:                                        ; preds = %land.lhs.true50
  call void @llvm.dbg.declare(metadata i32* %totsel, metadata !13301, metadata !DIExpression()), !dbg !13303
  store i32 0, i32* %totsel, align 4, !dbg !13303
  %50 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !13304
  %51 = bitcast %struct.BMFace* %50 to i8*, !dbg !13304
  %call55 = call i8* @BM_iter_new(%struct.BMIter* %liter, %struct.BMesh* null, i8 zeroext 11, i8* %51), !dbg !13304
  %52 = bitcast i8* %call55 to %struct.BMLoop*, !dbg !13304
  store %struct.BMLoop* %52, %struct.BMLoop** %l, align 8, !dbg !13304
  br label %for.cond56, !dbg !13304

for.cond56:                                       ; preds = %for.inc62, %if.then54
  %53 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !13306
  %tobool57 = icmp ne %struct.BMLoop* %53, null, !dbg !13304
  br i1 %tobool57, label %for.body58, label %for.end64, !dbg !13304

for.body58:                                       ; preds = %for.cond56
  %54 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !13308
  %v = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %54, i32 0, i32 1, !dbg !13308
  %55 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !13308
  %head59 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %55, i32 0, i32 0, !dbg !13308
  %call60 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head59, i8 zeroext 1), !dbg !13308
  %conv61 = zext i8 %call60 to i32, !dbg !13308
  %56 = load i32, i32* %totsel, align 4, !dbg !13310
  %add = add nsw i32 %56, %conv61, !dbg !13310
  store i32 %add, i32* %totsel, align 4, !dbg !13310
  br label %for.inc62, !dbg !13311

for.inc62:                                        ; preds = %for.body58
  %call63 = call i8* @BM_iter_step(%struct.BMIter* %liter), !dbg !13306
  %57 = bitcast i8* %call63 to %struct.BMLoop*, !dbg !13306
  store %struct.BMLoop* %57, %struct.BMLoop** %l, align 8, !dbg !13306
  br label %for.cond56, !dbg !13306, !llvm.loop !13312

for.end64:                                        ; preds = %for.cond56
  %58 = load i32, i32* %totsel, align 4, !dbg !13314
  %tobool65 = icmp ne i32 %58, 0, !dbg !13314
  br i1 %tobool65, label %if.end81, label %if.then66, !dbg !13316

if.then66:                                        ; preds = %for.end64
  %59 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !13317
  %60 = bitcast %struct.BMFace* %59 to i8*, !dbg !13317
  %call67 = call i8* @BM_iter_new(%struct.BMIter* %liter, %struct.BMesh* null, i8 zeroext 11, i8* %60), !dbg !13317
  %61 = bitcast i8* %call67 to %struct.BMLoop*, !dbg !13317
  store %struct.BMLoop* %61, %struct.BMLoop** %l, align 8, !dbg !13317
  br label %for.cond68, !dbg !13317

for.cond68:                                       ; preds = %for.inc77, %if.then66
  %62 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !13320
  %tobool69 = icmp ne %struct.BMLoop* %62, null, !dbg !13317
  br i1 %tobool69, label %for.body70, label %for.end79, !dbg !13317

for.body70:                                       ; preds = %for.cond68
  %63 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !13322
  %head71 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %63, i32 0, i32 0, !dbg !13322
  %data72 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head71, i32 0, i32 0, !dbg !13322
  %64 = load i8*, i8** %data72, align 8, !dbg !13322
  %65 = load i32, i32* %cd_loop_uv_offset, align 4, !dbg !13322
  %idx.ext73 = sext i32 %65 to i64, !dbg !13322
  %add.ptr74 = getelementptr inbounds i8, i8* %64, i64 %idx.ext73, !dbg !13322
  %66 = bitcast i8* %add.ptr74 to %struct.MLoopUV*, !dbg !13322
  store %struct.MLoopUV* %66, %struct.MLoopUV** %luv, align 8, !dbg !13324
  %67 = load %struct.MLoopUV*, %struct.MLoopUV** %luv, align 8, !dbg !13325
  %flag75 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %67, i32 0, i32 1, !dbg !13326
  %68 = load i32, i32* %flag75, align 4, !dbg !13327
  %or76 = or i32 %68, 2, !dbg !13327
  store i32 %or76, i32* %flag75, align 4, !dbg !13327
  br label %for.inc77, !dbg !13328

for.inc77:                                        ; preds = %for.body70
  %call78 = call i8* @BM_iter_step(%struct.BMIter* %liter), !dbg !13320
  %69 = bitcast i8* %call78 to %struct.BMLoop*, !dbg !13320
  store %struct.BMLoop* %69, %struct.BMLoop** %l, align 8, !dbg !13320
  br label %for.cond68, !dbg !13320, !llvm.loop !13329

for.end79:                                        ; preds = %for.cond68
  %70 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !13331
  %head80 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %70, i32 0, i32 0, !dbg !13331
  call void @_bm_elem_flag_enable(%struct.BMHeader* %head80, i8 zeroext 16), !dbg !13331
  br label %if.end81, !dbg !13332

if.end81:                                         ; preds = %for.end79, %for.end64
  br label %if.end82, !dbg !13333

if.end82:                                         ; preds = %if.end81, %land.lhs.true50, %for.body45
  br label %for.inc83, !dbg !13334

for.inc83:                                        ; preds = %if.end82
  %call84 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !13292
  %71 = bitcast i8* %call84 to %struct.BMFace*, !dbg !13292
  store %struct.BMFace* %71, %struct.BMFace** %efa, align 8, !dbg !13292
  br label %for.cond43, !dbg !13292, !llvm.loop !13335

for.end85:                                        ; preds = %for.cond43
  br label %if.end127, !dbg !13337

if.else86:                                        ; preds = %if.else
  %72 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !13338
  %bm87 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %72, i32 0, i32 0, !dbg !13338
  %73 = load %struct.BMesh*, %struct.BMesh** %bm87, align 8, !dbg !13338
  %call88 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %73, i8 zeroext 3, i8* null), !dbg !13338
  %74 = bitcast i8* %call88 to %struct.BMFace*, !dbg !13338
  store %struct.BMFace* %74, %struct.BMFace** %efa, align 8, !dbg !13338
  br label %for.cond89, !dbg !13338

for.cond89:                                       ; preds = %for.inc124, %if.else86
  %75 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !13341
  %tobool90 = icmp ne %struct.BMFace* %75, null, !dbg !13338
  br i1 %tobool90, label %for.body91, label %for.end126, !dbg !13338

for.body91:                                       ; preds = %for.cond89
  %76 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !13343
  %head92 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %76, i32 0, i32 0, !dbg !13343
  call void @_bm_elem_flag_disable(%struct.BMHeader* %head92, i8 zeroext 16), !dbg !13343
  %77 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !13345
  %head93 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %77, i32 0, i32 0, !dbg !13345
  %call94 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head93, i8 zeroext 2), !dbg !13345
  %tobool95 = icmp ne i8 %call94, 0, !dbg !13345
  br i1 %tobool95, label %if.end123, label %land.lhs.true96, !dbg !13347

land.lhs.true96:                                  ; preds = %for.body91
  %78 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !13348
  %head97 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %78, i32 0, i32 0, !dbg !13348
  %call98 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head97, i8 zeroext 1), !dbg !13348
  %tobool99 = icmp ne i8 %call98, 0, !dbg !13348
  br i1 %tobool99, label %if.end123, label %if.then100, !dbg !13349

if.then100:                                       ; preds = %land.lhs.true96
  %79 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !13350
  %80 = bitcast %struct.BMFace* %79 to i8*, !dbg !13350
  %call101 = call i8* @BM_iter_new(%struct.BMIter* %liter, %struct.BMesh* null, i8 zeroext 11, i8* %80), !dbg !13350
  %81 = bitcast i8* %call101 to %struct.BMLoop*, !dbg !13350
  store %struct.BMLoop* %81, %struct.BMLoop** %l, align 8, !dbg !13350
  br label %for.cond102, !dbg !13350

for.cond102:                                      ; preds = %for.inc119, %if.then100
  %82 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !13353
  %tobool103 = icmp ne %struct.BMLoop* %82, null, !dbg !13350
  br i1 %tobool103, label %for.body104, label %for.end121, !dbg !13350

for.body104:                                      ; preds = %for.cond102
  %83 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !13355
  %v105 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %83, i32 0, i32 1, !dbg !13355
  %84 = load %struct.BMVert*, %struct.BMVert** %v105, align 8, !dbg !13355
  %head106 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %84, i32 0, i32 0, !dbg !13355
  %call107 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head106, i8 zeroext 1), !dbg !13355
  %conv108 = zext i8 %call107 to i32, !dbg !13355
  %cmp109 = icmp eq i32 %conv108, 0, !dbg !13358
  br i1 %cmp109, label %if.then111, label %if.end118, !dbg !13359

if.then111:                                       ; preds = %for.body104
  %85 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !13360
  %head112 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %85, i32 0, i32 0, !dbg !13360
  %data113 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head112, i32 0, i32 0, !dbg !13360
  %86 = load i8*, i8** %data113, align 8, !dbg !13360
  %87 = load i32, i32* %cd_loop_uv_offset, align 4, !dbg !13360
  %idx.ext114 = sext i32 %87 to i64, !dbg !13360
  %add.ptr115 = getelementptr inbounds i8, i8* %86, i64 %idx.ext114, !dbg !13360
  %88 = bitcast i8* %add.ptr115 to %struct.MLoopUV*, !dbg !13360
  store %struct.MLoopUV* %88, %struct.MLoopUV** %luv, align 8, !dbg !13362
  %89 = load %struct.MLoopUV*, %struct.MLoopUV** %luv, align 8, !dbg !13363
  %flag116 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %89, i32 0, i32 1, !dbg !13364
  %90 = load i32, i32* %flag116, align 4, !dbg !13365
  %or117 = or i32 %90, 2, !dbg !13365
  store i32 %or117, i32* %flag116, align 4, !dbg !13365
  br label %if.end118, !dbg !13366

if.end118:                                        ; preds = %if.then111, %for.body104
  br label %for.inc119, !dbg !13367

for.inc119:                                       ; preds = %if.end118
  %call120 = call i8* @BM_iter_step(%struct.BMIter* %liter), !dbg !13353
  %91 = bitcast i8* %call120 to %struct.BMLoop*, !dbg !13353
  store %struct.BMLoop* %91, %struct.BMLoop** %l, align 8, !dbg !13353
  br label %for.cond102, !dbg !13353, !llvm.loop !13368

for.end121:                                       ; preds = %for.cond102
  %92 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !13370
  %head122 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %92, i32 0, i32 0, !dbg !13370
  call void @_bm_elem_flag_enable(%struct.BMHeader* %head122, i8 zeroext 16), !dbg !13370
  br label %if.end123, !dbg !13371

if.end123:                                        ; preds = %for.end121, %land.lhs.true96, %for.body91
  br label %for.inc124, !dbg !13372

for.inc124:                                       ; preds = %if.end123
  %call125 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !13341
  %93 = bitcast i8* %call125 to %struct.BMFace*, !dbg !13341
  store %struct.BMFace* %93, %struct.BMFace** %efa, align 8, !dbg !13341
  br label %for.cond89, !dbg !13341, !llvm.loop !13373

for.end126:                                       ; preds = %for.cond89
  br label %if.end127

if.end127:                                        ; preds = %for.end126, %for.end85
  br label %if.end128

if.end128:                                        ; preds = %if.end127, %for.end38
  br label %if.end209, !dbg !13375

if.else129:                                       ; preds = %if.end
  %94 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !13376
  %selectmode130 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %94, i32 0, i32 12, !dbg !13378
  %95 = load i16, i16* %selectmode130, align 4, !dbg !13378
  %conv131 = sext i16 %95 to i32, !dbg !13376
  %cmp132 = icmp eq i32 %conv131, 4, !dbg !13379
  br i1 %cmp132, label %if.then134, label %if.else167, !dbg !13380

if.then134:                                       ; preds = %if.else129
  %96 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !13381
  %bm135 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %96, i32 0, i32 0, !dbg !13381
  %97 = load %struct.BMesh*, %struct.BMesh** %bm135, align 8, !dbg !13381
  %call136 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %97, i8 zeroext 3, i8* null), !dbg !13381
  %98 = bitcast i8* %call136 to %struct.BMFace*, !dbg !13381
  store %struct.BMFace* %98, %struct.BMFace** %efa, align 8, !dbg !13381
  br label %for.cond137, !dbg !13381

for.cond137:                                      ; preds = %for.inc164, %if.then134
  %99 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !13384
  %tobool138 = icmp ne %struct.BMFace* %99, null, !dbg !13381
  br i1 %tobool138, label %for.body139, label %for.end166, !dbg !13381

for.body139:                                      ; preds = %for.cond137
  %100 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !13386
  %head140 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %100, i32 0, i32 0, !dbg !13386
  call void @_bm_elem_flag_disable(%struct.BMHeader* %head140, i8 zeroext 16), !dbg !13386
  %101 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !13388
  %head141 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %101, i32 0, i32 0, !dbg !13388
  %call142 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head141, i8 zeroext 2), !dbg !13388
  %tobool143 = icmp ne i8 %call142, 0, !dbg !13388
  br i1 %tobool143, label %if.end163, label %land.lhs.true144, !dbg !13390

land.lhs.true144:                                 ; preds = %for.body139
  %102 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !13391
  %head145 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %102, i32 0, i32 0, !dbg !13391
  %call146 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head145, i8 zeroext 1), !dbg !13391
  %tobool147 = icmp ne i8 %call146, 0, !dbg !13391
  br i1 %tobool147, label %if.end163, label %if.then148, !dbg !13392

if.then148:                                       ; preds = %land.lhs.true144
  %103 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !13393
  %104 = bitcast %struct.BMFace* %103 to i8*, !dbg !13393
  %call149 = call i8* @BM_iter_new(%struct.BMIter* %liter, %struct.BMesh* null, i8 zeroext 11, i8* %104), !dbg !13393
  %105 = bitcast i8* %call149 to %struct.BMLoop*, !dbg !13393
  store %struct.BMLoop* %105, %struct.BMLoop** %l, align 8, !dbg !13393
  br label %for.cond150, !dbg !13393

for.cond150:                                      ; preds = %for.inc159, %if.then148
  %106 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !13396
  %tobool151 = icmp ne %struct.BMLoop* %106, null, !dbg !13393
  br i1 %tobool151, label %for.body152, label %for.end161, !dbg !13393

for.body152:                                      ; preds = %for.cond150
  %107 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !13398
  %head153 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %107, i32 0, i32 0, !dbg !13398
  %data154 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head153, i32 0, i32 0, !dbg !13398
  %108 = load i8*, i8** %data154, align 8, !dbg !13398
  %109 = load i32, i32* %cd_loop_uv_offset, align 4, !dbg !13398
  %idx.ext155 = sext i32 %109 to i64, !dbg !13398
  %add.ptr156 = getelementptr inbounds i8, i8* %108, i64 %idx.ext155, !dbg !13398
  %110 = bitcast i8* %add.ptr156 to %struct.MLoopUV*, !dbg !13398
  store %struct.MLoopUV* %110, %struct.MLoopUV** %luv, align 8, !dbg !13400
  %111 = load %struct.MLoopUV*, %struct.MLoopUV** %luv, align 8, !dbg !13401
  %flag157 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %111, i32 0, i32 1, !dbg !13402
  %112 = load i32, i32* %flag157, align 4, !dbg !13403
  %or158 = or i32 %112, 2, !dbg !13403
  store i32 %or158, i32* %flag157, align 4, !dbg !13403
  br label %for.inc159, !dbg !13404

for.inc159:                                       ; preds = %for.body152
  %call160 = call i8* @BM_iter_step(%struct.BMIter* %liter), !dbg !13396
  %113 = bitcast i8* %call160 to %struct.BMLoop*, !dbg !13396
  store %struct.BMLoop* %113, %struct.BMLoop** %l, align 8, !dbg !13396
  br label %for.cond150, !dbg !13396, !llvm.loop !13405

for.end161:                                       ; preds = %for.cond150
  %114 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !13407
  %head162 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %114, i32 0, i32 0, !dbg !13407
  call void @_bm_elem_flag_enable(%struct.BMHeader* %head162, i8 zeroext 16), !dbg !13407
  br label %if.end163, !dbg !13408

if.end163:                                        ; preds = %for.end161, %land.lhs.true144, %for.body139
  br label %for.inc164, !dbg !13409

for.inc164:                                       ; preds = %if.end163
  %call165 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !13384
  %115 = bitcast i8* %call165 to %struct.BMFace*, !dbg !13384
  store %struct.BMFace* %115, %struct.BMFace** %efa, align 8, !dbg !13384
  br label %for.cond137, !dbg !13384, !llvm.loop !13410

for.end166:                                       ; preds = %for.cond137
  br label %if.end208, !dbg !13412

if.else167:                                       ; preds = %if.else129
  %116 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !13413
  %bm168 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %116, i32 0, i32 0, !dbg !13413
  %117 = load %struct.BMesh*, %struct.BMesh** %bm168, align 8, !dbg !13413
  %call169 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %117, i8 zeroext 3, i8* null), !dbg !13413
  %118 = bitcast i8* %call169 to %struct.BMFace*, !dbg !13413
  store %struct.BMFace* %118, %struct.BMFace** %efa, align 8, !dbg !13413
  br label %for.cond170, !dbg !13413

for.cond170:                                      ; preds = %for.inc205, %if.else167
  %119 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !13416
  %tobool171 = icmp ne %struct.BMFace* %119, null, !dbg !13413
  br i1 %tobool171, label %for.body172, label %for.end207, !dbg !13413

for.body172:                                      ; preds = %for.cond170
  %120 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !13418
  %head173 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %120, i32 0, i32 0, !dbg !13418
  call void @_bm_elem_flag_disable(%struct.BMHeader* %head173, i8 zeroext 16), !dbg !13418
  %121 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !13420
  %head174 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %121, i32 0, i32 0, !dbg !13420
  %call175 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head174, i8 zeroext 2), !dbg !13420
  %tobool176 = icmp ne i8 %call175, 0, !dbg !13420
  br i1 %tobool176, label %if.end204, label %land.lhs.true177, !dbg !13422

land.lhs.true177:                                 ; preds = %for.body172
  %122 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !13423
  %head178 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %122, i32 0, i32 0, !dbg !13423
  %call179 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head178, i8 zeroext 1), !dbg !13423
  %tobool180 = icmp ne i8 %call179, 0, !dbg !13423
  br i1 %tobool180, label %if.end204, label %if.then181, !dbg !13424

if.then181:                                       ; preds = %land.lhs.true177
  %123 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !13425
  %124 = bitcast %struct.BMFace* %123 to i8*, !dbg !13425
  %call182 = call i8* @BM_iter_new(%struct.BMIter* %liter, %struct.BMesh* null, i8 zeroext 11, i8* %124), !dbg !13425
  %125 = bitcast i8* %call182 to %struct.BMLoop*, !dbg !13425
  store %struct.BMLoop* %125, %struct.BMLoop** %l, align 8, !dbg !13425
  br label %for.cond183, !dbg !13425

for.cond183:                                      ; preds = %for.inc200, %if.then181
  %126 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !13428
  %tobool184 = icmp ne %struct.BMLoop* %126, null, !dbg !13425
  br i1 %tobool184, label %for.body185, label %for.end202, !dbg !13425

for.body185:                                      ; preds = %for.cond183
  %127 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !13430
  %v186 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %127, i32 0, i32 1, !dbg !13430
  %128 = load %struct.BMVert*, %struct.BMVert** %v186, align 8, !dbg !13430
  %head187 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %128, i32 0, i32 0, !dbg !13430
  %call188 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head187, i8 zeroext 1), !dbg !13430
  %conv189 = zext i8 %call188 to i32, !dbg !13430
  %cmp190 = icmp eq i32 %conv189, 0, !dbg !13433
  br i1 %cmp190, label %if.then192, label %if.end199, !dbg !13434

if.then192:                                       ; preds = %for.body185
  %129 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !13435
  %head193 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %129, i32 0, i32 0, !dbg !13435
  %data194 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head193, i32 0, i32 0, !dbg !13435
  %130 = load i8*, i8** %data194, align 8, !dbg !13435
  %131 = load i32, i32* %cd_loop_uv_offset, align 4, !dbg !13435
  %idx.ext195 = sext i32 %131 to i64, !dbg !13435
  %add.ptr196 = getelementptr inbounds i8, i8* %130, i64 %idx.ext195, !dbg !13435
  %132 = bitcast i8* %add.ptr196 to %struct.MLoopUV*, !dbg !13435
  store %struct.MLoopUV* %132, %struct.MLoopUV** %luv, align 8, !dbg !13437
  %133 = load %struct.MLoopUV*, %struct.MLoopUV** %luv, align 8, !dbg !13438
  %flag197 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %133, i32 0, i32 1, !dbg !13439
  %134 = load i32, i32* %flag197, align 4, !dbg !13440
  %or198 = or i32 %134, 2, !dbg !13440
  store i32 %or198, i32* %flag197, align 4, !dbg !13440
  br label %if.end199, !dbg !13441

if.end199:                                        ; preds = %if.then192, %for.body185
  br label %for.inc200, !dbg !13442

for.inc200:                                       ; preds = %if.end199
  %call201 = call i8* @BM_iter_step(%struct.BMIter* %liter), !dbg !13428
  %135 = bitcast i8* %call201 to %struct.BMLoop*, !dbg !13428
  store %struct.BMLoop* %135, %struct.BMLoop** %l, align 8, !dbg !13428
  br label %for.cond183, !dbg !13428, !llvm.loop !13443

for.end202:                                       ; preds = %for.cond183
  %136 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !13445
  %head203 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %136, i32 0, i32 0, !dbg !13445
  call void @_bm_elem_flag_enable(%struct.BMHeader* %head203, i8 zeroext 16), !dbg !13445
  br label %if.end204, !dbg !13446

if.end204:                                        ; preds = %for.end202, %land.lhs.true177, %for.body172
  br label %for.inc205, !dbg !13447

for.inc205:                                       ; preds = %if.end204
  %call206 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !13416
  %137 = bitcast i8* %call206 to %struct.BMFace*, !dbg !13416
  store %struct.BMFace* %137, %struct.BMFace** %efa, align 8, !dbg !13416
  br label %for.cond170, !dbg !13416, !llvm.loop !13448

for.end207:                                       ; preds = %for.cond170
  br label %if.end208

if.end208:                                        ; preds = %for.end207, %for.end166
  br label %if.end209

if.end209:                                        ; preds = %if.end208, %if.end128
  %138 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !13450
  %bm210 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %138, i32 0, i32 0, !dbg !13451
  %139 = load %struct.BMesh*, %struct.BMesh** %bm210, align 8, !dbg !13451
  call void @BM_mesh_elem_hflag_enable_test(%struct.BMesh* %139, i8 zeroext 8, i8 zeroext 1, i8 zeroext 1, i8 zeroext 0, i8 zeroext 16), !dbg !13452
  %140 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !13453
  %141 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !13454
  %data211 = getelementptr inbounds %struct.Object, %struct.Object* %141, i32 0, i32 19, !dbg !13455
  %142 = load i8*, i8** %data211, align 8, !dbg !13455
  call void @WM_event_add_notifier(%struct.bContext* %140, i32 274333696, i8* %142), !dbg !13456
  store i32 4, i32* %retval, align 4, !dbg !13457
  br label %return, !dbg !13457

return:                                           ; preds = %if.end209, %if.then
  %143 = load i32, i32* %retval, align 4, !dbg !13458
  ret i32 %143, !dbg !13458
}

declare dso_local void @EDBM_mesh_reveal(%struct.BMEditMesh*) #2

declare dso_local void @BM_mesh_elem_hflag_enable_test(%struct.BMesh*, i8 zeroext, i8 zeroext, i8 zeroext, i8 zeroext, i8 zeroext) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @uv_hide_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !13459 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %sima = alloca %struct.SpaceImage*, align 8
  %obedit = alloca %struct.Object*, align 8
  %scene = alloca %struct.Scene*, align 8
  %ts = alloca %struct.ToolSettings*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  %efa = alloca %struct.BMFace*, align 8
  %l = alloca %struct.BMLoop*, align 8
  %iter = alloca %struct.BMIter, align 8
  %liter = alloca %struct.BMIter, align 8
  %luv = alloca %struct.MLoopUV*, align 8
  %tf = alloca %struct.MTexPoly*, align 8
  %swap = alloca i8, align 1
  %ima = alloca %struct.Image*, align 8
  %use_face_center = alloca i32, align 4
  %cd_loop_uv_offset = alloca i32, align 4
  %cd_poly_tex_offset = alloca i32, align 4
  %hide = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !13460, metadata !DIExpression()), !dbg !13461
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !13462, metadata !DIExpression()), !dbg !13463
  call void @llvm.dbg.declare(metadata %struct.SpaceImage** %sima, metadata !13464, metadata !DIExpression()), !dbg !13465
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !13466
  %call = call %struct.SpaceImage* @CTX_wm_space_image(%struct.bContext* %0), !dbg !13467
  store %struct.SpaceImage* %call, %struct.SpaceImage** %sima, align 8, !dbg !13465
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !13468, metadata !DIExpression()), !dbg !13469
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !13470
  %call1 = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %1), !dbg !13471
  store %struct.Object* %call1, %struct.Object** %obedit, align 8, !dbg !13469
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene, metadata !13472, metadata !DIExpression()), !dbg !13473
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !13474
  %call2 = call %struct.Scene* @CTX_data_scene(%struct.bContext* %2), !dbg !13475
  store %struct.Scene* %call2, %struct.Scene** %scene, align 8, !dbg !13473
  call void @llvm.dbg.declare(metadata %struct.ToolSettings** %ts, metadata !13476, metadata !DIExpression()), !dbg !13477
  %3 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !13478
  %toolsettings = getelementptr inbounds %struct.Scene, %struct.Scene* %3, i32 0, i32 20, !dbg !13479
  %4 = load %struct.ToolSettings*, %struct.ToolSettings** %toolsettings, align 8, !dbg !13479
  store %struct.ToolSettings* %4, %struct.ToolSettings** %ts, align 8, !dbg !13477
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !13480, metadata !DIExpression()), !dbg !13481
  %5 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !13482
  %call3 = call %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object* %5), !dbg !13483
  store %struct.BMEditMesh* %call3, %struct.BMEditMesh** %em, align 8, !dbg !13481
  call void @llvm.dbg.declare(metadata %struct.BMFace** %efa, metadata !13484, metadata !DIExpression()), !dbg !13485
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l, metadata !13486, metadata !DIExpression()), !dbg !13487
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iter, metadata !13488, metadata !DIExpression()), !dbg !13489
  call void @llvm.dbg.declare(metadata %struct.BMIter* %liter, metadata !13490, metadata !DIExpression()), !dbg !13491
  call void @llvm.dbg.declare(metadata %struct.MLoopUV** %luv, metadata !13492, metadata !DIExpression()), !dbg !13493
  call void @llvm.dbg.declare(metadata %struct.MTexPoly** %tf, metadata !13494, metadata !DIExpression()), !dbg !13495
  call void @llvm.dbg.declare(metadata i8* %swap, metadata !13496, metadata !DIExpression()), !dbg !13497
  %6 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !13498
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %6, i32 0, i32 7, !dbg !13499
  %7 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !13499
  %call4 = call i32 @RNA_boolean_get(%struct.PointerRNA* %7, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.30, i64 0, i64 0)), !dbg !13500
  %conv = trunc i32 %call4 to i8, !dbg !13500
  store i8 %conv, i8* %swap, align 1, !dbg !13497
  call void @llvm.dbg.declare(metadata %struct.Image** %ima, metadata !13501, metadata !DIExpression()), !dbg !13502
  %8 = load %struct.SpaceImage*, %struct.SpaceImage** %sima, align 8, !dbg !13503
  %tobool = icmp ne %struct.SpaceImage* %8, null, !dbg !13503
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !13503

cond.true:                                        ; preds = %entry
  %9 = load %struct.SpaceImage*, %struct.SpaceImage** %sima, align 8, !dbg !13504
  %image = getelementptr inbounds %struct.SpaceImage, %struct.SpaceImage* %9, i32 0, i32 5, !dbg !13505
  %10 = load %struct.Image*, %struct.Image** %image, align 8, !dbg !13505
  br label %cond.end, !dbg !13503

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !13503

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.Image* [ %10, %cond.true ], [ null, %cond.false ], !dbg !13503
  store %struct.Image* %cond, %struct.Image** %ima, align 8, !dbg !13502
  call void @llvm.dbg.declare(metadata i32* %use_face_center, metadata !13506, metadata !DIExpression()), !dbg !13507
  %11 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !13508
  %uv_selectmode = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %11, i32 0, i32 12, !dbg !13509
  %12 = load i8, i8* %uv_selectmode, align 1, !dbg !13509
  %conv5 = zext i8 %12 to i32, !dbg !13508
  %cmp = icmp eq i32 %conv5, 4, !dbg !13510
  %conv6 = zext i1 %cmp to i32, !dbg !13510
  store i32 %conv6, i32* %use_face_center, align 4, !dbg !13507
  call void @llvm.dbg.declare(metadata i32* %cd_loop_uv_offset, metadata !13511, metadata !DIExpression()), !dbg !13512
  %13 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !13513
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %13, i32 0, i32 0, !dbg !13514
  %14 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !13514
  %ldata = getelementptr inbounds %struct.BMesh, %struct.BMesh* %14, i32 0, i32 26, !dbg !13515
  %call7 = call i32 @CustomData_get_offset(%struct.CustomData* %ldata, i32 16), !dbg !13516
  store i32 %call7, i32* %cd_loop_uv_offset, align 4, !dbg !13512
  call void @llvm.dbg.declare(metadata i32* %cd_poly_tex_offset, metadata !13517, metadata !DIExpression()), !dbg !13518
  %15 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !13519
  %bm8 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %15, i32 0, i32 0, !dbg !13520
  %16 = load %struct.BMesh*, %struct.BMesh** %bm8, align 8, !dbg !13520
  %pdata = getelementptr inbounds %struct.BMesh, %struct.BMesh* %16, i32 0, i32 27, !dbg !13521
  %call9 = call i32 @CustomData_get_offset(%struct.CustomData* %pdata, i32 15), !dbg !13522
  store i32 %call9, i32* %cd_poly_tex_offset, align 4, !dbg !13518
  %17 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !13523
  %uv_flag = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %17, i32 0, i32 11, !dbg !13525
  %18 = load i8, i8* %uv_flag, align 2, !dbg !13525
  %conv10 = zext i8 %18 to i32, !dbg !13523
  %and = and i32 %conv10, 1, !dbg !13526
  %tobool11 = icmp ne i32 %and, 0, !dbg !13526
  br i1 %tobool11, label %if.then, label %if.end, !dbg !13527

if.then:                                          ; preds = %cond.end
  %19 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !13528
  %20 = load i8, i8* %swap, align 1, !dbg !13530
  call void @EDBM_mesh_hide(%struct.BMEditMesh* %19, i8 zeroext %20), !dbg !13531
  %21 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !13532
  %22 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !13533
  %data = getelementptr inbounds %struct.Object, %struct.Object* %22, i32 0, i32 19, !dbg !13534
  %23 = load i8*, i8** %data, align 8, !dbg !13534
  call void @WM_event_add_notifier(%struct.bContext* %21, i32 274333696, i8* %23), !dbg !13535
  store i32 4, i32* %retval, align 4, !dbg !13536
  br label %return, !dbg !13536

if.end:                                           ; preds = %cond.end
  %24 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !13537
  %bm12 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %24, i32 0, i32 0, !dbg !13537
  %25 = load %struct.BMesh*, %struct.BMesh** %bm12, align 8, !dbg !13537
  %call13 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %25, i8 zeroext 3, i8* null), !dbg !13537
  %26 = bitcast i8* %call13 to %struct.BMFace*, !dbg !13537
  store %struct.BMFace* %26, %struct.BMFace** %efa, align 8, !dbg !13537
  br label %for.cond, !dbg !13537

for.cond:                                         ; preds = %for.inc143, %if.end
  %27 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !13539
  %tobool14 = icmp ne %struct.BMFace* %27, null, !dbg !13537
  br i1 %tobool14, label %for.body, label %for.end145, !dbg !13537

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %hide, metadata !13541, metadata !DIExpression()), !dbg !13543
  store i32 0, i32* %hide, align 4, !dbg !13543
  %28 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !13544
  %head = getelementptr inbounds %struct.BMFace, %struct.BMFace* %28, i32 0, i32 0, !dbg !13544
  %data15 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head, i32 0, i32 0, !dbg !13544
  %29 = load i8*, i8** %data15, align 8, !dbg !13544
  %30 = load i32, i32* %cd_poly_tex_offset, align 4, !dbg !13544
  %idx.ext = sext i32 %30 to i64, !dbg !13544
  %add.ptr = getelementptr inbounds i8, i8* %29, i64 %idx.ext, !dbg !13544
  %31 = bitcast i8* %add.ptr to %struct.MTexPoly*, !dbg !13544
  store %struct.MTexPoly* %31, %struct.MTexPoly** %tf, align 8, !dbg !13545
  %32 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !13546
  %33 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !13548
  %34 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !13549
  %35 = load %struct.MTexPoly*, %struct.MTexPoly** %tf, align 8, !dbg !13550
  %call16 = call zeroext i8 @uvedit_face_visible_test(%struct.Scene* %32, %struct.Image* %33, %struct.BMFace* %34, %struct.MTexPoly* %35), !dbg !13551
  %tobool17 = icmp ne i8 %call16, 0, !dbg !13551
  br i1 %tobool17, label %if.end19, label %if.then18, !dbg !13552

if.then18:                                        ; preds = %for.body
  br label %for.inc143, !dbg !13553

if.end19:                                         ; preds = %for.body
  %36 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !13555
  %37 = bitcast %struct.BMFace* %36 to i8*, !dbg !13555
  %call20 = call i8* @BM_iter_new(%struct.BMIter* %liter, %struct.BMesh* null, i8 zeroext 11, i8* %37), !dbg !13555
  %38 = bitcast i8* %call20 to %struct.BMLoop*, !dbg !13555
  store %struct.BMLoop* %38, %struct.BMLoop** %l, align 8, !dbg !13555
  br label %for.cond21, !dbg !13555

for.cond21:                                       ; preds = %for.inc, %if.end19
  %39 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !13557
  %tobool22 = icmp ne %struct.BMLoop* %39, null, !dbg !13555
  br i1 %tobool22, label %for.body23, label %for.end, !dbg !13555

for.body23:                                       ; preds = %for.cond21
  %40 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !13559
  %head24 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %40, i32 0, i32 0, !dbg !13559
  %data25 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head24, i32 0, i32 0, !dbg !13559
  %41 = load i8*, i8** %data25, align 8, !dbg !13559
  %42 = load i32, i32* %cd_loop_uv_offset, align 4, !dbg !13559
  %idx.ext26 = sext i32 %42 to i64, !dbg !13559
  %add.ptr27 = getelementptr inbounds i8, i8* %41, i64 %idx.ext26, !dbg !13559
  %43 = bitcast i8* %add.ptr27 to %struct.MLoopUV*, !dbg !13559
  store %struct.MLoopUV* %43, %struct.MLoopUV** %luv, align 8, !dbg !13561
  %44 = load %struct.MLoopUV*, %struct.MLoopUV** %luv, align 8, !dbg !13562
  %flag = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %44, i32 0, i32 1, !dbg !13562
  %45 = load i32, i32* %flag, align 4, !dbg !13562
  %and28 = and i32 %45, 2, !dbg !13562
  %cmp29 = icmp eq i32 %and28, 2, !dbg !13562
  %conv30 = zext i1 %cmp29 to i32, !dbg !13562
  %46 = load i8, i8* %swap, align 1, !dbg !13562
  %tobool31 = icmp ne i8 %46, 0, !dbg !13562
  %lnot = xor i1 %tobool31, true, !dbg !13562
  %lnot.ext = zext i1 %lnot to i32, !dbg !13562
  %cmp32 = icmp eq i32 %conv30, %lnot.ext, !dbg !13562
  br i1 %cmp32, label %if.then34, label %if.end35, !dbg !13564

if.then34:                                        ; preds = %for.body23
  store i32 1, i32* %hide, align 4, !dbg !13565
  br label %for.end, !dbg !13567

if.end35:                                         ; preds = %for.body23
  br label %for.inc, !dbg !13568

for.inc:                                          ; preds = %if.end35
  %call36 = call i8* @BM_iter_step(%struct.BMIter* %liter), !dbg !13557
  %47 = bitcast i8* %call36 to %struct.BMLoop*, !dbg !13557
  store %struct.BMLoop* %47, %struct.BMLoop** %l, align 8, !dbg !13557
  br label %for.cond21, !dbg !13557, !llvm.loop !13569

for.end:                                          ; preds = %if.then34, %for.cond21
  %48 = load i32, i32* %hide, align 4, !dbg !13571
  %tobool37 = icmp ne i32 %48, 0, !dbg !13571
  br i1 %tobool37, label %if.then38, label %if.end142, !dbg !13573

if.then38:                                        ; preds = %for.end
  %49 = load i32, i32* %use_face_center, align 4, !dbg !13574
  %tobool39 = icmp ne i32 %49, 0, !dbg !13574
  br i1 %tobool39, label %if.then40, label %if.else93, !dbg !13577

if.then40:                                        ; preds = %if.then38
  %50 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !13578
  %selectmode = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %50, i32 0, i32 12, !dbg !13581
  %51 = load i16, i16* %selectmode, align 4, !dbg !13581
  %conv41 = sext i16 %51 to i32, !dbg !13578
  %cmp42 = icmp eq i32 %conv41, 4, !dbg !13582
  br i1 %cmp42, label %if.then44, label %if.else, !dbg !13583

if.then44:                                        ; preds = %if.then40
  %52 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !13584
  %53 = load i32, i32* %cd_loop_uv_offset, align 4, !dbg !13587
  %call45 = call zeroext i8 @bm_face_is_all_uv_sel(%struct.BMFace* %52, i8 zeroext 1, i32 %53), !dbg !13588
  %conv46 = zext i8 %call45 to i32, !dbg !13588
  %54 = load i8, i8* %swap, align 1, !dbg !13589
  %tobool47 = icmp ne i8 %54, 0, !dbg !13590
  %lnot48 = xor i1 %tobool47, true, !dbg !13590
  %lnot.ext49 = zext i1 %lnot48 to i32, !dbg !13590
  %cmp50 = icmp eq i32 %conv46, %lnot.ext49, !dbg !13591
  br i1 %cmp50, label %if.then52, label %if.end54, !dbg !13592

if.then52:                                        ; preds = %if.then44
  %55 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !13593
  %bm53 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %55, i32 0, i32 0, !dbg !13595
  %56 = load %struct.BMesh*, %struct.BMesh** %bm53, align 8, !dbg !13595
  %57 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !13596
  call void @BM_face_select_set(%struct.BMesh* %56, %struct.BMFace* %57, i8 zeroext 0), !dbg !13597
  br label %if.end54, !dbg !13598

if.end54:                                         ; preds = %if.then52, %if.then44
  %58 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !13599
  %59 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !13600
  %60 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !13601
  %61 = load i32, i32* %cd_loop_uv_offset, align 4, !dbg !13602
  %call55 = call zeroext i8 @uvedit_face_select_disable(%struct.Scene* %58, %struct.BMEditMesh* %59, %struct.BMFace* %60, i32 %61), !dbg !13603
  br label %if.end92, !dbg !13604

if.else:                                          ; preds = %if.then40
  %62 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !13605
  %63 = load i32, i32* %cd_loop_uv_offset, align 4, !dbg !13608
  %call56 = call zeroext i8 @bm_face_is_all_uv_sel(%struct.BMFace* %62, i8 zeroext 1, i32 %63), !dbg !13609
  %conv57 = zext i8 %call56 to i32, !dbg !13609
  %64 = load i8, i8* %swap, align 1, !dbg !13610
  %tobool58 = icmp ne i8 %64, 0, !dbg !13611
  %lnot59 = xor i1 %tobool58, true, !dbg !13611
  %lnot.ext60 = zext i1 %lnot59 to i32, !dbg !13611
  %cmp61 = icmp eq i32 %conv57, %lnot.ext60, !dbg !13612
  br i1 %cmp61, label %if.then63, label %if.end87, !dbg !13613

if.then63:                                        ; preds = %if.else
  %65 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !13614
  %66 = bitcast %struct.BMFace* %65 to i8*, !dbg !13614
  %call64 = call i8* @BM_iter_new(%struct.BMIter* %liter, %struct.BMesh* null, i8 zeroext 11, i8* %66), !dbg !13614
  %67 = bitcast i8* %call64 to %struct.BMLoop*, !dbg !13614
  store %struct.BMLoop* %67, %struct.BMLoop** %l, align 8, !dbg !13614
  br label %for.cond65, !dbg !13614

for.cond65:                                       ; preds = %for.inc84, %if.then63
  %68 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !13617
  %tobool66 = icmp ne %struct.BMLoop* %68, null, !dbg !13614
  br i1 %tobool66, label %for.body67, label %for.end86, !dbg !13614

for.body67:                                       ; preds = %for.cond65
  %69 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !13619
  %head68 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %69, i32 0, i32 0, !dbg !13619
  %data69 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head68, i32 0, i32 0, !dbg !13619
  %70 = load i8*, i8** %data69, align 8, !dbg !13619
  %71 = load i32, i32* %cd_loop_uv_offset, align 4, !dbg !13619
  %idx.ext70 = sext i32 %71 to i64, !dbg !13619
  %add.ptr71 = getelementptr inbounds i8, i8* %70, i64 %idx.ext70, !dbg !13619
  %72 = bitcast i8* %add.ptr71 to %struct.MLoopUV*, !dbg !13619
  store %struct.MLoopUV* %72, %struct.MLoopUV** %luv, align 8, !dbg !13621
  %73 = load %struct.MLoopUV*, %struct.MLoopUV** %luv, align 8, !dbg !13622
  %flag72 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %73, i32 0, i32 1, !dbg !13622
  %74 = load i32, i32* %flag72, align 4, !dbg !13622
  %and73 = and i32 %74, 2, !dbg !13622
  %cmp74 = icmp eq i32 %and73, 2, !dbg !13622
  %conv75 = zext i1 %cmp74 to i32, !dbg !13622
  %75 = load i8, i8* %swap, align 1, !dbg !13622
  %tobool76 = icmp ne i8 %75, 0, !dbg !13622
  %lnot77 = xor i1 %tobool76, true, !dbg !13622
  %lnot.ext78 = zext i1 %lnot77 to i32, !dbg !13622
  %cmp79 = icmp eq i32 %conv75, %lnot.ext78, !dbg !13622
  br i1 %cmp79, label %if.then81, label %if.end83, !dbg !13624

if.then81:                                        ; preds = %for.body67
  %76 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !13625
  %bm82 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %76, i32 0, i32 0, !dbg !13627
  %77 = load %struct.BMesh*, %struct.BMesh** %bm82, align 8, !dbg !13627
  %78 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !13628
  %v = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %78, i32 0, i32 1, !dbg !13629
  %79 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !13629
  call void @BM_vert_select_set(%struct.BMesh* %77, %struct.BMVert* %79, i8 zeroext 0), !dbg !13630
  br label %if.end83, !dbg !13631

if.end83:                                         ; preds = %if.then81, %for.body67
  br label %for.inc84, !dbg !13632

for.inc84:                                        ; preds = %if.end83
  %call85 = call i8* @BM_iter_step(%struct.BMIter* %liter), !dbg !13617
  %80 = bitcast i8* %call85 to %struct.BMLoop*, !dbg !13617
  store %struct.BMLoop* %80, %struct.BMLoop** %l, align 8, !dbg !13617
  br label %for.cond65, !dbg !13617, !llvm.loop !13633

for.end86:                                        ; preds = %for.cond65
  br label %if.end87, !dbg !13635

if.end87:                                         ; preds = %for.end86, %if.else
  %81 = load i8, i8* %swap, align 1, !dbg !13636
  %tobool88 = icmp ne i8 %81, 0, !dbg !13636
  br i1 %tobool88, label %if.end91, label %if.then89, !dbg !13638

if.then89:                                        ; preds = %if.end87
  %82 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !13639
  %83 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !13640
  %84 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !13641
  %85 = load i32, i32* %cd_loop_uv_offset, align 4, !dbg !13642
  %call90 = call zeroext i8 @uvedit_face_select_disable(%struct.Scene* %82, %struct.BMEditMesh* %83, %struct.BMFace* %84, i32 %85), !dbg !13643
  br label %if.end91, !dbg !13643

if.end91:                                         ; preds = %if.then89, %if.end87
  br label %if.end92

if.end92:                                         ; preds = %if.end91, %if.end54
  br label %if.end141, !dbg !13644

if.else93:                                        ; preds = %if.then38
  %86 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !13645
  %selectmode94 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %86, i32 0, i32 12, !dbg !13647
  %87 = load i16, i16* %selectmode94, align 4, !dbg !13647
  %conv95 = sext i16 %87 to i32, !dbg !13645
  %cmp96 = icmp eq i32 %conv95, 4, !dbg !13648
  br i1 %cmp96, label %if.then98, label %if.else110, !dbg !13649

if.then98:                                        ; preds = %if.else93
  %88 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !13650
  %89 = load i32, i32* %cd_loop_uv_offset, align 4, !dbg !13653
  %call99 = call zeroext i8 @bm_face_is_all_uv_sel(%struct.BMFace* %88, i8 zeroext 0, i32 %89), !dbg !13654
  %conv100 = zext i8 %call99 to i32, !dbg !13654
  %90 = load i8, i8* %swap, align 1, !dbg !13655
  %tobool101 = icmp ne i8 %90, 0, !dbg !13656
  %lnot102 = xor i1 %tobool101, true, !dbg !13656
  %lnot.ext103 = zext i1 %lnot102 to i32, !dbg !13656
  %cmp104 = icmp ne i32 %conv100, %lnot.ext103, !dbg !13657
  br i1 %cmp104, label %if.then106, label %if.end109, !dbg !13658

if.then106:                                       ; preds = %if.then98
  %91 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !13659
  %bm107 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %91, i32 0, i32 0, !dbg !13661
  %92 = load %struct.BMesh*, %struct.BMesh** %bm107, align 8, !dbg !13661
  %93 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !13662
  call void @BM_face_select_set(%struct.BMesh* %92, %struct.BMFace* %93, i8 zeroext 0), !dbg !13663
  %94 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !13664
  %95 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !13665
  %96 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !13666
  %97 = load i32, i32* %cd_loop_uv_offset, align 4, !dbg !13667
  %call108 = call zeroext i8 @uvedit_face_select_disable(%struct.Scene* %94, %struct.BMEditMesh* %95, %struct.BMFace* %96, i32 %97), !dbg !13668
  br label %if.end109, !dbg !13669

if.end109:                                        ; preds = %if.then106, %if.then98
  br label %if.end140, !dbg !13670

if.else110:                                       ; preds = %if.else93
  %98 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !13671
  %99 = bitcast %struct.BMFace* %98 to i8*, !dbg !13671
  %call111 = call i8* @BM_iter_new(%struct.BMIter* %liter, %struct.BMesh* null, i8 zeroext 11, i8* %99), !dbg !13671
  %100 = bitcast i8* %call111 to %struct.BMLoop*, !dbg !13671
  store %struct.BMLoop* %100, %struct.BMLoop** %l, align 8, !dbg !13671
  br label %for.cond112, !dbg !13671

for.cond112:                                      ; preds = %for.inc137, %if.else110
  %101 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !13674
  %tobool113 = icmp ne %struct.BMLoop* %101, null, !dbg !13671
  br i1 %tobool113, label %for.body114, label %for.end139, !dbg !13671

for.body114:                                      ; preds = %for.cond112
  %102 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !13676
  %head115 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %102, i32 0, i32 0, !dbg !13676
  %data116 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head115, i32 0, i32 0, !dbg !13676
  %103 = load i8*, i8** %data116, align 8, !dbg !13676
  %104 = load i32, i32* %cd_loop_uv_offset, align 4, !dbg !13676
  %idx.ext117 = sext i32 %104 to i64, !dbg !13676
  %add.ptr118 = getelementptr inbounds i8, i8* %103, i64 %idx.ext117, !dbg !13676
  %105 = bitcast i8* %add.ptr118 to %struct.MLoopUV*, !dbg !13676
  store %struct.MLoopUV* %105, %struct.MLoopUV** %luv, align 8, !dbg !13678
  %106 = load %struct.MLoopUV*, %struct.MLoopUV** %luv, align 8, !dbg !13679
  %flag119 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %106, i32 0, i32 1, !dbg !13679
  %107 = load i32, i32* %flag119, align 4, !dbg !13679
  %and120 = and i32 %107, 2, !dbg !13679
  %cmp121 = icmp eq i32 %and120, 2, !dbg !13679
  %conv122 = zext i1 %cmp121 to i32, !dbg !13679
  %108 = load i8, i8* %swap, align 1, !dbg !13679
  %tobool123 = icmp ne i8 %108, 0, !dbg !13679
  %lnot124 = xor i1 %tobool123, true, !dbg !13679
  %lnot.ext125 = zext i1 %lnot124 to i32, !dbg !13679
  %cmp126 = icmp eq i32 %conv122, %lnot.ext125, !dbg !13679
  br i1 %cmp126, label %if.then128, label %if.end136, !dbg !13681

if.then128:                                       ; preds = %for.body114
  %109 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !13682
  %bm129 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %109, i32 0, i32 0, !dbg !13684
  %110 = load %struct.BMesh*, %struct.BMesh** %bm129, align 8, !dbg !13684
  %111 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !13685
  %v130 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %111, i32 0, i32 1, !dbg !13686
  %112 = load %struct.BMVert*, %struct.BMVert** %v130, align 8, !dbg !13686
  call void @BM_vert_select_set(%struct.BMesh* %110, %struct.BMVert* %112, i8 zeroext 0), !dbg !13687
  %113 = load i8, i8* %swap, align 1, !dbg !13688
  %tobool131 = icmp ne i8 %113, 0, !dbg !13688
  br i1 %tobool131, label %if.end135, label %if.then132, !dbg !13690

if.then132:                                       ; preds = %if.then128
  %114 = load %struct.MLoopUV*, %struct.MLoopUV** %luv, align 8, !dbg !13691
  %flag133 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %114, i32 0, i32 1, !dbg !13692
  %115 = load i32, i32* %flag133, align 4, !dbg !13693
  %and134 = and i32 %115, -3, !dbg !13693
  store i32 %and134, i32* %flag133, align 4, !dbg !13693
  br label %if.end135, !dbg !13691

if.end135:                                        ; preds = %if.then132, %if.then128
  br label %if.end136, !dbg !13694

if.end136:                                        ; preds = %if.end135, %for.body114
  br label %for.inc137, !dbg !13695

for.inc137:                                       ; preds = %if.end136
  %call138 = call i8* @BM_iter_step(%struct.BMIter* %liter), !dbg !13674
  %116 = bitcast i8* %call138 to %struct.BMLoop*, !dbg !13674
  store %struct.BMLoop* %116, %struct.BMLoop** %l, align 8, !dbg !13674
  br label %for.cond112, !dbg !13674, !llvm.loop !13696

for.end139:                                       ; preds = %for.cond112
  br label %if.end140

if.end140:                                        ; preds = %for.end139, %if.end109
  br label %if.end141

if.end141:                                        ; preds = %if.end140, %if.end92
  br label %if.end142, !dbg !13698

if.end142:                                        ; preds = %if.end141, %for.end
  br label %for.inc143, !dbg !13699

for.inc143:                                       ; preds = %if.end142, %if.then18
  %call144 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !13539
  %117 = bitcast i8* %call144 to %struct.BMFace*, !dbg !13539
  store %struct.BMFace* %117, %struct.BMFace** %efa, align 8, !dbg !13539
  br label %for.cond, !dbg !13539, !llvm.loop !13700

for.end145:                                       ; preds = %for.cond
  %118 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !13702
  %selectmode146 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %118, i32 0, i32 12, !dbg !13704
  %119 = load i16, i16* %selectmode146, align 4, !dbg !13704
  %conv147 = sext i16 %119 to i32, !dbg !13702
  %cmp148 = icmp ne i32 %conv147, 4, !dbg !13705
  br i1 %cmp148, label %if.then150, label %if.end151, !dbg !13706

if.then150:                                       ; preds = %for.end145
  %120 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !13707
  call void @EDBM_selectmode_flush_ex(%struct.BMEditMesh* %120, i16 signext 3), !dbg !13708
  br label %if.end151, !dbg !13708

if.end151:                                        ; preds = %if.then150, %for.end145
  %121 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !13709
  %bm152 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %121, i32 0, i32 0, !dbg !13710
  %122 = load %struct.BMesh*, %struct.BMesh** %bm152, align 8, !dbg !13710
  call void @BM_select_history_validate(%struct.BMesh* %122), !dbg !13711
  %123 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !13712
  %124 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !13713
  %data153 = getelementptr inbounds %struct.Object, %struct.Object* %124, i32 0, i32 19, !dbg !13714
  %125 = load i8*, i8** %data153, align 8, !dbg !13714
  call void @WM_event_add_notifier(%struct.bContext* %123, i32 274333696, i8* %125), !dbg !13715
  store i32 4, i32* %retval, align 4, !dbg !13716
  br label %return, !dbg !13716

return:                                           ; preds = %if.end151, %if.then
  %126 = load i32, i32* %retval, align 4, !dbg !13717
  ret i32 %126, !dbg !13717
}

declare dso_local void @EDBM_mesh_hide(%struct.BMEditMesh*, i8 zeroext) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @bm_face_is_all_uv_sel(%struct.BMFace* %f, i8 zeroext %select_test, i32 %cd_loop_uv_offset) #0 !dbg !13718 {
entry:
  %retval = alloca i8, align 1
  %f.addr = alloca %struct.BMFace*, align 8
  %select_test.addr = alloca i8, align 1
  %cd_loop_uv_offset.addr = alloca i32, align 4
  %l_iter = alloca %struct.BMLoop*, align 8
  %l_first = alloca %struct.BMLoop*, align 8
  %luv = alloca %struct.MLoopUV*, align 8
  store %struct.BMFace* %f, %struct.BMFace** %f.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMFace** %f.addr, metadata !13721, metadata !DIExpression()), !dbg !13722
  store i8 %select_test, i8* %select_test.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %select_test.addr, metadata !13723, metadata !DIExpression()), !dbg !13724
  store i32 %cd_loop_uv_offset, i32* %cd_loop_uv_offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cd_loop_uv_offset.addr, metadata !13725, metadata !DIExpression()), !dbg !13726
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l_iter, metadata !13727, metadata !DIExpression()), !dbg !13728
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l_first, metadata !13729, metadata !DIExpression()), !dbg !13730
  %0 = load %struct.BMFace*, %struct.BMFace** %f.addr, align 8, !dbg !13731
  %l_first1 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %0, i32 0, i32 2, !dbg !13731
  %1 = load %struct.BMLoop*, %struct.BMLoop** %l_first1, align 8, !dbg !13731
  store %struct.BMLoop* %1, %struct.BMLoop** %l_first, align 8, !dbg !13732
  store %struct.BMLoop* %1, %struct.BMLoop** %l_iter, align 8, !dbg !13733
  br label %do.body, !dbg !13734

do.body:                                          ; preds = %do.cond, %entry
  call void @llvm.dbg.declare(metadata %struct.MLoopUV** %luv, metadata !13735, metadata !DIExpression()), !dbg !13737
  %2 = load %struct.BMLoop*, %struct.BMLoop** %l_iter, align 8, !dbg !13738
  %head = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %2, i32 0, i32 0, !dbg !13738
  %data = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head, i32 0, i32 0, !dbg !13738
  %3 = load i8*, i8** %data, align 8, !dbg !13738
  %4 = load i32, i32* %cd_loop_uv_offset.addr, align 4, !dbg !13738
  %idx.ext = sext i32 %4 to i64, !dbg !13738
  %add.ptr = getelementptr inbounds i8, i8* %3, i64 %idx.ext, !dbg !13738
  %5 = bitcast i8* %add.ptr to %struct.MLoopUV*, !dbg !13738
  store %struct.MLoopUV* %5, %struct.MLoopUV** %luv, align 8, !dbg !13737
  %6 = load %struct.MLoopUV*, %struct.MLoopUV** %luv, align 8, !dbg !13739
  %flag = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %6, i32 0, i32 1, !dbg !13739
  %7 = load i32, i32* %flag, align 4, !dbg !13739
  %and = and i32 %7, 2, !dbg !13739
  %cmp = icmp eq i32 %and, 2, !dbg !13739
  %conv = zext i1 %cmp to i32, !dbg !13739
  %8 = load i8, i8* %select_test.addr, align 1, !dbg !13739
  %conv2 = zext i8 %8 to i32, !dbg !13739
  %cmp3 = icmp eq i32 %conv, %conv2, !dbg !13739
  br i1 %cmp3, label %if.end, label %if.then, !dbg !13741

if.then:                                          ; preds = %do.body
  store i8 0, i8* %retval, align 1, !dbg !13742
  br label %return, !dbg !13742

if.end:                                           ; preds = %do.body
  br label %do.cond, !dbg !13744

do.cond:                                          ; preds = %if.end
  %9 = load %struct.BMLoop*, %struct.BMLoop** %l_iter, align 8, !dbg !13745
  %next = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %9, i32 0, i32 6, !dbg !13746
  %10 = load %struct.BMLoop*, %struct.BMLoop** %next, align 8, !dbg !13746
  store %struct.BMLoop* %10, %struct.BMLoop** %l_iter, align 8, !dbg !13747
  %11 = load %struct.BMLoop*, %struct.BMLoop** %l_first, align 8, !dbg !13748
  %cmp5 = icmp ne %struct.BMLoop* %10, %11, !dbg !13749
  br i1 %cmp5, label %do.body, label %do.end, !dbg !13744, !llvm.loop !13750

do.end:                                           ; preds = %do.cond
  store i8 1, i8* %retval, align 1, !dbg !13752
  br label %return, !dbg !13752

return:                                           ; preds = %do.end, %if.then
  %12 = load i8, i8* %retval, align 1, !dbg !13753
  ret i8 %12, !dbg !13753
}

declare dso_local void @EDBM_selectmode_flush_ex(%struct.BMEditMesh*, i16 signext) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @uv_set_2d_cursor_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !13754 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %sima = alloca %struct.SpaceImage*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !13755, metadata !DIExpression()), !dbg !13756
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !13757, metadata !DIExpression()), !dbg !13758
  call void @llvm.dbg.declare(metadata %struct.SpaceImage** %sima, metadata !13759, metadata !DIExpression()), !dbg !13760
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !13761
  %call = call %struct.SpaceImage* @CTX_wm_space_image(%struct.bContext* %0), !dbg !13762
  store %struct.SpaceImage* %call, %struct.SpaceImage** %sima, align 8, !dbg !13760
  %1 = load %struct.SpaceImage*, %struct.SpaceImage** %sima, align 8, !dbg !13763
  %tobool = icmp ne %struct.SpaceImage* %1, null, !dbg !13763
  br i1 %tobool, label %if.end, label %if.then, !dbg !13765

if.then:                                          ; preds = %entry
  store i32 2, i32* %retval, align 4, !dbg !13766
  br label %return, !dbg !13766

if.end:                                           ; preds = %entry
  %2 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !13767
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %2, i32 0, i32 7, !dbg !13768
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !13768
  %4 = load %struct.SpaceImage*, %struct.SpaceImage** %sima, align 8, !dbg !13769
  %cursor = getelementptr inbounds %struct.SpaceImage, %struct.SpaceImage* %4, i32 0, i32 11, !dbg !13770
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %cursor, i64 0, i64 0, !dbg !13769
  call void @RNA_float_get_array(%struct.PointerRNA* %3, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.42, i64 0, i64 0), float* %arraydecay), !dbg !13771
  %5 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !13772
  call void @WM_event_add_notifier(%struct.bContext* %5, i32 251920384, i8* null), !dbg !13773
  store i32 4, i32* %retval, align 4, !dbg !13774
  br label %return, !dbg !13774

return:                                           ; preds = %if.end, %if.then
  %6 = load i32, i32* %retval, align 4, !dbg !13775
  ret i32 %6, !dbg !13775
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @uv_set_2d_cursor_invoke(%struct.bContext* %C, %struct.wmOperator* %op, %struct.wmEvent* %event) #0 !dbg !13776 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %event.addr = alloca %struct.wmEvent*, align 8
  %ar = alloca %struct.ARegion*, align 8
  %location = alloca [2 x float], align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !13777, metadata !DIExpression()), !dbg !13778
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !13779, metadata !DIExpression()), !dbg !13780
  store %struct.wmEvent* %event, %struct.wmEvent** %event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event.addr, metadata !13781, metadata !DIExpression()), !dbg !13782
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar, metadata !13783, metadata !DIExpression()), !dbg !13784
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !13785
  %call = call %struct.ARegion* @CTX_wm_region(%struct.bContext* %0), !dbg !13786
  store %struct.ARegion* %call, %struct.ARegion** %ar, align 8, !dbg !13784
  call void @llvm.dbg.declare(metadata [2 x float]* %location, metadata !13787, metadata !DIExpression()), !dbg !13788
  %1 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !13789
  %v2d = getelementptr inbounds %struct.ARegion, %struct.ARegion* %1, i32 0, i32 2, !dbg !13790
  %2 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !13791
  %mval = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %2, i32 0, i32 6, !dbg !13792
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %mval, i64 0, i64 0, !dbg !13791
  %3 = load i32, i32* %arrayidx, align 4, !dbg !13791
  %conv = sitofp i32 %3 to float, !dbg !13791
  %4 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !13793
  %mval1 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %4, i32 0, i32 6, !dbg !13794
  %arrayidx2 = getelementptr inbounds [2 x i32], [2 x i32]* %mval1, i64 0, i64 1, !dbg !13793
  %5 = load i32, i32* %arrayidx2, align 4, !dbg !13793
  %conv3 = sitofp i32 %5 to float, !dbg !13793
  %arrayidx4 = getelementptr inbounds [2 x float], [2 x float]* %location, i64 0, i64 0, !dbg !13795
  %arrayidx5 = getelementptr inbounds [2 x float], [2 x float]* %location, i64 0, i64 1, !dbg !13796
  call void @UI_view2d_region_to_view(%struct.View2D* %v2d, float %conv, float %conv3, float* %arrayidx4, float* %arrayidx5), !dbg !13797
  %6 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !13798
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %6, i32 0, i32 7, !dbg !13799
  %7 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !13799
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %location, i64 0, i64 0, !dbg !13800
  call void @RNA_float_set_array(%struct.PointerRNA* %7, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.42, i64 0, i64 0), float* %arraydecay), !dbg !13801
  %8 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !13802
  %9 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !13803
  %call6 = call i32 @uv_set_2d_cursor_exec(%struct.bContext* %8, %struct.wmOperator* %9), !dbg !13804
  ret i32 %call6, !dbg !13805
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @uv_set_2d_cursor_poll(%struct.bContext* %C) #0 !dbg !13806 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !13809, metadata !DIExpression()), !dbg !13810
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !13811
  %call = call i32 @ED_operator_uvedit_space_image(%struct.bContext* %0), !dbg !13812
  %tobool = icmp ne i32 %call, 0, !dbg !13812
  br i1 %tobool, label %lor.end, label %lor.lhs.false, !dbg !13813

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !13814
  %call1 = call i32 @ED_space_image_maskedit_poll(%struct.bContext* %1), !dbg !13815
  %tobool2 = icmp ne i32 %call1, 0, !dbg !13815
  br i1 %tobool2, label %lor.end, label %lor.rhs, !dbg !13816

lor.rhs:                                          ; preds = %lor.lhs.false
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !13817
  %call3 = call zeroext i8 @ED_space_image_paint_curve(%struct.bContext* %2), !dbg !13818
  %conv = zext i8 %call3 to i32, !dbg !13818
  %tobool4 = icmp ne i32 %conv, 0, !dbg !13816
  br label %lor.end, !dbg !13816

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false, %entry
  %3 = phi i1 [ true, %lor.lhs.false ], [ true, %entry ], [ %tobool4, %lor.rhs ]
  %lor.ext = zext i1 %3 to i32, !dbg !13816
  ret i32 %lor.ext, !dbg !13819
}

declare dso_local i32 @ED_space_image_maskedit_poll(%struct.bContext*) #2

declare dso_local zeroext i8 @ED_space_image_paint_curve(%struct.bContext*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @set_tile_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !13820 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %ima = alloca %struct.Image*, align 8
  %tile = alloca [2 x i32], align 4
  %obedit = alloca %struct.Object*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !13821, metadata !DIExpression()), !dbg !13822
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !13823, metadata !DIExpression()), !dbg !13824
  call void @llvm.dbg.declare(metadata %struct.Image** %ima, metadata !13825, metadata !DIExpression()), !dbg !13826
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !13827
  %call = call %struct.Image* @CTX_data_edit_image(%struct.bContext* %0), !dbg !13828
  store %struct.Image* %call, %struct.Image** %ima, align 8, !dbg !13826
  call void @llvm.dbg.declare(metadata [2 x i32]* %tile, metadata !13829, metadata !DIExpression()), !dbg !13830
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !13831, metadata !DIExpression()), !dbg !13832
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !13833
  %call1 = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %1), !dbg !13834
  store %struct.Object* %call1, %struct.Object** %obedit, align 8, !dbg !13832
  %2 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !13835
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %2, i32 0, i32 7, !dbg !13836
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !13836
  %arraydecay = getelementptr inbounds [2 x i32], [2 x i32]* %tile, i64 0, i64 0, !dbg !13837
  call void @RNA_int_get_array(%struct.PointerRNA* %3, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.168, i64 0, i64 0), i32* %arraydecay), !dbg !13838
  %4 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !13839
  %5 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !13841
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %tile, i64 0, i64 0, !dbg !13842
  %6 = load i32, i32* %arrayidx, align 4, !dbg !13842
  %7 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !13843
  %xrep = getelementptr inbounds %struct.Image, %struct.Image* %7, i32 0, i32 16, !dbg !13844
  %8 = load i16, i16* %xrep, align 4, !dbg !13844
  %conv = sext i16 %8 to i32, !dbg !13843
  %arrayidx2 = getelementptr inbounds [2 x i32], [2 x i32]* %tile, i64 0, i64 1, !dbg !13845
  %9 = load i32, i32* %arrayidx2, align 4, !dbg !13845
  %mul = mul nsw i32 %conv, %9, !dbg !13846
  %add = add nsw i32 %6, %mul, !dbg !13847
  %call3 = call zeroext i8 @uvedit_set_tile(%struct.Object* %4, %struct.Image* %5, i32 %add), !dbg !13848
  %tobool = icmp ne i8 %call3, 0, !dbg !13848
  br i1 %tobool, label %if.then, label %if.end, !dbg !13849

if.then:                                          ; preds = %entry
  %10 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !13850
  %11 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !13852
  %data = getelementptr inbounds %struct.Object, %struct.Object* %11, i32 0, i32 19, !dbg !13853
  %12 = load i8*, i8** %data, align 8, !dbg !13853
  call void @WM_event_add_notifier(%struct.bContext* %10, i32 274399232, i8* %12), !dbg !13854
  %13 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !13855
  call void @WM_event_add_notifier(%struct.bContext* %13, i32 251920384, i8* null), !dbg !13856
  store i32 4, i32* %retval, align 4, !dbg !13857
  br label %return, !dbg !13857

if.end:                                           ; preds = %entry
  store i32 2, i32* %retval, align 4, !dbg !13858
  br label %return, !dbg !13858

return:                                           ; preds = %if.end, %if.then
  %14 = load i32, i32* %retval, align 4, !dbg !13859
  ret i32 %14, !dbg !13859
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @set_tile_invoke(%struct.bContext* %C, %struct.wmOperator* %op, %struct.wmEvent* %event) #0 !dbg !13860 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %event.addr = alloca %struct.wmEvent*, align 8
  %sima = alloca %struct.SpaceImage*, align 8
  %ima = alloca %struct.Image*, align 8
  %ar = alloca %struct.ARegion*, align 8
  %fx = alloca float, align 4
  %fy = alloca float, align 4
  %tile = alloca [2 x i32], align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !13861, metadata !DIExpression()), !dbg !13862
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !13863, metadata !DIExpression()), !dbg !13864
  store %struct.wmEvent* %event, %struct.wmEvent** %event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event.addr, metadata !13865, metadata !DIExpression()), !dbg !13866
  call void @llvm.dbg.declare(metadata %struct.SpaceImage** %sima, metadata !13867, metadata !DIExpression()), !dbg !13868
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !13869
  %call = call %struct.SpaceImage* @CTX_wm_space_image(%struct.bContext* %0), !dbg !13870
  store %struct.SpaceImage* %call, %struct.SpaceImage** %sima, align 8, !dbg !13868
  call void @llvm.dbg.declare(metadata %struct.Image** %ima, metadata !13871, metadata !DIExpression()), !dbg !13872
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !13873
  %call1 = call %struct.Image* @CTX_data_edit_image(%struct.bContext* %1), !dbg !13874
  store %struct.Image* %call1, %struct.Image** %ima, align 8, !dbg !13872
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar, metadata !13875, metadata !DIExpression()), !dbg !13876
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !13877
  %call2 = call %struct.ARegion* @CTX_wm_region(%struct.bContext* %2), !dbg !13878
  store %struct.ARegion* %call2, %struct.ARegion** %ar, align 8, !dbg !13876
  call void @llvm.dbg.declare(metadata float* %fx, metadata !13879, metadata !DIExpression()), !dbg !13880
  call void @llvm.dbg.declare(metadata float* %fy, metadata !13881, metadata !DIExpression()), !dbg !13882
  call void @llvm.dbg.declare(metadata [2 x i32]* %tile, metadata !13883, metadata !DIExpression()), !dbg !13884
  %3 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !13885
  %tobool = icmp ne %struct.Image* %3, null, !dbg !13885
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !13887

lor.lhs.false:                                    ; preds = %entry
  %4 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !13888
  %tpageflag = getelementptr inbounds %struct.Image, %struct.Image* %4, i32 0, i32 14, !dbg !13889
  %5 = load i16, i16* %tpageflag, align 8, !dbg !13889
  %conv = sext i16 %5 to i32, !dbg !13888
  %and = and i32 %conv, 1, !dbg !13890
  %tobool3 = icmp ne i32 %and, 0, !dbg !13890
  br i1 %tobool3, label %if.end, label %if.then, !dbg !13891

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 2, i32* %retval, align 4, !dbg !13892
  br label %return, !dbg !13892

if.end:                                           ; preds = %lor.lhs.false
  %6 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !13893
  %v2d = getelementptr inbounds %struct.ARegion, %struct.ARegion* %6, i32 0, i32 2, !dbg !13894
  %7 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !13895
  %mval = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %7, i32 0, i32 6, !dbg !13896
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %mval, i64 0, i64 0, !dbg !13895
  %8 = load i32, i32* %arrayidx, align 4, !dbg !13895
  %conv4 = sitofp i32 %8 to float, !dbg !13895
  %9 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !13897
  %mval5 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %9, i32 0, i32 6, !dbg !13898
  %arrayidx6 = getelementptr inbounds [2 x i32], [2 x i32]* %mval5, i64 0, i64 1, !dbg !13897
  %10 = load i32, i32* %arrayidx6, align 4, !dbg !13897
  %conv7 = sitofp i32 %10 to float, !dbg !13897
  call void @UI_view2d_region_to_view(%struct.View2D* %v2d, float %conv4, float %conv7, float* %fx, float* %fy), !dbg !13899
  %11 = load float, float* %fx, align 4, !dbg !13900
  %cmp = fcmp oge float %11, 0.000000e+00, !dbg !13902
  br i1 %cmp, label %land.lhs.true, label %if.end33, !dbg !13903

land.lhs.true:                                    ; preds = %if.end
  %12 = load float, float* %fy, align 4, !dbg !13904
  %cmp9 = fcmp oge float %12, 0.000000e+00, !dbg !13905
  br i1 %cmp9, label %land.lhs.true11, label %if.end33, !dbg !13906

land.lhs.true11:                                  ; preds = %land.lhs.true
  %13 = load float, float* %fx, align 4, !dbg !13907
  %cmp12 = fcmp olt float %13, 1.000000e+00, !dbg !13908
  br i1 %cmp12, label %land.lhs.true14, label %if.end33, !dbg !13909

land.lhs.true14:                                  ; preds = %land.lhs.true11
  %14 = load float, float* %fy, align 4, !dbg !13910
  %cmp15 = fcmp olt float %14, 1.000000e+00, !dbg !13911
  br i1 %cmp15, label %if.then17, label %if.end33, !dbg !13912

if.then17:                                        ; preds = %land.lhs.true14
  %15 = load float, float* %fx, align 4, !dbg !13913
  %16 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !13915
  %xrep = getelementptr inbounds %struct.Image, %struct.Image* %16, i32 0, i32 16, !dbg !13916
  %17 = load i16, i16* %xrep, align 4, !dbg !13916
  %conv18 = sext i16 %17 to i32, !dbg !13915
  %conv19 = sitofp i32 %conv18 to float, !dbg !13915
  %mul = fmul float %15, %conv19, !dbg !13917
  store float %mul, float* %fx, align 4, !dbg !13918
  %18 = load float, float* %fy, align 4, !dbg !13919
  %19 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !13920
  %yrep = getelementptr inbounds %struct.Image, %struct.Image* %19, i32 0, i32 17, !dbg !13921
  %20 = load i16, i16* %yrep, align 2, !dbg !13921
  %conv20 = sext i16 %20 to i32, !dbg !13920
  %conv21 = sitofp i32 %conv20 to float, !dbg !13920
  %mul22 = fmul float %18, %conv21, !dbg !13922
  store float %mul22, float* %fy, align 4, !dbg !13923
  %21 = load float, float* %fx, align 4, !dbg !13924
  %conv23 = fptosi float %21 to i32, !dbg !13924
  %arrayidx24 = getelementptr inbounds [2 x i32], [2 x i32]* %tile, i64 0, i64 0, !dbg !13925
  store i32 %conv23, i32* %arrayidx24, align 4, !dbg !13926
  %22 = load float, float* %fy, align 4, !dbg !13927
  %conv25 = fptosi float %22 to i32, !dbg !13927
  %arrayidx26 = getelementptr inbounds [2 x i32], [2 x i32]* %tile, i64 0, i64 1, !dbg !13928
  store i32 %conv25, i32* %arrayidx26, align 4, !dbg !13929
  %arrayidx27 = getelementptr inbounds [2 x i32], [2 x i32]* %tile, i64 0, i64 1, !dbg !13930
  %23 = load i32, i32* %arrayidx27, align 4, !dbg !13930
  %24 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !13931
  %xrep28 = getelementptr inbounds %struct.Image, %struct.Image* %24, i32 0, i32 16, !dbg !13932
  %25 = load i16, i16* %xrep28, align 4, !dbg !13932
  %conv29 = sext i16 %25 to i32, !dbg !13931
  %mul30 = mul nsw i32 %23, %conv29, !dbg !13933
  %arrayidx31 = getelementptr inbounds [2 x i32], [2 x i32]* %tile, i64 0, i64 0, !dbg !13934
  %26 = load i32, i32* %arrayidx31, align 4, !dbg !13934
  %add = add nsw i32 %mul30, %26, !dbg !13935
  %conv32 = trunc i32 %add to i16, !dbg !13930
  %27 = load %struct.SpaceImage*, %struct.SpaceImage** %sima, align 8, !dbg !13936
  %curtile = getelementptr inbounds %struct.SpaceImage, %struct.SpaceImage* %27, i32 0, i32 20, !dbg !13937
  store i16 %conv32, i16* %curtile, align 8, !dbg !13938
  %28 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !13939
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %28, i32 0, i32 7, !dbg !13940
  %29 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !13940
  %arraydecay = getelementptr inbounds [2 x i32], [2 x i32]* %tile, i64 0, i64 0, !dbg !13941
  call void @RNA_int_set_array(%struct.PointerRNA* %29, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.168, i64 0, i64 0), i32* %arraydecay), !dbg !13942
  br label %if.end33, !dbg !13943

if.end33:                                         ; preds = %if.then17, %land.lhs.true14, %land.lhs.true11, %land.lhs.true, %if.end
  %30 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !13944
  %31 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !13945
  %call34 = call i32 @set_tile_exec(%struct.bContext* %30, %struct.wmOperator* %31), !dbg !13946
  store i32 %call34, i32* %retval, align 4, !dbg !13947
  br label %return, !dbg !13947

return:                                           ; preds = %if.end33, %if.then
  %32 = load i32, i32* %retval, align 4, !dbg !13948
  ret i32 %32, !dbg !13948
}

declare dso_local i32 @ED_operator_image_active(%struct.bContext*) #2

declare dso_local %struct.PropertyRNA* @RNA_def_int_vector(i8*, i8*, i32, i32*, i32, i32, i8*, i8*, i32, i32) #2

declare dso_local void @RNA_int_get_array(%struct.PointerRNA*, i8*, i32*) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @uvedit_set_tile(%struct.Object* %obedit, %struct.Image* %ima, i32 %curtile) #0 !dbg !13949 {
entry:
  %retval = alloca i8, align 1
  %obedit.addr = alloca %struct.Object*, align 8
  %ima.addr = alloca %struct.Image*, align 8
  %curtile.addr = alloca i32, align 4
  %em = alloca %struct.BMEditMesh*, align 8
  %efa = alloca %struct.BMFace*, align 8
  %iter = alloca %struct.BMIter, align 8
  %tf = alloca %struct.MTexPoly*, align 8
  %cd_poly_tex_offset = alloca i32, align 4
  store %struct.Object* %obedit, %struct.Object** %obedit.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit.addr, metadata !13952, metadata !DIExpression()), !dbg !13953
  store %struct.Image* %ima, %struct.Image** %ima.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Image** %ima.addr, metadata !13954, metadata !DIExpression()), !dbg !13955
  store i32 %curtile, i32* %curtile.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %curtile.addr, metadata !13956, metadata !DIExpression()), !dbg !13957
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !13958, metadata !DIExpression()), !dbg !13959
  call void @llvm.dbg.declare(metadata %struct.BMFace** %efa, metadata !13960, metadata !DIExpression()), !dbg !13961
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iter, metadata !13962, metadata !DIExpression()), !dbg !13963
  call void @llvm.dbg.declare(metadata %struct.MTexPoly** %tf, metadata !13964, metadata !DIExpression()), !dbg !13965
  call void @llvm.dbg.declare(metadata i32* %cd_poly_tex_offset, metadata !13966, metadata !DIExpression()), !dbg !13967
  %0 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !13968
  %tobool = icmp ne %struct.Image* %0, null, !dbg !13968
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !13970

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.Object*, %struct.Object** %obedit.addr, align 8, !dbg !13971
  %call = call zeroext i8 @ED_uvedit_test(%struct.Object* %1), !dbg !13972
  %tobool1 = icmp ne i8 %call, 0, !dbg !13972
  br i1 %tobool1, label %if.end, label %if.then, !dbg !13973

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i8 0, i8* %retval, align 1, !dbg !13974
  br label %return, !dbg !13974

if.end:                                           ; preds = %lor.lhs.false
  %2 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !13975
  %tpageflag = getelementptr inbounds %struct.Image, %struct.Image* %2, i32 0, i32 14, !dbg !13977
  %3 = load i16, i16* %tpageflag, align 8, !dbg !13977
  %conv = sext i16 %3 to i32, !dbg !13975
  %and = and i32 %conv, 1, !dbg !13978
  %cmp = icmp eq i32 %and, 0, !dbg !13979
  br i1 %cmp, label %if.then3, label %if.end4, !dbg !13980

if.then3:                                         ; preds = %if.end
  store i8 0, i8* %retval, align 1, !dbg !13981
  br label %return, !dbg !13981

if.end4:                                          ; preds = %if.end
  %4 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !13982
  %type = getelementptr inbounds %struct.Image, %struct.Image* %4, i32 0, i32 12, !dbg !13984
  %5 = load i16, i16* %type, align 2, !dbg !13984
  %conv5 = sext i16 %5 to i32, !dbg !13982
  %cmp6 = icmp eq i32 %conv5, 4, !dbg !13985
  br i1 %cmp6, label %if.then13, label %lor.lhs.false8, !dbg !13986

lor.lhs.false8:                                   ; preds = %if.end4
  %6 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !13987
  %type9 = getelementptr inbounds %struct.Image, %struct.Image* %6, i32 0, i32 12, !dbg !13988
  %7 = load i16, i16* %type9, align 2, !dbg !13988
  %conv10 = sext i16 %7 to i32, !dbg !13987
  %cmp11 = icmp eq i32 %conv10, 5, !dbg !13989
  br i1 %cmp11, label %if.then13, label %if.end14, !dbg !13990

if.then13:                                        ; preds = %lor.lhs.false8, %if.end4
  store i8 0, i8* %retval, align 1, !dbg !13991
  br label %return, !dbg !13991

if.end14:                                         ; preds = %lor.lhs.false8
  %8 = load %struct.Object*, %struct.Object** %obedit.addr, align 8, !dbg !13992
  %call15 = call %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object* %8), !dbg !13993
  store %struct.BMEditMesh* %call15, %struct.BMEditMesh** %em, align 8, !dbg !13994
  %9 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !13995
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %9, i32 0, i32 0, !dbg !13996
  %10 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !13996
  %pdata = getelementptr inbounds %struct.BMesh, %struct.BMesh* %10, i32 0, i32 27, !dbg !13997
  %call16 = call i32 @CustomData_get_offset(%struct.CustomData* %pdata, i32 15), !dbg !13998
  store i32 %call16, i32* %cd_poly_tex_offset, align 4, !dbg !13999
  %11 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !14000
  %bm17 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %11, i32 0, i32 0, !dbg !14000
  %12 = load %struct.BMesh*, %struct.BMesh** %bm17, align 8, !dbg !14000
  %call18 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %12, i8 zeroext 3, i8* null), !dbg !14000
  %13 = bitcast i8* %call18 to %struct.BMFace*, !dbg !14000
  store %struct.BMFace* %13, %struct.BMFace** %efa, align 8, !dbg !14000
  br label %for.cond, !dbg !14000

for.cond:                                         ; preds = %for.inc, %if.end14
  %14 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !14002
  %tobool19 = icmp ne %struct.BMFace* %14, null, !dbg !14000
  br i1 %tobool19, label %for.body, label %for.end, !dbg !14000

for.body:                                         ; preds = %for.cond
  %15 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !14004
  %head = getelementptr inbounds %struct.BMFace, %struct.BMFace* %15, i32 0, i32 0, !dbg !14004
  %data = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head, i32 0, i32 0, !dbg !14004
  %16 = load i8*, i8** %data, align 8, !dbg !14004
  %17 = load i32, i32* %cd_poly_tex_offset, align 4, !dbg !14004
  %idx.ext = sext i32 %17 to i64, !dbg !14004
  %add.ptr = getelementptr inbounds i8, i8* %16, i64 %idx.ext, !dbg !14004
  %18 = bitcast i8* %add.ptr to %struct.MTexPoly*, !dbg !14004
  store %struct.MTexPoly* %18, %struct.MTexPoly** %tf, align 8, !dbg !14006
  %19 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !14007
  %head20 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %19, i32 0, i32 0, !dbg !14007
  %call21 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head20, i8 zeroext 1), !dbg !14007
  %tobool22 = icmp ne i8 %call21, 0, !dbg !14007
  br i1 %tobool22, label %if.then23, label %if.end25, !dbg !14009

if.then23:                                        ; preds = %for.body
  %20 = load i32, i32* %curtile.addr, align 4, !dbg !14010
  %conv24 = trunc i32 %20 to i16, !dbg !14010
  %21 = load %struct.MTexPoly*, %struct.MTexPoly** %tf, align 8, !dbg !14011
  %tile = getelementptr inbounds %struct.MTexPoly, %struct.MTexPoly* %21, i32 0, i32 4, !dbg !14012
  store i16 %conv24, i16* %tile, align 4, !dbg !14013
  br label %if.end25, !dbg !14011

if.end25:                                         ; preds = %if.then23, %for.body
  br label %for.inc, !dbg !14014

for.inc:                                          ; preds = %if.end25
  %call26 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !14002
  %22 = bitcast i8* %call26 to %struct.BMFace*, !dbg !14002
  store %struct.BMFace* %22, %struct.BMFace** %efa, align 8, !dbg !14002
  br label %for.cond, !dbg !14002, !llvm.loop !14015

for.end:                                          ; preds = %for.cond
  %23 = load %struct.Object*, %struct.Object** %obedit.addr, align 8, !dbg !14017
  %data27 = getelementptr inbounds %struct.Object, %struct.Object* %23, i32 0, i32 19, !dbg !14018
  %24 = load i8*, i8** %data27, align 8, !dbg !14018
  %25 = bitcast i8* %24 to %struct.ID*, !dbg !14017
  call void @DAG_id_tag_update(%struct.ID* %25, i16 signext 0), !dbg !14019
  store i8 1, i8* %retval, align 1, !dbg !14020
  br label %return, !dbg !14020

return:                                           ; preds = %for.end, %if.then13, %if.then3, %if.then
  %26 = load i8, i8* %retval, align 1, !dbg !14021
  ret i8 %26, !dbg !14021
}

declare dso_local void @RNA_int_set_array(%struct.PointerRNA*, i8*, i32*) #2

declare dso_local %struct.ToolSettings* @CTX_data_tool_settings(%struct.bContext*) #2

declare dso_local zeroext i8 @ED_space_image_show_uvedit(%struct.SpaceImage*, %struct.Object*) #2

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind willreturn }

!llvm.dbg.cu = !{!2745}
!llvm.module.flags = !{!3581, !3582, !3583}
!llvm.ident = !{!3584}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "target_items", scope: !2, file: !3, line: 3219, type: !3580, isLocal: true, isDefinition: true)
!2 = distinct !DISubprogram(name: "UV_OT_snap_cursor", scope: !3, file: !3, line: 3217, type: !4, scopeLine: 3218, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!3 = !DIFile(filename: "blender/source/blender/editors/uvedit/uvedit_ops.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4 = !DISubroutineType(types: !5)
!5 = !{null, !6}
!6 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!7 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmOperatorType", file: !8, line: 568, baseType: !9)
!8 = !DIFile(filename: "blender/source/blender/windowmanager/WM_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmOperatorType", file: !8, line: 508, size: 1536, elements: !10)
!10 = !{!11, !15, !16, !17, !18, !2696, !2700, !2706, !2710, !2711, !2715, !2716, !2717, !2718, !2722, !2723, !2738, !2739, !2743, !2744}
!11 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !9, file: !8, line: 509, baseType: !12, size: 64)
!12 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13, size: 64)
!13 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !14)
!14 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !9, file: !8, line: 510, baseType: !12, size: 64, offset: 64)
!16 = !DIDerivedType(tag: DW_TAG_member, name: "translation_context", scope: !9, file: !8, line: 511, baseType: !12, size: 64, offset: 128)
!17 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !9, file: !8, line: 512, baseType: !12, size: 64, offset: 192)
!18 = !DIDerivedType(tag: DW_TAG_member, name: "exec", scope: !9, file: !8, line: 518, baseType: !19, size: 64, offset: 256)
!19 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !20, size: 64)
!20 = !DISubroutineType(types: !21)
!21 = !{!22, !23, !26}
!22 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!23 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !24, size: 64)
!24 = !DICompositeType(tag: DW_TAG_structure_type, name: "bContext", file: !25, line: 44, flags: DIFlagFwdDecl)
!25 = !DIFile(filename: "blender/source/blender/makesrna/RNA_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!26 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !27, size: 64)
!27 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmOperator", file: !28, line: 328, size: 1344, elements: !29)
!28 = !DIFile(filename: "blender/source/blender/makesdna/DNA_windowmanager_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!29 = !{!30, !31, !32, !36, !68, !70, !71, !72, !85, !2691, !2692, !2693, !2694, !2695}
!30 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !27, file: !28, line: 329, baseType: !26, size: 64)
!31 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !27, file: !28, line: 329, baseType: !26, size: 64, offset: 64)
!32 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !27, file: !28, line: 332, baseType: !33, size: 512, offset: 128)
!33 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 512, elements: !34)
!34 = !{!35}
!35 = !DISubrange(count: 64)
!36 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !27, file: !28, line: 333, baseType: !37, size: 64, offset: 640)
!37 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !38, size: 64)
!38 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDProperty", file: !39, line: 75, baseType: !40)
!39 = !DIFile(filename: "blender/source/blender/makesdna/DNA_ID.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!40 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDProperty", file: !39, line: 62, size: 1024, elements: !41)
!41 = !{!42, !44, !45, !46, !47, !49, !50, !51, !66, !67}
!42 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !40, file: !39, line: 63, baseType: !43, size: 64)
!43 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !40, size: 64)
!44 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !40, file: !39, line: 63, baseType: !43, size: 64, offset: 64)
!45 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !40, file: !39, line: 64, baseType: !14, size: 8, offset: 128)
!46 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !40, file: !39, line: 64, baseType: !14, size: 8, offset: 136)
!47 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !40, file: !39, line: 65, baseType: !48, size: 16, offset: 144)
!48 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!49 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !40, file: !39, line: 66, baseType: !33, size: 512, offset: 160)
!50 = !DIDerivedType(tag: DW_TAG_member, name: "saved", scope: !40, file: !39, line: 67, baseType: !22, size: 32, offset: 672)
!51 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !40, file: !39, line: 69, baseType: !52, size: 256, offset: 704)
!52 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDPropertyData", file: !39, line: 60, baseType: !53)
!53 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDPropertyData", file: !39, line: 48, size: 256, elements: !54)
!54 = !{!55, !57, !64, !65}
!55 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !53, file: !39, line: 49, baseType: !56, size: 64)
!56 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!57 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !53, file: !39, line: 58, baseType: !58, size: 128, offset: 64)
!58 = !DIDerivedType(tag: DW_TAG_typedef, name: "ListBase", file: !59, line: 71, baseType: !60)
!59 = !DIFile(filename: "blender/source/blender/makesdna/DNA_listBase.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!60 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ListBase", file: !59, line: 69, size: 128, elements: !61)
!61 = !{!62, !63}
!62 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !60, file: !59, line: 70, baseType: !56, size: 64)
!63 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !60, file: !59, line: 70, baseType: !56, size: 64, offset: 64)
!64 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !53, file: !39, line: 59, baseType: !22, size: 32, offset: 192)
!65 = !DIDerivedType(tag: DW_TAG_member, name: "val2", scope: !53, file: !39, line: 59, baseType: !22, size: 32, offset: 224)
!66 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !40, file: !39, line: 70, baseType: !22, size: 32, offset: 960)
!67 = !DIDerivedType(tag: DW_TAG_member, name: "totallen", scope: !40, file: !39, line: 74, baseType: !22, size: 32, offset: 992)
!68 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !27, file: !28, line: 336, baseType: !69, size: 64, offset: 704)
!69 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9, size: 64)
!70 = !DIDerivedType(tag: DW_TAG_member, name: "customdata", scope: !27, file: !28, line: 337, baseType: !56, size: 64, offset: 768)
!71 = !DIDerivedType(tag: DW_TAG_member, name: "py_instance", scope: !27, file: !28, line: 338, baseType: !56, size: 64, offset: 832)
!72 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !27, file: !28, line: 340, baseType: !73, size: 64, offset: 896)
!73 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !74, size: 64)
!74 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PointerRNA", file: !25, line: 55, size: 192, elements: !75)
!75 = !{!76, !80, !84}
!76 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !74, file: !25, line: 58, baseType: !77, size: 64)
!77 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !74, file: !25, line: 56, size: 64, elements: !78)
!78 = !{!79}
!79 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !77, file: !25, line: 57, baseType: !56, size: 64)
!80 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !74, file: !25, line: 60, baseType: !81, size: 64, offset: 64)
!81 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !82, size: 64)
!82 = !DICompositeType(tag: DW_TAG_structure_type, name: "StructRNA", file: !83, line: 335, flags: DIFlagFwdDecl)
!83 = !DIFile(filename: "blender/source/blender/makesdna/DNA_node_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!84 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !74, file: !25, line: 61, baseType: !56, size: 64, offset: 128)
!85 = !DIDerivedType(tag: DW_TAG_member, name: "reports", scope: !27, file: !28, line: 341, baseType: !86, size: 64, offset: 960)
!86 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !87, size: 64)
!87 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ReportList", file: !28, line: 106, size: 320, elements: !88)
!88 = !{!89, !90, !91, !92, !93, !94}
!89 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !87, file: !28, line: 107, baseType: !58, size: 128)
!90 = !DIDerivedType(tag: DW_TAG_member, name: "printlevel", scope: !87, file: !28, line: 108, baseType: !22, size: 32, offset: 128)
!91 = !DIDerivedType(tag: DW_TAG_member, name: "storelevel", scope: !87, file: !28, line: 109, baseType: !22, size: 32, offset: 160)
!92 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !87, file: !28, line: 110, baseType: !22, size: 32, offset: 192)
!93 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !87, file: !28, line: 110, baseType: !22, size: 32, offset: 224)
!94 = !DIDerivedType(tag: DW_TAG_member, name: "reporttimer", scope: !87, file: !28, line: 111, baseType: !95, size: 64, offset: 256)
!95 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !96, size: 64)
!96 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmTimer", file: !8, line: 490, size: 768, elements: !97)
!97 = !{!98, !99, !100, !2682, !2683, !2684, !2685, !2686, !2687, !2688, !2689, !2690}
!98 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !96, file: !8, line: 491, baseType: !95, size: 64)
!99 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !96, file: !8, line: 491, baseType: !95, size: 64, offset: 64)
!100 = !DIDerivedType(tag: DW_TAG_member, name: "win", scope: !96, file: !8, line: 493, baseType: !101, size: 64, offset: 128)
!101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !102, size: 64)
!102 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmWindow", file: !28, line: 169, size: 2048, elements: !103)
!103 = !{!104, !105, !106, !107, !2599, !2600, !2601, !2602, !2603, !2604, !2605, !2606, !2607, !2608, !2609, !2610, !2611, !2612, !2613, !2614, !2615, !2616, !2657, !2660, !2674, !2675, !2676, !2677, !2678, !2679, !2680, !2681}
!104 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !102, file: !28, line: 170, baseType: !101, size: 64)
!105 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !102, file: !28, line: 170, baseType: !101, size: 64, offset: 64)
!106 = !DIDerivedType(tag: DW_TAG_member, name: "ghostwin", scope: !102, file: !28, line: 172, baseType: !56, size: 64, offset: 128)
!107 = !DIDerivedType(tag: DW_TAG_member, name: "screen", scope: !102, file: !28, line: 174, baseType: !108, size: 64, offset: 192)
!108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !109, size: 64)
!109 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bScreen", file: !110, line: 49, size: 1984, elements: !111)
!110 = !DIFile(filename: "blender/source/blender/makesdna/DNA_screen_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!111 = !{!112, !148, !149, !150, !151, !152, !2582, !2583, !2584, !2585, !2586, !2587, !2588, !2589, !2590, !2591, !2592, !2593, !2594, !2595, !2596, !2597, !2598}
!112 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !109, file: !110, line: 50, baseType: !113, size: 960)
!113 = !DIDerivedType(tag: DW_TAG_typedef, name: "ID", file: !39, line: 130, baseType: !114)
!114 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ID", file: !39, line: 117, size: 960, elements: !115)
!115 = !{!116, !117, !118, !120, !139, !143, !144, !145, !146, !147}
!116 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !114, file: !39, line: 118, baseType: !56, size: 64)
!117 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !114, file: !39, line: 118, baseType: !56, size: 64, offset: 64)
!118 = !DIDerivedType(tag: DW_TAG_member, name: "newid", scope: !114, file: !39, line: 119, baseType: !119, size: 64, offset: 128)
!119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !114, size: 64)
!120 = !DIDerivedType(tag: DW_TAG_member, name: "lib", scope: !114, file: !39, line: 120, baseType: !121, size: 64, offset: 192)
!121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !122, size: 64)
!122 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Library", file: !39, line: 136, size: 17600, elements: !123)
!123 = !{!124, !125, !127, !130, !134, !135, !136}
!124 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !122, file: !39, line: 137, baseType: !113, size: 960)
!125 = !DIDerivedType(tag: DW_TAG_member, name: "idblock", scope: !122, file: !39, line: 138, baseType: !126, size: 64, offset: 960)
!126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !113, size: 64)
!127 = !DIDerivedType(tag: DW_TAG_member, name: "filedata", scope: !122, file: !39, line: 139, baseType: !128, size: 64, offset: 1024)
!128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !129, size: 64)
!129 = !DICompositeType(tag: DW_TAG_structure_type, name: "FileData", file: !39, line: 43, flags: DIFlagFwdDecl)
!130 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !122, file: !39, line: 140, baseType: !131, size: 8192, offset: 1088)
!131 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 8192, elements: !132)
!132 = !{!133}
!133 = !DISubrange(count: 1024)
!134 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !122, file: !39, line: 141, baseType: !131, size: 8192, offset: 9280)
!135 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !122, file: !39, line: 148, baseType: !121, size: 64, offset: 17472)
!136 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !122, file: !39, line: 150, baseType: !137, size: 64, offset: 17536)
!137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !138, size: 64)
!138 = !DICompositeType(tag: DW_TAG_structure_type, name: "PackedFile", file: !39, line: 45, flags: DIFlagFwdDecl)
!139 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !114, file: !39, line: 121, baseType: !140, size: 528, offset: 256)
!140 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 528, elements: !141)
!141 = !{!142}
!142 = !DISubrange(count: 66)
!143 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !114, file: !39, line: 126, baseType: !48, size: 16, offset: 784)
!144 = !DIDerivedType(tag: DW_TAG_member, name: "us", scope: !114, file: !39, line: 127, baseType: !22, size: 32, offset: 800)
!145 = !DIDerivedType(tag: DW_TAG_member, name: "icon_id", scope: !114, file: !39, line: 128, baseType: !22, size: 32, offset: 832)
!146 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !114, file: !39, line: 128, baseType: !22, size: 32, offset: 864)
!147 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !114, file: !39, line: 129, baseType: !37, size: 64, offset: 896)
!148 = !DIDerivedType(tag: DW_TAG_member, name: "vertbase", scope: !109, file: !110, line: 52, baseType: !58, size: 128, offset: 960)
!149 = !DIDerivedType(tag: DW_TAG_member, name: "edgebase", scope: !109, file: !110, line: 53, baseType: !58, size: 128, offset: 1088)
!150 = !DIDerivedType(tag: DW_TAG_member, name: "areabase", scope: !109, file: !110, line: 54, baseType: !58, size: 128, offset: 1216)
!151 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !109, file: !110, line: 55, baseType: !58, size: 128, offset: 1344)
!152 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !109, file: !110, line: 57, baseType: !153, size: 64, offset: 1472)
!153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !154, size: 64)
!154 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Scene", file: !155, line: 1216, size: 39680, elements: !156)
!155 = !DIFile(filename: "blender/source/blender/makesdna/DNA_scene_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!156 = !{!157, !158, !162, !1540, !1621, !1622, !1623, !1635, !1636, !1637, !1638, !1639, !1640, !1641, !1642, !1643, !1644, !1645, !1646, !1647, !1991, !2215, !2218, !2458, !2470, !2471, !2472, !2473, !2474, !2475, !2476, !2477, !2480, !2481, !2482, !2483, !2484, !2492, !2558, !2565, !2566, !2573, !2574, !2575, !2576, !2577, !2578, !2579}
!157 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !154, file: !155, line: 1217, baseType: !113, size: 960)
!158 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !154, file: !155, line: 1218, baseType: !159, size: 64, offset: 960)
!159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !160, size: 64)
!160 = !DICompositeType(tag: DW_TAG_structure_type, name: "AnimData", file: !161, line: 45, flags: DIFlagFwdDecl)
!161 = !DIFile(filename: "blender/source/blender/makesdna/DNA_texture_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!162 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !154, file: !155, line: 1220, baseType: !163, size: 64, offset: 1024)
!163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !164, size: 64)
!164 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Object", file: !165, line: 115, size: 11392, elements: !166)
!165 = !DIFile(filename: "blender/source/blender/makesdna/DNA_object_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!166 = !{!167, !168, !169, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !186, !198, !212, !213, !257, !258, !261, !262, !278, !279, !280, !281, !282, !283, !284, !1401, !1402, !1403, !1404, !1405, !1406, !1407, !1408, !1409, !1410, !1411, !1412, !1413, !1414, !1415, !1416, !1417, !1418, !1419, !1420, !1421, !1422, !1423, !1424, !1425, !1426, !1427, !1428, !1429, !1430, !1431, !1432, !1433, !1434, !1435, !1436, !1437, !1438, !1439, !1440, !1441, !1442, !1443, !1444, !1445, !1446, !1447, !1448, !1449, !1450, !1451, !1452, !1454, !1455, !1456, !1457, !1458, !1459, !1460, !1461, !1462, !1463, !1464, !1465, !1466, !1467, !1468, !1469, !1470, !1471, !1472, !1473, !1476, !1477, !1478, !1479, !1480, !1481, !1482, !1483, !1484, !1487, !1490, !1491, !1492, !1493, !1494, !1495, !1498, !1501, !1504, !1505, !1511, !1512, !1513, !1514, !1515, !1516, !1518, !1521, !1524, !1525, !1528, !1529}
!167 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !164, file: !165, line: 116, baseType: !113, size: 960)
!168 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !164, file: !165, line: 117, baseType: !159, size: 64, offset: 960)
!169 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt", scope: !164, file: !165, line: 119, baseType: !170, size: 64, offset: 1024)
!170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !171, size: 64)
!171 = !DICompositeType(tag: DW_TAG_structure_type, name: "SculptSession", file: !165, line: 57, flags: DIFlagFwdDecl)
!172 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !164, file: !165, line: 121, baseType: !48, size: 16, offset: 1088)
!173 = !DIDerivedType(tag: DW_TAG_member, name: "partype", scope: !164, file: !165, line: 121, baseType: !48, size: 16, offset: 1104)
!174 = !DIDerivedType(tag: DW_TAG_member, name: "par1", scope: !164, file: !165, line: 122, baseType: !22, size: 32, offset: 1120)
!175 = !DIDerivedType(tag: DW_TAG_member, name: "par2", scope: !164, file: !165, line: 122, baseType: !22, size: 32, offset: 1152)
!176 = !DIDerivedType(tag: DW_TAG_member, name: "par3", scope: !164, file: !165, line: 122, baseType: !22, size: 32, offset: 1184)
!177 = !DIDerivedType(tag: DW_TAG_member, name: "parsubstr", scope: !164, file: !165, line: 123, baseType: !33, size: 512, offset: 1216)
!178 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !164, file: !165, line: 124, baseType: !163, size: 64, offset: 1728)
!179 = !DIDerivedType(tag: DW_TAG_member, name: "track", scope: !164, file: !165, line: 124, baseType: !163, size: 64, offset: 1792)
!180 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !164, file: !165, line: 127, baseType: !163, size: 64, offset: 1856)
!181 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_group", scope: !164, file: !165, line: 127, baseType: !163, size: 64, offset: 1920)
!182 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_from", scope: !164, file: !165, line: 127, baseType: !163, size: 64, offset: 1984)
!183 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !164, file: !165, line: 128, baseType: !184, size: 64, offset: 2048)
!184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !185, size: 64)
!185 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ipo", file: !161, line: 46, flags: DIFlagFwdDecl)
!186 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !164, file: !165, line: 130, baseType: !187, size: 64, offset: 2112)
!187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !188, size: 64)
!188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BoundBox", file: !165, line: 97, size: 832, elements: !189)
!189 = !{!190, !196, !197}
!190 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !188, file: !165, line: 98, baseType: !191, size: 768)
!191 = !DICompositeType(tag: DW_TAG_array_type, baseType: !192, size: 768, elements: !193)
!192 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!193 = !{!194, !195}
!194 = !DISubrange(count: 8)
!195 = !DISubrange(count: 3)
!196 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !188, file: !165, line: 99, baseType: !22, size: 32, offset: 768)
!197 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !188, file: !165, line: 99, baseType: !22, size: 32, offset: 800)
!198 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !164, file: !165, line: 131, baseType: !199, size: 64, offset: 2176)
!199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !200, size: 64)
!200 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bAction", file: !201, line: 486, size: 1600, elements: !202)
!201 = !DIFile(filename: "blender/source/blender/makesdna/DNA_action_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!202 = !{!203, !204, !205, !206, !207, !208, !209, !210, !211}
!203 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !200, file: !201, line: 487, baseType: !113, size: 960)
!204 = !DIDerivedType(tag: DW_TAG_member, name: "curves", scope: !200, file: !201, line: 489, baseType: !58, size: 128, offset: 960)
!205 = !DIDerivedType(tag: DW_TAG_member, name: "chanbase", scope: !200, file: !201, line: 490, baseType: !58, size: 128, offset: 1088)
!206 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !200, file: !201, line: 491, baseType: !58, size: 128, offset: 1216)
!207 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !200, file: !201, line: 492, baseType: !58, size: 128, offset: 1344)
!208 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !200, file: !201, line: 494, baseType: !22, size: 32, offset: 1472)
!209 = !DIDerivedType(tag: DW_TAG_member, name: "active_marker", scope: !200, file: !201, line: 495, baseType: !22, size: 32, offset: 1504)
!210 = !DIDerivedType(tag: DW_TAG_member, name: "idroot", scope: !200, file: !201, line: 497, baseType: !22, size: 32, offset: 1536)
!211 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !200, file: !201, line: 498, baseType: !22, size: 32, offset: 1568)
!212 = !DIDerivedType(tag: DW_TAG_member, name: "poselib", scope: !164, file: !165, line: 132, baseType: !199, size: 64, offset: 2240)
!213 = !DIDerivedType(tag: DW_TAG_member, name: "pose", scope: !164, file: !165, line: 133, baseType: !214, size: 64, offset: 2304)
!214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !215, size: 64)
!215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bPose", file: !201, line: 334, size: 1728, elements: !216)
!216 = !{!217, !218, !221, !222, !223, !225, !226, !227, !230, !231, !232, !233, !234, !235, !236, !256}
!217 = !DIDerivedType(tag: DW_TAG_member, name: "chanbase", scope: !215, file: !201, line: 335, baseType: !58, size: 128)
!218 = !DIDerivedType(tag: DW_TAG_member, name: "chanhash", scope: !215, file: !201, line: 336, baseType: !219, size: 64, offset: 128)
!219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !220, size: 64)
!220 = !DICompositeType(tag: DW_TAG_structure_type, name: "GHash", file: !201, line: 47, flags: DIFlagFwdDecl)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !215, file: !201, line: 338, baseType: !48, size: 16, offset: 192)
!222 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !215, file: !201, line: 338, baseType: !48, size: 16, offset: 208)
!223 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_layer", scope: !215, file: !201, line: 339, baseType: !224, size: 32, offset: 224)
!224 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!225 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !215, file: !201, line: 340, baseType: !22, size: 32, offset: 256)
!226 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !215, file: !201, line: 342, baseType: !192, size: 32, offset: 288)
!227 = !DIDerivedType(tag: DW_TAG_member, name: "stride_offset", scope: !215, file: !201, line: 343, baseType: !228, size: 96, offset: 320)
!228 = !DICompositeType(tag: DW_TAG_array_type, baseType: !192, size: 96, elements: !229)
!229 = !{!195}
!230 = !DIDerivedType(tag: DW_TAG_member, name: "cyclic_offset", scope: !215, file: !201, line: 344, baseType: !228, size: 96, offset: 416)
!231 = !DIDerivedType(tag: DW_TAG_member, name: "agroups", scope: !215, file: !201, line: 347, baseType: !58, size: 128, offset: 512)
!232 = !DIDerivedType(tag: DW_TAG_member, name: "active_group", scope: !215, file: !201, line: 349, baseType: !22, size: 32, offset: 640)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "iksolver", scope: !215, file: !201, line: 350, baseType: !22, size: 32, offset: 672)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "ikdata", scope: !215, file: !201, line: 351, baseType: !56, size: 64, offset: 704)
!235 = !DIDerivedType(tag: DW_TAG_member, name: "ikparam", scope: !215, file: !201, line: 352, baseType: !56, size: 64, offset: 768)
!236 = !DIDerivedType(tag: DW_TAG_member, name: "avs", scope: !215, file: !201, line: 354, baseType: !237, size: 384, offset: 832)
!237 = !DIDerivedType(tag: DW_TAG_typedef, name: "bAnimVizSettings", file: !201, line: 116, baseType: !238)
!238 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bAnimVizSettings", file: !201, line: 94, size: 384, elements: !239)
!239 = !{!240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255}
!240 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_sf", scope: !238, file: !201, line: 96, baseType: !22, size: 32)
!241 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_ef", scope: !238, file: !201, line: 96, baseType: !22, size: 32, offset: 32)
!242 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_bc", scope: !238, file: !201, line: 97, baseType: !22, size: 32, offset: 64)
!243 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_ac", scope: !238, file: !201, line: 97, baseType: !22, size: 32, offset: 96)
!244 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_type", scope: !238, file: !201, line: 99, baseType: !48, size: 16, offset: 128)
!245 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_step", scope: !238, file: !201, line: 100, baseType: !48, size: 16, offset: 144)
!246 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_flag", scope: !238, file: !201, line: 102, baseType: !48, size: 16, offset: 160)
!247 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !238, file: !201, line: 105, baseType: !48, size: 16, offset: 176)
!248 = !DIDerivedType(tag: DW_TAG_member, name: "path_type", scope: !238, file: !201, line: 108, baseType: !48, size: 16, offset: 192)
!249 = !DIDerivedType(tag: DW_TAG_member, name: "path_step", scope: !238, file: !201, line: 109, baseType: !48, size: 16, offset: 208)
!250 = !DIDerivedType(tag: DW_TAG_member, name: "path_viewflag", scope: !238, file: !201, line: 111, baseType: !48, size: 16, offset: 224)
!251 = !DIDerivedType(tag: DW_TAG_member, name: "path_bakeflag", scope: !238, file: !201, line: 112, baseType: !48, size: 16, offset: 240)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "path_sf", scope: !238, file: !201, line: 114, baseType: !22, size: 32, offset: 256)
!253 = !DIDerivedType(tag: DW_TAG_member, name: "path_ef", scope: !238, file: !201, line: 114, baseType: !22, size: 32, offset: 288)
!254 = !DIDerivedType(tag: DW_TAG_member, name: "path_bc", scope: !238, file: !201, line: 115, baseType: !22, size: 32, offset: 320)
!255 = !DIDerivedType(tag: DW_TAG_member, name: "path_ac", scope: !238, file: !201, line: 115, baseType: !22, size: 32, offset: 352)
!256 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_act_bone", scope: !215, file: !201, line: 355, baseType: !33, size: 512, offset: 1216)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !164, file: !165, line: 134, baseType: !56, size: 64, offset: 2368)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !164, file: !165, line: 136, baseType: !259, size: 64, offset: 2432)
!259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !260, size: 64)
!260 = !DICompositeType(tag: DW_TAG_structure_type, name: "bGPdata", file: !165, line: 58, flags: DIFlagFwdDecl)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "avs", scope: !164, file: !165, line: 138, baseType: !237, size: 384, offset: 2496)
!262 = !DIDerivedType(tag: DW_TAG_member, name: "mpath", scope: !164, file: !165, line: 139, baseType: !263, size: 64, offset: 2880)
!263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !264, size: 64)
!264 = !DIDerivedType(tag: DW_TAG_typedef, name: "bMotionPath", file: !201, line: 80, baseType: !265)
!265 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bMotionPath", file: !201, line: 72, size: 192, elements: !266)
!266 = !{!267, !274, !275, !276, !277}
!267 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !265, file: !201, line: 73, baseType: !268, size: 64)
!268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !269, size: 64)
!269 = !DIDerivedType(tag: DW_TAG_typedef, name: "bMotionPathVert", file: !201, line: 59, baseType: !270)
!270 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bMotionPathVert", file: !201, line: 56, size: 128, elements: !271)
!271 = !{!272, !273}
!272 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !270, file: !201, line: 57, baseType: !228, size: 96)
!273 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !270, file: !201, line: 58, baseType: !22, size: 32, offset: 96)
!274 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !265, file: !201, line: 74, baseType: !22, size: 32, offset: 64)
!275 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !265, file: !201, line: 76, baseType: !22, size: 32, offset: 96)
!276 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !265, file: !201, line: 77, baseType: !22, size: 32, offset: 128)
!277 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !265, file: !201, line: 79, baseType: !22, size: 32, offset: 160)
!278 = !DIDerivedType(tag: DW_TAG_member, name: "constraintChannels", scope: !164, file: !165, line: 141, baseType: !58, size: 128, offset: 2944)
!279 = !DIDerivedType(tag: DW_TAG_member, name: "effect", scope: !164, file: !165, line: 142, baseType: !58, size: 128, offset: 3072)
!280 = !DIDerivedType(tag: DW_TAG_member, name: "defbase", scope: !164, file: !165, line: 143, baseType: !58, size: 128, offset: 3200)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers", scope: !164, file: !165, line: 144, baseType: !58, size: 128, offset: 3328)
!282 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !164, file: !165, line: 146, baseType: !22, size: 32, offset: 3456)
!283 = !DIDerivedType(tag: DW_TAG_member, name: "restore_mode", scope: !164, file: !165, line: 147, baseType: !22, size: 32, offset: 3488)
!284 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !164, file: !165, line: 150, baseType: !285, size: 64, offset: 3520)
!285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !286, size: 64)
!286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !287, size: 64)
!287 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Material", file: !288, line: 93, size: 7552, elements: !289)
!288 = !DIFile(filename: "blender/source/blender/makesdna/DNA_material_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!289 = !{!290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !338, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !407, !408, !409, !410, !411, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !1358, !1359, !1360, !1363, !1364, !1365, !1366, !1367, !1368, !1369, !1370, !1371, !1372, !1373, !1374, !1375, !1376, !1377, !1378, !1379, !1380, !1381, !1382, !1383, !1384, !1385, !1386, !1387, !1388, !1389, !1390, !1391, !1392, !1400}
!290 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !287, file: !288, line: 94, baseType: !113, size: 960)
!291 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !287, file: !288, line: 95, baseType: !159, size: 64, offset: 960)
!292 = !DIDerivedType(tag: DW_TAG_member, name: "material_type", scope: !287, file: !288, line: 97, baseType: !48, size: 16, offset: 1024)
!293 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !287, file: !288, line: 97, baseType: !48, size: 16, offset: 1040)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !287, file: !288, line: 99, baseType: !192, size: 32, offset: 1056)
!295 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !287, file: !288, line: 99, baseType: !192, size: 32, offset: 1088)
!296 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !287, file: !288, line: 99, baseType: !192, size: 32, offset: 1120)
!297 = !DIDerivedType(tag: DW_TAG_member, name: "specr", scope: !287, file: !288, line: 100, baseType: !192, size: 32, offset: 1152)
!298 = !DIDerivedType(tag: DW_TAG_member, name: "specg", scope: !287, file: !288, line: 100, baseType: !192, size: 32, offset: 1184)
!299 = !DIDerivedType(tag: DW_TAG_member, name: "specb", scope: !287, file: !288, line: 100, baseType: !192, size: 32, offset: 1216)
!300 = !DIDerivedType(tag: DW_TAG_member, name: "mirr", scope: !287, file: !288, line: 101, baseType: !192, size: 32, offset: 1248)
!301 = !DIDerivedType(tag: DW_TAG_member, name: "mirg", scope: !287, file: !288, line: 101, baseType: !192, size: 32, offset: 1280)
!302 = !DIDerivedType(tag: DW_TAG_member, name: "mirb", scope: !287, file: !288, line: 101, baseType: !192, size: 32, offset: 1312)
!303 = !DIDerivedType(tag: DW_TAG_member, name: "ambr", scope: !287, file: !288, line: 102, baseType: !192, size: 32, offset: 1344)
!304 = !DIDerivedType(tag: DW_TAG_member, name: "ambb", scope: !287, file: !288, line: 102, baseType: !192, size: 32, offset: 1376)
!305 = !DIDerivedType(tag: DW_TAG_member, name: "ambg", scope: !287, file: !288, line: 102, baseType: !192, size: 32, offset: 1408)
!306 = !DIDerivedType(tag: DW_TAG_member, name: "amb", scope: !287, file: !288, line: 103, baseType: !192, size: 32, offset: 1440)
!307 = !DIDerivedType(tag: DW_TAG_member, name: "emit", scope: !287, file: !288, line: 103, baseType: !192, size: 32, offset: 1472)
!308 = !DIDerivedType(tag: DW_TAG_member, name: "ang", scope: !287, file: !288, line: 103, baseType: !192, size: 32, offset: 1504)
!309 = !DIDerivedType(tag: DW_TAG_member, name: "spectra", scope: !287, file: !288, line: 103, baseType: !192, size: 32, offset: 1536)
!310 = !DIDerivedType(tag: DW_TAG_member, name: "ray_mirror", scope: !287, file: !288, line: 103, baseType: !192, size: 32, offset: 1568)
!311 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !287, file: !288, line: 104, baseType: !192, size: 32, offset: 1600)
!312 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !287, file: !288, line: 104, baseType: !192, size: 32, offset: 1632)
!313 = !DIDerivedType(tag: DW_TAG_member, name: "spec", scope: !287, file: !288, line: 104, baseType: !192, size: 32, offset: 1664)
!314 = !DIDerivedType(tag: DW_TAG_member, name: "zoffs", scope: !287, file: !288, line: 104, baseType: !192, size: 32, offset: 1696)
!315 = !DIDerivedType(tag: DW_TAG_member, name: "add", scope: !287, file: !288, line: 104, baseType: !192, size: 32, offset: 1728)
!316 = !DIDerivedType(tag: DW_TAG_member, name: "translucency", scope: !287, file: !288, line: 105, baseType: !192, size: 32, offset: 1760)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "vol", scope: !287, file: !288, line: 108, baseType: !318, size: 704, offset: 1792)
!318 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VolumeSettings", file: !288, line: 53, size: 704, elements: !319)
!319 = !{!320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337}
!320 = !DIDerivedType(tag: DW_TAG_member, name: "density", scope: !318, file: !288, line: 54, baseType: !192, size: 32)
!321 = !DIDerivedType(tag: DW_TAG_member, name: "emission", scope: !318, file: !288, line: 55, baseType: !192, size: 32, offset: 32)
!322 = !DIDerivedType(tag: DW_TAG_member, name: "scattering", scope: !318, file: !288, line: 56, baseType: !192, size: 32, offset: 64)
!323 = !DIDerivedType(tag: DW_TAG_member, name: "reflection", scope: !318, file: !288, line: 57, baseType: !192, size: 32, offset: 96)
!324 = !DIDerivedType(tag: DW_TAG_member, name: "emission_col", scope: !318, file: !288, line: 59, baseType: !228, size: 96, offset: 128)
!325 = !DIDerivedType(tag: DW_TAG_member, name: "transmission_col", scope: !318, file: !288, line: 60, baseType: !228, size: 96, offset: 224)
!326 = !DIDerivedType(tag: DW_TAG_member, name: "reflection_col", scope: !318, file: !288, line: 61, baseType: !228, size: 96, offset: 320)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "density_scale", scope: !318, file: !288, line: 63, baseType: !192, size: 32, offset: 416)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "depth_cutoff", scope: !318, file: !288, line: 64, baseType: !192, size: 32, offset: 448)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "asymmetry", scope: !318, file: !288, line: 65, baseType: !192, size: 32, offset: 480)
!330 = !DIDerivedType(tag: DW_TAG_member, name: "stepsize_type", scope: !318, file: !288, line: 67, baseType: !48, size: 16, offset: 512)
!331 = !DIDerivedType(tag: DW_TAG_member, name: "shadeflag", scope: !318, file: !288, line: 68, baseType: !48, size: 16, offset: 528)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "shade_type", scope: !318, file: !288, line: 69, baseType: !48, size: 16, offset: 544)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "precache_resolution", scope: !318, file: !288, line: 70, baseType: !48, size: 16, offset: 560)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "stepsize", scope: !318, file: !288, line: 72, baseType: !192, size: 32, offset: 576)
!335 = !DIDerivedType(tag: DW_TAG_member, name: "ms_diff", scope: !318, file: !288, line: 73, baseType: !192, size: 32, offset: 608)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "ms_intensity", scope: !318, file: !288, line: 74, baseType: !192, size: 32, offset: 640)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "ms_spread", scope: !318, file: !288, line: 75, baseType: !192, size: 32, offset: 672)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "game", scope: !287, file: !288, line: 109, baseType: !339, size: 128, offset: 2496)
!339 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameSettings", file: !288, line: 79, size: 128, elements: !340)
!340 = !{!341, !342, !343, !344}
!341 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !339, file: !288, line: 80, baseType: !22, size: 32)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_blend", scope: !339, file: !288, line: 81, baseType: !22, size: 32, offset: 32)
!343 = !DIDerivedType(tag: DW_TAG_member, name: "face_orientation", scope: !339, file: !288, line: 82, baseType: !22, size: 32, offset: 64)
!344 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !339, file: !288, line: 83, baseType: !22, size: 32, offset: 96)
!345 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_mir", scope: !287, file: !288, line: 111, baseType: !192, size: 32, offset: 2624)
!346 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_mir_i", scope: !287, file: !288, line: 111, baseType: !192, size: 32, offset: 2656)
!347 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_tra", scope: !287, file: !288, line: 112, baseType: !192, size: 32, offset: 2688)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_tra_i", scope: !287, file: !288, line: 112, baseType: !192, size: 32, offset: 2720)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !287, file: !288, line: 113, baseType: !192, size: 32, offset: 2752)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "tx_limit", scope: !287, file: !288, line: 114, baseType: !192, size: 32, offset: 2784)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "tx_falloff", scope: !287, file: !288, line: 114, baseType: !192, size: 32, offset: 2816)
!352 = !DIDerivedType(tag: DW_TAG_member, name: "ray_depth", scope: !287, file: !288, line: 115, baseType: !48, size: 16, offset: 2848)
!353 = !DIDerivedType(tag: DW_TAG_member, name: "ray_depth_tra", scope: !287, file: !288, line: 115, baseType: !48, size: 16, offset: 2864)
!354 = !DIDerivedType(tag: DW_TAG_member, name: "har", scope: !287, file: !288, line: 116, baseType: !48, size: 16, offset: 2880)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "seed1", scope: !287, file: !288, line: 117, baseType: !14, size: 8, offset: 2896)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "seed2", scope: !287, file: !288, line: 117, baseType: !14, size: 8, offset: 2904)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "gloss_mir", scope: !287, file: !288, line: 119, baseType: !192, size: 32, offset: 2912)
!358 = !DIDerivedType(tag: DW_TAG_member, name: "gloss_tra", scope: !287, file: !288, line: 119, baseType: !192, size: 32, offset: 2944)
!359 = !DIDerivedType(tag: DW_TAG_member, name: "samp_gloss_mir", scope: !287, file: !288, line: 120, baseType: !48, size: 16, offset: 2976)
!360 = !DIDerivedType(tag: DW_TAG_member, name: "samp_gloss_tra", scope: !287, file: !288, line: 120, baseType: !48, size: 16, offset: 2992)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "adapt_thresh_mir", scope: !287, file: !288, line: 121, baseType: !192, size: 32, offset: 3008)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "adapt_thresh_tra", scope: !287, file: !288, line: 121, baseType: !192, size: 32, offset: 3040)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "aniso_gloss_mir", scope: !287, file: !288, line: 122, baseType: !192, size: 32, offset: 3072)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "dist_mir", scope: !287, file: !288, line: 123, baseType: !192, size: 32, offset: 3104)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "fadeto_mir", scope: !287, file: !288, line: 124, baseType: !48, size: 16, offset: 3136)
!366 = !DIDerivedType(tag: DW_TAG_member, name: "shade_flag", scope: !287, file: !288, line: 125, baseType: !48, size: 16, offset: 3152)
!367 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !287, file: !288, line: 127, baseType: !22, size: 32, offset: 3168)
!368 = !DIDerivedType(tag: DW_TAG_member, name: "mode_l", scope: !287, file: !288, line: 127, baseType: !22, size: 32, offset: 3200)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "mode2", scope: !287, file: !288, line: 128, baseType: !22, size: 32, offset: 3232)
!370 = !DIDerivedType(tag: DW_TAG_member, name: "mode2_l", scope: !287, file: !288, line: 128, baseType: !22, size: 32, offset: 3264)
!371 = !DIDerivedType(tag: DW_TAG_member, name: "flarec", scope: !287, file: !288, line: 129, baseType: !48, size: 16, offset: 3296)
!372 = !DIDerivedType(tag: DW_TAG_member, name: "starc", scope: !287, file: !288, line: 129, baseType: !48, size: 16, offset: 3312)
!373 = !DIDerivedType(tag: DW_TAG_member, name: "linec", scope: !287, file: !288, line: 129, baseType: !48, size: 16, offset: 3328)
!374 = !DIDerivedType(tag: DW_TAG_member, name: "ringc", scope: !287, file: !288, line: 129, baseType: !48, size: 16, offset: 3344)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "hasize", scope: !287, file: !288, line: 130, baseType: !192, size: 32, offset: 3360)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "flaresize", scope: !287, file: !288, line: 130, baseType: !192, size: 32, offset: 3392)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "subsize", scope: !287, file: !288, line: 130, baseType: !192, size: 32, offset: 3424)
!378 = !DIDerivedType(tag: DW_TAG_member, name: "flareboost", scope: !287, file: !288, line: 130, baseType: !192, size: 32, offset: 3456)
!379 = !DIDerivedType(tag: DW_TAG_member, name: "strand_sta", scope: !287, file: !288, line: 131, baseType: !192, size: 32, offset: 3488)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "strand_end", scope: !287, file: !288, line: 131, baseType: !192, size: 32, offset: 3520)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "strand_ease", scope: !287, file: !288, line: 131, baseType: !192, size: 32, offset: 3552)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "strand_surfnor", scope: !287, file: !288, line: 131, baseType: !192, size: 32, offset: 3584)
!383 = !DIDerivedType(tag: DW_TAG_member, name: "strand_min", scope: !287, file: !288, line: 132, baseType: !192, size: 32, offset: 3616)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "strand_widthfade", scope: !287, file: !288, line: 132, baseType: !192, size: 32, offset: 3648)
!385 = !DIDerivedType(tag: DW_TAG_member, name: "strand_uvname", scope: !287, file: !288, line: 133, baseType: !33, size: 512, offset: 3680)
!386 = !DIDerivedType(tag: DW_TAG_member, name: "sbias", scope: !287, file: !288, line: 135, baseType: !192, size: 32, offset: 4192)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "lbias", scope: !287, file: !288, line: 136, baseType: !192, size: 32, offset: 4224)
!388 = !DIDerivedType(tag: DW_TAG_member, name: "shad_alpha", scope: !287, file: !288, line: 137, baseType: !192, size: 32, offset: 4256)
!389 = !DIDerivedType(tag: DW_TAG_member, name: "septex", scope: !287, file: !288, line: 138, baseType: !22, size: 32, offset: 4288)
!390 = !DIDerivedType(tag: DW_TAG_member, name: "rgbsel", scope: !287, file: !288, line: 141, baseType: !14, size: 8, offset: 4320)
!391 = !DIDerivedType(tag: DW_TAG_member, name: "texact", scope: !287, file: !288, line: 141, baseType: !14, size: 8, offset: 4328)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "pr_type", scope: !287, file: !288, line: 141, baseType: !14, size: 8, offset: 4336)
!393 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !287, file: !288, line: 141, baseType: !14, size: 8, offset: 4344)
!394 = !DIDerivedType(tag: DW_TAG_member, name: "pr_lamp", scope: !287, file: !288, line: 142, baseType: !48, size: 16, offset: 4352)
!395 = !DIDerivedType(tag: DW_TAG_member, name: "pr_texture", scope: !287, file: !288, line: 142, baseType: !48, size: 16, offset: 4368)
!396 = !DIDerivedType(tag: DW_TAG_member, name: "ml_flag", scope: !287, file: !288, line: 142, baseType: !48, size: 16, offset: 4384)
!397 = !DIDerivedType(tag: DW_TAG_member, name: "mapflag", scope: !287, file: !288, line: 145, baseType: !14, size: 8, offset: 4400)
!398 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !287, file: !288, line: 145, baseType: !14, size: 8, offset: 4408)
!399 = !DIDerivedType(tag: DW_TAG_member, name: "diff_shader", scope: !287, file: !288, line: 148, baseType: !48, size: 16, offset: 4416)
!400 = !DIDerivedType(tag: DW_TAG_member, name: "spec_shader", scope: !287, file: !288, line: 148, baseType: !48, size: 16, offset: 4432)
!401 = !DIDerivedType(tag: DW_TAG_member, name: "roughness", scope: !287, file: !288, line: 149, baseType: !192, size: 32, offset: 4448)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "refrac", scope: !287, file: !288, line: 149, baseType: !192, size: 32, offset: 4480)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !287, file: !288, line: 152, baseType: !404, size: 128, offset: 4512)
!404 = !DICompositeType(tag: DW_TAG_array_type, baseType: !192, size: 128, elements: !405)
!405 = !{!406}
!406 = !DISubrange(count: 4)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "rms", scope: !287, file: !288, line: 153, baseType: !192, size: 32, offset: 4640)
!408 = !DIDerivedType(tag: DW_TAG_member, name: "darkness", scope: !287, file: !288, line: 154, baseType: !192, size: 32, offset: 4672)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "texco", scope: !287, file: !288, line: 157, baseType: !48, size: 16, offset: 4704)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "mapto", scope: !287, file: !288, line: 157, baseType: !48, size: 16, offset: 4720)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "ramp_col", scope: !287, file: !288, line: 160, baseType: !412, size: 64, offset: 4736)
!412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !413, size: 64)
!413 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorBand", file: !161, line: 113, size: 6208, elements: !414)
!414 = !{!415, !416, !417, !418, !419, !420, !424}
!415 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !413, file: !161, line: 114, baseType: !48, size: 16)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !413, file: !161, line: 114, baseType: !48, size: 16, offset: 16)
!417 = !DIDerivedType(tag: DW_TAG_member, name: "ipotype", scope: !413, file: !161, line: 115, baseType: !14, size: 8, offset: 32)
!418 = !DIDerivedType(tag: DW_TAG_member, name: "ipotype_hue", scope: !413, file: !161, line: 115, baseType: !14, size: 8, offset: 40)
!419 = !DIDerivedType(tag: DW_TAG_member, name: "color_mode", scope: !413, file: !161, line: 116, baseType: !14, size: 8, offset: 48)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !413, file: !161, line: 117, baseType: !421, size: 8, offset: 56)
!421 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 8, elements: !422)
!422 = !{!423}
!423 = !DISubrange(count: 1)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !413, file: !161, line: 119, baseType: !425, size: 6144, offset: 64)
!425 = !DICompositeType(tag: DW_TAG_array_type, baseType: !426, size: 6144, elements: !435)
!426 = !DIDerivedType(tag: DW_TAG_typedef, name: "CBData", file: !161, line: 109, baseType: !427)
!427 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CBData", file: !161, line: 106, size: 192, elements: !428)
!428 = !{!429, !430, !431, !432, !433, !434}
!429 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !427, file: !161, line: 107, baseType: !192, size: 32)
!430 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !427, file: !161, line: 107, baseType: !192, size: 32, offset: 32)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !427, file: !161, line: 107, baseType: !192, size: 32, offset: 64)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !427, file: !161, line: 107, baseType: !192, size: 32, offset: 96)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !427, file: !161, line: 107, baseType: !192, size: 32, offset: 128)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !427, file: !161, line: 108, baseType: !22, size: 32, offset: 160)
!435 = !{!436}
!436 = !DISubrange(count: 32)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "ramp_spec", scope: !287, file: !288, line: 161, baseType: !412, size: 64, offset: 4800)
!438 = !DIDerivedType(tag: DW_TAG_member, name: "rampin_col", scope: !287, file: !288, line: 162, baseType: !14, size: 8, offset: 4864)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "rampin_spec", scope: !287, file: !288, line: 162, baseType: !14, size: 8, offset: 4872)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "rampblend_col", scope: !287, file: !288, line: 163, baseType: !14, size: 8, offset: 4880)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "rampblend_spec", scope: !287, file: !288, line: 163, baseType: !14, size: 8, offset: 4888)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "ramp_show", scope: !287, file: !288, line: 164, baseType: !48, size: 16, offset: 4896)
!443 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !287, file: !288, line: 164, baseType: !48, size: 16, offset: 4912)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "rampfac_col", scope: !287, file: !288, line: 165, baseType: !192, size: 32, offset: 4928)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "rampfac_spec", scope: !287, file: !288, line: 165, baseType: !192, size: 32, offset: 4960)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "mtex", scope: !287, file: !288, line: 167, baseType: !447, size: 1152, offset: 4992)
!447 = !DICompositeType(tag: DW_TAG_array_type, baseType: !448, size: 1152, elements: !1356)
!448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !449, size: 64)
!449 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MTex", file: !161, line: 57, size: 2496, elements: !450)
!450 = !{!451, !452, !453, !454, !455, !456, !1297, !1298, !1299, !1300, !1301, !1302, !1303, !1304, !1305, !1306, !1307, !1308, !1309, !1310, !1311, !1312, !1313, !1314, !1315, !1316, !1317, !1318, !1319, !1320, !1321, !1322, !1323, !1324, !1325, !1326, !1327, !1328, !1329, !1330, !1331, !1332, !1333, !1334, !1335, !1336, !1337, !1338, !1339, !1340, !1341, !1342, !1343, !1344, !1345, !1346, !1347, !1348, !1349, !1350, !1351, !1352, !1353, !1354, !1355}
!451 = !DIDerivedType(tag: DW_TAG_member, name: "texco", scope: !449, file: !161, line: 59, baseType: !48, size: 16)
!452 = !DIDerivedType(tag: DW_TAG_member, name: "mapto", scope: !449, file: !161, line: 59, baseType: !48, size: 16, offset: 16)
!453 = !DIDerivedType(tag: DW_TAG_member, name: "maptoneg", scope: !449, file: !161, line: 59, baseType: !48, size: 16, offset: 32)
!454 = !DIDerivedType(tag: DW_TAG_member, name: "blendtype", scope: !449, file: !161, line: 59, baseType: !48, size: 16, offset: 48)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !449, file: !161, line: 60, baseType: !163, size: 64, offset: 64)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "tex", scope: !449, file: !161, line: 61, baseType: !457, size: 64, offset: 128)
!457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !458, size: 64)
!458 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Tex", file: !161, line: 202, size: 3328, elements: !459)
!459 = !{!460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !529, !1089, !1090, !1168, !1169, !1197, !1198, !1266, !1287, !1295, !1296}
!460 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !458, file: !161, line: 203, baseType: !113, size: 960)
!461 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !458, file: !161, line: 204, baseType: !159, size: 64, offset: 960)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "noisesize", scope: !458, file: !161, line: 206, baseType: !192, size: 32, offset: 1024)
!463 = !DIDerivedType(tag: DW_TAG_member, name: "turbul", scope: !458, file: !161, line: 206, baseType: !192, size: 32, offset: 1056)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "bright", scope: !458, file: !161, line: 207, baseType: !192, size: 32, offset: 1088)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "contrast", scope: !458, file: !161, line: 207, baseType: !192, size: 32, offset: 1120)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "saturation", scope: !458, file: !161, line: 207, baseType: !192, size: 32, offset: 1152)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "rfac", scope: !458, file: !161, line: 207, baseType: !192, size: 32, offset: 1184)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "gfac", scope: !458, file: !161, line: 207, baseType: !192, size: 32, offset: 1216)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "bfac", scope: !458, file: !161, line: 207, baseType: !192, size: 32, offset: 1248)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "filtersize", scope: !458, file: !161, line: 208, baseType: !192, size: 32, offset: 1280)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !458, file: !161, line: 208, baseType: !192, size: 32, offset: 1312)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "mg_H", scope: !458, file: !161, line: 211, baseType: !192, size: 32, offset: 1344)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "mg_lacunarity", scope: !458, file: !161, line: 211, baseType: !192, size: 32, offset: 1376)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "mg_octaves", scope: !458, file: !161, line: 211, baseType: !192, size: 32, offset: 1408)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "mg_offset", scope: !458, file: !161, line: 211, baseType: !192, size: 32, offset: 1440)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "mg_gain", scope: !458, file: !161, line: 211, baseType: !192, size: 32, offset: 1472)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "dist_amount", scope: !458, file: !161, line: 214, baseType: !192, size: 32, offset: 1504)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "ns_outscale", scope: !458, file: !161, line: 214, baseType: !192, size: 32, offset: 1536)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w1", scope: !458, file: !161, line: 217, baseType: !192, size: 32, offset: 1568)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w2", scope: !458, file: !161, line: 218, baseType: !192, size: 32, offset: 1600)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w3", scope: !458, file: !161, line: 219, baseType: !192, size: 32, offset: 1632)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w4", scope: !458, file: !161, line: 220, baseType: !192, size: 32, offset: 1664)
!483 = !DIDerivedType(tag: DW_TAG_member, name: "vn_mexp", scope: !458, file: !161, line: 221, baseType: !192, size: 32, offset: 1696)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "vn_distm", scope: !458, file: !161, line: 222, baseType: !48, size: 16, offset: 1728)
!485 = !DIDerivedType(tag: DW_TAG_member, name: "vn_coltype", scope: !458, file: !161, line: 222, baseType: !48, size: 16, offset: 1744)
!486 = !DIDerivedType(tag: DW_TAG_member, name: "noisedepth", scope: !458, file: !161, line: 224, baseType: !48, size: 16, offset: 1760)
!487 = !DIDerivedType(tag: DW_TAG_member, name: "noisetype", scope: !458, file: !161, line: 224, baseType: !48, size: 16, offset: 1776)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "noisebasis", scope: !458, file: !161, line: 227, baseType: !48, size: 16, offset: 1792)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "noisebasis2", scope: !458, file: !161, line: 227, baseType: !48, size: 16, offset: 1808)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "imaflag", scope: !458, file: !161, line: 229, baseType: !48, size: 16, offset: 1824)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !458, file: !161, line: 229, baseType: !48, size: 16, offset: 1840)
!492 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !458, file: !161, line: 230, baseType: !48, size: 16, offset: 1856)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "stype", scope: !458, file: !161, line: 230, baseType: !48, size: 16, offset: 1872)
!494 = !DIDerivedType(tag: DW_TAG_member, name: "cropxmin", scope: !458, file: !161, line: 232, baseType: !192, size: 32, offset: 1888)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "cropymin", scope: !458, file: !161, line: 232, baseType: !192, size: 32, offset: 1920)
!496 = !DIDerivedType(tag: DW_TAG_member, name: "cropxmax", scope: !458, file: !161, line: 232, baseType: !192, size: 32, offset: 1952)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "cropymax", scope: !458, file: !161, line: 232, baseType: !192, size: 32, offset: 1984)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "texfilter", scope: !458, file: !161, line: 233, baseType: !22, size: 32, offset: 2016)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "afmax", scope: !458, file: !161, line: 234, baseType: !22, size: 32, offset: 2048)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "xrepeat", scope: !458, file: !161, line: 235, baseType: !48, size: 16, offset: 2080)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "yrepeat", scope: !458, file: !161, line: 235, baseType: !48, size: 16, offset: 2096)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "extend", scope: !458, file: !161, line: 236, baseType: !48, size: 16, offset: 2112)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "fie_ima", scope: !458, file: !161, line: 239, baseType: !48, size: 16, offset: 2128)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !458, file: !161, line: 240, baseType: !22, size: 32, offset: 2144)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "frames", scope: !458, file: !161, line: 241, baseType: !22, size: 32, offset: 2176)
!506 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !458, file: !161, line: 241, baseType: !22, size: 32, offset: 2208)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !458, file: !161, line: 241, baseType: !22, size: 32, offset: 2240)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "checkerdist", scope: !458, file: !161, line: 243, baseType: !192, size: 32, offset: 2272)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "nabla", scope: !458, file: !161, line: 243, baseType: !192, size: 32, offset: 2304)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !458, file: !161, line: 244, baseType: !192, size: 32, offset: 2336)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "iuser", scope: !458, file: !161, line: 246, baseType: !512, size: 320, offset: 2368)
!512 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageUser", file: !513, line: 50, size: 320, elements: !514)
!513 = !DIFile(filename: "blender/source/blender/makesdna/DNA_image_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!514 = !{!515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528}
!515 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !512, file: !513, line: 51, baseType: !153, size: 64)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !512, file: !513, line: 53, baseType: !22, size: 32, offset: 64)
!517 = !DIDerivedType(tag: DW_TAG_member, name: "frames", scope: !512, file: !513, line: 54, baseType: !22, size: 32, offset: 96)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !512, file: !513, line: 55, baseType: !22, size: 32, offset: 128)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !512, file: !513, line: 55, baseType: !22, size: 32, offset: 160)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "fie_ima", scope: !512, file: !513, line: 56, baseType: !14, size: 8, offset: 192)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "cycl", scope: !512, file: !513, line: 56, baseType: !14, size: 8, offset: 200)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !512, file: !513, line: 57, baseType: !14, size: 8, offset: 208)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !512, file: !513, line: 57, baseType: !14, size: 8, offset: 216)
!524 = !DIDerivedType(tag: DW_TAG_member, name: "multi_index", scope: !512, file: !513, line: 59, baseType: !48, size: 16, offset: 224)
!525 = !DIDerivedType(tag: DW_TAG_member, name: "layer", scope: !512, file: !513, line: 59, baseType: !48, size: 16, offset: 240)
!526 = !DIDerivedType(tag: DW_TAG_member, name: "pass", scope: !512, file: !513, line: 59, baseType: !48, size: 16, offset: 256)
!527 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !512, file: !513, line: 61, baseType: !48, size: 16, offset: 272)
!528 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !512, file: !513, line: 63, baseType: !22, size: 32, offset: 288)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !458, file: !161, line: 248, baseType: !530, size: 64, offset: 2688)
!530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !531, size: 64)
!531 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTree", file: !83, line: 328, size: 3456, elements: !532)
!532 = !{!533, !534, !535, !1038, !1039, !1040, !1041, !1042, !1043, !1044, !1045, !1046, !1047, !1048, !1049, !1050, !1051, !1052, !1053, !1054, !1055, !1056, !1057, !1058, !1059, !1067, !1068, !1069, !1072, !1076, !1080, !1084, !1085, !1086, !1087, !1088}
!533 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !531, file: !83, line: 329, baseType: !113, size: 960)
!534 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !531, file: !83, line: 330, baseType: !159, size: 64, offset: 960)
!535 = !DIDerivedType(tag: DW_TAG_member, name: "typeinfo", scope: !531, file: !83, line: 332, baseType: !536, size: 64, offset: 1024)
!536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !537, size: 64)
!537 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTreeType", file: !538, line: 283, size: 4096, elements: !539)
!538 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_node.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!539 = !{!540, !541, !542, !543, !547, !548, !552, !1007, !1015, !1019, !1025, !1029, !1030, !1031, !1032, !1036, !1037}
!540 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !537, file: !538, line: 284, baseType: !22, size: 32)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !537, file: !538, line: 285, baseType: !33, size: 512, offset: 32)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "ui_name", scope: !537, file: !538, line: 287, baseType: !33, size: 512, offset: 544)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "ui_description", scope: !537, file: !538, line: 288, baseType: !544, size: 2048, offset: 1056)
!544 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 2048, elements: !545)
!545 = !{!546}
!546 = !DISubrange(count: 256)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "ui_icon", scope: !537, file: !538, line: 289, baseType: !22, size: 32, offset: 3104)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "free_cache", scope: !537, file: !538, line: 292, baseType: !549, size: 64, offset: 3136)
!549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !550, size: 64)
!550 = !DISubroutineType(types: !551)
!551 = !{null, !530}
!552 = !DIDerivedType(tag: DW_TAG_member, name: "free_node_cache", scope: !537, file: !538, line: 293, baseType: !553, size: 64, offset: 3200)
!553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !554, size: 64)
!554 = !DISubroutineType(types: !555)
!555 = !{null, !530, !556}
!556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !557, size: 64)
!557 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNode", file: !83, line: 167, size: 3712, elements: !558)
!558 = !{!559, !560, !561, !562, !563, !963, !964, !965, !966, !967, !968, !969, !970, !971, !972, !973, !974, !975, !976, !977, !978, !979, !980, !981, !982, !983, !984, !985, !986, !987, !988, !989, !990, !991, !992, !993, !994, !995, !996, !997, !998, !999, !1000, !1001, !1002, !1003, !1004}
!559 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !557, file: !83, line: 168, baseType: !556, size: 64)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !557, file: !83, line: 168, baseType: !556, size: 64, offset: 64)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "new_node", scope: !557, file: !83, line: 168, baseType: !556, size: 64, offset: 128)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !557, file: !83, line: 170, baseType: !37, size: 64, offset: 192)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "typeinfo", scope: !557, file: !83, line: 172, baseType: !564, size: 64, offset: 256)
!564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !565, size: 64)
!565 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeType", file: !538, line: 144, size: 6016, elements: !566)
!566 = !{!567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !730, !731, !732, !874, !878, !882, !883, !890, !894, !898, !899, !900, !901, !905, !906, !910, !914, !918, !922, !926, !930, !934, !935, !942, !944, !953, !962}
!567 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !565, file: !538, line: 145, baseType: !56, size: 64)
!568 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !565, file: !538, line: 145, baseType: !56, size: 64, offset: 64)
!569 = !DIDerivedType(tag: DW_TAG_member, name: "needs_free", scope: !565, file: !538, line: 146, baseType: !48, size: 16, offset: 128)
!570 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !565, file: !538, line: 148, baseType: !33, size: 512, offset: 144)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !565, file: !538, line: 149, baseType: !22, size: 32, offset: 672)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "ui_name", scope: !565, file: !538, line: 151, baseType: !33, size: 512, offset: 704)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "ui_description", scope: !565, file: !538, line: 152, baseType: !544, size: 2048, offset: 1216)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "ui_icon", scope: !565, file: !538, line: 153, baseType: !22, size: 32, offset: 3264)
!575 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !565, file: !538, line: 155, baseType: !192, size: 32, offset: 3296)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "minwidth", scope: !565, file: !538, line: 155, baseType: !192, size: 32, offset: 3328)
!577 = !DIDerivedType(tag: DW_TAG_member, name: "maxwidth", scope: !565, file: !538, line: 155, baseType: !192, size: 32, offset: 3360)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !565, file: !538, line: 156, baseType: !192, size: 32, offset: 3392)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "minheight", scope: !565, file: !538, line: 156, baseType: !192, size: 32, offset: 3424)
!580 = !DIDerivedType(tag: DW_TAG_member, name: "maxheight", scope: !565, file: !538, line: 156, baseType: !192, size: 32, offset: 3456)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "nclass", scope: !565, file: !538, line: 157, baseType: !48, size: 16, offset: 3488)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !565, file: !538, line: 157, baseType: !48, size: 16, offset: 3504)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "compatibility", scope: !565, file: !538, line: 157, baseType: !48, size: 16, offset: 3520)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "inputs", scope: !565, file: !538, line: 160, baseType: !585, size: 64, offset: 3584)
!585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !586, size: 64)
!586 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeSocketTemplate", file: !538, line: 109, baseType: !587)
!587 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeSocketTemplate", file: !538, line: 98, size: 1408, elements: !588)
!588 = !{!589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !729}
!589 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !587, file: !538, line: 99, baseType: !22, size: 32)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !587, file: !538, line: 99, baseType: !22, size: 32, offset: 32)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !587, file: !538, line: 100, baseType: !33, size: 512, offset: 64)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "val1", scope: !587, file: !538, line: 101, baseType: !192, size: 32, offset: 576)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "val2", scope: !587, file: !538, line: 101, baseType: !192, size: 32, offset: 608)
!594 = !DIDerivedType(tag: DW_TAG_member, name: "val3", scope: !587, file: !538, line: 101, baseType: !192, size: 32, offset: 640)
!595 = !DIDerivedType(tag: DW_TAG_member, name: "val4", scope: !587, file: !538, line: 101, baseType: !192, size: 32, offset: 672)
!596 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !587, file: !538, line: 102, baseType: !192, size: 32, offset: 704)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !587, file: !538, line: 102, baseType: !192, size: 32, offset: 736)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !587, file: !538, line: 103, baseType: !22, size: 32, offset: 768)
!599 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !587, file: !538, line: 104, baseType: !22, size: 32, offset: 800)
!600 = !DIDerivedType(tag: DW_TAG_member, name: "sock", scope: !587, file: !538, line: 107, baseType: !601, size: 64, offset: 832)
!601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !602, size: 64)
!602 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeSocket", file: !83, line: 87, size: 2816, elements: !603)
!603 = !{!604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693, !694, !695, !711}
!604 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !602, file: !83, line: 88, baseType: !601, size: 64)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !602, file: !83, line: 88, baseType: !601, size: 64, offset: 64)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "new_sock", scope: !602, file: !83, line: 88, baseType: !601, size: 64, offset: 128)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !602, file: !83, line: 90, baseType: !37, size: 64, offset: 192)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !602, file: !83, line: 92, baseType: !33, size: 512, offset: 256)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !602, file: !83, line: 94, baseType: !33, size: 512, offset: 768)
!610 = !DIDerivedType(tag: DW_TAG_member, name: "storage", scope: !602, file: !83, line: 99, baseType: !56, size: 64, offset: 1280)
!611 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !602, file: !83, line: 101, baseType: !48, size: 16, offset: 1344)
!612 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !602, file: !83, line: 101, baseType: !48, size: 16, offset: 1360)
!613 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !602, file: !83, line: 102, baseType: !48, size: 16, offset: 1376)
!614 = !DIDerivedType(tag: DW_TAG_member, name: "in_out", scope: !602, file: !83, line: 103, baseType: !48, size: 16, offset: 1392)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "typeinfo", scope: !602, file: !83, line: 104, baseType: !616, size: 64, offset: 1408)
!616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !617, size: 64)
!617 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeSocketType", file: !538, line: 114, size: 1600, elements: !618)
!618 = !{!619, !620, !626, !631, !635, !639, !643, !647, !648, !652, !681, !682, !683}
!619 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !617, file: !538, line: 115, baseType: !33, size: 512)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "draw", scope: !617, file: !538, line: 117, baseType: !621, size: 64, offset: 512)
!621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !622, size: 64)
!622 = !DISubroutineType(types: !623)
!623 = !{null, !23, !624, !73, !73, !12}
!624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !625, size: 64)
!625 = !DICompositeType(tag: DW_TAG_structure_type, name: "uiLayout", file: !538, line: 73, flags: DIFlagFwdDecl)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "draw_color", scope: !617, file: !538, line: 118, baseType: !627, size: 64, offset: 576)
!627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !628, size: 64)
!628 = !DISubroutineType(types: !629)
!629 = !{null, !23, !73, !73, !630}
!630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !192, size: 64)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "interface_draw", scope: !617, file: !538, line: 120, baseType: !632, size: 64, offset: 640)
!632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !633, size: 64)
!633 = !DISubroutineType(types: !634)
!634 = !{null, !23, !624, !73}
!635 = !DIDerivedType(tag: DW_TAG_member, name: "interface_draw_color", scope: !617, file: !538, line: 121, baseType: !636, size: 64, offset: 704)
!636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !637, size: 64)
!637 = !DISubroutineType(types: !638)
!638 = !{null, !23, !73, !630}
!639 = !DIDerivedType(tag: DW_TAG_member, name: "interface_register_properties", scope: !617, file: !538, line: 122, baseType: !640, size: 64, offset: 768)
!640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !641, size: 64)
!641 = !DISubroutineType(types: !642)
!642 = !{null, !530, !601, !81}
!643 = !DIDerivedType(tag: DW_TAG_member, name: "interface_init_socket", scope: !617, file: !538, line: 123, baseType: !644, size: 64, offset: 832)
!644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !645, size: 64)
!645 = !DISubroutineType(types: !646)
!646 = !{null, !530, !601, !556, !601, !12}
!647 = !DIDerivedType(tag: DW_TAG_member, name: "interface_verify_socket", scope: !617, file: !538, line: 124, baseType: !644, size: 64, offset: 896)
!648 = !DIDerivedType(tag: DW_TAG_member, name: "interface_from_socket", scope: !617, file: !538, line: 125, baseType: !649, size: 64, offset: 960)
!649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !650, size: 64)
!650 = !DISubroutineType(types: !651)
!651 = !{null, !530, !601, !556, !601}
!652 = !DIDerivedType(tag: DW_TAG_member, name: "ext_socket", scope: !617, file: !538, line: 128, baseType: !653, size: 256, offset: 1024)
!653 = !DIDerivedType(tag: DW_TAG_typedef, name: "ExtensionRNA", file: !25, line: 436, baseType: !654)
!654 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ExtensionRNA", file: !25, line: 430, size: 256, elements: !655)
!655 = !{!656, !657, !660, !676}
!656 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !654, file: !25, line: 431, baseType: !56, size: 64)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "srna", scope: !654, file: !25, line: 432, baseType: !658, size: 64, offset: 64)
!658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !659, size: 64)
!659 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructRNA", file: !25, line: 417, baseType: !82)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "call", scope: !654, file: !25, line: 433, baseType: !661, size: 64, offset: 128)
!661 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructCallbackFunc", file: !25, line: 408, baseType: !662)
!662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !663, size: 64)
!663 = !DISubroutineType(types: !664)
!664 = !{!22, !23, !73, !665, !667}
!665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !666, size: 64)
!666 = !DICompositeType(tag: DW_TAG_structure_type, name: "FunctionRNA", file: !25, line: 38, flags: DIFlagFwdDecl)
!667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !668, size: 64)
!668 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParameterList", file: !25, line: 348, baseType: !669)
!669 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParameterList", file: !25, line: 337, size: 256, elements: !670)
!670 = !{!671, !672, !673, !674, !675}
!671 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !669, file: !25, line: 339, baseType: !56, size: 64)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !669, file: !25, line: 342, baseType: !665, size: 64, offset: 64)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_size", scope: !669, file: !25, line: 345, baseType: !22, size: 32, offset: 128)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "arg_count", scope: !669, file: !25, line: 347, baseType: !22, size: 32, offset: 160)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "ret_count", scope: !669, file: !25, line: 347, baseType: !22, size: 32, offset: 192)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !654, file: !25, line: 434, baseType: !677, size: 64, offset: 192)
!677 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructFreeFunc", file: !25, line: 409, baseType: !678)
!678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !679, size: 64)
!679 = !DISubroutineType(types: !680)
!680 = !{null, !56}
!681 = !DIDerivedType(tag: DW_TAG_member, name: "ext_interface", scope: !617, file: !538, line: 129, baseType: !653, size: 256, offset: 1280)
!682 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !617, file: !538, line: 132, baseType: !22, size: 32, offset: 1536)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !617, file: !538, line: 132, baseType: !22, size: 32, offset: 1568)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !602, file: !83, line: 105, baseType: !33, size: 512, offset: 1472)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "locx", scope: !602, file: !83, line: 107, baseType: !192, size: 32, offset: 1984)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "locy", scope: !602, file: !83, line: 107, baseType: !192, size: 32, offset: 2016)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "default_value", scope: !602, file: !83, line: 109, baseType: !56, size: 64, offset: 2048)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "stack_index", scope: !602, file: !83, line: 112, baseType: !48, size: 16, offset: 2112)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "stack_type", scope: !602, file: !83, line: 114, baseType: !48, size: 16, offset: 2128)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !602, file: !83, line: 115, baseType: !22, size: 32, offset: 2144)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !602, file: !83, line: 117, baseType: !56, size: 64, offset: 2176)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "own_index", scope: !602, file: !83, line: 122, baseType: !22, size: 32, offset: 2240)
!693 = !DIDerivedType(tag: DW_TAG_member, name: "to_index", scope: !602, file: !83, line: 124, baseType: !22, size: 32, offset: 2272)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "groupsock", scope: !602, file: !83, line: 126, baseType: !601, size: 64, offset: 2304)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !602, file: !83, line: 128, baseType: !696, size: 64, offset: 2368)
!696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !697, size: 64)
!697 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeLink", file: !83, line: 298, size: 448, elements: !698)
!698 = !{!699, !700, !701, !704, !705, !708, !709, !710}
!699 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !697, file: !83, line: 299, baseType: !696, size: 64)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !697, file: !83, line: 299, baseType: !696, size: 64, offset: 64)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "fromnode", scope: !697, file: !83, line: 301, baseType: !702, size: 64, offset: 128)
!702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !703, size: 64)
!703 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNode", file: !83, line: 218, baseType: !557)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "tonode", scope: !697, file: !83, line: 301, baseType: !702, size: 64, offset: 192)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "fromsock", scope: !697, file: !83, line: 302, baseType: !706, size: 64, offset: 256)
!706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !707, size: 64)
!707 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeSocket", file: !83, line: 132, baseType: !602)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "tosock", scope: !697, file: !83, line: 302, baseType: !706, size: 64, offset: 320)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !697, file: !83, line: 304, baseType: !22, size: 32, offset: 384)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !697, file: !83, line: 305, baseType: !22, size: 32, offset: 416)
!711 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !602, file: !83, line: 131, baseType: !712, size: 384, offset: 2432)
!712 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeStack", file: !83, line: 73, baseType: !713)
!713 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeStack", file: !83, line: 62, size: 384, elements: !714)
!714 = !{!715, !716, !717, !718, !719, !720, !721, !722, !723, !724, !725}
!715 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !713, file: !83, line: 63, baseType: !404, size: 128)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !713, file: !83, line: 64, baseType: !192, size: 32, offset: 128)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !713, file: !83, line: 64, baseType: !192, size: 32, offset: 160)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !713, file: !83, line: 65, baseType: !56, size: 64, offset: 192)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "hasinput", scope: !713, file: !83, line: 66, baseType: !48, size: 16, offset: 256)
!720 = !DIDerivedType(tag: DW_TAG_member, name: "hasoutput", scope: !713, file: !83, line: 67, baseType: !48, size: 16, offset: 272)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "datatype", scope: !713, file: !83, line: 68, baseType: !48, size: 16, offset: 288)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "sockettype", scope: !713, file: !83, line: 69, baseType: !48, size: 16, offset: 304)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "is_copy", scope: !713, file: !83, line: 70, baseType: !48, size: 16, offset: 320)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "external", scope: !713, file: !83, line: 71, baseType: !48, size: 16, offset: 336)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !713, file: !83, line: 72, baseType: !726, size: 32, offset: 352)
!726 = !DICompositeType(tag: DW_TAG_array_type, baseType: !48, size: 32, elements: !727)
!727 = !{!728}
!728 = !DISubrange(count: 2)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !587, file: !538, line: 108, baseType: !33, size: 512, offset: 896)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "outputs", scope: !565, file: !538, line: 160, baseType: !585, size: 64, offset: 3648)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "storagename", scope: !565, file: !538, line: 162, baseType: !33, size: 512, offset: 3712)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "draw_nodetype", scope: !565, file: !538, line: 165, baseType: !733, size: 64, offset: 4224)
!733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !734, size: 64)
!734 = !DISubroutineType(types: !735)
!735 = !{null, !736, !738, !824, !530, !556, !870}
!736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !737, size: 64)
!737 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !24)
!738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !739, size: 64)
!739 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ARegion", file: !110, line: 230, size: 3072, elements: !740)
!740 = !{!741, !742, !743, !792, !793, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !813, !814, !815, !816, !817, !818, !819, !820, !821, !823}
!741 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !739, file: !110, line: 231, baseType: !738, size: 64)
!742 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !739, file: !110, line: 231, baseType: !738, size: 64, offset: 64)
!743 = !DIDerivedType(tag: DW_TAG_member, name: "v2d", scope: !739, file: !110, line: 233, baseType: !744, size: 1280, offset: 128)
!744 = !DIDerivedType(tag: DW_TAG_typedef, name: "View2D", file: !745, line: 71, baseType: !746)
!745 = !DIFile(filename: "blender/source/blender/makesdna/DNA_view2d_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!746 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "View2D", file: !745, line: 40, size: 1280, elements: !747)
!747 = !{!748, !757, !758, !766, !767, !768, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !791}
!748 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !746, file: !745, line: 41, baseType: !749, size: 128)
!749 = !DIDerivedType(tag: DW_TAG_typedef, name: "rctf", file: !750, line: 95, baseType: !751)
!750 = !DIFile(filename: "blender/source/blender/makesdna/DNA_vec_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!751 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rctf", file: !750, line: 92, size: 128, elements: !752)
!752 = !{!753, !754, !755, !756}
!753 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !751, file: !750, line: 93, baseType: !192, size: 32)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !751, file: !750, line: 93, baseType: !192, size: 32, offset: 32)
!755 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !751, file: !750, line: 94, baseType: !192, size: 32, offset: 64)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !751, file: !750, line: 94, baseType: !192, size: 32, offset: 96)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !746, file: !745, line: 41, baseType: !749, size: 128, offset: 128)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "vert", scope: !746, file: !745, line: 42, baseType: !759, size: 128, offset: 256)
!759 = !DIDerivedType(tag: DW_TAG_typedef, name: "rcti", file: !750, line: 89, baseType: !760)
!760 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcti", file: !750, line: 86, size: 128, elements: !761)
!761 = !{!762, !763, !764, !765}
!762 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !760, file: !750, line: 87, baseType: !22, size: 32)
!763 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !760, file: !750, line: 87, baseType: !22, size: 32, offset: 32)
!764 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !760, file: !750, line: 88, baseType: !22, size: 32, offset: 64)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !760, file: !750, line: 88, baseType: !22, size: 32, offset: 96)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "hor", scope: !746, file: !745, line: 42, baseType: !759, size: 128, offset: 384)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !746, file: !745, line: 43, baseType: !759, size: 128, offset: 512)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !746, file: !745, line: 45, baseType: !769, size: 64, offset: 640)
!769 = !DICompositeType(tag: DW_TAG_array_type, baseType: !192, size: 64, elements: !727)
!770 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !746, file: !745, line: 45, baseType: !769, size: 64, offset: 704)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "minzoom", scope: !746, file: !745, line: 46, baseType: !192, size: 32, offset: 768)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "maxzoom", scope: !746, file: !745, line: 46, baseType: !192, size: 32, offset: 800)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "scroll", scope: !746, file: !745, line: 48, baseType: !48, size: 16, offset: 832)
!774 = !DIDerivedType(tag: DW_TAG_member, name: "scroll_ui", scope: !746, file: !745, line: 49, baseType: !48, size: 16, offset: 848)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "keeptot", scope: !746, file: !745, line: 51, baseType: !48, size: 16, offset: 864)
!776 = !DIDerivedType(tag: DW_TAG_member, name: "keepzoom", scope: !746, file: !745, line: 52, baseType: !48, size: 16, offset: 880)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "keepofs", scope: !746, file: !745, line: 53, baseType: !48, size: 16, offset: 896)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !746, file: !745, line: 55, baseType: !48, size: 16, offset: 912)
!779 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !746, file: !745, line: 56, baseType: !48, size: 16, offset: 928)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "winx", scope: !746, file: !745, line: 58, baseType: !48, size: 16, offset: 944)
!781 = !DIDerivedType(tag: DW_TAG_member, name: "winy", scope: !746, file: !745, line: 58, baseType: !48, size: 16, offset: 960)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "oldwinx", scope: !746, file: !745, line: 59, baseType: !48, size: 16, offset: 976)
!783 = !DIDerivedType(tag: DW_TAG_member, name: "oldwiny", scope: !746, file: !745, line: 59, baseType: !48, size: 16, offset: 992)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "around", scope: !746, file: !745, line: 61, baseType: !48, size: 16, offset: 1008)
!785 = !DIDerivedType(tag: DW_TAG_member, name: "tab_offset", scope: !746, file: !745, line: 63, baseType: !630, size: 64, offset: 1024)
!786 = !DIDerivedType(tag: DW_TAG_member, name: "tab_num", scope: !746, file: !745, line: 64, baseType: !22, size: 32, offset: 1088)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "tab_cur", scope: !746, file: !745, line: 65, baseType: !22, size: 32, offset: 1120)
!788 = !DIDerivedType(tag: DW_TAG_member, name: "sms", scope: !746, file: !745, line: 68, baseType: !789, size: 64, offset: 1152)
!789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !790, size: 64)
!790 = !DICompositeType(tag: DW_TAG_structure_type, name: "SmoothView2DStore", file: !745, line: 68, flags: DIFlagFwdDecl)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "smooth_timer", scope: !746, file: !745, line: 69, baseType: !95, size: 64, offset: 1216)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "winrct", scope: !739, file: !110, line: 234, baseType: !759, size: 128, offset: 1408)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "drawrct", scope: !739, file: !110, line: 235, baseType: !759, size: 128, offset: 1536)
!794 = !DIDerivedType(tag: DW_TAG_member, name: "winx", scope: !739, file: !110, line: 236, baseType: !48, size: 16, offset: 1664)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "winy", scope: !739, file: !110, line: 236, baseType: !48, size: 16, offset: 1680)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "swinid", scope: !739, file: !110, line: 238, baseType: !48, size: 16, offset: 1696)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "regiontype", scope: !739, file: !110, line: 239, baseType: !48, size: 16, offset: 1712)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "alignment", scope: !739, file: !110, line: 240, baseType: !48, size: 16, offset: 1728)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !739, file: !110, line: 241, baseType: !48, size: 16, offset: 1744)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "fsize", scope: !739, file: !110, line: 243, baseType: !192, size: 32, offset: 1760)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "sizex", scope: !739, file: !110, line: 244, baseType: !48, size: 16, offset: 1792)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "sizey", scope: !739, file: !110, line: 244, baseType: !48, size: 16, offset: 1808)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw", scope: !739, file: !110, line: 246, baseType: !48, size: 16, offset: 1824)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_overlay", scope: !739, file: !110, line: 247, baseType: !48, size: 16, offset: 1840)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "swap", scope: !739, file: !110, line: 248, baseType: !48, size: 16, offset: 1856)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "overlap", scope: !739, file: !110, line: 249, baseType: !48, size: 16, offset: 1872)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "flagfullscreen", scope: !739, file: !110, line: 250, baseType: !48, size: 16, offset: 1888)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !739, file: !110, line: 251, baseType: !48, size: 16, offset: 1904)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !739, file: !110, line: 253, baseType: !810, size: 64, offset: 1920)
!810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !811, size: 64)
!811 = !DICompositeType(tag: DW_TAG_structure_type, name: "ARegionType", file: !812, line: 33, flags: DIFlagFwdDecl)
!812 = !DIFile(filename: "blender/source/blender/editors/include/ED_uvedit.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!813 = !DIDerivedType(tag: DW_TAG_member, name: "uiblocks", scope: !739, file: !110, line: 255, baseType: !58, size: 128, offset: 1984)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "panels", scope: !739, file: !110, line: 256, baseType: !58, size: 128, offset: 2112)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "panels_category_active", scope: !739, file: !110, line: 257, baseType: !58, size: 128, offset: 2240)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "ui_lists", scope: !739, file: !110, line: 258, baseType: !58, size: 128, offset: 2368)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "ui_previews", scope: !739, file: !110, line: 259, baseType: !58, size: 128, offset: 2496)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "handlers", scope: !739, file: !110, line: 260, baseType: !58, size: 128, offset: 2624)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "panels_category", scope: !739, file: !110, line: 261, baseType: !58, size: 128, offset: 2752)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "regiontimer", scope: !739, file: !110, line: 263, baseType: !95, size: 64, offset: 2880)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "headerstr", scope: !739, file: !110, line: 265, baseType: !822, size: 64, offset: 2944)
!822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 64)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "regiondata", scope: !739, file: !110, line: 266, baseType: !56, size: 64, offset: 3008)
!824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !825, size: 64)
!825 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SpaceNode", file: !826, line: 925, size: 3200, elements: !827)
!826 = !DIFile(filename: "blender/source/blender/makesdna/DNA_space_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!827 = !{!828, !842, !843, !844, !845, !846, !847, !848, !849, !850, !851, !852, !853, !854, !855, !856, !857, !858, !859, !860, !861, !862, !863, !864, !865, !866, !867, !868, !869}
!828 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !825, file: !826, line: 926, baseType: !829, size: 64)
!829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !830, size: 64)
!830 = !DIDerivedType(tag: DW_TAG_typedef, name: "SpaceLink", file: !826, line: 91, baseType: !831)
!831 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SpaceLink", file: !826, line: 85, size: 448, elements: !832)
!832 = !{!833, !835, !836, !837, !838, !839}
!833 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !831, file: !826, line: 86, baseType: !834, size: 64)
!834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !831, size: 64)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !831, file: !826, line: 86, baseType: !834, size: 64, offset: 64)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !831, file: !826, line: 87, baseType: !58, size: 128, offset: 128)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "spacetype", scope: !831, file: !826, line: 88, baseType: !22, size: 32, offset: 256)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "blockscale", scope: !831, file: !826, line: 89, baseType: !192, size: 32, offset: 288)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "blockhandler", scope: !831, file: !826, line: 90, baseType: !840, size: 128, offset: 320)
!840 = !DICompositeType(tag: DW_TAG_array_type, baseType: !48, size: 128, elements: !841)
!841 = !{!194}
!842 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !825, file: !826, line: 926, baseType: !829, size: 64, offset: 64)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !825, file: !826, line: 927, baseType: !58, size: 128, offset: 128)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "spacetype", scope: !825, file: !826, line: 928, baseType: !22, size: 32, offset: 256)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "blockscale", scope: !825, file: !826, line: 929, baseType: !192, size: 32, offset: 288)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "blockhandler", scope: !825, file: !826, line: 930, baseType: !840, size: 128, offset: 320)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "v2d", scope: !825, file: !826, line: 932, baseType: !744, size: 1280, offset: 448)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !825, file: !826, line: 934, baseType: !119, size: 64, offset: 1728)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !825, file: !826, line: 934, baseType: !119, size: 64, offset: 1792)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !825, file: !826, line: 935, baseType: !48, size: 16, offset: 1856)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !825, file: !826, line: 935, baseType: !48, size: 16, offset: 1872)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "aspect", scope: !825, file: !826, line: 936, baseType: !192, size: 32, offset: 1888)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !825, file: !826, line: 936, baseType: !192, size: 32, offset: 1920)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "xof", scope: !825, file: !826, line: 938, baseType: !192, size: 32, offset: 1952)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "yof", scope: !825, file: !826, line: 938, baseType: !192, size: 32, offset: 1984)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "zoom", scope: !825, file: !826, line: 939, baseType: !192, size: 32, offset: 2016)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !825, file: !826, line: 940, baseType: !769, size: 64, offset: 2048)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "treepath", scope: !825, file: !826, line: 947, baseType: !58, size: 128, offset: 2112)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !825, file: !826, line: 949, baseType: !530, size: 64, offset: 2240)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "edittree", scope: !825, file: !826, line: 949, baseType: !530, size: 64, offset: 2304)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "tree_idname", scope: !825, file: !826, line: 952, baseType: !33, size: 512, offset: 2368)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "treetype", scope: !825, file: !826, line: 953, baseType: !22, size: 32, offset: 2880)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !825, file: !826, line: 954, baseType: !22, size: 32, offset: 2912)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "texfrom", scope: !825, file: !826, line: 956, baseType: !48, size: 16, offset: 2944)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "shaderfrom", scope: !825, file: !826, line: 957, baseType: !48, size: 16, offset: 2960)
!866 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !825, file: !826, line: 958, baseType: !48, size: 16, offset: 2976)
!867 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !825, file: !826, line: 959, baseType: !48, size: 16, offset: 2992)
!868 = !DIDerivedType(tag: DW_TAG_member, name: "linkdrag", scope: !825, file: !826, line: 960, baseType: !58, size: 128, offset: 3008)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !825, file: !826, line: 962, baseType: !259, size: 64, offset: 3136)
!870 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeInstanceKey", file: !83, line: 274, baseType: !871)
!871 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeInstanceKey", file: !83, line: 271, size: 32, elements: !872)
!872 = !{!873}
!873 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !871, file: !83, line: 273, baseType: !224, size: 32)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "draw_nodetype_prepare", scope: !565, file: !538, line: 168, baseType: !875, size: 64, offset: 4288)
!875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !876, size: 64)
!876 = !DISubroutineType(types: !877)
!877 = !{null, !736, !530, !556}
!878 = !DIDerivedType(tag: DW_TAG_member, name: "draw_buttons", scope: !565, file: !538, line: 171, baseType: !879, size: 64, offset: 4352)
!879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !880, size: 64)
!880 = !DISubroutineType(types: !881)
!881 = !{null, !624, !23, !73}
!882 = !DIDerivedType(tag: DW_TAG_member, name: "draw_buttons_ex", scope: !565, file: !538, line: 173, baseType: !879, size: 64, offset: 4416)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "draw_backdrop", scope: !565, file: !538, line: 176, baseType: !884, size: 64, offset: 4480)
!884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !885, size: 64)
!885 = !DISubroutineType(types: !886)
!886 = !{null, !824, !887, !556, !22, !22}
!887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !888, size: 64)
!888 = !DICompositeType(tag: DW_TAG_structure_type, name: "ImBuf", file: !889, line: 136, flags: DIFlagFwdDecl)
!889 = !DIFile(filename: "blender/source/blender/makesdna/DNA_color_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!890 = !DIDerivedType(tag: DW_TAG_member, name: "labelfunc", scope: !565, file: !538, line: 179, baseType: !891, size: 64, offset: 4544)
!891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !892, size: 64)
!892 = !DISubroutineType(types: !893)
!893 = !{null, !530, !556, !822, !22}
!894 = !DIDerivedType(tag: DW_TAG_member, name: "resize_area_func", scope: !565, file: !538, line: 181, baseType: !895, size: 64, offset: 4608)
!895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !896, size: 64)
!896 = !DISubroutineType(types: !897)
!897 = !{!22, !556, !22, !22}
!898 = !DIDerivedType(tag: DW_TAG_member, name: "select_area_func", scope: !565, file: !538, line: 183, baseType: !895, size: 64, offset: 4672)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "tweak_area_func", scope: !565, file: !538, line: 185, baseType: !895, size: 64, offset: 4736)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "updatefunc", scope: !565, file: !538, line: 188, baseType: !553, size: 64, offset: 4800)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "verifyfunc", scope: !565, file: !538, line: 190, baseType: !902, size: 64, offset: 4864)
!902 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !903, size: 64)
!903 = !DISubroutineType(types: !904)
!904 = !{null, !530, !556, !119}
!905 = !DIDerivedType(tag: DW_TAG_member, name: "initfunc", scope: !565, file: !538, line: 193, baseType: !553, size: 64, offset: 4928)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "freefunc", scope: !565, file: !538, line: 195, baseType: !907, size: 64, offset: 4992)
!907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !908, size: 64)
!908 = !DISubroutineType(types: !909)
!909 = !{null, !556}
!910 = !DIDerivedType(tag: DW_TAG_member, name: "copyfunc", scope: !565, file: !538, line: 197, baseType: !911, size: 64, offset: 5056)
!911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !912, size: 64)
!912 = !DISubroutineType(types: !913)
!913 = !{null, !530, !556, !556}
!914 = !DIDerivedType(tag: DW_TAG_member, name: "initfunc_api", scope: !565, file: !538, line: 200, baseType: !915, size: 64, offset: 5120)
!915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !916, size: 64)
!916 = !DISubroutineType(types: !917)
!917 = !{null, !736, !73}
!918 = !DIDerivedType(tag: DW_TAG_member, name: "freefunc_api", scope: !565, file: !538, line: 201, baseType: !919, size: 64, offset: 5184)
!919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !920, size: 64)
!920 = !DISubroutineType(types: !921)
!921 = !{null, !73}
!922 = !DIDerivedType(tag: DW_TAG_member, name: "copyfunc_api", scope: !565, file: !538, line: 202, baseType: !923, size: 64, offset: 5248)
!923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !924, size: 64)
!924 = !DISubroutineType(types: !925)
!925 = !{null, !73, !556}
!926 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !565, file: !538, line: 205, baseType: !927, size: 64, offset: 5312)
!927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !928, size: 64)
!928 = !DISubroutineType(types: !929)
!929 = !{!22, !564, !530}
!930 = !DIDerivedType(tag: DW_TAG_member, name: "poll_instance", scope: !565, file: !538, line: 207, baseType: !931, size: 64, offset: 5376)
!931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !932, size: 64)
!932 = !DISubroutineType(types: !933)
!933 = !{!22, !556, !530}
!934 = !DIDerivedType(tag: DW_TAG_member, name: "update_internal_links", scope: !565, file: !538, line: 210, baseType: !553, size: 64, offset: 5440)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "initexecfunc", scope: !565, file: !538, line: 213, baseType: !936, size: 64, offset: 5504)
!936 = !DIDerivedType(tag: DW_TAG_typedef, name: "NodeInitExecFunction", file: !538, line: 135, baseType: !937)
!937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !938, size: 64)
!938 = !DISubroutineType(types: !939)
!939 = !{!56, !940, !556, !870}
!940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !941, size: 64)
!941 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeExecContext", file: !538, line: 62, flags: DIFlagFwdDecl)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "freeexecfunc", scope: !565, file: !538, line: 214, baseType: !943, size: 64, offset: 5568)
!943 = !DIDerivedType(tag: DW_TAG_typedef, name: "NodeFreeExecFunction", file: !538, line: 136, baseType: !678)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "execfunc", scope: !565, file: !538, line: 215, baseType: !945, size: 64, offset: 5632)
!945 = !DIDerivedType(tag: DW_TAG_typedef, name: "NodeExecFunction", file: !538, line: 137, baseType: !946)
!946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !947, size: 64)
!947 = !DISubroutineType(types: !948)
!948 = !{null, !56, !22, !556, !949, !951, !951}
!949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !950, size: 64)
!950 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeExecData", file: !538, line: 63, flags: DIFlagFwdDecl)
!951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !952, size: 64)
!952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !713, size: 64)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "gpufunc", scope: !565, file: !538, line: 217, baseType: !954, size: 64, offset: 5696)
!954 = !DIDerivedType(tag: DW_TAG_typedef, name: "NodeGPUExecFunction", file: !538, line: 138, baseType: !955)
!955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !956, size: 64)
!956 = !DISubroutineType(types: !957)
!957 = !{!22, !958, !556, !949, !960, !960}
!958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !959, size: 64)
!959 = !DICompositeType(tag: DW_TAG_structure_type, name: "GPUMaterial", file: !538, line: 64, flags: DIFlagFwdDecl)
!960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !961, size: 64)
!961 = !DICompositeType(tag: DW_TAG_structure_type, name: "GPUNodeStack", file: !538, line: 66, flags: DIFlagFwdDecl)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "ext", scope: !565, file: !538, line: 220, baseType: !653, size: 256, offset: 5760)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !557, file: !83, line: 173, baseType: !33, size: 512, offset: 320)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !557, file: !83, line: 175, baseType: !33, size: 512, offset: 832)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !557, file: !83, line: 176, baseType: !22, size: 32, offset: 1344)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !557, file: !83, line: 177, baseType: !48, size: 16, offset: 1376)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !557, file: !83, line: 177, baseType: !48, size: 16, offset: 1392)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !557, file: !83, line: 178, baseType: !48, size: 16, offset: 1408)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !557, file: !83, line: 178, baseType: !48, size: 16, offset: 1424)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "lasty", scope: !557, file: !83, line: 179, baseType: !48, size: 16, offset: 1440)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "menunr", scope: !557, file: !83, line: 179, baseType: !48, size: 16, offset: 1456)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "stack_index", scope: !557, file: !83, line: 180, baseType: !48, size: 16, offset: 1472)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !557, file: !83, line: 181, baseType: !48, size: 16, offset: 1488)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "color", scope: !557, file: !83, line: 182, baseType: !228, size: 96, offset: 1504)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "inputs", scope: !557, file: !83, line: 184, baseType: !58, size: 128, offset: 1600)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "outputs", scope: !557, file: !83, line: 184, baseType: !58, size: 128, offset: 1728)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !557, file: !83, line: 185, baseType: !556, size: 64, offset: 1856)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !557, file: !83, line: 186, baseType: !119, size: 64, offset: 1920)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "storage", scope: !557, file: !83, line: 187, baseType: !56, size: 64, offset: 1984)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "original", scope: !557, file: !83, line: 188, baseType: !556, size: 64, offset: 2048)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "internal_links", scope: !557, file: !83, line: 189, baseType: !58, size: 128, offset: 2112)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "locx", scope: !557, file: !83, line: 191, baseType: !192, size: 32, offset: 2240)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "locy", scope: !557, file: !83, line: 191, baseType: !192, size: 32, offset: 2272)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !557, file: !83, line: 192, baseType: !192, size: 32, offset: 2304)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !557, file: !83, line: 192, baseType: !192, size: 32, offset: 2336)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "miniwidth", scope: !557, file: !83, line: 193, baseType: !192, size: 32, offset: 2368)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "offsetx", scope: !557, file: !83, line: 194, baseType: !192, size: 32, offset: 2400)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "offsety", scope: !557, file: !83, line: 194, baseType: !192, size: 32, offset: 2432)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "update", scope: !557, file: !83, line: 196, baseType: !22, size: 32, offset: 2464)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "label", scope: !557, file: !83, line: 198, baseType: !33, size: 512, offset: 2496)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "custom1", scope: !557, file: !83, line: 199, baseType: !48, size: 16, offset: 3008)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "custom2", scope: !557, file: !83, line: 199, baseType: !48, size: 16, offset: 3024)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "custom3", scope: !557, file: !83, line: 200, baseType: !192, size: 32, offset: 3040)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "custom4", scope: !557, file: !83, line: 200, baseType: !192, size: 32, offset: 3072)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "need_exec", scope: !557, file: !83, line: 202, baseType: !48, size: 16, offset: 3104)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "exec", scope: !557, file: !83, line: 202, baseType: !48, size: 16, offset: 3120)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "threaddata", scope: !557, file: !83, line: 203, baseType: !56, size: 64, offset: 3136)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "totr", scope: !557, file: !83, line: 204, baseType: !749, size: 128, offset: 3200)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "butr", scope: !557, file: !83, line: 205, baseType: !749, size: 128, offset: 3328)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "prvr", scope: !557, file: !83, line: 206, baseType: !749, size: 128, offset: 3456)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "preview_xsize", scope: !557, file: !83, line: 215, baseType: !48, size: 16, offset: 3584)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "preview_ysize", scope: !557, file: !83, line: 215, baseType: !48, size: 16, offset: 3600)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !557, file: !83, line: 216, baseType: !22, size: 32, offset: 3616)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !557, file: !83, line: 217, baseType: !1005, size: 64, offset: 3648)
!1005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1006, size: 64)
!1006 = !DICompositeType(tag: DW_TAG_structure_type, name: "uiBlock", file: !83, line: 51, flags: DIFlagFwdDecl)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "foreach_nodeclass", scope: !537, file: !538, line: 294, baseType: !1008, size: 64, offset: 3264)
!1008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1009, size: 64)
!1009 = !DISubroutineType(types: !1010)
!1010 = !{null, !153, !56, !1011}
!1011 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeClassCallback", file: !538, line: 282, baseType: !1012)
!1012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1013, size: 64)
!1013 = !DISubroutineType(types: !1014)
!1014 = !{null, !56, !22, !12}
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !537, file: !538, line: 296, baseType: !1016, size: 64, offset: 3328)
!1016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1017, size: 64)
!1017 = !DISubroutineType(types: !1018)
!1018 = !{!22, !736, !536}
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "get_from_context", scope: !537, file: !538, line: 298, baseType: !1020, size: 64, offset: 3392)
!1020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1021, size: 64)
!1021 = !DISubroutineType(types: !1022)
!1022 = !{null, !736, !536, !1023, !1024, !1024}
!1023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !530, size: 64)
!1024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !119, size: 64)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "localize", scope: !537, file: !538, line: 302, baseType: !1026, size: 64, offset: 3456)
!1026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1027, size: 64)
!1027 = !DISubroutineType(types: !1028)
!1028 = !{null, !530, !530}
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "local_sync", scope: !537, file: !538, line: 303, baseType: !1026, size: 64, offset: 3520)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "local_merge", scope: !537, file: !538, line: 304, baseType: !1026, size: 64, offset: 3584)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "update", scope: !537, file: !538, line: 307, baseType: !549, size: 64, offset: 3648)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "validate_link", scope: !537, file: !538, line: 309, baseType: !1033, size: 64, offset: 3712)
!1033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1034, size: 64)
!1034 = !DISubroutineType(types: !1035)
!1035 = !{!22, !530, !696}
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "node_add_init", scope: !537, file: !538, line: 311, baseType: !553, size: 64, offset: 3776)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "ext", scope: !537, file: !538, line: 314, baseType: !653, size: 256, offset: 3840)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !531, file: !83, line: 333, baseType: !33, size: 512, offset: 1088)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "interface_type", scope: !531, file: !83, line: 335, baseType: !81, size: 64, offset: 1600)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !531, file: !83, line: 337, baseType: !259, size: 64, offset: 1664)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "view_center", scope: !531, file: !83, line: 338, baseType: !769, size: 64, offset: 1728)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "nodes", scope: !531, file: !83, line: 340, baseType: !58, size: 128, offset: 1792)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !531, file: !83, line: 340, baseType: !58, size: 128, offset: 1920)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !531, file: !83, line: 342, baseType: !22, size: 32, offset: 2048)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !531, file: !83, line: 342, baseType: !22, size: 32, offset: 2080)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "cur_index", scope: !531, file: !83, line: 343, baseType: !22, size: 32, offset: 2112)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !531, file: !83, line: 345, baseType: !22, size: 32, offset: 2144)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "update", scope: !531, file: !83, line: 346, baseType: !22, size: 32, offset: 2176)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "is_updating", scope: !531, file: !83, line: 347, baseType: !48, size: 16, offset: 2208)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !531, file: !83, line: 348, baseType: !48, size: 16, offset: 2224)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !531, file: !83, line: 349, baseType: !22, size: 32, offset: 2240)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "nodetype", scope: !531, file: !83, line: 351, baseType: !22, size: 32, offset: 2272)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "edit_quality", scope: !531, file: !83, line: 353, baseType: !48, size: 16, offset: 2304)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "render_quality", scope: !531, file: !83, line: 354, baseType: !48, size: 16, offset: 2320)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "chunksize", scope: !531, file: !83, line: 355, baseType: !22, size: 32, offset: 2336)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "viewer_border", scope: !531, file: !83, line: 357, baseType: !749, size: 128, offset: 2368)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "inputs", scope: !531, file: !83, line: 363, baseType: !58, size: 128, offset: 2496)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "outputs", scope: !531, file: !83, line: 363, baseType: !58, size: 128, offset: 2624)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "previews", scope: !531, file: !83, line: 368, baseType: !1060, size: 64, offset: 2752)
!1060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1061, size: 64)
!1061 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeInstanceHash", file: !538, line: 500, size: 64, elements: !1062)
!1062 = !{!1063}
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "ghash", scope: !1061, file: !538, line: 502, baseType: !1064, size: 64)
!1064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1065, size: 64)
!1065 = !DIDerivedType(tag: DW_TAG_typedef, name: "GHash", file: !1066, line: 48, baseType: !220)
!1066 = !DIFile(filename: "blender/source/blender/blenlib/BLI_ghash.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "active_viewer_key", scope: !531, file: !83, line: 372, baseType: !870, size: 32, offset: 2816)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !531, file: !83, line: 373, baseType: !22, size: 32, offset: 2848)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "execdata", scope: !531, file: !83, line: 382, baseType: !1070, size: 64, offset: 2880)
!1070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1071, size: 64)
!1071 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTreeExec", file: !83, line: 46, flags: DIFlagFwdDecl)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "progress", scope: !531, file: !83, line: 385, baseType: !1073, size: 64, offset: 2944)
!1073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1074, size: 64)
!1074 = !DISubroutineType(types: !1075)
!1075 = !{null, !56, !192}
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "stats_draw", scope: !531, file: !83, line: 386, baseType: !1077, size: 64, offset: 3008)
!1077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1078, size: 64)
!1078 = !DISubroutineType(types: !1079)
!1079 = !{null, !56, !822}
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "test_break", scope: !531, file: !83, line: 387, baseType: !1081, size: 64, offset: 3072)
!1081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1082, size: 64)
!1082 = !DISubroutineType(types: !1083)
!1083 = !{!22, !56}
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "update_draw", scope: !531, file: !83, line: 388, baseType: !678, size: 64, offset: 3136)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "tbh", scope: !531, file: !83, line: 389, baseType: !56, size: 64, offset: 3200)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "prh", scope: !531, file: !83, line: 389, baseType: !56, size: 64, offset: 3264)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "sdh", scope: !531, file: !83, line: 389, baseType: !56, size: 64, offset: 3328)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "udh", scope: !531, file: !83, line: 389, baseType: !56, size: 64, offset: 3392)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !458, file: !161, line: 249, baseType: !184, size: 64, offset: 2752)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !458, file: !161, line: 250, baseType: !1091, size: 64, offset: 2816)
!1091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1092, size: 64)
!1092 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Image", file: !513, line: 77, size: 15424, elements: !1093)
!1093 = !{!1094, !1095, !1096, !1099, !1102, !1105, !1108, !1110, !1111, !1112, !1113, !1114, !1115, !1116, !1117, !1118, !1119, !1120, !1121, !1122, !1123, !1124, !1126, !1127, !1140, !1141, !1142, !1143, !1144, !1145, !1146, !1147, !1148, !1149, !1150, !1151, !1152, !1157, !1158, !1162}
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1092, file: !513, line: 78, baseType: !113, size: 960)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1092, file: !513, line: 80, baseType: !131, size: 8192, offset: 960)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !1092, file: !513, line: 82, baseType: !1097, size: 64, offset: 9152)
!1097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1098, size: 64)
!1098 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieCache", file: !513, line: 43, flags: DIFlagFwdDecl)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !1092, file: !513, line: 83, baseType: !1100, size: 64, offset: 9216)
!1100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1101, size: 64)
!1101 = !DICompositeType(tag: DW_TAG_structure_type, name: "GPUTexture", file: !39, line: 46, flags: DIFlagFwdDecl)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !1092, file: !513, line: 86, baseType: !1103, size: 64, offset: 9280)
!1103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1104, size: 64)
!1104 = !DICompositeType(tag: DW_TAG_structure_type, name: "anim", file: !513, line: 41, flags: DIFlagFwdDecl)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "rr", scope: !1092, file: !513, line: 87, baseType: !1106, size: 64, offset: 9344)
!1106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1107, size: 64)
!1107 = !DICompositeType(tag: DW_TAG_structure_type, name: "RenderResult", file: !513, line: 44, flags: DIFlagFwdDecl)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "renders", scope: !1092, file: !513, line: 89, baseType: !1109, size: 512, offset: 9408)
!1109 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1106, size: 512, elements: !841)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "render_slot", scope: !1092, file: !513, line: 90, baseType: !48, size: 16, offset: 9920)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "last_render_slot", scope: !1092, file: !513, line: 90, baseType: !48, size: 16, offset: 9936)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1092, file: !513, line: 92, baseType: !48, size: 16, offset: 9952)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1092, file: !513, line: 92, baseType: !48, size: 16, offset: 9968)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !1092, file: !513, line: 93, baseType: !48, size: 16, offset: 9984)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1092, file: !513, line: 93, baseType: !48, size: 16, offset: 10000)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !1092, file: !513, line: 94, baseType: !22, size: 32, offset: 10016)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "tpageflag", scope: !1092, file: !513, line: 97, baseType: !48, size: 16, offset: 10048)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "totbind", scope: !1092, file: !513, line: 97, baseType: !48, size: 16, offset: 10064)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "xrep", scope: !1092, file: !513, line: 98, baseType: !48, size: 16, offset: 10080)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "yrep", scope: !1092, file: !513, line: 98, baseType: !48, size: 16, offset: 10096)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "twsta", scope: !1092, file: !513, line: 99, baseType: !48, size: 16, offset: 10112)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "twend", scope: !1092, file: !513, line: 99, baseType: !48, size: 16, offset: 10128)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "bindcode", scope: !1092, file: !513, line: 100, baseType: !224, size: 32, offset: 10144)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "repbind", scope: !1092, file: !513, line: 101, baseType: !1125, size: 64, offset: 10176)
!1125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !224, size: 64)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !1092, file: !513, line: 103, baseType: !137, size: 64, offset: 10240)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !1092, file: !513, line: 104, baseType: !1128, size: 64, offset: 10304)
!1128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1129, size: 64)
!1129 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PreviewImage", file: !39, line: 159, size: 448, elements: !1130)
!1130 = !{!1131, !1133, !1134, !1135, !1136, !1138}
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !1129, file: !39, line: 161, baseType: !1132, size: 64)
!1132 = !DICompositeType(tag: DW_TAG_array_type, baseType: !224, size: 64, elements: !727)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !1129, file: !39, line: 162, baseType: !1132, size: 64, offset: 64)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !1129, file: !39, line: 163, baseType: !726, size: 32, offset: 128)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !1129, file: !39, line: 164, baseType: !726, size: 32, offset: 160)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "rect", scope: !1129, file: !39, line: 165, baseType: !1137, size: 128, offset: 192)
!1137 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1125, size: 128, elements: !727)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !1129, file: !39, line: 166, baseType: !1139, size: 128, offset: 320)
!1139 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1100, size: 128, elements: !727)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "lastupdate", scope: !1092, file: !513, line: 107, baseType: !192, size: 32, offset: 10368)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "lastused", scope: !1092, file: !513, line: 108, baseType: !22, size: 32, offset: 10400)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "animspeed", scope: !1092, file: !513, line: 109, baseType: !48, size: 16, offset: 10432)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1092, file: !513, line: 110, baseType: !48, size: 16, offset: 10448)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "gen_x", scope: !1092, file: !513, line: 113, baseType: !22, size: 32, offset: 10464)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "gen_y", scope: !1092, file: !513, line: 113, baseType: !22, size: 32, offset: 10496)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "gen_type", scope: !1092, file: !513, line: 114, baseType: !14, size: 8, offset: 10528)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "gen_flag", scope: !1092, file: !513, line: 114, baseType: !14, size: 8, offset: 10536)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "gen_depth", scope: !1092, file: !513, line: 115, baseType: !48, size: 16, offset: 10544)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "gen_color", scope: !1092, file: !513, line: 116, baseType: !404, size: 128, offset: 10560)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "aspx", scope: !1092, file: !513, line: 119, baseType: !192, size: 32, offset: 10688)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "aspy", scope: !1092, file: !513, line: 119, baseType: !192, size: 32, offset: 10720)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !1092, file: !513, line: 122, baseType: !1153, size: 512, offset: 10752)
!1153 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedColorspaceSettings", file: !889, line: 182, baseType: !1154)
!1154 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedColorspaceSettings", file: !889, line: 180, size: 512, elements: !1155)
!1155 = !{!1156}
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1154, file: !889, line: 181, baseType: !33, size: 512)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_mode", scope: !1092, file: !513, line: 123, baseType: !14, size: 8, offset: 11264)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1092, file: !513, line: 125, baseType: !1159, size: 56, offset: 11272)
!1159 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 56, elements: !1160)
!1160 = !{!1161}
!1161 = !DISubrange(count: 7)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "render_slots", scope: !1092, file: !513, line: 126, baseType: !1163, size: 4096, offset: 11328)
!1163 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1164, size: 4096, elements: !841)
!1164 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderSlot", file: !513, line: 69, baseType: !1165)
!1165 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderSlot", file: !513, line: 67, size: 512, elements: !1166)
!1166 = !{!1167}
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1165, file: !513, line: 68, baseType: !33, size: 512)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "coba", scope: !458, file: !161, line: 251, baseType: !412, size: 64, offset: 2880)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "env", scope: !458, file: !161, line: 252, baseType: !1170, size: 64, offset: 2944)
!1170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1171, size: 64)
!1171 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EnvMap", file: !161, line: 122, size: 1600, elements: !1172)
!1172 = !{!1173, !1174, !1175, !1179, !1182, !1185, !1186, !1187, !1188, !1189, !1190, !1191, !1192, !1193, !1194, !1195, !1196}
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1171, file: !161, line: 123, baseType: !163, size: 64)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !1171, file: !161, line: 124, baseType: !1091, size: 64, offset: 64)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "cube", scope: !1171, file: !161, line: 125, baseType: !1176, size: 384, offset: 128)
!1176 = !DICompositeType(tag: DW_TAG_array_type, baseType: !887, size: 384, elements: !1177)
!1177 = !{!1178}
!1178 = !DISubrange(count: 6)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !1171, file: !161, line: 126, baseType: !1180, size: 512, offset: 512)
!1180 = !DICompositeType(tag: DW_TAG_array_type, baseType: !192, size: 512, elements: !1181)
!1181 = !{!406, !406}
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "obimat", scope: !1171, file: !161, line: 127, baseType: !1183, size: 288, offset: 1024)
!1183 = !DICompositeType(tag: DW_TAG_array_type, baseType: !192, size: 288, elements: !1184)
!1184 = !{!195, !195}
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1171, file: !161, line: 128, baseType: !48, size: 16, offset: 1312)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "stype", scope: !1171, file: !161, line: 128, baseType: !48, size: 16, offset: 1328)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "clipsta", scope: !1171, file: !161, line: 129, baseType: !192, size: 32, offset: 1344)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "clipend", scope: !1171, file: !161, line: 129, baseType: !192, size: 32, offset: 1376)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "viewscale", scope: !1171, file: !161, line: 130, baseType: !192, size: 32, offset: 1408)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "notlay", scope: !1171, file: !161, line: 131, baseType: !224, size: 32, offset: 1440)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "cuberes", scope: !1171, file: !161, line: 132, baseType: !48, size: 16, offset: 1472)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1171, file: !161, line: 132, baseType: !48, size: 16, offset: 1488)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1171, file: !161, line: 133, baseType: !22, size: 32, offset: 1504)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !1171, file: !161, line: 133, baseType: !22, size: 32, offset: 1536)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !1171, file: !161, line: 134, baseType: !48, size: 16, offset: 1568)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "lastsize", scope: !1171, file: !161, line: 134, baseType: !48, size: 16, offset: 1584)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !458, file: !161, line: 253, baseType: !1128, size: 64, offset: 3008)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "pd", scope: !458, file: !161, line: 254, baseType: !1199, size: 64, offset: 3072)
!1199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1200, size: 64)
!1200 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PointDensity", file: !161, line: 137, size: 832, elements: !1201)
!1201 = !{!1202, !1203, !1204, !1205, !1206, !1207, !1208, !1209, !1210, !1211, !1212, !1213, !1214, !1215, !1216, !1217, !1218, !1219, !1220, !1222, !1223, !1224, !1225, !1226, !1227}
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1200, file: !161, line: 138, baseType: !48, size: 16)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_type", scope: !1200, file: !161, line: 140, baseType: !48, size: 16, offset: 16)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_softness", scope: !1200, file: !161, line: 141, baseType: !192, size: 32, offset: 32)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "radius", scope: !1200, file: !161, line: 142, baseType: !192, size: 32, offset: 64)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !1200, file: !161, line: 143, baseType: !48, size: 16, offset: 96)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "color_source", scope: !1200, file: !161, line: 144, baseType: !48, size: 16, offset: 112)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "totpoints", scope: !1200, file: !161, line: 145, baseType: !22, size: 32, offset: 128)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "pdpad", scope: !1200, file: !161, line: 147, baseType: !22, size: 32, offset: 160)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1200, file: !161, line: 149, baseType: !163, size: 64, offset: 192)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "psys", scope: !1200, file: !161, line: 150, baseType: !22, size: 32, offset: 256)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "psys_cache_space", scope: !1200, file: !161, line: 151, baseType: !48, size: 16, offset: 288)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "ob_cache_space", scope: !1200, file: !161, line: 152, baseType: !48, size: 16, offset: 304)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "point_tree", scope: !1200, file: !161, line: 154, baseType: !56, size: 64, offset: 320)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "point_data", scope: !1200, file: !161, line: 155, baseType: !630, size: 64, offset: 384)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "noise_size", scope: !1200, file: !161, line: 157, baseType: !192, size: 32, offset: 448)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "noise_depth", scope: !1200, file: !161, line: 158, baseType: !48, size: 16, offset: 480)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "noise_influence", scope: !1200, file: !161, line: 159, baseType: !48, size: 16, offset: 496)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "noise_basis", scope: !1200, file: !161, line: 160, baseType: !48, size: 16, offset: 512)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "pdpad3", scope: !1200, file: !161, line: 161, baseType: !1221, size: 48, offset: 528)
!1221 = !DICompositeType(tag: DW_TAG_array_type, baseType: !48, size: 48, elements: !229)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "noise_fac", scope: !1200, file: !161, line: 162, baseType: !192, size: 32, offset: 576)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "speed_scale", scope: !1200, file: !161, line: 164, baseType: !192, size: 32, offset: 608)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_speed_scale", scope: !1200, file: !161, line: 164, baseType: !192, size: 32, offset: 640)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "pdpad2", scope: !1200, file: !161, line: 164, baseType: !192, size: 32, offset: 672)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "coba", scope: !1200, file: !161, line: 165, baseType: !412, size: 64, offset: 704)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_curve", scope: !1200, file: !161, line: 167, baseType: !1228, size: 64, offset: 768)
!1228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1229, size: 64)
!1229 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapping", file: !889, line: 72, size: 3072, elements: !1230)
!1230 = !{!1231, !1232, !1233, !1234, !1235, !1236, !1237, !1262, !1263, !1264, !1265}
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1229, file: !889, line: 73, baseType: !22, size: 32)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !1229, file: !889, line: 73, baseType: !22, size: 32, offset: 32)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "preset", scope: !1229, file: !889, line: 74, baseType: !22, size: 32, offset: 64)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !1229, file: !889, line: 75, baseType: !22, size: 32, offset: 96)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "curr", scope: !1229, file: !889, line: 77, baseType: !749, size: 128, offset: 128)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "clipr", scope: !1229, file: !889, line: 77, baseType: !749, size: 128, offset: 256)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "cm", scope: !1229, file: !889, line: 79, baseType: !1238, size: 2304, offset: 384)
!1238 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1239, size: 2304, elements: !405)
!1239 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMap", file: !889, line: 67, baseType: !1240)
!1240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMap", file: !889, line: 55, size: 576, elements: !1241)
!1241 = !{!1242, !1243, !1244, !1245, !1246, !1247, !1248, !1249, !1258, !1259, !1260, !1261}
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !1240, file: !889, line: 56, baseType: !48, size: 16)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1240, file: !889, line: 56, baseType: !48, size: 16, offset: 16)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !1240, file: !889, line: 58, baseType: !192, size: 32, offset: 32)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "mintable", scope: !1240, file: !889, line: 59, baseType: !192, size: 32, offset: 64)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "maxtable", scope: !1240, file: !889, line: 59, baseType: !192, size: 32, offset: 96)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "ext_in", scope: !1240, file: !889, line: 60, baseType: !769, size: 64, offset: 128)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "ext_out", scope: !1240, file: !889, line: 60, baseType: !769, size: 64, offset: 192)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "curve", scope: !1240, file: !889, line: 61, baseType: !1250, size: 64, offset: 256)
!1250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1251, size: 64)
!1251 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMapPoint", file: !889, line: 47, baseType: !1252)
!1252 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapPoint", file: !889, line: 44, size: 96, elements: !1253)
!1253 = !{!1254, !1255, !1256, !1257}
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1252, file: !889, line: 45, baseType: !192, size: 32)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1252, file: !889, line: 45, baseType: !192, size: 32, offset: 32)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1252, file: !889, line: 46, baseType: !48, size: 16, offset: 64)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "shorty", scope: !1252, file: !889, line: 46, baseType: !48, size: 16, offset: 80)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !1240, file: !889, line: 62, baseType: !1250, size: 64, offset: 320)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "premultable", scope: !1240, file: !889, line: 64, baseType: !1250, size: 64, offset: 384)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_in", scope: !1240, file: !889, line: 65, baseType: !769, size: 64, offset: 448)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_out", scope: !1240, file: !889, line: 66, baseType: !769, size: 64, offset: 512)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "black", scope: !1229, file: !889, line: 80, baseType: !228, size: 96, offset: 2688)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "white", scope: !1229, file: !889, line: 80, baseType: !228, size: 96, offset: 2784)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "bwmul", scope: !1229, file: !889, line: 81, baseType: !228, size: 96, offset: 2880)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "sample", scope: !1229, file: !889, line: 83, baseType: !228, size: 96, offset: 2976)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "vd", scope: !458, file: !161, line: 255, baseType: !1267, size: 64, offset: 3136)
!1267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1268, size: 64)
!1268 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VoxelData", file: !161, line: 170, size: 8704, elements: !1269)
!1269 = !{!1270, !1272, !1273, !1274, !1275, !1276, !1277, !1278, !1279, !1280, !1281, !1282, !1283, !1284, !1285, !1286}
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "resol", scope: !1268, file: !161, line: 171, baseType: !1271, size: 96)
!1271 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 96, elements: !229)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "interp_type", scope: !1268, file: !161, line: 172, baseType: !22, size: 32, offset: 96)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "file_format", scope: !1268, file: !161, line: 173, baseType: !48, size: 16, offset: 128)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1268, file: !161, line: 174, baseType: !48, size: 16, offset: 144)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "extend", scope: !1268, file: !161, line: 175, baseType: !48, size: 16, offset: 160)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "smoked_type", scope: !1268, file: !161, line: 176, baseType: !48, size: 16, offset: 176)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "data_type", scope: !1268, file: !161, line: 177, baseType: !48, size: 16, offset: 192)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1268, file: !161, line: 178, baseType: !48, size: 16, offset: 208)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "_pad", scope: !1268, file: !161, line: 179, baseType: !22, size: 32, offset: 224)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1268, file: !161, line: 181, baseType: !163, size: 64, offset: 256)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "int_multiplier", scope: !1268, file: !161, line: 182, baseType: !192, size: 32, offset: 320)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "still_frame", scope: !1268, file: !161, line: 183, baseType: !22, size: 32, offset: 352)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "source_path", scope: !1268, file: !161, line: 184, baseType: !131, size: 8192, offset: 384)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "dataset", scope: !1268, file: !161, line: 187, baseType: !630, size: 64, offset: 8576)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "cachedframe", scope: !1268, file: !161, line: 188, baseType: !22, size: 32, offset: 8640)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1268, file: !161, line: 189, baseType: !22, size: 32, offset: 8672)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "ot", scope: !458, file: !161, line: 256, baseType: !1288, size: 64, offset: 3200)
!1288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1289, size: 64)
!1289 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "OceanTex", file: !161, line: 193, size: 640, elements: !1290)
!1290 = !{!1291, !1292, !1293, !1294}
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1289, file: !161, line: 194, baseType: !163, size: 64)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "oceanmod", scope: !1289, file: !161, line: 195, baseType: !33, size: 512, offset: 64)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "output", scope: !1289, file: !161, line: 197, baseType: !22, size: 32, offset: 576)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1289, file: !161, line: 198, baseType: !22, size: 32, offset: 608)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !458, file: !161, line: 258, baseType: !14, size: 8, offset: 3264)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !458, file: !161, line: 259, baseType: !1159, size: 56, offset: 3272)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "uvname", scope: !449, file: !161, line: 62, baseType: !33, size: 512, offset: 192)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "projx", scope: !449, file: !161, line: 64, baseType: !14, size: 8, offset: 704)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "projy", scope: !449, file: !161, line: 64, baseType: !14, size: 8, offset: 712)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "projz", scope: !449, file: !161, line: 64, baseType: !14, size: 8, offset: 720)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !449, file: !161, line: 64, baseType: !14, size: 8, offset: 728)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "ofs", scope: !449, file: !161, line: 65, baseType: !228, size: 96, offset: 736)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !449, file: !161, line: 65, baseType: !228, size: 96, offset: 832)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !449, file: !161, line: 65, baseType: !192, size: 32, offset: 928)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "texflag", scope: !449, file: !161, line: 67, baseType: !48, size: 16, offset: 960)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "colormodel", scope: !449, file: !161, line: 67, baseType: !48, size: 16, offset: 976)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "pmapto", scope: !449, file: !161, line: 67, baseType: !48, size: 16, offset: 992)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "pmaptoneg", scope: !449, file: !161, line: 67, baseType: !48, size: 16, offset: 1008)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "normapspace", scope: !449, file: !161, line: 68, baseType: !48, size: 16, offset: 1024)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "which_output", scope: !449, file: !161, line: 68, baseType: !48, size: 16, offset: 1040)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "brush_map_mode", scope: !449, file: !161, line: 69, baseType: !14, size: 8, offset: 1056)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !449, file: !161, line: 69, baseType: !1159, size: 56, offset: 1064)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !449, file: !161, line: 70, baseType: !192, size: 32, offset: 1120)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !449, file: !161, line: 70, baseType: !192, size: 32, offset: 1152)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !449, file: !161, line: 70, baseType: !192, size: 32, offset: 1184)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "k", scope: !449, file: !161, line: 70, baseType: !192, size: 32, offset: 1216)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "def_var", scope: !449, file: !161, line: 71, baseType: !192, size: 32, offset: 1248)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !449, file: !161, line: 71, baseType: !192, size: 32, offset: 1280)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "colfac", scope: !449, file: !161, line: 74, baseType: !192, size: 32, offset: 1312)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "varfac", scope: !449, file: !161, line: 74, baseType: !192, size: 32, offset: 1344)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "norfac", scope: !449, file: !161, line: 77, baseType: !192, size: 32, offset: 1376)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "dispfac", scope: !449, file: !161, line: 77, baseType: !192, size: 32, offset: 1408)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "warpfac", scope: !449, file: !161, line: 77, baseType: !192, size: 32, offset: 1440)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "colspecfac", scope: !449, file: !161, line: 78, baseType: !192, size: 32, offset: 1472)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "mirrfac", scope: !449, file: !161, line: 78, baseType: !192, size: 32, offset: 1504)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "alphafac", scope: !449, file: !161, line: 78, baseType: !192, size: 32, offset: 1536)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "difffac", scope: !449, file: !161, line: 79, baseType: !192, size: 32, offset: 1568)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "specfac", scope: !449, file: !161, line: 79, baseType: !192, size: 32, offset: 1600)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "emitfac", scope: !449, file: !161, line: 79, baseType: !192, size: 32, offset: 1632)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "hardfac", scope: !449, file: !161, line: 79, baseType: !192, size: 32, offset: 1664)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "raymirrfac", scope: !449, file: !161, line: 80, baseType: !192, size: 32, offset: 1696)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "translfac", scope: !449, file: !161, line: 80, baseType: !192, size: 32, offset: 1728)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "ambfac", scope: !449, file: !161, line: 80, baseType: !192, size: 32, offset: 1760)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "colemitfac", scope: !449, file: !161, line: 81, baseType: !192, size: 32, offset: 1792)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "colreflfac", scope: !449, file: !161, line: 81, baseType: !192, size: 32, offset: 1824)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "coltransfac", scope: !449, file: !161, line: 81, baseType: !192, size: 32, offset: 1856)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "densfac", scope: !449, file: !161, line: 82, baseType: !192, size: 32, offset: 1888)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "scatterfac", scope: !449, file: !161, line: 82, baseType: !192, size: 32, offset: 1920)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "reflfac", scope: !449, file: !161, line: 82, baseType: !192, size: 32, offset: 1952)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "timefac", scope: !449, file: !161, line: 85, baseType: !192, size: 32, offset: 1984)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "lengthfac", scope: !449, file: !161, line: 85, baseType: !192, size: 32, offset: 2016)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "clumpfac", scope: !449, file: !161, line: 85, baseType: !192, size: 32, offset: 2048)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "dampfac", scope: !449, file: !161, line: 85, baseType: !192, size: 32, offset: 2080)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "kinkfac", scope: !449, file: !161, line: 86, baseType: !192, size: 32, offset: 2112)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "roughfac", scope: !449, file: !161, line: 86, baseType: !192, size: 32, offset: 2144)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "padensfac", scope: !449, file: !161, line: 86, baseType: !192, size: 32, offset: 2176)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "gravityfac", scope: !449, file: !161, line: 86, baseType: !192, size: 32, offset: 2208)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "lifefac", scope: !449, file: !161, line: 87, baseType: !192, size: 32, offset: 2240)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "sizefac", scope: !449, file: !161, line: 87, baseType: !192, size: 32, offset: 2272)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "ivelfac", scope: !449, file: !161, line: 87, baseType: !192, size: 32, offset: 2304)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "fieldfac", scope: !449, file: !161, line: 87, baseType: !192, size: 32, offset: 2336)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "shadowfac", scope: !449, file: !161, line: 90, baseType: !192, size: 32, offset: 2368)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "zenupfac", scope: !449, file: !161, line: 93, baseType: !192, size: 32, offset: 2400)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "zendownfac", scope: !449, file: !161, line: 93, baseType: !192, size: 32, offset: 2432)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "blendfac", scope: !449, file: !161, line: 93, baseType: !192, size: 32, offset: 2464)
!1356 = !{!1357}
!1357 = !DISubrange(count: 18)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !287, file: !288, line: 168, baseType: !530, size: 64, offset: 6144)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !287, file: !288, line: 169, baseType: !184, size: 64, offset: 6208)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !287, file: !288, line: 170, baseType: !1361, size: 64, offset: 6272)
!1361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1362, size: 64)
!1362 = !DICompositeType(tag: DW_TAG_structure_type, name: "Group", file: !201, line: 46, flags: DIFlagFwdDecl)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !287, file: !288, line: 171, baseType: !1128, size: 64, offset: 6336)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "friction", scope: !287, file: !288, line: 174, baseType: !192, size: 32, offset: 6400)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "fh", scope: !287, file: !288, line: 174, baseType: !192, size: 32, offset: 6432)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "reflect", scope: !287, file: !288, line: 174, baseType: !192, size: 32, offset: 6464)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "fhdist", scope: !287, file: !288, line: 175, baseType: !192, size: 32, offset: 6496)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "xyfrict", scope: !287, file: !288, line: 175, baseType: !192, size: 32, offset: 6528)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "dynamode", scope: !287, file: !288, line: 176, baseType: !48, size: 16, offset: 6560)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !287, file: !288, line: 176, baseType: !48, size: 16, offset: 6576)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "sss_radius", scope: !287, file: !288, line: 179, baseType: !228, size: 96, offset: 6592)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "sss_col", scope: !287, file: !288, line: 179, baseType: !228, size: 96, offset: 6688)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "sss_error", scope: !287, file: !288, line: 180, baseType: !192, size: 32, offset: 6784)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "sss_scale", scope: !287, file: !288, line: 180, baseType: !192, size: 32, offset: 6816)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "sss_ior", scope: !287, file: !288, line: 180, baseType: !192, size: 32, offset: 6848)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "sss_colfac", scope: !287, file: !288, line: 181, baseType: !192, size: 32, offset: 6880)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "sss_texfac", scope: !287, file: !288, line: 181, baseType: !192, size: 32, offset: 6912)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "sss_front", scope: !287, file: !288, line: 182, baseType: !192, size: 32, offset: 6944)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "sss_back", scope: !287, file: !288, line: 182, baseType: !192, size: 32, offset: 6976)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "sss_flag", scope: !287, file: !288, line: 183, baseType: !48, size: 16, offset: 7008)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "sss_preset", scope: !287, file: !288, line: 183, baseType: !48, size: 16, offset: 7024)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "mapto_textured", scope: !287, file: !288, line: 185, baseType: !22, size: 32, offset: 7040)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "shadowonly_flag", scope: !287, file: !288, line: 186, baseType: !48, size: 16, offset: 7072)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !287, file: !288, line: 187, baseType: !48, size: 16, offset: 7088)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "line_col", scope: !287, file: !288, line: 190, baseType: !404, size: 128, offset: 7104)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "line_priority", scope: !287, file: !288, line: 191, baseType: !48, size: 16, offset: 7232)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "vcol_alpha", scope: !287, file: !288, line: 192, baseType: !48, size: 16, offset: 7248)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "paint_active_slot", scope: !287, file: !288, line: 195, baseType: !48, size: 16, offset: 7264)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "paint_clone_slot", scope: !287, file: !288, line: 196, baseType: !48, size: 16, offset: 7280)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "tot_slots", scope: !287, file: !288, line: 197, baseType: !48, size: 16, offset: 7296)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !287, file: !288, line: 198, baseType: !1221, size: 48, offset: 7312)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "texpaintslot", scope: !287, file: !288, line: 200, baseType: !1393, size: 64, offset: 7360)
!1393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1394, size: 64)
!1394 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "TexPaintSlot", file: !288, line: 86, size: 192, elements: !1395)
!1395 = !{!1396, !1397, !1398, !1399}
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !1394, file: !288, line: 87, baseType: !1091, size: 64)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "uvname", scope: !1394, file: !288, line: 88, baseType: !822, size: 64, offset: 64)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1394, file: !288, line: 89, baseType: !22, size: 32, offset: 128)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1394, file: !288, line: 90, baseType: !22, size: 32, offset: 160)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "gpumaterial", scope: !287, file: !288, line: 202, baseType: !58, size: 128, offset: 7424)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "matbits", scope: !164, file: !165, line: 151, baseType: !822, size: 64, offset: 3584)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "totcol", scope: !164, file: !165, line: 152, baseType: !22, size: 32, offset: 3648)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "actcol", scope: !164, file: !165, line: 153, baseType: !22, size: 32, offset: 3680)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !164, file: !165, line: 156, baseType: !228, size: 96, offset: 3712)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "dloc", scope: !164, file: !165, line: 156, baseType: !228, size: 96, offset: 3808)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "orig", scope: !164, file: !165, line: 156, baseType: !228, size: 96, offset: 3904)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !164, file: !165, line: 157, baseType: !228, size: 96, offset: 4000)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "dsize", scope: !164, file: !165, line: 158, baseType: !228, size: 96, offset: 4096)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "dscale", scope: !164, file: !165, line: 159, baseType: !228, size: 96, offset: 4192)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !164, file: !165, line: 160, baseType: !228, size: 96, offset: 4288)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "drot", scope: !164, file: !165, line: 160, baseType: !228, size: 96, offset: 4384)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "quat", scope: !164, file: !165, line: 161, baseType: !404, size: 128, offset: 4480)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "dquat", scope: !164, file: !165, line: 161, baseType: !404, size: 128, offset: 4608)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "rotAxis", scope: !164, file: !165, line: 162, baseType: !228, size: 96, offset: 4736)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "drotAxis", scope: !164, file: !165, line: 162, baseType: !228, size: 96, offset: 4832)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "rotAngle", scope: !164, file: !165, line: 163, baseType: !192, size: 32, offset: 4928)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "drotAngle", scope: !164, file: !165, line: 163, baseType: !192, size: 32, offset: 4960)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "obmat", scope: !164, file: !165, line: 164, baseType: !1180, size: 512, offset: 4992)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "parentinv", scope: !164, file: !165, line: 165, baseType: !1180, size: 512, offset: 5504)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "constinv", scope: !164, file: !165, line: 166, baseType: !1180, size: 512, offset: 6016)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !164, file: !165, line: 167, baseType: !1180, size: 512, offset: 6528)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "imat_ren", scope: !164, file: !165, line: 176, baseType: !1180, size: 512, offset: 7040)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !164, file: !165, line: 178, baseType: !224, size: 32, offset: 7552)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !164, file: !165, line: 180, baseType: !48, size: 16, offset: 7584)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "colbits", scope: !164, file: !165, line: 181, baseType: !48, size: 16, offset: 7600)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "transflag", scope: !164, file: !165, line: 183, baseType: !48, size: 16, offset: 7616)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "protectflag", scope: !164, file: !165, line: 183, baseType: !48, size: 16, offset: 7632)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "trackflag", scope: !164, file: !165, line: 184, baseType: !48, size: 16, offset: 7648)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "upflag", scope: !164, file: !165, line: 184, baseType: !48, size: 16, offset: 7664)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "nlaflag", scope: !164, file: !165, line: 185, baseType: !48, size: 16, offset: 7680)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "ipoflag", scope: !164, file: !165, line: 186, baseType: !48, size: 16, offset: 7696)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "scaflag", scope: !164, file: !165, line: 187, baseType: !48, size: 16, offset: 7712)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "scavisflag", scope: !164, file: !165, line: 188, baseType: !14, size: 8, offset: 7728)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "depsflag", scope: !164, file: !165, line: 189, baseType: !14, size: 8, offset: 7736)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "dupon", scope: !164, file: !165, line: 192, baseType: !22, size: 32, offset: 7744)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "dupoff", scope: !164, file: !165, line: 192, baseType: !22, size: 32, offset: 7776)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "dupsta", scope: !164, file: !165, line: 192, baseType: !22, size: 32, offset: 7808)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "dupend", scope: !164, file: !165, line: 192, baseType: !22, size: 32, offset: 7840)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !164, file: !165, line: 194, baseType: !22, size: 32, offset: 7872)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "mass", scope: !164, file: !165, line: 202, baseType: !192, size: 32, offset: 7904)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "damping", scope: !164, file: !165, line: 202, baseType: !192, size: 32, offset: 7936)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "inertia", scope: !164, file: !165, line: 202, baseType: !192, size: 32, offset: 7968)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "formfactor", scope: !164, file: !165, line: 211, baseType: !192, size: 32, offset: 8000)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "rdamping", scope: !164, file: !165, line: 212, baseType: !192, size: 32, offset: 8032)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !164, file: !165, line: 213, baseType: !192, size: 32, offset: 8064)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "max_vel", scope: !164, file: !165, line: 214, baseType: !192, size: 32, offset: 8096)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "min_vel", scope: !164, file: !165, line: 215, baseType: !192, size: 32, offset: 8128)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "obstacleRad", scope: !164, file: !165, line: 216, baseType: !192, size: 32, offset: 8160)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "step_height", scope: !164, file: !165, line: 219, baseType: !192, size: 32, offset: 8192)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "jump_speed", scope: !164, file: !165, line: 220, baseType: !192, size: 32, offset: 8224)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "fall_speed", scope: !164, file: !165, line: 221, baseType: !192, size: 32, offset: 8256)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "col_group", scope: !164, file: !165, line: 224, baseType: !1453, size: 16, offset: 8288)
!1453 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "col_mask", scope: !164, file: !165, line: 224, baseType: !1453, size: 16, offset: 8304)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "rotmode", scope: !164, file: !165, line: 226, baseType: !48, size: 16, offset: 8320)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "boundtype", scope: !164, file: !165, line: 228, baseType: !14, size: 8, offset: 8336)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "collision_boundtype", scope: !164, file: !165, line: 229, baseType: !14, size: 8, offset: 8344)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "dtx", scope: !164, file: !165, line: 231, baseType: !48, size: 16, offset: 8352)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "dt", scope: !164, file: !165, line: 232, baseType: !14, size: 8, offset: 8368)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "empty_drawtype", scope: !164, file: !165, line: 233, baseType: !14, size: 8, offset: 8376)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "empty_drawsize", scope: !164, file: !165, line: 234, baseType: !192, size: 32, offset: 8384)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "dupfacesca", scope: !164, file: !165, line: 235, baseType: !192, size: 32, offset: 8416)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !164, file: !165, line: 237, baseType: !58, size: 128, offset: 8448)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "sensors", scope: !164, file: !165, line: 238, baseType: !58, size: 128, offset: 8576)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "controllers", scope: !164, file: !165, line: 239, baseType: !58, size: 128, offset: 8704)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "actuators", scope: !164, file: !165, line: 240, baseType: !58, size: 128, offset: 8832)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "sf", scope: !164, file: !165, line: 242, baseType: !192, size: 32, offset: 8960)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !164, file: !165, line: 244, baseType: !48, size: 16, offset: 8992)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "actdef", scope: !164, file: !165, line: 245, baseType: !1453, size: 16, offset: 9008)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !164, file: !165, line: 246, baseType: !404, size: 128, offset: 9024)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "gameflag", scope: !164, file: !165, line: 248, baseType: !22, size: 32, offset: 9152)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "gameflag2", scope: !164, file: !165, line: 249, baseType: !22, size: 32, offset: 9184)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "bsoft", scope: !164, file: !165, line: 251, baseType: !1474, size: 64, offset: 9216)
!1474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1475, size: 64)
!1475 = !DICompositeType(tag: DW_TAG_structure_type, name: "BulletSoftBody", file: !165, line: 251, flags: DIFlagFwdDecl)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "restrictflag", scope: !164, file: !165, line: 253, baseType: !14, size: 8, offset: 9280)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !164, file: !165, line: 254, baseType: !14, size: 8, offset: 9288)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "softflag", scope: !164, file: !165, line: 255, baseType: !48, size: 16, offset: 9296)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "anisotropicFriction", scope: !164, file: !165, line: 256, baseType: !228, size: 96, offset: 9312)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "constraints", scope: !164, file: !165, line: 258, baseType: !58, size: 128, offset: 9408)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "nlastrips", scope: !164, file: !165, line: 259, baseType: !58, size: 128, offset: 9536)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "hooks", scope: !164, file: !165, line: 260, baseType: !58, size: 128, offset: 9664)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "particlesystem", scope: !164, file: !165, line: 261, baseType: !58, size: 128, offset: 9792)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "pd", scope: !164, file: !165, line: 263, baseType: !1485, size: 64, offset: 9920)
!1485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1486, size: 64)
!1486 = !DICompositeType(tag: DW_TAG_structure_type, name: "PartDeflect", file: !165, line: 52, flags: DIFlagFwdDecl)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !164, file: !165, line: 264, baseType: !1488, size: 64, offset: 9984)
!1488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1489, size: 64)
!1489 = !DICompositeType(tag: DW_TAG_structure_type, name: "SoftBody", file: !165, line: 53, flags: DIFlagFwdDecl)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "dup_group", scope: !164, file: !165, line: 265, baseType: !1361, size: 64, offset: 10048)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "body_type", scope: !164, file: !165, line: 267, baseType: !14, size: 8, offset: 10112)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "shapeflag", scope: !164, file: !165, line: 268, baseType: !14, size: 8, offset: 10120)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "shapenr", scope: !164, file: !165, line: 269, baseType: !48, size: 16, offset: 10128)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "smoothresh", scope: !164, file: !165, line: 270, baseType: !192, size: 32, offset: 10144)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "fluidsimSettings", scope: !164, file: !165, line: 272, baseType: !1496, size: 64, offset: 10176)
!1496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1497, size: 64)
!1497 = !DICompositeType(tag: DW_TAG_structure_type, name: "FluidsimSettings", file: !165, line: 54, flags: DIFlagFwdDecl)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "curve_cache", scope: !164, file: !165, line: 275, baseType: !1499, size: 64, offset: 10240)
!1499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1500, size: 64)
!1500 = !DICompositeType(tag: DW_TAG_structure_type, name: "CurveCache", file: !165, line: 275, flags: DIFlagFwdDecl)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "derivedDeform", scope: !164, file: !165, line: 277, baseType: !1502, size: 64, offset: 10304)
!1502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1503, size: 64)
!1503 = !DICompositeType(tag: DW_TAG_structure_type, name: "DerivedMesh", file: !165, line: 56, flags: DIFlagFwdDecl)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "derivedFinal", scope: !164, file: !165, line: 277, baseType: !1502, size: 64, offset: 10368)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "lastDataMask", scope: !164, file: !165, line: 278, baseType: !1506, size: 64, offset: 10432)
!1506 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !1507, line: 27, baseType: !1508)
!1507 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h", directory: "")
!1508 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint64_t", file: !1509, line: 45, baseType: !1510)
!1509 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!1510 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask", scope: !164, file: !165, line: 279, baseType: !1506, size: 64, offset: 10496)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !164, file: !165, line: 280, baseType: !224, size: 32, offset: 10560)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "init_state", scope: !164, file: !165, line: 281, baseType: !224, size: 32, offset: 10592)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "gpulamp", scope: !164, file: !165, line: 283, baseType: !58, size: 128, offset: 10624)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "pc_ids", scope: !164, file: !165, line: 284, baseType: !58, size: 128, offset: 10752)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "duplilist", scope: !164, file: !165, line: 285, baseType: !1517, size: 64, offset: 10880)
!1517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !58, size: 64)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_object", scope: !164, file: !165, line: 287, baseType: !1519, size: 64, offset: 10944)
!1519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1520, size: 64)
!1520 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyOb", file: !165, line: 59, flags: DIFlagFwdDecl)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_constraint", scope: !164, file: !165, line: 288, baseType: !1522, size: 64, offset: 11008)
!1522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1523, size: 64)
!1523 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyCon", file: !165, line: 288, flags: DIFlagFwdDecl)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "ima_ofs", scope: !164, file: !165, line: 290, baseType: !769, size: 64, offset: 11072)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "iuser", scope: !164, file: !165, line: 291, baseType: !1526, size: 64, offset: 11136)
!1526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1527, size: 64)
!1527 = !DIDerivedType(tag: DW_TAG_typedef, name: "ImageUser", file: !513, line: 65, baseType: !512)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "lodlevels", scope: !164, file: !165, line: 293, baseType: !58, size: 128, offset: 11200)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "currentlod", scope: !164, file: !165, line: 294, baseType: !1530, size: 64, offset: 11328)
!1530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1531, size: 64)
!1531 = !DIDerivedType(tag: DW_TAG_typedef, name: "LodLevel", file: !165, line: 113, baseType: !1532)
!1532 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LodLevel", file: !165, line: 108, size: 256, elements: !1533)
!1533 = !{!1534, !1536, !1537, !1538, !1539}
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1532, file: !165, line: 109, baseType: !1535, size: 64)
!1535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1532, size: 64)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1532, file: !165, line: 109, baseType: !1535, size: 64, offset: 64)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !1532, file: !165, line: 110, baseType: !163, size: 64, offset: 128)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1532, file: !165, line: 111, baseType: !22, size: 32, offset: 192)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "distance", scope: !1532, file: !165, line: 112, baseType: !192, size: 32, offset: 224)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "world", scope: !154, file: !155, line: 1221, baseType: !1541, size: 64, offset: 1088)
!1541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1542, size: 64)
!1542 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "World", file: !1543, line: 52, size: 4224, elements: !1544)
!1543 = !DIFile(filename: "blender/source/blender/makesdna/DNA_world_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1544 = !{!1545, !1546, !1547, !1548, !1549, !1550, !1551, !1552, !1553, !1554, !1555, !1556, !1557, !1558, !1559, !1560, !1561, !1562, !1563, !1564, !1565, !1566, !1567, !1568, !1569, !1570, !1571, !1572, !1573, !1574, !1575, !1576, !1577, !1578, !1579, !1580, !1581, !1582, !1583, !1584, !1585, !1586, !1587, !1588, !1589, !1590, !1591, !1592, !1593, !1594, !1595, !1596, !1597, !1598, !1599, !1600, !1601, !1602, !1603, !1604, !1605, !1606, !1607, !1608, !1609, !1610, !1611, !1612, !1613, !1614, !1615, !1616, !1617, !1618, !1619, !1620}
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1542, file: !1543, line: 53, baseType: !113, size: 960)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !1542, file: !1543, line: 54, baseType: !159, size: 64, offset: 960)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "colormodel", scope: !1542, file: !1543, line: 56, baseType: !48, size: 16, offset: 1024)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "totex", scope: !1542, file: !1543, line: 56, baseType: !48, size: 16, offset: 1040)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "texact", scope: !1542, file: !1543, line: 57, baseType: !48, size: 16, offset: 1056)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "mistype", scope: !1542, file: !1543, line: 57, baseType: !48, size: 16, offset: 1072)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "horr", scope: !1542, file: !1543, line: 59, baseType: !192, size: 32, offset: 1088)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "horg", scope: !1542, file: !1543, line: 59, baseType: !192, size: 32, offset: 1120)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "horb", scope: !1542, file: !1543, line: 59, baseType: !192, size: 32, offset: 1152)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "zenr", scope: !1542, file: !1543, line: 60, baseType: !192, size: 32, offset: 1184)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "zeng", scope: !1542, file: !1543, line: 60, baseType: !192, size: 32, offset: 1216)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "zenb", scope: !1542, file: !1543, line: 60, baseType: !192, size: 32, offset: 1248)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "ambr", scope: !1542, file: !1543, line: 61, baseType: !192, size: 32, offset: 1280)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "ambg", scope: !1542, file: !1543, line: 61, baseType: !192, size: 32, offset: 1312)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "ambb", scope: !1542, file: !1543, line: 61, baseType: !192, size: 32, offset: 1344)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "exposure", scope: !1542, file: !1543, line: 68, baseType: !192, size: 32, offset: 1376)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "exp", scope: !1542, file: !1543, line: 68, baseType: !192, size: 32, offset: 1408)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !1542, file: !1543, line: 68, baseType: !192, size: 32, offset: 1440)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "linfac", scope: !1542, file: !1543, line: 69, baseType: !192, size: 32, offset: 1472)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "logfac", scope: !1542, file: !1543, line: 69, baseType: !192, size: 32, offset: 1504)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !1542, file: !1543, line: 74, baseType: !192, size: 32, offset: 1536)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "activityBoxRadius", scope: !1542, file: !1543, line: 79, baseType: !192, size: 32, offset: 1568)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "skytype", scope: !1542, file: !1543, line: 81, baseType: !48, size: 16, offset: 1600)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1542, file: !1543, line: 91, baseType: !48, size: 16, offset: 1616)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "occlusionRes", scope: !1542, file: !1543, line: 92, baseType: !48, size: 16, offset: 1632)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "physicsEngine", scope: !1542, file: !1543, line: 93, baseType: !48, size: 16, offset: 1648)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "ticrate", scope: !1542, file: !1543, line: 94, baseType: !48, size: 16, offset: 1664)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "maxlogicstep", scope: !1542, file: !1543, line: 94, baseType: !48, size: 16, offset: 1680)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "physubstep", scope: !1542, file: !1543, line: 94, baseType: !48, size: 16, offset: 1696)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "maxphystep", scope: !1542, file: !1543, line: 94, baseType: !48, size: 16, offset: 1712)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "misi", scope: !1542, file: !1543, line: 96, baseType: !192, size: 32, offset: 1728)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "miststa", scope: !1542, file: !1543, line: 96, baseType: !192, size: 32, offset: 1760)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "mistdist", scope: !1542, file: !1543, line: 96, baseType: !192, size: 32, offset: 1792)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "misthi", scope: !1542, file: !1543, line: 96, baseType: !192, size: 32, offset: 1824)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "starr", scope: !1542, file: !1543, line: 98, baseType: !192, size: 32, offset: 1856)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "starg", scope: !1542, file: !1543, line: 98, baseType: !192, size: 32, offset: 1888)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "starb", scope: !1542, file: !1543, line: 98, baseType: !192, size: 32, offset: 1920)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "stark", scope: !1542, file: !1543, line: 98, baseType: !192, size: 32, offset: 1952)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "starsize", scope: !1542, file: !1543, line: 99, baseType: !192, size: 32, offset: 1984)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "starmindist", scope: !1542, file: !1543, line: 99, baseType: !192, size: 32, offset: 2016)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "stardist", scope: !1542, file: !1543, line: 100, baseType: !192, size: 32, offset: 2048)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "starcolnoise", scope: !1542, file: !1543, line: 100, baseType: !192, size: 32, offset: 2080)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "dofsta", scope: !1542, file: !1543, line: 103, baseType: !48, size: 16, offset: 2112)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "dofend", scope: !1542, file: !1543, line: 103, baseType: !48, size: 16, offset: 2128)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "dofmin", scope: !1542, file: !1543, line: 103, baseType: !48, size: 16, offset: 2144)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "dofmax", scope: !1542, file: !1543, line: 103, baseType: !48, size: 16, offset: 2160)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "aodist", scope: !1542, file: !1543, line: 106, baseType: !192, size: 32, offset: 2176)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "aodistfac", scope: !1542, file: !1543, line: 106, baseType: !192, size: 32, offset: 2208)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "aoenergy", scope: !1542, file: !1543, line: 106, baseType: !192, size: 32, offset: 2240)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "aobias", scope: !1542, file: !1543, line: 106, baseType: !192, size: 32, offset: 2272)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "aomode", scope: !1542, file: !1543, line: 107, baseType: !48, size: 16, offset: 2304)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "aosamp", scope: !1542, file: !1543, line: 107, baseType: !48, size: 16, offset: 2320)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "aomix", scope: !1542, file: !1543, line: 107, baseType: !48, size: 16, offset: 2336)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "aocolor", scope: !1542, file: !1543, line: 107, baseType: !48, size: 16, offset: 2352)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "ao_adapt_thresh", scope: !1542, file: !1543, line: 108, baseType: !192, size: 32, offset: 2368)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "ao_adapt_speed_fac", scope: !1542, file: !1543, line: 108, baseType: !192, size: 32, offset: 2400)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "ao_approx_error", scope: !1542, file: !1543, line: 109, baseType: !192, size: 32, offset: 2432)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "ao_approx_correction", scope: !1542, file: !1543, line: 109, baseType: !192, size: 32, offset: 2464)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "ao_indirect_energy", scope: !1542, file: !1543, line: 110, baseType: !192, size: 32, offset: 2496)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "ao_env_energy", scope: !1542, file: !1543, line: 110, baseType: !192, size: 32, offset: 2528)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "ao_pad2", scope: !1542, file: !1543, line: 110, baseType: !192, size: 32, offset: 2560)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "ao_indirect_bounces", scope: !1542, file: !1543, line: 111, baseType: !48, size: 16, offset: 2592)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "ao_pad", scope: !1542, file: !1543, line: 111, baseType: !48, size: 16, offset: 2608)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "ao_samp_method", scope: !1542, file: !1543, line: 112, baseType: !48, size: 16, offset: 2624)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "ao_gather_method", scope: !1542, file: !1543, line: 112, baseType: !48, size: 16, offset: 2640)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "ao_approx_passes", scope: !1542, file: !1543, line: 112, baseType: !48, size: 16, offset: 2656)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1542, file: !1543, line: 115, baseType: !48, size: 16, offset: 2672)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "aosphere", scope: !1542, file: !1543, line: 118, baseType: !630, size: 64, offset: 2688)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "aotables", scope: !1542, file: !1543, line: 118, baseType: !630, size: 64, offset: 2752)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !1542, file: !1543, line: 121, baseType: !184, size: 64, offset: 2816)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "mtex", scope: !1542, file: !1543, line: 122, baseType: !447, size: 1152, offset: 2880)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "pr_texture", scope: !1542, file: !1543, line: 123, baseType: !48, size: 16, offset: 4032)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !1542, file: !1543, line: 123, baseType: !48, size: 16, offset: 4048)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1542, file: !1543, line: 123, baseType: !726, size: 32, offset: 4064)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !1542, file: !1543, line: 126, baseType: !1128, size: 64, offset: 4096)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !1542, file: !1543, line: 129, baseType: !530, size: 64, offset: 4160)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !154, file: !155, line: 1223, baseType: !153, size: 64, offset: 1152)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !154, file: !155, line: 1225, baseType: !58, size: 128, offset: 1216)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "basact", scope: !154, file: !155, line: 1226, baseType: !1624, size: 64, offset: 1344)
!1624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1625, size: 64)
!1625 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Base", file: !155, line: 69, size: 320, elements: !1626)
!1626 = !{!1627, !1628, !1629, !1630, !1631, !1632, !1633, !1634}
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1625, file: !155, line: 70, baseType: !1624, size: 64)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1625, file: !155, line: 70, baseType: !1624, size: 64, offset: 64)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !1625, file: !155, line: 71, baseType: !224, size: 32, offset: 128)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "selcol", scope: !1625, file: !155, line: 71, baseType: !224, size: 32, offset: 160)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1625, file: !155, line: 72, baseType: !22, size: 32, offset: 192)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "sx", scope: !1625, file: !155, line: 73, baseType: !48, size: 16, offset: 224)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "sy", scope: !1625, file: !155, line: 73, baseType: !48, size: 16, offset: 240)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1625, file: !155, line: 74, baseType: !163, size: 64, offset: 256)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "obedit", scope: !154, file: !155, line: 1227, baseType: !163, size: 64, offset: 1408)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !154, file: !155, line: 1229, baseType: !228, size: 96, offset: 1472)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "twcent", scope: !154, file: !155, line: 1230, baseType: !228, size: 96, offset: 1568)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "twmin", scope: !154, file: !155, line: 1231, baseType: !228, size: 96, offset: 1664)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "twmax", scope: !154, file: !155, line: 1231, baseType: !228, size: 96, offset: 1760)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !154, file: !155, line: 1233, baseType: !224, size: 32, offset: 1856)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "layact", scope: !154, file: !155, line: 1234, baseType: !22, size: 32, offset: 1888)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "lay_updated", scope: !154, file: !155, line: 1235, baseType: !224, size: 32, offset: 1920)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !154, file: !155, line: 1237, baseType: !48, size: 16, offset: 1952)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !154, file: !155, line: 1239, baseType: !14, size: 8, offset: 1968)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !154, file: !155, line: 1240, baseType: !421, size: 8, offset: 1976)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !154, file: !155, line: 1242, baseType: !530, size: 64, offset: 1984)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "ed", scope: !154, file: !155, line: 1244, baseType: !1648, size: 64, offset: 2048)
!1648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1649, size: 64)
!1649 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Editing", file: !1650, line: 200, size: 17024, elements: !1651)
!1650 = !DIFile(filename: "blender/source/blender/makesdna/DNA_sequence_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1651 = !{!1652, !1653, !1654, !1655, !1984, !1985, !1986, !1987, !1988, !1989, !1990}
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "seqbasep", scope: !1649, file: !1650, line: 201, baseType: !1517, size: 64)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "seqbase", scope: !1649, file: !1650, line: 202, baseType: !58, size: 128, offset: 64)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "metastack", scope: !1649, file: !1650, line: 203, baseType: !58, size: 128, offset: 192)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "act_seq", scope: !1649, file: !1650, line: 206, baseType: !1656, size: 64, offset: 320)
!1656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1657, size: 64)
!1657 = !DIDerivedType(tag: DW_TAG_typedef, name: "Sequence", file: !1650, line: 190, baseType: !1658)
!1658 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Sequence", file: !1650, line: 126, size: 2816, elements: !1659)
!1659 = !{!1660, !1662, !1663, !1664, !1665, !1666, !1667, !1668, !1669, !1670, !1671, !1672, !1673, !1674, !1675, !1676, !1677, !1678, !1679, !1680, !1681, !1682, !1683, !1684, !1685, !1748, !1749, !1750, !1751, !1956, !1959, !1960, !1961, !1962, !1963, !1964, !1965, !1966, !1969, !1970, !1971, !1972, !1973, !1974, !1975, !1976, !1977, !1978, !1979, !1980, !1981, !1983}
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1658, file: !1650, line: 127, baseType: !1661, size: 64)
!1661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1658, size: 64)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1658, file: !1650, line: 127, baseType: !1661, size: 64, offset: 64)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "tmp", scope: !1658, file: !1650, line: 128, baseType: !56, size: 64, offset: 128)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "lib", scope: !1658, file: !1650, line: 129, baseType: !56, size: 64, offset: 192)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1658, file: !1650, line: 130, baseType: !33, size: 512, offset: 256)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1658, file: !1650, line: 132, baseType: !22, size: 32, offset: 768)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1658, file: !1650, line: 132, baseType: !22, size: 32, offset: 800)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1658, file: !1650, line: 133, baseType: !22, size: 32, offset: 832)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1658, file: !1650, line: 134, baseType: !22, size: 32, offset: 864)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "startofs", scope: !1658, file: !1650, line: 134, baseType: !22, size: 32, offset: 896)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "endofs", scope: !1658, file: !1650, line: 134, baseType: !22, size: 32, offset: 928)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "startstill", scope: !1658, file: !1650, line: 135, baseType: !22, size: 32, offset: 960)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "endstill", scope: !1658, file: !1650, line: 135, baseType: !22, size: 32, offset: 992)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "machine", scope: !1658, file: !1650, line: 136, baseType: !22, size: 32, offset: 1024)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1658, file: !1650, line: 136, baseType: !22, size: 32, offset: 1056)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "startdisp", scope: !1658, file: !1650, line: 137, baseType: !22, size: 32, offset: 1088)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "enddisp", scope: !1658, file: !1650, line: 137, baseType: !22, size: 32, offset: 1120)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "sat", scope: !1658, file: !1650, line: 138, baseType: !192, size: 32, offset: 1152)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "mul", scope: !1658, file: !1650, line: 139, baseType: !192, size: 32, offset: 1184)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "handsize", scope: !1658, file: !1650, line: 139, baseType: !192, size: 32, offset: 1216)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "anim_preseek", scope: !1658, file: !1650, line: 141, baseType: !48, size: 16, offset: 1248)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "streamindex", scope: !1658, file: !1650, line: 142, baseType: !48, size: 16, offset: 1264)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "multicam_source", scope: !1658, file: !1650, line: 143, baseType: !22, size: 32, offset: 1280)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "clip_flag", scope: !1658, file: !1650, line: 144, baseType: !22, size: 32, offset: 1312)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "strip", scope: !1658, file: !1650, line: 146, baseType: !1686, size: 64, offset: 1344)
!1686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1687, size: 64)
!1687 = !DIDerivedType(tag: DW_TAG_typedef, name: "Strip", file: !1650, line: 114, baseType: !1688)
!1688 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Strip", file: !1650, line: 99, size: 7232, elements: !1689)
!1689 = !{!1690, !1692, !1693, !1694, !1695, !1696, !1697, !1705, !1709, !1721, !1730, !1737, !1747}
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1688, file: !1650, line: 100, baseType: !1691, size: 64)
!1691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1688, size: 64)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1688, file: !1650, line: 100, baseType: !1691, size: 64, offset: 64)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "us", scope: !1688, file: !1650, line: 101, baseType: !22, size: 32, offset: 128)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !1688, file: !1650, line: 101, baseType: !22, size: 32, offset: 160)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "startstill", scope: !1688, file: !1650, line: 102, baseType: !22, size: 32, offset: 192)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "endstill", scope: !1688, file: !1650, line: 102, baseType: !22, size: 32, offset: 224)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "stripdata", scope: !1688, file: !1650, line: 103, baseType: !1698, size: 64, offset: 256)
!1698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1699, size: 64)
!1699 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripElem", file: !1650, line: 59, baseType: !1700)
!1700 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripElem", file: !1650, line: 56, size: 2112, elements: !1701)
!1701 = !{!1702, !1703, !1704}
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1700, file: !1650, line: 57, baseType: !544, size: 2048)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "orig_width", scope: !1700, file: !1650, line: 58, baseType: !22, size: 32, offset: 2048)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "orig_height", scope: !1700, file: !1650, line: 58, baseType: !22, size: 32, offset: 2080)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !1688, file: !1650, line: 106, baseType: !1706, size: 6144, offset: 320)
!1706 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 6144, elements: !1707)
!1707 = !{!1708}
!1708 = !DISubrange(count: 768)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !1688, file: !1650, line: 107, baseType: !1710, size: 64, offset: 6464)
!1710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1711, size: 64)
!1711 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripProxy", file: !1650, line: 97, baseType: !1712)
!1712 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripProxy", file: !1650, line: 83, size: 8320, elements: !1713)
!1713 = !{!1714, !1715, !1716, !1717, !1718, !1719, !1720}
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !1712, file: !1650, line: 84, baseType: !1706, size: 6144)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !1712, file: !1650, line: 87, baseType: !544, size: 2048, offset: 6144)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !1712, file: !1650, line: 88, baseType: !1103, size: 64, offset: 8192)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "tc", scope: !1712, file: !1650, line: 90, baseType: !48, size: 16, offset: 8256)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1712, file: !1650, line: 92, baseType: !48, size: 16, offset: 8272)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "build_size_flags", scope: !1712, file: !1650, line: 93, baseType: !48, size: 16, offset: 8288)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "build_tc_flags", scope: !1712, file: !1650, line: 95, baseType: !48, size: 16, offset: 8304)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "crop", scope: !1688, file: !1650, line: 108, baseType: !1722, size: 64, offset: 6528)
!1722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1723, size: 64)
!1723 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripCrop", file: !1650, line: 66, baseType: !1724)
!1724 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripCrop", file: !1650, line: 61, size: 128, elements: !1725)
!1725 = !{!1726, !1727, !1728, !1729}
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !1724, file: !1650, line: 62, baseType: !22, size: 32)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "bottom", scope: !1724, file: !1650, line: 63, baseType: !22, size: 32, offset: 32)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "left", scope: !1724, file: !1650, line: 64, baseType: !22, size: 32, offset: 64)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "right", scope: !1724, file: !1650, line: 65, baseType: !22, size: 32, offset: 96)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "transform", scope: !1688, file: !1650, line: 109, baseType: !1731, size: 64, offset: 6592)
!1731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1732, size: 64)
!1732 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripTransform", file: !1650, line: 71, baseType: !1733)
!1733 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripTransform", file: !1650, line: 68, size: 64, elements: !1734)
!1734 = !{!1735, !1736}
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "xofs", scope: !1733, file: !1650, line: 69, baseType: !22, size: 32)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "yofs", scope: !1733, file: !1650, line: 70, baseType: !22, size: 32, offset: 32)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "color_balance", scope: !1688, file: !1650, line: 110, baseType: !1738, size: 64, offset: 6656)
!1738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1739, size: 64)
!1739 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripColorBalance", file: !1650, line: 81, baseType: !1740)
!1740 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripColorBalance", file: !1650, line: 73, size: 352, elements: !1741)
!1741 = !{!1742, !1743, !1744, !1745, !1746}
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "lift", scope: !1740, file: !1650, line: 74, baseType: !228, size: 96)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !1740, file: !1650, line: 75, baseType: !228, size: 96, offset: 96)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "gain", scope: !1740, file: !1650, line: 76, baseType: !228, size: 96, offset: 192)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1740, file: !1650, line: 77, baseType: !22, size: 32, offset: 288)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1740, file: !1650, line: 78, baseType: !22, size: 32, offset: 320)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !1688, file: !1650, line: 113, baseType: !1153, size: 512, offset: 6720)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !1658, file: !1650, line: 148, baseType: !184, size: 64, offset: 1408)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !1658, file: !1650, line: 151, baseType: !153, size: 64, offset: 1472)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "scene_camera", scope: !1658, file: !1650, line: 152, baseType: !163, size: 64, offset: 1536)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !1658, file: !1650, line: 153, baseType: !1752, size: 64, offset: 1600)
!1752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1753, size: 64)
!1753 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClip", file: !1754, line: 64, size: 19136, elements: !1755)
!1754 = !DIFile(filename: "blender/source/blender/makesdna/DNA_movieclip_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1755 = !{!1756, !1757, !1758, !1759, !1760, !1761, !1763, !1764, !1765, !1766, !1769, !1770, !1942, !1943, !1951, !1952, !1953, !1954, !1955}
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1753, file: !1754, line: 65, baseType: !113, size: 960)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !1753, file: !1754, line: 66, baseType: !159, size: 64, offset: 960)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1753, file: !1754, line: 68, baseType: !131, size: 8192, offset: 1024)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !1753, file: !1754, line: 70, baseType: !22, size: 32, offset: 9216)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !1753, file: !1754, line: 71, baseType: !22, size: 32, offset: 9248)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "lastsize", scope: !1753, file: !1754, line: 72, baseType: !1762, size: 64, offset: 9280)
!1762 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 64, elements: !727)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "aspx", scope: !1753, file: !1754, line: 74, baseType: !192, size: 32, offset: 9344)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "aspy", scope: !1753, file: !1754, line: 74, baseType: !192, size: 32, offset: 9376)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !1753, file: !1754, line: 76, baseType: !1103, size: 64, offset: 9408)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !1753, file: !1754, line: 77, baseType: !1767, size: 64, offset: 9472)
!1767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1768, size: 64)
!1768 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClipCache", file: !1754, line: 77, flags: DIFlagFwdDecl)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !1753, file: !1754, line: 78, baseType: !259, size: 64, offset: 9536)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "tracking", scope: !1753, file: !1754, line: 80, baseType: !1771, size: 2624, offset: 9600)
!1771 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTracking", file: !1772, line: 340, size: 2624, elements: !1773)
!1772 = !DIFile(filename: "blender/source/blender/makesdna/DNA_tracking_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1773 = !{!1774, !1802, !1820, !1821, !1822, !1837, !1895, !1896, !1922, !1923, !1924, !1925, !1931}
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "settings", scope: !1771, file: !1772, line: 341, baseType: !1775, size: 576)
!1775 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingSettings", file: !1772, line: 251, baseType: !1776)
!1776 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingSettings", file: !1772, line: 207, size: 576, elements: !1777)
!1777 = !{!1778, !1779, !1780, !1781, !1782, !1783, !1784, !1785, !1786, !1787, !1788, !1789, !1790, !1791, !1792, !1793, !1794, !1795, !1796, !1797, !1798, !1799, !1800, !1801}
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1776, file: !1772, line: 208, baseType: !22, size: 32)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "default_motion_model", scope: !1776, file: !1772, line: 211, baseType: !48, size: 16, offset: 32)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "default_algorithm_flag", scope: !1776, file: !1772, line: 212, baseType: !48, size: 16, offset: 48)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "default_minimum_correlation", scope: !1776, file: !1772, line: 213, baseType: !192, size: 32, offset: 64)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "default_pattern_size", scope: !1776, file: !1772, line: 214, baseType: !48, size: 16, offset: 96)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "default_search_size", scope: !1776, file: !1772, line: 215, baseType: !48, size: 16, offset: 112)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "default_frames_limit", scope: !1776, file: !1772, line: 216, baseType: !48, size: 16, offset: 128)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "default_margin", scope: !1776, file: !1772, line: 217, baseType: !48, size: 16, offset: 144)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "default_pattern_match", scope: !1776, file: !1772, line: 218, baseType: !48, size: 16, offset: 160)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "default_flag", scope: !1776, file: !1772, line: 219, baseType: !48, size: 16, offset: 176)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "default_weight", scope: !1776, file: !1772, line: 220, baseType: !192, size: 32, offset: 192)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "motion_flag", scope: !1776, file: !1772, line: 222, baseType: !48, size: 16, offset: 224)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "speed", scope: !1776, file: !1772, line: 225, baseType: !48, size: 16, offset: 240)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "keyframe1", scope: !1776, file: !1772, line: 228, baseType: !22, size: 32, offset: 256)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "keyframe2", scope: !1776, file: !1772, line: 229, baseType: !22, size: 32, offset: 288)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "reconstruction_flag", scope: !1776, file: !1772, line: 233, baseType: !22, size: 32, offset: 320)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "refine_camera_intrinsics", scope: !1776, file: !1772, line: 236, baseType: !48, size: 16, offset: 352)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1776, file: !1772, line: 236, baseType: !48, size: 16, offset: 368)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !1776, file: !1772, line: 241, baseType: !192, size: 32, offset: 384)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "clean_frames", scope: !1776, file: !1772, line: 244, baseType: !22, size: 32, offset: 416)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "clean_action", scope: !1776, file: !1772, line: 244, baseType: !22, size: 32, offset: 448)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "clean_error", scope: !1776, file: !1772, line: 245, baseType: !192, size: 32, offset: 480)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "object_distance", scope: !1776, file: !1772, line: 248, baseType: !192, size: 32, offset: 512)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1776, file: !1772, line: 250, baseType: !22, size: 32, offset: 544)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !1771, file: !1772, line: 342, baseType: !1803, size: 448, offset: 576)
!1803 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingCamera", file: !1772, line: 79, baseType: !1804)
!1804 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingCamera", file: !1772, line: 61, size: 448, elements: !1805)
!1805 = !{!1806, !1807, !1808, !1809, !1810, !1811, !1812, !1813, !1814, !1815, !1816, !1817, !1818, !1819}
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "intrinsics", scope: !1804, file: !1772, line: 62, baseType: !56, size: 64)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "distortion_model", scope: !1804, file: !1772, line: 64, baseType: !48, size: 16, offset: 64)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1804, file: !1772, line: 65, baseType: !48, size: 16, offset: 80)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "sensor_width", scope: !1804, file: !1772, line: 67, baseType: !192, size: 32, offset: 96)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_aspect", scope: !1804, file: !1772, line: 68, baseType: !192, size: 32, offset: 128)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "focal", scope: !1804, file: !1772, line: 69, baseType: !192, size: 32, offset: 160)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !1804, file: !1772, line: 70, baseType: !48, size: 16, offset: 192)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1804, file: !1772, line: 71, baseType: !48, size: 16, offset: 208)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "principal", scope: !1804, file: !1772, line: 72, baseType: !769, size: 64, offset: 224)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "k1", scope: !1804, file: !1772, line: 75, baseType: !192, size: 32, offset: 288)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "k2", scope: !1804, file: !1772, line: 75, baseType: !192, size: 32, offset: 320)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "k3", scope: !1804, file: !1772, line: 75, baseType: !192, size: 32, offset: 352)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "division_k1", scope: !1804, file: !1772, line: 78, baseType: !192, size: 32, offset: 384)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "division_k2", scope: !1804, file: !1772, line: 78, baseType: !192, size: 32, offset: 416)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "tracks", scope: !1771, file: !1772, line: 343, baseType: !58, size: 128, offset: 1024)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "plane_tracks", scope: !1771, file: !1772, line: 344, baseType: !58, size: 128, offset: 1152)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "reconstruction", scope: !1771, file: !1772, line: 345, baseType: !1823, size: 192, offset: 1280)
!1823 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingReconstruction", file: !1772, line: 278, baseType: !1824)
!1824 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingReconstruction", file: !1772, line: 270, size: 192, elements: !1825)
!1825 = !{!1826, !1827, !1828, !1829, !1830}
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1824, file: !1772, line: 271, baseType: !22, size: 32)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1824, file: !1772, line: 273, baseType: !192, size: 32, offset: 32)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "last_camera", scope: !1824, file: !1772, line: 275, baseType: !22, size: 32, offset: 64)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "camnr", scope: !1824, file: !1772, line: 276, baseType: !22, size: 32, offset: 96)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "cameras", scope: !1824, file: !1772, line: 277, baseType: !1831, size: 64, offset: 128)
!1831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1832, size: 64)
!1832 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieReconstructedCamera", file: !1772, line: 55, size: 576, elements: !1833)
!1833 = !{!1834, !1835, !1836}
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !1832, file: !1772, line: 56, baseType: !22, size: 32)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1832, file: !1772, line: 57, baseType: !192, size: 32, offset: 32)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !1832, file: !1772, line: 58, baseType: !1180, size: 512, offset: 64)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "stabilization", scope: !1771, file: !1772, line: 346, baseType: !1838, size: 384, offset: 1472)
!1838 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingStabilization", file: !1772, line: 268, baseType: !1839)
!1839 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingStabilization", file: !1772, line: 253, size: 384, elements: !1840)
!1840 = !{!1841, !1842, !1843, !1844, !1845, !1889, !1890, !1891, !1892, !1893, !1894}
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1839, file: !1772, line: 254, baseType: !22, size: 32)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "tot_track", scope: !1839, file: !1772, line: 255, baseType: !22, size: 32, offset: 32)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "act_track", scope: !1839, file: !1772, line: 255, baseType: !22, size: 32, offset: 64)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "maxscale", scope: !1839, file: !1772, line: 258, baseType: !192, size: 32, offset: 96)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "rot_track", scope: !1839, file: !1772, line: 259, baseType: !1846, size: 64, offset: 128)
!1846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1847, size: 64)
!1847 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingTrack", file: !1772, line: 164, baseType: !1848)
!1848 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingTrack", file: !1772, line: 108, size: 1664, elements: !1849)
!1849 = !{!1850, !1852, !1853, !1854, !1855, !1856, !1857, !1858, !1859, !1860, !1861, !1874, !1875, !1876, !1877, !1878, !1879, !1880, !1881, !1882, !1883, !1884, !1885, !1886, !1887, !1888}
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1848, file: !1772, line: 109, baseType: !1851, size: 64)
!1851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1848, size: 64)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1848, file: !1772, line: 109, baseType: !1851, size: 64, offset: 64)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1848, file: !1772, line: 111, baseType: !33, size: 512, offset: 128)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "pat_min", scope: !1848, file: !1772, line: 119, baseType: !769, size: 64, offset: 640)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "pat_max", scope: !1848, file: !1772, line: 119, baseType: !769, size: 64, offset: 704)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "search_min", scope: !1848, file: !1772, line: 125, baseType: !769, size: 64, offset: 768)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "search_max", scope: !1848, file: !1772, line: 125, baseType: !769, size: 64, offset: 832)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1848, file: !1772, line: 127, baseType: !769, size: 64, offset: 896)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "markersnr", scope: !1848, file: !1772, line: 130, baseType: !22, size: 32, offset: 960)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "last_marker", scope: !1848, file: !1772, line: 131, baseType: !22, size: 32, offset: 992)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !1848, file: !1772, line: 132, baseType: !1862, size: 64, offset: 1024)
!1862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1863, size: 64)
!1863 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingMarker", file: !1772, line: 106, baseType: !1864)
!1864 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingMarker", file: !1772, line: 81, size: 512, elements: !1865)
!1865 = !{!1866, !1867, !1870, !1871, !1872, !1873}
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1864, file: !1772, line: 82, baseType: !769, size: 64)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "pattern_corners", scope: !1864, file: !1772, line: 97, baseType: !1868, size: 256, offset: 64)
!1868 = !DICompositeType(tag: DW_TAG_array_type, baseType: !192, size: 256, elements: !1869)
!1869 = !{!406, !728}
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "search_min", scope: !1864, file: !1772, line: 102, baseType: !769, size: 64, offset: 320)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "search_max", scope: !1864, file: !1772, line: 102, baseType: !769, size: 64, offset: 384)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !1864, file: !1772, line: 104, baseType: !22, size: 32, offset: 448)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1864, file: !1772, line: 105, baseType: !22, size: 32, offset: 480)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "bundle_pos", scope: !1848, file: !1772, line: 135, baseType: !228, size: 96, offset: 1088)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1848, file: !1772, line: 136, baseType: !192, size: 32, offset: 1184)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1848, file: !1772, line: 139, baseType: !22, size: 32, offset: 1216)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "pat_flag", scope: !1848, file: !1772, line: 139, baseType: !22, size: 32, offset: 1248)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "search_flag", scope: !1848, file: !1772, line: 139, baseType: !22, size: 32, offset: 1280)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "color", scope: !1848, file: !1772, line: 140, baseType: !228, size: 96, offset: 1312)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "frames_limit", scope: !1848, file: !1772, line: 143, baseType: !48, size: 16, offset: 1408)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !1848, file: !1772, line: 144, baseType: !48, size: 16, offset: 1424)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "pattern_match", scope: !1848, file: !1772, line: 145, baseType: !48, size: 16, offset: 1440)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "motion_model", scope: !1848, file: !1772, line: 148, baseType: !48, size: 16, offset: 1456)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "algorithm_flag", scope: !1848, file: !1772, line: 149, baseType: !22, size: 32, offset: 1472)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "minimum_correlation", scope: !1848, file: !1772, line: 150, baseType: !192, size: 32, offset: 1504)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !1848, file: !1772, line: 152, baseType: !259, size: 64, offset: 1536)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1848, file: !1772, line: 163, baseType: !192, size: 32, offset: 1600)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1848, file: !1772, line: 163, baseType: !192, size: 32, offset: 1632)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "locinf", scope: !1839, file: !1772, line: 261, baseType: !192, size: 32, offset: 192)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "scaleinf", scope: !1839, file: !1772, line: 261, baseType: !192, size: 32, offset: 224)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "rotinf", scope: !1839, file: !1772, line: 261, baseType: !192, size: 32, offset: 256)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1839, file: !1772, line: 263, baseType: !22, size: 32, offset: 288)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1839, file: !1772, line: 266, baseType: !22, size: 32, offset: 320)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !1839, file: !1772, line: 267, baseType: !192, size: 32, offset: 352)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "act_track", scope: !1771, file: !1772, line: 347, baseType: !1846, size: 64, offset: 1856)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "act_plane_track", scope: !1771, file: !1772, line: 348, baseType: !1897, size: 64, offset: 1920)
!1897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1898, size: 64)
!1898 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingPlaneTrack", file: !1772, line: 205, baseType: !1899)
!1899 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingPlaneTrack", file: !1772, line: 186, size: 1024, elements: !1900)
!1900 = !{!1901, !1903, !1904, !1905, !1907, !1908, !1909, !1917, !1918, !1919, !1920, !1921}
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1899, file: !1772, line: 187, baseType: !1902, size: 64)
!1902 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1899, size: 64)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1899, file: !1772, line: 187, baseType: !1902, size: 64, offset: 64)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1899, file: !1772, line: 189, baseType: !33, size: 512, offset: 128)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "point_tracks", scope: !1899, file: !1772, line: 191, baseType: !1906, size: 64, offset: 640)
!1906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1846, size: 64)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "point_tracksnr", scope: !1899, file: !1772, line: 193, baseType: !22, size: 32, offset: 704)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1899, file: !1772, line: 193, baseType: !22, size: 32, offset: 736)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !1899, file: !1772, line: 195, baseType: !1910, size: 64, offset: 768)
!1910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1911, size: 64)
!1911 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingPlaneMarker", file: !1772, line: 184, baseType: !1912)
!1912 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingPlaneMarker", file: !1772, line: 166, size: 320, elements: !1913)
!1913 = !{!1914, !1915, !1916}
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "corners", scope: !1912, file: !1772, line: 180, baseType: !1868, size: 256)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !1912, file: !1772, line: 182, baseType: !22, size: 32, offset: 256)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1912, file: !1772, line: 183, baseType: !22, size: 32, offset: 288)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "markersnr", scope: !1899, file: !1772, line: 196, baseType: !22, size: 32, offset: 832)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1899, file: !1772, line: 198, baseType: !22, size: 32, offset: 864)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !1899, file: !1772, line: 200, baseType: !1091, size: 64, offset: 896)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "image_opacity", scope: !1899, file: !1772, line: 201, baseType: !192, size: 32, offset: 960)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "last_marker", scope: !1899, file: !1772, line: 204, baseType: !22, size: 32, offset: 992)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !1771, file: !1772, line: 350, baseType: !58, size: 128, offset: 1984)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "objectnr", scope: !1771, file: !1772, line: 351, baseType: !22, size: 32, offset: 2112)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "tot_object", scope: !1771, file: !1772, line: 351, baseType: !22, size: 32, offset: 2144)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !1771, file: !1772, line: 353, baseType: !1926, size: 64, offset: 2176)
!1926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1927, size: 64)
!1927 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingStats", file: !1772, line: 297, baseType: !1928)
!1928 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingStats", file: !1772, line: 295, size: 2048, elements: !1929)
!1929 = !{!1930}
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "message", scope: !1928, file: !1772, line: 296, baseType: !544, size: 2048)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "dopesheet", scope: !1771, file: !1772, line: 355, baseType: !1932, size: 384, offset: 2240)
!1932 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingDopesheet", file: !1772, line: 338, baseType: !1933)
!1933 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingDopesheet", file: !1772, line: 322, size: 384, elements: !1934)
!1934 = !{!1935, !1936, !1937, !1938, !1939, !1940, !1941}
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1933, file: !1772, line: 323, baseType: !22, size: 32)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "sort_method", scope: !1933, file: !1772, line: 325, baseType: !48, size: 16, offset: 32)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1933, file: !1772, line: 326, baseType: !48, size: 16, offset: 48)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "coverage_segments", scope: !1933, file: !1772, line: 331, baseType: !58, size: 128, offset: 64)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1933, file: !1772, line: 334, baseType: !58, size: 128, offset: 192)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "tot_channel", scope: !1933, file: !1772, line: 335, baseType: !22, size: 32, offset: 320)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1933, file: !1772, line: 337, baseType: !22, size: 32, offset: 352)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "tracking_context", scope: !1753, file: !1754, line: 81, baseType: !56, size: 64, offset: 12224)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !1753, file: !1754, line: 85, baseType: !1944, size: 6208, offset: 12288)
!1944 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClipProxy", file: !1754, line: 55, size: 6208, elements: !1945)
!1945 = !{!1946, !1947, !1948, !1949, !1950}
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !1944, file: !1754, line: 56, baseType: !1706, size: 6144)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "tc", scope: !1944, file: !1754, line: 58, baseType: !48, size: 16, offset: 6144)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1944, file: !1754, line: 59, baseType: !48, size: 16, offset: 6160)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "build_size_flag", scope: !1944, file: !1754, line: 60, baseType: !48, size: 16, offset: 6176)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "build_tc_flag", scope: !1944, file: !1754, line: 61, baseType: !48, size: 16, offset: 6192)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1753, file: !1754, line: 86, baseType: !22, size: 32, offset: 18496)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1753, file: !1754, line: 88, baseType: !22, size: 32, offset: 18528)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1753, file: !1754, line: 90, baseType: !22, size: 32, offset: 18560)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "frame_offset", scope: !1753, file: !1754, line: 94, baseType: !22, size: 32, offset: 18592)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !1753, file: !1754, line: 100, baseType: !1153, size: 512, offset: 18624)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !1658, file: !1650, line: 154, baseType: !1957, size: 64, offset: 1664)
!1957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1958, size: 64)
!1958 = !DICompositeType(tag: DW_TAG_structure_type, name: "Mask", file: !1650, line: 154, flags: DIFlagFwdDecl)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !1658, file: !1650, line: 156, baseType: !1103, size: 64, offset: 1728)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "effect_fader", scope: !1658, file: !1650, line: 158, baseType: !192, size: 32, offset: 1792)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "speed_fader", scope: !1658, file: !1650, line: 159, baseType: !192, size: 32, offset: 1824)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "seq1", scope: !1658, file: !1650, line: 162, baseType: !1661, size: 64, offset: 1856)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "seq2", scope: !1658, file: !1650, line: 162, baseType: !1661, size: 64, offset: 1920)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "seq3", scope: !1658, file: !1650, line: 162, baseType: !1661, size: 64, offset: 1984)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "seqbase", scope: !1658, file: !1650, line: 164, baseType: !58, size: 128, offset: 2048)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "sound", scope: !1658, file: !1650, line: 166, baseType: !1967, size: 64, offset: 2176)
!1967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1968, size: 64)
!1968 = !DICompositeType(tag: DW_TAG_structure_type, name: "bSound", file: !1650, line: 51, flags: DIFlagFwdDecl)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "scene_sound", scope: !1658, file: !1650, line: 167, baseType: !56, size: 64, offset: 2240)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "volume", scope: !1658, file: !1650, line: 168, baseType: !192, size: 32, offset: 2304)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "pitch", scope: !1658, file: !1650, line: 170, baseType: !192, size: 32, offset: 2336)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "pan", scope: !1658, file: !1650, line: 170, baseType: !192, size: 32, offset: 2368)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "strobe", scope: !1658, file: !1650, line: 171, baseType: !192, size: 32, offset: 2400)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "effectdata", scope: !1658, file: !1650, line: 173, baseType: !56, size: 64, offset: 2432)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "anim_startofs", scope: !1658, file: !1650, line: 175, baseType: !22, size: 32, offset: 2496)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "anim_endofs", scope: !1658, file: !1650, line: 176, baseType: !22, size: 32, offset: 2528)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "blend_mode", scope: !1658, file: !1650, line: 179, baseType: !22, size: 32, offset: 2560)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "blend_opacity", scope: !1658, file: !1650, line: 180, baseType: !192, size: 32, offset: 2592)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !1658, file: !1650, line: 183, baseType: !22, size: 32, offset: 2624)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_mode", scope: !1658, file: !1650, line: 185, baseType: !14, size: 8, offset: 2656)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1658, file: !1650, line: 186, baseType: !1982, size: 24, offset: 2664)
!1982 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 24, elements: !229)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers", scope: !1658, file: !1650, line: 189, baseType: !58, size: 128, offset: 2688)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "act_imagedir", scope: !1649, file: !1650, line: 207, baseType: !131, size: 8192, offset: 384)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "act_sounddir", scope: !1649, file: !1650, line: 208, baseType: !131, size: 8192, offset: 8576)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "over_ofs", scope: !1649, file: !1650, line: 210, baseType: !22, size: 32, offset: 16768)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "over_cfra", scope: !1649, file: !1650, line: 210, baseType: !22, size: 32, offset: 16800)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "over_flag", scope: !1649, file: !1650, line: 211, baseType: !22, size: 32, offset: 16832)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1649, file: !1650, line: 211, baseType: !22, size: 32, offset: 16864)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "over_border", scope: !1649, file: !1650, line: 212, baseType: !749, size: 128, offset: 16896)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "toolsettings", scope: !154, file: !155, line: 1246, baseType: !1992, size: 64, offset: 2112)
!1992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1993, size: 64)
!1993 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ToolSettings", file: !155, line: 1067, size: 5184, elements: !1994)
!1994 = !{!1995, !2035, !2036, !2050, !2056, !2057, !2058, !2059, !2060, !2061, !2062, !2063, !2064, !2065, !2066, !2067, !2068, !2072, !2088, !2115, !2116, !2117, !2118, !2119, !2120, !2121, !2122, !2123, !2124, !2125, !2126, !2127, !2128, !2129, !2130, !2131, !2132, !2133, !2134, !2135, !2136, !2137, !2138, !2139, !2140, !2141, !2142, !2143, !2145, !2146, !2147, !2148, !2149, !2150, !2151, !2152, !2153, !2154, !2155, !2156, !2157, !2158, !2159, !2160, !2161, !2162, !2163, !2164, !2165, !2166, !2167, !2168, !2169, !2170, !2198}
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint", scope: !1993, file: !155, line: 1068, baseType: !1996, size: 64)
!1996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1997, size: 64)
!1997 = !DIDerivedType(tag: DW_TAG_typedef, name: "VPaint", file: !155, line: 934, baseType: !1998)
!1998 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VPaint", file: !155, line: 925, size: 576, elements: !1999)
!1999 = !{!2000, !2017, !2018, !2019, !2020, !2021, !2034}
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1998, file: !155, line: 926, baseType: !2001, size: 320)
!2001 = !DIDerivedType(tag: DW_TAG_typedef, name: "Paint", file: !155, line: 830, baseType: !2002)
!2002 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Paint", file: !155, line: 813, size: 320, elements: !2003)
!2003 = !{!2004, !2007, !2010, !2011, !2014, !2015, !2016}
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !2002, file: !155, line: 814, baseType: !2005, size: 64)
!2005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2006, size: 64)
!2006 = !DICompositeType(tag: DW_TAG_structure_type, name: "Brush", file: !155, line: 51, flags: DIFlagFwdDecl)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "palette", scope: !2002, file: !155, line: 815, baseType: !2008, size: 64, offset: 64)
!2008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2009, size: 64)
!2009 = !DICompositeType(tag: DW_TAG_structure_type, name: "Palette", file: !155, line: 815, flags: DIFlagFwdDecl)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor", scope: !2002, file: !155, line: 818, baseType: !56, size: 64, offset: 128)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor_col", scope: !2002, file: !155, line: 819, baseType: !2012, size: 32, offset: 192)
!2012 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2013, size: 32, elements: !405)
!2013 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2002, file: !155, line: 822, baseType: !22, size: 32, offset: 224)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "num_input_samples", scope: !2002, file: !155, line: 826, baseType: !22, size: 32, offset: 256)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "symmetry_flags", scope: !2002, file: !155, line: 829, baseType: !22, size: 32, offset: 288)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1998, file: !155, line: 928, baseType: !48, size: 16, offset: 320)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1998, file: !155, line: 928, baseType: !48, size: 16, offset: 336)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !1998, file: !155, line: 929, baseType: !22, size: 32, offset: 352)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint_prev", scope: !1998, file: !155, line: 930, baseType: !1125, size: 64, offset: 384)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint_prev", scope: !1998, file: !155, line: 931, baseType: !2022, size: 64, offset: 448)
!2022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2023, size: 64)
!2023 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MDeformVert", file: !2024, line: 59, size: 128, elements: !2025)
!2024 = !DIFile(filename: "blender/source/blender/makesdna/DNA_meshdata_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2025 = !{!2026, !2032, !2033}
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "dw", scope: !2023, file: !2024, line: 60, baseType: !2027, size: 64)
!2027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2028, size: 64)
!2028 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MDeformWeight", file: !2024, line: 54, size: 64, elements: !2029)
!2029 = !{!2030, !2031}
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "def_nr", scope: !2028, file: !2024, line: 55, baseType: !22, size: 32)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !2028, file: !2024, line: 56, baseType: !192, size: 32, offset: 32)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "totweight", scope: !2023, file: !2024, line: 61, baseType: !22, size: 32, offset: 64)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2023, file: !2024, line: 62, baseType: !22, size: 32, offset: 96)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !1998, file: !155, line: 933, baseType: !56, size: 64, offset: 512)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint", scope: !1993, file: !155, line: 1069, baseType: !1996, size: 64, offset: 64)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt", scope: !1993, file: !155, line: 1070, baseType: !2037, size: 64, offset: 128)
!2037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2038, size: 64)
!2038 = !DIDerivedType(tag: DW_TAG_typedef, name: "Sculpt", file: !155, line: 916, baseType: !2039)
!2039 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Sculpt", file: !155, line: 891, size: 704, elements: !2040)
!2040 = !{!2041, !2042, !2043, !2044, !2045, !2046, !2047, !2048, !2049}
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !2039, file: !155, line: 892, baseType: !2001, size: 320)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2039, file: !155, line: 896, baseType: !22, size: 32, offset: 320)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "radial_symm", scope: !2039, file: !155, line: 900, baseType: !1271, size: 96, offset: 352)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "detail_size", scope: !2039, file: !155, line: 903, baseType: !192, size: 32, offset: 448)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "symmetrize_direction", scope: !2039, file: !155, line: 906, baseType: !22, size: 32, offset: 480)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_factor", scope: !2039, file: !155, line: 909, baseType: !192, size: 32, offset: 512)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "constant_detail", scope: !2039, file: !155, line: 912, baseType: !192, size: 32, offset: 544)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_object", scope: !2039, file: !155, line: 914, baseType: !163, size: 64, offset: 576)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2039, file: !155, line: 915, baseType: !56, size: 64, offset: 640)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "uvsculpt", scope: !1993, file: !155, line: 1071, baseType: !2051, size: 64, offset: 192)
!2051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2052, size: 64)
!2052 = !DIDerivedType(tag: DW_TAG_typedef, name: "UvSculpt", file: !155, line: 920, baseType: !2053)
!2053 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UvSculpt", file: !155, line: 918, size: 320, elements: !2054)
!2054 = !{!2055}
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !2053, file: !155, line: 919, baseType: !2001, size: 320)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "vgroup_weight", scope: !1993, file: !155, line: 1075, baseType: !192, size: 32, offset: 256)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "doublimit", scope: !1993, file: !155, line: 1077, baseType: !192, size: 32, offset: 288)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "normalsize", scope: !1993, file: !155, line: 1078, baseType: !192, size: 32, offset: 320)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "automerge", scope: !1993, file: !155, line: 1079, baseType: !48, size: 16, offset: 352)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !1993, file: !155, line: 1082, baseType: !48, size: 16, offset: 368)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "unwrapper", scope: !1993, file: !155, line: 1085, baseType: !14, size: 8, offset: 384)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_flag", scope: !1993, file: !155, line: 1086, baseType: !14, size: 8, offset: 392)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "uv_flag", scope: !1993, file: !155, line: 1087, baseType: !14, size: 8, offset: 400)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "uv_selectmode", scope: !1993, file: !155, line: 1088, baseType: !14, size: 8, offset: 408)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_margin", scope: !1993, file: !155, line: 1090, baseType: !192, size: 32, offset: 416)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "autoik_chainlen", scope: !1993, file: !155, line: 1093, baseType: !48, size: 16, offset: 448)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "gpencil_flags", scope: !1993, file: !155, line: 1096, baseType: !14, size: 8, offset: 464)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1993, file: !155, line: 1098, baseType: !2069, size: 40, offset: 472)
!2069 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 40, elements: !2070)
!2070 = !{!2071}
!2071 = !DISubrange(count: 5)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "imapaint", scope: !1993, file: !155, line: 1101, baseType: !2073, size: 832, offset: 512)
!2073 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImagePaintSettings", file: !155, line: 836, size: 832, elements: !2074)
!2074 = !{!2075, !2076, !2077, !2078, !2079, !2080, !2081, !2082, !2083, !2084, !2085, !2086, !2087}
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !2073, file: !155, line: 837, baseType: !2001, size: 320)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2073, file: !155, line: 839, baseType: !48, size: 16, offset: 320)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "missing_data", scope: !2073, file: !155, line: 839, baseType: !48, size: 16, offset: 336)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "seam_bleed", scope: !2073, file: !155, line: 842, baseType: !48, size: 16, offset: 352)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "normal_angle", scope: !2073, file: !155, line: 842, baseType: !48, size: 16, offset: 368)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "screen_grab_size", scope: !2073, file: !155, line: 843, baseType: !726, size: 32, offset: 384)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2073, file: !155, line: 845, baseType: !22, size: 32, offset: 416)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !2073, file: !155, line: 847, baseType: !56, size: 64, offset: 448)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "stencil", scope: !2073, file: !155, line: 848, baseType: !1091, size: 64, offset: 512)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "clone", scope: !2073, file: !155, line: 849, baseType: !1091, size: 64, offset: 576)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "canvas", scope: !2073, file: !155, line: 850, baseType: !1091, size: 64, offset: 640)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "stencil_col", scope: !2073, file: !155, line: 851, baseType: !228, size: 96, offset: 704)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2073, file: !155, line: 852, baseType: !192, size: 32, offset: 800)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "particle", scope: !1993, file: !155, line: 1104, baseType: !2089, size: 1344, offset: 1344)
!2089 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleEditSettings", file: !155, line: 867, size: 1344, elements: !2090)
!2090 = !{!2091, !2092, !2093, !2094, !2095, !2106, !2107, !2108, !2109, !2110, !2111, !2112, !2113, !2114}
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2089, file: !155, line: 868, baseType: !48, size: 16)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "totrekey", scope: !2089, file: !155, line: 869, baseType: !48, size: 16, offset: 16)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "totaddkey", scope: !2089, file: !155, line: 870, baseType: !48, size: 16, offset: 32)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "brushtype", scope: !2089, file: !155, line: 871, baseType: !48, size: 16, offset: 48)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !2089, file: !155, line: 873, baseType: !2096, size: 896, offset: 64)
!2096 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2097, size: 896, elements: !1160)
!2097 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleBrushData", file: !155, line: 864, baseType: !2098)
!2098 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleBrushData", file: !155, line: 859, size: 128, elements: !2099)
!2099 = !{!2100, !2101, !2102, !2103, !2104, !2105}
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2098, file: !155, line: 860, baseType: !48, size: 16)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !2098, file: !155, line: 861, baseType: !48, size: 16, offset: 16)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !2098, file: !155, line: 861, baseType: !48, size: 16, offset: 32)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2098, file: !155, line: 861, baseType: !48, size: 16, offset: 48)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2098, file: !155, line: 862, baseType: !22, size: 32, offset: 64)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "strength", scope: !2098, file: !155, line: 863, baseType: !192, size: 32, offset: 96)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !2089, file: !155, line: 874, baseType: !56, size: 64, offset: 960)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "emitterdist", scope: !2089, file: !155, line: 876, baseType: !192, size: 32, offset: 1024)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !2089, file: !155, line: 876, baseType: !192, size: 32, offset: 1056)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !2089, file: !155, line: 878, baseType: !22, size: 32, offset: 1088)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "edittype", scope: !2089, file: !155, line: 879, baseType: !22, size: 32, offset: 1120)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "draw_step", scope: !2089, file: !155, line: 881, baseType: !22, size: 32, offset: 1152)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "fade_frames", scope: !2089, file: !155, line: 881, baseType: !22, size: 32, offset: 1184)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !2089, file: !155, line: 883, baseType: !153, size: 64, offset: 1216)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !2089, file: !155, line: 884, baseType: !163, size: 64, offset: 1280)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_size", scope: !1993, file: !155, line: 1107, baseType: !192, size: 32, offset: 2688)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "select_thresh", scope: !1993, file: !155, line: 1110, baseType: !192, size: 32, offset: 2720)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_mode", scope: !1993, file: !155, line: 1113, baseType: !48, size: 16, offset: 2752)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_flag", scope: !1993, file: !155, line: 1113, baseType: !48, size: 16, offset: 2768)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "multires_subdiv_type", scope: !1993, file: !155, line: 1116, baseType: !14, size: 8, offset: 2784)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1993, file: !155, line: 1117, baseType: !421, size: 8, offset: 2792)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_resolution", scope: !1993, file: !155, line: 1120, baseType: !48, size: 16, offset: 2800)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_internal", scope: !1993, file: !155, line: 1121, baseType: !192, size: 32, offset: 2816)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_external", scope: !1993, file: !155, line: 1122, baseType: !192, size: 32, offset: 2848)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_ratio", scope: !1993, file: !155, line: 1123, baseType: !192, size: 32, offset: 2880)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_limit", scope: !1993, file: !155, line: 1124, baseType: !192, size: 32, offset: 2912)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_angle_limit", scope: !1993, file: !155, line: 1125, baseType: !192, size: 32, offset: 2944)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_correlation_limit", scope: !1993, file: !155, line: 1126, baseType: !192, size: 32, offset: 2976)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_symmetry_limit", scope: !1993, file: !155, line: 1127, baseType: !192, size: 32, offset: 3008)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_angle_weight", scope: !1993, file: !155, line: 1128, baseType: !192, size: 32, offset: 3040)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_length_weight", scope: !1993, file: !155, line: 1129, baseType: !192, size: 32, offset: 3072)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_distance_weight", scope: !1993, file: !155, line: 1130, baseType: !192, size: 32, offset: 3104)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_options", scope: !1993, file: !155, line: 1131, baseType: !48, size: 16, offset: 3136)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro", scope: !1993, file: !155, line: 1132, baseType: !14, size: 8, offset: 3152)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro_passes", scope: !1993, file: !155, line: 1133, baseType: !14, size: 8, offset: 3160)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivisions", scope: !1993, file: !155, line: 1134, baseType: !1982, size: 24, offset: 3168)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_multi_level", scope: !1993, file: !155, line: 1135, baseType: !14, size: 8, offset: 3192)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_template", scope: !1993, file: !155, line: 1138, baseType: !163, size: 64, offset: 3200)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching", scope: !1993, file: !155, line: 1139, baseType: !14, size: 8, offset: 3264)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching_convert", scope: !1993, file: !155, line: 1140, baseType: !14, size: 8, offset: 3272)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivision_number", scope: !1993, file: !155, line: 1141, baseType: !14, size: 8, offset: 3280)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_options", scope: !1993, file: !155, line: 1142, baseType: !14, size: 8, offset: 3288)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_roll", scope: !1993, file: !155, line: 1143, baseType: !14, size: 8, offset: 3296)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_side_string", scope: !1993, file: !155, line: 1144, baseType: !2144, size: 64, offset: 3304)
!2144 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 64, elements: !841)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_num_string", scope: !1993, file: !155, line: 1145, baseType: !2144, size: 64, offset: 3368)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode", scope: !1993, file: !155, line: 1148, baseType: !14, size: 8, offset: 3432)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode_live_unwrap", scope: !1993, file: !155, line: 1149, baseType: !14, size: 8, offset: 3440)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "snap_mode", scope: !1993, file: !155, line: 1152, baseType: !14, size: 8, offset: 3448)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "snap_node_mode", scope: !1993, file: !155, line: 1152, baseType: !14, size: 8, offset: 3456)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "snap_uv_mode", scope: !1993, file: !155, line: 1153, baseType: !14, size: 8, offset: 3464)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "snap_flag", scope: !1993, file: !155, line: 1154, baseType: !48, size: 16, offset: 3472)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "snap_target", scope: !1993, file: !155, line: 1154, baseType: !48, size: 16, offset: 3488)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "proportional", scope: !1993, file: !155, line: 1155, baseType: !48, size: 16, offset: 3504)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "prop_mode", scope: !1993, file: !155, line: 1155, baseType: !48, size: 16, offset: 3520)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_objects", scope: !1993, file: !155, line: 1156, baseType: !14, size: 8, offset: 3536)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_mask", scope: !1993, file: !155, line: 1157, baseType: !14, size: 8, offset: 3544)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "auto_normalize", scope: !1993, file: !155, line: 1159, baseType: !14, size: 8, offset: 3552)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "multipaint", scope: !1993, file: !155, line: 1160, baseType: !14, size: 8, offset: 3560)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "weightuser", scope: !1993, file: !155, line: 1161, baseType: !14, size: 8, offset: 3568)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "vgroupsubset", scope: !1993, file: !155, line: 1162, baseType: !14, size: 8, offset: 3576)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "use_uv_sculpt", scope: !1993, file: !155, line: 1165, baseType: !22, size: 32, offset: 3584)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_settings", scope: !1993, file: !155, line: 1166, baseType: !22, size: 32, offset: 3616)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_tool", scope: !1993, file: !155, line: 1167, baseType: !22, size: 32, offset: 3648)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "uv_relax_method", scope: !1993, file: !155, line: 1168, baseType: !22, size: 32, offset: 3680)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_settings", scope: !1993, file: !155, line: 1171, baseType: !48, size: 16, offset: 3712)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !1993, file: !155, line: 1171, baseType: !48, size: 16, offset: 3728)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_size", scope: !1993, file: !155, line: 1172, baseType: !22, size: 32, offset: 3744)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_unprojected_radius", scope: !1993, file: !155, line: 1173, baseType: !192, size: 32, offset: 3776)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_alpha", scope: !1993, file: !155, line: 1174, baseType: !192, size: 32, offset: 3808)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "unified_paint_settings", scope: !1993, file: !155, line: 1177, baseType: !2171, size: 1024, offset: 3840)
!2171 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnifiedPaintSettings", file: !155, line: 963, size: 1024, elements: !2172)
!2172 = !{!2173, !2174, !2175, !2176, !2177, !2178, !2179, !2180, !2181, !2182, !2183, !2184, !2185, !2186, !2187, !2188, !2189, !2190, !2191, !2192, !2193, !2196, !2197}
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2171, file: !155, line: 965, baseType: !22, size: 32)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "unprojected_radius", scope: !2171, file: !155, line: 968, baseType: !192, size: 32, offset: 32)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !2171, file: !155, line: 971, baseType: !192, size: 32, offset: 64)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !2171, file: !155, line: 974, baseType: !192, size: 32, offset: 96)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "rgb", scope: !2171, file: !155, line: 977, baseType: !228, size: 96, offset: 128)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "secondary_rgb", scope: !2171, file: !155, line: 979, baseType: !228, size: 96, offset: 224)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2171, file: !155, line: 982, baseType: !22, size: 32, offset: 320)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "last_rake", scope: !2171, file: !155, line: 987, baseType: !769, size: 64, offset: 352)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "brush_rotation", scope: !2171, file: !155, line: 989, baseType: !192, size: 32, offset: 416)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "draw_anchored", scope: !2171, file: !155, line: 994, baseType: !22, size: 32, offset: 448)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_size", scope: !2171, file: !155, line: 995, baseType: !22, size: 32, offset: 480)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "draw_inverted", scope: !2171, file: !155, line: 997, baseType: !14, size: 8, offset: 512)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !2171, file: !155, line: 998, baseType: !1159, size: 56, offset: 520)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "overlap_factor", scope: !2171, file: !155, line: 1000, baseType: !192, size: 32, offset: 576)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_initial_mouse", scope: !2171, file: !155, line: 1003, baseType: !769, size: 64, offset: 608)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "stroke_active", scope: !2171, file: !155, line: 1006, baseType: !22, size: 32, offset: 672)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "size_pressure_value", scope: !2171, file: !155, line: 1009, baseType: !192, size: 32, offset: 704)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "tex_mouse", scope: !2171, file: !155, line: 1012, baseType: !769, size: 64, offset: 736)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "mask_tex_mouse", scope: !2171, file: !155, line: 1015, baseType: !769, size: 64, offset: 800)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "do_linear_conversion", scope: !2171, file: !155, line: 1018, baseType: !22, size: 32, offset: 864)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !2171, file: !155, line: 1019, baseType: !2194, size: 64, offset: 896)
!2194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2195, size: 64)
!2195 = !DICompositeType(tag: DW_TAG_structure_type, name: "ColorSpace", file: !155, line: 63, flags: DIFlagFwdDecl)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_radius", scope: !2171, file: !155, line: 1023, baseType: !192, size: 32, offset: 960)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !2171, file: !155, line: 1024, baseType: !22, size: 32, offset: 992)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "statvis", scope: !1993, file: !155, line: 1179, baseType: !2199, size: 320, offset: 4864)
!2199 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MeshStatVis", file: !155, line: 1043, size: 320, elements: !2200)
!2200 = !{!2201, !2202, !2204, !2205, !2206, !2207, !2208, !2209, !2210, !2211, !2212, !2213, !2214}
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2199, file: !155, line: 1044, baseType: !14, size: 8)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "_pad1", scope: !2199, file: !155, line: 1045, baseType: !2203, size: 16, offset: 8)
!2203 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 16, elements: !727)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_axis", scope: !2199, file: !155, line: 1048, baseType: !14, size: 8, offset: 24)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_min", scope: !2199, file: !155, line: 1049, baseType: !192, size: 32, offset: 32)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_max", scope: !2199, file: !155, line: 1049, baseType: !192, size: 32, offset: 64)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_min", scope: !2199, file: !155, line: 1052, baseType: !192, size: 32, offset: 96)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_max", scope: !2199, file: !155, line: 1052, baseType: !192, size: 32, offset: 128)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_samples", scope: !2199, file: !155, line: 1053, baseType: !14, size: 8, offset: 160)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "_pad2", scope: !2199, file: !155, line: 1054, baseType: !1982, size: 24, offset: 168)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "distort_min", scope: !2199, file: !155, line: 1057, baseType: !192, size: 32, offset: 192)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "distort_max", scope: !2199, file: !155, line: 1057, baseType: !192, size: 32, offset: 224)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_min", scope: !2199, file: !155, line: 1060, baseType: !192, size: 32, offset: 256)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_max", scope: !2199, file: !155, line: 1060, baseType: !192, size: 32, offset: 288)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !154, file: !155, line: 1247, baseType: !2216, size: 64, offset: 2176)
!2216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2217, size: 64)
!2217 = !DICompositeType(tag: DW_TAG_structure_type, name: "SceneStats", file: !155, line: 60, flags: DIFlagFwdDecl)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !154, file: !155, line: 1251, baseType: !2219, size: 31872, offset: 2240)
!2219 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderData", file: !155, line: 403, size: 31872, elements: !2220)
!2220 = !{!2221, !2256, !2276, !2285, !2305, !2325, !2326, !2327, !2328, !2329, !2330, !2331, !2332, !2333, !2334, !2335, !2336, !2337, !2338, !2339, !2340, !2341, !2342, !2343, !2344, !2345, !2346, !2347, !2348, !2349, !2350, !2351, !2352, !2353, !2354, !2355, !2356, !2357, !2358, !2359, !2360, !2361, !2362, !2363, !2364, !2365, !2366, !2367, !2368, !2369, !2370, !2371, !2372, !2373, !2374, !2375, !2376, !2377, !2378, !2379, !2380, !2381, !2382, !2383, !2384, !2385, !2386, !2387, !2388, !2389, !2390, !2391, !2392, !2393, !2394, !2395, !2396, !2397, !2398, !2399, !2400, !2401, !2402, !2403, !2404, !2405, !2406, !2407, !2408, !2409, !2410, !2411, !2412, !2413, !2414, !2415, !2416, !2417, !2418, !2419, !2420, !2421, !2422, !2423, !2424, !2425, !2426, !2427, !2428, !2429, !2430, !2431, !2432, !2436, !2437, !2438, !2440, !2456, !2457}
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !2219, file: !155, line: 404, baseType: !2222, size: 1984)
!2222 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageFormatData", file: !155, line: 259, size: 1984, elements: !2223)
!2223 = !{!2224, !2225, !2226, !2227, !2228, !2229, !2230, !2231, !2232, !2233, !2234, !2235, !2236, !2237, !2239, !2251}
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !2222, file: !155, line: 260, baseType: !14, size: 8)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !2222, file: !155, line: 263, baseType: !14, size: 8, offset: 8)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !2222, file: !155, line: 266, baseType: !14, size: 8, offset: 16)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2222, file: !155, line: 267, baseType: !14, size: 8, offset: 24)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !2222, file: !155, line: 269, baseType: !14, size: 8, offset: 32)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "compress", scope: !2222, file: !155, line: 270, baseType: !14, size: 8, offset: 40)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "exr_codec", scope: !2222, file: !155, line: 276, baseType: !14, size: 8, offset: 48)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_flag", scope: !2222, file: !155, line: 279, baseType: !14, size: 8, offset: 56)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_white", scope: !2222, file: !155, line: 280, baseType: !48, size: 16, offset: 64)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_black", scope: !2222, file: !155, line: 280, baseType: !48, size: 16, offset: 80)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_gamma", scope: !2222, file: !155, line: 281, baseType: !192, size: 32, offset: 96)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_flag", scope: !2222, file: !155, line: 284, baseType: !14, size: 8, offset: 128)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_codec", scope: !2222, file: !155, line: 285, baseType: !14, size: 8, offset: 136)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2222, file: !155, line: 287, baseType: !2238, size: 48, offset: 144)
!2238 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 48, elements: !1177)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !2222, file: !155, line: 290, baseType: !2240, size: 1280, offset: 192)
!2240 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedViewSettings", file: !889, line: 174, baseType: !2241)
!2241 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedViewSettings", file: !889, line: 166, size: 1280, elements: !2242)
!2242 = !{!2243, !2244, !2245, !2246, !2247, !2248, !2249, !2250}
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2241, file: !889, line: 167, baseType: !22, size: 32)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2241, file: !889, line: 167, baseType: !22, size: 32, offset: 32)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "look", scope: !2241, file: !889, line: 168, baseType: !33, size: 512, offset: 64)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "view_transform", scope: !2241, file: !889, line: 169, baseType: !33, size: 512, offset: 576)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "exposure", scope: !2241, file: !889, line: 170, baseType: !192, size: 32, offset: 1088)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !2241, file: !889, line: 171, baseType: !192, size: 32, offset: 1120)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "curve_mapping", scope: !2241, file: !889, line: 172, baseType: !1228, size: 64, offset: 1152)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2241, file: !889, line: 173, baseType: !56, size: 64, offset: 1216)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !2222, file: !155, line: 291, baseType: !2252, size: 512, offset: 1472)
!2252 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedDisplaySettings", file: !889, line: 178, baseType: !2253)
!2253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedDisplaySettings", file: !889, line: 176, size: 512, elements: !2254)
!2254 = !{!2255}
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "display_device", scope: !2253, file: !889, line: 177, baseType: !33, size: 512)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecdata", scope: !2219, file: !155, line: 406, baseType: !2257, size: 64, offset: 1984)
!2257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2258, size: 64)
!2258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AviCodecData", file: !155, line: 80, size: 1472, elements: !2259)
!2259 = !{!2260, !2261, !2262, !2263, !2264, !2265, !2266, !2267, !2268, !2269, !2270, !2271, !2272}
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "lpFormat", scope: !2258, file: !155, line: 81, baseType: !56, size: 64)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "lpParms", scope: !2258, file: !155, line: 82, baseType: !56, size: 64, offset: 64)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "cbFormat", scope: !2258, file: !155, line: 83, baseType: !224, size: 32, offset: 128)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "cbParms", scope: !2258, file: !155, line: 84, baseType: !224, size: 32, offset: 160)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "fccType", scope: !2258, file: !155, line: 86, baseType: !224, size: 32, offset: 192)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "fccHandler", scope: !2258, file: !155, line: 87, baseType: !224, size: 32, offset: 224)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "dwKeyFrameEvery", scope: !2258, file: !155, line: 88, baseType: !224, size: 32, offset: 256)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "dwQuality", scope: !2258, file: !155, line: 89, baseType: !224, size: 32, offset: 288)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "dwBytesPerSecond", scope: !2258, file: !155, line: 90, baseType: !224, size: 32, offset: 320)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "dwFlags", scope: !2258, file: !155, line: 91, baseType: !224, size: 32, offset: 352)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "dwInterleaveEvery", scope: !2258, file: !155, line: 92, baseType: !224, size: 32, offset: 384)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2258, file: !155, line: 93, baseType: !224, size: 32, offset: 416)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecname", scope: !2258, file: !155, line: 95, baseType: !2273, size: 1024, offset: 448)
!2273 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 1024, elements: !2274)
!2274 = !{!2275}
!2275 = !DISubrange(count: 128)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecdata", scope: !2219, file: !155, line: 407, baseType: !2277, size: 64, offset: 2048)
!2277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2278, size: 64)
!2278 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecData", file: !155, line: 98, size: 1216, elements: !2279)
!2279 = !{!2280, !2281, !2282, !2283, !2284}
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "cdParms", scope: !2278, file: !155, line: 100, baseType: !56, size: 64)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2278, file: !155, line: 101, baseType: !56, size: 64, offset: 64)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "cdSize", scope: !2278, file: !155, line: 103, baseType: !224, size: 32, offset: 128)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2278, file: !155, line: 104, baseType: !224, size: 32, offset: 160)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecname", scope: !2278, file: !155, line: 106, baseType: !2273, size: 1024, offset: 192)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecsettings", scope: !2219, file: !155, line: 408, baseType: !2286, size: 512, offset: 2112)
!2286 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecSettings", file: !155, line: 109, size: 512, elements: !2287)
!2287 = !{!2288, !2289, !2290, !2291, !2292, !2293, !2294, !2295, !2296, !2297, !2298, !2299, !2300, !2301, !2302, !2303, !2304}
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "codecType", scope: !2286, file: !155, line: 111, baseType: !22, size: 32)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "codecSpatialQuality", scope: !2286, file: !155, line: 112, baseType: !22, size: 32, offset: 32)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !2286, file: !155, line: 115, baseType: !22, size: 32, offset: 64)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "codecFlags", scope: !2286, file: !155, line: 116, baseType: !22, size: 32, offset: 96)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "colorDepth", scope: !2286, file: !155, line: 117, baseType: !22, size: 32, offset: 128)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "codecTemporalQuality", scope: !2286, file: !155, line: 118, baseType: !22, size: 32, offset: 160)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "minSpatialQuality", scope: !2286, file: !155, line: 119, baseType: !22, size: 32, offset: 192)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "minTemporalQuality", scope: !2286, file: !155, line: 120, baseType: !22, size: 32, offset: 224)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "keyFrameRate", scope: !2286, file: !155, line: 121, baseType: !22, size: 32, offset: 256)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "bitRate", scope: !2286, file: !155, line: 122, baseType: !22, size: 32, offset: 288)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "audiocodecType", scope: !2286, file: !155, line: 125, baseType: !22, size: 32, offset: 320)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "audioSampleRate", scope: !2286, file: !155, line: 126, baseType: !22, size: 32, offset: 352)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitDepth", scope: !2286, file: !155, line: 127, baseType: !48, size: 16, offset: 384)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "audioChannels", scope: !2286, file: !155, line: 128, baseType: !48, size: 16, offset: 400)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "audioCodecFlags", scope: !2286, file: !155, line: 129, baseType: !22, size: 32, offset: 416)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitRate", scope: !2286, file: !155, line: 130, baseType: !22, size: 32, offset: 448)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2286, file: !155, line: 131, baseType: !22, size: 32, offset: 480)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "ffcodecdata", scope: !2219, file: !155, line: 409, baseType: !2306, size: 576, offset: 2624)
!2306 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFMpegCodecData", file: !155, line: 134, size: 576, elements: !2307)
!2307 = !{!2308, !2309, !2310, !2311, !2312, !2313, !2314, !2315, !2316, !2317, !2318, !2319, !2320, !2321, !2322, !2323, !2324}
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2306, file: !155, line: 135, baseType: !22, size: 32)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !2306, file: !155, line: 136, baseType: !22, size: 32, offset: 32)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "audio_codec", scope: !2306, file: !155, line: 137, baseType: !22, size: 32, offset: 64)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "video_bitrate", scope: !2306, file: !155, line: 138, baseType: !22, size: 32, offset: 96)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "audio_bitrate", scope: !2306, file: !155, line: 139, baseType: !22, size: 32, offset: 128)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "audio_mixrate", scope: !2306, file: !155, line: 140, baseType: !22, size: 32, offset: 160)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "audio_channels", scope: !2306, file: !155, line: 141, baseType: !22, size: 32, offset: 192)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "audio_pad", scope: !2306, file: !155, line: 142, baseType: !22, size: 32, offset: 224)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "audio_volume", scope: !2306, file: !155, line: 143, baseType: !192, size: 32, offset: 256)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "gop_size", scope: !2306, file: !155, line: 144, baseType: !22, size: 32, offset: 288)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2306, file: !155, line: 145, baseType: !22, size: 32, offset: 320)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_rate", scope: !2306, file: !155, line: 147, baseType: !22, size: 32, offset: 352)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_rate", scope: !2306, file: !155, line: 148, baseType: !22, size: 32, offset: 384)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "rc_buffer_size", scope: !2306, file: !155, line: 149, baseType: !22, size: 32, offset: 416)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "mux_packet_size", scope: !2306, file: !155, line: 150, baseType: !22, size: 32, offset: 448)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "mux_rate", scope: !2306, file: !155, line: 151, baseType: !22, size: 32, offset: 480)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !2306, file: !155, line: 152, baseType: !37, size: 64, offset: 512)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "cfra", scope: !2219, file: !155, line: 411, baseType: !22, size: 32, offset: 3200)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !2219, file: !155, line: 411, baseType: !22, size: 32, offset: 3232)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "efra", scope: !2219, file: !155, line: 411, baseType: !22, size: 32, offset: 3264)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "subframe", scope: !2219, file: !155, line: 412, baseType: !192, size: 32, offset: 3296)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "psfra", scope: !2219, file: !155, line: 413, baseType: !22, size: 32, offset: 3328)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "pefra", scope: !2219, file: !155, line: 413, baseType: !22, size: 32, offset: 3360)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "images", scope: !2219, file: !155, line: 415, baseType: !22, size: 32, offset: 3392)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "framapto", scope: !2219, file: !155, line: 415, baseType: !22, size: 32, offset: 3424)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2219, file: !155, line: 416, baseType: !48, size: 16, offset: 3456)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "threads", scope: !2219, file: !155, line: 416, baseType: !48, size: 16, offset: 3472)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "framelen", scope: !2219, file: !155, line: 418, baseType: !192, size: 32, offset: 3488)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "blurfac", scope: !2219, file: !155, line: 418, baseType: !192, size: 32, offset: 3520)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "edgeR", scope: !2219, file: !155, line: 421, baseType: !192, size: 32, offset: 3552)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "edgeG", scope: !2219, file: !155, line: 421, baseType: !192, size: 32, offset: 3584)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "edgeB", scope: !2219, file: !155, line: 421, baseType: !192, size: 32, offset: 3616)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "fullscreen", scope: !2219, file: !155, line: 425, baseType: !48, size: 16, offset: 3648)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !2219, file: !155, line: 425, baseType: !48, size: 16, offset: 3664)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !2219, file: !155, line: 425, baseType: !48, size: 16, offset: 3680)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !2219, file: !155, line: 426, baseType: !48, size: 16, offset: 3696)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !2219, file: !155, line: 428, baseType: !48, size: 16, offset: 3712)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !2219, file: !155, line: 428, baseType: !48, size: 16, offset: 3728)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "frame_step", scope: !2219, file: !155, line: 431, baseType: !22, size: 32, offset: 3744)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !2219, file: !155, line: 433, baseType: !48, size: 16, offset: 3776)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "dimensionspreset", scope: !2219, file: !155, line: 435, baseType: !48, size: 16, offset: 3792)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "filtertype", scope: !2219, file: !155, line: 437, baseType: !48, size: 16, offset: 3808)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2219, file: !155, line: 439, baseType: !48, size: 16, offset: 3824)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "maximsize", scope: !2219, file: !155, line: 441, baseType: !48, size: 16, offset: 3840)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "pad6", scope: !2219, file: !155, line: 443, baseType: !48, size: 16, offset: 3856)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "xsch", scope: !2219, file: !155, line: 449, baseType: !22, size: 32, offset: 3872)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "ysch", scope: !2219, file: !155, line: 453, baseType: !22, size: 32, offset: 3904)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "xparts", scope: !2219, file: !155, line: 458, baseType: !48, size: 16, offset: 3936)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "yparts", scope: !2219, file: !155, line: 462, baseType: !48, size: 16, offset: 3952)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "tilex", scope: !2219, file: !155, line: 467, baseType: !22, size: 32, offset: 3968)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "tiley", scope: !2219, file: !155, line: 467, baseType: !22, size: 32, offset: 4000)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !2219, file: !155, line: 469, baseType: !48, size: 16, offset: 4032)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !2219, file: !155, line: 469, baseType: !48, size: 16, offset: 4048)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "subimtype", scope: !2219, file: !155, line: 469, baseType: !48, size: 16, offset: 4064)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !2219, file: !155, line: 469, baseType: !48, size: 16, offset: 4080)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "displaymode", scope: !2219, file: !155, line: 474, baseType: !48, size: 16, offset: 4096)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "use_lock_interface", scope: !2219, file: !155, line: 475, baseType: !14, size: 8, offset: 4112)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "pad7", scope: !2219, file: !155, line: 476, baseType: !14, size: 8, offset: 4120)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "scemode", scope: !2219, file: !155, line: 481, baseType: !22, size: 32, offset: 4128)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2219, file: !155, line: 486, baseType: !22, size: 32, offset: 4160)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_options", scope: !2219, file: !155, line: 491, baseType: !22, size: 32, offset: 4192)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_structure", scope: !2219, file: !155, line: 496, baseType: !48, size: 16, offset: 4224)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2219, file: !155, line: 498, baseType: !48, size: 16, offset: 4240)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "ocres", scope: !2219, file: !155, line: 501, baseType: !48, size: 16, offset: 4256)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !2219, file: !155, line: 502, baseType: !48, size: 16, offset: 4272)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "alphamode", scope: !2219, file: !155, line: 508, baseType: !48, size: 16, offset: 4288)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "osa", scope: !2219, file: !155, line: 513, baseType: !48, size: 16, offset: 4304)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec", scope: !2219, file: !155, line: 515, baseType: !48, size: 16, offset: 4320)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "edgeint", scope: !2219, file: !155, line: 515, baseType: !48, size: 16, offset: 4336)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "safety", scope: !2219, file: !155, line: 519, baseType: !749, size: 128, offset: 4352)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "border", scope: !2219, file: !155, line: 519, baseType: !749, size: 128, offset: 4480)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "disprect", scope: !2219, file: !155, line: 520, baseType: !759, size: 128, offset: 4608)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "layers", scope: !2219, file: !155, line: 523, baseType: !58, size: 128, offset: 4736)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "actlay", scope: !2219, file: !155, line: 524, baseType: !48, size: 16, offset: 4864)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "mblur_samples", scope: !2219, file: !155, line: 527, baseType: !48, size: 16, offset: 4880)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "xasp", scope: !2219, file: !155, line: 532, baseType: !192, size: 32, offset: 4896)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "yasp", scope: !2219, file: !155, line: 532, baseType: !192, size: 32, offset: 4928)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec_base", scope: !2219, file: !155, line: 534, baseType: !192, size: 32, offset: 4960)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "gauss", scope: !2219, file: !155, line: 538, baseType: !192, size: 32, offset: 4992)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "color_mgt_flag", scope: !2219, file: !155, line: 542, baseType: !22, size: 32, offset: 5024)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "postgamma", scope: !2219, file: !155, line: 545, baseType: !192, size: 32, offset: 5056)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "posthue", scope: !2219, file: !155, line: 545, baseType: !192, size: 32, offset: 5088)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "postsat", scope: !2219, file: !155, line: 545, baseType: !192, size: 32, offset: 5120)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "dither_intensity", scope: !2219, file: !155, line: 548, baseType: !192, size: 32, offset: 5152)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "bake_osa", scope: !2219, file: !155, line: 551, baseType: !48, size: 16, offset: 5184)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "bake_filter", scope: !2219, file: !155, line: 551, baseType: !48, size: 16, offset: 5200)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "bake_mode", scope: !2219, file: !155, line: 551, baseType: !48, size: 16, offset: 5216)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "bake_flag", scope: !2219, file: !155, line: 551, baseType: !48, size: 16, offset: 5232)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "bake_normal_space", scope: !2219, file: !155, line: 552, baseType: !48, size: 16, offset: 5248)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "bake_quad_split", scope: !2219, file: !155, line: 552, baseType: !48, size: 16, offset: 5264)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "bake_maxdist", scope: !2219, file: !155, line: 553, baseType: !192, size: 32, offset: 5280)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "bake_biasdist", scope: !2219, file: !155, line: 553, baseType: !192, size: 32, offset: 5312)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "bake_samples", scope: !2219, file: !155, line: 554, baseType: !48, size: 16, offset: 5344)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad", scope: !2219, file: !155, line: 554, baseType: !48, size: 16, offset: 5360)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "bake_user_scale", scope: !2219, file: !155, line: 555, baseType: !192, size: 32, offset: 5376)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad1", scope: !2219, file: !155, line: 555, baseType: !192, size: 32, offset: 5408)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "pic", scope: !2219, file: !155, line: 558, baseType: !131, size: 8192, offset: 5440)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !2219, file: !155, line: 561, baseType: !22, size: 32, offset: 13632)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_font_id", scope: !2219, file: !155, line: 562, baseType: !48, size: 16, offset: 13664)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !2219, file: !155, line: 562, baseType: !48, size: 16, offset: 13680)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_udata", scope: !2219, file: !155, line: 565, baseType: !1706, size: 6144, offset: 13696)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "fg_stamp", scope: !2219, file: !155, line: 568, baseType: !404, size: 128, offset: 19840)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "bg_stamp", scope: !2219, file: !155, line: 569, baseType: !404, size: 128, offset: 19968)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "seq_prev_type", scope: !2219, file: !155, line: 572, baseType: !14, size: 8, offset: 20096)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "seq_rend_type", scope: !2219, file: !155, line: 573, baseType: !14, size: 8, offset: 20104)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "seq_flag", scope: !2219, file: !155, line: 574, baseType: !14, size: 8, offset: 20112)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !2219, file: !155, line: 575, baseType: !2069, size: 40, offset: 20120)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_flag", scope: !2219, file: !155, line: 578, baseType: !22, size: 32, offset: 20160)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_subsurf", scope: !2219, file: !155, line: 579, baseType: !48, size: 16, offset: 20192)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_shadowsamples", scope: !2219, file: !155, line: 580, baseType: !48, size: 16, offset: 20208)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_particles", scope: !2219, file: !155, line: 581, baseType: !192, size: 32, offset: 20224)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_aosss", scope: !2219, file: !155, line: 582, baseType: !192, size: 32, offset: 20256)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "cineonwhite", scope: !2219, file: !155, line: 585, baseType: !48, size: 16, offset: 20288)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "cineonblack", scope: !2219, file: !155, line: 585, baseType: !48, size: 16, offset: 20304)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "cineongamma", scope: !2219, file: !155, line: 586, baseType: !192, size: 32, offset: 20320)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_preset", scope: !2219, file: !155, line: 589, baseType: !48, size: 16, offset: 20352)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_depth", scope: !2219, file: !155, line: 589, baseType: !48, size: 16, offset: 20368)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "rpad3", scope: !2219, file: !155, line: 590, baseType: !22, size: 32, offset: 20384)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "domeres", scope: !2219, file: !155, line: 593, baseType: !48, size: 16, offset: 20416)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "domemode", scope: !2219, file: !155, line: 593, baseType: !48, size: 16, offset: 20432)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "domeangle", scope: !2219, file: !155, line: 594, baseType: !48, size: 16, offset: 20448)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "dometilt", scope: !2219, file: !155, line: 594, baseType: !48, size: 16, offset: 20464)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "domeresbuf", scope: !2219, file: !155, line: 595, baseType: !192, size: 32, offset: 20480)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2219, file: !155, line: 596, baseType: !192, size: 32, offset: 20512)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "dometext", scope: !2219, file: !155, line: 597, baseType: !2433, size: 64, offset: 20544)
!2433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2434, size: 64)
!2434 = !DICompositeType(tag: DW_TAG_structure_type, name: "Text", file: !2435, line: 44, flags: DIFlagFwdDecl)
!2435 = !DIFile(filename: "blender/source/blender/makesdna/DNA_freestyle_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "line_thickness_mode", scope: !2219, file: !155, line: 600, baseType: !22, size: 32, offset: 20608)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "unit_line_thickness", scope: !2219, file: !155, line: 601, baseType: !192, size: 32, offset: 20640)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "engine", scope: !2219, file: !155, line: 604, baseType: !2439, size: 256, offset: 20672)
!2439 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 256, elements: !435)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "bake", scope: !2219, file: !155, line: 607, baseType: !2441, size: 10880, offset: 20928)
!2441 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BakeData", file: !155, line: 364, size: 10880, elements: !2442)
!2442 = !{!2443, !2444, !2445, !2446, !2447, !2448, !2449, !2450, !2451, !2452, !2453, !2454, !2455}
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !2441, file: !155, line: 365, baseType: !2222, size: 1984)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !2441, file: !155, line: 367, baseType: !131, size: 8192, offset: 1984)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !2441, file: !155, line: 369, baseType: !48, size: 16, offset: 10176)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !2441, file: !155, line: 369, baseType: !48, size: 16, offset: 10192)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !2441, file: !155, line: 370, baseType: !48, size: 16, offset: 10208)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2441, file: !155, line: 370, baseType: !48, size: 16, offset: 10224)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "cage_extrusion", scope: !2441, file: !155, line: 372, baseType: !192, size: 32, offset: 10240)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2441, file: !155, line: 373, baseType: !192, size: 32, offset: 10272)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "normal_swizzle", scope: !2441, file: !155, line: 375, baseType: !1982, size: 24, offset: 10304)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "normal_space", scope: !2441, file: !155, line: 376, baseType: !14, size: 8, offset: 10328)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "save_mode", scope: !2441, file: !155, line: 378, baseType: !14, size: 8, offset: 10336)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2441, file: !155, line: 379, baseType: !1982, size: 24, offset: 10344)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "cage", scope: !2441, file: !155, line: 381, baseType: !33, size: 512, offset: 10368)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "preview_start_resolution", scope: !2219, file: !155, line: 609, baseType: !22, size: 32, offset: 31808)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2219, file: !155, line: 610, baseType: !22, size: 32, offset: 31840)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "audio", scope: !154, file: !155, line: 1252, baseType: !2459, size: 256, offset: 34112)
!2459 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AudioData", file: !155, line: 158, size: 256, elements: !2460)
!2460 = !{!2461, !2462, !2463, !2464, !2465, !2466, !2467, !2468, !2469}
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "mixrate", scope: !2459, file: !155, line: 159, baseType: !22, size: 32)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "main", scope: !2459, file: !155, line: 160, baseType: !192, size: 32, offset: 32)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "speed_of_sound", scope: !2459, file: !155, line: 161, baseType: !192, size: 32, offset: 64)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "doppler_factor", scope: !2459, file: !155, line: 162, baseType: !192, size: 32, offset: 96)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "distance_model", scope: !2459, file: !155, line: 163, baseType: !22, size: 32, offset: 128)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2459, file: !155, line: 164, baseType: !48, size: 16, offset: 160)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2459, file: !155, line: 165, baseType: !48, size: 16, offset: 176)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "volume", scope: !2459, file: !155, line: 166, baseType: !192, size: 32, offset: 192)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2459, file: !155, line: 167, baseType: !192, size: 32, offset: 224)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !154, file: !155, line: 1254, baseType: !58, size: 128, offset: 34368)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "transform_spaces", scope: !154, file: !155, line: 1255, baseType: !58, size: 128, offset: 34496)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene", scope: !154, file: !155, line: 1257, baseType: !56, size: 64, offset: 34624)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene_handle", scope: !154, file: !155, line: 1258, baseType: !56, size: 64, offset: 34688)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scrub_handle", scope: !154, file: !155, line: 1259, baseType: !56, size: 64, offset: 34752)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "speaker_handles", scope: !154, file: !155, line: 1260, baseType: !56, size: 64, offset: 34816)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "fps_info", scope: !154, file: !155, line: 1262, baseType: !56, size: 64, offset: 34880)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "theDag", scope: !154, file: !155, line: 1265, baseType: !2478, size: 64, offset: 34944)
!2478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2479, size: 64)
!2479 = !DICompositeType(tag: DW_TAG_structure_type, name: "DagForest", file: !155, line: 1265, flags: DIFlagFwdDecl)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "dagflags", scope: !154, file: !155, line: 1266, baseType: !48, size: 16, offset: 35008)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !154, file: !155, line: 1267, baseType: !48, size: 16, offset: 35024)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "active_keyingset", scope: !154, file: !155, line: 1270, baseType: !22, size: 32, offset: 35040)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "keyingsets", scope: !154, file: !155, line: 1271, baseType: !58, size: 128, offset: 35072)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !154, file: !155, line: 1274, baseType: !2485, size: 128, offset: 35200)
!2485 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameFraming", file: !155, line: 650, size: 128, elements: !2486)
!2486 = !{!2487, !2488, !2489, !2490, !2491}
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !2485, file: !155, line: 651, baseType: !228, size: 96)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2485, file: !155, line: 652, baseType: !14, size: 8, offset: 96)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2485, file: !155, line: 652, baseType: !14, size: 8, offset: 104)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2485, file: !155, line: 652, baseType: !14, size: 8, offset: 112)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !2485, file: !155, line: 652, baseType: !14, size: 8, offset: 120)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "gm", scope: !154, file: !155, line: 1275, baseType: !2493, size: 1472, offset: 35328)
!2493 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameData", file: !155, line: 676, size: 1472, elements: !2494)
!2494 = !{!2495, !2496, !2497, !2498, !2499, !2500, !2501, !2502, !2503, !2504, !2505, !2506, !2516, !2517, !2518, !2519, !2538, !2539, !2540, !2541, !2542, !2543, !2544, !2545, !2546, !2547, !2548, !2549, !2550, !2551, !2552, !2553, !2554, !2555, !2556, !2557}
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !2493, file: !155, line: 679, baseType: !2485, size: 128)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "playerflag", scope: !2493, file: !155, line: 680, baseType: !48, size: 16, offset: 128)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !2493, file: !155, line: 680, baseType: !48, size: 16, offset: 144)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !2493, file: !155, line: 680, baseType: !48, size: 16, offset: 160)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !2493, file: !155, line: 680, baseType: !48, size: 16, offset: 176)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !2493, file: !155, line: 681, baseType: !48, size: 16, offset: 192)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !2493, file: !155, line: 681, baseType: !48, size: 16, offset: 208)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "rt1", scope: !2493, file: !155, line: 681, baseType: !48, size: 16, offset: 224)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "rt2", scope: !2493, file: !155, line: 681, baseType: !48, size: 16, offset: 240)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "aasamples", scope: !2493, file: !155, line: 682, baseType: !48, size: 16, offset: 256)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !2493, file: !155, line: 682, baseType: !1221, size: 48, offset: 272)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "dome", scope: !2493, file: !155, line: 685, baseType: !2507, size: 192, offset: 320)
!2507 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameDome", file: !155, line: 633, size: 192, elements: !2508)
!2508 = !{!2509, !2510, !2511, !2512, !2513, !2514, !2515}
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "res", scope: !2507, file: !155, line: 634, baseType: !48, size: 16)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2507, file: !155, line: 634, baseType: !48, size: 16, offset: 16)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "angle", scope: !2507, file: !155, line: 635, baseType: !48, size: 16, offset: 32)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "tilt", scope: !2507, file: !155, line: 635, baseType: !48, size: 16, offset: 48)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "resbuf", scope: !2507, file: !155, line: 636, baseType: !192, size: 32, offset: 64)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2507, file: !155, line: 636, baseType: !192, size: 32, offset: 96)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "warptext", scope: !2507, file: !155, line: 637, baseType: !2433, size: 64, offset: 128)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "stereoflag", scope: !2493, file: !155, line: 686, baseType: !48, size: 16, offset: 512)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !2493, file: !155, line: 686, baseType: !48, size: 16, offset: 528)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "eyeseparation", scope: !2493, file: !155, line: 687, baseType: !192, size: 32, offset: 544)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "recastData", scope: !2493, file: !155, line: 688, baseType: !2520, size: 448, offset: 576)
!2520 = !DIDerivedType(tag: DW_TAG_typedef, name: "RecastData", file: !155, line: 674, baseType: !2521)
!2521 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RecastData", file: !155, line: 659, size: 448, elements: !2522)
!2522 = !{!2523, !2524, !2525, !2526, !2527, !2528, !2529, !2530, !2531, !2532, !2533, !2534, !2535, !2536, !2537}
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "cellsize", scope: !2521, file: !155, line: 660, baseType: !192, size: 32)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "cellheight", scope: !2521, file: !155, line: 661, baseType: !192, size: 32, offset: 32)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxslope", scope: !2521, file: !155, line: 662, baseType: !192, size: 32, offset: 64)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxclimb", scope: !2521, file: !155, line: 663, baseType: !192, size: 32, offset: 96)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "agentheight", scope: !2521, file: !155, line: 664, baseType: !192, size: 32, offset: 128)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "agentradius", scope: !2521, file: !155, line: 665, baseType: !192, size: 32, offset: 160)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxlen", scope: !2521, file: !155, line: 666, baseType: !192, size: 32, offset: 192)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxerror", scope: !2521, file: !155, line: 667, baseType: !192, size: 32, offset: 224)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "regionminsize", scope: !2521, file: !155, line: 668, baseType: !192, size: 32, offset: 256)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "regionmergesize", scope: !2521, file: !155, line: 669, baseType: !192, size: 32, offset: 288)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "vertsperpoly", scope: !2521, file: !155, line: 670, baseType: !22, size: 32, offset: 320)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "detailsampledist", scope: !2521, file: !155, line: 671, baseType: !192, size: 32, offset: 352)
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "detailsamplemaxerror", scope: !2521, file: !155, line: 672, baseType: !192, size: 32, offset: 384)
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2521, file: !155, line: 673, baseType: !48, size: 16, offset: 416)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2521, file: !155, line: 673, baseType: !48, size: 16, offset: 432)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !2493, file: !155, line: 692, baseType: !192, size: 32, offset: 1024)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "activityBoxRadius", scope: !2493, file: !155, line: 697, baseType: !192, size: 32, offset: 1056)
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2493, file: !155, line: 703, baseType: !22, size: 32, offset: 1088)
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2493, file: !155, line: 704, baseType: !48, size: 16, offset: 1120)
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "matmode", scope: !2493, file: !155, line: 704, baseType: !48, size: 16, offset: 1136)
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "occlusionRes", scope: !2493, file: !155, line: 705, baseType: !48, size: 16, offset: 1152)
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "physicsEngine", scope: !2493, file: !155, line: 706, baseType: !48, size: 16, offset: 1168)
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "exitkey", scope: !2493, file: !155, line: 707, baseType: !48, size: 16, offset: 1184)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "vsync", scope: !2493, file: !155, line: 708, baseType: !48, size: 16, offset: 1200)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "ticrate", scope: !2493, file: !155, line: 709, baseType: !48, size: 16, offset: 1216)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "maxlogicstep", scope: !2493, file: !155, line: 709, baseType: !48, size: 16, offset: 1232)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "physubstep", scope: !2493, file: !155, line: 709, baseType: !48, size: 16, offset: 1248)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "maxphystep", scope: !2493, file: !155, line: 709, baseType: !48, size: 16, offset: 1264)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "obstacleSimulation", scope: !2493, file: !155, line: 710, baseType: !48, size: 16, offset: 1280)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "raster_storage", scope: !2493, file: !155, line: 711, baseType: !48, size: 16, offset: 1296)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "levelHeight", scope: !2493, file: !155, line: 712, baseType: !192, size: 32, offset: 1312)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "deactivationtime", scope: !2493, file: !155, line: 713, baseType: !192, size: 32, offset: 1344)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "lineardeactthreshold", scope: !2493, file: !155, line: 713, baseType: !192, size: 32, offset: 1376)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "angulardeactthreshold", scope: !2493, file: !155, line: 713, baseType: !192, size: 32, offset: 1408)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2493, file: !155, line: 713, baseType: !192, size: 32, offset: 1440)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "unit", scope: !154, file: !155, line: 1278, baseType: !2559, size: 64, offset: 36800)
!2559 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnitSettings", file: !155, line: 1197, size: 64, elements: !2560)
!2560 = !{!2561, !2562, !2563, !2564}
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "scale_length", scope: !2559, file: !155, line: 1199, baseType: !192, size: 32)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "system", scope: !2559, file: !155, line: 1200, baseType: !14, size: 8, offset: 32)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "system_rotation", scope: !2559, file: !155, line: 1201, baseType: !14, size: 8, offset: 40)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2559, file: !155, line: 1202, baseType: !48, size: 16, offset: 48)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !154, file: !155, line: 1281, baseType: !259, size: 64, offset: 36864)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "physics_settings", scope: !154, file: !155, line: 1284, baseType: !2567, size: 192, offset: 36928)
!2567 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PhysicsSettings", file: !155, line: 1208, size: 192, elements: !2568)
!2568 = !{!2569, !2570, !2571, !2572}
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !2567, file: !155, line: 1209, baseType: !228, size: 96)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2567, file: !155, line: 1210, baseType: !22, size: 32, offset: 96)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "quick_cache_step", scope: !2567, file: !155, line: 1210, baseType: !22, size: 32, offset: 128)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !2567, file: !155, line: 1210, baseType: !22, size: 32, offset: 160)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !154, file: !155, line: 1287, baseType: !1752, size: 64, offset: 37120)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask", scope: !154, file: !155, line: 1289, baseType: !1506, size: 64, offset: 37184)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask_modal", scope: !154, file: !155, line: 1290, baseType: !1506, size: 64, offset: 37248)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !154, file: !155, line: 1293, baseType: !2240, size: 1280, offset: 37312)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !154, file: !155, line: 1294, baseType: !2252, size: 512, offset: 38592)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "sequencer_colorspace_settings", scope: !154, file: !155, line: 1295, baseType: !1153, size: 512, offset: 39104)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_world", scope: !154, file: !155, line: 1298, baseType: !2580, size: 64, offset: 39616)
!2580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2581, size: 64)
!2581 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyWorld", file: !155, line: 1298, flags: DIFlagFwdDecl)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "newscene", scope: !109, file: !110, line: 58, baseType: !153, size: 64, offset: 1536)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "redraws_flag", scope: !109, file: !110, line: 60, baseType: !22, size: 32, offset: 1600)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !109, file: !110, line: 61, baseType: !22, size: 32, offset: 1632)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !109, file: !110, line: 63, baseType: !48, size: 16, offset: 1664)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !109, file: !110, line: 64, baseType: !48, size: 16, offset: 1680)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "winid", scope: !109, file: !110, line: 65, baseType: !48, size: 16, offset: 1696)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw", scope: !109, file: !110, line: 66, baseType: !48, size: 16, offset: 1712)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "do_refresh", scope: !109, file: !110, line: 67, baseType: !48, size: 16, offset: 1728)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_gesture", scope: !109, file: !110, line: 68, baseType: !48, size: 16, offset: 1744)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_paintcursor", scope: !109, file: !110, line: 69, baseType: !48, size: 16, offset: 1760)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_drag", scope: !109, file: !110, line: 70, baseType: !48, size: 16, offset: 1776)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "swap", scope: !109, file: !110, line: 71, baseType: !48, size: 16, offset: 1792)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "mainwin", scope: !109, file: !110, line: 73, baseType: !48, size: 16, offset: 1808)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "subwinactive", scope: !109, file: !110, line: 74, baseType: !48, size: 16, offset: 1824)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !109, file: !110, line: 76, baseType: !48, size: 16, offset: 1840)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "animtimer", scope: !109, file: !110, line: 78, baseType: !95, size: 64, offset: 1856)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !109, file: !110, line: 79, baseType: !56, size: 64, offset: 1920)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "newscreen", scope: !102, file: !28, line: 175, baseType: !108, size: 64, offset: 256)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "screenname", scope: !102, file: !28, line: 176, baseType: !33, size: 512, offset: 320)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "posx", scope: !102, file: !28, line: 178, baseType: !48, size: 16, offset: 832)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "posy", scope: !102, file: !28, line: 178, baseType: !48, size: 16, offset: 848)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "sizex", scope: !102, file: !28, line: 178, baseType: !48, size: 16, offset: 864)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "sizey", scope: !102, file: !28, line: 178, baseType: !48, size: 16, offset: 880)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "windowstate", scope: !102, file: !28, line: 179, baseType: !48, size: 16, offset: 896)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "monitor", scope: !102, file: !28, line: 180, baseType: !48, size: 16, offset: 912)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !102, file: !28, line: 181, baseType: !48, size: 16, offset: 928)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !102, file: !28, line: 182, baseType: !48, size: 16, offset: 944)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "lastcursor", scope: !102, file: !28, line: 183, baseType: !48, size: 16, offset: 960)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "modalcursor", scope: !102, file: !28, line: 184, baseType: !48, size: 16, offset: 976)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "grabcursor", scope: !102, file: !28, line: 185, baseType: !48, size: 16, offset: 992)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "addmousemove", scope: !102, file: !28, line: 186, baseType: !48, size: 16, offset: 1008)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "winid", scope: !102, file: !28, line: 188, baseType: !22, size: 32, offset: 1024)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "lock_pie_event", scope: !102, file: !28, line: 190, baseType: !48, size: 16, offset: 1056)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "last_pie_event", scope: !102, file: !28, line: 191, baseType: !48, size: 16, offset: 1072)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "eventstate", scope: !102, file: !28, line: 194, baseType: !2617, size: 64, offset: 1088)
!2617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2618, size: 64)
!2618 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmEvent", file: !8, line: 421, size: 960, elements: !2619)
!2619 = !{!2620, !2621, !2622, !2623, !2624, !2625, !2626, !2627, !2628, !2629, !2630, !2631, !2632, !2633, !2634, !2636, !2637, !2638, !2639, !2640, !2641, !2642, !2643, !2644, !2645, !2653, !2654, !2655, !2656}
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2618, file: !8, line: 422, baseType: !2617, size: 64)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2618, file: !8, line: 422, baseType: !2617, size: 64, offset: 64)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2618, file: !8, line: 424, baseType: !48, size: 16, offset: 128)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2618, file: !8, line: 425, baseType: !48, size: 16, offset: 144)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !2618, file: !8, line: 426, baseType: !22, size: 32, offset: 160)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !2618, file: !8, line: 426, baseType: !22, size: 32, offset: 192)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "mval", scope: !2618, file: !8, line: 427, baseType: !1762, size: 64, offset: 224)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "utf8_buf", scope: !2618, file: !8, line: 428, baseType: !2238, size: 48, offset: 288)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "ascii", scope: !2618, file: !8, line: 431, baseType: !14, size: 8, offset: 336)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2618, file: !8, line: 432, baseType: !14, size: 8, offset: 344)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "prevtype", scope: !2618, file: !8, line: 435, baseType: !48, size: 16, offset: 352)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "prevval", scope: !2618, file: !8, line: 436, baseType: !48, size: 16, offset: 368)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "prevx", scope: !2618, file: !8, line: 437, baseType: !22, size: 32, offset: 384)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "prevy", scope: !2618, file: !8, line: 437, baseType: !22, size: 32, offset: 416)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "prevclicktime", scope: !2618, file: !8, line: 438, baseType: !2635, size: 64, offset: 448)
!2635 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "prevclickx", scope: !2618, file: !8, line: 439, baseType: !22, size: 32, offset: 512)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "prevclicky", scope: !2618, file: !8, line: 439, baseType: !22, size: 32, offset: 544)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "shift", scope: !2618, file: !8, line: 442, baseType: !48, size: 16, offset: 576)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "ctrl", scope: !2618, file: !8, line: 442, baseType: !48, size: 16, offset: 592)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !2618, file: !8, line: 442, baseType: !48, size: 16, offset: 608)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "oskey", scope: !2618, file: !8, line: 442, baseType: !48, size: 16, offset: 624)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "keymodifier", scope: !2618, file: !8, line: 443, baseType: !48, size: 16, offset: 640)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "check_click", scope: !2618, file: !8, line: 446, baseType: !48, size: 16, offset: 656)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "keymap_idname", scope: !2618, file: !8, line: 449, baseType: !12, size: 64, offset: 704)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "tablet_data", scope: !2618, file: !8, line: 452, baseType: !2646, size: 64, offset: 768)
!2646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2647, size: 64)
!2647 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmTabletData", file: !8, line: 463, size: 128, elements: !2648)
!2648 = !{!2649, !2650, !2651, !2652}
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "Active", scope: !2647, file: !8, line: 464, baseType: !22, size: 32)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "Pressure", scope: !2647, file: !8, line: 465, baseType: !192, size: 32, offset: 32)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "Xtilt", scope: !2647, file: !8, line: 466, baseType: !192, size: 32, offset: 64)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "Ytilt", scope: !2647, file: !8, line: 467, baseType: !192, size: 32, offset: 96)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "custom", scope: !2618, file: !8, line: 455, baseType: !48, size: 16, offset: 832)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "customdatafree", scope: !2618, file: !8, line: 456, baseType: !48, size: 16, offset: 848)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2618, file: !8, line: 457, baseType: !22, size: 32, offset: 864)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "customdata", scope: !2618, file: !8, line: 458, baseType: !56, size: 64, offset: 896)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "curswin", scope: !102, file: !28, line: 196, baseType: !2658, size: 64, offset: 1152)
!2658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2659, size: 64)
!2659 = !DICompositeType(tag: DW_TAG_structure_type, name: "wmSubWindow", file: !28, line: 55, flags: DIFlagFwdDecl)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "tweak", scope: !102, file: !28, line: 198, baseType: !2661, size: 64, offset: 1216)
!2661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2662, size: 64)
!2662 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmGesture", file: !8, line: 398, size: 448, elements: !2663)
!2663 = !{!2664, !2665, !2666, !2667, !2668, !2669, !2670, !2671, !2672, !2673}
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2662, file: !8, line: 399, baseType: !2661, size: 64)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2662, file: !8, line: 399, baseType: !2661, size: 64, offset: 64)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "event_type", scope: !2662, file: !8, line: 400, baseType: !22, size: 32, offset: 128)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2662, file: !8, line: 401, baseType: !22, size: 32, offset: 160)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2662, file: !8, line: 402, baseType: !22, size: 32, offset: 192)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "swinid", scope: !2662, file: !8, line: 403, baseType: !22, size: 32, offset: 224)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !2662, file: !8, line: 404, baseType: !22, size: 32, offset: 256)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2662, file: !8, line: 405, baseType: !22, size: 32, offset: 288)
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "customdata", scope: !2662, file: !8, line: 407, baseType: !56, size: 64, offset: 320)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "userdata", scope: !2662, file: !8, line: 414, baseType: !56, size: 64, offset: 384)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "drawmethod", scope: !102, file: !28, line: 200, baseType: !22, size: 32, offset: 1280)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "drawfail", scope: !102, file: !28, line: 200, baseType: !22, size: 32, offset: 1312)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "drawdata", scope: !102, file: !28, line: 201, baseType: !56, size: 64, offset: 1344)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !102, file: !28, line: 203, baseType: !58, size: 128, offset: 1408)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "handlers", scope: !102, file: !28, line: 204, baseType: !58, size: 128, offset: 1536)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "modalhandlers", scope: !102, file: !28, line: 205, baseType: !58, size: 128, offset: 1664)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "subwindows", scope: !102, file: !28, line: 207, baseType: !58, size: 128, offset: 1792)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "gesture", scope: !102, file: !28, line: 208, baseType: !58, size: 128, offset: 1920)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "timestep", scope: !96, file: !8, line: 495, baseType: !2635, size: 64, offset: 192)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "event_type", scope: !96, file: !8, line: 496, baseType: !22, size: 32, offset: 256)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "customdata", scope: !96, file: !8, line: 497, baseType: !56, size: 64, offset: 320)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !96, file: !8, line: 499, baseType: !2635, size: 64, offset: 384)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !96, file: !8, line: 500, baseType: !2635, size: 64, offset: 448)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "ltime", scope: !96, file: !8, line: 502, baseType: !2635, size: 64, offset: 512)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "ntime", scope: !96, file: !8, line: 503, baseType: !2635, size: 64, offset: 576)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !96, file: !8, line: 504, baseType: !2635, size: 64, offset: 640)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "sleep", scope: !96, file: !8, line: 505, baseType: !22, size: 32, offset: 704)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "macro", scope: !27, file: !28, line: 343, baseType: !58, size: 128, offset: 1024)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "opm", scope: !27, file: !28, line: 344, baseType: !26, size: 64, offset: 1152)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "layout", scope: !27, file: !28, line: 345, baseType: !624, size: 64, offset: 1216)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !27, file: !28, line: 346, baseType: !48, size: 16, offset: 1280)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !27, file: !28, line: 346, baseType: !1221, size: 48, offset: 1296)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !9, file: !8, line: 524, baseType: !2697, size: 64, offset: 320)
!2697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2698, size: 64)
!2698 = !DISubroutineType(types: !2699)
!2699 = !{!2013, !23, !26}
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "invoke", scope: !9, file: !8, line: 530, baseType: !2701, size: 64, offset: 384)
!2701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2702, size: 64)
!2702 = !DISubroutineType(types: !2703)
!2703 = !{!22, !23, !26, !2704}
!2704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2705, size: 64)
!2705 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2618)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "cancel", scope: !9, file: !8, line: 531, baseType: !2707, size: 64, offset: 448)
!2707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2708, size: 64)
!2708 = !DISubroutineType(types: !2709)
!2709 = !{null, !23, !26}
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "modal", scope: !9, file: !8, line: 532, baseType: !2701, size: 64, offset: 512)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !9, file: !8, line: 536, baseType: !2712, size: 64, offset: 576)
!2712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2713, size: 64)
!2713 = !DISubroutineType(types: !2714)
!2714 = !{!22, !23}
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "ui", scope: !9, file: !8, line: 539, baseType: !2707, size: 64, offset: 640)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "srna", scope: !9, file: !8, line: 542, baseType: !81, size: 64, offset: 704)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "last_properties", scope: !9, file: !8, line: 545, baseType: !43, size: 64, offset: 768)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !9, file: !8, line: 549, baseType: !2719, size: 64, offset: 832)
!2719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2720, size: 64)
!2720 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropertyRNA", file: !25, line: 333, baseType: !2721)
!2721 = !DICompositeType(tag: DW_TAG_structure_type, name: "PropertyRNA", file: !25, line: 39, flags: DIFlagFwdDecl)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "macro", scope: !9, file: !8, line: 552, baseType: !58, size: 128, offset: 896)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "modalkeymap", scope: !9, file: !8, line: 555, baseType: !2724, size: 64, offset: 1024)
!2724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2725, size: 64)
!2725 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmKeyMap", file: !28, line: 281, size: 1088, elements: !2726)
!2726 = !{!2727, !2728, !2729, !2730, !2731, !2732, !2733, !2734, !2735, !2736, !2737}
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2725, file: !28, line: 282, baseType: !2724, size: 64)
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2725, file: !28, line: 282, baseType: !2724, size: 64, offset: 64)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "items", scope: !2725, file: !28, line: 284, baseType: !58, size: 128, offset: 128)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "diff_items", scope: !2725, file: !28, line: 285, baseType: !58, size: 128, offset: 256)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !2725, file: !28, line: 287, baseType: !33, size: 512, offset: 384)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "spaceid", scope: !2725, file: !28, line: 288, baseType: !48, size: 16, offset: 896)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "regionid", scope: !2725, file: !28, line: 289, baseType: !48, size: 16, offset: 912)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2725, file: !28, line: 291, baseType: !48, size: 16, offset: 928)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "kmi_id", scope: !2725, file: !28, line: 292, baseType: !48, size: 16, offset: 944)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !2725, file: !28, line: 295, baseType: !2712, size: 64, offset: 960)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "modal_items", scope: !2725, file: !28, line: 296, baseType: !56, size: 64, offset: 1024)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "pyop_data", scope: !9, file: !8, line: 559, baseType: !56, size: 64, offset: 1088)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "pyop_poll", scope: !9, file: !8, line: 560, baseType: !2740, size: 64, offset: 1152)
!2740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2741, size: 64)
!2741 = !DISubroutineType(types: !2742)
!2742 = !{!22, !23, !69}
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "ext", scope: !9, file: !8, line: 563, baseType: !653, size: 256, offset: 1216)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !9, file: !8, line: 566, baseType: !48, size: 16, offset: 1472)
!2745 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2746, retainedTypes: !3163, globals: !3562, splitDebugInlining: false, nameTableKind: None)
!2746 = !{!2747, !2758, !2764, !2770, !2778, !2785, !2798, !2842, !2859, !2869, !2874, !2895, !2901, !3102, !3126, !3134, !3139, !3150}
!2747 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eBMOpSlotType", file: !2748, line: 94, baseType: !224, size: 32, elements: !2749)
!2748 = !DIFile(filename: "blender/source/blender/bmesh/intern/bmesh_operator_api.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2749 = !{!2750, !2751, !2752, !2753, !2754, !2755, !2756, !2757}
!2750 = !DIEnumerator(name: "BMO_OP_SLOT_BOOL", value: 1, isUnsigned: true)
!2751 = !DIEnumerator(name: "BMO_OP_SLOT_INT", value: 2, isUnsigned: true)
!2752 = !DIEnumerator(name: "BMO_OP_SLOT_FLT", value: 3, isUnsigned: true)
!2753 = !DIEnumerator(name: "BMO_OP_SLOT_PTR", value: 4, isUnsigned: true)
!2754 = !DIEnumerator(name: "BMO_OP_SLOT_MAT", value: 5, isUnsigned: true)
!2755 = !DIEnumerator(name: "BMO_OP_SLOT_VEC", value: 8, isUnsigned: true)
!2756 = !DIEnumerator(name: "BMO_OP_SLOT_ELEMENT_BUF", value: 9, isUnsigned: true)
!2757 = !DIEnumerator(name: "BMO_OP_SLOT_MAPPING", value: 10, isUnsigned: true)
!2758 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eBMOpSlotSubType_Elem", file: !2748, line: 116, baseType: !224, size: 32, elements: !2759)
!2759 = !{!2760, !2761, !2762, !2763}
!2760 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_ELEM_VERT", value: 1, isUnsigned: true)
!2761 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_ELEM_EDGE", value: 2, isUnsigned: true)
!2762 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_ELEM_FACE", value: 8, isUnsigned: true)
!2763 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_ELEM_IS_SINGLE", value: 16, isUnsigned: true)
!2764 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eBMOpSlotSubType_Ptr", file: !2748, line: 131, baseType: !224, size: 32, elements: !2765)
!2765 = !{!2766, !2767, !2768, !2769}
!2766 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_PTR_BMESH", value: 100, isUnsigned: true)
!2767 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_PTR_SCENE", value: 101, isUnsigned: true)
!2768 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_PTR_OBJECT", value: 102, isUnsigned: true)
!2769 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_PTR_MESH", value: 103, isUnsigned: true)
!2770 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eBMOpSlotSubType_Map", file: !2748, line: 123, baseType: !224, size: 32, elements: !2771)
!2771 = !{!2772, !2773, !2774, !2775, !2776, !2777}
!2772 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_MAP_EMPTY", value: 64, isUnsigned: true)
!2773 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_MAP_ELEM", value: 65, isUnsigned: true)
!2774 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_MAP_FLT", value: 66, isUnsigned: true)
!2775 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_MAP_INT", value: 67, isUnsigned: true)
!2776 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_MAP_BOOL", value: 68, isUnsigned: true)
!2777 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_MAP_INTERNAL", value: 69, isUnsigned: true)
!2778 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2748, line: 182, baseType: !224, size: 32, elements: !2779)
!2779 = !{!2780, !2781, !2782, !2783, !2784}
!2780 = !DIEnumerator(name: "BMO_OPTYPE_FLAG_NOP", value: 0, isUnsigned: true)
!2781 = !DIEnumerator(name: "BMO_OPTYPE_FLAG_UNTAN_MULTIRES", value: 1, isUnsigned: true)
!2782 = !DIEnumerator(name: "BMO_OPTYPE_FLAG_NORMALS_CALC", value: 2, isUnsigned: true)
!2783 = !DIEnumerator(name: "BMO_OPTYPE_FLAG_SELECT_FLUSH", value: 4, isUnsigned: true)
!2784 = !DIEnumerator(name: "BMO_OPTYPE_FLAG_SELECT_VALIDATE", value: 8, isUnsigned: true)
!2785 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !165, line: 339, baseType: !224, size: 32, elements: !2786)
!2786 = !{!2787, !2788, !2789, !2790, !2791, !2792, !2793, !2794, !2795, !2796, !2797}
!2787 = !DIEnumerator(name: "OB_EMPTY", value: 0, isUnsigned: true)
!2788 = !DIEnumerator(name: "OB_MESH", value: 1, isUnsigned: true)
!2789 = !DIEnumerator(name: "OB_CURVE", value: 2, isUnsigned: true)
!2790 = !DIEnumerator(name: "OB_SURF", value: 3, isUnsigned: true)
!2791 = !DIEnumerator(name: "OB_FONT", value: 4, isUnsigned: true)
!2792 = !DIEnumerator(name: "OB_MBALL", value: 5, isUnsigned: true)
!2793 = !DIEnumerator(name: "OB_LAMP", value: 10, isUnsigned: true)
!2794 = !DIEnumerator(name: "OB_CAMERA", value: 11, isUnsigned: true)
!2795 = !DIEnumerator(name: "OB_SPEAKER", value: 12, isUnsigned: true)
!2796 = !DIEnumerator(name: "OB_LATTICE", value: 22, isUnsigned: true)
!2797 = !DIEnumerator(name: "OB_ARMATURE", value: 25, isUnsigned: true)
!2798 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2799, line: 76, baseType: !224, size: 32, elements: !2800)
!2799 = !DIFile(filename: "blender/source/blender/makesdna/DNA_customdata_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2800 = !{!2801, !2802, !2803, !2804, !2805, !2806, !2807, !2808, !2809, !2810, !2811, !2812, !2813, !2814, !2815, !2816, !2817, !2818, !2819, !2820, !2821, !2822, !2823, !2824, !2825, !2826, !2827, !2828, !2829, !2830, !2831, !2832, !2833, !2834, !2835, !2836, !2837, !2838, !2839, !2840, !2841}
!2801 = !DIEnumerator(name: "CD_MVERT", value: 0, isUnsigned: true)
!2802 = !DIEnumerator(name: "CD_MSTICKY", value: 1, isUnsigned: true)
!2803 = !DIEnumerator(name: "CD_MDEFORMVERT", value: 2, isUnsigned: true)
!2804 = !DIEnumerator(name: "CD_MEDGE", value: 3, isUnsigned: true)
!2805 = !DIEnumerator(name: "CD_MFACE", value: 4, isUnsigned: true)
!2806 = !DIEnumerator(name: "CD_MTFACE", value: 5, isUnsigned: true)
!2807 = !DIEnumerator(name: "CD_MCOL", value: 6, isUnsigned: true)
!2808 = !DIEnumerator(name: "CD_ORIGINDEX", value: 7, isUnsigned: true)
!2809 = !DIEnumerator(name: "CD_NORMAL", value: 8, isUnsigned: true)
!2810 = !DIEnumerator(name: "CD_PROP_FLT", value: 10, isUnsigned: true)
!2811 = !DIEnumerator(name: "CD_PROP_INT", value: 11, isUnsigned: true)
!2812 = !DIEnumerator(name: "CD_PROP_STR", value: 12, isUnsigned: true)
!2813 = !DIEnumerator(name: "CD_ORIGSPACE", value: 13, isUnsigned: true)
!2814 = !DIEnumerator(name: "CD_ORCO", value: 14, isUnsigned: true)
!2815 = !DIEnumerator(name: "CD_MTEXPOLY", value: 15, isUnsigned: true)
!2816 = !DIEnumerator(name: "CD_MLOOPUV", value: 16, isUnsigned: true)
!2817 = !DIEnumerator(name: "CD_MLOOPCOL", value: 17, isUnsigned: true)
!2818 = !DIEnumerator(name: "CD_TANGENT", value: 18, isUnsigned: true)
!2819 = !DIEnumerator(name: "CD_MDISPS", value: 19, isUnsigned: true)
!2820 = !DIEnumerator(name: "CD_PREVIEW_MCOL", value: 20, isUnsigned: true)
!2821 = !DIEnumerator(name: "CD_ID_MCOL", value: 21, isUnsigned: true)
!2822 = !DIEnumerator(name: "CD_TEXTURE_MCOL", value: 22, isUnsigned: true)
!2823 = !DIEnumerator(name: "CD_CLOTH_ORCO", value: 23, isUnsigned: true)
!2824 = !DIEnumerator(name: "CD_RECAST", value: 24, isUnsigned: true)
!2825 = !DIEnumerator(name: "CD_MPOLY", value: 25, isUnsigned: true)
!2826 = !DIEnumerator(name: "CD_MLOOP", value: 26, isUnsigned: true)
!2827 = !DIEnumerator(name: "CD_SHAPE_KEYINDEX", value: 27, isUnsigned: true)
!2828 = !DIEnumerator(name: "CD_SHAPEKEY", value: 28, isUnsigned: true)
!2829 = !DIEnumerator(name: "CD_BWEIGHT", value: 29, isUnsigned: true)
!2830 = !DIEnumerator(name: "CD_CREASE", value: 30, isUnsigned: true)
!2831 = !DIEnumerator(name: "CD_ORIGSPACE_MLOOP", value: 31, isUnsigned: true)
!2832 = !DIEnumerator(name: "CD_PREVIEW_MLOOPCOL", value: 32, isUnsigned: true)
!2833 = !DIEnumerator(name: "CD_BM_ELEM_PYPTR", value: 33, isUnsigned: true)
!2834 = !DIEnumerator(name: "CD_PAINT_MASK", value: 34, isUnsigned: true)
!2835 = !DIEnumerator(name: "CD_GRID_PAINT_MASK", value: 35, isUnsigned: true)
!2836 = !DIEnumerator(name: "CD_MVERT_SKIN", value: 36, isUnsigned: true)
!2837 = !DIEnumerator(name: "CD_FREESTYLE_EDGE", value: 37, isUnsigned: true)
!2838 = !DIEnumerator(name: "CD_FREESTYLE_FACE", value: 38, isUnsigned: true)
!2839 = !DIEnumerator(name: "CD_MLOOPTANGENT", value: 39, isUnsigned: true)
!2840 = !DIEnumerator(name: "CD_TESSLOOPNORMAL", value: 40, isUnsigned: true)
!2841 = !DIEnumerator(name: "CD_NUMTYPES", value: 41, isUnsigned: true)
!2842 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "BMIterType", file: !2843, line: 57, baseType: !224, size: 32, elements: !2844)
!2843 = !DIFile(filename: "blender/source/blender/bmesh/intern/bmesh_iterators.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2844 = !{!2845, !2846, !2847, !2848, !2849, !2850, !2851, !2852, !2853, !2854, !2855, !2856, !2857, !2858}
!2845 = !DIEnumerator(name: "BM_VERTS_OF_MESH", value: 1, isUnsigned: true)
!2846 = !DIEnumerator(name: "BM_EDGES_OF_MESH", value: 2, isUnsigned: true)
!2847 = !DIEnumerator(name: "BM_FACES_OF_MESH", value: 3, isUnsigned: true)
!2848 = !DIEnumerator(name: "BM_EDGES_OF_VERT", value: 4, isUnsigned: true)
!2849 = !DIEnumerator(name: "BM_FACES_OF_VERT", value: 5, isUnsigned: true)
!2850 = !DIEnumerator(name: "BM_LOOPS_OF_VERT", value: 6, isUnsigned: true)
!2851 = !DIEnumerator(name: "BM_VERTS_OF_EDGE", value: 7, isUnsigned: true)
!2852 = !DIEnumerator(name: "BM_FACES_OF_EDGE", value: 8, isUnsigned: true)
!2853 = !DIEnumerator(name: "BM_VERTS_OF_FACE", value: 9, isUnsigned: true)
!2854 = !DIEnumerator(name: "BM_EDGES_OF_FACE", value: 10, isUnsigned: true)
!2855 = !DIEnumerator(name: "BM_LOOPS_OF_FACE", value: 11, isUnsigned: true)
!2856 = !DIEnumerator(name: "BM_ALL_LOOPS_OF_FACE", value: 12, isUnsigned: true)
!2857 = !DIEnumerator(name: "BM_LOOPS_OF_LOOP", value: 13, isUnsigned: true)
!2858 = !DIEnumerator(name: "BM_LOOPS_OF_EDGE", value: 14, isUnsigned: true)
!2859 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2860, line: 260, baseType: !224, size: 32, elements: !2861)
!2860 = !DIFile(filename: "blender/source/blender/bmesh/bmesh_class.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2861 = !{!2862, !2863, !2864, !2865, !2866, !2867, !2868}
!2862 = !DIEnumerator(name: "BM_ELEM_SELECT", value: 1, isUnsigned: true)
!2863 = !DIEnumerator(name: "BM_ELEM_HIDDEN", value: 2, isUnsigned: true)
!2864 = !DIEnumerator(name: "BM_ELEM_SEAM", value: 4, isUnsigned: true)
!2865 = !DIEnumerator(name: "BM_ELEM_SMOOTH", value: 8, isUnsigned: true)
!2866 = !DIEnumerator(name: "BM_ELEM_TAG", value: 16, isUnsigned: true)
!2867 = !DIEnumerator(name: "BM_ELEM_DRAW", value: 32, isUnsigned: true)
!2868 = !DIEnumerator(name: "BM_ELEM_INTERNAL_TAG", value: 128, isUnsigned: true)
!2869 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2024, line: 115, baseType: !224, size: 32, elements: !2870)
!2870 = !{!2871, !2872, !2873}
!2871 = !DIEnumerator(name: "MLOOPUV_EDGESEL", value: 1, isUnsigned: true)
!2872 = !DIEnumerator(name: "MLOOPUV_VERTSEL", value: 2, isUnsigned: true)
!2873 = !DIEnumerator(name: "MLOOPUV_PINNED", value: 4, isUnsigned: true)
!2874 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eSpaceImage_Flag", file: !826, line: 777, baseType: !224, size: 32, elements: !2875)
!2875 = !{!2876, !2877, !2878, !2879, !2880, !2881, !2882, !2883, !2884, !2885, !2886, !2887, !2888, !2889, !2890, !2891, !2892, !2893, !2894}
!2876 = !DIEnumerator(name: "SI_EDITTILE", value: 2, isUnsigned: true)
!2877 = !DIEnumerator(name: "SI_CLIP_UV", value: 4, isUnsigned: true)
!2878 = !DIEnumerator(name: "SI_NO_DRAWFACES", value: 16, isUnsigned: true)
!2879 = !DIEnumerator(name: "SI_DRAWSHADOW", value: 32, isUnsigned: true)
!2880 = !DIEnumerator(name: "SI_COORDFLOATS", value: 512, isUnsigned: true)
!2881 = !DIEnumerator(name: "SI_PIXELSNAP", value: 1024, isUnsigned: true)
!2882 = !DIEnumerator(name: "SI_LIVE_UNWRAP", value: 2048, isUnsigned: true)
!2883 = !DIEnumerator(name: "SI_USE_ALPHA", value: 4096, isUnsigned: true)
!2884 = !DIEnumerator(name: "SI_SHOW_ALPHA", value: 8192, isUnsigned: true)
!2885 = !DIEnumerator(name: "SI_SHOW_ZBUF", value: 16384, isUnsigned: true)
!2886 = !DIEnumerator(name: "SI_PREVSPACE", value: 32768, isUnsigned: true)
!2887 = !DIEnumerator(name: "SI_FULLWINDOW", value: 65536, isUnsigned: true)
!2888 = !DIEnumerator(name: "SI_DRAW_TILE", value: 524288, isUnsigned: true)
!2889 = !DIEnumerator(name: "SI_SMOOTH_UV", value: 1048576, isUnsigned: true)
!2890 = !DIEnumerator(name: "SI_DRAW_STRETCH", value: 2097152, isUnsigned: true)
!2891 = !DIEnumerator(name: "SI_SHOW_GPENCIL", value: 4194304, isUnsigned: true)
!2892 = !DIEnumerator(name: "SI_DRAW_OTHER", value: 8388608, isUnsigned: true)
!2893 = !DIEnumerator(name: "SI_COLOR_CORRECTION", value: 16777216, isUnsigned: true)
!2894 = !DIEnumerator(name: "SI_NO_DRAW_TEXPAINT", value: 33554432, isUnsigned: true)
!2895 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2860, line: 249, baseType: !224, size: 32, elements: !2896)
!2896 = !{!2897, !2898, !2899, !2900}
!2897 = !DIEnumerator(name: "BM_VERT", value: 1, isUnsigned: true)
!2898 = !DIEnumerator(name: "BM_EDGE", value: 2, isUnsigned: true)
!2899 = !DIEnumerator(name: "BM_LOOP", value: 4, isUnsigned: true)
!2900 = !DIEnumerator(name: "BM_FACE", value: 8, isUnsigned: true)
!2901 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2902, line: 54, baseType: !224, size: 32, elements: !2903)
!2902 = !DIFile(filename: "blender/source/blender/windowmanager/wm_event_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2903 = !{!2904, !2905, !2906, !2907, !2908, !2909, !2910, !2911, !2912, !2913, !2914, !2915, !2916, !2917, !2918, !2919, !2920, !2921, !2922, !2923, !2924, !2925, !2926, !2927, !2928, !2929, !2930, !2931, !2932, !2933, !2934, !2935, !2936, !2937, !2938, !2939, !2940, !2941, !2942, !2943, !2944, !2945, !2946, !2947, !2948, !2949, !2950, !2951, !2952, !2953, !2954, !2955, !2956, !2957, !2958, !2959, !2960, !2961, !2962, !2963, !2964, !2965, !2966, !2967, !2968, !2969, !2970, !2971, !2972, !2973, !2974, !2975, !2976, !2977, !2978, !2979, !2980, !2981, !2982, !2983, !2984, !2985, !2986, !2987, !2988, !2989, !2990, !2991, !2992, !2993, !2994, !2995, !2996, !2997, !2998, !2999, !3000, !3001, !3002, !3003, !3004, !3005, !3006, !3007, !3008, !3009, !3010, !3011, !3012, !3013, !3014, !3015, !3016, !3017, !3018, !3019, !3020, !3021, !3022, !3023, !3024, !3025, !3026, !3027, !3028, !3029, !3030, !3031, !3032, !3033, !3034, !3035, !3036, !3037, !3038, !3039, !3040, !3041, !3042, !3043, !3044, !3045, !3046, !3047, !3048, !3049, !3050, !3051, !3052, !3053, !3054, !3055, !3056, !3057, !3058, !3059, !3060, !3061, !3062, !3063, !3064, !3065, !3066, !3067, !3068, !3069, !3070, !3071, !3072, !3073, !3074, !3075, !3076, !3077, !3078, !3079, !3080, !3081, !3082, !3083, !3084, !3085, !3086, !3087, !3088, !3089, !3090, !3091, !3092, !3093, !3094, !3095, !3096, !3097, !3098, !3099, !3100, !3101}
!2904 = !DIEnumerator(name: "EVENT_NONE", value: 0, isUnsigned: true)
!2905 = !DIEnumerator(name: "LEFTMOUSE", value: 1, isUnsigned: true)
!2906 = !DIEnumerator(name: "MIDDLEMOUSE", value: 2, isUnsigned: true)
!2907 = !DIEnumerator(name: "RIGHTMOUSE", value: 3, isUnsigned: true)
!2908 = !DIEnumerator(name: "MOUSEMOVE", value: 4, isUnsigned: true)
!2909 = !DIEnumerator(name: "ACTIONMOUSE", value: 5, isUnsigned: true)
!2910 = !DIEnumerator(name: "SELECTMOUSE", value: 6, isUnsigned: true)
!2911 = !DIEnumerator(name: "BUTTON4MOUSE", value: 7, isUnsigned: true)
!2912 = !DIEnumerator(name: "BUTTON5MOUSE", value: 8, isUnsigned: true)
!2913 = !DIEnumerator(name: "BUTTON6MOUSE", value: 18, isUnsigned: true)
!2914 = !DIEnumerator(name: "BUTTON7MOUSE", value: 19, isUnsigned: true)
!2915 = !DIEnumerator(name: "MOUSEPAN", value: 14, isUnsigned: true)
!2916 = !DIEnumerator(name: "MOUSEZOOM", value: 15, isUnsigned: true)
!2917 = !DIEnumerator(name: "MOUSEROTATE", value: 16, isUnsigned: true)
!2918 = !DIEnumerator(name: "WHEELUPMOUSE", value: 10, isUnsigned: true)
!2919 = !DIEnumerator(name: "WHEELDOWNMOUSE", value: 11, isUnsigned: true)
!2920 = !DIEnumerator(name: "WHEELINMOUSE", value: 12, isUnsigned: true)
!2921 = !DIEnumerator(name: "WHEELOUTMOUSE", value: 13, isUnsigned: true)
!2922 = !DIEnumerator(name: "INBETWEEN_MOUSEMOVE", value: 17, isUnsigned: true)
!2923 = !DIEnumerator(name: "AKEY", value: 97, isUnsigned: true)
!2924 = !DIEnumerator(name: "BKEY", value: 98, isUnsigned: true)
!2925 = !DIEnumerator(name: "CKEY", value: 99, isUnsigned: true)
!2926 = !DIEnumerator(name: "DKEY", value: 100, isUnsigned: true)
!2927 = !DIEnumerator(name: "EKEY", value: 101, isUnsigned: true)
!2928 = !DIEnumerator(name: "FKEY", value: 102, isUnsigned: true)
!2929 = !DIEnumerator(name: "GKEY", value: 103, isUnsigned: true)
!2930 = !DIEnumerator(name: "HKEY", value: 104, isUnsigned: true)
!2931 = !DIEnumerator(name: "IKEY", value: 105, isUnsigned: true)
!2932 = !DIEnumerator(name: "JKEY", value: 106, isUnsigned: true)
!2933 = !DIEnumerator(name: "KKEY", value: 107, isUnsigned: true)
!2934 = !DIEnumerator(name: "LKEY", value: 108, isUnsigned: true)
!2935 = !DIEnumerator(name: "MKEY", value: 109, isUnsigned: true)
!2936 = !DIEnumerator(name: "NKEY", value: 110, isUnsigned: true)
!2937 = !DIEnumerator(name: "OKEY", value: 111, isUnsigned: true)
!2938 = !DIEnumerator(name: "PKEY", value: 112, isUnsigned: true)
!2939 = !DIEnumerator(name: "QKEY", value: 113, isUnsigned: true)
!2940 = !DIEnumerator(name: "RKEY", value: 114, isUnsigned: true)
!2941 = !DIEnumerator(name: "SKEY", value: 115, isUnsigned: true)
!2942 = !DIEnumerator(name: "TKEY", value: 116, isUnsigned: true)
!2943 = !DIEnumerator(name: "UKEY", value: 117, isUnsigned: true)
!2944 = !DIEnumerator(name: "VKEY", value: 118, isUnsigned: true)
!2945 = !DIEnumerator(name: "WKEY", value: 119, isUnsigned: true)
!2946 = !DIEnumerator(name: "XKEY", value: 120, isUnsigned: true)
!2947 = !DIEnumerator(name: "YKEY", value: 121, isUnsigned: true)
!2948 = !DIEnumerator(name: "ZKEY", value: 122, isUnsigned: true)
!2949 = !DIEnumerator(name: "ZEROKEY", value: 48, isUnsigned: true)
!2950 = !DIEnumerator(name: "ONEKEY", value: 49, isUnsigned: true)
!2951 = !DIEnumerator(name: "TWOKEY", value: 50, isUnsigned: true)
!2952 = !DIEnumerator(name: "THREEKEY", value: 51, isUnsigned: true)
!2953 = !DIEnumerator(name: "FOURKEY", value: 52, isUnsigned: true)
!2954 = !DIEnumerator(name: "FIVEKEY", value: 53, isUnsigned: true)
!2955 = !DIEnumerator(name: "SIXKEY", value: 54, isUnsigned: true)
!2956 = !DIEnumerator(name: "SEVENKEY", value: 55, isUnsigned: true)
!2957 = !DIEnumerator(name: "EIGHTKEY", value: 56, isUnsigned: true)
!2958 = !DIEnumerator(name: "NINEKEY", value: 57, isUnsigned: true)
!2959 = !DIEnumerator(name: "CAPSLOCKKEY", value: 211, isUnsigned: true)
!2960 = !DIEnumerator(name: "LEFTCTRLKEY", value: 212, isUnsigned: true)
!2961 = !DIEnumerator(name: "LEFTALTKEY", value: 213, isUnsigned: true)
!2962 = !DIEnumerator(name: "RIGHTALTKEY", value: 214, isUnsigned: true)
!2963 = !DIEnumerator(name: "RIGHTCTRLKEY", value: 215, isUnsigned: true)
!2964 = !DIEnumerator(name: "RIGHTSHIFTKEY", value: 216, isUnsigned: true)
!2965 = !DIEnumerator(name: "LEFTSHIFTKEY", value: 217, isUnsigned: true)
!2966 = !DIEnumerator(name: "ESCKEY", value: 218, isUnsigned: true)
!2967 = !DIEnumerator(name: "TABKEY", value: 219, isUnsigned: true)
!2968 = !DIEnumerator(name: "RETKEY", value: 220, isUnsigned: true)
!2969 = !DIEnumerator(name: "SPACEKEY", value: 221, isUnsigned: true)
!2970 = !DIEnumerator(name: "LINEFEEDKEY", value: 222, isUnsigned: true)
!2971 = !DIEnumerator(name: "BACKSPACEKEY", value: 223, isUnsigned: true)
!2972 = !DIEnumerator(name: "DELKEY", value: 224, isUnsigned: true)
!2973 = !DIEnumerator(name: "SEMICOLONKEY", value: 225, isUnsigned: true)
!2974 = !DIEnumerator(name: "PERIODKEY", value: 226, isUnsigned: true)
!2975 = !DIEnumerator(name: "COMMAKEY", value: 227, isUnsigned: true)
!2976 = !DIEnumerator(name: "QUOTEKEY", value: 228, isUnsigned: true)
!2977 = !DIEnumerator(name: "ACCENTGRAVEKEY", value: 229, isUnsigned: true)
!2978 = !DIEnumerator(name: "MINUSKEY", value: 230, isUnsigned: true)
!2979 = !DIEnumerator(name: "SLASHKEY", value: 232, isUnsigned: true)
!2980 = !DIEnumerator(name: "BACKSLASHKEY", value: 233, isUnsigned: true)
!2981 = !DIEnumerator(name: "EQUALKEY", value: 234, isUnsigned: true)
!2982 = !DIEnumerator(name: "LEFTBRACKETKEY", value: 235, isUnsigned: true)
!2983 = !DIEnumerator(name: "RIGHTBRACKETKEY", value: 236, isUnsigned: true)
!2984 = !DIEnumerator(name: "LEFTARROWKEY", value: 137, isUnsigned: true)
!2985 = !DIEnumerator(name: "DOWNARROWKEY", value: 138, isUnsigned: true)
!2986 = !DIEnumerator(name: "RIGHTARROWKEY", value: 139, isUnsigned: true)
!2987 = !DIEnumerator(name: "UPARROWKEY", value: 140, isUnsigned: true)
!2988 = !DIEnumerator(name: "PAD0", value: 150, isUnsigned: true)
!2989 = !DIEnumerator(name: "PAD1", value: 151, isUnsigned: true)
!2990 = !DIEnumerator(name: "PAD2", value: 152, isUnsigned: true)
!2991 = !DIEnumerator(name: "PAD3", value: 153, isUnsigned: true)
!2992 = !DIEnumerator(name: "PAD4", value: 154, isUnsigned: true)
!2993 = !DIEnumerator(name: "PAD5", value: 155, isUnsigned: true)
!2994 = !DIEnumerator(name: "PAD6", value: 156, isUnsigned: true)
!2995 = !DIEnumerator(name: "PAD7", value: 157, isUnsigned: true)
!2996 = !DIEnumerator(name: "PAD8", value: 158, isUnsigned: true)
!2997 = !DIEnumerator(name: "PAD9", value: 159, isUnsigned: true)
!2998 = !DIEnumerator(name: "PADPERIOD", value: 199, isUnsigned: true)
!2999 = !DIEnumerator(name: "PADASTERKEY", value: 160, isUnsigned: true)
!3000 = !DIEnumerator(name: "PADSLASHKEY", value: 161, isUnsigned: true)
!3001 = !DIEnumerator(name: "PADMINUS", value: 162, isUnsigned: true)
!3002 = !DIEnumerator(name: "PADENTER", value: 163, isUnsigned: true)
!3003 = !DIEnumerator(name: "PADPLUSKEY", value: 164, isUnsigned: true)
!3004 = !DIEnumerator(name: "PAUSEKEY", value: 165, isUnsigned: true)
!3005 = !DIEnumerator(name: "INSERTKEY", value: 166, isUnsigned: true)
!3006 = !DIEnumerator(name: "HOMEKEY", value: 167, isUnsigned: true)
!3007 = !DIEnumerator(name: "PAGEUPKEY", value: 168, isUnsigned: true)
!3008 = !DIEnumerator(name: "PAGEDOWNKEY", value: 169, isUnsigned: true)
!3009 = !DIEnumerator(name: "ENDKEY", value: 170, isUnsigned: true)
!3010 = !DIEnumerator(name: "UNKNOWNKEY", value: 171, isUnsigned: true)
!3011 = !DIEnumerator(name: "OSKEY", value: 172, isUnsigned: true)
!3012 = !DIEnumerator(name: "GRLESSKEY", value: 173, isUnsigned: true)
!3013 = !DIEnumerator(name: "MEDIAPLAY", value: 174, isUnsigned: true)
!3014 = !DIEnumerator(name: "MEDIASTOP", value: 175, isUnsigned: true)
!3015 = !DIEnumerator(name: "MEDIAFIRST", value: 176, isUnsigned: true)
!3016 = !DIEnumerator(name: "MEDIALAST", value: 177, isUnsigned: true)
!3017 = !DIEnumerator(name: "F1KEY", value: 300, isUnsigned: true)
!3018 = !DIEnumerator(name: "F2KEY", value: 301, isUnsigned: true)
!3019 = !DIEnumerator(name: "F3KEY", value: 302, isUnsigned: true)
!3020 = !DIEnumerator(name: "F4KEY", value: 303, isUnsigned: true)
!3021 = !DIEnumerator(name: "F5KEY", value: 304, isUnsigned: true)
!3022 = !DIEnumerator(name: "F6KEY", value: 305, isUnsigned: true)
!3023 = !DIEnumerator(name: "F7KEY", value: 306, isUnsigned: true)
!3024 = !DIEnumerator(name: "F8KEY", value: 307, isUnsigned: true)
!3025 = !DIEnumerator(name: "F9KEY", value: 308, isUnsigned: true)
!3026 = !DIEnumerator(name: "F10KEY", value: 309, isUnsigned: true)
!3027 = !DIEnumerator(name: "F11KEY", value: 310, isUnsigned: true)
!3028 = !DIEnumerator(name: "F12KEY", value: 311, isUnsigned: true)
!3029 = !DIEnumerator(name: "F13KEY", value: 312, isUnsigned: true)
!3030 = !DIEnumerator(name: "F14KEY", value: 313, isUnsigned: true)
!3031 = !DIEnumerator(name: "F15KEY", value: 314, isUnsigned: true)
!3032 = !DIEnumerator(name: "F16KEY", value: 315, isUnsigned: true)
!3033 = !DIEnumerator(name: "F17KEY", value: 316, isUnsigned: true)
!3034 = !DIEnumerator(name: "F18KEY", value: 317, isUnsigned: true)
!3035 = !DIEnumerator(name: "F19KEY", value: 318, isUnsigned: true)
!3036 = !DIEnumerator(name: "NDOF_MOTION", value: 400, isUnsigned: true)
!3037 = !DIEnumerator(name: "NDOF_BUTTON_NONE", value: 400, isUnsigned: true)
!3038 = !DIEnumerator(name: "NDOF_BUTTON_MENU", value: 401, isUnsigned: true)
!3039 = !DIEnumerator(name: "NDOF_BUTTON_FIT", value: 402, isUnsigned: true)
!3040 = !DIEnumerator(name: "NDOF_BUTTON_TOP", value: 403, isUnsigned: true)
!3041 = !DIEnumerator(name: "NDOF_BUTTON_BOTTOM", value: 404, isUnsigned: true)
!3042 = !DIEnumerator(name: "NDOF_BUTTON_LEFT", value: 405, isUnsigned: true)
!3043 = !DIEnumerator(name: "NDOF_BUTTON_RIGHT", value: 406, isUnsigned: true)
!3044 = !DIEnumerator(name: "NDOF_BUTTON_FRONT", value: 407, isUnsigned: true)
!3045 = !DIEnumerator(name: "NDOF_BUTTON_BACK", value: 408, isUnsigned: true)
!3046 = !DIEnumerator(name: "NDOF_BUTTON_ISO1", value: 409, isUnsigned: true)
!3047 = !DIEnumerator(name: "NDOF_BUTTON_ISO2", value: 410, isUnsigned: true)
!3048 = !DIEnumerator(name: "NDOF_BUTTON_ROLL_CW", value: 411, isUnsigned: true)
!3049 = !DIEnumerator(name: "NDOF_BUTTON_ROLL_CCW", value: 412, isUnsigned: true)
!3050 = !DIEnumerator(name: "NDOF_BUTTON_SPIN_CW", value: 413, isUnsigned: true)
!3051 = !DIEnumerator(name: "NDOF_BUTTON_SPIN_CCW", value: 414, isUnsigned: true)
!3052 = !DIEnumerator(name: "NDOF_BUTTON_TILT_CW", value: 415, isUnsigned: true)
!3053 = !DIEnumerator(name: "NDOF_BUTTON_TILT_CCW", value: 416, isUnsigned: true)
!3054 = !DIEnumerator(name: "NDOF_BUTTON_ROTATE", value: 417, isUnsigned: true)
!3055 = !DIEnumerator(name: "NDOF_BUTTON_PANZOOM", value: 418, isUnsigned: true)
!3056 = !DIEnumerator(name: "NDOF_BUTTON_DOMINANT", value: 419, isUnsigned: true)
!3057 = !DIEnumerator(name: "NDOF_BUTTON_PLUS", value: 420, isUnsigned: true)
!3058 = !DIEnumerator(name: "NDOF_BUTTON_MINUS", value: 421, isUnsigned: true)
!3059 = !DIEnumerator(name: "NDOF_BUTTON_ESC", value: 422, isUnsigned: true)
!3060 = !DIEnumerator(name: "NDOF_BUTTON_ALT", value: 423, isUnsigned: true)
!3061 = !DIEnumerator(name: "NDOF_BUTTON_SHIFT", value: 424, isUnsigned: true)
!3062 = !DIEnumerator(name: "NDOF_BUTTON_CTRL", value: 425, isUnsigned: true)
!3063 = !DIEnumerator(name: "NDOF_BUTTON_1", value: 426, isUnsigned: true)
!3064 = !DIEnumerator(name: "NDOF_BUTTON_2", value: 427, isUnsigned: true)
!3065 = !DIEnumerator(name: "NDOF_BUTTON_3", value: 428, isUnsigned: true)
!3066 = !DIEnumerator(name: "NDOF_BUTTON_4", value: 429, isUnsigned: true)
!3067 = !DIEnumerator(name: "NDOF_BUTTON_5", value: 430, isUnsigned: true)
!3068 = !DIEnumerator(name: "NDOF_BUTTON_6", value: 431, isUnsigned: true)
!3069 = !DIEnumerator(name: "NDOF_BUTTON_7", value: 432, isUnsigned: true)
!3070 = !DIEnumerator(name: "NDOF_BUTTON_8", value: 433, isUnsigned: true)
!3071 = !DIEnumerator(name: "NDOF_BUTTON_9", value: 434, isUnsigned: true)
!3072 = !DIEnumerator(name: "NDOF_BUTTON_10", value: 435, isUnsigned: true)
!3073 = !DIEnumerator(name: "NDOF_BUTTON_A", value: 436, isUnsigned: true)
!3074 = !DIEnumerator(name: "NDOF_BUTTON_B", value: 437, isUnsigned: true)
!3075 = !DIEnumerator(name: "NDOF_BUTTON_C", value: 438, isUnsigned: true)
!3076 = !DIEnumerator(name: "NDOF_LAST", value: 439, isUnsigned: true)
!3077 = !DIEnumerator(name: "INPUTCHANGE", value: 259, isUnsigned: true)
!3078 = !DIEnumerator(name: "WINDEACTIVATE", value: 260, isUnsigned: true)
!3079 = !DIEnumerator(name: "TIMER", value: 272, isUnsigned: true)
!3080 = !DIEnumerator(name: "TIMER0", value: 273, isUnsigned: true)
!3081 = !DIEnumerator(name: "TIMER1", value: 274, isUnsigned: true)
!3082 = !DIEnumerator(name: "TIMER2", value: 275, isUnsigned: true)
!3083 = !DIEnumerator(name: "TIMERJOBS", value: 276, isUnsigned: true)
!3084 = !DIEnumerator(name: "TIMERAUTOSAVE", value: 277, isUnsigned: true)
!3085 = !DIEnumerator(name: "TIMERREPORT", value: 278, isUnsigned: true)
!3086 = !DIEnumerator(name: "TIMERREGION", value: 279, isUnsigned: true)
!3087 = !DIEnumerator(name: "TIMERF", value: 287, isUnsigned: true)
!3088 = !DIEnumerator(name: "EVT_ACTIONZONE_AREA", value: 20480, isUnsigned: true)
!3089 = !DIEnumerator(name: "EVT_ACTIONZONE_REGION", value: 20481, isUnsigned: true)
!3090 = !DIEnumerator(name: "EVT_ACTIONZONE_FULLSCREEN", value: 20482, isUnsigned: true)
!3091 = !DIEnumerator(name: "EVT_TWEAK_L", value: 20483, isUnsigned: true)
!3092 = !DIEnumerator(name: "EVT_TWEAK_M", value: 20484, isUnsigned: true)
!3093 = !DIEnumerator(name: "EVT_TWEAK_R", value: 20485, isUnsigned: true)
!3094 = !DIEnumerator(name: "EVT_TWEAK_A", value: 20486, isUnsigned: true)
!3095 = !DIEnumerator(name: "EVT_TWEAK_S", value: 20487, isUnsigned: true)
!3096 = !DIEnumerator(name: "EVT_GESTURE", value: 20496, isUnsigned: true)
!3097 = !DIEnumerator(name: "EVT_FILESELECT", value: 20512, isUnsigned: true)
!3098 = !DIEnumerator(name: "EVT_BUT_OPEN", value: 20513, isUnsigned: true)
!3099 = !DIEnumerator(name: "EVT_MODAL_MAP", value: 20514, isUnsigned: true)
!3100 = !DIEnumerator(name: "EVT_DROP", value: 20515, isUnsigned: true)
!3101 = !DIEnumerator(name: "EVT_BUT_CANCEL", value: 20516, isUnsigned: true)
!3102 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eSpace_Type", file: !826, line: 1163, baseType: !224, size: 32, elements: !3103)
!3103 = !{!3104, !3105, !3106, !3107, !3108, !3109, !3110, !3111, !3112, !3113, !3114, !3115, !3116, !3117, !3118, !3119, !3120, !3121, !3122, !3123, !3124, !3125}
!3104 = !DIEnumerator(name: "SPACE_EMPTY", value: 0, isUnsigned: true)
!3105 = !DIEnumerator(name: "SPACE_VIEW3D", value: 1, isUnsigned: true)
!3106 = !DIEnumerator(name: "SPACE_IPO", value: 2, isUnsigned: true)
!3107 = !DIEnumerator(name: "SPACE_OUTLINER", value: 3, isUnsigned: true)
!3108 = !DIEnumerator(name: "SPACE_BUTS", value: 4, isUnsigned: true)
!3109 = !DIEnumerator(name: "SPACE_FILE", value: 5, isUnsigned: true)
!3110 = !DIEnumerator(name: "SPACE_IMAGE", value: 6, isUnsigned: true)
!3111 = !DIEnumerator(name: "SPACE_INFO", value: 7, isUnsigned: true)
!3112 = !DIEnumerator(name: "SPACE_SEQ", value: 8, isUnsigned: true)
!3113 = !DIEnumerator(name: "SPACE_TEXT", value: 9, isUnsigned: true)
!3114 = !DIEnumerator(name: "SPACE_IMASEL", value: 10, isUnsigned: true)
!3115 = !DIEnumerator(name: "SPACE_SOUND", value: 11, isUnsigned: true)
!3116 = !DIEnumerator(name: "SPACE_ACTION", value: 12, isUnsigned: true)
!3117 = !DIEnumerator(name: "SPACE_NLA", value: 13, isUnsigned: true)
!3118 = !DIEnumerator(name: "SPACE_SCRIPT", value: 14, isUnsigned: true)
!3119 = !DIEnumerator(name: "SPACE_TIME", value: 15, isUnsigned: true)
!3120 = !DIEnumerator(name: "SPACE_NODE", value: 16, isUnsigned: true)
!3121 = !DIEnumerator(name: "SPACE_LOGIC", value: 17, isUnsigned: true)
!3122 = !DIEnumerator(name: "SPACE_CONSOLE", value: 18, isUnsigned: true)
!3123 = !DIEnumerator(name: "SPACE_USERPREF", value: 19, isUnsigned: true)
!3124 = !DIEnumerator(name: "SPACE_CLIP", value: 20, isUnsigned: true)
!3125 = !DIEnumerator(name: "SPACEICONMAX", value: 20, isUnsigned: true)
!3126 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !28, line: 351, baseType: !224, size: 32, elements: !3127)
!3127 = !{!3128, !3129, !3130, !3131, !3132, !3133}
!3128 = !DIEnumerator(name: "OPERATOR_RUNNING_MODAL", value: 1, isUnsigned: true)
!3129 = !DIEnumerator(name: "OPERATOR_CANCELLED", value: 2, isUnsigned: true)
!3130 = !DIEnumerator(name: "OPERATOR_FINISHED", value: 4, isUnsigned: true)
!3131 = !DIEnumerator(name: "OPERATOR_PASS_THROUGH", value: 8, isUnsigned: true)
!3132 = !DIEnumerator(name: "OPERATOR_HANDLED", value: 16, isUnsigned: true)
!3133 = !DIEnumerator(name: "OPERATOR_INTERFACE", value: 32, isUnsigned: true)
!3134 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eSpaceImage_Sticky", file: !826, line: 770, baseType: !224, size: 32, elements: !3135)
!3135 = !{!3136, !3137, !3138}
!3136 = !DIEnumerator(name: "SI_STICKY_LOC", value: 0, isUnsigned: true)
!3137 = !DIEnumerator(name: "SI_STICKY_DISABLE", value: 1, isUnsigned: true)
!3138 = !DIEnumerator(name: "SI_STICKY_VERTEX", value: 2, isUnsigned: true)
!3139 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ReportType", file: !28, line: 67, baseType: !224, size: 32, elements: !3140)
!3140 = !{!3141, !3142, !3143, !3144, !3145, !3146, !3147, !3148, !3149}
!3141 = !DIEnumerator(name: "RPT_DEBUG", value: 1, isUnsigned: true)
!3142 = !DIEnumerator(name: "RPT_INFO", value: 2, isUnsigned: true)
!3143 = !DIEnumerator(name: "RPT_OPERATOR", value: 4, isUnsigned: true)
!3144 = !DIEnumerator(name: "RPT_PROPERTY", value: 8, isUnsigned: true)
!3145 = !DIEnumerator(name: "RPT_WARNING", value: 16, isUnsigned: true)
!3146 = !DIEnumerator(name: "RPT_ERROR", value: 32, isUnsigned: true)
!3147 = !DIEnumerator(name: "RPT_ERROR_INVALID_INPUT", value: 64, isUnsigned: true)
!3148 = !DIEnumerator(name: "RPT_ERROR_INVALID_CONTEXT", value: 128, isUnsigned: true)
!3149 = !DIEnumerator(name: "RPT_ERROR_OUT_OF_MEMORY", value: 256, isUnsigned: true)
!3150 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2902, line: 394, baseType: !224, size: 32, elements: !3151)
!3151 = !{!3152, !3153, !3154, !3155, !3156, !3157, !3158, !3159, !3160, !3161, !3162}
!3152 = !DIEnumerator(name: "GESTURE_MODAL_CANCEL", value: 1, isUnsigned: true)
!3153 = !DIEnumerator(name: "GESTURE_MODAL_CONFIRM", value: 2, isUnsigned: true)
!3154 = !DIEnumerator(name: "GESTURE_MODAL_SELECT", value: 3, isUnsigned: true)
!3155 = !DIEnumerator(name: "GESTURE_MODAL_DESELECT", value: 4, isUnsigned: true)
!3156 = !DIEnumerator(name: "GESTURE_MODAL_NOP", value: 5, isUnsigned: true)
!3157 = !DIEnumerator(name: "GESTURE_MODAL_CIRCLE_ADD", value: 6, isUnsigned: true)
!3158 = !DIEnumerator(name: "GESTURE_MODAL_CIRCLE_SUB", value: 7, isUnsigned: true)
!3159 = !DIEnumerator(name: "GESTURE_MODAL_BEGIN", value: 8, isUnsigned: true)
!3160 = !DIEnumerator(name: "GESTURE_MODAL_IN", value: 9, isUnsigned: true)
!3161 = !DIEnumerator(name: "GESTURE_MODAL_OUT", value: 10, isUnsigned: true)
!3162 = !DIEnumerator(name: "GESTURE_MODAL_CIRCLE_SIZE", value: 11, isUnsigned: true)
!3163 = !{!3164, !56, !822, !3166, !192, !3179, !3180, !3181, !3185, !3236, !3238, !3220, !3240, !14, !22, !3246, !3248, !3249}
!3164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3165, size: 64)
!3165 = !DIDerivedType(tag: DW_TAG_typedef, name: "Image", file: !513, line: 127, baseType: !1092)
!3166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3167, size: 64)
!3167 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMElem", file: !2860, line: 154, baseType: !3168)
!3168 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMElem", file: !2860, line: 152, size: 128, elements: !3169)
!3169 = !{!3170}
!3170 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3168, file: !2860, line: 153, baseType: !3171, size: 128)
!3171 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMHeader", file: !2860, line: 82, baseType: !3172)
!3172 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMHeader", file: !2860, line: 64, size: 128, elements: !3173)
!3173 = !{!3174, !3175, !3176, !3177, !3178}
!3174 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3172, file: !2860, line: 65, baseType: !56, size: 64)
!3175 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !3172, file: !2860, line: 66, baseType: !22, size: 32, offset: 64)
!3176 = !DIDerivedType(tag: DW_TAG_member, name: "htype", scope: !3172, file: !2860, line: 73, baseType: !14, size: 8, offset: 96)
!3177 = !DIDerivedType(tag: DW_TAG_member, name: "hflag", scope: !3172, file: !2860, line: 74, baseType: !14, size: 8, offset: 104)
!3178 = !DIDerivedType(tag: DW_TAG_member, name: "api_flag", scope: !3172, file: !2860, line: 80, baseType: !14, size: 8, offset: 112)
!3179 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMIterType", file: !2843, line: 79, baseType: !2842)
!3180 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMIter__begin_cb", file: !2843, line: 158, baseType: !678)
!3181 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMIter__step_cb", file: !2843, line: 159, baseType: !3182)
!3182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3183, size: 64)
!3183 = !DISubroutineType(types: !3184)
!3184 = !{!56, !56}
!3185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3186, size: 64)
!3186 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMVert", file: !2860, line: 103, baseType: !3187)
!3187 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMVert", file: !2860, line: 90, size: 448, elements: !3188)
!3188 = !{!3189, !3190, !3195, !3196, !3197}
!3189 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3187, file: !2860, line: 91, baseType: !3171, size: 128)
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "oflags", scope: !3187, file: !2860, line: 92, baseType: !3191, size: 64, offset: 128)
!3191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3192, size: 64)
!3192 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMFlagLayer", file: !2860, line: 180, size: 16, elements: !3193)
!3193 = !{!3194}
!3194 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !3192, file: !2860, line: 181, baseType: !48, size: 16)
!3195 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !3187, file: !2860, line: 94, baseType: !228, size: 96, offset: 192)
!3196 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !3187, file: !2860, line: 95, baseType: !228, size: 96, offset: 288)
!3197 = !DIDerivedType(tag: DW_TAG_member, name: "e", scope: !3187, file: !2860, line: 102, baseType: !3198, size: 64, offset: 384)
!3198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3199, size: 64)
!3199 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMEdge", file: !2860, line: 110, size: 640, elements: !3200)
!3200 = !{!3201, !3202, !3203, !3205, !3206, !3229, !3235}
!3201 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3199, file: !2860, line: 111, baseType: !3171, size: 128)
!3202 = !DIDerivedType(tag: DW_TAG_member, name: "oflags", scope: !3199, file: !2860, line: 112, baseType: !3191, size: 64, offset: 128)
!3203 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3199, file: !2860, line: 114, baseType: !3204, size: 64, offset: 192)
!3204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3187, size: 64)
!3205 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3199, file: !2860, line: 114, baseType: !3204, size: 64, offset: 256)
!3206 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !3199, file: !2860, line: 118, baseType: !3207, size: 64, offset: 320)
!3207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3208, size: 64)
!3208 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMLoop", file: !2860, line: 125, size: 576, elements: !3209)
!3209 = !{!3210, !3211, !3212, !3213, !3225, !3226, !3227, !3228}
!3210 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3208, file: !2860, line: 126, baseType: !3171, size: 128)
!3211 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !3208, file: !2860, line: 129, baseType: !3204, size: 64, offset: 128)
!3212 = !DIDerivedType(tag: DW_TAG_member, name: "e", scope: !3208, file: !2860, line: 130, baseType: !3198, size: 64, offset: 192)
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !3208, file: !2860, line: 131, baseType: !3214, size: 64, offset: 256)
!3214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3215, size: 64)
!3215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMFace", file: !2860, line: 164, size: 448, elements: !3216)
!3216 = !{!3217, !3218, !3219, !3222, !3223, !3224}
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3215, file: !2860, line: 165, baseType: !3171, size: 128)
!3218 = !DIDerivedType(tag: DW_TAG_member, name: "oflags", scope: !3215, file: !2860, line: 166, baseType: !3191, size: 64, offset: 128)
!3219 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !3215, file: !2860, line: 172, baseType: !3220, size: 64, offset: 192)
!3220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3221, size: 64)
!3221 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMLoop", file: !2860, line: 140, baseType: !3208)
!3222 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !3215, file: !2860, line: 174, baseType: !22, size: 32, offset: 256)
!3223 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !3215, file: !2860, line: 175, baseType: !228, size: 96, offset: 288)
!3224 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !3215, file: !2860, line: 176, baseType: !48, size: 16, offset: 384)
!3225 = !DIDerivedType(tag: DW_TAG_member, name: "radial_next", scope: !3208, file: !2860, line: 135, baseType: !3207, size: 64, offset: 320)
!3226 = !DIDerivedType(tag: DW_TAG_member, name: "radial_prev", scope: !3208, file: !2860, line: 135, baseType: !3207, size: 64, offset: 384)
!3227 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3208, file: !2860, line: 139, baseType: !3207, size: 64, offset: 448)
!3228 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3208, file: !2860, line: 139, baseType: !3207, size: 64, offset: 512)
!3229 = !DIDerivedType(tag: DW_TAG_member, name: "v1_disk_link", scope: !3199, file: !2860, line: 122, baseType: !3230, size: 128, offset: 384)
!3230 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMDiskLink", file: !2860, line: 108, baseType: !3231)
!3231 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMDiskLink", file: !2860, line: 106, size: 128, elements: !3232)
!3232 = !{!3233, !3234}
!3233 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3231, file: !2860, line: 107, baseType: !3198, size: 64)
!3234 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3231, file: !2860, line: 107, baseType: !3198, size: 64, offset: 64)
!3235 = !DIDerivedType(tag: DW_TAG_member, name: "v2_disk_link", scope: !3199, file: !2860, line: 122, baseType: !3230, size: 128, offset: 512)
!3236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3237, size: 64)
!3237 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMEdge", file: !2860, line: 123, baseType: !3199)
!3238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3239, size: 64)
!3239 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMFace", file: !2860, line: 178, baseType: !3215)
!3240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3241, size: 64)
!3241 = !DIDerivedType(tag: DW_TAG_typedef, name: "MLoopUV", file: !2024, line: 112, baseType: !3242)
!3242 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MLoopUV", file: !2024, line: 109, size: 96, elements: !3243)
!3243 = !{!3244, !3245}
!3244 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !3242, file: !2024, line: 110, baseType: !769, size: 64)
!3245 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3242, file: !2024, line: 111, baseType: !22, size: 32, offset: 64)
!3246 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !3247, line: 46, baseType: !1510)
!3247 = !DIFile(filename: "Rohit/IR2Vec-LoopOptimizationFramework/build_REL_AsrtON/lib/clang/10.0.1/include/stddef.h", directory: "/home/venkat/IF-DV")
!3248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !56, size: 64)
!3249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3250, size: 64)
!3250 = !DIDerivedType(tag: DW_TAG_typedef, name: "Mesh", file: !3251, line: 133, baseType: !3252)
!3251 = !DIFile(filename: "blender/source/blender/makesdna/DNA_mesh_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3252 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Mesh", file: !3251, line: 58, size: 11008, elements: !3253)
!3253 = !{!3254, !3255, !3256, !3257, !3258, !3261, !3262, !3268, !3277, !3287, !3293, !3295, !3303, !3314, !3325, !3338, !3346, !3355, !3356, !3364, !3366, !3514, !3515, !3516, !3517, !3518, !3519, !3520, !3521, !3522, !3523, !3524, !3525, !3526, !3527, !3528, !3529, !3530, !3531, !3532, !3533, !3534, !3535, !3536, !3537, !3538, !3539, !3540, !3541}
!3254 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3252, file: !3251, line: 59, baseType: !113, size: 960)
!3255 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !3252, file: !3251, line: 60, baseType: !159, size: 64, offset: 960)
!3256 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !3252, file: !3251, line: 62, baseType: !187, size: 64, offset: 1024)
!3257 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !3252, file: !3251, line: 64, baseType: !184, size: 64, offset: 1088)
!3258 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !3252, file: !3251, line: 65, baseType: !3259, size: 64, offset: 1152)
!3259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3260, size: 64)
!3260 = !DICompositeType(tag: DW_TAG_structure_type, name: "Key", file: !3251, line: 42, flags: DIFlagFwdDecl)
!3261 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !3252, file: !3251, line: 66, baseType: !285, size: 64, offset: 1216)
!3262 = !DIDerivedType(tag: DW_TAG_member, name: "mselect", scope: !3252, file: !3251, line: 67, baseType: !3263, size: 64, offset: 1280)
!3263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3264, size: 64)
!3264 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MSelect", file: !2024, line: 154, size: 64, elements: !3265)
!3265 = !{!3266, !3267}
!3266 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !3264, file: !2024, line: 155, baseType: !22, size: 32)
!3267 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3264, file: !2024, line: 156, baseType: !22, size: 32, offset: 32)
!3268 = !DIDerivedType(tag: DW_TAG_member, name: "mpoly", scope: !3252, file: !3251, line: 71, baseType: !3269, size: 64, offset: 1344)
!3269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3270, size: 64)
!3270 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MPoly", file: !2024, line: 79, size: 96, elements: !3271)
!3271 = !{!3272, !3273, !3274, !3275, !3276}
!3272 = !DIDerivedType(tag: DW_TAG_member, name: "loopstart", scope: !3270, file: !2024, line: 81, baseType: !22, size: 32)
!3273 = !DIDerivedType(tag: DW_TAG_member, name: "totloop", scope: !3270, file: !2024, line: 82, baseType: !22, size: 32, offset: 32)
!3274 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !3270, file: !2024, line: 83, baseType: !48, size: 16, offset: 64)
!3275 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3270, file: !2024, line: 84, baseType: !14, size: 8, offset: 80)
!3276 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3270, file: !2024, line: 84, baseType: !14, size: 8, offset: 88)
!3277 = !DIDerivedType(tag: DW_TAG_member, name: "mtpoly", scope: !3252, file: !3251, line: 72, baseType: !3278, size: 64, offset: 1408)
!3278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3279, size: 64)
!3279 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MTexPoly", file: !2024, line: 93, size: 128, elements: !3280)
!3280 = !{!3281, !3282, !3283, !3284, !3285, !3286}
!3281 = !DIDerivedType(tag: DW_TAG_member, name: "tpage", scope: !3279, file: !2024, line: 94, baseType: !1091, size: 64)
!3282 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3279, file: !2024, line: 95, baseType: !14, size: 8, offset: 64)
!3283 = !DIDerivedType(tag: DW_TAG_member, name: "transp", scope: !3279, file: !2024, line: 95, baseType: !14, size: 8, offset: 72)
!3284 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3279, file: !2024, line: 96, baseType: !48, size: 16, offset: 80)
!3285 = !DIDerivedType(tag: DW_TAG_member, name: "tile", scope: !3279, file: !2024, line: 96, baseType: !48, size: 16, offset: 96)
!3286 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3279, file: !2024, line: 96, baseType: !48, size: 16, offset: 112)
!3287 = !DIDerivedType(tag: DW_TAG_member, name: "mloop", scope: !3252, file: !3251, line: 73, baseType: !3288, size: 64, offset: 1472)
!3288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3289, size: 64)
!3289 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MLoop", file: !2024, line: 88, size: 64, elements: !3290)
!3290 = !{!3291, !3292}
!3291 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !3289, file: !2024, line: 89, baseType: !224, size: 32)
!3292 = !DIDerivedType(tag: DW_TAG_member, name: "e", scope: !3289, file: !2024, line: 90, baseType: !224, size: 32, offset: 32)
!3293 = !DIDerivedType(tag: DW_TAG_member, name: "mloopuv", scope: !3252, file: !3251, line: 74, baseType: !3294, size: 64, offset: 1536)
!3294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3242, size: 64)
!3295 = !DIDerivedType(tag: DW_TAG_member, name: "mloopcol", scope: !3252, file: !3251, line: 75, baseType: !3296, size: 64, offset: 1600)
!3296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3297, size: 64)
!3297 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MLoopCol", file: !2024, line: 129, size: 32, elements: !3298)
!3298 = !{!3299, !3300, !3301, !3302}
!3299 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !3297, file: !2024, line: 130, baseType: !14, size: 8)
!3300 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !3297, file: !2024, line: 130, baseType: !14, size: 8, offset: 8)
!3301 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !3297, file: !2024, line: 130, baseType: !14, size: 8, offset: 16)
!3302 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !3297, file: !2024, line: 130, baseType: !14, size: 8, offset: 24)
!3303 = !DIDerivedType(tag: DW_TAG_member, name: "mface", scope: !3252, file: !3251, line: 80, baseType: !3304, size: 64, offset: 1664)
!3304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3305, size: 64)
!3305 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MFace", file: !2024, line: 42, size: 160, elements: !3306)
!3306 = !{!3307, !3308, !3309, !3310, !3311, !3312, !3313}
!3307 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3305, file: !2024, line: 43, baseType: !224, size: 32)
!3308 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3305, file: !2024, line: 43, baseType: !224, size: 32, offset: 32)
!3309 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !3305, file: !2024, line: 43, baseType: !224, size: 32, offset: 64)
!3310 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3305, file: !2024, line: 43, baseType: !224, size: 32, offset: 96)
!3311 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !3305, file: !2024, line: 44, baseType: !48, size: 16, offset: 128)
!3312 = !DIDerivedType(tag: DW_TAG_member, name: "edcode", scope: !3305, file: !2024, line: 45, baseType: !14, size: 8, offset: 144)
!3313 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3305, file: !2024, line: 45, baseType: !14, size: 8, offset: 152)
!3314 = !DIDerivedType(tag: DW_TAG_member, name: "mtface", scope: !3252, file: !3251, line: 81, baseType: !3315, size: 64, offset: 1728)
!3315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3316, size: 64)
!3316 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MTFace", file: !2024, line: 160, size: 384, elements: !3317)
!3317 = !{!3318, !3319, !3320, !3321, !3322, !3323, !3324}
!3318 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !3316, file: !2024, line: 161, baseType: !1868, size: 256)
!3319 = !DIDerivedType(tag: DW_TAG_member, name: "tpage", scope: !3316, file: !2024, line: 162, baseType: !1091, size: 64, offset: 256)
!3320 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3316, file: !2024, line: 163, baseType: !14, size: 8, offset: 320)
!3321 = !DIDerivedType(tag: DW_TAG_member, name: "transp", scope: !3316, file: !2024, line: 163, baseType: !14, size: 8, offset: 328)
!3322 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3316, file: !2024, line: 164, baseType: !48, size: 16, offset: 336)
!3323 = !DIDerivedType(tag: DW_TAG_member, name: "tile", scope: !3316, file: !2024, line: 164, baseType: !48, size: 16, offset: 352)
!3324 = !DIDerivedType(tag: DW_TAG_member, name: "unwrap", scope: !3316, file: !2024, line: 164, baseType: !48, size: 16, offset: 368)
!3325 = !DIDerivedType(tag: DW_TAG_member, name: "tface", scope: !3252, file: !3251, line: 82, baseType: !3326, size: 64, offset: 1792)
!3326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3327, size: 64)
!3327 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "TFace", file: !3251, line: 136, size: 512, elements: !3328)
!3328 = !{!3329, !3330, !3331, !3333, !3334, !3335, !3336, !3337}
!3329 = !DIDerivedType(tag: DW_TAG_member, name: "tpage", scope: !3327, file: !3251, line: 137, baseType: !56, size: 64)
!3330 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !3327, file: !3251, line: 138, baseType: !1868, size: 256, offset: 64)
!3331 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !3327, file: !3251, line: 139, baseType: !3332, size: 128, offset: 320)
!3332 = !DICompositeType(tag: DW_TAG_array_type, baseType: !224, size: 128, elements: !405)
!3333 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3327, file: !3251, line: 140, baseType: !14, size: 8, offset: 448)
!3334 = !DIDerivedType(tag: DW_TAG_member, name: "transp", scope: !3327, file: !3251, line: 140, baseType: !14, size: 8, offset: 456)
!3335 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3327, file: !3251, line: 141, baseType: !48, size: 16, offset: 464)
!3336 = !DIDerivedType(tag: DW_TAG_member, name: "tile", scope: !3327, file: !3251, line: 141, baseType: !48, size: 16, offset: 480)
!3337 = !DIDerivedType(tag: DW_TAG_member, name: "unwrap", scope: !3327, file: !3251, line: 141, baseType: !48, size: 16, offset: 496)
!3338 = !DIDerivedType(tag: DW_TAG_member, name: "mvert", scope: !3252, file: !3251, line: 83, baseType: !3339, size: 64, offset: 1856)
!3339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3340, size: 64)
!3340 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MVert", file: !2024, line: 65, size: 160, elements: !3341)
!3341 = !{!3342, !3343, !3344, !3345}
!3342 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !3340, file: !2024, line: 66, baseType: !228, size: 96)
!3343 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !3340, file: !2024, line: 67, baseType: !1221, size: 48, offset: 96)
!3344 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3340, file: !2024, line: 68, baseType: !14, size: 8, offset: 144)
!3345 = !DIDerivedType(tag: DW_TAG_member, name: "bweight", scope: !3340, file: !2024, line: 68, baseType: !14, size: 8, offset: 152)
!3346 = !DIDerivedType(tag: DW_TAG_member, name: "medge", scope: !3252, file: !3251, line: 84, baseType: !3347, size: 64, offset: 1920)
!3347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3348, size: 64)
!3348 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MEdge", file: !2024, line: 48, size: 96, elements: !3349)
!3349 = !{!3350, !3351, !3352, !3353, !3354}
!3350 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3348, file: !2024, line: 49, baseType: !224, size: 32)
!3351 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3348, file: !2024, line: 49, baseType: !224, size: 32, offset: 32)
!3352 = !DIDerivedType(tag: DW_TAG_member, name: "crease", scope: !3348, file: !2024, line: 50, baseType: !14, size: 8, offset: 64)
!3353 = !DIDerivedType(tag: DW_TAG_member, name: "bweight", scope: !3348, file: !2024, line: 50, baseType: !14, size: 8, offset: 72)
!3354 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3348, file: !2024, line: 51, baseType: !48, size: 16, offset: 80)
!3355 = !DIDerivedType(tag: DW_TAG_member, name: "dvert", scope: !3252, file: !3251, line: 85, baseType: !2022, size: 64, offset: 1984)
!3356 = !DIDerivedType(tag: DW_TAG_member, name: "mcol", scope: !3252, file: !3251, line: 89, baseType: !3357, size: 64, offset: 2048)
!3357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3358, size: 64)
!3358 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MCol", file: !2024, line: 74, size: 32, elements: !3359)
!3359 = !{!3360, !3361, !3362, !3363}
!3360 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !3358, file: !2024, line: 75, baseType: !14, size: 8)
!3361 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !3358, file: !2024, line: 75, baseType: !14, size: 8, offset: 8)
!3362 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !3358, file: !2024, line: 75, baseType: !14, size: 8, offset: 16)
!3363 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !3358, file: !2024, line: 75, baseType: !14, size: 8, offset: 24)
!3364 = !DIDerivedType(tag: DW_TAG_member, name: "texcomesh", scope: !3252, file: !3251, line: 90, baseType: !3365, size: 64, offset: 2112)
!3365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3252, size: 64)
!3366 = !DIDerivedType(tag: DW_TAG_member, name: "edit_btmesh", scope: !3252, file: !3251, line: 93, baseType: !3367, size: 64, offset: 2176)
!3367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3368, size: 64)
!3368 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMEditMesh", file: !3369, line: 54, size: 896, elements: !3370)
!3369 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_editmesh.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3370 = !{!3371, !3494, !3495, !3496, !3499, !3500, !3501, !3502, !3505, !3507, !3508, !3509, !3510, !3511, !3512, !3513}
!3371 = !DIDerivedType(tag: DW_TAG_member, name: "bm", scope: !3368, file: !3369, line: 55, baseType: !3372, size: 64)
!3372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3373, size: 64)
!3373 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMesh", file: !2860, line: 186, size: 8064, elements: !3374)
!3374 = !{!3375, !3376, !3377, !3378, !3379, !3380, !3381, !3382, !3383, !3384, !3387, !3388, !3389, !3390, !3392, !3394, !3396, !3397, !3398, !3399, !3400, !3401, !3402, !3403, !3450, !3483, !3484, !3485, !3486, !3487, !3488, !3489, !3490, !3491, !3492, !3493}
!3375 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !3373, file: !2860, line: 187, baseType: !22, size: 32)
!3376 = !DIDerivedType(tag: DW_TAG_member, name: "totedge", scope: !3373, file: !2860, line: 187, baseType: !22, size: 32, offset: 32)
!3377 = !DIDerivedType(tag: DW_TAG_member, name: "totloop", scope: !3373, file: !2860, line: 187, baseType: !22, size: 32, offset: 64)
!3378 = !DIDerivedType(tag: DW_TAG_member, name: "totface", scope: !3373, file: !2860, line: 187, baseType: !22, size: 32, offset: 96)
!3379 = !DIDerivedType(tag: DW_TAG_member, name: "totvertsel", scope: !3373, file: !2860, line: 188, baseType: !22, size: 32, offset: 128)
!3380 = !DIDerivedType(tag: DW_TAG_member, name: "totedgesel", scope: !3373, file: !2860, line: 188, baseType: !22, size: 32, offset: 160)
!3381 = !DIDerivedType(tag: DW_TAG_member, name: "totfacesel", scope: !3373, file: !2860, line: 188, baseType: !22, size: 32, offset: 192)
!3382 = !DIDerivedType(tag: DW_TAG_member, name: "elem_index_dirty", scope: !3373, file: !2860, line: 193, baseType: !14, size: 8, offset: 224)
!3383 = !DIDerivedType(tag: DW_TAG_member, name: "elem_table_dirty", scope: !3373, file: !2860, line: 197, baseType: !14, size: 8, offset: 232)
!3384 = !DIDerivedType(tag: DW_TAG_member, name: "vpool", scope: !3373, file: !2860, line: 201, baseType: !3385, size: 64, offset: 256)
!3385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3386, size: 64)
!3386 = !DICompositeType(tag: DW_TAG_structure_type, name: "BLI_mempool", file: !2799, line: 71, flags: DIFlagFwdDecl)
!3387 = !DIDerivedType(tag: DW_TAG_member, name: "epool", scope: !3373, file: !2860, line: 201, baseType: !3385, size: 64, offset: 320)
!3388 = !DIDerivedType(tag: DW_TAG_member, name: "lpool", scope: !3373, file: !2860, line: 201, baseType: !3385, size: 64, offset: 384)
!3389 = !DIDerivedType(tag: DW_TAG_member, name: "fpool", scope: !3373, file: !2860, line: 201, baseType: !3385, size: 64, offset: 448)
!3390 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !3373, file: !2860, line: 208, baseType: !3391, size: 64, offset: 512)
!3391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3185, size: 64)
!3392 = !DIDerivedType(tag: DW_TAG_member, name: "etable", scope: !3373, file: !2860, line: 209, baseType: !3393, size: 64, offset: 576)
!3393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3236, size: 64)
!3394 = !DIDerivedType(tag: DW_TAG_member, name: "ftable", scope: !3373, file: !2860, line: 210, baseType: !3395, size: 64, offset: 640)
!3395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3238, size: 64)
!3396 = !DIDerivedType(tag: DW_TAG_member, name: "vtable_tot", scope: !3373, file: !2860, line: 213, baseType: !22, size: 32, offset: 704)
!3397 = !DIDerivedType(tag: DW_TAG_member, name: "etable_tot", scope: !3373, file: !2860, line: 214, baseType: !22, size: 32, offset: 736)
!3398 = !DIDerivedType(tag: DW_TAG_member, name: "ftable_tot", scope: !3373, file: !2860, line: 215, baseType: !22, size: 32, offset: 768)
!3399 = !DIDerivedType(tag: DW_TAG_member, name: "vtoolflagpool", scope: !3373, file: !2860, line: 218, baseType: !3385, size: 64, offset: 832)
!3400 = !DIDerivedType(tag: DW_TAG_member, name: "etoolflagpool", scope: !3373, file: !2860, line: 218, baseType: !3385, size: 64, offset: 896)
!3401 = !DIDerivedType(tag: DW_TAG_member, name: "ftoolflagpool", scope: !3373, file: !2860, line: 218, baseType: !3385, size: 64, offset: 960)
!3402 = !DIDerivedType(tag: DW_TAG_member, name: "stackdepth", scope: !3373, file: !2860, line: 220, baseType: !22, size: 32, offset: 1024)
!3403 = !DIDerivedType(tag: DW_TAG_member, name: "currentop", scope: !3373, file: !2860, line: 221, baseType: !3404, size: 64, offset: 1088)
!3404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3405, size: 64)
!3405 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMOperator", file: !2748, line: 190, size: 10496, elements: !3406)
!3406 = !{!3407, !3436, !3437, !3443, !3446, !3447, !3449}
!3407 = !DIDerivedType(tag: DW_TAG_member, name: "slots_in", scope: !3405, file: !2748, line: 191, baseType: !3408, size: 5120)
!3408 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3409, size: 5120, elements: !3434)
!3409 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMOpSlot", file: !2748, line: 147, size: 320, elements: !3410)
!3410 = !{!3411, !3412, !3414, !3424, !3425}
!3411 = !DIDerivedType(tag: DW_TAG_member, name: "slot_name", scope: !3409, file: !2748, line: 148, baseType: !12, size: 64)
!3412 = !DIDerivedType(tag: DW_TAG_member, name: "slot_type", scope: !3409, file: !2748, line: 149, baseType: !3413, size: 32, offset: 64)
!3413 = !DIDerivedType(tag: DW_TAG_typedef, name: "eBMOpSlotType", file: !2748, line: 112, baseType: !2747)
!3414 = !DIDerivedType(tag: DW_TAG_member, name: "slot_subtype", scope: !3409, file: !2748, line: 150, baseType: !3415, size: 32, offset: 96)
!3415 = !DIDerivedType(tag: DW_TAG_typedef, name: "eBMOpSlotSubType_Union", file: !2748, line: 142, baseType: !3416)
!3416 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "eBMOpSlotSubType_Union", file: !2748, line: 138, size: 32, elements: !3417)
!3417 = !{!3418, !3420, !3422}
!3418 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !3416, file: !2748, line: 139, baseType: !3419, size: 32)
!3419 = !DIDerivedType(tag: DW_TAG_typedef, name: "eBMOpSlotSubType_Elem", file: !2748, line: 122, baseType: !2758)
!3420 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !3416, file: !2748, line: 140, baseType: !3421, size: 32)
!3421 = !DIDerivedType(tag: DW_TAG_typedef, name: "eBMOpSlotSubType_Ptr", file: !2748, line: 136, baseType: !2764)
!3422 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !3416, file: !2748, line: 141, baseType: !3423, size: 32)
!3423 = !DIDerivedType(tag: DW_TAG_typedef, name: "eBMOpSlotSubType_Map", file: !2748, line: 130, baseType: !2770)
!3424 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !3409, file: !2748, line: 152, baseType: !22, size: 32, offset: 128)
!3425 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3409, file: !2748, line: 162, baseType: !3426, size: 128, offset: 192)
!3426 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3409, file: !2748, line: 155, size: 128, elements: !3427)
!3427 = !{!3428, !3429, !3430, !3431, !3432, !3433}
!3428 = !DIDerivedType(tag: DW_TAG_member, name: "i", scope: !3426, file: !2748, line: 156, baseType: !22, size: 32)
!3429 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !3426, file: !2748, line: 157, baseType: !192, size: 32)
!3430 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3426, file: !2748, line: 158, baseType: !56, size: 64)
!3431 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !3426, file: !2748, line: 159, baseType: !228, size: 96)
!3432 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !3426, file: !2748, line: 160, baseType: !3248, size: 64)
!3433 = !DIDerivedType(tag: DW_TAG_member, name: "ghash", scope: !3426, file: !2748, line: 161, baseType: !1064, size: 64)
!3434 = !{!3435}
!3435 = !DISubrange(count: 16)
!3436 = !DIDerivedType(tag: DW_TAG_member, name: "slots_out", scope: !3405, file: !2748, line: 192, baseType: !3408, size: 5120, offset: 5120)
!3437 = !DIDerivedType(tag: DW_TAG_member, name: "exec", scope: !3405, file: !2748, line: 193, baseType: !3438, size: 64, offset: 10240)
!3438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3439, size: 64)
!3439 = !DISubroutineType(types: !3440)
!3440 = !{null, !3441, !3404}
!3441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3442, size: 64)
!3442 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMesh", file: !2860, line: 246, baseType: !3373)
!3443 = !DIDerivedType(tag: DW_TAG_member, name: "arena", scope: !3405, file: !2748, line: 194, baseType: !3444, size: 64, offset: 10304)
!3444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3445, size: 64)
!3445 = !DICompositeType(tag: DW_TAG_structure_type, name: "MemArena", file: !2748, line: 194, flags: DIFlagFwdDecl)
!3446 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3405, file: !2748, line: 195, baseType: !22, size: 32, offset: 10368)
!3447 = !DIDerivedType(tag: DW_TAG_member, name: "type_flag", scope: !3405, file: !2748, line: 196, baseType: !3448, size: 32, offset: 10400)
!3448 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMOpTypeFlag", file: !2748, line: 188, baseType: !2778)
!3449 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3405, file: !2748, line: 197, baseType: !22, size: 32, offset: 10432)
!3450 = !DIDerivedType(tag: DW_TAG_member, name: "vdata", scope: !3373, file: !2860, line: 223, baseType: !3451, size: 1600, offset: 1152)
!3451 = !DIDerivedType(tag: DW_TAG_typedef, name: "CustomData", file: !2799, line: 73, baseType: !3452)
!3452 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CustomData", file: !2799, line: 64, size: 1600, elements: !3453)
!3453 = !{!3454, !3469, !3473, !3474, !3475, !3476, !3477}
!3454 = !DIDerivedType(tag: DW_TAG_member, name: "layers", scope: !3452, file: !2799, line: 65, baseType: !3455, size: 64)
!3455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3456, size: 64)
!3456 = !DIDerivedType(tag: DW_TAG_typedef, name: "CustomDataLayer", file: !2799, line: 53, baseType: !3457)
!3457 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CustomDataLayer", file: !2799, line: 42, size: 832, elements: !3458)
!3458 = !{!3459, !3460, !3461, !3462, !3463, !3464, !3465, !3466, !3467, !3468}
!3459 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3457, file: !2799, line: 43, baseType: !22, size: 32)
!3460 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !3457, file: !2799, line: 44, baseType: !22, size: 32, offset: 32)
!3461 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3457, file: !2799, line: 45, baseType: !22, size: 32, offset: 64)
!3462 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3457, file: !2799, line: 46, baseType: !22, size: 32, offset: 96)
!3463 = !DIDerivedType(tag: DW_TAG_member, name: "active_rnd", scope: !3457, file: !2799, line: 47, baseType: !22, size: 32, offset: 128)
!3464 = !DIDerivedType(tag: DW_TAG_member, name: "active_clone", scope: !3457, file: !2799, line: 48, baseType: !22, size: 32, offset: 160)
!3465 = !DIDerivedType(tag: DW_TAG_member, name: "active_mask", scope: !3457, file: !2799, line: 49, baseType: !22, size: 32, offset: 192)
!3466 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !3457, file: !2799, line: 50, baseType: !22, size: 32, offset: 224)
!3467 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3457, file: !2799, line: 51, baseType: !33, size: 512, offset: 256)
!3468 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3457, file: !2799, line: 52, baseType: !56, size: 64, offset: 768)
!3469 = !DIDerivedType(tag: DW_TAG_member, name: "typemap", scope: !3452, file: !2799, line: 66, baseType: !3470, size: 1312, offset: 64)
!3470 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 1312, elements: !3471)
!3471 = !{!3472}
!3472 = !DISubrange(count: 41)
!3473 = !DIDerivedType(tag: DW_TAG_member, name: "totlayer", scope: !3452, file: !2799, line: 69, baseType: !22, size: 32, offset: 1376)
!3474 = !DIDerivedType(tag: DW_TAG_member, name: "maxlayer", scope: !3452, file: !2799, line: 69, baseType: !22, size: 32, offset: 1408)
!3475 = !DIDerivedType(tag: DW_TAG_member, name: "totsize", scope: !3452, file: !2799, line: 70, baseType: !22, size: 32, offset: 1440)
!3476 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !3452, file: !2799, line: 71, baseType: !3385, size: 64, offset: 1472)
!3477 = !DIDerivedType(tag: DW_TAG_member, name: "external", scope: !3452, file: !2799, line: 72, baseType: !3478, size: 64, offset: 1536)
!3478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3479, size: 64)
!3479 = !DIDerivedType(tag: DW_TAG_typedef, name: "CustomDataExternal", file: !2799, line: 59, baseType: !3480)
!3480 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CustomDataExternal", file: !2799, line: 57, size: 8192, elements: !3481)
!3481 = !{!3482}
!3482 = !DIDerivedType(tag: DW_TAG_member, name: "filename", scope: !3480, file: !2799, line: 58, baseType: !131, size: 8192)
!3483 = !DIDerivedType(tag: DW_TAG_member, name: "edata", scope: !3373, file: !2860, line: 223, baseType: !3451, size: 1600, offset: 2752)
!3484 = !DIDerivedType(tag: DW_TAG_member, name: "ldata", scope: !3373, file: !2860, line: 223, baseType: !3451, size: 1600, offset: 4352)
!3485 = !DIDerivedType(tag: DW_TAG_member, name: "pdata", scope: !3373, file: !2860, line: 223, baseType: !3451, size: 1600, offset: 5952)
!3486 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !3373, file: !2860, line: 233, baseType: !48, size: 16, offset: 7552)
!3487 = !DIDerivedType(tag: DW_TAG_member, name: "shapenr", scope: !3373, file: !2860, line: 236, baseType: !22, size: 32, offset: 7584)
!3488 = !DIDerivedType(tag: DW_TAG_member, name: "walkers", scope: !3373, file: !2860, line: 238, baseType: !22, size: 32, offset: 7616)
!3489 = !DIDerivedType(tag: DW_TAG_member, name: "totflags", scope: !3373, file: !2860, line: 238, baseType: !22, size: 32, offset: 7648)
!3490 = !DIDerivedType(tag: DW_TAG_member, name: "selected", scope: !3373, file: !2860, line: 239, baseType: !58, size: 128, offset: 7680)
!3491 = !DIDerivedType(tag: DW_TAG_member, name: "act_face", scope: !3373, file: !2860, line: 241, baseType: !3238, size: 64, offset: 7808)
!3492 = !DIDerivedType(tag: DW_TAG_member, name: "errorstack", scope: !3373, file: !2860, line: 243, baseType: !58, size: 128, offset: 7872)
!3493 = !DIDerivedType(tag: DW_TAG_member, name: "py_handle", scope: !3373, file: !2860, line: 245, baseType: !56, size: 64, offset: 8000)
!3494 = !DIDerivedType(tag: DW_TAG_member, name: "emcopy", scope: !3368, file: !3369, line: 58, baseType: !3367, size: 64, offset: 64)
!3495 = !DIDerivedType(tag: DW_TAG_member, name: "emcopyusers", scope: !3368, file: !3369, line: 59, baseType: !22, size: 32, offset: 128)
!3496 = !DIDerivedType(tag: DW_TAG_member, name: "looptris", scope: !3368, file: !3369, line: 63, baseType: !3497, size: 64, offset: 192)
!3497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3498, size: 64)
!3498 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3207, size: 192, elements: !229)
!3499 = !DIDerivedType(tag: DW_TAG_member, name: "tottri", scope: !3368, file: !3369, line: 64, baseType: !22, size: 32, offset: 256)
!3500 = !DIDerivedType(tag: DW_TAG_member, name: "derivedFinal", scope: !3368, file: !3369, line: 67, baseType: !1502, size: 64, offset: 320)
!3501 = !DIDerivedType(tag: DW_TAG_member, name: "derivedCage", scope: !3368, file: !3369, line: 67, baseType: !1502, size: 64, offset: 384)
!3502 = !DIDerivedType(tag: DW_TAG_member, name: "lastDataMask", scope: !3368, file: !3369, line: 68, baseType: !3503, size: 64, offset: 448)
!3503 = !DIDerivedType(tag: DW_TAG_typedef, name: "CustomDataMask", file: !3504, line: 48, baseType: !1506)
!3504 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_customdata.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3505 = !DIDerivedType(tag: DW_TAG_member, name: "derivedVertColor", scope: !3368, file: !3369, line: 69, baseType: !3506, size: 64, offset: 512)
!3506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2012, size: 64)
!3507 = !DIDerivedType(tag: DW_TAG_member, name: "derivedVertColorLen", scope: !3368, file: !3369, line: 70, baseType: !22, size: 32, offset: 576)
!3508 = !DIDerivedType(tag: DW_TAG_member, name: "derivedFaceColor", scope: !3368, file: !3369, line: 71, baseType: !3506, size: 64, offset: 640)
!3509 = !DIDerivedType(tag: DW_TAG_member, name: "derivedFaceColorLen", scope: !3368, file: !3369, line: 72, baseType: !22, size: 32, offset: 704)
!3510 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !3368, file: !3369, line: 75, baseType: !48, size: 16, offset: 736)
!3511 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !3368, file: !3369, line: 76, baseType: !48, size: 16, offset: 752)
!3512 = !DIDerivedType(tag: DW_TAG_member, name: "ob", scope: !3368, file: !3369, line: 79, baseType: !163, size: 64, offset: 768)
!3513 = !DIDerivedType(tag: DW_TAG_member, name: "mirror_cdlayer", scope: !3368, file: !3369, line: 82, baseType: !22, size: 32, offset: 832)
!3514 = !DIDerivedType(tag: DW_TAG_member, name: "vdata", scope: !3252, file: !3251, line: 95, baseType: !3452, size: 1600, offset: 2240)
!3515 = !DIDerivedType(tag: DW_TAG_member, name: "edata", scope: !3252, file: !3251, line: 95, baseType: !3452, size: 1600, offset: 3840)
!3516 = !DIDerivedType(tag: DW_TAG_member, name: "fdata", scope: !3252, file: !3251, line: 95, baseType: !3452, size: 1600, offset: 5440)
!3517 = !DIDerivedType(tag: DW_TAG_member, name: "pdata", scope: !3252, file: !3251, line: 98, baseType: !3452, size: 1600, offset: 7040)
!3518 = !DIDerivedType(tag: DW_TAG_member, name: "ldata", scope: !3252, file: !3251, line: 98, baseType: !3452, size: 1600, offset: 8640)
!3519 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !3252, file: !3251, line: 101, baseType: !22, size: 32, offset: 10240)
!3520 = !DIDerivedType(tag: DW_TAG_member, name: "totedge", scope: !3252, file: !3251, line: 101, baseType: !22, size: 32, offset: 10272)
!3521 = !DIDerivedType(tag: DW_TAG_member, name: "totface", scope: !3252, file: !3251, line: 101, baseType: !22, size: 32, offset: 10304)
!3522 = !DIDerivedType(tag: DW_TAG_member, name: "totselect", scope: !3252, file: !3251, line: 101, baseType: !22, size: 32, offset: 10336)
!3523 = !DIDerivedType(tag: DW_TAG_member, name: "totpoly", scope: !3252, file: !3251, line: 104, baseType: !22, size: 32, offset: 10368)
!3524 = !DIDerivedType(tag: DW_TAG_member, name: "totloop", scope: !3252, file: !3251, line: 104, baseType: !22, size: 32, offset: 10400)
!3525 = !DIDerivedType(tag: DW_TAG_member, name: "act_face", scope: !3252, file: !3251, line: 111, baseType: !22, size: 32, offset: 10432)
!3526 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !3252, file: !3251, line: 114, baseType: !228, size: 96, offset: 10464)
!3527 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3252, file: !3251, line: 115, baseType: !228, size: 96, offset: 10560)
!3528 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !3252, file: !3251, line: 116, baseType: !228, size: 96, offset: 10656)
!3529 = !DIDerivedType(tag: DW_TAG_member, name: "drawflag", scope: !3252, file: !3251, line: 118, baseType: !22, size: 32, offset: 10752)
!3530 = !DIDerivedType(tag: DW_TAG_member, name: "texflag", scope: !3252, file: !3251, line: 119, baseType: !48, size: 16, offset: 10784)
!3531 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3252, file: !3251, line: 119, baseType: !48, size: 16, offset: 10800)
!3532 = !DIDerivedType(tag: DW_TAG_member, name: "smoothresh", scope: !3252, file: !3251, line: 120, baseType: !192, size: 32, offset: 10816)
!3533 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !3252, file: !3251, line: 121, baseType: !22, size: 32, offset: 10848)
!3534 = !DIDerivedType(tag: DW_TAG_member, name: "cd_flag", scope: !3252, file: !3251, line: 124, baseType: !14, size: 8, offset: 10880)
!3535 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3252, file: !3251, line: 124, baseType: !14, size: 8, offset: 10888)
!3536 = !DIDerivedType(tag: DW_TAG_member, name: "subdiv", scope: !3252, file: !3251, line: 126, baseType: !14, size: 8, offset: 10896)
!3537 = !DIDerivedType(tag: DW_TAG_member, name: "subdivr", scope: !3252, file: !3251, line: 126, baseType: !14, size: 8, offset: 10904)
!3538 = !DIDerivedType(tag: DW_TAG_member, name: "subsurftype", scope: !3252, file: !3251, line: 127, baseType: !14, size: 8, offset: 10912)
!3539 = !DIDerivedType(tag: DW_TAG_member, name: "editflag", scope: !3252, file: !3251, line: 128, baseType: !14, size: 8, offset: 10920)
!3540 = !DIDerivedType(tag: DW_TAG_member, name: "totcol", scope: !3252, file: !3251, line: 130, baseType: !48, size: 16, offset: 10928)
!3541 = !DIDerivedType(tag: DW_TAG_member, name: "mr", scope: !3252, file: !3251, line: 132, baseType: !3542, size: 64, offset: 10944)
!3542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3543, size: 64)
!3543 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Multires", file: !2024, line: 233, size: 3584, elements: !3544)
!3544 = !{!3545, !3546, !3549, !3550, !3551, !3552, !3553, !3554, !3555, !3556, !3557, !3558, !3559, !3561}
!3545 = !DIDerivedType(tag: DW_TAG_member, name: "levels", scope: !3543, file: !2024, line: 234, baseType: !58, size: 128)
!3546 = !DIDerivedType(tag: DW_TAG_member, name: "verts", scope: !3543, file: !2024, line: 235, baseType: !3547, size: 64, offset: 128)
!3547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3548, size: 64)
!3548 = !DIDerivedType(tag: DW_TAG_typedef, name: "MVert", file: !2024, line: 69, baseType: !3340)
!3549 = !DIDerivedType(tag: DW_TAG_member, name: "level_count", scope: !3543, file: !2024, line: 237, baseType: !2013, size: 8, offset: 192)
!3550 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !3543, file: !2024, line: 237, baseType: !2013, size: 8, offset: 200)
!3551 = !DIDerivedType(tag: DW_TAG_member, name: "newlvl", scope: !3543, file: !2024, line: 237, baseType: !2013, size: 8, offset: 208)
!3552 = !DIDerivedType(tag: DW_TAG_member, name: "edgelvl", scope: !3543, file: !2024, line: 237, baseType: !2013, size: 8, offset: 216)
!3553 = !DIDerivedType(tag: DW_TAG_member, name: "pinlvl", scope: !3543, file: !2024, line: 237, baseType: !2013, size: 8, offset: 224)
!3554 = !DIDerivedType(tag: DW_TAG_member, name: "renderlvl", scope: !3543, file: !2024, line: 237, baseType: !2013, size: 8, offset: 232)
!3555 = !DIDerivedType(tag: DW_TAG_member, name: "use_col", scope: !3543, file: !2024, line: 238, baseType: !2013, size: 8, offset: 240)
!3556 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3543, file: !2024, line: 238, baseType: !2013, size: 8, offset: 248)
!3557 = !DIDerivedType(tag: DW_TAG_member, name: "vdata", scope: !3543, file: !2024, line: 241, baseType: !3451, size: 1600, offset: 256)
!3558 = !DIDerivedType(tag: DW_TAG_member, name: "fdata", scope: !3543, file: !2024, line: 242, baseType: !3451, size: 1600, offset: 1856)
!3559 = !DIDerivedType(tag: DW_TAG_member, name: "edge_flags", scope: !3543, file: !2024, line: 243, baseType: !3560, size: 64, offset: 3456)
!3560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !48, size: 64)
!3561 = !DIDerivedType(tag: DW_TAG_member, name: "edge_creases", scope: !3543, file: !2024, line: 244, baseType: !822, size: 64, offset: 3520)
!3562 = !{!0, !3563, !3576}
!3563 = !DIGlobalVariableExpression(var: !3564, expr: !DIExpression())
!3564 = distinct !DIGlobalVariable(name: "target_items", scope: !3565, file: !3, line: 3438, type: !3567, isLocal: true, isDefinition: true)
!3565 = distinct !DISubprogram(name: "UV_OT_snap_selected", scope: !3, file: !3, line: 3436, type: !4, scopeLine: 3437, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!3566 = !{}
!3567 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3568, size: 1600, elements: !2070)
!3568 = !DIDerivedType(tag: DW_TAG_typedef, name: "EnumPropertyItem", file: !25, line: 308, baseType: !3569)
!3569 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EnumPropertyItem", file: !25, line: 302, size: 320, elements: !3570)
!3570 = !{!3571, !3572, !3573, !3574, !3575}
!3571 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !3569, file: !25, line: 303, baseType: !22, size: 32)
!3572 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !3569, file: !25, line: 304, baseType: !12, size: 64, offset: 64)
!3573 = !DIDerivedType(tag: DW_TAG_member, name: "icon", scope: !3569, file: !25, line: 305, baseType: !22, size: 32, offset: 128)
!3574 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3569, file: !25, line: 306, baseType: !12, size: 64, offset: 192)
!3575 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !3569, file: !25, line: 307, baseType: !12, size: 64, offset: 256)
!3576 = !DIGlobalVariableExpression(var: !3577, expr: !DIExpression())
!3577 = distinct !DIGlobalVariable(name: "axis_items", scope: !3578, file: !3, line: 1657, type: !3579, isLocal: true, isDefinition: true)
!3578 = distinct !DISubprogram(name: "UV_OT_align", scope: !3, file: !3, line: 1655, type: !4, scopeLine: 1656, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!3579 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3568, size: 2240, elements: !1160)
!3580 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3568, size: 960, elements: !229)
!3581 = !{i32 7, !"Dwarf Version", i32 4}
!3582 = !{i32 2, !"Debug Info Version", i32 3}
!3583 = !{i32 1, !"wchar_size", i32 4}
!3584 = !{!"clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)"}
!3585 = distinct !DISubprogram(name: "ED_uvedit_test", scope: !3, file: !3, line: 93, type: !3586, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!3586 = !DISubroutineType(types: !3587)
!3587 = !{!2013, !3588}
!3588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3589, size: 64)
!3589 = !DIDerivedType(tag: DW_TAG_typedef, name: "Object", file: !165, line: 295, baseType: !164)
!3590 = !DILocalVariable(name: "obedit", arg: 1, scope: !3585, file: !3, line: 93, type: !3588)
!3591 = !DILocation(line: 93, column: 29, scope: !3585)
!3592 = !DILocalVariable(name: "em", scope: !3585, file: !3, line: 95, type: !3593)
!3593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3594, size: 64)
!3594 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMEditMesh", file: !3369, line: 83, baseType: !3368)
!3595 = !DILocation(line: 95, column: 14, scope: !3585)
!3596 = !DILocalVariable(name: "ret", scope: !3585, file: !3, line: 96, type: !22)
!3597 = !DILocation(line: 96, column: 6, scope: !3585)
!3598 = !DILocation(line: 98, column: 7, scope: !3599)
!3599 = distinct !DILexicalBlock(scope: !3585, file: !3, line: 98, column: 6)
!3600 = !DILocation(line: 98, column: 6, scope: !3585)
!3601 = !DILocation(line: 99, column: 3, scope: !3599)
!3602 = !DILocation(line: 101, column: 6, scope: !3603)
!3603 = distinct !DILexicalBlock(scope: !3585, file: !3, line: 101, column: 6)
!3604 = !DILocation(line: 101, column: 14, scope: !3603)
!3605 = !DILocation(line: 101, column: 19, scope: !3603)
!3606 = !DILocation(line: 101, column: 6, scope: !3585)
!3607 = !DILocation(line: 102, column: 3, scope: !3603)
!3608 = !DILocation(line: 104, column: 32, scope: !3585)
!3609 = !DILocation(line: 104, column: 7, scope: !3585)
!3610 = !DILocation(line: 104, column: 5, scope: !3585)
!3611 = !DILocation(line: 105, column: 28, scope: !3585)
!3612 = !DILocation(line: 105, column: 8, scope: !3585)
!3613 = !DILocation(line: 105, column: 6, scope: !3585)
!3614 = !DILocation(line: 107, column: 9, scope: !3585)
!3615 = !DILocation(line: 107, column: 2, scope: !3585)
!3616 = !DILocation(line: 108, column: 1, scope: !3585)
!3617 = distinct !DISubprogram(name: "ED_object_get_active_image", scope: !3, file: !3, line: 139, type: !3618, scopeLine: 141, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!3618 = !DISubroutineType(types: !3619)
!3619 = !{!2013, !3588, !22, !3620, !3621, !3622, !3623}
!3620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3164, size: 64)
!3621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1526, size: 64)
!3622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !702, size: 64)
!3623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3624, size: 64)
!3624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3625, size: 64)
!3625 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeTree", file: !83, line: 391, baseType: !531)
!3626 = !DILocalVariable(name: "ob", arg: 1, scope: !3617, file: !3, line: 139, type: !3588)
!3627 = !DILocation(line: 139, column: 41, scope: !3617)
!3628 = !DILocalVariable(name: "mat_nr", arg: 2, scope: !3617, file: !3, line: 139, type: !22)
!3629 = !DILocation(line: 139, column: 49, scope: !3617)
!3630 = !DILocalVariable(name: "r_ima", arg: 3, scope: !3617, file: !3, line: 140, type: !3620)
!3631 = !DILocation(line: 140, column: 41, scope: !3617)
!3632 = !DILocalVariable(name: "r_iuser", arg: 4, scope: !3617, file: !3, line: 140, type: !3621)
!3633 = !DILocation(line: 140, column: 60, scope: !3617)
!3634 = !DILocalVariable(name: "r_node", arg: 5, scope: !3617, file: !3, line: 140, type: !3622)
!3635 = !DILocation(line: 140, column: 77, scope: !3617)
!3636 = !DILocalVariable(name: "r_ntree", arg: 6, scope: !3617, file: !3, line: 140, type: !3623)
!3637 = !DILocation(line: 140, column: 97, scope: !3617)
!3638 = !DILocalVariable(name: "ma", scope: !3617, file: !3, line: 142, type: !3639)
!3639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3640, size: 64)
!3640 = !DIDerivedType(tag: DW_TAG_typedef, name: "Material", file: !288, line: 203, baseType: !287)
!3641 = !DILocation(line: 142, column: 12, scope: !3617)
!3642 = !DILocation(line: 142, column: 39, scope: !3617)
!3643 = !DILocation(line: 142, column: 43, scope: !3617)
!3644 = !DILocation(line: 142, column: 17, scope: !3617)
!3645 = !DILocalVariable(name: "ntree", scope: !3617, file: !3, line: 143, type: !3624)
!3646 = !DILocation(line: 143, column: 13, scope: !3617)
!3647 = !DILocation(line: 143, column: 22, scope: !3617)
!3648 = !DILocation(line: 143, column: 25, scope: !3617)
!3649 = !DILocation(line: 143, column: 28, scope: !3617)
!3650 = !DILocation(line: 143, column: 32, scope: !3617)
!3651 = !DILocation(line: 143, column: 21, scope: !3617)
!3652 = !DILocation(line: 143, column: 45, scope: !3617)
!3653 = !DILocation(line: 143, column: 49, scope: !3617)
!3654 = !DILocalVariable(name: "node", scope: !3617, file: !3, line: 144, type: !702)
!3655 = !DILocation(line: 144, column: 9, scope: !3617)
!3656 = !DILocation(line: 144, column: 17, scope: !3617)
!3657 = !DILocation(line: 144, column: 16, scope: !3617)
!3658 = !DILocation(line: 144, column: 47, scope: !3617)
!3659 = !DILocation(line: 144, column: 26, scope: !3617)
!3660 = !DILocation(line: 146, column: 6, scope: !3661)
!3661 = distinct !DILexicalBlock(scope: !3617, file: !3, line: 146, column: 6)
!3662 = !DILocation(line: 146, column: 11, scope: !3661)
!3663 = !DILocation(line: 146, column: 36, scope: !3661)
!3664 = !DILocation(line: 146, column: 14, scope: !3661)
!3665 = !DILocation(line: 146, column: 6, scope: !3617)
!3666 = !DILocation(line: 147, column: 7, scope: !3667)
!3667 = distinct !DILexicalBlock(scope: !3668, file: !3, line: 147, column: 7)
!3668 = distinct !DILexicalBlock(scope: !3661, file: !3, line: 146, column: 43)
!3669 = !DILocation(line: 147, column: 7, scope: !3668)
!3670 = !DILocation(line: 147, column: 32, scope: !3667)
!3671 = !DILocation(line: 147, column: 38, scope: !3667)
!3672 = !DILocation(line: 147, column: 23, scope: !3667)
!3673 = !DILocation(line: 147, column: 15, scope: !3667)
!3674 = !DILocation(line: 147, column: 21, scope: !3667)
!3675 = !DILocation(line: 147, column: 14, scope: !3667)
!3676 = !DILocation(line: 148, column: 7, scope: !3677)
!3677 = distinct !DILexicalBlock(scope: !3668, file: !3, line: 148, column: 7)
!3678 = !DILocation(line: 148, column: 7, scope: !3668)
!3679 = !DILocation(line: 148, column: 17, scope: !3677)
!3680 = !DILocation(line: 148, column: 25, scope: !3677)
!3681 = !DILocation(line: 148, column: 16, scope: !3677)
!3682 = !DILocation(line: 149, column: 7, scope: !3683)
!3683 = distinct !DILexicalBlock(scope: !3668, file: !3, line: 149, column: 7)
!3684 = !DILocation(line: 149, column: 7, scope: !3668)
!3685 = !DILocation(line: 149, column: 25, scope: !3683)
!3686 = !DILocation(line: 149, column: 16, scope: !3683)
!3687 = !DILocation(line: 149, column: 23, scope: !3683)
!3688 = !DILocation(line: 149, column: 15, scope: !3683)
!3689 = !DILocation(line: 150, column: 7, scope: !3690)
!3690 = distinct !DILexicalBlock(scope: !3668, file: !3, line: 150, column: 7)
!3691 = !DILocation(line: 150, column: 7, scope: !3668)
!3692 = !DILocation(line: 150, column: 27, scope: !3690)
!3693 = !DILocation(line: 150, column: 17, scope: !3690)
!3694 = !DILocation(line: 150, column: 25, scope: !3690)
!3695 = !DILocation(line: 150, column: 16, scope: !3690)
!3696 = !DILocation(line: 151, column: 3, scope: !3668)
!3697 = !DILocation(line: 154, column: 6, scope: !3698)
!3698 = distinct !DILexicalBlock(scope: !3617, file: !3, line: 154, column: 6)
!3699 = !DILocation(line: 154, column: 6, scope: !3617)
!3700 = !DILocation(line: 154, column: 14, scope: !3698)
!3701 = !DILocation(line: 154, column: 20, scope: !3698)
!3702 = !DILocation(line: 154, column: 13, scope: !3698)
!3703 = !DILocation(line: 155, column: 6, scope: !3704)
!3704 = distinct !DILexicalBlock(scope: !3617, file: !3, line: 155, column: 6)
!3705 = !DILocation(line: 155, column: 6, scope: !3617)
!3706 = !DILocation(line: 155, column: 16, scope: !3704)
!3707 = !DILocation(line: 155, column: 24, scope: !3704)
!3708 = !DILocation(line: 155, column: 15, scope: !3704)
!3709 = !DILocation(line: 156, column: 6, scope: !3710)
!3710 = distinct !DILexicalBlock(scope: !3617, file: !3, line: 156, column: 6)
!3711 = !DILocation(line: 156, column: 6, scope: !3617)
!3712 = !DILocation(line: 156, column: 24, scope: !3710)
!3713 = !DILocation(line: 156, column: 15, scope: !3710)
!3714 = !DILocation(line: 156, column: 22, scope: !3710)
!3715 = !DILocation(line: 156, column: 14, scope: !3710)
!3716 = !DILocation(line: 157, column: 6, scope: !3717)
!3717 = distinct !DILexicalBlock(scope: !3617, file: !3, line: 157, column: 6)
!3718 = !DILocation(line: 157, column: 6, scope: !3617)
!3719 = !DILocation(line: 157, column: 26, scope: !3717)
!3720 = !DILocation(line: 157, column: 16, scope: !3717)
!3721 = !DILocation(line: 157, column: 24, scope: !3717)
!3722 = !DILocation(line: 157, column: 15, scope: !3717)
!3723 = !DILocation(line: 159, column: 2, scope: !3617)
!3724 = !DILocation(line: 160, column: 1, scope: !3617)
!3725 = distinct !DISubprogram(name: "is_image_texture_node", scope: !3, file: !3, line: 134, type: !3726, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!3726 = !DISubroutineType(types: !3727)
!3727 = !{!2013, !702}
!3728 = !DILocalVariable(name: "node", arg: 1, scope: !3725, file: !3, line: 134, type: !702)
!3729 = !DILocation(line: 134, column: 42, scope: !3725)
!3730 = !DILocation(line: 136, column: 9, scope: !3725)
!3731 = !DILocation(line: 136, column: 2, scope: !3725)
!3732 = distinct !DISubprogram(name: "ED_object_assign_active_image", scope: !3, file: !3, line: 162, type: !3733, scopeLine: 163, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!3733 = !DISubroutineType(types: !3734)
!3734 = !{null, !3735, !3588, !22, !3164}
!3735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3736, size: 64)
!3736 = !DIDerivedType(tag: DW_TAG_typedef, name: "Main", file: !3737, line: 104, baseType: !3738)
!3737 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_main.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3738 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Main", file: !3737, line: 53, size: 15232, elements: !3739)
!3739 = !{!3740, !3742, !3743, !3744, !3745, !3746, !3747, !3748, !3749, !3751, !3752, !3753, !3754, !3755, !3756, !3757, !3758, !3759, !3760, !3761, !3762, !3763, !3764, !3765, !3766, !3767, !3768, !3769, !3770, !3771, !3772, !3773, !3774, !3775, !3776, !3777, !3778, !3779, !3780, !3781, !3782, !3783, !3784, !3785, !3786, !3787, !3788, !3794}
!3740 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3738, file: !3737, line: 54, baseType: !3741, size: 64)
!3741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3738, size: 64)
!3742 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3738, file: !3737, line: 54, baseType: !3741, size: 64, offset: 64)
!3743 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3738, file: !3737, line: 55, baseType: !131, size: 8192, offset: 128)
!3744 = !DIDerivedType(tag: DW_TAG_member, name: "versionfile", scope: !3738, file: !3737, line: 56, baseType: !48, size: 16, offset: 8320)
!3745 = !DIDerivedType(tag: DW_TAG_member, name: "subversionfile", scope: !3738, file: !3737, line: 56, baseType: !48, size: 16, offset: 8336)
!3746 = !DIDerivedType(tag: DW_TAG_member, name: "minversionfile", scope: !3738, file: !3737, line: 57, baseType: !48, size: 16, offset: 8352)
!3747 = !DIDerivedType(tag: DW_TAG_member, name: "minsubversionfile", scope: !3738, file: !3737, line: 57, baseType: !48, size: 16, offset: 8368)
!3748 = !DIDerivedType(tag: DW_TAG_member, name: "build_commit_timestamp", scope: !3738, file: !3737, line: 58, baseType: !1506, size: 64, offset: 8384)
!3749 = !DIDerivedType(tag: DW_TAG_member, name: "build_hash", scope: !3738, file: !3737, line: 59, baseType: !3750, size: 128, offset: 8448)
!3750 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 128, elements: !3434)
!3751 = !DIDerivedType(tag: DW_TAG_member, name: "recovered", scope: !3738, file: !3737, line: 60, baseType: !48, size: 16, offset: 8576)
!3752 = !DIDerivedType(tag: DW_TAG_member, name: "curlib", scope: !3738, file: !3737, line: 62, baseType: !121, size: 64, offset: 8640)
!3753 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !3738, file: !3737, line: 63, baseType: !58, size: 128, offset: 8704)
!3754 = !DIDerivedType(tag: DW_TAG_member, name: "library", scope: !3738, file: !3737, line: 64, baseType: !58, size: 128, offset: 8832)
!3755 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !3738, file: !3737, line: 65, baseType: !58, size: 128, offset: 8960)
!3756 = !DIDerivedType(tag: DW_TAG_member, name: "mesh", scope: !3738, file: !3737, line: 66, baseType: !58, size: 128, offset: 9088)
!3757 = !DIDerivedType(tag: DW_TAG_member, name: "curve", scope: !3738, file: !3737, line: 67, baseType: !58, size: 128, offset: 9216)
!3758 = !DIDerivedType(tag: DW_TAG_member, name: "mball", scope: !3738, file: !3737, line: 68, baseType: !58, size: 128, offset: 9344)
!3759 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !3738, file: !3737, line: 69, baseType: !58, size: 128, offset: 9472)
!3760 = !DIDerivedType(tag: DW_TAG_member, name: "tex", scope: !3738, file: !3737, line: 70, baseType: !58, size: 128, offset: 9600)
!3761 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !3738, file: !3737, line: 71, baseType: !58, size: 128, offset: 9728)
!3762 = !DIDerivedType(tag: DW_TAG_member, name: "latt", scope: !3738, file: !3737, line: 72, baseType: !58, size: 128, offset: 9856)
!3763 = !DIDerivedType(tag: DW_TAG_member, name: "lamp", scope: !3738, file: !3737, line: 73, baseType: !58, size: 128, offset: 9984)
!3764 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !3738, file: !3737, line: 74, baseType: !58, size: 128, offset: 10112)
!3765 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !3738, file: !3737, line: 75, baseType: !58, size: 128, offset: 10240)
!3766 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !3738, file: !3737, line: 76, baseType: !58, size: 128, offset: 10368)
!3767 = !DIDerivedType(tag: DW_TAG_member, name: "world", scope: !3738, file: !3737, line: 77, baseType: !58, size: 128, offset: 10496)
!3768 = !DIDerivedType(tag: DW_TAG_member, name: "screen", scope: !3738, file: !3737, line: 78, baseType: !58, size: 128, offset: 10624)
!3769 = !DIDerivedType(tag: DW_TAG_member, name: "script", scope: !3738, file: !3737, line: 79, baseType: !58, size: 128, offset: 10752)
!3770 = !DIDerivedType(tag: DW_TAG_member, name: "vfont", scope: !3738, file: !3737, line: 80, baseType: !58, size: 128, offset: 10880)
!3771 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !3738, file: !3737, line: 81, baseType: !58, size: 128, offset: 11008)
!3772 = !DIDerivedType(tag: DW_TAG_member, name: "speaker", scope: !3738, file: !3737, line: 82, baseType: !58, size: 128, offset: 11136)
!3773 = !DIDerivedType(tag: DW_TAG_member, name: "sound", scope: !3738, file: !3737, line: 83, baseType: !58, size: 128, offset: 11264)
!3774 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !3738, file: !3737, line: 84, baseType: !58, size: 128, offset: 11392)
!3775 = !DIDerivedType(tag: DW_TAG_member, name: "armature", scope: !3738, file: !3737, line: 85, baseType: !58, size: 128, offset: 11520)
!3776 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !3738, file: !3737, line: 86, baseType: !58, size: 128, offset: 11648)
!3777 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !3738, file: !3737, line: 87, baseType: !58, size: 128, offset: 11776)
!3778 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !3738, file: !3737, line: 88, baseType: !58, size: 128, offset: 11904)
!3779 = !DIDerivedType(tag: DW_TAG_member, name: "particle", scope: !3738, file: !3737, line: 89, baseType: !58, size: 128, offset: 12032)
!3780 = !DIDerivedType(tag: DW_TAG_member, name: "palettes", scope: !3738, file: !3737, line: 90, baseType: !58, size: 128, offset: 12160)
!3781 = !DIDerivedType(tag: DW_TAG_member, name: "paintcurves", scope: !3738, file: !3737, line: 91, baseType: !58, size: 128, offset: 12288)
!3782 = !DIDerivedType(tag: DW_TAG_member, name: "wm", scope: !3738, file: !3737, line: 92, baseType: !58, size: 128, offset: 12416)
!3783 = !DIDerivedType(tag: DW_TAG_member, name: "gpencil", scope: !3738, file: !3737, line: 93, baseType: !58, size: 128, offset: 12544)
!3784 = !DIDerivedType(tag: DW_TAG_member, name: "movieclip", scope: !3738, file: !3737, line: 94, baseType: !58, size: 128, offset: 12672)
!3785 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !3738, file: !3737, line: 95, baseType: !58, size: 128, offset: 12800)
!3786 = !DIDerivedType(tag: DW_TAG_member, name: "linestyle", scope: !3738, file: !3737, line: 96, baseType: !58, size: 128, offset: 12928)
!3787 = !DIDerivedType(tag: DW_TAG_member, name: "id_tag_update", scope: !3738, file: !3737, line: 98, baseType: !544, size: 2048, offset: 13056)
!3788 = !DIDerivedType(tag: DW_TAG_member, name: "eval_ctx", scope: !3738, file: !3737, line: 101, baseType: !3789, size: 64, offset: 15104)
!3789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3790, size: 64)
!3790 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EvaluationContext", file: !3791, line: 58, size: 32, elements: !3792)
!3791 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_depsgraph.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3792 = !{!3793}
!3793 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3790, file: !3791, line: 59, baseType: !22, size: 32)
!3794 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3738, file: !3737, line: 103, baseType: !3795, size: 64, offset: 15168)
!3795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3796, size: 64)
!3796 = !DICompositeType(tag: DW_TAG_structure_type, name: "MainLock", file: !3737, line: 51, flags: DIFlagFwdDecl)
!3797 = !DILocalVariable(name: "bmain", arg: 1, scope: !3732, file: !3, line: 162, type: !3735)
!3798 = !DILocation(line: 162, column: 42, scope: !3732)
!3799 = !DILocalVariable(name: "ob", arg: 2, scope: !3732, file: !3, line: 162, type: !3588)
!3800 = !DILocation(line: 162, column: 57, scope: !3732)
!3801 = !DILocalVariable(name: "mat_nr", arg: 3, scope: !3732, file: !3, line: 162, type: !22)
!3802 = !DILocation(line: 162, column: 65, scope: !3732)
!3803 = !DILocalVariable(name: "ima", arg: 4, scope: !3732, file: !3, line: 162, type: !3164)
!3804 = !DILocation(line: 162, column: 80, scope: !3732)
!3805 = !DILocalVariable(name: "ma", scope: !3732, file: !3, line: 164, type: !3639)
!3806 = !DILocation(line: 164, column: 12, scope: !3732)
!3807 = !DILocation(line: 164, column: 39, scope: !3732)
!3808 = !DILocation(line: 164, column: 43, scope: !3732)
!3809 = !DILocation(line: 164, column: 17, scope: !3732)
!3810 = !DILocalVariable(name: "node", scope: !3732, file: !3, line: 165, type: !702)
!3811 = !DILocation(line: 165, column: 9, scope: !3732)
!3812 = !DILocation(line: 165, column: 17, scope: !3732)
!3813 = !DILocation(line: 165, column: 20, scope: !3732)
!3814 = !DILocation(line: 165, column: 23, scope: !3732)
!3815 = !DILocation(line: 165, column: 27, scope: !3732)
!3816 = !DILocation(line: 165, column: 16, scope: !3732)
!3817 = !DILocation(line: 165, column: 61, scope: !3732)
!3818 = !DILocation(line: 165, column: 65, scope: !3732)
!3819 = !DILocation(line: 165, column: 40, scope: !3732)
!3820 = !DILocation(line: 167, column: 6, scope: !3821)
!3821 = distinct !DILexicalBlock(scope: !3732, file: !3, line: 167, column: 6)
!3822 = !DILocation(line: 167, column: 11, scope: !3821)
!3823 = !DILocation(line: 167, column: 36, scope: !3821)
!3824 = !DILocation(line: 167, column: 14, scope: !3821)
!3825 = !DILocation(line: 167, column: 6, scope: !3732)
!3826 = !DILocation(line: 168, column: 15, scope: !3827)
!3827 = distinct !DILexicalBlock(scope: !3821, file: !3, line: 167, column: 43)
!3828 = !DILocation(line: 168, column: 20, scope: !3827)
!3829 = !DILocation(line: 168, column: 3, scope: !3827)
!3830 = !DILocation(line: 168, column: 9, scope: !3827)
!3831 = !DILocation(line: 168, column: 12, scope: !3827)
!3832 = !DILocation(line: 169, column: 31, scope: !3827)
!3833 = !DILocation(line: 169, column: 38, scope: !3827)
!3834 = !DILocation(line: 169, column: 42, scope: !3827)
!3835 = !DILocation(line: 169, column: 3, scope: !3827)
!3836 = !DILocation(line: 170, column: 2, scope: !3827)
!3837 = !DILocation(line: 171, column: 1, scope: !3732)
!3838 = distinct !DISubprogram(name: "ED_uvedit_assign_image", scope: !3, file: !3, line: 177, type: !3839, scopeLine: 178, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!3839 = !DISubroutineType(types: !3840)
!3840 = !{null, !3735, !3841, !3588, !3164, !3164}
!3841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3842, size: 64)
!3842 = !DIDerivedType(tag: DW_TAG_typedef, name: "Scene", file: !155, line: 1299, baseType: !154)
!3843 = !DILocalVariable(name: "UNUSED_bmain", arg: 1, scope: !3838, file: !3, line: 177, type: !3735)
!3844 = !DILocation(line: 177, column: 35, scope: !3838)
!3845 = !DILocalVariable(name: "scene", arg: 2, scope: !3838, file: !3, line: 177, type: !3841)
!3846 = !DILocation(line: 177, column: 57, scope: !3838)
!3847 = !DILocalVariable(name: "obedit", arg: 3, scope: !3838, file: !3, line: 177, type: !3588)
!3848 = !DILocation(line: 177, column: 72, scope: !3838)
!3849 = !DILocalVariable(name: "ima", arg: 4, scope: !3838, file: !3, line: 177, type: !3164)
!3850 = !DILocation(line: 177, column: 87, scope: !3838)
!3851 = !DILocalVariable(name: "previma", arg: 5, scope: !3838, file: !3, line: 177, type: !3164)
!3852 = !DILocation(line: 177, column: 99, scope: !3838)
!3853 = !DILocalVariable(name: "em", scope: !3838, file: !3, line: 179, type: !3593)
!3854 = !DILocation(line: 179, column: 14, scope: !3838)
!3855 = !DILocalVariable(name: "iter", scope: !3838, file: !3, line: 180, type: !3856)
!3856 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMIter", file: !2843, line: 186, baseType: !3857)
!3857 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter", file: !2843, line: 164, size: 512, elements: !3858)
!3858 = !{!3859, !3939, !3940, !3941, !3942}
!3859 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3857, file: !2843, line: 179, baseType: !3860, size: 320)
!3860 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3857, file: !2843, line: 166, size: 320, elements: !3861)
!3861 = !{!3862, !3877, !3883, !3891, !3899, !3905, !3911, !3917, !3921, !3927, !3933}
!3862 = !DIDerivedType(tag: DW_TAG_member, name: "elem_of_mesh", scope: !3860, file: !2843, line: 167, baseType: !3863, size: 192)
!3863 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__elem_of_mesh", file: !2843, line: 113, size: 192, elements: !3864)
!3864 = !{!3865}
!3865 = !DIDerivedType(tag: DW_TAG_member, name: "pooliter", scope: !3863, file: !2843, line: 114, baseType: !3866, size: 192)
!3866 = !DIDerivedType(tag: DW_TAG_typedef, name: "BLI_mempool_iter", file: !3867, line: 80, baseType: !3868)
!3867 = !DIFile(filename: "blender/source/blender/blenlib/BLI_mempool.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3868 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BLI_mempool_iter", file: !3867, line: 76, size: 192, elements: !3869)
!3869 = !{!3870, !3873, !3876}
!3870 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !3868, file: !3867, line: 77, baseType: !3871, size: 64)
!3871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3872, size: 64)
!3872 = !DIDerivedType(tag: DW_TAG_typedef, name: "BLI_mempool", file: !3867, line: 47, baseType: !3386)
!3873 = !DIDerivedType(tag: DW_TAG_member, name: "curchunk", scope: !3868, file: !3867, line: 78, baseType: !3874, size: 64, offset: 64)
!3874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3875, size: 64)
!3875 = !DICompositeType(tag: DW_TAG_structure_type, name: "BLI_mempool_chunk", file: !3867, line: 45, flags: DIFlagFwdDecl)
!3876 = !DIDerivedType(tag: DW_TAG_member, name: "curindex", scope: !3868, file: !3867, line: 79, baseType: !224, size: 32, offset: 128)
!3877 = !DIDerivedType(tag: DW_TAG_member, name: "edge_of_vert", scope: !3860, file: !2843, line: 169, baseType: !3878, size: 192)
!3878 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__edge_of_vert", file: !2843, line: 116, size: 192, elements: !3879)
!3879 = !{!3880, !3881, !3882}
!3880 = !DIDerivedType(tag: DW_TAG_member, name: "vdata", scope: !3878, file: !2843, line: 117, baseType: !3185, size: 64)
!3881 = !DIDerivedType(tag: DW_TAG_member, name: "e_first", scope: !3878, file: !2843, line: 118, baseType: !3236, size: 64, offset: 64)
!3882 = !DIDerivedType(tag: DW_TAG_member, name: "e_next", scope: !3878, file: !2843, line: 118, baseType: !3236, size: 64, offset: 128)
!3883 = !DIDerivedType(tag: DW_TAG_member, name: "face_of_vert", scope: !3860, file: !2843, line: 170, baseType: !3884, size: 320)
!3884 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__face_of_vert", file: !2843, line: 120, size: 320, elements: !3885)
!3885 = !{!3886, !3887, !3888, !3889, !3890}
!3886 = !DIDerivedType(tag: DW_TAG_member, name: "vdata", scope: !3884, file: !2843, line: 121, baseType: !3185, size: 64)
!3887 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !3884, file: !2843, line: 122, baseType: !3220, size: 64, offset: 64)
!3888 = !DIDerivedType(tag: DW_TAG_member, name: "l_next", scope: !3884, file: !2843, line: 122, baseType: !3220, size: 64, offset: 128)
!3889 = !DIDerivedType(tag: DW_TAG_member, name: "e_first", scope: !3884, file: !2843, line: 123, baseType: !3236, size: 64, offset: 192)
!3890 = !DIDerivedType(tag: DW_TAG_member, name: "e_next", scope: !3884, file: !2843, line: 123, baseType: !3236, size: 64, offset: 256)
!3891 = !DIDerivedType(tag: DW_TAG_member, name: "loop_of_vert", scope: !3860, file: !2843, line: 171, baseType: !3892, size: 320)
!3892 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__loop_of_vert", file: !2843, line: 125, size: 320, elements: !3893)
!3893 = !{!3894, !3895, !3896, !3897, !3898}
!3894 = !DIDerivedType(tag: DW_TAG_member, name: "vdata", scope: !3892, file: !2843, line: 126, baseType: !3185, size: 64)
!3895 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !3892, file: !2843, line: 127, baseType: !3220, size: 64, offset: 64)
!3896 = !DIDerivedType(tag: DW_TAG_member, name: "l_next", scope: !3892, file: !2843, line: 127, baseType: !3220, size: 64, offset: 128)
!3897 = !DIDerivedType(tag: DW_TAG_member, name: "e_first", scope: !3892, file: !2843, line: 128, baseType: !3236, size: 64, offset: 192)
!3898 = !DIDerivedType(tag: DW_TAG_member, name: "e_next", scope: !3892, file: !2843, line: 128, baseType: !3236, size: 64, offset: 256)
!3899 = !DIDerivedType(tag: DW_TAG_member, name: "loop_of_edge", scope: !3860, file: !2843, line: 172, baseType: !3900, size: 192)
!3900 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__loop_of_edge", file: !2843, line: 130, size: 192, elements: !3901)
!3901 = !{!3902, !3903, !3904}
!3902 = !DIDerivedType(tag: DW_TAG_member, name: "edata", scope: !3900, file: !2843, line: 131, baseType: !3236, size: 64)
!3903 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !3900, file: !2843, line: 132, baseType: !3220, size: 64, offset: 64)
!3904 = !DIDerivedType(tag: DW_TAG_member, name: "l_next", scope: !3900, file: !2843, line: 132, baseType: !3220, size: 64, offset: 128)
!3905 = !DIDerivedType(tag: DW_TAG_member, name: "loop_of_loop", scope: !3860, file: !2843, line: 173, baseType: !3906, size: 192)
!3906 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__loop_of_loop", file: !2843, line: 134, size: 192, elements: !3907)
!3907 = !{!3908, !3909, !3910}
!3908 = !DIDerivedType(tag: DW_TAG_member, name: "ldata", scope: !3906, file: !2843, line: 135, baseType: !3220, size: 64)
!3909 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !3906, file: !2843, line: 136, baseType: !3220, size: 64, offset: 64)
!3910 = !DIDerivedType(tag: DW_TAG_member, name: "l_next", scope: !3906, file: !2843, line: 136, baseType: !3220, size: 64, offset: 128)
!3911 = !DIDerivedType(tag: DW_TAG_member, name: "face_of_edge", scope: !3860, file: !2843, line: 174, baseType: !3912, size: 192)
!3912 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__face_of_edge", file: !2843, line: 138, size: 192, elements: !3913)
!3913 = !{!3914, !3915, !3916}
!3914 = !DIDerivedType(tag: DW_TAG_member, name: "edata", scope: !3912, file: !2843, line: 139, baseType: !3236, size: 64)
!3915 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !3912, file: !2843, line: 140, baseType: !3220, size: 64, offset: 64)
!3916 = !DIDerivedType(tag: DW_TAG_member, name: "l_next", scope: !3912, file: !2843, line: 140, baseType: !3220, size: 64, offset: 128)
!3917 = !DIDerivedType(tag: DW_TAG_member, name: "vert_of_edge", scope: !3860, file: !2843, line: 175, baseType: !3918, size: 64)
!3918 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__vert_of_edge", file: !2843, line: 142, size: 64, elements: !3919)
!3919 = !{!3920}
!3920 = !DIDerivedType(tag: DW_TAG_member, name: "edata", scope: !3918, file: !2843, line: 143, baseType: !3236, size: 64)
!3921 = !DIDerivedType(tag: DW_TAG_member, name: "vert_of_face", scope: !3860, file: !2843, line: 176, baseType: !3922, size: 192)
!3922 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__vert_of_face", file: !2843, line: 145, size: 192, elements: !3923)
!3923 = !{!3924, !3925, !3926}
!3924 = !DIDerivedType(tag: DW_TAG_member, name: "pdata", scope: !3922, file: !2843, line: 146, baseType: !3238, size: 64)
!3925 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !3922, file: !2843, line: 147, baseType: !3220, size: 64, offset: 64)
!3926 = !DIDerivedType(tag: DW_TAG_member, name: "l_next", scope: !3922, file: !2843, line: 147, baseType: !3220, size: 64, offset: 128)
!3927 = !DIDerivedType(tag: DW_TAG_member, name: "edge_of_face", scope: !3860, file: !2843, line: 177, baseType: !3928, size: 192)
!3928 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__edge_of_face", file: !2843, line: 149, size: 192, elements: !3929)
!3929 = !{!3930, !3931, !3932}
!3930 = !DIDerivedType(tag: DW_TAG_member, name: "pdata", scope: !3928, file: !2843, line: 150, baseType: !3238, size: 64)
!3931 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !3928, file: !2843, line: 151, baseType: !3220, size: 64, offset: 64)
!3932 = !DIDerivedType(tag: DW_TAG_member, name: "l_next", scope: !3928, file: !2843, line: 151, baseType: !3220, size: 64, offset: 128)
!3933 = !DIDerivedType(tag: DW_TAG_member, name: "loop_of_face", scope: !3860, file: !2843, line: 178, baseType: !3934, size: 192)
!3934 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__loop_of_face", file: !2843, line: 153, size: 192, elements: !3935)
!3935 = !{!3936, !3937, !3938}
!3936 = !DIDerivedType(tag: DW_TAG_member, name: "pdata", scope: !3934, file: !2843, line: 154, baseType: !3238, size: 64)
!3937 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !3934, file: !2843, line: 155, baseType: !3220, size: 64, offset: 64)
!3938 = !DIDerivedType(tag: DW_TAG_member, name: "l_next", scope: !3934, file: !2843, line: 155, baseType: !3220, size: 64, offset: 128)
!3939 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !3857, file: !2843, line: 181, baseType: !3180, size: 64, offset: 320)
!3940 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !3857, file: !2843, line: 182, baseType: !3181, size: 64, offset: 384)
!3941 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3857, file: !2843, line: 184, baseType: !22, size: 32, offset: 448)
!3942 = !DIDerivedType(tag: DW_TAG_member, name: "itype", scope: !3857, file: !2843, line: 185, baseType: !14, size: 8, offset: 480)
!3943 = !DILocation(line: 180, column: 9, scope: !3838)
!3944 = !DILocalVariable(name: "tf", scope: !3838, file: !3, line: 181, type: !3945)
!3945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3946, size: 64)
!3946 = !DIDerivedType(tag: DW_TAG_typedef, name: "MTexPoly", file: !2024, line: 97, baseType: !3279)
!3947 = !DILocation(line: 181, column: 12, scope: !3838)
!3948 = !DILocalVariable(name: "update", scope: !3838, file: !3, line: 182, type: !2013)
!3949 = !DILocation(line: 182, column: 7, scope: !3838)
!3950 = !DILocalVariable(name: "selected", scope: !3838, file: !3, line: 183, type: !3951)
!3951 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2013)
!3952 = !DILocation(line: 183, column: 13, scope: !3838)
!3953 = !DILocation(line: 183, column: 26, scope: !3838)
!3954 = !DILocation(line: 183, column: 33, scope: !3838)
!3955 = !DILocation(line: 183, column: 47, scope: !3838)
!3956 = !DILocation(line: 183, column: 55, scope: !3838)
!3957 = !DILocation(line: 183, column: 24, scope: !3838)
!3958 = !DILocation(line: 186, column: 6, scope: !3959)
!3959 = distinct !DILexicalBlock(scope: !3838, file: !3, line: 186, column: 6)
!3960 = !DILocation(line: 186, column: 10, scope: !3959)
!3961 = !DILocation(line: 186, column: 14, scope: !3959)
!3962 = !DILocation(line: 186, column: 19, scope: !3959)
!3963 = !DILocation(line: 186, column: 24, scope: !3959)
!3964 = !DILocation(line: 186, column: 45, scope: !3959)
!3965 = !DILocation(line: 186, column: 48, scope: !3959)
!3966 = !DILocation(line: 186, column: 53, scope: !3959)
!3967 = !DILocation(line: 186, column: 58, scope: !3959)
!3968 = !DILocation(line: 186, column: 6, scope: !3838)
!3969 = !DILocation(line: 187, column: 3, scope: !3959)
!3970 = !DILocation(line: 190, column: 7, scope: !3971)
!3971 = distinct !DILexicalBlock(scope: !3838, file: !3, line: 190, column: 6)
!3972 = !DILocation(line: 190, column: 14, scope: !3971)
!3973 = !DILocation(line: 190, column: 18, scope: !3971)
!3974 = !DILocation(line: 190, column: 26, scope: !3971)
!3975 = !DILocation(line: 190, column: 31, scope: !3971)
!3976 = !DILocation(line: 190, column: 6, scope: !3838)
!3977 = !DILocation(line: 191, column: 3, scope: !3971)
!3978 = !DILocation(line: 193, column: 32, scope: !3838)
!3979 = !DILocation(line: 193, column: 7, scope: !3838)
!3980 = !DILocation(line: 193, column: 5, scope: !3838)
!3981 = !DILocation(line: 194, column: 7, scope: !3982)
!3982 = distinct !DILexicalBlock(scope: !3838, file: !3, line: 194, column: 6)
!3983 = !DILocation(line: 194, column: 10, scope: !3982)
!3984 = !DILocation(line: 194, column: 14, scope: !3982)
!3985 = !DILocation(line: 194, column: 18, scope: !3982)
!3986 = !DILocation(line: 194, column: 22, scope: !3982)
!3987 = !DILocation(line: 194, column: 6, scope: !3838)
!3988 = !DILocation(line: 195, column: 3, scope: !3989)
!3989 = distinct !DILexicalBlock(scope: !3982, file: !3, line: 194, column: 31)
!3990 = !DILocation(line: 198, column: 38, scope: !3991)
!3991 = distinct !DILexicalBlock(scope: !3838, file: !3, line: 198, column: 6)
!3992 = !DILocation(line: 198, column: 6, scope: !3991)
!3993 = !DILocation(line: 198, column: 6, scope: !3838)
!3994 = !DILocation(line: 200, column: 2, scope: !3995)
!3995 = distinct !DILexicalBlock(scope: !3991, file: !3, line: 198, column: 46)
!3996 = !DILocalVariable(name: "efa", scope: !3997, file: !3, line: 202, type: !3238)
!3997 = distinct !DILexicalBlock(scope: !3991, file: !3, line: 201, column: 7)
!3998 = !DILocation(line: 202, column: 11, scope: !3997)
!3999 = !DILocalVariable(name: "cd_loop_uv_offset", scope: !3997, file: !3, line: 204, type: !22)
!4000 = !DILocation(line: 204, column: 7, scope: !3997)
!4001 = !DILocalVariable(name: "cd_poly_tex_offset", scope: !3997, file: !3, line: 205, type: !22)
!4002 = !DILocation(line: 205, column: 7, scope: !3997)
!4003 = !DILocation(line: 220, column: 30, scope: !4004)
!4004 = distinct !DILexicalBlock(scope: !3997, file: !3, line: 220, column: 7)
!4005 = !DILocation(line: 220, column: 34, scope: !4004)
!4006 = !DILocation(line: 220, column: 38, scope: !4004)
!4007 = !DILocation(line: 220, column: 8, scope: !4004)
!4008 = !DILocation(line: 220, column: 7, scope: !3997)
!4009 = !DILocation(line: 221, column: 22, scope: !4010)
!4010 = distinct !DILexicalBlock(scope: !4004, file: !3, line: 220, column: 59)
!4011 = !DILocation(line: 221, column: 26, scope: !4010)
!4012 = !DILocation(line: 221, column: 31, scope: !4010)
!4013 = !DILocation(line: 221, column: 35, scope: !4010)
!4014 = !DILocation(line: 221, column: 39, scope: !4010)
!4015 = !DILocation(line: 221, column: 4, scope: !4010)
!4016 = !DILocation(line: 222, column: 22, scope: !4010)
!4017 = !DILocation(line: 222, column: 26, scope: !4010)
!4018 = !DILocation(line: 222, column: 31, scope: !4010)
!4019 = !DILocation(line: 222, column: 35, scope: !4010)
!4020 = !DILocation(line: 222, column: 39, scope: !4010)
!4021 = !DILocation(line: 222, column: 4, scope: !4010)
!4022 = !DILocation(line: 224, column: 29, scope: !4010)
!4023 = !DILocation(line: 224, column: 37, scope: !4010)
!4024 = !DILocation(line: 224, column: 78, scope: !4010)
!4025 = !DILocation(line: 224, column: 82, scope: !4010)
!4026 = !DILocation(line: 224, column: 86, scope: !4010)
!4027 = !DILocation(line: 224, column: 43, scope: !4010)
!4028 = !DILocation(line: 224, column: 4, scope: !4010)
!4029 = !DILocation(line: 225, column: 11, scope: !4010)
!4030 = !DILocation(line: 226, column: 3, scope: !4010)
!4031 = !DILocation(line: 228, column: 47, scope: !3997)
!4032 = !DILocation(line: 228, column: 51, scope: !3997)
!4033 = !DILocation(line: 228, column: 55, scope: !3997)
!4034 = !DILocation(line: 228, column: 24, scope: !3997)
!4035 = !DILocation(line: 228, column: 22, scope: !3997)
!4036 = !DILocation(line: 229, column: 47, scope: !3997)
!4037 = !DILocation(line: 229, column: 51, scope: !3997)
!4038 = !DILocation(line: 229, column: 55, scope: !3997)
!4039 = !DILocation(line: 229, column: 24, scope: !3997)
!4040 = !DILocation(line: 229, column: 22, scope: !3997)
!4041 = !DILocation(line: 232, column: 3, scope: !4042)
!4042 = distinct !DILexicalBlock(scope: !3997, file: !3, line: 232, column: 3)
!4043 = !DILocation(line: 232, column: 3, scope: !4044)
!4044 = distinct !DILexicalBlock(scope: !4042, file: !3, line: 232, column: 3)
!4045 = !DILocation(line: 233, column: 9, scope: !4046)
!4046 = distinct !DILexicalBlock(scope: !4044, file: !3, line: 232, column: 55)
!4047 = !DILocation(line: 233, column: 7, scope: !4046)
!4048 = !DILocation(line: 235, column: 33, scope: !4049)
!4049 = distinct !DILexicalBlock(scope: !4046, file: !3, line: 235, column: 8)
!4050 = !DILocation(line: 235, column: 40, scope: !4049)
!4051 = !DILocation(line: 235, column: 49, scope: !4049)
!4052 = !DILocation(line: 235, column: 54, scope: !4049)
!4053 = !DILocation(line: 235, column: 8, scope: !4049)
!4054 = !DILocation(line: 235, column: 58, scope: !4049)
!4055 = !DILocation(line: 236, column: 9, scope: !4049)
!4056 = !DILocation(line: 236, column: 18, scope: !4049)
!4057 = !DILocation(line: 236, column: 26, scope: !4049)
!4058 = !DILocation(line: 236, column: 53, scope: !4049)
!4059 = !DILocation(line: 236, column: 60, scope: !4049)
!4060 = !DILocation(line: 236, column: 65, scope: !4049)
!4061 = !DILocation(line: 236, column: 29, scope: !4049)
!4062 = !DILocation(line: 235, column: 8, scope: !4046)
!4063 = !DILocation(line: 238, column: 9, scope: !4064)
!4064 = distinct !DILexicalBlock(scope: !4065, file: !3, line: 238, column: 9)
!4065 = distinct !DILexicalBlock(scope: !4049, file: !3, line: 237, column: 4)
!4066 = !DILocation(line: 238, column: 9, scope: !4065)
!4067 = !DILocation(line: 239, column: 18, scope: !4068)
!4068 = distinct !DILexicalBlock(scope: !4064, file: !3, line: 238, column: 14)
!4069 = !DILocation(line: 239, column: 6, scope: !4068)
!4070 = !DILocation(line: 239, column: 10, scope: !4068)
!4071 = !DILocation(line: 239, column: 16, scope: !4068)
!4072 = !DILocation(line: 241, column: 10, scope: !4073)
!4073 = distinct !DILexicalBlock(scope: !4068, file: !3, line: 241, column: 10)
!4074 = !DILocation(line: 241, column: 15, scope: !4073)
!4075 = !DILocation(line: 241, column: 18, scope: !4073)
!4076 = !DILocation(line: 241, column: 21, scope: !4073)
!4077 = !DILocation(line: 241, column: 10, scope: !4068)
!4078 = !DILocation(line: 241, column: 39, scope: !4073)
!4079 = !DILocation(line: 241, column: 44, scope: !4073)
!4080 = !DILocation(line: 241, column: 27, scope: !4073)
!4081 = !DILocation(line: 242, column: 26, scope: !4073)
!4082 = !DILocation(line: 242, column: 31, scope: !4073)
!4083 = !DILocation(line: 242, column: 11, scope: !4073)
!4084 = !DILocation(line: 261, column: 5, scope: !4068)
!4085 = !DILocation(line: 263, column: 6, scope: !4086)
!4086 = distinct !DILexicalBlock(scope: !4064, file: !3, line: 262, column: 10)
!4087 = !DILocation(line: 263, column: 10, scope: !4086)
!4088 = !DILocation(line: 263, column: 16, scope: !4086)
!4089 = !DILocation(line: 266, column: 12, scope: !4065)
!4090 = !DILocation(line: 267, column: 4, scope: !4065)
!4091 = !DILocation(line: 268, column: 3, scope: !4046)
!4092 = distinct !{!4092, !4041, !4093}
!4093 = !DILocation(line: 268, column: 3, scope: !4042)
!4094 = !DILocation(line: 271, column: 7, scope: !4095)
!4095 = distinct !DILexicalBlock(scope: !3997, file: !3, line: 271, column: 7)
!4096 = !DILocation(line: 271, column: 7, scope: !3997)
!4097 = !DILocation(line: 272, column: 22, scope: !4098)
!4098 = distinct !DILexicalBlock(scope: !4095, file: !3, line: 271, column: 15)
!4099 = !DILocation(line: 272, column: 30, scope: !4098)
!4100 = !DILocation(line: 272, column: 4, scope: !4098)
!4101 = !DILocation(line: 273, column: 3, scope: !4098)
!4102 = !DILocation(line: 276, column: 1, scope: !3838)
!4103 = distinct !DISubprogram(name: "BM_iter_new", scope: !4104, file: !4104, line: 172, type: !4105, scopeLine: 173, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!4104 = !DIFile(filename: "blender/source/blender/bmesh/intern/bmesh_iterators_inline.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4105 = !DISubroutineType(types: !4106)
!4106 = !{!56, !4107, !3441, !13, !56}
!4107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3856, size: 64)
!4108 = !DILocalVariable(name: "iter", arg: 1, scope: !4103, file: !4104, line: 172, type: !4107)
!4109 = !DILocation(line: 172, column: 38, scope: !4103)
!4110 = !DILocalVariable(name: "bm", arg: 2, scope: !4103, file: !4104, line: 172, type: !3441)
!4111 = !DILocation(line: 172, column: 51, scope: !4103)
!4112 = !DILocalVariable(name: "itype", arg: 3, scope: !4103, file: !4104, line: 172, type: !13)
!4113 = !DILocation(line: 172, column: 66, scope: !4103)
!4114 = !DILocalVariable(name: "data", arg: 4, scope: !4103, file: !4104, line: 172, type: !56)
!4115 = !DILocation(line: 172, column: 79, scope: !4103)
!4116 = !DILocation(line: 174, column: 6, scope: !4117)
!4117 = distinct !DILexicalBlock(scope: !4103, file: !4104, line: 174, column: 6)
!4118 = !DILocation(line: 174, column: 6, scope: !4103)
!4119 = !DILocation(line: 175, column: 23, scope: !4120)
!4120 = distinct !DILexicalBlock(scope: !4117, file: !4104, line: 174, column: 51)
!4121 = !DILocation(line: 175, column: 10, scope: !4120)
!4122 = !DILocation(line: 175, column: 3, scope: !4120)
!4123 = !DILocation(line: 178, column: 3, scope: !4124)
!4124 = distinct !DILexicalBlock(scope: !4117, file: !4104, line: 177, column: 7)
!4125 = !DILocation(line: 180, column: 1, scope: !4103)
!4126 = distinct !DISubprogram(name: "uvedit_face_visible_test", scope: !3, file: !3, line: 345, type: !4127, scopeLine: 346, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!4127 = !DISubroutineType(types: !4128)
!4128 = !{!2013, !3841, !3164, !3238, !3945}
!4129 = !DILocalVariable(name: "scene", arg: 1, scope: !4126, file: !3, line: 345, type: !3841)
!4130 = !DILocation(line: 345, column: 38, scope: !4126)
!4131 = !DILocalVariable(name: "ima", arg: 2, scope: !4126, file: !3, line: 345, type: !3164)
!4132 = !DILocation(line: 345, column: 52, scope: !4126)
!4133 = !DILocalVariable(name: "efa", arg: 3, scope: !4126, file: !3, line: 345, type: !3238)
!4134 = !DILocation(line: 345, column: 65, scope: !4126)
!4135 = !DILocalVariable(name: "tf", arg: 4, scope: !4126, file: !3, line: 345, type: !3945)
!4136 = !DILocation(line: 345, column: 80, scope: !4126)
!4137 = !DILocalVariable(name: "ts", scope: !4126, file: !3, line: 347, type: !4138)
!4138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4139, size: 64)
!4139 = !DIDerivedType(tag: DW_TAG_typedef, name: "ToolSettings", file: !155, line: 1180, baseType: !1993)
!4140 = !DILocation(line: 347, column: 16, scope: !4126)
!4141 = !DILocation(line: 347, column: 21, scope: !4126)
!4142 = !DILocation(line: 347, column: 28, scope: !4126)
!4143 = !DILocation(line: 349, column: 6, scope: !4144)
!4144 = distinct !DILexicalBlock(scope: !4126, file: !3, line: 349, column: 6)
!4145 = !DILocation(line: 349, column: 10, scope: !4144)
!4146 = !DILocation(line: 349, column: 18, scope: !4144)
!4147 = !DILocation(line: 349, column: 6, scope: !4126)
!4148 = !DILocation(line: 350, column: 11, scope: !4144)
!4149 = !DILocation(line: 350, column: 15, scope: !4144)
!4150 = !DILocation(line: 350, column: 24, scope: !4144)
!4151 = !DILocation(line: 350, column: 21, scope: !4144)
!4152 = !DILocation(line: 350, column: 10, scope: !4144)
!4153 = !DILocation(line: 350, column: 59, scope: !4144)
!4154 = !DILocation(line: 350, column: 66, scope: !4144)
!4155 = !DILocation(line: 350, column: 31, scope: !4144)
!4156 = !DILocation(line: 350, column: 3, scope: !4144)
!4157 = !DILocation(line: 352, column: 38, scope: !4144)
!4158 = !DILocation(line: 352, column: 45, scope: !4144)
!4159 = !DILocation(line: 352, column: 10, scope: !4144)
!4160 = !DILocation(line: 352, column: 3, scope: !4144)
!4161 = !DILocation(line: 353, column: 1, scope: !4126)
!4162 = distinct !DISubprogram(name: "uvedit_face_select_test", scope: !3, file: !3, line: 355, type: !4163, scopeLine: 357, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!4163 = !DISubroutineType(types: !4164)
!4164 = !{!2013, !3841, !3238, !4165}
!4165 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !22)
!4166 = !DILocalVariable(name: "scene", arg: 1, scope: !4162, file: !3, line: 355, type: !3841)
!4167 = !DILocation(line: 355, column: 37, scope: !4162)
!4168 = !DILocalVariable(name: "efa", arg: 2, scope: !4162, file: !3, line: 355, type: !3238)
!4169 = !DILocation(line: 355, column: 52, scope: !4162)
!4170 = !DILocalVariable(name: "cd_loop_uv_offset", arg: 3, scope: !4162, file: !3, line: 356, type: !4165)
!4171 = !DILocation(line: 356, column: 40, scope: !4162)
!4172 = !DILocalVariable(name: "ts", scope: !4162, file: !3, line: 358, type: !4138)
!4173 = !DILocation(line: 358, column: 16, scope: !4162)
!4174 = !DILocation(line: 358, column: 21, scope: !4162)
!4175 = !DILocation(line: 358, column: 28, scope: !4162)
!4176 = !DILocation(line: 359, column: 6, scope: !4177)
!4177 = distinct !DILexicalBlock(scope: !4162, file: !3, line: 359, column: 6)
!4178 = !DILocation(line: 359, column: 10, scope: !4177)
!4179 = !DILocation(line: 359, column: 18, scope: !4177)
!4180 = !DILocation(line: 359, column: 6, scope: !4162)
!4181 = !DILocation(line: 360, column: 11, scope: !4182)
!4182 = distinct !DILexicalBlock(scope: !4177, file: !3, line: 359, column: 39)
!4183 = !DILocation(line: 360, column: 3, scope: !4182)
!4184 = !DILocalVariable(name: "l", scope: !4185, file: !3, line: 363, type: !3220)
!4185 = distinct !DILexicalBlock(scope: !4177, file: !3, line: 362, column: 7)
!4186 = !DILocation(line: 363, column: 11, scope: !4185)
!4187 = !DILocalVariable(name: "luv", scope: !4185, file: !3, line: 364, type: !3240)
!4188 = !DILocation(line: 364, column: 12, scope: !4185)
!4189 = !DILocalVariable(name: "liter", scope: !4185, file: !3, line: 365, type: !3856)
!4190 = !DILocation(line: 365, column: 10, scope: !4185)
!4191 = !DILocation(line: 367, column: 3, scope: !4192)
!4192 = distinct !DILexicalBlock(scope: !4185, file: !3, line: 367, column: 3)
!4193 = !DILocation(line: 367, column: 3, scope: !4194)
!4194 = distinct !DILexicalBlock(scope: !4192, file: !3, line: 367, column: 3)
!4195 = !DILocation(line: 368, column: 10, scope: !4196)
!4196 = distinct !DILexicalBlock(scope: !4194, file: !3, line: 367, column: 51)
!4197 = !DILocation(line: 368, column: 8, scope: !4196)
!4198 = !DILocation(line: 369, column: 10, scope: !4199)
!4199 = distinct !DILexicalBlock(scope: !4196, file: !3, line: 369, column: 8)
!4200 = !DILocation(line: 369, column: 15, scope: !4199)
!4201 = !DILocation(line: 369, column: 20, scope: !4199)
!4202 = !DILocation(line: 369, column: 8, scope: !4196)
!4203 = !DILocation(line: 370, column: 5, scope: !4199)
!4204 = !DILocation(line: 371, column: 3, scope: !4196)
!4205 = distinct !{!4205, !4191, !4206}
!4206 = !DILocation(line: 371, column: 3, scope: !4192)
!4207 = !DILocation(line: 373, column: 3, scope: !4185)
!4208 = !DILocation(line: 375, column: 1, scope: !4162)
!4209 = distinct !DISubprogram(name: "BM_iter_step", scope: !4104, file: !4104, line: 40, type: !4210, scopeLine: 41, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!4210 = !DISubroutineType(types: !4211)
!4211 = !{!56, !4107}
!4212 = !DILocalVariable(name: "iter", arg: 1, scope: !4209, file: !4104, line: 40, type: !4107)
!4213 = !DILocation(line: 40, column: 39, scope: !4209)
!4214 = !DILocation(line: 42, column: 9, scope: !4209)
!4215 = !DILocation(line: 42, column: 15, scope: !4209)
!4216 = !DILocation(line: 42, column: 20, scope: !4209)
!4217 = !DILocation(line: 42, column: 2, scope: !4209)
!4218 = distinct !DISubprogram(name: "uvedit_face_visible_nolocal", scope: !3, file: !3, line: 335, type: !4219, scopeLine: 336, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!4219 = !DISubroutineType(types: !4220)
!4220 = !{!2013, !3841, !3238}
!4221 = !DILocalVariable(name: "scene", arg: 1, scope: !4218, file: !3, line: 335, type: !3841)
!4222 = !DILocation(line: 335, column: 41, scope: !4218)
!4223 = !DILocalVariable(name: "efa", arg: 2, scope: !4218, file: !3, line: 335, type: !3238)
!4224 = !DILocation(line: 335, column: 56, scope: !4218)
!4225 = !DILocalVariable(name: "ts", scope: !4218, file: !3, line: 337, type: !4138)
!4226 = !DILocation(line: 337, column: 16, scope: !4218)
!4227 = !DILocation(line: 337, column: 21, scope: !4218)
!4228 = !DILocation(line: 337, column: 28, scope: !4218)
!4229 = !DILocation(line: 339, column: 6, scope: !4230)
!4230 = distinct !DILexicalBlock(scope: !4218, file: !3, line: 339, column: 6)
!4231 = !DILocation(line: 339, column: 10, scope: !4230)
!4232 = !DILocation(line: 339, column: 18, scope: !4230)
!4233 = !DILocation(line: 339, column: 6, scope: !4218)
!4234 = !DILocation(line: 340, column: 11, scope: !4230)
!4235 = !DILocation(line: 340, column: 50, scope: !4230)
!4236 = !DILocation(line: 340, column: 10, scope: !4230)
!4237 = !DILocation(line: 340, column: 3, scope: !4230)
!4238 = !DILocation(line: 342, column: 11, scope: !4230)
!4239 = !DILocation(line: 342, column: 50, scope: !4230)
!4240 = !DILocation(line: 342, column: 55, scope: !4230)
!4241 = !DILocation(line: 342, column: 58, scope: !4230)
!4242 = !DILocation(line: 0, scope: !4230)
!4243 = !DILocation(line: 342, column: 10, scope: !4230)
!4244 = !DILocation(line: 342, column: 3, scope: !4230)
!4245 = !DILocation(line: 343, column: 1, scope: !4218)
!4246 = distinct !DISubprogram(name: "_bm_elem_flag_test", scope: !4247, file: !4247, line: 42, type: !4248, scopeLine: 43, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!4247 = !DIFile(filename: "blender/source/blender/bmesh/intern/bmesh_inline.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4248 = !DISubroutineType(types: !4249)
!4249 = !{!14, !4250, !13}
!4250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4251, size: 64)
!4251 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3171)
!4252 = !DILocalVariable(name: "head", arg: 1, scope: !4246, file: !4247, line: 42, type: !4250)
!4253 = !DILocation(line: 42, column: 52, scope: !4246)
!4254 = !DILocalVariable(name: "hflag", arg: 2, scope: !4246, file: !4247, line: 42, type: !13)
!4255 = !DILocation(line: 42, column: 69, scope: !4246)
!4256 = !DILocation(line: 44, column: 9, scope: !4246)
!4257 = !DILocation(line: 44, column: 15, scope: !4246)
!4258 = !DILocation(line: 44, column: 23, scope: !4246)
!4259 = !DILocation(line: 44, column: 21, scope: !4246)
!4260 = !DILocation(line: 44, column: 2, scope: !4246)
!4261 = distinct !DISubprogram(name: "uvedit_face_select_set", scope: !3, file: !3, line: 377, type: !4262, scopeLine: 379, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!4262 = !DISubroutineType(types: !4263)
!4263 = !{!2013, !153, !3367, !3214, !3951, !3951, !4165}
!4264 = !DILocalVariable(name: "scene", arg: 1, scope: !4261, file: !3, line: 377, type: !153)
!4265 = !DILocation(line: 377, column: 43, scope: !4261)
!4266 = !DILocalVariable(name: "em", arg: 2, scope: !4261, file: !3, line: 377, type: !3367)
!4267 = !DILocation(line: 377, column: 69, scope: !4261)
!4268 = !DILocalVariable(name: "efa", arg: 3, scope: !4261, file: !3, line: 377, type: !3214)
!4269 = !DILocation(line: 377, column: 88, scope: !4261)
!4270 = !DILocalVariable(name: "select", arg: 4, scope: !4261, file: !3, line: 377, type: !3951)
!4271 = !DILocation(line: 377, column: 104, scope: !4261)
!4272 = !DILocalVariable(name: "do_history", arg: 5, scope: !4261, file: !3, line: 378, type: !3951)
!4273 = !DILocation(line: 378, column: 40, scope: !4261)
!4274 = !DILocalVariable(name: "cd_loop_uv_offset", arg: 6, scope: !4261, file: !3, line: 378, type: !4165)
!4275 = !DILocation(line: 378, column: 62, scope: !4261)
!4276 = !DILocation(line: 380, column: 6, scope: !4277)
!4277 = distinct !DILexicalBlock(scope: !4261, file: !3, line: 380, column: 6)
!4278 = !DILocation(line: 380, column: 6, scope: !4261)
!4279 = !DILocation(line: 381, column: 36, scope: !4280)
!4280 = distinct !DILexicalBlock(scope: !4277, file: !3, line: 380, column: 14)
!4281 = !DILocation(line: 381, column: 43, scope: !4280)
!4282 = !DILocation(line: 381, column: 47, scope: !4280)
!4283 = !DILocation(line: 381, column: 52, scope: !4280)
!4284 = !DILocation(line: 381, column: 64, scope: !4280)
!4285 = !DILocation(line: 381, column: 10, scope: !4280)
!4286 = !DILocation(line: 381, column: 3, scope: !4280)
!4287 = !DILocation(line: 384, column: 37, scope: !4288)
!4288 = distinct !DILexicalBlock(scope: !4277, file: !3, line: 383, column: 7)
!4289 = !DILocation(line: 384, column: 44, scope: !4288)
!4290 = !DILocation(line: 384, column: 48, scope: !4288)
!4291 = !DILocation(line: 384, column: 53, scope: !4288)
!4292 = !DILocation(line: 384, column: 10, scope: !4288)
!4293 = !DILocation(line: 384, column: 3, scope: !4288)
!4294 = !DILocation(line: 386, column: 1, scope: !4261)
!4295 = distinct !DISubprogram(name: "uvedit_face_select_enable", scope: !3, file: !3, line: 388, type: !4296, scopeLine: 390, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!4296 = !DISubroutineType(types: !4297)
!4297 = !{!2013, !3841, !3593, !3238, !3951, !4165}
!4298 = !DILocalVariable(name: "scene", arg: 1, scope: !4295, file: !3, line: 388, type: !3841)
!4299 = !DILocation(line: 388, column: 39, scope: !4295)
!4300 = !DILocalVariable(name: "em", arg: 2, scope: !4295, file: !3, line: 388, type: !3593)
!4301 = !DILocation(line: 388, column: 58, scope: !4295)
!4302 = !DILocalVariable(name: "efa", arg: 3, scope: !4295, file: !3, line: 388, type: !3238)
!4303 = !DILocation(line: 388, column: 70, scope: !4295)
!4304 = !DILocalVariable(name: "do_history", arg: 4, scope: !4295, file: !3, line: 388, type: !3951)
!4305 = !DILocation(line: 388, column: 86, scope: !4295)
!4306 = !DILocalVariable(name: "cd_loop_uv_offset", arg: 5, scope: !4295, file: !3, line: 389, type: !4165)
!4307 = !DILocation(line: 389, column: 42, scope: !4295)
!4308 = !DILocalVariable(name: "ts", scope: !4295, file: !3, line: 391, type: !4138)
!4309 = !DILocation(line: 391, column: 16, scope: !4295)
!4310 = !DILocation(line: 391, column: 21, scope: !4295)
!4311 = !DILocation(line: 391, column: 28, scope: !4295)
!4312 = !DILocation(line: 393, column: 6, scope: !4313)
!4313 = distinct !DILexicalBlock(scope: !4295, file: !3, line: 393, column: 6)
!4314 = !DILocation(line: 393, column: 10, scope: !4313)
!4315 = !DILocation(line: 393, column: 18, scope: !4313)
!4316 = !DILocation(line: 393, column: 6, scope: !4295)
!4317 = !DILocation(line: 394, column: 22, scope: !4318)
!4318 = distinct !DILexicalBlock(scope: !4313, file: !3, line: 393, column: 39)
!4319 = !DILocation(line: 394, column: 26, scope: !4318)
!4320 = !DILocation(line: 394, column: 30, scope: !4318)
!4321 = !DILocation(line: 394, column: 3, scope: !4318)
!4322 = !DILocation(line: 395, column: 7, scope: !4323)
!4323 = distinct !DILexicalBlock(scope: !4318, file: !3, line: 395, column: 7)
!4324 = !DILocation(line: 395, column: 7, scope: !4318)
!4325 = !DILocation(line: 396, column: 4, scope: !4326)
!4326 = distinct !DILexicalBlock(scope: !4323, file: !3, line: 395, column: 19)
!4327 = !DILocation(line: 397, column: 3, scope: !4326)
!4328 = !DILocation(line: 398, column: 2, scope: !4318)
!4329 = !DILocalVariable(name: "l", scope: !4330, file: !3, line: 400, type: !3220)
!4330 = distinct !DILexicalBlock(scope: !4313, file: !3, line: 399, column: 7)
!4331 = !DILocation(line: 400, column: 11, scope: !4330)
!4332 = !DILocalVariable(name: "luv", scope: !4330, file: !3, line: 401, type: !3240)
!4333 = !DILocation(line: 401, column: 12, scope: !4330)
!4334 = !DILocalVariable(name: "liter", scope: !4330, file: !3, line: 402, type: !3856)
!4335 = !DILocation(line: 402, column: 10, scope: !4330)
!4336 = !DILocation(line: 404, column: 3, scope: !4337)
!4337 = distinct !DILexicalBlock(scope: !4330, file: !3, line: 404, column: 3)
!4338 = !DILocation(line: 404, column: 3, scope: !4339)
!4339 = distinct !DILexicalBlock(scope: !4337, file: !3, line: 404, column: 3)
!4340 = !DILocation(line: 405, column: 10, scope: !4341)
!4341 = distinct !DILexicalBlock(scope: !4339, file: !3, line: 404, column: 51)
!4342 = !DILocation(line: 405, column: 8, scope: !4341)
!4343 = !DILocation(line: 406, column: 4, scope: !4341)
!4344 = !DILocation(line: 406, column: 9, scope: !4341)
!4345 = !DILocation(line: 406, column: 14, scope: !4341)
!4346 = !DILocation(line: 407, column: 3, scope: !4341)
!4347 = distinct !{!4347, !4336, !4348}
!4348 = !DILocation(line: 407, column: 3, scope: !4337)
!4349 = !DILocation(line: 409, column: 3, scope: !4330)
!4350 = !DILocation(line: 412, column: 2, scope: !4295)
!4351 = !DILocation(line: 413, column: 1, scope: !4295)
!4352 = distinct !DISubprogram(name: "uvedit_face_select_disable", scope: !3, file: !3, line: 415, type: !4353, scopeLine: 417, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!4353 = !DISubroutineType(types: !4354)
!4354 = !{!2013, !3841, !3593, !3238, !4165}
!4355 = !DILocalVariable(name: "scene", arg: 1, scope: !4352, file: !3, line: 415, type: !3841)
!4356 = !DILocation(line: 415, column: 40, scope: !4352)
!4357 = !DILocalVariable(name: "em", arg: 2, scope: !4352, file: !3, line: 415, type: !3593)
!4358 = !DILocation(line: 415, column: 59, scope: !4352)
!4359 = !DILocalVariable(name: "efa", arg: 3, scope: !4352, file: !3, line: 415, type: !3238)
!4360 = !DILocation(line: 415, column: 71, scope: !4352)
!4361 = !DILocalVariable(name: "cd_loop_uv_offset", arg: 4, scope: !4352, file: !3, line: 416, type: !4165)
!4362 = !DILocation(line: 416, column: 43, scope: !4352)
!4363 = !DILocalVariable(name: "ts", scope: !4352, file: !3, line: 418, type: !4138)
!4364 = !DILocation(line: 418, column: 16, scope: !4352)
!4365 = !DILocation(line: 418, column: 21, scope: !4352)
!4366 = !DILocation(line: 418, column: 28, scope: !4352)
!4367 = !DILocation(line: 420, column: 6, scope: !4368)
!4368 = distinct !DILexicalBlock(scope: !4352, file: !3, line: 420, column: 6)
!4369 = !DILocation(line: 420, column: 10, scope: !4368)
!4370 = !DILocation(line: 420, column: 18, scope: !4368)
!4371 = !DILocation(line: 420, column: 6, scope: !4352)
!4372 = !DILocation(line: 421, column: 22, scope: !4373)
!4373 = distinct !DILexicalBlock(scope: !4368, file: !3, line: 420, column: 39)
!4374 = !DILocation(line: 421, column: 26, scope: !4373)
!4375 = !DILocation(line: 421, column: 30, scope: !4373)
!4376 = !DILocation(line: 421, column: 3, scope: !4373)
!4377 = !DILocation(line: 422, column: 2, scope: !4373)
!4378 = !DILocalVariable(name: "l", scope: !4379, file: !3, line: 424, type: !3220)
!4379 = distinct !DILexicalBlock(scope: !4368, file: !3, line: 423, column: 7)
!4380 = !DILocation(line: 424, column: 11, scope: !4379)
!4381 = !DILocalVariable(name: "luv", scope: !4379, file: !3, line: 425, type: !3240)
!4382 = !DILocation(line: 425, column: 12, scope: !4379)
!4383 = !DILocalVariable(name: "liter", scope: !4379, file: !3, line: 426, type: !3856)
!4384 = !DILocation(line: 426, column: 10, scope: !4379)
!4385 = !DILocation(line: 428, column: 3, scope: !4386)
!4386 = distinct !DILexicalBlock(scope: !4379, file: !3, line: 428, column: 3)
!4387 = !DILocation(line: 428, column: 3, scope: !4388)
!4388 = distinct !DILexicalBlock(scope: !4386, file: !3, line: 428, column: 3)
!4389 = !DILocation(line: 429, column: 10, scope: !4390)
!4390 = distinct !DILexicalBlock(scope: !4388, file: !3, line: 428, column: 51)
!4391 = !DILocation(line: 429, column: 8, scope: !4390)
!4392 = !DILocation(line: 430, column: 4, scope: !4390)
!4393 = !DILocation(line: 430, column: 9, scope: !4390)
!4394 = !DILocation(line: 430, column: 14, scope: !4390)
!4395 = !DILocation(line: 431, column: 3, scope: !4390)
!4396 = distinct !{!4396, !4385, !4397}
!4397 = !DILocation(line: 431, column: 3, scope: !4386)
!4398 = !DILocation(line: 433, column: 3, scope: !4379)
!4399 = !DILocation(line: 436, column: 2, scope: !4352)
!4400 = !DILocation(line: 437, column: 1, scope: !4352)
!4401 = distinct !DISubprogram(name: "uvedit_edge_select_test", scope: !3, file: !3, line: 439, type: !4402, scopeLine: 441, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!4402 = !DISubroutineType(types: !4403)
!4403 = !{!2013, !3841, !3220, !4165}
!4404 = !DILocalVariable(name: "scene", arg: 1, scope: !4401, file: !3, line: 439, type: !3841)
!4405 = !DILocation(line: 439, column: 37, scope: !4401)
!4406 = !DILocalVariable(name: "l", arg: 2, scope: !4401, file: !3, line: 439, type: !3220)
!4407 = !DILocation(line: 439, column: 52, scope: !4401)
!4408 = !DILocalVariable(name: "cd_loop_uv_offset", arg: 3, scope: !4401, file: !3, line: 440, type: !4165)
!4409 = !DILocation(line: 440, column: 40, scope: !4401)
!4410 = !DILocalVariable(name: "ts", scope: !4401, file: !3, line: 442, type: !4138)
!4411 = !DILocation(line: 442, column: 16, scope: !4401)
!4412 = !DILocation(line: 442, column: 21, scope: !4401)
!4413 = !DILocation(line: 442, column: 28, scope: !4401)
!4414 = !DILocation(line: 444, column: 6, scope: !4415)
!4415 = distinct !DILexicalBlock(scope: !4401, file: !3, line: 444, column: 6)
!4416 = !DILocation(line: 444, column: 10, scope: !4415)
!4417 = !DILocation(line: 444, column: 18, scope: !4415)
!4418 = !DILocation(line: 444, column: 6, scope: !4401)
!4419 = !DILocation(line: 445, column: 7, scope: !4420)
!4420 = distinct !DILexicalBlock(scope: !4421, file: !3, line: 445, column: 7)
!4421 = distinct !DILexicalBlock(scope: !4415, file: !3, line: 444, column: 39)
!4422 = !DILocation(line: 445, column: 11, scope: !4420)
!4423 = !DILocation(line: 445, column: 22, scope: !4420)
!4424 = !DILocation(line: 445, column: 7, scope: !4421)
!4425 = !DILocation(line: 446, column: 11, scope: !4426)
!4426 = distinct !DILexicalBlock(scope: !4420, file: !3, line: 445, column: 41)
!4427 = !DILocation(line: 446, column: 4, scope: !4426)
!4428 = !DILocation(line: 448, column: 12, scope: !4429)
!4429 = distinct !DILexicalBlock(scope: !4420, file: !3, line: 448, column: 12)
!4430 = !DILocation(line: 448, column: 16, scope: !4429)
!4431 = !DILocation(line: 448, column: 27, scope: !4429)
!4432 = !DILocation(line: 448, column: 12, scope: !4420)
!4433 = !DILocation(line: 449, column: 11, scope: !4434)
!4434 = distinct !DILexicalBlock(scope: !4429, file: !3, line: 448, column: 47)
!4435 = !DILocation(line: 449, column: 4, scope: !4434)
!4436 = !DILocation(line: 452, column: 11, scope: !4437)
!4437 = distinct !DILexicalBlock(scope: !4429, file: !3, line: 451, column: 8)
!4438 = !DILocation(line: 452, column: 51, scope: !4437)
!4439 = !DILocation(line: 453, column: 11, scope: !4437)
!4440 = !DILocation(line: 0, scope: !4437)
!4441 = !DILocation(line: 452, column: 4, scope: !4437)
!4442 = !DILocalVariable(name: "luv1", scope: !4443, file: !3, line: 457, type: !3240)
!4443 = distinct !DILexicalBlock(scope: !4415, file: !3, line: 456, column: 7)
!4444 = !DILocation(line: 457, column: 12, scope: !4443)
!4445 = !DILocalVariable(name: "luv2", scope: !4443, file: !3, line: 457, type: !3240)
!4446 = !DILocation(line: 457, column: 19, scope: !4443)
!4447 = !DILocation(line: 459, column: 10, scope: !4443)
!4448 = !DILocation(line: 459, column: 8, scope: !4443)
!4449 = !DILocation(line: 460, column: 10, scope: !4443)
!4450 = !DILocation(line: 460, column: 8, scope: !4443)
!4451 = !DILocation(line: 462, column: 11, scope: !4443)
!4452 = !DILocation(line: 462, column: 17, scope: !4443)
!4453 = !DILocation(line: 462, column: 22, scope: !4443)
!4454 = !DILocation(line: 462, column: 41, scope: !4443)
!4455 = !DILocation(line: 462, column: 45, scope: !4443)
!4456 = !DILocation(line: 462, column: 51, scope: !4443)
!4457 = !DILocation(line: 462, column: 56, scope: !4443)
!4458 = !DILocation(line: 0, scope: !4443)
!4459 = !DILocation(line: 462, column: 10, scope: !4443)
!4460 = !DILocation(line: 462, column: 3, scope: !4443)
!4461 = !DILocation(line: 464, column: 1, scope: !4401)
!4462 = distinct !DISubprogram(name: "uvedit_edge_select_set", scope: !3, file: !3, line: 466, type: !4463, scopeLine: 469, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!4463 = !DISubroutineType(types: !4464)
!4464 = !{null, !3593, !3841, !3220, !3951, !3951, !4165}
!4465 = !DILocalVariable(name: "em", arg: 1, scope: !4462, file: !3, line: 466, type: !3593)
!4466 = !DILocation(line: 466, column: 41, scope: !4462)
!4467 = !DILocalVariable(name: "scene", arg: 2, scope: !4462, file: !3, line: 466, type: !3841)
!4468 = !DILocation(line: 466, column: 52, scope: !4462)
!4469 = !DILocalVariable(name: "l", arg: 3, scope: !4462, file: !3, line: 466, type: !3220)
!4470 = !DILocation(line: 466, column: 67, scope: !4462)
!4471 = !DILocalVariable(name: "select", arg: 4, scope: !4462, file: !3, line: 466, type: !3951)
!4472 = !DILocation(line: 466, column: 81, scope: !4462)
!4473 = !DILocalVariable(name: "do_history", arg: 5, scope: !4462, file: !3, line: 467, type: !3951)
!4474 = !DILocation(line: 467, column: 40, scope: !4462)
!4475 = !DILocalVariable(name: "cd_loop_uv_offset", arg: 6, scope: !4462, file: !3, line: 467, type: !4165)
!4476 = !DILocation(line: 467, column: 62, scope: !4462)
!4477 = !DILocation(line: 470, column: 6, scope: !4478)
!4478 = distinct !DILexicalBlock(scope: !4462, file: !3, line: 470, column: 6)
!4479 = !DILocation(line: 470, column: 6, scope: !4462)
!4480 = !DILocation(line: 471, column: 29, scope: !4481)
!4481 = distinct !DILexicalBlock(scope: !4478, file: !3, line: 470, column: 14)
!4482 = !DILocation(line: 471, column: 33, scope: !4481)
!4483 = !DILocation(line: 471, column: 40, scope: !4481)
!4484 = !DILocation(line: 471, column: 43, scope: !4481)
!4485 = !DILocation(line: 471, column: 55, scope: !4481)
!4486 = !DILocation(line: 471, column: 3, scope: !4481)
!4487 = !DILocation(line: 472, column: 2, scope: !4481)
!4488 = !DILocation(line: 474, column: 30, scope: !4489)
!4489 = distinct !DILexicalBlock(scope: !4478, file: !3, line: 473, column: 7)
!4490 = !DILocation(line: 474, column: 34, scope: !4489)
!4491 = !DILocation(line: 474, column: 41, scope: !4489)
!4492 = !DILocation(line: 474, column: 44, scope: !4489)
!4493 = !DILocation(line: 474, column: 3, scope: !4489)
!4494 = !DILocation(line: 476, column: 1, scope: !4462)
!4495 = distinct !DISubprogram(name: "uvedit_edge_select_enable", scope: !3, file: !3, line: 478, type: !4496, scopeLine: 481, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!4496 = !DISubroutineType(types: !4497)
!4497 = !{null, !3593, !3841, !3220, !3951, !4165}
!4498 = !DILocalVariable(name: "em", arg: 1, scope: !4495, file: !3, line: 478, type: !3593)
!4499 = !DILocation(line: 478, column: 44, scope: !4495)
!4500 = !DILocalVariable(name: "scene", arg: 2, scope: !4495, file: !3, line: 478, type: !3841)
!4501 = !DILocation(line: 478, column: 55, scope: !4495)
!4502 = !DILocalVariable(name: "l", arg: 3, scope: !4495, file: !3, line: 478, type: !3220)
!4503 = !DILocation(line: 478, column: 70, scope: !4495)
!4504 = !DILocalVariable(name: "do_history", arg: 4, scope: !4495, file: !3, line: 478, type: !3951)
!4505 = !DILocation(line: 478, column: 84, scope: !4495)
!4506 = !DILocalVariable(name: "cd_loop_uv_offset", arg: 5, scope: !4495, file: !3, line: 479, type: !4165)
!4507 = !DILocation(line: 479, column: 42, scope: !4495)
!4508 = !DILocalVariable(name: "ts", scope: !4495, file: !3, line: 482, type: !4138)
!4509 = !DILocation(line: 482, column: 16, scope: !4495)
!4510 = !DILocation(line: 482, column: 21, scope: !4495)
!4511 = !DILocation(line: 482, column: 28, scope: !4495)
!4512 = !DILocation(line: 484, column: 6, scope: !4513)
!4513 = distinct !DILexicalBlock(scope: !4495, file: !3, line: 484, column: 6)
!4514 = !DILocation(line: 484, column: 10, scope: !4513)
!4515 = !DILocation(line: 484, column: 18, scope: !4513)
!4516 = !DILocation(line: 484, column: 6, scope: !4495)
!4517 = !DILocation(line: 485, column: 7, scope: !4518)
!4518 = distinct !DILexicalBlock(scope: !4519, file: !3, line: 485, column: 7)
!4519 = distinct !DILexicalBlock(scope: !4513, file: !3, line: 484, column: 39)
!4520 = !DILocation(line: 485, column: 11, scope: !4518)
!4521 = !DILocation(line: 485, column: 22, scope: !4518)
!4522 = !DILocation(line: 485, column: 7, scope: !4519)
!4523 = !DILocation(line: 486, column: 23, scope: !4518)
!4524 = !DILocation(line: 486, column: 27, scope: !4518)
!4525 = !DILocation(line: 486, column: 31, scope: !4518)
!4526 = !DILocation(line: 486, column: 34, scope: !4518)
!4527 = !DILocation(line: 486, column: 4, scope: !4518)
!4528 = !DILocation(line: 487, column: 12, scope: !4529)
!4529 = distinct !DILexicalBlock(scope: !4518, file: !3, line: 487, column: 12)
!4530 = !DILocation(line: 487, column: 16, scope: !4529)
!4531 = !DILocation(line: 487, column: 27, scope: !4529)
!4532 = !DILocation(line: 487, column: 12, scope: !4518)
!4533 = !DILocation(line: 488, column: 23, scope: !4529)
!4534 = !DILocation(line: 488, column: 27, scope: !4529)
!4535 = !DILocation(line: 488, column: 31, scope: !4529)
!4536 = !DILocation(line: 488, column: 34, scope: !4529)
!4537 = !DILocation(line: 488, column: 4, scope: !4529)
!4538 = !DILocation(line: 490, column: 23, scope: !4539)
!4539 = distinct !DILexicalBlock(scope: !4529, file: !3, line: 489, column: 8)
!4540 = !DILocation(line: 490, column: 27, scope: !4539)
!4541 = !DILocation(line: 490, column: 31, scope: !4539)
!4542 = !DILocation(line: 490, column: 34, scope: !4539)
!4543 = !DILocation(line: 490, column: 37, scope: !4539)
!4544 = !DILocation(line: 490, column: 4, scope: !4539)
!4545 = !DILocation(line: 491, column: 23, scope: !4539)
!4546 = !DILocation(line: 491, column: 27, scope: !4539)
!4547 = !DILocation(line: 491, column: 31, scope: !4539)
!4548 = !DILocation(line: 491, column: 34, scope: !4539)
!4549 = !DILocation(line: 491, column: 37, scope: !4539)
!4550 = !DILocation(line: 491, column: 4, scope: !4539)
!4551 = !DILocation(line: 494, column: 7, scope: !4552)
!4552 = distinct !DILexicalBlock(scope: !4519, file: !3, line: 494, column: 7)
!4553 = !DILocation(line: 494, column: 7, scope: !4519)
!4554 = !DILocation(line: 495, column: 4, scope: !4555)
!4555 = distinct !DILexicalBlock(scope: !4552, file: !3, line: 494, column: 19)
!4556 = !DILocation(line: 496, column: 3, scope: !4555)
!4557 = !DILocation(line: 497, column: 2, scope: !4519)
!4558 = !DILocalVariable(name: "luv1", scope: !4559, file: !3, line: 499, type: !3240)
!4559 = distinct !DILexicalBlock(scope: !4513, file: !3, line: 498, column: 7)
!4560 = !DILocation(line: 499, column: 12, scope: !4559)
!4561 = !DILocalVariable(name: "luv2", scope: !4559, file: !3, line: 499, type: !3240)
!4562 = !DILocation(line: 499, column: 19, scope: !4559)
!4563 = !DILocation(line: 501, column: 10, scope: !4559)
!4564 = !DILocation(line: 501, column: 8, scope: !4559)
!4565 = !DILocation(line: 502, column: 10, scope: !4559)
!4566 = !DILocation(line: 502, column: 8, scope: !4559)
!4567 = !DILocation(line: 504, column: 3, scope: !4559)
!4568 = !DILocation(line: 504, column: 9, scope: !4559)
!4569 = !DILocation(line: 504, column: 14, scope: !4559)
!4570 = !DILocation(line: 505, column: 3, scope: !4559)
!4571 = !DILocation(line: 505, column: 9, scope: !4559)
!4572 = !DILocation(line: 505, column: 14, scope: !4559)
!4573 = !DILocation(line: 507, column: 1, scope: !4495)
!4574 = distinct !DISubprogram(name: "uvedit_edge_select_disable", scope: !3, file: !3, line: 509, type: !4575, scopeLine: 512, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!4575 = !DISubroutineType(types: !4576)
!4576 = !{null, !3593, !3841, !3220, !4165}
!4577 = !DILocalVariable(name: "em", arg: 1, scope: !4574, file: !3, line: 509, type: !3593)
!4578 = !DILocation(line: 509, column: 45, scope: !4574)
!4579 = !DILocalVariable(name: "scene", arg: 2, scope: !4574, file: !3, line: 509, type: !3841)
!4580 = !DILocation(line: 509, column: 56, scope: !4574)
!4581 = !DILocalVariable(name: "l", arg: 3, scope: !4574, file: !3, line: 509, type: !3220)
!4582 = !DILocation(line: 509, column: 71, scope: !4574)
!4583 = !DILocalVariable(name: "cd_loop_uv_offset", arg: 4, scope: !4574, file: !3, line: 510, type: !4165)
!4584 = !DILocation(line: 510, column: 43, scope: !4574)
!4585 = !DILocalVariable(name: "ts", scope: !4574, file: !3, line: 513, type: !4138)
!4586 = !DILocation(line: 513, column: 16, scope: !4574)
!4587 = !DILocation(line: 513, column: 21, scope: !4574)
!4588 = !DILocation(line: 513, column: 28, scope: !4574)
!4589 = !DILocation(line: 515, column: 6, scope: !4590)
!4590 = distinct !DILexicalBlock(scope: !4574, file: !3, line: 515, column: 6)
!4591 = !DILocation(line: 515, column: 10, scope: !4590)
!4592 = !DILocation(line: 515, column: 18, scope: !4590)
!4593 = !DILocation(line: 515, column: 6, scope: !4574)
!4594 = !DILocation(line: 516, column: 7, scope: !4595)
!4595 = distinct !DILexicalBlock(scope: !4596, file: !3, line: 516, column: 7)
!4596 = distinct !DILexicalBlock(scope: !4590, file: !3, line: 515, column: 39)
!4597 = !DILocation(line: 516, column: 11, scope: !4595)
!4598 = !DILocation(line: 516, column: 22, scope: !4595)
!4599 = !DILocation(line: 516, column: 7, scope: !4596)
!4600 = !DILocation(line: 517, column: 23, scope: !4595)
!4601 = !DILocation(line: 517, column: 27, scope: !4595)
!4602 = !DILocation(line: 517, column: 31, scope: !4595)
!4603 = !DILocation(line: 517, column: 34, scope: !4595)
!4604 = !DILocation(line: 517, column: 4, scope: !4595)
!4605 = !DILocation(line: 518, column: 12, scope: !4606)
!4606 = distinct !DILexicalBlock(scope: !4595, file: !3, line: 518, column: 12)
!4607 = !DILocation(line: 518, column: 16, scope: !4606)
!4608 = !DILocation(line: 518, column: 27, scope: !4606)
!4609 = !DILocation(line: 518, column: 12, scope: !4595)
!4610 = !DILocation(line: 519, column: 23, scope: !4606)
!4611 = !DILocation(line: 519, column: 27, scope: !4606)
!4612 = !DILocation(line: 519, column: 31, scope: !4606)
!4613 = !DILocation(line: 519, column: 34, scope: !4606)
!4614 = !DILocation(line: 519, column: 4, scope: !4606)
!4615 = !DILocation(line: 521, column: 23, scope: !4616)
!4616 = distinct !DILexicalBlock(scope: !4606, file: !3, line: 520, column: 8)
!4617 = !DILocation(line: 521, column: 27, scope: !4616)
!4618 = !DILocation(line: 521, column: 31, scope: !4616)
!4619 = !DILocation(line: 521, column: 34, scope: !4616)
!4620 = !DILocation(line: 521, column: 37, scope: !4616)
!4621 = !DILocation(line: 521, column: 4, scope: !4616)
!4622 = !DILocation(line: 522, column: 23, scope: !4616)
!4623 = !DILocation(line: 522, column: 27, scope: !4616)
!4624 = !DILocation(line: 522, column: 31, scope: !4616)
!4625 = !DILocation(line: 522, column: 34, scope: !4616)
!4626 = !DILocation(line: 522, column: 37, scope: !4616)
!4627 = !DILocation(line: 522, column: 4, scope: !4616)
!4628 = !DILocation(line: 524, column: 2, scope: !4596)
!4629 = !DILocalVariable(name: "luv1", scope: !4630, file: !3, line: 526, type: !3240)
!4630 = distinct !DILexicalBlock(scope: !4590, file: !3, line: 525, column: 7)
!4631 = !DILocation(line: 526, column: 12, scope: !4630)
!4632 = !DILocalVariable(name: "luv2", scope: !4630, file: !3, line: 526, type: !3240)
!4633 = !DILocation(line: 526, column: 19, scope: !4630)
!4634 = !DILocation(line: 528, column: 10, scope: !4630)
!4635 = !DILocation(line: 528, column: 8, scope: !4630)
!4636 = !DILocation(line: 529, column: 10, scope: !4630)
!4637 = !DILocation(line: 529, column: 8, scope: !4630)
!4638 = !DILocation(line: 531, column: 3, scope: !4630)
!4639 = !DILocation(line: 531, column: 9, scope: !4630)
!4640 = !DILocation(line: 531, column: 14, scope: !4630)
!4641 = !DILocation(line: 532, column: 3, scope: !4630)
!4642 = !DILocation(line: 532, column: 9, scope: !4630)
!4643 = !DILocation(line: 532, column: 14, scope: !4630)
!4644 = !DILocation(line: 534, column: 1, scope: !4574)
!4645 = distinct !DISubprogram(name: "uvedit_uv_select_test", scope: !3, file: !3, line: 536, type: !4402, scopeLine: 538, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!4646 = !DILocalVariable(name: "scene", arg: 1, scope: !4645, file: !3, line: 536, type: !3841)
!4647 = !DILocation(line: 536, column: 35, scope: !4645)
!4648 = !DILocalVariable(name: "l", arg: 2, scope: !4645, file: !3, line: 536, type: !3220)
!4649 = !DILocation(line: 536, column: 50, scope: !4645)
!4650 = !DILocalVariable(name: "cd_loop_uv_offset", arg: 3, scope: !4645, file: !3, line: 537, type: !4165)
!4651 = !DILocation(line: 537, column: 38, scope: !4645)
!4652 = !DILocalVariable(name: "ts", scope: !4645, file: !3, line: 539, type: !4138)
!4653 = !DILocation(line: 539, column: 16, scope: !4645)
!4654 = !DILocation(line: 539, column: 21, scope: !4645)
!4655 = !DILocation(line: 539, column: 28, scope: !4645)
!4656 = !DILocation(line: 541, column: 6, scope: !4657)
!4657 = distinct !DILexicalBlock(scope: !4645, file: !3, line: 541, column: 6)
!4658 = !DILocation(line: 541, column: 10, scope: !4657)
!4659 = !DILocation(line: 541, column: 18, scope: !4657)
!4660 = !DILocation(line: 541, column: 6, scope: !4645)
!4661 = !DILocation(line: 542, column: 7, scope: !4662)
!4662 = distinct !DILexicalBlock(scope: !4663, file: !3, line: 542, column: 7)
!4663 = distinct !DILexicalBlock(scope: !4657, file: !3, line: 541, column: 39)
!4664 = !DILocation(line: 542, column: 11, scope: !4662)
!4665 = !DILocation(line: 542, column: 22, scope: !4662)
!4666 = !DILocation(line: 542, column: 7, scope: !4663)
!4667 = !DILocation(line: 543, column: 11, scope: !4662)
!4668 = !DILocation(line: 543, column: 4, scope: !4662)
!4669 = !DILocation(line: 545, column: 11, scope: !4662)
!4670 = !DILocation(line: 545, column: 4, scope: !4662)
!4671 = !DILocalVariable(name: "luv", scope: !4672, file: !3, line: 548, type: !3240)
!4672 = distinct !DILexicalBlock(scope: !4657, file: !3, line: 547, column: 7)
!4673 = !DILocation(line: 548, column: 12, scope: !4672)
!4674 = !DILocation(line: 548, column: 18, scope: !4672)
!4675 = !DILocation(line: 549, column: 11, scope: !4672)
!4676 = !DILocation(line: 549, column: 16, scope: !4672)
!4677 = !DILocation(line: 549, column: 21, scope: !4672)
!4678 = !DILocation(line: 549, column: 40, scope: !4672)
!4679 = !DILocation(line: 549, column: 10, scope: !4672)
!4680 = !DILocation(line: 549, column: 3, scope: !4672)
!4681 = !DILocation(line: 551, column: 1, scope: !4645)
!4682 = distinct !DISubprogram(name: "_bm_elem_flag_test_bool", scope: !4247, file: !4247, line: 47, type: !4683, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!4683 = !DISubroutineType(types: !4684)
!4684 = !{!2013, !4250, !13}
!4685 = !DILocalVariable(name: "head", arg: 1, scope: !4682, file: !4247, line: 47, type: !4250)
!4686 = !DILocation(line: 47, column: 57, scope: !4682)
!4687 = !DILocalVariable(name: "hflag", arg: 2, scope: !4682, file: !4247, line: 47, type: !13)
!4688 = !DILocation(line: 47, column: 74, scope: !4682)
!4689 = !DILocation(line: 49, column: 10, scope: !4682)
!4690 = !DILocation(line: 49, column: 16, scope: !4682)
!4691 = !DILocation(line: 49, column: 24, scope: !4682)
!4692 = !DILocation(line: 49, column: 22, scope: !4682)
!4693 = !DILocation(line: 49, column: 31, scope: !4682)
!4694 = !DILocation(line: 49, column: 9, scope: !4682)
!4695 = !DILocation(line: 49, column: 2, scope: !4682)
!4696 = distinct !DISubprogram(name: "uvedit_uv_select_set", scope: !3, file: !3, line: 553, type: !4463, scopeLine: 555, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!4697 = !DILocalVariable(name: "em", arg: 1, scope: !4696, file: !3, line: 553, type: !3593)
!4698 = !DILocation(line: 553, column: 39, scope: !4696)
!4699 = !DILocalVariable(name: "scene", arg: 2, scope: !4696, file: !3, line: 553, type: !3841)
!4700 = !DILocation(line: 553, column: 50, scope: !4696)
!4701 = !DILocalVariable(name: "l", arg: 3, scope: !4696, file: !3, line: 553, type: !3220)
!4702 = !DILocation(line: 553, column: 65, scope: !4696)
!4703 = !DILocalVariable(name: "select", arg: 4, scope: !4696, file: !3, line: 553, type: !3951)
!4704 = !DILocation(line: 553, column: 79, scope: !4696)
!4705 = !DILocalVariable(name: "do_history", arg: 5, scope: !4696, file: !3, line: 554, type: !3951)
!4706 = !DILocation(line: 554, column: 38, scope: !4696)
!4707 = !DILocalVariable(name: "cd_loop_uv_offset", arg: 6, scope: !4696, file: !3, line: 554, type: !4165)
!4708 = !DILocation(line: 554, column: 60, scope: !4696)
!4709 = !DILocation(line: 556, column: 6, scope: !4710)
!4710 = distinct !DILexicalBlock(scope: !4696, file: !3, line: 556, column: 6)
!4711 = !DILocation(line: 556, column: 6, scope: !4696)
!4712 = !DILocation(line: 557, column: 27, scope: !4713)
!4713 = distinct !DILexicalBlock(scope: !4710, file: !3, line: 556, column: 14)
!4714 = !DILocation(line: 557, column: 31, scope: !4713)
!4715 = !DILocation(line: 557, column: 38, scope: !4713)
!4716 = !DILocation(line: 557, column: 41, scope: !4713)
!4717 = !DILocation(line: 557, column: 53, scope: !4713)
!4718 = !DILocation(line: 557, column: 3, scope: !4713)
!4719 = !DILocation(line: 558, column: 2, scope: !4713)
!4720 = !DILocation(line: 560, column: 28, scope: !4721)
!4721 = distinct !DILexicalBlock(scope: !4710, file: !3, line: 559, column: 7)
!4722 = !DILocation(line: 560, column: 32, scope: !4721)
!4723 = !DILocation(line: 560, column: 39, scope: !4721)
!4724 = !DILocation(line: 560, column: 42, scope: !4721)
!4725 = !DILocation(line: 560, column: 3, scope: !4721)
!4726 = !DILocation(line: 562, column: 1, scope: !4696)
!4727 = distinct !DISubprogram(name: "uvedit_uv_select_enable", scope: !3, file: !3, line: 564, type: !4496, scopeLine: 566, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!4728 = !DILocalVariable(name: "em", arg: 1, scope: !4727, file: !3, line: 564, type: !3593)
!4729 = !DILocation(line: 564, column: 42, scope: !4727)
!4730 = !DILocalVariable(name: "scene", arg: 2, scope: !4727, file: !3, line: 564, type: !3841)
!4731 = !DILocation(line: 564, column: 53, scope: !4727)
!4732 = !DILocalVariable(name: "l", arg: 3, scope: !4727, file: !3, line: 564, type: !3220)
!4733 = !DILocation(line: 564, column: 68, scope: !4727)
!4734 = !DILocalVariable(name: "do_history", arg: 4, scope: !4727, file: !3, line: 565, type: !3951)
!4735 = !DILocation(line: 565, column: 41, scope: !4727)
!4736 = !DILocalVariable(name: "cd_loop_uv_offset", arg: 5, scope: !4727, file: !3, line: 565, type: !4165)
!4737 = !DILocation(line: 565, column: 63, scope: !4727)
!4738 = !DILocalVariable(name: "ts", scope: !4727, file: !3, line: 567, type: !4138)
!4739 = !DILocation(line: 567, column: 16, scope: !4727)
!4740 = !DILocation(line: 567, column: 21, scope: !4727)
!4741 = !DILocation(line: 567, column: 28, scope: !4727)
!4742 = !DILocation(line: 569, column: 6, scope: !4743)
!4743 = distinct !DILexicalBlock(scope: !4727, file: !3, line: 569, column: 6)
!4744 = !DILocation(line: 569, column: 10, scope: !4743)
!4745 = !DILocation(line: 569, column: 18, scope: !4743)
!4746 = !DILocation(line: 569, column: 6, scope: !4727)
!4747 = !DILocation(line: 570, column: 7, scope: !4748)
!4748 = distinct !DILexicalBlock(scope: !4749, file: !3, line: 570, column: 7)
!4749 = distinct !DILexicalBlock(scope: !4743, file: !3, line: 569, column: 39)
!4750 = !DILocation(line: 570, column: 11, scope: !4748)
!4751 = !DILocation(line: 570, column: 22, scope: !4748)
!4752 = !DILocation(line: 570, column: 7, scope: !4749)
!4753 = !DILocation(line: 571, column: 23, scope: !4748)
!4754 = !DILocation(line: 571, column: 27, scope: !4748)
!4755 = !DILocation(line: 571, column: 31, scope: !4748)
!4756 = !DILocation(line: 571, column: 34, scope: !4748)
!4757 = !DILocation(line: 571, column: 4, scope: !4748)
!4758 = !DILocation(line: 573, column: 23, scope: !4748)
!4759 = !DILocation(line: 573, column: 27, scope: !4748)
!4760 = !DILocation(line: 573, column: 31, scope: !4748)
!4761 = !DILocation(line: 573, column: 34, scope: !4748)
!4762 = !DILocation(line: 573, column: 4, scope: !4748)
!4763 = !DILocation(line: 575, column: 7, scope: !4764)
!4764 = distinct !DILexicalBlock(scope: !4749, file: !3, line: 575, column: 7)
!4765 = !DILocation(line: 575, column: 7, scope: !4749)
!4766 = !DILocation(line: 576, column: 4, scope: !4767)
!4767 = distinct !DILexicalBlock(scope: !4764, file: !3, line: 575, column: 19)
!4768 = !DILocation(line: 577, column: 3, scope: !4767)
!4769 = !DILocation(line: 578, column: 2, scope: !4749)
!4770 = !DILocalVariable(name: "luv", scope: !4771, file: !3, line: 580, type: !3240)
!4771 = distinct !DILexicalBlock(scope: !4743, file: !3, line: 579, column: 7)
!4772 = !DILocation(line: 580, column: 12, scope: !4771)
!4773 = !DILocation(line: 580, column: 18, scope: !4771)
!4774 = !DILocation(line: 581, column: 3, scope: !4771)
!4775 = !DILocation(line: 581, column: 8, scope: !4771)
!4776 = !DILocation(line: 581, column: 13, scope: !4771)
!4777 = !DILocation(line: 583, column: 1, scope: !4727)
!4778 = distinct !DISubprogram(name: "uvedit_uv_select_disable", scope: !3, file: !3, line: 585, type: !4575, scopeLine: 587, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!4779 = !DILocalVariable(name: "em", arg: 1, scope: !4778, file: !3, line: 585, type: !3593)
!4780 = !DILocation(line: 585, column: 43, scope: !4778)
!4781 = !DILocalVariable(name: "scene", arg: 2, scope: !4778, file: !3, line: 585, type: !3841)
!4782 = !DILocation(line: 585, column: 54, scope: !4778)
!4783 = !DILocalVariable(name: "l", arg: 3, scope: !4778, file: !3, line: 585, type: !3220)
!4784 = !DILocation(line: 585, column: 69, scope: !4778)
!4785 = !DILocalVariable(name: "cd_loop_uv_offset", arg: 4, scope: !4778, file: !3, line: 586, type: !4165)
!4786 = !DILocation(line: 586, column: 41, scope: !4778)
!4787 = !DILocalVariable(name: "ts", scope: !4778, file: !3, line: 588, type: !4138)
!4788 = !DILocation(line: 588, column: 16, scope: !4778)
!4789 = !DILocation(line: 588, column: 21, scope: !4778)
!4790 = !DILocation(line: 588, column: 28, scope: !4778)
!4791 = !DILocation(line: 590, column: 6, scope: !4792)
!4792 = distinct !DILexicalBlock(scope: !4778, file: !3, line: 590, column: 6)
!4793 = !DILocation(line: 590, column: 10, scope: !4792)
!4794 = !DILocation(line: 590, column: 18, scope: !4792)
!4795 = !DILocation(line: 590, column: 6, scope: !4778)
!4796 = !DILocation(line: 591, column: 7, scope: !4797)
!4797 = distinct !DILexicalBlock(scope: !4798, file: !3, line: 591, column: 7)
!4798 = distinct !DILexicalBlock(scope: !4792, file: !3, line: 590, column: 39)
!4799 = !DILocation(line: 591, column: 11, scope: !4797)
!4800 = !DILocation(line: 591, column: 22, scope: !4797)
!4801 = !DILocation(line: 591, column: 7, scope: !4798)
!4802 = !DILocation(line: 592, column: 23, scope: !4797)
!4803 = !DILocation(line: 592, column: 27, scope: !4797)
!4804 = !DILocation(line: 592, column: 31, scope: !4797)
!4805 = !DILocation(line: 592, column: 34, scope: !4797)
!4806 = !DILocation(line: 592, column: 4, scope: !4797)
!4807 = !DILocation(line: 594, column: 23, scope: !4797)
!4808 = !DILocation(line: 594, column: 27, scope: !4797)
!4809 = !DILocation(line: 594, column: 31, scope: !4797)
!4810 = !DILocation(line: 594, column: 34, scope: !4797)
!4811 = !DILocation(line: 594, column: 4, scope: !4797)
!4812 = !DILocation(line: 595, column: 2, scope: !4798)
!4813 = !DILocalVariable(name: "luv", scope: !4814, file: !3, line: 597, type: !3240)
!4814 = distinct !DILexicalBlock(scope: !4792, file: !3, line: 596, column: 7)
!4815 = !DILocation(line: 597, column: 12, scope: !4814)
!4816 = !DILocation(line: 597, column: 18, scope: !4814)
!4817 = !DILocation(line: 598, column: 3, scope: !4814)
!4818 = !DILocation(line: 598, column: 8, scope: !4814)
!4819 = !DILocation(line: 598, column: 13, scope: !4814)
!4820 = !DILocation(line: 600, column: 1, scope: !4778)
!4821 = distinct !DISubprogram(name: "uvedit_live_unwrap_update", scope: !3, file: !3, line: 604, type: !4822, scopeLine: 605, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!4822 = !DISubroutineType(types: !4823)
!4823 = !{null, !4824, !3841, !3588}
!4824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4825, size: 64)
!4825 = !DIDerivedType(tag: DW_TAG_typedef, name: "SpaceImage", file: !826, line: 743, baseType: !4826)
!4826 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SpaceImage", file: !826, line: 710, size: 84672, elements: !4827)
!4827 = !{!4828, !4829, !4830, !4831, !4832, !4833, !4834, !4835, !4836, !4877, !4878, !4879, !4880, !4881, !4882, !4883, !4884, !4885, !4886, !4887, !4888, !4889, !4890, !4891, !4892, !4893, !4894}
!4828 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4826, file: !826, line: 711, baseType: !829, size: 64)
!4829 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4826, file: !826, line: 711, baseType: !829, size: 64, offset: 64)
!4830 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !4826, file: !826, line: 712, baseType: !58, size: 128, offset: 128)
!4831 = !DIDerivedType(tag: DW_TAG_member, name: "spacetype", scope: !4826, file: !826, line: 713, baseType: !22, size: 32, offset: 256)
!4832 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !4826, file: !826, line: 715, baseType: !22, size: 32, offset: 288)
!4833 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !4826, file: !826, line: 717, baseType: !1091, size: 64, offset: 320)
!4834 = !DIDerivedType(tag: DW_TAG_member, name: "iuser", scope: !4826, file: !826, line: 718, baseType: !512, size: 320, offset: 384)
!4835 = !DIDerivedType(tag: DW_TAG_member, name: "cumap", scope: !4826, file: !826, line: 720, baseType: !1228, size: 64, offset: 704)
!4836 = !DIDerivedType(tag: DW_TAG_member, name: "scopes", scope: !4826, file: !826, line: 722, baseType: !4837, size: 42112, offset: 768)
!4837 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Scopes", file: !889, line: 138, size: 42112, elements: !4838)
!4838 = !{!4839, !4840, !4841, !4842, !4843, !4844, !4845, !4846, !4847, !4848, !4849, !4852, !4871, !4872, !4873, !4874, !4875, !4876}
!4839 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !4837, file: !889, line: 139, baseType: !22, size: 32)
!4840 = !DIDerivedType(tag: DW_TAG_member, name: "sample_full", scope: !4837, file: !889, line: 140, baseType: !22, size: 32, offset: 32)
!4841 = !DIDerivedType(tag: DW_TAG_member, name: "sample_lines", scope: !4837, file: !889, line: 141, baseType: !22, size: 32, offset: 64)
!4842 = !DIDerivedType(tag: DW_TAG_member, name: "accuracy", scope: !4837, file: !889, line: 142, baseType: !192, size: 32, offset: 96)
!4843 = !DIDerivedType(tag: DW_TAG_member, name: "wavefrm_mode", scope: !4837, file: !889, line: 143, baseType: !22, size: 32, offset: 128)
!4844 = !DIDerivedType(tag: DW_TAG_member, name: "wavefrm_alpha", scope: !4837, file: !889, line: 144, baseType: !192, size: 32, offset: 160)
!4845 = !DIDerivedType(tag: DW_TAG_member, name: "wavefrm_yfac", scope: !4837, file: !889, line: 145, baseType: !192, size: 32, offset: 192)
!4846 = !DIDerivedType(tag: DW_TAG_member, name: "wavefrm_height", scope: !4837, file: !889, line: 146, baseType: !22, size: 32, offset: 224)
!4847 = !DIDerivedType(tag: DW_TAG_member, name: "vecscope_alpha", scope: !4837, file: !889, line: 147, baseType: !192, size: 32, offset: 256)
!4848 = !DIDerivedType(tag: DW_TAG_member, name: "vecscope_height", scope: !4837, file: !889, line: 148, baseType: !22, size: 32, offset: 288)
!4849 = !DIDerivedType(tag: DW_TAG_member, name: "minmax", scope: !4837, file: !889, line: 149, baseType: !4850, size: 192, offset: 320)
!4850 = !DICompositeType(tag: DW_TAG_array_type, baseType: !192, size: 192, elements: !4851)
!4851 = !{!195, !728}
!4852 = !DIDerivedType(tag: DW_TAG_member, name: "hist", scope: !4837, file: !889, line: 150, baseType: !4853, size: 41280, offset: 512)
!4853 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Histogram", file: !889, line: 118, size: 41280, elements: !4854)
!4854 = !{!4855, !4856, !4857, !4859, !4860, !4861, !4862, !4863, !4864, !4865, !4866, !4867, !4868}
!4855 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !4853, file: !889, line: 119, baseType: !22, size: 32)
!4856 = !DIDerivedType(tag: DW_TAG_member, name: "x_resolution", scope: !4853, file: !889, line: 120, baseType: !22, size: 32, offset: 32)
!4857 = !DIDerivedType(tag: DW_TAG_member, name: "data_luma", scope: !4853, file: !889, line: 121, baseType: !4858, size: 8192, offset: 64)
!4858 = !DICompositeType(tag: DW_TAG_array_type, baseType: !192, size: 8192, elements: !545)
!4859 = !DIDerivedType(tag: DW_TAG_member, name: "data_r", scope: !4853, file: !889, line: 122, baseType: !4858, size: 8192, offset: 8256)
!4860 = !DIDerivedType(tag: DW_TAG_member, name: "data_g", scope: !4853, file: !889, line: 123, baseType: !4858, size: 8192, offset: 16448)
!4861 = !DIDerivedType(tag: DW_TAG_member, name: "data_b", scope: !4853, file: !889, line: 124, baseType: !4858, size: 8192, offset: 24640)
!4862 = !DIDerivedType(tag: DW_TAG_member, name: "data_a", scope: !4853, file: !889, line: 125, baseType: !4858, size: 8192, offset: 32832)
!4863 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !4853, file: !889, line: 126, baseType: !192, size: 32, offset: 41024)
!4864 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !4853, file: !889, line: 126, baseType: !192, size: 32, offset: 41056)
!4865 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !4853, file: !889, line: 127, baseType: !48, size: 16, offset: 41088)
!4866 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !4853, file: !889, line: 128, baseType: !48, size: 16, offset: 41104)
!4867 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !4853, file: !889, line: 129, baseType: !22, size: 32, offset: 41120)
!4868 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !4853, file: !889, line: 133, baseType: !4869, size: 128, offset: 41152)
!4869 = !DICompositeType(tag: DW_TAG_array_type, baseType: !192, size: 128, elements: !4870)
!4870 = !{!728, !728}
!4871 = !DIDerivedType(tag: DW_TAG_member, name: "waveform_1", scope: !4837, file: !889, line: 151, baseType: !630, size: 64, offset: 41792)
!4872 = !DIDerivedType(tag: DW_TAG_member, name: "waveform_2", scope: !4837, file: !889, line: 152, baseType: !630, size: 64, offset: 41856)
!4873 = !DIDerivedType(tag: DW_TAG_member, name: "waveform_3", scope: !4837, file: !889, line: 153, baseType: !630, size: 64, offset: 41920)
!4874 = !DIDerivedType(tag: DW_TAG_member, name: "vecscope", scope: !4837, file: !889, line: 154, baseType: !630, size: 64, offset: 41984)
!4875 = !DIDerivedType(tag: DW_TAG_member, name: "waveform_tot", scope: !4837, file: !889, line: 155, baseType: !22, size: 32, offset: 42048)
!4876 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !4837, file: !889, line: 156, baseType: !22, size: 32, offset: 42080)
!4877 = !DIDerivedType(tag: DW_TAG_member, name: "sample_line_hist", scope: !4826, file: !826, line: 723, baseType: !4853, size: 41280, offset: 42880)
!4878 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !4826, file: !826, line: 725, baseType: !259, size: 64, offset: 84160)
!4879 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !4826, file: !826, line: 727, baseType: !769, size: 64, offset: 84224)
!4880 = !DIDerivedType(tag: DW_TAG_member, name: "xof", scope: !4826, file: !826, line: 728, baseType: !192, size: 32, offset: 84288)
!4881 = !DIDerivedType(tag: DW_TAG_member, name: "yof", scope: !4826, file: !826, line: 728, baseType: !192, size: 32, offset: 84320)
!4882 = !DIDerivedType(tag: DW_TAG_member, name: "zoom", scope: !4826, file: !826, line: 729, baseType: !192, size: 32, offset: 84352)
!4883 = !DIDerivedType(tag: DW_TAG_member, name: "centx", scope: !4826, file: !826, line: 730, baseType: !192, size: 32, offset: 84384)
!4884 = !DIDerivedType(tag: DW_TAG_member, name: "centy", scope: !4826, file: !826, line: 730, baseType: !192, size: 32, offset: 84416)
!4885 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !4826, file: !826, line: 732, baseType: !14, size: 8, offset: 84448)
!4886 = !DIDerivedType(tag: DW_TAG_member, name: "pin", scope: !4826, file: !826, line: 733, baseType: !14, size: 8, offset: 84456)
!4887 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !4826, file: !826, line: 734, baseType: !48, size: 16, offset: 84464)
!4888 = !DIDerivedType(tag: DW_TAG_member, name: "curtile", scope: !4826, file: !826, line: 735, baseType: !48, size: 16, offset: 84480)
!4889 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4826, file: !826, line: 736, baseType: !48, size: 16, offset: 84496)
!4890 = !DIDerivedType(tag: DW_TAG_member, name: "dt_uv", scope: !4826, file: !826, line: 737, baseType: !14, size: 8, offset: 84512)
!4891 = !DIDerivedType(tag: DW_TAG_member, name: "sticky", scope: !4826, file: !826, line: 738, baseType: !14, size: 8, offset: 84520)
!4892 = !DIDerivedType(tag: DW_TAG_member, name: "dt_uvstretch", scope: !4826, file: !826, line: 739, baseType: !14, size: 8, offset: 84528)
!4893 = !DIDerivedType(tag: DW_TAG_member, name: "around", scope: !4826, file: !826, line: 740, baseType: !14, size: 8, offset: 84536)
!4894 = !DIDerivedType(tag: DW_TAG_member, name: "mask_info", scope: !4826, file: !826, line: 742, baseType: !4895, size: 128, offset: 84544)
!4895 = !DIDerivedType(tag: DW_TAG_typedef, name: "MaskSpaceInfo", file: !826, line: 554, baseType: !4896)
!4896 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MaskSpaceInfo", file: !826, line: 545, size: 128, elements: !4897)
!4897 = !{!4898, !4899, !4900, !4901, !4902}
!4898 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !4896, file: !826, line: 548, baseType: !1957, size: 64)
!4899 = !DIDerivedType(tag: DW_TAG_member, name: "draw_flag", scope: !4896, file: !826, line: 550, baseType: !14, size: 8, offset: 64)
!4900 = !DIDerivedType(tag: DW_TAG_member, name: "draw_type", scope: !4896, file: !826, line: 551, baseType: !14, size: 8, offset: 72)
!4901 = !DIDerivedType(tag: DW_TAG_member, name: "overlay_mode", scope: !4896, file: !826, line: 552, baseType: !14, size: 8, offset: 80)
!4902 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !4896, file: !826, line: 553, baseType: !2069, size: 40, offset: 88)
!4903 = !DILocalVariable(name: "sima", arg: 1, scope: !4821, file: !3, line: 604, type: !4824)
!4904 = !DILocation(line: 604, column: 44, scope: !4821)
!4905 = !DILocalVariable(name: "scene", arg: 2, scope: !4821, file: !3, line: 604, type: !3841)
!4906 = !DILocation(line: 604, column: 57, scope: !4821)
!4907 = !DILocalVariable(name: "obedit", arg: 3, scope: !4821, file: !3, line: 604, type: !3588)
!4908 = !DILocation(line: 604, column: 72, scope: !4821)
!4909 = !DILocation(line: 606, column: 6, scope: !4910)
!4910 = distinct !DILexicalBlock(scope: !4821, file: !3, line: 606, column: 6)
!4911 = !DILocation(line: 606, column: 11, scope: !4910)
!4912 = !DILocation(line: 606, column: 15, scope: !4910)
!4913 = !DILocation(line: 606, column: 21, scope: !4910)
!4914 = !DILocation(line: 606, column: 26, scope: !4910)
!4915 = !DILocation(line: 606, column: 6, scope: !4821)
!4916 = !DILocation(line: 607, column: 31, scope: !4917)
!4917 = distinct !DILexicalBlock(scope: !4910, file: !3, line: 606, column: 45)
!4918 = !DILocation(line: 607, column: 38, scope: !4917)
!4919 = !DILocation(line: 607, column: 3, scope: !4917)
!4920 = !DILocation(line: 608, column: 3, scope: !4917)
!4921 = !DILocation(line: 609, column: 3, scope: !4917)
!4922 = !DILocation(line: 610, column: 2, scope: !4917)
!4923 = !DILocation(line: 611, column: 1, scope: !4821)
!4924 = distinct !DISubprogram(name: "uv_poly_center", scope: !3, file: !3, line: 614, type: !4925, scopeLine: 615, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!4925 = !DISubroutineType(types: !4926)
!4926 = !{null, !3238, !630, !4165}
!4927 = !DILocalVariable(name: "f", arg: 1, scope: !4924, file: !3, line: 614, type: !3238)
!4928 = !DILocation(line: 614, column: 29, scope: !4924)
!4929 = !DILocalVariable(name: "r_cent", arg: 2, scope: !4924, file: !3, line: 614, type: !630)
!4930 = !DILocation(line: 614, column: 38, scope: !4924)
!4931 = !DILocalVariable(name: "cd_loop_uv_offset", arg: 3, scope: !4924, file: !3, line: 614, type: !4165)
!4932 = !DILocation(line: 614, column: 59, scope: !4924)
!4933 = !DILocalVariable(name: "l", scope: !4924, file: !3, line: 616, type: !3220)
!4934 = !DILocation(line: 616, column: 10, scope: !4924)
!4935 = !DILocalVariable(name: "luv", scope: !4924, file: !3, line: 617, type: !3240)
!4936 = !DILocation(line: 617, column: 11, scope: !4924)
!4937 = !DILocalVariable(name: "liter", scope: !4924, file: !3, line: 618, type: !3856)
!4938 = !DILocation(line: 618, column: 9, scope: !4924)
!4939 = !DILocation(line: 620, column: 10, scope: !4924)
!4940 = !DILocation(line: 620, column: 2, scope: !4924)
!4941 = !DILocation(line: 622, column: 2, scope: !4942)
!4942 = distinct !DILexicalBlock(scope: !4924, file: !3, line: 622, column: 2)
!4943 = !DILocation(line: 622, column: 2, scope: !4944)
!4944 = distinct !DILexicalBlock(scope: !4942, file: !3, line: 622, column: 2)
!4945 = !DILocation(line: 623, column: 9, scope: !4946)
!4946 = distinct !DILexicalBlock(scope: !4944, file: !3, line: 622, column: 48)
!4947 = !DILocation(line: 623, column: 7, scope: !4946)
!4948 = !DILocation(line: 624, column: 13, scope: !4946)
!4949 = !DILocation(line: 624, column: 21, scope: !4946)
!4950 = !DILocation(line: 624, column: 26, scope: !4946)
!4951 = !DILocation(line: 624, column: 3, scope: !4946)
!4952 = !DILocation(line: 625, column: 2, scope: !4946)
!4953 = distinct !{!4953, !4941, !4954}
!4954 = !DILocation(line: 625, column: 2, scope: !4942)
!4955 = !DILocation(line: 627, column: 12, scope: !4924)
!4956 = !DILocation(line: 627, column: 34, scope: !4924)
!4957 = !DILocation(line: 627, column: 37, scope: !4924)
!4958 = !DILocation(line: 627, column: 27, scope: !4924)
!4959 = !DILocation(line: 627, column: 25, scope: !4924)
!4960 = !DILocation(line: 627, column: 2, scope: !4924)
!4961 = !DILocation(line: 628, column: 1, scope: !4924)
!4962 = distinct !DISubprogram(name: "zero_v2", scope: !4963, file: !4963, line: 37, type: !4964, scopeLine: 38, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!4963 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_vector_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4964 = !DISubroutineType(types: !4965)
!4965 = !{null, !630}
!4966 = !DILocalVariable(name: "r", arg: 1, scope: !4962, file: !4963, line: 37, type: !630)
!4967 = !DILocation(line: 37, column: 28, scope: !4962)
!4968 = !DILocation(line: 39, column: 2, scope: !4962)
!4969 = !DILocation(line: 39, column: 7, scope: !4962)
!4970 = !DILocation(line: 40, column: 2, scope: !4962)
!4971 = !DILocation(line: 40, column: 7, scope: !4962)
!4972 = !DILocation(line: 41, column: 1, scope: !4962)
!4973 = distinct !DISubprogram(name: "add_v2_v2", scope: !4963, file: !4963, line: 284, type: !4974, scopeLine: 285, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!4974 = !DISubroutineType(types: !4975)
!4975 = !{null, !630, !4976}
!4976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4977, size: 64)
!4977 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !192)
!4978 = !DILocalVariable(name: "r", arg: 1, scope: !4973, file: !4963, line: 284, type: !630)
!4979 = !DILocation(line: 284, column: 30, scope: !4973)
!4980 = !DILocalVariable(name: "a", arg: 2, scope: !4973, file: !4963, line: 284, type: !4976)
!4981 = !DILocation(line: 284, column: 48, scope: !4973)
!4982 = !DILocation(line: 286, column: 10, scope: !4973)
!4983 = !DILocation(line: 286, column: 2, scope: !4973)
!4984 = !DILocation(line: 286, column: 7, scope: !4973)
!4985 = !DILocation(line: 287, column: 10, scope: !4973)
!4986 = !DILocation(line: 287, column: 2, scope: !4973)
!4987 = !DILocation(line: 287, column: 7, scope: !4973)
!4988 = !DILocation(line: 288, column: 1, scope: !4973)
!4989 = distinct !DISubprogram(name: "mul_v2_fl", scope: !4963, file: !4963, line: 380, type: !4990, scopeLine: 381, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!4990 = !DISubroutineType(types: !4991)
!4991 = !{null, !630, !192}
!4992 = !DILocalVariable(name: "r", arg: 1, scope: !4989, file: !4963, line: 380, type: !630)
!4993 = !DILocation(line: 380, column: 30, scope: !4989)
!4994 = !DILocalVariable(name: "f", arg: 2, scope: !4989, file: !4963, line: 380, type: !192)
!4995 = !DILocation(line: 380, column: 42, scope: !4989)
!4996 = !DILocation(line: 382, column: 10, scope: !4989)
!4997 = !DILocation(line: 382, column: 2, scope: !4989)
!4998 = !DILocation(line: 382, column: 7, scope: !4989)
!4999 = !DILocation(line: 383, column: 10, scope: !4989)
!5000 = !DILocation(line: 383, column: 2, scope: !4989)
!5001 = !DILocation(line: 383, column: 7, scope: !4989)
!5002 = !DILocation(line: 384, column: 1, scope: !4989)
!5003 = distinct !DISubprogram(name: "uv_poly_copy_aspect", scope: !3, file: !3, line: 630, type: !5004, scopeLine: 631, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!5004 = !DISubroutineType(types: !5005)
!5005 = !{null, !5006, !5006, !192, !192, !22}
!5006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !769, size: 64)
!5007 = !DILocalVariable(name: "uv_orig", arg: 1, scope: !5003, file: !3, line: 630, type: !5006)
!5008 = !DILocation(line: 630, column: 32, scope: !5003)
!5009 = !DILocalVariable(name: "uv", arg: 2, scope: !5003, file: !3, line: 630, type: !5006)
!5010 = !DILocation(line: 630, column: 52, scope: !5003)
!5011 = !DILocalVariable(name: "aspx", arg: 3, scope: !5003, file: !3, line: 630, type: !192)
!5012 = !DILocation(line: 630, column: 67, scope: !5003)
!5013 = !DILocalVariable(name: "aspy", arg: 4, scope: !5003, file: !3, line: 630, type: !192)
!5014 = !DILocation(line: 630, column: 79, scope: !5003)
!5015 = !DILocalVariable(name: "len", arg: 5, scope: !5003, file: !3, line: 630, type: !22)
!5016 = !DILocation(line: 630, column: 89, scope: !5003)
!5017 = !DILocalVariable(name: "i", scope: !5003, file: !3, line: 632, type: !22)
!5018 = !DILocation(line: 632, column: 6, scope: !5003)
!5019 = !DILocation(line: 633, column: 9, scope: !5020)
!5020 = distinct !DILexicalBlock(scope: !5003, file: !3, line: 633, column: 2)
!5021 = !DILocation(line: 633, column: 7, scope: !5020)
!5022 = !DILocation(line: 633, column: 14, scope: !5023)
!5023 = distinct !DILexicalBlock(scope: !5020, file: !3, line: 633, column: 2)
!5024 = !DILocation(line: 633, column: 18, scope: !5023)
!5025 = !DILocation(line: 633, column: 16, scope: !5023)
!5026 = !DILocation(line: 633, column: 2, scope: !5020)
!5027 = !DILocation(line: 634, column: 14, scope: !5028)
!5028 = distinct !DILexicalBlock(scope: !5023, file: !3, line: 633, column: 28)
!5029 = !DILocation(line: 634, column: 22, scope: !5028)
!5030 = !DILocation(line: 634, column: 30, scope: !5028)
!5031 = !DILocation(line: 634, column: 28, scope: !5028)
!5032 = !DILocation(line: 634, column: 3, scope: !5028)
!5033 = !DILocation(line: 634, column: 6, scope: !5028)
!5034 = !DILocation(line: 634, column: 12, scope: !5028)
!5035 = !DILocation(line: 635, column: 14, scope: !5028)
!5036 = !DILocation(line: 635, column: 22, scope: !5028)
!5037 = !DILocation(line: 635, column: 30, scope: !5028)
!5038 = !DILocation(line: 635, column: 28, scope: !5028)
!5039 = !DILocation(line: 635, column: 3, scope: !5028)
!5040 = !DILocation(line: 635, column: 6, scope: !5028)
!5041 = !DILocation(line: 635, column: 12, scope: !5028)
!5042 = !DILocation(line: 636, column: 2, scope: !5028)
!5043 = !DILocation(line: 633, column: 24, scope: !5023)
!5044 = !DILocation(line: 633, column: 2, scope: !5023)
!5045 = distinct !{!5045, !5026, !5046}
!5046 = !DILocation(line: 636, column: 2, scope: !5020)
!5047 = !DILocation(line: 637, column: 1, scope: !5003)
!5048 = distinct !DISubprogram(name: "ED_uvedit_minmax", scope: !3, file: !3, line: 639, type: !5049, scopeLine: 640, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!5049 = !DISubroutineType(types: !5050)
!5050 = !{!2013, !3841, !3164, !3588, !630, !630}
!5051 = !DILocalVariable(name: "scene", arg: 1, scope: !5048, file: !3, line: 639, type: !3841)
!5052 = !DILocation(line: 639, column: 30, scope: !5048)
!5053 = !DILocalVariable(name: "ima", arg: 2, scope: !5048, file: !3, line: 639, type: !3164)
!5054 = !DILocation(line: 639, column: 44, scope: !5048)
!5055 = !DILocalVariable(name: "obedit", arg: 3, scope: !5048, file: !3, line: 639, type: !3588)
!5056 = !DILocation(line: 639, column: 57, scope: !5048)
!5057 = !DILocalVariable(name: "r_min", arg: 4, scope: !5048, file: !3, line: 639, type: !630)
!5058 = !DILocation(line: 639, column: 71, scope: !5048)
!5059 = !DILocalVariable(name: "r_max", arg: 5, scope: !5048, file: !3, line: 639, type: !630)
!5060 = !DILocation(line: 639, column: 87, scope: !5048)
!5061 = !DILocalVariable(name: "em", scope: !5048, file: !3, line: 641, type: !3593)
!5062 = !DILocation(line: 641, column: 14, scope: !5048)
!5063 = !DILocation(line: 641, column: 44, scope: !5048)
!5064 = !DILocation(line: 641, column: 19, scope: !5048)
!5065 = !DILocalVariable(name: "efa", scope: !5048, file: !3, line: 642, type: !3238)
!5066 = !DILocation(line: 642, column: 10, scope: !5048)
!5067 = !DILocalVariable(name: "l", scope: !5048, file: !3, line: 643, type: !3220)
!5068 = !DILocation(line: 643, column: 10, scope: !5048)
!5069 = !DILocalVariable(name: "iter", scope: !5048, file: !3, line: 644, type: !3856)
!5070 = !DILocation(line: 644, column: 9, scope: !5048)
!5071 = !DILocalVariable(name: "liter", scope: !5048, file: !3, line: 644, type: !3856)
!5072 = !DILocation(line: 644, column: 15, scope: !5048)
!5073 = !DILocalVariable(name: "tf", scope: !5048, file: !3, line: 645, type: !3945)
!5074 = !DILocation(line: 645, column: 12, scope: !5048)
!5075 = !DILocalVariable(name: "luv", scope: !5048, file: !3, line: 646, type: !3240)
!5076 = !DILocation(line: 646, column: 11, scope: !5048)
!5077 = !DILocalVariable(name: "changed", scope: !5048, file: !3, line: 647, type: !2013)
!5078 = !DILocation(line: 647, column: 7, scope: !5048)
!5079 = !DILocalVariable(name: "cd_loop_uv_offset", scope: !5048, file: !3, line: 649, type: !4165)
!5080 = !DILocation(line: 649, column: 12, scope: !5048)
!5081 = !DILocation(line: 649, column: 56, scope: !5048)
!5082 = !DILocation(line: 649, column: 60, scope: !5048)
!5083 = !DILocation(line: 649, column: 64, scope: !5048)
!5084 = !DILocation(line: 649, column: 33, scope: !5048)
!5085 = !DILocalVariable(name: "cd_poly_tex_offset", scope: !5048, file: !3, line: 650, type: !4165)
!5086 = !DILocation(line: 650, column: 12, scope: !5048)
!5087 = !DILocation(line: 650, column: 56, scope: !5048)
!5088 = !DILocation(line: 650, column: 60, scope: !5048)
!5089 = !DILocation(line: 650, column: 64, scope: !5048)
!5090 = !DILocation(line: 650, column: 33, scope: !5048)
!5091 = !DILocation(line: 652, column: 2, scope: !5092)
!5092 = distinct !DILexicalBlock(scope: !5048, file: !3, line: 652, column: 2)
!5093 = !DILocation(line: 654, column: 2, scope: !5094)
!5094 = distinct !DILexicalBlock(scope: !5048, file: !3, line: 654, column: 2)
!5095 = !DILocation(line: 654, column: 2, scope: !5096)
!5096 = distinct !DILexicalBlock(scope: !5094, file: !3, line: 654, column: 2)
!5097 = !DILocation(line: 655, column: 8, scope: !5098)
!5098 = distinct !DILexicalBlock(scope: !5096, file: !3, line: 654, column: 54)
!5099 = !DILocation(line: 655, column: 6, scope: !5098)
!5100 = !DILocation(line: 656, column: 33, scope: !5101)
!5101 = distinct !DILexicalBlock(scope: !5098, file: !3, line: 656, column: 7)
!5102 = !DILocation(line: 656, column: 40, scope: !5101)
!5103 = !DILocation(line: 656, column: 45, scope: !5101)
!5104 = !DILocation(line: 656, column: 50, scope: !5101)
!5105 = !DILocation(line: 656, column: 8, scope: !5101)
!5106 = !DILocation(line: 656, column: 7, scope: !5098)
!5107 = !DILocation(line: 657, column: 4, scope: !5101)
!5108 = !DILocation(line: 659, column: 3, scope: !5109)
!5109 = distinct !DILexicalBlock(scope: !5098, file: !3, line: 659, column: 3)
!5110 = !DILocation(line: 659, column: 3, scope: !5111)
!5111 = distinct !DILexicalBlock(scope: !5109, file: !3, line: 659, column: 3)
!5112 = !DILocation(line: 660, column: 30, scope: !5113)
!5113 = distinct !DILexicalBlock(scope: !5114, file: !3, line: 660, column: 8)
!5114 = distinct !DILexicalBlock(scope: !5111, file: !3, line: 659, column: 51)
!5115 = !DILocation(line: 660, column: 37, scope: !5113)
!5116 = !DILocation(line: 660, column: 40, scope: !5113)
!5117 = !DILocation(line: 660, column: 8, scope: !5113)
!5118 = !DILocation(line: 660, column: 8, scope: !5114)
!5119 = !DILocation(line: 661, column: 11, scope: !5120)
!5120 = distinct !DILexicalBlock(scope: !5113, file: !3, line: 660, column: 60)
!5121 = !DILocation(line: 661, column: 9, scope: !5120)
!5122 = !DILocation(line: 662, column: 20, scope: !5120)
!5123 = !DILocation(line: 662, column: 27, scope: !5120)
!5124 = !DILocation(line: 662, column: 34, scope: !5120)
!5125 = !DILocation(line: 662, column: 39, scope: !5120)
!5126 = !DILocation(line: 662, column: 5, scope: !5120)
!5127 = !DILocation(line: 663, column: 13, scope: !5120)
!5128 = !DILocation(line: 664, column: 4, scope: !5120)
!5129 = !DILocation(line: 665, column: 3, scope: !5114)
!5130 = distinct !{!5130, !5108, !5131}
!5131 = !DILocation(line: 665, column: 3, scope: !5109)
!5132 = !DILocation(line: 666, column: 2, scope: !5098)
!5133 = distinct !{!5133, !5093, !5134}
!5134 = !DILocation(line: 666, column: 2, scope: !5094)
!5135 = !DILocation(line: 668, column: 9, scope: !5048)
!5136 = !DILocation(line: 668, column: 2, scope: !5048)
!5137 = distinct !DISubprogram(name: "uv_find_nearest_edge", scope: !3, file: !3, line: 726, type: !5138, scopeLine: 727, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!5138 = !DISubroutineType(types: !5139)
!5139 = !{null, !3841, !3164, !3593, !4976, !5140}
!5140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5141, size: 64)
!5141 = !DIDerivedType(tag: DW_TAG_typedef, name: "NearestHit", file: !5142, line: 64, baseType: !5143)
!5142 = !DIFile(filename: "blender/source/blender/editors/uvedit/uvedit_intern.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!5143 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "NearestHit", file: !5142, line: 58, size: 384, elements: !5144)
!5144 = !{!5145, !5146, !5147, !5148, !5149, !5150}
!5145 = !DIDerivedType(tag: DW_TAG_member, name: "efa", scope: !5143, file: !5142, line: 59, baseType: !3214, size: 64)
!5146 = !DIDerivedType(tag: DW_TAG_member, name: "tf", scope: !5143, file: !5142, line: 60, baseType: !3278, size: 64, offset: 64)
!5147 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !5143, file: !5142, line: 61, baseType: !3207, size: 64, offset: 128)
!5148 = !DIDerivedType(tag: DW_TAG_member, name: "luv", scope: !5143, file: !5142, line: 62, baseType: !3294, size: 64, offset: 192)
!5149 = !DIDerivedType(tag: DW_TAG_member, name: "luv_next", scope: !5143, file: !5142, line: 62, baseType: !3294, size: 64, offset: 256)
!5150 = !DIDerivedType(tag: DW_TAG_member, name: "lindex", scope: !5143, file: !5142, line: 63, baseType: !22, size: 32, offset: 320)
!5151 = !DILocalVariable(name: "scene", arg: 1, scope: !5137, file: !3, line: 726, type: !3841)
!5152 = !DILocation(line: 726, column: 34, scope: !5137)
!5153 = !DILocalVariable(name: "ima", arg: 2, scope: !5137, file: !3, line: 726, type: !3164)
!5154 = !DILocation(line: 726, column: 48, scope: !5137)
!5155 = !DILocalVariable(name: "em", arg: 3, scope: !5137, file: !3, line: 726, type: !3593)
!5156 = !DILocation(line: 726, column: 65, scope: !5137)
!5157 = !DILocalVariable(name: "co", arg: 4, scope: !5137, file: !3, line: 726, type: !4976)
!5158 = !DILocation(line: 726, column: 81, scope: !5137)
!5159 = !DILocalVariable(name: "hit", arg: 5, scope: !5137, file: !3, line: 726, type: !5140)
!5160 = !DILocation(line: 726, column: 100, scope: !5137)
!5161 = !DILocalVariable(name: "tf", scope: !5137, file: !3, line: 728, type: !3945)
!5162 = !DILocation(line: 728, column: 12, scope: !5137)
!5163 = !DILocalVariable(name: "efa", scope: !5137, file: !3, line: 729, type: !3238)
!5164 = !DILocation(line: 729, column: 10, scope: !5137)
!5165 = !DILocalVariable(name: "l", scope: !5137, file: !3, line: 730, type: !3220)
!5166 = !DILocation(line: 730, column: 10, scope: !5137)
!5167 = !DILocalVariable(name: "iter", scope: !5137, file: !3, line: 731, type: !3856)
!5168 = !DILocation(line: 731, column: 9, scope: !5137)
!5169 = !DILocalVariable(name: "liter", scope: !5137, file: !3, line: 731, type: !3856)
!5170 = !DILocation(line: 731, column: 15, scope: !5137)
!5171 = !DILocalVariable(name: "luv", scope: !5137, file: !3, line: 732, type: !3240)
!5172 = !DILocation(line: 732, column: 11, scope: !5137)
!5173 = !DILocalVariable(name: "luv_next", scope: !5137, file: !3, line: 732, type: !3240)
!5174 = !DILocation(line: 732, column: 17, scope: !5137)
!5175 = !DILocalVariable(name: "mindist_squared", scope: !5137, file: !3, line: 733, type: !192)
!5176 = !DILocation(line: 733, column: 8, scope: !5137)
!5177 = !DILocalVariable(name: "dist_squared", scope: !5137, file: !3, line: 733, type: !192)
!5178 = !DILocation(line: 733, column: 25, scope: !5137)
!5179 = !DILocalVariable(name: "i", scope: !5137, file: !3, line: 734, type: !22)
!5180 = !DILocation(line: 734, column: 6, scope: !5137)
!5181 = !DILocalVariable(name: "cd_loop_uv_offset", scope: !5137, file: !3, line: 736, type: !4165)
!5182 = !DILocation(line: 736, column: 12, scope: !5137)
!5183 = !DILocation(line: 736, column: 56, scope: !5137)
!5184 = !DILocation(line: 736, column: 60, scope: !5137)
!5185 = !DILocation(line: 736, column: 64, scope: !5137)
!5186 = !DILocation(line: 736, column: 33, scope: !5137)
!5187 = !DILocalVariable(name: "cd_poly_tex_offset", scope: !5137, file: !3, line: 737, type: !4165)
!5188 = !DILocation(line: 737, column: 12, scope: !5137)
!5189 = !DILocation(line: 737, column: 56, scope: !5137)
!5190 = !DILocation(line: 737, column: 60, scope: !5137)
!5191 = !DILocation(line: 737, column: 64, scope: !5137)
!5192 = !DILocation(line: 737, column: 33, scope: !5137)
!5193 = !DILocation(line: 739, column: 18, scope: !5137)
!5194 = !DILocation(line: 740, column: 9, scope: !5137)
!5195 = !DILocation(line: 740, column: 2, scope: !5137)
!5196 = !DILocation(line: 742, column: 28, scope: !5137)
!5197 = !DILocation(line: 742, column: 32, scope: !5137)
!5198 = !DILocation(line: 742, column: 2, scope: !5137)
!5199 = !DILocation(line: 744, column: 2, scope: !5200)
!5200 = distinct !DILexicalBlock(scope: !5137, file: !3, line: 744, column: 2)
!5201 = !DILocation(line: 744, column: 2, scope: !5202)
!5202 = distinct !DILexicalBlock(scope: !5200, file: !3, line: 744, column: 2)
!5203 = !DILocation(line: 745, column: 8, scope: !5204)
!5204 = distinct !DILexicalBlock(scope: !5202, file: !3, line: 744, column: 54)
!5205 = !DILocation(line: 745, column: 6, scope: !5204)
!5206 = !DILocation(line: 746, column: 33, scope: !5207)
!5207 = distinct !DILexicalBlock(scope: !5204, file: !3, line: 746, column: 7)
!5208 = !DILocation(line: 746, column: 40, scope: !5207)
!5209 = !DILocation(line: 746, column: 45, scope: !5207)
!5210 = !DILocation(line: 746, column: 50, scope: !5207)
!5211 = !DILocation(line: 746, column: 8, scope: !5207)
!5212 = !DILocation(line: 746, column: 7, scope: !5204)
!5213 = !DILocation(line: 747, column: 4, scope: !5207)
!5214 = !DILocation(line: 749, column: 3, scope: !5215)
!5215 = distinct !DILexicalBlock(scope: !5204, file: !3, line: 749, column: 3)
!5216 = !DILocation(line: 749, column: 3, scope: !5217)
!5217 = distinct !DILexicalBlock(scope: !5215, file: !3, line: 749, column: 3)
!5218 = !DILocation(line: 750, column: 15, scope: !5219)
!5219 = distinct !DILexicalBlock(scope: !5217, file: !3, line: 749, column: 60)
!5220 = !DILocation(line: 750, column: 13, scope: !5219)
!5221 = !DILocation(line: 751, column: 15, scope: !5219)
!5222 = !DILocation(line: 751, column: 13, scope: !5219)
!5223 = !DILocation(line: 753, column: 51, scope: !5219)
!5224 = !DILocation(line: 753, column: 55, scope: !5219)
!5225 = !DILocation(line: 753, column: 60, scope: !5219)
!5226 = !DILocation(line: 753, column: 64, scope: !5219)
!5227 = !DILocation(line: 753, column: 74, scope: !5219)
!5228 = !DILocation(line: 753, column: 19, scope: !5219)
!5229 = !DILocation(line: 753, column: 17, scope: !5219)
!5230 = !DILocation(line: 755, column: 8, scope: !5231)
!5231 = distinct !DILexicalBlock(scope: !5219, file: !3, line: 755, column: 8)
!5232 = !DILocation(line: 755, column: 23, scope: !5231)
!5233 = !DILocation(line: 755, column: 21, scope: !5231)
!5234 = !DILocation(line: 755, column: 8, scope: !5219)
!5235 = !DILocation(line: 756, column: 15, scope: !5236)
!5236 = distinct !DILexicalBlock(scope: !5231, file: !3, line: 755, column: 40)
!5237 = !DILocation(line: 756, column: 5, scope: !5236)
!5238 = !DILocation(line: 756, column: 10, scope: !5236)
!5239 = !DILocation(line: 756, column: 13, scope: !5236)
!5240 = !DILocation(line: 757, column: 16, scope: !5236)
!5241 = !DILocation(line: 757, column: 5, scope: !5236)
!5242 = !DILocation(line: 757, column: 10, scope: !5236)
!5243 = !DILocation(line: 757, column: 14, scope: !5236)
!5244 = !DILocation(line: 759, column: 14, scope: !5236)
!5245 = !DILocation(line: 759, column: 5, scope: !5236)
!5246 = !DILocation(line: 759, column: 10, scope: !5236)
!5247 = !DILocation(line: 759, column: 12, scope: !5236)
!5248 = !DILocation(line: 760, column: 16, scope: !5236)
!5249 = !DILocation(line: 760, column: 5, scope: !5236)
!5250 = !DILocation(line: 760, column: 10, scope: !5236)
!5251 = !DILocation(line: 760, column: 14, scope: !5236)
!5252 = !DILocation(line: 761, column: 21, scope: !5236)
!5253 = !DILocation(line: 761, column: 5, scope: !5236)
!5254 = !DILocation(line: 761, column: 10, scope: !5236)
!5255 = !DILocation(line: 761, column: 19, scope: !5236)
!5256 = !DILocation(line: 762, column: 19, scope: !5236)
!5257 = !DILocation(line: 762, column: 5, scope: !5236)
!5258 = !DILocation(line: 762, column: 10, scope: !5236)
!5259 = !DILocation(line: 762, column: 17, scope: !5236)
!5260 = !DILocation(line: 764, column: 23, scope: !5236)
!5261 = !DILocation(line: 764, column: 21, scope: !5236)
!5262 = !DILocation(line: 765, column: 4, scope: !5236)
!5263 = !DILocation(line: 766, column: 3, scope: !5219)
!5264 = distinct !{!5264, !5214, !5265}
!5265 = !DILocation(line: 766, column: 3, scope: !5215)
!5266 = !DILocation(line: 767, column: 2, scope: !5204)
!5267 = distinct !{!5267, !5199, !5268}
!5268 = !DILocation(line: 767, column: 2, scope: !5200)
!5269 = !DILocation(line: 768, column: 1, scope: !5137)
!5270 = distinct !DISubprogram(name: "uv_find_nearest_vert", scope: !3, file: !3, line: 816, type: !5271, scopeLine: 818, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!5271 = !DISubroutineType(types: !5272)
!5272 = !{null, !3841, !3164, !3593, !4976, !4976, !5140}
!5273 = !DILocalVariable(name: "scene", arg: 1, scope: !5270, file: !3, line: 816, type: !3841)
!5274 = !DILocation(line: 816, column: 34, scope: !5270)
!5275 = !DILocalVariable(name: "ima", arg: 2, scope: !5270, file: !3, line: 816, type: !3164)
!5276 = !DILocation(line: 816, column: 48, scope: !5270)
!5277 = !DILocalVariable(name: "em", arg: 3, scope: !5270, file: !3, line: 816, type: !3593)
!5278 = !DILocation(line: 816, column: 65, scope: !5270)
!5279 = !DILocalVariable(name: "co", arg: 4, scope: !5270, file: !3, line: 817, type: !4976)
!5280 = !DILocation(line: 817, column: 39, scope: !5270)
!5281 = !DILocalVariable(name: "penalty", arg: 5, scope: !5270, file: !3, line: 817, type: !4976)
!5282 = !DILocation(line: 817, column: 58, scope: !5270)
!5283 = !DILocalVariable(name: "hit", arg: 6, scope: !5270, file: !3, line: 817, type: !5140)
!5284 = !DILocation(line: 817, column: 82, scope: !5270)
!5285 = !DILocalVariable(name: "efa", scope: !5270, file: !3, line: 819, type: !3238)
!5286 = !DILocation(line: 819, column: 10, scope: !5270)
!5287 = !DILocalVariable(name: "l", scope: !5270, file: !3, line: 820, type: !3220)
!5288 = !DILocation(line: 820, column: 10, scope: !5270)
!5289 = !DILocalVariable(name: "iter", scope: !5270, file: !3, line: 821, type: !3856)
!5290 = !DILocation(line: 821, column: 9, scope: !5270)
!5291 = !DILocalVariable(name: "liter", scope: !5270, file: !3, line: 821, type: !3856)
!5292 = !DILocation(line: 821, column: 15, scope: !5270)
!5293 = !DILocalVariable(name: "tf", scope: !5270, file: !3, line: 822, type: !3945)
!5294 = !DILocation(line: 822, column: 12, scope: !5270)
!5295 = !DILocalVariable(name: "luv", scope: !5270, file: !3, line: 823, type: !3240)
!5296 = !DILocation(line: 823, column: 11, scope: !5270)
!5297 = !DILocalVariable(name: "mindist", scope: !5270, file: !3, line: 824, type: !192)
!5298 = !DILocation(line: 824, column: 8, scope: !5270)
!5299 = !DILocalVariable(name: "dist", scope: !5270, file: !3, line: 824, type: !192)
!5300 = !DILocation(line: 824, column: 17, scope: !5270)
!5301 = !DILocalVariable(name: "i", scope: !5270, file: !3, line: 825, type: !22)
!5302 = !DILocation(line: 825, column: 6, scope: !5270)
!5303 = !DILocalVariable(name: "cd_loop_uv_offset", scope: !5270, file: !3, line: 827, type: !4165)
!5304 = !DILocation(line: 827, column: 12, scope: !5270)
!5305 = !DILocation(line: 827, column: 56, scope: !5270)
!5306 = !DILocation(line: 827, column: 60, scope: !5270)
!5307 = !DILocation(line: 827, column: 64, scope: !5270)
!5308 = !DILocation(line: 827, column: 33, scope: !5270)
!5309 = !DILocalVariable(name: "cd_poly_tex_offset", scope: !5270, file: !3, line: 828, type: !4165)
!5310 = !DILocation(line: 828, column: 12, scope: !5270)
!5311 = !DILocation(line: 828, column: 56, scope: !5270)
!5312 = !DILocation(line: 828, column: 60, scope: !5270)
!5313 = !DILocation(line: 828, column: 64, scope: !5270)
!5314 = !DILocation(line: 828, column: 33, scope: !5270)
!5315 = !DILocation(line: 831, column: 23, scope: !5270)
!5316 = !DILocation(line: 831, column: 30, scope: !5270)
!5317 = !DILocation(line: 831, column: 35, scope: !5270)
!5318 = !DILocation(line: 831, column: 39, scope: !5270)
!5319 = !DILocation(line: 831, column: 43, scope: !5270)
!5320 = !DILocation(line: 831, column: 2, scope: !5270)
!5321 = !DILocation(line: 832, column: 2, scope: !5270)
!5322 = !DILocation(line: 832, column: 7, scope: !5270)
!5323 = !DILocation(line: 832, column: 9, scope: !5270)
!5324 = !DILocation(line: 833, column: 13, scope: !5270)
!5325 = !DILocation(line: 833, column: 18, scope: !5270)
!5326 = !DILocation(line: 833, column: 27, scope: !5270)
!5327 = !DILocation(line: 833, column: 2, scope: !5270)
!5328 = !DILocation(line: 833, column: 7, scope: !5270)
!5329 = !DILocation(line: 833, column: 11, scope: !5270)
!5330 = !DILocation(line: 835, column: 10, scope: !5270)
!5331 = !DILocation(line: 836, column: 9, scope: !5270)
!5332 = !DILocation(line: 836, column: 2, scope: !5270)
!5333 = !DILocation(line: 838, column: 28, scope: !5270)
!5334 = !DILocation(line: 838, column: 32, scope: !5270)
!5335 = !DILocation(line: 838, column: 2, scope: !5270)
!5336 = !DILocation(line: 840, column: 2, scope: !5337)
!5337 = distinct !DILexicalBlock(scope: !5270, file: !3, line: 840, column: 2)
!5338 = !DILocation(line: 840, column: 2, scope: !5339)
!5339 = distinct !DILexicalBlock(scope: !5337, file: !3, line: 840, column: 2)
!5340 = !DILocation(line: 841, column: 8, scope: !5341)
!5341 = distinct !DILexicalBlock(scope: !5339, file: !3, line: 840, column: 54)
!5342 = !DILocation(line: 841, column: 6, scope: !5341)
!5343 = !DILocation(line: 842, column: 33, scope: !5344)
!5344 = distinct !DILexicalBlock(scope: !5341, file: !3, line: 842, column: 7)
!5345 = !DILocation(line: 842, column: 40, scope: !5344)
!5346 = !DILocation(line: 842, column: 45, scope: !5344)
!5347 = !DILocation(line: 842, column: 50, scope: !5344)
!5348 = !DILocation(line: 842, column: 8, scope: !5344)
!5349 = !DILocation(line: 842, column: 7, scope: !5341)
!5350 = !DILocation(line: 843, column: 4, scope: !5344)
!5351 = !DILocation(line: 845, column: 3, scope: !5352)
!5352 = distinct !DILexicalBlock(scope: !5341, file: !3, line: 845, column: 3)
!5353 = !DILocation(line: 845, column: 3, scope: !5354)
!5354 = distinct !DILexicalBlock(scope: !5352, file: !3, line: 845, column: 3)
!5355 = !DILocation(line: 846, column: 10, scope: !5356)
!5356 = distinct !DILexicalBlock(scope: !5354, file: !3, line: 845, column: 60)
!5357 = !DILocation(line: 846, column: 8, scope: !5356)
!5358 = !DILocation(line: 847, column: 8, scope: !5359)
!5359 = distinct !DILexicalBlock(scope: !5356, file: !3, line: 847, column: 8)
!5360 = !DILocation(line: 847, column: 16, scope: !5359)
!5361 = !DILocation(line: 847, column: 41, scope: !5359)
!5362 = !DILocation(line: 847, column: 48, scope: !5359)
!5363 = !DILocation(line: 847, column: 51, scope: !5359)
!5364 = !DILocation(line: 847, column: 19, scope: !5359)
!5365 = !DILocation(line: 847, column: 8, scope: !5356)
!5366 = !DILocation(line: 848, column: 31, scope: !5359)
!5367 = !DILocation(line: 848, column: 35, scope: !5359)
!5368 = !DILocation(line: 848, column: 40, scope: !5359)
!5369 = !DILocation(line: 848, column: 12, scope: !5359)
!5370 = !DILocation(line: 848, column: 63, scope: !5359)
!5371 = !DILocation(line: 848, column: 46, scope: !5359)
!5372 = !DILocation(line: 848, column: 44, scope: !5359)
!5373 = !DILocation(line: 848, column: 10, scope: !5359)
!5374 = !DILocation(line: 848, column: 5, scope: !5359)
!5375 = !DILocation(line: 850, column: 31, scope: !5359)
!5376 = !DILocation(line: 850, column: 35, scope: !5359)
!5377 = !DILocation(line: 850, column: 40, scope: !5359)
!5378 = !DILocation(line: 850, column: 12, scope: !5359)
!5379 = !DILocation(line: 850, column: 10, scope: !5359)
!5380 = !DILocation(line: 852, column: 8, scope: !5381)
!5381 = distinct !DILexicalBlock(scope: !5356, file: !3, line: 852, column: 8)
!5382 = !DILocation(line: 852, column: 16, scope: !5381)
!5383 = !DILocation(line: 852, column: 13, scope: !5381)
!5384 = !DILocation(line: 852, column: 8, scope: !5356)
!5385 = !DILocation(line: 853, column: 9, scope: !5386)
!5386 = distinct !DILexicalBlock(scope: !5387, file: !3, line: 853, column: 9)
!5387 = distinct !DILexicalBlock(scope: !5381, file: !3, line: 852, column: 25)
!5388 = !DILocation(line: 853, column: 17, scope: !5386)
!5389 = !DILocation(line: 853, column: 14, scope: !5386)
!5390 = !DILocation(line: 853, column: 9, scope: !5387)
!5391 = !DILocation(line: 854, column: 30, scope: !5392)
!5392 = distinct !DILexicalBlock(scope: !5393, file: !3, line: 854, column: 10)
!5393 = distinct !DILexicalBlock(scope: !5386, file: !3, line: 853, column: 26)
!5394 = !DILocation(line: 854, column: 33, scope: !5392)
!5395 = !DILocation(line: 854, column: 37, scope: !5392)
!5396 = !DILocation(line: 854, column: 11, scope: !5392)
!5397 = !DILocation(line: 854, column: 10, scope: !5393)
!5398 = !DILocation(line: 855, column: 7, scope: !5399)
!5399 = distinct !DILexicalBlock(scope: !5392, file: !3, line: 854, column: 57)
!5400 = !DILocation(line: 857, column: 5, scope: !5393)
!5401 = !DILocation(line: 859, column: 15, scope: !5387)
!5402 = !DILocation(line: 859, column: 13, scope: !5387)
!5403 = !DILocation(line: 861, column: 14, scope: !5387)
!5404 = !DILocation(line: 861, column: 5, scope: !5387)
!5405 = !DILocation(line: 861, column: 10, scope: !5387)
!5406 = !DILocation(line: 861, column: 12, scope: !5387)
!5407 = !DILocation(line: 862, column: 16, scope: !5387)
!5408 = !DILocation(line: 862, column: 5, scope: !5387)
!5409 = !DILocation(line: 862, column: 10, scope: !5387)
!5410 = !DILocation(line: 862, column: 14, scope: !5387)
!5411 = !DILocation(line: 863, column: 21, scope: !5387)
!5412 = !DILocation(line: 863, column: 5, scope: !5387)
!5413 = !DILocation(line: 863, column: 10, scope: !5387)
!5414 = !DILocation(line: 863, column: 19, scope: !5387)
!5415 = !DILocation(line: 864, column: 15, scope: !5387)
!5416 = !DILocation(line: 864, column: 5, scope: !5387)
!5417 = !DILocation(line: 864, column: 10, scope: !5387)
!5418 = !DILocation(line: 864, column: 13, scope: !5387)
!5419 = !DILocation(line: 865, column: 16, scope: !5387)
!5420 = !DILocation(line: 865, column: 5, scope: !5387)
!5421 = !DILocation(line: 865, column: 10, scope: !5387)
!5422 = !DILocation(line: 865, column: 14, scope: !5387)
!5423 = !DILocation(line: 866, column: 19, scope: !5387)
!5424 = !DILocation(line: 866, column: 5, scope: !5387)
!5425 = !DILocation(line: 866, column: 10, scope: !5387)
!5426 = !DILocation(line: 866, column: 17, scope: !5387)
!5427 = !DILocation(line: 867, column: 4, scope: !5387)
!5428 = !DILocation(line: 868, column: 3, scope: !5356)
!5429 = distinct !{!5429, !5351, !5430}
!5430 = !DILocation(line: 868, column: 3, scope: !5352)
!5431 = !DILocation(line: 869, column: 2, scope: !5341)
!5432 = distinct !{!5432, !5336, !5433}
!5433 = !DILocation(line: 869, column: 2, scope: !5337)
!5434 = !DILocation(line: 870, column: 1, scope: !5270)
!5435 = distinct !DISubprogram(name: "len_manhattan_v2v2", scope: !4963, file: !4963, line: 735, type: !5436, scopeLine: 736, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!5436 = !DISubroutineType(types: !5437)
!5437 = !{!192, !4976, !4976}
!5438 = !DILocalVariable(name: "a", arg: 1, scope: !5435, file: !4963, line: 735, type: !4976)
!5439 = !DILocation(line: 735, column: 46, scope: !5435)
!5440 = !DILocalVariable(name: "b", arg: 2, scope: !5435, file: !4963, line: 735, type: !4976)
!5441 = !DILocation(line: 735, column: 64, scope: !5435)
!5442 = !DILocalVariable(name: "d", scope: !5435, file: !4963, line: 737, type: !769)
!5443 = !DILocation(line: 737, column: 8, scope: !5435)
!5444 = !DILocation(line: 739, column: 14, scope: !5435)
!5445 = !DILocation(line: 739, column: 17, scope: !5435)
!5446 = !DILocation(line: 739, column: 20, scope: !5435)
!5447 = !DILocation(line: 739, column: 2, scope: !5435)
!5448 = !DILocation(line: 740, column: 26, scope: !5435)
!5449 = !DILocation(line: 740, column: 9, scope: !5435)
!5450 = !DILocation(line: 740, column: 2, scope: !5435)
!5451 = distinct !DISubprogram(name: "len_manhattan_v2", scope: !4963, file: !4963, line: 676, type: !5452, scopeLine: 677, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!5452 = !DISubroutineType(types: !5453)
!5453 = !{!192, !4976}
!5454 = !DILocalVariable(name: "v", arg: 1, scope: !5451, file: !4963, line: 676, type: !4976)
!5455 = !DILocation(line: 676, column: 44, scope: !5451)
!5456 = !DILocation(line: 678, column: 15, scope: !5451)
!5457 = !DILocation(line: 678, column: 9, scope: !5451)
!5458 = !DILocation(line: 678, column: 29, scope: !5451)
!5459 = !DILocation(line: 678, column: 23, scope: !5451)
!5460 = !DILocation(line: 678, column: 21, scope: !5451)
!5461 = !DILocation(line: 678, column: 2, scope: !5451)
!5462 = distinct !DISubprogram(name: "uv_nearest_between", scope: !3, file: !3, line: 805, type: !5463, scopeLine: 807, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!5463 = !DISubroutineType(types: !5464)
!5464 = !{!2013, !5465, !4976, !4165}
!5465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5466, size: 64)
!5466 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3221)
!5467 = !DILocalVariable(name: "l", arg: 1, scope: !5462, file: !3, line: 805, type: !5465)
!5468 = !DILocation(line: 805, column: 46, scope: !5462)
!5469 = !DILocalVariable(name: "co", arg: 2, scope: !5462, file: !3, line: 805, type: !4976)
!5470 = !DILocation(line: 805, column: 61, scope: !5462)
!5471 = !DILocalVariable(name: "cd_loop_uv_offset", arg: 3, scope: !5462, file: !3, line: 806, type: !4165)
!5472 = !DILocation(line: 806, column: 42, scope: !5462)
!5473 = !DILocalVariable(name: "uv_prev", scope: !5462, file: !3, line: 808, type: !4976)
!5474 = !DILocation(line: 808, column: 15, scope: !5462)
!5475 = !DILocation(line: 808, column: 37, scope: !5462)
!5476 = !DILocation(line: 808, column: 26, scope: !5462)
!5477 = !DILocation(line: 808, column: 89, scope: !5462)
!5478 = !DILocation(line: 808, column: 25, scope: !5462)
!5479 = !DILocalVariable(name: "uv_curr", scope: !5462, file: !3, line: 809, type: !4976)
!5480 = !DILocation(line: 809, column: 15, scope: !5462)
!5481 = !DILocation(line: 809, column: 37, scope: !5462)
!5482 = !DILocation(line: 809, column: 26, scope: !5462)
!5483 = !DILocation(line: 809, column: 89, scope: !5462)
!5484 = !DILocation(line: 809, column: 25, scope: !5462)
!5485 = !DILocalVariable(name: "uv_next", scope: !5462, file: !3, line: 810, type: !4976)
!5486 = !DILocation(line: 810, column: 15, scope: !5462)
!5487 = !DILocation(line: 810, column: 37, scope: !5462)
!5488 = !DILocation(line: 810, column: 26, scope: !5462)
!5489 = !DILocation(line: 810, column: 89, scope: !5462)
!5490 = !DILocation(line: 810, column: 25, scope: !5462)
!5491 = !DILocation(line: 812, column: 30, scope: !5462)
!5492 = !DILocation(line: 812, column: 39, scope: !5462)
!5493 = !DILocation(line: 812, column: 48, scope: !5462)
!5494 = !DILocation(line: 812, column: 11, scope: !5462)
!5495 = !DILocation(line: 812, column: 52, scope: !5462)
!5496 = !DILocation(line: 812, column: 61, scope: !5462)
!5497 = !DILocation(line: 813, column: 30, scope: !5462)
!5498 = !DILocation(line: 813, column: 39, scope: !5462)
!5499 = !DILocation(line: 813, column: 48, scope: !5462)
!5500 = !DILocation(line: 813, column: 11, scope: !5462)
!5501 = !DILocation(line: 813, column: 52, scope: !5462)
!5502 = !DILocation(line: 0, scope: !5462)
!5503 = !DILocation(line: 812, column: 9, scope: !5462)
!5504 = !DILocation(line: 812, column: 2, scope: !5462)
!5505 = distinct !DISubprogram(name: "ED_uvedit_nearest_uv", scope: !3, file: !3, line: 872, type: !5506, scopeLine: 873, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!5506 = !DISubroutineType(types: !5507)
!5507 = !{!2013, !3841, !3588, !3164, !4976, !630}
!5508 = !DILocalVariable(name: "scene", arg: 1, scope: !5505, file: !3, line: 872, type: !3841)
!5509 = !DILocation(line: 872, column: 34, scope: !5505)
!5510 = !DILocalVariable(name: "obedit", arg: 2, scope: !5505, file: !3, line: 872, type: !3588)
!5511 = !DILocation(line: 872, column: 49, scope: !5505)
!5512 = !DILocalVariable(name: "ima", arg: 3, scope: !5505, file: !3, line: 872, type: !3164)
!5513 = !DILocation(line: 872, column: 64, scope: !5505)
!5514 = !DILocalVariable(name: "co", arg: 4, scope: !5505, file: !3, line: 872, type: !4976)
!5515 = !DILocation(line: 872, column: 81, scope: !5505)
!5516 = !DILocalVariable(name: "r_uv", arg: 5, scope: !5505, file: !3, line: 872, type: !630)
!5517 = !DILocation(line: 872, column: 94, scope: !5505)
!5518 = !DILocalVariable(name: "em", scope: !5505, file: !3, line: 874, type: !3593)
!5519 = !DILocation(line: 874, column: 14, scope: !5505)
!5520 = !DILocation(line: 874, column: 44, scope: !5505)
!5521 = !DILocation(line: 874, column: 19, scope: !5505)
!5522 = !DILocalVariable(name: "efa", scope: !5505, file: !3, line: 875, type: !3238)
!5523 = !DILocation(line: 875, column: 10, scope: !5505)
!5524 = !DILocalVariable(name: "l", scope: !5505, file: !3, line: 876, type: !3220)
!5525 = !DILocation(line: 876, column: 10, scope: !5505)
!5526 = !DILocalVariable(name: "iter", scope: !5505, file: !3, line: 877, type: !3856)
!5527 = !DILocation(line: 877, column: 9, scope: !5505)
!5528 = !DILocalVariable(name: "liter", scope: !5505, file: !3, line: 877, type: !3856)
!5529 = !DILocation(line: 877, column: 15, scope: !5505)
!5530 = !DILocalVariable(name: "tf", scope: !5505, file: !3, line: 878, type: !3945)
!5531 = !DILocation(line: 878, column: 12, scope: !5505)
!5532 = !DILocalVariable(name: "luv", scope: !5505, file: !3, line: 879, type: !3240)
!5533 = !DILocation(line: 879, column: 11, scope: !5505)
!5534 = !DILocalVariable(name: "mindist", scope: !5505, file: !3, line: 880, type: !192)
!5535 = !DILocation(line: 880, column: 8, scope: !5505)
!5536 = !DILocalVariable(name: "dist", scope: !5505, file: !3, line: 880, type: !192)
!5537 = !DILocation(line: 880, column: 17, scope: !5505)
!5538 = !DILocalVariable(name: "found", scope: !5505, file: !3, line: 881, type: !2013)
!5539 = !DILocation(line: 881, column: 7, scope: !5505)
!5540 = !DILocalVariable(name: "cd_loop_uv_offset", scope: !5505, file: !3, line: 883, type: !4165)
!5541 = !DILocation(line: 883, column: 12, scope: !5505)
!5542 = !DILocation(line: 883, column: 56, scope: !5505)
!5543 = !DILocation(line: 883, column: 60, scope: !5505)
!5544 = !DILocation(line: 883, column: 64, scope: !5505)
!5545 = !DILocation(line: 883, column: 33, scope: !5505)
!5546 = !DILocalVariable(name: "cd_poly_tex_offset", scope: !5505, file: !3, line: 884, type: !4165)
!5547 = !DILocation(line: 884, column: 12, scope: !5505)
!5548 = !DILocation(line: 884, column: 56, scope: !5505)
!5549 = !DILocation(line: 884, column: 60, scope: !5505)
!5550 = !DILocation(line: 884, column: 64, scope: !5505)
!5551 = !DILocation(line: 884, column: 33, scope: !5505)
!5552 = !DILocation(line: 886, column: 10, scope: !5505)
!5553 = !DILocation(line: 887, column: 13, scope: !5505)
!5554 = !DILocation(line: 887, column: 19, scope: !5505)
!5555 = !DILocation(line: 887, column: 2, scope: !5505)
!5556 = !DILocation(line: 889, column: 2, scope: !5557)
!5557 = distinct !DILexicalBlock(scope: !5505, file: !3, line: 889, column: 2)
!5558 = !DILocation(line: 889, column: 2, scope: !5559)
!5559 = distinct !DILexicalBlock(scope: !5557, file: !3, line: 889, column: 2)
!5560 = !DILocation(line: 890, column: 8, scope: !5561)
!5561 = distinct !DILexicalBlock(scope: !5559, file: !3, line: 889, column: 54)
!5562 = !DILocation(line: 890, column: 6, scope: !5561)
!5563 = !DILocation(line: 891, column: 33, scope: !5564)
!5564 = distinct !DILexicalBlock(scope: !5561, file: !3, line: 891, column: 7)
!5565 = !DILocation(line: 891, column: 40, scope: !5564)
!5566 = !DILocation(line: 891, column: 45, scope: !5564)
!5567 = !DILocation(line: 891, column: 50, scope: !5564)
!5568 = !DILocation(line: 891, column: 8, scope: !5564)
!5569 = !DILocation(line: 891, column: 7, scope: !5561)
!5570 = !DILocation(line: 892, column: 4, scope: !5564)
!5571 = !DILocation(line: 894, column: 3, scope: !5572)
!5572 = distinct !DILexicalBlock(scope: !5561, file: !3, line: 894, column: 3)
!5573 = !DILocation(line: 894, column: 3, scope: !5574)
!5574 = distinct !DILexicalBlock(scope: !5572, file: !3, line: 894, column: 3)
!5575 = !DILocation(line: 895, column: 10, scope: !5576)
!5576 = distinct !DILexicalBlock(scope: !5574, file: !3, line: 894, column: 51)
!5577 = !DILocation(line: 895, column: 8, scope: !5576)
!5578 = !DILocation(line: 896, column: 30, scope: !5576)
!5579 = !DILocation(line: 896, column: 34, scope: !5576)
!5580 = !DILocation(line: 896, column: 39, scope: !5576)
!5581 = !DILocation(line: 896, column: 11, scope: !5576)
!5582 = !DILocation(line: 896, column: 9, scope: !5576)
!5583 = !DILocation(line: 898, column: 8, scope: !5584)
!5584 = distinct !DILexicalBlock(scope: !5576, file: !3, line: 898, column: 8)
!5585 = !DILocation(line: 898, column: 16, scope: !5584)
!5586 = !DILocation(line: 898, column: 13, scope: !5584)
!5587 = !DILocation(line: 898, column: 8, scope: !5576)
!5588 = !DILocation(line: 899, column: 15, scope: !5589)
!5589 = distinct !DILexicalBlock(scope: !5584, file: !3, line: 898, column: 25)
!5590 = !DILocation(line: 899, column: 13, scope: !5589)
!5591 = !DILocation(line: 901, column: 16, scope: !5589)
!5592 = !DILocation(line: 901, column: 22, scope: !5589)
!5593 = !DILocation(line: 901, column: 27, scope: !5589)
!5594 = !DILocation(line: 901, column: 5, scope: !5589)
!5595 = !DILocation(line: 902, column: 11, scope: !5589)
!5596 = !DILocation(line: 903, column: 4, scope: !5589)
!5597 = !DILocation(line: 904, column: 3, scope: !5576)
!5598 = distinct !{!5598, !5571, !5599}
!5599 = !DILocation(line: 904, column: 3, scope: !5572)
!5600 = !DILocation(line: 905, column: 2, scope: !5561)
!5601 = distinct !{!5601, !5556, !5602}
!5602 = !DILocation(line: 905, column: 2, scope: !5557)
!5603 = !DILocation(line: 907, column: 9, scope: !5505)
!5604 = !DILocation(line: 907, column: 2, scope: !5505)
!5605 = distinct !DISubprogram(name: "copy_v2_v2", scope: !4963, file: !4963, line: 58, type: !4974, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!5606 = !DILocalVariable(name: "r", arg: 1, scope: !5605, file: !4963, line: 58, type: !630)
!5607 = !DILocation(line: 58, column: 31, scope: !5605)
!5608 = !DILocalVariable(name: "a", arg: 2, scope: !5605, file: !4963, line: 58, type: !4976)
!5609 = !DILocation(line: 58, column: 49, scope: !5605)
!5610 = !DILocation(line: 60, column: 9, scope: !5605)
!5611 = !DILocation(line: 60, column: 2, scope: !5605)
!5612 = !DILocation(line: 60, column: 7, scope: !5605)
!5613 = !DILocation(line: 61, column: 9, scope: !5605)
!5614 = !DILocation(line: 61, column: 2, scope: !5605)
!5615 = !DILocation(line: 61, column: 7, scope: !5605)
!5616 = !DILocation(line: 62, column: 1, scope: !5605)
!5617 = distinct !DISubprogram(name: "ED_operatortypes_uvedit", scope: !3, file: !3, line: 4133, type: !5618, scopeLine: 4134, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!5618 = !DISubroutineType(types: !5619)
!5619 = !{null}
!5620 = !DILocation(line: 4135, column: 2, scope: !5617)
!5621 = !DILocation(line: 4136, column: 2, scope: !5617)
!5622 = !DILocation(line: 4137, column: 2, scope: !5617)
!5623 = !DILocation(line: 4138, column: 2, scope: !5617)
!5624 = !DILocation(line: 4139, column: 2, scope: !5617)
!5625 = !DILocation(line: 4140, column: 2, scope: !5617)
!5626 = !DILocation(line: 4141, column: 2, scope: !5617)
!5627 = !DILocation(line: 4142, column: 2, scope: !5617)
!5628 = !DILocation(line: 4143, column: 2, scope: !5617)
!5629 = !DILocation(line: 4144, column: 2, scope: !5617)
!5630 = !DILocation(line: 4145, column: 2, scope: !5617)
!5631 = !DILocation(line: 4146, column: 2, scope: !5617)
!5632 = !DILocation(line: 4148, column: 2, scope: !5617)
!5633 = !DILocation(line: 4149, column: 2, scope: !5617)
!5634 = !DILocation(line: 4151, column: 2, scope: !5617)
!5635 = !DILocation(line: 4153, column: 2, scope: !5617)
!5636 = !DILocation(line: 4155, column: 2, scope: !5617)
!5637 = !DILocation(line: 4156, column: 2, scope: !5617)
!5638 = !DILocation(line: 4157, column: 2, scope: !5617)
!5639 = !DILocation(line: 4158, column: 2, scope: !5617)
!5640 = !DILocation(line: 4159, column: 2, scope: !5617)
!5641 = !DILocation(line: 4161, column: 2, scope: !5617)
!5642 = !DILocation(line: 4162, column: 2, scope: !5617)
!5643 = !DILocation(line: 4163, column: 2, scope: !5617)
!5644 = !DILocation(line: 4164, column: 2, scope: !5617)
!5645 = !DILocation(line: 4165, column: 2, scope: !5617)
!5646 = !DILocation(line: 4166, column: 2, scope: !5617)
!5647 = !DILocation(line: 4167, column: 2, scope: !5617)
!5648 = !DILocation(line: 4168, column: 2, scope: !5617)
!5649 = !DILocation(line: 4169, column: 2, scope: !5617)
!5650 = !DILocation(line: 4171, column: 2, scope: !5617)
!5651 = !DILocation(line: 4172, column: 2, scope: !5617)
!5652 = !DILocation(line: 4174, column: 2, scope: !5617)
!5653 = !DILocation(line: 4175, column: 2, scope: !5617)
!5654 = !DILocation(line: 4176, column: 1, scope: !5617)
!5655 = distinct !DISubprogram(name: "UV_OT_select_all", scope: !3, file: !3, line: 1961, type: !4, scopeLine: 1962, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!5656 = !DILocalVariable(name: "ot", arg: 1, scope: !5655, file: !3, line: 1961, type: !6)
!5657 = !DILocation(line: 1961, column: 46, scope: !5655)
!5658 = !DILocation(line: 1964, column: 2, scope: !5655)
!5659 = !DILocation(line: 1964, column: 6, scope: !5655)
!5660 = !DILocation(line: 1964, column: 11, scope: !5655)
!5661 = !DILocation(line: 1965, column: 2, scope: !5655)
!5662 = !DILocation(line: 1965, column: 6, scope: !5655)
!5663 = !DILocation(line: 1965, column: 18, scope: !5655)
!5664 = !DILocation(line: 1966, column: 2, scope: !5655)
!5665 = !DILocation(line: 1966, column: 6, scope: !5655)
!5666 = !DILocation(line: 1966, column: 13, scope: !5655)
!5667 = !DILocation(line: 1967, column: 2, scope: !5655)
!5668 = !DILocation(line: 1967, column: 6, scope: !5655)
!5669 = !DILocation(line: 1967, column: 11, scope: !5655)
!5670 = !DILocation(line: 1970, column: 2, scope: !5655)
!5671 = !DILocation(line: 1970, column: 6, scope: !5655)
!5672 = !DILocation(line: 1970, column: 11, scope: !5655)
!5673 = !DILocation(line: 1971, column: 2, scope: !5655)
!5674 = !DILocation(line: 1971, column: 6, scope: !5655)
!5675 = !DILocation(line: 1971, column: 11, scope: !5655)
!5676 = !DILocation(line: 1973, column: 36, scope: !5655)
!5677 = !DILocation(line: 1973, column: 2, scope: !5655)
!5678 = !DILocation(line: 1974, column: 1, scope: !5655)
!5679 = distinct !DISubprogram(name: "UV_OT_select", scope: !3, file: !3, line: 2283, type: !4, scopeLine: 2284, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!5680 = !DILocalVariable(name: "ot", arg: 1, scope: !5679, file: !3, line: 2283, type: !6)
!5681 = !DILocation(line: 2283, column: 42, scope: !5679)
!5682 = !DILocation(line: 2286, column: 2, scope: !5679)
!5683 = !DILocation(line: 2286, column: 6, scope: !5679)
!5684 = !DILocation(line: 2286, column: 11, scope: !5679)
!5685 = !DILocation(line: 2287, column: 2, scope: !5679)
!5686 = !DILocation(line: 2287, column: 6, scope: !5679)
!5687 = !DILocation(line: 2287, column: 18, scope: !5679)
!5688 = !DILocation(line: 2288, column: 2, scope: !5679)
!5689 = !DILocation(line: 2288, column: 6, scope: !5679)
!5690 = !DILocation(line: 2288, column: 13, scope: !5679)
!5691 = !DILocation(line: 2289, column: 2, scope: !5679)
!5692 = !DILocation(line: 2289, column: 6, scope: !5679)
!5693 = !DILocation(line: 2289, column: 11, scope: !5679)
!5694 = !DILocation(line: 2292, column: 2, scope: !5679)
!5695 = !DILocation(line: 2292, column: 6, scope: !5679)
!5696 = !DILocation(line: 2292, column: 11, scope: !5679)
!5697 = !DILocation(line: 2293, column: 2, scope: !5679)
!5698 = !DILocation(line: 2293, column: 6, scope: !5679)
!5699 = !DILocation(line: 2293, column: 13, scope: !5679)
!5700 = !DILocation(line: 2294, column: 2, scope: !5679)
!5701 = !DILocation(line: 2294, column: 6, scope: !5679)
!5702 = !DILocation(line: 2294, column: 11, scope: !5679)
!5703 = !DILocation(line: 2297, column: 18, scope: !5679)
!5704 = !DILocation(line: 2297, column: 22, scope: !5679)
!5705 = !DILocation(line: 2297, column: 2, scope: !5679)
!5706 = !DILocation(line: 2299, column: 23, scope: !5679)
!5707 = !DILocation(line: 2299, column: 27, scope: !5679)
!5708 = !DILocation(line: 2299, column: 2, scope: !5679)
!5709 = !DILocation(line: 2301, column: 1, scope: !5679)
!5710 = distinct !DISubprogram(name: "UV_OT_select_loop", scope: !3, file: !3, line: 2328, type: !4, scopeLine: 2329, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!5711 = !DILocalVariable(name: "ot", arg: 1, scope: !5710, file: !3, line: 2328, type: !6)
!5712 = !DILocation(line: 2328, column: 47, scope: !5710)
!5713 = !DILocation(line: 2331, column: 2, scope: !5710)
!5714 = !DILocation(line: 2331, column: 6, scope: !5710)
!5715 = !DILocation(line: 2331, column: 11, scope: !5710)
!5716 = !DILocation(line: 2332, column: 2, scope: !5710)
!5717 = !DILocation(line: 2332, column: 6, scope: !5710)
!5718 = !DILocation(line: 2332, column: 18, scope: !5710)
!5719 = !DILocation(line: 2333, column: 2, scope: !5710)
!5720 = !DILocation(line: 2333, column: 6, scope: !5710)
!5721 = !DILocation(line: 2333, column: 13, scope: !5710)
!5722 = !DILocation(line: 2334, column: 2, scope: !5710)
!5723 = !DILocation(line: 2334, column: 6, scope: !5710)
!5724 = !DILocation(line: 2334, column: 11, scope: !5710)
!5725 = !DILocation(line: 2337, column: 2, scope: !5710)
!5726 = !DILocation(line: 2337, column: 6, scope: !5710)
!5727 = !DILocation(line: 2337, column: 11, scope: !5710)
!5728 = !DILocation(line: 2338, column: 2, scope: !5710)
!5729 = !DILocation(line: 2338, column: 6, scope: !5710)
!5730 = !DILocation(line: 2338, column: 13, scope: !5710)
!5731 = !DILocation(line: 2339, column: 2, scope: !5710)
!5732 = !DILocation(line: 2339, column: 6, scope: !5710)
!5733 = !DILocation(line: 2339, column: 11, scope: !5710)
!5734 = !DILocation(line: 2342, column: 18, scope: !5710)
!5735 = !DILocation(line: 2342, column: 22, scope: !5710)
!5736 = !DILocation(line: 2342, column: 2, scope: !5710)
!5737 = !DILocation(line: 2344, column: 23, scope: !5710)
!5738 = !DILocation(line: 2344, column: 27, scope: !5710)
!5739 = !DILocation(line: 2344, column: 2, scope: !5710)
!5740 = !DILocation(line: 2346, column: 1, scope: !5710)
!5741 = distinct !DISubprogram(name: "UV_OT_select_linked", scope: !3, file: !3, line: 2403, type: !4, scopeLine: 2404, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!5742 = !DILocalVariable(name: "ot", arg: 1, scope: !5741, file: !3, line: 2403, type: !6)
!5743 = !DILocation(line: 2403, column: 49, scope: !5741)
!5744 = !DILocation(line: 2406, column: 2, scope: !5741)
!5745 = !DILocation(line: 2406, column: 6, scope: !5741)
!5746 = !DILocation(line: 2406, column: 11, scope: !5741)
!5747 = !DILocation(line: 2407, column: 2, scope: !5741)
!5748 = !DILocation(line: 2407, column: 6, scope: !5741)
!5749 = !DILocation(line: 2407, column: 18, scope: !5741)
!5750 = !DILocation(line: 2408, column: 2, scope: !5741)
!5751 = !DILocation(line: 2408, column: 6, scope: !5741)
!5752 = !DILocation(line: 2408, column: 13, scope: !5741)
!5753 = !DILocation(line: 2409, column: 2, scope: !5741)
!5754 = !DILocation(line: 2409, column: 6, scope: !5741)
!5755 = !DILocation(line: 2409, column: 11, scope: !5741)
!5756 = !DILocation(line: 2412, column: 2, scope: !5741)
!5757 = !DILocation(line: 2412, column: 6, scope: !5741)
!5758 = !DILocation(line: 2412, column: 11, scope: !5741)
!5759 = !DILocation(line: 2413, column: 2, scope: !5741)
!5760 = !DILocation(line: 2413, column: 6, scope: !5741)
!5761 = !DILocation(line: 2413, column: 11, scope: !5741)
!5762 = !DILocation(line: 2416, column: 18, scope: !5741)
!5763 = !DILocation(line: 2416, column: 22, scope: !5741)
!5764 = !DILocation(line: 2416, column: 2, scope: !5741)
!5765 = !DILocation(line: 2418, column: 1, scope: !5741)
!5766 = distinct !DISubprogram(name: "UV_OT_select_linked_pick", scope: !3, file: !3, line: 2430, type: !4, scopeLine: 2431, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!5767 = !DILocalVariable(name: "ot", arg: 1, scope: !5766, file: !3, line: 2430, type: !6)
!5768 = !DILocation(line: 2430, column: 54, scope: !5766)
!5769 = !DILocation(line: 2433, column: 2, scope: !5766)
!5770 = !DILocation(line: 2433, column: 6, scope: !5766)
!5771 = !DILocation(line: 2433, column: 11, scope: !5766)
!5772 = !DILocation(line: 2434, column: 2, scope: !5766)
!5773 = !DILocation(line: 2434, column: 6, scope: !5766)
!5774 = !DILocation(line: 2434, column: 18, scope: !5766)
!5775 = !DILocation(line: 2435, column: 2, scope: !5766)
!5776 = !DILocation(line: 2435, column: 6, scope: !5766)
!5777 = !DILocation(line: 2435, column: 13, scope: !5766)
!5778 = !DILocation(line: 2436, column: 2, scope: !5766)
!5779 = !DILocation(line: 2436, column: 6, scope: !5766)
!5780 = !DILocation(line: 2436, column: 11, scope: !5766)
!5781 = !DILocation(line: 2439, column: 2, scope: !5766)
!5782 = !DILocation(line: 2439, column: 6, scope: !5766)
!5783 = !DILocation(line: 2439, column: 13, scope: !5766)
!5784 = !DILocation(line: 2440, column: 2, scope: !5766)
!5785 = !DILocation(line: 2440, column: 6, scope: !5766)
!5786 = !DILocation(line: 2440, column: 11, scope: !5766)
!5787 = !DILocation(line: 2441, column: 2, scope: !5766)
!5788 = !DILocation(line: 2441, column: 6, scope: !5766)
!5789 = !DILocation(line: 2441, column: 11, scope: !5766)
!5790 = !DILocation(line: 2444, column: 18, scope: !5766)
!5791 = !DILocation(line: 2444, column: 22, scope: !5766)
!5792 = !DILocation(line: 2444, column: 2, scope: !5766)
!5793 = !DILocation(line: 2447, column: 23, scope: !5766)
!5794 = !DILocation(line: 2447, column: 27, scope: !5766)
!5795 = !DILocation(line: 2447, column: 2, scope: !5766)
!5796 = !DILocation(line: 2449, column: 1, scope: !5766)
!5797 = distinct !DISubprogram(name: "UV_OT_select_split", scope: !3, file: !3, line: 2525, type: !4, scopeLine: 2526, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!5798 = !DILocalVariable(name: "ot", arg: 1, scope: !5797, file: !3, line: 2525, type: !6)
!5799 = !DILocation(line: 2525, column: 48, scope: !5797)
!5800 = !DILocation(line: 2528, column: 2, scope: !5797)
!5801 = !DILocation(line: 2528, column: 6, scope: !5797)
!5802 = !DILocation(line: 2528, column: 11, scope: !5797)
!5803 = !DILocation(line: 2529, column: 2, scope: !5797)
!5804 = !DILocation(line: 2529, column: 6, scope: !5797)
!5805 = !DILocation(line: 2529, column: 18, scope: !5797)
!5806 = !DILocation(line: 2530, column: 2, scope: !5797)
!5807 = !DILocation(line: 2530, column: 6, scope: !5797)
!5808 = !DILocation(line: 2530, column: 13, scope: !5797)
!5809 = !DILocation(line: 2531, column: 2, scope: !5797)
!5810 = !DILocation(line: 2531, column: 6, scope: !5797)
!5811 = !DILocation(line: 2531, column: 11, scope: !5797)
!5812 = !DILocation(line: 2534, column: 2, scope: !5797)
!5813 = !DILocation(line: 2534, column: 6, scope: !5797)
!5814 = !DILocation(line: 2534, column: 11, scope: !5797)
!5815 = !DILocation(line: 2535, column: 2, scope: !5797)
!5816 = !DILocation(line: 2535, column: 6, scope: !5797)
!5817 = !DILocation(line: 2535, column: 11, scope: !5797)
!5818 = !DILocation(line: 2536, column: 1, scope: !5797)
!5819 = distinct !DISubprogram(name: "UV_OT_select_pinned", scope: !3, file: !3, line: 3552, type: !4, scopeLine: 3553, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!5820 = !DILocalVariable(name: "ot", arg: 1, scope: !5819, file: !3, line: 3552, type: !6)
!5821 = !DILocation(line: 3552, column: 49, scope: !5819)
!5822 = !DILocation(line: 3555, column: 2, scope: !5819)
!5823 = !DILocation(line: 3555, column: 6, scope: !5819)
!5824 = !DILocation(line: 3555, column: 11, scope: !5819)
!5825 = !DILocation(line: 3556, column: 2, scope: !5819)
!5826 = !DILocation(line: 3556, column: 6, scope: !5819)
!5827 = !DILocation(line: 3556, column: 18, scope: !5819)
!5828 = !DILocation(line: 3557, column: 2, scope: !5819)
!5829 = !DILocation(line: 3557, column: 6, scope: !5819)
!5830 = !DILocation(line: 3557, column: 13, scope: !5819)
!5831 = !DILocation(line: 3558, column: 2, scope: !5819)
!5832 = !DILocation(line: 3558, column: 6, scope: !5819)
!5833 = !DILocation(line: 3558, column: 11, scope: !5819)
!5834 = !DILocation(line: 3561, column: 2, scope: !5819)
!5835 = !DILocation(line: 3561, column: 6, scope: !5819)
!5836 = !DILocation(line: 3561, column: 11, scope: !5819)
!5837 = !DILocation(line: 3562, column: 2, scope: !5819)
!5838 = !DILocation(line: 3562, column: 6, scope: !5819)
!5839 = !DILocation(line: 3562, column: 11, scope: !5819)
!5840 = !DILocation(line: 3563, column: 1, scope: !5819)
!5841 = distinct !DISubprogram(name: "UV_OT_select_border", scope: !3, file: !3, line: 2888, type: !4, scopeLine: 2889, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!5842 = !DILocalVariable(name: "ot", arg: 1, scope: !5841, file: !3, line: 2888, type: !6)
!5843 = !DILocation(line: 2888, column: 49, scope: !5841)
!5844 = !DILocation(line: 2891, column: 2, scope: !5841)
!5845 = !DILocation(line: 2891, column: 6, scope: !5841)
!5846 = !DILocation(line: 2891, column: 11, scope: !5841)
!5847 = !DILocation(line: 2892, column: 2, scope: !5841)
!5848 = !DILocation(line: 2892, column: 6, scope: !5841)
!5849 = !DILocation(line: 2892, column: 18, scope: !5841)
!5850 = !DILocation(line: 2893, column: 2, scope: !5841)
!5851 = !DILocation(line: 2893, column: 6, scope: !5841)
!5852 = !DILocation(line: 2893, column: 13, scope: !5841)
!5853 = !DILocation(line: 2896, column: 2, scope: !5841)
!5854 = !DILocation(line: 2896, column: 6, scope: !5841)
!5855 = !DILocation(line: 2896, column: 13, scope: !5841)
!5856 = !DILocation(line: 2897, column: 2, scope: !5841)
!5857 = !DILocation(line: 2897, column: 6, scope: !5841)
!5858 = !DILocation(line: 2897, column: 11, scope: !5841)
!5859 = !DILocation(line: 2898, column: 2, scope: !5841)
!5860 = !DILocation(line: 2898, column: 6, scope: !5841)
!5861 = !DILocation(line: 2898, column: 12, scope: !5841)
!5862 = !DILocation(line: 2899, column: 2, scope: !5841)
!5863 = !DILocation(line: 2899, column: 6, scope: !5841)
!5864 = !DILocation(line: 2899, column: 11, scope: !5841)
!5865 = !DILocation(line: 2900, column: 2, scope: !5841)
!5866 = !DILocation(line: 2900, column: 6, scope: !5841)
!5867 = !DILocation(line: 2900, column: 13, scope: !5841)
!5868 = !DILocation(line: 2903, column: 2, scope: !5841)
!5869 = !DILocation(line: 2903, column: 6, scope: !5841)
!5870 = !DILocation(line: 2903, column: 11, scope: !5841)
!5871 = !DILocation(line: 2906, column: 18, scope: !5841)
!5872 = !DILocation(line: 2906, column: 22, scope: !5841)
!5873 = !DILocation(line: 2906, column: 2, scope: !5841)
!5874 = !DILocation(line: 2908, column: 40, scope: !5841)
!5875 = !DILocation(line: 2908, column: 2, scope: !5841)
!5876 = !DILocation(line: 2909, column: 1, scope: !5841)
!5877 = distinct !DISubprogram(name: "UV_OT_select_lasso", scope: !3, file: !3, line: 3148, type: !4, scopeLine: 3149, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!5878 = !DILocalVariable(name: "ot", arg: 1, scope: !5877, file: !3, line: 3148, type: !6)
!5879 = !DILocation(line: 3148, column: 48, scope: !5877)
!5880 = !DILocation(line: 3150, column: 2, scope: !5877)
!5881 = !DILocation(line: 3150, column: 6, scope: !5877)
!5882 = !DILocation(line: 3150, column: 11, scope: !5877)
!5883 = !DILocation(line: 3151, column: 2, scope: !5877)
!5884 = !DILocation(line: 3151, column: 6, scope: !5877)
!5885 = !DILocation(line: 3151, column: 18, scope: !5877)
!5886 = !DILocation(line: 3152, column: 2, scope: !5877)
!5887 = !DILocation(line: 3152, column: 6, scope: !5877)
!5888 = !DILocation(line: 3152, column: 13, scope: !5877)
!5889 = !DILocation(line: 3154, column: 2, scope: !5877)
!5890 = !DILocation(line: 3154, column: 6, scope: !5877)
!5891 = !DILocation(line: 3154, column: 13, scope: !5877)
!5892 = !DILocation(line: 3155, column: 2, scope: !5877)
!5893 = !DILocation(line: 3155, column: 6, scope: !5877)
!5894 = !DILocation(line: 3155, column: 12, scope: !5877)
!5895 = !DILocation(line: 3156, column: 2, scope: !5877)
!5896 = !DILocation(line: 3156, column: 6, scope: !5877)
!5897 = !DILocation(line: 3156, column: 11, scope: !5877)
!5898 = !DILocation(line: 3157, column: 2, scope: !5877)
!5899 = !DILocation(line: 3157, column: 6, scope: !5877)
!5900 = !DILocation(line: 3157, column: 11, scope: !5877)
!5901 = !DILocation(line: 3158, column: 2, scope: !5877)
!5902 = !DILocation(line: 3158, column: 6, scope: !5877)
!5903 = !DILocation(line: 3158, column: 13, scope: !5877)
!5904 = !DILocation(line: 3161, column: 2, scope: !5877)
!5905 = !DILocation(line: 3161, column: 6, scope: !5877)
!5906 = !DILocation(line: 3161, column: 11, scope: !5877)
!5907 = !DILocation(line: 3163, column: 29, scope: !5877)
!5908 = !DILocation(line: 3163, column: 33, scope: !5877)
!5909 = !DILocation(line: 3163, column: 2, scope: !5877)
!5910 = !DILocation(line: 3164, column: 18, scope: !5877)
!5911 = !DILocation(line: 3164, column: 22, scope: !5877)
!5912 = !DILocation(line: 3164, column: 2, scope: !5877)
!5913 = !DILocation(line: 3165, column: 18, scope: !5877)
!5914 = !DILocation(line: 3165, column: 22, scope: !5877)
!5915 = !DILocation(line: 3165, column: 2, scope: !5877)
!5916 = !DILocation(line: 3166, column: 1, scope: !5877)
!5917 = distinct !DISubprogram(name: "UV_OT_circle_select", scope: !3, file: !3, line: 3012, type: !4, scopeLine: 3013, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!5918 = !DILocalVariable(name: "ot", arg: 1, scope: !5917, file: !3, line: 3012, type: !6)
!5919 = !DILocation(line: 3012, column: 49, scope: !5917)
!5920 = !DILocation(line: 3015, column: 2, scope: !5917)
!5921 = !DILocation(line: 3015, column: 6, scope: !5917)
!5922 = !DILocation(line: 3015, column: 11, scope: !5917)
!5923 = !DILocation(line: 3016, column: 2, scope: !5917)
!5924 = !DILocation(line: 3016, column: 6, scope: !5917)
!5925 = !DILocation(line: 3016, column: 18, scope: !5917)
!5926 = !DILocation(line: 3017, column: 2, scope: !5917)
!5927 = !DILocation(line: 3017, column: 6, scope: !5917)
!5928 = !DILocation(line: 3017, column: 13, scope: !5917)
!5929 = !DILocation(line: 3020, column: 2, scope: !5917)
!5930 = !DILocation(line: 3020, column: 6, scope: !5917)
!5931 = !DILocation(line: 3020, column: 13, scope: !5917)
!5932 = !DILocation(line: 3021, column: 2, scope: !5917)
!5933 = !DILocation(line: 3021, column: 6, scope: !5917)
!5934 = !DILocation(line: 3021, column: 12, scope: !5917)
!5935 = !DILocation(line: 3022, column: 2, scope: !5917)
!5936 = !DILocation(line: 3022, column: 6, scope: !5917)
!5937 = !DILocation(line: 3022, column: 11, scope: !5917)
!5938 = !DILocation(line: 3023, column: 2, scope: !5917)
!5939 = !DILocation(line: 3023, column: 6, scope: !5917)
!5940 = !DILocation(line: 3023, column: 11, scope: !5917)
!5941 = !DILocation(line: 3024, column: 2, scope: !5917)
!5942 = !DILocation(line: 3024, column: 6, scope: !5917)
!5943 = !DILocation(line: 3024, column: 13, scope: !5917)
!5944 = !DILocation(line: 3027, column: 2, scope: !5917)
!5945 = !DILocation(line: 3027, column: 6, scope: !5917)
!5946 = !DILocation(line: 3027, column: 11, scope: !5917)
!5947 = !DILocation(line: 3030, column: 14, scope: !5917)
!5948 = !DILocation(line: 3030, column: 18, scope: !5917)
!5949 = !DILocation(line: 3030, column: 2, scope: !5917)
!5950 = !DILocation(line: 3031, column: 14, scope: !5917)
!5951 = !DILocation(line: 3031, column: 18, scope: !5917)
!5952 = !DILocation(line: 3031, column: 2, scope: !5917)
!5953 = !DILocation(line: 3032, column: 14, scope: !5917)
!5954 = !DILocation(line: 3032, column: 18, scope: !5917)
!5955 = !DILocation(line: 3032, column: 2, scope: !5917)
!5956 = !DILocation(line: 3033, column: 14, scope: !5917)
!5957 = !DILocation(line: 3033, column: 18, scope: !5917)
!5958 = !DILocation(line: 3033, column: 2, scope: !5917)
!5959 = !DILocation(line: 3034, column: 1, scope: !5917)
!5960 = distinct !DISubprogram(name: "UV_OT_select_more", scope: !3, file: !3, line: 1387, type: !4, scopeLine: 1388, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!5961 = !DILocalVariable(name: "ot", arg: 1, scope: !5960, file: !3, line: 1387, type: !6)
!5962 = !DILocation(line: 1387, column: 47, scope: !5960)
!5963 = !DILocation(line: 1390, column: 2, scope: !5960)
!5964 = !DILocation(line: 1390, column: 6, scope: !5960)
!5965 = !DILocation(line: 1390, column: 11, scope: !5960)
!5966 = !DILocation(line: 1391, column: 2, scope: !5960)
!5967 = !DILocation(line: 1391, column: 6, scope: !5960)
!5968 = !DILocation(line: 1391, column: 18, scope: !5960)
!5969 = !DILocation(line: 1392, column: 2, scope: !5960)
!5970 = !DILocation(line: 1392, column: 6, scope: !5960)
!5971 = !DILocation(line: 1392, column: 13, scope: !5960)
!5972 = !DILocation(line: 1393, column: 2, scope: !5960)
!5973 = !DILocation(line: 1393, column: 6, scope: !5960)
!5974 = !DILocation(line: 1393, column: 11, scope: !5960)
!5975 = !DILocation(line: 1396, column: 2, scope: !5960)
!5976 = !DILocation(line: 1396, column: 6, scope: !5960)
!5977 = !DILocation(line: 1396, column: 11, scope: !5960)
!5978 = !DILocation(line: 1397, column: 2, scope: !5960)
!5979 = !DILocation(line: 1397, column: 6, scope: !5960)
!5980 = !DILocation(line: 1397, column: 11, scope: !5960)
!5981 = !DILocation(line: 1398, column: 1, scope: !5960)
!5982 = distinct !DISubprogram(name: "UV_OT_select_less", scope: !3, file: !3, line: 1405, type: !4, scopeLine: 1406, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!5983 = !DILocalVariable(name: "ot", arg: 1, scope: !5982, file: !3, line: 1405, type: !6)
!5984 = !DILocation(line: 1405, column: 47, scope: !5982)
!5985 = !DILocation(line: 1408, column: 2, scope: !5982)
!5986 = !DILocation(line: 1408, column: 6, scope: !5982)
!5987 = !DILocation(line: 1408, column: 11, scope: !5982)
!5988 = !DILocation(line: 1409, column: 2, scope: !5982)
!5989 = !DILocation(line: 1409, column: 6, scope: !5982)
!5990 = !DILocation(line: 1409, column: 18, scope: !5982)
!5991 = !DILocation(line: 1410, column: 2, scope: !5982)
!5992 = !DILocation(line: 1410, column: 6, scope: !5982)
!5993 = !DILocation(line: 1410, column: 13, scope: !5982)
!5994 = !DILocation(line: 1411, column: 2, scope: !5982)
!5995 = !DILocation(line: 1411, column: 6, scope: !5982)
!5996 = !DILocation(line: 1411, column: 11, scope: !5982)
!5997 = !DILocation(line: 1414, column: 2, scope: !5982)
!5998 = !DILocation(line: 1414, column: 6, scope: !5982)
!5999 = !DILocation(line: 1414, column: 11, scope: !5982)
!6000 = !DILocation(line: 1415, column: 2, scope: !5982)
!6001 = !DILocation(line: 1415, column: 6, scope: !5982)
!6002 = !DILocation(line: 1415, column: 11, scope: !5982)
!6003 = !DILocation(line: 1416, column: 1, scope: !5982)
!6004 = !DILocalVariable(name: "ot", arg: 1, scope: !2, file: !3, line: 3217, type: !6)
!6005 = !DILocation(line: 3217, column: 47, scope: !2)
!6006 = !DILocation(line: 3225, column: 2, scope: !2)
!6007 = !DILocation(line: 3225, column: 6, scope: !2)
!6008 = !DILocation(line: 3225, column: 11, scope: !2)
!6009 = !DILocation(line: 3226, column: 2, scope: !2)
!6010 = !DILocation(line: 3226, column: 6, scope: !2)
!6011 = !DILocation(line: 3226, column: 18, scope: !2)
!6012 = !DILocation(line: 3227, column: 2, scope: !2)
!6013 = !DILocation(line: 3227, column: 6, scope: !2)
!6014 = !DILocation(line: 3227, column: 13, scope: !2)
!6015 = !DILocation(line: 3228, column: 2, scope: !2)
!6016 = !DILocation(line: 3228, column: 6, scope: !2)
!6017 = !DILocation(line: 3228, column: 11, scope: !2)
!6018 = !DILocation(line: 3231, column: 2, scope: !2)
!6019 = !DILocation(line: 3231, column: 6, scope: !2)
!6020 = !DILocation(line: 3231, column: 11, scope: !2)
!6021 = !DILocation(line: 3232, column: 2, scope: !2)
!6022 = !DILocation(line: 3232, column: 6, scope: !2)
!6023 = !DILocation(line: 3232, column: 11, scope: !2)
!6024 = !DILocation(line: 3235, column: 15, scope: !2)
!6025 = !DILocation(line: 3235, column: 19, scope: !2)
!6026 = !DILocation(line: 3235, column: 2, scope: !2)
!6027 = !DILocation(line: 3236, column: 1, scope: !2)
!6028 = !DILocalVariable(name: "ot", arg: 1, scope: !3565, file: !3, line: 3436, type: !6)
!6029 = !DILocation(line: 3436, column: 49, scope: !3565)
!6030 = !DILocation(line: 3446, column: 2, scope: !3565)
!6031 = !DILocation(line: 3446, column: 6, scope: !3565)
!6032 = !DILocation(line: 3446, column: 11, scope: !3565)
!6033 = !DILocation(line: 3447, column: 2, scope: !3565)
!6034 = !DILocation(line: 3447, column: 6, scope: !3565)
!6035 = !DILocation(line: 3447, column: 18, scope: !3565)
!6036 = !DILocation(line: 3448, column: 2, scope: !3565)
!6037 = !DILocation(line: 3448, column: 6, scope: !3565)
!6038 = !DILocation(line: 3448, column: 13, scope: !3565)
!6039 = !DILocation(line: 3449, column: 2, scope: !3565)
!6040 = !DILocation(line: 3449, column: 6, scope: !3565)
!6041 = !DILocation(line: 3449, column: 11, scope: !3565)
!6042 = !DILocation(line: 3452, column: 2, scope: !3565)
!6043 = !DILocation(line: 3452, column: 6, scope: !3565)
!6044 = !DILocation(line: 3452, column: 11, scope: !3565)
!6045 = !DILocation(line: 3453, column: 2, scope: !3565)
!6046 = !DILocation(line: 3453, column: 6, scope: !3565)
!6047 = !DILocation(line: 3453, column: 11, scope: !3565)
!6048 = !DILocation(line: 3456, column: 15, scope: !3565)
!6049 = !DILocation(line: 3456, column: 19, scope: !3565)
!6050 = !DILocation(line: 3456, column: 2, scope: !3565)
!6051 = !DILocation(line: 3457, column: 1, scope: !3565)
!6052 = !DILocalVariable(name: "ot", arg: 1, scope: !3578, file: !3, line: 1655, type: !6)
!6053 = !DILocation(line: 1655, column: 41, scope: !3578)
!6054 = !DILocation(line: 1667, column: 2, scope: !3578)
!6055 = !DILocation(line: 1667, column: 6, scope: !3578)
!6056 = !DILocation(line: 1667, column: 11, scope: !3578)
!6057 = !DILocation(line: 1668, column: 2, scope: !3578)
!6058 = !DILocation(line: 1668, column: 6, scope: !3578)
!6059 = !DILocation(line: 1668, column: 18, scope: !3578)
!6060 = !DILocation(line: 1669, column: 2, scope: !3578)
!6061 = !DILocation(line: 1669, column: 6, scope: !3578)
!6062 = !DILocation(line: 1669, column: 13, scope: !3578)
!6063 = !DILocation(line: 1670, column: 2, scope: !3578)
!6064 = !DILocation(line: 1670, column: 6, scope: !3578)
!6065 = !DILocation(line: 1670, column: 11, scope: !3578)
!6066 = !DILocation(line: 1673, column: 2, scope: !3578)
!6067 = !DILocation(line: 1673, column: 6, scope: !3578)
!6068 = !DILocation(line: 1673, column: 11, scope: !3578)
!6069 = !DILocation(line: 1674, column: 2, scope: !3578)
!6070 = !DILocation(line: 1674, column: 6, scope: !3578)
!6071 = !DILocation(line: 1674, column: 11, scope: !3578)
!6072 = !DILocation(line: 1677, column: 15, scope: !3578)
!6073 = !DILocation(line: 1677, column: 19, scope: !3578)
!6074 = !DILocation(line: 1677, column: 2, scope: !3578)
!6075 = !DILocation(line: 1678, column: 1, scope: !3578)
!6076 = distinct !DISubprogram(name: "UV_OT_seams_from_islands", scope: !3, file: !3, line: 4065, type: !4, scopeLine: 4066, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!6077 = !DILocalVariable(name: "ot", arg: 1, scope: !6076, file: !3, line: 4065, type: !6)
!6078 = !DILocation(line: 4065, column: 54, scope: !6076)
!6079 = !DILocation(line: 4068, column: 2, scope: !6076)
!6080 = !DILocation(line: 4068, column: 6, scope: !6076)
!6081 = !DILocation(line: 4068, column: 11, scope: !6076)
!6082 = !DILocation(line: 4069, column: 2, scope: !6076)
!6083 = !DILocation(line: 4069, column: 6, scope: !6076)
!6084 = !DILocation(line: 4069, column: 18, scope: !6076)
!6085 = !DILocation(line: 4070, column: 2, scope: !6076)
!6086 = !DILocation(line: 4070, column: 6, scope: !6076)
!6087 = !DILocation(line: 4070, column: 13, scope: !6076)
!6088 = !DILocation(line: 4073, column: 2, scope: !6076)
!6089 = !DILocation(line: 4073, column: 6, scope: !6076)
!6090 = !DILocation(line: 4073, column: 11, scope: !6076)
!6091 = !DILocation(line: 4076, column: 2, scope: !6076)
!6092 = !DILocation(line: 4076, column: 6, scope: !6076)
!6093 = !DILocation(line: 4076, column: 11, scope: !6076)
!6094 = !DILocation(line: 4077, column: 2, scope: !6076)
!6095 = !DILocation(line: 4077, column: 6, scope: !6076)
!6096 = !DILocation(line: 4077, column: 11, scope: !6076)
!6097 = !DILocation(line: 4079, column: 18, scope: !6076)
!6098 = !DILocation(line: 4079, column: 22, scope: !6076)
!6099 = !DILocation(line: 4079, column: 2, scope: !6076)
!6100 = !DILocation(line: 4080, column: 18, scope: !6076)
!6101 = !DILocation(line: 4080, column: 22, scope: !6076)
!6102 = !DILocation(line: 4080, column: 2, scope: !6076)
!6103 = !DILocation(line: 4081, column: 1, scope: !6076)
!6104 = distinct !DISubprogram(name: "UV_OT_mark_seam", scope: !3, file: !3, line: 4115, type: !4, scopeLine: 4116, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!6105 = !DILocalVariable(name: "ot", arg: 1, scope: !6104, file: !3, line: 4115, type: !6)
!6106 = !DILocation(line: 4115, column: 45, scope: !6104)
!6107 = !DILocation(line: 4118, column: 2, scope: !6104)
!6108 = !DILocation(line: 4118, column: 6, scope: !6104)
!6109 = !DILocation(line: 4118, column: 11, scope: !6104)
!6110 = !DILocation(line: 4119, column: 2, scope: !6104)
!6111 = !DILocation(line: 4119, column: 6, scope: !6104)
!6112 = !DILocation(line: 4119, column: 18, scope: !6104)
!6113 = !DILocation(line: 4120, column: 2, scope: !6104)
!6114 = !DILocation(line: 4120, column: 6, scope: !6104)
!6115 = !DILocation(line: 4120, column: 13, scope: !6104)
!6116 = !DILocation(line: 4123, column: 2, scope: !6104)
!6117 = !DILocation(line: 4123, column: 6, scope: !6104)
!6118 = !DILocation(line: 4123, column: 11, scope: !6104)
!6119 = !DILocation(line: 4126, column: 2, scope: !6104)
!6120 = !DILocation(line: 4126, column: 6, scope: !6104)
!6121 = !DILocation(line: 4126, column: 11, scope: !6104)
!6122 = !DILocation(line: 4127, column: 2, scope: !6104)
!6123 = !DILocation(line: 4127, column: 6, scope: !6104)
!6124 = !DILocation(line: 4127, column: 11, scope: !6104)
!6125 = !DILocation(line: 4128, column: 1, scope: !6104)
!6126 = distinct !DISubprogram(name: "UV_OT_weld", scope: !3, file: !3, line: 1853, type: !4, scopeLine: 1854, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!6127 = !DILocalVariable(name: "ot", arg: 1, scope: !6126, file: !3, line: 1853, type: !6)
!6128 = !DILocation(line: 1853, column: 40, scope: !6126)
!6129 = !DILocation(line: 1856, column: 2, scope: !6126)
!6130 = !DILocation(line: 1856, column: 6, scope: !6126)
!6131 = !DILocation(line: 1856, column: 11, scope: !6126)
!6132 = !DILocation(line: 1857, column: 2, scope: !6126)
!6133 = !DILocation(line: 1857, column: 6, scope: !6126)
!6134 = !DILocation(line: 1857, column: 18, scope: !6126)
!6135 = !DILocation(line: 1858, column: 2, scope: !6126)
!6136 = !DILocation(line: 1858, column: 6, scope: !6126)
!6137 = !DILocation(line: 1858, column: 13, scope: !6126)
!6138 = !DILocation(line: 1859, column: 2, scope: !6126)
!6139 = !DILocation(line: 1859, column: 6, scope: !6126)
!6140 = !DILocation(line: 1859, column: 11, scope: !6126)
!6141 = !DILocation(line: 1862, column: 2, scope: !6126)
!6142 = !DILocation(line: 1862, column: 6, scope: !6126)
!6143 = !DILocation(line: 1862, column: 11, scope: !6126)
!6144 = !DILocation(line: 1863, column: 2, scope: !6126)
!6145 = !DILocation(line: 1863, column: 6, scope: !6126)
!6146 = !DILocation(line: 1863, column: 11, scope: !6126)
!6147 = !DILocation(line: 1864, column: 1, scope: !6126)
!6148 = distinct !DISubprogram(name: "UV_OT_remove_doubles", scope: !3, file: !3, line: 1828, type: !4, scopeLine: 1829, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!6149 = !DILocalVariable(name: "ot", arg: 1, scope: !6148, file: !3, line: 1828, type: !6)
!6150 = !DILocation(line: 1828, column: 50, scope: !6148)
!6151 = !DILocation(line: 1831, column: 2, scope: !6148)
!6152 = !DILocation(line: 1831, column: 6, scope: !6148)
!6153 = !DILocation(line: 1831, column: 11, scope: !6148)
!6154 = !DILocation(line: 1832, column: 2, scope: !6148)
!6155 = !DILocation(line: 1832, column: 6, scope: !6148)
!6156 = !DILocation(line: 1832, column: 18, scope: !6148)
!6157 = !DILocation(line: 1833, column: 2, scope: !6148)
!6158 = !DILocation(line: 1833, column: 6, scope: !6148)
!6159 = !DILocation(line: 1833, column: 13, scope: !6148)
!6160 = !DILocation(line: 1834, column: 2, scope: !6148)
!6161 = !DILocation(line: 1834, column: 6, scope: !6148)
!6162 = !DILocation(line: 1834, column: 11, scope: !6148)
!6163 = !DILocation(line: 1837, column: 2, scope: !6148)
!6164 = !DILocation(line: 1837, column: 6, scope: !6148)
!6165 = !DILocation(line: 1837, column: 11, scope: !6148)
!6166 = !DILocation(line: 1838, column: 2, scope: !6148)
!6167 = !DILocation(line: 1838, column: 6, scope: !6148)
!6168 = !DILocation(line: 1838, column: 11, scope: !6148)
!6169 = !DILocation(line: 1840, column: 16, scope: !6148)
!6170 = !DILocation(line: 1840, column: 20, scope: !6148)
!6171 = !DILocation(line: 1840, column: 2, scope: !6148)
!6172 = !DILocation(line: 1842, column: 18, scope: !6148)
!6173 = !DILocation(line: 1842, column: 22, scope: !6148)
!6174 = !DILocation(line: 1842, column: 2, scope: !6148)
!6175 = !DILocation(line: 1843, column: 1, scope: !6148)
!6176 = distinct !DISubprogram(name: "UV_OT_pin", scope: !3, file: !3, line: 3501, type: !4, scopeLine: 3502, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!6177 = !DILocalVariable(name: "ot", arg: 1, scope: !6176, file: !3, line: 3501, type: !6)
!6178 = !DILocation(line: 3501, column: 39, scope: !6176)
!6179 = !DILocation(line: 3504, column: 2, scope: !6176)
!6180 = !DILocation(line: 3504, column: 6, scope: !6176)
!6181 = !DILocation(line: 3504, column: 11, scope: !6176)
!6182 = !DILocation(line: 3505, column: 2, scope: !6176)
!6183 = !DILocation(line: 3505, column: 6, scope: !6176)
!6184 = !DILocation(line: 3505, column: 18, scope: !6176)
!6185 = !DILocation(line: 3506, column: 2, scope: !6176)
!6186 = !DILocation(line: 3506, column: 6, scope: !6176)
!6187 = !DILocation(line: 3506, column: 13, scope: !6176)
!6188 = !DILocation(line: 3507, column: 2, scope: !6176)
!6189 = !DILocation(line: 3507, column: 6, scope: !6176)
!6190 = !DILocation(line: 3507, column: 11, scope: !6176)
!6191 = !DILocation(line: 3510, column: 2, scope: !6176)
!6192 = !DILocation(line: 3510, column: 6, scope: !6176)
!6193 = !DILocation(line: 3510, column: 11, scope: !6176)
!6194 = !DILocation(line: 3511, column: 2, scope: !6176)
!6195 = !DILocation(line: 3511, column: 6, scope: !6176)
!6196 = !DILocation(line: 3511, column: 11, scope: !6176)
!6197 = !DILocation(line: 3514, column: 18, scope: !6176)
!6198 = !DILocation(line: 3514, column: 22, scope: !6176)
!6199 = !DILocation(line: 3514, column: 2, scope: !6176)
!6200 = !DILocation(line: 3515, column: 1, scope: !6176)
!6201 = distinct !DISubprogram(name: "UV_OT_reveal", scope: !3, file: !3, line: 3821, type: !4, scopeLine: 3822, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!6202 = !DILocalVariable(name: "ot", arg: 1, scope: !6201, file: !3, line: 3821, type: !6)
!6203 = !DILocation(line: 3821, column: 42, scope: !6201)
!6204 = !DILocation(line: 3824, column: 2, scope: !6201)
!6205 = !DILocation(line: 3824, column: 6, scope: !6201)
!6206 = !DILocation(line: 3824, column: 11, scope: !6201)
!6207 = !DILocation(line: 3825, column: 2, scope: !6201)
!6208 = !DILocation(line: 3825, column: 6, scope: !6201)
!6209 = !DILocation(line: 3825, column: 18, scope: !6201)
!6210 = !DILocation(line: 3826, column: 2, scope: !6201)
!6211 = !DILocation(line: 3826, column: 6, scope: !6201)
!6212 = !DILocation(line: 3826, column: 13, scope: !6201)
!6213 = !DILocation(line: 3827, column: 2, scope: !6201)
!6214 = !DILocation(line: 3827, column: 6, scope: !6201)
!6215 = !DILocation(line: 3827, column: 11, scope: !6201)
!6216 = !DILocation(line: 3830, column: 2, scope: !6201)
!6217 = !DILocation(line: 3830, column: 6, scope: !6201)
!6218 = !DILocation(line: 3830, column: 11, scope: !6201)
!6219 = !DILocation(line: 3831, column: 2, scope: !6201)
!6220 = !DILocation(line: 3831, column: 6, scope: !6201)
!6221 = !DILocation(line: 3831, column: 11, scope: !6201)
!6222 = !DILocation(line: 3832, column: 1, scope: !6201)
!6223 = distinct !DISubprogram(name: "UV_OT_hide", scope: !3, file: !3, line: 3687, type: !4, scopeLine: 3688, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!6224 = !DILocalVariable(name: "ot", arg: 1, scope: !6223, file: !3, line: 3687, type: !6)
!6225 = !DILocation(line: 3687, column: 40, scope: !6223)
!6226 = !DILocation(line: 3690, column: 2, scope: !6223)
!6227 = !DILocation(line: 3690, column: 6, scope: !6223)
!6228 = !DILocation(line: 3690, column: 11, scope: !6223)
!6229 = !DILocation(line: 3691, column: 2, scope: !6223)
!6230 = !DILocation(line: 3691, column: 6, scope: !6223)
!6231 = !DILocation(line: 3691, column: 18, scope: !6223)
!6232 = !DILocation(line: 3692, column: 2, scope: !6223)
!6233 = !DILocation(line: 3692, column: 6, scope: !6223)
!6234 = !DILocation(line: 3692, column: 13, scope: !6223)
!6235 = !DILocation(line: 3693, column: 2, scope: !6223)
!6236 = !DILocation(line: 3693, column: 6, scope: !6223)
!6237 = !DILocation(line: 3693, column: 11, scope: !6223)
!6238 = !DILocation(line: 3696, column: 2, scope: !6223)
!6239 = !DILocation(line: 3696, column: 6, scope: !6223)
!6240 = !DILocation(line: 3696, column: 11, scope: !6223)
!6241 = !DILocation(line: 3697, column: 2, scope: !6223)
!6242 = !DILocation(line: 3697, column: 6, scope: !6223)
!6243 = !DILocation(line: 3697, column: 11, scope: !6223)
!6244 = !DILocation(line: 3700, column: 18, scope: !6223)
!6245 = !DILocation(line: 3700, column: 22, scope: !6223)
!6246 = !DILocation(line: 3700, column: 2, scope: !6223)
!6247 = !DILocation(line: 3701, column: 1, scope: !6223)
!6248 = distinct !DISubprogram(name: "UV_OT_cursor_set", scope: !3, file: !3, line: 3868, type: !4, scopeLine: 3869, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!6249 = !DILocalVariable(name: "ot", arg: 1, scope: !6248, file: !3, line: 3868, type: !6)
!6250 = !DILocation(line: 3868, column: 46, scope: !6248)
!6251 = !DILocation(line: 3871, column: 2, scope: !6248)
!6252 = !DILocation(line: 3871, column: 6, scope: !6248)
!6253 = !DILocation(line: 3871, column: 11, scope: !6248)
!6254 = !DILocation(line: 3872, column: 2, scope: !6248)
!6255 = !DILocation(line: 3872, column: 6, scope: !6248)
!6256 = !DILocation(line: 3872, column: 18, scope: !6248)
!6257 = !DILocation(line: 3873, column: 2, scope: !6248)
!6258 = !DILocation(line: 3873, column: 6, scope: !6248)
!6259 = !DILocation(line: 3873, column: 13, scope: !6248)
!6260 = !DILocation(line: 3876, column: 2, scope: !6248)
!6261 = !DILocation(line: 3876, column: 6, scope: !6248)
!6262 = !DILocation(line: 3876, column: 11, scope: !6248)
!6263 = !DILocation(line: 3877, column: 2, scope: !6248)
!6264 = !DILocation(line: 3877, column: 6, scope: !6248)
!6265 = !DILocation(line: 3877, column: 13, scope: !6248)
!6266 = !DILocation(line: 3878, column: 2, scope: !6248)
!6267 = !DILocation(line: 3878, column: 6, scope: !6248)
!6268 = !DILocation(line: 3878, column: 11, scope: !6248)
!6269 = !DILocation(line: 3881, column: 2, scope: !6248)
!6270 = !DILocation(line: 3881, column: 6, scope: !6248)
!6271 = !DILocation(line: 3881, column: 11, scope: !6248)
!6272 = !DILocation(line: 3884, column: 23, scope: !6248)
!6273 = !DILocation(line: 3884, column: 27, scope: !6248)
!6274 = !DILocation(line: 3884, column: 2, scope: !6248)
!6275 = !DILocation(line: 3886, column: 1, scope: !6248)
!6276 = distinct !DISubprogram(name: "UV_OT_tile_set", scope: !3, file: !3, line: 3935, type: !4, scopeLine: 3936, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!6277 = !DILocalVariable(name: "ot", arg: 1, scope: !6276, file: !3, line: 3935, type: !6)
!6278 = !DILocation(line: 3935, column: 44, scope: !6276)
!6279 = !DILocation(line: 3938, column: 2, scope: !6276)
!6280 = !DILocation(line: 3938, column: 6, scope: !6276)
!6281 = !DILocation(line: 3938, column: 11, scope: !6276)
!6282 = !DILocation(line: 3939, column: 2, scope: !6276)
!6283 = !DILocation(line: 3939, column: 6, scope: !6276)
!6284 = !DILocation(line: 3939, column: 18, scope: !6276)
!6285 = !DILocation(line: 3940, column: 2, scope: !6276)
!6286 = !DILocation(line: 3940, column: 6, scope: !6276)
!6287 = !DILocation(line: 3940, column: 13, scope: !6276)
!6288 = !DILocation(line: 3943, column: 2, scope: !6276)
!6289 = !DILocation(line: 3943, column: 6, scope: !6276)
!6290 = !DILocation(line: 3943, column: 11, scope: !6276)
!6291 = !DILocation(line: 3944, column: 2, scope: !6276)
!6292 = !DILocation(line: 3944, column: 6, scope: !6276)
!6293 = !DILocation(line: 3944, column: 13, scope: !6276)
!6294 = !DILocation(line: 3945, column: 2, scope: !6276)
!6295 = !DILocation(line: 3945, column: 6, scope: !6276)
!6296 = !DILocation(line: 3945, column: 11, scope: !6276)
!6297 = !DILocation(line: 3948, column: 2, scope: !6276)
!6298 = !DILocation(line: 3948, column: 6, scope: !6276)
!6299 = !DILocation(line: 3948, column: 11, scope: !6276)
!6300 = !DILocation(line: 3951, column: 21, scope: !6276)
!6301 = !DILocation(line: 3951, column: 25, scope: !6276)
!6302 = !DILocation(line: 3951, column: 2, scope: !6276)
!6303 = !DILocation(line: 3952, column: 1, scope: !6276)
!6304 = distinct !DISubprogram(name: "ED_keymap_uvedit", scope: !3, file: !3, line: 4178, type: !6305, scopeLine: 4179, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!6305 = !DISubroutineType(types: !6306)
!6306 = !{null, !6307}
!6307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6308, size: 64)
!6308 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmKeyConfig", file: !28, line: 318, baseType: !6309)
!6309 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmKeyConfig", file: !28, line: 310, size: 1344, elements: !6310)
!6310 = !{!6311, !6313, !6314, !6315, !6316, !6317, !6318}
!6311 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6309, file: !28, line: 311, baseType: !6312, size: 64)
!6312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6309, size: 64)
!6313 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6309, file: !28, line: 311, baseType: !6312, size: 64, offset: 64)
!6314 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !6309, file: !28, line: 313, baseType: !33, size: 512, offset: 128)
!6315 = !DIDerivedType(tag: DW_TAG_member, name: "basename", scope: !6309, file: !28, line: 314, baseType: !33, size: 512, offset: 640)
!6316 = !DIDerivedType(tag: DW_TAG_member, name: "keymaps", scope: !6309, file: !28, line: 316, baseType: !58, size: 128, offset: 1152)
!6317 = !DIDerivedType(tag: DW_TAG_member, name: "actkeymap", scope: !6309, file: !28, line: 317, baseType: !22, size: 32, offset: 1280)
!6318 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !6309, file: !28, line: 317, baseType: !22, size: 32, offset: 1312)
!6319 = !DILocalVariable(name: "keyconf", arg: 1, scope: !6304, file: !3, line: 4178, type: !6307)
!6320 = !DILocation(line: 4178, column: 36, scope: !6304)
!6321 = !DILocalVariable(name: "keymap", scope: !6304, file: !3, line: 4180, type: !6322)
!6322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6323, size: 64)
!6323 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmKeyMap", file: !28, line: 297, baseType: !2725)
!6324 = !DILocation(line: 4180, column: 12, scope: !6304)
!6325 = !DILocalVariable(name: "kmi", scope: !6304, file: !3, line: 4181, type: !6326)
!6326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6327, size: 64)
!6327 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmKeyMapItem", file: !28, line: 252, baseType: !6328)
!6328 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmKeyMapItem", file: !28, line: 227, size: 1472, elements: !6329)
!6329 = !{!6330, !6332, !6333, !6334, !6335, !6336, !6337, !6338, !6339, !6340, !6341, !6342, !6343, !6344, !6345, !6346, !6347, !6348}
!6330 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6328, file: !28, line: 228, baseType: !6331, size: 64)
!6331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6328, size: 64)
!6332 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6328, file: !28, line: 228, baseType: !6331, size: 64, offset: 64)
!6333 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !6328, file: !28, line: 231, baseType: !33, size: 512, offset: 128)
!6334 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !6328, file: !28, line: 232, baseType: !37, size: 64, offset: 640)
!6335 = !DIDerivedType(tag: DW_TAG_member, name: "propvalue_str", scope: !6328, file: !28, line: 235, baseType: !33, size: 512, offset: 704)
!6336 = !DIDerivedType(tag: DW_TAG_member, name: "propvalue", scope: !6328, file: !28, line: 236, baseType: !48, size: 16, offset: 1216)
!6337 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !6328, file: !28, line: 239, baseType: !48, size: 16, offset: 1232)
!6338 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !6328, file: !28, line: 240, baseType: !48, size: 16, offset: 1248)
!6339 = !DIDerivedType(tag: DW_TAG_member, name: "shift", scope: !6328, file: !28, line: 241, baseType: !48, size: 16, offset: 1264)
!6340 = !DIDerivedType(tag: DW_TAG_member, name: "ctrl", scope: !6328, file: !28, line: 241, baseType: !48, size: 16, offset: 1280)
!6341 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !6328, file: !28, line: 241, baseType: !48, size: 16, offset: 1296)
!6342 = !DIDerivedType(tag: DW_TAG_member, name: "oskey", scope: !6328, file: !28, line: 241, baseType: !48, size: 16, offset: 1312)
!6343 = !DIDerivedType(tag: DW_TAG_member, name: "keymodifier", scope: !6328, file: !28, line: 242, baseType: !48, size: 16, offset: 1328)
!6344 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !6328, file: !28, line: 245, baseType: !48, size: 16, offset: 1344)
!6345 = !DIDerivedType(tag: DW_TAG_member, name: "maptype", scope: !6328, file: !28, line: 248, baseType: !48, size: 16, offset: 1360)
!6346 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !6328, file: !28, line: 249, baseType: !48, size: 16, offset: 1376)
!6347 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !6328, file: !28, line: 250, baseType: !48, size: 16, offset: 1392)
!6348 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !6328, file: !28, line: 251, baseType: !73, size: 64, offset: 1408)
!6349 = !DILocation(line: 4181, column: 16, scope: !6304)
!6350 = !DILocation(line: 4183, column: 26, scope: !6304)
!6351 = !DILocation(line: 4183, column: 11, scope: !6304)
!6352 = !DILocation(line: 4183, column: 9, scope: !6304)
!6353 = !DILocation(line: 4184, column: 2, scope: !6304)
!6354 = !DILocation(line: 4184, column: 10, scope: !6304)
!6355 = !DILocation(line: 4184, column: 15, scope: !6304)
!6356 = !DILocation(line: 4187, column: 27, scope: !6304)
!6357 = !DILocation(line: 4187, column: 8, scope: !6304)
!6358 = !DILocation(line: 4187, column: 6, scope: !6304)
!6359 = !DILocation(line: 4188, column: 17, scope: !6304)
!6360 = !DILocation(line: 4188, column: 22, scope: !6304)
!6361 = !DILocation(line: 4188, column: 2, scope: !6304)
!6362 = !DILocation(line: 4191, column: 21, scope: !6304)
!6363 = !DILocation(line: 4191, column: 2, scope: !6304)
!6364 = !DILocation(line: 4194, column: 37, scope: !6304)
!6365 = !DILocation(line: 4194, column: 18, scope: !6304)
!6366 = !DILocation(line: 4194, column: 91, scope: !6304)
!6367 = !DILocation(line: 4194, column: 2, scope: !6304)
!6368 = !DILocation(line: 4195, column: 37, scope: !6304)
!6369 = !DILocation(line: 4195, column: 18, scope: !6304)
!6370 = !DILocation(line: 4195, column: 98, scope: !6304)
!6371 = !DILocation(line: 4195, column: 2, scope: !6304)
!6372 = !DILocation(line: 4196, column: 37, scope: !6304)
!6373 = !DILocation(line: 4196, column: 18, scope: !6304)
!6374 = !DILocation(line: 4196, column: 101, scope: !6304)
!6375 = !DILocation(line: 4196, column: 2, scope: !6304)
!6376 = !DILocation(line: 4197, column: 37, scope: !6304)
!6377 = !DILocation(line: 4197, column: 18, scope: !6304)
!6378 = !DILocation(line: 4197, column: 112, scope: !6304)
!6379 = !DILocation(line: 4197, column: 2, scope: !6304)
!6380 = !DILocation(line: 4198, column: 21, scope: !6304)
!6381 = !DILocation(line: 4198, column: 2, scope: !6304)
!6382 = !DILocation(line: 4201, column: 27, scope: !6304)
!6383 = !DILocation(line: 4201, column: 8, scope: !6304)
!6384 = !DILocation(line: 4201, column: 6, scope: !6304)
!6385 = !DILocation(line: 4202, column: 18, scope: !6304)
!6386 = !DILocation(line: 4202, column: 23, scope: !6304)
!6387 = !DILocation(line: 4202, column: 2, scope: !6304)
!6388 = !DILocation(line: 4203, column: 27, scope: !6304)
!6389 = !DILocation(line: 4203, column: 8, scope: !6304)
!6390 = !DILocation(line: 4203, column: 6, scope: !6304)
!6391 = !DILocation(line: 4204, column: 18, scope: !6304)
!6392 = !DILocation(line: 4204, column: 23, scope: !6304)
!6393 = !DILocation(line: 4204, column: 2, scope: !6304)
!6394 = !DILocation(line: 4206, column: 21, scope: !6304)
!6395 = !DILocation(line: 4206, column: 2, scope: !6304)
!6396 = !DILocation(line: 4208, column: 27, scope: !6304)
!6397 = !DILocation(line: 4208, column: 8, scope: !6304)
!6398 = !DILocation(line: 4208, column: 6, scope: !6304)
!6399 = !DILocation(line: 4209, column: 18, scope: !6304)
!6400 = !DILocation(line: 4209, column: 23, scope: !6304)
!6401 = !DILocation(line: 4209, column: 2, scope: !6304)
!6402 = !DILocation(line: 4210, column: 27, scope: !6304)
!6403 = !DILocation(line: 4210, column: 8, scope: !6304)
!6404 = !DILocation(line: 4210, column: 6, scope: !6304)
!6405 = !DILocation(line: 4211, column: 18, scope: !6304)
!6406 = !DILocation(line: 4211, column: 23, scope: !6304)
!6407 = !DILocation(line: 4211, column: 2, scope: !6304)
!6408 = !DILocation(line: 4214, column: 37, scope: !6304)
!6409 = !DILocation(line: 4214, column: 18, scope: !6304)
!6410 = !DILocation(line: 4214, column: 97, scope: !6304)
!6411 = !DILocation(line: 4214, column: 2, scope: !6304)
!6412 = !DILocation(line: 4215, column: 37, scope: !6304)
!6413 = !DILocation(line: 4215, column: 18, scope: !6304)
!6414 = !DILocation(line: 4215, column: 96, scope: !6304)
!6415 = !DILocation(line: 4215, column: 2, scope: !6304)
!6416 = !DILocation(line: 4216, column: 37, scope: !6304)
!6417 = !DILocation(line: 4216, column: 18, scope: !6304)
!6418 = !DILocation(line: 4216, column: 108, scope: !6304)
!6419 = !DILocation(line: 4216, column: 2, scope: !6304)
!6420 = !DILocation(line: 4217, column: 37, scope: !6304)
!6421 = !DILocation(line: 4217, column: 18, scope: !6304)
!6422 = !DILocation(line: 4217, column: 103, scope: !6304)
!6423 = !DILocation(line: 4217, column: 2, scope: !6304)
!6424 = !DILocation(line: 4220, column: 21, scope: !6304)
!6425 = !DILocation(line: 4220, column: 2, scope: !6304)
!6426 = !DILocation(line: 4221, column: 21, scope: !6304)
!6427 = !DILocation(line: 4221, column: 2, scope: !6304)
!6428 = !DILocation(line: 4223, column: 27, scope: !6304)
!6429 = !DILocation(line: 4223, column: 8, scope: !6304)
!6430 = !DILocation(line: 4223, column: 6, scope: !6304)
!6431 = !DILocation(line: 4224, column: 15, scope: !6304)
!6432 = !DILocation(line: 4224, column: 20, scope: !6304)
!6433 = !DILocation(line: 4224, column: 2, scope: !6304)
!6434 = !DILocation(line: 4225, column: 27, scope: !6304)
!6435 = !DILocation(line: 4225, column: 8, scope: !6304)
!6436 = !DILocation(line: 4225, column: 6, scope: !6304)
!6437 = !DILocation(line: 4226, column: 15, scope: !6304)
!6438 = !DILocation(line: 4226, column: 20, scope: !6304)
!6439 = !DILocation(line: 4226, column: 2, scope: !6304)
!6440 = !DILocation(line: 4228, column: 21, scope: !6304)
!6441 = !DILocation(line: 4228, column: 2, scope: !6304)
!6442 = !DILocation(line: 4230, column: 21, scope: !6304)
!6443 = !DILocation(line: 4230, column: 2, scope: !6304)
!6444 = !DILocation(line: 4233, column: 21, scope: !6304)
!6445 = !DILocation(line: 4233, column: 2, scope: !6304)
!6446 = !DILocation(line: 4234, column: 27, scope: !6304)
!6447 = !DILocation(line: 4234, column: 8, scope: !6304)
!6448 = !DILocation(line: 4234, column: 6, scope: !6304)
!6449 = !DILocation(line: 4235, column: 18, scope: !6304)
!6450 = !DILocation(line: 4235, column: 23, scope: !6304)
!6451 = !DILocation(line: 4235, column: 2, scope: !6304)
!6452 = !DILocation(line: 4236, column: 27, scope: !6304)
!6453 = !DILocation(line: 4236, column: 8, scope: !6304)
!6454 = !DILocation(line: 4236, column: 6, scope: !6304)
!6455 = !DILocation(line: 4237, column: 18, scope: !6304)
!6456 = !DILocation(line: 4237, column: 23, scope: !6304)
!6457 = !DILocation(line: 4237, column: 2, scope: !6304)
!6458 = !DILocation(line: 4240, column: 21, scope: !6304)
!6459 = !DILocation(line: 4240, column: 2, scope: !6304)
!6460 = !DILocation(line: 4241, column: 21, scope: !6304)
!6461 = !DILocation(line: 4241, column: 2, scope: !6304)
!6462 = !DILocation(line: 4242, column: 21, scope: !6304)
!6463 = !DILocation(line: 4242, column: 2, scope: !6304)
!6464 = !DILocation(line: 4243, column: 21, scope: !6304)
!6465 = !DILocation(line: 4243, column: 2, scope: !6304)
!6466 = !DILocation(line: 4246, column: 27, scope: !6304)
!6467 = !DILocation(line: 4246, column: 8, scope: !6304)
!6468 = !DILocation(line: 4246, column: 6, scope: !6304)
!6469 = !DILocation(line: 4247, column: 18, scope: !6304)
!6470 = !DILocation(line: 4247, column: 23, scope: !6304)
!6471 = !DILocation(line: 4247, column: 2, scope: !6304)
!6472 = !DILocation(line: 4248, column: 27, scope: !6304)
!6473 = !DILocation(line: 4248, column: 8, scope: !6304)
!6474 = !DILocation(line: 4248, column: 6, scope: !6304)
!6475 = !DILocation(line: 4249, column: 18, scope: !6304)
!6476 = !DILocation(line: 4249, column: 23, scope: !6304)
!6477 = !DILocation(line: 4249, column: 2, scope: !6304)
!6478 = !DILocation(line: 4251, column: 21, scope: !6304)
!6479 = !DILocation(line: 4251, column: 2, scope: !6304)
!6480 = !DILocation(line: 4254, column: 21, scope: !6304)
!6481 = !DILocation(line: 4254, column: 2, scope: !6304)
!6482 = !DILocation(line: 4255, column: 21, scope: !6304)
!6483 = !DILocation(line: 4255, column: 2, scope: !6304)
!6484 = !DILocation(line: 4258, column: 21, scope: !6304)
!6485 = !DILocation(line: 4258, column: 2, scope: !6304)
!6486 = !DILocation(line: 4259, column: 21, scope: !6304)
!6487 = !DILocation(line: 4259, column: 2, scope: !6304)
!6488 = !DILocation(line: 4261, column: 31, scope: !6304)
!6489 = !DILocation(line: 4261, column: 40, scope: !6304)
!6490 = !DILocation(line: 4261, column: 2, scope: !6304)
!6491 = !DILocation(line: 4262, column: 34, scope: !6304)
!6492 = !DILocation(line: 4262, column: 43, scope: !6304)
!6493 = !DILocation(line: 4262, column: 2, scope: !6304)
!6494 = !DILocation(line: 4264, column: 29, scope: !6304)
!6495 = !DILocation(line: 4264, column: 38, scope: !6304)
!6496 = !DILocation(line: 4264, column: 2, scope: !6304)
!6497 = !DILocation(line: 4265, column: 1, scope: !6304)
!6498 = distinct !DISubprogram(name: "ED_operator_uvedit_can_uv_sculpt", scope: !3, file: !3, line: 110, type: !2713, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!6499 = !DILocalVariable(name: "C", arg: 1, scope: !6498, file: !3, line: 110, type: !23)
!6500 = !DILocation(line: 110, column: 62, scope: !6498)
!6501 = !DILocalVariable(name: "sima", scope: !6498, file: !3, line: 112, type: !4824)
!6502 = !DILocation(line: 112, column: 14, scope: !6498)
!6503 = !DILocation(line: 112, column: 40, scope: !6498)
!6504 = !DILocation(line: 112, column: 21, scope: !6498)
!6505 = !DILocalVariable(name: "toolsettings", scope: !6498, file: !3, line: 113, type: !4138)
!6506 = !DILocation(line: 113, column: 16, scope: !6498)
!6507 = !DILocation(line: 113, column: 54, scope: !6498)
!6508 = !DILocation(line: 113, column: 31, scope: !6498)
!6509 = !DILocalVariable(name: "obedit", scope: !6498, file: !3, line: 114, type: !3588)
!6510 = !DILocation(line: 114, column: 10, scope: !6498)
!6511 = !DILocation(line: 114, column: 40, scope: !6498)
!6512 = !DILocation(line: 114, column: 19, scope: !6498)
!6513 = !DILocation(line: 116, column: 36, scope: !6498)
!6514 = !DILocation(line: 116, column: 42, scope: !6498)
!6515 = !DILocation(line: 116, column: 9, scope: !6498)
!6516 = !DILocation(line: 116, column: 50, scope: !6498)
!6517 = !DILocation(line: 116, column: 55, scope: !6498)
!6518 = !DILocation(line: 116, column: 69, scope: !6498)
!6519 = !DILocation(line: 116, column: 53, scope: !6498)
!6520 = !DILocation(line: 0, scope: !6498)
!6521 = !DILocation(line: 116, column: 2, scope: !6498)
!6522 = distinct !DISubprogram(name: "BM_iter_init", scope: !4104, file: !4104, line: 53, type: !6523, scopeLine: 54, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!6523 = !DISubroutineType(types: !6524)
!6524 = !{!2013, !4107, !3441, !13, !56}
!6525 = !DILocalVariable(name: "iter", arg: 1, scope: !6522, file: !4104, line: 53, type: !4107)
!6526 = !DILocation(line: 53, column: 38, scope: !6522)
!6527 = !DILocalVariable(name: "bm", arg: 2, scope: !6522, file: !4104, line: 53, type: !3441)
!6528 = !DILocation(line: 53, column: 51, scope: !6522)
!6529 = !DILocalVariable(name: "itype", arg: 3, scope: !6522, file: !4104, line: 53, type: !13)
!6530 = !DILocation(line: 53, column: 66, scope: !6522)
!6531 = !DILocalVariable(name: "data", arg: 4, scope: !6522, file: !4104, line: 53, type: !56)
!6532 = !DILocation(line: 53, column: 79, scope: !6522)
!6533 = !DILocation(line: 56, column: 16, scope: !6522)
!6534 = !DILocation(line: 56, column: 2, scope: !6522)
!6535 = !DILocation(line: 56, column: 8, scope: !6522)
!6536 = !DILocation(line: 56, column: 14, scope: !6522)
!6537 = !DILocation(line: 59, column: 22, scope: !6522)
!6538 = !DILocation(line: 59, column: 10, scope: !6522)
!6539 = !DILocation(line: 59, column: 2, scope: !6522)
!6540 = !DILocation(line: 63, column: 4, scope: !6541)
!6541 = distinct !DILexicalBlock(scope: !6522, file: !4104, line: 59, column: 29)
!6542 = !DILocation(line: 63, column: 10, scope: !6541)
!6543 = !DILocation(line: 63, column: 16, scope: !6541)
!6544 = !DILocation(line: 64, column: 4, scope: !6541)
!6545 = !DILocation(line: 64, column: 10, scope: !6541)
!6546 = !DILocation(line: 64, column: 16, scope: !6541)
!6547 = !DILocation(line: 65, column: 44, scope: !6541)
!6548 = !DILocation(line: 65, column: 48, scope: !6541)
!6549 = !DILocation(line: 65, column: 4, scope: !6541)
!6550 = !DILocation(line: 65, column: 10, scope: !6541)
!6551 = !DILocation(line: 65, column: 15, scope: !6541)
!6552 = !DILocation(line: 65, column: 28, scope: !6541)
!6553 = !DILocation(line: 65, column: 37, scope: !6541)
!6554 = !DILocation(line: 65, column: 42, scope: !6541)
!6555 = !DILocation(line: 66, column: 4, scope: !6541)
!6556 = !DILocation(line: 70, column: 4, scope: !6541)
!6557 = !DILocation(line: 70, column: 10, scope: !6541)
!6558 = !DILocation(line: 70, column: 16, scope: !6541)
!6559 = !DILocation(line: 71, column: 4, scope: !6541)
!6560 = !DILocation(line: 71, column: 10, scope: !6541)
!6561 = !DILocation(line: 71, column: 16, scope: !6541)
!6562 = !DILocation(line: 72, column: 44, scope: !6541)
!6563 = !DILocation(line: 72, column: 48, scope: !6541)
!6564 = !DILocation(line: 72, column: 4, scope: !6541)
!6565 = !DILocation(line: 72, column: 10, scope: !6541)
!6566 = !DILocation(line: 72, column: 15, scope: !6541)
!6567 = !DILocation(line: 72, column: 28, scope: !6541)
!6568 = !DILocation(line: 72, column: 37, scope: !6541)
!6569 = !DILocation(line: 72, column: 42, scope: !6541)
!6570 = !DILocation(line: 73, column: 4, scope: !6541)
!6571 = !DILocation(line: 77, column: 4, scope: !6541)
!6572 = !DILocation(line: 77, column: 10, scope: !6541)
!6573 = !DILocation(line: 77, column: 16, scope: !6541)
!6574 = !DILocation(line: 78, column: 4, scope: !6541)
!6575 = !DILocation(line: 78, column: 10, scope: !6541)
!6576 = !DILocation(line: 78, column: 16, scope: !6541)
!6577 = !DILocation(line: 79, column: 44, scope: !6541)
!6578 = !DILocation(line: 79, column: 48, scope: !6541)
!6579 = !DILocation(line: 79, column: 4, scope: !6541)
!6580 = !DILocation(line: 79, column: 10, scope: !6541)
!6581 = !DILocation(line: 79, column: 15, scope: !6541)
!6582 = !DILocation(line: 79, column: 28, scope: !6541)
!6583 = !DILocation(line: 79, column: 37, scope: !6541)
!6584 = !DILocation(line: 79, column: 42, scope: !6541)
!6585 = !DILocation(line: 80, column: 4, scope: !6541)
!6586 = !DILocation(line: 84, column: 4, scope: !6541)
!6587 = !DILocation(line: 84, column: 10, scope: !6541)
!6588 = !DILocation(line: 84, column: 16, scope: !6541)
!6589 = !DILocation(line: 85, column: 4, scope: !6541)
!6590 = !DILocation(line: 85, column: 10, scope: !6541)
!6591 = !DILocation(line: 85, column: 16, scope: !6541)
!6592 = !DILocation(line: 86, column: 46, scope: !6541)
!6593 = !DILocation(line: 86, column: 36, scope: !6541)
!6594 = !DILocation(line: 86, column: 4, scope: !6541)
!6595 = !DILocation(line: 86, column: 10, scope: !6541)
!6596 = !DILocation(line: 86, column: 15, scope: !6541)
!6597 = !DILocation(line: 86, column: 28, scope: !6541)
!6598 = !DILocation(line: 86, column: 34, scope: !6541)
!6599 = !DILocation(line: 87, column: 4, scope: !6541)
!6600 = !DILocation(line: 91, column: 4, scope: !6541)
!6601 = !DILocation(line: 91, column: 10, scope: !6541)
!6602 = !DILocation(line: 91, column: 16, scope: !6541)
!6603 = !DILocation(line: 92, column: 4, scope: !6541)
!6604 = !DILocation(line: 92, column: 10, scope: !6541)
!6605 = !DILocation(line: 92, column: 16, scope: !6541)
!6606 = !DILocation(line: 93, column: 46, scope: !6541)
!6607 = !DILocation(line: 93, column: 36, scope: !6541)
!6608 = !DILocation(line: 93, column: 4, scope: !6541)
!6609 = !DILocation(line: 93, column: 10, scope: !6541)
!6610 = !DILocation(line: 93, column: 15, scope: !6541)
!6611 = !DILocation(line: 93, column: 28, scope: !6541)
!6612 = !DILocation(line: 93, column: 34, scope: !6541)
!6613 = !DILocation(line: 94, column: 4, scope: !6541)
!6614 = !DILocation(line: 98, column: 4, scope: !6541)
!6615 = !DILocation(line: 98, column: 10, scope: !6541)
!6616 = !DILocation(line: 98, column: 16, scope: !6541)
!6617 = !DILocation(line: 99, column: 4, scope: !6541)
!6618 = !DILocation(line: 99, column: 10, scope: !6541)
!6619 = !DILocation(line: 99, column: 16, scope: !6541)
!6620 = !DILocation(line: 100, column: 46, scope: !6541)
!6621 = !DILocation(line: 100, column: 36, scope: !6541)
!6622 = !DILocation(line: 100, column: 4, scope: !6541)
!6623 = !DILocation(line: 100, column: 10, scope: !6541)
!6624 = !DILocation(line: 100, column: 15, scope: !6541)
!6625 = !DILocation(line: 100, column: 28, scope: !6541)
!6626 = !DILocation(line: 100, column: 34, scope: !6541)
!6627 = !DILocation(line: 101, column: 4, scope: !6541)
!6628 = !DILocation(line: 105, column: 4, scope: !6541)
!6629 = !DILocation(line: 105, column: 10, scope: !6541)
!6630 = !DILocation(line: 105, column: 16, scope: !6541)
!6631 = !DILocation(line: 106, column: 4, scope: !6541)
!6632 = !DILocation(line: 106, column: 10, scope: !6541)
!6633 = !DILocation(line: 106, column: 16, scope: !6541)
!6634 = !DILocation(line: 107, column: 46, scope: !6541)
!6635 = !DILocation(line: 107, column: 36, scope: !6541)
!6636 = !DILocation(line: 107, column: 4, scope: !6541)
!6637 = !DILocation(line: 107, column: 10, scope: !6541)
!6638 = !DILocation(line: 107, column: 15, scope: !6541)
!6639 = !DILocation(line: 107, column: 28, scope: !6541)
!6640 = !DILocation(line: 107, column: 34, scope: !6541)
!6641 = !DILocation(line: 108, column: 4, scope: !6541)
!6642 = !DILocation(line: 112, column: 4, scope: !6541)
!6643 = !DILocation(line: 112, column: 10, scope: !6541)
!6644 = !DILocation(line: 112, column: 16, scope: !6541)
!6645 = !DILocation(line: 113, column: 4, scope: !6541)
!6646 = !DILocation(line: 113, column: 10, scope: !6541)
!6647 = !DILocation(line: 113, column: 16, scope: !6541)
!6648 = !DILocation(line: 114, column: 46, scope: !6541)
!6649 = !DILocation(line: 114, column: 36, scope: !6541)
!6650 = !DILocation(line: 114, column: 4, scope: !6541)
!6651 = !DILocation(line: 114, column: 10, scope: !6541)
!6652 = !DILocation(line: 114, column: 15, scope: !6541)
!6653 = !DILocation(line: 114, column: 28, scope: !6541)
!6654 = !DILocation(line: 114, column: 34, scope: !6541)
!6655 = !DILocation(line: 115, column: 4, scope: !6541)
!6656 = !DILocation(line: 119, column: 4, scope: !6541)
!6657 = !DILocation(line: 119, column: 10, scope: !6541)
!6658 = !DILocation(line: 119, column: 16, scope: !6541)
!6659 = !DILocation(line: 120, column: 4, scope: !6541)
!6660 = !DILocation(line: 120, column: 10, scope: !6541)
!6661 = !DILocation(line: 120, column: 16, scope: !6541)
!6662 = !DILocation(line: 121, column: 46, scope: !6541)
!6663 = !DILocation(line: 121, column: 36, scope: !6541)
!6664 = !DILocation(line: 121, column: 4, scope: !6541)
!6665 = !DILocation(line: 121, column: 10, scope: !6541)
!6666 = !DILocation(line: 121, column: 15, scope: !6541)
!6667 = !DILocation(line: 121, column: 28, scope: !6541)
!6668 = !DILocation(line: 121, column: 34, scope: !6541)
!6669 = !DILocation(line: 122, column: 4, scope: !6541)
!6670 = !DILocation(line: 126, column: 4, scope: !6541)
!6671 = !DILocation(line: 126, column: 10, scope: !6541)
!6672 = !DILocation(line: 126, column: 16, scope: !6541)
!6673 = !DILocation(line: 127, column: 4, scope: !6541)
!6674 = !DILocation(line: 127, column: 10, scope: !6541)
!6675 = !DILocation(line: 127, column: 16, scope: !6541)
!6676 = !DILocation(line: 128, column: 46, scope: !6541)
!6677 = !DILocation(line: 128, column: 36, scope: !6541)
!6678 = !DILocation(line: 128, column: 4, scope: !6541)
!6679 = !DILocation(line: 128, column: 10, scope: !6541)
!6680 = !DILocation(line: 128, column: 15, scope: !6541)
!6681 = !DILocation(line: 128, column: 28, scope: !6541)
!6682 = !DILocation(line: 128, column: 34, scope: !6541)
!6683 = !DILocation(line: 129, column: 4, scope: !6541)
!6684 = !DILocation(line: 133, column: 4, scope: !6541)
!6685 = !DILocation(line: 133, column: 10, scope: !6541)
!6686 = !DILocation(line: 133, column: 16, scope: !6541)
!6687 = !DILocation(line: 134, column: 4, scope: !6541)
!6688 = !DILocation(line: 134, column: 10, scope: !6541)
!6689 = !DILocation(line: 134, column: 16, scope: !6541)
!6690 = !DILocation(line: 135, column: 46, scope: !6541)
!6691 = !DILocation(line: 135, column: 36, scope: !6541)
!6692 = !DILocation(line: 135, column: 4, scope: !6541)
!6693 = !DILocation(line: 135, column: 10, scope: !6541)
!6694 = !DILocation(line: 135, column: 15, scope: !6541)
!6695 = !DILocation(line: 135, column: 28, scope: !6541)
!6696 = !DILocation(line: 135, column: 34, scope: !6541)
!6697 = !DILocation(line: 136, column: 4, scope: !6541)
!6698 = !DILocation(line: 140, column: 4, scope: !6541)
!6699 = !DILocation(line: 140, column: 10, scope: !6541)
!6700 = !DILocation(line: 140, column: 16, scope: !6541)
!6701 = !DILocation(line: 141, column: 4, scope: !6541)
!6702 = !DILocation(line: 141, column: 10, scope: !6541)
!6703 = !DILocation(line: 141, column: 16, scope: !6541)
!6704 = !DILocation(line: 142, column: 46, scope: !6541)
!6705 = !DILocation(line: 142, column: 36, scope: !6541)
!6706 = !DILocation(line: 142, column: 4, scope: !6541)
!6707 = !DILocation(line: 142, column: 10, scope: !6541)
!6708 = !DILocation(line: 142, column: 15, scope: !6541)
!6709 = !DILocation(line: 142, column: 28, scope: !6541)
!6710 = !DILocation(line: 142, column: 34, scope: !6541)
!6711 = !DILocation(line: 143, column: 4, scope: !6541)
!6712 = !DILocation(line: 147, column: 4, scope: !6541)
!6713 = !DILocation(line: 147, column: 10, scope: !6541)
!6714 = !DILocation(line: 147, column: 16, scope: !6541)
!6715 = !DILocation(line: 148, column: 4, scope: !6541)
!6716 = !DILocation(line: 148, column: 10, scope: !6541)
!6717 = !DILocation(line: 148, column: 16, scope: !6541)
!6718 = !DILocation(line: 149, column: 46, scope: !6541)
!6719 = !DILocation(line: 149, column: 36, scope: !6541)
!6720 = !DILocation(line: 149, column: 4, scope: !6541)
!6721 = !DILocation(line: 149, column: 10, scope: !6541)
!6722 = !DILocation(line: 149, column: 15, scope: !6541)
!6723 = !DILocation(line: 149, column: 28, scope: !6541)
!6724 = !DILocation(line: 149, column: 34, scope: !6541)
!6725 = !DILocation(line: 150, column: 4, scope: !6541)
!6726 = !DILocation(line: 154, column: 4, scope: !6541)
!6727 = !DILocation(line: 158, column: 2, scope: !6522)
!6728 = !DILocation(line: 158, column: 8, scope: !6522)
!6729 = !DILocation(line: 158, column: 14, scope: !6522)
!6730 = !DILocation(line: 160, column: 2, scope: !6522)
!6731 = !DILocation(line: 161, column: 1, scope: !6522)
!6732 = distinct !DISubprogram(name: "sub_v2_v2v2", scope: !4963, file: !4963, line: 338, type: !6733, scopeLine: 339, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!6733 = !DISubroutineType(types: !6734)
!6734 = !{null, !630, !4976, !4976}
!6735 = !DILocalVariable(name: "r", arg: 1, scope: !6732, file: !4963, line: 338, type: !630)
!6736 = !DILocation(line: 338, column: 32, scope: !6732)
!6737 = !DILocalVariable(name: "a", arg: 2, scope: !6732, file: !4963, line: 338, type: !4976)
!6738 = !DILocation(line: 338, column: 50, scope: !6732)
!6739 = !DILocalVariable(name: "b", arg: 3, scope: !6732, file: !4963, line: 338, type: !4976)
!6740 = !DILocation(line: 338, column: 68, scope: !6732)
!6741 = !DILocation(line: 340, column: 9, scope: !6732)
!6742 = !DILocation(line: 340, column: 16, scope: !6732)
!6743 = !DILocation(line: 340, column: 14, scope: !6732)
!6744 = !DILocation(line: 340, column: 2, scope: !6732)
!6745 = !DILocation(line: 340, column: 7, scope: !6732)
!6746 = !DILocation(line: 341, column: 9, scope: !6732)
!6747 = !DILocation(line: 341, column: 16, scope: !6732)
!6748 = !DILocation(line: 341, column: 14, scope: !6732)
!6749 = !DILocation(line: 341, column: 2, scope: !6732)
!6750 = !DILocation(line: 341, column: 7, scope: !6732)
!6751 = !DILocation(line: 342, column: 1, scope: !6732)
!6752 = distinct !DISubprogram(name: "line_point_side_v2", scope: !4963, file: !4963, line: 1002, type: !6753, scopeLine: 1003, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!6753 = !DISubroutineType(types: !6754)
!6754 = !{!192, !4976, !4976, !4976}
!6755 = !DILocalVariable(name: "l1", arg: 1, scope: !6752, file: !4963, line: 1002, type: !4976)
!6756 = !DILocation(line: 1002, column: 46, scope: !6752)
!6757 = !DILocalVariable(name: "l2", arg: 2, scope: !6752, file: !4963, line: 1002, type: !4976)
!6758 = !DILocation(line: 1002, column: 65, scope: !6752)
!6759 = !DILocalVariable(name: "pt", arg: 3, scope: !6752, file: !4963, line: 1002, type: !4976)
!6760 = !DILocation(line: 1002, column: 84, scope: !6752)
!6761 = !DILocation(line: 1004, column: 12, scope: !6752)
!6762 = !DILocation(line: 1004, column: 20, scope: !6752)
!6763 = !DILocation(line: 1004, column: 18, scope: !6752)
!6764 = !DILocation(line: 1004, column: 30, scope: !6752)
!6765 = !DILocation(line: 1004, column: 38, scope: !6752)
!6766 = !DILocation(line: 1004, column: 36, scope: !6752)
!6767 = !DILocation(line: 1004, column: 27, scope: !6752)
!6768 = !DILocation(line: 1005, column: 12, scope: !6752)
!6769 = !DILocation(line: 1005, column: 20, scope: !6752)
!6770 = !DILocation(line: 1005, column: 18, scope: !6752)
!6771 = !DILocation(line: 1005, column: 30, scope: !6752)
!6772 = !DILocation(line: 1005, column: 38, scope: !6752)
!6773 = !DILocation(line: 1005, column: 36, scope: !6752)
!6774 = !DILocation(line: 1005, column: 27, scope: !6752)
!6775 = !DILocation(line: 1004, column: 46, scope: !6752)
!6776 = !DILocation(line: 1004, column: 2, scope: !6752)
!6777 = distinct !DISubprogram(name: "uv_select_all_exec", scope: !3, file: !3, line: 1945, type: !6778, scopeLine: 1946, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!6778 = !DISubroutineType(types: !6779)
!6779 = !{!22, !6780, !6783}
!6780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6781, size: 64)
!6781 = !DIDerivedType(tag: DW_TAG_typedef, name: "bContext", file: !6782, line: 69, baseType: !24)
!6782 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_context.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!6783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6784, size: 64)
!6784 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmOperator", file: !28, line: 348, baseType: !27)
!6785 = !DILocalVariable(name: "C", arg: 1, scope: !6777, file: !3, line: 1945, type: !6780)
!6786 = !DILocation(line: 1945, column: 41, scope: !6777)
!6787 = !DILocalVariable(name: "op", arg: 2, scope: !6777, file: !3, line: 1945, type: !6783)
!6788 = !DILocation(line: 1945, column: 56, scope: !6777)
!6789 = !DILocalVariable(name: "scene", scope: !6777, file: !3, line: 1947, type: !3841)
!6790 = !DILocation(line: 1947, column: 9, scope: !6777)
!6791 = !DILocation(line: 1947, column: 32, scope: !6777)
!6792 = !DILocation(line: 1947, column: 17, scope: !6777)
!6793 = !DILocalVariable(name: "obedit", scope: !6777, file: !3, line: 1948, type: !3588)
!6794 = !DILocation(line: 1948, column: 10, scope: !6777)
!6795 = !DILocation(line: 1948, column: 40, scope: !6777)
!6796 = !DILocation(line: 1948, column: 19, scope: !6777)
!6797 = !DILocalVariable(name: "ima", scope: !6777, file: !3, line: 1949, type: !3164)
!6798 = !DILocation(line: 1949, column: 9, scope: !6777)
!6799 = !DILocation(line: 1949, column: 35, scope: !6777)
!6800 = !DILocation(line: 1949, column: 15, scope: !6777)
!6801 = !DILocalVariable(name: "em", scope: !6777, file: !3, line: 1950, type: !3593)
!6802 = !DILocation(line: 1950, column: 14, scope: !6777)
!6803 = !DILocation(line: 1950, column: 44, scope: !6777)
!6804 = !DILocation(line: 1950, column: 19, scope: !6777)
!6805 = !DILocalVariable(name: "action", scope: !6777, file: !3, line: 1952, type: !22)
!6806 = !DILocation(line: 1952, column: 6, scope: !6777)
!6807 = !DILocation(line: 1952, column: 28, scope: !6777)
!6808 = !DILocation(line: 1952, column: 32, scope: !6777)
!6809 = !DILocation(line: 1952, column: 15, scope: !6777)
!6810 = !DILocation(line: 1954, column: 24, scope: !6777)
!6811 = !DILocation(line: 1954, column: 31, scope: !6777)
!6812 = !DILocation(line: 1954, column: 36, scope: !6777)
!6813 = !DILocation(line: 1954, column: 40, scope: !6777)
!6814 = !DILocation(line: 1954, column: 2, scope: !6777)
!6815 = !DILocation(line: 1956, column: 24, scope: !6777)
!6816 = !DILocation(line: 1956, column: 48, scope: !6777)
!6817 = !DILocation(line: 1956, column: 56, scope: !6777)
!6818 = !DILocation(line: 1956, column: 2, scope: !6777)
!6819 = !DILocation(line: 1958, column: 2, scope: !6777)
!6820 = distinct !DISubprogram(name: "uv_select_all_perform", scope: !3, file: !3, line: 1869, type: !6821, scopeLine: 1870, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!6821 = !DISubroutineType(types: !6822)
!6822 = !{null, !3841, !3164, !3593, !22}
!6823 = !DILocalVariable(name: "scene", arg: 1, scope: !6820, file: !3, line: 1869, type: !3841)
!6824 = !DILocation(line: 1869, column: 42, scope: !6820)
!6825 = !DILocalVariable(name: "ima", arg: 2, scope: !6820, file: !3, line: 1869, type: !3164)
!6826 = !DILocation(line: 1869, column: 56, scope: !6820)
!6827 = !DILocalVariable(name: "em", arg: 3, scope: !6820, file: !3, line: 1869, type: !3593)
!6828 = !DILocation(line: 1869, column: 73, scope: !6820)
!6829 = !DILocalVariable(name: "action", arg: 4, scope: !6820, file: !3, line: 1869, type: !22)
!6830 = !DILocation(line: 1869, column: 81, scope: !6820)
!6831 = !DILocalVariable(name: "ts", scope: !6820, file: !3, line: 1871, type: !4138)
!6832 = !DILocation(line: 1871, column: 16, scope: !6820)
!6833 = !DILocation(line: 1871, column: 21, scope: !6820)
!6834 = !DILocation(line: 1871, column: 28, scope: !6820)
!6835 = !DILocalVariable(name: "efa", scope: !6820, file: !3, line: 1872, type: !3238)
!6836 = !DILocation(line: 1872, column: 10, scope: !6820)
!6837 = !DILocalVariable(name: "l", scope: !6820, file: !3, line: 1873, type: !3220)
!6838 = !DILocation(line: 1873, column: 10, scope: !6820)
!6839 = !DILocalVariable(name: "iter", scope: !6820, file: !3, line: 1874, type: !3856)
!6840 = !DILocation(line: 1874, column: 9, scope: !6820)
!6841 = !DILocalVariable(name: "liter", scope: !6820, file: !3, line: 1874, type: !3856)
!6842 = !DILocation(line: 1874, column: 15, scope: !6820)
!6843 = !DILocalVariable(name: "tf", scope: !6820, file: !3, line: 1875, type: !3945)
!6844 = !DILocation(line: 1875, column: 12, scope: !6820)
!6845 = !DILocalVariable(name: "luv", scope: !6820, file: !3, line: 1876, type: !3240)
!6846 = !DILocation(line: 1876, column: 11, scope: !6820)
!6847 = !DILocalVariable(name: "cd_loop_uv_offset", scope: !6820, file: !3, line: 1878, type: !4165)
!6848 = !DILocation(line: 1878, column: 12, scope: !6820)
!6849 = !DILocation(line: 1878, column: 56, scope: !6820)
!6850 = !DILocation(line: 1878, column: 60, scope: !6820)
!6851 = !DILocation(line: 1878, column: 64, scope: !6820)
!6852 = !DILocation(line: 1878, column: 33, scope: !6820)
!6853 = !DILocalVariable(name: "cd_poly_tex_offset", scope: !6820, file: !3, line: 1879, type: !4165)
!6854 = !DILocation(line: 1879, column: 12, scope: !6820)
!6855 = !DILocation(line: 1879, column: 56, scope: !6820)
!6856 = !DILocation(line: 1879, column: 60, scope: !6820)
!6857 = !DILocation(line: 1879, column: 64, scope: !6820)
!6858 = !DILocation(line: 1879, column: 33, scope: !6820)
!6859 = !DILocation(line: 1881, column: 6, scope: !6860)
!6860 = distinct !DILexicalBlock(scope: !6820, file: !3, line: 1881, column: 6)
!6861 = !DILocation(line: 1881, column: 10, scope: !6860)
!6862 = !DILocation(line: 1881, column: 18, scope: !6860)
!6863 = !DILocation(line: 1881, column: 6, scope: !6820)
!6864 = !DILocation(line: 1883, column: 11, scope: !6865)
!6865 = distinct !DILexicalBlock(scope: !6860, file: !3, line: 1881, column: 39)
!6866 = !DILocation(line: 1883, column: 3, scope: !6865)
!6867 = !DILocation(line: 1885, column: 28, scope: !6868)
!6868 = distinct !DILexicalBlock(scope: !6865, file: !3, line: 1883, column: 19)
!6869 = !DILocation(line: 1885, column: 5, scope: !6868)
!6870 = !DILocation(line: 1886, column: 5, scope: !6868)
!6871 = !DILocation(line: 1888, column: 26, scope: !6868)
!6872 = !DILocation(line: 1888, column: 5, scope: !6868)
!6873 = !DILocation(line: 1889, column: 5, scope: !6868)
!6874 = !DILocation(line: 1891, column: 27, scope: !6868)
!6875 = !DILocation(line: 1891, column: 5, scope: !6868)
!6876 = !DILocation(line: 1892, column: 5, scope: !6868)
!6877 = !DILocation(line: 1894, column: 22, scope: !6868)
!6878 = !DILocation(line: 1894, column: 5, scope: !6868)
!6879 = !DILocation(line: 1895, column: 27, scope: !6868)
!6880 = !DILocation(line: 1895, column: 5, scope: !6868)
!6881 = !DILocation(line: 1896, column: 5, scope: !6868)
!6882 = !DILocation(line: 1898, column: 2, scope: !6865)
!6883 = !DILocation(line: 1900, column: 7, scope: !6884)
!6884 = distinct !DILexicalBlock(scope: !6885, file: !3, line: 1900, column: 7)
!6885 = distinct !DILexicalBlock(scope: !6860, file: !3, line: 1899, column: 7)
!6886 = !DILocation(line: 1900, column: 14, scope: !6884)
!6887 = !DILocation(line: 1900, column: 7, scope: !6885)
!6888 = !DILocation(line: 1901, column: 11, scope: !6889)
!6889 = distinct !DILexicalBlock(scope: !6884, file: !3, line: 1900, column: 29)
!6890 = !DILocation(line: 1902, column: 4, scope: !6891)
!6891 = distinct !DILexicalBlock(scope: !6889, file: !3, line: 1902, column: 4)
!6892 = !DILocation(line: 1902, column: 4, scope: !6893)
!6893 = distinct !DILexicalBlock(scope: !6891, file: !3, line: 1902, column: 4)
!6894 = !DILocation(line: 1903, column: 10, scope: !6895)
!6895 = distinct !DILexicalBlock(scope: !6893, file: !3, line: 1902, column: 56)
!6896 = !DILocation(line: 1903, column: 8, scope: !6895)
!6897 = !DILocation(line: 1905, column: 35, scope: !6898)
!6898 = distinct !DILexicalBlock(scope: !6895, file: !3, line: 1905, column: 9)
!6899 = !DILocation(line: 1905, column: 42, scope: !6898)
!6900 = !DILocation(line: 1905, column: 47, scope: !6898)
!6901 = !DILocation(line: 1905, column: 52, scope: !6898)
!6902 = !DILocation(line: 1905, column: 10, scope: !6898)
!6903 = !DILocation(line: 1905, column: 9, scope: !6895)
!6904 = !DILocation(line: 1906, column: 6, scope: !6898)
!6905 = !DILocation(line: 1908, column: 5, scope: !6906)
!6906 = distinct !DILexicalBlock(scope: !6895, file: !3, line: 1908, column: 5)
!6907 = !DILocation(line: 1908, column: 5, scope: !6908)
!6908 = distinct !DILexicalBlock(scope: !6906, file: !3, line: 1908, column: 5)
!6909 = !DILocation(line: 1909, column: 12, scope: !6910)
!6910 = distinct !DILexicalBlock(scope: !6908, file: !3, line: 1908, column: 53)
!6911 = !DILocation(line: 1909, column: 10, scope: !6910)
!6912 = !DILocation(line: 1911, column: 10, scope: !6913)
!6913 = distinct !DILexicalBlock(scope: !6910, file: !3, line: 1911, column: 10)
!6914 = !DILocation(line: 1911, column: 15, scope: !6913)
!6915 = !DILocation(line: 1911, column: 20, scope: !6913)
!6916 = !DILocation(line: 1911, column: 10, scope: !6910)
!6917 = !DILocation(line: 1912, column: 14, scope: !6918)
!6918 = distinct !DILexicalBlock(scope: !6913, file: !3, line: 1911, column: 39)
!6919 = !DILocation(line: 1913, column: 7, scope: !6918)
!6920 = !DILocation(line: 1915, column: 5, scope: !6910)
!6921 = distinct !{!6921, !6905, !6922}
!6922 = !DILocation(line: 1915, column: 5, scope: !6906)
!6923 = !DILocation(line: 1916, column: 4, scope: !6895)
!6924 = distinct !{!6924, !6890, !6925}
!6925 = !DILocation(line: 1916, column: 4, scope: !6891)
!6926 = !DILocation(line: 1917, column: 3, scope: !6889)
!6927 = !DILocation(line: 1920, column: 3, scope: !6928)
!6928 = distinct !DILexicalBlock(scope: !6885, file: !3, line: 1920, column: 3)
!6929 = !DILocation(line: 1920, column: 3, scope: !6930)
!6930 = distinct !DILexicalBlock(scope: !6928, file: !3, line: 1920, column: 3)
!6931 = !DILocation(line: 1921, column: 9, scope: !6932)
!6932 = distinct !DILexicalBlock(scope: !6930, file: !3, line: 1920, column: 55)
!6933 = !DILocation(line: 1921, column: 7, scope: !6932)
!6934 = !DILocation(line: 1923, column: 34, scope: !6935)
!6935 = distinct !DILexicalBlock(scope: !6932, file: !3, line: 1923, column: 8)
!6936 = !DILocation(line: 1923, column: 41, scope: !6935)
!6937 = !DILocation(line: 1923, column: 46, scope: !6935)
!6938 = !DILocation(line: 1923, column: 51, scope: !6935)
!6939 = !DILocation(line: 1923, column: 9, scope: !6935)
!6940 = !DILocation(line: 1923, column: 8, scope: !6932)
!6941 = !DILocation(line: 1924, column: 5, scope: !6935)
!6942 = !DILocation(line: 1926, column: 4, scope: !6943)
!6943 = distinct !DILexicalBlock(scope: !6932, file: !3, line: 1926, column: 4)
!6944 = !DILocation(line: 1926, column: 4, scope: !6945)
!6945 = distinct !DILexicalBlock(scope: !6943, file: !3, line: 1926, column: 4)
!6946 = !DILocation(line: 1927, column: 11, scope: !6947)
!6947 = distinct !DILexicalBlock(scope: !6945, file: !3, line: 1926, column: 52)
!6948 = !DILocation(line: 1927, column: 9, scope: !6947)
!6949 = !DILocation(line: 1929, column: 13, scope: !6947)
!6950 = !DILocation(line: 1929, column: 5, scope: !6947)
!6951 = !DILocation(line: 1931, column: 7, scope: !6952)
!6952 = distinct !DILexicalBlock(scope: !6947, file: !3, line: 1929, column: 21)
!6953 = !DILocation(line: 1931, column: 12, scope: !6952)
!6954 = !DILocation(line: 1931, column: 17, scope: !6952)
!6955 = !DILocation(line: 1932, column: 7, scope: !6952)
!6956 = !DILocation(line: 1934, column: 7, scope: !6952)
!6957 = !DILocation(line: 1934, column: 12, scope: !6952)
!6958 = !DILocation(line: 1934, column: 17, scope: !6952)
!6959 = !DILocation(line: 1935, column: 7, scope: !6952)
!6960 = !DILocation(line: 1937, column: 7, scope: !6952)
!6961 = !DILocation(line: 1937, column: 12, scope: !6952)
!6962 = !DILocation(line: 1937, column: 17, scope: !6952)
!6963 = !DILocation(line: 1938, column: 7, scope: !6952)
!6964 = !DILocation(line: 1940, column: 4, scope: !6947)
!6965 = distinct !{!6965, !6942, !6966}
!6966 = !DILocation(line: 1940, column: 4, scope: !6943)
!6967 = !DILocation(line: 1941, column: 3, scope: !6932)
!6968 = distinct !{!6968, !6927, !6969}
!6969 = !DILocation(line: 1941, column: 3, scope: !6928)
!6970 = !DILocation(line: 1943, column: 1, scope: !6820)
!6971 = distinct !DISubprogram(name: "uv_select_exec", scope: !3, file: !3, line: 2260, type: !6778, scopeLine: 2261, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!6972 = !DILocalVariable(name: "C", arg: 1, scope: !6971, file: !3, line: 2260, type: !6780)
!6973 = !DILocation(line: 2260, column: 37, scope: !6971)
!6974 = !DILocalVariable(name: "op", arg: 2, scope: !6971, file: !3, line: 2260, type: !6783)
!6975 = !DILocation(line: 2260, column: 52, scope: !6971)
!6976 = !DILocalVariable(name: "co", scope: !6971, file: !3, line: 2262, type: !769)
!6977 = !DILocation(line: 2262, column: 8, scope: !6971)
!6978 = !DILocalVariable(name: "extend", scope: !6971, file: !3, line: 2263, type: !2013)
!6979 = !DILocation(line: 2263, column: 7, scope: !6971)
!6980 = !DILocalVariable(name: "loop", scope: !6971, file: !3, line: 2263, type: !2013)
!6981 = !DILocation(line: 2263, column: 15, scope: !6971)
!6982 = !DILocation(line: 2265, column: 22, scope: !6971)
!6983 = !DILocation(line: 2265, column: 26, scope: !6971)
!6984 = !DILocation(line: 2265, column: 43, scope: !6971)
!6985 = !DILocation(line: 2265, column: 2, scope: !6971)
!6986 = !DILocation(line: 2266, column: 27, scope: !6971)
!6987 = !DILocation(line: 2266, column: 31, scope: !6971)
!6988 = !DILocation(line: 2266, column: 11, scope: !6971)
!6989 = !DILocation(line: 2266, column: 9, scope: !6971)
!6990 = !DILocation(line: 2267, column: 7, scope: !6971)
!6991 = !DILocation(line: 2269, column: 25, scope: !6971)
!6992 = !DILocation(line: 2269, column: 28, scope: !6971)
!6993 = !DILocation(line: 2269, column: 32, scope: !6971)
!6994 = !DILocation(line: 2269, column: 40, scope: !6971)
!6995 = !DILocation(line: 2269, column: 9, scope: !6971)
!6996 = !DILocation(line: 2269, column: 2, scope: !6971)
!6997 = distinct !DISubprogram(name: "uv_select_invoke", scope: !3, file: !3, line: 2272, type: !6998, scopeLine: 2273, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!6998 = !DISubroutineType(types: !6999)
!6999 = !{!22, !6780, !6783, !7000}
!7000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7001, size: 64)
!7001 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7002)
!7002 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmEvent", file: !8, line: 460, baseType: !2618)
!7003 = !DILocalVariable(name: "C", arg: 1, scope: !6997, file: !3, line: 2272, type: !6780)
!7004 = !DILocation(line: 2272, column: 39, scope: !6997)
!7005 = !DILocalVariable(name: "op", arg: 2, scope: !6997, file: !3, line: 2272, type: !6783)
!7006 = !DILocation(line: 2272, column: 54, scope: !6997)
!7007 = !DILocalVariable(name: "event", arg: 3, scope: !6997, file: !3, line: 2272, type: !7000)
!7008 = !DILocation(line: 2272, column: 73, scope: !6997)
!7009 = !DILocalVariable(name: "ar", scope: !6997, file: !3, line: 2274, type: !7010)
!7010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7011, size: 64)
!7011 = !DIDerivedType(tag: DW_TAG_typedef, name: "ARegion", file: !110, line: 267, baseType: !739)
!7012 = !DILocation(line: 2274, column: 11, scope: !6997)
!7013 = !DILocation(line: 2274, column: 30, scope: !6997)
!7014 = !DILocation(line: 2274, column: 16, scope: !6997)
!7015 = !DILocalVariable(name: "co", scope: !6997, file: !3, line: 2275, type: !769)
!7016 = !DILocation(line: 2275, column: 8, scope: !6997)
!7017 = !DILocation(line: 2277, column: 28, scope: !6997)
!7018 = !DILocation(line: 2277, column: 32, scope: !6997)
!7019 = !DILocation(line: 2277, column: 37, scope: !6997)
!7020 = !DILocation(line: 2277, column: 44, scope: !6997)
!7021 = !DILocation(line: 2277, column: 53, scope: !6997)
!7022 = !DILocation(line: 2277, column: 60, scope: !6997)
!7023 = !DILocation(line: 2277, column: 70, scope: !6997)
!7024 = !DILocation(line: 2277, column: 78, scope: !6997)
!7025 = !DILocation(line: 2277, column: 2, scope: !6997)
!7026 = !DILocation(line: 2278, column: 22, scope: !6997)
!7027 = !DILocation(line: 2278, column: 26, scope: !6997)
!7028 = !DILocation(line: 2278, column: 43, scope: !6997)
!7029 = !DILocation(line: 2278, column: 2, scope: !6997)
!7030 = !DILocation(line: 2280, column: 24, scope: !6997)
!7031 = !DILocation(line: 2280, column: 27, scope: !6997)
!7032 = !DILocation(line: 2280, column: 9, scope: !6997)
!7033 = !DILocation(line: 2280, column: 2, scope: !6997)
!7034 = distinct !DISubprogram(name: "uv_mouse_select", scope: !3, file: !3, line: 2001, type: !7035, scopeLine: 2002, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!7035 = !DISubroutineType(types: !7036)
!7036 = !{!22, !6780, !4976, !2013, !2013}
!7037 = !DILocalVariable(name: "C", arg: 1, scope: !7034, file: !3, line: 2001, type: !6780)
!7038 = !DILocation(line: 2001, column: 38, scope: !7034)
!7039 = !DILocalVariable(name: "co", arg: 2, scope: !7034, file: !3, line: 2001, type: !4976)
!7040 = !DILocation(line: 2001, column: 53, scope: !7034)
!7041 = !DILocalVariable(name: "extend", arg: 3, scope: !7034, file: !3, line: 2001, type: !2013)
!7042 = !DILocation(line: 2001, column: 65, scope: !7034)
!7043 = !DILocalVariable(name: "loop", arg: 4, scope: !7034, file: !3, line: 2001, type: !2013)
!7044 = !DILocation(line: 2001, column: 78, scope: !7034)
!7045 = !DILocalVariable(name: "sima", scope: !7034, file: !3, line: 2003, type: !4824)
!7046 = !DILocation(line: 2003, column: 14, scope: !7034)
!7047 = !DILocation(line: 2003, column: 40, scope: !7034)
!7048 = !DILocation(line: 2003, column: 21, scope: !7034)
!7049 = !DILocalVariable(name: "scene", scope: !7034, file: !3, line: 2004, type: !3841)
!7050 = !DILocation(line: 2004, column: 9, scope: !7034)
!7051 = !DILocation(line: 2004, column: 32, scope: !7034)
!7052 = !DILocation(line: 2004, column: 17, scope: !7034)
!7053 = !DILocalVariable(name: "ts", scope: !7034, file: !3, line: 2005, type: !4138)
!7054 = !DILocation(line: 2005, column: 16, scope: !7034)
!7055 = !DILocation(line: 2005, column: 21, scope: !7034)
!7056 = !DILocation(line: 2005, column: 28, scope: !7034)
!7057 = !DILocalVariable(name: "obedit", scope: !7034, file: !3, line: 2006, type: !3588)
!7058 = !DILocation(line: 2006, column: 10, scope: !7034)
!7059 = !DILocation(line: 2006, column: 40, scope: !7034)
!7060 = !DILocation(line: 2006, column: 19, scope: !7034)
!7061 = !DILocalVariable(name: "ima", scope: !7034, file: !3, line: 2007, type: !3164)
!7062 = !DILocation(line: 2007, column: 9, scope: !7034)
!7063 = !DILocation(line: 2007, column: 35, scope: !7034)
!7064 = !DILocation(line: 2007, column: 15, scope: !7034)
!7065 = !DILocalVariable(name: "em", scope: !7034, file: !3, line: 2008, type: !3593)
!7066 = !DILocation(line: 2008, column: 14, scope: !7034)
!7067 = !DILocation(line: 2008, column: 44, scope: !7034)
!7068 = !DILocation(line: 2008, column: 19, scope: !7034)
!7069 = !DILocalVariable(name: "efa", scope: !7034, file: !3, line: 2009, type: !3238)
!7070 = !DILocation(line: 2009, column: 10, scope: !7034)
!7071 = !DILocalVariable(name: "l", scope: !7034, file: !3, line: 2010, type: !3220)
!7072 = !DILocation(line: 2010, column: 10, scope: !7034)
!7073 = !DILocalVariable(name: "iter", scope: !7034, file: !3, line: 2011, type: !3856)
!7074 = !DILocation(line: 2011, column: 9, scope: !7034)
!7075 = !DILocalVariable(name: "liter", scope: !7034, file: !3, line: 2011, type: !3856)
!7076 = !DILocation(line: 2011, column: 15, scope: !7034)
!7077 = !DILocalVariable(name: "tf", scope: !7034, file: !3, line: 2012, type: !3945)
!7078 = !DILocation(line: 2012, column: 12, scope: !7034)
!7079 = !DILocalVariable(name: "luv", scope: !7034, file: !3, line: 2013, type: !3240)
!7080 = !DILocation(line: 2013, column: 11, scope: !7034)
!7081 = !DILocalVariable(name: "hit", scope: !7034, file: !3, line: 2014, type: !5141)
!7082 = !DILocation(line: 2014, column: 13, scope: !7034)
!7083 = !DILocalVariable(name: "i", scope: !7034, file: !3, line: 2015, type: !22)
!7084 = !DILocation(line: 2015, column: 6, scope: !7034)
!7085 = !DILocalVariable(name: "selectmode", scope: !7034, file: !3, line: 2015, type: !22)
!7086 = !DILocation(line: 2015, column: 9, scope: !7034)
!7087 = !DILocalVariable(name: "sticky", scope: !7034, file: !3, line: 2015, type: !22)
!7088 = !DILocation(line: 2015, column: 21, scope: !7034)
!7089 = !DILocalVariable(name: "sync", scope: !7034, file: !3, line: 2015, type: !22)
!7090 = !DILocation(line: 2015, column: 29, scope: !7034)
!7091 = !DILocalVariable(name: "hitv", scope: !7034, file: !3, line: 2015, type: !7092)
!7092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !22, size: 64)
!7093 = !DILocation(line: 2015, column: 36, scope: !7034)
!7094 = !DILocalVariable(name: "select", scope: !7034, file: !3, line: 2016, type: !2013)
!7095 = !DILocation(line: 2016, column: 7, scope: !7034)
!7096 = !DILocalVariable(name: "flush", scope: !7034, file: !3, line: 2017, type: !22)
!7097 = !DILocation(line: 2017, column: 6, scope: !7034)
!7098 = !DILocalVariable(name: "hitlen", scope: !7034, file: !3, line: 2017, type: !22)
!7099 = !DILocation(line: 2017, column: 17, scope: !7034)
!7100 = !DILocalVariable(name: "limit", scope: !7034, file: !3, line: 2018, type: !769)
!7101 = !DILocation(line: 2018, column: 8, scope: !7034)
!7102 = !DILocalVariable(name: "hituv", scope: !7034, file: !3, line: 2018, type: !7103)
!7103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !630, size: 64)
!7104 = !DILocation(line: 2018, column: 20, scope: !7034)
!7105 = !DILocalVariable(name: "penalty", scope: !7034, file: !3, line: 2019, type: !769)
!7106 = !DILocation(line: 2019, column: 8, scope: !7034)
!7107 = !DILocalVariable(name: "cd_loop_uv_offset", scope: !7034, file: !3, line: 2021, type: !4165)
!7108 = !DILocation(line: 2021, column: 12, scope: !7034)
!7109 = !DILocation(line: 2021, column: 56, scope: !7034)
!7110 = !DILocation(line: 2021, column: 60, scope: !7034)
!7111 = !DILocation(line: 2021, column: 64, scope: !7034)
!7112 = !DILocation(line: 2021, column: 33, scope: !7034)
!7113 = !DILocalVariable(name: "cd_poly_tex_offset", scope: !7034, file: !3, line: 2022, type: !4165)
!7114 = !DILocation(line: 2022, column: 12, scope: !7034)
!7115 = !DILocation(line: 2022, column: 56, scope: !7034)
!7116 = !DILocation(line: 2022, column: 60, scope: !7034)
!7117 = !DILocation(line: 2022, column: 64, scope: !7034)
!7118 = !DILocation(line: 2022, column: 33, scope: !7034)
!7119 = !DILocation(line: 2030, column: 24, scope: !7034)
!7120 = !DILocation(line: 2030, column: 30, scope: !7034)
!7121 = !DILocation(line: 2030, column: 2, scope: !7034)
!7122 = !DILocation(line: 2031, column: 24, scope: !7034)
!7123 = !DILocation(line: 2031, column: 30, scope: !7034)
!7124 = !DILocation(line: 2031, column: 47, scope: !7034)
!7125 = !DILocation(line: 2031, column: 54, scope: !7034)
!7126 = !DILocation(line: 2031, column: 60, scope: !7034)
!7127 = !DILocation(line: 2031, column: 44, scope: !7034)
!7128 = !DILocation(line: 2031, column: 2, scope: !7034)
!7129 = !DILocation(line: 2034, column: 6, scope: !7130)
!7130 = distinct !DILexicalBlock(scope: !7034, file: !3, line: 2034, column: 6)
!7131 = !DILocation(line: 2034, column: 10, scope: !7130)
!7132 = !DILocation(line: 2034, column: 18, scope: !7130)
!7133 = !DILocation(line: 2034, column: 6, scope: !7034)
!7134 = !DILocation(line: 2035, column: 8, scope: !7135)
!7135 = distinct !DILexicalBlock(scope: !7130, file: !3, line: 2034, column: 39)
!7136 = !DILocation(line: 2037, column: 7, scope: !7137)
!7137 = distinct !DILexicalBlock(scope: !7135, file: !3, line: 2037, column: 7)
!7138 = !DILocation(line: 2037, column: 11, scope: !7137)
!7139 = !DILocation(line: 2037, column: 22, scope: !7137)
!7140 = !DILocation(line: 2037, column: 7, scope: !7135)
!7141 = !DILocation(line: 2038, column: 15, scope: !7137)
!7142 = !DILocation(line: 2038, column: 4, scope: !7137)
!7143 = !DILocation(line: 2039, column: 12, scope: !7144)
!7144 = distinct !DILexicalBlock(scope: !7137, file: !3, line: 2039, column: 12)
!7145 = !DILocation(line: 2039, column: 16, scope: !7144)
!7146 = !DILocation(line: 2039, column: 27, scope: !7144)
!7147 = !DILocation(line: 2039, column: 12, scope: !7137)
!7148 = !DILocation(line: 2040, column: 15, scope: !7144)
!7149 = !DILocation(line: 2040, column: 4, scope: !7144)
!7150 = !DILocation(line: 2042, column: 15, scope: !7144)
!7151 = !DILocation(line: 2044, column: 10, scope: !7135)
!7152 = !DILocation(line: 2045, column: 2, scope: !7135)
!7153 = !DILocation(line: 2047, column: 8, scope: !7154)
!7154 = distinct !DILexicalBlock(scope: !7130, file: !3, line: 2046, column: 7)
!7155 = !DILocation(line: 2048, column: 16, scope: !7154)
!7156 = !DILocation(line: 2048, column: 20, scope: !7154)
!7157 = !DILocation(line: 2048, column: 14, scope: !7154)
!7158 = !DILocation(line: 2049, column: 13, scope: !7154)
!7159 = !DILocation(line: 2049, column: 12, scope: !7154)
!7160 = !DILocation(line: 2049, column: 21, scope: !7154)
!7161 = !DILocation(line: 2049, column: 27, scope: !7154)
!7162 = !DILocation(line: 2049, column: 10, scope: !7154)
!7163 = !DILocation(line: 2053, column: 6, scope: !7164)
!7164 = distinct !DILexicalBlock(scope: !7034, file: !3, line: 2053, column: 6)
!7165 = !DILocation(line: 2053, column: 6, scope: !7034)
!7166 = !DILocation(line: 2055, column: 24, scope: !7167)
!7167 = distinct !DILexicalBlock(scope: !7164, file: !3, line: 2053, column: 12)
!7168 = !DILocation(line: 2055, column: 31, scope: !7167)
!7169 = !DILocation(line: 2055, column: 36, scope: !7167)
!7170 = !DILocation(line: 2055, column: 40, scope: !7167)
!7171 = !DILocation(line: 2055, column: 3, scope: !7167)
!7172 = !DILocation(line: 2056, column: 11, scope: !7173)
!7173 = distinct !DILexicalBlock(scope: !7167, file: !3, line: 2056, column: 7)
!7174 = !DILocation(line: 2056, column: 15, scope: !7173)
!7175 = !DILocation(line: 2056, column: 7, scope: !7167)
!7176 = !DILocation(line: 2057, column: 4, scope: !7177)
!7177 = distinct !DILexicalBlock(scope: !7173, file: !3, line: 2056, column: 24)
!7178 = !DILocation(line: 2060, column: 10, scope: !7167)
!7179 = !DILocation(line: 2061, column: 2, scope: !7167)
!7180 = !DILocation(line: 2062, column: 11, scope: !7181)
!7181 = distinct !DILexicalBlock(scope: !7164, file: !3, line: 2062, column: 11)
!7182 = !DILocation(line: 2062, column: 22, scope: !7181)
!7183 = !DILocation(line: 2062, column: 11, scope: !7164)
!7184 = !DILocation(line: 2064, column: 24, scope: !7185)
!7185 = distinct !DILexicalBlock(scope: !7181, file: !3, line: 2062, column: 43)
!7186 = !DILocation(line: 2064, column: 31, scope: !7185)
!7187 = !DILocation(line: 2064, column: 36, scope: !7185)
!7188 = !DILocation(line: 2064, column: 40, scope: !7185)
!7189 = !DILocation(line: 2064, column: 44, scope: !7185)
!7190 = !DILocation(line: 2064, column: 3, scope: !7185)
!7191 = !DILocation(line: 2065, column: 11, scope: !7192)
!7192 = distinct !DILexicalBlock(scope: !7185, file: !3, line: 2065, column: 7)
!7193 = !DILocation(line: 2065, column: 15, scope: !7192)
!7194 = !DILocation(line: 2065, column: 7, scope: !7185)
!7195 = !DILocation(line: 2066, column: 4, scope: !7196)
!7196 = distinct !DILexicalBlock(scope: !7192, file: !3, line: 2065, column: 24)
!7197 = !DILocation(line: 2070, column: 11, scope: !7185)
!7198 = !DILocation(line: 2070, column: 9, scope: !7185)
!7199 = !DILocation(line: 2071, column: 11, scope: !7185)
!7200 = !DILocation(line: 2071, column: 9, scope: !7185)
!7201 = !DILocation(line: 2072, column: 13, scope: !7185)
!7202 = !DILocation(line: 2072, column: 23, scope: !7185)
!7203 = !DILocation(line: 2072, column: 28, scope: !7185)
!7204 = !DILocation(line: 2072, column: 3, scope: !7185)
!7205 = !DILocation(line: 2074, column: 22, scope: !7185)
!7206 = !DILocation(line: 2074, column: 3, scope: !7185)
!7207 = !DILocation(line: 2074, column: 12, scope: !7185)
!7208 = !DILocation(line: 2074, column: 20, scope: !7185)
!7209 = !DILocation(line: 2075, column: 27, scope: !7185)
!7210 = !DILocation(line: 2075, column: 32, scope: !7185)
!7211 = !DILocation(line: 2075, column: 23, scope: !7185)
!7212 = !DILocation(line: 2075, column: 3, scope: !7185)
!7213 = !DILocation(line: 2075, column: 13, scope: !7185)
!7214 = !DILocation(line: 2075, column: 21, scope: !7185)
!7215 = !DILocation(line: 2077, column: 16, scope: !7185)
!7216 = !DILocation(line: 2077, column: 21, scope: !7185)
!7217 = !DILocation(line: 2077, column: 10, scope: !7185)
!7218 = !DILocation(line: 2078, column: 2, scope: !7185)
!7219 = !DILocation(line: 2079, column: 11, scope: !7220)
!7220 = distinct !DILexicalBlock(scope: !7181, file: !3, line: 2079, column: 11)
!7221 = !DILocation(line: 2079, column: 22, scope: !7220)
!7222 = !DILocation(line: 2079, column: 11, scope: !7181)
!7223 = !DILocation(line: 2081, column: 24, scope: !7224)
!7224 = distinct !DILexicalBlock(scope: !7220, file: !3, line: 2079, column: 41)
!7225 = !DILocation(line: 2081, column: 31, scope: !7224)
!7226 = !DILocation(line: 2081, column: 36, scope: !7224)
!7227 = !DILocation(line: 2081, column: 40, scope: !7224)
!7228 = !DILocation(line: 2081, column: 3, scope: !7224)
!7229 = !DILocation(line: 2082, column: 11, scope: !7230)
!7230 = distinct !DILexicalBlock(scope: !7224, file: !3, line: 2082, column: 7)
!7231 = !DILocation(line: 2082, column: 15, scope: !7230)
!7232 = !DILocation(line: 2082, column: 7, scope: !7224)
!7233 = !DILocation(line: 2083, column: 4, scope: !7234)
!7234 = distinct !DILexicalBlock(scope: !7230, file: !3, line: 2082, column: 24)
!7235 = !DILocation(line: 2087, column: 11, scope: !7224)
!7236 = !DILocation(line: 2087, column: 9, scope: !7224)
!7237 = !DILocation(line: 2088, column: 11, scope: !7224)
!7238 = !DILocation(line: 2088, column: 9, scope: !7224)
!7239 = !DILocation(line: 2089, column: 13, scope: !7224)
!7240 = !DILocation(line: 2089, column: 23, scope: !7224)
!7241 = !DILocation(line: 2089, column: 28, scope: !7224)
!7242 = !DILocation(line: 2089, column: 3, scope: !7224)
!7243 = !DILocation(line: 2091, column: 22, scope: !7224)
!7244 = !DILocation(line: 2091, column: 3, scope: !7224)
!7245 = !DILocation(line: 2091, column: 12, scope: !7224)
!7246 = !DILocation(line: 2091, column: 20, scope: !7224)
!7247 = !DILocation(line: 2092, column: 43, scope: !7224)
!7248 = !DILocation(line: 2092, column: 3, scope: !7224)
!7249 = !DILocation(line: 2092, column: 13, scope: !7224)
!7250 = !DILocation(line: 2092, column: 20, scope: !7224)
!7251 = !DILocation(line: 2092, column: 31, scope: !7224)
!7252 = !DILocation(line: 2092, column: 36, scope: !7224)
!7253 = !DILocation(line: 2092, column: 25, scope: !7224)
!7254 = !DILocation(line: 2092, column: 41, scope: !7224)
!7255 = !DILocation(line: 2093, column: 27, scope: !7224)
!7256 = !DILocation(line: 2093, column: 32, scope: !7224)
!7257 = !DILocation(line: 2093, column: 23, scope: !7224)
!7258 = !DILocation(line: 2093, column: 3, scope: !7224)
!7259 = !DILocation(line: 2093, column: 13, scope: !7224)
!7260 = !DILocation(line: 2093, column: 21, scope: !7224)
!7261 = !DILocation(line: 2094, column: 48, scope: !7224)
!7262 = !DILocation(line: 2094, column: 58, scope: !7224)
!7263 = !DILocation(line: 2094, column: 44, scope: !7224)
!7264 = !DILocation(line: 2094, column: 3, scope: !7224)
!7265 = !DILocation(line: 2094, column: 14, scope: !7224)
!7266 = !DILocation(line: 2094, column: 21, scope: !7224)
!7267 = !DILocation(line: 2094, column: 32, scope: !7224)
!7268 = !DILocation(line: 2094, column: 37, scope: !7224)
!7269 = !DILocation(line: 2094, column: 26, scope: !7224)
!7270 = !DILocation(line: 2094, column: 42, scope: !7224)
!7271 = !DILocation(line: 2096, column: 16, scope: !7224)
!7272 = !DILocation(line: 2096, column: 21, scope: !7224)
!7273 = !DILocation(line: 2096, column: 10, scope: !7224)
!7274 = !DILocation(line: 2097, column: 2, scope: !7224)
!7275 = !DILocation(line: 2098, column: 11, scope: !7276)
!7276 = distinct !DILexicalBlock(scope: !7220, file: !3, line: 2098, column: 11)
!7277 = !DILocation(line: 2098, column: 22, scope: !7276)
!7278 = !DILocation(line: 2098, column: 11, scope: !7220)
!7279 = !DILocation(line: 2100, column: 24, scope: !7280)
!7280 = distinct !DILexicalBlock(scope: !7276, file: !3, line: 2098, column: 41)
!7281 = !DILocation(line: 2100, column: 31, scope: !7280)
!7282 = !DILocation(line: 2100, column: 36, scope: !7280)
!7283 = !DILocation(line: 2100, column: 40, scope: !7280)
!7284 = !DILocation(line: 2100, column: 3, scope: !7280)
!7285 = !DILocation(line: 2101, column: 11, scope: !7286)
!7286 = distinct !DILexicalBlock(scope: !7280, file: !3, line: 2101, column: 7)
!7287 = !DILocation(line: 2101, column: 15, scope: !7286)
!7288 = !DILocation(line: 2101, column: 7, scope: !7280)
!7289 = !DILocation(line: 2102, column: 4, scope: !7290)
!7290 = distinct !DILexicalBlock(scope: !7286, file: !3, line: 2101, column: 24)
!7291 = !DILocation(line: 2106, column: 27, scope: !7280)
!7292 = !DILocation(line: 2106, column: 31, scope: !7280)
!7293 = !DILocation(line: 2106, column: 39, scope: !7280)
!7294 = !DILocation(line: 2106, column: 3, scope: !7280)
!7295 = !DILocation(line: 2110, column: 11, scope: !7280)
!7296 = !DILocation(line: 2110, column: 9, scope: !7280)
!7297 = !DILocation(line: 2111, column: 11, scope: !7280)
!7298 = !DILocation(line: 2111, column: 9, scope: !7280)
!7299 = !DILocation(line: 2112, column: 3, scope: !7300)
!7300 = distinct !DILexicalBlock(scope: !7280, file: !3, line: 2112, column: 3)
!7301 = !DILocation(line: 2112, column: 3, scope: !7302)
!7302 = distinct !DILexicalBlock(scope: !7300, file: !3, line: 2112, column: 3)
!7303 = !DILocation(line: 2113, column: 10, scope: !7304)
!7304 = distinct !DILexicalBlock(scope: !7302, file: !3, line: 2112, column: 64)
!7305 = !DILocation(line: 2113, column: 8, scope: !7304)
!7306 = !DILocation(line: 2114, column: 15, scope: !7304)
!7307 = !DILocation(line: 2114, column: 20, scope: !7304)
!7308 = !DILocation(line: 2114, column: 4, scope: !7304)
!7309 = !DILocation(line: 2114, column: 10, scope: !7304)
!7310 = !DILocation(line: 2114, column: 13, scope: !7304)
!7311 = !DILocation(line: 2115, column: 14, scope: !7304)
!7312 = !DILocation(line: 2115, column: 4, scope: !7304)
!7313 = !DILocation(line: 2115, column: 9, scope: !7304)
!7314 = !DILocation(line: 2115, column: 12, scope: !7304)
!7315 = !DILocation(line: 2116, column: 3, scope: !7304)
!7316 = distinct !{!7316, !7299, !7317}
!7317 = !DILocation(line: 2116, column: 3, scope: !7300)
!7318 = !DILocation(line: 2118, column: 16, scope: !7280)
!7319 = !DILocation(line: 2118, column: 21, scope: !7280)
!7320 = !DILocation(line: 2118, column: 10, scope: !7280)
!7321 = !DILocation(line: 2119, column: 2, scope: !7280)
!7322 = !DILocation(line: 2120, column: 11, scope: !7323)
!7323 = distinct !DILexicalBlock(scope: !7276, file: !3, line: 2120, column: 11)
!7324 = !DILocation(line: 2120, column: 22, scope: !7323)
!7325 = !DILocation(line: 2120, column: 11, scope: !7276)
!7326 = !DILocation(line: 2121, column: 24, scope: !7327)
!7327 = distinct !DILexicalBlock(scope: !7323, file: !3, line: 2120, column: 43)
!7328 = !DILocation(line: 2121, column: 31, scope: !7327)
!7329 = !DILocation(line: 2121, column: 36, scope: !7327)
!7330 = !DILocation(line: 2121, column: 40, scope: !7327)
!7331 = !DILocation(line: 2121, column: 3, scope: !7327)
!7332 = !DILocation(line: 2123, column: 11, scope: !7333)
!7333 = distinct !DILexicalBlock(scope: !7327, file: !3, line: 2123, column: 7)
!7334 = !DILocation(line: 2123, column: 15, scope: !7333)
!7335 = !DILocation(line: 2123, column: 7, scope: !7327)
!7336 = !DILocation(line: 2124, column: 4, scope: !7337)
!7337 = distinct !DILexicalBlock(scope: !7333, file: !3, line: 2123, column: 24)
!7338 = !DILocation(line: 2127, column: 10, scope: !7327)
!7339 = !DILocation(line: 2128, column: 2, scope: !7327)
!7340 = !DILocation(line: 2130, column: 10, scope: !7341)
!7341 = distinct !DILexicalBlock(scope: !7323, file: !3, line: 2129, column: 7)
!7342 = !DILocation(line: 2131, column: 3, scope: !7341)
!7343 = !DILocation(line: 2135, column: 6, scope: !7344)
!7344 = distinct !DILexicalBlock(scope: !7034, file: !3, line: 2135, column: 6)
!7345 = !DILocation(line: 2135, column: 6, scope: !7034)
!7346 = !DILocation(line: 2136, column: 30, scope: !7347)
!7347 = distinct !DILexicalBlock(scope: !7344, file: !3, line: 2135, column: 12)
!7348 = !DILocation(line: 2136, column: 37, scope: !7347)
!7349 = !DILocation(line: 2136, column: 42, scope: !7347)
!7350 = !DILocation(line: 2136, column: 52, scope: !7347)
!7351 = !DILocation(line: 2136, column: 59, scope: !7347)
!7352 = !DILocation(line: 2136, column: 11, scope: !7347)
!7353 = !DILocation(line: 2136, column: 9, scope: !7347)
!7354 = !DILocation(line: 2137, column: 2, scope: !7347)
!7355 = !DILocation(line: 2138, column: 11, scope: !7356)
!7356 = distinct !DILexicalBlock(scope: !7344, file: !3, line: 2138, column: 11)
!7357 = !DILocation(line: 2138, column: 22, scope: !7356)
!7358 = !DILocation(line: 2138, column: 11, scope: !7344)
!7359 = !DILocation(line: 2139, column: 20, scope: !7360)
!7360 = distinct !DILexicalBlock(scope: !7356, file: !3, line: 2138, column: 43)
!7361 = !DILocation(line: 2139, column: 27, scope: !7360)
!7362 = !DILocation(line: 2139, column: 32, scope: !7360)
!7363 = !DILocation(line: 2139, column: 36, scope: !7360)
!7364 = !DILocation(line: 2139, column: 49, scope: !7360)
!7365 = !DILocation(line: 2139, column: 3, scope: !7360)
!7366 = !DILocation(line: 2140, column: 2, scope: !7360)
!7367 = !DILocation(line: 2141, column: 11, scope: !7368)
!7368 = distinct !DILexicalBlock(scope: !7356, file: !3, line: 2141, column: 11)
!7369 = !DILocation(line: 2141, column: 11, scope: !7356)
!7370 = !DILocation(line: 2142, column: 7, scope: !7371)
!7371 = distinct !DILexicalBlock(scope: !7372, file: !3, line: 2142, column: 7)
!7372 = distinct !DILexicalBlock(scope: !7368, file: !3, line: 2141, column: 19)
!7373 = !DILocation(line: 2142, column: 18, scope: !7371)
!7374 = !DILocation(line: 2142, column: 7, scope: !7372)
!7375 = !DILocation(line: 2144, column: 36, scope: !7376)
!7376 = distinct !DILexicalBlock(scope: !7371, file: !3, line: 2142, column: 39)
!7377 = !DILocation(line: 2144, column: 47, scope: !7376)
!7378 = !DILocation(line: 2144, column: 50, scope: !7376)
!7379 = !DILocation(line: 2144, column: 14, scope: !7376)
!7380 = !DILocation(line: 2144, column: 13, scope: !7376)
!7381 = !DILocation(line: 2144, column: 11, scope: !7376)
!7382 = !DILocation(line: 2145, column: 25, scope: !7376)
!7383 = !DILocation(line: 2145, column: 29, scope: !7376)
!7384 = !DILocation(line: 2145, column: 40, scope: !7376)
!7385 = !DILocation(line: 2145, column: 43, scope: !7376)
!7386 = !DILocation(line: 2145, column: 57, scope: !7376)
!7387 = !DILocation(line: 2145, column: 4, scope: !7376)
!7388 = !DILocation(line: 2146, column: 10, scope: !7376)
!7389 = !DILocation(line: 2147, column: 3, scope: !7376)
!7390 = !DILocation(line: 2148, column: 12, scope: !7391)
!7391 = distinct !DILexicalBlock(scope: !7371, file: !3, line: 2148, column: 12)
!7392 = !DILocation(line: 2148, column: 23, scope: !7391)
!7393 = !DILocation(line: 2148, column: 12, scope: !7371)
!7394 = !DILocation(line: 2150, column: 39, scope: !7395)
!7395 = distinct !DILexicalBlock(scope: !7391, file: !3, line: 2148, column: 42)
!7396 = !DILocation(line: 2150, column: 50, scope: !7395)
!7397 = !DILocation(line: 2150, column: 53, scope: !7395)
!7398 = !DILocation(line: 2150, column: 15, scope: !7395)
!7399 = !DILocation(line: 2150, column: 13, scope: !7395)
!7400 = !DILocation(line: 2150, column: 11, scope: !7395)
!7401 = !DILocation(line: 2151, column: 27, scope: !7395)
!7402 = !DILocation(line: 2151, column: 31, scope: !7395)
!7403 = !DILocation(line: 2151, column: 42, scope: !7395)
!7404 = !DILocation(line: 2151, column: 45, scope: !7395)
!7405 = !DILocation(line: 2151, column: 59, scope: !7395)
!7406 = !DILocation(line: 2151, column: 4, scope: !7395)
!7407 = !DILocation(line: 2152, column: 10, scope: !7395)
!7408 = !DILocation(line: 2153, column: 3, scope: !7395)
!7409 = !DILocation(line: 2154, column: 12, scope: !7410)
!7410 = distinct !DILexicalBlock(scope: !7391, file: !3, line: 2154, column: 12)
!7411 = !DILocation(line: 2154, column: 23, scope: !7410)
!7412 = !DILocation(line: 2154, column: 12, scope: !7391)
!7413 = !DILocation(line: 2156, column: 39, scope: !7414)
!7414 = distinct !DILexicalBlock(scope: !7410, file: !3, line: 2154, column: 42)
!7415 = !DILocation(line: 2156, column: 50, scope: !7414)
!7416 = !DILocation(line: 2156, column: 55, scope: !7414)
!7417 = !DILocation(line: 2156, column: 15, scope: !7414)
!7418 = !DILocation(line: 2156, column: 13, scope: !7414)
!7419 = !DILocation(line: 2156, column: 11, scope: !7414)
!7420 = !DILocation(line: 2157, column: 27, scope: !7414)
!7421 = !DILocation(line: 2157, column: 34, scope: !7414)
!7422 = !DILocation(line: 2157, column: 42, scope: !7414)
!7423 = !DILocation(line: 2157, column: 47, scope: !7414)
!7424 = !DILocation(line: 2157, column: 61, scope: !7414)
!7425 = !DILocation(line: 2157, column: 4, scope: !7414)
!7426 = !DILocation(line: 2158, column: 10, scope: !7414)
!7427 = !DILocation(line: 2159, column: 3, scope: !7414)
!7428 = !DILocation(line: 2162, column: 7, scope: !7429)
!7429 = distinct !DILexicalBlock(scope: !7372, file: !3, line: 2162, column: 7)
!7430 = !DILocation(line: 2162, column: 7, scope: !7372)
!7431 = !DILocation(line: 2163, column: 8, scope: !7432)
!7432 = distinct !DILexicalBlock(scope: !7433, file: !3, line: 2163, column: 8)
!7433 = distinct !DILexicalBlock(scope: !7429, file: !3, line: 2162, column: 13)
!7434 = !DILocation(line: 2163, column: 15, scope: !7432)
!7435 = !DILocation(line: 2163, column: 8, scope: !7433)
!7436 = !DILocation(line: 2164, column: 32, scope: !7437)
!7437 = distinct !DILexicalBlock(scope: !7432, file: !3, line: 2163, column: 25)
!7438 = !DILocation(line: 2164, column: 36, scope: !7437)
!7439 = !DILocation(line: 2164, column: 5, scope: !7437)
!7440 = !DILocation(line: 2165, column: 4, scope: !7437)
!7441 = !DILocation(line: 2166, column: 3, scope: !7433)
!7442 = !DILocation(line: 2169, column: 7, scope: !7443)
!7443 = distinct !DILexicalBlock(scope: !7372, file: !3, line: 2169, column: 7)
!7444 = !DILocation(line: 2169, column: 14, scope: !7443)
!7445 = !DILocation(line: 2169, column: 7, scope: !7372)
!7446 = !DILocation(line: 2171, column: 30, scope: !7447)
!7447 = distinct !DILexicalBlock(scope: !7443, file: !3, line: 2169, column: 36)
!7448 = !DILocation(line: 2171, column: 34, scope: !7447)
!7449 = !DILocation(line: 2171, column: 4, scope: !7447)
!7450 = !DILocation(line: 2173, column: 4, scope: !7451)
!7451 = distinct !DILexicalBlock(scope: !7447, file: !3, line: 2173, column: 4)
!7452 = !DILocation(line: 2173, column: 4, scope: !7453)
!7453 = distinct !DILexicalBlock(scope: !7451, file: !3, line: 2173, column: 4)
!7454 = !DILocation(line: 2174, column: 10, scope: !7455)
!7455 = distinct !DILexicalBlock(scope: !7453, file: !3, line: 2173, column: 56)
!7456 = !DILocation(line: 2174, column: 8, scope: !7455)
!7457 = !DILocation(line: 2175, column: 35, scope: !7458)
!7458 = distinct !DILexicalBlock(scope: !7455, file: !3, line: 2175, column: 9)
!7459 = !DILocation(line: 2175, column: 42, scope: !7458)
!7460 = !DILocation(line: 2175, column: 47, scope: !7458)
!7461 = !DILocation(line: 2175, column: 52, scope: !7458)
!7462 = !DILocation(line: 2175, column: 10, scope: !7458)
!7463 = !DILocation(line: 2175, column: 9, scope: !7455)
!7464 = !DILocation(line: 2176, column: 6, scope: !7458)
!7465 = !DILocation(line: 2178, column: 5, scope: !7466)
!7466 = distinct !DILexicalBlock(scope: !7455, file: !3, line: 2178, column: 5)
!7467 = !DILocation(line: 2178, column: 5, scope: !7468)
!7468 = distinct !DILexicalBlock(scope: !7466, file: !3, line: 2178, column: 5)
!7469 = !DILocation(line: 2179, column: 12, scope: !7470)
!7470 = distinct !DILexicalBlock(scope: !7468, file: !3, line: 2178, column: 53)
!7471 = !DILocation(line: 2179, column: 10, scope: !7470)
!7472 = !DILocation(line: 2180, column: 27, scope: !7473)
!7473 = distinct !DILexicalBlock(scope: !7470, file: !3, line: 2180, column: 10)
!7474 = !DILocation(line: 2180, column: 34, scope: !7473)
!7475 = !DILocation(line: 2180, column: 40, scope: !7473)
!7476 = !DILocation(line: 2180, column: 65, scope: !7473)
!7477 = !DILocation(line: 2180, column: 72, scope: !7473)
!7478 = !DILocation(line: 2180, column: 77, scope: !7473)
!7479 = !DILocation(line: 2180, column: 81, scope: !7473)
!7480 = !DILocation(line: 2180, column: 89, scope: !7473)
!7481 = !DILocation(line: 2180, column: 10, scope: !7473)
!7482 = !DILocation(line: 2180, column: 10, scope: !7470)
!7483 = !DILocation(line: 2181, column: 28, scope: !7473)
!7484 = !DILocation(line: 2181, column: 32, scope: !7473)
!7485 = !DILocation(line: 2181, column: 39, scope: !7473)
!7486 = !DILocation(line: 2181, column: 42, scope: !7473)
!7487 = !DILocation(line: 2181, column: 57, scope: !7473)
!7488 = !DILocation(line: 2181, column: 7, scope: !7473)
!7489 = !DILocation(line: 2182, column: 5, scope: !7470)
!7490 = distinct !{!7490, !7465, !7491}
!7491 = !DILocation(line: 2182, column: 5, scope: !7466)
!7492 = !DILocation(line: 2183, column: 4, scope: !7455)
!7493 = distinct !{!7493, !7450, !7494}
!7494 = !DILocation(line: 2183, column: 4, scope: !7451)
!7495 = !DILocation(line: 2185, column: 12, scope: !7447)
!7496 = !DILocation(line: 2185, column: 10, scope: !7447)
!7497 = !DILocation(line: 2186, column: 3, scope: !7447)
!7498 = !DILocation(line: 2187, column: 2, scope: !7372)
!7499 = !DILocation(line: 2190, column: 25, scope: !7500)
!7500 = distinct !DILexicalBlock(scope: !7368, file: !3, line: 2188, column: 7)
!7501 = !DILocation(line: 2190, column: 32, scope: !7500)
!7502 = !DILocation(line: 2190, column: 37, scope: !7500)
!7503 = !DILocation(line: 2190, column: 3, scope: !7500)
!7504 = !DILocation(line: 2192, column: 7, scope: !7505)
!7505 = distinct !DILexicalBlock(scope: !7500, file: !3, line: 2192, column: 7)
!7506 = !DILocation(line: 2192, column: 18, scope: !7505)
!7507 = !DILocation(line: 2192, column: 7, scope: !7500)
!7508 = !DILocation(line: 2194, column: 28, scope: !7509)
!7509 = distinct !DILexicalBlock(scope: !7505, file: !3, line: 2192, column: 39)
!7510 = !DILocation(line: 2194, column: 32, scope: !7509)
!7511 = !DILocation(line: 2194, column: 43, scope: !7509)
!7512 = !DILocation(line: 2194, column: 52, scope: !7509)
!7513 = !DILocation(line: 2194, column: 4, scope: !7509)
!7514 = !DILocation(line: 2195, column: 10, scope: !7509)
!7515 = !DILocation(line: 2196, column: 3, scope: !7509)
!7516 = !DILocation(line: 2197, column: 12, scope: !7517)
!7517 = distinct !DILexicalBlock(scope: !7505, file: !3, line: 2197, column: 12)
!7518 = !DILocation(line: 2197, column: 23, scope: !7517)
!7519 = !DILocation(line: 2197, column: 12, scope: !7505)
!7520 = !DILocation(line: 2199, column: 30, scope: !7521)
!7521 = distinct !DILexicalBlock(scope: !7517, file: !3, line: 2197, column: 42)
!7522 = !DILocation(line: 2199, column: 34, scope: !7521)
!7523 = !DILocation(line: 2199, column: 45, scope: !7521)
!7524 = !DILocation(line: 2199, column: 54, scope: !7521)
!7525 = !DILocation(line: 2199, column: 4, scope: !7521)
!7526 = !DILocation(line: 2200, column: 10, scope: !7521)
!7527 = !DILocation(line: 2201, column: 3, scope: !7521)
!7528 = !DILocation(line: 2202, column: 12, scope: !7529)
!7529 = distinct !DILexicalBlock(scope: !7517, file: !3, line: 2202, column: 12)
!7530 = !DILocation(line: 2202, column: 23, scope: !7529)
!7531 = !DILocation(line: 2202, column: 12, scope: !7517)
!7532 = !DILocation(line: 2204, column: 30, scope: !7533)
!7533 = distinct !DILexicalBlock(scope: !7529, file: !3, line: 2202, column: 42)
!7534 = !DILocation(line: 2204, column: 37, scope: !7533)
!7535 = !DILocation(line: 2204, column: 45, scope: !7533)
!7536 = !DILocation(line: 2204, column: 56, scope: !7533)
!7537 = !DILocation(line: 2204, column: 4, scope: !7533)
!7538 = !DILocation(line: 2205, column: 3, scope: !7533)
!7539 = !DILocation(line: 2208, column: 7, scope: !7540)
!7540 = distinct !DILexicalBlock(scope: !7500, file: !3, line: 2208, column: 7)
!7541 = !DILocation(line: 2208, column: 14, scope: !7540)
!7542 = !DILocation(line: 2208, column: 7, scope: !7500)
!7543 = !DILocation(line: 2209, column: 4, scope: !7544)
!7544 = distinct !DILexicalBlock(scope: !7545, file: !3, line: 2209, column: 4)
!7545 = distinct !DILexicalBlock(scope: !7540, file: !3, line: 2208, column: 36)
!7546 = !DILocation(line: 2209, column: 4, scope: !7547)
!7547 = distinct !DILexicalBlock(scope: !7544, file: !3, line: 2209, column: 4)
!7548 = !DILocation(line: 2210, column: 10, scope: !7549)
!7549 = distinct !DILexicalBlock(scope: !7547, file: !3, line: 2209, column: 56)
!7550 = !DILocation(line: 2210, column: 8, scope: !7549)
!7551 = !DILocation(line: 2211, column: 35, scope: !7552)
!7552 = distinct !DILexicalBlock(scope: !7549, file: !3, line: 2211, column: 9)
!7553 = !DILocation(line: 2211, column: 42, scope: !7552)
!7554 = !DILocation(line: 2211, column: 47, scope: !7552)
!7555 = !DILocation(line: 2211, column: 52, scope: !7552)
!7556 = !DILocation(line: 2211, column: 10, scope: !7552)
!7557 = !DILocation(line: 2211, column: 9, scope: !7549)
!7558 = !DILocation(line: 2212, column: 6, scope: !7552)
!7559 = !DILocation(line: 2214, column: 5, scope: !7560)
!7560 = distinct !DILexicalBlock(scope: !7549, file: !3, line: 2214, column: 5)
!7561 = !DILocation(line: 2214, column: 5, scope: !7562)
!7562 = distinct !DILexicalBlock(scope: !7560, file: !3, line: 2214, column: 5)
!7563 = !DILocation(line: 2215, column: 10, scope: !7564)
!7564 = distinct !DILexicalBlock(scope: !7565, file: !3, line: 2215, column: 10)
!7565 = distinct !DILexicalBlock(scope: !7562, file: !3, line: 2214, column: 53)
!7566 = !DILocation(line: 2215, column: 17, scope: !7564)
!7567 = !DILocation(line: 2215, column: 10, scope: !7565)
!7568 = !DILocation(line: 2215, column: 39, scope: !7564)
!7569 = !DILocation(line: 2216, column: 12, scope: !7565)
!7570 = !DILocation(line: 2216, column: 10, scope: !7565)
!7571 = !DILocation(line: 2218, column: 27, scope: !7572)
!7572 = distinct !DILexicalBlock(scope: !7565, file: !3, line: 2218, column: 10)
!7573 = !DILocation(line: 2218, column: 34, scope: !7572)
!7574 = !DILocation(line: 2218, column: 40, scope: !7572)
!7575 = !DILocation(line: 2218, column: 65, scope: !7572)
!7576 = !DILocation(line: 2218, column: 72, scope: !7572)
!7577 = !DILocation(line: 2218, column: 77, scope: !7572)
!7578 = !DILocation(line: 2218, column: 81, scope: !7572)
!7579 = !DILocation(line: 2218, column: 89, scope: !7572)
!7580 = !DILocation(line: 2218, column: 10, scope: !7572)
!7581 = !DILocation(line: 2218, column: 10, scope: !7565)
!7582 = !DILocation(line: 2219, column: 31, scope: !7572)
!7583 = !DILocation(line: 2219, column: 35, scope: !7572)
!7584 = !DILocation(line: 2219, column: 42, scope: !7572)
!7585 = !DILocation(line: 2219, column: 52, scope: !7572)
!7586 = !DILocation(line: 2219, column: 7, scope: !7572)
!7587 = !DILocation(line: 2221, column: 12, scope: !7565)
!7588 = !DILocation(line: 2222, column: 5, scope: !7565)
!7589 = distinct !{!7589, !7559, !7590}
!7590 = !DILocation(line: 2222, column: 5, scope: !7560)
!7591 = !DILocation(line: 2223, column: 4, scope: !7549)
!7592 = distinct !{!7592, !7543, !7593}
!7593 = !DILocation(line: 2223, column: 4, scope: !7544)
!7594 = !DILocation(line: 2224, column: 3, scope: !7545)
!7595 = !DILocation(line: 2227, column: 6, scope: !7596)
!7596 = distinct !DILexicalBlock(scope: !7034, file: !3, line: 2227, column: 6)
!7597 = !DILocation(line: 2227, column: 6, scope: !7034)
!7598 = !DILocation(line: 2237, column: 7, scope: !7599)
!7599 = distinct !DILexicalBlock(scope: !7600, file: !3, line: 2237, column: 7)
!7600 = distinct !DILexicalBlock(scope: !7596, file: !3, line: 2227, column: 12)
!7601 = !DILocation(line: 2237, column: 13, scope: !7599)
!7602 = !DILocation(line: 2237, column: 7, scope: !7600)
!7603 = !DILocation(line: 2238, column: 8, scope: !7604)
!7604 = distinct !DILexicalBlock(scope: !7605, file: !3, line: 2238, column: 8)
!7605 = distinct !DILexicalBlock(scope: !7599, file: !3, line: 2237, column: 19)
!7606 = !DILocation(line: 2238, column: 8, scope: !7605)
!7607 = !DILocation(line: 2240, column: 9, scope: !7608)
!7608 = distinct !DILexicalBlock(scope: !7609, file: !3, line: 2240, column: 9)
!7609 = distinct !DILexicalBlock(scope: !7604, file: !3, line: 2238, column: 14)
!7610 = !DILocation(line: 2240, column: 9, scope: !7609)
!7611 = !DILocation(line: 2241, column: 24, scope: !7612)
!7612 = distinct !DILexicalBlock(scope: !7608, file: !3, line: 2240, column: 17)
!7613 = !DILocation(line: 2241, column: 6, scope: !7612)
!7614 = !DILocation(line: 2242, column: 5, scope: !7612)
!7615 = !DILocation(line: 2244, column: 26, scope: !7616)
!7616 = distinct !DILexicalBlock(scope: !7608, file: !3, line: 2243, column: 10)
!7617 = !DILocation(line: 2244, column: 6, scope: !7616)
!7618 = !DILocation(line: 2246, column: 4, scope: !7609)
!7619 = !DILocation(line: 2248, column: 27, scope: !7620)
!7620 = distinct !DILexicalBlock(scope: !7604, file: !3, line: 2247, column: 9)
!7621 = !DILocation(line: 2248, column: 5, scope: !7620)
!7622 = !DILocation(line: 2250, column: 3, scope: !7605)
!7623 = !DILocation(line: 2252, column: 2, scope: !7600)
!7624 = !DILocation(line: 2254, column: 20, scope: !7034)
!7625 = !DILocation(line: 2254, column: 28, scope: !7034)
!7626 = !DILocation(line: 2254, column: 2, scope: !7034)
!7627 = !DILocation(line: 2255, column: 24, scope: !7034)
!7628 = !DILocation(line: 2255, column: 48, scope: !7034)
!7629 = !DILocation(line: 2255, column: 56, scope: !7034)
!7630 = !DILocation(line: 2255, column: 2, scope: !7034)
!7631 = !DILocation(line: 2257, column: 2, scope: !7034)
!7632 = !DILocation(line: 2258, column: 1, scope: !7034)
!7633 = distinct !DISubprogram(name: "uvedit_pixel_to_float", scope: !3, file: !3, line: 317, type: !7634, scopeLine: 318, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!7634 = !DISubroutineType(types: !7635)
!7635 = !{null, !4824, !630, !192}
!7636 = !DILocalVariable(name: "sima", arg: 1, scope: !7633, file: !3, line: 317, type: !4824)
!7637 = !DILocation(line: 317, column: 47, scope: !7633)
!7638 = !DILocalVariable(name: "dist", arg: 2, scope: !7633, file: !3, line: 317, type: !630)
!7639 = !DILocation(line: 317, column: 60, scope: !7633)
!7640 = !DILocalVariable(name: "pixeldist", arg: 3, scope: !7633, file: !3, line: 317, type: !192)
!7641 = !DILocation(line: 317, column: 72, scope: !7633)
!7642 = !DILocalVariable(name: "width", scope: !7633, file: !3, line: 319, type: !22)
!7643 = !DILocation(line: 319, column: 6, scope: !7633)
!7644 = !DILocalVariable(name: "height", scope: !7633, file: !3, line: 319, type: !22)
!7645 = !DILocation(line: 319, column: 13, scope: !7633)
!7646 = !DILocation(line: 321, column: 6, scope: !7647)
!7647 = distinct !DILexicalBlock(scope: !7633, file: !3, line: 321, column: 6)
!7648 = !DILocation(line: 321, column: 6, scope: !7633)
!7649 = !DILocation(line: 322, column: 27, scope: !7650)
!7650 = distinct !DILexicalBlock(scope: !7647, file: !3, line: 321, column: 12)
!7651 = !DILocation(line: 322, column: 3, scope: !7650)
!7652 = !DILocation(line: 323, column: 2, scope: !7650)
!7653 = !DILocation(line: 325, column: 9, scope: !7654)
!7654 = distinct !DILexicalBlock(scope: !7647, file: !3, line: 324, column: 7)
!7655 = !DILocation(line: 326, column: 10, scope: !7654)
!7656 = !DILocation(line: 329, column: 12, scope: !7633)
!7657 = !DILocation(line: 329, column: 24, scope: !7633)
!7658 = !DILocation(line: 329, column: 22, scope: !7633)
!7659 = !DILocation(line: 329, column: 2, scope: !7633)
!7660 = !DILocation(line: 329, column: 10, scope: !7633)
!7661 = !DILocation(line: 330, column: 12, scope: !7633)
!7662 = !DILocation(line: 330, column: 24, scope: !7633)
!7663 = !DILocation(line: 330, column: 22, scope: !7633)
!7664 = !DILocation(line: 330, column: 2, scope: !7633)
!7665 = !DILocation(line: 330, column: 10, scope: !7633)
!7666 = !DILocation(line: 331, column: 1, scope: !7633)
!7667 = distinct !DISubprogram(name: "_bm_elem_index_get", scope: !4247, file: !4247, line: 119, type: !7668, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!7668 = !DISubroutineType(types: !7669)
!7669 = !{!22, !4250}
!7670 = !DILocalVariable(name: "head", arg: 1, scope: !7667, file: !4247, line: 119, type: !4250)
!7671 = !DILocation(line: 119, column: 51, scope: !7667)
!7672 = !DILocation(line: 121, column: 9, scope: !7667)
!7673 = !DILocation(line: 121, column: 15, scope: !7667)
!7674 = !DILocation(line: 121, column: 2, scope: !7667)
!7675 = distinct !DISubprogram(name: "uv_find_nearest_face", scope: !3, file: !3, line: 770, type: !5138, scopeLine: 771, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!7676 = !DILocalVariable(name: "scene", arg: 1, scope: !7675, file: !3, line: 770, type: !3841)
!7677 = !DILocation(line: 770, column: 41, scope: !7675)
!7678 = !DILocalVariable(name: "ima", arg: 2, scope: !7675, file: !3, line: 770, type: !3164)
!7679 = !DILocation(line: 770, column: 55, scope: !7675)
!7680 = !DILocalVariable(name: "em", arg: 3, scope: !7675, file: !3, line: 770, type: !3593)
!7681 = !DILocation(line: 770, column: 72, scope: !7675)
!7682 = !DILocalVariable(name: "co", arg: 4, scope: !7675, file: !3, line: 770, type: !4976)
!7683 = !DILocation(line: 770, column: 88, scope: !7675)
!7684 = !DILocalVariable(name: "hit", arg: 5, scope: !7675, file: !3, line: 770, type: !5140)
!7685 = !DILocation(line: 770, column: 107, scope: !7675)
!7686 = !DILocalVariable(name: "tf", scope: !7675, file: !3, line: 772, type: !3945)
!7687 = !DILocation(line: 772, column: 12, scope: !7675)
!7688 = !DILocalVariable(name: "efa", scope: !7675, file: !3, line: 773, type: !3238)
!7689 = !DILocation(line: 773, column: 10, scope: !7675)
!7690 = !DILocalVariable(name: "iter", scope: !7675, file: !3, line: 774, type: !3856)
!7691 = !DILocation(line: 774, column: 9, scope: !7675)
!7692 = !DILocalVariable(name: "mindist", scope: !7675, file: !3, line: 775, type: !192)
!7693 = !DILocation(line: 775, column: 8, scope: !7675)
!7694 = !DILocalVariable(name: "dist", scope: !7675, file: !3, line: 775, type: !192)
!7695 = !DILocation(line: 775, column: 17, scope: !7675)
!7696 = !DILocalVariable(name: "cent", scope: !7675, file: !3, line: 775, type: !769)
!7697 = !DILocation(line: 775, column: 23, scope: !7675)
!7698 = !DILocalVariable(name: "cd_loop_uv_offset", scope: !7675, file: !3, line: 777, type: !4165)
!7699 = !DILocation(line: 777, column: 12, scope: !7675)
!7700 = !DILocation(line: 777, column: 55, scope: !7675)
!7701 = !DILocation(line: 777, column: 59, scope: !7675)
!7702 = !DILocation(line: 777, column: 63, scope: !7675)
!7703 = !DILocation(line: 777, column: 32, scope: !7675)
!7704 = !DILocalVariable(name: "cd_poly_tex_offset", scope: !7675, file: !3, line: 778, type: !4165)
!7705 = !DILocation(line: 778, column: 12, scope: !7675)
!7706 = !DILocation(line: 778, column: 56, scope: !7675)
!7707 = !DILocation(line: 778, column: 60, scope: !7675)
!7708 = !DILocation(line: 778, column: 64, scope: !7675)
!7709 = !DILocation(line: 778, column: 33, scope: !7675)
!7710 = !DILocation(line: 780, column: 10, scope: !7675)
!7711 = !DILocation(line: 781, column: 9, scope: !7675)
!7712 = !DILocation(line: 781, column: 2, scope: !7675)
!7713 = !DILocation(line: 784, column: 23, scope: !7675)
!7714 = !DILocation(line: 784, column: 30, scope: !7675)
!7715 = !DILocation(line: 784, column: 35, scope: !7675)
!7716 = !DILocation(line: 784, column: 39, scope: !7675)
!7717 = !DILocation(line: 784, column: 43, scope: !7675)
!7718 = !DILocation(line: 784, column: 2, scope: !7675)
!7719 = !DILocation(line: 785, column: 2, scope: !7675)
!7720 = !DILocation(line: 785, column: 7, scope: !7675)
!7721 = !DILocation(line: 785, column: 9, scope: !7675)
!7722 = !DILocation(line: 786, column: 13, scope: !7675)
!7723 = !DILocation(line: 786, column: 18, scope: !7675)
!7724 = !DILocation(line: 786, column: 27, scope: !7675)
!7725 = !DILocation(line: 786, column: 2, scope: !7675)
!7726 = !DILocation(line: 786, column: 7, scope: !7675)
!7727 = !DILocation(line: 786, column: 11, scope: !7675)
!7728 = !DILocation(line: 788, column: 2, scope: !7729)
!7729 = distinct !DILexicalBlock(scope: !7675, file: !3, line: 788, column: 2)
!7730 = !DILocation(line: 788, column: 2, scope: !7731)
!7731 = distinct !DILexicalBlock(scope: !7729, file: !3, line: 788, column: 2)
!7732 = !DILocation(line: 789, column: 8, scope: !7733)
!7733 = distinct !DILexicalBlock(scope: !7731, file: !3, line: 788, column: 54)
!7734 = !DILocation(line: 789, column: 6, scope: !7733)
!7735 = !DILocation(line: 790, column: 33, scope: !7736)
!7736 = distinct !DILexicalBlock(scope: !7733, file: !3, line: 790, column: 7)
!7737 = !DILocation(line: 790, column: 40, scope: !7736)
!7738 = !DILocation(line: 790, column: 45, scope: !7736)
!7739 = !DILocation(line: 790, column: 50, scope: !7736)
!7740 = !DILocation(line: 790, column: 8, scope: !7736)
!7741 = !DILocation(line: 790, column: 7, scope: !7733)
!7742 = !DILocation(line: 791, column: 4, scope: !7736)
!7743 = !DILocation(line: 793, column: 18, scope: !7733)
!7744 = !DILocation(line: 793, column: 23, scope: !7733)
!7745 = !DILocation(line: 793, column: 29, scope: !7733)
!7746 = !DILocation(line: 793, column: 3, scope: !7733)
!7747 = !DILocation(line: 795, column: 29, scope: !7733)
!7748 = !DILocation(line: 795, column: 33, scope: !7733)
!7749 = !DILocation(line: 795, column: 10, scope: !7733)
!7750 = !DILocation(line: 795, column: 8, scope: !7733)
!7751 = !DILocation(line: 797, column: 7, scope: !7752)
!7752 = distinct !DILexicalBlock(scope: !7733, file: !3, line: 797, column: 7)
!7753 = !DILocation(line: 797, column: 14, scope: !7752)
!7754 = !DILocation(line: 797, column: 12, scope: !7752)
!7755 = !DILocation(line: 797, column: 7, scope: !7733)
!7756 = !DILocation(line: 798, column: 14, scope: !7757)
!7757 = distinct !DILexicalBlock(scope: !7752, file: !3, line: 797, column: 23)
!7758 = !DILocation(line: 798, column: 4, scope: !7757)
!7759 = !DILocation(line: 798, column: 9, scope: !7757)
!7760 = !DILocation(line: 798, column: 12, scope: !7757)
!7761 = !DILocation(line: 799, column: 15, scope: !7757)
!7762 = !DILocation(line: 799, column: 4, scope: !7757)
!7763 = !DILocation(line: 799, column: 9, scope: !7757)
!7764 = !DILocation(line: 799, column: 13, scope: !7757)
!7765 = !DILocation(line: 800, column: 14, scope: !7757)
!7766 = !DILocation(line: 800, column: 12, scope: !7757)
!7767 = !DILocation(line: 801, column: 3, scope: !7757)
!7768 = !DILocation(line: 802, column: 2, scope: !7733)
!7769 = distinct !{!7769, !7728, !7770}
!7770 = !DILocation(line: 802, column: 2, scope: !7729)
!7771 = !DILocation(line: 803, column: 1, scope: !7675)
!7772 = distinct !DISubprogram(name: "uv_select_edgeloop", scope: !3, file: !3, line: 995, type: !7773, scopeLine: 997, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!7773 = !DISubroutineType(types: !7774)
!7774 = !{!22, !3841, !3164, !3593, !5140, !4976, !3951}
!7775 = !DILocalVariable(name: "scene", arg: 1, scope: !7772, file: !3, line: 995, type: !3841)
!7776 = !DILocation(line: 995, column: 38, scope: !7772)
!7777 = !DILocalVariable(name: "ima", arg: 2, scope: !7772, file: !3, line: 995, type: !3164)
!7778 = !DILocation(line: 995, column: 52, scope: !7772)
!7779 = !DILocalVariable(name: "em", arg: 3, scope: !7772, file: !3, line: 995, type: !3593)
!7780 = !DILocation(line: 995, column: 69, scope: !7772)
!7781 = !DILocalVariable(name: "hit", arg: 4, scope: !7772, file: !3, line: 995, type: !5140)
!7782 = !DILocation(line: 995, column: 85, scope: !7772)
!7783 = !DILocalVariable(name: "limit", arg: 5, scope: !7772, file: !3, line: 996, type: !4976)
!7784 = !DILocation(line: 996, column: 43, scope: !7772)
!7785 = !DILocalVariable(name: "extend", arg: 6, scope: !7772, file: !3, line: 996, type: !3951)
!7786 = !DILocation(line: 996, column: 64, scope: !7772)
!7787 = !DILocalVariable(name: "efa", scope: !7772, file: !3, line: 998, type: !3238)
!7788 = !DILocation(line: 998, column: 10, scope: !7772)
!7789 = !DILocalVariable(name: "iter", scope: !7772, file: !3, line: 999, type: !3856)
!7790 = !DILocation(line: 999, column: 9, scope: !7772)
!7791 = !DILocalVariable(name: "liter", scope: !7772, file: !3, line: 999, type: !3856)
!7792 = !DILocation(line: 999, column: 15, scope: !7772)
!7793 = !DILocalVariable(name: "l", scope: !7772, file: !3, line: 1000, type: !3220)
!7794 = !DILocation(line: 1000, column: 10, scope: !7772)
!7795 = !DILocalVariable(name: "tf", scope: !7772, file: !3, line: 1001, type: !3945)
!7796 = !DILocation(line: 1001, column: 12, scope: !7772)
!7797 = !DILocalVariable(name: "vmap", scope: !7772, file: !3, line: 1002, type: !7798)
!7798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7799, size: 64)
!7799 = !DIDerivedType(tag: DW_TAG_typedef, name: "UvVertMap", file: !7800, line: 47, baseType: !7801)
!7800 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_mesh_mapping.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!7801 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UvVertMap", file: !7800, line: 44, size: 128, elements: !7802)
!7802 = !{!7803, !7813}
!7803 = !DIDerivedType(tag: DW_TAG_member, name: "vert", scope: !7801, file: !7800, line: 45, baseType: !7804, size: 64)
!7804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7805, size: 64)
!7805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7806, size: 64)
!7806 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UvMapVert", file: !7800, line: 49, size: 128, elements: !7807)
!7807 = !{!7808, !7809, !7810, !7811, !7812}
!7808 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7806, file: !7800, line: 50, baseType: !7805, size: 64)
!7809 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !7806, file: !7800, line: 51, baseType: !224, size: 32, offset: 64)
!7810 = !DIDerivedType(tag: DW_TAG_member, name: "tfindex", scope: !7806, file: !7800, line: 52, baseType: !2013, size: 8, offset: 96)
!7811 = !DIDerivedType(tag: DW_TAG_member, name: "separate", scope: !7806, file: !7800, line: 52, baseType: !2013, size: 8, offset: 104)
!7812 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !7806, file: !7800, line: 52, baseType: !2013, size: 8, offset: 112)
!7813 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !7801, file: !7800, line: 46, baseType: !7805, size: 64, offset: 64)
!7814 = !DILocation(line: 1002, column: 13, scope: !7772)
!7815 = !DILocalVariable(name: "iterv_curr", scope: !7772, file: !3, line: 1003, type: !7816)
!7816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7817, size: 64)
!7817 = !DIDerivedType(tag: DW_TAG_typedef, name: "UvMapVert", file: !7800, line: 53, baseType: !7806)
!7818 = !DILocation(line: 1003, column: 13, scope: !7772)
!7819 = !DILocalVariable(name: "iterv_next", scope: !7772, file: !3, line: 1004, type: !7816)
!7820 = !DILocation(line: 1004, column: 13, scope: !7772)
!7821 = !DILocalVariable(name: "starttotf", scope: !7772, file: !3, line: 1005, type: !22)
!7822 = !DILocation(line: 1005, column: 6, scope: !7772)
!7823 = !DILocalVariable(name: "looking", scope: !7772, file: !3, line: 1006, type: !2013)
!7824 = !DILocation(line: 1006, column: 7, scope: !7772)
!7825 = !DILocalVariable(name: "select", scope: !7772, file: !3, line: 1006, type: !2013)
!7826 = !DILocation(line: 1006, column: 16, scope: !7772)
!7827 = !DILocalVariable(name: "cd_loop_uv_offset", scope: !7772, file: !3, line: 1008, type: !4165)
!7828 = !DILocation(line: 1008, column: 12, scope: !7772)
!7829 = !DILocation(line: 1008, column: 56, scope: !7772)
!7830 = !DILocation(line: 1008, column: 60, scope: !7772)
!7831 = !DILocation(line: 1008, column: 64, scope: !7772)
!7832 = !DILocation(line: 1008, column: 33, scope: !7772)
!7833 = !DILocalVariable(name: "cd_poly_tex_offset", scope: !7772, file: !3, line: 1009, type: !4165)
!7834 = !DILocation(line: 1009, column: 12, scope: !7772)
!7835 = !DILocation(line: 1009, column: 56, scope: !7772)
!7836 = !DILocation(line: 1009, column: 60, scope: !7772)
!7837 = !DILocation(line: 1009, column: 64, scope: !7772)
!7838 = !DILocation(line: 1009, column: 33, scope: !7772)
!7839 = !DILocation(line: 1012, column: 28, scope: !7772)
!7840 = !DILocation(line: 1012, column: 32, scope: !7772)
!7841 = !DILocation(line: 1012, column: 2, scope: !7772)
!7842 = !DILocation(line: 1013, column: 31, scope: !7772)
!7843 = !DILocation(line: 1013, column: 35, scope: !7772)
!7844 = !DILocation(line: 1013, column: 42, scope: !7772)
!7845 = !DILocation(line: 1013, column: 9, scope: !7772)
!7846 = !DILocation(line: 1013, column: 7, scope: !7772)
!7847 = !DILocation(line: 1015, column: 28, scope: !7772)
!7848 = !DILocation(line: 1015, column: 32, scope: !7772)
!7849 = !DILocation(line: 1015, column: 2, scope: !7772)
!7850 = !DILocation(line: 1017, column: 7, scope: !7851)
!7851 = distinct !DILexicalBlock(scope: !7772, file: !3, line: 1017, column: 6)
!7852 = !DILocation(line: 1017, column: 6, scope: !7772)
!7853 = !DILocation(line: 1018, column: 25, scope: !7854)
!7854 = distinct !DILexicalBlock(scope: !7851, file: !3, line: 1017, column: 15)
!7855 = !DILocation(line: 1018, column: 32, scope: !7854)
!7856 = !DILocation(line: 1018, column: 37, scope: !7854)
!7857 = !DILocation(line: 1018, column: 3, scope: !7854)
!7858 = !DILocation(line: 1019, column: 2, scope: !7854)
!7859 = !DILocation(line: 1021, column: 33, scope: !7772)
!7860 = !DILocation(line: 1021, column: 37, scope: !7772)
!7861 = !DILocation(line: 1021, column: 2, scope: !7772)
!7862 = !DILocation(line: 1024, column: 49, scope: !7772)
!7863 = !DILocation(line: 1024, column: 55, scope: !7772)
!7864 = !DILocation(line: 1024, column: 60, scope: !7772)
!7865 = !DILocation(line: 1024, column: 65, scope: !7772)
!7866 = !DILocation(line: 1024, column: 70, scope: !7772)
!7867 = !DILocation(line: 1024, column: 15, scope: !7772)
!7868 = !DILocation(line: 1024, column: 13, scope: !7772)
!7869 = !DILocation(line: 1025, column: 49, scope: !7772)
!7870 = !DILocation(line: 1025, column: 55, scope: !7772)
!7871 = !DILocation(line: 1025, column: 60, scope: !7772)
!7872 = !DILocation(line: 1025, column: 65, scope: !7772)
!7873 = !DILocation(line: 1025, column: 70, scope: !7772)
!7874 = !DILocation(line: 1025, column: 73, scope: !7772)
!7875 = !DILocation(line: 1025, column: 15, scope: !7772)
!7876 = !DILocation(line: 1025, column: 13, scope: !7772)
!7877 = !DILocation(line: 1026, column: 38, scope: !7772)
!7878 = !DILocation(line: 1026, column: 2, scope: !7772)
!7879 = !DILocation(line: 1027, column: 38, scope: !7772)
!7880 = !DILocation(line: 1027, column: 2, scope: !7772)
!7881 = !DILocation(line: 1029, column: 12, scope: !7772)
!7882 = !DILocation(line: 1030, column: 36, scope: !7772)
!7883 = !DILocation(line: 1030, column: 40, scope: !7772)
!7884 = !DILocation(line: 1030, column: 52, scope: !7772)
!7885 = !DILocation(line: 1030, column: 2, scope: !7772)
!7886 = !DILocation(line: 1033, column: 14, scope: !7772)
!7887 = !DILocation(line: 1033, column: 26, scope: !7772)
!7888 = !DILocation(line: 1033, column: 31, scope: !7772)
!7889 = !DILocation(line: 1033, column: 36, scope: !7772)
!7890 = !DILocation(line: 1033, column: 39, scope: !7772)
!7891 = !DILocation(line: 1033, column: 51, scope: !7772)
!7892 = !DILocation(line: 1033, column: 56, scope: !7772)
!7893 = !DILocation(line: 0, scope: !7772)
!7894 = !DILocation(line: 1033, column: 12, scope: !7772)
!7895 = !DILocation(line: 1033, column: 10, scope: !7772)
!7896 = !DILocation(line: 1036, column: 2, scope: !7772)
!7897 = !DILocation(line: 1036, column: 9, scope: !7772)
!7898 = !DILocation(line: 1037, column: 11, scope: !7899)
!7899 = distinct !DILexicalBlock(scope: !7772, file: !3, line: 1036, column: 18)
!7900 = !DILocation(line: 1041, column: 3, scope: !7901)
!7901 = distinct !DILexicalBlock(scope: !7899, file: !3, line: 1041, column: 3)
!7902 = !DILocation(line: 1041, column: 3, scope: !7903)
!7903 = distinct !DILexicalBlock(scope: !7901, file: !3, line: 1041, column: 3)
!7904 = !DILocation(line: 1042, column: 9, scope: !7905)
!7905 = distinct !DILexicalBlock(scope: !7903, file: !3, line: 1041, column: 55)
!7906 = !DILocation(line: 1042, column: 7, scope: !7905)
!7907 = !DILocation(line: 1044, column: 9, scope: !7908)
!7908 = distinct !DILexicalBlock(scope: !7905, file: !3, line: 1044, column: 8)
!7909 = !DILocation(line: 1044, column: 45, scope: !7908)
!7910 = !DILocation(line: 1044, column: 73, scope: !7908)
!7911 = !DILocation(line: 1044, column: 80, scope: !7908)
!7912 = !DILocation(line: 1044, column: 85, scope: !7908)
!7913 = !DILocation(line: 1044, column: 90, scope: !7908)
!7914 = !DILocation(line: 1044, column: 48, scope: !7908)
!7915 = !DILocation(line: 1044, column: 8, scope: !7905)
!7916 = !DILocation(line: 1045, column: 5, scope: !7917)
!7917 = distinct !DILexicalBlock(scope: !7918, file: !3, line: 1045, column: 5)
!7918 = distinct !DILexicalBlock(scope: !7908, file: !3, line: 1044, column: 95)
!7919 = !DILocation(line: 1045, column: 5, scope: !7920)
!7920 = distinct !DILexicalBlock(scope: !7917, file: !3, line: 1045, column: 5)
!7921 = !DILocation(line: 1047, column: 59, scope: !7922)
!7922 = distinct !DILexicalBlock(scope: !7923, file: !3, line: 1047, column: 10)
!7923 = distinct !DILexicalBlock(scope: !7920, file: !3, line: 1045, column: 53)
!7924 = !DILocation(line: 1047, column: 65, scope: !7922)
!7925 = !DILocation(line: 1047, column: 70, scope: !7922)
!7926 = !DILocation(line: 1047, column: 25, scope: !7922)
!7927 = !DILocation(line: 1047, column: 23, scope: !7922)
!7928 = !DILocation(line: 1047, column: 10, scope: !7923)
!7929 = !DILocation(line: 1048, column: 7, scope: !7922)
!7930 = !DILocation(line: 1049, column: 59, scope: !7931)
!7931 = distinct !DILexicalBlock(scope: !7923, file: !3, line: 1049, column: 10)
!7932 = !DILocation(line: 1049, column: 65, scope: !7931)
!7933 = !DILocation(line: 1049, column: 70, scope: !7931)
!7934 = !DILocation(line: 1049, column: 73, scope: !7931)
!7935 = !DILocation(line: 1049, column: 25, scope: !7931)
!7936 = !DILocation(line: 1049, column: 23, scope: !7931)
!7937 = !DILocation(line: 1049, column: 10, scope: !7923)
!7938 = !DILocation(line: 1050, column: 7, scope: !7931)
!7939 = !DILocation(line: 1053, column: 10, scope: !7940)
!7940 = distinct !DILexicalBlock(scope: !7923, file: !3, line: 1053, column: 10)
!7941 = !DILocation(line: 1053, column: 22, scope: !7940)
!7942 = !DILocation(line: 1053, column: 27, scope: !7940)
!7943 = !DILocation(line: 1053, column: 30, scope: !7940)
!7944 = !DILocation(line: 1053, column: 42, scope: !7940)
!7945 = !DILocation(line: 1053, column: 10, scope: !7923)
!7946 = !DILocation(line: 1054, column: 45, scope: !7947)
!7947 = distinct !DILexicalBlock(scope: !7948, file: !3, line: 1054, column: 11)
!7948 = distinct !DILexicalBlock(scope: !7940, file: !3, line: 1053, column: 48)
!7949 = !DILocation(line: 1054, column: 49, scope: !7947)
!7950 = !DILocation(line: 1054, column: 61, scope: !7947)
!7951 = !DILocation(line: 1054, column: 11, scope: !7947)
!7952 = !DILocation(line: 1054, column: 11, scope: !7948)
!7953 = !DILocation(line: 1055, column: 16, scope: !7954)
!7954 = distinct !DILexicalBlock(scope: !7947, file: !3, line: 1054, column: 86)
!7955 = !DILocation(line: 1056, column: 8, scope: !7954)
!7956 = !DILocation(line: 1058, column: 44, scope: !7954)
!7957 = !DILocation(line: 1058, column: 8, scope: !7954)
!7958 = !DILocation(line: 1059, column: 44, scope: !7954)
!7959 = !DILocation(line: 1059, column: 8, scope: !7954)
!7960 = !DILocation(line: 1060, column: 8, scope: !7954)
!7961 = !DILocation(line: 1062, column: 6, scope: !7948)
!7962 = !DILocation(line: 1063, column: 5, scope: !7923)
!7963 = distinct !{!7963, !7916, !7964}
!7964 = !DILocation(line: 1063, column: 5, scope: !7917)
!7965 = !DILocation(line: 1064, column: 4, scope: !7918)
!7966 = !DILocation(line: 1065, column: 3, scope: !7905)
!7967 = distinct !{!7967, !7900, !7968}
!7968 = !DILocation(line: 1065, column: 3, scope: !7901)
!7969 = distinct !{!7969, !7896, !7970}
!7970 = !DILocation(line: 1066, column: 2, scope: !7772)
!7971 = !DILocation(line: 1069, column: 49, scope: !7772)
!7972 = !DILocation(line: 1069, column: 55, scope: !7772)
!7973 = !DILocation(line: 1069, column: 60, scope: !7772)
!7974 = !DILocation(line: 1069, column: 65, scope: !7772)
!7975 = !DILocation(line: 1069, column: 70, scope: !7772)
!7976 = !DILocation(line: 1069, column: 15, scope: !7772)
!7977 = !DILocation(line: 1069, column: 13, scope: !7772)
!7978 = !DILocation(line: 1070, column: 49, scope: !7772)
!7979 = !DILocation(line: 1070, column: 55, scope: !7772)
!7980 = !DILocation(line: 1070, column: 60, scope: !7772)
!7981 = !DILocation(line: 1070, column: 65, scope: !7772)
!7982 = !DILocation(line: 1070, column: 70, scope: !7772)
!7983 = !DILocation(line: 1070, column: 73, scope: !7772)
!7984 = !DILocation(line: 1070, column: 15, scope: !7772)
!7985 = !DILocation(line: 1070, column: 13, scope: !7772)
!7986 = !DILocation(line: 1071, column: 2, scope: !7772)
!7987 = !DILocation(line: 1071, column: 14, scope: !7772)
!7988 = !DILocation(line: 1071, column: 19, scope: !7772)
!7989 = !DILocation(line: 1072, column: 2, scope: !7772)
!7990 = !DILocation(line: 1072, column: 14, scope: !7772)
!7991 = !DILocation(line: 1072, column: 19, scope: !7772)
!7992 = !DILocation(line: 1074, column: 6, scope: !7993)
!7993 = distinct !DILexicalBlock(scope: !7772, file: !3, line: 1074, column: 6)
!7994 = !DILocation(line: 1074, column: 6, scope: !7772)
!7995 = !DILocation(line: 1075, column: 36, scope: !7996)
!7996 = distinct !DILexicalBlock(scope: !7993, file: !3, line: 1074, column: 14)
!7997 = !DILocation(line: 1075, column: 43, scope: !7996)
!7998 = !DILocation(line: 1075, column: 48, scope: !7996)
!7999 = !DILocation(line: 1075, column: 51, scope: !7996)
!8000 = !DILocation(line: 1075, column: 14, scope: !7996)
!8001 = !DILocation(line: 1075, column: 12, scope: !7996)
!8002 = !DILocation(line: 1075, column: 10, scope: !7996)
!8003 = !DILocation(line: 1076, column: 2, scope: !7996)
!8004 = !DILocation(line: 1078, column: 10, scope: !8005)
!8005 = distinct !DILexicalBlock(scope: !7993, file: !3, line: 1077, column: 7)
!8006 = !DILocation(line: 1081, column: 2, scope: !8007)
!8007 = distinct !DILexicalBlock(scope: !7772, file: !3, line: 1081, column: 2)
!8008 = !DILocation(line: 1081, column: 2, scope: !8009)
!8009 = distinct !DILexicalBlock(scope: !8007, file: !3, line: 1081, column: 2)
!8010 = !DILocation(line: 1082, column: 3, scope: !8011)
!8011 = distinct !DILexicalBlock(scope: !8012, file: !3, line: 1082, column: 3)
!8012 = distinct !DILexicalBlock(scope: !8009, file: !3, line: 1081, column: 54)
!8013 = !DILocation(line: 1082, column: 3, scope: !8014)
!8014 = distinct !DILexicalBlock(scope: !8011, file: !3, line: 1082, column: 3)
!8015 = !DILocation(line: 1083, column: 51, scope: !8016)
!8016 = distinct !DILexicalBlock(scope: !8014, file: !3, line: 1082, column: 51)
!8017 = !DILocation(line: 1083, column: 57, scope: !8016)
!8018 = !DILocation(line: 1083, column: 62, scope: !8016)
!8019 = !DILocation(line: 1083, column: 17, scope: !8016)
!8020 = !DILocation(line: 1083, column: 15, scope: !8016)
!8021 = !DILocation(line: 1085, column: 8, scope: !8022)
!8022 = distinct !DILexicalBlock(scope: !8016, file: !3, line: 1085, column: 8)
!8023 = !DILocation(line: 1085, column: 20, scope: !8022)
!8024 = !DILocation(line: 1085, column: 8, scope: !8016)
!8025 = !DILocation(line: 1086, column: 26, scope: !8026)
!8026 = distinct !DILexicalBlock(scope: !8022, file: !3, line: 1085, column: 26)
!8027 = !DILocation(line: 1086, column: 30, scope: !8026)
!8028 = !DILocation(line: 1086, column: 37, scope: !8026)
!8029 = !DILocation(line: 1086, column: 40, scope: !8026)
!8030 = !DILocation(line: 1086, column: 55, scope: !8026)
!8031 = !DILocation(line: 1086, column: 5, scope: !8026)
!8032 = !DILocation(line: 1087, column: 4, scope: !8026)
!8033 = !DILocation(line: 1088, column: 3, scope: !8016)
!8034 = distinct !{!8034, !8010, !8035}
!8035 = !DILocation(line: 1088, column: 3, scope: !8011)
!8036 = !DILocation(line: 1089, column: 2, scope: !8012)
!8037 = distinct !{!8037, !8006, !8038}
!8038 = !DILocation(line: 1089, column: 2, scope: !8007)
!8039 = !DILocation(line: 1092, column: 22, scope: !7772)
!8040 = !DILocation(line: 1092, column: 2, scope: !7772)
!8041 = !DILocation(line: 1094, column: 10, scope: !7772)
!8042 = !DILocation(line: 1094, column: 9, scope: !7772)
!8043 = !DILocation(line: 1094, column: 2, scope: !7772)
!8044 = distinct !DISubprogram(name: "uv_select_linked", scope: !3, file: !3, line: 1099, type: !8045, scopeLine: 1100, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!8045 = !DISubroutineType(types: !8046)
!8046 = !{null, !3841, !3164, !3593, !4976, !5140, !2013}
!8047 = !DILocalVariable(name: "scene", arg: 1, scope: !8044, file: !3, line: 1099, type: !3841)
!8048 = !DILocation(line: 1099, column: 37, scope: !8044)
!8049 = !DILocalVariable(name: "ima", arg: 2, scope: !8044, file: !3, line: 1099, type: !3164)
!8050 = !DILocation(line: 1099, column: 51, scope: !8044)
!8051 = !DILocalVariable(name: "em", arg: 3, scope: !8044, file: !3, line: 1099, type: !3593)
!8052 = !DILocation(line: 1099, column: 68, scope: !8044)
!8053 = !DILocalVariable(name: "limit", arg: 4, scope: !8044, file: !3, line: 1099, type: !4976)
!8054 = !DILocation(line: 1099, column: 84, scope: !8044)
!8055 = !DILocalVariable(name: "hit", arg: 5, scope: !8044, file: !3, line: 1099, type: !5140)
!8056 = !DILocation(line: 1099, column: 106, scope: !8044)
!8057 = !DILocalVariable(name: "extend", arg: 6, scope: !8044, file: !3, line: 1099, type: !2013)
!8058 = !DILocation(line: 1099, column: 116, scope: !8044)
!8059 = !DILocalVariable(name: "efa", scope: !8044, file: !3, line: 1101, type: !3238)
!8060 = !DILocation(line: 1101, column: 10, scope: !8044)
!8061 = !DILocalVariable(name: "l", scope: !8044, file: !3, line: 1102, type: !3220)
!8062 = !DILocation(line: 1102, column: 10, scope: !8044)
!8063 = !DILocalVariable(name: "iter", scope: !8044, file: !3, line: 1103, type: !3856)
!8064 = !DILocation(line: 1103, column: 9, scope: !8044)
!8065 = !DILocalVariable(name: "liter", scope: !8044, file: !3, line: 1103, type: !3856)
!8066 = !DILocation(line: 1103, column: 15, scope: !8044)
!8067 = !DILocalVariable(name: "tf", scope: !8044, file: !3, line: 1104, type: !3945)
!8068 = !DILocation(line: 1104, column: 12, scope: !8044)
!8069 = !DILocalVariable(name: "luv", scope: !8044, file: !3, line: 1105, type: !3240)
!8070 = !DILocation(line: 1105, column: 11, scope: !8044)
!8071 = !DILocalVariable(name: "vmap", scope: !8044, file: !3, line: 1106, type: !7798)
!8072 = !DILocation(line: 1106, column: 13, scope: !8044)
!8073 = !DILocalVariable(name: "vlist", scope: !8044, file: !3, line: 1107, type: !7816)
!8074 = !DILocation(line: 1107, column: 13, scope: !8044)
!8075 = !DILocalVariable(name: "iterv", scope: !8044, file: !3, line: 1107, type: !7816)
!8076 = !DILocation(line: 1107, column: 21, scope: !8044)
!8077 = !DILocalVariable(name: "startv", scope: !8044, file: !3, line: 1107, type: !7816)
!8078 = !DILocation(line: 1107, column: 29, scope: !8044)
!8079 = !DILocalVariable(name: "i", scope: !8044, file: !3, line: 1108, type: !22)
!8080 = !DILocation(line: 1108, column: 6, scope: !8044)
!8081 = !DILocalVariable(name: "stacksize", scope: !8044, file: !3, line: 1108, type: !22)
!8082 = !DILocation(line: 1108, column: 9, scope: !8044)
!8083 = !DILocalVariable(name: "stack", scope: !8044, file: !3, line: 1108, type: !7092)
!8084 = !DILocation(line: 1108, column: 25, scope: !8044)
!8085 = !DILocalVariable(name: "a", scope: !8044, file: !3, line: 1109, type: !224)
!8086 = !DILocation(line: 1109, column: 15, scope: !8044)
!8087 = !DILocalVariable(name: "flag", scope: !8044, file: !3, line: 1110, type: !822)
!8088 = !DILocation(line: 1110, column: 8, scope: !8044)
!8089 = !DILocalVariable(name: "cd_loop_uv_offset", scope: !8044, file: !3, line: 1112, type: !4165)
!8090 = !DILocation(line: 1112, column: 12, scope: !8044)
!8091 = !DILocation(line: 1112, column: 56, scope: !8044)
!8092 = !DILocation(line: 1112, column: 60, scope: !8044)
!8093 = !DILocation(line: 1112, column: 64, scope: !8044)
!8094 = !DILocation(line: 1112, column: 33, scope: !8044)
!8095 = !DILocalVariable(name: "cd_poly_tex_offset", scope: !8044, file: !3, line: 1113, type: !4165)
!8096 = !DILocation(line: 1113, column: 12, scope: !8044)
!8097 = !DILocation(line: 1113, column: 56, scope: !8044)
!8098 = !DILocation(line: 1113, column: 60, scope: !8044)
!8099 = !DILocation(line: 1113, column: 64, scope: !8044)
!8100 = !DILocation(line: 1113, column: 33, scope: !8044)
!8101 = !DILocation(line: 1115, column: 28, scope: !8044)
!8102 = !DILocation(line: 1115, column: 32, scope: !8044)
!8103 = !DILocation(line: 1115, column: 2, scope: !8044)
!8104 = !DILocation(line: 1116, column: 31, scope: !8044)
!8105 = !DILocation(line: 1116, column: 35, scope: !8044)
!8106 = !DILocation(line: 1116, column: 42, scope: !8044)
!8107 = !DILocation(line: 1116, column: 9, scope: !8044)
!8108 = !DILocation(line: 1116, column: 7, scope: !8044)
!8109 = !DILocation(line: 1118, column: 6, scope: !8110)
!8110 = distinct !DILexicalBlock(scope: !8044, file: !3, line: 1118, column: 6)
!8111 = !DILocation(line: 1118, column: 11, scope: !8110)
!8112 = !DILocation(line: 1118, column: 6, scope: !8044)
!8113 = !DILocation(line: 1119, column: 3, scope: !8110)
!8114 = !DILocation(line: 1121, column: 10, scope: !8044)
!8115 = !DILocation(line: 1121, column: 40, scope: !8044)
!8116 = !DILocation(line: 1121, column: 44, scope: !8044)
!8117 = !DILocation(line: 1121, column: 48, scope: !8044)
!8118 = !DILocation(line: 1121, column: 56, scope: !8044)
!8119 = !DILocation(line: 1121, column: 39, scope: !8044)
!8120 = !DILocation(line: 1121, column: 37, scope: !8044)
!8121 = !DILocation(line: 1121, column: 8, scope: !8044)
!8122 = !DILocation(line: 1122, column: 9, scope: !8044)
!8123 = !DILocation(line: 1122, column: 37, scope: !8044)
!8124 = !DILocation(line: 1122, column: 41, scope: !8044)
!8125 = !DILocation(line: 1122, column: 45, scope: !8044)
!8126 = !DILocation(line: 1122, column: 35, scope: !8044)
!8127 = !DILocation(line: 1122, column: 7, scope: !8044)
!8128 = !DILocation(line: 1124, column: 7, scope: !8129)
!8129 = distinct !DILexicalBlock(scope: !8044, file: !3, line: 1124, column: 6)
!8130 = !DILocation(line: 1124, column: 6, scope: !8044)
!8131 = !DILocation(line: 1125, column: 3, scope: !8132)
!8132 = distinct !DILexicalBlock(scope: !8133, file: !3, line: 1125, column: 3)
!8133 = distinct !DILexicalBlock(scope: !8129, file: !3, line: 1124, column: 12)
!8134 = !DILocation(line: 1125, column: 3, scope: !8135)
!8135 = distinct !DILexicalBlock(scope: !8132, file: !3, line: 1125, column: 3)
!8136 = !DILocation(line: 1126, column: 9, scope: !8137)
!8137 = distinct !DILexicalBlock(scope: !8135, file: !3, line: 1125, column: 64)
!8138 = !DILocation(line: 1126, column: 7, scope: !8137)
!8139 = !DILocation(line: 1128, column: 33, scope: !8140)
!8140 = distinct !DILexicalBlock(scope: !8137, file: !3, line: 1128, column: 8)
!8141 = !DILocation(line: 1128, column: 40, scope: !8140)
!8142 = !DILocation(line: 1128, column: 45, scope: !8140)
!8143 = !DILocation(line: 1128, column: 50, scope: !8140)
!8144 = !DILocation(line: 1128, column: 8, scope: !8140)
!8145 = !DILocation(line: 1128, column: 8, scope: !8137)
!8146 = !DILocation(line: 1129, column: 5, scope: !8147)
!8147 = distinct !DILexicalBlock(scope: !8148, file: !3, line: 1129, column: 5)
!8148 = distinct !DILexicalBlock(scope: !8140, file: !3, line: 1128, column: 55)
!8149 = !DILocation(line: 1129, column: 5, scope: !8150)
!8150 = distinct !DILexicalBlock(scope: !8147, file: !3, line: 1129, column: 5)
!8151 = !DILocation(line: 1130, column: 12, scope: !8152)
!8152 = distinct !DILexicalBlock(scope: !8150, file: !3, line: 1129, column: 53)
!8153 = !DILocation(line: 1130, column: 10, scope: !8152)
!8154 = !DILocation(line: 1132, column: 10, scope: !8155)
!8155 = distinct !DILexicalBlock(scope: !8152, file: !3, line: 1132, column: 10)
!8156 = !DILocation(line: 1132, column: 15, scope: !8155)
!8157 = !DILocation(line: 1132, column: 20, scope: !8155)
!8158 = !DILocation(line: 1132, column: 10, scope: !8152)
!8159 = !DILocation(line: 1133, column: 26, scope: !8160)
!8160 = distinct !DILexicalBlock(scope: !8155, file: !3, line: 1132, column: 39)
!8161 = !DILocation(line: 1133, column: 7, scope: !8160)
!8162 = !DILocation(line: 1133, column: 13, scope: !8160)
!8163 = !DILocation(line: 1133, column: 24, scope: !8160)
!8164 = !DILocation(line: 1134, column: 16, scope: !8160)
!8165 = !DILocation(line: 1135, column: 7, scope: !8160)
!8166 = !DILocation(line: 1135, column: 12, scope: !8160)
!8167 = !DILocation(line: 1135, column: 15, scope: !8160)
!8168 = !DILocation(line: 1137, column: 7, scope: !8160)
!8169 = !DILocation(line: 1139, column: 5, scope: !8152)
!8170 = distinct !{!8170, !8146, !8171}
!8171 = !DILocation(line: 1139, column: 5, scope: !8147)
!8172 = !DILocation(line: 1140, column: 4, scope: !8148)
!8173 = !DILocation(line: 1141, column: 3, scope: !8137)
!8174 = distinct !{!8174, !8131, !8175}
!8175 = !DILocation(line: 1141, column: 3, scope: !8132)
!8176 = !DILocation(line: 1142, column: 2, scope: !8133)
!8177 = !DILocation(line: 1144, column: 3, scope: !8178)
!8178 = distinct !DILexicalBlock(scope: !8179, file: !3, line: 1144, column: 3)
!8179 = distinct !DILexicalBlock(scope: !8129, file: !3, line: 1143, column: 7)
!8180 = !DILocation(line: 1144, column: 3, scope: !8181)
!8181 = distinct !DILexicalBlock(scope: !8178, file: !3, line: 1144, column: 3)
!8182 = !DILocation(line: 1145, column: 8, scope: !8183)
!8183 = distinct !DILexicalBlock(scope: !8184, file: !3, line: 1145, column: 8)
!8184 = distinct !DILexicalBlock(scope: !8181, file: !3, line: 1144, column: 64)
!8185 = !DILocation(line: 1145, column: 15, scope: !8183)
!8186 = !DILocation(line: 1145, column: 20, scope: !8183)
!8187 = !DILocation(line: 1145, column: 12, scope: !8183)
!8188 = !DILocation(line: 1145, column: 8, scope: !8184)
!8189 = !DILocation(line: 1146, column: 24, scope: !8190)
!8190 = distinct !DILexicalBlock(scope: !8183, file: !3, line: 1145, column: 25)
!8191 = !DILocation(line: 1146, column: 5, scope: !8190)
!8192 = !DILocation(line: 1146, column: 11, scope: !8190)
!8193 = !DILocation(line: 1146, column: 22, scope: !8190)
!8194 = !DILocation(line: 1147, column: 14, scope: !8190)
!8195 = !DILocation(line: 1148, column: 5, scope: !8190)
!8196 = !DILocation(line: 1148, column: 10, scope: !8190)
!8197 = !DILocation(line: 1148, column: 13, scope: !8190)
!8198 = !DILocation(line: 1149, column: 5, scope: !8190)
!8199 = !DILocation(line: 1151, column: 3, scope: !8184)
!8200 = distinct !{!8200, !8177, !8201}
!8201 = !DILocation(line: 1151, column: 3, scope: !8178)
!8202 = !DILocation(line: 1154, column: 2, scope: !8044)
!8203 = !DILocation(line: 1154, column: 9, scope: !8044)
!8204 = !DILocation(line: 1154, column: 19, scope: !8044)
!8205 = !DILocation(line: 1156, column: 12, scope: !8206)
!8206 = distinct !DILexicalBlock(scope: !8044, file: !3, line: 1154, column: 24)
!8207 = !DILocation(line: 1157, column: 7, scope: !8206)
!8208 = !DILocation(line: 1157, column: 13, scope: !8206)
!8209 = !DILocation(line: 1157, column: 5, scope: !8206)
!8210 = !DILocation(line: 1159, column: 26, scope: !8206)
!8211 = !DILocation(line: 1159, column: 30, scope: !8206)
!8212 = !DILocation(line: 1159, column: 34, scope: !8206)
!8213 = !DILocation(line: 1159, column: 9, scope: !8206)
!8214 = !DILocation(line: 1159, column: 7, scope: !8206)
!8215 = !DILocation(line: 1161, column: 3, scope: !8216)
!8216 = distinct !DILexicalBlock(scope: !8206, file: !3, line: 1161, column: 3)
!8217 = !DILocation(line: 1161, column: 3, scope: !8218)
!8218 = distinct !DILexicalBlock(scope: !8216, file: !3, line: 1161, column: 3)
!8219 = !DILocation(line: 1164, column: 36, scope: !8220)
!8220 = distinct !DILexicalBlock(scope: !8218, file: !3, line: 1161, column: 60)
!8221 = !DILocation(line: 1164, column: 42, scope: !8220)
!8222 = !DILocation(line: 1164, column: 12, scope: !8220)
!8223 = !DILocation(line: 1164, column: 10, scope: !8220)
!8224 = !DILocation(line: 1166, column: 13, scope: !8220)
!8225 = !DILocation(line: 1166, column: 11, scope: !8220)
!8226 = !DILocation(line: 1168, column: 17, scope: !8227)
!8227 = distinct !DILexicalBlock(scope: !8220, file: !3, line: 1168, column: 4)
!8228 = !DILocation(line: 1168, column: 15, scope: !8227)
!8229 = !DILocation(line: 1168, column: 9, scope: !8227)
!8230 = !DILocation(line: 1168, column: 24, scope: !8231)
!8231 = distinct !DILexicalBlock(scope: !8227, file: !3, line: 1168, column: 4)
!8232 = !DILocation(line: 1168, column: 4, scope: !8227)
!8233 = !DILocation(line: 1169, column: 9, scope: !8234)
!8234 = distinct !DILexicalBlock(scope: !8235, file: !3, line: 1169, column: 9)
!8235 = distinct !DILexicalBlock(scope: !8231, file: !3, line: 1168, column: 52)
!8236 = !DILocation(line: 1169, column: 16, scope: !8234)
!8237 = !DILocation(line: 1169, column: 9, scope: !8235)
!8238 = !DILocation(line: 1170, column: 15, scope: !8234)
!8239 = !DILocation(line: 1170, column: 13, scope: !8234)
!8240 = !DILocation(line: 1170, column: 6, scope: !8234)
!8241 = !DILocation(line: 1171, column: 9, scope: !8242)
!8242 = distinct !DILexicalBlock(scope: !8235, file: !3, line: 1171, column: 9)
!8243 = !DILocation(line: 1171, column: 16, scope: !8242)
!8244 = !DILocation(line: 1171, column: 21, scope: !8242)
!8245 = !DILocation(line: 1171, column: 18, scope: !8242)
!8246 = !DILocation(line: 1171, column: 9, scope: !8235)
!8247 = !DILocation(line: 1172, column: 6, scope: !8242)
!8248 = !DILocation(line: 1173, column: 4, scope: !8235)
!8249 = !DILocation(line: 1168, column: 39, scope: !8231)
!8250 = !DILocation(line: 1168, column: 46, scope: !8231)
!8251 = !DILocation(line: 1168, column: 37, scope: !8231)
!8252 = !DILocation(line: 1168, column: 4, scope: !8231)
!8253 = distinct !{!8253, !8232, !8254}
!8254 = !DILocation(line: 1173, column: 4, scope: !8227)
!8255 = !DILocation(line: 1175, column: 17, scope: !8256)
!8256 = distinct !DILexicalBlock(scope: !8220, file: !3, line: 1175, column: 4)
!8257 = !DILocation(line: 1175, column: 15, scope: !8256)
!8258 = !DILocation(line: 1175, column: 9, scope: !8256)
!8259 = !DILocation(line: 1175, column: 25, scope: !8260)
!8260 = distinct !DILexicalBlock(scope: !8256, file: !3, line: 1175, column: 4)
!8261 = !DILocation(line: 1175, column: 4, scope: !8256)
!8262 = !DILocation(line: 1176, column: 10, scope: !8263)
!8263 = distinct !DILexicalBlock(scope: !8264, file: !3, line: 1176, column: 9)
!8264 = distinct !DILexicalBlock(scope: !8260, file: !3, line: 1175, column: 53)
!8265 = !DILocation(line: 1176, column: 20, scope: !8263)
!8266 = !DILocation(line: 1176, column: 17, scope: !8263)
!8267 = !DILocation(line: 1176, column: 27, scope: !8263)
!8268 = !DILocation(line: 1176, column: 31, scope: !8263)
!8269 = !DILocation(line: 1176, column: 38, scope: !8263)
!8270 = !DILocation(line: 1176, column: 30, scope: !8263)
!8271 = !DILocation(line: 1176, column: 9, scope: !8264)
!8272 = !DILocation(line: 1177, column: 6, scope: !8263)
!8273 = !DILocation(line: 1178, column: 15, scope: !8274)
!8274 = distinct !DILexicalBlock(scope: !8263, file: !3, line: 1178, column: 14)
!8275 = !DILocation(line: 1178, column: 20, scope: !8274)
!8276 = !DILocation(line: 1178, column: 27, scope: !8274)
!8277 = !DILocation(line: 1178, column: 14, scope: !8263)
!8278 = !DILocation(line: 1179, column: 6, scope: !8279)
!8279 = distinct !DILexicalBlock(scope: !8274, file: !3, line: 1178, column: 31)
!8280 = !DILocation(line: 1179, column: 11, scope: !8279)
!8281 = !DILocation(line: 1179, column: 18, scope: !8279)
!8282 = !DILocation(line: 1179, column: 21, scope: !8279)
!8283 = !DILocation(line: 1180, column: 25, scope: !8279)
!8284 = !DILocation(line: 1180, column: 32, scope: !8279)
!8285 = !DILocation(line: 1180, column: 6, scope: !8279)
!8286 = !DILocation(line: 1180, column: 12, scope: !8279)
!8287 = !DILocation(line: 1180, column: 23, scope: !8279)
!8288 = !DILocation(line: 1181, column: 15, scope: !8279)
!8289 = !DILocation(line: 1182, column: 5, scope: !8279)
!8290 = !DILocation(line: 1183, column: 4, scope: !8264)
!8291 = !DILocation(line: 1175, column: 40, scope: !8260)
!8292 = !DILocation(line: 1175, column: 47, scope: !8260)
!8293 = !DILocation(line: 1175, column: 38, scope: !8260)
!8294 = !DILocation(line: 1175, column: 4, scope: !8260)
!8295 = distinct !{!8295, !8261, !8296}
!8296 = !DILocation(line: 1183, column: 4, scope: !8256)
!8297 = !DILocation(line: 1184, column: 3, scope: !8220)
!8298 = distinct !{!8298, !8215, !8299}
!8299 = !DILocation(line: 1184, column: 3, scope: !8216)
!8300 = distinct !{!8300, !8202, !8301}
!8301 = !DILocation(line: 1185, column: 2, scope: !8044)
!8302 = !DILocation(line: 1187, column: 7, scope: !8303)
!8303 = distinct !DILexicalBlock(scope: !8044, file: !3, line: 1187, column: 6)
!8304 = !DILocation(line: 1187, column: 6, scope: !8044)
!8305 = !DILocation(line: 1188, column: 3, scope: !8306)
!8306 = distinct !DILexicalBlock(scope: !8307, file: !3, line: 1188, column: 3)
!8307 = distinct !DILexicalBlock(scope: !8303, file: !3, line: 1187, column: 15)
!8308 = !DILocation(line: 1188, column: 3, scope: !8309)
!8309 = distinct !DILexicalBlock(scope: !8306, file: !3, line: 1188, column: 3)
!8310 = !DILocation(line: 1189, column: 4, scope: !8311)
!8311 = distinct !DILexicalBlock(scope: !8312, file: !3, line: 1189, column: 4)
!8312 = distinct !DILexicalBlock(scope: !8309, file: !3, line: 1188, column: 64)
!8313 = !DILocation(line: 1189, column: 4, scope: !8314)
!8314 = distinct !DILexicalBlock(scope: !8311, file: !3, line: 1189, column: 4)
!8315 = !DILocation(line: 1190, column: 11, scope: !8316)
!8316 = distinct !DILexicalBlock(scope: !8314, file: !3, line: 1189, column: 52)
!8317 = !DILocation(line: 1190, column: 9, scope: !8316)
!8318 = !DILocation(line: 1192, column: 9, scope: !8319)
!8319 = distinct !DILexicalBlock(scope: !8316, file: !3, line: 1192, column: 9)
!8320 = !DILocation(line: 1192, column: 14, scope: !8319)
!8321 = !DILocation(line: 1192, column: 9, scope: !8316)
!8322 = !DILocation(line: 1193, column: 6, scope: !8319)
!8323 = !DILocation(line: 1193, column: 11, scope: !8319)
!8324 = !DILocation(line: 1193, column: 16, scope: !8319)
!8325 = !DILocation(line: 1195, column: 6, scope: !8319)
!8326 = !DILocation(line: 1195, column: 11, scope: !8319)
!8327 = !DILocation(line: 1195, column: 16, scope: !8319)
!8328 = !DILocation(line: 1196, column: 4, scope: !8316)
!8329 = distinct !{!8329, !8310, !8330}
!8330 = !DILocation(line: 1196, column: 4, scope: !8311)
!8331 = !DILocation(line: 1197, column: 3, scope: !8312)
!8332 = distinct !{!8332, !8305, !8333}
!8333 = !DILocation(line: 1197, column: 3, scope: !8306)
!8334 = !DILocation(line: 1198, column: 2, scope: !8307)
!8335 = !DILocation(line: 1200, column: 3, scope: !8336)
!8336 = distinct !DILexicalBlock(scope: !8337, file: !3, line: 1200, column: 3)
!8337 = distinct !DILexicalBlock(scope: !8303, file: !3, line: 1199, column: 7)
!8338 = !DILocation(line: 1200, column: 3, scope: !8339)
!8339 = distinct !DILexicalBlock(scope: !8336, file: !3, line: 1200, column: 3)
!8340 = !DILocation(line: 1201, column: 9, scope: !8341)
!8341 = distinct !DILexicalBlock(scope: !8342, file: !3, line: 1201, column: 8)
!8342 = distinct !DILexicalBlock(scope: !8339, file: !3, line: 1200, column: 64)
!8343 = !DILocation(line: 1201, column: 14, scope: !8341)
!8344 = !DILocation(line: 1201, column: 8, scope: !8342)
!8345 = !DILocation(line: 1202, column: 5, scope: !8346)
!8346 = distinct !DILexicalBlock(scope: !8341, file: !3, line: 1201, column: 18)
!8347 = !DILocation(line: 1205, column: 4, scope: !8348)
!8348 = distinct !DILexicalBlock(scope: !8342, file: !3, line: 1205, column: 4)
!8349 = !DILocation(line: 1205, column: 4, scope: !8350)
!8350 = distinct !DILexicalBlock(scope: !8348, file: !3, line: 1205, column: 4)
!8351 = !DILocation(line: 1206, column: 11, scope: !8352)
!8352 = distinct !DILexicalBlock(scope: !8350, file: !3, line: 1205, column: 52)
!8353 = !DILocation(line: 1206, column: 9, scope: !8352)
!8354 = !DILocation(line: 1208, column: 9, scope: !8355)
!8355 = distinct !DILexicalBlock(scope: !8352, file: !3, line: 1208, column: 9)
!8356 = !DILocation(line: 1208, column: 14, scope: !8355)
!8357 = !DILocation(line: 1208, column: 19, scope: !8355)
!8358 = !DILocation(line: 1208, column: 9, scope: !8352)
!8359 = !DILocation(line: 1209, column: 6, scope: !8360)
!8360 = distinct !DILexicalBlock(scope: !8355, file: !3, line: 1208, column: 38)
!8361 = !DILocation(line: 1211, column: 4, scope: !8352)
!8362 = distinct !{!8362, !8347, !8363}
!8363 = !DILocation(line: 1211, column: 4, scope: !8348)
!8364 = !DILocation(line: 1213, column: 8, scope: !8365)
!8365 = distinct !DILexicalBlock(scope: !8342, file: !3, line: 1213, column: 8)
!8366 = !DILocation(line: 1213, column: 8, scope: !8342)
!8367 = !DILocation(line: 1214, column: 5, scope: !8368)
!8368 = distinct !DILexicalBlock(scope: !8365, file: !3, line: 1213, column: 11)
!8369 = !DILocation(line: 1216, column: 3, scope: !8342)
!8370 = distinct !{!8370, !8335, !8371}
!8371 = !DILocation(line: 1216, column: 3, scope: !8336)
!8372 = !DILocation(line: 1218, column: 7, scope: !8373)
!8373 = distinct !DILexicalBlock(scope: !8337, file: !3, line: 1218, column: 7)
!8374 = !DILocation(line: 1218, column: 7, scope: !8337)
!8375 = !DILocation(line: 1219, column: 4, scope: !8376)
!8376 = distinct !DILexicalBlock(scope: !8377, file: !3, line: 1219, column: 4)
!8377 = distinct !DILexicalBlock(scope: !8373, file: !3, line: 1218, column: 12)
!8378 = !DILocation(line: 1219, column: 4, scope: !8379)
!8379 = distinct !DILexicalBlock(scope: !8376, file: !3, line: 1219, column: 4)
!8380 = !DILocation(line: 1220, column: 10, scope: !8381)
!8381 = distinct !DILexicalBlock(scope: !8382, file: !3, line: 1220, column: 9)
!8382 = distinct !DILexicalBlock(scope: !8379, file: !3, line: 1219, column: 65)
!8383 = !DILocation(line: 1220, column: 15, scope: !8381)
!8384 = !DILocation(line: 1220, column: 9, scope: !8382)
!8385 = !DILocation(line: 1221, column: 6, scope: !8386)
!8386 = distinct !DILexicalBlock(scope: !8381, file: !3, line: 1220, column: 19)
!8387 = !DILocation(line: 1224, column: 5, scope: !8388)
!8388 = distinct !DILexicalBlock(scope: !8382, file: !3, line: 1224, column: 5)
!8389 = !DILocation(line: 1224, column: 5, scope: !8390)
!8390 = distinct !DILexicalBlock(scope: !8388, file: !3, line: 1224, column: 5)
!8391 = !DILocation(line: 1225, column: 12, scope: !8392)
!8392 = distinct !DILexicalBlock(scope: !8390, file: !3, line: 1224, column: 53)
!8393 = !DILocation(line: 1225, column: 10, scope: !8392)
!8394 = !DILocation(line: 1227, column: 6, scope: !8392)
!8395 = !DILocation(line: 1227, column: 11, scope: !8392)
!8396 = !DILocation(line: 1227, column: 16, scope: !8392)
!8397 = !DILocation(line: 1228, column: 5, scope: !8392)
!8398 = distinct !{!8398, !8387, !8399}
!8399 = !DILocation(line: 1228, column: 5, scope: !8388)
!8400 = !DILocation(line: 1229, column: 4, scope: !8382)
!8401 = distinct !{!8401, !8375, !8402}
!8402 = !DILocation(line: 1229, column: 4, scope: !8376)
!8403 = !DILocation(line: 1230, column: 3, scope: !8377)
!8404 = !DILocation(line: 1232, column: 4, scope: !8405)
!8405 = distinct !DILexicalBlock(scope: !8406, file: !3, line: 1232, column: 4)
!8406 = distinct !DILexicalBlock(scope: !8373, file: !3, line: 1231, column: 8)
!8407 = !DILocation(line: 1232, column: 4, scope: !8408)
!8408 = distinct !DILexicalBlock(scope: !8405, file: !3, line: 1232, column: 4)
!8409 = !DILocation(line: 1233, column: 10, scope: !8410)
!8410 = distinct !DILexicalBlock(scope: !8411, file: !3, line: 1233, column: 9)
!8411 = distinct !DILexicalBlock(scope: !8408, file: !3, line: 1232, column: 65)
!8412 = !DILocation(line: 1233, column: 15, scope: !8410)
!8413 = !DILocation(line: 1233, column: 9, scope: !8411)
!8414 = !DILocation(line: 1234, column: 6, scope: !8415)
!8415 = distinct !DILexicalBlock(scope: !8410, file: !3, line: 1233, column: 19)
!8416 = !DILocation(line: 1237, column: 5, scope: !8417)
!8417 = distinct !DILexicalBlock(scope: !8411, file: !3, line: 1237, column: 5)
!8418 = !DILocation(line: 1237, column: 5, scope: !8419)
!8419 = distinct !DILexicalBlock(scope: !8417, file: !3, line: 1237, column: 5)
!8420 = !DILocation(line: 1238, column: 12, scope: !8421)
!8421 = distinct !DILexicalBlock(scope: !8419, file: !3, line: 1237, column: 53)
!8422 = !DILocation(line: 1238, column: 10, scope: !8421)
!8423 = !DILocation(line: 1240, column: 6, scope: !8421)
!8424 = !DILocation(line: 1240, column: 11, scope: !8421)
!8425 = !DILocation(line: 1240, column: 16, scope: !8421)
!8426 = !DILocation(line: 1241, column: 5, scope: !8421)
!8427 = distinct !{!8427, !8416, !8428}
!8428 = !DILocation(line: 1241, column: 5, scope: !8417)
!8429 = !DILocation(line: 1242, column: 4, scope: !8411)
!8430 = distinct !{!8430, !8404, !8431}
!8431 = !DILocation(line: 1242, column: 4, scope: !8405)
!8432 = !DILocation(line: 1246, column: 2, scope: !8044)
!8433 = !DILocation(line: 1246, column: 12, scope: !8044)
!8434 = !DILocation(line: 1247, column: 2, scope: !8044)
!8435 = !DILocation(line: 1247, column: 12, scope: !8044)
!8436 = !DILocation(line: 1248, column: 22, scope: !8044)
!8437 = !DILocation(line: 1248, column: 2, scope: !8044)
!8438 = !DILocation(line: 1249, column: 1, scope: !8044)
!8439 = distinct !DISubprogram(name: "uv_sticky_select", scope: !3, file: !3, line: 1978, type: !8440, scopeLine: 1979, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!8440 = !DISubroutineType(types: !8441)
!8441 = !{!2013, !630, !7092, !22, !7103, !630, !22, !22}
!8442 = !DILocalVariable(name: "limit", arg: 1, scope: !8439, file: !3, line: 1978, type: !630)
!8443 = !DILocation(line: 1978, column: 37, scope: !8439)
!8444 = !DILocalVariable(name: "hitv", arg: 2, scope: !8439, file: !3, line: 1978, type: !7092)
!8445 = !DILocation(line: 1978, column: 48, scope: !8439)
!8446 = !DILocalVariable(name: "v", arg: 3, scope: !8439, file: !3, line: 1978, type: !22)
!8447 = !DILocation(line: 1978, column: 61, scope: !8439)
!8448 = !DILocalVariable(name: "hituv", arg: 4, scope: !8439, file: !3, line: 1978, type: !7103)
!8449 = !DILocation(line: 1978, column: 71, scope: !8439)
!8450 = !DILocalVariable(name: "uv", arg: 5, scope: !8439, file: !3, line: 1978, type: !630)
!8451 = !DILocation(line: 1978, column: 88, scope: !8439)
!8452 = !DILocalVariable(name: "sticky", arg: 6, scope: !8439, file: !3, line: 1978, type: !22)
!8453 = !DILocation(line: 1978, column: 96, scope: !8439)
!8454 = !DILocalVariable(name: "hitlen", arg: 7, scope: !8439, file: !3, line: 1978, type: !22)
!8455 = !DILocation(line: 1978, column: 108, scope: !8439)
!8456 = !DILocalVariable(name: "i", scope: !8439, file: !3, line: 1980, type: !22)
!8457 = !DILocation(line: 1980, column: 6, scope: !8439)
!8458 = !DILocation(line: 1984, column: 6, scope: !8459)
!8459 = distinct !DILexicalBlock(scope: !8439, file: !3, line: 1984, column: 6)
!8460 = !DILocation(line: 1984, column: 13, scope: !8459)
!8461 = !DILocation(line: 1984, column: 6, scope: !8439)
!8462 = !DILocation(line: 1985, column: 3, scope: !8459)
!8463 = !DILocation(line: 1987, column: 9, scope: !8464)
!8464 = distinct !DILexicalBlock(scope: !8439, file: !3, line: 1987, column: 2)
!8465 = !DILocation(line: 1987, column: 7, scope: !8464)
!8466 = !DILocation(line: 1987, column: 14, scope: !8467)
!8467 = distinct !DILexicalBlock(scope: !8464, file: !3, line: 1987, column: 2)
!8468 = !DILocation(line: 1987, column: 18, scope: !8467)
!8469 = !DILocation(line: 1987, column: 16, scope: !8467)
!8470 = !DILocation(line: 1987, column: 2, scope: !8464)
!8471 = !DILocation(line: 1988, column: 7, scope: !8472)
!8472 = distinct !DILexicalBlock(scope: !8473, file: !3, line: 1988, column: 7)
!8473 = distinct !DILexicalBlock(scope: !8467, file: !3, line: 1987, column: 31)
!8474 = !DILocation(line: 1988, column: 12, scope: !8472)
!8475 = !DILocation(line: 1988, column: 18, scope: !8472)
!8476 = !DILocation(line: 1988, column: 15, scope: !8472)
!8477 = !DILocation(line: 1988, column: 7, scope: !8473)
!8478 = !DILocation(line: 1989, column: 8, scope: !8479)
!8479 = distinct !DILexicalBlock(scope: !8480, file: !3, line: 1989, column: 8)
!8480 = distinct !DILexicalBlock(scope: !8472, file: !3, line: 1988, column: 21)
!8481 = !DILocation(line: 1989, column: 15, scope: !8479)
!8482 = !DILocation(line: 1989, column: 8, scope: !8480)
!8483 = !DILocation(line: 1990, column: 15, scope: !8484)
!8484 = distinct !DILexicalBlock(scope: !8485, file: !3, line: 1990, column: 9)
!8485 = distinct !DILexicalBlock(scope: !8479, file: !3, line: 1989, column: 33)
!8486 = !DILocation(line: 1990, column: 21, scope: !8484)
!8487 = !DILocation(line: 1990, column: 29, scope: !8484)
!8488 = !DILocation(line: 1990, column: 27, scope: !8484)
!8489 = !DILocation(line: 1990, column: 9, scope: !8484)
!8490 = !DILocation(line: 1990, column: 38, scope: !8484)
!8491 = !DILocation(line: 1990, column: 36, scope: !8484)
!8492 = !DILocation(line: 1990, column: 47, scope: !8484)
!8493 = !DILocation(line: 1990, column: 56, scope: !8484)
!8494 = !DILocation(line: 1990, column: 62, scope: !8484)
!8495 = !DILocation(line: 1990, column: 70, scope: !8484)
!8496 = !DILocation(line: 1990, column: 68, scope: !8484)
!8497 = !DILocation(line: 1990, column: 50, scope: !8484)
!8498 = !DILocation(line: 1990, column: 79, scope: !8484)
!8499 = !DILocation(line: 1990, column: 77, scope: !8484)
!8500 = !DILocation(line: 1990, column: 9, scope: !8485)
!8501 = !DILocation(line: 1991, column: 6, scope: !8484)
!8502 = !DILocation(line: 1992, column: 4, scope: !8485)
!8503 = !DILocation(line: 1993, column: 13, scope: !8504)
!8504 = distinct !DILexicalBlock(scope: !8479, file: !3, line: 1993, column: 13)
!8505 = !DILocation(line: 1993, column: 20, scope: !8504)
!8506 = !DILocation(line: 1993, column: 13, scope: !8479)
!8507 = !DILocation(line: 1994, column: 5, scope: !8504)
!8508 = !DILocation(line: 1995, column: 3, scope: !8480)
!8509 = !DILocation(line: 1996, column: 2, scope: !8473)
!8510 = !DILocation(line: 1987, column: 27, scope: !8467)
!8511 = !DILocation(line: 1987, column: 2, scope: !8467)
!8512 = distinct !{!8512, !8470, !8513}
!8513 = !DILocation(line: 1996, column: 2, scope: !8464)
!8514 = !DILocation(line: 1998, column: 2, scope: !8439)
!8515 = !DILocation(line: 1999, column: 1, scope: !8439)
!8516 = distinct !DISubprogram(name: "uv_select_edgeloop_vertex_map_get", scope: !3, file: !3, line: 928, type: !8517, scopeLine: 929, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!8517 = !DISubroutineType(types: !8518)
!8518 = !{!7816, !7798, !3238, !3220}
!8519 = !DILocalVariable(name: "vmap", arg: 1, scope: !8516, file: !3, line: 928, type: !7798)
!8520 = !DILocation(line: 928, column: 64, scope: !8516)
!8521 = !DILocalVariable(name: "efa", arg: 2, scope: !8516, file: !3, line: 928, type: !3238)
!8522 = !DILocation(line: 928, column: 78, scope: !8516)
!8523 = !DILocalVariable(name: "l", arg: 3, scope: !8516, file: !3, line: 928, type: !3220)
!8524 = !DILocation(line: 928, column: 91, scope: !8516)
!8525 = !DILocalVariable(name: "iterv", scope: !8516, file: !3, line: 930, type: !7816)
!8526 = !DILocation(line: 930, column: 13, scope: !8516)
!8527 = !DILocalVariable(name: "first", scope: !8516, file: !3, line: 930, type: !7816)
!8528 = !DILocation(line: 930, column: 21, scope: !8516)
!8529 = !DILocation(line: 931, column: 34, scope: !8516)
!8530 = !DILocation(line: 931, column: 41, scope: !8516)
!8531 = !DILocation(line: 931, column: 10, scope: !8516)
!8532 = !DILocation(line: 931, column: 8, scope: !8516)
!8533 = !DILocation(line: 933, column: 15, scope: !8534)
!8534 = distinct !DILexicalBlock(scope: !8516, file: !3, line: 933, column: 2)
!8535 = !DILocation(line: 933, column: 13, scope: !8534)
!8536 = !DILocation(line: 933, column: 7, scope: !8534)
!8537 = !DILocation(line: 933, column: 22, scope: !8538)
!8538 = distinct !DILexicalBlock(scope: !8534, file: !3, line: 933, column: 2)
!8539 = !DILocation(line: 933, column: 2, scope: !8534)
!8540 = !DILocation(line: 934, column: 7, scope: !8541)
!8541 = distinct !DILexicalBlock(scope: !8542, file: !3, line: 934, column: 7)
!8542 = distinct !DILexicalBlock(scope: !8538, file: !3, line: 933, column: 50)
!8543 = !DILocation(line: 934, column: 14, scope: !8541)
!8544 = !DILocation(line: 934, column: 7, scope: !8542)
!8545 = !DILocation(line: 935, column: 12, scope: !8541)
!8546 = !DILocation(line: 935, column: 10, scope: !8541)
!8547 = !DILocation(line: 935, column: 4, scope: !8541)
!8548 = !DILocation(line: 936, column: 7, scope: !8549)
!8549 = distinct !DILexicalBlock(scope: !8542, file: !3, line: 936, column: 7)
!8550 = !DILocation(line: 936, column: 14, scope: !8549)
!8551 = !DILocation(line: 936, column: 19, scope: !8549)
!8552 = !DILocation(line: 936, column: 16, scope: !8549)
!8553 = !DILocation(line: 936, column: 7, scope: !8542)
!8554 = !DILocation(line: 937, column: 11, scope: !8549)
!8555 = !DILocation(line: 937, column: 4, scope: !8549)
!8556 = !DILocation(line: 938, column: 2, scope: !8542)
!8557 = !DILocation(line: 933, column: 37, scope: !8538)
!8558 = !DILocation(line: 933, column: 44, scope: !8538)
!8559 = !DILocation(line: 933, column: 35, scope: !8538)
!8560 = !DILocation(line: 933, column: 2, scope: !8538)
!8561 = distinct !{!8561, !8539, !8562}
!8562 = !DILocation(line: 938, column: 2, scope: !8534)
!8563 = !DILocation(line: 940, column: 2, scope: !8516)
!8564 = !DILocation(line: 941, column: 1, scope: !8516)
!8565 = distinct !DISubprogram(name: "uv_select_edgeloop_vertex_loop_flag", scope: !3, file: !3, line: 912, type: !8566, scopeLine: 913, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!8566 = !DISubroutineType(types: !8567)
!8567 = !{null, !7816}
!8568 = !DILocalVariable(name: "first", arg: 1, scope: !8565, file: !3, line: 912, type: !7816)
!8569 = !DILocation(line: 912, column: 60, scope: !8565)
!8570 = !DILocalVariable(name: "iterv", scope: !8565, file: !3, line: 914, type: !7816)
!8571 = !DILocation(line: 914, column: 13, scope: !8565)
!8572 = !DILocalVariable(name: "count", scope: !8565, file: !3, line: 915, type: !22)
!8573 = !DILocation(line: 915, column: 6, scope: !8565)
!8574 = !DILocation(line: 917, column: 15, scope: !8575)
!8575 = distinct !DILexicalBlock(scope: !8565, file: !3, line: 917, column: 2)
!8576 = !DILocation(line: 917, column: 13, scope: !8575)
!8577 = !DILocation(line: 917, column: 7, scope: !8575)
!8578 = !DILocation(line: 917, column: 22, scope: !8579)
!8579 = distinct !DILexicalBlock(scope: !8575, file: !3, line: 917, column: 2)
!8580 = !DILocation(line: 917, column: 2, scope: !8575)
!8581 = !DILocation(line: 918, column: 7, scope: !8582)
!8582 = distinct !DILexicalBlock(scope: !8583, file: !3, line: 918, column: 7)
!8583 = distinct !DILexicalBlock(scope: !8579, file: !3, line: 917, column: 50)
!8584 = !DILocation(line: 918, column: 14, scope: !8582)
!8585 = !DILocation(line: 918, column: 23, scope: !8582)
!8586 = !DILocation(line: 918, column: 26, scope: !8582)
!8587 = !DILocation(line: 918, column: 35, scope: !8582)
!8588 = !DILocation(line: 918, column: 32, scope: !8582)
!8589 = !DILocation(line: 918, column: 7, scope: !8583)
!8590 = !DILocation(line: 919, column: 4, scope: !8582)
!8591 = !DILocation(line: 921, column: 8, scope: !8583)
!8592 = !DILocation(line: 922, column: 2, scope: !8583)
!8593 = !DILocation(line: 917, column: 37, scope: !8579)
!8594 = !DILocation(line: 917, column: 44, scope: !8579)
!8595 = !DILocation(line: 917, column: 35, scope: !8579)
!8596 = !DILocation(line: 917, column: 2, scope: !8579)
!8597 = distinct !{!8597, !8580, !8598}
!8598 = !DILocation(line: 922, column: 2, scope: !8575)
!8599 = !DILocation(line: 924, column: 6, scope: !8600)
!8600 = distinct !DILexicalBlock(scope: !8565, file: !3, line: 924, column: 6)
!8601 = !DILocation(line: 924, column: 12, scope: !8600)
!8602 = !DILocation(line: 924, column: 6, scope: !8565)
!8603 = !DILocation(line: 925, column: 3, scope: !8600)
!8604 = !DILocation(line: 925, column: 10, scope: !8600)
!8605 = !DILocation(line: 925, column: 15, scope: !8600)
!8606 = !DILocation(line: 926, column: 1, scope: !8565)
!8607 = distinct !DISubprogram(name: "uv_select_edgeloop_edge_tag_faces", scope: !3, file: !3, line: 943, type: !8608, scopeLine: 944, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!8608 = !DISubroutineType(types: !8609)
!8609 = !{!2013, !3593, !7816, !7816, !7092}
!8610 = !DILocalVariable(name: "em", arg: 1, scope: !8607, file: !3, line: 943, type: !3593)
!8611 = !DILocation(line: 943, column: 59, scope: !8607)
!8612 = !DILocalVariable(name: "first1", arg: 2, scope: !8607, file: !3, line: 943, type: !7816)
!8613 = !DILocation(line: 943, column: 74, scope: !8607)
!8614 = !DILocalVariable(name: "first2", arg: 3, scope: !8607, file: !3, line: 943, type: !7816)
!8615 = !DILocation(line: 943, column: 93, scope: !8607)
!8616 = !DILocalVariable(name: "totface", arg: 4, scope: !8607, file: !3, line: 943, type: !7092)
!8617 = !DILocation(line: 943, column: 106, scope: !8607)
!8618 = !DILocalVariable(name: "iterv1", scope: !8607, file: !3, line: 945, type: !7816)
!8619 = !DILocation(line: 945, column: 13, scope: !8607)
!8620 = !DILocalVariable(name: "iterv2", scope: !8607, file: !3, line: 945, type: !7816)
!8621 = !DILocation(line: 945, column: 22, scope: !8607)
!8622 = !DILocalVariable(name: "efa", scope: !8607, file: !3, line: 946, type: !3238)
!8623 = !DILocation(line: 946, column: 10, scope: !8607)
!8624 = !DILocalVariable(name: "tot", scope: !8607, file: !3, line: 947, type: !22)
!8625 = !DILocation(line: 947, column: 6, scope: !8607)
!8626 = !DILocation(line: 950, column: 16, scope: !8627)
!8627 = distinct !DILexicalBlock(scope: !8607, file: !3, line: 950, column: 2)
!8628 = !DILocation(line: 950, column: 14, scope: !8627)
!8629 = !DILocation(line: 950, column: 7, scope: !8627)
!8630 = !DILocation(line: 950, column: 24, scope: !8631)
!8631 = distinct !DILexicalBlock(scope: !8627, file: !3, line: 950, column: 2)
!8632 = !DILocation(line: 950, column: 2, scope: !8627)
!8633 = !DILocation(line: 951, column: 7, scope: !8634)
!8634 = distinct !DILexicalBlock(scope: !8635, file: !3, line: 951, column: 7)
!8635 = distinct !DILexicalBlock(scope: !8631, file: !3, line: 950, column: 55)
!8636 = !DILocation(line: 951, column: 15, scope: !8634)
!8637 = !DILocation(line: 951, column: 24, scope: !8634)
!8638 = !DILocation(line: 951, column: 27, scope: !8634)
!8639 = !DILocation(line: 951, column: 37, scope: !8634)
!8640 = !DILocation(line: 951, column: 34, scope: !8634)
!8641 = !DILocation(line: 951, column: 7, scope: !8635)
!8642 = !DILocation(line: 952, column: 4, scope: !8634)
!8643 = !DILocation(line: 954, column: 17, scope: !8644)
!8644 = distinct !DILexicalBlock(scope: !8635, file: !3, line: 954, column: 3)
!8645 = !DILocation(line: 954, column: 15, scope: !8644)
!8646 = !DILocation(line: 954, column: 8, scope: !8644)
!8647 = !DILocation(line: 954, column: 25, scope: !8648)
!8648 = distinct !DILexicalBlock(scope: !8644, file: !3, line: 954, column: 3)
!8649 = !DILocation(line: 954, column: 3, scope: !8644)
!8650 = !DILocation(line: 955, column: 8, scope: !8651)
!8651 = distinct !DILexicalBlock(scope: !8652, file: !3, line: 955, column: 8)
!8652 = distinct !DILexicalBlock(scope: !8648, file: !3, line: 954, column: 56)
!8653 = !DILocation(line: 955, column: 16, scope: !8651)
!8654 = !DILocation(line: 955, column: 25, scope: !8651)
!8655 = !DILocation(line: 955, column: 28, scope: !8651)
!8656 = !DILocation(line: 955, column: 38, scope: !8651)
!8657 = !DILocation(line: 955, column: 35, scope: !8651)
!8658 = !DILocation(line: 955, column: 8, scope: !8652)
!8659 = !DILocation(line: 956, column: 5, scope: !8651)
!8660 = !DILocation(line: 958, column: 8, scope: !8661)
!8661 = distinct !DILexicalBlock(scope: !8652, file: !3, line: 958, column: 8)
!8662 = !DILocation(line: 958, column: 16, scope: !8661)
!8663 = !DILocation(line: 958, column: 21, scope: !8661)
!8664 = !DILocation(line: 958, column: 29, scope: !8661)
!8665 = !DILocation(line: 958, column: 18, scope: !8661)
!8666 = !DILocation(line: 958, column: 8, scope: !8652)
!8667 = !DILocation(line: 960, column: 28, scope: !8668)
!8668 = distinct !DILexicalBlock(scope: !8661, file: !3, line: 958, column: 32)
!8669 = !DILocation(line: 960, column: 32, scope: !8668)
!8670 = !DILocation(line: 960, column: 36, scope: !8668)
!8671 = !DILocation(line: 960, column: 44, scope: !8668)
!8672 = !DILocation(line: 960, column: 11, scope: !8668)
!8673 = !DILocation(line: 960, column: 9, scope: !8668)
!8674 = !DILocation(line: 961, column: 9, scope: !8675)
!8675 = distinct !DILexicalBlock(scope: !8668, file: !3, line: 961, column: 9)
!8676 = !DILocation(line: 961, column: 9, scope: !8668)
!8677 = !DILocation(line: 962, column: 6, scope: !8675)
!8678 = !DILocation(line: 964, column: 8, scope: !8668)
!8679 = !DILocation(line: 965, column: 5, scope: !8668)
!8680 = !DILocation(line: 967, column: 3, scope: !8652)
!8681 = !DILocation(line: 954, column: 42, scope: !8648)
!8682 = !DILocation(line: 954, column: 50, scope: !8648)
!8683 = !DILocation(line: 954, column: 40, scope: !8648)
!8684 = !DILocation(line: 954, column: 3, scope: !8648)
!8685 = distinct !{!8685, !8649, !8686}
!8686 = !DILocation(line: 967, column: 3, scope: !8644)
!8687 = !DILocation(line: 968, column: 2, scope: !8635)
!8688 = !DILocation(line: 950, column: 41, scope: !8631)
!8689 = !DILocation(line: 950, column: 49, scope: !8631)
!8690 = !DILocation(line: 950, column: 39, scope: !8631)
!8691 = !DILocation(line: 950, column: 2, scope: !8631)
!8692 = distinct !{!8692, !8632, !8693}
!8693 = !DILocation(line: 968, column: 2, scope: !8627)
!8694 = !DILocation(line: 970, column: 7, scope: !8695)
!8695 = distinct !DILexicalBlock(scope: !8607, file: !3, line: 970, column: 6)
!8696 = !DILocation(line: 970, column: 6, scope: !8695)
!8697 = !DILocation(line: 970, column: 15, scope: !8695)
!8698 = !DILocation(line: 970, column: 6, scope: !8607)
!8699 = !DILocation(line: 971, column: 14, scope: !8695)
!8700 = !DILocation(line: 971, column: 4, scope: !8695)
!8701 = !DILocation(line: 971, column: 12, scope: !8695)
!8702 = !DILocation(line: 971, column: 3, scope: !8695)
!8703 = !DILocation(line: 972, column: 11, scope: !8704)
!8704 = distinct !DILexicalBlock(scope: !8695, file: !3, line: 972, column: 11)
!8705 = !DILocation(line: 972, column: 19, scope: !8704)
!8706 = !DILocation(line: 972, column: 18, scope: !8704)
!8707 = !DILocation(line: 972, column: 15, scope: !8704)
!8708 = !DILocation(line: 972, column: 11, scope: !8695)
!8709 = !DILocation(line: 973, column: 3, scope: !8704)
!8710 = !DILocation(line: 976, column: 16, scope: !8711)
!8711 = distinct !DILexicalBlock(scope: !8607, file: !3, line: 976, column: 2)
!8712 = !DILocation(line: 976, column: 14, scope: !8711)
!8713 = !DILocation(line: 976, column: 7, scope: !8711)
!8714 = !DILocation(line: 976, column: 24, scope: !8715)
!8715 = distinct !DILexicalBlock(scope: !8711, file: !3, line: 976, column: 2)
!8716 = !DILocation(line: 976, column: 2, scope: !8711)
!8717 = !DILocation(line: 977, column: 7, scope: !8718)
!8718 = distinct !DILexicalBlock(scope: !8719, file: !3, line: 977, column: 7)
!8719 = distinct !DILexicalBlock(scope: !8715, file: !3, line: 976, column: 55)
!8720 = !DILocation(line: 977, column: 15, scope: !8718)
!8721 = !DILocation(line: 977, column: 24, scope: !8718)
!8722 = !DILocation(line: 977, column: 27, scope: !8718)
!8723 = !DILocation(line: 977, column: 37, scope: !8718)
!8724 = !DILocation(line: 977, column: 34, scope: !8718)
!8725 = !DILocation(line: 977, column: 7, scope: !8719)
!8726 = !DILocation(line: 978, column: 4, scope: !8718)
!8727 = !DILocation(line: 980, column: 17, scope: !8728)
!8728 = distinct !DILexicalBlock(scope: !8719, file: !3, line: 980, column: 3)
!8729 = !DILocation(line: 980, column: 15, scope: !8728)
!8730 = !DILocation(line: 980, column: 8, scope: !8728)
!8731 = !DILocation(line: 980, column: 25, scope: !8732)
!8732 = distinct !DILexicalBlock(scope: !8728, file: !3, line: 980, column: 3)
!8733 = !DILocation(line: 980, column: 3, scope: !8728)
!8734 = !DILocation(line: 981, column: 8, scope: !8735)
!8735 = distinct !DILexicalBlock(scope: !8736, file: !3, line: 981, column: 8)
!8736 = distinct !DILexicalBlock(scope: !8732, file: !3, line: 980, column: 56)
!8737 = !DILocation(line: 981, column: 16, scope: !8735)
!8738 = !DILocation(line: 981, column: 25, scope: !8735)
!8739 = !DILocation(line: 981, column: 28, scope: !8735)
!8740 = !DILocation(line: 981, column: 38, scope: !8735)
!8741 = !DILocation(line: 981, column: 35, scope: !8735)
!8742 = !DILocation(line: 981, column: 8, scope: !8736)
!8743 = !DILocation(line: 982, column: 5, scope: !8735)
!8744 = !DILocation(line: 984, column: 8, scope: !8745)
!8745 = distinct !DILexicalBlock(scope: !8736, file: !3, line: 984, column: 8)
!8746 = !DILocation(line: 984, column: 16, scope: !8745)
!8747 = !DILocation(line: 984, column: 21, scope: !8745)
!8748 = !DILocation(line: 984, column: 29, scope: !8745)
!8749 = !DILocation(line: 984, column: 18, scope: !8745)
!8750 = !DILocation(line: 984, column: 8, scope: !8736)
!8751 = !DILocation(line: 985, column: 28, scope: !8752)
!8752 = distinct !DILexicalBlock(scope: !8745, file: !3, line: 984, column: 32)
!8753 = !DILocation(line: 985, column: 32, scope: !8752)
!8754 = !DILocation(line: 985, column: 36, scope: !8752)
!8755 = !DILocation(line: 985, column: 44, scope: !8752)
!8756 = !DILocation(line: 985, column: 11, scope: !8752)
!8757 = !DILocation(line: 985, column: 9, scope: !8752)
!8758 = !DILocation(line: 986, column: 5, scope: !8752)
!8759 = !DILocation(line: 987, column: 5, scope: !8752)
!8760 = !DILocation(line: 989, column: 3, scope: !8736)
!8761 = !DILocation(line: 980, column: 42, scope: !8732)
!8762 = !DILocation(line: 980, column: 50, scope: !8732)
!8763 = !DILocation(line: 980, column: 40, scope: !8732)
!8764 = !DILocation(line: 980, column: 3, scope: !8732)
!8765 = distinct !{!8765, !8733, !8766}
!8766 = !DILocation(line: 989, column: 3, scope: !8728)
!8767 = !DILocation(line: 990, column: 2, scope: !8719)
!8768 = !DILocation(line: 976, column: 41, scope: !8715)
!8769 = !DILocation(line: 976, column: 49, scope: !8715)
!8770 = !DILocation(line: 976, column: 39, scope: !8715)
!8771 = !DILocation(line: 976, column: 2, scope: !8715)
!8772 = distinct !{!8772, !8716, !8773}
!8773 = !DILocation(line: 990, column: 2, scope: !8711)
!8774 = !DILocation(line: 992, column: 2, scope: !8607)
!8775 = !DILocation(line: 993, column: 1, scope: !8607)
!8776 = distinct !DISubprogram(name: "_bm_elem_flag_enable", scope: !4247, file: !4247, line: 52, type: !8777, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!8777 = !DISubroutineType(types: !8778)
!8778 = !{null, !8779, !13}
!8779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3171, size: 64)
!8780 = !DILocalVariable(name: "head", arg: 1, scope: !8776, file: !4247, line: 52, type: !8779)
!8781 = !DILocation(line: 52, column: 48, scope: !8776)
!8782 = !DILocalVariable(name: "hflag", arg: 2, scope: !8776, file: !4247, line: 52, type: !13)
!8783 = !DILocation(line: 52, column: 65, scope: !8776)
!8784 = !DILocation(line: 54, column: 17, scope: !8776)
!8785 = !DILocation(line: 54, column: 2, scope: !8776)
!8786 = !DILocation(line: 54, column: 8, scope: !8776)
!8787 = !DILocation(line: 54, column: 14, scope: !8776)
!8788 = !DILocation(line: 55, column: 1, scope: !8776)
!8789 = distinct !DISubprogram(name: "uv_select_loop_exec", scope: !3, file: !3, line: 2305, type: !6778, scopeLine: 2306, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!8790 = !DILocalVariable(name: "C", arg: 1, scope: !8789, file: !3, line: 2305, type: !6780)
!8791 = !DILocation(line: 2305, column: 42, scope: !8789)
!8792 = !DILocalVariable(name: "op", arg: 2, scope: !8789, file: !3, line: 2305, type: !6783)
!8793 = !DILocation(line: 2305, column: 57, scope: !8789)
!8794 = !DILocalVariable(name: "co", scope: !8789, file: !3, line: 2307, type: !769)
!8795 = !DILocation(line: 2307, column: 8, scope: !8789)
!8796 = !DILocalVariable(name: "extend", scope: !8789, file: !3, line: 2308, type: !2013)
!8797 = !DILocation(line: 2308, column: 7, scope: !8789)
!8798 = !DILocalVariable(name: "loop", scope: !8789, file: !3, line: 2308, type: !2013)
!8799 = !DILocation(line: 2308, column: 15, scope: !8789)
!8800 = !DILocation(line: 2310, column: 22, scope: !8789)
!8801 = !DILocation(line: 2310, column: 26, scope: !8789)
!8802 = !DILocation(line: 2310, column: 43, scope: !8789)
!8803 = !DILocation(line: 2310, column: 2, scope: !8789)
!8804 = !DILocation(line: 2311, column: 27, scope: !8789)
!8805 = !DILocation(line: 2311, column: 31, scope: !8789)
!8806 = !DILocation(line: 2311, column: 11, scope: !8789)
!8807 = !DILocation(line: 2311, column: 9, scope: !8789)
!8808 = !DILocation(line: 2312, column: 7, scope: !8789)
!8809 = !DILocation(line: 2314, column: 25, scope: !8789)
!8810 = !DILocation(line: 2314, column: 28, scope: !8789)
!8811 = !DILocation(line: 2314, column: 32, scope: !8789)
!8812 = !DILocation(line: 2314, column: 40, scope: !8789)
!8813 = !DILocation(line: 2314, column: 9, scope: !8789)
!8814 = !DILocation(line: 2314, column: 2, scope: !8789)
!8815 = distinct !DISubprogram(name: "uv_select_loop_invoke", scope: !3, file: !3, line: 2317, type: !6998, scopeLine: 2318, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!8816 = !DILocalVariable(name: "C", arg: 1, scope: !8815, file: !3, line: 2317, type: !6780)
!8817 = !DILocation(line: 2317, column: 44, scope: !8815)
!8818 = !DILocalVariable(name: "op", arg: 2, scope: !8815, file: !3, line: 2317, type: !6783)
!8819 = !DILocation(line: 2317, column: 59, scope: !8815)
!8820 = !DILocalVariable(name: "event", arg: 3, scope: !8815, file: !3, line: 2317, type: !7000)
!8821 = !DILocation(line: 2317, column: 78, scope: !8815)
!8822 = !DILocalVariable(name: "ar", scope: !8815, file: !3, line: 2319, type: !7010)
!8823 = !DILocation(line: 2319, column: 11, scope: !8815)
!8824 = !DILocation(line: 2319, column: 30, scope: !8815)
!8825 = !DILocation(line: 2319, column: 16, scope: !8815)
!8826 = !DILocalVariable(name: "co", scope: !8815, file: !3, line: 2320, type: !769)
!8827 = !DILocation(line: 2320, column: 8, scope: !8815)
!8828 = !DILocation(line: 2322, column: 28, scope: !8815)
!8829 = !DILocation(line: 2322, column: 32, scope: !8815)
!8830 = !DILocation(line: 2322, column: 37, scope: !8815)
!8831 = !DILocation(line: 2322, column: 44, scope: !8815)
!8832 = !DILocation(line: 2322, column: 53, scope: !8815)
!8833 = !DILocation(line: 2322, column: 60, scope: !8815)
!8834 = !DILocation(line: 2322, column: 70, scope: !8815)
!8835 = !DILocation(line: 2322, column: 78, scope: !8815)
!8836 = !DILocation(line: 2322, column: 2, scope: !8815)
!8837 = !DILocation(line: 2323, column: 22, scope: !8815)
!8838 = !DILocation(line: 2323, column: 26, scope: !8815)
!8839 = !DILocation(line: 2323, column: 43, scope: !8815)
!8840 = !DILocation(line: 2323, column: 2, scope: !8815)
!8841 = !DILocation(line: 2325, column: 29, scope: !8815)
!8842 = !DILocation(line: 2325, column: 32, scope: !8815)
!8843 = !DILocation(line: 2325, column: 9, scope: !8815)
!8844 = !DILocation(line: 2325, column: 2, scope: !8815)
!8845 = distinct !DISubprogram(name: "uv_select_linked_exec", scope: !3, file: !3, line: 2398, type: !6778, scopeLine: 2399, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!8846 = !DILocalVariable(name: "C", arg: 1, scope: !8845, file: !3, line: 2398, type: !6780)
!8847 = !DILocation(line: 2398, column: 44, scope: !8845)
!8848 = !DILocalVariable(name: "op", arg: 2, scope: !8845, file: !3, line: 2398, type: !6783)
!8849 = !DILocation(line: 2398, column: 59, scope: !8845)
!8850 = !DILocation(line: 2400, column: 35, scope: !8845)
!8851 = !DILocation(line: 2400, column: 38, scope: !8845)
!8852 = !DILocation(line: 2400, column: 9, scope: !8845)
!8853 = !DILocation(line: 2400, column: 2, scope: !8845)
!8854 = distinct !DISubprogram(name: "uv_select_linked_internal", scope: !3, file: !3, line: 2350, type: !8855, scopeLine: 2351, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!8855 = !DISubroutineType(types: !8856)
!8856 = !{!22, !6780, !6783, !7000, !22}
!8857 = !DILocalVariable(name: "C", arg: 1, scope: !8854, file: !3, line: 2350, type: !6780)
!8858 = !DILocation(line: 2350, column: 48, scope: !8854)
!8859 = !DILocalVariable(name: "op", arg: 2, scope: !8854, file: !3, line: 2350, type: !6783)
!8860 = !DILocation(line: 2350, column: 63, scope: !8854)
!8861 = !DILocalVariable(name: "event", arg: 3, scope: !8854, file: !3, line: 2350, type: !7000)
!8862 = !DILocation(line: 2350, column: 82, scope: !8854)
!8863 = !DILocalVariable(name: "pick", arg: 4, scope: !8854, file: !3, line: 2350, type: !22)
!8864 = !DILocation(line: 2350, column: 93, scope: !8854)
!8865 = !DILocalVariable(name: "sima", scope: !8854, file: !3, line: 2352, type: !4824)
!8866 = !DILocation(line: 2352, column: 14, scope: !8854)
!8867 = !DILocation(line: 2352, column: 40, scope: !8854)
!8868 = !DILocation(line: 2352, column: 21, scope: !8854)
!8869 = !DILocalVariable(name: "scene", scope: !8854, file: !3, line: 2353, type: !3841)
!8870 = !DILocation(line: 2353, column: 9, scope: !8854)
!8871 = !DILocation(line: 2353, column: 32, scope: !8854)
!8872 = !DILocation(line: 2353, column: 17, scope: !8854)
!8873 = !DILocalVariable(name: "ts", scope: !8854, file: !3, line: 2354, type: !4138)
!8874 = !DILocation(line: 2354, column: 16, scope: !8854)
!8875 = !DILocation(line: 2354, column: 21, scope: !8854)
!8876 = !DILocation(line: 2354, column: 28, scope: !8854)
!8877 = !DILocalVariable(name: "obedit", scope: !8854, file: !3, line: 2355, type: !3588)
!8878 = !DILocation(line: 2355, column: 10, scope: !8854)
!8879 = !DILocation(line: 2355, column: 40, scope: !8854)
!8880 = !DILocation(line: 2355, column: 19, scope: !8854)
!8881 = !DILocalVariable(name: "ima", scope: !8854, file: !3, line: 2356, type: !3164)
!8882 = !DILocation(line: 2356, column: 9, scope: !8854)
!8883 = !DILocation(line: 2356, column: 35, scope: !8854)
!8884 = !DILocation(line: 2356, column: 15, scope: !8854)
!8885 = !DILocalVariable(name: "em", scope: !8854, file: !3, line: 2357, type: !3593)
!8886 = !DILocation(line: 2357, column: 14, scope: !8854)
!8887 = !DILocation(line: 2357, column: 44, scope: !8854)
!8888 = !DILocation(line: 2357, column: 19, scope: !8854)
!8889 = !DILocalVariable(name: "limit", scope: !8854, file: !3, line: 2358, type: !769)
!8890 = !DILocation(line: 2358, column: 8, scope: !8854)
!8891 = !DILocalVariable(name: "extend", scope: !8854, file: !3, line: 2359, type: !22)
!8892 = !DILocation(line: 2359, column: 6, scope: !8854)
!8893 = !DILocalVariable(name: "hit", scope: !8854, file: !3, line: 2361, type: !5141)
!8894 = !DILocation(line: 2361, column: 13, scope: !8854)
!8895 = !DILocalVariable(name: "hit_p", scope: !8854, file: !3, line: 2361, type: !5140)
!8896 = !DILocation(line: 2361, column: 19, scope: !8854)
!8897 = !DILocation(line: 2363, column: 6, scope: !8898)
!8898 = distinct !DILexicalBlock(scope: !8854, file: !3, line: 2363, column: 6)
!8899 = !DILocation(line: 2363, column: 10, scope: !8898)
!8900 = !DILocation(line: 2363, column: 18, scope: !8898)
!8901 = !DILocation(line: 2363, column: 6, scope: !8854)
!8902 = !DILocation(line: 2364, column: 14, scope: !8903)
!8903 = distinct !DILexicalBlock(scope: !8898, file: !3, line: 2363, column: 39)
!8904 = !DILocation(line: 2364, column: 18, scope: !8903)
!8905 = !DILocation(line: 2364, column: 3, scope: !8903)
!8906 = !DILocation(line: 2365, column: 3, scope: !8903)
!8907 = !DILocation(line: 2368, column: 27, scope: !8854)
!8908 = !DILocation(line: 2368, column: 31, scope: !8854)
!8909 = !DILocation(line: 2368, column: 11, scope: !8854)
!8910 = !DILocation(line: 2368, column: 9, scope: !8854)
!8911 = !DILocation(line: 2369, column: 24, scope: !8854)
!8912 = !DILocation(line: 2369, column: 30, scope: !8854)
!8913 = !DILocation(line: 2369, column: 2, scope: !8854)
!8914 = !DILocation(line: 2371, column: 6, scope: !8915)
!8915 = distinct !DILexicalBlock(scope: !8854, file: !3, line: 2371, column: 6)
!8916 = !DILocation(line: 2371, column: 6, scope: !8854)
!8917 = !DILocalVariable(name: "co", scope: !8918, file: !3, line: 2372, type: !769)
!8918 = distinct !DILexicalBlock(scope: !8915, file: !3, line: 2371, column: 12)
!8919 = !DILocation(line: 2372, column: 9, scope: !8918)
!8920 = !DILocation(line: 2374, column: 7, scope: !8921)
!8921 = distinct !DILexicalBlock(scope: !8918, file: !3, line: 2374, column: 7)
!8922 = !DILocation(line: 2374, column: 7, scope: !8918)
!8923 = !DILocalVariable(name: "ar", scope: !8924, file: !3, line: 2376, type: !7010)
!8924 = distinct !DILexicalBlock(scope: !8921, file: !3, line: 2374, column: 14)
!8925 = !DILocation(line: 2376, column: 13, scope: !8924)
!8926 = !DILocation(line: 2376, column: 32, scope: !8924)
!8927 = !DILocation(line: 2376, column: 18, scope: !8924)
!8928 = !DILocation(line: 2378, column: 30, scope: !8924)
!8929 = !DILocation(line: 2378, column: 34, scope: !8924)
!8930 = !DILocation(line: 2378, column: 39, scope: !8924)
!8931 = !DILocation(line: 2378, column: 46, scope: !8924)
!8932 = !DILocation(line: 2378, column: 55, scope: !8924)
!8933 = !DILocation(line: 2378, column: 62, scope: !8924)
!8934 = !DILocation(line: 2378, column: 72, scope: !8924)
!8935 = !DILocation(line: 2378, column: 80, scope: !8924)
!8936 = !DILocation(line: 2378, column: 4, scope: !8924)
!8937 = !DILocation(line: 2379, column: 24, scope: !8924)
!8938 = !DILocation(line: 2379, column: 28, scope: !8924)
!8939 = !DILocation(line: 2379, column: 45, scope: !8924)
!8940 = !DILocation(line: 2379, column: 4, scope: !8924)
!8941 = !DILocation(line: 2380, column: 3, scope: !8924)
!8942 = !DILocation(line: 2383, column: 24, scope: !8943)
!8943 = distinct !DILexicalBlock(scope: !8921, file: !3, line: 2381, column: 8)
!8944 = !DILocation(line: 2383, column: 28, scope: !8943)
!8945 = !DILocation(line: 2383, column: 45, scope: !8943)
!8946 = !DILocation(line: 2383, column: 4, scope: !8943)
!8947 = !DILocation(line: 2386, column: 24, scope: !8918)
!8948 = !DILocation(line: 2386, column: 31, scope: !8918)
!8949 = !DILocation(line: 2386, column: 36, scope: !8918)
!8950 = !DILocation(line: 2386, column: 40, scope: !8918)
!8951 = !DILocation(line: 2386, column: 3, scope: !8918)
!8952 = !DILocation(line: 2387, column: 9, scope: !8918)
!8953 = !DILocation(line: 2388, column: 2, scope: !8918)
!8954 = !DILocation(line: 2390, column: 19, scope: !8854)
!8955 = !DILocation(line: 2390, column: 26, scope: !8854)
!8956 = !DILocation(line: 2390, column: 31, scope: !8854)
!8957 = !DILocation(line: 2390, column: 35, scope: !8854)
!8958 = !DILocation(line: 2390, column: 42, scope: !8854)
!8959 = !DILocation(line: 2390, column: 49, scope: !8854)
!8960 = !DILocation(line: 2390, column: 2, scope: !8854)
!8961 = !DILocation(line: 2392, column: 20, scope: !8854)
!8962 = !DILocation(line: 2392, column: 28, scope: !8854)
!8963 = !DILocation(line: 2392, column: 2, scope: !8854)
!8964 = !DILocation(line: 2393, column: 24, scope: !8854)
!8965 = !DILocation(line: 2393, column: 48, scope: !8854)
!8966 = !DILocation(line: 2393, column: 56, scope: !8854)
!8967 = !DILocation(line: 2393, column: 2, scope: !8854)
!8968 = !DILocation(line: 2395, column: 2, scope: !8854)
!8969 = !DILocation(line: 2396, column: 1, scope: !8854)
!8970 = distinct !DISubprogram(name: "uv_select_linked_pick_invoke", scope: !3, file: !3, line: 2420, type: !6998, scopeLine: 2421, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!8971 = !DILocalVariable(name: "C", arg: 1, scope: !8970, file: !3, line: 2420, type: !6780)
!8972 = !DILocation(line: 2420, column: 51, scope: !8970)
!8973 = !DILocalVariable(name: "op", arg: 2, scope: !8970, file: !3, line: 2420, type: !6783)
!8974 = !DILocation(line: 2420, column: 66, scope: !8970)
!8975 = !DILocalVariable(name: "event", arg: 3, scope: !8970, file: !3, line: 2420, type: !7000)
!8976 = !DILocation(line: 2420, column: 85, scope: !8970)
!8977 = !DILocation(line: 2422, column: 35, scope: !8970)
!8978 = !DILocation(line: 2422, column: 38, scope: !8970)
!8979 = !DILocation(line: 2422, column: 42, scope: !8970)
!8980 = !DILocation(line: 2422, column: 9, scope: !8970)
!8981 = !DILocation(line: 2422, column: 2, scope: !8970)
!8982 = distinct !DISubprogram(name: "uv_select_linked_pick_exec", scope: !3, file: !3, line: 2425, type: !6778, scopeLine: 2426, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!8983 = !DILocalVariable(name: "C", arg: 1, scope: !8982, file: !3, line: 2425, type: !6780)
!8984 = !DILocation(line: 2425, column: 49, scope: !8982)
!8985 = !DILocalVariable(name: "op", arg: 2, scope: !8982, file: !3, line: 2425, type: !6783)
!8986 = !DILocation(line: 2425, column: 64, scope: !8982)
!8987 = !DILocation(line: 2427, column: 35, scope: !8982)
!8988 = !DILocation(line: 2427, column: 38, scope: !8982)
!8989 = !DILocation(line: 2427, column: 9, scope: !8982)
!8990 = !DILocation(line: 2427, column: 2, scope: !8982)
!8991 = distinct !DISubprogram(name: "uv_select_split_exec", scope: !3, file: !3, line: 2455, type: !6778, scopeLine: 2456, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!8992 = !DILocalVariable(name: "C", arg: 1, scope: !8991, file: !3, line: 2455, type: !6780)
!8993 = !DILocation(line: 2455, column: 43, scope: !8991)
!8994 = !DILocalVariable(name: "op", arg: 2, scope: !8991, file: !3, line: 2455, type: !6783)
!8995 = !DILocation(line: 2455, column: 58, scope: !8991)
!8996 = !DILocalVariable(name: "scene", scope: !8991, file: !3, line: 2457, type: !3841)
!8997 = !DILocation(line: 2457, column: 9, scope: !8991)
!8998 = !DILocation(line: 2457, column: 32, scope: !8991)
!8999 = !DILocation(line: 2457, column: 17, scope: !8991)
!9000 = !DILocalVariable(name: "ts", scope: !8991, file: !3, line: 2458, type: !4138)
!9001 = !DILocation(line: 2458, column: 16, scope: !8991)
!9002 = !DILocation(line: 2458, column: 21, scope: !8991)
!9003 = !DILocation(line: 2458, column: 28, scope: !8991)
!9004 = !DILocalVariable(name: "ima", scope: !8991, file: !3, line: 2459, type: !3164)
!9005 = !DILocation(line: 2459, column: 9, scope: !8991)
!9006 = !DILocation(line: 2459, column: 35, scope: !8991)
!9007 = !DILocation(line: 2459, column: 15, scope: !8991)
!9008 = !DILocalVariable(name: "obedit", scope: !8991, file: !3, line: 2460, type: !3588)
!9009 = !DILocation(line: 2460, column: 10, scope: !8991)
!9010 = !DILocation(line: 2460, column: 40, scope: !8991)
!9011 = !DILocation(line: 2460, column: 19, scope: !8991)
!9012 = !DILocalVariable(name: "bm", scope: !8991, file: !3, line: 2461, type: !3441)
!9013 = !DILocation(line: 2461, column: 9, scope: !8991)
!9014 = !DILocation(line: 2461, column: 39, scope: !8991)
!9015 = !DILocation(line: 2461, column: 14, scope: !8991)
!9016 = !DILocation(line: 2461, column: 48, scope: !8991)
!9017 = !DILocalVariable(name: "efa", scope: !8991, file: !3, line: 2463, type: !3238)
!9018 = !DILocation(line: 2463, column: 10, scope: !8991)
!9019 = !DILocalVariable(name: "l", scope: !8991, file: !3, line: 2464, type: !3220)
!9020 = !DILocation(line: 2464, column: 10, scope: !8991)
!9021 = !DILocalVariable(name: "iter", scope: !8991, file: !3, line: 2465, type: !3856)
!9022 = !DILocation(line: 2465, column: 9, scope: !8991)
!9023 = !DILocalVariable(name: "liter", scope: !8991, file: !3, line: 2465, type: !3856)
!9024 = !DILocation(line: 2465, column: 15, scope: !8991)
!9025 = !DILocalVariable(name: "tf", scope: !8991, file: !3, line: 2466, type: !3945)
!9026 = !DILocation(line: 2466, column: 12, scope: !8991)
!9027 = !DILocalVariable(name: "luv", scope: !8991, file: !3, line: 2467, type: !3240)
!9028 = !DILocation(line: 2467, column: 11, scope: !8991)
!9029 = !DILocalVariable(name: "changed", scope: !8991, file: !3, line: 2468, type: !2013)
!9030 = !DILocation(line: 2468, column: 7, scope: !8991)
!9031 = !DILocalVariable(name: "cd_loop_uv_offset", scope: !8991, file: !3, line: 2470, type: !4165)
!9032 = !DILocation(line: 2470, column: 12, scope: !8991)
!9033 = !DILocation(line: 2470, column: 56, scope: !8991)
!9034 = !DILocation(line: 2470, column: 60, scope: !8991)
!9035 = !DILocation(line: 2470, column: 33, scope: !8991)
!9036 = !DILocalVariable(name: "cd_poly_tex_offset", scope: !8991, file: !3, line: 2471, type: !4165)
!9037 = !DILocation(line: 2471, column: 12, scope: !8991)
!9038 = !DILocation(line: 2471, column: 56, scope: !8991)
!9039 = !DILocation(line: 2471, column: 60, scope: !8991)
!9040 = !DILocation(line: 2471, column: 33, scope: !8991)
!9041 = !DILocation(line: 2473, column: 6, scope: !9042)
!9042 = distinct !DILexicalBlock(scope: !8991, file: !3, line: 2473, column: 6)
!9043 = !DILocation(line: 2473, column: 10, scope: !9042)
!9044 = !DILocation(line: 2473, column: 18, scope: !9042)
!9045 = !DILocation(line: 2473, column: 6, scope: !8991)
!9046 = !DILocation(line: 2474, column: 14, scope: !9047)
!9047 = distinct !DILexicalBlock(scope: !9042, file: !3, line: 2473, column: 39)
!9048 = !DILocation(line: 2474, column: 18, scope: !9047)
!9049 = !DILocation(line: 2474, column: 3, scope: !9047)
!9050 = !DILocation(line: 2475, column: 3, scope: !9047)
!9051 = !DILocation(line: 2480, column: 2, scope: !9052)
!9052 = distinct !DILexicalBlock(scope: !8991, file: !3, line: 2480, column: 2)
!9053 = !DILocation(line: 2480, column: 2, scope: !9054)
!9054 = distinct !DILexicalBlock(scope: !9052, file: !3, line: 2480, column: 2)
!9055 = !DILocalVariable(name: "is_sel", scope: !9056, file: !3, line: 2481, type: !2013)
!9056 = distinct !DILexicalBlock(scope: !9054, file: !3, line: 2480, column: 50)
!9057 = !DILocation(line: 2481, column: 8, scope: !9056)
!9058 = !DILocalVariable(name: "is_unsel", scope: !9056, file: !3, line: 2482, type: !2013)
!9059 = !DILocation(line: 2482, column: 8, scope: !9056)
!9060 = !DILocation(line: 2483, column: 8, scope: !9056)
!9061 = !DILocation(line: 2483, column: 6, scope: !9056)
!9062 = !DILocation(line: 2485, column: 33, scope: !9063)
!9063 = distinct !DILexicalBlock(scope: !9056, file: !3, line: 2485, column: 7)
!9064 = !DILocation(line: 2485, column: 40, scope: !9063)
!9065 = !DILocation(line: 2485, column: 45, scope: !9063)
!9066 = !DILocation(line: 2485, column: 50, scope: !9063)
!9067 = !DILocation(line: 2485, column: 8, scope: !9063)
!9068 = !DILocation(line: 2485, column: 7, scope: !9056)
!9069 = !DILocation(line: 2486, column: 4, scope: !9063)
!9070 = !DILocation(line: 2489, column: 3, scope: !9071)
!9071 = distinct !DILexicalBlock(scope: !9056, file: !3, line: 2489, column: 3)
!9072 = !DILocation(line: 2489, column: 3, scope: !9073)
!9073 = distinct !DILexicalBlock(scope: !9071, file: !3, line: 2489, column: 3)
!9074 = !DILocation(line: 2490, column: 10, scope: !9075)
!9075 = distinct !DILexicalBlock(scope: !9073, file: !3, line: 2489, column: 51)
!9076 = !DILocation(line: 2490, column: 8, scope: !9075)
!9077 = !DILocation(line: 2492, column: 8, scope: !9078)
!9078 = distinct !DILexicalBlock(scope: !9075, file: !3, line: 2492, column: 8)
!9079 = !DILocation(line: 2492, column: 13, scope: !9078)
!9080 = !DILocation(line: 2492, column: 18, scope: !9078)
!9081 = !DILocation(line: 2492, column: 8, scope: !9075)
!9082 = !DILocation(line: 2493, column: 12, scope: !9083)
!9083 = distinct !DILexicalBlock(scope: !9078, file: !3, line: 2492, column: 37)
!9084 = !DILocation(line: 2494, column: 4, scope: !9083)
!9085 = !DILocation(line: 2496, column: 14, scope: !9086)
!9086 = distinct !DILexicalBlock(scope: !9078, file: !3, line: 2495, column: 9)
!9087 = !DILocation(line: 2500, column: 8, scope: !9088)
!9088 = distinct !DILexicalBlock(scope: !9075, file: !3, line: 2500, column: 8)
!9089 = !DILocation(line: 2500, column: 15, scope: !9088)
!9090 = !DILocation(line: 2500, column: 18, scope: !9088)
!9091 = !DILocation(line: 2500, column: 8, scope: !9075)
!9092 = !DILocation(line: 2501, column: 5, scope: !9093)
!9093 = distinct !DILexicalBlock(scope: !9088, file: !3, line: 2500, column: 28)
!9094 = !DILocation(line: 2503, column: 3, scope: !9075)
!9095 = distinct !{!9095, !9070, !9096}
!9096 = !DILocation(line: 2503, column: 3, scope: !9071)
!9097 = !DILocation(line: 2505, column: 7, scope: !9098)
!9098 = distinct !DILexicalBlock(scope: !9056, file: !3, line: 2505, column: 7)
!9099 = !DILocation(line: 2505, column: 14, scope: !9098)
!9100 = !DILocation(line: 2505, column: 17, scope: !9098)
!9101 = !DILocation(line: 2505, column: 7, scope: !9056)
!9102 = !DILocation(line: 2506, column: 4, scope: !9103)
!9103 = distinct !DILexicalBlock(scope: !9104, file: !3, line: 2506, column: 4)
!9104 = distinct !DILexicalBlock(scope: !9098, file: !3, line: 2505, column: 27)
!9105 = !DILocation(line: 2506, column: 4, scope: !9106)
!9106 = distinct !DILexicalBlock(scope: !9103, file: !3, line: 2506, column: 4)
!9107 = !DILocation(line: 2507, column: 11, scope: !9108)
!9108 = distinct !DILexicalBlock(scope: !9106, file: !3, line: 2506, column: 52)
!9109 = !DILocation(line: 2507, column: 9, scope: !9108)
!9110 = !DILocation(line: 2508, column: 5, scope: !9108)
!9111 = !DILocation(line: 2508, column: 10, scope: !9108)
!9112 = !DILocation(line: 2508, column: 15, scope: !9108)
!9113 = !DILocation(line: 2509, column: 4, scope: !9108)
!9114 = distinct !{!9114, !9102, !9115}
!9115 = !DILocation(line: 2509, column: 4, scope: !9103)
!9116 = !DILocation(line: 2511, column: 12, scope: !9104)
!9117 = !DILocation(line: 2512, column: 3, scope: !9104)
!9118 = !DILocation(line: 2513, column: 2, scope: !9056)
!9119 = distinct !{!9119, !9051, !9120}
!9120 = !DILocation(line: 2513, column: 2, scope: !9052)
!9121 = !DILocation(line: 2515, column: 6, scope: !9122)
!9122 = distinct !DILexicalBlock(scope: !8991, file: !3, line: 2515, column: 6)
!9123 = !DILocation(line: 2515, column: 6, scope: !8991)
!9124 = !DILocation(line: 2516, column: 25, scope: !9125)
!9125 = distinct !DILexicalBlock(scope: !9122, file: !3, line: 2515, column: 15)
!9126 = !DILocation(line: 2516, column: 3, scope: !9125)
!9127 = !DILocation(line: 2517, column: 3, scope: !9125)
!9128 = !DILocation(line: 2520, column: 3, scope: !9129)
!9129 = distinct !DILexicalBlock(scope: !9122, file: !3, line: 2519, column: 7)
!9130 = !DILocation(line: 2522, column: 1, scope: !8991)
!9131 = distinct !DISubprogram(name: "uv_select_pinned_exec", scope: !3, file: !3, line: 3519, type: !6778, scopeLine: 3520, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!9132 = !DILocalVariable(name: "C", arg: 1, scope: !9131, file: !3, line: 3519, type: !6780)
!9133 = !DILocation(line: 3519, column: 44, scope: !9131)
!9134 = !DILocalVariable(name: "UNUSED_op", arg: 2, scope: !9131, file: !3, line: 3519, type: !6783)
!9135 = !DILocation(line: 3519, column: 59, scope: !9131)
!9136 = !DILocalVariable(name: "scene", scope: !9131, file: !3, line: 3521, type: !3841)
!9137 = !DILocation(line: 3521, column: 9, scope: !9131)
!9138 = !DILocation(line: 3521, column: 32, scope: !9131)
!9139 = !DILocation(line: 3521, column: 17, scope: !9131)
!9140 = !DILocalVariable(name: "obedit", scope: !9131, file: !3, line: 3522, type: !3588)
!9141 = !DILocation(line: 3522, column: 10, scope: !9131)
!9142 = !DILocation(line: 3522, column: 40, scope: !9131)
!9143 = !DILocation(line: 3522, column: 19, scope: !9131)
!9144 = !DILocalVariable(name: "ima", scope: !9131, file: !3, line: 3523, type: !3164)
!9145 = !DILocation(line: 3523, column: 9, scope: !9131)
!9146 = !DILocation(line: 3523, column: 35, scope: !9131)
!9147 = !DILocation(line: 3523, column: 15, scope: !9131)
!9148 = !DILocalVariable(name: "em", scope: !9131, file: !3, line: 3524, type: !3593)
!9149 = !DILocation(line: 3524, column: 14, scope: !9131)
!9150 = !DILocation(line: 3524, column: 44, scope: !9131)
!9151 = !DILocation(line: 3524, column: 19, scope: !9131)
!9152 = !DILocalVariable(name: "efa", scope: !9131, file: !3, line: 3525, type: !3238)
!9153 = !DILocation(line: 3525, column: 10, scope: !9131)
!9154 = !DILocalVariable(name: "l", scope: !9131, file: !3, line: 3526, type: !3220)
!9155 = !DILocation(line: 3526, column: 10, scope: !9131)
!9156 = !DILocalVariable(name: "iter", scope: !9131, file: !3, line: 3527, type: !3856)
!9157 = !DILocation(line: 3527, column: 9, scope: !9131)
!9158 = !DILocalVariable(name: "liter", scope: !9131, file: !3, line: 3527, type: !3856)
!9159 = !DILocation(line: 3527, column: 15, scope: !9131)
!9160 = !DILocalVariable(name: "tface", scope: !9131, file: !3, line: 3528, type: !3945)
!9161 = !DILocation(line: 3528, column: 12, scope: !9131)
!9162 = !DILocalVariable(name: "luv", scope: !9131, file: !3, line: 3529, type: !3240)
!9163 = !DILocation(line: 3529, column: 11, scope: !9131)
!9164 = !DILocalVariable(name: "cd_loop_uv_offset", scope: !9131, file: !3, line: 3531, type: !4165)
!9165 = !DILocation(line: 3531, column: 12, scope: !9131)
!9166 = !DILocation(line: 3531, column: 56, scope: !9131)
!9167 = !DILocation(line: 3531, column: 60, scope: !9131)
!9168 = !DILocation(line: 3531, column: 64, scope: !9131)
!9169 = !DILocation(line: 3531, column: 33, scope: !9131)
!9170 = !DILocalVariable(name: "cd_poly_tex_offset", scope: !9131, file: !3, line: 3532, type: !4165)
!9171 = !DILocation(line: 3532, column: 12, scope: !9131)
!9172 = !DILocation(line: 3532, column: 56, scope: !9131)
!9173 = !DILocation(line: 3532, column: 60, scope: !9131)
!9174 = !DILocation(line: 3532, column: 64, scope: !9131)
!9175 = !DILocation(line: 3532, column: 33, scope: !9131)
!9176 = !DILocation(line: 3534, column: 2, scope: !9177)
!9177 = distinct !DILexicalBlock(scope: !9131, file: !3, line: 3534, column: 2)
!9178 = !DILocation(line: 3534, column: 2, scope: !9179)
!9179 = distinct !DILexicalBlock(scope: !9177, file: !3, line: 3534, column: 2)
!9180 = !DILocation(line: 3535, column: 11, scope: !9181)
!9181 = distinct !DILexicalBlock(scope: !9179, file: !3, line: 3534, column: 54)
!9182 = !DILocation(line: 3535, column: 9, scope: !9181)
!9183 = !DILocation(line: 3536, column: 33, scope: !9184)
!9184 = distinct !DILexicalBlock(scope: !9181, file: !3, line: 3536, column: 7)
!9185 = !DILocation(line: 3536, column: 40, scope: !9184)
!9186 = !DILocation(line: 3536, column: 45, scope: !9184)
!9187 = !DILocation(line: 3536, column: 50, scope: !9184)
!9188 = !DILocation(line: 3536, column: 8, scope: !9184)
!9189 = !DILocation(line: 3536, column: 7, scope: !9181)
!9190 = !DILocation(line: 3537, column: 4, scope: !9184)
!9191 = !DILocation(line: 3539, column: 3, scope: !9192)
!9192 = distinct !DILexicalBlock(scope: !9181, file: !3, line: 3539, column: 3)
!9193 = !DILocation(line: 3539, column: 3, scope: !9194)
!9194 = distinct !DILexicalBlock(scope: !9192, file: !3, line: 3539, column: 3)
!9195 = !DILocation(line: 3540, column: 10, scope: !9196)
!9196 = distinct !DILexicalBlock(scope: !9194, file: !3, line: 3539, column: 51)
!9197 = !DILocation(line: 3540, column: 8, scope: !9196)
!9198 = !DILocation(line: 3542, column: 8, scope: !9199)
!9199 = distinct !DILexicalBlock(scope: !9196, file: !3, line: 3542, column: 8)
!9200 = !DILocation(line: 3542, column: 13, scope: !9199)
!9201 = !DILocation(line: 3542, column: 18, scope: !9199)
!9202 = !DILocation(line: 3542, column: 8, scope: !9196)
!9203 = !DILocation(line: 3543, column: 29, scope: !9199)
!9204 = !DILocation(line: 3543, column: 33, scope: !9199)
!9205 = !DILocation(line: 3543, column: 40, scope: !9199)
!9206 = !DILocation(line: 3543, column: 50, scope: !9199)
!9207 = !DILocation(line: 3543, column: 5, scope: !9199)
!9208 = !DILocation(line: 3544, column: 3, scope: !9196)
!9209 = distinct !{!9209, !9191, !9210}
!9210 = !DILocation(line: 3544, column: 3, scope: !9192)
!9211 = !DILocation(line: 3545, column: 2, scope: !9181)
!9212 = distinct !{!9212, !9176, !9213}
!9213 = !DILocation(line: 3545, column: 2, scope: !9177)
!9214 = !DILocation(line: 3547, column: 24, scope: !9131)
!9215 = !DILocation(line: 3547, column: 48, scope: !9131)
!9216 = !DILocation(line: 3547, column: 56, scope: !9131)
!9217 = !DILocation(line: 3547, column: 2, scope: !9131)
!9218 = !DILocation(line: 3549, column: 2, scope: !9131)
!9219 = distinct !DISubprogram(name: "uv_border_select_exec", scope: !3, file: !3, line: 2787, type: !6778, scopeLine: 2788, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!9220 = !DILocalVariable(name: "C", arg: 1, scope: !9219, file: !3, line: 2787, type: !6780)
!9221 = !DILocation(line: 2787, column: 44, scope: !9219)
!9222 = !DILocalVariable(name: "op", arg: 2, scope: !9219, file: !3, line: 2787, type: !6783)
!9223 = !DILocation(line: 2787, column: 59, scope: !9219)
!9224 = !DILocalVariable(name: "sima", scope: !9219, file: !3, line: 2789, type: !4824)
!9225 = !DILocation(line: 2789, column: 14, scope: !9219)
!9226 = !DILocation(line: 2789, column: 40, scope: !9219)
!9227 = !DILocation(line: 2789, column: 21, scope: !9219)
!9228 = !DILocalVariable(name: "scene", scope: !9219, file: !3, line: 2790, type: !3841)
!9229 = !DILocation(line: 2790, column: 9, scope: !9219)
!9230 = !DILocation(line: 2790, column: 32, scope: !9219)
!9231 = !DILocation(line: 2790, column: 17, scope: !9219)
!9232 = !DILocalVariable(name: "ts", scope: !9219, file: !3, line: 2791, type: !4138)
!9233 = !DILocation(line: 2791, column: 16, scope: !9219)
!9234 = !DILocation(line: 2791, column: 21, scope: !9219)
!9235 = !DILocation(line: 2791, column: 28, scope: !9219)
!9236 = !DILocalVariable(name: "obedit", scope: !9219, file: !3, line: 2792, type: !3588)
!9237 = !DILocation(line: 2792, column: 10, scope: !9219)
!9238 = !DILocation(line: 2792, column: 40, scope: !9219)
!9239 = !DILocation(line: 2792, column: 19, scope: !9219)
!9240 = !DILocalVariable(name: "ima", scope: !9219, file: !3, line: 2793, type: !3164)
!9241 = !DILocation(line: 2793, column: 9, scope: !9219)
!9242 = !DILocation(line: 2793, column: 35, scope: !9219)
!9243 = !DILocation(line: 2793, column: 15, scope: !9219)
!9244 = !DILocalVariable(name: "ar", scope: !9219, file: !3, line: 2794, type: !7010)
!9245 = !DILocation(line: 2794, column: 11, scope: !9219)
!9246 = !DILocation(line: 2794, column: 30, scope: !9219)
!9247 = !DILocation(line: 2794, column: 16, scope: !9219)
!9248 = !DILocalVariable(name: "em", scope: !9219, file: !3, line: 2795, type: !3593)
!9249 = !DILocation(line: 2795, column: 14, scope: !9219)
!9250 = !DILocation(line: 2795, column: 44, scope: !9219)
!9251 = !DILocation(line: 2795, column: 19, scope: !9219)
!9252 = !DILocalVariable(name: "efa", scope: !9219, file: !3, line: 2796, type: !3238)
!9253 = !DILocation(line: 2796, column: 10, scope: !9219)
!9254 = !DILocalVariable(name: "l", scope: !9219, file: !3, line: 2797, type: !3220)
!9255 = !DILocation(line: 2797, column: 10, scope: !9219)
!9256 = !DILocalVariable(name: "iter", scope: !9219, file: !3, line: 2798, type: !3856)
!9257 = !DILocation(line: 2798, column: 9, scope: !9219)
!9258 = !DILocalVariable(name: "liter", scope: !9219, file: !3, line: 2798, type: !3856)
!9259 = !DILocation(line: 2798, column: 15, scope: !9219)
!9260 = !DILocalVariable(name: "tf", scope: !9219, file: !3, line: 2799, type: !3945)
!9261 = !DILocation(line: 2799, column: 12, scope: !9219)
!9262 = !DILocalVariable(name: "luv", scope: !9219, file: !3, line: 2800, type: !3240)
!9263 = !DILocation(line: 2800, column: 11, scope: !9219)
!9264 = !DILocalVariable(name: "rectf", scope: !9219, file: !3, line: 2801, type: !749)
!9265 = !DILocation(line: 2801, column: 7, scope: !9219)
!9266 = !DILocalVariable(name: "changed", scope: !9219, file: !3, line: 2802, type: !2013)
!9267 = !DILocation(line: 2802, column: 7, scope: !9219)
!9268 = !DILocalVariable(name: "pinned", scope: !9219, file: !3, line: 2802, type: !2013)
!9269 = !DILocation(line: 2802, column: 16, scope: !9219)
!9270 = !DILocalVariable(name: "select", scope: !9219, file: !3, line: 2802, type: !2013)
!9271 = !DILocation(line: 2802, column: 24, scope: !9219)
!9272 = !DILocalVariable(name: "extend", scope: !9219, file: !3, line: 2802, type: !2013)
!9273 = !DILocation(line: 2802, column: 32, scope: !9219)
!9274 = !DILocalVariable(name: "use_face_center", scope: !9219, file: !3, line: 2803, type: !3951)
!9275 = !DILocation(line: 2803, column: 13, scope: !9219)
!9276 = !DILocation(line: 2803, column: 32, scope: !9219)
!9277 = !DILocation(line: 2803, column: 36, scope: !9219)
!9278 = !DILocation(line: 2803, column: 44, scope: !9219)
!9279 = !DILocation(line: 2803, column: 31, scope: !9219)
!9280 = !DILocation(line: 2804, column: 31, scope: !9219)
!9281 = !DILocation(line: 2804, column: 35, scope: !9219)
!9282 = !DILocation(line: 2804, column: 46, scope: !9219)
!9283 = !DILocation(line: 2805, column: 31, scope: !9219)
!9284 = !DILocation(line: 2805, column: 35, scope: !9219)
!9285 = !DILocation(line: 2805, column: 49, scope: !9219)
!9286 = !DILocalVariable(name: "cd_loop_uv_offset", scope: !9219, file: !3, line: 2807, type: !4165)
!9287 = !DILocation(line: 2807, column: 12, scope: !9219)
!9288 = !DILocation(line: 2807, column: 56, scope: !9219)
!9289 = !DILocation(line: 2807, column: 60, scope: !9219)
!9290 = !DILocation(line: 2807, column: 64, scope: !9219)
!9291 = !DILocation(line: 2807, column: 33, scope: !9219)
!9292 = !DILocalVariable(name: "cd_poly_tex_offset", scope: !9219, file: !3, line: 2808, type: !4165)
!9293 = !DILocation(line: 2808, column: 12, scope: !9219)
!9294 = !DILocation(line: 2808, column: 56, scope: !9219)
!9295 = !DILocation(line: 2808, column: 60, scope: !9219)
!9296 = !DILocation(line: 2808, column: 64, scope: !9219)
!9297 = !DILocation(line: 2808, column: 33, scope: !9219)
!9298 = !DILocation(line: 2811, column: 40, scope: !9219)
!9299 = !DILocation(line: 2811, column: 2, scope: !9219)
!9300 = !DILocation(line: 2812, column: 33, scope: !9219)
!9301 = !DILocation(line: 2812, column: 37, scope: !9219)
!9302 = !DILocation(line: 2812, column: 2, scope: !9219)
!9303 = !DILocation(line: 2815, column: 24, scope: !9219)
!9304 = !DILocation(line: 2815, column: 28, scope: !9219)
!9305 = !DILocation(line: 2815, column: 12, scope: !9219)
!9306 = !DILocation(line: 2815, column: 49, scope: !9219)
!9307 = !DILocation(line: 2815, column: 11, scope: !9219)
!9308 = !DILocation(line: 2815, column: 9, scope: !9219)
!9309 = !DILocation(line: 2816, column: 27, scope: !9219)
!9310 = !DILocation(line: 2816, column: 31, scope: !9219)
!9311 = !DILocation(line: 2816, column: 11, scope: !9219)
!9312 = !DILocation(line: 2816, column: 9, scope: !9219)
!9313 = !DILocation(line: 2817, column: 27, scope: !9219)
!9314 = !DILocation(line: 2817, column: 31, scope: !9219)
!9315 = !DILocation(line: 2817, column: 11, scope: !9219)
!9316 = !DILocation(line: 2817, column: 9, scope: !9219)
!9317 = !DILocation(line: 2819, column: 7, scope: !9318)
!9318 = distinct !DILexicalBlock(scope: !9219, file: !3, line: 2819, column: 6)
!9319 = !DILocation(line: 2819, column: 6, scope: !9219)
!9320 = !DILocation(line: 2820, column: 25, scope: !9318)
!9321 = !DILocation(line: 2820, column: 32, scope: !9318)
!9322 = !DILocation(line: 2820, column: 37, scope: !9318)
!9323 = !DILocation(line: 2820, column: 3, scope: !9318)
!9324 = !DILocation(line: 2823, column: 6, scope: !9325)
!9325 = distinct !DILexicalBlock(scope: !9219, file: !3, line: 2823, column: 6)
!9326 = !DILocation(line: 2823, column: 22, scope: !9325)
!9327 = !DILocation(line: 2823, column: 26, scope: !9325)
!9328 = !DILocation(line: 2823, column: 6, scope: !9219)
!9329 = !DILocalVariable(name: "cent", scope: !9330, file: !3, line: 2825, type: !769)
!9330 = distinct !DILexicalBlock(scope: !9325, file: !3, line: 2823, column: 34)
!9331 = !DILocation(line: 2825, column: 9, scope: !9330)
!9332 = !DILocation(line: 2827, column: 11, scope: !9330)
!9333 = !DILocation(line: 2829, column: 3, scope: !9334)
!9334 = distinct !DILexicalBlock(scope: !9330, file: !3, line: 2829, column: 3)
!9335 = !DILocation(line: 2829, column: 3, scope: !9336)
!9336 = distinct !DILexicalBlock(scope: !9334, file: !3, line: 2829, column: 3)
!9337 = !DILocation(line: 2831, column: 4, scope: !9338)
!9338 = distinct !DILexicalBlock(scope: !9336, file: !3, line: 2829, column: 55)
!9339 = !DILocation(line: 2833, column: 9, scope: !9338)
!9340 = !DILocation(line: 2833, column: 7, scope: !9338)
!9341 = !DILocation(line: 2834, column: 33, scope: !9342)
!9342 = distinct !DILexicalBlock(scope: !9338, file: !3, line: 2834, column: 8)
!9343 = !DILocation(line: 2834, column: 40, scope: !9342)
!9344 = !DILocation(line: 2834, column: 45, scope: !9342)
!9345 = !DILocation(line: 2834, column: 50, scope: !9342)
!9346 = !DILocation(line: 2834, column: 8, scope: !9342)
!9347 = !DILocation(line: 2834, column: 8, scope: !9338)
!9348 = !DILocation(line: 2835, column: 20, scope: !9349)
!9349 = distinct !DILexicalBlock(scope: !9342, file: !3, line: 2834, column: 55)
!9350 = !DILocation(line: 2835, column: 25, scope: !9349)
!9351 = !DILocation(line: 2835, column: 31, scope: !9349)
!9352 = !DILocation(line: 2835, column: 5, scope: !9349)
!9353 = !DILocation(line: 2836, column: 37, scope: !9354)
!9354 = distinct !DILexicalBlock(scope: !9349, file: !3, line: 2836, column: 9)
!9355 = !DILocation(line: 2836, column: 9, scope: !9354)
!9356 = !DILocation(line: 2836, column: 9, scope: !9349)
!9357 = !DILocation(line: 2837, column: 6, scope: !9358)
!9358 = distinct !DILexicalBlock(scope: !9354, file: !3, line: 2836, column: 44)
!9359 = !DILocation(line: 2838, column: 14, scope: !9358)
!9360 = !DILocation(line: 2839, column: 5, scope: !9358)
!9361 = !DILocation(line: 2840, column: 4, scope: !9349)
!9362 = !DILocation(line: 2841, column: 3, scope: !9338)
!9363 = distinct !{!9363, !9333, !9364}
!9364 = !DILocation(line: 2841, column: 3, scope: !9334)
!9365 = !DILocation(line: 2844, column: 7, scope: !9366)
!9366 = distinct !DILexicalBlock(scope: !9330, file: !3, line: 2844, column: 7)
!9367 = !DILocation(line: 2844, column: 7, scope: !9330)
!9368 = !DILocation(line: 2845, column: 34, scope: !9369)
!9369 = distinct !DILexicalBlock(scope: !9366, file: !3, line: 2844, column: 16)
!9370 = !DILocation(line: 2845, column: 40, scope: !9369)
!9371 = !DILocation(line: 2845, column: 47, scope: !9369)
!9372 = !DILocation(line: 2845, column: 55, scope: !9369)
!9373 = !DILocation(line: 2845, column: 4, scope: !9369)
!9374 = !DILocation(line: 2846, column: 3, scope: !9369)
!9375 = !DILocation(line: 2847, column: 2, scope: !9330)
!9376 = !DILocation(line: 2850, column: 11, scope: !9377)
!9377 = distinct !DILexicalBlock(scope: !9325, file: !3, line: 2848, column: 7)
!9378 = !DILocation(line: 2852, column: 3, scope: !9379)
!9379 = distinct !DILexicalBlock(scope: !9377, file: !3, line: 2852, column: 3)
!9380 = !DILocation(line: 2852, column: 3, scope: !9381)
!9381 = distinct !DILexicalBlock(scope: !9379, file: !3, line: 2852, column: 3)
!9382 = !DILocation(line: 2853, column: 9, scope: !9383)
!9383 = distinct !DILexicalBlock(scope: !9381, file: !3, line: 2852, column: 55)
!9384 = !DILocation(line: 2853, column: 7, scope: !9383)
!9385 = !DILocation(line: 2854, column: 34, scope: !9386)
!9386 = distinct !DILexicalBlock(scope: !9383, file: !3, line: 2854, column: 8)
!9387 = !DILocation(line: 2854, column: 41, scope: !9386)
!9388 = !DILocation(line: 2854, column: 46, scope: !9386)
!9389 = !DILocation(line: 2854, column: 51, scope: !9386)
!9390 = !DILocation(line: 2854, column: 9, scope: !9386)
!9391 = !DILocation(line: 2854, column: 8, scope: !9383)
!9392 = !DILocation(line: 2855, column: 5, scope: !9386)
!9393 = !DILocation(line: 2856, column: 4, scope: !9394)
!9394 = distinct !DILexicalBlock(scope: !9383, file: !3, line: 2856, column: 4)
!9395 = !DILocation(line: 2856, column: 4, scope: !9396)
!9396 = distinct !DILexicalBlock(scope: !9394, file: !3, line: 2856, column: 4)
!9397 = !DILocation(line: 2857, column: 11, scope: !9398)
!9398 = distinct !DILexicalBlock(scope: !9396, file: !3, line: 2856, column: 52)
!9399 = !DILocation(line: 2857, column: 9, scope: !9398)
!9400 = !DILocation(line: 2859, column: 10, scope: !9401)
!9401 = distinct !DILexicalBlock(scope: !9398, file: !3, line: 2859, column: 9)
!9402 = !DILocation(line: 2859, column: 17, scope: !9401)
!9403 = !DILocation(line: 2859, column: 21, scope: !9401)
!9404 = !DILocation(line: 2859, column: 25, scope: !9401)
!9405 = !DILocation(line: 2859, column: 33, scope: !9401)
!9406 = !DILocation(line: 2859, column: 9, scope: !9398)
!9407 = !DILocation(line: 2862, column: 38, scope: !9408)
!9408 = distinct !DILexicalBlock(scope: !9409, file: !3, line: 2862, column: 10)
!9409 = distinct !DILexicalBlock(scope: !9401, file: !3, line: 2859, column: 55)
!9410 = !DILocation(line: 2862, column: 43, scope: !9408)
!9411 = !DILocation(line: 2862, column: 10, scope: !9408)
!9412 = !DILocation(line: 2862, column: 10, scope: !9409)
!9413 = !DILocation(line: 2863, column: 28, scope: !9414)
!9414 = distinct !DILexicalBlock(scope: !9408, file: !3, line: 2862, column: 48)
!9415 = !DILocation(line: 2863, column: 32, scope: !9414)
!9416 = !DILocation(line: 2863, column: 39, scope: !9414)
!9417 = !DILocation(line: 2863, column: 42, scope: !9414)
!9418 = !DILocation(line: 2863, column: 57, scope: !9414)
!9419 = !DILocation(line: 2863, column: 7, scope: !9414)
!9420 = !DILocation(line: 2864, column: 6, scope: !9414)
!9421 = !DILocation(line: 2865, column: 5, scope: !9409)
!9422 = !DILocation(line: 2866, column: 14, scope: !9423)
!9423 = distinct !DILexicalBlock(scope: !9401, file: !3, line: 2866, column: 14)
!9424 = !DILocation(line: 2866, column: 14, scope: !9401)
!9425 = !DILocation(line: 2867, column: 11, scope: !9426)
!9426 = distinct !DILexicalBlock(scope: !9427, file: !3, line: 2867, column: 10)
!9427 = distinct !DILexicalBlock(scope: !9423, file: !3, line: 2866, column: 22)
!9428 = !DILocation(line: 2867, column: 16, scope: !9426)
!9429 = !DILocation(line: 2867, column: 21, scope: !9426)
!9430 = !DILocation(line: 2867, column: 39, scope: !9426)
!9431 = !DILocation(line: 2867, column: 70, scope: !9426)
!9432 = !DILocation(line: 2867, column: 75, scope: !9426)
!9433 = !DILocation(line: 2867, column: 42, scope: !9426)
!9434 = !DILocation(line: 2867, column: 10, scope: !9427)
!9435 = !DILocation(line: 2868, column: 28, scope: !9436)
!9436 = distinct !DILexicalBlock(scope: !9426, file: !3, line: 2867, column: 80)
!9437 = !DILocation(line: 2868, column: 32, scope: !9436)
!9438 = !DILocation(line: 2868, column: 39, scope: !9436)
!9439 = !DILocation(line: 2868, column: 42, scope: !9436)
!9440 = !DILocation(line: 2868, column: 57, scope: !9436)
!9441 = !DILocation(line: 2868, column: 7, scope: !9436)
!9442 = !DILocation(line: 2869, column: 6, scope: !9436)
!9443 = !DILocation(line: 2870, column: 5, scope: !9427)
!9444 = !DILocation(line: 2871, column: 4, scope: !9398)
!9445 = distinct !{!9445, !9393, !9446}
!9446 = !DILocation(line: 2871, column: 4, scope: !9394)
!9447 = !DILocation(line: 2872, column: 3, scope: !9383)
!9448 = distinct !{!9448, !9378, !9449}
!9449 = !DILocation(line: 2872, column: 3, scope: !9379)
!9450 = !DILocation(line: 2875, column: 6, scope: !9451)
!9451 = distinct !DILexicalBlock(scope: !9219, file: !3, line: 2875, column: 6)
!9452 = !DILocation(line: 2875, column: 6, scope: !9219)
!9453 = !DILocation(line: 2876, column: 24, scope: !9454)
!9454 = distinct !DILexicalBlock(scope: !9451, file: !3, line: 2875, column: 15)
!9455 = !DILocation(line: 2876, column: 28, scope: !9454)
!9456 = !DILocation(line: 2876, column: 32, scope: !9454)
!9457 = !DILocation(line: 2876, column: 3, scope: !9454)
!9458 = !DILocation(line: 2878, column: 7, scope: !9459)
!9459 = distinct !DILexicalBlock(scope: !9454, file: !3, line: 2878, column: 7)
!9460 = !DILocation(line: 2878, column: 11, scope: !9459)
!9461 = !DILocation(line: 2878, column: 19, scope: !9459)
!9462 = !DILocation(line: 2878, column: 7, scope: !9454)
!9463 = !DILocation(line: 2879, column: 26, scope: !9464)
!9464 = distinct !DILexicalBlock(scope: !9459, file: !3, line: 2878, column: 40)
!9465 = !DILocation(line: 2879, column: 50, scope: !9464)
!9466 = !DILocation(line: 2879, column: 58, scope: !9464)
!9467 = !DILocation(line: 2879, column: 4, scope: !9464)
!9468 = !DILocation(line: 2880, column: 3, scope: !9464)
!9469 = !DILocation(line: 2882, column: 3, scope: !9454)
!9470 = !DILocation(line: 2885, column: 2, scope: !9219)
!9471 = !DILocation(line: 2886, column: 1, scope: !9219)
!9472 = distinct !DISubprogram(name: "_bm_elem_flag_disable", scope: !4247, file: !4247, line: 57, type: !8777, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!9473 = !DILocalVariable(name: "head", arg: 1, scope: !9472, file: !4247, line: 57, type: !8779)
!9474 = !DILocation(line: 57, column: 49, scope: !9472)
!9475 = !DILocalVariable(name: "hflag", arg: 2, scope: !9472, file: !4247, line: 57, type: !13)
!9476 = !DILocation(line: 57, column: 66, scope: !9472)
!9477 = !DILocation(line: 59, column: 24, scope: !9472)
!9478 = !DILocation(line: 59, column: 23, scope: !9472)
!9479 = !DILocation(line: 59, column: 17, scope: !9472)
!9480 = !DILocation(line: 59, column: 2, scope: !9472)
!9481 = !DILocation(line: 59, column: 8, scope: !9472)
!9482 = !DILocation(line: 59, column: 14, scope: !9472)
!9483 = !DILocation(line: 60, column: 1, scope: !9472)
!9484 = distinct !DISubprogram(name: "uv_select_flush_from_tag_face", scope: !3, file: !3, line: 2613, type: !9485, scopeLine: 2614, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!9485 = !DISubroutineType(types: !9486)
!9486 = !{null, !4824, !3841, !3588, !3951}
!9487 = !DILocalVariable(name: "sima", arg: 1, scope: !9484, file: !3, line: 2613, type: !4824)
!9488 = !DILocation(line: 2613, column: 55, scope: !9484)
!9489 = !DILocalVariable(name: "scene", arg: 2, scope: !9484, file: !3, line: 2613, type: !3841)
!9490 = !DILocation(line: 2613, column: 68, scope: !9484)
!9491 = !DILocalVariable(name: "obedit", arg: 3, scope: !9484, file: !3, line: 2613, type: !3588)
!9492 = !DILocation(line: 2613, column: 83, scope: !9484)
!9493 = !DILocalVariable(name: "select", arg: 4, scope: !9484, file: !3, line: 2613, type: !3951)
!9494 = !DILocation(line: 2613, column: 102, scope: !9484)
!9495 = !DILocalVariable(name: "ts", scope: !9484, file: !3, line: 2621, type: !4138)
!9496 = !DILocation(line: 2621, column: 16, scope: !9484)
!9497 = !DILocation(line: 2621, column: 21, scope: !9484)
!9498 = !DILocation(line: 2621, column: 28, scope: !9484)
!9499 = !DILocalVariable(name: "em", scope: !9484, file: !3, line: 2622, type: !3593)
!9500 = !DILocation(line: 2622, column: 14, scope: !9484)
!9501 = !DILocation(line: 2622, column: 44, scope: !9484)
!9502 = !DILocation(line: 2622, column: 19, scope: !9484)
!9503 = !DILocalVariable(name: "efa", scope: !9484, file: !3, line: 2623, type: !3238)
!9504 = !DILocation(line: 2623, column: 10, scope: !9484)
!9505 = !DILocalVariable(name: "l", scope: !9484, file: !3, line: 2624, type: !3220)
!9506 = !DILocation(line: 2624, column: 10, scope: !9484)
!9507 = !DILocalVariable(name: "iter", scope: !9484, file: !3, line: 2625, type: !3856)
!9508 = !DILocation(line: 2625, column: 9, scope: !9484)
!9509 = !DILocalVariable(name: "liter", scope: !9484, file: !3, line: 2625, type: !3856)
!9510 = !DILocation(line: 2625, column: 15, scope: !9484)
!9511 = !DILocalVariable(name: "cd_loop_uv_offset", scope: !9484, file: !3, line: 2627, type: !4165)
!9512 = !DILocation(line: 2627, column: 12, scope: !9484)
!9513 = !DILocation(line: 2627, column: 55, scope: !9484)
!9514 = !DILocation(line: 2627, column: 59, scope: !9484)
!9515 = !DILocation(line: 2627, column: 63, scope: !9484)
!9516 = !DILocation(line: 2627, column: 32, scope: !9484)
!9517 = !DILocation(line: 2629, column: 7, scope: !9518)
!9518 = distinct !DILexicalBlock(scope: !9484, file: !3, line: 2629, column: 6)
!9519 = !DILocation(line: 2629, column: 11, scope: !9518)
!9520 = !DILocation(line: 2629, column: 19, scope: !9518)
!9521 = !DILocation(line: 2629, column: 40, scope: !9518)
!9522 = !DILocation(line: 2629, column: 45, scope: !9518)
!9523 = !DILocation(line: 2629, column: 48, scope: !9518)
!9524 = !DILocation(line: 2629, column: 54, scope: !9518)
!9525 = !DILocation(line: 2629, column: 61, scope: !9518)
!9526 = !DILocation(line: 2629, column: 6, scope: !9484)
!9527 = !DILocalVariable(name: "eve", scope: !9528, file: !3, line: 2632, type: !3185)
!9528 = distinct !DILexicalBlock(scope: !9518, file: !3, line: 2629, column: 82)
!9529 = !DILocation(line: 2632, column: 11, scope: !9528)
!9530 = !DILocation(line: 2634, column: 3, scope: !9531)
!9531 = distinct !DILexicalBlock(scope: !9528, file: !3, line: 2634, column: 3)
!9532 = !DILocation(line: 2634, column: 3, scope: !9533)
!9533 = distinct !DILexicalBlock(scope: !9531, file: !3, line: 2634, column: 3)
!9534 = !DILocation(line: 2635, column: 4, scope: !9535)
!9535 = distinct !DILexicalBlock(scope: !9533, file: !3, line: 2634, column: 55)
!9536 = !DILocation(line: 2636, column: 3, scope: !9535)
!9537 = distinct !{!9537, !9530, !9538}
!9538 = !DILocation(line: 2636, column: 3, scope: !9531)
!9539 = !DILocation(line: 2638, column: 3, scope: !9540)
!9540 = distinct !DILexicalBlock(scope: !9528, file: !3, line: 2638, column: 3)
!9541 = !DILocation(line: 2638, column: 3, scope: !9542)
!9542 = distinct !DILexicalBlock(scope: !9540, file: !3, line: 2638, column: 3)
!9543 = !DILocation(line: 2639, column: 8, scope: !9544)
!9544 = distinct !DILexicalBlock(scope: !9545, file: !3, line: 2639, column: 8)
!9545 = distinct !DILexicalBlock(scope: !9542, file: !3, line: 2638, column: 55)
!9546 = !DILocation(line: 2639, column: 8, scope: !9545)
!9547 = !DILocation(line: 2640, column: 5, scope: !9548)
!9548 = distinct !DILexicalBlock(scope: !9549, file: !3, line: 2640, column: 5)
!9549 = distinct !DILexicalBlock(scope: !9544, file: !3, line: 2639, column: 45)
!9550 = !DILocation(line: 2640, column: 5, scope: !9551)
!9551 = distinct !DILexicalBlock(scope: !9548, file: !3, line: 2640, column: 5)
!9552 = !DILocation(line: 2641, column: 6, scope: !9553)
!9553 = distinct !DILexicalBlock(scope: !9551, file: !3, line: 2640, column: 53)
!9554 = !DILocation(line: 2642, column: 5, scope: !9553)
!9555 = distinct !{!9555, !9547, !9556}
!9556 = !DILocation(line: 2642, column: 5, scope: !9548)
!9557 = !DILocation(line: 2643, column: 4, scope: !9549)
!9558 = !DILocation(line: 2644, column: 3, scope: !9545)
!9559 = distinct !{!9559, !9539, !9560}
!9560 = !DILocation(line: 2644, column: 3, scope: !9540)
!9561 = !DILocation(line: 2647, column: 3, scope: !9562)
!9562 = distinct !DILexicalBlock(scope: !9528, file: !3, line: 2647, column: 3)
!9563 = !DILocation(line: 2647, column: 3, scope: !9564)
!9564 = distinct !DILexicalBlock(scope: !9562, file: !3, line: 2647, column: 3)
!9565 = !DILocation(line: 2650, column: 4, scope: !9566)
!9566 = distinct !DILexicalBlock(scope: !9567, file: !3, line: 2650, column: 4)
!9567 = distinct !DILexicalBlock(scope: !9564, file: !3, line: 2647, column: 55)
!9568 = !DILocation(line: 2650, column: 4, scope: !9569)
!9569 = distinct !DILexicalBlock(scope: !9566, file: !3, line: 2650, column: 4)
!9570 = !DILocation(line: 2651, column: 9, scope: !9571)
!9571 = distinct !DILexicalBlock(scope: !9572, file: !3, line: 2651, column: 9)
!9572 = distinct !DILexicalBlock(scope: !9569, file: !3, line: 2650, column: 52)
!9573 = !DILocation(line: 2651, column: 9, scope: !9572)
!9574 = !DILocation(line: 2652, column: 27, scope: !9575)
!9575 = distinct !DILexicalBlock(scope: !9571, file: !3, line: 2651, column: 47)
!9576 = !DILocation(line: 2652, column: 31, scope: !9575)
!9577 = !DILocation(line: 2652, column: 38, scope: !9575)
!9578 = !DILocation(line: 2652, column: 41, scope: !9575)
!9579 = !DILocation(line: 2652, column: 56, scope: !9575)
!9580 = !DILocation(line: 2652, column: 6, scope: !9575)
!9581 = !DILocation(line: 2653, column: 5, scope: !9575)
!9582 = !DILocation(line: 2654, column: 4, scope: !9572)
!9583 = distinct !{!9583, !9565, !9584}
!9584 = !DILocation(line: 2654, column: 4, scope: !9566)
!9585 = !DILocation(line: 2655, column: 3, scope: !9567)
!9586 = distinct !{!9586, !9561, !9587}
!9587 = !DILocation(line: 2655, column: 3, scope: !9562)
!9588 = !DILocation(line: 2656, column: 2, scope: !9528)
!9589 = !DILocation(line: 2657, column: 12, scope: !9590)
!9590 = distinct !DILexicalBlock(scope: !9518, file: !3, line: 2657, column: 11)
!9591 = !DILocation(line: 2657, column: 16, scope: !9590)
!9592 = !DILocation(line: 2657, column: 24, scope: !9590)
!9593 = !DILocation(line: 2657, column: 45, scope: !9590)
!9594 = !DILocation(line: 2657, column: 50, scope: !9590)
!9595 = !DILocation(line: 2657, column: 53, scope: !9590)
!9596 = !DILocation(line: 2657, column: 59, scope: !9590)
!9597 = !DILocation(line: 2657, column: 66, scope: !9590)
!9598 = !DILocation(line: 2657, column: 11, scope: !9518)
!9599 = !DILocalVariable(name: "vmap", scope: !9600, file: !3, line: 2658, type: !9601)
!9600 = distinct !DILexicalBlock(scope: !9590, file: !3, line: 2657, column: 84)
!9601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7801, size: 64)
!9602 = !DILocation(line: 2658, column: 21, scope: !9600)
!9603 = !DILocalVariable(name: "limit", scope: !9600, file: !3, line: 2659, type: !769)
!9604 = !DILocation(line: 2659, column: 9, scope: !9600)
!9605 = !DILocalVariable(name: "efa_index", scope: !9600, file: !3, line: 2660, type: !224)
!9606 = !DILocation(line: 2660, column: 16, scope: !9600)
!9607 = !DILocation(line: 2662, column: 25, scope: !9600)
!9608 = !DILocation(line: 2662, column: 31, scope: !9600)
!9609 = !DILocation(line: 2662, column: 3, scope: !9600)
!9610 = !DILocation(line: 2664, column: 29, scope: !9600)
!9611 = !DILocation(line: 2664, column: 33, scope: !9600)
!9612 = !DILocation(line: 2664, column: 3, scope: !9600)
!9613 = !DILocation(line: 2665, column: 32, scope: !9600)
!9614 = !DILocation(line: 2665, column: 36, scope: !9600)
!9615 = !DILocation(line: 2665, column: 43, scope: !9600)
!9616 = !DILocation(line: 2665, column: 10, scope: !9600)
!9617 = !DILocation(line: 2665, column: 8, scope: !9600)
!9618 = !DILocation(line: 2666, column: 7, scope: !9619)
!9619 = distinct !DILexicalBlock(scope: !9600, file: !3, line: 2666, column: 7)
!9620 = !DILocation(line: 2666, column: 12, scope: !9619)
!9621 = !DILocation(line: 2666, column: 7, scope: !9600)
!9622 = !DILocation(line: 2667, column: 4, scope: !9623)
!9623 = distinct !DILexicalBlock(scope: !9619, file: !3, line: 2666, column: 21)
!9624 = !DILocation(line: 2670, column: 3, scope: !9625)
!9625 = distinct !DILexicalBlock(scope: !9600, file: !3, line: 2670, column: 3)
!9626 = !DILocation(line: 2670, column: 3, scope: !9627)
!9627 = distinct !DILexicalBlock(scope: !9625, file: !3, line: 2670, column: 3)
!9628 = !DILocation(line: 2671, column: 8, scope: !9629)
!9629 = distinct !DILexicalBlock(scope: !9630, file: !3, line: 2671, column: 8)
!9630 = distinct !DILexicalBlock(scope: !9627, file: !3, line: 2670, column: 72)
!9631 = !DILocation(line: 2671, column: 8, scope: !9630)
!9632 = !DILocation(line: 2674, column: 5, scope: !9633)
!9633 = distinct !DILexicalBlock(scope: !9634, file: !3, line: 2674, column: 5)
!9634 = distinct !DILexicalBlock(scope: !9629, file: !3, line: 2671, column: 45)
!9635 = !DILocation(line: 2674, column: 5, scope: !9636)
!9636 = distinct !DILexicalBlock(scope: !9633, file: !3, line: 2674, column: 5)
!9637 = !DILocation(line: 2675, column: 51, scope: !9638)
!9638 = distinct !DILexicalBlock(scope: !9636, file: !3, line: 2674, column: 53)
!9639 = !DILocation(line: 2675, column: 58, scope: !9638)
!9640 = !DILocation(line: 2675, column: 62, scope: !9638)
!9641 = !DILocation(line: 2675, column: 68, scope: !9638)
!9642 = !DILocation(line: 2675, column: 79, scope: !9638)
!9643 = !DILocation(line: 2676, column: 51, scope: !9638)
!9644 = !DILocation(line: 2676, column: 59, scope: !9638)
!9645 = !DILocation(line: 2675, column: 6, scope: !9638)
!9646 = !DILocation(line: 2677, column: 5, scope: !9638)
!9647 = distinct !{!9647, !9632, !9648}
!9648 = !DILocation(line: 2677, column: 5, scope: !9633)
!9649 = !DILocation(line: 2678, column: 4, scope: !9634)
!9650 = !DILocation(line: 2679, column: 3, scope: !9630)
!9651 = distinct !{!9651, !9624, !9652}
!9652 = !DILocation(line: 2679, column: 3, scope: !9625)
!9653 = !DILocation(line: 2680, column: 23, scope: !9600)
!9654 = !DILocation(line: 2680, column: 3, scope: !9600)
!9655 = !DILocation(line: 2682, column: 2, scope: !9600)
!9656 = !DILocation(line: 2684, column: 3, scope: !9657)
!9657 = distinct !DILexicalBlock(scope: !9658, file: !3, line: 2684, column: 3)
!9658 = distinct !DILexicalBlock(scope: !9590, file: !3, line: 2683, column: 7)
!9659 = !DILocation(line: 2684, column: 3, scope: !9660)
!9660 = distinct !DILexicalBlock(scope: !9657, file: !3, line: 2684, column: 3)
!9661 = !DILocation(line: 2685, column: 8, scope: !9662)
!9662 = distinct !DILexicalBlock(scope: !9663, file: !3, line: 2685, column: 8)
!9663 = distinct !DILexicalBlock(scope: !9660, file: !3, line: 2684, column: 55)
!9664 = !DILocation(line: 2685, column: 8, scope: !9663)
!9665 = !DILocation(line: 2686, column: 28, scope: !9666)
!9666 = distinct !DILexicalBlock(scope: !9662, file: !3, line: 2685, column: 45)
!9667 = !DILocation(line: 2686, column: 35, scope: !9666)
!9668 = !DILocation(line: 2686, column: 39, scope: !9666)
!9669 = !DILocation(line: 2686, column: 44, scope: !9666)
!9670 = !DILocation(line: 2686, column: 59, scope: !9666)
!9671 = !DILocation(line: 2686, column: 5, scope: !9666)
!9672 = !DILocation(line: 2687, column: 4, scope: !9666)
!9673 = !DILocation(line: 2688, column: 3, scope: !9663)
!9674 = distinct !{!9674, !9656, !9675}
!9675 = !DILocation(line: 2688, column: 3, scope: !9657)
!9676 = !DILocation(line: 2690, column: 1, scope: !9484)
!9677 = distinct !DISubprogram(name: "uv_select_sync_flush", scope: !3, file: !3, line: 2538, type: !9678, scopeLine: 2539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!9678 = !DISubroutineType(types: !9679)
!9679 = !{null, !4138, !3593, !9680}
!9680 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !48)
!9681 = !DILocalVariable(name: "ts", arg: 1, scope: !9677, file: !3, line: 2538, type: !4138)
!9682 = !DILocation(line: 2538, column: 48, scope: !9677)
!9683 = !DILocalVariable(name: "em", arg: 2, scope: !9677, file: !3, line: 2538, type: !3593)
!9684 = !DILocation(line: 2538, column: 64, scope: !9677)
!9685 = !DILocalVariable(name: "select", arg: 3, scope: !9677, file: !3, line: 2538, type: !9680)
!9686 = !DILocation(line: 2538, column: 80, scope: !9677)
!9687 = !DILocation(line: 2541, column: 6, scope: !9688)
!9688 = distinct !DILexicalBlock(scope: !9677, file: !3, line: 2541, column: 6)
!9689 = !DILocation(line: 2541, column: 10, scope: !9688)
!9690 = !DILocation(line: 2541, column: 18, scope: !9688)
!9691 = !DILocation(line: 2541, column: 6, scope: !9677)
!9692 = !DILocation(line: 2542, column: 7, scope: !9693)
!9693 = distinct !DILexicalBlock(scope: !9694, file: !3, line: 2542, column: 7)
!9694 = distinct !DILexicalBlock(scope: !9688, file: !3, line: 2541, column: 39)
!9695 = !DILocation(line: 2542, column: 11, scope: !9693)
!9696 = !DILocation(line: 2542, column: 22, scope: !9693)
!9697 = !DILocation(line: 2542, column: 7, scope: !9694)
!9698 = !DILocation(line: 2543, column: 8, scope: !9699)
!9699 = distinct !DILexicalBlock(scope: !9700, file: !3, line: 2543, column: 8)
!9700 = distinct !DILexicalBlock(scope: !9693, file: !3, line: 2542, column: 42)
!9701 = !DILocation(line: 2543, column: 15, scope: !9699)
!9702 = !DILocation(line: 2543, column: 8, scope: !9700)
!9703 = !DILocation(line: 2544, column: 25, scope: !9704)
!9704 = distinct !DILexicalBlock(scope: !9699, file: !3, line: 2543, column: 25)
!9705 = !DILocation(line: 2544, column: 5, scope: !9704)
!9706 = !DILocation(line: 2545, column: 4, scope: !9704)
!9707 = !DILocation(line: 2547, column: 23, scope: !9708)
!9708 = distinct !DILexicalBlock(scope: !9699, file: !3, line: 2546, column: 9)
!9709 = !DILocation(line: 2547, column: 5, scope: !9708)
!9710 = !DILocation(line: 2549, column: 3, scope: !9700)
!9711 = !DILocation(line: 2551, column: 7, scope: !9712)
!9712 = distinct !DILexicalBlock(scope: !9694, file: !3, line: 2551, column: 7)
!9713 = !DILocation(line: 2551, column: 14, scope: !9712)
!9714 = !DILocation(line: 2551, column: 7, scope: !9694)
!9715 = !DILocation(line: 2552, column: 31, scope: !9716)
!9716 = distinct !DILexicalBlock(scope: !9712, file: !3, line: 2551, column: 24)
!9717 = !DILocation(line: 2552, column: 35, scope: !9716)
!9718 = !DILocation(line: 2552, column: 4, scope: !9716)
!9719 = !DILocation(line: 2553, column: 3, scope: !9716)
!9720 = !DILocation(line: 2554, column: 2, scope: !9694)
!9721 = !DILocation(line: 2555, column: 1, scope: !9677)
!9722 = distinct !DISubprogram(name: "uv_select_flush_from_tag_sticky_loc_internal", scope: !3, file: !3, line: 2565, type: !9723, scopeLine: 2568, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!9723 = !DISubroutineType(types: !9724)
!9724 = !{null, !3841, !3593, !7798, !9725, !3220, !3951, !4165}
!9725 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !224)
!9726 = !DILocalVariable(name: "scene", arg: 1, scope: !9722, file: !3, line: 2565, type: !3841)
!9727 = !DILocation(line: 2565, column: 65, scope: !9722)
!9728 = !DILocalVariable(name: "em", arg: 2, scope: !9722, file: !3, line: 2565, type: !3593)
!9729 = !DILocation(line: 2565, column: 84, scope: !9722)
!9730 = !DILocalVariable(name: "vmap", arg: 3, scope: !9722, file: !3, line: 2565, type: !7798)
!9731 = !DILocation(line: 2565, column: 99, scope: !9722)
!9732 = !DILocalVariable(name: "efa_index", arg: 4, scope: !9722, file: !3, line: 2566, type: !9725)
!9733 = !DILocation(line: 2566, column: 77, scope: !9722)
!9734 = !DILocalVariable(name: "l", arg: 5, scope: !9722, file: !3, line: 2566, type: !3220)
!9735 = !DILocation(line: 2566, column: 96, scope: !9722)
!9736 = !DILocalVariable(name: "select", arg: 6, scope: !9722, file: !3, line: 2567, type: !3951)
!9737 = !DILocation(line: 2567, column: 69, scope: !9722)
!9738 = !DILocalVariable(name: "cd_loop_uv_offset", arg: 7, scope: !9722, file: !3, line: 2567, type: !4165)
!9739 = !DILocation(line: 2567, column: 87, scope: !9722)
!9740 = !DILocalVariable(name: "start_vlist", scope: !9722, file: !3, line: 2569, type: !7816)
!9741 = !DILocation(line: 2569, column: 13, scope: !9722)
!9742 = !DILocalVariable(name: "vlist_iter", scope: !9722, file: !3, line: 2569, type: !7816)
!9743 = !DILocation(line: 2569, column: 34, scope: !9722)
!9744 = !DILocalVariable(name: "efa_vlist", scope: !9722, file: !3, line: 2570, type: !3238)
!9745 = !DILocation(line: 2570, column: 10, scope: !9722)
!9746 = !DILocation(line: 2572, column: 23, scope: !9722)
!9747 = !DILocation(line: 2572, column: 27, scope: !9722)
!9748 = !DILocation(line: 2572, column: 34, scope: !9722)
!9749 = !DILocation(line: 2572, column: 37, scope: !9722)
!9750 = !DILocation(line: 2572, column: 52, scope: !9722)
!9751 = !DILocation(line: 2572, column: 2, scope: !9722)
!9752 = !DILocation(line: 2574, column: 39, scope: !9722)
!9753 = !DILocation(line: 2574, column: 45, scope: !9722)
!9754 = !DILocation(line: 2574, column: 15, scope: !9722)
!9755 = !DILocation(line: 2574, column: 13, scope: !9722)
!9756 = !DILocation(line: 2576, column: 2, scope: !9722)
!9757 = !DILocation(line: 2576, column: 9, scope: !9722)
!9758 = !DILocation(line: 2577, column: 7, scope: !9759)
!9759 = distinct !DILexicalBlock(scope: !9760, file: !3, line: 2577, column: 7)
!9760 = distinct !DILexicalBlock(scope: !9722, file: !3, line: 2576, column: 21)
!9761 = !DILocation(line: 2577, column: 19, scope: !9759)
!9762 = !DILocation(line: 2577, column: 7, scope: !9760)
!9763 = !DILocation(line: 2578, column: 18, scope: !9759)
!9764 = !DILocation(line: 2578, column: 16, scope: !9759)
!9765 = !DILocation(line: 2578, column: 4, scope: !9759)
!9766 = !DILocation(line: 2580, column: 7, scope: !9767)
!9767 = distinct !DILexicalBlock(scope: !9760, file: !3, line: 2580, column: 7)
!9768 = !DILocation(line: 2580, column: 20, scope: !9767)
!9769 = !DILocation(line: 2580, column: 32, scope: !9767)
!9770 = !DILocation(line: 2580, column: 17, scope: !9767)
!9771 = !DILocation(line: 2580, column: 7, scope: !9760)
!9772 = !DILocation(line: 2581, column: 4, scope: !9767)
!9773 = !DILocation(line: 2583, column: 16, scope: !9760)
!9774 = !DILocation(line: 2583, column: 28, scope: !9760)
!9775 = !DILocation(line: 2583, column: 14, scope: !9760)
!9776 = distinct !{!9776, !9756, !9777}
!9777 = !DILocation(line: 2584, column: 2, scope: !9722)
!9778 = !DILocation(line: 2586, column: 15, scope: !9722)
!9779 = !DILocation(line: 2586, column: 13, scope: !9722)
!9780 = !DILocation(line: 2587, column: 2, scope: !9722)
!9781 = !DILocation(line: 2587, column: 9, scope: !9722)
!9782 = !DILocation(line: 2589, column: 7, scope: !9783)
!9783 = distinct !DILexicalBlock(scope: !9784, file: !3, line: 2589, column: 7)
!9784 = distinct !DILexicalBlock(scope: !9722, file: !3, line: 2587, column: 21)
!9785 = !DILocation(line: 2589, column: 21, scope: !9783)
!9786 = !DILocation(line: 2589, column: 18, scope: !9783)
!9787 = !DILocation(line: 2589, column: 33, scope: !9783)
!9788 = !DILocation(line: 2589, column: 36, scope: !9783)
!9789 = !DILocation(line: 2589, column: 48, scope: !9783)
!9790 = !DILocation(line: 2589, column: 7, scope: !9784)
!9791 = !DILocation(line: 2590, column: 4, scope: !9783)
!9792 = !DILocation(line: 2592, column: 7, scope: !9793)
!9793 = distinct !DILexicalBlock(scope: !9784, file: !3, line: 2592, column: 7)
!9794 = !DILocation(line: 2592, column: 20, scope: !9793)
!9795 = !DILocation(line: 2592, column: 32, scope: !9793)
!9796 = !DILocation(line: 2592, column: 17, scope: !9793)
!9797 = !DILocation(line: 2592, column: 7, scope: !9784)
!9798 = !DILocalVariable(name: "l_other", scope: !9799, file: !3, line: 2593, type: !3220)
!9799 = distinct !DILexicalBlock(scope: !9793, file: !3, line: 2592, column: 35)
!9800 = !DILocation(line: 2593, column: 12, scope: !9799)
!9801 = !DILocation(line: 2594, column: 33, scope: !9799)
!9802 = !DILocation(line: 2594, column: 37, scope: !9799)
!9803 = !DILocation(line: 2594, column: 41, scope: !9799)
!9804 = !DILocation(line: 2594, column: 53, scope: !9799)
!9805 = !DILocation(line: 2594, column: 16, scope: !9799)
!9806 = !DILocation(line: 2594, column: 14, scope: !9799)
!9807 = !DILocation(line: 2597, column: 31, scope: !9799)
!9808 = !DILocation(line: 2597, column: 35, scope: !9799)
!9809 = !DILocation(line: 2597, column: 57, scope: !9799)
!9810 = !DILocation(line: 2597, column: 68, scope: !9799)
!9811 = !DILocation(line: 2597, column: 80, scope: !9799)
!9812 = !DILocation(line: 2597, column: 14, scope: !9799)
!9813 = !DILocation(line: 2597, column: 12, scope: !9799)
!9814 = !DILocation(line: 2599, column: 25, scope: !9799)
!9815 = !DILocation(line: 2599, column: 29, scope: !9799)
!9816 = !DILocation(line: 2599, column: 36, scope: !9799)
!9817 = !DILocation(line: 2599, column: 45, scope: !9799)
!9818 = !DILocation(line: 2599, column: 60, scope: !9799)
!9819 = !DILocation(line: 2599, column: 4, scope: !9799)
!9820 = !DILocation(line: 2600, column: 3, scope: !9799)
!9821 = !DILocation(line: 2601, column: 16, scope: !9784)
!9822 = !DILocation(line: 2601, column: 28, scope: !9784)
!9823 = !DILocation(line: 2601, column: 14, scope: !9784)
!9824 = distinct !{!9824, !9780, !9825}
!9825 = !DILocation(line: 2602, column: 2, scope: !9722)
!9826 = !DILocation(line: 2603, column: 1, scope: !9722)
!9827 = distinct !DISubprogram(name: "uv_lasso_select_exec", scope: !3, file: !3, line: 3127, type: !6778, scopeLine: 3128, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!9828 = !DILocalVariable(name: "C", arg: 1, scope: !9827, file: !3, line: 3127, type: !6780)
!9829 = !DILocation(line: 3127, column: 43, scope: !9827)
!9830 = !DILocalVariable(name: "op", arg: 2, scope: !9827, file: !3, line: 3127, type: !6783)
!9831 = !DILocation(line: 3127, column: 58, scope: !9827)
!9832 = !DILocalVariable(name: "mcords_tot", scope: !9827, file: !3, line: 3129, type: !22)
!9833 = !DILocation(line: 3129, column: 6, scope: !9827)
!9834 = !DILocalVariable(name: "mcords", scope: !9827, file: !3, line: 3130, type: !9835)
!9835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9836, size: 64)
!9836 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4165, size: 64, elements: !727)
!9837 = !DILocation(line: 3130, column: 14, scope: !9827)
!9838 = !DILocation(line: 3130, column: 58, scope: !9827)
!9839 = !DILocation(line: 3130, column: 61, scope: !9827)
!9840 = !DILocation(line: 3130, column: 27, scope: !9827)
!9841 = !DILocation(line: 3132, column: 6, scope: !9842)
!9842 = distinct !DILexicalBlock(scope: !9827, file: !3, line: 3132, column: 6)
!9843 = !DILocation(line: 3132, column: 6, scope: !9827)
!9844 = !DILocalVariable(name: "select", scope: !9845, file: !3, line: 3133, type: !2013)
!9845 = distinct !DILexicalBlock(scope: !9842, file: !3, line: 3132, column: 14)
!9846 = !DILocation(line: 3133, column: 8, scope: !9845)
!9847 = !DILocalVariable(name: "extend", scope: !9845, file: !3, line: 3133, type: !2013)
!9848 = !DILocation(line: 3133, column: 16, scope: !9845)
!9849 = !DILocalVariable(name: "changed", scope: !9845, file: !3, line: 3134, type: !2013)
!9850 = !DILocation(line: 3134, column: 8, scope: !9845)
!9851 = !DILocation(line: 3136, column: 29, scope: !9845)
!9852 = !DILocation(line: 3136, column: 33, scope: !9845)
!9853 = !DILocation(line: 3136, column: 13, scope: !9845)
!9854 = !DILocation(line: 3136, column: 12, scope: !9845)
!9855 = !DILocation(line: 3136, column: 10, scope: !9845)
!9856 = !DILocation(line: 3137, column: 28, scope: !9845)
!9857 = !DILocation(line: 3137, column: 32, scope: !9845)
!9858 = !DILocation(line: 3137, column: 12, scope: !9845)
!9859 = !DILocation(line: 3137, column: 10, scope: !9845)
!9860 = !DILocation(line: 3138, column: 37, scope: !9845)
!9861 = !DILocation(line: 3138, column: 40, scope: !9845)
!9862 = !DILocation(line: 3138, column: 48, scope: !9845)
!9863 = !DILocation(line: 3138, column: 60, scope: !9845)
!9864 = !DILocation(line: 3138, column: 68, scope: !9845)
!9865 = !DILocation(line: 3138, column: 13, scope: !9845)
!9866 = !DILocation(line: 3138, column: 11, scope: !9845)
!9867 = !DILocation(line: 3140, column: 3, scope: !9845)
!9868 = !DILocation(line: 3140, column: 21, scope: !9845)
!9869 = !DILocation(line: 3140, column: 13, scope: !9845)
!9870 = !DILocation(line: 3142, column: 10, scope: !9845)
!9871 = !DILocation(line: 3142, column: 3, scope: !9845)
!9872 = !DILocation(line: 3145, column: 2, scope: !9827)
!9873 = !DILocation(line: 3146, column: 1, scope: !9827)
!9874 = distinct !DISubprogram(name: "do_lasso_select_mesh_uv", scope: !3, file: !3, line: 3039, type: !9875, scopeLine: 3041, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!9875 = !DISubroutineType(types: !9876)
!9876 = !{!2013, !6780, !9835, !48, !3951, !3951}
!9877 = !DILocalVariable(name: "C", arg: 1, scope: !9874, file: !3, line: 3039, type: !6780)
!9878 = !DILocation(line: 3039, column: 47, scope: !9874)
!9879 = !DILocalVariable(name: "mcords", arg: 2, scope: !9874, file: !3, line: 3039, type: !9835)
!9880 = !DILocation(line: 3039, column: 60, scope: !9874)
!9881 = !DILocalVariable(name: "moves", arg: 3, scope: !9874, file: !3, line: 3039, type: !48)
!9882 = !DILocation(line: 3039, column: 79, scope: !9874)
!9883 = !DILocalVariable(name: "select", arg: 4, scope: !9874, file: !3, line: 3040, type: !3951)
!9884 = !DILocation(line: 3040, column: 48, scope: !9874)
!9885 = !DILocalVariable(name: "extend", arg: 5, scope: !9874, file: !3, line: 3040, type: !3951)
!9886 = !DILocation(line: 3040, column: 67, scope: !9874)
!9887 = !DILocalVariable(name: "sima", scope: !9874, file: !3, line: 3042, type: !4824)
!9888 = !DILocation(line: 3042, column: 14, scope: !9874)
!9889 = !DILocation(line: 3042, column: 40, scope: !9874)
!9890 = !DILocation(line: 3042, column: 21, scope: !9874)
!9891 = !DILocalVariable(name: "ima", scope: !9874, file: !3, line: 3043, type: !3164)
!9892 = !DILocation(line: 3043, column: 9, scope: !9874)
!9893 = !DILocation(line: 3043, column: 35, scope: !9874)
!9894 = !DILocation(line: 3043, column: 15, scope: !9874)
!9895 = !DILocalVariable(name: "ar", scope: !9874, file: !3, line: 3044, type: !7010)
!9896 = !DILocation(line: 3044, column: 11, scope: !9874)
!9897 = !DILocation(line: 3044, column: 30, scope: !9874)
!9898 = !DILocation(line: 3044, column: 16, scope: !9874)
!9899 = !DILocalVariable(name: "obedit", scope: !9874, file: !3, line: 3045, type: !3588)
!9900 = !DILocation(line: 3045, column: 10, scope: !9874)
!9901 = !DILocation(line: 3045, column: 40, scope: !9874)
!9902 = !DILocation(line: 3045, column: 19, scope: !9874)
!9903 = !DILocalVariable(name: "scene", scope: !9874, file: !3, line: 3046, type: !3841)
!9904 = !DILocation(line: 3046, column: 9, scope: !9874)
!9905 = !DILocation(line: 3046, column: 32, scope: !9874)
!9906 = !DILocation(line: 3046, column: 17, scope: !9874)
!9907 = !DILocalVariable(name: "ts", scope: !9874, file: !3, line: 3047, type: !4138)
!9908 = !DILocation(line: 3047, column: 16, scope: !9874)
!9909 = !DILocation(line: 3047, column: 21, scope: !9874)
!9910 = !DILocation(line: 3047, column: 28, scope: !9874)
!9911 = !DILocalVariable(name: "em", scope: !9874, file: !3, line: 3048, type: !3593)
!9912 = !DILocation(line: 3048, column: 14, scope: !9874)
!9913 = !DILocation(line: 3048, column: 44, scope: !9874)
!9914 = !DILocation(line: 3048, column: 19, scope: !9874)
!9915 = !DILocalVariable(name: "use_face_center", scope: !9874, file: !3, line: 3049, type: !4165)
!9916 = !DILocation(line: 3049, column: 12, scope: !9874)
!9917 = !DILocation(line: 3049, column: 31, scope: !9874)
!9918 = !DILocation(line: 3049, column: 35, scope: !9874)
!9919 = !DILocation(line: 3049, column: 43, scope: !9874)
!9920 = !DILocation(line: 3049, column: 30, scope: !9874)
!9921 = !DILocation(line: 3050, column: 31, scope: !9874)
!9922 = !DILocation(line: 3050, column: 35, scope: !9874)
!9923 = !DILocation(line: 3050, column: 46, scope: !9874)
!9924 = !DILocation(line: 3051, column: 31, scope: !9874)
!9925 = !DILocation(line: 3051, column: 35, scope: !9874)
!9926 = !DILocation(line: 3051, column: 49, scope: !9874)
!9927 = !DILocalVariable(name: "cd_loop_uv_offset", scope: !9874, file: !3, line: 3053, type: !4165)
!9928 = !DILocation(line: 3053, column: 12, scope: !9874)
!9929 = !DILocation(line: 3053, column: 56, scope: !9874)
!9930 = !DILocation(line: 3053, column: 60, scope: !9874)
!9931 = !DILocation(line: 3053, column: 64, scope: !9874)
!9932 = !DILocation(line: 3053, column: 33, scope: !9874)
!9933 = !DILocalVariable(name: "cd_poly_tex_offset", scope: !9874, file: !3, line: 3054, type: !4165)
!9934 = !DILocation(line: 3054, column: 12, scope: !9874)
!9935 = !DILocation(line: 3054, column: 56, scope: !9874)
!9936 = !DILocation(line: 3054, column: 60, scope: !9874)
!9937 = !DILocation(line: 3054, column: 64, scope: !9874)
!9938 = !DILocation(line: 3054, column: 33, scope: !9874)
!9939 = !DILocalVariable(name: "iter", scope: !9874, file: !3, line: 3056, type: !3856)
!9940 = !DILocation(line: 3056, column: 9, scope: !9874)
!9941 = !DILocalVariable(name: "liter", scope: !9874, file: !3, line: 3056, type: !3856)
!9942 = !DILocation(line: 3056, column: 15, scope: !9874)
!9943 = !DILocalVariable(name: "efa", scope: !9874, file: !3, line: 3058, type: !3238)
!9944 = !DILocation(line: 3058, column: 10, scope: !9874)
!9945 = !DILocalVariable(name: "l", scope: !9874, file: !3, line: 3059, type: !3220)
!9946 = !DILocation(line: 3059, column: 10, scope: !9874)
!9947 = !DILocalVariable(name: "tf", scope: !9874, file: !3, line: 3060, type: !3945)
!9948 = !DILocation(line: 3060, column: 12, scope: !9874)
!9949 = !DILocalVariable(name: "screen_uv", scope: !9874, file: !3, line: 3061, type: !1762)
!9950 = !DILocation(line: 3061, column: 6, scope: !9874)
!9951 = !DILocalVariable(name: "changed", scope: !9874, file: !3, line: 3062, type: !2013)
!9952 = !DILocation(line: 3062, column: 7, scope: !9874)
!9953 = !DILocalVariable(name: "rect", scope: !9874, file: !3, line: 3063, type: !759)
!9954 = !DILocation(line: 3063, column: 7, scope: !9874)
!9955 = !DILocation(line: 3065, column: 28, scope: !9874)
!9956 = !DILocation(line: 3065, column: 36, scope: !9874)
!9957 = !DILocation(line: 3065, column: 2, scope: !9874)
!9958 = !DILocation(line: 3067, column: 7, scope: !9959)
!9959 = distinct !DILexicalBlock(scope: !9874, file: !3, line: 3067, column: 6)
!9960 = !DILocation(line: 3067, column: 14, scope: !9959)
!9961 = !DILocation(line: 3067, column: 17, scope: !9959)
!9962 = !DILocation(line: 3067, column: 6, scope: !9874)
!9963 = !DILocation(line: 3068, column: 25, scope: !9964)
!9964 = distinct !DILexicalBlock(scope: !9959, file: !3, line: 3067, column: 25)
!9965 = !DILocation(line: 3068, column: 32, scope: !9964)
!9966 = !DILocation(line: 3068, column: 37, scope: !9964)
!9967 = !DILocation(line: 3068, column: 3, scope: !9964)
!9968 = !DILocation(line: 3069, column: 2, scope: !9964)
!9969 = !DILocation(line: 3071, column: 6, scope: !9970)
!9970 = distinct !DILexicalBlock(scope: !9874, file: !3, line: 3071, column: 6)
!9971 = !DILocation(line: 3071, column: 6, scope: !9874)
!9972 = !DILocation(line: 3072, column: 3, scope: !9973)
!9973 = distinct !DILexicalBlock(scope: !9974, file: !3, line: 3072, column: 3)
!9974 = distinct !DILexicalBlock(scope: !9970, file: !3, line: 3071, column: 23)
!9975 = !DILocation(line: 3072, column: 3, scope: !9976)
!9976 = distinct !DILexicalBlock(scope: !9973, file: !3, line: 3072, column: 3)
!9977 = !DILocation(line: 3073, column: 4, scope: !9978)
!9978 = distinct !DILexicalBlock(scope: !9976, file: !3, line: 3072, column: 55)
!9979 = !DILocation(line: 3075, column: 8, scope: !9980)
!9980 = distinct !DILexicalBlock(scope: !9978, file: !3, line: 3075, column: 8)
!9981 = !DILocation(line: 3075, column: 42, scope: !9980)
!9982 = !DILocation(line: 3075, column: 49, scope: !9980)
!9983 = !DILocation(line: 3075, column: 54, scope: !9980)
!9984 = !DILocation(line: 3075, column: 18, scope: !9980)
!9985 = !DILocation(line: 3075, column: 15, scope: !9980)
!9986 = !DILocation(line: 3075, column: 8, scope: !9978)
!9987 = !DILocalVariable(name: "cent", scope: !9988, file: !3, line: 3076, type: !769)
!9988 = distinct !DILexicalBlock(scope: !9980, file: !3, line: 3075, column: 74)
!9989 = !DILocation(line: 3076, column: 11, scope: !9988)
!9990 = !DILocation(line: 3077, column: 20, scope: !9988)
!9991 = !DILocation(line: 3077, column: 25, scope: !9988)
!9992 = !DILocation(line: 3077, column: 31, scope: !9988)
!9993 = !DILocation(line: 3077, column: 5, scope: !9988)
!9994 = !DILocation(line: 3079, column: 40, scope: !9995)
!9995 = distinct !DILexicalBlock(scope: !9988, file: !3, line: 3079, column: 9)
!9996 = !DILocation(line: 3079, column: 44, scope: !9995)
!9997 = !DILocation(line: 3079, column: 49, scope: !9995)
!9998 = !DILocation(line: 3079, column: 58, scope: !9995)
!9999 = !DILocation(line: 3079, column: 68, scope: !9995)
!10000 = !DILocation(line: 3079, column: 83, scope: !9995)
!10001 = !DILocation(line: 3079, column: 9, scope: !9995)
!10002 = !DILocation(line: 3079, column: 97, scope: !9995)
!10003 = !DILocation(line: 3080, column: 36, scope: !9995)
!10004 = !DILocation(line: 3080, column: 9, scope: !9995)
!10005 = !DILocation(line: 3080, column: 47, scope: !9995)
!10006 = !DILocation(line: 3081, column: 35, scope: !9995)
!10007 = !DILocation(line: 3081, column: 43, scope: !9995)
!10008 = !DILocation(line: 3081, column: 50, scope: !9995)
!10009 = !DILocation(line: 3081, column: 64, scope: !9995)
!10010 = !DILocation(line: 3081, column: 9, scope: !9995)
!10011 = !DILocation(line: 3079, column: 9, scope: !9988)
!10012 = !DILocation(line: 3083, column: 6, scope: !10013)
!10013 = distinct !DILexicalBlock(scope: !9995, file: !3, line: 3082, column: 5)
!10014 = !DILocation(line: 3084, column: 14, scope: !10013)
!10015 = !DILocation(line: 3085, column: 5, scope: !10013)
!10016 = !DILocation(line: 3086, column: 4, scope: !9988)
!10017 = !DILocation(line: 3087, column: 3, scope: !9978)
!10018 = distinct !{!10018, !9972, !10019}
!10019 = !DILocation(line: 3087, column: 3, scope: !9973)
!10020 = !DILocation(line: 3090, column: 7, scope: !10021)
!10021 = distinct !DILexicalBlock(scope: !9974, file: !3, line: 3090, column: 7)
!10022 = !DILocation(line: 3090, column: 7, scope: !9974)
!10023 = !DILocation(line: 3091, column: 34, scope: !10024)
!10024 = distinct !DILexicalBlock(scope: !10021, file: !3, line: 3090, column: 16)
!10025 = !DILocation(line: 3091, column: 40, scope: !10024)
!10026 = !DILocation(line: 3091, column: 47, scope: !10024)
!10027 = !DILocation(line: 3091, column: 55, scope: !10024)
!10028 = !DILocation(line: 3091, column: 4, scope: !10024)
!10029 = !DILocation(line: 3092, column: 3, scope: !10024)
!10030 = !DILocation(line: 3093, column: 2, scope: !9974)
!10031 = !DILocation(line: 3095, column: 3, scope: !10032)
!10032 = distinct !DILexicalBlock(scope: !10033, file: !3, line: 3095, column: 3)
!10033 = distinct !DILexicalBlock(scope: !9970, file: !3, line: 3094, column: 7)
!10034 = !DILocation(line: 3095, column: 3, scope: !10035)
!10035 = distinct !DILexicalBlock(scope: !10032, file: !3, line: 3095, column: 3)
!10036 = !DILocation(line: 3096, column: 9, scope: !10037)
!10037 = distinct !DILexicalBlock(scope: !10035, file: !3, line: 3095, column: 55)
!10038 = !DILocation(line: 3096, column: 7, scope: !10037)
!10039 = !DILocation(line: 3097, column: 33, scope: !10040)
!10040 = distinct !DILexicalBlock(scope: !10037, file: !3, line: 3097, column: 8)
!10041 = !DILocation(line: 3097, column: 40, scope: !10040)
!10042 = !DILocation(line: 3097, column: 45, scope: !10040)
!10043 = !DILocation(line: 3097, column: 50, scope: !10040)
!10044 = !DILocation(line: 3097, column: 8, scope: !10040)
!10045 = !DILocation(line: 3097, column: 8, scope: !10037)
!10046 = !DILocation(line: 3098, column: 5, scope: !10047)
!10047 = distinct !DILexicalBlock(scope: !10048, file: !3, line: 3098, column: 5)
!10048 = distinct !DILexicalBlock(scope: !10040, file: !3, line: 3097, column: 55)
!10049 = !DILocation(line: 3098, column: 5, scope: !10050)
!10050 = distinct !DILexicalBlock(scope: !10047, file: !3, line: 3098, column: 5)
!10051 = !DILocation(line: 3099, column: 11, scope: !10052)
!10052 = distinct !DILexicalBlock(scope: !10053, file: !3, line: 3099, column: 10)
!10053 = distinct !DILexicalBlock(scope: !10050, file: !3, line: 3098, column: 53)
!10054 = !DILocation(line: 3099, column: 10, scope: !10052)
!10055 = !DILocation(line: 3099, column: 45, scope: !10052)
!10056 = !DILocation(line: 3099, column: 52, scope: !10052)
!10057 = !DILocation(line: 3099, column: 55, scope: !10052)
!10058 = !DILocation(line: 3099, column: 23, scope: !10052)
!10059 = !DILocation(line: 3099, column: 22, scope: !10052)
!10060 = !DILocation(line: 3099, column: 19, scope: !10052)
!10061 = !DILocation(line: 3099, column: 10, scope: !10053)
!10062 = !DILocalVariable(name: "luv", scope: !10063, file: !3, line: 3100, type: !3240)
!10063 = distinct !DILexicalBlock(scope: !10052, file: !3, line: 3099, column: 76)
!10064 = !DILocation(line: 3100, column: 16, scope: !10063)
!10065 = !DILocation(line: 3100, column: 22, scope: !10063)
!10066 = !DILocation(line: 3101, column: 42, scope: !10067)
!10067 = distinct !DILexicalBlock(scope: !10063, file: !3, line: 3101, column: 11)
!10068 = !DILocation(line: 3101, column: 46, scope: !10067)
!10069 = !DILocation(line: 3102, column: 41, scope: !10067)
!10070 = !DILocation(line: 3102, column: 46, scope: !10067)
!10071 = !DILocation(line: 3102, column: 53, scope: !10067)
!10072 = !DILocation(line: 3102, column: 58, scope: !10067)
!10073 = !DILocation(line: 3103, column: 42, scope: !10067)
!10074 = !DILocation(line: 3103, column: 57, scope: !10067)
!10075 = !DILocation(line: 3101, column: 11, scope: !10067)
!10076 = !DILocation(line: 3103, column: 71, scope: !10067)
!10077 = !DILocation(line: 3104, column: 38, scope: !10067)
!10078 = !DILocation(line: 3104, column: 11, scope: !10067)
!10079 = !DILocation(line: 3104, column: 49, scope: !10067)
!10080 = !DILocation(line: 3105, column: 37, scope: !10067)
!10081 = !DILocation(line: 3105, column: 45, scope: !10067)
!10082 = !DILocation(line: 3105, column: 52, scope: !10067)
!10083 = !DILocation(line: 3105, column: 66, scope: !10067)
!10084 = !DILocation(line: 3105, column: 11, scope: !10067)
!10085 = !DILocation(line: 3101, column: 11, scope: !10063)
!10086 = !DILocation(line: 3107, column: 29, scope: !10087)
!10087 = distinct !DILexicalBlock(scope: !10067, file: !3, line: 3106, column: 7)
!10088 = !DILocation(line: 3107, column: 33, scope: !10087)
!10089 = !DILocation(line: 3107, column: 40, scope: !10087)
!10090 = !DILocation(line: 3107, column: 43, scope: !10087)
!10091 = !DILocation(line: 3107, column: 58, scope: !10087)
!10092 = !DILocation(line: 3107, column: 8, scope: !10087)
!10093 = !DILocation(line: 3108, column: 16, scope: !10087)
!10094 = !DILocation(line: 3109, column: 7, scope: !10087)
!10095 = !DILocation(line: 3110, column: 6, scope: !10063)
!10096 = !DILocation(line: 3111, column: 5, scope: !10053)
!10097 = distinct !{!10097, !10046, !10098}
!10098 = !DILocation(line: 3111, column: 5, scope: !10047)
!10099 = !DILocation(line: 3112, column: 4, scope: !10048)
!10100 = !DILocation(line: 3113, column: 3, scope: !10037)
!10101 = distinct !{!10101, !10031, !10102}
!10102 = !DILocation(line: 3113, column: 3, scope: !10032)
!10103 = !DILocation(line: 3116, column: 6, scope: !10104)
!10104 = distinct !DILexicalBlock(scope: !9874, file: !3, line: 3116, column: 6)
!10105 = !DILocation(line: 3116, column: 6, scope: !9874)
!10106 = !DILocation(line: 3117, column: 24, scope: !10107)
!10107 = distinct !DILexicalBlock(scope: !10104, file: !3, line: 3116, column: 15)
!10108 = !DILocation(line: 3117, column: 31, scope: !10107)
!10109 = !DILocation(line: 3117, column: 45, scope: !10107)
!10110 = !DILocation(line: 3117, column: 49, scope: !10107)
!10111 = !DILocation(line: 3117, column: 3, scope: !10107)
!10112 = !DILocation(line: 3119, column: 7, scope: !10113)
!10113 = distinct !DILexicalBlock(scope: !10107, file: !3, line: 3119, column: 7)
!10114 = !DILocation(line: 3119, column: 11, scope: !10113)
!10115 = !DILocation(line: 3119, column: 19, scope: !10113)
!10116 = !DILocation(line: 3119, column: 7, scope: !10107)
!10117 = !DILocation(line: 3120, column: 26, scope: !10118)
!10118 = distinct !DILexicalBlock(scope: !10113, file: !3, line: 3119, column: 40)
!10119 = !DILocation(line: 3120, column: 50, scope: !10118)
!10120 = !DILocation(line: 3120, column: 58, scope: !10118)
!10121 = !DILocation(line: 3120, column: 4, scope: !10118)
!10122 = !DILocation(line: 3121, column: 3, scope: !10118)
!10123 = !DILocation(line: 3122, column: 2, scope: !10107)
!10124 = !DILocation(line: 3124, column: 9, scope: !9874)
!10125 = !DILocation(line: 3124, column: 2, scope: !9874)
!10126 = distinct !DISubprogram(name: "uv_circle_select_exec", scope: !3, file: !3, line: 2935, type: !6778, scopeLine: 2936, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!10127 = !DILocalVariable(name: "C", arg: 1, scope: !10126, file: !3, line: 2935, type: !6780)
!10128 = !DILocation(line: 2935, column: 44, scope: !10126)
!10129 = !DILocalVariable(name: "op", arg: 2, scope: !10126, file: !3, line: 2935, type: !6783)
!10130 = !DILocation(line: 2935, column: 59, scope: !10126)
!10131 = !DILocalVariable(name: "sima", scope: !10126, file: !3, line: 2937, type: !4824)
!10132 = !DILocation(line: 2937, column: 14, scope: !10126)
!10133 = !DILocation(line: 2937, column: 40, scope: !10126)
!10134 = !DILocation(line: 2937, column: 21, scope: !10126)
!10135 = !DILocalVariable(name: "scene", scope: !10126, file: !3, line: 2938, type: !3841)
!10136 = !DILocation(line: 2938, column: 9, scope: !10126)
!10137 = !DILocation(line: 2938, column: 32, scope: !10126)
!10138 = !DILocation(line: 2938, column: 17, scope: !10126)
!10139 = !DILocalVariable(name: "ts", scope: !10126, file: !3, line: 2939, type: !4138)
!10140 = !DILocation(line: 2939, column: 16, scope: !10126)
!10141 = !DILocation(line: 2939, column: 21, scope: !10126)
!10142 = !DILocation(line: 2939, column: 28, scope: !10126)
!10143 = !DILocalVariable(name: "obedit", scope: !10126, file: !3, line: 2940, type: !3588)
!10144 = !DILocation(line: 2940, column: 10, scope: !10126)
!10145 = !DILocation(line: 2940, column: 40, scope: !10126)
!10146 = !DILocation(line: 2940, column: 19, scope: !10126)
!10147 = !DILocalVariable(name: "em", scope: !10126, file: !3, line: 2941, type: !3593)
!10148 = !DILocation(line: 2941, column: 14, scope: !10126)
!10149 = !DILocation(line: 2941, column: 44, scope: !10126)
!10150 = !DILocation(line: 2941, column: 19, scope: !10126)
!10151 = !DILocalVariable(name: "ar", scope: !10126, file: !3, line: 2942, type: !7010)
!10152 = !DILocation(line: 2942, column: 11, scope: !10126)
!10153 = !DILocation(line: 2942, column: 30, scope: !10126)
!10154 = !DILocation(line: 2942, column: 16, scope: !10126)
!10155 = !DILocalVariable(name: "efa", scope: !10126, file: !3, line: 2943, type: !3238)
!10156 = !DILocation(line: 2943, column: 10, scope: !10126)
!10157 = !DILocalVariable(name: "l", scope: !10126, file: !3, line: 2944, type: !3220)
!10158 = !DILocation(line: 2944, column: 10, scope: !10126)
!10159 = !DILocalVariable(name: "iter", scope: !10126, file: !3, line: 2945, type: !3856)
!10160 = !DILocation(line: 2945, column: 9, scope: !10126)
!10161 = !DILocalVariable(name: "liter", scope: !10126, file: !3, line: 2945, type: !3856)
!10162 = !DILocation(line: 2945, column: 15, scope: !10126)
!10163 = !DILocalVariable(name: "luv", scope: !10126, file: !3, line: 2946, type: !3240)
!10164 = !DILocation(line: 2946, column: 11, scope: !10126)
!10165 = !DILocalVariable(name: "x", scope: !10126, file: !3, line: 2947, type: !22)
!10166 = !DILocation(line: 2947, column: 6, scope: !10126)
!10167 = !DILocalVariable(name: "y", scope: !10126, file: !3, line: 2947, type: !22)
!10168 = !DILocation(line: 2947, column: 9, scope: !10126)
!10169 = !DILocalVariable(name: "radius", scope: !10126, file: !3, line: 2947, type: !22)
!10170 = !DILocation(line: 2947, column: 12, scope: !10126)
!10171 = !DILocalVariable(name: "width", scope: !10126, file: !3, line: 2947, type: !22)
!10172 = !DILocation(line: 2947, column: 20, scope: !10126)
!10173 = !DILocalVariable(name: "height", scope: !10126, file: !3, line: 2947, type: !22)
!10174 = !DILocation(line: 2947, column: 27, scope: !10126)
!10175 = !DILocalVariable(name: "zoomx", scope: !10126, file: !3, line: 2948, type: !192)
!10176 = !DILocation(line: 2948, column: 8, scope: !10126)
!10177 = !DILocalVariable(name: "zoomy", scope: !10126, file: !3, line: 2948, type: !192)
!10178 = !DILocation(line: 2948, column: 15, scope: !10126)
!10179 = !DILocalVariable(name: "offset", scope: !10126, file: !3, line: 2948, type: !769)
!10180 = !DILocation(line: 2948, column: 22, scope: !10126)
!10181 = !DILocalVariable(name: "ellipse", scope: !10126, file: !3, line: 2948, type: !769)
!10182 = !DILocation(line: 2948, column: 33, scope: !10126)
!10183 = !DILocalVariable(name: "gesture_mode", scope: !10126, file: !3, line: 2949, type: !22)
!10184 = !DILocation(line: 2949, column: 6, scope: !10126)
!10185 = !DILocation(line: 2949, column: 33, scope: !10126)
!10186 = !DILocation(line: 2949, column: 37, scope: !10126)
!10187 = !DILocation(line: 2949, column: 21, scope: !10126)
!10188 = !DILocalVariable(name: "select", scope: !10126, file: !3, line: 2950, type: !3951)
!10189 = !DILocation(line: 2950, column: 13, scope: !10126)
!10190 = !DILocation(line: 2950, column: 23, scope: !10126)
!10191 = !DILocation(line: 2950, column: 36, scope: !10126)
!10192 = !DILocation(line: 2950, column: 22, scope: !10126)
!10193 = !DILocalVariable(name: "changed", scope: !10126, file: !3, line: 2951, type: !2013)
!10194 = !DILocation(line: 2951, column: 7, scope: !10126)
!10195 = !DILocalVariable(name: "use_face_center", scope: !10126, file: !3, line: 2952, type: !3951)
!10196 = !DILocation(line: 2952, column: 13, scope: !10126)
!10197 = !DILocation(line: 2952, column: 32, scope: !10126)
!10198 = !DILocation(line: 2952, column: 36, scope: !10126)
!10199 = !DILocation(line: 2952, column: 44, scope: !10126)
!10200 = !DILocation(line: 2952, column: 31, scope: !10126)
!10201 = !DILocation(line: 2953, column: 32, scope: !10126)
!10202 = !DILocation(line: 2953, column: 36, scope: !10126)
!10203 = !DILocation(line: 2953, column: 47, scope: !10126)
!10204 = !DILocation(line: 2954, column: 32, scope: !10126)
!10205 = !DILocation(line: 2954, column: 36, scope: !10126)
!10206 = !DILocation(line: 2954, column: 50, scope: !10126)
!10207 = !DILocalVariable(name: "cd_loop_uv_offset", scope: !10126, file: !3, line: 2956, type: !4165)
!10208 = !DILocation(line: 2956, column: 12, scope: !10126)
!10209 = !DILocation(line: 2956, column: 56, scope: !10126)
!10210 = !DILocation(line: 2956, column: 60, scope: !10126)
!10211 = !DILocation(line: 2956, column: 64, scope: !10126)
!10212 = !DILocation(line: 2956, column: 33, scope: !10126)
!10213 = !DILocation(line: 2959, column: 18, scope: !10126)
!10214 = !DILocation(line: 2959, column: 22, scope: !10126)
!10215 = !DILocation(line: 2959, column: 6, scope: !10126)
!10216 = !DILocation(line: 2959, column: 4, scope: !10126)
!10217 = !DILocation(line: 2960, column: 18, scope: !10126)
!10218 = !DILocation(line: 2960, column: 22, scope: !10126)
!10219 = !DILocation(line: 2960, column: 6, scope: !10126)
!10220 = !DILocation(line: 2960, column: 4, scope: !10126)
!10221 = !DILocation(line: 2961, column: 23, scope: !10126)
!10222 = !DILocation(line: 2961, column: 27, scope: !10126)
!10223 = !DILocation(line: 2961, column: 11, scope: !10126)
!10224 = !DILocation(line: 2961, column: 9, scope: !10126)
!10225 = !DILocation(line: 2965, column: 26, scope: !10126)
!10226 = !DILocation(line: 2965, column: 2, scope: !10126)
!10227 = !DILocation(line: 2966, column: 26, scope: !10126)
!10228 = !DILocation(line: 2966, column: 32, scope: !10126)
!10229 = !DILocation(line: 2966, column: 2, scope: !10126)
!10230 = !DILocation(line: 2968, column: 15, scope: !10126)
!10231 = !DILocation(line: 2968, column: 23, scope: !10126)
!10232 = !DILocation(line: 2968, column: 21, scope: !10126)
!10233 = !DILocation(line: 2968, column: 31, scope: !10126)
!10234 = !DILocation(line: 2968, column: 29, scope: !10126)
!10235 = !DILocation(line: 2968, column: 2, scope: !10126)
!10236 = !DILocation(line: 2968, column: 13, scope: !10126)
!10237 = !DILocation(line: 2969, column: 15, scope: !10126)
!10238 = !DILocation(line: 2969, column: 24, scope: !10126)
!10239 = !DILocation(line: 2969, column: 22, scope: !10126)
!10240 = !DILocation(line: 2969, column: 32, scope: !10126)
!10241 = !DILocation(line: 2969, column: 30, scope: !10126)
!10242 = !DILocation(line: 2969, column: 2, scope: !10126)
!10243 = !DILocation(line: 2969, column: 13, scope: !10126)
!10244 = !DILocation(line: 2971, column: 28, scope: !10126)
!10245 = !DILocation(line: 2971, column: 32, scope: !10126)
!10246 = !DILocation(line: 2971, column: 37, scope: !10126)
!10247 = !DILocation(line: 2971, column: 40, scope: !10126)
!10248 = !DILocation(line: 2971, column: 44, scope: !10126)
!10249 = !DILocation(line: 2971, column: 56, scope: !10126)
!10250 = !DILocation(line: 2971, column: 2, scope: !10126)
!10251 = !DILocation(line: 2974, column: 6, scope: !10252)
!10252 = distinct !DILexicalBlock(scope: !10126, file: !3, line: 2974, column: 6)
!10253 = !DILocation(line: 2974, column: 6, scope: !10126)
!10254 = !DILocation(line: 2975, column: 11, scope: !10255)
!10255 = distinct !DILexicalBlock(scope: !10252, file: !3, line: 2974, column: 23)
!10256 = !DILocation(line: 2976, column: 3, scope: !10257)
!10257 = distinct !DILexicalBlock(scope: !10255, file: !3, line: 2976, column: 3)
!10258 = !DILocation(line: 2976, column: 3, scope: !10259)
!10259 = distinct !DILexicalBlock(scope: !10257, file: !3, line: 2976, column: 3)
!10260 = !DILocation(line: 2977, column: 4, scope: !10261)
!10261 = distinct !DILexicalBlock(scope: !10259, file: !3, line: 2976, column: 55)
!10262 = !DILocation(line: 2979, column: 8, scope: !10263)
!10263 = distinct !DILexicalBlock(scope: !10261, file: !3, line: 2979, column: 8)
!10264 = !DILocation(line: 2979, column: 42, scope: !10263)
!10265 = !DILocation(line: 2979, column: 49, scope: !10263)
!10266 = !DILocation(line: 2979, column: 54, scope: !10263)
!10267 = !DILocation(line: 2979, column: 18, scope: !10263)
!10268 = !DILocation(line: 2979, column: 15, scope: !10263)
!10269 = !DILocation(line: 2979, column: 8, scope: !10261)
!10270 = !DILocalVariable(name: "cent", scope: !10271, file: !3, line: 2980, type: !769)
!10271 = distinct !DILexicalBlock(scope: !10263, file: !3, line: 2979, column: 74)
!10272 = !DILocation(line: 2980, column: 11, scope: !10271)
!10273 = !DILocation(line: 2981, column: 20, scope: !10271)
!10274 = !DILocation(line: 2981, column: 25, scope: !10271)
!10275 = !DILocation(line: 2981, column: 31, scope: !10271)
!10276 = !DILocation(line: 2981, column: 5, scope: !10271)
!10277 = !DILocation(line: 2982, column: 26, scope: !10278)
!10278 = distinct !DILexicalBlock(scope: !10271, file: !3, line: 2982, column: 9)
!10279 = !DILocation(line: 2982, column: 32, scope: !10278)
!10280 = !DILocation(line: 2982, column: 40, scope: !10278)
!10281 = !DILocation(line: 2982, column: 9, scope: !10278)
!10282 = !DILocation(line: 2982, column: 9, scope: !10271)
!10283 = !DILocation(line: 2983, column: 6, scope: !10284)
!10284 = distinct !DILexicalBlock(scope: !10278, file: !3, line: 2982, column: 50)
!10285 = !DILocation(line: 2984, column: 14, scope: !10284)
!10286 = !DILocation(line: 2985, column: 5, scope: !10284)
!10287 = !DILocation(line: 2986, column: 4, scope: !10271)
!10288 = !DILocation(line: 2987, column: 3, scope: !10261)
!10289 = distinct !{!10289, !10256, !10290}
!10290 = !DILocation(line: 2987, column: 3, scope: !10257)
!10291 = !DILocation(line: 2990, column: 7, scope: !10292)
!10292 = distinct !DILexicalBlock(scope: !10255, file: !3, line: 2990, column: 7)
!10293 = !DILocation(line: 2990, column: 7, scope: !10255)
!10294 = !DILocation(line: 2991, column: 34, scope: !10295)
!10295 = distinct !DILexicalBlock(scope: !10292, file: !3, line: 2990, column: 16)
!10296 = !DILocation(line: 2991, column: 40, scope: !10295)
!10297 = !DILocation(line: 2991, column: 47, scope: !10295)
!10298 = !DILocation(line: 2991, column: 55, scope: !10295)
!10299 = !DILocation(line: 2991, column: 4, scope: !10295)
!10300 = !DILocation(line: 2992, column: 3, scope: !10295)
!10301 = !DILocation(line: 2993, column: 2, scope: !10255)
!10302 = !DILocation(line: 2995, column: 3, scope: !10303)
!10303 = distinct !DILexicalBlock(scope: !10304, file: !3, line: 2995, column: 3)
!10304 = distinct !DILexicalBlock(scope: !10252, file: !3, line: 2994, column: 7)
!10305 = !DILocation(line: 2995, column: 3, scope: !10306)
!10306 = distinct !DILexicalBlock(scope: !10303, file: !3, line: 2995, column: 3)
!10307 = !DILocation(line: 2996, column: 4, scope: !10308)
!10308 = distinct !DILexicalBlock(scope: !10309, file: !3, line: 2996, column: 4)
!10309 = distinct !DILexicalBlock(scope: !10306, file: !3, line: 2995, column: 55)
!10310 = !DILocation(line: 2996, column: 4, scope: !10311)
!10311 = distinct !DILexicalBlock(scope: !10308, file: !3, line: 2996, column: 4)
!10312 = !DILocation(line: 2997, column: 11, scope: !10313)
!10313 = distinct !DILexicalBlock(scope: !10311, file: !3, line: 2996, column: 52)
!10314 = !DILocation(line: 2997, column: 9, scope: !10313)
!10315 = !DILocation(line: 2998, column: 41, scope: !10313)
!10316 = !DILocation(line: 2998, column: 45, scope: !10313)
!10317 = !DILocation(line: 2998, column: 52, scope: !10313)
!10318 = !DILocation(line: 2998, column: 60, scope: !10313)
!10319 = !DILocation(line: 2998, column: 68, scope: !10313)
!10320 = !DILocation(line: 2998, column: 77, scope: !10313)
!10321 = !DILocation(line: 2998, column: 80, scope: !10313)
!10322 = !DILocation(line: 2998, column: 85, scope: !10313)
!10323 = !DILocation(line: 2998, column: 16, scope: !10313)
!10324 = !DILocation(line: 2998, column: 13, scope: !10313)
!10325 = !DILocation(line: 2999, column: 4, scope: !10313)
!10326 = distinct !{!10326, !10307, !10327}
!10327 = !DILocation(line: 2999, column: 4, scope: !10308)
!10328 = !DILocation(line: 3000, column: 3, scope: !10309)
!10329 = distinct !{!10329, !10302, !10330}
!10330 = !DILocation(line: 3000, column: 3, scope: !10303)
!10331 = !DILocation(line: 3003, column: 6, scope: !10332)
!10332 = distinct !DILexicalBlock(scope: !10126, file: !3, line: 3003, column: 6)
!10333 = !DILocation(line: 3003, column: 6, scope: !10126)
!10334 = !DILocation(line: 3004, column: 24, scope: !10335)
!10335 = distinct !DILexicalBlock(scope: !10332, file: !3, line: 3003, column: 15)
!10336 = !DILocation(line: 3004, column: 28, scope: !10335)
!10337 = !DILocation(line: 3004, column: 32, scope: !10335)
!10338 = !DILocation(line: 3004, column: 3, scope: !10335)
!10339 = !DILocation(line: 3006, column: 25, scope: !10335)
!10340 = !DILocation(line: 3006, column: 49, scope: !10335)
!10341 = !DILocation(line: 3006, column: 57, scope: !10335)
!10342 = !DILocation(line: 3006, column: 3, scope: !10335)
!10343 = !DILocation(line: 3007, column: 2, scope: !10335)
!10344 = !DILocation(line: 3009, column: 2, scope: !10126)
!10345 = distinct !DISubprogram(name: "uv_inside_circle", scope: !3, file: !3, line: 2913, type: !10346, scopeLine: 2914, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!10346 = !DISubroutineType(types: !10347)
!10347 = !{!22, !4976, !4976, !4976}
!10348 = !DILocalVariable(name: "uv", arg: 1, scope: !10345, file: !3, line: 2913, type: !4976)
!10349 = !DILocation(line: 2913, column: 41, scope: !10345)
!10350 = !DILocalVariable(name: "offset", arg: 2, scope: !10345, file: !3, line: 2913, type: !4976)
!10351 = !DILocation(line: 2913, column: 60, scope: !10345)
!10352 = !DILocalVariable(name: "ellipse", arg: 3, scope: !10345, file: !3, line: 2913, type: !4976)
!10353 = !DILocation(line: 2913, column: 83, scope: !10345)
!10354 = !DILocalVariable(name: "x", scope: !10345, file: !3, line: 2916, type: !192)
!10355 = !DILocation(line: 2916, column: 8, scope: !10345)
!10356 = !DILocalVariable(name: "y", scope: !10345, file: !3, line: 2916, type: !192)
!10357 = !DILocation(line: 2916, column: 11, scope: !10345)
!10358 = !DILocation(line: 2917, column: 7, scope: !10345)
!10359 = !DILocation(line: 2917, column: 15, scope: !10345)
!10360 = !DILocation(line: 2917, column: 13, scope: !10345)
!10361 = !DILocation(line: 2917, column: 28, scope: !10345)
!10362 = !DILocation(line: 2917, column: 26, scope: !10345)
!10363 = !DILocation(line: 2917, column: 4, scope: !10345)
!10364 = !DILocation(line: 2918, column: 7, scope: !10345)
!10365 = !DILocation(line: 2918, column: 15, scope: !10345)
!10366 = !DILocation(line: 2918, column: 13, scope: !10345)
!10367 = !DILocation(line: 2918, column: 28, scope: !10345)
!10368 = !DILocation(line: 2918, column: 26, scope: !10345)
!10369 = !DILocation(line: 2918, column: 4, scope: !10345)
!10370 = !DILocation(line: 2919, column: 11, scope: !10345)
!10371 = !DILocation(line: 2919, column: 15, scope: !10345)
!10372 = !DILocation(line: 2919, column: 13, scope: !10345)
!10373 = !DILocation(line: 2919, column: 19, scope: !10345)
!10374 = !DILocation(line: 2919, column: 23, scope: !10345)
!10375 = !DILocation(line: 2919, column: 21, scope: !10345)
!10376 = !DILocation(line: 2919, column: 17, scope: !10345)
!10377 = !DILocation(line: 2919, column: 26, scope: !10345)
!10378 = !DILocation(line: 2919, column: 2, scope: !10345)
!10379 = distinct !DISubprogram(name: "uv_select_inside_ellipse", scope: !3, file: !3, line: 2922, type: !10380, scopeLine: 2925, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!10380 = !DISubroutineType(types: !10381)
!10381 = !{!2013, !3593, !3841, !3951, !4976, !4976, !3220, !3240, !4165}
!10382 = !DILocalVariable(name: "em", arg: 1, scope: !10379, file: !3, line: 2922, type: !3593)
!10383 = !DILocation(line: 2922, column: 50, scope: !10379)
!10384 = !DILocalVariable(name: "scene", arg: 2, scope: !10379, file: !3, line: 2922, type: !3841)
!10385 = !DILocation(line: 2922, column: 61, scope: !10379)
!10386 = !DILocalVariable(name: "select", arg: 3, scope: !10379, file: !3, line: 2922, type: !3951)
!10387 = !DILocation(line: 2922, column: 79, scope: !10379)
!10388 = !DILocalVariable(name: "offset", arg: 4, scope: !10379, file: !3, line: 2923, type: !4976)
!10389 = !DILocation(line: 2923, column: 50, scope: !10379)
!10390 = !DILocalVariable(name: "ellipse", arg: 5, scope: !10379, file: !3, line: 2923, type: !4976)
!10391 = !DILocation(line: 2923, column: 73, scope: !10379)
!10392 = !DILocalVariable(name: "l", arg: 6, scope: !10379, file: !3, line: 2923, type: !3220)
!10393 = !DILocation(line: 2923, column: 93, scope: !10379)
!10394 = !DILocalVariable(name: "luv", arg: 7, scope: !10379, file: !3, line: 2923, type: !3240)
!10395 = !DILocation(line: 2923, column: 105, scope: !10379)
!10396 = !DILocalVariable(name: "cd_loop_uv_offset", arg: 8, scope: !10379, file: !3, line: 2924, type: !4165)
!10397 = !DILocation(line: 2924, column: 48, scope: !10379)
!10398 = !DILocation(line: 2926, column: 23, scope: !10399)
!10399 = distinct !DILexicalBlock(scope: !10379, file: !3, line: 2926, column: 6)
!10400 = !DILocation(line: 2926, column: 28, scope: !10399)
!10401 = !DILocation(line: 2926, column: 32, scope: !10399)
!10402 = !DILocation(line: 2926, column: 40, scope: !10399)
!10403 = !DILocation(line: 2926, column: 6, scope: !10399)
!10404 = !DILocation(line: 2926, column: 6, scope: !10379)
!10405 = !DILocation(line: 2927, column: 24, scope: !10406)
!10406 = distinct !DILexicalBlock(scope: !10399, file: !3, line: 2926, column: 50)
!10407 = !DILocation(line: 2927, column: 28, scope: !10406)
!10408 = !DILocation(line: 2927, column: 35, scope: !10406)
!10409 = !DILocation(line: 2927, column: 38, scope: !10406)
!10410 = !DILocation(line: 2927, column: 53, scope: !10406)
!10411 = !DILocation(line: 2927, column: 3, scope: !10406)
!10412 = !DILocation(line: 2928, column: 3, scope: !10406)
!10413 = !DILocation(line: 2931, column: 3, scope: !10414)
!10414 = distinct !DILexicalBlock(scope: !10399, file: !3, line: 2930, column: 7)
!10415 = !DILocation(line: 2933, column: 1, scope: !10379)
!10416 = distinct !DISubprogram(name: "uv_select_more_exec", scope: !3, file: !3, line: 1382, type: !6778, scopeLine: 1383, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!10417 = !DILocalVariable(name: "C", arg: 1, scope: !10416, file: !3, line: 1382, type: !6780)
!10418 = !DILocation(line: 1382, column: 42, scope: !10416)
!10419 = !DILocalVariable(name: "UNUSED_op", arg: 2, scope: !10416, file: !3, line: 1382, type: !6783)
!10420 = !DILocation(line: 1382, column: 57, scope: !10416)
!10421 = !DILocation(line: 1384, column: 29, scope: !10416)
!10422 = !DILocation(line: 1384, column: 9, scope: !10416)
!10423 = !DILocation(line: 1384, column: 2, scope: !10416)
!10424 = distinct !DISubprogram(name: "uv_select_more_less", scope: !3, file: !3, line: 1276, type: !10425, scopeLine: 1277, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!10425 = !DISubroutineType(types: !10426)
!10426 = !{!22, !6780, !3951}
!10427 = !DILocalVariable(name: "C", arg: 1, scope: !10424, file: !3, line: 1276, type: !6780)
!10428 = !DILocation(line: 1276, column: 42, scope: !10424)
!10429 = !DILocalVariable(name: "select", arg: 2, scope: !10424, file: !3, line: 1276, type: !3951)
!10430 = !DILocation(line: 1276, column: 56, scope: !10424)
!10431 = !DILocalVariable(name: "scene", scope: !10424, file: !3, line: 1278, type: !3841)
!10432 = !DILocation(line: 1278, column: 9, scope: !10424)
!10433 = !DILocation(line: 1278, column: 32, scope: !10424)
!10434 = !DILocation(line: 1278, column: 17, scope: !10424)
!10435 = !DILocalVariable(name: "obedit", scope: !10424, file: !3, line: 1279, type: !3588)
!10436 = !DILocation(line: 1279, column: 10, scope: !10424)
!10437 = !DILocation(line: 1279, column: 40, scope: !10424)
!10438 = !DILocation(line: 1279, column: 19, scope: !10424)
!10439 = !DILocalVariable(name: "ima", scope: !10424, file: !3, line: 1280, type: !3164)
!10440 = !DILocation(line: 1280, column: 9, scope: !10424)
!10441 = !DILocation(line: 1280, column: 35, scope: !10424)
!10442 = !DILocation(line: 1280, column: 15, scope: !10424)
!10443 = !DILocalVariable(name: "sima", scope: !10424, file: !3, line: 1281, type: !4824)
!10444 = !DILocation(line: 1281, column: 14, scope: !10424)
!10445 = !DILocation(line: 1281, column: 40, scope: !10424)
!10446 = !DILocation(line: 1281, column: 21, scope: !10424)
!10447 = !DILocalVariable(name: "em", scope: !10424, file: !3, line: 1282, type: !3593)
!10448 = !DILocation(line: 1282, column: 14, scope: !10424)
!10449 = !DILocation(line: 1282, column: 44, scope: !10424)
!10450 = !DILocation(line: 1282, column: 19, scope: !10424)
!10451 = !DILocalVariable(name: "efa", scope: !10424, file: !3, line: 1284, type: !3238)
!10452 = !DILocation(line: 1284, column: 10, scope: !10424)
!10453 = !DILocalVariable(name: "l", scope: !10424, file: !3, line: 1285, type: !3220)
!10454 = !DILocation(line: 1285, column: 10, scope: !10424)
!10455 = !DILocalVariable(name: "iter", scope: !10424, file: !3, line: 1286, type: !3856)
!10456 = !DILocation(line: 1286, column: 9, scope: !10424)
!10457 = !DILocalVariable(name: "liter", scope: !10424, file: !3, line: 1286, type: !3856)
!10458 = !DILocation(line: 1286, column: 15, scope: !10424)
!10459 = !DILocalVariable(name: "ts", scope: !10424, file: !3, line: 1287, type: !4138)
!10460 = !DILocation(line: 1287, column: 16, scope: !10424)
!10461 = !DILocation(line: 1287, column: 21, scope: !10424)
!10462 = !DILocation(line: 1287, column: 28, scope: !10424)
!10463 = !DILocalVariable(name: "cd_loop_uv_offset", scope: !10424, file: !3, line: 1289, type: !4165)
!10464 = !DILocation(line: 1289, column: 12, scope: !10424)
!10465 = !DILocation(line: 1289, column: 56, scope: !10424)
!10466 = !DILocation(line: 1289, column: 60, scope: !10424)
!10467 = !DILocation(line: 1289, column: 64, scope: !10424)
!10468 = !DILocation(line: 1289, column: 33, scope: !10424)
!10469 = !DILocalVariable(name: "cd_poly_tex_offset", scope: !10424, file: !3, line: 1290, type: !4165)
!10470 = !DILocation(line: 1290, column: 12, scope: !10424)
!10471 = !DILocation(line: 1290, column: 56, scope: !10424)
!10472 = !DILocation(line: 1290, column: 60, scope: !10424)
!10473 = !DILocation(line: 1290, column: 64, scope: !10424)
!10474 = !DILocation(line: 1290, column: 33, scope: !10424)
!10475 = !DILocation(line: 1292, column: 6, scope: !10476)
!10476 = distinct !DILexicalBlock(scope: !10424, file: !3, line: 1292, column: 6)
!10477 = !DILocation(line: 1292, column: 10, scope: !10476)
!10478 = !DILocation(line: 1292, column: 18, scope: !10476)
!10479 = !DILocation(line: 1292, column: 6, scope: !10424)
!10480 = !DILocation(line: 1293, column: 7, scope: !10481)
!10481 = distinct !DILexicalBlock(scope: !10482, file: !3, line: 1293, column: 7)
!10482 = distinct !DILexicalBlock(scope: !10476, file: !3, line: 1292, column: 39)
!10483 = !DILocation(line: 1293, column: 7, scope: !10482)
!10484 = !DILocation(line: 1294, column: 21, scope: !10485)
!10485 = distinct !DILexicalBlock(scope: !10481, file: !3, line: 1293, column: 15)
!10486 = !DILocation(line: 1294, column: 4, scope: !10485)
!10487 = !DILocation(line: 1295, column: 3, scope: !10485)
!10488 = !DILocation(line: 1297, column: 21, scope: !10489)
!10489 = distinct !DILexicalBlock(scope: !10481, file: !3, line: 1296, column: 8)
!10490 = !DILocation(line: 1297, column: 4, scope: !10489)
!10491 = !DILocation(line: 1300, column: 25, scope: !10482)
!10492 = !DILocation(line: 1300, column: 49, scope: !10482)
!10493 = !DILocation(line: 1300, column: 57, scope: !10482)
!10494 = !DILocation(line: 1300, column: 3, scope: !10482)
!10495 = !DILocation(line: 1301, column: 3, scope: !10482)
!10496 = !DILocation(line: 1304, column: 6, scope: !10497)
!10497 = distinct !DILexicalBlock(scope: !10424, file: !3, line: 1304, column: 6)
!10498 = !DILocation(line: 1304, column: 10, scope: !10497)
!10499 = !DILocation(line: 1304, column: 24, scope: !10497)
!10500 = !DILocation(line: 1304, column: 6, scope: !10424)
!10501 = !DILocation(line: 1307, column: 3, scope: !10502)
!10502 = distinct !DILexicalBlock(scope: !10503, file: !3, line: 1307, column: 3)
!10503 = distinct !DILexicalBlock(scope: !10497, file: !3, line: 1304, column: 43)
!10504 = !DILocation(line: 1307, column: 3, scope: !10505)
!10505 = distinct !DILexicalBlock(scope: !10502, file: !3, line: 1307, column: 3)
!10506 = !DILocation(line: 1308, column: 4, scope: !10507)
!10507 = distinct !DILexicalBlock(scope: !10505, file: !3, line: 1307, column: 55)
!10508 = !DILocation(line: 1309, column: 3, scope: !10507)
!10509 = distinct !{!10509, !10501, !10510}
!10510 = !DILocation(line: 1309, column: 3, scope: !10502)
!10511 = !DILocation(line: 1312, column: 3, scope: !10512)
!10512 = distinct !DILexicalBlock(scope: !10503, file: !3, line: 1312, column: 3)
!10513 = !DILocation(line: 1312, column: 3, scope: !10514)
!10514 = distinct !DILexicalBlock(scope: !10512, file: !3, line: 1312, column: 3)
!10515 = !DILocalVariable(name: "tf", scope: !10516, file: !3, line: 1313, type: !3945)
!10516 = distinct !DILexicalBlock(scope: !10514, file: !3, line: 1312, column: 55)
!10517 = !DILocation(line: 1313, column: 14, scope: !10516)
!10518 = !DILocation(line: 1313, column: 19, scope: !10516)
!10519 = !DILocation(line: 1315, column: 33, scope: !10520)
!10520 = distinct !DILexicalBlock(scope: !10516, file: !3, line: 1315, column: 8)
!10521 = !DILocation(line: 1315, column: 40, scope: !10520)
!10522 = !DILocation(line: 1315, column: 45, scope: !10520)
!10523 = !DILocation(line: 1315, column: 50, scope: !10520)
!10524 = !DILocation(line: 1315, column: 8, scope: !10520)
!10525 = !DILocation(line: 1315, column: 8, scope: !10516)
!10526 = !DILocalVariable(name: "sel_state", scope: !10527, file: !3, line: 1320, type: !22)
!10527 = distinct !DILexicalBlock(scope: !10520, file: !3, line: 1315, column: 55)
!10528 = !DILocation(line: 1320, column: 9, scope: !10527)
!10529 = !DILocation(line: 1322, column: 5, scope: !10530)
!10530 = distinct !DILexicalBlock(scope: !10527, file: !3, line: 1322, column: 5)
!10531 = !DILocation(line: 1322, column: 5, scope: !10532)
!10532 = distinct !DILexicalBlock(scope: !10530, file: !3, line: 1322, column: 5)
!10533 = !DILocalVariable(name: "luv", scope: !10534, file: !3, line: 1323, type: !3240)
!10534 = distinct !DILexicalBlock(scope: !10532, file: !3, line: 1322, column: 53)
!10535 = !DILocation(line: 1323, column: 15, scope: !10534)
!10536 = !DILocation(line: 1323, column: 21, scope: !10534)
!10537 = !DILocation(line: 1324, column: 10, scope: !10538)
!10538 = distinct !DILexicalBlock(scope: !10534, file: !3, line: 1324, column: 10)
!10539 = !DILocation(line: 1324, column: 15, scope: !10538)
!10540 = !DILocation(line: 1324, column: 20, scope: !10538)
!10541 = !DILocation(line: 1324, column: 10, scope: !10534)
!10542 = !DILocation(line: 1325, column: 17, scope: !10543)
!10543 = distinct !DILexicalBlock(scope: !10538, file: !3, line: 1324, column: 39)
!10544 = !DILocation(line: 1326, column: 6, scope: !10543)
!10545 = !DILocation(line: 1328, column: 17, scope: !10546)
!10546 = distinct !DILexicalBlock(scope: !10538, file: !3, line: 1327, column: 11)
!10547 = !DILocation(line: 1332, column: 10, scope: !10548)
!10548 = distinct !DILexicalBlock(scope: !10534, file: !3, line: 1332, column: 10)
!10549 = !DILocation(line: 1332, column: 20, scope: !10548)
!10550 = !DILocation(line: 1332, column: 10, scope: !10534)
!10551 = !DILocation(line: 1333, column: 7, scope: !10552)
!10552 = distinct !DILexicalBlock(scope: !10548, file: !3, line: 1332, column: 44)
!10553 = !DILocation(line: 1334, column: 7, scope: !10552)
!10554 = !DILocation(line: 1336, column: 5, scope: !10534)
!10555 = distinct !{!10555, !10529, !10556}
!10556 = !DILocation(line: 1336, column: 5, scope: !10530)
!10557 = !DILocation(line: 1341, column: 4, scope: !10527)
!10558 = !DILocation(line: 1342, column: 3, scope: !10516)
!10559 = distinct !{!10559, !10511, !10560}
!10560 = !DILocation(line: 1342, column: 3, scope: !10512)
!10561 = !DILocation(line: 1345, column: 33, scope: !10503)
!10562 = !DILocation(line: 1345, column: 39, scope: !10503)
!10563 = !DILocation(line: 1345, column: 46, scope: !10503)
!10564 = !DILocation(line: 1345, column: 54, scope: !10503)
!10565 = !DILocation(line: 1345, column: 3, scope: !10503)
!10566 = !DILocation(line: 1346, column: 2, scope: !10503)
!10567 = !DILocation(line: 1350, column: 3, scope: !10568)
!10568 = distinct !DILexicalBlock(scope: !10569, file: !3, line: 1350, column: 3)
!10569 = distinct !DILexicalBlock(scope: !10497, file: !3, line: 1347, column: 7)
!10570 = !DILocation(line: 1350, column: 3, scope: !10571)
!10571 = distinct !DILexicalBlock(scope: !10568, file: !3, line: 1350, column: 3)
!10572 = !DILocation(line: 1351, column: 4, scope: !10573)
!10573 = distinct !DILexicalBlock(scope: !10574, file: !3, line: 1351, column: 4)
!10574 = distinct !DILexicalBlock(scope: !10571, file: !3, line: 1350, column: 55)
!10575 = !DILocation(line: 1351, column: 4, scope: !10576)
!10576 = distinct !DILexicalBlock(scope: !10573, file: !3, line: 1351, column: 4)
!10577 = !DILocation(line: 1352, column: 5, scope: !10578)
!10578 = distinct !DILexicalBlock(scope: !10576, file: !3, line: 1351, column: 52)
!10579 = !DILocation(line: 1353, column: 4, scope: !10578)
!10580 = distinct !{!10580, !10572, !10581}
!10581 = !DILocation(line: 1353, column: 4, scope: !10573)
!10582 = !DILocation(line: 1354, column: 3, scope: !10574)
!10583 = distinct !{!10583, !10567, !10584}
!10584 = !DILocation(line: 1354, column: 3, scope: !10568)
!10585 = !DILocation(line: 1357, column: 3, scope: !10586)
!10586 = distinct !DILexicalBlock(scope: !10569, file: !3, line: 1357, column: 3)
!10587 = !DILocation(line: 1357, column: 3, scope: !10588)
!10588 = distinct !DILexicalBlock(scope: !10586, file: !3, line: 1357, column: 3)
!10589 = !DILocalVariable(name: "tf", scope: !10590, file: !3, line: 1358, type: !3945)
!10590 = distinct !DILexicalBlock(scope: !10588, file: !3, line: 1357, column: 55)
!10591 = !DILocation(line: 1358, column: 14, scope: !10590)
!10592 = !DILocation(line: 1358, column: 19, scope: !10590)
!10593 = !DILocation(line: 1360, column: 33, scope: !10594)
!10594 = distinct !DILexicalBlock(scope: !10590, file: !3, line: 1360, column: 8)
!10595 = !DILocation(line: 1360, column: 40, scope: !10594)
!10596 = !DILocation(line: 1360, column: 45, scope: !10594)
!10597 = !DILocation(line: 1360, column: 50, scope: !10594)
!10598 = !DILocation(line: 1360, column: 8, scope: !10594)
!10599 = !DILocation(line: 1360, column: 8, scope: !10590)
!10600 = !DILocation(line: 1361, column: 5, scope: !10601)
!10601 = distinct !DILexicalBlock(scope: !10602, file: !3, line: 1361, column: 5)
!10602 = distinct !DILexicalBlock(scope: !10594, file: !3, line: 1360, column: 55)
!10603 = !DILocation(line: 1361, column: 5, scope: !10604)
!10604 = distinct !DILexicalBlock(scope: !10601, file: !3, line: 1361, column: 5)
!10605 = !DILocalVariable(name: "luv", scope: !10606, file: !3, line: 1363, type: !3240)
!10606 = distinct !DILexicalBlock(scope: !10604, file: !3, line: 1361, column: 53)
!10607 = !DILocation(line: 1363, column: 15, scope: !10606)
!10608 = !DILocation(line: 1363, column: 21, scope: !10606)
!10609 = !DILocation(line: 1365, column: 12, scope: !10610)
!10610 = distinct !DILexicalBlock(scope: !10606, file: !3, line: 1365, column: 10)
!10611 = !DILocation(line: 1365, column: 17, scope: !10610)
!10612 = !DILocation(line: 1365, column: 22, scope: !10610)
!10613 = !DILocation(line: 1365, column: 41, scope: !10610)
!10614 = !DILocation(line: 1365, column: 50, scope: !10610)
!10615 = !DILocation(line: 1365, column: 47, scope: !10610)
!10616 = !DILocation(line: 1365, column: 10, scope: !10606)
!10617 = !DILocation(line: 1366, column: 7, scope: !10618)
!10618 = distinct !DILexicalBlock(scope: !10610, file: !3, line: 1365, column: 58)
!10619 = !DILocation(line: 1367, column: 7, scope: !10618)
!10620 = !DILocation(line: 1368, column: 6, scope: !10618)
!10621 = !DILocation(line: 1369, column: 5, scope: !10606)
!10622 = distinct !{!10622, !10600, !10623}
!10623 = !DILocation(line: 1369, column: 5, scope: !10601)
!10624 = !DILocation(line: 1370, column: 4, scope: !10602)
!10625 = !DILocation(line: 1371, column: 3, scope: !10590)
!10626 = distinct !{!10626, !10585, !10627}
!10627 = !DILocation(line: 1371, column: 3, scope: !10586)
!10628 = !DILocation(line: 1374, column: 33, scope: !10569)
!10629 = !DILocation(line: 1374, column: 39, scope: !10569)
!10630 = !DILocation(line: 1374, column: 46, scope: !10569)
!10631 = !DILocation(line: 1374, column: 54, scope: !10569)
!10632 = !DILocation(line: 1374, column: 3, scope: !10569)
!10633 = !DILocation(line: 1377, column: 24, scope: !10424)
!10634 = !DILocation(line: 1377, column: 48, scope: !10424)
!10635 = !DILocation(line: 1377, column: 56, scope: !10424)
!10636 = !DILocation(line: 1377, column: 2, scope: !10424)
!10637 = !DILocation(line: 1379, column: 2, scope: !10424)
!10638 = !DILocation(line: 1380, column: 1, scope: !10424)
!10639 = distinct !DISubprogram(name: "uv_select_flush_from_tag_loop", scope: !3, file: !3, line: 2702, type: !9485, scopeLine: 2703, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!10640 = !DILocalVariable(name: "sima", arg: 1, scope: !10639, file: !3, line: 2702, type: !4824)
!10641 = !DILocation(line: 2702, column: 55, scope: !10639)
!10642 = !DILocalVariable(name: "scene", arg: 2, scope: !10639, file: !3, line: 2702, type: !3841)
!10643 = !DILocation(line: 2702, column: 68, scope: !10639)
!10644 = !DILocalVariable(name: "obedit", arg: 3, scope: !10639, file: !3, line: 2702, type: !3588)
!10645 = !DILocation(line: 2702, column: 83, scope: !10639)
!10646 = !DILocalVariable(name: "select", arg: 4, scope: !10639, file: !3, line: 2702, type: !3951)
!10647 = !DILocation(line: 2702, column: 102, scope: !10639)
!10648 = !DILocalVariable(name: "ts", scope: !10639, file: !3, line: 2710, type: !4138)
!10649 = !DILocation(line: 2710, column: 16, scope: !10639)
!10650 = !DILocation(line: 2710, column: 21, scope: !10639)
!10651 = !DILocation(line: 2710, column: 28, scope: !10639)
!10652 = !DILocalVariable(name: "em", scope: !10639, file: !3, line: 2711, type: !3593)
!10653 = !DILocation(line: 2711, column: 14, scope: !10639)
!10654 = !DILocation(line: 2711, column: 44, scope: !10639)
!10655 = !DILocation(line: 2711, column: 19, scope: !10639)
!10656 = !DILocalVariable(name: "efa", scope: !10639, file: !3, line: 2712, type: !3238)
!10657 = !DILocation(line: 2712, column: 10, scope: !10639)
!10658 = !DILocalVariable(name: "l", scope: !10639, file: !3, line: 2713, type: !3220)
!10659 = !DILocation(line: 2713, column: 10, scope: !10639)
!10660 = !DILocalVariable(name: "iter", scope: !10639, file: !3, line: 2714, type: !3856)
!10661 = !DILocation(line: 2714, column: 9, scope: !10639)
!10662 = !DILocalVariable(name: "liter", scope: !10639, file: !3, line: 2714, type: !3856)
!10663 = !DILocation(line: 2714, column: 15, scope: !10639)
!10664 = !DILocalVariable(name: "cd_loop_uv_offset", scope: !10639, file: !3, line: 2717, type: !4165)
!10665 = !DILocation(line: 2717, column: 12, scope: !10639)
!10666 = !DILocation(line: 2717, column: 55, scope: !10639)
!10667 = !DILocation(line: 2717, column: 59, scope: !10639)
!10668 = !DILocation(line: 2717, column: 63, scope: !10639)
!10669 = !DILocation(line: 2717, column: 32, scope: !10639)
!10670 = !DILocation(line: 2720, column: 7, scope: !10671)
!10671 = distinct !DILexicalBlock(scope: !10639, file: !3, line: 2720, column: 6)
!10672 = !DILocation(line: 2720, column: 11, scope: !10671)
!10673 = !DILocation(line: 2720, column: 19, scope: !10671)
!10674 = !DILocation(line: 2720, column: 40, scope: !10671)
!10675 = !DILocation(line: 2720, column: 45, scope: !10671)
!10676 = !DILocation(line: 2720, column: 48, scope: !10671)
!10677 = !DILocation(line: 2720, column: 54, scope: !10671)
!10678 = !DILocation(line: 2720, column: 61, scope: !10671)
!10679 = !DILocation(line: 2720, column: 6, scope: !10639)
!10680 = !DILocalVariable(name: "eve", scope: !10681, file: !3, line: 2723, type: !3185)
!10681 = distinct !DILexicalBlock(scope: !10671, file: !3, line: 2720, column: 82)
!10682 = !DILocation(line: 2723, column: 11, scope: !10681)
!10683 = !DILocation(line: 2725, column: 3, scope: !10684)
!10684 = distinct !DILexicalBlock(scope: !10681, file: !3, line: 2725, column: 3)
!10685 = !DILocation(line: 2725, column: 3, scope: !10686)
!10686 = distinct !DILexicalBlock(scope: !10684, file: !3, line: 2725, column: 3)
!10687 = !DILocation(line: 2726, column: 4, scope: !10688)
!10688 = distinct !DILexicalBlock(scope: !10686, file: !3, line: 2725, column: 55)
!10689 = !DILocation(line: 2727, column: 3, scope: !10688)
!10690 = distinct !{!10690, !10683, !10691}
!10691 = !DILocation(line: 2727, column: 3, scope: !10684)
!10692 = !DILocation(line: 2729, column: 3, scope: !10693)
!10693 = distinct !DILexicalBlock(scope: !10681, file: !3, line: 2729, column: 3)
!10694 = !DILocation(line: 2729, column: 3, scope: !10695)
!10695 = distinct !DILexicalBlock(scope: !10693, file: !3, line: 2729, column: 3)
!10696 = !DILocation(line: 2730, column: 4, scope: !10697)
!10697 = distinct !DILexicalBlock(scope: !10698, file: !3, line: 2730, column: 4)
!10698 = distinct !DILexicalBlock(scope: !10695, file: !3, line: 2729, column: 55)
!10699 = !DILocation(line: 2730, column: 4, scope: !10700)
!10700 = distinct !DILexicalBlock(scope: !10697, file: !3, line: 2730, column: 4)
!10701 = !DILocation(line: 2731, column: 9, scope: !10702)
!10702 = distinct !DILexicalBlock(scope: !10703, file: !3, line: 2731, column: 9)
!10703 = distinct !DILexicalBlock(scope: !10700, file: !3, line: 2730, column: 52)
!10704 = !DILocation(line: 2731, column: 9, scope: !10703)
!10705 = !DILocation(line: 2732, column: 6, scope: !10706)
!10706 = distinct !DILexicalBlock(scope: !10702, file: !3, line: 2731, column: 44)
!10707 = !DILocation(line: 2733, column: 5, scope: !10706)
!10708 = !DILocation(line: 2734, column: 4, scope: !10703)
!10709 = distinct !{!10709, !10696, !10710}
!10710 = !DILocation(line: 2734, column: 4, scope: !10697)
!10711 = !DILocation(line: 2735, column: 3, scope: !10698)
!10712 = distinct !{!10712, !10692, !10713}
!10713 = !DILocation(line: 2735, column: 3, scope: !10693)
!10714 = !DILocation(line: 2738, column: 3, scope: !10715)
!10715 = distinct !DILexicalBlock(scope: !10681, file: !3, line: 2738, column: 3)
!10716 = !DILocation(line: 2738, column: 3, scope: !10717)
!10717 = distinct !DILexicalBlock(scope: !10715, file: !3, line: 2738, column: 3)
!10718 = !DILocation(line: 2741, column: 4, scope: !10719)
!10719 = distinct !DILexicalBlock(scope: !10720, file: !3, line: 2741, column: 4)
!10720 = distinct !DILexicalBlock(scope: !10717, file: !3, line: 2738, column: 55)
!10721 = !DILocation(line: 2741, column: 4, scope: !10722)
!10722 = distinct !DILexicalBlock(scope: !10719, file: !3, line: 2741, column: 4)
!10723 = !DILocation(line: 2742, column: 9, scope: !10724)
!10724 = distinct !DILexicalBlock(scope: !10725, file: !3, line: 2742, column: 9)
!10725 = distinct !DILexicalBlock(scope: !10722, file: !3, line: 2741, column: 52)
!10726 = !DILocation(line: 2742, column: 9, scope: !10725)
!10727 = !DILocation(line: 2743, column: 27, scope: !10728)
!10728 = distinct !DILexicalBlock(scope: !10724, file: !3, line: 2742, column: 47)
!10729 = !DILocation(line: 2743, column: 31, scope: !10728)
!10730 = !DILocation(line: 2743, column: 38, scope: !10728)
!10731 = !DILocation(line: 2743, column: 41, scope: !10728)
!10732 = !DILocation(line: 2743, column: 56, scope: !10728)
!10733 = !DILocation(line: 2743, column: 6, scope: !10728)
!10734 = !DILocation(line: 2744, column: 5, scope: !10728)
!10735 = !DILocation(line: 2745, column: 4, scope: !10725)
!10736 = distinct !{!10736, !10718, !10737}
!10737 = !DILocation(line: 2745, column: 4, scope: !10719)
!10738 = !DILocation(line: 2746, column: 3, scope: !10720)
!10739 = distinct !{!10739, !10714, !10740}
!10740 = !DILocation(line: 2746, column: 3, scope: !10715)
!10741 = !DILocation(line: 2747, column: 2, scope: !10681)
!10742 = !DILocation(line: 2748, column: 12, scope: !10743)
!10743 = distinct !DILexicalBlock(scope: !10671, file: !3, line: 2748, column: 11)
!10744 = !DILocation(line: 2748, column: 16, scope: !10743)
!10745 = !DILocation(line: 2748, column: 24, scope: !10743)
!10746 = !DILocation(line: 2748, column: 45, scope: !10743)
!10747 = !DILocation(line: 2748, column: 50, scope: !10743)
!10748 = !DILocation(line: 2748, column: 53, scope: !10743)
!10749 = !DILocation(line: 2748, column: 59, scope: !10743)
!10750 = !DILocation(line: 2748, column: 66, scope: !10743)
!10751 = !DILocation(line: 2748, column: 11, scope: !10671)
!10752 = !DILocalVariable(name: "vmap", scope: !10753, file: !3, line: 2749, type: !9601)
!10753 = distinct !DILexicalBlock(scope: !10743, file: !3, line: 2748, column: 84)
!10754 = !DILocation(line: 2749, column: 21, scope: !10753)
!10755 = !DILocalVariable(name: "limit", scope: !10753, file: !3, line: 2750, type: !769)
!10756 = !DILocation(line: 2750, column: 9, scope: !10753)
!10757 = !DILocalVariable(name: "efa_index", scope: !10753, file: !3, line: 2751, type: !224)
!10758 = !DILocation(line: 2751, column: 16, scope: !10753)
!10759 = !DILocation(line: 2753, column: 25, scope: !10753)
!10760 = !DILocation(line: 2753, column: 31, scope: !10753)
!10761 = !DILocation(line: 2753, column: 3, scope: !10753)
!10762 = !DILocation(line: 2755, column: 29, scope: !10753)
!10763 = !DILocation(line: 2755, column: 33, scope: !10753)
!10764 = !DILocation(line: 2755, column: 3, scope: !10753)
!10765 = !DILocation(line: 2756, column: 32, scope: !10753)
!10766 = !DILocation(line: 2756, column: 36, scope: !10753)
!10767 = !DILocation(line: 2756, column: 43, scope: !10753)
!10768 = !DILocation(line: 2756, column: 10, scope: !10753)
!10769 = !DILocation(line: 2756, column: 8, scope: !10753)
!10770 = !DILocation(line: 2757, column: 7, scope: !10771)
!10771 = distinct !DILexicalBlock(scope: !10753, file: !3, line: 2757, column: 7)
!10772 = !DILocation(line: 2757, column: 12, scope: !10771)
!10773 = !DILocation(line: 2757, column: 7, scope: !10753)
!10774 = !DILocation(line: 2758, column: 4, scope: !10775)
!10775 = distinct !DILexicalBlock(scope: !10771, file: !3, line: 2757, column: 21)
!10776 = !DILocation(line: 2761, column: 3, scope: !10777)
!10777 = distinct !DILexicalBlock(scope: !10753, file: !3, line: 2761, column: 3)
!10778 = !DILocation(line: 2761, column: 3, scope: !10779)
!10779 = distinct !DILexicalBlock(scope: !10777, file: !3, line: 2761, column: 3)
!10780 = !DILocation(line: 2764, column: 4, scope: !10781)
!10781 = distinct !DILexicalBlock(scope: !10782, file: !3, line: 2764, column: 4)
!10782 = distinct !DILexicalBlock(scope: !10779, file: !3, line: 2761, column: 72)
!10783 = !DILocation(line: 2764, column: 4, scope: !10784)
!10784 = distinct !DILexicalBlock(scope: !10781, file: !3, line: 2764, column: 4)
!10785 = !DILocation(line: 2765, column: 9, scope: !10786)
!10786 = distinct !DILexicalBlock(scope: !10787, file: !3, line: 2765, column: 9)
!10787 = distinct !DILexicalBlock(scope: !10784, file: !3, line: 2764, column: 52)
!10788 = !DILocation(line: 2765, column: 9, scope: !10787)
!10789 = !DILocation(line: 2766, column: 51, scope: !10790)
!10790 = distinct !DILexicalBlock(scope: !10786, file: !3, line: 2765, column: 44)
!10791 = !DILocation(line: 2766, column: 58, scope: !10790)
!10792 = !DILocation(line: 2766, column: 62, scope: !10790)
!10793 = !DILocation(line: 2766, column: 68, scope: !10790)
!10794 = !DILocation(line: 2766, column: 79, scope: !10790)
!10795 = !DILocation(line: 2767, column: 51, scope: !10790)
!10796 = !DILocation(line: 2767, column: 59, scope: !10790)
!10797 = !DILocation(line: 2766, column: 6, scope: !10790)
!10798 = !DILocation(line: 2768, column: 5, scope: !10790)
!10799 = !DILocation(line: 2769, column: 4, scope: !10787)
!10800 = distinct !{!10800, !10780, !10801}
!10801 = !DILocation(line: 2769, column: 4, scope: !10781)
!10802 = !DILocation(line: 2770, column: 3, scope: !10782)
!10803 = distinct !{!10803, !10776, !10804}
!10804 = !DILocation(line: 2770, column: 3, scope: !10777)
!10805 = !DILocation(line: 2771, column: 23, scope: !10753)
!10806 = !DILocation(line: 2771, column: 3, scope: !10753)
!10807 = !DILocation(line: 2773, column: 2, scope: !10753)
!10808 = !DILocation(line: 2775, column: 3, scope: !10809)
!10809 = distinct !DILexicalBlock(scope: !10810, file: !3, line: 2775, column: 3)
!10810 = distinct !DILexicalBlock(scope: !10743, file: !3, line: 2774, column: 7)
!10811 = !DILocation(line: 2775, column: 3, scope: !10812)
!10812 = distinct !DILexicalBlock(scope: !10809, file: !3, line: 2775, column: 3)
!10813 = !DILocation(line: 2776, column: 4, scope: !10814)
!10814 = distinct !DILexicalBlock(scope: !10815, file: !3, line: 2776, column: 4)
!10815 = distinct !DILexicalBlock(scope: !10812, file: !3, line: 2775, column: 55)
!10816 = !DILocation(line: 2776, column: 4, scope: !10817)
!10817 = distinct !DILexicalBlock(scope: !10814, file: !3, line: 2776, column: 4)
!10818 = !DILocation(line: 2777, column: 9, scope: !10819)
!10819 = distinct !DILexicalBlock(scope: !10820, file: !3, line: 2777, column: 9)
!10820 = distinct !DILexicalBlock(scope: !10817, file: !3, line: 2776, column: 52)
!10821 = !DILocation(line: 2777, column: 9, scope: !10820)
!10822 = !DILocation(line: 2778, column: 27, scope: !10823)
!10823 = distinct !DILexicalBlock(scope: !10819, file: !3, line: 2777, column: 44)
!10824 = !DILocation(line: 2778, column: 31, scope: !10823)
!10825 = !DILocation(line: 2778, column: 38, scope: !10823)
!10826 = !DILocation(line: 2778, column: 41, scope: !10823)
!10827 = !DILocation(line: 2778, column: 56, scope: !10823)
!10828 = !DILocation(line: 2778, column: 6, scope: !10823)
!10829 = !DILocation(line: 2779, column: 5, scope: !10823)
!10830 = !DILocation(line: 2780, column: 4, scope: !10820)
!10831 = distinct !{!10831, !10813, !10832}
!10832 = !DILocation(line: 2780, column: 4, scope: !10814)
!10833 = !DILocation(line: 2781, column: 3, scope: !10815)
!10834 = distinct !{!10834, !10808, !10835}
!10835 = !DILocation(line: 2781, column: 3, scope: !10809)
!10836 = !DILocation(line: 2783, column: 1, scope: !10639)
!10837 = distinct !DISubprogram(name: "uv_select_less_exec", scope: !3, file: !3, line: 1400, type: !6778, scopeLine: 1401, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!10838 = !DILocalVariable(name: "C", arg: 1, scope: !10837, file: !3, line: 1400, type: !6780)
!10839 = !DILocation(line: 1400, column: 42, scope: !10837)
!10840 = !DILocalVariable(name: "UNUSED_op", arg: 2, scope: !10837, file: !3, line: 1400, type: !6783)
!10841 = !DILocation(line: 1400, column: 57, scope: !10837)
!10842 = !DILocation(line: 1402, column: 29, scope: !10837)
!10843 = !DILocation(line: 1402, column: 9, scope: !10837)
!10844 = !DILocation(line: 1402, column: 2, scope: !10837)
!10845 = distinct !DISubprogram(name: "uv_snap_cursor_exec", scope: !3, file: !3, line: 3191, type: !6778, scopeLine: 3192, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!10846 = !DILocalVariable(name: "C", arg: 1, scope: !10845, file: !3, line: 3191, type: !6780)
!10847 = !DILocation(line: 3191, column: 42, scope: !10845)
!10848 = !DILocalVariable(name: "op", arg: 2, scope: !10845, file: !3, line: 3191, type: !6783)
!10849 = !DILocation(line: 3191, column: 57, scope: !10845)
!10850 = !DILocalVariable(name: "sima", scope: !10845, file: !3, line: 3193, type: !4824)
!10851 = !DILocation(line: 3193, column: 14, scope: !10845)
!10852 = !DILocation(line: 3193, column: 40, scope: !10845)
!10853 = !DILocation(line: 3193, column: 21, scope: !10845)
!10854 = !DILocalVariable(name: "scene", scope: !10845, file: !3, line: 3194, type: !3841)
!10855 = !DILocation(line: 3194, column: 9, scope: !10845)
!10856 = !DILocation(line: 3194, column: 32, scope: !10845)
!10857 = !DILocation(line: 3194, column: 17, scope: !10845)
!10858 = !DILocalVariable(name: "obedit", scope: !10845, file: !3, line: 3195, type: !3588)
!10859 = !DILocation(line: 3195, column: 10, scope: !10845)
!10860 = !DILocation(line: 3195, column: 40, scope: !10845)
!10861 = !DILocation(line: 3195, column: 19, scope: !10845)
!10862 = !DILocalVariable(name: "ima", scope: !10845, file: !3, line: 3196, type: !3164)
!10863 = !DILocation(line: 3196, column: 9, scope: !10845)
!10864 = !DILocation(line: 3196, column: 35, scope: !10845)
!10865 = !DILocation(line: 3196, column: 15, scope: !10845)
!10866 = !DILocalVariable(name: "changed", scope: !10845, file: !3, line: 3197, type: !2013)
!10867 = !DILocation(line: 3197, column: 7, scope: !10845)
!10868 = !DILocation(line: 3199, column: 23, scope: !10845)
!10869 = !DILocation(line: 3199, column: 27, scope: !10845)
!10870 = !DILocation(line: 3199, column: 10, scope: !10845)
!10871 = !DILocation(line: 3199, column: 2, scope: !10845)
!10872 = !DILocation(line: 3201, column: 29, scope: !10873)
!10873 = distinct !DILexicalBlock(scope: !10845, file: !3, line: 3199, column: 43)
!10874 = !DILocation(line: 3201, column: 4, scope: !10873)
!10875 = !DILocation(line: 3202, column: 12, scope: !10873)
!10876 = !DILocation(line: 3203, column: 4, scope: !10873)
!10877 = !DILocation(line: 3205, column: 42, scope: !10873)
!10878 = !DILocation(line: 3205, column: 49, scope: !10873)
!10879 = !DILocation(line: 3205, column: 54, scope: !10873)
!10880 = !DILocation(line: 3205, column: 62, scope: !10873)
!10881 = !DILocation(line: 3205, column: 14, scope: !10873)
!10882 = !DILocation(line: 3205, column: 12, scope: !10873)
!10883 = !DILocation(line: 3206, column: 4, scope: !10873)
!10884 = !DILocation(line: 3209, column: 7, scope: !10885)
!10885 = distinct !DILexicalBlock(scope: !10845, file: !3, line: 3209, column: 6)
!10886 = !DILocation(line: 3209, column: 6, scope: !10845)
!10887 = !DILocation(line: 3210, column: 3, scope: !10885)
!10888 = !DILocation(line: 3212, column: 24, scope: !10845)
!10889 = !DILocation(line: 3212, column: 54, scope: !10845)
!10890 = !DILocation(line: 3212, column: 2, scope: !10845)
!10891 = !DILocation(line: 3214, column: 2, scope: !10845)
!10892 = !DILocation(line: 3215, column: 1, scope: !10845)
!10893 = distinct !DISubprogram(name: "uv_snap_cursor_to_pixels", scope: !3, file: !3, line: 3178, type: !10894, scopeLine: 3179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!10894 = !DISubroutineType(types: !10895)
!10895 = !{null, !4824}
!10896 = !DILocalVariable(name: "sima", arg: 1, scope: !10893, file: !3, line: 3178, type: !4824)
!10897 = !DILocation(line: 3178, column: 50, scope: !10893)
!10898 = !DILocalVariable(name: "width", scope: !10893, file: !3, line: 3180, type: !22)
!10899 = !DILocation(line: 3180, column: 6, scope: !10893)
!10900 = !DILocalVariable(name: "height", scope: !10893, file: !3, line: 3180, type: !22)
!10901 = !DILocation(line: 3180, column: 17, scope: !10893)
!10902 = !DILocation(line: 3182, column: 26, scope: !10893)
!10903 = !DILocation(line: 3182, column: 2, scope: !10893)
!10904 = !DILocation(line: 3183, column: 19, scope: !10893)
!10905 = !DILocation(line: 3183, column: 25, scope: !10893)
!10906 = !DILocation(line: 3183, column: 33, scope: !10893)
!10907 = !DILocation(line: 3183, column: 40, scope: !10893)
!10908 = !DILocation(line: 3183, column: 2, scope: !10893)
!10909 = !DILocation(line: 3184, column: 1, scope: !10893)
!10910 = distinct !DISubprogram(name: "uv_snap_cursor_to_selection", scope: !3, file: !3, line: 3186, type: !10911, scopeLine: 3187, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!10911 = !DISubroutineType(types: !10912)
!10912 = !{!2013, !3841, !3164, !3588, !4824}
!10913 = !DILocalVariable(name: "scene", arg: 1, scope: !10910, file: !3, line: 3186, type: !3841)
!10914 = !DILocation(line: 3186, column: 48, scope: !10910)
!10915 = !DILocalVariable(name: "ima", arg: 2, scope: !10910, file: !3, line: 3186, type: !3164)
!10916 = !DILocation(line: 3186, column: 62, scope: !10910)
!10917 = !DILocalVariable(name: "obedit", arg: 3, scope: !10910, file: !3, line: 3186, type: !3588)
!10918 = !DILocation(line: 3186, column: 75, scope: !10910)
!10919 = !DILocalVariable(name: "sima", arg: 4, scope: !10910, file: !3, line: 3186, type: !4824)
!10920 = !DILocation(line: 3186, column: 95, scope: !10910)
!10921 = !DILocation(line: 3188, column: 23, scope: !10910)
!10922 = !DILocation(line: 3188, column: 30, scope: !10910)
!10923 = !DILocation(line: 3188, column: 35, scope: !10910)
!10924 = !DILocation(line: 3188, column: 43, scope: !10910)
!10925 = !DILocation(line: 3188, column: 49, scope: !10910)
!10926 = !DILocation(line: 3188, column: 57, scope: !10910)
!10927 = !DILocation(line: 3188, column: 63, scope: !10910)
!10928 = !DILocation(line: 3188, column: 9, scope: !10910)
!10929 = !DILocation(line: 3188, column: 2, scope: !10910)
!10930 = distinct !DISubprogram(name: "uv_snap_to_pixel", scope: !3, file: !3, line: 3172, type: !10931, scopeLine: 3173, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!10931 = !DISubroutineType(types: !10932)
!10932 = !{null, !630, !192, !192}
!10933 = !DILocalVariable(name: "uvco", arg: 1, scope: !10930, file: !3, line: 3172, type: !630)
!10934 = !DILocation(line: 3172, column: 36, scope: !10930)
!10935 = !DILocalVariable(name: "w", arg: 2, scope: !10930, file: !3, line: 3172, type: !192)
!10936 = !DILocation(line: 3172, column: 51, scope: !10930)
!10937 = !DILocalVariable(name: "h", arg: 3, scope: !10930, file: !3, line: 3172, type: !192)
!10938 = !DILocation(line: 3172, column: 60, scope: !10930)
!10939 = !DILocation(line: 3174, column: 28, scope: !10930)
!10940 = !DILocation(line: 3174, column: 38, scope: !10930)
!10941 = !DILocation(line: 3174, column: 36, scope: !10930)
!10942 = !DILocation(line: 3174, column: 41, scope: !10930)
!10943 = !DILocation(line: 3174, column: 21, scope: !10930)
!10944 = !DILocation(line: 3174, column: 13, scope: !10930)
!10945 = !DILocation(line: 3174, column: 53, scope: !10930)
!10946 = !DILocation(line: 3174, column: 51, scope: !10930)
!10947 = !DILocation(line: 3174, column: 2, scope: !10930)
!10948 = !DILocation(line: 3174, column: 10, scope: !10930)
!10949 = !DILocation(line: 3175, column: 28, scope: !10930)
!10950 = !DILocation(line: 3175, column: 38, scope: !10930)
!10951 = !DILocation(line: 3175, column: 36, scope: !10930)
!10952 = !DILocation(line: 3175, column: 41, scope: !10930)
!10953 = !DILocation(line: 3175, column: 21, scope: !10930)
!10954 = !DILocation(line: 3175, column: 13, scope: !10930)
!10955 = !DILocation(line: 3175, column: 53, scope: !10930)
!10956 = !DILocation(line: 3175, column: 51, scope: !10930)
!10957 = !DILocation(line: 3175, column: 2, scope: !10930)
!10958 = !DILocation(line: 3175, column: 10, scope: !10930)
!10959 = !DILocation(line: 3176, column: 1, scope: !10930)
!10960 = distinct !DISubprogram(name: "uvedit_center", scope: !3, file: !3, line: 704, type: !10961, scopeLine: 705, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!10961 = !DISubroutineType(types: !10962)
!10962 = !{!2013, !3841, !3164, !3588, !630, !14}
!10963 = !DILocalVariable(name: "scene", arg: 1, scope: !10960, file: !3, line: 704, type: !3841)
!10964 = !DILocation(line: 704, column: 34, scope: !10960)
!10965 = !DILocalVariable(name: "ima", arg: 2, scope: !10960, file: !3, line: 704, type: !3164)
!10966 = !DILocation(line: 704, column: 48, scope: !10960)
!10967 = !DILocalVariable(name: "obedit", arg: 3, scope: !10960, file: !3, line: 704, type: !3588)
!10968 = !DILocation(line: 704, column: 61, scope: !10960)
!10969 = !DILocalVariable(name: "cent", arg: 4, scope: !10960, file: !3, line: 704, type: !630)
!10970 = !DILocation(line: 704, column: 75, scope: !10960)
!10971 = !DILocalVariable(name: "mode", arg: 5, scope: !10960, file: !3, line: 704, type: !14)
!10972 = !DILocation(line: 704, column: 89, scope: !10960)
!10973 = !DILocalVariable(name: "changed", scope: !10960, file: !3, line: 706, type: !2013)
!10974 = !DILocation(line: 706, column: 7, scope: !10960)
!10975 = !DILocation(line: 708, column: 6, scope: !10976)
!10976 = distinct !DILexicalBlock(scope: !10960, file: !3, line: 708, column: 6)
!10977 = !DILocation(line: 708, column: 11, scope: !10976)
!10978 = !DILocation(line: 708, column: 6, scope: !10960)
!10979 = !DILocalVariable(name: "min", scope: !10980, file: !3, line: 709, type: !769)
!10980 = distinct !DILexicalBlock(scope: !10976, file: !3, line: 708, column: 26)
!10981 = !DILocation(line: 709, column: 9, scope: !10980)
!10982 = !DILocalVariable(name: "max", scope: !10980, file: !3, line: 709, type: !769)
!10983 = !DILocation(line: 709, column: 17, scope: !10980)
!10984 = !DILocation(line: 710, column: 24, scope: !10985)
!10985 = distinct !DILexicalBlock(scope: !10980, file: !3, line: 710, column: 7)
!10986 = !DILocation(line: 710, column: 31, scope: !10985)
!10987 = !DILocation(line: 710, column: 36, scope: !10985)
!10988 = !DILocation(line: 710, column: 44, scope: !10985)
!10989 = !DILocation(line: 710, column: 49, scope: !10985)
!10990 = !DILocation(line: 710, column: 7, scope: !10985)
!10991 = !DILocation(line: 710, column: 7, scope: !10980)
!10992 = !DILocation(line: 711, column: 16, scope: !10993)
!10993 = distinct !DILexicalBlock(scope: !10985, file: !3, line: 710, column: 55)
!10994 = !DILocation(line: 711, column: 22, scope: !10993)
!10995 = !DILocation(line: 711, column: 27, scope: !10993)
!10996 = !DILocation(line: 711, column: 4, scope: !10993)
!10997 = !DILocation(line: 712, column: 12, scope: !10993)
!10998 = !DILocation(line: 713, column: 3, scope: !10993)
!10999 = !DILocation(line: 714, column: 2, scope: !10980)
!11000 = !DILocation(line: 716, column: 24, scope: !11001)
!11001 = distinct !DILexicalBlock(scope: !11002, file: !3, line: 716, column: 7)
!11002 = distinct !DILexicalBlock(scope: !10976, file: !3, line: 715, column: 7)
!11003 = !DILocation(line: 716, column: 31, scope: !11001)
!11004 = !DILocation(line: 716, column: 36, scope: !11001)
!11005 = !DILocation(line: 716, column: 44, scope: !11001)
!11006 = !DILocation(line: 716, column: 7, scope: !11001)
!11007 = !DILocation(line: 716, column: 7, scope: !11002)
!11008 = !DILocation(line: 717, column: 12, scope: !11009)
!11009 = distinct !DILexicalBlock(scope: !11001, file: !3, line: 716, column: 51)
!11010 = !DILocation(line: 718, column: 3, scope: !11009)
!11011 = !DILocation(line: 721, column: 9, scope: !10960)
!11012 = !DILocation(line: 721, column: 2, scope: !10960)
!11013 = distinct !DISubprogram(name: "ED_uvedit_median", scope: !3, file: !3, line: 671, type: !11014, scopeLine: 672, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!11014 = !DISubroutineType(types: !11015)
!11015 = !{!2013, !3841, !3164, !3588, !630}
!11016 = !DILocalVariable(name: "scene", arg: 1, scope: !11013, file: !3, line: 671, type: !3841)
!11017 = !DILocation(line: 671, column: 37, scope: !11013)
!11018 = !DILocalVariable(name: "ima", arg: 2, scope: !11013, file: !3, line: 671, type: !3164)
!11019 = !DILocation(line: 671, column: 51, scope: !11013)
!11020 = !DILocalVariable(name: "obedit", arg: 3, scope: !11013, file: !3, line: 671, type: !3588)
!11021 = !DILocation(line: 671, column: 64, scope: !11013)
!11022 = !DILocalVariable(name: "co", arg: 4, scope: !11013, file: !3, line: 671, type: !630)
!11023 = !DILocation(line: 671, column: 78, scope: !11013)
!11024 = !DILocalVariable(name: "em", scope: !11013, file: !3, line: 673, type: !3593)
!11025 = !DILocation(line: 673, column: 14, scope: !11013)
!11026 = !DILocation(line: 673, column: 44, scope: !11013)
!11027 = !DILocation(line: 673, column: 19, scope: !11013)
!11028 = !DILocalVariable(name: "efa", scope: !11013, file: !3, line: 674, type: !3238)
!11029 = !DILocation(line: 674, column: 10, scope: !11013)
!11030 = !DILocalVariable(name: "l", scope: !11013, file: !3, line: 675, type: !3220)
!11031 = !DILocation(line: 675, column: 10, scope: !11013)
!11032 = !DILocalVariable(name: "iter", scope: !11013, file: !3, line: 676, type: !3856)
!11033 = !DILocation(line: 676, column: 9, scope: !11013)
!11034 = !DILocalVariable(name: "liter", scope: !11013, file: !3, line: 676, type: !3856)
!11035 = !DILocation(line: 676, column: 15, scope: !11013)
!11036 = !DILocalVariable(name: "tf", scope: !11013, file: !3, line: 677, type: !3945)
!11037 = !DILocation(line: 677, column: 12, scope: !11013)
!11038 = !DILocalVariable(name: "luv", scope: !11013, file: !3, line: 678, type: !3240)
!11039 = !DILocation(line: 678, column: 11, scope: !11013)
!11040 = !DILocalVariable(name: "sel", scope: !11013, file: !3, line: 679, type: !224)
!11041 = !DILocation(line: 679, column: 15, scope: !11013)
!11042 = !DILocalVariable(name: "cd_loop_uv_offset", scope: !11013, file: !3, line: 681, type: !4165)
!11043 = !DILocation(line: 681, column: 12, scope: !11013)
!11044 = !DILocation(line: 681, column: 56, scope: !11013)
!11045 = !DILocation(line: 681, column: 60, scope: !11013)
!11046 = !DILocation(line: 681, column: 64, scope: !11013)
!11047 = !DILocation(line: 681, column: 33, scope: !11013)
!11048 = !DILocalVariable(name: "cd_poly_tex_offset", scope: !11013, file: !3, line: 682, type: !4165)
!11049 = !DILocation(line: 682, column: 12, scope: !11013)
!11050 = !DILocation(line: 682, column: 56, scope: !11013)
!11051 = !DILocation(line: 682, column: 60, scope: !11013)
!11052 = !DILocation(line: 682, column: 64, scope: !11013)
!11053 = !DILocation(line: 682, column: 33, scope: !11013)
!11054 = !DILocation(line: 684, column: 10, scope: !11013)
!11055 = !DILocation(line: 684, column: 2, scope: !11013)
!11056 = !DILocation(line: 685, column: 2, scope: !11057)
!11057 = distinct !DILexicalBlock(scope: !11013, file: !3, line: 685, column: 2)
!11058 = !DILocation(line: 685, column: 2, scope: !11059)
!11059 = distinct !DILexicalBlock(scope: !11057, file: !3, line: 685, column: 2)
!11060 = !DILocation(line: 686, column: 8, scope: !11061)
!11061 = distinct !DILexicalBlock(scope: !11059, file: !3, line: 685, column: 54)
!11062 = !DILocation(line: 686, column: 6, scope: !11061)
!11063 = !DILocation(line: 687, column: 33, scope: !11064)
!11064 = distinct !DILexicalBlock(scope: !11061, file: !3, line: 687, column: 7)
!11065 = !DILocation(line: 687, column: 40, scope: !11064)
!11066 = !DILocation(line: 687, column: 45, scope: !11064)
!11067 = !DILocation(line: 687, column: 50, scope: !11064)
!11068 = !DILocation(line: 687, column: 8, scope: !11064)
!11069 = !DILocation(line: 687, column: 7, scope: !11061)
!11070 = !DILocation(line: 688, column: 4, scope: !11064)
!11071 = !DILocation(line: 690, column: 3, scope: !11072)
!11072 = distinct !DILexicalBlock(scope: !11061, file: !3, line: 690, column: 3)
!11073 = !DILocation(line: 690, column: 3, scope: !11074)
!11074 = distinct !DILexicalBlock(scope: !11072, file: !3, line: 690, column: 3)
!11075 = !DILocation(line: 691, column: 10, scope: !11076)
!11076 = distinct !DILexicalBlock(scope: !11074, file: !3, line: 690, column: 51)
!11077 = !DILocation(line: 691, column: 8, scope: !11076)
!11078 = !DILocation(line: 692, column: 30, scope: !11079)
!11079 = distinct !DILexicalBlock(scope: !11076, file: !3, line: 692, column: 8)
!11080 = !DILocation(line: 692, column: 37, scope: !11079)
!11081 = !DILocation(line: 692, column: 40, scope: !11079)
!11082 = !DILocation(line: 692, column: 8, scope: !11079)
!11083 = !DILocation(line: 692, column: 8, scope: !11076)
!11084 = !DILocation(line: 693, column: 15, scope: !11085)
!11085 = distinct !DILexicalBlock(scope: !11079, file: !3, line: 692, column: 60)
!11086 = !DILocation(line: 693, column: 19, scope: !11085)
!11087 = !DILocation(line: 693, column: 24, scope: !11085)
!11088 = !DILocation(line: 693, column: 5, scope: !11085)
!11089 = !DILocation(line: 694, column: 8, scope: !11085)
!11090 = !DILocation(line: 695, column: 4, scope: !11085)
!11091 = !DILocation(line: 696, column: 3, scope: !11076)
!11092 = distinct !{!11092, !11071, !11093}
!11093 = !DILocation(line: 696, column: 3, scope: !11072)
!11094 = !DILocation(line: 697, column: 2, scope: !11061)
!11095 = distinct !{!11095, !11056, !11096}
!11096 = !DILocation(line: 697, column: 2, scope: !11057)
!11097 = !DILocation(line: 699, column: 12, scope: !11013)
!11098 = !DILocation(line: 699, column: 30, scope: !11013)
!11099 = !DILocation(line: 699, column: 23, scope: !11013)
!11100 = !DILocation(line: 699, column: 21, scope: !11013)
!11101 = !DILocation(line: 699, column: 2, scope: !11013)
!11102 = !DILocation(line: 701, column: 10, scope: !11013)
!11103 = !DILocation(line: 701, column: 14, scope: !11013)
!11104 = !DILocation(line: 701, column: 9, scope: !11013)
!11105 = !DILocation(line: 701, column: 2, scope: !11013)
!11106 = distinct !DISubprogram(name: "uv_snap_selection_exec", scope: !3, file: !3, line: 3396, type: !6778, scopeLine: 3397, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!11107 = !DILocalVariable(name: "C", arg: 1, scope: !11106, file: !3, line: 3396, type: !6780)
!11108 = !DILocation(line: 3396, column: 45, scope: !11106)
!11109 = !DILocalVariable(name: "op", arg: 2, scope: !11106, file: !3, line: 3396, type: !6783)
!11110 = !DILocation(line: 3396, column: 60, scope: !11106)
!11111 = !DILocalVariable(name: "sima", scope: !11106, file: !3, line: 3398, type: !4824)
!11112 = !DILocation(line: 3398, column: 14, scope: !11106)
!11113 = !DILocation(line: 3398, column: 40, scope: !11106)
!11114 = !DILocation(line: 3398, column: 21, scope: !11106)
!11115 = !DILocalVariable(name: "scene", scope: !11106, file: !3, line: 3399, type: !3841)
!11116 = !DILocation(line: 3399, column: 9, scope: !11106)
!11117 = !DILocation(line: 3399, column: 32, scope: !11106)
!11118 = !DILocation(line: 3399, column: 17, scope: !11106)
!11119 = !DILocalVariable(name: "obedit", scope: !11106, file: !3, line: 3400, type: !3588)
!11120 = !DILocation(line: 3400, column: 10, scope: !11106)
!11121 = !DILocation(line: 3400, column: 40, scope: !11106)
!11122 = !DILocation(line: 3400, column: 19, scope: !11106)
!11123 = !DILocalVariable(name: "ima", scope: !11106, file: !3, line: 3401, type: !3164)
!11124 = !DILocation(line: 3401, column: 9, scope: !11106)
!11125 = !DILocation(line: 3401, column: 35, scope: !11106)
!11126 = !DILocation(line: 3401, column: 15, scope: !11106)
!11127 = !DILocalVariable(name: "changed", scope: !11106, file: !3, line: 3402, type: !2013)
!11128 = !DILocation(line: 3402, column: 7, scope: !11106)
!11129 = !DILocation(line: 3404, column: 23, scope: !11106)
!11130 = !DILocation(line: 3404, column: 27, scope: !11106)
!11131 = !DILocation(line: 3404, column: 10, scope: !11106)
!11132 = !DILocation(line: 3404, column: 2, scope: !11106)
!11133 = !DILocation(line: 3406, column: 36, scope: !11134)
!11134 = distinct !DILexicalBlock(scope: !11106, file: !3, line: 3404, column: 43)
!11135 = !DILocation(line: 3406, column: 42, scope: !11134)
!11136 = !DILocation(line: 3406, column: 49, scope: !11134)
!11137 = !DILocation(line: 3406, column: 14, scope: !11134)
!11138 = !DILocation(line: 3406, column: 12, scope: !11134)
!11139 = !DILocation(line: 3407, column: 4, scope: !11134)
!11140 = !DILocation(line: 3409, column: 36, scope: !11134)
!11141 = !DILocation(line: 3409, column: 43, scope: !11134)
!11142 = !DILocation(line: 3409, column: 48, scope: !11134)
!11143 = !DILocation(line: 3409, column: 56, scope: !11134)
!11144 = !DILocation(line: 3409, column: 62, scope: !11134)
!11145 = !DILocation(line: 3409, column: 14, scope: !11134)
!11146 = !DILocation(line: 3409, column: 12, scope: !11134)
!11147 = !DILocation(line: 3410, column: 4, scope: !11134)
!11148 = !DILocalVariable(name: "center", scope: !11149, file: !3, line: 3413, type: !769)
!11149 = distinct !DILexicalBlock(scope: !11134, file: !3, line: 3412, column: 3)
!11150 = !DILocation(line: 3413, column: 10, scope: !11149)
!11151 = !DILocation(line: 3414, column: 22, scope: !11152)
!11152 = distinct !DILexicalBlock(scope: !11149, file: !3, line: 3414, column: 8)
!11153 = !DILocation(line: 3414, column: 29, scope: !11152)
!11154 = !DILocation(line: 3414, column: 34, scope: !11152)
!11155 = !DILocation(line: 3414, column: 42, scope: !11152)
!11156 = !DILocation(line: 3414, column: 50, scope: !11152)
!11157 = !DILocation(line: 3414, column: 56, scope: !11152)
!11158 = !DILocation(line: 3414, column: 8, scope: !11152)
!11159 = !DILocation(line: 3414, column: 8, scope: !11149)
!11160 = !DILocalVariable(name: "offset", scope: !11161, file: !3, line: 3415, type: !769)
!11161 = distinct !DILexicalBlock(scope: !11152, file: !3, line: 3414, column: 65)
!11162 = !DILocation(line: 3415, column: 11, scope: !11161)
!11163 = !DILocation(line: 3416, column: 17, scope: !11161)
!11164 = !DILocation(line: 3416, column: 25, scope: !11161)
!11165 = !DILocation(line: 3416, column: 31, scope: !11161)
!11166 = !DILocation(line: 3416, column: 39, scope: !11161)
!11167 = !DILocation(line: 3416, column: 5, scope: !11161)
!11168 = !DILocation(line: 3417, column: 34, scope: !11161)
!11169 = !DILocation(line: 3417, column: 41, scope: !11161)
!11170 = !DILocation(line: 3417, column: 46, scope: !11161)
!11171 = !DILocation(line: 3417, column: 54, scope: !11161)
!11172 = !DILocation(line: 3417, column: 15, scope: !11161)
!11173 = !DILocation(line: 3417, column: 13, scope: !11161)
!11174 = !DILocation(line: 3418, column: 4, scope: !11161)
!11175 = !DILocation(line: 3419, column: 4, scope: !11149)
!11176 = !DILocation(line: 3422, column: 49, scope: !11134)
!11177 = !DILocation(line: 3422, column: 56, scope: !11134)
!11178 = !DILocation(line: 3422, column: 61, scope: !11134)
!11179 = !DILocation(line: 3422, column: 14, scope: !11134)
!11180 = !DILocation(line: 3422, column: 12, scope: !11134)
!11181 = !DILocation(line: 3423, column: 4, scope: !11134)
!11182 = !DILocation(line: 3426, column: 7, scope: !11183)
!11183 = distinct !DILexicalBlock(scope: !11106, file: !3, line: 3426, column: 6)
!11184 = !DILocation(line: 3426, column: 6, scope: !11106)
!11185 = !DILocation(line: 3427, column: 3, scope: !11183)
!11186 = !DILocation(line: 3429, column: 28, scope: !11106)
!11187 = !DILocation(line: 3429, column: 34, scope: !11106)
!11188 = !DILocation(line: 3429, column: 41, scope: !11106)
!11189 = !DILocation(line: 3429, column: 2, scope: !11106)
!11190 = !DILocation(line: 3430, column: 20, scope: !11106)
!11191 = !DILocation(line: 3430, column: 28, scope: !11106)
!11192 = !DILocation(line: 3430, column: 2, scope: !11106)
!11193 = !DILocation(line: 3431, column: 24, scope: !11106)
!11194 = !DILocation(line: 3431, column: 46, scope: !11106)
!11195 = !DILocation(line: 3431, column: 54, scope: !11106)
!11196 = !DILocation(line: 3431, column: 2, scope: !11106)
!11197 = !DILocation(line: 3433, column: 2, scope: !11106)
!11198 = !DILocation(line: 3434, column: 1, scope: !11106)
!11199 = distinct !DISubprogram(name: "uv_snap_uvs_to_pixels", scope: !3, file: !3, line: 3358, type: !11200, scopeLine: 3359, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!11200 = !DISubroutineType(types: !11201)
!11201 = !{!2013, !4824, !3841, !3588}
!11202 = !DILocalVariable(name: "sima", arg: 1, scope: !11199, file: !3, line: 3358, type: !4824)
!11203 = !DILocation(line: 3358, column: 47, scope: !11199)
!11204 = !DILocalVariable(name: "scene", arg: 2, scope: !11199, file: !3, line: 3358, type: !3841)
!11205 = !DILocation(line: 3358, column: 60, scope: !11199)
!11206 = !DILocalVariable(name: "obedit", arg: 3, scope: !11199, file: !3, line: 3358, type: !3588)
!11207 = !DILocation(line: 3358, column: 75, scope: !11199)
!11208 = !DILocalVariable(name: "em", scope: !11199, file: !3, line: 3360, type: !3593)
!11209 = !DILocation(line: 3360, column: 14, scope: !11199)
!11210 = !DILocation(line: 3360, column: 44, scope: !11199)
!11211 = !DILocation(line: 3360, column: 19, scope: !11199)
!11212 = !DILocalVariable(name: "ima", scope: !11199, file: !3, line: 3361, type: !3164)
!11213 = !DILocation(line: 3361, column: 9, scope: !11199)
!11214 = !DILocation(line: 3361, column: 15, scope: !11199)
!11215 = !DILocation(line: 3361, column: 21, scope: !11199)
!11216 = !DILocalVariable(name: "efa", scope: !11199, file: !3, line: 3362, type: !3238)
!11217 = !DILocation(line: 3362, column: 10, scope: !11199)
!11218 = !DILocalVariable(name: "l", scope: !11199, file: !3, line: 3363, type: !3220)
!11219 = !DILocation(line: 3363, column: 10, scope: !11199)
!11220 = !DILocalVariable(name: "iter", scope: !11199, file: !3, line: 3364, type: !3856)
!11221 = !DILocation(line: 3364, column: 9, scope: !11199)
!11222 = !DILocalVariable(name: "liter", scope: !11199, file: !3, line: 3364, type: !3856)
!11223 = !DILocation(line: 3364, column: 15, scope: !11199)
!11224 = !DILocalVariable(name: "tface", scope: !11199, file: !3, line: 3365, type: !3945)
!11225 = !DILocation(line: 3365, column: 12, scope: !11199)
!11226 = !DILocalVariable(name: "luv", scope: !11199, file: !3, line: 3366, type: !3240)
!11227 = !DILocation(line: 3366, column: 11, scope: !11199)
!11228 = !DILocalVariable(name: "width", scope: !11199, file: !3, line: 3367, type: !22)
!11229 = !DILocation(line: 3367, column: 6, scope: !11199)
!11230 = !DILocalVariable(name: "height", scope: !11199, file: !3, line: 3367, type: !22)
!11231 = !DILocation(line: 3367, column: 17, scope: !11199)
!11232 = !DILocalVariable(name: "w", scope: !11199, file: !3, line: 3368, type: !192)
!11233 = !DILocation(line: 3368, column: 8, scope: !11199)
!11234 = !DILocalVariable(name: "h", scope: !11199, file: !3, line: 3368, type: !192)
!11235 = !DILocation(line: 3368, column: 11, scope: !11199)
!11236 = !DILocalVariable(name: "changed", scope: !11199, file: !3, line: 3369, type: !2013)
!11237 = !DILocation(line: 3369, column: 7, scope: !11199)
!11238 = !DILocalVariable(name: "cd_loop_uv_offset", scope: !11199, file: !3, line: 3371, type: !4165)
!11239 = !DILocation(line: 3371, column: 12, scope: !11199)
!11240 = !DILocation(line: 3371, column: 56, scope: !11199)
!11241 = !DILocation(line: 3371, column: 60, scope: !11199)
!11242 = !DILocation(line: 3371, column: 64, scope: !11199)
!11243 = !DILocation(line: 3371, column: 33, scope: !11199)
!11244 = !DILocalVariable(name: "cd_poly_tex_offset", scope: !11199, file: !3, line: 3372, type: !4165)
!11245 = !DILocation(line: 3372, column: 12, scope: !11199)
!11246 = !DILocation(line: 3372, column: 56, scope: !11199)
!11247 = !DILocation(line: 3372, column: 60, scope: !11199)
!11248 = !DILocation(line: 3372, column: 64, scope: !11199)
!11249 = !DILocation(line: 3372, column: 33, scope: !11199)
!11250 = !DILocation(line: 3374, column: 26, scope: !11199)
!11251 = !DILocation(line: 3374, column: 2, scope: !11199)
!11252 = !DILocation(line: 3375, column: 13, scope: !11199)
!11253 = !DILocation(line: 3375, column: 6, scope: !11199)
!11254 = !DILocation(line: 3375, column: 4, scope: !11199)
!11255 = !DILocation(line: 3376, column: 13, scope: !11199)
!11256 = !DILocation(line: 3376, column: 6, scope: !11199)
!11257 = !DILocation(line: 3376, column: 4, scope: !11199)
!11258 = !DILocation(line: 3378, column: 2, scope: !11259)
!11259 = distinct !DILexicalBlock(scope: !11199, file: !3, line: 3378, column: 2)
!11260 = !DILocation(line: 3378, column: 2, scope: !11261)
!11261 = distinct !DILexicalBlock(scope: !11259, file: !3, line: 3378, column: 2)
!11262 = !DILocation(line: 3379, column: 11, scope: !11263)
!11263 = distinct !DILexicalBlock(scope: !11261, file: !3, line: 3378, column: 54)
!11264 = !DILocation(line: 3379, column: 9, scope: !11263)
!11265 = !DILocation(line: 3380, column: 33, scope: !11266)
!11266 = distinct !DILexicalBlock(scope: !11263, file: !3, line: 3380, column: 7)
!11267 = !DILocation(line: 3380, column: 40, scope: !11266)
!11268 = !DILocation(line: 3380, column: 45, scope: !11266)
!11269 = !DILocation(line: 3380, column: 50, scope: !11266)
!11270 = !DILocation(line: 3380, column: 8, scope: !11266)
!11271 = !DILocation(line: 3380, column: 7, scope: !11263)
!11272 = !DILocation(line: 3381, column: 4, scope: !11266)
!11273 = !DILocation(line: 3383, column: 3, scope: !11274)
!11274 = distinct !DILexicalBlock(scope: !11263, file: !3, line: 3383, column: 3)
!11275 = !DILocation(line: 3383, column: 3, scope: !11276)
!11276 = distinct !DILexicalBlock(scope: !11274, file: !3, line: 3383, column: 3)
!11277 = !DILocation(line: 3384, column: 30, scope: !11278)
!11278 = distinct !DILexicalBlock(scope: !11279, file: !3, line: 3384, column: 8)
!11279 = distinct !DILexicalBlock(scope: !11276, file: !3, line: 3383, column: 51)
!11280 = !DILocation(line: 3384, column: 37, scope: !11278)
!11281 = !DILocation(line: 3384, column: 40, scope: !11278)
!11282 = !DILocation(line: 3384, column: 8, scope: !11278)
!11283 = !DILocation(line: 3384, column: 8, scope: !11279)
!11284 = !DILocation(line: 3385, column: 11, scope: !11285)
!11285 = distinct !DILexicalBlock(scope: !11278, file: !3, line: 3384, column: 60)
!11286 = !DILocation(line: 3385, column: 9, scope: !11285)
!11287 = !DILocation(line: 3386, column: 22, scope: !11285)
!11288 = !DILocation(line: 3386, column: 27, scope: !11285)
!11289 = !DILocation(line: 3386, column: 31, scope: !11285)
!11290 = !DILocation(line: 3386, column: 34, scope: !11285)
!11291 = !DILocation(line: 3386, column: 5, scope: !11285)
!11292 = !DILocation(line: 3387, column: 4, scope: !11285)
!11293 = !DILocation(line: 3388, column: 3, scope: !11279)
!11294 = distinct !{!11294, !11273, !11295}
!11295 = !DILocation(line: 3388, column: 3, scope: !11274)
!11296 = !DILocation(line: 3390, column: 11, scope: !11263)
!11297 = !DILocation(line: 3391, column: 2, scope: !11263)
!11298 = distinct !{!11298, !11258, !11299}
!11299 = !DILocation(line: 3391, column: 2, scope: !11259)
!11300 = !DILocation(line: 3393, column: 9, scope: !11199)
!11301 = !DILocation(line: 3393, column: 2, scope: !11199)
!11302 = distinct !DISubprogram(name: "uv_snap_uvs_to_cursor", scope: !3, file: !3, line: 3240, type: !11303, scopeLine: 3241, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!11303 = !DISubroutineType(types: !11304)
!11304 = !{!2013, !3841, !3164, !3588, !4976}
!11305 = !DILocalVariable(name: "scene", arg: 1, scope: !11302, file: !3, line: 3240, type: !3841)
!11306 = !DILocation(line: 3240, column: 42, scope: !11302)
!11307 = !DILocalVariable(name: "ima", arg: 2, scope: !11302, file: !3, line: 3240, type: !3164)
!11308 = !DILocation(line: 3240, column: 56, scope: !11302)
!11309 = !DILocalVariable(name: "obedit", arg: 3, scope: !11302, file: !3, line: 3240, type: !3588)
!11310 = !DILocation(line: 3240, column: 69, scope: !11302)
!11311 = !DILocalVariable(name: "cursor", arg: 4, scope: !11302, file: !3, line: 3240, type: !4976)
!11312 = !DILocation(line: 3240, column: 89, scope: !11302)
!11313 = !DILocalVariable(name: "em", scope: !11302, file: !3, line: 3242, type: !3593)
!11314 = !DILocation(line: 3242, column: 14, scope: !11302)
!11315 = !DILocation(line: 3242, column: 44, scope: !11302)
!11316 = !DILocation(line: 3242, column: 19, scope: !11302)
!11317 = !DILocalVariable(name: "efa", scope: !11302, file: !3, line: 3243, type: !3238)
!11318 = !DILocation(line: 3243, column: 10, scope: !11302)
!11319 = !DILocalVariable(name: "l", scope: !11302, file: !3, line: 3244, type: !3220)
!11320 = !DILocation(line: 3244, column: 10, scope: !11302)
!11321 = !DILocalVariable(name: "iter", scope: !11302, file: !3, line: 3245, type: !3856)
!11322 = !DILocation(line: 3245, column: 9, scope: !11302)
!11323 = !DILocalVariable(name: "liter", scope: !11302, file: !3, line: 3245, type: !3856)
!11324 = !DILocation(line: 3245, column: 15, scope: !11302)
!11325 = !DILocalVariable(name: "tface", scope: !11302, file: !3, line: 3246, type: !3945)
!11326 = !DILocation(line: 3246, column: 12, scope: !11302)
!11327 = !DILocalVariable(name: "luv", scope: !11302, file: !3, line: 3247, type: !3240)
!11328 = !DILocation(line: 3247, column: 11, scope: !11302)
!11329 = !DILocalVariable(name: "changed", scope: !11302, file: !3, line: 3248, type: !2013)
!11330 = !DILocation(line: 3248, column: 7, scope: !11302)
!11331 = !DILocalVariable(name: "cd_loop_uv_offset", scope: !11302, file: !3, line: 3250, type: !4165)
!11332 = !DILocation(line: 3250, column: 12, scope: !11302)
!11333 = !DILocation(line: 3250, column: 56, scope: !11302)
!11334 = !DILocation(line: 3250, column: 60, scope: !11302)
!11335 = !DILocation(line: 3250, column: 64, scope: !11302)
!11336 = !DILocation(line: 3250, column: 33, scope: !11302)
!11337 = !DILocalVariable(name: "cd_poly_tex_offset", scope: !11302, file: !3, line: 3251, type: !4165)
!11338 = !DILocation(line: 3251, column: 12, scope: !11302)
!11339 = !DILocation(line: 3251, column: 56, scope: !11302)
!11340 = !DILocation(line: 3251, column: 60, scope: !11302)
!11341 = !DILocation(line: 3251, column: 64, scope: !11302)
!11342 = !DILocation(line: 3251, column: 33, scope: !11302)
!11343 = !DILocation(line: 3253, column: 2, scope: !11344)
!11344 = distinct !DILexicalBlock(scope: !11302, file: !3, line: 3253, column: 2)
!11345 = !DILocation(line: 3253, column: 2, scope: !11346)
!11346 = distinct !DILexicalBlock(scope: !11344, file: !3, line: 3253, column: 2)
!11347 = !DILocation(line: 3254, column: 11, scope: !11348)
!11348 = distinct !DILexicalBlock(scope: !11346, file: !3, line: 3253, column: 54)
!11349 = !DILocation(line: 3254, column: 9, scope: !11348)
!11350 = !DILocation(line: 3255, column: 33, scope: !11351)
!11351 = distinct !DILexicalBlock(scope: !11348, file: !3, line: 3255, column: 7)
!11352 = !DILocation(line: 3255, column: 40, scope: !11351)
!11353 = !DILocation(line: 3255, column: 45, scope: !11351)
!11354 = !DILocation(line: 3255, column: 50, scope: !11351)
!11355 = !DILocation(line: 3255, column: 8, scope: !11351)
!11356 = !DILocation(line: 3255, column: 7, scope: !11348)
!11357 = !DILocation(line: 3256, column: 4, scope: !11351)
!11358 = !DILocation(line: 3258, column: 3, scope: !11359)
!11359 = distinct !DILexicalBlock(scope: !11348, file: !3, line: 3258, column: 3)
!11360 = !DILocation(line: 3258, column: 3, scope: !11361)
!11361 = distinct !DILexicalBlock(scope: !11359, file: !3, line: 3258, column: 3)
!11362 = !DILocation(line: 3259, column: 30, scope: !11363)
!11363 = distinct !DILexicalBlock(scope: !11364, file: !3, line: 3259, column: 8)
!11364 = distinct !DILexicalBlock(scope: !11361, file: !3, line: 3258, column: 51)
!11365 = !DILocation(line: 3259, column: 37, scope: !11363)
!11366 = !DILocation(line: 3259, column: 40, scope: !11363)
!11367 = !DILocation(line: 3259, column: 8, scope: !11363)
!11368 = !DILocation(line: 3259, column: 8, scope: !11364)
!11369 = !DILocation(line: 3260, column: 11, scope: !11370)
!11370 = distinct !DILexicalBlock(scope: !11363, file: !3, line: 3259, column: 60)
!11371 = !DILocation(line: 3260, column: 9, scope: !11370)
!11372 = !DILocation(line: 3261, column: 16, scope: !11370)
!11373 = !DILocation(line: 3261, column: 21, scope: !11370)
!11374 = !DILocation(line: 3261, column: 25, scope: !11370)
!11375 = !DILocation(line: 3261, column: 5, scope: !11370)
!11376 = !DILocation(line: 3262, column: 13, scope: !11370)
!11377 = !DILocation(line: 3263, column: 4, scope: !11370)
!11378 = !DILocation(line: 3264, column: 3, scope: !11364)
!11379 = distinct !{!11379, !11358, !11380}
!11380 = !DILocation(line: 3264, column: 3, scope: !11359)
!11381 = !DILocation(line: 3265, column: 2, scope: !11348)
!11382 = distinct !{!11382, !11343, !11383}
!11383 = !DILocation(line: 3265, column: 2, scope: !11344)
!11384 = !DILocation(line: 3267, column: 9, scope: !11302)
!11385 = !DILocation(line: 3267, column: 2, scope: !11302)
!11386 = distinct !DISubprogram(name: "uv_snap_uvs_offset", scope: !3, file: !3, line: 3270, type: !11303, scopeLine: 3271, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!11387 = !DILocalVariable(name: "scene", arg: 1, scope: !11386, file: !3, line: 3270, type: !3841)
!11388 = !DILocation(line: 3270, column: 39, scope: !11386)
!11389 = !DILocalVariable(name: "ima", arg: 2, scope: !11386, file: !3, line: 3270, type: !3164)
!11390 = !DILocation(line: 3270, column: 53, scope: !11386)
!11391 = !DILocalVariable(name: "obedit", arg: 3, scope: !11386, file: !3, line: 3270, type: !3588)
!11392 = !DILocation(line: 3270, column: 66, scope: !11386)
!11393 = !DILocalVariable(name: "offset", arg: 4, scope: !11386, file: !3, line: 3270, type: !4976)
!11394 = !DILocation(line: 3270, column: 86, scope: !11386)
!11395 = !DILocalVariable(name: "em", scope: !11386, file: !3, line: 3272, type: !3593)
!11396 = !DILocation(line: 3272, column: 14, scope: !11386)
!11397 = !DILocation(line: 3272, column: 44, scope: !11386)
!11398 = !DILocation(line: 3272, column: 19, scope: !11386)
!11399 = !DILocalVariable(name: "efa", scope: !11386, file: !3, line: 3273, type: !3238)
!11400 = !DILocation(line: 3273, column: 10, scope: !11386)
!11401 = !DILocalVariable(name: "l", scope: !11386, file: !3, line: 3274, type: !3220)
!11402 = !DILocation(line: 3274, column: 10, scope: !11386)
!11403 = !DILocalVariable(name: "iter", scope: !11386, file: !3, line: 3275, type: !3856)
!11404 = !DILocation(line: 3275, column: 9, scope: !11386)
!11405 = !DILocalVariable(name: "liter", scope: !11386, file: !3, line: 3275, type: !3856)
!11406 = !DILocation(line: 3275, column: 15, scope: !11386)
!11407 = !DILocalVariable(name: "tface", scope: !11386, file: !3, line: 3276, type: !3945)
!11408 = !DILocation(line: 3276, column: 12, scope: !11386)
!11409 = !DILocalVariable(name: "luv", scope: !11386, file: !3, line: 3277, type: !3240)
!11410 = !DILocation(line: 3277, column: 11, scope: !11386)
!11411 = !DILocalVariable(name: "changed", scope: !11386, file: !3, line: 3278, type: !2013)
!11412 = !DILocation(line: 3278, column: 7, scope: !11386)
!11413 = !DILocalVariable(name: "cd_loop_uv_offset", scope: !11386, file: !3, line: 3280, type: !4165)
!11414 = !DILocation(line: 3280, column: 12, scope: !11386)
!11415 = !DILocation(line: 3280, column: 56, scope: !11386)
!11416 = !DILocation(line: 3280, column: 60, scope: !11386)
!11417 = !DILocation(line: 3280, column: 64, scope: !11386)
!11418 = !DILocation(line: 3280, column: 33, scope: !11386)
!11419 = !DILocalVariable(name: "cd_poly_tex_offset", scope: !11386, file: !3, line: 3281, type: !4165)
!11420 = !DILocation(line: 3281, column: 12, scope: !11386)
!11421 = !DILocation(line: 3281, column: 56, scope: !11386)
!11422 = !DILocation(line: 3281, column: 60, scope: !11386)
!11423 = !DILocation(line: 3281, column: 64, scope: !11386)
!11424 = !DILocation(line: 3281, column: 33, scope: !11386)
!11425 = !DILocation(line: 3283, column: 2, scope: !11426)
!11426 = distinct !DILexicalBlock(scope: !11386, file: !3, line: 3283, column: 2)
!11427 = !DILocation(line: 3283, column: 2, scope: !11428)
!11428 = distinct !DILexicalBlock(scope: !11426, file: !3, line: 3283, column: 2)
!11429 = !DILocation(line: 3284, column: 11, scope: !11430)
!11430 = distinct !DILexicalBlock(scope: !11428, file: !3, line: 3283, column: 54)
!11431 = !DILocation(line: 3284, column: 9, scope: !11430)
!11432 = !DILocation(line: 3285, column: 33, scope: !11433)
!11433 = distinct !DILexicalBlock(scope: !11430, file: !3, line: 3285, column: 7)
!11434 = !DILocation(line: 3285, column: 40, scope: !11433)
!11435 = !DILocation(line: 3285, column: 45, scope: !11433)
!11436 = !DILocation(line: 3285, column: 50, scope: !11433)
!11437 = !DILocation(line: 3285, column: 8, scope: !11433)
!11438 = !DILocation(line: 3285, column: 7, scope: !11430)
!11439 = !DILocation(line: 3286, column: 4, scope: !11433)
!11440 = !DILocation(line: 3288, column: 3, scope: !11441)
!11441 = distinct !DILexicalBlock(scope: !11430, file: !3, line: 3288, column: 3)
!11442 = !DILocation(line: 3288, column: 3, scope: !11443)
!11443 = distinct !DILexicalBlock(scope: !11441, file: !3, line: 3288, column: 3)
!11444 = !DILocation(line: 3289, column: 30, scope: !11445)
!11445 = distinct !DILexicalBlock(scope: !11446, file: !3, line: 3289, column: 8)
!11446 = distinct !DILexicalBlock(scope: !11443, file: !3, line: 3288, column: 51)
!11447 = !DILocation(line: 3289, column: 37, scope: !11445)
!11448 = !DILocation(line: 3289, column: 40, scope: !11445)
!11449 = !DILocation(line: 3289, column: 8, scope: !11445)
!11450 = !DILocation(line: 3289, column: 8, scope: !11446)
!11451 = !DILocation(line: 3290, column: 11, scope: !11452)
!11452 = distinct !DILexicalBlock(scope: !11445, file: !3, line: 3289, column: 60)
!11453 = !DILocation(line: 3290, column: 9, scope: !11452)
!11454 = !DILocation(line: 3291, column: 15, scope: !11452)
!11455 = !DILocation(line: 3291, column: 20, scope: !11452)
!11456 = !DILocation(line: 3291, column: 24, scope: !11452)
!11457 = !DILocation(line: 3291, column: 5, scope: !11452)
!11458 = !DILocation(line: 3292, column: 13, scope: !11452)
!11459 = !DILocation(line: 3293, column: 4, scope: !11452)
!11460 = !DILocation(line: 3294, column: 3, scope: !11446)
!11461 = distinct !{!11461, !11440, !11462}
!11462 = !DILocation(line: 3294, column: 3, scope: !11441)
!11463 = !DILocation(line: 3295, column: 2, scope: !11430)
!11464 = distinct !{!11464, !11425, !11465}
!11465 = !DILocation(line: 3295, column: 2, scope: !11426)
!11466 = !DILocation(line: 3297, column: 9, scope: !11386)
!11467 = !DILocation(line: 3297, column: 2, scope: !11386)
!11468 = distinct !DISubprogram(name: "uv_snap_uvs_to_adjacent_unselected", scope: !3, file: !3, line: 3300, type: !11469, scopeLine: 3301, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!11469 = !DISubroutineType(types: !11470)
!11470 = !{!2013, !3841, !3164, !3588}
!11471 = !DILocalVariable(name: "scene", arg: 1, scope: !11468, file: !3, line: 3300, type: !3841)
!11472 = !DILocation(line: 3300, column: 55, scope: !11468)
!11473 = !DILocalVariable(name: "ima", arg: 2, scope: !11468, file: !3, line: 3300, type: !3164)
!11474 = !DILocation(line: 3300, column: 69, scope: !11468)
!11475 = !DILocalVariable(name: "obedit", arg: 3, scope: !11468, file: !3, line: 3300, type: !3588)
!11476 = !DILocation(line: 3300, column: 82, scope: !11468)
!11477 = !DILocalVariable(name: "em", scope: !11468, file: !3, line: 3302, type: !3593)
!11478 = !DILocation(line: 3302, column: 14, scope: !11468)
!11479 = !DILocation(line: 3302, column: 44, scope: !11468)
!11480 = !DILocation(line: 3302, column: 19, scope: !11468)
!11481 = !DILocalVariable(name: "bm", scope: !11468, file: !3, line: 3303, type: !3441)
!11482 = !DILocation(line: 3303, column: 9, scope: !11468)
!11483 = !DILocation(line: 3303, column: 14, scope: !11468)
!11484 = !DILocation(line: 3303, column: 18, scope: !11468)
!11485 = !DILocalVariable(name: "f", scope: !11468, file: !3, line: 3304, type: !3238)
!11486 = !DILocation(line: 3304, column: 10, scope: !11468)
!11487 = !DILocalVariable(name: "l", scope: !11468, file: !3, line: 3305, type: !3220)
!11488 = !DILocation(line: 3305, column: 10, scope: !11468)
!11489 = !DILocalVariable(name: "lsub", scope: !11468, file: !3, line: 3305, type: !3220)
!11490 = !DILocation(line: 3305, column: 14, scope: !11468)
!11491 = !DILocalVariable(name: "iter", scope: !11468, file: !3, line: 3306, type: !3856)
!11492 = !DILocation(line: 3306, column: 9, scope: !11468)
!11493 = !DILocalVariable(name: "liter", scope: !11468, file: !3, line: 3306, type: !3856)
!11494 = !DILocation(line: 3306, column: 15, scope: !11468)
!11495 = !DILocalVariable(name: "lsubiter", scope: !11468, file: !3, line: 3306, type: !3856)
!11496 = !DILocation(line: 3306, column: 22, scope: !11468)
!11497 = !DILocalVariable(name: "tface", scope: !11468, file: !3, line: 3307, type: !3945)
!11498 = !DILocation(line: 3307, column: 12, scope: !11468)
!11499 = !DILocalVariable(name: "luv", scope: !11468, file: !3, line: 3308, type: !3240)
!11500 = !DILocation(line: 3308, column: 11, scope: !11468)
!11501 = !DILocalVariable(name: "changed", scope: !11468, file: !3, line: 3309, type: !2013)
!11502 = !DILocation(line: 3309, column: 7, scope: !11468)
!11503 = !DILocalVariable(name: "cd_loop_uv_offset", scope: !11468, file: !3, line: 3310, type: !4165)
!11504 = !DILocation(line: 3310, column: 12, scope: !11468)
!11505 = !DILocation(line: 3310, column: 56, scope: !11468)
!11506 = !DILocation(line: 3310, column: 60, scope: !11468)
!11507 = !DILocation(line: 3310, column: 33, scope: !11468)
!11508 = !DILocalVariable(name: "cd_poly_tex_offset", scope: !11468, file: !3, line: 3311, type: !4165)
!11509 = !DILocation(line: 3311, column: 12, scope: !11468)
!11510 = !DILocation(line: 3311, column: 56, scope: !11468)
!11511 = !DILocation(line: 3311, column: 60, scope: !11468)
!11512 = !DILocation(line: 3311, column: 33, scope: !11468)
!11513 = !DILocation(line: 3315, column: 2, scope: !11514)
!11514 = distinct !DILexicalBlock(scope: !11468, file: !3, line: 3315, column: 2)
!11515 = !DILocation(line: 3315, column: 2, scope: !11516)
!11516 = distinct !DILexicalBlock(scope: !11514, file: !3, line: 3315, column: 2)
!11517 = !DILocation(line: 3316, column: 11, scope: !11518)
!11518 = distinct !DILexicalBlock(scope: !11516, file: !3, line: 3315, column: 48)
!11519 = !DILocation(line: 3316, column: 9, scope: !11518)
!11520 = !DILocation(line: 3317, column: 32, scope: !11521)
!11521 = distinct !DILexicalBlock(scope: !11518, file: !3, line: 3317, column: 7)
!11522 = !DILocation(line: 3317, column: 39, scope: !11521)
!11523 = !DILocation(line: 3317, column: 44, scope: !11521)
!11524 = !DILocation(line: 3317, column: 47, scope: !11521)
!11525 = !DILocation(line: 3317, column: 7, scope: !11521)
!11526 = !DILocation(line: 3317, column: 7, scope: !11518)
!11527 = !DILocation(line: 3318, column: 4, scope: !11528)
!11528 = distinct !DILexicalBlock(scope: !11521, file: !3, line: 3317, column: 55)
!11529 = !DILocation(line: 3319, column: 4, scope: !11530)
!11530 = distinct !DILexicalBlock(scope: !11528, file: !3, line: 3319, column: 4)
!11531 = !DILocation(line: 3319, column: 4, scope: !11532)
!11532 = distinct !DILexicalBlock(scope: !11530, file: !3, line: 3319, column: 4)
!11533 = !DILocation(line: 3320, column: 5, scope: !11534)
!11534 = distinct !DILexicalBlock(scope: !11532, file: !3, line: 3319, column: 50)
!11535 = !DILocation(line: 3321, column: 4, scope: !11534)
!11536 = distinct !{!11536, !11529, !11537}
!11537 = !DILocation(line: 3321, column: 4, scope: !11530)
!11538 = !DILocation(line: 3322, column: 3, scope: !11528)
!11539 = !DILocation(line: 3324, column: 4, scope: !11540)
!11540 = distinct !DILexicalBlock(scope: !11521, file: !3, line: 3323, column: 8)
!11541 = !DILocation(line: 3326, column: 2, scope: !11518)
!11542 = distinct !{!11542, !11513, !11543}
!11543 = !DILocation(line: 3326, column: 2, scope: !11514)
!11544 = !DILocation(line: 3328, column: 2, scope: !11545)
!11545 = distinct !DILexicalBlock(scope: !11468, file: !3, line: 3328, column: 2)
!11546 = !DILocation(line: 3328, column: 2, scope: !11547)
!11547 = distinct !DILexicalBlock(scope: !11545, file: !3, line: 3328, column: 2)
!11548 = !DILocation(line: 3329, column: 7, scope: !11549)
!11549 = distinct !DILexicalBlock(scope: !11550, file: !3, line: 3329, column: 7)
!11550 = distinct !DILexicalBlock(scope: !11547, file: !3, line: 3328, column: 48)
!11551 = !DILocation(line: 3329, column: 7, scope: !11550)
!11552 = !DILocation(line: 3330, column: 4, scope: !11553)
!11553 = distinct !DILexicalBlock(scope: !11554, file: !3, line: 3330, column: 4)
!11554 = distinct !DILexicalBlock(scope: !11549, file: !3, line: 3329, column: 42)
!11555 = !DILocation(line: 3330, column: 4, scope: !11556)
!11556 = distinct !DILexicalBlock(scope: !11553, file: !3, line: 3330, column: 4)
!11557 = !DILocation(line: 3331, column: 9, scope: !11558)
!11558 = distinct !DILexicalBlock(scope: !11559, file: !3, line: 3331, column: 9)
!11559 = distinct !DILexicalBlock(scope: !11556, file: !3, line: 3330, column: 50)
!11560 = !DILocation(line: 3331, column: 9, scope: !11559)
!11561 = !DILocalVariable(name: "uv", scope: !11562, file: !3, line: 3332, type: !769)
!11562 = distinct !DILexicalBlock(scope: !11558, file: !3, line: 3331, column: 44)
!11563 = !DILocation(line: 3332, column: 12, scope: !11562)
!11564 = !DILocalVariable(name: "uv_tot", scope: !11562, file: !3, line: 3333, type: !22)
!11565 = !DILocation(line: 3333, column: 10, scope: !11562)
!11566 = !DILocation(line: 3335, column: 6, scope: !11567)
!11567 = distinct !DILexicalBlock(scope: !11562, file: !3, line: 3335, column: 6)
!11568 = !DILocation(line: 3335, column: 6, scope: !11569)
!11569 = distinct !DILexicalBlock(scope: !11567, file: !3, line: 3335, column: 6)
!11570 = !DILocation(line: 3336, column: 11, scope: !11571)
!11571 = distinct !DILexicalBlock(scope: !11572, file: !3, line: 3336, column: 11)
!11572 = distinct !DILexicalBlock(scope: !11569, file: !3, line: 3335, column: 61)
!11573 = !DILocation(line: 3336, column: 51, scope: !11571)
!11574 = !DILocation(line: 3337, column: 12, scope: !11571)
!11575 = !DILocation(line: 3336, column: 11, scope: !11572)
!11576 = !DILocation(line: 3339, column: 14, scope: !11577)
!11577 = distinct !DILexicalBlock(scope: !11571, file: !3, line: 3338, column: 7)
!11578 = !DILocation(line: 3339, column: 12, scope: !11577)
!11579 = !DILocation(line: 3340, column: 18, scope: !11577)
!11580 = !DILocation(line: 3340, column: 22, scope: !11577)
!11581 = !DILocation(line: 3340, column: 27, scope: !11577)
!11582 = !DILocation(line: 3340, column: 8, scope: !11577)
!11583 = !DILocation(line: 3341, column: 14, scope: !11577)
!11584 = !DILocation(line: 3342, column: 7, scope: !11577)
!11585 = !DILocation(line: 3343, column: 6, scope: !11572)
!11586 = distinct !{!11586, !11566, !11587}
!11587 = !DILocation(line: 3343, column: 6, scope: !11567)
!11588 = !DILocation(line: 3345, column: 10, scope: !11589)
!11589 = distinct !DILexicalBlock(scope: !11562, file: !3, line: 3345, column: 10)
!11590 = !DILocation(line: 3345, column: 10, scope: !11562)
!11591 = !DILocation(line: 3346, column: 13, scope: !11592)
!11592 = distinct !DILexicalBlock(scope: !11589, file: !3, line: 3345, column: 18)
!11593 = !DILocation(line: 3346, column: 11, scope: !11592)
!11594 = !DILocation(line: 3347, column: 19, scope: !11592)
!11595 = !DILocation(line: 3347, column: 24, scope: !11592)
!11596 = !DILocation(line: 3347, column: 28, scope: !11592)
!11597 = !DILocation(line: 3347, column: 46, scope: !11592)
!11598 = !DILocation(line: 3347, column: 39, scope: !11592)
!11599 = !DILocation(line: 3347, column: 37, scope: !11592)
!11600 = !DILocation(line: 3347, column: 7, scope: !11592)
!11601 = !DILocation(line: 3348, column: 15, scope: !11592)
!11602 = !DILocation(line: 3349, column: 6, scope: !11592)
!11603 = !DILocation(line: 3350, column: 5, scope: !11562)
!11604 = !DILocation(line: 3351, column: 4, scope: !11559)
!11605 = distinct !{!11605, !11552, !11606}
!11606 = !DILocation(line: 3351, column: 4, scope: !11553)
!11607 = !DILocation(line: 3352, column: 3, scope: !11554)
!11608 = !DILocation(line: 3353, column: 2, scope: !11550)
!11609 = distinct !{!11609, !11544, !11610}
!11610 = !DILocation(line: 3353, column: 2, scope: !11545)
!11611 = !DILocation(line: 3355, column: 9, scope: !11468)
!11612 = !DILocation(line: 3355, column: 2, scope: !11468)
!11613 = distinct !DISubprogram(name: "_bm_elem_flag_set", scope: !4247, file: !4247, line: 62, type: !11614, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!11614 = !DISubroutineType(types: !11615)
!11615 = !{null, !8779, !13, !4165}
!11616 = !DILocalVariable(name: "head", arg: 1, scope: !11613, file: !4247, line: 62, type: !8779)
!11617 = !DILocation(line: 62, column: 45, scope: !11613)
!11618 = !DILocalVariable(name: "hflag", arg: 2, scope: !11613, file: !4247, line: 62, type: !13)
!11619 = !DILocation(line: 62, column: 62, scope: !11613)
!11620 = !DILocalVariable(name: "val", arg: 3, scope: !11613, file: !4247, line: 62, type: !4165)
!11621 = !DILocation(line: 62, column: 79, scope: !11613)
!11622 = !DILocation(line: 64, column: 6, scope: !11623)
!11623 = distinct !DILexicalBlock(scope: !11613, file: !4247, line: 64, column: 6)
!11624 = !DILocation(line: 64, column: 6, scope: !11613)
!11625 = !DILocation(line: 64, column: 33, scope: !11623)
!11626 = !DILocation(line: 64, column: 40, scope: !11623)
!11627 = !DILocation(line: 64, column: 12, scope: !11623)
!11628 = !DILocation(line: 65, column: 34, scope: !11623)
!11629 = !DILocation(line: 65, column: 40, scope: !11623)
!11630 = !DILocation(line: 65, column: 12, scope: !11623)
!11631 = !DILocation(line: 66, column: 1, scope: !11613)
!11632 = distinct !DISubprogram(name: "mul_v2_v2fl", scope: !4963, file: !4963, line: 386, type: !11633, scopeLine: 387, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!11633 = !DISubroutineType(types: !11634)
!11634 = !{null, !630, !4976, !192}
!11635 = !DILocalVariable(name: "r", arg: 1, scope: !11632, file: !4963, line: 386, type: !630)
!11636 = !DILocation(line: 386, column: 32, scope: !11632)
!11637 = !DILocalVariable(name: "a", arg: 2, scope: !11632, file: !4963, line: 386, type: !4976)
!11638 = !DILocation(line: 386, column: 50, scope: !11632)
!11639 = !DILocalVariable(name: "f", arg: 3, scope: !11632, file: !4963, line: 386, type: !192)
!11640 = !DILocation(line: 386, column: 62, scope: !11632)
!11641 = !DILocation(line: 388, column: 9, scope: !11632)
!11642 = !DILocation(line: 388, column: 16, scope: !11632)
!11643 = !DILocation(line: 388, column: 14, scope: !11632)
!11644 = !DILocation(line: 388, column: 2, scope: !11632)
!11645 = !DILocation(line: 388, column: 7, scope: !11632)
!11646 = !DILocation(line: 389, column: 9, scope: !11632)
!11647 = !DILocation(line: 389, column: 16, scope: !11632)
!11648 = !DILocation(line: 389, column: 14, scope: !11632)
!11649 = !DILocation(line: 389, column: 2, scope: !11632)
!11650 = !DILocation(line: 389, column: 7, scope: !11632)
!11651 = !DILocation(line: 390, column: 1, scope: !11632)
!11652 = distinct !DISubprogram(name: "uv_align_exec", scope: !3, file: !3, line: 1648, type: !6778, scopeLine: 1649, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!11653 = !DILocalVariable(name: "C", arg: 1, scope: !11652, file: !3, line: 1648, type: !6780)
!11654 = !DILocation(line: 1648, column: 36, scope: !11652)
!11655 = !DILocalVariable(name: "op", arg: 2, scope: !11652, file: !3, line: 1648, type: !6783)
!11656 = !DILocation(line: 1648, column: 51, scope: !11652)
!11657 = !DILocation(line: 1650, column: 16, scope: !11652)
!11658 = !DILocation(line: 1650, column: 32, scope: !11652)
!11659 = !DILocation(line: 1650, column: 36, scope: !11652)
!11660 = !DILocation(line: 1650, column: 19, scope: !11652)
!11661 = !DILocation(line: 1650, column: 2, scope: !11652)
!11662 = !DILocation(line: 1652, column: 2, scope: !11652)
!11663 = distinct !DISubprogram(name: "uv_weld_align", scope: !3, file: !3, line: 1420, type: !11664, scopeLine: 1421, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!11664 = !DISubroutineType(types: !11665)
!11665 = !{null, !6780, !22}
!11666 = !DILocalVariable(name: "C", arg: 1, scope: !11663, file: !3, line: 1420, type: !6780)
!11667 = !DILocation(line: 1420, column: 37, scope: !11663)
!11668 = !DILocalVariable(name: "tool", arg: 2, scope: !11663, file: !3, line: 1420, type: !22)
!11669 = !DILocation(line: 1420, column: 44, scope: !11663)
!11670 = !DILocalVariable(name: "obedit", scope: !11663, file: !3, line: 1422, type: !3588)
!11671 = !DILocation(line: 1422, column: 10, scope: !11663)
!11672 = !DILocation(line: 1422, column: 40, scope: !11663)
!11673 = !DILocation(line: 1422, column: 19, scope: !11663)
!11674 = !DILocalVariable(name: "em", scope: !11663, file: !3, line: 1423, type: !3593)
!11675 = !DILocation(line: 1423, column: 14, scope: !11663)
!11676 = !DILocation(line: 1423, column: 44, scope: !11663)
!11677 = !DILocation(line: 1423, column: 19, scope: !11663)
!11678 = !DILocalVariable(name: "sima", scope: !11663, file: !3, line: 1424, type: !4824)
!11679 = !DILocation(line: 1424, column: 14, scope: !11663)
!11680 = !DILocalVariable(name: "scene", scope: !11663, file: !3, line: 1425, type: !3841)
!11681 = !DILocation(line: 1425, column: 9, scope: !11663)
!11682 = !DILocalVariable(name: "ima", scope: !11663, file: !3, line: 1426, type: !3164)
!11683 = !DILocation(line: 1426, column: 9, scope: !11663)
!11684 = !DILocalVariable(name: "tf", scope: !11663, file: !3, line: 1427, type: !3945)
!11685 = !DILocation(line: 1427, column: 12, scope: !11663)
!11686 = !DILocalVariable(name: "cent", scope: !11663, file: !3, line: 1428, type: !769)
!11687 = !DILocation(line: 1428, column: 8, scope: !11663)
!11688 = !DILocalVariable(name: "min", scope: !11663, file: !3, line: 1428, type: !769)
!11689 = !DILocation(line: 1428, column: 17, scope: !11663)
!11690 = !DILocalVariable(name: "max", scope: !11663, file: !3, line: 1428, type: !769)
!11691 = !DILocation(line: 1428, column: 25, scope: !11663)
!11692 = !DILocalVariable(name: "cd_loop_uv_offset", scope: !11663, file: !3, line: 1430, type: !4165)
!11693 = !DILocation(line: 1430, column: 12, scope: !11663)
!11694 = !DILocation(line: 1430, column: 56, scope: !11663)
!11695 = !DILocation(line: 1430, column: 60, scope: !11663)
!11696 = !DILocation(line: 1430, column: 64, scope: !11663)
!11697 = !DILocation(line: 1430, column: 33, scope: !11663)
!11698 = !DILocalVariable(name: "cd_poly_tex_offset", scope: !11663, file: !3, line: 1431, type: !4165)
!11699 = !DILocation(line: 1431, column: 12, scope: !11663)
!11700 = !DILocation(line: 1431, column: 56, scope: !11663)
!11701 = !DILocation(line: 1431, column: 60, scope: !11663)
!11702 = !DILocation(line: 1431, column: 64, scope: !11663)
!11703 = !DILocation(line: 1431, column: 33, scope: !11663)
!11704 = !DILocation(line: 1433, column: 25, scope: !11663)
!11705 = !DILocation(line: 1433, column: 10, scope: !11663)
!11706 = !DILocation(line: 1433, column: 8, scope: !11663)
!11707 = !DILocation(line: 1434, column: 28, scope: !11663)
!11708 = !DILocation(line: 1434, column: 8, scope: !11663)
!11709 = !DILocation(line: 1434, column: 6, scope: !11663)
!11710 = !DILocation(line: 1435, column: 28, scope: !11663)
!11711 = !DILocation(line: 1435, column: 9, scope: !11663)
!11712 = !DILocation(line: 1435, column: 7, scope: !11663)
!11713 = !DILocation(line: 1437, column: 2, scope: !11714)
!11714 = distinct !DILexicalBlock(scope: !11663, file: !3, line: 1437, column: 2)
!11715 = !DILocation(line: 1439, column: 6, scope: !11716)
!11716 = distinct !DILexicalBlock(scope: !11663, file: !3, line: 1439, column: 6)
!11717 = !DILocation(line: 1439, column: 11, scope: !11716)
!11718 = !DILocation(line: 1439, column: 6, scope: !11663)
!11719 = !DILocalVariable(name: "iter", scope: !11720, file: !3, line: 1440, type: !3856)
!11720 = distinct !DILexicalBlock(scope: !11716, file: !3, line: 1439, column: 19)
!11721 = !DILocation(line: 1440, column: 10, scope: !11720)
!11722 = !DILocalVariable(name: "liter", scope: !11720, file: !3, line: 1440, type: !3856)
!11723 = !DILocation(line: 1440, column: 16, scope: !11720)
!11724 = !DILocalVariable(name: "efa", scope: !11720, file: !3, line: 1441, type: !3238)
!11725 = !DILocation(line: 1441, column: 11, scope: !11720)
!11726 = !DILocalVariable(name: "l", scope: !11720, file: !3, line: 1442, type: !3220)
!11727 = !DILocation(line: 1442, column: 11, scope: !11720)
!11728 = !DILocation(line: 1444, column: 3, scope: !11729)
!11729 = distinct !DILexicalBlock(scope: !11720, file: !3, line: 1444, column: 3)
!11730 = !DILocation(line: 1444, column: 3, scope: !11731)
!11731 = distinct !DILexicalBlock(scope: !11729, file: !3, line: 1444, column: 3)
!11732 = !DILocation(line: 1445, column: 9, scope: !11733)
!11733 = distinct !DILexicalBlock(scope: !11731, file: !3, line: 1444, column: 55)
!11734 = !DILocation(line: 1445, column: 7, scope: !11733)
!11735 = !DILocation(line: 1447, column: 34, scope: !11736)
!11736 = distinct !DILexicalBlock(scope: !11733, file: !3, line: 1447, column: 8)
!11737 = !DILocation(line: 1447, column: 41, scope: !11736)
!11738 = !DILocation(line: 1447, column: 46, scope: !11736)
!11739 = !DILocation(line: 1447, column: 51, scope: !11736)
!11740 = !DILocation(line: 1447, column: 9, scope: !11736)
!11741 = !DILocation(line: 1447, column: 8, scope: !11733)
!11742 = !DILocation(line: 1448, column: 5, scope: !11736)
!11743 = !DILocation(line: 1450, column: 4, scope: !11744)
!11744 = distinct !DILexicalBlock(scope: !11733, file: !3, line: 1450, column: 4)
!11745 = !DILocation(line: 1450, column: 4, scope: !11746)
!11746 = distinct !DILexicalBlock(scope: !11744, file: !3, line: 1450, column: 4)
!11747 = !DILocation(line: 1451, column: 31, scope: !11748)
!11748 = distinct !DILexicalBlock(scope: !11749, file: !3, line: 1451, column: 9)
!11749 = distinct !DILexicalBlock(scope: !11746, file: !3, line: 1450, column: 52)
!11750 = !DILocation(line: 1451, column: 38, scope: !11748)
!11751 = !DILocation(line: 1451, column: 41, scope: !11748)
!11752 = !DILocation(line: 1451, column: 9, scope: !11748)
!11753 = !DILocation(line: 1451, column: 9, scope: !11749)
!11754 = !DILocalVariable(name: "luv", scope: !11755, file: !3, line: 1452, type: !3240)
!11755 = distinct !DILexicalBlock(scope: !11748, file: !3, line: 1451, column: 61)
!11756 = !DILocation(line: 1452, column: 15, scope: !11755)
!11757 = !DILocation(line: 1452, column: 21, scope: !11755)
!11758 = !DILocation(line: 1453, column: 21, scope: !11755)
!11759 = !DILocation(line: 1453, column: 26, scope: !11755)
!11760 = !DILocation(line: 1453, column: 31, scope: !11755)
!11761 = !DILocation(line: 1453, column: 36, scope: !11755)
!11762 = !DILocation(line: 1453, column: 6, scope: !11755)
!11763 = !DILocation(line: 1454, column: 5, scope: !11755)
!11764 = !DILocation(line: 1455, column: 4, scope: !11749)
!11765 = distinct !{!11765, !11743, !11766}
!11766 = !DILocation(line: 1455, column: 4, scope: !11744)
!11767 = !DILocation(line: 1456, column: 3, scope: !11733)
!11768 = distinct !{!11768, !11728, !11769}
!11769 = !DILocation(line: 1456, column: 3, scope: !11729)
!11770 = !DILocation(line: 1458, column: 11, scope: !11720)
!11771 = !DILocation(line: 1458, column: 20, scope: !11720)
!11772 = !DILocation(line: 1458, column: 18, scope: !11720)
!11773 = !DILocation(line: 1458, column: 30, scope: !11720)
!11774 = !DILocation(line: 1458, column: 39, scope: !11720)
!11775 = !DILocation(line: 1458, column: 37, scope: !11720)
!11776 = !DILocation(line: 1458, column: 27, scope: !11720)
!11777 = !DILocation(line: 1458, column: 10, scope: !11720)
!11778 = !DILocation(line: 1458, column: 8, scope: !11720)
!11779 = !DILocation(line: 1459, column: 2, scope: !11720)
!11780 = !DILocation(line: 1461, column: 16, scope: !11663)
!11781 = !DILocation(line: 1461, column: 23, scope: !11663)
!11782 = !DILocation(line: 1461, column: 28, scope: !11663)
!11783 = !DILocation(line: 1461, column: 36, scope: !11663)
!11784 = !DILocation(line: 1461, column: 2, scope: !11663)
!11785 = !DILocation(line: 1463, column: 6, scope: !11786)
!11786 = distinct !DILexicalBlock(scope: !11663, file: !3, line: 1463, column: 6)
!11787 = !DILocation(line: 1463, column: 11, scope: !11786)
!11788 = !DILocation(line: 1463, column: 18, scope: !11786)
!11789 = !DILocation(line: 1463, column: 21, scope: !11786)
!11790 = !DILocation(line: 1463, column: 26, scope: !11786)
!11791 = !DILocation(line: 1463, column: 6, scope: !11663)
!11792 = !DILocalVariable(name: "iter", scope: !11793, file: !3, line: 1464, type: !3856)
!11793 = distinct !DILexicalBlock(scope: !11786, file: !3, line: 1463, column: 34)
!11794 = !DILocation(line: 1464, column: 10, scope: !11793)
!11795 = !DILocalVariable(name: "liter", scope: !11793, file: !3, line: 1464, type: !3856)
!11796 = !DILocation(line: 1464, column: 16, scope: !11793)
!11797 = !DILocalVariable(name: "efa", scope: !11793, file: !3, line: 1465, type: !3238)
!11798 = !DILocation(line: 1465, column: 11, scope: !11793)
!11799 = !DILocalVariable(name: "l", scope: !11793, file: !3, line: 1466, type: !3220)
!11800 = !DILocation(line: 1466, column: 11, scope: !11793)
!11801 = !DILocation(line: 1468, column: 3, scope: !11802)
!11802 = distinct !DILexicalBlock(scope: !11793, file: !3, line: 1468, column: 3)
!11803 = !DILocation(line: 1468, column: 3, scope: !11804)
!11804 = distinct !DILexicalBlock(scope: !11802, file: !3, line: 1468, column: 3)
!11805 = !DILocation(line: 1469, column: 9, scope: !11806)
!11806 = distinct !DILexicalBlock(scope: !11804, file: !3, line: 1468, column: 55)
!11807 = !DILocation(line: 1469, column: 7, scope: !11806)
!11808 = !DILocation(line: 1470, column: 34, scope: !11809)
!11809 = distinct !DILexicalBlock(scope: !11806, file: !3, line: 1470, column: 8)
!11810 = !DILocation(line: 1470, column: 41, scope: !11809)
!11811 = !DILocation(line: 1470, column: 46, scope: !11809)
!11812 = !DILocation(line: 1470, column: 51, scope: !11809)
!11813 = !DILocation(line: 1470, column: 9, scope: !11809)
!11814 = !DILocation(line: 1470, column: 8, scope: !11806)
!11815 = !DILocation(line: 1471, column: 5, scope: !11809)
!11816 = !DILocation(line: 1473, column: 4, scope: !11817)
!11817 = distinct !DILexicalBlock(scope: !11806, file: !3, line: 1473, column: 4)
!11818 = !DILocation(line: 1473, column: 4, scope: !11819)
!11819 = distinct !DILexicalBlock(scope: !11817, file: !3, line: 1473, column: 4)
!11820 = !DILocation(line: 1474, column: 31, scope: !11821)
!11821 = distinct !DILexicalBlock(scope: !11822, file: !3, line: 1474, column: 9)
!11822 = distinct !DILexicalBlock(scope: !11819, file: !3, line: 1473, column: 52)
!11823 = !DILocation(line: 1474, column: 38, scope: !11821)
!11824 = !DILocation(line: 1474, column: 41, scope: !11821)
!11825 = !DILocation(line: 1474, column: 9, scope: !11821)
!11826 = !DILocation(line: 1474, column: 9, scope: !11822)
!11827 = !DILocalVariable(name: "luv", scope: !11828, file: !3, line: 1475, type: !3240)
!11828 = distinct !DILexicalBlock(scope: !11821, file: !3, line: 1474, column: 61)
!11829 = !DILocation(line: 1475, column: 15, scope: !11828)
!11830 = !DILocation(line: 1475, column: 21, scope: !11828)
!11831 = !DILocation(line: 1476, column: 19, scope: !11828)
!11832 = !DILocation(line: 1476, column: 6, scope: !11828)
!11833 = !DILocation(line: 1476, column: 11, scope: !11828)
!11834 = !DILocation(line: 1476, column: 17, scope: !11828)
!11835 = !DILocation(line: 1477, column: 5, scope: !11828)
!11836 = !DILocation(line: 1479, column: 4, scope: !11822)
!11837 = distinct !{!11837, !11816, !11838}
!11838 = !DILocation(line: 1479, column: 4, scope: !11817)
!11839 = !DILocation(line: 1480, column: 3, scope: !11806)
!11840 = distinct !{!11840, !11801, !11841}
!11841 = !DILocation(line: 1480, column: 3, scope: !11802)
!11842 = !DILocation(line: 1481, column: 2, scope: !11793)
!11843 = !DILocation(line: 1483, column: 6, scope: !11844)
!11844 = distinct !DILexicalBlock(scope: !11663, file: !3, line: 1483, column: 6)
!11845 = !DILocation(line: 1483, column: 11, scope: !11844)
!11846 = !DILocation(line: 1483, column: 18, scope: !11844)
!11847 = !DILocation(line: 1483, column: 21, scope: !11844)
!11848 = !DILocation(line: 1483, column: 26, scope: !11844)
!11849 = !DILocation(line: 1483, column: 6, scope: !11663)
!11850 = !DILocalVariable(name: "iter", scope: !11851, file: !3, line: 1484, type: !3856)
!11851 = distinct !DILexicalBlock(scope: !11844, file: !3, line: 1483, column: 34)
!11852 = !DILocation(line: 1484, column: 10, scope: !11851)
!11853 = !DILocalVariable(name: "liter", scope: !11851, file: !3, line: 1484, type: !3856)
!11854 = !DILocation(line: 1484, column: 16, scope: !11851)
!11855 = !DILocalVariable(name: "efa", scope: !11851, file: !3, line: 1485, type: !3238)
!11856 = !DILocation(line: 1485, column: 11, scope: !11851)
!11857 = !DILocalVariable(name: "l", scope: !11851, file: !3, line: 1486, type: !3220)
!11858 = !DILocation(line: 1486, column: 11, scope: !11851)
!11859 = !DILocation(line: 1488, column: 3, scope: !11860)
!11860 = distinct !DILexicalBlock(scope: !11851, file: !3, line: 1488, column: 3)
!11861 = !DILocation(line: 1488, column: 3, scope: !11862)
!11862 = distinct !DILexicalBlock(scope: !11860, file: !3, line: 1488, column: 3)
!11863 = !DILocation(line: 1489, column: 9, scope: !11864)
!11864 = distinct !DILexicalBlock(scope: !11862, file: !3, line: 1488, column: 55)
!11865 = !DILocation(line: 1489, column: 7, scope: !11864)
!11866 = !DILocation(line: 1490, column: 34, scope: !11867)
!11867 = distinct !DILexicalBlock(scope: !11864, file: !3, line: 1490, column: 8)
!11868 = !DILocation(line: 1490, column: 41, scope: !11867)
!11869 = !DILocation(line: 1490, column: 46, scope: !11867)
!11870 = !DILocation(line: 1490, column: 51, scope: !11867)
!11871 = !DILocation(line: 1490, column: 9, scope: !11867)
!11872 = !DILocation(line: 1490, column: 8, scope: !11864)
!11873 = !DILocation(line: 1491, column: 5, scope: !11867)
!11874 = !DILocation(line: 1493, column: 4, scope: !11875)
!11875 = distinct !DILexicalBlock(scope: !11864, file: !3, line: 1493, column: 4)
!11876 = !DILocation(line: 1493, column: 4, scope: !11877)
!11877 = distinct !DILexicalBlock(scope: !11875, file: !3, line: 1493, column: 4)
!11878 = !DILocation(line: 1494, column: 31, scope: !11879)
!11879 = distinct !DILexicalBlock(scope: !11880, file: !3, line: 1494, column: 9)
!11880 = distinct !DILexicalBlock(scope: !11877, file: !3, line: 1493, column: 52)
!11881 = !DILocation(line: 1494, column: 38, scope: !11879)
!11882 = !DILocation(line: 1494, column: 41, scope: !11879)
!11883 = !DILocation(line: 1494, column: 9, scope: !11879)
!11884 = !DILocation(line: 1494, column: 9, scope: !11880)
!11885 = !DILocalVariable(name: "luv", scope: !11886, file: !3, line: 1495, type: !3240)
!11886 = distinct !DILexicalBlock(scope: !11879, file: !3, line: 1494, column: 61)
!11887 = !DILocation(line: 1495, column: 15, scope: !11886)
!11888 = !DILocation(line: 1495, column: 21, scope: !11886)
!11889 = !DILocation(line: 1496, column: 19, scope: !11886)
!11890 = !DILocation(line: 1496, column: 6, scope: !11886)
!11891 = !DILocation(line: 1496, column: 11, scope: !11886)
!11892 = !DILocation(line: 1496, column: 17, scope: !11886)
!11893 = !DILocation(line: 1497, column: 5, scope: !11886)
!11894 = !DILocation(line: 1499, column: 4, scope: !11880)
!11895 = distinct !{!11895, !11874, !11896}
!11896 = !DILocation(line: 1499, column: 4, scope: !11875)
!11897 = !DILocation(line: 1500, column: 3, scope: !11864)
!11898 = distinct !{!11898, !11859, !11899}
!11899 = !DILocation(line: 1500, column: 3, scope: !11860)
!11900 = !DILocation(line: 1501, column: 2, scope: !11851)
!11901 = !DILocation(line: 1503, column: 6, scope: !11902)
!11902 = distinct !DILexicalBlock(scope: !11663, file: !3, line: 1503, column: 6)
!11903 = !DILocation(line: 1503, column: 11, scope: !11902)
!11904 = !DILocation(line: 1503, column: 18, scope: !11902)
!11905 = !DILocation(line: 1503, column: 21, scope: !11902)
!11906 = !DILocation(line: 1503, column: 26, scope: !11902)
!11907 = !DILocation(line: 1503, column: 33, scope: !11902)
!11908 = !DILocation(line: 1503, column: 36, scope: !11902)
!11909 = !DILocation(line: 1503, column: 41, scope: !11902)
!11910 = !DILocation(line: 1503, column: 6, scope: !11663)
!11911 = !DILocalVariable(name: "eed", scope: !11912, file: !3, line: 1504, type: !3236)
!11912 = distinct !DILexicalBlock(scope: !11902, file: !3, line: 1503, column: 49)
!11913 = !DILocation(line: 1504, column: 11, scope: !11912)
!11914 = !DILocalVariable(name: "l", scope: !11912, file: !3, line: 1505, type: !3220)
!11915 = !DILocation(line: 1505, column: 11, scope: !11912)
!11916 = !DILocalVariable(name: "eve", scope: !11912, file: !3, line: 1506, type: !3185)
!11917 = !DILocation(line: 1506, column: 11, scope: !11912)
!11918 = !DILocalVariable(name: "eve_start", scope: !11912, file: !3, line: 1507, type: !3185)
!11919 = !DILocation(line: 1507, column: 11, scope: !11912)
!11920 = !DILocalVariable(name: "iter", scope: !11912, file: !3, line: 1508, type: !3856)
!11921 = !DILocation(line: 1508, column: 10, scope: !11912)
!11922 = !DILocalVariable(name: "liter", scope: !11912, file: !3, line: 1508, type: !3856)
!11923 = !DILocation(line: 1508, column: 16, scope: !11912)
!11924 = !DILocalVariable(name: "eiter", scope: !11912, file: !3, line: 1508, type: !3856)
!11925 = !DILocation(line: 1508, column: 23, scope: !11912)
!11926 = !DILocation(line: 1511, column: 3, scope: !11927)
!11927 = distinct !DILexicalBlock(scope: !11912, file: !3, line: 1511, column: 3)
!11928 = !DILocation(line: 1511, column: 3, scope: !11929)
!11929 = distinct !DILexicalBlock(scope: !11927, file: !3, line: 1511, column: 3)
!11930 = !DILocation(line: 1512, column: 4, scope: !11931)
!11931 = distinct !DILexicalBlock(scope: !11929, file: !3, line: 1511, column: 55)
!11932 = !DILocation(line: 1513, column: 3, scope: !11931)
!11933 = distinct !{!11933, !11926, !11934}
!11934 = !DILocation(line: 1513, column: 3, scope: !11927)
!11935 = !DILocation(line: 1516, column: 3, scope: !11936)
!11936 = distinct !DILexicalBlock(scope: !11912, file: !3, line: 1516, column: 3)
!11937 = !DILocation(line: 1516, column: 3, scope: !11938)
!11938 = distinct !DILexicalBlock(scope: !11936, file: !3, line: 1516, column: 3)
!11939 = !DILocation(line: 1517, column: 4, scope: !11940)
!11940 = distinct !DILexicalBlock(scope: !11941, file: !3, line: 1517, column: 4)
!11941 = distinct !DILexicalBlock(scope: !11938, file: !3, line: 1516, column: 55)
!11942 = !DILocation(line: 1517, column: 4, scope: !11943)
!11943 = distinct !DILexicalBlock(scope: !11940, file: !3, line: 1517, column: 4)
!11944 = !DILocation(line: 1518, column: 10, scope: !11945)
!11945 = distinct !DILexicalBlock(scope: !11943, file: !3, line: 1517, column: 52)
!11946 = !DILocation(line: 1518, column: 8, scope: !11945)
!11947 = !DILocation(line: 1520, column: 35, scope: !11948)
!11948 = distinct !DILexicalBlock(scope: !11945, file: !3, line: 1520, column: 9)
!11949 = !DILocation(line: 1520, column: 42, scope: !11948)
!11950 = !DILocation(line: 1520, column: 47, scope: !11948)
!11951 = !DILocation(line: 1520, column: 50, scope: !11948)
!11952 = !DILocation(line: 1520, column: 53, scope: !11948)
!11953 = !DILocation(line: 1520, column: 10, scope: !11948)
!11954 = !DILocation(line: 1520, column: 9, scope: !11945)
!11955 = !DILocation(line: 1521, column: 6, scope: !11948)
!11956 = !DILocation(line: 1523, column: 31, scope: !11957)
!11957 = distinct !DILexicalBlock(scope: !11945, file: !3, line: 1523, column: 9)
!11958 = !DILocation(line: 1523, column: 38, scope: !11957)
!11959 = !DILocation(line: 1523, column: 41, scope: !11957)
!11960 = !DILocation(line: 1523, column: 9, scope: !11957)
!11961 = !DILocation(line: 1523, column: 9, scope: !11945)
!11962 = !DILocation(line: 1524, column: 6, scope: !11963)
!11963 = distinct !DILexicalBlock(scope: !11957, file: !3, line: 1523, column: 61)
!11964 = !DILocation(line: 1525, column: 6, scope: !11963)
!11965 = !DILocation(line: 1527, column: 4, scope: !11945)
!11966 = distinct !{!11966, !11939, !11967}
!11967 = !DILocation(line: 1527, column: 4, scope: !11940)
!11968 = !DILocation(line: 1528, column: 3, scope: !11941)
!11969 = distinct !{!11969, !11935, !11970}
!11970 = !DILocation(line: 1528, column: 3, scope: !11936)
!11971 = !DILocation(line: 1531, column: 3, scope: !11972)
!11972 = distinct !DILexicalBlock(scope: !11912, file: !3, line: 1531, column: 3)
!11973 = !DILocation(line: 1531, column: 3, scope: !11974)
!11974 = distinct !DILexicalBlock(scope: !11972, file: !3, line: 1531, column: 3)
!11975 = !DILocation(line: 1532, column: 4, scope: !11976)
!11976 = distinct !DILexicalBlock(scope: !11974, file: !3, line: 1531, column: 55)
!11977 = !DILocation(line: 0, scope: !11976)
!11978 = !DILocation(line: 1534, column: 3, scope: !11976)
!11979 = distinct !{!11979, !11971, !11980}
!11980 = !DILocation(line: 1534, column: 3, scope: !11972)
!11981 = !DILocation(line: 1537, column: 13, scope: !11912)
!11982 = !DILocation(line: 1538, column: 3, scope: !11983)
!11983 = distinct !DILexicalBlock(scope: !11912, file: !3, line: 1538, column: 3)
!11984 = !DILocation(line: 1538, column: 3, scope: !11985)
!11985 = distinct !DILexicalBlock(scope: !11983, file: !3, line: 1538, column: 3)
!11986 = !DILocalVariable(name: "tot_eed_tag", scope: !11987, file: !3, line: 1539, type: !22)
!11987 = distinct !DILexicalBlock(scope: !11985, file: !3, line: 1538, column: 55)
!11988 = !DILocation(line: 1539, column: 8, scope: !11987)
!11989 = !DILocation(line: 1540, column: 4, scope: !11990)
!11990 = distinct !DILexicalBlock(scope: !11987, file: !3, line: 1540, column: 4)
!11991 = !DILocation(line: 1540, column: 4, scope: !11992)
!11992 = distinct !DILexicalBlock(scope: !11990, file: !3, line: 1540, column: 4)
!11993 = !DILocation(line: 1541, column: 9, scope: !11994)
!11994 = distinct !DILexicalBlock(scope: !11995, file: !3, line: 1541, column: 9)
!11995 = distinct !DILexicalBlock(scope: !11992, file: !3, line: 1540, column: 54)
!11996 = !DILocation(line: 1541, column: 9, scope: !11995)
!11997 = !DILocation(line: 1542, column: 17, scope: !11998)
!11998 = distinct !DILexicalBlock(scope: !11994, file: !3, line: 1541, column: 46)
!11999 = !DILocation(line: 1543, column: 5, scope: !11998)
!12000 = !DILocation(line: 1544, column: 4, scope: !11995)
!12001 = distinct !{!12001, !11989, !12002}
!12002 = !DILocation(line: 1544, column: 4, scope: !11990)
!12003 = !DILocation(line: 1546, column: 8, scope: !12004)
!12004 = distinct !DILexicalBlock(scope: !11987, file: !3, line: 1546, column: 8)
!12005 = !DILocation(line: 1546, column: 20, scope: !12004)
!12006 = !DILocation(line: 1546, column: 8, scope: !11987)
!12007 = !DILocation(line: 1547, column: 17, scope: !12008)
!12008 = distinct !DILexicalBlock(scope: !12004, file: !3, line: 1546, column: 26)
!12009 = !DILocation(line: 1547, column: 15, scope: !12008)
!12010 = !DILocation(line: 1548, column: 5, scope: !12008)
!12011 = !DILocation(line: 1550, column: 3, scope: !11987)
!12012 = distinct !{!12012, !11982, !12013}
!12013 = !DILocation(line: 1550, column: 3, scope: !11983)
!12014 = !DILocation(line: 1552, column: 7, scope: !12015)
!12015 = distinct !DILexicalBlock(scope: !11912, file: !3, line: 1552, column: 7)
!12016 = !DILocation(line: 1552, column: 7, scope: !11912)
!12017 = !DILocalVariable(name: "eve_line", scope: !12018, file: !3, line: 1553, type: !3391)
!12018 = distinct !DILexicalBlock(scope: !12015, file: !3, line: 1552, column: 18)
!12019 = !DILocation(line: 1553, column: 13, scope: !12018)
!12020 = !DILocalVariable(name: "eve_next", scope: !12018, file: !3, line: 1554, type: !3185)
!12021 = !DILocation(line: 1554, column: 12, scope: !12018)
!12022 = !DILocalVariable(name: "_eve_line_count", scope: !12018, file: !3, line: 1555, type: !22)
!12023 = !DILocation(line: 1555, column: 4, scope: !12018)
!12024 = !DILocalVariable(name: "_eve_line_static", scope: !12018, file: !3, line: 1555, type: !56)
!12025 = !DILocalVariable(name: "i", scope: !12018, file: !3, line: 1556, type: !22)
!12026 = !DILocation(line: 1556, column: 8, scope: !12018)
!12027 = !DILocation(line: 1558, column: 10, scope: !12018)
!12028 = !DILocation(line: 1558, column: 8, scope: !12018)
!12029 = !DILocation(line: 1561, column: 4, scope: !12018)
!12030 = !DILocation(line: 1561, column: 11, scope: !12018)
!12031 = !DILocation(line: 1562, column: 5, scope: !12032)
!12032 = distinct !DILexicalBlock(scope: !12018, file: !3, line: 1561, column: 16)
!12033 = !DILocation(line: 1564, column: 5, scope: !12032)
!12034 = !DILocation(line: 1566, column: 14, scope: !12032)
!12035 = !DILocation(line: 1569, column: 5, scope: !12036)
!12036 = distinct !DILexicalBlock(scope: !12032, file: !3, line: 1569, column: 5)
!12037 = !DILocation(line: 1569, column: 5, scope: !12038)
!12038 = distinct !DILexicalBlock(scope: !12036, file: !3, line: 1569, column: 5)
!12039 = !DILocation(line: 1570, column: 10, scope: !12040)
!12040 = distinct !DILexicalBlock(scope: !12041, file: !3, line: 1570, column: 10)
!12041 = distinct !DILexicalBlock(scope: !12038, file: !3, line: 1569, column: 55)
!12042 = !DILocation(line: 1570, column: 10, scope: !12041)
!12043 = !DILocalVariable(name: "eve_other", scope: !12044, file: !3, line: 1571, type: !3185)
!12044 = distinct !DILexicalBlock(scope: !12040, file: !3, line: 1570, column: 47)
!12045 = !DILocation(line: 1571, column: 15, scope: !12044)
!12046 = !DILocation(line: 1571, column: 46, scope: !12044)
!12047 = !DILocation(line: 1571, column: 51, scope: !12044)
!12048 = !DILocation(line: 1571, column: 27, scope: !12044)
!12049 = !DILocation(line: 1572, column: 11, scope: !12050)
!12050 = distinct !DILexicalBlock(scope: !12044, file: !3, line: 1572, column: 11)
!12051 = !DILocation(line: 1572, column: 11, scope: !12044)
!12052 = !DILocation(line: 1574, column: 19, scope: !12053)
!12053 = distinct !DILexicalBlock(scope: !12050, file: !3, line: 1572, column: 54)
!12054 = !DILocation(line: 1574, column: 17, scope: !12053)
!12055 = !DILocation(line: 1575, column: 8, scope: !12053)
!12056 = !DILocation(line: 1577, column: 6, scope: !12044)
!12057 = !DILocation(line: 1578, column: 5, scope: !12041)
!12058 = distinct !{!12058, !12035, !12059}
!12059 = !DILocation(line: 1578, column: 5, scope: !12036)
!12060 = !DILocation(line: 1580, column: 11, scope: !12032)
!12061 = !DILocation(line: 1580, column: 9, scope: !12032)
!12062 = distinct !{!12062, !12029, !12063}
!12063 = !DILocation(line: 1581, column: 4, scope: !12018)
!12064 = !DILocation(line: 1584, column: 8, scope: !12065)
!12065 = distinct !DILexicalBlock(scope: !12018, file: !3, line: 1584, column: 8)
!12066 = !DILocation(line: 1584, column: 34, scope: !12065)
!12067 = !DILocation(line: 1584, column: 8, scope: !12018)
!12068 = !DILocalVariable(name: "uv_start", scope: !12069, file: !3, line: 1587, type: !4976)
!12069 = distinct !DILexicalBlock(scope: !12065, file: !3, line: 1584, column: 39)
!12070 = !DILocation(line: 1587, column: 18, scope: !12069)
!12071 = !DILocation(line: 1587, column: 48, scope: !12069)
!12072 = !DILocation(line: 1587, column: 55, scope: !12069)
!12073 = !DILocation(line: 1587, column: 60, scope: !12069)
!12074 = !DILocation(line: 1587, column: 64, scope: !12069)
!12075 = !DILocation(line: 1587, column: 29, scope: !12069)
!12076 = !DILocalVariable(name: "uv_end", scope: !12069, file: !3, line: 1588, type: !4976)
!12077 = !DILocation(line: 1588, column: 18, scope: !12069)
!12078 = !DILocation(line: 1588, column: 48, scope: !12069)
!12079 = !DILocation(line: 1588, column: 55, scope: !12069)
!12080 = !DILocation(line: 1588, column: 60, scope: !12069)
!12081 = !DILocation(line: 1588, column: 64, scope: !12069)
!12082 = !DILocation(line: 1588, column: 73, scope: !12069)
!12083 = !DILocation(line: 1588, column: 99, scope: !12069)
!12084 = !DILocation(line: 1588, column: 29, scope: !12069)
!12085 = !DILocalVariable(name: "a", scope: !12069, file: !3, line: 1590, type: !192)
!12086 = !DILocation(line: 1590, column: 11, scope: !12069)
!12087 = !DILocation(line: 1592, column: 9, scope: !12088)
!12088 = distinct !DILexicalBlock(scope: !12069, file: !3, line: 1592, column: 9)
!12089 = !DILocation(line: 1592, column: 14, scope: !12088)
!12090 = !DILocation(line: 1592, column: 9, scope: !12069)
!12091 = !DILocation(line: 1593, column: 10, scope: !12092)
!12092 = distinct !DILexicalBlock(scope: !12093, file: !3, line: 1593, column: 10)
!12093 = distinct !DILexicalBlock(scope: !12088, file: !3, line: 1592, column: 22)
!12094 = !DILocation(line: 1593, column: 25, scope: !12092)
!12095 = !DILocation(line: 1593, column: 22, scope: !12092)
!12096 = !DILocation(line: 1593, column: 10, scope: !12093)
!12097 = !DILocation(line: 1594, column: 12, scope: !12092)
!12098 = !DILocation(line: 1594, column: 7, scope: !12092)
!12099 = !DILocation(line: 1596, column: 12, scope: !12092)
!12100 = !DILocation(line: 1596, column: 24, scope: !12092)
!12101 = !DILocation(line: 1596, column: 22, scope: !12092)
!12102 = !DILocation(line: 1596, column: 40, scope: !12092)
!12103 = !DILocation(line: 1596, column: 52, scope: !12092)
!12104 = !DILocation(line: 1596, column: 50, scope: !12092)
!12105 = !DILocation(line: 1596, column: 37, scope: !12092)
!12106 = !DILocation(line: 1596, column: 9, scope: !12092)
!12107 = !DILocation(line: 1597, column: 5, scope: !12093)
!12108 = !DILocation(line: 1598, column: 14, scope: !12109)
!12109 = distinct !DILexicalBlock(scope: !12088, file: !3, line: 1598, column: 14)
!12110 = !DILocation(line: 1598, column: 19, scope: !12109)
!12111 = !DILocation(line: 1598, column: 14, scope: !12088)
!12112 = !DILocation(line: 1599, column: 10, scope: !12113)
!12113 = distinct !DILexicalBlock(scope: !12114, file: !3, line: 1599, column: 10)
!12114 = distinct !DILexicalBlock(scope: !12109, file: !3, line: 1598, column: 27)
!12115 = !DILocation(line: 1599, column: 25, scope: !12113)
!12116 = !DILocation(line: 1599, column: 22, scope: !12113)
!12117 = !DILocation(line: 1599, column: 10, scope: !12114)
!12118 = !DILocation(line: 1600, column: 12, scope: !12113)
!12119 = !DILocation(line: 1600, column: 7, scope: !12113)
!12120 = !DILocation(line: 1602, column: 12, scope: !12113)
!12121 = !DILocation(line: 1602, column: 24, scope: !12113)
!12122 = !DILocation(line: 1602, column: 22, scope: !12113)
!12123 = !DILocation(line: 1602, column: 40, scope: !12113)
!12124 = !DILocation(line: 1602, column: 52, scope: !12113)
!12125 = !DILocation(line: 1602, column: 50, scope: !12113)
!12126 = !DILocation(line: 1602, column: 37, scope: !12113)
!12127 = !DILocation(line: 1602, column: 9, scope: !12113)
!12128 = !DILocation(line: 1603, column: 5, scope: !12114)
!12129 = !DILocation(line: 1606, column: 12, scope: !12130)
!12130 = distinct !DILexicalBlock(scope: !12069, file: !3, line: 1606, column: 5)
!12131 = !DILocation(line: 1606, column: 10, scope: !12130)
!12132 = !DILocation(line: 1606, column: 17, scope: !12133)
!12133 = distinct !DILexicalBlock(scope: !12130, file: !3, line: 1606, column: 5)
!12134 = !DILocation(line: 1606, column: 21, scope: !12133)
!12135 = !DILocation(line: 1606, column: 19, scope: !12133)
!12136 = !DILocation(line: 1606, column: 5, scope: !12130)
!12137 = !DILocation(line: 1607, column: 6, scope: !12138)
!12138 = distinct !DILexicalBlock(scope: !12139, file: !3, line: 1607, column: 6)
!12139 = distinct !DILexicalBlock(scope: !12133, file: !3, line: 1606, column: 53)
!12140 = !DILocation(line: 1607, column: 6, scope: !12141)
!12141 = distinct !DILexicalBlock(scope: !12138, file: !3, line: 1607, column: 6)
!12142 = !DILocation(line: 1608, column: 12, scope: !12143)
!12143 = distinct !DILexicalBlock(scope: !12141, file: !3, line: 1607, column: 62)
!12144 = !DILocation(line: 1608, column: 10, scope: !12143)
!12145 = !DILocation(line: 1610, column: 37, scope: !12146)
!12146 = distinct !DILexicalBlock(scope: !12143, file: !3, line: 1610, column: 11)
!12147 = !DILocation(line: 1610, column: 44, scope: !12146)
!12148 = !DILocation(line: 1610, column: 49, scope: !12146)
!12149 = !DILocation(line: 1610, column: 52, scope: !12146)
!12150 = !DILocation(line: 1610, column: 55, scope: !12146)
!12151 = !DILocation(line: 1610, column: 12, scope: !12146)
!12152 = !DILocation(line: 1610, column: 11, scope: !12143)
!12153 = !DILocation(line: 1611, column: 8, scope: !12146)
!12154 = !DILocation(line: 1613, column: 33, scope: !12155)
!12155 = distinct !DILexicalBlock(scope: !12143, file: !3, line: 1613, column: 11)
!12156 = !DILocation(line: 1613, column: 40, scope: !12155)
!12157 = !DILocation(line: 1613, column: 43, scope: !12155)
!12158 = !DILocation(line: 1613, column: 11, scope: !12155)
!12159 = !DILocation(line: 1613, column: 11, scope: !12143)
!12160 = !DILocalVariable(name: "luv", scope: !12161, file: !3, line: 1614, type: !3240)
!12161 = distinct !DILexicalBlock(scope: !12155, file: !3, line: 1613, column: 63)
!12162 = !DILocation(line: 1614, column: 17, scope: !12161)
!12163 = !DILocation(line: 1614, column: 23, scope: !12161)
!12164 = !DILocation(line: 1619, column: 12, scope: !12165)
!12165 = distinct !DILexicalBlock(scope: !12161, file: !3, line: 1619, column: 12)
!12166 = !DILocation(line: 1619, column: 17, scope: !12165)
!12167 = !DILocation(line: 1619, column: 12, scope: !12161)
!12168 = !DILocation(line: 1620, column: 22, scope: !12165)
!12169 = !DILocation(line: 1620, column: 27, scope: !12165)
!12170 = !DILocation(line: 1620, column: 32, scope: !12165)
!12171 = !DILocation(line: 1620, column: 40, scope: !12165)
!12172 = !DILocation(line: 1620, column: 38, scope: !12165)
!12173 = !DILocation(line: 1620, column: 24, scope: !12165)
!12174 = !DILocation(line: 1620, column: 55, scope: !12165)
!12175 = !DILocation(line: 1620, column: 53, scope: !12165)
!12176 = !DILocation(line: 1620, column: 9, scope: !12165)
!12177 = !DILocation(line: 1620, column: 14, scope: !12165)
!12178 = !DILocation(line: 1620, column: 20, scope: !12165)
!12179 = !DILocation(line: 1621, column: 17, scope: !12180)
!12180 = distinct !DILexicalBlock(scope: !12165, file: !3, line: 1621, column: 17)
!12181 = !DILocation(line: 1621, column: 22, scope: !12180)
!12182 = !DILocation(line: 1621, column: 17, scope: !12165)
!12183 = !DILocation(line: 1622, column: 22, scope: !12180)
!12184 = !DILocation(line: 1622, column: 27, scope: !12180)
!12185 = !DILocation(line: 1622, column: 32, scope: !12180)
!12186 = !DILocation(line: 1622, column: 40, scope: !12180)
!12187 = !DILocation(line: 1622, column: 38, scope: !12180)
!12188 = !DILocation(line: 1622, column: 24, scope: !12180)
!12189 = !DILocation(line: 1622, column: 55, scope: !12180)
!12190 = !DILocation(line: 1622, column: 53, scope: !12180)
!12191 = !DILocation(line: 1622, column: 9, scope: !12180)
!12192 = !DILocation(line: 1622, column: 14, scope: !12180)
!12193 = !DILocation(line: 1622, column: 20, scope: !12180)
!12194 = !DILocation(line: 1624, column: 36, scope: !12180)
!12195 = !DILocation(line: 1624, column: 41, scope: !12180)
!12196 = !DILocation(line: 1624, column: 45, scope: !12180)
!12197 = !DILocation(line: 1624, column: 50, scope: !12180)
!12198 = !DILocation(line: 1624, column: 54, scope: !12180)
!12199 = !DILocation(line: 1624, column: 64, scope: !12180)
!12200 = !DILocation(line: 1624, column: 9, scope: !12180)
!12201 = !DILocation(line: 1625, column: 7, scope: !12161)
!12202 = !DILocation(line: 1626, column: 6, scope: !12143)
!12203 = distinct !{!12203, !12137, !12204}
!12204 = !DILocation(line: 1626, column: 6, scope: !12138)
!12205 = !DILocation(line: 1627, column: 5, scope: !12139)
!12206 = !DILocation(line: 1606, column: 49, scope: !12133)
!12207 = !DILocation(line: 1606, column: 5, scope: !12133)
!12208 = distinct !{!12208, !12136, !12209}
!12209 = !DILocation(line: 1627, column: 5, scope: !12130)
!12210 = !DILocation(line: 1628, column: 4, scope: !12069)
!12211 = !DILocation(line: 1633, column: 8, scope: !12212)
!12212 = distinct !DILexicalBlock(scope: !12018, file: !3, line: 1633, column: 8)
!12213 = !DILocation(line: 1633, column: 8, scope: !12018)
!12214 = !DILocation(line: 1634, column: 5, scope: !12215)
!12215 = distinct !DILexicalBlock(scope: !12212, file: !3, line: 1633, column: 18)
!12216 = !DILocation(line: 1634, column: 15, scope: !12215)
!12217 = !DILocation(line: 1635, column: 4, scope: !12215)
!12218 = !DILocation(line: 1636, column: 3, scope: !12018)
!12219 = !DILocation(line: 1640, column: 2, scope: !11912)
!12220 = !DILocation(line: 1643, column: 28, scope: !11663)
!12221 = !DILocation(line: 1643, column: 34, scope: !11663)
!12222 = !DILocation(line: 1643, column: 41, scope: !11663)
!12223 = !DILocation(line: 1643, column: 2, scope: !11663)
!12224 = !DILocation(line: 1644, column: 20, scope: !11663)
!12225 = !DILocation(line: 1644, column: 28, scope: !11663)
!12226 = !DILocation(line: 1644, column: 2, scope: !11663)
!12227 = !DILocation(line: 1645, column: 24, scope: !11663)
!12228 = !DILocation(line: 1645, column: 46, scope: !11663)
!12229 = !DILocation(line: 1645, column: 54, scope: !11663)
!12230 = !DILocation(line: 1645, column: 2, scope: !11663)
!12231 = !DILocation(line: 1646, column: 1, scope: !11663)
!12232 = distinct !DISubprogram(name: "BM_edge_other_vert", scope: !12233, file: !12233, line: 60, type: !12234, scopeLine: 61, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!12233 = !DIFile(filename: "blender/source/blender/bmesh/intern/bmesh_queries_inline.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!12234 = !DISubroutineType(types: !12235)
!12235 = !{!3185, !3236, !12236}
!12236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12237, size: 64)
!12237 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3186)
!12238 = !DILocalVariable(name: "e", arg: 1, scope: !12232, file: !12233, line: 60, type: !3236)
!12239 = !DILocation(line: 60, column: 47, scope: !12232)
!12240 = !DILocalVariable(name: "v", arg: 2, scope: !12232, file: !12233, line: 60, type: !12236)
!12241 = !DILocation(line: 60, column: 64, scope: !12232)
!12242 = !DILocation(line: 62, column: 6, scope: !12243)
!12243 = distinct !DILexicalBlock(scope: !12232, file: !12233, line: 62, column: 6)
!12244 = !DILocation(line: 62, column: 9, scope: !12243)
!12245 = !DILocation(line: 62, column: 15, scope: !12243)
!12246 = !DILocation(line: 62, column: 12, scope: !12243)
!12247 = !DILocation(line: 62, column: 6, scope: !12232)
!12248 = !DILocation(line: 63, column: 10, scope: !12249)
!12249 = distinct !DILexicalBlock(scope: !12243, file: !12233, line: 62, column: 18)
!12250 = !DILocation(line: 63, column: 13, scope: !12249)
!12251 = !DILocation(line: 63, column: 3, scope: !12249)
!12252 = !DILocation(line: 65, column: 11, scope: !12253)
!12253 = distinct !DILexicalBlock(scope: !12243, file: !12233, line: 65, column: 11)
!12254 = !DILocation(line: 65, column: 14, scope: !12253)
!12255 = !DILocation(line: 65, column: 20, scope: !12253)
!12256 = !DILocation(line: 65, column: 17, scope: !12253)
!12257 = !DILocation(line: 65, column: 11, scope: !12243)
!12258 = !DILocation(line: 66, column: 10, scope: !12259)
!12259 = distinct !DILexicalBlock(scope: !12253, file: !12233, line: 65, column: 23)
!12260 = !DILocation(line: 66, column: 13, scope: !12259)
!12261 = !DILocation(line: 66, column: 3, scope: !12259)
!12262 = !DILocation(line: 68, column: 2, scope: !12232)
!12263 = !DILocation(line: 69, column: 1, scope: !12232)
!12264 = distinct !DISubprogram(name: "uv_sel_co_from_eve", scope: !3, file: !3, line: 1253, type: !12265, scopeLine: 1254, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!12265 = !DISubroutineType(types: !12266)
!12266 = !{!630, !3841, !3164, !3593, !3185}
!12267 = !DILocalVariable(name: "scene", arg: 1, scope: !12264, file: !3, line: 1253, type: !3841)
!12268 = !DILocation(line: 1253, column: 41, scope: !12264)
!12269 = !DILocalVariable(name: "ima", arg: 2, scope: !12264, file: !3, line: 1253, type: !3164)
!12270 = !DILocation(line: 1253, column: 55, scope: !12264)
!12271 = !DILocalVariable(name: "em", arg: 3, scope: !12264, file: !3, line: 1253, type: !3593)
!12272 = !DILocation(line: 1253, column: 72, scope: !12264)
!12273 = !DILocalVariable(name: "eve", arg: 4, scope: !12264, file: !3, line: 1253, type: !3185)
!12274 = !DILocation(line: 1253, column: 84, scope: !12264)
!12275 = !DILocalVariable(name: "liter", scope: !12264, file: !3, line: 1255, type: !3856)
!12276 = !DILocation(line: 1255, column: 9, scope: !12264)
!12277 = !DILocalVariable(name: "l", scope: !12264, file: !3, line: 1256, type: !3220)
!12278 = !DILocation(line: 1256, column: 10, scope: !12264)
!12279 = !DILocalVariable(name: "cd_loop_uv_offset", scope: !12264, file: !3, line: 1258, type: !4165)
!12280 = !DILocation(line: 1258, column: 12, scope: !12264)
!12281 = !DILocation(line: 1258, column: 56, scope: !12264)
!12282 = !DILocation(line: 1258, column: 60, scope: !12264)
!12283 = !DILocation(line: 1258, column: 64, scope: !12264)
!12284 = !DILocation(line: 1258, column: 33, scope: !12264)
!12285 = !DILocalVariable(name: "cd_poly_tex_offset", scope: !12264, file: !3, line: 1259, type: !4165)
!12286 = !DILocation(line: 1259, column: 12, scope: !12264)
!12287 = !DILocation(line: 1259, column: 56, scope: !12264)
!12288 = !DILocation(line: 1259, column: 60, scope: !12264)
!12289 = !DILocation(line: 1259, column: 64, scope: !12264)
!12290 = !DILocation(line: 1259, column: 33, scope: !12264)
!12291 = !DILocation(line: 1261, column: 2, scope: !12292)
!12292 = distinct !DILexicalBlock(scope: !12264, file: !3, line: 1261, column: 2)
!12293 = !DILocation(line: 1261, column: 2, scope: !12294)
!12294 = distinct !DILexicalBlock(scope: !12292, file: !3, line: 1261, column: 2)
!12295 = !DILocalVariable(name: "tf", scope: !12296, file: !3, line: 1262, type: !3945)
!12296 = distinct !DILexicalBlock(scope: !12294, file: !3, line: 1261, column: 50)
!12297 = !DILocation(line: 1262, column: 13, scope: !12296)
!12298 = !DILocation(line: 1262, column: 18, scope: !12296)
!12299 = !DILocation(line: 1264, column: 33, scope: !12300)
!12300 = distinct !DILexicalBlock(scope: !12296, file: !3, line: 1264, column: 7)
!12301 = !DILocation(line: 1264, column: 40, scope: !12300)
!12302 = !DILocation(line: 1264, column: 45, scope: !12300)
!12303 = !DILocation(line: 1264, column: 48, scope: !12300)
!12304 = !DILocation(line: 1264, column: 51, scope: !12300)
!12305 = !DILocation(line: 1264, column: 8, scope: !12300)
!12306 = !DILocation(line: 1264, column: 7, scope: !12296)
!12307 = !DILocation(line: 1265, column: 4, scope: !12300)
!12308 = !DILocation(line: 1267, column: 29, scope: !12309)
!12309 = distinct !DILexicalBlock(scope: !12296, file: !3, line: 1267, column: 7)
!12310 = !DILocation(line: 1267, column: 36, scope: !12309)
!12311 = !DILocation(line: 1267, column: 39, scope: !12309)
!12312 = !DILocation(line: 1267, column: 7, scope: !12309)
!12313 = !DILocation(line: 1267, column: 7, scope: !12296)
!12314 = !DILocalVariable(name: "luv", scope: !12315, file: !3, line: 1268, type: !3240)
!12315 = distinct !DILexicalBlock(scope: !12309, file: !3, line: 1267, column: 59)
!12316 = !DILocation(line: 1268, column: 13, scope: !12315)
!12317 = !DILocation(line: 1268, column: 19, scope: !12315)
!12318 = !DILocation(line: 1269, column: 11, scope: !12315)
!12319 = !DILocation(line: 1269, column: 16, scope: !12315)
!12320 = !DILocation(line: 1269, column: 4, scope: !12315)
!12321 = !DILocation(line: 1271, column: 2, scope: !12296)
!12322 = distinct !{!12322, !12291, !12323}
!12323 = !DILocation(line: 1271, column: 2, scope: !12292)
!12324 = !DILocation(line: 1273, column: 2, scope: !12264)
!12325 = !DILocation(line: 1274, column: 1, scope: !12264)
!12326 = distinct !DISubprogram(name: "uv_seams_from_islands_exec", scope: !3, file: !3, line: 3955, type: !6778, scopeLine: 3956, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!12327 = !DILocalVariable(name: "C", arg: 1, scope: !12326, file: !3, line: 3955, type: !6780)
!12328 = !DILocation(line: 3955, column: 49, scope: !12326)
!12329 = !DILocalVariable(name: "op", arg: 2, scope: !12326, file: !3, line: 3955, type: !6783)
!12330 = !DILocation(line: 3955, column: 64, scope: !12326)
!12331 = !DILocalVariable(name: "vmap", scope: !12326, file: !3, line: 3957, type: !7798)
!12332 = !DILocation(line: 3957, column: 13, scope: !12326)
!12333 = !DILocalVariable(name: "ob", scope: !12326, file: !3, line: 3958, type: !3588)
!12334 = !DILocation(line: 3958, column: 10, scope: !12326)
!12335 = !DILocation(line: 3958, column: 36, scope: !12326)
!12336 = !DILocation(line: 3958, column: 15, scope: !12326)
!12337 = !DILocalVariable(name: "me", scope: !12326, file: !3, line: 3959, type: !3249)
!12338 = !DILocation(line: 3959, column: 8, scope: !12326)
!12339 = !DILocation(line: 3959, column: 21, scope: !12326)
!12340 = !DILocation(line: 3959, column: 25, scope: !12326)
!12341 = !DILocation(line: 3959, column: 13, scope: !12326)
!12342 = !DILocalVariable(name: "em", scope: !12326, file: !3, line: 3960, type: !3593)
!12343 = !DILocation(line: 3960, column: 14, scope: !12326)
!12344 = !DILocalVariable(name: "editedge", scope: !12326, file: !3, line: 3961, type: !3236)
!12345 = !DILocation(line: 3961, column: 10, scope: !12326)
!12346 = !DILocalVariable(name: "limit", scope: !12326, file: !3, line: 3962, type: !769)
!12347 = !DILocation(line: 3962, column: 8, scope: !12326)
!12348 = !DILocalVariable(name: "mark_seams", scope: !12326, file: !3, line: 3963, type: !3951)
!12349 = !DILocation(line: 3963, column: 13, scope: !12326)
!12350 = !DILocation(line: 3963, column: 42, scope: !12326)
!12351 = !DILocation(line: 3963, column: 46, scope: !12326)
!12352 = !DILocation(line: 3963, column: 26, scope: !12326)
!12353 = !DILocalVariable(name: "mark_sharp", scope: !12326, file: !3, line: 3964, type: !3951)
!12354 = !DILocation(line: 3964, column: 13, scope: !12326)
!12355 = !DILocation(line: 3964, column: 42, scope: !12326)
!12356 = !DILocation(line: 3964, column: 46, scope: !12326)
!12357 = !DILocation(line: 3964, column: 26, scope: !12326)
!12358 = !DILocalVariable(name: "bm", scope: !12326, file: !3, line: 3966, type: !3441)
!12359 = !DILocation(line: 3966, column: 9, scope: !12326)
!12360 = !DILocalVariable(name: "iter", scope: !12326, file: !3, line: 3967, type: !3856)
!12361 = !DILocation(line: 3967, column: 9, scope: !12326)
!12362 = !DILocation(line: 3969, column: 7, scope: !12326)
!12363 = !DILocation(line: 3969, column: 11, scope: !12326)
!12364 = !DILocation(line: 3969, column: 5, scope: !12326)
!12365 = !DILocation(line: 3970, column: 7, scope: !12326)
!12366 = !DILocation(line: 3970, column: 11, scope: !12326)
!12367 = !DILocation(line: 3970, column: 5, scope: !12326)
!12368 = !DILocation(line: 3972, column: 27, scope: !12369)
!12369 = distinct !DILexicalBlock(scope: !12326, file: !3, line: 3972, column: 6)
!12370 = !DILocation(line: 3972, column: 7, scope: !12369)
!12371 = !DILocation(line: 3972, column: 6, scope: !12326)
!12372 = !DILocation(line: 3973, column: 3, scope: !12373)
!12373 = distinct !DILexicalBlock(scope: !12369, file: !3, line: 3972, column: 32)
!12374 = !DILocation(line: 3977, column: 28, scope: !12326)
!12375 = !DILocation(line: 3977, column: 2, scope: !12326)
!12376 = !DILocation(line: 3978, column: 31, scope: !12326)
!12377 = !DILocation(line: 3978, column: 38, scope: !12326)
!12378 = !DILocation(line: 3978, column: 9, scope: !12326)
!12379 = !DILocation(line: 3978, column: 7, scope: !12326)
!12380 = !DILocation(line: 3980, column: 2, scope: !12381)
!12381 = distinct !DILexicalBlock(scope: !12326, file: !3, line: 3980, column: 2)
!12382 = !DILocation(line: 3980, column: 2, scope: !12383)
!12383 = distinct !DILexicalBlock(scope: !12381, file: !3, line: 3980, column: 2)
!12384 = !DILocalVariable(name: "separated1", scope: !12385, file: !3, line: 3982, type: !14)
!12385 = distinct !DILexicalBlock(scope: !12383, file: !3, line: 3980, column: 55)
!12386 = !DILocation(line: 3982, column: 8, scope: !12385)
!12387 = !DILocalVariable(name: "separated2", scope: !12385, file: !3, line: 3982, type: !14)
!12388 = !DILocation(line: 3982, column: 24, scope: !12385)
!12389 = !DILocalVariable(name: "faces_separated", scope: !12385, file: !3, line: 3984, type: !14)
!12390 = !DILocation(line: 3984, column: 8, scope: !12385)
!12391 = !DILocalVariable(name: "v1coincident", scope: !12385, file: !3, line: 3986, type: !14)
!12392 = !DILocation(line: 3986, column: 8, scope: !12385)
!12393 = !DILocalVariable(name: "commonFaces", scope: !12385, file: !3, line: 3988, type: !22)
!12394 = !DILocation(line: 3988, column: 7, scope: !12385)
!12395 = !DILocalVariable(name: "efa1", scope: !12385, file: !3, line: 3990, type: !3238)
!12396 = !DILocation(line: 3990, column: 11, scope: !12385)
!12397 = !DILocalVariable(name: "efa2", scope: !12385, file: !3, line: 3990, type: !3238)
!12398 = !DILocation(line: 3990, column: 18, scope: !12385)
!12399 = !DILocalVariable(name: "mv1", scope: !12385, file: !3, line: 3992, type: !7816)
!12400 = !DILocation(line: 3992, column: 14, scope: !12385)
!12401 = !DILocalVariable(name: "mvinit1", scope: !12385, file: !3, line: 3992, type: !7816)
!12402 = !DILocation(line: 3992, column: 20, scope: !12385)
!12403 = !DILocalVariable(name: "mv2", scope: !12385, file: !3, line: 3992, type: !7816)
!12404 = !DILocation(line: 3992, column: 30, scope: !12385)
!12405 = !DILocalVariable(name: "mvinit2", scope: !12385, file: !3, line: 3992, type: !7816)
!12406 = !DILocation(line: 3992, column: 36, scope: !12385)
!12407 = !DILocalVariable(name: "mviter", scope: !12385, file: !3, line: 3992, type: !7816)
!12408 = !DILocation(line: 3992, column: 46, scope: !12385)
!12409 = !DILocalVariable(name: "mv2cache", scope: !12385, file: !3, line: 3995, type: !7816)
!12410 = !DILocation(line: 3995, column: 14, scope: !12385)
!12411 = !DILocalVariable(name: "mv2sep", scope: !12385, file: !3, line: 3995, type: !7816)
!12412 = !DILocation(line: 3995, column: 32, scope: !12385)
!12413 = !DILocation(line: 3997, column: 13, scope: !12385)
!12414 = !DILocation(line: 3997, column: 19, scope: !12385)
!12415 = !DILocation(line: 3997, column: 24, scope: !12385)
!12416 = !DILocation(line: 3997, column: 11, scope: !12385)
!12417 = !DILocation(line: 3998, column: 7, scope: !12418)
!12418 = distinct !DILexicalBlock(scope: !12385, file: !3, line: 3998, column: 7)
!12419 = !DILocation(line: 3998, column: 7, scope: !12385)
!12420 = !DILocation(line: 3999, column: 4, scope: !12418)
!12421 = !DILocation(line: 4001, column: 14, scope: !12422)
!12422 = distinct !DILexicalBlock(scope: !12385, file: !3, line: 4001, column: 3)
!12423 = !DILocation(line: 4001, column: 12, scope: !12422)
!12424 = !DILocation(line: 4001, column: 8, scope: !12422)
!12425 = !DILocation(line: 4001, column: 23, scope: !12426)
!12426 = distinct !DILexicalBlock(scope: !12422, file: !3, line: 4001, column: 3)
!12427 = !DILocation(line: 4001, column: 27, scope: !12426)
!12428 = !DILocation(line: 4001, column: 31, scope: !12426)
!12429 = !DILocation(line: 4001, column: 30, scope: !12426)
!12430 = !DILocation(line: 0, scope: !12426)
!12431 = !DILocation(line: 4001, column: 3, scope: !12422)
!12432 = !DILocation(line: 4002, column: 8, scope: !12433)
!12433 = distinct !DILexicalBlock(scope: !12434, file: !3, line: 4002, column: 8)
!12434 = distinct !DILexicalBlock(scope: !12426, file: !3, line: 4001, column: 65)
!12435 = !DILocation(line: 4002, column: 13, scope: !12433)
!12436 = !DILocation(line: 4002, column: 22, scope: !12433)
!12437 = !DILocation(line: 4002, column: 25, scope: !12433)
!12438 = !DILocation(line: 4002, column: 8, scope: !12434)
!12439 = !DILocation(line: 4003, column: 18, scope: !12433)
!12440 = !DILocation(line: 4003, column: 5, scope: !12433)
!12441 = !DILocation(line: 4005, column: 15, scope: !12434)
!12442 = !DILocation(line: 4006, column: 28, scope: !12434)
!12443 = !DILocation(line: 4006, column: 32, scope: !12434)
!12444 = !DILocation(line: 4006, column: 37, scope: !12434)
!12445 = !DILocation(line: 4006, column: 11, scope: !12434)
!12446 = !DILocation(line: 4006, column: 9, scope: !12434)
!12447 = !DILocation(line: 4007, column: 14, scope: !12434)
!12448 = !DILocation(line: 4007, column: 20, scope: !12434)
!12449 = !DILocation(line: 4007, column: 25, scope: !12434)
!12450 = !DILocation(line: 4007, column: 12, scope: !12434)
!12451 = !DILocation(line: 4009, column: 15, scope: !12452)
!12452 = distinct !DILexicalBlock(scope: !12434, file: !3, line: 4009, column: 4)
!12453 = !DILocation(line: 4009, column: 13, scope: !12452)
!12454 = !DILocation(line: 4009, column: 9, scope: !12452)
!12455 = !DILocation(line: 4009, column: 24, scope: !12456)
!12456 = distinct !DILexicalBlock(scope: !12452, file: !3, line: 4009, column: 4)
!12457 = !DILocation(line: 4009, column: 4, scope: !12452)
!12458 = !DILocation(line: 4010, column: 9, scope: !12459)
!12459 = distinct !DILexicalBlock(scope: !12460, file: !3, line: 4010, column: 9)
!12460 = distinct !DILexicalBlock(scope: !12456, file: !3, line: 4009, column: 46)
!12461 = !DILocation(line: 4010, column: 14, scope: !12459)
!12462 = !DILocation(line: 4010, column: 9, scope: !12460)
!12463 = !DILocation(line: 4011, column: 15, scope: !12459)
!12464 = !DILocation(line: 4011, column: 13, scope: !12459)
!12465 = !DILocation(line: 4011, column: 6, scope: !12459)
!12466 = !DILocation(line: 4013, column: 29, scope: !12460)
!12467 = !DILocation(line: 4013, column: 33, scope: !12460)
!12468 = !DILocation(line: 4013, column: 38, scope: !12460)
!12469 = !DILocation(line: 4013, column: 12, scope: !12460)
!12470 = !DILocation(line: 4013, column: 10, scope: !12460)
!12471 = !DILocation(line: 4014, column: 9, scope: !12472)
!12472 = distinct !DILexicalBlock(scope: !12460, file: !3, line: 4014, column: 9)
!12473 = !DILocation(line: 4014, column: 17, scope: !12472)
!12474 = !DILocation(line: 4014, column: 14, scope: !12472)
!12475 = !DILocation(line: 4014, column: 9, scope: !12460)
!12476 = !DILocation(line: 4016, column: 10, scope: !12477)
!12477 = distinct !DILexicalBlock(scope: !12478, file: !3, line: 4016, column: 10)
!12478 = distinct !DILexicalBlock(scope: !12472, file: !3, line: 4014, column: 23)
!12479 = !DILocation(line: 4016, column: 10, scope: !12478)
!12480 = !DILocation(line: 4018, column: 11, scope: !12481)
!12481 = distinct !DILexicalBlock(scope: !12482, file: !3, line: 4018, column: 11)
!12482 = distinct !DILexicalBlock(scope: !12477, file: !3, line: 4016, column: 24)
!12483 = !DILocation(line: 4018, column: 11, scope: !12482)
!12484 = !DILocation(line: 4020, column: 19, scope: !12485)
!12485 = distinct !DILexicalBlock(scope: !12481, file: !3, line: 4018, column: 21)
!12486 = !DILocation(line: 4021, column: 22, scope: !12487)
!12487 = distinct !DILexicalBlock(scope: !12485, file: !3, line: 4021, column: 8)
!12488 = !DILocation(line: 4021, column: 20, scope: !12487)
!12489 = !DILocation(line: 4021, column: 13, scope: !12487)
!12490 = !DILocation(line: 4021, column: 32, scope: !12491)
!12491 = distinct !DILexicalBlock(scope: !12487, file: !3, line: 4021, column: 8)
!12492 = !DILocation(line: 4021, column: 8, scope: !12487)
!12493 = !DILocation(line: 4022, column: 13, scope: !12494)
!12494 = distinct !DILexicalBlock(scope: !12495, file: !3, line: 4022, column: 13)
!12495 = distinct !DILexicalBlock(scope: !12491, file: !3, line: 4021, column: 63)
!12496 = !DILocation(line: 4022, column: 21, scope: !12494)
!12497 = !DILocation(line: 4022, column: 30, scope: !12494)
!12498 = !DILocation(line: 4022, column: 33, scope: !12494)
!12499 = !DILocation(line: 4022, column: 43, scope: !12494)
!12500 = !DILocation(line: 4022, column: 40, scope: !12494)
!12501 = !DILocation(line: 4022, column: 13, scope: !12495)
!12502 = !DILocation(line: 4023, column: 10, scope: !12494)
!12503 = !DILocation(line: 4025, column: 13, scope: !12504)
!12504 = distinct !DILexicalBlock(scope: !12495, file: !3, line: 4025, column: 13)
!12505 = !DILocation(line: 4025, column: 23, scope: !12504)
!12506 = !DILocation(line: 4025, column: 20, scope: !12504)
!12507 = !DILocation(line: 4025, column: 13, scope: !12495)
!12508 = !DILocation(line: 4026, column: 21, scope: !12504)
!12509 = !DILocation(line: 4026, column: 10, scope: !12504)
!12510 = !DILocation(line: 4027, column: 8, scope: !12495)
!12511 = !DILocation(line: 4021, column: 49, scope: !12491)
!12512 = !DILocation(line: 4021, column: 57, scope: !12491)
!12513 = !DILocation(line: 4021, column: 47, scope: !12491)
!12514 = !DILocation(line: 4021, column: 8, scope: !12491)
!12515 = distinct !{!12515, !12492, !12516}
!12516 = !DILocation(line: 4027, column: 8, scope: !12487)
!12517 = !DILocation(line: 4028, column: 7, scope: !12485)
!12518 = !DILocation(line: 4031, column: 19, scope: !12519)
!12519 = distinct !DILexicalBlock(scope: !12481, file: !3, line: 4030, column: 12)
!12520 = !DILocation(line: 4031, column: 17, scope: !12519)
!12521 = !DILocation(line: 4032, column: 20, scope: !12519)
!12522 = !DILocation(line: 4034, column: 6, scope: !12482)
!12523 = !DILocation(line: 4036, column: 18, scope: !12477)
!12524 = !DILocation(line: 4038, column: 10, scope: !12525)
!12525 = distinct !DILexicalBlock(scope: !12478, file: !3, line: 4038, column: 10)
!12526 = !DILocation(line: 4038, column: 21, scope: !12525)
!12527 = !DILocation(line: 4038, column: 24, scope: !12525)
!12528 = !DILocation(line: 4038, column: 10, scope: !12478)
!12529 = !DILocation(line: 4039, column: 23, scope: !12530)
!12530 = distinct !DILexicalBlock(scope: !12525, file: !3, line: 4038, column: 36)
!12531 = !DILocation(line: 4040, column: 7, scope: !12530)
!12532 = !DILocation(line: 4042, column: 5, scope: !12478)
!12533 = !DILocation(line: 4043, column: 4, scope: !12460)
!12534 = !DILocation(line: 4009, column: 35, scope: !12456)
!12535 = !DILocation(line: 4009, column: 40, scope: !12456)
!12536 = !DILocation(line: 4009, column: 33, scope: !12456)
!12537 = !DILocation(line: 4009, column: 4, scope: !12456)
!12538 = distinct !{!12538, !12457, !12539}
!12539 = !DILocation(line: 4043, column: 4, scope: !12452)
!12540 = !DILocation(line: 4044, column: 3, scope: !12434)
!12541 = !DILocation(line: 4001, column: 54, scope: !12426)
!12542 = !DILocation(line: 4001, column: 59, scope: !12426)
!12543 = !DILocation(line: 4001, column: 52, scope: !12426)
!12544 = !DILocation(line: 4001, column: 3, scope: !12426)
!12545 = distinct !{!12545, !12431, !12546}
!12546 = !DILocation(line: 4044, column: 3, scope: !12422)
!12547 = !DILocation(line: 4046, column: 7, scope: !12548)
!12548 = distinct !DILexicalBlock(scope: !12385, file: !3, line: 4046, column: 7)
!12549 = !DILocation(line: 4046, column: 7, scope: !12385)
!12550 = !DILocation(line: 4047, column: 8, scope: !12551)
!12551 = distinct !DILexicalBlock(scope: !12552, file: !3, line: 4047, column: 8)
!12552 = distinct !DILexicalBlock(scope: !12548, file: !3, line: 4046, column: 24)
!12553 = !DILocation(line: 4047, column: 8, scope: !12552)
!12554 = !DILocation(line: 4048, column: 5, scope: !12551)
!12555 = !DILocation(line: 4049, column: 8, scope: !12556)
!12556 = distinct !DILexicalBlock(scope: !12552, file: !3, line: 4049, column: 8)
!12557 = !DILocation(line: 4049, column: 8, scope: !12552)
!12558 = !DILocation(line: 4050, column: 5, scope: !12556)
!12559 = !DILocation(line: 4051, column: 3, scope: !12552)
!12560 = !DILocation(line: 4052, column: 2, scope: !12385)
!12561 = distinct !{!12561, !12380, !12562}
!12562 = !DILocation(line: 4052, column: 2, scope: !12381)
!12563 = !DILocation(line: 4054, column: 2, scope: !12326)
!12564 = !DILocation(line: 4054, column: 6, scope: !12326)
!12565 = !DILocation(line: 4054, column: 15, scope: !12326)
!12566 = !DILocation(line: 4056, column: 22, scope: !12326)
!12567 = !DILocation(line: 4056, column: 2, scope: !12326)
!12568 = !DILocation(line: 4058, column: 21, scope: !12326)
!12569 = !DILocation(line: 4058, column: 25, scope: !12326)
!12570 = !DILocation(line: 4058, column: 2, scope: !12326)
!12571 = !DILocation(line: 4059, column: 24, scope: !12326)
!12572 = !DILocation(line: 4059, column: 46, scope: !12326)
!12573 = !DILocation(line: 4059, column: 2, scope: !12326)
!12574 = !DILocation(line: 4061, column: 2, scope: !12326)
!12575 = !DILocation(line: 4062, column: 1, scope: !12326)
!12576 = distinct !DISubprogram(name: "uv_mark_seam_exec", scope: !3, file: !3, line: 4083, type: !6778, scopeLine: 4084, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!12577 = !DILocalVariable(name: "C", arg: 1, scope: !12576, file: !3, line: 4083, type: !6780)
!12578 = !DILocation(line: 4083, column: 40, scope: !12576)
!12579 = !DILocalVariable(name: "UNUSED_op", arg: 2, scope: !12576, file: !3, line: 4083, type: !6783)
!12580 = !DILocation(line: 4083, column: 55, scope: !12576)
!12581 = !DILocalVariable(name: "ob", scope: !12576, file: !3, line: 4085, type: !3588)
!12582 = !DILocation(line: 4085, column: 10, scope: !12576)
!12583 = !DILocation(line: 4085, column: 36, scope: !12576)
!12584 = !DILocation(line: 4085, column: 15, scope: !12576)
!12585 = !DILocalVariable(name: "scene", scope: !12576, file: !3, line: 4086, type: !3841)
!12586 = !DILocation(line: 4086, column: 9, scope: !12576)
!12587 = !DILocation(line: 4086, column: 32, scope: !12576)
!12588 = !DILocation(line: 4086, column: 17, scope: !12576)
!12589 = !DILocalVariable(name: "me", scope: !12576, file: !3, line: 4087, type: !3249)
!12590 = !DILocation(line: 4087, column: 8, scope: !12576)
!12591 = !DILocation(line: 4087, column: 21, scope: !12576)
!12592 = !DILocation(line: 4087, column: 25, scope: !12576)
!12593 = !DILocation(line: 4087, column: 13, scope: !12576)
!12594 = !DILocalVariable(name: "em", scope: !12576, file: !3, line: 4088, type: !3593)
!12595 = !DILocation(line: 4088, column: 14, scope: !12576)
!12596 = !DILocation(line: 4088, column: 19, scope: !12576)
!12597 = !DILocation(line: 4088, column: 23, scope: !12576)
!12598 = !DILocalVariable(name: "bm", scope: !12576, file: !3, line: 4089, type: !3441)
!12599 = !DILocation(line: 4089, column: 9, scope: !12576)
!12600 = !DILocation(line: 4089, column: 14, scope: !12576)
!12601 = !DILocation(line: 4089, column: 18, scope: !12576)
!12602 = !DILocalVariable(name: "efa", scope: !12576, file: !3, line: 4090, type: !3238)
!12603 = !DILocation(line: 4090, column: 10, scope: !12576)
!12604 = !DILocalVariable(name: "loop", scope: !12576, file: !3, line: 4091, type: !3220)
!12605 = !DILocation(line: 4091, column: 10, scope: !12576)
!12606 = !DILocalVariable(name: "iter", scope: !12576, file: !3, line: 4092, type: !3856)
!12607 = !DILocation(line: 4092, column: 9, scope: !12576)
!12608 = !DILocalVariable(name: "liter", scope: !12576, file: !3, line: 4092, type: !3856)
!12609 = !DILocation(line: 4092, column: 15, scope: !12576)
!12610 = !DILocalVariable(name: "cd_loop_uv_offset", scope: !12576, file: !3, line: 4094, type: !4165)
!12611 = !DILocation(line: 4094, column: 12, scope: !12576)
!12612 = !DILocation(line: 4094, column: 55, scope: !12576)
!12613 = !DILocation(line: 4094, column: 59, scope: !12576)
!12614 = !DILocation(line: 4094, column: 32, scope: !12576)
!12615 = !DILocation(line: 4096, column: 2, scope: !12616)
!12616 = distinct !DILexicalBlock(scope: !12576, file: !3, line: 4096, column: 2)
!12617 = !DILocation(line: 4096, column: 2, scope: !12618)
!12618 = distinct !DILexicalBlock(scope: !12616, file: !3, line: 4096, column: 2)
!12619 = !DILocation(line: 4097, column: 3, scope: !12620)
!12620 = distinct !DILexicalBlock(scope: !12621, file: !3, line: 4097, column: 3)
!12621 = distinct !DILexicalBlock(scope: !12618, file: !3, line: 4096, column: 50)
!12622 = !DILocation(line: 4097, column: 3, scope: !12623)
!12623 = distinct !DILexicalBlock(scope: !12620, file: !3, line: 4097, column: 3)
!12624 = !DILocation(line: 4098, column: 32, scope: !12625)
!12625 = distinct !DILexicalBlock(scope: !12626, file: !3, line: 4098, column: 8)
!12626 = distinct !DILexicalBlock(scope: !12623, file: !3, line: 4097, column: 54)
!12627 = !DILocation(line: 4098, column: 39, scope: !12625)
!12628 = !DILocation(line: 4098, column: 45, scope: !12625)
!12629 = !DILocation(line: 4098, column: 8, scope: !12625)
!12630 = !DILocation(line: 4098, column: 8, scope: !12626)
!12631 = !DILocation(line: 4099, column: 5, scope: !12632)
!12632 = distinct !DILexicalBlock(scope: !12625, file: !3, line: 4098, column: 65)
!12633 = !DILocation(line: 4100, column: 4, scope: !12632)
!12634 = !DILocation(line: 4101, column: 3, scope: !12626)
!12635 = distinct !{!12635, !12619, !12636}
!12636 = !DILocation(line: 4101, column: 3, scope: !12620)
!12637 = !DILocation(line: 4102, column: 2, scope: !12621)
!12638 = distinct !{!12638, !12615, !12639}
!12639 = !DILocation(line: 4102, column: 2, scope: !12616)
!12640 = !DILocation(line: 4104, column: 2, scope: !12576)
!12641 = !DILocation(line: 4104, column: 6, scope: !12576)
!12642 = !DILocation(line: 4104, column: 15, scope: !12576)
!12643 = !DILocation(line: 4106, column: 6, scope: !12644)
!12644 = distinct !DILexicalBlock(scope: !12576, file: !3, line: 4106, column: 6)
!12645 = !DILocation(line: 4106, column: 13, scope: !12644)
!12646 = !DILocation(line: 4106, column: 27, scope: !12644)
!12647 = !DILocation(line: 4106, column: 6, scope: !12576)
!12648 = !DILocation(line: 4107, column: 18, scope: !12644)
!12649 = !DILocation(line: 4107, column: 25, scope: !12644)
!12650 = !DILocation(line: 4107, column: 3, scope: !12644)
!12651 = !DILocation(line: 4109, column: 21, scope: !12576)
!12652 = !DILocation(line: 4109, column: 25, scope: !12576)
!12653 = !DILocation(line: 4109, column: 2, scope: !12576)
!12654 = !DILocation(line: 4110, column: 24, scope: !12576)
!12655 = !DILocation(line: 4110, column: 46, scope: !12576)
!12656 = !DILocation(line: 4110, column: 2, scope: !12576)
!12657 = !DILocation(line: 4112, column: 2, scope: !12576)
!12658 = distinct !DISubprogram(name: "uv_weld_exec", scope: !3, file: !3, line: 1846, type: !6778, scopeLine: 1847, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!12659 = !DILocalVariable(name: "C", arg: 1, scope: !12658, file: !3, line: 1846, type: !6780)
!12660 = !DILocation(line: 1846, column: 35, scope: !12658)
!12661 = !DILocalVariable(name: "UNUSED_op", arg: 2, scope: !12658, file: !3, line: 1846, type: !6783)
!12662 = !DILocation(line: 1846, column: 50, scope: !12658)
!12663 = !DILocation(line: 1848, column: 16, scope: !12658)
!12664 = !DILocation(line: 1848, column: 2, scope: !12658)
!12665 = !DILocation(line: 1850, column: 2, scope: !12658)
!12666 = distinct !DISubprogram(name: "uv_remove_doubles_exec", scope: !3, file: !3, line: 1686, type: !6778, scopeLine: 1687, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!12667 = !DILocalVariable(name: "C", arg: 1, scope: !12666, file: !3, line: 1686, type: !6780)
!12668 = !DILocation(line: 1686, column: 45, scope: !12666)
!12669 = !DILocalVariable(name: "op", arg: 2, scope: !12666, file: !3, line: 1686, type: !6783)
!12670 = !DILocation(line: 1686, column: 60, scope: !12666)
!12671 = !DILocalVariable(name: "threshold", scope: !12666, file: !3, line: 1688, type: !4977)
!12672 = !DILocation(line: 1688, column: 14, scope: !12666)
!12673 = !DILocation(line: 1688, column: 40, scope: !12666)
!12674 = !DILocation(line: 1688, column: 44, scope: !12666)
!12675 = !DILocation(line: 1688, column: 26, scope: !12666)
!12676 = !DILocalVariable(name: "use_unselected", scope: !12666, file: !3, line: 1689, type: !3951)
!12677 = !DILocation(line: 1689, column: 13, scope: !12666)
!12678 = !DILocation(line: 1689, column: 46, scope: !12666)
!12679 = !DILocation(line: 1689, column: 50, scope: !12666)
!12680 = !DILocation(line: 1689, column: 30, scope: !12666)
!12681 = !DILocalVariable(name: "sima", scope: !12666, file: !3, line: 1691, type: !4824)
!12682 = !DILocation(line: 1691, column: 14, scope: !12666)
!12683 = !DILocalVariable(name: "scene", scope: !12666, file: !3, line: 1692, type: !3841)
!12684 = !DILocation(line: 1692, column: 9, scope: !12666)
!12685 = !DILocalVariable(name: "obedit", scope: !12666, file: !3, line: 1693, type: !3588)
!12686 = !DILocation(line: 1693, column: 10, scope: !12666)
!12687 = !DILocation(line: 1693, column: 40, scope: !12666)
!12688 = !DILocation(line: 1693, column: 19, scope: !12666)
!12689 = !DILocalVariable(name: "em", scope: !12666, file: !3, line: 1694, type: !3593)
!12690 = !DILocation(line: 1694, column: 14, scope: !12666)
!12691 = !DILocation(line: 1694, column: 44, scope: !12666)
!12692 = !DILocation(line: 1694, column: 19, scope: !12666)
!12693 = !DILocalVariable(name: "ima", scope: !12666, file: !3, line: 1695, type: !3164)
!12694 = !DILocation(line: 1695, column: 9, scope: !12666)
!12695 = !DILocalVariable(name: "tf", scope: !12666, file: !3, line: 1696, type: !3945)
!12696 = !DILocation(line: 1696, column: 12, scope: !12666)
!12697 = !DILocalVariable(name: "uv_a_index", scope: !12666, file: !3, line: 1697, type: !22)
!12698 = !DILocation(line: 1697, column: 6, scope: !12666)
!12699 = !DILocalVariable(name: "uv_b_index", scope: !12666, file: !3, line: 1698, type: !22)
!12700 = !DILocation(line: 1698, column: 6, scope: !12666)
!12701 = !DILocalVariable(name: "uv_a", scope: !12666, file: !3, line: 1699, type: !630)
!12702 = !DILocation(line: 1699, column: 9, scope: !12666)
!12703 = !DILocalVariable(name: "uv_b", scope: !12666, file: !3, line: 1700, type: !4976)
!12704 = !DILocation(line: 1700, column: 15, scope: !12666)
!12705 = !DILocalVariable(name: "iter", scope: !12666, file: !3, line: 1702, type: !3856)
!12706 = !DILocation(line: 1702, column: 9, scope: !12666)
!12707 = !DILocalVariable(name: "liter", scope: !12666, file: !3, line: 1702, type: !3856)
!12708 = !DILocation(line: 1702, column: 15, scope: !12666)
!12709 = !DILocalVariable(name: "efa", scope: !12666, file: !3, line: 1703, type: !3238)
!12710 = !DILocation(line: 1703, column: 10, scope: !12666)
!12711 = !DILocalVariable(name: "l", scope: !12666, file: !3, line: 1704, type: !3220)
!12712 = !DILocation(line: 1704, column: 10, scope: !12666)
!12713 = !DILocalVariable(name: "cd_loop_uv_offset", scope: !12666, file: !3, line: 1706, type: !4165)
!12714 = !DILocation(line: 1706, column: 12, scope: !12666)
!12715 = !DILocation(line: 1706, column: 56, scope: !12666)
!12716 = !DILocation(line: 1706, column: 60, scope: !12666)
!12717 = !DILocation(line: 1706, column: 64, scope: !12666)
!12718 = !DILocation(line: 1706, column: 33, scope: !12666)
!12719 = !DILocalVariable(name: "cd_poly_tex_offset", scope: !12666, file: !3, line: 1707, type: !4165)
!12720 = !DILocation(line: 1707, column: 12, scope: !12666)
!12721 = !DILocation(line: 1707, column: 56, scope: !12666)
!12722 = !DILocation(line: 1707, column: 60, scope: !12666)
!12723 = !DILocation(line: 1707, column: 64, scope: !12666)
!12724 = !DILocation(line: 1707, column: 33, scope: !12666)
!12725 = !DILocation(line: 1709, column: 28, scope: !12666)
!12726 = !DILocation(line: 1709, column: 9, scope: !12666)
!12727 = !DILocation(line: 1709, column: 7, scope: !12666)
!12728 = !DILocation(line: 1710, column: 25, scope: !12666)
!12729 = !DILocation(line: 1710, column: 10, scope: !12666)
!12730 = !DILocation(line: 1710, column: 8, scope: !12666)
!12731 = !DILocation(line: 1711, column: 28, scope: !12666)
!12732 = !DILocation(line: 1711, column: 8, scope: !12666)
!12733 = !DILocation(line: 1711, column: 6, scope: !12666)
!12734 = !DILocation(line: 1713, column: 6, scope: !12735)
!12735 = distinct !DILexicalBlock(scope: !12666, file: !3, line: 1713, column: 6)
!12736 = !DILocation(line: 1713, column: 21, scope: !12735)
!12737 = !DILocation(line: 1713, column: 6, scope: !12666)
!12738 = !DILocalVariable(name: "vert_arr", scope: !12739, file: !3, line: 1714, type: !12740)
!12739 = distinct !DILexicalBlock(scope: !12735, file: !3, line: 1713, column: 31)
!12740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12741, size: 64)
!12741 = !DIDerivedType(tag: DW_TAG_typedef, name: "UVvert", file: !3, line: 1684, baseType: !12742)
!12742 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UVvert", file: !3, line: 1681, size: 128, elements: !12743)
!12743 = !{!12744, !12745}
!12744 = !DIDerivedType(tag: DW_TAG_member, name: "uv_loop", scope: !12742, file: !3, line: 1682, baseType: !3240, size: 64)
!12745 = !DIDerivedType(tag: DW_TAG_member, name: "weld", scope: !12742, file: !3, line: 1683, baseType: !2013, size: 8, offset: 64)
!12746 = !DILocation(line: 1714, column: 11, scope: !12739)
!12747 = !DILocalVariable(name: "_vert_arr_count", scope: !12739, file: !3, line: 1715, type: !22)
!12748 = !DILocation(line: 1715, column: 3, scope: !12739)
!12749 = !DILocalVariable(name: "_vert_arr_static", scope: !12739, file: !3, line: 1715, type: !56)
!12750 = !DILocalVariable(name: "loop_arr", scope: !12739, file: !3, line: 1716, type: !12751)
!12751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3240, size: 64)
!12752 = !DILocation(line: 1716, column: 13, scope: !12739)
!12753 = !DILocalVariable(name: "_loop_arr_count", scope: !12739, file: !3, line: 1717, type: !22)
!12754 = !DILocation(line: 1717, column: 3, scope: !12739)
!12755 = !DILocalVariable(name: "_loop_arr_static", scope: !12739, file: !3, line: 1717, type: !56)
!12756 = !DILocation(line: 1720, column: 3, scope: !12757)
!12757 = distinct !DILexicalBlock(scope: !12739, file: !3, line: 1720, column: 3)
!12758 = !DILocation(line: 1720, column: 3, scope: !12759)
!12759 = distinct !DILexicalBlock(scope: !12757, file: !3, line: 1720, column: 3)
!12760 = !DILocation(line: 1721, column: 9, scope: !12761)
!12761 = distinct !DILexicalBlock(scope: !12759, file: !3, line: 1720, column: 55)
!12762 = !DILocation(line: 1721, column: 7, scope: !12761)
!12763 = !DILocation(line: 1722, column: 34, scope: !12764)
!12764 = distinct !DILexicalBlock(scope: !12761, file: !3, line: 1722, column: 8)
!12765 = !DILocation(line: 1722, column: 41, scope: !12764)
!12766 = !DILocation(line: 1722, column: 46, scope: !12764)
!12767 = !DILocation(line: 1722, column: 51, scope: !12764)
!12768 = !DILocation(line: 1722, column: 9, scope: !12764)
!12769 = !DILocation(line: 1722, column: 8, scope: !12761)
!12770 = !DILocation(line: 1723, column: 5, scope: !12764)
!12771 = !DILocation(line: 1725, column: 4, scope: !12772)
!12772 = distinct !DILexicalBlock(scope: !12761, file: !3, line: 1725, column: 4)
!12773 = !DILocation(line: 1725, column: 4, scope: !12774)
!12774 = distinct !DILexicalBlock(scope: !12772, file: !3, line: 1725, column: 4)
!12775 = !DILocation(line: 1726, column: 31, scope: !12776)
!12776 = distinct !DILexicalBlock(scope: !12777, file: !3, line: 1726, column: 9)
!12777 = distinct !DILexicalBlock(scope: !12774, file: !3, line: 1725, column: 52)
!12778 = !DILocation(line: 1726, column: 38, scope: !12776)
!12779 = !DILocation(line: 1726, column: 41, scope: !12776)
!12780 = !DILocation(line: 1726, column: 9, scope: !12776)
!12781 = !DILocation(line: 1726, column: 9, scope: !12777)
!12782 = !DILocalVariable(name: "luv", scope: !12783, file: !3, line: 1727, type: !3240)
!12783 = distinct !DILexicalBlock(scope: !12776, file: !3, line: 1726, column: 61)
!12784 = !DILocation(line: 1727, column: 15, scope: !12783)
!12785 = !DILocation(line: 1727, column: 21, scope: !12783)
!12786 = !DILocalVariable(name: "vert", scope: !12783, file: !3, line: 1728, type: !12741)
!12787 = !DILocation(line: 1728, column: 13, scope: !12783)
!12788 = !DILocation(line: 1729, column: 21, scope: !12783)
!12789 = !DILocation(line: 1729, column: 11, scope: !12783)
!12790 = !DILocation(line: 1729, column: 19, scope: !12783)
!12791 = !DILocation(line: 1730, column: 11, scope: !12783)
!12792 = !DILocation(line: 1730, column: 16, scope: !12783)
!12793 = !DILocation(line: 1731, column: 6, scope: !12783)
!12794 = !DILocation(line: 1732, column: 5, scope: !12783)
!12795 = !DILocation(line: 1734, column: 4, scope: !12777)
!12796 = distinct !{!12796, !12771, !12797}
!12797 = !DILocation(line: 1734, column: 4, scope: !12772)
!12798 = !DILocation(line: 1735, column: 3, scope: !12761)
!12799 = distinct !{!12799, !12756, !12800}
!12800 = !DILocation(line: 1735, column: 3, scope: !12757)
!12801 = !DILocation(line: 1737, column: 19, scope: !12802)
!12802 = distinct !DILexicalBlock(scope: !12739, file: !3, line: 1737, column: 3)
!12803 = !DILocation(line: 1737, column: 8, scope: !12802)
!12804 = !DILocation(line: 1737, column: 24, scope: !12805)
!12805 = distinct !DILexicalBlock(scope: !12802, file: !3, line: 1737, column: 3)
!12806 = !DILocation(line: 1737, column: 37, scope: !12805)
!12807 = !DILocation(line: 1737, column: 35, scope: !12805)
!12808 = !DILocation(line: 1737, column: 3, scope: !12802)
!12809 = !DILocation(line: 1738, column: 8, scope: !12810)
!12810 = distinct !DILexicalBlock(scope: !12811, file: !3, line: 1738, column: 8)
!12811 = distinct !DILexicalBlock(scope: !12805, file: !3, line: 1737, column: 78)
!12812 = !DILocation(line: 1738, column: 17, scope: !12810)
!12813 = !DILocation(line: 1738, column: 29, scope: !12810)
!12814 = !DILocation(line: 1738, column: 34, scope: !12810)
!12815 = !DILocation(line: 1738, column: 8, scope: !12811)
!12816 = !DILocalVariable(name: "uv_min", scope: !12817, file: !3, line: 1739, type: !769)
!12817 = distinct !DILexicalBlock(scope: !12810, file: !3, line: 1738, column: 44)
!12818 = !DILocation(line: 1739, column: 11, scope: !12817)
!12819 = !DILocalVariable(name: "uv_max", scope: !12817, file: !3, line: 1740, type: !769)
!12820 = !DILocation(line: 1740, column: 11, scope: !12817)
!12821 = !DILocation(line: 1742, column: 5, scope: !12822)
!12822 = distinct !DILexicalBlock(scope: !12817, file: !3, line: 1742, column: 5)
!12823 = !DILocation(line: 1743, column: 5, scope: !12817)
!12824 = !DILocation(line: 1745, column: 12, scope: !12817)
!12825 = !DILocation(line: 1745, column: 21, scope: !12817)
!12826 = !DILocation(line: 1745, column: 33, scope: !12817)
!12827 = !DILocation(line: 1745, column: 42, scope: !12817)
!12828 = !DILocation(line: 1745, column: 10, scope: !12817)
!12829 = !DILocation(line: 1747, column: 16, scope: !12817)
!12830 = !DILocation(line: 1747, column: 24, scope: !12817)
!12831 = !DILocation(line: 1747, column: 5, scope: !12817)
!12832 = !DILocation(line: 1748, column: 16, scope: !12817)
!12833 = !DILocation(line: 1748, column: 24, scope: !12817)
!12834 = !DILocation(line: 1748, column: 5, scope: !12817)
!12835 = !DILocation(line: 1750, column: 5, scope: !12817)
!12836 = !DILocation(line: 1750, column: 14, scope: !12817)
!12837 = !DILocation(line: 1750, column: 26, scope: !12817)
!12838 = !DILocation(line: 1750, column: 31, scope: !12817)
!12839 = !DILocation(line: 1751, column: 23, scope: !12840)
!12840 = distinct !DILexicalBlock(scope: !12817, file: !3, line: 1751, column: 5)
!12841 = !DILocation(line: 1751, column: 34, scope: !12840)
!12842 = !DILocation(line: 1751, column: 21, scope: !12840)
!12843 = !DILocation(line: 1751, column: 10, scope: !12840)
!12844 = !DILocation(line: 1751, column: 39, scope: !12845)
!12845 = distinct !DILexicalBlock(scope: !12840, file: !3, line: 1751, column: 5)
!12846 = !DILocation(line: 1751, column: 52, scope: !12845)
!12847 = !DILocation(line: 1751, column: 50, scope: !12845)
!12848 = !DILocation(line: 1751, column: 5, scope: !12840)
!12849 = !DILocation(line: 1752, column: 13, scope: !12850)
!12850 = distinct !DILexicalBlock(scope: !12845, file: !3, line: 1751, column: 93)
!12851 = !DILocation(line: 1752, column: 22, scope: !12850)
!12852 = !DILocation(line: 1752, column: 34, scope: !12850)
!12853 = !DILocation(line: 1752, column: 43, scope: !12850)
!12854 = !DILocation(line: 1752, column: 11, scope: !12850)
!12855 = !DILocation(line: 1753, column: 11, scope: !12856)
!12856 = distinct !DILexicalBlock(scope: !12850, file: !3, line: 1753, column: 10)
!12857 = !DILocation(line: 1753, column: 20, scope: !12856)
!12858 = !DILocation(line: 1753, column: 32, scope: !12856)
!12859 = !DILocation(line: 1753, column: 37, scope: !12856)
!12860 = !DILocation(line: 1753, column: 47, scope: !12856)
!12861 = !DILocation(line: 1754, column: 30, scope: !12856)
!12862 = !DILocation(line: 1754, column: 36, scope: !12856)
!12863 = !DILocation(line: 1754, column: 11, scope: !12856)
!12864 = !DILocation(line: 1754, column: 44, scope: !12856)
!12865 = !DILocation(line: 1754, column: 42, scope: !12856)
!12866 = !DILocation(line: 1753, column: 10, scope: !12850)
!12867 = !DILocation(line: 1756, column: 22, scope: !12868)
!12868 = distinct !DILexicalBlock(scope: !12856, file: !3, line: 1755, column: 6)
!12869 = !DILocation(line: 1756, column: 30, scope: !12868)
!12870 = !DILocation(line: 1756, column: 38, scope: !12868)
!12871 = !DILocation(line: 1756, column: 7, scope: !12868)
!12872 = !DILocation(line: 1757, column: 7, scope: !12868)
!12873 = !DILocation(line: 1758, column: 7, scope: !12868)
!12874 = !DILocation(line: 1758, column: 16, scope: !12868)
!12875 = !DILocation(line: 1758, column: 28, scope: !12868)
!12876 = !DILocation(line: 1758, column: 33, scope: !12868)
!12877 = !DILocation(line: 1759, column: 6, scope: !12868)
!12878 = !DILocation(line: 1760, column: 5, scope: !12850)
!12879 = !DILocation(line: 1751, column: 89, scope: !12845)
!12880 = !DILocation(line: 1751, column: 5, scope: !12845)
!12881 = distinct !{!12881, !12848, !12882}
!12882 = !DILocation(line: 1760, column: 5, scope: !12840)
!12883 = !DILocation(line: 1761, column: 9, scope: !12884)
!12884 = distinct !DILexicalBlock(scope: !12817, file: !3, line: 1761, column: 9)
!12885 = !DILocation(line: 1761, column: 9, scope: !12817)
!12886 = !DILocalVariable(name: "uv_mid", scope: !12887, file: !3, line: 1762, type: !769)
!12887 = distinct !DILexicalBlock(scope: !12884, file: !3, line: 1761, column: 36)
!12888 = !DILocation(line: 1762, column: 12, scope: !12887)
!12889 = !DILocation(line: 1763, column: 18, scope: !12887)
!12890 = !DILocation(line: 1763, column: 26, scope: !12887)
!12891 = !DILocation(line: 1763, column: 34, scope: !12887)
!12892 = !DILocation(line: 1763, column: 6, scope: !12887)
!12893 = !DILocation(line: 1764, column: 22, scope: !12894)
!12894 = distinct !DILexicalBlock(scope: !12887, file: !3, line: 1764, column: 6)
!12895 = !DILocation(line: 1764, column: 11, scope: !12894)
!12896 = !DILocation(line: 1764, column: 27, scope: !12897)
!12897 = distinct !DILexicalBlock(scope: !12894, file: !3, line: 1764, column: 6)
!12898 = !DILocation(line: 1764, column: 40, scope: !12897)
!12899 = !DILocation(line: 1764, column: 38, scope: !12897)
!12900 = !DILocation(line: 1764, column: 6, scope: !12894)
!12901 = !DILocation(line: 1765, column: 18, scope: !12902)
!12902 = distinct !DILexicalBlock(scope: !12897, file: !3, line: 1764, column: 81)
!12903 = !DILocation(line: 1765, column: 27, scope: !12902)
!12904 = !DILocation(line: 1765, column: 40, scope: !12902)
!12905 = !DILocation(line: 1765, column: 44, scope: !12902)
!12906 = !DILocation(line: 1765, column: 7, scope: !12902)
!12907 = !DILocation(line: 1766, column: 6, scope: !12902)
!12908 = !DILocation(line: 1764, column: 77, scope: !12897)
!12909 = !DILocation(line: 1764, column: 6, scope: !12897)
!12910 = distinct !{!12910, !12900, !12911}
!12911 = !DILocation(line: 1766, column: 6, scope: !12894)
!12912 = !DILocation(line: 1767, column: 5, scope: !12887)
!12913 = !DILocation(line: 1768, column: 4, scope: !12817)
!12914 = !DILocation(line: 1769, column: 3, scope: !12811)
!12915 = !DILocation(line: 1737, column: 74, scope: !12805)
!12916 = !DILocation(line: 1737, column: 3, scope: !12805)
!12917 = distinct !{!12917, !12808, !12918}
!12918 = !DILocation(line: 1769, column: 3, scope: !12802)
!12919 = !DILocation(line: 1771, column: 3, scope: !12920)
!12920 = distinct !DILexicalBlock(scope: !12739, file: !3, line: 1771, column: 3)
!12921 = !DILocation(line: 1771, column: 3, scope: !12739)
!12922 = !DILocation(line: 1771, column: 3, scope: !12923)
!12923 = distinct !DILexicalBlock(scope: !12920, file: !3, line: 1771, column: 3)
!12924 = !DILocation(line: 1772, column: 3, scope: !12925)
!12925 = distinct !DILexicalBlock(scope: !12739, file: !3, line: 1772, column: 3)
!12926 = !DILocation(line: 1772, column: 3, scope: !12739)
!12927 = !DILocation(line: 1772, column: 3, scope: !12928)
!12928 = distinct !DILexicalBlock(scope: !12925, file: !3, line: 1772, column: 3)
!12929 = !DILocation(line: 1773, column: 2, scope: !12739)
!12930 = !DILocalVariable(name: "loop_arr", scope: !12931, file: !3, line: 1778, type: !12751)
!12931 = distinct !DILexicalBlock(scope: !12735, file: !3, line: 1774, column: 7)
!12932 = !DILocation(line: 1778, column: 13, scope: !12931)
!12933 = !DILocalVariable(name: "_loop_arr_count", scope: !12931, file: !3, line: 1779, type: !22)
!12934 = !DILocation(line: 1779, column: 3, scope: !12931)
!12935 = !DILocalVariable(name: "_loop_arr_static", scope: !12931, file: !3, line: 1779, type: !56)
!12936 = !DILocalVariable(name: "loop_arr_unselected", scope: !12931, file: !3, line: 1780, type: !12751)
!12937 = !DILocation(line: 1780, column: 13, scope: !12931)
!12938 = !DILocalVariable(name: "_loop_arr_unselected_count", scope: !12931, file: !3, line: 1781, type: !22)
!12939 = !DILocation(line: 1781, column: 3, scope: !12931)
!12940 = !DILocalVariable(name: "_loop_arr_unselected_static", scope: !12931, file: !3, line: 1781, type: !56)
!12941 = !DILocation(line: 1783, column: 3, scope: !12942)
!12942 = distinct !DILexicalBlock(scope: !12931, file: !3, line: 1783, column: 3)
!12943 = !DILocation(line: 1783, column: 3, scope: !12944)
!12944 = distinct !DILexicalBlock(scope: !12942, file: !3, line: 1783, column: 3)
!12945 = !DILocation(line: 1784, column: 9, scope: !12946)
!12946 = distinct !DILexicalBlock(scope: !12944, file: !3, line: 1783, column: 55)
!12947 = !DILocation(line: 1784, column: 7, scope: !12946)
!12948 = !DILocation(line: 1785, column: 34, scope: !12949)
!12949 = distinct !DILexicalBlock(scope: !12946, file: !3, line: 1785, column: 8)
!12950 = !DILocation(line: 1785, column: 41, scope: !12949)
!12951 = !DILocation(line: 1785, column: 46, scope: !12949)
!12952 = !DILocation(line: 1785, column: 51, scope: !12949)
!12953 = !DILocation(line: 1785, column: 9, scope: !12949)
!12954 = !DILocation(line: 1785, column: 8, scope: !12946)
!12955 = !DILocation(line: 1786, column: 5, scope: !12949)
!12956 = !DILocation(line: 1788, column: 4, scope: !12957)
!12957 = distinct !DILexicalBlock(scope: !12946, file: !3, line: 1788, column: 4)
!12958 = !DILocation(line: 1788, column: 4, scope: !12959)
!12959 = distinct !DILexicalBlock(scope: !12957, file: !3, line: 1788, column: 4)
!12960 = !DILocalVariable(name: "luv", scope: !12961, file: !3, line: 1789, type: !3240)
!12961 = distinct !DILexicalBlock(scope: !12959, file: !3, line: 1788, column: 52)
!12962 = !DILocation(line: 1789, column: 14, scope: !12961)
!12963 = !DILocation(line: 1789, column: 20, scope: !12961)
!12964 = !DILocation(line: 1790, column: 31, scope: !12965)
!12965 = distinct !DILexicalBlock(scope: !12961, file: !3, line: 1790, column: 9)
!12966 = !DILocation(line: 1790, column: 38, scope: !12965)
!12967 = !DILocation(line: 1790, column: 41, scope: !12965)
!12968 = !DILocation(line: 1790, column: 9, scope: !12965)
!12969 = !DILocation(line: 1790, column: 9, scope: !12961)
!12970 = !DILocation(line: 1791, column: 6, scope: !12971)
!12971 = distinct !DILexicalBlock(scope: !12965, file: !3, line: 1790, column: 61)
!12972 = !DILocation(line: 1792, column: 5, scope: !12971)
!12973 = !DILocation(line: 1794, column: 6, scope: !12974)
!12974 = distinct !DILexicalBlock(scope: !12965, file: !3, line: 1793, column: 10)
!12975 = !DILocation(line: 1796, column: 4, scope: !12961)
!12976 = distinct !{!12976, !12956, !12977}
!12977 = !DILocation(line: 1796, column: 4, scope: !12957)
!12978 = !DILocation(line: 1797, column: 3, scope: !12946)
!12979 = distinct !{!12979, !12941, !12980}
!12980 = !DILocation(line: 1797, column: 3, scope: !12942)
!12981 = !DILocation(line: 1799, column: 19, scope: !12982)
!12982 = distinct !DILexicalBlock(scope: !12931, file: !3, line: 1799, column: 3)
!12983 = !DILocation(line: 1799, column: 8, scope: !12982)
!12984 = !DILocation(line: 1799, column: 24, scope: !12985)
!12985 = distinct !DILexicalBlock(scope: !12982, file: !3, line: 1799, column: 3)
!12986 = !DILocation(line: 1799, column: 37, scope: !12985)
!12987 = !DILocation(line: 1799, column: 35, scope: !12985)
!12988 = !DILocation(line: 1799, column: 3, scope: !12982)
!12989 = !DILocalVariable(name: "dist_best", scope: !12990, file: !3, line: 1800, type: !192)
!12990 = distinct !DILexicalBlock(scope: !12985, file: !3, line: 1799, column: 78)
!12991 = !DILocation(line: 1800, column: 10, scope: !12990)
!12992 = !DILocalVariable(name: "dist", scope: !12990, file: !3, line: 1800, type: !192)
!12993 = !DILocation(line: 1800, column: 31, scope: !12990)
!12994 = !DILocalVariable(name: "uv_best", scope: !12990, file: !3, line: 1801, type: !4976)
!12995 = !DILocation(line: 1801, column: 17, scope: !12990)
!12996 = !DILocation(line: 1803, column: 11, scope: !12990)
!12997 = !DILocation(line: 1803, column: 20, scope: !12990)
!12998 = !DILocation(line: 1803, column: 33, scope: !12990)
!12999 = !DILocation(line: 1803, column: 9, scope: !12990)
!13000 = !DILocation(line: 1804, column: 20, scope: !13001)
!13001 = distinct !DILexicalBlock(scope: !12990, file: !3, line: 1804, column: 4)
!13002 = !DILocation(line: 1804, column: 9, scope: !13001)
!13003 = !DILocation(line: 1804, column: 25, scope: !13004)
!13004 = distinct !DILexicalBlock(scope: !13001, file: !3, line: 1804, column: 4)
!13005 = !DILocation(line: 1804, column: 38, scope: !13004)
!13006 = !DILocation(line: 1804, column: 36, scope: !13004)
!13007 = !DILocation(line: 1804, column: 4, scope: !13001)
!13008 = !DILocation(line: 1805, column: 12, scope: !13009)
!13009 = distinct !DILexicalBlock(scope: !13004, file: !3, line: 1804, column: 90)
!13010 = !DILocation(line: 1805, column: 32, scope: !13009)
!13011 = !DILocation(line: 1805, column: 45, scope: !13009)
!13012 = !DILocation(line: 1805, column: 10, scope: !13009)
!13013 = !DILocation(line: 1806, column: 31, scope: !13009)
!13014 = !DILocation(line: 1806, column: 37, scope: !13009)
!13015 = !DILocation(line: 1806, column: 12, scope: !13009)
!13016 = !DILocation(line: 1806, column: 10, scope: !13009)
!13017 = !DILocation(line: 1807, column: 10, scope: !13018)
!13018 = distinct !DILexicalBlock(scope: !13009, file: !3, line: 1807, column: 9)
!13019 = !DILocation(line: 1807, column: 17, scope: !13018)
!13020 = !DILocation(line: 1807, column: 15, scope: !13018)
!13021 = !DILocation(line: 1807, column: 28, scope: !13018)
!13022 = !DILocation(line: 1807, column: 32, scope: !13018)
!13023 = !DILocation(line: 1807, column: 39, scope: !13018)
!13024 = !DILocation(line: 1807, column: 37, scope: !13018)
!13025 = !DILocation(line: 1807, column: 9, scope: !13009)
!13026 = !DILocation(line: 1808, column: 16, scope: !13027)
!13027 = distinct !DILexicalBlock(scope: !13018, file: !3, line: 1807, column: 51)
!13028 = !DILocation(line: 1808, column: 14, scope: !13027)
!13029 = !DILocation(line: 1809, column: 18, scope: !13027)
!13030 = !DILocation(line: 1809, column: 16, scope: !13027)
!13031 = !DILocation(line: 1810, column: 5, scope: !13027)
!13032 = !DILocation(line: 1811, column: 4, scope: !13009)
!13033 = !DILocation(line: 1804, column: 86, scope: !13004)
!13034 = !DILocation(line: 1804, column: 4, scope: !13004)
!13035 = distinct !{!13035, !13007, !13036}
!13036 = !DILocation(line: 1811, column: 4, scope: !13001)
!13037 = !DILocation(line: 1812, column: 8, scope: !13038)
!13038 = distinct !DILexicalBlock(scope: !12990, file: !3, line: 1812, column: 8)
!13039 = !DILocation(line: 1812, column: 8, scope: !12990)
!13040 = !DILocation(line: 1813, column: 16, scope: !13041)
!13041 = distinct !DILexicalBlock(scope: !13038, file: !3, line: 1812, column: 17)
!13042 = !DILocation(line: 1813, column: 22, scope: !13041)
!13043 = !DILocation(line: 1813, column: 5, scope: !13041)
!13044 = !DILocation(line: 1814, column: 4, scope: !13041)
!13045 = !DILocation(line: 1815, column: 3, scope: !12990)
!13046 = !DILocation(line: 1799, column: 74, scope: !12985)
!13047 = !DILocation(line: 1799, column: 3, scope: !12985)
!13048 = distinct !{!13048, !12988, !13049}
!13049 = !DILocation(line: 1815, column: 3, scope: !12982)
!13050 = !DILocation(line: 1817, column: 3, scope: !13051)
!13051 = distinct !DILexicalBlock(scope: !12931, file: !3, line: 1817, column: 3)
!13052 = !DILocation(line: 1817, column: 3, scope: !12931)
!13053 = !DILocation(line: 1817, column: 3, scope: !13054)
!13054 = distinct !DILexicalBlock(scope: !13051, file: !3, line: 1817, column: 3)
!13055 = !DILocation(line: 1818, column: 3, scope: !13056)
!13056 = distinct !DILexicalBlock(scope: !12931, file: !3, line: 1818, column: 3)
!13057 = !DILocation(line: 1818, column: 3, scope: !12931)
!13058 = !DILocation(line: 1818, column: 3, scope: !13059)
!13059 = distinct !DILexicalBlock(scope: !13056, file: !3, line: 1818, column: 3)
!13060 = !DILocation(line: 1821, column: 28, scope: !12666)
!13061 = !DILocation(line: 1821, column: 34, scope: !12666)
!13062 = !DILocation(line: 1821, column: 41, scope: !12666)
!13063 = !DILocation(line: 1821, column: 2, scope: !12666)
!13064 = !DILocation(line: 1822, column: 20, scope: !12666)
!13065 = !DILocation(line: 1822, column: 28, scope: !12666)
!13066 = !DILocation(line: 1822, column: 2, scope: !12666)
!13067 = !DILocation(line: 1823, column: 24, scope: !12666)
!13068 = !DILocation(line: 1823, column: 46, scope: !12666)
!13069 = !DILocation(line: 1823, column: 54, scope: !12666)
!13070 = !DILocation(line: 1823, column: 2, scope: !12666)
!13071 = !DILocation(line: 1825, column: 2, scope: !12666)
!13072 = distinct !DISubprogram(name: "uv_pin_exec", scope: !3, file: !3, line: 3461, type: !6778, scopeLine: 3462, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!13073 = !DILocalVariable(name: "C", arg: 1, scope: !13072, file: !3, line: 3461, type: !6780)
!13074 = !DILocation(line: 3461, column: 34, scope: !13072)
!13075 = !DILocalVariable(name: "op", arg: 2, scope: !13072, file: !3, line: 3461, type: !6783)
!13076 = !DILocation(line: 3461, column: 49, scope: !13072)
!13077 = !DILocalVariable(name: "scene", scope: !13072, file: !3, line: 3463, type: !3841)
!13078 = !DILocation(line: 3463, column: 9, scope: !13072)
!13079 = !DILocation(line: 3463, column: 32, scope: !13072)
!13080 = !DILocation(line: 3463, column: 17, scope: !13072)
!13081 = !DILocalVariable(name: "obedit", scope: !13072, file: !3, line: 3464, type: !3588)
!13082 = !DILocation(line: 3464, column: 10, scope: !13072)
!13083 = !DILocation(line: 3464, column: 40, scope: !13072)
!13084 = !DILocation(line: 3464, column: 19, scope: !13072)
!13085 = !DILocalVariable(name: "ima", scope: !13072, file: !3, line: 3465, type: !3164)
!13086 = !DILocation(line: 3465, column: 9, scope: !13072)
!13087 = !DILocation(line: 3465, column: 35, scope: !13072)
!13088 = !DILocation(line: 3465, column: 15, scope: !13072)
!13089 = !DILocalVariable(name: "em", scope: !13072, file: !3, line: 3466, type: !3593)
!13090 = !DILocation(line: 3466, column: 14, scope: !13072)
!13091 = !DILocation(line: 3466, column: 44, scope: !13072)
!13092 = !DILocation(line: 3466, column: 19, scope: !13072)
!13093 = !DILocalVariable(name: "efa", scope: !13072, file: !3, line: 3467, type: !3238)
!13094 = !DILocation(line: 3467, column: 10, scope: !13072)
!13095 = !DILocalVariable(name: "l", scope: !13072, file: !3, line: 3468, type: !3220)
!13096 = !DILocation(line: 3468, column: 10, scope: !13072)
!13097 = !DILocalVariable(name: "iter", scope: !13072, file: !3, line: 3469, type: !3856)
!13098 = !DILocation(line: 3469, column: 9, scope: !13072)
!13099 = !DILocalVariable(name: "liter", scope: !13072, file: !3, line: 3469, type: !3856)
!13100 = !DILocation(line: 3469, column: 15, scope: !13072)
!13101 = !DILocalVariable(name: "tface", scope: !13072, file: !3, line: 3470, type: !3945)
!13102 = !DILocation(line: 3470, column: 12, scope: !13072)
!13103 = !DILocalVariable(name: "luv", scope: !13072, file: !3, line: 3471, type: !3240)
!13104 = !DILocation(line: 3471, column: 11, scope: !13072)
!13105 = !DILocalVariable(name: "clear", scope: !13072, file: !3, line: 3472, type: !3951)
!13106 = !DILocation(line: 3472, column: 13, scope: !13072)
!13107 = !DILocation(line: 3472, column: 37, scope: !13072)
!13108 = !DILocation(line: 3472, column: 41, scope: !13072)
!13109 = !DILocation(line: 3472, column: 21, scope: !13072)
!13110 = !DILocalVariable(name: "cd_loop_uv_offset", scope: !13072, file: !3, line: 3474, type: !4165)
!13111 = !DILocation(line: 3474, column: 12, scope: !13072)
!13112 = !DILocation(line: 3474, column: 56, scope: !13072)
!13113 = !DILocation(line: 3474, column: 60, scope: !13072)
!13114 = !DILocation(line: 3474, column: 64, scope: !13072)
!13115 = !DILocation(line: 3474, column: 33, scope: !13072)
!13116 = !DILocalVariable(name: "cd_poly_tex_offset", scope: !13072, file: !3, line: 3475, type: !4165)
!13117 = !DILocation(line: 3475, column: 12, scope: !13072)
!13118 = !DILocation(line: 3475, column: 56, scope: !13072)
!13119 = !DILocation(line: 3475, column: 60, scope: !13072)
!13120 = !DILocation(line: 3475, column: 64, scope: !13072)
!13121 = !DILocation(line: 3475, column: 33, scope: !13072)
!13122 = !DILocation(line: 3477, column: 2, scope: !13123)
!13123 = distinct !DILexicalBlock(scope: !13072, file: !3, line: 3477, column: 2)
!13124 = !DILocation(line: 3477, column: 2, scope: !13125)
!13125 = distinct !DILexicalBlock(scope: !13123, file: !3, line: 3477, column: 2)
!13126 = !DILocation(line: 3478, column: 11, scope: !13127)
!13127 = distinct !DILexicalBlock(scope: !13125, file: !3, line: 3477, column: 54)
!13128 = !DILocation(line: 3478, column: 9, scope: !13127)
!13129 = !DILocation(line: 3479, column: 33, scope: !13130)
!13130 = distinct !DILexicalBlock(scope: !13127, file: !3, line: 3479, column: 7)
!13131 = !DILocation(line: 3479, column: 40, scope: !13130)
!13132 = !DILocation(line: 3479, column: 45, scope: !13130)
!13133 = !DILocation(line: 3479, column: 50, scope: !13130)
!13134 = !DILocation(line: 3479, column: 8, scope: !13130)
!13135 = !DILocation(line: 3479, column: 7, scope: !13127)
!13136 = !DILocation(line: 3480, column: 4, scope: !13130)
!13137 = !DILocation(line: 3482, column: 3, scope: !13138)
!13138 = distinct !DILexicalBlock(scope: !13127, file: !3, line: 3482, column: 3)
!13139 = !DILocation(line: 3482, column: 3, scope: !13140)
!13140 = distinct !DILexicalBlock(scope: !13138, file: !3, line: 3482, column: 3)
!13141 = !DILocation(line: 3483, column: 10, scope: !13142)
!13142 = distinct !DILexicalBlock(scope: !13140, file: !3, line: 3482, column: 51)
!13143 = !DILocation(line: 3483, column: 8, scope: !13142)
!13144 = !DILocation(line: 3485, column: 9, scope: !13145)
!13145 = distinct !DILexicalBlock(scope: !13142, file: !3, line: 3485, column: 8)
!13146 = !DILocation(line: 3485, column: 8, scope: !13142)
!13147 = !DILocation(line: 3486, column: 31, scope: !13148)
!13148 = distinct !DILexicalBlock(scope: !13149, file: !3, line: 3486, column: 9)
!13149 = distinct !DILexicalBlock(scope: !13145, file: !3, line: 3485, column: 16)
!13150 = !DILocation(line: 3486, column: 38, scope: !13148)
!13151 = !DILocation(line: 3486, column: 41, scope: !13148)
!13152 = !DILocation(line: 3486, column: 9, scope: !13148)
!13153 = !DILocation(line: 3486, column: 9, scope: !13149)
!13154 = !DILocation(line: 3487, column: 6, scope: !13148)
!13155 = !DILocation(line: 3487, column: 11, scope: !13148)
!13156 = !DILocation(line: 3487, column: 16, scope: !13148)
!13157 = !DILocation(line: 3488, column: 4, scope: !13149)
!13158 = !DILocation(line: 3490, column: 31, scope: !13159)
!13159 = distinct !DILexicalBlock(scope: !13160, file: !3, line: 3490, column: 9)
!13160 = distinct !DILexicalBlock(scope: !13145, file: !3, line: 3489, column: 9)
!13161 = !DILocation(line: 3490, column: 38, scope: !13159)
!13162 = !DILocation(line: 3490, column: 41, scope: !13159)
!13163 = !DILocation(line: 3490, column: 9, scope: !13159)
!13164 = !DILocation(line: 3490, column: 9, scope: !13160)
!13165 = !DILocation(line: 3491, column: 6, scope: !13159)
!13166 = !DILocation(line: 3491, column: 11, scope: !13159)
!13167 = !DILocation(line: 3491, column: 16, scope: !13159)
!13168 = !DILocation(line: 3493, column: 3, scope: !13142)
!13169 = distinct !{!13169, !13137, !13170}
!13170 = !DILocation(line: 3493, column: 3, scope: !13138)
!13171 = !DILocation(line: 3494, column: 2, scope: !13127)
!13172 = distinct !{!13172, !13122, !13173}
!13173 = !DILocation(line: 3494, column: 2, scope: !13123)
!13174 = !DILocation(line: 3496, column: 24, scope: !13072)
!13175 = !DILocation(line: 3496, column: 46, scope: !13072)
!13176 = !DILocation(line: 3496, column: 54, scope: !13072)
!13177 = !DILocation(line: 3496, column: 2, scope: !13072)
!13178 = !DILocation(line: 3498, column: 2, scope: !13072)
!13179 = distinct !DISubprogram(name: "uv_reveal_exec", scope: !3, file: !3, line: 3705, type: !6778, scopeLine: 3706, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!13180 = !DILocalVariable(name: "C", arg: 1, scope: !13179, file: !3, line: 3705, type: !6780)
!13181 = !DILocation(line: 3705, column: 37, scope: !13179)
!13182 = !DILocalVariable(name: "UNUSED_op", arg: 2, scope: !13179, file: !3, line: 3705, type: !6783)
!13183 = !DILocation(line: 3705, column: 52, scope: !13179)
!13184 = !DILocalVariable(name: "sima", scope: !13179, file: !3, line: 3707, type: !4824)
!13185 = !DILocation(line: 3707, column: 14, scope: !13179)
!13186 = !DILocation(line: 3707, column: 40, scope: !13179)
!13187 = !DILocation(line: 3707, column: 21, scope: !13179)
!13188 = !DILocalVariable(name: "obedit", scope: !13179, file: !3, line: 3708, type: !3588)
!13189 = !DILocation(line: 3708, column: 10, scope: !13179)
!13190 = !DILocation(line: 3708, column: 40, scope: !13179)
!13191 = !DILocation(line: 3708, column: 19, scope: !13179)
!13192 = !DILocalVariable(name: "scene", scope: !13179, file: !3, line: 3709, type: !3841)
!13193 = !DILocation(line: 3709, column: 9, scope: !13179)
!13194 = !DILocation(line: 3709, column: 32, scope: !13179)
!13195 = !DILocation(line: 3709, column: 17, scope: !13179)
!13196 = !DILocalVariable(name: "ts", scope: !13179, file: !3, line: 3710, type: !4138)
!13197 = !DILocation(line: 3710, column: 16, scope: !13179)
!13198 = !DILocation(line: 3710, column: 21, scope: !13179)
!13199 = !DILocation(line: 3710, column: 28, scope: !13179)
!13200 = !DILocalVariable(name: "em", scope: !13179, file: !3, line: 3711, type: !3593)
!13201 = !DILocation(line: 3711, column: 14, scope: !13179)
!13202 = !DILocation(line: 3711, column: 44, scope: !13179)
!13203 = !DILocation(line: 3711, column: 19, scope: !13179)
!13204 = !DILocalVariable(name: "efa", scope: !13179, file: !3, line: 3712, type: !3238)
!13205 = !DILocation(line: 3712, column: 10, scope: !13179)
!13206 = !DILocalVariable(name: "l", scope: !13179, file: !3, line: 3713, type: !3220)
!13207 = !DILocation(line: 3713, column: 10, scope: !13179)
!13208 = !DILocalVariable(name: "iter", scope: !13179, file: !3, line: 3714, type: !3856)
!13209 = !DILocation(line: 3714, column: 9, scope: !13179)
!13210 = !DILocalVariable(name: "liter", scope: !13179, file: !3, line: 3714, type: !3856)
!13211 = !DILocation(line: 3714, column: 15, scope: !13179)
!13212 = !DILocalVariable(name: "luv", scope: !13179, file: !3, line: 3715, type: !3240)
!13213 = !DILocation(line: 3715, column: 11, scope: !13179)
!13214 = !DILocalVariable(name: "use_face_center", scope: !13179, file: !3, line: 3716, type: !4165)
!13215 = !DILocation(line: 3716, column: 12, scope: !13179)
!13216 = !DILocation(line: 3716, column: 31, scope: !13179)
!13217 = !DILocation(line: 3716, column: 35, scope: !13179)
!13218 = !DILocation(line: 3716, column: 49, scope: !13179)
!13219 = !DILocalVariable(name: "stickymode", scope: !13179, file: !3, line: 3717, type: !4165)
!13220 = !DILocation(line: 3717, column: 12, scope: !13179)
!13221 = !DILocation(line: 3717, column: 25, scope: !13179)
!13222 = !DILocation(line: 3717, column: 33, scope: !13179)
!13223 = !DILocation(line: 3717, column: 39, scope: !13179)
!13224 = !DILocation(line: 3717, column: 46, scope: !13179)
!13225 = !DILocalVariable(name: "cd_loop_uv_offset", scope: !13179, file: !3, line: 3719, type: !4165)
!13226 = !DILocation(line: 3719, column: 12, scope: !13179)
!13227 = !DILocation(line: 3719, column: 56, scope: !13179)
!13228 = !DILocation(line: 3719, column: 60, scope: !13179)
!13229 = !DILocation(line: 3719, column: 64, scope: !13179)
!13230 = !DILocation(line: 3719, column: 33, scope: !13179)
!13231 = !DILocation(line: 3725, column: 6, scope: !13232)
!13232 = distinct !DILexicalBlock(scope: !13179, file: !3, line: 3725, column: 6)
!13233 = !DILocation(line: 3725, column: 10, scope: !13232)
!13234 = !DILocation(line: 3725, column: 18, scope: !13232)
!13235 = !DILocation(line: 3725, column: 6, scope: !13179)
!13236 = !DILocation(line: 3726, column: 20, scope: !13237)
!13237 = distinct !DILexicalBlock(scope: !13232, file: !3, line: 3725, column: 39)
!13238 = !DILocation(line: 3726, column: 3, scope: !13237)
!13239 = !DILocation(line: 3727, column: 25, scope: !13237)
!13240 = !DILocation(line: 3727, column: 49, scope: !13237)
!13241 = !DILocation(line: 3727, column: 57, scope: !13237)
!13242 = !DILocation(line: 3727, column: 3, scope: !13237)
!13243 = !DILocation(line: 3729, column: 3, scope: !13237)
!13244 = !DILocation(line: 3731, column: 6, scope: !13245)
!13245 = distinct !DILexicalBlock(scope: !13179, file: !3, line: 3731, column: 6)
!13246 = !DILocation(line: 3731, column: 6, scope: !13179)
!13247 = !DILocation(line: 3732, column: 7, scope: !13248)
!13248 = distinct !DILexicalBlock(scope: !13249, file: !3, line: 3732, column: 7)
!13249 = distinct !DILexicalBlock(scope: !13245, file: !3, line: 3731, column: 23)
!13250 = !DILocation(line: 3732, column: 11, scope: !13248)
!13251 = !DILocation(line: 3732, column: 22, scope: !13248)
!13252 = !DILocation(line: 3732, column: 7, scope: !13249)
!13253 = !DILocation(line: 3733, column: 4, scope: !13254)
!13254 = distinct !DILexicalBlock(scope: !13255, file: !3, line: 3733, column: 4)
!13255 = distinct !DILexicalBlock(scope: !13248, file: !3, line: 3732, column: 42)
!13256 = !DILocation(line: 3733, column: 4, scope: !13257)
!13257 = distinct !DILexicalBlock(scope: !13254, file: !3, line: 3733, column: 4)
!13258 = !DILocation(line: 3734, column: 5, scope: !13259)
!13259 = distinct !DILexicalBlock(scope: !13257, file: !3, line: 3733, column: 56)
!13260 = !DILocation(line: 3735, column: 10, scope: !13261)
!13261 = distinct !DILexicalBlock(scope: !13259, file: !3, line: 3735, column: 9)
!13262 = !DILocation(line: 3735, column: 49, scope: !13261)
!13263 = !DILocation(line: 3735, column: 53, scope: !13261)
!13264 = !DILocation(line: 3735, column: 9, scope: !13259)
!13265 = !DILocation(line: 3736, column: 6, scope: !13266)
!13266 = distinct !DILexicalBlock(scope: !13267, file: !3, line: 3736, column: 6)
!13267 = distinct !DILexicalBlock(scope: !13261, file: !3, line: 3735, column: 93)
!13268 = !DILocation(line: 3736, column: 6, scope: !13269)
!13269 = distinct !DILexicalBlock(scope: !13266, file: !3, line: 3736, column: 6)
!13270 = !DILocation(line: 3737, column: 13, scope: !13271)
!13271 = distinct !DILexicalBlock(scope: !13269, file: !3, line: 3736, column: 54)
!13272 = !DILocation(line: 3737, column: 11, scope: !13271)
!13273 = !DILocation(line: 3738, column: 7, scope: !13271)
!13274 = !DILocation(line: 3738, column: 12, scope: !13271)
!13275 = !DILocation(line: 3738, column: 17, scope: !13271)
!13276 = !DILocation(line: 3739, column: 6, scope: !13271)
!13277 = distinct !{!13277, !13265, !13278}
!13278 = !DILocation(line: 3739, column: 6, scope: !13266)
!13279 = !DILocation(line: 3741, column: 6, scope: !13267)
!13280 = !DILocation(line: 3742, column: 5, scope: !13267)
!13281 = !DILocation(line: 3743, column: 4, scope: !13259)
!13282 = distinct !{!13282, !13253, !13283}
!13283 = !DILocation(line: 3743, column: 4, scope: !13254)
!13284 = !DILocation(line: 3744, column: 3, scope: !13255)
!13285 = !DILocation(line: 3747, column: 9, scope: !13286)
!13286 = distinct !DILexicalBlock(scope: !13287, file: !3, line: 3747, column: 8)
!13287 = distinct !DILexicalBlock(scope: !13248, file: !3, line: 3745, column: 8)
!13288 = !DILocation(line: 3747, column: 8, scope: !13287)
!13289 = !DILocation(line: 3748, column: 5, scope: !13290)
!13290 = distinct !DILexicalBlock(scope: !13291, file: !3, line: 3748, column: 5)
!13291 = distinct !DILexicalBlock(scope: !13286, file: !3, line: 3747, column: 21)
!13292 = !DILocation(line: 3748, column: 5, scope: !13293)
!13293 = distinct !DILexicalBlock(scope: !13290, file: !3, line: 3748, column: 5)
!13294 = !DILocation(line: 3749, column: 6, scope: !13295)
!13295 = distinct !DILexicalBlock(scope: !13293, file: !3, line: 3748, column: 57)
!13296 = !DILocation(line: 3750, column: 11, scope: !13297)
!13297 = distinct !DILexicalBlock(scope: !13295, file: !3, line: 3750, column: 10)
!13298 = !DILocation(line: 3750, column: 50, scope: !13297)
!13299 = !DILocation(line: 3750, column: 54, scope: !13297)
!13300 = !DILocation(line: 3750, column: 10, scope: !13295)
!13301 = !DILocalVariable(name: "totsel", scope: !13302, file: !3, line: 3751, type: !22)
!13302 = distinct !DILexicalBlock(scope: !13297, file: !3, line: 3750, column: 94)
!13303 = !DILocation(line: 3751, column: 11, scope: !13302)
!13304 = !DILocation(line: 3752, column: 7, scope: !13305)
!13305 = distinct !DILexicalBlock(scope: !13302, file: !3, line: 3752, column: 7)
!13306 = !DILocation(line: 3752, column: 7, scope: !13307)
!13307 = distinct !DILexicalBlock(scope: !13305, file: !3, line: 3752, column: 7)
!13308 = !DILocation(line: 3753, column: 18, scope: !13309)
!13309 = distinct !DILexicalBlock(scope: !13307, file: !3, line: 3752, column: 55)
!13310 = !DILocation(line: 3753, column: 15, scope: !13309)
!13311 = !DILocation(line: 3754, column: 7, scope: !13309)
!13312 = distinct !{!13312, !13304, !13313}
!13313 = !DILocation(line: 3754, column: 7, scope: !13305)
!13314 = !DILocation(line: 3756, column: 12, scope: !13315)
!13315 = distinct !DILexicalBlock(scope: !13302, file: !3, line: 3756, column: 11)
!13316 = !DILocation(line: 3756, column: 11, scope: !13302)
!13317 = !DILocation(line: 3757, column: 8, scope: !13318)
!13318 = distinct !DILexicalBlock(scope: !13319, file: !3, line: 3757, column: 8)
!13319 = distinct !DILexicalBlock(scope: !13315, file: !3, line: 3756, column: 20)
!13320 = !DILocation(line: 3757, column: 8, scope: !13321)
!13321 = distinct !DILexicalBlock(scope: !13318, file: !3, line: 3757, column: 8)
!13322 = !DILocation(line: 3758, column: 15, scope: !13323)
!13323 = distinct !DILexicalBlock(scope: !13321, file: !3, line: 3757, column: 56)
!13324 = !DILocation(line: 3758, column: 13, scope: !13323)
!13325 = !DILocation(line: 3759, column: 9, scope: !13323)
!13326 = !DILocation(line: 3759, column: 14, scope: !13323)
!13327 = !DILocation(line: 3759, column: 19, scope: !13323)
!13328 = !DILocation(line: 3760, column: 8, scope: !13323)
!13329 = distinct !{!13329, !13317, !13330}
!13330 = !DILocation(line: 3760, column: 8, scope: !13318)
!13331 = !DILocation(line: 3762, column: 8, scope: !13319)
!13332 = !DILocation(line: 3763, column: 7, scope: !13319)
!13333 = !DILocation(line: 3764, column: 6, scope: !13302)
!13334 = !DILocation(line: 3765, column: 5, scope: !13295)
!13335 = distinct !{!13335, !13289, !13336}
!13336 = !DILocation(line: 3765, column: 5, scope: !13290)
!13337 = !DILocation(line: 3766, column: 4, scope: !13291)
!13338 = !DILocation(line: 3768, column: 5, scope: !13339)
!13339 = distinct !DILexicalBlock(scope: !13340, file: !3, line: 3768, column: 5)
!13340 = distinct !DILexicalBlock(scope: !13286, file: !3, line: 3767, column: 9)
!13341 = !DILocation(line: 3768, column: 5, scope: !13342)
!13342 = distinct !DILexicalBlock(scope: !13339, file: !3, line: 3768, column: 5)
!13343 = !DILocation(line: 3769, column: 6, scope: !13344)
!13344 = distinct !DILexicalBlock(scope: !13342, file: !3, line: 3768, column: 57)
!13345 = !DILocation(line: 3770, column: 11, scope: !13346)
!13346 = distinct !DILexicalBlock(scope: !13344, file: !3, line: 3770, column: 10)
!13347 = !DILocation(line: 3770, column: 50, scope: !13346)
!13348 = !DILocation(line: 3770, column: 54, scope: !13346)
!13349 = !DILocation(line: 3770, column: 10, scope: !13344)
!13350 = !DILocation(line: 3771, column: 7, scope: !13351)
!13351 = distinct !DILexicalBlock(scope: !13352, file: !3, line: 3771, column: 7)
!13352 = distinct !DILexicalBlock(scope: !13346, file: !3, line: 3770, column: 94)
!13353 = !DILocation(line: 3771, column: 7, scope: !13354)
!13354 = distinct !DILexicalBlock(scope: !13351, file: !3, line: 3771, column: 7)
!13355 = !DILocation(line: 3772, column: 12, scope: !13356)
!13356 = distinct !DILexicalBlock(scope: !13357, file: !3, line: 3772, column: 12)
!13357 = distinct !DILexicalBlock(scope: !13354, file: !3, line: 3771, column: 55)
!13358 = !DILocation(line: 3772, column: 52, scope: !13356)
!13359 = !DILocation(line: 3772, column: 12, scope: !13357)
!13360 = !DILocation(line: 3773, column: 15, scope: !13361)
!13361 = distinct !DILexicalBlock(scope: !13356, file: !3, line: 3772, column: 58)
!13362 = !DILocation(line: 3773, column: 13, scope: !13361)
!13363 = !DILocation(line: 3774, column: 9, scope: !13361)
!13364 = !DILocation(line: 3774, column: 14, scope: !13361)
!13365 = !DILocation(line: 3774, column: 19, scope: !13361)
!13366 = !DILocation(line: 3775, column: 8, scope: !13361)
!13367 = !DILocation(line: 3776, column: 7, scope: !13357)
!13368 = distinct !{!13368, !13350, !13369}
!13369 = !DILocation(line: 3776, column: 7, scope: !13351)
!13370 = !DILocation(line: 3778, column: 7, scope: !13352)
!13371 = !DILocation(line: 3779, column: 6, scope: !13352)
!13372 = !DILocation(line: 3780, column: 5, scope: !13344)
!13373 = distinct !{!13373, !13338, !13374}
!13374 = !DILocation(line: 3780, column: 5, scope: !13339)
!13375 = !DILocation(line: 3783, column: 2, scope: !13249)
!13376 = !DILocation(line: 3784, column: 11, scope: !13377)
!13377 = distinct !DILexicalBlock(scope: !13245, file: !3, line: 3784, column: 11)
!13378 = !DILocation(line: 3784, column: 15, scope: !13377)
!13379 = !DILocation(line: 3784, column: 26, scope: !13377)
!13380 = !DILocation(line: 3784, column: 11, scope: !13245)
!13381 = !DILocation(line: 3785, column: 3, scope: !13382)
!13382 = distinct !DILexicalBlock(scope: !13383, file: !3, line: 3785, column: 3)
!13383 = distinct !DILexicalBlock(scope: !13377, file: !3, line: 3784, column: 46)
!13384 = !DILocation(line: 3785, column: 3, scope: !13385)
!13385 = distinct !DILexicalBlock(scope: !13382, file: !3, line: 3785, column: 3)
!13386 = !DILocation(line: 3786, column: 4, scope: !13387)
!13387 = distinct !DILexicalBlock(scope: !13385, file: !3, line: 3785, column: 55)
!13388 = !DILocation(line: 3787, column: 9, scope: !13389)
!13389 = distinct !DILexicalBlock(scope: !13387, file: !3, line: 3787, column: 8)
!13390 = !DILocation(line: 3787, column: 48, scope: !13389)
!13391 = !DILocation(line: 3787, column: 52, scope: !13389)
!13392 = !DILocation(line: 3787, column: 8, scope: !13387)
!13393 = !DILocation(line: 3788, column: 5, scope: !13394)
!13394 = distinct !DILexicalBlock(scope: !13395, file: !3, line: 3788, column: 5)
!13395 = distinct !DILexicalBlock(scope: !13389, file: !3, line: 3787, column: 92)
!13396 = !DILocation(line: 3788, column: 5, scope: !13397)
!13397 = distinct !DILexicalBlock(scope: !13394, file: !3, line: 3788, column: 5)
!13398 = !DILocation(line: 3789, column: 12, scope: !13399)
!13399 = distinct !DILexicalBlock(scope: !13397, file: !3, line: 3788, column: 53)
!13400 = !DILocation(line: 3789, column: 10, scope: !13399)
!13401 = !DILocation(line: 3790, column: 6, scope: !13399)
!13402 = !DILocation(line: 3790, column: 11, scope: !13399)
!13403 = !DILocation(line: 3790, column: 16, scope: !13399)
!13404 = !DILocation(line: 3791, column: 5, scope: !13399)
!13405 = distinct !{!13405, !13393, !13406}
!13406 = !DILocation(line: 3791, column: 5, scope: !13394)
!13407 = !DILocation(line: 3793, column: 5, scope: !13395)
!13408 = !DILocation(line: 3794, column: 4, scope: !13395)
!13409 = !DILocation(line: 3795, column: 3, scope: !13387)
!13410 = distinct !{!13410, !13381, !13411}
!13411 = !DILocation(line: 3795, column: 3, scope: !13382)
!13412 = !DILocation(line: 3796, column: 2, scope: !13383)
!13413 = !DILocation(line: 3798, column: 3, scope: !13414)
!13414 = distinct !DILexicalBlock(scope: !13415, file: !3, line: 3798, column: 3)
!13415 = distinct !DILexicalBlock(scope: !13377, file: !3, line: 3797, column: 7)
!13416 = !DILocation(line: 3798, column: 3, scope: !13417)
!13417 = distinct !DILexicalBlock(scope: !13414, file: !3, line: 3798, column: 3)
!13418 = !DILocation(line: 3799, column: 4, scope: !13419)
!13419 = distinct !DILexicalBlock(scope: !13417, file: !3, line: 3798, column: 55)
!13420 = !DILocation(line: 3800, column: 9, scope: !13421)
!13421 = distinct !DILexicalBlock(scope: !13419, file: !3, line: 3800, column: 8)
!13422 = !DILocation(line: 3800, column: 48, scope: !13421)
!13423 = !DILocation(line: 3800, column: 52, scope: !13421)
!13424 = !DILocation(line: 3800, column: 8, scope: !13419)
!13425 = !DILocation(line: 3801, column: 5, scope: !13426)
!13426 = distinct !DILexicalBlock(scope: !13427, file: !3, line: 3801, column: 5)
!13427 = distinct !DILexicalBlock(scope: !13421, file: !3, line: 3800, column: 92)
!13428 = !DILocation(line: 3801, column: 5, scope: !13429)
!13429 = distinct !DILexicalBlock(scope: !13426, file: !3, line: 3801, column: 5)
!13430 = !DILocation(line: 3802, column: 10, scope: !13431)
!13431 = distinct !DILexicalBlock(scope: !13432, file: !3, line: 3802, column: 10)
!13432 = distinct !DILexicalBlock(scope: !13429, file: !3, line: 3801, column: 53)
!13433 = !DILocation(line: 3802, column: 50, scope: !13431)
!13434 = !DILocation(line: 3802, column: 10, scope: !13432)
!13435 = !DILocation(line: 3803, column: 13, scope: !13436)
!13436 = distinct !DILexicalBlock(scope: !13431, file: !3, line: 3802, column: 56)
!13437 = !DILocation(line: 3803, column: 11, scope: !13436)
!13438 = !DILocation(line: 3804, column: 7, scope: !13436)
!13439 = !DILocation(line: 3804, column: 12, scope: !13436)
!13440 = !DILocation(line: 3804, column: 17, scope: !13436)
!13441 = !DILocation(line: 3805, column: 6, scope: !13436)
!13442 = !DILocation(line: 3806, column: 5, scope: !13432)
!13443 = distinct !{!13443, !13425, !13444}
!13444 = !DILocation(line: 3806, column: 5, scope: !13426)
!13445 = !DILocation(line: 3808, column: 5, scope: !13427)
!13446 = !DILocation(line: 3809, column: 4, scope: !13427)
!13447 = !DILocation(line: 3810, column: 3, scope: !13419)
!13448 = distinct !{!13448, !13413, !13449}
!13449 = !DILocation(line: 3810, column: 3, scope: !13414)
!13450 = !DILocation(line: 3814, column: 33, scope: !13179)
!13451 = !DILocation(line: 3814, column: 37, scope: !13179)
!13452 = !DILocation(line: 3814, column: 2, scope: !13179)
!13453 = !DILocation(line: 3816, column: 24, scope: !13179)
!13454 = !DILocation(line: 3816, column: 48, scope: !13179)
!13455 = !DILocation(line: 3816, column: 56, scope: !13179)
!13456 = !DILocation(line: 3816, column: 2, scope: !13179)
!13457 = !DILocation(line: 3818, column: 2, scope: !13179)
!13458 = !DILocation(line: 3819, column: 1, scope: !13179)
!13459 = distinct !DISubprogram(name: "uv_hide_exec", scope: !3, file: !3, line: 3589, type: !6778, scopeLine: 3590, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!13460 = !DILocalVariable(name: "C", arg: 1, scope: !13459, file: !3, line: 3589, type: !6780)
!13461 = !DILocation(line: 3589, column: 35, scope: !13459)
!13462 = !DILocalVariable(name: "op", arg: 2, scope: !13459, file: !3, line: 3589, type: !6783)
!13463 = !DILocation(line: 3589, column: 50, scope: !13459)
!13464 = !DILocalVariable(name: "sima", scope: !13459, file: !3, line: 3591, type: !4824)
!13465 = !DILocation(line: 3591, column: 14, scope: !13459)
!13466 = !DILocation(line: 3591, column: 40, scope: !13459)
!13467 = !DILocation(line: 3591, column: 21, scope: !13459)
!13468 = !DILocalVariable(name: "obedit", scope: !13459, file: !3, line: 3592, type: !3588)
!13469 = !DILocation(line: 3592, column: 10, scope: !13459)
!13470 = !DILocation(line: 3592, column: 40, scope: !13459)
!13471 = !DILocation(line: 3592, column: 19, scope: !13459)
!13472 = !DILocalVariable(name: "scene", scope: !13459, file: !3, line: 3593, type: !3841)
!13473 = !DILocation(line: 3593, column: 9, scope: !13459)
!13474 = !DILocation(line: 3593, column: 32, scope: !13459)
!13475 = !DILocation(line: 3593, column: 17, scope: !13459)
!13476 = !DILocalVariable(name: "ts", scope: !13459, file: !3, line: 3594, type: !4138)
!13477 = !DILocation(line: 3594, column: 16, scope: !13459)
!13478 = !DILocation(line: 3594, column: 21, scope: !13459)
!13479 = !DILocation(line: 3594, column: 28, scope: !13459)
!13480 = !DILocalVariable(name: "em", scope: !13459, file: !3, line: 3595, type: !3593)
!13481 = !DILocation(line: 3595, column: 14, scope: !13459)
!13482 = !DILocation(line: 3595, column: 44, scope: !13459)
!13483 = !DILocation(line: 3595, column: 19, scope: !13459)
!13484 = !DILocalVariable(name: "efa", scope: !13459, file: !3, line: 3596, type: !3238)
!13485 = !DILocation(line: 3596, column: 10, scope: !13459)
!13486 = !DILocalVariable(name: "l", scope: !13459, file: !3, line: 3597, type: !3220)
!13487 = !DILocation(line: 3597, column: 10, scope: !13459)
!13488 = !DILocalVariable(name: "iter", scope: !13459, file: !3, line: 3598, type: !3856)
!13489 = !DILocation(line: 3598, column: 9, scope: !13459)
!13490 = !DILocalVariable(name: "liter", scope: !13459, file: !3, line: 3598, type: !3856)
!13491 = !DILocation(line: 3598, column: 15, scope: !13459)
!13492 = !DILocalVariable(name: "luv", scope: !13459, file: !3, line: 3599, type: !3240)
!13493 = !DILocation(line: 3599, column: 11, scope: !13459)
!13494 = !DILocalVariable(name: "tf", scope: !13459, file: !3, line: 3600, type: !3945)
!13495 = !DILocation(line: 3600, column: 12, scope: !13459)
!13496 = !DILocalVariable(name: "swap", scope: !13459, file: !3, line: 3601, type: !3951)
!13497 = !DILocation(line: 3601, column: 13, scope: !13459)
!13498 = !DILocation(line: 3601, column: 36, scope: !13459)
!13499 = !DILocation(line: 3601, column: 40, scope: !13459)
!13500 = !DILocation(line: 3601, column: 20, scope: !13459)
!13501 = !DILocalVariable(name: "ima", scope: !13459, file: !3, line: 3602, type: !3164)
!13502 = !DILocation(line: 3602, column: 9, scope: !13459)
!13503 = !DILocation(line: 3602, column: 15, scope: !13459)
!13504 = !DILocation(line: 3602, column: 22, scope: !13459)
!13505 = !DILocation(line: 3602, column: 28, scope: !13459)
!13506 = !DILocalVariable(name: "use_face_center", scope: !13459, file: !3, line: 3603, type: !4165)
!13507 = !DILocation(line: 3603, column: 12, scope: !13459)
!13508 = !DILocation(line: 3603, column: 31, scope: !13459)
!13509 = !DILocation(line: 3603, column: 35, scope: !13459)
!13510 = !DILocation(line: 3603, column: 49, scope: !13459)
!13511 = !DILocalVariable(name: "cd_loop_uv_offset", scope: !13459, file: !3, line: 3605, type: !4165)
!13512 = !DILocation(line: 3605, column: 12, scope: !13459)
!13513 = !DILocation(line: 3605, column: 56, scope: !13459)
!13514 = !DILocation(line: 3605, column: 60, scope: !13459)
!13515 = !DILocation(line: 3605, column: 64, scope: !13459)
!13516 = !DILocation(line: 3605, column: 33, scope: !13459)
!13517 = !DILocalVariable(name: "cd_poly_tex_offset", scope: !13459, file: !3, line: 3606, type: !4165)
!13518 = !DILocation(line: 3606, column: 12, scope: !13459)
!13519 = !DILocation(line: 3606, column: 56, scope: !13459)
!13520 = !DILocation(line: 3606, column: 60, scope: !13459)
!13521 = !DILocation(line: 3606, column: 64, scope: !13459)
!13522 = !DILocation(line: 3606, column: 33, scope: !13459)
!13523 = !DILocation(line: 3608, column: 6, scope: !13524)
!13524 = distinct !DILexicalBlock(scope: !13459, file: !3, line: 3608, column: 6)
!13525 = !DILocation(line: 3608, column: 10, scope: !13524)
!13526 = !DILocation(line: 3608, column: 18, scope: !13524)
!13527 = !DILocation(line: 3608, column: 6, scope: !13459)
!13528 = !DILocation(line: 3609, column: 18, scope: !13529)
!13529 = distinct !DILexicalBlock(scope: !13524, file: !3, line: 3608, column: 39)
!13530 = !DILocation(line: 3609, column: 22, scope: !13529)
!13531 = !DILocation(line: 3609, column: 3, scope: !13529)
!13532 = !DILocation(line: 3610, column: 25, scope: !13529)
!13533 = !DILocation(line: 3610, column: 49, scope: !13529)
!13534 = !DILocation(line: 3610, column: 57, scope: !13529)
!13535 = !DILocation(line: 3610, column: 3, scope: !13529)
!13536 = !DILocation(line: 3612, column: 3, scope: !13529)
!13537 = !DILocation(line: 3615, column: 2, scope: !13538)
!13538 = distinct !DILexicalBlock(scope: !13459, file: !3, line: 3615, column: 2)
!13539 = !DILocation(line: 3615, column: 2, scope: !13540)
!13540 = distinct !DILexicalBlock(scope: !13538, file: !3, line: 3615, column: 2)
!13541 = !DILocalVariable(name: "hide", scope: !13542, file: !3, line: 3616, type: !22)
!13542 = distinct !DILexicalBlock(scope: !13540, file: !3, line: 3615, column: 54)
!13543 = !DILocation(line: 3616, column: 7, scope: !13542)
!13544 = !DILocation(line: 3618, column: 8, scope: !13542)
!13545 = !DILocation(line: 3618, column: 6, scope: !13542)
!13546 = !DILocation(line: 3620, column: 33, scope: !13547)
!13547 = distinct !DILexicalBlock(scope: !13542, file: !3, line: 3620, column: 7)
!13548 = !DILocation(line: 3620, column: 40, scope: !13547)
!13549 = !DILocation(line: 3620, column: 45, scope: !13547)
!13550 = !DILocation(line: 3620, column: 50, scope: !13547)
!13551 = !DILocation(line: 3620, column: 8, scope: !13547)
!13552 = !DILocation(line: 3620, column: 7, scope: !13542)
!13553 = !DILocation(line: 3621, column: 4, scope: !13554)
!13554 = distinct !DILexicalBlock(scope: !13547, file: !3, line: 3620, column: 55)
!13555 = !DILocation(line: 3624, column: 3, scope: !13556)
!13556 = distinct !DILexicalBlock(scope: !13542, file: !3, line: 3624, column: 3)
!13557 = !DILocation(line: 3624, column: 3, scope: !13558)
!13558 = distinct !DILexicalBlock(scope: !13556, file: !3, line: 3624, column: 3)
!13559 = !DILocation(line: 3625, column: 10, scope: !13560)
!13560 = distinct !DILexicalBlock(scope: !13558, file: !3, line: 3624, column: 51)
!13561 = !DILocation(line: 3625, column: 8, scope: !13560)
!13562 = !DILocation(line: 3627, column: 8, scope: !13563)
!13563 = distinct !DILexicalBlock(scope: !13560, file: !3, line: 3627, column: 8)
!13564 = !DILocation(line: 3627, column: 8, scope: !13560)
!13565 = !DILocation(line: 3628, column: 10, scope: !13566)
!13566 = distinct !DILexicalBlock(scope: !13563, file: !3, line: 3627, column: 33)
!13567 = !DILocation(line: 3629, column: 5, scope: !13566)
!13568 = !DILocation(line: 3631, column: 3, scope: !13560)
!13569 = distinct !{!13569, !13555, !13570}
!13570 = !DILocation(line: 3631, column: 3, scope: !13556)
!13571 = !DILocation(line: 3633, column: 7, scope: !13572)
!13572 = distinct !DILexicalBlock(scope: !13542, file: !3, line: 3633, column: 7)
!13573 = !DILocation(line: 3633, column: 7, scope: !13542)
!13574 = !DILocation(line: 3636, column: 8, scope: !13575)
!13575 = distinct !DILexicalBlock(scope: !13576, file: !3, line: 3636, column: 8)
!13576 = distinct !DILexicalBlock(scope: !13572, file: !3, line: 3633, column: 13)
!13577 = !DILocation(line: 3636, column: 8, scope: !13576)
!13578 = !DILocation(line: 3637, column: 9, scope: !13579)
!13579 = distinct !DILexicalBlock(scope: !13580, file: !3, line: 3637, column: 9)
!13580 = distinct !DILexicalBlock(scope: !13575, file: !3, line: 3636, column: 25)
!13581 = !DILocation(line: 3637, column: 13, scope: !13579)
!13582 = !DILocation(line: 3637, column: 24, scope: !13579)
!13583 = !DILocation(line: 3637, column: 9, scope: !13580)
!13584 = !DILocation(line: 3639, column: 32, scope: !13585)
!13585 = distinct !DILexicalBlock(scope: !13586, file: !3, line: 3639, column: 10)
!13586 = distinct !DILexicalBlock(scope: !13579, file: !3, line: 3637, column: 44)
!13587 = !DILocation(line: 3639, column: 43, scope: !13585)
!13588 = !DILocation(line: 3639, column: 10, scope: !13585)
!13589 = !DILocation(line: 3639, column: 66, scope: !13585)
!13590 = !DILocation(line: 3639, column: 65, scope: !13585)
!13591 = !DILocation(line: 3639, column: 62, scope: !13585)
!13592 = !DILocation(line: 3639, column: 10, scope: !13586)
!13593 = !DILocation(line: 3640, column: 26, scope: !13594)
!13594 = distinct !DILexicalBlock(scope: !13585, file: !3, line: 3639, column: 72)
!13595 = !DILocation(line: 3640, column: 30, scope: !13594)
!13596 = !DILocation(line: 3640, column: 34, scope: !13594)
!13597 = !DILocation(line: 3640, column: 7, scope: !13594)
!13598 = !DILocation(line: 3641, column: 6, scope: !13594)
!13599 = !DILocation(line: 3642, column: 33, scope: !13586)
!13600 = !DILocation(line: 3642, column: 40, scope: !13586)
!13601 = !DILocation(line: 3642, column: 44, scope: !13586)
!13602 = !DILocation(line: 3642, column: 49, scope: !13586)
!13603 = !DILocation(line: 3642, column: 6, scope: !13586)
!13604 = !DILocation(line: 3643, column: 5, scope: !13586)
!13605 = !DILocation(line: 3645, column: 32, scope: !13606)
!13606 = distinct !DILexicalBlock(scope: !13607, file: !3, line: 3645, column: 10)
!13607 = distinct !DILexicalBlock(scope: !13579, file: !3, line: 3644, column: 10)
!13608 = !DILocation(line: 3645, column: 43, scope: !13606)
!13609 = !DILocation(line: 3645, column: 10, scope: !13606)
!13610 = !DILocation(line: 3645, column: 66, scope: !13606)
!13611 = !DILocation(line: 3645, column: 65, scope: !13606)
!13612 = !DILocation(line: 3645, column: 62, scope: !13606)
!13613 = !DILocation(line: 3645, column: 10, scope: !13607)
!13614 = !DILocation(line: 3646, column: 7, scope: !13615)
!13615 = distinct !DILexicalBlock(scope: !13616, file: !3, line: 3646, column: 7)
!13616 = distinct !DILexicalBlock(scope: !13606, file: !3, line: 3645, column: 72)
!13617 = !DILocation(line: 3646, column: 7, scope: !13618)
!13618 = distinct !DILexicalBlock(scope: !13615, file: !3, line: 3646, column: 7)
!13619 = !DILocation(line: 3647, column: 14, scope: !13620)
!13620 = distinct !DILexicalBlock(scope: !13618, file: !3, line: 3646, column: 55)
!13621 = !DILocation(line: 3647, column: 12, scope: !13620)
!13622 = !DILocation(line: 3648, column: 12, scope: !13623)
!13623 = distinct !DILexicalBlock(scope: !13620, file: !3, line: 3648, column: 12)
!13624 = !DILocation(line: 3648, column: 12, scope: !13620)
!13625 = !DILocation(line: 3649, column: 28, scope: !13626)
!13626 = distinct !DILexicalBlock(scope: !13623, file: !3, line: 3648, column: 37)
!13627 = !DILocation(line: 3649, column: 32, scope: !13626)
!13628 = !DILocation(line: 3649, column: 36, scope: !13626)
!13629 = !DILocation(line: 3649, column: 39, scope: !13626)
!13630 = !DILocation(line: 3649, column: 9, scope: !13626)
!13631 = !DILocation(line: 3650, column: 8, scope: !13626)
!13632 = !DILocation(line: 3651, column: 7, scope: !13620)
!13633 = distinct !{!13633, !13614, !13634}
!13634 = !DILocation(line: 3651, column: 7, scope: !13615)
!13635 = !DILocation(line: 3652, column: 6, scope: !13616)
!13636 = !DILocation(line: 3653, column: 11, scope: !13637)
!13637 = distinct !DILexicalBlock(scope: !13607, file: !3, line: 3653, column: 10)
!13638 = !DILocation(line: 3653, column: 10, scope: !13607)
!13639 = !DILocation(line: 3653, column: 44, scope: !13637)
!13640 = !DILocation(line: 3653, column: 51, scope: !13637)
!13641 = !DILocation(line: 3653, column: 55, scope: !13637)
!13642 = !DILocation(line: 3653, column: 60, scope: !13637)
!13643 = !DILocation(line: 3653, column: 17, scope: !13637)
!13644 = !DILocation(line: 3655, column: 4, scope: !13580)
!13645 = !DILocation(line: 3656, column: 13, scope: !13646)
!13646 = distinct !DILexicalBlock(scope: !13575, file: !3, line: 3656, column: 13)
!13647 = !DILocation(line: 3656, column: 17, scope: !13646)
!13648 = !DILocation(line: 3656, column: 28, scope: !13646)
!13649 = !DILocation(line: 3656, column: 13, scope: !13575)
!13650 = !DILocation(line: 3658, column: 31, scope: !13651)
!13651 = distinct !DILexicalBlock(scope: !13652, file: !3, line: 3658, column: 9)
!13652 = distinct !DILexicalBlock(scope: !13646, file: !3, line: 3656, column: 48)
!13653 = !DILocation(line: 3658, column: 43, scope: !13651)
!13654 = !DILocation(line: 3658, column: 9, scope: !13651)
!13655 = !DILocation(line: 3658, column: 66, scope: !13651)
!13656 = !DILocation(line: 3658, column: 65, scope: !13651)
!13657 = !DILocation(line: 3658, column: 62, scope: !13651)
!13658 = !DILocation(line: 3658, column: 9, scope: !13652)
!13659 = !DILocation(line: 3659, column: 25, scope: !13660)
!13660 = distinct !DILexicalBlock(scope: !13651, file: !3, line: 3658, column: 72)
!13661 = !DILocation(line: 3659, column: 29, scope: !13660)
!13662 = !DILocation(line: 3659, column: 33, scope: !13660)
!13663 = !DILocation(line: 3659, column: 6, scope: !13660)
!13664 = !DILocation(line: 3660, column: 33, scope: !13660)
!13665 = !DILocation(line: 3660, column: 40, scope: !13660)
!13666 = !DILocation(line: 3660, column: 44, scope: !13660)
!13667 = !DILocation(line: 3660, column: 49, scope: !13660)
!13668 = !DILocation(line: 3660, column: 6, scope: !13660)
!13669 = !DILocation(line: 3661, column: 5, scope: !13660)
!13670 = !DILocation(line: 3662, column: 4, scope: !13652)
!13671 = !DILocation(line: 3664, column: 5, scope: !13672)
!13672 = distinct !DILexicalBlock(scope: !13673, file: !3, line: 3664, column: 5)
!13673 = distinct !DILexicalBlock(scope: !13646, file: !3, line: 3663, column: 9)
!13674 = !DILocation(line: 3664, column: 5, scope: !13675)
!13675 = distinct !DILexicalBlock(scope: !13672, file: !3, line: 3664, column: 5)
!13676 = !DILocation(line: 3665, column: 12, scope: !13677)
!13677 = distinct !DILexicalBlock(scope: !13675, file: !3, line: 3664, column: 53)
!13678 = !DILocation(line: 3665, column: 10, scope: !13677)
!13679 = !DILocation(line: 3666, column: 10, scope: !13680)
!13680 = distinct !DILexicalBlock(scope: !13677, file: !3, line: 3666, column: 10)
!13681 = !DILocation(line: 3666, column: 10, scope: !13677)
!13682 = !DILocation(line: 3667, column: 26, scope: !13683)
!13683 = distinct !DILexicalBlock(scope: !13680, file: !3, line: 3666, column: 35)
!13684 = !DILocation(line: 3667, column: 30, scope: !13683)
!13685 = !DILocation(line: 3667, column: 34, scope: !13683)
!13686 = !DILocation(line: 3667, column: 37, scope: !13683)
!13687 = !DILocation(line: 3667, column: 7, scope: !13683)
!13688 = !DILocation(line: 3668, column: 12, scope: !13689)
!13689 = distinct !DILexicalBlock(scope: !13683, file: !3, line: 3668, column: 11)
!13690 = !DILocation(line: 3668, column: 11, scope: !13683)
!13691 = !DILocation(line: 3668, column: 18, scope: !13689)
!13692 = !DILocation(line: 3668, column: 23, scope: !13689)
!13693 = !DILocation(line: 3668, column: 28, scope: !13689)
!13694 = !DILocation(line: 3669, column: 6, scope: !13683)
!13695 = !DILocation(line: 3670, column: 5, scope: !13677)
!13696 = distinct !{!13696, !13671, !13697}
!13697 = !DILocation(line: 3670, column: 5, scope: !13672)
!13698 = !DILocation(line: 3672, column: 3, scope: !13576)
!13699 = !DILocation(line: 3673, column: 2, scope: !13542)
!13700 = distinct !{!13700, !13537, !13701}
!13701 = !DILocation(line: 3673, column: 2, scope: !13538)
!13702 = !DILocation(line: 3676, column: 6, scope: !13703)
!13703 = distinct !DILexicalBlock(scope: !13459, file: !3, line: 3676, column: 6)
!13704 = !DILocation(line: 3676, column: 10, scope: !13703)
!13705 = !DILocation(line: 3676, column: 21, scope: !13703)
!13706 = !DILocation(line: 3676, column: 6, scope: !13459)
!13707 = !DILocation(line: 3677, column: 28, scope: !13703)
!13708 = !DILocation(line: 3677, column: 3, scope: !13703)
!13709 = !DILocation(line: 3679, column: 29, scope: !13459)
!13710 = !DILocation(line: 3679, column: 33, scope: !13459)
!13711 = !DILocation(line: 3679, column: 2, scope: !13459)
!13712 = !DILocation(line: 3680, column: 24, scope: !13459)
!13713 = !DILocation(line: 3680, column: 48, scope: !13459)
!13714 = !DILocation(line: 3680, column: 56, scope: !13459)
!13715 = !DILocation(line: 3680, column: 2, scope: !13459)
!13716 = !DILocation(line: 3682, column: 2, scope: !13459)
!13717 = !DILocation(line: 3683, column: 1, scope: !13459)
!13718 = distinct !DISubprogram(name: "bm_face_is_all_uv_sel", scope: !3, file: !3, line: 3572, type: !13719, scopeLine: 3574, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!13719 = !DISubroutineType(types: !13720)
!13720 = !{!2013, !3238, !2013, !4165}
!13721 = !DILocalVariable(name: "f", arg: 1, scope: !13718, file: !3, line: 3572, type: !3238)
!13722 = !DILocation(line: 3572, column: 43, scope: !13718)
!13723 = !DILocalVariable(name: "select_test", arg: 2, scope: !13718, file: !3, line: 3572, type: !2013)
!13724 = !DILocation(line: 3572, column: 51, scope: !13718)
!13725 = !DILocalVariable(name: "cd_loop_uv_offset", arg: 3, scope: !13718, file: !3, line: 3573, type: !4165)
!13726 = !DILocation(line: 3573, column: 45, scope: !13718)
!13727 = !DILocalVariable(name: "l_iter", scope: !13718, file: !3, line: 3575, type: !3220)
!13728 = !DILocation(line: 3575, column: 10, scope: !13718)
!13729 = !DILocalVariable(name: "l_first", scope: !13718, file: !3, line: 3576, type: !3220)
!13730 = !DILocation(line: 3576, column: 10, scope: !13718)
!13731 = !DILocation(line: 3578, column: 21, scope: !13718)
!13732 = !DILocation(line: 3578, column: 19, scope: !13718)
!13733 = !DILocation(line: 3578, column: 9, scope: !13718)
!13734 = !DILocation(line: 3579, column: 2, scope: !13718)
!13735 = !DILocalVariable(name: "luv", scope: !13736, file: !3, line: 3580, type: !3240)
!13736 = distinct !DILexicalBlock(scope: !13718, file: !3, line: 3579, column: 5)
!13737 = !DILocation(line: 3580, column: 12, scope: !13736)
!13738 = !DILocation(line: 3580, column: 18, scope: !13736)
!13739 = !DILocation(line: 3581, column: 8, scope: !13740)
!13740 = distinct !DILexicalBlock(scope: !13736, file: !3, line: 3581, column: 7)
!13741 = !DILocation(line: 3581, column: 7, scope: !13736)
!13742 = !DILocation(line: 3582, column: 4, scope: !13743)
!13743 = distinct !DILexicalBlock(scope: !13740, file: !3, line: 3581, column: 39)
!13744 = !DILocation(line: 3584, column: 2, scope: !13736)
!13745 = !DILocation(line: 3584, column: 21, scope: !13718)
!13746 = !DILocation(line: 3584, column: 29, scope: !13718)
!13747 = !DILocation(line: 3584, column: 19, scope: !13718)
!13748 = !DILocation(line: 3584, column: 38, scope: !13718)
!13749 = !DILocation(line: 3584, column: 35, scope: !13718)
!13750 = distinct !{!13750, !13734, !13751}
!13751 = !DILocation(line: 3584, column: 45, scope: !13718)
!13752 = !DILocation(line: 3586, column: 2, scope: !13718)
!13753 = !DILocation(line: 3587, column: 1, scope: !13718)
!13754 = distinct !DISubprogram(name: "uv_set_2d_cursor_exec", scope: !3, file: !3, line: 3843, type: !6778, scopeLine: 3844, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!13755 = !DILocalVariable(name: "C", arg: 1, scope: !13754, file: !3, line: 3843, type: !6780)
!13756 = !DILocation(line: 3843, column: 44, scope: !13754)
!13757 = !DILocalVariable(name: "op", arg: 2, scope: !13754, file: !3, line: 3843, type: !6783)
!13758 = !DILocation(line: 3843, column: 59, scope: !13754)
!13759 = !DILocalVariable(name: "sima", scope: !13754, file: !3, line: 3845, type: !4824)
!13760 = !DILocation(line: 3845, column: 14, scope: !13754)
!13761 = !DILocation(line: 3845, column: 40, scope: !13754)
!13762 = !DILocation(line: 3845, column: 21, scope: !13754)
!13763 = !DILocation(line: 3847, column: 7, scope: !13764)
!13764 = distinct !DILexicalBlock(scope: !13754, file: !3, line: 3847, column: 6)
!13765 = !DILocation(line: 3847, column: 6, scope: !13754)
!13766 = !DILocation(line: 3848, column: 3, scope: !13764)
!13767 = !DILocation(line: 3850, column: 22, scope: !13754)
!13768 = !DILocation(line: 3850, column: 26, scope: !13754)
!13769 = !DILocation(line: 3850, column: 43, scope: !13754)
!13770 = !DILocation(line: 3850, column: 49, scope: !13754)
!13771 = !DILocation(line: 3850, column: 2, scope: !13754)
!13772 = !DILocation(line: 3852, column: 24, scope: !13754)
!13773 = !DILocation(line: 3852, column: 2, scope: !13754)
!13774 = !DILocation(line: 3854, column: 2, scope: !13754)
!13775 = !DILocation(line: 3855, column: 1, scope: !13754)
!13776 = distinct !DISubprogram(name: "uv_set_2d_cursor_invoke", scope: !3, file: !3, line: 3857, type: !6998, scopeLine: 3858, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!13777 = !DILocalVariable(name: "C", arg: 1, scope: !13776, file: !3, line: 3857, type: !6780)
!13778 = !DILocation(line: 3857, column: 46, scope: !13776)
!13779 = !DILocalVariable(name: "op", arg: 2, scope: !13776, file: !3, line: 3857, type: !6783)
!13780 = !DILocation(line: 3857, column: 61, scope: !13776)
!13781 = !DILocalVariable(name: "event", arg: 3, scope: !13776, file: !3, line: 3857, type: !7000)
!13782 = !DILocation(line: 3857, column: 80, scope: !13776)
!13783 = !DILocalVariable(name: "ar", scope: !13776, file: !3, line: 3859, type: !7010)
!13784 = !DILocation(line: 3859, column: 11, scope: !13776)
!13785 = !DILocation(line: 3859, column: 30, scope: !13776)
!13786 = !DILocation(line: 3859, column: 16, scope: !13776)
!13787 = !DILocalVariable(name: "location", scope: !13776, file: !3, line: 3860, type: !769)
!13788 = !DILocation(line: 3860, column: 8, scope: !13776)
!13789 = !DILocation(line: 3862, column: 28, scope: !13776)
!13790 = !DILocation(line: 3862, column: 32, scope: !13776)
!13791 = !DILocation(line: 3862, column: 37, scope: !13776)
!13792 = !DILocation(line: 3862, column: 44, scope: !13776)
!13793 = !DILocation(line: 3862, column: 53, scope: !13776)
!13794 = !DILocation(line: 3862, column: 60, scope: !13776)
!13795 = !DILocation(line: 3862, column: 70, scope: !13776)
!13796 = !DILocation(line: 3862, column: 84, scope: !13776)
!13797 = !DILocation(line: 3862, column: 2, scope: !13776)
!13798 = !DILocation(line: 3863, column: 22, scope: !13776)
!13799 = !DILocation(line: 3863, column: 26, scope: !13776)
!13800 = !DILocation(line: 3863, column: 43, scope: !13776)
!13801 = !DILocation(line: 3863, column: 2, scope: !13776)
!13802 = !DILocation(line: 3865, column: 31, scope: !13776)
!13803 = !DILocation(line: 3865, column: 34, scope: !13776)
!13804 = !DILocation(line: 3865, column: 9, scope: !13776)
!13805 = !DILocation(line: 3865, column: 2, scope: !13776)
!13806 = distinct !DISubprogram(name: "uv_set_2d_cursor_poll", scope: !3, file: !3, line: 3836, type: !13807, scopeLine: 3837, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!13807 = !DISubroutineType(types: !13808)
!13808 = !{!22, !6780}
!13809 = !DILocalVariable(name: "C", arg: 1, scope: !13806, file: !3, line: 3836, type: !6780)
!13810 = !DILocation(line: 3836, column: 44, scope: !13806)
!13811 = !DILocation(line: 3838, column: 40, scope: !13806)
!13812 = !DILocation(line: 3838, column: 9, scope: !13806)
!13813 = !DILocation(line: 3838, column: 43, scope: !13806)
!13814 = !DILocation(line: 3839, column: 38, scope: !13806)
!13815 = !DILocation(line: 3839, column: 9, scope: !13806)
!13816 = !DILocation(line: 3839, column: 41, scope: !13806)
!13817 = !DILocation(line: 3840, column: 36, scope: !13806)
!13818 = !DILocation(line: 3840, column: 9, scope: !13806)
!13819 = !DILocation(line: 3838, column: 2, scope: !13806)
!13820 = distinct !DISubprogram(name: "set_tile_exec", scope: !3, file: !3, line: 3890, type: !6778, scopeLine: 3891, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!13821 = !DILocalVariable(name: "C", arg: 1, scope: !13820, file: !3, line: 3890, type: !6780)
!13822 = !DILocation(line: 3890, column: 36, scope: !13820)
!13823 = !DILocalVariable(name: "op", arg: 2, scope: !13820, file: !3, line: 3890, type: !6783)
!13824 = !DILocation(line: 3890, column: 51, scope: !13820)
!13825 = !DILocalVariable(name: "ima", scope: !13820, file: !3, line: 3892, type: !3164)
!13826 = !DILocation(line: 3892, column: 9, scope: !13820)
!13827 = !DILocation(line: 3892, column: 35, scope: !13820)
!13828 = !DILocation(line: 3892, column: 15, scope: !13820)
!13829 = !DILocalVariable(name: "tile", scope: !13820, file: !3, line: 3893, type: !1762)
!13830 = !DILocation(line: 3893, column: 6, scope: !13820)
!13831 = !DILocalVariable(name: "obedit", scope: !13820, file: !3, line: 3894, type: !3588)
!13832 = !DILocation(line: 3894, column: 10, scope: !13820)
!13833 = !DILocation(line: 3894, column: 40, scope: !13820)
!13834 = !DILocation(line: 3894, column: 19, scope: !13820)
!13835 = !DILocation(line: 3896, column: 20, scope: !13820)
!13836 = !DILocation(line: 3896, column: 24, scope: !13820)
!13837 = !DILocation(line: 3896, column: 37, scope: !13820)
!13838 = !DILocation(line: 3896, column: 2, scope: !13820)
!13839 = !DILocation(line: 3898, column: 22, scope: !13840)
!13840 = distinct !DILexicalBlock(scope: !13820, file: !3, line: 3898, column: 6)
!13841 = !DILocation(line: 3898, column: 30, scope: !13840)
!13842 = !DILocation(line: 3898, column: 35, scope: !13840)
!13843 = !DILocation(line: 3898, column: 45, scope: !13840)
!13844 = !DILocation(line: 3898, column: 50, scope: !13840)
!13845 = !DILocation(line: 3898, column: 57, scope: !13840)
!13846 = !DILocation(line: 3898, column: 55, scope: !13840)
!13847 = !DILocation(line: 3898, column: 43, scope: !13840)
!13848 = !DILocation(line: 3898, column: 6, scope: !13840)
!13849 = !DILocation(line: 3898, column: 6, scope: !13820)
!13850 = !DILocation(line: 3899, column: 25, scope: !13851)
!13851 = distinct !DILexicalBlock(scope: !13840, file: !3, line: 3898, column: 67)
!13852 = !DILocation(line: 3899, column: 47, scope: !13851)
!13853 = !DILocation(line: 3899, column: 55, scope: !13851)
!13854 = !DILocation(line: 3899, column: 3, scope: !13851)
!13855 = !DILocation(line: 3900, column: 25, scope: !13851)
!13856 = !DILocation(line: 3900, column: 3, scope: !13851)
!13857 = !DILocation(line: 3902, column: 3, scope: !13851)
!13858 = !DILocation(line: 3905, column: 2, scope: !13820)
!13859 = !DILocation(line: 3906, column: 1, scope: !13820)
!13860 = distinct !DISubprogram(name: "set_tile_invoke", scope: !3, file: !3, line: 3908, type: !6998, scopeLine: 3909, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!13861 = !DILocalVariable(name: "C", arg: 1, scope: !13860, file: !3, line: 3908, type: !6780)
!13862 = !DILocation(line: 3908, column: 38, scope: !13860)
!13863 = !DILocalVariable(name: "op", arg: 2, scope: !13860, file: !3, line: 3908, type: !6783)
!13864 = !DILocation(line: 3908, column: 53, scope: !13860)
!13865 = !DILocalVariable(name: "event", arg: 3, scope: !13860, file: !3, line: 3908, type: !7000)
!13866 = !DILocation(line: 3908, column: 72, scope: !13860)
!13867 = !DILocalVariable(name: "sima", scope: !13860, file: !3, line: 3910, type: !4824)
!13868 = !DILocation(line: 3910, column: 14, scope: !13860)
!13869 = !DILocation(line: 3910, column: 40, scope: !13860)
!13870 = !DILocation(line: 3910, column: 21, scope: !13860)
!13871 = !DILocalVariable(name: "ima", scope: !13860, file: !3, line: 3911, type: !3164)
!13872 = !DILocation(line: 3911, column: 9, scope: !13860)
!13873 = !DILocation(line: 3911, column: 35, scope: !13860)
!13874 = !DILocation(line: 3911, column: 15, scope: !13860)
!13875 = !DILocalVariable(name: "ar", scope: !13860, file: !3, line: 3912, type: !7010)
!13876 = !DILocation(line: 3912, column: 11, scope: !13860)
!13877 = !DILocation(line: 3912, column: 30, scope: !13860)
!13878 = !DILocation(line: 3912, column: 16, scope: !13860)
!13879 = !DILocalVariable(name: "fx", scope: !13860, file: !3, line: 3913, type: !192)
!13880 = !DILocation(line: 3913, column: 8, scope: !13860)
!13881 = !DILocalVariable(name: "fy", scope: !13860, file: !3, line: 3913, type: !192)
!13882 = !DILocation(line: 3913, column: 12, scope: !13860)
!13883 = !DILocalVariable(name: "tile", scope: !13860, file: !3, line: 3914, type: !1762)
!13884 = !DILocation(line: 3914, column: 6, scope: !13860)
!13885 = !DILocation(line: 3916, column: 7, scope: !13886)
!13886 = distinct !DILexicalBlock(scope: !13860, file: !3, line: 3916, column: 6)
!13887 = !DILocation(line: 3916, column: 11, scope: !13886)
!13888 = !DILocation(line: 3916, column: 16, scope: !13886)
!13889 = !DILocation(line: 3916, column: 21, scope: !13886)
!13890 = !DILocation(line: 3916, column: 31, scope: !13886)
!13891 = !DILocation(line: 3916, column: 6, scope: !13860)
!13892 = !DILocation(line: 3917, column: 3, scope: !13886)
!13893 = !DILocation(line: 3919, column: 28, scope: !13860)
!13894 = !DILocation(line: 3919, column: 32, scope: !13860)
!13895 = !DILocation(line: 3919, column: 37, scope: !13860)
!13896 = !DILocation(line: 3919, column: 44, scope: !13860)
!13897 = !DILocation(line: 3919, column: 53, scope: !13860)
!13898 = !DILocation(line: 3919, column: 60, scope: !13860)
!13899 = !DILocation(line: 3919, column: 2, scope: !13860)
!13900 = !DILocation(line: 3921, column: 6, scope: !13901)
!13901 = distinct !DILexicalBlock(scope: !13860, file: !3, line: 3921, column: 6)
!13902 = !DILocation(line: 3921, column: 9, scope: !13901)
!13903 = !DILocation(line: 3921, column: 17, scope: !13901)
!13904 = !DILocation(line: 3921, column: 20, scope: !13901)
!13905 = !DILocation(line: 3921, column: 23, scope: !13901)
!13906 = !DILocation(line: 3921, column: 31, scope: !13901)
!13907 = !DILocation(line: 3921, column: 34, scope: !13901)
!13908 = !DILocation(line: 3921, column: 37, scope: !13901)
!13909 = !DILocation(line: 3921, column: 44, scope: !13901)
!13910 = !DILocation(line: 3921, column: 47, scope: !13901)
!13911 = !DILocation(line: 3921, column: 50, scope: !13901)
!13912 = !DILocation(line: 3921, column: 6, scope: !13860)
!13913 = !DILocation(line: 3922, column: 8, scope: !13914)
!13914 = distinct !DILexicalBlock(scope: !13901, file: !3, line: 3921, column: 58)
!13915 = !DILocation(line: 3922, column: 13, scope: !13914)
!13916 = !DILocation(line: 3922, column: 18, scope: !13914)
!13917 = !DILocation(line: 3922, column: 11, scope: !13914)
!13918 = !DILocation(line: 3922, column: 6, scope: !13914)
!13919 = !DILocation(line: 3923, column: 8, scope: !13914)
!13920 = !DILocation(line: 3923, column: 13, scope: !13914)
!13921 = !DILocation(line: 3923, column: 18, scope: !13914)
!13922 = !DILocation(line: 3923, column: 11, scope: !13914)
!13923 = !DILocation(line: 3923, column: 6, scope: !13914)
!13924 = !DILocation(line: 3925, column: 13, scope: !13914)
!13925 = !DILocation(line: 3925, column: 3, scope: !13914)
!13926 = !DILocation(line: 3925, column: 11, scope: !13914)
!13927 = !DILocation(line: 3926, column: 13, scope: !13914)
!13928 = !DILocation(line: 3926, column: 3, scope: !13914)
!13929 = !DILocation(line: 3926, column: 11, scope: !13914)
!13930 = !DILocation(line: 3928, column: 19, scope: !13914)
!13931 = !DILocation(line: 3928, column: 29, scope: !13914)
!13932 = !DILocation(line: 3928, column: 34, scope: !13914)
!13933 = !DILocation(line: 3928, column: 27, scope: !13914)
!13934 = !DILocation(line: 3928, column: 41, scope: !13914)
!13935 = !DILocation(line: 3928, column: 39, scope: !13914)
!13936 = !DILocation(line: 3928, column: 3, scope: !13914)
!13937 = !DILocation(line: 3928, column: 9, scope: !13914)
!13938 = !DILocation(line: 3928, column: 17, scope: !13914)
!13939 = !DILocation(line: 3929, column: 21, scope: !13914)
!13940 = !DILocation(line: 3929, column: 25, scope: !13914)
!13941 = !DILocation(line: 3929, column: 38, scope: !13914)
!13942 = !DILocation(line: 3929, column: 3, scope: !13914)
!13943 = !DILocation(line: 3930, column: 2, scope: !13914)
!13944 = !DILocation(line: 3932, column: 23, scope: !13860)
!13945 = !DILocation(line: 3932, column: 26, scope: !13860)
!13946 = !DILocation(line: 3932, column: 9, scope: !13860)
!13947 = !DILocation(line: 3932, column: 2, scope: !13860)
!13948 = !DILocation(line: 3933, column: 1, scope: !13860)
!13949 = distinct !DISubprogram(name: "uvedit_set_tile", scope: !3, file: !3, line: 280, type: !13950, scopeLine: 281, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2745, retainedNodes: !3566)
!13950 = !DISubroutineType(types: !13951)
!13951 = !{!2013, !3588, !3164, !22}
!13952 = !DILocalVariable(name: "obedit", arg: 1, scope: !13949, file: !3, line: 280, type: !3588)
!13953 = !DILocation(line: 280, column: 37, scope: !13949)
!13954 = !DILocalVariable(name: "ima", arg: 2, scope: !13949, file: !3, line: 280, type: !3164)
!13955 = !DILocation(line: 280, column: 52, scope: !13949)
!13956 = !DILocalVariable(name: "curtile", arg: 3, scope: !13949, file: !3, line: 280, type: !22)
!13957 = !DILocation(line: 280, column: 61, scope: !13949)
!13958 = !DILocalVariable(name: "em", scope: !13949, file: !3, line: 282, type: !3593)
!13959 = !DILocation(line: 282, column: 14, scope: !13949)
!13960 = !DILocalVariable(name: "efa", scope: !13949, file: !3, line: 283, type: !3238)
!13961 = !DILocation(line: 283, column: 10, scope: !13949)
!13962 = !DILocalVariable(name: "iter", scope: !13949, file: !3, line: 284, type: !3856)
!13963 = !DILocation(line: 284, column: 9, scope: !13949)
!13964 = !DILocalVariable(name: "tf", scope: !13949, file: !3, line: 285, type: !3945)
!13965 = !DILocation(line: 285, column: 12, scope: !13949)
!13966 = !DILocalVariable(name: "cd_poly_tex_offset", scope: !13949, file: !3, line: 286, type: !22)
!13967 = !DILocation(line: 286, column: 6, scope: !13949)
!13968 = !DILocation(line: 289, column: 7, scope: !13969)
!13969 = distinct !DILexicalBlock(scope: !13949, file: !3, line: 289, column: 6)
!13970 = !DILocation(line: 289, column: 11, scope: !13969)
!13971 = !DILocation(line: 289, column: 30, scope: !13969)
!13972 = !DILocation(line: 289, column: 15, scope: !13969)
!13973 = !DILocation(line: 289, column: 6, scope: !13949)
!13974 = !DILocation(line: 290, column: 3, scope: !13969)
!13975 = !DILocation(line: 292, column: 7, scope: !13976)
!13976 = distinct !DILexicalBlock(scope: !13949, file: !3, line: 292, column: 6)
!13977 = !DILocation(line: 292, column: 12, scope: !13976)
!13978 = !DILocation(line: 292, column: 22, scope: !13976)
!13979 = !DILocation(line: 292, column: 35, scope: !13976)
!13980 = !DILocation(line: 292, column: 6, scope: !13949)
!13981 = !DILocation(line: 293, column: 3, scope: !13976)
!13982 = !DILocation(line: 296, column: 6, scope: !13983)
!13983 = distinct !DILexicalBlock(scope: !13949, file: !3, line: 296, column: 6)
!13984 = !DILocation(line: 296, column: 11, scope: !13983)
!13985 = !DILocation(line: 296, column: 16, scope: !13983)
!13986 = !DILocation(line: 296, column: 37, scope: !13983)
!13987 = !DILocation(line: 296, column: 40, scope: !13983)
!13988 = !DILocation(line: 296, column: 45, scope: !13983)
!13989 = !DILocation(line: 296, column: 50, scope: !13983)
!13990 = !DILocation(line: 296, column: 6, scope: !13949)
!13991 = !DILocation(line: 297, column: 3, scope: !13983)
!13992 = !DILocation(line: 299, column: 32, scope: !13949)
!13993 = !DILocation(line: 299, column: 7, scope: !13949)
!13994 = !DILocation(line: 299, column: 5, scope: !13949)
!13995 = !DILocation(line: 301, column: 46, scope: !13949)
!13996 = !DILocation(line: 301, column: 50, scope: !13949)
!13997 = !DILocation(line: 301, column: 54, scope: !13949)
!13998 = !DILocation(line: 301, column: 23, scope: !13949)
!13999 = !DILocation(line: 301, column: 21, scope: !13949)
!14000 = !DILocation(line: 303, column: 2, scope: !14001)
!14001 = distinct !DILexicalBlock(scope: !13949, file: !3, line: 303, column: 2)
!14002 = !DILocation(line: 303, column: 2, scope: !14003)
!14003 = distinct !DILexicalBlock(scope: !14001, file: !3, line: 303, column: 2)
!14004 = !DILocation(line: 304, column: 8, scope: !14005)
!14005 = distinct !DILexicalBlock(scope: !14003, file: !3, line: 303, column: 54)
!14006 = !DILocation(line: 304, column: 6, scope: !14005)
!14007 = !DILocation(line: 306, column: 7, scope: !14008)
!14008 = distinct !DILexicalBlock(scope: !14005, file: !3, line: 306, column: 7)
!14009 = !DILocation(line: 306, column: 7, scope: !14005)
!14010 = !DILocation(line: 307, column: 15, scope: !14008)
!14011 = !DILocation(line: 307, column: 4, scope: !14008)
!14012 = !DILocation(line: 307, column: 8, scope: !14008)
!14013 = !DILocation(line: 307, column: 13, scope: !14008)
!14014 = !DILocation(line: 308, column: 2, scope: !14005)
!14015 = distinct !{!14015, !14000, !14016}
!14016 = !DILocation(line: 308, column: 2, scope: !14001)
!14017 = !DILocation(line: 310, column: 20, scope: !13949)
!14018 = !DILocation(line: 310, column: 28, scope: !13949)
!14019 = !DILocation(line: 310, column: 2, scope: !13949)
!14020 = !DILocation(line: 312, column: 2, scope: !13949)
!14021 = !DILocation(line: 313, column: 1, scope: !13949)
