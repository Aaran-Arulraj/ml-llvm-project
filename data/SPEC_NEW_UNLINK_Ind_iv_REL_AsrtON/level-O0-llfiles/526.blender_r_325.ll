; ModuleID = 'blender/source/blender/render/intern/source/imagetexture.c'
source_filename = "blender/source/blender/render/intern/source/imagetexture.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.Render = type { %struct.Render*, %struct.Render*, [74 x i8], i32, i16, i16, i16, i16, i8, %struct.RenderResult*, %struct.RenderResult*, %struct.ListBase, i32, i32, i32, %struct.rcti, %struct.rctf, float, float, float, i32, i32, i32, i32, float, float, float, float, float, float, [3 x float], [3 x [3 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], float, float, %struct.SampleTables*, [32 x [2 x float]], [32 x [2 x float]], %struct.ListBase*, [1 x i32], %struct.Main*, %struct.Scene*, %struct.RenderData, %struct.World, %struct.Object*, i32, i32, %struct.ListBase, %struct.RenderEngine*, %struct.RayObject*, %struct.RayFace*, %struct.VlakPrimitive*, float, i8*, %struct.ListBase, float, float, i32, i32, i32, i32, i32, %struct.HaloRen**, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ObjectInstanceRen*, %struct.ListBase, i32, %struct.Image*, %struct.GHash*, %struct.GHash*, %struct.ListBase*, %struct.Material*, %struct.ListBase, %struct.Object*, %struct.ListBase, %struct.ListBase, %struct.MemArena*, void (i8*, %struct.RenderResult*)*, i8*, void (i8*, %struct.RenderResult*)*, i8*, void (i8*, %struct.RenderResult*, %struct.rcti*)*, i8*, void (i8*, %struct.Scene*)*, i8*, void (i8*, %struct.RenderStats*)*, i8*, void (i8*, float)*, i8*, void (i8*, i32)*, i8*, i32 (i8*)*, i8*, %struct.RenderStats, %struct.ReportList*, %struct.ImagePool*, %struct.EvaluationContext* }
%struct.RenderResult = type { %struct.RenderResult*, %struct.RenderResult*, i32, i32, i16, i16, i32*, float*, float*, %struct.rcti, i32, i32, %struct.ListBase, %struct.rcti, %struct.RenderLayer*, i32, i32, i32, i8* }
%struct.RenderLayer = type { %struct.RenderLayer*, %struct.RenderLayer*, [74 x i8], i32, i32, i32, i32, i32, i32, %struct.Material*, %struct.Group*, float*, float*, float*, i32*, i32, i32, i8*, %struct.ListBase }
%struct.Group = type opaque
%struct.rcti = type { i32, i32, i32, i32 }
%struct.rctf = type { float, float, float, float }
%struct.SampleTables = type { [16 x float], [9 x float*], [9 x float*], [256 x i8], i8* }
%struct.Main = type { %struct.Main*, %struct.Main*, [1024 x i8], i16, i16, i16, i16, i64, [16 x i8], i16, %struct.Library*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, [256 x i8], %struct.EvaluationContext*, %struct.MainLock* }
%struct.Library = type { %struct.ID, %struct.ID*, %struct.FileData*, [1024 x i8], [1024 x i8], %struct.Library*, %struct.PackedFile* }
%struct.ID = type { i8*, i8*, %struct.ID*, %struct.Library*, [66 x i8], i16, i32, i32, i32, %struct.IDProperty* }
%struct.IDProperty = type { %struct.IDProperty*, %struct.IDProperty*, i8, i8, i16, [64 x i8], i32, %struct.IDPropertyData, i32, i32 }
%struct.IDPropertyData = type { i8*, %struct.ListBase, i32, i32 }
%struct.FileData = type opaque
%struct.PackedFile = type opaque
%struct.MainLock = type opaque
%struct.Scene = type { %struct.ID, %struct.AnimData*, %struct.Object*, %struct.World*, %struct.Scene*, %struct.ListBase, %struct.Base*, %struct.Object*, [3 x float], [3 x float], [3 x float], [3 x float], i32, i32, i32, i16, i8, [1 x i8], %struct.bNodeTree*, %struct.Editing*, %struct.ToolSettings*, %struct.SceneStats*, %struct.RenderData, %struct.AudioData, %struct.ListBase, %struct.ListBase, i8*, i8*, i8*, i8*, i8*, %struct.DagForest*, i16, i16, i32, %struct.ListBase, %struct.GameFraming, %struct.GameData, %struct.UnitSettings, %struct.bGPdata*, %struct.PhysicsSettings, %struct.MovieClip*, i64, i64, %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings, %struct.ColorManagedColorspaceSettings, %struct.RigidBodyWorld* }
%struct.AnimData = type opaque
%struct.Base = type { %struct.Base*, %struct.Base*, i32, i32, i32, i16, i16, %struct.Object* }
%struct.bNodeTree = type opaque
%struct.Editing = type opaque
%struct.ToolSettings = type { %struct.VPaint*, %struct.VPaint*, %struct.Sculpt*, %struct.UvSculpt*, float, float, float, i16, i16, i8, i8, i8, i8, float, i16, i8, [5 x i8], %struct.ImagePaintSettings, %struct.ParticleEditSettings, float, float, i16, i16, i8, [1 x i8], i16, float, float, float, float, float, float, float, float, float, float, i16, i8, i8, [3 x i8], i8, %struct.Object*, i8, i8, i8, i8, i8, [8 x i8], [8 x i8], i8, i8, i8, i8, i8, i16, i16, i16, i16, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i16, i16, i32, float, float, %struct.UnifiedPaintSettings, %struct.MeshStatVis }
%struct.VPaint = type { %struct.Paint, i16, i16, i32, i32*, %struct.MDeformVert*, i8* }
%struct.Paint = type { %struct.Brush*, %struct.Palette*, i8*, [4 x i8], i32, i32, i32 }
%struct.Brush = type opaque
%struct.Palette = type opaque
%struct.MDeformVert = type opaque
%struct.Sculpt = type { %struct.Paint, i32, [3 x i32], float, i32, float, float, %struct.Object*, i8* }
%struct.UvSculpt = type { %struct.Paint }
%struct.ImagePaintSettings = type { %struct.Paint, i16, i16, i16, i16, [2 x i16], i32, i8*, %struct.Image*, %struct.Image*, %struct.Image*, [3 x float], float }
%struct.ParticleEditSettings = type { i16, i16, i16, i16, [7 x %struct.ParticleBrushData], i8*, float, float, i32, i32, i32, i32, %struct.Scene*, %struct.Object* }
%struct.ParticleBrushData = type { i16, i16, i16, i16, i32, float }
%struct.UnifiedPaintSettings = type { i32, float, float, float, [3 x float], [3 x float], i32, [2 x float], float, i32, i32, i8, [7 x i8], float, [2 x float], i32, float, [2 x float], [2 x float], i32, %struct.ColorSpace*, float, i32 }
%struct.ColorSpace = type opaque
%struct.MeshStatVis = type { i8, [2 x i8], i8, float, float, float, float, i8, [3 x i8], float, float, float, float }
%struct.SceneStats = type opaque
%struct.AudioData = type { i32, float, float, float, i32, i16, i16, float, float }
%struct.DagForest = type opaque
%struct.GameFraming = type { [3 x float], i8, i8, i8, i8 }
%struct.GameData = type { %struct.GameFraming, i16, i16, i16, i16, i16, i16, i16, i16, i16, [3 x i16], %struct.GameDome, i16, i16, float, %struct.RecastData, float, float, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, float }
%struct.GameDome = type { i16, i16, i16, i16, float, float, %struct.Text* }
%struct.Text = type opaque
%struct.RecastData = type { float, float, float, float, float, float, float, float, float, float, i32, float, float, i16, i16 }
%struct.UnitSettings = type { float, i8, i8, i16 }
%struct.bGPdata = type opaque
%struct.PhysicsSettings = type { [3 x float], i32, i32, i32 }
%struct.MovieClip = type opaque
%struct.ColorManagedViewSettings = type { i32, i32, [64 x i8], [64 x i8], float, float, %struct.CurveMapping*, i8* }
%struct.CurveMapping = type { i32, i32, i32, i32, %struct.rctf, %struct.rctf, [4 x %struct.CurveMap], [3 x float], [3 x float], [3 x float], [3 x float] }
%struct.CurveMap = type { i16, i16, float, float, float, [2 x float], [2 x float], %struct.CurveMapPoint*, %struct.CurveMapPoint*, %struct.CurveMapPoint*, [2 x float], [2 x float] }
%struct.CurveMapPoint = type { float, float, i16, i16 }
%struct.ColorManagedDisplaySettings = type { [64 x i8] }
%struct.ColorManagedColorspaceSettings = type { [64 x i8] }
%struct.RigidBodyWorld = type opaque
%struct.RenderData = type { %struct.ImageFormatData, %struct.AviCodecData*, %struct.QuicktimeCodecData*, %struct.QuicktimeCodecSettings, %struct.FFMpegCodecData, i32, i32, i32, float, i32, i32, i32, i32, i16, i16, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32, i16, i16, i32, i32, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, %struct.rctf, %struct.rctf, %struct.rcti, %struct.ListBase, i16, i16, float, float, float, float, i32, float, float, float, float, i16, i16, i16, i16, i16, i16, float, float, i16, i16, float, float, [1024 x i8], i32, i16, i16, [768 x i8], [4 x float], [4 x float], i8, i8, i8, [5 x i8], i32, i16, i16, float, float, i16, i16, float, i16, i16, i32, i16, i16, i16, i16, float, float, %struct.Text*, i32, float, [32 x i8], %struct.BakeData, i32, i32 }
%struct.ImageFormatData = type { i8, i8, i8, i8, i8, i8, i8, i8, i16, i16, float, i8, i8, [6 x i8], %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings }
%struct.AviCodecData = type { i8*, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [128 x i8] }
%struct.QuicktimeCodecData = type { i8*, i8*, i32, i32, [128 x i8] }
%struct.QuicktimeCodecSettings = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32, i32 }
%struct.FFMpegCodecData = type { i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, %struct.IDProperty* }
%struct.BakeData = type { %struct.ImageFormatData, [1024 x i8], i16, i16, i16, i16, float, float, [3 x i8], i8, i8, [3 x i8], [64 x i8] }
%struct.World = type { %struct.ID, %struct.AnimData*, i16, i16, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i16, float, float, float, float, i16, i16, i16, i16, float, float, float, float, float, float, float, i16, i16, i16, i16, i16, i16, float*, float*, %struct.Ipo*, [18 x %struct.MTex*], i16, i16, [2 x i16], %struct.PreviewImage*, %struct.bNodeTree* }
%struct.Ipo = type opaque
%struct.MTex = type { i16, i16, i16, i16, %struct.Object*, %struct.Tex*, [64 x i8], i8, i8, i8, i8, [3 x float], [3 x float], float, i16, i16, i16, i16, i16, i16, i8, [7 x i8], float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float }
%struct.Tex = type { %struct.ID, %struct.AnimData*, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, i32, i32, i16, i16, i16, i16, i32, i32, i32, i32, float, float, float, %struct.ImageUser, %struct.bNodeTree*, %struct.Ipo*, %struct.Image*, %struct.ColorBand*, %struct.EnvMap*, %struct.PreviewImage*, %struct.PointDensity*, %struct.VoxelData*, %struct.OceanTex*, i8, [7 x i8] }
%struct.ImageUser = type { %struct.Scene*, i32, i32, i32, i32, i8, i8, i8, i8, i16, i16, i16, i16, i32 }
%struct.ColorBand = type { i16, i16, i8, i8, i8, [1 x i8], [32 x %struct.CBData] }
%struct.CBData = type { float, float, float, float, float, i32 }
%struct.EnvMap = type { %struct.Object*, %struct.Image*, [6 x %struct.ImBuf*], [4 x [4 x float]], [3 x [3 x float]], i16, i16, float, float, float, i32, i16, i16, i32, i32, i16, i16 }
%struct.ImBuf = type { %struct.ImBuf*, %struct.ImBuf*, i32, i32, i8, i32, i32, i32, i32*, float*, [2 x double], i32, i32, i32, i32, i32**, i32*, float*, float, [20 x %struct.ImBuf*], i32, i32, i32, i32, %struct.ImMetaData*, i8*, i32, [1024 x i8], [1024 x i8], %struct.MEM_CacheLimiterHandle_s*, i32, i8*, i32, i32, %struct.ColorSpace*, %struct.ColorSpace*, i32*, %struct.ColormanageCache*, i32, %struct.rcti, %struct.DDSData }
%struct.ImMetaData = type opaque
%struct.MEM_CacheLimiterHandle_s = type opaque
%struct.ColormanageCache = type opaque
%struct.DDSData = type { i32, i32, i8*, i32 }
%struct.PointDensity = type { i16, i16, float, float, i16, i16, i32, i32, %struct.Object*, i32, i16, i16, i8*, float*, float, i16, i16, i16, [3 x i16], float, float, float, float, %struct.ColorBand*, %struct.CurveMapping* }
%struct.VoxelData = type { [3 x i32], i32, i16, i16, i16, i16, i16, i16, i32, %struct.Object*, float, i32, [1024 x i8], float*, i32, i32 }
%struct.OceanTex = type { %struct.Object*, [64 x i8], i32, i32 }
%struct.PreviewImage = type { [2 x i32], [2 x i32], [2 x i16], [2 x i16], [2 x i32*], [2 x %struct.GPUTexture*] }
%struct.GPUTexture = type opaque
%struct.RenderEngine = type opaque
%struct.RayObject = type opaque
%struct.RayFace = type opaque
%struct.VlakPrimitive = type opaque
%struct.HaloRen = type { i16, i16, float, float, float, float, float, float, float, [3 x float], [3 x float], float, float, float, float, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8, i16, float, i32, i32, %struct.Material*, %struct.ImagePool* }
%struct.ObjectInstanceRen = type { %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen*, %struct.ObjectRen*, %struct.Object*, %struct.Object*, i32, i32, i32, [4 x [4 x float]], [4 x [4 x float]], [3 x [3 x float]], i16, [3 x float], [2 x float], [4 x float]*, %struct.VolumePrecache*, float*, i32, %struct.RayObject*, i32 }
%struct.ObjectRen = type { %struct.ObjectRen*, %struct.ObjectRen*, %struct.Object*, %struct.Object*, %struct.Scene*, i32, i32, i32, i32, [2 x [3 x float]], i32, i32, i32, i32, i32, i32, i32, i32, %struct.VertTableNode*, %struct.VlakTableNode*, %struct.StrandTableNode*, %struct.HaloRen**, %struct.StrandBuffer*, [64 x i8]*, [64 x i8]*, i32, i32, i32, [4 x [4 x float]], %struct.RayObject*, %struct.RayFace*, %struct.VlakPrimitive*, %struct.ObjectInstanceRen* }
%struct.VertTableNode = type opaque
%struct.VlakTableNode = type opaque
%struct.StrandTableNode = type opaque
%struct.StrandBuffer = type { %struct.StrandBuffer*, %struct.StrandBuffer*, %struct.StrandVert*, %struct.StrandBound*, i32, i32, %struct.ObjectRen*, %struct.Material*, %struct.StrandSurface*, i32, i32, i32, i32, float, float, float, float, [4 x [4 x float]], i32, i32 }
%struct.StrandVert = type { [3 x float], float }
%struct.StrandBound = type { i32, i32, [2 x [3 x float]] }
%struct.StrandSurface = type { %struct.StrandSurface*, %struct.StrandSurface*, %struct.ObjectRen, [4 x i32]*, [3 x float]*, [3 x float]*, [3 x float]*, [3 x float]*, [3 x float]*, [3 x float]*, i32, i32 }
%struct.VolumePrecache = type { [3 x i32], float*, float*, float*, float*, float* }
%struct.Image = type { %struct.ID, [1024 x i8], %struct.MovieCache*, %struct.GPUTexture*, %struct.anim*, %struct.RenderResult*, [8 x %struct.RenderResult*], i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32*, %struct.PackedFile*, %struct.PreviewImage*, float, i32, i16, i16, i32, i32, i8, i8, i16, [4 x float], float, float, %struct.ColorManagedColorspaceSettings, i8, [7 x i8], [8 x %struct.RenderSlot] }
%struct.MovieCache = type opaque
%struct.anim = type opaque
%struct.RenderSlot = type { [64 x i8] }
%struct.GHash = type opaque
%struct.Material = type opaque
%struct.Object = type { %struct.ID, %struct.AnimData*, %struct.SculptSession*, i16, i16, i32, i32, i32, [64 x i8], %struct.Object*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Ipo*, %struct.BoundBox*, %struct.bAction*, %struct.bAction*, %struct.bPose*, i8*, %struct.bGPdata*, %struct.bAnimVizSettings, %struct.bMotionPath*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, %struct.Material**, i8*, i32, i32, [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [4 x float], [4 x float], [3 x float], [3 x float], float, float, [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i8, i8, i16, i8, i8, float, float, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, float, i16, i16, [4 x float], i32, i32, %struct.BulletSoftBody*, i8, i8, i16, [3 x float], %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.PartDeflect*, %struct.SoftBody*, %struct.Group*, i8, i8, i16, float, %struct.FluidsimSettings*, %struct.CurveCache*, %struct.DerivedMesh*, %struct.DerivedMesh*, i64, i64, i32, i32, %struct.ListBase, %struct.ListBase, %struct.ListBase*, %struct.RigidBodyOb*, %struct.RigidBodyCon*, [2 x float], %struct.ImageUser*, %struct.ListBase, %struct.LodLevel* }
%struct.SculptSession = type opaque
%struct.BoundBox = type { [8 x [3 x float]], i32, i32 }
%struct.bAction = type { %struct.ID, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, i32, i32 }
%struct.bPose = type { %struct.ListBase, %struct.GHash*, i16, i16, i32, i32, float, [3 x float], [3 x float], %struct.ListBase, i32, i32, i8*, i8*, %struct.bAnimVizSettings, [64 x i8] }
%struct.bAnimVizSettings = type { i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i32, i32, i32, i32 }
%struct.bMotionPath = type { %struct.bMotionPathVert*, i32, i32, i32, i32 }
%struct.bMotionPathVert = type { [3 x float], i32 }
%struct.BulletSoftBody = type opaque
%struct.PartDeflect = type opaque
%struct.SoftBody = type opaque
%struct.FluidsimSettings = type opaque
%struct.CurveCache = type opaque
%struct.DerivedMesh = type opaque
%struct.RigidBodyOb = type opaque
%struct.RigidBodyCon = type opaque
%struct.LodLevel = type { %struct.LodLevel*, %struct.LodLevel*, %struct.Object*, i32, float }
%struct.ListBase = type { i8*, i8* }
%struct.MemArena = type opaque
%struct.RenderStats = type { i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i8, double, double, i8*, i8*, [64 x i8], float, float }
%struct.ReportList = type opaque
%struct.ImagePool = type opaque
%struct.EvaluationContext = type opaque
%struct.TexResult = type { float, float, float, float, float, i32, float* }
%struct.afdata_t = type { [2 x float], [2 x float], i32, i32, float, float, float, i32, float, float }
%struct.ReadEWAData = type { %struct.ImBuf*, %struct.afdata_t* }

@R = external dso_local global %struct.Render, align 8
@EWA_WTS = external dso_local constant [256 x float], align 16

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @imagewrap(%struct.Tex* %tex, %struct.Image* %ima, %struct.ImBuf* %ibuf, float* %texvec, %struct.TexResult* %texres, %struct.ImagePool* %pool) #0 !dbg !139 {
entry:
  %retval = alloca i32, align 4
  %tex.addr = alloca %struct.Tex*, align 8
  %ima.addr = alloca %struct.Image*, align 8
  %ibuf.addr = alloca %struct.ImBuf*, align 8
  %texvec.addr = alloca float*, align 8
  %texres.addr = alloca %struct.TexResult*, align 8
  %pool.addr = alloca %struct.ImagePool*, align 8
  %fx = alloca float, align 4
  %fy = alloca float, align 4
  %val1 = alloca float, align 4
  %val2 = alloca float, align 4
  %val3 = alloca float, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %retval1 = alloca i32, align 4
  %xi = alloca i32, align 4
  %yi = alloca i32, align 4
  %xs = alloca i32, align 4
  %ys = alloca i32, align 4
  %filterx = alloca float, align 4
  %filtery = alloca float, align 4
  %col = alloca [4 x float], align 16
  %col350 = alloca [4 x float], align 16
  %_hsv = alloca [3 x float], align 4
  store %struct.Tex* %tex, %struct.Tex** %tex.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Tex** %tex.addr, metadata !1639, metadata !DIExpression()), !dbg !1640
  store %struct.Image* %ima, %struct.Image** %ima.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Image** %ima.addr, metadata !1641, metadata !DIExpression()), !dbg !1642
  store %struct.ImBuf* %ibuf, %struct.ImBuf** %ibuf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf.addr, metadata !1643, metadata !DIExpression()), !dbg !1644
  store float* %texvec, float** %texvec.addr, align 8
  call void @llvm.dbg.declare(metadata float** %texvec.addr, metadata !1645, metadata !DIExpression()), !dbg !1646
  store %struct.TexResult* %texres, %struct.TexResult** %texres.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TexResult** %texres.addr, metadata !1647, metadata !DIExpression()), !dbg !1648
  store %struct.ImagePool* %pool, %struct.ImagePool** %pool.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImagePool** %pool.addr, metadata !1649, metadata !DIExpression()), !dbg !1650
  call void @llvm.dbg.declare(metadata float* %fx, metadata !1651, metadata !DIExpression()), !dbg !1652
  call void @llvm.dbg.declare(metadata float* %fy, metadata !1653, metadata !DIExpression()), !dbg !1654
  call void @llvm.dbg.declare(metadata float* %val1, metadata !1655, metadata !DIExpression()), !dbg !1656
  call void @llvm.dbg.declare(metadata float* %val2, metadata !1657, metadata !DIExpression()), !dbg !1658
  call void @llvm.dbg.declare(metadata float* %val3, metadata !1659, metadata !DIExpression()), !dbg !1660
  call void @llvm.dbg.declare(metadata i32* %x, metadata !1661, metadata !DIExpression()), !dbg !1662
  call void @llvm.dbg.declare(metadata i32* %y, metadata !1663, metadata !DIExpression()), !dbg !1664
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !1665, metadata !DIExpression()), !dbg !1666
  call void @llvm.dbg.declare(metadata i32* %xi, metadata !1667, metadata !DIExpression()), !dbg !1668
  call void @llvm.dbg.declare(metadata i32* %yi, metadata !1669, metadata !DIExpression()), !dbg !1670
  %0 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !1671
  %tb = getelementptr inbounds %struct.TexResult, %struct.TexResult* %0, i32 0, i32 3, !dbg !1672
  store float 0.000000e+00, float* %tb, align 4, !dbg !1673
  %1 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !1674
  %tg = getelementptr inbounds %struct.TexResult, %struct.TexResult* %1, i32 0, i32 2, !dbg !1675
  store float 0.000000e+00, float* %tg, align 8, !dbg !1676
  %2 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !1677
  %tr = getelementptr inbounds %struct.TexResult, %struct.TexResult* %2, i32 0, i32 1, !dbg !1678
  store float 0.000000e+00, float* %tr, align 4, !dbg !1679
  %3 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !1680
  %ta = getelementptr inbounds %struct.TexResult, %struct.TexResult* %3, i32 0, i32 4, !dbg !1681
  store float 0.000000e+00, float* %ta, align 8, !dbg !1682
  %4 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !1683
  %tin = getelementptr inbounds %struct.TexResult, %struct.TexResult* %4, i32 0, i32 0, !dbg !1684
  store float 0.000000e+00, float* %tin, align 8, !dbg !1685
  %5 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !1686
  %nor = getelementptr inbounds %struct.TexResult, %struct.TexResult* %5, i32 0, i32 6, !dbg !1687
  %6 = load float*, float** %nor, align 8, !dbg !1687
  %tobool = icmp ne float* %6, null, !dbg !1686
  %7 = zext i1 %tobool to i64, !dbg !1686
  %cond = select i1 %tobool, i32 3, i32 1, !dbg !1686
  store i32 %cond, i32* %retval1, align 4, !dbg !1688
  %8 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !1689
  %cmp = icmp eq %struct.ImBuf* %8, null, !dbg !1691
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !1692

land.lhs.true:                                    ; preds = %entry
  %9 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !1693
  %cmp2 = icmp eq %struct.Image* %9, null, !dbg !1694
  br i1 %cmp2, label %if.then, label %if.end, !dbg !1695

if.then:                                          ; preds = %land.lhs.true
  %10 = load i32, i32* %retval1, align 4, !dbg !1696
  store i32 %10, i32* %retval, align 4, !dbg !1697
  br label %return, !dbg !1697

if.end:                                           ; preds = %land.lhs.true, %entry
  %11 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !1698
  %tobool3 = icmp ne %struct.Image* %11, null, !dbg !1698
  br i1 %tobool3, label %if.then4, label %if.end12, !dbg !1700

if.then4:                                         ; preds = %if.end
  %12 = load i32, i32* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 45, i32 46), align 4, !dbg !1701
  %and = and i32 %12, 4096, !dbg !1704
  %tobool5 = icmp ne i32 %and, 0, !dbg !1704
  br i1 %tobool5, label %land.lhs.true6, label %if.end9, !dbg !1705

land.lhs.true6:                                   ; preds = %if.then4
  %13 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !1706
  %call = call zeroext i8 @BKE_image_has_loaded_ibuf(%struct.Image* %13), !dbg !1707
  %tobool7 = icmp ne i8 %call, 0, !dbg !1707
  br i1 %tobool7, label %if.end9, label %if.then8, !dbg !1708

if.then8:                                         ; preds = %land.lhs.true6
  %14 = load i32, i32* %retval1, align 4, !dbg !1709
  store i32 %14, i32* %retval, align 4, !dbg !1710
  br label %return, !dbg !1710

if.end9:                                          ; preds = %land.lhs.true6, %if.then4
  %15 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !1711
  %16 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !1712
  %iuser = getelementptr inbounds %struct.Tex, %struct.Tex* %16, i32 0, i32 51, !dbg !1713
  %17 = load %struct.ImagePool*, %struct.ImagePool** %pool.addr, align 8, !dbg !1714
  %call10 = call %struct.ImBuf* @BKE_image_pool_acquire_ibuf(%struct.Image* %15, %struct.ImageUser* %iuser, %struct.ImagePool* %17), !dbg !1715
  store %struct.ImBuf* %call10, %struct.ImBuf** %ibuf.addr, align 8, !dbg !1716
  %18 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !1717
  %flag = getelementptr inbounds %struct.Image, %struct.Image* %18, i32 0, i32 10, !dbg !1718
  %19 = load i16, i16* %flag, align 2, !dbg !1719
  %conv = sext i16 %19 to i32, !dbg !1719
  %or = or i32 %conv, 512, !dbg !1719
  %conv11 = trunc i32 %or to i16, !dbg !1719
  store i16 %conv11, i16* %flag, align 2, !dbg !1719
  br label %if.end12, !dbg !1720

if.end12:                                         ; preds = %if.end9, %if.end
  %20 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !1721
  %cmp13 = icmp eq %struct.ImBuf* %20, null, !dbg !1723
  br i1 %cmp13, label %if.then20, label %lor.lhs.false, !dbg !1724

lor.lhs.false:                                    ; preds = %if.end12
  %21 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !1725
  %rect = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %21, i32 0, i32 8, !dbg !1726
  %22 = load i32*, i32** %rect, align 8, !dbg !1726
  %cmp15 = icmp eq i32* %22, null, !dbg !1727
  br i1 %cmp15, label %land.lhs.true17, label %if.end24, !dbg !1728

land.lhs.true17:                                  ; preds = %lor.lhs.false
  %23 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !1729
  %rect_float = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %23, i32 0, i32 9, !dbg !1730
  %24 = load float*, float** %rect_float, align 8, !dbg !1730
  %cmp18 = icmp eq float* %24, null, !dbg !1731
  br i1 %cmp18, label %if.then20, label %if.end24, !dbg !1732

if.then20:                                        ; preds = %land.lhs.true17, %if.end12
  %25 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !1733
  %tobool21 = icmp ne %struct.Image* %25, null, !dbg !1733
  br i1 %tobool21, label %if.then22, label %if.end23, !dbg !1736

if.then22:                                        ; preds = %if.then20
  %26 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !1737
  %27 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !1738
  %28 = load %struct.ImagePool*, %struct.ImagePool** %pool.addr, align 8, !dbg !1739
  call void @BKE_image_pool_release_ibuf(%struct.Image* %26, %struct.ImBuf* %27, %struct.ImagePool* %28), !dbg !1740
  br label %if.end23, !dbg !1740

if.end23:                                         ; preds = %if.then22, %if.then20
  %29 = load i32, i32* %retval1, align 4, !dbg !1741
  store i32 %29, i32* %retval, align 4, !dbg !1742
  br label %return, !dbg !1742

if.end24:                                         ; preds = %land.lhs.true17, %lor.lhs.false
  %30 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !1743
  %imaflag = getelementptr inbounds %struct.Tex, %struct.Tex* %30, i32 0, i32 30, !dbg !1745
  %31 = load i16, i16* %imaflag, align 4, !dbg !1745
  %conv25 = sext i16 %31 to i32, !dbg !1743
  %and26 = and i32 %conv25, 16, !dbg !1746
  %tobool27 = icmp ne i32 %and26, 0, !dbg !1746
  br i1 %tobool27, label %if.then28, label %if.else, !dbg !1747

if.then28:                                        ; preds = %if.end24
  %32 = load float*, float** %texvec.addr, align 8, !dbg !1748
  %arrayidx = getelementptr inbounds float, float* %32, i64 0, !dbg !1748
  %33 = load float, float* %arrayidx, align 4, !dbg !1748
  store float %33, float* %fy, align 4, !dbg !1750
  %34 = load float*, float** %texvec.addr, align 8, !dbg !1751
  %arrayidx29 = getelementptr inbounds float, float* %34, i64 1, !dbg !1751
  %35 = load float, float* %arrayidx29, align 4, !dbg !1751
  store float %35, float* %fx, align 4, !dbg !1752
  br label %if.end32, !dbg !1753

if.else:                                          ; preds = %if.end24
  %36 = load float*, float** %texvec.addr, align 8, !dbg !1754
  %arrayidx30 = getelementptr inbounds float, float* %36, i64 0, !dbg !1754
  %37 = load float, float* %arrayidx30, align 4, !dbg !1754
  store float %37, float* %fx, align 4, !dbg !1756
  %38 = load float*, float** %texvec.addr, align 8, !dbg !1757
  %arrayidx31 = getelementptr inbounds float, float* %38, i64 1, !dbg !1757
  %39 = load float, float* %arrayidx31, align 4, !dbg !1757
  store float %39, float* %fy, align 4, !dbg !1758
  br label %if.end32

if.end32:                                         ; preds = %if.else, %if.then28
  %40 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !1759
  %extend = getelementptr inbounds %struct.Tex, %struct.Tex* %40, i32 0, i32 42, !dbg !1761
  %41 = load i16, i16* %extend, align 8, !dbg !1761
  %conv33 = sext i16 %41 to i32, !dbg !1759
  %cmp34 = icmp eq i32 %conv33, 5, !dbg !1762
  br i1 %cmp34, label %if.then36, label %if.end87, !dbg !1763

if.then36:                                        ; preds = %if.end32
  call void @llvm.dbg.declare(metadata i32* %xs, metadata !1764, metadata !DIExpression()), !dbg !1766
  call void @llvm.dbg.declare(metadata i32* %ys, metadata !1767, metadata !DIExpression()), !dbg !1768
  %42 = load float, float* %fx, align 4, !dbg !1769
  %conv37 = fpext float %42 to double, !dbg !1769
  %43 = call double @llvm.floor.f64(double %conv37), !dbg !1770
  %conv38 = fptosi double %43 to i32, !dbg !1771
  store i32 %conv38, i32* %xs, align 4, !dbg !1772
  %44 = load float, float* %fy, align 4, !dbg !1773
  %conv39 = fpext float %44 to double, !dbg !1773
  %45 = call double @llvm.floor.f64(double %conv39), !dbg !1774
  %conv40 = fptosi double %45 to i32, !dbg !1775
  store i32 %conv40, i32* %ys, align 4, !dbg !1776
  %46 = load i32, i32* %xs, align 4, !dbg !1777
  %conv41 = sitofp i32 %46 to float, !dbg !1777
  %47 = load float, float* %fx, align 4, !dbg !1778
  %sub = fsub float %47, %conv41, !dbg !1778
  store float %sub, float* %fx, align 4, !dbg !1778
  %48 = load i32, i32* %ys, align 4, !dbg !1779
  %conv42 = sitofp i32 %48 to float, !dbg !1779
  %49 = load float, float* %fy, align 4, !dbg !1780
  %sub43 = fsub float %49, %conv42, !dbg !1780
  store float %sub43, float* %fy, align 4, !dbg !1780
  %50 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !1781
  %flag44 = getelementptr inbounds %struct.Tex, %struct.Tex* %50, i32 0, i32 31, !dbg !1783
  %51 = load i16, i16* %flag44, align 2, !dbg !1783
  %conv45 = sext i16 %51 to i32, !dbg !1781
  %and46 = and i32 %conv45, 8, !dbg !1784
  %cmp47 = icmp eq i32 %and46, 0, !dbg !1785
  br i1 %cmp47, label %if.then49, label %if.end58, !dbg !1786

if.then49:                                        ; preds = %if.then36
  %52 = load i32, i32* %xs, align 4, !dbg !1787
  %53 = load i32, i32* %ys, align 4, !dbg !1790
  %add = add nsw i32 %52, %53, !dbg !1791
  %and50 = and i32 %add, 1, !dbg !1792
  %tobool51 = icmp ne i32 %and50, 0, !dbg !1792
  br i1 %tobool51, label %if.then52, label %if.else53, !dbg !1793

if.then52:                                        ; preds = %if.then49
  br label %if.end57, !dbg !1794

if.else53:                                        ; preds = %if.then49
  %54 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !1796
  %tobool54 = icmp ne %struct.Image* %54, null, !dbg !1796
  br i1 %tobool54, label %if.then55, label %if.end56, !dbg !1799

if.then55:                                        ; preds = %if.else53
  %55 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !1800
  %56 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !1801
  %57 = load %struct.ImagePool*, %struct.ImagePool** %pool.addr, align 8, !dbg !1802
  call void @BKE_image_pool_release_ibuf(%struct.Image* %55, %struct.ImBuf* %56, %struct.ImagePool* %57), !dbg !1803
  br label %if.end56, !dbg !1803

if.end56:                                         ; preds = %if.then55, %if.else53
  %58 = load i32, i32* %retval1, align 4, !dbg !1804
  store i32 %58, i32* %retval, align 4, !dbg !1805
  br label %return, !dbg !1805

if.end57:                                         ; preds = %if.then52
  br label %if.end58, !dbg !1806

if.end58:                                         ; preds = %if.end57, %if.then36
  %59 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !1807
  %flag59 = getelementptr inbounds %struct.Tex, %struct.Tex* %59, i32 0, i32 31, !dbg !1809
  %60 = load i16, i16* %flag59, align 2, !dbg !1809
  %conv60 = sext i16 %60 to i32, !dbg !1807
  %and61 = and i32 %conv60, 16, !dbg !1810
  %cmp62 = icmp eq i32 %and61, 0, !dbg !1811
  br i1 %cmp62, label %if.then64, label %if.end73, !dbg !1812

if.then64:                                        ; preds = %if.end58
  %61 = load i32, i32* %xs, align 4, !dbg !1813
  %62 = load i32, i32* %ys, align 4, !dbg !1816
  %add65 = add nsw i32 %61, %62, !dbg !1817
  %and66 = and i32 %add65, 1, !dbg !1818
  %tobool67 = icmp ne i32 %and66, 0, !dbg !1818
  br i1 %tobool67, label %if.then68, label %if.end72, !dbg !1819

if.then68:                                        ; preds = %if.then64
  %63 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !1820
  %tobool69 = icmp ne %struct.Image* %63, null, !dbg !1820
  br i1 %tobool69, label %if.then70, label %if.end71, !dbg !1823

if.then70:                                        ; preds = %if.then68
  %64 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !1824
  %65 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !1825
  %66 = load %struct.ImagePool*, %struct.ImagePool** %pool.addr, align 8, !dbg !1826
  call void @BKE_image_pool_release_ibuf(%struct.Image* %64, %struct.ImBuf* %65, %struct.ImagePool* %66), !dbg !1827
  br label %if.end71, !dbg !1827

if.end71:                                         ; preds = %if.then70, %if.then68
  %67 = load i32, i32* %retval1, align 4, !dbg !1828
  store i32 %67, i32* %retval, align 4, !dbg !1829
  br label %return, !dbg !1829

if.end72:                                         ; preds = %if.then64
  br label %if.end73, !dbg !1830

if.end73:                                         ; preds = %if.end72, %if.end58
  %68 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !1831
  %checkerdist = getelementptr inbounds %struct.Tex, %struct.Tex* %68, i32 0, i32 48, !dbg !1833
  %69 = load float, float* %checkerdist, align 4, !dbg !1833
  %cmp74 = fcmp olt float %69, 1.000000e+00, !dbg !1834
  br i1 %cmp74, label %if.then76, label %if.end86, !dbg !1835

if.then76:                                        ; preds = %if.end73
  %70 = load float, float* %fx, align 4, !dbg !1836
  %sub77 = fsub float %70, 5.000000e-01, !dbg !1838
  %71 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !1839
  %checkerdist78 = getelementptr inbounds %struct.Tex, %struct.Tex* %71, i32 0, i32 48, !dbg !1840
  %72 = load float, float* %checkerdist78, align 4, !dbg !1840
  %sub79 = fsub float 1.000000e+00, %72, !dbg !1841
  %div = fdiv float %sub77, %sub79, !dbg !1842
  %add80 = fadd float %div, 5.000000e-01, !dbg !1843
  store float %add80, float* %fx, align 4, !dbg !1844
  %73 = load float, float* %fy, align 4, !dbg !1845
  %sub81 = fsub float %73, 5.000000e-01, !dbg !1846
  %74 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !1847
  %checkerdist82 = getelementptr inbounds %struct.Tex, %struct.Tex* %74, i32 0, i32 48, !dbg !1848
  %75 = load float, float* %checkerdist82, align 4, !dbg !1848
  %sub83 = fsub float 1.000000e+00, %75, !dbg !1849
  %div84 = fdiv float %sub81, %sub83, !dbg !1850
  %add85 = fadd float %div84, 5.000000e-01, !dbg !1851
  store float %add85, float* %fy, align 4, !dbg !1852
  br label %if.end86, !dbg !1853

if.end86:                                         ; preds = %if.then76, %if.end73
  br label %if.end87, !dbg !1854

if.end87:                                         ; preds = %if.end86, %if.end32
  %76 = load float, float* %fx, align 4, !dbg !1855
  %77 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !1856
  %x88 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %77, i32 0, i32 2, !dbg !1857
  %78 = load i32, i32* %x88, align 8, !dbg !1857
  %conv89 = sitofp i32 %78 to float, !dbg !1856
  %mul = fmul float %76, %conv89, !dbg !1858
  %79 = call float @llvm.floor.f32(float %mul), !dbg !1859
  %conv90 = fptosi float %79 to i32, !dbg !1860
  store i32 %conv90, i32* %xi, align 4, !dbg !1861
  store i32 %conv90, i32* %x, align 4, !dbg !1862
  %80 = load float, float* %fy, align 4, !dbg !1863
  %81 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !1864
  %y91 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %81, i32 0, i32 3, !dbg !1865
  %82 = load i32, i32* %y91, align 4, !dbg !1865
  %conv92 = sitofp i32 %82 to float, !dbg !1864
  %mul93 = fmul float %80, %conv92, !dbg !1866
  %83 = call float @llvm.floor.f32(float %mul93), !dbg !1867
  %conv94 = fptosi float %83 to i32, !dbg !1868
  store i32 %conv94, i32* %yi, align 4, !dbg !1869
  store i32 %conv94, i32* %y, align 4, !dbg !1870
  %84 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !1871
  %extend95 = getelementptr inbounds %struct.Tex, %struct.Tex* %84, i32 0, i32 42, !dbg !1873
  %85 = load i16, i16* %extend95, align 8, !dbg !1873
  %conv96 = sext i16 %85 to i32, !dbg !1871
  %cmp97 = icmp eq i32 %conv96, 4, !dbg !1874
  br i1 %cmp97, label %if.then99, label %if.else126, !dbg !1875

if.then99:                                        ; preds = %if.end87
  %86 = load i32, i32* %x, align 4, !dbg !1876
  %cmp100 = icmp slt i32 %86, 0, !dbg !1879
  br i1 %cmp100, label %if.then121, label %lor.lhs.false102, !dbg !1880

lor.lhs.false102:                                 ; preds = %if.then99
  %87 = load i32, i32* %y, align 4, !dbg !1881
  %cmp103 = icmp slt i32 %87, 0, !dbg !1882
  br i1 %cmp103, label %if.then121, label %lor.lhs.false105, !dbg !1883

lor.lhs.false105:                                 ; preds = %lor.lhs.false102
  %88 = load i32, i32* %x, align 4, !dbg !1884
  %89 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !1885
  %x106 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %89, i32 0, i32 2, !dbg !1886
  %90 = load i32, i32* %x106, align 8, !dbg !1886
  %cmp107 = icmp sge i32 %88, %90, !dbg !1887
  br i1 %cmp107, label %if.then121, label %lor.lhs.false109, !dbg !1888

lor.lhs.false109:                                 ; preds = %lor.lhs.false105
  %91 = load i32, i32* %y, align 4, !dbg !1889
  %92 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !1890
  %y110 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %92, i32 0, i32 3, !dbg !1891
  %93 = load i32, i32* %y110, align 4, !dbg !1891
  %cmp111 = icmp sge i32 %91, %93, !dbg !1892
  br i1 %cmp111, label %if.then121, label %lor.lhs.false113, !dbg !1893

lor.lhs.false113:                                 ; preds = %lor.lhs.false109
  %94 = load float*, float** %texvec.addr, align 8, !dbg !1894
  %arrayidx114 = getelementptr inbounds float, float* %94, i64 2, !dbg !1894
  %95 = load float, float* %arrayidx114, align 4, !dbg !1894
  %cmp115 = fcmp olt float %95, -1.000000e+00, !dbg !1895
  br i1 %cmp115, label %if.then121, label %lor.lhs.false117, !dbg !1896

lor.lhs.false117:                                 ; preds = %lor.lhs.false113
  %96 = load float*, float** %texvec.addr, align 8, !dbg !1897
  %arrayidx118 = getelementptr inbounds float, float* %96, i64 2, !dbg !1897
  %97 = load float, float* %arrayidx118, align 4, !dbg !1897
  %cmp119 = fcmp ogt float %97, 1.000000e+00, !dbg !1898
  br i1 %cmp119, label %if.then121, label %if.end125, !dbg !1899

if.then121:                                       ; preds = %lor.lhs.false117, %lor.lhs.false113, %lor.lhs.false109, %lor.lhs.false105, %lor.lhs.false102, %if.then99
  %98 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !1900
  %tobool122 = icmp ne %struct.Image* %98, null, !dbg !1900
  br i1 %tobool122, label %if.then123, label %if.end124, !dbg !1903

if.then123:                                       ; preds = %if.then121
  %99 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !1904
  %100 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !1905
  %101 = load %struct.ImagePool*, %struct.ImagePool** %pool.addr, align 8, !dbg !1906
  call void @BKE_image_pool_release_ibuf(%struct.Image* %99, %struct.ImBuf* %100, %struct.ImagePool* %101), !dbg !1907
  br label %if.end124, !dbg !1907

if.end124:                                        ; preds = %if.then123, %if.then121
  %102 = load i32, i32* %retval1, align 4, !dbg !1908
  store i32 %102, i32* %retval, align 4, !dbg !1909
  br label %return, !dbg !1909

if.end125:                                        ; preds = %lor.lhs.false117
  br label %if.end210, !dbg !1910

if.else126:                                       ; preds = %if.end87
  %103 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !1911
  %extend127 = getelementptr inbounds %struct.Tex, %struct.Tex* %103, i32 0, i32 42, !dbg !1913
  %104 = load i16, i16* %extend127, align 8, !dbg !1913
  %conv128 = sext i16 %104 to i32, !dbg !1911
  %cmp129 = icmp eq i32 %conv128, 2, !dbg !1914
  br i1 %cmp129, label %if.then136, label %lor.lhs.false131, !dbg !1915

lor.lhs.false131:                                 ; preds = %if.else126
  %105 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !1916
  %extend132 = getelementptr inbounds %struct.Tex, %struct.Tex* %105, i32 0, i32 42, !dbg !1917
  %106 = load i16, i16* %extend132, align 8, !dbg !1917
  %conv133 = sext i16 %106 to i32, !dbg !1916
  %cmp134 = icmp eq i32 %conv133, 5, !dbg !1918
  br i1 %cmp134, label %if.then136, label %if.else155, !dbg !1919

if.then136:                                       ; preds = %lor.lhs.false131, %if.else126
  %107 = load i32, i32* %x, align 4, !dbg !1920
  %cmp137 = icmp slt i32 %107, 0, !dbg !1923
  br i1 %cmp137, label %if.then150, label %lor.lhs.false139, !dbg !1924

lor.lhs.false139:                                 ; preds = %if.then136
  %108 = load i32, i32* %y, align 4, !dbg !1925
  %cmp140 = icmp slt i32 %108, 0, !dbg !1926
  br i1 %cmp140, label %if.then150, label %lor.lhs.false142, !dbg !1927

lor.lhs.false142:                                 ; preds = %lor.lhs.false139
  %109 = load i32, i32* %x, align 4, !dbg !1928
  %110 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !1929
  %x143 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %110, i32 0, i32 2, !dbg !1930
  %111 = load i32, i32* %x143, align 8, !dbg !1930
  %cmp144 = icmp sge i32 %109, %111, !dbg !1931
  br i1 %cmp144, label %if.then150, label %lor.lhs.false146, !dbg !1932

lor.lhs.false146:                                 ; preds = %lor.lhs.false142
  %112 = load i32, i32* %y, align 4, !dbg !1933
  %113 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !1934
  %y147 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %113, i32 0, i32 3, !dbg !1935
  %114 = load i32, i32* %y147, align 4, !dbg !1935
  %cmp148 = icmp sge i32 %112, %114, !dbg !1936
  br i1 %cmp148, label %if.then150, label %if.end154, !dbg !1937

if.then150:                                       ; preds = %lor.lhs.false146, %lor.lhs.false142, %lor.lhs.false139, %if.then136
  %115 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !1938
  %tobool151 = icmp ne %struct.Image* %115, null, !dbg !1938
  br i1 %tobool151, label %if.then152, label %if.end153, !dbg !1941

if.then152:                                       ; preds = %if.then150
  %116 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !1942
  %117 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !1943
  %118 = load %struct.ImagePool*, %struct.ImagePool** %pool.addr, align 8, !dbg !1944
  call void @BKE_image_pool_release_ibuf(%struct.Image* %116, %struct.ImBuf* %117, %struct.ImagePool* %118), !dbg !1945
  br label %if.end153, !dbg !1945

if.end153:                                        ; preds = %if.then152, %if.then150
  %119 = load i32, i32* %retval1, align 4, !dbg !1946
  store i32 %119, i32* %retval, align 4, !dbg !1947
  br label %return, !dbg !1947

if.end154:                                        ; preds = %lor.lhs.false146
  br label %if.end209, !dbg !1948

if.else155:                                       ; preds = %lor.lhs.false131
  %120 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !1949
  %extend156 = getelementptr inbounds %struct.Tex, %struct.Tex* %120, i32 0, i32 42, !dbg !1952
  %121 = load i16, i16* %extend156, align 8, !dbg !1952
  %conv157 = sext i16 %121 to i32, !dbg !1949
  %cmp158 = icmp eq i32 %conv157, 1, !dbg !1953
  br i1 %cmp158, label %if.then160, label %if.else173, !dbg !1954

if.then160:                                       ; preds = %if.else155
  %122 = load i32, i32* %x, align 4, !dbg !1955
  %123 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !1958
  %x161 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %123, i32 0, i32 2, !dbg !1959
  %124 = load i32, i32* %x161, align 8, !dbg !1959
  %cmp162 = icmp sge i32 %122, %124, !dbg !1960
  br i1 %cmp162, label %if.then164, label %if.else167, !dbg !1961

if.then164:                                       ; preds = %if.then160
  %125 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !1962
  %x165 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %125, i32 0, i32 2, !dbg !1963
  %126 = load i32, i32* %x165, align 8, !dbg !1963
  %sub166 = sub nsw i32 %126, 1, !dbg !1964
  store i32 %sub166, i32* %x, align 4, !dbg !1965
  br label %if.end172, !dbg !1966

if.else167:                                       ; preds = %if.then160
  %127 = load i32, i32* %x, align 4, !dbg !1967
  %cmp168 = icmp slt i32 %127, 0, !dbg !1969
  br i1 %cmp168, label %if.then170, label %if.end171, !dbg !1970

if.then170:                                       ; preds = %if.else167
  store i32 0, i32* %x, align 4, !dbg !1971
  br label %if.end171, !dbg !1972

if.end171:                                        ; preds = %if.then170, %if.else167
  br label %if.end172

if.end172:                                        ; preds = %if.end171, %if.then164
  br label %if.end181, !dbg !1973

if.else173:                                       ; preds = %if.else155
  %128 = load i32, i32* %x, align 4, !dbg !1974
  %129 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !1976
  %x174 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %129, i32 0, i32 2, !dbg !1977
  %130 = load i32, i32* %x174, align 8, !dbg !1977
  %rem = srem i32 %128, %130, !dbg !1978
  store i32 %rem, i32* %x, align 4, !dbg !1979
  %131 = load i32, i32* %x, align 4, !dbg !1980
  %cmp175 = icmp slt i32 %131, 0, !dbg !1982
  br i1 %cmp175, label %if.then177, label %if.end180, !dbg !1983

if.then177:                                       ; preds = %if.else173
  %132 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !1984
  %x178 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %132, i32 0, i32 2, !dbg !1985
  %133 = load i32, i32* %x178, align 8, !dbg !1985
  %134 = load i32, i32* %x, align 4, !dbg !1986
  %add179 = add nsw i32 %134, %133, !dbg !1986
  store i32 %add179, i32* %x, align 4, !dbg !1986
  br label %if.end180, !dbg !1987

if.end180:                                        ; preds = %if.then177, %if.else173
  br label %if.end181

if.end181:                                        ; preds = %if.end180, %if.end172
  %135 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !1988
  %extend182 = getelementptr inbounds %struct.Tex, %struct.Tex* %135, i32 0, i32 42, !dbg !1990
  %136 = load i16, i16* %extend182, align 8, !dbg !1990
  %conv183 = sext i16 %136 to i32, !dbg !1988
  %cmp184 = icmp eq i32 %conv183, 1, !dbg !1991
  br i1 %cmp184, label %if.then186, label %if.else199, !dbg !1992

if.then186:                                       ; preds = %if.end181
  %137 = load i32, i32* %y, align 4, !dbg !1993
  %138 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !1996
  %y187 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %138, i32 0, i32 3, !dbg !1997
  %139 = load i32, i32* %y187, align 4, !dbg !1997
  %cmp188 = icmp sge i32 %137, %139, !dbg !1998
  br i1 %cmp188, label %if.then190, label %if.else193, !dbg !1999

if.then190:                                       ; preds = %if.then186
  %140 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !2000
  %y191 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %140, i32 0, i32 3, !dbg !2001
  %141 = load i32, i32* %y191, align 4, !dbg !2001
  %sub192 = sub nsw i32 %141, 1, !dbg !2002
  store i32 %sub192, i32* %y, align 4, !dbg !2003
  br label %if.end198, !dbg !2004

if.else193:                                       ; preds = %if.then186
  %142 = load i32, i32* %y, align 4, !dbg !2005
  %cmp194 = icmp slt i32 %142, 0, !dbg !2007
  br i1 %cmp194, label %if.then196, label %if.end197, !dbg !2008

if.then196:                                       ; preds = %if.else193
  store i32 0, i32* %y, align 4, !dbg !2009
  br label %if.end197, !dbg !2010

if.end197:                                        ; preds = %if.then196, %if.else193
  br label %if.end198

if.end198:                                        ; preds = %if.end197, %if.then190
  br label %if.end208, !dbg !2011

if.else199:                                       ; preds = %if.end181
  %143 = load i32, i32* %y, align 4, !dbg !2012
  %144 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !2014
  %y200 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %144, i32 0, i32 3, !dbg !2015
  %145 = load i32, i32* %y200, align 4, !dbg !2015
  %rem201 = srem i32 %143, %145, !dbg !2016
  store i32 %rem201, i32* %y, align 4, !dbg !2017
  %146 = load i32, i32* %y, align 4, !dbg !2018
  %cmp202 = icmp slt i32 %146, 0, !dbg !2020
  br i1 %cmp202, label %if.then204, label %if.end207, !dbg !2021

if.then204:                                       ; preds = %if.else199
  %147 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !2022
  %y205 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %147, i32 0, i32 3, !dbg !2023
  %148 = load i32, i32* %y205, align 4, !dbg !2023
  %149 = load i32, i32* %y, align 4, !dbg !2024
  %add206 = add nsw i32 %149, %148, !dbg !2024
  store i32 %add206, i32* %y, align 4, !dbg !2024
  br label %if.end207, !dbg !2025

if.end207:                                        ; preds = %if.then204, %if.else199
  br label %if.end208

if.end208:                                        ; preds = %if.end207, %if.end198
  br label %if.end209

if.end209:                                        ; preds = %if.end208, %if.end154
  br label %if.end210

if.end210:                                        ; preds = %if.end209, %if.end125
  %150 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 4), align 8, !dbg !2026
  %conv211 = sext i16 %150 to i32, !dbg !2028
  %and212 = and i32 %conv211, 4, !dbg !2029
  %tobool213 = icmp ne i32 %and212, 0, !dbg !2029
  br i1 %tobool213, label %land.lhs.true214, label %if.end222, !dbg !2030

land.lhs.true214:                                 ; preds = %if.end210
  %151 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !2031
  %flags = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %151, i32 0, i32 6, !dbg !2032
  %152 = load i32, i32* %flags, align 8, !dbg !2032
  %and215 = and i32 %152, 4, !dbg !2033
  %tobool216 = icmp ne i32 %and215, 0, !dbg !2033
  br i1 %tobool216, label %if.then217, label %if.end222, !dbg !2034

if.then217:                                       ; preds = %land.lhs.true214
  %153 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !2035
  %x218 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %153, i32 0, i32 2, !dbg !2037
  %154 = load i32, i32* %x218, align 8, !dbg !2037
  %155 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !2038
  %y219 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %155, i32 0, i32 3, !dbg !2039
  %156 = load i32, i32* %y219, align 4, !dbg !2039
  %mul220 = mul nsw i32 %154, %156, !dbg !2040
  %157 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !2041
  %rect221 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %157, i32 0, i32 8, !dbg !2042
  %158 = load i32*, i32** %rect221, align 8, !dbg !2043
  %idx.ext = sext i32 %mul220 to i64, !dbg !2043
  %add.ptr = getelementptr inbounds i32, i32* %158, i64 %idx.ext, !dbg !2043
  store i32* %add.ptr, i32** %rect221, align 8, !dbg !2043
  br label %if.end222, !dbg !2044

if.end222:                                        ; preds = %if.then217, %land.lhs.true214, %if.end210
  %159 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !2045
  %tobool223 = icmp ne %struct.Image* %159, null, !dbg !2045
  br i1 %tobool223, label %if.then224, label %if.end244, !dbg !2047

if.then224:                                       ; preds = %if.end222
  %160 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !2048
  %imaflag225 = getelementptr inbounds %struct.Tex, %struct.Tex* %160, i32 0, i32 30, !dbg !2051
  %161 = load i16, i16* %imaflag225, align 4, !dbg !2051
  %conv226 = sext i16 %161 to i32, !dbg !2048
  %and227 = and i32 %conv226, 2, !dbg !2052
  %tobool228 = icmp ne i32 %and227, 0, !dbg !2052
  br i1 %tobool228, label %land.lhs.true229, label %if.end243, !dbg !2053

land.lhs.true229:                                 ; preds = %if.then224
  %162 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !2054
  %flag230 = getelementptr inbounds %struct.Image, %struct.Image* %162, i32 0, i32 10, !dbg !2055
  %163 = load i16, i16* %flag230, align 2, !dbg !2055
  %conv231 = sext i16 %163 to i32, !dbg !2054
  %and232 = and i32 %conv231, 4096, !dbg !2056
  %cmp233 = icmp eq i32 %and232, 0, !dbg !2057
  br i1 %cmp233, label %if.then235, label %if.end243, !dbg !2058

if.then235:                                       ; preds = %land.lhs.true229
  %164 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !2059
  %imaflag236 = getelementptr inbounds %struct.Tex, %struct.Tex* %164, i32 0, i32 30, !dbg !2062
  %165 = load i16, i16* %imaflag236, align 4, !dbg !2062
  %conv237 = sext i16 %165 to i32, !dbg !2059
  %and238 = and i32 %conv237, 32, !dbg !2063
  %cmp239 = icmp eq i32 %and238, 0, !dbg !2064
  br i1 %cmp239, label %if.then241, label %if.end242, !dbg !2065

if.then241:                                       ; preds = %if.then235
  %166 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !2066
  %talpha = getelementptr inbounds %struct.TexResult, %struct.TexResult* %166, i32 0, i32 5, !dbg !2068
  store i32 1, i32* %talpha, align 4, !dbg !2069
  br label %if.end242, !dbg !2070

if.end242:                                        ; preds = %if.then241, %if.then235
  br label %if.end243, !dbg !2071

if.end243:                                        ; preds = %if.end242, %land.lhs.true229, %if.then224
  br label %if.end244, !dbg !2072

if.end244:                                        ; preds = %if.end243, %if.end222
  %167 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !2073
  %imaflag245 = getelementptr inbounds %struct.Tex, %struct.Tex* %167, i32 0, i32 30, !dbg !2075
  %168 = load i16, i16* %imaflag245, align 4, !dbg !2075
  %conv246 = sext i16 %168 to i32, !dbg !2073
  %and247 = and i32 %conv246, 1, !dbg !2076
  %tobool248 = icmp ne i32 %and247, 0, !dbg !2076
  br i1 %tobool248, label %if.then249, label %if.else285, !dbg !2077

if.then249:                                       ; preds = %if.end244
  call void @llvm.dbg.declare(metadata float* %filterx, metadata !2078, metadata !DIExpression()), !dbg !2080
  call void @llvm.dbg.declare(metadata float* %filtery, metadata !2081, metadata !DIExpression()), !dbg !2082
  %169 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !2083
  %filtersize = getelementptr inbounds %struct.Tex, %struct.Tex* %169, i32 0, i32 10, !dbg !2084
  %170 = load float, float* %filtersize, align 8, !dbg !2084
  %mul250 = fmul float 5.000000e-01, %170, !dbg !2085
  %171 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !2086
  %x251 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %171, i32 0, i32 2, !dbg !2087
  %172 = load i32, i32* %x251, align 8, !dbg !2087
  %conv252 = sitofp i32 %172 to float, !dbg !2086
  %div253 = fdiv float %mul250, %conv252, !dbg !2088
  store float %div253, float* %filterx, align 4, !dbg !2089
  %173 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !2090
  %filtersize254 = getelementptr inbounds %struct.Tex, %struct.Tex* %173, i32 0, i32 10, !dbg !2091
  %174 = load float, float* %filtersize254, align 8, !dbg !2091
  %mul255 = fmul float 5.000000e-01, %174, !dbg !2092
  %175 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !2093
  %y256 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %175, i32 0, i32 3, !dbg !2094
  %176 = load i32, i32* %y256, align 4, !dbg !2094
  %conv257 = sitofp i32 %176 to float, !dbg !2093
  %div258 = fdiv float %mul255, %conv257, !dbg !2095
  store float %div258, float* %filtery, align 4, !dbg !2096
  %177 = load i32, i32* %xi, align 4, !dbg !2097
  %178 = load i32, i32* %x, align 4, !dbg !2098
  %sub259 = sub nsw i32 %177, %178, !dbg !2099
  %conv260 = sitofp i32 %sub259 to float, !dbg !2100
  %179 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !2101
  %x261 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %179, i32 0, i32 2, !dbg !2102
  %180 = load i32, i32* %x261, align 8, !dbg !2102
  %conv262 = sitofp i32 %180 to float, !dbg !2103
  %div263 = fdiv float %conv260, %conv262, !dbg !2104
  %181 = load float, float* %fx, align 4, !dbg !2105
  %sub264 = fsub float %181, %div263, !dbg !2105
  store float %sub264, float* %fx, align 4, !dbg !2105
  %182 = load i32, i32* %yi, align 4, !dbg !2106
  %183 = load i32, i32* %y, align 4, !dbg !2107
  %sub265 = sub nsw i32 %182, %183, !dbg !2108
  %conv266 = sitofp i32 %sub265 to float, !dbg !2109
  %184 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !2110
  %y267 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %184, i32 0, i32 3, !dbg !2111
  %185 = load i32, i32* %y267, align 4, !dbg !2111
  %conv268 = sitofp i32 %185 to float, !dbg !2112
  %div269 = fdiv float %conv266, %conv268, !dbg !2113
  %186 = load float, float* %fy, align 4, !dbg !2114
  %sub270 = fsub float %186, %div269, !dbg !2114
  store float %sub270, float* %fy, align 4, !dbg !2114
  %187 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !2115
  %188 = load float, float* %fx, align 4, !dbg !2116
  %189 = load float, float* %filterx, align 4, !dbg !2117
  %sub271 = fsub float %188, %189, !dbg !2118
  %190 = load float, float* %fy, align 4, !dbg !2119
  %191 = load float, float* %filtery, align 4, !dbg !2120
  %sub272 = fsub float %190, %191, !dbg !2121
  %192 = load float, float* %fx, align 4, !dbg !2122
  %193 = load float, float* %filterx, align 4, !dbg !2123
  %add273 = fadd float %192, %193, !dbg !2124
  %194 = load float, float* %fy, align 4, !dbg !2125
  %195 = load float, float* %filtery, align 4, !dbg !2126
  %add274 = fadd float %194, %195, !dbg !2127
  %196 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !2128
  %197 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !2129
  %extend275 = getelementptr inbounds %struct.Tex, %struct.Tex* %197, i32 0, i32 42, !dbg !2130
  %198 = load i16, i16* %extend275, align 8, !dbg !2130
  %conv276 = sext i16 %198 to i32, !dbg !2129
  %cmp277 = icmp eq i32 %conv276, 3, !dbg !2131
  %conv278 = zext i1 %cmp277 to i32, !dbg !2131
  %conv279 = trunc i32 %conv278 to i16, !dbg !2132
  %199 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !2133
  %extend280 = getelementptr inbounds %struct.Tex, %struct.Tex* %199, i32 0, i32 42, !dbg !2134
  %200 = load i16, i16* %extend280, align 8, !dbg !2134
  %conv281 = sext i16 %200 to i32, !dbg !2133
  %cmp282 = icmp eq i32 %conv281, 1, !dbg !2135
  %conv283 = zext i1 %cmp282 to i32, !dbg !2135
  %conv284 = trunc i32 %conv283 to i16, !dbg !2136
  call void @boxsample(%struct.ImBuf* %187, float %sub271, float %sub272, float %add273, float %add274, %struct.TexResult* %196, i16 signext %conv279, i16 signext %conv284), !dbg !2137
  br label %if.end287, !dbg !2138

if.else285:                                       ; preds = %if.end244
  %201 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !2139
  %tr286 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %201, i32 0, i32 1, !dbg !2141
  %202 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !2142
  %203 = load i32, i32* %x, align 4, !dbg !2143
  %204 = load i32, i32* %y, align 4, !dbg !2144
  call void @ibuf_get_color(float* %tr286, %struct.ImBuf* %202, i32 %203, i32 %204), !dbg !2145
  br label %if.end287

if.end287:                                        ; preds = %if.else285, %if.then249
  %205 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 4), align 8, !dbg !2146
  %conv288 = sext i16 %205 to i32, !dbg !2148
  %and289 = and i32 %conv288, 4, !dbg !2149
  %tobool290 = icmp ne i32 %and289, 0, !dbg !2149
  br i1 %tobool290, label %land.lhs.true291, label %if.end302, !dbg !2150

land.lhs.true291:                                 ; preds = %if.end287
  %206 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !2151
  %flags292 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %206, i32 0, i32 6, !dbg !2152
  %207 = load i32, i32* %flags292, align 8, !dbg !2152
  %and293 = and i32 %207, 4, !dbg !2153
  %tobool294 = icmp ne i32 %and293, 0, !dbg !2153
  br i1 %tobool294, label %if.then295, label %if.end302, !dbg !2154

if.then295:                                       ; preds = %land.lhs.true291
  %208 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !2155
  %x296 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %208, i32 0, i32 2, !dbg !2157
  %209 = load i32, i32* %x296, align 8, !dbg !2157
  %210 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !2158
  %y297 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %210, i32 0, i32 3, !dbg !2159
  %211 = load i32, i32* %y297, align 4, !dbg !2159
  %mul298 = mul nsw i32 %209, %211, !dbg !2160
  %212 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !2161
  %rect299 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %212, i32 0, i32 8, !dbg !2162
  %213 = load i32*, i32** %rect299, align 8, !dbg !2163
  %idx.ext300 = sext i32 %mul298 to i64, !dbg !2163
  %idx.neg = sub i64 0, %idx.ext300, !dbg !2163
  %add.ptr301 = getelementptr inbounds i32, i32* %213, i64 %idx.neg, !dbg !2163
  store i32* %add.ptr301, i32** %rect299, align 8, !dbg !2163
  br label %if.end302, !dbg !2164

if.end302:                                        ; preds = %if.then295, %land.lhs.true291, %if.end287
  %214 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !2165
  %nor303 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %214, i32 0, i32 6, !dbg !2167
  %215 = load float*, float** %nor303, align 8, !dbg !2167
  %tobool304 = icmp ne float* %215, null, !dbg !2165
  br i1 %tobool304, label %if.then305, label %if.end367, !dbg !2168

if.then305:                                       ; preds = %if.end302
  %216 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !2169
  %imaflag306 = getelementptr inbounds %struct.Tex, %struct.Tex* %216, i32 0, i32 30, !dbg !2172
  %217 = load i16, i16* %imaflag306, align 4, !dbg !2172
  %conv307 = sext i16 %217 to i32, !dbg !2169
  %and308 = and i32 %conv307, 2048, !dbg !2173
  %tobool309 = icmp ne i32 %and308, 0, !dbg !2173
  br i1 %tobool309, label %if.then310, label %if.else326, !dbg !2174

if.then310:                                       ; preds = %if.then305
  %218 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !2175
  %tr311 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %218, i32 0, i32 1, !dbg !2177
  %219 = load float, float* %tr311, align 4, !dbg !2177
  %sub312 = fsub float %219, 5.000000e-01, !dbg !2178
  %mul313 = fmul float -2.000000e+00, %sub312, !dbg !2179
  %220 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !2180
  %nor314 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %220, i32 0, i32 6, !dbg !2181
  %221 = load float*, float** %nor314, align 8, !dbg !2181
  %arrayidx315 = getelementptr inbounds float, float* %221, i64 0, !dbg !2180
  store float %mul313, float* %arrayidx315, align 4, !dbg !2182
  %222 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !2183
  %tg316 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %222, i32 0, i32 2, !dbg !2184
  %223 = load float, float* %tg316, align 8, !dbg !2184
  %sub317 = fsub float %223, 5.000000e-01, !dbg !2185
  %mul318 = fmul float 2.000000e+00, %sub317, !dbg !2186
  %224 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !2187
  %nor319 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %224, i32 0, i32 6, !dbg !2188
  %225 = load float*, float** %nor319, align 8, !dbg !2188
  %arrayidx320 = getelementptr inbounds float, float* %225, i64 1, !dbg !2187
  store float %mul318, float* %arrayidx320, align 4, !dbg !2189
  %226 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !2190
  %tb321 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %226, i32 0, i32 3, !dbg !2191
  %227 = load float, float* %tb321, align 4, !dbg !2191
  %sub322 = fsub float %227, 5.000000e-01, !dbg !2192
  %mul323 = fmul float 2.000000e+00, %sub322, !dbg !2193
  %228 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !2194
  %nor324 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %228, i32 0, i32 6, !dbg !2195
  %229 = load float*, float** %nor324, align 8, !dbg !2195
  %arrayidx325 = getelementptr inbounds float, float* %229, i64 2, !dbg !2194
  store float %mul323, float* %arrayidx325, align 4, !dbg !2196
  br label %if.end366, !dbg !2197

if.else326:                                       ; preds = %if.then305
  %230 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !2198
  %tr327 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %230, i32 0, i32 1, !dbg !2200
  %231 = load float, float* %tr327, align 4, !dbg !2200
  %232 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !2201
  %tg328 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %232, i32 0, i32 2, !dbg !2202
  %233 = load float, float* %tg328, align 8, !dbg !2202
  %add329 = fadd float %231, %233, !dbg !2203
  %234 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !2204
  %tb330 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %234, i32 0, i32 3, !dbg !2205
  %235 = load float, float* %tb330, align 4, !dbg !2205
  %add331 = fadd float %add329, %235, !dbg !2206
  store float %add331, float* %val1, align 4, !dbg !2207
  %236 = load i32, i32* %x, align 4, !dbg !2208
  %237 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !2210
  %x332 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %237, i32 0, i32 2, !dbg !2211
  %238 = load i32, i32* %x332, align 8, !dbg !2211
  %sub333 = sub nsw i32 %238, 1, !dbg !2212
  %cmp334 = icmp slt i32 %236, %sub333, !dbg !2213
  br i1 %cmp334, label %if.then336, label %if.else343, !dbg !2214

if.then336:                                       ; preds = %if.else326
  call void @llvm.dbg.declare(metadata [4 x float]* %col, metadata !2215, metadata !DIExpression()), !dbg !2217
  %arraydecay = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 0, !dbg !2218
  %239 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !2219
  %240 = load i32, i32* %x, align 4, !dbg !2220
  %add337 = add nsw i32 %240, 1, !dbg !2221
  %241 = load i32, i32* %y, align 4, !dbg !2222
  call void @ibuf_get_color(float* %arraydecay, %struct.ImBuf* %239, i32 %add337, i32 %241), !dbg !2223
  %arrayidx338 = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 0, !dbg !2224
  %242 = load float, float* %arrayidx338, align 16, !dbg !2224
  %arrayidx339 = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 1, !dbg !2225
  %243 = load float, float* %arrayidx339, align 4, !dbg !2225
  %add340 = fadd float %242, %243, !dbg !2226
  %arrayidx341 = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 2, !dbg !2227
  %244 = load float, float* %arrayidx341, align 8, !dbg !2227
  %add342 = fadd float %add340, %244, !dbg !2228
  store float %add342, float* %val2, align 4, !dbg !2229
  br label %if.end344, !dbg !2230

if.else343:                                       ; preds = %if.else326
  %245 = load float, float* %val1, align 4, !dbg !2231
  store float %245, float* %val2, align 4, !dbg !2233
  br label %if.end344

if.end344:                                        ; preds = %if.else343, %if.then336
  %246 = load i32, i32* %y, align 4, !dbg !2234
  %247 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !2236
  %y345 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %247, i32 0, i32 3, !dbg !2237
  %248 = load i32, i32* %y345, align 4, !dbg !2237
  %sub346 = sub nsw i32 %248, 1, !dbg !2238
  %cmp347 = icmp slt i32 %246, %sub346, !dbg !2239
  br i1 %cmp347, label %if.then349, label %if.else358, !dbg !2240

if.then349:                                       ; preds = %if.end344
  call void @llvm.dbg.declare(metadata [4 x float]* %col350, metadata !2241, metadata !DIExpression()), !dbg !2243
  %arraydecay351 = getelementptr inbounds [4 x float], [4 x float]* %col350, i64 0, i64 0, !dbg !2244
  %249 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !2245
  %250 = load i32, i32* %x, align 4, !dbg !2246
  %251 = load i32, i32* %y, align 4, !dbg !2247
  %add352 = add nsw i32 %251, 1, !dbg !2248
  call void @ibuf_get_color(float* %arraydecay351, %struct.ImBuf* %249, i32 %250, i32 %add352), !dbg !2249
  %arrayidx353 = getelementptr inbounds [4 x float], [4 x float]* %col350, i64 0, i64 0, !dbg !2250
  %252 = load float, float* %arrayidx353, align 16, !dbg !2250
  %arrayidx354 = getelementptr inbounds [4 x float], [4 x float]* %col350, i64 0, i64 1, !dbg !2251
  %253 = load float, float* %arrayidx354, align 4, !dbg !2251
  %add355 = fadd float %252, %253, !dbg !2252
  %arrayidx356 = getelementptr inbounds [4 x float], [4 x float]* %col350, i64 0, i64 2, !dbg !2253
  %254 = load float, float* %arrayidx356, align 8, !dbg !2253
  %add357 = fadd float %add355, %254, !dbg !2254
  store float %add357, float* %val3, align 4, !dbg !2255
  br label %if.end359, !dbg !2256

if.else358:                                       ; preds = %if.end344
  %255 = load float, float* %val1, align 4, !dbg !2257
  store float %255, float* %val3, align 4, !dbg !2259
  br label %if.end359

if.end359:                                        ; preds = %if.else358, %if.then349
  %256 = load float, float* %val1, align 4, !dbg !2260
  %257 = load float, float* %val2, align 4, !dbg !2261
  %sub360 = fsub float %256, %257, !dbg !2262
  %258 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !2263
  %nor361 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %258, i32 0, i32 6, !dbg !2264
  %259 = load float*, float** %nor361, align 8, !dbg !2264
  %arrayidx362 = getelementptr inbounds float, float* %259, i64 0, !dbg !2263
  store float %sub360, float* %arrayidx362, align 4, !dbg !2265
  %260 = load float, float* %val1, align 4, !dbg !2266
  %261 = load float, float* %val3, align 4, !dbg !2267
  %sub363 = fsub float %260, %261, !dbg !2268
  %262 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !2269
  %nor364 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %262, i32 0, i32 6, !dbg !2270
  %263 = load float*, float** %nor364, align 8, !dbg !2270
  %arrayidx365 = getelementptr inbounds float, float* %263, i64 1, !dbg !2269
  store float %sub363, float* %arrayidx365, align 4, !dbg !2271
  br label %if.end366

if.end366:                                        ; preds = %if.end359, %if.then310
  br label %if.end367, !dbg !2272

if.end367:                                        ; preds = %if.end366, %if.end302
  %264 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !2273
  %talpha368 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %264, i32 0, i32 5, !dbg !2275
  %265 = load i32, i32* %talpha368, align 4, !dbg !2275
  %tobool369 = icmp ne i32 %265, 0, !dbg !2273
  br i1 %tobool369, label %if.then370, label %if.else373, !dbg !2276

if.then370:                                       ; preds = %if.end367
  %266 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !2277
  %ta371 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %266, i32 0, i32 4, !dbg !2279
  %267 = load float, float* %ta371, align 8, !dbg !2279
  %268 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !2280
  %tin372 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %268, i32 0, i32 0, !dbg !2281
  store float %267, float* %tin372, align 8, !dbg !2282
  br label %if.end389, !dbg !2283

if.else373:                                       ; preds = %if.end367
  %269 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !2284
  %imaflag374 = getelementptr inbounds %struct.Tex, %struct.Tex* %269, i32 0, i32 30, !dbg !2286
  %270 = load i16, i16* %imaflag374, align 4, !dbg !2286
  %conv375 = sext i16 %270 to i32, !dbg !2284
  %and376 = and i32 %conv375, 32, !dbg !2287
  %tobool377 = icmp ne i32 %and376, 0, !dbg !2287
  br i1 %tobool377, label %if.then378, label %if.else385, !dbg !2288

if.then378:                                       ; preds = %if.else373
  %271 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !2289
  %tr379 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %271, i32 0, i32 1, !dbg !2291
  %272 = load float, float* %tr379, align 4, !dbg !2291
  %273 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !2292
  %tg380 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %273, i32 0, i32 2, !dbg !2293
  %274 = load float, float* %tg380, align 8, !dbg !2293
  %275 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !2294
  %tb381 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %275, i32 0, i32 3, !dbg !2295
  %276 = load float, float* %tb381, align 4, !dbg !2295
  %call382 = call float @max_fff(float %272, float %274, float %276), !dbg !2296
  %277 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !2297
  %tin383 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %277, i32 0, i32 0, !dbg !2298
  store float %call382, float* %tin383, align 8, !dbg !2299
  %278 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !2300
  %ta384 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %278, i32 0, i32 4, !dbg !2301
  store float %call382, float* %ta384, align 8, !dbg !2302
  br label %if.end388, !dbg !2303

if.else385:                                       ; preds = %if.else373
  %279 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !2304
  %tin386 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %279, i32 0, i32 0, !dbg !2306
  store float 1.000000e+00, float* %tin386, align 8, !dbg !2307
  %280 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !2308
  %ta387 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %280, i32 0, i32 4, !dbg !2309
  store float 1.000000e+00, float* %ta387, align 8, !dbg !2310
  br label %if.end388

if.end388:                                        ; preds = %if.else385, %if.then378
  br label %if.end389

if.end389:                                        ; preds = %if.end388, %if.then370
  %281 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !2311
  %flag390 = getelementptr inbounds %struct.Tex, %struct.Tex* %281, i32 0, i32 31, !dbg !2313
  %282 = load i16, i16* %flag390, align 2, !dbg !2313
  %conv391 = sext i16 %282 to i32, !dbg !2311
  %and392 = and i32 %conv391, 4, !dbg !2314
  %tobool393 = icmp ne i32 %and392, 0, !dbg !2314
  br i1 %tobool393, label %if.then394, label %if.end398, !dbg !2315

if.then394:                                       ; preds = %if.end389
  %283 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !2316
  %ta395 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %283, i32 0, i32 4, !dbg !2318
  %284 = load float, float* %ta395, align 8, !dbg !2318
  %sub396 = fsub float 1.000000e+00, %284, !dbg !2319
  %285 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !2320
  %ta397 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %285, i32 0, i32 4, !dbg !2321
  store float %sub396, float* %ta397, align 8, !dbg !2322
  br label %if.end398, !dbg !2323

if.end398:                                        ; preds = %if.then394, %if.end389
  %286 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !2324
  %ta399 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %286, i32 0, i32 4, !dbg !2326
  %287 = load float, float* %ta399, align 8, !dbg !2326
  %cmp400 = fcmp une float %287, 1.000000e+00, !dbg !2327
  br i1 %cmp400, label %land.lhs.true402, label %if.end420, !dbg !2328

land.lhs.true402:                                 ; preds = %if.end398
  %288 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !2329
  %ta403 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %288, i32 0, i32 4, !dbg !2330
  %289 = load float, float* %ta403, align 8, !dbg !2330
  %cmp404 = fcmp ogt float %289, 0x3F1A36E2E0000000, !dbg !2331
  br i1 %cmp404, label %land.lhs.true406, label %if.end420, !dbg !2332

land.lhs.true406:                                 ; preds = %land.lhs.true402
  %290 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !2333
  %imaflag407 = getelementptr inbounds %struct.Tex, %struct.Tex* %290, i32 0, i32 30, !dbg !2334
  %291 = load i16, i16* %imaflag407, align 4, !dbg !2334
  %conv408 = sext i16 %291 to i32, !dbg !2333
  %and409 = and i32 %conv408, 32, !dbg !2335
  %tobool410 = icmp ne i32 %and409, 0, !dbg !2335
  br i1 %tobool410, label %if.end420, label %if.then411, !dbg !2336

if.then411:                                       ; preds = %land.lhs.true406
  %292 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !2337
  %ta412 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %292, i32 0, i32 4, !dbg !2339
  %293 = load float, float* %ta412, align 8, !dbg !2339
  %div413 = fdiv float 1.000000e+00, %293, !dbg !2340
  store float %div413, float* %fx, align 4, !dbg !2341
  %294 = load float, float* %fx, align 4, !dbg !2342
  %295 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !2343
  %tr414 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %295, i32 0, i32 1, !dbg !2344
  %296 = load float, float* %tr414, align 4, !dbg !2345
  %mul415 = fmul float %296, %294, !dbg !2345
  store float %mul415, float* %tr414, align 4, !dbg !2345
  %297 = load float, float* %fx, align 4, !dbg !2346
  %298 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !2347
  %tg416 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %298, i32 0, i32 2, !dbg !2348
  %299 = load float, float* %tg416, align 8, !dbg !2349
  %mul417 = fmul float %299, %297, !dbg !2349
  store float %mul417, float* %tg416, align 8, !dbg !2349
  %300 = load float, float* %fx, align 4, !dbg !2350
  %301 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !2351
  %tb418 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %301, i32 0, i32 3, !dbg !2352
  %302 = load float, float* %tb418, align 4, !dbg !2353
  %mul419 = fmul float %302, %300, !dbg !2353
  store float %mul419, float* %tb418, align 4, !dbg !2353
  br label %if.end420, !dbg !2354

if.end420:                                        ; preds = %if.then411, %land.lhs.true406, %land.lhs.true402, %if.end398
  %303 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !2355
  %tobool421 = icmp ne %struct.Image* %303, null, !dbg !2355
  br i1 %tobool421, label %if.then422, label %if.end423, !dbg !2357

if.then422:                                       ; preds = %if.end420
  %304 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !2358
  %305 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !2359
  %306 = load %struct.ImagePool*, %struct.ImagePool** %pool.addr, align 8, !dbg !2360
  call void @BKE_image_pool_release_ibuf(%struct.Image* %304, %struct.ImBuf* %305, %struct.ImagePool* %306), !dbg !2361
  br label %if.end423, !dbg !2361

if.end423:                                        ; preds = %if.then422, %if.end420
  %307 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !2362
  %rfac = getelementptr inbounds %struct.Tex, %struct.Tex* %307, i32 0, i32 7, !dbg !2362
  %308 = load float, float* %rfac, align 4, !dbg !2362
  %309 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !2362
  %tr424 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %309, i32 0, i32 1, !dbg !2362
  %310 = load float, float* %tr424, align 4, !dbg !2362
  %sub425 = fsub float %310, 5.000000e-01, !dbg !2362
  %311 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !2362
  %contrast = getelementptr inbounds %struct.Tex, %struct.Tex* %311, i32 0, i32 5, !dbg !2362
  %312 = load float, float* %contrast, align 4, !dbg !2362
  %mul426 = fmul float %sub425, %312, !dbg !2362
  %313 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !2362
  %bright = getelementptr inbounds %struct.Tex, %struct.Tex* %313, i32 0, i32 4, !dbg !2362
  %314 = load float, float* %bright, align 8, !dbg !2362
  %add427 = fadd float %mul426, %314, !dbg !2362
  %sub428 = fsub float %add427, 5.000000e-01, !dbg !2362
  %mul429 = fmul float %308, %sub428, !dbg !2362
  %315 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !2362
  %tr430 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %315, i32 0, i32 1, !dbg !2362
  store float %mul429, float* %tr430, align 4, !dbg !2362
  %316 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !2362
  %gfac = getelementptr inbounds %struct.Tex, %struct.Tex* %316, i32 0, i32 8, !dbg !2362
  %317 = load float, float* %gfac, align 8, !dbg !2362
  %318 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !2362
  %tg431 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %318, i32 0, i32 2, !dbg !2362
  %319 = load float, float* %tg431, align 8, !dbg !2362
  %sub432 = fsub float %319, 5.000000e-01, !dbg !2362
  %320 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !2362
  %contrast433 = getelementptr inbounds %struct.Tex, %struct.Tex* %320, i32 0, i32 5, !dbg !2362
  %321 = load float, float* %contrast433, align 4, !dbg !2362
  %mul434 = fmul float %sub432, %321, !dbg !2362
  %322 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !2362
  %bright435 = getelementptr inbounds %struct.Tex, %struct.Tex* %322, i32 0, i32 4, !dbg !2362
  %323 = load float, float* %bright435, align 8, !dbg !2362
  %add436 = fadd float %mul434, %323, !dbg !2362
  %sub437 = fsub float %add436, 5.000000e-01, !dbg !2362
  %mul438 = fmul float %317, %sub437, !dbg !2362
  %324 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !2362
  %tg439 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %324, i32 0, i32 2, !dbg !2362
  store float %mul438, float* %tg439, align 8, !dbg !2362
  %325 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !2362
  %bfac = getelementptr inbounds %struct.Tex, %struct.Tex* %325, i32 0, i32 9, !dbg !2362
  %326 = load float, float* %bfac, align 4, !dbg !2362
  %327 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !2362
  %tb440 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %327, i32 0, i32 3, !dbg !2362
  %328 = load float, float* %tb440, align 4, !dbg !2362
  %sub441 = fsub float %328, 5.000000e-01, !dbg !2362
  %329 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !2362
  %contrast442 = getelementptr inbounds %struct.Tex, %struct.Tex* %329, i32 0, i32 5, !dbg !2362
  %330 = load float, float* %contrast442, align 4, !dbg !2362
  %mul443 = fmul float %sub441, %330, !dbg !2362
  %331 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !2362
  %bright444 = getelementptr inbounds %struct.Tex, %struct.Tex* %331, i32 0, i32 4, !dbg !2362
  %332 = load float, float* %bright444, align 8, !dbg !2362
  %add445 = fadd float %mul443, %332, !dbg !2362
  %sub446 = fsub float %add445, 5.000000e-01, !dbg !2362
  %mul447 = fmul float %326, %sub446, !dbg !2362
  %333 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !2362
  %tb448 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %333, i32 0, i32 3, !dbg !2362
  store float %mul447, float* %tb448, align 4, !dbg !2362
  %334 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !2363
  %flag449 = getelementptr inbounds %struct.Tex, %struct.Tex* %334, i32 0, i32 31, !dbg !2363
  %335 = load i16, i16* %flag449, align 2, !dbg !2363
  %conv450 = sext i16 %335 to i32, !dbg !2363
  %and451 = and i32 %conv450, 1024, !dbg !2363
  %tobool452 = icmp ne i32 %and451, 0, !dbg !2363
  br i1 %tobool452, label %if.end472, label %if.then453, !dbg !2362

if.then453:                                       ; preds = %if.end423
  %336 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !2365
  %tr454 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %336, i32 0, i32 1, !dbg !2365
  %337 = load float, float* %tr454, align 4, !dbg !2365
  %cmp455 = fcmp olt float %337, 0.000000e+00, !dbg !2365
  br i1 %cmp455, label %if.then457, label %if.end459, !dbg !2368

if.then457:                                       ; preds = %if.then453
  %338 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !2365
  %tr458 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %338, i32 0, i32 1, !dbg !2365
  store float 0.000000e+00, float* %tr458, align 4, !dbg !2365
  br label %if.end459, !dbg !2365

if.end459:                                        ; preds = %if.then457, %if.then453
  %339 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !2369
  %tg460 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %339, i32 0, i32 2, !dbg !2369
  %340 = load float, float* %tg460, align 8, !dbg !2369
  %cmp461 = fcmp olt float %340, 0.000000e+00, !dbg !2369
  br i1 %cmp461, label %if.then463, label %if.end465, !dbg !2368

if.then463:                                       ; preds = %if.end459
  %341 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !2369
  %tg464 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %341, i32 0, i32 2, !dbg !2369
  store float 0.000000e+00, float* %tg464, align 8, !dbg !2369
  br label %if.end465, !dbg !2369

if.end465:                                        ; preds = %if.then463, %if.end459
  %342 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !2371
  %tb466 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %342, i32 0, i32 3, !dbg !2371
  %343 = load float, float* %tb466, align 4, !dbg !2371
  %cmp467 = fcmp olt float %343, 0.000000e+00, !dbg !2371
  br i1 %cmp467, label %if.then469, label %if.end471, !dbg !2368

if.then469:                                       ; preds = %if.end465
  %344 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !2371
  %tb470 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %344, i32 0, i32 3, !dbg !2371
  store float 0.000000e+00, float* %tb470, align 4, !dbg !2371
  br label %if.end471, !dbg !2371

if.end471:                                        ; preds = %if.then469, %if.end465
  br label %if.end472, !dbg !2368

if.end472:                                        ; preds = %if.end471, %if.end423
  %345 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !2373
  %saturation = getelementptr inbounds %struct.Tex, %struct.Tex* %345, i32 0, i32 6, !dbg !2373
  %346 = load float, float* %saturation, align 8, !dbg !2373
  %cmp473 = fcmp une float %346, 1.000000e+00, !dbg !2373
  br i1 %cmp473, label %if.then475, label %if.end493, !dbg !2362

if.then475:                                       ; preds = %if.end472
  call void @llvm.dbg.declare(metadata [3 x float]* %_hsv, metadata !2375, metadata !DIExpression()), !dbg !2377
  %347 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !2377
  %tr476 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %347, i32 0, i32 1, !dbg !2377
  %348 = load float, float* %tr476, align 4, !dbg !2377
  %349 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !2377
  %tg477 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %349, i32 0, i32 2, !dbg !2377
  %350 = load float, float* %tg477, align 8, !dbg !2377
  %351 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !2377
  %tb478 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %351, i32 0, i32 3, !dbg !2377
  %352 = load float, float* %tb478, align 4, !dbg !2377
  %arraydecay479 = getelementptr inbounds [3 x float], [3 x float]* %_hsv, i64 0, i64 0, !dbg !2377
  %arraydecay480 = getelementptr inbounds [3 x float], [3 x float]* %_hsv, i64 0, i64 0, !dbg !2377
  %add.ptr481 = getelementptr inbounds float, float* %arraydecay480, i64 1, !dbg !2377
  %arraydecay482 = getelementptr inbounds [3 x float], [3 x float]* %_hsv, i64 0, i64 0, !dbg !2377
  %add.ptr483 = getelementptr inbounds float, float* %arraydecay482, i64 2, !dbg !2377
  call void @rgb_to_hsv(float %348, float %350, float %352, float* %arraydecay479, float* %add.ptr481, float* %add.ptr483), !dbg !2377
  %353 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !2377
  %saturation484 = getelementptr inbounds %struct.Tex, %struct.Tex* %353, i32 0, i32 6, !dbg !2377
  %354 = load float, float* %saturation484, align 8, !dbg !2377
  %arrayidx485 = getelementptr inbounds [3 x float], [3 x float]* %_hsv, i64 0, i64 1, !dbg !2377
  %355 = load float, float* %arrayidx485, align 4, !dbg !2377
  %mul486 = fmul float %355, %354, !dbg !2377
  store float %mul486, float* %arrayidx485, align 4, !dbg !2377
  %arrayidx487 = getelementptr inbounds [3 x float], [3 x float]* %_hsv, i64 0, i64 0, !dbg !2377
  %356 = load float, float* %arrayidx487, align 4, !dbg !2377
  %arrayidx488 = getelementptr inbounds [3 x float], [3 x float]* %_hsv, i64 0, i64 1, !dbg !2377
  %357 = load float, float* %arrayidx488, align 4, !dbg !2377
  %arrayidx489 = getelementptr inbounds [3 x float], [3 x float]* %_hsv, i64 0, i64 2, !dbg !2377
  %358 = load float, float* %arrayidx489, align 4, !dbg !2377
  %359 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !2377
  %tr490 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %359, i32 0, i32 1, !dbg !2377
  %360 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !2377
  %tg491 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %360, i32 0, i32 2, !dbg !2377
  %361 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !2377
  %tb492 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %361, i32 0, i32 3, !dbg !2377
  call void @hsv_to_rgb(float %356, float %357, float %358, float* %tr490, float* %tg491, float* %tb492), !dbg !2377
  br label %if.end493, !dbg !2377

if.end493:                                        ; preds = %if.then475, %if.end472
  %362 = load i32, i32* %retval1, align 4, !dbg !2378
  store i32 %362, i32* %retval, align 4, !dbg !2379
  br label %return, !dbg !2379

return:                                           ; preds = %if.end493, %if.end153, %if.end124, %if.end71, %if.end56, %if.end23, %if.then8, %if.then
  %363 = load i32, i32* %retval, align 4, !dbg !2380
  ret i32 %363, !dbg !2380
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare dso_local zeroext i8 @BKE_image_has_loaded_ibuf(%struct.Image*) #2

declare dso_local %struct.ImBuf* @BKE_image_pool_acquire_ibuf(%struct.Image*, %struct.ImageUser*, %struct.ImagePool*) #2

declare dso_local void @BKE_image_pool_release_ibuf(%struct.Image*, %struct.ImBuf*, %struct.ImagePool*) #2

; Function Attrs: nounwind readnone speculatable willreturn
declare double @llvm.floor.f64(double) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.floor.f32(float) #1

; Function Attrs: noinline nounwind uwtable
define internal void @boxsample(%struct.ImBuf* %ibuf, float %minx, float %miny, float %maxx, float %maxy, %struct.TexResult* %texres, i16 signext %imaprepeat, i16 signext %imapextend) #0 !dbg !2381 {
entry:
  %ibuf.addr = alloca %struct.ImBuf*, align 8
  %minx.addr = alloca float, align 4
  %miny.addr = alloca float, align 4
  %maxx.addr = alloca float, align 4
  %maxy.addr = alloca float, align 4
  %texres.addr = alloca %struct.TexResult*, align 8
  %imaprepeat.addr = alloca i16, align 2
  %imapextend.addr = alloca i16, align 2
  %texr = alloca %struct.TexResult, align 8
  %rf = alloca %struct.rctf*, align 8
  %stack = alloca [8 x %struct.rctf], align 16
  %opp = alloca float, align 4
  %tot = alloca float, align 4
  %alphaclip = alloca float, align 4
  %count = alloca i16, align 2
  store %struct.ImBuf* %ibuf, %struct.ImBuf** %ibuf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf.addr, metadata !2385, metadata !DIExpression()), !dbg !2386
  store float %minx, float* %minx.addr, align 4
  call void @llvm.dbg.declare(metadata float* %minx.addr, metadata !2387, metadata !DIExpression()), !dbg !2388
  store float %miny, float* %miny.addr, align 4
  call void @llvm.dbg.declare(metadata float* %miny.addr, metadata !2389, metadata !DIExpression()), !dbg !2390
  store float %maxx, float* %maxx.addr, align 4
  call void @llvm.dbg.declare(metadata float* %maxx.addr, metadata !2391, metadata !DIExpression()), !dbg !2392
  store float %maxy, float* %maxy.addr, align 4
  call void @llvm.dbg.declare(metadata float* %maxy.addr, metadata !2393, metadata !DIExpression()), !dbg !2394
  store %struct.TexResult* %texres, %struct.TexResult** %texres.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TexResult** %texres.addr, metadata !2395, metadata !DIExpression()), !dbg !2396
  store i16 %imaprepeat, i16* %imaprepeat.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %imaprepeat.addr, metadata !2397, metadata !DIExpression()), !dbg !2398
  store i16 %imapextend, i16* %imapextend.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %imapextend.addr, metadata !2399, metadata !DIExpression()), !dbg !2400
  call void @llvm.dbg.declare(metadata %struct.TexResult* %texr, metadata !2401, metadata !DIExpression()), !dbg !2402
  call void @llvm.dbg.declare(metadata %struct.rctf** %rf, metadata !2403, metadata !DIExpression()), !dbg !2405
  call void @llvm.dbg.declare(metadata [8 x %struct.rctf]* %stack, metadata !2406, metadata !DIExpression()), !dbg !2408
  call void @llvm.dbg.declare(metadata float* %opp, metadata !2409, metadata !DIExpression()), !dbg !2410
  call void @llvm.dbg.declare(metadata float* %tot, metadata !2411, metadata !DIExpression()), !dbg !2412
  call void @llvm.dbg.declare(metadata float* %alphaclip, metadata !2413, metadata !DIExpression()), !dbg !2414
  store float 1.000000e+00, float* %alphaclip, align 4, !dbg !2414
  call void @llvm.dbg.declare(metadata i16* %count, metadata !2415, metadata !DIExpression()), !dbg !2416
  store i16 1, i16* %count, align 2, !dbg !2416
  %arraydecay = getelementptr inbounds [8 x %struct.rctf], [8 x %struct.rctf]* %stack, i64 0, i64 0, !dbg !2417
  store %struct.rctf* %arraydecay, %struct.rctf** %rf, align 8, !dbg !2418
  %0 = load float, float* %minx.addr, align 4, !dbg !2419
  %1 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !2420
  %x = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %1, i32 0, i32 2, !dbg !2421
  %2 = load i32, i32* %x, align 8, !dbg !2421
  %conv = sitofp i32 %2 to float, !dbg !2422
  %mul = fmul float %0, %conv, !dbg !2423
  %3 = load %struct.rctf*, %struct.rctf** %rf, align 8, !dbg !2424
  %xmin = getelementptr inbounds %struct.rctf, %struct.rctf* %3, i32 0, i32 0, !dbg !2425
  store float %mul, float* %xmin, align 4, !dbg !2426
  %4 = load float, float* %maxx.addr, align 4, !dbg !2427
  %5 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !2428
  %x1 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %5, i32 0, i32 2, !dbg !2429
  %6 = load i32, i32* %x1, align 8, !dbg !2429
  %conv2 = sitofp i32 %6 to float, !dbg !2430
  %mul3 = fmul float %4, %conv2, !dbg !2431
  %7 = load %struct.rctf*, %struct.rctf** %rf, align 8, !dbg !2432
  %xmax = getelementptr inbounds %struct.rctf, %struct.rctf* %7, i32 0, i32 1, !dbg !2433
  store float %mul3, float* %xmax, align 4, !dbg !2434
  %8 = load float, float* %miny.addr, align 4, !dbg !2435
  %9 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !2436
  %y = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %9, i32 0, i32 3, !dbg !2437
  %10 = load i32, i32* %y, align 4, !dbg !2437
  %conv4 = sitofp i32 %10 to float, !dbg !2438
  %mul5 = fmul float %8, %conv4, !dbg !2439
  %11 = load %struct.rctf*, %struct.rctf** %rf, align 8, !dbg !2440
  %ymin = getelementptr inbounds %struct.rctf, %struct.rctf* %11, i32 0, i32 2, !dbg !2441
  store float %mul5, float* %ymin, align 4, !dbg !2442
  %12 = load float, float* %maxy.addr, align 4, !dbg !2443
  %13 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !2444
  %y6 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %13, i32 0, i32 3, !dbg !2445
  %14 = load i32, i32* %y6, align 4, !dbg !2445
  %conv7 = sitofp i32 %14 to float, !dbg !2446
  %mul8 = fmul float %12, %conv7, !dbg !2447
  %15 = load %struct.rctf*, %struct.rctf** %rf, align 8, !dbg !2448
  %ymax = getelementptr inbounds %struct.rctf, %struct.rctf* %15, i32 0, i32 3, !dbg !2449
  store float %mul8, float* %ymax, align 4, !dbg !2450
  %16 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !2451
  %talpha = getelementptr inbounds %struct.TexResult, %struct.TexResult* %16, i32 0, i32 5, !dbg !2452
  %17 = load i32, i32* %talpha, align 4, !dbg !2452
  %talpha9 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texr, i32 0, i32 5, !dbg !2453
  store i32 %17, i32* %talpha9, align 4, !dbg !2454
  %18 = load i16, i16* %imapextend.addr, align 2, !dbg !2455
  %tobool = icmp ne i16 %18, 0, !dbg !2455
  br i1 %tobool, label %if.then, label %if.else44, !dbg !2457

if.then:                                          ; preds = %entry
  %19 = load %struct.rctf*, %struct.rctf** %rf, align 8, !dbg !2458
  %xmin10 = getelementptr inbounds %struct.rctf, %struct.rctf* %19, i32 0, i32 0, !dbg !2458
  %20 = load float, float* %xmin10, align 4, !dbg !2458
  %cmp = fcmp olt float %20, 0.000000e+00, !dbg !2458
  br i1 %cmp, label %if.then12, label %if.else, !dbg !2462

if.then12:                                        ; preds = %if.then
  %21 = load %struct.rctf*, %struct.rctf** %rf, align 8, !dbg !2458
  %xmin13 = getelementptr inbounds %struct.rctf, %struct.rctf* %21, i32 0, i32 0, !dbg !2458
  store float 0.000000e+00, float* %xmin13, align 4, !dbg !2458
  br label %if.end24, !dbg !2458

if.else:                                          ; preds = %if.then
  %22 = load %struct.rctf*, %struct.rctf** %rf, align 8, !dbg !2463
  %xmin14 = getelementptr inbounds %struct.rctf, %struct.rctf* %22, i32 0, i32 0, !dbg !2463
  %23 = load float, float* %xmin14, align 4, !dbg !2463
  %24 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !2463
  %x15 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %24, i32 0, i32 2, !dbg !2463
  %25 = load i32, i32* %x15, align 8, !dbg !2463
  %sub = sub nsw i32 %25, 1, !dbg !2463
  %conv16 = sitofp i32 %sub to float, !dbg !2463
  %cmp17 = fcmp ogt float %23, %conv16, !dbg !2463
  br i1 %cmp17, label %if.then19, label %if.end, !dbg !2458

if.then19:                                        ; preds = %if.else
  %26 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !2463
  %x20 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %26, i32 0, i32 2, !dbg !2463
  %27 = load i32, i32* %x20, align 8, !dbg !2463
  %sub21 = sub nsw i32 %27, 1, !dbg !2463
  %conv22 = sitofp i32 %sub21 to float, !dbg !2463
  %28 = load %struct.rctf*, %struct.rctf** %rf, align 8, !dbg !2463
  %xmin23 = getelementptr inbounds %struct.rctf, %struct.rctf* %28, i32 0, i32 0, !dbg !2463
  store float %conv22, float* %xmin23, align 4, !dbg !2463
  br label %if.end, !dbg !2463

if.end:                                           ; preds = %if.then19, %if.else
  br label %if.end24

if.end24:                                         ; preds = %if.end, %if.then12
  %29 = load %struct.rctf*, %struct.rctf** %rf, align 8, !dbg !2465
  %xmax25 = getelementptr inbounds %struct.rctf, %struct.rctf* %29, i32 0, i32 1, !dbg !2465
  %30 = load float, float* %xmax25, align 4, !dbg !2465
  %cmp26 = fcmp olt float %30, 0.000000e+00, !dbg !2465
  br i1 %cmp26, label %if.then28, label %if.else30, !dbg !2468

if.then28:                                        ; preds = %if.end24
  %31 = load %struct.rctf*, %struct.rctf** %rf, align 8, !dbg !2465
  %xmax29 = getelementptr inbounds %struct.rctf, %struct.rctf* %31, i32 0, i32 1, !dbg !2465
  store float 0.000000e+00, float* %xmax29, align 4, !dbg !2465
  br label %if.end43, !dbg !2465

if.else30:                                        ; preds = %if.end24
  %32 = load %struct.rctf*, %struct.rctf** %rf, align 8, !dbg !2469
  %xmax31 = getelementptr inbounds %struct.rctf, %struct.rctf* %32, i32 0, i32 1, !dbg !2469
  %33 = load float, float* %xmax31, align 4, !dbg !2469
  %34 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !2469
  %x32 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %34, i32 0, i32 2, !dbg !2469
  %35 = load i32, i32* %x32, align 8, !dbg !2469
  %sub33 = sub nsw i32 %35, 1, !dbg !2469
  %conv34 = sitofp i32 %sub33 to float, !dbg !2469
  %cmp35 = fcmp ogt float %33, %conv34, !dbg !2469
  br i1 %cmp35, label %if.then37, label %if.end42, !dbg !2465

if.then37:                                        ; preds = %if.else30
  %36 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !2469
  %x38 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %36, i32 0, i32 2, !dbg !2469
  %37 = load i32, i32* %x38, align 8, !dbg !2469
  %sub39 = sub nsw i32 %37, 1, !dbg !2469
  %conv40 = sitofp i32 %sub39 to float, !dbg !2469
  %38 = load %struct.rctf*, %struct.rctf** %rf, align 8, !dbg !2469
  %xmax41 = getelementptr inbounds %struct.rctf, %struct.rctf* %38, i32 0, i32 1, !dbg !2469
  store float %conv40, float* %xmax41, align 4, !dbg !2469
  br label %if.end42, !dbg !2469

if.end42:                                         ; preds = %if.then37, %if.else30
  br label %if.end43

if.end43:                                         ; preds = %if.end42, %if.then28
  br label %if.end58, !dbg !2471

if.else44:                                        ; preds = %entry
  %39 = load i16, i16* %imaprepeat.addr, align 2, !dbg !2472
  %tobool45 = icmp ne i16 %39, 0, !dbg !2472
  br i1 %tobool45, label %if.then46, label %if.else50, !dbg !2474

if.then46:                                        ; preds = %if.else44
  %arraydecay47 = getelementptr inbounds [8 x %struct.rctf], [8 x %struct.rctf]* %stack, i64 0, i64 0, !dbg !2475
  %40 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !2476
  %x48 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %40, i32 0, i32 2, !dbg !2477
  %41 = load i32, i32* %x48, align 8, !dbg !2477
  %conv49 = sitofp i32 %41 to float, !dbg !2478
  call void @clipx_rctf_swap(%struct.rctf* %arraydecay47, i16* %count, float 0.000000e+00, float %conv49), !dbg !2479
  br label %if.end57, !dbg !2479

if.else50:                                        ; preds = %if.else44
  %42 = load %struct.rctf*, %struct.rctf** %rf, align 8, !dbg !2480
  %43 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !2482
  %x51 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %43, i32 0, i32 2, !dbg !2483
  %44 = load i32, i32* %x51, align 8, !dbg !2483
  %conv52 = sitofp i32 %44 to float, !dbg !2484
  %call = call float @clipx_rctf(%struct.rctf* %42, float 0.000000e+00, float %conv52), !dbg !2485
  store float %call, float* %alphaclip, align 4, !dbg !2486
  %45 = load float, float* %alphaclip, align 4, !dbg !2487
  %cmp53 = fcmp ole float %45, 0.000000e+00, !dbg !2489
  br i1 %cmp53, label %if.then55, label %if.end56, !dbg !2490

if.then55:                                        ; preds = %if.else50
  %46 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !2491
  %ta = getelementptr inbounds %struct.TexResult, %struct.TexResult* %46, i32 0, i32 4, !dbg !2493
  store float 0.000000e+00, float* %ta, align 8, !dbg !2494
  %47 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !2495
  %tg = getelementptr inbounds %struct.TexResult, %struct.TexResult* %47, i32 0, i32 2, !dbg !2496
  store float 0.000000e+00, float* %tg, align 8, !dbg !2497
  %48 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !2498
  %tb = getelementptr inbounds %struct.TexResult, %struct.TexResult* %48, i32 0, i32 3, !dbg !2499
  store float 0.000000e+00, float* %tb, align 4, !dbg !2500
  %49 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !2501
  %tr = getelementptr inbounds %struct.TexResult, %struct.TexResult* %49, i32 0, i32 1, !dbg !2502
  store float 0.000000e+00, float* %tr, align 4, !dbg !2503
  br label %if.end184, !dbg !2504

if.end56:                                         ; preds = %if.else50
  br label %if.end57

if.end57:                                         ; preds = %if.end56, %if.then46
  br label %if.end58

if.end58:                                         ; preds = %if.end57, %if.end43
  %50 = load i16, i16* %imapextend.addr, align 2, !dbg !2505
  %tobool59 = icmp ne i16 %50, 0, !dbg !2505
  br i1 %tobool59, label %if.then60, label %if.else99, !dbg !2507

if.then60:                                        ; preds = %if.end58
  %51 = load %struct.rctf*, %struct.rctf** %rf, align 8, !dbg !2508
  %ymin61 = getelementptr inbounds %struct.rctf, %struct.rctf* %51, i32 0, i32 2, !dbg !2508
  %52 = load float, float* %ymin61, align 4, !dbg !2508
  %cmp62 = fcmp olt float %52, 0.000000e+00, !dbg !2508
  br i1 %cmp62, label %if.then64, label %if.else66, !dbg !2512

if.then64:                                        ; preds = %if.then60
  %53 = load %struct.rctf*, %struct.rctf** %rf, align 8, !dbg !2508
  %ymin65 = getelementptr inbounds %struct.rctf, %struct.rctf* %53, i32 0, i32 2, !dbg !2508
  store float 0.000000e+00, float* %ymin65, align 4, !dbg !2508
  br label %if.end79, !dbg !2508

if.else66:                                        ; preds = %if.then60
  %54 = load %struct.rctf*, %struct.rctf** %rf, align 8, !dbg !2513
  %ymin67 = getelementptr inbounds %struct.rctf, %struct.rctf* %54, i32 0, i32 2, !dbg !2513
  %55 = load float, float* %ymin67, align 4, !dbg !2513
  %56 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !2513
  %y68 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %56, i32 0, i32 3, !dbg !2513
  %57 = load i32, i32* %y68, align 4, !dbg !2513
  %sub69 = sub nsw i32 %57, 1, !dbg !2513
  %conv70 = sitofp i32 %sub69 to float, !dbg !2513
  %cmp71 = fcmp ogt float %55, %conv70, !dbg !2513
  br i1 %cmp71, label %if.then73, label %if.end78, !dbg !2508

if.then73:                                        ; preds = %if.else66
  %58 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !2513
  %y74 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %58, i32 0, i32 3, !dbg !2513
  %59 = load i32, i32* %y74, align 4, !dbg !2513
  %sub75 = sub nsw i32 %59, 1, !dbg !2513
  %conv76 = sitofp i32 %sub75 to float, !dbg !2513
  %60 = load %struct.rctf*, %struct.rctf** %rf, align 8, !dbg !2513
  %ymin77 = getelementptr inbounds %struct.rctf, %struct.rctf* %60, i32 0, i32 2, !dbg !2513
  store float %conv76, float* %ymin77, align 4, !dbg !2513
  br label %if.end78, !dbg !2513

if.end78:                                         ; preds = %if.then73, %if.else66
  br label %if.end79

if.end79:                                         ; preds = %if.end78, %if.then64
  %61 = load %struct.rctf*, %struct.rctf** %rf, align 8, !dbg !2515
  %ymax80 = getelementptr inbounds %struct.rctf, %struct.rctf* %61, i32 0, i32 3, !dbg !2515
  %62 = load float, float* %ymax80, align 4, !dbg !2515
  %cmp81 = fcmp olt float %62, 0.000000e+00, !dbg !2515
  br i1 %cmp81, label %if.then83, label %if.else85, !dbg !2518

if.then83:                                        ; preds = %if.end79
  %63 = load %struct.rctf*, %struct.rctf** %rf, align 8, !dbg !2515
  %ymax84 = getelementptr inbounds %struct.rctf, %struct.rctf* %63, i32 0, i32 3, !dbg !2515
  store float 0.000000e+00, float* %ymax84, align 4, !dbg !2515
  br label %if.end98, !dbg !2515

if.else85:                                        ; preds = %if.end79
  %64 = load %struct.rctf*, %struct.rctf** %rf, align 8, !dbg !2519
  %ymax86 = getelementptr inbounds %struct.rctf, %struct.rctf* %64, i32 0, i32 3, !dbg !2519
  %65 = load float, float* %ymax86, align 4, !dbg !2519
  %66 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !2519
  %y87 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %66, i32 0, i32 3, !dbg !2519
  %67 = load i32, i32* %y87, align 4, !dbg !2519
  %sub88 = sub nsw i32 %67, 1, !dbg !2519
  %conv89 = sitofp i32 %sub88 to float, !dbg !2519
  %cmp90 = fcmp ogt float %65, %conv89, !dbg !2519
  br i1 %cmp90, label %if.then92, label %if.end97, !dbg !2515

if.then92:                                        ; preds = %if.else85
  %68 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !2519
  %y93 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %68, i32 0, i32 3, !dbg !2519
  %69 = load i32, i32* %y93, align 4, !dbg !2519
  %sub94 = sub nsw i32 %69, 1, !dbg !2519
  %conv95 = sitofp i32 %sub94 to float, !dbg !2519
  %70 = load %struct.rctf*, %struct.rctf** %rf, align 8, !dbg !2519
  %ymax96 = getelementptr inbounds %struct.rctf, %struct.rctf* %70, i32 0, i32 3, !dbg !2519
  store float %conv95, float* %ymax96, align 4, !dbg !2519
  br label %if.end97, !dbg !2519

if.end97:                                         ; preds = %if.then92, %if.else85
  br label %if.end98

if.end98:                                         ; preds = %if.end97, %if.then83
  br label %if.end119, !dbg !2521

if.else99:                                        ; preds = %if.end58
  %71 = load i16, i16* %imaprepeat.addr, align 2, !dbg !2522
  %tobool100 = icmp ne i16 %71, 0, !dbg !2522
  br i1 %tobool100, label %if.then101, label %if.else105, !dbg !2524

if.then101:                                       ; preds = %if.else99
  %arraydecay102 = getelementptr inbounds [8 x %struct.rctf], [8 x %struct.rctf]* %stack, i64 0, i64 0, !dbg !2525
  %72 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !2526
  %y103 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %72, i32 0, i32 3, !dbg !2527
  %73 = load i32, i32* %y103, align 4, !dbg !2527
  %conv104 = sitofp i32 %73 to float, !dbg !2528
  call void @clipy_rctf_swap(%struct.rctf* %arraydecay102, i16* %count, float 0.000000e+00, float %conv104), !dbg !2529
  br label %if.end118, !dbg !2529

if.else105:                                       ; preds = %if.else99
  %74 = load %struct.rctf*, %struct.rctf** %rf, align 8, !dbg !2530
  %75 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !2532
  %y106 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %75, i32 0, i32 3, !dbg !2533
  %76 = load i32, i32* %y106, align 4, !dbg !2533
  %conv107 = sitofp i32 %76 to float, !dbg !2534
  %call108 = call float @clipy_rctf(%struct.rctf* %74, float 0.000000e+00, float %conv107), !dbg !2535
  %77 = load float, float* %alphaclip, align 4, !dbg !2536
  %mul109 = fmul float %77, %call108, !dbg !2536
  store float %mul109, float* %alphaclip, align 4, !dbg !2536
  %78 = load float, float* %alphaclip, align 4, !dbg !2537
  %cmp110 = fcmp ole float %78, 0.000000e+00, !dbg !2539
  br i1 %cmp110, label %if.then112, label %if.end117, !dbg !2540

if.then112:                                       ; preds = %if.else105
  %79 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !2541
  %ta113 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %79, i32 0, i32 4, !dbg !2543
  store float 0.000000e+00, float* %ta113, align 8, !dbg !2544
  %80 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !2545
  %tg114 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %80, i32 0, i32 2, !dbg !2546
  store float 0.000000e+00, float* %tg114, align 8, !dbg !2547
  %81 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !2548
  %tb115 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %81, i32 0, i32 3, !dbg !2549
  store float 0.000000e+00, float* %tb115, align 4, !dbg !2550
  %82 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !2551
  %tr116 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %82, i32 0, i32 1, !dbg !2552
  store float 0.000000e+00, float* %tr116, align 4, !dbg !2553
  br label %if.end184, !dbg !2554

if.end117:                                        ; preds = %if.else105
  br label %if.end118

if.end118:                                        ; preds = %if.end117, %if.then101
  br label %if.end119

if.end119:                                        ; preds = %if.end118, %if.end98
  %83 = load i16, i16* %count, align 2, !dbg !2555
  %conv120 = sext i16 %83 to i32, !dbg !2555
  %cmp121 = icmp sgt i32 %conv120, 1, !dbg !2557
  br i1 %cmp121, label %if.then123, label %if.else165, !dbg !2558

if.then123:                                       ; preds = %if.end119
  %84 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !2559
  %ta124 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %84, i32 0, i32 4, !dbg !2561
  store float 0.000000e+00, float* %ta124, align 8, !dbg !2562
  %85 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !2563
  %tg125 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %85, i32 0, i32 2, !dbg !2564
  store float 0.000000e+00, float* %tg125, align 8, !dbg !2565
  %86 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !2566
  %tb126 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %86, i32 0, i32 3, !dbg !2567
  store float 0.000000e+00, float* %tb126, align 4, !dbg !2568
  %87 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !2569
  %tr127 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %87, i32 0, i32 1, !dbg !2570
  store float 0.000000e+00, float* %tr127, align 4, !dbg !2571
  store float 0.000000e+00, float* %tot, align 4, !dbg !2572
  br label %while.cond, !dbg !2573

while.cond:                                       ; preds = %if.end149, %if.then123
  %88 = load i16, i16* %count, align 2, !dbg !2574
  %dec = add i16 %88, -1, !dbg !2574
  store i16 %dec, i16* %count, align 2, !dbg !2574
  %tobool128 = icmp ne i16 %88, 0, !dbg !2573
  br i1 %tobool128, label %while.body, label %while.end, !dbg !2573

while.body:                                       ; preds = %while.cond
  %89 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !2575
  %90 = load %struct.rctf*, %struct.rctf** %rf, align 8, !dbg !2577
  call void @boxsampleclip(%struct.ImBuf* %89, %struct.rctf* %90, %struct.TexResult* %texr), !dbg !2578
  %91 = load %struct.rctf*, %struct.rctf** %rf, align 8, !dbg !2579
  %call129 = call float @square_rctf(%struct.rctf* %91), !dbg !2580
  store float %call129, float* %opp, align 4, !dbg !2581
  %92 = load float, float* %opp, align 4, !dbg !2582
  %93 = load float, float* %tot, align 4, !dbg !2583
  %add = fadd float %93, %92, !dbg !2583
  store float %add, float* %tot, align 4, !dbg !2583
  %94 = load float, float* %opp, align 4, !dbg !2584
  %tr130 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texr, i32 0, i32 1, !dbg !2585
  %95 = load float, float* %tr130, align 4, !dbg !2585
  %mul131 = fmul float %94, %95, !dbg !2586
  %96 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !2587
  %tr132 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %96, i32 0, i32 1, !dbg !2588
  %97 = load float, float* %tr132, align 4, !dbg !2589
  %add133 = fadd float %97, %mul131, !dbg !2589
  store float %add133, float* %tr132, align 4, !dbg !2589
  %98 = load float, float* %opp, align 4, !dbg !2590
  %tg134 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texr, i32 0, i32 2, !dbg !2591
  %99 = load float, float* %tg134, align 8, !dbg !2591
  %mul135 = fmul float %98, %99, !dbg !2592
  %100 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !2593
  %tg136 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %100, i32 0, i32 2, !dbg !2594
  %101 = load float, float* %tg136, align 8, !dbg !2595
  %add137 = fadd float %101, %mul135, !dbg !2595
  store float %add137, float* %tg136, align 8, !dbg !2595
  %102 = load float, float* %opp, align 4, !dbg !2596
  %tb138 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texr, i32 0, i32 3, !dbg !2597
  %103 = load float, float* %tb138, align 4, !dbg !2597
  %mul139 = fmul float %102, %103, !dbg !2598
  %104 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !2599
  %tb140 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %104, i32 0, i32 3, !dbg !2600
  %105 = load float, float* %tb140, align 4, !dbg !2601
  %add141 = fadd float %105, %mul139, !dbg !2601
  store float %add141, float* %tb140, align 4, !dbg !2601
  %106 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !2602
  %talpha142 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %106, i32 0, i32 5, !dbg !2604
  %107 = load i32, i32* %talpha142, align 4, !dbg !2604
  %tobool143 = icmp ne i32 %107, 0, !dbg !2602
  br i1 %tobool143, label %if.then144, label %if.end149, !dbg !2605

if.then144:                                       ; preds = %while.body
  %108 = load float, float* %opp, align 4, !dbg !2606
  %ta145 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texr, i32 0, i32 4, !dbg !2607
  %109 = load float, float* %ta145, align 8, !dbg !2607
  %mul146 = fmul float %108, %109, !dbg !2608
  %110 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !2609
  %ta147 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %110, i32 0, i32 4, !dbg !2610
  %111 = load float, float* %ta147, align 8, !dbg !2611
  %add148 = fadd float %111, %mul146, !dbg !2611
  store float %add148, float* %ta147, align 8, !dbg !2611
  br label %if.end149, !dbg !2609

if.end149:                                        ; preds = %if.then144, %while.body
  %112 = load %struct.rctf*, %struct.rctf** %rf, align 8, !dbg !2612
  %incdec.ptr = getelementptr inbounds %struct.rctf, %struct.rctf* %112, i32 1, !dbg !2612
  store %struct.rctf* %incdec.ptr, %struct.rctf** %rf, align 8, !dbg !2612
  br label %while.cond, !dbg !2573, !llvm.loop !2613

while.end:                                        ; preds = %while.cond
  %113 = load float, float* %tot, align 4, !dbg !2615
  %cmp150 = fcmp une float %113, 0.000000e+00, !dbg !2617
  br i1 %cmp150, label %if.then152, label %if.end164, !dbg !2618

if.then152:                                       ; preds = %while.end
  %114 = load float, float* %tot, align 4, !dbg !2619
  %115 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !2621
  %tr153 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %115, i32 0, i32 1, !dbg !2622
  %116 = load float, float* %tr153, align 4, !dbg !2623
  %div = fdiv float %116, %114, !dbg !2623
  store float %div, float* %tr153, align 4, !dbg !2623
  %117 = load float, float* %tot, align 4, !dbg !2624
  %118 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !2625
  %tg154 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %118, i32 0, i32 2, !dbg !2626
  %119 = load float, float* %tg154, align 8, !dbg !2627
  %div155 = fdiv float %119, %117, !dbg !2627
  store float %div155, float* %tg154, align 8, !dbg !2627
  %120 = load float, float* %tot, align 4, !dbg !2628
  %121 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !2629
  %tb156 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %121, i32 0, i32 3, !dbg !2630
  %122 = load float, float* %tb156, align 4, !dbg !2631
  %div157 = fdiv float %122, %120, !dbg !2631
  store float %div157, float* %tb156, align 4, !dbg !2631
  %123 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !2632
  %talpha158 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %123, i32 0, i32 5, !dbg !2634
  %124 = load i32, i32* %talpha158, align 4, !dbg !2634
  %tobool159 = icmp ne i32 %124, 0, !dbg !2632
  br i1 %tobool159, label %if.then160, label %if.end163, !dbg !2635

if.then160:                                       ; preds = %if.then152
  %125 = load float, float* %tot, align 4, !dbg !2636
  %126 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !2637
  %ta161 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %126, i32 0, i32 4, !dbg !2638
  %127 = load float, float* %ta161, align 8, !dbg !2639
  %div162 = fdiv float %127, %125, !dbg !2639
  store float %div162, float* %ta161, align 8, !dbg !2639
  br label %if.end163, !dbg !2637

if.end163:                                        ; preds = %if.then160, %if.then152
  br label %if.end164, !dbg !2640

if.end164:                                        ; preds = %if.end163, %while.end
  br label %if.end166, !dbg !2641

if.else165:                                       ; preds = %if.end119
  %128 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !2642
  %129 = load %struct.rctf*, %struct.rctf** %rf, align 8, !dbg !2643
  %130 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !2644
  call void @boxsampleclip(%struct.ImBuf* %128, %struct.rctf* %129, %struct.TexResult* %130), !dbg !2645
  br label %if.end166

if.end166:                                        ; preds = %if.else165, %if.end164
  %131 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !2646
  %talpha167 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %131, i32 0, i32 5, !dbg !2648
  %132 = load i32, i32* %talpha167, align 4, !dbg !2648
  %cmp168 = icmp eq i32 %132, 0, !dbg !2649
  br i1 %cmp168, label %if.then170, label %if.end172, !dbg !2650

if.then170:                                       ; preds = %if.end166
  %133 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !2651
  %ta171 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %133, i32 0, i32 4, !dbg !2652
  store float 1.000000e+00, float* %ta171, align 8, !dbg !2653
  br label %if.end172, !dbg !2651

if.end172:                                        ; preds = %if.then170, %if.end166
  %134 = load float, float* %alphaclip, align 4, !dbg !2654
  %cmp173 = fcmp une float %134, 1.000000e+00, !dbg !2656
  br i1 %cmp173, label %if.then175, label %if.end184, !dbg !2657

if.then175:                                       ; preds = %if.end172
  %135 = load float, float* %alphaclip, align 4, !dbg !2658
  %136 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !2660
  %tr176 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %136, i32 0, i32 1, !dbg !2661
  %137 = load float, float* %tr176, align 4, !dbg !2662
  %mul177 = fmul float %137, %135, !dbg !2662
  store float %mul177, float* %tr176, align 4, !dbg !2662
  %138 = load float, float* %alphaclip, align 4, !dbg !2663
  %139 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !2664
  %tg178 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %139, i32 0, i32 2, !dbg !2665
  %140 = load float, float* %tg178, align 8, !dbg !2666
  %mul179 = fmul float %140, %138, !dbg !2666
  store float %mul179, float* %tg178, align 8, !dbg !2666
  %141 = load float, float* %alphaclip, align 4, !dbg !2667
  %142 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !2668
  %tb180 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %142, i32 0, i32 3, !dbg !2669
  %143 = load float, float* %tb180, align 4, !dbg !2670
  %mul181 = fmul float %143, %141, !dbg !2670
  store float %mul181, float* %tb180, align 4, !dbg !2670
  %144 = load float, float* %alphaclip, align 4, !dbg !2671
  %145 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !2672
  %ta182 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %145, i32 0, i32 4, !dbg !2673
  %146 = load float, float* %ta182, align 8, !dbg !2674
  %mul183 = fmul float %146, %144, !dbg !2674
  store float %mul183, float* %ta182, align 8, !dbg !2674
  br label %if.end184, !dbg !2675

if.end184:                                        ; preds = %if.then55, %if.then112, %if.then175, %if.end172
  ret void, !dbg !2676
}

; Function Attrs: noinline nounwind uwtable
define internal void @ibuf_get_color(float* %col, %struct.ImBuf* %ibuf, i32 %x, i32 %y) #0 !dbg !2677 {
entry:
  %col.addr = alloca float*, align 8
  %ibuf.addr = alloca %struct.ImBuf*, align 8
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %ofs = alloca i32, align 4
  %fp = alloca float*, align 8
  %fp8 = alloca float*, align 8
  %fp14 = alloca float*, align 8
  %rect = alloca i8*, align 8
  store float* %col, float** %col.addr, align 8
  call void @llvm.dbg.declare(metadata float** %col.addr, metadata !2680, metadata !DIExpression()), !dbg !2681
  store %struct.ImBuf* %ibuf, %struct.ImBuf** %ibuf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf.addr, metadata !2682, metadata !DIExpression()), !dbg !2683
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !2684, metadata !DIExpression()), !dbg !2685
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !2686, metadata !DIExpression()), !dbg !2687
  call void @llvm.dbg.declare(metadata i32* %ofs, metadata !2688, metadata !DIExpression()), !dbg !2689
  %0 = load i32, i32* %y.addr, align 4, !dbg !2690
  %1 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !2691
  %x1 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %1, i32 0, i32 2, !dbg !2692
  %2 = load i32, i32* %x1, align 8, !dbg !2692
  %mul = mul nsw i32 %0, %2, !dbg !2693
  %3 = load i32, i32* %x.addr, align 4, !dbg !2694
  %add = add nsw i32 %mul, %3, !dbg !2695
  store i32 %add, i32* %ofs, align 4, !dbg !2689
  %4 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !2696
  %rect_float = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %4, i32 0, i32 9, !dbg !2698
  %5 = load float*, float** %rect_float, align 8, !dbg !2698
  %tobool = icmp ne float* %5, null, !dbg !2696
  br i1 %tobool, label %if.then, label %if.else23, !dbg !2699

if.then:                                          ; preds = %entry
  %6 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !2700
  %channels = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %6, i32 0, i32 5, !dbg !2703
  %7 = load i32, i32* %channels, align 4, !dbg !2703
  %cmp = icmp eq i32 %7, 4, !dbg !2704
  br i1 %cmp, label %if.then2, label %if.else, !dbg !2705

if.then2:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata float** %fp, metadata !2706, metadata !DIExpression()), !dbg !2708
  %8 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !2709
  %rect_float3 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %8, i32 0, i32 9, !dbg !2710
  %9 = load float*, float** %rect_float3, align 8, !dbg !2710
  %10 = load i32, i32* %ofs, align 4, !dbg !2711
  %mul4 = mul nsw i32 4, %10, !dbg !2712
  %idx.ext = sext i32 %mul4 to i64, !dbg !2713
  %add.ptr = getelementptr inbounds float, float* %9, i64 %idx.ext, !dbg !2713
  store float* %add.ptr, float** %fp, align 8, !dbg !2708
  %11 = load float*, float** %col.addr, align 8, !dbg !2714
  %12 = load float*, float** %fp, align 8, !dbg !2715
  call void @copy_v4_v4(float* %11, float* %12), !dbg !2716
  br label %if.end22, !dbg !2717

if.else:                                          ; preds = %if.then
  %13 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !2718
  %channels5 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %13, i32 0, i32 5, !dbg !2720
  %14 = load i32, i32* %channels5, align 4, !dbg !2720
  %cmp6 = icmp eq i32 %14, 3, !dbg !2721
  br i1 %cmp6, label %if.then7, label %if.else13, !dbg !2722

if.then7:                                         ; preds = %if.else
  call void @llvm.dbg.declare(metadata float** %fp8, metadata !2723, metadata !DIExpression()), !dbg !2725
  %15 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !2726
  %rect_float9 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %15, i32 0, i32 9, !dbg !2727
  %16 = load float*, float** %rect_float9, align 8, !dbg !2727
  %17 = load i32, i32* %ofs, align 4, !dbg !2728
  %mul10 = mul nsw i32 3, %17, !dbg !2729
  %idx.ext11 = sext i32 %mul10 to i64, !dbg !2730
  %add.ptr12 = getelementptr inbounds float, float* %16, i64 %idx.ext11, !dbg !2730
  store float* %add.ptr12, float** %fp8, align 8, !dbg !2725
  %18 = load float*, float** %col.addr, align 8, !dbg !2731
  %19 = load float*, float** %fp8, align 8, !dbg !2732
  call void @copy_v3_v3(float* %18, float* %19), !dbg !2733
  %20 = load float*, float** %col.addr, align 8, !dbg !2734
  %arrayidx = getelementptr inbounds float, float* %20, i64 3, !dbg !2734
  store float 1.000000e+00, float* %arrayidx, align 4, !dbg !2735
  br label %if.end, !dbg !2736

if.else13:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata float** %fp14, metadata !2737, metadata !DIExpression()), !dbg !2739
  %21 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !2740
  %rect_float15 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %21, i32 0, i32 9, !dbg !2741
  %22 = load float*, float** %rect_float15, align 8, !dbg !2741
  %23 = load i32, i32* %ofs, align 4, !dbg !2742
  %idx.ext16 = sext i32 %23 to i64, !dbg !2743
  %add.ptr17 = getelementptr inbounds float, float* %22, i64 %idx.ext16, !dbg !2743
  store float* %add.ptr17, float** %fp14, align 8, !dbg !2739
  %24 = load float*, float** %fp14, align 8, !dbg !2744
  %25 = load float, float* %24, align 4, !dbg !2745
  %26 = load float*, float** %col.addr, align 8, !dbg !2746
  %arrayidx18 = getelementptr inbounds float, float* %26, i64 3, !dbg !2746
  store float %25, float* %arrayidx18, align 4, !dbg !2747
  %27 = load float*, float** %col.addr, align 8, !dbg !2748
  %arrayidx19 = getelementptr inbounds float, float* %27, i64 2, !dbg !2748
  store float %25, float* %arrayidx19, align 4, !dbg !2749
  %28 = load float*, float** %col.addr, align 8, !dbg !2750
  %arrayidx20 = getelementptr inbounds float, float* %28, i64 1, !dbg !2750
  store float %25, float* %arrayidx20, align 4, !dbg !2751
  %29 = load float*, float** %col.addr, align 8, !dbg !2752
  %arrayidx21 = getelementptr inbounds float, float* %29, i64 0, !dbg !2752
  store float %25, float* %arrayidx21, align 4, !dbg !2753
  br label %if.end

if.end:                                           ; preds = %if.else13, %if.then7
  br label %if.end22

if.end22:                                         ; preds = %if.end, %if.then2
  br label %if.end51, !dbg !2754

if.else23:                                        ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %rect, metadata !2755, metadata !DIExpression()), !dbg !2759
  %30 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !2760
  %rect24 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %30, i32 0, i32 8, !dbg !2761
  %31 = load i32*, i32** %rect24, align 8, !dbg !2761
  %32 = load i32, i32* %ofs, align 4, !dbg !2762
  %idx.ext25 = sext i32 %32 to i64, !dbg !2763
  %add.ptr26 = getelementptr inbounds i32, i32* %31, i64 %idx.ext25, !dbg !2763
  %33 = bitcast i32* %add.ptr26 to i8*, !dbg !2764
  store i8* %33, i8** %rect, align 8, !dbg !2759
  %34 = load i8*, i8** %rect, align 8, !dbg !2765
  %arrayidx27 = getelementptr inbounds i8, i8* %34, i64 0, !dbg !2765
  %35 = load i8, i8* %arrayidx27, align 1, !dbg !2765
  %conv = uitofp i8 %35 to float, !dbg !2766
  %mul28 = fmul float %conv, 0x3F70101020000000, !dbg !2767
  %36 = load float*, float** %col.addr, align 8, !dbg !2768
  %arrayidx29 = getelementptr inbounds float, float* %36, i64 0, !dbg !2768
  store float %mul28, float* %arrayidx29, align 4, !dbg !2769
  %37 = load i8*, i8** %rect, align 8, !dbg !2770
  %arrayidx30 = getelementptr inbounds i8, i8* %37, i64 1, !dbg !2770
  %38 = load i8, i8* %arrayidx30, align 1, !dbg !2770
  %conv31 = uitofp i8 %38 to float, !dbg !2771
  %mul32 = fmul float %conv31, 0x3F70101020000000, !dbg !2772
  %39 = load float*, float** %col.addr, align 8, !dbg !2773
  %arrayidx33 = getelementptr inbounds float, float* %39, i64 1, !dbg !2773
  store float %mul32, float* %arrayidx33, align 4, !dbg !2774
  %40 = load i8*, i8** %rect, align 8, !dbg !2775
  %arrayidx34 = getelementptr inbounds i8, i8* %40, i64 2, !dbg !2775
  %41 = load i8, i8* %arrayidx34, align 1, !dbg !2775
  %conv35 = uitofp i8 %41 to float, !dbg !2776
  %mul36 = fmul float %conv35, 0x3F70101020000000, !dbg !2777
  %42 = load float*, float** %col.addr, align 8, !dbg !2778
  %arrayidx37 = getelementptr inbounds float, float* %42, i64 2, !dbg !2778
  store float %mul36, float* %arrayidx37, align 4, !dbg !2779
  %43 = load i8*, i8** %rect, align 8, !dbg !2780
  %arrayidx38 = getelementptr inbounds i8, i8* %43, i64 3, !dbg !2780
  %44 = load i8, i8* %arrayidx38, align 1, !dbg !2780
  %conv39 = uitofp i8 %44 to float, !dbg !2781
  %mul40 = fmul float %conv39, 0x3F70101020000000, !dbg !2782
  %45 = load float*, float** %col.addr, align 8, !dbg !2783
  %arrayidx41 = getelementptr inbounds float, float* %45, i64 3, !dbg !2783
  store float %mul40, float* %arrayidx41, align 4, !dbg !2784
  %46 = load float*, float** %col.addr, align 8, !dbg !2785
  %arrayidx42 = getelementptr inbounds float, float* %46, i64 3, !dbg !2785
  %47 = load float, float* %arrayidx42, align 4, !dbg !2785
  %48 = load float*, float** %col.addr, align 8, !dbg !2786
  %arrayidx43 = getelementptr inbounds float, float* %48, i64 0, !dbg !2786
  %49 = load float, float* %arrayidx43, align 4, !dbg !2787
  %mul44 = fmul float %49, %47, !dbg !2787
  store float %mul44, float* %arrayidx43, align 4, !dbg !2787
  %50 = load float*, float** %col.addr, align 8, !dbg !2788
  %arrayidx45 = getelementptr inbounds float, float* %50, i64 3, !dbg !2788
  %51 = load float, float* %arrayidx45, align 4, !dbg !2788
  %52 = load float*, float** %col.addr, align 8, !dbg !2789
  %arrayidx46 = getelementptr inbounds float, float* %52, i64 1, !dbg !2789
  %53 = load float, float* %arrayidx46, align 4, !dbg !2790
  %mul47 = fmul float %53, %51, !dbg !2790
  store float %mul47, float* %arrayidx46, align 4, !dbg !2790
  %54 = load float*, float** %col.addr, align 8, !dbg !2791
  %arrayidx48 = getelementptr inbounds float, float* %54, i64 3, !dbg !2791
  %55 = load float, float* %arrayidx48, align 4, !dbg !2791
  %56 = load float*, float** %col.addr, align 8, !dbg !2792
  %arrayidx49 = getelementptr inbounds float, float* %56, i64 2, !dbg !2792
  %57 = load float, float* %arrayidx49, align 4, !dbg !2793
  %mul50 = fmul float %57, %55, !dbg !2793
  store float %mul50, float* %arrayidx49, align 4, !dbg !2793
  br label %if.end51

if.end51:                                         ; preds = %if.else23, %if.end22
  ret void, !dbg !2794
}

; Function Attrs: noinline nounwind uwtable
define internal float @max_fff(float %a, float %b, float %c) #0 !dbg !2795 {
entry:
  %a.addr = alloca float, align 4
  %b.addr = alloca float, align 4
  %c.addr = alloca float, align 4
  store float %a, float* %a.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a.addr, metadata !2799, metadata !DIExpression()), !dbg !2800
  store float %b, float* %b.addr, align 4
  call void @llvm.dbg.declare(metadata float* %b.addr, metadata !2801, metadata !DIExpression()), !dbg !2802
  store float %c, float* %c.addr, align 4
  call void @llvm.dbg.declare(metadata float* %c.addr, metadata !2803, metadata !DIExpression()), !dbg !2804
  %0 = load float, float* %a.addr, align 4, !dbg !2805
  %1 = load float, float* %b.addr, align 4, !dbg !2806
  %call = call float @max_ff(float %0, float %1), !dbg !2807
  %2 = load float, float* %c.addr, align 4, !dbg !2808
  %call1 = call float @max_ff(float %call, float %2), !dbg !2809
  ret float %call1, !dbg !2810
}

declare dso_local void @rgb_to_hsv(float, float, float, float*, float*, float*) #2

declare dso_local void @hsv_to_rgb(float, float, float, float*, float*, float*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @imagewraposa(%struct.Tex* %tex, %struct.Image* %ima, %struct.ImBuf* %ibuf, float* %texvec, float* %DXT, float* %DYT, %struct.TexResult* %texres, %struct.ImagePool* %pool) #0 !dbg !2811 {
entry:
  %retval = alloca i32, align 4
  %tex.addr = alloca %struct.Tex*, align 8
  %ima.addr = alloca %struct.Image*, align 8
  %ibuf.addr = alloca %struct.ImBuf*, align 8
  %texvec.addr = alloca float*, align 8
  %DXT.addr = alloca float*, align 8
  %DYT.addr = alloca float*, align 8
  %texres.addr = alloca %struct.TexResult*, align 8
  %pool.addr = alloca %struct.ImagePool*, align 8
  %texr = alloca %struct.TexResult, align 8
  %fx = alloca float, align 4
  %fy = alloca float, align 4
  %minx = alloca float, align 4
  %maxx = alloca float, align 4
  %miny = alloca float, align 4
  %maxy = alloca float, align 4
  %dx = alloca float, align 4
  %dy = alloca float, align 4
  %dxt = alloca [2 x float], align 4
  %dyt = alloca [2 x float], align 4
  %maxd = alloca float, align 4
  %pixsize = alloca float, align 4
  %val1 = alloca float, align 4
  %val2 = alloca float, align 4
  %val3 = alloca float, align 4
  %curmap = alloca i32, align 4
  %retval1 = alloca i32, align 4
  %imaprepeat = alloca i32, align 4
  %imapextend = alloca i32, align 4
  %addval = alloca float, align 4
  %sw_ap = alloca float, align 4
  %xs = alloca i32, align 4
  %ys = alloca i32, align 4
  %xs1 = alloca i32, align 4
  %ys1 = alloca i32, align 4
  %xs2 = alloca i32, align 4
  %ys2 = alloca i32, align 4
  %boundary = alloca i32, align 4
  %previbuf = alloca %struct.ImBuf*, align 8
  %curibuf = alloca %struct.ImBuf*, align 8
  %bumpscale = alloca float, align 4
  %intpol = alloca i32, align 4
  %_hsv = alloca [3 x float], align 4
  store %struct.Tex* %tex, %struct.Tex** %tex.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Tex** %tex.addr, metadata !2814, metadata !DIExpression()), !dbg !2815
  store %struct.Image* %ima, %struct.Image** %ima.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Image** %ima.addr, metadata !2816, metadata !DIExpression()), !dbg !2817
  store %struct.ImBuf* %ibuf, %struct.ImBuf** %ibuf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf.addr, metadata !2818, metadata !DIExpression()), !dbg !2819
  store float* %texvec, float** %texvec.addr, align 8
  call void @llvm.dbg.declare(metadata float** %texvec.addr, metadata !2820, metadata !DIExpression()), !dbg !2821
  store float* %DXT, float** %DXT.addr, align 8
  call void @llvm.dbg.declare(metadata float** %DXT.addr, metadata !2822, metadata !DIExpression()), !dbg !2823
  store float* %DYT, float** %DYT.addr, align 8
  call void @llvm.dbg.declare(metadata float** %DYT.addr, metadata !2824, metadata !DIExpression()), !dbg !2825
  store %struct.TexResult* %texres, %struct.TexResult** %texres.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TexResult** %texres.addr, metadata !2826, metadata !DIExpression()), !dbg !2827
  store %struct.ImagePool* %pool, %struct.ImagePool** %pool.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImagePool** %pool.addr, metadata !2828, metadata !DIExpression()), !dbg !2829
  call void @llvm.dbg.declare(metadata %struct.TexResult* %texr, metadata !2830, metadata !DIExpression()), !dbg !2831
  call void @llvm.dbg.declare(metadata float* %fx, metadata !2832, metadata !DIExpression()), !dbg !2833
  call void @llvm.dbg.declare(metadata float* %fy, metadata !2834, metadata !DIExpression()), !dbg !2835
  call void @llvm.dbg.declare(metadata float* %minx, metadata !2836, metadata !DIExpression()), !dbg !2837
  call void @llvm.dbg.declare(metadata float* %maxx, metadata !2838, metadata !DIExpression()), !dbg !2839
  call void @llvm.dbg.declare(metadata float* %miny, metadata !2840, metadata !DIExpression()), !dbg !2841
  call void @llvm.dbg.declare(metadata float* %maxy, metadata !2842, metadata !DIExpression()), !dbg !2843
  call void @llvm.dbg.declare(metadata float* %dx, metadata !2844, metadata !DIExpression()), !dbg !2845
  call void @llvm.dbg.declare(metadata float* %dy, metadata !2846, metadata !DIExpression()), !dbg !2847
  call void @llvm.dbg.declare(metadata [2 x float]* %dxt, metadata !2848, metadata !DIExpression()), !dbg !2849
  call void @llvm.dbg.declare(metadata [2 x float]* %dyt, metadata !2850, metadata !DIExpression()), !dbg !2851
  call void @llvm.dbg.declare(metadata float* %maxd, metadata !2852, metadata !DIExpression()), !dbg !2853
  call void @llvm.dbg.declare(metadata float* %pixsize, metadata !2854, metadata !DIExpression()), !dbg !2855
  call void @llvm.dbg.declare(metadata float* %val1, metadata !2856, metadata !DIExpression()), !dbg !2857
  call void @llvm.dbg.declare(metadata float* %val2, metadata !2858, metadata !DIExpression()), !dbg !2859
  call void @llvm.dbg.declare(metadata float* %val3, metadata !2860, metadata !DIExpression()), !dbg !2861
  call void @llvm.dbg.declare(metadata i32* %curmap, metadata !2862, metadata !DIExpression()), !dbg !2863
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !2864, metadata !DIExpression()), !dbg !2865
  call void @llvm.dbg.declare(metadata i32* %imaprepeat, metadata !2866, metadata !DIExpression()), !dbg !2867
  call void @llvm.dbg.declare(metadata i32* %imapextend, metadata !2868, metadata !DIExpression()), !dbg !2869
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %dxt, i64 0, i64 0, !dbg !2870
  %0 = load float*, float** %DXT.addr, align 8, !dbg !2871
  call void @copy_v2_v2(float* %arraydecay, float* %0), !dbg !2872
  %arraydecay2 = getelementptr inbounds [2 x float], [2 x float]* %dyt, i64 0, i64 0, !dbg !2873
  %1 = load float*, float** %DYT.addr, align 8, !dbg !2874
  call void @copy_v2_v2(float* %arraydecay2, float* %1), !dbg !2875
  %2 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !2876
  %texfilter = getelementptr inbounds %struct.Tex, %struct.Tex* %2, i32 0, i32 38, !dbg !2878
  %3 = load i32, i32* %texfilter, align 4, !dbg !2878
  %cmp = icmp ne i32 %3, 0, !dbg !2879
  br i1 %cmp, label %if.then, label %if.end, !dbg !2880

if.then:                                          ; preds = %entry
  %4 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !2881
  %5 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !2882
  %6 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !2883
  %7 = load float*, float** %texvec.addr, align 8, !dbg !2884
  %arraydecay3 = getelementptr inbounds [2 x float], [2 x float]* %dxt, i64 0, i64 0, !dbg !2885
  %arraydecay4 = getelementptr inbounds [2 x float], [2 x float]* %dyt, i64 0, i64 0, !dbg !2886
  %8 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !2887
  %9 = load %struct.ImagePool*, %struct.ImagePool** %pool.addr, align 8, !dbg !2888
  %call = call i32 @imagewraposa_aniso(%struct.Tex* %4, %struct.Image* %5, %struct.ImBuf* %6, float* %7, float* %arraydecay3, float* %arraydecay4, %struct.TexResult* %8, %struct.ImagePool* %9), !dbg !2889
  store i32 %call, i32* %retval, align 4, !dbg !2890
  br label %return, !dbg !2890

if.end:                                           ; preds = %entry
  %10 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !2891
  %tb = getelementptr inbounds %struct.TexResult, %struct.TexResult* %10, i32 0, i32 3, !dbg !2892
  store float 0.000000e+00, float* %tb, align 4, !dbg !2893
  %11 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !2894
  %tg = getelementptr inbounds %struct.TexResult, %struct.TexResult* %11, i32 0, i32 2, !dbg !2895
  store float 0.000000e+00, float* %tg, align 8, !dbg !2896
  %12 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !2897
  %tr = getelementptr inbounds %struct.TexResult, %struct.TexResult* %12, i32 0, i32 1, !dbg !2898
  store float 0.000000e+00, float* %tr, align 4, !dbg !2899
  %13 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !2900
  %ta = getelementptr inbounds %struct.TexResult, %struct.TexResult* %13, i32 0, i32 4, !dbg !2901
  store float 0.000000e+00, float* %ta, align 8, !dbg !2902
  %14 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !2903
  %tin = getelementptr inbounds %struct.TexResult, %struct.TexResult* %14, i32 0, i32 0, !dbg !2904
  store float 0.000000e+00, float* %tin, align 8, !dbg !2905
  %15 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !2906
  %nor = getelementptr inbounds %struct.TexResult, %struct.TexResult* %15, i32 0, i32 6, !dbg !2907
  %16 = load float*, float** %nor, align 8, !dbg !2907
  %tobool = icmp ne float* %16, null, !dbg !2906
  %17 = zext i1 %tobool to i64, !dbg !2906
  %cond = select i1 %tobool, i32 3, i32 1, !dbg !2906
  store i32 %cond, i32* %retval1, align 4, !dbg !2908
  %18 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !2909
  %cmp5 = icmp eq %struct.ImBuf* %18, null, !dbg !2911
  br i1 %cmp5, label %land.lhs.true, label %if.end8, !dbg !2912

land.lhs.true:                                    ; preds = %if.end
  %19 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !2913
  %cmp6 = icmp eq %struct.Image* %19, null, !dbg !2914
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !2915

if.then7:                                         ; preds = %land.lhs.true
  %20 = load i32, i32* %retval1, align 4, !dbg !2916
  store i32 %20, i32* %retval, align 4, !dbg !2917
  br label %return, !dbg !2917

if.end8:                                          ; preds = %land.lhs.true, %if.end
  %21 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !2918
  %tobool9 = icmp ne %struct.Image* %21, null, !dbg !2918
  br i1 %tobool9, label %if.then10, label %if.end19, !dbg !2920

if.then10:                                        ; preds = %if.end8
  %22 = load i32, i32* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 45, i32 46), align 4, !dbg !2921
  %and = and i32 %22, 4096, !dbg !2924
  %tobool11 = icmp ne i32 %and, 0, !dbg !2924
  br i1 %tobool11, label %land.lhs.true12, label %if.end16, !dbg !2925

land.lhs.true12:                                  ; preds = %if.then10
  %23 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !2926
  %call13 = call zeroext i8 @BKE_image_has_loaded_ibuf(%struct.Image* %23), !dbg !2927
  %tobool14 = icmp ne i8 %call13, 0, !dbg !2927
  br i1 %tobool14, label %if.end16, label %if.then15, !dbg !2928

if.then15:                                        ; preds = %land.lhs.true12
  %24 = load i32, i32* %retval1, align 4, !dbg !2929
  store i32 %24, i32* %retval, align 4, !dbg !2930
  br label %return, !dbg !2930

if.end16:                                         ; preds = %land.lhs.true12, %if.then10
  %25 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !2931
  %26 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !2932
  %iuser = getelementptr inbounds %struct.Tex, %struct.Tex* %26, i32 0, i32 51, !dbg !2933
  %27 = load %struct.ImagePool*, %struct.ImagePool** %pool.addr, align 8, !dbg !2934
  %call17 = call %struct.ImBuf* @BKE_image_pool_acquire_ibuf(%struct.Image* %25, %struct.ImageUser* %iuser, %struct.ImagePool* %27), !dbg !2935
  store %struct.ImBuf* %call17, %struct.ImBuf** %ibuf.addr, align 8, !dbg !2936
  %28 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !2937
  %flag = getelementptr inbounds %struct.Image, %struct.Image* %28, i32 0, i32 10, !dbg !2938
  %29 = load i16, i16* %flag, align 2, !dbg !2939
  %conv = sext i16 %29 to i32, !dbg !2939
  %or = or i32 %conv, 512, !dbg !2939
  %conv18 = trunc i32 %or to i16, !dbg !2939
  store i16 %conv18, i16* %flag, align 2, !dbg !2939
  br label %if.end19, !dbg !2940

if.end19:                                         ; preds = %if.end16, %if.end8
  %30 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !2941
  %cmp20 = icmp eq %struct.ImBuf* %30, null, !dbg !2943
  br i1 %cmp20, label %if.then27, label %lor.lhs.false, !dbg !2944

lor.lhs.false:                                    ; preds = %if.end19
  %31 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !2945
  %rect = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %31, i32 0, i32 8, !dbg !2946
  %32 = load i32*, i32** %rect, align 8, !dbg !2946
  %cmp22 = icmp eq i32* %32, null, !dbg !2947
  br i1 %cmp22, label %land.lhs.true24, label %if.end31, !dbg !2948

land.lhs.true24:                                  ; preds = %lor.lhs.false
  %33 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !2949
  %rect_float = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %33, i32 0, i32 9, !dbg !2950
  %34 = load float*, float** %rect_float, align 8, !dbg !2950
  %cmp25 = icmp eq float* %34, null, !dbg !2951
  br i1 %cmp25, label %if.then27, label %if.end31, !dbg !2952

if.then27:                                        ; preds = %land.lhs.true24, %if.end19
  %35 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !2953
  %tobool28 = icmp ne %struct.Image* %35, null, !dbg !2953
  br i1 %tobool28, label %if.then29, label %if.end30, !dbg !2956

if.then29:                                        ; preds = %if.then27
  %36 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !2957
  %37 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !2958
  %38 = load %struct.ImagePool*, %struct.ImagePool** %pool.addr, align 8, !dbg !2959
  call void @BKE_image_pool_release_ibuf(%struct.Image* %36, %struct.ImBuf* %37, %struct.ImagePool* %38), !dbg !2960
  br label %if.end30, !dbg !2960

if.end30:                                         ; preds = %if.then29, %if.then27
  %39 = load i32, i32* %retval1, align 4, !dbg !2961
  store i32 %39, i32* %retval, align 4, !dbg !2962
  br label %return, !dbg !2962

if.end31:                                         ; preds = %land.lhs.true24, %lor.lhs.false
  %40 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !2963
  %41 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !2964
  call void @image_mipmap_test(%struct.Tex* %40, %struct.ImBuf* %41), !dbg !2965
  %42 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !2966
  %tobool32 = icmp ne %struct.Image* %42, null, !dbg !2966
  br i1 %tobool32, label %if.then33, label %if.end52, !dbg !2968

if.then33:                                        ; preds = %if.end31
  %43 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !2969
  %imaflag = getelementptr inbounds %struct.Tex, %struct.Tex* %43, i32 0, i32 30, !dbg !2972
  %44 = load i16, i16* %imaflag, align 4, !dbg !2972
  %conv34 = sext i16 %44 to i32, !dbg !2969
  %and35 = and i32 %conv34, 2, !dbg !2973
  %tobool36 = icmp ne i32 %and35, 0, !dbg !2973
  br i1 %tobool36, label %land.lhs.true37, label %if.end51, !dbg !2974

land.lhs.true37:                                  ; preds = %if.then33
  %45 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !2975
  %flag38 = getelementptr inbounds %struct.Image, %struct.Image* %45, i32 0, i32 10, !dbg !2976
  %46 = load i16, i16* %flag38, align 2, !dbg !2976
  %conv39 = sext i16 %46 to i32, !dbg !2975
  %and40 = and i32 %conv39, 4096, !dbg !2977
  %cmp41 = icmp eq i32 %and40, 0, !dbg !2978
  br i1 %cmp41, label %if.then43, label %if.end51, !dbg !2979

if.then43:                                        ; preds = %land.lhs.true37
  %47 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !2980
  %imaflag44 = getelementptr inbounds %struct.Tex, %struct.Tex* %47, i32 0, i32 30, !dbg !2983
  %48 = load i16, i16* %imaflag44, align 4, !dbg !2983
  %conv45 = sext i16 %48 to i32, !dbg !2980
  %and46 = and i32 %conv45, 32, !dbg !2984
  %cmp47 = icmp eq i32 %and46, 0, !dbg !2985
  br i1 %cmp47, label %if.then49, label %if.end50, !dbg !2986

if.then49:                                        ; preds = %if.then43
  %49 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !2987
  %talpha = getelementptr inbounds %struct.TexResult, %struct.TexResult* %49, i32 0, i32 5, !dbg !2989
  store i32 1, i32* %talpha, align 4, !dbg !2990
  br label %if.end50, !dbg !2991

if.end50:                                         ; preds = %if.then49, %if.then43
  br label %if.end51, !dbg !2992

if.end51:                                         ; preds = %if.end50, %land.lhs.true37, %if.then33
  br label %if.end52, !dbg !2993

if.end52:                                         ; preds = %if.end51, %if.end31
  %50 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !2994
  %talpha53 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %50, i32 0, i32 5, !dbg !2995
  %51 = load i32, i32* %talpha53, align 4, !dbg !2995
  %talpha54 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texr, i32 0, i32 5, !dbg !2996
  store i32 %51, i32* %talpha54, align 4, !dbg !2997
  %52 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !2998
  %imaflag55 = getelementptr inbounds %struct.Tex, %struct.Tex* %52, i32 0, i32 30, !dbg !3000
  %53 = load i16, i16* %imaflag55, align 4, !dbg !3000
  %conv56 = sext i16 %53 to i32, !dbg !2998
  %and57 = and i32 %conv56, 16, !dbg !3001
  %tobool58 = icmp ne i32 %and57, 0, !dbg !3001
  br i1 %tobool58, label %if.then59, label %if.else, !dbg !3002

if.then59:                                        ; preds = %if.end52
  %54 = load float*, float** %texvec.addr, align 8, !dbg !3003
  %arrayidx = getelementptr inbounds float, float* %54, i64 0, !dbg !3003
  %55 = load float, float* %arrayidx, align 4, !dbg !3003
  store float %55, float* %fy, align 4, !dbg !3005
  %56 = load float*, float** %texvec.addr, align 8, !dbg !3006
  %arrayidx60 = getelementptr inbounds float, float* %56, i64 1, !dbg !3006
  %57 = load float, float* %arrayidx60, align 4, !dbg !3006
  store float %57, float* %fx, align 4, !dbg !3007
  br label %if.end63, !dbg !3008

if.else:                                          ; preds = %if.end52
  %58 = load float*, float** %texvec.addr, align 8, !dbg !3009
  %arrayidx61 = getelementptr inbounds float, float* %58, i64 0, !dbg !3009
  %59 = load float, float* %arrayidx61, align 4, !dbg !3009
  store float %59, float* %fx, align 4, !dbg !3011
  %60 = load float*, float** %texvec.addr, align 8, !dbg !3012
  %arrayidx62 = getelementptr inbounds float, float* %60, i64 1, !dbg !3012
  %61 = load float, float* %arrayidx62, align 4, !dbg !3012
  store float %61, float* %fy, align 4, !dbg !3013
  br label %if.end63

if.end63:                                         ; preds = %if.else, %if.then59
  %62 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !3014
  %flags = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %62, i32 0, i32 6, !dbg !3016
  %63 = load i32, i32* %flags, align 8, !dbg !3016
  %and64 = and i32 %63, 4, !dbg !3017
  %tobool65 = icmp ne i32 %and64, 0, !dbg !3017
  br i1 %tobool65, label %if.then66, label %if.end78, !dbg !3018

if.then66:                                        ; preds = %if.end63
  %64 = load i32, i32* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 45, i32 47), align 8, !dbg !3019
  %and67 = and i32 %64, 64, !dbg !3022
  %tobool68 = icmp ne i32 %and67, 0, !dbg !3022
  br i1 %tobool68, label %if.then69, label %if.end77, !dbg !3023

if.then69:                                        ; preds = %if.then66
  %65 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 4), align 8, !dbg !3024
  %conv70 = sext i16 %65 to i32, !dbg !3027
  %and71 = and i32 %conv70, 4, !dbg !3028
  %tobool72 = icmp ne i32 %and71, 0, !dbg !3028
  br i1 %tobool72, label %if.then73, label %if.else74, !dbg !3029

if.then73:                                        ; preds = %if.then69
  br label %if.end76, !dbg !3030

if.else74:                                        ; preds = %if.then69
  %66 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !3032
  %y = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %66, i32 0, i32 3, !dbg !3034
  %67 = load i32, i32* %y, align 4, !dbg !3034
  %conv75 = sitofp i32 %67 to float, !dbg !3035
  %div = fdiv float 5.000000e-01, %conv75, !dbg !3036
  %68 = load float, float* %fy, align 4, !dbg !3037
  %add = fadd float %68, %div, !dbg !3037
  store float %add, float* %fy, align 4, !dbg !3037
  br label %if.end76

if.end76:                                         ; preds = %if.else74, %if.then73
  br label %if.end77, !dbg !3038

if.end77:                                         ; preds = %if.end76, %if.then66
  br label %if.end78, !dbg !3039

if.end78:                                         ; preds = %if.end77, %if.end63
  %arrayidx79 = getelementptr inbounds [2 x float], [2 x float]* %dxt, i64 0, i64 0, !dbg !3040
  %69 = load float, float* %arrayidx79, align 4, !dbg !3040
  %arrayidx80 = getelementptr inbounds [2 x float], [2 x float]* %dyt, i64 0, i64 0, !dbg !3041
  %70 = load float, float* %arrayidx80, align 4, !dbg !3041
  %arrayidx81 = getelementptr inbounds [2 x float], [2 x float]* %dxt, i64 0, i64 0, !dbg !3042
  %71 = load float, float* %arrayidx81, align 4, !dbg !3042
  %arrayidx82 = getelementptr inbounds [2 x float], [2 x float]* %dyt, i64 0, i64 0, !dbg !3043
  %72 = load float, float* %arrayidx82, align 4, !dbg !3043
  %add83 = fadd float %71, %72, !dbg !3044
  %call84 = call float @min_fff(float %69, float %70, float %add83), !dbg !3045
  store float %call84, float* %minx, align 4, !dbg !3046
  %arrayidx85 = getelementptr inbounds [2 x float], [2 x float]* %dxt, i64 0, i64 0, !dbg !3047
  %73 = load float, float* %arrayidx85, align 4, !dbg !3047
  %arrayidx86 = getelementptr inbounds [2 x float], [2 x float]* %dyt, i64 0, i64 0, !dbg !3048
  %74 = load float, float* %arrayidx86, align 4, !dbg !3048
  %arrayidx87 = getelementptr inbounds [2 x float], [2 x float]* %dxt, i64 0, i64 0, !dbg !3049
  %75 = load float, float* %arrayidx87, align 4, !dbg !3049
  %arrayidx88 = getelementptr inbounds [2 x float], [2 x float]* %dyt, i64 0, i64 0, !dbg !3050
  %76 = load float, float* %arrayidx88, align 4, !dbg !3050
  %add89 = fadd float %75, %76, !dbg !3051
  %call90 = call float @max_fff(float %73, float %74, float %add89), !dbg !3052
  store float %call90, float* %maxx, align 4, !dbg !3053
  %arrayidx91 = getelementptr inbounds [2 x float], [2 x float]* %dxt, i64 0, i64 1, !dbg !3054
  %77 = load float, float* %arrayidx91, align 4, !dbg !3054
  %arrayidx92 = getelementptr inbounds [2 x float], [2 x float]* %dyt, i64 0, i64 1, !dbg !3055
  %78 = load float, float* %arrayidx92, align 4, !dbg !3055
  %arrayidx93 = getelementptr inbounds [2 x float], [2 x float]* %dxt, i64 0, i64 1, !dbg !3056
  %79 = load float, float* %arrayidx93, align 4, !dbg !3056
  %arrayidx94 = getelementptr inbounds [2 x float], [2 x float]* %dyt, i64 0, i64 1, !dbg !3057
  %80 = load float, float* %arrayidx94, align 4, !dbg !3057
  %add95 = fadd float %79, %80, !dbg !3058
  %call96 = call float @min_fff(float %77, float %78, float %add95), !dbg !3059
  store float %call96, float* %miny, align 4, !dbg !3060
  %arrayidx97 = getelementptr inbounds [2 x float], [2 x float]* %dxt, i64 0, i64 1, !dbg !3061
  %81 = load float, float* %arrayidx97, align 4, !dbg !3061
  %arrayidx98 = getelementptr inbounds [2 x float], [2 x float]* %dyt, i64 0, i64 1, !dbg !3062
  %82 = load float, float* %arrayidx98, align 4, !dbg !3062
  %arrayidx99 = getelementptr inbounds [2 x float], [2 x float]* %dxt, i64 0, i64 1, !dbg !3063
  %83 = load float, float* %arrayidx99, align 4, !dbg !3063
  %arrayidx100 = getelementptr inbounds [2 x float], [2 x float]* %dyt, i64 0, i64 1, !dbg !3064
  %84 = load float, float* %arrayidx100, align 4, !dbg !3064
  %add101 = fadd float %83, %84, !dbg !3065
  %call102 = call float @max_fff(float %81, float %82, float %add101), !dbg !3066
  store float %call102, float* %maxy, align 4, !dbg !3067
  %85 = load float, float* %maxx, align 4, !dbg !3068
  %86 = load float, float* %minx, align 4, !dbg !3069
  %sub = fsub float %85, %86, !dbg !3070
  %div103 = fdiv float %sub, 2.000000e+00, !dbg !3071
  store float %div103, float* %minx, align 4, !dbg !3072
  %87 = load float, float* %maxy, align 4, !dbg !3073
  %88 = load float, float* %miny, align 4, !dbg !3074
  %sub104 = fsub float %87, %88, !dbg !3075
  %div105 = fdiv float %sub104, 2.000000e+00, !dbg !3076
  store float %div105, float* %miny, align 4, !dbg !3077
  %89 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !3078
  %imaflag106 = getelementptr inbounds %struct.Tex, %struct.Tex* %89, i32 0, i32 30, !dbg !3080
  %90 = load i16, i16* %imaflag106, align 4, !dbg !3080
  %conv107 = sext i16 %90 to i32, !dbg !3078
  %and108 = and i32 %conv107, 8192, !dbg !3081
  %tobool109 = icmp ne i32 %and108, 0, !dbg !3081
  br i1 %tobool109, label %if.then110, label %if.else127, !dbg !3082

if.then110:                                       ; preds = %if.end78
  call void @llvm.dbg.declare(metadata float* %addval, metadata !3083, metadata !DIExpression()), !dbg !3085
  %91 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !3086
  %filtersize = getelementptr inbounds %struct.Tex, %struct.Tex* %91, i32 0, i32 10, !dbg !3087
  %92 = load float, float* %filtersize, align 8, !dbg !3087
  %mul = fmul float 5.000000e-01, %92, !dbg !3088
  %93 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !3089
  %x = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %93, i32 0, i32 2, !dbg !3089
  %94 = load i32, i32* %x, align 8, !dbg !3089
  %95 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !3089
  %y111 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %95, i32 0, i32 3, !dbg !3089
  %96 = load i32, i32* %y111, align 4, !dbg !3089
  %cmp112 = icmp slt i32 %94, %96, !dbg !3089
  br i1 %cmp112, label %cond.true, label %cond.false, !dbg !3089

cond.true:                                        ; preds = %if.then110
  %97 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !3089
  %x114 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %97, i32 0, i32 2, !dbg !3089
  %98 = load i32, i32* %x114, align 8, !dbg !3089
  br label %cond.end, !dbg !3089

cond.false:                                       ; preds = %if.then110
  %99 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !3089
  %y115 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %99, i32 0, i32 3, !dbg !3089
  %100 = load i32, i32* %y115, align 4, !dbg !3089
  br label %cond.end, !dbg !3089

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond116 = phi i32 [ %98, %cond.true ], [ %100, %cond.false ], !dbg !3089
  %conv117 = sitofp i32 %cond116 to float, !dbg !3090
  %div118 = fdiv float %mul, %conv117, !dbg !3091
  store float %div118, float* %addval, align 4, !dbg !3085
  %101 = load float, float* %addval, align 4, !dbg !3092
  %102 = load float, float* %minx, align 4, !dbg !3094
  %cmp119 = fcmp ogt float %101, %102, !dbg !3095
  br i1 %cmp119, label %if.then121, label %if.end122, !dbg !3096

if.then121:                                       ; preds = %cond.end
  %103 = load float, float* %addval, align 4, !dbg !3097
  store float %103, float* %minx, align 4, !dbg !3098
  br label %if.end122, !dbg !3099

if.end122:                                        ; preds = %if.then121, %cond.end
  %104 = load float, float* %addval, align 4, !dbg !3100
  %105 = load float, float* %miny, align 4, !dbg !3102
  %cmp123 = fcmp ogt float %104, %105, !dbg !3103
  br i1 %cmp123, label %if.then125, label %if.end126, !dbg !3104

if.then125:                                       ; preds = %if.end122
  %106 = load float, float* %addval, align 4, !dbg !3105
  store float %106, float* %miny, align 4, !dbg !3106
  br label %if.end126, !dbg !3107

if.end126:                                        ; preds = %if.then125, %if.end122
  br label %if.end149, !dbg !3108

if.else127:                                       ; preds = %if.end78
  %107 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !3109
  %filtersize128 = getelementptr inbounds %struct.Tex, %struct.Tex* %107, i32 0, i32 10, !dbg !3111
  %108 = load float, float* %filtersize128, align 8, !dbg !3111
  %cmp129 = fcmp une float %108, 1.000000e+00, !dbg !3112
  br i1 %cmp129, label %if.then131, label %if.end148, !dbg !3113

if.then131:                                       ; preds = %if.else127
  %109 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !3114
  %filtersize132 = getelementptr inbounds %struct.Tex, %struct.Tex* %109, i32 0, i32 10, !dbg !3116
  %110 = load float, float* %filtersize132, align 8, !dbg !3116
  %111 = load float, float* %minx, align 4, !dbg !3117
  %mul133 = fmul float %111, %110, !dbg !3117
  store float %mul133, float* %minx, align 4, !dbg !3117
  %112 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !3118
  %filtersize134 = getelementptr inbounds %struct.Tex, %struct.Tex* %112, i32 0, i32 10, !dbg !3119
  %113 = load float, float* %filtersize134, align 8, !dbg !3119
  %114 = load float, float* %miny, align 4, !dbg !3120
  %mul135 = fmul float %114, %113, !dbg !3120
  store float %mul135, float* %miny, align 4, !dbg !3120
  %115 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !3121
  %filtersize136 = getelementptr inbounds %struct.Tex, %struct.Tex* %115, i32 0, i32 10, !dbg !3122
  %116 = load float, float* %filtersize136, align 8, !dbg !3122
  %arrayidx137 = getelementptr inbounds [2 x float], [2 x float]* %dxt, i64 0, i64 0, !dbg !3123
  %117 = load float, float* %arrayidx137, align 4, !dbg !3124
  %mul138 = fmul float %117, %116, !dbg !3124
  store float %mul138, float* %arrayidx137, align 4, !dbg !3124
  %118 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !3125
  %filtersize139 = getelementptr inbounds %struct.Tex, %struct.Tex* %118, i32 0, i32 10, !dbg !3126
  %119 = load float, float* %filtersize139, align 8, !dbg !3126
  %arrayidx140 = getelementptr inbounds [2 x float], [2 x float]* %dxt, i64 0, i64 1, !dbg !3127
  %120 = load float, float* %arrayidx140, align 4, !dbg !3128
  %mul141 = fmul float %120, %119, !dbg !3128
  store float %mul141, float* %arrayidx140, align 4, !dbg !3128
  %121 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !3129
  %filtersize142 = getelementptr inbounds %struct.Tex, %struct.Tex* %121, i32 0, i32 10, !dbg !3130
  %122 = load float, float* %filtersize142, align 8, !dbg !3130
  %arrayidx143 = getelementptr inbounds [2 x float], [2 x float]* %dyt, i64 0, i64 0, !dbg !3131
  %123 = load float, float* %arrayidx143, align 4, !dbg !3132
  %mul144 = fmul float %123, %122, !dbg !3132
  store float %mul144, float* %arrayidx143, align 4, !dbg !3132
  %124 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !3133
  %filtersize145 = getelementptr inbounds %struct.Tex, %struct.Tex* %124, i32 0, i32 10, !dbg !3134
  %125 = load float, float* %filtersize145, align 8, !dbg !3134
  %arrayidx146 = getelementptr inbounds [2 x float], [2 x float]* %dyt, i64 0, i64 1, !dbg !3135
  %126 = load float, float* %arrayidx146, align 4, !dbg !3136
  %mul147 = fmul float %126, %125, !dbg !3136
  store float %mul147, float* %arrayidx146, align 4, !dbg !3136
  br label %if.end148, !dbg !3137

if.end148:                                        ; preds = %if.then131, %if.else127
  br label %if.end149

if.end149:                                        ; preds = %if.end148, %if.end126
  %127 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !3138
  %imaflag150 = getelementptr inbounds %struct.Tex, %struct.Tex* %127, i32 0, i32 30, !dbg !3140
  %128 = load i16, i16* %imaflag150, align 4, !dbg !3140
  %conv151 = sext i16 %128 to i32, !dbg !3138
  %and152 = and i32 %conv151, 16, !dbg !3141
  %tobool153 = icmp ne i32 %and152, 0, !dbg !3141
  br i1 %tobool153, label %if.then154, label %if.end155, !dbg !3142

if.then154:                                       ; preds = %if.end149
  call void @llvm.dbg.declare(metadata float* %sw_ap, metadata !3143, metadata !DIExpression()), !dbg !3145
  %129 = load float, float* %minx, align 4, !dbg !3145
  store float %129, float* %sw_ap, align 4, !dbg !3145
  %130 = load float, float* %miny, align 4, !dbg !3145
  store float %130, float* %minx, align 4, !dbg !3145
  %131 = load float, float* %sw_ap, align 4, !dbg !3145
  store float %131, float* %miny, align 4, !dbg !3145
  br label %if.end155, !dbg !3145

if.end155:                                        ; preds = %if.then154, %if.end149
  %132 = load float, float* %minx, align 4, !dbg !3146
  %cmp156 = fcmp ogt float %132, 2.500000e-01, !dbg !3148
  br i1 %cmp156, label %if.then158, label %if.else159, !dbg !3149

if.then158:                                       ; preds = %if.end155
  store float 2.500000e-01, float* %minx, align 4, !dbg !3150
  br label %if.end164, !dbg !3151

if.else159:                                       ; preds = %if.end155
  %133 = load float, float* %minx, align 4, !dbg !3152
  %cmp160 = fcmp olt float %133, 0x3EE4F8B580000000, !dbg !3154
  br i1 %cmp160, label %if.then162, label %if.end163, !dbg !3155

if.then162:                                       ; preds = %if.else159
  store float 0x3EE4F8B580000000, float* %minx, align 4, !dbg !3156
  br label %if.end163, !dbg !3157

if.end163:                                        ; preds = %if.then162, %if.else159
  br label %if.end164

if.end164:                                        ; preds = %if.end163, %if.then158
  %134 = load float, float* %miny, align 4, !dbg !3158
  %cmp165 = fcmp ogt float %134, 2.500000e-01, !dbg !3160
  br i1 %cmp165, label %if.then167, label %if.else168, !dbg !3161

if.then167:                                       ; preds = %if.end164
  store float 2.500000e-01, float* %miny, align 4, !dbg !3162
  br label %if.end173, !dbg !3163

if.else168:                                       ; preds = %if.end164
  %135 = load float, float* %miny, align 4, !dbg !3164
  %cmp169 = fcmp olt float %135, 0x3EE4F8B580000000, !dbg !3166
  br i1 %cmp169, label %if.then171, label %if.end172, !dbg !3167

if.then171:                                       ; preds = %if.else168
  store float 0x3EE4F8B580000000, float* %miny, align 4, !dbg !3168
  br label %if.end172, !dbg !3169

if.end172:                                        ; preds = %if.then171, %if.else168
  br label %if.end173

if.end173:                                        ; preds = %if.end172, %if.then167
  %136 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !3170
  %extend = getelementptr inbounds %struct.Tex, %struct.Tex* %136, i32 0, i32 42, !dbg !3171
  %137 = load i16, i16* %extend, align 8, !dbg !3171
  %conv174 = sext i16 %137 to i32, !dbg !3170
  %cmp175 = icmp eq i32 %conv174, 3, !dbg !3172
  %conv176 = zext i1 %cmp175 to i32, !dbg !3172
  store i32 %conv176, i32* %imaprepeat, align 4, !dbg !3173
  %138 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !3174
  %extend177 = getelementptr inbounds %struct.Tex, %struct.Tex* %138, i32 0, i32 42, !dbg !3175
  %139 = load i16, i16* %extend177, align 8, !dbg !3175
  %conv178 = sext i16 %139 to i32, !dbg !3174
  %cmp179 = icmp eq i32 %conv178, 1, !dbg !3176
  %conv180 = zext i1 %cmp179 to i32, !dbg !3176
  store i32 %conv180, i32* %imapextend, align 4, !dbg !3177
  %140 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !3178
  %extend181 = getelementptr inbounds %struct.Tex, %struct.Tex* %140, i32 0, i32 42, !dbg !3180
  %141 = load i16, i16* %extend181, align 8, !dbg !3180
  %conv182 = sext i16 %141 to i32, !dbg !3178
  %cmp183 = icmp eq i32 %conv182, 3, !dbg !3181
  br i1 %cmp183, label %if.then185, label %if.end192, !dbg !3182

if.then185:                                       ; preds = %if.end173
  %142 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !3183
  %flag186 = getelementptr inbounds %struct.Tex, %struct.Tex* %142, i32 0, i32 31, !dbg !3186
  %143 = load i16, i16* %flag186, align 2, !dbg !3186
  %conv187 = sext i16 %143 to i32, !dbg !3183
  %and188 = and i32 %conv187, 384, !dbg !3187
  %tobool189 = icmp ne i32 %and188, 0, !dbg !3187
  br i1 %tobool189, label %if.then190, label %if.end191, !dbg !3188

if.then190:                                       ; preds = %if.then185
  store i32 0, i32* %imaprepeat, align 4, !dbg !3189
  store i32 1, i32* %imapextend, align 4, !dbg !3191
  br label %if.end191, !dbg !3192

if.end191:                                        ; preds = %if.then190, %if.then185
  br label %if.end192, !dbg !3193

if.end192:                                        ; preds = %if.end191, %if.end173
  %144 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !3194
  %extend193 = getelementptr inbounds %struct.Tex, %struct.Tex* %144, i32 0, i32 42, !dbg !3196
  %145 = load i16, i16* %extend193, align 8, !dbg !3196
  %conv194 = sext i16 %145 to i32, !dbg !3194
  %cmp195 = icmp eq i32 %conv194, 5, !dbg !3197
  br i1 %cmp195, label %if.then197, label %if.end346, !dbg !3198

if.then197:                                       ; preds = %if.end192
  call void @llvm.dbg.declare(metadata i32* %xs, metadata !3199, metadata !DIExpression()), !dbg !3201
  call void @llvm.dbg.declare(metadata i32* %ys, metadata !3202, metadata !DIExpression()), !dbg !3203
  call void @llvm.dbg.declare(metadata i32* %xs1, metadata !3204, metadata !DIExpression()), !dbg !3205
  call void @llvm.dbg.declare(metadata i32* %ys1, metadata !3206, metadata !DIExpression()), !dbg !3207
  call void @llvm.dbg.declare(metadata i32* %xs2, metadata !3208, metadata !DIExpression()), !dbg !3209
  call void @llvm.dbg.declare(metadata i32* %ys2, metadata !3210, metadata !DIExpression()), !dbg !3211
  call void @llvm.dbg.declare(metadata i32* %boundary, metadata !3212, metadata !DIExpression()), !dbg !3213
  %146 = load float, float* %fx, align 4, !dbg !3214
  %conv198 = fpext float %146 to double, !dbg !3214
  %147 = call double @llvm.floor.f64(double %conv198), !dbg !3215
  %conv199 = fptosi double %147 to i32, !dbg !3216
  store i32 %conv199, i32* %xs, align 4, !dbg !3217
  %148 = load float, float* %fy, align 4, !dbg !3218
  %conv200 = fpext float %148 to double, !dbg !3218
  %149 = call double @llvm.floor.f64(double %conv200), !dbg !3219
  %conv201 = fptosi double %149 to i32, !dbg !3220
  store i32 %conv201, i32* %ys, align 4, !dbg !3221
  %150 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !3222
  %flag202 = getelementptr inbounds %struct.Tex, %struct.Tex* %150, i32 0, i32 31, !dbg !3224
  %151 = load i16, i16* %flag202, align 2, !dbg !3224
  %conv203 = sext i16 %151 to i32, !dbg !3222
  %and204 = and i32 %conv203, 8, !dbg !3225
  %tobool205 = icmp ne i32 %and204, 0, !dbg !3225
  br i1 %tobool205, label %land.lhs.true206, label %if.else216, !dbg !3226

land.lhs.true206:                                 ; preds = %if.then197
  %152 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !3227
  %flag207 = getelementptr inbounds %struct.Tex, %struct.Tex* %152, i32 0, i32 31, !dbg !3228
  %153 = load i16, i16* %flag207, align 2, !dbg !3228
  %conv208 = sext i16 %153 to i32, !dbg !3227
  %and209 = and i32 %conv208, 16, !dbg !3229
  %tobool210 = icmp ne i32 %and209, 0, !dbg !3229
  br i1 %tobool210, label %if.then211, label %if.else216, !dbg !3230

if.then211:                                       ; preds = %land.lhs.true206
  %154 = load i32, i32* %xs, align 4, !dbg !3231
  %conv212 = sitofp i32 %154 to float, !dbg !3231
  %155 = load float, float* %fx, align 4, !dbg !3233
  %sub213 = fsub float %155, %conv212, !dbg !3233
  store float %sub213, float* %fx, align 4, !dbg !3233
  %156 = load i32, i32* %ys, align 4, !dbg !3234
  %conv214 = sitofp i32 %156 to float, !dbg !3234
  %157 = load float, float* %fy, align 4, !dbg !3235
  %sub215 = fsub float %157, %conv214, !dbg !3235
  store float %sub215, float* %fy, align 4, !dbg !3235
  br label %if.end325, !dbg !3236

if.else216:                                       ; preds = %land.lhs.true206, %if.then197
  %158 = load float, float* %fx, align 4, !dbg !3237
  %159 = load float, float* %minx, align 4, !dbg !3239
  %sub217 = fsub float %158, %159, !dbg !3240
  %conv218 = fpext float %sub217 to double, !dbg !3237
  %160 = call double @llvm.floor.f64(double %conv218), !dbg !3241
  %conv219 = fptosi double %160 to i32, !dbg !3242
  store i32 %conv219, i32* %xs1, align 4, !dbg !3243
  %161 = load float, float* %fy, align 4, !dbg !3244
  %162 = load float, float* %miny, align 4, !dbg !3245
  %sub220 = fsub float %161, %162, !dbg !3246
  %conv221 = fpext float %sub220 to double, !dbg !3244
  %163 = call double @llvm.floor.f64(double %conv221), !dbg !3247
  %conv222 = fptosi double %163 to i32, !dbg !3248
  store i32 %conv222, i32* %ys1, align 4, !dbg !3249
  %164 = load float, float* %fx, align 4, !dbg !3250
  %165 = load float, float* %minx, align 4, !dbg !3251
  %add223 = fadd float %164, %165, !dbg !3252
  %conv224 = fpext float %add223 to double, !dbg !3250
  %166 = call double @llvm.floor.f64(double %conv224), !dbg !3253
  %conv225 = fptosi double %166 to i32, !dbg !3254
  store i32 %conv225, i32* %xs2, align 4, !dbg !3255
  %167 = load float, float* %fy, align 4, !dbg !3256
  %168 = load float, float* %miny, align 4, !dbg !3257
  %add226 = fadd float %167, %168, !dbg !3258
  %conv227 = fpext float %add226 to double, !dbg !3256
  %169 = call double @llvm.floor.f64(double %conv227), !dbg !3259
  %conv228 = fptosi double %169 to i32, !dbg !3260
  store i32 %conv228, i32* %ys2, align 4, !dbg !3261
  %170 = load i32, i32* %xs1, align 4, !dbg !3262
  %171 = load i32, i32* %xs2, align 4, !dbg !3263
  %cmp229 = icmp ne i32 %170, %171, !dbg !3264
  br i1 %cmp229, label %lor.end, label %lor.rhs, !dbg !3265

lor.rhs:                                          ; preds = %if.else216
  %172 = load i32, i32* %ys1, align 4, !dbg !3266
  %173 = load i32, i32* %ys2, align 4, !dbg !3267
  %cmp231 = icmp ne i32 %172, %173, !dbg !3268
  br label %lor.end, !dbg !3265

lor.end:                                          ; preds = %lor.rhs, %if.else216
  %174 = phi i1 [ true, %if.else216 ], [ %cmp231, %lor.rhs ]
  %lor.ext = zext i1 %174 to i32, !dbg !3265
  store i32 %lor.ext, i32* %boundary, align 4, !dbg !3269
  %175 = load i32, i32* %boundary, align 4, !dbg !3270
  %cmp233 = icmp eq i32 %175, 0, !dbg !3272
  br i1 %cmp233, label %if.then235, label %if.else271, !dbg !3273

if.then235:                                       ; preds = %lor.end
  %176 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !3274
  %flag236 = getelementptr inbounds %struct.Tex, %struct.Tex* %176, i32 0, i32 31, !dbg !3277
  %177 = load i16, i16* %flag236, align 2, !dbg !3277
  %conv237 = sext i16 %177 to i32, !dbg !3274
  %and238 = and i32 %conv237, 8, !dbg !3278
  %cmp239 = icmp eq i32 %and238, 0, !dbg !3279
  br i1 %cmp239, label %if.then241, label %if.end251, !dbg !3280

if.then241:                                       ; preds = %if.then235
  %178 = load i32, i32* %xs, align 4, !dbg !3281
  %179 = load i32, i32* %ys, align 4, !dbg !3284
  %add242 = add nsw i32 %178, %179, !dbg !3285
  %and243 = and i32 %add242, 1, !dbg !3286
  %tobool244 = icmp ne i32 %and243, 0, !dbg !3286
  br i1 %tobool244, label %if.then245, label %if.else246, !dbg !3287

if.then245:                                       ; preds = %if.then241
  br label %if.end250, !dbg !3288

if.else246:                                       ; preds = %if.then241
  %180 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !3290
  %tobool247 = icmp ne %struct.Image* %180, null, !dbg !3290
  br i1 %tobool247, label %if.then248, label %if.end249, !dbg !3293

if.then248:                                       ; preds = %if.else246
  %181 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !3294
  %182 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !3295
  %183 = load %struct.ImagePool*, %struct.ImagePool** %pool.addr, align 8, !dbg !3296
  call void @BKE_image_pool_release_ibuf(%struct.Image* %181, %struct.ImBuf* %182, %struct.ImagePool* %183), !dbg !3297
  br label %if.end249, !dbg !3297

if.end249:                                        ; preds = %if.then248, %if.else246
  %184 = load i32, i32* %retval1, align 4, !dbg !3298
  store i32 %184, i32* %retval, align 4, !dbg !3299
  br label %return, !dbg !3299

if.end250:                                        ; preds = %if.then245
  br label %if.end251, !dbg !3300

if.end251:                                        ; preds = %if.end250, %if.then235
  %185 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !3301
  %flag252 = getelementptr inbounds %struct.Tex, %struct.Tex* %185, i32 0, i32 31, !dbg !3303
  %186 = load i16, i16* %flag252, align 2, !dbg !3303
  %conv253 = sext i16 %186 to i32, !dbg !3301
  %and254 = and i32 %conv253, 16, !dbg !3304
  %cmp255 = icmp eq i32 %and254, 0, !dbg !3305
  br i1 %cmp255, label %if.then257, label %if.end266, !dbg !3306

if.then257:                                       ; preds = %if.end251
  %187 = load i32, i32* %xs, align 4, !dbg !3307
  %188 = load i32, i32* %ys, align 4, !dbg !3310
  %add258 = add nsw i32 %187, %188, !dbg !3311
  %and259 = and i32 %add258, 1, !dbg !3312
  %tobool260 = icmp ne i32 %and259, 0, !dbg !3312
  br i1 %tobool260, label %if.then261, label %if.end265, !dbg !3313

if.then261:                                       ; preds = %if.then257
  %189 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !3314
  %tobool262 = icmp ne %struct.Image* %189, null, !dbg !3314
  br i1 %tobool262, label %if.then263, label %if.end264, !dbg !3317

if.then263:                                       ; preds = %if.then261
  %190 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !3318
  %191 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !3319
  %192 = load %struct.ImagePool*, %struct.ImagePool** %pool.addr, align 8, !dbg !3320
  call void @BKE_image_pool_release_ibuf(%struct.Image* %190, %struct.ImBuf* %191, %struct.ImagePool* %192), !dbg !3321
  br label %if.end264, !dbg !3321

if.end264:                                        ; preds = %if.then263, %if.then261
  %193 = load i32, i32* %retval1, align 4, !dbg !3322
  store i32 %193, i32* %retval, align 4, !dbg !3323
  br label %return, !dbg !3323

if.end265:                                        ; preds = %if.then257
  br label %if.end266, !dbg !3324

if.end266:                                        ; preds = %if.end265, %if.end251
  %194 = load i32, i32* %xs, align 4, !dbg !3325
  %conv267 = sitofp i32 %194 to float, !dbg !3325
  %195 = load float, float* %fx, align 4, !dbg !3326
  %sub268 = fsub float %195, %conv267, !dbg !3326
  store float %sub268, float* %fx, align 4, !dbg !3326
  %196 = load i32, i32* %ys, align 4, !dbg !3327
  %conv269 = sitofp i32 %196 to float, !dbg !3327
  %197 = load float, float* %fy, align 4, !dbg !3328
  %sub270 = fsub float %197, %conv269, !dbg !3328
  store float %sub270, float* %fy, align 4, !dbg !3328
  br label %if.end324, !dbg !3329

if.else271:                                       ; preds = %lor.end
  %198 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !3330
  %flag272 = getelementptr inbounds %struct.Tex, %struct.Tex* %198, i32 0, i32 31, !dbg !3333
  %199 = load i16, i16* %flag272, align 2, !dbg !3333
  %conv273 = sext i16 %199 to i32, !dbg !3330
  %and274 = and i32 %conv273, 8, !dbg !3334
  %tobool275 = icmp ne i32 %and274, 0, !dbg !3334
  br i1 %tobool275, label %if.then276, label %if.end297, !dbg !3335

if.then276:                                       ; preds = %if.else271
  %200 = load i32, i32* %xs1, align 4, !dbg !3336
  %201 = load i32, i32* %ys, align 4, !dbg !3339
  %add277 = add nsw i32 %200, %201, !dbg !3340
  %and278 = and i32 %add277, 1, !dbg !3341
  %tobool279 = icmp ne i32 %and278, 0, !dbg !3341
  br i1 %tobool279, label %if.then280, label %if.else283, !dbg !3342

if.then280:                                       ; preds = %if.then276
  %202 = load i32, i32* %xs2, align 4, !dbg !3343
  %conv281 = sitofp i32 %202 to float, !dbg !3343
  %203 = load float, float* %fx, align 4, !dbg !3344
  %sub282 = fsub float %203, %conv281, !dbg !3344
  store float %sub282, float* %fx, align 4, !dbg !3344
  br label %if.end286, !dbg !3345

if.else283:                                       ; preds = %if.then276
  %204 = load i32, i32* %xs1, align 4, !dbg !3346
  %conv284 = sitofp i32 %204 to float, !dbg !3346
  %205 = load float, float* %fx, align 4, !dbg !3347
  %sub285 = fsub float %205, %conv284, !dbg !3347
  store float %sub285, float* %fx, align 4, !dbg !3347
  br label %if.end286

if.end286:                                        ; preds = %if.else283, %if.then280
  %206 = load i32, i32* %ys1, align 4, !dbg !3348
  %207 = load i32, i32* %xs, align 4, !dbg !3350
  %add287 = add nsw i32 %206, %207, !dbg !3351
  %and288 = and i32 %add287, 1, !dbg !3352
  %tobool289 = icmp ne i32 %and288, 0, !dbg !3352
  br i1 %tobool289, label %if.then290, label %if.else293, !dbg !3353

if.then290:                                       ; preds = %if.end286
  %208 = load i32, i32* %ys2, align 4, !dbg !3354
  %conv291 = sitofp i32 %208 to float, !dbg !3354
  %209 = load float, float* %fy, align 4, !dbg !3355
  %sub292 = fsub float %209, %conv291, !dbg !3355
  store float %sub292, float* %fy, align 4, !dbg !3355
  br label %if.end296, !dbg !3356

if.else293:                                       ; preds = %if.end286
  %210 = load i32, i32* %ys1, align 4, !dbg !3357
  %conv294 = sitofp i32 %210 to float, !dbg !3357
  %211 = load float, float* %fy, align 4, !dbg !3358
  %sub295 = fsub float %211, %conv294, !dbg !3358
  store float %sub295, float* %fy, align 4, !dbg !3358
  br label %if.end296

if.end296:                                        ; preds = %if.else293, %if.then290
  br label %if.end297, !dbg !3359

if.end297:                                        ; preds = %if.end296, %if.else271
  %212 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !3360
  %flag298 = getelementptr inbounds %struct.Tex, %struct.Tex* %212, i32 0, i32 31, !dbg !3362
  %213 = load i16, i16* %flag298, align 2, !dbg !3362
  %conv299 = sext i16 %213 to i32, !dbg !3360
  %and300 = and i32 %conv299, 16, !dbg !3363
  %tobool301 = icmp ne i32 %and300, 0, !dbg !3363
  br i1 %tobool301, label %if.then302, label %if.end323, !dbg !3364

if.then302:                                       ; preds = %if.end297
  %214 = load i32, i32* %xs1, align 4, !dbg !3365
  %215 = load i32, i32* %ys, align 4, !dbg !3368
  %add303 = add nsw i32 %214, %215, !dbg !3369
  %and304 = and i32 %add303, 1, !dbg !3370
  %tobool305 = icmp ne i32 %and304, 0, !dbg !3370
  br i1 %tobool305, label %if.then306, label %if.else309, !dbg !3371

if.then306:                                       ; preds = %if.then302
  %216 = load i32, i32* %xs1, align 4, !dbg !3372
  %conv307 = sitofp i32 %216 to float, !dbg !3372
  %217 = load float, float* %fx, align 4, !dbg !3373
  %sub308 = fsub float %217, %conv307, !dbg !3373
  store float %sub308, float* %fx, align 4, !dbg !3373
  br label %if.end312, !dbg !3374

if.else309:                                       ; preds = %if.then302
  %218 = load i32, i32* %xs2, align 4, !dbg !3375
  %conv310 = sitofp i32 %218 to float, !dbg !3375
  %219 = load float, float* %fx, align 4, !dbg !3376
  %sub311 = fsub float %219, %conv310, !dbg !3376
  store float %sub311, float* %fx, align 4, !dbg !3376
  br label %if.end312

if.end312:                                        ; preds = %if.else309, %if.then306
  %220 = load i32, i32* %ys1, align 4, !dbg !3377
  %221 = load i32, i32* %xs, align 4, !dbg !3379
  %add313 = add nsw i32 %220, %221, !dbg !3380
  %and314 = and i32 %add313, 1, !dbg !3381
  %tobool315 = icmp ne i32 %and314, 0, !dbg !3381
  br i1 %tobool315, label %if.then316, label %if.else319, !dbg !3382

if.then316:                                       ; preds = %if.end312
  %222 = load i32, i32* %ys1, align 4, !dbg !3383
  %conv317 = sitofp i32 %222 to float, !dbg !3383
  %223 = load float, float* %fy, align 4, !dbg !3384
  %sub318 = fsub float %223, %conv317, !dbg !3384
  store float %sub318, float* %fy, align 4, !dbg !3384
  br label %if.end322, !dbg !3385

if.else319:                                       ; preds = %if.end312
  %224 = load i32, i32* %ys2, align 4, !dbg !3386
  %conv320 = sitofp i32 %224 to float, !dbg !3386
  %225 = load float, float* %fy, align 4, !dbg !3387
  %sub321 = fsub float %225, %conv320, !dbg !3387
  store float %sub321, float* %fy, align 4, !dbg !3387
  br label %if.end322

if.end322:                                        ; preds = %if.else319, %if.then316
  br label %if.end323, !dbg !3388

if.end323:                                        ; preds = %if.end322, %if.end297
  br label %if.end324

if.end324:                                        ; preds = %if.end323, %if.end266
  br label %if.end325

if.end325:                                        ; preds = %if.end324, %if.then211
  %226 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !3389
  %checkerdist = getelementptr inbounds %struct.Tex, %struct.Tex* %226, i32 0, i32 48, !dbg !3391
  %227 = load float, float* %checkerdist, align 4, !dbg !3391
  %cmp326 = fcmp olt float %227, 1.000000e+00, !dbg !3392
  br i1 %cmp326, label %if.then328, label %if.end345, !dbg !3393

if.then328:                                       ; preds = %if.end325
  %228 = load float, float* %fx, align 4, !dbg !3394
  %sub329 = fsub float %228, 5.000000e-01, !dbg !3396
  %229 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !3397
  %checkerdist330 = getelementptr inbounds %struct.Tex, %struct.Tex* %229, i32 0, i32 48, !dbg !3398
  %230 = load float, float* %checkerdist330, align 4, !dbg !3398
  %sub331 = fsub float 1.000000e+00, %230, !dbg !3399
  %div332 = fdiv float %sub329, %sub331, !dbg !3400
  %add333 = fadd float %div332, 5.000000e-01, !dbg !3401
  store float %add333, float* %fx, align 4, !dbg !3402
  %231 = load float, float* %fy, align 4, !dbg !3403
  %sub334 = fsub float %231, 5.000000e-01, !dbg !3404
  %232 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !3405
  %checkerdist335 = getelementptr inbounds %struct.Tex, %struct.Tex* %232, i32 0, i32 48, !dbg !3406
  %233 = load float, float* %checkerdist335, align 4, !dbg !3406
  %sub336 = fsub float 1.000000e+00, %233, !dbg !3407
  %div337 = fdiv float %sub334, %sub336, !dbg !3408
  %add338 = fadd float %div337, 5.000000e-01, !dbg !3409
  store float %add338, float* %fy, align 4, !dbg !3410
  %234 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !3411
  %checkerdist339 = getelementptr inbounds %struct.Tex, %struct.Tex* %234, i32 0, i32 48, !dbg !3412
  %235 = load float, float* %checkerdist339, align 4, !dbg !3412
  %sub340 = fsub float 1.000000e+00, %235, !dbg !3413
  %236 = load float, float* %minx, align 4, !dbg !3414
  %div341 = fdiv float %236, %sub340, !dbg !3414
  store float %div341, float* %minx, align 4, !dbg !3414
  %237 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !3415
  %checkerdist342 = getelementptr inbounds %struct.Tex, %struct.Tex* %237, i32 0, i32 48, !dbg !3416
  %238 = load float, float* %checkerdist342, align 4, !dbg !3416
  %sub343 = fsub float 1.000000e+00, %238, !dbg !3417
  %239 = load float, float* %miny, align 4, !dbg !3418
  %div344 = fdiv float %239, %sub343, !dbg !3418
  store float %div344, float* %miny, align 4, !dbg !3418
  br label %if.end345, !dbg !3419

if.end345:                                        ; preds = %if.then328, %if.end325
  br label %if.end346, !dbg !3420

if.end346:                                        ; preds = %if.end345, %if.end192
  %240 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !3421
  %extend347 = getelementptr inbounds %struct.Tex, %struct.Tex* %240, i32 0, i32 42, !dbg !3423
  %241 = load i16, i16* %extend347, align 8, !dbg !3423
  %conv348 = sext i16 %241 to i32, !dbg !3421
  %cmp349 = icmp eq i32 %conv348, 4, !dbg !3424
  br i1 %cmp349, label %if.then351, label %if.else380, !dbg !3425

if.then351:                                       ; preds = %if.end346
  %242 = load float, float* %fx, align 4, !dbg !3426
  %243 = load float, float* %minx, align 4, !dbg !3429
  %add352 = fadd float %242, %243, !dbg !3430
  %cmp353 = fcmp olt float %add352, 0.000000e+00, !dbg !3431
  br i1 %cmp353, label %if.then375, label %lor.lhs.false355, !dbg !3432

lor.lhs.false355:                                 ; preds = %if.then351
  %244 = load float, float* %fy, align 4, !dbg !3433
  %245 = load float, float* %miny, align 4, !dbg !3434
  %add356 = fadd float %244, %245, !dbg !3435
  %cmp357 = fcmp olt float %add356, 0.000000e+00, !dbg !3436
  br i1 %cmp357, label %if.then375, label %lor.lhs.false359, !dbg !3437

lor.lhs.false359:                                 ; preds = %lor.lhs.false355
  %246 = load float, float* %fx, align 4, !dbg !3438
  %247 = load float, float* %minx, align 4, !dbg !3439
  %sub360 = fsub float %246, %247, !dbg !3440
  %cmp361 = fcmp ogt float %sub360, 1.000000e+00, !dbg !3441
  br i1 %cmp361, label %if.then375, label %lor.lhs.false363, !dbg !3442

lor.lhs.false363:                                 ; preds = %lor.lhs.false359
  %248 = load float, float* %fy, align 4, !dbg !3443
  %249 = load float, float* %miny, align 4, !dbg !3444
  %sub364 = fsub float %248, %249, !dbg !3445
  %cmp365 = fcmp ogt float %sub364, 1.000000e+00, !dbg !3446
  br i1 %cmp365, label %if.then375, label %lor.lhs.false367, !dbg !3447

lor.lhs.false367:                                 ; preds = %lor.lhs.false363
  %250 = load float*, float** %texvec.addr, align 8, !dbg !3448
  %arrayidx368 = getelementptr inbounds float, float* %250, i64 2, !dbg !3448
  %251 = load float, float* %arrayidx368, align 4, !dbg !3448
  %cmp369 = fcmp olt float %251, -1.000000e+00, !dbg !3449
  br i1 %cmp369, label %if.then375, label %lor.lhs.false371, !dbg !3450

lor.lhs.false371:                                 ; preds = %lor.lhs.false367
  %252 = load float*, float** %texvec.addr, align 8, !dbg !3451
  %arrayidx372 = getelementptr inbounds float, float* %252, i64 2, !dbg !3451
  %253 = load float, float* %arrayidx372, align 4, !dbg !3451
  %cmp373 = fcmp ogt float %253, 1.000000e+00, !dbg !3452
  br i1 %cmp373, label %if.then375, label %if.end379, !dbg !3453

if.then375:                                       ; preds = %lor.lhs.false371, %lor.lhs.false367, %lor.lhs.false363, %lor.lhs.false359, %lor.lhs.false355, %if.then351
  %254 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !3454
  %tobool376 = icmp ne %struct.Image* %254, null, !dbg !3454
  br i1 %tobool376, label %if.then377, label %if.end378, !dbg !3457

if.then377:                                       ; preds = %if.then375
  %255 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !3458
  %256 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !3459
  %257 = load %struct.ImagePool*, %struct.ImagePool** %pool.addr, align 8, !dbg !3460
  call void @BKE_image_pool_release_ibuf(%struct.Image* %255, %struct.ImBuf* %256, %struct.ImagePool* %257), !dbg !3461
  br label %if.end378, !dbg !3461

if.end378:                                        ; preds = %if.then377, %if.then375
  %258 = load i32, i32* %retval1, align 4, !dbg !3462
  store i32 %258, i32* %retval, align 4, !dbg !3463
  br label %return, !dbg !3463

if.end379:                                        ; preds = %lor.lhs.false371
  br label %if.end471, !dbg !3464

if.else380:                                       ; preds = %if.end346
  %259 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !3465
  %extend381 = getelementptr inbounds %struct.Tex, %struct.Tex* %259, i32 0, i32 42, !dbg !3467
  %260 = load i16, i16* %extend381, align 8, !dbg !3467
  %conv382 = sext i16 %260 to i32, !dbg !3465
  %cmp383 = icmp eq i32 %conv382, 2, !dbg !3468
  br i1 %cmp383, label %if.then390, label %lor.lhs.false385, !dbg !3469

lor.lhs.false385:                                 ; preds = %if.else380
  %261 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !3470
  %extend386 = getelementptr inbounds %struct.Tex, %struct.Tex* %261, i32 0, i32 42, !dbg !3471
  %262 = load i16, i16* %extend386, align 8, !dbg !3471
  %conv387 = sext i16 %262 to i32, !dbg !3470
  %cmp388 = icmp eq i32 %conv387, 5, !dbg !3472
  br i1 %cmp388, label %if.then390, label %if.else411, !dbg !3473

if.then390:                                       ; preds = %lor.lhs.false385, %if.else380
  %263 = load float, float* %fx, align 4, !dbg !3474
  %264 = load float, float* %minx, align 4, !dbg !3477
  %add391 = fadd float %263, %264, !dbg !3478
  %cmp392 = fcmp olt float %add391, 0.000000e+00, !dbg !3479
  br i1 %cmp392, label %if.then406, label %lor.lhs.false394, !dbg !3480

lor.lhs.false394:                                 ; preds = %if.then390
  %265 = load float, float* %fy, align 4, !dbg !3481
  %266 = load float, float* %miny, align 4, !dbg !3482
  %add395 = fadd float %265, %266, !dbg !3483
  %cmp396 = fcmp olt float %add395, 0.000000e+00, !dbg !3484
  br i1 %cmp396, label %if.then406, label %lor.lhs.false398, !dbg !3485

lor.lhs.false398:                                 ; preds = %lor.lhs.false394
  %267 = load float, float* %fx, align 4, !dbg !3486
  %268 = load float, float* %minx, align 4, !dbg !3487
  %sub399 = fsub float %267, %268, !dbg !3488
  %cmp400 = fcmp ogt float %sub399, 1.000000e+00, !dbg !3489
  br i1 %cmp400, label %if.then406, label %lor.lhs.false402, !dbg !3490

lor.lhs.false402:                                 ; preds = %lor.lhs.false398
  %269 = load float, float* %fy, align 4, !dbg !3491
  %270 = load float, float* %miny, align 4, !dbg !3492
  %sub403 = fsub float %269, %270, !dbg !3493
  %cmp404 = fcmp ogt float %sub403, 1.000000e+00, !dbg !3494
  br i1 %cmp404, label %if.then406, label %if.end410, !dbg !3495

if.then406:                                       ; preds = %lor.lhs.false402, %lor.lhs.false398, %lor.lhs.false394, %if.then390
  %271 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !3496
  %tobool407 = icmp ne %struct.Image* %271, null, !dbg !3496
  br i1 %tobool407, label %if.then408, label %if.end409, !dbg !3499

if.then408:                                       ; preds = %if.then406
  %272 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !3500
  %273 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !3501
  %274 = load %struct.ImagePool*, %struct.ImagePool** %pool.addr, align 8, !dbg !3502
  call void @BKE_image_pool_release_ibuf(%struct.Image* %272, %struct.ImBuf* %273, %struct.ImagePool* %274), !dbg !3503
  br label %if.end409, !dbg !3503

if.end409:                                        ; preds = %if.then408, %if.then406
  %275 = load i32, i32* %retval1, align 4, !dbg !3504
  store i32 %275, i32* %retval, align 4, !dbg !3505
  br label %return, !dbg !3505

if.end410:                                        ; preds = %lor.lhs.false402
  br label %if.end470, !dbg !3506

if.else411:                                       ; preds = %lor.lhs.false385
  %276 = load i32, i32* %imapextend, align 4, !dbg !3507
  %tobool412 = icmp ne i32 %276, 0, !dbg !3507
  br i1 %tobool412, label %if.then413, label %if.else423, !dbg !3510

if.then413:                                       ; preds = %if.else411
  %277 = load float, float* %fx, align 4, !dbg !3511
  %cmp414 = fcmp ogt float %277, 1.000000e+00, !dbg !3514
  br i1 %cmp414, label %if.then416, label %if.else417, !dbg !3515

if.then416:                                       ; preds = %if.then413
  store float 1.000000e+00, float* %fx, align 4, !dbg !3516
  br label %if.end422, !dbg !3517

if.else417:                                       ; preds = %if.then413
  %278 = load float, float* %fx, align 4, !dbg !3518
  %cmp418 = fcmp olt float %278, 0.000000e+00, !dbg !3520
  br i1 %cmp418, label %if.then420, label %if.end421, !dbg !3521

if.then420:                                       ; preds = %if.else417
  store float 0.000000e+00, float* %fx, align 4, !dbg !3522
  br label %if.end421, !dbg !3523

if.end421:                                        ; preds = %if.then420, %if.else417
  br label %if.end422

if.end422:                                        ; preds = %if.end421, %if.then416
  br label %if.end440, !dbg !3524

if.else423:                                       ; preds = %if.else411
  %279 = load float, float* %fx, align 4, !dbg !3525
  %cmp424 = fcmp ogt float %279, 1.000000e+00, !dbg !3528
  br i1 %cmp424, label %if.then426, label %if.else430, !dbg !3529

if.then426:                                       ; preds = %if.else423
  %280 = load float, float* %fx, align 4, !dbg !3530
  %conv427 = fptosi float %280 to i32, !dbg !3531
  %conv428 = sitofp i32 %conv427 to float, !dbg !3531
  %281 = load float, float* %fx, align 4, !dbg !3532
  %sub429 = fsub float %281, %conv428, !dbg !3532
  store float %sub429, float* %fx, align 4, !dbg !3532
  br label %if.end439, !dbg !3533

if.else430:                                       ; preds = %if.else423
  %282 = load float, float* %fx, align 4, !dbg !3534
  %cmp431 = fcmp olt float %282, 0.000000e+00, !dbg !3536
  br i1 %cmp431, label %if.then433, label %if.end438, !dbg !3537

if.then433:                                       ; preds = %if.else430
  %283 = load float, float* %fx, align 4, !dbg !3538
  %conv434 = fptosi float %283 to i32, !dbg !3539
  %sub435 = sub nsw i32 1, %conv434, !dbg !3540
  %conv436 = sitofp i32 %sub435 to float, !dbg !3541
  %284 = load float, float* %fx, align 4, !dbg !3542
  %add437 = fadd float %284, %conv436, !dbg !3542
  store float %add437, float* %fx, align 4, !dbg !3542
  br label %if.end438, !dbg !3543

if.end438:                                        ; preds = %if.then433, %if.else430
  br label %if.end439

if.end439:                                        ; preds = %if.end438, %if.then426
  br label %if.end440

if.end440:                                        ; preds = %if.end439, %if.end422
  %285 = load i32, i32* %imapextend, align 4, !dbg !3544
  %tobool441 = icmp ne i32 %285, 0, !dbg !3544
  br i1 %tobool441, label %if.then442, label %if.else452, !dbg !3546

if.then442:                                       ; preds = %if.end440
  %286 = load float, float* %fy, align 4, !dbg !3547
  %cmp443 = fcmp ogt float %286, 1.000000e+00, !dbg !3550
  br i1 %cmp443, label %if.then445, label %if.else446, !dbg !3551

if.then445:                                       ; preds = %if.then442
  store float 1.000000e+00, float* %fy, align 4, !dbg !3552
  br label %if.end451, !dbg !3553

if.else446:                                       ; preds = %if.then442
  %287 = load float, float* %fy, align 4, !dbg !3554
  %cmp447 = fcmp olt float %287, 0.000000e+00, !dbg !3556
  br i1 %cmp447, label %if.then449, label %if.end450, !dbg !3557

if.then449:                                       ; preds = %if.else446
  store float 0.000000e+00, float* %fy, align 4, !dbg !3558
  br label %if.end450, !dbg !3559

if.end450:                                        ; preds = %if.then449, %if.else446
  br label %if.end451

if.end451:                                        ; preds = %if.end450, %if.then445
  br label %if.end469, !dbg !3560

if.else452:                                       ; preds = %if.end440
  %288 = load float, float* %fy, align 4, !dbg !3561
  %cmp453 = fcmp ogt float %288, 1.000000e+00, !dbg !3564
  br i1 %cmp453, label %if.then455, label %if.else459, !dbg !3565

if.then455:                                       ; preds = %if.else452
  %289 = load float, float* %fy, align 4, !dbg !3566
  %conv456 = fptosi float %289 to i32, !dbg !3567
  %conv457 = sitofp i32 %conv456 to float, !dbg !3567
  %290 = load float, float* %fy, align 4, !dbg !3568
  %sub458 = fsub float %290, %conv457, !dbg !3568
  store float %sub458, float* %fy, align 4, !dbg !3568
  br label %if.end468, !dbg !3569

if.else459:                                       ; preds = %if.else452
  %291 = load float, float* %fy, align 4, !dbg !3570
  %cmp460 = fcmp olt float %291, 0.000000e+00, !dbg !3572
  br i1 %cmp460, label %if.then462, label %if.end467, !dbg !3573

if.then462:                                       ; preds = %if.else459
  %292 = load float, float* %fy, align 4, !dbg !3574
  %conv463 = fptosi float %292 to i32, !dbg !3575
  %sub464 = sub nsw i32 1, %conv463, !dbg !3576
  %conv465 = sitofp i32 %sub464 to float, !dbg !3577
  %293 = load float, float* %fy, align 4, !dbg !3578
  %add466 = fadd float %293, %conv465, !dbg !3578
  store float %add466, float* %fy, align 4, !dbg !3578
  br label %if.end467, !dbg !3579

if.end467:                                        ; preds = %if.then462, %if.else459
  br label %if.end468

if.end468:                                        ; preds = %if.end467, %if.then455
  br label %if.end469

if.end469:                                        ; preds = %if.end468, %if.end451
  br label %if.end470

if.end470:                                        ; preds = %if.end469, %if.end410
  br label %if.end471

if.end471:                                        ; preds = %if.end470, %if.end379
  %294 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 4), align 8, !dbg !3580
  %conv472 = sext i16 %294 to i32, !dbg !3582
  %and473 = and i32 %conv472, 4, !dbg !3583
  %tobool474 = icmp ne i32 %and473, 0, !dbg !3583
  br i1 %tobool474, label %land.lhs.true475, label %if.end484, !dbg !3584

land.lhs.true475:                                 ; preds = %if.end471
  %295 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !3585
  %flags476 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %295, i32 0, i32 6, !dbg !3586
  %296 = load i32, i32* %flags476, align 8, !dbg !3586
  %and477 = and i32 %296, 4, !dbg !3587
  %tobool478 = icmp ne i32 %and477, 0, !dbg !3587
  br i1 %tobool478, label %if.then479, label %if.end484, !dbg !3588

if.then479:                                       ; preds = %land.lhs.true475
  %297 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !3589
  %x480 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %297, i32 0, i32 2, !dbg !3591
  %298 = load i32, i32* %x480, align 8, !dbg !3591
  %299 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !3592
  %y481 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %299, i32 0, i32 3, !dbg !3593
  %300 = load i32, i32* %y481, align 4, !dbg !3593
  %mul482 = mul nsw i32 %298, %300, !dbg !3594
  %301 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !3595
  %rect483 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %301, i32 0, i32 8, !dbg !3596
  %302 = load i32*, i32** %rect483, align 8, !dbg !3597
  %idx.ext = sext i32 %mul482 to i64, !dbg !3597
  %add.ptr = getelementptr inbounds i32, i32* %302, i64 %idx.ext, !dbg !3597
  store i32* %add.ptr, i32** %rect483, align 8, !dbg !3597
  br label %if.end484, !dbg !3598

if.end484:                                        ; preds = %if.then479, %land.lhs.true475, %if.end471
  %303 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !3599
  %imaflag485 = getelementptr inbounds %struct.Tex, %struct.Tex* %303, i32 0, i32 30, !dbg !3601
  %304 = load i16, i16* %imaflag485, align 4, !dbg !3601
  %conv486 = sext i16 %304 to i32, !dbg !3599
  %and487 = and i32 %conv486, 4, !dbg !3602
  %tobool488 = icmp ne i32 %and487, 0, !dbg !3602
  br i1 %tobool488, label %if.then489, label %if.else829, !dbg !3603

if.then489:                                       ; preds = %if.end484
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %previbuf, metadata !3604, metadata !DIExpression()), !dbg !3606
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %curibuf, metadata !3607, metadata !DIExpression()), !dbg !3608
  call void @llvm.dbg.declare(metadata float* %bumpscale, metadata !3609, metadata !DIExpression()), !dbg !3610
  %305 = load float, float* %minx, align 4, !dbg !3611
  store float %305, float* %dx, align 4, !dbg !3612
  %306 = load float, float* %miny, align 4, !dbg !3613
  store float %306, float* %dy, align 4, !dbg !3614
  %307 = load float, float* %dx, align 4, !dbg !3615
  %308 = load float, float* %dy, align 4, !dbg !3616
  %call490 = call float @max_ff(float %307, float %308), !dbg !3617
  store float %call490, float* %maxd, align 4, !dbg !3618
  %309 = load float, float* %maxd, align 4, !dbg !3619
  %cmp491 = fcmp ogt float %309, 5.000000e-01, !dbg !3621
  br i1 %cmp491, label %if.then493, label %if.end494, !dbg !3622

if.then493:                                       ; preds = %if.then489
  store float 5.000000e-01, float* %maxd, align 4, !dbg !3623
  br label %if.end494, !dbg !3624

if.end494:                                        ; preds = %if.then493, %if.then489
  %310 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !3625
  %x495 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %310, i32 0, i32 2, !dbg !3625
  %311 = load i32, i32* %x495, align 8, !dbg !3625
  %312 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !3625
  %y496 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %312, i32 0, i32 3, !dbg !3625
  %313 = load i32, i32* %y496, align 4, !dbg !3625
  %cmp497 = icmp slt i32 %311, %313, !dbg !3625
  br i1 %cmp497, label %cond.true499, label %cond.false501, !dbg !3625

cond.true499:                                     ; preds = %if.end494
  %314 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !3625
  %x500 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %314, i32 0, i32 2, !dbg !3625
  %315 = load i32, i32* %x500, align 8, !dbg !3625
  br label %cond.end503, !dbg !3625

cond.false501:                                    ; preds = %if.end494
  %316 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !3625
  %y502 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %316, i32 0, i32 3, !dbg !3625
  %317 = load i32, i32* %y502, align 4, !dbg !3625
  br label %cond.end503, !dbg !3625

cond.end503:                                      ; preds = %cond.false501, %cond.true499
  %cond504 = phi i32 [ %315, %cond.true499 ], [ %317, %cond.false501 ], !dbg !3625
  %conv505 = sitofp i32 %cond504 to float, !dbg !3626
  %div506 = fdiv float 1.000000e+00, %conv505, !dbg !3627
  store float %div506, float* %pixsize, align 4, !dbg !3628
  %318 = load float, float* %pixsize, align 4, !dbg !3629
  %319 = load float, float* %maxd, align 4, !dbg !3630
  %div507 = fdiv float %318, %319, !dbg !3631
  store float %div507, float* %bumpscale, align 4, !dbg !3632
  %320 = load float, float* %bumpscale, align 4, !dbg !3633
  %cmp508 = fcmp ogt float %320, 1.000000e+00, !dbg !3635
  br i1 %cmp508, label %if.then510, label %if.else511, !dbg !3636

if.then510:                                       ; preds = %cond.end503
  store float 1.000000e+00, float* %bumpscale, align 4, !dbg !3637
  br label %if.end513, !dbg !3638

if.else511:                                       ; preds = %cond.end503
  %321 = load float, float* %bumpscale, align 4, !dbg !3639
  %322 = load float, float* %bumpscale, align 4, !dbg !3640
  %mul512 = fmul float %322, %321, !dbg !3640
  store float %mul512, float* %bumpscale, align 4, !dbg !3640
  br label %if.end513

if.end513:                                        ; preds = %if.else511, %if.then510
  store i32 0, i32* %curmap, align 4, !dbg !3641
  %323 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !3642
  store %struct.ImBuf* %323, %struct.ImBuf** %curibuf, align 8, !dbg !3643
  store %struct.ImBuf* %323, %struct.ImBuf** %previbuf, align 8, !dbg !3644
  br label %while.cond, !dbg !3645

while.cond:                                       ; preds = %cond.end533, %if.end513
  %324 = load i32, i32* %curmap, align 4, !dbg !3646
  %cmp514 = icmp slt i32 %324, 20, !dbg !3647
  br i1 %cmp514, label %land.rhs, label %land.end, !dbg !3648

land.rhs:                                         ; preds = %while.cond
  %325 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !3649
  %mipmap = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %325, i32 0, i32 19, !dbg !3650
  %326 = load i32, i32* %curmap, align 4, !dbg !3651
  %idxprom = sext i32 %326 to i64, !dbg !3649
  %arrayidx516 = getelementptr inbounds [20 x %struct.ImBuf*], [20 x %struct.ImBuf*]* %mipmap, i64 0, i64 %idxprom, !dbg !3649
  %327 = load %struct.ImBuf*, %struct.ImBuf** %arrayidx516, align 8, !dbg !3649
  %tobool517 = icmp ne %struct.ImBuf* %327, null, !dbg !3648
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %328 = phi i1 [ false, %while.cond ], [ %tobool517, %land.rhs ], !dbg !3652
  br i1 %328, label %while.body, label %while.end, !dbg !3645

while.body:                                       ; preds = %land.end
  %329 = load float, float* %maxd, align 4, !dbg !3653
  %330 = load float, float* %pixsize, align 4, !dbg !3656
  %cmp518 = fcmp olt float %329, %330, !dbg !3657
  br i1 %cmp518, label %if.then520, label %if.end521, !dbg !3658

if.then520:                                       ; preds = %while.body
  br label %while.end, !dbg !3659

if.end521:                                        ; preds = %while.body
  %331 = load %struct.ImBuf*, %struct.ImBuf** %curibuf, align 8, !dbg !3660
  store %struct.ImBuf* %331, %struct.ImBuf** %previbuf, align 8, !dbg !3661
  %332 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !3662
  %mipmap522 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %332, i32 0, i32 19, !dbg !3663
  %333 = load i32, i32* %curmap, align 4, !dbg !3664
  %idxprom523 = sext i32 %333 to i64, !dbg !3662
  %arrayidx524 = getelementptr inbounds [20 x %struct.ImBuf*], [20 x %struct.ImBuf*]* %mipmap522, i64 0, i64 %idxprom523, !dbg !3662
  %334 = load %struct.ImBuf*, %struct.ImBuf** %arrayidx524, align 8, !dbg !3662
  store %struct.ImBuf* %334, %struct.ImBuf** %curibuf, align 8, !dbg !3665
  %335 = load %struct.ImBuf*, %struct.ImBuf** %curibuf, align 8, !dbg !3666
  %x525 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %335, i32 0, i32 2, !dbg !3666
  %336 = load i32, i32* %x525, align 8, !dbg !3666
  %337 = load %struct.ImBuf*, %struct.ImBuf** %curibuf, align 8, !dbg !3666
  %y526 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %337, i32 0, i32 3, !dbg !3666
  %338 = load i32, i32* %y526, align 4, !dbg !3666
  %cmp527 = icmp slt i32 %336, %338, !dbg !3666
  br i1 %cmp527, label %cond.true529, label %cond.false531, !dbg !3666

cond.true529:                                     ; preds = %if.end521
  %339 = load %struct.ImBuf*, %struct.ImBuf** %curibuf, align 8, !dbg !3666
  %x530 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %339, i32 0, i32 2, !dbg !3666
  %340 = load i32, i32* %x530, align 8, !dbg !3666
  br label %cond.end533, !dbg !3666

cond.false531:                                    ; preds = %if.end521
  %341 = load %struct.ImBuf*, %struct.ImBuf** %curibuf, align 8, !dbg !3666
  %y532 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %341, i32 0, i32 3, !dbg !3666
  %342 = load i32, i32* %y532, align 4, !dbg !3666
  br label %cond.end533, !dbg !3666

cond.end533:                                      ; preds = %cond.false531, %cond.true529
  %cond534 = phi i32 [ %340, %cond.true529 ], [ %342, %cond.false531 ], !dbg !3666
  %conv535 = sitofp i32 %cond534 to float, !dbg !3667
  %div536 = fdiv float 1.000000e+00, %conv535, !dbg !3668
  store float %div536, float* %pixsize, align 4, !dbg !3669
  %343 = load i32, i32* %curmap, align 4, !dbg !3670
  %inc = add nsw i32 %343, 1, !dbg !3670
  store i32 %inc, i32* %curmap, align 4, !dbg !3670
  br label %while.cond, !dbg !3645, !llvm.loop !3671

while.end:                                        ; preds = %if.then520, %land.end
  %344 = load %struct.ImBuf*, %struct.ImBuf** %previbuf, align 8, !dbg !3673
  %345 = load %struct.ImBuf*, %struct.ImBuf** %curibuf, align 8, !dbg !3675
  %cmp537 = icmp ne %struct.ImBuf* %344, %345, !dbg !3676
  br i1 %cmp537, label %if.then544, label %lor.lhs.false539, !dbg !3677

lor.lhs.false539:                                 ; preds = %while.end
  %346 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !3678
  %imaflag540 = getelementptr inbounds %struct.Tex, %struct.Tex* %346, i32 0, i32 30, !dbg !3679
  %347 = load i16, i16* %imaflag540, align 4, !dbg !3679
  %conv541 = sext i16 %347 to i32, !dbg !3678
  %and542 = and i32 %conv541, 1, !dbg !3680
  %tobool543 = icmp ne i32 %and542, 0, !dbg !3680
  br i1 %tobool543, label %if.then544, label %if.end565, !dbg !3681

if.then544:                                       ; preds = %lor.lhs.false539, %while.end
  %348 = load float, float* %minx, align 4, !dbg !3682
  %349 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !3685
  %x545 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %349, i32 0, i32 2, !dbg !3686
  %350 = load i32, i32* %x545, align 8, !dbg !3686
  %conv546 = sitofp i32 %350 to float, !dbg !3685
  %div547 = fdiv float 5.000000e-01, %conv546, !dbg !3687
  %cmp548 = fcmp olt float %348, %div547, !dbg !3688
  br i1 %cmp548, label %if.then550, label %if.end554, !dbg !3689

if.then550:                                       ; preds = %if.then544
  %351 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !3690
  %x551 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %351, i32 0, i32 2, !dbg !3691
  %352 = load i32, i32* %x551, align 8, !dbg !3691
  %conv552 = sitofp i32 %352 to float, !dbg !3690
  %div553 = fdiv float 5.000000e-01, %conv552, !dbg !3692
  store float %div553, float* %minx, align 4, !dbg !3693
  br label %if.end554, !dbg !3694

if.end554:                                        ; preds = %if.then550, %if.then544
  %353 = load float, float* %miny, align 4, !dbg !3695
  %354 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !3697
  %y555 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %354, i32 0, i32 3, !dbg !3698
  %355 = load i32, i32* %y555, align 4, !dbg !3698
  %conv556 = sitofp i32 %355 to float, !dbg !3697
  %div557 = fdiv float 5.000000e-01, %conv556, !dbg !3699
  %cmp558 = fcmp olt float %353, %div557, !dbg !3700
  br i1 %cmp558, label %if.then560, label %if.end564, !dbg !3701

if.then560:                                       ; preds = %if.end554
  %356 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !3702
  %y561 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %356, i32 0, i32 3, !dbg !3703
  %357 = load i32, i32* %y561, align 4, !dbg !3703
  %conv562 = sitofp i32 %357 to float, !dbg !3702
  %div563 = fdiv float 5.000000e-01, %conv562, !dbg !3704
  store float %div563, float* %miny, align 4, !dbg !3705
  br label %if.end564, !dbg !3706

if.end564:                                        ; preds = %if.then560, %if.end554
  br label %if.end565, !dbg !3707

if.end565:                                        ; preds = %if.end564, %lor.lhs.false539
  %358 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !3708
  %nor566 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %358, i32 0, i32 6, !dbg !3710
  %359 = load float*, float** %nor566, align 8, !dbg !3710
  %tobool567 = icmp ne float* %359, null, !dbg !3708
  br i1 %tobool567, label %land.lhs.true568, label %if.else774, !dbg !3711

land.lhs.true568:                                 ; preds = %if.end565
  %360 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !3712
  %imaflag569 = getelementptr inbounds %struct.Tex, %struct.Tex* %360, i32 0, i32 30, !dbg !3713
  %361 = load i16, i16* %imaflag569, align 4, !dbg !3713
  %conv570 = sext i16 %361 to i32, !dbg !3712
  %and571 = and i32 %conv570, 2048, !dbg !3714
  %cmp572 = icmp eq i32 %and571, 0, !dbg !3715
  br i1 %cmp572, label %if.then574, label %if.else774, !dbg !3716

if.then574:                                       ; preds = %land.lhs.true568
  %362 = load %struct.ImBuf*, %struct.ImBuf** %curibuf, align 8, !dbg !3717
  %363 = load float, float* %fx, align 4, !dbg !3719
  %364 = load float, float* %minx, align 4, !dbg !3720
  %sub575 = fsub float %363, %364, !dbg !3721
  %365 = load float, float* %fy, align 4, !dbg !3722
  %366 = load float, float* %miny, align 4, !dbg !3723
  %sub576 = fsub float %365, %366, !dbg !3724
  %367 = load float, float* %fx, align 4, !dbg !3725
  %368 = load float, float* %minx, align 4, !dbg !3726
  %add577 = fadd float %367, %368, !dbg !3727
  %369 = load float, float* %fy, align 4, !dbg !3728
  %370 = load float, float* %miny, align 4, !dbg !3729
  %add578 = fadd float %369, %370, !dbg !3730
  %371 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !3731
  %372 = load i32, i32* %imaprepeat, align 4, !dbg !3732
  %conv579 = trunc i32 %372 to i16, !dbg !3732
  %373 = load i32, i32* %imapextend, align 4, !dbg !3733
  %conv580 = trunc i32 %373 to i16, !dbg !3733
  call void @boxsample(%struct.ImBuf* %362, float %sub575, float %sub576, float %add577, float %add578, %struct.TexResult* %371, i16 signext %conv579, i16 signext %conv580), !dbg !3734
  %374 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !3735
  %tr581 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %374, i32 0, i32 1, !dbg !3736
  %375 = load float, float* %tr581, align 4, !dbg !3736
  %376 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !3737
  %tg582 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %376, i32 0, i32 2, !dbg !3738
  %377 = load float, float* %tg582, align 8, !dbg !3738
  %add583 = fadd float %375, %377, !dbg !3739
  %378 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !3740
  %tb584 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %378, i32 0, i32 3, !dbg !3741
  %379 = load float, float* %tb584, align 4, !dbg !3741
  %add585 = fadd float %add583, %379, !dbg !3742
  store float %add585, float* %val1, align 4, !dbg !3743
  %380 = load %struct.ImBuf*, %struct.ImBuf** %curibuf, align 8, !dbg !3744
  %381 = load float, float* %fx, align 4, !dbg !3745
  %382 = load float, float* %minx, align 4, !dbg !3746
  %sub586 = fsub float %381, %382, !dbg !3747
  %arrayidx587 = getelementptr inbounds [2 x float], [2 x float]* %dxt, i64 0, i64 0, !dbg !3748
  %383 = load float, float* %arrayidx587, align 4, !dbg !3748
  %add588 = fadd float %sub586, %383, !dbg !3749
  %384 = load float, float* %fy, align 4, !dbg !3750
  %385 = load float, float* %miny, align 4, !dbg !3751
  %sub589 = fsub float %384, %385, !dbg !3752
  %arrayidx590 = getelementptr inbounds [2 x float], [2 x float]* %dxt, i64 0, i64 1, !dbg !3753
  %386 = load float, float* %arrayidx590, align 4, !dbg !3753
  %add591 = fadd float %sub589, %386, !dbg !3754
  %387 = load float, float* %fx, align 4, !dbg !3755
  %388 = load float, float* %minx, align 4, !dbg !3756
  %add592 = fadd float %387, %388, !dbg !3757
  %arrayidx593 = getelementptr inbounds [2 x float], [2 x float]* %dxt, i64 0, i64 0, !dbg !3758
  %389 = load float, float* %arrayidx593, align 4, !dbg !3758
  %add594 = fadd float %add592, %389, !dbg !3759
  %390 = load float, float* %fy, align 4, !dbg !3760
  %391 = load float, float* %miny, align 4, !dbg !3761
  %add595 = fadd float %390, %391, !dbg !3762
  %arrayidx596 = getelementptr inbounds [2 x float], [2 x float]* %dxt, i64 0, i64 1, !dbg !3763
  %392 = load float, float* %arrayidx596, align 4, !dbg !3763
  %add597 = fadd float %add595, %392, !dbg !3764
  %393 = load i32, i32* %imaprepeat, align 4, !dbg !3765
  %conv598 = trunc i32 %393 to i16, !dbg !3765
  %394 = load i32, i32* %imapextend, align 4, !dbg !3766
  %conv599 = trunc i32 %394 to i16, !dbg !3766
  call void @boxsample(%struct.ImBuf* %380, float %add588, float %add591, float %add594, float %add597, %struct.TexResult* %texr, i16 signext %conv598, i16 signext %conv599), !dbg !3767
  %tr600 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texr, i32 0, i32 1, !dbg !3768
  %395 = load float, float* %tr600, align 4, !dbg !3768
  %tg601 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texr, i32 0, i32 2, !dbg !3769
  %396 = load float, float* %tg601, align 8, !dbg !3769
  %add602 = fadd float %395, %396, !dbg !3770
  %tb603 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texr, i32 0, i32 3, !dbg !3771
  %397 = load float, float* %tb603, align 4, !dbg !3771
  %add604 = fadd float %add602, %397, !dbg !3772
  store float %add604, float* %val2, align 4, !dbg !3773
  %398 = load %struct.ImBuf*, %struct.ImBuf** %curibuf, align 8, !dbg !3774
  %399 = load float, float* %fx, align 4, !dbg !3775
  %400 = load float, float* %minx, align 4, !dbg !3776
  %sub605 = fsub float %399, %400, !dbg !3777
  %arrayidx606 = getelementptr inbounds [2 x float], [2 x float]* %dyt, i64 0, i64 0, !dbg !3778
  %401 = load float, float* %arrayidx606, align 4, !dbg !3778
  %add607 = fadd float %sub605, %401, !dbg !3779
  %402 = load float, float* %fy, align 4, !dbg !3780
  %403 = load float, float* %miny, align 4, !dbg !3781
  %sub608 = fsub float %402, %403, !dbg !3782
  %arrayidx609 = getelementptr inbounds [2 x float], [2 x float]* %dyt, i64 0, i64 1, !dbg !3783
  %404 = load float, float* %arrayidx609, align 4, !dbg !3783
  %add610 = fadd float %sub608, %404, !dbg !3784
  %405 = load float, float* %fx, align 4, !dbg !3785
  %406 = load float, float* %minx, align 4, !dbg !3786
  %add611 = fadd float %405, %406, !dbg !3787
  %arrayidx612 = getelementptr inbounds [2 x float], [2 x float]* %dyt, i64 0, i64 0, !dbg !3788
  %407 = load float, float* %arrayidx612, align 4, !dbg !3788
  %add613 = fadd float %add611, %407, !dbg !3789
  %408 = load float, float* %fy, align 4, !dbg !3790
  %409 = load float, float* %miny, align 4, !dbg !3791
  %add614 = fadd float %408, %409, !dbg !3792
  %arrayidx615 = getelementptr inbounds [2 x float], [2 x float]* %dyt, i64 0, i64 1, !dbg !3793
  %410 = load float, float* %arrayidx615, align 4, !dbg !3793
  %add616 = fadd float %add614, %410, !dbg !3794
  %411 = load i32, i32* %imaprepeat, align 4, !dbg !3795
  %conv617 = trunc i32 %411 to i16, !dbg !3795
  %412 = load i32, i32* %imapextend, align 4, !dbg !3796
  %conv618 = trunc i32 %412 to i16, !dbg !3796
  call void @boxsample(%struct.ImBuf* %398, float %add607, float %add610, float %add613, float %add616, %struct.TexResult* %texr, i16 signext %conv617, i16 signext %conv618), !dbg !3797
  %tr619 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texr, i32 0, i32 1, !dbg !3798
  %413 = load float, float* %tr619, align 4, !dbg !3798
  %tg620 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texr, i32 0, i32 2, !dbg !3799
  %414 = load float, float* %tg620, align 8, !dbg !3799
  %add621 = fadd float %413, %414, !dbg !3800
  %tb622 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texr, i32 0, i32 3, !dbg !3801
  %415 = load float, float* %tb622, align 4, !dbg !3801
  %add623 = fadd float %add621, %415, !dbg !3802
  store float %add623, float* %val3, align 4, !dbg !3803
  %416 = load float, float* %val1, align 4, !dbg !3804
  %417 = load float, float* %val2, align 4, !dbg !3805
  %sub624 = fsub float %416, %417, !dbg !3806
  %418 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !3807
  %nor625 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %418, i32 0, i32 6, !dbg !3808
  %419 = load float*, float** %nor625, align 8, !dbg !3808
  %arrayidx626 = getelementptr inbounds float, float* %419, i64 0, !dbg !3807
  store float %sub624, float* %arrayidx626, align 4, !dbg !3809
  %420 = load float, float* %val1, align 4, !dbg !3810
  %421 = load float, float* %val3, align 4, !dbg !3811
  %sub627 = fsub float %420, %421, !dbg !3812
  %422 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !3813
  %nor628 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %422, i32 0, i32 6, !dbg !3814
  %423 = load float*, float** %nor628, align 8, !dbg !3814
  %arrayidx629 = getelementptr inbounds float, float* %423, i64 1, !dbg !3813
  store float %sub627, float* %arrayidx629, align 4, !dbg !3815
  %424 = load %struct.ImBuf*, %struct.ImBuf** %previbuf, align 8, !dbg !3816
  %425 = load %struct.ImBuf*, %struct.ImBuf** %curibuf, align 8, !dbg !3818
  %cmp630 = icmp ne %struct.ImBuf* %424, %425, !dbg !3819
  br i1 %cmp630, label %if.then632, label %if.end767, !dbg !3820

if.then632:                                       ; preds = %if.then574
  %426 = load %struct.ImBuf*, %struct.ImBuf** %previbuf, align 8, !dbg !3821
  %427 = load float, float* %fx, align 4, !dbg !3823
  %428 = load float, float* %minx, align 4, !dbg !3824
  %sub633 = fsub float %427, %428, !dbg !3825
  %429 = load float, float* %fy, align 4, !dbg !3826
  %430 = load float, float* %miny, align 4, !dbg !3827
  %sub634 = fsub float %429, %430, !dbg !3828
  %431 = load float, float* %fx, align 4, !dbg !3829
  %432 = load float, float* %minx, align 4, !dbg !3830
  %add635 = fadd float %431, %432, !dbg !3831
  %433 = load float, float* %fy, align 4, !dbg !3832
  %434 = load float, float* %miny, align 4, !dbg !3833
  %add636 = fadd float %433, %434, !dbg !3834
  %435 = load i32, i32* %imaprepeat, align 4, !dbg !3835
  %conv637 = trunc i32 %435 to i16, !dbg !3835
  %436 = load i32, i32* %imapextend, align 4, !dbg !3836
  %conv638 = trunc i32 %436 to i16, !dbg !3836
  call void @boxsample(%struct.ImBuf* %426, float %sub633, float %sub634, float %add635, float %add636, %struct.TexResult* %texr, i16 signext %conv637, i16 signext %conv638), !dbg !3837
  %437 = load float, float* %pixsize, align 4, !dbg !3838
  %438 = load float, float* %maxd, align 4, !dbg !3839
  %sub639 = fsub float %437, %438, !dbg !3840
  %mul640 = fmul float 2.000000e+00, %sub639, !dbg !3841
  %439 = load float, float* %pixsize, align 4, !dbg !3842
  %div641 = fdiv float %mul640, %439, !dbg !3843
  store float %div641, float* %dx, align 4, !dbg !3844
  %440 = load float, float* %dx, align 4, !dbg !3845
  %cmp642 = fcmp oge float %440, 1.000000e+00, !dbg !3847
  br i1 %cmp642, label %if.then644, label %if.else653, !dbg !3848

if.then644:                                       ; preds = %if.then632
  %ta645 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texr, i32 0, i32 4, !dbg !3849
  %441 = load float, float* %ta645, align 8, !dbg !3849
  %442 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !3851
  %ta646 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %442, i32 0, i32 4, !dbg !3852
  store float %441, float* %ta646, align 8, !dbg !3853
  %tb647 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texr, i32 0, i32 3, !dbg !3854
  %443 = load float, float* %tb647, align 4, !dbg !3854
  %444 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !3855
  %tb648 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %444, i32 0, i32 3, !dbg !3856
  store float %443, float* %tb648, align 4, !dbg !3857
  %tg649 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texr, i32 0, i32 2, !dbg !3858
  %445 = load float, float* %tg649, align 8, !dbg !3858
  %446 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !3859
  %tg650 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %446, i32 0, i32 2, !dbg !3860
  store float %445, float* %tg650, align 8, !dbg !3861
  %tr651 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texr, i32 0, i32 1, !dbg !3862
  %447 = load float, float* %tr651, align 4, !dbg !3862
  %448 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !3863
  %tr652 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %448, i32 0, i32 1, !dbg !3864
  store float %447, float* %tr652, align 4, !dbg !3865
  br label %if.end679, !dbg !3866

if.else653:                                       ; preds = %if.then632
  %449 = load float, float* %dx, align 4, !dbg !3867
  %sub654 = fsub float 1.000000e+00, %449, !dbg !3869
  store float %sub654, float* %dy, align 4, !dbg !3870
  %450 = load float, float* %dy, align 4, !dbg !3871
  %451 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !3872
  %tb655 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %451, i32 0, i32 3, !dbg !3873
  %452 = load float, float* %tb655, align 4, !dbg !3873
  %mul656 = fmul float %450, %452, !dbg !3874
  %453 = load float, float* %dx, align 4, !dbg !3875
  %tb657 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texr, i32 0, i32 3, !dbg !3876
  %454 = load float, float* %tb657, align 4, !dbg !3876
  %mul658 = fmul float %453, %454, !dbg !3877
  %add659 = fadd float %mul656, %mul658, !dbg !3878
  %455 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !3879
  %tb660 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %455, i32 0, i32 3, !dbg !3880
  store float %add659, float* %tb660, align 4, !dbg !3881
  %456 = load float, float* %dy, align 4, !dbg !3882
  %457 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !3883
  %tg661 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %457, i32 0, i32 2, !dbg !3884
  %458 = load float, float* %tg661, align 8, !dbg !3884
  %mul662 = fmul float %456, %458, !dbg !3885
  %459 = load float, float* %dx, align 4, !dbg !3886
  %tg663 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texr, i32 0, i32 2, !dbg !3887
  %460 = load float, float* %tg663, align 8, !dbg !3887
  %mul664 = fmul float %459, %460, !dbg !3888
  %add665 = fadd float %mul662, %mul664, !dbg !3889
  %461 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !3890
  %tg666 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %461, i32 0, i32 2, !dbg !3891
  store float %add665, float* %tg666, align 8, !dbg !3892
  %462 = load float, float* %dy, align 4, !dbg !3893
  %463 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !3894
  %tr667 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %463, i32 0, i32 1, !dbg !3895
  %464 = load float, float* %tr667, align 4, !dbg !3895
  %mul668 = fmul float %462, %464, !dbg !3896
  %465 = load float, float* %dx, align 4, !dbg !3897
  %tr669 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texr, i32 0, i32 1, !dbg !3898
  %466 = load float, float* %tr669, align 4, !dbg !3898
  %mul670 = fmul float %465, %466, !dbg !3899
  %add671 = fadd float %mul668, %mul670, !dbg !3900
  %467 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !3901
  %tr672 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %467, i32 0, i32 1, !dbg !3902
  store float %add671, float* %tr672, align 4, !dbg !3903
  %468 = load float, float* %dy, align 4, !dbg !3904
  %469 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !3905
  %ta673 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %469, i32 0, i32 4, !dbg !3906
  %470 = load float, float* %ta673, align 8, !dbg !3906
  %mul674 = fmul float %468, %470, !dbg !3907
  %471 = load float, float* %dx, align 4, !dbg !3908
  %ta675 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texr, i32 0, i32 4, !dbg !3909
  %472 = load float, float* %ta675, align 8, !dbg !3909
  %mul676 = fmul float %471, %472, !dbg !3910
  %add677 = fadd float %mul674, %mul676, !dbg !3911
  %473 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !3912
  %ta678 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %473, i32 0, i32 4, !dbg !3913
  store float %add677, float* %ta678, align 8, !dbg !3914
  br label %if.end679

if.end679:                                        ; preds = %if.else653, %if.then644
  %474 = load float, float* %dy, align 4, !dbg !3915
  %475 = load float, float* %val1, align 4, !dbg !3916
  %mul680 = fmul float %474, %475, !dbg !3917
  %476 = load float, float* %dx, align 4, !dbg !3918
  %tr681 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texr, i32 0, i32 1, !dbg !3919
  %477 = load float, float* %tr681, align 4, !dbg !3919
  %tg682 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texr, i32 0, i32 2, !dbg !3920
  %478 = load float, float* %tg682, align 8, !dbg !3920
  %add683 = fadd float %477, %478, !dbg !3921
  %tb684 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texr, i32 0, i32 3, !dbg !3922
  %479 = load float, float* %tb684, align 4, !dbg !3922
  %add685 = fadd float %add683, %479, !dbg !3923
  %mul686 = fmul float %476, %add685, !dbg !3924
  %add687 = fadd float %mul680, %mul686, !dbg !3925
  store float %add687, float* %val1, align 4, !dbg !3926
  %480 = load %struct.ImBuf*, %struct.ImBuf** %previbuf, align 8, !dbg !3927
  %481 = load float, float* %fx, align 4, !dbg !3928
  %482 = load float, float* %minx, align 4, !dbg !3929
  %sub688 = fsub float %481, %482, !dbg !3930
  %arrayidx689 = getelementptr inbounds [2 x float], [2 x float]* %dxt, i64 0, i64 0, !dbg !3931
  %483 = load float, float* %arrayidx689, align 4, !dbg !3931
  %add690 = fadd float %sub688, %483, !dbg !3932
  %484 = load float, float* %fy, align 4, !dbg !3933
  %485 = load float, float* %miny, align 4, !dbg !3934
  %sub691 = fsub float %484, %485, !dbg !3935
  %arrayidx692 = getelementptr inbounds [2 x float], [2 x float]* %dxt, i64 0, i64 1, !dbg !3936
  %486 = load float, float* %arrayidx692, align 4, !dbg !3936
  %add693 = fadd float %sub691, %486, !dbg !3937
  %487 = load float, float* %fx, align 4, !dbg !3938
  %488 = load float, float* %minx, align 4, !dbg !3939
  %add694 = fadd float %487, %488, !dbg !3940
  %arrayidx695 = getelementptr inbounds [2 x float], [2 x float]* %dxt, i64 0, i64 0, !dbg !3941
  %489 = load float, float* %arrayidx695, align 4, !dbg !3941
  %add696 = fadd float %add694, %489, !dbg !3942
  %490 = load float, float* %fy, align 4, !dbg !3943
  %491 = load float, float* %miny, align 4, !dbg !3944
  %add697 = fadd float %490, %491, !dbg !3945
  %arrayidx698 = getelementptr inbounds [2 x float], [2 x float]* %dxt, i64 0, i64 1, !dbg !3946
  %492 = load float, float* %arrayidx698, align 4, !dbg !3946
  %add699 = fadd float %add697, %492, !dbg !3947
  %493 = load i32, i32* %imaprepeat, align 4, !dbg !3948
  %conv700 = trunc i32 %493 to i16, !dbg !3948
  %494 = load i32, i32* %imapextend, align 4, !dbg !3949
  %conv701 = trunc i32 %494 to i16, !dbg !3949
  call void @boxsample(%struct.ImBuf* %480, float %add690, float %add693, float %add696, float %add699, %struct.TexResult* %texr, i16 signext %conv700, i16 signext %conv701), !dbg !3950
  %495 = load float, float* %dy, align 4, !dbg !3951
  %496 = load float, float* %val2, align 4, !dbg !3952
  %mul702 = fmul float %495, %496, !dbg !3953
  %497 = load float, float* %dx, align 4, !dbg !3954
  %tr703 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texr, i32 0, i32 1, !dbg !3955
  %498 = load float, float* %tr703, align 4, !dbg !3955
  %tg704 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texr, i32 0, i32 2, !dbg !3956
  %499 = load float, float* %tg704, align 8, !dbg !3956
  %add705 = fadd float %498, %499, !dbg !3957
  %tb706 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texr, i32 0, i32 3, !dbg !3958
  %500 = load float, float* %tb706, align 4, !dbg !3958
  %add707 = fadd float %add705, %500, !dbg !3959
  %mul708 = fmul float %497, %add707, !dbg !3960
  %add709 = fadd float %mul702, %mul708, !dbg !3961
  store float %add709, float* %val2, align 4, !dbg !3962
  %501 = load %struct.ImBuf*, %struct.ImBuf** %previbuf, align 8, !dbg !3963
  %502 = load float, float* %fx, align 4, !dbg !3964
  %503 = load float, float* %minx, align 4, !dbg !3965
  %sub710 = fsub float %502, %503, !dbg !3966
  %arrayidx711 = getelementptr inbounds [2 x float], [2 x float]* %dyt, i64 0, i64 0, !dbg !3967
  %504 = load float, float* %arrayidx711, align 4, !dbg !3967
  %add712 = fadd float %sub710, %504, !dbg !3968
  %505 = load float, float* %fy, align 4, !dbg !3969
  %506 = load float, float* %miny, align 4, !dbg !3970
  %sub713 = fsub float %505, %506, !dbg !3971
  %arrayidx714 = getelementptr inbounds [2 x float], [2 x float]* %dyt, i64 0, i64 1, !dbg !3972
  %507 = load float, float* %arrayidx714, align 4, !dbg !3972
  %add715 = fadd float %sub713, %507, !dbg !3973
  %508 = load float, float* %fx, align 4, !dbg !3974
  %509 = load float, float* %minx, align 4, !dbg !3975
  %add716 = fadd float %508, %509, !dbg !3976
  %arrayidx717 = getelementptr inbounds [2 x float], [2 x float]* %dyt, i64 0, i64 0, !dbg !3977
  %510 = load float, float* %arrayidx717, align 4, !dbg !3977
  %add718 = fadd float %add716, %510, !dbg !3978
  %511 = load float, float* %fy, align 4, !dbg !3979
  %512 = load float, float* %miny, align 4, !dbg !3980
  %add719 = fadd float %511, %512, !dbg !3981
  %arrayidx720 = getelementptr inbounds [2 x float], [2 x float]* %dyt, i64 0, i64 1, !dbg !3982
  %513 = load float, float* %arrayidx720, align 4, !dbg !3982
  %add721 = fadd float %add719, %513, !dbg !3983
  %514 = load i32, i32* %imaprepeat, align 4, !dbg !3984
  %conv722 = trunc i32 %514 to i16, !dbg !3984
  %515 = load i32, i32* %imapextend, align 4, !dbg !3985
  %conv723 = trunc i32 %515 to i16, !dbg !3985
  call void @boxsample(%struct.ImBuf* %501, float %add712, float %add715, float %add718, float %add721, %struct.TexResult* %texr, i16 signext %conv722, i16 signext %conv723), !dbg !3986
  %516 = load float, float* %dy, align 4, !dbg !3987
  %517 = load float, float* %val3, align 4, !dbg !3988
  %mul724 = fmul float %516, %517, !dbg !3989
  %518 = load float, float* %dx, align 4, !dbg !3990
  %tr725 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texr, i32 0, i32 1, !dbg !3991
  %519 = load float, float* %tr725, align 4, !dbg !3991
  %tg726 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texr, i32 0, i32 2, !dbg !3992
  %520 = load float, float* %tg726, align 8, !dbg !3992
  %add727 = fadd float %519, %520, !dbg !3993
  %tb728 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texr, i32 0, i32 3, !dbg !3994
  %521 = load float, float* %tb728, align 4, !dbg !3994
  %add729 = fadd float %add727, %521, !dbg !3995
  %mul730 = fmul float %518, %add729, !dbg !3996
  %add731 = fadd float %mul724, %mul730, !dbg !3997
  store float %add731, float* %val3, align 4, !dbg !3998
  %522 = load float, float* %val1, align 4, !dbg !3999
  %523 = load float, float* %val2, align 4, !dbg !4000
  %sub732 = fsub float %522, %523, !dbg !4001
  %524 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !4002
  %nor733 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %524, i32 0, i32 6, !dbg !4003
  %525 = load float*, float** %nor733, align 8, !dbg !4003
  %arrayidx734 = getelementptr inbounds float, float* %525, i64 0, !dbg !4002
  store float %sub732, float* %arrayidx734, align 4, !dbg !4004
  %526 = load float, float* %val1, align 4, !dbg !4005
  %527 = load float, float* %val3, align 4, !dbg !4006
  %sub735 = fsub float %526, %527, !dbg !4007
  %528 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !4008
  %nor736 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %528, i32 0, i32 6, !dbg !4009
  %529 = load float*, float** %nor736, align 8, !dbg !4009
  %arrayidx737 = getelementptr inbounds float, float* %529, i64 1, !dbg !4008
  store float %sub735, float* %arrayidx737, align 4, !dbg !4010
  %530 = load float, float* %dx, align 4, !dbg !4011
  %cmp738 = fcmp olt float %530, 1.000000e+00, !dbg !4013
  br i1 %cmp738, label %if.then740, label %if.end766, !dbg !4014

if.then740:                                       ; preds = %if.end679
  %531 = load float, float* %dx, align 4, !dbg !4015
  %sub741 = fsub float 1.000000e+00, %531, !dbg !4017
  store float %sub741, float* %dy, align 4, !dbg !4018
  %532 = load float, float* %dy, align 4, !dbg !4019
  %533 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !4020
  %tb742 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %533, i32 0, i32 3, !dbg !4021
  %534 = load float, float* %tb742, align 4, !dbg !4021
  %mul743 = fmul float %532, %534, !dbg !4022
  %535 = load float, float* %dx, align 4, !dbg !4023
  %tb744 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texr, i32 0, i32 3, !dbg !4024
  %536 = load float, float* %tb744, align 4, !dbg !4024
  %mul745 = fmul float %535, %536, !dbg !4025
  %add746 = fadd float %mul743, %mul745, !dbg !4026
  %537 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !4027
  %tb747 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %537, i32 0, i32 3, !dbg !4028
  store float %add746, float* %tb747, align 4, !dbg !4029
  %538 = load float, float* %dy, align 4, !dbg !4030
  %539 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !4031
  %tg748 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %539, i32 0, i32 2, !dbg !4032
  %540 = load float, float* %tg748, align 8, !dbg !4032
  %mul749 = fmul float %538, %540, !dbg !4033
  %541 = load float, float* %dx, align 4, !dbg !4034
  %tg750 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texr, i32 0, i32 2, !dbg !4035
  %542 = load float, float* %tg750, align 8, !dbg !4035
  %mul751 = fmul float %541, %542, !dbg !4036
  %add752 = fadd float %mul749, %mul751, !dbg !4037
  %543 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !4038
  %tg753 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %543, i32 0, i32 2, !dbg !4039
  store float %add752, float* %tg753, align 8, !dbg !4040
  %544 = load float, float* %dy, align 4, !dbg !4041
  %545 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !4042
  %tr754 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %545, i32 0, i32 1, !dbg !4043
  %546 = load float, float* %tr754, align 4, !dbg !4043
  %mul755 = fmul float %544, %546, !dbg !4044
  %547 = load float, float* %dx, align 4, !dbg !4045
  %tr756 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texr, i32 0, i32 1, !dbg !4046
  %548 = load float, float* %tr756, align 4, !dbg !4046
  %mul757 = fmul float %547, %548, !dbg !4047
  %add758 = fadd float %mul755, %mul757, !dbg !4048
  %549 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !4049
  %tr759 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %549, i32 0, i32 1, !dbg !4050
  store float %add758, float* %tr759, align 4, !dbg !4051
  %550 = load float, float* %dy, align 4, !dbg !4052
  %551 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !4053
  %ta760 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %551, i32 0, i32 4, !dbg !4054
  %552 = load float, float* %ta760, align 8, !dbg !4054
  %mul761 = fmul float %550, %552, !dbg !4055
  %553 = load float, float* %dx, align 4, !dbg !4056
  %ta762 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texr, i32 0, i32 4, !dbg !4057
  %554 = load float, float* %ta762, align 8, !dbg !4057
  %mul763 = fmul float %553, %554, !dbg !4058
  %add764 = fadd float %mul761, %mul763, !dbg !4059
  %555 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !4060
  %ta765 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %555, i32 0, i32 4, !dbg !4061
  store float %add764, float* %ta765, align 8, !dbg !4062
  br label %if.end766, !dbg !4063

if.end766:                                        ; preds = %if.then740, %if.end679
  br label %if.end767, !dbg !4064

if.end767:                                        ; preds = %if.end766, %if.then574
  %556 = load float, float* %bumpscale, align 4, !dbg !4065
  %557 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !4066
  %nor768 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %557, i32 0, i32 6, !dbg !4067
  %558 = load float*, float** %nor768, align 8, !dbg !4067
  %arrayidx769 = getelementptr inbounds float, float* %558, i64 0, !dbg !4066
  %559 = load float, float* %arrayidx769, align 4, !dbg !4068
  %mul770 = fmul float %559, %556, !dbg !4068
  store float %mul770, float* %arrayidx769, align 4, !dbg !4068
  %560 = load float, float* %bumpscale, align 4, !dbg !4069
  %561 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !4070
  %nor771 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %561, i32 0, i32 6, !dbg !4071
  %562 = load float*, float** %nor771, align 8, !dbg !4071
  %arrayidx772 = getelementptr inbounds float, float* %562, i64 1, !dbg !4070
  %563 = load float, float* %arrayidx772, align 4, !dbg !4072
  %mul773 = fmul float %563, %560, !dbg !4072
  store float %mul773, float* %arrayidx772, align 4, !dbg !4072
  br label %if.end828, !dbg !4073

if.else774:                                       ; preds = %land.lhs.true568, %if.end565
  %564 = load float, float* %fx, align 4, !dbg !4074
  %565 = load float, float* %minx, align 4, !dbg !4076
  %add775 = fadd float %564, %565, !dbg !4077
  store float %add775, float* %maxx, align 4, !dbg !4078
  %566 = load float, float* %fx, align 4, !dbg !4079
  %567 = load float, float* %minx, align 4, !dbg !4080
  %sub776 = fsub float %566, %567, !dbg !4081
  store float %sub776, float* %minx, align 4, !dbg !4082
  %568 = load float, float* %fy, align 4, !dbg !4083
  %569 = load float, float* %miny, align 4, !dbg !4084
  %add777 = fadd float %568, %569, !dbg !4085
  store float %add777, float* %maxy, align 4, !dbg !4086
  %570 = load float, float* %fy, align 4, !dbg !4087
  %571 = load float, float* %miny, align 4, !dbg !4088
  %sub778 = fsub float %570, %571, !dbg !4089
  store float %sub778, float* %miny, align 4, !dbg !4090
  %572 = load %struct.ImBuf*, %struct.ImBuf** %curibuf, align 8, !dbg !4091
  %573 = load float, float* %minx, align 4, !dbg !4092
  %574 = load float, float* %miny, align 4, !dbg !4093
  %575 = load float, float* %maxx, align 4, !dbg !4094
  %576 = load float, float* %maxy, align 4, !dbg !4095
  %577 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !4096
  %578 = load i32, i32* %imaprepeat, align 4, !dbg !4097
  %conv779 = trunc i32 %578 to i16, !dbg !4097
  %579 = load i32, i32* %imapextend, align 4, !dbg !4098
  %conv780 = trunc i32 %579 to i16, !dbg !4098
  call void @boxsample(%struct.ImBuf* %572, float %573, float %574, float %575, float %576, %struct.TexResult* %577, i16 signext %conv779, i16 signext %conv780), !dbg !4099
  %580 = load %struct.ImBuf*, %struct.ImBuf** %previbuf, align 8, !dbg !4100
  %581 = load %struct.ImBuf*, %struct.ImBuf** %curibuf, align 8, !dbg !4102
  %cmp781 = icmp ne %struct.ImBuf* %580, %581, !dbg !4103
  br i1 %cmp781, label %if.then783, label %if.end827, !dbg !4104

if.then783:                                       ; preds = %if.else774
  %582 = load %struct.ImBuf*, %struct.ImBuf** %previbuf, align 8, !dbg !4105
  %583 = load float, float* %minx, align 4, !dbg !4107
  %584 = load float, float* %miny, align 4, !dbg !4108
  %585 = load float, float* %maxx, align 4, !dbg !4109
  %586 = load float, float* %maxy, align 4, !dbg !4110
  %587 = load i32, i32* %imaprepeat, align 4, !dbg !4111
  %conv784 = trunc i32 %587 to i16, !dbg !4111
  %588 = load i32, i32* %imapextend, align 4, !dbg !4112
  %conv785 = trunc i32 %588 to i16, !dbg !4112
  call void @boxsample(%struct.ImBuf* %582, float %583, float %584, float %585, float %586, %struct.TexResult* %texr, i16 signext %conv784, i16 signext %conv785), !dbg !4113
  %589 = load float, float* %pixsize, align 4, !dbg !4114
  %590 = load float, float* %maxd, align 4, !dbg !4115
  %sub786 = fsub float %589, %590, !dbg !4116
  %mul787 = fmul float 2.000000e+00, %sub786, !dbg !4117
  %591 = load float, float* %pixsize, align 4, !dbg !4118
  %div788 = fdiv float %mul787, %591, !dbg !4119
  store float %div788, float* %fx, align 4, !dbg !4120
  %592 = load float, float* %fx, align 4, !dbg !4121
  %cmp789 = fcmp oge float %592, 1.000000e+00, !dbg !4123
  br i1 %cmp789, label %if.then791, label %if.else800, !dbg !4124

if.then791:                                       ; preds = %if.then783
  %ta792 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texr, i32 0, i32 4, !dbg !4125
  %593 = load float, float* %ta792, align 8, !dbg !4125
  %594 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !4127
  %ta793 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %594, i32 0, i32 4, !dbg !4128
  store float %593, float* %ta793, align 8, !dbg !4129
  %tb794 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texr, i32 0, i32 3, !dbg !4130
  %595 = load float, float* %tb794, align 4, !dbg !4130
  %596 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !4131
  %tb795 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %596, i32 0, i32 3, !dbg !4132
  store float %595, float* %tb795, align 4, !dbg !4133
  %tg796 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texr, i32 0, i32 2, !dbg !4134
  %597 = load float, float* %tg796, align 8, !dbg !4134
  %598 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !4135
  %tg797 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %598, i32 0, i32 2, !dbg !4136
  store float %597, float* %tg797, align 8, !dbg !4137
  %tr798 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texr, i32 0, i32 1, !dbg !4138
  %599 = load float, float* %tr798, align 4, !dbg !4138
  %600 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !4139
  %tr799 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %600, i32 0, i32 1, !dbg !4140
  store float %599, float* %tr799, align 4, !dbg !4141
  br label %if.end826, !dbg !4142

if.else800:                                       ; preds = %if.then783
  %601 = load float, float* %fx, align 4, !dbg !4143
  %sub801 = fsub float 1.000000e+00, %601, !dbg !4145
  store float %sub801, float* %fy, align 4, !dbg !4146
  %602 = load float, float* %fy, align 4, !dbg !4147
  %603 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !4148
  %tb802 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %603, i32 0, i32 3, !dbg !4149
  %604 = load float, float* %tb802, align 4, !dbg !4149
  %mul803 = fmul float %602, %604, !dbg !4150
  %605 = load float, float* %fx, align 4, !dbg !4151
  %tb804 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texr, i32 0, i32 3, !dbg !4152
  %606 = load float, float* %tb804, align 4, !dbg !4152
  %mul805 = fmul float %605, %606, !dbg !4153
  %add806 = fadd float %mul803, %mul805, !dbg !4154
  %607 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !4155
  %tb807 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %607, i32 0, i32 3, !dbg !4156
  store float %add806, float* %tb807, align 4, !dbg !4157
  %608 = load float, float* %fy, align 4, !dbg !4158
  %609 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !4159
  %tg808 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %609, i32 0, i32 2, !dbg !4160
  %610 = load float, float* %tg808, align 8, !dbg !4160
  %mul809 = fmul float %608, %610, !dbg !4161
  %611 = load float, float* %fx, align 4, !dbg !4162
  %tg810 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texr, i32 0, i32 2, !dbg !4163
  %612 = load float, float* %tg810, align 8, !dbg !4163
  %mul811 = fmul float %611, %612, !dbg !4164
  %add812 = fadd float %mul809, %mul811, !dbg !4165
  %613 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !4166
  %tg813 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %613, i32 0, i32 2, !dbg !4167
  store float %add812, float* %tg813, align 8, !dbg !4168
  %614 = load float, float* %fy, align 4, !dbg !4169
  %615 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !4170
  %tr814 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %615, i32 0, i32 1, !dbg !4171
  %616 = load float, float* %tr814, align 4, !dbg !4171
  %mul815 = fmul float %614, %616, !dbg !4172
  %617 = load float, float* %fx, align 4, !dbg !4173
  %tr816 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texr, i32 0, i32 1, !dbg !4174
  %618 = load float, float* %tr816, align 4, !dbg !4174
  %mul817 = fmul float %617, %618, !dbg !4175
  %add818 = fadd float %mul815, %mul817, !dbg !4176
  %619 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !4177
  %tr819 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %619, i32 0, i32 1, !dbg !4178
  store float %add818, float* %tr819, align 4, !dbg !4179
  %620 = load float, float* %fy, align 4, !dbg !4180
  %621 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !4181
  %ta820 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %621, i32 0, i32 4, !dbg !4182
  %622 = load float, float* %ta820, align 8, !dbg !4182
  %mul821 = fmul float %620, %622, !dbg !4183
  %623 = load float, float* %fx, align 4, !dbg !4184
  %ta822 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texr, i32 0, i32 4, !dbg !4185
  %624 = load float, float* %ta822, align 8, !dbg !4185
  %mul823 = fmul float %623, %624, !dbg !4186
  %add824 = fadd float %mul821, %mul823, !dbg !4187
  %625 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !4188
  %ta825 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %625, i32 0, i32 4, !dbg !4189
  store float %add824, float* %ta825, align 8, !dbg !4190
  br label %if.end826

if.end826:                                        ; preds = %if.else800, %if.then791
  br label %if.end827, !dbg !4191

if.end827:                                        ; preds = %if.end826, %if.else774
  br label %if.end828

if.end828:                                        ; preds = %if.end827, %if.end767
  br label %if.end928, !dbg !4192

if.else829:                                       ; preds = %if.end484
  call void @llvm.dbg.declare(metadata i32* %intpol, metadata !4193, metadata !DIExpression()), !dbg !4196
  %626 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !4197
  %imaflag830 = getelementptr inbounds %struct.Tex, %struct.Tex* %626, i32 0, i32 30, !dbg !4198
  %627 = load i16, i16* %imaflag830, align 4, !dbg !4198
  %conv831 = sext i16 %627 to i32, !dbg !4197
  %and832 = and i32 %conv831, 1, !dbg !4199
  store i32 %and832, i32* %intpol, align 4, !dbg !4196
  %628 = load i32, i32* %intpol, align 4, !dbg !4200
  %tobool833 = icmp ne i32 %628, 0, !dbg !4200
  br i1 %tobool833, label %if.then834, label %if.end855, !dbg !4202

if.then834:                                       ; preds = %if.else829
  %629 = load float, float* %minx, align 4, !dbg !4203
  %630 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !4206
  %x835 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %630, i32 0, i32 2, !dbg !4207
  %631 = load i32, i32* %x835, align 8, !dbg !4207
  %conv836 = sitofp i32 %631 to float, !dbg !4206
  %div837 = fdiv float 5.000000e-01, %conv836, !dbg !4208
  %cmp838 = fcmp olt float %629, %div837, !dbg !4209
  br i1 %cmp838, label %if.then840, label %if.end844, !dbg !4210

if.then840:                                       ; preds = %if.then834
  %632 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !4211
  %x841 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %632, i32 0, i32 2, !dbg !4212
  %633 = load i32, i32* %x841, align 8, !dbg !4212
  %conv842 = sitofp i32 %633 to float, !dbg !4211
  %div843 = fdiv float 5.000000e-01, %conv842, !dbg !4213
  store float %div843, float* %minx, align 4, !dbg !4214
  br label %if.end844, !dbg !4215

if.end844:                                        ; preds = %if.then840, %if.then834
  %634 = load float, float* %miny, align 4, !dbg !4216
  %635 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !4218
  %y845 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %635, i32 0, i32 3, !dbg !4219
  %636 = load i32, i32* %y845, align 4, !dbg !4219
  %conv846 = sitofp i32 %636 to float, !dbg !4218
  %div847 = fdiv float 5.000000e-01, %conv846, !dbg !4220
  %cmp848 = fcmp olt float %634, %div847, !dbg !4221
  br i1 %cmp848, label %if.then850, label %if.end854, !dbg !4222

if.then850:                                       ; preds = %if.end844
  %637 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !4223
  %y851 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %637, i32 0, i32 3, !dbg !4224
  %638 = load i32, i32* %y851, align 4, !dbg !4224
  %conv852 = sitofp i32 %638 to float, !dbg !4223
  %div853 = fdiv float 5.000000e-01, %conv852, !dbg !4225
  store float %div853, float* %miny, align 4, !dbg !4226
  br label %if.end854, !dbg !4227

if.end854:                                        ; preds = %if.then850, %if.end844
  br label %if.end855, !dbg !4228

if.end855:                                        ; preds = %if.end854, %if.else829
  %639 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !4229
  %nor856 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %639, i32 0, i32 6, !dbg !4231
  %640 = load float*, float** %nor856, align 8, !dbg !4231
  %tobool857 = icmp ne float* %640, null, !dbg !4229
  br i1 %tobool857, label %land.lhs.true858, label %if.else920, !dbg !4232

land.lhs.true858:                                 ; preds = %if.end855
  %641 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !4233
  %imaflag859 = getelementptr inbounds %struct.Tex, %struct.Tex* %641, i32 0, i32 30, !dbg !4234
  %642 = load i16, i16* %imaflag859, align 4, !dbg !4234
  %conv860 = sext i16 %642 to i32, !dbg !4233
  %and861 = and i32 %conv860, 2048, !dbg !4235
  %cmp862 = icmp eq i32 %and861, 0, !dbg !4236
  br i1 %cmp862, label %if.then864, label %if.else920, !dbg !4237

if.then864:                                       ; preds = %land.lhs.true858
  %643 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !4238
  %644 = load float, float* %fx, align 4, !dbg !4240
  %645 = load float, float* %minx, align 4, !dbg !4241
  %sub865 = fsub float %644, %645, !dbg !4242
  %646 = load float, float* %fy, align 4, !dbg !4243
  %647 = load float, float* %miny, align 4, !dbg !4244
  %sub866 = fsub float %646, %647, !dbg !4245
  %648 = load float, float* %fx, align 4, !dbg !4246
  %649 = load float, float* %minx, align 4, !dbg !4247
  %add867 = fadd float %648, %649, !dbg !4248
  %650 = load float, float* %fy, align 4, !dbg !4249
  %651 = load float, float* %miny, align 4, !dbg !4250
  %add868 = fadd float %650, %651, !dbg !4251
  %652 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !4252
  %653 = load i32, i32* %imaprepeat, align 4, !dbg !4253
  %conv869 = trunc i32 %653 to i16, !dbg !4253
  %654 = load i32, i32* %imapextend, align 4, !dbg !4254
  %conv870 = trunc i32 %654 to i16, !dbg !4254
  call void @boxsample(%struct.ImBuf* %643, float %sub865, float %sub866, float %add867, float %add868, %struct.TexResult* %652, i16 signext %conv869, i16 signext %conv870), !dbg !4255
  %655 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !4256
  %tr871 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %655, i32 0, i32 1, !dbg !4257
  %656 = load float, float* %tr871, align 4, !dbg !4257
  %657 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !4258
  %tg872 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %657, i32 0, i32 2, !dbg !4259
  %658 = load float, float* %tg872, align 8, !dbg !4259
  %add873 = fadd float %656, %658, !dbg !4260
  %659 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !4261
  %tb874 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %659, i32 0, i32 3, !dbg !4262
  %660 = load float, float* %tb874, align 4, !dbg !4262
  %add875 = fadd float %add873, %660, !dbg !4263
  store float %add875, float* %val1, align 4, !dbg !4264
  %661 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !4265
  %662 = load float, float* %fx, align 4, !dbg !4266
  %663 = load float, float* %minx, align 4, !dbg !4267
  %sub876 = fsub float %662, %663, !dbg !4268
  %arrayidx877 = getelementptr inbounds [2 x float], [2 x float]* %dxt, i64 0, i64 0, !dbg !4269
  %664 = load float, float* %arrayidx877, align 4, !dbg !4269
  %add878 = fadd float %sub876, %664, !dbg !4270
  %665 = load float, float* %fy, align 4, !dbg !4271
  %666 = load float, float* %miny, align 4, !dbg !4272
  %sub879 = fsub float %665, %666, !dbg !4273
  %arrayidx880 = getelementptr inbounds [2 x float], [2 x float]* %dxt, i64 0, i64 1, !dbg !4274
  %667 = load float, float* %arrayidx880, align 4, !dbg !4274
  %add881 = fadd float %sub879, %667, !dbg !4275
  %668 = load float, float* %fx, align 4, !dbg !4276
  %669 = load float, float* %minx, align 4, !dbg !4277
  %add882 = fadd float %668, %669, !dbg !4278
  %arrayidx883 = getelementptr inbounds [2 x float], [2 x float]* %dxt, i64 0, i64 0, !dbg !4279
  %670 = load float, float* %arrayidx883, align 4, !dbg !4279
  %add884 = fadd float %add882, %670, !dbg !4280
  %671 = load float, float* %fy, align 4, !dbg !4281
  %672 = load float, float* %miny, align 4, !dbg !4282
  %add885 = fadd float %671, %672, !dbg !4283
  %arrayidx886 = getelementptr inbounds [2 x float], [2 x float]* %dxt, i64 0, i64 1, !dbg !4284
  %673 = load float, float* %arrayidx886, align 4, !dbg !4284
  %add887 = fadd float %add885, %673, !dbg !4285
  %674 = load i32, i32* %imaprepeat, align 4, !dbg !4286
  %conv888 = trunc i32 %674 to i16, !dbg !4286
  %675 = load i32, i32* %imapextend, align 4, !dbg !4287
  %conv889 = trunc i32 %675 to i16, !dbg !4287
  call void @boxsample(%struct.ImBuf* %661, float %add878, float %add881, float %add884, float %add887, %struct.TexResult* %texr, i16 signext %conv888, i16 signext %conv889), !dbg !4288
  %tr890 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texr, i32 0, i32 1, !dbg !4289
  %676 = load float, float* %tr890, align 4, !dbg !4289
  %tg891 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texr, i32 0, i32 2, !dbg !4290
  %677 = load float, float* %tg891, align 8, !dbg !4290
  %add892 = fadd float %676, %677, !dbg !4291
  %tb893 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texr, i32 0, i32 3, !dbg !4292
  %678 = load float, float* %tb893, align 4, !dbg !4292
  %add894 = fadd float %add892, %678, !dbg !4293
  store float %add894, float* %val2, align 4, !dbg !4294
  %679 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !4295
  %680 = load float, float* %fx, align 4, !dbg !4296
  %681 = load float, float* %minx, align 4, !dbg !4297
  %sub895 = fsub float %680, %681, !dbg !4298
  %arrayidx896 = getelementptr inbounds [2 x float], [2 x float]* %dyt, i64 0, i64 0, !dbg !4299
  %682 = load float, float* %arrayidx896, align 4, !dbg !4299
  %add897 = fadd float %sub895, %682, !dbg !4300
  %683 = load float, float* %fy, align 4, !dbg !4301
  %684 = load float, float* %miny, align 4, !dbg !4302
  %sub898 = fsub float %683, %684, !dbg !4303
  %arrayidx899 = getelementptr inbounds [2 x float], [2 x float]* %dyt, i64 0, i64 1, !dbg !4304
  %685 = load float, float* %arrayidx899, align 4, !dbg !4304
  %add900 = fadd float %sub898, %685, !dbg !4305
  %686 = load float, float* %fx, align 4, !dbg !4306
  %687 = load float, float* %minx, align 4, !dbg !4307
  %add901 = fadd float %686, %687, !dbg !4308
  %arrayidx902 = getelementptr inbounds [2 x float], [2 x float]* %dyt, i64 0, i64 0, !dbg !4309
  %688 = load float, float* %arrayidx902, align 4, !dbg !4309
  %add903 = fadd float %add901, %688, !dbg !4310
  %689 = load float, float* %fy, align 4, !dbg !4311
  %690 = load float, float* %miny, align 4, !dbg !4312
  %add904 = fadd float %689, %690, !dbg !4313
  %arrayidx905 = getelementptr inbounds [2 x float], [2 x float]* %dyt, i64 0, i64 1, !dbg !4314
  %691 = load float, float* %arrayidx905, align 4, !dbg !4314
  %add906 = fadd float %add904, %691, !dbg !4315
  %692 = load i32, i32* %imaprepeat, align 4, !dbg !4316
  %conv907 = trunc i32 %692 to i16, !dbg !4316
  %693 = load i32, i32* %imapextend, align 4, !dbg !4317
  %conv908 = trunc i32 %693 to i16, !dbg !4317
  call void @boxsample(%struct.ImBuf* %679, float %add897, float %add900, float %add903, float %add906, %struct.TexResult* %texr, i16 signext %conv907, i16 signext %conv908), !dbg !4318
  %tr909 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texr, i32 0, i32 1, !dbg !4319
  %694 = load float, float* %tr909, align 4, !dbg !4319
  %tg910 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texr, i32 0, i32 2, !dbg !4320
  %695 = load float, float* %tg910, align 8, !dbg !4320
  %add911 = fadd float %694, %695, !dbg !4321
  %tb912 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texr, i32 0, i32 3, !dbg !4322
  %696 = load float, float* %tb912, align 4, !dbg !4322
  %add913 = fadd float %add911, %696, !dbg !4323
  store float %add913, float* %val3, align 4, !dbg !4324
  %697 = load float, float* %val1, align 4, !dbg !4325
  %698 = load float, float* %val2, align 4, !dbg !4326
  %sub914 = fsub float %697, %698, !dbg !4327
  %699 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !4328
  %nor915 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %699, i32 0, i32 6, !dbg !4329
  %700 = load float*, float** %nor915, align 8, !dbg !4329
  %arrayidx916 = getelementptr inbounds float, float* %700, i64 0, !dbg !4328
  store float %sub914, float* %arrayidx916, align 4, !dbg !4330
  %701 = load float, float* %val1, align 4, !dbg !4331
  %702 = load float, float* %val3, align 4, !dbg !4332
  %sub917 = fsub float %701, %702, !dbg !4333
  %703 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !4334
  %nor918 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %703, i32 0, i32 6, !dbg !4335
  %704 = load float*, float** %nor918, align 8, !dbg !4335
  %arrayidx919 = getelementptr inbounds float, float* %704, i64 1, !dbg !4334
  store float %sub917, float* %arrayidx919, align 4, !dbg !4336
  br label %if.end927, !dbg !4337

if.else920:                                       ; preds = %land.lhs.true858, %if.end855
  %705 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !4338
  %706 = load float, float* %fx, align 4, !dbg !4339
  %707 = load float, float* %minx, align 4, !dbg !4340
  %sub921 = fsub float %706, %707, !dbg !4341
  %708 = load float, float* %fy, align 4, !dbg !4342
  %709 = load float, float* %miny, align 4, !dbg !4343
  %sub922 = fsub float %708, %709, !dbg !4344
  %710 = load float, float* %fx, align 4, !dbg !4345
  %711 = load float, float* %minx, align 4, !dbg !4346
  %add923 = fadd float %710, %711, !dbg !4347
  %712 = load float, float* %fy, align 4, !dbg !4348
  %713 = load float, float* %miny, align 4, !dbg !4349
  %add924 = fadd float %712, %713, !dbg !4350
  %714 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !4351
  %715 = load i32, i32* %imaprepeat, align 4, !dbg !4352
  %conv925 = trunc i32 %715 to i16, !dbg !4352
  %716 = load i32, i32* %imapextend, align 4, !dbg !4353
  %conv926 = trunc i32 %716 to i16, !dbg !4353
  call void @boxsample(%struct.ImBuf* %705, float %sub921, float %sub922, float %add923, float %add924, %struct.TexResult* %714, i16 signext %conv925, i16 signext %conv926), !dbg !4354
  br label %if.end927

if.end927:                                        ; preds = %if.else920, %if.then864
  br label %if.end928

if.end928:                                        ; preds = %if.end927, %if.end828
  %717 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !4355
  %imaflag929 = getelementptr inbounds %struct.Tex, %struct.Tex* %717, i32 0, i32 30, !dbg !4357
  %718 = load i16, i16* %imaflag929, align 4, !dbg !4357
  %conv930 = sext i16 %718 to i32, !dbg !4355
  %and931 = and i32 %conv930, 32, !dbg !4358
  %tobool932 = icmp ne i32 %and931, 0, !dbg !4358
  br i1 %tobool932, label %if.then933, label %if.else942, !dbg !4359

if.then933:                                       ; preds = %if.end928
  %719 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !4360
  %ta934 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %719, i32 0, i32 4, !dbg !4362
  %720 = load float, float* %ta934, align 8, !dbg !4362
  %721 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !4363
  %tr935 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %721, i32 0, i32 1, !dbg !4364
  %722 = load float, float* %tr935, align 4, !dbg !4364
  %723 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !4365
  %tg936 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %723, i32 0, i32 2, !dbg !4366
  %724 = load float, float* %tg936, align 8, !dbg !4366
  %725 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !4367
  %tb937 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %725, i32 0, i32 3, !dbg !4368
  %726 = load float, float* %tb937, align 4, !dbg !4368
  %call938 = call float @max_fff(float %722, float %724, float %726), !dbg !4369
  %mul939 = fmul float %720, %call938, !dbg !4370
  %727 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !4371
  %tin940 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %727, i32 0, i32 0, !dbg !4372
  store float %mul939, float* %tin940, align 8, !dbg !4373
  %728 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !4374
  %ta941 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %728, i32 0, i32 4, !dbg !4375
  store float %mul939, float* %ta941, align 8, !dbg !4376
  br label %if.end945, !dbg !4377

if.else942:                                       ; preds = %if.end928
  %729 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !4378
  %ta943 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %729, i32 0, i32 4, !dbg !4380
  %730 = load float, float* %ta943, align 8, !dbg !4380
  %731 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !4381
  %tin944 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %731, i32 0, i32 0, !dbg !4382
  store float %730, float* %tin944, align 8, !dbg !4383
  br label %if.end945

if.end945:                                        ; preds = %if.else942, %if.then933
  %732 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !4384
  %flag946 = getelementptr inbounds %struct.Tex, %struct.Tex* %732, i32 0, i32 31, !dbg !4386
  %733 = load i16, i16* %flag946, align 2, !dbg !4386
  %conv947 = sext i16 %733 to i32, !dbg !4384
  %and948 = and i32 %conv947, 4, !dbg !4387
  %tobool949 = icmp ne i32 %and948, 0, !dbg !4387
  br i1 %tobool949, label %if.then950, label %if.end954, !dbg !4388

if.then950:                                       ; preds = %if.end945
  %734 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !4389
  %ta951 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %734, i32 0, i32 4, !dbg !4390
  %735 = load float, float* %ta951, align 8, !dbg !4390
  %sub952 = fsub float 1.000000e+00, %735, !dbg !4391
  %736 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !4392
  %ta953 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %736, i32 0, i32 4, !dbg !4393
  store float %sub952, float* %ta953, align 8, !dbg !4394
  br label %if.end954, !dbg !4392

if.end954:                                        ; preds = %if.then950, %if.end945
  %737 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 4), align 8, !dbg !4395
  %conv955 = sext i16 %737 to i32, !dbg !4397
  %and956 = and i32 %conv955, 4, !dbg !4398
  %tobool957 = icmp ne i32 %and956, 0, !dbg !4398
  br i1 %tobool957, label %land.lhs.true958, label %if.end969, !dbg !4399

land.lhs.true958:                                 ; preds = %if.end954
  %738 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !4400
  %flags959 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %738, i32 0, i32 6, !dbg !4401
  %739 = load i32, i32* %flags959, align 8, !dbg !4401
  %and960 = and i32 %739, 4, !dbg !4402
  %tobool961 = icmp ne i32 %and960, 0, !dbg !4402
  br i1 %tobool961, label %if.then962, label %if.end969, !dbg !4403

if.then962:                                       ; preds = %land.lhs.true958
  %740 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !4404
  %x963 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %740, i32 0, i32 2, !dbg !4406
  %741 = load i32, i32* %x963, align 8, !dbg !4406
  %742 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !4407
  %y964 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %742, i32 0, i32 3, !dbg !4408
  %743 = load i32, i32* %y964, align 4, !dbg !4408
  %mul965 = mul nsw i32 %741, %743, !dbg !4409
  %744 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !4410
  %rect966 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %744, i32 0, i32 8, !dbg !4411
  %745 = load i32*, i32** %rect966, align 8, !dbg !4412
  %idx.ext967 = sext i32 %mul965 to i64, !dbg !4412
  %idx.neg = sub i64 0, %idx.ext967, !dbg !4412
  %add.ptr968 = getelementptr inbounds i32, i32* %745, i64 %idx.neg, !dbg !4412
  store i32* %add.ptr968, i32** %rect966, align 8, !dbg !4412
  br label %if.end969, !dbg !4413

if.end969:                                        ; preds = %if.then962, %land.lhs.true958, %if.end954
  %746 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !4414
  %nor970 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %746, i32 0, i32 6, !dbg !4416
  %747 = load float*, float** %nor970, align 8, !dbg !4416
  %tobool971 = icmp ne float* %747, null, !dbg !4414
  br i1 %tobool971, label %land.lhs.true972, label %if.end993, !dbg !4417

land.lhs.true972:                                 ; preds = %if.end969
  %748 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !4418
  %imaflag973 = getelementptr inbounds %struct.Tex, %struct.Tex* %748, i32 0, i32 30, !dbg !4419
  %749 = load i16, i16* %imaflag973, align 4, !dbg !4419
  %conv974 = sext i16 %749 to i32, !dbg !4418
  %and975 = and i32 %conv974, 2048, !dbg !4420
  %tobool976 = icmp ne i32 %and975, 0, !dbg !4420
  br i1 %tobool976, label %if.then977, label %if.end993, !dbg !4421

if.then977:                                       ; preds = %land.lhs.true972
  %750 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !4422
  %tr978 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %750, i32 0, i32 1, !dbg !4424
  %751 = load float, float* %tr978, align 4, !dbg !4424
  %sub979 = fsub float %751, 5.000000e-01, !dbg !4425
  %mul980 = fmul float -2.000000e+00, %sub979, !dbg !4426
  %752 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !4427
  %nor981 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %752, i32 0, i32 6, !dbg !4428
  %753 = load float*, float** %nor981, align 8, !dbg !4428
  %arrayidx982 = getelementptr inbounds float, float* %753, i64 0, !dbg !4427
  store float %mul980, float* %arrayidx982, align 4, !dbg !4429
  %754 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !4430
  %tg983 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %754, i32 0, i32 2, !dbg !4431
  %755 = load float, float* %tg983, align 8, !dbg !4431
  %sub984 = fsub float %755, 5.000000e-01, !dbg !4432
  %mul985 = fmul float 2.000000e+00, %sub984, !dbg !4433
  %756 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !4434
  %nor986 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %756, i32 0, i32 6, !dbg !4435
  %757 = load float*, float** %nor986, align 8, !dbg !4435
  %arrayidx987 = getelementptr inbounds float, float* %757, i64 1, !dbg !4434
  store float %mul985, float* %arrayidx987, align 4, !dbg !4436
  %758 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !4437
  %tb988 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %758, i32 0, i32 3, !dbg !4438
  %759 = load float, float* %tb988, align 4, !dbg !4438
  %sub989 = fsub float %759, 5.000000e-01, !dbg !4439
  %mul990 = fmul float 2.000000e+00, %sub989, !dbg !4440
  %760 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !4441
  %nor991 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %760, i32 0, i32 6, !dbg !4442
  %761 = load float*, float** %nor991, align 8, !dbg !4442
  %arrayidx992 = getelementptr inbounds float, float* %761, i64 2, !dbg !4441
  store float %mul990, float* %arrayidx992, align 4, !dbg !4443
  br label %if.end993, !dbg !4444

if.end993:                                        ; preds = %if.then977, %land.lhs.true972, %if.end969
  %762 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !4445
  %ta994 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %762, i32 0, i32 4, !dbg !4447
  %763 = load float, float* %ta994, align 8, !dbg !4447
  %cmp995 = fcmp une float %763, 1.000000e+00, !dbg !4448
  br i1 %cmp995, label %land.lhs.true997, label %if.end1010, !dbg !4449

land.lhs.true997:                                 ; preds = %if.end993
  %764 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !4450
  %ta998 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %764, i32 0, i32 4, !dbg !4451
  %765 = load float, float* %ta998, align 8, !dbg !4451
  %cmp999 = fcmp ogt float %765, 0x3F1A36E2E0000000, !dbg !4452
  br i1 %cmp999, label %land.lhs.true1001, label %if.end1010, !dbg !4453

land.lhs.true1001:                                ; preds = %land.lhs.true997
  %766 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !4454
  %imaflag1002 = getelementptr inbounds %struct.Tex, %struct.Tex* %766, i32 0, i32 30, !dbg !4455
  %767 = load i16, i16* %imaflag1002, align 4, !dbg !4455
  %conv1003 = sext i16 %767 to i32, !dbg !4454
  %and1004 = and i32 %conv1003, 32, !dbg !4456
  %tobool1005 = icmp ne i32 %and1004, 0, !dbg !4456
  br i1 %tobool1005, label %if.end1010, label %if.then1006, !dbg !4457

if.then1006:                                      ; preds = %land.lhs.true1001
  %768 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !4458
  %tr1007 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %768, i32 0, i32 1, !dbg !4460
  %769 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !4461
  %ta1008 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %769, i32 0, i32 4, !dbg !4462
  %770 = load float, float* %ta1008, align 8, !dbg !4462
  %div1009 = fdiv float 1.000000e+00, %770, !dbg !4463
  call void @mul_v3_fl(float* %tr1007, float %div1009), !dbg !4464
  br label %if.end1010, !dbg !4465

if.end1010:                                       ; preds = %if.then1006, %land.lhs.true1001, %land.lhs.true997, %if.end993
  %771 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !4466
  %tobool1011 = icmp ne %struct.Image* %771, null, !dbg !4466
  br i1 %tobool1011, label %if.then1012, label %if.end1013, !dbg !4468

if.then1012:                                      ; preds = %if.end1010
  %772 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !4469
  %773 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !4470
  %774 = load %struct.ImagePool*, %struct.ImagePool** %pool.addr, align 8, !dbg !4471
  call void @BKE_image_pool_release_ibuf(%struct.Image* %772, %struct.ImBuf* %773, %struct.ImagePool* %774), !dbg !4472
  br label %if.end1013, !dbg !4472

if.end1013:                                       ; preds = %if.then1012, %if.end1010
  %775 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !4473
  %rfac = getelementptr inbounds %struct.Tex, %struct.Tex* %775, i32 0, i32 7, !dbg !4473
  %776 = load float, float* %rfac, align 4, !dbg !4473
  %777 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !4473
  %tr1014 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %777, i32 0, i32 1, !dbg !4473
  %778 = load float, float* %tr1014, align 4, !dbg !4473
  %sub1015 = fsub float %778, 5.000000e-01, !dbg !4473
  %779 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !4473
  %contrast = getelementptr inbounds %struct.Tex, %struct.Tex* %779, i32 0, i32 5, !dbg !4473
  %780 = load float, float* %contrast, align 4, !dbg !4473
  %mul1016 = fmul float %sub1015, %780, !dbg !4473
  %781 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !4473
  %bright = getelementptr inbounds %struct.Tex, %struct.Tex* %781, i32 0, i32 4, !dbg !4473
  %782 = load float, float* %bright, align 8, !dbg !4473
  %add1017 = fadd float %mul1016, %782, !dbg !4473
  %sub1018 = fsub float %add1017, 5.000000e-01, !dbg !4473
  %mul1019 = fmul float %776, %sub1018, !dbg !4473
  %783 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !4473
  %tr1020 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %783, i32 0, i32 1, !dbg !4473
  store float %mul1019, float* %tr1020, align 4, !dbg !4473
  %784 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !4473
  %gfac = getelementptr inbounds %struct.Tex, %struct.Tex* %784, i32 0, i32 8, !dbg !4473
  %785 = load float, float* %gfac, align 8, !dbg !4473
  %786 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !4473
  %tg1021 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %786, i32 0, i32 2, !dbg !4473
  %787 = load float, float* %tg1021, align 8, !dbg !4473
  %sub1022 = fsub float %787, 5.000000e-01, !dbg !4473
  %788 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !4473
  %contrast1023 = getelementptr inbounds %struct.Tex, %struct.Tex* %788, i32 0, i32 5, !dbg !4473
  %789 = load float, float* %contrast1023, align 4, !dbg !4473
  %mul1024 = fmul float %sub1022, %789, !dbg !4473
  %790 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !4473
  %bright1025 = getelementptr inbounds %struct.Tex, %struct.Tex* %790, i32 0, i32 4, !dbg !4473
  %791 = load float, float* %bright1025, align 8, !dbg !4473
  %add1026 = fadd float %mul1024, %791, !dbg !4473
  %sub1027 = fsub float %add1026, 5.000000e-01, !dbg !4473
  %mul1028 = fmul float %785, %sub1027, !dbg !4473
  %792 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !4473
  %tg1029 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %792, i32 0, i32 2, !dbg !4473
  store float %mul1028, float* %tg1029, align 8, !dbg !4473
  %793 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !4473
  %bfac = getelementptr inbounds %struct.Tex, %struct.Tex* %793, i32 0, i32 9, !dbg !4473
  %794 = load float, float* %bfac, align 4, !dbg !4473
  %795 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !4473
  %tb1030 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %795, i32 0, i32 3, !dbg !4473
  %796 = load float, float* %tb1030, align 4, !dbg !4473
  %sub1031 = fsub float %796, 5.000000e-01, !dbg !4473
  %797 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !4473
  %contrast1032 = getelementptr inbounds %struct.Tex, %struct.Tex* %797, i32 0, i32 5, !dbg !4473
  %798 = load float, float* %contrast1032, align 4, !dbg !4473
  %mul1033 = fmul float %sub1031, %798, !dbg !4473
  %799 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !4473
  %bright1034 = getelementptr inbounds %struct.Tex, %struct.Tex* %799, i32 0, i32 4, !dbg !4473
  %800 = load float, float* %bright1034, align 8, !dbg !4473
  %add1035 = fadd float %mul1033, %800, !dbg !4473
  %sub1036 = fsub float %add1035, 5.000000e-01, !dbg !4473
  %mul1037 = fmul float %794, %sub1036, !dbg !4473
  %801 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !4473
  %tb1038 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %801, i32 0, i32 3, !dbg !4473
  store float %mul1037, float* %tb1038, align 4, !dbg !4473
  %802 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !4474
  %flag1039 = getelementptr inbounds %struct.Tex, %struct.Tex* %802, i32 0, i32 31, !dbg !4474
  %803 = load i16, i16* %flag1039, align 2, !dbg !4474
  %conv1040 = sext i16 %803 to i32, !dbg !4474
  %and1041 = and i32 %conv1040, 1024, !dbg !4474
  %tobool1042 = icmp ne i32 %and1041, 0, !dbg !4474
  br i1 %tobool1042, label %if.end1062, label %if.then1043, !dbg !4473

if.then1043:                                      ; preds = %if.end1013
  %804 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !4476
  %tr1044 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %804, i32 0, i32 1, !dbg !4476
  %805 = load float, float* %tr1044, align 4, !dbg !4476
  %cmp1045 = fcmp olt float %805, 0.000000e+00, !dbg !4476
  br i1 %cmp1045, label %if.then1047, label %if.end1049, !dbg !4479

if.then1047:                                      ; preds = %if.then1043
  %806 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !4476
  %tr1048 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %806, i32 0, i32 1, !dbg !4476
  store float 0.000000e+00, float* %tr1048, align 4, !dbg !4476
  br label %if.end1049, !dbg !4476

if.end1049:                                       ; preds = %if.then1047, %if.then1043
  %807 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !4480
  %tg1050 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %807, i32 0, i32 2, !dbg !4480
  %808 = load float, float* %tg1050, align 8, !dbg !4480
  %cmp1051 = fcmp olt float %808, 0.000000e+00, !dbg !4480
  br i1 %cmp1051, label %if.then1053, label %if.end1055, !dbg !4479

if.then1053:                                      ; preds = %if.end1049
  %809 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !4480
  %tg1054 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %809, i32 0, i32 2, !dbg !4480
  store float 0.000000e+00, float* %tg1054, align 8, !dbg !4480
  br label %if.end1055, !dbg !4480

if.end1055:                                       ; preds = %if.then1053, %if.end1049
  %810 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !4482
  %tb1056 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %810, i32 0, i32 3, !dbg !4482
  %811 = load float, float* %tb1056, align 4, !dbg !4482
  %cmp1057 = fcmp olt float %811, 0.000000e+00, !dbg !4482
  br i1 %cmp1057, label %if.then1059, label %if.end1061, !dbg !4479

if.then1059:                                      ; preds = %if.end1055
  %812 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !4482
  %tb1060 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %812, i32 0, i32 3, !dbg !4482
  store float 0.000000e+00, float* %tb1060, align 4, !dbg !4482
  br label %if.end1061, !dbg !4482

if.end1061:                                       ; preds = %if.then1059, %if.end1055
  br label %if.end1062, !dbg !4479

if.end1062:                                       ; preds = %if.end1061, %if.end1013
  %813 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !4484
  %saturation = getelementptr inbounds %struct.Tex, %struct.Tex* %813, i32 0, i32 6, !dbg !4484
  %814 = load float, float* %saturation, align 8, !dbg !4484
  %cmp1063 = fcmp une float %814, 1.000000e+00, !dbg !4484
  br i1 %cmp1063, label %if.then1065, label %if.end1083, !dbg !4473

if.then1065:                                      ; preds = %if.end1062
  call void @llvm.dbg.declare(metadata [3 x float]* %_hsv, metadata !4486, metadata !DIExpression()), !dbg !4488
  %815 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !4488
  %tr1066 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %815, i32 0, i32 1, !dbg !4488
  %816 = load float, float* %tr1066, align 4, !dbg !4488
  %817 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !4488
  %tg1067 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %817, i32 0, i32 2, !dbg !4488
  %818 = load float, float* %tg1067, align 8, !dbg !4488
  %819 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !4488
  %tb1068 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %819, i32 0, i32 3, !dbg !4488
  %820 = load float, float* %tb1068, align 4, !dbg !4488
  %arraydecay1069 = getelementptr inbounds [3 x float], [3 x float]* %_hsv, i64 0, i64 0, !dbg !4488
  %arraydecay1070 = getelementptr inbounds [3 x float], [3 x float]* %_hsv, i64 0, i64 0, !dbg !4488
  %add.ptr1071 = getelementptr inbounds float, float* %arraydecay1070, i64 1, !dbg !4488
  %arraydecay1072 = getelementptr inbounds [3 x float], [3 x float]* %_hsv, i64 0, i64 0, !dbg !4488
  %add.ptr1073 = getelementptr inbounds float, float* %arraydecay1072, i64 2, !dbg !4488
  call void @rgb_to_hsv(float %816, float %818, float %820, float* %arraydecay1069, float* %add.ptr1071, float* %add.ptr1073), !dbg !4488
  %821 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !4488
  %saturation1074 = getelementptr inbounds %struct.Tex, %struct.Tex* %821, i32 0, i32 6, !dbg !4488
  %822 = load float, float* %saturation1074, align 8, !dbg !4488
  %arrayidx1075 = getelementptr inbounds [3 x float], [3 x float]* %_hsv, i64 0, i64 1, !dbg !4488
  %823 = load float, float* %arrayidx1075, align 4, !dbg !4488
  %mul1076 = fmul float %823, %822, !dbg !4488
  store float %mul1076, float* %arrayidx1075, align 4, !dbg !4488
  %arrayidx1077 = getelementptr inbounds [3 x float], [3 x float]* %_hsv, i64 0, i64 0, !dbg !4488
  %824 = load float, float* %arrayidx1077, align 4, !dbg !4488
  %arrayidx1078 = getelementptr inbounds [3 x float], [3 x float]* %_hsv, i64 0, i64 1, !dbg !4488
  %825 = load float, float* %arrayidx1078, align 4, !dbg !4488
  %arrayidx1079 = getelementptr inbounds [3 x float], [3 x float]* %_hsv, i64 0, i64 2, !dbg !4488
  %826 = load float, float* %arrayidx1079, align 4, !dbg !4488
  %827 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !4488
  %tr1080 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %827, i32 0, i32 1, !dbg !4488
  %828 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !4488
  %tg1081 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %828, i32 0, i32 2, !dbg !4488
  %829 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !4488
  %tb1082 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %829, i32 0, i32 3, !dbg !4488
  call void @hsv_to_rgb(float %824, float %825, float %826, float* %tr1080, float* %tg1081, float* %tb1082), !dbg !4488
  br label %if.end1083, !dbg !4488

if.end1083:                                       ; preds = %if.then1065, %if.end1062
  %830 = load i32, i32* %retval1, align 4, !dbg !4489
  store i32 %830, i32* %retval, align 4, !dbg !4490
  br label %return, !dbg !4490

return:                                           ; preds = %if.end1083, %if.end409, %if.end378, %if.end264, %if.end249, %if.end30, %if.then15, %if.then7, %if.then
  %831 = load i32, i32* %retval, align 4, !dbg !4491
  ret i32 %831, !dbg !4491
}

; Function Attrs: noinline nounwind uwtable
define internal void @copy_v2_v2(float* %r, float* %a) #0 !dbg !4492 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !4496, metadata !DIExpression()), !dbg !4497
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !4498, metadata !DIExpression()), !dbg !4499
  %0 = load float*, float** %a.addr, align 8, !dbg !4500
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !4500
  %1 = load float, float* %arrayidx, align 4, !dbg !4500
  %2 = load float*, float** %r.addr, align 8, !dbg !4501
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !4501
  store float %1, float* %arrayidx1, align 4, !dbg !4502
  %3 = load float*, float** %a.addr, align 8, !dbg !4503
  %arrayidx2 = getelementptr inbounds float, float* %3, i64 1, !dbg !4503
  %4 = load float, float* %arrayidx2, align 4, !dbg !4503
  %5 = load float*, float** %r.addr, align 8, !dbg !4504
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !4504
  store float %4, float* %arrayidx3, align 4, !dbg !4505
  ret void, !dbg !4506
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @imagewraposa_aniso(%struct.Tex* %tex, %struct.Image* %ima, %struct.ImBuf* %ibuf, float* %texvec, float* %dxt, float* %dyt, %struct.TexResult* %texres, %struct.ImagePool* %pool) #0 !dbg !4507 {
entry:
  %retval = alloca i32, align 4
  %tex.addr = alloca %struct.Tex*, align 8
  %ima.addr = alloca %struct.Image*, align 8
  %ibuf.addr = alloca %struct.ImBuf*, align 8
  %texvec.addr = alloca float*, align 8
  %dxt.addr = alloca float*, align 8
  %dyt.addr = alloca float*, align 8
  %texres.addr = alloca %struct.TexResult*, align 8
  %pool.addr = alloca %struct.ImagePool*, align 8
  %texr = alloca %struct.TexResult, align 8
  %fx = alloca float, align 4
  %fy = alloca float, align 4
  %minx = alloca float, align 4
  %maxx = alloca float, align 4
  %miny = alloca float, align 4
  %maxy = alloca float, align 4
  %maxd = alloca float, align 4
  %val1 = alloca float, align 4
  %val2 = alloca float, align 4
  %val3 = alloca float, align 4
  %curmap = alloca i32, align 4
  %retval1 = alloca i32, align 4
  %intpol = alloca i32, align 4
  %extflag = alloca i32, align 4
  %AFD = alloca %struct.afdata_t, align 4
  %filterfunc = alloca void (%struct.TexResult*, %struct.ImBuf*, float, float, %struct.afdata_t*)*, align 8
  %addval = alloca float, align 4
  %t = alloca float, align 4
  %sw_ap = alloca float, align 4
  %xs = alloca i32, align 4
  %ys = alloca i32, align 4
  %xs1 = alloca i32, align 4
  %ys1 = alloca i32, align 4
  %xs2 = alloca i32, align 4
  %ys2 = alloca i32, align 4
  %omcd = alloca float, align 4
  %previbuf = alloca %struct.ImBuf*, align 8
  %curibuf = alloca %struct.ImBuf*, align 8
  %levf = alloca float, align 4
  %maxlev = alloca i32, align 4
  %mipmaps = alloca [21 x %struct.ImBuf*], align 16
  %ff = alloca float, align 4
  %q = alloca float, align 4
  %Ux = alloca float, align 4
  %Vx = alloca float, align 4
  %Uy = alloca float, align 4
  %Vy = alloca float, align 4
  %A = alloca float, align 4
  %B = alloca float, align 4
  %C = alloca float, align 4
  %F = alloca float, align 4
  %a = alloca float, align 4
  %b = alloca float, align 4
  %th = alloca float, align 4
  %ecc = alloca float, align 4
  %fProbes = alloca float, align 4
  %lev = alloca i32, align 4
  %ff795 = alloca float, align 4
  %q799 = alloca float, align 4
  %Ux803 = alloca float, align 4
  %Vx806 = alloca float, align 4
  %Uy809 = alloca float, align 4
  %Vy812 = alloca float, align 4
  %A815 = alloca float, align 4
  %B819 = alloca float, align 4
  %C824 = alloca float, align 4
  %F828 = alloca float, align 4
  %a833 = alloca float, align 4
  %b834 = alloca float, align 4
  %th835 = alloca float, align 4
  %ecc836 = alloca float, align 4
  %fProbes837 = alloca float, align 4
  %_hsv = alloca [3 x float], align 4
  store %struct.Tex* %tex, %struct.Tex** %tex.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Tex** %tex.addr, metadata !4510, metadata !DIExpression()), !dbg !4511
  store %struct.Image* %ima, %struct.Image** %ima.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Image** %ima.addr, metadata !4512, metadata !DIExpression()), !dbg !4513
  store %struct.ImBuf* %ibuf, %struct.ImBuf** %ibuf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf.addr, metadata !4514, metadata !DIExpression()), !dbg !4515
  store float* %texvec, float** %texvec.addr, align 8
  call void @llvm.dbg.declare(metadata float** %texvec.addr, metadata !4516, metadata !DIExpression()), !dbg !4517
  store float* %dxt, float** %dxt.addr, align 8
  call void @llvm.dbg.declare(metadata float** %dxt.addr, metadata !4518, metadata !DIExpression()), !dbg !4519
  store float* %dyt, float** %dyt.addr, align 8
  call void @llvm.dbg.declare(metadata float** %dyt.addr, metadata !4520, metadata !DIExpression()), !dbg !4521
  store %struct.TexResult* %texres, %struct.TexResult** %texres.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TexResult** %texres.addr, metadata !4522, metadata !DIExpression()), !dbg !4523
  store %struct.ImagePool* %pool, %struct.ImagePool** %pool.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImagePool** %pool.addr, metadata !4524, metadata !DIExpression()), !dbg !4525
  call void @llvm.dbg.declare(metadata %struct.TexResult* %texr, metadata !4526, metadata !DIExpression()), !dbg !4527
  call void @llvm.dbg.declare(metadata float* %fx, metadata !4528, metadata !DIExpression()), !dbg !4529
  call void @llvm.dbg.declare(metadata float* %fy, metadata !4530, metadata !DIExpression()), !dbg !4531
  call void @llvm.dbg.declare(metadata float* %minx, metadata !4532, metadata !DIExpression()), !dbg !4533
  call void @llvm.dbg.declare(metadata float* %maxx, metadata !4534, metadata !DIExpression()), !dbg !4535
  call void @llvm.dbg.declare(metadata float* %miny, metadata !4536, metadata !DIExpression()), !dbg !4537
  call void @llvm.dbg.declare(metadata float* %maxy, metadata !4538, metadata !DIExpression()), !dbg !4539
  call void @llvm.dbg.declare(metadata float* %maxd, metadata !4540, metadata !DIExpression()), !dbg !4541
  call void @llvm.dbg.declare(metadata float* %val1, metadata !4542, metadata !DIExpression()), !dbg !4543
  call void @llvm.dbg.declare(metadata float* %val2, metadata !4544, metadata !DIExpression()), !dbg !4545
  call void @llvm.dbg.declare(metadata float* %val3, metadata !4546, metadata !DIExpression()), !dbg !4547
  call void @llvm.dbg.declare(metadata i32* %curmap, metadata !4548, metadata !DIExpression()), !dbg !4549
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !4550, metadata !DIExpression()), !dbg !4551
  call void @llvm.dbg.declare(metadata i32* %intpol, metadata !4552, metadata !DIExpression()), !dbg !4553
  call void @llvm.dbg.declare(metadata i32* %extflag, metadata !4554, metadata !DIExpression()), !dbg !4555
  store i32 0, i32* %extflag, align 4, !dbg !4555
  call void @llvm.dbg.declare(metadata %struct.afdata_t* %AFD, metadata !4556, metadata !DIExpression()), !dbg !4557
  call void @llvm.dbg.declare(metadata void (%struct.TexResult*, %struct.ImBuf*, float, float, %struct.afdata_t*)** %filterfunc, metadata !4558, metadata !DIExpression()), !dbg !4562
  %0 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !4563
  %texfilter = getelementptr inbounds %struct.Tex, %struct.Tex* %0, i32 0, i32 38, !dbg !4564
  %1 = load i32, i32* %texfilter, align 4, !dbg !4564
  switch i32 %1, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb2
    i32 3, label %sw.bb3
  ], !dbg !4565

sw.bb:                                            ; preds = %entry
  store void (%struct.TexResult*, %struct.ImBuf*, float, float, %struct.afdata_t*)* @ewa_eval, void (%struct.TexResult*, %struct.ImBuf*, float, float, %struct.afdata_t*)** %filterfunc, align 8, !dbg !4566
  br label %sw.epilog, !dbg !4568

sw.bb2:                                           ; preds = %entry
  store void (%struct.TexResult*, %struct.ImBuf*, float, float, %struct.afdata_t*)* @feline_eval, void (%struct.TexResult*, %struct.ImBuf*, float, float, %struct.afdata_t*)** %filterfunc, align 8, !dbg !4569
  br label %sw.epilog, !dbg !4570

sw.bb3:                                           ; preds = %entry
  br label %sw.default, !dbg !4570

sw.default:                                       ; preds = %entry, %sw.bb3
  store void (%struct.TexResult*, %struct.ImBuf*, float, float, %struct.afdata_t*)* @area_sample, void (%struct.TexResult*, %struct.ImBuf*, float, float, %struct.afdata_t*)** %filterfunc, align 8, !dbg !4571
  br label %sw.epilog, !dbg !4572

sw.epilog:                                        ; preds = %sw.default, %sw.bb2, %sw.bb
  %2 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !4573
  %tb = getelementptr inbounds %struct.TexResult, %struct.TexResult* %2, i32 0, i32 3, !dbg !4574
  store float 0.000000e+00, float* %tb, align 4, !dbg !4575
  %3 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !4576
  %tg = getelementptr inbounds %struct.TexResult, %struct.TexResult* %3, i32 0, i32 2, !dbg !4577
  store float 0.000000e+00, float* %tg, align 8, !dbg !4578
  %4 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !4579
  %tr = getelementptr inbounds %struct.TexResult, %struct.TexResult* %4, i32 0, i32 1, !dbg !4580
  store float 0.000000e+00, float* %tr, align 4, !dbg !4581
  %5 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !4582
  %ta = getelementptr inbounds %struct.TexResult, %struct.TexResult* %5, i32 0, i32 4, !dbg !4583
  store float 0.000000e+00, float* %ta, align 8, !dbg !4584
  %6 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !4585
  %tin = getelementptr inbounds %struct.TexResult, %struct.TexResult* %6, i32 0, i32 0, !dbg !4586
  store float 0.000000e+00, float* %tin, align 8, !dbg !4587
  %7 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !4588
  %nor = getelementptr inbounds %struct.TexResult, %struct.TexResult* %7, i32 0, i32 6, !dbg !4589
  %8 = load float*, float** %nor, align 8, !dbg !4589
  %tobool = icmp ne float* %8, null, !dbg !4588
  %9 = zext i1 %tobool to i64, !dbg !4588
  %cond = select i1 %tobool, i32 3, i32 1, !dbg !4588
  store i32 %cond, i32* %retval1, align 4, !dbg !4590
  %10 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !4591
  %cmp = icmp eq %struct.ImBuf* %10, null, !dbg !4593
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !4594

land.lhs.true:                                    ; preds = %sw.epilog
  %11 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !4595
  %cmp4 = icmp eq %struct.Image* %11, null, !dbg !4596
  br i1 %cmp4, label %if.then, label %if.end, !dbg !4597

if.then:                                          ; preds = %land.lhs.true
  %12 = load i32, i32* %retval1, align 4, !dbg !4598
  store i32 %12, i32* %retval, align 4, !dbg !4599
  br label %return, !dbg !4599

if.end:                                           ; preds = %land.lhs.true, %sw.epilog
  %13 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !4600
  %tobool5 = icmp ne %struct.Image* %13, null, !dbg !4600
  br i1 %tobool5, label %if.then6, label %if.end13, !dbg !4602

if.then6:                                         ; preds = %if.end
  %14 = load i32, i32* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 45, i32 46), align 4, !dbg !4603
  %and = and i32 %14, 4096, !dbg !4606
  %tobool7 = icmp ne i32 %and, 0, !dbg !4606
  br i1 %tobool7, label %land.lhs.true8, label %if.end11, !dbg !4607

land.lhs.true8:                                   ; preds = %if.then6
  %15 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !4608
  %call = call zeroext i8 @BKE_image_has_loaded_ibuf(%struct.Image* %15), !dbg !4609
  %tobool9 = icmp ne i8 %call, 0, !dbg !4609
  br i1 %tobool9, label %if.end11, label %if.then10, !dbg !4610

if.then10:                                        ; preds = %land.lhs.true8
  %16 = load i32, i32* %retval1, align 4, !dbg !4611
  store i32 %16, i32* %retval, align 4, !dbg !4613
  br label %return, !dbg !4613

if.end11:                                         ; preds = %land.lhs.true8, %if.then6
  %17 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !4614
  %18 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !4615
  %iuser = getelementptr inbounds %struct.Tex, %struct.Tex* %18, i32 0, i32 51, !dbg !4616
  %19 = load %struct.ImagePool*, %struct.ImagePool** %pool.addr, align 8, !dbg !4617
  %call12 = call %struct.ImBuf* @BKE_image_pool_acquire_ibuf(%struct.Image* %17, %struct.ImageUser* %iuser, %struct.ImagePool* %19), !dbg !4618
  store %struct.ImBuf* %call12, %struct.ImBuf** %ibuf.addr, align 8, !dbg !4619
  br label %if.end13, !dbg !4620

if.end13:                                         ; preds = %if.end11, %if.end
  %20 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !4621
  %cmp14 = icmp eq %struct.ImBuf* %20, null, !dbg !4623
  br i1 %cmp14, label %if.then18, label %lor.lhs.false, !dbg !4624

lor.lhs.false:                                    ; preds = %if.end13
  %21 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !4625
  %rect = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %21, i32 0, i32 8, !dbg !4626
  %22 = load i32*, i32** %rect, align 8, !dbg !4626
  %cmp15 = icmp eq i32* %22, null, !dbg !4627
  br i1 %cmp15, label %land.lhs.true16, label %if.end22, !dbg !4628

land.lhs.true16:                                  ; preds = %lor.lhs.false
  %23 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !4629
  %rect_float = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %23, i32 0, i32 9, !dbg !4630
  %24 = load float*, float** %rect_float, align 8, !dbg !4630
  %cmp17 = icmp eq float* %24, null, !dbg !4631
  br i1 %cmp17, label %if.then18, label %if.end22, !dbg !4632

if.then18:                                        ; preds = %land.lhs.true16, %if.end13
  %25 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !4633
  %tobool19 = icmp ne %struct.Image* %25, null, !dbg !4633
  br i1 %tobool19, label %if.then20, label %if.end21, !dbg !4636

if.then20:                                        ; preds = %if.then18
  %26 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !4637
  %27 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !4638
  %28 = load %struct.ImagePool*, %struct.ImagePool** %pool.addr, align 8, !dbg !4639
  call void @BKE_image_pool_release_ibuf(%struct.Image* %26, %struct.ImBuf* %27, %struct.ImagePool* %28), !dbg !4640
  br label %if.end21, !dbg !4640

if.end21:                                         ; preds = %if.then20, %if.then18
  %29 = load i32, i32* %retval1, align 4, !dbg !4641
  store i32 %29, i32* %retval, align 4, !dbg !4642
  br label %return, !dbg !4642

if.end22:                                         ; preds = %land.lhs.true16, %lor.lhs.false
  %30 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !4643
  %tobool23 = icmp ne %struct.Image* %30, null, !dbg !4643
  br i1 %tobool23, label %if.then24, label %if.end26, !dbg !4645

if.then24:                                        ; preds = %if.end22
  %31 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !4646
  %flag = getelementptr inbounds %struct.Image, %struct.Image* %31, i32 0, i32 10, !dbg !4648
  %32 = load i16, i16* %flag, align 2, !dbg !4649
  %conv = sext i16 %32 to i32, !dbg !4649
  %or = or i32 %conv, 512, !dbg !4649
  %conv25 = trunc i32 %or to i16, !dbg !4649
  store i16 %conv25, i16* %flag, align 2, !dbg !4649
  br label %if.end26, !dbg !4650

if.end26:                                         ; preds = %if.then24, %if.end22
  %33 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !4651
  %34 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !4652
  call void @image_mipmap_test(%struct.Tex* %33, %struct.ImBuf* %34), !dbg !4653
  %35 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !4654
  %tobool27 = icmp ne %struct.Image* %35, null, !dbg !4654
  br i1 %tobool27, label %if.then28, label %if.end47, !dbg !4656

if.then28:                                        ; preds = %if.end26
  %36 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !4657
  %imaflag = getelementptr inbounds %struct.Tex, %struct.Tex* %36, i32 0, i32 30, !dbg !4660
  %37 = load i16, i16* %imaflag, align 4, !dbg !4660
  %conv29 = sext i16 %37 to i32, !dbg !4657
  %and30 = and i32 %conv29, 2, !dbg !4661
  %tobool31 = icmp ne i32 %and30, 0, !dbg !4661
  br i1 %tobool31, label %land.lhs.true32, label %if.end46, !dbg !4662

land.lhs.true32:                                  ; preds = %if.then28
  %38 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !4663
  %flag33 = getelementptr inbounds %struct.Image, %struct.Image* %38, i32 0, i32 10, !dbg !4664
  %39 = load i16, i16* %flag33, align 2, !dbg !4664
  %conv34 = sext i16 %39 to i32, !dbg !4663
  %and35 = and i32 %conv34, 4096, !dbg !4665
  %cmp36 = icmp eq i32 %and35, 0, !dbg !4666
  br i1 %cmp36, label %if.then38, label %if.end46, !dbg !4667

if.then38:                                        ; preds = %land.lhs.true32
  %40 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !4668
  %imaflag39 = getelementptr inbounds %struct.Tex, %struct.Tex* %40, i32 0, i32 30, !dbg !4671
  %41 = load i16, i16* %imaflag39, align 4, !dbg !4671
  %conv40 = sext i16 %41 to i32, !dbg !4668
  %and41 = and i32 %conv40, 32, !dbg !4672
  %cmp42 = icmp eq i32 %and41, 0, !dbg !4673
  br i1 %cmp42, label %if.then44, label %if.end45, !dbg !4674

if.then44:                                        ; preds = %if.then38
  %42 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !4675
  %talpha = getelementptr inbounds %struct.TexResult, %struct.TexResult* %42, i32 0, i32 5, !dbg !4677
  store i32 1, i32* %talpha, align 4, !dbg !4678
  br label %if.end45, !dbg !4679

if.end45:                                         ; preds = %if.then44, %if.then38
  br label %if.end46, !dbg !4680

if.end46:                                         ; preds = %if.end45, %land.lhs.true32, %if.then28
  br label %if.end47, !dbg !4681

if.end47:                                         ; preds = %if.end46, %if.end26
  %43 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !4682
  %talpha48 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %43, i32 0, i32 5, !dbg !4683
  %44 = load i32, i32* %talpha48, align 4, !dbg !4683
  %talpha49 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texr, i32 0, i32 5, !dbg !4684
  store i32 %44, i32* %talpha49, align 4, !dbg !4685
  %45 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !4686
  %imaflag50 = getelementptr inbounds %struct.Tex, %struct.Tex* %45, i32 0, i32 30, !dbg !4688
  %46 = load i16, i16* %imaflag50, align 4, !dbg !4688
  %conv51 = sext i16 %46 to i32, !dbg !4686
  %and52 = and i32 %conv51, 16, !dbg !4689
  %tobool53 = icmp ne i32 %and52, 0, !dbg !4689
  br i1 %tobool53, label %if.then54, label %if.else, !dbg !4690

if.then54:                                        ; preds = %if.end47
  %47 = load float*, float** %texvec.addr, align 8, !dbg !4691
  %arrayidx = getelementptr inbounds float, float* %47, i64 0, !dbg !4691
  %48 = load float, float* %arrayidx, align 4, !dbg !4691
  store float %48, float* %fy, align 4, !dbg !4693
  %49 = load float*, float** %texvec.addr, align 8, !dbg !4694
  %arrayidx55 = getelementptr inbounds float, float* %49, i64 1, !dbg !4694
  %50 = load float, float* %arrayidx55, align 4, !dbg !4694
  store float %50, float* %fx, align 4, !dbg !4695
  br label %if.end58, !dbg !4696

if.else:                                          ; preds = %if.end47
  %51 = load float*, float** %texvec.addr, align 8, !dbg !4697
  %arrayidx56 = getelementptr inbounds float, float* %51, i64 0, !dbg !4697
  %52 = load float, float* %arrayidx56, align 4, !dbg !4697
  store float %52, float* %fx, align 4, !dbg !4699
  %53 = load float*, float** %texvec.addr, align 8, !dbg !4700
  %arrayidx57 = getelementptr inbounds float, float* %53, i64 1, !dbg !4700
  %54 = load float, float* %arrayidx57, align 4, !dbg !4700
  store float %54, float* %fy, align 4, !dbg !4701
  br label %if.end58

if.end58:                                         ; preds = %if.else, %if.then54
  %55 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !4702
  %flags = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %55, i32 0, i32 6, !dbg !4704
  %56 = load i32, i32* %flags, align 8, !dbg !4704
  %and59 = and i32 %56, 4, !dbg !4705
  %tobool60 = icmp ne i32 %and59, 0, !dbg !4705
  br i1 %tobool60, label %if.then61, label %if.end73, !dbg !4706

if.then61:                                        ; preds = %if.end58
  %57 = load i32, i32* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 45, i32 47), align 8, !dbg !4707
  %and62 = and i32 %57, 64, !dbg !4710
  %tobool63 = icmp ne i32 %and62, 0, !dbg !4710
  br i1 %tobool63, label %if.then64, label %if.end72, !dbg !4711

if.then64:                                        ; preds = %if.then61
  %58 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 4), align 8, !dbg !4712
  %conv65 = sext i16 %58 to i32, !dbg !4715
  %and66 = and i32 %conv65, 4, !dbg !4716
  %tobool67 = icmp ne i32 %and66, 0, !dbg !4716
  br i1 %tobool67, label %if.then68, label %if.else69, !dbg !4717

if.then68:                                        ; preds = %if.then64
  br label %if.end71, !dbg !4718

if.else69:                                        ; preds = %if.then64
  %59 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !4720
  %y = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %59, i32 0, i32 3, !dbg !4721
  %60 = load i32, i32* %y, align 4, !dbg !4721
  %conv70 = sitofp i32 %60 to float, !dbg !4722
  %div = fdiv float 5.000000e-01, %conv70, !dbg !4723
  %61 = load float, float* %fy, align 4, !dbg !4724
  %add = fadd float %61, %div, !dbg !4724
  store float %add, float* %fy, align 4, !dbg !4724
  br label %if.end71

if.end71:                                         ; preds = %if.else69, %if.then68
  br label %if.end72, !dbg !4725

if.end72:                                         ; preds = %if.end71, %if.then61
  br label %if.end73, !dbg !4726

if.end73:                                         ; preds = %if.end72, %if.end58
  %62 = load float*, float** %dxt.addr, align 8, !dbg !4727
  %arrayidx74 = getelementptr inbounds float, float* %62, i64 0, !dbg !4727
  %63 = load float, float* %arrayidx74, align 4, !dbg !4727
  %64 = load float*, float** %dyt.addr, align 8, !dbg !4728
  %arrayidx75 = getelementptr inbounds float, float* %64, i64 0, !dbg !4728
  %65 = load float, float* %arrayidx75, align 4, !dbg !4728
  %66 = load float*, float** %dxt.addr, align 8, !dbg !4729
  %arrayidx76 = getelementptr inbounds float, float* %66, i64 0, !dbg !4729
  %67 = load float, float* %arrayidx76, align 4, !dbg !4729
  %68 = load float*, float** %dyt.addr, align 8, !dbg !4730
  %arrayidx77 = getelementptr inbounds float, float* %68, i64 0, !dbg !4730
  %69 = load float, float* %arrayidx77, align 4, !dbg !4730
  %add78 = fadd float %67, %69, !dbg !4731
  %call79 = call float @min_fff(float %63, float %65, float %add78), !dbg !4732
  store float %call79, float* %minx, align 4, !dbg !4733
  %70 = load float*, float** %dxt.addr, align 8, !dbg !4734
  %arrayidx80 = getelementptr inbounds float, float* %70, i64 0, !dbg !4734
  %71 = load float, float* %arrayidx80, align 4, !dbg !4734
  %72 = load float*, float** %dyt.addr, align 8, !dbg !4735
  %arrayidx81 = getelementptr inbounds float, float* %72, i64 0, !dbg !4735
  %73 = load float, float* %arrayidx81, align 4, !dbg !4735
  %74 = load float*, float** %dxt.addr, align 8, !dbg !4736
  %arrayidx82 = getelementptr inbounds float, float* %74, i64 0, !dbg !4736
  %75 = load float, float* %arrayidx82, align 4, !dbg !4736
  %76 = load float*, float** %dyt.addr, align 8, !dbg !4737
  %arrayidx83 = getelementptr inbounds float, float* %76, i64 0, !dbg !4737
  %77 = load float, float* %arrayidx83, align 4, !dbg !4737
  %add84 = fadd float %75, %77, !dbg !4738
  %call85 = call float @max_fff(float %71, float %73, float %add84), !dbg !4739
  store float %call85, float* %maxx, align 4, !dbg !4740
  %78 = load float*, float** %dxt.addr, align 8, !dbg !4741
  %arrayidx86 = getelementptr inbounds float, float* %78, i64 1, !dbg !4741
  %79 = load float, float* %arrayidx86, align 4, !dbg !4741
  %80 = load float*, float** %dyt.addr, align 8, !dbg !4742
  %arrayidx87 = getelementptr inbounds float, float* %80, i64 1, !dbg !4742
  %81 = load float, float* %arrayidx87, align 4, !dbg !4742
  %82 = load float*, float** %dxt.addr, align 8, !dbg !4743
  %arrayidx88 = getelementptr inbounds float, float* %82, i64 1, !dbg !4743
  %83 = load float, float* %arrayidx88, align 4, !dbg !4743
  %84 = load float*, float** %dyt.addr, align 8, !dbg !4744
  %arrayidx89 = getelementptr inbounds float, float* %84, i64 1, !dbg !4744
  %85 = load float, float* %arrayidx89, align 4, !dbg !4744
  %add90 = fadd float %83, %85, !dbg !4745
  %call91 = call float @min_fff(float %79, float %81, float %add90), !dbg !4746
  store float %call91, float* %miny, align 4, !dbg !4747
  %86 = load float*, float** %dxt.addr, align 8, !dbg !4748
  %arrayidx92 = getelementptr inbounds float, float* %86, i64 1, !dbg !4748
  %87 = load float, float* %arrayidx92, align 4, !dbg !4748
  %88 = load float*, float** %dyt.addr, align 8, !dbg !4749
  %arrayidx93 = getelementptr inbounds float, float* %88, i64 1, !dbg !4749
  %89 = load float, float* %arrayidx93, align 4, !dbg !4749
  %90 = load float*, float** %dxt.addr, align 8, !dbg !4750
  %arrayidx94 = getelementptr inbounds float, float* %90, i64 1, !dbg !4750
  %91 = load float, float* %arrayidx94, align 4, !dbg !4750
  %92 = load float*, float** %dyt.addr, align 8, !dbg !4751
  %arrayidx95 = getelementptr inbounds float, float* %92, i64 1, !dbg !4751
  %93 = load float, float* %arrayidx95, align 4, !dbg !4751
  %add96 = fadd float %91, %93, !dbg !4752
  %call97 = call float @max_fff(float %87, float %89, float %add96), !dbg !4753
  store float %call97, float* %maxy, align 4, !dbg !4754
  %94 = load float, float* %maxx, align 4, !dbg !4755
  %95 = load float, float* %minx, align 4, !dbg !4756
  %sub = fsub float %94, %95, !dbg !4757
  %mul = fmul float %sub, 5.000000e-01, !dbg !4758
  store float %mul, float* %minx, align 4, !dbg !4759
  %96 = load float, float* %maxy, align 4, !dbg !4760
  %97 = load float, float* %miny, align 4, !dbg !4761
  %sub98 = fsub float %96, %97, !dbg !4762
  %mul99 = fmul float %sub98, 5.000000e-01, !dbg !4763
  store float %mul99, float* %miny, align 4, !dbg !4764
  %98 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !4765
  %imaflag100 = getelementptr inbounds %struct.Tex, %struct.Tex* %98, i32 0, i32 30, !dbg !4767
  %99 = load i16, i16* %imaflag100, align 4, !dbg !4767
  %conv101 = sext i16 %99 to i32, !dbg !4765
  %and102 = and i32 %conv101, 8192, !dbg !4768
  %tobool103 = icmp ne i32 %and102, 0, !dbg !4768
  br i1 %tobool103, label %if.then104, label %if.else122, !dbg !4769

if.then104:                                       ; preds = %if.end73
  call void @llvm.dbg.declare(metadata float* %addval, metadata !4770, metadata !DIExpression()), !dbg !4772
  %100 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !4773
  %filtersize = getelementptr inbounds %struct.Tex, %struct.Tex* %100, i32 0, i32 10, !dbg !4774
  %101 = load float, float* %filtersize, align 8, !dbg !4774
  %mul105 = fmul float 5.000000e-01, %101, !dbg !4775
  %102 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !4776
  %x = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %102, i32 0, i32 2, !dbg !4776
  %103 = load i32, i32* %x, align 8, !dbg !4776
  %104 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !4776
  %y106 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %104, i32 0, i32 3, !dbg !4776
  %105 = load i32, i32* %y106, align 4, !dbg !4776
  %cmp107 = icmp slt i32 %103, %105, !dbg !4776
  br i1 %cmp107, label %cond.true, label %cond.false, !dbg !4776

cond.true:                                        ; preds = %if.then104
  %106 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !4776
  %x109 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %106, i32 0, i32 2, !dbg !4776
  %107 = load i32, i32* %x109, align 8, !dbg !4776
  br label %cond.end, !dbg !4776

cond.false:                                       ; preds = %if.then104
  %108 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !4776
  %y110 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %108, i32 0, i32 3, !dbg !4776
  %109 = load i32, i32* %y110, align 4, !dbg !4776
  br label %cond.end, !dbg !4776

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond111 = phi i32 [ %107, %cond.true ], [ %109, %cond.false ], !dbg !4776
  %conv112 = sitofp i32 %cond111 to float, !dbg !4777
  %div113 = fdiv float %mul105, %conv112, !dbg !4778
  store float %div113, float* %addval, align 4, !dbg !4772
  %110 = load float, float* %addval, align 4, !dbg !4779
  %111 = load float, float* %minx, align 4, !dbg !4781
  %cmp114 = fcmp ogt float %110, %111, !dbg !4782
  br i1 %cmp114, label %if.then116, label %if.end117, !dbg !4783

if.then116:                                       ; preds = %cond.end
  %112 = load float, float* %addval, align 4, !dbg !4784
  store float %112, float* %minx, align 4, !dbg !4785
  br label %if.end117, !dbg !4786

if.end117:                                        ; preds = %if.then116, %cond.end
  %113 = load float, float* %addval, align 4, !dbg !4787
  %114 = load float, float* %miny, align 4, !dbg !4789
  %cmp118 = fcmp ogt float %113, %114, !dbg !4790
  br i1 %cmp118, label %if.then120, label %if.end121, !dbg !4791

if.then120:                                       ; preds = %if.end117
  %115 = load float, float* %addval, align 4, !dbg !4792
  store float %115, float* %miny, align 4, !dbg !4793
  br label %if.end121, !dbg !4794

if.end121:                                        ; preds = %if.then120, %if.end117
  br label %if.end144, !dbg !4795

if.else122:                                       ; preds = %if.end73
  %116 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !4796
  %filtersize123 = getelementptr inbounds %struct.Tex, %struct.Tex* %116, i32 0, i32 10, !dbg !4798
  %117 = load float, float* %filtersize123, align 8, !dbg !4798
  %cmp124 = fcmp une float %117, 1.000000e+00, !dbg !4799
  br i1 %cmp124, label %if.then126, label %if.end143, !dbg !4800

if.then126:                                       ; preds = %if.else122
  %118 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !4801
  %filtersize127 = getelementptr inbounds %struct.Tex, %struct.Tex* %118, i32 0, i32 10, !dbg !4803
  %119 = load float, float* %filtersize127, align 8, !dbg !4803
  %120 = load float, float* %minx, align 4, !dbg !4804
  %mul128 = fmul float %120, %119, !dbg !4804
  store float %mul128, float* %minx, align 4, !dbg !4804
  %121 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !4805
  %filtersize129 = getelementptr inbounds %struct.Tex, %struct.Tex* %121, i32 0, i32 10, !dbg !4806
  %122 = load float, float* %filtersize129, align 8, !dbg !4806
  %123 = load float, float* %miny, align 4, !dbg !4807
  %mul130 = fmul float %123, %122, !dbg !4807
  store float %mul130, float* %miny, align 4, !dbg !4807
  %124 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !4808
  %filtersize131 = getelementptr inbounds %struct.Tex, %struct.Tex* %124, i32 0, i32 10, !dbg !4809
  %125 = load float, float* %filtersize131, align 8, !dbg !4809
  %126 = load float*, float** %dxt.addr, align 8, !dbg !4810
  %arrayidx132 = getelementptr inbounds float, float* %126, i64 0, !dbg !4810
  %127 = load float, float* %arrayidx132, align 4, !dbg !4811
  %mul133 = fmul float %127, %125, !dbg !4811
  store float %mul133, float* %arrayidx132, align 4, !dbg !4811
  %128 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !4812
  %filtersize134 = getelementptr inbounds %struct.Tex, %struct.Tex* %128, i32 0, i32 10, !dbg !4813
  %129 = load float, float* %filtersize134, align 8, !dbg !4813
  %130 = load float*, float** %dxt.addr, align 8, !dbg !4814
  %arrayidx135 = getelementptr inbounds float, float* %130, i64 1, !dbg !4814
  %131 = load float, float* %arrayidx135, align 4, !dbg !4815
  %mul136 = fmul float %131, %129, !dbg !4815
  store float %mul136, float* %arrayidx135, align 4, !dbg !4815
  %132 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !4816
  %filtersize137 = getelementptr inbounds %struct.Tex, %struct.Tex* %132, i32 0, i32 10, !dbg !4817
  %133 = load float, float* %filtersize137, align 8, !dbg !4817
  %134 = load float*, float** %dyt.addr, align 8, !dbg !4818
  %arrayidx138 = getelementptr inbounds float, float* %134, i64 0, !dbg !4818
  %135 = load float, float* %arrayidx138, align 4, !dbg !4819
  %mul139 = fmul float %135, %133, !dbg !4819
  store float %mul139, float* %arrayidx138, align 4, !dbg !4819
  %136 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !4820
  %filtersize140 = getelementptr inbounds %struct.Tex, %struct.Tex* %136, i32 0, i32 10, !dbg !4821
  %137 = load float, float* %filtersize140, align 8, !dbg !4821
  %138 = load float*, float** %dyt.addr, align 8, !dbg !4822
  %arrayidx141 = getelementptr inbounds float, float* %138, i64 1, !dbg !4822
  %139 = load float, float* %arrayidx141, align 4, !dbg !4823
  %mul142 = fmul float %139, %137, !dbg !4823
  store float %mul142, float* %arrayidx141, align 4, !dbg !4823
  br label %if.end143, !dbg !4824

if.end143:                                        ; preds = %if.then126, %if.else122
  br label %if.end144

if.end144:                                        ; preds = %if.end143, %if.end121
  %140 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !4825
  %imaflag145 = getelementptr inbounds %struct.Tex, %struct.Tex* %140, i32 0, i32 30, !dbg !4827
  %141 = load i16, i16* %imaflag145, align 4, !dbg !4827
  %conv146 = sext i16 %141 to i32, !dbg !4825
  %and147 = and i32 %conv146, 16, !dbg !4828
  %tobool148 = icmp ne i32 %and147, 0, !dbg !4828
  br i1 %tobool148, label %if.then149, label %if.end159, !dbg !4829

if.then149:                                       ; preds = %if.end144
  call void @llvm.dbg.declare(metadata float* %t, metadata !4830, metadata !DIExpression()), !dbg !4832
  call void @llvm.dbg.declare(metadata float* %sw_ap, metadata !4833, metadata !DIExpression()), !dbg !4835
  %142 = load float, float* %minx, align 4, !dbg !4835
  store float %142, float* %sw_ap, align 4, !dbg !4835
  %143 = load float, float* %miny, align 4, !dbg !4835
  store float %143, float* %minx, align 4, !dbg !4835
  %144 = load float, float* %sw_ap, align 4, !dbg !4835
  store float %144, float* %miny, align 4, !dbg !4835
  %145 = load float*, float** %dxt.addr, align 8, !dbg !4836
  %arrayidx150 = getelementptr inbounds float, float* %145, i64 0, !dbg !4836
  %146 = load float, float* %arrayidx150, align 4, !dbg !4836
  store float %146, float* %t, align 4, !dbg !4837
  %147 = load float*, float** %dxt.addr, align 8, !dbg !4838
  %arrayidx151 = getelementptr inbounds float, float* %147, i64 1, !dbg !4838
  %148 = load float, float* %arrayidx151, align 4, !dbg !4838
  %149 = load float*, float** %dxt.addr, align 8, !dbg !4839
  %arrayidx152 = getelementptr inbounds float, float* %149, i64 0, !dbg !4839
  store float %148, float* %arrayidx152, align 4, !dbg !4840
  %150 = load float, float* %t, align 4, !dbg !4841
  %fneg = fneg float %150, !dbg !4842
  %151 = load float*, float** %dxt.addr, align 8, !dbg !4843
  %arrayidx153 = getelementptr inbounds float, float* %151, i64 1, !dbg !4843
  store float %fneg, float* %arrayidx153, align 4, !dbg !4844
  %152 = load float*, float** %dyt.addr, align 8, !dbg !4845
  %arrayidx154 = getelementptr inbounds float, float* %152, i64 0, !dbg !4845
  %153 = load float, float* %arrayidx154, align 4, !dbg !4845
  store float %153, float* %t, align 4, !dbg !4846
  %154 = load float*, float** %dyt.addr, align 8, !dbg !4847
  %arrayidx155 = getelementptr inbounds float, float* %154, i64 1, !dbg !4847
  %155 = load float, float* %arrayidx155, align 4, !dbg !4847
  %156 = load float*, float** %dyt.addr, align 8, !dbg !4848
  %arrayidx156 = getelementptr inbounds float, float* %156, i64 0, !dbg !4848
  store float %155, float* %arrayidx156, align 4, !dbg !4849
  %157 = load float, float* %t, align 4, !dbg !4850
  %fneg157 = fneg float %157, !dbg !4851
  %158 = load float*, float** %dyt.addr, align 8, !dbg !4852
  %arrayidx158 = getelementptr inbounds float, float* %158, i64 1, !dbg !4852
  store float %fneg157, float* %arrayidx158, align 4, !dbg !4853
  br label %if.end159, !dbg !4854

if.end159:                                        ; preds = %if.then149, %if.end144
  %159 = load float, float* %minx, align 4, !dbg !4855
  %cmp160 = fcmp ogt float %159, 2.500000e-01, !dbg !4856
  br i1 %cmp160, label %cond.true162, label %cond.false163, !dbg !4857

cond.true162:                                     ; preds = %if.end159
  br label %cond.end170, !dbg !4857

cond.false163:                                    ; preds = %if.end159
  %160 = load float, float* %minx, align 4, !dbg !4858
  %cmp164 = fcmp olt float %160, 0x3EE4F8B580000000, !dbg !4859
  br i1 %cmp164, label %cond.true166, label %cond.false167, !dbg !4860

cond.true166:                                     ; preds = %cond.false163
  br label %cond.end168, !dbg !4860

cond.false167:                                    ; preds = %cond.false163
  %161 = load float, float* %minx, align 4, !dbg !4861
  br label %cond.end168, !dbg !4860

cond.end168:                                      ; preds = %cond.false167, %cond.true166
  %cond169 = phi float [ 0x3EE4F8B580000000, %cond.true166 ], [ %161, %cond.false167 ], !dbg !4860
  br label %cond.end170, !dbg !4857

cond.end170:                                      ; preds = %cond.end168, %cond.true162
  %cond171 = phi float [ 2.500000e-01, %cond.true162 ], [ %cond169, %cond.end168 ], !dbg !4857
  store float %cond171, float* %minx, align 4, !dbg !4862
  %162 = load float, float* %miny, align 4, !dbg !4863
  %cmp172 = fcmp ogt float %162, 2.500000e-01, !dbg !4864
  br i1 %cmp172, label %cond.true174, label %cond.false175, !dbg !4865

cond.true174:                                     ; preds = %cond.end170
  br label %cond.end182, !dbg !4865

cond.false175:                                    ; preds = %cond.end170
  %163 = load float, float* %miny, align 4, !dbg !4866
  %cmp176 = fcmp olt float %163, 0x3EE4F8B580000000, !dbg !4867
  br i1 %cmp176, label %cond.true178, label %cond.false179, !dbg !4868

cond.true178:                                     ; preds = %cond.false175
  br label %cond.end180, !dbg !4868

cond.false179:                                    ; preds = %cond.false175
  %164 = load float, float* %miny, align 4, !dbg !4869
  br label %cond.end180, !dbg !4868

cond.end180:                                      ; preds = %cond.false179, %cond.true178
  %cond181 = phi float [ 0x3EE4F8B580000000, %cond.true178 ], [ %164, %cond.false179 ], !dbg !4868
  br label %cond.end182, !dbg !4865

cond.end182:                                      ; preds = %cond.end180, %cond.true174
  %cond183 = phi float [ 2.500000e-01, %cond.true174 ], [ %cond181, %cond.end180 ], !dbg !4865
  store float %cond183, float* %miny, align 4, !dbg !4870
  %165 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !4871
  %extend = getelementptr inbounds %struct.Tex, %struct.Tex* %165, i32 0, i32 42, !dbg !4873
  %166 = load i16, i16* %extend, align 8, !dbg !4873
  %conv184 = sext i16 %166 to i32, !dbg !4871
  %cmp185 = icmp eq i32 %conv184, 3, !dbg !4874
  br i1 %cmp185, label %if.then187, label %if.else210, !dbg !4875

if.then187:                                       ; preds = %cond.end182
  %167 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !4876
  %flag188 = getelementptr inbounds %struct.Tex, %struct.Tex* %167, i32 0, i32 31, !dbg !4879
  %168 = load i16, i16* %flag188, align 2, !dbg !4879
  %conv189 = sext i16 %168 to i32, !dbg !4876
  %and190 = and i32 %conv189, 384, !dbg !4880
  %cmp191 = icmp eq i32 %and190, 384, !dbg !4881
  br i1 %cmp191, label %if.then193, label %if.else194, !dbg !4882

if.then193:                                       ; preds = %if.then187
  store i32 4, i32* %extflag, align 4, !dbg !4883
  br label %if.end209, !dbg !4884

if.else194:                                       ; preds = %if.then187
  %169 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !4885
  %flag195 = getelementptr inbounds %struct.Tex, %struct.Tex* %169, i32 0, i32 31, !dbg !4887
  %170 = load i16, i16* %flag195, align 2, !dbg !4887
  %conv196 = sext i16 %170 to i32, !dbg !4885
  %and197 = and i32 %conv196, 128, !dbg !4888
  %tobool198 = icmp ne i32 %and197, 0, !dbg !4888
  br i1 %tobool198, label %if.then199, label %if.else200, !dbg !4889

if.then199:                                       ; preds = %if.else194
  store i32 1, i32* %extflag, align 4, !dbg !4890
  br label %if.end208, !dbg !4891

if.else200:                                       ; preds = %if.else194
  %171 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !4892
  %flag201 = getelementptr inbounds %struct.Tex, %struct.Tex* %171, i32 0, i32 31, !dbg !4894
  %172 = load i16, i16* %flag201, align 2, !dbg !4894
  %conv202 = sext i16 %172 to i32, !dbg !4892
  %and203 = and i32 %conv202, 256, !dbg !4895
  %tobool204 = icmp ne i32 %and203, 0, !dbg !4895
  br i1 %tobool204, label %if.then205, label %if.else206, !dbg !4896

if.then205:                                       ; preds = %if.else200
  store i32 2, i32* %extflag, align 4, !dbg !4897
  br label %if.end207, !dbg !4898

if.else206:                                       ; preds = %if.else200
  store i32 3, i32* %extflag, align 4, !dbg !4899
  br label %if.end207

if.end207:                                        ; preds = %if.else206, %if.then205
  br label %if.end208

if.end208:                                        ; preds = %if.end207, %if.then199
  br label %if.end209

if.end209:                                        ; preds = %if.end208, %if.then193
  br label %if.end217, !dbg !4900

if.else210:                                       ; preds = %cond.end182
  %173 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !4901
  %extend211 = getelementptr inbounds %struct.Tex, %struct.Tex* %173, i32 0, i32 42, !dbg !4903
  %174 = load i16, i16* %extend211, align 8, !dbg !4903
  %conv212 = sext i16 %174 to i32, !dbg !4901
  %cmp213 = icmp eq i32 %conv212, 1, !dbg !4904
  br i1 %cmp213, label %if.then215, label %if.end216, !dbg !4905

if.then215:                                       ; preds = %if.else210
  store i32 4, i32* %extflag, align 4, !dbg !4906
  br label %if.end216, !dbg !4907

if.end216:                                        ; preds = %if.then215, %if.else210
  br label %if.end217

if.end217:                                        ; preds = %if.end216, %if.end209
  %175 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !4908
  %extend218 = getelementptr inbounds %struct.Tex, %struct.Tex* %175, i32 0, i32 42, !dbg !4910
  %176 = load i16, i16* %extend218, align 8, !dbg !4910
  %conv219 = sext i16 %176 to i32, !dbg !4908
  %cmp220 = icmp eq i32 %conv219, 5, !dbg !4911
  br i1 %cmp220, label %if.then222, label %if.end353, !dbg !4912

if.then222:                                       ; preds = %if.end217
  call void @llvm.dbg.declare(metadata i32* %xs, metadata !4913, metadata !DIExpression()), !dbg !4915
  %177 = load float, float* %fx, align 4, !dbg !4916
  %178 = call float @llvm.floor.f32(float %177), !dbg !4917
  %conv223 = fptosi float %178 to i32, !dbg !4918
  store i32 %conv223, i32* %xs, align 4, !dbg !4915
  call void @llvm.dbg.declare(metadata i32* %ys, metadata !4919, metadata !DIExpression()), !dbg !4920
  %179 = load float, float* %fy, align 4, !dbg !4921
  %180 = call float @llvm.floor.f32(float %179), !dbg !4922
  %conv224 = fptosi float %180 to i32, !dbg !4923
  store i32 %conv224, i32* %ys, align 4, !dbg !4920
  %181 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !4924
  %flag225 = getelementptr inbounds %struct.Tex, %struct.Tex* %181, i32 0, i32 31, !dbg !4926
  %182 = load i16, i16* %flag225, align 2, !dbg !4926
  %conv226 = sext i16 %182 to i32, !dbg !4924
  %and227 = and i32 %conv226, 8, !dbg !4927
  %tobool228 = icmp ne i32 %and227, 0, !dbg !4927
  br i1 %tobool228, label %land.lhs.true229, label %if.else239, !dbg !4928

land.lhs.true229:                                 ; preds = %if.then222
  %183 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !4929
  %flag230 = getelementptr inbounds %struct.Tex, %struct.Tex* %183, i32 0, i32 31, !dbg !4930
  %184 = load i16, i16* %flag230, align 2, !dbg !4930
  %conv231 = sext i16 %184 to i32, !dbg !4929
  %and232 = and i32 %conv231, 16, !dbg !4931
  %tobool233 = icmp ne i32 %and232, 0, !dbg !4931
  br i1 %tobool233, label %if.then234, label %if.else239, !dbg !4932

if.then234:                                       ; preds = %land.lhs.true229
  %185 = load i32, i32* %xs, align 4, !dbg !4933
  %conv235 = sitofp i32 %185 to float, !dbg !4933
  %186 = load float, float* %fx, align 4, !dbg !4935
  %sub236 = fsub float %186, %conv235, !dbg !4935
  store float %sub236, float* %fx, align 4, !dbg !4935
  %187 = load i32, i32* %ys, align 4, !dbg !4936
  %conv237 = sitofp i32 %187 to float, !dbg !4936
  %188 = load float, float* %fy, align 4, !dbg !4937
  %sub238 = fsub float %188, %conv237, !dbg !4937
  store float %sub238, float* %fy, align 4, !dbg !4937
  br label %if.end337, !dbg !4938

if.else239:                                       ; preds = %land.lhs.true229, %if.then222
  call void @llvm.dbg.declare(metadata i32* %xs1, metadata !4939, metadata !DIExpression()), !dbg !4941
  %189 = load float, float* %fx, align 4, !dbg !4942
  %190 = load float, float* %minx, align 4, !dbg !4943
  %sub240 = fsub float %189, %190, !dbg !4944
  %191 = call float @llvm.floor.f32(float %sub240), !dbg !4945
  %conv241 = fptosi float %191 to i32, !dbg !4946
  store i32 %conv241, i32* %xs1, align 4, !dbg !4941
  call void @llvm.dbg.declare(metadata i32* %ys1, metadata !4947, metadata !DIExpression()), !dbg !4948
  %192 = load float, float* %fy, align 4, !dbg !4949
  %193 = load float, float* %miny, align 4, !dbg !4950
  %sub242 = fsub float %192, %193, !dbg !4951
  %194 = call float @llvm.floor.f32(float %sub242), !dbg !4952
  %conv243 = fptosi float %194 to i32, !dbg !4953
  store i32 %conv243, i32* %ys1, align 4, !dbg !4948
  call void @llvm.dbg.declare(metadata i32* %xs2, metadata !4954, metadata !DIExpression()), !dbg !4955
  %195 = load float, float* %fx, align 4, !dbg !4956
  %196 = load float, float* %minx, align 4, !dbg !4957
  %add244 = fadd float %195, %196, !dbg !4958
  %197 = call float @llvm.floor.f32(float %add244), !dbg !4959
  %conv245 = fptosi float %197 to i32, !dbg !4960
  store i32 %conv245, i32* %xs2, align 4, !dbg !4955
  call void @llvm.dbg.declare(metadata i32* %ys2, metadata !4961, metadata !DIExpression()), !dbg !4962
  %198 = load float, float* %fy, align 4, !dbg !4963
  %199 = load float, float* %miny, align 4, !dbg !4964
  %add246 = fadd float %198, %199, !dbg !4965
  %200 = call float @llvm.floor.f32(float %add246), !dbg !4966
  %conv247 = fptosi float %200 to i32, !dbg !4967
  store i32 %conv247, i32* %ys2, align 4, !dbg !4962
  %201 = load i32, i32* %xs1, align 4, !dbg !4968
  %202 = load i32, i32* %xs2, align 4, !dbg !4970
  %cmp248 = icmp ne i32 %201, %202, !dbg !4971
  br i1 %cmp248, label %if.then253, label %lor.lhs.false250, !dbg !4972

lor.lhs.false250:                                 ; preds = %if.else239
  %203 = load i32, i32* %ys1, align 4, !dbg !4973
  %204 = load i32, i32* %ys2, align 4, !dbg !4974
  %cmp251 = icmp ne i32 %203, %204, !dbg !4975
  br i1 %cmp251, label %if.then253, label %if.else302, !dbg !4976

if.then253:                                       ; preds = %lor.lhs.false250, %if.else239
  %205 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !4977
  %flag254 = getelementptr inbounds %struct.Tex, %struct.Tex* %205, i32 0, i32 31, !dbg !4980
  %206 = load i16, i16* %flag254, align 2, !dbg !4980
  %conv255 = sext i16 %206 to i32, !dbg !4977
  %and256 = and i32 %conv255, 8, !dbg !4981
  %tobool257 = icmp ne i32 %and256, 0, !dbg !4981
  br i1 %tobool257, label %if.then258, label %if.end277, !dbg !4982

if.then258:                                       ; preds = %if.then253
  %207 = load i32, i32* %xs1, align 4, !dbg !4983
  %208 = load i32, i32* %ys, align 4, !dbg !4985
  %add259 = add nsw i32 %207, %208, !dbg !4986
  %and260 = and i32 %add259, 1, !dbg !4987
  %tobool261 = icmp ne i32 %and260, 0, !dbg !4987
  br i1 %tobool261, label %cond.true262, label %cond.false263, !dbg !4988

cond.true262:                                     ; preds = %if.then258
  %209 = load i32, i32* %xs2, align 4, !dbg !4989
  br label %cond.end264, !dbg !4988

cond.false263:                                    ; preds = %if.then258
  %210 = load i32, i32* %xs1, align 4, !dbg !4990
  br label %cond.end264, !dbg !4988

cond.end264:                                      ; preds = %cond.false263, %cond.true262
  %cond265 = phi i32 [ %209, %cond.true262 ], [ %210, %cond.false263 ], !dbg !4988
  %conv266 = sitofp i32 %cond265 to float, !dbg !4988
  %211 = load float, float* %fx, align 4, !dbg !4991
  %sub267 = fsub float %211, %conv266, !dbg !4991
  store float %sub267, float* %fx, align 4, !dbg !4991
  %212 = load i32, i32* %ys1, align 4, !dbg !4992
  %213 = load i32, i32* %xs, align 4, !dbg !4993
  %add268 = add nsw i32 %212, %213, !dbg !4994
  %and269 = and i32 %add268, 1, !dbg !4995
  %tobool270 = icmp ne i32 %and269, 0, !dbg !4995
  br i1 %tobool270, label %cond.true271, label %cond.false272, !dbg !4996

cond.true271:                                     ; preds = %cond.end264
  %214 = load i32, i32* %ys2, align 4, !dbg !4997
  br label %cond.end273, !dbg !4996

cond.false272:                                    ; preds = %cond.end264
  %215 = load i32, i32* %ys1, align 4, !dbg !4998
  br label %cond.end273, !dbg !4996

cond.end273:                                      ; preds = %cond.false272, %cond.true271
  %cond274 = phi i32 [ %214, %cond.true271 ], [ %215, %cond.false272 ], !dbg !4996
  %conv275 = sitofp i32 %cond274 to float, !dbg !4996
  %216 = load float, float* %fy, align 4, !dbg !4999
  %sub276 = fsub float %216, %conv275, !dbg !4999
  store float %sub276, float* %fy, align 4, !dbg !4999
  br label %if.end277, !dbg !5000

if.end277:                                        ; preds = %cond.end273, %if.then253
  %217 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !5001
  %flag278 = getelementptr inbounds %struct.Tex, %struct.Tex* %217, i32 0, i32 31, !dbg !5003
  %218 = load i16, i16* %flag278, align 2, !dbg !5003
  %conv279 = sext i16 %218 to i32, !dbg !5001
  %and280 = and i32 %conv279, 16, !dbg !5004
  %tobool281 = icmp ne i32 %and280, 0, !dbg !5004
  br i1 %tobool281, label %if.then282, label %if.end301, !dbg !5005

if.then282:                                       ; preds = %if.end277
  %219 = load i32, i32* %xs1, align 4, !dbg !5006
  %220 = load i32, i32* %ys, align 4, !dbg !5008
  %add283 = add nsw i32 %219, %220, !dbg !5009
  %and284 = and i32 %add283, 1, !dbg !5010
  %tobool285 = icmp ne i32 %and284, 0, !dbg !5010
  br i1 %tobool285, label %cond.true286, label %cond.false287, !dbg !5011

cond.true286:                                     ; preds = %if.then282
  %221 = load i32, i32* %xs1, align 4, !dbg !5012
  br label %cond.end288, !dbg !5011

cond.false287:                                    ; preds = %if.then282
  %222 = load i32, i32* %xs2, align 4, !dbg !5013
  br label %cond.end288, !dbg !5011

cond.end288:                                      ; preds = %cond.false287, %cond.true286
  %cond289 = phi i32 [ %221, %cond.true286 ], [ %222, %cond.false287 ], !dbg !5011
  %conv290 = sitofp i32 %cond289 to float, !dbg !5011
  %223 = load float, float* %fx, align 4, !dbg !5014
  %sub291 = fsub float %223, %conv290, !dbg !5014
  store float %sub291, float* %fx, align 4, !dbg !5014
  %224 = load i32, i32* %ys1, align 4, !dbg !5015
  %225 = load i32, i32* %xs, align 4, !dbg !5016
  %add292 = add nsw i32 %224, %225, !dbg !5017
  %and293 = and i32 %add292, 1, !dbg !5018
  %tobool294 = icmp ne i32 %and293, 0, !dbg !5018
  br i1 %tobool294, label %cond.true295, label %cond.false296, !dbg !5019

cond.true295:                                     ; preds = %cond.end288
  %226 = load i32, i32* %ys1, align 4, !dbg !5020
  br label %cond.end297, !dbg !5019

cond.false296:                                    ; preds = %cond.end288
  %227 = load i32, i32* %ys2, align 4, !dbg !5021
  br label %cond.end297, !dbg !5019

cond.end297:                                      ; preds = %cond.false296, %cond.true295
  %cond298 = phi i32 [ %226, %cond.true295 ], [ %227, %cond.false296 ], !dbg !5019
  %conv299 = sitofp i32 %cond298 to float, !dbg !5019
  %228 = load float, float* %fy, align 4, !dbg !5022
  %sub300 = fsub float %228, %conv299, !dbg !5022
  store float %sub300, float* %fy, align 4, !dbg !5022
  br label %if.end301, !dbg !5023

if.end301:                                        ; preds = %cond.end297, %if.end277
  br label %if.end336, !dbg !5024

if.else302:                                       ; preds = %lor.lhs.false250
  %229 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !5025
  %flag303 = getelementptr inbounds %struct.Tex, %struct.Tex* %229, i32 0, i32 31, !dbg !5028
  %230 = load i16, i16* %flag303, align 2, !dbg !5028
  %conv304 = sext i16 %230 to i32, !dbg !5025
  %and305 = and i32 %conv304, 8, !dbg !5029
  %cmp306 = icmp eq i32 %and305, 0, !dbg !5030
  br i1 %cmp306, label %land.lhs.true308, label %if.end317, !dbg !5031

land.lhs.true308:                                 ; preds = %if.else302
  %231 = load i32, i32* %xs, align 4, !dbg !5032
  %232 = load i32, i32* %ys, align 4, !dbg !5033
  %add309 = add nsw i32 %231, %232, !dbg !5034
  %and310 = and i32 %add309, 1, !dbg !5035
  %cmp311 = icmp eq i32 %and310, 0, !dbg !5036
  br i1 %cmp311, label %if.then313, label %if.end317, !dbg !5037

if.then313:                                       ; preds = %land.lhs.true308
  %233 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !5038
  %tobool314 = icmp ne %struct.Image* %233, null, !dbg !5038
  br i1 %tobool314, label %if.then315, label %if.end316, !dbg !5041

if.then315:                                       ; preds = %if.then313
  %234 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !5042
  %235 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !5043
  %236 = load %struct.ImagePool*, %struct.ImagePool** %pool.addr, align 8, !dbg !5044
  call void @BKE_image_pool_release_ibuf(%struct.Image* %234, %struct.ImBuf* %235, %struct.ImagePool* %236), !dbg !5045
  br label %if.end316, !dbg !5045

if.end316:                                        ; preds = %if.then315, %if.then313
  %237 = load i32, i32* %retval1, align 4, !dbg !5046
  store i32 %237, i32* %retval, align 4, !dbg !5047
  br label %return, !dbg !5047

if.end317:                                        ; preds = %land.lhs.true308, %if.else302
  %238 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !5048
  %flag318 = getelementptr inbounds %struct.Tex, %struct.Tex* %238, i32 0, i32 31, !dbg !5050
  %239 = load i16, i16* %flag318, align 2, !dbg !5050
  %conv319 = sext i16 %239 to i32, !dbg !5048
  %and320 = and i32 %conv319, 16, !dbg !5051
  %cmp321 = icmp eq i32 %and320, 0, !dbg !5052
  br i1 %cmp321, label %land.lhs.true323, label %if.end331, !dbg !5053

land.lhs.true323:                                 ; preds = %if.end317
  %240 = load i32, i32* %xs, align 4, !dbg !5054
  %241 = load i32, i32* %ys, align 4, !dbg !5055
  %add324 = add nsw i32 %240, %241, !dbg !5056
  %and325 = and i32 %add324, 1, !dbg !5057
  %tobool326 = icmp ne i32 %and325, 0, !dbg !5057
  br i1 %tobool326, label %if.then327, label %if.end331, !dbg !5058

if.then327:                                       ; preds = %land.lhs.true323
  %242 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !5059
  %tobool328 = icmp ne %struct.Image* %242, null, !dbg !5059
  br i1 %tobool328, label %if.then329, label %if.end330, !dbg !5062

if.then329:                                       ; preds = %if.then327
  %243 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !5063
  %244 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !5064
  %245 = load %struct.ImagePool*, %struct.ImagePool** %pool.addr, align 8, !dbg !5065
  call void @BKE_image_pool_release_ibuf(%struct.Image* %243, %struct.ImBuf* %244, %struct.ImagePool* %245), !dbg !5066
  br label %if.end330, !dbg !5066

if.end330:                                        ; preds = %if.then329, %if.then327
  %246 = load i32, i32* %retval1, align 4, !dbg !5067
  store i32 %246, i32* %retval, align 4, !dbg !5068
  br label %return, !dbg !5068

if.end331:                                        ; preds = %land.lhs.true323, %if.end317
  %247 = load i32, i32* %xs, align 4, !dbg !5069
  %conv332 = sitofp i32 %247 to float, !dbg !5069
  %248 = load float, float* %fx, align 4, !dbg !5070
  %sub333 = fsub float %248, %conv332, !dbg !5070
  store float %sub333, float* %fx, align 4, !dbg !5070
  %249 = load i32, i32* %ys, align 4, !dbg !5071
  %conv334 = sitofp i32 %249 to float, !dbg !5071
  %250 = load float, float* %fy, align 4, !dbg !5072
  %sub335 = fsub float %250, %conv334, !dbg !5072
  store float %sub335, float* %fy, align 4, !dbg !5072
  br label %if.end336

if.end336:                                        ; preds = %if.end331, %if.end301
  br label %if.end337

if.end337:                                        ; preds = %if.end336, %if.then234
  %251 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !5073
  %checkerdist = getelementptr inbounds %struct.Tex, %struct.Tex* %251, i32 0, i32 48, !dbg !5075
  %252 = load float, float* %checkerdist, align 4, !dbg !5075
  %cmp338 = fcmp olt float %252, 1.000000e+00, !dbg !5076
  br i1 %cmp338, label %if.then340, label %if.end352, !dbg !5077

if.then340:                                       ; preds = %if.end337
  call void @llvm.dbg.declare(metadata float* %omcd, metadata !5078, metadata !DIExpression()), !dbg !5080
  %253 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !5081
  %checkerdist341 = getelementptr inbounds %struct.Tex, %struct.Tex* %253, i32 0, i32 48, !dbg !5082
  %254 = load float, float* %checkerdist341, align 4, !dbg !5082
  %sub342 = fsub float 1.000000e+00, %254, !dbg !5083
  %div343 = fdiv float 1.000000e+00, %sub342, !dbg !5084
  store float %div343, float* %omcd, align 4, !dbg !5080
  %255 = load float, float* %fx, align 4, !dbg !5085
  %sub344 = fsub float %255, 5.000000e-01, !dbg !5086
  %256 = load float, float* %omcd, align 4, !dbg !5087
  %mul345 = fmul float %sub344, %256, !dbg !5088
  %add346 = fadd float %mul345, 5.000000e-01, !dbg !5089
  store float %add346, float* %fx, align 4, !dbg !5090
  %257 = load float, float* %fy, align 4, !dbg !5091
  %sub347 = fsub float %257, 5.000000e-01, !dbg !5092
  %258 = load float, float* %omcd, align 4, !dbg !5093
  %mul348 = fmul float %sub347, %258, !dbg !5094
  %add349 = fadd float %mul348, 5.000000e-01, !dbg !5095
  store float %add349, float* %fy, align 4, !dbg !5096
  %259 = load float, float* %omcd, align 4, !dbg !5097
  %260 = load float, float* %minx, align 4, !dbg !5098
  %mul350 = fmul float %260, %259, !dbg !5098
  store float %mul350, float* %minx, align 4, !dbg !5098
  %261 = load float, float* %omcd, align 4, !dbg !5099
  %262 = load float, float* %miny, align 4, !dbg !5100
  %mul351 = fmul float %262, %261, !dbg !5100
  store float %mul351, float* %miny, align 4, !dbg !5100
  br label %if.end352, !dbg !5101

if.end352:                                        ; preds = %if.then340, %if.end337
  br label %if.end353, !dbg !5102

if.end353:                                        ; preds = %if.end352, %if.end217
  %263 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !5103
  %extend354 = getelementptr inbounds %struct.Tex, %struct.Tex* %263, i32 0, i32 42, !dbg !5105
  %264 = load i16, i16* %extend354, align 8, !dbg !5105
  %conv355 = sext i16 %264 to i32, !dbg !5103
  %cmp356 = icmp eq i32 %conv355, 4, !dbg !5106
  br i1 %cmp356, label %if.then358, label %if.else387, !dbg !5107

if.then358:                                       ; preds = %if.end353
  %265 = load float, float* %fx, align 4, !dbg !5108
  %266 = load float, float* %minx, align 4, !dbg !5111
  %add359 = fadd float %265, %266, !dbg !5112
  %cmp360 = fcmp olt float %add359, 0.000000e+00, !dbg !5113
  br i1 %cmp360, label %if.then382, label %lor.lhs.false362, !dbg !5114

lor.lhs.false362:                                 ; preds = %if.then358
  %267 = load float, float* %fy, align 4, !dbg !5115
  %268 = load float, float* %miny, align 4, !dbg !5116
  %add363 = fadd float %267, %268, !dbg !5117
  %cmp364 = fcmp olt float %add363, 0.000000e+00, !dbg !5118
  br i1 %cmp364, label %if.then382, label %lor.lhs.false366, !dbg !5119

lor.lhs.false366:                                 ; preds = %lor.lhs.false362
  %269 = load float, float* %fx, align 4, !dbg !5120
  %270 = load float, float* %minx, align 4, !dbg !5121
  %sub367 = fsub float %269, %270, !dbg !5122
  %cmp368 = fcmp ogt float %sub367, 1.000000e+00, !dbg !5123
  br i1 %cmp368, label %if.then382, label %lor.lhs.false370, !dbg !5124

lor.lhs.false370:                                 ; preds = %lor.lhs.false366
  %271 = load float, float* %fy, align 4, !dbg !5125
  %272 = load float, float* %miny, align 4, !dbg !5126
  %sub371 = fsub float %271, %272, !dbg !5127
  %cmp372 = fcmp ogt float %sub371, 1.000000e+00, !dbg !5128
  br i1 %cmp372, label %if.then382, label %lor.lhs.false374, !dbg !5129

lor.lhs.false374:                                 ; preds = %lor.lhs.false370
  %273 = load float*, float** %texvec.addr, align 8, !dbg !5130
  %arrayidx375 = getelementptr inbounds float, float* %273, i64 2, !dbg !5130
  %274 = load float, float* %arrayidx375, align 4, !dbg !5130
  %cmp376 = fcmp olt float %274, -1.000000e+00, !dbg !5131
  br i1 %cmp376, label %if.then382, label %lor.lhs.false378, !dbg !5132

lor.lhs.false378:                                 ; preds = %lor.lhs.false374
  %275 = load float*, float** %texvec.addr, align 8, !dbg !5133
  %arrayidx379 = getelementptr inbounds float, float* %275, i64 2, !dbg !5133
  %276 = load float, float* %arrayidx379, align 4, !dbg !5133
  %cmp380 = fcmp ogt float %276, 1.000000e+00, !dbg !5134
  br i1 %cmp380, label %if.then382, label %if.end386, !dbg !5135

if.then382:                                       ; preds = %lor.lhs.false378, %lor.lhs.false374, %lor.lhs.false370, %lor.lhs.false366, %lor.lhs.false362, %if.then358
  %277 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !5136
  %tobool383 = icmp ne %struct.Image* %277, null, !dbg !5136
  br i1 %tobool383, label %if.then384, label %if.end385, !dbg !5139

if.then384:                                       ; preds = %if.then382
  %278 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !5140
  %279 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !5141
  %280 = load %struct.ImagePool*, %struct.ImagePool** %pool.addr, align 8, !dbg !5142
  call void @BKE_image_pool_release_ibuf(%struct.Image* %278, %struct.ImBuf* %279, %struct.ImagePool* %280), !dbg !5143
  br label %if.end385, !dbg !5143

if.end385:                                        ; preds = %if.then384, %if.then382
  %281 = load i32, i32* %retval1, align 4, !dbg !5144
  store i32 %281, i32* %retval, align 4, !dbg !5145
  br label %return, !dbg !5145

if.end386:                                        ; preds = %lor.lhs.false378
  br label %if.end453, !dbg !5146

if.else387:                                       ; preds = %if.end353
  %282 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !5147
  %extend388 = getelementptr inbounds %struct.Tex, %struct.Tex* %282, i32 0, i32 42, !dbg !5149
  %283 = load i16, i16* %extend388, align 8, !dbg !5149
  %conv389 = sext i16 %283 to i32, !dbg !5147
  %cmp390 = icmp eq i32 %conv389, 2, !dbg !5150
  br i1 %cmp390, label %if.then397, label %lor.lhs.false392, !dbg !5151

lor.lhs.false392:                                 ; preds = %if.else387
  %284 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !5152
  %extend393 = getelementptr inbounds %struct.Tex, %struct.Tex* %284, i32 0, i32 42, !dbg !5153
  %285 = load i16, i16* %extend393, align 8, !dbg !5153
  %conv394 = sext i16 %285 to i32, !dbg !5152
  %cmp395 = icmp eq i32 %conv394, 5, !dbg !5154
  br i1 %cmp395, label %if.then397, label %if.else418, !dbg !5155

if.then397:                                       ; preds = %lor.lhs.false392, %if.else387
  %286 = load float, float* %fx, align 4, !dbg !5156
  %287 = load float, float* %minx, align 4, !dbg !5159
  %add398 = fadd float %286, %287, !dbg !5160
  %cmp399 = fcmp olt float %add398, 0.000000e+00, !dbg !5161
  br i1 %cmp399, label %if.then413, label %lor.lhs.false401, !dbg !5162

lor.lhs.false401:                                 ; preds = %if.then397
  %288 = load float, float* %fy, align 4, !dbg !5163
  %289 = load float, float* %miny, align 4, !dbg !5164
  %add402 = fadd float %288, %289, !dbg !5165
  %cmp403 = fcmp olt float %add402, 0.000000e+00, !dbg !5166
  br i1 %cmp403, label %if.then413, label %lor.lhs.false405, !dbg !5167

lor.lhs.false405:                                 ; preds = %lor.lhs.false401
  %290 = load float, float* %fx, align 4, !dbg !5168
  %291 = load float, float* %minx, align 4, !dbg !5169
  %sub406 = fsub float %290, %291, !dbg !5170
  %cmp407 = fcmp ogt float %sub406, 1.000000e+00, !dbg !5171
  br i1 %cmp407, label %if.then413, label %lor.lhs.false409, !dbg !5172

lor.lhs.false409:                                 ; preds = %lor.lhs.false405
  %292 = load float, float* %fy, align 4, !dbg !5173
  %293 = load float, float* %miny, align 4, !dbg !5174
  %sub410 = fsub float %292, %293, !dbg !5175
  %cmp411 = fcmp ogt float %sub410, 1.000000e+00, !dbg !5176
  br i1 %cmp411, label %if.then413, label %if.end417, !dbg !5177

if.then413:                                       ; preds = %lor.lhs.false409, %lor.lhs.false405, %lor.lhs.false401, %if.then397
  %294 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !5178
  %tobool414 = icmp ne %struct.Image* %294, null, !dbg !5178
  br i1 %tobool414, label %if.then415, label %if.end416, !dbg !5181

if.then415:                                       ; preds = %if.then413
  %295 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !5182
  %296 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !5183
  %297 = load %struct.ImagePool*, %struct.ImagePool** %pool.addr, align 8, !dbg !5184
  call void @BKE_image_pool_release_ibuf(%struct.Image* %295, %struct.ImBuf* %296, %struct.ImagePool* %297), !dbg !5185
  br label %if.end416, !dbg !5185

if.end416:                                        ; preds = %if.then415, %if.then413
  %298 = load i32, i32* %retval1, align 4, !dbg !5186
  store i32 %298, i32* %retval, align 4, !dbg !5187
  br label %return, !dbg !5187

if.end417:                                        ; preds = %lor.lhs.false409
  br label %if.end452, !dbg !5188

if.else418:                                       ; preds = %lor.lhs.false392
  %299 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !5189
  %extend419 = getelementptr inbounds %struct.Tex, %struct.Tex* %299, i32 0, i32 42, !dbg !5192
  %300 = load i16, i16* %extend419, align 8, !dbg !5192
  %conv420 = sext i16 %300 to i32, !dbg !5189
  %cmp421 = icmp eq i32 %conv420, 1, !dbg !5193
  br i1 %cmp421, label %if.then423, label %if.else448, !dbg !5194

if.then423:                                       ; preds = %if.else418
  %301 = load float, float* %fx, align 4, !dbg !5195
  %cmp424 = fcmp ogt float %301, 1.000000e+00, !dbg !5197
  br i1 %cmp424, label %cond.true426, label %cond.false427, !dbg !5198

cond.true426:                                     ; preds = %if.then423
  br label %cond.end434, !dbg !5198

cond.false427:                                    ; preds = %if.then423
  %302 = load float, float* %fx, align 4, !dbg !5199
  %cmp428 = fcmp olt float %302, 0.000000e+00, !dbg !5200
  br i1 %cmp428, label %cond.true430, label %cond.false431, !dbg !5201

cond.true430:                                     ; preds = %cond.false427
  br label %cond.end432, !dbg !5201

cond.false431:                                    ; preds = %cond.false427
  %303 = load float, float* %fx, align 4, !dbg !5202
  br label %cond.end432, !dbg !5201

cond.end432:                                      ; preds = %cond.false431, %cond.true430
  %cond433 = phi float [ 0.000000e+00, %cond.true430 ], [ %303, %cond.false431 ], !dbg !5201
  br label %cond.end434, !dbg !5198

cond.end434:                                      ; preds = %cond.end432, %cond.true426
  %cond435 = phi float [ 1.000000e+00, %cond.true426 ], [ %cond433, %cond.end432 ], !dbg !5198
  store float %cond435, float* %fx, align 4, !dbg !5203
  %304 = load float, float* %fy, align 4, !dbg !5204
  %cmp436 = fcmp ogt float %304, 1.000000e+00, !dbg !5205
  br i1 %cmp436, label %cond.true438, label %cond.false439, !dbg !5206

cond.true438:                                     ; preds = %cond.end434
  br label %cond.end446, !dbg !5206

cond.false439:                                    ; preds = %cond.end434
  %305 = load float, float* %fy, align 4, !dbg !5207
  %cmp440 = fcmp olt float %305, 0.000000e+00, !dbg !5208
  br i1 %cmp440, label %cond.true442, label %cond.false443, !dbg !5209

cond.true442:                                     ; preds = %cond.false439
  br label %cond.end444, !dbg !5209

cond.false443:                                    ; preds = %cond.false439
  %306 = load float, float* %fy, align 4, !dbg !5210
  br label %cond.end444, !dbg !5209

cond.end444:                                      ; preds = %cond.false443, %cond.true442
  %cond445 = phi float [ 0.000000e+00, %cond.true442 ], [ %306, %cond.false443 ], !dbg !5209
  br label %cond.end446, !dbg !5206

cond.end446:                                      ; preds = %cond.end444, %cond.true438
  %cond447 = phi float [ 1.000000e+00, %cond.true438 ], [ %cond445, %cond.end444 ], !dbg !5206
  store float %cond447, float* %fy, align 4, !dbg !5211
  br label %if.end451, !dbg !5212

if.else448:                                       ; preds = %if.else418
  %307 = load float, float* %fx, align 4, !dbg !5213
  %308 = call float @llvm.floor.f32(float %307), !dbg !5215
  %309 = load float, float* %fx, align 4, !dbg !5216
  %sub449 = fsub float %309, %308, !dbg !5216
  store float %sub449, float* %fx, align 4, !dbg !5216
  %310 = load float, float* %fy, align 4, !dbg !5217
  %311 = call float @llvm.floor.f32(float %310), !dbg !5218
  %312 = load float, float* %fy, align 4, !dbg !5219
  %sub450 = fsub float %312, %311, !dbg !5219
  store float %sub450, float* %fy, align 4, !dbg !5219
  br label %if.end451

if.end451:                                        ; preds = %if.else448, %cond.end446
  br label %if.end452

if.end452:                                        ; preds = %if.end451, %if.end417
  br label %if.end453

if.end453:                                        ; preds = %if.end452, %if.end386
  %313 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !5220
  %imaflag454 = getelementptr inbounds %struct.Tex, %struct.Tex* %313, i32 0, i32 30, !dbg !5221
  %314 = load i16, i16* %imaflag454, align 4, !dbg !5221
  %conv455 = sext i16 %314 to i32, !dbg !5220
  %and456 = and i32 %conv455, 1, !dbg !5222
  store i32 %and456, i32* %intpol, align 4, !dbg !5223
  %315 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 4), align 8, !dbg !5224
  %conv457 = sext i16 %315 to i32, !dbg !5226
  %and458 = and i32 %conv457, 4, !dbg !5227
  %tobool459 = icmp ne i32 %and458, 0, !dbg !5227
  br i1 %tobool459, label %land.lhs.true460, label %if.end469, !dbg !5228

land.lhs.true460:                                 ; preds = %if.end453
  %316 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !5229
  %flags461 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %316, i32 0, i32 6, !dbg !5230
  %317 = load i32, i32* %flags461, align 8, !dbg !5230
  %and462 = and i32 %317, 4, !dbg !5231
  %tobool463 = icmp ne i32 %and462, 0, !dbg !5231
  br i1 %tobool463, label %if.then464, label %if.end469, !dbg !5232

if.then464:                                       ; preds = %land.lhs.true460
  %318 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !5233
  %x465 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %318, i32 0, i32 2, !dbg !5234
  %319 = load i32, i32* %x465, align 8, !dbg !5234
  %320 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !5235
  %y466 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %320, i32 0, i32 3, !dbg !5236
  %321 = load i32, i32* %y466, align 4, !dbg !5236
  %mul467 = mul nsw i32 %319, %321, !dbg !5237
  %322 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !5238
  %rect468 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %322, i32 0, i32 8, !dbg !5239
  %323 = load i32*, i32** %rect468, align 8, !dbg !5240
  %idx.ext = sext i32 %mul467 to i64, !dbg !5240
  %add.ptr = getelementptr inbounds i32, i32* %323, i64 %idx.ext, !dbg !5240
  store i32* %add.ptr, i32** %rect468, align 8, !dbg !5240
  br label %if.end469, !dbg !5238

if.end469:                                        ; preds = %if.then464, %land.lhs.true460, %if.end453
  %dxt470 = getelementptr inbounds %struct.afdata_t, %struct.afdata_t* %AFD, i32 0, i32 0, !dbg !5241
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %dxt470, i64 0, i64 0, !dbg !5242
  %324 = load float*, float** %dxt.addr, align 8, !dbg !5243
  call void @copy_v2_v2(float* %arraydecay, float* %324), !dbg !5244
  %dyt471 = getelementptr inbounds %struct.afdata_t, %struct.afdata_t* %AFD, i32 0, i32 1, !dbg !5245
  %arraydecay472 = getelementptr inbounds [2 x float], [2 x float]* %dyt471, i64 0, i64 0, !dbg !5246
  %325 = load float*, float** %dyt.addr, align 8, !dbg !5247
  call void @copy_v2_v2(float* %arraydecay472, float* %325), !dbg !5248
  %326 = load i32, i32* %intpol, align 4, !dbg !5249
  %intpol473 = getelementptr inbounds %struct.afdata_t, %struct.afdata_t* %AFD, i32 0, i32 2, !dbg !5250
  store i32 %326, i32* %intpol473, align 4, !dbg !5251
  %327 = load i32, i32* %extflag, align 4, !dbg !5252
  %extflag474 = getelementptr inbounds %struct.afdata_t, %struct.afdata_t* %AFD, i32 0, i32 3, !dbg !5253
  store i32 %327, i32* %extflag474, align 4, !dbg !5254
  %dxt475 = getelementptr inbounds %struct.afdata_t, %struct.afdata_t* %AFD, i32 0, i32 0, !dbg !5255
  %arrayidx476 = getelementptr inbounds [2 x float], [2 x float]* %dxt475, i64 0, i64 0, !dbg !5257
  %328 = load float, float* %arrayidx476, align 4, !dbg !5257
  %dxt477 = getelementptr inbounds %struct.afdata_t, %struct.afdata_t* %AFD, i32 0, i32 0, !dbg !5258
  %arrayidx478 = getelementptr inbounds [2 x float], [2 x float]* %dxt477, i64 0, i64 0, !dbg !5259
  %329 = load float, float* %arrayidx478, align 4, !dbg !5259
  %mul479 = fmul float %328, %329, !dbg !5260
  %dxt480 = getelementptr inbounds %struct.afdata_t, %struct.afdata_t* %AFD, i32 0, i32 0, !dbg !5261
  %arrayidx481 = getelementptr inbounds [2 x float], [2 x float]* %dxt480, i64 0, i64 1, !dbg !5262
  %330 = load float, float* %arrayidx481, align 4, !dbg !5262
  %dxt482 = getelementptr inbounds %struct.afdata_t, %struct.afdata_t* %AFD, i32 0, i32 0, !dbg !5263
  %arrayidx483 = getelementptr inbounds [2 x float], [2 x float]* %dxt482, i64 0, i64 1, !dbg !5264
  %331 = load float, float* %arrayidx483, align 4, !dbg !5264
  %mul484 = fmul float %330, %331, !dbg !5265
  %add485 = fadd float %mul479, %mul484, !dbg !5266
  %cmp486 = fcmp ogt float %add485, 4.000000e+00, !dbg !5267
  br i1 %cmp486, label %if.then488, label %if.end495, !dbg !5268

if.then488:                                       ; preds = %if.end469
  %dxt489 = getelementptr inbounds %struct.afdata_t, %struct.afdata_t* %AFD, i32 0, i32 0, !dbg !5269
  %arraydecay490 = getelementptr inbounds [2 x float], [2 x float]* %dxt489, i64 0, i64 0, !dbg !5270
  %dxt491 = getelementptr inbounds %struct.afdata_t, %struct.afdata_t* %AFD, i32 0, i32 0, !dbg !5271
  %arraydecay492 = getelementptr inbounds [2 x float], [2 x float]* %dxt491, i64 0, i64 0, !dbg !5272
  %call493 = call float @len_v2(float* %arraydecay492), !dbg !5273
  %div494 = fdiv float 2.000000e+00, %call493, !dbg !5274
  call void @mul_v2_fl(float* %arraydecay490, float %div494), !dbg !5275
  br label %if.end495, !dbg !5275

if.end495:                                        ; preds = %if.then488, %if.end469
  %dyt496 = getelementptr inbounds %struct.afdata_t, %struct.afdata_t* %AFD, i32 0, i32 1, !dbg !5276
  %arrayidx497 = getelementptr inbounds [2 x float], [2 x float]* %dyt496, i64 0, i64 0, !dbg !5278
  %332 = load float, float* %arrayidx497, align 4, !dbg !5278
  %dyt498 = getelementptr inbounds %struct.afdata_t, %struct.afdata_t* %AFD, i32 0, i32 1, !dbg !5279
  %arrayidx499 = getelementptr inbounds [2 x float], [2 x float]* %dyt498, i64 0, i64 0, !dbg !5280
  %333 = load float, float* %arrayidx499, align 4, !dbg !5280
  %mul500 = fmul float %332, %333, !dbg !5281
  %dyt501 = getelementptr inbounds %struct.afdata_t, %struct.afdata_t* %AFD, i32 0, i32 1, !dbg !5282
  %arrayidx502 = getelementptr inbounds [2 x float], [2 x float]* %dyt501, i64 0, i64 1, !dbg !5283
  %334 = load float, float* %arrayidx502, align 4, !dbg !5283
  %dyt503 = getelementptr inbounds %struct.afdata_t, %struct.afdata_t* %AFD, i32 0, i32 1, !dbg !5284
  %arrayidx504 = getelementptr inbounds [2 x float], [2 x float]* %dyt503, i64 0, i64 1, !dbg !5285
  %335 = load float, float* %arrayidx504, align 4, !dbg !5285
  %mul505 = fmul float %334, %335, !dbg !5286
  %add506 = fadd float %mul500, %mul505, !dbg !5287
  %cmp507 = fcmp ogt float %add506, 4.000000e+00, !dbg !5288
  br i1 %cmp507, label %if.then509, label %if.end516, !dbg !5289

if.then509:                                       ; preds = %if.end495
  %dyt510 = getelementptr inbounds %struct.afdata_t, %struct.afdata_t* %AFD, i32 0, i32 1, !dbg !5290
  %arraydecay511 = getelementptr inbounds [2 x float], [2 x float]* %dyt510, i64 0, i64 0, !dbg !5291
  %dyt512 = getelementptr inbounds %struct.afdata_t, %struct.afdata_t* %AFD, i32 0, i32 1, !dbg !5292
  %arraydecay513 = getelementptr inbounds [2 x float], [2 x float]* %dyt512, i64 0, i64 0, !dbg !5293
  %call514 = call float @len_v2(float* %arraydecay513), !dbg !5294
  %div515 = fdiv float 2.000000e+00, %call514, !dbg !5295
  call void @mul_v2_fl(float* %arraydecay511, float %div515), !dbg !5296
  br label %if.end516, !dbg !5296

if.end516:                                        ; preds = %if.then509, %if.end495
  %336 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !5297
  %imaflag517 = getelementptr inbounds %struct.Tex, %struct.Tex* %336, i32 0, i32 30, !dbg !5299
  %337 = load i16, i16* %imaflag517, align 4, !dbg !5299
  %conv518 = sext i16 %337 to i32, !dbg !5297
  %and519 = and i32 %conv518, 4, !dbg !5300
  %tobool520 = icmp ne i32 %and519, 0, !dbg !5300
  br i1 %tobool520, label %if.then521, label %if.else790, !dbg !5301

if.then521:                                       ; preds = %if.end516
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %previbuf, metadata !5302, metadata !DIExpression()), !dbg !5304
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %curibuf, metadata !5305, metadata !DIExpression()), !dbg !5306
  call void @llvm.dbg.declare(metadata float* %levf, metadata !5307, metadata !DIExpression()), !dbg !5308
  call void @llvm.dbg.declare(metadata i32* %maxlev, metadata !5309, metadata !DIExpression()), !dbg !5310
  call void @llvm.dbg.declare(metadata [21 x %struct.ImBuf*]* %mipmaps, metadata !5311, metadata !DIExpression()), !dbg !5315
  call void @llvm.dbg.declare(metadata float* %ff, metadata !5316, metadata !DIExpression()), !dbg !5317
  %338 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !5318
  %x522 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %338, i32 0, i32 2, !dbg !5319
  %339 = load i32, i32* %x522, align 8, !dbg !5319
  %conv523 = sitofp i32 %339 to float, !dbg !5318
  %call524 = call float @sqrtf(float %conv523) #5, !dbg !5320
  store float %call524, float* %ff, align 4, !dbg !5317
  call void @llvm.dbg.declare(metadata float* %q, metadata !5321, metadata !DIExpression()), !dbg !5322
  %340 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !5323
  %y525 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %340, i32 0, i32 3, !dbg !5324
  %341 = load i32, i32* %y525, align 4, !dbg !5324
  %conv526 = sitofp i32 %341 to float, !dbg !5323
  %342 = load float, float* %ff, align 4, !dbg !5325
  %div527 = fdiv float %conv526, %342, !dbg !5326
  store float %div527, float* %q, align 4, !dbg !5322
  call void @llvm.dbg.declare(metadata float* %Ux, metadata !5327, metadata !DIExpression()), !dbg !5328
  %343 = load float*, float** %dxt.addr, align 8, !dbg !5329
  %arrayidx528 = getelementptr inbounds float, float* %343, i64 0, !dbg !5329
  %344 = load float, float* %arrayidx528, align 4, !dbg !5329
  %345 = load float, float* %ff, align 4, !dbg !5330
  %mul529 = fmul float %344, %345, !dbg !5331
  store float %mul529, float* %Ux, align 4, !dbg !5328
  call void @llvm.dbg.declare(metadata float* %Vx, metadata !5332, metadata !DIExpression()), !dbg !5333
  %346 = load float*, float** %dxt.addr, align 8, !dbg !5334
  %arrayidx530 = getelementptr inbounds float, float* %346, i64 1, !dbg !5334
  %347 = load float, float* %arrayidx530, align 4, !dbg !5334
  %348 = load float, float* %q, align 4, !dbg !5335
  %mul531 = fmul float %347, %348, !dbg !5336
  store float %mul531, float* %Vx, align 4, !dbg !5333
  call void @llvm.dbg.declare(metadata float* %Uy, metadata !5337, metadata !DIExpression()), !dbg !5338
  %349 = load float*, float** %dyt.addr, align 8, !dbg !5339
  %arrayidx532 = getelementptr inbounds float, float* %349, i64 0, !dbg !5339
  %350 = load float, float* %arrayidx532, align 4, !dbg !5339
  %351 = load float, float* %ff, align 4, !dbg !5340
  %mul533 = fmul float %350, %351, !dbg !5341
  store float %mul533, float* %Uy, align 4, !dbg !5338
  call void @llvm.dbg.declare(metadata float* %Vy, metadata !5342, metadata !DIExpression()), !dbg !5343
  %352 = load float*, float** %dyt.addr, align 8, !dbg !5344
  %arrayidx534 = getelementptr inbounds float, float* %352, i64 1, !dbg !5344
  %353 = load float, float* %arrayidx534, align 4, !dbg !5344
  %354 = load float, float* %q, align 4, !dbg !5345
  %mul535 = fmul float %353, %354, !dbg !5346
  store float %mul535, float* %Vy, align 4, !dbg !5343
  call void @llvm.dbg.declare(metadata float* %A, metadata !5347, metadata !DIExpression()), !dbg !5348
  %355 = load float, float* %Vx, align 4, !dbg !5349
  %356 = load float, float* %Vx, align 4, !dbg !5350
  %mul536 = fmul float %355, %356, !dbg !5351
  %357 = load float, float* %Vy, align 4, !dbg !5352
  %358 = load float, float* %Vy, align 4, !dbg !5353
  %mul537 = fmul float %357, %358, !dbg !5354
  %add538 = fadd float %mul536, %mul537, !dbg !5355
  store float %add538, float* %A, align 4, !dbg !5348
  call void @llvm.dbg.declare(metadata float* %B, metadata !5356, metadata !DIExpression()), !dbg !5357
  %359 = load float, float* %Ux, align 4, !dbg !5358
  %360 = load float, float* %Vx, align 4, !dbg !5359
  %mul539 = fmul float %359, %360, !dbg !5360
  %361 = load float, float* %Uy, align 4, !dbg !5361
  %362 = load float, float* %Vy, align 4, !dbg !5362
  %mul540 = fmul float %361, %362, !dbg !5363
  %add541 = fadd float %mul539, %mul540, !dbg !5364
  %mul542 = fmul float -2.000000e+00, %add541, !dbg !5365
  store float %mul542, float* %B, align 4, !dbg !5357
  call void @llvm.dbg.declare(metadata float* %C, metadata !5366, metadata !DIExpression()), !dbg !5367
  %363 = load float, float* %Ux, align 4, !dbg !5368
  %364 = load float, float* %Ux, align 4, !dbg !5369
  %mul543 = fmul float %363, %364, !dbg !5370
  %365 = load float, float* %Uy, align 4, !dbg !5371
  %366 = load float, float* %Uy, align 4, !dbg !5372
  %mul544 = fmul float %365, %366, !dbg !5373
  %add545 = fadd float %mul543, %mul544, !dbg !5374
  store float %add545, float* %C, align 4, !dbg !5367
  call void @llvm.dbg.declare(metadata float* %F, metadata !5375, metadata !DIExpression()), !dbg !5376
  %367 = load float, float* %A, align 4, !dbg !5377
  %368 = load float, float* %C, align 4, !dbg !5378
  %mul546 = fmul float %367, %368, !dbg !5379
  %369 = load float, float* %B, align 4, !dbg !5380
  %370 = load float, float* %B, align 4, !dbg !5381
  %mul547 = fmul float %369, %370, !dbg !5382
  %mul548 = fmul float %mul547, 2.500000e-01, !dbg !5383
  %sub549 = fsub float %mul546, %mul548, !dbg !5384
  store float %sub549, float* %F, align 4, !dbg !5376
  call void @llvm.dbg.declare(metadata float* %a, metadata !5385, metadata !DIExpression()), !dbg !5386
  call void @llvm.dbg.declare(metadata float* %b, metadata !5387, metadata !DIExpression()), !dbg !5388
  call void @llvm.dbg.declare(metadata float* %th, metadata !5389, metadata !DIExpression()), !dbg !5390
  call void @llvm.dbg.declare(metadata float* %ecc, metadata !5391, metadata !DIExpression()), !dbg !5392
  %371 = load float, float* %A, align 4, !dbg !5393
  %372 = load float, float* %B, align 4, !dbg !5394
  %373 = load float, float* %C, align 4, !dbg !5395
  %374 = load float, float* %F, align 4, !dbg !5396
  call void @BLI_ewa_imp2radangle(float %371, float %372, float %373, float %374, float* %a, float* %b, float* %th, float* %ecc), !dbg !5397
  %375 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !5398
  %texfilter550 = getelementptr inbounds %struct.Tex, %struct.Tex* %375, i32 0, i32 38, !dbg !5400
  %376 = load i32, i32* %texfilter550, align 4, !dbg !5400
  %cmp551 = icmp eq i32 %376, 2, !dbg !5401
  br i1 %cmp551, label %if.then553, label %if.else589, !dbg !5402

if.then553:                                       ; preds = %if.then521
  call void @llvm.dbg.declare(metadata float* %fProbes, metadata !5403, metadata !DIExpression()), !dbg !5405
  %377 = load float, float* %ff, align 4, !dbg !5406
  %378 = load float, float* %a, align 4, !dbg !5407
  %mul554 = fmul float %378, %377, !dbg !5407
  store float %mul554, float* %a, align 4, !dbg !5407
  %379 = load float, float* %ff, align 4, !dbg !5408
  %380 = load float, float* %b, align 4, !dbg !5409
  %mul555 = fmul float %380, %379, !dbg !5409
  store float %mul555, float* %b, align 4, !dbg !5409
  %381 = load float, float* %a, align 4, !dbg !5410
  %call556 = call float @max_ff(float %381, float 1.000000e+00), !dbg !5411
  store float %call556, float* %a, align 4, !dbg !5412
  %382 = load float, float* %b, align 4, !dbg !5413
  %call557 = call float @max_ff(float %382, float 1.000000e+00), !dbg !5414
  store float %call557, float* %b, align 4, !dbg !5415
  %383 = load float, float* %a, align 4, !dbg !5416
  %384 = load float, float* %b, align 4, !dbg !5417
  %div558 = fdiv float %383, %384, !dbg !5418
  %mul559 = fmul float 2.000000e+00, %div558, !dbg !5419
  %sub560 = fsub float %mul559, 1.000000e+00, !dbg !5420
  store float %sub560, float* %fProbes, align 4, !dbg !5421
  %385 = load float, float* %fProbes, align 4, !dbg !5422
  %call561 = call i32 @iroundf(float %385), !dbg !5423
  %iProbes = getelementptr inbounds %struct.afdata_t, %struct.afdata_t* %AFD, i32 0, i32 7, !dbg !5424
  store i32 %call561, i32* %iProbes, align 4, !dbg !5425
  %iProbes562 = getelementptr inbounds %struct.afdata_t, %struct.afdata_t* %AFD, i32 0, i32 7, !dbg !5426
  %386 = load i32, i32* %iProbes562, align 4, !dbg !5426
  %387 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !5426
  %afmax = getelementptr inbounds %struct.Tex, %struct.Tex* %387, i32 0, i32 39, !dbg !5426
  %388 = load i32, i32* %afmax, align 8, !dbg !5426
  %cmp563 = icmp slt i32 %386, %388, !dbg !5426
  br i1 %cmp563, label %cond.true565, label %cond.false567, !dbg !5426

cond.true565:                                     ; preds = %if.then553
  %iProbes566 = getelementptr inbounds %struct.afdata_t, %struct.afdata_t* %AFD, i32 0, i32 7, !dbg !5426
  %389 = load i32, i32* %iProbes566, align 4, !dbg !5426
  br label %cond.end569, !dbg !5426

cond.false567:                                    ; preds = %if.then553
  %390 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !5426
  %afmax568 = getelementptr inbounds %struct.Tex, %struct.Tex* %390, i32 0, i32 39, !dbg !5426
  %391 = load i32, i32* %afmax568, align 8, !dbg !5426
  br label %cond.end569, !dbg !5426

cond.end569:                                      ; preds = %cond.false567, %cond.true565
  %cond570 = phi i32 [ %389, %cond.true565 ], [ %391, %cond.false567 ], !dbg !5426
  %iProbes571 = getelementptr inbounds %struct.afdata_t, %struct.afdata_t* %AFD, i32 0, i32 7, !dbg !5427
  store i32 %cond570, i32* %iProbes571, align 4, !dbg !5428
  %iProbes572 = getelementptr inbounds %struct.afdata_t, %struct.afdata_t* %AFD, i32 0, i32 7, !dbg !5429
  %392 = load i32, i32* %iProbes572, align 4, !dbg !5429
  %conv573 = sitofp i32 %392 to float, !dbg !5431
  %393 = load float, float* %fProbes, align 4, !dbg !5432
  %cmp574 = fcmp olt float %conv573, %393, !dbg !5433
  br i1 %cmp574, label %if.then576, label %if.end582, !dbg !5434

if.then576:                                       ; preds = %cond.end569
  %394 = load float, float* %a, align 4, !dbg !5435
  %mul577 = fmul float 2.000000e+00, %394, !dbg !5436
  %iProbes578 = getelementptr inbounds %struct.afdata_t, %struct.afdata_t* %AFD, i32 0, i32 7, !dbg !5437
  %395 = load i32, i32* %iProbes578, align 4, !dbg !5437
  %add579 = add nsw i32 %395, 1, !dbg !5438
  %conv580 = sitofp i32 %add579 to float, !dbg !5439
  %div581 = fdiv float %mul577, %conv580, !dbg !5440
  store float %div581, float* %b, align 4, !dbg !5441
  br label %if.end582, !dbg !5442

if.end582:                                        ; preds = %if.then576, %cond.end569
  %396 = load float, float* %a, align 4, !dbg !5443
  %397 = load float, float* %ff, align 4, !dbg !5444
  %div583 = fdiv float %396, %397, !dbg !5445
  %majrad = getelementptr inbounds %struct.afdata_t, %struct.afdata_t* %AFD, i32 0, i32 4, !dbg !5446
  store float %div583, float* %majrad, align 4, !dbg !5447
  %398 = load float, float* %b, align 4, !dbg !5448
  %399 = load float, float* %ff, align 4, !dbg !5449
  %div584 = fdiv float %398, %399, !dbg !5450
  %minrad = getelementptr inbounds %struct.afdata_t, %struct.afdata_t* %AFD, i32 0, i32 5, !dbg !5451
  store float %div584, float* %minrad, align 4, !dbg !5452
  %400 = load float, float* %th, align 4, !dbg !5453
  %theta = getelementptr inbounds %struct.afdata_t, %struct.afdata_t* %AFD, i32 0, i32 6, !dbg !5454
  store float %400, float* %theta, align 4, !dbg !5455
  %401 = load float, float* %ff, align 4, !dbg !5456
  %div585 = fdiv float 1.000000e+00, %401, !dbg !5457
  %dusc = getelementptr inbounds %struct.afdata_t, %struct.afdata_t* %AFD, i32 0, i32 8, !dbg !5458
  store float %div585, float* %dusc, align 4, !dbg !5459
  %402 = load float, float* %ff, align 4, !dbg !5460
  %403 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !5461
  %y586 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %403, i32 0, i32 3, !dbg !5462
  %404 = load i32, i32* %y586, align 4, !dbg !5462
  %conv587 = sitofp i32 %404 to float, !dbg !5463
  %div588 = fdiv float %402, %conv587, !dbg !5464
  %dvsc = getelementptr inbounds %struct.afdata_t, %struct.afdata_t* %AFD, i32 0, i32 9, !dbg !5465
  store float %div588, float* %dvsc, align 4, !dbg !5466
  br label %if.end600, !dbg !5467

if.else589:                                       ; preds = %if.then521
  %405 = load float, float* %ecc, align 4, !dbg !5468
  %406 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !5471
  %afmax590 = getelementptr inbounds %struct.Tex, %struct.Tex* %406, i32 0, i32 39, !dbg !5472
  %407 = load i32, i32* %afmax590, align 8, !dbg !5472
  %conv591 = sitofp i32 %407 to float, !dbg !5473
  %cmp592 = fcmp ogt float %405, %conv591, !dbg !5474
  br i1 %cmp592, label %if.then594, label %if.end598, !dbg !5475

if.then594:                                       ; preds = %if.else589
  %408 = load float, float* %a, align 4, !dbg !5476
  %409 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !5477
  %afmax595 = getelementptr inbounds %struct.Tex, %struct.Tex* %409, i32 0, i32 39, !dbg !5478
  %410 = load i32, i32* %afmax595, align 8, !dbg !5478
  %conv596 = sitofp i32 %410 to float, !dbg !5479
  %div597 = fdiv float %408, %conv596, !dbg !5480
  store float %div597, float* %b, align 4, !dbg !5481
  br label %if.end598, !dbg !5482

if.end598:                                        ; preds = %if.then594, %if.else589
  %411 = load float, float* %ff, align 4, !dbg !5483
  %412 = load float, float* %b, align 4, !dbg !5484
  %mul599 = fmul float %412, %411, !dbg !5484
  store float %mul599, float* %b, align 4, !dbg !5484
  br label %if.end600

if.end600:                                        ; preds = %if.end598, %if.end582
  %413 = load float, float* %b, align 4, !dbg !5485
  %call601 = call float @max_ff(float %413, float 0x3E45798EE0000000), !dbg !5486
  store float %call601, float* %maxd, align 4, !dbg !5487
  %414 = load float, float* %maxd, align 4, !dbg !5488
  %call602 = call float @logf(float %414) #5, !dbg !5489
  %mul603 = fmul float 0x3FF7154760000000, %call602, !dbg !5490
  store float %mul603, float* %levf, align 4, !dbg !5491
  store i32 0, i32* %curmap, align 4, !dbg !5492
  store i32 1, i32* %maxlev, align 4, !dbg !5493
  %415 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !5494
  %arrayidx604 = getelementptr inbounds [21 x %struct.ImBuf*], [21 x %struct.ImBuf*]* %mipmaps, i64 0, i64 0, !dbg !5495
  store %struct.ImBuf* %415, %struct.ImBuf** %arrayidx604, align 16, !dbg !5496
  br label %while.cond, !dbg !5497

while.cond:                                       ; preds = %if.end616, %if.end600
  %416 = load i32, i32* %curmap, align 4, !dbg !5498
  %cmp605 = icmp slt i32 %416, 20, !dbg !5499
  br i1 %cmp605, label %while.body, label %while.end, !dbg !5497

while.body:                                       ; preds = %while.cond
  %417 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !5500
  %mipmap = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %417, i32 0, i32 19, !dbg !5502
  %418 = load i32, i32* %curmap, align 4, !dbg !5503
  %idxprom = sext i32 %418 to i64, !dbg !5500
  %arrayidx607 = getelementptr inbounds [20 x %struct.ImBuf*], [20 x %struct.ImBuf*]* %mipmap, i64 0, i64 %idxprom, !dbg !5500
  %419 = load %struct.ImBuf*, %struct.ImBuf** %arrayidx607, align 8, !dbg !5500
  %420 = load i32, i32* %curmap, align 4, !dbg !5504
  %add608 = add nsw i32 %420, 1, !dbg !5505
  %idxprom609 = sext i32 %add608 to i64, !dbg !5506
  %arrayidx610 = getelementptr inbounds [21 x %struct.ImBuf*], [21 x %struct.ImBuf*]* %mipmaps, i64 0, i64 %idxprom609, !dbg !5506
  store %struct.ImBuf* %419, %struct.ImBuf** %arrayidx610, align 8, !dbg !5507
  %421 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !5508
  %mipmap611 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %421, i32 0, i32 19, !dbg !5510
  %422 = load i32, i32* %curmap, align 4, !dbg !5511
  %idxprom612 = sext i32 %422 to i64, !dbg !5508
  %arrayidx613 = getelementptr inbounds [20 x %struct.ImBuf*], [20 x %struct.ImBuf*]* %mipmap611, i64 0, i64 %idxprom612, !dbg !5508
  %423 = load %struct.ImBuf*, %struct.ImBuf** %arrayidx613, align 8, !dbg !5508
  %tobool614 = icmp ne %struct.ImBuf* %423, null, !dbg !5508
  br i1 %tobool614, label %if.then615, label %if.end616, !dbg !5512

if.then615:                                       ; preds = %while.body
  %424 = load i32, i32* %maxlev, align 4, !dbg !5513
  %inc = add nsw i32 %424, 1, !dbg !5513
  store i32 %inc, i32* %maxlev, align 4, !dbg !5513
  br label %if.end616, !dbg !5514

if.end616:                                        ; preds = %if.then615, %while.body
  %425 = load i32, i32* %curmap, align 4, !dbg !5515
  %inc617 = add nsw i32 %425, 1, !dbg !5515
  store i32 %inc617, i32* %curmap, align 4, !dbg !5515
  br label %while.cond, !dbg !5497, !llvm.loop !5516

while.end:                                        ; preds = %while.cond
  %426 = load float, float* %levf, align 4, !dbg !5518
  %cmp618 = fcmp olt float %426, 0.000000e+00, !dbg !5520
  br i1 %cmp618, label %if.then620, label %if.else622, !dbg !5521

if.then620:                                       ; preds = %while.end
  %arrayidx621 = getelementptr inbounds [21 x %struct.ImBuf*], [21 x %struct.ImBuf*]* %mipmaps, i64 0, i64 0, !dbg !5522
  %427 = load %struct.ImBuf*, %struct.ImBuf** %arrayidx621, align 16, !dbg !5522
  store %struct.ImBuf* %427, %struct.ImBuf** %curibuf, align 8, !dbg !5524
  store %struct.ImBuf* %427, %struct.ImBuf** %previbuf, align 8, !dbg !5525
  store float 0.000000e+00, float* %levf, align 4, !dbg !5526
  br label %if.end651, !dbg !5527

if.else622:                                       ; preds = %while.end
  %428 = load float, float* %levf, align 4, !dbg !5528
  %429 = load i32, i32* %maxlev, align 4, !dbg !5530
  %sub623 = sub nsw i32 %429, 1, !dbg !5531
  %conv624 = sitofp i32 %sub623 to float, !dbg !5530
  %cmp625 = fcmp oge float %428, %conv624, !dbg !5532
  br i1 %cmp625, label %if.then627, label %if.else637, !dbg !5533

if.then627:                                       ; preds = %if.else622
  %430 = load i32, i32* %maxlev, align 4, !dbg !5534
  %sub628 = sub nsw i32 %430, 1, !dbg !5536
  %idxprom629 = sext i32 %sub628 to i64, !dbg !5537
  %arrayidx630 = getelementptr inbounds [21 x %struct.ImBuf*], [21 x %struct.ImBuf*]* %mipmaps, i64 0, i64 %idxprom629, !dbg !5537
  %431 = load %struct.ImBuf*, %struct.ImBuf** %arrayidx630, align 8, !dbg !5537
  store %struct.ImBuf* %431, %struct.ImBuf** %curibuf, align 8, !dbg !5538
  store %struct.ImBuf* %431, %struct.ImBuf** %previbuf, align 8, !dbg !5539
  store float 0.000000e+00, float* %levf, align 4, !dbg !5540
  %432 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !5541
  %texfilter631 = getelementptr inbounds %struct.Tex, %struct.Tex* %432, i32 0, i32 38, !dbg !5543
  %433 = load i32, i32* %texfilter631, align 4, !dbg !5543
  %cmp632 = icmp eq i32 %433, 2, !dbg !5544
  br i1 %cmp632, label %if.then634, label %if.end636, !dbg !5545

if.then634:                                       ; preds = %if.then627
  %iProbes635 = getelementptr inbounds %struct.afdata_t, %struct.afdata_t* %AFD, i32 0, i32 7, !dbg !5546
  store i32 1, i32* %iProbes635, align 4, !dbg !5547
  br label %if.end636, !dbg !5548

if.end636:                                        ; preds = %if.then634, %if.then627
  br label %if.end650, !dbg !5549

if.else637:                                       ; preds = %if.else622
  call void @llvm.dbg.declare(metadata i32* %lev, metadata !5550, metadata !DIExpression()), !dbg !5552
  %434 = load float, float* %levf, align 4, !dbg !5553
  %cmp638 = fcmp uno float %434, %434, !dbg !5553
  br i1 %cmp638, label %cond.true639, label %cond.false640, !dbg !5553

cond.true639:                                     ; preds = %if.else637
  br label %cond.end642, !dbg !5553

cond.false640:                                    ; preds = %if.else637
  %435 = load float, float* %levf, align 4, !dbg !5554
  %conv641 = fptosi float %435 to i32, !dbg !5555
  br label %cond.end642, !dbg !5553

cond.end642:                                      ; preds = %cond.false640, %cond.true639
  %cond643 = phi i32 [ 0, %cond.true639 ], [ %conv641, %cond.false640 ], !dbg !5553
  store i32 %cond643, i32* %lev, align 4, !dbg !5552
  %436 = load i32, i32* %lev, align 4, !dbg !5556
  %idxprom644 = sext i32 %436 to i64, !dbg !5557
  %arrayidx645 = getelementptr inbounds [21 x %struct.ImBuf*], [21 x %struct.ImBuf*]* %mipmaps, i64 0, i64 %idxprom644, !dbg !5557
  %437 = load %struct.ImBuf*, %struct.ImBuf** %arrayidx645, align 8, !dbg !5557
  store %struct.ImBuf* %437, %struct.ImBuf** %curibuf, align 8, !dbg !5558
  %438 = load i32, i32* %lev, align 4, !dbg !5559
  %add646 = add nsw i32 %438, 1, !dbg !5560
  %idxprom647 = sext i32 %add646 to i64, !dbg !5561
  %arrayidx648 = getelementptr inbounds [21 x %struct.ImBuf*], [21 x %struct.ImBuf*]* %mipmaps, i64 0, i64 %idxprom647, !dbg !5561
  %439 = load %struct.ImBuf*, %struct.ImBuf** %arrayidx648, align 8, !dbg !5561
  store %struct.ImBuf* %439, %struct.ImBuf** %previbuf, align 8, !dbg !5562
  %440 = load float, float* %levf, align 4, !dbg !5563
  %441 = call float @llvm.floor.f32(float %440), !dbg !5564
  %442 = load float, float* %levf, align 4, !dbg !5565
  %sub649 = fsub float %442, %441, !dbg !5565
  store float %sub649, float* %levf, align 4, !dbg !5565
  br label %if.end650

if.end650:                                        ; preds = %cond.end642, %if.end636
  br label %if.end651

if.end651:                                        ; preds = %if.end650, %if.then620
  %443 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !5566
  %nor652 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %443, i32 0, i32 6, !dbg !5568
  %444 = load float*, float** %nor652, align 8, !dbg !5568
  %tobool653 = icmp ne float* %444, null, !dbg !5566
  br i1 %tobool653, label %land.lhs.true654, label %if.else756, !dbg !5569

land.lhs.true654:                                 ; preds = %if.end651
  %445 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !5570
  %imaflag655 = getelementptr inbounds %struct.Tex, %struct.Tex* %445, i32 0, i32 30, !dbg !5571
  %446 = load i16, i16* %imaflag655, align 4, !dbg !5571
  %conv656 = sext i16 %446 to i32, !dbg !5570
  %and657 = and i32 %conv656, 2048, !dbg !5572
  %cmp658 = icmp eq i32 %and657, 0, !dbg !5573
  br i1 %cmp658, label %if.then660, label %if.else756, !dbg !5574

if.then660:                                       ; preds = %land.lhs.true654
  %447 = load void (%struct.TexResult*, %struct.ImBuf*, float, float, %struct.afdata_t*)*, void (%struct.TexResult*, %struct.ImBuf*, float, float, %struct.afdata_t*)** %filterfunc, align 8, !dbg !5575
  %448 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !5577
  %449 = load %struct.ImBuf*, %struct.ImBuf** %curibuf, align 8, !dbg !5578
  %450 = load float, float* %fx, align 4, !dbg !5579
  %451 = load float, float* %fy, align 4, !dbg !5580
  call void %447(%struct.TexResult* %448, %struct.ImBuf* %449, float %450, float %451, %struct.afdata_t* %AFD), !dbg !5575
  %452 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !5581
  %tr661 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %452, i32 0, i32 1, !dbg !5582
  %453 = load float, float* %tr661, align 4, !dbg !5582
  %454 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !5583
  %tg662 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %454, i32 0, i32 2, !dbg !5584
  %455 = load float, float* %tg662, align 8, !dbg !5584
  %add663 = fadd float %453, %455, !dbg !5585
  %456 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !5586
  %tb664 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %456, i32 0, i32 3, !dbg !5587
  %457 = load float, float* %tb664, align 4, !dbg !5587
  %add665 = fadd float %add663, %457, !dbg !5588
  store float %add665, float* %val1, align 4, !dbg !5589
  %458 = load void (%struct.TexResult*, %struct.ImBuf*, float, float, %struct.afdata_t*)*, void (%struct.TexResult*, %struct.ImBuf*, float, float, %struct.afdata_t*)** %filterfunc, align 8, !dbg !5590
  %459 = load %struct.ImBuf*, %struct.ImBuf** %curibuf, align 8, !dbg !5591
  %460 = load float, float* %fx, align 4, !dbg !5592
  %461 = load float*, float** %dxt.addr, align 8, !dbg !5593
  %arrayidx666 = getelementptr inbounds float, float* %461, i64 0, !dbg !5593
  %462 = load float, float* %arrayidx666, align 4, !dbg !5593
  %add667 = fadd float %460, %462, !dbg !5594
  %463 = load float, float* %fy, align 4, !dbg !5595
  %464 = load float*, float** %dxt.addr, align 8, !dbg !5596
  %arrayidx668 = getelementptr inbounds float, float* %464, i64 1, !dbg !5596
  %465 = load float, float* %arrayidx668, align 4, !dbg !5596
  %add669 = fadd float %463, %465, !dbg !5597
  call void %458(%struct.TexResult* %texr, %struct.ImBuf* %459, float %add667, float %add669, %struct.afdata_t* %AFD), !dbg !5590
  %tr670 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texr, i32 0, i32 1, !dbg !5598
  %466 = load float, float* %tr670, align 4, !dbg !5598
  %tg671 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texr, i32 0, i32 2, !dbg !5599
  %467 = load float, float* %tg671, align 8, !dbg !5599
  %add672 = fadd float %466, %467, !dbg !5600
  %tb673 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texr, i32 0, i32 3, !dbg !5601
  %468 = load float, float* %tb673, align 4, !dbg !5601
  %add674 = fadd float %add672, %468, !dbg !5602
  store float %add674, float* %val2, align 4, !dbg !5603
  %469 = load void (%struct.TexResult*, %struct.ImBuf*, float, float, %struct.afdata_t*)*, void (%struct.TexResult*, %struct.ImBuf*, float, float, %struct.afdata_t*)** %filterfunc, align 8, !dbg !5604
  %470 = load %struct.ImBuf*, %struct.ImBuf** %curibuf, align 8, !dbg !5605
  %471 = load float, float* %fx, align 4, !dbg !5606
  %472 = load float*, float** %dyt.addr, align 8, !dbg !5607
  %arrayidx675 = getelementptr inbounds float, float* %472, i64 0, !dbg !5607
  %473 = load float, float* %arrayidx675, align 4, !dbg !5607
  %add676 = fadd float %471, %473, !dbg !5608
  %474 = load float, float* %fy, align 4, !dbg !5609
  %475 = load float*, float** %dyt.addr, align 8, !dbg !5610
  %arrayidx677 = getelementptr inbounds float, float* %475, i64 1, !dbg !5610
  %476 = load float, float* %arrayidx677, align 4, !dbg !5610
  %add678 = fadd float %474, %476, !dbg !5611
  call void %469(%struct.TexResult* %texr, %struct.ImBuf* %470, float %add676, float %add678, %struct.afdata_t* %AFD), !dbg !5604
  %tr679 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texr, i32 0, i32 1, !dbg !5612
  %477 = load float, float* %tr679, align 4, !dbg !5612
  %tg680 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texr, i32 0, i32 2, !dbg !5613
  %478 = load float, float* %tg680, align 8, !dbg !5613
  %add681 = fadd float %477, %478, !dbg !5614
  %tb682 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texr, i32 0, i32 3, !dbg !5615
  %479 = load float, float* %tb682, align 4, !dbg !5615
  %add683 = fadd float %add681, %479, !dbg !5616
  store float %add683, float* %val3, align 4, !dbg !5617
  %480 = load float, float* %val1, align 4, !dbg !5618
  %481 = load float, float* %val2, align 4, !dbg !5619
  %sub684 = fsub float %480, %481, !dbg !5620
  %482 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !5621
  %nor685 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %482, i32 0, i32 6, !dbg !5622
  %483 = load float*, float** %nor685, align 8, !dbg !5622
  %arrayidx686 = getelementptr inbounds float, float* %483, i64 0, !dbg !5621
  store float %sub684, float* %arrayidx686, align 4, !dbg !5623
  %484 = load float, float* %val1, align 4, !dbg !5624
  %485 = load float, float* %val3, align 4, !dbg !5625
  %sub687 = fsub float %484, %485, !dbg !5626
  %486 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !5627
  %nor688 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %486, i32 0, i32 6, !dbg !5628
  %487 = load float*, float** %nor688, align 8, !dbg !5628
  %arrayidx689 = getelementptr inbounds float, float* %487, i64 1, !dbg !5627
  store float %sub687, float* %arrayidx689, align 4, !dbg !5629
  %488 = load %struct.ImBuf*, %struct.ImBuf** %previbuf, align 8, !dbg !5630
  %489 = load %struct.ImBuf*, %struct.ImBuf** %curibuf, align 8, !dbg !5632
  %cmp690 = icmp ne %struct.ImBuf* %488, %489, !dbg !5633
  br i1 %cmp690, label %if.then692, label %if.end755, !dbg !5634

if.then692:                                       ; preds = %if.then660
  %490 = load void (%struct.TexResult*, %struct.ImBuf*, float, float, %struct.afdata_t*)*, void (%struct.TexResult*, %struct.ImBuf*, float, float, %struct.afdata_t*)** %filterfunc, align 8, !dbg !5635
  %491 = load %struct.ImBuf*, %struct.ImBuf** %previbuf, align 8, !dbg !5637
  %492 = load float, float* %fx, align 4, !dbg !5638
  %493 = load float, float* %fy, align 4, !dbg !5639
  call void %490(%struct.TexResult* %texr, %struct.ImBuf* %491, float %492, float %493, %struct.afdata_t* %AFD), !dbg !5635
  %494 = load float, float* %levf, align 4, !dbg !5640
  %tr693 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texr, i32 0, i32 1, !dbg !5641
  %495 = load float, float* %tr693, align 4, !dbg !5641
  %496 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !5642
  %tr694 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %496, i32 0, i32 1, !dbg !5643
  %497 = load float, float* %tr694, align 4, !dbg !5643
  %sub695 = fsub float %495, %497, !dbg !5644
  %mul696 = fmul float %494, %sub695, !dbg !5645
  %498 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !5646
  %tr697 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %498, i32 0, i32 1, !dbg !5647
  %499 = load float, float* %tr697, align 4, !dbg !5648
  %add698 = fadd float %499, %mul696, !dbg !5648
  store float %add698, float* %tr697, align 4, !dbg !5648
  %500 = load float, float* %levf, align 4, !dbg !5649
  %tg699 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texr, i32 0, i32 2, !dbg !5650
  %501 = load float, float* %tg699, align 8, !dbg !5650
  %502 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !5651
  %tg700 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %502, i32 0, i32 2, !dbg !5652
  %503 = load float, float* %tg700, align 8, !dbg !5652
  %sub701 = fsub float %501, %503, !dbg !5653
  %mul702 = fmul float %500, %sub701, !dbg !5654
  %504 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !5655
  %tg703 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %504, i32 0, i32 2, !dbg !5656
  %505 = load float, float* %tg703, align 8, !dbg !5657
  %add704 = fadd float %505, %mul702, !dbg !5657
  store float %add704, float* %tg703, align 8, !dbg !5657
  %506 = load float, float* %levf, align 4, !dbg !5658
  %tb705 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texr, i32 0, i32 3, !dbg !5659
  %507 = load float, float* %tb705, align 4, !dbg !5659
  %508 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !5660
  %tb706 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %508, i32 0, i32 3, !dbg !5661
  %509 = load float, float* %tb706, align 4, !dbg !5661
  %sub707 = fsub float %507, %509, !dbg !5662
  %mul708 = fmul float %506, %sub707, !dbg !5663
  %510 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !5664
  %tb709 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %510, i32 0, i32 3, !dbg !5665
  %511 = load float, float* %tb709, align 4, !dbg !5666
  %add710 = fadd float %511, %mul708, !dbg !5666
  store float %add710, float* %tb709, align 4, !dbg !5666
  %512 = load float, float* %levf, align 4, !dbg !5667
  %ta711 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texr, i32 0, i32 4, !dbg !5668
  %513 = load float, float* %ta711, align 8, !dbg !5668
  %514 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !5669
  %ta712 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %514, i32 0, i32 4, !dbg !5670
  %515 = load float, float* %ta712, align 8, !dbg !5670
  %sub713 = fsub float %513, %515, !dbg !5671
  %mul714 = fmul float %512, %sub713, !dbg !5672
  %516 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !5673
  %ta715 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %516, i32 0, i32 4, !dbg !5674
  %517 = load float, float* %ta715, align 8, !dbg !5675
  %add716 = fadd float %517, %mul714, !dbg !5675
  store float %add716, float* %ta715, align 8, !dbg !5675
  %518 = load float, float* %levf, align 4, !dbg !5676
  %tr717 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texr, i32 0, i32 1, !dbg !5677
  %519 = load float, float* %tr717, align 4, !dbg !5677
  %tg718 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texr, i32 0, i32 2, !dbg !5678
  %520 = load float, float* %tg718, align 8, !dbg !5678
  %add719 = fadd float %519, %520, !dbg !5679
  %tb720 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texr, i32 0, i32 3, !dbg !5680
  %521 = load float, float* %tb720, align 4, !dbg !5680
  %add721 = fadd float %add719, %521, !dbg !5681
  %522 = load float, float* %val1, align 4, !dbg !5682
  %sub722 = fsub float %add721, %522, !dbg !5683
  %mul723 = fmul float %518, %sub722, !dbg !5684
  %523 = load float, float* %val1, align 4, !dbg !5685
  %add724 = fadd float %523, %mul723, !dbg !5685
  store float %add724, float* %val1, align 4, !dbg !5685
  %524 = load void (%struct.TexResult*, %struct.ImBuf*, float, float, %struct.afdata_t*)*, void (%struct.TexResult*, %struct.ImBuf*, float, float, %struct.afdata_t*)** %filterfunc, align 8, !dbg !5686
  %525 = load %struct.ImBuf*, %struct.ImBuf** %previbuf, align 8, !dbg !5687
  %526 = load float, float* %fx, align 4, !dbg !5688
  %527 = load float*, float** %dxt.addr, align 8, !dbg !5689
  %arrayidx725 = getelementptr inbounds float, float* %527, i64 0, !dbg !5689
  %528 = load float, float* %arrayidx725, align 4, !dbg !5689
  %add726 = fadd float %526, %528, !dbg !5690
  %529 = load float, float* %fy, align 4, !dbg !5691
  %530 = load float*, float** %dxt.addr, align 8, !dbg !5692
  %arrayidx727 = getelementptr inbounds float, float* %530, i64 1, !dbg !5692
  %531 = load float, float* %arrayidx727, align 4, !dbg !5692
  %add728 = fadd float %529, %531, !dbg !5693
  call void %524(%struct.TexResult* %texr, %struct.ImBuf* %525, float %add726, float %add728, %struct.afdata_t* %AFD), !dbg !5686
  %532 = load float, float* %levf, align 4, !dbg !5694
  %tr729 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texr, i32 0, i32 1, !dbg !5695
  %533 = load float, float* %tr729, align 4, !dbg !5695
  %tg730 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texr, i32 0, i32 2, !dbg !5696
  %534 = load float, float* %tg730, align 8, !dbg !5696
  %add731 = fadd float %533, %534, !dbg !5697
  %tb732 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texr, i32 0, i32 3, !dbg !5698
  %535 = load float, float* %tb732, align 4, !dbg !5698
  %add733 = fadd float %add731, %535, !dbg !5699
  %536 = load float, float* %val2, align 4, !dbg !5700
  %sub734 = fsub float %add733, %536, !dbg !5701
  %mul735 = fmul float %532, %sub734, !dbg !5702
  %537 = load float, float* %val2, align 4, !dbg !5703
  %add736 = fadd float %537, %mul735, !dbg !5703
  store float %add736, float* %val2, align 4, !dbg !5703
  %538 = load void (%struct.TexResult*, %struct.ImBuf*, float, float, %struct.afdata_t*)*, void (%struct.TexResult*, %struct.ImBuf*, float, float, %struct.afdata_t*)** %filterfunc, align 8, !dbg !5704
  %539 = load %struct.ImBuf*, %struct.ImBuf** %previbuf, align 8, !dbg !5705
  %540 = load float, float* %fx, align 4, !dbg !5706
  %541 = load float*, float** %dyt.addr, align 8, !dbg !5707
  %arrayidx737 = getelementptr inbounds float, float* %541, i64 0, !dbg !5707
  %542 = load float, float* %arrayidx737, align 4, !dbg !5707
  %add738 = fadd float %540, %542, !dbg !5708
  %543 = load float, float* %fy, align 4, !dbg !5709
  %544 = load float*, float** %dyt.addr, align 8, !dbg !5710
  %arrayidx739 = getelementptr inbounds float, float* %544, i64 1, !dbg !5710
  %545 = load float, float* %arrayidx739, align 4, !dbg !5710
  %add740 = fadd float %543, %545, !dbg !5711
  call void %538(%struct.TexResult* %texr, %struct.ImBuf* %539, float %add738, float %add740, %struct.afdata_t* %AFD), !dbg !5704
  %546 = load float, float* %levf, align 4, !dbg !5712
  %tr741 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texr, i32 0, i32 1, !dbg !5713
  %547 = load float, float* %tr741, align 4, !dbg !5713
  %tg742 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texr, i32 0, i32 2, !dbg !5714
  %548 = load float, float* %tg742, align 8, !dbg !5714
  %add743 = fadd float %547, %548, !dbg !5715
  %tb744 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texr, i32 0, i32 3, !dbg !5716
  %549 = load float, float* %tb744, align 4, !dbg !5716
  %add745 = fadd float %add743, %549, !dbg !5717
  %550 = load float, float* %val3, align 4, !dbg !5718
  %sub746 = fsub float %add745, %550, !dbg !5719
  %mul747 = fmul float %546, %sub746, !dbg !5720
  %551 = load float, float* %val3, align 4, !dbg !5721
  %add748 = fadd float %551, %mul747, !dbg !5721
  store float %add748, float* %val3, align 4, !dbg !5721
  %552 = load float, float* %val1, align 4, !dbg !5722
  %553 = load float, float* %val2, align 4, !dbg !5723
  %sub749 = fsub float %552, %553, !dbg !5724
  %554 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !5725
  %nor750 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %554, i32 0, i32 6, !dbg !5726
  %555 = load float*, float** %nor750, align 8, !dbg !5726
  %arrayidx751 = getelementptr inbounds float, float* %555, i64 0, !dbg !5725
  store float %sub749, float* %arrayidx751, align 4, !dbg !5727
  %556 = load float, float* %val1, align 4, !dbg !5728
  %557 = load float, float* %val3, align 4, !dbg !5729
  %sub752 = fsub float %556, %557, !dbg !5730
  %558 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !5731
  %nor753 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %558, i32 0, i32 6, !dbg !5732
  %559 = load float*, float** %nor753, align 8, !dbg !5732
  %arrayidx754 = getelementptr inbounds float, float* %559, i64 1, !dbg !5731
  store float %sub752, float* %arrayidx754, align 4, !dbg !5733
  br label %if.end755, !dbg !5734

if.end755:                                        ; preds = %if.then692, %if.then660
  br label %if.end789, !dbg !5735

if.else756:                                       ; preds = %land.lhs.true654, %if.end651
  %560 = load void (%struct.TexResult*, %struct.ImBuf*, float, float, %struct.afdata_t*)*, void (%struct.TexResult*, %struct.ImBuf*, float, float, %struct.afdata_t*)** %filterfunc, align 8, !dbg !5736
  %561 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !5738
  %562 = load %struct.ImBuf*, %struct.ImBuf** %curibuf, align 8, !dbg !5739
  %563 = load float, float* %fx, align 4, !dbg !5740
  %564 = load float, float* %fy, align 4, !dbg !5741
  call void %560(%struct.TexResult* %561, %struct.ImBuf* %562, float %563, float %564, %struct.afdata_t* %AFD), !dbg !5736
  %565 = load %struct.ImBuf*, %struct.ImBuf** %previbuf, align 8, !dbg !5742
  %566 = load %struct.ImBuf*, %struct.ImBuf** %curibuf, align 8, !dbg !5744
  %cmp757 = icmp ne %struct.ImBuf* %565, %566, !dbg !5745
  br i1 %cmp757, label %if.then759, label %if.end784, !dbg !5746

if.then759:                                       ; preds = %if.else756
  %567 = load void (%struct.TexResult*, %struct.ImBuf*, float, float, %struct.afdata_t*)*, void (%struct.TexResult*, %struct.ImBuf*, float, float, %struct.afdata_t*)** %filterfunc, align 8, !dbg !5747
  %568 = load %struct.ImBuf*, %struct.ImBuf** %previbuf, align 8, !dbg !5749
  %569 = load float, float* %fx, align 4, !dbg !5750
  %570 = load float, float* %fy, align 4, !dbg !5751
  call void %567(%struct.TexResult* %texr, %struct.ImBuf* %568, float %569, float %570, %struct.afdata_t* %AFD), !dbg !5747
  %571 = load float, float* %levf, align 4, !dbg !5752
  %tr760 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texr, i32 0, i32 1, !dbg !5753
  %572 = load float, float* %tr760, align 4, !dbg !5753
  %573 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !5754
  %tr761 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %573, i32 0, i32 1, !dbg !5755
  %574 = load float, float* %tr761, align 4, !dbg !5755
  %sub762 = fsub float %572, %574, !dbg !5756
  %mul763 = fmul float %571, %sub762, !dbg !5757
  %575 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !5758
  %tr764 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %575, i32 0, i32 1, !dbg !5759
  %576 = load float, float* %tr764, align 4, !dbg !5760
  %add765 = fadd float %576, %mul763, !dbg !5760
  store float %add765, float* %tr764, align 4, !dbg !5760
  %577 = load float, float* %levf, align 4, !dbg !5761
  %tg766 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texr, i32 0, i32 2, !dbg !5762
  %578 = load float, float* %tg766, align 8, !dbg !5762
  %579 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !5763
  %tg767 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %579, i32 0, i32 2, !dbg !5764
  %580 = load float, float* %tg767, align 8, !dbg !5764
  %sub768 = fsub float %578, %580, !dbg !5765
  %mul769 = fmul float %577, %sub768, !dbg !5766
  %581 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !5767
  %tg770 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %581, i32 0, i32 2, !dbg !5768
  %582 = load float, float* %tg770, align 8, !dbg !5769
  %add771 = fadd float %582, %mul769, !dbg !5769
  store float %add771, float* %tg770, align 8, !dbg !5769
  %583 = load float, float* %levf, align 4, !dbg !5770
  %tb772 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texr, i32 0, i32 3, !dbg !5771
  %584 = load float, float* %tb772, align 4, !dbg !5771
  %585 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !5772
  %tb773 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %585, i32 0, i32 3, !dbg !5773
  %586 = load float, float* %tb773, align 4, !dbg !5773
  %sub774 = fsub float %584, %586, !dbg !5774
  %mul775 = fmul float %583, %sub774, !dbg !5775
  %587 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !5776
  %tb776 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %587, i32 0, i32 3, !dbg !5777
  %588 = load float, float* %tb776, align 4, !dbg !5778
  %add777 = fadd float %588, %mul775, !dbg !5778
  store float %add777, float* %tb776, align 4, !dbg !5778
  %589 = load float, float* %levf, align 4, !dbg !5779
  %ta778 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texr, i32 0, i32 4, !dbg !5780
  %590 = load float, float* %ta778, align 8, !dbg !5780
  %591 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !5781
  %ta779 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %591, i32 0, i32 4, !dbg !5782
  %592 = load float, float* %ta779, align 8, !dbg !5782
  %sub780 = fsub float %590, %592, !dbg !5783
  %mul781 = fmul float %589, %sub780, !dbg !5784
  %593 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !5785
  %ta782 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %593, i32 0, i32 4, !dbg !5786
  %594 = load float, float* %ta782, align 8, !dbg !5787
  %add783 = fadd float %594, %mul781, !dbg !5787
  store float %add783, float* %ta782, align 8, !dbg !5787
  br label %if.end784, !dbg !5788

if.end784:                                        ; preds = %if.then759, %if.else756
  %595 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !5789
  %596 = load float, float* %fx, align 4, !dbg !5790
  %597 = load float, float* %minx, align 4, !dbg !5791
  %sub785 = fsub float %596, %597, !dbg !5792
  %598 = load float, float* %fy, align 4, !dbg !5793
  %599 = load float, float* %miny, align 4, !dbg !5794
  %sub786 = fsub float %598, %599, !dbg !5795
  %600 = load float, float* %fx, align 4, !dbg !5796
  %601 = load float, float* %minx, align 4, !dbg !5797
  %add787 = fadd float %600, %601, !dbg !5798
  %602 = load float, float* %fy, align 4, !dbg !5799
  %603 = load float, float* %miny, align 4, !dbg !5800
  %add788 = fadd float %602, %603, !dbg !5801
  %604 = load i32, i32* %extflag, align 4, !dbg !5802
  %605 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !5803
  call void @alpha_clip_aniso(%struct.ImBuf* %595, float %sub785, float %sub786, float %add787, float %add788, i32 %604, %struct.TexResult* %605), !dbg !5804
  br label %if.end789

if.end789:                                        ; preds = %if.end784, %if.end755
  br label %if.end914, !dbg !5805

if.else790:                                       ; preds = %if.end516
  %606 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !5806
  %texfilter791 = getelementptr inbounds %struct.Tex, %struct.Tex* %606, i32 0, i32 38, !dbg !5809
  %607 = load i32, i32* %texfilter791, align 4, !dbg !5809
  %cmp792 = icmp eq i32 %607, 2, !dbg !5810
  br i1 %cmp792, label %if.then794, label %if.end869, !dbg !5811

if.then794:                                       ; preds = %if.else790
  call void @llvm.dbg.declare(metadata float* %ff795, metadata !5812, metadata !DIExpression()), !dbg !5814
  %608 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !5815
  %x796 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %608, i32 0, i32 2, !dbg !5816
  %609 = load i32, i32* %x796, align 8, !dbg !5816
  %conv797 = sitofp i32 %609 to float, !dbg !5815
  %call798 = call float @sqrtf(float %conv797) #5, !dbg !5817
  store float %call798, float* %ff795, align 4, !dbg !5814
  call void @llvm.dbg.declare(metadata float* %q799, metadata !5818, metadata !DIExpression()), !dbg !5819
  %610 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !5820
  %y800 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %610, i32 0, i32 3, !dbg !5821
  %611 = load i32, i32* %y800, align 4, !dbg !5821
  %conv801 = sitofp i32 %611 to float, !dbg !5820
  %612 = load float, float* %ff795, align 4, !dbg !5822
  %div802 = fdiv float %conv801, %612, !dbg !5823
  store float %div802, float* %q799, align 4, !dbg !5819
  call void @llvm.dbg.declare(metadata float* %Ux803, metadata !5824, metadata !DIExpression()), !dbg !5825
  %613 = load float*, float** %dxt.addr, align 8, !dbg !5826
  %arrayidx804 = getelementptr inbounds float, float* %613, i64 0, !dbg !5826
  %614 = load float, float* %arrayidx804, align 4, !dbg !5826
  %615 = load float, float* %ff795, align 4, !dbg !5827
  %mul805 = fmul float %614, %615, !dbg !5828
  store float %mul805, float* %Ux803, align 4, !dbg !5825
  call void @llvm.dbg.declare(metadata float* %Vx806, metadata !5829, metadata !DIExpression()), !dbg !5830
  %616 = load float*, float** %dxt.addr, align 8, !dbg !5831
  %arrayidx807 = getelementptr inbounds float, float* %616, i64 1, !dbg !5831
  %617 = load float, float* %arrayidx807, align 4, !dbg !5831
  %618 = load float, float* %q799, align 4, !dbg !5832
  %mul808 = fmul float %617, %618, !dbg !5833
  store float %mul808, float* %Vx806, align 4, !dbg !5830
  call void @llvm.dbg.declare(metadata float* %Uy809, metadata !5834, metadata !DIExpression()), !dbg !5835
  %619 = load float*, float** %dyt.addr, align 8, !dbg !5836
  %arrayidx810 = getelementptr inbounds float, float* %619, i64 0, !dbg !5836
  %620 = load float, float* %arrayidx810, align 4, !dbg !5836
  %621 = load float, float* %ff795, align 4, !dbg !5837
  %mul811 = fmul float %620, %621, !dbg !5838
  store float %mul811, float* %Uy809, align 4, !dbg !5835
  call void @llvm.dbg.declare(metadata float* %Vy812, metadata !5839, metadata !DIExpression()), !dbg !5840
  %622 = load float*, float** %dyt.addr, align 8, !dbg !5841
  %arrayidx813 = getelementptr inbounds float, float* %622, i64 1, !dbg !5841
  %623 = load float, float* %arrayidx813, align 4, !dbg !5841
  %624 = load float, float* %q799, align 4, !dbg !5842
  %mul814 = fmul float %623, %624, !dbg !5843
  store float %mul814, float* %Vy812, align 4, !dbg !5840
  call void @llvm.dbg.declare(metadata float* %A815, metadata !5844, metadata !DIExpression()), !dbg !5845
  %625 = load float, float* %Vx806, align 4, !dbg !5846
  %626 = load float, float* %Vx806, align 4, !dbg !5847
  %mul816 = fmul float %625, %626, !dbg !5848
  %627 = load float, float* %Vy812, align 4, !dbg !5849
  %628 = load float, float* %Vy812, align 4, !dbg !5850
  %mul817 = fmul float %627, %628, !dbg !5851
  %add818 = fadd float %mul816, %mul817, !dbg !5852
  store float %add818, float* %A815, align 4, !dbg !5845
  call void @llvm.dbg.declare(metadata float* %B819, metadata !5853, metadata !DIExpression()), !dbg !5854
  %629 = load float, float* %Ux803, align 4, !dbg !5855
  %630 = load float, float* %Vx806, align 4, !dbg !5856
  %mul820 = fmul float %629, %630, !dbg !5857
  %631 = load float, float* %Uy809, align 4, !dbg !5858
  %632 = load float, float* %Vy812, align 4, !dbg !5859
  %mul821 = fmul float %631, %632, !dbg !5860
  %add822 = fadd float %mul820, %mul821, !dbg !5861
  %mul823 = fmul float -2.000000e+00, %add822, !dbg !5862
  store float %mul823, float* %B819, align 4, !dbg !5854
  call void @llvm.dbg.declare(metadata float* %C824, metadata !5863, metadata !DIExpression()), !dbg !5864
  %633 = load float, float* %Ux803, align 4, !dbg !5865
  %634 = load float, float* %Ux803, align 4, !dbg !5866
  %mul825 = fmul float %633, %634, !dbg !5867
  %635 = load float, float* %Uy809, align 4, !dbg !5868
  %636 = load float, float* %Uy809, align 4, !dbg !5869
  %mul826 = fmul float %635, %636, !dbg !5870
  %add827 = fadd float %mul825, %mul826, !dbg !5871
  store float %add827, float* %C824, align 4, !dbg !5864
  call void @llvm.dbg.declare(metadata float* %F828, metadata !5872, metadata !DIExpression()), !dbg !5873
  %637 = load float, float* %A815, align 4, !dbg !5874
  %638 = load float, float* %C824, align 4, !dbg !5875
  %mul829 = fmul float %637, %638, !dbg !5876
  %639 = load float, float* %B819, align 4, !dbg !5877
  %640 = load float, float* %B819, align 4, !dbg !5878
  %mul830 = fmul float %639, %640, !dbg !5879
  %mul831 = fmul float %mul830, 2.500000e-01, !dbg !5880
  %sub832 = fsub float %mul829, %mul831, !dbg !5881
  store float %sub832, float* %F828, align 4, !dbg !5873
  call void @llvm.dbg.declare(metadata float* %a833, metadata !5882, metadata !DIExpression()), !dbg !5883
  call void @llvm.dbg.declare(metadata float* %b834, metadata !5884, metadata !DIExpression()), !dbg !5885
  call void @llvm.dbg.declare(metadata float* %th835, metadata !5886, metadata !DIExpression()), !dbg !5887
  call void @llvm.dbg.declare(metadata float* %ecc836, metadata !5888, metadata !DIExpression()), !dbg !5889
  call void @llvm.dbg.declare(metadata float* %fProbes837, metadata !5890, metadata !DIExpression()), !dbg !5891
  %641 = load float, float* %A815, align 4, !dbg !5892
  %642 = load float, float* %B819, align 4, !dbg !5893
  %643 = load float, float* %C824, align 4, !dbg !5894
  %644 = load float, float* %F828, align 4, !dbg !5895
  call void @BLI_ewa_imp2radangle(float %641, float %642, float %643, float %644, float* %a833, float* %b834, float* %th835, float* %ecc836), !dbg !5896
  %645 = load float, float* %ff795, align 4, !dbg !5897
  %646 = load float, float* %a833, align 4, !dbg !5898
  %mul838 = fmul float %646, %645, !dbg !5898
  store float %mul838, float* %a833, align 4, !dbg !5898
  %647 = load float, float* %ff795, align 4, !dbg !5899
  %648 = load float, float* %b834, align 4, !dbg !5900
  %mul839 = fmul float %648, %647, !dbg !5900
  store float %mul839, float* %b834, align 4, !dbg !5900
  %649 = load float, float* %a833, align 4, !dbg !5901
  %call840 = call float @max_ff(float %649, float 1.000000e+00), !dbg !5902
  store float %call840, float* %a833, align 4, !dbg !5903
  %650 = load float, float* %b834, align 4, !dbg !5904
  %call841 = call float @max_ff(float %650, float 1.000000e+00), !dbg !5905
  store float %call841, float* %b834, align 4, !dbg !5906
  %651 = load float, float* %a833, align 4, !dbg !5907
  %652 = load float, float* %b834, align 4, !dbg !5908
  %div842 = fdiv float %651, %652, !dbg !5909
  %mul843 = fmul float 2.000000e+00, %div842, !dbg !5910
  %sub844 = fsub float %mul843, 1.000000e+00, !dbg !5911
  store float %sub844, float* %fProbes837, align 4, !dbg !5912
  %653 = load float, float* %fProbes837, align 4, !dbg !5913
  %call845 = call i32 @iroundf(float %653), !dbg !5914
  %iProbes846 = getelementptr inbounds %struct.afdata_t, %struct.afdata_t* %AFD, i32 0, i32 7, !dbg !5915
  store i32 %call845, i32* %iProbes846, align 4, !dbg !5916
  %iProbes847 = getelementptr inbounds %struct.afdata_t, %struct.afdata_t* %AFD, i32 0, i32 7, !dbg !5917
  %654 = load i32, i32* %iProbes847, align 4, !dbg !5917
  %conv848 = sitofp i32 %654 to float, !dbg !5919
  %655 = load float, float* %fProbes837, align 4, !dbg !5920
  %cmp849 = fcmp olt float %conv848, %655, !dbg !5921
  br i1 %cmp849, label %if.then851, label %if.end857, !dbg !5922

if.then851:                                       ; preds = %if.then794
  %656 = load float, float* %a833, align 4, !dbg !5923
  %mul852 = fmul float 2.000000e+00, %656, !dbg !5924
  %iProbes853 = getelementptr inbounds %struct.afdata_t, %struct.afdata_t* %AFD, i32 0, i32 7, !dbg !5925
  %657 = load i32, i32* %iProbes853, align 4, !dbg !5925
  %add854 = add nsw i32 %657, 1, !dbg !5926
  %conv855 = sitofp i32 %add854 to float, !dbg !5927
  %div856 = fdiv float %mul852, %conv855, !dbg !5928
  store float %div856, float* %b834, align 4, !dbg !5929
  br label %if.end857, !dbg !5930

if.end857:                                        ; preds = %if.then851, %if.then794
  %658 = load float, float* %a833, align 4, !dbg !5931
  %659 = load float, float* %ff795, align 4, !dbg !5932
  %div858 = fdiv float %658, %659, !dbg !5933
  %majrad859 = getelementptr inbounds %struct.afdata_t, %struct.afdata_t* %AFD, i32 0, i32 4, !dbg !5934
  store float %div858, float* %majrad859, align 4, !dbg !5935
  %660 = load float, float* %b834, align 4, !dbg !5936
  %661 = load float, float* %ff795, align 4, !dbg !5937
  %div860 = fdiv float %660, %661, !dbg !5938
  %minrad861 = getelementptr inbounds %struct.afdata_t, %struct.afdata_t* %AFD, i32 0, i32 5, !dbg !5939
  store float %div860, float* %minrad861, align 4, !dbg !5940
  %662 = load float, float* %th835, align 4, !dbg !5941
  %theta862 = getelementptr inbounds %struct.afdata_t, %struct.afdata_t* %AFD, i32 0, i32 6, !dbg !5942
  store float %662, float* %theta862, align 4, !dbg !5943
  %663 = load float, float* %ff795, align 4, !dbg !5944
  %div863 = fdiv float 1.000000e+00, %663, !dbg !5945
  %dusc864 = getelementptr inbounds %struct.afdata_t, %struct.afdata_t* %AFD, i32 0, i32 8, !dbg !5946
  store float %div863, float* %dusc864, align 4, !dbg !5947
  %664 = load float, float* %ff795, align 4, !dbg !5948
  %665 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !5949
  %y865 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %665, i32 0, i32 3, !dbg !5950
  %666 = load i32, i32* %y865, align 4, !dbg !5950
  %conv866 = sitofp i32 %666 to float, !dbg !5951
  %div867 = fdiv float %664, %conv866, !dbg !5952
  %dvsc868 = getelementptr inbounds %struct.afdata_t, %struct.afdata_t* %AFD, i32 0, i32 9, !dbg !5953
  store float %div867, float* %dvsc868, align 4, !dbg !5954
  br label %if.end869, !dbg !5955

if.end869:                                        ; preds = %if.end857, %if.else790
  %667 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !5956
  %nor870 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %667, i32 0, i32 6, !dbg !5958
  %668 = load float*, float** %nor870, align 8, !dbg !5958
  %tobool871 = icmp ne float* %668, null, !dbg !5956
  br i1 %tobool871, label %land.lhs.true872, label %if.else908, !dbg !5959

land.lhs.true872:                                 ; preds = %if.end869
  %669 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !5960
  %imaflag873 = getelementptr inbounds %struct.Tex, %struct.Tex* %669, i32 0, i32 30, !dbg !5961
  %670 = load i16, i16* %imaflag873, align 4, !dbg !5961
  %conv874 = sext i16 %670 to i32, !dbg !5960
  %and875 = and i32 %conv874, 2048, !dbg !5962
  %cmp876 = icmp eq i32 %and875, 0, !dbg !5963
  br i1 %cmp876, label %if.then878, label %if.else908, !dbg !5964

if.then878:                                       ; preds = %land.lhs.true872
  %671 = load void (%struct.TexResult*, %struct.ImBuf*, float, float, %struct.afdata_t*)*, void (%struct.TexResult*, %struct.ImBuf*, float, float, %struct.afdata_t*)** %filterfunc, align 8, !dbg !5965
  %672 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !5967
  %673 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !5968
  %674 = load float, float* %fx, align 4, !dbg !5969
  %675 = load float, float* %fy, align 4, !dbg !5970
  call void %671(%struct.TexResult* %672, %struct.ImBuf* %673, float %674, float %675, %struct.afdata_t* %AFD), !dbg !5965
  %676 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !5971
  %tr879 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %676, i32 0, i32 1, !dbg !5972
  %677 = load float, float* %tr879, align 4, !dbg !5972
  %678 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !5973
  %tg880 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %678, i32 0, i32 2, !dbg !5974
  %679 = load float, float* %tg880, align 8, !dbg !5974
  %add881 = fadd float %677, %679, !dbg !5975
  %680 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !5976
  %tb882 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %680, i32 0, i32 3, !dbg !5977
  %681 = load float, float* %tb882, align 4, !dbg !5977
  %add883 = fadd float %add881, %681, !dbg !5978
  store float %add883, float* %val1, align 4, !dbg !5979
  %682 = load void (%struct.TexResult*, %struct.ImBuf*, float, float, %struct.afdata_t*)*, void (%struct.TexResult*, %struct.ImBuf*, float, float, %struct.afdata_t*)** %filterfunc, align 8, !dbg !5980
  %683 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !5981
  %684 = load float, float* %fx, align 4, !dbg !5982
  %685 = load float*, float** %dxt.addr, align 8, !dbg !5983
  %arrayidx884 = getelementptr inbounds float, float* %685, i64 0, !dbg !5983
  %686 = load float, float* %arrayidx884, align 4, !dbg !5983
  %add885 = fadd float %684, %686, !dbg !5984
  %687 = load float, float* %fy, align 4, !dbg !5985
  %688 = load float*, float** %dxt.addr, align 8, !dbg !5986
  %arrayidx886 = getelementptr inbounds float, float* %688, i64 1, !dbg !5986
  %689 = load float, float* %arrayidx886, align 4, !dbg !5986
  %add887 = fadd float %687, %689, !dbg !5987
  call void %682(%struct.TexResult* %texr, %struct.ImBuf* %683, float %add885, float %add887, %struct.afdata_t* %AFD), !dbg !5980
  %tr888 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texr, i32 0, i32 1, !dbg !5988
  %690 = load float, float* %tr888, align 4, !dbg !5988
  %tg889 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texr, i32 0, i32 2, !dbg !5989
  %691 = load float, float* %tg889, align 8, !dbg !5989
  %add890 = fadd float %690, %691, !dbg !5990
  %tb891 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texr, i32 0, i32 3, !dbg !5991
  %692 = load float, float* %tb891, align 4, !dbg !5991
  %add892 = fadd float %add890, %692, !dbg !5992
  store float %add892, float* %val2, align 4, !dbg !5993
  %693 = load void (%struct.TexResult*, %struct.ImBuf*, float, float, %struct.afdata_t*)*, void (%struct.TexResult*, %struct.ImBuf*, float, float, %struct.afdata_t*)** %filterfunc, align 8, !dbg !5994
  %694 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !5995
  %695 = load float, float* %fx, align 4, !dbg !5996
  %696 = load float*, float** %dyt.addr, align 8, !dbg !5997
  %arrayidx893 = getelementptr inbounds float, float* %696, i64 0, !dbg !5997
  %697 = load float, float* %arrayidx893, align 4, !dbg !5997
  %add894 = fadd float %695, %697, !dbg !5998
  %698 = load float, float* %fy, align 4, !dbg !5999
  %699 = load float*, float** %dyt.addr, align 8, !dbg !6000
  %arrayidx895 = getelementptr inbounds float, float* %699, i64 1, !dbg !6000
  %700 = load float, float* %arrayidx895, align 4, !dbg !6000
  %add896 = fadd float %698, %700, !dbg !6001
  call void %693(%struct.TexResult* %texr, %struct.ImBuf* %694, float %add894, float %add896, %struct.afdata_t* %AFD), !dbg !5994
  %tr897 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texr, i32 0, i32 1, !dbg !6002
  %701 = load float, float* %tr897, align 4, !dbg !6002
  %tg898 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texr, i32 0, i32 2, !dbg !6003
  %702 = load float, float* %tg898, align 8, !dbg !6003
  %add899 = fadd float %701, %702, !dbg !6004
  %tb900 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texr, i32 0, i32 3, !dbg !6005
  %703 = load float, float* %tb900, align 4, !dbg !6005
  %add901 = fadd float %add899, %703, !dbg !6006
  store float %add901, float* %val3, align 4, !dbg !6007
  %704 = load float, float* %val1, align 4, !dbg !6008
  %705 = load float, float* %val2, align 4, !dbg !6009
  %sub902 = fsub float %704, %705, !dbg !6010
  %706 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !6011
  %nor903 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %706, i32 0, i32 6, !dbg !6012
  %707 = load float*, float** %nor903, align 8, !dbg !6012
  %arrayidx904 = getelementptr inbounds float, float* %707, i64 0, !dbg !6011
  store float %sub902, float* %arrayidx904, align 4, !dbg !6013
  %708 = load float, float* %val1, align 4, !dbg !6014
  %709 = load float, float* %val3, align 4, !dbg !6015
  %sub905 = fsub float %708, %709, !dbg !6016
  %710 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !6017
  %nor906 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %710, i32 0, i32 6, !dbg !6018
  %711 = load float*, float** %nor906, align 8, !dbg !6018
  %arrayidx907 = getelementptr inbounds float, float* %711, i64 1, !dbg !6017
  store float %sub905, float* %arrayidx907, align 4, !dbg !6019
  br label %if.end913, !dbg !6020

if.else908:                                       ; preds = %land.lhs.true872, %if.end869
  %712 = load void (%struct.TexResult*, %struct.ImBuf*, float, float, %struct.afdata_t*)*, void (%struct.TexResult*, %struct.ImBuf*, float, float, %struct.afdata_t*)** %filterfunc, align 8, !dbg !6021
  %713 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !6023
  %714 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !6024
  %715 = load float, float* %fx, align 4, !dbg !6025
  %716 = load float, float* %fy, align 4, !dbg !6026
  call void %712(%struct.TexResult* %713, %struct.ImBuf* %714, float %715, float %716, %struct.afdata_t* %AFD), !dbg !6021
  %717 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !6027
  %718 = load float, float* %fx, align 4, !dbg !6028
  %719 = load float, float* %minx, align 4, !dbg !6029
  %sub909 = fsub float %718, %719, !dbg !6030
  %720 = load float, float* %fy, align 4, !dbg !6031
  %721 = load float, float* %miny, align 4, !dbg !6032
  %sub910 = fsub float %720, %721, !dbg !6033
  %722 = load float, float* %fx, align 4, !dbg !6034
  %723 = load float, float* %minx, align 4, !dbg !6035
  %add911 = fadd float %722, %723, !dbg !6036
  %724 = load float, float* %fy, align 4, !dbg !6037
  %725 = load float, float* %miny, align 4, !dbg !6038
  %add912 = fadd float %724, %725, !dbg !6039
  %726 = load i32, i32* %extflag, align 4, !dbg !6040
  %727 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !6041
  call void @alpha_clip_aniso(%struct.ImBuf* %717, float %sub909, float %sub910, float %add911, float %add912, i32 %726, %struct.TexResult* %727), !dbg !6042
  br label %if.end913

if.end913:                                        ; preds = %if.else908, %if.then878
  br label %if.end914

if.end914:                                        ; preds = %if.end913, %if.end789
  %728 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !6043
  %imaflag915 = getelementptr inbounds %struct.Tex, %struct.Tex* %728, i32 0, i32 30, !dbg !6045
  %729 = load i16, i16* %imaflag915, align 4, !dbg !6045
  %conv916 = sext i16 %729 to i32, !dbg !6043
  %and917 = and i32 %conv916, 32, !dbg !6046
  %tobool918 = icmp ne i32 %and917, 0, !dbg !6046
  br i1 %tobool918, label %if.then919, label %if.else928, !dbg !6047

if.then919:                                       ; preds = %if.end914
  %730 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !6048
  %ta920 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %730, i32 0, i32 4, !dbg !6049
  %731 = load float, float* %ta920, align 8, !dbg !6049
  %732 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !6050
  %tr921 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %732, i32 0, i32 1, !dbg !6051
  %733 = load float, float* %tr921, align 4, !dbg !6051
  %734 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !6052
  %tg922 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %734, i32 0, i32 2, !dbg !6053
  %735 = load float, float* %tg922, align 8, !dbg !6053
  %736 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !6054
  %tb923 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %736, i32 0, i32 3, !dbg !6055
  %737 = load float, float* %tb923, align 4, !dbg !6055
  %call924 = call float @max_fff(float %733, float %735, float %737), !dbg !6056
  %mul925 = fmul float %731, %call924, !dbg !6057
  %738 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !6058
  %tin926 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %738, i32 0, i32 0, !dbg !6059
  store float %mul925, float* %tin926, align 8, !dbg !6060
  %739 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !6061
  %ta927 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %739, i32 0, i32 4, !dbg !6062
  store float %mul925, float* %ta927, align 8, !dbg !6063
  br label %if.end931, !dbg !6061

if.else928:                                       ; preds = %if.end914
  %740 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !6064
  %ta929 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %740, i32 0, i32 4, !dbg !6065
  %741 = load float, float* %ta929, align 8, !dbg !6065
  %742 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !6066
  %tin930 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %742, i32 0, i32 0, !dbg !6067
  store float %741, float* %tin930, align 8, !dbg !6068
  br label %if.end931

if.end931:                                        ; preds = %if.else928, %if.then919
  %743 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !6069
  %flag932 = getelementptr inbounds %struct.Tex, %struct.Tex* %743, i32 0, i32 31, !dbg !6071
  %744 = load i16, i16* %flag932, align 2, !dbg !6071
  %conv933 = sext i16 %744 to i32, !dbg !6069
  %and934 = and i32 %conv933, 4, !dbg !6072
  %tobool935 = icmp ne i32 %and934, 0, !dbg !6072
  br i1 %tobool935, label %if.then936, label %if.end940, !dbg !6073

if.then936:                                       ; preds = %if.end931
  %745 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !6074
  %ta937 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %745, i32 0, i32 4, !dbg !6075
  %746 = load float, float* %ta937, align 8, !dbg !6075
  %sub938 = fsub float 1.000000e+00, %746, !dbg !6076
  %747 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !6077
  %ta939 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %747, i32 0, i32 4, !dbg !6078
  store float %sub938, float* %ta939, align 8, !dbg !6079
  br label %if.end940, !dbg !6077

if.end940:                                        ; preds = %if.then936, %if.end931
  %748 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 4), align 8, !dbg !6080
  %conv941 = sext i16 %748 to i32, !dbg !6082
  %and942 = and i32 %conv941, 4, !dbg !6083
  %tobool943 = icmp ne i32 %and942, 0, !dbg !6083
  br i1 %tobool943, label %land.lhs.true944, label %if.end955, !dbg !6084

land.lhs.true944:                                 ; preds = %if.end940
  %749 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !6085
  %flags945 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %749, i32 0, i32 6, !dbg !6086
  %750 = load i32, i32* %flags945, align 8, !dbg !6086
  %and946 = and i32 %750, 4, !dbg !6087
  %tobool947 = icmp ne i32 %and946, 0, !dbg !6087
  br i1 %tobool947, label %if.then948, label %if.end955, !dbg !6088

if.then948:                                       ; preds = %land.lhs.true944
  %751 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !6089
  %x949 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %751, i32 0, i32 2, !dbg !6090
  %752 = load i32, i32* %x949, align 8, !dbg !6090
  %753 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !6091
  %y950 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %753, i32 0, i32 3, !dbg !6092
  %754 = load i32, i32* %y950, align 4, !dbg !6092
  %mul951 = mul nsw i32 %752, %754, !dbg !6093
  %755 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !6094
  %rect952 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %755, i32 0, i32 8, !dbg !6095
  %756 = load i32*, i32** %rect952, align 8, !dbg !6096
  %idx.ext953 = sext i32 %mul951 to i64, !dbg !6096
  %idx.neg = sub i64 0, %idx.ext953, !dbg !6096
  %add.ptr954 = getelementptr inbounds i32, i32* %756, i64 %idx.neg, !dbg !6096
  store i32* %add.ptr954, i32** %rect952, align 8, !dbg !6096
  br label %if.end955, !dbg !6094

if.end955:                                        ; preds = %if.then948, %land.lhs.true944, %if.end940
  %757 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !6097
  %nor956 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %757, i32 0, i32 6, !dbg !6099
  %758 = load float*, float** %nor956, align 8, !dbg !6099
  %tobool957 = icmp ne float* %758, null, !dbg !6097
  br i1 %tobool957, label %land.lhs.true958, label %if.end979, !dbg !6100

land.lhs.true958:                                 ; preds = %if.end955
  %759 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !6101
  %imaflag959 = getelementptr inbounds %struct.Tex, %struct.Tex* %759, i32 0, i32 30, !dbg !6102
  %760 = load i16, i16* %imaflag959, align 4, !dbg !6102
  %conv960 = sext i16 %760 to i32, !dbg !6101
  %and961 = and i32 %conv960, 2048, !dbg !6103
  %tobool962 = icmp ne i32 %and961, 0, !dbg !6103
  br i1 %tobool962, label %if.then963, label %if.end979, !dbg !6104

if.then963:                                       ; preds = %land.lhs.true958
  %761 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !6105
  %tr964 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %761, i32 0, i32 1, !dbg !6107
  %762 = load float, float* %tr964, align 4, !dbg !6107
  %sub965 = fsub float %762, 5.000000e-01, !dbg !6108
  %mul966 = fmul float -2.000000e+00, %sub965, !dbg !6109
  %763 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !6110
  %nor967 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %763, i32 0, i32 6, !dbg !6111
  %764 = load float*, float** %nor967, align 8, !dbg !6111
  %arrayidx968 = getelementptr inbounds float, float* %764, i64 0, !dbg !6110
  store float %mul966, float* %arrayidx968, align 4, !dbg !6112
  %765 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !6113
  %tg969 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %765, i32 0, i32 2, !dbg !6114
  %766 = load float, float* %tg969, align 8, !dbg !6114
  %sub970 = fsub float %766, 5.000000e-01, !dbg !6115
  %mul971 = fmul float 2.000000e+00, %sub970, !dbg !6116
  %767 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !6117
  %nor972 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %767, i32 0, i32 6, !dbg !6118
  %768 = load float*, float** %nor972, align 8, !dbg !6118
  %arrayidx973 = getelementptr inbounds float, float* %768, i64 1, !dbg !6117
  store float %mul971, float* %arrayidx973, align 4, !dbg !6119
  %769 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !6120
  %tb974 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %769, i32 0, i32 3, !dbg !6121
  %770 = load float, float* %tb974, align 4, !dbg !6121
  %sub975 = fsub float %770, 5.000000e-01, !dbg !6122
  %mul976 = fmul float 2.000000e+00, %sub975, !dbg !6123
  %771 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !6124
  %nor977 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %771, i32 0, i32 6, !dbg !6125
  %772 = load float*, float** %nor977, align 8, !dbg !6125
  %arrayidx978 = getelementptr inbounds float, float* %772, i64 2, !dbg !6124
  store float %mul976, float* %arrayidx978, align 4, !dbg !6126
  br label %if.end979, !dbg !6127

if.end979:                                        ; preds = %if.then963, %land.lhs.true958, %if.end955
  %773 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !6128
  %ta980 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %773, i32 0, i32 4, !dbg !6130
  %774 = load float, float* %ta980, align 8, !dbg !6130
  %cmp981 = fcmp une float %774, 1.000000e+00, !dbg !6131
  br i1 %cmp981, label %land.lhs.true983, label %if.end1001, !dbg !6132

land.lhs.true983:                                 ; preds = %if.end979
  %775 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !6133
  %ta984 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %775, i32 0, i32 4, !dbg !6134
  %776 = load float, float* %ta984, align 8, !dbg !6134
  %cmp985 = fcmp ogt float %776, 0x3F1A36E2E0000000, !dbg !6135
  br i1 %cmp985, label %land.lhs.true987, label %if.end1001, !dbg !6136

land.lhs.true987:                                 ; preds = %land.lhs.true983
  %777 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !6137
  %imaflag988 = getelementptr inbounds %struct.Tex, %struct.Tex* %777, i32 0, i32 30, !dbg !6138
  %778 = load i16, i16* %imaflag988, align 4, !dbg !6138
  %conv989 = sext i16 %778 to i32, !dbg !6137
  %and990 = and i32 %conv989, 32, !dbg !6139
  %tobool991 = icmp ne i32 %and990, 0, !dbg !6139
  br i1 %tobool991, label %if.end1001, label %if.then992, !dbg !6140

if.then992:                                       ; preds = %land.lhs.true987
  %779 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !6141
  %ta993 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %779, i32 0, i32 4, !dbg !6143
  %780 = load float, float* %ta993, align 8, !dbg !6143
  %div994 = fdiv float 1.000000e+00, %780, !dbg !6144
  store float %div994, float* %fx, align 4, !dbg !6145
  %781 = load float, float* %fx, align 4, !dbg !6146
  %782 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !6147
  %tr995 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %782, i32 0, i32 1, !dbg !6148
  %783 = load float, float* %tr995, align 4, !dbg !6149
  %mul996 = fmul float %783, %781, !dbg !6149
  store float %mul996, float* %tr995, align 4, !dbg !6149
  %784 = load float, float* %fx, align 4, !dbg !6150
  %785 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !6151
  %tg997 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %785, i32 0, i32 2, !dbg !6152
  %786 = load float, float* %tg997, align 8, !dbg !6153
  %mul998 = fmul float %786, %784, !dbg !6153
  store float %mul998, float* %tg997, align 8, !dbg !6153
  %787 = load float, float* %fx, align 4, !dbg !6154
  %788 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !6155
  %tb999 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %788, i32 0, i32 3, !dbg !6156
  %789 = load float, float* %tb999, align 4, !dbg !6157
  %mul1000 = fmul float %789, %787, !dbg !6157
  store float %mul1000, float* %tb999, align 4, !dbg !6157
  br label %if.end1001, !dbg !6158

if.end1001:                                       ; preds = %if.then992, %land.lhs.true987, %land.lhs.true983, %if.end979
  %790 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !6159
  %tobool1002 = icmp ne %struct.Image* %790, null, !dbg !6159
  br i1 %tobool1002, label %if.then1003, label %if.end1004, !dbg !6161

if.then1003:                                      ; preds = %if.end1001
  %791 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !6162
  %792 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !6163
  %793 = load %struct.ImagePool*, %struct.ImagePool** %pool.addr, align 8, !dbg !6164
  call void @BKE_image_pool_release_ibuf(%struct.Image* %791, %struct.ImBuf* %792, %struct.ImagePool* %793), !dbg !6165
  br label %if.end1004, !dbg !6165

if.end1004:                                       ; preds = %if.then1003, %if.end1001
  %794 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !6166
  %rfac = getelementptr inbounds %struct.Tex, %struct.Tex* %794, i32 0, i32 7, !dbg !6166
  %795 = load float, float* %rfac, align 4, !dbg !6166
  %796 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !6166
  %tr1005 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %796, i32 0, i32 1, !dbg !6166
  %797 = load float, float* %tr1005, align 4, !dbg !6166
  %sub1006 = fsub float %797, 5.000000e-01, !dbg !6166
  %798 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !6166
  %contrast = getelementptr inbounds %struct.Tex, %struct.Tex* %798, i32 0, i32 5, !dbg !6166
  %799 = load float, float* %contrast, align 4, !dbg !6166
  %mul1007 = fmul float %sub1006, %799, !dbg !6166
  %800 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !6166
  %bright = getelementptr inbounds %struct.Tex, %struct.Tex* %800, i32 0, i32 4, !dbg !6166
  %801 = load float, float* %bright, align 8, !dbg !6166
  %add1008 = fadd float %mul1007, %801, !dbg !6166
  %sub1009 = fsub float %add1008, 5.000000e-01, !dbg !6166
  %mul1010 = fmul float %795, %sub1009, !dbg !6166
  %802 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !6166
  %tr1011 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %802, i32 0, i32 1, !dbg !6166
  store float %mul1010, float* %tr1011, align 4, !dbg !6166
  %803 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !6166
  %gfac = getelementptr inbounds %struct.Tex, %struct.Tex* %803, i32 0, i32 8, !dbg !6166
  %804 = load float, float* %gfac, align 8, !dbg !6166
  %805 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !6166
  %tg1012 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %805, i32 0, i32 2, !dbg !6166
  %806 = load float, float* %tg1012, align 8, !dbg !6166
  %sub1013 = fsub float %806, 5.000000e-01, !dbg !6166
  %807 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !6166
  %contrast1014 = getelementptr inbounds %struct.Tex, %struct.Tex* %807, i32 0, i32 5, !dbg !6166
  %808 = load float, float* %contrast1014, align 4, !dbg !6166
  %mul1015 = fmul float %sub1013, %808, !dbg !6166
  %809 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !6166
  %bright1016 = getelementptr inbounds %struct.Tex, %struct.Tex* %809, i32 0, i32 4, !dbg !6166
  %810 = load float, float* %bright1016, align 8, !dbg !6166
  %add1017 = fadd float %mul1015, %810, !dbg !6166
  %sub1018 = fsub float %add1017, 5.000000e-01, !dbg !6166
  %mul1019 = fmul float %804, %sub1018, !dbg !6166
  %811 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !6166
  %tg1020 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %811, i32 0, i32 2, !dbg !6166
  store float %mul1019, float* %tg1020, align 8, !dbg !6166
  %812 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !6166
  %bfac = getelementptr inbounds %struct.Tex, %struct.Tex* %812, i32 0, i32 9, !dbg !6166
  %813 = load float, float* %bfac, align 4, !dbg !6166
  %814 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !6166
  %tb1021 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %814, i32 0, i32 3, !dbg !6166
  %815 = load float, float* %tb1021, align 4, !dbg !6166
  %sub1022 = fsub float %815, 5.000000e-01, !dbg !6166
  %816 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !6166
  %contrast1023 = getelementptr inbounds %struct.Tex, %struct.Tex* %816, i32 0, i32 5, !dbg !6166
  %817 = load float, float* %contrast1023, align 4, !dbg !6166
  %mul1024 = fmul float %sub1022, %817, !dbg !6166
  %818 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !6166
  %bright1025 = getelementptr inbounds %struct.Tex, %struct.Tex* %818, i32 0, i32 4, !dbg !6166
  %819 = load float, float* %bright1025, align 8, !dbg !6166
  %add1026 = fadd float %mul1024, %819, !dbg !6166
  %sub1027 = fsub float %add1026, 5.000000e-01, !dbg !6166
  %mul1028 = fmul float %813, %sub1027, !dbg !6166
  %820 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !6166
  %tb1029 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %820, i32 0, i32 3, !dbg !6166
  store float %mul1028, float* %tb1029, align 4, !dbg !6166
  %821 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !6167
  %flag1030 = getelementptr inbounds %struct.Tex, %struct.Tex* %821, i32 0, i32 31, !dbg !6167
  %822 = load i16, i16* %flag1030, align 2, !dbg !6167
  %conv1031 = sext i16 %822 to i32, !dbg !6167
  %and1032 = and i32 %conv1031, 1024, !dbg !6167
  %tobool1033 = icmp ne i32 %and1032, 0, !dbg !6167
  br i1 %tobool1033, label %if.end1053, label %if.then1034, !dbg !6166

if.then1034:                                      ; preds = %if.end1004
  %823 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !6169
  %tr1035 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %823, i32 0, i32 1, !dbg !6169
  %824 = load float, float* %tr1035, align 4, !dbg !6169
  %cmp1036 = fcmp olt float %824, 0.000000e+00, !dbg !6169
  br i1 %cmp1036, label %if.then1038, label %if.end1040, !dbg !6172

if.then1038:                                      ; preds = %if.then1034
  %825 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !6169
  %tr1039 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %825, i32 0, i32 1, !dbg !6169
  store float 0.000000e+00, float* %tr1039, align 4, !dbg !6169
  br label %if.end1040, !dbg !6169

if.end1040:                                       ; preds = %if.then1038, %if.then1034
  %826 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !6173
  %tg1041 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %826, i32 0, i32 2, !dbg !6173
  %827 = load float, float* %tg1041, align 8, !dbg !6173
  %cmp1042 = fcmp olt float %827, 0.000000e+00, !dbg !6173
  br i1 %cmp1042, label %if.then1044, label %if.end1046, !dbg !6172

if.then1044:                                      ; preds = %if.end1040
  %828 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !6173
  %tg1045 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %828, i32 0, i32 2, !dbg !6173
  store float 0.000000e+00, float* %tg1045, align 8, !dbg !6173
  br label %if.end1046, !dbg !6173

if.end1046:                                       ; preds = %if.then1044, %if.end1040
  %829 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !6175
  %tb1047 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %829, i32 0, i32 3, !dbg !6175
  %830 = load float, float* %tb1047, align 4, !dbg !6175
  %cmp1048 = fcmp olt float %830, 0.000000e+00, !dbg !6175
  br i1 %cmp1048, label %if.then1050, label %if.end1052, !dbg !6172

if.then1050:                                      ; preds = %if.end1046
  %831 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !6175
  %tb1051 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %831, i32 0, i32 3, !dbg !6175
  store float 0.000000e+00, float* %tb1051, align 4, !dbg !6175
  br label %if.end1052, !dbg !6175

if.end1052:                                       ; preds = %if.then1050, %if.end1046
  br label %if.end1053, !dbg !6172

if.end1053:                                       ; preds = %if.end1052, %if.end1004
  %832 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !6177
  %saturation = getelementptr inbounds %struct.Tex, %struct.Tex* %832, i32 0, i32 6, !dbg !6177
  %833 = load float, float* %saturation, align 8, !dbg !6177
  %cmp1054 = fcmp une float %833, 1.000000e+00, !dbg !6177
  br i1 %cmp1054, label %if.then1056, label %if.end1074, !dbg !6166

if.then1056:                                      ; preds = %if.end1053
  call void @llvm.dbg.declare(metadata [3 x float]* %_hsv, metadata !6179, metadata !DIExpression()), !dbg !6181
  %834 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !6181
  %tr1057 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %834, i32 0, i32 1, !dbg !6181
  %835 = load float, float* %tr1057, align 4, !dbg !6181
  %836 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !6181
  %tg1058 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %836, i32 0, i32 2, !dbg !6181
  %837 = load float, float* %tg1058, align 8, !dbg !6181
  %838 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !6181
  %tb1059 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %838, i32 0, i32 3, !dbg !6181
  %839 = load float, float* %tb1059, align 4, !dbg !6181
  %arraydecay1060 = getelementptr inbounds [3 x float], [3 x float]* %_hsv, i64 0, i64 0, !dbg !6181
  %arraydecay1061 = getelementptr inbounds [3 x float], [3 x float]* %_hsv, i64 0, i64 0, !dbg !6181
  %add.ptr1062 = getelementptr inbounds float, float* %arraydecay1061, i64 1, !dbg !6181
  %arraydecay1063 = getelementptr inbounds [3 x float], [3 x float]* %_hsv, i64 0, i64 0, !dbg !6181
  %add.ptr1064 = getelementptr inbounds float, float* %arraydecay1063, i64 2, !dbg !6181
  call void @rgb_to_hsv(float %835, float %837, float %839, float* %arraydecay1060, float* %add.ptr1062, float* %add.ptr1064), !dbg !6181
  %840 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !6181
  %saturation1065 = getelementptr inbounds %struct.Tex, %struct.Tex* %840, i32 0, i32 6, !dbg !6181
  %841 = load float, float* %saturation1065, align 8, !dbg !6181
  %arrayidx1066 = getelementptr inbounds [3 x float], [3 x float]* %_hsv, i64 0, i64 1, !dbg !6181
  %842 = load float, float* %arrayidx1066, align 4, !dbg !6181
  %mul1067 = fmul float %842, %841, !dbg !6181
  store float %mul1067, float* %arrayidx1066, align 4, !dbg !6181
  %arrayidx1068 = getelementptr inbounds [3 x float], [3 x float]* %_hsv, i64 0, i64 0, !dbg !6181
  %843 = load float, float* %arrayidx1068, align 4, !dbg !6181
  %arrayidx1069 = getelementptr inbounds [3 x float], [3 x float]* %_hsv, i64 0, i64 1, !dbg !6181
  %844 = load float, float* %arrayidx1069, align 4, !dbg !6181
  %arrayidx1070 = getelementptr inbounds [3 x float], [3 x float]* %_hsv, i64 0, i64 2, !dbg !6181
  %845 = load float, float* %arrayidx1070, align 4, !dbg !6181
  %846 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !6181
  %tr1071 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %846, i32 0, i32 1, !dbg !6181
  %847 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !6181
  %tg1072 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %847, i32 0, i32 2, !dbg !6181
  %848 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !6181
  %tb1073 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %848, i32 0, i32 3, !dbg !6181
  call void @hsv_to_rgb(float %843, float %844, float %845, float* %tr1071, float* %tg1072, float* %tb1073), !dbg !6181
  br label %if.end1074, !dbg !6181

if.end1074:                                       ; preds = %if.then1056, %if.end1053
  %849 = load i32, i32* %retval1, align 4, !dbg !6182
  store i32 %849, i32* %retval, align 4, !dbg !6183
  br label %return, !dbg !6183

return:                                           ; preds = %if.end1074, %if.end416, %if.end385, %if.end330, %if.end316, %if.end21, %if.then10, %if.then
  %850 = load i32, i32* %retval, align 4, !dbg !6184
  ret i32 %850, !dbg !6184
}

; Function Attrs: noinline nounwind uwtable
define internal void @image_mipmap_test(%struct.Tex* %tex, %struct.ImBuf* %ibuf) #0 !dbg !6185 {
entry:
  %tex.addr = alloca %struct.Tex*, align 8
  %ibuf.addr = alloca %struct.ImBuf*, align 8
  store %struct.Tex* %tex, %struct.Tex** %tex.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Tex** %tex.addr, metadata !6188, metadata !DIExpression()), !dbg !6189
  store %struct.ImBuf* %ibuf, %struct.ImBuf** %ibuf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf.addr, metadata !6190, metadata !DIExpression()), !dbg !6191
  %0 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !6192
  %imaflag = getelementptr inbounds %struct.Tex, %struct.Tex* %0, i32 0, i32 30, !dbg !6194
  %1 = load i16, i16* %imaflag, align 4, !dbg !6194
  %conv = sext i16 %1 to i32, !dbg !6192
  %and = and i32 %conv, 4, !dbg !6195
  %tobool = icmp ne i32 %and, 0, !dbg !6195
  br i1 %tobool, label %if.then, label %if.end44, !dbg !6196

if.then:                                          ; preds = %entry
  %2 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !6197
  %flags = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %2, i32 0, i32 6, !dbg !6200
  %3 = load i32, i32* %flags, align 8, !dbg !6200
  %and1 = and i32 %3, 4, !dbg !6201
  %cmp = icmp eq i32 %and1, 0, !dbg !6202
  br i1 %cmp, label %if.then3, label %if.end43, !dbg !6203

if.then3:                                         ; preds = %if.then
  %4 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !6204
  %mipmap = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %4, i32 0, i32 19, !dbg !6207
  %arrayidx = getelementptr inbounds [20 x %struct.ImBuf*], [20 x %struct.ImBuf*]* %mipmap, i64 0, i64 0, !dbg !6204
  %5 = load %struct.ImBuf*, %struct.ImBuf** %arrayidx, align 8, !dbg !6204
  %tobool4 = icmp ne %struct.ImBuf* %5, null, !dbg !6204
  br i1 %tobool4, label %land.lhs.true, label %if.end17, !dbg !6208

land.lhs.true:                                    ; preds = %if.then3
  %6 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !6209
  %userflags = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %6, i32 0, i32 23, !dbg !6210
  %7 = load i32, i32* %userflags, align 4, !dbg !6210
  %and5 = and i32 %7, 4, !dbg !6211
  %tobool6 = icmp ne i32 %and5, 0, !dbg !6211
  br i1 %tobool6, label %if.then7, label %if.end17, !dbg !6212

if.then7:                                         ; preds = %land.lhs.true
  call void @BLI_lock_thread(i32 0), !dbg !6213
  %8 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !6215
  %userflags8 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %8, i32 0, i32 23, !dbg !6217
  %9 = load i32, i32* %userflags8, align 4, !dbg !6217
  %and9 = and i32 %9, 4, !dbg !6218
  %tobool10 = icmp ne i32 %and9, 0, !dbg !6218
  br i1 %tobool10, label %if.then11, label %if.end, !dbg !6219

if.then11:                                        ; preds = %if.then7
  %10 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !6220
  %11 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !6222
  %imaflag12 = getelementptr inbounds %struct.Tex, %struct.Tex* %11, i32 0, i32 30, !dbg !6223
  %12 = load i16, i16* %imaflag12, align 4, !dbg !6223
  %conv13 = sext i16 %12 to i32, !dbg !6222
  %and14 = and i32 %conv13, 4096, !dbg !6224
  call void @IMB_remakemipmap(%struct.ImBuf* %10, i32 %and14), !dbg !6225
  %13 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !6226
  %userflags15 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %13, i32 0, i32 23, !dbg !6227
  %14 = load i32, i32* %userflags15, align 4, !dbg !6228
  %and16 = and i32 %14, -5, !dbg !6228
  store i32 %and16, i32* %userflags15, align 4, !dbg !6228
  br label %if.end, !dbg !6229

if.end:                                           ; preds = %if.then11, %if.then7
  call void @BLI_unlock_thread(i32 0), !dbg !6230
  br label %if.end17, !dbg !6231

if.end17:                                         ; preds = %if.end, %land.lhs.true, %if.then3
  %15 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !6232
  %mipmap18 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %15, i32 0, i32 19, !dbg !6234
  %arrayidx19 = getelementptr inbounds [20 x %struct.ImBuf*], [20 x %struct.ImBuf*]* %mipmap18, i64 0, i64 0, !dbg !6232
  %16 = load %struct.ImBuf*, %struct.ImBuf** %arrayidx19, align 8, !dbg !6232
  %cmp20 = icmp eq %struct.ImBuf* %16, null, !dbg !6235
  br i1 %cmp20, label %if.then22, label %if.end32, !dbg !6236

if.then22:                                        ; preds = %if.end17
  call void @BLI_lock_thread(i32 0), !dbg !6237
  %17 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !6239
  %mipmap23 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %17, i32 0, i32 19, !dbg !6241
  %arrayidx24 = getelementptr inbounds [20 x %struct.ImBuf*], [20 x %struct.ImBuf*]* %mipmap23, i64 0, i64 0, !dbg !6239
  %18 = load %struct.ImBuf*, %struct.ImBuf** %arrayidx24, align 8, !dbg !6239
  %cmp25 = icmp eq %struct.ImBuf* %18, null, !dbg !6242
  br i1 %cmp25, label %if.then27, label %if.end31, !dbg !6243

if.then27:                                        ; preds = %if.then22
  %19 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !6244
  %20 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !6245
  %imaflag28 = getelementptr inbounds %struct.Tex, %struct.Tex* %20, i32 0, i32 30, !dbg !6246
  %21 = load i16, i16* %imaflag28, align 4, !dbg !6246
  %conv29 = sext i16 %21 to i32, !dbg !6245
  %and30 = and i32 %conv29, 4096, !dbg !6247
  call void @IMB_makemipmap(%struct.ImBuf* %19, i32 %and30), !dbg !6248
  br label %if.end31, !dbg !6248

if.end31:                                         ; preds = %if.then27, %if.then22
  call void @BLI_unlock_thread(i32 0), !dbg !6249
  br label %if.end32, !dbg !6250

if.end32:                                         ; preds = %if.end31, %if.end17
  %22 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !6251
  %mipmap33 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %22, i32 0, i32 19, !dbg !6253
  %arrayidx34 = getelementptr inbounds [20 x %struct.ImBuf*], [20 x %struct.ImBuf*]* %mipmap33, i64 0, i64 0, !dbg !6251
  %23 = load %struct.ImBuf*, %struct.ImBuf** %arrayidx34, align 8, !dbg !6251
  %cmp35 = icmp eq %struct.ImBuf* %23, null, !dbg !6254
  br i1 %cmp35, label %if.then37, label %if.end42, !dbg !6255

if.then37:                                        ; preds = %if.end32
  %24 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !6256
  %imaflag38 = getelementptr inbounds %struct.Tex, %struct.Tex* %24, i32 0, i32 30, !dbg !6258
  %25 = load i16, i16* %imaflag38, align 4, !dbg !6259
  %conv39 = sext i16 %25 to i32, !dbg !6259
  %and40 = and i32 %conv39, -5, !dbg !6259
  %conv41 = trunc i32 %and40 to i16, !dbg !6259
  store i16 %conv41, i16* %imaflag38, align 4, !dbg !6259
  br label %if.end42, !dbg !6260

if.end42:                                         ; preds = %if.then37, %if.end32
  br label %if.end43, !dbg !6261

if.end43:                                         ; preds = %if.end42, %if.then
  br label %if.end44, !dbg !6262

if.end44:                                         ; preds = %if.end43, %entry
  ret void, !dbg !6263
}

; Function Attrs: noinline nounwind uwtable
define internal float @min_fff(float %a, float %b, float %c) #0 !dbg !6264 {
entry:
  %a.addr = alloca float, align 4
  %b.addr = alloca float, align 4
  %c.addr = alloca float, align 4
  store float %a, float* %a.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a.addr, metadata !6265, metadata !DIExpression()), !dbg !6266
  store float %b, float* %b.addr, align 4
  call void @llvm.dbg.declare(metadata float* %b.addr, metadata !6267, metadata !DIExpression()), !dbg !6268
  store float %c, float* %c.addr, align 4
  call void @llvm.dbg.declare(metadata float* %c.addr, metadata !6269, metadata !DIExpression()), !dbg !6270
  %0 = load float, float* %a.addr, align 4, !dbg !6271
  %1 = load float, float* %b.addr, align 4, !dbg !6272
  %call = call float @min_ff(float %0, float %1), !dbg !6273
  %2 = load float, float* %c.addr, align 4, !dbg !6274
  %call1 = call float @min_ff(float %call, float %2), !dbg !6275
  ret float %call1, !dbg !6276
}

; Function Attrs: noinline nounwind uwtable
define internal float @max_ff(float %a, float %b) #0 !dbg !6277 {
entry:
  %a.addr = alloca float, align 4
  %b.addr = alloca float, align 4
  store float %a, float* %a.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a.addr, metadata !6280, metadata !DIExpression()), !dbg !6281
  store float %b, float* %b.addr, align 4
  call void @llvm.dbg.declare(metadata float* %b.addr, metadata !6282, metadata !DIExpression()), !dbg !6283
  %0 = load float, float* %a.addr, align 4, !dbg !6284
  %1 = load float, float* %b.addr, align 4, !dbg !6285
  %cmp = fcmp ogt float %0, %1, !dbg !6286
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !6287

cond.true:                                        ; preds = %entry
  %2 = load float, float* %a.addr, align 4, !dbg !6288
  br label %cond.end, !dbg !6287

cond.false:                                       ; preds = %entry
  %3 = load float, float* %b.addr, align 4, !dbg !6289
  br label %cond.end, !dbg !6287

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %2, %cond.true ], [ %3, %cond.false ], !dbg !6287
  ret float %cond, !dbg !6290
}

; Function Attrs: noinline nounwind uwtable
define internal void @mul_v3_fl(float* %r, float %f) #0 !dbg !6291 {
entry:
  %r.addr = alloca float*, align 8
  %f.addr = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !6294, metadata !DIExpression()), !dbg !6295
  store float %f, float* %f.addr, align 4
  call void @llvm.dbg.declare(metadata float* %f.addr, metadata !6296, metadata !DIExpression()), !dbg !6297
  %0 = load float, float* %f.addr, align 4, !dbg !6298
  %1 = load float*, float** %r.addr, align 8, !dbg !6299
  %arrayidx = getelementptr inbounds float, float* %1, i64 0, !dbg !6299
  %2 = load float, float* %arrayidx, align 4, !dbg !6300
  %mul = fmul float %2, %0, !dbg !6300
  store float %mul, float* %arrayidx, align 4, !dbg !6300
  %3 = load float, float* %f.addr, align 4, !dbg !6301
  %4 = load float*, float** %r.addr, align 8, !dbg !6302
  %arrayidx1 = getelementptr inbounds float, float* %4, i64 1, !dbg !6302
  %5 = load float, float* %arrayidx1, align 4, !dbg !6303
  %mul2 = fmul float %5, %3, !dbg !6303
  store float %mul2, float* %arrayidx1, align 4, !dbg !6303
  %6 = load float, float* %f.addr, align 4, !dbg !6304
  %7 = load float*, float** %r.addr, align 8, !dbg !6305
  %arrayidx3 = getelementptr inbounds float, float* %7, i64 2, !dbg !6305
  %8 = load float, float* %arrayidx3, align 4, !dbg !6306
  %mul4 = fmul float %8, %6, !dbg !6306
  store float %mul4, float* %arrayidx3, align 4, !dbg !6306
  ret void, !dbg !6307
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @image_sample(%struct.Image* %ima, float %fx, float %fy, float %dx, float %dy, float* %result, %struct.ImagePool* %pool) #0 !dbg !6308 {
entry:
  %ima.addr = alloca %struct.Image*, align 8
  %fx.addr = alloca float, align 4
  %fy.addr = alloca float, align 4
  %dx.addr = alloca float, align 4
  %dy.addr = alloca float, align 4
  %result.addr = alloca float*, align 8
  %pool.addr = alloca %struct.ImagePool*, align 8
  %texres = alloca %struct.TexResult, align 8
  %ibuf = alloca %struct.ImBuf*, align 8
  store %struct.Image* %ima, %struct.Image** %ima.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Image** %ima.addr, metadata !6311, metadata !DIExpression()), !dbg !6312
  store float %fx, float* %fx.addr, align 4
  call void @llvm.dbg.declare(metadata float* %fx.addr, metadata !6313, metadata !DIExpression()), !dbg !6314
  store float %fy, float* %fy.addr, align 4
  call void @llvm.dbg.declare(metadata float* %fy.addr, metadata !6315, metadata !DIExpression()), !dbg !6316
  store float %dx, float* %dx.addr, align 4
  call void @llvm.dbg.declare(metadata float* %dx.addr, metadata !6317, metadata !DIExpression()), !dbg !6318
  store float %dy, float* %dy.addr, align 4
  call void @llvm.dbg.declare(metadata float* %dy.addr, metadata !6319, metadata !DIExpression()), !dbg !6320
  store float* %result, float** %result.addr, align 8
  call void @llvm.dbg.declare(metadata float** %result.addr, metadata !6321, metadata !DIExpression()), !dbg !6322
  store %struct.ImagePool* %pool, %struct.ImagePool** %pool.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImagePool** %pool.addr, metadata !6323, metadata !DIExpression()), !dbg !6324
  call void @llvm.dbg.declare(metadata %struct.TexResult* %texres, metadata !6325, metadata !DIExpression()), !dbg !6326
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf, metadata !6327, metadata !DIExpression()), !dbg !6328
  %0 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !6329
  %1 = load %struct.ImagePool*, %struct.ImagePool** %pool.addr, align 8, !dbg !6330
  %call = call %struct.ImBuf* @BKE_image_pool_acquire_ibuf(%struct.Image* %0, %struct.ImageUser* null, %struct.ImagePool* %1), !dbg !6331
  store %struct.ImBuf* %call, %struct.ImBuf** %ibuf, align 8, !dbg !6328
  %2 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !6332
  %cmp = icmp eq %struct.ImBuf* %2, null, !dbg !6332
  br i1 %cmp, label %if.then, label %if.end, !dbg !6334

if.then:                                          ; preds = %entry
  %3 = load float*, float** %result.addr, align 8, !dbg !6335
  call void @zero_v4(float* %3), !dbg !6337
  br label %return, !dbg !6338

if.end:                                           ; preds = %entry
  %4 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 4), align 8, !dbg !6339
  %conv = sext i16 %4 to i32, !dbg !6341
  %and = and i32 %conv, 4, !dbg !6342
  %tobool = icmp ne i32 %and, 0, !dbg !6342
  br i1 %tobool, label %land.lhs.true, label %if.end4, !dbg !6343

land.lhs.true:                                    ; preds = %if.end
  %5 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !6344
  %flags = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %5, i32 0, i32 6, !dbg !6345
  %6 = load i32, i32* %flags, align 8, !dbg !6345
  %and1 = and i32 %6, 4, !dbg !6346
  %tobool2 = icmp ne i32 %and1, 0, !dbg !6346
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !6347

if.then3:                                         ; preds = %land.lhs.true
  %7 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !6348
  %x = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %7, i32 0, i32 2, !dbg !6349
  %8 = load i32, i32* %x, align 8, !dbg !6349
  %9 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !6350
  %y = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %9, i32 0, i32 3, !dbg !6351
  %10 = load i32, i32* %y, align 4, !dbg !6351
  %mul = mul nsw i32 %8, %10, !dbg !6352
  %11 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !6353
  %rect = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %11, i32 0, i32 8, !dbg !6354
  %12 = load i32*, i32** %rect, align 8, !dbg !6355
  %idx.ext = sext i32 %mul to i64, !dbg !6355
  %add.ptr = getelementptr inbounds i32, i32* %12, i64 %idx.ext, !dbg !6355
  store i32* %add.ptr, i32** %rect, align 8, !dbg !6355
  br label %if.end4, !dbg !6353

if.end4:                                          ; preds = %if.then3, %land.lhs.true, %if.end
  %talpha = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 5, !dbg !6356
  store i32 1, i32* %talpha, align 4, !dbg !6357
  %13 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !6358
  %14 = load float, float* %fx.addr, align 4, !dbg !6359
  %15 = load float, float* %fy.addr, align 4, !dbg !6360
  %16 = load float, float* %fx.addr, align 4, !dbg !6361
  %17 = load float, float* %dx.addr, align 4, !dbg !6362
  %add = fadd float %16, %17, !dbg !6363
  %18 = load float, float* %fy.addr, align 4, !dbg !6364
  %19 = load float, float* %dy.addr, align 4, !dbg !6365
  %add5 = fadd float %18, %19, !dbg !6366
  call void @boxsample(%struct.ImBuf* %13, float %14, float %15, float %add, float %add5, %struct.TexResult* %texres, i16 signext 0, i16 signext 1), !dbg !6367
  %20 = load float*, float** %result.addr, align 8, !dbg !6368
  %tr = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 1, !dbg !6369
  call void @copy_v4_v4(float* %20, float* %tr), !dbg !6370
  %21 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 4), align 8, !dbg !6371
  %conv6 = sext i16 %21 to i32, !dbg !6373
  %and7 = and i32 %conv6, 4, !dbg !6374
  %tobool8 = icmp ne i32 %and7, 0, !dbg !6374
  br i1 %tobool8, label %land.lhs.true9, label %if.end20, !dbg !6375

land.lhs.true9:                                   ; preds = %if.end4
  %22 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !6376
  %flags10 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %22, i32 0, i32 6, !dbg !6377
  %23 = load i32, i32* %flags10, align 8, !dbg !6377
  %and11 = and i32 %23, 4, !dbg !6378
  %tobool12 = icmp ne i32 %and11, 0, !dbg !6378
  br i1 %tobool12, label %if.then13, label %if.end20, !dbg !6379

if.then13:                                        ; preds = %land.lhs.true9
  %24 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !6380
  %x14 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %24, i32 0, i32 2, !dbg !6381
  %25 = load i32, i32* %x14, align 8, !dbg !6381
  %26 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !6382
  %y15 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %26, i32 0, i32 3, !dbg !6383
  %27 = load i32, i32* %y15, align 4, !dbg !6383
  %mul16 = mul nsw i32 %25, %27, !dbg !6384
  %28 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !6385
  %rect17 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %28, i32 0, i32 8, !dbg !6386
  %29 = load i32*, i32** %rect17, align 8, !dbg !6387
  %idx.ext18 = sext i32 %mul16 to i64, !dbg !6387
  %idx.neg = sub i64 0, %idx.ext18, !dbg !6387
  %add.ptr19 = getelementptr inbounds i32, i32* %29, i64 %idx.neg, !dbg !6387
  store i32* %add.ptr19, i32** %rect17, align 8, !dbg !6387
  br label %if.end20, !dbg !6385

if.end20:                                         ; preds = %if.then13, %land.lhs.true9, %if.end4
  %30 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !6388
  %flag = getelementptr inbounds %struct.Image, %struct.Image* %30, i32 0, i32 10, !dbg !6389
  %31 = load i16, i16* %flag, align 2, !dbg !6390
  %conv21 = sext i16 %31 to i32, !dbg !6390
  %or = or i32 %conv21, 512, !dbg !6390
  %conv22 = trunc i32 %or to i16, !dbg !6390
  store i16 %conv22, i16* %flag, align 2, !dbg !6390
  %32 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !6391
  %33 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !6392
  %34 = load %struct.ImagePool*, %struct.ImagePool** %pool.addr, align 8, !dbg !6393
  call void @BKE_image_pool_release_ibuf(%struct.Image* %32, %struct.ImBuf* %33, %struct.ImagePool* %34), !dbg !6394
  br label %return, !dbg !6395

return:                                           ; preds = %if.end20, %if.then
  ret void, !dbg !6395
}

; Function Attrs: noinline nounwind uwtable
define internal void @zero_v4(float* %r) #0 !dbg !6396 {
entry:
  %r.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !6399, metadata !DIExpression()), !dbg !6400
  %0 = load float*, float** %r.addr, align 8, !dbg !6401
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !6401
  store float 0.000000e+00, float* %arrayidx, align 4, !dbg !6402
  %1 = load float*, float** %r.addr, align 8, !dbg !6403
  %arrayidx1 = getelementptr inbounds float, float* %1, i64 1, !dbg !6403
  store float 0.000000e+00, float* %arrayidx1, align 4, !dbg !6404
  %2 = load float*, float** %r.addr, align 8, !dbg !6405
  %arrayidx2 = getelementptr inbounds float, float* %2, i64 2, !dbg !6405
  store float 0.000000e+00, float* %arrayidx2, align 4, !dbg !6406
  %3 = load float*, float** %r.addr, align 8, !dbg !6407
  %arrayidx3 = getelementptr inbounds float, float* %3, i64 3, !dbg !6407
  store float 0.000000e+00, float* %arrayidx3, align 4, !dbg !6408
  ret void, !dbg !6409
}

; Function Attrs: noinline nounwind uwtable
define internal void @copy_v4_v4(float* %r, float* %a) #0 !dbg !6410 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !6411, metadata !DIExpression()), !dbg !6412
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !6413, metadata !DIExpression()), !dbg !6414
  %0 = load float*, float** %a.addr, align 8, !dbg !6415
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !6415
  %1 = load float, float* %arrayidx, align 4, !dbg !6415
  %2 = load float*, float** %r.addr, align 8, !dbg !6416
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !6416
  store float %1, float* %arrayidx1, align 4, !dbg !6417
  %3 = load float*, float** %a.addr, align 8, !dbg !6418
  %arrayidx2 = getelementptr inbounds float, float* %3, i64 1, !dbg !6418
  %4 = load float, float* %arrayidx2, align 4, !dbg !6418
  %5 = load float*, float** %r.addr, align 8, !dbg !6419
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !6419
  store float %4, float* %arrayidx3, align 4, !dbg !6420
  %6 = load float*, float** %a.addr, align 8, !dbg !6421
  %arrayidx4 = getelementptr inbounds float, float* %6, i64 2, !dbg !6421
  %7 = load float, float* %arrayidx4, align 4, !dbg !6421
  %8 = load float*, float** %r.addr, align 8, !dbg !6422
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !6422
  store float %7, float* %arrayidx5, align 4, !dbg !6423
  %9 = load float*, float** %a.addr, align 8, !dbg !6424
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 3, !dbg !6424
  %10 = load float, float* %arrayidx6, align 4, !dbg !6424
  %11 = load float*, float** %r.addr, align 8, !dbg !6425
  %arrayidx7 = getelementptr inbounds float, float* %11, i64 3, !dbg !6425
  store float %10, float* %arrayidx7, align 4, !dbg !6426
  ret void, !dbg !6427
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @ibuf_sample(%struct.ImBuf* %ibuf, float %fx, float %fy, float %dx, float %dy, float* %result) #0 !dbg !6428 {
entry:
  %ibuf.addr = alloca %struct.ImBuf*, align 8
  %fx.addr = alloca float, align 4
  %fy.addr = alloca float, align 4
  %dx.addr = alloca float, align 4
  %dy.addr = alloca float, align 4
  %result.addr = alloca float*, align 8
  %texres = alloca %struct.TexResult, align 8
  %AFD = alloca %struct.afdata_t, align 4
  store %struct.ImBuf* %ibuf, %struct.ImBuf** %ibuf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf.addr, metadata !6431, metadata !DIExpression()), !dbg !6432
  store float %fx, float* %fx.addr, align 4
  call void @llvm.dbg.declare(metadata float* %fx.addr, metadata !6433, metadata !DIExpression()), !dbg !6434
  store float %fy, float* %fy.addr, align 4
  call void @llvm.dbg.declare(metadata float* %fy.addr, metadata !6435, metadata !DIExpression()), !dbg !6436
  store float %dx, float* %dx.addr, align 4
  call void @llvm.dbg.declare(metadata float* %dx.addr, metadata !6437, metadata !DIExpression()), !dbg !6438
  store float %dy, float* %dy.addr, align 4
  call void @llvm.dbg.declare(metadata float* %dy.addr, metadata !6439, metadata !DIExpression()), !dbg !6440
  store float* %result, float** %result.addr, align 8
  call void @llvm.dbg.declare(metadata float** %result.addr, metadata !6441, metadata !DIExpression()), !dbg !6442
  call void @llvm.dbg.declare(metadata %struct.TexResult* %texres, metadata !6443, metadata !DIExpression()), !dbg !6444
  %0 = bitcast %struct.TexResult* %texres to i8*, !dbg !6444
  call void @llvm.memset.p0i8.i64(i8* align 8 %0, i8 0, i64 32, i1 false), !dbg !6444
  call void @llvm.dbg.declare(metadata %struct.afdata_t* %AFD, metadata !6445, metadata !DIExpression()), !dbg !6446
  %1 = load float, float* %dx.addr, align 4, !dbg !6447
  %dxt = getelementptr inbounds %struct.afdata_t, %struct.afdata_t* %AFD, i32 0, i32 0, !dbg !6448
  %arrayidx = getelementptr inbounds [2 x float], [2 x float]* %dxt, i64 0, i64 0, !dbg !6449
  store float %1, float* %arrayidx, align 4, !dbg !6450
  %2 = load float, float* %dx.addr, align 4, !dbg !6451
  %dxt1 = getelementptr inbounds %struct.afdata_t, %struct.afdata_t* %AFD, i32 0, i32 0, !dbg !6452
  %arrayidx2 = getelementptr inbounds [2 x float], [2 x float]* %dxt1, i64 0, i64 1, !dbg !6453
  store float %2, float* %arrayidx2, align 4, !dbg !6454
  %3 = load float, float* %dy.addr, align 4, !dbg !6455
  %dyt = getelementptr inbounds %struct.afdata_t, %struct.afdata_t* %AFD, i32 0, i32 1, !dbg !6456
  %arrayidx3 = getelementptr inbounds [2 x float], [2 x float]* %dyt, i64 0, i64 0, !dbg !6457
  store float %3, float* %arrayidx3, align 4, !dbg !6458
  %4 = load float, float* %dy.addr, align 4, !dbg !6459
  %dyt4 = getelementptr inbounds %struct.afdata_t, %struct.afdata_t* %AFD, i32 0, i32 1, !dbg !6460
  %arrayidx5 = getelementptr inbounds [2 x float], [2 x float]* %dyt4, i64 0, i64 1, !dbg !6461
  store float %4, float* %arrayidx5, align 4, !dbg !6462
  %intpol = getelementptr inbounds %struct.afdata_t, %struct.afdata_t* %AFD, i32 0, i32 2, !dbg !6463
  store i32 1, i32* %intpol, align 4, !dbg !6464
  %extflag = getelementptr inbounds %struct.afdata_t, %struct.afdata_t* %AFD, i32 0, i32 3, !dbg !6465
  store i32 4, i32* %extflag, align 4, !dbg !6466
  %5 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !6467
  %6 = load float, float* %fx.addr, align 4, !dbg !6468
  %7 = load float, float* %fy.addr, align 4, !dbg !6469
  call void @ewa_eval(%struct.TexResult* %texres, %struct.ImBuf* %5, float %6, float %7, %struct.afdata_t* %AFD), !dbg !6470
  %8 = load float*, float** %result.addr, align 8, !dbg !6471
  %tr = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 1, !dbg !6472
  call void @copy_v4_v4(float* %8, float* %tr), !dbg !6473
  ret void, !dbg !6474
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: noinline nounwind uwtable
define internal void @ewa_eval(%struct.TexResult* %texr, %struct.ImBuf* %ibuf, float %fx, float %fy, %struct.afdata_t* %AFD) #0 !dbg !6475 {
entry:
  %texr.addr = alloca %struct.TexResult*, align 8
  %ibuf.addr = alloca %struct.ImBuf*, align 8
  %fx.addr = alloca float, align 4
  %fy.addr = alloca float, align 4
  %AFD.addr = alloca %struct.afdata_t*, align 8
  %data = alloca %struct.ReadEWAData, align 8
  %uv = alloca [2 x float], align 4
  store %struct.TexResult* %texr, %struct.TexResult** %texr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TexResult** %texr.addr, metadata !6476, metadata !DIExpression()), !dbg !6477
  store %struct.ImBuf* %ibuf, %struct.ImBuf** %ibuf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf.addr, metadata !6478, metadata !DIExpression()), !dbg !6479
  store float %fx, float* %fx.addr, align 4
  call void @llvm.dbg.declare(metadata float* %fx.addr, metadata !6480, metadata !DIExpression()), !dbg !6481
  store float %fy, float* %fy.addr, align 4
  call void @llvm.dbg.declare(metadata float* %fy.addr, metadata !6482, metadata !DIExpression()), !dbg !6483
  store %struct.afdata_t* %AFD, %struct.afdata_t** %AFD.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.afdata_t** %AFD.addr, metadata !6484, metadata !DIExpression()), !dbg !6485
  call void @llvm.dbg.declare(metadata %struct.ReadEWAData* %data, metadata !6486, metadata !DIExpression()), !dbg !6487
  call void @llvm.dbg.declare(metadata [2 x float]* %uv, metadata !6488, metadata !DIExpression()), !dbg !6489
  %arrayinit.begin = getelementptr inbounds [2 x float], [2 x float]* %uv, i64 0, i64 0, !dbg !6490
  %0 = load float, float* %fx.addr, align 4, !dbg !6491
  store float %0, float* %arrayinit.begin, align 4, !dbg !6490
  %arrayinit.element = getelementptr inbounds float, float* %arrayinit.begin, i64 1, !dbg !6490
  %1 = load float, float* %fy.addr, align 4, !dbg !6492
  store float %1, float* %arrayinit.element, align 4, !dbg !6490
  %2 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !6493
  %ibuf1 = getelementptr inbounds %struct.ReadEWAData, %struct.ReadEWAData* %data, i32 0, i32 0, !dbg !6494
  store %struct.ImBuf* %2, %struct.ImBuf** %ibuf1, align 8, !dbg !6495
  %3 = load %struct.afdata_t*, %struct.afdata_t** %AFD.addr, align 8, !dbg !6496
  %AFD2 = getelementptr inbounds %struct.ReadEWAData, %struct.ReadEWAData* %data, i32 0, i32 1, !dbg !6497
  store %struct.afdata_t* %3, %struct.afdata_t** %AFD2, align 8, !dbg !6498
  %4 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !6499
  %x = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %4, i32 0, i32 2, !dbg !6500
  %5 = load i32, i32* %x, align 8, !dbg !6500
  %6 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !6501
  %y = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %6, i32 0, i32 3, !dbg !6502
  %7 = load i32, i32* %y, align 4, !dbg !6502
  %8 = load %struct.afdata_t*, %struct.afdata_t** %AFD.addr, align 8, !dbg !6503
  %intpol = getelementptr inbounds %struct.afdata_t, %struct.afdata_t* %8, i32 0, i32 2, !dbg !6504
  %9 = load i32, i32* %intpol, align 4, !dbg !6504
  %cmp = icmp ne i32 %9, 0, !dbg !6505
  %conv = zext i1 %cmp to i32, !dbg !6505
  %conv3 = trunc i32 %conv to i8, !dbg !6503
  %10 = load %struct.TexResult*, %struct.TexResult** %texr.addr, align 8, !dbg !6506
  %talpha = getelementptr inbounds %struct.TexResult, %struct.TexResult* %10, i32 0, i32 5, !dbg !6507
  %11 = load i32, i32* %talpha, align 4, !dbg !6507
  %conv4 = trunc i32 %11 to i8, !dbg !6506
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %uv, i64 0, i64 0, !dbg !6508
  %12 = load %struct.afdata_t*, %struct.afdata_t** %AFD.addr, align 8, !dbg !6509
  %dxt = getelementptr inbounds %struct.afdata_t, %struct.afdata_t* %12, i32 0, i32 0, !dbg !6510
  %arraydecay5 = getelementptr inbounds [2 x float], [2 x float]* %dxt, i64 0, i64 0, !dbg !6509
  %13 = load %struct.afdata_t*, %struct.afdata_t** %AFD.addr, align 8, !dbg !6511
  %dyt = getelementptr inbounds %struct.afdata_t, %struct.afdata_t* %13, i32 0, i32 1, !dbg !6512
  %arraydecay6 = getelementptr inbounds [2 x float], [2 x float]* %dyt, i64 0, i64 0, !dbg !6511
  %14 = bitcast %struct.ReadEWAData* %data to i8*, !dbg !6513
  %15 = load %struct.TexResult*, %struct.TexResult** %texr.addr, align 8, !dbg !6514
  %tr = getelementptr inbounds %struct.TexResult, %struct.TexResult* %15, i32 0, i32 1, !dbg !6515
  call void @BLI_ewa_filter(i32 %5, i32 %7, i8 zeroext %conv3, i8 zeroext %conv4, float* %arraydecay, float* %arraydecay5, float* %arraydecay6, void (i8*, i32, i32, float*)* @ewa_read_pixel_cb, i8* %14, float* %tr), !dbg !6516
  ret void, !dbg !6517
}

; Function Attrs: noinline nounwind uwtable
define internal void @copy_v3_v3(float* %r, float* %a) #0 !dbg !6518 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !6519, metadata !DIExpression()), !dbg !6520
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !6521, metadata !DIExpression()), !dbg !6522
  %0 = load float*, float** %a.addr, align 8, !dbg !6523
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !6523
  %1 = load float, float* %arrayidx, align 4, !dbg !6523
  %2 = load float*, float** %r.addr, align 8, !dbg !6524
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !6524
  store float %1, float* %arrayidx1, align 4, !dbg !6525
  %3 = load float*, float** %a.addr, align 8, !dbg !6526
  %arrayidx2 = getelementptr inbounds float, float* %3, i64 1, !dbg !6526
  %4 = load float, float* %arrayidx2, align 4, !dbg !6526
  %5 = load float*, float** %r.addr, align 8, !dbg !6527
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !6527
  store float %4, float* %arrayidx3, align 4, !dbg !6528
  %6 = load float*, float** %a.addr, align 8, !dbg !6529
  %arrayidx4 = getelementptr inbounds float, float* %6, i64 2, !dbg !6529
  %7 = load float, float* %arrayidx4, align 4, !dbg !6529
  %8 = load float*, float** %r.addr, align 8, !dbg !6530
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !6530
  store float %7, float* %arrayidx5, align 4, !dbg !6531
  ret void, !dbg !6532
}

; Function Attrs: noinline nounwind uwtable
define internal void @clipx_rctf_swap(%struct.rctf* %stack, i16* %count, float %x1, float %x2) #0 !dbg !6533 {
entry:
  %stack.addr = alloca %struct.rctf*, align 8
  %count.addr = alloca i16*, align 8
  %x1.addr = alloca float, align 4
  %x2.addr = alloca float, align 4
  %rf = alloca %struct.rctf*, align 8
  %newrct = alloca %struct.rctf*, align 8
  %a = alloca i16, align 2
  store %struct.rctf* %stack, %struct.rctf** %stack.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rctf** %stack.addr, metadata !6537, metadata !DIExpression()), !dbg !6538
  store i16* %count, i16** %count.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %count.addr, metadata !6539, metadata !DIExpression()), !dbg !6540
  store float %x1, float* %x1.addr, align 4
  call void @llvm.dbg.declare(metadata float* %x1.addr, metadata !6541, metadata !DIExpression()), !dbg !6542
  store float %x2, float* %x2.addr, align 4
  call void @llvm.dbg.declare(metadata float* %x2.addr, metadata !6543, metadata !DIExpression()), !dbg !6544
  call void @llvm.dbg.declare(metadata %struct.rctf** %rf, metadata !6545, metadata !DIExpression()), !dbg !6546
  call void @llvm.dbg.declare(metadata %struct.rctf** %newrct, metadata !6547, metadata !DIExpression()), !dbg !6548
  call void @llvm.dbg.declare(metadata i16* %a, metadata !6549, metadata !DIExpression()), !dbg !6550
  %0 = load i16*, i16** %count.addr, align 8, !dbg !6551
  %1 = load i16, i16* %0, align 2, !dbg !6552
  store i16 %1, i16* %a, align 2, !dbg !6553
  %2 = load %struct.rctf*, %struct.rctf** %stack.addr, align 8, !dbg !6554
  store %struct.rctf* %2, %struct.rctf** %rf, align 8, !dbg !6555
  br label %for.cond, !dbg !6556

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load i16, i16* %a, align 2, !dbg !6557
  %conv = sext i16 %3 to i32, !dbg !6557
  %cmp = icmp sgt i32 %conv, 0, !dbg !6560
  br i1 %cmp, label %for.body, label %for.end, !dbg !6561

for.body:                                         ; preds = %for.cond
  %4 = load %struct.rctf*, %struct.rctf** %rf, align 8, !dbg !6562
  %xmin = getelementptr inbounds %struct.rctf, %struct.rctf* %4, i32 0, i32 0, !dbg !6565
  %5 = load float, float* %xmin, align 4, !dbg !6565
  %6 = load float, float* %x1.addr, align 4, !dbg !6566
  %cmp2 = fcmp olt float %5, %6, !dbg !6567
  br i1 %cmp2, label %if.then, label %if.else32, !dbg !6568

if.then:                                          ; preds = %for.body
  %7 = load %struct.rctf*, %struct.rctf** %rf, align 8, !dbg !6569
  %xmax = getelementptr inbounds %struct.rctf, %struct.rctf* %7, i32 0, i32 1, !dbg !6572
  %8 = load float, float* %xmax, align 4, !dbg !6572
  %9 = load float, float* %x1.addr, align 4, !dbg !6573
  %cmp4 = fcmp olt float %8, %9, !dbg !6574
  br i1 %cmp4, label %if.then6, label %if.else, !dbg !6575

if.then6:                                         ; preds = %if.then
  %10 = load float, float* %x2.addr, align 4, !dbg !6576
  %11 = load float, float* %x1.addr, align 4, !dbg !6578
  %sub = fsub float %10, %11, !dbg !6579
  %12 = load %struct.rctf*, %struct.rctf** %rf, align 8, !dbg !6580
  %xmin7 = getelementptr inbounds %struct.rctf, %struct.rctf* %12, i32 0, i32 0, !dbg !6581
  %13 = load float, float* %xmin7, align 4, !dbg !6582
  %add = fadd float %13, %sub, !dbg !6582
  store float %add, float* %xmin7, align 4, !dbg !6582
  %14 = load float, float* %x2.addr, align 4, !dbg !6583
  %15 = load float, float* %x1.addr, align 4, !dbg !6584
  %sub8 = fsub float %14, %15, !dbg !6585
  %16 = load %struct.rctf*, %struct.rctf** %rf, align 8, !dbg !6586
  %xmax9 = getelementptr inbounds %struct.rctf, %struct.rctf* %16, i32 0, i32 1, !dbg !6587
  %17 = load float, float* %xmax9, align 4, !dbg !6588
  %add10 = fadd float %17, %sub8, !dbg !6588
  store float %add10, float* %xmax9, align 4, !dbg !6588
  br label %if.end31, !dbg !6589

if.else:                                          ; preds = %if.then
  %18 = load %struct.rctf*, %struct.rctf** %rf, align 8, !dbg !6590
  %xmax11 = getelementptr inbounds %struct.rctf, %struct.rctf* %18, i32 0, i32 1, !dbg !6593
  %19 = load float, float* %xmax11, align 4, !dbg !6593
  %20 = load float, float* %x2.addr, align 4, !dbg !6594
  %cmp12 = fcmp ogt float %19, %20, !dbg !6595
  br i1 %cmp12, label %if.then14, label %if.end, !dbg !6596

if.then14:                                        ; preds = %if.else
  %21 = load float, float* %x2.addr, align 4, !dbg !6597
  %22 = load %struct.rctf*, %struct.rctf** %rf, align 8, !dbg !6598
  %xmax15 = getelementptr inbounds %struct.rctf, %struct.rctf* %22, i32 0, i32 1, !dbg !6599
  store float %21, float* %xmax15, align 4, !dbg !6600
  br label %if.end, !dbg !6598

if.end:                                           ; preds = %if.then14, %if.else
  %23 = load %struct.rctf*, %struct.rctf** %stack.addr, align 8, !dbg !6601
  %24 = load i16*, i16** %count.addr, align 8, !dbg !6602
  %25 = load i16, i16* %24, align 2, !dbg !6603
  %conv16 = sext i16 %25 to i32, !dbg !6603
  %idx.ext = sext i32 %conv16 to i64, !dbg !6604
  %add.ptr = getelementptr inbounds %struct.rctf, %struct.rctf* %23, i64 %idx.ext, !dbg !6604
  store %struct.rctf* %add.ptr, %struct.rctf** %newrct, align 8, !dbg !6605
  %26 = load i16*, i16** %count.addr, align 8, !dbg !6606
  %27 = load i16, i16* %26, align 2, !dbg !6607
  %inc = add i16 %27, 1, !dbg !6607
  store i16 %inc, i16* %26, align 2, !dbg !6607
  %28 = load float, float* %x2.addr, align 4, !dbg !6608
  %29 = load %struct.rctf*, %struct.rctf** %newrct, align 8, !dbg !6609
  %xmax17 = getelementptr inbounds %struct.rctf, %struct.rctf* %29, i32 0, i32 1, !dbg !6610
  store float %28, float* %xmax17, align 4, !dbg !6611
  %30 = load %struct.rctf*, %struct.rctf** %rf, align 8, !dbg !6612
  %xmin18 = getelementptr inbounds %struct.rctf, %struct.rctf* %30, i32 0, i32 0, !dbg !6613
  %31 = load float, float* %xmin18, align 4, !dbg !6613
  %32 = load float, float* %x2.addr, align 4, !dbg !6614
  %33 = load float, float* %x1.addr, align 4, !dbg !6615
  %sub19 = fsub float %32, %33, !dbg !6616
  %add20 = fadd float %31, %sub19, !dbg !6617
  %34 = load %struct.rctf*, %struct.rctf** %newrct, align 8, !dbg !6618
  %xmin21 = getelementptr inbounds %struct.rctf, %struct.rctf* %34, i32 0, i32 0, !dbg !6619
  store float %add20, float* %xmin21, align 4, !dbg !6620
  %35 = load %struct.rctf*, %struct.rctf** %rf, align 8, !dbg !6621
  %ymin = getelementptr inbounds %struct.rctf, %struct.rctf* %35, i32 0, i32 2, !dbg !6622
  %36 = load float, float* %ymin, align 4, !dbg !6622
  %37 = load %struct.rctf*, %struct.rctf** %newrct, align 8, !dbg !6623
  %ymin22 = getelementptr inbounds %struct.rctf, %struct.rctf* %37, i32 0, i32 2, !dbg !6624
  store float %36, float* %ymin22, align 4, !dbg !6625
  %38 = load %struct.rctf*, %struct.rctf** %rf, align 8, !dbg !6626
  %ymax = getelementptr inbounds %struct.rctf, %struct.rctf* %38, i32 0, i32 3, !dbg !6627
  %39 = load float, float* %ymax, align 4, !dbg !6627
  %40 = load %struct.rctf*, %struct.rctf** %newrct, align 8, !dbg !6628
  %ymax23 = getelementptr inbounds %struct.rctf, %struct.rctf* %40, i32 0, i32 3, !dbg !6629
  store float %39, float* %ymax23, align 4, !dbg !6630
  %41 = load %struct.rctf*, %struct.rctf** %newrct, align 8, !dbg !6631
  %xmin24 = getelementptr inbounds %struct.rctf, %struct.rctf* %41, i32 0, i32 0, !dbg !6633
  %42 = load float, float* %xmin24, align 4, !dbg !6633
  %43 = load %struct.rctf*, %struct.rctf** %newrct, align 8, !dbg !6634
  %xmax25 = getelementptr inbounds %struct.rctf, %struct.rctf* %43, i32 0, i32 1, !dbg !6635
  %44 = load float, float* %xmax25, align 4, !dbg !6635
  %cmp26 = fcmp oeq float %42, %44, !dbg !6636
  br i1 %cmp26, label %if.then28, label %if.end29, !dbg !6637

if.then28:                                        ; preds = %if.end
  %45 = load i16*, i16** %count.addr, align 8, !dbg !6638
  %46 = load i16, i16* %45, align 2, !dbg !6639
  %dec = add i16 %46, -1, !dbg !6639
  store i16 %dec, i16* %45, align 2, !dbg !6639
  br label %if.end29, !dbg !6640

if.end29:                                         ; preds = %if.then28, %if.end
  %47 = load float, float* %x1.addr, align 4, !dbg !6641
  %48 = load %struct.rctf*, %struct.rctf** %rf, align 8, !dbg !6642
  %xmin30 = getelementptr inbounds %struct.rctf, %struct.rctf* %48, i32 0, i32 0, !dbg !6643
  store float %47, float* %xmin30, align 4, !dbg !6644
  br label %if.end31

if.end31:                                         ; preds = %if.end29, %if.then6
  br label %if.end77, !dbg !6645

if.else32:                                        ; preds = %for.body
  %49 = load %struct.rctf*, %struct.rctf** %rf, align 8, !dbg !6646
  %xmax33 = getelementptr inbounds %struct.rctf, %struct.rctf* %49, i32 0, i32 1, !dbg !6648
  %50 = load float, float* %xmax33, align 4, !dbg !6648
  %51 = load float, float* %x2.addr, align 4, !dbg !6649
  %cmp34 = fcmp ogt float %50, %51, !dbg !6650
  br i1 %cmp34, label %if.then36, label %if.end76, !dbg !6651

if.then36:                                        ; preds = %if.else32
  %52 = load %struct.rctf*, %struct.rctf** %rf, align 8, !dbg !6652
  %xmin37 = getelementptr inbounds %struct.rctf, %struct.rctf* %52, i32 0, i32 0, !dbg !6655
  %53 = load float, float* %xmin37, align 4, !dbg !6655
  %54 = load float, float* %x2.addr, align 4, !dbg !6656
  %cmp38 = fcmp ogt float %53, %54, !dbg !6657
  br i1 %cmp38, label %if.then40, label %if.else47, !dbg !6658

if.then40:                                        ; preds = %if.then36
  %55 = load float, float* %x2.addr, align 4, !dbg !6659
  %56 = load float, float* %x1.addr, align 4, !dbg !6661
  %sub41 = fsub float %55, %56, !dbg !6662
  %57 = load %struct.rctf*, %struct.rctf** %rf, align 8, !dbg !6663
  %xmin42 = getelementptr inbounds %struct.rctf, %struct.rctf* %57, i32 0, i32 0, !dbg !6664
  %58 = load float, float* %xmin42, align 4, !dbg !6665
  %sub43 = fsub float %58, %sub41, !dbg !6665
  store float %sub43, float* %xmin42, align 4, !dbg !6665
  %59 = load float, float* %x2.addr, align 4, !dbg !6666
  %60 = load float, float* %x1.addr, align 4, !dbg !6667
  %sub44 = fsub float %59, %60, !dbg !6668
  %61 = load %struct.rctf*, %struct.rctf** %rf, align 8, !dbg !6669
  %xmax45 = getelementptr inbounds %struct.rctf, %struct.rctf* %61, i32 0, i32 1, !dbg !6670
  %62 = load float, float* %xmax45, align 4, !dbg !6671
  %sub46 = fsub float %62, %sub44, !dbg !6671
  store float %sub46, float* %xmax45, align 4, !dbg !6671
  br label %if.end75, !dbg !6672

if.else47:                                        ; preds = %if.then36
  %63 = load %struct.rctf*, %struct.rctf** %rf, align 8, !dbg !6673
  %xmin48 = getelementptr inbounds %struct.rctf, %struct.rctf* %63, i32 0, i32 0, !dbg !6676
  %64 = load float, float* %xmin48, align 4, !dbg !6676
  %65 = load float, float* %x1.addr, align 4, !dbg !6677
  %cmp49 = fcmp olt float %64, %65, !dbg !6678
  br i1 %cmp49, label %if.then51, label %if.end53, !dbg !6679

if.then51:                                        ; preds = %if.else47
  %66 = load float, float* %x1.addr, align 4, !dbg !6680
  %67 = load %struct.rctf*, %struct.rctf** %rf, align 8, !dbg !6681
  %xmin52 = getelementptr inbounds %struct.rctf, %struct.rctf* %67, i32 0, i32 0, !dbg !6682
  store float %66, float* %xmin52, align 4, !dbg !6683
  br label %if.end53, !dbg !6681

if.end53:                                         ; preds = %if.then51, %if.else47
  %68 = load %struct.rctf*, %struct.rctf** %stack.addr, align 8, !dbg !6684
  %69 = load i16*, i16** %count.addr, align 8, !dbg !6685
  %70 = load i16, i16* %69, align 2, !dbg !6686
  %conv54 = sext i16 %70 to i32, !dbg !6686
  %idx.ext55 = sext i32 %conv54 to i64, !dbg !6687
  %add.ptr56 = getelementptr inbounds %struct.rctf, %struct.rctf* %68, i64 %idx.ext55, !dbg !6687
  store %struct.rctf* %add.ptr56, %struct.rctf** %newrct, align 8, !dbg !6688
  %71 = load i16*, i16** %count.addr, align 8, !dbg !6689
  %72 = load i16, i16* %71, align 2, !dbg !6690
  %inc57 = add i16 %72, 1, !dbg !6690
  store i16 %inc57, i16* %71, align 2, !dbg !6690
  %73 = load float, float* %x1.addr, align 4, !dbg !6691
  %74 = load %struct.rctf*, %struct.rctf** %newrct, align 8, !dbg !6692
  %xmin58 = getelementptr inbounds %struct.rctf, %struct.rctf* %74, i32 0, i32 0, !dbg !6693
  store float %73, float* %xmin58, align 4, !dbg !6694
  %75 = load %struct.rctf*, %struct.rctf** %rf, align 8, !dbg !6695
  %xmax59 = getelementptr inbounds %struct.rctf, %struct.rctf* %75, i32 0, i32 1, !dbg !6696
  %76 = load float, float* %xmax59, align 4, !dbg !6696
  %77 = load float, float* %x2.addr, align 4, !dbg !6697
  %78 = load float, float* %x1.addr, align 4, !dbg !6698
  %sub60 = fsub float %77, %78, !dbg !6699
  %sub61 = fsub float %76, %sub60, !dbg !6700
  %79 = load %struct.rctf*, %struct.rctf** %newrct, align 8, !dbg !6701
  %xmax62 = getelementptr inbounds %struct.rctf, %struct.rctf* %79, i32 0, i32 1, !dbg !6702
  store float %sub61, float* %xmax62, align 4, !dbg !6703
  %80 = load %struct.rctf*, %struct.rctf** %rf, align 8, !dbg !6704
  %ymin63 = getelementptr inbounds %struct.rctf, %struct.rctf* %80, i32 0, i32 2, !dbg !6705
  %81 = load float, float* %ymin63, align 4, !dbg !6705
  %82 = load %struct.rctf*, %struct.rctf** %newrct, align 8, !dbg !6706
  %ymin64 = getelementptr inbounds %struct.rctf, %struct.rctf* %82, i32 0, i32 2, !dbg !6707
  store float %81, float* %ymin64, align 4, !dbg !6708
  %83 = load %struct.rctf*, %struct.rctf** %rf, align 8, !dbg !6709
  %ymax65 = getelementptr inbounds %struct.rctf, %struct.rctf* %83, i32 0, i32 3, !dbg !6710
  %84 = load float, float* %ymax65, align 4, !dbg !6710
  %85 = load %struct.rctf*, %struct.rctf** %newrct, align 8, !dbg !6711
  %ymax66 = getelementptr inbounds %struct.rctf, %struct.rctf* %85, i32 0, i32 3, !dbg !6712
  store float %84, float* %ymax66, align 4, !dbg !6713
  %86 = load %struct.rctf*, %struct.rctf** %newrct, align 8, !dbg !6714
  %xmin67 = getelementptr inbounds %struct.rctf, %struct.rctf* %86, i32 0, i32 0, !dbg !6716
  %87 = load float, float* %xmin67, align 4, !dbg !6716
  %88 = load %struct.rctf*, %struct.rctf** %newrct, align 8, !dbg !6717
  %xmax68 = getelementptr inbounds %struct.rctf, %struct.rctf* %88, i32 0, i32 1, !dbg !6718
  %89 = load float, float* %xmax68, align 4, !dbg !6718
  %cmp69 = fcmp oeq float %87, %89, !dbg !6719
  br i1 %cmp69, label %if.then71, label %if.end73, !dbg !6720

if.then71:                                        ; preds = %if.end53
  %90 = load i16*, i16** %count.addr, align 8, !dbg !6721
  %91 = load i16, i16* %90, align 2, !dbg !6722
  %dec72 = add i16 %91, -1, !dbg !6722
  store i16 %dec72, i16* %90, align 2, !dbg !6722
  br label %if.end73, !dbg !6723

if.end73:                                         ; preds = %if.then71, %if.end53
  %92 = load float, float* %x2.addr, align 4, !dbg !6724
  %93 = load %struct.rctf*, %struct.rctf** %rf, align 8, !dbg !6725
  %xmax74 = getelementptr inbounds %struct.rctf, %struct.rctf* %93, i32 0, i32 1, !dbg !6726
  store float %92, float* %xmax74, align 4, !dbg !6727
  br label %if.end75

if.end75:                                         ; preds = %if.end73, %if.then40
  br label %if.end76, !dbg !6728

if.end76:                                         ; preds = %if.end75, %if.else32
  br label %if.end77

if.end77:                                         ; preds = %if.end76, %if.end31
  %94 = load %struct.rctf*, %struct.rctf** %rf, align 8, !dbg !6729
  %incdec.ptr = getelementptr inbounds %struct.rctf, %struct.rctf* %94, i32 1, !dbg !6729
  store %struct.rctf* %incdec.ptr, %struct.rctf** %rf, align 8, !dbg !6729
  br label %for.inc, !dbg !6730

for.inc:                                          ; preds = %if.end77
  %95 = load i16, i16* %a, align 2, !dbg !6731
  %dec78 = add i16 %95, -1, !dbg !6731
  store i16 %dec78, i16* %a, align 2, !dbg !6731
  br label %for.cond, !dbg !6732, !llvm.loop !6733

for.end:                                          ; preds = %for.cond
  ret void, !dbg !6735
}

; Function Attrs: noinline nounwind uwtable
define internal float @clipx_rctf(%struct.rctf* %rf, float %x1, float %x2) #0 !dbg !6736 {
entry:
  %retval = alloca float, align 4
  %rf.addr = alloca %struct.rctf*, align 8
  %x1.addr = alloca float, align 4
  %x2.addr = alloca float, align 4
  %size = alloca float, align 4
  store %struct.rctf* %rf, %struct.rctf** %rf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rctf** %rf.addr, metadata !6739, metadata !DIExpression()), !dbg !6740
  store float %x1, float* %x1.addr, align 4
  call void @llvm.dbg.declare(metadata float* %x1.addr, metadata !6741, metadata !DIExpression()), !dbg !6742
  store float %x2, float* %x2.addr, align 4
  call void @llvm.dbg.declare(metadata float* %x2.addr, metadata !6743, metadata !DIExpression()), !dbg !6744
  call void @llvm.dbg.declare(metadata float* %size, metadata !6745, metadata !DIExpression()), !dbg !6746
  %0 = load %struct.rctf*, %struct.rctf** %rf.addr, align 8, !dbg !6747
  %call = call float @BLI_rctf_size_x(%struct.rctf* %0), !dbg !6748
  store float %call, float* %size, align 4, !dbg !6749
  %1 = load %struct.rctf*, %struct.rctf** %rf.addr, align 8, !dbg !6750
  %xmin = getelementptr inbounds %struct.rctf, %struct.rctf* %1, i32 0, i32 0, !dbg !6752
  %2 = load float, float* %xmin, align 4, !dbg !6752
  %3 = load float, float* %x1.addr, align 4, !dbg !6753
  %cmp = fcmp olt float %2, %3, !dbg !6754
  br i1 %cmp, label %if.then, label %if.end, !dbg !6755

if.then:                                          ; preds = %entry
  %4 = load float, float* %x1.addr, align 4, !dbg !6756
  %5 = load %struct.rctf*, %struct.rctf** %rf.addr, align 8, !dbg !6758
  %xmin1 = getelementptr inbounds %struct.rctf, %struct.rctf* %5, i32 0, i32 0, !dbg !6759
  store float %4, float* %xmin1, align 4, !dbg !6760
  br label %if.end, !dbg !6761

if.end:                                           ; preds = %if.then, %entry
  %6 = load %struct.rctf*, %struct.rctf** %rf.addr, align 8, !dbg !6762
  %xmax = getelementptr inbounds %struct.rctf, %struct.rctf* %6, i32 0, i32 1, !dbg !6764
  %7 = load float, float* %xmax, align 4, !dbg !6764
  %8 = load float, float* %x2.addr, align 4, !dbg !6765
  %cmp2 = fcmp ogt float %7, %8, !dbg !6766
  br i1 %cmp2, label %if.then3, label %if.end5, !dbg !6767

if.then3:                                         ; preds = %if.end
  %9 = load float, float* %x2.addr, align 4, !dbg !6768
  %10 = load %struct.rctf*, %struct.rctf** %rf.addr, align 8, !dbg !6770
  %xmax4 = getelementptr inbounds %struct.rctf, %struct.rctf* %10, i32 0, i32 1, !dbg !6771
  store float %9, float* %xmax4, align 4, !dbg !6772
  br label %if.end5, !dbg !6773

if.end5:                                          ; preds = %if.then3, %if.end
  %11 = load %struct.rctf*, %struct.rctf** %rf.addr, align 8, !dbg !6774
  %xmin6 = getelementptr inbounds %struct.rctf, %struct.rctf* %11, i32 0, i32 0, !dbg !6776
  %12 = load float, float* %xmin6, align 4, !dbg !6776
  %13 = load %struct.rctf*, %struct.rctf** %rf.addr, align 8, !dbg !6777
  %xmax7 = getelementptr inbounds %struct.rctf, %struct.rctf* %13, i32 0, i32 1, !dbg !6778
  %14 = load float, float* %xmax7, align 4, !dbg !6778
  %cmp8 = fcmp ogt float %12, %14, !dbg !6779
  br i1 %cmp8, label %if.then9, label %if.else, !dbg !6780

if.then9:                                         ; preds = %if.end5
  %15 = load %struct.rctf*, %struct.rctf** %rf.addr, align 8, !dbg !6781
  %xmax10 = getelementptr inbounds %struct.rctf, %struct.rctf* %15, i32 0, i32 1, !dbg !6783
  %16 = load float, float* %xmax10, align 4, !dbg !6783
  %17 = load %struct.rctf*, %struct.rctf** %rf.addr, align 8, !dbg !6784
  %xmin11 = getelementptr inbounds %struct.rctf, %struct.rctf* %17, i32 0, i32 0, !dbg !6785
  store float %16, float* %xmin11, align 4, !dbg !6786
  store float 0.000000e+00, float* %retval, align 4, !dbg !6787
  br label %return, !dbg !6787

if.else:                                          ; preds = %if.end5
  %18 = load float, float* %size, align 4, !dbg !6788
  %cmp12 = fcmp une float %18, 0.000000e+00, !dbg !6790
  br i1 %cmp12, label %if.then13, label %if.end15, !dbg !6791

if.then13:                                        ; preds = %if.else
  %19 = load %struct.rctf*, %struct.rctf** %rf.addr, align 8, !dbg !6792
  %call14 = call float @BLI_rctf_size_x(%struct.rctf* %19), !dbg !6794
  %20 = load float, float* %size, align 4, !dbg !6795
  %div = fdiv float %call14, %20, !dbg !6796
  store float %div, float* %retval, align 4, !dbg !6797
  br label %return, !dbg !6797

if.end15:                                         ; preds = %if.else
  br label %if.end16

if.end16:                                         ; preds = %if.end15
  store float 1.000000e+00, float* %retval, align 4, !dbg !6798
  br label %return, !dbg !6798

return:                                           ; preds = %if.end16, %if.then13, %if.then9
  %21 = load float, float* %retval, align 4, !dbg !6799
  ret float %21, !dbg !6799
}

; Function Attrs: noinline nounwind uwtable
define internal void @clipy_rctf_swap(%struct.rctf* %stack, i16* %count, float %y1, float %y2) #0 !dbg !6800 {
entry:
  %stack.addr = alloca %struct.rctf*, align 8
  %count.addr = alloca i16*, align 8
  %y1.addr = alloca float, align 4
  %y2.addr = alloca float, align 4
  %rf = alloca %struct.rctf*, align 8
  %newrct = alloca %struct.rctf*, align 8
  %a = alloca i16, align 2
  store %struct.rctf* %stack, %struct.rctf** %stack.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rctf** %stack.addr, metadata !6801, metadata !DIExpression()), !dbg !6802
  store i16* %count, i16** %count.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %count.addr, metadata !6803, metadata !DIExpression()), !dbg !6804
  store float %y1, float* %y1.addr, align 4
  call void @llvm.dbg.declare(metadata float* %y1.addr, metadata !6805, metadata !DIExpression()), !dbg !6806
  store float %y2, float* %y2.addr, align 4
  call void @llvm.dbg.declare(metadata float* %y2.addr, metadata !6807, metadata !DIExpression()), !dbg !6808
  call void @llvm.dbg.declare(metadata %struct.rctf** %rf, metadata !6809, metadata !DIExpression()), !dbg !6810
  call void @llvm.dbg.declare(metadata %struct.rctf** %newrct, metadata !6811, metadata !DIExpression()), !dbg !6812
  call void @llvm.dbg.declare(metadata i16* %a, metadata !6813, metadata !DIExpression()), !dbg !6814
  %0 = load i16*, i16** %count.addr, align 8, !dbg !6815
  %1 = load i16, i16* %0, align 2, !dbg !6816
  store i16 %1, i16* %a, align 2, !dbg !6817
  %2 = load %struct.rctf*, %struct.rctf** %stack.addr, align 8, !dbg !6818
  store %struct.rctf* %2, %struct.rctf** %rf, align 8, !dbg !6819
  br label %for.cond, !dbg !6820

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load i16, i16* %a, align 2, !dbg !6821
  %conv = sext i16 %3 to i32, !dbg !6821
  %cmp = icmp sgt i32 %conv, 0, !dbg !6824
  br i1 %cmp, label %for.body, label %for.end, !dbg !6825

for.body:                                         ; preds = %for.cond
  %4 = load %struct.rctf*, %struct.rctf** %rf, align 8, !dbg !6826
  %ymin = getelementptr inbounds %struct.rctf, %struct.rctf* %4, i32 0, i32 2, !dbg !6829
  %5 = load float, float* %ymin, align 4, !dbg !6829
  %6 = load float, float* %y1.addr, align 4, !dbg !6830
  %cmp2 = fcmp olt float %5, %6, !dbg !6831
  br i1 %cmp2, label %if.then, label %if.else32, !dbg !6832

if.then:                                          ; preds = %for.body
  %7 = load %struct.rctf*, %struct.rctf** %rf, align 8, !dbg !6833
  %ymax = getelementptr inbounds %struct.rctf, %struct.rctf* %7, i32 0, i32 3, !dbg !6836
  %8 = load float, float* %ymax, align 4, !dbg !6836
  %9 = load float, float* %y1.addr, align 4, !dbg !6837
  %cmp4 = fcmp olt float %8, %9, !dbg !6838
  br i1 %cmp4, label %if.then6, label %if.else, !dbg !6839

if.then6:                                         ; preds = %if.then
  %10 = load float, float* %y2.addr, align 4, !dbg !6840
  %11 = load float, float* %y1.addr, align 4, !dbg !6842
  %sub = fsub float %10, %11, !dbg !6843
  %12 = load %struct.rctf*, %struct.rctf** %rf, align 8, !dbg !6844
  %ymin7 = getelementptr inbounds %struct.rctf, %struct.rctf* %12, i32 0, i32 2, !dbg !6845
  %13 = load float, float* %ymin7, align 4, !dbg !6846
  %add = fadd float %13, %sub, !dbg !6846
  store float %add, float* %ymin7, align 4, !dbg !6846
  %14 = load float, float* %y2.addr, align 4, !dbg !6847
  %15 = load float, float* %y1.addr, align 4, !dbg !6848
  %sub8 = fsub float %14, %15, !dbg !6849
  %16 = load %struct.rctf*, %struct.rctf** %rf, align 8, !dbg !6850
  %ymax9 = getelementptr inbounds %struct.rctf, %struct.rctf* %16, i32 0, i32 3, !dbg !6851
  %17 = load float, float* %ymax9, align 4, !dbg !6852
  %add10 = fadd float %17, %sub8, !dbg !6852
  store float %add10, float* %ymax9, align 4, !dbg !6852
  br label %if.end31, !dbg !6853

if.else:                                          ; preds = %if.then
  %18 = load %struct.rctf*, %struct.rctf** %rf, align 8, !dbg !6854
  %ymax11 = getelementptr inbounds %struct.rctf, %struct.rctf* %18, i32 0, i32 3, !dbg !6857
  %19 = load float, float* %ymax11, align 4, !dbg !6857
  %20 = load float, float* %y2.addr, align 4, !dbg !6858
  %cmp12 = fcmp ogt float %19, %20, !dbg !6859
  br i1 %cmp12, label %if.then14, label %if.end, !dbg !6860

if.then14:                                        ; preds = %if.else
  %21 = load float, float* %y2.addr, align 4, !dbg !6861
  %22 = load %struct.rctf*, %struct.rctf** %rf, align 8, !dbg !6862
  %ymax15 = getelementptr inbounds %struct.rctf, %struct.rctf* %22, i32 0, i32 3, !dbg !6863
  store float %21, float* %ymax15, align 4, !dbg !6864
  br label %if.end, !dbg !6862

if.end:                                           ; preds = %if.then14, %if.else
  %23 = load %struct.rctf*, %struct.rctf** %stack.addr, align 8, !dbg !6865
  %24 = load i16*, i16** %count.addr, align 8, !dbg !6866
  %25 = load i16, i16* %24, align 2, !dbg !6867
  %conv16 = sext i16 %25 to i32, !dbg !6867
  %idx.ext = sext i32 %conv16 to i64, !dbg !6868
  %add.ptr = getelementptr inbounds %struct.rctf, %struct.rctf* %23, i64 %idx.ext, !dbg !6868
  store %struct.rctf* %add.ptr, %struct.rctf** %newrct, align 8, !dbg !6869
  %26 = load i16*, i16** %count.addr, align 8, !dbg !6870
  %27 = load i16, i16* %26, align 2, !dbg !6871
  %inc = add i16 %27, 1, !dbg !6871
  store i16 %inc, i16* %26, align 2, !dbg !6871
  %28 = load float, float* %y2.addr, align 4, !dbg !6872
  %29 = load %struct.rctf*, %struct.rctf** %newrct, align 8, !dbg !6873
  %ymax17 = getelementptr inbounds %struct.rctf, %struct.rctf* %29, i32 0, i32 3, !dbg !6874
  store float %28, float* %ymax17, align 4, !dbg !6875
  %30 = load %struct.rctf*, %struct.rctf** %rf, align 8, !dbg !6876
  %ymin18 = getelementptr inbounds %struct.rctf, %struct.rctf* %30, i32 0, i32 2, !dbg !6877
  %31 = load float, float* %ymin18, align 4, !dbg !6877
  %32 = load float, float* %y2.addr, align 4, !dbg !6878
  %33 = load float, float* %y1.addr, align 4, !dbg !6879
  %sub19 = fsub float %32, %33, !dbg !6880
  %add20 = fadd float %31, %sub19, !dbg !6881
  %34 = load %struct.rctf*, %struct.rctf** %newrct, align 8, !dbg !6882
  %ymin21 = getelementptr inbounds %struct.rctf, %struct.rctf* %34, i32 0, i32 2, !dbg !6883
  store float %add20, float* %ymin21, align 4, !dbg !6884
  %35 = load %struct.rctf*, %struct.rctf** %rf, align 8, !dbg !6885
  %xmin = getelementptr inbounds %struct.rctf, %struct.rctf* %35, i32 0, i32 0, !dbg !6886
  %36 = load float, float* %xmin, align 4, !dbg !6886
  %37 = load %struct.rctf*, %struct.rctf** %newrct, align 8, !dbg !6887
  %xmin22 = getelementptr inbounds %struct.rctf, %struct.rctf* %37, i32 0, i32 0, !dbg !6888
  store float %36, float* %xmin22, align 4, !dbg !6889
  %38 = load %struct.rctf*, %struct.rctf** %rf, align 8, !dbg !6890
  %xmax = getelementptr inbounds %struct.rctf, %struct.rctf* %38, i32 0, i32 1, !dbg !6891
  %39 = load float, float* %xmax, align 4, !dbg !6891
  %40 = load %struct.rctf*, %struct.rctf** %newrct, align 8, !dbg !6892
  %xmax23 = getelementptr inbounds %struct.rctf, %struct.rctf* %40, i32 0, i32 1, !dbg !6893
  store float %39, float* %xmax23, align 4, !dbg !6894
  %41 = load %struct.rctf*, %struct.rctf** %newrct, align 8, !dbg !6895
  %ymin24 = getelementptr inbounds %struct.rctf, %struct.rctf* %41, i32 0, i32 2, !dbg !6897
  %42 = load float, float* %ymin24, align 4, !dbg !6897
  %43 = load %struct.rctf*, %struct.rctf** %newrct, align 8, !dbg !6898
  %ymax25 = getelementptr inbounds %struct.rctf, %struct.rctf* %43, i32 0, i32 3, !dbg !6899
  %44 = load float, float* %ymax25, align 4, !dbg !6899
  %cmp26 = fcmp oeq float %42, %44, !dbg !6900
  br i1 %cmp26, label %if.then28, label %if.end29, !dbg !6901

if.then28:                                        ; preds = %if.end
  %45 = load i16*, i16** %count.addr, align 8, !dbg !6902
  %46 = load i16, i16* %45, align 2, !dbg !6903
  %dec = add i16 %46, -1, !dbg !6903
  store i16 %dec, i16* %45, align 2, !dbg !6903
  br label %if.end29, !dbg !6904

if.end29:                                         ; preds = %if.then28, %if.end
  %47 = load float, float* %y1.addr, align 4, !dbg !6905
  %48 = load %struct.rctf*, %struct.rctf** %rf, align 8, !dbg !6906
  %ymin30 = getelementptr inbounds %struct.rctf, %struct.rctf* %48, i32 0, i32 2, !dbg !6907
  store float %47, float* %ymin30, align 4, !dbg !6908
  br label %if.end31

if.end31:                                         ; preds = %if.end29, %if.then6
  br label %if.end77, !dbg !6909

if.else32:                                        ; preds = %for.body
  %49 = load %struct.rctf*, %struct.rctf** %rf, align 8, !dbg !6910
  %ymax33 = getelementptr inbounds %struct.rctf, %struct.rctf* %49, i32 0, i32 3, !dbg !6912
  %50 = load float, float* %ymax33, align 4, !dbg !6912
  %51 = load float, float* %y2.addr, align 4, !dbg !6913
  %cmp34 = fcmp ogt float %50, %51, !dbg !6914
  br i1 %cmp34, label %if.then36, label %if.end76, !dbg !6915

if.then36:                                        ; preds = %if.else32
  %52 = load %struct.rctf*, %struct.rctf** %rf, align 8, !dbg !6916
  %ymin37 = getelementptr inbounds %struct.rctf, %struct.rctf* %52, i32 0, i32 2, !dbg !6919
  %53 = load float, float* %ymin37, align 4, !dbg !6919
  %54 = load float, float* %y2.addr, align 4, !dbg !6920
  %cmp38 = fcmp ogt float %53, %54, !dbg !6921
  br i1 %cmp38, label %if.then40, label %if.else47, !dbg !6922

if.then40:                                        ; preds = %if.then36
  %55 = load float, float* %y2.addr, align 4, !dbg !6923
  %56 = load float, float* %y1.addr, align 4, !dbg !6925
  %sub41 = fsub float %55, %56, !dbg !6926
  %57 = load %struct.rctf*, %struct.rctf** %rf, align 8, !dbg !6927
  %ymin42 = getelementptr inbounds %struct.rctf, %struct.rctf* %57, i32 0, i32 2, !dbg !6928
  %58 = load float, float* %ymin42, align 4, !dbg !6929
  %sub43 = fsub float %58, %sub41, !dbg !6929
  store float %sub43, float* %ymin42, align 4, !dbg !6929
  %59 = load float, float* %y2.addr, align 4, !dbg !6930
  %60 = load float, float* %y1.addr, align 4, !dbg !6931
  %sub44 = fsub float %59, %60, !dbg !6932
  %61 = load %struct.rctf*, %struct.rctf** %rf, align 8, !dbg !6933
  %ymax45 = getelementptr inbounds %struct.rctf, %struct.rctf* %61, i32 0, i32 3, !dbg !6934
  %62 = load float, float* %ymax45, align 4, !dbg !6935
  %sub46 = fsub float %62, %sub44, !dbg !6935
  store float %sub46, float* %ymax45, align 4, !dbg !6935
  br label %if.end75, !dbg !6936

if.else47:                                        ; preds = %if.then36
  %63 = load %struct.rctf*, %struct.rctf** %rf, align 8, !dbg !6937
  %ymin48 = getelementptr inbounds %struct.rctf, %struct.rctf* %63, i32 0, i32 2, !dbg !6940
  %64 = load float, float* %ymin48, align 4, !dbg !6940
  %65 = load float, float* %y1.addr, align 4, !dbg !6941
  %cmp49 = fcmp olt float %64, %65, !dbg !6942
  br i1 %cmp49, label %if.then51, label %if.end53, !dbg !6943

if.then51:                                        ; preds = %if.else47
  %66 = load float, float* %y1.addr, align 4, !dbg !6944
  %67 = load %struct.rctf*, %struct.rctf** %rf, align 8, !dbg !6945
  %ymin52 = getelementptr inbounds %struct.rctf, %struct.rctf* %67, i32 0, i32 2, !dbg !6946
  store float %66, float* %ymin52, align 4, !dbg !6947
  br label %if.end53, !dbg !6945

if.end53:                                         ; preds = %if.then51, %if.else47
  %68 = load %struct.rctf*, %struct.rctf** %stack.addr, align 8, !dbg !6948
  %69 = load i16*, i16** %count.addr, align 8, !dbg !6949
  %70 = load i16, i16* %69, align 2, !dbg !6950
  %conv54 = sext i16 %70 to i32, !dbg !6950
  %idx.ext55 = sext i32 %conv54 to i64, !dbg !6951
  %add.ptr56 = getelementptr inbounds %struct.rctf, %struct.rctf* %68, i64 %idx.ext55, !dbg !6951
  store %struct.rctf* %add.ptr56, %struct.rctf** %newrct, align 8, !dbg !6952
  %71 = load i16*, i16** %count.addr, align 8, !dbg !6953
  %72 = load i16, i16* %71, align 2, !dbg !6954
  %inc57 = add i16 %72, 1, !dbg !6954
  store i16 %inc57, i16* %71, align 2, !dbg !6954
  %73 = load float, float* %y1.addr, align 4, !dbg !6955
  %74 = load %struct.rctf*, %struct.rctf** %newrct, align 8, !dbg !6956
  %ymin58 = getelementptr inbounds %struct.rctf, %struct.rctf* %74, i32 0, i32 2, !dbg !6957
  store float %73, float* %ymin58, align 4, !dbg !6958
  %75 = load %struct.rctf*, %struct.rctf** %rf, align 8, !dbg !6959
  %ymax59 = getelementptr inbounds %struct.rctf, %struct.rctf* %75, i32 0, i32 3, !dbg !6960
  %76 = load float, float* %ymax59, align 4, !dbg !6960
  %77 = load float, float* %y2.addr, align 4, !dbg !6961
  %78 = load float, float* %y1.addr, align 4, !dbg !6962
  %sub60 = fsub float %77, %78, !dbg !6963
  %sub61 = fsub float %76, %sub60, !dbg !6964
  %79 = load %struct.rctf*, %struct.rctf** %newrct, align 8, !dbg !6965
  %ymax62 = getelementptr inbounds %struct.rctf, %struct.rctf* %79, i32 0, i32 3, !dbg !6966
  store float %sub61, float* %ymax62, align 4, !dbg !6967
  %80 = load %struct.rctf*, %struct.rctf** %rf, align 8, !dbg !6968
  %xmin63 = getelementptr inbounds %struct.rctf, %struct.rctf* %80, i32 0, i32 0, !dbg !6969
  %81 = load float, float* %xmin63, align 4, !dbg !6969
  %82 = load %struct.rctf*, %struct.rctf** %newrct, align 8, !dbg !6970
  %xmin64 = getelementptr inbounds %struct.rctf, %struct.rctf* %82, i32 0, i32 0, !dbg !6971
  store float %81, float* %xmin64, align 4, !dbg !6972
  %83 = load %struct.rctf*, %struct.rctf** %rf, align 8, !dbg !6973
  %xmax65 = getelementptr inbounds %struct.rctf, %struct.rctf* %83, i32 0, i32 1, !dbg !6974
  %84 = load float, float* %xmax65, align 4, !dbg !6974
  %85 = load %struct.rctf*, %struct.rctf** %newrct, align 8, !dbg !6975
  %xmax66 = getelementptr inbounds %struct.rctf, %struct.rctf* %85, i32 0, i32 1, !dbg !6976
  store float %84, float* %xmax66, align 4, !dbg !6977
  %86 = load %struct.rctf*, %struct.rctf** %newrct, align 8, !dbg !6978
  %ymin67 = getelementptr inbounds %struct.rctf, %struct.rctf* %86, i32 0, i32 2, !dbg !6980
  %87 = load float, float* %ymin67, align 4, !dbg !6980
  %88 = load %struct.rctf*, %struct.rctf** %newrct, align 8, !dbg !6981
  %ymax68 = getelementptr inbounds %struct.rctf, %struct.rctf* %88, i32 0, i32 3, !dbg !6982
  %89 = load float, float* %ymax68, align 4, !dbg !6982
  %cmp69 = fcmp oeq float %87, %89, !dbg !6983
  br i1 %cmp69, label %if.then71, label %if.end73, !dbg !6984

if.then71:                                        ; preds = %if.end53
  %90 = load i16*, i16** %count.addr, align 8, !dbg !6985
  %91 = load i16, i16* %90, align 2, !dbg !6986
  %dec72 = add i16 %91, -1, !dbg !6986
  store i16 %dec72, i16* %90, align 2, !dbg !6986
  br label %if.end73, !dbg !6987

if.end73:                                         ; preds = %if.then71, %if.end53
  %92 = load float, float* %y2.addr, align 4, !dbg !6988
  %93 = load %struct.rctf*, %struct.rctf** %rf, align 8, !dbg !6989
  %ymax74 = getelementptr inbounds %struct.rctf, %struct.rctf* %93, i32 0, i32 3, !dbg !6990
  store float %92, float* %ymax74, align 4, !dbg !6991
  br label %if.end75

if.end75:                                         ; preds = %if.end73, %if.then40
  br label %if.end76, !dbg !6992

if.end76:                                         ; preds = %if.end75, %if.else32
  br label %if.end77

if.end77:                                         ; preds = %if.end76, %if.end31
  %94 = load %struct.rctf*, %struct.rctf** %rf, align 8, !dbg !6993
  %incdec.ptr = getelementptr inbounds %struct.rctf, %struct.rctf* %94, i32 1, !dbg !6993
  store %struct.rctf* %incdec.ptr, %struct.rctf** %rf, align 8, !dbg !6993
  br label %for.inc, !dbg !6994

for.inc:                                          ; preds = %if.end77
  %95 = load i16, i16* %a, align 2, !dbg !6995
  %dec78 = add i16 %95, -1, !dbg !6995
  store i16 %dec78, i16* %a, align 2, !dbg !6995
  br label %for.cond, !dbg !6996, !llvm.loop !6997

for.end:                                          ; preds = %for.cond
  ret void, !dbg !6999
}

; Function Attrs: noinline nounwind uwtable
define internal float @clipy_rctf(%struct.rctf* %rf, float %y1, float %y2) #0 !dbg !7000 {
entry:
  %retval = alloca float, align 4
  %rf.addr = alloca %struct.rctf*, align 8
  %y1.addr = alloca float, align 4
  %y2.addr = alloca float, align 4
  %size = alloca float, align 4
  store %struct.rctf* %rf, %struct.rctf** %rf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rctf** %rf.addr, metadata !7001, metadata !DIExpression()), !dbg !7002
  store float %y1, float* %y1.addr, align 4
  call void @llvm.dbg.declare(metadata float* %y1.addr, metadata !7003, metadata !DIExpression()), !dbg !7004
  store float %y2, float* %y2.addr, align 4
  call void @llvm.dbg.declare(metadata float* %y2.addr, metadata !7005, metadata !DIExpression()), !dbg !7006
  call void @llvm.dbg.declare(metadata float* %size, metadata !7007, metadata !DIExpression()), !dbg !7008
  %0 = load %struct.rctf*, %struct.rctf** %rf.addr, align 8, !dbg !7009
  %call = call float @BLI_rctf_size_y(%struct.rctf* %0), !dbg !7010
  store float %call, float* %size, align 4, !dbg !7011
  %1 = load %struct.rctf*, %struct.rctf** %rf.addr, align 8, !dbg !7012
  %ymin = getelementptr inbounds %struct.rctf, %struct.rctf* %1, i32 0, i32 2, !dbg !7014
  %2 = load float, float* %ymin, align 4, !dbg !7014
  %3 = load float, float* %y1.addr, align 4, !dbg !7015
  %cmp = fcmp olt float %2, %3, !dbg !7016
  br i1 %cmp, label %if.then, label %if.end, !dbg !7017

if.then:                                          ; preds = %entry
  %4 = load float, float* %y1.addr, align 4, !dbg !7018
  %5 = load %struct.rctf*, %struct.rctf** %rf.addr, align 8, !dbg !7020
  %ymin1 = getelementptr inbounds %struct.rctf, %struct.rctf* %5, i32 0, i32 2, !dbg !7021
  store float %4, float* %ymin1, align 4, !dbg !7022
  br label %if.end, !dbg !7023

if.end:                                           ; preds = %if.then, %entry
  %6 = load %struct.rctf*, %struct.rctf** %rf.addr, align 8, !dbg !7024
  %ymax = getelementptr inbounds %struct.rctf, %struct.rctf* %6, i32 0, i32 3, !dbg !7026
  %7 = load float, float* %ymax, align 4, !dbg !7026
  %8 = load float, float* %y2.addr, align 4, !dbg !7027
  %cmp2 = fcmp ogt float %7, %8, !dbg !7028
  br i1 %cmp2, label %if.then3, label %if.end5, !dbg !7029

if.then3:                                         ; preds = %if.end
  %9 = load float, float* %y2.addr, align 4, !dbg !7030
  %10 = load %struct.rctf*, %struct.rctf** %rf.addr, align 8, !dbg !7032
  %ymax4 = getelementptr inbounds %struct.rctf, %struct.rctf* %10, i32 0, i32 3, !dbg !7033
  store float %9, float* %ymax4, align 4, !dbg !7034
  br label %if.end5, !dbg !7035

if.end5:                                          ; preds = %if.then3, %if.end
  %11 = load %struct.rctf*, %struct.rctf** %rf.addr, align 8, !dbg !7036
  %ymin6 = getelementptr inbounds %struct.rctf, %struct.rctf* %11, i32 0, i32 2, !dbg !7038
  %12 = load float, float* %ymin6, align 4, !dbg !7038
  %13 = load %struct.rctf*, %struct.rctf** %rf.addr, align 8, !dbg !7039
  %ymax7 = getelementptr inbounds %struct.rctf, %struct.rctf* %13, i32 0, i32 3, !dbg !7040
  %14 = load float, float* %ymax7, align 4, !dbg !7040
  %cmp8 = fcmp ogt float %12, %14, !dbg !7041
  br i1 %cmp8, label %if.then9, label %if.else, !dbg !7042

if.then9:                                         ; preds = %if.end5
  %15 = load %struct.rctf*, %struct.rctf** %rf.addr, align 8, !dbg !7043
  %ymax10 = getelementptr inbounds %struct.rctf, %struct.rctf* %15, i32 0, i32 3, !dbg !7045
  %16 = load float, float* %ymax10, align 4, !dbg !7045
  %17 = load %struct.rctf*, %struct.rctf** %rf.addr, align 8, !dbg !7046
  %ymin11 = getelementptr inbounds %struct.rctf, %struct.rctf* %17, i32 0, i32 2, !dbg !7047
  store float %16, float* %ymin11, align 4, !dbg !7048
  store float 0.000000e+00, float* %retval, align 4, !dbg !7049
  br label %return, !dbg !7049

if.else:                                          ; preds = %if.end5
  %18 = load float, float* %size, align 4, !dbg !7050
  %cmp12 = fcmp une float %18, 0.000000e+00, !dbg !7052
  br i1 %cmp12, label %if.then13, label %if.end15, !dbg !7053

if.then13:                                        ; preds = %if.else
  %19 = load %struct.rctf*, %struct.rctf** %rf.addr, align 8, !dbg !7054
  %call14 = call float @BLI_rctf_size_y(%struct.rctf* %19), !dbg !7056
  %20 = load float, float* %size, align 4, !dbg !7057
  %div = fdiv float %call14, %20, !dbg !7058
  store float %div, float* %retval, align 4, !dbg !7059
  br label %return, !dbg !7059

if.end15:                                         ; preds = %if.else
  br label %if.end16

if.end16:                                         ; preds = %if.end15
  store float 1.000000e+00, float* %retval, align 4, !dbg !7060
  br label %return, !dbg !7060

return:                                           ; preds = %if.end16, %if.then13, %if.then9
  %21 = load float, float* %retval, align 4, !dbg !7061
  ret float %21, !dbg !7061
}

; Function Attrs: noinline nounwind uwtable
define internal void @boxsampleclip(%struct.ImBuf* %ibuf, %struct.rctf* %rf, %struct.TexResult* %texres) #0 !dbg !7062 {
entry:
  %ibuf.addr = alloca %struct.ImBuf*, align 8
  %rf.addr = alloca %struct.rctf*, align 8
  %texres.addr = alloca %struct.TexResult*, align 8
  %muly = alloca float, align 4
  %mulx = alloca float, align 4
  %div = alloca float, align 4
  %col = alloca [4 x float], align 16
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %startx = alloca i32, align 4
  %endx = alloca i32, align 4
  %starty = alloca i32, align 4
  %endy = alloca i32, align 4
  store %struct.ImBuf* %ibuf, %struct.ImBuf** %ibuf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf.addr, metadata !7065, metadata !DIExpression()), !dbg !7066
  store %struct.rctf* %rf, %struct.rctf** %rf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rctf** %rf.addr, metadata !7067, metadata !DIExpression()), !dbg !7068
  store %struct.TexResult* %texres, %struct.TexResult** %texres.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TexResult** %texres.addr, metadata !7069, metadata !DIExpression()), !dbg !7070
  call void @llvm.dbg.declare(metadata float* %muly, metadata !7071, metadata !DIExpression()), !dbg !7072
  call void @llvm.dbg.declare(metadata float* %mulx, metadata !7073, metadata !DIExpression()), !dbg !7074
  call void @llvm.dbg.declare(metadata float* %div, metadata !7075, metadata !DIExpression()), !dbg !7076
  call void @llvm.dbg.declare(metadata [4 x float]* %col, metadata !7077, metadata !DIExpression()), !dbg !7078
  call void @llvm.dbg.declare(metadata i32* %x, metadata !7079, metadata !DIExpression()), !dbg !7080
  call void @llvm.dbg.declare(metadata i32* %y, metadata !7081, metadata !DIExpression()), !dbg !7082
  call void @llvm.dbg.declare(metadata i32* %startx, metadata !7083, metadata !DIExpression()), !dbg !7084
  call void @llvm.dbg.declare(metadata i32* %endx, metadata !7085, metadata !DIExpression()), !dbg !7086
  call void @llvm.dbg.declare(metadata i32* %starty, metadata !7087, metadata !DIExpression()), !dbg !7088
  call void @llvm.dbg.declare(metadata i32* %endy, metadata !7089, metadata !DIExpression()), !dbg !7090
  %0 = load %struct.rctf*, %struct.rctf** %rf.addr, align 8, !dbg !7091
  %xmin = getelementptr inbounds %struct.rctf, %struct.rctf* %0, i32 0, i32 0, !dbg !7092
  %1 = load float, float* %xmin, align 4, !dbg !7092
  %conv = fpext float %1 to double, !dbg !7091
  %2 = call double @llvm.floor.f64(double %conv), !dbg !7093
  %conv1 = fptosi double %2 to i32, !dbg !7094
  store i32 %conv1, i32* %startx, align 4, !dbg !7095
  %3 = load %struct.rctf*, %struct.rctf** %rf.addr, align 8, !dbg !7096
  %xmax = getelementptr inbounds %struct.rctf, %struct.rctf* %3, i32 0, i32 1, !dbg !7097
  %4 = load float, float* %xmax, align 4, !dbg !7097
  %conv2 = fpext float %4 to double, !dbg !7096
  %5 = call double @llvm.floor.f64(double %conv2), !dbg !7098
  %conv3 = fptosi double %5 to i32, !dbg !7099
  store i32 %conv3, i32* %endx, align 4, !dbg !7100
  %6 = load %struct.rctf*, %struct.rctf** %rf.addr, align 8, !dbg !7101
  %ymin = getelementptr inbounds %struct.rctf, %struct.rctf* %6, i32 0, i32 2, !dbg !7102
  %7 = load float, float* %ymin, align 4, !dbg !7102
  %conv4 = fpext float %7 to double, !dbg !7101
  %8 = call double @llvm.floor.f64(double %conv4), !dbg !7103
  %conv5 = fptosi double %8 to i32, !dbg !7104
  store i32 %conv5, i32* %starty, align 4, !dbg !7105
  %9 = load %struct.rctf*, %struct.rctf** %rf.addr, align 8, !dbg !7106
  %ymax = getelementptr inbounds %struct.rctf, %struct.rctf* %9, i32 0, i32 3, !dbg !7107
  %10 = load float, float* %ymax, align 4, !dbg !7107
  %conv6 = fpext float %10 to double, !dbg !7106
  %11 = call double @llvm.floor.f64(double %conv6), !dbg !7108
  %conv7 = fptosi double %11 to i32, !dbg !7109
  store i32 %conv7, i32* %endy, align 4, !dbg !7110
  %12 = load i32, i32* %startx, align 4, !dbg !7111
  %cmp = icmp slt i32 %12, 0, !dbg !7113
  br i1 %cmp, label %if.then, label %if.end, !dbg !7114

if.then:                                          ; preds = %entry
  store i32 0, i32* %startx, align 4, !dbg !7115
  br label %if.end, !dbg !7116

if.end:                                           ; preds = %if.then, %entry
  %13 = load i32, i32* %starty, align 4, !dbg !7117
  %cmp9 = icmp slt i32 %13, 0, !dbg !7119
  br i1 %cmp9, label %if.then11, label %if.end12, !dbg !7120

if.then11:                                        ; preds = %if.end
  store i32 0, i32* %starty, align 4, !dbg !7121
  br label %if.end12, !dbg !7122

if.end12:                                         ; preds = %if.then11, %if.end
  %14 = load i32, i32* %endx, align 4, !dbg !7123
  %15 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !7125
  %x13 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %15, i32 0, i32 2, !dbg !7126
  %16 = load i32, i32* %x13, align 8, !dbg !7126
  %cmp14 = icmp sge i32 %14, %16, !dbg !7127
  br i1 %cmp14, label %if.then16, label %if.end18, !dbg !7128

if.then16:                                        ; preds = %if.end12
  %17 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !7129
  %x17 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %17, i32 0, i32 2, !dbg !7130
  %18 = load i32, i32* %x17, align 8, !dbg !7130
  %sub = sub nsw i32 %18, 1, !dbg !7131
  store i32 %sub, i32* %endx, align 4, !dbg !7132
  br label %if.end18, !dbg !7133

if.end18:                                         ; preds = %if.then16, %if.end12
  %19 = load i32, i32* %endy, align 4, !dbg !7134
  %20 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !7136
  %y19 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %20, i32 0, i32 3, !dbg !7137
  %21 = load i32, i32* %y19, align 4, !dbg !7137
  %cmp20 = icmp sge i32 %19, %21, !dbg !7138
  br i1 %cmp20, label %if.then22, label %if.end25, !dbg !7139

if.then22:                                        ; preds = %if.end18
  %22 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !7140
  %y23 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %22, i32 0, i32 3, !dbg !7141
  %23 = load i32, i32* %y23, align 4, !dbg !7141
  %sub24 = sub nsw i32 %23, 1, !dbg !7142
  store i32 %sub24, i32* %endy, align 4, !dbg !7143
  br label %if.end25, !dbg !7144

if.end25:                                         ; preds = %if.then22, %if.end18
  %24 = load i32, i32* %starty, align 4, !dbg !7145
  %25 = load i32, i32* %endy, align 4, !dbg !7147
  %cmp26 = icmp eq i32 %24, %25, !dbg !7148
  br i1 %cmp26, label %land.lhs.true, label %if.else, !dbg !7149

land.lhs.true:                                    ; preds = %if.end25
  %26 = load i32, i32* %startx, align 4, !dbg !7150
  %27 = load i32, i32* %endx, align 4, !dbg !7151
  %cmp28 = icmp eq i32 %26, %27, !dbg !7152
  br i1 %cmp28, label %if.then30, label %if.else, !dbg !7153

if.then30:                                        ; preds = %land.lhs.true
  %28 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !7154
  %tr = getelementptr inbounds %struct.TexResult, %struct.TexResult* %28, i32 0, i32 1, !dbg !7156
  %29 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !7157
  %30 = load i32, i32* %startx, align 4, !dbg !7158
  %31 = load i32, i32* %starty, align 4, !dbg !7159
  call void @ibuf_get_color(float* %tr, %struct.ImBuf* %29, i32 %30, i32 %31), !dbg !7160
  br label %if.end151, !dbg !7161

if.else:                                          ; preds = %land.lhs.true, %if.end25
  %32 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !7162
  %ta = getelementptr inbounds %struct.TexResult, %struct.TexResult* %32, i32 0, i32 4, !dbg !7164
  store float 0.000000e+00, float* %ta, align 8, !dbg !7165
  %33 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !7166
  %tb = getelementptr inbounds %struct.TexResult, %struct.TexResult* %33, i32 0, i32 3, !dbg !7167
  store float 0.000000e+00, float* %tb, align 4, !dbg !7168
  %34 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !7169
  %tg = getelementptr inbounds %struct.TexResult, %struct.TexResult* %34, i32 0, i32 2, !dbg !7170
  store float 0.000000e+00, float* %tg, align 8, !dbg !7171
  %35 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !7172
  %tr31 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %35, i32 0, i32 1, !dbg !7173
  store float 0.000000e+00, float* %tr31, align 4, !dbg !7174
  store float 0.000000e+00, float* %div, align 4, !dbg !7175
  %36 = load i32, i32* %starty, align 4, !dbg !7176
  store i32 %36, i32* %y, align 4, !dbg !7178
  br label %for.cond, !dbg !7179

for.cond:                                         ; preds = %for.inc130, %if.else
  %37 = load i32, i32* %y, align 4, !dbg !7180
  %38 = load i32, i32* %endy, align 4, !dbg !7182
  %cmp32 = icmp sle i32 %37, %38, !dbg !7183
  br i1 %cmp32, label %for.body, label %for.end132, !dbg !7184

for.body:                                         ; preds = %for.cond
  store float 1.000000e+00, float* %muly, align 4, !dbg !7185
  %39 = load i32, i32* %starty, align 4, !dbg !7187
  %40 = load i32, i32* %endy, align 4, !dbg !7189
  %cmp34 = icmp eq i32 %39, %40, !dbg !7190
  br i1 %cmp34, label %if.then36, label %if.else37, !dbg !7191

if.then36:                                        ; preds = %for.body
  br label %if.end53, !dbg !7192

if.else37:                                        ; preds = %for.body
  %41 = load i32, i32* %y, align 4, !dbg !7194
  %42 = load i32, i32* %starty, align 4, !dbg !7197
  %cmp38 = icmp eq i32 %41, %42, !dbg !7198
  br i1 %cmp38, label %if.then40, label %if.end45, !dbg !7199

if.then40:                                        ; preds = %if.else37
  %43 = load %struct.rctf*, %struct.rctf** %rf.addr, align 8, !dbg !7200
  %ymin41 = getelementptr inbounds %struct.rctf, %struct.rctf* %43, i32 0, i32 2, !dbg !7201
  %44 = load float, float* %ymin41, align 4, !dbg !7201
  %45 = load i32, i32* %y, align 4, !dbg !7202
  %conv42 = sitofp i32 %45 to float, !dbg !7202
  %sub43 = fsub float %44, %conv42, !dbg !7203
  %sub44 = fsub float 1.000000e+00, %sub43, !dbg !7204
  store float %sub44, float* %muly, align 4, !dbg !7205
  br label %if.end45, !dbg !7206

if.end45:                                         ; preds = %if.then40, %if.else37
  %46 = load i32, i32* %y, align 4, !dbg !7207
  %47 = load i32, i32* %endy, align 4, !dbg !7209
  %cmp46 = icmp eq i32 %46, %47, !dbg !7210
  br i1 %cmp46, label %if.then48, label %if.end52, !dbg !7211

if.then48:                                        ; preds = %if.end45
  %48 = load %struct.rctf*, %struct.rctf** %rf.addr, align 8, !dbg !7212
  %ymax49 = getelementptr inbounds %struct.rctf, %struct.rctf* %48, i32 0, i32 3, !dbg !7213
  %49 = load float, float* %ymax49, align 4, !dbg !7213
  %50 = load i32, i32* %y, align 4, !dbg !7214
  %conv50 = sitofp i32 %50 to float, !dbg !7214
  %sub51 = fsub float %49, %conv50, !dbg !7215
  store float %sub51, float* %muly, align 4, !dbg !7216
  br label %if.end52, !dbg !7217

if.end52:                                         ; preds = %if.then48, %if.end45
  br label %if.end53

if.end53:                                         ; preds = %if.end52, %if.then36
  %51 = load i32, i32* %startx, align 4, !dbg !7218
  %52 = load i32, i32* %endx, align 4, !dbg !7220
  %cmp54 = icmp eq i32 %51, %52, !dbg !7221
  br i1 %cmp54, label %if.then56, label %if.else71, !dbg !7222

if.then56:                                        ; preds = %if.end53
  %53 = load float, float* %muly, align 4, !dbg !7223
  store float %53, float* %mulx, align 4, !dbg !7225
  %arraydecay = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 0, !dbg !7226
  %54 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !7227
  %55 = load i32, i32* %startx, align 4, !dbg !7228
  %56 = load i32, i32* %y, align 4, !dbg !7229
  call void @ibuf_get_color(float* %arraydecay, %struct.ImBuf* %54, i32 %55, i32 %56), !dbg !7230
  %57 = load float, float* %mulx, align 4, !dbg !7231
  %arrayidx = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 3, !dbg !7232
  %58 = load float, float* %arrayidx, align 4, !dbg !7232
  %mul = fmul float %57, %58, !dbg !7233
  %59 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !7234
  %ta57 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %59, i32 0, i32 4, !dbg !7235
  %60 = load float, float* %ta57, align 8, !dbg !7236
  %add = fadd float %60, %mul, !dbg !7236
  store float %add, float* %ta57, align 8, !dbg !7236
  %61 = load float, float* %mulx, align 4, !dbg !7237
  %arrayidx58 = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 0, !dbg !7238
  %62 = load float, float* %arrayidx58, align 16, !dbg !7238
  %mul59 = fmul float %61, %62, !dbg !7239
  %63 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !7240
  %tr60 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %63, i32 0, i32 1, !dbg !7241
  %64 = load float, float* %tr60, align 4, !dbg !7242
  %add61 = fadd float %64, %mul59, !dbg !7242
  store float %add61, float* %tr60, align 4, !dbg !7242
  %65 = load float, float* %mulx, align 4, !dbg !7243
  %arrayidx62 = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 1, !dbg !7244
  %66 = load float, float* %arrayidx62, align 4, !dbg !7244
  %mul63 = fmul float %65, %66, !dbg !7245
  %67 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !7246
  %tg64 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %67, i32 0, i32 2, !dbg !7247
  %68 = load float, float* %tg64, align 8, !dbg !7248
  %add65 = fadd float %68, %mul63, !dbg !7248
  store float %add65, float* %tg64, align 8, !dbg !7248
  %69 = load float, float* %mulx, align 4, !dbg !7249
  %arrayidx66 = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 2, !dbg !7250
  %70 = load float, float* %arrayidx66, align 8, !dbg !7250
  %mul67 = fmul float %69, %70, !dbg !7251
  %71 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !7252
  %tb68 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %71, i32 0, i32 3, !dbg !7253
  %72 = load float, float* %tb68, align 4, !dbg !7254
  %add69 = fadd float %72, %mul67, !dbg !7254
  store float %add69, float* %tb68, align 4, !dbg !7254
  %73 = load float, float* %mulx, align 4, !dbg !7255
  %74 = load float, float* %div, align 4, !dbg !7256
  %add70 = fadd float %74, %73, !dbg !7256
  store float %add70, float* %div, align 4, !dbg !7256
  br label %if.end129, !dbg !7257

if.else71:                                        ; preds = %if.end53
  %75 = load i32, i32* %startx, align 4, !dbg !7258
  store i32 %75, i32* %x, align 4, !dbg !7261
  br label %for.cond72, !dbg !7262

for.cond72:                                       ; preds = %for.inc, %if.else71
  %76 = load i32, i32* %x, align 4, !dbg !7263
  %77 = load i32, i32* %endx, align 4, !dbg !7265
  %cmp73 = icmp sle i32 %76, %77, !dbg !7266
  br i1 %cmp73, label %for.body75, label %for.end, !dbg !7267

for.body75:                                       ; preds = %for.cond72
  %78 = load float, float* %muly, align 4, !dbg !7268
  store float %78, float* %mulx, align 4, !dbg !7270
  %79 = load i32, i32* %x, align 4, !dbg !7271
  %80 = load i32, i32* %startx, align 4, !dbg !7273
  %cmp76 = icmp eq i32 %79, %80, !dbg !7274
  br i1 %cmp76, label %if.then78, label %if.end84, !dbg !7275

if.then78:                                        ; preds = %for.body75
  %81 = load %struct.rctf*, %struct.rctf** %rf.addr, align 8, !dbg !7276
  %xmin79 = getelementptr inbounds %struct.rctf, %struct.rctf* %81, i32 0, i32 0, !dbg !7277
  %82 = load float, float* %xmin79, align 4, !dbg !7277
  %83 = load i32, i32* %x, align 4, !dbg !7278
  %conv80 = sitofp i32 %83 to float, !dbg !7278
  %sub81 = fsub float %82, %conv80, !dbg !7279
  %sub82 = fsub float 1.000000e+00, %sub81, !dbg !7280
  %84 = load float, float* %mulx, align 4, !dbg !7281
  %mul83 = fmul float %84, %sub82, !dbg !7281
  store float %mul83, float* %mulx, align 4, !dbg !7281
  br label %if.end84, !dbg !7282

if.end84:                                         ; preds = %if.then78, %for.body75
  %85 = load i32, i32* %x, align 4, !dbg !7283
  %86 = load i32, i32* %endx, align 4, !dbg !7285
  %cmp85 = icmp eq i32 %85, %86, !dbg !7286
  br i1 %cmp85, label %if.then87, label %if.end92, !dbg !7287

if.then87:                                        ; preds = %if.end84
  %87 = load %struct.rctf*, %struct.rctf** %rf.addr, align 8, !dbg !7288
  %xmax88 = getelementptr inbounds %struct.rctf, %struct.rctf* %87, i32 0, i32 1, !dbg !7289
  %88 = load float, float* %xmax88, align 4, !dbg !7289
  %89 = load i32, i32* %x, align 4, !dbg !7290
  %conv89 = sitofp i32 %89 to float, !dbg !7290
  %sub90 = fsub float %88, %conv89, !dbg !7291
  %90 = load float, float* %mulx, align 4, !dbg !7292
  %mul91 = fmul float %90, %sub90, !dbg !7292
  store float %mul91, float* %mulx, align 4, !dbg !7292
  br label %if.end92, !dbg !7293

if.end92:                                         ; preds = %if.then87, %if.end84
  %arraydecay93 = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 0, !dbg !7294
  %91 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !7295
  %92 = load i32, i32* %x, align 4, !dbg !7296
  %93 = load i32, i32* %y, align 4, !dbg !7297
  call void @ibuf_get_color(float* %arraydecay93, %struct.ImBuf* %91, i32 %92, i32 %93), !dbg !7298
  %94 = load float, float* %mulx, align 4, !dbg !7299
  %cmp94 = fcmp oeq float %94, 1.000000e+00, !dbg !7301
  br i1 %cmp94, label %if.then96, label %if.else110, !dbg !7302

if.then96:                                        ; preds = %if.end92
  %arrayidx97 = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 3, !dbg !7303
  %95 = load float, float* %arrayidx97, align 4, !dbg !7303
  %96 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !7305
  %ta98 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %96, i32 0, i32 4, !dbg !7306
  %97 = load float, float* %ta98, align 8, !dbg !7307
  %add99 = fadd float %97, %95, !dbg !7307
  store float %add99, float* %ta98, align 8, !dbg !7307
  %arrayidx100 = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 0, !dbg !7308
  %98 = load float, float* %arrayidx100, align 16, !dbg !7308
  %99 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !7309
  %tr101 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %99, i32 0, i32 1, !dbg !7310
  %100 = load float, float* %tr101, align 4, !dbg !7311
  %add102 = fadd float %100, %98, !dbg !7311
  store float %add102, float* %tr101, align 4, !dbg !7311
  %arrayidx103 = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 1, !dbg !7312
  %101 = load float, float* %arrayidx103, align 4, !dbg !7312
  %102 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !7313
  %tg104 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %102, i32 0, i32 2, !dbg !7314
  %103 = load float, float* %tg104, align 8, !dbg !7315
  %add105 = fadd float %103, %101, !dbg !7315
  store float %add105, float* %tg104, align 8, !dbg !7315
  %arrayidx106 = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 2, !dbg !7316
  %104 = load float, float* %arrayidx106, align 8, !dbg !7316
  %105 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !7317
  %tb107 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %105, i32 0, i32 3, !dbg !7318
  %106 = load float, float* %tb107, align 4, !dbg !7319
  %add108 = fadd float %106, %104, !dbg !7319
  store float %add108, float* %tb107, align 4, !dbg !7319
  %107 = load float, float* %div, align 4, !dbg !7320
  %add109 = fadd float %107, 1.000000e+00, !dbg !7320
  store float %add109, float* %div, align 4, !dbg !7320
  br label %if.end128, !dbg !7321

if.else110:                                       ; preds = %if.end92
  %108 = load float, float* %mulx, align 4, !dbg !7322
  %arrayidx111 = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 3, !dbg !7324
  %109 = load float, float* %arrayidx111, align 4, !dbg !7324
  %mul112 = fmul float %108, %109, !dbg !7325
  %110 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !7326
  %ta113 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %110, i32 0, i32 4, !dbg !7327
  %111 = load float, float* %ta113, align 8, !dbg !7328
  %add114 = fadd float %111, %mul112, !dbg !7328
  store float %add114, float* %ta113, align 8, !dbg !7328
  %112 = load float, float* %mulx, align 4, !dbg !7329
  %arrayidx115 = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 0, !dbg !7330
  %113 = load float, float* %arrayidx115, align 16, !dbg !7330
  %mul116 = fmul float %112, %113, !dbg !7331
  %114 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !7332
  %tr117 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %114, i32 0, i32 1, !dbg !7333
  %115 = load float, float* %tr117, align 4, !dbg !7334
  %add118 = fadd float %115, %mul116, !dbg !7334
  store float %add118, float* %tr117, align 4, !dbg !7334
  %116 = load float, float* %mulx, align 4, !dbg !7335
  %arrayidx119 = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 1, !dbg !7336
  %117 = load float, float* %arrayidx119, align 4, !dbg !7336
  %mul120 = fmul float %116, %117, !dbg !7337
  %118 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !7338
  %tg121 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %118, i32 0, i32 2, !dbg !7339
  %119 = load float, float* %tg121, align 8, !dbg !7340
  %add122 = fadd float %119, %mul120, !dbg !7340
  store float %add122, float* %tg121, align 8, !dbg !7340
  %120 = load float, float* %mulx, align 4, !dbg !7341
  %arrayidx123 = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 2, !dbg !7342
  %121 = load float, float* %arrayidx123, align 8, !dbg !7342
  %mul124 = fmul float %120, %121, !dbg !7343
  %122 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !7344
  %tb125 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %122, i32 0, i32 3, !dbg !7345
  %123 = load float, float* %tb125, align 4, !dbg !7346
  %add126 = fadd float %123, %mul124, !dbg !7346
  store float %add126, float* %tb125, align 4, !dbg !7346
  %124 = load float, float* %mulx, align 4, !dbg !7347
  %125 = load float, float* %div, align 4, !dbg !7348
  %add127 = fadd float %125, %124, !dbg !7348
  store float %add127, float* %div, align 4, !dbg !7348
  br label %if.end128

if.end128:                                        ; preds = %if.else110, %if.then96
  br label %for.inc, !dbg !7349

for.inc:                                          ; preds = %if.end128
  %126 = load i32, i32* %x, align 4, !dbg !7350
  %inc = add nsw i32 %126, 1, !dbg !7350
  store i32 %inc, i32* %x, align 4, !dbg !7350
  br label %for.cond72, !dbg !7351, !llvm.loop !7352

for.end:                                          ; preds = %for.cond72
  br label %if.end129

if.end129:                                        ; preds = %for.end, %if.then56
  br label %for.inc130, !dbg !7354

for.inc130:                                       ; preds = %if.end129
  %127 = load i32, i32* %y, align 4, !dbg !7355
  %inc131 = add nsw i32 %127, 1, !dbg !7355
  store i32 %inc131, i32* %y, align 4, !dbg !7355
  br label %for.cond, !dbg !7356, !llvm.loop !7357

for.end132:                                       ; preds = %for.cond
  %128 = load float, float* %div, align 4, !dbg !7359
  %cmp133 = fcmp une float %128, 0.000000e+00, !dbg !7361
  br i1 %cmp133, label %if.then135, label %if.else145, !dbg !7362

if.then135:                                       ; preds = %for.end132
  %129 = load float, float* %div, align 4, !dbg !7363
  %div136 = fdiv float 1.000000e+00, %129, !dbg !7365
  store float %div136, float* %div, align 4, !dbg !7366
  %130 = load float, float* %div, align 4, !dbg !7367
  %131 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !7368
  %tb137 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %131, i32 0, i32 3, !dbg !7369
  %132 = load float, float* %tb137, align 4, !dbg !7370
  %mul138 = fmul float %132, %130, !dbg !7370
  store float %mul138, float* %tb137, align 4, !dbg !7370
  %133 = load float, float* %div, align 4, !dbg !7371
  %134 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !7372
  %tg139 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %134, i32 0, i32 2, !dbg !7373
  %135 = load float, float* %tg139, align 8, !dbg !7374
  %mul140 = fmul float %135, %133, !dbg !7374
  store float %mul140, float* %tg139, align 8, !dbg !7374
  %136 = load float, float* %div, align 4, !dbg !7375
  %137 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !7376
  %tr141 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %137, i32 0, i32 1, !dbg !7377
  %138 = load float, float* %tr141, align 4, !dbg !7378
  %mul142 = fmul float %138, %136, !dbg !7378
  store float %mul142, float* %tr141, align 4, !dbg !7378
  %139 = load float, float* %div, align 4, !dbg !7379
  %140 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !7380
  %ta143 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %140, i32 0, i32 4, !dbg !7381
  %141 = load float, float* %ta143, align 8, !dbg !7382
  %mul144 = fmul float %141, %139, !dbg !7382
  store float %mul144, float* %ta143, align 8, !dbg !7382
  br label %if.end150, !dbg !7383

if.else145:                                       ; preds = %for.end132
  %142 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !7384
  %ta146 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %142, i32 0, i32 4, !dbg !7386
  store float 0.000000e+00, float* %ta146, align 8, !dbg !7387
  %143 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !7388
  %tb147 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %143, i32 0, i32 3, !dbg !7389
  store float 0.000000e+00, float* %tb147, align 4, !dbg !7390
  %144 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !7391
  %tg148 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %144, i32 0, i32 2, !dbg !7392
  store float 0.000000e+00, float* %tg148, align 8, !dbg !7393
  %145 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !7394
  %tr149 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %145, i32 0, i32 1, !dbg !7395
  store float 0.000000e+00, float* %tr149, align 4, !dbg !7396
  br label %if.end150

if.end150:                                        ; preds = %if.else145, %if.then135
  br label %if.end151

if.end151:                                        ; preds = %if.end150, %if.then30
  ret void, !dbg !7397
}

; Function Attrs: noinline nounwind uwtable
define internal float @square_rctf(%struct.rctf* %rf) #0 !dbg !7398 {
entry:
  %rf.addr = alloca %struct.rctf*, align 8
  %x = alloca float, align 4
  %y = alloca float, align 4
  store %struct.rctf* %rf, %struct.rctf** %rf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rctf** %rf.addr, metadata !7401, metadata !DIExpression()), !dbg !7402
  call void @llvm.dbg.declare(metadata float* %x, metadata !7403, metadata !DIExpression()), !dbg !7404
  call void @llvm.dbg.declare(metadata float* %y, metadata !7405, metadata !DIExpression()), !dbg !7406
  %0 = load %struct.rctf*, %struct.rctf** %rf.addr, align 8, !dbg !7407
  %call = call float @BLI_rctf_size_x(%struct.rctf* %0), !dbg !7408
  store float %call, float* %x, align 4, !dbg !7409
  %1 = load %struct.rctf*, %struct.rctf** %rf.addr, align 8, !dbg !7410
  %call1 = call float @BLI_rctf_size_y(%struct.rctf* %1), !dbg !7411
  store float %call1, float* %y, align 4, !dbg !7412
  %2 = load float, float* %x, align 4, !dbg !7413
  %3 = load float, float* %y, align 4, !dbg !7414
  %mul = fmul float %2, %3, !dbg !7415
  ret float %mul, !dbg !7416
}

; Function Attrs: noinline nounwind uwtable
define internal float @BLI_rctf_size_x(%struct.rctf* %rct) #0 !dbg !7417 {
entry:
  %rct.addr = alloca %struct.rctf*, align 8
  store %struct.rctf* %rct, %struct.rctf** %rct.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rctf** %rct.addr, metadata !7423, metadata !DIExpression()), !dbg !7424
  %0 = load %struct.rctf*, %struct.rctf** %rct.addr, align 8, !dbg !7425
  %xmax = getelementptr inbounds %struct.rctf, %struct.rctf* %0, i32 0, i32 1, !dbg !7426
  %1 = load float, float* %xmax, align 4, !dbg !7426
  %2 = load %struct.rctf*, %struct.rctf** %rct.addr, align 8, !dbg !7427
  %xmin = getelementptr inbounds %struct.rctf, %struct.rctf* %2, i32 0, i32 0, !dbg !7428
  %3 = load float, float* %xmin, align 4, !dbg !7428
  %sub = fsub float %1, %3, !dbg !7429
  ret float %sub, !dbg !7430
}

; Function Attrs: noinline nounwind uwtable
define internal float @BLI_rctf_size_y(%struct.rctf* %rct) #0 !dbg !7431 {
entry:
  %rct.addr = alloca %struct.rctf*, align 8
  store %struct.rctf* %rct, %struct.rctf** %rct.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rctf** %rct.addr, metadata !7432, metadata !DIExpression()), !dbg !7433
  %0 = load %struct.rctf*, %struct.rctf** %rct.addr, align 8, !dbg !7434
  %ymax = getelementptr inbounds %struct.rctf, %struct.rctf* %0, i32 0, i32 3, !dbg !7435
  %1 = load float, float* %ymax, align 4, !dbg !7435
  %2 = load %struct.rctf*, %struct.rctf** %rct.addr, align 8, !dbg !7436
  %ymin = getelementptr inbounds %struct.rctf, %struct.rctf* %2, i32 0, i32 2, !dbg !7437
  %3 = load float, float* %ymin, align 4, !dbg !7437
  %sub = fsub float %1, %3, !dbg !7438
  ret float %sub, !dbg !7439
}

; Function Attrs: noinline nounwind uwtable
define internal void @feline_eval(%struct.TexResult* %texr, %struct.ImBuf* %ibuf, float %fx, float %fy, %struct.afdata_t* %AFD) #0 !dbg !7440 {
entry:
  %texr.addr = alloca %struct.TexResult*, align 8
  %ibuf.addr = alloca %struct.ImBuf*, align 8
  %fx.addr = alloca float, align 4
  %fy.addr = alloca float, align 4
  %AFD.addr = alloca %struct.afdata_t*, align 8
  %maxn = alloca i32, align 4
  %ll = alloca float, align 4
  %du = alloca float, align 4
  %dv = alloca float, align 4
  %D = alloca float, align 4
  %d = alloca float, align 4
  %n = alloca i32, align 4
  %tc = alloca [4 x float], align 16
  %hn = alloca float, align 4
  %u = alloca float, align 4
  %v = alloca float, align 4
  %wt = alloca float, align 4
  store %struct.TexResult* %texr, %struct.TexResult** %texr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TexResult** %texr.addr, metadata !7441, metadata !DIExpression()), !dbg !7442
  store %struct.ImBuf* %ibuf, %struct.ImBuf** %ibuf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf.addr, metadata !7443, metadata !DIExpression()), !dbg !7444
  store float %fx, float* %fx.addr, align 4
  call void @llvm.dbg.declare(metadata float* %fx.addr, metadata !7445, metadata !DIExpression()), !dbg !7446
  store float %fy, float* %fy.addr, align 4
  call void @llvm.dbg.declare(metadata float* %fy.addr, metadata !7447, metadata !DIExpression()), !dbg !7448
  store %struct.afdata_t* %AFD, %struct.afdata_t** %AFD.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.afdata_t** %AFD.addr, metadata !7449, metadata !DIExpression()), !dbg !7450
  call void @llvm.dbg.declare(metadata i32* %maxn, metadata !7451, metadata !DIExpression()), !dbg !7452
  %0 = load %struct.afdata_t*, %struct.afdata_t** %AFD.addr, align 8, !dbg !7453
  %iProbes = getelementptr inbounds %struct.afdata_t, %struct.afdata_t* %0, i32 0, i32 7, !dbg !7454
  %1 = load i32, i32* %iProbes, align 4, !dbg !7454
  %sub = sub nsw i32 %1, 1, !dbg !7455
  store i32 %sub, i32* %maxn, align 4, !dbg !7452
  call void @llvm.dbg.declare(metadata float* %ll, metadata !7456, metadata !DIExpression()), !dbg !7457
  %2 = load %struct.afdata_t*, %struct.afdata_t** %AFD.addr, align 8, !dbg !7458
  %majrad = getelementptr inbounds %struct.afdata_t, %struct.afdata_t* %2, i32 0, i32 4, !dbg !7459
  %3 = load float, float* %majrad, align 4, !dbg !7459
  %4 = load %struct.afdata_t*, %struct.afdata_t** %AFD.addr, align 8, !dbg !7460
  %minrad = getelementptr inbounds %struct.afdata_t, %struct.afdata_t* %4, i32 0, i32 5, !dbg !7461
  %5 = load float, float* %minrad, align 4, !dbg !7461
  %cmp = fcmp oeq float %3, %5, !dbg !7462
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !7463

cond.true:                                        ; preds = %entry
  %6 = load %struct.afdata_t*, %struct.afdata_t** %AFD.addr, align 8, !dbg !7464
  %majrad1 = getelementptr inbounds %struct.afdata_t, %struct.afdata_t* %6, i32 0, i32 4, !dbg !7465
  %7 = load float, float* %majrad1, align 4, !dbg !7465
  %mul = fmul float 2.000000e+00, %7, !dbg !7466
  br label %cond.end, !dbg !7463

cond.false:                                       ; preds = %entry
  %8 = load %struct.afdata_t*, %struct.afdata_t** %AFD.addr, align 8, !dbg !7467
  %majrad2 = getelementptr inbounds %struct.afdata_t, %struct.afdata_t* %8, i32 0, i32 4, !dbg !7468
  %9 = load float, float* %majrad2, align 4, !dbg !7468
  %10 = load %struct.afdata_t*, %struct.afdata_t** %AFD.addr, align 8, !dbg !7469
  %minrad3 = getelementptr inbounds %struct.afdata_t, %struct.afdata_t* %10, i32 0, i32 5, !dbg !7470
  %11 = load float, float* %minrad3, align 4, !dbg !7470
  %sub4 = fsub float %9, %11, !dbg !7471
  %mul5 = fmul float 2.000000e+00, %sub4, !dbg !7472
  br label %cond.end, !dbg !7463

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %mul, %cond.true ], [ %mul5, %cond.false ], !dbg !7463
  %12 = load i32, i32* %maxn, align 4, !dbg !7473
  %tobool = icmp ne i32 %12, 0, !dbg !7473
  br i1 %tobool, label %cond.true6, label %cond.false7, !dbg !7473

cond.true6:                                       ; preds = %cond.end
  %13 = load i32, i32* %maxn, align 4, !dbg !7474
  %conv = sitofp i32 %13 to float, !dbg !7475
  br label %cond.end8, !dbg !7473

cond.false7:                                      ; preds = %cond.end
  br label %cond.end8, !dbg !7473

cond.end8:                                        ; preds = %cond.false7, %cond.true6
  %cond9 = phi float [ %conv, %cond.true6 ], [ 1.000000e+00, %cond.false7 ], !dbg !7473
  %div = fdiv float %cond, %cond9, !dbg !7476
  store float %div, float* %ll, align 4, !dbg !7457
  call void @llvm.dbg.declare(metadata float* %du, metadata !7477, metadata !DIExpression()), !dbg !7478
  %14 = load i32, i32* %maxn, align 4, !dbg !7479
  %tobool10 = icmp ne i32 %14, 0, !dbg !7479
  br i1 %tobool10, label %cond.true11, label %cond.false13, !dbg !7479

cond.true11:                                      ; preds = %cond.end8
  %15 = load %struct.afdata_t*, %struct.afdata_t** %AFD.addr, align 8, !dbg !7480
  %theta = getelementptr inbounds %struct.afdata_t, %struct.afdata_t* %15, i32 0, i32 6, !dbg !7481
  %16 = load float, float* %theta, align 4, !dbg !7481
  %call = call float @cosf(float %16) #5, !dbg !7482
  %17 = load float, float* %ll, align 4, !dbg !7483
  %mul12 = fmul float %call, %17, !dbg !7484
  br label %cond.end14, !dbg !7479

cond.false13:                                     ; preds = %cond.end8
  br label %cond.end14, !dbg !7479

cond.end14:                                       ; preds = %cond.false13, %cond.true11
  %cond15 = phi float [ %mul12, %cond.true11 ], [ 0.000000e+00, %cond.false13 ], !dbg !7479
  store float %cond15, float* %du, align 4, !dbg !7478
  call void @llvm.dbg.declare(metadata float* %dv, metadata !7485, metadata !DIExpression()), !dbg !7486
  %18 = load i32, i32* %maxn, align 4, !dbg !7487
  %tobool16 = icmp ne i32 %18, 0, !dbg !7487
  br i1 %tobool16, label %cond.true17, label %cond.false21, !dbg !7487

cond.true17:                                      ; preds = %cond.end14
  %19 = load %struct.afdata_t*, %struct.afdata_t** %AFD.addr, align 8, !dbg !7488
  %theta18 = getelementptr inbounds %struct.afdata_t, %struct.afdata_t* %19, i32 0, i32 6, !dbg !7489
  %20 = load float, float* %theta18, align 4, !dbg !7489
  %call19 = call float @sinf(float %20) #5, !dbg !7490
  %21 = load float, float* %ll, align 4, !dbg !7491
  %mul20 = fmul float %call19, %21, !dbg !7492
  br label %cond.end22, !dbg !7487

cond.false21:                                     ; preds = %cond.end14
  br label %cond.end22, !dbg !7487

cond.end22:                                       ; preds = %cond.false21, %cond.true17
  %cond23 = phi float [ %mul20, %cond.true17 ], [ 0.000000e+00, %cond.false21 ], !dbg !7487
  store float %cond23, float* %dv, align 4, !dbg !7486
  call void @llvm.dbg.declare(metadata float* %D, metadata !7493, metadata !DIExpression()), !dbg !7494
  %22 = load float, float* %du, align 4, !dbg !7495
  %23 = load float, float* %du, align 4, !dbg !7496
  %mul24 = fmul float %22, %23, !dbg !7497
  %24 = load float, float* %dv, align 4, !dbg !7498
  %25 = load float, float* %dv, align 4, !dbg !7499
  %mul25 = fmul float %24, %25, !dbg !7500
  %add = fadd float %mul24, %mul25, !dbg !7501
  %mul26 = fmul float 6.400000e+01, %add, !dbg !7502
  %26 = load %struct.afdata_t*, %struct.afdata_t** %AFD.addr, align 8, !dbg !7503
  %majrad27 = getelementptr inbounds %struct.afdata_t, %struct.afdata_t* %26, i32 0, i32 4, !dbg !7504
  %27 = load float, float* %majrad27, align 4, !dbg !7504
  %28 = load %struct.afdata_t*, %struct.afdata_t** %AFD.addr, align 8, !dbg !7505
  %majrad28 = getelementptr inbounds %struct.afdata_t, %struct.afdata_t* %28, i32 0, i32 4, !dbg !7506
  %29 = load float, float* %majrad28, align 4, !dbg !7506
  %mul29 = fmul float %27, %29, !dbg !7507
  %div30 = fdiv float %mul26, %mul29, !dbg !7508
  store float %div30, float* %D, align 4, !dbg !7494
  call void @llvm.dbg.declare(metadata float* %d, metadata !7509, metadata !DIExpression()), !dbg !7510
  call void @llvm.dbg.declare(metadata i32* %n, metadata !7511, metadata !DIExpression()), !dbg !7512
  %30 = load %struct.afdata_t*, %struct.afdata_t** %AFD.addr, align 8, !dbg !7513
  %dusc = getelementptr inbounds %struct.afdata_t, %struct.afdata_t* %30, i32 0, i32 8, !dbg !7514
  %31 = load float, float* %dusc, align 4, !dbg !7514
  %32 = load float, float* %du, align 4, !dbg !7515
  %mul31 = fmul float %32, %31, !dbg !7515
  store float %mul31, float* %du, align 4, !dbg !7515
  %33 = load %struct.afdata_t*, %struct.afdata_t** %AFD.addr, align 8, !dbg !7516
  %dvsc = getelementptr inbounds %struct.afdata_t, %struct.afdata_t* %33, i32 0, i32 9, !dbg !7517
  %34 = load float, float* %dvsc, align 4, !dbg !7517
  %35 = load float, float* %dv, align 4, !dbg !7518
  %mul32 = fmul float %35, %34, !dbg !7518
  store float %mul32, float* %dv, align 4, !dbg !7518
  %36 = load %struct.TexResult*, %struct.TexResult** %texr.addr, align 8, !dbg !7519
  %ta = getelementptr inbounds %struct.TexResult, %struct.TexResult* %36, i32 0, i32 4, !dbg !7520
  store float 0.000000e+00, float* %ta, align 8, !dbg !7521
  %37 = load %struct.TexResult*, %struct.TexResult** %texr.addr, align 8, !dbg !7522
  %tg = getelementptr inbounds %struct.TexResult, %struct.TexResult* %37, i32 0, i32 2, !dbg !7523
  store float 0.000000e+00, float* %tg, align 8, !dbg !7524
  %38 = load %struct.TexResult*, %struct.TexResult** %texr.addr, align 8, !dbg !7525
  %tb = getelementptr inbounds %struct.TexResult, %struct.TexResult* %38, i32 0, i32 3, !dbg !7526
  store float 0.000000e+00, float* %tb, align 4, !dbg !7527
  %39 = load %struct.TexResult*, %struct.TexResult** %texr.addr, align 8, !dbg !7528
  %tr = getelementptr inbounds %struct.TexResult, %struct.TexResult* %39, i32 0, i32 1, !dbg !7529
  store float 0.000000e+00, float* %tr, align 4, !dbg !7530
  store float 0.000000e+00, float* %d, align 4, !dbg !7531
  %40 = load i32, i32* %maxn, align 4, !dbg !7532
  %sub33 = sub nsw i32 0, %40, !dbg !7534
  store i32 %sub33, i32* %n, align 4, !dbg !7535
  br label %for.cond, !dbg !7536

for.cond:                                         ; preds = %for.inc, %cond.end22
  %41 = load i32, i32* %n, align 4, !dbg !7537
  %42 = load i32, i32* %maxn, align 4, !dbg !7539
  %cmp34 = icmp sle i32 %41, %42, !dbg !7540
  br i1 %cmp34, label %for.body, label %for.end, !dbg !7541

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata [4 x float]* %tc, metadata !7542, metadata !DIExpression()), !dbg !7544
  call void @llvm.dbg.declare(metadata float* %hn, metadata !7545, metadata !DIExpression()), !dbg !7546
  %43 = load i32, i32* %n, align 4, !dbg !7547
  %conv36 = sitofp i32 %43 to float, !dbg !7547
  %mul37 = fmul float %conv36, 5.000000e-01, !dbg !7548
  store float %mul37, float* %hn, align 4, !dbg !7546
  call void @llvm.dbg.declare(metadata float* %u, metadata !7549, metadata !DIExpression()), !dbg !7550
  %44 = load float, float* %fx.addr, align 4, !dbg !7551
  %45 = load float, float* %hn, align 4, !dbg !7552
  %46 = load float, float* %du, align 4, !dbg !7553
  %mul38 = fmul float %45, %46, !dbg !7554
  %add39 = fadd float %44, %mul38, !dbg !7555
  store float %add39, float* %u, align 4, !dbg !7550
  call void @llvm.dbg.declare(metadata float* %v, metadata !7556, metadata !DIExpression()), !dbg !7557
  %47 = load float, float* %fy.addr, align 4, !dbg !7558
  %48 = load float, float* %hn, align 4, !dbg !7559
  %49 = load float, float* %dv, align 4, !dbg !7560
  %mul40 = fmul float %48, %49, !dbg !7561
  %add41 = fadd float %47, %mul40, !dbg !7562
  store float %add41, float* %v, align 4, !dbg !7557
  call void @llvm.dbg.declare(metadata float* %wt, metadata !7563, metadata !DIExpression()), !dbg !7564
  %50 = load i32, i32* %n, align 4, !dbg !7565
  %51 = load i32, i32* %n, align 4, !dbg !7566
  %mul42 = mul nsw i32 %50, %51, !dbg !7567
  %conv43 = sitofp i32 %mul42 to float, !dbg !7565
  %52 = load float, float* %D, align 4, !dbg !7568
  %mul44 = fmul float %conv43, %52, !dbg !7569
  %conv45 = fptosi float %mul44 to i32, !dbg !7570
  %idxprom = sext i32 %conv45 to i64, !dbg !7571
  %arrayidx = getelementptr inbounds [256 x float], [256 x float]* @EWA_WTS, i64 0, i64 %idxprom, !dbg !7571
  %53 = load float, float* %arrayidx, align 4, !dbg !7571
  store float %53, float* %wt, align 4, !dbg !7564
  %arraydecay = getelementptr inbounds [4 x float], [4 x float]* %tc, i64 0, i64 0, !dbg !7572
  %54 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !7573
  %55 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !7574
  %x = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %55, i32 0, i32 2, !dbg !7575
  %56 = load i32, i32* %x, align 8, !dbg !7575
  %conv46 = sitofp i32 %56 to float, !dbg !7574
  %57 = load float, float* %u, align 4, !dbg !7576
  %mul47 = fmul float %conv46, %57, !dbg !7577
  %58 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !7578
  %y = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %58, i32 0, i32 3, !dbg !7579
  %59 = load i32, i32* %y, align 4, !dbg !7579
  %conv48 = sitofp i32 %59 to float, !dbg !7578
  %60 = load float, float* %v, align 4, !dbg !7580
  %mul49 = fmul float %conv48, %60, !dbg !7581
  %61 = load %struct.afdata_t*, %struct.afdata_t** %AFD.addr, align 8, !dbg !7582
  %intpol = getelementptr inbounds %struct.afdata_t, %struct.afdata_t* %61, i32 0, i32 2, !dbg !7583
  %62 = load i32, i32* %intpol, align 4, !dbg !7583
  %63 = load %struct.afdata_t*, %struct.afdata_t** %AFD.addr, align 8, !dbg !7584
  %extflag = getelementptr inbounds %struct.afdata_t, %struct.afdata_t* %63, i32 0, i32 3, !dbg !7585
  %64 = load i32, i32* %extflag, align 4, !dbg !7585
  %call50 = call i32 @ibuf_get_color_clip_bilerp(float* %arraydecay, %struct.ImBuf* %54, float %mul47, float %mul49, i32 %62, i32 %64), !dbg !7586
  %arrayidx51 = getelementptr inbounds [4 x float], [4 x float]* %tc, i64 0, i64 0, !dbg !7587
  %65 = load float, float* %arrayidx51, align 16, !dbg !7587
  %66 = load float, float* %wt, align 4, !dbg !7588
  %mul52 = fmul float %65, %66, !dbg !7589
  %67 = load %struct.TexResult*, %struct.TexResult** %texr.addr, align 8, !dbg !7590
  %tr53 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %67, i32 0, i32 1, !dbg !7591
  %68 = load float, float* %tr53, align 4, !dbg !7592
  %add54 = fadd float %68, %mul52, !dbg !7592
  store float %add54, float* %tr53, align 4, !dbg !7592
  %arrayidx55 = getelementptr inbounds [4 x float], [4 x float]* %tc, i64 0, i64 1, !dbg !7593
  %69 = load float, float* %arrayidx55, align 4, !dbg !7593
  %70 = load float, float* %wt, align 4, !dbg !7594
  %mul56 = fmul float %69, %70, !dbg !7595
  %71 = load %struct.TexResult*, %struct.TexResult** %texr.addr, align 8, !dbg !7596
  %tg57 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %71, i32 0, i32 2, !dbg !7597
  %72 = load float, float* %tg57, align 8, !dbg !7598
  %add58 = fadd float %72, %mul56, !dbg !7598
  store float %add58, float* %tg57, align 8, !dbg !7598
  %arrayidx59 = getelementptr inbounds [4 x float], [4 x float]* %tc, i64 0, i64 2, !dbg !7599
  %73 = load float, float* %arrayidx59, align 8, !dbg !7599
  %74 = load float, float* %wt, align 4, !dbg !7600
  %mul60 = fmul float %73, %74, !dbg !7601
  %75 = load %struct.TexResult*, %struct.TexResult** %texr.addr, align 8, !dbg !7602
  %tb61 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %75, i32 0, i32 3, !dbg !7603
  %76 = load float, float* %tb61, align 4, !dbg !7604
  %add62 = fadd float %76, %mul60, !dbg !7604
  store float %add62, float* %tb61, align 4, !dbg !7604
  %77 = load %struct.TexResult*, %struct.TexResult** %texr.addr, align 8, !dbg !7605
  %talpha = getelementptr inbounds %struct.TexResult, %struct.TexResult* %77, i32 0, i32 5, !dbg !7606
  %78 = load i32, i32* %talpha, align 4, !dbg !7606
  %tobool63 = icmp ne i32 %78, 0, !dbg !7605
  br i1 %tobool63, label %cond.true64, label %cond.false67, !dbg !7605

cond.true64:                                      ; preds = %for.body
  %arrayidx65 = getelementptr inbounds [4 x float], [4 x float]* %tc, i64 0, i64 3, !dbg !7607
  %79 = load float, float* %arrayidx65, align 4, !dbg !7607
  %80 = load float, float* %wt, align 4, !dbg !7608
  %mul66 = fmul float %79, %80, !dbg !7609
  br label %cond.end68, !dbg !7605

cond.false67:                                     ; preds = %for.body
  br label %cond.end68, !dbg !7605

cond.end68:                                       ; preds = %cond.false67, %cond.true64
  %cond69 = phi float [ %mul66, %cond.true64 ], [ 0.000000e+00, %cond.false67 ], !dbg !7605
  %81 = load %struct.TexResult*, %struct.TexResult** %texr.addr, align 8, !dbg !7610
  %ta70 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %81, i32 0, i32 4, !dbg !7611
  %82 = load float, float* %ta70, align 8, !dbg !7612
  %add71 = fadd float %82, %cond69, !dbg !7612
  store float %add71, float* %ta70, align 8, !dbg !7612
  %83 = load float, float* %wt, align 4, !dbg !7613
  %84 = load float, float* %d, align 4, !dbg !7614
  %add72 = fadd float %84, %83, !dbg !7614
  store float %add72, float* %d, align 4, !dbg !7614
  br label %for.inc, !dbg !7615

for.inc:                                          ; preds = %cond.end68
  %85 = load i32, i32* %n, align 4, !dbg !7616
  %add73 = add nsw i32 %85, 2, !dbg !7616
  store i32 %add73, i32* %n, align 4, !dbg !7616
  br label %for.cond, !dbg !7617, !llvm.loop !7618

for.end:                                          ; preds = %for.cond
  %86 = load float, float* %d, align 4, !dbg !7620
  %div74 = fdiv float 1.000000e+00, %86, !dbg !7621
  store float %div74, float* %d, align 4, !dbg !7622
  %87 = load float, float* %d, align 4, !dbg !7623
  %88 = load %struct.TexResult*, %struct.TexResult** %texr.addr, align 8, !dbg !7624
  %tr75 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %88, i32 0, i32 1, !dbg !7625
  %89 = load float, float* %tr75, align 4, !dbg !7626
  %mul76 = fmul float %89, %87, !dbg !7626
  store float %mul76, float* %tr75, align 4, !dbg !7626
  %90 = load float, float* %d, align 4, !dbg !7627
  %91 = load %struct.TexResult*, %struct.TexResult** %texr.addr, align 8, !dbg !7628
  %tg77 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %91, i32 0, i32 2, !dbg !7629
  %92 = load float, float* %tg77, align 8, !dbg !7630
  %mul78 = fmul float %92, %90, !dbg !7630
  store float %mul78, float* %tg77, align 8, !dbg !7630
  %93 = load float, float* %d, align 4, !dbg !7631
  %94 = load %struct.TexResult*, %struct.TexResult** %texr.addr, align 8, !dbg !7632
  %tb79 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %94, i32 0, i32 3, !dbg !7633
  %95 = load float, float* %tb79, align 4, !dbg !7634
  %mul80 = fmul float %95, %93, !dbg !7634
  store float %mul80, float* %tb79, align 4, !dbg !7634
  %96 = load %struct.TexResult*, %struct.TexResult** %texr.addr, align 8, !dbg !7635
  %talpha81 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %96, i32 0, i32 5, !dbg !7636
  %97 = load i32, i32* %talpha81, align 4, !dbg !7636
  %tobool82 = icmp ne i32 %97, 0, !dbg !7635
  br i1 %tobool82, label %cond.true83, label %cond.false86, !dbg !7635

cond.true83:                                      ; preds = %for.end
  %98 = load %struct.TexResult*, %struct.TexResult** %texr.addr, align 8, !dbg !7637
  %ta84 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %98, i32 0, i32 4, !dbg !7638
  %99 = load float, float* %ta84, align 8, !dbg !7638
  %100 = load float, float* %d, align 4, !dbg !7639
  %mul85 = fmul float %99, %100, !dbg !7640
  br label %cond.end87, !dbg !7635

cond.false86:                                     ; preds = %for.end
  br label %cond.end87, !dbg !7635

cond.end87:                                       ; preds = %cond.false86, %cond.true83
  %cond88 = phi float [ %mul85, %cond.true83 ], [ 1.000000e+00, %cond.false86 ], !dbg !7635
  %101 = load %struct.TexResult*, %struct.TexResult** %texr.addr, align 8, !dbg !7641
  %ta89 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %101, i32 0, i32 4, !dbg !7642
  store float %cond88, float* %ta89, align 8, !dbg !7643
  ret void, !dbg !7644
}

; Function Attrs: noinline nounwind uwtable
define internal void @area_sample(%struct.TexResult* %texr, %struct.ImBuf* %ibuf, float %fx, float %fy, %struct.afdata_t* %AFD) #0 !dbg !7645 {
entry:
  %texr.addr = alloca %struct.TexResult*, align 8
  %ibuf.addr = alloca %struct.ImBuf*, align 8
  %fx.addr = alloca float, align 4
  %fy.addr = alloca float, align 4
  %AFD.addr = alloca %struct.afdata_t*, align 8
  %xs = alloca i32, align 4
  %ys = alloca i32, align 4
  %clip = alloca i32, align 4
  %tc = alloca [4 x float], align 16
  %xsd = alloca float, align 4
  %ysd = alloca float, align 4
  %cw = alloca float, align 4
  %ux = alloca float, align 4
  %uy = alloca float, align 4
  %vx = alloca float, align 4
  %vy = alloca float, align 4
  %xsam = alloca i32, align 4
  %ysam = alloca i32, align 4
  %minsam = alloca i32, align 4
  %su = alloca float, align 4
  %sv = alloca float, align 4
  %pu = alloca float, align 4
  %pv = alloca float, align 4
  %out = alloca i32, align 4
  store %struct.TexResult* %texr, %struct.TexResult** %texr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TexResult** %texr.addr, metadata !7646, metadata !DIExpression()), !dbg !7647
  store %struct.ImBuf* %ibuf, %struct.ImBuf** %ibuf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf.addr, metadata !7648, metadata !DIExpression()), !dbg !7649
  store float %fx, float* %fx.addr, align 4
  call void @llvm.dbg.declare(metadata float* %fx.addr, metadata !7650, metadata !DIExpression()), !dbg !7651
  store float %fy, float* %fy.addr, align 4
  call void @llvm.dbg.declare(metadata float* %fy.addr, metadata !7652, metadata !DIExpression()), !dbg !7653
  store %struct.afdata_t* %AFD, %struct.afdata_t** %AFD.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.afdata_t** %AFD.addr, metadata !7654, metadata !DIExpression()), !dbg !7655
  call void @llvm.dbg.declare(metadata i32* %xs, metadata !7656, metadata !DIExpression()), !dbg !7657
  call void @llvm.dbg.declare(metadata i32* %ys, metadata !7658, metadata !DIExpression()), !dbg !7659
  call void @llvm.dbg.declare(metadata i32* %clip, metadata !7660, metadata !DIExpression()), !dbg !7661
  store i32 0, i32* %clip, align 4, !dbg !7661
  call void @llvm.dbg.declare(metadata [4 x float]* %tc, metadata !7662, metadata !DIExpression()), !dbg !7663
  call void @llvm.dbg.declare(metadata float* %xsd, metadata !7664, metadata !DIExpression()), !dbg !7665
  call void @llvm.dbg.declare(metadata float* %ysd, metadata !7666, metadata !DIExpression()), !dbg !7667
  call void @llvm.dbg.declare(metadata float* %cw, metadata !7668, metadata !DIExpression()), !dbg !7669
  store float 0.000000e+00, float* %cw, align 4, !dbg !7669
  call void @llvm.dbg.declare(metadata float* %ux, metadata !7670, metadata !DIExpression()), !dbg !7671
  %0 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !7672
  %x = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %0, i32 0, i32 2, !dbg !7673
  %1 = load i32, i32* %x, align 8, !dbg !7673
  %conv = sitofp i32 %1 to float, !dbg !7672
  %2 = load %struct.afdata_t*, %struct.afdata_t** %AFD.addr, align 8, !dbg !7674
  %dxt = getelementptr inbounds %struct.afdata_t, %struct.afdata_t* %2, i32 0, i32 0, !dbg !7675
  %arrayidx = getelementptr inbounds [2 x float], [2 x float]* %dxt, i64 0, i64 0, !dbg !7674
  %3 = load float, float* %arrayidx, align 4, !dbg !7674
  %mul = fmul float %conv, %3, !dbg !7676
  store float %mul, float* %ux, align 4, !dbg !7671
  call void @llvm.dbg.declare(metadata float* %uy, metadata !7677, metadata !DIExpression()), !dbg !7678
  %4 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !7679
  %y = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %4, i32 0, i32 3, !dbg !7680
  %5 = load i32, i32* %y, align 4, !dbg !7680
  %conv1 = sitofp i32 %5 to float, !dbg !7679
  %6 = load %struct.afdata_t*, %struct.afdata_t** %AFD.addr, align 8, !dbg !7681
  %dxt2 = getelementptr inbounds %struct.afdata_t, %struct.afdata_t* %6, i32 0, i32 0, !dbg !7682
  %arrayidx3 = getelementptr inbounds [2 x float], [2 x float]* %dxt2, i64 0, i64 1, !dbg !7681
  %7 = load float, float* %arrayidx3, align 4, !dbg !7681
  %mul4 = fmul float %conv1, %7, !dbg !7683
  store float %mul4, float* %uy, align 4, !dbg !7678
  call void @llvm.dbg.declare(metadata float* %vx, metadata !7684, metadata !DIExpression()), !dbg !7685
  %8 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !7686
  %x5 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %8, i32 0, i32 2, !dbg !7687
  %9 = load i32, i32* %x5, align 8, !dbg !7687
  %conv6 = sitofp i32 %9 to float, !dbg !7686
  %10 = load %struct.afdata_t*, %struct.afdata_t** %AFD.addr, align 8, !dbg !7688
  %dyt = getelementptr inbounds %struct.afdata_t, %struct.afdata_t* %10, i32 0, i32 1, !dbg !7689
  %arrayidx7 = getelementptr inbounds [2 x float], [2 x float]* %dyt, i64 0, i64 0, !dbg !7688
  %11 = load float, float* %arrayidx7, align 4, !dbg !7688
  %mul8 = fmul float %conv6, %11, !dbg !7690
  store float %mul8, float* %vx, align 4, !dbg !7685
  call void @llvm.dbg.declare(metadata float* %vy, metadata !7691, metadata !DIExpression()), !dbg !7692
  %12 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !7693
  %y9 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %12, i32 0, i32 3, !dbg !7694
  %13 = load i32, i32* %y9, align 4, !dbg !7694
  %conv10 = sitofp i32 %13 to float, !dbg !7693
  %14 = load %struct.afdata_t*, %struct.afdata_t** %AFD.addr, align 8, !dbg !7695
  %dyt11 = getelementptr inbounds %struct.afdata_t, %struct.afdata_t* %14, i32 0, i32 1, !dbg !7696
  %arrayidx12 = getelementptr inbounds [2 x float], [2 x float]* %dyt11, i64 0, i64 1, !dbg !7695
  %15 = load float, float* %arrayidx12, align 4, !dbg !7695
  %mul13 = fmul float %conv10, %15, !dbg !7697
  store float %mul13, float* %vy, align 4, !dbg !7692
  call void @llvm.dbg.declare(metadata i32* %xsam, metadata !7698, metadata !DIExpression()), !dbg !7699
  %16 = load float, float* %ux, align 4, !dbg !7700
  %17 = load float, float* %ux, align 4, !dbg !7701
  %mul14 = fmul float %16, %17, !dbg !7702
  %18 = load float, float* %uy, align 4, !dbg !7703
  %19 = load float, float* %uy, align 4, !dbg !7704
  %mul15 = fmul float %18, %19, !dbg !7705
  %add = fadd float %mul14, %mul15, !dbg !7706
  %call = call float @sqrtf(float %add) #5, !dbg !7707
  %mul16 = fmul float 5.000000e-01, %call, !dbg !7708
  %add17 = fadd float %mul16, 5.000000e-01, !dbg !7709
  %conv18 = fptosi float %add17 to i32, !dbg !7710
  store i32 %conv18, i32* %xsam, align 4, !dbg !7699
  call void @llvm.dbg.declare(metadata i32* %ysam, metadata !7711, metadata !DIExpression()), !dbg !7712
  %20 = load float, float* %vx, align 4, !dbg !7713
  %21 = load float, float* %vx, align 4, !dbg !7714
  %mul19 = fmul float %20, %21, !dbg !7715
  %22 = load float, float* %vy, align 4, !dbg !7716
  %23 = load float, float* %vy, align 4, !dbg !7717
  %mul20 = fmul float %22, %23, !dbg !7718
  %add21 = fadd float %mul19, %mul20, !dbg !7719
  %call22 = call float @sqrtf(float %add21) #5, !dbg !7720
  %mul23 = fmul float 5.000000e-01, %call22, !dbg !7721
  %add24 = fadd float %mul23, 5.000000e-01, !dbg !7722
  %conv25 = fptosi float %add24 to i32, !dbg !7723
  store i32 %conv25, i32* %ysam, align 4, !dbg !7712
  call void @llvm.dbg.declare(metadata i32* %minsam, metadata !7724, metadata !DIExpression()), !dbg !7725
  %24 = load %struct.afdata_t*, %struct.afdata_t** %AFD.addr, align 8, !dbg !7726
  %intpol = getelementptr inbounds %struct.afdata_t, %struct.afdata_t* %24, i32 0, i32 2, !dbg !7727
  %25 = load i32, i32* %intpol, align 4, !dbg !7727
  %tobool = icmp ne i32 %25, 0, !dbg !7726
  %26 = zext i1 %tobool to i64, !dbg !7726
  %cond = select i1 %tobool, i32 2, i32 4, !dbg !7726
  store i32 %cond, i32* %minsam, align 4, !dbg !7725
  %27 = load i32, i32* %xsam, align 4, !dbg !7728
  %28 = load i32, i32* %minsam, align 4, !dbg !7728
  %cmp = icmp slt i32 %27, %28, !dbg !7728
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !7728

cond.true:                                        ; preds = %entry
  %29 = load i32, i32* %minsam, align 4, !dbg !7728
  br label %cond.end36, !dbg !7728

cond.false:                                       ; preds = %entry
  %30 = load i32, i32* %xsam, align 4, !dbg !7728
  %31 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !7728
  %x27 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %31, i32 0, i32 2, !dbg !7728
  %32 = load i32, i32* %x27, align 8, !dbg !7728
  %mul28 = mul nsw i32 %32, 2, !dbg !7728
  %cmp29 = icmp sgt i32 %30, %mul28, !dbg !7728
  br i1 %cmp29, label %cond.true31, label %cond.false34, !dbg !7728

cond.true31:                                      ; preds = %cond.false
  %33 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !7728
  %x32 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %33, i32 0, i32 2, !dbg !7728
  %34 = load i32, i32* %x32, align 8, !dbg !7728
  %mul33 = mul nsw i32 %34, 2, !dbg !7728
  br label %cond.end, !dbg !7728

cond.false34:                                     ; preds = %cond.false
  %35 = load i32, i32* %xsam, align 4, !dbg !7728
  br label %cond.end, !dbg !7728

cond.end:                                         ; preds = %cond.false34, %cond.true31
  %cond35 = phi i32 [ %mul33, %cond.true31 ], [ %35, %cond.false34 ], !dbg !7728
  br label %cond.end36, !dbg !7728

cond.end36:                                       ; preds = %cond.end, %cond.true
  %cond37 = phi i32 [ %29, %cond.true ], [ %cond35, %cond.end ], !dbg !7728
  store i32 %cond37, i32* %xsam, align 4, !dbg !7729
  %36 = load i32, i32* %ysam, align 4, !dbg !7730
  %37 = load i32, i32* %minsam, align 4, !dbg !7730
  %cmp38 = icmp slt i32 %36, %37, !dbg !7730
  br i1 %cmp38, label %cond.true40, label %cond.false41, !dbg !7730

cond.true40:                                      ; preds = %cond.end36
  %38 = load i32, i32* %minsam, align 4, !dbg !7730
  br label %cond.end52, !dbg !7730

cond.false41:                                     ; preds = %cond.end36
  %39 = load i32, i32* %ysam, align 4, !dbg !7730
  %40 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !7730
  %y42 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %40, i32 0, i32 3, !dbg !7730
  %41 = load i32, i32* %y42, align 4, !dbg !7730
  %mul43 = mul nsw i32 %41, 2, !dbg !7730
  %cmp44 = icmp sgt i32 %39, %mul43, !dbg !7730
  br i1 %cmp44, label %cond.true46, label %cond.false49, !dbg !7730

cond.true46:                                      ; preds = %cond.false41
  %42 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !7730
  %y47 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %42, i32 0, i32 3, !dbg !7730
  %43 = load i32, i32* %y47, align 4, !dbg !7730
  %mul48 = mul nsw i32 %43, 2, !dbg !7730
  br label %cond.end50, !dbg !7730

cond.false49:                                     ; preds = %cond.false41
  %44 = load i32, i32* %ysam, align 4, !dbg !7730
  br label %cond.end50, !dbg !7730

cond.end50:                                       ; preds = %cond.false49, %cond.true46
  %cond51 = phi i32 [ %mul48, %cond.true46 ], [ %44, %cond.false49 ], !dbg !7730
  br label %cond.end52, !dbg !7730

cond.end52:                                       ; preds = %cond.end50, %cond.true40
  %cond53 = phi i32 [ %38, %cond.true40 ], [ %cond51, %cond.end50 ], !dbg !7730
  store i32 %cond53, i32* %ysam, align 4, !dbg !7731
  %45 = load i32, i32* %xsam, align 4, !dbg !7732
  %conv54 = sitofp i32 %45 to float, !dbg !7732
  %div = fdiv float 1.000000e+00, %conv54, !dbg !7733
  store float %div, float* %xsd, align 4, !dbg !7734
  %46 = load i32, i32* %ysam, align 4, !dbg !7735
  %conv55 = sitofp i32 %46 to float, !dbg !7735
  %div56 = fdiv float 1.000000e+00, %conv55, !dbg !7736
  store float %div56, float* %ysd, align 4, !dbg !7737
  %47 = load %struct.TexResult*, %struct.TexResult** %texr.addr, align 8, !dbg !7738
  %ta = getelementptr inbounds %struct.TexResult, %struct.TexResult* %47, i32 0, i32 4, !dbg !7739
  store float 0.000000e+00, float* %ta, align 8, !dbg !7740
  %48 = load %struct.TexResult*, %struct.TexResult** %texr.addr, align 8, !dbg !7741
  %tb = getelementptr inbounds %struct.TexResult, %struct.TexResult* %48, i32 0, i32 3, !dbg !7742
  store float 0.000000e+00, float* %tb, align 4, !dbg !7743
  %49 = load %struct.TexResult*, %struct.TexResult** %texr.addr, align 8, !dbg !7744
  %tg = getelementptr inbounds %struct.TexResult, %struct.TexResult* %49, i32 0, i32 2, !dbg !7745
  store float 0.000000e+00, float* %tg, align 8, !dbg !7746
  %50 = load %struct.TexResult*, %struct.TexResult** %texr.addr, align 8, !dbg !7747
  %tr = getelementptr inbounds %struct.TexResult, %struct.TexResult* %50, i32 0, i32 1, !dbg !7748
  store float 0.000000e+00, float* %tr, align 4, !dbg !7749
  store i32 0, i32* %ys, align 4, !dbg !7750
  br label %for.cond, !dbg !7752

for.cond:                                         ; preds = %for.inc121, %cond.end52
  %51 = load i32, i32* %ys, align 4, !dbg !7753
  %52 = load i32, i32* %ysam, align 4, !dbg !7755
  %cmp57 = icmp slt i32 %51, %52, !dbg !7756
  br i1 %cmp57, label %for.body, label %for.end123, !dbg !7757

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %xs, align 4, !dbg !7758
  br label %for.cond59, !dbg !7761

for.cond59:                                       ; preds = %for.inc, %for.body
  %53 = load i32, i32* %xs, align 4, !dbg !7762
  %54 = load i32, i32* %xsam, align 4, !dbg !7764
  %cmp60 = icmp slt i32 %53, %54, !dbg !7765
  br i1 %cmp60, label %for.body62, label %for.end, !dbg !7766

for.body62:                                       ; preds = %for.cond59
  call void @llvm.dbg.declare(metadata float* %su, metadata !7767, metadata !DIExpression()), !dbg !7769
  %55 = load i32, i32* %xs, align 4, !dbg !7770
  %conv63 = sitofp i32 %55 to float, !dbg !7770
  %56 = load i32, i32* %ys, align 4, !dbg !7771
  %and = and i32 %56, 1, !dbg !7772
  %conv64 = sitofp i32 %and to float, !dbg !7773
  %add65 = fadd float %conv64, 5.000000e-01, !dbg !7774
  %mul66 = fmul float %add65, 5.000000e-01, !dbg !7775
  %add67 = fadd float %conv63, %mul66, !dbg !7776
  %57 = load float, float* %xsd, align 4, !dbg !7777
  %mul68 = fmul float %add67, %57, !dbg !7778
  %sub = fsub float %mul68, 5.000000e-01, !dbg !7779
  store float %sub, float* %su, align 4, !dbg !7769
  call void @llvm.dbg.declare(metadata float* %sv, metadata !7780, metadata !DIExpression()), !dbg !7781
  %58 = load i32, i32* %ys, align 4, !dbg !7782
  %conv69 = sitofp i32 %58 to float, !dbg !7782
  %59 = load i32, i32* %xs, align 4, !dbg !7783
  %and70 = and i32 %59, 1, !dbg !7784
  %conv71 = sitofp i32 %and70 to float, !dbg !7785
  %add72 = fadd float %conv71, 5.000000e-01, !dbg !7786
  %mul73 = fmul float %add72, 5.000000e-01, !dbg !7787
  %add74 = fadd float %conv69, %mul73, !dbg !7788
  %60 = load float, float* %ysd, align 4, !dbg !7789
  %mul75 = fmul float %add74, %60, !dbg !7790
  %sub76 = fsub float %mul75, 5.000000e-01, !dbg !7791
  store float %sub76, float* %sv, align 4, !dbg !7781
  call void @llvm.dbg.declare(metadata float* %pu, metadata !7792, metadata !DIExpression()), !dbg !7793
  %61 = load float, float* %fx.addr, align 4, !dbg !7794
  %62 = load float, float* %su, align 4, !dbg !7795
  %63 = load %struct.afdata_t*, %struct.afdata_t** %AFD.addr, align 8, !dbg !7796
  %dxt77 = getelementptr inbounds %struct.afdata_t, %struct.afdata_t* %63, i32 0, i32 0, !dbg !7797
  %arrayidx78 = getelementptr inbounds [2 x float], [2 x float]* %dxt77, i64 0, i64 0, !dbg !7796
  %64 = load float, float* %arrayidx78, align 4, !dbg !7796
  %mul79 = fmul float %62, %64, !dbg !7798
  %add80 = fadd float %61, %mul79, !dbg !7799
  %65 = load float, float* %sv, align 4, !dbg !7800
  %66 = load %struct.afdata_t*, %struct.afdata_t** %AFD.addr, align 8, !dbg !7801
  %dyt81 = getelementptr inbounds %struct.afdata_t, %struct.afdata_t* %66, i32 0, i32 1, !dbg !7802
  %arrayidx82 = getelementptr inbounds [2 x float], [2 x float]* %dyt81, i64 0, i64 0, !dbg !7801
  %67 = load float, float* %arrayidx82, align 4, !dbg !7801
  %mul83 = fmul float %65, %67, !dbg !7803
  %add84 = fadd float %add80, %mul83, !dbg !7804
  store float %add84, float* %pu, align 4, !dbg !7793
  call void @llvm.dbg.declare(metadata float* %pv, metadata !7805, metadata !DIExpression()), !dbg !7806
  %68 = load float, float* %fy.addr, align 4, !dbg !7807
  %69 = load float, float* %su, align 4, !dbg !7808
  %70 = load %struct.afdata_t*, %struct.afdata_t** %AFD.addr, align 8, !dbg !7809
  %dxt85 = getelementptr inbounds %struct.afdata_t, %struct.afdata_t* %70, i32 0, i32 0, !dbg !7810
  %arrayidx86 = getelementptr inbounds [2 x float], [2 x float]* %dxt85, i64 0, i64 1, !dbg !7809
  %71 = load float, float* %arrayidx86, align 4, !dbg !7809
  %mul87 = fmul float %69, %71, !dbg !7811
  %add88 = fadd float %68, %mul87, !dbg !7812
  %72 = load float, float* %sv, align 4, !dbg !7813
  %73 = load %struct.afdata_t*, %struct.afdata_t** %AFD.addr, align 8, !dbg !7814
  %dyt89 = getelementptr inbounds %struct.afdata_t, %struct.afdata_t* %73, i32 0, i32 1, !dbg !7815
  %arrayidx90 = getelementptr inbounds [2 x float], [2 x float]* %dyt89, i64 0, i64 1, !dbg !7814
  %74 = load float, float* %arrayidx90, align 4, !dbg !7814
  %mul91 = fmul float %72, %74, !dbg !7816
  %add92 = fadd float %add88, %mul91, !dbg !7817
  store float %add92, float* %pv, align 4, !dbg !7806
  call void @llvm.dbg.declare(metadata i32* %out, metadata !7818, metadata !DIExpression()), !dbg !7819
  %arraydecay = getelementptr inbounds [4 x float], [4 x float]* %tc, i64 0, i64 0, !dbg !7820
  %75 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !7821
  %76 = load float, float* %pu, align 4, !dbg !7822
  %77 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !7823
  %x93 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %77, i32 0, i32 2, !dbg !7824
  %78 = load i32, i32* %x93, align 8, !dbg !7824
  %conv94 = sitofp i32 %78 to float, !dbg !7823
  %mul95 = fmul float %76, %conv94, !dbg !7825
  %79 = load float, float* %pv, align 4, !dbg !7826
  %80 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !7827
  %y96 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %80, i32 0, i32 3, !dbg !7828
  %81 = load i32, i32* %y96, align 4, !dbg !7828
  %conv97 = sitofp i32 %81 to float, !dbg !7827
  %mul98 = fmul float %79, %conv97, !dbg !7829
  %82 = load %struct.afdata_t*, %struct.afdata_t** %AFD.addr, align 8, !dbg !7830
  %intpol99 = getelementptr inbounds %struct.afdata_t, %struct.afdata_t* %82, i32 0, i32 2, !dbg !7831
  %83 = load i32, i32* %intpol99, align 4, !dbg !7831
  %84 = load %struct.afdata_t*, %struct.afdata_t** %AFD.addr, align 8, !dbg !7832
  %extflag = getelementptr inbounds %struct.afdata_t, %struct.afdata_t* %84, i32 0, i32 3, !dbg !7833
  %85 = load i32, i32* %extflag, align 4, !dbg !7833
  %call100 = call i32 @ibuf_get_color_clip_bilerp(float* %arraydecay, %struct.ImBuf* %75, float %mul95, float %mul98, i32 %83, i32 %85), !dbg !7834
  store i32 %call100, i32* %out, align 4, !dbg !7819
  %86 = load i32, i32* %out, align 4, !dbg !7835
  %87 = load i32, i32* %clip, align 4, !dbg !7836
  %or = or i32 %87, %86, !dbg !7836
  store i32 %or, i32* %clip, align 4, !dbg !7836
  %88 = load i32, i32* %out, align 4, !dbg !7837
  %tobool101 = icmp ne i32 %88, 0, !dbg !7837
  %89 = zext i1 %tobool101 to i64, !dbg !7837
  %cond102 = select i1 %tobool101, float 0.000000e+00, float 1.000000e+00, !dbg !7837
  %90 = load float, float* %cw, align 4, !dbg !7838
  %add103 = fadd float %90, %cond102, !dbg !7838
  store float %add103, float* %cw, align 4, !dbg !7838
  %arrayidx104 = getelementptr inbounds [4 x float], [4 x float]* %tc, i64 0, i64 0, !dbg !7839
  %91 = load float, float* %arrayidx104, align 16, !dbg !7839
  %92 = load %struct.TexResult*, %struct.TexResult** %texr.addr, align 8, !dbg !7840
  %tr105 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %92, i32 0, i32 1, !dbg !7841
  %93 = load float, float* %tr105, align 4, !dbg !7842
  %add106 = fadd float %93, %91, !dbg !7842
  store float %add106, float* %tr105, align 4, !dbg !7842
  %arrayidx107 = getelementptr inbounds [4 x float], [4 x float]* %tc, i64 0, i64 1, !dbg !7843
  %94 = load float, float* %arrayidx107, align 4, !dbg !7843
  %95 = load %struct.TexResult*, %struct.TexResult** %texr.addr, align 8, !dbg !7844
  %tg108 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %95, i32 0, i32 2, !dbg !7845
  %96 = load float, float* %tg108, align 8, !dbg !7846
  %add109 = fadd float %96, %94, !dbg !7846
  store float %add109, float* %tg108, align 8, !dbg !7846
  %arrayidx110 = getelementptr inbounds [4 x float], [4 x float]* %tc, i64 0, i64 2, !dbg !7847
  %97 = load float, float* %arrayidx110, align 8, !dbg !7847
  %98 = load %struct.TexResult*, %struct.TexResult** %texr.addr, align 8, !dbg !7848
  %tb111 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %98, i32 0, i32 3, !dbg !7849
  %99 = load float, float* %tb111, align 4, !dbg !7850
  %add112 = fadd float %99, %97, !dbg !7850
  store float %add112, float* %tb111, align 4, !dbg !7850
  %100 = load %struct.TexResult*, %struct.TexResult** %texr.addr, align 8, !dbg !7851
  %talpha = getelementptr inbounds %struct.TexResult, %struct.TexResult* %100, i32 0, i32 5, !dbg !7852
  %101 = load i32, i32* %talpha, align 4, !dbg !7852
  %tobool113 = icmp ne i32 %101, 0, !dbg !7851
  br i1 %tobool113, label %cond.true114, label %cond.false116, !dbg !7851

cond.true114:                                     ; preds = %for.body62
  %arrayidx115 = getelementptr inbounds [4 x float], [4 x float]* %tc, i64 0, i64 3, !dbg !7853
  %102 = load float, float* %arrayidx115, align 4, !dbg !7853
  br label %cond.end117, !dbg !7851

cond.false116:                                    ; preds = %for.body62
  br label %cond.end117, !dbg !7851

cond.end117:                                      ; preds = %cond.false116, %cond.true114
  %cond118 = phi float [ %102, %cond.true114 ], [ 0.000000e+00, %cond.false116 ], !dbg !7851
  %103 = load %struct.TexResult*, %struct.TexResult** %texr.addr, align 8, !dbg !7854
  %ta119 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %103, i32 0, i32 4, !dbg !7855
  %104 = load float, float* %ta119, align 8, !dbg !7856
  %add120 = fadd float %104, %cond118, !dbg !7856
  store float %add120, float* %ta119, align 8, !dbg !7856
  br label %for.inc, !dbg !7857

for.inc:                                          ; preds = %cond.end117
  %105 = load i32, i32* %xs, align 4, !dbg !7858
  %inc = add nsw i32 %105, 1, !dbg !7858
  store i32 %inc, i32* %xs, align 4, !dbg !7858
  br label %for.cond59, !dbg !7859, !llvm.loop !7860

for.end:                                          ; preds = %for.cond59
  br label %for.inc121, !dbg !7862

for.inc121:                                       ; preds = %for.end
  %106 = load i32, i32* %ys, align 4, !dbg !7863
  %inc122 = add nsw i32 %106, 1, !dbg !7863
  store i32 %inc122, i32* %ys, align 4, !dbg !7863
  br label %for.cond, !dbg !7864, !llvm.loop !7865

for.end123:                                       ; preds = %for.cond
  %107 = load float, float* %ysd, align 4, !dbg !7867
  %108 = load float, float* %xsd, align 4, !dbg !7868
  %mul124 = fmul float %108, %107, !dbg !7868
  store float %mul124, float* %xsd, align 4, !dbg !7868
  %109 = load float, float* %xsd, align 4, !dbg !7869
  %110 = load %struct.TexResult*, %struct.TexResult** %texr.addr, align 8, !dbg !7870
  %tr125 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %110, i32 0, i32 1, !dbg !7871
  %111 = load float, float* %tr125, align 4, !dbg !7872
  %mul126 = fmul float %111, %109, !dbg !7872
  store float %mul126, float* %tr125, align 4, !dbg !7872
  %112 = load float, float* %xsd, align 4, !dbg !7873
  %113 = load %struct.TexResult*, %struct.TexResult** %texr.addr, align 8, !dbg !7874
  %tg127 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %113, i32 0, i32 2, !dbg !7875
  %114 = load float, float* %tg127, align 8, !dbg !7876
  %mul128 = fmul float %114, %112, !dbg !7876
  store float %mul128, float* %tg127, align 8, !dbg !7876
  %115 = load float, float* %xsd, align 4, !dbg !7877
  %116 = load %struct.TexResult*, %struct.TexResult** %texr.addr, align 8, !dbg !7878
  %tb129 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %116, i32 0, i32 3, !dbg !7879
  %117 = load float, float* %tb129, align 4, !dbg !7880
  %mul130 = fmul float %117, %115, !dbg !7880
  store float %mul130, float* %tb129, align 4, !dbg !7880
  %118 = load %struct.TexResult*, %struct.TexResult** %texr.addr, align 8, !dbg !7881
  %talpha131 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %118, i32 0, i32 5, !dbg !7882
  %119 = load i32, i32* %talpha131, align 4, !dbg !7882
  %tobool132 = icmp ne i32 %119, 0, !dbg !7881
  br i1 %tobool132, label %cond.true133, label %cond.false136, !dbg !7881

cond.true133:                                     ; preds = %for.end123
  %120 = load %struct.TexResult*, %struct.TexResult** %texr.addr, align 8, !dbg !7883
  %ta134 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %120, i32 0, i32 4, !dbg !7884
  %121 = load float, float* %ta134, align 8, !dbg !7884
  %122 = load float, float* %xsd, align 4, !dbg !7885
  %mul135 = fmul float %121, %122, !dbg !7886
  br label %cond.end143, !dbg !7881

cond.false136:                                    ; preds = %for.end123
  %123 = load i32, i32* %clip, align 4, !dbg !7887
  %tobool137 = icmp ne i32 %123, 0, !dbg !7887
  br i1 %tobool137, label %cond.true138, label %cond.false140, !dbg !7887

cond.true138:                                     ; preds = %cond.false136
  %124 = load float, float* %cw, align 4, !dbg !7888
  %125 = load float, float* %xsd, align 4, !dbg !7889
  %mul139 = fmul float %124, %125, !dbg !7890
  br label %cond.end141, !dbg !7887

cond.false140:                                    ; preds = %cond.false136
  br label %cond.end141, !dbg !7887

cond.end141:                                      ; preds = %cond.false140, %cond.true138
  %cond142 = phi float [ %mul139, %cond.true138 ], [ 1.000000e+00, %cond.false140 ], !dbg !7887
  br label %cond.end143, !dbg !7881

cond.end143:                                      ; preds = %cond.end141, %cond.true133
  %cond144 = phi float [ %mul135, %cond.true133 ], [ %cond142, %cond.end141 ], !dbg !7881
  %126 = load %struct.TexResult*, %struct.TexResult** %texr.addr, align 8, !dbg !7891
  %ta145 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %126, i32 0, i32 4, !dbg !7892
  store float %cond144, float* %ta145, align 8, !dbg !7893
  ret void, !dbg !7894
}

; Function Attrs: noinline nounwind uwtable
define internal void @mul_v2_fl(float* %r, float %f) #0 !dbg !7895 {
entry:
  %r.addr = alloca float*, align 8
  %f.addr = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !7896, metadata !DIExpression()), !dbg !7897
  store float %f, float* %f.addr, align 4
  call void @llvm.dbg.declare(metadata float* %f.addr, metadata !7898, metadata !DIExpression()), !dbg !7899
  %0 = load float, float* %f.addr, align 4, !dbg !7900
  %1 = load float*, float** %r.addr, align 8, !dbg !7901
  %arrayidx = getelementptr inbounds float, float* %1, i64 0, !dbg !7901
  %2 = load float, float* %arrayidx, align 4, !dbg !7902
  %mul = fmul float %2, %0, !dbg !7902
  store float %mul, float* %arrayidx, align 4, !dbg !7902
  %3 = load float, float* %f.addr, align 4, !dbg !7903
  %4 = load float*, float** %r.addr, align 8, !dbg !7904
  %arrayidx1 = getelementptr inbounds float, float* %4, i64 1, !dbg !7904
  %5 = load float, float* %arrayidx1, align 4, !dbg !7905
  %mul2 = fmul float %5, %3, !dbg !7905
  store float %mul2, float* %arrayidx1, align 4, !dbg !7905
  ret void, !dbg !7906
}

; Function Attrs: noinline nounwind uwtable
define internal float @len_v2(float* %v) #0 !dbg !7907 {
entry:
  %v.addr = alloca float*, align 8
  store float* %v, float** %v.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v.addr, metadata !7910, metadata !DIExpression()), !dbg !7911
  %0 = load float*, float** %v.addr, align 8, !dbg !7912
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !7912
  %1 = load float, float* %arrayidx, align 4, !dbg !7912
  %2 = load float*, float** %v.addr, align 8, !dbg !7913
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !7913
  %3 = load float, float* %arrayidx1, align 4, !dbg !7913
  %mul = fmul float %1, %3, !dbg !7914
  %4 = load float*, float** %v.addr, align 8, !dbg !7915
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !7915
  %5 = load float, float* %arrayidx2, align 4, !dbg !7915
  %6 = load float*, float** %v.addr, align 8, !dbg !7916
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !7916
  %7 = load float, float* %arrayidx3, align 4, !dbg !7916
  %mul4 = fmul float %5, %7, !dbg !7917
  %add = fadd float %mul, %mul4, !dbg !7918
  %call = call float @sqrtf(float %add) #5, !dbg !7919
  ret float %call, !dbg !7920
}

; Function Attrs: nounwind
declare dso_local float @sqrtf(float) #4

declare dso_local void @BLI_ewa_imp2radangle(float, float, float, float, float*, float*, float*, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @iroundf(float %a) #0 !dbg !7921 {
entry:
  %a.addr = alloca float, align 4
  store float %a, float* %a.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a.addr, metadata !7924, metadata !DIExpression()), !dbg !7925
  %0 = load float, float* %a.addr, align 4, !dbg !7926
  %add = fadd float %0, 5.000000e-01, !dbg !7927
  %1 = call float @llvm.floor.f32(float %add), !dbg !7928
  %conv = fptosi float %1 to i32, !dbg !7929
  ret i32 %conv, !dbg !7930
}

; Function Attrs: nounwind
declare dso_local float @logf(float) #4

; Function Attrs: noinline nounwind uwtable
define internal void @alpha_clip_aniso(%struct.ImBuf* %ibuf, float %minx, float %miny, float %maxx, float %maxy, i32 %extflag, %struct.TexResult* %texres) #0 !dbg !7931 {
entry:
  %ibuf.addr = alloca %struct.ImBuf*, align 8
  %minx.addr = alloca float, align 4
  %miny.addr = alloca float, align 4
  %maxx.addr = alloca float, align 4
  %maxy.addr = alloca float, align 4
  %extflag.addr = alloca i32, align 4
  %texres.addr = alloca %struct.TexResult*, align 8
  %alphaclip = alloca float, align 4
  %rf = alloca %struct.rctf, align 4
  store %struct.ImBuf* %ibuf, %struct.ImBuf** %ibuf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf.addr, metadata !7934, metadata !DIExpression()), !dbg !7935
  store float %minx, float* %minx.addr, align 4
  call void @llvm.dbg.declare(metadata float* %minx.addr, metadata !7936, metadata !DIExpression()), !dbg !7937
  store float %miny, float* %miny.addr, align 4
  call void @llvm.dbg.declare(metadata float* %miny.addr, metadata !7938, metadata !DIExpression()), !dbg !7939
  store float %maxx, float* %maxx.addr, align 4
  call void @llvm.dbg.declare(metadata float* %maxx.addr, metadata !7940, metadata !DIExpression()), !dbg !7941
  store float %maxy, float* %maxy.addr, align 4
  call void @llvm.dbg.declare(metadata float* %maxy.addr, metadata !7942, metadata !DIExpression()), !dbg !7943
  store i32 %extflag, i32* %extflag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %extflag.addr, metadata !7944, metadata !DIExpression()), !dbg !7945
  store %struct.TexResult* %texres, %struct.TexResult** %texres.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TexResult** %texres.addr, metadata !7946, metadata !DIExpression()), !dbg !7947
  call void @llvm.dbg.declare(metadata float* %alphaclip, metadata !7948, metadata !DIExpression()), !dbg !7949
  call void @llvm.dbg.declare(metadata %struct.rctf* %rf, metadata !7950, metadata !DIExpression()), !dbg !7951
  %0 = load i32, i32* %extflag.addr, align 4, !dbg !7952
  %cmp = icmp eq i32 %0, 3, !dbg !7954
  br i1 %cmp, label %if.end24, label %lor.lhs.false, !dbg !7955

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %extflag.addr, align 4, !dbg !7956
  %cmp1 = icmp eq i32 %1, 4, !dbg !7957
  br i1 %cmp1, label %if.end24, label %if.then, !dbg !7958

if.then:                                          ; preds = %lor.lhs.false
  %2 = load float, float* %minx.addr, align 4, !dbg !7959
  %3 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !7961
  %x = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %3, i32 0, i32 2, !dbg !7962
  %4 = load i32, i32* %x, align 8, !dbg !7962
  %conv = sitofp i32 %4 to float, !dbg !7963
  %mul = fmul float %2, %conv, !dbg !7964
  %xmin = getelementptr inbounds %struct.rctf, %struct.rctf* %rf, i32 0, i32 0, !dbg !7965
  store float %mul, float* %xmin, align 4, !dbg !7966
  %5 = load float, float* %maxx.addr, align 4, !dbg !7967
  %6 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !7968
  %x2 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %6, i32 0, i32 2, !dbg !7969
  %7 = load i32, i32* %x2, align 8, !dbg !7969
  %conv3 = sitofp i32 %7 to float, !dbg !7970
  %mul4 = fmul float %5, %conv3, !dbg !7971
  %xmax = getelementptr inbounds %struct.rctf, %struct.rctf* %rf, i32 0, i32 1, !dbg !7972
  store float %mul4, float* %xmax, align 4, !dbg !7973
  %8 = load float, float* %miny.addr, align 4, !dbg !7974
  %9 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !7975
  %y = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %9, i32 0, i32 3, !dbg !7976
  %10 = load i32, i32* %y, align 4, !dbg !7976
  %conv5 = sitofp i32 %10 to float, !dbg !7977
  %mul6 = fmul float %8, %conv5, !dbg !7978
  %ymin = getelementptr inbounds %struct.rctf, %struct.rctf* %rf, i32 0, i32 2, !dbg !7979
  store float %mul6, float* %ymin, align 4, !dbg !7980
  %11 = load float, float* %maxy.addr, align 4, !dbg !7981
  %12 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !7982
  %y7 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %12, i32 0, i32 3, !dbg !7983
  %13 = load i32, i32* %y7, align 4, !dbg !7983
  %conv8 = sitofp i32 %13 to float, !dbg !7984
  %mul9 = fmul float %11, %conv8, !dbg !7985
  %ymax = getelementptr inbounds %struct.rctf, %struct.rctf* %rf, i32 0, i32 3, !dbg !7986
  store float %mul9, float* %ymax, align 4, !dbg !7987
  %14 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !7988
  %x10 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %14, i32 0, i32 2, !dbg !7989
  %15 = load i32, i32* %x10, align 8, !dbg !7989
  %conv11 = sitofp i32 %15 to float, !dbg !7990
  %call = call float @clipx_rctf(%struct.rctf* %rf, float 0.000000e+00, float %conv11), !dbg !7991
  store float %call, float* %alphaclip, align 4, !dbg !7992
  %16 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !7993
  %y12 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %16, i32 0, i32 3, !dbg !7994
  %17 = load i32, i32* %y12, align 4, !dbg !7994
  %conv13 = sitofp i32 %17 to float, !dbg !7995
  %call14 = call float @clipy_rctf(%struct.rctf* %rf, float 0.000000e+00, float %conv13), !dbg !7996
  %18 = load float, float* %alphaclip, align 4, !dbg !7997
  %mul15 = fmul float %18, %call14, !dbg !7997
  store float %mul15, float* %alphaclip, align 4, !dbg !7997
  %19 = load float, float* %alphaclip, align 4, !dbg !7998
  %call16 = call float @max_ff(float %19, float 0.000000e+00), !dbg !7999
  store float %call16, float* %alphaclip, align 4, !dbg !8000
  %20 = load float, float* %alphaclip, align 4, !dbg !8001
  %cmp17 = fcmp une float %20, 1.000000e+00, !dbg !8003
  br i1 %cmp17, label %if.then19, label %if.end, !dbg !8004

if.then19:                                        ; preds = %if.then
  %21 = load float, float* %alphaclip, align 4, !dbg !8005
  %22 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !8007
  %tr = getelementptr inbounds %struct.TexResult, %struct.TexResult* %22, i32 0, i32 1, !dbg !8008
  %23 = load float, float* %tr, align 4, !dbg !8009
  %mul20 = fmul float %23, %21, !dbg !8009
  store float %mul20, float* %tr, align 4, !dbg !8009
  %24 = load float, float* %alphaclip, align 4, !dbg !8010
  %25 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !8011
  %tg = getelementptr inbounds %struct.TexResult, %struct.TexResult* %25, i32 0, i32 2, !dbg !8012
  %26 = load float, float* %tg, align 8, !dbg !8013
  %mul21 = fmul float %26, %24, !dbg !8013
  store float %mul21, float* %tg, align 8, !dbg !8013
  %27 = load float, float* %alphaclip, align 4, !dbg !8014
  %28 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !8015
  %tb = getelementptr inbounds %struct.TexResult, %struct.TexResult* %28, i32 0, i32 3, !dbg !8016
  %29 = load float, float* %tb, align 4, !dbg !8017
  %mul22 = fmul float %29, %27, !dbg !8017
  store float %mul22, float* %tb, align 4, !dbg !8017
  %30 = load float, float* %alphaclip, align 4, !dbg !8018
  %31 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !8019
  %ta = getelementptr inbounds %struct.TexResult, %struct.TexResult* %31, i32 0, i32 4, !dbg !8020
  %32 = load float, float* %ta, align 8, !dbg !8021
  %mul23 = fmul float %32, %30, !dbg !8021
  store float %mul23, float* %ta, align 8, !dbg !8021
  br label %if.end, !dbg !8022

if.end:                                           ; preds = %if.then19, %if.then
  br label %if.end24, !dbg !8023

if.end24:                                         ; preds = %if.end, %lor.lhs.false, %entry
  ret void, !dbg !8024
}

; Function Attrs: nounwind
declare dso_local float @cosf(float) #4

; Function Attrs: nounwind
declare dso_local float @sinf(float) #4

; Function Attrs: noinline nounwind uwtable
define internal i32 @ibuf_get_color_clip_bilerp(float* %col, %struct.ImBuf* %ibuf, float %u, float %v, i32 %intpol, i32 %extflag) #0 !dbg !8025 {
entry:
  %retval = alloca i32, align 4
  %col.addr = alloca float*, align 8
  %ibuf.addr = alloca %struct.ImBuf*, align 8
  %u.addr = alloca float, align 4
  %v.addr = alloca float, align 4
  %intpol.addr = alloca i32, align 4
  %extflag.addr = alloca i32, align 4
  %c00 = alloca [4 x float], align 16
  %c01 = alloca [4 x float], align 16
  %c10 = alloca [4 x float], align 16
  %c11 = alloca [4 x float], align 16
  %ufl = alloca float, align 4
  %vfl = alloca float, align 4
  %uf = alloca float, align 4
  %vf = alloca float, align 4
  %w00 = alloca float, align 4
  %w10 = alloca float, align 4
  %w01 = alloca float, align 4
  %w11 = alloca float, align 4
  %x1 = alloca i32, align 4
  %y1 = alloca i32, align 4
  %x2 = alloca i32, align 4
  %y2 = alloca i32, align 4
  %clip = alloca i32, align 4
  store float* %col, float** %col.addr, align 8
  call void @llvm.dbg.declare(metadata float** %col.addr, metadata !8028, metadata !DIExpression()), !dbg !8029
  store %struct.ImBuf* %ibuf, %struct.ImBuf** %ibuf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf.addr, metadata !8030, metadata !DIExpression()), !dbg !8031
  store float %u, float* %u.addr, align 4
  call void @llvm.dbg.declare(metadata float* %u.addr, metadata !8032, metadata !DIExpression()), !dbg !8033
  store float %v, float* %v.addr, align 4
  call void @llvm.dbg.declare(metadata float* %v.addr, metadata !8034, metadata !DIExpression()), !dbg !8035
  store i32 %intpol, i32* %intpol.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %intpol.addr, metadata !8036, metadata !DIExpression()), !dbg !8037
  store i32 %extflag, i32* %extflag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %extflag.addr, metadata !8038, metadata !DIExpression()), !dbg !8039
  %0 = load i32, i32* %intpol.addr, align 4, !dbg !8040
  %tobool = icmp ne i32 %0, 0, !dbg !8040
  br i1 %tobool, label %if.then, label %if.end, !dbg !8042

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata [4 x float]* %c00, metadata !8043, metadata !DIExpression()), !dbg !8045
  call void @llvm.dbg.declare(metadata [4 x float]* %c01, metadata !8046, metadata !DIExpression()), !dbg !8047
  call void @llvm.dbg.declare(metadata [4 x float]* %c10, metadata !8048, metadata !DIExpression()), !dbg !8049
  call void @llvm.dbg.declare(metadata [4 x float]* %c11, metadata !8050, metadata !DIExpression()), !dbg !8051
  call void @llvm.dbg.declare(metadata float* %ufl, metadata !8052, metadata !DIExpression()), !dbg !8053
  %1 = load float, float* %u.addr, align 4, !dbg !8054
  %sub = fsub float %1, 5.000000e-01, !dbg !8054
  store float %sub, float* %u.addr, align 4, !dbg !8054
  %2 = call float @llvm.floor.f32(float %sub), !dbg !8055
  store float %2, float* %ufl, align 4, !dbg !8053
  call void @llvm.dbg.declare(metadata float* %vfl, metadata !8056, metadata !DIExpression()), !dbg !8057
  %3 = load float, float* %v.addr, align 4, !dbg !8058
  %sub1 = fsub float %3, 5.000000e-01, !dbg !8058
  store float %sub1, float* %v.addr, align 4, !dbg !8058
  %4 = call float @llvm.floor.f32(float %sub1), !dbg !8059
  store float %4, float* %vfl, align 4, !dbg !8057
  call void @llvm.dbg.declare(metadata float* %uf, metadata !8060, metadata !DIExpression()), !dbg !8061
  %5 = load float, float* %u.addr, align 4, !dbg !8062
  %6 = load float, float* %ufl, align 4, !dbg !8063
  %sub2 = fsub float %5, %6, !dbg !8064
  store float %sub2, float* %uf, align 4, !dbg !8061
  call void @llvm.dbg.declare(metadata float* %vf, metadata !8065, metadata !DIExpression()), !dbg !8066
  %7 = load float, float* %v.addr, align 4, !dbg !8067
  %8 = load float, float* %vfl, align 4, !dbg !8068
  %sub3 = fsub float %7, %8, !dbg !8069
  store float %sub3, float* %vf, align 4, !dbg !8066
  call void @llvm.dbg.declare(metadata float* %w00, metadata !8070, metadata !DIExpression()), !dbg !8071
  %9 = load float, float* %uf, align 4, !dbg !8072
  %sub4 = fsub float 1.000000e+00, %9, !dbg !8073
  %10 = load float, float* %vf, align 4, !dbg !8074
  %sub5 = fsub float 1.000000e+00, %10, !dbg !8075
  %mul = fmul float %sub4, %sub5, !dbg !8076
  store float %mul, float* %w00, align 4, !dbg !8071
  call void @llvm.dbg.declare(metadata float* %w10, metadata !8077, metadata !DIExpression()), !dbg !8078
  %11 = load float, float* %uf, align 4, !dbg !8079
  %12 = load float, float* %vf, align 4, !dbg !8080
  %sub6 = fsub float 1.000000e+00, %12, !dbg !8081
  %mul7 = fmul float %11, %sub6, !dbg !8082
  store float %mul7, float* %w10, align 4, !dbg !8078
  call void @llvm.dbg.declare(metadata float* %w01, metadata !8083, metadata !DIExpression()), !dbg !8084
  %13 = load float, float* %uf, align 4, !dbg !8085
  %sub8 = fsub float 1.000000e+00, %13, !dbg !8086
  %14 = load float, float* %vf, align 4, !dbg !8087
  %mul9 = fmul float %sub8, %14, !dbg !8088
  store float %mul9, float* %w01, align 4, !dbg !8084
  call void @llvm.dbg.declare(metadata float* %w11, metadata !8089, metadata !DIExpression()), !dbg !8090
  %15 = load float, float* %uf, align 4, !dbg !8091
  %16 = load float, float* %vf, align 4, !dbg !8092
  %mul10 = fmul float %15, %16, !dbg !8093
  store float %mul10, float* %w11, align 4, !dbg !8090
  call void @llvm.dbg.declare(metadata i32* %x1, metadata !8094, metadata !DIExpression()), !dbg !8095
  %17 = load float, float* %ufl, align 4, !dbg !8096
  %conv = fptosi float %17 to i32, !dbg !8097
  store i32 %conv, i32* %x1, align 4, !dbg !8095
  call void @llvm.dbg.declare(metadata i32* %y1, metadata !8098, metadata !DIExpression()), !dbg !8099
  %18 = load float, float* %vfl, align 4, !dbg !8100
  %conv11 = fptosi float %18 to i32, !dbg !8101
  store i32 %conv11, i32* %y1, align 4, !dbg !8099
  call void @llvm.dbg.declare(metadata i32* %x2, metadata !8102, metadata !DIExpression()), !dbg !8103
  %19 = load i32, i32* %x1, align 4, !dbg !8104
  %add = add nsw i32 %19, 1, !dbg !8105
  store i32 %add, i32* %x2, align 4, !dbg !8103
  call void @llvm.dbg.declare(metadata i32* %y2, metadata !8106, metadata !DIExpression()), !dbg !8107
  %20 = load i32, i32* %y1, align 4, !dbg !8108
  %add12 = add nsw i32 %20, 1, !dbg !8109
  store i32 %add12, i32* %y2, align 4, !dbg !8107
  call void @llvm.dbg.declare(metadata i32* %clip, metadata !8110, metadata !DIExpression()), !dbg !8111
  %arraydecay = getelementptr inbounds [4 x float], [4 x float]* %c00, i64 0, i64 0, !dbg !8112
  %21 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !8113
  %22 = load i32, i32* %x1, align 4, !dbg !8114
  %23 = load i32, i32* %y1, align 4, !dbg !8115
  %24 = load i32, i32* %extflag.addr, align 4, !dbg !8116
  %call = call i32 @ibuf_get_color_clip(float* %arraydecay, %struct.ImBuf* %21, i32 %22, i32 %23, i32 %24), !dbg !8117
  store i32 %call, i32* %clip, align 4, !dbg !8111
  %arraydecay13 = getelementptr inbounds [4 x float], [4 x float]* %c10, i64 0, i64 0, !dbg !8118
  %25 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !8119
  %26 = load i32, i32* %x2, align 4, !dbg !8120
  %27 = load i32, i32* %y1, align 4, !dbg !8121
  %28 = load i32, i32* %extflag.addr, align 4, !dbg !8122
  %call14 = call i32 @ibuf_get_color_clip(float* %arraydecay13, %struct.ImBuf* %25, i32 %26, i32 %27, i32 %28), !dbg !8123
  %29 = load i32, i32* %clip, align 4, !dbg !8124
  %or = or i32 %29, %call14, !dbg !8124
  store i32 %or, i32* %clip, align 4, !dbg !8124
  %arraydecay15 = getelementptr inbounds [4 x float], [4 x float]* %c01, i64 0, i64 0, !dbg !8125
  %30 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !8126
  %31 = load i32, i32* %x1, align 4, !dbg !8127
  %32 = load i32, i32* %y2, align 4, !dbg !8128
  %33 = load i32, i32* %extflag.addr, align 4, !dbg !8129
  %call16 = call i32 @ibuf_get_color_clip(float* %arraydecay15, %struct.ImBuf* %30, i32 %31, i32 %32, i32 %33), !dbg !8130
  %34 = load i32, i32* %clip, align 4, !dbg !8131
  %or17 = or i32 %34, %call16, !dbg !8131
  store i32 %or17, i32* %clip, align 4, !dbg !8131
  %arraydecay18 = getelementptr inbounds [4 x float], [4 x float]* %c11, i64 0, i64 0, !dbg !8132
  %35 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !8133
  %36 = load i32, i32* %x2, align 4, !dbg !8134
  %37 = load i32, i32* %y2, align 4, !dbg !8135
  %38 = load i32, i32* %extflag.addr, align 4, !dbg !8136
  %call19 = call i32 @ibuf_get_color_clip(float* %arraydecay18, %struct.ImBuf* %35, i32 %36, i32 %37, i32 %38), !dbg !8137
  %39 = load i32, i32* %clip, align 4, !dbg !8138
  %or20 = or i32 %39, %call19, !dbg !8138
  store i32 %or20, i32* %clip, align 4, !dbg !8138
  %40 = load float, float* %w00, align 4, !dbg !8139
  %arrayidx = getelementptr inbounds [4 x float], [4 x float]* %c00, i64 0, i64 0, !dbg !8140
  %41 = load float, float* %arrayidx, align 16, !dbg !8140
  %mul21 = fmul float %40, %41, !dbg !8141
  %42 = load float, float* %w10, align 4, !dbg !8142
  %arrayidx22 = getelementptr inbounds [4 x float], [4 x float]* %c10, i64 0, i64 0, !dbg !8143
  %43 = load float, float* %arrayidx22, align 16, !dbg !8143
  %mul23 = fmul float %42, %43, !dbg !8144
  %add24 = fadd float %mul21, %mul23, !dbg !8145
  %44 = load float, float* %w01, align 4, !dbg !8146
  %arrayidx25 = getelementptr inbounds [4 x float], [4 x float]* %c01, i64 0, i64 0, !dbg !8147
  %45 = load float, float* %arrayidx25, align 16, !dbg !8147
  %mul26 = fmul float %44, %45, !dbg !8148
  %add27 = fadd float %add24, %mul26, !dbg !8149
  %46 = load float, float* %w11, align 4, !dbg !8150
  %arrayidx28 = getelementptr inbounds [4 x float], [4 x float]* %c11, i64 0, i64 0, !dbg !8151
  %47 = load float, float* %arrayidx28, align 16, !dbg !8151
  %mul29 = fmul float %46, %47, !dbg !8152
  %add30 = fadd float %add27, %mul29, !dbg !8153
  %48 = load float*, float** %col.addr, align 8, !dbg !8154
  %arrayidx31 = getelementptr inbounds float, float* %48, i64 0, !dbg !8154
  store float %add30, float* %arrayidx31, align 4, !dbg !8155
  %49 = load float, float* %w00, align 4, !dbg !8156
  %arrayidx32 = getelementptr inbounds [4 x float], [4 x float]* %c00, i64 0, i64 1, !dbg !8157
  %50 = load float, float* %arrayidx32, align 4, !dbg !8157
  %mul33 = fmul float %49, %50, !dbg !8158
  %51 = load float, float* %w10, align 4, !dbg !8159
  %arrayidx34 = getelementptr inbounds [4 x float], [4 x float]* %c10, i64 0, i64 1, !dbg !8160
  %52 = load float, float* %arrayidx34, align 4, !dbg !8160
  %mul35 = fmul float %51, %52, !dbg !8161
  %add36 = fadd float %mul33, %mul35, !dbg !8162
  %53 = load float, float* %w01, align 4, !dbg !8163
  %arrayidx37 = getelementptr inbounds [4 x float], [4 x float]* %c01, i64 0, i64 1, !dbg !8164
  %54 = load float, float* %arrayidx37, align 4, !dbg !8164
  %mul38 = fmul float %53, %54, !dbg !8165
  %add39 = fadd float %add36, %mul38, !dbg !8166
  %55 = load float, float* %w11, align 4, !dbg !8167
  %arrayidx40 = getelementptr inbounds [4 x float], [4 x float]* %c11, i64 0, i64 1, !dbg !8168
  %56 = load float, float* %arrayidx40, align 4, !dbg !8168
  %mul41 = fmul float %55, %56, !dbg !8169
  %add42 = fadd float %add39, %mul41, !dbg !8170
  %57 = load float*, float** %col.addr, align 8, !dbg !8171
  %arrayidx43 = getelementptr inbounds float, float* %57, i64 1, !dbg !8171
  store float %add42, float* %arrayidx43, align 4, !dbg !8172
  %58 = load float, float* %w00, align 4, !dbg !8173
  %arrayidx44 = getelementptr inbounds [4 x float], [4 x float]* %c00, i64 0, i64 2, !dbg !8174
  %59 = load float, float* %arrayidx44, align 8, !dbg !8174
  %mul45 = fmul float %58, %59, !dbg !8175
  %60 = load float, float* %w10, align 4, !dbg !8176
  %arrayidx46 = getelementptr inbounds [4 x float], [4 x float]* %c10, i64 0, i64 2, !dbg !8177
  %61 = load float, float* %arrayidx46, align 8, !dbg !8177
  %mul47 = fmul float %60, %61, !dbg !8178
  %add48 = fadd float %mul45, %mul47, !dbg !8179
  %62 = load float, float* %w01, align 4, !dbg !8180
  %arrayidx49 = getelementptr inbounds [4 x float], [4 x float]* %c01, i64 0, i64 2, !dbg !8181
  %63 = load float, float* %arrayidx49, align 8, !dbg !8181
  %mul50 = fmul float %62, %63, !dbg !8182
  %add51 = fadd float %add48, %mul50, !dbg !8183
  %64 = load float, float* %w11, align 4, !dbg !8184
  %arrayidx52 = getelementptr inbounds [4 x float], [4 x float]* %c11, i64 0, i64 2, !dbg !8185
  %65 = load float, float* %arrayidx52, align 8, !dbg !8185
  %mul53 = fmul float %64, %65, !dbg !8186
  %add54 = fadd float %add51, %mul53, !dbg !8187
  %66 = load float*, float** %col.addr, align 8, !dbg !8188
  %arrayidx55 = getelementptr inbounds float, float* %66, i64 2, !dbg !8188
  store float %add54, float* %arrayidx55, align 4, !dbg !8189
  %67 = load i32, i32* %clip, align 4, !dbg !8190
  %tobool56 = icmp ne i32 %67, 0, !dbg !8190
  br i1 %tobool56, label %cond.true, label %cond.false, !dbg !8190

cond.true:                                        ; preds = %if.then
  br label %cond.end, !dbg !8190

cond.false:                                       ; preds = %if.then
  %68 = load float, float* %w00, align 4, !dbg !8191
  %arrayidx57 = getelementptr inbounds [4 x float], [4 x float]* %c00, i64 0, i64 3, !dbg !8192
  %69 = load float, float* %arrayidx57, align 4, !dbg !8192
  %mul58 = fmul float %68, %69, !dbg !8193
  %70 = load float, float* %w10, align 4, !dbg !8194
  %arrayidx59 = getelementptr inbounds [4 x float], [4 x float]* %c10, i64 0, i64 3, !dbg !8195
  %71 = load float, float* %arrayidx59, align 4, !dbg !8195
  %mul60 = fmul float %70, %71, !dbg !8196
  %add61 = fadd float %mul58, %mul60, !dbg !8197
  %72 = load float, float* %w01, align 4, !dbg !8198
  %arrayidx62 = getelementptr inbounds [4 x float], [4 x float]* %c01, i64 0, i64 3, !dbg !8199
  %73 = load float, float* %arrayidx62, align 4, !dbg !8199
  %mul63 = fmul float %72, %73, !dbg !8200
  %add64 = fadd float %add61, %mul63, !dbg !8201
  %74 = load float, float* %w11, align 4, !dbg !8202
  %arrayidx65 = getelementptr inbounds [4 x float], [4 x float]* %c11, i64 0, i64 3, !dbg !8203
  %75 = load float, float* %arrayidx65, align 4, !dbg !8203
  %mul66 = fmul float %74, %75, !dbg !8204
  %add67 = fadd float %add64, %mul66, !dbg !8205
  br label %cond.end, !dbg !8190

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ 0.000000e+00, %cond.true ], [ %add67, %cond.false ], !dbg !8190
  %76 = load float*, float** %col.addr, align 8, !dbg !8206
  %arrayidx68 = getelementptr inbounds float, float* %76, i64 3, !dbg !8206
  store float %cond, float* %arrayidx68, align 4, !dbg !8207
  %77 = load i32, i32* %clip, align 4, !dbg !8208
  store i32 %77, i32* %retval, align 4, !dbg !8209
  br label %return, !dbg !8209

if.end:                                           ; preds = %entry
  %78 = load float*, float** %col.addr, align 8, !dbg !8210
  %79 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !8211
  %80 = load float, float* %u.addr, align 4, !dbg !8212
  %conv69 = fptosi float %80 to i32, !dbg !8213
  %81 = load float, float* %v.addr, align 4, !dbg !8214
  %conv70 = fptosi float %81 to i32, !dbg !8215
  %82 = load i32, i32* %extflag.addr, align 4, !dbg !8216
  %call71 = call i32 @ibuf_get_color_clip(float* %78, %struct.ImBuf* %79, i32 %conv69, i32 %conv70, i32 %82), !dbg !8217
  store i32 %call71, i32* %retval, align 4, !dbg !8218
  br label %return, !dbg !8218

return:                                           ; preds = %if.end, %cond.end
  %83 = load i32, i32* %retval, align 4, !dbg !8219
  ret i32 %83, !dbg !8219
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @ibuf_get_color_clip(float* %col, %struct.ImBuf* %ibuf, i32 %x, i32 %y, i32 %extflag) #0 !dbg !8220 {
entry:
  %col.addr = alloca float*, align 8
  %ibuf.addr = alloca %struct.ImBuf*, align 8
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %extflag.addr = alloca i32, align 4
  %clip = alloca i32, align 4
  %fp = alloca float*, align 8
  %rect = alloca i8*, align 8
  %inv_alpha_fac = alloca float, align 4
  store float* %col, float** %col.addr, align 8
  call void @llvm.dbg.declare(metadata float** %col.addr, metadata !8223, metadata !DIExpression()), !dbg !8224
  store %struct.ImBuf* %ibuf, %struct.ImBuf** %ibuf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf.addr, metadata !8225, metadata !DIExpression()), !dbg !8226
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !8227, metadata !DIExpression()), !dbg !8228
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !8229, metadata !DIExpression()), !dbg !8230
  store i32 %extflag, i32* %extflag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %extflag.addr, metadata !8231, metadata !DIExpression()), !dbg !8232
  call void @llvm.dbg.declare(metadata i32* %clip, metadata !8233, metadata !DIExpression()), !dbg !8234
  store i32 0, i32* %clip, align 4, !dbg !8234
  %0 = load i32, i32* %extflag.addr, align 4, !dbg !8235
  switch i32 %0, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb22
    i32 4, label %sw.bb53
    i32 3, label %sw.bb80
  ], !dbg !8236

sw.bb:                                            ; preds = %entry
  %1 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !8237
  %x1 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %1, i32 0, i32 2, !dbg !8239
  %2 = load i32, i32* %x1, align 8, !dbg !8239
  %mul = mul nsw i32 2, %2, !dbg !8240
  %3 = load i32, i32* %x.addr, align 4, !dbg !8241
  %rem = srem i32 %3, %mul, !dbg !8241
  store i32 %rem, i32* %x.addr, align 4, !dbg !8241
  %4 = load i32, i32* %x.addr, align 4, !dbg !8242
  %cmp = icmp slt i32 %4, 0, !dbg !8243
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !8242

cond.true:                                        ; preds = %sw.bb
  %5 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !8244
  %x2 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %5, i32 0, i32 2, !dbg !8245
  %6 = load i32, i32* %x2, align 8, !dbg !8245
  %mul3 = mul nsw i32 2, %6, !dbg !8246
  br label %cond.end, !dbg !8242

cond.false:                                       ; preds = %sw.bb
  br label %cond.end, !dbg !8242

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %mul3, %cond.true ], [ 0, %cond.false ], !dbg !8242
  %7 = load i32, i32* %x.addr, align 4, !dbg !8247
  %add = add nsw i32 %7, %cond, !dbg !8247
  store i32 %add, i32* %x.addr, align 4, !dbg !8247
  %8 = load i32, i32* %x.addr, align 4, !dbg !8248
  %9 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !8249
  %x4 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %9, i32 0, i32 2, !dbg !8250
  %10 = load i32, i32* %x4, align 8, !dbg !8250
  %cmp5 = icmp sge i32 %8, %10, !dbg !8251
  br i1 %cmp5, label %cond.true6, label %cond.false10, !dbg !8248

cond.true6:                                       ; preds = %cond.end
  %11 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !8252
  %x7 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %11, i32 0, i32 2, !dbg !8253
  %12 = load i32, i32* %x7, align 8, !dbg !8253
  %mul8 = mul nsw i32 2, %12, !dbg !8254
  %13 = load i32, i32* %x.addr, align 4, !dbg !8255
  %sub = sub nsw i32 %mul8, %13, !dbg !8256
  %sub9 = sub nsw i32 %sub, 1, !dbg !8257
  br label %cond.end11, !dbg !8248

cond.false10:                                     ; preds = %cond.end
  %14 = load i32, i32* %x.addr, align 4, !dbg !8258
  br label %cond.end11, !dbg !8248

cond.end11:                                       ; preds = %cond.false10, %cond.true6
  %cond12 = phi i32 [ %sub9, %cond.true6 ], [ %14, %cond.false10 ], !dbg !8248
  store i32 %cond12, i32* %x.addr, align 4, !dbg !8259
  %15 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !8260
  %y13 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %15, i32 0, i32 3, !dbg !8261
  %16 = load i32, i32* %y13, align 4, !dbg !8261
  %17 = load i32, i32* %y.addr, align 4, !dbg !8262
  %rem14 = srem i32 %17, %16, !dbg !8262
  store i32 %rem14, i32* %y.addr, align 4, !dbg !8262
  %18 = load i32, i32* %y.addr, align 4, !dbg !8263
  %cmp15 = icmp slt i32 %18, 0, !dbg !8264
  br i1 %cmp15, label %cond.true16, label %cond.false18, !dbg !8263

cond.true16:                                      ; preds = %cond.end11
  %19 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !8265
  %y17 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %19, i32 0, i32 3, !dbg !8266
  %20 = load i32, i32* %y17, align 4, !dbg !8266
  br label %cond.end19, !dbg !8263

cond.false18:                                     ; preds = %cond.end11
  br label %cond.end19, !dbg !8263

cond.end19:                                       ; preds = %cond.false18, %cond.true16
  %cond20 = phi i32 [ %20, %cond.true16 ], [ 0, %cond.false18 ], !dbg !8263
  %21 = load i32, i32* %y.addr, align 4, !dbg !8267
  %add21 = add nsw i32 %21, %cond20, !dbg !8267
  store i32 %add21, i32* %y.addr, align 4, !dbg !8267
  br label %sw.epilog, !dbg !8268

sw.bb22:                                          ; preds = %entry
  %22 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !8269
  %x23 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %22, i32 0, i32 2, !dbg !8270
  %23 = load i32, i32* %x23, align 8, !dbg !8270
  %24 = load i32, i32* %x.addr, align 4, !dbg !8271
  %rem24 = srem i32 %24, %23, !dbg !8271
  store i32 %rem24, i32* %x.addr, align 4, !dbg !8271
  %25 = load i32, i32* %x.addr, align 4, !dbg !8272
  %cmp25 = icmp slt i32 %25, 0, !dbg !8273
  br i1 %cmp25, label %cond.true26, label %cond.false28, !dbg !8272

cond.true26:                                      ; preds = %sw.bb22
  %26 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !8274
  %x27 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %26, i32 0, i32 2, !dbg !8275
  %27 = load i32, i32* %x27, align 8, !dbg !8275
  br label %cond.end29, !dbg !8272

cond.false28:                                     ; preds = %sw.bb22
  br label %cond.end29, !dbg !8272

cond.end29:                                       ; preds = %cond.false28, %cond.true26
  %cond30 = phi i32 [ %27, %cond.true26 ], [ 0, %cond.false28 ], !dbg !8272
  %28 = load i32, i32* %x.addr, align 4, !dbg !8276
  %add31 = add nsw i32 %28, %cond30, !dbg !8276
  store i32 %add31, i32* %x.addr, align 4, !dbg !8276
  %29 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !8277
  %y32 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %29, i32 0, i32 3, !dbg !8278
  %30 = load i32, i32* %y32, align 4, !dbg !8278
  %mul33 = mul nsw i32 2, %30, !dbg !8279
  %31 = load i32, i32* %y.addr, align 4, !dbg !8280
  %rem34 = srem i32 %31, %mul33, !dbg !8280
  store i32 %rem34, i32* %y.addr, align 4, !dbg !8280
  %32 = load i32, i32* %y.addr, align 4, !dbg !8281
  %cmp35 = icmp slt i32 %32, 0, !dbg !8282
  br i1 %cmp35, label %cond.true36, label %cond.false39, !dbg !8281

cond.true36:                                      ; preds = %cond.end29
  %33 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !8283
  %y37 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %33, i32 0, i32 3, !dbg !8284
  %34 = load i32, i32* %y37, align 4, !dbg !8284
  %mul38 = mul nsw i32 2, %34, !dbg !8285
  br label %cond.end40, !dbg !8281

cond.false39:                                     ; preds = %cond.end29
  br label %cond.end40, !dbg !8281

cond.end40:                                       ; preds = %cond.false39, %cond.true36
  %cond41 = phi i32 [ %mul38, %cond.true36 ], [ 0, %cond.false39 ], !dbg !8281
  %35 = load i32, i32* %y.addr, align 4, !dbg !8286
  %add42 = add nsw i32 %35, %cond41, !dbg !8286
  store i32 %add42, i32* %y.addr, align 4, !dbg !8286
  %36 = load i32, i32* %y.addr, align 4, !dbg !8287
  %37 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !8288
  %y43 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %37, i32 0, i32 3, !dbg !8289
  %38 = load i32, i32* %y43, align 4, !dbg !8289
  %cmp44 = icmp sge i32 %36, %38, !dbg !8290
  br i1 %cmp44, label %cond.true45, label %cond.false50, !dbg !8287

cond.true45:                                      ; preds = %cond.end40
  %39 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !8291
  %y46 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %39, i32 0, i32 3, !dbg !8292
  %40 = load i32, i32* %y46, align 4, !dbg !8292
  %mul47 = mul nsw i32 2, %40, !dbg !8293
  %41 = load i32, i32* %y.addr, align 4, !dbg !8294
  %sub48 = sub nsw i32 %mul47, %41, !dbg !8295
  %sub49 = sub nsw i32 %sub48, 1, !dbg !8296
  br label %cond.end51, !dbg !8287

cond.false50:                                     ; preds = %cond.end40
  %42 = load i32, i32* %y.addr, align 4, !dbg !8297
  br label %cond.end51, !dbg !8287

cond.end51:                                       ; preds = %cond.false50, %cond.true45
  %cond52 = phi i32 [ %sub49, %cond.true45 ], [ %42, %cond.false50 ], !dbg !8287
  store i32 %cond52, i32* %y.addr, align 4, !dbg !8298
  br label %sw.epilog, !dbg !8299

sw.bb53:                                          ; preds = %entry
  %43 = load i32, i32* %x.addr, align 4, !dbg !8300
  %cmp54 = icmp slt i32 %43, 0, !dbg !8301
  br i1 %cmp54, label %cond.true55, label %cond.false56, !dbg !8302

cond.true55:                                      ; preds = %sw.bb53
  br label %cond.end65, !dbg !8302

cond.false56:                                     ; preds = %sw.bb53
  %44 = load i32, i32* %x.addr, align 4, !dbg !8303
  %45 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !8304
  %x57 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %45, i32 0, i32 2, !dbg !8305
  %46 = load i32, i32* %x57, align 8, !dbg !8305
  %cmp58 = icmp sge i32 %44, %46, !dbg !8306
  br i1 %cmp58, label %cond.true59, label %cond.false62, !dbg !8307

cond.true59:                                      ; preds = %cond.false56
  %47 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !8308
  %x60 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %47, i32 0, i32 2, !dbg !8309
  %48 = load i32, i32* %x60, align 8, !dbg !8309
  %sub61 = sub nsw i32 %48, 1, !dbg !8310
  br label %cond.end63, !dbg !8307

cond.false62:                                     ; preds = %cond.false56
  %49 = load i32, i32* %x.addr, align 4, !dbg !8311
  br label %cond.end63, !dbg !8307

cond.end63:                                       ; preds = %cond.false62, %cond.true59
  %cond64 = phi i32 [ %sub61, %cond.true59 ], [ %49, %cond.false62 ], !dbg !8307
  br label %cond.end65, !dbg !8302

cond.end65:                                       ; preds = %cond.end63, %cond.true55
  %cond66 = phi i32 [ 0, %cond.true55 ], [ %cond64, %cond.end63 ], !dbg !8302
  store i32 %cond66, i32* %x.addr, align 4, !dbg !8312
  %50 = load i32, i32* %y.addr, align 4, !dbg !8313
  %cmp67 = icmp slt i32 %50, 0, !dbg !8314
  br i1 %cmp67, label %cond.true68, label %cond.false69, !dbg !8315

cond.true68:                                      ; preds = %cond.end65
  br label %cond.end78, !dbg !8315

cond.false69:                                     ; preds = %cond.end65
  %51 = load i32, i32* %y.addr, align 4, !dbg !8316
  %52 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !8317
  %y70 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %52, i32 0, i32 3, !dbg !8318
  %53 = load i32, i32* %y70, align 4, !dbg !8318
  %cmp71 = icmp sge i32 %51, %53, !dbg !8319
  br i1 %cmp71, label %cond.true72, label %cond.false75, !dbg !8320

cond.true72:                                      ; preds = %cond.false69
  %54 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !8321
  %y73 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %54, i32 0, i32 3, !dbg !8322
  %55 = load i32, i32* %y73, align 4, !dbg !8322
  %sub74 = sub nsw i32 %55, 1, !dbg !8323
  br label %cond.end76, !dbg !8320

cond.false75:                                     ; preds = %cond.false69
  %56 = load i32, i32* %y.addr, align 4, !dbg !8324
  br label %cond.end76, !dbg !8320

cond.end76:                                       ; preds = %cond.false75, %cond.true72
  %cond77 = phi i32 [ %sub74, %cond.true72 ], [ %56, %cond.false75 ], !dbg !8320
  br label %cond.end78, !dbg !8315

cond.end78:                                       ; preds = %cond.end76, %cond.true68
  %cond79 = phi i32 [ 0, %cond.true68 ], [ %cond77, %cond.end76 ], !dbg !8315
  store i32 %cond79, i32* %y.addr, align 4, !dbg !8325
  br label %sw.epilog, !dbg !8326

sw.bb80:                                          ; preds = %entry
  %57 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !8327
  %x81 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %57, i32 0, i32 2, !dbg !8328
  %58 = load i32, i32* %x81, align 8, !dbg !8328
  %59 = load i32, i32* %x.addr, align 4, !dbg !8329
  %rem82 = srem i32 %59, %58, !dbg !8329
  store i32 %rem82, i32* %x.addr, align 4, !dbg !8329
  %60 = load i32, i32* %x.addr, align 4, !dbg !8330
  %cmp83 = icmp slt i32 %60, 0, !dbg !8331
  br i1 %cmp83, label %cond.true84, label %cond.false86, !dbg !8332

cond.true84:                                      ; preds = %sw.bb80
  %61 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !8333
  %x85 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %61, i32 0, i32 2, !dbg !8334
  %62 = load i32, i32* %x85, align 8, !dbg !8334
  br label %cond.end87, !dbg !8332

cond.false86:                                     ; preds = %sw.bb80
  br label %cond.end87, !dbg !8332

cond.end87:                                       ; preds = %cond.false86, %cond.true84
  %cond88 = phi i32 [ %62, %cond.true84 ], [ 0, %cond.false86 ], !dbg !8332
  %63 = load i32, i32* %x.addr, align 4, !dbg !8335
  %add89 = add nsw i32 %63, %cond88, !dbg !8335
  store i32 %add89, i32* %x.addr, align 4, !dbg !8335
  %64 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !8336
  %y90 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %64, i32 0, i32 3, !dbg !8337
  %65 = load i32, i32* %y90, align 4, !dbg !8337
  %66 = load i32, i32* %y.addr, align 4, !dbg !8338
  %rem91 = srem i32 %66, %65, !dbg !8338
  store i32 %rem91, i32* %y.addr, align 4, !dbg !8338
  %67 = load i32, i32* %y.addr, align 4, !dbg !8339
  %cmp92 = icmp slt i32 %67, 0, !dbg !8340
  br i1 %cmp92, label %cond.true93, label %cond.false95, !dbg !8341

cond.true93:                                      ; preds = %cond.end87
  %68 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !8342
  %y94 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %68, i32 0, i32 3, !dbg !8343
  %69 = load i32, i32* %y94, align 4, !dbg !8343
  br label %cond.end96, !dbg !8341

cond.false95:                                     ; preds = %cond.end87
  br label %cond.end96, !dbg !8341

cond.end96:                                       ; preds = %cond.false95, %cond.true93
  %cond97 = phi i32 [ %69, %cond.true93 ], [ 0, %cond.false95 ], !dbg !8341
  %70 = load i32, i32* %y.addr, align 4, !dbg !8344
  %add98 = add nsw i32 %70, %cond97, !dbg !8344
  store i32 %add98, i32* %y.addr, align 4, !dbg !8344
  br label %sw.epilog, !dbg !8345

sw.default:                                       ; preds = %entry
  %71 = load i32, i32* %x.addr, align 4, !dbg !8346
  %cmp99 = icmp slt i32 %71, 0, !dbg !8349
  br i1 %cmp99, label %if.then, label %if.end, !dbg !8350

if.then:                                          ; preds = %sw.default
  store i32 0, i32* %x.addr, align 4, !dbg !8351
  br label %if.end, !dbg !8353

if.end:                                           ; preds = %if.then, %sw.default
  %72 = load i32, i32* %x.addr, align 4, !dbg !8354
  %73 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !8356
  %x100 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %73, i32 0, i32 2, !dbg !8357
  %74 = load i32, i32* %x100, align 8, !dbg !8357
  %cmp101 = icmp sge i32 %72, %74, !dbg !8358
  br i1 %cmp101, label %if.then102, label %if.end105, !dbg !8359

if.then102:                                       ; preds = %if.end
  %75 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !8360
  %x103 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %75, i32 0, i32 2, !dbg !8362
  %76 = load i32, i32* %x103, align 8, !dbg !8362
  %sub104 = sub nsw i32 %76, 1, !dbg !8363
  store i32 %sub104, i32* %x.addr, align 4, !dbg !8364
  br label %if.end105, !dbg !8365

if.end105:                                        ; preds = %if.then102, %if.end
  %77 = load i32, i32* %y.addr, align 4, !dbg !8366
  %cmp106 = icmp slt i32 %77, 0, !dbg !8368
  br i1 %cmp106, label %if.then107, label %if.end108, !dbg !8369

if.then107:                                       ; preds = %if.end105
  store i32 0, i32* %y.addr, align 4, !dbg !8370
  br label %if.end108, !dbg !8372

if.end108:                                        ; preds = %if.then107, %if.end105
  %78 = load i32, i32* %y.addr, align 4, !dbg !8373
  %79 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !8375
  %y109 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %79, i32 0, i32 3, !dbg !8376
  %80 = load i32, i32* %y109, align 4, !dbg !8376
  %cmp110 = icmp sge i32 %78, %80, !dbg !8377
  br i1 %cmp110, label %if.then111, label %if.end114, !dbg !8378

if.then111:                                       ; preds = %if.end108
  %81 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !8379
  %y112 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %81, i32 0, i32 3, !dbg !8381
  %82 = load i32, i32* %y112, align 4, !dbg !8381
  %sub113 = sub nsw i32 %82, 1, !dbg !8382
  store i32 %sub113, i32* %y.addr, align 4, !dbg !8383
  br label %if.end114, !dbg !8384

if.end114:                                        ; preds = %if.then111, %if.end108
  br label %sw.epilog, !dbg !8385

sw.epilog:                                        ; preds = %if.end114, %cond.end96, %cond.end78, %cond.end51, %cond.end19
  %83 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !8386
  %rect_float = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %83, i32 0, i32 9, !dbg !8388
  %84 = load float*, float** %rect_float, align 8, !dbg !8388
  %tobool = icmp ne float* %84, null, !dbg !8386
  br i1 %tobool, label %if.then115, label %if.else147, !dbg !8389

if.then115:                                       ; preds = %sw.epilog
  call void @llvm.dbg.declare(metadata float** %fp, metadata !8390, metadata !DIExpression()), !dbg !8392
  %85 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !8393
  %rect_float116 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %85, i32 0, i32 9, !dbg !8394
  %86 = load float*, float** %rect_float116, align 8, !dbg !8394
  %87 = load i32, i32* %x.addr, align 4, !dbg !8395
  %88 = load i32, i32* %y.addr, align 4, !dbg !8396
  %89 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !8397
  %x117 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %89, i32 0, i32 2, !dbg !8398
  %90 = load i32, i32* %x117, align 8, !dbg !8398
  %mul118 = mul nsw i32 %88, %90, !dbg !8399
  %add119 = add nsw i32 %87, %mul118, !dbg !8400
  %91 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !8401
  %channels = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %91, i32 0, i32 5, !dbg !8402
  %92 = load i32, i32* %channels, align 4, !dbg !8402
  %mul120 = mul nsw i32 %add119, %92, !dbg !8403
  %idx.ext = sext i32 %mul120 to i64, !dbg !8404
  %add.ptr = getelementptr inbounds float, float* %86, i64 %idx.ext, !dbg !8404
  store float* %add.ptr, float** %fp, align 8, !dbg !8392
  %93 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !8405
  %channels121 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %93, i32 0, i32 5, !dbg !8407
  %94 = load i32, i32* %channels121, align 4, !dbg !8407
  %cmp122 = icmp eq i32 %94, 1, !dbg !8408
  br i1 %cmp122, label %if.then123, label %if.else, !dbg !8409

if.then123:                                       ; preds = %if.then115
  %95 = load float*, float** %fp, align 8, !dbg !8410
  %96 = load float, float* %95, align 4, !dbg !8411
  %97 = load float*, float** %col.addr, align 8, !dbg !8412
  %arrayidx = getelementptr inbounds float, float* %97, i64 3, !dbg !8412
  store float %96, float* %arrayidx, align 4, !dbg !8413
  %98 = load float*, float** %col.addr, align 8, !dbg !8414
  %arrayidx124 = getelementptr inbounds float, float* %98, i64 2, !dbg !8414
  store float %96, float* %arrayidx124, align 4, !dbg !8415
  %99 = load float*, float** %col.addr, align 8, !dbg !8416
  %arrayidx125 = getelementptr inbounds float, float* %99, i64 1, !dbg !8416
  store float %96, float* %arrayidx125, align 4, !dbg !8417
  %100 = load float*, float** %col.addr, align 8, !dbg !8418
  %arrayidx126 = getelementptr inbounds float, float* %100, i64 0, !dbg !8418
  store float %96, float* %arrayidx126, align 4, !dbg !8419
  br label %if.end146, !dbg !8418

if.else:                                          ; preds = %if.then115
  %101 = load float*, float** %fp, align 8, !dbg !8420
  %arrayidx127 = getelementptr inbounds float, float* %101, i64 0, !dbg !8420
  %102 = load float, float* %arrayidx127, align 4, !dbg !8420
  %103 = load float*, float** %col.addr, align 8, !dbg !8422
  %arrayidx128 = getelementptr inbounds float, float* %103, i64 0, !dbg !8422
  store float %102, float* %arrayidx128, align 4, !dbg !8423
  %104 = load float*, float** %fp, align 8, !dbg !8424
  %arrayidx129 = getelementptr inbounds float, float* %104, i64 1, !dbg !8424
  %105 = load float, float* %arrayidx129, align 4, !dbg !8424
  %106 = load float*, float** %col.addr, align 8, !dbg !8425
  %arrayidx130 = getelementptr inbounds float, float* %106, i64 1, !dbg !8425
  store float %105, float* %arrayidx130, align 4, !dbg !8426
  %107 = load float*, float** %fp, align 8, !dbg !8427
  %arrayidx131 = getelementptr inbounds float, float* %107, i64 2, !dbg !8427
  %108 = load float, float* %arrayidx131, align 4, !dbg !8427
  %109 = load float*, float** %col.addr, align 8, !dbg !8428
  %arrayidx132 = getelementptr inbounds float, float* %109, i64 2, !dbg !8428
  store float %108, float* %arrayidx132, align 4, !dbg !8429
  %110 = load i32, i32* %clip, align 4, !dbg !8430
  %tobool133 = icmp ne i32 %110, 0, !dbg !8430
  br i1 %tobool133, label %cond.true134, label %cond.false135, !dbg !8430

cond.true134:                                     ; preds = %if.else
  br label %cond.end143, !dbg !8430

cond.false135:                                    ; preds = %if.else
  %111 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !8431
  %channels136 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %111, i32 0, i32 5, !dbg !8432
  %112 = load i32, i32* %channels136, align 4, !dbg !8432
  %cmp137 = icmp eq i32 %112, 4, !dbg !8433
  br i1 %cmp137, label %cond.true138, label %cond.false140, !dbg !8431

cond.true138:                                     ; preds = %cond.false135
  %113 = load float*, float** %fp, align 8, !dbg !8434
  %arrayidx139 = getelementptr inbounds float, float* %113, i64 3, !dbg !8434
  %114 = load float, float* %arrayidx139, align 4, !dbg !8434
  br label %cond.end141, !dbg !8431

cond.false140:                                    ; preds = %cond.false135
  br label %cond.end141, !dbg !8431

cond.end141:                                      ; preds = %cond.false140, %cond.true138
  %cond142 = phi float [ %114, %cond.true138 ], [ 1.000000e+00, %cond.false140 ], !dbg !8431
  br label %cond.end143, !dbg !8430

cond.end143:                                      ; preds = %cond.end141, %cond.true134
  %cond144 = phi float [ 0.000000e+00, %cond.true134 ], [ %cond142, %cond.end141 ], !dbg !8430
  %115 = load float*, float** %col.addr, align 8, !dbg !8435
  %arrayidx145 = getelementptr inbounds float, float* %115, i64 3, !dbg !8435
  store float %cond144, float* %arrayidx145, align 4, !dbg !8436
  br label %if.end146

if.end146:                                        ; preds = %cond.end143, %if.then123
  br label %if.end184, !dbg !8437

if.else147:                                       ; preds = %sw.epilog
  call void @llvm.dbg.declare(metadata i8** %rect, metadata !8438, metadata !DIExpression()), !dbg !8440
  %116 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !8441
  %rect148 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %116, i32 0, i32 8, !dbg !8442
  %117 = load i32*, i32** %rect148, align 8, !dbg !8442
  %118 = load i32, i32* %x.addr, align 4, !dbg !8443
  %idx.ext149 = sext i32 %118 to i64, !dbg !8444
  %add.ptr150 = getelementptr inbounds i32, i32* %117, i64 %idx.ext149, !dbg !8444
  %119 = load i32, i32* %y.addr, align 4, !dbg !8445
  %120 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !8446
  %x151 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %120, i32 0, i32 2, !dbg !8447
  %121 = load i32, i32* %x151, align 8, !dbg !8447
  %mul152 = mul nsw i32 %119, %121, !dbg !8448
  %idx.ext153 = sext i32 %mul152 to i64, !dbg !8449
  %add.ptr154 = getelementptr inbounds i32, i32* %add.ptr150, i64 %idx.ext153, !dbg !8449
  %122 = bitcast i32* %add.ptr154 to i8*, !dbg !8450
  store i8* %122, i8** %rect, align 8, !dbg !8440
  call void @llvm.dbg.declare(metadata float* %inv_alpha_fac, metadata !8451, metadata !DIExpression()), !dbg !8452
  %123 = load i8*, i8** %rect, align 8, !dbg !8453
  %arrayidx155 = getelementptr inbounds i8, i8* %123, i64 3, !dbg !8453
  %124 = load i8, i8* %arrayidx155, align 1, !dbg !8453
  %conv = zext i8 %124 to i32, !dbg !8453
  %conv156 = sitofp i32 %conv to float, !dbg !8453
  %mul157 = fmul float 0x3F70101020000000, %conv156, !dbg !8454
  %mul158 = fmul float %mul157, 0x3F70101020000000, !dbg !8455
  store float %mul158, float* %inv_alpha_fac, align 4, !dbg !8452
  %125 = load i8*, i8** %rect, align 8, !dbg !8456
  %arrayidx159 = getelementptr inbounds i8, i8* %125, i64 0, !dbg !8456
  %126 = load i8, i8* %arrayidx159, align 1, !dbg !8456
  %conv160 = zext i8 %126 to i32, !dbg !8456
  %conv161 = sitofp i32 %conv160 to float, !dbg !8456
  %127 = load float, float* %inv_alpha_fac, align 4, !dbg !8457
  %mul162 = fmul float %conv161, %127, !dbg !8458
  %128 = load float*, float** %col.addr, align 8, !dbg !8459
  %arrayidx163 = getelementptr inbounds float, float* %128, i64 0, !dbg !8459
  store float %mul162, float* %arrayidx163, align 4, !dbg !8460
  %129 = load i8*, i8** %rect, align 8, !dbg !8461
  %arrayidx164 = getelementptr inbounds i8, i8* %129, i64 1, !dbg !8461
  %130 = load i8, i8* %arrayidx164, align 1, !dbg !8461
  %conv165 = zext i8 %130 to i32, !dbg !8461
  %conv166 = sitofp i32 %conv165 to float, !dbg !8461
  %131 = load float, float* %inv_alpha_fac, align 4, !dbg !8462
  %mul167 = fmul float %conv166, %131, !dbg !8463
  %132 = load float*, float** %col.addr, align 8, !dbg !8464
  %arrayidx168 = getelementptr inbounds float, float* %132, i64 1, !dbg !8464
  store float %mul167, float* %arrayidx168, align 4, !dbg !8465
  %133 = load i8*, i8** %rect, align 8, !dbg !8466
  %arrayidx169 = getelementptr inbounds i8, i8* %133, i64 2, !dbg !8466
  %134 = load i8, i8* %arrayidx169, align 1, !dbg !8466
  %conv170 = zext i8 %134 to i32, !dbg !8466
  %conv171 = sitofp i32 %conv170 to float, !dbg !8466
  %135 = load float, float* %inv_alpha_fac, align 4, !dbg !8467
  %mul172 = fmul float %conv171, %135, !dbg !8468
  %136 = load float*, float** %col.addr, align 8, !dbg !8469
  %arrayidx173 = getelementptr inbounds float, float* %136, i64 2, !dbg !8469
  store float %mul172, float* %arrayidx173, align 4, !dbg !8470
  %137 = load i32, i32* %clip, align 4, !dbg !8471
  %tobool174 = icmp ne i32 %137, 0, !dbg !8471
  br i1 %tobool174, label %cond.true175, label %cond.false176, !dbg !8471

cond.true175:                                     ; preds = %if.else147
  br label %cond.end181, !dbg !8471

cond.false176:                                    ; preds = %if.else147
  %138 = load i8*, i8** %rect, align 8, !dbg !8472
  %arrayidx177 = getelementptr inbounds i8, i8* %138, i64 3, !dbg !8472
  %139 = load i8, i8* %arrayidx177, align 1, !dbg !8472
  %conv178 = zext i8 %139 to i32, !dbg !8472
  %conv179 = sitofp i32 %conv178 to float, !dbg !8472
  %mul180 = fmul float %conv179, 0x3F70101020000000, !dbg !8473
  br label %cond.end181, !dbg !8471

cond.end181:                                      ; preds = %cond.false176, %cond.true175
  %cond182 = phi float [ 0.000000e+00, %cond.true175 ], [ %mul180, %cond.false176 ], !dbg !8471
  %140 = load float*, float** %col.addr, align 8, !dbg !8474
  %arrayidx183 = getelementptr inbounds float, float* %140, i64 3, !dbg !8474
  store float %cond182, float* %arrayidx183, align 4, !dbg !8475
  br label %if.end184

if.end184:                                        ; preds = %cond.end181, %if.end146
  %141 = load i32, i32* %clip, align 4, !dbg !8476
  ret i32 %141, !dbg !8477
}

declare dso_local void @BLI_lock_thread(i32) #2

declare dso_local void @IMB_remakemipmap(%struct.ImBuf*, i32) #2

declare dso_local void @BLI_unlock_thread(i32) #2

declare dso_local void @IMB_makemipmap(%struct.ImBuf*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal float @min_ff(float %a, float %b) #0 !dbg !8478 {
entry:
  %a.addr = alloca float, align 4
  %b.addr = alloca float, align 4
  store float %a, float* %a.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a.addr, metadata !8479, metadata !DIExpression()), !dbg !8480
  store float %b, float* %b.addr, align 4
  call void @llvm.dbg.declare(metadata float* %b.addr, metadata !8481, metadata !DIExpression()), !dbg !8482
  %0 = load float, float* %a.addr, align 4, !dbg !8483
  %1 = load float, float* %b.addr, align 4, !dbg !8484
  %cmp = fcmp olt float %0, %1, !dbg !8485
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !8486

cond.true:                                        ; preds = %entry
  %2 = load float, float* %a.addr, align 4, !dbg !8487
  br label %cond.end, !dbg !8486

cond.false:                                       ; preds = %entry
  %3 = load float, float* %b.addr, align 4, !dbg !8488
  br label %cond.end, !dbg !8486

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %2, %cond.true ], [ %3, %cond.false ], !dbg !8486
  ret float %cond, !dbg !8489
}

declare dso_local void @BLI_ewa_filter(i32, i32, i8 zeroext, i8 zeroext, float*, float*, float*, void (i8*, i32, i32, float*)*, i8*, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @ewa_read_pixel_cb(i8* %userdata, i32 %x, i32 %y, float* %result) #0 !dbg !8490 {
entry:
  %userdata.addr = alloca i8*, align 8
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %result.addr = alloca float*, align 8
  %data = alloca %struct.ReadEWAData*, align 8
  store i8* %userdata, i8** %userdata.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %userdata.addr, metadata !8493, metadata !DIExpression()), !dbg !8494
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !8495, metadata !DIExpression()), !dbg !8496
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !8497, metadata !DIExpression()), !dbg !8498
  store float* %result, float** %result.addr, align 8
  call void @llvm.dbg.declare(metadata float** %result.addr, metadata !8499, metadata !DIExpression()), !dbg !8500
  call void @llvm.dbg.declare(metadata %struct.ReadEWAData** %data, metadata !8501, metadata !DIExpression()), !dbg !8502
  %0 = load i8*, i8** %userdata.addr, align 8, !dbg !8503
  %1 = bitcast i8* %0 to %struct.ReadEWAData*, !dbg !8504
  store %struct.ReadEWAData* %1, %struct.ReadEWAData** %data, align 8, !dbg !8502
  %2 = load float*, float** %result.addr, align 8, !dbg !8505
  %3 = load %struct.ReadEWAData*, %struct.ReadEWAData** %data, align 8, !dbg !8506
  %ibuf = getelementptr inbounds %struct.ReadEWAData, %struct.ReadEWAData* %3, i32 0, i32 0, !dbg !8507
  %4 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !8507
  %5 = load i32, i32* %x.addr, align 4, !dbg !8508
  %6 = load i32, i32* %y.addr, align 4, !dbg !8509
  %7 = load %struct.ReadEWAData*, %struct.ReadEWAData** %data, align 8, !dbg !8510
  %AFD = getelementptr inbounds %struct.ReadEWAData, %struct.ReadEWAData* %7, i32 0, i32 1, !dbg !8511
  %8 = load %struct.afdata_t*, %struct.afdata_t** %AFD, align 8, !dbg !8511
  %extflag = getelementptr inbounds %struct.afdata_t, %struct.afdata_t* %8, i32 0, i32 3, !dbg !8512
  %9 = load i32, i32* %extflag, align 4, !dbg !8512
  %call = call i32 @ibuf_get_color_clip(float* %2, %struct.ImBuf* %4, i32 %5, i32 %6, i32 %9), !dbg !8513
  ret void, !dbg !8514
}

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind willreturn }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!135, !136, !137}
!llvm.ident = !{!138}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !23, splitDebugInlining: false, nameTableKind: None)
!1 = !DIFile(filename: "blender/source/blender/render/intern/source/imagetexture.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2 = !{!3, !17}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !4, line: 133, baseType: !5, size: 32, elements: !6)
!4 = !DIFile(filename: "blender/source/blender/makesdna/DNA_image_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!5 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!6 = !{!7, !8, !9, !10, !11, !12, !13, !14, !15, !16}
!7 = !DIEnumerator(name: "IMA_FIELDS", value: 1, isUnsigned: true)
!8 = !DIEnumerator(name: "IMA_STD_FIELD", value: 2, isUnsigned: true)
!9 = !DIEnumerator(name: "IMA_DO_PREMUL", value: 4, isUnsigned: true)
!10 = !DIEnumerator(name: "IMA_REFLECT", value: 16, isUnsigned: true)
!11 = !DIEnumerator(name: "IMA_NOCOLLECT", value: 32, isUnsigned: true)
!12 = !DIEnumerator(name: "IMA_OLD_PREMUL", value: 128, isUnsigned: true)
!13 = !DIEnumerator(name: "IMA_USED_FOR_RENDER", value: 512, isUnsigned: true)
!14 = !DIEnumerator(name: "IMA_USER_FRAME_IN_RANGE", value: 1024, isUnsigned: true)
!15 = !DIEnumerator(name: "IMA_VIEW_AS_RENDER", value: 2048, isUnsigned: true)
!16 = !DIEnumerator(name: "IMA_IGNORE_ALPHA", value: 4096, isUnsigned: true)
!17 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1, line: 672, baseType: !5, size: 32, elements: !18)
!18 = !{!19, !20, !21, !22}
!19 = !DIEnumerator(name: "TXC_XMIR", value: 1, isUnsigned: true)
!20 = !DIEnumerator(name: "TXC_YMIR", value: 2, isUnsigned: true)
!21 = !DIEnumerator(name: "TXC_REPT", value: 3, isUnsigned: true)
!22 = !DIEnumerator(name: "TXC_EXTD", value: 4, isUnsigned: true)
!23 = !{!24, !25, !26, !27, !29}
!24 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!25 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!26 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!27 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !28, size: 64)
!28 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!29 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !30, size: 64)
!30 = !DIDerivedType(tag: DW_TAG_typedef, name: "ReadEWAData", file: !1, line: 797, baseType: !31)
!31 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ReadEWAData", file: !1, line: 794, size: 128, elements: !32)
!32 = !{!33, !119}
!33 = !DIDerivedType(tag: DW_TAG_member, name: "ibuf", scope: !31, file: !1, line: 795, baseType: !34, size: 64)
!34 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !35, size: 64)
!35 = !DIDerivedType(tag: DW_TAG_typedef, name: "ImBuf", file: !36, line: 141, baseType: !37)
!36 = !DIFile(filename: "blender/source/blender/imbuf/IMB_imbuf_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!37 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImBuf", file: !36, line: 70, size: 19840, elements: !38)
!38 = !{!39, !41, !42, !43, !44, !46, !47, !48, !49, !51, !53, !58, !59, !60, !61, !62, !64, !66, !67, !68, !72, !73, !74, !75, !76, !79, !80, !81, !85, !86, !89, !90, !92, !93, !94, !97, !98, !99, !102, !103, !112}
!39 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !37, file: !36, line: 71, baseType: !40, size: 64)
!40 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !37, size: 64)
!41 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !37, file: !36, line: 71, baseType: !40, size: 64, offset: 64)
!42 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !37, file: !36, line: 74, baseType: !25, size: 32, offset: 128)
!43 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !37, file: !36, line: 74, baseType: !25, size: 32, offset: 160)
!44 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !37, file: !36, line: 79, baseType: !45, size: 8, offset: 192)
!45 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!46 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !37, file: !36, line: 80, baseType: !25, size: 32, offset: 224)
!47 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !37, file: !36, line: 83, baseType: !25, size: 32, offset: 256)
!48 = !DIDerivedType(tag: DW_TAG_member, name: "mall", scope: !37, file: !36, line: 84, baseType: !25, size: 32, offset: 288)
!49 = !DIDerivedType(tag: DW_TAG_member, name: "rect", scope: !37, file: !36, line: 87, baseType: !50, size: 64, offset: 320)
!50 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5, size: 64)
!51 = !DIDerivedType(tag: DW_TAG_member, name: "rect_float", scope: !37, file: !36, line: 88, baseType: !52, size: 64, offset: 384)
!52 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !26, size: 64)
!53 = !DIDerivedType(tag: DW_TAG_member, name: "ppm", scope: !37, file: !36, line: 93, baseType: !54, size: 128, offset: 448)
!54 = !DICompositeType(tag: DW_TAG_array_type, baseType: !55, size: 128, elements: !56)
!55 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!56 = !{!57}
!57 = !DISubrange(count: 2)
!58 = !DIDerivedType(tag: DW_TAG_member, name: "tilex", scope: !37, file: !36, line: 96, baseType: !25, size: 32, offset: 576)
!59 = !DIDerivedType(tag: DW_TAG_member, name: "tiley", scope: !37, file: !36, line: 96, baseType: !25, size: 32, offset: 608)
!60 = !DIDerivedType(tag: DW_TAG_member, name: "xtiles", scope: !37, file: !36, line: 97, baseType: !25, size: 32, offset: 640)
!61 = !DIDerivedType(tag: DW_TAG_member, name: "ytiles", scope: !37, file: !36, line: 97, baseType: !25, size: 32, offset: 672)
!62 = !DIDerivedType(tag: DW_TAG_member, name: "tiles", scope: !37, file: !36, line: 98, baseType: !63, size: 64, offset: 704)
!63 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !50, size: 64)
!64 = !DIDerivedType(tag: DW_TAG_member, name: "zbuf", scope: !37, file: !36, line: 101, baseType: !65, size: 64, offset: 768)
!65 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !25, size: 64)
!66 = !DIDerivedType(tag: DW_TAG_member, name: "zbuf_float", scope: !37, file: !36, line: 102, baseType: !52, size: 64, offset: 832)
!67 = !DIDerivedType(tag: DW_TAG_member, name: "dither", scope: !37, file: !36, line: 105, baseType: !26, size: 32, offset: 896)
!68 = !DIDerivedType(tag: DW_TAG_member, name: "mipmap", scope: !37, file: !36, line: 108, baseType: !69, size: 1280, offset: 960)
!69 = !DICompositeType(tag: DW_TAG_array_type, baseType: !40, size: 1280, elements: !70)
!70 = !{!71}
!71 = !DISubrange(count: 20)
!72 = !DIDerivedType(tag: DW_TAG_member, name: "miptot", scope: !37, file: !36, line: 109, baseType: !25, size: 32, offset: 2240)
!73 = !DIDerivedType(tag: DW_TAG_member, name: "miplevel", scope: !37, file: !36, line: 109, baseType: !25, size: 32, offset: 2272)
!74 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !37, file: !36, line: 112, baseType: !25, size: 32, offset: 2304)
!75 = !DIDerivedType(tag: DW_TAG_member, name: "userflags", scope: !37, file: !36, line: 113, baseType: !25, size: 32, offset: 2336)
!76 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !37, file: !36, line: 114, baseType: !77, size: 64, offset: 2368)
!77 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !78, size: 64)
!78 = !DICompositeType(tag: DW_TAG_structure_type, name: "ImMetaData", file: !36, line: 50, flags: DIFlagFwdDecl)
!79 = !DIDerivedType(tag: DW_TAG_member, name: "userdata", scope: !37, file: !36, line: 115, baseType: !24, size: 64, offset: 2432)
!80 = !DIDerivedType(tag: DW_TAG_member, name: "ftype", scope: !37, file: !36, line: 118, baseType: !25, size: 32, offset: 2496)
!81 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !37, file: !36, line: 119, baseType: !82, size: 8192, offset: 2528)
!82 = !DICompositeType(tag: DW_TAG_array_type, baseType: !28, size: 8192, elements: !83)
!83 = !{!84}
!84 = !DISubrange(count: 1024)
!85 = !DIDerivedType(tag: DW_TAG_member, name: "cachename", scope: !37, file: !36, line: 120, baseType: !82, size: 8192, offset: 10720)
!86 = !DIDerivedType(tag: DW_TAG_member, name: "c_handle", scope: !37, file: !36, line: 123, baseType: !87, size: 64, offset: 18944)
!87 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !88, size: 64)
!88 = !DICompositeType(tag: DW_TAG_structure_type, name: "MEM_CacheLimiterHandle_s", file: !36, line: 123, flags: DIFlagFwdDecl)
!89 = !DIDerivedType(tag: DW_TAG_member, name: "refcounter", scope: !37, file: !36, line: 124, baseType: !25, size: 32, offset: 19008)
!90 = !DIDerivedType(tag: DW_TAG_member, name: "encodedbuffer", scope: !37, file: !36, line: 127, baseType: !91, size: 64, offset: 19072)
!91 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !45, size: 64)
!92 = !DIDerivedType(tag: DW_TAG_member, name: "encodedsize", scope: !37, file: !36, line: 128, baseType: !5, size: 32, offset: 19136)
!93 = !DIDerivedType(tag: DW_TAG_member, name: "encodedbuffersize", scope: !37, file: !36, line: 129, baseType: !5, size: 32, offset: 19168)
!94 = !DIDerivedType(tag: DW_TAG_member, name: "rect_colorspace", scope: !37, file: !36, line: 132, baseType: !95, size: 64, offset: 19200)
!95 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !96, size: 64)
!96 = !DICompositeType(tag: DW_TAG_structure_type, name: "ColorSpace", file: !36, line: 132, flags: DIFlagFwdDecl)
!97 = !DIDerivedType(tag: DW_TAG_member, name: "float_colorspace", scope: !37, file: !36, line: 133, baseType: !95, size: 64, offset: 19264)
!98 = !DIDerivedType(tag: DW_TAG_member, name: "display_buffer_flags", scope: !37, file: !36, line: 134, baseType: !50, size: 64, offset: 19328)
!99 = !DIDerivedType(tag: DW_TAG_member, name: "colormanage_cache", scope: !37, file: !36, line: 135, baseType: !100, size: 64, offset: 19392)
!100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !101, size: 64)
!101 = !DICompositeType(tag: DW_TAG_structure_type, name: "ColormanageCache", file: !36, line: 135, flags: DIFlagFwdDecl)
!102 = !DIDerivedType(tag: DW_TAG_member, name: "colormanage_flag", scope: !37, file: !36, line: 136, baseType: !25, size: 32, offset: 19456)
!103 = !DIDerivedType(tag: DW_TAG_member, name: "invalid_rect", scope: !37, file: !36, line: 137, baseType: !104, size: 128, offset: 19488)
!104 = !DIDerivedType(tag: DW_TAG_typedef, name: "rcti", file: !105, line: 89, baseType: !106)
!105 = !DIFile(filename: "blender/source/blender/makesdna/DNA_vec_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!106 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcti", file: !105, line: 86, size: 128, elements: !107)
!107 = !{!108, !109, !110, !111}
!108 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !106, file: !105, line: 87, baseType: !25, size: 32)
!109 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !106, file: !105, line: 87, baseType: !25, size: 32, offset: 32)
!110 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !106, file: !105, line: 88, baseType: !25, size: 32, offset: 64)
!111 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !106, file: !105, line: 88, baseType: !25, size: 32, offset: 96)
!112 = !DIDerivedType(tag: DW_TAG_member, name: "dds_data", scope: !37, file: !36, line: 140, baseType: !113, size: 192, offset: 19648)
!113 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DDSData", file: !36, line: 55, size: 192, elements: !114)
!114 = !{!115, !116, !117, !118}
!115 = !DIDerivedType(tag: DW_TAG_member, name: "fourcc", scope: !113, file: !36, line: 56, baseType: !5, size: 32)
!116 = !DIDerivedType(tag: DW_TAG_member, name: "nummipmaps", scope: !113, file: !36, line: 57, baseType: !5, size: 32, offset: 32)
!117 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !113, file: !36, line: 58, baseType: !91, size: 64, offset: 64)
!118 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !113, file: !36, line: 59, baseType: !5, size: 32, offset: 128)
!119 = !DIDerivedType(tag: DW_TAG_member, name: "AFD", scope: !31, file: !1, line: 796, baseType: !120, size: 64, offset: 64)
!120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !121, size: 64)
!121 = !DIDerivedType(tag: DW_TAG_typedef, name: "afdata_t", file: !1, line: 669, baseType: !122)
!122 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "afdata_t", file: !1, line: 662, size: 384, elements: !123)
!123 = !{!124, !126, !127, !128, !129, !130, !131, !132, !133, !134}
!124 = !DIDerivedType(tag: DW_TAG_member, name: "dxt", scope: !122, file: !1, line: 663, baseType: !125, size: 64)
!125 = !DICompositeType(tag: DW_TAG_array_type, baseType: !26, size: 64, elements: !56)
!126 = !DIDerivedType(tag: DW_TAG_member, name: "dyt", scope: !122, file: !1, line: 663, baseType: !125, size: 64, offset: 64)
!127 = !DIDerivedType(tag: DW_TAG_member, name: "intpol", scope: !122, file: !1, line: 664, baseType: !25, size: 32, offset: 128)
!128 = !DIDerivedType(tag: DW_TAG_member, name: "extflag", scope: !122, file: !1, line: 664, baseType: !25, size: 32, offset: 160)
!129 = !DIDerivedType(tag: DW_TAG_member, name: "majrad", scope: !122, file: !1, line: 666, baseType: !26, size: 32, offset: 192)
!130 = !DIDerivedType(tag: DW_TAG_member, name: "minrad", scope: !122, file: !1, line: 666, baseType: !26, size: 32, offset: 224)
!131 = !DIDerivedType(tag: DW_TAG_member, name: "theta", scope: !122, file: !1, line: 666, baseType: !26, size: 32, offset: 256)
!132 = !DIDerivedType(tag: DW_TAG_member, name: "iProbes", scope: !122, file: !1, line: 667, baseType: !25, size: 32, offset: 288)
!133 = !DIDerivedType(tag: DW_TAG_member, name: "dusc", scope: !122, file: !1, line: 668, baseType: !26, size: 32, offset: 320)
!134 = !DIDerivedType(tag: DW_TAG_member, name: "dvsc", scope: !122, file: !1, line: 668, baseType: !26, size: 32, offset: 352)
!135 = !{i32 7, !"Dwarf Version", i32 4}
!136 = !{i32 2, !"Debug Info Version", i32 3}
!137 = !{i32 1, !"wchar_size", i32 4}
!138 = !{!"clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)"}
!139 = distinct !DISubprogram(name: "imagewrap", scope: !1, file: !1, line: 108, type: !140, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1638)
!140 = !DISubroutineType(types: !141)
!141 = !{!25, !142, !1619, !34, !1621, !1623, !1635}
!142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !143, size: 64)
!143 = !DIDerivedType(tag: DW_TAG_typedef, name: "Tex", file: !144, line: 261, baseType: !145)
!144 = !DIFile(filename: "blender/source/blender/makesdna/DNA_texture_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!145 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Tex", file: !144, line: 202, size: 3328, elements: !146)
!146 = !{!147, !213, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !1511, !1512, !1513, !1514, !1535, !1559, !1560, !1589, !1609, !1617, !1618}
!147 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !145, file: !144, line: 203, baseType: !148, size: 960)
!148 = !DIDerivedType(tag: DW_TAG_typedef, name: "ID", file: !149, line: 130, baseType: !150)
!149 = !DIFile(filename: "blender/source/blender/makesdna/DNA_ID.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!150 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ID", file: !149, line: 117, size: 960, elements: !151)
!151 = !{!152, !153, !154, !156, !172, !176, !178, !179, !180, !181}
!152 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !150, file: !149, line: 118, baseType: !24, size: 64)
!153 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !150, file: !149, line: 118, baseType: !24, size: 64, offset: 64)
!154 = !DIDerivedType(tag: DW_TAG_member, name: "newid", scope: !150, file: !149, line: 119, baseType: !155, size: 64, offset: 128)
!155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !150, size: 64)
!156 = !DIDerivedType(tag: DW_TAG_member, name: "lib", scope: !150, file: !149, line: 120, baseType: !157, size: 64, offset: 192)
!157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !158, size: 64)
!158 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Library", file: !149, line: 136, size: 17600, elements: !159)
!159 = !{!160, !161, !163, !166, !167, !168, !169}
!160 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !158, file: !149, line: 137, baseType: !148, size: 960)
!161 = !DIDerivedType(tag: DW_TAG_member, name: "idblock", scope: !158, file: !149, line: 138, baseType: !162, size: 64, offset: 960)
!162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !148, size: 64)
!163 = !DIDerivedType(tag: DW_TAG_member, name: "filedata", scope: !158, file: !149, line: 139, baseType: !164, size: 64, offset: 1024)
!164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !165, size: 64)
!165 = !DICompositeType(tag: DW_TAG_structure_type, name: "FileData", file: !149, line: 43, flags: DIFlagFwdDecl)
!166 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !158, file: !149, line: 140, baseType: !82, size: 8192, offset: 1088)
!167 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !158, file: !149, line: 141, baseType: !82, size: 8192, offset: 9280)
!168 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !158, file: !149, line: 148, baseType: !157, size: 64, offset: 17472)
!169 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !158, file: !149, line: 150, baseType: !170, size: 64, offset: 17536)
!170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !171, size: 64)
!171 = !DICompositeType(tag: DW_TAG_structure_type, name: "PackedFile", file: !149, line: 45, flags: DIFlagFwdDecl)
!172 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !150, file: !149, line: 121, baseType: !173, size: 528, offset: 256)
!173 = !DICompositeType(tag: DW_TAG_array_type, baseType: !28, size: 528, elements: !174)
!174 = !{!175}
!175 = !DISubrange(count: 66)
!176 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !150, file: !149, line: 126, baseType: !177, size: 16, offset: 784)
!177 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!178 = !DIDerivedType(tag: DW_TAG_member, name: "us", scope: !150, file: !149, line: 127, baseType: !25, size: 32, offset: 800)
!179 = !DIDerivedType(tag: DW_TAG_member, name: "icon_id", scope: !150, file: !149, line: 128, baseType: !25, size: 32, offset: 832)
!180 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !150, file: !149, line: 128, baseType: !25, size: 32, offset: 864)
!181 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !150, file: !149, line: 129, baseType: !182, size: 64, offset: 896)
!182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !183, size: 64)
!183 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDProperty", file: !149, line: 75, baseType: !184)
!184 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDProperty", file: !149, line: 62, size: 1024, elements: !185)
!185 = !{!186, !188, !189, !190, !191, !192, !196, !197, !211, !212}
!186 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !184, file: !149, line: 63, baseType: !187, size: 64)
!187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !184, size: 64)
!188 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !184, file: !149, line: 63, baseType: !187, size: 64, offset: 64)
!189 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !184, file: !149, line: 64, baseType: !28, size: 8, offset: 128)
!190 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !184, file: !149, line: 64, baseType: !28, size: 8, offset: 136)
!191 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !184, file: !149, line: 65, baseType: !177, size: 16, offset: 144)
!192 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !184, file: !149, line: 66, baseType: !193, size: 512, offset: 160)
!193 = !DICompositeType(tag: DW_TAG_array_type, baseType: !28, size: 512, elements: !194)
!194 = !{!195}
!195 = !DISubrange(count: 64)
!196 = !DIDerivedType(tag: DW_TAG_member, name: "saved", scope: !184, file: !149, line: 67, baseType: !25, size: 32, offset: 672)
!197 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !184, file: !149, line: 69, baseType: !198, size: 256, offset: 704)
!198 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDPropertyData", file: !149, line: 60, baseType: !199)
!199 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDPropertyData", file: !149, line: 48, size: 256, elements: !200)
!200 = !{!201, !202, !209, !210}
!201 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !199, file: !149, line: 49, baseType: !24, size: 64)
!202 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !199, file: !149, line: 58, baseType: !203, size: 128, offset: 64)
!203 = !DIDerivedType(tag: DW_TAG_typedef, name: "ListBase", file: !204, line: 71, baseType: !205)
!204 = !DIFile(filename: "blender/source/blender/makesdna/DNA_listBase.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!205 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ListBase", file: !204, line: 69, size: 128, elements: !206)
!206 = !{!207, !208}
!207 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !205, file: !204, line: 70, baseType: !24, size: 64)
!208 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !205, file: !204, line: 70, baseType: !24, size: 64, offset: 64)
!209 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !199, file: !149, line: 59, baseType: !25, size: 32, offset: 192)
!210 = !DIDerivedType(tag: DW_TAG_member, name: "val2", scope: !199, file: !149, line: 59, baseType: !25, size: 32, offset: 224)
!211 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !184, file: !149, line: 70, baseType: !25, size: 32, offset: 960)
!212 = !DIDerivedType(tag: DW_TAG_member, name: "totallen", scope: !184, file: !149, line: 74, baseType: !25, size: 32, offset: 992)
!213 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !145, file: !144, line: 204, baseType: !214, size: 64, offset: 960)
!214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !215, size: 64)
!215 = !DICompositeType(tag: DW_TAG_structure_type, name: "AnimData", file: !216, line: 58, flags: DIFlagFwdDecl)
!216 = !DIFile(filename: "blender/source/blender/makesdna/DNA_scene_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!217 = !DIDerivedType(tag: DW_TAG_member, name: "noisesize", scope: !145, file: !144, line: 206, baseType: !26, size: 32, offset: 1024)
!218 = !DIDerivedType(tag: DW_TAG_member, name: "turbul", scope: !145, file: !144, line: 206, baseType: !26, size: 32, offset: 1056)
!219 = !DIDerivedType(tag: DW_TAG_member, name: "bright", scope: !145, file: !144, line: 207, baseType: !26, size: 32, offset: 1088)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "contrast", scope: !145, file: !144, line: 207, baseType: !26, size: 32, offset: 1120)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "saturation", scope: !145, file: !144, line: 207, baseType: !26, size: 32, offset: 1152)
!222 = !DIDerivedType(tag: DW_TAG_member, name: "rfac", scope: !145, file: !144, line: 207, baseType: !26, size: 32, offset: 1184)
!223 = !DIDerivedType(tag: DW_TAG_member, name: "gfac", scope: !145, file: !144, line: 207, baseType: !26, size: 32, offset: 1216)
!224 = !DIDerivedType(tag: DW_TAG_member, name: "bfac", scope: !145, file: !144, line: 207, baseType: !26, size: 32, offset: 1248)
!225 = !DIDerivedType(tag: DW_TAG_member, name: "filtersize", scope: !145, file: !144, line: 208, baseType: !26, size: 32, offset: 1280)
!226 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !145, file: !144, line: 208, baseType: !26, size: 32, offset: 1312)
!227 = !DIDerivedType(tag: DW_TAG_member, name: "mg_H", scope: !145, file: !144, line: 211, baseType: !26, size: 32, offset: 1344)
!228 = !DIDerivedType(tag: DW_TAG_member, name: "mg_lacunarity", scope: !145, file: !144, line: 211, baseType: !26, size: 32, offset: 1376)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "mg_octaves", scope: !145, file: !144, line: 211, baseType: !26, size: 32, offset: 1408)
!230 = !DIDerivedType(tag: DW_TAG_member, name: "mg_offset", scope: !145, file: !144, line: 211, baseType: !26, size: 32, offset: 1440)
!231 = !DIDerivedType(tag: DW_TAG_member, name: "mg_gain", scope: !145, file: !144, line: 211, baseType: !26, size: 32, offset: 1472)
!232 = !DIDerivedType(tag: DW_TAG_member, name: "dist_amount", scope: !145, file: !144, line: 214, baseType: !26, size: 32, offset: 1504)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "ns_outscale", scope: !145, file: !144, line: 214, baseType: !26, size: 32, offset: 1536)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w1", scope: !145, file: !144, line: 217, baseType: !26, size: 32, offset: 1568)
!235 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w2", scope: !145, file: !144, line: 218, baseType: !26, size: 32, offset: 1600)
!236 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w3", scope: !145, file: !144, line: 219, baseType: !26, size: 32, offset: 1632)
!237 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w4", scope: !145, file: !144, line: 220, baseType: !26, size: 32, offset: 1664)
!238 = !DIDerivedType(tag: DW_TAG_member, name: "vn_mexp", scope: !145, file: !144, line: 221, baseType: !26, size: 32, offset: 1696)
!239 = !DIDerivedType(tag: DW_TAG_member, name: "vn_distm", scope: !145, file: !144, line: 222, baseType: !177, size: 16, offset: 1728)
!240 = !DIDerivedType(tag: DW_TAG_member, name: "vn_coltype", scope: !145, file: !144, line: 222, baseType: !177, size: 16, offset: 1744)
!241 = !DIDerivedType(tag: DW_TAG_member, name: "noisedepth", scope: !145, file: !144, line: 224, baseType: !177, size: 16, offset: 1760)
!242 = !DIDerivedType(tag: DW_TAG_member, name: "noisetype", scope: !145, file: !144, line: 224, baseType: !177, size: 16, offset: 1776)
!243 = !DIDerivedType(tag: DW_TAG_member, name: "noisebasis", scope: !145, file: !144, line: 227, baseType: !177, size: 16, offset: 1792)
!244 = !DIDerivedType(tag: DW_TAG_member, name: "noisebasis2", scope: !145, file: !144, line: 227, baseType: !177, size: 16, offset: 1808)
!245 = !DIDerivedType(tag: DW_TAG_member, name: "imaflag", scope: !145, file: !144, line: 229, baseType: !177, size: 16, offset: 1824)
!246 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !145, file: !144, line: 229, baseType: !177, size: 16, offset: 1840)
!247 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !145, file: !144, line: 230, baseType: !177, size: 16, offset: 1856)
!248 = !DIDerivedType(tag: DW_TAG_member, name: "stype", scope: !145, file: !144, line: 230, baseType: !177, size: 16, offset: 1872)
!249 = !DIDerivedType(tag: DW_TAG_member, name: "cropxmin", scope: !145, file: !144, line: 232, baseType: !26, size: 32, offset: 1888)
!250 = !DIDerivedType(tag: DW_TAG_member, name: "cropymin", scope: !145, file: !144, line: 232, baseType: !26, size: 32, offset: 1920)
!251 = !DIDerivedType(tag: DW_TAG_member, name: "cropxmax", scope: !145, file: !144, line: 232, baseType: !26, size: 32, offset: 1952)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "cropymax", scope: !145, file: !144, line: 232, baseType: !26, size: 32, offset: 1984)
!253 = !DIDerivedType(tag: DW_TAG_member, name: "texfilter", scope: !145, file: !144, line: 233, baseType: !25, size: 32, offset: 2016)
!254 = !DIDerivedType(tag: DW_TAG_member, name: "afmax", scope: !145, file: !144, line: 234, baseType: !25, size: 32, offset: 2048)
!255 = !DIDerivedType(tag: DW_TAG_member, name: "xrepeat", scope: !145, file: !144, line: 235, baseType: !177, size: 16, offset: 2080)
!256 = !DIDerivedType(tag: DW_TAG_member, name: "yrepeat", scope: !145, file: !144, line: 235, baseType: !177, size: 16, offset: 2096)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "extend", scope: !145, file: !144, line: 236, baseType: !177, size: 16, offset: 2112)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "fie_ima", scope: !145, file: !144, line: 239, baseType: !177, size: 16, offset: 2128)
!259 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !145, file: !144, line: 240, baseType: !25, size: 32, offset: 2144)
!260 = !DIDerivedType(tag: DW_TAG_member, name: "frames", scope: !145, file: !144, line: 241, baseType: !25, size: 32, offset: 2176)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !145, file: !144, line: 241, baseType: !25, size: 32, offset: 2208)
!262 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !145, file: !144, line: 241, baseType: !25, size: 32, offset: 2240)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "checkerdist", scope: !145, file: !144, line: 243, baseType: !26, size: 32, offset: 2272)
!264 = !DIDerivedType(tag: DW_TAG_member, name: "nabla", scope: !145, file: !144, line: 243, baseType: !26, size: 32, offset: 2304)
!265 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !145, file: !144, line: 244, baseType: !26, size: 32, offset: 2336)
!266 = !DIDerivedType(tag: DW_TAG_member, name: "iuser", scope: !145, file: !144, line: 246, baseType: !267, size: 320, offset: 2368)
!267 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageUser", file: !4, line: 50, size: 320, elements: !268)
!268 = !{!269, !1498, !1499, !1500, !1501, !1502, !1503, !1504, !1505, !1506, !1507, !1508, !1509, !1510}
!269 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !267, file: !4, line: 51, baseType: !270, size: 64)
!270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !271, size: 64)
!271 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Scene", file: !216, line: 1216, size: 39680, elements: !272)
!272 = !{!273, !274, !275, !547, !720, !721, !722, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744, !748, !749, !752, !1077, !1080, !1371, !1383, !1384, !1385, !1386, !1387, !1388, !1389, !1390, !1393, !1394, !1395, !1396, !1397, !1405, !1472, !1479, !1480, !1487, !1490, !1491, !1492, !1493, !1494, !1495}
!273 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !271, file: !216, line: 1217, baseType: !148, size: 960)
!274 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !271, file: !216, line: 1218, baseType: !214, size: 64, offset: 960)
!275 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !271, file: !216, line: 1220, baseType: !276, size: 64, offset: 1024)
!276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !277, size: 64)
!277 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Object", file: !278, line: 115, size: 11392, elements: !279)
!278 = !DIFile(filename: "blender/source/blender/makesdna/DNA_object_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!279 = !{!280, !281, !282, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !299, !310, !324, !325, !368, !369, !372, !373, !389, !390, !391, !392, !393, !394, !395, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !414, !415, !416, !417, !418, !419, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !479, !480, !481, !482, !483, !484, !485, !486, !487, !490, !493, !497, !498, !499, !500, !501, !504, !507, !511, !512, !518, !519, !520, !521, !522, !523, !525, !528, !531, !532, !535, !536}
!280 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !277, file: !278, line: 116, baseType: !148, size: 960)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !277, file: !278, line: 117, baseType: !214, size: 64, offset: 960)
!282 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt", scope: !277, file: !278, line: 119, baseType: !283, size: 64, offset: 1024)
!283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !284, size: 64)
!284 = !DICompositeType(tag: DW_TAG_structure_type, name: "SculptSession", file: !278, line: 57, flags: DIFlagFwdDecl)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !277, file: !278, line: 121, baseType: !177, size: 16, offset: 1088)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "partype", scope: !277, file: !278, line: 121, baseType: !177, size: 16, offset: 1104)
!287 = !DIDerivedType(tag: DW_TAG_member, name: "par1", scope: !277, file: !278, line: 122, baseType: !25, size: 32, offset: 1120)
!288 = !DIDerivedType(tag: DW_TAG_member, name: "par2", scope: !277, file: !278, line: 122, baseType: !25, size: 32, offset: 1152)
!289 = !DIDerivedType(tag: DW_TAG_member, name: "par3", scope: !277, file: !278, line: 122, baseType: !25, size: 32, offset: 1184)
!290 = !DIDerivedType(tag: DW_TAG_member, name: "parsubstr", scope: !277, file: !278, line: 123, baseType: !193, size: 512, offset: 1216)
!291 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !277, file: !278, line: 124, baseType: !276, size: 64, offset: 1728)
!292 = !DIDerivedType(tag: DW_TAG_member, name: "track", scope: !277, file: !278, line: 124, baseType: !276, size: 64, offset: 1792)
!293 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !277, file: !278, line: 127, baseType: !276, size: 64, offset: 1856)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_group", scope: !277, file: !278, line: 127, baseType: !276, size: 64, offset: 1920)
!295 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_from", scope: !277, file: !278, line: 127, baseType: !276, size: 64, offset: 1984)
!296 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !277, file: !278, line: 128, baseType: !297, size: 64, offset: 2048)
!297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !298, size: 64)
!298 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ipo", file: !144, line: 46, flags: DIFlagFwdDecl)
!299 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !277, file: !278, line: 130, baseType: !300, size: 64, offset: 2112)
!300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !301, size: 64)
!301 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BoundBox", file: !278, line: 97, size: 832, elements: !302)
!302 = !{!303, !308, !309}
!303 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !301, file: !278, line: 98, baseType: !304, size: 768)
!304 = !DICompositeType(tag: DW_TAG_array_type, baseType: !26, size: 768, elements: !305)
!305 = !{!306, !307}
!306 = !DISubrange(count: 8)
!307 = !DISubrange(count: 3)
!308 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !301, file: !278, line: 99, baseType: !25, size: 32, offset: 768)
!309 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !301, file: !278, line: 99, baseType: !25, size: 32, offset: 800)
!310 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !277, file: !278, line: 131, baseType: !311, size: 64, offset: 2176)
!311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !312, size: 64)
!312 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bAction", file: !313, line: 486, size: 1600, elements: !314)
!313 = !DIFile(filename: "blender/source/blender/makesdna/DNA_action_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!314 = !{!315, !316, !317, !318, !319, !320, !321, !322, !323}
!315 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !312, file: !313, line: 487, baseType: !148, size: 960)
!316 = !DIDerivedType(tag: DW_TAG_member, name: "curves", scope: !312, file: !313, line: 489, baseType: !203, size: 128, offset: 960)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "chanbase", scope: !312, file: !313, line: 490, baseType: !203, size: 128, offset: 1088)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !312, file: !313, line: 491, baseType: !203, size: 128, offset: 1216)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !312, file: !313, line: 492, baseType: !203, size: 128, offset: 1344)
!320 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !312, file: !313, line: 494, baseType: !25, size: 32, offset: 1472)
!321 = !DIDerivedType(tag: DW_TAG_member, name: "active_marker", scope: !312, file: !313, line: 495, baseType: !25, size: 32, offset: 1504)
!322 = !DIDerivedType(tag: DW_TAG_member, name: "idroot", scope: !312, file: !313, line: 497, baseType: !25, size: 32, offset: 1536)
!323 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !312, file: !313, line: 498, baseType: !25, size: 32, offset: 1568)
!324 = !DIDerivedType(tag: DW_TAG_member, name: "poselib", scope: !277, file: !278, line: 132, baseType: !311, size: 64, offset: 2240)
!325 = !DIDerivedType(tag: DW_TAG_member, name: "pose", scope: !277, file: !278, line: 133, baseType: !326, size: 64, offset: 2304)
!326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !327, size: 64)
!327 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bPose", file: !313, line: 334, size: 1728, elements: !328)
!328 = !{!329, !330, !333, !334, !335, !336, !337, !338, !341, !342, !343, !344, !345, !346, !347, !367}
!329 = !DIDerivedType(tag: DW_TAG_member, name: "chanbase", scope: !327, file: !313, line: 335, baseType: !203, size: 128)
!330 = !DIDerivedType(tag: DW_TAG_member, name: "chanhash", scope: !327, file: !313, line: 336, baseType: !331, size: 64, offset: 128)
!331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !332, size: 64)
!332 = !DICompositeType(tag: DW_TAG_structure_type, name: "GHash", file: !313, line: 47, flags: DIFlagFwdDecl)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !327, file: !313, line: 338, baseType: !177, size: 16, offset: 192)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !327, file: !313, line: 338, baseType: !177, size: 16, offset: 208)
!335 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_layer", scope: !327, file: !313, line: 339, baseType: !5, size: 32, offset: 224)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !327, file: !313, line: 340, baseType: !25, size: 32, offset: 256)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !327, file: !313, line: 342, baseType: !26, size: 32, offset: 288)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "stride_offset", scope: !327, file: !313, line: 343, baseType: !339, size: 96, offset: 320)
!339 = !DICompositeType(tag: DW_TAG_array_type, baseType: !26, size: 96, elements: !340)
!340 = !{!307}
!341 = !DIDerivedType(tag: DW_TAG_member, name: "cyclic_offset", scope: !327, file: !313, line: 344, baseType: !339, size: 96, offset: 416)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "agroups", scope: !327, file: !313, line: 347, baseType: !203, size: 128, offset: 512)
!343 = !DIDerivedType(tag: DW_TAG_member, name: "active_group", scope: !327, file: !313, line: 349, baseType: !25, size: 32, offset: 640)
!344 = !DIDerivedType(tag: DW_TAG_member, name: "iksolver", scope: !327, file: !313, line: 350, baseType: !25, size: 32, offset: 672)
!345 = !DIDerivedType(tag: DW_TAG_member, name: "ikdata", scope: !327, file: !313, line: 351, baseType: !24, size: 64, offset: 704)
!346 = !DIDerivedType(tag: DW_TAG_member, name: "ikparam", scope: !327, file: !313, line: 352, baseType: !24, size: 64, offset: 768)
!347 = !DIDerivedType(tag: DW_TAG_member, name: "avs", scope: !327, file: !313, line: 354, baseType: !348, size: 384, offset: 832)
!348 = !DIDerivedType(tag: DW_TAG_typedef, name: "bAnimVizSettings", file: !313, line: 116, baseType: !349)
!349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bAnimVizSettings", file: !313, line: 94, size: 384, elements: !350)
!350 = !{!351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366}
!351 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_sf", scope: !349, file: !313, line: 96, baseType: !25, size: 32)
!352 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_ef", scope: !349, file: !313, line: 96, baseType: !25, size: 32, offset: 32)
!353 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_bc", scope: !349, file: !313, line: 97, baseType: !25, size: 32, offset: 64)
!354 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_ac", scope: !349, file: !313, line: 97, baseType: !25, size: 32, offset: 96)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_type", scope: !349, file: !313, line: 99, baseType: !177, size: 16, offset: 128)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_step", scope: !349, file: !313, line: 100, baseType: !177, size: 16, offset: 144)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_flag", scope: !349, file: !313, line: 102, baseType: !177, size: 16, offset: 160)
!358 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !349, file: !313, line: 105, baseType: !177, size: 16, offset: 176)
!359 = !DIDerivedType(tag: DW_TAG_member, name: "path_type", scope: !349, file: !313, line: 108, baseType: !177, size: 16, offset: 192)
!360 = !DIDerivedType(tag: DW_TAG_member, name: "path_step", scope: !349, file: !313, line: 109, baseType: !177, size: 16, offset: 208)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "path_viewflag", scope: !349, file: !313, line: 111, baseType: !177, size: 16, offset: 224)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "path_bakeflag", scope: !349, file: !313, line: 112, baseType: !177, size: 16, offset: 240)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "path_sf", scope: !349, file: !313, line: 114, baseType: !25, size: 32, offset: 256)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "path_ef", scope: !349, file: !313, line: 114, baseType: !25, size: 32, offset: 288)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "path_bc", scope: !349, file: !313, line: 115, baseType: !25, size: 32, offset: 320)
!366 = !DIDerivedType(tag: DW_TAG_member, name: "path_ac", scope: !349, file: !313, line: 115, baseType: !25, size: 32, offset: 352)
!367 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_act_bone", scope: !327, file: !313, line: 355, baseType: !193, size: 512, offset: 1216)
!368 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !277, file: !278, line: 134, baseType: !24, size: 64, offset: 2368)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !277, file: !278, line: 136, baseType: !370, size: 64, offset: 2432)
!370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !371, size: 64)
!371 = !DICompositeType(tag: DW_TAG_structure_type, name: "bGPdata", file: !216, line: 61, flags: DIFlagFwdDecl)
!372 = !DIDerivedType(tag: DW_TAG_member, name: "avs", scope: !277, file: !278, line: 138, baseType: !348, size: 384, offset: 2496)
!373 = !DIDerivedType(tag: DW_TAG_member, name: "mpath", scope: !277, file: !278, line: 139, baseType: !374, size: 64, offset: 2880)
!374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !375, size: 64)
!375 = !DIDerivedType(tag: DW_TAG_typedef, name: "bMotionPath", file: !313, line: 80, baseType: !376)
!376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bMotionPath", file: !313, line: 72, size: 192, elements: !377)
!377 = !{!378, !385, !386, !387, !388}
!378 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !376, file: !313, line: 73, baseType: !379, size: 64)
!379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !380, size: 64)
!380 = !DIDerivedType(tag: DW_TAG_typedef, name: "bMotionPathVert", file: !313, line: 59, baseType: !381)
!381 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bMotionPathVert", file: !313, line: 56, size: 128, elements: !382)
!382 = !{!383, !384}
!383 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !381, file: !313, line: 57, baseType: !339, size: 96)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !381, file: !313, line: 58, baseType: !25, size: 32, offset: 96)
!385 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !376, file: !313, line: 74, baseType: !25, size: 32, offset: 64)
!386 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !376, file: !313, line: 76, baseType: !25, size: 32, offset: 96)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !376, file: !313, line: 77, baseType: !25, size: 32, offset: 128)
!388 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !376, file: !313, line: 79, baseType: !25, size: 32, offset: 160)
!389 = !DIDerivedType(tag: DW_TAG_member, name: "constraintChannels", scope: !277, file: !278, line: 141, baseType: !203, size: 128, offset: 2944)
!390 = !DIDerivedType(tag: DW_TAG_member, name: "effect", scope: !277, file: !278, line: 142, baseType: !203, size: 128, offset: 3072)
!391 = !DIDerivedType(tag: DW_TAG_member, name: "defbase", scope: !277, file: !278, line: 143, baseType: !203, size: 128, offset: 3200)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers", scope: !277, file: !278, line: 144, baseType: !203, size: 128, offset: 3328)
!393 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !277, file: !278, line: 146, baseType: !25, size: 32, offset: 3456)
!394 = !DIDerivedType(tag: DW_TAG_member, name: "restore_mode", scope: !277, file: !278, line: 147, baseType: !25, size: 32, offset: 3488)
!395 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !277, file: !278, line: 150, baseType: !396, size: 64, offset: 3520)
!396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !397, size: 64)
!397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !398, size: 64)
!398 = !DICompositeType(tag: DW_TAG_structure_type, name: "Material", file: !216, line: 179, flags: DIFlagFwdDecl)
!399 = !DIDerivedType(tag: DW_TAG_member, name: "matbits", scope: !277, file: !278, line: 151, baseType: !27, size: 64, offset: 3584)
!400 = !DIDerivedType(tag: DW_TAG_member, name: "totcol", scope: !277, file: !278, line: 152, baseType: !25, size: 32, offset: 3648)
!401 = !DIDerivedType(tag: DW_TAG_member, name: "actcol", scope: !277, file: !278, line: 153, baseType: !25, size: 32, offset: 3680)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !277, file: !278, line: 156, baseType: !339, size: 96, offset: 3712)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "dloc", scope: !277, file: !278, line: 156, baseType: !339, size: 96, offset: 3808)
!404 = !DIDerivedType(tag: DW_TAG_member, name: "orig", scope: !277, file: !278, line: 156, baseType: !339, size: 96, offset: 3904)
!405 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !277, file: !278, line: 157, baseType: !339, size: 96, offset: 4000)
!406 = !DIDerivedType(tag: DW_TAG_member, name: "dsize", scope: !277, file: !278, line: 158, baseType: !339, size: 96, offset: 4096)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "dscale", scope: !277, file: !278, line: 159, baseType: !339, size: 96, offset: 4192)
!408 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !277, file: !278, line: 160, baseType: !339, size: 96, offset: 4288)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "drot", scope: !277, file: !278, line: 160, baseType: !339, size: 96, offset: 4384)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "quat", scope: !277, file: !278, line: 161, baseType: !411, size: 128, offset: 4480)
!411 = !DICompositeType(tag: DW_TAG_array_type, baseType: !26, size: 128, elements: !412)
!412 = !{!413}
!413 = !DISubrange(count: 4)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "dquat", scope: !277, file: !278, line: 161, baseType: !411, size: 128, offset: 4608)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "rotAxis", scope: !277, file: !278, line: 162, baseType: !339, size: 96, offset: 4736)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "drotAxis", scope: !277, file: !278, line: 162, baseType: !339, size: 96, offset: 4832)
!417 = !DIDerivedType(tag: DW_TAG_member, name: "rotAngle", scope: !277, file: !278, line: 163, baseType: !26, size: 32, offset: 4928)
!418 = !DIDerivedType(tag: DW_TAG_member, name: "drotAngle", scope: !277, file: !278, line: 163, baseType: !26, size: 32, offset: 4960)
!419 = !DIDerivedType(tag: DW_TAG_member, name: "obmat", scope: !277, file: !278, line: 164, baseType: !420, size: 512, offset: 4992)
!420 = !DICompositeType(tag: DW_TAG_array_type, baseType: !26, size: 512, elements: !421)
!421 = !{!413, !413}
!422 = !DIDerivedType(tag: DW_TAG_member, name: "parentinv", scope: !277, file: !278, line: 165, baseType: !420, size: 512, offset: 5504)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "constinv", scope: !277, file: !278, line: 166, baseType: !420, size: 512, offset: 6016)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !277, file: !278, line: 167, baseType: !420, size: 512, offset: 6528)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "imat_ren", scope: !277, file: !278, line: 176, baseType: !420, size: 512, offset: 7040)
!426 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !277, file: !278, line: 178, baseType: !5, size: 32, offset: 7552)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !277, file: !278, line: 180, baseType: !177, size: 16, offset: 7584)
!428 = !DIDerivedType(tag: DW_TAG_member, name: "colbits", scope: !277, file: !278, line: 181, baseType: !177, size: 16, offset: 7600)
!429 = !DIDerivedType(tag: DW_TAG_member, name: "transflag", scope: !277, file: !278, line: 183, baseType: !177, size: 16, offset: 7616)
!430 = !DIDerivedType(tag: DW_TAG_member, name: "protectflag", scope: !277, file: !278, line: 183, baseType: !177, size: 16, offset: 7632)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "trackflag", scope: !277, file: !278, line: 184, baseType: !177, size: 16, offset: 7648)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "upflag", scope: !277, file: !278, line: 184, baseType: !177, size: 16, offset: 7664)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "nlaflag", scope: !277, file: !278, line: 185, baseType: !177, size: 16, offset: 7680)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "ipoflag", scope: !277, file: !278, line: 186, baseType: !177, size: 16, offset: 7696)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "scaflag", scope: !277, file: !278, line: 187, baseType: !177, size: 16, offset: 7712)
!436 = !DIDerivedType(tag: DW_TAG_member, name: "scavisflag", scope: !277, file: !278, line: 188, baseType: !28, size: 8, offset: 7728)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "depsflag", scope: !277, file: !278, line: 189, baseType: !28, size: 8, offset: 7736)
!438 = !DIDerivedType(tag: DW_TAG_member, name: "dupon", scope: !277, file: !278, line: 192, baseType: !25, size: 32, offset: 7744)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "dupoff", scope: !277, file: !278, line: 192, baseType: !25, size: 32, offset: 7776)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "dupsta", scope: !277, file: !278, line: 192, baseType: !25, size: 32, offset: 7808)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "dupend", scope: !277, file: !278, line: 192, baseType: !25, size: 32, offset: 7840)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !277, file: !278, line: 194, baseType: !25, size: 32, offset: 7872)
!443 = !DIDerivedType(tag: DW_TAG_member, name: "mass", scope: !277, file: !278, line: 202, baseType: !26, size: 32, offset: 7904)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "damping", scope: !277, file: !278, line: 202, baseType: !26, size: 32, offset: 7936)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "inertia", scope: !277, file: !278, line: 202, baseType: !26, size: 32, offset: 7968)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "formfactor", scope: !277, file: !278, line: 211, baseType: !26, size: 32, offset: 8000)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "rdamping", scope: !277, file: !278, line: 212, baseType: !26, size: 32, offset: 8032)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !277, file: !278, line: 213, baseType: !26, size: 32, offset: 8064)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "max_vel", scope: !277, file: !278, line: 214, baseType: !26, size: 32, offset: 8096)
!450 = !DIDerivedType(tag: DW_TAG_member, name: "min_vel", scope: !277, file: !278, line: 215, baseType: !26, size: 32, offset: 8128)
!451 = !DIDerivedType(tag: DW_TAG_member, name: "obstacleRad", scope: !277, file: !278, line: 216, baseType: !26, size: 32, offset: 8160)
!452 = !DIDerivedType(tag: DW_TAG_member, name: "step_height", scope: !277, file: !278, line: 219, baseType: !26, size: 32, offset: 8192)
!453 = !DIDerivedType(tag: DW_TAG_member, name: "jump_speed", scope: !277, file: !278, line: 220, baseType: !26, size: 32, offset: 8224)
!454 = !DIDerivedType(tag: DW_TAG_member, name: "fall_speed", scope: !277, file: !278, line: 221, baseType: !26, size: 32, offset: 8256)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "col_group", scope: !277, file: !278, line: 224, baseType: !456, size: 16, offset: 8288)
!456 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "col_mask", scope: !277, file: !278, line: 224, baseType: !456, size: 16, offset: 8304)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "rotmode", scope: !277, file: !278, line: 226, baseType: !177, size: 16, offset: 8320)
!459 = !DIDerivedType(tag: DW_TAG_member, name: "boundtype", scope: !277, file: !278, line: 228, baseType: !28, size: 8, offset: 8336)
!460 = !DIDerivedType(tag: DW_TAG_member, name: "collision_boundtype", scope: !277, file: !278, line: 229, baseType: !28, size: 8, offset: 8344)
!461 = !DIDerivedType(tag: DW_TAG_member, name: "dtx", scope: !277, file: !278, line: 231, baseType: !177, size: 16, offset: 8352)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "dt", scope: !277, file: !278, line: 232, baseType: !28, size: 8, offset: 8368)
!463 = !DIDerivedType(tag: DW_TAG_member, name: "empty_drawtype", scope: !277, file: !278, line: 233, baseType: !28, size: 8, offset: 8376)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "empty_drawsize", scope: !277, file: !278, line: 234, baseType: !26, size: 32, offset: 8384)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "dupfacesca", scope: !277, file: !278, line: 235, baseType: !26, size: 32, offset: 8416)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !277, file: !278, line: 237, baseType: !203, size: 128, offset: 8448)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "sensors", scope: !277, file: !278, line: 238, baseType: !203, size: 128, offset: 8576)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "controllers", scope: !277, file: !278, line: 239, baseType: !203, size: 128, offset: 8704)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "actuators", scope: !277, file: !278, line: 240, baseType: !203, size: 128, offset: 8832)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "sf", scope: !277, file: !278, line: 242, baseType: !26, size: 32, offset: 8960)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !277, file: !278, line: 244, baseType: !177, size: 16, offset: 8992)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "actdef", scope: !277, file: !278, line: 245, baseType: !456, size: 16, offset: 9008)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !277, file: !278, line: 246, baseType: !411, size: 128, offset: 9024)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "gameflag", scope: !277, file: !278, line: 248, baseType: !25, size: 32, offset: 9152)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "gameflag2", scope: !277, file: !278, line: 249, baseType: !25, size: 32, offset: 9184)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "bsoft", scope: !277, file: !278, line: 251, baseType: !477, size: 64, offset: 9216)
!477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !478, size: 64)
!478 = !DICompositeType(tag: DW_TAG_structure_type, name: "BulletSoftBody", file: !278, line: 251, flags: DIFlagFwdDecl)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "restrictflag", scope: !277, file: !278, line: 253, baseType: !28, size: 8, offset: 9280)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !277, file: !278, line: 254, baseType: !28, size: 8, offset: 9288)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "softflag", scope: !277, file: !278, line: 255, baseType: !177, size: 16, offset: 9296)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "anisotropicFriction", scope: !277, file: !278, line: 256, baseType: !339, size: 96, offset: 9312)
!483 = !DIDerivedType(tag: DW_TAG_member, name: "constraints", scope: !277, file: !278, line: 258, baseType: !203, size: 128, offset: 9408)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "nlastrips", scope: !277, file: !278, line: 259, baseType: !203, size: 128, offset: 9536)
!485 = !DIDerivedType(tag: DW_TAG_member, name: "hooks", scope: !277, file: !278, line: 260, baseType: !203, size: 128, offset: 9664)
!486 = !DIDerivedType(tag: DW_TAG_member, name: "particlesystem", scope: !277, file: !278, line: 261, baseType: !203, size: 128, offset: 9792)
!487 = !DIDerivedType(tag: DW_TAG_member, name: "pd", scope: !277, file: !278, line: 263, baseType: !488, size: 64, offset: 9920)
!488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !489, size: 64)
!489 = !DICompositeType(tag: DW_TAG_structure_type, name: "PartDeflect", file: !278, line: 52, flags: DIFlagFwdDecl)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !277, file: !278, line: 264, baseType: !491, size: 64, offset: 9984)
!491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !492, size: 64)
!492 = !DICompositeType(tag: DW_TAG_structure_type, name: "SoftBody", file: !278, line: 53, flags: DIFlagFwdDecl)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "dup_group", scope: !277, file: !278, line: 265, baseType: !494, size: 64, offset: 10048)
!494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !495, size: 64)
!495 = !DICompositeType(tag: DW_TAG_structure_type, name: "Group", file: !496, line: 43, flags: DIFlagFwdDecl)
!496 = !DIFile(filename: "blender/source/blender/makesdna/DNA_freestyle_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!497 = !DIDerivedType(tag: DW_TAG_member, name: "body_type", scope: !277, file: !278, line: 267, baseType: !28, size: 8, offset: 10112)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "shapeflag", scope: !277, file: !278, line: 268, baseType: !28, size: 8, offset: 10120)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "shapenr", scope: !277, file: !278, line: 269, baseType: !177, size: 16, offset: 10128)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "smoothresh", scope: !277, file: !278, line: 270, baseType: !26, size: 32, offset: 10144)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "fluidsimSettings", scope: !277, file: !278, line: 272, baseType: !502, size: 64, offset: 10176)
!502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !503, size: 64)
!503 = !DICompositeType(tag: DW_TAG_structure_type, name: "FluidsimSettings", file: !278, line: 54, flags: DIFlagFwdDecl)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "curve_cache", scope: !277, file: !278, line: 275, baseType: !505, size: 64, offset: 10240)
!505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !506, size: 64)
!506 = !DICompositeType(tag: DW_TAG_structure_type, name: "CurveCache", file: !278, line: 275, flags: DIFlagFwdDecl)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "derivedDeform", scope: !277, file: !278, line: 277, baseType: !508, size: 64, offset: 10304)
!508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !509, size: 64)
!509 = !DICompositeType(tag: DW_TAG_structure_type, name: "DerivedMesh", file: !510, line: 40, flags: DIFlagFwdDecl)
!510 = !DIFile(filename: "blender/source/blender/render/extern/include/RE_render_ext.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!511 = !DIDerivedType(tag: DW_TAG_member, name: "derivedFinal", scope: !277, file: !278, line: 277, baseType: !508, size: 64, offset: 10368)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "lastDataMask", scope: !277, file: !278, line: 278, baseType: !513, size: 64, offset: 10432)
!513 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !514, line: 27, baseType: !515)
!514 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h", directory: "")
!515 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint64_t", file: !516, line: 45, baseType: !517)
!516 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!517 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask", scope: !277, file: !278, line: 279, baseType: !513, size: 64, offset: 10496)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !277, file: !278, line: 280, baseType: !5, size: 32, offset: 10560)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "init_state", scope: !277, file: !278, line: 281, baseType: !5, size: 32, offset: 10592)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "gpulamp", scope: !277, file: !278, line: 283, baseType: !203, size: 128, offset: 10624)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "pc_ids", scope: !277, file: !278, line: 284, baseType: !203, size: 128, offset: 10752)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "duplilist", scope: !277, file: !278, line: 285, baseType: !524, size: 64, offset: 10880)
!524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !203, size: 64)
!525 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_object", scope: !277, file: !278, line: 287, baseType: !526, size: 64, offset: 10944)
!526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !527, size: 64)
!527 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyOb", file: !278, line: 59, flags: DIFlagFwdDecl)
!528 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_constraint", scope: !277, file: !278, line: 288, baseType: !529, size: 64, offset: 11008)
!529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !530, size: 64)
!530 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyCon", file: !278, line: 288, flags: DIFlagFwdDecl)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "ima_ofs", scope: !277, file: !278, line: 290, baseType: !125, size: 64, offset: 11072)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "iuser", scope: !277, file: !278, line: 291, baseType: !533, size: 64, offset: 11136)
!533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !534, size: 64)
!534 = !DIDerivedType(tag: DW_TAG_typedef, name: "ImageUser", file: !4, line: 65, baseType: !267)
!535 = !DIDerivedType(tag: DW_TAG_member, name: "lodlevels", scope: !277, file: !278, line: 293, baseType: !203, size: 128, offset: 11200)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "currentlod", scope: !277, file: !278, line: 294, baseType: !537, size: 64, offset: 11328)
!537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !538, size: 64)
!538 = !DIDerivedType(tag: DW_TAG_typedef, name: "LodLevel", file: !278, line: 113, baseType: !539)
!539 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LodLevel", file: !278, line: 108, size: 256, elements: !540)
!540 = !{!541, !543, !544, !545, !546}
!541 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !539, file: !278, line: 109, baseType: !542, size: 64)
!542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !539, size: 64)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !539, file: !278, line: 109, baseType: !542, size: 64, offset: 64)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !539, file: !278, line: 110, baseType: !276, size: 64, offset: 128)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !539, file: !278, line: 111, baseType: !25, size: 32, offset: 192)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "distance", scope: !539, file: !278, line: 112, baseType: !26, size: 32, offset: 224)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "world", scope: !271, file: !216, line: 1221, baseType: !548, size: 64, offset: 1088)
!548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !549, size: 64)
!549 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "World", file: !550, line: 52, size: 4224, elements: !551)
!550 = !DIFile(filename: "blender/source/blender/makesdna/DNA_world_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!551 = !{!552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !698, !699, !700, !702, !717}
!552 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !549, file: !550, line: 53, baseType: !148, size: 960)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !549, file: !550, line: 54, baseType: !214, size: 64, offset: 960)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "colormodel", scope: !549, file: !550, line: 56, baseType: !177, size: 16, offset: 1024)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "totex", scope: !549, file: !550, line: 56, baseType: !177, size: 16, offset: 1040)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "texact", scope: !549, file: !550, line: 57, baseType: !177, size: 16, offset: 1056)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "mistype", scope: !549, file: !550, line: 57, baseType: !177, size: 16, offset: 1072)
!558 = !DIDerivedType(tag: DW_TAG_member, name: "horr", scope: !549, file: !550, line: 59, baseType: !26, size: 32, offset: 1088)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "horg", scope: !549, file: !550, line: 59, baseType: !26, size: 32, offset: 1120)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "horb", scope: !549, file: !550, line: 59, baseType: !26, size: 32, offset: 1152)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "zenr", scope: !549, file: !550, line: 60, baseType: !26, size: 32, offset: 1184)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "zeng", scope: !549, file: !550, line: 60, baseType: !26, size: 32, offset: 1216)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "zenb", scope: !549, file: !550, line: 60, baseType: !26, size: 32, offset: 1248)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "ambr", scope: !549, file: !550, line: 61, baseType: !26, size: 32, offset: 1280)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "ambg", scope: !549, file: !550, line: 61, baseType: !26, size: 32, offset: 1312)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "ambb", scope: !549, file: !550, line: 61, baseType: !26, size: 32, offset: 1344)
!567 = !DIDerivedType(tag: DW_TAG_member, name: "exposure", scope: !549, file: !550, line: 68, baseType: !26, size: 32, offset: 1376)
!568 = !DIDerivedType(tag: DW_TAG_member, name: "exp", scope: !549, file: !550, line: 68, baseType: !26, size: 32, offset: 1408)
!569 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !549, file: !550, line: 68, baseType: !26, size: 32, offset: 1440)
!570 = !DIDerivedType(tag: DW_TAG_member, name: "linfac", scope: !549, file: !550, line: 69, baseType: !26, size: 32, offset: 1472)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "logfac", scope: !549, file: !550, line: 69, baseType: !26, size: 32, offset: 1504)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !549, file: !550, line: 74, baseType: !26, size: 32, offset: 1536)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "activityBoxRadius", scope: !549, file: !550, line: 79, baseType: !26, size: 32, offset: 1568)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "skytype", scope: !549, file: !550, line: 81, baseType: !177, size: 16, offset: 1600)
!575 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !549, file: !550, line: 91, baseType: !177, size: 16, offset: 1616)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "occlusionRes", scope: !549, file: !550, line: 92, baseType: !177, size: 16, offset: 1632)
!577 = !DIDerivedType(tag: DW_TAG_member, name: "physicsEngine", scope: !549, file: !550, line: 93, baseType: !177, size: 16, offset: 1648)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "ticrate", scope: !549, file: !550, line: 94, baseType: !177, size: 16, offset: 1664)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "maxlogicstep", scope: !549, file: !550, line: 94, baseType: !177, size: 16, offset: 1680)
!580 = !DIDerivedType(tag: DW_TAG_member, name: "physubstep", scope: !549, file: !550, line: 94, baseType: !177, size: 16, offset: 1696)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "maxphystep", scope: !549, file: !550, line: 94, baseType: !177, size: 16, offset: 1712)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "misi", scope: !549, file: !550, line: 96, baseType: !26, size: 32, offset: 1728)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "miststa", scope: !549, file: !550, line: 96, baseType: !26, size: 32, offset: 1760)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "mistdist", scope: !549, file: !550, line: 96, baseType: !26, size: 32, offset: 1792)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "misthi", scope: !549, file: !550, line: 96, baseType: !26, size: 32, offset: 1824)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "starr", scope: !549, file: !550, line: 98, baseType: !26, size: 32, offset: 1856)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "starg", scope: !549, file: !550, line: 98, baseType: !26, size: 32, offset: 1888)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "starb", scope: !549, file: !550, line: 98, baseType: !26, size: 32, offset: 1920)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "stark", scope: !549, file: !550, line: 98, baseType: !26, size: 32, offset: 1952)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "starsize", scope: !549, file: !550, line: 99, baseType: !26, size: 32, offset: 1984)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "starmindist", scope: !549, file: !550, line: 99, baseType: !26, size: 32, offset: 2016)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "stardist", scope: !549, file: !550, line: 100, baseType: !26, size: 32, offset: 2048)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "starcolnoise", scope: !549, file: !550, line: 100, baseType: !26, size: 32, offset: 2080)
!594 = !DIDerivedType(tag: DW_TAG_member, name: "dofsta", scope: !549, file: !550, line: 103, baseType: !177, size: 16, offset: 2112)
!595 = !DIDerivedType(tag: DW_TAG_member, name: "dofend", scope: !549, file: !550, line: 103, baseType: !177, size: 16, offset: 2128)
!596 = !DIDerivedType(tag: DW_TAG_member, name: "dofmin", scope: !549, file: !550, line: 103, baseType: !177, size: 16, offset: 2144)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "dofmax", scope: !549, file: !550, line: 103, baseType: !177, size: 16, offset: 2160)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "aodist", scope: !549, file: !550, line: 106, baseType: !26, size: 32, offset: 2176)
!599 = !DIDerivedType(tag: DW_TAG_member, name: "aodistfac", scope: !549, file: !550, line: 106, baseType: !26, size: 32, offset: 2208)
!600 = !DIDerivedType(tag: DW_TAG_member, name: "aoenergy", scope: !549, file: !550, line: 106, baseType: !26, size: 32, offset: 2240)
!601 = !DIDerivedType(tag: DW_TAG_member, name: "aobias", scope: !549, file: !550, line: 106, baseType: !26, size: 32, offset: 2272)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "aomode", scope: !549, file: !550, line: 107, baseType: !177, size: 16, offset: 2304)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "aosamp", scope: !549, file: !550, line: 107, baseType: !177, size: 16, offset: 2320)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "aomix", scope: !549, file: !550, line: 107, baseType: !177, size: 16, offset: 2336)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "aocolor", scope: !549, file: !550, line: 107, baseType: !177, size: 16, offset: 2352)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "ao_adapt_thresh", scope: !549, file: !550, line: 108, baseType: !26, size: 32, offset: 2368)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "ao_adapt_speed_fac", scope: !549, file: !550, line: 108, baseType: !26, size: 32, offset: 2400)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "ao_approx_error", scope: !549, file: !550, line: 109, baseType: !26, size: 32, offset: 2432)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "ao_approx_correction", scope: !549, file: !550, line: 109, baseType: !26, size: 32, offset: 2464)
!610 = !DIDerivedType(tag: DW_TAG_member, name: "ao_indirect_energy", scope: !549, file: !550, line: 110, baseType: !26, size: 32, offset: 2496)
!611 = !DIDerivedType(tag: DW_TAG_member, name: "ao_env_energy", scope: !549, file: !550, line: 110, baseType: !26, size: 32, offset: 2528)
!612 = !DIDerivedType(tag: DW_TAG_member, name: "ao_pad2", scope: !549, file: !550, line: 110, baseType: !26, size: 32, offset: 2560)
!613 = !DIDerivedType(tag: DW_TAG_member, name: "ao_indirect_bounces", scope: !549, file: !550, line: 111, baseType: !177, size: 16, offset: 2592)
!614 = !DIDerivedType(tag: DW_TAG_member, name: "ao_pad", scope: !549, file: !550, line: 111, baseType: !177, size: 16, offset: 2608)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "ao_samp_method", scope: !549, file: !550, line: 112, baseType: !177, size: 16, offset: 2624)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "ao_gather_method", scope: !549, file: !550, line: 112, baseType: !177, size: 16, offset: 2640)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "ao_approx_passes", scope: !549, file: !550, line: 112, baseType: !177, size: 16, offset: 2656)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !549, file: !550, line: 115, baseType: !177, size: 16, offset: 2672)
!619 = !DIDerivedType(tag: DW_TAG_member, name: "aosphere", scope: !549, file: !550, line: 118, baseType: !52, size: 64, offset: 2688)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "aotables", scope: !549, file: !550, line: 118, baseType: !52, size: 64, offset: 2752)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !549, file: !550, line: 121, baseType: !297, size: 64, offset: 2816)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "mtex", scope: !549, file: !550, line: 122, baseType: !623, size: 1152, offset: 2880)
!623 = !DICompositeType(tag: DW_TAG_array_type, baseType: !624, size: 1152, elements: !696)
!624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !625, size: 64)
!625 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MTex", file: !144, line: 57, size: 2496, elements: !626)
!626 = !{!627, !628, !629, !630, !631, !632, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693, !694, !695}
!627 = !DIDerivedType(tag: DW_TAG_member, name: "texco", scope: !625, file: !144, line: 59, baseType: !177, size: 16)
!628 = !DIDerivedType(tag: DW_TAG_member, name: "mapto", scope: !625, file: !144, line: 59, baseType: !177, size: 16, offset: 16)
!629 = !DIDerivedType(tag: DW_TAG_member, name: "maptoneg", scope: !625, file: !144, line: 59, baseType: !177, size: 16, offset: 32)
!630 = !DIDerivedType(tag: DW_TAG_member, name: "blendtype", scope: !625, file: !144, line: 59, baseType: !177, size: 16, offset: 48)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !625, file: !144, line: 60, baseType: !276, size: 64, offset: 64)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "tex", scope: !625, file: !144, line: 61, baseType: !633, size: 64, offset: 128)
!633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !145, size: 64)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "uvname", scope: !625, file: !144, line: 62, baseType: !193, size: 512, offset: 192)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "projx", scope: !625, file: !144, line: 64, baseType: !28, size: 8, offset: 704)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "projy", scope: !625, file: !144, line: 64, baseType: !28, size: 8, offset: 712)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "projz", scope: !625, file: !144, line: 64, baseType: !28, size: 8, offset: 720)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !625, file: !144, line: 64, baseType: !28, size: 8, offset: 728)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "ofs", scope: !625, file: !144, line: 65, baseType: !339, size: 96, offset: 736)
!640 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !625, file: !144, line: 65, baseType: !339, size: 96, offset: 832)
!641 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !625, file: !144, line: 65, baseType: !26, size: 32, offset: 928)
!642 = !DIDerivedType(tag: DW_TAG_member, name: "texflag", scope: !625, file: !144, line: 67, baseType: !177, size: 16, offset: 960)
!643 = !DIDerivedType(tag: DW_TAG_member, name: "colormodel", scope: !625, file: !144, line: 67, baseType: !177, size: 16, offset: 976)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "pmapto", scope: !625, file: !144, line: 67, baseType: !177, size: 16, offset: 992)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "pmaptoneg", scope: !625, file: !144, line: 67, baseType: !177, size: 16, offset: 1008)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "normapspace", scope: !625, file: !144, line: 68, baseType: !177, size: 16, offset: 1024)
!647 = !DIDerivedType(tag: DW_TAG_member, name: "which_output", scope: !625, file: !144, line: 68, baseType: !177, size: 16, offset: 1040)
!648 = !DIDerivedType(tag: DW_TAG_member, name: "brush_map_mode", scope: !625, file: !144, line: 69, baseType: !28, size: 8, offset: 1056)
!649 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !625, file: !144, line: 69, baseType: !650, size: 56, offset: 1064)
!650 = !DICompositeType(tag: DW_TAG_array_type, baseType: !28, size: 56, elements: !651)
!651 = !{!652}
!652 = !DISubrange(count: 7)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !625, file: !144, line: 70, baseType: !26, size: 32, offset: 1120)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !625, file: !144, line: 70, baseType: !26, size: 32, offset: 1152)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !625, file: !144, line: 70, baseType: !26, size: 32, offset: 1184)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "k", scope: !625, file: !144, line: 70, baseType: !26, size: 32, offset: 1216)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "def_var", scope: !625, file: !144, line: 71, baseType: !26, size: 32, offset: 1248)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !625, file: !144, line: 71, baseType: !26, size: 32, offset: 1280)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "colfac", scope: !625, file: !144, line: 74, baseType: !26, size: 32, offset: 1312)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "varfac", scope: !625, file: !144, line: 74, baseType: !26, size: 32, offset: 1344)
!661 = !DIDerivedType(tag: DW_TAG_member, name: "norfac", scope: !625, file: !144, line: 77, baseType: !26, size: 32, offset: 1376)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "dispfac", scope: !625, file: !144, line: 77, baseType: !26, size: 32, offset: 1408)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "warpfac", scope: !625, file: !144, line: 77, baseType: !26, size: 32, offset: 1440)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "colspecfac", scope: !625, file: !144, line: 78, baseType: !26, size: 32, offset: 1472)
!665 = !DIDerivedType(tag: DW_TAG_member, name: "mirrfac", scope: !625, file: !144, line: 78, baseType: !26, size: 32, offset: 1504)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "alphafac", scope: !625, file: !144, line: 78, baseType: !26, size: 32, offset: 1536)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "difffac", scope: !625, file: !144, line: 79, baseType: !26, size: 32, offset: 1568)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "specfac", scope: !625, file: !144, line: 79, baseType: !26, size: 32, offset: 1600)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "emitfac", scope: !625, file: !144, line: 79, baseType: !26, size: 32, offset: 1632)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "hardfac", scope: !625, file: !144, line: 79, baseType: !26, size: 32, offset: 1664)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "raymirrfac", scope: !625, file: !144, line: 80, baseType: !26, size: 32, offset: 1696)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "translfac", scope: !625, file: !144, line: 80, baseType: !26, size: 32, offset: 1728)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "ambfac", scope: !625, file: !144, line: 80, baseType: !26, size: 32, offset: 1760)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "colemitfac", scope: !625, file: !144, line: 81, baseType: !26, size: 32, offset: 1792)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "colreflfac", scope: !625, file: !144, line: 81, baseType: !26, size: 32, offset: 1824)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "coltransfac", scope: !625, file: !144, line: 81, baseType: !26, size: 32, offset: 1856)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "densfac", scope: !625, file: !144, line: 82, baseType: !26, size: 32, offset: 1888)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "scatterfac", scope: !625, file: !144, line: 82, baseType: !26, size: 32, offset: 1920)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "reflfac", scope: !625, file: !144, line: 82, baseType: !26, size: 32, offset: 1952)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "timefac", scope: !625, file: !144, line: 85, baseType: !26, size: 32, offset: 1984)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "lengthfac", scope: !625, file: !144, line: 85, baseType: !26, size: 32, offset: 2016)
!682 = !DIDerivedType(tag: DW_TAG_member, name: "clumpfac", scope: !625, file: !144, line: 85, baseType: !26, size: 32, offset: 2048)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "dampfac", scope: !625, file: !144, line: 85, baseType: !26, size: 32, offset: 2080)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "kinkfac", scope: !625, file: !144, line: 86, baseType: !26, size: 32, offset: 2112)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "roughfac", scope: !625, file: !144, line: 86, baseType: !26, size: 32, offset: 2144)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "padensfac", scope: !625, file: !144, line: 86, baseType: !26, size: 32, offset: 2176)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "gravityfac", scope: !625, file: !144, line: 86, baseType: !26, size: 32, offset: 2208)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "lifefac", scope: !625, file: !144, line: 87, baseType: !26, size: 32, offset: 2240)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "sizefac", scope: !625, file: !144, line: 87, baseType: !26, size: 32, offset: 2272)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "ivelfac", scope: !625, file: !144, line: 87, baseType: !26, size: 32, offset: 2304)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "fieldfac", scope: !625, file: !144, line: 87, baseType: !26, size: 32, offset: 2336)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "shadowfac", scope: !625, file: !144, line: 90, baseType: !26, size: 32, offset: 2368)
!693 = !DIDerivedType(tag: DW_TAG_member, name: "zenupfac", scope: !625, file: !144, line: 93, baseType: !26, size: 32, offset: 2400)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "zendownfac", scope: !625, file: !144, line: 93, baseType: !26, size: 32, offset: 2432)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "blendfac", scope: !625, file: !144, line: 93, baseType: !26, size: 32, offset: 2464)
!696 = !{!697}
!697 = !DISubrange(count: 18)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "pr_texture", scope: !549, file: !550, line: 123, baseType: !177, size: 16, offset: 4032)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !549, file: !550, line: 123, baseType: !177, size: 16, offset: 4048)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !549, file: !550, line: 123, baseType: !701, size: 32, offset: 4064)
!701 = !DICompositeType(tag: DW_TAG_array_type, baseType: !177, size: 32, elements: !56)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !549, file: !550, line: 126, baseType: !703, size: 64, offset: 4096)
!703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !704, size: 64)
!704 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PreviewImage", file: !149, line: 159, size: 448, elements: !705)
!705 = !{!706, !708, !709, !710, !711, !713}
!706 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !704, file: !149, line: 161, baseType: !707, size: 64)
!707 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5, size: 64, elements: !56)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !704, file: !149, line: 162, baseType: !707, size: 64, offset: 64)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !704, file: !149, line: 163, baseType: !701, size: 32, offset: 128)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !704, file: !149, line: 164, baseType: !701, size: 32, offset: 160)
!711 = !DIDerivedType(tag: DW_TAG_member, name: "rect", scope: !704, file: !149, line: 165, baseType: !712, size: 128, offset: 192)
!712 = !DICompositeType(tag: DW_TAG_array_type, baseType: !50, size: 128, elements: !56)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !704, file: !149, line: 166, baseType: !714, size: 128, offset: 320)
!714 = !DICompositeType(tag: DW_TAG_array_type, baseType: !715, size: 128, elements: !56)
!715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !716, size: 64)
!716 = !DICompositeType(tag: DW_TAG_structure_type, name: "GPUTexture", file: !149, line: 46, flags: DIFlagFwdDecl)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !549, file: !550, line: 129, baseType: !718, size: 64, offset: 4160)
!718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !719, size: 64)
!719 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTree", file: !216, line: 57, flags: DIFlagFwdDecl)
!720 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !271, file: !216, line: 1223, baseType: !270, size: 64, offset: 1152)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !271, file: !216, line: 1225, baseType: !203, size: 128, offset: 1216)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "basact", scope: !271, file: !216, line: 1226, baseType: !723, size: 64, offset: 1344)
!723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !724, size: 64)
!724 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Base", file: !216, line: 69, size: 320, elements: !725)
!725 = !{!726, !727, !728, !729, !730, !731, !732, !733}
!726 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !724, file: !216, line: 70, baseType: !723, size: 64)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !724, file: !216, line: 70, baseType: !723, size: 64, offset: 64)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !724, file: !216, line: 71, baseType: !5, size: 32, offset: 128)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "selcol", scope: !724, file: !216, line: 71, baseType: !5, size: 32, offset: 160)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !724, file: !216, line: 72, baseType: !25, size: 32, offset: 192)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "sx", scope: !724, file: !216, line: 73, baseType: !177, size: 16, offset: 224)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "sy", scope: !724, file: !216, line: 73, baseType: !177, size: 16, offset: 240)
!733 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !724, file: !216, line: 74, baseType: !276, size: 64, offset: 256)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "obedit", scope: !271, file: !216, line: 1227, baseType: !276, size: 64, offset: 1408)
!735 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !271, file: !216, line: 1229, baseType: !339, size: 96, offset: 1472)
!736 = !DIDerivedType(tag: DW_TAG_member, name: "twcent", scope: !271, file: !216, line: 1230, baseType: !339, size: 96, offset: 1568)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "twmin", scope: !271, file: !216, line: 1231, baseType: !339, size: 96, offset: 1664)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "twmax", scope: !271, file: !216, line: 1231, baseType: !339, size: 96, offset: 1760)
!739 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !271, file: !216, line: 1233, baseType: !5, size: 32, offset: 1856)
!740 = !DIDerivedType(tag: DW_TAG_member, name: "layact", scope: !271, file: !216, line: 1234, baseType: !25, size: 32, offset: 1888)
!741 = !DIDerivedType(tag: DW_TAG_member, name: "lay_updated", scope: !271, file: !216, line: 1235, baseType: !5, size: 32, offset: 1920)
!742 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !271, file: !216, line: 1237, baseType: !177, size: 16, offset: 1952)
!743 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !271, file: !216, line: 1239, baseType: !28, size: 8, offset: 1968)
!744 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !271, file: !216, line: 1240, baseType: !745, size: 8, offset: 1976)
!745 = !DICompositeType(tag: DW_TAG_array_type, baseType: !28, size: 8, elements: !746)
!746 = !{!747}
!747 = !DISubrange(count: 1)
!748 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !271, file: !216, line: 1242, baseType: !718, size: 64, offset: 1984)
!749 = !DIDerivedType(tag: DW_TAG_member, name: "ed", scope: !271, file: !216, line: 1244, baseType: !750, size: 64, offset: 2048)
!750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !751, size: 64)
!751 = !DICompositeType(tag: DW_TAG_structure_type, name: "Editing", file: !216, line: 59, flags: DIFlagFwdDecl)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "toolsettings", scope: !271, file: !216, line: 1246, baseType: !753, size: 64, offset: 2112)
!753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !754, size: 64)
!754 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ToolSettings", file: !216, line: 1067, size: 5184, elements: !755)
!755 = !{!756, !785, !786, !801, !807, !808, !809, !810, !811, !812, !813, !814, !815, !816, !817, !818, !819, !823, !951, !978, !979, !980, !981, !982, !983, !984, !985, !986, !987, !988, !989, !990, !991, !992, !993, !994, !995, !996, !997, !998, !1000, !1001, !1002, !1003, !1004, !1005, !1006, !1007, !1009, !1010, !1011, !1012, !1013, !1014, !1015, !1016, !1017, !1018, !1019, !1020, !1021, !1022, !1023, !1024, !1025, !1026, !1027, !1028, !1029, !1030, !1031, !1032, !1033, !1034, !1060}
!756 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint", scope: !754, file: !216, line: 1068, baseType: !757, size: 64)
!757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !758, size: 64)
!758 = !DIDerivedType(tag: DW_TAG_typedef, name: "VPaint", file: !216, line: 934, baseType: !759)
!759 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VPaint", file: !216, line: 925, size: 576, elements: !760)
!760 = !{!761, !777, !778, !779, !780, !781, !784}
!761 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !759, file: !216, line: 926, baseType: !762, size: 320)
!762 = !DIDerivedType(tag: DW_TAG_typedef, name: "Paint", file: !216, line: 830, baseType: !763)
!763 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Paint", file: !216, line: 813, size: 320, elements: !764)
!764 = !{!765, !768, !771, !772, !774, !775, !776}
!765 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !763, file: !216, line: 814, baseType: !766, size: 64)
!766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !767, size: 64)
!767 = !DICompositeType(tag: DW_TAG_structure_type, name: "Brush", file: !216, line: 51, flags: DIFlagFwdDecl)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "palette", scope: !763, file: !216, line: 815, baseType: !769, size: 64, offset: 64)
!769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !770, size: 64)
!770 = !DICompositeType(tag: DW_TAG_structure_type, name: "Palette", file: !216, line: 815, flags: DIFlagFwdDecl)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor", scope: !763, file: !216, line: 818, baseType: !24, size: 64, offset: 128)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor_col", scope: !763, file: !216, line: 819, baseType: !773, size: 32, offset: 192)
!773 = !DICompositeType(tag: DW_TAG_array_type, baseType: !45, size: 32, elements: !412)
!774 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !763, file: !216, line: 822, baseType: !25, size: 32, offset: 224)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "num_input_samples", scope: !763, file: !216, line: 826, baseType: !25, size: 32, offset: 256)
!776 = !DIDerivedType(tag: DW_TAG_member, name: "symmetry_flags", scope: !763, file: !216, line: 829, baseType: !25, size: 32, offset: 288)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !759, file: !216, line: 928, baseType: !177, size: 16, offset: 320)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !759, file: !216, line: 928, baseType: !177, size: 16, offset: 336)
!779 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !759, file: !216, line: 929, baseType: !25, size: 32, offset: 352)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint_prev", scope: !759, file: !216, line: 930, baseType: !50, size: 64, offset: 384)
!781 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint_prev", scope: !759, file: !216, line: 931, baseType: !782, size: 64, offset: 448)
!782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !783, size: 64)
!783 = !DICompositeType(tag: DW_TAG_structure_type, name: "MDeformVert", file: !216, line: 931, flags: DIFlagFwdDecl)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !759, file: !216, line: 933, baseType: !24, size: 64, offset: 512)
!785 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint", scope: !754, file: !216, line: 1069, baseType: !757, size: 64, offset: 64)
!786 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt", scope: !754, file: !216, line: 1070, baseType: !787, size: 64, offset: 128)
!787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !788, size: 64)
!788 = !DIDerivedType(tag: DW_TAG_typedef, name: "Sculpt", file: !216, line: 916, baseType: !789)
!789 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Sculpt", file: !216, line: 891, size: 704, elements: !790)
!790 = !{!791, !792, !793, !795, !796, !797, !798, !799, !800}
!791 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !789, file: !216, line: 892, baseType: !762, size: 320)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !789, file: !216, line: 896, baseType: !25, size: 32, offset: 320)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "radial_symm", scope: !789, file: !216, line: 900, baseType: !794, size: 96, offset: 352)
!794 = !DICompositeType(tag: DW_TAG_array_type, baseType: !25, size: 96, elements: !340)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "detail_size", scope: !789, file: !216, line: 903, baseType: !26, size: 32, offset: 448)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "symmetrize_direction", scope: !789, file: !216, line: 906, baseType: !25, size: 32, offset: 480)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_factor", scope: !789, file: !216, line: 909, baseType: !26, size: 32, offset: 512)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "constant_detail", scope: !789, file: !216, line: 912, baseType: !26, size: 32, offset: 544)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_object", scope: !789, file: !216, line: 914, baseType: !276, size: 64, offset: 576)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !789, file: !216, line: 915, baseType: !24, size: 64, offset: 640)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "uvsculpt", scope: !754, file: !216, line: 1071, baseType: !802, size: 64, offset: 192)
!802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !803, size: 64)
!803 = !DIDerivedType(tag: DW_TAG_typedef, name: "UvSculpt", file: !216, line: 920, baseType: !804)
!804 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UvSculpt", file: !216, line: 918, size: 320, elements: !805)
!805 = !{!806}
!806 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !804, file: !216, line: 919, baseType: !762, size: 320)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "vgroup_weight", scope: !754, file: !216, line: 1075, baseType: !26, size: 32, offset: 256)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "doublimit", scope: !754, file: !216, line: 1077, baseType: !26, size: 32, offset: 288)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "normalsize", scope: !754, file: !216, line: 1078, baseType: !26, size: 32, offset: 320)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "automerge", scope: !754, file: !216, line: 1079, baseType: !177, size: 16, offset: 352)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !754, file: !216, line: 1082, baseType: !177, size: 16, offset: 368)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "unwrapper", scope: !754, file: !216, line: 1085, baseType: !28, size: 8, offset: 384)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_flag", scope: !754, file: !216, line: 1086, baseType: !28, size: 8, offset: 392)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "uv_flag", scope: !754, file: !216, line: 1087, baseType: !28, size: 8, offset: 400)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "uv_selectmode", scope: !754, file: !216, line: 1088, baseType: !28, size: 8, offset: 408)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_margin", scope: !754, file: !216, line: 1090, baseType: !26, size: 32, offset: 416)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "autoik_chainlen", scope: !754, file: !216, line: 1093, baseType: !177, size: 16, offset: 448)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "gpencil_flags", scope: !754, file: !216, line: 1096, baseType: !28, size: 8, offset: 464)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !754, file: !216, line: 1098, baseType: !820, size: 40, offset: 472)
!820 = !DICompositeType(tag: DW_TAG_array_type, baseType: !28, size: 40, elements: !821)
!821 = !{!822}
!822 = !DISubrange(count: 5)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "imapaint", scope: !754, file: !216, line: 1101, baseType: !824, size: 832, offset: 512)
!824 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImagePaintSettings", file: !216, line: 836, size: 832, elements: !825)
!825 = !{!826, !827, !828, !829, !830, !831, !832, !833, !834, !947, !948, !949, !950}
!826 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !824, file: !216, line: 837, baseType: !762, size: 320)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !824, file: !216, line: 839, baseType: !177, size: 16, offset: 320)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "missing_data", scope: !824, file: !216, line: 839, baseType: !177, size: 16, offset: 336)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "seam_bleed", scope: !824, file: !216, line: 842, baseType: !177, size: 16, offset: 352)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "normal_angle", scope: !824, file: !216, line: 842, baseType: !177, size: 16, offset: 368)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "screen_grab_size", scope: !824, file: !216, line: 843, baseType: !701, size: 32, offset: 384)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !824, file: !216, line: 845, baseType: !25, size: 32, offset: 416)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !824, file: !216, line: 847, baseType: !24, size: 64, offset: 448)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "stencil", scope: !824, file: !216, line: 848, baseType: !835, size: 64, offset: 512)
!835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !836, size: 64)
!836 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Image", file: !4, line: 77, size: 15424, elements: !837)
!837 = !{!838, !839, !840, !843, !844, !848, !901, !904, !905, !906, !907, !908, !909, !910, !911, !912, !913, !914, !915, !916, !917, !918, !919, !920, !921, !922, !923, !924, !925, !926, !927, !928, !929, !930, !931, !932, !933, !939, !940, !941}
!838 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !836, file: !4, line: 78, baseType: !148, size: 960)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !836, file: !4, line: 80, baseType: !82, size: 8192, offset: 960)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !836, file: !4, line: 82, baseType: !841, size: 64, offset: 9152)
!841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !842, size: 64)
!842 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieCache", file: !4, line: 43, flags: DIFlagFwdDecl)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !836, file: !4, line: 83, baseType: !715, size: 64, offset: 9216)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !836, file: !4, line: 86, baseType: !845, size: 64, offset: 9280)
!845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !846, size: 64)
!846 = !DICompositeType(tag: DW_TAG_structure_type, name: "anim", file: !847, line: 85, flags: DIFlagFwdDecl)
!847 = !DIFile(filename: "blender/source/blender/imbuf/IMB_imbuf.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!848 = !DIDerivedType(tag: DW_TAG_member, name: "rr", scope: !836, file: !4, line: 87, baseType: !849, size: 64, offset: 9344)
!849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !850, size: 64)
!850 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderResult", file: !851, line: 110, size: 1152, elements: !852)
!851 = !DIFile(filename: "blender/source/blender/render/extern/include/RE_pipeline.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!852 = !{!853, !854, !855, !856, !857, !858, !859, !860, !861, !862, !863, !864, !865, !866, !868, !897, !898, !899, !900}
!853 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !850, file: !851, line: 111, baseType: !849, size: 64)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !850, file: !851, line: 111, baseType: !849, size: 64, offset: 64)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "rectx", scope: !850, file: !851, line: 114, baseType: !25, size: 32, offset: 128)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "recty", scope: !850, file: !851, line: 114, baseType: !25, size: 32, offset: 160)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "crop", scope: !850, file: !851, line: 115, baseType: !177, size: 16, offset: 192)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "sample_nr", scope: !850, file: !851, line: 115, baseType: !177, size: 16, offset: 208)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "rect32", scope: !850, file: !851, line: 118, baseType: !65, size: 64, offset: 256)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "rectf", scope: !850, file: !851, line: 120, baseType: !52, size: 64, offset: 320)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "rectz", scope: !850, file: !851, line: 122, baseType: !52, size: 64, offset: 384)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "tilerect", scope: !850, file: !851, line: 125, baseType: !104, size: 128, offset: 448)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "xof", scope: !850, file: !851, line: 127, baseType: !25, size: 32, offset: 576)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "yof", scope: !850, file: !851, line: 127, baseType: !25, size: 32, offset: 608)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "layers", scope: !850, file: !851, line: 130, baseType: !203, size: 128, offset: 640)
!866 = !DIDerivedType(tag: DW_TAG_member, name: "renrect", scope: !850, file: !851, line: 133, baseType: !867, size: 128, offset: 768)
!867 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !104)
!868 = !DIDerivedType(tag: DW_TAG_member, name: "renlay", scope: !850, file: !851, line: 134, baseType: !869, size: 64, offset: 896)
!869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !870, size: 64)
!870 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !871)
!871 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderLayer", file: !851, line: 108, baseType: !872)
!872 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderLayer", file: !851, line: 85, size: 1600, elements: !873)
!873 = !{!874, !876, !877, !881, !882, !883, !884, !885, !886, !887, !888, !889, !890, !891, !892, !893, !894, !895, !896}
!874 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !872, file: !851, line: 86, baseType: !875, size: 64)
!875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !872, size: 64)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !872, file: !851, line: 86, baseType: !875, size: 64, offset: 64)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !872, file: !851, line: 89, baseType: !878, size: 592, offset: 128)
!878 = !DICompositeType(tag: DW_TAG_array_type, baseType: !28, size: 592, elements: !879)
!879 = !{!880}
!880 = !DISubrange(count: 74)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !872, file: !851, line: 90, baseType: !5, size: 32, offset: 736)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "lay_zmask", scope: !872, file: !851, line: 90, baseType: !5, size: 32, offset: 768)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "lay_exclude", scope: !872, file: !851, line: 90, baseType: !5, size: 32, offset: 800)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "layflag", scope: !872, file: !851, line: 91, baseType: !25, size: 32, offset: 832)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "passflag", scope: !872, file: !851, line: 91, baseType: !25, size: 32, offset: 864)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "pass_xor", scope: !872, file: !851, line: 91, baseType: !25, size: 32, offset: 896)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "mat_override", scope: !872, file: !851, line: 93, baseType: !397, size: 64, offset: 960)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "light_override", scope: !872, file: !851, line: 94, baseType: !494, size: 64, offset: 1024)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "rectf", scope: !872, file: !851, line: 96, baseType: !52, size: 64, offset: 1088)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "acolrect", scope: !872, file: !851, line: 97, baseType: !52, size: 64, offset: 1152)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "scolrect", scope: !872, file: !851, line: 98, baseType: !52, size: 64, offset: 1216)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "display_buffer", scope: !872, file: !851, line: 99, baseType: !65, size: 64, offset: 1280)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "rectx", scope: !872, file: !851, line: 101, baseType: !25, size: 32, offset: 1344)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "recty", scope: !872, file: !851, line: 101, baseType: !25, size: 32, offset: 1376)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "exrhandle", scope: !872, file: !851, line: 104, baseType: !24, size: 64, offset: 1408)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "passes", scope: !872, file: !851, line: 106, baseType: !203, size: 128, offset: 1472)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "do_exr_tile", scope: !850, file: !851, line: 137, baseType: !25, size: 32, offset: 960)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !850, file: !851, line: 140, baseType: !25, size: 32, offset: 992)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "have_combined", scope: !850, file: !851, line: 143, baseType: !25, size: 32, offset: 1024)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !850, file: !851, line: 146, baseType: !27, size: 64, offset: 1088)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "renders", scope: !836, file: !4, line: 89, baseType: !902, size: 512, offset: 9408)
!902 = !DICompositeType(tag: DW_TAG_array_type, baseType: !849, size: 512, elements: !903)
!903 = !{!306}
!904 = !DIDerivedType(tag: DW_TAG_member, name: "render_slot", scope: !836, file: !4, line: 90, baseType: !177, size: 16, offset: 9920)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "last_render_slot", scope: !836, file: !4, line: 90, baseType: !177, size: 16, offset: 9936)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !836, file: !4, line: 92, baseType: !177, size: 16, offset: 9952)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !836, file: !4, line: 92, baseType: !177, size: 16, offset: 9968)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !836, file: !4, line: 93, baseType: !177, size: 16, offset: 9984)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !836, file: !4, line: 93, baseType: !177, size: 16, offset: 10000)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !836, file: !4, line: 94, baseType: !25, size: 32, offset: 10016)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "tpageflag", scope: !836, file: !4, line: 97, baseType: !177, size: 16, offset: 10048)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "totbind", scope: !836, file: !4, line: 97, baseType: !177, size: 16, offset: 10064)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "xrep", scope: !836, file: !4, line: 98, baseType: !177, size: 16, offset: 10080)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "yrep", scope: !836, file: !4, line: 98, baseType: !177, size: 16, offset: 10096)
!915 = !DIDerivedType(tag: DW_TAG_member, name: "twsta", scope: !836, file: !4, line: 99, baseType: !177, size: 16, offset: 10112)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "twend", scope: !836, file: !4, line: 99, baseType: !177, size: 16, offset: 10128)
!917 = !DIDerivedType(tag: DW_TAG_member, name: "bindcode", scope: !836, file: !4, line: 100, baseType: !5, size: 32, offset: 10144)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "repbind", scope: !836, file: !4, line: 101, baseType: !50, size: 64, offset: 10176)
!919 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !836, file: !4, line: 103, baseType: !170, size: 64, offset: 10240)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !836, file: !4, line: 104, baseType: !703, size: 64, offset: 10304)
!921 = !DIDerivedType(tag: DW_TAG_member, name: "lastupdate", scope: !836, file: !4, line: 107, baseType: !26, size: 32, offset: 10368)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "lastused", scope: !836, file: !4, line: 108, baseType: !25, size: 32, offset: 10400)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "animspeed", scope: !836, file: !4, line: 109, baseType: !177, size: 16, offset: 10432)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !836, file: !4, line: 110, baseType: !177, size: 16, offset: 10448)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "gen_x", scope: !836, file: !4, line: 113, baseType: !25, size: 32, offset: 10464)
!926 = !DIDerivedType(tag: DW_TAG_member, name: "gen_y", scope: !836, file: !4, line: 113, baseType: !25, size: 32, offset: 10496)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "gen_type", scope: !836, file: !4, line: 114, baseType: !28, size: 8, offset: 10528)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "gen_flag", scope: !836, file: !4, line: 114, baseType: !28, size: 8, offset: 10536)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "gen_depth", scope: !836, file: !4, line: 115, baseType: !177, size: 16, offset: 10544)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "gen_color", scope: !836, file: !4, line: 116, baseType: !411, size: 128, offset: 10560)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "aspx", scope: !836, file: !4, line: 119, baseType: !26, size: 32, offset: 10688)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "aspy", scope: !836, file: !4, line: 119, baseType: !26, size: 32, offset: 10720)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !836, file: !4, line: 122, baseType: !934, size: 512, offset: 10752)
!934 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedColorspaceSettings", file: !935, line: 182, baseType: !936)
!935 = !DIFile(filename: "blender/source/blender/makesdna/DNA_color_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!936 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedColorspaceSettings", file: !935, line: 180, size: 512, elements: !937)
!937 = !{!938}
!938 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !936, file: !935, line: 181, baseType: !193, size: 512)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_mode", scope: !836, file: !4, line: 123, baseType: !28, size: 8, offset: 11264)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !836, file: !4, line: 125, baseType: !650, size: 56, offset: 11272)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "render_slots", scope: !836, file: !4, line: 126, baseType: !942, size: 4096, offset: 11328)
!942 = !DICompositeType(tag: DW_TAG_array_type, baseType: !943, size: 4096, elements: !903)
!943 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderSlot", file: !4, line: 69, baseType: !944)
!944 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderSlot", file: !4, line: 67, size: 512, elements: !945)
!945 = !{!946}
!946 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !944, file: !4, line: 68, baseType: !193, size: 512)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "clone", scope: !824, file: !216, line: 849, baseType: !835, size: 64, offset: 576)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "canvas", scope: !824, file: !216, line: 850, baseType: !835, size: 64, offset: 640)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "stencil_col", scope: !824, file: !216, line: 851, baseType: !339, size: 96, offset: 704)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !824, file: !216, line: 852, baseType: !26, size: 32, offset: 800)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "particle", scope: !754, file: !216, line: 1104, baseType: !952, size: 1344, offset: 1344)
!952 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleEditSettings", file: !216, line: 867, size: 1344, elements: !953)
!953 = !{!954, !955, !956, !957, !958, !969, !970, !971, !972, !973, !974, !975, !976, !977}
!954 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !952, file: !216, line: 868, baseType: !177, size: 16)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "totrekey", scope: !952, file: !216, line: 869, baseType: !177, size: 16, offset: 16)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "totaddkey", scope: !952, file: !216, line: 870, baseType: !177, size: 16, offset: 32)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "brushtype", scope: !952, file: !216, line: 871, baseType: !177, size: 16, offset: 48)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !952, file: !216, line: 873, baseType: !959, size: 896, offset: 64)
!959 = !DICompositeType(tag: DW_TAG_array_type, baseType: !960, size: 896, elements: !651)
!960 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleBrushData", file: !216, line: 864, baseType: !961)
!961 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleBrushData", file: !216, line: 859, size: 128, elements: !962)
!962 = !{!963, !964, !965, !966, !967, !968}
!963 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !961, file: !216, line: 860, baseType: !177, size: 16)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !961, file: !216, line: 861, baseType: !177, size: 16, offset: 16)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !961, file: !216, line: 861, baseType: !177, size: 16, offset: 32)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !961, file: !216, line: 861, baseType: !177, size: 16, offset: 48)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !961, file: !216, line: 862, baseType: !25, size: 32, offset: 64)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "strength", scope: !961, file: !216, line: 863, baseType: !26, size: 32, offset: 96)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !952, file: !216, line: 874, baseType: !24, size: 64, offset: 960)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "emitterdist", scope: !952, file: !216, line: 876, baseType: !26, size: 32, offset: 1024)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !952, file: !216, line: 876, baseType: !26, size: 32, offset: 1056)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !952, file: !216, line: 878, baseType: !25, size: 32, offset: 1088)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "edittype", scope: !952, file: !216, line: 879, baseType: !25, size: 32, offset: 1120)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "draw_step", scope: !952, file: !216, line: 881, baseType: !25, size: 32, offset: 1152)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "fade_frames", scope: !952, file: !216, line: 881, baseType: !25, size: 32, offset: 1184)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !952, file: !216, line: 883, baseType: !270, size: 64, offset: 1216)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !952, file: !216, line: 884, baseType: !276, size: 64, offset: 1280)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_size", scope: !754, file: !216, line: 1107, baseType: !26, size: 32, offset: 2688)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "select_thresh", scope: !754, file: !216, line: 1110, baseType: !26, size: 32, offset: 2720)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_mode", scope: !754, file: !216, line: 1113, baseType: !177, size: 16, offset: 2752)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_flag", scope: !754, file: !216, line: 1113, baseType: !177, size: 16, offset: 2768)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "multires_subdiv_type", scope: !754, file: !216, line: 1116, baseType: !28, size: 8, offset: 2784)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !754, file: !216, line: 1117, baseType: !745, size: 8, offset: 2792)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_resolution", scope: !754, file: !216, line: 1120, baseType: !177, size: 16, offset: 2800)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_internal", scope: !754, file: !216, line: 1121, baseType: !26, size: 32, offset: 2816)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_external", scope: !754, file: !216, line: 1122, baseType: !26, size: 32, offset: 2848)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_ratio", scope: !754, file: !216, line: 1123, baseType: !26, size: 32, offset: 2880)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_limit", scope: !754, file: !216, line: 1124, baseType: !26, size: 32, offset: 2912)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_angle_limit", scope: !754, file: !216, line: 1125, baseType: !26, size: 32, offset: 2944)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_correlation_limit", scope: !754, file: !216, line: 1126, baseType: !26, size: 32, offset: 2976)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_symmetry_limit", scope: !754, file: !216, line: 1127, baseType: !26, size: 32, offset: 3008)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_angle_weight", scope: !754, file: !216, line: 1128, baseType: !26, size: 32, offset: 3040)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_length_weight", scope: !754, file: !216, line: 1129, baseType: !26, size: 32, offset: 3072)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_distance_weight", scope: !754, file: !216, line: 1130, baseType: !26, size: 32, offset: 3104)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_options", scope: !754, file: !216, line: 1131, baseType: !177, size: 16, offset: 3136)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro", scope: !754, file: !216, line: 1132, baseType: !28, size: 8, offset: 3152)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro_passes", scope: !754, file: !216, line: 1133, baseType: !28, size: 8, offset: 3160)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivisions", scope: !754, file: !216, line: 1134, baseType: !999, size: 24, offset: 3168)
!999 = !DICompositeType(tag: DW_TAG_array_type, baseType: !28, size: 24, elements: !340)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_multi_level", scope: !754, file: !216, line: 1135, baseType: !28, size: 8, offset: 3192)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_template", scope: !754, file: !216, line: 1138, baseType: !276, size: 64, offset: 3200)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching", scope: !754, file: !216, line: 1139, baseType: !28, size: 8, offset: 3264)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching_convert", scope: !754, file: !216, line: 1140, baseType: !28, size: 8, offset: 3272)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivision_number", scope: !754, file: !216, line: 1141, baseType: !28, size: 8, offset: 3280)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_options", scope: !754, file: !216, line: 1142, baseType: !28, size: 8, offset: 3288)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_roll", scope: !754, file: !216, line: 1143, baseType: !28, size: 8, offset: 3296)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_side_string", scope: !754, file: !216, line: 1144, baseType: !1008, size: 64, offset: 3304)
!1008 = !DICompositeType(tag: DW_TAG_array_type, baseType: !28, size: 64, elements: !903)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_num_string", scope: !754, file: !216, line: 1145, baseType: !1008, size: 64, offset: 3368)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode", scope: !754, file: !216, line: 1148, baseType: !28, size: 8, offset: 3432)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode_live_unwrap", scope: !754, file: !216, line: 1149, baseType: !28, size: 8, offset: 3440)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "snap_mode", scope: !754, file: !216, line: 1152, baseType: !28, size: 8, offset: 3448)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "snap_node_mode", scope: !754, file: !216, line: 1152, baseType: !28, size: 8, offset: 3456)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "snap_uv_mode", scope: !754, file: !216, line: 1153, baseType: !28, size: 8, offset: 3464)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "snap_flag", scope: !754, file: !216, line: 1154, baseType: !177, size: 16, offset: 3472)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "snap_target", scope: !754, file: !216, line: 1154, baseType: !177, size: 16, offset: 3488)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "proportional", scope: !754, file: !216, line: 1155, baseType: !177, size: 16, offset: 3504)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "prop_mode", scope: !754, file: !216, line: 1155, baseType: !177, size: 16, offset: 3520)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_objects", scope: !754, file: !216, line: 1156, baseType: !28, size: 8, offset: 3536)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_mask", scope: !754, file: !216, line: 1157, baseType: !28, size: 8, offset: 3544)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "auto_normalize", scope: !754, file: !216, line: 1159, baseType: !28, size: 8, offset: 3552)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "multipaint", scope: !754, file: !216, line: 1160, baseType: !28, size: 8, offset: 3560)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "weightuser", scope: !754, file: !216, line: 1161, baseType: !28, size: 8, offset: 3568)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "vgroupsubset", scope: !754, file: !216, line: 1162, baseType: !28, size: 8, offset: 3576)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "use_uv_sculpt", scope: !754, file: !216, line: 1165, baseType: !25, size: 32, offset: 3584)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_settings", scope: !754, file: !216, line: 1166, baseType: !25, size: 32, offset: 3616)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_tool", scope: !754, file: !216, line: 1167, baseType: !25, size: 32, offset: 3648)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "uv_relax_method", scope: !754, file: !216, line: 1168, baseType: !25, size: 32, offset: 3680)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_settings", scope: !754, file: !216, line: 1171, baseType: !177, size: 16, offset: 3712)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !754, file: !216, line: 1171, baseType: !177, size: 16, offset: 3728)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_size", scope: !754, file: !216, line: 1172, baseType: !25, size: 32, offset: 3744)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_unprojected_radius", scope: !754, file: !216, line: 1173, baseType: !26, size: 32, offset: 3776)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_alpha", scope: !754, file: !216, line: 1174, baseType: !26, size: 32, offset: 3808)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "unified_paint_settings", scope: !754, file: !216, line: 1177, baseType: !1035, size: 1024, offset: 3840)
!1035 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnifiedPaintSettings", file: !216, line: 963, size: 1024, elements: !1036)
!1036 = !{!1037, !1038, !1039, !1040, !1041, !1042, !1043, !1044, !1045, !1046, !1047, !1048, !1049, !1050, !1051, !1052, !1053, !1054, !1055, !1056, !1057, !1058, !1059}
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1035, file: !216, line: 965, baseType: !25, size: 32)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "unprojected_radius", scope: !1035, file: !216, line: 968, baseType: !26, size: 32, offset: 32)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !1035, file: !216, line: 971, baseType: !26, size: 32, offset: 64)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1035, file: !216, line: 974, baseType: !26, size: 32, offset: 96)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "rgb", scope: !1035, file: !216, line: 977, baseType: !339, size: 96, offset: 128)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "secondary_rgb", scope: !1035, file: !216, line: 979, baseType: !339, size: 96, offset: 224)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1035, file: !216, line: 982, baseType: !25, size: 32, offset: 320)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "last_rake", scope: !1035, file: !216, line: 987, baseType: !125, size: 64, offset: 352)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "brush_rotation", scope: !1035, file: !216, line: 989, baseType: !26, size: 32, offset: 416)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "draw_anchored", scope: !1035, file: !216, line: 994, baseType: !25, size: 32, offset: 448)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_size", scope: !1035, file: !216, line: 995, baseType: !25, size: 32, offset: 480)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "draw_inverted", scope: !1035, file: !216, line: 997, baseType: !28, size: 8, offset: 512)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1035, file: !216, line: 998, baseType: !650, size: 56, offset: 520)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "overlap_factor", scope: !1035, file: !216, line: 1000, baseType: !26, size: 32, offset: 576)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_initial_mouse", scope: !1035, file: !216, line: 1003, baseType: !125, size: 64, offset: 608)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "stroke_active", scope: !1035, file: !216, line: 1006, baseType: !25, size: 32, offset: 672)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "size_pressure_value", scope: !1035, file: !216, line: 1009, baseType: !26, size: 32, offset: 704)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "tex_mouse", scope: !1035, file: !216, line: 1012, baseType: !125, size: 64, offset: 736)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "mask_tex_mouse", scope: !1035, file: !216, line: 1015, baseType: !125, size: 64, offset: 800)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "do_linear_conversion", scope: !1035, file: !216, line: 1018, baseType: !25, size: 32, offset: 864)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1035, file: !216, line: 1019, baseType: !95, size: 64, offset: 896)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_radius", scope: !1035, file: !216, line: 1023, baseType: !26, size: 32, offset: 960)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !1035, file: !216, line: 1024, baseType: !25, size: 32, offset: 992)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "statvis", scope: !754, file: !216, line: 1179, baseType: !1061, size: 320, offset: 4864)
!1061 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MeshStatVis", file: !216, line: 1043, size: 320, elements: !1062)
!1062 = !{!1063, !1064, !1066, !1067, !1068, !1069, !1070, !1071, !1072, !1073, !1074, !1075, !1076}
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1061, file: !216, line: 1044, baseType: !28, size: 8)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "_pad1", scope: !1061, file: !216, line: 1045, baseType: !1065, size: 16, offset: 8)
!1065 = !DICompositeType(tag: DW_TAG_array_type, baseType: !28, size: 16, elements: !56)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_axis", scope: !1061, file: !216, line: 1048, baseType: !28, size: 8, offset: 24)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_min", scope: !1061, file: !216, line: 1049, baseType: !26, size: 32, offset: 32)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_max", scope: !1061, file: !216, line: 1049, baseType: !26, size: 32, offset: 64)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_min", scope: !1061, file: !216, line: 1052, baseType: !26, size: 32, offset: 96)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_max", scope: !1061, file: !216, line: 1052, baseType: !26, size: 32, offset: 128)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_samples", scope: !1061, file: !216, line: 1053, baseType: !28, size: 8, offset: 160)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "_pad2", scope: !1061, file: !216, line: 1054, baseType: !999, size: 24, offset: 168)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "distort_min", scope: !1061, file: !216, line: 1057, baseType: !26, size: 32, offset: 192)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "distort_max", scope: !1061, file: !216, line: 1057, baseType: !26, size: 32, offset: 224)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_min", scope: !1061, file: !216, line: 1060, baseType: !26, size: 32, offset: 256)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_max", scope: !1061, file: !216, line: 1060, baseType: !26, size: 32, offset: 288)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !271, file: !216, line: 1247, baseType: !1078, size: 64, offset: 2176)
!1078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1079, size: 64)
!1079 = !DICompositeType(tag: DW_TAG_structure_type, name: "SceneStats", file: !216, line: 60, flags: DIFlagFwdDecl)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !271, file: !216, line: 1251, baseType: !1081, size: 31872, offset: 2240)
!1081 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderData", file: !216, line: 403, size: 31872, elements: !1082)
!1082 = !{!1083, !1165, !1185, !1194, !1214, !1234, !1235, !1236, !1237, !1238, !1239, !1240, !1241, !1242, !1243, !1244, !1245, !1246, !1247, !1248, !1249, !1250, !1251, !1252, !1253, !1254, !1255, !1256, !1257, !1258, !1259, !1260, !1261, !1262, !1263, !1264, !1265, !1266, !1267, !1268, !1269, !1270, !1271, !1272, !1273, !1274, !1275, !1276, !1277, !1278, !1279, !1280, !1281, !1282, !1283, !1284, !1285, !1286, !1287, !1288, !1289, !1290, !1291, !1292, !1293, !1294, !1295, !1296, !1297, !1298, !1299, !1300, !1301, !1302, !1303, !1304, !1305, !1306, !1307, !1308, !1309, !1310, !1311, !1312, !1313, !1314, !1315, !1316, !1317, !1321, !1322, !1323, !1324, !1325, !1326, !1327, !1328, !1329, !1330, !1331, !1332, !1333, !1334, !1335, !1336, !1337, !1338, !1339, !1340, !1341, !1342, !1343, !1344, !1347, !1348, !1349, !1353, !1369, !1370}
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !1081, file: !216, line: 404, baseType: !1084, size: 1984)
!1084 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageFormatData", file: !216, line: 259, size: 1984, elements: !1085)
!1085 = !{!1086, !1087, !1088, !1089, !1090, !1091, !1092, !1093, !1094, !1095, !1096, !1097, !1098, !1099, !1103, !1160}
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !1084, file: !216, line: 260, baseType: !28, size: 8)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1084, file: !216, line: 263, baseType: !28, size: 8, offset: 8)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !1084, file: !216, line: 266, baseType: !28, size: 8, offset: 16)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1084, file: !216, line: 267, baseType: !28, size: 8, offset: 24)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1084, file: !216, line: 269, baseType: !28, size: 8, offset: 32)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "compress", scope: !1084, file: !216, line: 270, baseType: !28, size: 8, offset: 40)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "exr_codec", scope: !1084, file: !216, line: 276, baseType: !28, size: 8, offset: 48)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_flag", scope: !1084, file: !216, line: 279, baseType: !28, size: 8, offset: 56)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_white", scope: !1084, file: !216, line: 280, baseType: !177, size: 16, offset: 64)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_black", scope: !1084, file: !216, line: 280, baseType: !177, size: 16, offset: 80)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_gamma", scope: !1084, file: !216, line: 281, baseType: !26, size: 32, offset: 96)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_flag", scope: !1084, file: !216, line: 284, baseType: !28, size: 8, offset: 128)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_codec", scope: !1084, file: !216, line: 285, baseType: !28, size: 8, offset: 136)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1084, file: !216, line: 287, baseType: !1100, size: 48, offset: 144)
!1100 = !DICompositeType(tag: DW_TAG_array_type, baseType: !28, size: 48, elements: !1101)
!1101 = !{!1102}
!1102 = !DISubrange(count: 6)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !1084, file: !216, line: 290, baseType: !1104, size: 1280, offset: 192)
!1104 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedViewSettings", file: !935, line: 174, baseType: !1105)
!1105 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedViewSettings", file: !935, line: 166, size: 1280, elements: !1106)
!1106 = !{!1107, !1108, !1109, !1110, !1111, !1112, !1113, !1159}
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1105, file: !935, line: 167, baseType: !25, size: 32)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1105, file: !935, line: 167, baseType: !25, size: 32, offset: 32)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "look", scope: !1105, file: !935, line: 168, baseType: !193, size: 512, offset: 64)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "view_transform", scope: !1105, file: !935, line: 169, baseType: !193, size: 512, offset: 576)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "exposure", scope: !1105, file: !935, line: 170, baseType: !26, size: 32, offset: 1088)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !1105, file: !935, line: 171, baseType: !26, size: 32, offset: 1120)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "curve_mapping", scope: !1105, file: !935, line: 172, baseType: !1114, size: 64, offset: 1152)
!1114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1115, size: 64)
!1115 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapping", file: !935, line: 72, size: 3072, elements: !1116)
!1116 = !{!1117, !1118, !1119, !1120, !1121, !1129, !1130, !1155, !1156, !1157, !1158}
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1115, file: !935, line: 73, baseType: !25, size: 32)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !1115, file: !935, line: 73, baseType: !25, size: 32, offset: 32)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "preset", scope: !1115, file: !935, line: 74, baseType: !25, size: 32, offset: 64)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !1115, file: !935, line: 75, baseType: !25, size: 32, offset: 96)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "curr", scope: !1115, file: !935, line: 77, baseType: !1122, size: 128, offset: 128)
!1122 = !DIDerivedType(tag: DW_TAG_typedef, name: "rctf", file: !105, line: 95, baseType: !1123)
!1123 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rctf", file: !105, line: 92, size: 128, elements: !1124)
!1124 = !{!1125, !1126, !1127, !1128}
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !1123, file: !105, line: 93, baseType: !26, size: 32)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !1123, file: !105, line: 93, baseType: !26, size: 32, offset: 32)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !1123, file: !105, line: 94, baseType: !26, size: 32, offset: 64)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !1123, file: !105, line: 94, baseType: !26, size: 32, offset: 96)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "clipr", scope: !1115, file: !935, line: 77, baseType: !1122, size: 128, offset: 256)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "cm", scope: !1115, file: !935, line: 79, baseType: !1131, size: 2304, offset: 384)
!1131 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1132, size: 2304, elements: !412)
!1132 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMap", file: !935, line: 67, baseType: !1133)
!1133 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMap", file: !935, line: 55, size: 576, elements: !1134)
!1134 = !{!1135, !1136, !1137, !1138, !1139, !1140, !1141, !1142, !1151, !1152, !1153, !1154}
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !1133, file: !935, line: 56, baseType: !177, size: 16)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1133, file: !935, line: 56, baseType: !177, size: 16, offset: 16)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !1133, file: !935, line: 58, baseType: !26, size: 32, offset: 32)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "mintable", scope: !1133, file: !935, line: 59, baseType: !26, size: 32, offset: 64)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "maxtable", scope: !1133, file: !935, line: 59, baseType: !26, size: 32, offset: 96)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "ext_in", scope: !1133, file: !935, line: 60, baseType: !125, size: 64, offset: 128)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "ext_out", scope: !1133, file: !935, line: 60, baseType: !125, size: 64, offset: 192)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "curve", scope: !1133, file: !935, line: 61, baseType: !1143, size: 64, offset: 256)
!1143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1144, size: 64)
!1144 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMapPoint", file: !935, line: 47, baseType: !1145)
!1145 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapPoint", file: !935, line: 44, size: 96, elements: !1146)
!1146 = !{!1147, !1148, !1149, !1150}
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1145, file: !935, line: 45, baseType: !26, size: 32)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1145, file: !935, line: 45, baseType: !26, size: 32, offset: 32)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1145, file: !935, line: 46, baseType: !177, size: 16, offset: 64)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "shorty", scope: !1145, file: !935, line: 46, baseType: !177, size: 16, offset: 80)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !1133, file: !935, line: 62, baseType: !1143, size: 64, offset: 320)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "premultable", scope: !1133, file: !935, line: 64, baseType: !1143, size: 64, offset: 384)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_in", scope: !1133, file: !935, line: 65, baseType: !125, size: 64, offset: 448)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_out", scope: !1133, file: !935, line: 66, baseType: !125, size: 64, offset: 512)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "black", scope: !1115, file: !935, line: 80, baseType: !339, size: 96, offset: 2688)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "white", scope: !1115, file: !935, line: 80, baseType: !339, size: 96, offset: 2784)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "bwmul", scope: !1115, file: !935, line: 81, baseType: !339, size: 96, offset: 2880)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "sample", scope: !1115, file: !935, line: 83, baseType: !339, size: 96, offset: 2976)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1105, file: !935, line: 173, baseType: !24, size: 64, offset: 1216)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !1084, file: !216, line: 291, baseType: !1161, size: 512, offset: 1472)
!1161 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedDisplaySettings", file: !935, line: 178, baseType: !1162)
!1162 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedDisplaySettings", file: !935, line: 176, size: 512, elements: !1163)
!1163 = !{!1164}
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "display_device", scope: !1162, file: !935, line: 177, baseType: !193, size: 512)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecdata", scope: !1081, file: !216, line: 406, baseType: !1166, size: 64, offset: 1984)
!1166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1167, size: 64)
!1167 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AviCodecData", file: !216, line: 80, size: 1472, elements: !1168)
!1168 = !{!1169, !1170, !1171, !1172, !1173, !1174, !1175, !1176, !1177, !1178, !1179, !1180, !1181}
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "lpFormat", scope: !1167, file: !216, line: 81, baseType: !24, size: 64)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "lpParms", scope: !1167, file: !216, line: 82, baseType: !24, size: 64, offset: 64)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "cbFormat", scope: !1167, file: !216, line: 83, baseType: !5, size: 32, offset: 128)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "cbParms", scope: !1167, file: !216, line: 84, baseType: !5, size: 32, offset: 160)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "fccType", scope: !1167, file: !216, line: 86, baseType: !5, size: 32, offset: 192)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "fccHandler", scope: !1167, file: !216, line: 87, baseType: !5, size: 32, offset: 224)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "dwKeyFrameEvery", scope: !1167, file: !216, line: 88, baseType: !5, size: 32, offset: 256)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "dwQuality", scope: !1167, file: !216, line: 89, baseType: !5, size: 32, offset: 288)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "dwBytesPerSecond", scope: !1167, file: !216, line: 90, baseType: !5, size: 32, offset: 320)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "dwFlags", scope: !1167, file: !216, line: 91, baseType: !5, size: 32, offset: 352)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "dwInterleaveEvery", scope: !1167, file: !216, line: 92, baseType: !5, size: 32, offset: 384)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1167, file: !216, line: 93, baseType: !5, size: 32, offset: 416)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecname", scope: !1167, file: !216, line: 95, baseType: !1182, size: 1024, offset: 448)
!1182 = !DICompositeType(tag: DW_TAG_array_type, baseType: !28, size: 1024, elements: !1183)
!1183 = !{!1184}
!1184 = !DISubrange(count: 128)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecdata", scope: !1081, file: !216, line: 407, baseType: !1186, size: 64, offset: 2048)
!1186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1187, size: 64)
!1187 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecData", file: !216, line: 98, size: 1216, elements: !1188)
!1188 = !{!1189, !1190, !1191, !1192, !1193}
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "cdParms", scope: !1187, file: !216, line: 100, baseType: !24, size: 64)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1187, file: !216, line: 101, baseType: !24, size: 64, offset: 64)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "cdSize", scope: !1187, file: !216, line: 103, baseType: !5, size: 32, offset: 128)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1187, file: !216, line: 104, baseType: !5, size: 32, offset: 160)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecname", scope: !1187, file: !216, line: 106, baseType: !1182, size: 1024, offset: 192)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecsettings", scope: !1081, file: !216, line: 408, baseType: !1195, size: 512, offset: 2112)
!1195 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecSettings", file: !216, line: 109, size: 512, elements: !1196)
!1196 = !{!1197, !1198, !1199, !1200, !1201, !1202, !1203, !1204, !1205, !1206, !1207, !1208, !1209, !1210, !1211, !1212, !1213}
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "codecType", scope: !1195, file: !216, line: 111, baseType: !25, size: 32)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "codecSpatialQuality", scope: !1195, file: !216, line: 112, baseType: !25, size: 32, offset: 32)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !1195, file: !216, line: 115, baseType: !25, size: 32, offset: 64)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "codecFlags", scope: !1195, file: !216, line: 116, baseType: !25, size: 32, offset: 96)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "colorDepth", scope: !1195, file: !216, line: 117, baseType: !25, size: 32, offset: 128)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "codecTemporalQuality", scope: !1195, file: !216, line: 118, baseType: !25, size: 32, offset: 160)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "minSpatialQuality", scope: !1195, file: !216, line: 119, baseType: !25, size: 32, offset: 192)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "minTemporalQuality", scope: !1195, file: !216, line: 120, baseType: !25, size: 32, offset: 224)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "keyFrameRate", scope: !1195, file: !216, line: 121, baseType: !25, size: 32, offset: 256)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "bitRate", scope: !1195, file: !216, line: 122, baseType: !25, size: 32, offset: 288)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "audiocodecType", scope: !1195, file: !216, line: 125, baseType: !25, size: 32, offset: 320)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "audioSampleRate", scope: !1195, file: !216, line: 126, baseType: !25, size: 32, offset: 352)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitDepth", scope: !1195, file: !216, line: 127, baseType: !177, size: 16, offset: 384)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "audioChannels", scope: !1195, file: !216, line: 128, baseType: !177, size: 16, offset: 400)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "audioCodecFlags", scope: !1195, file: !216, line: 129, baseType: !25, size: 32, offset: 416)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitRate", scope: !1195, file: !216, line: 130, baseType: !25, size: 32, offset: 448)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1195, file: !216, line: 131, baseType: !25, size: 32, offset: 480)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "ffcodecdata", scope: !1081, file: !216, line: 409, baseType: !1215, size: 576, offset: 2624)
!1215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFMpegCodecData", file: !216, line: 134, size: 576, elements: !1216)
!1216 = !{!1217, !1218, !1219, !1220, !1221, !1222, !1223, !1224, !1225, !1226, !1227, !1228, !1229, !1230, !1231, !1232, !1233}
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1215, file: !216, line: 135, baseType: !25, size: 32)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !1215, file: !216, line: 136, baseType: !25, size: 32, offset: 32)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "audio_codec", scope: !1215, file: !216, line: 137, baseType: !25, size: 32, offset: 64)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "video_bitrate", scope: !1215, file: !216, line: 138, baseType: !25, size: 32, offset: 96)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "audio_bitrate", scope: !1215, file: !216, line: 139, baseType: !25, size: 32, offset: 128)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "audio_mixrate", scope: !1215, file: !216, line: 140, baseType: !25, size: 32, offset: 160)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "audio_channels", scope: !1215, file: !216, line: 141, baseType: !25, size: 32, offset: 192)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "audio_pad", scope: !1215, file: !216, line: 142, baseType: !25, size: 32, offset: 224)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "audio_volume", scope: !1215, file: !216, line: 143, baseType: !26, size: 32, offset: 256)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "gop_size", scope: !1215, file: !216, line: 144, baseType: !25, size: 32, offset: 288)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1215, file: !216, line: 145, baseType: !25, size: 32, offset: 320)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_rate", scope: !1215, file: !216, line: 147, baseType: !25, size: 32, offset: 352)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_rate", scope: !1215, file: !216, line: 148, baseType: !25, size: 32, offset: 384)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "rc_buffer_size", scope: !1215, file: !216, line: 149, baseType: !25, size: 32, offset: 416)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "mux_packet_size", scope: !1215, file: !216, line: 150, baseType: !25, size: 32, offset: 448)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "mux_rate", scope: !1215, file: !216, line: 151, baseType: !25, size: 32, offset: 480)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !1215, file: !216, line: 152, baseType: !182, size: 64, offset: 512)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "cfra", scope: !1081, file: !216, line: 411, baseType: !25, size: 32, offset: 3200)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !1081, file: !216, line: 411, baseType: !25, size: 32, offset: 3232)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "efra", scope: !1081, file: !216, line: 411, baseType: !25, size: 32, offset: 3264)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "subframe", scope: !1081, file: !216, line: 412, baseType: !26, size: 32, offset: 3296)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "psfra", scope: !1081, file: !216, line: 413, baseType: !25, size: 32, offset: 3328)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "pefra", scope: !1081, file: !216, line: 413, baseType: !25, size: 32, offset: 3360)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "images", scope: !1081, file: !216, line: 415, baseType: !25, size: 32, offset: 3392)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "framapto", scope: !1081, file: !216, line: 415, baseType: !25, size: 32, offset: 3424)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1081, file: !216, line: 416, baseType: !177, size: 16, offset: 3456)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "threads", scope: !1081, file: !216, line: 416, baseType: !177, size: 16, offset: 3472)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "framelen", scope: !1081, file: !216, line: 418, baseType: !26, size: 32, offset: 3488)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "blurfac", scope: !1081, file: !216, line: 418, baseType: !26, size: 32, offset: 3520)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "edgeR", scope: !1081, file: !216, line: 421, baseType: !26, size: 32, offset: 3552)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "edgeG", scope: !1081, file: !216, line: 421, baseType: !26, size: 32, offset: 3584)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "edgeB", scope: !1081, file: !216, line: 421, baseType: !26, size: 32, offset: 3616)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "fullscreen", scope: !1081, file: !216, line: 425, baseType: !177, size: 16, offset: 3648)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !1081, file: !216, line: 425, baseType: !177, size: 16, offset: 3664)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !1081, file: !216, line: 425, baseType: !177, size: 16, offset: 3680)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !1081, file: !216, line: 426, baseType: !177, size: 16, offset: 3696)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1081, file: !216, line: 428, baseType: !177, size: 16, offset: 3712)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !1081, file: !216, line: 428, baseType: !177, size: 16, offset: 3728)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "frame_step", scope: !1081, file: !216, line: 431, baseType: !25, size: 32, offset: 3744)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !1081, file: !216, line: 433, baseType: !177, size: 16, offset: 3776)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "dimensionspreset", scope: !1081, file: !216, line: 435, baseType: !177, size: 16, offset: 3792)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "filtertype", scope: !1081, file: !216, line: 437, baseType: !177, size: 16, offset: 3808)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1081, file: !216, line: 439, baseType: !177, size: 16, offset: 3824)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "maximsize", scope: !1081, file: !216, line: 441, baseType: !177, size: 16, offset: 3840)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "pad6", scope: !1081, file: !216, line: 443, baseType: !177, size: 16, offset: 3856)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "xsch", scope: !1081, file: !216, line: 449, baseType: !25, size: 32, offset: 3872)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "ysch", scope: !1081, file: !216, line: 453, baseType: !25, size: 32, offset: 3904)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "xparts", scope: !1081, file: !216, line: 458, baseType: !177, size: 16, offset: 3936)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "yparts", scope: !1081, file: !216, line: 462, baseType: !177, size: 16, offset: 3952)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "tilex", scope: !1081, file: !216, line: 467, baseType: !25, size: 32, offset: 3968)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "tiley", scope: !1081, file: !216, line: 467, baseType: !25, size: 32, offset: 4000)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !1081, file: !216, line: 469, baseType: !177, size: 16, offset: 4032)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !1081, file: !216, line: 469, baseType: !177, size: 16, offset: 4048)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "subimtype", scope: !1081, file: !216, line: 469, baseType: !177, size: 16, offset: 4064)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1081, file: !216, line: 469, baseType: !177, size: 16, offset: 4080)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "displaymode", scope: !1081, file: !216, line: 474, baseType: !177, size: 16, offset: 4096)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "use_lock_interface", scope: !1081, file: !216, line: 475, baseType: !28, size: 8, offset: 4112)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "pad7", scope: !1081, file: !216, line: 476, baseType: !28, size: 8, offset: 4120)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "scemode", scope: !1081, file: !216, line: 481, baseType: !25, size: 32, offset: 4128)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1081, file: !216, line: 486, baseType: !25, size: 32, offset: 4160)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_options", scope: !1081, file: !216, line: 491, baseType: !25, size: 32, offset: 4192)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_structure", scope: !1081, file: !216, line: 496, baseType: !177, size: 16, offset: 4224)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1081, file: !216, line: 498, baseType: !177, size: 16, offset: 4240)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "ocres", scope: !1081, file: !216, line: 501, baseType: !177, size: 16, offset: 4256)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !1081, file: !216, line: 502, baseType: !177, size: 16, offset: 4272)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "alphamode", scope: !1081, file: !216, line: 508, baseType: !177, size: 16, offset: 4288)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "osa", scope: !1081, file: !216, line: 513, baseType: !177, size: 16, offset: 4304)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec", scope: !1081, file: !216, line: 515, baseType: !177, size: 16, offset: 4320)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "edgeint", scope: !1081, file: !216, line: 515, baseType: !177, size: 16, offset: 4336)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "safety", scope: !1081, file: !216, line: 519, baseType: !1122, size: 128, offset: 4352)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "border", scope: !1081, file: !216, line: 519, baseType: !1122, size: 128, offset: 4480)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "disprect", scope: !1081, file: !216, line: 520, baseType: !104, size: 128, offset: 4608)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "layers", scope: !1081, file: !216, line: 523, baseType: !203, size: 128, offset: 4736)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "actlay", scope: !1081, file: !216, line: 524, baseType: !177, size: 16, offset: 4864)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "mblur_samples", scope: !1081, file: !216, line: 527, baseType: !177, size: 16, offset: 4880)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "xasp", scope: !1081, file: !216, line: 532, baseType: !26, size: 32, offset: 4896)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "yasp", scope: !1081, file: !216, line: 532, baseType: !26, size: 32, offset: 4928)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec_base", scope: !1081, file: !216, line: 534, baseType: !26, size: 32, offset: 4960)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "gauss", scope: !1081, file: !216, line: 538, baseType: !26, size: 32, offset: 4992)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "color_mgt_flag", scope: !1081, file: !216, line: 542, baseType: !25, size: 32, offset: 5024)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "postgamma", scope: !1081, file: !216, line: 545, baseType: !26, size: 32, offset: 5056)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "posthue", scope: !1081, file: !216, line: 545, baseType: !26, size: 32, offset: 5088)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "postsat", scope: !1081, file: !216, line: 545, baseType: !26, size: 32, offset: 5120)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "dither_intensity", scope: !1081, file: !216, line: 548, baseType: !26, size: 32, offset: 5152)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "bake_osa", scope: !1081, file: !216, line: 551, baseType: !177, size: 16, offset: 5184)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "bake_filter", scope: !1081, file: !216, line: 551, baseType: !177, size: 16, offset: 5200)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "bake_mode", scope: !1081, file: !216, line: 551, baseType: !177, size: 16, offset: 5216)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "bake_flag", scope: !1081, file: !216, line: 551, baseType: !177, size: 16, offset: 5232)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "bake_normal_space", scope: !1081, file: !216, line: 552, baseType: !177, size: 16, offset: 5248)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "bake_quad_split", scope: !1081, file: !216, line: 552, baseType: !177, size: 16, offset: 5264)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "bake_maxdist", scope: !1081, file: !216, line: 553, baseType: !26, size: 32, offset: 5280)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "bake_biasdist", scope: !1081, file: !216, line: 553, baseType: !26, size: 32, offset: 5312)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "bake_samples", scope: !1081, file: !216, line: 554, baseType: !177, size: 16, offset: 5344)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad", scope: !1081, file: !216, line: 554, baseType: !177, size: 16, offset: 5360)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "bake_user_scale", scope: !1081, file: !216, line: 555, baseType: !26, size: 32, offset: 5376)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad1", scope: !1081, file: !216, line: 555, baseType: !26, size: 32, offset: 5408)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "pic", scope: !1081, file: !216, line: 558, baseType: !82, size: 8192, offset: 5440)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !1081, file: !216, line: 561, baseType: !25, size: 32, offset: 13632)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_font_id", scope: !1081, file: !216, line: 562, baseType: !177, size: 16, offset: 13664)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1081, file: !216, line: 562, baseType: !177, size: 16, offset: 13680)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_udata", scope: !1081, file: !216, line: 565, baseType: !1318, size: 6144, offset: 13696)
!1318 = !DICompositeType(tag: DW_TAG_array_type, baseType: !28, size: 6144, elements: !1319)
!1319 = !{!1320}
!1320 = !DISubrange(count: 768)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "fg_stamp", scope: !1081, file: !216, line: 568, baseType: !411, size: 128, offset: 19840)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "bg_stamp", scope: !1081, file: !216, line: 569, baseType: !411, size: 128, offset: 19968)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "seq_prev_type", scope: !1081, file: !216, line: 572, baseType: !28, size: 8, offset: 20096)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "seq_rend_type", scope: !1081, file: !216, line: 573, baseType: !28, size: 8, offset: 20104)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "seq_flag", scope: !1081, file: !216, line: 574, baseType: !28, size: 8, offset: 20112)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !1081, file: !216, line: 575, baseType: !820, size: 40, offset: 20120)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_flag", scope: !1081, file: !216, line: 578, baseType: !25, size: 32, offset: 20160)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_subsurf", scope: !1081, file: !216, line: 579, baseType: !177, size: 16, offset: 20192)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_shadowsamples", scope: !1081, file: !216, line: 580, baseType: !177, size: 16, offset: 20208)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_particles", scope: !1081, file: !216, line: 581, baseType: !26, size: 32, offset: 20224)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_aosss", scope: !1081, file: !216, line: 582, baseType: !26, size: 32, offset: 20256)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "cineonwhite", scope: !1081, file: !216, line: 585, baseType: !177, size: 16, offset: 20288)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "cineonblack", scope: !1081, file: !216, line: 585, baseType: !177, size: 16, offset: 20304)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "cineongamma", scope: !1081, file: !216, line: 586, baseType: !26, size: 32, offset: 20320)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_preset", scope: !1081, file: !216, line: 589, baseType: !177, size: 16, offset: 20352)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_depth", scope: !1081, file: !216, line: 589, baseType: !177, size: 16, offset: 20368)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "rpad3", scope: !1081, file: !216, line: 590, baseType: !25, size: 32, offset: 20384)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "domeres", scope: !1081, file: !216, line: 593, baseType: !177, size: 16, offset: 20416)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "domemode", scope: !1081, file: !216, line: 593, baseType: !177, size: 16, offset: 20432)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "domeangle", scope: !1081, file: !216, line: 594, baseType: !177, size: 16, offset: 20448)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "dometilt", scope: !1081, file: !216, line: 594, baseType: !177, size: 16, offset: 20464)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "domeresbuf", scope: !1081, file: !216, line: 595, baseType: !26, size: 32, offset: 20480)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1081, file: !216, line: 596, baseType: !26, size: 32, offset: 20512)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "dometext", scope: !1081, file: !216, line: 597, baseType: !1345, size: 64, offset: 20544)
!1345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1346, size: 64)
!1346 = !DICompositeType(tag: DW_TAG_structure_type, name: "Text", file: !496, line: 44, flags: DIFlagFwdDecl)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "line_thickness_mode", scope: !1081, file: !216, line: 600, baseType: !25, size: 32, offset: 20608)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "unit_line_thickness", scope: !1081, file: !216, line: 601, baseType: !26, size: 32, offset: 20640)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "engine", scope: !1081, file: !216, line: 604, baseType: !1350, size: 256, offset: 20672)
!1350 = !DICompositeType(tag: DW_TAG_array_type, baseType: !28, size: 256, elements: !1351)
!1351 = !{!1352}
!1352 = !DISubrange(count: 32)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "bake", scope: !1081, file: !216, line: 607, baseType: !1354, size: 10880, offset: 20928)
!1354 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BakeData", file: !216, line: 364, size: 10880, elements: !1355)
!1355 = !{!1356, !1357, !1358, !1359, !1360, !1361, !1362, !1363, !1364, !1365, !1366, !1367, !1368}
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !1354, file: !216, line: 365, baseType: !1084, size: 1984)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !1354, file: !216, line: 367, baseType: !82, size: 8192, offset: 1984)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1354, file: !216, line: 369, baseType: !177, size: 16, offset: 10176)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1354, file: !216, line: 369, baseType: !177, size: 16, offset: 10192)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !1354, file: !216, line: 370, baseType: !177, size: 16, offset: 10208)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1354, file: !216, line: 370, baseType: !177, size: 16, offset: 10224)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "cage_extrusion", scope: !1354, file: !216, line: 372, baseType: !26, size: 32, offset: 10240)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1354, file: !216, line: 373, baseType: !26, size: 32, offset: 10272)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "normal_swizzle", scope: !1354, file: !216, line: 375, baseType: !999, size: 24, offset: 10304)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "normal_space", scope: !1354, file: !216, line: 376, baseType: !28, size: 8, offset: 10328)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "save_mode", scope: !1354, file: !216, line: 378, baseType: !28, size: 8, offset: 10336)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1354, file: !216, line: 379, baseType: !999, size: 24, offset: 10344)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "cage", scope: !1354, file: !216, line: 381, baseType: !193, size: 512, offset: 10368)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "preview_start_resolution", scope: !1081, file: !216, line: 609, baseType: !25, size: 32, offset: 31808)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1081, file: !216, line: 610, baseType: !25, size: 32, offset: 31840)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "audio", scope: !271, file: !216, line: 1252, baseType: !1372, size: 256, offset: 34112)
!1372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AudioData", file: !216, line: 158, size: 256, elements: !1373)
!1373 = !{!1374, !1375, !1376, !1377, !1378, !1379, !1380, !1381, !1382}
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "mixrate", scope: !1372, file: !216, line: 159, baseType: !25, size: 32)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "main", scope: !1372, file: !216, line: 160, baseType: !26, size: 32, offset: 32)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "speed_of_sound", scope: !1372, file: !216, line: 161, baseType: !26, size: 32, offset: 64)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "doppler_factor", scope: !1372, file: !216, line: 162, baseType: !26, size: 32, offset: 96)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "distance_model", scope: !1372, file: !216, line: 163, baseType: !25, size: 32, offset: 128)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1372, file: !216, line: 164, baseType: !177, size: 16, offset: 160)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1372, file: !216, line: 165, baseType: !177, size: 16, offset: 176)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "volume", scope: !1372, file: !216, line: 166, baseType: !26, size: 32, offset: 192)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1372, file: !216, line: 167, baseType: !26, size: 32, offset: 224)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !271, file: !216, line: 1254, baseType: !203, size: 128, offset: 34368)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "transform_spaces", scope: !271, file: !216, line: 1255, baseType: !203, size: 128, offset: 34496)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene", scope: !271, file: !216, line: 1257, baseType: !24, size: 64, offset: 34624)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene_handle", scope: !271, file: !216, line: 1258, baseType: !24, size: 64, offset: 34688)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scrub_handle", scope: !271, file: !216, line: 1259, baseType: !24, size: 64, offset: 34752)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "speaker_handles", scope: !271, file: !216, line: 1260, baseType: !24, size: 64, offset: 34816)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "fps_info", scope: !271, file: !216, line: 1262, baseType: !24, size: 64, offset: 34880)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "theDag", scope: !271, file: !216, line: 1265, baseType: !1391, size: 64, offset: 34944)
!1391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1392, size: 64)
!1392 = !DICompositeType(tag: DW_TAG_structure_type, name: "DagForest", file: !216, line: 1265, flags: DIFlagFwdDecl)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "dagflags", scope: !271, file: !216, line: 1266, baseType: !177, size: 16, offset: 35008)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !271, file: !216, line: 1267, baseType: !177, size: 16, offset: 35024)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "active_keyingset", scope: !271, file: !216, line: 1270, baseType: !25, size: 32, offset: 35040)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "keyingsets", scope: !271, file: !216, line: 1271, baseType: !203, size: 128, offset: 35072)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !271, file: !216, line: 1274, baseType: !1398, size: 128, offset: 35200)
!1398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameFraming", file: !216, line: 650, size: 128, elements: !1399)
!1399 = !{!1400, !1401, !1402, !1403, !1404}
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !1398, file: !216, line: 651, baseType: !339, size: 96)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1398, file: !216, line: 652, baseType: !28, size: 8, offset: 96)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1398, file: !216, line: 652, baseType: !28, size: 8, offset: 104)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1398, file: !216, line: 652, baseType: !28, size: 8, offset: 112)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1398, file: !216, line: 652, baseType: !28, size: 8, offset: 120)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "gm", scope: !271, file: !216, line: 1275, baseType: !1406, size: 1472, offset: 35328)
!1406 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameData", file: !216, line: 676, size: 1472, elements: !1407)
!1407 = !{!1408, !1409, !1410, !1411, !1412, !1413, !1414, !1415, !1416, !1417, !1418, !1420, !1430, !1431, !1432, !1433, !1452, !1453, !1454, !1455, !1456, !1457, !1458, !1459, !1460, !1461, !1462, !1463, !1464, !1465, !1466, !1467, !1468, !1469, !1470, !1471}
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !1406, file: !216, line: 679, baseType: !1398, size: 128)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "playerflag", scope: !1406, file: !216, line: 680, baseType: !177, size: 16, offset: 128)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !1406, file: !216, line: 680, baseType: !177, size: 16, offset: 144)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !1406, file: !216, line: 680, baseType: !177, size: 16, offset: 160)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !1406, file: !216, line: 680, baseType: !177, size: 16, offset: 176)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1406, file: !216, line: 681, baseType: !177, size: 16, offset: 192)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !1406, file: !216, line: 681, baseType: !177, size: 16, offset: 208)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "rt1", scope: !1406, file: !216, line: 681, baseType: !177, size: 16, offset: 224)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "rt2", scope: !1406, file: !216, line: 681, baseType: !177, size: 16, offset: 240)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "aasamples", scope: !1406, file: !216, line: 682, baseType: !177, size: 16, offset: 256)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !1406, file: !216, line: 682, baseType: !1419, size: 48, offset: 272)
!1419 = !DICompositeType(tag: DW_TAG_array_type, baseType: !177, size: 48, elements: !340)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "dome", scope: !1406, file: !216, line: 685, baseType: !1421, size: 192, offset: 320)
!1421 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameDome", file: !216, line: 633, size: 192, elements: !1422)
!1422 = !{!1423, !1424, !1425, !1426, !1427, !1428, !1429}
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "res", scope: !1421, file: !216, line: 634, baseType: !177, size: 16)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1421, file: !216, line: 634, baseType: !177, size: 16, offset: 16)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "angle", scope: !1421, file: !216, line: 635, baseType: !177, size: 16, offset: 32)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "tilt", scope: !1421, file: !216, line: 635, baseType: !177, size: 16, offset: 48)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "resbuf", scope: !1421, file: !216, line: 636, baseType: !26, size: 32, offset: 64)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1421, file: !216, line: 636, baseType: !26, size: 32, offset: 96)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "warptext", scope: !1421, file: !216, line: 637, baseType: !1345, size: 64, offset: 128)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "stereoflag", scope: !1406, file: !216, line: 686, baseType: !177, size: 16, offset: 512)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !1406, file: !216, line: 686, baseType: !177, size: 16, offset: 528)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "eyeseparation", scope: !1406, file: !216, line: 687, baseType: !26, size: 32, offset: 544)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "recastData", scope: !1406, file: !216, line: 688, baseType: !1434, size: 448, offset: 576)
!1434 = !DIDerivedType(tag: DW_TAG_typedef, name: "RecastData", file: !216, line: 674, baseType: !1435)
!1435 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RecastData", file: !216, line: 659, size: 448, elements: !1436)
!1436 = !{!1437, !1438, !1439, !1440, !1441, !1442, !1443, !1444, !1445, !1446, !1447, !1448, !1449, !1450, !1451}
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "cellsize", scope: !1435, file: !216, line: 660, baseType: !26, size: 32)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "cellheight", scope: !1435, file: !216, line: 661, baseType: !26, size: 32, offset: 32)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxslope", scope: !1435, file: !216, line: 662, baseType: !26, size: 32, offset: 64)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxclimb", scope: !1435, file: !216, line: 663, baseType: !26, size: 32, offset: 96)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "agentheight", scope: !1435, file: !216, line: 664, baseType: !26, size: 32, offset: 128)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "agentradius", scope: !1435, file: !216, line: 665, baseType: !26, size: 32, offset: 160)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxlen", scope: !1435, file: !216, line: 666, baseType: !26, size: 32, offset: 192)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxerror", scope: !1435, file: !216, line: 667, baseType: !26, size: 32, offset: 224)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "regionminsize", scope: !1435, file: !216, line: 668, baseType: !26, size: 32, offset: 256)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "regionmergesize", scope: !1435, file: !216, line: 669, baseType: !26, size: 32, offset: 288)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "vertsperpoly", scope: !1435, file: !216, line: 670, baseType: !25, size: 32, offset: 320)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "detailsampledist", scope: !1435, file: !216, line: 671, baseType: !26, size: 32, offset: 352)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "detailsamplemaxerror", scope: !1435, file: !216, line: 672, baseType: !26, size: 32, offset: 384)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1435, file: !216, line: 673, baseType: !177, size: 16, offset: 416)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1435, file: !216, line: 673, baseType: !177, size: 16, offset: 432)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !1406, file: !216, line: 692, baseType: !26, size: 32, offset: 1024)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "activityBoxRadius", scope: !1406, file: !216, line: 697, baseType: !26, size: 32, offset: 1056)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1406, file: !216, line: 703, baseType: !25, size: 32, offset: 1088)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1406, file: !216, line: 704, baseType: !177, size: 16, offset: 1120)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "matmode", scope: !1406, file: !216, line: 704, baseType: !177, size: 16, offset: 1136)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "occlusionRes", scope: !1406, file: !216, line: 705, baseType: !177, size: 16, offset: 1152)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "physicsEngine", scope: !1406, file: !216, line: 706, baseType: !177, size: 16, offset: 1168)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "exitkey", scope: !1406, file: !216, line: 707, baseType: !177, size: 16, offset: 1184)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "vsync", scope: !1406, file: !216, line: 708, baseType: !177, size: 16, offset: 1200)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "ticrate", scope: !1406, file: !216, line: 709, baseType: !177, size: 16, offset: 1216)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "maxlogicstep", scope: !1406, file: !216, line: 709, baseType: !177, size: 16, offset: 1232)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "physubstep", scope: !1406, file: !216, line: 709, baseType: !177, size: 16, offset: 1248)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "maxphystep", scope: !1406, file: !216, line: 709, baseType: !177, size: 16, offset: 1264)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "obstacleSimulation", scope: !1406, file: !216, line: 710, baseType: !177, size: 16, offset: 1280)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "raster_storage", scope: !1406, file: !216, line: 711, baseType: !177, size: 16, offset: 1296)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "levelHeight", scope: !1406, file: !216, line: 712, baseType: !26, size: 32, offset: 1312)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "deactivationtime", scope: !1406, file: !216, line: 713, baseType: !26, size: 32, offset: 1344)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "lineardeactthreshold", scope: !1406, file: !216, line: 713, baseType: !26, size: 32, offset: 1376)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "angulardeactthreshold", scope: !1406, file: !216, line: 713, baseType: !26, size: 32, offset: 1408)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1406, file: !216, line: 713, baseType: !26, size: 32, offset: 1440)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "unit", scope: !271, file: !216, line: 1278, baseType: !1473, size: 64, offset: 36800)
!1473 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnitSettings", file: !216, line: 1197, size: 64, elements: !1474)
!1474 = !{!1475, !1476, !1477, !1478}
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "scale_length", scope: !1473, file: !216, line: 1199, baseType: !26, size: 32)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "system", scope: !1473, file: !216, line: 1200, baseType: !28, size: 8, offset: 32)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "system_rotation", scope: !1473, file: !216, line: 1201, baseType: !28, size: 8, offset: 40)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1473, file: !216, line: 1202, baseType: !177, size: 16, offset: 48)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !271, file: !216, line: 1281, baseType: !370, size: 64, offset: 36864)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "physics_settings", scope: !271, file: !216, line: 1284, baseType: !1481, size: 192, offset: 36928)
!1481 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PhysicsSettings", file: !216, line: 1208, size: 192, elements: !1482)
!1482 = !{!1483, !1484, !1485, !1486}
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !1481, file: !216, line: 1209, baseType: !339, size: 96)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1481, file: !216, line: 1210, baseType: !25, size: 32, offset: 96)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "quick_cache_step", scope: !1481, file: !216, line: 1210, baseType: !25, size: 32, offset: 128)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1481, file: !216, line: 1210, baseType: !25, size: 32, offset: 160)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !271, file: !216, line: 1287, baseType: !1488, size: 64, offset: 37120)
!1488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1489, size: 64)
!1489 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClip", file: !216, line: 62, flags: DIFlagFwdDecl)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask", scope: !271, file: !216, line: 1289, baseType: !513, size: 64, offset: 37184)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask_modal", scope: !271, file: !216, line: 1290, baseType: !513, size: 64, offset: 37248)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !271, file: !216, line: 1293, baseType: !1104, size: 1280, offset: 37312)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !271, file: !216, line: 1294, baseType: !1161, size: 512, offset: 38592)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "sequencer_colorspace_settings", scope: !271, file: !216, line: 1295, baseType: !934, size: 512, offset: 39104)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_world", scope: !271, file: !216, line: 1298, baseType: !1496, size: 64, offset: 39616)
!1496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1497, size: 64)
!1497 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyWorld", file: !216, line: 1298, flags: DIFlagFwdDecl)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !267, file: !4, line: 53, baseType: !25, size: 32, offset: 64)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "frames", scope: !267, file: !4, line: 54, baseType: !25, size: 32, offset: 96)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !267, file: !4, line: 55, baseType: !25, size: 32, offset: 128)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !267, file: !4, line: 55, baseType: !25, size: 32, offset: 160)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "fie_ima", scope: !267, file: !4, line: 56, baseType: !28, size: 8, offset: 192)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "cycl", scope: !267, file: !4, line: 56, baseType: !28, size: 8, offset: 200)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !267, file: !4, line: 57, baseType: !28, size: 8, offset: 208)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !267, file: !4, line: 57, baseType: !28, size: 8, offset: 216)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "multi_index", scope: !267, file: !4, line: 59, baseType: !177, size: 16, offset: 224)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "layer", scope: !267, file: !4, line: 59, baseType: !177, size: 16, offset: 240)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "pass", scope: !267, file: !4, line: 59, baseType: !177, size: 16, offset: 256)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !267, file: !4, line: 61, baseType: !177, size: 16, offset: 272)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !267, file: !4, line: 63, baseType: !25, size: 32, offset: 288)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !145, file: !144, line: 248, baseType: !718, size: 64, offset: 2688)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !145, file: !144, line: 249, baseType: !297, size: 64, offset: 2752)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !145, file: !144, line: 250, baseType: !835, size: 64, offset: 2816)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "coba", scope: !145, file: !144, line: 251, baseType: !1515, size: 64, offset: 2880)
!1515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1516, size: 64)
!1516 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorBand", file: !144, line: 113, size: 6208, elements: !1517)
!1517 = !{!1518, !1519, !1520, !1521, !1522, !1523, !1524}
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !1516, file: !144, line: 114, baseType: !177, size: 16)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !1516, file: !144, line: 114, baseType: !177, size: 16, offset: 16)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "ipotype", scope: !1516, file: !144, line: 115, baseType: !28, size: 8, offset: 32)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "ipotype_hue", scope: !1516, file: !144, line: 115, baseType: !28, size: 8, offset: 40)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "color_mode", scope: !1516, file: !144, line: 116, baseType: !28, size: 8, offset: 48)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1516, file: !144, line: 117, baseType: !745, size: 8, offset: 56)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1516, file: !144, line: 119, baseType: !1525, size: 6144, offset: 64)
!1525 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1526, size: 6144, elements: !1351)
!1526 = !DIDerivedType(tag: DW_TAG_typedef, name: "CBData", file: !144, line: 109, baseType: !1527)
!1527 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CBData", file: !144, line: 106, size: 192, elements: !1528)
!1528 = !{!1529, !1530, !1531, !1532, !1533, !1534}
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !1527, file: !144, line: 107, baseType: !26, size: 32)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !1527, file: !144, line: 107, baseType: !26, size: 32, offset: 32)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !1527, file: !144, line: 107, baseType: !26, size: 32, offset: 64)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !1527, file: !144, line: 107, baseType: !26, size: 32, offset: 96)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1527, file: !144, line: 107, baseType: !26, size: 32, offset: 128)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !1527, file: !144, line: 108, baseType: !25, size: 32, offset: 160)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "env", scope: !145, file: !144, line: 252, baseType: !1536, size: 64, offset: 2944)
!1536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1537, size: 64)
!1537 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EnvMap", file: !144, line: 122, size: 1600, elements: !1538)
!1538 = !{!1539, !1540, !1541, !1543, !1544, !1547, !1548, !1549, !1550, !1551, !1552, !1553, !1554, !1555, !1556, !1557, !1558}
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1537, file: !144, line: 123, baseType: !276, size: 64)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !1537, file: !144, line: 124, baseType: !835, size: 64, offset: 64)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "cube", scope: !1537, file: !144, line: 125, baseType: !1542, size: 384, offset: 128)
!1542 = !DICompositeType(tag: DW_TAG_array_type, baseType: !40, size: 384, elements: !1101)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !1537, file: !144, line: 126, baseType: !420, size: 512, offset: 512)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "obimat", scope: !1537, file: !144, line: 127, baseType: !1545, size: 288, offset: 1024)
!1545 = !DICompositeType(tag: DW_TAG_array_type, baseType: !26, size: 288, elements: !1546)
!1546 = !{!307, !307}
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1537, file: !144, line: 128, baseType: !177, size: 16, offset: 1312)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "stype", scope: !1537, file: !144, line: 128, baseType: !177, size: 16, offset: 1328)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "clipsta", scope: !1537, file: !144, line: 129, baseType: !26, size: 32, offset: 1344)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "clipend", scope: !1537, file: !144, line: 129, baseType: !26, size: 32, offset: 1376)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "viewscale", scope: !1537, file: !144, line: 130, baseType: !26, size: 32, offset: 1408)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "notlay", scope: !1537, file: !144, line: 131, baseType: !5, size: 32, offset: 1440)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "cuberes", scope: !1537, file: !144, line: 132, baseType: !177, size: 16, offset: 1472)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1537, file: !144, line: 132, baseType: !177, size: 16, offset: 1488)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1537, file: !144, line: 133, baseType: !25, size: 32, offset: 1504)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !1537, file: !144, line: 133, baseType: !25, size: 32, offset: 1536)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !1537, file: !144, line: 134, baseType: !177, size: 16, offset: 1568)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "lastsize", scope: !1537, file: !144, line: 134, baseType: !177, size: 16, offset: 1584)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !145, file: !144, line: 253, baseType: !703, size: 64, offset: 3008)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "pd", scope: !145, file: !144, line: 254, baseType: !1561, size: 64, offset: 3072)
!1561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1562, size: 64)
!1562 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PointDensity", file: !144, line: 137, size: 832, elements: !1563)
!1563 = !{!1564, !1565, !1566, !1567, !1568, !1569, !1570, !1571, !1572, !1573, !1574, !1575, !1576, !1577, !1578, !1579, !1580, !1581, !1582, !1583, !1584, !1585, !1586, !1587, !1588}
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1562, file: !144, line: 138, baseType: !177, size: 16)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_type", scope: !1562, file: !144, line: 140, baseType: !177, size: 16, offset: 16)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_softness", scope: !1562, file: !144, line: 141, baseType: !26, size: 32, offset: 32)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "radius", scope: !1562, file: !144, line: 142, baseType: !26, size: 32, offset: 64)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !1562, file: !144, line: 143, baseType: !177, size: 16, offset: 96)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "color_source", scope: !1562, file: !144, line: 144, baseType: !177, size: 16, offset: 112)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "totpoints", scope: !1562, file: !144, line: 145, baseType: !25, size: 32, offset: 128)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "pdpad", scope: !1562, file: !144, line: 147, baseType: !25, size: 32, offset: 160)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1562, file: !144, line: 149, baseType: !276, size: 64, offset: 192)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "psys", scope: !1562, file: !144, line: 150, baseType: !25, size: 32, offset: 256)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "psys_cache_space", scope: !1562, file: !144, line: 151, baseType: !177, size: 16, offset: 288)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "ob_cache_space", scope: !1562, file: !144, line: 152, baseType: !177, size: 16, offset: 304)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "point_tree", scope: !1562, file: !144, line: 154, baseType: !24, size: 64, offset: 320)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "point_data", scope: !1562, file: !144, line: 155, baseType: !52, size: 64, offset: 384)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "noise_size", scope: !1562, file: !144, line: 157, baseType: !26, size: 32, offset: 448)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "noise_depth", scope: !1562, file: !144, line: 158, baseType: !177, size: 16, offset: 480)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "noise_influence", scope: !1562, file: !144, line: 159, baseType: !177, size: 16, offset: 496)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "noise_basis", scope: !1562, file: !144, line: 160, baseType: !177, size: 16, offset: 512)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "pdpad3", scope: !1562, file: !144, line: 161, baseType: !1419, size: 48, offset: 528)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "noise_fac", scope: !1562, file: !144, line: 162, baseType: !26, size: 32, offset: 576)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "speed_scale", scope: !1562, file: !144, line: 164, baseType: !26, size: 32, offset: 608)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_speed_scale", scope: !1562, file: !144, line: 164, baseType: !26, size: 32, offset: 640)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "pdpad2", scope: !1562, file: !144, line: 164, baseType: !26, size: 32, offset: 672)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "coba", scope: !1562, file: !144, line: 165, baseType: !1515, size: 64, offset: 704)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_curve", scope: !1562, file: !144, line: 167, baseType: !1114, size: 64, offset: 768)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "vd", scope: !145, file: !144, line: 255, baseType: !1590, size: 64, offset: 3136)
!1590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1591, size: 64)
!1591 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VoxelData", file: !144, line: 170, size: 8704, elements: !1592)
!1592 = !{!1593, !1594, !1595, !1596, !1597, !1598, !1599, !1600, !1601, !1602, !1603, !1604, !1605, !1606, !1607, !1608}
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "resol", scope: !1591, file: !144, line: 171, baseType: !794, size: 96)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "interp_type", scope: !1591, file: !144, line: 172, baseType: !25, size: 32, offset: 96)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "file_format", scope: !1591, file: !144, line: 173, baseType: !177, size: 16, offset: 128)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1591, file: !144, line: 174, baseType: !177, size: 16, offset: 144)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "extend", scope: !1591, file: !144, line: 175, baseType: !177, size: 16, offset: 160)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "smoked_type", scope: !1591, file: !144, line: 176, baseType: !177, size: 16, offset: 176)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "data_type", scope: !1591, file: !144, line: 177, baseType: !177, size: 16, offset: 192)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1591, file: !144, line: 178, baseType: !177, size: 16, offset: 208)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "_pad", scope: !1591, file: !144, line: 179, baseType: !25, size: 32, offset: 224)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1591, file: !144, line: 181, baseType: !276, size: 64, offset: 256)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "int_multiplier", scope: !1591, file: !144, line: 182, baseType: !26, size: 32, offset: 320)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "still_frame", scope: !1591, file: !144, line: 183, baseType: !25, size: 32, offset: 352)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "source_path", scope: !1591, file: !144, line: 184, baseType: !82, size: 8192, offset: 384)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "dataset", scope: !1591, file: !144, line: 187, baseType: !52, size: 64, offset: 8576)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "cachedframe", scope: !1591, file: !144, line: 188, baseType: !25, size: 32, offset: 8640)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1591, file: !144, line: 189, baseType: !25, size: 32, offset: 8672)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "ot", scope: !145, file: !144, line: 256, baseType: !1610, size: 64, offset: 3200)
!1610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1611, size: 64)
!1611 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "OceanTex", file: !144, line: 193, size: 640, elements: !1612)
!1612 = !{!1613, !1614, !1615, !1616}
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1611, file: !144, line: 194, baseType: !276, size: 64)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "oceanmod", scope: !1611, file: !144, line: 195, baseType: !193, size: 512, offset: 64)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "output", scope: !1611, file: !144, line: 197, baseType: !25, size: 32, offset: 576)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1611, file: !144, line: 198, baseType: !25, size: 32, offset: 608)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !145, file: !144, line: 258, baseType: !28, size: 8, offset: 3264)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !145, file: !144, line: 259, baseType: !650, size: 56, offset: 3272)
!1619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1620, size: 64)
!1620 = !DIDerivedType(tag: DW_TAG_typedef, name: "Image", file: !4, line: 127, baseType: !836)
!1621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1622, size: 64)
!1622 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !26)
!1623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1624, size: 64)
!1624 = !DIDerivedType(tag: DW_TAG_typedef, name: "TexResult", file: !1625, line: 45, baseType: !1626)
!1625 = !DIFile(filename: "blender/source/blender/render/extern/include/RE_shader_ext.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1626 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "TexResult", file: !1625, line: 41, size: 256, elements: !1627)
!1627 = !{!1628, !1629, !1630, !1631, !1632, !1633, !1634}
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "tin", scope: !1626, file: !1625, line: 42, baseType: !26, size: 32)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "tr", scope: !1626, file: !1625, line: 42, baseType: !26, size: 32, offset: 32)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "tg", scope: !1626, file: !1625, line: 42, baseType: !26, size: 32, offset: 64)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "tb", scope: !1626, file: !1625, line: 42, baseType: !26, size: 32, offset: 96)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "ta", scope: !1626, file: !1625, line: 42, baseType: !26, size: 32, offset: 128)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "talpha", scope: !1626, file: !1625, line: 43, baseType: !25, size: 32, offset: 160)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "nor", scope: !1626, file: !1625, line: 44, baseType: !52, size: 64, offset: 192)
!1635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1636, size: 64)
!1636 = !DICompositeType(tag: DW_TAG_structure_type, name: "ImagePool", file: !1637, line: 47, flags: DIFlagFwdDecl)
!1637 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_image.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1638 = !{}
!1639 = !DILocalVariable(name: "tex", arg: 1, scope: !139, file: !1, line: 108, type: !142)
!1640 = !DILocation(line: 108, column: 20, scope: !139)
!1641 = !DILocalVariable(name: "ima", arg: 2, scope: !139, file: !1, line: 108, type: !1619)
!1642 = !DILocation(line: 108, column: 32, scope: !139)
!1643 = !DILocalVariable(name: "ibuf", arg: 3, scope: !139, file: !1, line: 108, type: !34)
!1644 = !DILocation(line: 108, column: 44, scope: !139)
!1645 = !DILocalVariable(name: "texvec", arg: 4, scope: !139, file: !1, line: 108, type: !1621)
!1646 = !DILocation(line: 108, column: 62, scope: !139)
!1647 = !DILocalVariable(name: "texres", arg: 5, scope: !139, file: !1, line: 108, type: !1623)
!1648 = !DILocation(line: 108, column: 84, scope: !139)
!1649 = !DILocalVariable(name: "pool", arg: 6, scope: !139, file: !1, line: 108, type: !1635)
!1650 = !DILocation(line: 108, column: 110, scope: !139)
!1651 = !DILocalVariable(name: "fx", scope: !139, file: !1, line: 110, type: !26)
!1652 = !DILocation(line: 110, column: 8, scope: !139)
!1653 = !DILocalVariable(name: "fy", scope: !139, file: !1, line: 110, type: !26)
!1654 = !DILocation(line: 110, column: 12, scope: !139)
!1655 = !DILocalVariable(name: "val1", scope: !139, file: !1, line: 110, type: !26)
!1656 = !DILocation(line: 110, column: 16, scope: !139)
!1657 = !DILocalVariable(name: "val2", scope: !139, file: !1, line: 110, type: !26)
!1658 = !DILocation(line: 110, column: 22, scope: !139)
!1659 = !DILocalVariable(name: "val3", scope: !139, file: !1, line: 110, type: !26)
!1660 = !DILocation(line: 110, column: 28, scope: !139)
!1661 = !DILocalVariable(name: "x", scope: !139, file: !1, line: 111, type: !25)
!1662 = !DILocation(line: 111, column: 6, scope: !139)
!1663 = !DILocalVariable(name: "y", scope: !139, file: !1, line: 111, type: !25)
!1664 = !DILocation(line: 111, column: 9, scope: !139)
!1665 = !DILocalVariable(name: "retval", scope: !139, file: !1, line: 111, type: !25)
!1666 = !DILocation(line: 111, column: 12, scope: !139)
!1667 = !DILocalVariable(name: "xi", scope: !139, file: !1, line: 112, type: !25)
!1668 = !DILocation(line: 112, column: 6, scope: !139)
!1669 = !DILocalVariable(name: "yi", scope: !139, file: !1, line: 112, type: !25)
!1670 = !DILocation(line: 112, column: 10, scope: !139)
!1671 = !DILocation(line: 114, column: 51, scope: !139)
!1672 = !DILocation(line: 114, column: 59, scope: !139)
!1673 = !DILocation(line: 114, column: 61, scope: !139)
!1674 = !DILocation(line: 114, column: 39, scope: !139)
!1675 = !DILocation(line: 114, column: 47, scope: !139)
!1676 = !DILocation(line: 114, column: 49, scope: !139)
!1677 = !DILocation(line: 114, column: 27, scope: !139)
!1678 = !DILocation(line: 114, column: 35, scope: !139)
!1679 = !DILocation(line: 114, column: 37, scope: !139)
!1680 = !DILocation(line: 114, column: 15, scope: !139)
!1681 = !DILocation(line: 114, column: 23, scope: !139)
!1682 = !DILocation(line: 114, column: 25, scope: !139)
!1683 = !DILocation(line: 114, column: 2, scope: !139)
!1684 = !DILocation(line: 114, column: 10, scope: !139)
!1685 = !DILocation(line: 114, column: 13, scope: !139)
!1686 = !DILocation(line: 117, column: 10, scope: !139)
!1687 = !DILocation(line: 117, column: 18, scope: !139)
!1688 = !DILocation(line: 117, column: 8, scope: !139)
!1689 = !DILocation(line: 120, column: 6, scope: !1690)
!1690 = distinct !DILexicalBlock(scope: !139, file: !1, line: 120, column: 6)
!1691 = !DILocation(line: 120, column: 10, scope: !1690)
!1692 = !DILocation(line: 120, column: 17, scope: !1690)
!1693 = !DILocation(line: 120, column: 20, scope: !1690)
!1694 = !DILocation(line: 120, column: 23, scope: !1690)
!1695 = !DILocation(line: 120, column: 6, scope: !139)
!1696 = !DILocation(line: 121, column: 10, scope: !1690)
!1697 = !DILocation(line: 121, column: 3, scope: !1690)
!1698 = !DILocation(line: 122, column: 6, scope: !1699)
!1699 = distinct !DILexicalBlock(scope: !139, file: !1, line: 122, column: 6)
!1700 = !DILocation(line: 122, column: 6, scope: !139)
!1701 = !DILocation(line: 125, column: 12, scope: !1702)
!1702 = distinct !DILexicalBlock(scope: !1703, file: !1, line: 125, column: 7)
!1703 = distinct !DILexicalBlock(scope: !1699, file: !1, line: 122, column: 11)
!1704 = !DILocation(line: 125, column: 20, scope: !1702)
!1705 = !DILocation(line: 125, column: 39, scope: !1702)
!1706 = !DILocation(line: 125, column: 69, scope: !1702)
!1707 = !DILocation(line: 125, column: 43, scope: !1702)
!1708 = !DILocation(line: 125, column: 7, scope: !1703)
!1709 = !DILocation(line: 126, column: 11, scope: !1702)
!1710 = !DILocation(line: 126, column: 4, scope: !1702)
!1711 = !DILocation(line: 128, column: 38, scope: !1703)
!1712 = !DILocation(line: 128, column: 44, scope: !1703)
!1713 = !DILocation(line: 128, column: 49, scope: !1703)
!1714 = !DILocation(line: 128, column: 56, scope: !1703)
!1715 = !DILocation(line: 128, column: 10, scope: !1703)
!1716 = !DILocation(line: 128, column: 8, scope: !1703)
!1717 = !DILocation(line: 130, column: 3, scope: !1703)
!1718 = !DILocation(line: 130, column: 8, scope: !1703)
!1719 = !DILocation(line: 130, column: 12, scope: !1703)
!1720 = !DILocation(line: 131, column: 2, scope: !1703)
!1721 = !DILocation(line: 132, column: 6, scope: !1722)
!1722 = distinct !DILexicalBlock(scope: !139, file: !1, line: 132, column: 6)
!1723 = !DILocation(line: 132, column: 10, scope: !1722)
!1724 = !DILocation(line: 132, column: 17, scope: !1722)
!1725 = !DILocation(line: 132, column: 21, scope: !1722)
!1726 = !DILocation(line: 132, column: 27, scope: !1722)
!1727 = !DILocation(line: 132, column: 31, scope: !1722)
!1728 = !DILocation(line: 132, column: 38, scope: !1722)
!1729 = !DILocation(line: 132, column: 41, scope: !1722)
!1730 = !DILocation(line: 132, column: 47, scope: !1722)
!1731 = !DILocation(line: 132, column: 57, scope: !1722)
!1732 = !DILocation(line: 132, column: 6, scope: !139)
!1733 = !DILocation(line: 133, column: 7, scope: !1734)
!1734 = distinct !DILexicalBlock(scope: !1735, file: !1, line: 133, column: 7)
!1735 = distinct !DILexicalBlock(scope: !1722, file: !1, line: 132, column: 66)
!1736 = !DILocation(line: 133, column: 7, scope: !1735)
!1737 = !DILocation(line: 134, column: 32, scope: !1734)
!1738 = !DILocation(line: 134, column: 37, scope: !1734)
!1739 = !DILocation(line: 134, column: 43, scope: !1734)
!1740 = !DILocation(line: 134, column: 4, scope: !1734)
!1741 = !DILocation(line: 135, column: 10, scope: !1735)
!1742 = !DILocation(line: 135, column: 3, scope: !1735)
!1743 = !DILocation(line: 139, column: 6, scope: !1744)
!1744 = distinct !DILexicalBlock(scope: !139, file: !1, line: 139, column: 6)
!1745 = !DILocation(line: 139, column: 11, scope: !1744)
!1746 = !DILocation(line: 139, column: 19, scope: !1744)
!1747 = !DILocation(line: 139, column: 6, scope: !139)
!1748 = !DILocation(line: 140, column: 7, scope: !1749)
!1749 = distinct !DILexicalBlock(scope: !1744, file: !1, line: 139, column: 33)
!1750 = !DILocation(line: 140, column: 5, scope: !1749)
!1751 = !DILocation(line: 141, column: 7, scope: !1749)
!1752 = !DILocation(line: 141, column: 5, scope: !1749)
!1753 = !DILocation(line: 142, column: 2, scope: !1749)
!1754 = !DILocation(line: 144, column: 7, scope: !1755)
!1755 = distinct !DILexicalBlock(scope: !1744, file: !1, line: 143, column: 7)
!1756 = !DILocation(line: 144, column: 5, scope: !1755)
!1757 = !DILocation(line: 145, column: 7, scope: !1755)
!1758 = !DILocation(line: 145, column: 5, scope: !1755)
!1759 = !DILocation(line: 148, column: 6, scope: !1760)
!1760 = distinct !DILexicalBlock(scope: !139, file: !1, line: 148, column: 6)
!1761 = !DILocation(line: 148, column: 11, scope: !1760)
!1762 = !DILocation(line: 148, column: 18, scope: !1760)
!1763 = !DILocation(line: 148, column: 6, scope: !139)
!1764 = !DILocalVariable(name: "xs", scope: !1765, file: !1, line: 149, type: !25)
!1765 = distinct !DILexicalBlock(scope: !1760, file: !1, line: 148, column: 34)
!1766 = !DILocation(line: 149, column: 7, scope: !1765)
!1767 = !DILocalVariable(name: "ys", scope: !1765, file: !1, line: 149, type: !25)
!1768 = !DILocation(line: 149, column: 11, scope: !1765)
!1769 = !DILocation(line: 151, column: 18, scope: !1765)
!1770 = !DILocation(line: 151, column: 12, scope: !1765)
!1771 = !DILocation(line: 151, column: 7, scope: !1765)
!1772 = !DILocation(line: 151, column: 5, scope: !1765)
!1773 = !DILocation(line: 152, column: 18, scope: !1765)
!1774 = !DILocation(line: 152, column: 12, scope: !1765)
!1775 = !DILocation(line: 152, column: 7, scope: !1765)
!1776 = !DILocation(line: 152, column: 5, scope: !1765)
!1777 = !DILocation(line: 153, column: 8, scope: !1765)
!1778 = !DILocation(line: 153, column: 5, scope: !1765)
!1779 = !DILocation(line: 154, column: 8, scope: !1765)
!1780 = !DILocation(line: 154, column: 5, scope: !1765)
!1781 = !DILocation(line: 156, column: 9, scope: !1782)
!1782 = distinct !DILexicalBlock(scope: !1765, file: !1, line: 156, column: 8)
!1783 = !DILocation(line: 156, column: 14, scope: !1782)
!1784 = !DILocation(line: 156, column: 19, scope: !1782)
!1785 = !DILocation(line: 156, column: 38, scope: !1782)
!1786 = !DILocation(line: 156, column: 8, scope: !1765)
!1787 = !DILocation(line: 157, column: 9, scope: !1788)
!1788 = distinct !DILexicalBlock(scope: !1789, file: !1, line: 157, column: 8)
!1789 = distinct !DILexicalBlock(scope: !1782, file: !1, line: 156, column: 44)
!1790 = !DILocation(line: 157, column: 14, scope: !1788)
!1791 = !DILocation(line: 157, column: 12, scope: !1788)
!1792 = !DILocation(line: 157, column: 18, scope: !1788)
!1793 = !DILocation(line: 157, column: 8, scope: !1789)
!1794 = !DILocation(line: 159, column: 4, scope: !1795)
!1795 = distinct !DILexicalBlock(scope: !1788, file: !1, line: 157, column: 23)
!1796 = !DILocation(line: 161, column: 9, scope: !1797)
!1797 = distinct !DILexicalBlock(scope: !1798, file: !1, line: 161, column: 9)
!1798 = distinct !DILexicalBlock(scope: !1788, file: !1, line: 160, column: 9)
!1799 = !DILocation(line: 161, column: 9, scope: !1798)
!1800 = !DILocation(line: 162, column: 34, scope: !1797)
!1801 = !DILocation(line: 162, column: 39, scope: !1797)
!1802 = !DILocation(line: 162, column: 45, scope: !1797)
!1803 = !DILocation(line: 162, column: 6, scope: !1797)
!1804 = !DILocation(line: 163, column: 12, scope: !1798)
!1805 = !DILocation(line: 163, column: 5, scope: !1798)
!1806 = !DILocation(line: 165, column: 3, scope: !1789)
!1807 = !DILocation(line: 166, column: 9, scope: !1808)
!1808 = distinct !DILexicalBlock(scope: !1765, file: !1, line: 166, column: 8)
!1809 = !DILocation(line: 166, column: 14, scope: !1808)
!1810 = !DILocation(line: 166, column: 19, scope: !1808)
!1811 = !DILocation(line: 166, column: 38, scope: !1808)
!1812 = !DILocation(line: 166, column: 8, scope: !1765)
!1813 = !DILocation(line: 167, column: 9, scope: !1814)
!1814 = distinct !DILexicalBlock(scope: !1815, file: !1, line: 167, column: 8)
!1815 = distinct !DILexicalBlock(scope: !1808, file: !1, line: 166, column: 43)
!1816 = !DILocation(line: 167, column: 12, scope: !1814)
!1817 = !DILocation(line: 167, column: 11, scope: !1814)
!1818 = !DILocation(line: 167, column: 16, scope: !1814)
!1819 = !DILocation(line: 167, column: 8, scope: !1815)
!1820 = !DILocation(line: 168, column: 9, scope: !1821)
!1821 = distinct !DILexicalBlock(scope: !1822, file: !1, line: 168, column: 9)
!1822 = distinct !DILexicalBlock(scope: !1814, file: !1, line: 167, column: 21)
!1823 = !DILocation(line: 168, column: 9, scope: !1822)
!1824 = !DILocation(line: 169, column: 34, scope: !1821)
!1825 = !DILocation(line: 169, column: 39, scope: !1821)
!1826 = !DILocation(line: 169, column: 45, scope: !1821)
!1827 = !DILocation(line: 169, column: 6, scope: !1821)
!1828 = !DILocation(line: 170, column: 12, scope: !1822)
!1829 = !DILocation(line: 170, column: 5, scope: !1822)
!1830 = !DILocation(line: 172, column: 3, scope: !1815)
!1831 = !DILocation(line: 174, column: 7, scope: !1832)
!1832 = distinct !DILexicalBlock(scope: !1765, file: !1, line: 174, column: 7)
!1833 = !DILocation(line: 174, column: 12, scope: !1832)
!1834 = !DILocation(line: 174, column: 23, scope: !1832)
!1835 = !DILocation(line: 174, column: 7, scope: !1765)
!1836 = !DILocation(line: 175, column: 9, scope: !1837)
!1837 = distinct !DILexicalBlock(scope: !1832, file: !1, line: 174, column: 30)
!1838 = !DILocation(line: 175, column: 11, scope: !1837)
!1839 = !DILocation(line: 175, column: 24, scope: !1837)
!1840 = !DILocation(line: 175, column: 29, scope: !1837)
!1841 = !DILocation(line: 175, column: 23, scope: !1837)
!1842 = !DILocation(line: 175, column: 17, scope: !1837)
!1843 = !DILocation(line: 175, column: 42, scope: !1837)
!1844 = !DILocation(line: 175, column: 6, scope: !1837)
!1845 = !DILocation(line: 176, column: 9, scope: !1837)
!1846 = !DILocation(line: 176, column: 11, scope: !1837)
!1847 = !DILocation(line: 176, column: 24, scope: !1837)
!1848 = !DILocation(line: 176, column: 29, scope: !1837)
!1849 = !DILocation(line: 176, column: 23, scope: !1837)
!1850 = !DILocation(line: 176, column: 17, scope: !1837)
!1851 = !DILocation(line: 176, column: 42, scope: !1837)
!1852 = !DILocation(line: 176, column: 6, scope: !1837)
!1853 = !DILocation(line: 177, column: 3, scope: !1837)
!1854 = !DILocation(line: 178, column: 2, scope: !1765)
!1855 = !DILocation(line: 180, column: 21, scope: !139)
!1856 = !DILocation(line: 180, column: 24, scope: !139)
!1857 = !DILocation(line: 180, column: 30, scope: !139)
!1858 = !DILocation(line: 180, column: 23, scope: !139)
!1859 = !DILocation(line: 180, column: 14, scope: !139)
!1860 = !DILocation(line: 180, column: 9, scope: !139)
!1861 = !DILocation(line: 180, column: 7, scope: !139)
!1862 = !DILocation(line: 180, column: 3, scope: !139)
!1863 = !DILocation(line: 181, column: 21, scope: !139)
!1864 = !DILocation(line: 181, column: 24, scope: !139)
!1865 = !DILocation(line: 181, column: 30, scope: !139)
!1866 = !DILocation(line: 181, column: 23, scope: !139)
!1867 = !DILocation(line: 181, column: 14, scope: !139)
!1868 = !DILocation(line: 181, column: 9, scope: !139)
!1869 = !DILocation(line: 181, column: 7, scope: !139)
!1870 = !DILocation(line: 181, column: 3, scope: !139)
!1871 = !DILocation(line: 183, column: 6, scope: !1872)
!1872 = distinct !DILexicalBlock(scope: !139, file: !1, line: 183, column: 6)
!1873 = !DILocation(line: 183, column: 11, scope: !1872)
!1874 = !DILocation(line: 183, column: 18, scope: !1872)
!1875 = !DILocation(line: 183, column: 6, scope: !139)
!1876 = !DILocation(line: 184, column: 7, scope: !1877)
!1877 = distinct !DILexicalBlock(scope: !1878, file: !1, line: 184, column: 7)
!1878 = distinct !DILexicalBlock(scope: !1872, file: !1, line: 183, column: 35)
!1879 = !DILocation(line: 184, column: 8, scope: !1877)
!1880 = !DILocation(line: 184, column: 11, scope: !1877)
!1881 = !DILocation(line: 184, column: 14, scope: !1877)
!1882 = !DILocation(line: 184, column: 15, scope: !1877)
!1883 = !DILocation(line: 184, column: 18, scope: !1877)
!1884 = !DILocation(line: 184, column: 21, scope: !1877)
!1885 = !DILocation(line: 184, column: 24, scope: !1877)
!1886 = !DILocation(line: 184, column: 30, scope: !1877)
!1887 = !DILocation(line: 184, column: 22, scope: !1877)
!1888 = !DILocation(line: 184, column: 32, scope: !1877)
!1889 = !DILocation(line: 184, column: 35, scope: !1877)
!1890 = !DILocation(line: 184, column: 38, scope: !1877)
!1891 = !DILocation(line: 184, column: 44, scope: !1877)
!1892 = !DILocation(line: 184, column: 36, scope: !1877)
!1893 = !DILocation(line: 184, column: 46, scope: !1877)
!1894 = !DILocation(line: 184, column: 49, scope: !1877)
!1895 = !DILocation(line: 184, column: 58, scope: !1877)
!1896 = !DILocation(line: 184, column: 65, scope: !1877)
!1897 = !DILocation(line: 184, column: 68, scope: !1877)
!1898 = !DILocation(line: 184, column: 77, scope: !1877)
!1899 = !DILocation(line: 184, column: 7, scope: !1878)
!1900 = !DILocation(line: 185, column: 8, scope: !1901)
!1901 = distinct !DILexicalBlock(scope: !1902, file: !1, line: 185, column: 8)
!1902 = distinct !DILexicalBlock(scope: !1877, file: !1, line: 184, column: 84)
!1903 = !DILocation(line: 185, column: 8, scope: !1902)
!1904 = !DILocation(line: 186, column: 33, scope: !1901)
!1905 = !DILocation(line: 186, column: 38, scope: !1901)
!1906 = !DILocation(line: 186, column: 44, scope: !1901)
!1907 = !DILocation(line: 186, column: 5, scope: !1901)
!1908 = !DILocation(line: 187, column: 11, scope: !1902)
!1909 = !DILocation(line: 187, column: 4, scope: !1902)
!1910 = !DILocation(line: 189, column: 2, scope: !1878)
!1911 = !DILocation(line: 190, column: 12, scope: !1912)
!1912 = distinct !DILexicalBlock(scope: !1872, file: !1, line: 190, column: 12)
!1913 = !DILocation(line: 190, column: 17, scope: !1912)
!1914 = !DILocation(line: 190, column: 23, scope: !1912)
!1915 = !DILocation(line: 190, column: 34, scope: !1912)
!1916 = !DILocation(line: 190, column: 37, scope: !1912)
!1917 = !DILocation(line: 190, column: 42, scope: !1912)
!1918 = !DILocation(line: 190, column: 48, scope: !1912)
!1919 = !DILocation(line: 190, column: 12, scope: !1872)
!1920 = !DILocation(line: 191, column: 7, scope: !1921)
!1921 = distinct !DILexicalBlock(scope: !1922, file: !1, line: 191, column: 7)
!1922 = distinct !DILexicalBlock(scope: !1912, file: !1, line: 190, column: 63)
!1923 = !DILocation(line: 191, column: 8, scope: !1921)
!1924 = !DILocation(line: 191, column: 11, scope: !1921)
!1925 = !DILocation(line: 191, column: 14, scope: !1921)
!1926 = !DILocation(line: 191, column: 15, scope: !1921)
!1927 = !DILocation(line: 191, column: 18, scope: !1921)
!1928 = !DILocation(line: 191, column: 21, scope: !1921)
!1929 = !DILocation(line: 191, column: 24, scope: !1921)
!1930 = !DILocation(line: 191, column: 30, scope: !1921)
!1931 = !DILocation(line: 191, column: 22, scope: !1921)
!1932 = !DILocation(line: 191, column: 32, scope: !1921)
!1933 = !DILocation(line: 191, column: 35, scope: !1921)
!1934 = !DILocation(line: 191, column: 38, scope: !1921)
!1935 = !DILocation(line: 191, column: 44, scope: !1921)
!1936 = !DILocation(line: 191, column: 36, scope: !1921)
!1937 = !DILocation(line: 191, column: 7, scope: !1922)
!1938 = !DILocation(line: 192, column: 8, scope: !1939)
!1939 = distinct !DILexicalBlock(scope: !1940, file: !1, line: 192, column: 8)
!1940 = distinct !DILexicalBlock(scope: !1921, file: !1, line: 191, column: 47)
!1941 = !DILocation(line: 192, column: 8, scope: !1940)
!1942 = !DILocation(line: 193, column: 33, scope: !1939)
!1943 = !DILocation(line: 193, column: 38, scope: !1939)
!1944 = !DILocation(line: 193, column: 44, scope: !1939)
!1945 = !DILocation(line: 193, column: 5, scope: !1939)
!1946 = !DILocation(line: 194, column: 11, scope: !1940)
!1947 = !DILocation(line: 194, column: 4, scope: !1940)
!1948 = !DILocation(line: 196, column: 2, scope: !1922)
!1949 = !DILocation(line: 198, column: 7, scope: !1950)
!1950 = distinct !DILexicalBlock(scope: !1951, file: !1, line: 198, column: 7)
!1951 = distinct !DILexicalBlock(scope: !1912, file: !1, line: 197, column: 7)
!1952 = !DILocation(line: 198, column: 12, scope: !1950)
!1953 = !DILocation(line: 198, column: 18, scope: !1950)
!1954 = !DILocation(line: 198, column: 7, scope: !1951)
!1955 = !DILocation(line: 199, column: 8, scope: !1956)
!1956 = distinct !DILexicalBlock(scope: !1957, file: !1, line: 199, column: 8)
!1957 = distinct !DILexicalBlock(scope: !1950, file: !1, line: 198, column: 32)
!1958 = !DILocation(line: 199, column: 11, scope: !1956)
!1959 = !DILocation(line: 199, column: 17, scope: !1956)
!1960 = !DILocation(line: 199, column: 9, scope: !1956)
!1961 = !DILocation(line: 199, column: 8, scope: !1957)
!1962 = !DILocation(line: 199, column: 24, scope: !1956)
!1963 = !DILocation(line: 199, column: 30, scope: !1956)
!1964 = !DILocation(line: 199, column: 31, scope: !1956)
!1965 = !DILocation(line: 199, column: 22, scope: !1956)
!1966 = !DILocation(line: 199, column: 20, scope: !1956)
!1967 = !DILocation(line: 200, column: 13, scope: !1968)
!1968 = distinct !DILexicalBlock(scope: !1956, file: !1, line: 200, column: 13)
!1969 = !DILocation(line: 200, column: 14, scope: !1968)
!1970 = !DILocation(line: 200, column: 13, scope: !1956)
!1971 = !DILocation(line: 200, column: 19, scope: !1968)
!1972 = !DILocation(line: 200, column: 18, scope: !1968)
!1973 = !DILocation(line: 201, column: 3, scope: !1957)
!1974 = !DILocation(line: 203, column: 7, scope: !1975)
!1975 = distinct !DILexicalBlock(scope: !1950, file: !1, line: 202, column: 8)
!1976 = !DILocation(line: 203, column: 11, scope: !1975)
!1977 = !DILocation(line: 203, column: 17, scope: !1975)
!1978 = !DILocation(line: 203, column: 9, scope: !1975)
!1979 = !DILocation(line: 203, column: 5, scope: !1975)
!1980 = !DILocation(line: 204, column: 8, scope: !1981)
!1981 = distinct !DILexicalBlock(scope: !1975, file: !1, line: 204, column: 8)
!1982 = !DILocation(line: 204, column: 9, scope: !1981)
!1983 = !DILocation(line: 204, column: 8, scope: !1975)
!1984 = !DILocation(line: 204, column: 17, scope: !1981)
!1985 = !DILocation(line: 204, column: 23, scope: !1981)
!1986 = !DILocation(line: 204, column: 14, scope: !1981)
!1987 = !DILocation(line: 204, column: 13, scope: !1981)
!1988 = !DILocation(line: 206, column: 7, scope: !1989)
!1989 = distinct !DILexicalBlock(scope: !1951, file: !1, line: 206, column: 7)
!1990 = !DILocation(line: 206, column: 12, scope: !1989)
!1991 = !DILocation(line: 206, column: 18, scope: !1989)
!1992 = !DILocation(line: 206, column: 7, scope: !1951)
!1993 = !DILocation(line: 207, column: 8, scope: !1994)
!1994 = distinct !DILexicalBlock(scope: !1995, file: !1, line: 207, column: 8)
!1995 = distinct !DILexicalBlock(scope: !1989, file: !1, line: 206, column: 32)
!1996 = !DILocation(line: 207, column: 11, scope: !1994)
!1997 = !DILocation(line: 207, column: 17, scope: !1994)
!1998 = !DILocation(line: 207, column: 9, scope: !1994)
!1999 = !DILocation(line: 207, column: 8, scope: !1995)
!2000 = !DILocation(line: 207, column: 24, scope: !1994)
!2001 = !DILocation(line: 207, column: 30, scope: !1994)
!2002 = !DILocation(line: 207, column: 31, scope: !1994)
!2003 = !DILocation(line: 207, column: 22, scope: !1994)
!2004 = !DILocation(line: 207, column: 20, scope: !1994)
!2005 = !DILocation(line: 208, column: 13, scope: !2006)
!2006 = distinct !DILexicalBlock(scope: !1994, file: !1, line: 208, column: 13)
!2007 = !DILocation(line: 208, column: 14, scope: !2006)
!2008 = !DILocation(line: 208, column: 13, scope: !1994)
!2009 = !DILocation(line: 208, column: 19, scope: !2006)
!2010 = !DILocation(line: 208, column: 18, scope: !2006)
!2011 = !DILocation(line: 209, column: 3, scope: !1995)
!2012 = !DILocation(line: 211, column: 7, scope: !2013)
!2013 = distinct !DILexicalBlock(scope: !1989, file: !1, line: 210, column: 8)
!2014 = !DILocation(line: 211, column: 11, scope: !2013)
!2015 = !DILocation(line: 211, column: 17, scope: !2013)
!2016 = !DILocation(line: 211, column: 9, scope: !2013)
!2017 = !DILocation(line: 211, column: 5, scope: !2013)
!2018 = !DILocation(line: 212, column: 8, scope: !2019)
!2019 = distinct !DILexicalBlock(scope: !2013, file: !1, line: 212, column: 8)
!2020 = !DILocation(line: 212, column: 9, scope: !2019)
!2021 = !DILocation(line: 212, column: 8, scope: !2013)
!2022 = !DILocation(line: 212, column: 17, scope: !2019)
!2023 = !DILocation(line: 212, column: 23, scope: !2019)
!2024 = !DILocation(line: 212, column: 14, scope: !2019)
!2025 = !DILocation(line: 212, column: 13, scope: !2019)
!2026 = !DILocation(line: 217, column: 10, scope: !2027)
!2027 = distinct !DILexicalBlock(scope: !139, file: !1, line: 217, column: 7)
!2028 = !DILocation(line: 217, column: 8, scope: !2027)
!2029 = !DILocation(line: 217, column: 15, scope: !2027)
!2030 = !DILocation(line: 217, column: 30, scope: !2027)
!2031 = !DILocation(line: 217, column: 34, scope: !2027)
!2032 = !DILocation(line: 217, column: 40, scope: !2027)
!2033 = !DILocation(line: 217, column: 46, scope: !2027)
!2034 = !DILocation(line: 217, column: 7, scope: !139)
!2035 = !DILocation(line: 218, column: 17, scope: !2036)
!2036 = distinct !DILexicalBlock(scope: !2027, file: !1, line: 217, column: 61)
!2037 = !DILocation(line: 218, column: 23, scope: !2036)
!2038 = !DILocation(line: 218, column: 25, scope: !2036)
!2039 = !DILocation(line: 218, column: 31, scope: !2036)
!2040 = !DILocation(line: 218, column: 24, scope: !2036)
!2041 = !DILocation(line: 218, column: 3, scope: !2036)
!2042 = !DILocation(line: 218, column: 9, scope: !2036)
!2043 = !DILocation(line: 218, column: 13, scope: !2036)
!2044 = !DILocation(line: 219, column: 2, scope: !2036)
!2045 = !DILocation(line: 222, column: 6, scope: !2046)
!2046 = distinct !DILexicalBlock(scope: !139, file: !1, line: 222, column: 6)
!2047 = !DILocation(line: 222, column: 6, scope: !139)
!2048 = !DILocation(line: 223, column: 8, scope: !2049)
!2049 = distinct !DILexicalBlock(scope: !2050, file: !1, line: 223, column: 7)
!2050 = distinct !DILexicalBlock(scope: !2046, file: !1, line: 222, column: 11)
!2051 = !DILocation(line: 223, column: 13, scope: !2049)
!2052 = !DILocation(line: 223, column: 21, scope: !2049)
!2053 = !DILocation(line: 223, column: 37, scope: !2049)
!2054 = !DILocation(line: 223, column: 41, scope: !2049)
!2055 = !DILocation(line: 223, column: 46, scope: !2049)
!2056 = !DILocation(line: 223, column: 51, scope: !2049)
!2057 = !DILocation(line: 223, column: 71, scope: !2049)
!2058 = !DILocation(line: 223, column: 7, scope: !2050)
!2059 = !DILocation(line: 224, column: 9, scope: !2060)
!2060 = distinct !DILexicalBlock(scope: !2061, file: !1, line: 224, column: 8)
!2061 = distinct !DILexicalBlock(scope: !2049, file: !1, line: 223, column: 77)
!2062 = !DILocation(line: 224, column: 14, scope: !2060)
!2063 = !DILocation(line: 224, column: 22, scope: !2060)
!2064 = !DILocation(line: 224, column: 39, scope: !2060)
!2065 = !DILocation(line: 224, column: 8, scope: !2061)
!2066 = !DILocation(line: 225, column: 5, scope: !2067)
!2067 = distinct !DILexicalBlock(scope: !2060, file: !1, line: 224, column: 45)
!2068 = !DILocation(line: 225, column: 13, scope: !2067)
!2069 = !DILocation(line: 225, column: 20, scope: !2067)
!2070 = !DILocation(line: 226, column: 4, scope: !2067)
!2071 = !DILocation(line: 227, column: 3, scope: !2061)
!2072 = !DILocation(line: 228, column: 2, scope: !2050)
!2073 = !DILocation(line: 231, column: 6, scope: !2074)
!2074 = distinct !DILexicalBlock(scope: !139, file: !1, line: 231, column: 6)
!2075 = !DILocation(line: 231, column: 11, scope: !2074)
!2076 = !DILocation(line: 231, column: 19, scope: !2074)
!2077 = !DILocation(line: 231, column: 6, scope: !139)
!2078 = !DILocalVariable(name: "filterx", scope: !2079, file: !1, line: 232, type: !26)
!2079 = distinct !DILexicalBlock(scope: !2074, file: !1, line: 231, column: 35)
!2080 = !DILocation(line: 232, column: 9, scope: !2079)
!2081 = !DILocalVariable(name: "filtery", scope: !2079, file: !1, line: 232, type: !26)
!2082 = !DILocation(line: 232, column: 18, scope: !2079)
!2083 = !DILocation(line: 233, column: 21, scope: !2079)
!2084 = !DILocation(line: 233, column: 26, scope: !2079)
!2085 = !DILocation(line: 233, column: 19, scope: !2079)
!2086 = !DILocation(line: 233, column: 40, scope: !2079)
!2087 = !DILocation(line: 233, column: 46, scope: !2079)
!2088 = !DILocation(line: 233, column: 38, scope: !2079)
!2089 = !DILocation(line: 233, column: 11, scope: !2079)
!2090 = !DILocation(line: 234, column: 21, scope: !2079)
!2091 = !DILocation(line: 234, column: 26, scope: !2079)
!2092 = !DILocation(line: 234, column: 19, scope: !2079)
!2093 = !DILocation(line: 234, column: 40, scope: !2079)
!2094 = !DILocation(line: 234, column: 46, scope: !2079)
!2095 = !DILocation(line: 234, column: 38, scope: !2079)
!2096 = !DILocation(line: 234, column: 11, scope: !2079)
!2097 = !DILocation(line: 239, column: 17, scope: !2079)
!2098 = !DILocation(line: 239, column: 22, scope: !2079)
!2099 = !DILocation(line: 239, column: 20, scope: !2079)
!2100 = !DILocation(line: 239, column: 9, scope: !2079)
!2101 = !DILocation(line: 239, column: 34, scope: !2079)
!2102 = !DILocation(line: 239, column: 40, scope: !2079)
!2103 = !DILocation(line: 239, column: 27, scope: !2079)
!2104 = !DILocation(line: 239, column: 25, scope: !2079)
!2105 = !DILocation(line: 239, column: 6, scope: !2079)
!2106 = !DILocation(line: 240, column: 17, scope: !2079)
!2107 = !DILocation(line: 240, column: 22, scope: !2079)
!2108 = !DILocation(line: 240, column: 20, scope: !2079)
!2109 = !DILocation(line: 240, column: 9, scope: !2079)
!2110 = !DILocation(line: 240, column: 34, scope: !2079)
!2111 = !DILocation(line: 240, column: 40, scope: !2079)
!2112 = !DILocation(line: 240, column: 27, scope: !2079)
!2113 = !DILocation(line: 240, column: 25, scope: !2079)
!2114 = !DILocation(line: 240, column: 6, scope: !2079)
!2115 = !DILocation(line: 242, column: 13, scope: !2079)
!2116 = !DILocation(line: 242, column: 19, scope: !2079)
!2117 = !DILocation(line: 242, column: 22, scope: !2079)
!2118 = !DILocation(line: 242, column: 21, scope: !2079)
!2119 = !DILocation(line: 242, column: 31, scope: !2079)
!2120 = !DILocation(line: 242, column: 34, scope: !2079)
!2121 = !DILocation(line: 242, column: 33, scope: !2079)
!2122 = !DILocation(line: 242, column: 43, scope: !2079)
!2123 = !DILocation(line: 242, column: 46, scope: !2079)
!2124 = !DILocation(line: 242, column: 45, scope: !2079)
!2125 = !DILocation(line: 242, column: 55, scope: !2079)
!2126 = !DILocation(line: 242, column: 58, scope: !2079)
!2127 = !DILocation(line: 242, column: 57, scope: !2079)
!2128 = !DILocation(line: 242, column: 67, scope: !2079)
!2129 = !DILocation(line: 242, column: 76, scope: !2079)
!2130 = !DILocation(line: 242, column: 81, scope: !2079)
!2131 = !DILocation(line: 242, column: 87, scope: !2079)
!2132 = !DILocation(line: 242, column: 75, scope: !2079)
!2133 = !DILocation(line: 242, column: 103, scope: !2079)
!2134 = !DILocation(line: 242, column: 108, scope: !2079)
!2135 = !DILocation(line: 242, column: 114, scope: !2079)
!2136 = !DILocation(line: 242, column: 102, scope: !2079)
!2137 = !DILocation(line: 242, column: 3, scope: !2079)
!2138 = !DILocation(line: 243, column: 2, scope: !2079)
!2139 = !DILocation(line: 245, column: 19, scope: !2140)
!2140 = distinct !DILexicalBlock(scope: !2074, file: !1, line: 244, column: 7)
!2141 = !DILocation(line: 245, column: 27, scope: !2140)
!2142 = !DILocation(line: 245, column: 31, scope: !2140)
!2143 = !DILocation(line: 245, column: 37, scope: !2140)
!2144 = !DILocation(line: 245, column: 40, scope: !2140)
!2145 = !DILocation(line: 245, column: 3, scope: !2140)
!2146 = !DILocation(line: 248, column: 10, scope: !2147)
!2147 = distinct !DILexicalBlock(scope: !139, file: !1, line: 248, column: 7)
!2148 = !DILocation(line: 248, column: 8, scope: !2147)
!2149 = !DILocation(line: 248, column: 15, scope: !2147)
!2150 = !DILocation(line: 248, column: 30, scope: !2147)
!2151 = !DILocation(line: 248, column: 34, scope: !2147)
!2152 = !DILocation(line: 248, column: 40, scope: !2147)
!2153 = !DILocation(line: 248, column: 46, scope: !2147)
!2154 = !DILocation(line: 248, column: 7, scope: !139)
!2155 = !DILocation(line: 249, column: 17, scope: !2156)
!2156 = distinct !DILexicalBlock(scope: !2147, file: !1, line: 248, column: 61)
!2157 = !DILocation(line: 249, column: 23, scope: !2156)
!2158 = !DILocation(line: 249, column: 25, scope: !2156)
!2159 = !DILocation(line: 249, column: 31, scope: !2156)
!2160 = !DILocation(line: 249, column: 24, scope: !2156)
!2161 = !DILocation(line: 249, column: 3, scope: !2156)
!2162 = !DILocation(line: 249, column: 9, scope: !2156)
!2163 = !DILocation(line: 249, column: 13, scope: !2156)
!2164 = !DILocation(line: 250, column: 2, scope: !2156)
!2165 = !DILocation(line: 252, column: 6, scope: !2166)
!2166 = distinct !DILexicalBlock(scope: !139, file: !1, line: 252, column: 6)
!2167 = !DILocation(line: 252, column: 14, scope: !2166)
!2168 = !DILocation(line: 252, column: 6, scope: !139)
!2169 = !DILocation(line: 253, column: 7, scope: !2170)
!2170 = distinct !DILexicalBlock(scope: !2171, file: !1, line: 253, column: 7)
!2171 = distinct !DILexicalBlock(scope: !2166, file: !1, line: 252, column: 19)
!2172 = !DILocation(line: 253, column: 12, scope: !2170)
!2173 = !DILocation(line: 253, column: 20, scope: !2170)
!2174 = !DILocation(line: 253, column: 7, scope: !2171)
!2175 = !DILocation(line: 261, column: 27, scope: !2176)
!2176 = distinct !DILexicalBlock(scope: !2170, file: !1, line: 253, column: 37)
!2177 = !DILocation(line: 261, column: 35, scope: !2176)
!2178 = !DILocation(line: 261, column: 38, scope: !2176)
!2179 = !DILocation(line: 261, column: 25, scope: !2176)
!2180 = !DILocation(line: 261, column: 4, scope: !2176)
!2181 = !DILocation(line: 261, column: 12, scope: !2176)
!2182 = !DILocation(line: 261, column: 19, scope: !2176)
!2183 = !DILocation(line: 262, column: 26, scope: !2176)
!2184 = !DILocation(line: 262, column: 34, scope: !2176)
!2185 = !DILocation(line: 262, column: 37, scope: !2176)
!2186 = !DILocation(line: 262, column: 24, scope: !2176)
!2187 = !DILocation(line: 262, column: 4, scope: !2176)
!2188 = !DILocation(line: 262, column: 12, scope: !2176)
!2189 = !DILocation(line: 262, column: 19, scope: !2176)
!2190 = !DILocation(line: 263, column: 26, scope: !2176)
!2191 = !DILocation(line: 263, column: 34, scope: !2176)
!2192 = !DILocation(line: 263, column: 37, scope: !2176)
!2193 = !DILocation(line: 263, column: 24, scope: !2176)
!2194 = !DILocation(line: 263, column: 4, scope: !2176)
!2195 = !DILocation(line: 263, column: 12, scope: !2176)
!2196 = !DILocation(line: 263, column: 19, scope: !2176)
!2197 = !DILocation(line: 264, column: 3, scope: !2176)
!2198 = !DILocation(line: 267, column: 10, scope: !2199)
!2199 = distinct !DILexicalBlock(scope: !2170, file: !1, line: 265, column: 8)
!2200 = !DILocation(line: 267, column: 18, scope: !2199)
!2201 = !DILocation(line: 267, column: 21, scope: !2199)
!2202 = !DILocation(line: 267, column: 29, scope: !2199)
!2203 = !DILocation(line: 267, column: 20, scope: !2199)
!2204 = !DILocation(line: 267, column: 32, scope: !2199)
!2205 = !DILocation(line: 267, column: 40, scope: !2199)
!2206 = !DILocation(line: 267, column: 31, scope: !2199)
!2207 = !DILocation(line: 267, column: 8, scope: !2199)
!2208 = !DILocation(line: 269, column: 8, scope: !2209)
!2209 = distinct !DILexicalBlock(scope: !2199, file: !1, line: 269, column: 8)
!2210 = !DILocation(line: 269, column: 10, scope: !2209)
!2211 = !DILocation(line: 269, column: 16, scope: !2209)
!2212 = !DILocation(line: 269, column: 17, scope: !2209)
!2213 = !DILocation(line: 269, column: 9, scope: !2209)
!2214 = !DILocation(line: 269, column: 8, scope: !2199)
!2215 = !DILocalVariable(name: "col", scope: !2216, file: !1, line: 270, type: !411)
!2216 = distinct !DILexicalBlock(scope: !2209, file: !1, line: 269, column: 21)
!2217 = !DILocation(line: 270, column: 11, scope: !2216)
!2218 = !DILocation(line: 271, column: 20, scope: !2216)
!2219 = !DILocation(line: 271, column: 25, scope: !2216)
!2220 = !DILocation(line: 271, column: 31, scope: !2216)
!2221 = !DILocation(line: 271, column: 32, scope: !2216)
!2222 = !DILocation(line: 271, column: 36, scope: !2216)
!2223 = !DILocation(line: 271, column: 5, scope: !2216)
!2224 = !DILocation(line: 272, column: 12, scope: !2216)
!2225 = !DILocation(line: 272, column: 19, scope: !2216)
!2226 = !DILocation(line: 272, column: 18, scope: !2216)
!2227 = !DILocation(line: 272, column: 26, scope: !2216)
!2228 = !DILocation(line: 272, column: 25, scope: !2216)
!2229 = !DILocation(line: 272, column: 9, scope: !2216)
!2230 = !DILocation(line: 273, column: 4, scope: !2216)
!2231 = !DILocation(line: 275, column: 11, scope: !2232)
!2232 = distinct !DILexicalBlock(scope: !2209, file: !1, line: 274, column: 9)
!2233 = !DILocation(line: 275, column: 9, scope: !2232)
!2234 = !DILocation(line: 278, column: 8, scope: !2235)
!2235 = distinct !DILexicalBlock(scope: !2199, file: !1, line: 278, column: 8)
!2236 = !DILocation(line: 278, column: 10, scope: !2235)
!2237 = !DILocation(line: 278, column: 16, scope: !2235)
!2238 = !DILocation(line: 278, column: 17, scope: !2235)
!2239 = !DILocation(line: 278, column: 9, scope: !2235)
!2240 = !DILocation(line: 278, column: 8, scope: !2199)
!2241 = !DILocalVariable(name: "col", scope: !2242, file: !1, line: 279, type: !411)
!2242 = distinct !DILexicalBlock(scope: !2235, file: !1, line: 278, column: 21)
!2243 = !DILocation(line: 279, column: 11, scope: !2242)
!2244 = !DILocation(line: 280, column: 20, scope: !2242)
!2245 = !DILocation(line: 280, column: 25, scope: !2242)
!2246 = !DILocation(line: 280, column: 31, scope: !2242)
!2247 = !DILocation(line: 280, column: 34, scope: !2242)
!2248 = !DILocation(line: 280, column: 35, scope: !2242)
!2249 = !DILocation(line: 280, column: 5, scope: !2242)
!2250 = !DILocation(line: 281, column: 13, scope: !2242)
!2251 = !DILocation(line: 281, column: 20, scope: !2242)
!2252 = !DILocation(line: 281, column: 19, scope: !2242)
!2253 = !DILocation(line: 281, column: 27, scope: !2242)
!2254 = !DILocation(line: 281, column: 26, scope: !2242)
!2255 = !DILocation(line: 281, column: 10, scope: !2242)
!2256 = !DILocation(line: 282, column: 4, scope: !2242)
!2257 = !DILocation(line: 284, column: 12, scope: !2258)
!2258 = distinct !DILexicalBlock(scope: !2235, file: !1, line: 283, column: 9)
!2259 = !DILocation(line: 284, column: 10, scope: !2258)
!2260 = !DILocation(line: 288, column: 21, scope: !2199)
!2261 = !DILocation(line: 288, column: 26, scope: !2199)
!2262 = !DILocation(line: 288, column: 25, scope: !2199)
!2263 = !DILocation(line: 288, column: 4, scope: !2199)
!2264 = !DILocation(line: 288, column: 12, scope: !2199)
!2265 = !DILocation(line: 288, column: 18, scope: !2199)
!2266 = !DILocation(line: 289, column: 21, scope: !2199)
!2267 = !DILocation(line: 289, column: 26, scope: !2199)
!2268 = !DILocation(line: 289, column: 25, scope: !2199)
!2269 = !DILocation(line: 289, column: 4, scope: !2199)
!2270 = !DILocation(line: 289, column: 12, scope: !2199)
!2271 = !DILocation(line: 289, column: 18, scope: !2199)
!2272 = !DILocation(line: 291, column: 2, scope: !2171)
!2273 = !DILocation(line: 293, column: 6, scope: !2274)
!2274 = distinct !DILexicalBlock(scope: !139, file: !1, line: 293, column: 6)
!2275 = !DILocation(line: 293, column: 14, scope: !2274)
!2276 = !DILocation(line: 293, column: 6, scope: !139)
!2277 = !DILocation(line: 294, column: 17, scope: !2278)
!2278 = distinct !DILexicalBlock(scope: !2274, file: !1, line: 293, column: 22)
!2279 = !DILocation(line: 294, column: 25, scope: !2278)
!2280 = !DILocation(line: 294, column: 3, scope: !2278)
!2281 = !DILocation(line: 294, column: 11, scope: !2278)
!2282 = !DILocation(line: 294, column: 15, scope: !2278)
!2283 = !DILocation(line: 295, column: 2, scope: !2278)
!2284 = !DILocation(line: 296, column: 11, scope: !2285)
!2285 = distinct !DILexicalBlock(scope: !2274, file: !1, line: 296, column: 11)
!2286 = !DILocation(line: 296, column: 16, scope: !2285)
!2287 = !DILocation(line: 296, column: 24, scope: !2285)
!2288 = !DILocation(line: 296, column: 11, scope: !2274)
!2289 = !DILocation(line: 297, column: 38, scope: !2290)
!2290 = distinct !DILexicalBlock(scope: !2285, file: !1, line: 296, column: 41)
!2291 = !DILocation(line: 297, column: 46, scope: !2290)
!2292 = !DILocation(line: 297, column: 50, scope: !2290)
!2293 = !DILocation(line: 297, column: 58, scope: !2290)
!2294 = !DILocation(line: 297, column: 62, scope: !2290)
!2295 = !DILocation(line: 297, column: 70, scope: !2290)
!2296 = !DILocation(line: 297, column: 30, scope: !2290)
!2297 = !DILocation(line: 297, column: 16, scope: !2290)
!2298 = !DILocation(line: 297, column: 24, scope: !2290)
!2299 = !DILocation(line: 297, column: 28, scope: !2290)
!2300 = !DILocation(line: 297, column: 3, scope: !2290)
!2301 = !DILocation(line: 297, column: 11, scope: !2290)
!2302 = !DILocation(line: 297, column: 14, scope: !2290)
!2303 = !DILocation(line: 298, column: 2, scope: !2290)
!2304 = !DILocation(line: 300, column: 16, scope: !2305)
!2305 = distinct !DILexicalBlock(scope: !2285, file: !1, line: 299, column: 7)
!2306 = !DILocation(line: 300, column: 24, scope: !2305)
!2307 = !DILocation(line: 300, column: 28, scope: !2305)
!2308 = !DILocation(line: 300, column: 3, scope: !2305)
!2309 = !DILocation(line: 300, column: 11, scope: !2305)
!2310 = !DILocation(line: 300, column: 14, scope: !2305)
!2311 = !DILocation(line: 303, column: 6, scope: !2312)
!2312 = distinct !DILexicalBlock(scope: !139, file: !1, line: 303, column: 6)
!2313 = !DILocation(line: 303, column: 11, scope: !2312)
!2314 = !DILocation(line: 303, column: 16, scope: !2312)
!2315 = !DILocation(line: 303, column: 6, scope: !139)
!2316 = !DILocation(line: 304, column: 23, scope: !2317)
!2317 = distinct !DILexicalBlock(scope: !2312, file: !1, line: 303, column: 32)
!2318 = !DILocation(line: 304, column: 31, scope: !2317)
!2319 = !DILocation(line: 304, column: 21, scope: !2317)
!2320 = !DILocation(line: 304, column: 3, scope: !2317)
!2321 = !DILocation(line: 304, column: 11, scope: !2317)
!2322 = !DILocation(line: 304, column: 14, scope: !2317)
!2323 = !DILocation(line: 305, column: 2, scope: !2317)
!2324 = !DILocation(line: 309, column: 6, scope: !2325)
!2325 = distinct !DILexicalBlock(scope: !139, file: !1, line: 309, column: 6)
!2326 = !DILocation(line: 309, column: 14, scope: !2325)
!2327 = !DILocation(line: 309, column: 16, scope: !2325)
!2328 = !DILocation(line: 309, column: 23, scope: !2325)
!2329 = !DILocation(line: 309, column: 26, scope: !2325)
!2330 = !DILocation(line: 309, column: 34, scope: !2325)
!2331 = !DILocation(line: 309, column: 36, scope: !2325)
!2332 = !DILocation(line: 309, column: 43, scope: !2325)
!2333 = !DILocation(line: 309, column: 48, scope: !2325)
!2334 = !DILocation(line: 309, column: 53, scope: !2325)
!2335 = !DILocation(line: 309, column: 61, scope: !2325)
!2336 = !DILocation(line: 309, column: 6, scope: !139)
!2337 = !DILocation(line: 310, column: 12, scope: !2338)
!2338 = distinct !DILexicalBlock(scope: !2325, file: !1, line: 309, column: 79)
!2339 = !DILocation(line: 310, column: 20, scope: !2338)
!2340 = !DILocation(line: 310, column: 11, scope: !2338)
!2341 = !DILocation(line: 310, column: 5, scope: !2338)
!2342 = !DILocation(line: 311, column: 16, scope: !2338)
!2343 = !DILocation(line: 311, column: 3, scope: !2338)
!2344 = !DILocation(line: 311, column: 11, scope: !2338)
!2345 = !DILocation(line: 311, column: 13, scope: !2338)
!2346 = !DILocation(line: 312, column: 16, scope: !2338)
!2347 = !DILocation(line: 312, column: 3, scope: !2338)
!2348 = !DILocation(line: 312, column: 11, scope: !2338)
!2349 = !DILocation(line: 312, column: 13, scope: !2338)
!2350 = !DILocation(line: 313, column: 16, scope: !2338)
!2351 = !DILocation(line: 313, column: 3, scope: !2338)
!2352 = !DILocation(line: 313, column: 11, scope: !2338)
!2353 = !DILocation(line: 313, column: 13, scope: !2338)
!2354 = !DILocation(line: 314, column: 2, scope: !2338)
!2355 = !DILocation(line: 316, column: 6, scope: !2356)
!2356 = distinct !DILexicalBlock(scope: !139, file: !1, line: 316, column: 6)
!2357 = !DILocation(line: 316, column: 6, scope: !139)
!2358 = !DILocation(line: 317, column: 31, scope: !2356)
!2359 = !DILocation(line: 317, column: 36, scope: !2356)
!2360 = !DILocation(line: 317, column: 42, scope: !2356)
!2361 = !DILocation(line: 317, column: 3, scope: !2356)
!2362 = !DILocation(line: 319, column: 2, scope: !139)
!2363 = !DILocation(line: 319, column: 2, scope: !2364)
!2364 = distinct !DILexicalBlock(scope: !139, file: !1, line: 319, column: 2)
!2365 = !DILocation(line: 319, column: 2, scope: !2366)
!2366 = distinct !DILexicalBlock(scope: !2367, file: !1, line: 319, column: 2)
!2367 = distinct !DILexicalBlock(scope: !2364, file: !1, line: 319, column: 2)
!2368 = !DILocation(line: 319, column: 2, scope: !2367)
!2369 = !DILocation(line: 319, column: 2, scope: !2370)
!2370 = distinct !DILexicalBlock(scope: !2367, file: !1, line: 319, column: 2)
!2371 = !DILocation(line: 319, column: 2, scope: !2372)
!2372 = distinct !DILexicalBlock(scope: !2367, file: !1, line: 319, column: 2)
!2373 = !DILocation(line: 319, column: 2, scope: !2374)
!2374 = distinct !DILexicalBlock(scope: !139, file: !1, line: 319, column: 2)
!2375 = !DILocalVariable(name: "_hsv", scope: !2376, file: !1, line: 319, type: !339)
!2376 = distinct !DILexicalBlock(scope: !2374, file: !1, line: 319, column: 2)
!2377 = !DILocation(line: 319, column: 2, scope: !2376)
!2378 = !DILocation(line: 321, column: 9, scope: !139)
!2379 = !DILocation(line: 321, column: 2, scope: !139)
!2380 = !DILocation(line: 322, column: 1, scope: !139)
!2381 = distinct !DISubprogram(name: "boxsample", scope: !1, file: !1, line: 569, type: !2382, scopeLine: 570, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1638)
!2382 = !DISubroutineType(types: !2383)
!2383 = !{null, !34, !26, !26, !26, !26, !1623, !2384, !2384}
!2384 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !177)
!2385 = !DILocalVariable(name: "ibuf", arg: 1, scope: !2381, file: !1, line: 569, type: !34)
!2386 = !DILocation(line: 569, column: 30, scope: !2381)
!2387 = !DILocalVariable(name: "minx", arg: 2, scope: !2381, file: !1, line: 569, type: !26)
!2388 = !DILocation(line: 569, column: 42, scope: !2381)
!2389 = !DILocalVariable(name: "miny", arg: 3, scope: !2381, file: !1, line: 569, type: !26)
!2390 = !DILocation(line: 569, column: 54, scope: !2381)
!2391 = !DILocalVariable(name: "maxx", arg: 4, scope: !2381, file: !1, line: 569, type: !26)
!2392 = !DILocation(line: 569, column: 66, scope: !2381)
!2393 = !DILocalVariable(name: "maxy", arg: 5, scope: !2381, file: !1, line: 569, type: !26)
!2394 = !DILocation(line: 569, column: 78, scope: !2381)
!2395 = !DILocalVariable(name: "texres", arg: 6, scope: !2381, file: !1, line: 569, type: !1623)
!2396 = !DILocation(line: 569, column: 95, scope: !2381)
!2397 = !DILocalVariable(name: "imaprepeat", arg: 7, scope: !2381, file: !1, line: 569, type: !2384)
!2398 = !DILocation(line: 569, column: 115, scope: !2381)
!2399 = !DILocalVariable(name: "imapextend", arg: 8, scope: !2381, file: !1, line: 569, type: !2384)
!2400 = !DILocation(line: 569, column: 139, scope: !2381)
!2401 = !DILocalVariable(name: "texr", scope: !2381, file: !1, line: 580, type: !1624)
!2402 = !DILocation(line: 580, column: 12, scope: !2381)
!2403 = !DILocalVariable(name: "rf", scope: !2381, file: !1, line: 581, type: !2404)
!2404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1122, size: 64)
!2405 = !DILocation(line: 581, column: 8, scope: !2381)
!2406 = !DILocalVariable(name: "stack", scope: !2381, file: !1, line: 581, type: !2407)
!2407 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1122, size: 1024, elements: !903)
!2408 = !DILocation(line: 581, column: 12, scope: !2381)
!2409 = !DILocalVariable(name: "opp", scope: !2381, file: !1, line: 582, type: !26)
!2410 = !DILocation(line: 582, column: 8, scope: !2381)
!2411 = !DILocalVariable(name: "tot", scope: !2381, file: !1, line: 582, type: !26)
!2412 = !DILocation(line: 582, column: 13, scope: !2381)
!2413 = !DILocalVariable(name: "alphaclip", scope: !2381, file: !1, line: 582, type: !26)
!2414 = !DILocation(line: 582, column: 18, scope: !2381)
!2415 = !DILocalVariable(name: "count", scope: !2381, file: !1, line: 583, type: !177)
!2416 = !DILocation(line: 583, column: 8, scope: !2381)
!2417 = !DILocation(line: 585, column: 6, scope: !2381)
!2418 = !DILocation(line: 585, column: 4, scope: !2381)
!2419 = !DILocation(line: 586, column: 13, scope: !2381)
!2420 = !DILocation(line: 586, column: 19, scope: !2381)
!2421 = !DILocation(line: 586, column: 25, scope: !2381)
!2422 = !DILocation(line: 586, column: 18, scope: !2381)
!2423 = !DILocation(line: 586, column: 17, scope: !2381)
!2424 = !DILocation(line: 586, column: 2, scope: !2381)
!2425 = !DILocation(line: 586, column: 6, scope: !2381)
!2426 = !DILocation(line: 586, column: 11, scope: !2381)
!2427 = !DILocation(line: 587, column: 13, scope: !2381)
!2428 = !DILocation(line: 587, column: 19, scope: !2381)
!2429 = !DILocation(line: 587, column: 25, scope: !2381)
!2430 = !DILocation(line: 587, column: 18, scope: !2381)
!2431 = !DILocation(line: 587, column: 17, scope: !2381)
!2432 = !DILocation(line: 587, column: 2, scope: !2381)
!2433 = !DILocation(line: 587, column: 6, scope: !2381)
!2434 = !DILocation(line: 587, column: 11, scope: !2381)
!2435 = !DILocation(line: 588, column: 13, scope: !2381)
!2436 = !DILocation(line: 588, column: 19, scope: !2381)
!2437 = !DILocation(line: 588, column: 25, scope: !2381)
!2438 = !DILocation(line: 588, column: 18, scope: !2381)
!2439 = !DILocation(line: 588, column: 17, scope: !2381)
!2440 = !DILocation(line: 588, column: 2, scope: !2381)
!2441 = !DILocation(line: 588, column: 6, scope: !2381)
!2442 = !DILocation(line: 588, column: 11, scope: !2381)
!2443 = !DILocation(line: 589, column: 13, scope: !2381)
!2444 = !DILocation(line: 589, column: 19, scope: !2381)
!2445 = !DILocation(line: 589, column: 25, scope: !2381)
!2446 = !DILocation(line: 589, column: 18, scope: !2381)
!2447 = !DILocation(line: 589, column: 17, scope: !2381)
!2448 = !DILocation(line: 589, column: 2, scope: !2381)
!2449 = !DILocation(line: 589, column: 6, scope: !2381)
!2450 = !DILocation(line: 589, column: 11, scope: !2381)
!2451 = !DILocation(line: 591, column: 15, scope: !2381)
!2452 = !DILocation(line: 591, column: 23, scope: !2381)
!2453 = !DILocation(line: 591, column: 7, scope: !2381)
!2454 = !DILocation(line: 591, column: 13, scope: !2381)
!2455 = !DILocation(line: 593, column: 6, scope: !2456)
!2456 = distinct !DILexicalBlock(scope: !2381, file: !1, line: 593, column: 6)
!2457 = !DILocation(line: 593, column: 6, scope: !2381)
!2458 = !DILocation(line: 594, column: 3, scope: !2459)
!2459 = distinct !DILexicalBlock(scope: !2460, file: !1, line: 594, column: 3)
!2460 = distinct !DILexicalBlock(scope: !2461, file: !1, line: 594, column: 3)
!2461 = distinct !DILexicalBlock(scope: !2456, file: !1, line: 593, column: 18)
!2462 = !DILocation(line: 594, column: 3, scope: !2460)
!2463 = !DILocation(line: 594, column: 3, scope: !2464)
!2464 = distinct !DILexicalBlock(scope: !2459, file: !1, line: 594, column: 3)
!2465 = !DILocation(line: 595, column: 3, scope: !2466)
!2466 = distinct !DILexicalBlock(scope: !2467, file: !1, line: 595, column: 3)
!2467 = distinct !DILexicalBlock(scope: !2461, file: !1, line: 595, column: 3)
!2468 = !DILocation(line: 595, column: 3, scope: !2467)
!2469 = !DILocation(line: 595, column: 3, scope: !2470)
!2470 = distinct !DILexicalBlock(scope: !2466, file: !1, line: 595, column: 3)
!2471 = !DILocation(line: 596, column: 2, scope: !2461)
!2472 = !DILocation(line: 597, column: 11, scope: !2473)
!2473 = distinct !DILexicalBlock(scope: !2456, file: !1, line: 597, column: 11)
!2474 = !DILocation(line: 597, column: 11, scope: !2456)
!2475 = !DILocation(line: 598, column: 19, scope: !2473)
!2476 = !DILocation(line: 598, column: 47, scope: !2473)
!2477 = !DILocation(line: 598, column: 53, scope: !2473)
!2478 = !DILocation(line: 598, column: 39, scope: !2473)
!2479 = !DILocation(line: 598, column: 3, scope: !2473)
!2480 = !DILocation(line: 600, column: 25, scope: !2481)
!2481 = distinct !DILexicalBlock(scope: !2473, file: !1, line: 599, column: 7)
!2482 = !DILocation(line: 600, column: 42, scope: !2481)
!2483 = !DILocation(line: 600, column: 48, scope: !2481)
!2484 = !DILocation(line: 600, column: 34, scope: !2481)
!2485 = !DILocation(line: 600, column: 14, scope: !2481)
!2486 = !DILocation(line: 600, column: 12, scope: !2481)
!2487 = !DILocation(line: 602, column: 7, scope: !2488)
!2488 = distinct !DILexicalBlock(scope: !2481, file: !1, line: 602, column: 7)
!2489 = !DILocation(line: 602, column: 16, scope: !2488)
!2490 = !DILocation(line: 602, column: 7, scope: !2481)
!2491 = !DILocation(line: 603, column: 40, scope: !2492)
!2492 = distinct !DILexicalBlock(scope: !2488, file: !1, line: 602, column: 24)
!2493 = !DILocation(line: 603, column: 48, scope: !2492)
!2494 = !DILocation(line: 603, column: 50, scope: !2492)
!2495 = !DILocation(line: 603, column: 28, scope: !2492)
!2496 = !DILocation(line: 603, column: 36, scope: !2492)
!2497 = !DILocation(line: 603, column: 38, scope: !2492)
!2498 = !DILocation(line: 603, column: 16, scope: !2492)
!2499 = !DILocation(line: 603, column: 24, scope: !2492)
!2500 = !DILocation(line: 603, column: 26, scope: !2492)
!2501 = !DILocation(line: 603, column: 4, scope: !2492)
!2502 = !DILocation(line: 603, column: 12, scope: !2492)
!2503 = !DILocation(line: 603, column: 14, scope: !2492)
!2504 = !DILocation(line: 604, column: 4, scope: !2492)
!2505 = !DILocation(line: 608, column: 6, scope: !2506)
!2506 = distinct !DILexicalBlock(scope: !2381, file: !1, line: 608, column: 6)
!2507 = !DILocation(line: 608, column: 6, scope: !2381)
!2508 = !DILocation(line: 609, column: 3, scope: !2509)
!2509 = distinct !DILexicalBlock(scope: !2510, file: !1, line: 609, column: 3)
!2510 = distinct !DILexicalBlock(scope: !2511, file: !1, line: 609, column: 3)
!2511 = distinct !DILexicalBlock(scope: !2506, file: !1, line: 608, column: 18)
!2512 = !DILocation(line: 609, column: 3, scope: !2510)
!2513 = !DILocation(line: 609, column: 3, scope: !2514)
!2514 = distinct !DILexicalBlock(scope: !2509, file: !1, line: 609, column: 3)
!2515 = !DILocation(line: 610, column: 3, scope: !2516)
!2516 = distinct !DILexicalBlock(scope: !2517, file: !1, line: 610, column: 3)
!2517 = distinct !DILexicalBlock(scope: !2511, file: !1, line: 610, column: 3)
!2518 = !DILocation(line: 610, column: 3, scope: !2517)
!2519 = !DILocation(line: 610, column: 3, scope: !2520)
!2520 = distinct !DILexicalBlock(scope: !2516, file: !1, line: 610, column: 3)
!2521 = !DILocation(line: 611, column: 2, scope: !2511)
!2522 = !DILocation(line: 612, column: 11, scope: !2523)
!2523 = distinct !DILexicalBlock(scope: !2506, file: !1, line: 612, column: 11)
!2524 = !DILocation(line: 612, column: 11, scope: !2506)
!2525 = !DILocation(line: 613, column: 19, scope: !2523)
!2526 = !DILocation(line: 613, column: 47, scope: !2523)
!2527 = !DILocation(line: 613, column: 53, scope: !2523)
!2528 = !DILocation(line: 613, column: 39, scope: !2523)
!2529 = !DILocation(line: 613, column: 3, scope: !2523)
!2530 = !DILocation(line: 615, column: 26, scope: !2531)
!2531 = distinct !DILexicalBlock(scope: !2523, file: !1, line: 614, column: 7)
!2532 = !DILocation(line: 615, column: 43, scope: !2531)
!2533 = !DILocation(line: 615, column: 49, scope: !2531)
!2534 = !DILocation(line: 615, column: 35, scope: !2531)
!2535 = !DILocation(line: 615, column: 15, scope: !2531)
!2536 = !DILocation(line: 615, column: 12, scope: !2531)
!2537 = !DILocation(line: 617, column: 7, scope: !2538)
!2538 = distinct !DILexicalBlock(scope: !2531, file: !1, line: 617, column: 7)
!2539 = !DILocation(line: 617, column: 16, scope: !2538)
!2540 = !DILocation(line: 617, column: 7, scope: !2531)
!2541 = !DILocation(line: 618, column: 40, scope: !2542)
!2542 = distinct !DILexicalBlock(scope: !2538, file: !1, line: 617, column: 24)
!2543 = !DILocation(line: 618, column: 48, scope: !2542)
!2544 = !DILocation(line: 618, column: 50, scope: !2542)
!2545 = !DILocation(line: 618, column: 28, scope: !2542)
!2546 = !DILocation(line: 618, column: 36, scope: !2542)
!2547 = !DILocation(line: 618, column: 38, scope: !2542)
!2548 = !DILocation(line: 618, column: 16, scope: !2542)
!2549 = !DILocation(line: 618, column: 24, scope: !2542)
!2550 = !DILocation(line: 618, column: 26, scope: !2542)
!2551 = !DILocation(line: 618, column: 4, scope: !2542)
!2552 = !DILocation(line: 618, column: 12, scope: !2542)
!2553 = !DILocation(line: 618, column: 14, scope: !2542)
!2554 = !DILocation(line: 619, column: 4, scope: !2542)
!2555 = !DILocation(line: 623, column: 6, scope: !2556)
!2556 = distinct !DILexicalBlock(scope: !2381, file: !1, line: 623, column: 6)
!2557 = !DILocation(line: 623, column: 11, scope: !2556)
!2558 = !DILocation(line: 623, column: 6, scope: !2381)
!2559 = !DILocation(line: 624, column: 44, scope: !2560)
!2560 = distinct !DILexicalBlock(scope: !2556, file: !1, line: 623, column: 15)
!2561 = !DILocation(line: 624, column: 52, scope: !2560)
!2562 = !DILocation(line: 624, column: 54, scope: !2560)
!2563 = !DILocation(line: 624, column: 32, scope: !2560)
!2564 = !DILocation(line: 624, column: 40, scope: !2560)
!2565 = !DILocation(line: 624, column: 42, scope: !2560)
!2566 = !DILocation(line: 624, column: 20, scope: !2560)
!2567 = !DILocation(line: 624, column: 28, scope: !2560)
!2568 = !DILocation(line: 624, column: 30, scope: !2560)
!2569 = !DILocation(line: 624, column: 8, scope: !2560)
!2570 = !DILocation(line: 624, column: 16, scope: !2560)
!2571 = !DILocation(line: 624, column: 18, scope: !2560)
!2572 = !DILocation(line: 624, column: 6, scope: !2560)
!2573 = !DILocation(line: 625, column: 3, scope: !2560)
!2574 = !DILocation(line: 625, column: 15, scope: !2560)
!2575 = !DILocation(line: 626, column: 18, scope: !2576)
!2576 = distinct !DILexicalBlock(scope: !2560, file: !1, line: 625, column: 19)
!2577 = !DILocation(line: 626, column: 24, scope: !2576)
!2578 = !DILocation(line: 626, column: 4, scope: !2576)
!2579 = !DILocation(line: 628, column: 21, scope: !2576)
!2580 = !DILocation(line: 628, column: 9, scope: !2576)
!2581 = !DILocation(line: 628, column: 7, scope: !2576)
!2582 = !DILocation(line: 629, column: 10, scope: !2576)
!2583 = !DILocation(line: 629, column: 7, scope: !2576)
!2584 = !DILocation(line: 631, column: 17, scope: !2576)
!2585 = !DILocation(line: 631, column: 26, scope: !2576)
!2586 = !DILocation(line: 631, column: 20, scope: !2576)
!2587 = !DILocation(line: 631, column: 4, scope: !2576)
!2588 = !DILocation(line: 631, column: 12, scope: !2576)
!2589 = !DILocation(line: 631, column: 14, scope: !2576)
!2590 = !DILocation(line: 632, column: 17, scope: !2576)
!2591 = !DILocation(line: 632, column: 26, scope: !2576)
!2592 = !DILocation(line: 632, column: 20, scope: !2576)
!2593 = !DILocation(line: 632, column: 4, scope: !2576)
!2594 = !DILocation(line: 632, column: 12, scope: !2576)
!2595 = !DILocation(line: 632, column: 14, scope: !2576)
!2596 = !DILocation(line: 633, column: 17, scope: !2576)
!2597 = !DILocation(line: 633, column: 26, scope: !2576)
!2598 = !DILocation(line: 633, column: 20, scope: !2576)
!2599 = !DILocation(line: 633, column: 4, scope: !2576)
!2600 = !DILocation(line: 633, column: 12, scope: !2576)
!2601 = !DILocation(line: 633, column: 14, scope: !2576)
!2602 = !DILocation(line: 634, column: 8, scope: !2603)
!2603 = distinct !DILexicalBlock(scope: !2576, file: !1, line: 634, column: 8)
!2604 = !DILocation(line: 634, column: 16, scope: !2603)
!2605 = !DILocation(line: 634, column: 8, scope: !2576)
!2606 = !DILocation(line: 634, column: 37, scope: !2603)
!2607 = !DILocation(line: 634, column: 46, scope: !2603)
!2608 = !DILocation(line: 634, column: 40, scope: !2603)
!2609 = !DILocation(line: 634, column: 24, scope: !2603)
!2610 = !DILocation(line: 634, column: 32, scope: !2603)
!2611 = !DILocation(line: 634, column: 34, scope: !2603)
!2612 = !DILocation(line: 635, column: 6, scope: !2576)
!2613 = distinct !{!2613, !2573, !2614}
!2614 = !DILocation(line: 636, column: 3, scope: !2560)
!2615 = !DILocation(line: 637, column: 7, scope: !2616)
!2616 = distinct !DILexicalBlock(scope: !2560, file: !1, line: 637, column: 7)
!2617 = !DILocation(line: 637, column: 10, scope: !2616)
!2618 = !DILocation(line: 637, column: 7, scope: !2560)
!2619 = !DILocation(line: 638, column: 17, scope: !2620)
!2620 = distinct !DILexicalBlock(scope: !2616, file: !1, line: 637, column: 19)
!2621 = !DILocation(line: 638, column: 4, scope: !2620)
!2622 = !DILocation(line: 638, column: 12, scope: !2620)
!2623 = !DILocation(line: 638, column: 14, scope: !2620)
!2624 = !DILocation(line: 639, column: 17, scope: !2620)
!2625 = !DILocation(line: 639, column: 4, scope: !2620)
!2626 = !DILocation(line: 639, column: 12, scope: !2620)
!2627 = !DILocation(line: 639, column: 14, scope: !2620)
!2628 = !DILocation(line: 640, column: 17, scope: !2620)
!2629 = !DILocation(line: 640, column: 4, scope: !2620)
!2630 = !DILocation(line: 640, column: 12, scope: !2620)
!2631 = !DILocation(line: 640, column: 14, scope: !2620)
!2632 = !DILocation(line: 641, column: 8, scope: !2633)
!2633 = distinct !DILexicalBlock(scope: !2620, file: !1, line: 641, column: 8)
!2634 = !DILocation(line: 641, column: 16, scope: !2633)
!2635 = !DILocation(line: 641, column: 8, scope: !2620)
!2636 = !DILocation(line: 641, column: 37, scope: !2633)
!2637 = !DILocation(line: 641, column: 24, scope: !2633)
!2638 = !DILocation(line: 641, column: 32, scope: !2633)
!2639 = !DILocation(line: 641, column: 34, scope: !2633)
!2640 = !DILocation(line: 642, column: 3, scope: !2620)
!2641 = !DILocation(line: 643, column: 2, scope: !2560)
!2642 = !DILocation(line: 645, column: 17, scope: !2556)
!2643 = !DILocation(line: 645, column: 23, scope: !2556)
!2644 = !DILocation(line: 645, column: 27, scope: !2556)
!2645 = !DILocation(line: 645, column: 3, scope: !2556)
!2646 = !DILocation(line: 647, column: 6, scope: !2647)
!2647 = distinct !DILexicalBlock(scope: !2381, file: !1, line: 647, column: 6)
!2648 = !DILocation(line: 647, column: 14, scope: !2647)
!2649 = !DILocation(line: 647, column: 20, scope: !2647)
!2650 = !DILocation(line: 647, column: 6, scope: !2381)
!2651 = !DILocation(line: 647, column: 25, scope: !2647)
!2652 = !DILocation(line: 647, column: 33, scope: !2647)
!2653 = !DILocation(line: 647, column: 35, scope: !2647)
!2654 = !DILocation(line: 649, column: 6, scope: !2655)
!2655 = distinct !DILexicalBlock(scope: !2381, file: !1, line: 649, column: 6)
!2656 = !DILocation(line: 649, column: 15, scope: !2655)
!2657 = !DILocation(line: 649, column: 6, scope: !2381)
!2658 = !DILocation(line: 651, column: 16, scope: !2659)
!2659 = distinct !DILexicalBlock(scope: !2655, file: !1, line: 649, column: 23)
!2660 = !DILocation(line: 651, column: 3, scope: !2659)
!2661 = !DILocation(line: 651, column: 11, scope: !2659)
!2662 = !DILocation(line: 651, column: 13, scope: !2659)
!2663 = !DILocation(line: 652, column: 16, scope: !2659)
!2664 = !DILocation(line: 652, column: 3, scope: !2659)
!2665 = !DILocation(line: 652, column: 11, scope: !2659)
!2666 = !DILocation(line: 652, column: 13, scope: !2659)
!2667 = !DILocation(line: 653, column: 16, scope: !2659)
!2668 = !DILocation(line: 653, column: 3, scope: !2659)
!2669 = !DILocation(line: 653, column: 11, scope: !2659)
!2670 = !DILocation(line: 653, column: 13, scope: !2659)
!2671 = !DILocation(line: 654, column: 16, scope: !2659)
!2672 = !DILocation(line: 654, column: 3, scope: !2659)
!2673 = !DILocation(line: 654, column: 11, scope: !2659)
!2674 = !DILocation(line: 654, column: 13, scope: !2659)
!2675 = !DILocation(line: 655, column: 2, scope: !2659)
!2676 = !DILocation(line: 656, column: 1, scope: !2381)
!2677 = distinct !DISubprogram(name: "ibuf_get_color", scope: !1, file: !1, line: 74, type: !2678, scopeLine: 75, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1638)
!2678 = !DISubroutineType(types: !2679)
!2679 = !{null, !52, !40, !25, !25}
!2680 = !DILocalVariable(name: "col", arg: 1, scope: !2677, file: !1, line: 74, type: !52)
!2681 = !DILocation(line: 74, column: 34, scope: !2677)
!2682 = !DILocalVariable(name: "ibuf", arg: 2, scope: !2677, file: !1, line: 74, type: !40)
!2683 = !DILocation(line: 74, column: 56, scope: !2677)
!2684 = !DILocalVariable(name: "x", arg: 3, scope: !2677, file: !1, line: 74, type: !25)
!2685 = !DILocation(line: 74, column: 66, scope: !2677)
!2686 = !DILocalVariable(name: "y", arg: 4, scope: !2677, file: !1, line: 74, type: !25)
!2687 = !DILocation(line: 74, column: 73, scope: !2677)
!2688 = !DILocalVariable(name: "ofs", scope: !2677, file: !1, line: 76, type: !25)
!2689 = !DILocation(line: 76, column: 6, scope: !2677)
!2690 = !DILocation(line: 76, column: 12, scope: !2677)
!2691 = !DILocation(line: 76, column: 16, scope: !2677)
!2692 = !DILocation(line: 76, column: 22, scope: !2677)
!2693 = !DILocation(line: 76, column: 14, scope: !2677)
!2694 = !DILocation(line: 76, column: 26, scope: !2677)
!2695 = !DILocation(line: 76, column: 24, scope: !2677)
!2696 = !DILocation(line: 78, column: 6, scope: !2697)
!2697 = distinct !DILexicalBlock(scope: !2677, file: !1, line: 78, column: 6)
!2698 = !DILocation(line: 78, column: 12, scope: !2697)
!2699 = !DILocation(line: 78, column: 6, scope: !2677)
!2700 = !DILocation(line: 79, column: 7, scope: !2701)
!2701 = distinct !DILexicalBlock(scope: !2702, file: !1, line: 79, column: 7)
!2702 = distinct !DILexicalBlock(scope: !2697, file: !1, line: 78, column: 24)
!2703 = !DILocation(line: 79, column: 13, scope: !2701)
!2704 = !DILocation(line: 79, column: 21, scope: !2701)
!2705 = !DILocation(line: 79, column: 7, scope: !2702)
!2706 = !DILocalVariable(name: "fp", scope: !2707, file: !1, line: 80, type: !1621)
!2707 = distinct !DILexicalBlock(scope: !2701, file: !1, line: 79, column: 26)
!2708 = !DILocation(line: 80, column: 17, scope: !2707)
!2709 = !DILocation(line: 80, column: 21, scope: !2707)
!2710 = !DILocation(line: 80, column: 27, scope: !2707)
!2711 = !DILocation(line: 80, column: 42, scope: !2707)
!2712 = !DILocation(line: 80, column: 41, scope: !2707)
!2713 = !DILocation(line: 80, column: 38, scope: !2707)
!2714 = !DILocation(line: 81, column: 15, scope: !2707)
!2715 = !DILocation(line: 81, column: 20, scope: !2707)
!2716 = !DILocation(line: 81, column: 4, scope: !2707)
!2717 = !DILocation(line: 82, column: 3, scope: !2707)
!2718 = !DILocation(line: 83, column: 12, scope: !2719)
!2719 = distinct !DILexicalBlock(scope: !2701, file: !1, line: 83, column: 12)
!2720 = !DILocation(line: 83, column: 18, scope: !2719)
!2721 = !DILocation(line: 83, column: 26, scope: !2719)
!2722 = !DILocation(line: 83, column: 12, scope: !2701)
!2723 = !DILocalVariable(name: "fp", scope: !2724, file: !1, line: 84, type: !1621)
!2724 = distinct !DILexicalBlock(scope: !2719, file: !1, line: 83, column: 31)
!2725 = !DILocation(line: 84, column: 17, scope: !2724)
!2726 = !DILocation(line: 84, column: 21, scope: !2724)
!2727 = !DILocation(line: 84, column: 27, scope: !2724)
!2728 = !DILocation(line: 84, column: 42, scope: !2724)
!2729 = !DILocation(line: 84, column: 41, scope: !2724)
!2730 = !DILocation(line: 84, column: 38, scope: !2724)
!2731 = !DILocation(line: 85, column: 15, scope: !2724)
!2732 = !DILocation(line: 85, column: 20, scope: !2724)
!2733 = !DILocation(line: 85, column: 4, scope: !2724)
!2734 = !DILocation(line: 86, column: 4, scope: !2724)
!2735 = !DILocation(line: 86, column: 10, scope: !2724)
!2736 = !DILocation(line: 87, column: 3, scope: !2724)
!2737 = !DILocalVariable(name: "fp", scope: !2738, file: !1, line: 89, type: !1621)
!2738 = distinct !DILexicalBlock(scope: !2719, file: !1, line: 88, column: 8)
!2739 = !DILocation(line: 89, column: 17, scope: !2738)
!2740 = !DILocation(line: 89, column: 21, scope: !2738)
!2741 = !DILocation(line: 89, column: 27, scope: !2738)
!2742 = !DILocation(line: 89, column: 40, scope: !2738)
!2743 = !DILocation(line: 89, column: 38, scope: !2738)
!2744 = !DILocation(line: 90, column: 37, scope: !2738)
!2745 = !DILocation(line: 90, column: 36, scope: !2738)
!2746 = !DILocation(line: 90, column: 28, scope: !2738)
!2747 = !DILocation(line: 90, column: 34, scope: !2738)
!2748 = !DILocation(line: 90, column: 20, scope: !2738)
!2749 = !DILocation(line: 90, column: 26, scope: !2738)
!2750 = !DILocation(line: 90, column: 12, scope: !2738)
!2751 = !DILocation(line: 90, column: 18, scope: !2738)
!2752 = !DILocation(line: 90, column: 4, scope: !2738)
!2753 = !DILocation(line: 90, column: 10, scope: !2738)
!2754 = !DILocation(line: 92, column: 2, scope: !2702)
!2755 = !DILocalVariable(name: "rect", scope: !2756, file: !1, line: 94, type: !2757)
!2756 = distinct !DILexicalBlock(scope: !2697, file: !1, line: 93, column: 7)
!2757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2758, size: 64)
!2758 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !28)
!2759 = !DILocation(line: 94, column: 15, scope: !2756)
!2760 = !DILocation(line: 94, column: 32, scope: !2756)
!2761 = !DILocation(line: 94, column: 38, scope: !2756)
!2762 = !DILocation(line: 94, column: 44, scope: !2756)
!2763 = !DILocation(line: 94, column: 42, scope: !2756)
!2764 = !DILocation(line: 94, column: 22, scope: !2756)
!2765 = !DILocation(line: 96, column: 20, scope: !2756)
!2766 = !DILocation(line: 96, column: 13, scope: !2756)
!2767 = !DILocation(line: 96, column: 28, scope: !2756)
!2768 = !DILocation(line: 96, column: 3, scope: !2756)
!2769 = !DILocation(line: 96, column: 10, scope: !2756)
!2770 = !DILocation(line: 97, column: 20, scope: !2756)
!2771 = !DILocation(line: 97, column: 13, scope: !2756)
!2772 = !DILocation(line: 97, column: 28, scope: !2756)
!2773 = !DILocation(line: 97, column: 3, scope: !2756)
!2774 = !DILocation(line: 97, column: 10, scope: !2756)
!2775 = !DILocation(line: 98, column: 20, scope: !2756)
!2776 = !DILocation(line: 98, column: 13, scope: !2756)
!2777 = !DILocation(line: 98, column: 28, scope: !2756)
!2778 = !DILocation(line: 98, column: 3, scope: !2756)
!2779 = !DILocation(line: 98, column: 10, scope: !2756)
!2780 = !DILocation(line: 99, column: 20, scope: !2756)
!2781 = !DILocation(line: 99, column: 13, scope: !2756)
!2782 = !DILocation(line: 99, column: 28, scope: !2756)
!2783 = !DILocation(line: 99, column: 3, scope: !2756)
!2784 = !DILocation(line: 99, column: 10, scope: !2756)
!2785 = !DILocation(line: 102, column: 13, scope: !2756)
!2786 = !DILocation(line: 102, column: 3, scope: !2756)
!2787 = !DILocation(line: 102, column: 10, scope: !2756)
!2788 = !DILocation(line: 103, column: 13, scope: !2756)
!2789 = !DILocation(line: 103, column: 3, scope: !2756)
!2790 = !DILocation(line: 103, column: 10, scope: !2756)
!2791 = !DILocation(line: 104, column: 13, scope: !2756)
!2792 = !DILocation(line: 104, column: 3, scope: !2756)
!2793 = !DILocation(line: 104, column: 10, scope: !2756)
!2794 = !DILocation(line: 106, column: 1, scope: !2677)
!2795 = distinct !DISubprogram(name: "max_fff", scope: !2796, file: !2796, line: 224, type: !2797, scopeLine: 225, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1638)
!2796 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_base_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2797 = !DISubroutineType(types: !2798)
!2798 = !{!26, !26, !26, !26}
!2799 = !DILocalVariable(name: "a", arg: 1, scope: !2795, file: !2796, line: 224, type: !26)
!2800 = !DILocation(line: 224, column: 29, scope: !2795)
!2801 = !DILocalVariable(name: "b", arg: 2, scope: !2795, file: !2796, line: 224, type: !26)
!2802 = !DILocation(line: 224, column: 38, scope: !2795)
!2803 = !DILocalVariable(name: "c", arg: 3, scope: !2795, file: !2796, line: 224, type: !26)
!2804 = !DILocation(line: 224, column: 47, scope: !2795)
!2805 = !DILocation(line: 226, column: 23, scope: !2795)
!2806 = !DILocation(line: 226, column: 26, scope: !2795)
!2807 = !DILocation(line: 226, column: 16, scope: !2795)
!2808 = !DILocation(line: 226, column: 30, scope: !2795)
!2809 = !DILocation(line: 226, column: 9, scope: !2795)
!2810 = !DILocation(line: 226, column: 2, scope: !2795)
!2811 = distinct !DISubprogram(name: "imagewraposa", scope: !1, file: !1, line: 1343, type: !2812, scopeLine: 1344, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1638)
!2812 = !DISubroutineType(types: !2813)
!2813 = !{!25, !142, !1619, !34, !1621, !1621, !1621, !1623, !1635}
!2814 = !DILocalVariable(name: "tex", arg: 1, scope: !2811, file: !1, line: 1343, type: !142)
!2815 = !DILocation(line: 1343, column: 23, scope: !2811)
!2816 = !DILocalVariable(name: "ima", arg: 2, scope: !2811, file: !1, line: 1343, type: !1619)
!2817 = !DILocation(line: 1343, column: 35, scope: !2811)
!2818 = !DILocalVariable(name: "ibuf", arg: 3, scope: !2811, file: !1, line: 1343, type: !34)
!2819 = !DILocation(line: 1343, column: 47, scope: !2811)
!2820 = !DILocalVariable(name: "texvec", arg: 4, scope: !2811, file: !1, line: 1343, type: !1621)
!2821 = !DILocation(line: 1343, column: 65, scope: !2811)
!2822 = !DILocalVariable(name: "DXT", arg: 5, scope: !2811, file: !1, line: 1343, type: !1621)
!2823 = !DILocation(line: 1343, column: 88, scope: !2811)
!2824 = !DILocalVariable(name: "DYT", arg: 6, scope: !2811, file: !1, line: 1343, type: !1621)
!2825 = !DILocation(line: 1343, column: 108, scope: !2811)
!2826 = !DILocalVariable(name: "texres", arg: 7, scope: !2811, file: !1, line: 1343, type: !1623)
!2827 = !DILocation(line: 1343, column: 127, scope: !2811)
!2828 = !DILocalVariable(name: "pool", arg: 8, scope: !2811, file: !1, line: 1343, type: !1635)
!2829 = !DILocation(line: 1343, column: 153, scope: !2811)
!2830 = !DILocalVariable(name: "texr", scope: !2811, file: !1, line: 1345, type: !1624)
!2831 = !DILocation(line: 1345, column: 12, scope: !2811)
!2832 = !DILocalVariable(name: "fx", scope: !2811, file: !1, line: 1346, type: !26)
!2833 = !DILocation(line: 1346, column: 8, scope: !2811)
!2834 = !DILocalVariable(name: "fy", scope: !2811, file: !1, line: 1346, type: !26)
!2835 = !DILocation(line: 1346, column: 12, scope: !2811)
!2836 = !DILocalVariable(name: "minx", scope: !2811, file: !1, line: 1346, type: !26)
!2837 = !DILocation(line: 1346, column: 16, scope: !2811)
!2838 = !DILocalVariable(name: "maxx", scope: !2811, file: !1, line: 1346, type: !26)
!2839 = !DILocation(line: 1346, column: 22, scope: !2811)
!2840 = !DILocalVariable(name: "miny", scope: !2811, file: !1, line: 1346, type: !26)
!2841 = !DILocation(line: 1346, column: 28, scope: !2811)
!2842 = !DILocalVariable(name: "maxy", scope: !2811, file: !1, line: 1346, type: !26)
!2843 = !DILocation(line: 1346, column: 34, scope: !2811)
!2844 = !DILocalVariable(name: "dx", scope: !2811, file: !1, line: 1346, type: !26)
!2845 = !DILocation(line: 1346, column: 40, scope: !2811)
!2846 = !DILocalVariable(name: "dy", scope: !2811, file: !1, line: 1346, type: !26)
!2847 = !DILocation(line: 1346, column: 44, scope: !2811)
!2848 = !DILocalVariable(name: "dxt", scope: !2811, file: !1, line: 1346, type: !125)
!2849 = !DILocation(line: 1346, column: 48, scope: !2811)
!2850 = !DILocalVariable(name: "dyt", scope: !2811, file: !1, line: 1346, type: !125)
!2851 = !DILocation(line: 1346, column: 56, scope: !2811)
!2852 = !DILocalVariable(name: "maxd", scope: !2811, file: !1, line: 1347, type: !26)
!2853 = !DILocation(line: 1347, column: 8, scope: !2811)
!2854 = !DILocalVariable(name: "pixsize", scope: !2811, file: !1, line: 1347, type: !26)
!2855 = !DILocation(line: 1347, column: 14, scope: !2811)
!2856 = !DILocalVariable(name: "val1", scope: !2811, file: !1, line: 1347, type: !26)
!2857 = !DILocation(line: 1347, column: 23, scope: !2811)
!2858 = !DILocalVariable(name: "val2", scope: !2811, file: !1, line: 1347, type: !26)
!2859 = !DILocation(line: 1347, column: 29, scope: !2811)
!2860 = !DILocalVariable(name: "val3", scope: !2811, file: !1, line: 1347, type: !26)
!2861 = !DILocation(line: 1347, column: 35, scope: !2811)
!2862 = !DILocalVariable(name: "curmap", scope: !2811, file: !1, line: 1348, type: !25)
!2863 = !DILocation(line: 1348, column: 6, scope: !2811)
!2864 = !DILocalVariable(name: "retval", scope: !2811, file: !1, line: 1348, type: !25)
!2865 = !DILocation(line: 1348, column: 14, scope: !2811)
!2866 = !DILocalVariable(name: "imaprepeat", scope: !2811, file: !1, line: 1348, type: !25)
!2867 = !DILocation(line: 1348, column: 22, scope: !2811)
!2868 = !DILocalVariable(name: "imapextend", scope: !2811, file: !1, line: 1348, type: !25)
!2869 = !DILocation(line: 1348, column: 34, scope: !2811)
!2870 = !DILocation(line: 1352, column: 13, scope: !2811)
!2871 = !DILocation(line: 1352, column: 18, scope: !2811)
!2872 = !DILocation(line: 1352, column: 2, scope: !2811)
!2873 = !DILocation(line: 1353, column: 13, scope: !2811)
!2874 = !DILocation(line: 1353, column: 18, scope: !2811)
!2875 = !DILocation(line: 1353, column: 2, scope: !2811)
!2876 = !DILocation(line: 1356, column: 6, scope: !2877)
!2877 = distinct !DILexicalBlock(scope: !2811, file: !1, line: 1356, column: 6)
!2878 = !DILocation(line: 1356, column: 11, scope: !2877)
!2879 = !DILocation(line: 1356, column: 21, scope: !2877)
!2880 = !DILocation(line: 1356, column: 6, scope: !2811)
!2881 = !DILocation(line: 1357, column: 29, scope: !2877)
!2882 = !DILocation(line: 1357, column: 34, scope: !2877)
!2883 = !DILocation(line: 1357, column: 39, scope: !2877)
!2884 = !DILocation(line: 1357, column: 45, scope: !2877)
!2885 = !DILocation(line: 1357, column: 53, scope: !2877)
!2886 = !DILocation(line: 1357, column: 58, scope: !2877)
!2887 = !DILocation(line: 1357, column: 63, scope: !2877)
!2888 = !DILocation(line: 1357, column: 71, scope: !2877)
!2889 = !DILocation(line: 1357, column: 10, scope: !2877)
!2890 = !DILocation(line: 1357, column: 3, scope: !2877)
!2891 = !DILocation(line: 1359, column: 51, scope: !2811)
!2892 = !DILocation(line: 1359, column: 59, scope: !2811)
!2893 = !DILocation(line: 1359, column: 61, scope: !2811)
!2894 = !DILocation(line: 1359, column: 39, scope: !2811)
!2895 = !DILocation(line: 1359, column: 47, scope: !2811)
!2896 = !DILocation(line: 1359, column: 49, scope: !2811)
!2897 = !DILocation(line: 1359, column: 27, scope: !2811)
!2898 = !DILocation(line: 1359, column: 35, scope: !2811)
!2899 = !DILocation(line: 1359, column: 37, scope: !2811)
!2900 = !DILocation(line: 1359, column: 15, scope: !2811)
!2901 = !DILocation(line: 1359, column: 23, scope: !2811)
!2902 = !DILocation(line: 1359, column: 25, scope: !2811)
!2903 = !DILocation(line: 1359, column: 2, scope: !2811)
!2904 = !DILocation(line: 1359, column: 10, scope: !2811)
!2905 = !DILocation(line: 1359, column: 13, scope: !2811)
!2906 = !DILocation(line: 1362, column: 11, scope: !2811)
!2907 = !DILocation(line: 1362, column: 19, scope: !2811)
!2908 = !DILocation(line: 1362, column: 9, scope: !2811)
!2909 = !DILocation(line: 1365, column: 6, scope: !2910)
!2910 = distinct !DILexicalBlock(scope: !2811, file: !1, line: 1365, column: 6)
!2911 = !DILocation(line: 1365, column: 10, scope: !2910)
!2912 = !DILocation(line: 1365, column: 17, scope: !2910)
!2913 = !DILocation(line: 1365, column: 20, scope: !2910)
!2914 = !DILocation(line: 1365, column: 23, scope: !2910)
!2915 = !DILocation(line: 1365, column: 6, scope: !2811)
!2916 = !DILocation(line: 1366, column: 10, scope: !2910)
!2917 = !DILocation(line: 1366, column: 3, scope: !2910)
!2918 = !DILocation(line: 1367, column: 6, scope: !2919)
!2919 = distinct !DILexicalBlock(scope: !2811, file: !1, line: 1367, column: 6)
!2920 = !DILocation(line: 1367, column: 6, scope: !2811)
!2921 = !DILocation(line: 1370, column: 12, scope: !2922)
!2922 = distinct !DILexicalBlock(scope: !2923, file: !1, line: 1370, column: 7)
!2923 = distinct !DILexicalBlock(scope: !2919, file: !1, line: 1367, column: 11)
!2924 = !DILocation(line: 1370, column: 20, scope: !2922)
!2925 = !DILocation(line: 1370, column: 39, scope: !2922)
!2926 = !DILocation(line: 1370, column: 69, scope: !2922)
!2927 = !DILocation(line: 1370, column: 43, scope: !2922)
!2928 = !DILocation(line: 1370, column: 7, scope: !2923)
!2929 = !DILocation(line: 1371, column: 11, scope: !2922)
!2930 = !DILocation(line: 1371, column: 4, scope: !2922)
!2931 = !DILocation(line: 1373, column: 38, scope: !2923)
!2932 = !DILocation(line: 1373, column: 44, scope: !2923)
!2933 = !DILocation(line: 1373, column: 49, scope: !2923)
!2934 = !DILocation(line: 1373, column: 56, scope: !2923)
!2935 = !DILocation(line: 1373, column: 10, scope: !2923)
!2936 = !DILocation(line: 1373, column: 8, scope: !2923)
!2937 = !DILocation(line: 1375, column: 3, scope: !2923)
!2938 = !DILocation(line: 1375, column: 8, scope: !2923)
!2939 = !DILocation(line: 1375, column: 12, scope: !2923)
!2940 = !DILocation(line: 1376, column: 2, scope: !2923)
!2941 = !DILocation(line: 1377, column: 6, scope: !2942)
!2942 = distinct !DILexicalBlock(scope: !2811, file: !1, line: 1377, column: 6)
!2943 = !DILocation(line: 1377, column: 10, scope: !2942)
!2944 = !DILocation(line: 1377, column: 17, scope: !2942)
!2945 = !DILocation(line: 1377, column: 21, scope: !2942)
!2946 = !DILocation(line: 1377, column: 27, scope: !2942)
!2947 = !DILocation(line: 1377, column: 31, scope: !2942)
!2948 = !DILocation(line: 1377, column: 38, scope: !2942)
!2949 = !DILocation(line: 1377, column: 41, scope: !2942)
!2950 = !DILocation(line: 1377, column: 47, scope: !2942)
!2951 = !DILocation(line: 1377, column: 57, scope: !2942)
!2952 = !DILocation(line: 1377, column: 6, scope: !2811)
!2953 = !DILocation(line: 1378, column: 7, scope: !2954)
!2954 = distinct !DILexicalBlock(scope: !2955, file: !1, line: 1378, column: 7)
!2955 = distinct !DILexicalBlock(scope: !2942, file: !1, line: 1377, column: 66)
!2956 = !DILocation(line: 1378, column: 7, scope: !2955)
!2957 = !DILocation(line: 1379, column: 32, scope: !2954)
!2958 = !DILocation(line: 1379, column: 37, scope: !2954)
!2959 = !DILocation(line: 1379, column: 43, scope: !2954)
!2960 = !DILocation(line: 1379, column: 4, scope: !2954)
!2961 = !DILocation(line: 1380, column: 10, scope: !2955)
!2962 = !DILocation(line: 1380, column: 3, scope: !2955)
!2963 = !DILocation(line: 1384, column: 20, scope: !2811)
!2964 = !DILocation(line: 1384, column: 25, scope: !2811)
!2965 = !DILocation(line: 1384, column: 2, scope: !2811)
!2966 = !DILocation(line: 1386, column: 6, scope: !2967)
!2967 = distinct !DILexicalBlock(scope: !2811, file: !1, line: 1386, column: 6)
!2968 = !DILocation(line: 1386, column: 6, scope: !2811)
!2969 = !DILocation(line: 1387, column: 8, scope: !2970)
!2970 = distinct !DILexicalBlock(scope: !2971, file: !1, line: 1387, column: 7)
!2971 = distinct !DILexicalBlock(scope: !2967, file: !1, line: 1386, column: 11)
!2972 = !DILocation(line: 1387, column: 13, scope: !2970)
!2973 = !DILocation(line: 1387, column: 21, scope: !2970)
!2974 = !DILocation(line: 1387, column: 37, scope: !2970)
!2975 = !DILocation(line: 1387, column: 41, scope: !2970)
!2976 = !DILocation(line: 1387, column: 46, scope: !2970)
!2977 = !DILocation(line: 1387, column: 51, scope: !2970)
!2978 = !DILocation(line: 1387, column: 71, scope: !2970)
!2979 = !DILocation(line: 1387, column: 7, scope: !2971)
!2980 = !DILocation(line: 1388, column: 9, scope: !2981)
!2981 = distinct !DILexicalBlock(scope: !2982, file: !1, line: 1388, column: 8)
!2982 = distinct !DILexicalBlock(scope: !2970, file: !1, line: 1387, column: 77)
!2983 = !DILocation(line: 1388, column: 14, scope: !2981)
!2984 = !DILocation(line: 1388, column: 22, scope: !2981)
!2985 = !DILocation(line: 1388, column: 39, scope: !2981)
!2986 = !DILocation(line: 1388, column: 8, scope: !2982)
!2987 = !DILocation(line: 1389, column: 5, scope: !2988)
!2988 = distinct !DILexicalBlock(scope: !2981, file: !1, line: 1388, column: 45)
!2989 = !DILocation(line: 1389, column: 13, scope: !2988)
!2990 = !DILocation(line: 1389, column: 20, scope: !2988)
!2991 = !DILocation(line: 1390, column: 4, scope: !2988)
!2992 = !DILocation(line: 1391, column: 3, scope: !2982)
!2993 = !DILocation(line: 1392, column: 2, scope: !2971)
!2994 = !DILocation(line: 1394, column: 15, scope: !2811)
!2995 = !DILocation(line: 1394, column: 23, scope: !2811)
!2996 = !DILocation(line: 1394, column: 7, scope: !2811)
!2997 = !DILocation(line: 1394, column: 13, scope: !2811)
!2998 = !DILocation(line: 1396, column: 6, scope: !2999)
!2999 = distinct !DILexicalBlock(scope: !2811, file: !1, line: 1396, column: 6)
!3000 = !DILocation(line: 1396, column: 11, scope: !2999)
!3001 = !DILocation(line: 1396, column: 19, scope: !2999)
!3002 = !DILocation(line: 1396, column: 6, scope: !2811)
!3003 = !DILocation(line: 1397, column: 7, scope: !3004)
!3004 = distinct !DILexicalBlock(scope: !2999, file: !1, line: 1396, column: 33)
!3005 = !DILocation(line: 1397, column: 5, scope: !3004)
!3006 = !DILocation(line: 1398, column: 7, scope: !3004)
!3007 = !DILocation(line: 1398, column: 5, scope: !3004)
!3008 = !DILocation(line: 1399, column: 2, scope: !3004)
!3009 = !DILocation(line: 1401, column: 7, scope: !3010)
!3010 = distinct !DILexicalBlock(scope: !2999, file: !1, line: 1400, column: 7)
!3011 = !DILocation(line: 1401, column: 5, scope: !3010)
!3012 = !DILocation(line: 1402, column: 7, scope: !3010)
!3013 = !DILocation(line: 1402, column: 5, scope: !3010)
!3014 = !DILocation(line: 1405, column: 6, scope: !3015)
!3015 = distinct !DILexicalBlock(scope: !2811, file: !1, line: 1405, column: 6)
!3016 = !DILocation(line: 1405, column: 12, scope: !3015)
!3017 = !DILocation(line: 1405, column: 18, scope: !3015)
!3018 = !DILocation(line: 1405, column: 6, scope: !2811)
!3019 = !DILocation(line: 1406, column: 11, scope: !3020)
!3020 = distinct !DILexicalBlock(scope: !3021, file: !1, line: 1406, column: 7)
!3021 = distinct !DILexicalBlock(scope: !3015, file: !1, line: 1405, column: 31)
!3022 = !DILocation(line: 1406, column: 16, scope: !3020)
!3023 = !DILocation(line: 1406, column: 7, scope: !3021)
!3024 = !DILocation(line: 1407, column: 10, scope: !3025)
!3025 = distinct !DILexicalBlock(scope: !3026, file: !1, line: 1407, column: 8)
!3026 = distinct !DILexicalBlock(scope: !3020, file: !1, line: 1406, column: 28)
!3027 = !DILocation(line: 1407, column: 8, scope: !3025)
!3028 = !DILocation(line: 1407, column: 15, scope: !3025)
!3029 = !DILocation(line: 1407, column: 8, scope: !3026)
!3030 = !DILocation(line: 1410, column: 4, scope: !3031)
!3031 = distinct !DILexicalBlock(scope: !3025, file: !1, line: 1407, column: 30)
!3032 = !DILocation(line: 1412, column: 24, scope: !3033)
!3033 = distinct !DILexicalBlock(scope: !3025, file: !1, line: 1411, column: 9)
!3034 = !DILocation(line: 1412, column: 30, scope: !3033)
!3035 = !DILocation(line: 1412, column: 17, scope: !3033)
!3036 = !DILocation(line: 1412, column: 14, scope: !3033)
!3037 = !DILocation(line: 1412, column: 7, scope: !3033)
!3038 = !DILocation(line: 1414, column: 3, scope: !3026)
!3039 = !DILocation(line: 1415, column: 2, scope: !3021)
!3040 = !DILocation(line: 1419, column: 17, scope: !2811)
!3041 = !DILocation(line: 1419, column: 25, scope: !2811)
!3042 = !DILocation(line: 1419, column: 33, scope: !2811)
!3043 = !DILocation(line: 1419, column: 42, scope: !2811)
!3044 = !DILocation(line: 1419, column: 40, scope: !2811)
!3045 = !DILocation(line: 1419, column: 9, scope: !2811)
!3046 = !DILocation(line: 1419, column: 7, scope: !2811)
!3047 = !DILocation(line: 1420, column: 17, scope: !2811)
!3048 = !DILocation(line: 1420, column: 25, scope: !2811)
!3049 = !DILocation(line: 1420, column: 33, scope: !2811)
!3050 = !DILocation(line: 1420, column: 42, scope: !2811)
!3051 = !DILocation(line: 1420, column: 40, scope: !2811)
!3052 = !DILocation(line: 1420, column: 9, scope: !2811)
!3053 = !DILocation(line: 1420, column: 7, scope: !2811)
!3054 = !DILocation(line: 1421, column: 17, scope: !2811)
!3055 = !DILocation(line: 1421, column: 25, scope: !2811)
!3056 = !DILocation(line: 1421, column: 33, scope: !2811)
!3057 = !DILocation(line: 1421, column: 42, scope: !2811)
!3058 = !DILocation(line: 1421, column: 40, scope: !2811)
!3059 = !DILocation(line: 1421, column: 9, scope: !2811)
!3060 = !DILocation(line: 1421, column: 7, scope: !2811)
!3061 = !DILocation(line: 1422, column: 17, scope: !2811)
!3062 = !DILocation(line: 1422, column: 25, scope: !2811)
!3063 = !DILocation(line: 1422, column: 33, scope: !2811)
!3064 = !DILocation(line: 1422, column: 42, scope: !2811)
!3065 = !DILocation(line: 1422, column: 40, scope: !2811)
!3066 = !DILocation(line: 1422, column: 9, scope: !2811)
!3067 = !DILocation(line: 1422, column: 7, scope: !2811)
!3068 = !DILocation(line: 1425, column: 9, scope: !2811)
!3069 = !DILocation(line: 1425, column: 14, scope: !2811)
!3070 = !DILocation(line: 1425, column: 13, scope: !2811)
!3071 = !DILocation(line: 1425, column: 19, scope: !2811)
!3072 = !DILocation(line: 1425, column: 6, scope: !2811)
!3073 = !DILocation(line: 1426, column: 9, scope: !2811)
!3074 = !DILocation(line: 1426, column: 14, scope: !2811)
!3075 = !DILocation(line: 1426, column: 13, scope: !2811)
!3076 = !DILocation(line: 1426, column: 19, scope: !2811)
!3077 = !DILocation(line: 1426, column: 6, scope: !2811)
!3078 = !DILocation(line: 1428, column: 6, scope: !3079)
!3079 = distinct !DILexicalBlock(scope: !2811, file: !1, line: 1428, column: 6)
!3080 = !DILocation(line: 1428, column: 11, scope: !3079)
!3081 = !DILocation(line: 1428, column: 19, scope: !3079)
!3082 = !DILocation(line: 1428, column: 6, scope: !2811)
!3083 = !DILocalVariable(name: "addval", scope: !3084, file: !1, line: 1430, type: !26)
!3084 = distinct !DILexicalBlock(scope: !3079, file: !1, line: 1428, column: 37)
!3085 = !DILocation(line: 1430, column: 9, scope: !3084)
!3086 = !DILocation(line: 1430, column: 25, scope: !3084)
!3087 = !DILocation(line: 1430, column: 30, scope: !3084)
!3088 = !DILocation(line: 1430, column: 23, scope: !3084)
!3089 = !DILocation(line: 1430, column: 52, scope: !3084)
!3090 = !DILocation(line: 1430, column: 44, scope: !3084)
!3091 = !DILocation(line: 1430, column: 42, scope: !3084)
!3092 = !DILocation(line: 1432, column: 7, scope: !3093)
!3093 = distinct !DILexicalBlock(scope: !3084, file: !1, line: 1432, column: 7)
!3094 = !DILocation(line: 1432, column: 16, scope: !3093)
!3095 = !DILocation(line: 1432, column: 14, scope: !3093)
!3096 = !DILocation(line: 1432, column: 7, scope: !3084)
!3097 = !DILocation(line: 1433, column: 10, scope: !3093)
!3098 = !DILocation(line: 1433, column: 8, scope: !3093)
!3099 = !DILocation(line: 1433, column: 4, scope: !3093)
!3100 = !DILocation(line: 1434, column: 7, scope: !3101)
!3101 = distinct !DILexicalBlock(scope: !3084, file: !1, line: 1434, column: 7)
!3102 = !DILocation(line: 1434, column: 16, scope: !3101)
!3103 = !DILocation(line: 1434, column: 14, scope: !3101)
!3104 = !DILocation(line: 1434, column: 7, scope: !3084)
!3105 = !DILocation(line: 1435, column: 10, scope: !3101)
!3106 = !DILocation(line: 1435, column: 8, scope: !3101)
!3107 = !DILocation(line: 1435, column: 4, scope: !3101)
!3108 = !DILocation(line: 1436, column: 2, scope: !3084)
!3109 = !DILocation(line: 1437, column: 11, scope: !3110)
!3110 = distinct !DILexicalBlock(scope: !3079, file: !1, line: 1437, column: 11)
!3111 = !DILocation(line: 1437, column: 16, scope: !3110)
!3112 = !DILocation(line: 1437, column: 26, scope: !3110)
!3113 = !DILocation(line: 1437, column: 11, scope: !3079)
!3114 = !DILocation(line: 1438, column: 10, scope: !3115)
!3115 = distinct !DILexicalBlock(scope: !3110, file: !1, line: 1437, column: 34)
!3116 = !DILocation(line: 1438, column: 15, scope: !3115)
!3117 = !DILocation(line: 1438, column: 7, scope: !3115)
!3118 = !DILocation(line: 1439, column: 10, scope: !3115)
!3119 = !DILocation(line: 1439, column: 15, scope: !3115)
!3120 = !DILocation(line: 1439, column: 7, scope: !3115)
!3121 = !DILocation(line: 1441, column: 12, scope: !3115)
!3122 = !DILocation(line: 1441, column: 17, scope: !3115)
!3123 = !DILocation(line: 1441, column: 3, scope: !3115)
!3124 = !DILocation(line: 1441, column: 9, scope: !3115)
!3125 = !DILocation(line: 1442, column: 12, scope: !3115)
!3126 = !DILocation(line: 1442, column: 17, scope: !3115)
!3127 = !DILocation(line: 1442, column: 3, scope: !3115)
!3128 = !DILocation(line: 1442, column: 9, scope: !3115)
!3129 = !DILocation(line: 1443, column: 12, scope: !3115)
!3130 = !DILocation(line: 1443, column: 17, scope: !3115)
!3131 = !DILocation(line: 1443, column: 3, scope: !3115)
!3132 = !DILocation(line: 1443, column: 9, scope: !3115)
!3133 = !DILocation(line: 1444, column: 12, scope: !3115)
!3134 = !DILocation(line: 1444, column: 17, scope: !3115)
!3135 = !DILocation(line: 1444, column: 3, scope: !3115)
!3136 = !DILocation(line: 1444, column: 9, scope: !3115)
!3137 = !DILocation(line: 1445, column: 2, scope: !3115)
!3138 = !DILocation(line: 1447, column: 6, scope: !3139)
!3139 = distinct !DILexicalBlock(scope: !2811, file: !1, line: 1447, column: 6)
!3140 = !DILocation(line: 1447, column: 11, scope: !3139)
!3141 = !DILocation(line: 1447, column: 19, scope: !3139)
!3142 = !DILocation(line: 1447, column: 6, scope: !2811)
!3143 = !DILocalVariable(name: "sw_ap", scope: !3144, file: !1, line: 1447, type: !26)
!3144 = distinct !DILexicalBlock(scope: !3139, file: !1, line: 1447, column: 33)
!3145 = !DILocation(line: 1447, column: 33, scope: !3144)
!3146 = !DILocation(line: 1449, column: 6, scope: !3147)
!3147 = distinct !DILexicalBlock(scope: !2811, file: !1, line: 1449, column: 6)
!3148 = !DILocation(line: 1449, column: 10, scope: !3147)
!3149 = !DILocation(line: 1449, column: 6, scope: !2811)
!3150 = !DILocation(line: 1449, column: 22, scope: !3147)
!3151 = !DILocation(line: 1449, column: 18, scope: !3147)
!3152 = !DILocation(line: 1450, column: 11, scope: !3153)
!3153 = distinct !DILexicalBlock(scope: !3147, file: !1, line: 1450, column: 11)
!3154 = !DILocation(line: 1450, column: 15, scope: !3153)
!3155 = !DILocation(line: 1450, column: 11, scope: !3147)
!3156 = !DILocation(line: 1450, column: 30, scope: !3153)
!3157 = !DILocation(line: 1450, column: 26, scope: !3153)
!3158 = !DILocation(line: 1451, column: 6, scope: !3159)
!3159 = distinct !DILexicalBlock(scope: !2811, file: !1, line: 1451, column: 6)
!3160 = !DILocation(line: 1451, column: 10, scope: !3159)
!3161 = !DILocation(line: 1451, column: 6, scope: !2811)
!3162 = !DILocation(line: 1451, column: 22, scope: !3159)
!3163 = !DILocation(line: 1451, column: 18, scope: !3159)
!3164 = !DILocation(line: 1452, column: 11, scope: !3165)
!3165 = distinct !DILexicalBlock(scope: !3159, file: !1, line: 1452, column: 11)
!3166 = !DILocation(line: 1452, column: 15, scope: !3165)
!3167 = !DILocation(line: 1452, column: 11, scope: !3159)
!3168 = !DILocation(line: 1452, column: 30, scope: !3165)
!3169 = !DILocation(line: 1452, column: 26, scope: !3165)
!3170 = !DILocation(line: 1456, column: 15, scope: !2811)
!3171 = !DILocation(line: 1456, column: 20, scope: !2811)
!3172 = !DILocation(line: 1456, column: 26, scope: !2811)
!3173 = !DILocation(line: 1456, column: 12, scope: !2811)
!3174 = !DILocation(line: 1457, column: 15, scope: !2811)
!3175 = !DILocation(line: 1457, column: 20, scope: !2811)
!3176 = !DILocation(line: 1457, column: 26, scope: !2811)
!3177 = !DILocation(line: 1457, column: 12, scope: !2811)
!3178 = !DILocation(line: 1459, column: 6, scope: !3179)
!3179 = distinct !DILexicalBlock(scope: !2811, file: !1, line: 1459, column: 6)
!3180 = !DILocation(line: 1459, column: 11, scope: !3179)
!3181 = !DILocation(line: 1459, column: 18, scope: !3179)
!3182 = !DILocation(line: 1459, column: 6, scope: !2811)
!3183 = !DILocation(line: 1460, column: 7, scope: !3184)
!3184 = distinct !DILexicalBlock(scope: !3185, file: !1, line: 1460, column: 7)
!3185 = distinct !DILexicalBlock(scope: !3179, file: !1, line: 1459, column: 33)
!3186 = !DILocation(line: 1460, column: 12, scope: !3184)
!3187 = !DILocation(line: 1460, column: 17, scope: !3184)
!3188 = !DILocation(line: 1460, column: 7, scope: !3185)
!3189 = !DILocation(line: 1461, column: 14, scope: !3190)
!3190 = distinct !DILexicalBlock(scope: !3184, file: !1, line: 1460, column: 54)
!3191 = !DILocation(line: 1462, column: 14, scope: !3190)
!3192 = !DILocation(line: 1463, column: 3, scope: !3190)
!3193 = !DILocation(line: 1464, column: 2, scope: !3185)
!3194 = !DILocation(line: 1466, column: 6, scope: !3195)
!3195 = distinct !DILexicalBlock(scope: !2811, file: !1, line: 1466, column: 6)
!3196 = !DILocation(line: 1466, column: 11, scope: !3195)
!3197 = !DILocation(line: 1466, column: 18, scope: !3195)
!3198 = !DILocation(line: 1466, column: 6, scope: !2811)
!3199 = !DILocalVariable(name: "xs", scope: !3200, file: !1, line: 1467, type: !25)
!3200 = distinct !DILexicalBlock(scope: !3195, file: !1, line: 1466, column: 34)
!3201 = !DILocation(line: 1467, column: 7, scope: !3200)
!3202 = !DILocalVariable(name: "ys", scope: !3200, file: !1, line: 1467, type: !25)
!3203 = !DILocation(line: 1467, column: 11, scope: !3200)
!3204 = !DILocalVariable(name: "xs1", scope: !3200, file: !1, line: 1467, type: !25)
!3205 = !DILocation(line: 1467, column: 15, scope: !3200)
!3206 = !DILocalVariable(name: "ys1", scope: !3200, file: !1, line: 1467, type: !25)
!3207 = !DILocation(line: 1467, column: 20, scope: !3200)
!3208 = !DILocalVariable(name: "xs2", scope: !3200, file: !1, line: 1467, type: !25)
!3209 = !DILocation(line: 1467, column: 25, scope: !3200)
!3210 = !DILocalVariable(name: "ys2", scope: !3200, file: !1, line: 1467, type: !25)
!3211 = !DILocation(line: 1467, column: 30, scope: !3200)
!3212 = !DILocalVariable(name: "boundary", scope: !3200, file: !1, line: 1467, type: !25)
!3213 = !DILocation(line: 1467, column: 35, scope: !3200)
!3214 = !DILocation(line: 1469, column: 18, scope: !3200)
!3215 = !DILocation(line: 1469, column: 12, scope: !3200)
!3216 = !DILocation(line: 1469, column: 7, scope: !3200)
!3217 = !DILocation(line: 1469, column: 5, scope: !3200)
!3218 = !DILocation(line: 1470, column: 18, scope: !3200)
!3219 = !DILocation(line: 1470, column: 12, scope: !3200)
!3220 = !DILocation(line: 1470, column: 7, scope: !3200)
!3221 = !DILocation(line: 1470, column: 5, scope: !3200)
!3222 = !DILocation(line: 1473, column: 9, scope: !3223)
!3223 = distinct !DILexicalBlock(scope: !3200, file: !1, line: 1473, column: 8)
!3224 = !DILocation(line: 1473, column: 14, scope: !3223)
!3225 = !DILocation(line: 1473, column: 19, scope: !3223)
!3226 = !DILocation(line: 1473, column: 38, scope: !3223)
!3227 = !DILocation(line: 1473, column: 42, scope: !3223)
!3228 = !DILocation(line: 1473, column: 47, scope: !3223)
!3229 = !DILocation(line: 1473, column: 52, scope: !3223)
!3230 = !DILocation(line: 1473, column: 8, scope: !3200)
!3231 = !DILocation(line: 1474, column: 9, scope: !3232)
!3232 = distinct !DILexicalBlock(scope: !3223, file: !1, line: 1473, column: 74)
!3233 = !DILocation(line: 1474, column: 6, scope: !3232)
!3234 = !DILocation(line: 1475, column: 9, scope: !3232)
!3235 = !DILocation(line: 1475, column: 6, scope: !3232)
!3236 = !DILocation(line: 1476, column: 3, scope: !3232)
!3237 = !DILocation(line: 1479, column: 20, scope: !3238)
!3238 = distinct !DILexicalBlock(scope: !3223, file: !1, line: 1477, column: 8)
!3239 = !DILocation(line: 1479, column: 23, scope: !3238)
!3240 = !DILocation(line: 1479, column: 22, scope: !3238)
!3241 = !DILocation(line: 1479, column: 14, scope: !3238)
!3242 = !DILocation(line: 1479, column: 9, scope: !3238)
!3243 = !DILocation(line: 1479, column: 7, scope: !3238)
!3244 = !DILocation(line: 1480, column: 20, scope: !3238)
!3245 = !DILocation(line: 1480, column: 23, scope: !3238)
!3246 = !DILocation(line: 1480, column: 22, scope: !3238)
!3247 = !DILocation(line: 1480, column: 14, scope: !3238)
!3248 = !DILocation(line: 1480, column: 9, scope: !3238)
!3249 = !DILocation(line: 1480, column: 7, scope: !3238)
!3250 = !DILocation(line: 1481, column: 20, scope: !3238)
!3251 = !DILocation(line: 1481, column: 23, scope: !3238)
!3252 = !DILocation(line: 1481, column: 22, scope: !3238)
!3253 = !DILocation(line: 1481, column: 14, scope: !3238)
!3254 = !DILocation(line: 1481, column: 9, scope: !3238)
!3255 = !DILocation(line: 1481, column: 7, scope: !3238)
!3256 = !DILocation(line: 1482, column: 20, scope: !3238)
!3257 = !DILocation(line: 1482, column: 23, scope: !3238)
!3258 = !DILocation(line: 1482, column: 22, scope: !3238)
!3259 = !DILocation(line: 1482, column: 14, scope: !3238)
!3260 = !DILocation(line: 1482, column: 9, scope: !3238)
!3261 = !DILocation(line: 1482, column: 7, scope: !3238)
!3262 = !DILocation(line: 1483, column: 15, scope: !3238)
!3263 = !DILocation(line: 1483, column: 20, scope: !3238)
!3264 = !DILocation(line: 1483, column: 18, scope: !3238)
!3265 = !DILocation(line: 1483, column: 25, scope: !3238)
!3266 = !DILocation(line: 1483, column: 29, scope: !3238)
!3267 = !DILocation(line: 1483, column: 34, scope: !3238)
!3268 = !DILocation(line: 1483, column: 32, scope: !3238)
!3269 = !DILocation(line: 1483, column: 12, scope: !3238)
!3270 = !DILocation(line: 1485, column: 8, scope: !3271)
!3271 = distinct !DILexicalBlock(scope: !3238, file: !1, line: 1485, column: 8)
!3272 = !DILocation(line: 1485, column: 16, scope: !3271)
!3273 = !DILocation(line: 1485, column: 8, scope: !3238)
!3274 = !DILocation(line: 1486, column: 11, scope: !3275)
!3275 = distinct !DILexicalBlock(scope: !3276, file: !1, line: 1486, column: 10)
!3276 = distinct !DILexicalBlock(scope: !3271, file: !1, line: 1485, column: 21)
!3277 = !DILocation(line: 1486, column: 16, scope: !3275)
!3278 = !DILocation(line: 1486, column: 21, scope: !3275)
!3279 = !DILocation(line: 1486, column: 39, scope: !3275)
!3280 = !DILocation(line: 1486, column: 10, scope: !3276)
!3281 = !DILocation(line: 1487, column: 11, scope: !3282)
!3282 = distinct !DILexicalBlock(scope: !3283, file: !1, line: 1487, column: 10)
!3283 = distinct !DILexicalBlock(scope: !3275, file: !1, line: 1486, column: 44)
!3284 = !DILocation(line: 1487, column: 16, scope: !3282)
!3285 = !DILocation(line: 1487, column: 14, scope: !3282)
!3286 = !DILocation(line: 1487, column: 20, scope: !3282)
!3287 = !DILocation(line: 1487, column: 10, scope: !3283)
!3288 = !DILocation(line: 1489, column: 6, scope: !3289)
!3289 = distinct !DILexicalBlock(scope: !3282, file: !1, line: 1487, column: 25)
!3290 = !DILocation(line: 1491, column: 11, scope: !3291)
!3291 = distinct !DILexicalBlock(scope: !3292, file: !1, line: 1491, column: 11)
!3292 = distinct !DILexicalBlock(scope: !3282, file: !1, line: 1490, column: 11)
!3293 = !DILocation(line: 1491, column: 11, scope: !3292)
!3294 = !DILocation(line: 1492, column: 36, scope: !3291)
!3295 = !DILocation(line: 1492, column: 41, scope: !3291)
!3296 = !DILocation(line: 1492, column: 47, scope: !3291)
!3297 = !DILocation(line: 1492, column: 8, scope: !3291)
!3298 = !DILocation(line: 1493, column: 14, scope: !3292)
!3299 = !DILocation(line: 1493, column: 7, scope: !3292)
!3300 = !DILocation(line: 1495, column: 5, scope: !3283)
!3301 = !DILocation(line: 1496, column: 11, scope: !3302)
!3302 = distinct !DILexicalBlock(scope: !3276, file: !1, line: 1496, column: 10)
!3303 = !DILocation(line: 1496, column: 16, scope: !3302)
!3304 = !DILocation(line: 1496, column: 21, scope: !3302)
!3305 = !DILocation(line: 1496, column: 40, scope: !3302)
!3306 = !DILocation(line: 1496, column: 10, scope: !3276)
!3307 = !DILocation(line: 1497, column: 11, scope: !3308)
!3308 = distinct !DILexicalBlock(scope: !3309, file: !1, line: 1497, column: 10)
!3309 = distinct !DILexicalBlock(scope: !3302, file: !1, line: 1496, column: 45)
!3310 = !DILocation(line: 1497, column: 16, scope: !3308)
!3311 = !DILocation(line: 1497, column: 14, scope: !3308)
!3312 = !DILocation(line: 1497, column: 20, scope: !3308)
!3313 = !DILocation(line: 1497, column: 10, scope: !3309)
!3314 = !DILocation(line: 1498, column: 11, scope: !3315)
!3315 = distinct !DILexicalBlock(scope: !3316, file: !1, line: 1498, column: 11)
!3316 = distinct !DILexicalBlock(scope: !3308, file: !1, line: 1497, column: 25)
!3317 = !DILocation(line: 1498, column: 11, scope: !3316)
!3318 = !DILocation(line: 1499, column: 36, scope: !3315)
!3319 = !DILocation(line: 1499, column: 41, scope: !3315)
!3320 = !DILocation(line: 1499, column: 47, scope: !3315)
!3321 = !DILocation(line: 1499, column: 8, scope: !3315)
!3322 = !DILocation(line: 1500, column: 14, scope: !3316)
!3323 = !DILocation(line: 1500, column: 7, scope: !3316)
!3324 = !DILocation(line: 1502, column: 5, scope: !3309)
!3325 = !DILocation(line: 1503, column: 10, scope: !3276)
!3326 = !DILocation(line: 1503, column: 7, scope: !3276)
!3327 = !DILocation(line: 1504, column: 10, scope: !3276)
!3328 = !DILocation(line: 1504, column: 7, scope: !3276)
!3329 = !DILocation(line: 1505, column: 4, scope: !3276)
!3330 = !DILocation(line: 1507, column: 9, scope: !3331)
!3331 = distinct !DILexicalBlock(scope: !3332, file: !1, line: 1507, column: 9)
!3332 = distinct !DILexicalBlock(scope: !3271, file: !1, line: 1506, column: 9)
!3333 = !DILocation(line: 1507, column: 14, scope: !3331)
!3334 = !DILocation(line: 1507, column: 19, scope: !3331)
!3335 = !DILocation(line: 1507, column: 9, scope: !3332)
!3336 = !DILocation(line: 1508, column: 11, scope: !3337)
!3337 = distinct !DILexicalBlock(scope: !3338, file: !1, line: 1508, column: 10)
!3338 = distinct !DILexicalBlock(scope: !3331, file: !1, line: 1507, column: 38)
!3339 = !DILocation(line: 1508, column: 15, scope: !3337)
!3340 = !DILocation(line: 1508, column: 14, scope: !3337)
!3341 = !DILocation(line: 1508, column: 19, scope: !3337)
!3342 = !DILocation(line: 1508, column: 10, scope: !3338)
!3343 = !DILocation(line: 1508, column: 29, scope: !3337)
!3344 = !DILocation(line: 1508, column: 26, scope: !3337)
!3345 = !DILocation(line: 1508, column: 24, scope: !3337)
!3346 = !DILocation(line: 1509, column: 16, scope: !3337)
!3347 = !DILocation(line: 1509, column: 13, scope: !3337)
!3348 = !DILocation(line: 1511, column: 11, scope: !3349)
!3349 = distinct !DILexicalBlock(scope: !3338, file: !1, line: 1511, column: 10)
!3350 = !DILocation(line: 1511, column: 15, scope: !3349)
!3351 = !DILocation(line: 1511, column: 14, scope: !3349)
!3352 = !DILocation(line: 1511, column: 19, scope: !3349)
!3353 = !DILocation(line: 1511, column: 10, scope: !3338)
!3354 = !DILocation(line: 1511, column: 29, scope: !3349)
!3355 = !DILocation(line: 1511, column: 26, scope: !3349)
!3356 = !DILocation(line: 1511, column: 24, scope: !3349)
!3357 = !DILocation(line: 1512, column: 16, scope: !3349)
!3358 = !DILocation(line: 1512, column: 13, scope: !3349)
!3359 = !DILocation(line: 1513, column: 5, scope: !3338)
!3360 = !DILocation(line: 1514, column: 9, scope: !3361)
!3361 = distinct !DILexicalBlock(scope: !3332, file: !1, line: 1514, column: 9)
!3362 = !DILocation(line: 1514, column: 14, scope: !3361)
!3363 = !DILocation(line: 1514, column: 19, scope: !3361)
!3364 = !DILocation(line: 1514, column: 9, scope: !3332)
!3365 = !DILocation(line: 1515, column: 11, scope: !3366)
!3366 = distinct !DILexicalBlock(scope: !3367, file: !1, line: 1515, column: 10)
!3367 = distinct !DILexicalBlock(scope: !3361, file: !1, line: 1514, column: 39)
!3368 = !DILocation(line: 1515, column: 15, scope: !3366)
!3369 = !DILocation(line: 1515, column: 14, scope: !3366)
!3370 = !DILocation(line: 1515, column: 19, scope: !3366)
!3371 = !DILocation(line: 1515, column: 10, scope: !3367)
!3372 = !DILocation(line: 1515, column: 29, scope: !3366)
!3373 = !DILocation(line: 1515, column: 26, scope: !3366)
!3374 = !DILocation(line: 1515, column: 24, scope: !3366)
!3375 = !DILocation(line: 1516, column: 16, scope: !3366)
!3376 = !DILocation(line: 1516, column: 13, scope: !3366)
!3377 = !DILocation(line: 1518, column: 11, scope: !3378)
!3378 = distinct !DILexicalBlock(scope: !3367, file: !1, line: 1518, column: 10)
!3379 = !DILocation(line: 1518, column: 15, scope: !3378)
!3380 = !DILocation(line: 1518, column: 14, scope: !3378)
!3381 = !DILocation(line: 1518, column: 19, scope: !3378)
!3382 = !DILocation(line: 1518, column: 10, scope: !3367)
!3383 = !DILocation(line: 1518, column: 29, scope: !3378)
!3384 = !DILocation(line: 1518, column: 26, scope: !3378)
!3385 = !DILocation(line: 1518, column: 24, scope: !3378)
!3386 = !DILocation(line: 1519, column: 16, scope: !3378)
!3387 = !DILocation(line: 1519, column: 13, scope: !3378)
!3388 = !DILocation(line: 1520, column: 5, scope: !3367)
!3389 = !DILocation(line: 1525, column: 7, scope: !3390)
!3390 = distinct !DILexicalBlock(scope: !3200, file: !1, line: 1525, column: 7)
!3391 = !DILocation(line: 1525, column: 12, scope: !3390)
!3392 = !DILocation(line: 1525, column: 23, scope: !3390)
!3393 = !DILocation(line: 1525, column: 7, scope: !3200)
!3394 = !DILocation(line: 1526, column: 9, scope: !3395)
!3395 = distinct !DILexicalBlock(scope: !3390, file: !1, line: 1525, column: 30)
!3396 = !DILocation(line: 1526, column: 11, scope: !3395)
!3397 = !DILocation(line: 1526, column: 24, scope: !3395)
!3398 = !DILocation(line: 1526, column: 29, scope: !3395)
!3399 = !DILocation(line: 1526, column: 23, scope: !3395)
!3400 = !DILocation(line: 1526, column: 17, scope: !3395)
!3401 = !DILocation(line: 1526, column: 42, scope: !3395)
!3402 = !DILocation(line: 1526, column: 6, scope: !3395)
!3403 = !DILocation(line: 1527, column: 9, scope: !3395)
!3404 = !DILocation(line: 1527, column: 11, scope: !3395)
!3405 = !DILocation(line: 1527, column: 24, scope: !3395)
!3406 = !DILocation(line: 1527, column: 29, scope: !3395)
!3407 = !DILocation(line: 1527, column: 23, scope: !3395)
!3408 = !DILocation(line: 1527, column: 17, scope: !3395)
!3409 = !DILocation(line: 1527, column: 42, scope: !3395)
!3410 = !DILocation(line: 1527, column: 6, scope: !3395)
!3411 = !DILocation(line: 1528, column: 17, scope: !3395)
!3412 = !DILocation(line: 1528, column: 22, scope: !3395)
!3413 = !DILocation(line: 1528, column: 16, scope: !3395)
!3414 = !DILocation(line: 1528, column: 8, scope: !3395)
!3415 = !DILocation(line: 1529, column: 17, scope: !3395)
!3416 = !DILocation(line: 1529, column: 22, scope: !3395)
!3417 = !DILocation(line: 1529, column: 16, scope: !3395)
!3418 = !DILocation(line: 1529, column: 8, scope: !3395)
!3419 = !DILocation(line: 1530, column: 3, scope: !3395)
!3420 = !DILocation(line: 1531, column: 2, scope: !3200)
!3421 = !DILocation(line: 1533, column: 6, scope: !3422)
!3422 = distinct !DILexicalBlock(scope: !2811, file: !1, line: 1533, column: 6)
!3423 = !DILocation(line: 1533, column: 11, scope: !3422)
!3424 = !DILocation(line: 1533, column: 18, scope: !3422)
!3425 = !DILocation(line: 1533, column: 6, scope: !2811)
!3426 = !DILocation(line: 1534, column: 7, scope: !3427)
!3427 = distinct !DILexicalBlock(scope: !3428, file: !1, line: 1534, column: 7)
!3428 = distinct !DILexicalBlock(scope: !3422, file: !1, line: 1533, column: 35)
!3429 = !DILocation(line: 1534, column: 10, scope: !3427)
!3430 = !DILocation(line: 1534, column: 9, scope: !3427)
!3431 = !DILocation(line: 1534, column: 14, scope: !3427)
!3432 = !DILocation(line: 1534, column: 20, scope: !3427)
!3433 = !DILocation(line: 1534, column: 23, scope: !3427)
!3434 = !DILocation(line: 1534, column: 26, scope: !3427)
!3435 = !DILocation(line: 1534, column: 25, scope: !3427)
!3436 = !DILocation(line: 1534, column: 30, scope: !3427)
!3437 = !DILocation(line: 1534, column: 36, scope: !3427)
!3438 = !DILocation(line: 1534, column: 39, scope: !3427)
!3439 = !DILocation(line: 1534, column: 42, scope: !3427)
!3440 = !DILocation(line: 1534, column: 41, scope: !3427)
!3441 = !DILocation(line: 1534, column: 46, scope: !3427)
!3442 = !DILocation(line: 1534, column: 52, scope: !3427)
!3443 = !DILocation(line: 1534, column: 55, scope: !3427)
!3444 = !DILocation(line: 1534, column: 58, scope: !3427)
!3445 = !DILocation(line: 1534, column: 57, scope: !3427)
!3446 = !DILocation(line: 1534, column: 62, scope: !3427)
!3447 = !DILocation(line: 1534, column: 68, scope: !3427)
!3448 = !DILocation(line: 1534, column: 71, scope: !3427)
!3449 = !DILocation(line: 1534, column: 80, scope: !3427)
!3450 = !DILocation(line: 1534, column: 87, scope: !3427)
!3451 = !DILocation(line: 1534, column: 90, scope: !3427)
!3452 = !DILocation(line: 1534, column: 99, scope: !3427)
!3453 = !DILocation(line: 1534, column: 7, scope: !3428)
!3454 = !DILocation(line: 1535, column: 8, scope: !3455)
!3455 = distinct !DILexicalBlock(scope: !3456, file: !1, line: 1535, column: 8)
!3456 = distinct !DILexicalBlock(scope: !3427, file: !1, line: 1534, column: 106)
!3457 = !DILocation(line: 1535, column: 8, scope: !3456)
!3458 = !DILocation(line: 1536, column: 33, scope: !3455)
!3459 = !DILocation(line: 1536, column: 38, scope: !3455)
!3460 = !DILocation(line: 1536, column: 44, scope: !3455)
!3461 = !DILocation(line: 1536, column: 5, scope: !3455)
!3462 = !DILocation(line: 1537, column: 11, scope: !3456)
!3463 = !DILocation(line: 1537, column: 4, scope: !3456)
!3464 = !DILocation(line: 1539, column: 2, scope: !3428)
!3465 = !DILocation(line: 1540, column: 11, scope: !3466)
!3466 = distinct !DILexicalBlock(scope: !3422, file: !1, line: 1540, column: 11)
!3467 = !DILocation(line: 1540, column: 16, scope: !3466)
!3468 = !DILocation(line: 1540, column: 22, scope: !3466)
!3469 = !DILocation(line: 1540, column: 33, scope: !3466)
!3470 = !DILocation(line: 1540, column: 36, scope: !3466)
!3471 = !DILocation(line: 1540, column: 41, scope: !3466)
!3472 = !DILocation(line: 1540, column: 47, scope: !3466)
!3473 = !DILocation(line: 1540, column: 11, scope: !3422)
!3474 = !DILocation(line: 1541, column: 7, scope: !3475)
!3475 = distinct !DILexicalBlock(scope: !3476, file: !1, line: 1541, column: 7)
!3476 = distinct !DILexicalBlock(scope: !3466, file: !1, line: 1540, column: 62)
!3477 = !DILocation(line: 1541, column: 10, scope: !3475)
!3478 = !DILocation(line: 1541, column: 9, scope: !3475)
!3479 = !DILocation(line: 1541, column: 14, scope: !3475)
!3480 = !DILocation(line: 1541, column: 20, scope: !3475)
!3481 = !DILocation(line: 1541, column: 23, scope: !3475)
!3482 = !DILocation(line: 1541, column: 26, scope: !3475)
!3483 = !DILocation(line: 1541, column: 25, scope: !3475)
!3484 = !DILocation(line: 1541, column: 30, scope: !3475)
!3485 = !DILocation(line: 1541, column: 36, scope: !3475)
!3486 = !DILocation(line: 1541, column: 39, scope: !3475)
!3487 = !DILocation(line: 1541, column: 42, scope: !3475)
!3488 = !DILocation(line: 1541, column: 41, scope: !3475)
!3489 = !DILocation(line: 1541, column: 46, scope: !3475)
!3490 = !DILocation(line: 1541, column: 52, scope: !3475)
!3491 = !DILocation(line: 1541, column: 55, scope: !3475)
!3492 = !DILocation(line: 1541, column: 58, scope: !3475)
!3493 = !DILocation(line: 1541, column: 57, scope: !3475)
!3494 = !DILocation(line: 1541, column: 62, scope: !3475)
!3495 = !DILocation(line: 1541, column: 7, scope: !3476)
!3496 = !DILocation(line: 1542, column: 8, scope: !3497)
!3497 = distinct !DILexicalBlock(scope: !3498, file: !1, line: 1542, column: 8)
!3498 = distinct !DILexicalBlock(scope: !3475, file: !1, line: 1541, column: 69)
!3499 = !DILocation(line: 1542, column: 8, scope: !3498)
!3500 = !DILocation(line: 1543, column: 33, scope: !3497)
!3501 = !DILocation(line: 1543, column: 38, scope: !3497)
!3502 = !DILocation(line: 1543, column: 44, scope: !3497)
!3503 = !DILocation(line: 1543, column: 5, scope: !3497)
!3504 = !DILocation(line: 1544, column: 11, scope: !3498)
!3505 = !DILocation(line: 1544, column: 4, scope: !3498)
!3506 = !DILocation(line: 1546, column: 2, scope: !3476)
!3507 = !DILocation(line: 1548, column: 7, scope: !3508)
!3508 = distinct !DILexicalBlock(scope: !3509, file: !1, line: 1548, column: 7)
!3509 = distinct !DILexicalBlock(scope: !3466, file: !1, line: 1547, column: 7)
!3510 = !DILocation(line: 1548, column: 7, scope: !3509)
!3511 = !DILocation(line: 1549, column: 8, scope: !3512)
!3512 = distinct !DILexicalBlock(scope: !3513, file: !1, line: 1549, column: 8)
!3513 = distinct !DILexicalBlock(scope: !3508, file: !1, line: 1548, column: 19)
!3514 = !DILocation(line: 1549, column: 10, scope: !3512)
!3515 = !DILocation(line: 1549, column: 8, scope: !3513)
!3516 = !DILocation(line: 1549, column: 20, scope: !3512)
!3517 = !DILocation(line: 1549, column: 17, scope: !3512)
!3518 = !DILocation(line: 1550, column: 13, scope: !3519)
!3519 = distinct !DILexicalBlock(scope: !3512, file: !1, line: 1550, column: 13)
!3520 = !DILocation(line: 1550, column: 15, scope: !3519)
!3521 = !DILocation(line: 1550, column: 13, scope: !3512)
!3522 = !DILocation(line: 1550, column: 24, scope: !3519)
!3523 = !DILocation(line: 1550, column: 22, scope: !3519)
!3524 = !DILocation(line: 1551, column: 3, scope: !3513)
!3525 = !DILocation(line: 1553, column: 8, scope: !3526)
!3526 = distinct !DILexicalBlock(scope: !3527, file: !1, line: 1553, column: 8)
!3527 = distinct !DILexicalBlock(scope: !3508, file: !1, line: 1552, column: 8)
!3528 = !DILocation(line: 1553, column: 10, scope: !3526)
!3529 = !DILocation(line: 1553, column: 8, scope: !3527)
!3530 = !DILocation(line: 1553, column: 29, scope: !3526)
!3531 = !DILocation(line: 1553, column: 23, scope: !3526)
!3532 = !DILocation(line: 1553, column: 20, scope: !3526)
!3533 = !DILocation(line: 1553, column: 17, scope: !3526)
!3534 = !DILocation(line: 1554, column: 13, scope: !3535)
!3535 = distinct !DILexicalBlock(scope: !3526, file: !1, line: 1554, column: 13)
!3536 = !DILocation(line: 1554, column: 15, scope: !3535)
!3537 = !DILocation(line: 1554, column: 13, scope: !3526)
!3538 = !DILocation(line: 1554, column: 35, scope: !3535)
!3539 = !DILocation(line: 1554, column: 29, scope: !3535)
!3540 = !DILocation(line: 1554, column: 28, scope: !3535)
!3541 = !DILocation(line: 1554, column: 27, scope: !3535)
!3542 = !DILocation(line: 1554, column: 24, scope: !3535)
!3543 = !DILocation(line: 1554, column: 22, scope: !3535)
!3544 = !DILocation(line: 1557, column: 7, scope: !3545)
!3545 = distinct !DILexicalBlock(scope: !3509, file: !1, line: 1557, column: 7)
!3546 = !DILocation(line: 1557, column: 7, scope: !3509)
!3547 = !DILocation(line: 1558, column: 8, scope: !3548)
!3548 = distinct !DILexicalBlock(scope: !3549, file: !1, line: 1558, column: 8)
!3549 = distinct !DILexicalBlock(scope: !3545, file: !1, line: 1557, column: 19)
!3550 = !DILocation(line: 1558, column: 10, scope: !3548)
!3551 = !DILocation(line: 1558, column: 8, scope: !3549)
!3552 = !DILocation(line: 1558, column: 20, scope: !3548)
!3553 = !DILocation(line: 1558, column: 17, scope: !3548)
!3554 = !DILocation(line: 1559, column: 13, scope: !3555)
!3555 = distinct !DILexicalBlock(scope: !3548, file: !1, line: 1559, column: 13)
!3556 = !DILocation(line: 1559, column: 15, scope: !3555)
!3557 = !DILocation(line: 1559, column: 13, scope: !3548)
!3558 = !DILocation(line: 1559, column: 24, scope: !3555)
!3559 = !DILocation(line: 1559, column: 22, scope: !3555)
!3560 = !DILocation(line: 1560, column: 3, scope: !3549)
!3561 = !DILocation(line: 1562, column: 8, scope: !3562)
!3562 = distinct !DILexicalBlock(scope: !3563, file: !1, line: 1562, column: 8)
!3563 = distinct !DILexicalBlock(scope: !3545, file: !1, line: 1561, column: 8)
!3564 = !DILocation(line: 1562, column: 10, scope: !3562)
!3565 = !DILocation(line: 1562, column: 8, scope: !3563)
!3566 = !DILocation(line: 1562, column: 29, scope: !3562)
!3567 = !DILocation(line: 1562, column: 23, scope: !3562)
!3568 = !DILocation(line: 1562, column: 20, scope: !3562)
!3569 = !DILocation(line: 1562, column: 17, scope: !3562)
!3570 = !DILocation(line: 1563, column: 13, scope: !3571)
!3571 = distinct !DILexicalBlock(scope: !3562, file: !1, line: 1563, column: 13)
!3572 = !DILocation(line: 1563, column: 15, scope: !3571)
!3573 = !DILocation(line: 1563, column: 13, scope: !3562)
!3574 = !DILocation(line: 1563, column: 35, scope: !3571)
!3575 = !DILocation(line: 1563, column: 29, scope: !3571)
!3576 = !DILocation(line: 1563, column: 28, scope: !3571)
!3577 = !DILocation(line: 1563, column: 27, scope: !3571)
!3578 = !DILocation(line: 1563, column: 24, scope: !3571)
!3579 = !DILocation(line: 1563, column: 22, scope: !3571)
!3580 = !DILocation(line: 1568, column: 10, scope: !3581)
!3581 = distinct !DILexicalBlock(scope: !2811, file: !1, line: 1568, column: 7)
!3582 = !DILocation(line: 1568, column: 8, scope: !3581)
!3583 = !DILocation(line: 1568, column: 15, scope: !3581)
!3584 = !DILocation(line: 1568, column: 30, scope: !3581)
!3585 = !DILocation(line: 1568, column: 34, scope: !3581)
!3586 = !DILocation(line: 1568, column: 40, scope: !3581)
!3587 = !DILocation(line: 1568, column: 46, scope: !3581)
!3588 = !DILocation(line: 1568, column: 7, scope: !2811)
!3589 = !DILocation(line: 1569, column: 17, scope: !3590)
!3590 = distinct !DILexicalBlock(scope: !3581, file: !1, line: 1568, column: 61)
!3591 = !DILocation(line: 1569, column: 23, scope: !3590)
!3592 = !DILocation(line: 1569, column: 25, scope: !3590)
!3593 = !DILocation(line: 1569, column: 31, scope: !3590)
!3594 = !DILocation(line: 1569, column: 24, scope: !3590)
!3595 = !DILocation(line: 1569, column: 3, scope: !3590)
!3596 = !DILocation(line: 1569, column: 9, scope: !3590)
!3597 = !DILocation(line: 1569, column: 13, scope: !3590)
!3598 = !DILocation(line: 1570, column: 2, scope: !3590)
!3599 = !DILocation(line: 1573, column: 6, scope: !3600)
!3600 = distinct !DILexicalBlock(scope: !2811, file: !1, line: 1573, column: 6)
!3601 = !DILocation(line: 1573, column: 11, scope: !3600)
!3602 = !DILocation(line: 1573, column: 19, scope: !3600)
!3603 = !DILocation(line: 1573, column: 6, scope: !2811)
!3604 = !DILocalVariable(name: "previbuf", scope: !3605, file: !1, line: 1574, type: !34)
!3605 = distinct !DILexicalBlock(scope: !3600, file: !1, line: 1573, column: 33)
!3606 = !DILocation(line: 1574, column: 10, scope: !3605)
!3607 = !DILocalVariable(name: "curibuf", scope: !3605, file: !1, line: 1574, type: !34)
!3608 = !DILocation(line: 1574, column: 21, scope: !3605)
!3609 = !DILocalVariable(name: "bumpscale", scope: !3605, file: !1, line: 1575, type: !26)
!3610 = !DILocation(line: 1575, column: 9, scope: !3605)
!3611 = !DILocation(line: 1577, column: 8, scope: !3605)
!3612 = !DILocation(line: 1577, column: 6, scope: !3605)
!3613 = !DILocation(line: 1578, column: 8, scope: !3605)
!3614 = !DILocation(line: 1578, column: 6, scope: !3605)
!3615 = !DILocation(line: 1579, column: 17, scope: !3605)
!3616 = !DILocation(line: 1579, column: 21, scope: !3605)
!3617 = !DILocation(line: 1579, column: 10, scope: !3605)
!3618 = !DILocation(line: 1579, column: 8, scope: !3605)
!3619 = !DILocation(line: 1580, column: 7, scope: !3620)
!3620 = distinct !DILexicalBlock(scope: !3605, file: !1, line: 1580, column: 7)
!3621 = !DILocation(line: 1580, column: 12, scope: !3620)
!3622 = !DILocation(line: 1580, column: 7, scope: !3605)
!3623 = !DILocation(line: 1580, column: 25, scope: !3620)
!3624 = !DILocation(line: 1580, column: 20, scope: !3620)
!3625 = !DILocation(line: 1582, column: 28, scope: !3605)
!3626 = !DILocation(line: 1582, column: 20, scope: !3605)
!3627 = !DILocation(line: 1582, column: 18, scope: !3605)
!3628 = !DILocation(line: 1582, column: 11, scope: !3605)
!3629 = !DILocation(line: 1584, column: 14, scope: !3605)
!3630 = !DILocation(line: 1584, column: 22, scope: !3605)
!3631 = !DILocation(line: 1584, column: 21, scope: !3605)
!3632 = !DILocation(line: 1584, column: 12, scope: !3605)
!3633 = !DILocation(line: 1585, column: 7, scope: !3634)
!3634 = distinct !DILexicalBlock(scope: !3605, file: !1, line: 1585, column: 7)
!3635 = !DILocation(line: 1585, column: 16, scope: !3634)
!3636 = !DILocation(line: 1585, column: 7, scope: !3605)
!3637 = !DILocation(line: 1585, column: 32, scope: !3634)
!3638 = !DILocation(line: 1585, column: 23, scope: !3634)
!3639 = !DILocation(line: 1586, column: 19, scope: !3634)
!3640 = !DILocation(line: 1586, column: 17, scope: !3634)
!3641 = !DILocation(line: 1588, column: 9, scope: !3605)
!3642 = !DILocation(line: 1589, column: 22, scope: !3605)
!3643 = !DILocation(line: 1589, column: 20, scope: !3605)
!3644 = !DILocation(line: 1589, column: 11, scope: !3605)
!3645 = !DILocation(line: 1590, column: 3, scope: !3605)
!3646 = !DILocation(line: 1590, column: 10, scope: !3605)
!3647 = !DILocation(line: 1590, column: 16, scope: !3605)
!3648 = !DILocation(line: 1590, column: 34, scope: !3605)
!3649 = !DILocation(line: 1590, column: 37, scope: !3605)
!3650 = !DILocation(line: 1590, column: 43, scope: !3605)
!3651 = !DILocation(line: 1590, column: 50, scope: !3605)
!3652 = !DILocation(line: 0, scope: !3605)
!3653 = !DILocation(line: 1591, column: 8, scope: !3654)
!3654 = distinct !DILexicalBlock(scope: !3655, file: !1, line: 1591, column: 8)
!3655 = distinct !DILexicalBlock(scope: !3605, file: !1, line: 1590, column: 59)
!3656 = !DILocation(line: 1591, column: 15, scope: !3654)
!3657 = !DILocation(line: 1591, column: 13, scope: !3654)
!3658 = !DILocation(line: 1591, column: 8, scope: !3655)
!3659 = !DILocation(line: 1591, column: 24, scope: !3654)
!3660 = !DILocation(line: 1592, column: 14, scope: !3655)
!3661 = !DILocation(line: 1592, column: 12, scope: !3655)
!3662 = !DILocation(line: 1593, column: 13, scope: !3655)
!3663 = !DILocation(line: 1593, column: 19, scope: !3655)
!3664 = !DILocation(line: 1593, column: 26, scope: !3655)
!3665 = !DILocation(line: 1593, column: 11, scope: !3655)
!3666 = !DILocation(line: 1594, column: 27, scope: !3655)
!3667 = !DILocation(line: 1594, column: 20, scope: !3655)
!3668 = !DILocation(line: 1594, column: 18, scope: !3655)
!3669 = !DILocation(line: 1594, column: 11, scope: !3655)
!3670 = !DILocation(line: 1595, column: 10, scope: !3655)
!3671 = distinct !{!3671, !3645, !3672}
!3672 = !DILocation(line: 1596, column: 3, scope: !3605)
!3673 = !DILocation(line: 1598, column: 7, scope: !3674)
!3674 = distinct !DILexicalBlock(scope: !3605, file: !1, line: 1598, column: 7)
!3675 = !DILocation(line: 1598, column: 17, scope: !3674)
!3676 = !DILocation(line: 1598, column: 15, scope: !3674)
!3677 = !DILocation(line: 1598, column: 25, scope: !3674)
!3678 = !DILocation(line: 1598, column: 29, scope: !3674)
!3679 = !DILocation(line: 1598, column: 34, scope: !3674)
!3680 = !DILocation(line: 1598, column: 42, scope: !3674)
!3681 = !DILocation(line: 1598, column: 7, scope: !3605)
!3682 = !DILocation(line: 1600, column: 8, scope: !3683)
!3683 = distinct !DILexicalBlock(scope: !3684, file: !1, line: 1600, column: 8)
!3684 = distinct !DILexicalBlock(scope: !3674, file: !1, line: 1598, column: 59)
!3685 = !DILocation(line: 1600, column: 22, scope: !3683)
!3686 = !DILocation(line: 1600, column: 28, scope: !3683)
!3687 = !DILocation(line: 1600, column: 20, scope: !3683)
!3688 = !DILocation(line: 1600, column: 13, scope: !3683)
!3689 = !DILocation(line: 1600, column: 8, scope: !3684)
!3690 = !DILocation(line: 1600, column: 45, scope: !3683)
!3691 = !DILocation(line: 1600, column: 51, scope: !3683)
!3692 = !DILocation(line: 1600, column: 43, scope: !3683)
!3693 = !DILocation(line: 1600, column: 36, scope: !3683)
!3694 = !DILocation(line: 1600, column: 31, scope: !3683)
!3695 = !DILocation(line: 1601, column: 8, scope: !3696)
!3696 = distinct !DILexicalBlock(scope: !3684, file: !1, line: 1601, column: 8)
!3697 = !DILocation(line: 1601, column: 22, scope: !3696)
!3698 = !DILocation(line: 1601, column: 28, scope: !3696)
!3699 = !DILocation(line: 1601, column: 20, scope: !3696)
!3700 = !DILocation(line: 1601, column: 13, scope: !3696)
!3701 = !DILocation(line: 1601, column: 8, scope: !3684)
!3702 = !DILocation(line: 1601, column: 45, scope: !3696)
!3703 = !DILocation(line: 1601, column: 51, scope: !3696)
!3704 = !DILocation(line: 1601, column: 43, scope: !3696)
!3705 = !DILocation(line: 1601, column: 36, scope: !3696)
!3706 = !DILocation(line: 1601, column: 31, scope: !3696)
!3707 = !DILocation(line: 1602, column: 3, scope: !3684)
!3708 = !DILocation(line: 1604, column: 7, scope: !3709)
!3709 = distinct !DILexicalBlock(scope: !3605, file: !1, line: 1604, column: 7)
!3710 = !DILocation(line: 1604, column: 15, scope: !3709)
!3711 = !DILocation(line: 1604, column: 19, scope: !3709)
!3712 = !DILocation(line: 1604, column: 23, scope: !3709)
!3713 = !DILocation(line: 1604, column: 28, scope: !3709)
!3714 = !DILocation(line: 1604, column: 36, scope: !3709)
!3715 = !DILocation(line: 1604, column: 52, scope: !3709)
!3716 = !DILocation(line: 1604, column: 7, scope: !3605)
!3717 = !DILocation(line: 1609, column: 14, scope: !3718)
!3718 = distinct !DILexicalBlock(scope: !3709, file: !1, line: 1604, column: 57)
!3719 = !DILocation(line: 1609, column: 23, scope: !3718)
!3720 = !DILocation(line: 1609, column: 26, scope: !3718)
!3721 = !DILocation(line: 1609, column: 25, scope: !3718)
!3722 = !DILocation(line: 1609, column: 32, scope: !3718)
!3723 = !DILocation(line: 1609, column: 35, scope: !3718)
!3724 = !DILocation(line: 1609, column: 34, scope: !3718)
!3725 = !DILocation(line: 1609, column: 41, scope: !3718)
!3726 = !DILocation(line: 1609, column: 44, scope: !3718)
!3727 = !DILocation(line: 1609, column: 43, scope: !3718)
!3728 = !DILocation(line: 1609, column: 50, scope: !3718)
!3729 = !DILocation(line: 1609, column: 53, scope: !3718)
!3730 = !DILocation(line: 1609, column: 52, scope: !3718)
!3731 = !DILocation(line: 1609, column: 59, scope: !3718)
!3732 = !DILocation(line: 1609, column: 67, scope: !3718)
!3733 = !DILocation(line: 1609, column: 79, scope: !3718)
!3734 = !DILocation(line: 1609, column: 4, scope: !3718)
!3735 = !DILocation(line: 1610, column: 10, scope: !3718)
!3736 = !DILocation(line: 1610, column: 18, scope: !3718)
!3737 = !DILocation(line: 1610, column: 21, scope: !3718)
!3738 = !DILocation(line: 1610, column: 29, scope: !3718)
!3739 = !DILocation(line: 1610, column: 20, scope: !3718)
!3740 = !DILocation(line: 1610, column: 32, scope: !3718)
!3741 = !DILocation(line: 1610, column: 40, scope: !3718)
!3742 = !DILocation(line: 1610, column: 31, scope: !3718)
!3743 = !DILocation(line: 1610, column: 8, scope: !3718)
!3744 = !DILocation(line: 1611, column: 14, scope: !3718)
!3745 = !DILocation(line: 1611, column: 23, scope: !3718)
!3746 = !DILocation(line: 1611, column: 26, scope: !3718)
!3747 = !DILocation(line: 1611, column: 25, scope: !3718)
!3748 = !DILocation(line: 1611, column: 31, scope: !3718)
!3749 = !DILocation(line: 1611, column: 30, scope: !3718)
!3750 = !DILocation(line: 1611, column: 39, scope: !3718)
!3751 = !DILocation(line: 1611, column: 42, scope: !3718)
!3752 = !DILocation(line: 1611, column: 41, scope: !3718)
!3753 = !DILocation(line: 1611, column: 47, scope: !3718)
!3754 = !DILocation(line: 1611, column: 46, scope: !3718)
!3755 = !DILocation(line: 1611, column: 55, scope: !3718)
!3756 = !DILocation(line: 1611, column: 58, scope: !3718)
!3757 = !DILocation(line: 1611, column: 57, scope: !3718)
!3758 = !DILocation(line: 1611, column: 63, scope: !3718)
!3759 = !DILocation(line: 1611, column: 62, scope: !3718)
!3760 = !DILocation(line: 1611, column: 71, scope: !3718)
!3761 = !DILocation(line: 1611, column: 74, scope: !3718)
!3762 = !DILocation(line: 1611, column: 73, scope: !3718)
!3763 = !DILocation(line: 1611, column: 79, scope: !3718)
!3764 = !DILocation(line: 1611, column: 78, scope: !3718)
!3765 = !DILocation(line: 1611, column: 94, scope: !3718)
!3766 = !DILocation(line: 1611, column: 106, scope: !3718)
!3767 = !DILocation(line: 1611, column: 4, scope: !3718)
!3768 = !DILocation(line: 1612, column: 15, scope: !3718)
!3769 = !DILocation(line: 1612, column: 25, scope: !3718)
!3770 = !DILocation(line: 1612, column: 18, scope: !3718)
!3771 = !DILocation(line: 1612, column: 35, scope: !3718)
!3772 = !DILocation(line: 1612, column: 28, scope: !3718)
!3773 = !DILocation(line: 1612, column: 8, scope: !3718)
!3774 = !DILocation(line: 1613, column: 14, scope: !3718)
!3775 = !DILocation(line: 1613, column: 23, scope: !3718)
!3776 = !DILocation(line: 1613, column: 26, scope: !3718)
!3777 = !DILocation(line: 1613, column: 25, scope: !3718)
!3778 = !DILocation(line: 1613, column: 31, scope: !3718)
!3779 = !DILocation(line: 1613, column: 30, scope: !3718)
!3780 = !DILocation(line: 1613, column: 39, scope: !3718)
!3781 = !DILocation(line: 1613, column: 42, scope: !3718)
!3782 = !DILocation(line: 1613, column: 41, scope: !3718)
!3783 = !DILocation(line: 1613, column: 47, scope: !3718)
!3784 = !DILocation(line: 1613, column: 46, scope: !3718)
!3785 = !DILocation(line: 1613, column: 55, scope: !3718)
!3786 = !DILocation(line: 1613, column: 58, scope: !3718)
!3787 = !DILocation(line: 1613, column: 57, scope: !3718)
!3788 = !DILocation(line: 1613, column: 63, scope: !3718)
!3789 = !DILocation(line: 1613, column: 62, scope: !3718)
!3790 = !DILocation(line: 1613, column: 71, scope: !3718)
!3791 = !DILocation(line: 1613, column: 74, scope: !3718)
!3792 = !DILocation(line: 1613, column: 73, scope: !3718)
!3793 = !DILocation(line: 1613, column: 79, scope: !3718)
!3794 = !DILocation(line: 1613, column: 78, scope: !3718)
!3795 = !DILocation(line: 1613, column: 94, scope: !3718)
!3796 = !DILocation(line: 1613, column: 106, scope: !3718)
!3797 = !DILocation(line: 1613, column: 4, scope: !3718)
!3798 = !DILocation(line: 1614, column: 15, scope: !3718)
!3799 = !DILocation(line: 1614, column: 25, scope: !3718)
!3800 = !DILocation(line: 1614, column: 18, scope: !3718)
!3801 = !DILocation(line: 1614, column: 35, scope: !3718)
!3802 = !DILocation(line: 1614, column: 28, scope: !3718)
!3803 = !DILocation(line: 1614, column: 8, scope: !3718)
!3804 = !DILocation(line: 1617, column: 21, scope: !3718)
!3805 = !DILocation(line: 1617, column: 26, scope: !3718)
!3806 = !DILocation(line: 1617, column: 25, scope: !3718)
!3807 = !DILocation(line: 1617, column: 4, scope: !3718)
!3808 = !DILocation(line: 1617, column: 12, scope: !3718)
!3809 = !DILocation(line: 1617, column: 18, scope: !3718)
!3810 = !DILocation(line: 1618, column: 21, scope: !3718)
!3811 = !DILocation(line: 1618, column: 26, scope: !3718)
!3812 = !DILocation(line: 1618, column: 25, scope: !3718)
!3813 = !DILocation(line: 1618, column: 4, scope: !3718)
!3814 = !DILocation(line: 1618, column: 12, scope: !3718)
!3815 = !DILocation(line: 1618, column: 18, scope: !3718)
!3816 = !DILocation(line: 1620, column: 8, scope: !3817)
!3817 = distinct !DILexicalBlock(scope: !3718, file: !1, line: 1620, column: 8)
!3818 = !DILocation(line: 1620, column: 18, scope: !3817)
!3819 = !DILocation(line: 1620, column: 16, scope: !3817)
!3820 = !DILocation(line: 1620, column: 8, scope: !3718)
!3821 = !DILocation(line: 1622, column: 15, scope: !3822)
!3822 = distinct !DILexicalBlock(scope: !3817, file: !1, line: 1620, column: 27)
!3823 = !DILocation(line: 1622, column: 25, scope: !3822)
!3824 = !DILocation(line: 1622, column: 28, scope: !3822)
!3825 = !DILocation(line: 1622, column: 27, scope: !3822)
!3826 = !DILocation(line: 1622, column: 34, scope: !3822)
!3827 = !DILocation(line: 1622, column: 37, scope: !3822)
!3828 = !DILocation(line: 1622, column: 36, scope: !3822)
!3829 = !DILocation(line: 1622, column: 43, scope: !3822)
!3830 = !DILocation(line: 1622, column: 46, scope: !3822)
!3831 = !DILocation(line: 1622, column: 45, scope: !3822)
!3832 = !DILocation(line: 1622, column: 52, scope: !3822)
!3833 = !DILocation(line: 1622, column: 55, scope: !3822)
!3834 = !DILocation(line: 1622, column: 54, scope: !3822)
!3835 = !DILocation(line: 1622, column: 68, scope: !3822)
!3836 = !DILocation(line: 1622, column: 80, scope: !3822)
!3837 = !DILocation(line: 1622, column: 5, scope: !3822)
!3838 = !DILocation(line: 1625, column: 15, scope: !3822)
!3839 = !DILocation(line: 1625, column: 23, scope: !3822)
!3840 = !DILocation(line: 1625, column: 22, scope: !3822)
!3841 = !DILocation(line: 1625, column: 13, scope: !3822)
!3842 = !DILocation(line: 1625, column: 29, scope: !3822)
!3843 = !DILocation(line: 1625, column: 28, scope: !3822)
!3844 = !DILocation(line: 1625, column: 7, scope: !3822)
!3845 = !DILocation(line: 1626, column: 9, scope: !3846)
!3846 = distinct !DILexicalBlock(scope: !3822, file: !1, line: 1626, column: 9)
!3847 = !DILocation(line: 1626, column: 11, scope: !3846)
!3848 = !DILocation(line: 1626, column: 9, scope: !3822)
!3849 = !DILocation(line: 1627, column: 23, scope: !3850)
!3850 = distinct !DILexicalBlock(scope: !3846, file: !1, line: 1626, column: 19)
!3851 = !DILocation(line: 1627, column: 6, scope: !3850)
!3852 = !DILocation(line: 1627, column: 14, scope: !3850)
!3853 = !DILocation(line: 1627, column: 16, scope: !3850)
!3854 = !DILocation(line: 1627, column: 44, scope: !3850)
!3855 = !DILocation(line: 1627, column: 27, scope: !3850)
!3856 = !DILocation(line: 1627, column: 35, scope: !3850)
!3857 = !DILocation(line: 1627, column: 37, scope: !3850)
!3858 = !DILocation(line: 1628, column: 23, scope: !3850)
!3859 = !DILocation(line: 1628, column: 6, scope: !3850)
!3860 = !DILocation(line: 1628, column: 14, scope: !3850)
!3861 = !DILocation(line: 1628, column: 16, scope: !3850)
!3862 = !DILocation(line: 1628, column: 44, scope: !3850)
!3863 = !DILocation(line: 1628, column: 27, scope: !3850)
!3864 = !DILocation(line: 1628, column: 35, scope: !3850)
!3865 = !DILocation(line: 1628, column: 37, scope: !3850)
!3866 = !DILocation(line: 1629, column: 5, scope: !3850)
!3867 = !DILocation(line: 1631, column: 15, scope: !3868)
!3868 = distinct !DILexicalBlock(scope: !3846, file: !1, line: 1630, column: 10)
!3869 = !DILocation(line: 1631, column: 14, scope: !3868)
!3870 = !DILocation(line: 1631, column: 8, scope: !3868)
!3871 = !DILocation(line: 1632, column: 18, scope: !3868)
!3872 = !DILocation(line: 1632, column: 21, scope: !3868)
!3873 = !DILocation(line: 1632, column: 29, scope: !3868)
!3874 = !DILocation(line: 1632, column: 20, scope: !3868)
!3875 = !DILocation(line: 1632, column: 33, scope: !3868)
!3876 = !DILocation(line: 1632, column: 41, scope: !3868)
!3877 = !DILocation(line: 1632, column: 35, scope: !3868)
!3878 = !DILocation(line: 1632, column: 31, scope: !3868)
!3879 = !DILocation(line: 1632, column: 6, scope: !3868)
!3880 = !DILocation(line: 1632, column: 14, scope: !3868)
!3881 = !DILocation(line: 1632, column: 16, scope: !3868)
!3882 = !DILocation(line: 1633, column: 18, scope: !3868)
!3883 = !DILocation(line: 1633, column: 21, scope: !3868)
!3884 = !DILocation(line: 1633, column: 29, scope: !3868)
!3885 = !DILocation(line: 1633, column: 20, scope: !3868)
!3886 = !DILocation(line: 1633, column: 33, scope: !3868)
!3887 = !DILocation(line: 1633, column: 41, scope: !3868)
!3888 = !DILocation(line: 1633, column: 35, scope: !3868)
!3889 = !DILocation(line: 1633, column: 31, scope: !3868)
!3890 = !DILocation(line: 1633, column: 6, scope: !3868)
!3891 = !DILocation(line: 1633, column: 14, scope: !3868)
!3892 = !DILocation(line: 1633, column: 16, scope: !3868)
!3893 = !DILocation(line: 1634, column: 18, scope: !3868)
!3894 = !DILocation(line: 1634, column: 21, scope: !3868)
!3895 = !DILocation(line: 1634, column: 29, scope: !3868)
!3896 = !DILocation(line: 1634, column: 20, scope: !3868)
!3897 = !DILocation(line: 1634, column: 33, scope: !3868)
!3898 = !DILocation(line: 1634, column: 41, scope: !3868)
!3899 = !DILocation(line: 1634, column: 35, scope: !3868)
!3900 = !DILocation(line: 1634, column: 31, scope: !3868)
!3901 = !DILocation(line: 1634, column: 6, scope: !3868)
!3902 = !DILocation(line: 1634, column: 14, scope: !3868)
!3903 = !DILocation(line: 1634, column: 16, scope: !3868)
!3904 = !DILocation(line: 1635, column: 18, scope: !3868)
!3905 = !DILocation(line: 1635, column: 21, scope: !3868)
!3906 = !DILocation(line: 1635, column: 29, scope: !3868)
!3907 = !DILocation(line: 1635, column: 20, scope: !3868)
!3908 = !DILocation(line: 1635, column: 33, scope: !3868)
!3909 = !DILocation(line: 1635, column: 41, scope: !3868)
!3910 = !DILocation(line: 1635, column: 35, scope: !3868)
!3911 = !DILocation(line: 1635, column: 31, scope: !3868)
!3912 = !DILocation(line: 1635, column: 6, scope: !3868)
!3913 = !DILocation(line: 1635, column: 14, scope: !3868)
!3914 = !DILocation(line: 1635, column: 16, scope: !3868)
!3915 = !DILocation(line: 1638, column: 11, scope: !3822)
!3916 = !DILocation(line: 1638, column: 14, scope: !3822)
!3917 = !DILocation(line: 1638, column: 13, scope: !3822)
!3918 = !DILocation(line: 1638, column: 20, scope: !3822)
!3919 = !DILocation(line: 1638, column: 29, scope: !3822)
!3920 = !DILocation(line: 1638, column: 39, scope: !3822)
!3921 = !DILocation(line: 1638, column: 32, scope: !3822)
!3922 = !DILocation(line: 1638, column: 49, scope: !3822)
!3923 = !DILocation(line: 1638, column: 42, scope: !3822)
!3924 = !DILocation(line: 1638, column: 22, scope: !3822)
!3925 = !DILocation(line: 1638, column: 18, scope: !3822)
!3926 = !DILocation(line: 1638, column: 9, scope: !3822)
!3927 = !DILocation(line: 1639, column: 15, scope: !3822)
!3928 = !DILocation(line: 1639, column: 25, scope: !3822)
!3929 = !DILocation(line: 1639, column: 28, scope: !3822)
!3930 = !DILocation(line: 1639, column: 27, scope: !3822)
!3931 = !DILocation(line: 1639, column: 33, scope: !3822)
!3932 = !DILocation(line: 1639, column: 32, scope: !3822)
!3933 = !DILocation(line: 1639, column: 41, scope: !3822)
!3934 = !DILocation(line: 1639, column: 44, scope: !3822)
!3935 = !DILocation(line: 1639, column: 43, scope: !3822)
!3936 = !DILocation(line: 1639, column: 49, scope: !3822)
!3937 = !DILocation(line: 1639, column: 48, scope: !3822)
!3938 = !DILocation(line: 1639, column: 57, scope: !3822)
!3939 = !DILocation(line: 1639, column: 60, scope: !3822)
!3940 = !DILocation(line: 1639, column: 59, scope: !3822)
!3941 = !DILocation(line: 1639, column: 65, scope: !3822)
!3942 = !DILocation(line: 1639, column: 64, scope: !3822)
!3943 = !DILocation(line: 1639, column: 73, scope: !3822)
!3944 = !DILocation(line: 1639, column: 76, scope: !3822)
!3945 = !DILocation(line: 1639, column: 75, scope: !3822)
!3946 = !DILocation(line: 1639, column: 81, scope: !3822)
!3947 = !DILocation(line: 1639, column: 80, scope: !3822)
!3948 = !DILocation(line: 1639, column: 96, scope: !3822)
!3949 = !DILocation(line: 1639, column: 108, scope: !3822)
!3950 = !DILocation(line: 1639, column: 5, scope: !3822)
!3951 = !DILocation(line: 1640, column: 11, scope: !3822)
!3952 = !DILocation(line: 1640, column: 14, scope: !3822)
!3953 = !DILocation(line: 1640, column: 13, scope: !3822)
!3954 = !DILocation(line: 1640, column: 20, scope: !3822)
!3955 = !DILocation(line: 1640, column: 29, scope: !3822)
!3956 = !DILocation(line: 1640, column: 39, scope: !3822)
!3957 = !DILocation(line: 1640, column: 32, scope: !3822)
!3958 = !DILocation(line: 1640, column: 49, scope: !3822)
!3959 = !DILocation(line: 1640, column: 42, scope: !3822)
!3960 = !DILocation(line: 1640, column: 22, scope: !3822)
!3961 = !DILocation(line: 1640, column: 18, scope: !3822)
!3962 = !DILocation(line: 1640, column: 9, scope: !3822)
!3963 = !DILocation(line: 1641, column: 15, scope: !3822)
!3964 = !DILocation(line: 1641, column: 25, scope: !3822)
!3965 = !DILocation(line: 1641, column: 28, scope: !3822)
!3966 = !DILocation(line: 1641, column: 27, scope: !3822)
!3967 = !DILocation(line: 1641, column: 33, scope: !3822)
!3968 = !DILocation(line: 1641, column: 32, scope: !3822)
!3969 = !DILocation(line: 1641, column: 41, scope: !3822)
!3970 = !DILocation(line: 1641, column: 44, scope: !3822)
!3971 = !DILocation(line: 1641, column: 43, scope: !3822)
!3972 = !DILocation(line: 1641, column: 49, scope: !3822)
!3973 = !DILocation(line: 1641, column: 48, scope: !3822)
!3974 = !DILocation(line: 1641, column: 57, scope: !3822)
!3975 = !DILocation(line: 1641, column: 60, scope: !3822)
!3976 = !DILocation(line: 1641, column: 59, scope: !3822)
!3977 = !DILocation(line: 1641, column: 65, scope: !3822)
!3978 = !DILocation(line: 1641, column: 64, scope: !3822)
!3979 = !DILocation(line: 1641, column: 73, scope: !3822)
!3980 = !DILocation(line: 1641, column: 76, scope: !3822)
!3981 = !DILocation(line: 1641, column: 75, scope: !3822)
!3982 = !DILocation(line: 1641, column: 81, scope: !3822)
!3983 = !DILocation(line: 1641, column: 80, scope: !3822)
!3984 = !DILocation(line: 1641, column: 96, scope: !3822)
!3985 = !DILocation(line: 1641, column: 108, scope: !3822)
!3986 = !DILocation(line: 1641, column: 5, scope: !3822)
!3987 = !DILocation(line: 1642, column: 11, scope: !3822)
!3988 = !DILocation(line: 1642, column: 14, scope: !3822)
!3989 = !DILocation(line: 1642, column: 13, scope: !3822)
!3990 = !DILocation(line: 1642, column: 20, scope: !3822)
!3991 = !DILocation(line: 1642, column: 29, scope: !3822)
!3992 = !DILocation(line: 1642, column: 39, scope: !3822)
!3993 = !DILocation(line: 1642, column: 32, scope: !3822)
!3994 = !DILocation(line: 1642, column: 49, scope: !3822)
!3995 = !DILocation(line: 1642, column: 42, scope: !3822)
!3996 = !DILocation(line: 1642, column: 22, scope: !3822)
!3997 = !DILocation(line: 1642, column: 18, scope: !3822)
!3998 = !DILocation(line: 1642, column: 9, scope: !3822)
!3999 = !DILocation(line: 1644, column: 22, scope: !3822)
!4000 = !DILocation(line: 1644, column: 27, scope: !3822)
!4001 = !DILocation(line: 1644, column: 26, scope: !3822)
!4002 = !DILocation(line: 1644, column: 5, scope: !3822)
!4003 = !DILocation(line: 1644, column: 13, scope: !3822)
!4004 = !DILocation(line: 1644, column: 19, scope: !3822)
!4005 = !DILocation(line: 1645, column: 22, scope: !3822)
!4006 = !DILocation(line: 1645, column: 27, scope: !3822)
!4007 = !DILocation(line: 1645, column: 26, scope: !3822)
!4008 = !DILocation(line: 1645, column: 5, scope: !3822)
!4009 = !DILocation(line: 1645, column: 13, scope: !3822)
!4010 = !DILocation(line: 1645, column: 19, scope: !3822)
!4011 = !DILocation(line: 1647, column: 9, scope: !4012)
!4012 = distinct !DILexicalBlock(scope: !3822, file: !1, line: 1647, column: 9)
!4013 = !DILocation(line: 1647, column: 11, scope: !4012)
!4014 = !DILocation(line: 1647, column: 9, scope: !3822)
!4015 = !DILocation(line: 1648, column: 15, scope: !4016)
!4016 = distinct !DILexicalBlock(scope: !4012, file: !1, line: 1647, column: 18)
!4017 = !DILocation(line: 1648, column: 14, scope: !4016)
!4018 = !DILocation(line: 1648, column: 8, scope: !4016)
!4019 = !DILocation(line: 1649, column: 18, scope: !4016)
!4020 = !DILocation(line: 1649, column: 21, scope: !4016)
!4021 = !DILocation(line: 1649, column: 29, scope: !4016)
!4022 = !DILocation(line: 1649, column: 20, scope: !4016)
!4023 = !DILocation(line: 1649, column: 33, scope: !4016)
!4024 = !DILocation(line: 1649, column: 41, scope: !4016)
!4025 = !DILocation(line: 1649, column: 35, scope: !4016)
!4026 = !DILocation(line: 1649, column: 31, scope: !4016)
!4027 = !DILocation(line: 1649, column: 6, scope: !4016)
!4028 = !DILocation(line: 1649, column: 14, scope: !4016)
!4029 = !DILocation(line: 1649, column: 16, scope: !4016)
!4030 = !DILocation(line: 1650, column: 18, scope: !4016)
!4031 = !DILocation(line: 1650, column: 21, scope: !4016)
!4032 = !DILocation(line: 1650, column: 29, scope: !4016)
!4033 = !DILocation(line: 1650, column: 20, scope: !4016)
!4034 = !DILocation(line: 1650, column: 33, scope: !4016)
!4035 = !DILocation(line: 1650, column: 41, scope: !4016)
!4036 = !DILocation(line: 1650, column: 35, scope: !4016)
!4037 = !DILocation(line: 1650, column: 31, scope: !4016)
!4038 = !DILocation(line: 1650, column: 6, scope: !4016)
!4039 = !DILocation(line: 1650, column: 14, scope: !4016)
!4040 = !DILocation(line: 1650, column: 16, scope: !4016)
!4041 = !DILocation(line: 1651, column: 18, scope: !4016)
!4042 = !DILocation(line: 1651, column: 21, scope: !4016)
!4043 = !DILocation(line: 1651, column: 29, scope: !4016)
!4044 = !DILocation(line: 1651, column: 20, scope: !4016)
!4045 = !DILocation(line: 1651, column: 33, scope: !4016)
!4046 = !DILocation(line: 1651, column: 41, scope: !4016)
!4047 = !DILocation(line: 1651, column: 35, scope: !4016)
!4048 = !DILocation(line: 1651, column: 31, scope: !4016)
!4049 = !DILocation(line: 1651, column: 6, scope: !4016)
!4050 = !DILocation(line: 1651, column: 14, scope: !4016)
!4051 = !DILocation(line: 1651, column: 16, scope: !4016)
!4052 = !DILocation(line: 1652, column: 18, scope: !4016)
!4053 = !DILocation(line: 1652, column: 21, scope: !4016)
!4054 = !DILocation(line: 1652, column: 29, scope: !4016)
!4055 = !DILocation(line: 1652, column: 20, scope: !4016)
!4056 = !DILocation(line: 1652, column: 33, scope: !4016)
!4057 = !DILocation(line: 1652, column: 41, scope: !4016)
!4058 = !DILocation(line: 1652, column: 35, scope: !4016)
!4059 = !DILocation(line: 1652, column: 31, scope: !4016)
!4060 = !DILocation(line: 1652, column: 6, scope: !4016)
!4061 = !DILocation(line: 1652, column: 14, scope: !4016)
!4062 = !DILocation(line: 1652, column: 16, scope: !4016)
!4063 = !DILocation(line: 1653, column: 5, scope: !4016)
!4064 = !DILocation(line: 1654, column: 4, scope: !3822)
!4065 = !DILocation(line: 1655, column: 21, scope: !3718)
!4066 = !DILocation(line: 1655, column: 4, scope: !3718)
!4067 = !DILocation(line: 1655, column: 12, scope: !3718)
!4068 = !DILocation(line: 1655, column: 18, scope: !3718)
!4069 = !DILocation(line: 1656, column: 21, scope: !3718)
!4070 = !DILocation(line: 1656, column: 4, scope: !3718)
!4071 = !DILocation(line: 1656, column: 12, scope: !3718)
!4072 = !DILocation(line: 1656, column: 18, scope: !3718)
!4073 = !DILocation(line: 1657, column: 3, scope: !3718)
!4074 = !DILocation(line: 1659, column: 10, scope: !4075)
!4075 = distinct !DILexicalBlock(scope: !3709, file: !1, line: 1658, column: 8)
!4076 = !DILocation(line: 1659, column: 13, scope: !4075)
!4077 = !DILocation(line: 1659, column: 12, scope: !4075)
!4078 = !DILocation(line: 1659, column: 8, scope: !4075)
!4079 = !DILocation(line: 1660, column: 10, scope: !4075)
!4080 = !DILocation(line: 1660, column: 13, scope: !4075)
!4081 = !DILocation(line: 1660, column: 12, scope: !4075)
!4082 = !DILocation(line: 1660, column: 8, scope: !4075)
!4083 = !DILocation(line: 1661, column: 10, scope: !4075)
!4084 = !DILocation(line: 1661, column: 13, scope: !4075)
!4085 = !DILocation(line: 1661, column: 12, scope: !4075)
!4086 = !DILocation(line: 1661, column: 8, scope: !4075)
!4087 = !DILocation(line: 1662, column: 10, scope: !4075)
!4088 = !DILocation(line: 1662, column: 13, scope: !4075)
!4089 = !DILocation(line: 1662, column: 12, scope: !4075)
!4090 = !DILocation(line: 1662, column: 8, scope: !4075)
!4091 = !DILocation(line: 1664, column: 14, scope: !4075)
!4092 = !DILocation(line: 1664, column: 23, scope: !4075)
!4093 = !DILocation(line: 1664, column: 29, scope: !4075)
!4094 = !DILocation(line: 1664, column: 35, scope: !4075)
!4095 = !DILocation(line: 1664, column: 41, scope: !4075)
!4096 = !DILocation(line: 1664, column: 47, scope: !4075)
!4097 = !DILocation(line: 1664, column: 55, scope: !4075)
!4098 = !DILocation(line: 1664, column: 67, scope: !4075)
!4099 = !DILocation(line: 1664, column: 4, scope: !4075)
!4100 = !DILocation(line: 1666, column: 8, scope: !4101)
!4101 = distinct !DILexicalBlock(scope: !4075, file: !1, line: 1666, column: 8)
!4102 = !DILocation(line: 1666, column: 18, scope: !4101)
!4103 = !DILocation(line: 1666, column: 16, scope: !4101)
!4104 = !DILocation(line: 1666, column: 8, scope: !4075)
!4105 = !DILocation(line: 1667, column: 15, scope: !4106)
!4106 = distinct !DILexicalBlock(scope: !4101, file: !1, line: 1666, column: 27)
!4107 = !DILocation(line: 1667, column: 25, scope: !4106)
!4108 = !DILocation(line: 1667, column: 31, scope: !4106)
!4109 = !DILocation(line: 1667, column: 37, scope: !4106)
!4110 = !DILocation(line: 1667, column: 43, scope: !4106)
!4111 = !DILocation(line: 1667, column: 56, scope: !4106)
!4112 = !DILocation(line: 1667, column: 68, scope: !4106)
!4113 = !DILocation(line: 1667, column: 5, scope: !4106)
!4114 = !DILocation(line: 1669, column: 15, scope: !4106)
!4115 = !DILocation(line: 1669, column: 23, scope: !4106)
!4116 = !DILocation(line: 1669, column: 22, scope: !4106)
!4117 = !DILocation(line: 1669, column: 13, scope: !4106)
!4118 = !DILocation(line: 1669, column: 29, scope: !4106)
!4119 = !DILocation(line: 1669, column: 28, scope: !4106)
!4120 = !DILocation(line: 1669, column: 7, scope: !4106)
!4121 = !DILocation(line: 1671, column: 9, scope: !4122)
!4122 = distinct !DILexicalBlock(scope: !4106, file: !1, line: 1671, column: 9)
!4123 = !DILocation(line: 1671, column: 11, scope: !4122)
!4124 = !DILocation(line: 1671, column: 9, scope: !4106)
!4125 = !DILocation(line: 1672, column: 23, scope: !4126)
!4126 = distinct !DILexicalBlock(scope: !4122, file: !1, line: 1671, column: 19)
!4127 = !DILocation(line: 1672, column: 6, scope: !4126)
!4128 = !DILocation(line: 1672, column: 14, scope: !4126)
!4129 = !DILocation(line: 1672, column: 16, scope: !4126)
!4130 = !DILocation(line: 1672, column: 44, scope: !4126)
!4131 = !DILocation(line: 1672, column: 27, scope: !4126)
!4132 = !DILocation(line: 1672, column: 35, scope: !4126)
!4133 = !DILocation(line: 1672, column: 37, scope: !4126)
!4134 = !DILocation(line: 1673, column: 23, scope: !4126)
!4135 = !DILocation(line: 1673, column: 6, scope: !4126)
!4136 = !DILocation(line: 1673, column: 14, scope: !4126)
!4137 = !DILocation(line: 1673, column: 16, scope: !4126)
!4138 = !DILocation(line: 1673, column: 44, scope: !4126)
!4139 = !DILocation(line: 1673, column: 27, scope: !4126)
!4140 = !DILocation(line: 1673, column: 35, scope: !4126)
!4141 = !DILocation(line: 1673, column: 37, scope: !4126)
!4142 = !DILocation(line: 1674, column: 5, scope: !4126)
!4143 = !DILocation(line: 1676, column: 15, scope: !4144)
!4144 = distinct !DILexicalBlock(scope: !4122, file: !1, line: 1675, column: 10)
!4145 = !DILocation(line: 1676, column: 14, scope: !4144)
!4146 = !DILocation(line: 1676, column: 8, scope: !4144)
!4147 = !DILocation(line: 1677, column: 18, scope: !4144)
!4148 = !DILocation(line: 1677, column: 21, scope: !4144)
!4149 = !DILocation(line: 1677, column: 29, scope: !4144)
!4150 = !DILocation(line: 1677, column: 20, scope: !4144)
!4151 = !DILocation(line: 1677, column: 33, scope: !4144)
!4152 = !DILocation(line: 1677, column: 41, scope: !4144)
!4153 = !DILocation(line: 1677, column: 35, scope: !4144)
!4154 = !DILocation(line: 1677, column: 31, scope: !4144)
!4155 = !DILocation(line: 1677, column: 6, scope: !4144)
!4156 = !DILocation(line: 1677, column: 14, scope: !4144)
!4157 = !DILocation(line: 1677, column: 16, scope: !4144)
!4158 = !DILocation(line: 1678, column: 18, scope: !4144)
!4159 = !DILocation(line: 1678, column: 21, scope: !4144)
!4160 = !DILocation(line: 1678, column: 29, scope: !4144)
!4161 = !DILocation(line: 1678, column: 20, scope: !4144)
!4162 = !DILocation(line: 1678, column: 33, scope: !4144)
!4163 = !DILocation(line: 1678, column: 41, scope: !4144)
!4164 = !DILocation(line: 1678, column: 35, scope: !4144)
!4165 = !DILocation(line: 1678, column: 31, scope: !4144)
!4166 = !DILocation(line: 1678, column: 6, scope: !4144)
!4167 = !DILocation(line: 1678, column: 14, scope: !4144)
!4168 = !DILocation(line: 1678, column: 16, scope: !4144)
!4169 = !DILocation(line: 1679, column: 18, scope: !4144)
!4170 = !DILocation(line: 1679, column: 21, scope: !4144)
!4171 = !DILocation(line: 1679, column: 29, scope: !4144)
!4172 = !DILocation(line: 1679, column: 20, scope: !4144)
!4173 = !DILocation(line: 1679, column: 33, scope: !4144)
!4174 = !DILocation(line: 1679, column: 41, scope: !4144)
!4175 = !DILocation(line: 1679, column: 35, scope: !4144)
!4176 = !DILocation(line: 1679, column: 31, scope: !4144)
!4177 = !DILocation(line: 1679, column: 6, scope: !4144)
!4178 = !DILocation(line: 1679, column: 14, scope: !4144)
!4179 = !DILocation(line: 1679, column: 16, scope: !4144)
!4180 = !DILocation(line: 1680, column: 18, scope: !4144)
!4181 = !DILocation(line: 1680, column: 21, scope: !4144)
!4182 = !DILocation(line: 1680, column: 29, scope: !4144)
!4183 = !DILocation(line: 1680, column: 20, scope: !4144)
!4184 = !DILocation(line: 1680, column: 33, scope: !4144)
!4185 = !DILocation(line: 1680, column: 41, scope: !4144)
!4186 = !DILocation(line: 1680, column: 35, scope: !4144)
!4187 = !DILocation(line: 1680, column: 31, scope: !4144)
!4188 = !DILocation(line: 1680, column: 6, scope: !4144)
!4189 = !DILocation(line: 1680, column: 14, scope: !4144)
!4190 = !DILocation(line: 1680, column: 16, scope: !4144)
!4191 = !DILocation(line: 1682, column: 4, scope: !4106)
!4192 = !DILocation(line: 1684, column: 2, scope: !3605)
!4193 = !DILocalVariable(name: "intpol", scope: !4194, file: !1, line: 1686, type: !4195)
!4194 = distinct !DILexicalBlock(scope: !3600, file: !1, line: 1685, column: 7)
!4195 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !25)
!4196 = !DILocation(line: 1686, column: 13, scope: !4194)
!4197 = !DILocation(line: 1686, column: 22, scope: !4194)
!4198 = !DILocation(line: 1686, column: 27, scope: !4194)
!4199 = !DILocation(line: 1686, column: 35, scope: !4194)
!4200 = !DILocation(line: 1687, column: 7, scope: !4201)
!4201 = distinct !DILexicalBlock(scope: !4194, file: !1, line: 1687, column: 7)
!4202 = !DILocation(line: 1687, column: 7, scope: !4194)
!4203 = !DILocation(line: 1689, column: 8, scope: !4204)
!4204 = distinct !DILexicalBlock(scope: !4205, file: !1, line: 1689, column: 8)
!4205 = distinct !DILexicalBlock(scope: !4201, file: !1, line: 1687, column: 15)
!4206 = !DILocation(line: 1689, column: 22, scope: !4204)
!4207 = !DILocation(line: 1689, column: 28, scope: !4204)
!4208 = !DILocation(line: 1689, column: 20, scope: !4204)
!4209 = !DILocation(line: 1689, column: 13, scope: !4204)
!4210 = !DILocation(line: 1689, column: 8, scope: !4205)
!4211 = !DILocation(line: 1689, column: 45, scope: !4204)
!4212 = !DILocation(line: 1689, column: 51, scope: !4204)
!4213 = !DILocation(line: 1689, column: 43, scope: !4204)
!4214 = !DILocation(line: 1689, column: 36, scope: !4204)
!4215 = !DILocation(line: 1689, column: 31, scope: !4204)
!4216 = !DILocation(line: 1690, column: 8, scope: !4217)
!4217 = distinct !DILexicalBlock(scope: !4205, file: !1, line: 1690, column: 8)
!4218 = !DILocation(line: 1690, column: 22, scope: !4217)
!4219 = !DILocation(line: 1690, column: 28, scope: !4217)
!4220 = !DILocation(line: 1690, column: 20, scope: !4217)
!4221 = !DILocation(line: 1690, column: 13, scope: !4217)
!4222 = !DILocation(line: 1690, column: 8, scope: !4205)
!4223 = !DILocation(line: 1690, column: 45, scope: !4217)
!4224 = !DILocation(line: 1690, column: 51, scope: !4217)
!4225 = !DILocation(line: 1690, column: 43, scope: !4217)
!4226 = !DILocation(line: 1690, column: 36, scope: !4217)
!4227 = !DILocation(line: 1690, column: 31, scope: !4217)
!4228 = !DILocation(line: 1691, column: 3, scope: !4205)
!4229 = !DILocation(line: 1693, column: 7, scope: !4230)
!4230 = distinct !DILexicalBlock(scope: !4194, file: !1, line: 1693, column: 7)
!4231 = !DILocation(line: 1693, column: 15, scope: !4230)
!4232 = !DILocation(line: 1693, column: 19, scope: !4230)
!4233 = !DILocation(line: 1693, column: 23, scope: !4230)
!4234 = !DILocation(line: 1693, column: 28, scope: !4230)
!4235 = !DILocation(line: 1693, column: 36, scope: !4230)
!4236 = !DILocation(line: 1693, column: 52, scope: !4230)
!4237 = !DILocation(line: 1693, column: 7, scope: !4194)
!4238 = !DILocation(line: 1694, column: 14, scope: !4239)
!4239 = distinct !DILexicalBlock(scope: !4230, file: !1, line: 1693, column: 57)
!4240 = !DILocation(line: 1694, column: 20, scope: !4239)
!4241 = !DILocation(line: 1694, column: 23, scope: !4239)
!4242 = !DILocation(line: 1694, column: 22, scope: !4239)
!4243 = !DILocation(line: 1694, column: 29, scope: !4239)
!4244 = !DILocation(line: 1694, column: 32, scope: !4239)
!4245 = !DILocation(line: 1694, column: 31, scope: !4239)
!4246 = !DILocation(line: 1694, column: 38, scope: !4239)
!4247 = !DILocation(line: 1694, column: 41, scope: !4239)
!4248 = !DILocation(line: 1694, column: 40, scope: !4239)
!4249 = !DILocation(line: 1694, column: 47, scope: !4239)
!4250 = !DILocation(line: 1694, column: 50, scope: !4239)
!4251 = !DILocation(line: 1694, column: 49, scope: !4239)
!4252 = !DILocation(line: 1694, column: 56, scope: !4239)
!4253 = !DILocation(line: 1694, column: 64, scope: !4239)
!4254 = !DILocation(line: 1694, column: 76, scope: !4239)
!4255 = !DILocation(line: 1694, column: 4, scope: !4239)
!4256 = !DILocation(line: 1695, column: 10, scope: !4239)
!4257 = !DILocation(line: 1695, column: 18, scope: !4239)
!4258 = !DILocation(line: 1695, column: 21, scope: !4239)
!4259 = !DILocation(line: 1695, column: 29, scope: !4239)
!4260 = !DILocation(line: 1695, column: 20, scope: !4239)
!4261 = !DILocation(line: 1695, column: 32, scope: !4239)
!4262 = !DILocation(line: 1695, column: 40, scope: !4239)
!4263 = !DILocation(line: 1695, column: 31, scope: !4239)
!4264 = !DILocation(line: 1695, column: 8, scope: !4239)
!4265 = !DILocation(line: 1696, column: 14, scope: !4239)
!4266 = !DILocation(line: 1696, column: 20, scope: !4239)
!4267 = !DILocation(line: 1696, column: 23, scope: !4239)
!4268 = !DILocation(line: 1696, column: 22, scope: !4239)
!4269 = !DILocation(line: 1696, column: 28, scope: !4239)
!4270 = !DILocation(line: 1696, column: 27, scope: !4239)
!4271 = !DILocation(line: 1696, column: 36, scope: !4239)
!4272 = !DILocation(line: 1696, column: 39, scope: !4239)
!4273 = !DILocation(line: 1696, column: 38, scope: !4239)
!4274 = !DILocation(line: 1696, column: 44, scope: !4239)
!4275 = !DILocation(line: 1696, column: 43, scope: !4239)
!4276 = !DILocation(line: 1696, column: 52, scope: !4239)
!4277 = !DILocation(line: 1696, column: 55, scope: !4239)
!4278 = !DILocation(line: 1696, column: 54, scope: !4239)
!4279 = !DILocation(line: 1696, column: 60, scope: !4239)
!4280 = !DILocation(line: 1696, column: 59, scope: !4239)
!4281 = !DILocation(line: 1696, column: 68, scope: !4239)
!4282 = !DILocation(line: 1696, column: 71, scope: !4239)
!4283 = !DILocation(line: 1696, column: 70, scope: !4239)
!4284 = !DILocation(line: 1696, column: 76, scope: !4239)
!4285 = !DILocation(line: 1696, column: 75, scope: !4239)
!4286 = !DILocation(line: 1696, column: 91, scope: !4239)
!4287 = !DILocation(line: 1696, column: 103, scope: !4239)
!4288 = !DILocation(line: 1696, column: 4, scope: !4239)
!4289 = !DILocation(line: 1697, column: 15, scope: !4239)
!4290 = !DILocation(line: 1697, column: 25, scope: !4239)
!4291 = !DILocation(line: 1697, column: 18, scope: !4239)
!4292 = !DILocation(line: 1697, column: 35, scope: !4239)
!4293 = !DILocation(line: 1697, column: 28, scope: !4239)
!4294 = !DILocation(line: 1697, column: 8, scope: !4239)
!4295 = !DILocation(line: 1698, column: 14, scope: !4239)
!4296 = !DILocation(line: 1698, column: 20, scope: !4239)
!4297 = !DILocation(line: 1698, column: 23, scope: !4239)
!4298 = !DILocation(line: 1698, column: 22, scope: !4239)
!4299 = !DILocation(line: 1698, column: 28, scope: !4239)
!4300 = !DILocation(line: 1698, column: 27, scope: !4239)
!4301 = !DILocation(line: 1698, column: 36, scope: !4239)
!4302 = !DILocation(line: 1698, column: 39, scope: !4239)
!4303 = !DILocation(line: 1698, column: 38, scope: !4239)
!4304 = !DILocation(line: 1698, column: 44, scope: !4239)
!4305 = !DILocation(line: 1698, column: 43, scope: !4239)
!4306 = !DILocation(line: 1698, column: 52, scope: !4239)
!4307 = !DILocation(line: 1698, column: 55, scope: !4239)
!4308 = !DILocation(line: 1698, column: 54, scope: !4239)
!4309 = !DILocation(line: 1698, column: 60, scope: !4239)
!4310 = !DILocation(line: 1698, column: 59, scope: !4239)
!4311 = !DILocation(line: 1698, column: 68, scope: !4239)
!4312 = !DILocation(line: 1698, column: 71, scope: !4239)
!4313 = !DILocation(line: 1698, column: 70, scope: !4239)
!4314 = !DILocation(line: 1698, column: 76, scope: !4239)
!4315 = !DILocation(line: 1698, column: 75, scope: !4239)
!4316 = !DILocation(line: 1698, column: 91, scope: !4239)
!4317 = !DILocation(line: 1698, column: 103, scope: !4239)
!4318 = !DILocation(line: 1698, column: 4, scope: !4239)
!4319 = !DILocation(line: 1699, column: 15, scope: !4239)
!4320 = !DILocation(line: 1699, column: 25, scope: !4239)
!4321 = !DILocation(line: 1699, column: 18, scope: !4239)
!4322 = !DILocation(line: 1699, column: 35, scope: !4239)
!4323 = !DILocation(line: 1699, column: 28, scope: !4239)
!4324 = !DILocation(line: 1699, column: 8, scope: !4239)
!4325 = !DILocation(line: 1702, column: 21, scope: !4239)
!4326 = !DILocation(line: 1702, column: 26, scope: !4239)
!4327 = !DILocation(line: 1702, column: 25, scope: !4239)
!4328 = !DILocation(line: 1702, column: 4, scope: !4239)
!4329 = !DILocation(line: 1702, column: 12, scope: !4239)
!4330 = !DILocation(line: 1702, column: 18, scope: !4239)
!4331 = !DILocation(line: 1703, column: 21, scope: !4239)
!4332 = !DILocation(line: 1703, column: 26, scope: !4239)
!4333 = !DILocation(line: 1703, column: 25, scope: !4239)
!4334 = !DILocation(line: 1703, column: 4, scope: !4239)
!4335 = !DILocation(line: 1703, column: 12, scope: !4239)
!4336 = !DILocation(line: 1703, column: 18, scope: !4239)
!4337 = !DILocation(line: 1704, column: 3, scope: !4239)
!4338 = !DILocation(line: 1706, column: 14, scope: !4230)
!4339 = !DILocation(line: 1706, column: 20, scope: !4230)
!4340 = !DILocation(line: 1706, column: 23, scope: !4230)
!4341 = !DILocation(line: 1706, column: 22, scope: !4230)
!4342 = !DILocation(line: 1706, column: 29, scope: !4230)
!4343 = !DILocation(line: 1706, column: 32, scope: !4230)
!4344 = !DILocation(line: 1706, column: 31, scope: !4230)
!4345 = !DILocation(line: 1706, column: 38, scope: !4230)
!4346 = !DILocation(line: 1706, column: 41, scope: !4230)
!4347 = !DILocation(line: 1706, column: 40, scope: !4230)
!4348 = !DILocation(line: 1706, column: 47, scope: !4230)
!4349 = !DILocation(line: 1706, column: 50, scope: !4230)
!4350 = !DILocation(line: 1706, column: 49, scope: !4230)
!4351 = !DILocation(line: 1706, column: 56, scope: !4230)
!4352 = !DILocation(line: 1706, column: 64, scope: !4230)
!4353 = !DILocation(line: 1706, column: 76, scope: !4230)
!4354 = !DILocation(line: 1706, column: 4, scope: !4230)
!4355 = !DILocation(line: 1709, column: 6, scope: !4356)
!4356 = distinct !DILexicalBlock(scope: !2811, file: !1, line: 1709, column: 6)
!4357 = !DILocation(line: 1709, column: 11, scope: !4356)
!4358 = !DILocation(line: 1709, column: 19, scope: !4356)
!4359 = !DILocation(line: 1709, column: 6, scope: !2811)
!4360 = !DILocation(line: 1710, column: 30, scope: !4361)
!4361 = distinct !DILexicalBlock(scope: !4356, file: !1, line: 1709, column: 36)
!4362 = !DILocation(line: 1710, column: 38, scope: !4361)
!4363 = !DILocation(line: 1710, column: 51, scope: !4361)
!4364 = !DILocation(line: 1710, column: 59, scope: !4361)
!4365 = !DILocation(line: 1710, column: 63, scope: !4361)
!4366 = !DILocation(line: 1710, column: 71, scope: !4361)
!4367 = !DILocation(line: 1710, column: 75, scope: !4361)
!4368 = !DILocation(line: 1710, column: 83, scope: !4361)
!4369 = !DILocation(line: 1710, column: 43, scope: !4361)
!4370 = !DILocation(line: 1710, column: 41, scope: !4361)
!4371 = !DILocation(line: 1710, column: 16, scope: !4361)
!4372 = !DILocation(line: 1710, column: 24, scope: !4361)
!4373 = !DILocation(line: 1710, column: 28, scope: !4361)
!4374 = !DILocation(line: 1710, column: 3, scope: !4361)
!4375 = !DILocation(line: 1710, column: 11, scope: !4361)
!4376 = !DILocation(line: 1710, column: 14, scope: !4361)
!4377 = !DILocation(line: 1711, column: 2, scope: !4361)
!4378 = !DILocation(line: 1713, column: 17, scope: !4379)
!4379 = distinct !DILexicalBlock(scope: !4356, file: !1, line: 1712, column: 7)
!4380 = !DILocation(line: 1713, column: 25, scope: !4379)
!4381 = !DILocation(line: 1713, column: 3, scope: !4379)
!4382 = !DILocation(line: 1713, column: 11, scope: !4379)
!4383 = !DILocation(line: 1713, column: 15, scope: !4379)
!4384 = !DILocation(line: 1716, column: 6, scope: !4385)
!4385 = distinct !DILexicalBlock(scope: !2811, file: !1, line: 1716, column: 6)
!4386 = !DILocation(line: 1716, column: 11, scope: !4385)
!4387 = !DILocation(line: 1716, column: 16, scope: !4385)
!4388 = !DILocation(line: 1716, column: 6, scope: !2811)
!4389 = !DILocation(line: 1716, column: 49, scope: !4385)
!4390 = !DILocation(line: 1716, column: 57, scope: !4385)
!4391 = !DILocation(line: 1716, column: 48, scope: !4385)
!4392 = !DILocation(line: 1716, column: 32, scope: !4385)
!4393 = !DILocation(line: 1716, column: 40, scope: !4385)
!4394 = !DILocation(line: 1716, column: 42, scope: !4385)
!4395 = !DILocation(line: 1718, column: 10, scope: !4396)
!4396 = distinct !DILexicalBlock(scope: !2811, file: !1, line: 1718, column: 7)
!4397 = !DILocation(line: 1718, column: 8, scope: !4396)
!4398 = !DILocation(line: 1718, column: 15, scope: !4396)
!4399 = !DILocation(line: 1718, column: 30, scope: !4396)
!4400 = !DILocation(line: 1718, column: 34, scope: !4396)
!4401 = !DILocation(line: 1718, column: 40, scope: !4396)
!4402 = !DILocation(line: 1718, column: 46, scope: !4396)
!4403 = !DILocation(line: 1718, column: 7, scope: !2811)
!4404 = !DILocation(line: 1719, column: 17, scope: !4405)
!4405 = distinct !DILexicalBlock(scope: !4396, file: !1, line: 1718, column: 61)
!4406 = !DILocation(line: 1719, column: 23, scope: !4405)
!4407 = !DILocation(line: 1719, column: 25, scope: !4405)
!4408 = !DILocation(line: 1719, column: 31, scope: !4405)
!4409 = !DILocation(line: 1719, column: 24, scope: !4405)
!4410 = !DILocation(line: 1719, column: 3, scope: !4405)
!4411 = !DILocation(line: 1719, column: 9, scope: !4405)
!4412 = !DILocation(line: 1719, column: 13, scope: !4405)
!4413 = !DILocation(line: 1720, column: 2, scope: !4405)
!4414 = !DILocation(line: 1722, column: 6, scope: !4415)
!4415 = distinct !DILexicalBlock(scope: !2811, file: !1, line: 1722, column: 6)
!4416 = !DILocation(line: 1722, column: 14, scope: !4415)
!4417 = !DILocation(line: 1722, column: 18, scope: !4415)
!4418 = !DILocation(line: 1722, column: 22, scope: !4415)
!4419 = !DILocation(line: 1722, column: 27, scope: !4415)
!4420 = !DILocation(line: 1722, column: 35, scope: !4415)
!4421 = !DILocation(line: 1722, column: 6, scope: !2811)
!4422 = !DILocation(line: 1730, column: 26, scope: !4423)
!4423 = distinct !DILexicalBlock(scope: !4415, file: !1, line: 1722, column: 53)
!4424 = !DILocation(line: 1730, column: 34, scope: !4423)
!4425 = !DILocation(line: 1730, column: 37, scope: !4423)
!4426 = !DILocation(line: 1730, column: 24, scope: !4423)
!4427 = !DILocation(line: 1730, column: 3, scope: !4423)
!4428 = !DILocation(line: 1730, column: 11, scope: !4423)
!4429 = !DILocation(line: 1730, column: 18, scope: !4423)
!4430 = !DILocation(line: 1731, column: 25, scope: !4423)
!4431 = !DILocation(line: 1731, column: 33, scope: !4423)
!4432 = !DILocation(line: 1731, column: 36, scope: !4423)
!4433 = !DILocation(line: 1731, column: 23, scope: !4423)
!4434 = !DILocation(line: 1731, column: 3, scope: !4423)
!4435 = !DILocation(line: 1731, column: 11, scope: !4423)
!4436 = !DILocation(line: 1731, column: 18, scope: !4423)
!4437 = !DILocation(line: 1732, column: 25, scope: !4423)
!4438 = !DILocation(line: 1732, column: 33, scope: !4423)
!4439 = !DILocation(line: 1732, column: 36, scope: !4423)
!4440 = !DILocation(line: 1732, column: 23, scope: !4423)
!4441 = !DILocation(line: 1732, column: 3, scope: !4423)
!4442 = !DILocation(line: 1732, column: 11, scope: !4423)
!4443 = !DILocation(line: 1732, column: 18, scope: !4423)
!4444 = !DILocation(line: 1733, column: 2, scope: !4423)
!4445 = !DILocation(line: 1737, column: 6, scope: !4446)
!4446 = distinct !DILexicalBlock(scope: !2811, file: !1, line: 1737, column: 6)
!4447 = !DILocation(line: 1737, column: 14, scope: !4446)
!4448 = !DILocation(line: 1737, column: 16, scope: !4446)
!4449 = !DILocation(line: 1737, column: 23, scope: !4446)
!4450 = !DILocation(line: 1737, column: 26, scope: !4446)
!4451 = !DILocation(line: 1737, column: 34, scope: !4446)
!4452 = !DILocation(line: 1737, column: 36, scope: !4446)
!4453 = !DILocation(line: 1737, column: 43, scope: !4446)
!4454 = !DILocation(line: 1737, column: 48, scope: !4446)
!4455 = !DILocation(line: 1737, column: 53, scope: !4446)
!4456 = !DILocation(line: 1737, column: 61, scope: !4446)
!4457 = !DILocation(line: 1737, column: 6, scope: !2811)
!4458 = !DILocation(line: 1738, column: 14, scope: !4459)
!4459 = distinct !DILexicalBlock(scope: !4446, file: !1, line: 1737, column: 79)
!4460 = !DILocation(line: 1738, column: 22, scope: !4459)
!4461 = !DILocation(line: 1738, column: 33, scope: !4459)
!4462 = !DILocation(line: 1738, column: 41, scope: !4459)
!4463 = !DILocation(line: 1738, column: 31, scope: !4459)
!4464 = !DILocation(line: 1738, column: 3, scope: !4459)
!4465 = !DILocation(line: 1739, column: 2, scope: !4459)
!4466 = !DILocation(line: 1741, column: 6, scope: !4467)
!4467 = distinct !DILexicalBlock(scope: !2811, file: !1, line: 1741, column: 6)
!4468 = !DILocation(line: 1741, column: 6, scope: !2811)
!4469 = !DILocation(line: 1742, column: 31, scope: !4467)
!4470 = !DILocation(line: 1742, column: 36, scope: !4467)
!4471 = !DILocation(line: 1742, column: 42, scope: !4467)
!4472 = !DILocation(line: 1742, column: 3, scope: !4467)
!4473 = !DILocation(line: 1744, column: 2, scope: !2811)
!4474 = !DILocation(line: 1744, column: 2, scope: !4475)
!4475 = distinct !DILexicalBlock(scope: !2811, file: !1, line: 1744, column: 2)
!4476 = !DILocation(line: 1744, column: 2, scope: !4477)
!4477 = distinct !DILexicalBlock(scope: !4478, file: !1, line: 1744, column: 2)
!4478 = distinct !DILexicalBlock(scope: !4475, file: !1, line: 1744, column: 2)
!4479 = !DILocation(line: 1744, column: 2, scope: !4478)
!4480 = !DILocation(line: 1744, column: 2, scope: !4481)
!4481 = distinct !DILexicalBlock(scope: !4478, file: !1, line: 1744, column: 2)
!4482 = !DILocation(line: 1744, column: 2, scope: !4483)
!4483 = distinct !DILexicalBlock(scope: !4478, file: !1, line: 1744, column: 2)
!4484 = !DILocation(line: 1744, column: 2, scope: !4485)
!4485 = distinct !DILexicalBlock(scope: !2811, file: !1, line: 1744, column: 2)
!4486 = !DILocalVariable(name: "_hsv", scope: !4487, file: !1, line: 1744, type: !339)
!4487 = distinct !DILexicalBlock(scope: !4485, file: !1, line: 1744, column: 2)
!4488 = !DILocation(line: 1744, column: 2, scope: !4487)
!4489 = !DILocation(line: 1746, column: 9, scope: !2811)
!4490 = !DILocation(line: 1746, column: 2, scope: !2811)
!4491 = !DILocation(line: 1747, column: 1, scope: !2811)
!4492 = distinct !DISubprogram(name: "copy_v2_v2", scope: !4493, file: !4493, line: 58, type: !4494, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1638)
!4493 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_vector_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4494 = !DISubroutineType(types: !4495)
!4495 = !{null, !52, !1621}
!4496 = !DILocalVariable(name: "r", arg: 1, scope: !4492, file: !4493, line: 58, type: !52)
!4497 = !DILocation(line: 58, column: 31, scope: !4492)
!4498 = !DILocalVariable(name: "a", arg: 2, scope: !4492, file: !4493, line: 58, type: !1621)
!4499 = !DILocation(line: 58, column: 49, scope: !4492)
!4500 = !DILocation(line: 60, column: 9, scope: !4492)
!4501 = !DILocation(line: 60, column: 2, scope: !4492)
!4502 = !DILocation(line: 60, column: 7, scope: !4492)
!4503 = !DILocation(line: 61, column: 9, scope: !4492)
!4504 = !DILocation(line: 61, column: 2, scope: !4492)
!4505 = !DILocation(line: 61, column: 7, scope: !4492)
!4506 = !DILocation(line: 62, column: 1, scope: !4492)
!4507 = distinct !DISubprogram(name: "imagewraposa_aniso", scope: !1, file: !1, line: 917, type: !4508, scopeLine: 918, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1638)
!4508 = !DISubroutineType(types: !4509)
!4509 = !{!25, !142, !1619, !34, !1621, !52, !52, !1623, !1635}
!4510 = !DILocalVariable(name: "tex", arg: 1, scope: !4507, file: !1, line: 917, type: !142)
!4511 = !DILocation(line: 917, column: 36, scope: !4507)
!4512 = !DILocalVariable(name: "ima", arg: 2, scope: !4507, file: !1, line: 917, type: !1619)
!4513 = !DILocation(line: 917, column: 48, scope: !4507)
!4514 = !DILocalVariable(name: "ibuf", arg: 3, scope: !4507, file: !1, line: 917, type: !34)
!4515 = !DILocation(line: 917, column: 60, scope: !4507)
!4516 = !DILocalVariable(name: "texvec", arg: 4, scope: !4507, file: !1, line: 917, type: !1621)
!4517 = !DILocation(line: 917, column: 78, scope: !4507)
!4518 = !DILocalVariable(name: "dxt", arg: 5, scope: !4507, file: !1, line: 917, type: !52)
!4519 = !DILocation(line: 917, column: 95, scope: !4507)
!4520 = !DILocalVariable(name: "dyt", arg: 6, scope: !4507, file: !1, line: 917, type: !52)
!4521 = !DILocation(line: 917, column: 109, scope: !4507)
!4522 = !DILocalVariable(name: "texres", arg: 7, scope: !4507, file: !1, line: 917, type: !1623)
!4523 = !DILocation(line: 917, column: 128, scope: !4507)
!4524 = !DILocalVariable(name: "pool", arg: 8, scope: !4507, file: !1, line: 917, type: !1635)
!4525 = !DILocation(line: 917, column: 154, scope: !4507)
!4526 = !DILocalVariable(name: "texr", scope: !4507, file: !1, line: 919, type: !1624)
!4527 = !DILocation(line: 919, column: 12, scope: !4507)
!4528 = !DILocalVariable(name: "fx", scope: !4507, file: !1, line: 920, type: !26)
!4529 = !DILocation(line: 920, column: 8, scope: !4507)
!4530 = !DILocalVariable(name: "fy", scope: !4507, file: !1, line: 920, type: !26)
!4531 = !DILocation(line: 920, column: 12, scope: !4507)
!4532 = !DILocalVariable(name: "minx", scope: !4507, file: !1, line: 920, type: !26)
!4533 = !DILocation(line: 920, column: 16, scope: !4507)
!4534 = !DILocalVariable(name: "maxx", scope: !4507, file: !1, line: 920, type: !26)
!4535 = !DILocation(line: 920, column: 22, scope: !4507)
!4536 = !DILocalVariable(name: "miny", scope: !4507, file: !1, line: 920, type: !26)
!4537 = !DILocation(line: 920, column: 28, scope: !4507)
!4538 = !DILocalVariable(name: "maxy", scope: !4507, file: !1, line: 920, type: !26)
!4539 = !DILocation(line: 920, column: 34, scope: !4507)
!4540 = !DILocalVariable(name: "maxd", scope: !4507, file: !1, line: 921, type: !26)
!4541 = !DILocation(line: 921, column: 8, scope: !4507)
!4542 = !DILocalVariable(name: "val1", scope: !4507, file: !1, line: 921, type: !26)
!4543 = !DILocation(line: 921, column: 14, scope: !4507)
!4544 = !DILocalVariable(name: "val2", scope: !4507, file: !1, line: 921, type: !26)
!4545 = !DILocation(line: 921, column: 20, scope: !4507)
!4546 = !DILocalVariable(name: "val3", scope: !4507, file: !1, line: 921, type: !26)
!4547 = !DILocation(line: 921, column: 26, scope: !4507)
!4548 = !DILocalVariable(name: "curmap", scope: !4507, file: !1, line: 922, type: !25)
!4549 = !DILocation(line: 922, column: 6, scope: !4507)
!4550 = !DILocalVariable(name: "retval", scope: !4507, file: !1, line: 922, type: !25)
!4551 = !DILocation(line: 922, column: 14, scope: !4507)
!4552 = !DILocalVariable(name: "intpol", scope: !4507, file: !1, line: 922, type: !25)
!4553 = !DILocation(line: 922, column: 22, scope: !4507)
!4554 = !DILocalVariable(name: "extflag", scope: !4507, file: !1, line: 922, type: !25)
!4555 = !DILocation(line: 922, column: 30, scope: !4507)
!4556 = !DILocalVariable(name: "AFD", scope: !4507, file: !1, line: 923, type: !121)
!4557 = !DILocation(line: 923, column: 11, scope: !4507)
!4558 = !DILocalVariable(name: "filterfunc", scope: !4507, file: !1, line: 925, type: !4559)
!4559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4560, size: 64)
!4560 = !DISubroutineType(types: !4561)
!4561 = !{null, !1623, !34, !26, !26, !120}
!4562 = !DILocation(line: 925, column: 9, scope: !4507)
!4563 = !DILocation(line: 926, column: 10, scope: !4507)
!4564 = !DILocation(line: 926, column: 15, scope: !4507)
!4565 = !DILocation(line: 926, column: 2, scope: !4507)
!4566 = !DILocation(line: 928, column: 15, scope: !4567)
!4567 = distinct !DILexicalBlock(scope: !4507, file: !1, line: 926, column: 26)
!4568 = !DILocation(line: 929, column: 4, scope: !4567)
!4569 = !DILocation(line: 931, column: 15, scope: !4567)
!4570 = !DILocation(line: 932, column: 4, scope: !4567)
!4571 = !DILocation(line: 935, column: 15, scope: !4567)
!4572 = !DILocation(line: 936, column: 2, scope: !4567)
!4573 = !DILocation(line: 938, column: 55, scope: !4507)
!4574 = !DILocation(line: 938, column: 63, scope: !4507)
!4575 = !DILocation(line: 938, column: 66, scope: !4507)
!4576 = !DILocation(line: 938, column: 42, scope: !4507)
!4577 = !DILocation(line: 938, column: 50, scope: !4507)
!4578 = !DILocation(line: 938, column: 53, scope: !4507)
!4579 = !DILocation(line: 938, column: 29, scope: !4507)
!4580 = !DILocation(line: 938, column: 37, scope: !4507)
!4581 = !DILocation(line: 938, column: 40, scope: !4507)
!4582 = !DILocation(line: 938, column: 16, scope: !4507)
!4583 = !DILocation(line: 938, column: 24, scope: !4507)
!4584 = !DILocation(line: 938, column: 27, scope: !4507)
!4585 = !DILocation(line: 938, column: 2, scope: !4507)
!4586 = !DILocation(line: 938, column: 10, scope: !4507)
!4587 = !DILocation(line: 938, column: 14, scope: !4507)
!4588 = !DILocation(line: 941, column: 11, scope: !4507)
!4589 = !DILocation(line: 941, column: 19, scope: !4507)
!4590 = !DILocation(line: 941, column: 9, scope: !4507)
!4591 = !DILocation(line: 944, column: 6, scope: !4592)
!4592 = distinct !DILexicalBlock(scope: !4507, file: !1, line: 944, column: 6)
!4593 = !DILocation(line: 944, column: 10, scope: !4592)
!4594 = !DILocation(line: 944, column: 17, scope: !4592)
!4595 = !DILocation(line: 944, column: 20, scope: !4592)
!4596 = !DILocation(line: 944, column: 23, scope: !4592)
!4597 = !DILocation(line: 944, column: 6, scope: !4507)
!4598 = !DILocation(line: 944, column: 38, scope: !4592)
!4599 = !DILocation(line: 944, column: 31, scope: !4592)
!4600 = !DILocation(line: 946, column: 6, scope: !4601)
!4601 = distinct !DILexicalBlock(scope: !4507, file: !1, line: 946, column: 6)
!4602 = !DILocation(line: 946, column: 6, scope: !4507)
!4603 = !DILocation(line: 947, column: 12, scope: !4604)
!4604 = distinct !DILexicalBlock(scope: !4605, file: !1, line: 947, column: 7)
!4605 = distinct !DILexicalBlock(scope: !4601, file: !1, line: 946, column: 11)
!4606 = !DILocation(line: 947, column: 20, scope: !4604)
!4607 = !DILocation(line: 947, column: 39, scope: !4604)
!4608 = !DILocation(line: 947, column: 69, scope: !4604)
!4609 = !DILocation(line: 947, column: 43, scope: !4604)
!4610 = !DILocation(line: 947, column: 7, scope: !4605)
!4611 = !DILocation(line: 948, column: 11, scope: !4612)
!4612 = distinct !DILexicalBlock(scope: !4604, file: !1, line: 947, column: 75)
!4613 = !DILocation(line: 948, column: 4, scope: !4612)
!4614 = !DILocation(line: 950, column: 38, scope: !4605)
!4615 = !DILocation(line: 950, column: 44, scope: !4605)
!4616 = !DILocation(line: 950, column: 49, scope: !4605)
!4617 = !DILocation(line: 950, column: 56, scope: !4605)
!4618 = !DILocation(line: 950, column: 10, scope: !4605)
!4619 = !DILocation(line: 950, column: 8, scope: !4605)
!4620 = !DILocation(line: 951, column: 2, scope: !4605)
!4621 = !DILocation(line: 953, column: 7, scope: !4622)
!4622 = distinct !DILexicalBlock(scope: !4507, file: !1, line: 953, column: 6)
!4623 = !DILocation(line: 953, column: 12, scope: !4622)
!4624 = !DILocation(line: 953, column: 21, scope: !4622)
!4625 = !DILocation(line: 953, column: 26, scope: !4622)
!4626 = !DILocation(line: 953, column: 32, scope: !4622)
!4627 = !DILocation(line: 953, column: 37, scope: !4622)
!4628 = !DILocation(line: 953, column: 46, scope: !4622)
!4629 = !DILocation(line: 953, column: 50, scope: !4622)
!4630 = !DILocation(line: 953, column: 56, scope: !4622)
!4631 = !DILocation(line: 953, column: 67, scope: !4622)
!4632 = !DILocation(line: 953, column: 6, scope: !4507)
!4633 = !DILocation(line: 954, column: 7, scope: !4634)
!4634 = distinct !DILexicalBlock(scope: !4635, file: !1, line: 954, column: 7)
!4635 = distinct !DILexicalBlock(scope: !4622, file: !1, line: 953, column: 78)
!4636 = !DILocation(line: 954, column: 7, scope: !4635)
!4637 = !DILocation(line: 955, column: 32, scope: !4634)
!4638 = !DILocation(line: 955, column: 37, scope: !4634)
!4639 = !DILocation(line: 955, column: 43, scope: !4634)
!4640 = !DILocation(line: 955, column: 4, scope: !4634)
!4641 = !DILocation(line: 956, column: 10, scope: !4635)
!4642 = !DILocation(line: 956, column: 3, scope: !4635)
!4643 = !DILocation(line: 959, column: 6, scope: !4644)
!4644 = distinct !DILexicalBlock(scope: !4507, file: !1, line: 959, column: 6)
!4645 = !DILocation(line: 959, column: 6, scope: !4507)
!4646 = !DILocation(line: 960, column: 3, scope: !4647)
!4647 = distinct !DILexicalBlock(scope: !4644, file: !1, line: 959, column: 11)
!4648 = !DILocation(line: 960, column: 8, scope: !4647)
!4649 = !DILocation(line: 960, column: 13, scope: !4647)
!4650 = !DILocation(line: 961, column: 2, scope: !4647)
!4651 = !DILocation(line: 964, column: 20, scope: !4507)
!4652 = !DILocation(line: 964, column: 25, scope: !4507)
!4653 = !DILocation(line: 964, column: 2, scope: !4507)
!4654 = !DILocation(line: 966, column: 6, scope: !4655)
!4655 = distinct !DILexicalBlock(scope: !4507, file: !1, line: 966, column: 6)
!4656 = !DILocation(line: 966, column: 6, scope: !4507)
!4657 = !DILocation(line: 967, column: 8, scope: !4658)
!4658 = distinct !DILexicalBlock(scope: !4659, file: !1, line: 967, column: 7)
!4659 = distinct !DILexicalBlock(scope: !4655, file: !1, line: 966, column: 11)
!4660 = !DILocation(line: 967, column: 13, scope: !4658)
!4661 = !DILocation(line: 967, column: 21, scope: !4658)
!4662 = !DILocation(line: 967, column: 37, scope: !4658)
!4663 = !DILocation(line: 967, column: 41, scope: !4658)
!4664 = !DILocation(line: 967, column: 46, scope: !4658)
!4665 = !DILocation(line: 967, column: 51, scope: !4658)
!4666 = !DILocation(line: 967, column: 71, scope: !4658)
!4667 = !DILocation(line: 967, column: 7, scope: !4659)
!4668 = !DILocation(line: 968, column: 9, scope: !4669)
!4669 = distinct !DILexicalBlock(scope: !4670, file: !1, line: 968, column: 8)
!4670 = distinct !DILexicalBlock(scope: !4658, file: !1, line: 967, column: 77)
!4671 = !DILocation(line: 968, column: 14, scope: !4669)
!4672 = !DILocation(line: 968, column: 22, scope: !4669)
!4673 = !DILocation(line: 968, column: 39, scope: !4669)
!4674 = !DILocation(line: 968, column: 8, scope: !4670)
!4675 = !DILocation(line: 969, column: 5, scope: !4676)
!4676 = distinct !DILexicalBlock(scope: !4669, file: !1, line: 968, column: 45)
!4677 = !DILocation(line: 969, column: 13, scope: !4676)
!4678 = !DILocation(line: 969, column: 20, scope: !4676)
!4679 = !DILocation(line: 970, column: 4, scope: !4676)
!4680 = !DILocation(line: 971, column: 3, scope: !4670)
!4681 = !DILocation(line: 972, column: 2, scope: !4659)
!4682 = !DILocation(line: 973, column: 16, scope: !4507)
!4683 = !DILocation(line: 973, column: 24, scope: !4507)
!4684 = !DILocation(line: 973, column: 7, scope: !4507)
!4685 = !DILocation(line: 973, column: 14, scope: !4507)
!4686 = !DILocation(line: 975, column: 6, scope: !4687)
!4687 = distinct !DILexicalBlock(scope: !4507, file: !1, line: 975, column: 6)
!4688 = !DILocation(line: 975, column: 11, scope: !4687)
!4689 = !DILocation(line: 975, column: 19, scope: !4687)
!4690 = !DILocation(line: 975, column: 6, scope: !4507)
!4691 = !DILocation(line: 976, column: 8, scope: !4692)
!4692 = distinct !DILexicalBlock(scope: !4687, file: !1, line: 975, column: 33)
!4693 = !DILocation(line: 976, column: 6, scope: !4692)
!4694 = !DILocation(line: 977, column: 8, scope: !4692)
!4695 = !DILocation(line: 977, column: 6, scope: !4692)
!4696 = !DILocation(line: 978, column: 2, scope: !4692)
!4697 = !DILocation(line: 980, column: 8, scope: !4698)
!4698 = distinct !DILexicalBlock(scope: !4687, file: !1, line: 979, column: 7)
!4699 = !DILocation(line: 980, column: 6, scope: !4698)
!4700 = !DILocation(line: 981, column: 8, scope: !4698)
!4701 = !DILocation(line: 981, column: 6, scope: !4698)
!4702 = !DILocation(line: 984, column: 6, scope: !4703)
!4703 = distinct !DILexicalBlock(scope: !4507, file: !1, line: 984, column: 6)
!4704 = !DILocation(line: 984, column: 12, scope: !4703)
!4705 = !DILocation(line: 984, column: 18, scope: !4703)
!4706 = !DILocation(line: 984, column: 6, scope: !4507)
!4707 = !DILocation(line: 985, column: 11, scope: !4708)
!4708 = distinct !DILexicalBlock(scope: !4709, file: !1, line: 985, column: 7)
!4709 = distinct !DILexicalBlock(scope: !4703, file: !1, line: 984, column: 31)
!4710 = !DILocation(line: 985, column: 16, scope: !4708)
!4711 = !DILocation(line: 985, column: 7, scope: !4709)
!4712 = !DILocation(line: 986, column: 10, scope: !4713)
!4713 = distinct !DILexicalBlock(scope: !4714, file: !1, line: 986, column: 8)
!4714 = distinct !DILexicalBlock(scope: !4708, file: !1, line: 985, column: 28)
!4715 = !DILocation(line: 986, column: 8, scope: !4713)
!4716 = !DILocation(line: 986, column: 15, scope: !4713)
!4717 = !DILocation(line: 986, column: 8, scope: !4714)
!4718 = !DILocation(line: 989, column: 4, scope: !4719)
!4719 = distinct !DILexicalBlock(scope: !4713, file: !1, line: 986, column: 30)
!4720 = !DILocation(line: 991, column: 25, scope: !4713)
!4721 = !DILocation(line: 991, column: 31, scope: !4713)
!4722 = !DILocation(line: 991, column: 18, scope: !4713)
!4723 = !DILocation(line: 991, column: 15, scope: !4713)
!4724 = !DILocation(line: 991, column: 8, scope: !4713)
!4725 = !DILocation(line: 992, column: 3, scope: !4714)
!4726 = !DILocation(line: 993, column: 2, scope: !4709)
!4727 = !DILocation(line: 996, column: 17, scope: !4507)
!4728 = !DILocation(line: 996, column: 25, scope: !4507)
!4729 = !DILocation(line: 996, column: 33, scope: !4507)
!4730 = !DILocation(line: 996, column: 42, scope: !4507)
!4731 = !DILocation(line: 996, column: 40, scope: !4507)
!4732 = !DILocation(line: 996, column: 9, scope: !4507)
!4733 = !DILocation(line: 996, column: 7, scope: !4507)
!4734 = !DILocation(line: 997, column: 17, scope: !4507)
!4735 = !DILocation(line: 997, column: 25, scope: !4507)
!4736 = !DILocation(line: 997, column: 33, scope: !4507)
!4737 = !DILocation(line: 997, column: 42, scope: !4507)
!4738 = !DILocation(line: 997, column: 40, scope: !4507)
!4739 = !DILocation(line: 997, column: 9, scope: !4507)
!4740 = !DILocation(line: 997, column: 7, scope: !4507)
!4741 = !DILocation(line: 998, column: 17, scope: !4507)
!4742 = !DILocation(line: 998, column: 25, scope: !4507)
!4743 = !DILocation(line: 998, column: 33, scope: !4507)
!4744 = !DILocation(line: 998, column: 42, scope: !4507)
!4745 = !DILocation(line: 998, column: 40, scope: !4507)
!4746 = !DILocation(line: 998, column: 9, scope: !4507)
!4747 = !DILocation(line: 998, column: 7, scope: !4507)
!4748 = !DILocation(line: 999, column: 17, scope: !4507)
!4749 = !DILocation(line: 999, column: 25, scope: !4507)
!4750 = !DILocation(line: 999, column: 33, scope: !4507)
!4751 = !DILocation(line: 999, column: 42, scope: !4507)
!4752 = !DILocation(line: 999, column: 40, scope: !4507)
!4753 = !DILocation(line: 999, column: 9, scope: !4507)
!4754 = !DILocation(line: 999, column: 7, scope: !4507)
!4755 = !DILocation(line: 1002, column: 10, scope: !4507)
!4756 = !DILocation(line: 1002, column: 17, scope: !4507)
!4757 = !DILocation(line: 1002, column: 15, scope: !4507)
!4758 = !DILocation(line: 1002, column: 22, scope: !4507)
!4759 = !DILocation(line: 1002, column: 7, scope: !4507)
!4760 = !DILocation(line: 1003, column: 10, scope: !4507)
!4761 = !DILocation(line: 1003, column: 17, scope: !4507)
!4762 = !DILocation(line: 1003, column: 15, scope: !4507)
!4763 = !DILocation(line: 1003, column: 22, scope: !4507)
!4764 = !DILocation(line: 1003, column: 7, scope: !4507)
!4765 = !DILocation(line: 1005, column: 6, scope: !4766)
!4766 = distinct !DILexicalBlock(scope: !4507, file: !1, line: 1005, column: 6)
!4767 = !DILocation(line: 1005, column: 11, scope: !4766)
!4768 = !DILocation(line: 1005, column: 19, scope: !4766)
!4769 = !DILocation(line: 1005, column: 6, scope: !4507)
!4770 = !DILocalVariable(name: "addval", scope: !4771, file: !1, line: 1007, type: !1622)
!4771 = distinct !DILexicalBlock(scope: !4766, file: !1, line: 1005, column: 37)
!4772 = !DILocation(line: 1007, column: 15, scope: !4771)
!4773 = !DILocation(line: 1007, column: 32, scope: !4771)
!4774 = !DILocation(line: 1007, column: 37, scope: !4771)
!4775 = !DILocation(line: 1007, column: 30, scope: !4771)
!4776 = !DILocation(line: 1007, column: 58, scope: !4771)
!4777 = !DILocation(line: 1007, column: 51, scope: !4771)
!4778 = !DILocation(line: 1007, column: 49, scope: !4771)
!4779 = !DILocation(line: 1008, column: 7, scope: !4780)
!4780 = distinct !DILexicalBlock(scope: !4771, file: !1, line: 1008, column: 7)
!4781 = !DILocation(line: 1008, column: 16, scope: !4780)
!4782 = !DILocation(line: 1008, column: 14, scope: !4780)
!4783 = !DILocation(line: 1008, column: 7, scope: !4771)
!4784 = !DILocation(line: 1008, column: 29, scope: !4780)
!4785 = !DILocation(line: 1008, column: 27, scope: !4780)
!4786 = !DILocation(line: 1008, column: 22, scope: !4780)
!4787 = !DILocation(line: 1009, column: 7, scope: !4788)
!4788 = distinct !DILexicalBlock(scope: !4771, file: !1, line: 1009, column: 7)
!4789 = !DILocation(line: 1009, column: 16, scope: !4788)
!4790 = !DILocation(line: 1009, column: 14, scope: !4788)
!4791 = !DILocation(line: 1009, column: 7, scope: !4771)
!4792 = !DILocation(line: 1009, column: 29, scope: !4788)
!4793 = !DILocation(line: 1009, column: 27, scope: !4788)
!4794 = !DILocation(line: 1009, column: 22, scope: !4788)
!4795 = !DILocation(line: 1010, column: 2, scope: !4771)
!4796 = !DILocation(line: 1011, column: 11, scope: !4797)
!4797 = distinct !DILexicalBlock(scope: !4766, file: !1, line: 1011, column: 11)
!4798 = !DILocation(line: 1011, column: 16, scope: !4797)
!4799 = !DILocation(line: 1011, column: 27, scope: !4797)
!4800 = !DILocation(line: 1011, column: 11, scope: !4766)
!4801 = !DILocation(line: 1012, column: 11, scope: !4802)
!4802 = distinct !DILexicalBlock(scope: !4797, file: !1, line: 1011, column: 35)
!4803 = !DILocation(line: 1012, column: 16, scope: !4802)
!4804 = !DILocation(line: 1012, column: 8, scope: !4802)
!4805 = !DILocation(line: 1013, column: 11, scope: !4802)
!4806 = !DILocation(line: 1013, column: 16, scope: !4802)
!4807 = !DILocation(line: 1013, column: 8, scope: !4802)
!4808 = !DILocation(line: 1014, column: 13, scope: !4802)
!4809 = !DILocation(line: 1014, column: 18, scope: !4802)
!4810 = !DILocation(line: 1014, column: 3, scope: !4802)
!4811 = !DILocation(line: 1014, column: 10, scope: !4802)
!4812 = !DILocation(line: 1015, column: 13, scope: !4802)
!4813 = !DILocation(line: 1015, column: 18, scope: !4802)
!4814 = !DILocation(line: 1015, column: 3, scope: !4802)
!4815 = !DILocation(line: 1015, column: 10, scope: !4802)
!4816 = !DILocation(line: 1016, column: 13, scope: !4802)
!4817 = !DILocation(line: 1016, column: 18, scope: !4802)
!4818 = !DILocation(line: 1016, column: 3, scope: !4802)
!4819 = !DILocation(line: 1016, column: 10, scope: !4802)
!4820 = !DILocation(line: 1017, column: 13, scope: !4802)
!4821 = !DILocation(line: 1017, column: 18, scope: !4802)
!4822 = !DILocation(line: 1017, column: 3, scope: !4802)
!4823 = !DILocation(line: 1017, column: 10, scope: !4802)
!4824 = !DILocation(line: 1018, column: 2, scope: !4802)
!4825 = !DILocation(line: 1020, column: 6, scope: !4826)
!4826 = distinct !DILexicalBlock(scope: !4507, file: !1, line: 1020, column: 6)
!4827 = !DILocation(line: 1020, column: 11, scope: !4826)
!4828 = !DILocation(line: 1020, column: 19, scope: !4826)
!4829 = !DILocation(line: 1020, column: 6, scope: !4507)
!4830 = !DILocalVariable(name: "t", scope: !4831, file: !1, line: 1021, type: !26)
!4831 = distinct !DILexicalBlock(scope: !4826, file: !1, line: 1020, column: 33)
!4832 = !DILocation(line: 1021, column: 9, scope: !4831)
!4833 = !DILocalVariable(name: "sw_ap", scope: !4834, file: !1, line: 1022, type: !26)
!4834 = distinct !DILexicalBlock(scope: !4831, file: !1, line: 1022, column: 3)
!4835 = !DILocation(line: 1022, column: 3, scope: !4834)
!4836 = !DILocation(line: 1026, column: 7, scope: !4831)
!4837 = !DILocation(line: 1026, column: 5, scope: !4831)
!4838 = !DILocation(line: 1027, column: 12, scope: !4831)
!4839 = !DILocation(line: 1027, column: 3, scope: !4831)
!4840 = !DILocation(line: 1027, column: 10, scope: !4831)
!4841 = !DILocation(line: 1028, column: 13, scope: !4831)
!4842 = !DILocation(line: 1028, column: 12, scope: !4831)
!4843 = !DILocation(line: 1028, column: 3, scope: !4831)
!4844 = !DILocation(line: 1028, column: 10, scope: !4831)
!4845 = !DILocation(line: 1029, column: 7, scope: !4831)
!4846 = !DILocation(line: 1029, column: 5, scope: !4831)
!4847 = !DILocation(line: 1030, column: 12, scope: !4831)
!4848 = !DILocation(line: 1030, column: 3, scope: !4831)
!4849 = !DILocation(line: 1030, column: 10, scope: !4831)
!4850 = !DILocation(line: 1031, column: 13, scope: !4831)
!4851 = !DILocation(line: 1031, column: 12, scope: !4831)
!4852 = !DILocation(line: 1031, column: 3, scope: !4831)
!4853 = !DILocation(line: 1031, column: 10, scope: !4831)
!4854 = !DILocation(line: 1032, column: 2, scope: !4831)
!4855 = !DILocation(line: 1035, column: 10, scope: !4507)
!4856 = !DILocation(line: 1035, column: 15, scope: !4507)
!4857 = !DILocation(line: 1035, column: 9, scope: !4507)
!4858 = !DILocation(line: 1035, column: 36, scope: !4507)
!4859 = !DILocation(line: 1035, column: 41, scope: !4507)
!4860 = !DILocation(line: 1035, column: 35, scope: !4507)
!4861 = !DILocation(line: 1035, column: 60, scope: !4507)
!4862 = !DILocation(line: 1035, column: 7, scope: !4507)
!4863 = !DILocation(line: 1036, column: 10, scope: !4507)
!4864 = !DILocation(line: 1036, column: 15, scope: !4507)
!4865 = !DILocation(line: 1036, column: 9, scope: !4507)
!4866 = !DILocation(line: 1036, column: 36, scope: !4507)
!4867 = !DILocation(line: 1036, column: 41, scope: !4507)
!4868 = !DILocation(line: 1036, column: 35, scope: !4507)
!4869 = !DILocation(line: 1036, column: 60, scope: !4507)
!4870 = !DILocation(line: 1036, column: 7, scope: !4507)
!4871 = !DILocation(line: 1040, column: 6, scope: !4872)
!4872 = distinct !DILexicalBlock(scope: !4507, file: !1, line: 1040, column: 6)
!4873 = !DILocation(line: 1040, column: 11, scope: !4872)
!4874 = !DILocation(line: 1040, column: 18, scope: !4872)
!4875 = !DILocation(line: 1040, column: 6, scope: !4507)
!4876 = !DILocation(line: 1041, column: 8, scope: !4877)
!4877 = distinct !DILexicalBlock(scope: !4878, file: !1, line: 1041, column: 7)
!4878 = distinct !DILexicalBlock(scope: !4872, file: !1, line: 1040, column: 33)
!4879 = !DILocation(line: 1041, column: 13, scope: !4877)
!4880 = !DILocation(line: 1041, column: 18, scope: !4877)
!4881 = !DILocation(line: 1041, column: 57, scope: !4877)
!4882 = !DILocation(line: 1041, column: 7, scope: !4878)
!4883 = !DILocation(line: 1042, column: 12, scope: !4877)
!4884 = !DILocation(line: 1042, column: 4, scope: !4877)
!4885 = !DILocation(line: 1043, column: 12, scope: !4886)
!4886 = distinct !DILexicalBlock(scope: !4877, file: !1, line: 1043, column: 12)
!4887 = !DILocation(line: 1043, column: 17, scope: !4886)
!4888 = !DILocation(line: 1043, column: 22, scope: !4886)
!4889 = !DILocation(line: 1043, column: 12, scope: !4877)
!4890 = !DILocation(line: 1044, column: 12, scope: !4886)
!4891 = !DILocation(line: 1044, column: 4, scope: !4886)
!4892 = !DILocation(line: 1045, column: 12, scope: !4893)
!4893 = distinct !DILexicalBlock(scope: !4886, file: !1, line: 1045, column: 12)
!4894 = !DILocation(line: 1045, column: 17, scope: !4893)
!4895 = !DILocation(line: 1045, column: 22, scope: !4893)
!4896 = !DILocation(line: 1045, column: 12, scope: !4886)
!4897 = !DILocation(line: 1046, column: 12, scope: !4893)
!4898 = !DILocation(line: 1046, column: 4, scope: !4893)
!4899 = !DILocation(line: 1048, column: 12, scope: !4893)
!4900 = !DILocation(line: 1049, column: 2, scope: !4878)
!4901 = !DILocation(line: 1050, column: 11, scope: !4902)
!4902 = distinct !DILexicalBlock(scope: !4872, file: !1, line: 1050, column: 11)
!4903 = !DILocation(line: 1050, column: 16, scope: !4902)
!4904 = !DILocation(line: 1050, column: 23, scope: !4902)
!4905 = !DILocation(line: 1050, column: 11, scope: !4872)
!4906 = !DILocation(line: 1051, column: 11, scope: !4902)
!4907 = !DILocation(line: 1051, column: 3, scope: !4902)
!4908 = !DILocation(line: 1053, column: 6, scope: !4909)
!4909 = distinct !DILexicalBlock(scope: !4507, file: !1, line: 1053, column: 6)
!4910 = !DILocation(line: 1053, column: 11, scope: !4909)
!4911 = !DILocation(line: 1053, column: 18, scope: !4909)
!4912 = !DILocation(line: 1053, column: 6, scope: !4507)
!4913 = !DILocalVariable(name: "xs", scope: !4914, file: !1, line: 1054, type: !25)
!4914 = distinct !DILexicalBlock(scope: !4909, file: !1, line: 1053, column: 34)
!4915 = !DILocation(line: 1054, column: 7, scope: !4914)
!4916 = !DILocation(line: 1054, column: 24, scope: !4914)
!4917 = !DILocation(line: 1054, column: 17, scope: !4914)
!4918 = !DILocation(line: 1054, column: 12, scope: !4914)
!4919 = !DILocalVariable(name: "ys", scope: !4914, file: !1, line: 1054, type: !25)
!4920 = !DILocation(line: 1054, column: 29, scope: !4914)
!4921 = !DILocation(line: 1054, column: 46, scope: !4914)
!4922 = !DILocation(line: 1054, column: 39, scope: !4914)
!4923 = !DILocation(line: 1054, column: 34, scope: !4914)
!4924 = !DILocation(line: 1056, column: 8, scope: !4925)
!4925 = distinct !DILexicalBlock(scope: !4914, file: !1, line: 1056, column: 7)
!4926 = !DILocation(line: 1056, column: 13, scope: !4925)
!4927 = !DILocation(line: 1056, column: 18, scope: !4925)
!4928 = !DILocation(line: 1056, column: 37, scope: !4925)
!4929 = !DILocation(line: 1056, column: 41, scope: !4925)
!4930 = !DILocation(line: 1056, column: 46, scope: !4925)
!4931 = !DILocation(line: 1056, column: 51, scope: !4925)
!4932 = !DILocation(line: 1056, column: 7, scope: !4914)
!4933 = !DILocation(line: 1057, column: 10, scope: !4934)
!4934 = distinct !DILexicalBlock(scope: !4925, file: !1, line: 1056, column: 72)
!4935 = !DILocation(line: 1057, column: 7, scope: !4934)
!4936 = !DILocation(line: 1058, column: 10, scope: !4934)
!4937 = !DILocation(line: 1058, column: 7, scope: !4934)
!4938 = !DILocation(line: 1059, column: 3, scope: !4934)
!4939 = !DILocalVariable(name: "xs1", scope: !4940, file: !1, line: 1061, type: !25)
!4940 = distinct !DILexicalBlock(scope: !4925, file: !1, line: 1060, column: 8)
!4941 = !DILocation(line: 1061, column: 8, scope: !4940)
!4942 = !DILocation(line: 1061, column: 26, scope: !4940)
!4943 = !DILocation(line: 1061, column: 31, scope: !4940)
!4944 = !DILocation(line: 1061, column: 29, scope: !4940)
!4945 = !DILocation(line: 1061, column: 19, scope: !4940)
!4946 = !DILocation(line: 1061, column: 14, scope: !4940)
!4947 = !DILocalVariable(name: "ys1", scope: !4940, file: !1, line: 1062, type: !25)
!4948 = !DILocation(line: 1062, column: 8, scope: !4940)
!4949 = !DILocation(line: 1062, column: 26, scope: !4940)
!4950 = !DILocation(line: 1062, column: 31, scope: !4940)
!4951 = !DILocation(line: 1062, column: 29, scope: !4940)
!4952 = !DILocation(line: 1062, column: 19, scope: !4940)
!4953 = !DILocation(line: 1062, column: 14, scope: !4940)
!4954 = !DILocalVariable(name: "xs2", scope: !4940, file: !1, line: 1063, type: !25)
!4955 = !DILocation(line: 1063, column: 8, scope: !4940)
!4956 = !DILocation(line: 1063, column: 26, scope: !4940)
!4957 = !DILocation(line: 1063, column: 31, scope: !4940)
!4958 = !DILocation(line: 1063, column: 29, scope: !4940)
!4959 = !DILocation(line: 1063, column: 19, scope: !4940)
!4960 = !DILocation(line: 1063, column: 14, scope: !4940)
!4961 = !DILocalVariable(name: "ys2", scope: !4940, file: !1, line: 1064, type: !25)
!4962 = !DILocation(line: 1064, column: 8, scope: !4940)
!4963 = !DILocation(line: 1064, column: 26, scope: !4940)
!4964 = !DILocation(line: 1064, column: 31, scope: !4940)
!4965 = !DILocation(line: 1064, column: 29, scope: !4940)
!4966 = !DILocation(line: 1064, column: 19, scope: !4940)
!4967 = !DILocation(line: 1064, column: 14, scope: !4940)
!4968 = !DILocation(line: 1065, column: 9, scope: !4969)
!4969 = distinct !DILexicalBlock(scope: !4940, file: !1, line: 1065, column: 8)
!4970 = !DILocation(line: 1065, column: 16, scope: !4969)
!4971 = !DILocation(line: 1065, column: 13, scope: !4969)
!4972 = !DILocation(line: 1065, column: 21, scope: !4969)
!4973 = !DILocation(line: 1065, column: 25, scope: !4969)
!4974 = !DILocation(line: 1065, column: 32, scope: !4969)
!4975 = !DILocation(line: 1065, column: 29, scope: !4969)
!4976 = !DILocation(line: 1065, column: 8, scope: !4940)
!4977 = !DILocation(line: 1066, column: 9, scope: !4978)
!4978 = distinct !DILexicalBlock(scope: !4979, file: !1, line: 1066, column: 9)
!4979 = distinct !DILexicalBlock(scope: !4969, file: !1, line: 1065, column: 38)
!4980 = !DILocation(line: 1066, column: 14, scope: !4978)
!4981 = !DILocation(line: 1066, column: 19, scope: !4978)
!4982 = !DILocation(line: 1066, column: 9, scope: !4979)
!4983 = !DILocation(line: 1067, column: 14, scope: !4984)
!4984 = distinct !DILexicalBlock(scope: !4978, file: !1, line: 1066, column: 38)
!4985 = !DILocation(line: 1067, column: 20, scope: !4984)
!4986 = !DILocation(line: 1067, column: 18, scope: !4984)
!4987 = !DILocation(line: 1067, column: 24, scope: !4984)
!4988 = !DILocation(line: 1067, column: 12, scope: !4984)
!4989 = !DILocation(line: 1067, column: 31, scope: !4984)
!4990 = !DILocation(line: 1067, column: 37, scope: !4984)
!4991 = !DILocation(line: 1067, column: 9, scope: !4984)
!4992 = !DILocation(line: 1068, column: 14, scope: !4984)
!4993 = !DILocation(line: 1068, column: 20, scope: !4984)
!4994 = !DILocation(line: 1068, column: 18, scope: !4984)
!4995 = !DILocation(line: 1068, column: 24, scope: !4984)
!4996 = !DILocation(line: 1068, column: 12, scope: !4984)
!4997 = !DILocation(line: 1068, column: 31, scope: !4984)
!4998 = !DILocation(line: 1068, column: 37, scope: !4984)
!4999 = !DILocation(line: 1068, column: 9, scope: !4984)
!5000 = !DILocation(line: 1069, column: 5, scope: !4984)
!5001 = !DILocation(line: 1070, column: 9, scope: !5002)
!5002 = distinct !DILexicalBlock(scope: !4979, file: !1, line: 1070, column: 9)
!5003 = !DILocation(line: 1070, column: 14, scope: !5002)
!5004 = !DILocation(line: 1070, column: 19, scope: !5002)
!5005 = !DILocation(line: 1070, column: 9, scope: !4979)
!5006 = !DILocation(line: 1071, column: 14, scope: !5007)
!5007 = distinct !DILexicalBlock(scope: !5002, file: !1, line: 1070, column: 39)
!5008 = !DILocation(line: 1071, column: 20, scope: !5007)
!5009 = !DILocation(line: 1071, column: 18, scope: !5007)
!5010 = !DILocation(line: 1071, column: 24, scope: !5007)
!5011 = !DILocation(line: 1071, column: 12, scope: !5007)
!5012 = !DILocation(line: 1071, column: 31, scope: !5007)
!5013 = !DILocation(line: 1071, column: 37, scope: !5007)
!5014 = !DILocation(line: 1071, column: 9, scope: !5007)
!5015 = !DILocation(line: 1072, column: 14, scope: !5007)
!5016 = !DILocation(line: 1072, column: 20, scope: !5007)
!5017 = !DILocation(line: 1072, column: 18, scope: !5007)
!5018 = !DILocation(line: 1072, column: 24, scope: !5007)
!5019 = !DILocation(line: 1072, column: 12, scope: !5007)
!5020 = !DILocation(line: 1072, column: 31, scope: !5007)
!5021 = !DILocation(line: 1072, column: 37, scope: !5007)
!5022 = !DILocation(line: 1072, column: 9, scope: !5007)
!5023 = !DILocation(line: 1073, column: 5, scope: !5007)
!5024 = !DILocation(line: 1074, column: 4, scope: !4979)
!5025 = !DILocation(line: 1076, column: 10, scope: !5026)
!5026 = distinct !DILexicalBlock(scope: !5027, file: !1, line: 1076, column: 9)
!5027 = distinct !DILexicalBlock(scope: !4969, file: !1, line: 1075, column: 9)
!5028 = !DILocation(line: 1076, column: 15, scope: !5026)
!5029 = !DILocation(line: 1076, column: 20, scope: !5026)
!5030 = !DILocation(line: 1076, column: 39, scope: !5026)
!5031 = !DILocation(line: 1076, column: 44, scope: !5026)
!5032 = !DILocation(line: 1076, column: 49, scope: !5026)
!5033 = !DILocation(line: 1076, column: 54, scope: !5026)
!5034 = !DILocation(line: 1076, column: 52, scope: !5026)
!5035 = !DILocation(line: 1076, column: 58, scope: !5026)
!5036 = !DILocation(line: 1076, column: 63, scope: !5026)
!5037 = !DILocation(line: 1076, column: 9, scope: !5027)
!5038 = !DILocation(line: 1077, column: 10, scope: !5039)
!5039 = distinct !DILexicalBlock(scope: !5040, file: !1, line: 1077, column: 10)
!5040 = distinct !DILexicalBlock(scope: !5026, file: !1, line: 1076, column: 69)
!5041 = !DILocation(line: 1077, column: 10, scope: !5040)
!5042 = !DILocation(line: 1078, column: 35, scope: !5039)
!5043 = !DILocation(line: 1078, column: 40, scope: !5039)
!5044 = !DILocation(line: 1078, column: 46, scope: !5039)
!5045 = !DILocation(line: 1078, column: 7, scope: !5039)
!5046 = !DILocation(line: 1079, column: 13, scope: !5040)
!5047 = !DILocation(line: 1079, column: 6, scope: !5040)
!5048 = !DILocation(line: 1081, column: 10, scope: !5049)
!5049 = distinct !DILexicalBlock(scope: !5027, file: !1, line: 1081, column: 9)
!5050 = !DILocation(line: 1081, column: 15, scope: !5049)
!5051 = !DILocation(line: 1081, column: 20, scope: !5049)
!5052 = !DILocation(line: 1081, column: 40, scope: !5049)
!5053 = !DILocation(line: 1081, column: 45, scope: !5049)
!5054 = !DILocation(line: 1081, column: 49, scope: !5049)
!5055 = !DILocation(line: 1081, column: 54, scope: !5049)
!5056 = !DILocation(line: 1081, column: 52, scope: !5049)
!5057 = !DILocation(line: 1081, column: 58, scope: !5049)
!5058 = !DILocation(line: 1081, column: 9, scope: !5027)
!5059 = !DILocation(line: 1082, column: 10, scope: !5060)
!5060 = distinct !DILexicalBlock(scope: !5061, file: !1, line: 1082, column: 10)
!5061 = distinct !DILexicalBlock(scope: !5049, file: !1, line: 1081, column: 63)
!5062 = !DILocation(line: 1082, column: 10, scope: !5061)
!5063 = !DILocation(line: 1083, column: 35, scope: !5060)
!5064 = !DILocation(line: 1083, column: 40, scope: !5060)
!5065 = !DILocation(line: 1083, column: 46, scope: !5060)
!5066 = !DILocation(line: 1083, column: 7, scope: !5060)
!5067 = !DILocation(line: 1084, column: 13, scope: !5061)
!5068 = !DILocation(line: 1084, column: 6, scope: !5061)
!5069 = !DILocation(line: 1086, column: 11, scope: !5027)
!5070 = !DILocation(line: 1086, column: 8, scope: !5027)
!5071 = !DILocation(line: 1087, column: 11, scope: !5027)
!5072 = !DILocation(line: 1087, column: 8, scope: !5027)
!5073 = !DILocation(line: 1091, column: 7, scope: !5074)
!5074 = distinct !DILexicalBlock(scope: !4914, file: !1, line: 1091, column: 7)
!5075 = !DILocation(line: 1091, column: 12, scope: !5074)
!5076 = !DILocation(line: 1091, column: 24, scope: !5074)
!5077 = !DILocation(line: 1091, column: 7, scope: !4914)
!5078 = !DILocalVariable(name: "omcd", scope: !5079, file: !1, line: 1092, type: !1622)
!5079 = distinct !DILexicalBlock(scope: !5074, file: !1, line: 1091, column: 31)
!5080 = !DILocation(line: 1092, column: 16, scope: !5079)
!5081 = !DILocation(line: 1092, column: 36, scope: !5079)
!5082 = !DILocation(line: 1092, column: 41, scope: !5079)
!5083 = !DILocation(line: 1092, column: 34, scope: !5079)
!5084 = !DILocation(line: 1092, column: 27, scope: !5079)
!5085 = !DILocation(line: 1093, column: 10, scope: !5079)
!5086 = !DILocation(line: 1093, column: 13, scope: !5079)
!5087 = !DILocation(line: 1093, column: 21, scope: !5079)
!5088 = !DILocation(line: 1093, column: 20, scope: !5079)
!5089 = !DILocation(line: 1093, column: 26, scope: !5079)
!5090 = !DILocation(line: 1093, column: 7, scope: !5079)
!5091 = !DILocation(line: 1094, column: 10, scope: !5079)
!5092 = !DILocation(line: 1094, column: 13, scope: !5079)
!5093 = !DILocation(line: 1094, column: 21, scope: !5079)
!5094 = !DILocation(line: 1094, column: 20, scope: !5079)
!5095 = !DILocation(line: 1094, column: 26, scope: !5079)
!5096 = !DILocation(line: 1094, column: 7, scope: !5079)
!5097 = !DILocation(line: 1095, column: 12, scope: !5079)
!5098 = !DILocation(line: 1095, column: 9, scope: !5079)
!5099 = !DILocation(line: 1096, column: 12, scope: !5079)
!5100 = !DILocation(line: 1096, column: 9, scope: !5079)
!5101 = !DILocation(line: 1097, column: 3, scope: !5079)
!5102 = !DILocation(line: 1098, column: 2, scope: !4914)
!5103 = !DILocation(line: 1100, column: 6, scope: !5104)
!5104 = distinct !DILexicalBlock(scope: !4507, file: !1, line: 1100, column: 6)
!5105 = !DILocation(line: 1100, column: 11, scope: !5104)
!5106 = !DILocation(line: 1100, column: 18, scope: !5104)
!5107 = !DILocation(line: 1100, column: 6, scope: !4507)
!5108 = !DILocation(line: 1101, column: 8, scope: !5109)
!5109 = distinct !DILexicalBlock(scope: !5110, file: !1, line: 1101, column: 7)
!5110 = distinct !DILexicalBlock(scope: !5104, file: !1, line: 1100, column: 35)
!5111 = !DILocation(line: 1101, column: 13, scope: !5109)
!5112 = !DILocation(line: 1101, column: 11, scope: !5109)
!5113 = !DILocation(line: 1101, column: 19, scope: !5109)
!5114 = !DILocation(line: 1101, column: 25, scope: !5109)
!5115 = !DILocation(line: 1101, column: 29, scope: !5109)
!5116 = !DILocation(line: 1101, column: 34, scope: !5109)
!5117 = !DILocation(line: 1101, column: 32, scope: !5109)
!5118 = !DILocation(line: 1101, column: 40, scope: !5109)
!5119 = !DILocation(line: 1101, column: 46, scope: !5109)
!5120 = !DILocation(line: 1101, column: 50, scope: !5109)
!5121 = !DILocation(line: 1101, column: 55, scope: !5109)
!5122 = !DILocation(line: 1101, column: 53, scope: !5109)
!5123 = !DILocation(line: 1101, column: 61, scope: !5109)
!5124 = !DILocation(line: 1101, column: 67, scope: !5109)
!5125 = !DILocation(line: 1101, column: 71, scope: !5109)
!5126 = !DILocation(line: 1101, column: 76, scope: !5109)
!5127 = !DILocation(line: 1101, column: 74, scope: !5109)
!5128 = !DILocation(line: 1101, column: 82, scope: !5109)
!5129 = !DILocation(line: 1101, column: 88, scope: !5109)
!5130 = !DILocation(line: 1101, column: 91, scope: !5109)
!5131 = !DILocation(line: 1101, column: 101, scope: !5109)
!5132 = !DILocation(line: 1101, column: 108, scope: !5109)
!5133 = !DILocation(line: 1101, column: 111, scope: !5109)
!5134 = !DILocation(line: 1101, column: 121, scope: !5109)
!5135 = !DILocation(line: 1101, column: 7, scope: !5110)
!5136 = !DILocation(line: 1102, column: 8, scope: !5137)
!5137 = distinct !DILexicalBlock(scope: !5138, file: !1, line: 1102, column: 8)
!5138 = distinct !DILexicalBlock(scope: !5109, file: !1, line: 1101, column: 128)
!5139 = !DILocation(line: 1102, column: 8, scope: !5138)
!5140 = !DILocation(line: 1103, column: 33, scope: !5137)
!5141 = !DILocation(line: 1103, column: 38, scope: !5137)
!5142 = !DILocation(line: 1103, column: 44, scope: !5137)
!5143 = !DILocation(line: 1103, column: 5, scope: !5137)
!5144 = !DILocation(line: 1104, column: 11, scope: !5138)
!5145 = !DILocation(line: 1104, column: 4, scope: !5138)
!5146 = !DILocation(line: 1106, column: 2, scope: !5110)
!5147 = !DILocation(line: 1107, column: 11, scope: !5148)
!5148 = distinct !DILexicalBlock(scope: !5104, file: !1, line: 1107, column: 11)
!5149 = !DILocation(line: 1107, column: 16, scope: !5148)
!5150 = !DILocation(line: 1107, column: 23, scope: !5148)
!5151 = !DILocation(line: 1107, column: 35, scope: !5148)
!5152 = !DILocation(line: 1107, column: 38, scope: !5148)
!5153 = !DILocation(line: 1107, column: 43, scope: !5148)
!5154 = !DILocation(line: 1107, column: 50, scope: !5148)
!5155 = !DILocation(line: 1107, column: 11, scope: !5104)
!5156 = !DILocation(line: 1108, column: 8, scope: !5157)
!5157 = distinct !DILexicalBlock(scope: !5158, file: !1, line: 1108, column: 7)
!5158 = distinct !DILexicalBlock(scope: !5148, file: !1, line: 1107, column: 66)
!5159 = !DILocation(line: 1108, column: 13, scope: !5157)
!5160 = !DILocation(line: 1108, column: 11, scope: !5157)
!5161 = !DILocation(line: 1108, column: 19, scope: !5157)
!5162 = !DILocation(line: 1108, column: 25, scope: !5157)
!5163 = !DILocation(line: 1108, column: 29, scope: !5157)
!5164 = !DILocation(line: 1108, column: 34, scope: !5157)
!5165 = !DILocation(line: 1108, column: 32, scope: !5157)
!5166 = !DILocation(line: 1108, column: 40, scope: !5157)
!5167 = !DILocation(line: 1108, column: 46, scope: !5157)
!5168 = !DILocation(line: 1108, column: 50, scope: !5157)
!5169 = !DILocation(line: 1108, column: 55, scope: !5157)
!5170 = !DILocation(line: 1108, column: 53, scope: !5157)
!5171 = !DILocation(line: 1108, column: 61, scope: !5157)
!5172 = !DILocation(line: 1108, column: 67, scope: !5157)
!5173 = !DILocation(line: 1108, column: 71, scope: !5157)
!5174 = !DILocation(line: 1108, column: 76, scope: !5157)
!5175 = !DILocation(line: 1108, column: 74, scope: !5157)
!5176 = !DILocation(line: 1108, column: 82, scope: !5157)
!5177 = !DILocation(line: 1108, column: 7, scope: !5158)
!5178 = !DILocation(line: 1109, column: 8, scope: !5179)
!5179 = distinct !DILexicalBlock(scope: !5180, file: !1, line: 1109, column: 8)
!5180 = distinct !DILexicalBlock(scope: !5157, file: !1, line: 1108, column: 89)
!5181 = !DILocation(line: 1109, column: 8, scope: !5180)
!5182 = !DILocation(line: 1110, column: 33, scope: !5179)
!5183 = !DILocation(line: 1110, column: 38, scope: !5179)
!5184 = !DILocation(line: 1110, column: 44, scope: !5179)
!5185 = !DILocation(line: 1110, column: 5, scope: !5179)
!5186 = !DILocation(line: 1111, column: 11, scope: !5180)
!5187 = !DILocation(line: 1111, column: 4, scope: !5180)
!5188 = !DILocation(line: 1113, column: 2, scope: !5158)
!5189 = !DILocation(line: 1115, column: 7, scope: !5190)
!5190 = distinct !DILexicalBlock(scope: !5191, file: !1, line: 1115, column: 7)
!5191 = distinct !DILexicalBlock(scope: !5148, file: !1, line: 1114, column: 7)
!5192 = !DILocation(line: 1115, column: 12, scope: !5190)
!5193 = !DILocation(line: 1115, column: 19, scope: !5190)
!5194 = !DILocation(line: 1115, column: 7, scope: !5191)
!5195 = !DILocation(line: 1116, column: 10, scope: !5196)
!5196 = distinct !DILexicalBlock(scope: !5190, file: !1, line: 1115, column: 34)
!5197 = !DILocation(line: 1116, column: 13, scope: !5196)
!5198 = !DILocation(line: 1116, column: 9, scope: !5196)
!5199 = !DILocation(line: 1116, column: 30, scope: !5196)
!5200 = !DILocation(line: 1116, column: 33, scope: !5196)
!5201 = !DILocation(line: 1116, column: 29, scope: !5196)
!5202 = !DILocation(line: 1116, column: 48, scope: !5196)
!5203 = !DILocation(line: 1116, column: 7, scope: !5196)
!5204 = !DILocation(line: 1117, column: 10, scope: !5196)
!5205 = !DILocation(line: 1117, column: 13, scope: !5196)
!5206 = !DILocation(line: 1117, column: 9, scope: !5196)
!5207 = !DILocation(line: 1117, column: 30, scope: !5196)
!5208 = !DILocation(line: 1117, column: 33, scope: !5196)
!5209 = !DILocation(line: 1117, column: 29, scope: !5196)
!5210 = !DILocation(line: 1117, column: 48, scope: !5196)
!5211 = !DILocation(line: 1117, column: 7, scope: !5196)
!5212 = !DILocation(line: 1118, column: 3, scope: !5196)
!5213 = !DILocation(line: 1120, column: 17, scope: !5214)
!5214 = distinct !DILexicalBlock(scope: !5190, file: !1, line: 1119, column: 8)
!5215 = !DILocation(line: 1120, column: 10, scope: !5214)
!5216 = !DILocation(line: 1120, column: 7, scope: !5214)
!5217 = !DILocation(line: 1121, column: 17, scope: !5214)
!5218 = !DILocation(line: 1121, column: 10, scope: !5214)
!5219 = !DILocation(line: 1121, column: 7, scope: !5214)
!5220 = !DILocation(line: 1125, column: 11, scope: !4507)
!5221 = !DILocation(line: 1125, column: 16, scope: !4507)
!5222 = !DILocation(line: 1125, column: 24, scope: !4507)
!5223 = !DILocation(line: 1125, column: 9, scope: !4507)
!5224 = !DILocation(line: 1128, column: 9, scope: !5225)
!5225 = distinct !DILexicalBlock(scope: !4507, file: !1, line: 1128, column: 6)
!5226 = !DILocation(line: 1128, column: 7, scope: !5225)
!5227 = !DILocation(line: 1128, column: 14, scope: !5225)
!5228 = !DILocation(line: 1128, column: 29, scope: !5225)
!5229 = !DILocation(line: 1128, column: 33, scope: !5225)
!5230 = !DILocation(line: 1128, column: 39, scope: !5225)
!5231 = !DILocation(line: 1128, column: 45, scope: !5225)
!5232 = !DILocation(line: 1128, column: 6, scope: !4507)
!5233 = !DILocation(line: 1129, column: 17, scope: !5225)
!5234 = !DILocation(line: 1129, column: 23, scope: !5225)
!5235 = !DILocation(line: 1129, column: 25, scope: !5225)
!5236 = !DILocation(line: 1129, column: 31, scope: !5225)
!5237 = !DILocation(line: 1129, column: 24, scope: !5225)
!5238 = !DILocation(line: 1129, column: 3, scope: !5225)
!5239 = !DILocation(line: 1129, column: 9, scope: !5225)
!5240 = !DILocation(line: 1129, column: 14, scope: !5225)
!5241 = !DILocation(line: 1132, column: 17, scope: !4507)
!5242 = !DILocation(line: 1132, column: 13, scope: !4507)
!5243 = !DILocation(line: 1132, column: 22, scope: !4507)
!5244 = !DILocation(line: 1132, column: 2, scope: !4507)
!5245 = !DILocation(line: 1133, column: 17, scope: !4507)
!5246 = !DILocation(line: 1133, column: 13, scope: !4507)
!5247 = !DILocation(line: 1133, column: 22, scope: !4507)
!5248 = !DILocation(line: 1133, column: 2, scope: !4507)
!5249 = !DILocation(line: 1134, column: 15, scope: !4507)
!5250 = !DILocation(line: 1134, column: 6, scope: !4507)
!5251 = !DILocation(line: 1134, column: 13, scope: !4507)
!5252 = !DILocation(line: 1135, column: 16, scope: !4507)
!5253 = !DILocation(line: 1135, column: 6, scope: !4507)
!5254 = !DILocation(line: 1135, column: 14, scope: !4507)
!5255 = !DILocation(line: 1140, column: 10, scope: !5256)
!5256 = distinct !DILexicalBlock(scope: !4507, file: !1, line: 1140, column: 6)
!5257 = !DILocation(line: 1140, column: 6, scope: !5256)
!5258 = !DILocation(line: 1140, column: 21, scope: !5256)
!5259 = !DILocation(line: 1140, column: 17, scope: !5256)
!5260 = !DILocation(line: 1140, column: 16, scope: !5256)
!5261 = !DILocation(line: 1140, column: 34, scope: !5256)
!5262 = !DILocation(line: 1140, column: 30, scope: !5256)
!5263 = !DILocation(line: 1140, column: 45, scope: !5256)
!5264 = !DILocation(line: 1140, column: 41, scope: !5256)
!5265 = !DILocation(line: 1140, column: 40, scope: !5256)
!5266 = !DILocation(line: 1140, column: 28, scope: !5256)
!5267 = !DILocation(line: 1140, column: 52, scope: !5256)
!5268 = !DILocation(line: 1140, column: 6, scope: !4507)
!5269 = !DILocation(line: 1141, column: 17, scope: !5256)
!5270 = !DILocation(line: 1141, column: 13, scope: !5256)
!5271 = !DILocation(line: 1141, column: 38, scope: !5256)
!5272 = !DILocation(line: 1141, column: 34, scope: !5256)
!5273 = !DILocation(line: 1141, column: 27, scope: !5256)
!5274 = !DILocation(line: 1141, column: 26, scope: !5256)
!5275 = !DILocation(line: 1141, column: 3, scope: !5256)
!5276 = !DILocation(line: 1142, column: 10, scope: !5277)
!5277 = distinct !DILexicalBlock(scope: !4507, file: !1, line: 1142, column: 6)
!5278 = !DILocation(line: 1142, column: 6, scope: !5277)
!5279 = !DILocation(line: 1142, column: 21, scope: !5277)
!5280 = !DILocation(line: 1142, column: 17, scope: !5277)
!5281 = !DILocation(line: 1142, column: 16, scope: !5277)
!5282 = !DILocation(line: 1142, column: 34, scope: !5277)
!5283 = !DILocation(line: 1142, column: 30, scope: !5277)
!5284 = !DILocation(line: 1142, column: 45, scope: !5277)
!5285 = !DILocation(line: 1142, column: 41, scope: !5277)
!5286 = !DILocation(line: 1142, column: 40, scope: !5277)
!5287 = !DILocation(line: 1142, column: 28, scope: !5277)
!5288 = !DILocation(line: 1142, column: 52, scope: !5277)
!5289 = !DILocation(line: 1142, column: 6, scope: !4507)
!5290 = !DILocation(line: 1143, column: 17, scope: !5277)
!5291 = !DILocation(line: 1143, column: 13, scope: !5277)
!5292 = !DILocation(line: 1143, column: 38, scope: !5277)
!5293 = !DILocation(line: 1143, column: 34, scope: !5277)
!5294 = !DILocation(line: 1143, column: 27, scope: !5277)
!5295 = !DILocation(line: 1143, column: 26, scope: !5277)
!5296 = !DILocation(line: 1143, column: 3, scope: !5277)
!5297 = !DILocation(line: 1146, column: 6, scope: !5298)
!5298 = distinct !DILexicalBlock(scope: !4507, file: !1, line: 1146, column: 6)
!5299 = !DILocation(line: 1146, column: 11, scope: !5298)
!5300 = !DILocation(line: 1146, column: 19, scope: !5298)
!5301 = !DILocation(line: 1146, column: 6, scope: !4507)
!5302 = !DILocalVariable(name: "previbuf", scope: !5303, file: !1, line: 1147, type: !34)
!5303 = distinct !DILexicalBlock(scope: !5298, file: !1, line: 1146, column: 33)
!5304 = !DILocation(line: 1147, column: 10, scope: !5303)
!5305 = !DILocalVariable(name: "curibuf", scope: !5303, file: !1, line: 1147, type: !34)
!5306 = !DILocation(line: 1147, column: 21, scope: !5303)
!5307 = !DILocalVariable(name: "levf", scope: !5303, file: !1, line: 1148, type: !26)
!5308 = !DILocation(line: 1148, column: 9, scope: !5303)
!5309 = !DILocalVariable(name: "maxlev", scope: !5303, file: !1, line: 1149, type: !25)
!5310 = !DILocation(line: 1149, column: 7, scope: !5303)
!5311 = !DILocalVariable(name: "mipmaps", scope: !5303, file: !1, line: 1150, type: !5312)
!5312 = !DICompositeType(tag: DW_TAG_array_type, baseType: !34, size: 1344, elements: !5313)
!5313 = !{!5314}
!5314 = !DISubrange(count: 21)
!5315 = !DILocation(line: 1150, column: 10, scope: !5303)
!5316 = !DILocalVariable(name: "ff", scope: !5303, file: !1, line: 1155, type: !1622)
!5317 = !DILocation(line: 1155, column: 15, scope: !5303)
!5318 = !DILocation(line: 1155, column: 26, scope: !5303)
!5319 = !DILocation(line: 1155, column: 32, scope: !5303)
!5320 = !DILocation(line: 1155, column: 20, scope: !5303)
!5321 = !DILocalVariable(name: "q", scope: !5303, file: !1, line: 1155, type: !1622)
!5322 = !DILocation(line: 1155, column: 36, scope: !5303)
!5323 = !DILocation(line: 1155, column: 40, scope: !5303)
!5324 = !DILocation(line: 1155, column: 46, scope: !5303)
!5325 = !DILocation(line: 1155, column: 48, scope: !5303)
!5326 = !DILocation(line: 1155, column: 47, scope: !5303)
!5327 = !DILocalVariable(name: "Ux", scope: !5303, file: !1, line: 1156, type: !1622)
!5328 = !DILocation(line: 1156, column: 15, scope: !5303)
!5329 = !DILocation(line: 1156, column: 20, scope: !5303)
!5330 = !DILocation(line: 1156, column: 27, scope: !5303)
!5331 = !DILocation(line: 1156, column: 26, scope: !5303)
!5332 = !DILocalVariable(name: "Vx", scope: !5303, file: !1, line: 1156, type: !1622)
!5333 = !DILocation(line: 1156, column: 31, scope: !5303)
!5334 = !DILocation(line: 1156, column: 36, scope: !5303)
!5335 = !DILocation(line: 1156, column: 43, scope: !5303)
!5336 = !DILocation(line: 1156, column: 42, scope: !5303)
!5337 = !DILocalVariable(name: "Uy", scope: !5303, file: !1, line: 1156, type: !1622)
!5338 = !DILocation(line: 1156, column: 46, scope: !5303)
!5339 = !DILocation(line: 1156, column: 51, scope: !5303)
!5340 = !DILocation(line: 1156, column: 58, scope: !5303)
!5341 = !DILocation(line: 1156, column: 57, scope: !5303)
!5342 = !DILocalVariable(name: "Vy", scope: !5303, file: !1, line: 1156, type: !1622)
!5343 = !DILocation(line: 1156, column: 62, scope: !5303)
!5344 = !DILocation(line: 1156, column: 67, scope: !5303)
!5345 = !DILocation(line: 1156, column: 74, scope: !5303)
!5346 = !DILocation(line: 1156, column: 73, scope: !5303)
!5347 = !DILocalVariable(name: "A", scope: !5303, file: !1, line: 1157, type: !1622)
!5348 = !DILocation(line: 1157, column: 15, scope: !5303)
!5349 = !DILocation(line: 1157, column: 19, scope: !5303)
!5350 = !DILocation(line: 1157, column: 22, scope: !5303)
!5351 = !DILocation(line: 1157, column: 21, scope: !5303)
!5352 = !DILocation(line: 1157, column: 27, scope: !5303)
!5353 = !DILocation(line: 1157, column: 30, scope: !5303)
!5354 = !DILocation(line: 1157, column: 29, scope: !5303)
!5355 = !DILocation(line: 1157, column: 25, scope: !5303)
!5356 = !DILocalVariable(name: "B", scope: !5303, file: !1, line: 1158, type: !1622)
!5357 = !DILocation(line: 1158, column: 15, scope: !5303)
!5358 = !DILocation(line: 1158, column: 25, scope: !5303)
!5359 = !DILocation(line: 1158, column: 28, scope: !5303)
!5360 = !DILocation(line: 1158, column: 27, scope: !5303)
!5361 = !DILocation(line: 1158, column: 33, scope: !5303)
!5362 = !DILocation(line: 1158, column: 36, scope: !5303)
!5363 = !DILocation(line: 1158, column: 35, scope: !5303)
!5364 = !DILocation(line: 1158, column: 31, scope: !5303)
!5365 = !DILocation(line: 1158, column: 23, scope: !5303)
!5366 = !DILocalVariable(name: "C", scope: !5303, file: !1, line: 1159, type: !1622)
!5367 = !DILocation(line: 1159, column: 15, scope: !5303)
!5368 = !DILocation(line: 1159, column: 19, scope: !5303)
!5369 = !DILocation(line: 1159, column: 22, scope: !5303)
!5370 = !DILocation(line: 1159, column: 21, scope: !5303)
!5371 = !DILocation(line: 1159, column: 27, scope: !5303)
!5372 = !DILocation(line: 1159, column: 30, scope: !5303)
!5373 = !DILocation(line: 1159, column: 29, scope: !5303)
!5374 = !DILocation(line: 1159, column: 25, scope: !5303)
!5375 = !DILocalVariable(name: "F", scope: !5303, file: !1, line: 1160, type: !1622)
!5376 = !DILocation(line: 1160, column: 15, scope: !5303)
!5377 = !DILocation(line: 1160, column: 19, scope: !5303)
!5378 = !DILocation(line: 1160, column: 21, scope: !5303)
!5379 = !DILocation(line: 1160, column: 20, scope: !5303)
!5380 = !DILocation(line: 1160, column: 25, scope: !5303)
!5381 = !DILocation(line: 1160, column: 27, scope: !5303)
!5382 = !DILocation(line: 1160, column: 26, scope: !5303)
!5383 = !DILocation(line: 1160, column: 28, scope: !5303)
!5384 = !DILocation(line: 1160, column: 23, scope: !5303)
!5385 = !DILocalVariable(name: "a", scope: !5303, file: !1, line: 1161, type: !26)
!5386 = !DILocation(line: 1161, column: 9, scope: !5303)
!5387 = !DILocalVariable(name: "b", scope: !5303, file: !1, line: 1161, type: !26)
!5388 = !DILocation(line: 1161, column: 12, scope: !5303)
!5389 = !DILocalVariable(name: "th", scope: !5303, file: !1, line: 1161, type: !26)
!5390 = !DILocation(line: 1161, column: 15, scope: !5303)
!5391 = !DILocalVariable(name: "ecc", scope: !5303, file: !1, line: 1161, type: !26)
!5392 = !DILocation(line: 1161, column: 19, scope: !5303)
!5393 = !DILocation(line: 1162, column: 24, scope: !5303)
!5394 = !DILocation(line: 1162, column: 27, scope: !5303)
!5395 = !DILocation(line: 1162, column: 30, scope: !5303)
!5396 = !DILocation(line: 1162, column: 33, scope: !5303)
!5397 = !DILocation(line: 1162, column: 3, scope: !5303)
!5398 = !DILocation(line: 1163, column: 7, scope: !5399)
!5399 = distinct !DILexicalBlock(scope: !5303, file: !1, line: 1163, column: 7)
!5400 = !DILocation(line: 1163, column: 12, scope: !5399)
!5401 = !DILocation(line: 1163, column: 22, scope: !5399)
!5402 = !DILocation(line: 1163, column: 7, scope: !5303)
!5403 = !DILocalVariable(name: "fProbes", scope: !5404, file: !1, line: 1164, type: !26)
!5404 = distinct !DILexicalBlock(scope: !5399, file: !1, line: 1163, column: 37)
!5405 = !DILocation(line: 1164, column: 10, scope: !5404)
!5406 = !DILocation(line: 1165, column: 9, scope: !5404)
!5407 = !DILocation(line: 1165, column: 6, scope: !5404)
!5408 = !DILocation(line: 1166, column: 9, scope: !5404)
!5409 = !DILocation(line: 1166, column: 6, scope: !5404)
!5410 = !DILocation(line: 1167, column: 15, scope: !5404)
!5411 = !DILocation(line: 1167, column: 8, scope: !5404)
!5412 = !DILocation(line: 1167, column: 6, scope: !5404)
!5413 = !DILocation(line: 1168, column: 15, scope: !5404)
!5414 = !DILocation(line: 1168, column: 8, scope: !5404)
!5415 = !DILocation(line: 1168, column: 6, scope: !5404)
!5416 = !DILocation(line: 1169, column: 19, scope: !5404)
!5417 = !DILocation(line: 1169, column: 23, scope: !5404)
!5418 = !DILocation(line: 1169, column: 21, scope: !5404)
!5419 = !DILocation(line: 1169, column: 17, scope: !5404)
!5420 = !DILocation(line: 1169, column: 26, scope: !5404)
!5421 = !DILocation(line: 1169, column: 12, scope: !5404)
!5422 = !DILocation(line: 1170, column: 26, scope: !5404)
!5423 = !DILocation(line: 1170, column: 18, scope: !5404)
!5424 = !DILocation(line: 1170, column: 8, scope: !5404)
!5425 = !DILocation(line: 1170, column: 16, scope: !5404)
!5426 = !DILocation(line: 1171, column: 18, scope: !5404)
!5427 = !DILocation(line: 1171, column: 8, scope: !5404)
!5428 = !DILocation(line: 1171, column: 16, scope: !5404)
!5429 = !DILocation(line: 1172, column: 12, scope: !5430)
!5430 = distinct !DILexicalBlock(scope: !5404, file: !1, line: 1172, column: 8)
!5431 = !DILocation(line: 1172, column: 8, scope: !5430)
!5432 = !DILocation(line: 1172, column: 22, scope: !5430)
!5433 = !DILocation(line: 1172, column: 20, scope: !5430)
!5434 = !DILocation(line: 1172, column: 8, scope: !5404)
!5435 = !DILocation(line: 1173, column: 13, scope: !5430)
!5436 = !DILocation(line: 1173, column: 12, scope: !5430)
!5437 = !DILocation(line: 1173, column: 29, scope: !5430)
!5438 = !DILocation(line: 1173, column: 37, scope: !5430)
!5439 = !DILocation(line: 1173, column: 17, scope: !5430)
!5440 = !DILocation(line: 1173, column: 15, scope: !5430)
!5441 = !DILocation(line: 1173, column: 7, scope: !5430)
!5442 = !DILocation(line: 1173, column: 5, scope: !5430)
!5443 = !DILocation(line: 1174, column: 17, scope: !5404)
!5444 = !DILocation(line: 1174, column: 19, scope: !5404)
!5445 = !DILocation(line: 1174, column: 18, scope: !5404)
!5446 = !DILocation(line: 1174, column: 8, scope: !5404)
!5447 = !DILocation(line: 1174, column: 15, scope: !5404)
!5448 = !DILocation(line: 1175, column: 17, scope: !5404)
!5449 = !DILocation(line: 1175, column: 19, scope: !5404)
!5450 = !DILocation(line: 1175, column: 18, scope: !5404)
!5451 = !DILocation(line: 1175, column: 8, scope: !5404)
!5452 = !DILocation(line: 1175, column: 15, scope: !5404)
!5453 = !DILocation(line: 1176, column: 16, scope: !5404)
!5454 = !DILocation(line: 1176, column: 8, scope: !5404)
!5455 = !DILocation(line: 1176, column: 14, scope: !5404)
!5456 = !DILocation(line: 1177, column: 19, scope: !5404)
!5457 = !DILocation(line: 1177, column: 18, scope: !5404)
!5458 = !DILocation(line: 1177, column: 8, scope: !5404)
!5459 = !DILocation(line: 1177, column: 13, scope: !5404)
!5460 = !DILocation(line: 1178, column: 15, scope: !5404)
!5461 = !DILocation(line: 1178, column: 27, scope: !5404)
!5462 = !DILocation(line: 1178, column: 33, scope: !5404)
!5463 = !DILocation(line: 1178, column: 20, scope: !5404)
!5464 = !DILocation(line: 1178, column: 18, scope: !5404)
!5465 = !DILocation(line: 1178, column: 8, scope: !5404)
!5466 = !DILocation(line: 1178, column: 13, scope: !5404)
!5467 = !DILocation(line: 1179, column: 3, scope: !5404)
!5468 = !DILocation(line: 1181, column: 8, scope: !5469)
!5469 = distinct !DILexicalBlock(scope: !5470, file: !1, line: 1181, column: 8)
!5470 = distinct !DILexicalBlock(scope: !5399, file: !1, line: 1180, column: 8)
!5471 = !DILocation(line: 1181, column: 21, scope: !5469)
!5472 = !DILocation(line: 1181, column: 26, scope: !5469)
!5473 = !DILocation(line: 1181, column: 14, scope: !5469)
!5474 = !DILocation(line: 1181, column: 12, scope: !5469)
!5475 = !DILocation(line: 1181, column: 8, scope: !5470)
!5476 = !DILocation(line: 1181, column: 37, scope: !5469)
!5477 = !DILocation(line: 1181, column: 48, scope: !5469)
!5478 = !DILocation(line: 1181, column: 53, scope: !5469)
!5479 = !DILocation(line: 1181, column: 41, scope: !5469)
!5480 = !DILocation(line: 1181, column: 39, scope: !5469)
!5481 = !DILocation(line: 1181, column: 35, scope: !5469)
!5482 = !DILocation(line: 1181, column: 33, scope: !5469)
!5483 = !DILocation(line: 1182, column: 9, scope: !5470)
!5484 = !DILocation(line: 1182, column: 6, scope: !5470)
!5485 = !DILocation(line: 1184, column: 17, scope: !5303)
!5486 = !DILocation(line: 1184, column: 10, scope: !5303)
!5487 = !DILocation(line: 1184, column: 8, scope: !5303)
!5488 = !DILocation(line: 1185, column: 34, scope: !5303)
!5489 = !DILocation(line: 1185, column: 29, scope: !5303)
!5490 = !DILocation(line: 1185, column: 27, scope: !5303)
!5491 = !DILocation(line: 1185, column: 8, scope: !5303)
!5492 = !DILocation(line: 1187, column: 10, scope: !5303)
!5493 = !DILocation(line: 1188, column: 10, scope: !5303)
!5494 = !DILocation(line: 1189, column: 16, scope: !5303)
!5495 = !DILocation(line: 1189, column: 3, scope: !5303)
!5496 = !DILocation(line: 1189, column: 14, scope: !5303)
!5497 = !DILocation(line: 1190, column: 3, scope: !5303)
!5498 = !DILocation(line: 1190, column: 10, scope: !5303)
!5499 = !DILocation(line: 1190, column: 17, scope: !5303)
!5500 = !DILocation(line: 1191, column: 26, scope: !5501)
!5501 = distinct !DILexicalBlock(scope: !5303, file: !1, line: 1190, column: 37)
!5502 = !DILocation(line: 1191, column: 32, scope: !5501)
!5503 = !DILocation(line: 1191, column: 39, scope: !5501)
!5504 = !DILocation(line: 1191, column: 12, scope: !5501)
!5505 = !DILocation(line: 1191, column: 19, scope: !5501)
!5506 = !DILocation(line: 1191, column: 4, scope: !5501)
!5507 = !DILocation(line: 1191, column: 24, scope: !5501)
!5508 = !DILocation(line: 1192, column: 8, scope: !5509)
!5509 = distinct !DILexicalBlock(scope: !5501, file: !1, line: 1192, column: 8)
!5510 = !DILocation(line: 1192, column: 14, scope: !5509)
!5511 = !DILocation(line: 1192, column: 21, scope: !5509)
!5512 = !DILocation(line: 1192, column: 8, scope: !5501)
!5513 = !DILocation(line: 1192, column: 36, scope: !5509)
!5514 = !DILocation(line: 1192, column: 30, scope: !5509)
!5515 = !DILocation(line: 1193, column: 10, scope: !5501)
!5516 = distinct !{!5516, !5497, !5517}
!5517 = !DILocation(line: 1194, column: 3, scope: !5303)
!5518 = !DILocation(line: 1197, column: 7, scope: !5519)
!5519 = distinct !DILexicalBlock(scope: !5303, file: !1, line: 1197, column: 7)
!5520 = !DILocation(line: 1197, column: 12, scope: !5519)
!5521 = !DILocation(line: 1197, column: 7, scope: !5303)
!5522 = !DILocation(line: 1198, column: 25, scope: !5523)
!5523 = distinct !DILexicalBlock(scope: !5519, file: !1, line: 1197, column: 19)
!5524 = !DILocation(line: 1198, column: 23, scope: !5523)
!5525 = !DILocation(line: 1198, column: 13, scope: !5523)
!5526 = !DILocation(line: 1199, column: 9, scope: !5523)
!5527 = !DILocation(line: 1200, column: 3, scope: !5523)
!5528 = !DILocation(line: 1201, column: 12, scope: !5529)
!5529 = distinct !DILexicalBlock(scope: !5519, file: !1, line: 1201, column: 12)
!5530 = !DILocation(line: 1201, column: 20, scope: !5529)
!5531 = !DILocation(line: 1201, column: 27, scope: !5529)
!5532 = !DILocation(line: 1201, column: 17, scope: !5529)
!5533 = !DILocation(line: 1201, column: 12, scope: !5519)
!5534 = !DILocation(line: 1202, column: 33, scope: !5535)
!5535 = distinct !DILexicalBlock(scope: !5529, file: !1, line: 1201, column: 32)
!5536 = !DILocation(line: 1202, column: 40, scope: !5535)
!5537 = !DILocation(line: 1202, column: 25, scope: !5535)
!5538 = !DILocation(line: 1202, column: 23, scope: !5535)
!5539 = !DILocation(line: 1202, column: 13, scope: !5535)
!5540 = !DILocation(line: 1203, column: 9, scope: !5535)
!5541 = !DILocation(line: 1204, column: 8, scope: !5542)
!5542 = distinct !DILexicalBlock(scope: !5535, file: !1, line: 1204, column: 8)
!5543 = !DILocation(line: 1204, column: 13, scope: !5542)
!5544 = !DILocation(line: 1204, column: 23, scope: !5542)
!5545 = !DILocation(line: 1204, column: 8, scope: !5535)
!5546 = !DILocation(line: 1204, column: 42, scope: !5542)
!5547 = !DILocation(line: 1204, column: 50, scope: !5542)
!5548 = !DILocation(line: 1204, column: 38, scope: !5542)
!5549 = !DILocation(line: 1205, column: 3, scope: !5535)
!5550 = !DILocalVariable(name: "lev", scope: !5551, file: !1, line: 1207, type: !4195)
!5551 = distinct !DILexicalBlock(scope: !5529, file: !1, line: 1206, column: 8)
!5552 = !DILocation(line: 1207, column: 14, scope: !5551)
!5553 = !DILocation(line: 1207, column: 20, scope: !5551)
!5554 = !DILocation(line: 1207, column: 43, scope: !5551)
!5555 = !DILocation(line: 1207, column: 38, scope: !5551)
!5556 = !DILocation(line: 1208, column: 22, scope: !5551)
!5557 = !DILocation(line: 1208, column: 14, scope: !5551)
!5558 = !DILocation(line: 1208, column: 12, scope: !5551)
!5559 = !DILocation(line: 1209, column: 23, scope: !5551)
!5560 = !DILocation(line: 1209, column: 27, scope: !5551)
!5561 = !DILocation(line: 1209, column: 15, scope: !5551)
!5562 = !DILocation(line: 1209, column: 13, scope: !5551)
!5563 = !DILocation(line: 1210, column: 19, scope: !5551)
!5564 = !DILocation(line: 1210, column: 12, scope: !5551)
!5565 = !DILocation(line: 1210, column: 9, scope: !5551)
!5566 = !DILocation(line: 1215, column: 7, scope: !5567)
!5567 = distinct !DILexicalBlock(scope: !5303, file: !1, line: 1215, column: 7)
!5568 = !DILocation(line: 1215, column: 15, scope: !5567)
!5569 = !DILocation(line: 1215, column: 19, scope: !5567)
!5570 = !DILocation(line: 1215, column: 24, scope: !5567)
!5571 = !DILocation(line: 1215, column: 29, scope: !5567)
!5572 = !DILocation(line: 1215, column: 37, scope: !5567)
!5573 = !DILocation(line: 1215, column: 54, scope: !5567)
!5574 = !DILocation(line: 1215, column: 7, scope: !5303)
!5575 = !DILocation(line: 1217, column: 4, scope: !5576)
!5576 = distinct !DILexicalBlock(scope: !5567, file: !1, line: 1215, column: 61)
!5577 = !DILocation(line: 1217, column: 15, scope: !5576)
!5578 = !DILocation(line: 1217, column: 23, scope: !5576)
!5579 = !DILocation(line: 1217, column: 32, scope: !5576)
!5580 = !DILocation(line: 1217, column: 36, scope: !5576)
!5581 = !DILocation(line: 1218, column: 11, scope: !5576)
!5582 = !DILocation(line: 1218, column: 19, scope: !5576)
!5583 = !DILocation(line: 1218, column: 24, scope: !5576)
!5584 = !DILocation(line: 1218, column: 32, scope: !5576)
!5585 = !DILocation(line: 1218, column: 22, scope: !5576)
!5586 = !DILocation(line: 1218, column: 37, scope: !5576)
!5587 = !DILocation(line: 1218, column: 45, scope: !5576)
!5588 = !DILocation(line: 1218, column: 35, scope: !5576)
!5589 = !DILocation(line: 1218, column: 9, scope: !5576)
!5590 = !DILocation(line: 1219, column: 4, scope: !5576)
!5591 = !DILocation(line: 1219, column: 22, scope: !5576)
!5592 = !DILocation(line: 1219, column: 31, scope: !5576)
!5593 = !DILocation(line: 1219, column: 36, scope: !5576)
!5594 = !DILocation(line: 1219, column: 34, scope: !5576)
!5595 = !DILocation(line: 1219, column: 44, scope: !5576)
!5596 = !DILocation(line: 1219, column: 49, scope: !5576)
!5597 = !DILocation(line: 1219, column: 47, scope: !5576)
!5598 = !DILocation(line: 1220, column: 16, scope: !5576)
!5599 = !DILocation(line: 1220, column: 26, scope: !5576)
!5600 = !DILocation(line: 1220, column: 19, scope: !5576)
!5601 = !DILocation(line: 1220, column: 36, scope: !5576)
!5602 = !DILocation(line: 1220, column: 29, scope: !5576)
!5603 = !DILocation(line: 1220, column: 9, scope: !5576)
!5604 = !DILocation(line: 1221, column: 4, scope: !5576)
!5605 = !DILocation(line: 1221, column: 22, scope: !5576)
!5606 = !DILocation(line: 1221, column: 31, scope: !5576)
!5607 = !DILocation(line: 1221, column: 36, scope: !5576)
!5608 = !DILocation(line: 1221, column: 34, scope: !5576)
!5609 = !DILocation(line: 1221, column: 44, scope: !5576)
!5610 = !DILocation(line: 1221, column: 49, scope: !5576)
!5611 = !DILocation(line: 1221, column: 47, scope: !5576)
!5612 = !DILocation(line: 1222, column: 16, scope: !5576)
!5613 = !DILocation(line: 1222, column: 26, scope: !5576)
!5614 = !DILocation(line: 1222, column: 19, scope: !5576)
!5615 = !DILocation(line: 1222, column: 36, scope: !5576)
!5616 = !DILocation(line: 1222, column: 29, scope: !5576)
!5617 = !DILocation(line: 1222, column: 9, scope: !5576)
!5618 = !DILocation(line: 1224, column: 21, scope: !5576)
!5619 = !DILocation(line: 1224, column: 28, scope: !5576)
!5620 = !DILocation(line: 1224, column: 26, scope: !5576)
!5621 = !DILocation(line: 1224, column: 4, scope: !5576)
!5622 = !DILocation(line: 1224, column: 12, scope: !5576)
!5623 = !DILocation(line: 1224, column: 19, scope: !5576)
!5624 = !DILocation(line: 1225, column: 21, scope: !5576)
!5625 = !DILocation(line: 1225, column: 28, scope: !5576)
!5626 = !DILocation(line: 1225, column: 26, scope: !5576)
!5627 = !DILocation(line: 1225, column: 4, scope: !5576)
!5628 = !DILocation(line: 1225, column: 12, scope: !5576)
!5629 = !DILocation(line: 1225, column: 19, scope: !5576)
!5630 = !DILocation(line: 1226, column: 8, scope: !5631)
!5631 = distinct !DILexicalBlock(scope: !5576, file: !1, line: 1226, column: 8)
!5632 = !DILocation(line: 1226, column: 20, scope: !5631)
!5633 = !DILocation(line: 1226, column: 17, scope: !5631)
!5634 = !DILocation(line: 1226, column: 8, scope: !5576)
!5635 = !DILocation(line: 1227, column: 5, scope: !5636)
!5636 = distinct !DILexicalBlock(scope: !5631, file: !1, line: 1226, column: 29)
!5637 = !DILocation(line: 1227, column: 23, scope: !5636)
!5638 = !DILocation(line: 1227, column: 33, scope: !5636)
!5639 = !DILocation(line: 1227, column: 37, scope: !5636)
!5640 = !DILocation(line: 1229, column: 19, scope: !5636)
!5641 = !DILocation(line: 1229, column: 30, scope: !5636)
!5642 = !DILocation(line: 1229, column: 35, scope: !5636)
!5643 = !DILocation(line: 1229, column: 43, scope: !5636)
!5644 = !DILocation(line: 1229, column: 33, scope: !5636)
!5645 = !DILocation(line: 1229, column: 23, scope: !5636)
!5646 = !DILocation(line: 1229, column: 5, scope: !5636)
!5647 = !DILocation(line: 1229, column: 13, scope: !5636)
!5648 = !DILocation(line: 1229, column: 16, scope: !5636)
!5649 = !DILocation(line: 1230, column: 19, scope: !5636)
!5650 = !DILocation(line: 1230, column: 30, scope: !5636)
!5651 = !DILocation(line: 1230, column: 35, scope: !5636)
!5652 = !DILocation(line: 1230, column: 43, scope: !5636)
!5653 = !DILocation(line: 1230, column: 33, scope: !5636)
!5654 = !DILocation(line: 1230, column: 23, scope: !5636)
!5655 = !DILocation(line: 1230, column: 5, scope: !5636)
!5656 = !DILocation(line: 1230, column: 13, scope: !5636)
!5657 = !DILocation(line: 1230, column: 16, scope: !5636)
!5658 = !DILocation(line: 1231, column: 19, scope: !5636)
!5659 = !DILocation(line: 1231, column: 30, scope: !5636)
!5660 = !DILocation(line: 1231, column: 35, scope: !5636)
!5661 = !DILocation(line: 1231, column: 43, scope: !5636)
!5662 = !DILocation(line: 1231, column: 33, scope: !5636)
!5663 = !DILocation(line: 1231, column: 23, scope: !5636)
!5664 = !DILocation(line: 1231, column: 5, scope: !5636)
!5665 = !DILocation(line: 1231, column: 13, scope: !5636)
!5666 = !DILocation(line: 1231, column: 16, scope: !5636)
!5667 = !DILocation(line: 1232, column: 19, scope: !5636)
!5668 = !DILocation(line: 1232, column: 30, scope: !5636)
!5669 = !DILocation(line: 1232, column: 35, scope: !5636)
!5670 = !DILocation(line: 1232, column: 43, scope: !5636)
!5671 = !DILocation(line: 1232, column: 33, scope: !5636)
!5672 = !DILocation(line: 1232, column: 23, scope: !5636)
!5673 = !DILocation(line: 1232, column: 5, scope: !5636)
!5674 = !DILocation(line: 1232, column: 13, scope: !5636)
!5675 = !DILocation(line: 1232, column: 16, scope: !5636)
!5676 = !DILocation(line: 1234, column: 13, scope: !5636)
!5677 = !DILocation(line: 1234, column: 25, scope: !5636)
!5678 = !DILocation(line: 1234, column: 35, scope: !5636)
!5679 = !DILocation(line: 1234, column: 28, scope: !5636)
!5680 = !DILocation(line: 1234, column: 45, scope: !5636)
!5681 = !DILocation(line: 1234, column: 38, scope: !5636)
!5682 = !DILocation(line: 1234, column: 51, scope: !5636)
!5683 = !DILocation(line: 1234, column: 49, scope: !5636)
!5684 = !DILocation(line: 1234, column: 17, scope: !5636)
!5685 = !DILocation(line: 1234, column: 10, scope: !5636)
!5686 = !DILocation(line: 1235, column: 5, scope: !5636)
!5687 = !DILocation(line: 1235, column: 23, scope: !5636)
!5688 = !DILocation(line: 1235, column: 33, scope: !5636)
!5689 = !DILocation(line: 1235, column: 38, scope: !5636)
!5690 = !DILocation(line: 1235, column: 36, scope: !5636)
!5691 = !DILocation(line: 1235, column: 46, scope: !5636)
!5692 = !DILocation(line: 1235, column: 51, scope: !5636)
!5693 = !DILocation(line: 1235, column: 49, scope: !5636)
!5694 = !DILocation(line: 1236, column: 13, scope: !5636)
!5695 = !DILocation(line: 1236, column: 25, scope: !5636)
!5696 = !DILocation(line: 1236, column: 35, scope: !5636)
!5697 = !DILocation(line: 1236, column: 28, scope: !5636)
!5698 = !DILocation(line: 1236, column: 45, scope: !5636)
!5699 = !DILocation(line: 1236, column: 38, scope: !5636)
!5700 = !DILocation(line: 1236, column: 51, scope: !5636)
!5701 = !DILocation(line: 1236, column: 49, scope: !5636)
!5702 = !DILocation(line: 1236, column: 17, scope: !5636)
!5703 = !DILocation(line: 1236, column: 10, scope: !5636)
!5704 = !DILocation(line: 1237, column: 5, scope: !5636)
!5705 = !DILocation(line: 1237, column: 23, scope: !5636)
!5706 = !DILocation(line: 1237, column: 33, scope: !5636)
!5707 = !DILocation(line: 1237, column: 38, scope: !5636)
!5708 = !DILocation(line: 1237, column: 36, scope: !5636)
!5709 = !DILocation(line: 1237, column: 46, scope: !5636)
!5710 = !DILocation(line: 1237, column: 51, scope: !5636)
!5711 = !DILocation(line: 1237, column: 49, scope: !5636)
!5712 = !DILocation(line: 1238, column: 13, scope: !5636)
!5713 = !DILocation(line: 1238, column: 25, scope: !5636)
!5714 = !DILocation(line: 1238, column: 35, scope: !5636)
!5715 = !DILocation(line: 1238, column: 28, scope: !5636)
!5716 = !DILocation(line: 1238, column: 45, scope: !5636)
!5717 = !DILocation(line: 1238, column: 38, scope: !5636)
!5718 = !DILocation(line: 1238, column: 51, scope: !5636)
!5719 = !DILocation(line: 1238, column: 49, scope: !5636)
!5720 = !DILocation(line: 1238, column: 17, scope: !5636)
!5721 = !DILocation(line: 1238, column: 10, scope: !5636)
!5722 = !DILocation(line: 1239, column: 22, scope: !5636)
!5723 = !DILocation(line: 1239, column: 29, scope: !5636)
!5724 = !DILocation(line: 1239, column: 27, scope: !5636)
!5725 = !DILocation(line: 1239, column: 5, scope: !5636)
!5726 = !DILocation(line: 1239, column: 13, scope: !5636)
!5727 = !DILocation(line: 1239, column: 20, scope: !5636)
!5728 = !DILocation(line: 1240, column: 22, scope: !5636)
!5729 = !DILocation(line: 1240, column: 29, scope: !5636)
!5730 = !DILocation(line: 1240, column: 27, scope: !5636)
!5731 = !DILocation(line: 1240, column: 5, scope: !5636)
!5732 = !DILocation(line: 1240, column: 13, scope: !5636)
!5733 = !DILocation(line: 1240, column: 20, scope: !5636)
!5734 = !DILocation(line: 1241, column: 4, scope: !5636)
!5735 = !DILocation(line: 1242, column: 3, scope: !5576)
!5736 = !DILocation(line: 1244, column: 4, scope: !5737)
!5737 = distinct !DILexicalBlock(scope: !5567, file: !1, line: 1243, column: 8)
!5738 = !DILocation(line: 1244, column: 15, scope: !5737)
!5739 = !DILocation(line: 1244, column: 23, scope: !5737)
!5740 = !DILocation(line: 1244, column: 32, scope: !5737)
!5741 = !DILocation(line: 1244, column: 36, scope: !5737)
!5742 = !DILocation(line: 1245, column: 8, scope: !5743)
!5743 = distinct !DILexicalBlock(scope: !5737, file: !1, line: 1245, column: 8)
!5744 = !DILocation(line: 1245, column: 20, scope: !5743)
!5745 = !DILocation(line: 1245, column: 17, scope: !5743)
!5746 = !DILocation(line: 1245, column: 8, scope: !5737)
!5747 = !DILocation(line: 1246, column: 5, scope: !5748)
!5748 = distinct !DILexicalBlock(scope: !5743, file: !1, line: 1245, column: 29)
!5749 = !DILocation(line: 1246, column: 23, scope: !5748)
!5750 = !DILocation(line: 1246, column: 33, scope: !5748)
!5751 = !DILocation(line: 1246, column: 37, scope: !5748)
!5752 = !DILocation(line: 1247, column: 19, scope: !5748)
!5753 = !DILocation(line: 1247, column: 30, scope: !5748)
!5754 = !DILocation(line: 1247, column: 35, scope: !5748)
!5755 = !DILocation(line: 1247, column: 43, scope: !5748)
!5756 = !DILocation(line: 1247, column: 33, scope: !5748)
!5757 = !DILocation(line: 1247, column: 23, scope: !5748)
!5758 = !DILocation(line: 1247, column: 5, scope: !5748)
!5759 = !DILocation(line: 1247, column: 13, scope: !5748)
!5760 = !DILocation(line: 1247, column: 16, scope: !5748)
!5761 = !DILocation(line: 1248, column: 19, scope: !5748)
!5762 = !DILocation(line: 1248, column: 30, scope: !5748)
!5763 = !DILocation(line: 1248, column: 35, scope: !5748)
!5764 = !DILocation(line: 1248, column: 43, scope: !5748)
!5765 = !DILocation(line: 1248, column: 33, scope: !5748)
!5766 = !DILocation(line: 1248, column: 23, scope: !5748)
!5767 = !DILocation(line: 1248, column: 5, scope: !5748)
!5768 = !DILocation(line: 1248, column: 13, scope: !5748)
!5769 = !DILocation(line: 1248, column: 16, scope: !5748)
!5770 = !DILocation(line: 1249, column: 19, scope: !5748)
!5771 = !DILocation(line: 1249, column: 30, scope: !5748)
!5772 = !DILocation(line: 1249, column: 35, scope: !5748)
!5773 = !DILocation(line: 1249, column: 43, scope: !5748)
!5774 = !DILocation(line: 1249, column: 33, scope: !5748)
!5775 = !DILocation(line: 1249, column: 23, scope: !5748)
!5776 = !DILocation(line: 1249, column: 5, scope: !5748)
!5777 = !DILocation(line: 1249, column: 13, scope: !5748)
!5778 = !DILocation(line: 1249, column: 16, scope: !5748)
!5779 = !DILocation(line: 1250, column: 19, scope: !5748)
!5780 = !DILocation(line: 1250, column: 30, scope: !5748)
!5781 = !DILocation(line: 1250, column: 35, scope: !5748)
!5782 = !DILocation(line: 1250, column: 43, scope: !5748)
!5783 = !DILocation(line: 1250, column: 33, scope: !5748)
!5784 = !DILocation(line: 1250, column: 23, scope: !5748)
!5785 = !DILocation(line: 1250, column: 5, scope: !5748)
!5786 = !DILocation(line: 1250, column: 13, scope: !5748)
!5787 = !DILocation(line: 1250, column: 16, scope: !5748)
!5788 = !DILocation(line: 1251, column: 4, scope: !5748)
!5789 = !DILocation(line: 1253, column: 21, scope: !5737)
!5790 = !DILocation(line: 1253, column: 27, scope: !5737)
!5791 = !DILocation(line: 1253, column: 30, scope: !5737)
!5792 = !DILocation(line: 1253, column: 29, scope: !5737)
!5793 = !DILocation(line: 1253, column: 36, scope: !5737)
!5794 = !DILocation(line: 1253, column: 39, scope: !5737)
!5795 = !DILocation(line: 1253, column: 38, scope: !5737)
!5796 = !DILocation(line: 1253, column: 45, scope: !5737)
!5797 = !DILocation(line: 1253, column: 48, scope: !5737)
!5798 = !DILocation(line: 1253, column: 47, scope: !5737)
!5799 = !DILocation(line: 1253, column: 54, scope: !5737)
!5800 = !DILocation(line: 1253, column: 57, scope: !5737)
!5801 = !DILocation(line: 1253, column: 56, scope: !5737)
!5802 = !DILocation(line: 1253, column: 63, scope: !5737)
!5803 = !DILocation(line: 1253, column: 72, scope: !5737)
!5804 = !DILocation(line: 1253, column: 4, scope: !5737)
!5805 = !DILocation(line: 1255, column: 2, scope: !5303)
!5806 = !DILocation(line: 1258, column: 7, scope: !5807)
!5807 = distinct !DILexicalBlock(scope: !5808, file: !1, line: 1258, column: 7)
!5808 = distinct !DILexicalBlock(scope: !5298, file: !1, line: 1256, column: 7)
!5809 = !DILocation(line: 1258, column: 12, scope: !5807)
!5810 = !DILocation(line: 1258, column: 22, scope: !5807)
!5811 = !DILocation(line: 1258, column: 7, scope: !5808)
!5812 = !DILocalVariable(name: "ff", scope: !5813, file: !1, line: 1259, type: !1622)
!5813 = distinct !DILexicalBlock(scope: !5807, file: !1, line: 1258, column: 37)
!5814 = !DILocation(line: 1259, column: 16, scope: !5813)
!5815 = !DILocation(line: 1259, column: 27, scope: !5813)
!5816 = !DILocation(line: 1259, column: 33, scope: !5813)
!5817 = !DILocation(line: 1259, column: 21, scope: !5813)
!5818 = !DILocalVariable(name: "q", scope: !5813, file: !1, line: 1259, type: !1622)
!5819 = !DILocation(line: 1259, column: 37, scope: !5813)
!5820 = !DILocation(line: 1259, column: 41, scope: !5813)
!5821 = !DILocation(line: 1259, column: 47, scope: !5813)
!5822 = !DILocation(line: 1259, column: 49, scope: !5813)
!5823 = !DILocation(line: 1259, column: 48, scope: !5813)
!5824 = !DILocalVariable(name: "Ux", scope: !5813, file: !1, line: 1260, type: !1622)
!5825 = !DILocation(line: 1260, column: 16, scope: !5813)
!5826 = !DILocation(line: 1260, column: 21, scope: !5813)
!5827 = !DILocation(line: 1260, column: 28, scope: !5813)
!5828 = !DILocation(line: 1260, column: 27, scope: !5813)
!5829 = !DILocalVariable(name: "Vx", scope: !5813, file: !1, line: 1260, type: !1622)
!5830 = !DILocation(line: 1260, column: 32, scope: !5813)
!5831 = !DILocation(line: 1260, column: 37, scope: !5813)
!5832 = !DILocation(line: 1260, column: 44, scope: !5813)
!5833 = !DILocation(line: 1260, column: 43, scope: !5813)
!5834 = !DILocalVariable(name: "Uy", scope: !5813, file: !1, line: 1260, type: !1622)
!5835 = !DILocation(line: 1260, column: 47, scope: !5813)
!5836 = !DILocation(line: 1260, column: 52, scope: !5813)
!5837 = !DILocation(line: 1260, column: 59, scope: !5813)
!5838 = !DILocation(line: 1260, column: 58, scope: !5813)
!5839 = !DILocalVariable(name: "Vy", scope: !5813, file: !1, line: 1260, type: !1622)
!5840 = !DILocation(line: 1260, column: 63, scope: !5813)
!5841 = !DILocation(line: 1260, column: 68, scope: !5813)
!5842 = !DILocation(line: 1260, column: 75, scope: !5813)
!5843 = !DILocation(line: 1260, column: 74, scope: !5813)
!5844 = !DILocalVariable(name: "A", scope: !5813, file: !1, line: 1261, type: !1622)
!5845 = !DILocation(line: 1261, column: 16, scope: !5813)
!5846 = !DILocation(line: 1261, column: 20, scope: !5813)
!5847 = !DILocation(line: 1261, column: 23, scope: !5813)
!5848 = !DILocation(line: 1261, column: 22, scope: !5813)
!5849 = !DILocation(line: 1261, column: 28, scope: !5813)
!5850 = !DILocation(line: 1261, column: 31, scope: !5813)
!5851 = !DILocation(line: 1261, column: 30, scope: !5813)
!5852 = !DILocation(line: 1261, column: 26, scope: !5813)
!5853 = !DILocalVariable(name: "B", scope: !5813, file: !1, line: 1262, type: !1622)
!5854 = !DILocation(line: 1262, column: 16, scope: !5813)
!5855 = !DILocation(line: 1262, column: 26, scope: !5813)
!5856 = !DILocation(line: 1262, column: 29, scope: !5813)
!5857 = !DILocation(line: 1262, column: 28, scope: !5813)
!5858 = !DILocation(line: 1262, column: 34, scope: !5813)
!5859 = !DILocation(line: 1262, column: 37, scope: !5813)
!5860 = !DILocation(line: 1262, column: 36, scope: !5813)
!5861 = !DILocation(line: 1262, column: 32, scope: !5813)
!5862 = !DILocation(line: 1262, column: 24, scope: !5813)
!5863 = !DILocalVariable(name: "C", scope: !5813, file: !1, line: 1263, type: !1622)
!5864 = !DILocation(line: 1263, column: 16, scope: !5813)
!5865 = !DILocation(line: 1263, column: 20, scope: !5813)
!5866 = !DILocation(line: 1263, column: 23, scope: !5813)
!5867 = !DILocation(line: 1263, column: 22, scope: !5813)
!5868 = !DILocation(line: 1263, column: 28, scope: !5813)
!5869 = !DILocation(line: 1263, column: 31, scope: !5813)
!5870 = !DILocation(line: 1263, column: 30, scope: !5813)
!5871 = !DILocation(line: 1263, column: 26, scope: !5813)
!5872 = !DILocalVariable(name: "F", scope: !5813, file: !1, line: 1264, type: !1622)
!5873 = !DILocation(line: 1264, column: 16, scope: !5813)
!5874 = !DILocation(line: 1264, column: 20, scope: !5813)
!5875 = !DILocation(line: 1264, column: 22, scope: !5813)
!5876 = !DILocation(line: 1264, column: 21, scope: !5813)
!5877 = !DILocation(line: 1264, column: 26, scope: !5813)
!5878 = !DILocation(line: 1264, column: 28, scope: !5813)
!5879 = !DILocation(line: 1264, column: 27, scope: !5813)
!5880 = !DILocation(line: 1264, column: 29, scope: !5813)
!5881 = !DILocation(line: 1264, column: 24, scope: !5813)
!5882 = !DILocalVariable(name: "a", scope: !5813, file: !1, line: 1265, type: !26)
!5883 = !DILocation(line: 1265, column: 10, scope: !5813)
!5884 = !DILocalVariable(name: "b", scope: !5813, file: !1, line: 1265, type: !26)
!5885 = !DILocation(line: 1265, column: 13, scope: !5813)
!5886 = !DILocalVariable(name: "th", scope: !5813, file: !1, line: 1265, type: !26)
!5887 = !DILocation(line: 1265, column: 16, scope: !5813)
!5888 = !DILocalVariable(name: "ecc", scope: !5813, file: !1, line: 1265, type: !26)
!5889 = !DILocation(line: 1265, column: 20, scope: !5813)
!5890 = !DILocalVariable(name: "fProbes", scope: !5813, file: !1, line: 1265, type: !26)
!5891 = !DILocation(line: 1265, column: 25, scope: !5813)
!5892 = !DILocation(line: 1266, column: 25, scope: !5813)
!5893 = !DILocation(line: 1266, column: 28, scope: !5813)
!5894 = !DILocation(line: 1266, column: 31, scope: !5813)
!5895 = !DILocation(line: 1266, column: 34, scope: !5813)
!5896 = !DILocation(line: 1266, column: 4, scope: !5813)
!5897 = !DILocation(line: 1267, column: 9, scope: !5813)
!5898 = !DILocation(line: 1267, column: 6, scope: !5813)
!5899 = !DILocation(line: 1268, column: 9, scope: !5813)
!5900 = !DILocation(line: 1268, column: 6, scope: !5813)
!5901 = !DILocation(line: 1269, column: 15, scope: !5813)
!5902 = !DILocation(line: 1269, column: 8, scope: !5813)
!5903 = !DILocation(line: 1269, column: 6, scope: !5813)
!5904 = !DILocation(line: 1270, column: 15, scope: !5813)
!5905 = !DILocation(line: 1270, column: 8, scope: !5813)
!5906 = !DILocation(line: 1270, column: 6, scope: !5813)
!5907 = !DILocation(line: 1271, column: 19, scope: !5813)
!5908 = !DILocation(line: 1271, column: 23, scope: !5813)
!5909 = !DILocation(line: 1271, column: 21, scope: !5813)
!5910 = !DILocation(line: 1271, column: 17, scope: !5813)
!5911 = !DILocation(line: 1271, column: 26, scope: !5813)
!5912 = !DILocation(line: 1271, column: 12, scope: !5813)
!5913 = !DILocation(line: 1273, column: 26, scope: !5813)
!5914 = !DILocation(line: 1273, column: 18, scope: !5813)
!5915 = !DILocation(line: 1273, column: 8, scope: !5813)
!5916 = !DILocation(line: 1273, column: 16, scope: !5813)
!5917 = !DILocation(line: 1274, column: 12, scope: !5918)
!5918 = distinct !DILexicalBlock(scope: !5813, file: !1, line: 1274, column: 8)
!5919 = !DILocation(line: 1274, column: 8, scope: !5918)
!5920 = !DILocation(line: 1274, column: 22, scope: !5918)
!5921 = !DILocation(line: 1274, column: 20, scope: !5918)
!5922 = !DILocation(line: 1274, column: 8, scope: !5813)
!5923 = !DILocation(line: 1274, column: 39, scope: !5918)
!5924 = !DILocation(line: 1274, column: 38, scope: !5918)
!5925 = !DILocation(line: 1274, column: 55, scope: !5918)
!5926 = !DILocation(line: 1274, column: 63, scope: !5918)
!5927 = !DILocation(line: 1274, column: 43, scope: !5918)
!5928 = !DILocation(line: 1274, column: 41, scope: !5918)
!5929 = !DILocation(line: 1274, column: 33, scope: !5918)
!5930 = !DILocation(line: 1274, column: 31, scope: !5918)
!5931 = !DILocation(line: 1275, column: 17, scope: !5813)
!5932 = !DILocation(line: 1275, column: 19, scope: !5813)
!5933 = !DILocation(line: 1275, column: 18, scope: !5813)
!5934 = !DILocation(line: 1275, column: 8, scope: !5813)
!5935 = !DILocation(line: 1275, column: 15, scope: !5813)
!5936 = !DILocation(line: 1276, column: 17, scope: !5813)
!5937 = !DILocation(line: 1276, column: 19, scope: !5813)
!5938 = !DILocation(line: 1276, column: 18, scope: !5813)
!5939 = !DILocation(line: 1276, column: 8, scope: !5813)
!5940 = !DILocation(line: 1276, column: 15, scope: !5813)
!5941 = !DILocation(line: 1277, column: 16, scope: !5813)
!5942 = !DILocation(line: 1277, column: 8, scope: !5813)
!5943 = !DILocation(line: 1277, column: 14, scope: !5813)
!5944 = !DILocation(line: 1278, column: 19, scope: !5813)
!5945 = !DILocation(line: 1278, column: 18, scope: !5813)
!5946 = !DILocation(line: 1278, column: 8, scope: !5813)
!5947 = !DILocation(line: 1278, column: 13, scope: !5813)
!5948 = !DILocation(line: 1279, column: 15, scope: !5813)
!5949 = !DILocation(line: 1279, column: 27, scope: !5813)
!5950 = !DILocation(line: 1279, column: 33, scope: !5813)
!5951 = !DILocation(line: 1279, column: 20, scope: !5813)
!5952 = !DILocation(line: 1279, column: 18, scope: !5813)
!5953 = !DILocation(line: 1279, column: 8, scope: !5813)
!5954 = !DILocation(line: 1279, column: 13, scope: !5813)
!5955 = !DILocation(line: 1280, column: 3, scope: !5813)
!5956 = !DILocation(line: 1281, column: 7, scope: !5957)
!5957 = distinct !DILexicalBlock(scope: !5808, file: !1, line: 1281, column: 7)
!5958 = !DILocation(line: 1281, column: 15, scope: !5957)
!5959 = !DILocation(line: 1281, column: 19, scope: !5957)
!5960 = !DILocation(line: 1281, column: 24, scope: !5957)
!5961 = !DILocation(line: 1281, column: 29, scope: !5957)
!5962 = !DILocation(line: 1281, column: 37, scope: !5957)
!5963 = !DILocation(line: 1281, column: 54, scope: !5957)
!5964 = !DILocation(line: 1281, column: 7, scope: !5808)
!5965 = !DILocation(line: 1283, column: 4, scope: !5966)
!5966 = distinct !DILexicalBlock(scope: !5957, file: !1, line: 1281, column: 61)
!5967 = !DILocation(line: 1283, column: 15, scope: !5966)
!5968 = !DILocation(line: 1283, column: 23, scope: !5966)
!5969 = !DILocation(line: 1283, column: 29, scope: !5966)
!5970 = !DILocation(line: 1283, column: 33, scope: !5966)
!5971 = !DILocation(line: 1284, column: 11, scope: !5966)
!5972 = !DILocation(line: 1284, column: 19, scope: !5966)
!5973 = !DILocation(line: 1284, column: 24, scope: !5966)
!5974 = !DILocation(line: 1284, column: 32, scope: !5966)
!5975 = !DILocation(line: 1284, column: 22, scope: !5966)
!5976 = !DILocation(line: 1284, column: 37, scope: !5966)
!5977 = !DILocation(line: 1284, column: 45, scope: !5966)
!5978 = !DILocation(line: 1284, column: 35, scope: !5966)
!5979 = !DILocation(line: 1284, column: 9, scope: !5966)
!5980 = !DILocation(line: 1285, column: 4, scope: !5966)
!5981 = !DILocation(line: 1285, column: 22, scope: !5966)
!5982 = !DILocation(line: 1285, column: 28, scope: !5966)
!5983 = !DILocation(line: 1285, column: 33, scope: !5966)
!5984 = !DILocation(line: 1285, column: 31, scope: !5966)
!5985 = !DILocation(line: 1285, column: 41, scope: !5966)
!5986 = !DILocation(line: 1285, column: 46, scope: !5966)
!5987 = !DILocation(line: 1285, column: 44, scope: !5966)
!5988 = !DILocation(line: 1286, column: 16, scope: !5966)
!5989 = !DILocation(line: 1286, column: 26, scope: !5966)
!5990 = !DILocation(line: 1286, column: 19, scope: !5966)
!5991 = !DILocation(line: 1286, column: 36, scope: !5966)
!5992 = !DILocation(line: 1286, column: 29, scope: !5966)
!5993 = !DILocation(line: 1286, column: 9, scope: !5966)
!5994 = !DILocation(line: 1287, column: 4, scope: !5966)
!5995 = !DILocation(line: 1287, column: 22, scope: !5966)
!5996 = !DILocation(line: 1287, column: 28, scope: !5966)
!5997 = !DILocation(line: 1287, column: 33, scope: !5966)
!5998 = !DILocation(line: 1287, column: 31, scope: !5966)
!5999 = !DILocation(line: 1287, column: 41, scope: !5966)
!6000 = !DILocation(line: 1287, column: 46, scope: !5966)
!6001 = !DILocation(line: 1287, column: 44, scope: !5966)
!6002 = !DILocation(line: 1288, column: 16, scope: !5966)
!6003 = !DILocation(line: 1288, column: 26, scope: !5966)
!6004 = !DILocation(line: 1288, column: 19, scope: !5966)
!6005 = !DILocation(line: 1288, column: 36, scope: !5966)
!6006 = !DILocation(line: 1288, column: 29, scope: !5966)
!6007 = !DILocation(line: 1288, column: 9, scope: !5966)
!6008 = !DILocation(line: 1290, column: 21, scope: !5966)
!6009 = !DILocation(line: 1290, column: 28, scope: !5966)
!6010 = !DILocation(line: 1290, column: 26, scope: !5966)
!6011 = !DILocation(line: 1290, column: 4, scope: !5966)
!6012 = !DILocation(line: 1290, column: 12, scope: !5966)
!6013 = !DILocation(line: 1290, column: 19, scope: !5966)
!6014 = !DILocation(line: 1291, column: 21, scope: !5966)
!6015 = !DILocation(line: 1291, column: 28, scope: !5966)
!6016 = !DILocation(line: 1291, column: 26, scope: !5966)
!6017 = !DILocation(line: 1291, column: 4, scope: !5966)
!6018 = !DILocation(line: 1291, column: 12, scope: !5966)
!6019 = !DILocation(line: 1291, column: 19, scope: !5966)
!6020 = !DILocation(line: 1292, column: 3, scope: !5966)
!6021 = !DILocation(line: 1294, column: 4, scope: !6022)
!6022 = distinct !DILexicalBlock(scope: !5957, file: !1, line: 1293, column: 8)
!6023 = !DILocation(line: 1294, column: 15, scope: !6022)
!6024 = !DILocation(line: 1294, column: 23, scope: !6022)
!6025 = !DILocation(line: 1294, column: 29, scope: !6022)
!6026 = !DILocation(line: 1294, column: 33, scope: !6022)
!6027 = !DILocation(line: 1295, column: 21, scope: !6022)
!6028 = !DILocation(line: 1295, column: 27, scope: !6022)
!6029 = !DILocation(line: 1295, column: 30, scope: !6022)
!6030 = !DILocation(line: 1295, column: 29, scope: !6022)
!6031 = !DILocation(line: 1295, column: 36, scope: !6022)
!6032 = !DILocation(line: 1295, column: 39, scope: !6022)
!6033 = !DILocation(line: 1295, column: 38, scope: !6022)
!6034 = !DILocation(line: 1295, column: 45, scope: !6022)
!6035 = !DILocation(line: 1295, column: 48, scope: !6022)
!6036 = !DILocation(line: 1295, column: 47, scope: !6022)
!6037 = !DILocation(line: 1295, column: 54, scope: !6022)
!6038 = !DILocation(line: 1295, column: 57, scope: !6022)
!6039 = !DILocation(line: 1295, column: 56, scope: !6022)
!6040 = !DILocation(line: 1295, column: 63, scope: !6022)
!6041 = !DILocation(line: 1295, column: 72, scope: !6022)
!6042 = !DILocation(line: 1295, column: 4, scope: !6022)
!6043 = !DILocation(line: 1299, column: 6, scope: !6044)
!6044 = distinct !DILexicalBlock(scope: !4507, file: !1, line: 1299, column: 6)
!6045 = !DILocation(line: 1299, column: 11, scope: !6044)
!6046 = !DILocation(line: 1299, column: 19, scope: !6044)
!6047 = !DILocation(line: 1299, column: 6, scope: !4507)
!6048 = !DILocation(line: 1300, column: 30, scope: !6044)
!6049 = !DILocation(line: 1300, column: 38, scope: !6044)
!6050 = !DILocation(line: 1300, column: 51, scope: !6044)
!6051 = !DILocation(line: 1300, column: 59, scope: !6044)
!6052 = !DILocation(line: 1300, column: 63, scope: !6044)
!6053 = !DILocation(line: 1300, column: 71, scope: !6044)
!6054 = !DILocation(line: 1300, column: 75, scope: !6044)
!6055 = !DILocation(line: 1300, column: 83, scope: !6044)
!6056 = !DILocation(line: 1300, column: 43, scope: !6044)
!6057 = !DILocation(line: 1300, column: 41, scope: !6044)
!6058 = !DILocation(line: 1300, column: 16, scope: !6044)
!6059 = !DILocation(line: 1300, column: 24, scope: !6044)
!6060 = !DILocation(line: 1300, column: 28, scope: !6044)
!6061 = !DILocation(line: 1300, column: 3, scope: !6044)
!6062 = !DILocation(line: 1300, column: 11, scope: !6044)
!6063 = !DILocation(line: 1300, column: 14, scope: !6044)
!6064 = !DILocation(line: 1302, column: 17, scope: !6044)
!6065 = !DILocation(line: 1302, column: 25, scope: !6044)
!6066 = !DILocation(line: 1302, column: 3, scope: !6044)
!6067 = !DILocation(line: 1302, column: 11, scope: !6044)
!6068 = !DILocation(line: 1302, column: 15, scope: !6044)
!6069 = !DILocation(line: 1303, column: 6, scope: !6070)
!6070 = distinct !DILexicalBlock(scope: !4507, file: !1, line: 1303, column: 6)
!6071 = !DILocation(line: 1303, column: 11, scope: !6070)
!6072 = !DILocation(line: 1303, column: 16, scope: !6070)
!6073 = !DILocation(line: 1303, column: 6, scope: !4507)
!6074 = !DILocation(line: 1303, column: 51, scope: !6070)
!6075 = !DILocation(line: 1303, column: 59, scope: !6070)
!6076 = !DILocation(line: 1303, column: 49, scope: !6070)
!6077 = !DILocation(line: 1303, column: 32, scope: !6070)
!6078 = !DILocation(line: 1303, column: 40, scope: !6070)
!6079 = !DILocation(line: 1303, column: 43, scope: !6070)
!6080 = !DILocation(line: 1305, column: 9, scope: !6081)
!6081 = distinct !DILexicalBlock(scope: !4507, file: !1, line: 1305, column: 6)
!6082 = !DILocation(line: 1305, column: 7, scope: !6081)
!6083 = !DILocation(line: 1305, column: 14, scope: !6081)
!6084 = !DILocation(line: 1305, column: 29, scope: !6081)
!6085 = !DILocation(line: 1305, column: 33, scope: !6081)
!6086 = !DILocation(line: 1305, column: 39, scope: !6081)
!6087 = !DILocation(line: 1305, column: 45, scope: !6081)
!6088 = !DILocation(line: 1305, column: 6, scope: !4507)
!6089 = !DILocation(line: 1306, column: 17, scope: !6081)
!6090 = !DILocation(line: 1306, column: 23, scope: !6081)
!6091 = !DILocation(line: 1306, column: 25, scope: !6081)
!6092 = !DILocation(line: 1306, column: 31, scope: !6081)
!6093 = !DILocation(line: 1306, column: 24, scope: !6081)
!6094 = !DILocation(line: 1306, column: 3, scope: !6081)
!6095 = !DILocation(line: 1306, column: 9, scope: !6081)
!6096 = !DILocation(line: 1306, column: 14, scope: !6081)
!6097 = !DILocation(line: 1308, column: 6, scope: !6098)
!6098 = distinct !DILexicalBlock(scope: !4507, file: !1, line: 1308, column: 6)
!6099 = !DILocation(line: 1308, column: 14, scope: !6098)
!6100 = !DILocation(line: 1308, column: 18, scope: !6098)
!6101 = !DILocation(line: 1308, column: 22, scope: !6098)
!6102 = !DILocation(line: 1308, column: 27, scope: !6098)
!6103 = !DILocation(line: 1308, column: 35, scope: !6098)
!6104 = !DILocation(line: 1308, column: 6, scope: !4507)
!6105 = !DILocation(line: 1315, column: 26, scope: !6106)
!6106 = distinct !DILexicalBlock(scope: !6098, file: !1, line: 1308, column: 53)
!6107 = !DILocation(line: 1315, column: 34, scope: !6106)
!6108 = !DILocation(line: 1315, column: 37, scope: !6106)
!6109 = !DILocation(line: 1315, column: 24, scope: !6106)
!6110 = !DILocation(line: 1315, column: 3, scope: !6106)
!6111 = !DILocation(line: 1315, column: 11, scope: !6106)
!6112 = !DILocation(line: 1315, column: 18, scope: !6106)
!6113 = !DILocation(line: 1316, column: 25, scope: !6106)
!6114 = !DILocation(line: 1316, column: 33, scope: !6106)
!6115 = !DILocation(line: 1316, column: 36, scope: !6106)
!6116 = !DILocation(line: 1316, column: 23, scope: !6106)
!6117 = !DILocation(line: 1316, column: 3, scope: !6106)
!6118 = !DILocation(line: 1316, column: 11, scope: !6106)
!6119 = !DILocation(line: 1316, column: 18, scope: !6106)
!6120 = !DILocation(line: 1317, column: 25, scope: !6106)
!6121 = !DILocation(line: 1317, column: 33, scope: !6106)
!6122 = !DILocation(line: 1317, column: 36, scope: !6106)
!6123 = !DILocation(line: 1317, column: 23, scope: !6106)
!6124 = !DILocation(line: 1317, column: 3, scope: !6106)
!6125 = !DILocation(line: 1317, column: 11, scope: !6106)
!6126 = !DILocation(line: 1317, column: 18, scope: !6106)
!6127 = !DILocation(line: 1318, column: 2, scope: !6106)
!6128 = !DILocation(line: 1327, column: 6, scope: !6129)
!6129 = distinct !DILexicalBlock(scope: !4507, file: !1, line: 1327, column: 6)
!6130 = !DILocation(line: 1327, column: 14, scope: !6129)
!6131 = !DILocation(line: 1327, column: 16, scope: !6129)
!6132 = !DILocation(line: 1327, column: 23, scope: !6129)
!6133 = !DILocation(line: 1327, column: 26, scope: !6129)
!6134 = !DILocation(line: 1327, column: 34, scope: !6129)
!6135 = !DILocation(line: 1327, column: 36, scope: !6129)
!6136 = !DILocation(line: 1327, column: 43, scope: !6129)
!6137 = !DILocation(line: 1327, column: 48, scope: !6129)
!6138 = !DILocation(line: 1327, column: 53, scope: !6129)
!6139 = !DILocation(line: 1327, column: 61, scope: !6129)
!6140 = !DILocation(line: 1327, column: 6, scope: !4507)
!6141 = !DILocation(line: 1328, column: 12, scope: !6142)
!6142 = distinct !DILexicalBlock(scope: !6129, file: !1, line: 1327, column: 79)
!6143 = !DILocation(line: 1328, column: 20, scope: !6142)
!6144 = !DILocation(line: 1328, column: 11, scope: !6142)
!6145 = !DILocation(line: 1328, column: 6, scope: !6142)
!6146 = !DILocation(line: 1329, column: 17, scope: !6142)
!6147 = !DILocation(line: 1329, column: 3, scope: !6142)
!6148 = !DILocation(line: 1329, column: 11, scope: !6142)
!6149 = !DILocation(line: 1329, column: 14, scope: !6142)
!6150 = !DILocation(line: 1330, column: 17, scope: !6142)
!6151 = !DILocation(line: 1330, column: 3, scope: !6142)
!6152 = !DILocation(line: 1330, column: 11, scope: !6142)
!6153 = !DILocation(line: 1330, column: 14, scope: !6142)
!6154 = !DILocation(line: 1331, column: 17, scope: !6142)
!6155 = !DILocation(line: 1331, column: 3, scope: !6142)
!6156 = !DILocation(line: 1331, column: 11, scope: !6142)
!6157 = !DILocation(line: 1331, column: 14, scope: !6142)
!6158 = !DILocation(line: 1332, column: 2, scope: !6142)
!6159 = !DILocation(line: 1334, column: 6, scope: !6160)
!6160 = distinct !DILexicalBlock(scope: !4507, file: !1, line: 1334, column: 6)
!6161 = !DILocation(line: 1334, column: 6, scope: !4507)
!6162 = !DILocation(line: 1335, column: 31, scope: !6160)
!6163 = !DILocation(line: 1335, column: 36, scope: !6160)
!6164 = !DILocation(line: 1335, column: 42, scope: !6160)
!6165 = !DILocation(line: 1335, column: 3, scope: !6160)
!6166 = !DILocation(line: 1337, column: 2, scope: !4507)
!6167 = !DILocation(line: 1337, column: 2, scope: !6168)
!6168 = distinct !DILexicalBlock(scope: !4507, file: !1, line: 1337, column: 2)
!6169 = !DILocation(line: 1337, column: 2, scope: !6170)
!6170 = distinct !DILexicalBlock(scope: !6171, file: !1, line: 1337, column: 2)
!6171 = distinct !DILexicalBlock(scope: !6168, file: !1, line: 1337, column: 2)
!6172 = !DILocation(line: 1337, column: 2, scope: !6171)
!6173 = !DILocation(line: 1337, column: 2, scope: !6174)
!6174 = distinct !DILexicalBlock(scope: !6171, file: !1, line: 1337, column: 2)
!6175 = !DILocation(line: 1337, column: 2, scope: !6176)
!6176 = distinct !DILexicalBlock(scope: !6171, file: !1, line: 1337, column: 2)
!6177 = !DILocation(line: 1337, column: 2, scope: !6178)
!6178 = distinct !DILexicalBlock(scope: !4507, file: !1, line: 1337, column: 2)
!6179 = !DILocalVariable(name: "_hsv", scope: !6180, file: !1, line: 1337, type: !339)
!6180 = distinct !DILexicalBlock(scope: !6178, file: !1, line: 1337, column: 2)
!6181 = !DILocation(line: 1337, column: 2, scope: !6180)
!6182 = !DILocation(line: 1339, column: 9, scope: !4507)
!6183 = !DILocation(line: 1339, column: 2, scope: !4507)
!6184 = !DILocation(line: 1340, column: 1, scope: !4507)
!6185 = distinct !DISubprogram(name: "image_mipmap_test", scope: !1, file: !1, line: 889, type: !6186, scopeLine: 890, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1638)
!6186 = !DISubroutineType(types: !6187)
!6187 = !{null, !142, !34}
!6188 = !DILocalVariable(name: "tex", arg: 1, scope: !6185, file: !1, line: 889, type: !142)
!6189 = !DILocation(line: 889, column: 36, scope: !6185)
!6190 = !DILocalVariable(name: "ibuf", arg: 2, scope: !6185, file: !1, line: 889, type: !34)
!6191 = !DILocation(line: 889, column: 48, scope: !6185)
!6192 = !DILocation(line: 891, column: 6, scope: !6193)
!6193 = distinct !DILexicalBlock(scope: !6185, file: !1, line: 891, column: 6)
!6194 = !DILocation(line: 891, column: 11, scope: !6193)
!6195 = !DILocation(line: 891, column: 19, scope: !6193)
!6196 = !DILocation(line: 891, column: 6, scope: !6185)
!6197 = !DILocation(line: 892, column: 8, scope: !6198)
!6198 = distinct !DILexicalBlock(scope: !6199, file: !1, line: 892, column: 7)
!6199 = distinct !DILexicalBlock(scope: !6193, file: !1, line: 891, column: 33)
!6200 = !DILocation(line: 892, column: 14, scope: !6198)
!6201 = !DILocation(line: 892, column: 20, scope: !6198)
!6202 = !DILocation(line: 892, column: 33, scope: !6198)
!6203 = !DILocation(line: 892, column: 7, scope: !6199)
!6204 = !DILocation(line: 894, column: 8, scope: !6205)
!6205 = distinct !DILexicalBlock(scope: !6206, file: !1, line: 894, column: 8)
!6206 = distinct !DILexicalBlock(scope: !6198, file: !1, line: 892, column: 39)
!6207 = !DILocation(line: 894, column: 14, scope: !6205)
!6208 = !DILocation(line: 894, column: 24, scope: !6205)
!6209 = !DILocation(line: 894, column: 28, scope: !6205)
!6210 = !DILocation(line: 894, column: 34, scope: !6205)
!6211 = !DILocation(line: 894, column: 44, scope: !6205)
!6212 = !DILocation(line: 894, column: 8, scope: !6206)
!6213 = !DILocation(line: 895, column: 5, scope: !6214)
!6214 = distinct !DILexicalBlock(scope: !6205, file: !1, line: 894, column: 66)
!6215 = !DILocation(line: 896, column: 9, scope: !6216)
!6216 = distinct !DILexicalBlock(scope: !6214, file: !1, line: 896, column: 9)
!6217 = !DILocation(line: 896, column: 15, scope: !6216)
!6218 = !DILocation(line: 896, column: 25, scope: !6216)
!6219 = !DILocation(line: 896, column: 9, scope: !6214)
!6220 = !DILocation(line: 897, column: 23, scope: !6221)
!6221 = distinct !DILexicalBlock(scope: !6216, file: !1, line: 896, column: 46)
!6222 = !DILocation(line: 897, column: 29, scope: !6221)
!6223 = !DILocation(line: 897, column: 34, scope: !6221)
!6224 = !DILocation(line: 897, column: 42, scope: !6221)
!6225 = !DILocation(line: 897, column: 6, scope: !6221)
!6226 = !DILocation(line: 898, column: 6, scope: !6221)
!6227 = !DILocation(line: 898, column: 12, scope: !6221)
!6228 = !DILocation(line: 898, column: 22, scope: !6221)
!6229 = !DILocation(line: 899, column: 5, scope: !6221)
!6230 = !DILocation(line: 900, column: 5, scope: !6214)
!6231 = !DILocation(line: 901, column: 4, scope: !6214)
!6232 = !DILocation(line: 902, column: 8, scope: !6233)
!6233 = distinct !DILexicalBlock(scope: !6206, file: !1, line: 902, column: 8)
!6234 = !DILocation(line: 902, column: 14, scope: !6233)
!6235 = !DILocation(line: 902, column: 24, scope: !6233)
!6236 = !DILocation(line: 902, column: 8, scope: !6206)
!6237 = !DILocation(line: 903, column: 5, scope: !6238)
!6238 = distinct !DILexicalBlock(scope: !6233, file: !1, line: 902, column: 33)
!6239 = !DILocation(line: 904, column: 9, scope: !6240)
!6240 = distinct !DILexicalBlock(scope: !6238, file: !1, line: 904, column: 9)
!6241 = !DILocation(line: 904, column: 15, scope: !6240)
!6242 = !DILocation(line: 904, column: 25, scope: !6240)
!6243 = !DILocation(line: 904, column: 9, scope: !6238)
!6244 = !DILocation(line: 905, column: 21, scope: !6240)
!6245 = !DILocation(line: 905, column: 27, scope: !6240)
!6246 = !DILocation(line: 905, column: 32, scope: !6240)
!6247 = !DILocation(line: 905, column: 40, scope: !6240)
!6248 = !DILocation(line: 905, column: 6, scope: !6240)
!6249 = !DILocation(line: 906, column: 5, scope: !6238)
!6250 = !DILocation(line: 907, column: 4, scope: !6238)
!6251 = !DILocation(line: 909, column: 8, scope: !6252)
!6252 = distinct !DILexicalBlock(scope: !6206, file: !1, line: 909, column: 8)
!6253 = !DILocation(line: 909, column: 14, scope: !6252)
!6254 = !DILocation(line: 909, column: 24, scope: !6252)
!6255 = !DILocation(line: 909, column: 8, scope: !6206)
!6256 = !DILocation(line: 910, column: 5, scope: !6257)
!6257 = distinct !DILexicalBlock(scope: !6252, file: !1, line: 909, column: 33)
!6258 = !DILocation(line: 910, column: 10, scope: !6257)
!6259 = !DILocation(line: 910, column: 18, scope: !6257)
!6260 = !DILocation(line: 911, column: 4, scope: !6257)
!6261 = !DILocation(line: 912, column: 3, scope: !6206)
!6262 = !DILocation(line: 913, column: 2, scope: !6199)
!6263 = !DILocation(line: 915, column: 1, scope: !6185)
!6264 = distinct !DISubprogram(name: "min_fff", scope: !2796, file: !2796, line: 220, type: !2797, scopeLine: 221, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1638)
!6265 = !DILocalVariable(name: "a", arg: 1, scope: !6264, file: !2796, line: 220, type: !26)
!6266 = !DILocation(line: 220, column: 29, scope: !6264)
!6267 = !DILocalVariable(name: "b", arg: 2, scope: !6264, file: !2796, line: 220, type: !26)
!6268 = !DILocation(line: 220, column: 38, scope: !6264)
!6269 = !DILocalVariable(name: "c", arg: 3, scope: !6264, file: !2796, line: 220, type: !26)
!6270 = !DILocation(line: 220, column: 47, scope: !6264)
!6271 = !DILocation(line: 222, column: 23, scope: !6264)
!6272 = !DILocation(line: 222, column: 26, scope: !6264)
!6273 = !DILocation(line: 222, column: 16, scope: !6264)
!6274 = !DILocation(line: 222, column: 30, scope: !6264)
!6275 = !DILocation(line: 222, column: 9, scope: !6264)
!6276 = !DILocation(line: 222, column: 2, scope: !6264)
!6277 = distinct !DISubprogram(name: "max_ff", scope: !2796, file: !2796, line: 206, type: !6278, scopeLine: 207, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1638)
!6278 = !DISubroutineType(types: !6279)
!6279 = !{!26, !26, !26}
!6280 = !DILocalVariable(name: "a", arg: 1, scope: !6277, file: !2796, line: 206, type: !26)
!6281 = !DILocation(line: 206, column: 28, scope: !6277)
!6282 = !DILocalVariable(name: "b", arg: 2, scope: !6277, file: !2796, line: 206, type: !26)
!6283 = !DILocation(line: 206, column: 37, scope: !6277)
!6284 = !DILocation(line: 208, column: 10, scope: !6277)
!6285 = !DILocation(line: 208, column: 14, scope: !6277)
!6286 = !DILocation(line: 208, column: 12, scope: !6277)
!6287 = !DILocation(line: 208, column: 9, scope: !6277)
!6288 = !DILocation(line: 208, column: 19, scope: !6277)
!6289 = !DILocation(line: 208, column: 23, scope: !6277)
!6290 = !DILocation(line: 208, column: 2, scope: !6277)
!6291 = distinct !DISubprogram(name: "mul_v3_fl", scope: !4493, file: !4493, line: 392, type: !6292, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1638)
!6292 = !DISubroutineType(types: !6293)
!6293 = !{null, !52, !26}
!6294 = !DILocalVariable(name: "r", arg: 1, scope: !6291, file: !4493, line: 392, type: !52)
!6295 = !DILocation(line: 392, column: 30, scope: !6291)
!6296 = !DILocalVariable(name: "f", arg: 2, scope: !6291, file: !4493, line: 392, type: !26)
!6297 = !DILocation(line: 392, column: 42, scope: !6291)
!6298 = !DILocation(line: 394, column: 10, scope: !6291)
!6299 = !DILocation(line: 394, column: 2, scope: !6291)
!6300 = !DILocation(line: 394, column: 7, scope: !6291)
!6301 = !DILocation(line: 395, column: 10, scope: !6291)
!6302 = !DILocation(line: 395, column: 2, scope: !6291)
!6303 = !DILocation(line: 395, column: 7, scope: !6291)
!6304 = !DILocation(line: 396, column: 10, scope: !6291)
!6305 = !DILocation(line: 396, column: 2, scope: !6291)
!6306 = !DILocation(line: 396, column: 7, scope: !6291)
!6307 = !DILocation(line: 397, column: 1, scope: !6291)
!6308 = distinct !DISubprogram(name: "image_sample", scope: !1, file: !1, line: 1749, type: !6309, scopeLine: 1750, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1638)
!6309 = !DISubroutineType(types: !6310)
!6310 = !{null, !1619, !26, !26, !26, !26, !52, !1635}
!6311 = !DILocalVariable(name: "ima", arg: 1, scope: !6308, file: !1, line: 1749, type: !1619)
!6312 = !DILocation(line: 1749, column: 26, scope: !6308)
!6313 = !DILocalVariable(name: "fx", arg: 2, scope: !6308, file: !1, line: 1749, type: !26)
!6314 = !DILocation(line: 1749, column: 37, scope: !6308)
!6315 = !DILocalVariable(name: "fy", arg: 3, scope: !6308, file: !1, line: 1749, type: !26)
!6316 = !DILocation(line: 1749, column: 47, scope: !6308)
!6317 = !DILocalVariable(name: "dx", arg: 4, scope: !6308, file: !1, line: 1749, type: !26)
!6318 = !DILocation(line: 1749, column: 57, scope: !6308)
!6319 = !DILocalVariable(name: "dy", arg: 5, scope: !6308, file: !1, line: 1749, type: !26)
!6320 = !DILocation(line: 1749, column: 67, scope: !6308)
!6321 = !DILocalVariable(name: "result", arg: 6, scope: !6308, file: !1, line: 1749, type: !52)
!6322 = !DILocation(line: 1749, column: 77, scope: !6308)
!6323 = !DILocalVariable(name: "pool", arg: 7, scope: !6308, file: !1, line: 1749, type: !1635)
!6324 = !DILocation(line: 1749, column: 106, scope: !6308)
!6325 = !DILocalVariable(name: "texres", scope: !6308, file: !1, line: 1751, type: !1624)
!6326 = !DILocation(line: 1751, column: 12, scope: !6308)
!6327 = !DILocalVariable(name: "ibuf", scope: !6308, file: !1, line: 1752, type: !34)
!6328 = !DILocation(line: 1752, column: 9, scope: !6308)
!6329 = !DILocation(line: 1752, column: 44, scope: !6308)
!6330 = !DILocation(line: 1752, column: 55, scope: !6308)
!6331 = !DILocation(line: 1752, column: 16, scope: !6308)
!6332 = !DILocation(line: 1754, column: 6, scope: !6333)
!6333 = distinct !DILexicalBlock(scope: !6308, file: !1, line: 1754, column: 6)
!6334 = !DILocation(line: 1754, column: 6, scope: !6308)
!6335 = !DILocation(line: 1755, column: 11, scope: !6336)
!6336 = distinct !DILexicalBlock(scope: !6333, file: !1, line: 1754, column: 30)
!6337 = !DILocation(line: 1755, column: 3, scope: !6336)
!6338 = !DILocation(line: 1756, column: 3, scope: !6336)
!6339 = !DILocation(line: 1759, column: 10, scope: !6340)
!6340 = distinct !DILexicalBlock(scope: !6308, file: !1, line: 1759, column: 7)
!6341 = !DILocation(line: 1759, column: 8, scope: !6340)
!6342 = !DILocation(line: 1759, column: 15, scope: !6340)
!6343 = !DILocation(line: 1759, column: 30, scope: !6340)
!6344 = !DILocation(line: 1759, column: 34, scope: !6340)
!6345 = !DILocation(line: 1759, column: 40, scope: !6340)
!6346 = !DILocation(line: 1759, column: 46, scope: !6340)
!6347 = !DILocation(line: 1759, column: 7, scope: !6308)
!6348 = !DILocation(line: 1760, column: 17, scope: !6340)
!6349 = !DILocation(line: 1760, column: 23, scope: !6340)
!6350 = !DILocation(line: 1760, column: 25, scope: !6340)
!6351 = !DILocation(line: 1760, column: 31, scope: !6340)
!6352 = !DILocation(line: 1760, column: 24, scope: !6340)
!6353 = !DILocation(line: 1760, column: 3, scope: !6340)
!6354 = !DILocation(line: 1760, column: 9, scope: !6340)
!6355 = !DILocation(line: 1760, column: 13, scope: !6340)
!6356 = !DILocation(line: 1762, column: 9, scope: !6308)
!6357 = !DILocation(line: 1762, column: 16, scope: !6308)
!6358 = !DILocation(line: 1763, column: 12, scope: !6308)
!6359 = !DILocation(line: 1763, column: 18, scope: !6308)
!6360 = !DILocation(line: 1763, column: 22, scope: !6308)
!6361 = !DILocation(line: 1763, column: 26, scope: !6308)
!6362 = !DILocation(line: 1763, column: 31, scope: !6308)
!6363 = !DILocation(line: 1763, column: 29, scope: !6308)
!6364 = !DILocation(line: 1763, column: 35, scope: !6308)
!6365 = !DILocation(line: 1763, column: 40, scope: !6308)
!6366 = !DILocation(line: 1763, column: 38, scope: !6308)
!6367 = !DILocation(line: 1763, column: 2, scope: !6308)
!6368 = !DILocation(line: 1764, column: 13, scope: !6308)
!6369 = !DILocation(line: 1764, column: 29, scope: !6308)
!6370 = !DILocation(line: 1764, column: 2, scope: !6308)
!6371 = !DILocation(line: 1766, column: 10, scope: !6372)
!6372 = distinct !DILexicalBlock(scope: !6308, file: !1, line: 1766, column: 7)
!6373 = !DILocation(line: 1766, column: 8, scope: !6372)
!6374 = !DILocation(line: 1766, column: 15, scope: !6372)
!6375 = !DILocation(line: 1766, column: 30, scope: !6372)
!6376 = !DILocation(line: 1766, column: 34, scope: !6372)
!6377 = !DILocation(line: 1766, column: 40, scope: !6372)
!6378 = !DILocation(line: 1766, column: 46, scope: !6372)
!6379 = !DILocation(line: 1766, column: 7, scope: !6308)
!6380 = !DILocation(line: 1767, column: 17, scope: !6372)
!6381 = !DILocation(line: 1767, column: 23, scope: !6372)
!6382 = !DILocation(line: 1767, column: 25, scope: !6372)
!6383 = !DILocation(line: 1767, column: 31, scope: !6372)
!6384 = !DILocation(line: 1767, column: 24, scope: !6372)
!6385 = !DILocation(line: 1767, column: 3, scope: !6372)
!6386 = !DILocation(line: 1767, column: 9, scope: !6372)
!6387 = !DILocation(line: 1767, column: 13, scope: !6372)
!6388 = !DILocation(line: 1769, column: 2, scope: !6308)
!6389 = !DILocation(line: 1769, column: 7, scope: !6308)
!6390 = !DILocation(line: 1769, column: 11, scope: !6308)
!6391 = !DILocation(line: 1771, column: 30, scope: !6308)
!6392 = !DILocation(line: 1771, column: 35, scope: !6308)
!6393 = !DILocation(line: 1771, column: 41, scope: !6308)
!6394 = !DILocation(line: 1771, column: 2, scope: !6308)
!6395 = !DILocation(line: 1772, column: 1, scope: !6308)
!6396 = distinct !DISubprogram(name: "zero_v4", scope: !4493, file: !4493, line: 50, type: !6397, scopeLine: 51, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1638)
!6397 = !DISubroutineType(types: !6398)
!6398 = !{null, !52}
!6399 = !DILocalVariable(name: "r", arg: 1, scope: !6396, file: !4493, line: 50, type: !52)
!6400 = !DILocation(line: 50, column: 28, scope: !6396)
!6401 = !DILocation(line: 52, column: 2, scope: !6396)
!6402 = !DILocation(line: 52, column: 7, scope: !6396)
!6403 = !DILocation(line: 53, column: 2, scope: !6396)
!6404 = !DILocation(line: 53, column: 7, scope: !6396)
!6405 = !DILocation(line: 54, column: 2, scope: !6396)
!6406 = !DILocation(line: 54, column: 7, scope: !6396)
!6407 = !DILocation(line: 55, column: 2, scope: !6396)
!6408 = !DILocation(line: 55, column: 7, scope: !6396)
!6409 = !DILocation(line: 56, column: 1, scope: !6396)
!6410 = distinct !DISubprogram(name: "copy_v4_v4", scope: !4493, file: !4493, line: 71, type: !4494, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1638)
!6411 = !DILocalVariable(name: "r", arg: 1, scope: !6410, file: !4493, line: 71, type: !52)
!6412 = !DILocation(line: 71, column: 31, scope: !6410)
!6413 = !DILocalVariable(name: "a", arg: 2, scope: !6410, file: !4493, line: 71, type: !1621)
!6414 = !DILocation(line: 71, column: 49, scope: !6410)
!6415 = !DILocation(line: 73, column: 9, scope: !6410)
!6416 = !DILocation(line: 73, column: 2, scope: !6410)
!6417 = !DILocation(line: 73, column: 7, scope: !6410)
!6418 = !DILocation(line: 74, column: 9, scope: !6410)
!6419 = !DILocation(line: 74, column: 2, scope: !6410)
!6420 = !DILocation(line: 74, column: 7, scope: !6410)
!6421 = !DILocation(line: 75, column: 9, scope: !6410)
!6422 = !DILocation(line: 75, column: 2, scope: !6410)
!6423 = !DILocation(line: 75, column: 7, scope: !6410)
!6424 = !DILocation(line: 76, column: 9, scope: !6410)
!6425 = !DILocation(line: 76, column: 2, scope: !6410)
!6426 = !DILocation(line: 76, column: 7, scope: !6410)
!6427 = !DILocation(line: 77, column: 1, scope: !6410)
!6428 = distinct !DISubprogram(name: "ibuf_sample", scope: !1, file: !1, line: 1774, type: !6429, scopeLine: 1775, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1638)
!6429 = !DISubroutineType(types: !6430)
!6430 = !{null, !34, !26, !26, !26, !26, !52}
!6431 = !DILocalVariable(name: "ibuf", arg: 1, scope: !6428, file: !1, line: 1774, type: !34)
!6432 = !DILocation(line: 1774, column: 25, scope: !6428)
!6433 = !DILocalVariable(name: "fx", arg: 2, scope: !6428, file: !1, line: 1774, type: !26)
!6434 = !DILocation(line: 1774, column: 37, scope: !6428)
!6435 = !DILocalVariable(name: "fy", arg: 3, scope: !6428, file: !1, line: 1774, type: !26)
!6436 = !DILocation(line: 1774, column: 47, scope: !6428)
!6437 = !DILocalVariable(name: "dx", arg: 4, scope: !6428, file: !1, line: 1774, type: !26)
!6438 = !DILocation(line: 1774, column: 57, scope: !6428)
!6439 = !DILocalVariable(name: "dy", arg: 5, scope: !6428, file: !1, line: 1774, type: !26)
!6440 = !DILocation(line: 1774, column: 67, scope: !6428)
!6441 = !DILocalVariable(name: "result", arg: 6, scope: !6428, file: !1, line: 1774, type: !52)
!6442 = !DILocation(line: 1774, column: 77, scope: !6428)
!6443 = !DILocalVariable(name: "texres", scope: !6428, file: !1, line: 1776, type: !1624)
!6444 = !DILocation(line: 1776, column: 12, scope: !6428)
!6445 = !DILocalVariable(name: "AFD", scope: !6428, file: !1, line: 1777, type: !121)
!6446 = !DILocation(line: 1777, column: 11, scope: !6428)
!6447 = !DILocation(line: 1779, column: 15, scope: !6428)
!6448 = !DILocation(line: 1779, column: 6, scope: !6428)
!6449 = !DILocation(line: 1779, column: 2, scope: !6428)
!6450 = !DILocation(line: 1779, column: 13, scope: !6428)
!6451 = !DILocation(line: 1779, column: 32, scope: !6428)
!6452 = !DILocation(line: 1779, column: 23, scope: !6428)
!6453 = !DILocation(line: 1779, column: 19, scope: !6428)
!6454 = !DILocation(line: 1779, column: 30, scope: !6428)
!6455 = !DILocation(line: 1780, column: 15, scope: !6428)
!6456 = !DILocation(line: 1780, column: 6, scope: !6428)
!6457 = !DILocation(line: 1780, column: 2, scope: !6428)
!6458 = !DILocation(line: 1780, column: 13, scope: !6428)
!6459 = !DILocation(line: 1780, column: 32, scope: !6428)
!6460 = !DILocation(line: 1780, column: 23, scope: !6428)
!6461 = !DILocation(line: 1780, column: 19, scope: !6428)
!6462 = !DILocation(line: 1780, column: 30, scope: !6428)
!6463 = !DILocation(line: 1784, column: 6, scope: !6428)
!6464 = !DILocation(line: 1784, column: 13, scope: !6428)
!6465 = !DILocation(line: 1785, column: 6, scope: !6428)
!6466 = !DILocation(line: 1785, column: 14, scope: !6428)
!6467 = !DILocation(line: 1787, column: 20, scope: !6428)
!6468 = !DILocation(line: 1787, column: 26, scope: !6428)
!6469 = !DILocation(line: 1787, column: 30, scope: !6428)
!6470 = !DILocation(line: 1787, column: 2, scope: !6428)
!6471 = !DILocation(line: 1789, column: 13, scope: !6428)
!6472 = !DILocation(line: 1789, column: 29, scope: !6428)
!6473 = !DILocation(line: 1789, column: 2, scope: !6428)
!6474 = !DILocation(line: 1790, column: 1, scope: !6428)
!6475 = distinct !DISubprogram(name: "ewa_eval", scope: !1, file: !1, line: 805, type: !4560, scopeLine: 806, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1638)
!6476 = !DILocalVariable(name: "texr", arg: 1, scope: !6475, file: !1, line: 805, type: !1623)
!6477 = !DILocation(line: 805, column: 33, scope: !6475)
!6478 = !DILocalVariable(name: "ibuf", arg: 2, scope: !6475, file: !1, line: 805, type: !34)
!6479 = !DILocation(line: 805, column: 46, scope: !6475)
!6480 = !DILocalVariable(name: "fx", arg: 3, scope: !6475, file: !1, line: 805, type: !26)
!6481 = !DILocation(line: 805, column: 58, scope: !6475)
!6482 = !DILocalVariable(name: "fy", arg: 4, scope: !6475, file: !1, line: 805, type: !26)
!6483 = !DILocation(line: 805, column: 68, scope: !6475)
!6484 = !DILocalVariable(name: "AFD", arg: 5, scope: !6475, file: !1, line: 805, type: !120)
!6485 = !DILocation(line: 805, column: 82, scope: !6475)
!6486 = !DILocalVariable(name: "data", scope: !6475, file: !1, line: 807, type: !30)
!6487 = !DILocation(line: 807, column: 14, scope: !6475)
!6488 = !DILocalVariable(name: "uv", scope: !6475, file: !1, line: 808, type: !125)
!6489 = !DILocation(line: 808, column: 8, scope: !6475)
!6490 = !DILocation(line: 808, column: 16, scope: !6475)
!6491 = !DILocation(line: 808, column: 17, scope: !6475)
!6492 = !DILocation(line: 808, column: 21, scope: !6475)
!6493 = !DILocation(line: 809, column: 14, scope: !6475)
!6494 = !DILocation(line: 809, column: 7, scope: !6475)
!6495 = !DILocation(line: 809, column: 12, scope: !6475)
!6496 = !DILocation(line: 810, column: 13, scope: !6475)
!6497 = !DILocation(line: 810, column: 7, scope: !6475)
!6498 = !DILocation(line: 810, column: 11, scope: !6475)
!6499 = !DILocation(line: 811, column: 17, scope: !6475)
!6500 = !DILocation(line: 811, column: 23, scope: !6475)
!6501 = !DILocation(line: 811, column: 26, scope: !6475)
!6502 = !DILocation(line: 811, column: 32, scope: !6475)
!6503 = !DILocation(line: 812, column: 17, scope: !6475)
!6504 = !DILocation(line: 812, column: 22, scope: !6475)
!6505 = !DILocation(line: 812, column: 29, scope: !6475)
!6506 = !DILocation(line: 813, column: 17, scope: !6475)
!6507 = !DILocation(line: 813, column: 23, scope: !6475)
!6508 = !DILocation(line: 814, column: 17, scope: !6475)
!6509 = !DILocation(line: 814, column: 21, scope: !6475)
!6510 = !DILocation(line: 814, column: 26, scope: !6475)
!6511 = !DILocation(line: 814, column: 31, scope: !6475)
!6512 = !DILocation(line: 814, column: 36, scope: !6475)
!6513 = !DILocation(line: 816, column: 17, scope: !6475)
!6514 = !DILocation(line: 817, column: 18, scope: !6475)
!6515 = !DILocation(line: 817, column: 24, scope: !6475)
!6516 = !DILocation(line: 811, column: 2, scope: !6475)
!6517 = !DILocation(line: 819, column: 1, scope: !6475)
!6518 = distinct !DISubprogram(name: "copy_v3_v3", scope: !4493, file: !4493, line: 64, type: !4494, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1638)
!6519 = !DILocalVariable(name: "r", arg: 1, scope: !6518, file: !4493, line: 64, type: !52)
!6520 = !DILocation(line: 64, column: 31, scope: !6518)
!6521 = !DILocalVariable(name: "a", arg: 2, scope: !6518, file: !4493, line: 64, type: !1621)
!6522 = !DILocation(line: 64, column: 49, scope: !6518)
!6523 = !DILocation(line: 66, column: 9, scope: !6518)
!6524 = !DILocation(line: 66, column: 2, scope: !6518)
!6525 = !DILocation(line: 66, column: 7, scope: !6518)
!6526 = !DILocation(line: 67, column: 9, scope: !6518)
!6527 = !DILocation(line: 67, column: 2, scope: !6518)
!6528 = !DILocation(line: 67, column: 7, scope: !6518)
!6529 = !DILocation(line: 68, column: 9, scope: !6518)
!6530 = !DILocation(line: 68, column: 2, scope: !6518)
!6531 = !DILocation(line: 68, column: 7, scope: !6518)
!6532 = !DILocation(line: 69, column: 1, scope: !6518)
!6533 = distinct !DISubprogram(name: "clipx_rctf_swap", scope: !1, file: !1, line: 324, type: !6534, scopeLine: 325, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1638)
!6534 = !DISubroutineType(types: !6535)
!6535 = !{null, !2404, !6536, !26, !26}
!6536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !177, size: 64)
!6537 = !DILocalVariable(name: "stack", arg: 1, scope: !6533, file: !1, line: 324, type: !2404)
!6538 = !DILocation(line: 324, column: 35, scope: !6533)
!6539 = !DILocalVariable(name: "count", arg: 2, scope: !6533, file: !1, line: 324, type: !6536)
!6540 = !DILocation(line: 324, column: 49, scope: !6533)
!6541 = !DILocalVariable(name: "x1", arg: 3, scope: !6533, file: !1, line: 324, type: !26)
!6542 = !DILocation(line: 324, column: 62, scope: !6533)
!6543 = !DILocalVariable(name: "x2", arg: 4, scope: !6533, file: !1, line: 324, type: !26)
!6544 = !DILocation(line: 324, column: 72, scope: !6533)
!6545 = !DILocalVariable(name: "rf", scope: !6533, file: !1, line: 326, type: !2404)
!6546 = !DILocation(line: 326, column: 8, scope: !6533)
!6547 = !DILocalVariable(name: "newrct", scope: !6533, file: !1, line: 326, type: !2404)
!6548 = !DILocation(line: 326, column: 13, scope: !6533)
!6549 = !DILocalVariable(name: "a", scope: !6533, file: !1, line: 327, type: !177)
!6550 = !DILocation(line: 327, column: 8, scope: !6533)
!6551 = !DILocation(line: 329, column: 6, scope: !6533)
!6552 = !DILocation(line: 329, column: 5, scope: !6533)
!6553 = !DILocation(line: 329, column: 3, scope: !6533)
!6554 = !DILocation(line: 330, column: 6, scope: !6533)
!6555 = !DILocation(line: 330, column: 4, scope: !6533)
!6556 = !DILocation(line: 331, column: 2, scope: !6533)
!6557 = !DILocation(line: 331, column: 8, scope: !6558)
!6558 = distinct !DILexicalBlock(scope: !6559, file: !1, line: 331, column: 2)
!6559 = distinct !DILexicalBlock(scope: !6533, file: !1, line: 331, column: 2)
!6560 = !DILocation(line: 331, column: 9, scope: !6558)
!6561 = !DILocation(line: 331, column: 2, scope: !6559)
!6562 = !DILocation(line: 332, column: 7, scope: !6563)
!6563 = distinct !DILexicalBlock(scope: !6564, file: !1, line: 332, column: 7)
!6564 = distinct !DILexicalBlock(scope: !6558, file: !1, line: 331, column: 17)
!6565 = !DILocation(line: 332, column: 11, scope: !6563)
!6566 = !DILocation(line: 332, column: 16, scope: !6563)
!6567 = !DILocation(line: 332, column: 15, scope: !6563)
!6568 = !DILocation(line: 332, column: 7, scope: !6564)
!6569 = !DILocation(line: 333, column: 8, scope: !6570)
!6570 = distinct !DILexicalBlock(scope: !6571, file: !1, line: 333, column: 8)
!6571 = distinct !DILexicalBlock(scope: !6563, file: !1, line: 332, column: 20)
!6572 = !DILocation(line: 333, column: 12, scope: !6570)
!6573 = !DILocation(line: 333, column: 17, scope: !6570)
!6574 = !DILocation(line: 333, column: 16, scope: !6570)
!6575 = !DILocation(line: 333, column: 8, scope: !6571)
!6576 = !DILocation(line: 334, column: 17, scope: !6577)
!6577 = distinct !DILexicalBlock(scope: !6570, file: !1, line: 333, column: 21)
!6578 = !DILocation(line: 334, column: 20, scope: !6577)
!6579 = !DILocation(line: 334, column: 19, scope: !6577)
!6580 = !DILocation(line: 334, column: 5, scope: !6577)
!6581 = !DILocation(line: 334, column: 9, scope: !6577)
!6582 = !DILocation(line: 334, column: 13, scope: !6577)
!6583 = !DILocation(line: 335, column: 17, scope: !6577)
!6584 = !DILocation(line: 335, column: 20, scope: !6577)
!6585 = !DILocation(line: 335, column: 19, scope: !6577)
!6586 = !DILocation(line: 335, column: 5, scope: !6577)
!6587 = !DILocation(line: 335, column: 9, scope: !6577)
!6588 = !DILocation(line: 335, column: 13, scope: !6577)
!6589 = !DILocation(line: 336, column: 4, scope: !6577)
!6590 = !DILocation(line: 338, column: 9, scope: !6591)
!6591 = distinct !DILexicalBlock(scope: !6592, file: !1, line: 338, column: 9)
!6592 = distinct !DILexicalBlock(scope: !6570, file: !1, line: 337, column: 9)
!6593 = !DILocation(line: 338, column: 13, scope: !6591)
!6594 = !DILocation(line: 338, column: 18, scope: !6591)
!6595 = !DILocation(line: 338, column: 17, scope: !6591)
!6596 = !DILocation(line: 338, column: 9, scope: !6592)
!6597 = !DILocation(line: 338, column: 33, scope: !6591)
!6598 = !DILocation(line: 338, column: 22, scope: !6591)
!6599 = !DILocation(line: 338, column: 26, scope: !6591)
!6600 = !DILocation(line: 338, column: 31, scope: !6591)
!6601 = !DILocation(line: 339, column: 13, scope: !6592)
!6602 = !DILocation(line: 339, column: 21, scope: !6592)
!6603 = !DILocation(line: 339, column: 20, scope: !6592)
!6604 = !DILocation(line: 339, column: 18, scope: !6592)
!6605 = !DILocation(line: 339, column: 11, scope: !6592)
!6606 = !DILocation(line: 340, column: 7, scope: !6592)
!6607 = !DILocation(line: 340, column: 13, scope: !6592)
!6608 = !DILocation(line: 342, column: 20, scope: !6592)
!6609 = !DILocation(line: 342, column: 5, scope: !6592)
!6610 = !DILocation(line: 342, column: 13, scope: !6592)
!6611 = !DILocation(line: 342, column: 18, scope: !6592)
!6612 = !DILocation(line: 343, column: 20, scope: !6592)
!6613 = !DILocation(line: 343, column: 24, scope: !6592)
!6614 = !DILocation(line: 343, column: 30, scope: !6592)
!6615 = !DILocation(line: 343, column: 33, scope: !6592)
!6616 = !DILocation(line: 343, column: 32, scope: !6592)
!6617 = !DILocation(line: 343, column: 28, scope: !6592)
!6618 = !DILocation(line: 343, column: 5, scope: !6592)
!6619 = !DILocation(line: 343, column: 13, scope: !6592)
!6620 = !DILocation(line: 343, column: 18, scope: !6592)
!6621 = !DILocation(line: 344, column: 20, scope: !6592)
!6622 = !DILocation(line: 344, column: 24, scope: !6592)
!6623 = !DILocation(line: 344, column: 5, scope: !6592)
!6624 = !DILocation(line: 344, column: 13, scope: !6592)
!6625 = !DILocation(line: 344, column: 18, scope: !6592)
!6626 = !DILocation(line: 345, column: 20, scope: !6592)
!6627 = !DILocation(line: 345, column: 24, scope: !6592)
!6628 = !DILocation(line: 345, column: 5, scope: !6592)
!6629 = !DILocation(line: 345, column: 13, scope: !6592)
!6630 = !DILocation(line: 345, column: 18, scope: !6592)
!6631 = !DILocation(line: 347, column: 9, scope: !6632)
!6632 = distinct !DILexicalBlock(scope: !6592, file: !1, line: 347, column: 9)
!6633 = !DILocation(line: 347, column: 17, scope: !6632)
!6634 = !DILocation(line: 347, column: 24, scope: !6632)
!6635 = !DILocation(line: 347, column: 32, scope: !6632)
!6636 = !DILocation(line: 347, column: 22, scope: !6632)
!6637 = !DILocation(line: 347, column: 9, scope: !6592)
!6638 = !DILocation(line: 347, column: 40, scope: !6632)
!6639 = !DILocation(line: 347, column: 46, scope: !6632)
!6640 = !DILocation(line: 347, column: 38, scope: !6632)
!6641 = !DILocation(line: 349, column: 16, scope: !6592)
!6642 = !DILocation(line: 349, column: 5, scope: !6592)
!6643 = !DILocation(line: 349, column: 9, scope: !6592)
!6644 = !DILocation(line: 349, column: 14, scope: !6592)
!6645 = !DILocation(line: 351, column: 3, scope: !6571)
!6646 = !DILocation(line: 352, column: 12, scope: !6647)
!6647 = distinct !DILexicalBlock(scope: !6563, file: !1, line: 352, column: 12)
!6648 = !DILocation(line: 352, column: 16, scope: !6647)
!6649 = !DILocation(line: 352, column: 21, scope: !6647)
!6650 = !DILocation(line: 352, column: 20, scope: !6647)
!6651 = !DILocation(line: 352, column: 12, scope: !6563)
!6652 = !DILocation(line: 353, column: 8, scope: !6653)
!6653 = distinct !DILexicalBlock(scope: !6654, file: !1, line: 353, column: 8)
!6654 = distinct !DILexicalBlock(scope: !6647, file: !1, line: 352, column: 25)
!6655 = !DILocation(line: 353, column: 12, scope: !6653)
!6656 = !DILocation(line: 353, column: 17, scope: !6653)
!6657 = !DILocation(line: 353, column: 16, scope: !6653)
!6658 = !DILocation(line: 353, column: 8, scope: !6654)
!6659 = !DILocation(line: 354, column: 17, scope: !6660)
!6660 = distinct !DILexicalBlock(scope: !6653, file: !1, line: 353, column: 21)
!6661 = !DILocation(line: 354, column: 20, scope: !6660)
!6662 = !DILocation(line: 354, column: 19, scope: !6660)
!6663 = !DILocation(line: 354, column: 5, scope: !6660)
!6664 = !DILocation(line: 354, column: 9, scope: !6660)
!6665 = !DILocation(line: 354, column: 13, scope: !6660)
!6666 = !DILocation(line: 355, column: 17, scope: !6660)
!6667 = !DILocation(line: 355, column: 20, scope: !6660)
!6668 = !DILocation(line: 355, column: 19, scope: !6660)
!6669 = !DILocation(line: 355, column: 5, scope: !6660)
!6670 = !DILocation(line: 355, column: 9, scope: !6660)
!6671 = !DILocation(line: 355, column: 13, scope: !6660)
!6672 = !DILocation(line: 356, column: 4, scope: !6660)
!6673 = !DILocation(line: 358, column: 9, scope: !6674)
!6674 = distinct !DILexicalBlock(scope: !6675, file: !1, line: 358, column: 9)
!6675 = distinct !DILexicalBlock(scope: !6653, file: !1, line: 357, column: 9)
!6676 = !DILocation(line: 358, column: 13, scope: !6674)
!6677 = !DILocation(line: 358, column: 18, scope: !6674)
!6678 = !DILocation(line: 358, column: 17, scope: !6674)
!6679 = !DILocation(line: 358, column: 9, scope: !6675)
!6680 = !DILocation(line: 358, column: 33, scope: !6674)
!6681 = !DILocation(line: 358, column: 22, scope: !6674)
!6682 = !DILocation(line: 358, column: 26, scope: !6674)
!6683 = !DILocation(line: 358, column: 31, scope: !6674)
!6684 = !DILocation(line: 359, column: 13, scope: !6675)
!6685 = !DILocation(line: 359, column: 21, scope: !6675)
!6686 = !DILocation(line: 359, column: 20, scope: !6675)
!6687 = !DILocation(line: 359, column: 18, scope: !6675)
!6688 = !DILocation(line: 359, column: 11, scope: !6675)
!6689 = !DILocation(line: 360, column: 7, scope: !6675)
!6690 = !DILocation(line: 360, column: 13, scope: !6675)
!6691 = !DILocation(line: 362, column: 20, scope: !6675)
!6692 = !DILocation(line: 362, column: 5, scope: !6675)
!6693 = !DILocation(line: 362, column: 13, scope: !6675)
!6694 = !DILocation(line: 362, column: 18, scope: !6675)
!6695 = !DILocation(line: 363, column: 20, scope: !6675)
!6696 = !DILocation(line: 363, column: 24, scope: !6675)
!6697 = !DILocation(line: 363, column: 30, scope: !6675)
!6698 = !DILocation(line: 363, column: 33, scope: !6675)
!6699 = !DILocation(line: 363, column: 32, scope: !6675)
!6700 = !DILocation(line: 363, column: 28, scope: !6675)
!6701 = !DILocation(line: 363, column: 5, scope: !6675)
!6702 = !DILocation(line: 363, column: 13, scope: !6675)
!6703 = !DILocation(line: 363, column: 18, scope: !6675)
!6704 = !DILocation(line: 364, column: 20, scope: !6675)
!6705 = !DILocation(line: 364, column: 24, scope: !6675)
!6706 = !DILocation(line: 364, column: 5, scope: !6675)
!6707 = !DILocation(line: 364, column: 13, scope: !6675)
!6708 = !DILocation(line: 364, column: 18, scope: !6675)
!6709 = !DILocation(line: 365, column: 20, scope: !6675)
!6710 = !DILocation(line: 365, column: 24, scope: !6675)
!6711 = !DILocation(line: 365, column: 5, scope: !6675)
!6712 = !DILocation(line: 365, column: 13, scope: !6675)
!6713 = !DILocation(line: 365, column: 18, scope: !6675)
!6714 = !DILocation(line: 367, column: 9, scope: !6715)
!6715 = distinct !DILexicalBlock(scope: !6675, file: !1, line: 367, column: 9)
!6716 = !DILocation(line: 367, column: 17, scope: !6715)
!6717 = !DILocation(line: 367, column: 24, scope: !6715)
!6718 = !DILocation(line: 367, column: 32, scope: !6715)
!6719 = !DILocation(line: 367, column: 22, scope: !6715)
!6720 = !DILocation(line: 367, column: 9, scope: !6675)
!6721 = !DILocation(line: 367, column: 40, scope: !6715)
!6722 = !DILocation(line: 367, column: 46, scope: !6715)
!6723 = !DILocation(line: 367, column: 38, scope: !6715)
!6724 = !DILocation(line: 369, column: 16, scope: !6675)
!6725 = !DILocation(line: 369, column: 5, scope: !6675)
!6726 = !DILocation(line: 369, column: 9, scope: !6675)
!6727 = !DILocation(line: 369, column: 14, scope: !6675)
!6728 = !DILocation(line: 371, column: 3, scope: !6654)
!6729 = !DILocation(line: 372, column: 5, scope: !6564)
!6730 = !DILocation(line: 373, column: 2, scope: !6564)
!6731 = !DILocation(line: 331, column: 13, scope: !6558)
!6732 = !DILocation(line: 331, column: 2, scope: !6558)
!6733 = distinct !{!6733, !6561, !6734}
!6734 = !DILocation(line: 373, column: 2, scope: !6559)
!6735 = !DILocation(line: 375, column: 1, scope: !6533)
!6736 = distinct !DISubprogram(name: "clipx_rctf", scope: !1, file: !1, line: 438, type: !6737, scopeLine: 439, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1638)
!6737 = !DISubroutineType(types: !6738)
!6738 = !{!26, !2404, !26, !26}
!6739 = !DILocalVariable(name: "rf", arg: 1, scope: !6736, file: !1, line: 438, type: !2404)
!6740 = !DILocation(line: 438, column: 31, scope: !6736)
!6741 = !DILocalVariable(name: "x1", arg: 2, scope: !6736, file: !1, line: 438, type: !26)
!6742 = !DILocation(line: 438, column: 41, scope: !6736)
!6743 = !DILocalVariable(name: "x2", arg: 3, scope: !6736, file: !1, line: 438, type: !26)
!6744 = !DILocation(line: 438, column: 51, scope: !6736)
!6745 = !DILocalVariable(name: "size", scope: !6736, file: !1, line: 440, type: !26)
!6746 = !DILocation(line: 440, column: 8, scope: !6736)
!6747 = !DILocation(line: 442, column: 25, scope: !6736)
!6748 = !DILocation(line: 442, column: 9, scope: !6736)
!6749 = !DILocation(line: 442, column: 7, scope: !6736)
!6750 = !DILocation(line: 444, column: 6, scope: !6751)
!6751 = distinct !DILexicalBlock(scope: !6736, file: !1, line: 444, column: 6)
!6752 = !DILocation(line: 444, column: 10, scope: !6751)
!6753 = !DILocation(line: 444, column: 15, scope: !6751)
!6754 = !DILocation(line: 444, column: 14, scope: !6751)
!6755 = !DILocation(line: 444, column: 6, scope: !6736)
!6756 = !DILocation(line: 445, column: 14, scope: !6757)
!6757 = distinct !DILexicalBlock(scope: !6751, file: !1, line: 444, column: 19)
!6758 = !DILocation(line: 445, column: 3, scope: !6757)
!6759 = !DILocation(line: 445, column: 7, scope: !6757)
!6760 = !DILocation(line: 445, column: 12, scope: !6757)
!6761 = !DILocation(line: 446, column: 2, scope: !6757)
!6762 = !DILocation(line: 447, column: 6, scope: !6763)
!6763 = distinct !DILexicalBlock(scope: !6736, file: !1, line: 447, column: 6)
!6764 = !DILocation(line: 447, column: 10, scope: !6763)
!6765 = !DILocation(line: 447, column: 15, scope: !6763)
!6766 = !DILocation(line: 447, column: 14, scope: !6763)
!6767 = !DILocation(line: 447, column: 6, scope: !6736)
!6768 = !DILocation(line: 448, column: 14, scope: !6769)
!6769 = distinct !DILexicalBlock(scope: !6763, file: !1, line: 447, column: 19)
!6770 = !DILocation(line: 448, column: 3, scope: !6769)
!6771 = !DILocation(line: 448, column: 7, scope: !6769)
!6772 = !DILocation(line: 448, column: 12, scope: !6769)
!6773 = !DILocation(line: 449, column: 2, scope: !6769)
!6774 = !DILocation(line: 450, column: 6, scope: !6775)
!6775 = distinct !DILexicalBlock(scope: !6736, file: !1, line: 450, column: 6)
!6776 = !DILocation(line: 450, column: 10, scope: !6775)
!6777 = !DILocation(line: 450, column: 17, scope: !6775)
!6778 = !DILocation(line: 450, column: 21, scope: !6775)
!6779 = !DILocation(line: 450, column: 15, scope: !6775)
!6780 = !DILocation(line: 450, column: 6, scope: !6736)
!6781 = !DILocation(line: 451, column: 14, scope: !6782)
!6782 = distinct !DILexicalBlock(scope: !6775, file: !1, line: 450, column: 27)
!6783 = !DILocation(line: 451, column: 18, scope: !6782)
!6784 = !DILocation(line: 451, column: 3, scope: !6782)
!6785 = !DILocation(line: 451, column: 7, scope: !6782)
!6786 = !DILocation(line: 451, column: 12, scope: !6782)
!6787 = !DILocation(line: 452, column: 3, scope: !6782)
!6788 = !DILocation(line: 454, column: 11, scope: !6789)
!6789 = distinct !DILexicalBlock(scope: !6775, file: !1, line: 454, column: 11)
!6790 = !DILocation(line: 454, column: 16, scope: !6789)
!6791 = !DILocation(line: 454, column: 11, scope: !6775)
!6792 = !DILocation(line: 455, column: 26, scope: !6793)
!6793 = distinct !DILexicalBlock(scope: !6789, file: !1, line: 454, column: 25)
!6794 = !DILocation(line: 455, column: 10, scope: !6793)
!6795 = !DILocation(line: 455, column: 32, scope: !6793)
!6796 = !DILocation(line: 455, column: 30, scope: !6793)
!6797 = !DILocation(line: 455, column: 3, scope: !6793)
!6798 = !DILocation(line: 457, column: 2, scope: !6736)
!6799 = !DILocation(line: 458, column: 1, scope: !6736)
!6800 = distinct !DISubprogram(name: "clipy_rctf_swap", scope: !1, file: !1, line: 377, type: !6534, scopeLine: 378, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1638)
!6801 = !DILocalVariable(name: "stack", arg: 1, scope: !6800, file: !1, line: 377, type: !2404)
!6802 = !DILocation(line: 377, column: 35, scope: !6800)
!6803 = !DILocalVariable(name: "count", arg: 2, scope: !6800, file: !1, line: 377, type: !6536)
!6804 = !DILocation(line: 377, column: 49, scope: !6800)
!6805 = !DILocalVariable(name: "y1", arg: 3, scope: !6800, file: !1, line: 377, type: !26)
!6806 = !DILocation(line: 377, column: 62, scope: !6800)
!6807 = !DILocalVariable(name: "y2", arg: 4, scope: !6800, file: !1, line: 377, type: !26)
!6808 = !DILocation(line: 377, column: 72, scope: !6800)
!6809 = !DILocalVariable(name: "rf", scope: !6800, file: !1, line: 379, type: !2404)
!6810 = !DILocation(line: 379, column: 8, scope: !6800)
!6811 = !DILocalVariable(name: "newrct", scope: !6800, file: !1, line: 379, type: !2404)
!6812 = !DILocation(line: 379, column: 13, scope: !6800)
!6813 = !DILocalVariable(name: "a", scope: !6800, file: !1, line: 380, type: !177)
!6814 = !DILocation(line: 380, column: 8, scope: !6800)
!6815 = !DILocation(line: 382, column: 6, scope: !6800)
!6816 = !DILocation(line: 382, column: 5, scope: !6800)
!6817 = !DILocation(line: 382, column: 3, scope: !6800)
!6818 = !DILocation(line: 383, column: 6, scope: !6800)
!6819 = !DILocation(line: 383, column: 4, scope: !6800)
!6820 = !DILocation(line: 384, column: 2, scope: !6800)
!6821 = !DILocation(line: 384, column: 8, scope: !6822)
!6822 = distinct !DILexicalBlock(scope: !6823, file: !1, line: 384, column: 2)
!6823 = distinct !DILexicalBlock(scope: !6800, file: !1, line: 384, column: 2)
!6824 = !DILocation(line: 384, column: 9, scope: !6822)
!6825 = !DILocation(line: 384, column: 2, scope: !6823)
!6826 = !DILocation(line: 385, column: 7, scope: !6827)
!6827 = distinct !DILexicalBlock(scope: !6828, file: !1, line: 385, column: 7)
!6828 = distinct !DILexicalBlock(scope: !6822, file: !1, line: 384, column: 17)
!6829 = !DILocation(line: 385, column: 11, scope: !6827)
!6830 = !DILocation(line: 385, column: 16, scope: !6827)
!6831 = !DILocation(line: 385, column: 15, scope: !6827)
!6832 = !DILocation(line: 385, column: 7, scope: !6828)
!6833 = !DILocation(line: 386, column: 8, scope: !6834)
!6834 = distinct !DILexicalBlock(scope: !6835, file: !1, line: 386, column: 8)
!6835 = distinct !DILexicalBlock(scope: !6827, file: !1, line: 385, column: 20)
!6836 = !DILocation(line: 386, column: 12, scope: !6834)
!6837 = !DILocation(line: 386, column: 17, scope: !6834)
!6838 = !DILocation(line: 386, column: 16, scope: !6834)
!6839 = !DILocation(line: 386, column: 8, scope: !6835)
!6840 = !DILocation(line: 387, column: 17, scope: !6841)
!6841 = distinct !DILexicalBlock(scope: !6834, file: !1, line: 386, column: 21)
!6842 = !DILocation(line: 387, column: 20, scope: !6841)
!6843 = !DILocation(line: 387, column: 19, scope: !6841)
!6844 = !DILocation(line: 387, column: 5, scope: !6841)
!6845 = !DILocation(line: 387, column: 9, scope: !6841)
!6846 = !DILocation(line: 387, column: 13, scope: !6841)
!6847 = !DILocation(line: 388, column: 17, scope: !6841)
!6848 = !DILocation(line: 388, column: 20, scope: !6841)
!6849 = !DILocation(line: 388, column: 19, scope: !6841)
!6850 = !DILocation(line: 388, column: 5, scope: !6841)
!6851 = !DILocation(line: 388, column: 9, scope: !6841)
!6852 = !DILocation(line: 388, column: 13, scope: !6841)
!6853 = !DILocation(line: 389, column: 4, scope: !6841)
!6854 = !DILocation(line: 391, column: 9, scope: !6855)
!6855 = distinct !DILexicalBlock(scope: !6856, file: !1, line: 391, column: 9)
!6856 = distinct !DILexicalBlock(scope: !6834, file: !1, line: 390, column: 9)
!6857 = !DILocation(line: 391, column: 13, scope: !6855)
!6858 = !DILocation(line: 391, column: 18, scope: !6855)
!6859 = !DILocation(line: 391, column: 17, scope: !6855)
!6860 = !DILocation(line: 391, column: 9, scope: !6856)
!6861 = !DILocation(line: 391, column: 33, scope: !6855)
!6862 = !DILocation(line: 391, column: 22, scope: !6855)
!6863 = !DILocation(line: 391, column: 26, scope: !6855)
!6864 = !DILocation(line: 391, column: 31, scope: !6855)
!6865 = !DILocation(line: 392, column: 13, scope: !6856)
!6866 = !DILocation(line: 392, column: 21, scope: !6856)
!6867 = !DILocation(line: 392, column: 20, scope: !6856)
!6868 = !DILocation(line: 392, column: 18, scope: !6856)
!6869 = !DILocation(line: 392, column: 11, scope: !6856)
!6870 = !DILocation(line: 393, column: 7, scope: !6856)
!6871 = !DILocation(line: 393, column: 13, scope: !6856)
!6872 = !DILocation(line: 395, column: 20, scope: !6856)
!6873 = !DILocation(line: 395, column: 5, scope: !6856)
!6874 = !DILocation(line: 395, column: 13, scope: !6856)
!6875 = !DILocation(line: 395, column: 18, scope: !6856)
!6876 = !DILocation(line: 396, column: 20, scope: !6856)
!6877 = !DILocation(line: 396, column: 24, scope: !6856)
!6878 = !DILocation(line: 396, column: 30, scope: !6856)
!6879 = !DILocation(line: 396, column: 33, scope: !6856)
!6880 = !DILocation(line: 396, column: 32, scope: !6856)
!6881 = !DILocation(line: 396, column: 28, scope: !6856)
!6882 = !DILocation(line: 396, column: 5, scope: !6856)
!6883 = !DILocation(line: 396, column: 13, scope: !6856)
!6884 = !DILocation(line: 396, column: 18, scope: !6856)
!6885 = !DILocation(line: 397, column: 20, scope: !6856)
!6886 = !DILocation(line: 397, column: 24, scope: !6856)
!6887 = !DILocation(line: 397, column: 5, scope: !6856)
!6888 = !DILocation(line: 397, column: 13, scope: !6856)
!6889 = !DILocation(line: 397, column: 18, scope: !6856)
!6890 = !DILocation(line: 398, column: 20, scope: !6856)
!6891 = !DILocation(line: 398, column: 24, scope: !6856)
!6892 = !DILocation(line: 398, column: 5, scope: !6856)
!6893 = !DILocation(line: 398, column: 13, scope: !6856)
!6894 = !DILocation(line: 398, column: 18, scope: !6856)
!6895 = !DILocation(line: 400, column: 9, scope: !6896)
!6896 = distinct !DILexicalBlock(scope: !6856, file: !1, line: 400, column: 9)
!6897 = !DILocation(line: 400, column: 17, scope: !6896)
!6898 = !DILocation(line: 400, column: 23, scope: !6896)
!6899 = !DILocation(line: 400, column: 31, scope: !6896)
!6900 = !DILocation(line: 400, column: 21, scope: !6896)
!6901 = !DILocation(line: 400, column: 9, scope: !6856)
!6902 = !DILocation(line: 400, column: 39, scope: !6896)
!6903 = !DILocation(line: 400, column: 45, scope: !6896)
!6904 = !DILocation(line: 400, column: 37, scope: !6896)
!6905 = !DILocation(line: 402, column: 16, scope: !6856)
!6906 = !DILocation(line: 402, column: 5, scope: !6856)
!6907 = !DILocation(line: 402, column: 9, scope: !6856)
!6908 = !DILocation(line: 402, column: 14, scope: !6856)
!6909 = !DILocation(line: 404, column: 3, scope: !6835)
!6910 = !DILocation(line: 405, column: 12, scope: !6911)
!6911 = distinct !DILexicalBlock(scope: !6827, file: !1, line: 405, column: 12)
!6912 = !DILocation(line: 405, column: 16, scope: !6911)
!6913 = !DILocation(line: 405, column: 21, scope: !6911)
!6914 = !DILocation(line: 405, column: 20, scope: !6911)
!6915 = !DILocation(line: 405, column: 12, scope: !6827)
!6916 = !DILocation(line: 406, column: 8, scope: !6917)
!6917 = distinct !DILexicalBlock(scope: !6918, file: !1, line: 406, column: 8)
!6918 = distinct !DILexicalBlock(scope: !6911, file: !1, line: 405, column: 25)
!6919 = !DILocation(line: 406, column: 12, scope: !6917)
!6920 = !DILocation(line: 406, column: 17, scope: !6917)
!6921 = !DILocation(line: 406, column: 16, scope: !6917)
!6922 = !DILocation(line: 406, column: 8, scope: !6918)
!6923 = !DILocation(line: 407, column: 17, scope: !6924)
!6924 = distinct !DILexicalBlock(scope: !6917, file: !1, line: 406, column: 21)
!6925 = !DILocation(line: 407, column: 20, scope: !6924)
!6926 = !DILocation(line: 407, column: 19, scope: !6924)
!6927 = !DILocation(line: 407, column: 5, scope: !6924)
!6928 = !DILocation(line: 407, column: 9, scope: !6924)
!6929 = !DILocation(line: 407, column: 13, scope: !6924)
!6930 = !DILocation(line: 408, column: 17, scope: !6924)
!6931 = !DILocation(line: 408, column: 20, scope: !6924)
!6932 = !DILocation(line: 408, column: 19, scope: !6924)
!6933 = !DILocation(line: 408, column: 5, scope: !6924)
!6934 = !DILocation(line: 408, column: 9, scope: !6924)
!6935 = !DILocation(line: 408, column: 13, scope: !6924)
!6936 = !DILocation(line: 409, column: 4, scope: !6924)
!6937 = !DILocation(line: 411, column: 9, scope: !6938)
!6938 = distinct !DILexicalBlock(scope: !6939, file: !1, line: 411, column: 9)
!6939 = distinct !DILexicalBlock(scope: !6917, file: !1, line: 410, column: 9)
!6940 = !DILocation(line: 411, column: 13, scope: !6938)
!6941 = !DILocation(line: 411, column: 18, scope: !6938)
!6942 = !DILocation(line: 411, column: 17, scope: !6938)
!6943 = !DILocation(line: 411, column: 9, scope: !6939)
!6944 = !DILocation(line: 411, column: 33, scope: !6938)
!6945 = !DILocation(line: 411, column: 22, scope: !6938)
!6946 = !DILocation(line: 411, column: 26, scope: !6938)
!6947 = !DILocation(line: 411, column: 31, scope: !6938)
!6948 = !DILocation(line: 412, column: 13, scope: !6939)
!6949 = !DILocation(line: 412, column: 21, scope: !6939)
!6950 = !DILocation(line: 412, column: 20, scope: !6939)
!6951 = !DILocation(line: 412, column: 18, scope: !6939)
!6952 = !DILocation(line: 412, column: 11, scope: !6939)
!6953 = !DILocation(line: 413, column: 7, scope: !6939)
!6954 = !DILocation(line: 413, column: 13, scope: !6939)
!6955 = !DILocation(line: 415, column: 20, scope: !6939)
!6956 = !DILocation(line: 415, column: 5, scope: !6939)
!6957 = !DILocation(line: 415, column: 13, scope: !6939)
!6958 = !DILocation(line: 415, column: 18, scope: !6939)
!6959 = !DILocation(line: 416, column: 20, scope: !6939)
!6960 = !DILocation(line: 416, column: 24, scope: !6939)
!6961 = !DILocation(line: 416, column: 30, scope: !6939)
!6962 = !DILocation(line: 416, column: 33, scope: !6939)
!6963 = !DILocation(line: 416, column: 32, scope: !6939)
!6964 = !DILocation(line: 416, column: 28, scope: !6939)
!6965 = !DILocation(line: 416, column: 5, scope: !6939)
!6966 = !DILocation(line: 416, column: 13, scope: !6939)
!6967 = !DILocation(line: 416, column: 18, scope: !6939)
!6968 = !DILocation(line: 417, column: 20, scope: !6939)
!6969 = !DILocation(line: 417, column: 24, scope: !6939)
!6970 = !DILocation(line: 417, column: 5, scope: !6939)
!6971 = !DILocation(line: 417, column: 13, scope: !6939)
!6972 = !DILocation(line: 417, column: 18, scope: !6939)
!6973 = !DILocation(line: 418, column: 20, scope: !6939)
!6974 = !DILocation(line: 418, column: 24, scope: !6939)
!6975 = !DILocation(line: 418, column: 5, scope: !6939)
!6976 = !DILocation(line: 418, column: 13, scope: !6939)
!6977 = !DILocation(line: 418, column: 18, scope: !6939)
!6978 = !DILocation(line: 420, column: 9, scope: !6979)
!6979 = distinct !DILexicalBlock(scope: !6939, file: !1, line: 420, column: 9)
!6980 = !DILocation(line: 420, column: 17, scope: !6979)
!6981 = !DILocation(line: 420, column: 23, scope: !6979)
!6982 = !DILocation(line: 420, column: 31, scope: !6979)
!6983 = !DILocation(line: 420, column: 21, scope: !6979)
!6984 = !DILocation(line: 420, column: 9, scope: !6939)
!6985 = !DILocation(line: 420, column: 39, scope: !6979)
!6986 = !DILocation(line: 420, column: 45, scope: !6979)
!6987 = !DILocation(line: 420, column: 37, scope: !6979)
!6988 = !DILocation(line: 422, column: 16, scope: !6939)
!6989 = !DILocation(line: 422, column: 5, scope: !6939)
!6990 = !DILocation(line: 422, column: 9, scope: !6939)
!6991 = !DILocation(line: 422, column: 14, scope: !6939)
!6992 = !DILocation(line: 424, column: 3, scope: !6918)
!6993 = !DILocation(line: 425, column: 5, scope: !6828)
!6994 = !DILocation(line: 426, column: 2, scope: !6828)
!6995 = !DILocation(line: 384, column: 13, scope: !6822)
!6996 = !DILocation(line: 384, column: 2, scope: !6822)
!6997 = distinct !{!6997, !6825, !6998}
!6998 = !DILocation(line: 426, column: 2, scope: !6823)
!6999 = !DILocation(line: 427, column: 1, scope: !6800)
!7000 = distinct !DISubprogram(name: "clipy_rctf", scope: !1, file: !1, line: 460, type: !6737, scopeLine: 461, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1638)
!7001 = !DILocalVariable(name: "rf", arg: 1, scope: !7000, file: !1, line: 460, type: !2404)
!7002 = !DILocation(line: 460, column: 31, scope: !7000)
!7003 = !DILocalVariable(name: "y1", arg: 2, scope: !7000, file: !1, line: 460, type: !26)
!7004 = !DILocation(line: 460, column: 41, scope: !7000)
!7005 = !DILocalVariable(name: "y2", arg: 3, scope: !7000, file: !1, line: 460, type: !26)
!7006 = !DILocation(line: 460, column: 51, scope: !7000)
!7007 = !DILocalVariable(name: "size", scope: !7000, file: !1, line: 462, type: !26)
!7008 = !DILocation(line: 462, column: 8, scope: !7000)
!7009 = !DILocation(line: 464, column: 25, scope: !7000)
!7010 = !DILocation(line: 464, column: 9, scope: !7000)
!7011 = !DILocation(line: 464, column: 7, scope: !7000)
!7012 = !DILocation(line: 466, column: 6, scope: !7013)
!7013 = distinct !DILexicalBlock(scope: !7000, file: !1, line: 466, column: 6)
!7014 = !DILocation(line: 466, column: 10, scope: !7013)
!7015 = !DILocation(line: 466, column: 15, scope: !7013)
!7016 = !DILocation(line: 466, column: 14, scope: !7013)
!7017 = !DILocation(line: 466, column: 6, scope: !7000)
!7018 = !DILocation(line: 467, column: 14, scope: !7019)
!7019 = distinct !DILexicalBlock(scope: !7013, file: !1, line: 466, column: 19)
!7020 = !DILocation(line: 467, column: 3, scope: !7019)
!7021 = !DILocation(line: 467, column: 7, scope: !7019)
!7022 = !DILocation(line: 467, column: 12, scope: !7019)
!7023 = !DILocation(line: 468, column: 2, scope: !7019)
!7024 = !DILocation(line: 469, column: 6, scope: !7025)
!7025 = distinct !DILexicalBlock(scope: !7000, file: !1, line: 469, column: 6)
!7026 = !DILocation(line: 469, column: 10, scope: !7025)
!7027 = !DILocation(line: 469, column: 15, scope: !7025)
!7028 = !DILocation(line: 469, column: 14, scope: !7025)
!7029 = !DILocation(line: 469, column: 6, scope: !7000)
!7030 = !DILocation(line: 470, column: 14, scope: !7031)
!7031 = distinct !DILexicalBlock(scope: !7025, file: !1, line: 469, column: 19)
!7032 = !DILocation(line: 470, column: 3, scope: !7031)
!7033 = !DILocation(line: 470, column: 7, scope: !7031)
!7034 = !DILocation(line: 470, column: 12, scope: !7031)
!7035 = !DILocation(line: 471, column: 2, scope: !7031)
!7036 = !DILocation(line: 473, column: 6, scope: !7037)
!7037 = distinct !DILexicalBlock(scope: !7000, file: !1, line: 473, column: 6)
!7038 = !DILocation(line: 473, column: 10, scope: !7037)
!7039 = !DILocation(line: 473, column: 17, scope: !7037)
!7040 = !DILocation(line: 473, column: 21, scope: !7037)
!7041 = !DILocation(line: 473, column: 15, scope: !7037)
!7042 = !DILocation(line: 473, column: 6, scope: !7000)
!7043 = !DILocation(line: 474, column: 14, scope: !7044)
!7044 = distinct !DILexicalBlock(scope: !7037, file: !1, line: 473, column: 27)
!7045 = !DILocation(line: 474, column: 18, scope: !7044)
!7046 = !DILocation(line: 474, column: 3, scope: !7044)
!7047 = !DILocation(line: 474, column: 7, scope: !7044)
!7048 = !DILocation(line: 474, column: 12, scope: !7044)
!7049 = !DILocation(line: 475, column: 3, scope: !7044)
!7050 = !DILocation(line: 477, column: 11, scope: !7051)
!7051 = distinct !DILexicalBlock(scope: !7037, file: !1, line: 477, column: 11)
!7052 = !DILocation(line: 477, column: 16, scope: !7051)
!7053 = !DILocation(line: 477, column: 11, scope: !7037)
!7054 = !DILocation(line: 478, column: 26, scope: !7055)
!7055 = distinct !DILexicalBlock(scope: !7051, file: !1, line: 477, column: 25)
!7056 = !DILocation(line: 478, column: 10, scope: !7055)
!7057 = !DILocation(line: 478, column: 32, scope: !7055)
!7058 = !DILocation(line: 478, column: 30, scope: !7055)
!7059 = !DILocation(line: 478, column: 3, scope: !7055)
!7060 = !DILocation(line: 480, column: 2, scope: !7000)
!7061 = !DILocation(line: 482, column: 1, scope: !7000)
!7062 = distinct !DISubprogram(name: "boxsampleclip", scope: !1, file: !1, line: 484, type: !7063, scopeLine: 485, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1638)
!7063 = !DISubroutineType(types: !7064)
!7064 = !{null, !40, !2404, !1623}
!7065 = !DILocalVariable(name: "ibuf", arg: 1, scope: !7062, file: !1, line: 484, type: !40)
!7066 = !DILocation(line: 484, column: 41, scope: !7062)
!7067 = !DILocalVariable(name: "rf", arg: 2, scope: !7062, file: !1, line: 484, type: !2404)
!7068 = !DILocation(line: 484, column: 53, scope: !7062)
!7069 = !DILocalVariable(name: "texres", arg: 3, scope: !7062, file: !1, line: 484, type: !1623)
!7070 = !DILocation(line: 484, column: 68, scope: !7062)
!7071 = !DILocalVariable(name: "muly", scope: !7062, file: !1, line: 489, type: !26)
!7072 = !DILocation(line: 489, column: 8, scope: !7062)
!7073 = !DILocalVariable(name: "mulx", scope: !7062, file: !1, line: 489, type: !26)
!7074 = !DILocation(line: 489, column: 14, scope: !7062)
!7075 = !DILocalVariable(name: "div", scope: !7062, file: !1, line: 489, type: !26)
!7076 = !DILocation(line: 489, column: 20, scope: !7062)
!7077 = !DILocalVariable(name: "col", scope: !7062, file: !1, line: 489, type: !411)
!7078 = !DILocation(line: 489, column: 25, scope: !7062)
!7079 = !DILocalVariable(name: "x", scope: !7062, file: !1, line: 490, type: !25)
!7080 = !DILocation(line: 490, column: 6, scope: !7062)
!7081 = !DILocalVariable(name: "y", scope: !7062, file: !1, line: 490, type: !25)
!7082 = !DILocation(line: 490, column: 9, scope: !7062)
!7083 = !DILocalVariable(name: "startx", scope: !7062, file: !1, line: 490, type: !25)
!7084 = !DILocation(line: 490, column: 12, scope: !7062)
!7085 = !DILocalVariable(name: "endx", scope: !7062, file: !1, line: 490, type: !25)
!7086 = !DILocation(line: 490, column: 20, scope: !7062)
!7087 = !DILocalVariable(name: "starty", scope: !7062, file: !1, line: 490, type: !25)
!7088 = !DILocation(line: 490, column: 26, scope: !7062)
!7089 = !DILocalVariable(name: "endy", scope: !7062, file: !1, line: 490, type: !25)
!7090 = !DILocation(line: 490, column: 34, scope: !7062)
!7091 = !DILocation(line: 492, column: 21, scope: !7062)
!7092 = !DILocation(line: 492, column: 25, scope: !7062)
!7093 = !DILocation(line: 492, column: 15, scope: !7062)
!7094 = !DILocation(line: 492, column: 10, scope: !7062)
!7095 = !DILocation(line: 492, column: 8, scope: !7062)
!7096 = !DILocation(line: 493, column: 19, scope: !7062)
!7097 = !DILocation(line: 493, column: 23, scope: !7062)
!7098 = !DILocation(line: 493, column: 13, scope: !7062)
!7099 = !DILocation(line: 493, column: 8, scope: !7062)
!7100 = !DILocation(line: 493, column: 6, scope: !7062)
!7101 = !DILocation(line: 494, column: 21, scope: !7062)
!7102 = !DILocation(line: 494, column: 25, scope: !7062)
!7103 = !DILocation(line: 494, column: 15, scope: !7062)
!7104 = !DILocation(line: 494, column: 10, scope: !7062)
!7105 = !DILocation(line: 494, column: 8, scope: !7062)
!7106 = !DILocation(line: 495, column: 19, scope: !7062)
!7107 = !DILocation(line: 495, column: 23, scope: !7062)
!7108 = !DILocation(line: 495, column: 13, scope: !7062)
!7109 = !DILocation(line: 495, column: 8, scope: !7062)
!7110 = !DILocation(line: 495, column: 6, scope: !7062)
!7111 = !DILocation(line: 497, column: 6, scope: !7112)
!7112 = distinct !DILexicalBlock(scope: !7062, file: !1, line: 497, column: 6)
!7113 = !DILocation(line: 497, column: 13, scope: !7112)
!7114 = !DILocation(line: 497, column: 6, scope: !7062)
!7115 = !DILocation(line: 497, column: 24, scope: !7112)
!7116 = !DILocation(line: 497, column: 18, scope: !7112)
!7117 = !DILocation(line: 498, column: 6, scope: !7118)
!7118 = distinct !DILexicalBlock(scope: !7062, file: !1, line: 498, column: 6)
!7119 = !DILocation(line: 498, column: 13, scope: !7118)
!7120 = !DILocation(line: 498, column: 6, scope: !7062)
!7121 = !DILocation(line: 498, column: 24, scope: !7118)
!7122 = !DILocation(line: 498, column: 18, scope: !7118)
!7123 = !DILocation(line: 499, column: 6, scope: !7124)
!7124 = distinct !DILexicalBlock(scope: !7062, file: !1, line: 499, column: 6)
!7125 = !DILocation(line: 499, column: 12, scope: !7124)
!7126 = !DILocation(line: 499, column: 18, scope: !7124)
!7127 = !DILocation(line: 499, column: 10, scope: !7124)
!7128 = !DILocation(line: 499, column: 6, scope: !7062)
!7129 = !DILocation(line: 499, column: 27, scope: !7124)
!7130 = !DILocation(line: 499, column: 33, scope: !7124)
!7131 = !DILocation(line: 499, column: 34, scope: !7124)
!7132 = !DILocation(line: 499, column: 25, scope: !7124)
!7133 = !DILocation(line: 499, column: 21, scope: !7124)
!7134 = !DILocation(line: 500, column: 6, scope: !7135)
!7135 = distinct !DILexicalBlock(scope: !7062, file: !1, line: 500, column: 6)
!7136 = !DILocation(line: 500, column: 12, scope: !7135)
!7137 = !DILocation(line: 500, column: 18, scope: !7135)
!7138 = !DILocation(line: 500, column: 10, scope: !7135)
!7139 = !DILocation(line: 500, column: 6, scope: !7062)
!7140 = !DILocation(line: 500, column: 27, scope: !7135)
!7141 = !DILocation(line: 500, column: 33, scope: !7135)
!7142 = !DILocation(line: 500, column: 34, scope: !7135)
!7143 = !DILocation(line: 500, column: 25, scope: !7135)
!7144 = !DILocation(line: 500, column: 21, scope: !7135)
!7145 = !DILocation(line: 502, column: 6, scope: !7146)
!7146 = distinct !DILexicalBlock(scope: !7062, file: !1, line: 502, column: 6)
!7147 = !DILocation(line: 502, column: 14, scope: !7146)
!7148 = !DILocation(line: 502, column: 12, scope: !7146)
!7149 = !DILocation(line: 502, column: 19, scope: !7146)
!7150 = !DILocation(line: 502, column: 22, scope: !7146)
!7151 = !DILocation(line: 502, column: 30, scope: !7146)
!7152 = !DILocation(line: 502, column: 28, scope: !7146)
!7153 = !DILocation(line: 502, column: 6, scope: !7062)
!7154 = !DILocation(line: 503, column: 19, scope: !7155)
!7155 = distinct !DILexicalBlock(scope: !7146, file: !1, line: 502, column: 36)
!7156 = !DILocation(line: 503, column: 27, scope: !7155)
!7157 = !DILocation(line: 503, column: 31, scope: !7155)
!7158 = !DILocation(line: 503, column: 37, scope: !7155)
!7159 = !DILocation(line: 503, column: 45, scope: !7155)
!7160 = !DILocation(line: 503, column: 3, scope: !7155)
!7161 = !DILocation(line: 504, column: 2, scope: !7155)
!7162 = !DILocation(line: 506, column: 44, scope: !7163)
!7163 = distinct !DILexicalBlock(scope: !7146, file: !1, line: 505, column: 7)
!7164 = !DILocation(line: 506, column: 52, scope: !7163)
!7165 = !DILocation(line: 506, column: 54, scope: !7163)
!7166 = !DILocation(line: 506, column: 32, scope: !7163)
!7167 = !DILocation(line: 506, column: 40, scope: !7163)
!7168 = !DILocation(line: 506, column: 42, scope: !7163)
!7169 = !DILocation(line: 506, column: 20, scope: !7163)
!7170 = !DILocation(line: 506, column: 28, scope: !7163)
!7171 = !DILocation(line: 506, column: 30, scope: !7163)
!7172 = !DILocation(line: 506, column: 8, scope: !7163)
!7173 = !DILocation(line: 506, column: 16, scope: !7163)
!7174 = !DILocation(line: 506, column: 18, scope: !7163)
!7175 = !DILocation(line: 506, column: 6, scope: !7163)
!7176 = !DILocation(line: 507, column: 10, scope: !7177)
!7177 = distinct !DILexicalBlock(scope: !7163, file: !1, line: 507, column: 3)
!7178 = !DILocation(line: 507, column: 9, scope: !7177)
!7179 = !DILocation(line: 507, column: 8, scope: !7177)
!7180 = !DILocation(line: 507, column: 18, scope: !7181)
!7181 = distinct !DILexicalBlock(scope: !7177, file: !1, line: 507, column: 3)
!7182 = !DILocation(line: 507, column: 21, scope: !7181)
!7183 = !DILocation(line: 507, column: 19, scope: !7181)
!7184 = !DILocation(line: 507, column: 3, scope: !7177)
!7185 = !DILocation(line: 509, column: 8, scope: !7186)
!7186 = distinct !DILexicalBlock(scope: !7181, file: !1, line: 507, column: 32)
!7187 = !DILocation(line: 511, column: 8, scope: !7188)
!7188 = distinct !DILexicalBlock(scope: !7186, file: !1, line: 511, column: 8)
!7189 = !DILocation(line: 511, column: 16, scope: !7188)
!7190 = !DILocation(line: 511, column: 14, scope: !7188)
!7191 = !DILocation(line: 511, column: 8, scope: !7186)
!7192 = !DILocation(line: 513, column: 4, scope: !7193)
!7193 = distinct !DILexicalBlock(scope: !7188, file: !1, line: 511, column: 22)
!7194 = !DILocation(line: 515, column: 9, scope: !7195)
!7195 = distinct !DILexicalBlock(scope: !7196, file: !1, line: 515, column: 9)
!7196 = distinct !DILexicalBlock(scope: !7188, file: !1, line: 514, column: 9)
!7197 = !DILocation(line: 515, column: 12, scope: !7195)
!7198 = !DILocation(line: 515, column: 10, scope: !7195)
!7199 = !DILocation(line: 515, column: 9, scope: !7196)
!7200 = !DILocation(line: 515, column: 32, scope: !7195)
!7201 = !DILocation(line: 515, column: 36, scope: !7195)
!7202 = !DILocation(line: 515, column: 43, scope: !7195)
!7203 = !DILocation(line: 515, column: 41, scope: !7195)
!7204 = !DILocation(line: 515, column: 30, scope: !7195)
!7205 = !DILocation(line: 515, column: 24, scope: !7195)
!7206 = !DILocation(line: 515, column: 20, scope: !7195)
!7207 = !DILocation(line: 516, column: 9, scope: !7208)
!7208 = distinct !DILexicalBlock(scope: !7196, file: !1, line: 516, column: 9)
!7209 = !DILocation(line: 516, column: 12, scope: !7208)
!7210 = !DILocation(line: 516, column: 10, scope: !7208)
!7211 = !DILocation(line: 516, column: 9, scope: !7196)
!7212 = !DILocation(line: 516, column: 25, scope: !7208)
!7213 = !DILocation(line: 516, column: 29, scope: !7208)
!7214 = !DILocation(line: 516, column: 36, scope: !7208)
!7215 = !DILocation(line: 516, column: 34, scope: !7208)
!7216 = !DILocation(line: 516, column: 22, scope: !7208)
!7217 = !DILocation(line: 516, column: 18, scope: !7208)
!7218 = !DILocation(line: 519, column: 8, scope: !7219)
!7219 = distinct !DILexicalBlock(scope: !7186, file: !1, line: 519, column: 8)
!7220 = !DILocation(line: 519, column: 16, scope: !7219)
!7221 = !DILocation(line: 519, column: 14, scope: !7219)
!7222 = !DILocation(line: 519, column: 8, scope: !7186)
!7223 = !DILocation(line: 520, column: 11, scope: !7224)
!7224 = distinct !DILexicalBlock(scope: !7219, file: !1, line: 519, column: 22)
!7225 = !DILocation(line: 520, column: 9, scope: !7224)
!7226 = !DILocation(line: 522, column: 20, scope: !7224)
!7227 = !DILocation(line: 522, column: 25, scope: !7224)
!7228 = !DILocation(line: 522, column: 31, scope: !7224)
!7229 = !DILocation(line: 522, column: 39, scope: !7224)
!7230 = !DILocation(line: 522, column: 5, scope: !7224)
!7231 = !DILocation(line: 524, column: 18, scope: !7224)
!7232 = !DILocation(line: 524, column: 23, scope: !7224)
!7233 = !DILocation(line: 524, column: 22, scope: !7224)
!7234 = !DILocation(line: 524, column: 5, scope: !7224)
!7235 = !DILocation(line: 524, column: 13, scope: !7224)
!7236 = !DILocation(line: 524, column: 15, scope: !7224)
!7237 = !DILocation(line: 525, column: 18, scope: !7224)
!7238 = !DILocation(line: 525, column: 23, scope: !7224)
!7239 = !DILocation(line: 525, column: 22, scope: !7224)
!7240 = !DILocation(line: 525, column: 5, scope: !7224)
!7241 = !DILocation(line: 525, column: 13, scope: !7224)
!7242 = !DILocation(line: 525, column: 15, scope: !7224)
!7243 = !DILocation(line: 526, column: 18, scope: !7224)
!7244 = !DILocation(line: 526, column: 23, scope: !7224)
!7245 = !DILocation(line: 526, column: 22, scope: !7224)
!7246 = !DILocation(line: 526, column: 5, scope: !7224)
!7247 = !DILocation(line: 526, column: 13, scope: !7224)
!7248 = !DILocation(line: 526, column: 15, scope: !7224)
!7249 = !DILocation(line: 527, column: 18, scope: !7224)
!7250 = !DILocation(line: 527, column: 23, scope: !7224)
!7251 = !DILocation(line: 527, column: 22, scope: !7224)
!7252 = !DILocation(line: 527, column: 5, scope: !7224)
!7253 = !DILocation(line: 527, column: 13, scope: !7224)
!7254 = !DILocation(line: 527, column: 15, scope: !7224)
!7255 = !DILocation(line: 528, column: 11, scope: !7224)
!7256 = !DILocation(line: 528, column: 8, scope: !7224)
!7257 = !DILocation(line: 529, column: 4, scope: !7224)
!7258 = !DILocation(line: 531, column: 12, scope: !7259)
!7259 = distinct !DILexicalBlock(scope: !7260, file: !1, line: 531, column: 5)
!7260 = distinct !DILexicalBlock(scope: !7219, file: !1, line: 530, column: 9)
!7261 = !DILocation(line: 531, column: 11, scope: !7259)
!7262 = !DILocation(line: 531, column: 10, scope: !7259)
!7263 = !DILocation(line: 531, column: 20, scope: !7264)
!7264 = distinct !DILexicalBlock(scope: !7259, file: !1, line: 531, column: 5)
!7265 = !DILocation(line: 531, column: 23, scope: !7264)
!7266 = !DILocation(line: 531, column: 21, scope: !7264)
!7267 = !DILocation(line: 531, column: 5, scope: !7259)
!7268 = !DILocation(line: 532, column: 12, scope: !7269)
!7269 = distinct !DILexicalBlock(scope: !7264, file: !1, line: 531, column: 34)
!7270 = !DILocation(line: 532, column: 10, scope: !7269)
!7271 = !DILocation(line: 533, column: 10, scope: !7272)
!7272 = distinct !DILexicalBlock(scope: !7269, file: !1, line: 533, column: 10)
!7273 = !DILocation(line: 533, column: 13, scope: !7272)
!7274 = !DILocation(line: 533, column: 11, scope: !7272)
!7275 = !DILocation(line: 533, column: 10, scope: !7269)
!7276 = !DILocation(line: 533, column: 34, scope: !7272)
!7277 = !DILocation(line: 533, column: 38, scope: !7272)
!7278 = !DILocation(line: 533, column: 45, scope: !7272)
!7279 = !DILocation(line: 533, column: 43, scope: !7272)
!7280 = !DILocation(line: 533, column: 32, scope: !7272)
!7281 = !DILocation(line: 533, column: 25, scope: !7272)
!7282 = !DILocation(line: 533, column: 21, scope: !7272)
!7283 = !DILocation(line: 534, column: 10, scope: !7284)
!7284 = distinct !DILexicalBlock(scope: !7269, file: !1, line: 534, column: 10)
!7285 = !DILocation(line: 534, column: 13, scope: !7284)
!7286 = !DILocation(line: 534, column: 11, scope: !7284)
!7287 = !DILocation(line: 534, column: 10, scope: !7269)
!7288 = !DILocation(line: 534, column: 27, scope: !7284)
!7289 = !DILocation(line: 534, column: 31, scope: !7284)
!7290 = !DILocation(line: 534, column: 38, scope: !7284)
!7291 = !DILocation(line: 534, column: 36, scope: !7284)
!7292 = !DILocation(line: 534, column: 23, scope: !7284)
!7293 = !DILocation(line: 534, column: 19, scope: !7284)
!7294 = !DILocation(line: 536, column: 21, scope: !7269)
!7295 = !DILocation(line: 536, column: 26, scope: !7269)
!7296 = !DILocation(line: 536, column: 32, scope: !7269)
!7297 = !DILocation(line: 536, column: 35, scope: !7269)
!7298 = !DILocation(line: 536, column: 6, scope: !7269)
!7299 = !DILocation(line: 538, column: 10, scope: !7300)
!7300 = distinct !DILexicalBlock(scope: !7269, file: !1, line: 538, column: 10)
!7301 = !DILocation(line: 538, column: 14, scope: !7300)
!7302 = !DILocation(line: 538, column: 10, scope: !7269)
!7303 = !DILocation(line: 539, column: 20, scope: !7304)
!7304 = distinct !DILexicalBlock(scope: !7300, file: !1, line: 538, column: 22)
!7305 = !DILocation(line: 539, column: 7, scope: !7304)
!7306 = !DILocation(line: 539, column: 15, scope: !7304)
!7307 = !DILocation(line: 539, column: 17, scope: !7304)
!7308 = !DILocation(line: 540, column: 20, scope: !7304)
!7309 = !DILocation(line: 540, column: 7, scope: !7304)
!7310 = !DILocation(line: 540, column: 15, scope: !7304)
!7311 = !DILocation(line: 540, column: 17, scope: !7304)
!7312 = !DILocation(line: 541, column: 20, scope: !7304)
!7313 = !DILocation(line: 541, column: 7, scope: !7304)
!7314 = !DILocation(line: 541, column: 15, scope: !7304)
!7315 = !DILocation(line: 541, column: 17, scope: !7304)
!7316 = !DILocation(line: 542, column: 20, scope: !7304)
!7317 = !DILocation(line: 542, column: 7, scope: !7304)
!7318 = !DILocation(line: 542, column: 15, scope: !7304)
!7319 = !DILocation(line: 542, column: 17, scope: !7304)
!7320 = !DILocation(line: 543, column: 10, scope: !7304)
!7321 = !DILocation(line: 544, column: 6, scope: !7304)
!7322 = !DILocation(line: 546, column: 20, scope: !7323)
!7323 = distinct !DILexicalBlock(scope: !7300, file: !1, line: 545, column: 11)
!7324 = !DILocation(line: 546, column: 25, scope: !7323)
!7325 = !DILocation(line: 546, column: 24, scope: !7323)
!7326 = !DILocation(line: 546, column: 7, scope: !7323)
!7327 = !DILocation(line: 546, column: 15, scope: !7323)
!7328 = !DILocation(line: 546, column: 17, scope: !7323)
!7329 = !DILocation(line: 547, column: 20, scope: !7323)
!7330 = !DILocation(line: 547, column: 25, scope: !7323)
!7331 = !DILocation(line: 547, column: 24, scope: !7323)
!7332 = !DILocation(line: 547, column: 7, scope: !7323)
!7333 = !DILocation(line: 547, column: 15, scope: !7323)
!7334 = !DILocation(line: 547, column: 17, scope: !7323)
!7335 = !DILocation(line: 548, column: 20, scope: !7323)
!7336 = !DILocation(line: 548, column: 25, scope: !7323)
!7337 = !DILocation(line: 548, column: 24, scope: !7323)
!7338 = !DILocation(line: 548, column: 7, scope: !7323)
!7339 = !DILocation(line: 548, column: 15, scope: !7323)
!7340 = !DILocation(line: 548, column: 17, scope: !7323)
!7341 = !DILocation(line: 549, column: 20, scope: !7323)
!7342 = !DILocation(line: 549, column: 25, scope: !7323)
!7343 = !DILocation(line: 549, column: 24, scope: !7323)
!7344 = !DILocation(line: 549, column: 7, scope: !7323)
!7345 = !DILocation(line: 549, column: 15, scope: !7323)
!7346 = !DILocation(line: 549, column: 17, scope: !7323)
!7347 = !DILocation(line: 550, column: 13, scope: !7323)
!7348 = !DILocation(line: 550, column: 10, scope: !7323)
!7349 = !DILocation(line: 552, column: 5, scope: !7269)
!7350 = !DILocation(line: 531, column: 30, scope: !7264)
!7351 = !DILocation(line: 531, column: 5, scope: !7264)
!7352 = distinct !{!7352, !7267, !7353}
!7353 = !DILocation(line: 552, column: 5, scope: !7259)
!7354 = !DILocation(line: 554, column: 3, scope: !7186)
!7355 = !DILocation(line: 507, column: 28, scope: !7181)
!7356 = !DILocation(line: 507, column: 3, scope: !7181)
!7357 = distinct !{!7357, !7184, !7358}
!7358 = !DILocation(line: 554, column: 3, scope: !7177)
!7359 = !DILocation(line: 556, column: 7, scope: !7360)
!7360 = distinct !DILexicalBlock(scope: !7163, file: !1, line: 556, column: 7)
!7361 = !DILocation(line: 556, column: 10, scope: !7360)
!7362 = !DILocation(line: 556, column: 7, scope: !7163)
!7363 = !DILocation(line: 557, column: 14, scope: !7364)
!7364 = distinct !DILexicalBlock(scope: !7360, file: !1, line: 556, column: 18)
!7365 = !DILocation(line: 557, column: 13, scope: !7364)
!7366 = !DILocation(line: 557, column: 7, scope: !7364)
!7367 = !DILocation(line: 558, column: 17, scope: !7364)
!7368 = !DILocation(line: 558, column: 4, scope: !7364)
!7369 = !DILocation(line: 558, column: 12, scope: !7364)
!7370 = !DILocation(line: 558, column: 14, scope: !7364)
!7371 = !DILocation(line: 559, column: 17, scope: !7364)
!7372 = !DILocation(line: 559, column: 4, scope: !7364)
!7373 = !DILocation(line: 559, column: 12, scope: !7364)
!7374 = !DILocation(line: 559, column: 14, scope: !7364)
!7375 = !DILocation(line: 560, column: 17, scope: !7364)
!7376 = !DILocation(line: 560, column: 4, scope: !7364)
!7377 = !DILocation(line: 560, column: 12, scope: !7364)
!7378 = !DILocation(line: 560, column: 14, scope: !7364)
!7379 = !DILocation(line: 561, column: 17, scope: !7364)
!7380 = !DILocation(line: 561, column: 4, scope: !7364)
!7381 = !DILocation(line: 561, column: 12, scope: !7364)
!7382 = !DILocation(line: 561, column: 14, scope: !7364)
!7383 = !DILocation(line: 562, column: 3, scope: !7364)
!7384 = !DILocation(line: 564, column: 40, scope: !7385)
!7385 = distinct !DILexicalBlock(scope: !7360, file: !1, line: 563, column: 8)
!7386 = !DILocation(line: 564, column: 48, scope: !7385)
!7387 = !DILocation(line: 564, column: 50, scope: !7385)
!7388 = !DILocation(line: 564, column: 28, scope: !7385)
!7389 = !DILocation(line: 564, column: 36, scope: !7385)
!7390 = !DILocation(line: 564, column: 38, scope: !7385)
!7391 = !DILocation(line: 564, column: 16, scope: !7385)
!7392 = !DILocation(line: 564, column: 24, scope: !7385)
!7393 = !DILocation(line: 564, column: 26, scope: !7385)
!7394 = !DILocation(line: 564, column: 4, scope: !7385)
!7395 = !DILocation(line: 564, column: 12, scope: !7385)
!7396 = !DILocation(line: 564, column: 14, scope: !7385)
!7397 = !DILocation(line: 567, column: 1, scope: !7062)
!7398 = distinct !DISubprogram(name: "square_rctf", scope: !1, file: !1, line: 429, type: !7399, scopeLine: 430, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1638)
!7399 = !DISubroutineType(types: !7400)
!7400 = !{!26, !2404}
!7401 = !DILocalVariable(name: "rf", arg: 1, scope: !7398, file: !1, line: 429, type: !2404)
!7402 = !DILocation(line: 429, column: 32, scope: !7398)
!7403 = !DILocalVariable(name: "x", scope: !7398, file: !1, line: 431, type: !26)
!7404 = !DILocation(line: 431, column: 8, scope: !7398)
!7405 = !DILocalVariable(name: "y", scope: !7398, file: !1, line: 431, type: !26)
!7406 = !DILocation(line: 431, column: 11, scope: !7398)
!7407 = !DILocation(line: 433, column: 22, scope: !7398)
!7408 = !DILocation(line: 433, column: 6, scope: !7398)
!7409 = !DILocation(line: 433, column: 4, scope: !7398)
!7410 = !DILocation(line: 434, column: 22, scope: !7398)
!7411 = !DILocation(line: 434, column: 6, scope: !7398)
!7412 = !DILocation(line: 434, column: 4, scope: !7398)
!7413 = !DILocation(line: 435, column: 9, scope: !7398)
!7414 = !DILocation(line: 435, column: 13, scope: !7398)
!7415 = !DILocation(line: 435, column: 11, scope: !7398)
!7416 = !DILocation(line: 435, column: 2, scope: !7398)
!7417 = distinct !DISubprogram(name: "BLI_rctf_size_x", scope: !7418, file: !7418, line: 107, type: !7419, scopeLine: 107, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1638)
!7418 = !DIFile(filename: "blender/source/blender/blenlib/BLI_rect.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!7419 = !DISubroutineType(types: !7420)
!7420 = !{!26, !7421}
!7421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7422, size: 64)
!7422 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1123)
!7423 = !DILocalVariable(name: "rct", arg: 1, scope: !7417, file: !7418, line: 107, type: !7421)
!7424 = !DILocation(line: 107, column: 53, scope: !7417)
!7425 = !DILocation(line: 107, column: 68, scope: !7417)
!7426 = !DILocation(line: 107, column: 73, scope: !7417)
!7427 = !DILocation(line: 107, column: 80, scope: !7417)
!7428 = !DILocation(line: 107, column: 85, scope: !7417)
!7429 = !DILocation(line: 107, column: 78, scope: !7417)
!7430 = !DILocation(line: 107, column: 60, scope: !7417)
!7431 = distinct !DISubprogram(name: "BLI_rctf_size_y", scope: !7418, file: !7418, line: 108, type: !7419, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1638)
!7432 = !DILocalVariable(name: "rct", arg: 1, scope: !7431, file: !7418, line: 108, type: !7421)
!7433 = !DILocation(line: 108, column: 53, scope: !7431)
!7434 = !DILocation(line: 108, column: 68, scope: !7431)
!7435 = !DILocation(line: 108, column: 73, scope: !7431)
!7436 = !DILocation(line: 108, column: 80, scope: !7431)
!7437 = !DILocation(line: 108, column: 85, scope: !7431)
!7438 = !DILocation(line: 108, column: 78, scope: !7431)
!7439 = !DILocation(line: 108, column: 60, scope: !7431)
!7440 = distinct !DISubprogram(name: "feline_eval", scope: !1, file: !1, line: 821, type: !4560, scopeLine: 822, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1638)
!7441 = !DILocalVariable(name: "texr", arg: 1, scope: !7440, file: !1, line: 821, type: !1623)
!7442 = !DILocation(line: 821, column: 36, scope: !7440)
!7443 = !DILocalVariable(name: "ibuf", arg: 2, scope: !7440, file: !1, line: 821, type: !34)
!7444 = !DILocation(line: 821, column: 49, scope: !7440)
!7445 = !DILocalVariable(name: "fx", arg: 3, scope: !7440, file: !1, line: 821, type: !26)
!7446 = !DILocation(line: 821, column: 61, scope: !7440)
!7447 = !DILocalVariable(name: "fy", arg: 4, scope: !7440, file: !1, line: 821, type: !26)
!7448 = !DILocation(line: 821, column: 71, scope: !7440)
!7449 = !DILocalVariable(name: "AFD", arg: 5, scope: !7440, file: !1, line: 821, type: !120)
!7450 = !DILocation(line: 821, column: 85, scope: !7440)
!7451 = !DILocalVariable(name: "maxn", scope: !7440, file: !1, line: 823, type: !4195)
!7452 = !DILocation(line: 823, column: 12, scope: !7440)
!7453 = !DILocation(line: 823, column: 19, scope: !7440)
!7454 = !DILocation(line: 823, column: 24, scope: !7440)
!7455 = !DILocation(line: 823, column: 32, scope: !7440)
!7456 = !DILocalVariable(name: "ll", scope: !7440, file: !1, line: 824, type: !1622)
!7457 = !DILocation(line: 824, column: 14, scope: !7440)
!7458 = !DILocation(line: 824, column: 21, scope: !7440)
!7459 = !DILocation(line: 824, column: 26, scope: !7440)
!7460 = !DILocation(line: 824, column: 36, scope: !7440)
!7461 = !DILocation(line: 824, column: 41, scope: !7440)
!7462 = !DILocation(line: 824, column: 33, scope: !7440)
!7463 = !DILocation(line: 824, column: 20, scope: !7440)
!7464 = !DILocation(line: 824, column: 55, scope: !7440)
!7465 = !DILocation(line: 824, column: 60, scope: !7440)
!7466 = !DILocation(line: 824, column: 54, scope: !7440)
!7467 = !DILocation(line: 824, column: 74, scope: !7440)
!7468 = !DILocation(line: 824, column: 79, scope: !7440)
!7469 = !DILocation(line: 824, column: 88, scope: !7440)
!7470 = !DILocation(line: 824, column: 93, scope: !7440)
!7471 = !DILocation(line: 824, column: 86, scope: !7440)
!7472 = !DILocation(line: 824, column: 72, scope: !7440)
!7473 = !DILocation(line: 824, column: 105, scope: !7440)
!7474 = !DILocation(line: 824, column: 119, scope: !7440)
!7475 = !DILocation(line: 824, column: 112, scope: !7440)
!7476 = !DILocation(line: 824, column: 102, scope: !7440)
!7477 = !DILocalVariable(name: "du", scope: !7440, file: !1, line: 825, type: !26)
!7478 = !DILocation(line: 825, column: 8, scope: !7440)
!7479 = !DILocation(line: 825, column: 13, scope: !7440)
!7480 = !DILocation(line: 825, column: 25, scope: !7440)
!7481 = !DILocation(line: 825, column: 30, scope: !7440)
!7482 = !DILocation(line: 825, column: 20, scope: !7440)
!7483 = !DILocation(line: 825, column: 37, scope: !7440)
!7484 = !DILocation(line: 825, column: 36, scope: !7440)
!7485 = !DILocalVariable(name: "dv", scope: !7440, file: !1, line: 826, type: !26)
!7486 = !DILocation(line: 826, column: 8, scope: !7440)
!7487 = !DILocation(line: 826, column: 13, scope: !7440)
!7488 = !DILocation(line: 826, column: 25, scope: !7440)
!7489 = !DILocation(line: 826, column: 30, scope: !7440)
!7490 = !DILocation(line: 826, column: 20, scope: !7440)
!7491 = !DILocation(line: 826, column: 37, scope: !7440)
!7492 = !DILocation(line: 826, column: 36, scope: !7440)
!7493 = !DILocalVariable(name: "D", scope: !7440, file: !1, line: 828, type: !1622)
!7494 = !DILocation(line: 828, column: 14, scope: !7440)
!7495 = !DILocation(line: 828, column: 42, scope: !7440)
!7496 = !DILocation(line: 828, column: 45, scope: !7440)
!7497 = !DILocation(line: 828, column: 44, scope: !7440)
!7498 = !DILocation(line: 828, column: 50, scope: !7440)
!7499 = !DILocation(line: 828, column: 53, scope: !7440)
!7500 = !DILocation(line: 828, column: 52, scope: !7440)
!7501 = !DILocation(line: 828, column: 48, scope: !7440)
!7502 = !DILocation(line: 828, column: 40, scope: !7440)
!7503 = !DILocation(line: 828, column: 60, scope: !7440)
!7504 = !DILocation(line: 828, column: 65, scope: !7440)
!7505 = !DILocation(line: 828, column: 72, scope: !7440)
!7506 = !DILocation(line: 828, column: 77, scope: !7440)
!7507 = !DILocation(line: 828, column: 71, scope: !7440)
!7508 = !DILocation(line: 828, column: 57, scope: !7440)
!7509 = !DILocalVariable(name: "d", scope: !7440, file: !1, line: 829, type: !26)
!7510 = !DILocation(line: 829, column: 8, scope: !7440)
!7511 = !DILocalVariable(name: "n", scope: !7440, file: !1, line: 830, type: !25)
!7512 = !DILocation(line: 830, column: 6, scope: !7440)
!7513 = !DILocation(line: 832, column: 8, scope: !7440)
!7514 = !DILocation(line: 832, column: 13, scope: !7440)
!7515 = !DILocation(line: 832, column: 5, scope: !7440)
!7516 = !DILocation(line: 833, column: 8, scope: !7440)
!7517 = !DILocation(line: 833, column: 13, scope: !7440)
!7518 = !DILocation(line: 833, column: 5, scope: !7440)
!7519 = !DILocation(line: 834, column: 39, scope: !7440)
!7520 = !DILocation(line: 834, column: 45, scope: !7440)
!7521 = !DILocation(line: 834, column: 48, scope: !7440)
!7522 = !DILocation(line: 834, column: 28, scope: !7440)
!7523 = !DILocation(line: 834, column: 34, scope: !7440)
!7524 = !DILocation(line: 834, column: 37, scope: !7440)
!7525 = !DILocation(line: 834, column: 17, scope: !7440)
!7526 = !DILocation(line: 834, column: 23, scope: !7440)
!7527 = !DILocation(line: 834, column: 26, scope: !7440)
!7528 = !DILocation(line: 834, column: 6, scope: !7440)
!7529 = !DILocation(line: 834, column: 12, scope: !7440)
!7530 = !DILocation(line: 834, column: 15, scope: !7440)
!7531 = !DILocation(line: 834, column: 4, scope: !7440)
!7532 = !DILocation(line: 835, column: 10, scope: !7533)
!7533 = distinct !DILexicalBlock(scope: !7440, file: !1, line: 835, column: 2)
!7534 = !DILocation(line: 835, column: 9, scope: !7533)
!7535 = !DILocation(line: 835, column: 8, scope: !7533)
!7536 = !DILocation(line: 835, column: 7, scope: !7533)
!7537 = !DILocation(line: 835, column: 16, scope: !7538)
!7538 = distinct !DILexicalBlock(scope: !7533, file: !1, line: 835, column: 2)
!7539 = !DILocation(line: 835, column: 19, scope: !7538)
!7540 = !DILocation(line: 835, column: 17, scope: !7538)
!7541 = !DILocation(line: 835, column: 2, scope: !7533)
!7542 = !DILocalVariable(name: "tc", scope: !7543, file: !1, line: 836, type: !411)
!7543 = distinct !DILexicalBlock(scope: !7538, file: !1, line: 835, column: 31)
!7544 = !DILocation(line: 836, column: 9, scope: !7543)
!7545 = !DILocalVariable(name: "hn", scope: !7543, file: !1, line: 837, type: !1622)
!7546 = !DILocation(line: 837, column: 15, scope: !7543)
!7547 = !DILocation(line: 837, column: 20, scope: !7543)
!7548 = !DILocation(line: 837, column: 21, scope: !7543)
!7549 = !DILocalVariable(name: "u", scope: !7543, file: !1, line: 838, type: !1622)
!7550 = !DILocation(line: 838, column: 15, scope: !7543)
!7551 = !DILocation(line: 838, column: 19, scope: !7543)
!7552 = !DILocation(line: 838, column: 24, scope: !7543)
!7553 = !DILocation(line: 838, column: 27, scope: !7543)
!7554 = !DILocation(line: 838, column: 26, scope: !7543)
!7555 = !DILocation(line: 838, column: 22, scope: !7543)
!7556 = !DILocalVariable(name: "v", scope: !7543, file: !1, line: 838, type: !1622)
!7557 = !DILocation(line: 838, column: 31, scope: !7543)
!7558 = !DILocation(line: 838, column: 35, scope: !7543)
!7559 = !DILocation(line: 838, column: 40, scope: !7543)
!7560 = !DILocation(line: 838, column: 43, scope: !7543)
!7561 = !DILocation(line: 838, column: 42, scope: !7543)
!7562 = !DILocation(line: 838, column: 38, scope: !7543)
!7563 = !DILocalVariable(name: "wt", scope: !7543, file: !1, line: 841, type: !1622)
!7564 = !DILocation(line: 841, column: 15, scope: !7543)
!7565 = !DILocation(line: 841, column: 34, scope: !7543)
!7566 = !DILocation(line: 841, column: 36, scope: !7543)
!7567 = !DILocation(line: 841, column: 35, scope: !7543)
!7568 = !DILocation(line: 841, column: 38, scope: !7543)
!7569 = !DILocation(line: 841, column: 37, scope: !7543)
!7570 = !DILocation(line: 841, column: 28, scope: !7543)
!7571 = !DILocation(line: 841, column: 20, scope: !7543)
!7572 = !DILocation(line: 842, column: 50, scope: !7543)
!7573 = !DILocation(line: 842, column: 54, scope: !7543)
!7574 = !DILocation(line: 842, column: 60, scope: !7543)
!7575 = !DILocation(line: 842, column: 66, scope: !7543)
!7576 = !DILocation(line: 842, column: 68, scope: !7543)
!7577 = !DILocation(line: 842, column: 67, scope: !7543)
!7578 = !DILocation(line: 842, column: 71, scope: !7543)
!7579 = !DILocation(line: 842, column: 77, scope: !7543)
!7580 = !DILocation(line: 842, column: 79, scope: !7543)
!7581 = !DILocation(line: 842, column: 78, scope: !7543)
!7582 = !DILocation(line: 842, column: 82, scope: !7543)
!7583 = !DILocation(line: 842, column: 87, scope: !7543)
!7584 = !DILocation(line: 842, column: 95, scope: !7543)
!7585 = !DILocation(line: 842, column: 100, scope: !7543)
!7586 = !DILocation(line: 842, column: 23, scope: !7543)
!7587 = !DILocation(line: 845, column: 15, scope: !7543)
!7588 = !DILocation(line: 845, column: 21, scope: !7543)
!7589 = !DILocation(line: 845, column: 20, scope: !7543)
!7590 = !DILocation(line: 845, column: 3, scope: !7543)
!7591 = !DILocation(line: 845, column: 9, scope: !7543)
!7592 = !DILocation(line: 845, column: 12, scope: !7543)
!7593 = !DILocation(line: 846, column: 15, scope: !7543)
!7594 = !DILocation(line: 846, column: 21, scope: !7543)
!7595 = !DILocation(line: 846, column: 20, scope: !7543)
!7596 = !DILocation(line: 846, column: 3, scope: !7543)
!7597 = !DILocation(line: 846, column: 9, scope: !7543)
!7598 = !DILocation(line: 846, column: 12, scope: !7543)
!7599 = !DILocation(line: 847, column: 15, scope: !7543)
!7600 = !DILocation(line: 847, column: 21, scope: !7543)
!7601 = !DILocation(line: 847, column: 20, scope: !7543)
!7602 = !DILocation(line: 847, column: 3, scope: !7543)
!7603 = !DILocation(line: 847, column: 9, scope: !7543)
!7604 = !DILocation(line: 847, column: 12, scope: !7543)
!7605 = !DILocation(line: 848, column: 15, scope: !7543)
!7606 = !DILocation(line: 848, column: 21, scope: !7543)
!7607 = !DILocation(line: 848, column: 30, scope: !7543)
!7608 = !DILocation(line: 848, column: 36, scope: !7543)
!7609 = !DILocation(line: 848, column: 35, scope: !7543)
!7610 = !DILocation(line: 848, column: 3, scope: !7543)
!7611 = !DILocation(line: 848, column: 9, scope: !7543)
!7612 = !DILocation(line: 848, column: 12, scope: !7543)
!7613 = !DILocation(line: 849, column: 8, scope: !7543)
!7614 = !DILocation(line: 849, column: 5, scope: !7543)
!7615 = !DILocation(line: 850, column: 2, scope: !7543)
!7616 = !DILocation(line: 835, column: 26, scope: !7538)
!7617 = !DILocation(line: 835, column: 2, scope: !7538)
!7618 = distinct !{!7618, !7541, !7619}
!7619 = !DILocation(line: 850, column: 2, scope: !7533)
!7620 = !DILocation(line: 852, column: 10, scope: !7440)
!7621 = !DILocation(line: 852, column: 9, scope: !7440)
!7622 = !DILocation(line: 852, column: 4, scope: !7440)
!7623 = !DILocation(line: 853, column: 14, scope: !7440)
!7624 = !DILocation(line: 853, column: 2, scope: !7440)
!7625 = !DILocation(line: 853, column: 8, scope: !7440)
!7626 = !DILocation(line: 853, column: 11, scope: !7440)
!7627 = !DILocation(line: 854, column: 14, scope: !7440)
!7628 = !DILocation(line: 854, column: 2, scope: !7440)
!7629 = !DILocation(line: 854, column: 8, scope: !7440)
!7630 = !DILocation(line: 854, column: 11, scope: !7440)
!7631 = !DILocation(line: 855, column: 14, scope: !7440)
!7632 = !DILocation(line: 855, column: 2, scope: !7440)
!7633 = !DILocation(line: 855, column: 8, scope: !7440)
!7634 = !DILocation(line: 855, column: 11, scope: !7440)
!7635 = !DILocation(line: 857, column: 13, scope: !7440)
!7636 = !DILocation(line: 857, column: 19, scope: !7440)
!7637 = !DILocation(line: 857, column: 28, scope: !7440)
!7638 = !DILocation(line: 857, column: 34, scope: !7440)
!7639 = !DILocation(line: 857, column: 37, scope: !7440)
!7640 = !DILocation(line: 857, column: 36, scope: !7440)
!7641 = !DILocation(line: 857, column: 2, scope: !7440)
!7642 = !DILocation(line: 857, column: 8, scope: !7440)
!7643 = !DILocation(line: 857, column: 11, scope: !7440)
!7644 = !DILocation(line: 858, column: 1, scope: !7440)
!7645 = distinct !DISubprogram(name: "area_sample", scope: !1, file: !1, line: 757, type: !4560, scopeLine: 758, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1638)
!7646 = !DILocalVariable(name: "texr", arg: 1, scope: !7645, file: !1, line: 757, type: !1623)
!7647 = !DILocation(line: 757, column: 36, scope: !7645)
!7648 = !DILocalVariable(name: "ibuf", arg: 2, scope: !7645, file: !1, line: 757, type: !34)
!7649 = !DILocation(line: 757, column: 49, scope: !7645)
!7650 = !DILocalVariable(name: "fx", arg: 3, scope: !7645, file: !1, line: 757, type: !26)
!7651 = !DILocation(line: 757, column: 61, scope: !7645)
!7652 = !DILocalVariable(name: "fy", arg: 4, scope: !7645, file: !1, line: 757, type: !26)
!7653 = !DILocation(line: 757, column: 71, scope: !7645)
!7654 = !DILocalVariable(name: "AFD", arg: 5, scope: !7645, file: !1, line: 757, type: !120)
!7655 = !DILocation(line: 757, column: 85, scope: !7645)
!7656 = !DILocalVariable(name: "xs", scope: !7645, file: !1, line: 759, type: !25)
!7657 = !DILocation(line: 759, column: 6, scope: !7645)
!7658 = !DILocalVariable(name: "ys", scope: !7645, file: !1, line: 759, type: !25)
!7659 = !DILocation(line: 759, column: 10, scope: !7645)
!7660 = !DILocalVariable(name: "clip", scope: !7645, file: !1, line: 759, type: !25)
!7661 = !DILocation(line: 759, column: 14, scope: !7645)
!7662 = !DILocalVariable(name: "tc", scope: !7645, file: !1, line: 760, type: !411)
!7663 = !DILocation(line: 760, column: 8, scope: !7645)
!7664 = !DILocalVariable(name: "xsd", scope: !7645, file: !1, line: 760, type: !26)
!7665 = !DILocation(line: 760, column: 15, scope: !7645)
!7666 = !DILocalVariable(name: "ysd", scope: !7645, file: !1, line: 760, type: !26)
!7667 = !DILocation(line: 760, column: 20, scope: !7645)
!7668 = !DILocalVariable(name: "cw", scope: !7645, file: !1, line: 760, type: !26)
!7669 = !DILocation(line: 760, column: 25, scope: !7645)
!7670 = !DILocalVariable(name: "ux", scope: !7645, file: !1, line: 761, type: !1622)
!7671 = !DILocation(line: 761, column: 14, scope: !7645)
!7672 = !DILocation(line: 761, column: 19, scope: !7645)
!7673 = !DILocation(line: 761, column: 25, scope: !7645)
!7674 = !DILocation(line: 761, column: 27, scope: !7645)
!7675 = !DILocation(line: 761, column: 32, scope: !7645)
!7676 = !DILocation(line: 761, column: 26, scope: !7645)
!7677 = !DILocalVariable(name: "uy", scope: !7645, file: !1, line: 761, type: !1622)
!7678 = !DILocation(line: 761, column: 40, scope: !7645)
!7679 = !DILocation(line: 761, column: 45, scope: !7645)
!7680 = !DILocation(line: 761, column: 51, scope: !7645)
!7681 = !DILocation(line: 761, column: 53, scope: !7645)
!7682 = !DILocation(line: 761, column: 58, scope: !7645)
!7683 = !DILocation(line: 761, column: 52, scope: !7645)
!7684 = !DILocalVariable(name: "vx", scope: !7645, file: !1, line: 762, type: !1622)
!7685 = !DILocation(line: 762, column: 14, scope: !7645)
!7686 = !DILocation(line: 762, column: 19, scope: !7645)
!7687 = !DILocation(line: 762, column: 25, scope: !7645)
!7688 = !DILocation(line: 762, column: 27, scope: !7645)
!7689 = !DILocation(line: 762, column: 32, scope: !7645)
!7690 = !DILocation(line: 762, column: 26, scope: !7645)
!7691 = !DILocalVariable(name: "vy", scope: !7645, file: !1, line: 762, type: !1622)
!7692 = !DILocation(line: 762, column: 40, scope: !7645)
!7693 = !DILocation(line: 762, column: 45, scope: !7645)
!7694 = !DILocation(line: 762, column: 51, scope: !7645)
!7695 = !DILocation(line: 762, column: 53, scope: !7645)
!7696 = !DILocation(line: 762, column: 58, scope: !7645)
!7697 = !DILocation(line: 762, column: 52, scope: !7645)
!7698 = !DILocalVariable(name: "xsam", scope: !7645, file: !1, line: 763, type: !25)
!7699 = !DILocation(line: 763, column: 6, scope: !7645)
!7700 = !DILocation(line: 763, column: 30, scope: !7645)
!7701 = !DILocation(line: 763, column: 33, scope: !7645)
!7702 = !DILocation(line: 763, column: 32, scope: !7645)
!7703 = !DILocation(line: 763, column: 38, scope: !7645)
!7704 = !DILocation(line: 763, column: 41, scope: !7645)
!7705 = !DILocation(line: 763, column: 40, scope: !7645)
!7706 = !DILocation(line: 763, column: 36, scope: !7645)
!7707 = !DILocation(line: 763, column: 24, scope: !7645)
!7708 = !DILocation(line: 763, column: 23, scope: !7645)
!7709 = !DILocation(line: 763, column: 45, scope: !7645)
!7710 = !DILocation(line: 763, column: 13, scope: !7645)
!7711 = !DILocalVariable(name: "ysam", scope: !7645, file: !1, line: 764, type: !25)
!7712 = !DILocation(line: 764, column: 6, scope: !7645)
!7713 = !DILocation(line: 764, column: 30, scope: !7645)
!7714 = !DILocation(line: 764, column: 33, scope: !7645)
!7715 = !DILocation(line: 764, column: 32, scope: !7645)
!7716 = !DILocation(line: 764, column: 38, scope: !7645)
!7717 = !DILocation(line: 764, column: 41, scope: !7645)
!7718 = !DILocation(line: 764, column: 40, scope: !7645)
!7719 = !DILocation(line: 764, column: 36, scope: !7645)
!7720 = !DILocation(line: 764, column: 24, scope: !7645)
!7721 = !DILocation(line: 764, column: 23, scope: !7645)
!7722 = !DILocation(line: 764, column: 45, scope: !7645)
!7723 = !DILocation(line: 764, column: 13, scope: !7645)
!7724 = !DILocalVariable(name: "minsam", scope: !7645, file: !1, line: 765, type: !4195)
!7725 = !DILocation(line: 765, column: 12, scope: !7645)
!7726 = !DILocation(line: 765, column: 21, scope: !7645)
!7727 = !DILocation(line: 765, column: 26, scope: !7645)
!7728 = !DILocation(line: 766, column: 9, scope: !7645)
!7729 = !DILocation(line: 766, column: 7, scope: !7645)
!7730 = !DILocation(line: 767, column: 9, scope: !7645)
!7731 = !DILocation(line: 767, column: 7, scope: !7645)
!7732 = !DILocation(line: 768, column: 14, scope: !7645)
!7733 = !DILocation(line: 768, column: 12, scope: !7645)
!7734 = !DILocation(line: 768, column: 6, scope: !7645)
!7735 = !DILocation(line: 769, column: 14, scope: !7645)
!7736 = !DILocation(line: 769, column: 12, scope: !7645)
!7737 = !DILocation(line: 769, column: 6, scope: !7645)
!7738 = !DILocation(line: 770, column: 35, scope: !7645)
!7739 = !DILocation(line: 770, column: 41, scope: !7645)
!7740 = !DILocation(line: 770, column: 44, scope: !7645)
!7741 = !DILocation(line: 770, column: 24, scope: !7645)
!7742 = !DILocation(line: 770, column: 30, scope: !7645)
!7743 = !DILocation(line: 770, column: 33, scope: !7645)
!7744 = !DILocation(line: 770, column: 13, scope: !7645)
!7745 = !DILocation(line: 770, column: 19, scope: !7645)
!7746 = !DILocation(line: 770, column: 22, scope: !7645)
!7747 = !DILocation(line: 770, column: 2, scope: !7645)
!7748 = !DILocation(line: 770, column: 8, scope: !7645)
!7749 = !DILocation(line: 770, column: 11, scope: !7645)
!7750 = !DILocation(line: 771, column: 9, scope: !7751)
!7751 = distinct !DILexicalBlock(scope: !7645, file: !1, line: 771, column: 2)
!7752 = !DILocation(line: 771, column: 7, scope: !7751)
!7753 = !DILocation(line: 771, column: 13, scope: !7754)
!7754 = distinct !DILexicalBlock(scope: !7751, file: !1, line: 771, column: 2)
!7755 = !DILocation(line: 771, column: 16, scope: !7754)
!7756 = !DILocation(line: 771, column: 15, scope: !7754)
!7757 = !DILocation(line: 771, column: 2, scope: !7751)
!7758 = !DILocation(line: 772, column: 10, scope: !7759)
!7759 = distinct !DILexicalBlock(scope: !7760, file: !1, line: 772, column: 3)
!7760 = distinct !DILexicalBlock(scope: !7754, file: !1, line: 771, column: 28)
!7761 = !DILocation(line: 772, column: 8, scope: !7759)
!7762 = !DILocation(line: 772, column: 14, scope: !7763)
!7763 = distinct !DILexicalBlock(scope: !7759, file: !1, line: 772, column: 3)
!7764 = !DILocation(line: 772, column: 17, scope: !7763)
!7765 = !DILocation(line: 772, column: 16, scope: !7763)
!7766 = !DILocation(line: 772, column: 3, scope: !7759)
!7767 = !DILocalVariable(name: "su", scope: !7768, file: !1, line: 773, type: !1622)
!7768 = distinct !DILexicalBlock(scope: !7763, file: !1, line: 772, column: 29)
!7769 = !DILocation(line: 773, column: 16, scope: !7768)
!7770 = !DILocation(line: 773, column: 22, scope: !7768)
!7771 = !DILocation(line: 773, column: 29, scope: !7768)
!7772 = !DILocation(line: 773, column: 32, scope: !7768)
!7773 = !DILocation(line: 773, column: 28, scope: !7768)
!7774 = !DILocation(line: 773, column: 37, scope: !7768)
!7775 = !DILocation(line: 773, column: 44, scope: !7768)
!7776 = !DILocation(line: 773, column: 25, scope: !7768)
!7777 = !DILocation(line: 773, column: 51, scope: !7768)
!7778 = !DILocation(line: 773, column: 50, scope: !7768)
!7779 = !DILocation(line: 773, column: 55, scope: !7768)
!7780 = !DILocalVariable(name: "sv", scope: !7768, file: !1, line: 774, type: !1622)
!7781 = !DILocation(line: 774, column: 16, scope: !7768)
!7782 = !DILocation(line: 774, column: 22, scope: !7768)
!7783 = !DILocation(line: 774, column: 29, scope: !7768)
!7784 = !DILocation(line: 774, column: 32, scope: !7768)
!7785 = !DILocation(line: 774, column: 28, scope: !7768)
!7786 = !DILocation(line: 774, column: 37, scope: !7768)
!7787 = !DILocation(line: 774, column: 44, scope: !7768)
!7788 = !DILocation(line: 774, column: 25, scope: !7768)
!7789 = !DILocation(line: 774, column: 51, scope: !7768)
!7790 = !DILocation(line: 774, column: 50, scope: !7768)
!7791 = !DILocation(line: 774, column: 55, scope: !7768)
!7792 = !DILocalVariable(name: "pu", scope: !7768, file: !1, line: 775, type: !1622)
!7793 = !DILocation(line: 775, column: 16, scope: !7768)
!7794 = !DILocation(line: 775, column: 21, scope: !7768)
!7795 = !DILocation(line: 775, column: 26, scope: !7768)
!7796 = !DILocation(line: 775, column: 29, scope: !7768)
!7797 = !DILocation(line: 775, column: 34, scope: !7768)
!7798 = !DILocation(line: 775, column: 28, scope: !7768)
!7799 = !DILocation(line: 775, column: 24, scope: !7768)
!7800 = !DILocation(line: 775, column: 43, scope: !7768)
!7801 = !DILocation(line: 775, column: 46, scope: !7768)
!7802 = !DILocation(line: 775, column: 51, scope: !7768)
!7803 = !DILocation(line: 775, column: 45, scope: !7768)
!7804 = !DILocation(line: 775, column: 41, scope: !7768)
!7805 = !DILocalVariable(name: "pv", scope: !7768, file: !1, line: 776, type: !1622)
!7806 = !DILocation(line: 776, column: 16, scope: !7768)
!7807 = !DILocation(line: 776, column: 21, scope: !7768)
!7808 = !DILocation(line: 776, column: 26, scope: !7768)
!7809 = !DILocation(line: 776, column: 29, scope: !7768)
!7810 = !DILocation(line: 776, column: 34, scope: !7768)
!7811 = !DILocation(line: 776, column: 28, scope: !7768)
!7812 = !DILocation(line: 776, column: 24, scope: !7768)
!7813 = !DILocation(line: 776, column: 43, scope: !7768)
!7814 = !DILocation(line: 776, column: 46, scope: !7768)
!7815 = !DILocation(line: 776, column: 51, scope: !7768)
!7816 = !DILocation(line: 776, column: 45, scope: !7768)
!7817 = !DILocation(line: 776, column: 41, scope: !7768)
!7818 = !DILocalVariable(name: "out", scope: !7768, file: !1, line: 777, type: !4195)
!7819 = !DILocation(line: 777, column: 14, scope: !7768)
!7820 = !DILocation(line: 777, column: 47, scope: !7768)
!7821 = !DILocation(line: 777, column: 51, scope: !7768)
!7822 = !DILocation(line: 777, column: 57, scope: !7768)
!7823 = !DILocation(line: 777, column: 60, scope: !7768)
!7824 = !DILocation(line: 777, column: 66, scope: !7768)
!7825 = !DILocation(line: 777, column: 59, scope: !7768)
!7826 = !DILocation(line: 777, column: 69, scope: !7768)
!7827 = !DILocation(line: 777, column: 72, scope: !7768)
!7828 = !DILocation(line: 777, column: 78, scope: !7768)
!7829 = !DILocation(line: 777, column: 71, scope: !7768)
!7830 = !DILocation(line: 777, column: 81, scope: !7768)
!7831 = !DILocation(line: 777, column: 86, scope: !7768)
!7832 = !DILocation(line: 777, column: 94, scope: !7768)
!7833 = !DILocation(line: 777, column: 99, scope: !7768)
!7834 = !DILocation(line: 777, column: 20, scope: !7768)
!7835 = !DILocation(line: 778, column: 12, scope: !7768)
!7836 = !DILocation(line: 778, column: 9, scope: !7768)
!7837 = !DILocation(line: 779, column: 10, scope: !7768)
!7838 = !DILocation(line: 779, column: 7, scope: !7768)
!7839 = !DILocation(line: 780, column: 16, scope: !7768)
!7840 = !DILocation(line: 780, column: 4, scope: !7768)
!7841 = !DILocation(line: 780, column: 10, scope: !7768)
!7842 = !DILocation(line: 780, column: 13, scope: !7768)
!7843 = !DILocation(line: 781, column: 16, scope: !7768)
!7844 = !DILocation(line: 781, column: 4, scope: !7768)
!7845 = !DILocation(line: 781, column: 10, scope: !7768)
!7846 = !DILocation(line: 781, column: 13, scope: !7768)
!7847 = !DILocation(line: 782, column: 16, scope: !7768)
!7848 = !DILocation(line: 782, column: 4, scope: !7768)
!7849 = !DILocation(line: 782, column: 10, scope: !7768)
!7850 = !DILocation(line: 782, column: 13, scope: !7768)
!7851 = !DILocation(line: 783, column: 16, scope: !7768)
!7852 = !DILocation(line: 783, column: 22, scope: !7768)
!7853 = !DILocation(line: 783, column: 31, scope: !7768)
!7854 = !DILocation(line: 783, column: 4, scope: !7768)
!7855 = !DILocation(line: 783, column: 10, scope: !7768)
!7856 = !DILocation(line: 783, column: 13, scope: !7768)
!7857 = !DILocation(line: 784, column: 3, scope: !7768)
!7858 = !DILocation(line: 772, column: 23, scope: !7763)
!7859 = !DILocation(line: 772, column: 3, scope: !7763)
!7860 = distinct !{!7860, !7766, !7861}
!7861 = !DILocation(line: 784, column: 3, scope: !7759)
!7862 = !DILocation(line: 785, column: 2, scope: !7760)
!7863 = !DILocation(line: 771, column: 22, scope: !7754)
!7864 = !DILocation(line: 771, column: 2, scope: !7754)
!7865 = distinct !{!7865, !7757, !7866}
!7866 = !DILocation(line: 785, column: 2, scope: !7751)
!7867 = !DILocation(line: 786, column: 9, scope: !7645)
!7868 = !DILocation(line: 786, column: 6, scope: !7645)
!7869 = !DILocation(line: 787, column: 14, scope: !7645)
!7870 = !DILocation(line: 787, column: 2, scope: !7645)
!7871 = !DILocation(line: 787, column: 8, scope: !7645)
!7872 = !DILocation(line: 787, column: 11, scope: !7645)
!7873 = !DILocation(line: 788, column: 14, scope: !7645)
!7874 = !DILocation(line: 788, column: 2, scope: !7645)
!7875 = !DILocation(line: 788, column: 8, scope: !7645)
!7876 = !DILocation(line: 788, column: 11, scope: !7645)
!7877 = !DILocation(line: 789, column: 14, scope: !7645)
!7878 = !DILocation(line: 789, column: 2, scope: !7645)
!7879 = !DILocation(line: 789, column: 8, scope: !7645)
!7880 = !DILocation(line: 789, column: 11, scope: !7645)
!7881 = !DILocation(line: 791, column: 13, scope: !7645)
!7882 = !DILocation(line: 791, column: 19, scope: !7645)
!7883 = !DILocation(line: 791, column: 28, scope: !7645)
!7884 = !DILocation(line: 791, column: 34, scope: !7645)
!7885 = !DILocation(line: 791, column: 37, scope: !7645)
!7886 = !DILocation(line: 791, column: 36, scope: !7645)
!7887 = !DILocation(line: 791, column: 44, scope: !7645)
!7888 = !DILocation(line: 791, column: 51, scope: !7645)
!7889 = !DILocation(line: 791, column: 54, scope: !7645)
!7890 = !DILocation(line: 791, column: 53, scope: !7645)
!7891 = !DILocation(line: 791, column: 2, scope: !7645)
!7892 = !DILocation(line: 791, column: 8, scope: !7645)
!7893 = !DILocation(line: 791, column: 11, scope: !7645)
!7894 = !DILocation(line: 792, column: 1, scope: !7645)
!7895 = distinct !DISubprogram(name: "mul_v2_fl", scope: !4493, file: !4493, line: 380, type: !6292, scopeLine: 381, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1638)
!7896 = !DILocalVariable(name: "r", arg: 1, scope: !7895, file: !4493, line: 380, type: !52)
!7897 = !DILocation(line: 380, column: 30, scope: !7895)
!7898 = !DILocalVariable(name: "f", arg: 2, scope: !7895, file: !4493, line: 380, type: !26)
!7899 = !DILocation(line: 380, column: 42, scope: !7895)
!7900 = !DILocation(line: 382, column: 10, scope: !7895)
!7901 = !DILocation(line: 382, column: 2, scope: !7895)
!7902 = !DILocation(line: 382, column: 7, scope: !7895)
!7903 = !DILocation(line: 383, column: 10, scope: !7895)
!7904 = !DILocation(line: 383, column: 2, scope: !7895)
!7905 = !DILocation(line: 383, column: 7, scope: !7895)
!7906 = !DILocation(line: 384, column: 1, scope: !7895)
!7907 = distinct !DISubprogram(name: "len_v2", scope: !4493, file: !4493, line: 691, type: !7908, scopeLine: 692, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1638)
!7908 = !DISubroutineType(types: !7909)
!7909 = !{!26, !1621}
!7910 = !DILocalVariable(name: "v", arg: 1, scope: !7907, file: !4493, line: 691, type: !1621)
!7911 = !DILocation(line: 691, column: 34, scope: !7907)
!7912 = !DILocation(line: 693, column: 15, scope: !7907)
!7913 = !DILocation(line: 693, column: 22, scope: !7907)
!7914 = !DILocation(line: 693, column: 20, scope: !7907)
!7915 = !DILocation(line: 693, column: 29, scope: !7907)
!7916 = !DILocation(line: 693, column: 36, scope: !7907)
!7917 = !DILocation(line: 693, column: 34, scope: !7907)
!7918 = !DILocation(line: 693, column: 27, scope: !7907)
!7919 = !DILocation(line: 693, column: 9, scope: !7907)
!7920 = !DILocation(line: 693, column: 2, scope: !7907)
!7921 = distinct !DISubprogram(name: "iroundf", scope: !2796, file: !2796, line: 163, type: !7922, scopeLine: 164, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1638)
!7922 = !DISubroutineType(types: !7923)
!7923 = !{!25, !26}
!7924 = !DILocalVariable(name: "a", arg: 1, scope: !7921, file: !2796, line: 163, type: !26)
!7925 = !DILocation(line: 163, column: 27, scope: !7921)
!7926 = !DILocation(line: 165, column: 21, scope: !7921)
!7927 = !DILocation(line: 165, column: 23, scope: !7921)
!7928 = !DILocation(line: 165, column: 14, scope: !7921)
!7929 = !DILocation(line: 165, column: 9, scope: !7921)
!7930 = !DILocation(line: 165, column: 2, scope: !7921)
!7931 = distinct !DISubprogram(name: "alpha_clip_aniso", scope: !1, file: !1, line: 861, type: !7932, scopeLine: 862, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1638)
!7932 = !DISubroutineType(types: !7933)
!7933 = !{null, !34, !26, !26, !26, !26, !25, !1623}
!7934 = !DILocalVariable(name: "ibuf", arg: 1, scope: !7931, file: !1, line: 861, type: !34)
!7935 = !DILocation(line: 861, column: 37, scope: !7931)
!7936 = !DILocalVariable(name: "minx", arg: 2, scope: !7931, file: !1, line: 861, type: !26)
!7937 = !DILocation(line: 861, column: 49, scope: !7931)
!7938 = !DILocalVariable(name: "miny", arg: 3, scope: !7931, file: !1, line: 861, type: !26)
!7939 = !DILocation(line: 861, column: 61, scope: !7931)
!7940 = !DILocalVariable(name: "maxx", arg: 4, scope: !7931, file: !1, line: 861, type: !26)
!7941 = !DILocation(line: 861, column: 73, scope: !7931)
!7942 = !DILocalVariable(name: "maxy", arg: 5, scope: !7931, file: !1, line: 861, type: !26)
!7943 = !DILocation(line: 861, column: 85, scope: !7931)
!7944 = !DILocalVariable(name: "extflag", arg: 6, scope: !7931, file: !1, line: 861, type: !25)
!7945 = !DILocation(line: 861, column: 95, scope: !7931)
!7946 = !DILocalVariable(name: "texres", arg: 7, scope: !7931, file: !1, line: 861, type: !1623)
!7947 = !DILocation(line: 861, column: 115, scope: !7931)
!7948 = !DILocalVariable(name: "alphaclip", scope: !7931, file: !1, line: 863, type: !26)
!7949 = !DILocation(line: 863, column: 8, scope: !7931)
!7950 = !DILocalVariable(name: "rf", scope: !7931, file: !1, line: 864, type: !1122)
!7951 = !DILocation(line: 864, column: 7, scope: !7931)
!7952 = !DILocation(line: 869, column: 8, scope: !7953)
!7953 = distinct !DILexicalBlock(scope: !7931, file: !1, line: 869, column: 6)
!7954 = !DILocation(line: 869, column: 16, scope: !7953)
!7955 = !DILocation(line: 869, column: 28, scope: !7953)
!7956 = !DILocation(line: 869, column: 31, scope: !7953)
!7957 = !DILocation(line: 869, column: 39, scope: !7953)
!7958 = !DILocation(line: 869, column: 6, scope: !7931)
!7959 = !DILocation(line: 870, column: 13, scope: !7960)
!7960 = distinct !DILexicalBlock(scope: !7953, file: !1, line: 869, column: 53)
!7961 = !DILocation(line: 870, column: 19, scope: !7960)
!7962 = !DILocation(line: 870, column: 25, scope: !7960)
!7963 = !DILocation(line: 870, column: 18, scope: !7960)
!7964 = !DILocation(line: 870, column: 17, scope: !7960)
!7965 = !DILocation(line: 870, column: 6, scope: !7960)
!7966 = !DILocation(line: 870, column: 11, scope: !7960)
!7967 = !DILocation(line: 871, column: 13, scope: !7960)
!7968 = !DILocation(line: 871, column: 19, scope: !7960)
!7969 = !DILocation(line: 871, column: 25, scope: !7960)
!7970 = !DILocation(line: 871, column: 18, scope: !7960)
!7971 = !DILocation(line: 871, column: 17, scope: !7960)
!7972 = !DILocation(line: 871, column: 6, scope: !7960)
!7973 = !DILocation(line: 871, column: 11, scope: !7960)
!7974 = !DILocation(line: 872, column: 13, scope: !7960)
!7975 = !DILocation(line: 872, column: 19, scope: !7960)
!7976 = !DILocation(line: 872, column: 25, scope: !7960)
!7977 = !DILocation(line: 872, column: 18, scope: !7960)
!7978 = !DILocation(line: 872, column: 17, scope: !7960)
!7979 = !DILocation(line: 872, column: 6, scope: !7960)
!7980 = !DILocation(line: 872, column: 11, scope: !7960)
!7981 = !DILocation(line: 873, column: 13, scope: !7960)
!7982 = !DILocation(line: 873, column: 19, scope: !7960)
!7983 = !DILocation(line: 873, column: 25, scope: !7960)
!7984 = !DILocation(line: 873, column: 18, scope: !7960)
!7985 = !DILocation(line: 873, column: 17, scope: !7960)
!7986 = !DILocation(line: 873, column: 6, scope: !7960)
!7987 = !DILocation(line: 873, column: 11, scope: !7960)
!7988 = !DILocation(line: 875, column: 45, scope: !7960)
!7989 = !DILocation(line: 875, column: 51, scope: !7960)
!7990 = !DILocation(line: 875, column: 37, scope: !7960)
!7991 = !DILocation(line: 875, column: 16, scope: !7960)
!7992 = !DILocation(line: 875, column: 14, scope: !7960)
!7993 = !DILocation(line: 876, column: 45, scope: !7960)
!7994 = !DILocation(line: 876, column: 51, scope: !7960)
!7995 = !DILocation(line: 876, column: 37, scope: !7960)
!7996 = !DILocation(line: 876, column: 16, scope: !7960)
!7997 = !DILocation(line: 876, column: 13, scope: !7960)
!7998 = !DILocation(line: 877, column: 23, scope: !7960)
!7999 = !DILocation(line: 877, column: 16, scope: !7960)
!8000 = !DILocation(line: 877, column: 14, scope: !7960)
!8001 = !DILocation(line: 879, column: 7, scope: !8002)
!8002 = distinct !DILexicalBlock(scope: !7960, file: !1, line: 879, column: 7)
!8003 = !DILocation(line: 879, column: 16, scope: !8002)
!8004 = !DILocation(line: 879, column: 7, scope: !7960)
!8005 = !DILocation(line: 881, column: 17, scope: !8006)
!8006 = distinct !DILexicalBlock(scope: !8002, file: !1, line: 879, column: 24)
!8007 = !DILocation(line: 881, column: 4, scope: !8006)
!8008 = !DILocation(line: 881, column: 12, scope: !8006)
!8009 = !DILocation(line: 881, column: 14, scope: !8006)
!8010 = !DILocation(line: 882, column: 17, scope: !8006)
!8011 = !DILocation(line: 882, column: 4, scope: !8006)
!8012 = !DILocation(line: 882, column: 12, scope: !8006)
!8013 = !DILocation(line: 882, column: 14, scope: !8006)
!8014 = !DILocation(line: 883, column: 17, scope: !8006)
!8015 = !DILocation(line: 883, column: 4, scope: !8006)
!8016 = !DILocation(line: 883, column: 12, scope: !8006)
!8017 = !DILocation(line: 883, column: 14, scope: !8006)
!8018 = !DILocation(line: 884, column: 17, scope: !8006)
!8019 = !DILocation(line: 884, column: 4, scope: !8006)
!8020 = !DILocation(line: 884, column: 12, scope: !8006)
!8021 = !DILocation(line: 884, column: 14, scope: !8006)
!8022 = !DILocation(line: 885, column: 3, scope: !8006)
!8023 = !DILocation(line: 886, column: 2, scope: !7960)
!8024 = !DILocation(line: 887, column: 1, scope: !7931)
!8025 = distinct !DISubprogram(name: "ibuf_get_color_clip_bilerp", scope: !1, file: !1, line: 736, type: !8026, scopeLine: 737, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1638)
!8026 = !DISubroutineType(types: !8027)
!8027 = !{!25, !52, !34, !26, !26, !25, !25}
!8028 = !DILocalVariable(name: "col", arg: 1, scope: !8025, file: !1, line: 736, type: !52)
!8029 = !DILocation(line: 736, column: 45, scope: !8025)
!8030 = !DILocalVariable(name: "ibuf", arg: 2, scope: !8025, file: !1, line: 736, type: !34)
!8031 = !DILocation(line: 736, column: 60, scope: !8025)
!8032 = !DILocalVariable(name: "u", arg: 3, scope: !8025, file: !1, line: 736, type: !26)
!8033 = !DILocation(line: 736, column: 72, scope: !8025)
!8034 = !DILocalVariable(name: "v", arg: 4, scope: !8025, file: !1, line: 736, type: !26)
!8035 = !DILocation(line: 736, column: 81, scope: !8025)
!8036 = !DILocalVariable(name: "intpol", arg: 5, scope: !8025, file: !1, line: 736, type: !25)
!8037 = !DILocation(line: 736, column: 88, scope: !8025)
!8038 = !DILocalVariable(name: "extflag", arg: 6, scope: !8025, file: !1, line: 736, type: !25)
!8039 = !DILocation(line: 736, column: 100, scope: !8025)
!8040 = !DILocation(line: 738, column: 6, scope: !8041)
!8041 = distinct !DILexicalBlock(scope: !8025, file: !1, line: 738, column: 6)
!8042 = !DILocation(line: 738, column: 6, scope: !8025)
!8043 = !DILocalVariable(name: "c00", scope: !8044, file: !1, line: 739, type: !411)
!8044 = distinct !DILexicalBlock(scope: !8041, file: !1, line: 738, column: 14)
!8045 = !DILocation(line: 739, column: 9, scope: !8044)
!8046 = !DILocalVariable(name: "c01", scope: !8044, file: !1, line: 739, type: !411)
!8047 = !DILocation(line: 739, column: 17, scope: !8044)
!8048 = !DILocalVariable(name: "c10", scope: !8044, file: !1, line: 739, type: !411)
!8049 = !DILocation(line: 739, column: 25, scope: !8044)
!8050 = !DILocalVariable(name: "c11", scope: !8044, file: !1, line: 739, type: !411)
!8051 = !DILocation(line: 739, column: 33, scope: !8044)
!8052 = !DILocalVariable(name: "ufl", scope: !8044, file: !1, line: 740, type: !1622)
!8053 = !DILocation(line: 740, column: 15, scope: !8044)
!8054 = !DILocation(line: 740, column: 30, scope: !8044)
!8055 = !DILocation(line: 740, column: 21, scope: !8044)
!8056 = !DILocalVariable(name: "vfl", scope: !8044, file: !1, line: 740, type: !1622)
!8057 = !DILocation(line: 740, column: 40, scope: !8044)
!8058 = !DILocation(line: 740, column: 55, scope: !8044)
!8059 = !DILocation(line: 740, column: 46, scope: !8044)
!8060 = !DILocalVariable(name: "uf", scope: !8044, file: !1, line: 741, type: !1622)
!8061 = !DILocation(line: 741, column: 15, scope: !8044)
!8062 = !DILocation(line: 741, column: 20, scope: !8044)
!8063 = !DILocation(line: 741, column: 24, scope: !8044)
!8064 = !DILocation(line: 741, column: 22, scope: !8044)
!8065 = !DILocalVariable(name: "vf", scope: !8044, file: !1, line: 741, type: !1622)
!8066 = !DILocation(line: 741, column: 29, scope: !8044)
!8067 = !DILocation(line: 741, column: 34, scope: !8044)
!8068 = !DILocation(line: 741, column: 38, scope: !8044)
!8069 = !DILocation(line: 741, column: 36, scope: !8044)
!8070 = !DILocalVariable(name: "w00", scope: !8044, file: !1, line: 742, type: !1622)
!8071 = !DILocation(line: 742, column: 15, scope: !8044)
!8072 = !DILocation(line: 742, column: 24, scope: !8044)
!8073 = !DILocation(line: 742, column: 23, scope: !8044)
!8074 = !DILocation(line: 742, column: 33, scope: !8044)
!8075 = !DILocation(line: 742, column: 32, scope: !8044)
!8076 = !DILocation(line: 742, column: 27, scope: !8044)
!8077 = !DILocalVariable(name: "w10", scope: !8044, file: !1, line: 742, type: !1622)
!8078 = !DILocation(line: 742, column: 38, scope: !8044)
!8079 = !DILocation(line: 742, column: 42, scope: !8044)
!8080 = !DILocation(line: 742, column: 50, scope: !8044)
!8081 = !DILocation(line: 742, column: 49, scope: !8044)
!8082 = !DILocation(line: 742, column: 44, scope: !8044)
!8083 = !DILocalVariable(name: "w01", scope: !8044, file: !1, line: 742, type: !1622)
!8084 = !DILocation(line: 742, column: 55, scope: !8044)
!8085 = !DILocation(line: 742, column: 64, scope: !8044)
!8086 = !DILocation(line: 742, column: 63, scope: !8044)
!8087 = !DILocation(line: 742, column: 68, scope: !8044)
!8088 = !DILocation(line: 742, column: 67, scope: !8044)
!8089 = !DILocalVariable(name: "w11", scope: !8044, file: !1, line: 742, type: !1622)
!8090 = !DILocation(line: 742, column: 72, scope: !8044)
!8091 = !DILocation(line: 742, column: 76, scope: !8044)
!8092 = !DILocation(line: 742, column: 79, scope: !8044)
!8093 = !DILocation(line: 742, column: 78, scope: !8044)
!8094 = !DILocalVariable(name: "x1", scope: !8044, file: !1, line: 743, type: !4195)
!8095 = !DILocation(line: 743, column: 13, scope: !8044)
!8096 = !DILocation(line: 743, column: 23, scope: !8044)
!8097 = !DILocation(line: 743, column: 18, scope: !8044)
!8098 = !DILocalVariable(name: "y1", scope: !8044, file: !1, line: 743, type: !4195)
!8099 = !DILocation(line: 743, column: 28, scope: !8044)
!8100 = !DILocation(line: 743, column: 38, scope: !8044)
!8101 = !DILocation(line: 743, column: 33, scope: !8044)
!8102 = !DILocalVariable(name: "x2", scope: !8044, file: !1, line: 743, type: !4195)
!8103 = !DILocation(line: 743, column: 43, scope: !8044)
!8104 = !DILocation(line: 743, column: 48, scope: !8044)
!8105 = !DILocation(line: 743, column: 51, scope: !8044)
!8106 = !DILocalVariable(name: "y2", scope: !8044, file: !1, line: 743, type: !4195)
!8107 = !DILocation(line: 743, column: 56, scope: !8044)
!8108 = !DILocation(line: 743, column: 61, scope: !8044)
!8109 = !DILocation(line: 743, column: 64, scope: !8044)
!8110 = !DILocalVariable(name: "clip", scope: !8044, file: !1, line: 744, type: !25)
!8111 = !DILocation(line: 744, column: 7, scope: !8044)
!8112 = !DILocation(line: 744, column: 34, scope: !8044)
!8113 = !DILocation(line: 744, column: 39, scope: !8044)
!8114 = !DILocation(line: 744, column: 45, scope: !8044)
!8115 = !DILocation(line: 744, column: 49, scope: !8044)
!8116 = !DILocation(line: 744, column: 53, scope: !8044)
!8117 = !DILocation(line: 744, column: 14, scope: !8044)
!8118 = !DILocation(line: 745, column: 31, scope: !8044)
!8119 = !DILocation(line: 745, column: 36, scope: !8044)
!8120 = !DILocation(line: 745, column: 42, scope: !8044)
!8121 = !DILocation(line: 745, column: 46, scope: !8044)
!8122 = !DILocation(line: 745, column: 50, scope: !8044)
!8123 = !DILocation(line: 745, column: 11, scope: !8044)
!8124 = !DILocation(line: 745, column: 8, scope: !8044)
!8125 = !DILocation(line: 746, column: 31, scope: !8044)
!8126 = !DILocation(line: 746, column: 36, scope: !8044)
!8127 = !DILocation(line: 746, column: 42, scope: !8044)
!8128 = !DILocation(line: 746, column: 46, scope: !8044)
!8129 = !DILocation(line: 746, column: 50, scope: !8044)
!8130 = !DILocation(line: 746, column: 11, scope: !8044)
!8131 = !DILocation(line: 746, column: 8, scope: !8044)
!8132 = !DILocation(line: 747, column: 31, scope: !8044)
!8133 = !DILocation(line: 747, column: 36, scope: !8044)
!8134 = !DILocation(line: 747, column: 42, scope: !8044)
!8135 = !DILocation(line: 747, column: 46, scope: !8044)
!8136 = !DILocation(line: 747, column: 50, scope: !8044)
!8137 = !DILocation(line: 747, column: 11, scope: !8044)
!8138 = !DILocation(line: 747, column: 8, scope: !8044)
!8139 = !DILocation(line: 748, column: 12, scope: !8044)
!8140 = !DILocation(line: 748, column: 16, scope: !8044)
!8141 = !DILocation(line: 748, column: 15, scope: !8044)
!8142 = !DILocation(line: 748, column: 25, scope: !8044)
!8143 = !DILocation(line: 748, column: 29, scope: !8044)
!8144 = !DILocation(line: 748, column: 28, scope: !8044)
!8145 = !DILocation(line: 748, column: 23, scope: !8044)
!8146 = !DILocation(line: 748, column: 38, scope: !8044)
!8147 = !DILocation(line: 748, column: 42, scope: !8044)
!8148 = !DILocation(line: 748, column: 41, scope: !8044)
!8149 = !DILocation(line: 748, column: 36, scope: !8044)
!8150 = !DILocation(line: 748, column: 51, scope: !8044)
!8151 = !DILocation(line: 748, column: 55, scope: !8044)
!8152 = !DILocation(line: 748, column: 54, scope: !8044)
!8153 = !DILocation(line: 748, column: 49, scope: !8044)
!8154 = !DILocation(line: 748, column: 3, scope: !8044)
!8155 = !DILocation(line: 748, column: 10, scope: !8044)
!8156 = !DILocation(line: 749, column: 12, scope: !8044)
!8157 = !DILocation(line: 749, column: 16, scope: !8044)
!8158 = !DILocation(line: 749, column: 15, scope: !8044)
!8159 = !DILocation(line: 749, column: 25, scope: !8044)
!8160 = !DILocation(line: 749, column: 29, scope: !8044)
!8161 = !DILocation(line: 749, column: 28, scope: !8044)
!8162 = !DILocation(line: 749, column: 23, scope: !8044)
!8163 = !DILocation(line: 749, column: 38, scope: !8044)
!8164 = !DILocation(line: 749, column: 42, scope: !8044)
!8165 = !DILocation(line: 749, column: 41, scope: !8044)
!8166 = !DILocation(line: 749, column: 36, scope: !8044)
!8167 = !DILocation(line: 749, column: 51, scope: !8044)
!8168 = !DILocation(line: 749, column: 55, scope: !8044)
!8169 = !DILocation(line: 749, column: 54, scope: !8044)
!8170 = !DILocation(line: 749, column: 49, scope: !8044)
!8171 = !DILocation(line: 749, column: 3, scope: !8044)
!8172 = !DILocation(line: 749, column: 10, scope: !8044)
!8173 = !DILocation(line: 750, column: 12, scope: !8044)
!8174 = !DILocation(line: 750, column: 16, scope: !8044)
!8175 = !DILocation(line: 750, column: 15, scope: !8044)
!8176 = !DILocation(line: 750, column: 25, scope: !8044)
!8177 = !DILocation(line: 750, column: 29, scope: !8044)
!8178 = !DILocation(line: 750, column: 28, scope: !8044)
!8179 = !DILocation(line: 750, column: 23, scope: !8044)
!8180 = !DILocation(line: 750, column: 38, scope: !8044)
!8181 = !DILocation(line: 750, column: 42, scope: !8044)
!8182 = !DILocation(line: 750, column: 41, scope: !8044)
!8183 = !DILocation(line: 750, column: 36, scope: !8044)
!8184 = !DILocation(line: 750, column: 51, scope: !8044)
!8185 = !DILocation(line: 750, column: 55, scope: !8044)
!8186 = !DILocation(line: 750, column: 54, scope: !8044)
!8187 = !DILocation(line: 750, column: 49, scope: !8044)
!8188 = !DILocation(line: 750, column: 3, scope: !8044)
!8189 = !DILocation(line: 750, column: 10, scope: !8044)
!8190 = !DILocation(line: 751, column: 12, scope: !8044)
!8191 = !DILocation(line: 751, column: 25, scope: !8044)
!8192 = !DILocation(line: 751, column: 29, scope: !8044)
!8193 = !DILocation(line: 751, column: 28, scope: !8044)
!8194 = !DILocation(line: 751, column: 38, scope: !8044)
!8195 = !DILocation(line: 751, column: 42, scope: !8044)
!8196 = !DILocation(line: 751, column: 41, scope: !8044)
!8197 = !DILocation(line: 751, column: 36, scope: !8044)
!8198 = !DILocation(line: 751, column: 51, scope: !8044)
!8199 = !DILocation(line: 751, column: 55, scope: !8044)
!8200 = !DILocation(line: 751, column: 54, scope: !8044)
!8201 = !DILocation(line: 751, column: 49, scope: !8044)
!8202 = !DILocation(line: 751, column: 64, scope: !8044)
!8203 = !DILocation(line: 751, column: 68, scope: !8044)
!8204 = !DILocation(line: 751, column: 67, scope: !8044)
!8205 = !DILocation(line: 751, column: 62, scope: !8044)
!8206 = !DILocation(line: 751, column: 3, scope: !8044)
!8207 = !DILocation(line: 751, column: 10, scope: !8044)
!8208 = !DILocation(line: 752, column: 10, scope: !8044)
!8209 = !DILocation(line: 752, column: 3, scope: !8044)
!8210 = !DILocation(line: 754, column: 29, scope: !8025)
!8211 = !DILocation(line: 754, column: 34, scope: !8025)
!8212 = !DILocation(line: 754, column: 45, scope: !8025)
!8213 = !DILocation(line: 754, column: 40, scope: !8025)
!8214 = !DILocation(line: 754, column: 53, scope: !8025)
!8215 = !DILocation(line: 754, column: 48, scope: !8025)
!8216 = !DILocation(line: 754, column: 56, scope: !8025)
!8217 = !DILocation(line: 754, column: 9, scope: !8025)
!8218 = !DILocation(line: 754, column: 2, scope: !8025)
!8219 = !DILocation(line: 755, column: 1, scope: !8025)
!8220 = distinct !DISubprogram(name: "ibuf_get_color_clip", scope: !1, file: !1, line: 676, type: !8221, scopeLine: 677, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1638)
!8221 = !DISubroutineType(types: !8222)
!8222 = !{!25, !52, !34, !25, !25, !25}
!8223 = !DILocalVariable(name: "col", arg: 1, scope: !8220, file: !1, line: 676, type: !52)
!8224 = !DILocation(line: 676, column: 38, scope: !8220)
!8225 = !DILocalVariable(name: "ibuf", arg: 2, scope: !8220, file: !1, line: 676, type: !34)
!8226 = !DILocation(line: 676, column: 53, scope: !8220)
!8227 = !DILocalVariable(name: "x", arg: 3, scope: !8220, file: !1, line: 676, type: !25)
!8228 = !DILocation(line: 676, column: 63, scope: !8220)
!8229 = !DILocalVariable(name: "y", arg: 4, scope: !8220, file: !1, line: 676, type: !25)
!8230 = !DILocation(line: 676, column: 70, scope: !8220)
!8231 = !DILocalVariable(name: "extflag", arg: 5, scope: !8220, file: !1, line: 676, type: !25)
!8232 = !DILocation(line: 676, column: 77, scope: !8220)
!8233 = !DILocalVariable(name: "clip", scope: !8220, file: !1, line: 678, type: !25)
!8234 = !DILocation(line: 678, column: 6, scope: !8220)
!8235 = !DILocation(line: 679, column: 10, scope: !8220)
!8236 = !DILocation(line: 679, column: 2, scope: !8220)
!8237 = !DILocation(line: 681, column: 11, scope: !8238)
!8238 = distinct !DILexicalBlock(scope: !8220, file: !1, line: 679, column: 19)
!8239 = !DILocation(line: 681, column: 17, scope: !8238)
!8240 = !DILocation(line: 681, column: 10, scope: !8238)
!8241 = !DILocation(line: 681, column: 6, scope: !8238)
!8242 = !DILocation(line: 682, column: 9, scope: !8238)
!8243 = !DILocation(line: 682, column: 11, scope: !8238)
!8244 = !DILocation(line: 682, column: 19, scope: !8238)
!8245 = !DILocation(line: 682, column: 25, scope: !8238)
!8246 = !DILocation(line: 682, column: 18, scope: !8238)
!8247 = !DILocation(line: 682, column: 6, scope: !8238)
!8248 = !DILocation(line: 683, column: 8, scope: !8238)
!8249 = !DILocation(line: 683, column: 13, scope: !8238)
!8250 = !DILocation(line: 683, column: 19, scope: !8238)
!8251 = !DILocation(line: 683, column: 10, scope: !8238)
!8252 = !DILocation(line: 683, column: 25, scope: !8238)
!8253 = !DILocation(line: 683, column: 31, scope: !8238)
!8254 = !DILocation(line: 683, column: 24, scope: !8238)
!8255 = !DILocation(line: 683, column: 35, scope: !8238)
!8256 = !DILocation(line: 683, column: 33, scope: !8238)
!8257 = !DILocation(line: 683, column: 37, scope: !8238)
!8258 = !DILocation(line: 683, column: 43, scope: !8238)
!8259 = !DILocation(line: 683, column: 6, scope: !8238)
!8260 = !DILocation(line: 684, column: 9, scope: !8238)
!8261 = !DILocation(line: 684, column: 15, scope: !8238)
!8262 = !DILocation(line: 684, column: 6, scope: !8238)
!8263 = !DILocation(line: 685, column: 9, scope: !8238)
!8264 = !DILocation(line: 685, column: 11, scope: !8238)
!8265 = !DILocation(line: 685, column: 17, scope: !8238)
!8266 = !DILocation(line: 685, column: 23, scope: !8238)
!8267 = !DILocation(line: 685, column: 6, scope: !8238)
!8268 = !DILocation(line: 686, column: 4, scope: !8238)
!8269 = !DILocation(line: 688, column: 9, scope: !8238)
!8270 = !DILocation(line: 688, column: 15, scope: !8238)
!8271 = !DILocation(line: 688, column: 6, scope: !8238)
!8272 = !DILocation(line: 689, column: 9, scope: !8238)
!8273 = !DILocation(line: 689, column: 11, scope: !8238)
!8274 = !DILocation(line: 689, column: 17, scope: !8238)
!8275 = !DILocation(line: 689, column: 23, scope: !8238)
!8276 = !DILocation(line: 689, column: 6, scope: !8238)
!8277 = !DILocation(line: 690, column: 11, scope: !8238)
!8278 = !DILocation(line: 690, column: 17, scope: !8238)
!8279 = !DILocation(line: 690, column: 10, scope: !8238)
!8280 = !DILocation(line: 690, column: 6, scope: !8238)
!8281 = !DILocation(line: 691, column: 9, scope: !8238)
!8282 = !DILocation(line: 691, column: 11, scope: !8238)
!8283 = !DILocation(line: 691, column: 19, scope: !8238)
!8284 = !DILocation(line: 691, column: 25, scope: !8238)
!8285 = !DILocation(line: 691, column: 18, scope: !8238)
!8286 = !DILocation(line: 691, column: 6, scope: !8238)
!8287 = !DILocation(line: 692, column: 8, scope: !8238)
!8288 = !DILocation(line: 692, column: 13, scope: !8238)
!8289 = !DILocation(line: 692, column: 19, scope: !8238)
!8290 = !DILocation(line: 692, column: 10, scope: !8238)
!8291 = !DILocation(line: 692, column: 25, scope: !8238)
!8292 = !DILocation(line: 692, column: 31, scope: !8238)
!8293 = !DILocation(line: 692, column: 24, scope: !8238)
!8294 = !DILocation(line: 692, column: 35, scope: !8238)
!8295 = !DILocation(line: 692, column: 33, scope: !8238)
!8296 = !DILocation(line: 692, column: 37, scope: !8238)
!8297 = !DILocation(line: 692, column: 43, scope: !8238)
!8298 = !DILocation(line: 692, column: 6, scope: !8238)
!8299 = !DILocation(line: 693, column: 4, scope: !8238)
!8300 = !DILocation(line: 695, column: 9, scope: !8238)
!8301 = !DILocation(line: 695, column: 11, scope: !8238)
!8302 = !DILocation(line: 695, column: 8, scope: !8238)
!8303 = !DILocation(line: 695, column: 24, scope: !8238)
!8304 = !DILocation(line: 695, column: 29, scope: !8238)
!8305 = !DILocation(line: 695, column: 35, scope: !8238)
!8306 = !DILocation(line: 695, column: 26, scope: !8238)
!8307 = !DILocation(line: 695, column: 23, scope: !8238)
!8308 = !DILocation(line: 695, column: 41, scope: !8238)
!8309 = !DILocation(line: 695, column: 47, scope: !8238)
!8310 = !DILocation(line: 695, column: 49, scope: !8238)
!8311 = !DILocation(line: 695, column: 56, scope: !8238)
!8312 = !DILocation(line: 695, column: 6, scope: !8238)
!8313 = !DILocation(line: 696, column: 9, scope: !8238)
!8314 = !DILocation(line: 696, column: 11, scope: !8238)
!8315 = !DILocation(line: 696, column: 8, scope: !8238)
!8316 = !DILocation(line: 696, column: 24, scope: !8238)
!8317 = !DILocation(line: 696, column: 29, scope: !8238)
!8318 = !DILocation(line: 696, column: 35, scope: !8238)
!8319 = !DILocation(line: 696, column: 26, scope: !8238)
!8320 = !DILocation(line: 696, column: 23, scope: !8238)
!8321 = !DILocation(line: 696, column: 41, scope: !8238)
!8322 = !DILocation(line: 696, column: 47, scope: !8238)
!8323 = !DILocation(line: 696, column: 49, scope: !8238)
!8324 = !DILocation(line: 696, column: 56, scope: !8238)
!8325 = !DILocation(line: 696, column: 6, scope: !8238)
!8326 = !DILocation(line: 697, column: 4, scope: !8238)
!8327 = !DILocation(line: 699, column: 9, scope: !8238)
!8328 = !DILocation(line: 699, column: 15, scope: !8238)
!8329 = !DILocation(line: 699, column: 6, scope: !8238)
!8330 = !DILocation(line: 700, column: 10, scope: !8238)
!8331 = !DILocation(line: 700, column: 12, scope: !8238)
!8332 = !DILocation(line: 700, column: 9, scope: !8238)
!8333 = !DILocation(line: 700, column: 19, scope: !8238)
!8334 = !DILocation(line: 700, column: 25, scope: !8238)
!8335 = !DILocation(line: 700, column: 6, scope: !8238)
!8336 = !DILocation(line: 701, column: 9, scope: !8238)
!8337 = !DILocation(line: 701, column: 15, scope: !8238)
!8338 = !DILocation(line: 701, column: 6, scope: !8238)
!8339 = !DILocation(line: 702, column: 10, scope: !8238)
!8340 = !DILocation(line: 702, column: 12, scope: !8238)
!8341 = !DILocation(line: 702, column: 9, scope: !8238)
!8342 = !DILocation(line: 702, column: 19, scope: !8238)
!8343 = !DILocation(line: 702, column: 25, scope: !8238)
!8344 = !DILocation(line: 702, column: 6, scope: !8238)
!8345 = !DILocation(line: 703, column: 4, scope: !8238)
!8346 = !DILocation(line: 706, column: 8, scope: !8347)
!8347 = distinct !DILexicalBlock(scope: !8348, file: !1, line: 706, column: 8)
!8348 = distinct !DILexicalBlock(scope: !8238, file: !1, line: 705, column: 3)
!8349 = !DILocation(line: 706, column: 10, scope: !8347)
!8350 = !DILocation(line: 706, column: 8, scope: !8348)
!8351 = !DILocation(line: 706, column: 19, scope: !8352)
!8352 = distinct !DILexicalBlock(scope: !8347, file: !1, line: 706, column: 15)
!8353 = !DILocation(line: 706, column: 25, scope: !8352)
!8354 = !DILocation(line: 707, column: 8, scope: !8355)
!8355 = distinct !DILexicalBlock(scope: !8348, file: !1, line: 707, column: 8)
!8356 = !DILocation(line: 707, column: 13, scope: !8355)
!8357 = !DILocation(line: 707, column: 19, scope: !8355)
!8358 = !DILocation(line: 707, column: 10, scope: !8355)
!8359 = !DILocation(line: 707, column: 8, scope: !8348)
!8360 = !DILocation(line: 707, column: 28, scope: !8361)
!8361 = distinct !DILexicalBlock(scope: !8355, file: !1, line: 707, column: 22)
!8362 = !DILocation(line: 707, column: 34, scope: !8361)
!8363 = !DILocation(line: 707, column: 36, scope: !8361)
!8364 = !DILocation(line: 707, column: 26, scope: !8361)
!8365 = !DILocation(line: 707, column: 41, scope: !8361)
!8366 = !DILocation(line: 708, column: 8, scope: !8367)
!8367 = distinct !DILexicalBlock(scope: !8348, file: !1, line: 708, column: 8)
!8368 = !DILocation(line: 708, column: 10, scope: !8367)
!8369 = !DILocation(line: 708, column: 8, scope: !8348)
!8370 = !DILocation(line: 708, column: 19, scope: !8371)
!8371 = distinct !DILexicalBlock(scope: !8367, file: !1, line: 708, column: 15)
!8372 = !DILocation(line: 708, column: 24, scope: !8371)
!8373 = !DILocation(line: 709, column: 8, scope: !8374)
!8374 = distinct !DILexicalBlock(scope: !8348, file: !1, line: 709, column: 8)
!8375 = !DILocation(line: 709, column: 13, scope: !8374)
!8376 = !DILocation(line: 709, column: 19, scope: !8374)
!8377 = !DILocation(line: 709, column: 10, scope: !8374)
!8378 = !DILocation(line: 709, column: 8, scope: !8348)
!8379 = !DILocation(line: 709, column: 28, scope: !8380)
!8380 = distinct !DILexicalBlock(scope: !8374, file: !1, line: 709, column: 22)
!8381 = !DILocation(line: 709, column: 34, scope: !8380)
!8382 = !DILocation(line: 709, column: 36, scope: !8380)
!8383 = !DILocation(line: 709, column: 26, scope: !8380)
!8384 = !DILocation(line: 709, column: 41, scope: !8380)
!8385 = !DILocation(line: 711, column: 2, scope: !8238)
!8386 = !DILocation(line: 713, column: 6, scope: !8387)
!8387 = distinct !DILexicalBlock(scope: !8220, file: !1, line: 713, column: 6)
!8388 = !DILocation(line: 713, column: 12, scope: !8387)
!8389 = !DILocation(line: 713, column: 6, scope: !8220)
!8390 = !DILocalVariable(name: "fp", scope: !8391, file: !1, line: 714, type: !1621)
!8391 = distinct !DILexicalBlock(scope: !8387, file: !1, line: 713, column: 24)
!8392 = !DILocation(line: 714, column: 16, scope: !8391)
!8393 = !DILocation(line: 714, column: 21, scope: !8391)
!8394 = !DILocation(line: 714, column: 27, scope: !8391)
!8395 = !DILocation(line: 714, column: 41, scope: !8391)
!8396 = !DILocation(line: 714, column: 45, scope: !8391)
!8397 = !DILocation(line: 714, column: 47, scope: !8391)
!8398 = !DILocation(line: 714, column: 53, scope: !8391)
!8399 = !DILocation(line: 714, column: 46, scope: !8391)
!8400 = !DILocation(line: 714, column: 43, scope: !8391)
!8401 = !DILocation(line: 714, column: 56, scope: !8391)
!8402 = !DILocation(line: 714, column: 62, scope: !8391)
!8403 = !DILocation(line: 714, column: 55, scope: !8391)
!8404 = !DILocation(line: 714, column: 38, scope: !8391)
!8405 = !DILocation(line: 715, column: 7, scope: !8406)
!8406 = distinct !DILexicalBlock(scope: !8391, file: !1, line: 715, column: 7)
!8407 = !DILocation(line: 715, column: 13, scope: !8406)
!8408 = !DILocation(line: 715, column: 22, scope: !8406)
!8409 = !DILocation(line: 715, column: 7, scope: !8391)
!8410 = !DILocation(line: 716, column: 41, scope: !8406)
!8411 = !DILocation(line: 716, column: 40, scope: !8406)
!8412 = !DILocation(line: 716, column: 31, scope: !8406)
!8413 = !DILocation(line: 716, column: 38, scope: !8406)
!8414 = !DILocation(line: 716, column: 22, scope: !8406)
!8415 = !DILocation(line: 716, column: 29, scope: !8406)
!8416 = !DILocation(line: 716, column: 13, scope: !8406)
!8417 = !DILocation(line: 716, column: 20, scope: !8406)
!8418 = !DILocation(line: 716, column: 4, scope: !8406)
!8419 = !DILocation(line: 716, column: 11, scope: !8406)
!8420 = !DILocation(line: 718, column: 13, scope: !8421)
!8421 = distinct !DILexicalBlock(scope: !8406, file: !1, line: 717, column: 8)
!8422 = !DILocation(line: 718, column: 4, scope: !8421)
!8423 = !DILocation(line: 718, column: 11, scope: !8421)
!8424 = !DILocation(line: 719, column: 13, scope: !8421)
!8425 = !DILocation(line: 719, column: 4, scope: !8421)
!8426 = !DILocation(line: 719, column: 11, scope: !8421)
!8427 = !DILocation(line: 720, column: 13, scope: !8421)
!8428 = !DILocation(line: 720, column: 4, scope: !8421)
!8429 = !DILocation(line: 720, column: 11, scope: !8421)
!8430 = !DILocation(line: 721, column: 13, scope: !8421)
!8431 = !DILocation(line: 721, column: 27, scope: !8421)
!8432 = !DILocation(line: 721, column: 33, scope: !8421)
!8433 = !DILocation(line: 721, column: 42, scope: !8421)
!8434 = !DILocation(line: 721, column: 49, scope: !8421)
!8435 = !DILocation(line: 721, column: 4, scope: !8421)
!8436 = !DILocation(line: 721, column: 11, scope: !8421)
!8437 = !DILocation(line: 723, column: 2, scope: !8391)
!8438 = !DILocalVariable(name: "rect", scope: !8439, file: !1, line: 725, type: !2757)
!8439 = distinct !DILexicalBlock(scope: !8387, file: !1, line: 724, column: 7)
!8440 = !DILocation(line: 725, column: 15, scope: !8439)
!8441 = !DILocation(line: 725, column: 31, scope: !8439)
!8442 = !DILocation(line: 725, column: 37, scope: !8439)
!8443 = !DILocation(line: 725, column: 44, scope: !8439)
!8444 = !DILocation(line: 725, column: 42, scope: !8439)
!8445 = !DILocation(line: 725, column: 48, scope: !8439)
!8446 = !DILocation(line: 725, column: 50, scope: !8439)
!8447 = !DILocation(line: 725, column: 56, scope: !8439)
!8448 = !DILocation(line: 725, column: 49, scope: !8439)
!8449 = !DILocation(line: 725, column: 46, scope: !8439)
!8450 = !DILocation(line: 725, column: 22, scope: !8439)
!8451 = !DILocalVariable(name: "inv_alpha_fac", scope: !8439, file: !1, line: 726, type: !26)
!8452 = !DILocation(line: 726, column: 9, scope: !8439)
!8453 = !DILocation(line: 726, column: 43, scope: !8439)
!8454 = !DILocation(line: 726, column: 41, scope: !8439)
!8455 = !DILocation(line: 726, column: 51, scope: !8439)
!8456 = !DILocation(line: 727, column: 12, scope: !8439)
!8457 = !DILocation(line: 727, column: 22, scope: !8439)
!8458 = !DILocation(line: 727, column: 20, scope: !8439)
!8459 = !DILocation(line: 727, column: 3, scope: !8439)
!8460 = !DILocation(line: 727, column: 10, scope: !8439)
!8461 = !DILocation(line: 728, column: 12, scope: !8439)
!8462 = !DILocation(line: 728, column: 22, scope: !8439)
!8463 = !DILocation(line: 728, column: 20, scope: !8439)
!8464 = !DILocation(line: 728, column: 3, scope: !8439)
!8465 = !DILocation(line: 728, column: 10, scope: !8439)
!8466 = !DILocation(line: 729, column: 12, scope: !8439)
!8467 = !DILocation(line: 729, column: 22, scope: !8439)
!8468 = !DILocation(line: 729, column: 20, scope: !8439)
!8469 = !DILocation(line: 729, column: 3, scope: !8439)
!8470 = !DILocation(line: 729, column: 10, scope: !8439)
!8471 = !DILocation(line: 730, column: 12, scope: !8439)
!8472 = !DILocation(line: 730, column: 25, scope: !8439)
!8473 = !DILocation(line: 730, column: 32, scope: !8439)
!8474 = !DILocation(line: 730, column: 3, scope: !8439)
!8475 = !DILocation(line: 730, column: 10, scope: !8439)
!8476 = !DILocation(line: 732, column: 9, scope: !8220)
!8477 = !DILocation(line: 732, column: 2, scope: !8220)
!8478 = distinct !DISubprogram(name: "min_ff", scope: !2796, file: !2796, line: 202, type: !6278, scopeLine: 203, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1638)
!8479 = !DILocalVariable(name: "a", arg: 1, scope: !8478, file: !2796, line: 202, type: !26)
!8480 = !DILocation(line: 202, column: 28, scope: !8478)
!8481 = !DILocalVariable(name: "b", arg: 2, scope: !8478, file: !2796, line: 202, type: !26)
!8482 = !DILocation(line: 202, column: 37, scope: !8478)
!8483 = !DILocation(line: 204, column: 10, scope: !8478)
!8484 = !DILocation(line: 204, column: 14, scope: !8478)
!8485 = !DILocation(line: 204, column: 12, scope: !8478)
!8486 = !DILocation(line: 204, column: 9, scope: !8478)
!8487 = !DILocation(line: 204, column: 19, scope: !8478)
!8488 = !DILocation(line: 204, column: 23, scope: !8478)
!8489 = !DILocation(line: 204, column: 2, scope: !8478)
!8490 = distinct !DISubprogram(name: "ewa_read_pixel_cb", scope: !1, file: !1, line: 799, type: !8491, scopeLine: 800, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1638)
!8491 = !DISubroutineType(types: !8492)
!8492 = !{null, !24, !25, !25, !52}
!8493 = !DILocalVariable(name: "userdata", arg: 1, scope: !8490, file: !1, line: 799, type: !24)
!8494 = !DILocation(line: 799, column: 37, scope: !8490)
!8495 = !DILocalVariable(name: "x", arg: 2, scope: !8490, file: !1, line: 799, type: !25)
!8496 = !DILocation(line: 799, column: 51, scope: !8490)
!8497 = !DILocalVariable(name: "y", arg: 3, scope: !8490, file: !1, line: 799, type: !25)
!8498 = !DILocation(line: 799, column: 58, scope: !8490)
!8499 = !DILocalVariable(name: "result", arg: 4, scope: !8490, file: !1, line: 799, type: !52)
!8500 = !DILocation(line: 799, column: 67, scope: !8490)
!8501 = !DILocalVariable(name: "data", scope: !8490, file: !1, line: 801, type: !29)
!8502 = !DILocation(line: 801, column: 15, scope: !8490)
!8503 = !DILocation(line: 801, column: 38, scope: !8490)
!8504 = !DILocation(line: 801, column: 22, scope: !8490)
!8505 = !DILocation(line: 802, column: 22, scope: !8490)
!8506 = !DILocation(line: 802, column: 30, scope: !8490)
!8507 = !DILocation(line: 802, column: 36, scope: !8490)
!8508 = !DILocation(line: 802, column: 42, scope: !8490)
!8509 = !DILocation(line: 802, column: 45, scope: !8490)
!8510 = !DILocation(line: 802, column: 48, scope: !8490)
!8511 = !DILocation(line: 802, column: 54, scope: !8490)
!8512 = !DILocation(line: 802, column: 59, scope: !8490)
!8513 = !DILocation(line: 802, column: 2, scope: !8490)
!8514 = !DILocation(line: 803, column: 1, scope: !8490)
