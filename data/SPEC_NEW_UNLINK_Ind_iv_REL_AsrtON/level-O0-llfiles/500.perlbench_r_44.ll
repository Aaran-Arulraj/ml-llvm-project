; ModuleID = 'gv.c'
source_filename = "gv.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.op = type { %struct.op*, %struct.op*, %struct.op* ()*, i64, i16, i8, i8 }
%struct.hv = type { %struct.xpvhv*, i32, i32, %union.anon.4 }
%struct.xpvhv = type { %struct.hv*, %union._xmgu, i64, i64 }
%union._xmgu = type { %struct.magic* }
%struct.magic = type { %struct.magic*, %struct.mgvtbl*, i16, i8, i8, i64, %struct.sv*, i8* }
%struct.mgvtbl = type { i32 (%struct.sv*, %struct.magic*)*, i32 (%struct.sv*, %struct.magic*)*, i32 (%struct.sv*, %struct.magic*)*, i32 (%struct.sv*, %struct.magic*)*, i32 (%struct.sv*, %struct.magic*)*, i32 (%struct.sv*, %struct.magic*, %struct.sv*, i8*, i32)*, i32 (%struct.magic*, %struct.clone_params*)*, i32 (%struct.sv*, %struct.magic*)* }
%struct.clone_params = type { %struct.av*, i64, %struct.interpreter*, %struct.interpreter*, %struct.av* }
%struct.interpreter = type { i8 }
%struct.av = type { %struct.xpvav*, i32, i32, %union.anon.3 }
%struct.xpvav = type { %struct.hv*, %union._xmgu, i64, i64, %struct.sv** }
%union.anon.3 = type { i8* }
%struct.sv = type { i8*, i32, i32, %union.anon }
%union.anon = type { i8* }
%union.anon.4 = type { i8* }
%struct.cop = type { %struct.op*, %struct.op*, %struct.op* ()*, i64, i16, i8, i8, i32, %struct.hv*, %struct.gv*, i32, i32, i64*, %struct.refcounted_he* }
%struct.gv = type { %struct.xpvgv*, i32, i32, %union.anon.6 }
%struct.xpvgv = type { %struct.hv*, %union._xmgu, i64, %union.anon.5, %union._xivu, %union._xnvu }
%union.anon.5 = type { i64 }
%union._xivu = type { i64 }
%union._xnvu = type { double }
%union.anon.6 = type { i8* }
%struct.refcounted_he = type { %struct.refcounted_he*, %struct.hek*, %union.anon.16, i32, [1 x i8] }
%struct.hek = type { i32, i32, [1 x i8] }
%union.anon.16 = type { i64 }
%struct.jmpenv = type { [1 x %struct.__jmp_buf_tag], %struct.jmpenv*, i32, i8 }
%struct.__jmp_buf_tag = type { [8 x i64], i32, %struct.__sigset_t }
%struct.__sigset_t = type { [16 x i64] }
%struct.stackinfo = type { %struct.av*, %struct.context*, %struct.stackinfo*, %struct.stackinfo*, i32, i32, i32, i32 }
%struct.context = type { %union.anon.21 }
%union.anon.21 = type { %struct.subst }
%struct.subst = type { i8, i8, i16, i32, i64, i64, i8*, %struct.sv*, %struct.sv*, i8*, i8*, i8*, i8*, %struct.p5rx* }
%struct.p5rx = type { %struct.regexp*, i32, i32, %union.anon.15 }
%struct.regexp = type { %struct.hv*, %union._xmgu, i64, %union.anon.14, %struct.regexp_engine*, %struct.p5rx*, %struct.hv*, i32, i64, i64, i64, %struct.reg_substr_data*, i32, i32, i8*, i32, i32, %struct.regexp_paren_pair*, i8*, %struct.sv*, i64, i64, i64, i64, i16, %struct.cv* }
%union.anon.14 = type { i64 }
%struct.regexp_engine = type { %struct.p5rx* (%struct.sv*, i32)*, i32 (%struct.p5rx*, i8*, i8*, i8*, i64, %struct.sv*, i8*, i32)*, i8* (%struct.p5rx*, %struct.sv*, i8*, i8*, i8*, i32, %struct.re_scream_pos_data_s*)*, %struct.sv* (%struct.p5rx*)*, void (%struct.p5rx*)*, void (%struct.p5rx*, i32, %struct.sv*)*, void (%struct.p5rx*, i32, %struct.sv*)*, i32 (%struct.p5rx*, %struct.sv*, i32)*, %struct.sv* (%struct.p5rx*, %struct.sv*, %struct.sv*, i32)*, %struct.sv* (%struct.p5rx*, %struct.sv*, i32)*, %struct.sv* (%struct.p5rx*)*, %struct.p5rx* (%struct.sv**, i32, %struct.op*, %struct.regexp_engine*, %struct.p5rx*, i8*, i32, i32)* }
%struct.re_scream_pos_data_s = type { i8**, i64* }
%struct.reg_substr_data = type { i8, [3 x %struct.reg_substr_datum] }
%struct.reg_substr_datum = type { i64, i64, %struct.sv*, %struct.sv*, i64 }
%struct.regexp_paren_pair = type { i64, i64, i64 }
%struct.cv = type { %struct.xpvcv*, i32, i32, %union.anon.2 }
%struct.xpvcv = type { %struct.hv*, %union._xmgu, i64, %union.anon.7, %struct.hv*, %union.anon.8, %union.anon.9, %union.anon.10, i8*, %union.anon.11, %struct.cv*, i32, i32, i32 }
%union.anon.7 = type { i64 }
%union.anon.8 = type { %struct.op* }
%union.anon.9 = type { %struct.op* }
%union.anon.10 = type { %struct.gv* }
%union.anon.11 = type { %struct.padlist* }
%struct.padlist = type { i64, %struct.av**, i32, i32 }
%union.anon.2 = type { i8* }
%union.anon.15 = type { i8* }
%struct.yy_parser = type { %struct.yy_parser*, %union.YYSTYPE, i32, i32, i32, i32, %struct.yy_stack_frame*, %struct.yy_stack_frame*, i32, i32, i8*, i8*, i8, i8, i8, i8, i32, %struct.op*, %struct.op*, %struct.sv*, i16, i16, i32, %struct.sv*, i32, i32, i8, i8, i8, i8, i32, %struct._sublex_info, %struct.yy_lexshared*, %struct.sv*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i16, i8, i8, %struct.hv*, %struct._PerlIO**, %struct.av*, i8, [5 x %union.YYSTYPE], [5 x i32], i32, %struct.cop*, [256 x i8], i32, i32, i8, i8, i8 }
%union.YYSTYPE = type { i8* }
%struct.yy_stack_frame = type { %union.YYSTYPE, i16, i32, %struct.cv* }
%struct._sublex_info = type { i8, i16, %struct.op*, %struct.sv* }
%struct.yy_lexshared = type { %struct.yy_lexshared*, %struct.sv*, i8*, i8*, %struct.sv* }
%struct._PerlIO = type opaque
%struct.gp = type { %struct.sv*, %struct.io*, %struct.cv*, i32, i32, %struct.hv*, %struct.av*, %struct.cv*, %struct.gv*, i32, %struct.hek* }
%struct.io = type { %struct.xpvio*, i32, i32, %union.anon.1 }
%struct.xpvio = type { %struct.hv*, %union._xmgu, i64, %union.anon.12, %union._xivu, %struct._PerlIO**, %union.anon.13, i64, i64, i64, i8*, %struct.gv*, i8*, %struct.gv*, i8*, %struct.gv*, i8, i8 }
%union.anon.12 = type { i64 }
%union.anon.13 = type { %struct.__dirstream* }
%struct.__dirstream = type opaque
%union.anon.1 = type { i8* }
%struct.xpv = type { %struct.hv*, %union._xmgu, i64, %union.anon.17 }
%union.anon.17 = type { i64 }
%struct.he = type { %struct.he*, %struct.hek*, %union.anon.0 }
%union.anon.0 = type { %struct.sv* }
%struct.xpvhv_aux = type { %union._xhvnameu, %struct.av*, %struct.he*, i32, i32, %struct.mro_meta*, i32, i32, i32, i32 }
%union._xhvnameu = type { %struct.hek* }
%struct.mro_meta = type { %struct.hv*, %struct.sv*, %struct.hv*, i32, i32, %struct.mro_alg*, %struct.hv*, %struct.hv*, i32 }
%struct.mro_alg = type { %struct.av* (%struct.hv*, i32)*, i8*, i16, i16, i32 }
%struct.xpviv = type { %struct.hv*, %union._xmgu, i64, %union.anon.18, %union._xivu }
%union.anon.18 = type { i64 }
%struct.am_table = type { i8, i8, i16, i32, [75 x %struct.cv*] }
%struct.xpvnv = type { %struct.hv*, %union._xmgu, i64, %union.anon.19, %union._xivu, %union._xnvu }
%union.anon.19 = type { i64 }
%struct.xpvmg = type { %struct.hv*, %union._xmgu, i64, %union.anon.20, %union._xivu, %union._xnvu }
%union.anon.20 = type { i64 }
%struct.binop = type { %struct.op*, %struct.op*, %struct.op* ()*, i64, i16, i8, i8, %struct.op*, %struct.op* }
%union.any = type { i8* }

@PL_op = external dso_local global %struct.op*, align 8
@.str = private unnamed_addr constant [10 x i8] c"dirhandle\00", align 1
@.str.1 = private unnamed_addr constant [11 x i8] c"filehandle\00", align 1
@.str.2 = private unnamed_addr constant [5 x i8] c"hash\00", align 1
@.str.3 = private unnamed_addr constant [6 x i8] c"array\00", align 1
@.str.4 = private unnamed_addr constant [7 x i8] c"scalar\00", align 1
@.str.5 = private unnamed_addr constant [18 x i8] c"Bad symbol for %s\00", align 1
@.str.6 = private unnamed_addr constant [4 x i8] c"ISA\00", align 1
@PL_defstash = external dso_local global %struct.hv*, align 8
@PL_perldb = external dso_local global i32, align 4
@PL_curcop = external dso_local global %struct.cop*, align 8
@.str.7 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.8 = private unnamed_addr constant [17 x i8] c"Too Hot To Hoot!\00", align 1
@.str.9 = private unnamed_addr constant [45 x i8] c"Cannot convert a reference to %s to typeglob\00", align 1
@PL_curstash = external dso_local global %struct.hv*, align 8
@S_autoload = internal constant [9 x i8] c"AUTOLOAD\00", align 1
@.str.10 = private unnamed_addr constant [6 x i8] c"SUPER\00", align 1
@.str.11 = private unnamed_addr constant [8 x i8] c"::SUPER\00", align 1
@.str.12 = private unnamed_addr constant [7 x i8] c"import\00", align 1
@.str.13 = private unnamed_addr constant [9 x i8] c"unimport\00", align 1
@PL_sv_yes = external dso_local global %struct.sv, align 8
@.str.14 = private unnamed_addr constant [9 x i8] c"IO::File\00", align 1
@PL_incgv = external dso_local global %struct.gv*, align 8
@.str.15 = private unnamed_addr constant [11 x i8] c"IO/File.pm\00", align 1
@.str.16 = private unnamed_addr constant [56 x i8] c"Can't locate object method \22%d%lu%4p\22 via package \22%2p\22\00", align 1
@.str.17 = private unnamed_addr constant [92 x i8] c"Can't locate object method \22%d%lu%4p\22 via package \22%-p\22 (perhaps you forgot to load \22%-p\22?)\00", align 1
@.str.18 = private unnamed_addr constant [71 x i8] c"Use of inherited AUTOLOAD for non-method %-p::%d%lu%4p() is deprecated\00", align 1
@PL_tainting = external dso_local global i8, align 1
@.str.19 = private unnamed_addr constant [3 x i8] c"::\00", align 1
@PL_sv_undef = external dso_local global %struct.sv, align 8
@.str.20 = private unnamed_addr constant [36 x i8] c"Had to create %d%lu%4p unexpectedly\00", align 1
@PL_charclass = external dso_local constant [0 x i32], align 4
@.str.21 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@.str.22 = private unnamed_addr constant [11 x i8] c"__ANON__::\00", align 1
@.str.23 = private unnamed_addr constant [46 x i8] c"Name \22%2p::%2p\22 used only once: possible typo\00", align 1
@.str.24 = private unnamed_addr constant [19 x i8] c"%d%lu%4p::_GEN_%ld\00", align 1
@PL_gensym = external dso_local global i32, align 4
@.str.25 = private unnamed_addr constant [43 x i8] c"Attempt to free unreferenced glob pointers\00", align 1
@PL_stashcache = external dso_local global %struct.hv*, align 8
@.str.26 = private unnamed_addr constant [89 x i8] c"panic: gp_free failed to free glob pointer - something is repeatedly re-creating entries\00", align 1
@PL_sub_generation = external dso_local global i32, align 4
@PL_AMG_names = internal constant [75 x i8*] [i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.90, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.91, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.92, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.93, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.94, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.95, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.96, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.97, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.98, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.99, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.100, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.101, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.102, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.103, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.104, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.105, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.106, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.107, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.108, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.109, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.110, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.111, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.112, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.113, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.114, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.115, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.116, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.117, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.118, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.119, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.120, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.121, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.122, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.123, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.124, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.125, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.126, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.127, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.128, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.129, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.130, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.131, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.132, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.133, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.134, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.135, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.136, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.137, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.138, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.139, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.140, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.141, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.142, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.143, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.144, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.145, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.146, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.147, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.148, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.149, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.150, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.151, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.152, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.153, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.154, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.155, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.156, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.157, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.158, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.159, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.160, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.161, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.162, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.163, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.164, i32 0, i32 0)], align 16
@.str.27 = private unnamed_addr constant [3 x i8] c"((\00", align 1
@PL_AMG_namelens = internal constant [75 x i8] c"\02\04\04\04\04\04\03\03\05\03\03\02\02\04\04\03\04\02\03\02\03\03\03\03\03\03\03\03\03\09\02\03\02\03\02\03\02\03\02\03\03\04\03\04\03\04\02\03\03\04\02\03\03\04\02\03\03\04\04\04\02\03\06\04\04\04\04\05\02\03\02\03\03\03\03", align 16
@.str.28 = private unnamed_addr constant [4 x i8] c"nil\00", align 1
@.str.29 = private unnamed_addr constant [9 x i8] c"overload\00", align 1
@.str.30 = private unnamed_addr constant [4 x i8] c"???\00", align 1
@.str.31 = private unnamed_addr constant [53 x i8] c"%s method \22%-256p\22 overloading \22%s\22 in package \22%3p\22\00", align 1
@.str.32 = private unnamed_addr constant [27 x i8] c"Stub found while resolving\00", align 1
@.str.33 = private unnamed_addr constant [14 x i8] c"Can't resolve\00", align 1
@PL_stack_sp = external dso_local global %struct.sv**, align 8
@PL_curpad = external dso_local global %struct.sv**, align 8
@PL_sv_no = external dso_local global %struct.sv, align 8
@.str.34 = private unnamed_addr constant [50 x i8] c"Overloaded dereference did not return a reference\00", align 1
@.str.35 = private unnamed_addr constant [12 x i8] c"overloading\00", align 1
@.str.36 = private unnamed_addr constant [54 x i8] c"Operation \22%s\22: no method found,%sargument %s%-p%s%-p\00", align 1
@.str.37 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.38 = private unnamed_addr constant [8 x i8] c"\0A\09left \00", align 1
@.str.39 = private unnamed_addr constant [23 x i8] c"in overloaded package \00", align 1
@.str.40 = private unnamed_addr constant [24 x i8] c"has no overloaded magic\00", align 1
@.str.41 = private unnamed_addr constant [41 x i8] c",\0A\09right argument in overloaded package \00", align 1
@.str.42 = private unnamed_addr constant [42 x i8] c",\0A\09right argument has no overloaded magic\00", align 1
@.str.43 = private unnamed_addr constant [4 x i8] c"%-p\00", align 1
@PL_top_env = external dso_local global %struct.jmpenv*, align 8
@PL_curstackinfo = external dso_local global %struct.stackinfo*, align 8
@PL_stack_base = external dso_local global %struct.sv**, align 8
@PL_curstack = external dso_local global %struct.av*, align 8
@PL_stack_max = external dso_local global %struct.sv**, align 8
@PL_debstash = external dso_local global %struct.hv*, align 8
@PL_markstack_ptr = external dso_local global i32*, align 8
@PL_ppaddr = external dso_local global [0 x %struct.op* ()*], align 8
@PL_runops = external dso_local global i32 ()*, align 8
@.str.44 = private unnamed_addr constant [39 x i8] c"Copy method did not return a reference\00", align 1
@.str.45 = private unnamed_addr constant [30 x i8] c"panic: gv name too long (%lu)\00", align 1
@PL_phase = external dso_local global i32, align 4
@PL_statgv = external dso_local global %struct.gv*, align 8
@PL_last_in_gv = external dso_local global %struct.gv*, align 8
@PL_stderrgv = external dso_local global %struct.gv*, align 8
@PL_globalstash = external dso_local global %struct.hv*, align 8
@.str.46 = private unnamed_addr constant [10 x i8] c"UNIVERSAL\00", align 1
@.str.47 = private unnamed_addr constant [51 x i8] c"Can't use anonymous symbol table for method lookup\00", align 1
@.str.48 = private unnamed_addr constant [5 x i8] c"CORE\00", align 1
@.str.49 = private unnamed_addr constant [39 x i8] c"Can't locate package %-p for @%2p::ISA\00", align 1
@S_maybe_add_coresub.file = internal constant [5 x i8] c"gv.c\00", align 1
@PL_parser = external dso_local global %struct.yy_parser*, align 8
@PL_compcv = external dso_local global %struct.cv*, align 8
@.str.50 = private unnamed_addr constant [36 x i8] c"&CORE::%s cannot be called directly\00", align 1
@.str.51 = private unnamed_addr constant [7 x i8] c"main::\00", align 1
@PL_compiling = external dso_local global %struct.cop, align 8
@.str.52 = private unnamed_addr constant [38 x i8] c"Variable \22%c%d%lu%4p\22 is not imported\00", align 1
@.str.53 = private unnamed_addr constant [36 x i8] c"\09(Did you mean &%d%lu%4p instead?)\0A\00", align 1
@PL_in_clean_all = external dso_local global i8, align 1
@.str.54 = private unnamed_addr constant [103 x i8] c"Global symbol \22%s%d%lu%4p\22 requires explicit package name (did you forget to declare \22my %s%d%lu%4p\22?)\00", align 1
@.str.55 = private unnamed_addr constant [2 x i8] c"$\00", align 1
@.str.56 = private unnamed_addr constant [2 x i8] c"@\00", align 1
@.str.57 = private unnamed_addr constant [2 x i8] c"%\00", align 1
@.str.58 = private unnamed_addr constant [9 x i8] c"<none>::\00", align 1
@.str.59 = private unnamed_addr constant [2 x i8] c"!\00", align 1
@.str.60 = private unnamed_addr constant [6 x i8] c"Errno\00", align 1
@.str.61 = private unnamed_addr constant [8 x i8] c"TIEHASH\00", align 1
@.str.62 = private unnamed_addr constant [24 x i8] c"Tie::Hash::NamedCapture\00", align 1
@.str.63 = private unnamed_addr constant [27 x i8] c"$%c is no longer supported\00", align 1
@.str.64 = private unnamed_addr constant [8 x i8] c"arybase\00", align 1
@.str.65 = private unnamed_addr constant [6 x i8] c"FETCH\00", align 1
@.str.66 = private unnamed_addr constant [51 x i8] c"panic: Can't use %c%c because %-p is not available\00", align 1
@.str.67 = private unnamed_addr constant [61 x i8] c"panic: Can't use %c%c because %-p does not support method %s\00", align 1
@.str.68 = private unnamed_addr constant [6 x i8] c"XPORT\00", align 1
@.str.69 = private unnamed_addr constant [3 x i8] c"SA\00", align 1
@.str.70 = private unnamed_addr constant [7 x i8] c"ERSION\00", align 1
@.str.71 = private unnamed_addr constant [4 x i8] c"RGV\00", align 1
@.str.72 = private unnamed_addr constant [7 x i8] c"RGVOUT\00", align 1
@.str.73 = private unnamed_addr constant [3 x i8] c"IG\00", align 1
@PL_psig_name = external dso_local global %struct.sv**, align 8
@PL_psig_pend = external dso_local global i32*, align 8
@PL_psig_ptr = external dso_local global %struct.sv**, align 8
@PL_sig_name = external dso_local constant [0 x i8*], align 8
@.str.74 = private unnamed_addr constant [18 x i8] c"HILD_ERROR_NATIVE\00", align 1
@.str.75 = private unnamed_addr constant [8 x i8] c"NCODING\00", align 1
@.str.76 = private unnamed_addr constant [12 x i8] c"LOBAL_PHASE\00", align 1
@.str.77 = private unnamed_addr constant [7 x i8] c"AST_FH\00", align 1
@.str.78 = private unnamed_addr constant [5 x i8] c"ATCH\00", align 1
@.str.79 = private unnamed_addr constant [4 x i8] c"PEN\00", align 1
@.str.80 = private unnamed_addr constant [8 x i8] c"REMATCH\00", align 1
@.str.81 = private unnamed_addr constant [9 x i8] c"OSTMATCH\00", align 1
@.str.82 = private unnamed_addr constant [5 x i8] c"AINT\00", align 1
@.str.83 = private unnamed_addr constant [7 x i8] c"NICODE\00", align 1
@.str.84 = private unnamed_addr constant [10 x i8] c"TF8LOCALE\00", align 1
@.str.85 = private unnamed_addr constant [9 x i8] c"TF8CACHE\00", align 1
@.str.86 = private unnamed_addr constant [12 x i8] c"ARNING_BITS\00", align 1
@PL_chopset = external dso_local global i8*, align 8
@.str.87 = private unnamed_addr constant [2 x i8] c"\0C\00", align 1
@.str.88 = private unnamed_addr constant [2 x i8] c"\1C\00", align 1
@PL_patchlevel = external dso_local global %struct.sv*, align 8
@.str.89 = private unnamed_addr constant [8 x i8] c"version\00", align 1
@.str.90 = private unnamed_addr constant [3 x i8] c"()\00", align 1
@.str.91 = private unnamed_addr constant [5 x i8] c"(${}\00", align 1
@.str.92 = private unnamed_addr constant [5 x i8] c"(@{}\00", align 1
@.str.93 = private unnamed_addr constant [5 x i8] c"(%{}\00", align 1
@.str.94 = private unnamed_addr constant [5 x i8] c"(*{}\00", align 1
@.str.95 = private unnamed_addr constant [5 x i8] c"(&{}\00", align 1
@.str.96 = private unnamed_addr constant [4 x i8] c"(++\00", align 1
@.str.97 = private unnamed_addr constant [4 x i8] c"(--\00", align 1
@.str.98 = private unnamed_addr constant [6 x i8] c"(bool\00", align 1
@.str.99 = private unnamed_addr constant [4 x i8] c"(0+\00", align 1
@.str.100 = private unnamed_addr constant [4 x i8] c"(\22\22\00", align 1
@.str.101 = private unnamed_addr constant [3 x i8] c"(!\00", align 1
@.str.102 = private unnamed_addr constant [3 x i8] c"(=\00", align 1
@.str.103 = private unnamed_addr constant [5 x i8] c"(abs\00", align 1
@.str.104 = private unnamed_addr constant [5 x i8] c"(neg\00", align 1
@.str.105 = private unnamed_addr constant [4 x i8] c"(<>\00", align 1
@.str.106 = private unnamed_addr constant [5 x i8] c"(int\00", align 1
@.str.107 = private unnamed_addr constant [3 x i8] c"(<\00", align 1
@.str.108 = private unnamed_addr constant [4 x i8] c"(<=\00", align 1
@.str.109 = private unnamed_addr constant [3 x i8] c"(>\00", align 1
@.str.110 = private unnamed_addr constant [4 x i8] c"(>=\00", align 1
@.str.111 = private unnamed_addr constant [4 x i8] c"(==\00", align 1
@.str.112 = private unnamed_addr constant [4 x i8] c"(!=\00", align 1
@.str.113 = private unnamed_addr constant [4 x i8] c"(lt\00", align 1
@.str.114 = private unnamed_addr constant [4 x i8] c"(le\00", align 1
@.str.115 = private unnamed_addr constant [4 x i8] c"(gt\00", align 1
@.str.116 = private unnamed_addr constant [4 x i8] c"(ge\00", align 1
@.str.117 = private unnamed_addr constant [4 x i8] c"(eq\00", align 1
@.str.118 = private unnamed_addr constant [4 x i8] c"(ne\00", align 1
@.str.119 = private unnamed_addr constant [10 x i8] c"(nomethod\00", align 1
@.str.120 = private unnamed_addr constant [3 x i8] c"(+\00", align 1
@.str.121 = private unnamed_addr constant [4 x i8] c"(+=\00", align 1
@.str.122 = private unnamed_addr constant [3 x i8] c"(-\00", align 1
@.str.123 = private unnamed_addr constant [4 x i8] c"(-=\00", align 1
@.str.124 = private unnamed_addr constant [3 x i8] c"(*\00", align 1
@.str.125 = private unnamed_addr constant [4 x i8] c"(*=\00", align 1
@.str.126 = private unnamed_addr constant [3 x i8] c"(/\00", align 1
@.str.127 = private unnamed_addr constant [4 x i8] c"(/=\00", align 1
@.str.128 = private unnamed_addr constant [3 x i8] c"(%\00", align 1
@.str.129 = private unnamed_addr constant [4 x i8] c"(%=\00", align 1
@.str.130 = private unnamed_addr constant [4 x i8] c"(**\00", align 1
@.str.131 = private unnamed_addr constant [5 x i8] c"(**=\00", align 1
@.str.132 = private unnamed_addr constant [4 x i8] c"(<<\00", align 1
@.str.133 = private unnamed_addr constant [5 x i8] c"(<<=\00", align 1
@.str.134 = private unnamed_addr constant [4 x i8] c"(>>\00", align 1
@.str.135 = private unnamed_addr constant [5 x i8] c"(>>=\00", align 1
@.str.136 = private unnamed_addr constant [3 x i8] c"(&\00", align 1
@.str.137 = private unnamed_addr constant [4 x i8] c"(&=\00", align 1
@.str.138 = private unnamed_addr constant [4 x i8] c"(&.\00", align 1
@.str.139 = private unnamed_addr constant [5 x i8] c"(&.=\00", align 1
@.str.140 = private unnamed_addr constant [3 x i8] c"(|\00", align 1
@.str.141 = private unnamed_addr constant [4 x i8] c"(|=\00", align 1
@.str.142 = private unnamed_addr constant [4 x i8] c"(|.\00", align 1
@.str.143 = private unnamed_addr constant [5 x i8] c"(|.=\00", align 1
@.str.144 = private unnamed_addr constant [3 x i8] c"(^\00", align 1
@.str.145 = private unnamed_addr constant [4 x i8] c"(^=\00", align 1
@.str.146 = private unnamed_addr constant [4 x i8] c"(^.\00", align 1
@.str.147 = private unnamed_addr constant [5 x i8] c"(^.=\00", align 1
@.str.148 = private unnamed_addr constant [5 x i8] c"(<=>\00", align 1
@.str.149 = private unnamed_addr constant [5 x i8] c"(cmp\00", align 1
@.str.150 = private unnamed_addr constant [3 x i8] c"(~\00", align 1
@.str.151 = private unnamed_addr constant [4 x i8] c"(~.\00", align 1
@.str.152 = private unnamed_addr constant [7 x i8] c"(atan2\00", align 1
@.str.153 = private unnamed_addr constant [5 x i8] c"(cos\00", align 1
@.str.154 = private unnamed_addr constant [5 x i8] c"(sin\00", align 1
@.str.155 = private unnamed_addr constant [5 x i8] c"(exp\00", align 1
@.str.156 = private unnamed_addr constant [5 x i8] c"(log\00", align 1
@.str.157 = private unnamed_addr constant [6 x i8] c"(sqrt\00", align 1
@.str.158 = private unnamed_addr constant [3 x i8] c"(x\00", align 1
@.str.159 = private unnamed_addr constant [4 x i8] c"(x=\00", align 1
@.str.160 = private unnamed_addr constant [3 x i8] c"(.\00", align 1
@.str.161 = private unnamed_addr constant [4 x i8] c"(.=\00", align 1
@.str.162 = private unnamed_addr constant [4 x i8] c"(~~\00", align 1
@.str.163 = private unnamed_addr constant [4 x i8] c"(-X\00", align 1
@.str.164 = private unnamed_addr constant [4 x i8] c"(qr\00", align 1

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.gv* @Perl_gv_add_by_type(%struct.gv* %gv, i32 %type) #0 {
entry:
  %gv.addr = alloca %struct.gv*, align 8
  %type.addr = alloca i32, align 4
  %where = alloca %struct.sv**, align 8
  %what = alloca i8*, align 8
  store %struct.gv* %gv, %struct.gv** %gv.addr, align 8
  store i32 %type, i32* %type.addr, align 4
  %0 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %tobool = icmp ne %struct.gv* %0, null
  br i1 %tobool, label %lor.lhs.false, label %if.then

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %2 = bitcast %struct.gv* %1 to %struct.sv*
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %2, i32 0, i32 2
  %3 = load i32, i32* %sv_flags, align 4
  %and = and i32 %3, 255
  %cmp = icmp ne i32 %and, 9
  br i1 %cmp, label %land.lhs.true, label %if.end18

land.lhs.true:                                    ; preds = %lor.lhs.false
  %4 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %5 = bitcast %struct.gv* %4 to %struct.sv*
  %sv_flags1 = getelementptr inbounds %struct.sv, %struct.sv* %5, i32 0, i32 2
  %6 = load i32, i32* %sv_flags1, align 4
  %and2 = and i32 %6, 255
  %cmp3 = icmp ne i32 %and2, 10
  br i1 %cmp3, label %if.then, label %if.end18

if.then:                                          ; preds = %land.lhs.true, %entry
  %7 = load i32, i32* %type.addr, align 4
  %cmp4 = icmp eq i32 %7, 15
  br i1 %cmp4, label %if.then5, label %if.else

if.then5:                                         ; preds = %if.then
  %8 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_type = getelementptr inbounds %struct.op, %struct.op* %8, i32 0, i32 4
  %bf.load = load i16, i16* %op_type, align 8
  %bf.clear = and i16 %bf.load, 511
  %bf.cast = zext i16 %bf.clear to i32
  %cmp6 = icmp sge i32 %bf.cast, 306
  br i1 %cmp6, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %if.then5
  %9 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_type7 = getelementptr inbounds %struct.op, %struct.op* %9, i32 0, i32 4
  %bf.load8 = load i16, i16* %op_type7, align 8
  %bf.clear9 = and i16 %bf.load8, 511
  %bf.cast10 = zext i16 %bf.clear9 to i32
  %cmp11 = icmp sle i32 %bf.cast10, 310
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.then5
  %10 = phi i1 [ false, %if.then5 ], [ %cmp11, %land.rhs ]
  %11 = zext i1 %10 to i64
  %cond = select i1 %10, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0)
  store i8* %cond, i8** %what, align 8
  br label %if.end17

if.else:                                          ; preds = %if.then
  %12 = load i32, i32* %type.addr, align 4
  %cmp12 = icmp eq i32 %12, 12
  br i1 %cmp12, label %if.then13, label %if.else14

if.then13:                                        ; preds = %if.else
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0), i8** %what, align 8
  br label %if.end

if.else14:                                        ; preds = %if.else
  %13 = load i32, i32* %type.addr, align 4
  %cmp15 = icmp eq i32 %13, 11
  %14 = zext i1 %cmp15 to i64
  %cond16 = select i1 %cmp15, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4, i64 0, i64 0)
  store i8* %cond16, i8** %what, align 8
  br label %if.end

if.end:                                           ; preds = %if.else14, %if.then13
  br label %if.end17

if.end17:                                         ; preds = %if.end, %land.end
  %15 = load i8*, i8** %what, align 8
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5, i64 0, i64 0), i8* %15)
  br label %if.end18

if.end18:                                         ; preds = %if.end17, %land.lhs.true, %lor.lhs.false
  %16 = load i32, i32* %type.addr, align 4
  %cmp19 = icmp eq i32 %16, 12
  br i1 %cmp19, label %if.then20, label %if.else21

if.then20:                                        ; preds = %if.end18
  %17 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_u = getelementptr inbounds %struct.gv, %struct.gv* %17, i32 0, i32 3
  %svu_gp = bitcast %union.anon.6* %sv_u to %struct.gp**
  %18 = load %struct.gp*, %struct.gp** %svu_gp, align 8
  %add.ptr = getelementptr inbounds %struct.gp, %struct.gp* %18, i64 0
  %gp_hv = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr, i32 0, i32 5
  %19 = bitcast %struct.hv** %gp_hv to %struct.sv**
  store %struct.sv** %19, %struct.sv*** %where, align 8
  br label %if.end39

if.else21:                                        ; preds = %if.end18
  %20 = load i32, i32* %type.addr, align 4
  %cmp22 = icmp eq i32 %20, 11
  br i1 %cmp22, label %if.then23, label %if.else27

if.then23:                                        ; preds = %if.else21
  %21 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_u24 = getelementptr inbounds %struct.gv, %struct.gv* %21, i32 0, i32 3
  %svu_gp25 = bitcast %union.anon.6* %sv_u24 to %struct.gp**
  %22 = load %struct.gp*, %struct.gp** %svu_gp25, align 8
  %add.ptr26 = getelementptr inbounds %struct.gp, %struct.gp* %22, i64 0
  %gp_av = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr26, i32 0, i32 6
  %23 = bitcast %struct.av** %gp_av to %struct.sv**
  store %struct.sv** %23, %struct.sv*** %where, align 8
  br label %if.end38

if.else27:                                        ; preds = %if.else21
  %24 = load i32, i32* %type.addr, align 4
  %cmp28 = icmp eq i32 %24, 15
  br i1 %cmp28, label %if.then29, label %if.else33

if.then29:                                        ; preds = %if.else27
  %25 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_u30 = getelementptr inbounds %struct.gv, %struct.gv* %25, i32 0, i32 3
  %svu_gp31 = bitcast %union.anon.6* %sv_u30 to %struct.gp**
  %26 = load %struct.gp*, %struct.gp** %svu_gp31, align 8
  %add.ptr32 = getelementptr inbounds %struct.gp, %struct.gp* %26, i64 0
  %gp_io = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr32, i32 0, i32 1
  %27 = bitcast %struct.io** %gp_io to %struct.sv**
  store %struct.sv** %27, %struct.sv*** %where, align 8
  br label %if.end37

if.else33:                                        ; preds = %if.else27
  %28 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_u34 = getelementptr inbounds %struct.gv, %struct.gv* %28, i32 0, i32 3
  %svu_gp35 = bitcast %union.anon.6* %sv_u34 to %struct.gp**
  %29 = load %struct.gp*, %struct.gp** %svu_gp35, align 8
  %add.ptr36 = getelementptr inbounds %struct.gp, %struct.gp* %29, i64 0
  %gp_sv = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr36, i32 0, i32 0
  store %struct.sv** %gp_sv, %struct.sv*** %where, align 8
  br label %if.end37

if.end37:                                         ; preds = %if.else33, %if.then29
  br label %if.end38

if.end38:                                         ; preds = %if.end37, %if.then23
  br label %if.end39

if.end39:                                         ; preds = %if.end38, %if.then20
  %30 = load %struct.sv**, %struct.sv*** %where, align 8
  %31 = load %struct.sv*, %struct.sv** %30, align 8
  %tobool40 = icmp ne %struct.sv* %31, null
  br i1 %tobool40, label %if.end53, label %if.then41

if.then41:                                        ; preds = %if.end39
  %32 = load i32, i32* %type.addr, align 4
  %call = call %struct.sv* @Perl_newSV_type(i32 %32)
  %33 = load %struct.sv**, %struct.sv*** %where, align 8
  store %struct.sv* %call, %struct.sv** %33, align 8
  %34 = load i32, i32* %type.addr, align 4
  %cmp42 = icmp eq i32 %34, 11
  br i1 %cmp42, label %land.lhs.true43, label %if.end52

land.lhs.true43:                                  ; preds = %if.then41
  %35 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_any = getelementptr inbounds %struct.gv, %struct.gv* %35, i32 0, i32 0
  %36 = load %struct.xpvgv*, %struct.xpvgv** %sv_any, align 8
  %xiv_u = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %36, i32 0, i32 4
  %xivu_namehek = bitcast %union._xivu* %xiv_u to %struct.hek**
  %37 = load %struct.hek*, %struct.hek** %xivu_namehek, align 8
  %hek_len = getelementptr inbounds %struct.hek, %struct.hek* %37, i32 0, i32 1
  %38 = load i32, i32* %hek_len, align 4
  %cmp44 = icmp eq i32 %38, 3
  br i1 %cmp44, label %land.lhs.true45, label %if.end52

land.lhs.true45:                                  ; preds = %land.lhs.true43
  %39 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_any46 = getelementptr inbounds %struct.gv, %struct.gv* %39, i32 0, i32 0
  %40 = load %struct.xpvgv*, %struct.xpvgv** %sv_any46, align 8
  %xiv_u47 = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %40, i32 0, i32 4
  %xivu_namehek48 = bitcast %union._xivu* %xiv_u47 to %struct.hek**
  %41 = load %struct.hek*, %struct.hek** %xivu_namehek48, align 8
  %hek_key = getelementptr inbounds %struct.hek, %struct.hek* %41, i32 0, i32 2
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %hek_key, i64 0, i64 0
  %call49 = call i32 @strncmp(i8* %arraydecay, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.6, i64 0, i64 0), i64 3) #4
  %tobool50 = icmp ne i32 %call49, 0
  br i1 %tobool50, label %if.end52, label %if.then51

if.then51:                                        ; preds = %land.lhs.true45
  %42 = load %struct.sv**, %struct.sv*** %where, align 8
  %43 = load %struct.sv*, %struct.sv** %42, align 8
  %44 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %45 = bitcast %struct.gv* %44 to %struct.sv*
  call void @Perl_sv_magic(%struct.sv* %43, %struct.sv* %45, i32 73, i8* null, i32 0)
  br label %if.end52

if.end52:                                         ; preds = %if.then51, %land.lhs.true45, %land.lhs.true43, %if.then41
  br label %if.end53

if.end53:                                         ; preds = %if.end52, %if.end39
  %46 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  ret %struct.gv* %46
}

declare dso_local void @Perl_croak(i8*, ...) #1

declare dso_local %struct.sv* @Perl_newSV_type(i32) #1

; Function Attrs: nounwind readonly
declare dso_local i32 @strncmp(i8*, i8*, i64) #2

declare dso_local void @Perl_sv_magic(%struct.sv*, %struct.sv*, i32, i8*, i32) #1

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.gv* @Perl_gv_fetchfile(i8* %name) #0 {
entry:
  %name.addr = alloca i8*, align 8
  store i8* %name, i8** %name.addr, align 8
  %0 = load i8*, i8** %name.addr, align 8
  %1 = load i8*, i8** %name.addr, align 8
  %call = call i64 @strlen(i8* %1) #4
  %call1 = call %struct.gv* @Perl_gv_fetchfile_flags(i8* %0, i64 %call, i32 0)
  ret %struct.gv* %call1
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.gv* @Perl_gv_fetchfile_flags(i8* %name, i64 %namelen, i32 %flags) #0 {
entry:
  %retval = alloca %struct.gv*, align 8
  %name.addr = alloca i8*, align 8
  %namelen.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  %smallbuf = alloca [128 x i8], align 16
  %tmpbuf = alloca i8*, align 8
  %tmplen = alloca i64, align 8
  %gv = alloca %struct.gv*, align 8
  store i8* %name, i8** %name.addr, align 8
  store i64 %namelen, i64* %namelen.addr, align 8
  store i32 %flags, i32* %flags.addr, align 4
  %0 = load i64, i64* %namelen.addr, align 8
  %add = add i64 %0, 2
  store i64 %add, i64* %tmplen, align 8
  %1 = load i32, i32* %flags.addr, align 4
  %2 = load %struct.hv*, %struct.hv** @PL_defstash, align 8
  %tobool = icmp ne %struct.hv* %2, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store %struct.gv* null, %struct.gv** %retval, align 8
  br label %return

if.end:                                           ; preds = %entry
  %3 = load i64, i64* %tmplen, align 8
  %cmp = icmp ule i64 %3, 128
  br i1 %cmp, label %if.then1, label %if.else

if.then1:                                         ; preds = %if.end
  %arraydecay = getelementptr inbounds [128 x i8], [128 x i8]* %smallbuf, i64 0, i64 0
  store i8* %arraydecay, i8** %tmpbuf, align 8
  br label %if.end2

if.else:                                          ; preds = %if.end
  %4 = load i64, i64* %tmplen, align 8
  %mul = mul i64 %4, 1
  %call = call i8* @Perl_safesysmalloc(i64 %mul)
  store i8* %call, i8** %tmpbuf, align 8
  br label %if.end2

if.end2:                                          ; preds = %if.else, %if.then1
  %5 = load i8*, i8** %tmpbuf, align 8
  %arrayidx = getelementptr inbounds i8, i8* %5, i64 0
  store i8 95, i8* %arrayidx, align 1
  %6 = load i8*, i8** %tmpbuf, align 8
  %arrayidx3 = getelementptr inbounds i8, i8* %6, i64 1
  store i8 60, i8* %arrayidx3, align 1
  %7 = load i8*, i8** %tmpbuf, align 8
  %add.ptr = getelementptr inbounds i8, i8* %7, i64 2
  %8 = load i8*, i8** %name.addr, align 8
  %9 = load i64, i64* %namelen.addr, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr, i8* align 1 %8, i64 %9, i1 false)
  %10 = load %struct.hv*, %struct.hv** @PL_defstash, align 8
  %11 = load i8*, i8** %tmpbuf, align 8
  %12 = load i64, i64* %tmplen, align 8
  %conv = trunc i64 %12 to i32
  %call4 = call i8* @Perl_hv_common_key_len(%struct.hv* %10, i8* %11, i32 %conv, i32 48, %struct.sv* null, i32 0)
  %13 = bitcast i8* %call4 to %struct.sv**
  %14 = bitcast %struct.sv** %13 to %struct.gv**
  %15 = load %struct.gv*, %struct.gv** %14, align 8
  store %struct.gv* %15, %struct.gv** %gv, align 8
  %16 = load %struct.gv*, %struct.gv** %gv, align 8
  %sv_flags = getelementptr inbounds %struct.gv, %struct.gv* %16, i32 0, i32 2
  %17 = load i32, i32* %sv_flags, align 4
  %and = and i32 %17, 255
  %cmp5 = icmp eq i32 %and, 9
  br i1 %cmp5, label %if.end10, label %if.then7

if.then7:                                         ; preds = %if.end2
  %18 = load %struct.gv*, %struct.gv** %gv, align 8
  %19 = load %struct.hv*, %struct.hv** @PL_defstash, align 8
  %20 = load i8*, i8** %tmpbuf, align 8
  %21 = load i64, i64* %tmplen, align 8
  call void @Perl_gv_init_pvn(%struct.gv* %18, %struct.hv* %19, i8* %20, i64 %21, i32 0)
  %22 = load i8*, i8** %name.addr, align 8
  %23 = load i64, i64* %namelen.addr, align 8
  %call8 = call %struct.sv* @Perl_newSVpvn(i8* %22, i64 %23)
  %24 = load %struct.gv*, %struct.gv** %gv, align 8
  %sv_u = getelementptr inbounds %struct.gv, %struct.gv* %24, i32 0, i32 3
  %svu_gp = bitcast %union.anon.6* %sv_u to %struct.gp**
  %25 = load %struct.gp*, %struct.gp** %svu_gp, align 8
  %add.ptr9 = getelementptr inbounds %struct.gp, %struct.gp* %25, i64 0
  %gp_sv = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr9, i32 0, i32 0
  store %struct.sv* %call8, %struct.sv** %gp_sv, align 8
  br label %if.end10

if.end10:                                         ; preds = %if.then7, %if.end2
  %26 = load i32, i32* @PL_perldb, align 4
  %and11 = and i32 %26, 2
  %tobool12 = icmp ne i32 %and11, 0
  br i1 %tobool12, label %land.lhs.true, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end10
  %27 = load i32, i32* @PL_perldb, align 4
  %and13 = and i32 %27, 1024
  %tobool14 = icmp ne i32 %and13, 0
  br i1 %tobool14, label %land.lhs.true, label %if.end51

land.lhs.true:                                    ; preds = %lor.lhs.false, %if.end10
  %28 = load %struct.gv*, %struct.gv** %gv, align 8
  %sv_u15 = getelementptr inbounds %struct.gv, %struct.gv* %28, i32 0, i32 3
  %svu_gp16 = bitcast %union.anon.6* %sv_u15 to %struct.gp**
  %29 = load %struct.gp*, %struct.gp** %svu_gp16, align 8
  %add.ptr17 = getelementptr inbounds %struct.gp, %struct.gp* %29, i64 0
  %gp_av = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr17, i32 0, i32 6
  %30 = load %struct.av*, %struct.av** %gp_av, align 8
  %tobool18 = icmp ne %struct.av* %30, null
  br i1 %tobool18, label %if.end51, label %if.then19

if.then19:                                        ; preds = %land.lhs.true
  %31 = load %struct.gv*, %struct.gv** %gv, align 8
  %sv_u20 = getelementptr inbounds %struct.gv, %struct.gv* %31, i32 0, i32 3
  %svu_gp21 = bitcast %union.anon.6* %sv_u20 to %struct.gp**
  %32 = load %struct.gp*, %struct.gp** %svu_gp21, align 8
  %add.ptr22 = getelementptr inbounds %struct.gp, %struct.gp* %32, i64 0
  %gp_hv = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr22, i32 0, i32 5
  %33 = load %struct.hv*, %struct.hv** %gp_hv, align 8
  %tobool23 = icmp ne %struct.hv* %33, null
  br i1 %tobool23, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then19
  %34 = load %struct.gv*, %struct.gv** %gv, align 8
  %sv_u24 = getelementptr inbounds %struct.gv, %struct.gv* %34, i32 0, i32 3
  %svu_gp25 = bitcast %union.anon.6* %sv_u24 to %struct.gp**
  %35 = load %struct.gp*, %struct.gp** %svu_gp25, align 8
  %add.ptr26 = getelementptr inbounds %struct.gp, %struct.gp* %35, i64 0
  %gp_hv27 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr26, i32 0, i32 5
  %36 = load %struct.hv*, %struct.hv** %gp_hv27, align 8
  br label %cond.end

cond.false:                                       ; preds = %if.then19
  %37 = load %struct.gv*, %struct.gv** %gv, align 8
  %call28 = call %struct.gv* @Perl_gv_add_by_type(%struct.gv* %37, i32 12)
  %sv_u29 = getelementptr inbounds %struct.gv, %struct.gv* %call28, i32 0, i32 3
  %svu_gp30 = bitcast %union.anon.6* %sv_u29 to %struct.gp**
  %38 = load %struct.gp*, %struct.gp** %svu_gp30, align 8
  %add.ptr31 = getelementptr inbounds %struct.gp, %struct.gp* %38, i64 0
  %gp_hv32 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr31, i32 0, i32 5
  %39 = load %struct.hv*, %struct.hv** %gp_hv32, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.hv* [ %36, %cond.true ], [ %39, %cond.false ]
  %40 = bitcast %struct.hv* %cond to i8*
  %41 = bitcast i8* %40 to %struct.sv*
  %42 = load %struct.gv*, %struct.gv** %gv, align 8
  %sv_u33 = getelementptr inbounds %struct.gv, %struct.gv* %42, i32 0, i32 3
  %svu_gp34 = bitcast %union.anon.6* %sv_u33 to %struct.gp**
  %43 = load %struct.gp*, %struct.gp** %svu_gp34, align 8
  %add.ptr35 = getelementptr inbounds %struct.gp, %struct.gp* %43, i64 0
  %gp_av36 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr35, i32 0, i32 6
  %44 = load %struct.av*, %struct.av** %gp_av36, align 8
  %tobool37 = icmp ne %struct.av* %44, null
  br i1 %tobool37, label %cond.true38, label %cond.false43

cond.true38:                                      ; preds = %cond.end
  %45 = load %struct.gv*, %struct.gv** %gv, align 8
  %sv_u39 = getelementptr inbounds %struct.gv, %struct.gv* %45, i32 0, i32 3
  %svu_gp40 = bitcast %union.anon.6* %sv_u39 to %struct.gp**
  %46 = load %struct.gp*, %struct.gp** %svu_gp40, align 8
  %add.ptr41 = getelementptr inbounds %struct.gp, %struct.gp* %46, i64 0
  %gp_av42 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr41, i32 0, i32 6
  %47 = load %struct.av*, %struct.av** %gp_av42, align 8
  br label %cond.end49

cond.false43:                                     ; preds = %cond.end
  %48 = load %struct.gv*, %struct.gv** %gv, align 8
  %call44 = call %struct.gv* @Perl_gv_add_by_type(%struct.gv* %48, i32 11)
  %sv_u45 = getelementptr inbounds %struct.gv, %struct.gv* %call44, i32 0, i32 3
  %svu_gp46 = bitcast %union.anon.6* %sv_u45 to %struct.gp**
  %49 = load %struct.gp*, %struct.gp** %svu_gp46, align 8
  %add.ptr47 = getelementptr inbounds %struct.gp, %struct.gp* %49, i64 0
  %gp_av48 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr47, i32 0, i32 6
  %50 = load %struct.av*, %struct.av** %gp_av48, align 8
  br label %cond.end49

cond.end49:                                       ; preds = %cond.false43, %cond.true38
  %cond50 = phi %struct.av* [ %47, %cond.true38 ], [ %50, %cond.false43 ]
  %51 = bitcast %struct.av* %cond50 to i8*
  %52 = bitcast i8* %51 to %struct.sv*
  call void @Perl_sv_magic(%struct.sv* %41, %struct.sv* %52, i32 76, i8* null, i32 0)
  br label %if.end51

if.end51:                                         ; preds = %cond.end49, %land.lhs.true, %lor.lhs.false
  %53 = load i8*, i8** %tmpbuf, align 8
  %arraydecay52 = getelementptr inbounds [128 x i8], [128 x i8]* %smallbuf, i64 0, i64 0
  %cmp53 = icmp ne i8* %53, %arraydecay52
  br i1 %cmp53, label %if.then55, label %if.end56

if.then55:                                        ; preds = %if.end51
  %54 = load i8*, i8** %tmpbuf, align 8
  call void @Perl_safesysfree(i8* %54)
  br label %if.end56

if.end56:                                         ; preds = %if.then55, %if.end51
  %55 = load %struct.gv*, %struct.gv** %gv, align 8
  store %struct.gv* %55, %struct.gv** %retval, align 8
  br label %return

return:                                           ; preds = %if.end56, %if.then
  %56 = load %struct.gv*, %struct.gv** %retval, align 8
  ret %struct.gv* %56
}

; Function Attrs: nounwind readonly
declare dso_local i64 @strlen(i8*) #2

declare dso_local i8* @Perl_safesysmalloc(i64) #1

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

declare dso_local i8* @Perl_hv_common_key_len(%struct.hv*, i8*, i32, i32, %struct.sv*, i32) #1

; Function Attrs: noinline nounwind uwtable
define dso_local void @Perl_gv_init_pvn(%struct.gv* %gv, %struct.hv* %stash, i8* %name, i64 %len, i32 %flags) #0 {
entry:
  %gv.addr = alloca %struct.gv*, align 8
  %stash.addr = alloca %struct.hv*, align 8
  %name.addr = alloca i8*, align 8
  %len.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  %old_type = alloca i32, align 4
  %doproto = alloca i8, align 1
  %proto = alloca i8*, align 8
  %protolen = alloca i64, align 8
  %proto_utf8 = alloca i32, align 4
  %has_constant = alloca %struct.sv*, align 8
  %exported_constant = alloca i32, align 4
  %cv = alloca %struct.cv*, align 8
  %cv198 = alloca %struct.cv*, align 8
  store %struct.gv* %gv, %struct.gv** %gv.addr, align 8
  store %struct.hv* %stash, %struct.hv** %stash.addr, align 8
  store i8* %name, i8** %name.addr, align 8
  store i64 %len, i64* %len.addr, align 8
  store i32 %flags, i32* %flags.addr, align 4
  %0 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_flags = getelementptr inbounds %struct.gv, %struct.gv* %0, i32 0, i32 2
  %1 = load i32, i32* %sv_flags, align 4
  %and = and i32 %1, 255
  store i32 %and, i32* %old_type, align 4
  %2 = load i32, i32* %old_type, align 4
  %cmp = icmp ugt i32 %2, 0
  %frombool = zext i1 %cmp to i8
  store i8 %frombool, i8* %doproto, align 1
  %3 = load i8, i8* %doproto, align 1
  %tobool = trunc i8 %3 to i1
  br i1 %tobool, label %land.lhs.true, label %cond.false

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_flags1 = getelementptr inbounds %struct.gv, %struct.gv* %4, i32 0, i32 2
  %5 = load i32, i32* %sv_flags1, align 4
  %and2 = and i32 %5, 1024
  %tobool3 = icmp ne i32 %and2, 0
  br i1 %tobool3, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true
  %6 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_flags4 = getelementptr inbounds %struct.gv, %struct.gv* %6, i32 0, i32 2
  %7 = load i32, i32* %sv_flags4, align 4
  %and5 = and i32 %7, 268435456
  %tobool6 = icmp ne i32 %and5, 0
  br i1 %tobool6, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %cond.true
  %8 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %9 = bitcast %struct.gv* %8 to %struct.sv*
  call void @Perl_sv_force_normal_flags(%struct.sv* %9, i32 0)
  br label %land.end

land.end:                                         ; preds = %land.rhs, %cond.true
  %10 = phi i1 [ false, %cond.true ], [ false, %land.rhs ]
  %land.ext = zext i1 %10 to i32
  %11 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_u = getelementptr inbounds %struct.gv, %struct.gv* %11, i32 0, i32 3
  %svu_pv = bitcast %union.anon.6* %sv_u to i8**
  %12 = load i8*, i8** %svu_pv, align 8
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true, %entry
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %land.end
  %cond = phi i8* [ %12, %land.end ], [ null, %cond.false ]
  store i8* %cond, i8** %proto, align 8
  %13 = load i8*, i8** %proto, align 8
  %tobool7 = icmp ne i8* %13, null
  br i1 %tobool7, label %cond.true8, label %cond.false9

cond.true8:                                       ; preds = %cond.end
  %14 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_any = getelementptr inbounds %struct.gv, %struct.gv* %14, i32 0, i32 0
  %15 = load %struct.xpvgv*, %struct.xpvgv** %sv_any, align 8
  %16 = bitcast %struct.xpvgv* %15 to %struct.xpv*
  %xpv_cur = getelementptr inbounds %struct.xpv, %struct.xpv* %16, i32 0, i32 2
  %17 = load i64, i64* %xpv_cur, align 8
  br label %cond.end10

cond.false9:                                      ; preds = %cond.end
  br label %cond.end10

cond.end10:                                       ; preds = %cond.false9, %cond.true8
  %cond11 = phi i64 [ %17, %cond.true8 ], [ 0, %cond.false9 ]
  store i64 %cond11, i64* %protolen, align 8
  %18 = load i8*, i8** %proto, align 8
  %tobool12 = icmp ne i8* %18, null
  br i1 %tobool12, label %cond.true13, label %cond.false16

cond.true13:                                      ; preds = %cond.end10
  %19 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_flags14 = getelementptr inbounds %struct.gv, %struct.gv* %19, i32 0, i32 2
  %20 = load i32, i32* %sv_flags14, align 4
  %and15 = and i32 %20, 536870912
  br label %cond.end17

cond.false16:                                     ; preds = %cond.end10
  br label %cond.end17

cond.end17:                                       ; preds = %cond.false16, %cond.true13
  %cond18 = phi i32 [ %and15, %cond.true13 ], [ 0, %cond.false16 ]
  store i32 %cond18, i32* %proto_utf8, align 4
  %21 = load i8, i8* %doproto, align 1
  %tobool19 = trunc i8 %21 to i1
  br i1 %tobool19, label %land.lhs.true20, label %cond.false26

land.lhs.true20:                                  ; preds = %cond.end17
  %22 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_flags21 = getelementptr inbounds %struct.gv, %struct.gv* %22, i32 0, i32 2
  %23 = load i32, i32* %sv_flags21, align 4
  %and22 = and i32 %23, 2048
  %tobool23 = icmp ne i32 %and22, 0
  br i1 %tobool23, label %cond.true24, label %cond.false26

cond.true24:                                      ; preds = %land.lhs.true20
  %24 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_u25 = getelementptr inbounds %struct.gv, %struct.gv* %24, i32 0, i32 3
  %svu_rv = bitcast %union.anon.6* %sv_u25 to %struct.sv**
  %25 = load %struct.sv*, %struct.sv** %svu_rv, align 8
  br label %cond.end27

cond.false26:                                     ; preds = %land.lhs.true20, %cond.end17
  br label %cond.end27

cond.end27:                                       ; preds = %cond.false26, %cond.true24
  %cond28 = phi %struct.sv* [ %25, %cond.true24 ], [ null, %cond.false26 ]
  store %struct.sv* %cond28, %struct.sv** %has_constant, align 8
  %26 = load %struct.sv*, %struct.sv** %has_constant, align 8
  %tobool29 = icmp ne %struct.sv* %26, null
  br i1 %tobool29, label %cond.true30, label %cond.false34

cond.true30:                                      ; preds = %cond.end27
  %27 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_flags31 = getelementptr inbounds %struct.gv, %struct.gv* %27, i32 0, i32 2
  %28 = load i32, i32* %sv_flags31, align 4
  %and32 = and i32 %28, 34816
  %cmp33 = icmp eq i32 %and32, 34816
  %conv = zext i1 %cmp33 to i32
  br label %cond.end35

cond.false34:                                     ; preds = %cond.end27
  br label %cond.end35

cond.end35:                                       ; preds = %cond.false34, %cond.true30
  %cond36 = phi i32 [ %conv, %cond.true30 ], [ 0, %cond.false34 ]
  store i32 %cond36, i32* %exported_constant, align 4
  %29 = load %struct.sv*, %struct.sv** %has_constant, align 8
  %tobool37 = icmp ne %struct.sv* %29, null
  br i1 %tobool37, label %if.then, label %if.end

if.then:                                          ; preds = %cond.end35
  %30 = load %struct.sv*, %struct.sv** %has_constant, align 8
  %sv_flags38 = getelementptr inbounds %struct.sv, %struct.sv* %30, i32 0, i32 2
  %31 = load i32, i32* %sv_flags38, align 4
  %and39 = and i32 %31, 255
  switch i32 %and39, label %sw.default [
    i32 12, label %sw.bb
    i32 14, label %sw.bb
    i32 15, label %sw.bb
  ]

sw.bb:                                            ; preds = %if.then, %if.then, %if.then
  %32 = load %struct.sv*, %struct.sv** %has_constant, align 8
  %call = call i8* @Perl_sv_reftype(%struct.sv* %32, i32 0)
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.9, i64 0, i64 0), i8* %call)
  br label %sw.default

sw.default:                                       ; preds = %if.then, %sw.bb
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default
  br label %do.body

do.body:                                          ; preds = %sw.epilog
  %33 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_u40 = getelementptr inbounds %struct.gv, %struct.gv* %33, i32 0, i32 3
  %svu_rv41 = bitcast %union.anon.6* %sv_u40 to %struct.sv**
  store %struct.sv* null, %struct.sv** %svu_rv41, align 8
  br label %do.end

do.end:                                           ; preds = %do.body
  %34 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_flags42 = getelementptr inbounds %struct.gv, %struct.gv* %34, i32 0, i32 2
  %35 = load i32, i32* %sv_flags42, align 4
  %and43 = and i32 %35, -2049
  store i32 %and43, i32* %sv_flags42, align 4
  br label %if.end

if.end:                                           ; preds = %do.end, %cond.end35
  %36 = load i32, i32* %old_type, align 4
  %cmp44 = icmp ult i32 %36, 9
  br i1 %cmp44, label %if.then46, label %if.end55

if.then46:                                        ; preds = %if.end
  %37 = load i32, i32* %old_type, align 4
  %cmp47 = icmp uge i32 %37, 3
  br i1 %cmp47, label %if.then49, label %if.end54

if.then49:                                        ; preds = %if.then46
  br label %do.body50

do.body50:                                        ; preds = %if.then49
  %38 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_any51 = getelementptr inbounds %struct.gv, %struct.gv* %38, i32 0, i32 0
  %39 = load %struct.xpvgv*, %struct.xpvgv** %sv_any51, align 8
  %40 = bitcast %struct.xpvgv* %39 to %struct.xpv*
  %xpv_cur52 = getelementptr inbounds %struct.xpv, %struct.xpv* %40, i32 0, i32 2
  store i64 0, i64* %xpv_cur52, align 8
  br label %do.end53

do.end53:                                         ; preds = %do.body50
  br label %if.end54

if.end54:                                         ; preds = %do.end53, %if.then46
  %41 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %42 = bitcast %struct.gv* %41 to i8*
  %43 = bitcast i8* %42 to %struct.sv*
  call void @Perl_sv_upgrade(%struct.sv* %43, i32 9)
  br label %if.end55

if.end55:                                         ; preds = %if.end54, %if.end
  %44 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_any56 = getelementptr inbounds %struct.gv, %struct.gv* %44, i32 0, i32 0
  %45 = load %struct.xpvgv*, %struct.xpvgv** %sv_any56, align 8
  %46 = bitcast %struct.xpvgv* %45 to %struct.xpv*
  %xpv_len_u = getelementptr inbounds %struct.xpv, %struct.xpv* %46, i32 0, i32 3
  %xpvlenu_len = bitcast %union.anon.17* %xpv_len_u to i64*
  %47 = load i64, i64* %xpvlenu_len, align 8
  %tobool57 = icmp ne i64 %47, 0
  br i1 %tobool57, label %if.then58, label %if.end75

if.then58:                                        ; preds = %if.end55
  %48 = load i8*, i8** %proto, align 8
  %tobool59 = icmp ne i8* %48, null
  br i1 %tobool59, label %if.then60, label %if.else

if.then60:                                        ; preds = %if.then58
  br label %do.body61

do.body61:                                        ; preds = %if.then60
  %49 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_u62 = getelementptr inbounds %struct.gv, %struct.gv* %49, i32 0, i32 3
  %svu_pv63 = bitcast %union.anon.6* %sv_u62 to i8**
  store i8* null, i8** %svu_pv63, align 8
  br label %do.end64

do.end64:                                         ; preds = %do.body61
  br label %do.body65

do.body65:                                        ; preds = %do.end64
  %50 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_any66 = getelementptr inbounds %struct.gv, %struct.gv* %50, i32 0, i32 0
  %51 = load %struct.xpvgv*, %struct.xpvgv** %sv_any66, align 8
  %52 = bitcast %struct.xpvgv* %51 to %struct.xpv*
  %xpv_len_u67 = getelementptr inbounds %struct.xpv, %struct.xpv* %52, i32 0, i32 3
  %xpvlenu_len68 = bitcast %union.anon.17* %xpv_len_u67 to i64*
  store i64 0, i64* %xpvlenu_len68, align 8
  br label %do.end69

do.end69:                                         ; preds = %do.body65
  %53 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_flags70 = getelementptr inbounds %struct.gv, %struct.gv* %53, i32 0, i32 2
  %54 = load i32, i32* %sv_flags70, align 4
  %and71 = and i32 %54, -17409
  store i32 %and71, i32* %sv_flags70, align 4
  br label %if.end74

if.else:                                          ; preds = %if.then58
  %55 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_u72 = getelementptr inbounds %struct.gv, %struct.gv* %55, i32 0, i32 3
  %svu_pv73 = bitcast %union.anon.6* %sv_u72 to i8**
  %56 = load i8*, i8** %svu_pv73, align 8
  %add.ptr = getelementptr inbounds i8, i8* %56, i64 0
  call void @Perl_safesysfree(i8* %add.ptr)
  br label %if.end74

if.end74:                                         ; preds = %if.else, %do.end69
  br label %if.end75

if.end75:                                         ; preds = %if.end74, %if.end55
  %57 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_flags76 = getelementptr inbounds %struct.gv, %struct.gv* %57, i32 0, i32 2
  %58 = load i32, i32* %sv_flags76, align 4
  %and77 = and i32 %58, 2147479295
  store i32 %and77, i32* %sv_flags76, align 4
  br label %do.body78

do.body78:                                        ; preds = %if.end75
  %59 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_flags79 = getelementptr inbounds %struct.gv, %struct.gv* %59, i32 0, i32 2
  %60 = load i32, i32* %sv_flags79, align 4
  %or = or i32 %60, 32768
  store i32 %or, i32* %sv_flags79, align 4
  br label %do.end80

do.end80:                                         ; preds = %do.body78
  %61 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %call81 = call %struct.gp* @Perl_newGP(%struct.gv* %61)
  %62 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_u82 = getelementptr inbounds %struct.gv, %struct.gv* %62, i32 0, i32 3
  %svu_gp = bitcast %union.anon.6* %sv_u82 to %struct.gp**
  store %struct.gp* %call81, %struct.gp** %svu_gp, align 8
  %63 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %64 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_any83 = getelementptr inbounds %struct.gv, %struct.gv* %64, i32 0, i32 0
  %65 = load %struct.xpvgv*, %struct.xpvgv** %sv_any83, align 8
  %xnv_u = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %65, i32 0, i32 5
  %xgv_stash = bitcast %union._xnvu* %xnv_u to %struct.hv**
  store %struct.hv* %63, %struct.hv** %xgv_stash, align 8
  %66 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %tobool84 = icmp ne %struct.hv* %66, null
  br i1 %tobool84, label %if.then85, label %if.end86

if.then85:                                        ; preds = %do.end80
  %67 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %68 = bitcast %struct.hv* %67 to i8*
  %69 = bitcast i8* %68 to %struct.sv*
  %70 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %71 = bitcast %struct.gv* %70 to i8*
  %72 = bitcast i8* %71 to %struct.sv*
  call void @Perl_sv_add_backref(%struct.sv* %69, %struct.sv* %72)
  br label %if.end86

if.end86:                                         ; preds = %if.then85, %do.end80
  %73 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %74 = load i8*, i8** %name.addr, align 8
  %75 = load i64, i64* %len.addr, align 8
  %conv87 = trunc i64 %75 to i32
  %76 = load i32, i32* %flags.addr, align 4
  %and88 = and i32 %76, 536870912
  %tobool89 = icmp ne i32 %and88, 0
  %77 = zext i1 %tobool89 to i64
  %cond90 = select i1 %tobool89, i32 536870912, i32 0
  %or91 = or i32 1, %cond90
  call void @Perl_gv_name_set(%struct.gv* %73, i8* %74, i32 %conv87, i32 %or91)
  %78 = load i32, i32* %flags.addr, align 4
  %and92 = and i32 %78, 2
  %tobool93 = icmp ne i32 %and92, 0
  br i1 %tobool93, label %if.then96, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end86
  %79 = load i8, i8* %doproto, align 1
  %tobool94 = trunc i8 %79 to i1
  br i1 %tobool94, label %if.then96, label %if.end100

if.then96:                                        ; preds = %lor.lhs.false, %if.end86
  %80 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_any97 = getelementptr inbounds %struct.gv, %struct.gv* %80, i32 0, i32 0
  %81 = load %struct.xpvgv*, %struct.xpvgv** %sv_any97, align 8
  %xpv_cur98 = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %81, i32 0, i32 2
  %82 = load i64, i64* %xpv_cur98, align 8
  %or99 = or i64 %82, 2
  store i64 %or99, i64* %xpv_cur98, align 8
  br label %if.end100

if.end100:                                        ; preds = %if.then96, %lor.lhs.false
  %83 = load %struct.sv*, %struct.sv** %has_constant, align 8
  %tobool101 = icmp ne %struct.sv* %83, null
  br i1 %tobool101, label %land.lhs.true102, label %if.else195

land.lhs.true102:                                 ; preds = %if.end100
  %84 = load %struct.sv*, %struct.sv** %has_constant, align 8
  %sv_flags103 = getelementptr inbounds %struct.sv, %struct.sv* %84, i32 0, i32 2
  %85 = load i32, i32* %sv_flags103, align 4
  %and104 = and i32 %85, 255
  %cmp105 = icmp eq i32 %and104, 13
  br i1 %cmp105, label %if.then107, label %if.else195

if.then107:                                       ; preds = %land.lhs.true102
  %86 = load %struct.sv*, %struct.sv** %has_constant, align 8
  %87 = bitcast %struct.sv* %86 to %struct.cv*
  store %struct.cv* %87, %struct.cv** %cv, align 8
  %88 = load %struct.cv*, %struct.cv** %cv, align 8
  %89 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_u108 = getelementptr inbounds %struct.gv, %struct.gv* %89, i32 0, i32 3
  %svu_gp109 = bitcast %union.anon.6* %sv_u108 to %struct.gp**
  %90 = load %struct.gp*, %struct.gp** %svu_gp109, align 8
  %add.ptr110 = getelementptr inbounds %struct.gp, %struct.gp* %90, i64 0
  %gp_cv = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr110, i32 0, i32 2
  store %struct.cv* %88, %struct.cv** %gp_cv, align 8
  %91 = load %struct.cv*, %struct.cv** %cv, align 8
  %sv_any111 = getelementptr inbounds %struct.cv, %struct.cv* %91, i32 0, i32 0
  %92 = load %struct.xpvcv*, %struct.xpvcv** %sv_any111, align 8
  %93 = bitcast %struct.xpvcv* %92 to i8*
  %94 = bitcast i8* %93 to %struct.xpvcv*
  %xcv_stash = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %94, i32 0, i32 4
  %95 = load %struct.hv*, %struct.hv** %xcv_stash, align 8
  %add.ptr112 = getelementptr inbounds %struct.hv, %struct.hv* %95, i64 0
  %96 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %cmp113 = icmp eq %struct.hv* %add.ptr112, %96
  br i1 %cmp113, label %land.lhs.true115, label %if.end194

land.lhs.true115:                                 ; preds = %if.then107
  %97 = load %struct.cv*, %struct.cv** %cv, align 8
  %call116 = call %struct.hek* @CvNAME_HEK(%struct.cv* %97)
  %98 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_any117 = getelementptr inbounds %struct.gv, %struct.gv* %98, i32 0, i32 0
  %99 = load %struct.xpvgv*, %struct.xpvgv** %sv_any117, align 8
  %xiv_u = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %99, i32 0, i32 4
  %xivu_namehek = bitcast %union._xivu* %xiv_u to %struct.hek**
  %100 = load %struct.hek*, %struct.hek** %xivu_namehek, align 8
  %cmp118 = icmp eq %struct.hek* %call116, %100
  br i1 %cmp118, label %if.then193, label %lor.lhs.false120

lor.lhs.false120:                                 ; preds = %land.lhs.true115
  %101 = load %struct.cv*, %struct.cv** %cv, align 8
  %call121 = call %struct.hek* @CvNAME_HEK(%struct.cv* %101)
  %hek_len = getelementptr inbounds %struct.hek, %struct.hek* %call121, i32 0, i32 1
  %102 = load i32, i32* %hek_len, align 4
  %103 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_any122 = getelementptr inbounds %struct.gv, %struct.gv* %103, i32 0, i32 0
  %104 = load %struct.xpvgv*, %struct.xpvgv** %sv_any122, align 8
  %xiv_u123 = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %104, i32 0, i32 4
  %xivu_namehek124 = bitcast %union._xivu* %xiv_u123 to %struct.hek**
  %105 = load %struct.hek*, %struct.hek** %xivu_namehek124, align 8
  %hek_len125 = getelementptr inbounds %struct.hek, %struct.hek* %105, i32 0, i32 1
  %106 = load i32, i32* %hek_len125, align 4
  %cmp126 = icmp eq i32 %102, %106
  br i1 %cmp126, label %land.lhs.true128, label %if.end194

land.lhs.true128:                                 ; preds = %lor.lhs.false120
  %107 = load %struct.cv*, %struct.cv** %cv, align 8
  %call129 = call %struct.hek* @CvNAME_HEK(%struct.cv* %107)
  %hek_key = getelementptr inbounds %struct.hek, %struct.hek* %call129, i32 0, i32 2
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %hek_key, i64 0, i64 0
  %108 = load %struct.cv*, %struct.cv** %cv, align 8
  %call130 = call %struct.hek* @CvNAME_HEK(%struct.cv* %108)
  %hek_len131 = getelementptr inbounds %struct.hek, %struct.hek* %call130, i32 0, i32 1
  %109 = load i32, i32* %hek_len131, align 4
  %idx.ext = sext i32 %109 to i64
  %add.ptr132 = getelementptr inbounds i8, i8* %arraydecay, i64 %idx.ext
  %add.ptr133 = getelementptr inbounds i8, i8* %add.ptr132, i64 1
  %110 = load i8, i8* %add.ptr133, align 1
  %conv134 = zext i8 %110 to i32
  %111 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_any135 = getelementptr inbounds %struct.gv, %struct.gv* %111, i32 0, i32 0
  %112 = load %struct.xpvgv*, %struct.xpvgv** %sv_any135, align 8
  %xiv_u136 = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %112, i32 0, i32 4
  %xivu_namehek137 = bitcast %union._xivu* %xiv_u136 to %struct.hek**
  %113 = load %struct.hek*, %struct.hek** %xivu_namehek137, align 8
  %hek_key138 = getelementptr inbounds %struct.hek, %struct.hek* %113, i32 0, i32 2
  %arraydecay139 = getelementptr inbounds [1 x i8], [1 x i8]* %hek_key138, i64 0, i64 0
  %114 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_any140 = getelementptr inbounds %struct.gv, %struct.gv* %114, i32 0, i32 0
  %115 = load %struct.xpvgv*, %struct.xpvgv** %sv_any140, align 8
  %xiv_u141 = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %115, i32 0, i32 4
  %xivu_namehek142 = bitcast %union._xivu* %xiv_u141 to %struct.hek**
  %116 = load %struct.hek*, %struct.hek** %xivu_namehek142, align 8
  %hek_len143 = getelementptr inbounds %struct.hek, %struct.hek* %116, i32 0, i32 1
  %117 = load i32, i32* %hek_len143, align 4
  %idx.ext144 = sext i32 %117 to i64
  %add.ptr145 = getelementptr inbounds i8, i8* %arraydecay139, i64 %idx.ext144
  %add.ptr146 = getelementptr inbounds i8, i8* %add.ptr145, i64 1
  %118 = load i8, i8* %add.ptr146, align 1
  %conv147 = zext i8 %118 to i32
  %cmp148 = icmp ne i32 %conv134, %conv147
  br i1 %cmp148, label %land.lhs.true150, label %if.end194

land.lhs.true150:                                 ; preds = %land.lhs.true128
  %119 = load %struct.cv*, %struct.cv** %cv, align 8
  %call151 = call %struct.hek* @CvNAME_HEK(%struct.cv* %119)
  %hek_key152 = getelementptr inbounds %struct.hek, %struct.hek* %call151, i32 0, i32 2
  %arraydecay153 = getelementptr inbounds [1 x i8], [1 x i8]* %hek_key152, i64 0, i64 0
  %120 = load %struct.cv*, %struct.cv** %cv, align 8
  %call154 = call %struct.hek* @CvNAME_HEK(%struct.cv* %120)
  %hek_len155 = getelementptr inbounds %struct.hek, %struct.hek* %call154, i32 0, i32 1
  %121 = load i32, i32* %hek_len155, align 4
  %idx.ext156 = sext i32 %121 to i64
  %add.ptr157 = getelementptr inbounds i8, i8* %arraydecay153, i64 %idx.ext156
  %add.ptr158 = getelementptr inbounds i8, i8* %add.ptr157, i64 1
  %122 = load i8, i8* %add.ptr158, align 1
  %conv159 = zext i8 %122 to i32
  %and160 = and i32 %conv159, 1
  %123 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_any161 = getelementptr inbounds %struct.gv, %struct.gv* %123, i32 0, i32 0
  %124 = load %struct.xpvgv*, %struct.xpvgv** %sv_any161, align 8
  %xiv_u162 = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %124, i32 0, i32 4
  %xivu_namehek163 = bitcast %union._xivu* %xiv_u162 to %struct.hek**
  %125 = load %struct.hek*, %struct.hek** %xivu_namehek163, align 8
  %hek_key164 = getelementptr inbounds %struct.hek, %struct.hek* %125, i32 0, i32 2
  %arraydecay165 = getelementptr inbounds [1 x i8], [1 x i8]* %hek_key164, i64 0, i64 0
  %126 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_any166 = getelementptr inbounds %struct.gv, %struct.gv* %126, i32 0, i32 0
  %127 = load %struct.xpvgv*, %struct.xpvgv** %sv_any166, align 8
  %xiv_u167 = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %127, i32 0, i32 4
  %xivu_namehek168 = bitcast %union._xivu* %xiv_u167 to %struct.hek**
  %128 = load %struct.hek*, %struct.hek** %xivu_namehek168, align 8
  %hek_len169 = getelementptr inbounds %struct.hek, %struct.hek* %128, i32 0, i32 1
  %129 = load i32, i32* %hek_len169, align 4
  %idx.ext170 = sext i32 %129 to i64
  %add.ptr171 = getelementptr inbounds i8, i8* %arraydecay165, i64 %idx.ext170
  %add.ptr172 = getelementptr inbounds i8, i8* %add.ptr171, i64 1
  %130 = load i8, i8* %add.ptr172, align 1
  %conv173 = zext i8 %130 to i32
  %and174 = and i32 %conv173, 1
  %cmp175 = icmp eq i32 %and160, %and174
  br i1 %cmp175, label %land.lhs.true177, label %if.end194

land.lhs.true177:                                 ; preds = %land.lhs.true150
  %131 = load %struct.cv*, %struct.cv** %cv, align 8
  %call178 = call %struct.hek* @CvNAME_HEK(%struct.cv* %131)
  %hek_key179 = getelementptr inbounds %struct.hek, %struct.hek* %call178, i32 0, i32 2
  %arraydecay180 = getelementptr inbounds [1 x i8], [1 x i8]* %hek_key179, i64 0, i64 0
  %132 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_any181 = getelementptr inbounds %struct.gv, %struct.gv* %132, i32 0, i32 0
  %133 = load %struct.xpvgv*, %struct.xpvgv** %sv_any181, align 8
  %xiv_u182 = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %133, i32 0, i32 4
  %xivu_namehek183 = bitcast %union._xivu* %xiv_u182 to %struct.hek**
  %134 = load %struct.hek*, %struct.hek** %xivu_namehek183, align 8
  %hek_key184 = getelementptr inbounds %struct.hek, %struct.hek* %134, i32 0, i32 2
  %arraydecay185 = getelementptr inbounds [1 x i8], [1 x i8]* %hek_key184, i64 0, i64 0
  %135 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_any186 = getelementptr inbounds %struct.gv, %struct.gv* %135, i32 0, i32 0
  %136 = load %struct.xpvgv*, %struct.xpvgv** %sv_any186, align 8
  %xiv_u187 = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %136, i32 0, i32 4
  %xivu_namehek188 = bitcast %union._xivu* %xiv_u187 to %struct.hek**
  %137 = load %struct.hek*, %struct.hek** %xivu_namehek188, align 8
  %hek_len189 = getelementptr inbounds %struct.hek, %struct.hek* %137, i32 0, i32 1
  %138 = load i32, i32* %hek_len189, align 4
  %conv190 = sext i32 %138 to i64
  %call191 = call i32 @memcmp(i8* %arraydecay180, i8* %arraydecay185, i64 %conv190) #4
  %tobool192 = icmp ne i32 %call191, 0
  br i1 %tobool192, label %if.end194, label %if.then193

if.then193:                                       ; preds = %land.lhs.true177, %land.lhs.true115
  %139 = load %struct.cv*, %struct.cv** %cv, align 8
  %140 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  call void @Perl_cvgv_set(%struct.cv* %139, %struct.gv* %140)
  br label %if.end194

if.end194:                                        ; preds = %if.then193, %land.lhs.true177, %land.lhs.true150, %land.lhs.true128, %lor.lhs.false120, %if.then107
  br label %if.end232

if.else195:                                       ; preds = %land.lhs.true102, %if.end100
  %141 = load i8, i8* %doproto, align 1
  %tobool196 = trunc i8 %141 to i1
  br i1 %tobool196, label %if.then197, label %if.end231

if.then197:                                       ; preds = %if.else195
  %142 = load %struct.sv*, %struct.sv** %has_constant, align 8
  %tobool199 = icmp ne %struct.sv* %142, null
  br i1 %tobool199, label %if.then200, label %if.else220

if.then200:                                       ; preds = %if.then197
  %143 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %144 = load i8*, i8** %name.addr, align 8
  %145 = load i64, i64* %len.addr, align 8
  %146 = load i32, i32* %flags.addr, align 4
  %147 = load %struct.sv*, %struct.sv** %has_constant, align 8
  %call201 = call %struct.cv* @Perl_newCONSTSUB_flags(%struct.hv* %143, i8* %144, i64 %145, i32 %146, %struct.sv* %147)
  store %struct.cv* %call201, %struct.cv** %cv198, align 8
  %148 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_u202 = getelementptr inbounds %struct.gv, %struct.gv* %148, i32 0, i32 3
  %svu_gp203 = bitcast %union.anon.6* %sv_u202 to %struct.gp**
  %149 = load %struct.gp*, %struct.gp** %svu_gp203, align 8
  %add.ptr204 = getelementptr inbounds %struct.gp, %struct.gp* %149, i64 0
  %gp_cv205 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr204, i32 0, i32 2
  %150 = load %struct.cv*, %struct.cv** %gp_cv205, align 8
  %add.ptr206 = getelementptr inbounds %struct.cv, %struct.cv* %150, i64 0
  %tobool207 = icmp ne %struct.cv* %add.ptr206, null
  br i1 %tobool207, label %if.end213, label %if.then208

if.then208:                                       ; preds = %if.then200
  %151 = load %struct.cv*, %struct.cv** %cv198, align 8
  %sv_refcnt = getelementptr inbounds %struct.cv, %struct.cv* %151, i32 0, i32 1
  %152 = load i32, i32* %sv_refcnt, align 8
  %inc = add i32 %152, 1
  store i32 %inc, i32* %sv_refcnt, align 8
  %153 = load %struct.cv*, %struct.cv** %cv198, align 8
  %154 = bitcast %struct.cv* %153 to i8*
  %155 = bitcast i8* %154 to %struct.sv*
  %156 = bitcast %struct.sv* %155 to %struct.cv*
  %157 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_u209 = getelementptr inbounds %struct.gv, %struct.gv* %157, i32 0, i32 3
  %svu_gp210 = bitcast %union.anon.6* %sv_u209 to %struct.gp**
  %158 = load %struct.gp*, %struct.gp** %svu_gp210, align 8
  %add.ptr211 = getelementptr inbounds %struct.gp, %struct.gp* %158, i64 0
  %gp_cv212 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr211, i32 0, i32 2
  store %struct.cv* %156, %struct.cv** %gp_cv212, align 8
  br label %if.end213

if.end213:                                        ; preds = %if.then208, %if.then200
  %159 = load i32, i32* %exported_constant, align 4
  %tobool214 = icmp ne i32 %159, 0
  br i1 %tobool214, label %if.then215, label %if.end219

if.then215:                                       ; preds = %if.end213
  %160 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_any216 = getelementptr inbounds %struct.gv, %struct.gv* %160, i32 0, i32 0
  %161 = load %struct.xpvgv*, %struct.xpvgv** %sv_any216, align 8
  %xpv_cur217 = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %161, i32 0, i32 2
  %162 = load i64, i64* %xpv_cur217, align 8
  %or218 = or i64 %162, 128
  store i64 %or218, i64* %xpv_cur217, align 8
  br label %if.end219

if.end219:                                        ; preds = %if.then215, %if.end213
  %163 = load %struct.cv*, %struct.cv** %cv198, align 8
  %164 = load %struct.hv*, %struct.hv** @PL_curstash, align 8
  call void @Perl_cvstash_set(%struct.cv* %163, %struct.hv* %164)
  br label %if.end222

if.else220:                                       ; preds = %if.then197
  %165 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %call221 = call %struct.cv* @Perl_newSTUB(%struct.gv* %165, i1 zeroext true)
  store %struct.cv* %call221, %struct.cv** %cv198, align 8
  br label %if.end222

if.end222:                                        ; preds = %if.else220, %if.end219
  %166 = load i8*, i8** %proto, align 8
  %tobool223 = icmp ne i8* %166, null
  br i1 %tobool223, label %if.then224, label %if.end230

if.then224:                                       ; preds = %if.end222
  %167 = load %struct.cv*, %struct.cv** %cv198, align 8
  %168 = bitcast %struct.cv* %167 to i8*
  %169 = bitcast i8* %168 to %struct.sv*
  %170 = load i8*, i8** %proto, align 8
  %171 = load i64, i64* %protolen, align 8
  call void @Perl_sv_usepvn_flags(%struct.sv* %169, i8* %170, i64 %171, i32 256)
  %172 = load i32, i32* %proto_utf8, align 4
  %tobool225 = icmp ne i32 %172, 0
  br i1 %tobool225, label %if.then226, label %if.end229

if.then226:                                       ; preds = %if.then224
  %173 = load %struct.cv*, %struct.cv** %cv198, align 8
  %174 = bitcast %struct.cv* %173 to i8*
  %175 = bitcast i8* %174 to %struct.sv*
  %sv_flags227 = getelementptr inbounds %struct.sv, %struct.sv* %175, i32 0, i32 2
  %176 = load i32, i32* %sv_flags227, align 4
  %or228 = or i32 %176, 536870912
  store i32 %or228, i32* %sv_flags227, align 4
  br label %if.end229

if.end229:                                        ; preds = %if.then226, %if.then224
  br label %if.end230

if.end230:                                        ; preds = %if.end229, %if.end222
  br label %if.end231

if.end231:                                        ; preds = %if.end230, %if.else195
  br label %if.end232

if.end232:                                        ; preds = %if.end231, %if.end194
  ret void
}

declare dso_local %struct.sv* @Perl_newSVpvn(i8*, i64) #1

declare dso_local void @Perl_safesysfree(i8*) #1

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.sv* @Perl_gv_const_sv(%struct.gv* %gv) #0 {
entry:
  %retval = alloca %struct.sv*, align 8
  %gv.addr = alloca %struct.gv*, align 8
  store %struct.gv* %gv, %struct.gv** %gv.addr, align 8
  %0 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_flags = getelementptr inbounds %struct.gv, %struct.gv* %0, i32 0, i32 2
  %1 = load i32, i32* %sv_flags, align 4
  %and = and i32 %1, 255
  %cmp = icmp eq i32 %and, 9
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %2 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_u = getelementptr inbounds %struct.gv, %struct.gv* %2, i32 0, i32 3
  %svu_gp = bitcast %union.anon.6* %sv_u to %struct.gp**
  %3 = load %struct.gp*, %struct.gp** %svu_gp, align 8
  %add.ptr = getelementptr inbounds %struct.gp, %struct.gp* %3, i64 0
  %gp_cvgen = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr, i32 0, i32 3
  %4 = load i32, i32* %gp_cvgen, align 8
  %tobool = icmp ne i32 %4, 0
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then
  br label %cond.end

cond.false:                                       ; preds = %if.then
  %5 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_u1 = getelementptr inbounds %struct.gv, %struct.gv* %5, i32 0, i32 3
  %svu_gp2 = bitcast %union.anon.6* %sv_u1 to %struct.gp**
  %6 = load %struct.gp*, %struct.gp** %svu_gp2, align 8
  %add.ptr3 = getelementptr inbounds %struct.gp, %struct.gp* %6, i64 0
  %gp_cv = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr3, i32 0, i32 2
  %7 = load %struct.cv*, %struct.cv** %gp_cv, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.cv* [ null, %cond.true ], [ %7, %cond.false ]
  %call = call %struct.sv* @Perl_cv_const_sv(%struct.cv* %cond)
  store %struct.sv* %call, %struct.sv** %retval, align 8
  br label %return

if.end:                                           ; preds = %entry
  %8 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_flags4 = getelementptr inbounds %struct.gv, %struct.gv* %8, i32 0, i32 2
  %9 = load i32, i32* %sv_flags4, align 4
  %and5 = and i32 %9, 2048
  %tobool6 = icmp ne i32 %and5, 0
  br i1 %tobool6, label %land.lhs.true, label %cond.false20

land.lhs.true:                                    ; preds = %if.end
  %10 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_u7 = getelementptr inbounds %struct.gv, %struct.gv* %10, i32 0, i32 3
  %svu_rv = bitcast %union.anon.6* %sv_u7 to %struct.sv**
  %11 = load %struct.sv*, %struct.sv** %svu_rv, align 8
  %sv_flags8 = getelementptr inbounds %struct.sv, %struct.sv* %11, i32 0, i32 2
  %12 = load i32, i32* %sv_flags8, align 4
  %and9 = and i32 %12, 255
  %cmp10 = icmp ne i32 %and9, 11
  br i1 %cmp10, label %land.lhs.true11, label %cond.false20

land.lhs.true11:                                  ; preds = %land.lhs.true
  %13 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_u12 = getelementptr inbounds %struct.gv, %struct.gv* %13, i32 0, i32 3
  %svu_rv13 = bitcast %union.anon.6* %sv_u12 to %struct.sv**
  %14 = load %struct.sv*, %struct.sv** %svu_rv13, align 8
  %sv_flags14 = getelementptr inbounds %struct.sv, %struct.sv* %14, i32 0, i32 2
  %15 = load i32, i32* %sv_flags14, align 4
  %and15 = and i32 %15, 255
  %cmp16 = icmp ne i32 %and15, 13
  br i1 %cmp16, label %cond.true17, label %cond.false20

cond.true17:                                      ; preds = %land.lhs.true11
  %16 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_u18 = getelementptr inbounds %struct.gv, %struct.gv* %16, i32 0, i32 3
  %svu_rv19 = bitcast %union.anon.6* %sv_u18 to %struct.sv**
  %17 = load %struct.sv*, %struct.sv** %svu_rv19, align 8
  br label %cond.end21

cond.false20:                                     ; preds = %land.lhs.true11, %land.lhs.true, %if.end
  br label %cond.end21

cond.end21:                                       ; preds = %cond.false20, %cond.true17
  %cond22 = phi %struct.sv* [ %17, %cond.true17 ], [ null, %cond.false20 ]
  store %struct.sv* %cond22, %struct.sv** %retval, align 8
  br label %return

return:                                           ; preds = %cond.end21, %cond.end
  %18 = load %struct.sv*, %struct.sv** %retval, align 8
  ret %struct.sv* %18
}

declare dso_local %struct.sv* @Perl_cv_const_sv(%struct.cv*) #1

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.gp* @Perl_newGP(%struct.gv* %gv) #0 {
entry:
  %gv.addr = alloca %struct.gv*, align 8
  %gp = alloca %struct.gp*, align 8
  %hash = alloca i32, align 4
  %file = alloca i8*, align 8
  %len = alloca i64, align 8
  %filegv = alloca %struct.gv*, align 8
  store %struct.gv* %gv, %struct.gv** %gv.addr, align 8
  %call = call i8* @Perl_safesyscalloc(i64 1, i64 80)
  %0 = bitcast i8* %call to %struct.gp*
  store %struct.gp* %0, %struct.gp** %gp, align 8
  %1 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %2 = load %struct.gp*, %struct.gp** %gp, align 8
  %gp_egv = getelementptr inbounds %struct.gp, %struct.gp* %2, i32 0, i32 8
  store %struct.gv* %1, %struct.gv** %gp_egv, align 8
  %3 = load %struct.cop*, %struct.cop** @PL_curcop, align 8
  %tobool = icmp ne %struct.cop* %3, null
  br i1 %tobool, label %if.then, label %if.else6

if.then:                                          ; preds = %entry
  %4 = load %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line = getelementptr inbounds %struct.cop, %struct.cop* %4, i32 0, i32 7
  %5 = load i32, i32* %cop_line, align 4
  %6 = load %struct.gp*, %struct.gp** %gp, align 8
  %gp_line = getelementptr inbounds %struct.gp, %struct.gp* %6, i32 0, i32 9
  %bf.load = load i32, i32* %gp_line, align 8
  %bf.value = and i32 %5, 2147483647
  %bf.clear = and i32 %bf.load, -2147483648
  %bf.set = or i32 %bf.clear, %bf.value
  store i32 %bf.set, i32* %gp_line, align 8
  %7 = load %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_filegv = getelementptr inbounds %struct.cop, %struct.cop* %7, i32 0, i32 9
  %8 = load %struct.gv*, %struct.gv** %cop_filegv, align 8
  store %struct.gv* %8, %struct.gv** %filegv, align 8
  %9 = load %struct.gv*, %struct.gv** %filegv, align 8
  %tobool1 = icmp ne %struct.gv* %9, null
  br i1 %tobool1, label %if.then2, label %if.else

if.then2:                                         ; preds = %if.then
  %10 = load %struct.gv*, %struct.gv** %filegv, align 8
  %sv_any = getelementptr inbounds %struct.gv, %struct.gv* %10, i32 0, i32 0
  %11 = load %struct.xpvgv*, %struct.xpvgv** %sv_any, align 8
  %xiv_u = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %11, i32 0, i32 4
  %xivu_namehek = bitcast %union._xivu* %xiv_u to %struct.hek**
  %12 = load %struct.hek*, %struct.hek** %xivu_namehek, align 8
  %hek_key = getelementptr inbounds %struct.hek, %struct.hek* %12, i32 0, i32 2
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %hek_key, i64 0, i64 0
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay, i64 2
  store i8* %add.ptr, i8** %file, align 8
  %13 = load %struct.gv*, %struct.gv** %filegv, align 8
  %sv_any3 = getelementptr inbounds %struct.gv, %struct.gv* %13, i32 0, i32 0
  %14 = load %struct.xpvgv*, %struct.xpvgv** %sv_any3, align 8
  %xiv_u4 = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %14, i32 0, i32 4
  %xivu_namehek5 = bitcast %union._xivu* %xiv_u4 to %struct.hek**
  %15 = load %struct.hek*, %struct.hek** %xivu_namehek5, align 8
  %hek_len = getelementptr inbounds %struct.hek, %struct.hek* %15, i32 0, i32 1
  %16 = load i32, i32* %hek_len, align 4
  %sub = sub nsw i32 %16, 2
  %conv = sext i32 %sub to i64
  store i64 %conv, i64* %len, align 8
  br label %if.end

if.else:                                          ; preds = %if.then
  br label %no_file

if.end:                                           ; preds = %if.then2
  br label %if.end7

if.else6:                                         ; preds = %entry
  br label %no_file

no_file:                                          ; preds = %if.else6, %if.else
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.7, i64 0, i64 0), i8** %file, align 8
  store i64 0, i64* %len, align 8
  br label %if.end7

if.end7:                                          ; preds = %no_file, %if.end
  %17 = load i8*, i8** %file, align 8
  %18 = load i64, i64* %len, align 8
  %call8 = call i32 @S_perl_hash_one_at_a_time_hard(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.8, i64 0, i64 0), i8* %17, i64 %18)
  store i32 %call8, i32* %hash, align 4
  %19 = load i8*, i8** %file, align 8
  %20 = load i64, i64* %len, align 8
  %conv9 = trunc i64 %20 to i32
  %21 = load i32, i32* %hash, align 4
  %call10 = call %struct.hek* @Perl_share_hek(i8* %19, i32 %conv9, i32 %21)
  %22 = load %struct.gp*, %struct.gp** %gp, align 8
  %gp_file_hek = getelementptr inbounds %struct.gp, %struct.gp* %22, i32 0, i32 10
  store %struct.hek* %call10, %struct.hek** %gp_file_hek, align 8
  %23 = load %struct.gp*, %struct.gp** %gp, align 8
  %gp_refcnt = getelementptr inbounds %struct.gp, %struct.gp* %23, i32 0, i32 4
  store i32 1, i32* %gp_refcnt, align 4
  %24 = load %struct.gp*, %struct.gp** %gp, align 8
  ret %struct.gp* %24
}

declare dso_local i8* @Perl_safesyscalloc(i64, i64) #1

; Function Attrs: noinline nounwind uwtable
define internal i32 @S_perl_hash_one_at_a_time_hard(i8* %seed, i8* %str, i64 %len) #0 {
entry:
  %seed.addr = alloca i8*, align 8
  %str.addr = alloca i8*, align 8
  %len.addr = alloca i64, align 8
  %end = alloca i8*, align 8
  %hash = alloca i32, align 4
  store i8* %seed, i8** %seed.addr, align 8
  store i8* %str, i8** %str.addr, align 8
  store i64 %len, i64* %len.addr, align 8
  %0 = load i8*, i8** %str.addr, align 8
  %1 = load i64, i64* %len.addr, align 8
  %add.ptr = getelementptr inbounds i8, i8* %0, i64 %1
  store i8* %add.ptr, i8** %end, align 8
  %2 = load i8*, i8** %seed.addr, align 8
  %3 = bitcast i8* %2 to i32*
  %4 = load i32, i32* %3, align 4
  %5 = load i64, i64* %len.addr, align 8
  %conv = trunc i64 %5 to i32
  %add = add i32 %4, %conv
  store i32 %add, i32* %hash, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %entry
  %6 = load i8*, i8** %str.addr, align 8
  %7 = load i8*, i8** %end, align 8
  %cmp = icmp ult i8* %6, %7
  br i1 %cmp, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %8 = load i32, i32* %hash, align 4
  %shl = shl i32 %8, 10
  %9 = load i32, i32* %hash, align 4
  %add2 = add i32 %9, %shl
  store i32 %add2, i32* %hash, align 4
  %10 = load i32, i32* %hash, align 4
  %shr = lshr i32 %10, 6
  %11 = load i32, i32* %hash, align 4
  %xor = xor i32 %11, %shr
  store i32 %xor, i32* %hash, align 4
  %12 = load i8*, i8** %str.addr, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %12, i32 1
  store i8* %incdec.ptr, i8** %str.addr, align 8
  %13 = load i8, i8* %12, align 1
  %conv3 = zext i8 %13 to i32
  %14 = load i32, i32* %hash, align 4
  %add4 = add i32 %14, %conv3
  store i32 %add4, i32* %hash, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %15 = load i32, i32* %hash, align 4
  %shl5 = shl i32 %15, 10
  %16 = load i32, i32* %hash, align 4
  %add6 = add i32 %16, %shl5
  store i32 %add6, i32* %hash, align 4
  %17 = load i32, i32* %hash, align 4
  %shr7 = lshr i32 %17, 6
  %18 = load i32, i32* %hash, align 4
  %xor8 = xor i32 %18, %shr7
  store i32 %xor8, i32* %hash, align 4
  %19 = load i8*, i8** %seed.addr, align 8
  %arrayidx = getelementptr inbounds i8, i8* %19, i64 4
  %20 = load i8, i8* %arrayidx, align 1
  %conv9 = zext i8 %20 to i32
  %21 = load i32, i32* %hash, align 4
  %add10 = add i32 %21, %conv9
  store i32 %add10, i32* %hash, align 4
  %22 = load i32, i32* %hash, align 4
  %shl11 = shl i32 %22, 10
  %23 = load i32, i32* %hash, align 4
  %add12 = add i32 %23, %shl11
  store i32 %add12, i32* %hash, align 4
  %24 = load i32, i32* %hash, align 4
  %shr13 = lshr i32 %24, 6
  %25 = load i32, i32* %hash, align 4
  %xor14 = xor i32 %25, %shr13
  store i32 %xor14, i32* %hash, align 4
  %26 = load i8*, i8** %seed.addr, align 8
  %arrayidx15 = getelementptr inbounds i8, i8* %26, i64 5
  %27 = load i8, i8* %arrayidx15, align 1
  %conv16 = zext i8 %27 to i32
  %28 = load i32, i32* %hash, align 4
  %add17 = add i32 %28, %conv16
  store i32 %add17, i32* %hash, align 4
  %29 = load i32, i32* %hash, align 4
  %shl18 = shl i32 %29, 10
  %30 = load i32, i32* %hash, align 4
  %add19 = add i32 %30, %shl18
  store i32 %add19, i32* %hash, align 4
  %31 = load i32, i32* %hash, align 4
  %shr20 = lshr i32 %31, 6
  %32 = load i32, i32* %hash, align 4
  %xor21 = xor i32 %32, %shr20
  store i32 %xor21, i32* %hash, align 4
  %33 = load i8*, i8** %seed.addr, align 8
  %arrayidx22 = getelementptr inbounds i8, i8* %33, i64 6
  %34 = load i8, i8* %arrayidx22, align 1
  %conv23 = zext i8 %34 to i32
  %35 = load i32, i32* %hash, align 4
  %add24 = add i32 %35, %conv23
  store i32 %add24, i32* %hash, align 4
  %36 = load i32, i32* %hash, align 4
  %shl25 = shl i32 %36, 10
  %37 = load i32, i32* %hash, align 4
  %add26 = add i32 %37, %shl25
  store i32 %add26, i32* %hash, align 4
  %38 = load i32, i32* %hash, align 4
  %shr27 = lshr i32 %38, 6
  %39 = load i32, i32* %hash, align 4
  %xor28 = xor i32 %39, %shr27
  store i32 %xor28, i32* %hash, align 4
  %40 = load i8*, i8** %seed.addr, align 8
  %arrayidx29 = getelementptr inbounds i8, i8* %40, i64 7
  %41 = load i8, i8* %arrayidx29, align 1
  %conv30 = zext i8 %41 to i32
  %42 = load i32, i32* %hash, align 4
  %add31 = add i32 %42, %conv30
  store i32 %add31, i32* %hash, align 4
  %43 = load i32, i32* %hash, align 4
  %shl32 = shl i32 %43, 10
  %44 = load i32, i32* %hash, align 4
  %add33 = add i32 %44, %shl32
  store i32 %add33, i32* %hash, align 4
  %45 = load i32, i32* %hash, align 4
  %shr34 = lshr i32 %45, 6
  %46 = load i32, i32* %hash, align 4
  %xor35 = xor i32 %46, %shr34
  store i32 %xor35, i32* %hash, align 4
  %47 = load i32, i32* %hash, align 4
  %shl36 = shl i32 %47, 3
  %48 = load i32, i32* %hash, align 4
  %add37 = add i32 %48, %shl36
  store i32 %add37, i32* %hash, align 4
  %49 = load i32, i32* %hash, align 4
  %shr38 = lshr i32 %49, 11
  %50 = load i32, i32* %hash, align 4
  %xor39 = xor i32 %50, %shr38
  store i32 %xor39, i32* %hash, align 4
  %51 = load i32, i32* %hash, align 4
  %52 = load i32, i32* %hash, align 4
  %shl40 = shl i32 %52, 15
  %add41 = add i32 %51, %shl40
  ret i32 %add41
}

declare dso_local %struct.hek* @Perl_share_hek(i8*, i32, i32) #1

; Function Attrs: noinline nounwind uwtable
define dso_local void @Perl_cvgv_set(%struct.cv* %cv, %struct.gv* %gv) #0 {
entry:
  %cv.addr = alloca %struct.cv*, align 8
  %gv.addr = alloca %struct.gv*, align 8
  %oldgv = alloca %struct.gv*, align 8
  %hek = alloca %struct.hek*, align 8
  store %struct.cv* %cv, %struct.cv** %cv.addr, align 8
  store %struct.gv* %gv, %struct.gv** %gv.addr, align 8
  %0 = load %struct.cv*, %struct.cv** %cv.addr, align 8
  %sv_any = getelementptr inbounds %struct.cv, %struct.cv* %0, i32 0, i32 0
  %1 = load %struct.xpvcv*, %struct.xpvcv** %sv_any, align 8
  %2 = bitcast %struct.xpvcv* %1 to i8*
  %3 = bitcast i8* %2 to %struct.xpvcv*
  %xcv_flags = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %3, i32 0, i32 12
  %4 = load i32, i32* %xcv_flags, align 4
  %and = and i32 %4, 32768
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  br label %cond.end

cond.false:                                       ; preds = %entry
  %5 = load %struct.cv*, %struct.cv** %cv.addr, align 8
  %sv_any1 = getelementptr inbounds %struct.cv, %struct.cv* %5, i32 0, i32 0
  %6 = load %struct.xpvcv*, %struct.xpvcv** %sv_any1, align 8
  %xcv_gv_u = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %6, i32 0, i32 7
  %xcv_gv = bitcast %union.anon.10* %xcv_gv_u to %struct.gv**
  %7 = load %struct.gv*, %struct.gv** %xcv_gv, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.gv* [ null, %cond.true ], [ %7, %cond.false ]
  store %struct.gv* %cond, %struct.gv** %oldgv, align 8
  %8 = load %struct.gv*, %struct.gv** %oldgv, align 8
  %9 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %cmp = icmp eq %struct.gv* %8, %9
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %cond.end
  br label %if.end55

if.end:                                           ; preds = %cond.end
  %10 = load %struct.gv*, %struct.gv** %oldgv, align 8
  %tobool2 = icmp ne %struct.gv* %10, null
  br i1 %tobool2, label %if.then3, label %if.else13

if.then3:                                         ; preds = %if.end
  %11 = load %struct.cv*, %struct.cv** %cv.addr, align 8
  %sv_any4 = getelementptr inbounds %struct.cv, %struct.cv* %11, i32 0, i32 0
  %12 = load %struct.xpvcv*, %struct.xpvcv** %sv_any4, align 8
  %13 = bitcast %struct.xpvcv* %12 to i8*
  %14 = bitcast i8* %13 to %struct.xpvcv*
  %xcv_flags5 = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %14, i32 0, i32 12
  %15 = load i32, i32* %xcv_flags5, align 4
  %and6 = and i32 %15, 1024
  %tobool7 = icmp ne i32 %and6, 0
  br i1 %tobool7, label %if.then8, label %if.else

if.then8:                                         ; preds = %if.then3
  %16 = load %struct.gv*, %struct.gv** %oldgv, align 8
  %17 = bitcast %struct.gv* %16 to i8*
  %18 = bitcast i8* %17 to %struct.sv*
  call void @S_SvREFCNT_dec_NN(%struct.sv* %18)
  %19 = load %struct.cv*, %struct.cv** %cv.addr, align 8
  %sv_any9 = getelementptr inbounds %struct.cv, %struct.cv* %19, i32 0, i32 0
  %20 = load %struct.xpvcv*, %struct.xpvcv** %sv_any9, align 8
  %21 = bitcast %struct.xpvcv* %20 to i8*
  %22 = bitcast i8* %21 to %struct.xpvcv*
  %xcv_flags10 = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %22, i32 0, i32 12
  %23 = load i32, i32* %xcv_flags10, align 4
  %and11 = and i32 %23, -1025
  store i32 %and11, i32* %xcv_flags10, align 4
  br label %if.end12

if.else:                                          ; preds = %if.then3
  %24 = load %struct.gv*, %struct.gv** %oldgv, align 8
  %25 = bitcast %struct.gv* %24 to i8*
  %26 = bitcast i8* %25 to %struct.sv*
  %27 = load %struct.cv*, %struct.cv** %cv.addr, align 8
  %28 = bitcast %struct.cv* %27 to i8*
  %29 = bitcast i8* %28 to %struct.sv*
  call void @Perl_sv_del_backref(%struct.sv* %26, %struct.sv* %29)
  br label %if.end12

if.end12:                                         ; preds = %if.else, %if.then8
  br label %if.end20

if.else13:                                        ; preds = %if.end
  %30 = load %struct.cv*, %struct.cv** %cv.addr, align 8
  %call = call %struct.hek* @CvNAME_HEK(%struct.cv* %30)
  store %struct.hek* %call, %struct.hek** %hek, align 8
  %tobool14 = icmp ne %struct.hek* %call, null
  br i1 %tobool14, label %if.then15, label %if.end19

if.then15:                                        ; preds = %if.else13
  %31 = load %struct.hek*, %struct.hek** %hek, align 8
  call void @Perl_unshare_hek(%struct.hek* %31)
  %32 = load %struct.cv*, %struct.cv** %cv.addr, align 8
  %sv_any16 = getelementptr inbounds %struct.cv, %struct.cv* %32, i32 0, i32 0
  %33 = load %struct.xpvcv*, %struct.xpvcv** %sv_any16, align 8
  %34 = bitcast %struct.xpvcv* %33 to i8*
  %35 = bitcast i8* %34 to %struct.xpvcv*
  %xcv_flags17 = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %35, i32 0, i32 12
  %36 = load i32, i32* %xcv_flags17, align 4
  %and18 = and i32 %36, -65537
  store i32 %and18, i32* %xcv_flags17, align 4
  br label %if.end19

if.end19:                                         ; preds = %if.then15, %if.else13
  br label %if.end20

if.end20:                                         ; preds = %if.end19, %if.end12
  %37 = load %struct.cv*, %struct.cv** %cv.addr, align 8
  %sv_any21 = getelementptr inbounds %struct.cv, %struct.cv* %37, i32 0, i32 0
  %38 = load %struct.xpvcv*, %struct.xpvcv** %sv_any21, align 8
  %39 = bitcast %struct.xpvcv* %38 to i8*
  %40 = bitcast i8* %39 to %struct.xpvcv*
  %xcv_flags22 = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %40, i32 0, i32 12
  %41 = load i32, i32* %xcv_flags22, align 4
  %and23 = and i32 %41, -32769
  store i32 %and23, i32* %xcv_flags22, align 4
  %42 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %43 = load %struct.cv*, %struct.cv** %cv.addr, align 8
  %sv_any24 = getelementptr inbounds %struct.cv, %struct.cv* %43, i32 0, i32 0
  %44 = load %struct.xpvcv*, %struct.xpvcv** %sv_any24, align 8
  %xcv_gv_u25 = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %44, i32 0, i32 7
  %xcv_gv26 = bitcast %union.anon.10* %xcv_gv_u25 to %struct.gv**
  store %struct.gv* %42, %struct.gv** %xcv_gv26, align 8
  %45 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %tobool27 = icmp ne %struct.gv* %45, null
  br i1 %tobool27, label %if.end29, label %if.then28

if.then28:                                        ; preds = %if.end20
  br label %if.end55

if.end29:                                         ; preds = %if.end20
  %46 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_flags = getelementptr inbounds %struct.gv, %struct.gv* %46, i32 0, i32 2
  %47 = load i32, i32* %sv_flags, align 4
  %and30 = and i32 %47, 49152
  %cmp31 = icmp eq i32 %and30, 32768
  br i1 %cmp31, label %land.lhs.true, label %if.else52

land.lhs.true:                                    ; preds = %if.end29
  %48 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_flags32 = getelementptr inbounds %struct.gv, %struct.gv* %48, i32 0, i32 2
  %49 = load i32, i32* %sv_flags32, align 4
  %and33 = and i32 %49, 255
  %cmp34 = icmp eq i32 %and33, 9
  br i1 %cmp34, label %land.lhs.true38, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true
  %50 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_flags35 = getelementptr inbounds %struct.gv, %struct.gv* %50, i32 0, i32 2
  %51 = load i32, i32* %sv_flags35, align 4
  %and36 = and i32 %51, 255
  %cmp37 = icmp eq i32 %and36, 10
  br i1 %cmp37, label %land.lhs.true38, label %if.else52

land.lhs.true38:                                  ; preds = %lor.lhs.false, %land.lhs.true
  %52 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_u = getelementptr inbounds %struct.gv, %struct.gv* %52, i32 0, i32 3
  %svu_gp = bitcast %union.anon.6* %sv_u to %struct.gp**
  %53 = load %struct.gp*, %struct.gp** %svu_gp, align 8
  %add.ptr = getelementptr inbounds %struct.gp, %struct.gp* %53, i64 0
  %tobool39 = icmp ne %struct.gp* %add.ptr, null
  br i1 %tobool39, label %land.lhs.true40, label %if.else52

land.lhs.true40:                                  ; preds = %land.lhs.true38
  %54 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_u41 = getelementptr inbounds %struct.gv, %struct.gv* %54, i32 0, i32 3
  %svu_gp42 = bitcast %union.anon.6* %sv_u41 to %struct.gp**
  %55 = load %struct.gp*, %struct.gp** %svu_gp42, align 8
  %add.ptr43 = getelementptr inbounds %struct.gp, %struct.gp* %55, i64 0
  %gp_cv = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr43, i32 0, i32 2
  %56 = load %struct.cv*, %struct.cv** %gp_cv, align 8
  %add.ptr44 = getelementptr inbounds %struct.cv, %struct.cv* %56, i64 0
  %57 = load %struct.cv*, %struct.cv** %cv.addr, align 8
  %cmp45 = icmp eq %struct.cv* %add.ptr44, %57
  br i1 %cmp45, label %if.then51, label %lor.lhs.false46

lor.lhs.false46:                                  ; preds = %land.lhs.true40
  %58 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_u47 = getelementptr inbounds %struct.gv, %struct.gv* %58, i32 0, i32 3
  %svu_gp48 = bitcast %union.anon.6* %sv_u47 to %struct.gp**
  %59 = load %struct.gp*, %struct.gp** %svu_gp48, align 8
  %add.ptr49 = getelementptr inbounds %struct.gp, %struct.gp* %59, i64 0
  %gp_form = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr49, i32 0, i32 7
  %60 = load %struct.cv*, %struct.cv** %gp_form, align 8
  %61 = load %struct.cv*, %struct.cv** %cv.addr, align 8
  %cmp50 = icmp eq %struct.cv* %60, %61
  br i1 %cmp50, label %if.then51, label %if.else52

if.then51:                                        ; preds = %lor.lhs.false46, %land.lhs.true40
  %62 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %63 = bitcast %struct.gv* %62 to i8*
  %64 = bitcast i8* %63 to %struct.sv*
  %65 = load %struct.cv*, %struct.cv** %cv.addr, align 8
  %66 = bitcast %struct.cv* %65 to i8*
  %67 = bitcast i8* %66 to %struct.sv*
  call void @Perl_sv_add_backref(%struct.sv* %64, %struct.sv* %67)
  br label %if.end55

if.else52:                                        ; preds = %lor.lhs.false46, %land.lhs.true38, %lor.lhs.false, %if.end29
  %68 = load %struct.cv*, %struct.cv** %cv.addr, align 8
  %sv_any53 = getelementptr inbounds %struct.cv, %struct.cv* %68, i32 0, i32 0
  %69 = load %struct.xpvcv*, %struct.xpvcv** %sv_any53, align 8
  %70 = bitcast %struct.xpvcv* %69 to i8*
  %71 = bitcast i8* %70 to %struct.xpvcv*
  %xcv_flags54 = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %71, i32 0, i32 12
  %72 = load i32, i32* %xcv_flags54, align 4
  %or = or i32 %72, 1024
  store i32 %or, i32* %xcv_flags54, align 4
  %73 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %74 = bitcast %struct.gv* %73 to i8*
  %75 = bitcast i8* %74 to %struct.sv*
  %sv_refcnt = getelementptr inbounds %struct.sv, %struct.sv* %75, i32 0, i32 1
  %76 = load i32, i32* %sv_refcnt, align 8
  %inc = add i32 %76, 1
  store i32 %inc, i32* %sv_refcnt, align 8
  br label %if.end55

if.end55:                                         ; preds = %if.then, %if.then28, %if.else52, %if.then51
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @S_SvREFCNT_dec_NN(%struct.sv* %sv) #0 {
entry:
  %sv.addr = alloca %struct.sv*, align 8
  %rc = alloca i32, align 4
  store %struct.sv* %sv, %struct.sv** %sv.addr, align 8
  %0 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_refcnt = getelementptr inbounds %struct.sv, %struct.sv* %0, i32 0, i32 1
  %1 = load i32, i32* %sv_refcnt, align 8
  store i32 %1, i32* %rc, align 4
  %2 = load i32, i32* %rc, align 4
  %cmp = icmp ugt i32 %2, 1
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  br i1 true, label %if.then, label %if.else

cond.false:                                       ; preds = %entry
  br i1 false, label %if.then, label %if.else

if.then:                                          ; preds = %cond.false, %cond.true
  %3 = load i32, i32* %rc, align 4
  %sub = sub i32 %3, 1
  %4 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_refcnt1 = getelementptr inbounds %struct.sv, %struct.sv* %4, i32 0, i32 1
  store i32 %sub, i32* %sv_refcnt1, align 8
  br label %if.end

if.else:                                          ; preds = %cond.false, %cond.true
  %5 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %6 = load i32, i32* %rc, align 4
  call void @Perl_sv_free2(%struct.sv* %5, i32 %6)
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void
}

declare dso_local void @Perl_sv_del_backref(%struct.sv*, %struct.sv*) #1

; Function Attrs: noinline nounwind uwtable
define internal %struct.hek* @CvNAME_HEK(%struct.cv* %sv) #0 {
entry:
  %sv.addr = alloca %struct.cv*, align 8
  store %struct.cv* %sv, %struct.cv** %sv.addr, align 8
  %0 = load %struct.cv*, %struct.cv** %sv.addr, align 8
  %sv_any = getelementptr inbounds %struct.cv, %struct.cv* %0, i32 0, i32 0
  %1 = load %struct.xpvcv*, %struct.xpvcv** %sv_any, align 8
  %2 = bitcast %struct.xpvcv* %1 to i8*
  %3 = bitcast i8* %2 to %struct.xpvcv*
  %xcv_flags = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %3, i32 0, i32 12
  %4 = load i32, i32* %xcv_flags, align 4
  %and = and i32 %4, 32768
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %5 = load %struct.cv*, %struct.cv** %sv.addr, align 8
  %sv_any1 = getelementptr inbounds %struct.cv, %struct.cv* %5, i32 0, i32 0
  %6 = load %struct.xpvcv*, %struct.xpvcv** %sv_any1, align 8
  %7 = bitcast %struct.xpvcv* %6 to i8*
  %8 = bitcast i8* %7 to %struct.xpvcv*
  %xcv_gv_u = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %8, i32 0, i32 7
  %xcv_hek = bitcast %union.anon.10* %xcv_gv_u to %struct.hek**
  %9 = load %struct.hek*, %struct.hek** %xcv_hek, align 8
  br label %cond.end

cond.false:                                       ; preds = %entry
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.hek* [ %9, %cond.true ], [ null, %cond.false ]
  ret %struct.hek* %cond
}

declare dso_local void @Perl_unshare_hek(%struct.hek*) #1

declare dso_local void @Perl_sv_add_backref(%struct.sv*, %struct.sv*) #1

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.gv* @Perl_cvgv_from_hek(%struct.cv* %cv) #0 {
entry:
  %retval = alloca %struct.gv*, align 8
  %cv.addr = alloca %struct.cv*, align 8
  %gv = alloca %struct.gv*, align 8
  %svp = alloca %struct.sv**, align 8
  store %struct.cv* %cv, %struct.cv** %cv.addr, align 8
  %0 = load %struct.cv*, %struct.cv** %cv.addr, align 8
  %sv_any = getelementptr inbounds %struct.cv, %struct.cv* %0, i32 0, i32 0
  %1 = load %struct.xpvcv*, %struct.xpvcv** %sv_any, align 8
  %2 = bitcast %struct.xpvcv* %1 to i8*
  %3 = bitcast i8* %2 to %struct.xpvcv*
  %xcv_stash = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %3, i32 0, i32 4
  %4 = load %struct.hv*, %struct.hv** %xcv_stash, align 8
  %add.ptr = getelementptr inbounds %struct.hv, %struct.hv* %4, i64 0
  %tobool = icmp ne %struct.hv* %add.ptr, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store %struct.gv* null, %struct.gv** %retval, align 8
  br label %return

if.end:                                           ; preds = %entry
  %5 = load %struct.cv*, %struct.cv** %cv.addr, align 8
  %sv_any1 = getelementptr inbounds %struct.cv, %struct.cv* %5, i32 0, i32 0
  %6 = load %struct.xpvcv*, %struct.xpvcv** %sv_any1, align 8
  %7 = bitcast %struct.xpvcv* %6 to i8*
  %8 = bitcast i8* %7 to %struct.xpvcv*
  %xcv_stash2 = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %8, i32 0, i32 4
  %9 = load %struct.hv*, %struct.hv** %xcv_stash2, align 8
  %add.ptr3 = getelementptr inbounds %struct.hv, %struct.hv* %9, i64 0
  %10 = load %struct.cv*, %struct.cv** %cv.addr, align 8
  %call = call %struct.hek* @CvNAME_HEK(%struct.cv* %10)
  %hek_key = getelementptr inbounds %struct.hek, %struct.hek* %call, i32 0, i32 2
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %hek_key, i64 0, i64 0
  %11 = load %struct.cv*, %struct.cv** %cv.addr, align 8
  %call4 = call %struct.hek* @CvNAME_HEK(%struct.cv* %11)
  %hek_len = getelementptr inbounds %struct.hek, %struct.hek* %call4, i32 0, i32 1
  %12 = load i32, i32* %hek_len, align 4
  %conv = sext i32 %12 to i64
  %13 = load %struct.cv*, %struct.cv** %cv.addr, align 8
  %call5 = call %struct.hek* @CvNAME_HEK(%struct.cv* %13)
  %hek_key6 = getelementptr inbounds %struct.hek, %struct.hek* %call5, i32 0, i32 2
  %arraydecay7 = getelementptr inbounds [1 x i8], [1 x i8]* %hek_key6, i64 0, i64 0
  %14 = load %struct.cv*, %struct.cv** %cv.addr, align 8
  %call8 = call %struct.hek* @CvNAME_HEK(%struct.cv* %14)
  %hek_len9 = getelementptr inbounds %struct.hek, %struct.hek* %call8, i32 0, i32 1
  %15 = load i32, i32* %hek_len9, align 4
  %idx.ext = sext i32 %15 to i64
  %add.ptr10 = getelementptr inbounds i8, i8* %arraydecay7, i64 %idx.ext
  %add.ptr11 = getelementptr inbounds i8, i8* %add.ptr10, i64 1
  %16 = load i8, i8* %add.ptr11, align 1
  %conv12 = zext i8 %16 to i32
  %and = and i32 %conv12, 1
  %17 = load %struct.cv*, %struct.cv** %cv.addr, align 8
  %call13 = call %struct.hek* @CvNAME_HEK(%struct.cv* %17)
  %hek_hash = getelementptr inbounds %struct.hek, %struct.hek* %call13, i32 0, i32 0
  %18 = load i32, i32* %hek_hash, align 4
  %call14 = call i8* @Perl_hv_common(%struct.hv* %add.ptr3, %struct.sv* null, i8* %arraydecay, i64 %conv, i32 %and, i32 32, %struct.sv* null, i32 %18)
  %19 = bitcast i8* %call14 to %struct.sv**
  store %struct.sv** %19, %struct.sv*** %svp, align 8
  %20 = load %struct.sv**, %struct.sv*** %svp, align 8
  %tobool15 = icmp ne %struct.sv** %20, null
  br i1 %tobool15, label %land.lhs.true, label %cond.false

land.lhs.true:                                    ; preds = %if.end
  %21 = load %struct.sv**, %struct.sv*** %svp, align 8
  %22 = load %struct.sv*, %struct.sv** %21, align 8
  %tobool16 = icmp ne %struct.sv* %22, null
  br i1 %tobool16, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true
  %23 = load %struct.sv**, %struct.sv*** %svp, align 8
  %24 = load %struct.sv*, %struct.sv** %23, align 8
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true, %if.end
  %call17 = call %struct.sv* @Perl_newSV(i64 0)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.sv* [ %24, %cond.true ], [ %call17, %cond.false ]
  %25 = bitcast %struct.sv* %cond to i8*
  %26 = bitcast i8* %25 to %struct.gv*
  store %struct.gv* %26, %struct.gv** %gv, align 8
  %27 = load %struct.gv*, %struct.gv** %gv, align 8
  %sv_flags = getelementptr inbounds %struct.gv, %struct.gv* %27, i32 0, i32 2
  %28 = load i32, i32* %sv_flags, align 4
  %and18 = and i32 %28, 255
  %cmp = icmp eq i32 %and18, 9
  br i1 %cmp, label %if.end42, label %if.then20

if.then20:                                        ; preds = %cond.end
  %29 = load %struct.gv*, %struct.gv** %gv, align 8
  %30 = load %struct.cv*, %struct.cv** %cv.addr, align 8
  %sv_any21 = getelementptr inbounds %struct.cv, %struct.cv* %30, i32 0, i32 0
  %31 = load %struct.xpvcv*, %struct.xpvcv** %sv_any21, align 8
  %32 = bitcast %struct.xpvcv* %31 to i8*
  %33 = bitcast i8* %32 to %struct.xpvcv*
  %xcv_stash22 = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %33, i32 0, i32 4
  %34 = load %struct.hv*, %struct.hv** %xcv_stash22, align 8
  %add.ptr23 = getelementptr inbounds %struct.hv, %struct.hv* %34, i64 0
  %35 = load %struct.cv*, %struct.cv** %cv.addr, align 8
  %call24 = call %struct.hek* @CvNAME_HEK(%struct.cv* %35)
  %hek_key25 = getelementptr inbounds %struct.hek, %struct.hek* %call24, i32 0, i32 2
  %arraydecay26 = getelementptr inbounds [1 x i8], [1 x i8]* %hek_key25, i64 0, i64 0
  %36 = load %struct.cv*, %struct.cv** %cv.addr, align 8
  %call27 = call %struct.hek* @CvNAME_HEK(%struct.cv* %36)
  %hek_len28 = getelementptr inbounds %struct.hek, %struct.hek* %call27, i32 0, i32 1
  %37 = load i32, i32* %hek_len28, align 4
  %conv29 = sext i32 %37 to i64
  %38 = load %struct.cv*, %struct.cv** %cv.addr, align 8
  %call30 = call %struct.hek* @CvNAME_HEK(%struct.cv* %38)
  %hek_key31 = getelementptr inbounds %struct.hek, %struct.hek* %call30, i32 0, i32 2
  %arraydecay32 = getelementptr inbounds [1 x i8], [1 x i8]* %hek_key31, i64 0, i64 0
  %39 = load %struct.cv*, %struct.cv** %cv.addr, align 8
  %call33 = call %struct.hek* @CvNAME_HEK(%struct.cv* %39)
  %hek_len34 = getelementptr inbounds %struct.hek, %struct.hek* %call33, i32 0, i32 1
  %40 = load i32, i32* %hek_len34, align 4
  %idx.ext35 = sext i32 %40 to i64
  %add.ptr36 = getelementptr inbounds i8, i8* %arraydecay32, i64 %idx.ext35
  %add.ptr37 = getelementptr inbounds i8, i8* %add.ptr36, i64 1
  %41 = load i8, i8* %add.ptr37, align 1
  %conv38 = zext i8 %41 to i32
  %and39 = and i32 %conv38, 1
  %tobool40 = icmp ne i32 %and39, 0
  %lnot = xor i1 %tobool40, true
  %lnot41 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot41 to i32
  %mul = mul nsw i32 536870912, %lnot.ext
  call void @Perl_gv_init_pvn(%struct.gv* %29, %struct.hv* %add.ptr23, i8* %arraydecay26, i64 %conv29, i32 %mul)
  br label %if.end42

if.end42:                                         ; preds = %if.then20, %cond.end
  %42 = load %struct.cv*, %struct.cv** %cv.addr, align 8
  %sv_any43 = getelementptr inbounds %struct.cv, %struct.cv* %42, i32 0, i32 0
  %43 = load %struct.xpvcv*, %struct.xpvcv** %sv_any43, align 8
  %44 = bitcast %struct.xpvcv* %43 to i8*
  %45 = bitcast i8* %44 to %struct.xpvcv*
  %xcv_flags = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %45, i32 0, i32 12
  %46 = load i32, i32* %xcv_flags, align 4
  %and44 = and i32 %46, 32768
  %tobool45 = icmp ne i32 %and44, 0
  br i1 %tobool45, label %if.end47, label %if.then46

if.then46:                                        ; preds = %if.end42
  %47 = load %struct.gv*, %struct.gv** %gv, align 8
  store %struct.gv* %47, %struct.gv** %retval, align 8
  br label %return

if.end47:                                         ; preds = %if.end42
  %48 = load %struct.cv*, %struct.cv** %cv.addr, align 8
  %call48 = call %struct.hek* @CvNAME_HEK(%struct.cv* %48)
  call void @Perl_unshare_hek(%struct.hek* %call48)
  %49 = load %struct.cv*, %struct.cv** %cv.addr, align 8
  %sv_any49 = getelementptr inbounds %struct.cv, %struct.cv* %49, i32 0, i32 0
  %50 = load %struct.xpvcv*, %struct.xpvcv** %sv_any49, align 8
  %51 = bitcast %struct.xpvcv* %50 to i8*
  %52 = bitcast i8* %51 to %struct.xpvcv*
  %xcv_flags50 = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %52, i32 0, i32 12
  %53 = load i32, i32* %xcv_flags50, align 4
  %and51 = and i32 %53, -32769
  store i32 %and51, i32* %xcv_flags50, align 4
  %54 = load %struct.gv*, %struct.gv** %gv, align 8
  %55 = load %struct.cv*, %struct.cv** %cv.addr, align 8
  %sv_any52 = getelementptr inbounds %struct.cv, %struct.cv* %55, i32 0, i32 0
  %56 = load %struct.xpvcv*, %struct.xpvcv** %sv_any52, align 8
  %xcv_gv_u = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %56, i32 0, i32 7
  %xcv_gv = bitcast %union.anon.10* %xcv_gv_u to %struct.gv**
  store %struct.gv* %54, %struct.gv** %xcv_gv, align 8
  %57 = load %struct.sv**, %struct.sv*** %svp, align 8
  %tobool53 = icmp ne %struct.sv** %57, null
  br i1 %tobool53, label %land.lhs.true54, label %if.end57

land.lhs.true54:                                  ; preds = %if.end47
  %58 = load %struct.sv**, %struct.sv*** %svp, align 8
  %59 = load %struct.sv*, %struct.sv** %58, align 8
  %tobool55 = icmp ne %struct.sv* %59, null
  br i1 %tobool55, label %if.then56, label %if.end57

if.then56:                                        ; preds = %land.lhs.true54
  %60 = load %struct.gv*, %struct.gv** %gv, align 8
  %61 = bitcast %struct.gv* %60 to i8*
  %62 = bitcast i8* %61 to %struct.sv*
  %sv_refcnt = getelementptr inbounds %struct.sv, %struct.sv* %62, i32 0, i32 1
  %63 = load i32, i32* %sv_refcnt, align 8
  %inc = add i32 %63, 1
  store i32 %inc, i32* %sv_refcnt, align 8
  br label %if.end57

if.end57:                                         ; preds = %if.then56, %land.lhs.true54, %if.end47
  %64 = load %struct.cv*, %struct.cv** %cv.addr, align 8
  %sv_any58 = getelementptr inbounds %struct.cv, %struct.cv* %64, i32 0, i32 0
  %65 = load %struct.xpvcv*, %struct.xpvcv** %sv_any58, align 8
  %66 = bitcast %struct.xpvcv* %65 to i8*
  %67 = bitcast i8* %66 to %struct.xpvcv*
  %xcv_flags59 = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %67, i32 0, i32 12
  %68 = load i32, i32* %xcv_flags59, align 4
  %or = or i32 %68, 1024
  store i32 %or, i32* %xcv_flags59, align 4
  %69 = load %struct.gv*, %struct.gv** %gv, align 8
  store %struct.gv* %69, %struct.gv** %retval, align 8
  br label %return

return:                                           ; preds = %if.end57, %if.then46, %if.then
  %70 = load %struct.gv*, %struct.gv** %retval, align 8
  ret %struct.gv* %70
}

declare dso_local i8* @Perl_hv_common(%struct.hv*, %struct.sv*, i8*, i64, i32, i32, %struct.sv*, i32) #1

declare dso_local %struct.sv* @Perl_newSV(i64) #1

; Function Attrs: noinline nounwind uwtable
define dso_local void @Perl_cvstash_set(%struct.cv* %cv, %struct.hv* %st) #0 {
entry:
  %cv.addr = alloca %struct.cv*, align 8
  %st.addr = alloca %struct.hv*, align 8
  %oldst = alloca %struct.hv*, align 8
  store %struct.cv* %cv, %struct.cv** %cv.addr, align 8
  store %struct.hv* %st, %struct.hv** %st.addr, align 8
  %0 = load %struct.cv*, %struct.cv** %cv.addr, align 8
  %sv_any = getelementptr inbounds %struct.cv, %struct.cv* %0, i32 0, i32 0
  %1 = load %struct.xpvcv*, %struct.xpvcv** %sv_any, align 8
  %2 = bitcast %struct.xpvcv* %1 to i8*
  %3 = bitcast i8* %2 to %struct.xpvcv*
  %xcv_stash = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %3, i32 0, i32 4
  %4 = load %struct.hv*, %struct.hv** %xcv_stash, align 8
  %add.ptr = getelementptr inbounds %struct.hv, %struct.hv* %4, i64 0
  store %struct.hv* %add.ptr, %struct.hv** %oldst, align 8
  %5 = load %struct.hv*, %struct.hv** %oldst, align 8
  %6 = load %struct.hv*, %struct.hv** %st.addr, align 8
  %cmp = icmp eq %struct.hv* %5, %6
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %if.end7

if.end:                                           ; preds = %entry
  %7 = load %struct.hv*, %struct.hv** %oldst, align 8
  %tobool = icmp ne %struct.hv* %7, null
  br i1 %tobool, label %if.then1, label %if.end2

if.then1:                                         ; preds = %if.end
  %8 = load %struct.hv*, %struct.hv** %oldst, align 8
  %9 = bitcast %struct.hv* %8 to i8*
  %10 = bitcast i8* %9 to %struct.sv*
  %11 = load %struct.cv*, %struct.cv** %cv.addr, align 8
  %12 = bitcast %struct.cv* %11 to i8*
  %13 = bitcast i8* %12 to %struct.sv*
  call void @Perl_sv_del_backref(%struct.sv* %10, %struct.sv* %13)
  br label %if.end2

if.end2:                                          ; preds = %if.then1, %if.end
  %14 = load %struct.hv*, %struct.hv** %st.addr, align 8
  %15 = load %struct.cv*, %struct.cv** %cv.addr, align 8
  %sv_any3 = getelementptr inbounds %struct.cv, %struct.cv* %15, i32 0, i32 0
  %16 = load %struct.xpvcv*, %struct.xpvcv** %sv_any3, align 8
  %xcv_stash4 = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %16, i32 0, i32 4
  store %struct.hv* %14, %struct.hv** %xcv_stash4, align 8
  %17 = load %struct.hv*, %struct.hv** %st.addr, align 8
  %tobool5 = icmp ne %struct.hv* %17, null
  br i1 %tobool5, label %if.then6, label %if.end7

if.then6:                                         ; preds = %if.end2
  %18 = load %struct.hv*, %struct.hv** %st.addr, align 8
  %19 = bitcast %struct.hv* %18 to i8*
  %20 = bitcast i8* %19 to %struct.sv*
  %21 = load %struct.cv*, %struct.cv** %cv.addr, align 8
  %22 = bitcast %struct.cv* %21 to i8*
  %23 = bitcast i8* %22 to %struct.sv*
  call void @Perl_sv_add_backref(%struct.sv* %20, %struct.sv* %23)
  br label %if.end7

if.end7:                                          ; preds = %if.then, %if.then6, %if.end2
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @Perl_gv_init_sv(%struct.gv* %gv, %struct.hv* %stash, %struct.sv* %namesv, i32 %flags) #0 {
entry:
  %gv.addr = alloca %struct.gv*, align 8
  %stash.addr = alloca %struct.hv*, align 8
  %namesv.addr = alloca %struct.sv*, align 8
  %flags.addr = alloca i32, align 4
  %namepv = alloca i8*, align 8
  %namelen = alloca i64, align 8
  store %struct.gv* %gv, %struct.gv** %gv.addr, align 8
  store %struct.hv* %stash, %struct.hv** %stash.addr, align 8
  store %struct.sv* %namesv, %struct.sv** %namesv.addr, align 8
  store i32 %flags, i32* %flags.addr, align 4
  %0 = load %struct.sv*, %struct.sv** %namesv.addr, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %0, i32 0, i32 2
  %1 = load i32, i32* %sv_flags, align 4
  %and = and i32 %1, 2098176
  %cmp = icmp eq i32 %and, 1024
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %2 = load %struct.sv*, %struct.sv** %namesv.addr, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %2, i32 0, i32 0
  %3 = load i8*, i8** %sv_any, align 8
  %4 = bitcast i8* %3 to %struct.xpv*
  %xpv_cur = getelementptr inbounds %struct.xpv, %struct.xpv* %4, i32 0, i32 2
  %5 = load i64, i64* %xpv_cur, align 8
  store i64 %5, i64* %namelen, align 8
  %6 = load %struct.sv*, %struct.sv** %namesv.addr, align 8
  %sv_u = getelementptr inbounds %struct.sv, %struct.sv* %6, i32 0, i32 3
  %svu_pv = bitcast %union.anon* %sv_u to i8**
  %7 = load i8*, i8** %svu_pv, align 8
  br label %cond.end

cond.false:                                       ; preds = %entry
  %8 = load %struct.sv*, %struct.sv** %namesv.addr, align 8
  %call = call i8* @Perl_sv_2pv_flags(%struct.sv* %8, i64* %namelen, i32 2)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %7, %cond.true ], [ %call, %cond.false ]
  store i8* %cond, i8** %namepv, align 8
  %9 = load %struct.sv*, %struct.sv** %namesv.addr, align 8
  %sv_flags1 = getelementptr inbounds %struct.sv, %struct.sv* %9, i32 0, i32 2
  %10 = load i32, i32* %sv_flags1, align 4
  %and2 = and i32 %10, 536870912
  %tobool = icmp ne i32 %and2, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %cond.end
  %11 = load i32, i32* %flags.addr, align 4
  %or = or i32 %11, 536870912
  store i32 %or, i32* %flags.addr, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %cond.end
  %12 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %13 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %14 = load i8*, i8** %namepv, align 8
  %15 = load i64, i64* %namelen, align 8
  %16 = load i32, i32* %flags.addr, align 4
  call void @Perl_gv_init_pvn(%struct.gv* %12, %struct.hv* %13, i8* %14, i64 %15, i32 %16)
  ret void
}

declare dso_local i8* @Perl_sv_2pv_flags(%struct.sv*, i64*, i32) #1

; Function Attrs: noinline nounwind uwtable
define dso_local void @Perl_gv_init_pv(%struct.gv* %gv, %struct.hv* %stash, i8* %name, i32 %flags) #0 {
entry:
  %gv.addr = alloca %struct.gv*, align 8
  %stash.addr = alloca %struct.hv*, align 8
  %name.addr = alloca i8*, align 8
  %flags.addr = alloca i32, align 4
  store %struct.gv* %gv, %struct.gv** %gv.addr, align 8
  store %struct.hv* %stash, %struct.hv** %stash.addr, align 8
  store i8* %name, i8** %name.addr, align 8
  store i32 %flags, i32* %flags.addr, align 4
  %0 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %1 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %2 = load i8*, i8** %name.addr, align 8
  %3 = load i8*, i8** %name.addr, align 8
  %call = call i64 @strlen(i8* %3) #4
  %4 = load i32, i32* %flags.addr, align 4
  call void @Perl_gv_init_pvn(%struct.gv* %0, %struct.hv* %1, i8* %2, i64 %call, i32 %4)
  ret void
}

declare dso_local void @Perl_sv_force_normal_flags(%struct.sv*, i32) #1

declare dso_local i8* @Perl_sv_reftype(%struct.sv*, i32) #1

declare dso_local void @Perl_sv_upgrade(%struct.sv*, i32) #1

; Function Attrs: noinline nounwind uwtable
define dso_local void @Perl_gv_name_set(%struct.gv* %gv, i8* %name, i32 %len, i32 %flags) #0 {
entry:
  %gv.addr = alloca %struct.gv*, align 8
  %name.addr = alloca i8*, align 8
  %len.addr = alloca i32, align 4
  %flags.addr = alloca i32, align 4
  %hash = alloca i32, align 4
  store %struct.gv* %gv, %struct.gv** %gv.addr, align 8
  store i8* %name, i8** %name.addr, align 8
  store i32 %len, i32* %len.addr, align 4
  store i32 %flags, i32* %flags.addr, align 4
  %0 = load i32, i32* %len.addr, align 4
  %cmp = icmp ugt i32 %0, 2147483647
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %len.addr, align 4
  %conv = zext i32 %1 to i64
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.45, i64 0, i64 0), i64 %conv)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %2 = load i32, i32* %flags.addr, align 4
  %and = and i32 %2, 1
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.end6, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end
  %3 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_any = getelementptr inbounds %struct.gv, %struct.gv* %3, i32 0, i32 0
  %4 = load %struct.xpvgv*, %struct.xpvgv** %sv_any, align 8
  %xiv_u = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %4, i32 0, i32 4
  %xivu_namehek = bitcast %union._xivu* %xiv_u to %struct.hek**
  %5 = load %struct.hek*, %struct.hek** %xivu_namehek, align 8
  %tobool1 = icmp ne %struct.hek* %5, null
  br i1 %tobool1, label %if.then2, label %if.end6

if.then2:                                         ; preds = %land.lhs.true
  %6 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_any3 = getelementptr inbounds %struct.gv, %struct.gv* %6, i32 0, i32 0
  %7 = load %struct.xpvgv*, %struct.xpvgv** %sv_any3, align 8
  %xiv_u4 = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %7, i32 0, i32 4
  %xivu_namehek5 = bitcast %union._xivu* %xiv_u4 to %struct.hek**
  %8 = load %struct.hek*, %struct.hek** %xivu_namehek5, align 8
  call void @Perl_unshare_hek(%struct.hek* %8)
  br label %if.end6

if.end6:                                          ; preds = %if.then2, %land.lhs.true, %if.end
  %9 = load i8*, i8** %name.addr, align 8
  %10 = load i32, i32* %len.addr, align 4
  %conv7 = zext i32 %10 to i64
  %call = call i32 @S_perl_hash_one_at_a_time_hard(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.8, i64 0, i64 0), i8* %9, i64 %conv7)
  store i32 %call, i32* %hash, align 4
  %11 = load i8*, i8** %name.addr, align 8
  %12 = load i32, i32* %flags.addr, align 4
  %and8 = and i32 %12, 536870912
  %tobool9 = icmp ne i32 %and8, 0
  br i1 %tobool9, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end6
  %13 = load i32, i32* %len.addr, align 4
  %sub = sub nsw i32 0, %13
  br label %cond.end

cond.false:                                       ; preds = %if.end6
  %14 = load i32, i32* %len.addr, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub, %cond.true ], [ %14, %cond.false ]
  %15 = load i32, i32* %hash, align 4
  %call10 = call %struct.hek* @Perl_share_hek(i8* %11, i32 %cond, i32 %15)
  %16 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_any11 = getelementptr inbounds %struct.gv, %struct.gv* %16, i32 0, i32 0
  %17 = load %struct.xpvgv*, %struct.xpvgv** %sv_any11, align 8
  %xiv_u12 = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %17, i32 0, i32 4
  %xivu_namehek13 = bitcast %union._xivu* %xiv_u12 to %struct.hek**
  store %struct.hek* %call10, %struct.hek** %xivu_namehek13, align 8
  ret void
}

; Function Attrs: nounwind readonly
declare dso_local i32 @memcmp(i8*, i8*, i64) #2

declare dso_local %struct.cv* @Perl_newCONSTSUB_flags(%struct.hv*, i8*, i64, i32, %struct.sv*) #1

declare dso_local %struct.cv* @Perl_newSTUB(%struct.gv*, i1 zeroext) #1

declare dso_local void @Perl_sv_usepvn_flags(%struct.sv*, i8*, i64, i32) #1

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.gv* @Perl_gv_fetchmeth_sv(%struct.hv* %stash, %struct.sv* %namesv, i32 %level, i32 %flags) #0 {
entry:
  %retval = alloca %struct.gv*, align 8
  %stash.addr = alloca %struct.hv*, align 8
  %namesv.addr = alloca %struct.sv*, align 8
  %level.addr = alloca i32, align 4
  %flags.addr = alloca i32, align 4
  %namepv = alloca i8*, align 8
  %namelen = alloca i64, align 8
  store %struct.hv* %stash, %struct.hv** %stash.addr, align 8
  store %struct.sv* %namesv, %struct.sv** %namesv.addr, align 8
  store i32 %level, i32* %level.addr, align 4
  store i32 %flags, i32* %flags.addr, align 4
  %0 = load %struct.sv*, %struct.sv** %namesv.addr, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %0, i32 0, i32 2
  %1 = load i32, i32* %sv_flags, align 4
  %and = and i32 %1, 2098176
  %cmp = icmp eq i32 %and, 1024
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  br i1 true, label %if.then, label %if.end

cond.false:                                       ; preds = %entry
  br i1 false, label %if.then, label %if.end

if.then:                                          ; preds = %cond.false, %cond.true
  %2 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %3 = load %struct.sv*, %struct.sv** %namesv.addr, align 8
  %4 = load i32, i32* %level.addr, align 4
  %5 = load i32, i32* %flags.addr, align 4
  %call = call %struct.gv* @S_gv_fetchmeth_internal(%struct.hv* %2, %struct.sv* %3, i8* null, i64 0, i32 %4, i32 %5)
  store %struct.gv* %call, %struct.gv** %retval, align 8
  br label %return

if.end:                                           ; preds = %cond.false, %cond.true
  %6 = load %struct.sv*, %struct.sv** %namesv.addr, align 8
  %sv_flags1 = getelementptr inbounds %struct.sv, %struct.sv* %6, i32 0, i32 2
  %7 = load i32, i32* %sv_flags1, align 4
  %and2 = and i32 %7, 2098176
  %cmp3 = icmp eq i32 %and2, 1024
  br i1 %cmp3, label %cond.true4, label %cond.false5

cond.true4:                                       ; preds = %if.end
  %8 = load %struct.sv*, %struct.sv** %namesv.addr, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %8, i32 0, i32 0
  %9 = load i8*, i8** %sv_any, align 8
  %10 = bitcast i8* %9 to %struct.xpv*
  %xpv_cur = getelementptr inbounds %struct.xpv, %struct.xpv* %10, i32 0, i32 2
  %11 = load i64, i64* %xpv_cur, align 8
  store i64 %11, i64* %namelen, align 8
  %12 = load %struct.sv*, %struct.sv** %namesv.addr, align 8
  %sv_u = getelementptr inbounds %struct.sv, %struct.sv* %12, i32 0, i32 3
  %svu_pv = bitcast %union.anon* %sv_u to i8**
  %13 = load i8*, i8** %svu_pv, align 8
  br label %cond.end

cond.false5:                                      ; preds = %if.end
  %14 = load %struct.sv*, %struct.sv** %namesv.addr, align 8
  %call6 = call i8* @Perl_sv_2pv_flags(%struct.sv* %14, i64* %namelen, i32 2)
  br label %cond.end

cond.end:                                         ; preds = %cond.false5, %cond.true4
  %cond = phi i8* [ %13, %cond.true4 ], [ %call6, %cond.false5 ]
  store i8* %cond, i8** %namepv, align 8
  %15 = load %struct.sv*, %struct.sv** %namesv.addr, align 8
  %sv_flags7 = getelementptr inbounds %struct.sv, %struct.sv* %15, i32 0, i32 2
  %16 = load i32, i32* %sv_flags7, align 4
  %and8 = and i32 %16, 536870912
  %tobool = icmp ne i32 %and8, 0
  br i1 %tobool, label %if.then9, label %if.end10

if.then9:                                         ; preds = %cond.end
  %17 = load i32, i32* %flags.addr, align 4
  %or = or i32 %17, 536870912
  store i32 %or, i32* %flags.addr, align 4
  br label %if.end10

if.end10:                                         ; preds = %if.then9, %cond.end
  %18 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %19 = load i8*, i8** %namepv, align 8
  %20 = load i64, i64* %namelen, align 8
  %21 = load i32, i32* %level.addr, align 4
  %22 = load i32, i32* %flags.addr, align 4
  %call11 = call %struct.gv* @Perl_gv_fetchmeth_pvn(%struct.hv* %18, i8* %19, i64 %20, i32 %21, i32 %22)
  store %struct.gv* %call11, %struct.gv** %retval, align 8
  br label %return

return:                                           ; preds = %if.end10, %if.then
  %23 = load %struct.gv*, %struct.gv** %retval, align 8
  ret %struct.gv* %23
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.gv* @S_gv_fetchmeth_internal(%struct.hv* %stash, %struct.sv* %meth, i8* %name, i64 %len, i32 %level, i32 %flags) #0 {
entry:
  %retval = alloca %struct.gv*, align 8
  %stash.addr = alloca %struct.hv*, align 8
  %meth.addr = alloca %struct.sv*, align 8
  %name.addr = alloca i8*, align 8
  %len.addr = alloca i64, align 8
  %level.addr = alloca i32, align 4
  %flags.addr = alloca i32, align 4
  %gvp = alloca %struct.gv**, align 8
  %he = alloca %struct.he*, align 8
  %linear_av = alloca %struct.av*, align 8
  %linear_svp = alloca %struct.sv**, align 8
  %linear_sv = alloca %struct.sv*, align 8
  %cstash = alloca %struct.hv*, align 8
  %cachestash = alloca %struct.hv*, align 8
  %candidate = alloca %struct.gv*, align 8
  %cand_cv = alloca %struct.cv*, align 8
  %topgv = alloca %struct.gv*, align 8
  %hvname = alloca i8*, align 8
  %create = alloca i32, align 4
  %items = alloca i32, align 4
  %topgen_cmp = alloca i32, align 4
  %is_utf8 = alloca i32, align 4
  %hvname412 = alloca i8*, align 8
  %old_cv = alloca %struct.cv*, align 8
  %old_cv588 = alloca %struct.cv*, align 8
  store %struct.hv* %stash, %struct.hv** %stash.addr, align 8
  store %struct.sv* %meth, %struct.sv** %meth.addr, align 8
  store i8* %name, i8** %name.addr, align 8
  store i64 %len, i64* %len.addr, align 8
  store i32 %level, i32* %level.addr, align 4
  store i32 %flags, i32* %flags.addr, align 4
  store %struct.gv* null, %struct.gv** %candidate, align 8
  store %struct.cv* null, %struct.cv** %cand_cv, align 8
  store %struct.gv* null, %struct.gv** %topgv, align 8
  %0 = load i32, i32* %level.addr, align 4
  %cmp = icmp sge i32 %0, 0
  %1 = zext i1 %cmp to i64
  %cond = select i1 %cmp, i32 16, i32 0
  store i32 %cond, i32* %create, align 4
  %2 = load i32, i32* %flags.addr, align 4
  %and = and i32 %2, 536870912
  store i32 %and, i32* %is_utf8, align 4
  %3 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %tobool = icmp ne %struct.hv* %3, null
  br i1 %tobool, label %if.end3, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, i32* %create, align 4
  %call = call %struct.hv* @Perl_gv_stashpvn(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.46, i64 0, i64 0), i32 9, i32 0)
  store %struct.hv* %call, %struct.hv** %stash.addr, align 8
  %tobool1 = icmp ne %struct.hv* %call, null
  br i1 %tobool1, label %if.end, label %if.then2

if.then2:                                         ; preds = %if.then
  store %struct.gv* null, %struct.gv** %retval, align 8
  br label %return

if.end:                                           ; preds = %if.then
  br label %if.end3

if.end3:                                          ; preds = %if.end, %entry
  %4 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_flags = getelementptr inbounds %struct.hv, %struct.hv* %4, i32 0, i32 2
  %5 = load i32, i32* %sv_flags, align 4
  %and4 = and i32 %5, 33554432
  %tobool5 = icmp ne i32 %and4, 0
  br i1 %tobool5, label %land.lhs.true, label %cond.false60

land.lhs.true:                                    ; preds = %if.end3
  %6 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_u = getelementptr inbounds %struct.hv, %struct.hv* %6, i32 0, i32 3
  %svu_hash = bitcast %union.anon.4* %sv_u to %struct.he***
  %7 = load %struct.he**, %struct.he*** %svu_hash, align 8
  %8 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_any = getelementptr inbounds %struct.hv, %struct.hv* %8, i32 0, i32 0
  %9 = load %struct.xpvhv*, %struct.xpvhv** %sv_any, align 8
  %xhv_max = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %9, i32 0, i32 3
  %10 = load i64, i64* %xhv_max, align 8
  %add = add i64 %10, 1
  %arrayidx = getelementptr inbounds %struct.he*, %struct.he** %7, i64 %add
  %11 = bitcast %struct.he** %arrayidx to %struct.xpvhv_aux*
  %xhv_name_u = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %11, i32 0, i32 0
  %xhvnameu_name = bitcast %union._xhvnameu* %xhv_name_u to %struct.hek**
  %12 = load %struct.hek*, %struct.hek** %xhvnameu_name, align 8
  %tobool6 = icmp ne %struct.hek* %12, null
  br i1 %tobool6, label %land.lhs.true7, label %cond.false60

land.lhs.true7:                                   ; preds = %land.lhs.true
  %13 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_u8 = getelementptr inbounds %struct.hv, %struct.hv* %13, i32 0, i32 3
  %svu_hash9 = bitcast %union.anon.4* %sv_u8 to %struct.he***
  %14 = load %struct.he**, %struct.he*** %svu_hash9, align 8
  %15 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_any10 = getelementptr inbounds %struct.hv, %struct.hv* %15, i32 0, i32 0
  %16 = load %struct.xpvhv*, %struct.xpvhv** %sv_any10, align 8
  %xhv_max11 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %16, i32 0, i32 3
  %17 = load i64, i64* %xhv_max11, align 8
  %add12 = add i64 %17, 1
  %arrayidx13 = getelementptr inbounds %struct.he*, %struct.he** %14, i64 %add12
  %18 = bitcast %struct.he** %arrayidx13 to %struct.xpvhv_aux*
  %xhv_name_count = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %18, i32 0, i32 4
  %19 = load i32, i32* %xhv_name_count, align 4
  %tobool14 = icmp ne i32 %19, 0
  br i1 %tobool14, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true7
  %20 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_u15 = getelementptr inbounds %struct.hv, %struct.hv* %20, i32 0, i32 3
  %svu_hash16 = bitcast %union.anon.4* %sv_u15 to %struct.he***
  %21 = load %struct.he**, %struct.he*** %svu_hash16, align 8
  %22 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_any17 = getelementptr inbounds %struct.hv, %struct.hv* %22, i32 0, i32 0
  %23 = load %struct.xpvhv*, %struct.xpvhv** %sv_any17, align 8
  %xhv_max18 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %23, i32 0, i32 3
  %24 = load i64, i64* %xhv_max18, align 8
  %add19 = add i64 %24, 1
  %arrayidx20 = getelementptr inbounds %struct.he*, %struct.he** %21, i64 %add19
  %25 = bitcast %struct.he** %arrayidx20 to %struct.xpvhv_aux*
  %xhv_name_u21 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %25, i32 0, i32 0
  %xhvnameu_names = bitcast %union._xhvnameu* %xhv_name_u21 to %struct.hek***
  %26 = load %struct.hek**, %struct.hek*** %xhvnameu_names, align 8
  %27 = load %struct.hek*, %struct.hek** %26, align 8
  %tobool22 = icmp ne %struct.hek* %27, null
  br i1 %tobool22, label %cond.true32, label %cond.false60

cond.false:                                       ; preds = %land.lhs.true7
  %28 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_u23 = getelementptr inbounds %struct.hv, %struct.hv* %28, i32 0, i32 3
  %svu_hash24 = bitcast %union.anon.4* %sv_u23 to %struct.he***
  %29 = load %struct.he**, %struct.he*** %svu_hash24, align 8
  %30 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_any25 = getelementptr inbounds %struct.hv, %struct.hv* %30, i32 0, i32 0
  %31 = load %struct.xpvhv*, %struct.xpvhv** %sv_any25, align 8
  %xhv_max26 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %31, i32 0, i32 3
  %32 = load i64, i64* %xhv_max26, align 8
  %add27 = add i64 %32, 1
  %arrayidx28 = getelementptr inbounds %struct.he*, %struct.he** %29, i64 %add27
  %33 = bitcast %struct.he** %arrayidx28 to %struct.xpvhv_aux*
  %xhv_name_u29 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %33, i32 0, i32 0
  %xhvnameu_name30 = bitcast %union._xhvnameu* %xhv_name_u29 to %struct.hek**
  %34 = load %struct.hek*, %struct.hek** %xhvnameu_name30, align 8
  %tobool31 = icmp ne %struct.hek* %34, null
  br i1 %tobool31, label %cond.true32, label %cond.false60

cond.true32:                                      ; preds = %cond.false, %cond.true
  %35 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_u33 = getelementptr inbounds %struct.hv, %struct.hv* %35, i32 0, i32 3
  %svu_hash34 = bitcast %union.anon.4* %sv_u33 to %struct.he***
  %36 = load %struct.he**, %struct.he*** %svu_hash34, align 8
  %37 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_any35 = getelementptr inbounds %struct.hv, %struct.hv* %37, i32 0, i32 0
  %38 = load %struct.xpvhv*, %struct.xpvhv** %sv_any35, align 8
  %xhv_max36 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %38, i32 0, i32 3
  %39 = load i64, i64* %xhv_max36, align 8
  %add37 = add i64 %39, 1
  %arrayidx38 = getelementptr inbounds %struct.he*, %struct.he** %36, i64 %add37
  %40 = bitcast %struct.he** %arrayidx38 to %struct.xpvhv_aux*
  %xhv_name_count39 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %40, i32 0, i32 4
  %41 = load i32, i32* %xhv_name_count39, align 4
  %tobool40 = icmp ne i32 %41, 0
  br i1 %tobool40, label %cond.true41, label %cond.false50

cond.true41:                                      ; preds = %cond.true32
  %42 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_u42 = getelementptr inbounds %struct.hv, %struct.hv* %42, i32 0, i32 3
  %svu_hash43 = bitcast %union.anon.4* %sv_u42 to %struct.he***
  %43 = load %struct.he**, %struct.he*** %svu_hash43, align 8
  %44 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_any44 = getelementptr inbounds %struct.hv, %struct.hv* %44, i32 0, i32 0
  %45 = load %struct.xpvhv*, %struct.xpvhv** %sv_any44, align 8
  %xhv_max45 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %45, i32 0, i32 3
  %46 = load i64, i64* %xhv_max45, align 8
  %add46 = add i64 %46, 1
  %arrayidx47 = getelementptr inbounds %struct.he*, %struct.he** %43, i64 %add46
  %47 = bitcast %struct.he** %arrayidx47 to %struct.xpvhv_aux*
  %xhv_name_u48 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %47, i32 0, i32 0
  %xhvnameu_names49 = bitcast %union._xhvnameu* %xhv_name_u48 to %struct.hek***
  %48 = load %struct.hek**, %struct.hek*** %xhvnameu_names49, align 8
  %49 = load %struct.hek*, %struct.hek** %48, align 8
  br label %cond.end

cond.false50:                                     ; preds = %cond.true32
  %50 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_u51 = getelementptr inbounds %struct.hv, %struct.hv* %50, i32 0, i32 3
  %svu_hash52 = bitcast %union.anon.4* %sv_u51 to %struct.he***
  %51 = load %struct.he**, %struct.he*** %svu_hash52, align 8
  %52 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_any53 = getelementptr inbounds %struct.hv, %struct.hv* %52, i32 0, i32 0
  %53 = load %struct.xpvhv*, %struct.xpvhv** %sv_any53, align 8
  %xhv_max54 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %53, i32 0, i32 3
  %54 = load i64, i64* %xhv_max54, align 8
  %add55 = add i64 %54, 1
  %arrayidx56 = getelementptr inbounds %struct.he*, %struct.he** %51, i64 %add55
  %55 = bitcast %struct.he** %arrayidx56 to %struct.xpvhv_aux*
  %xhv_name_u57 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %55, i32 0, i32 0
  %xhvnameu_name58 = bitcast %union._xhvnameu* %xhv_name_u57 to %struct.hek**
  %56 = load %struct.hek*, %struct.hek** %xhvnameu_name58, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false50, %cond.true41
  %cond59 = phi %struct.hek* [ %49, %cond.true41 ], [ %56, %cond.false50 ]
  %hek_key = getelementptr inbounds %struct.hek, %struct.hek* %cond59, i32 0, i32 2
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %hek_key, i64 0, i64 0
  br label %cond.end61

cond.false60:                                     ; preds = %cond.false, %cond.true, %land.lhs.true, %if.end3
  br label %cond.end61

cond.end61:                                       ; preds = %cond.false60, %cond.end
  %cond62 = phi i8* [ %arraydecay, %cond.end ], [ null, %cond.false60 ]
  store i8* %cond62, i8** %hvname, align 8
  %57 = load i8*, i8** %hvname, align 8
  %tobool63 = icmp ne i8* %57, null
  br i1 %tobool63, label %if.end65, label %if.then64

if.then64:                                        ; preds = %cond.end61
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.47, i64 0, i64 0))
  br label %if.end65

if.end65:                                         ; preds = %if.then64, %cond.end61
  %58 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_u66 = getelementptr inbounds %struct.hv, %struct.hv* %58, i32 0, i32 3
  %svu_hash67 = bitcast %union.anon.4* %sv_u66 to %struct.he***
  %59 = load %struct.he**, %struct.he*** %svu_hash67, align 8
  %60 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_any68 = getelementptr inbounds %struct.hv, %struct.hv* %60, i32 0, i32 0
  %61 = load %struct.xpvhv*, %struct.xpvhv** %sv_any68, align 8
  %xhv_max69 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %61, i32 0, i32 3
  %62 = load i64, i64* %xhv_max69, align 8
  %add70 = add i64 %62, 1
  %arrayidx71 = getelementptr inbounds %struct.he*, %struct.he** %59, i64 %add70
  %63 = bitcast %struct.he** %arrayidx71 to %struct.xpvhv_aux*
  %xhv_mro_meta = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %63, i32 0, i32 5
  %64 = load %struct.mro_meta*, %struct.mro_meta** %xhv_mro_meta, align 8
  %tobool72 = icmp ne %struct.mro_meta* %64, null
  br i1 %tobool72, label %cond.true73, label %cond.false81

cond.true73:                                      ; preds = %if.end65
  %65 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_u74 = getelementptr inbounds %struct.hv, %struct.hv* %65, i32 0, i32 3
  %svu_hash75 = bitcast %union.anon.4* %sv_u74 to %struct.he***
  %66 = load %struct.he**, %struct.he*** %svu_hash75, align 8
  %67 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_any76 = getelementptr inbounds %struct.hv, %struct.hv* %67, i32 0, i32 0
  %68 = load %struct.xpvhv*, %struct.xpvhv** %sv_any76, align 8
  %xhv_max77 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %68, i32 0, i32 3
  %69 = load i64, i64* %xhv_max77, align 8
  %add78 = add i64 %69, 1
  %arrayidx79 = getelementptr inbounds %struct.he*, %struct.he** %66, i64 %add78
  %70 = bitcast %struct.he** %arrayidx79 to %struct.xpvhv_aux*
  %xhv_mro_meta80 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %70, i32 0, i32 5
  %71 = load %struct.mro_meta*, %struct.mro_meta** %xhv_mro_meta80, align 8
  br label %cond.end83

cond.false81:                                     ; preds = %if.end65
  %72 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %call82 = call %struct.mro_meta* @Perl_mro_meta_init(%struct.hv* %72)
  br label %cond.end83

cond.end83:                                       ; preds = %cond.false81, %cond.true73
  %cond84 = phi %struct.mro_meta* [ %71, %cond.true73 ], [ %call82, %cond.false81 ]
  %cache_gen = getelementptr inbounds %struct.mro_meta, %struct.mro_meta* %cond84, i32 0, i32 3
  %73 = load i32, i32* %cache_gen, align 8
  %74 = load i32, i32* @PL_sub_generation, align 4
  %add85 = add i32 %73, %74
  store i32 %add85, i32* %topgen_cmp, align 4
  %75 = load i32, i32* %flags.addr, align 4
  %and86 = and i32 %75, 4096
  %tobool87 = icmp ne i32 %and86, 0
  br i1 %tobool87, label %if.then88, label %if.else

if.then88:                                        ; preds = %cond.end83
  %76 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_u89 = getelementptr inbounds %struct.hv, %struct.hv* %76, i32 0, i32 3
  %svu_hash90 = bitcast %union.anon.4* %sv_u89 to %struct.he***
  %77 = load %struct.he**, %struct.he*** %svu_hash90, align 8
  %78 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_any91 = getelementptr inbounds %struct.hv, %struct.hv* %78, i32 0, i32 0
  %79 = load %struct.xpvhv*, %struct.xpvhv** %sv_any91, align 8
  %xhv_max92 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %79, i32 0, i32 3
  %80 = load i64, i64* %xhv_max92, align 8
  %add93 = add i64 %80, 1
  %arrayidx94 = getelementptr inbounds %struct.he*, %struct.he** %77, i64 %add93
  %81 = bitcast %struct.he** %arrayidx94 to %struct.xpvhv_aux*
  %xhv_mro_meta95 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %81, i32 0, i32 5
  %82 = load %struct.mro_meta*, %struct.mro_meta** %xhv_mro_meta95, align 8
  %super = getelementptr inbounds %struct.mro_meta, %struct.mro_meta* %82, i32 0, i32 7
  %83 = load %struct.hv*, %struct.hv** %super, align 8
  %tobool96 = icmp ne %struct.hv* %83, null
  br i1 %tobool96, label %if.end107, label %if.then97

if.then97:                                        ; preds = %if.then88
  %call98 = call %struct.sv* @Perl_newSV_type(i32 12)
  %84 = bitcast %struct.sv* %call98 to i8*
  %85 = bitcast i8* %84 to %struct.hv*
  %86 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_u99 = getelementptr inbounds %struct.hv, %struct.hv* %86, i32 0, i32 3
  %svu_hash100 = bitcast %union.anon.4* %sv_u99 to %struct.he***
  %87 = load %struct.he**, %struct.he*** %svu_hash100, align 8
  %88 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_any101 = getelementptr inbounds %struct.hv, %struct.hv* %88, i32 0, i32 0
  %89 = load %struct.xpvhv*, %struct.xpvhv** %sv_any101, align 8
  %xhv_max102 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %89, i32 0, i32 3
  %90 = load i64, i64* %xhv_max102, align 8
  %add103 = add i64 %90, 1
  %arrayidx104 = getelementptr inbounds %struct.he*, %struct.he** %87, i64 %add103
  %91 = bitcast %struct.he** %arrayidx104 to %struct.xpvhv_aux*
  %xhv_mro_meta105 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %91, i32 0, i32 5
  %92 = load %struct.mro_meta*, %struct.mro_meta** %xhv_mro_meta105, align 8
  %super106 = getelementptr inbounds %struct.mro_meta, %struct.mro_meta* %92, i32 0, i32 7
  store %struct.hv* %85, %struct.hv** %super106, align 8
  br label %if.end107

if.end107:                                        ; preds = %if.then97, %if.then88
  %93 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_u108 = getelementptr inbounds %struct.hv, %struct.hv* %93, i32 0, i32 3
  %svu_hash109 = bitcast %union.anon.4* %sv_u108 to %struct.he***
  %94 = load %struct.he**, %struct.he*** %svu_hash109, align 8
  %95 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_any110 = getelementptr inbounds %struct.hv, %struct.hv* %95, i32 0, i32 0
  %96 = load %struct.xpvhv*, %struct.xpvhv** %sv_any110, align 8
  %xhv_max111 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %96, i32 0, i32 3
  %97 = load i64, i64* %xhv_max111, align 8
  %add112 = add i64 %97, 1
  %arrayidx113 = getelementptr inbounds %struct.he*, %struct.he** %94, i64 %add112
  %98 = bitcast %struct.he** %arrayidx113 to %struct.xpvhv_aux*
  %xhv_mro_meta114 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %98, i32 0, i32 5
  %99 = load %struct.mro_meta*, %struct.mro_meta** %xhv_mro_meta114, align 8
  %super115 = getelementptr inbounds %struct.mro_meta, %struct.mro_meta* %99, i32 0, i32 7
  %100 = load %struct.hv*, %struct.hv** %super115, align 8
  store %struct.hv* %100, %struct.hv** %cachestash, align 8
  br label %if.end116

if.else:                                          ; preds = %cond.end83
  %101 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  store %struct.hv* %101, %struct.hv** %cachestash, align 8
  br label %if.end116

if.end116:                                        ; preds = %if.else, %if.end107
  %102 = load %struct.hv*, %struct.hv** %cachestash, align 8
  %103 = load %struct.sv*, %struct.sv** %meth.addr, align 8
  %104 = load i8*, i8** %name.addr, align 8
  %105 = load i64, i64* %len.addr, align 8
  %106 = load i32, i32* %flags.addr, align 4
  %and117 = and i32 %106, 536870912
  %tobool118 = icmp ne i32 %and117, 0
  %107 = zext i1 %tobool118 to i64
  %cond119 = select i1 %tobool118, i32 1, i32 0
  %108 = load i32, i32* %create, align 4
  %call120 = call i8* @Perl_hv_common(%struct.hv* %102, %struct.sv* %103, i8* %104, i64 %105, i32 %cond119, i32 %108, %struct.sv* null, i32 0)
  %109 = bitcast i8* %call120 to %struct.he*
  store %struct.he* %109, %struct.he** %he, align 8
  %110 = load %struct.he*, %struct.he** %he, align 8
  %tobool121 = icmp ne %struct.he* %110, null
  br i1 %tobool121, label %if.then122, label %if.else123

if.then122:                                       ; preds = %if.end116
  %111 = load %struct.he*, %struct.he** %he, align 8
  %he_valu = getelementptr inbounds %struct.he, %struct.he* %111, i32 0, i32 2
  %hent_val = bitcast %union.anon.0* %he_valu to %struct.sv**
  %112 = bitcast %struct.sv** %hent_val to %struct.gv**
  store %struct.gv** %112, %struct.gv*** %gvp, align 8
  br label %if.end124

if.else123:                                       ; preds = %if.end116
  store %struct.gv** null, %struct.gv*** %gvp, align 8
  br label %if.end124

if.end124:                                        ; preds = %if.else123, %if.then122
  %113 = load %struct.gv**, %struct.gv*** %gvp, align 8
  %tobool125 = icmp ne %struct.gv** %113, null
  br i1 %tobool125, label %if.then126, label %if.end266

if.then126:                                       ; preds = %if.end124
  %114 = load %struct.gv**, %struct.gv*** %gvp, align 8
  %115 = load %struct.gv*, %struct.gv** %114, align 8
  store %struct.gv* %115, %struct.gv** %topgv, align 8
  br label %have_gv

have_gv:                                          ; preds = %if.then262, %if.then126
  %116 = load %struct.gv*, %struct.gv** %topgv, align 8
  %sv_flags127 = getelementptr inbounds %struct.gv, %struct.gv* %116, i32 0, i32 2
  %117 = load i32, i32* %sv_flags127, align 4
  %and128 = and i32 %117, 255
  %cmp129 = icmp ne i32 %and128, 9
  br i1 %cmp129, label %if.then130, label %if.end144

if.then130:                                       ; preds = %have_gv
  %118 = load i8*, i8** %name.addr, align 8
  %tobool131 = icmp ne i8* %118, null
  br i1 %tobool131, label %if.end143, label %if.then132

if.then132:                                       ; preds = %if.then130
  %119 = load %struct.sv*, %struct.sv** %meth.addr, align 8
  %sv_flags133 = getelementptr inbounds %struct.sv, %struct.sv* %119, i32 0, i32 2
  %120 = load i32, i32* %sv_flags133, align 4
  %and134 = and i32 %120, 2098176
  %cmp135 = icmp eq i32 %and134, 1024
  br i1 %cmp135, label %cond.true136, label %cond.false139

cond.true136:                                     ; preds = %if.then132
  %121 = load %struct.sv*, %struct.sv** %meth.addr, align 8
  %sv_any137 = getelementptr inbounds %struct.sv, %struct.sv* %121, i32 0, i32 0
  %122 = load i8*, i8** %sv_any137, align 8
  %123 = bitcast i8* %122 to %struct.xpv*
  %xpv_cur = getelementptr inbounds %struct.xpv, %struct.xpv* %123, i32 0, i32 2
  %124 = load i64, i64* %xpv_cur, align 8
  store i64 %124, i64* %len.addr, align 8
  %125 = load %struct.sv*, %struct.sv** %meth.addr, align 8
  %sv_u138 = getelementptr inbounds %struct.sv, %struct.sv* %125, i32 0, i32 3
  %svu_pv = bitcast %union.anon* %sv_u138 to i8**
  %126 = load i8*, i8** %svu_pv, align 8
  br label %cond.end141

cond.false139:                                    ; preds = %if.then132
  %127 = load %struct.sv*, %struct.sv** %meth.addr, align 8
  %call140 = call i8* @Perl_sv_2pv_flags(%struct.sv* %127, i64* %len.addr, i32 0)
  br label %cond.end141

cond.end141:                                      ; preds = %cond.false139, %cond.true136
  %cond142 = phi i8* [ %126, %cond.true136 ], [ %call140, %cond.false139 ]
  store i8* %cond142, i8** %name.addr, align 8
  br label %if.end143

if.end143:                                        ; preds = %cond.end141, %if.then130
  %128 = load %struct.gv*, %struct.gv** %topgv, align 8
  %129 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %130 = load i8*, i8** %name.addr, align 8
  %131 = load i64, i64* %len.addr, align 8
  %132 = load i32, i32* %is_utf8, align 4
  %or = or i32 2, %132
  call void @Perl_gv_init_pvn(%struct.gv* %128, %struct.hv* %129, i8* %130, i64 %131, i32 %or)
  br label %if.end144

if.end144:                                        ; preds = %if.end143, %have_gv
  %133 = load %struct.gv*, %struct.gv** %topgv, align 8
  %sv_u145 = getelementptr inbounds %struct.gv, %struct.gv* %133, i32 0, i32 3
  %svu_gp = bitcast %union.anon.6* %sv_u145 to %struct.gp**
  %134 = load %struct.gp*, %struct.gp** %svu_gp, align 8
  %add.ptr = getelementptr inbounds %struct.gp, %struct.gp* %134, i64 0
  %gp_cv = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr, i32 0, i32 2
  %135 = load %struct.cv*, %struct.cv** %gp_cv, align 8
  %add.ptr146 = getelementptr inbounds %struct.cv, %struct.cv* %135, i64 0
  store %struct.cv* %add.ptr146, %struct.cv** %cand_cv, align 8
  %tobool147 = icmp ne %struct.cv* %add.ptr146, null
  br i1 %tobool147, label %if.then148, label %if.else169

if.then148:                                       ; preds = %if.end144
  %136 = load %struct.gv*, %struct.gv** %topgv, align 8
  %sv_u149 = getelementptr inbounds %struct.gv, %struct.gv* %136, i32 0, i32 3
  %svu_gp150 = bitcast %union.anon.6* %sv_u149 to %struct.gp**
  %137 = load %struct.gp*, %struct.gp** %svu_gp150, align 8
  %add.ptr151 = getelementptr inbounds %struct.gp, %struct.gp* %137, i64 0
  %gp_cvgen = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr151, i32 0, i32 3
  %138 = load i32, i32* %gp_cvgen, align 8
  %tobool152 = icmp ne i32 %138, 0
  br i1 %tobool152, label %lor.lhs.false, label %if.then158

lor.lhs.false:                                    ; preds = %if.then148
  %139 = load %struct.gv*, %struct.gv** %topgv, align 8
  %sv_u153 = getelementptr inbounds %struct.gv, %struct.gv* %139, i32 0, i32 3
  %svu_gp154 = bitcast %union.anon.6* %sv_u153 to %struct.gp**
  %140 = load %struct.gp*, %struct.gp** %svu_gp154, align 8
  %add.ptr155 = getelementptr inbounds %struct.gp, %struct.gp* %140, i64 0
  %gp_cvgen156 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr155, i32 0, i32 3
  %141 = load i32, i32* %gp_cvgen156, align 8
  %142 = load i32, i32* %topgen_cmp, align 4
  %cmp157 = icmp eq i32 %141, %142
  br i1 %cmp157, label %if.then158, label %if.else159

if.then158:                                       ; preds = %lor.lhs.false, %if.then148
  %143 = load %struct.gv*, %struct.gv** %topgv, align 8
  store %struct.gv* %143, %struct.gv** %retval, align 8
  br label %return

if.else159:                                       ; preds = %lor.lhs.false
  %144 = load %struct.cv*, %struct.cv** %cand_cv, align 8
  %145 = bitcast %struct.cv* %144 to i8*
  %146 = bitcast i8* %145 to %struct.sv*
  call void @S_SvREFCNT_dec_NN(%struct.sv* %146)
  %147 = load %struct.gv*, %struct.gv** %topgv, align 8
  %sv_u160 = getelementptr inbounds %struct.gv, %struct.gv* %147, i32 0, i32 3
  %svu_gp161 = bitcast %union.anon.6* %sv_u160 to %struct.gp**
  %148 = load %struct.gp*, %struct.gp** %svu_gp161, align 8
  %add.ptr162 = getelementptr inbounds %struct.gp, %struct.gp* %148, i64 0
  %gp_cv163 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr162, i32 0, i32 2
  store %struct.cv* null, %struct.cv** %gp_cv163, align 8
  store %struct.cv* null, %struct.cv** %cand_cv, align 8
  %149 = load %struct.gv*, %struct.gv** %topgv, align 8
  %sv_u164 = getelementptr inbounds %struct.gv, %struct.gv* %149, i32 0, i32 3
  %svu_gp165 = bitcast %union.anon.6* %sv_u164 to %struct.gp**
  %150 = load %struct.gp*, %struct.gp** %svu_gp165, align 8
  %add.ptr166 = getelementptr inbounds %struct.gp, %struct.gp* %150, i64 0
  %gp_cvgen167 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr166, i32 0, i32 3
  store i32 0, i32* %gp_cvgen167, align 8
  br label %if.end168

if.end168:                                        ; preds = %if.else159
  br label %if.end265

if.else169:                                       ; preds = %if.end144
  %151 = load %struct.gv*, %struct.gv** %topgv, align 8
  %sv_u170 = getelementptr inbounds %struct.gv, %struct.gv* %151, i32 0, i32 3
  %svu_gp171 = bitcast %union.anon.6* %sv_u170 to %struct.gp**
  %152 = load %struct.gp*, %struct.gp** %svu_gp171, align 8
  %add.ptr172 = getelementptr inbounds %struct.gp, %struct.gp* %152, i64 0
  %gp_cvgen173 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr172, i32 0, i32 3
  %153 = load i32, i32* %gp_cvgen173, align 8
  %154 = load i32, i32* %topgen_cmp, align 4
  %cmp174 = icmp eq i32 %153, %154
  br i1 %cmp174, label %if.then175, label %if.else176

if.then175:                                       ; preds = %if.else169
  store %struct.gv* null, %struct.gv** %retval, align 8
  br label %return

if.else176:                                       ; preds = %if.else169
  %155 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %156 = load %struct.hv*, %struct.hv** %cachestash, align 8
  %cmp177 = icmp eq %struct.hv* %155, %156
  br i1 %cmp177, label %land.lhs.true178, label %if.end263

land.lhs.true178:                                 ; preds = %if.else176
  %157 = load i64, i64* %len.addr, align 8
  %cmp179 = icmp ugt i64 %157, 1
  br i1 %cmp179, label %land.lhs.true180, label %if.end263

land.lhs.true180:                                 ; preds = %land.lhs.true178
  %158 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_flags181 = getelementptr inbounds %struct.hv, %struct.hv* %158, i32 0, i32 2
  %159 = load i32, i32* %sv_flags181, align 4
  %and182 = and i32 %159, 33554432
  %tobool183 = icmp ne i32 %and182, 0
  br i1 %tobool183, label %land.lhs.true184, label %cond.false252

land.lhs.true184:                                 ; preds = %land.lhs.true180
  %160 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_u185 = getelementptr inbounds %struct.hv, %struct.hv* %160, i32 0, i32 3
  %svu_hash186 = bitcast %union.anon.4* %sv_u185 to %struct.he***
  %161 = load %struct.he**, %struct.he*** %svu_hash186, align 8
  %162 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_any187 = getelementptr inbounds %struct.hv, %struct.hv* %162, i32 0, i32 0
  %163 = load %struct.xpvhv*, %struct.xpvhv** %sv_any187, align 8
  %xhv_max188 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %163, i32 0, i32 3
  %164 = load i64, i64* %xhv_max188, align 8
  %add189 = add i64 %164, 1
  %arrayidx190 = getelementptr inbounds %struct.he*, %struct.he** %161, i64 %add189
  %165 = bitcast %struct.he** %arrayidx190 to %struct.xpvhv_aux*
  %xhv_name_u191 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %165, i32 0, i32 0
  %xhvnameu_name192 = bitcast %union._xhvnameu* %xhv_name_u191 to %struct.hek**
  %166 = load %struct.hek*, %struct.hek** %xhvnameu_name192, align 8
  %tobool193 = icmp ne %struct.hek* %166, null
  br i1 %tobool193, label %land.lhs.true194, label %cond.false252

land.lhs.true194:                                 ; preds = %land.lhs.true184
  %167 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_u195 = getelementptr inbounds %struct.hv, %struct.hv* %167, i32 0, i32 3
  %svu_hash196 = bitcast %union.anon.4* %sv_u195 to %struct.he***
  %168 = load %struct.he**, %struct.he*** %svu_hash196, align 8
  %169 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_any197 = getelementptr inbounds %struct.hv, %struct.hv* %169, i32 0, i32 0
  %170 = load %struct.xpvhv*, %struct.xpvhv** %sv_any197, align 8
  %xhv_max198 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %170, i32 0, i32 3
  %171 = load i64, i64* %xhv_max198, align 8
  %add199 = add i64 %171, 1
  %arrayidx200 = getelementptr inbounds %struct.he*, %struct.he** %168, i64 %add199
  %172 = bitcast %struct.he** %arrayidx200 to %struct.xpvhv_aux*
  %xhv_name_count201 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %172, i32 0, i32 4
  %173 = load i32, i32* %xhv_name_count201, align 4
  %tobool202 = icmp ne i32 %173, 0
  br i1 %tobool202, label %cond.true203, label %cond.false213

cond.true203:                                     ; preds = %land.lhs.true194
  %174 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_u204 = getelementptr inbounds %struct.hv, %struct.hv* %174, i32 0, i32 3
  %svu_hash205 = bitcast %union.anon.4* %sv_u204 to %struct.he***
  %175 = load %struct.he**, %struct.he*** %svu_hash205, align 8
  %176 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_any206 = getelementptr inbounds %struct.hv, %struct.hv* %176, i32 0, i32 0
  %177 = load %struct.xpvhv*, %struct.xpvhv** %sv_any206, align 8
  %xhv_max207 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %177, i32 0, i32 3
  %178 = load i64, i64* %xhv_max207, align 8
  %add208 = add i64 %178, 1
  %arrayidx209 = getelementptr inbounds %struct.he*, %struct.he** %175, i64 %add208
  %179 = bitcast %struct.he** %arrayidx209 to %struct.xpvhv_aux*
  %xhv_name_u210 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %179, i32 0, i32 0
  %xhvnameu_names211 = bitcast %union._xhvnameu* %xhv_name_u210 to %struct.hek***
  %180 = load %struct.hek**, %struct.hek*** %xhvnameu_names211, align 8
  %181 = load %struct.hek*, %struct.hek** %180, align 8
  %tobool212 = icmp ne %struct.hek* %181, null
  br i1 %tobool212, label %cond.true223, label %cond.false252

cond.false213:                                    ; preds = %land.lhs.true194
  %182 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_u214 = getelementptr inbounds %struct.hv, %struct.hv* %182, i32 0, i32 3
  %svu_hash215 = bitcast %union.anon.4* %sv_u214 to %struct.he***
  %183 = load %struct.he**, %struct.he*** %svu_hash215, align 8
  %184 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_any216 = getelementptr inbounds %struct.hv, %struct.hv* %184, i32 0, i32 0
  %185 = load %struct.xpvhv*, %struct.xpvhv** %sv_any216, align 8
  %xhv_max217 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %185, i32 0, i32 3
  %186 = load i64, i64* %xhv_max217, align 8
  %add218 = add i64 %186, 1
  %arrayidx219 = getelementptr inbounds %struct.he*, %struct.he** %183, i64 %add218
  %187 = bitcast %struct.he** %arrayidx219 to %struct.xpvhv_aux*
  %xhv_name_u220 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %187, i32 0, i32 0
  %xhvnameu_name221 = bitcast %union._xhvnameu* %xhv_name_u220 to %struct.hek**
  %188 = load %struct.hek*, %struct.hek** %xhvnameu_name221, align 8
  %tobool222 = icmp ne %struct.hek* %188, null
  br i1 %tobool222, label %cond.true223, label %cond.false252

cond.true223:                                     ; preds = %cond.false213, %cond.true203
  %189 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_u224 = getelementptr inbounds %struct.hv, %struct.hv* %189, i32 0, i32 3
  %svu_hash225 = bitcast %union.anon.4* %sv_u224 to %struct.he***
  %190 = load %struct.he**, %struct.he*** %svu_hash225, align 8
  %191 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_any226 = getelementptr inbounds %struct.hv, %struct.hv* %191, i32 0, i32 0
  %192 = load %struct.xpvhv*, %struct.xpvhv** %sv_any226, align 8
  %xhv_max227 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %192, i32 0, i32 3
  %193 = load i64, i64* %xhv_max227, align 8
  %add228 = add i64 %193, 1
  %arrayidx229 = getelementptr inbounds %struct.he*, %struct.he** %190, i64 %add228
  %194 = bitcast %struct.he** %arrayidx229 to %struct.xpvhv_aux*
  %xhv_name_count230 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %194, i32 0, i32 4
  %195 = load i32, i32* %xhv_name_count230, align 4
  %tobool231 = icmp ne i32 %195, 0
  br i1 %tobool231, label %cond.true232, label %cond.false241

cond.true232:                                     ; preds = %cond.true223
  %196 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_u233 = getelementptr inbounds %struct.hv, %struct.hv* %196, i32 0, i32 3
  %svu_hash234 = bitcast %union.anon.4* %sv_u233 to %struct.he***
  %197 = load %struct.he**, %struct.he*** %svu_hash234, align 8
  %198 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_any235 = getelementptr inbounds %struct.hv, %struct.hv* %198, i32 0, i32 0
  %199 = load %struct.xpvhv*, %struct.xpvhv** %sv_any235, align 8
  %xhv_max236 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %199, i32 0, i32 3
  %200 = load i64, i64* %xhv_max236, align 8
  %add237 = add i64 %200, 1
  %arrayidx238 = getelementptr inbounds %struct.he*, %struct.he** %197, i64 %add237
  %201 = bitcast %struct.he** %arrayidx238 to %struct.xpvhv_aux*
  %xhv_name_u239 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %201, i32 0, i32 0
  %xhvnameu_names240 = bitcast %union._xhvnameu* %xhv_name_u239 to %struct.hek***
  %202 = load %struct.hek**, %struct.hek*** %xhvnameu_names240, align 8
  %203 = load %struct.hek*, %struct.hek** %202, align 8
  br label %cond.end250

cond.false241:                                    ; preds = %cond.true223
  %204 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_u242 = getelementptr inbounds %struct.hv, %struct.hv* %204, i32 0, i32 3
  %svu_hash243 = bitcast %union.anon.4* %sv_u242 to %struct.he***
  %205 = load %struct.he**, %struct.he*** %svu_hash243, align 8
  %206 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_any244 = getelementptr inbounds %struct.hv, %struct.hv* %206, i32 0, i32 0
  %207 = load %struct.xpvhv*, %struct.xpvhv** %sv_any244, align 8
  %xhv_max245 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %207, i32 0, i32 3
  %208 = load i64, i64* %xhv_max245, align 8
  %add246 = add i64 %208, 1
  %arrayidx247 = getelementptr inbounds %struct.he*, %struct.he** %205, i64 %add246
  %209 = bitcast %struct.he** %arrayidx247 to %struct.xpvhv_aux*
  %xhv_name_u248 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %209, i32 0, i32 0
  %xhvnameu_name249 = bitcast %union._xhvnameu* %xhv_name_u248 to %struct.hek**
  %210 = load %struct.hek*, %struct.hek** %xhvnameu_name249, align 8
  br label %cond.end250

cond.end250:                                      ; preds = %cond.false241, %cond.true232
  %cond251 = phi %struct.hek* [ %203, %cond.true232 ], [ %210, %cond.false241 ]
  %hek_len = getelementptr inbounds %struct.hek, %struct.hek* %cond251, i32 0, i32 1
  %211 = load i32, i32* %hek_len, align 4
  br label %cond.end253

cond.false252:                                    ; preds = %cond.false213, %cond.true203, %land.lhs.true184, %land.lhs.true180
  br label %cond.end253

cond.end253:                                      ; preds = %cond.false252, %cond.end250
  %cond254 = phi i32 [ %211, %cond.end250 ], [ 0, %cond.false252 ]
  %cmp255 = icmp eq i32 %cond254, 4
  br i1 %cmp255, label %land.lhs.true256, label %if.end263

land.lhs.true256:                                 ; preds = %cond.end253
  %212 = load i8*, i8** %hvname, align 8
  %call257 = call i32 @strncmp(i8* %212, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.48, i64 0, i64 0), i64 4) #4
  %tobool258 = icmp ne i32 %call257, 0
  br i1 %tobool258, label %if.end263, label %land.lhs.true259

land.lhs.true259:                                 ; preds = %land.lhs.true256
  %213 = load %struct.gv*, %struct.gv** %topgv, align 8
  %214 = load i8*, i8** %name.addr, align 8
  %215 = load i64, i64* %len.addr, align 8
  %call260 = call %struct.gv* @S_maybe_add_coresub(%struct.hv* null, %struct.gv* %213, i8* %214, i64 %215)
  %tobool261 = icmp ne %struct.gv* %call260, null
  br i1 %tobool261, label %if.then262, label %if.end263

if.then262:                                       ; preds = %land.lhs.true259
  br label %have_gv

if.end263:                                        ; preds = %land.lhs.true259, %land.lhs.true256, %cond.end253, %land.lhs.true178, %if.else176
  br label %if.end264

if.end264:                                        ; preds = %if.end263
  br label %if.end265

if.end265:                                        ; preds = %if.end264, %if.end168
  br label %if.end266

if.end266:                                        ; preds = %if.end265, %if.end124
  %216 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %call267 = call %struct.av* @Perl_mro_get_linear_isa(%struct.hv* %216)
  store %struct.av* %call267, %struct.av** %linear_av, align 8
  %217 = load %struct.av*, %struct.av** %linear_av, align 8
  %sv_u268 = getelementptr inbounds %struct.av, %struct.av* %217, i32 0, i32 3
  %svu_array = bitcast %union.anon.3* %sv_u268 to %struct.sv***
  %218 = load %struct.sv**, %struct.sv*** %svu_array, align 8
  %add.ptr269 = getelementptr inbounds %struct.sv*, %struct.sv** %218, i64 1
  store %struct.sv** %add.ptr269, %struct.sv*** %linear_svp, align 8
  %219 = load %struct.av*, %struct.av** %linear_av, align 8
  %sv_any270 = getelementptr inbounds %struct.av, %struct.av* %219, i32 0, i32 0
  %220 = load %struct.xpvav*, %struct.xpvav** %sv_any270, align 8
  %xav_fill = getelementptr inbounds %struct.xpvav, %struct.xpvav* %220, i32 0, i32 2
  %221 = load i64, i64* %xav_fill, align 8
  %conv = trunc i64 %221 to i32
  store i32 %conv, i32* %items, align 4
  br label %while.cond

while.cond:                                       ; preds = %if.end553, %if.end496, %cond.end318, %if.end266
  %222 = load i32, i32* %items, align 4
  %dec = add nsw i32 %222, -1
  store i32 %dec, i32* %items, align 4
  %tobool271 = icmp ne i32 %222, 0
  br i1 %tobool271, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %223 = load %struct.sv**, %struct.sv*** %linear_svp, align 8
  %incdec.ptr = getelementptr inbounds %struct.sv*, %struct.sv** %223, i32 1
  store %struct.sv** %incdec.ptr, %struct.sv*** %linear_svp, align 8
  %224 = load %struct.sv*, %struct.sv** %223, align 8
  store %struct.sv* %224, %struct.sv** %linear_sv, align 8
  %225 = load %struct.sv*, %struct.sv** %linear_sv, align 8
  %call272 = call %struct.hv* @Perl_gv_stashsv(%struct.sv* %225, i32 0)
  store %struct.hv* %call272, %struct.hv** %cstash, align 8
  %226 = load %struct.hv*, %struct.hv** %cstash, align 8
  %tobool273 = icmp ne %struct.hv* %226, null
  br i1 %tobool273, label %if.end320, label %if.then274

if.then274:                                       ; preds = %while.body
  %227 = load %struct.sv*, %struct.sv** %linear_sv, align 8
  %228 = bitcast %struct.sv* %227 to i8*
  %229 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_flags275 = getelementptr inbounds %struct.hv, %struct.hv* %229, i32 0, i32 2
  %230 = load i32, i32* %sv_flags275, align 4
  %and276 = and i32 %230, 33554432
  %tobool277 = icmp ne i32 %and276, 0
  br i1 %tobool277, label %land.lhs.true278, label %cond.false317

land.lhs.true278:                                 ; preds = %if.then274
  %231 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_u279 = getelementptr inbounds %struct.hv, %struct.hv* %231, i32 0, i32 3
  %svu_hash280 = bitcast %union.anon.4* %sv_u279 to %struct.he***
  %232 = load %struct.he**, %struct.he*** %svu_hash280, align 8
  %233 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_any281 = getelementptr inbounds %struct.hv, %struct.hv* %233, i32 0, i32 0
  %234 = load %struct.xpvhv*, %struct.xpvhv** %sv_any281, align 8
  %xhv_max282 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %234, i32 0, i32 3
  %235 = load i64, i64* %xhv_max282, align 8
  %add283 = add i64 %235, 1
  %arrayidx284 = getelementptr inbounds %struct.he*, %struct.he** %232, i64 %add283
  %236 = bitcast %struct.he** %arrayidx284 to %struct.xpvhv_aux*
  %xhv_name_u285 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %236, i32 0, i32 0
  %xhvnameu_name286 = bitcast %union._xhvnameu* %xhv_name_u285 to %struct.hek**
  %237 = load %struct.hek*, %struct.hek** %xhvnameu_name286, align 8
  %tobool287 = icmp ne %struct.hek* %237, null
  br i1 %tobool287, label %cond.true288, label %cond.false317

cond.true288:                                     ; preds = %land.lhs.true278
  %238 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_u289 = getelementptr inbounds %struct.hv, %struct.hv* %238, i32 0, i32 3
  %svu_hash290 = bitcast %union.anon.4* %sv_u289 to %struct.he***
  %239 = load %struct.he**, %struct.he*** %svu_hash290, align 8
  %240 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_any291 = getelementptr inbounds %struct.hv, %struct.hv* %240, i32 0, i32 0
  %241 = load %struct.xpvhv*, %struct.xpvhv** %sv_any291, align 8
  %xhv_max292 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %241, i32 0, i32 3
  %242 = load i64, i64* %xhv_max292, align 8
  %add293 = add i64 %242, 1
  %arrayidx294 = getelementptr inbounds %struct.he*, %struct.he** %239, i64 %add293
  %243 = bitcast %struct.he** %arrayidx294 to %struct.xpvhv_aux*
  %xhv_name_count295 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %243, i32 0, i32 4
  %244 = load i32, i32* %xhv_name_count295, align 4
  %tobool296 = icmp ne i32 %244, 0
  br i1 %tobool296, label %cond.true297, label %cond.false306

cond.true297:                                     ; preds = %cond.true288
  %245 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_u298 = getelementptr inbounds %struct.hv, %struct.hv* %245, i32 0, i32 3
  %svu_hash299 = bitcast %union.anon.4* %sv_u298 to %struct.he***
  %246 = load %struct.he**, %struct.he*** %svu_hash299, align 8
  %247 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_any300 = getelementptr inbounds %struct.hv, %struct.hv* %247, i32 0, i32 0
  %248 = load %struct.xpvhv*, %struct.xpvhv** %sv_any300, align 8
  %xhv_max301 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %248, i32 0, i32 3
  %249 = load i64, i64* %xhv_max301, align 8
  %add302 = add i64 %249, 1
  %arrayidx303 = getelementptr inbounds %struct.he*, %struct.he** %246, i64 %add302
  %250 = bitcast %struct.he** %arrayidx303 to %struct.xpvhv_aux*
  %xhv_name_u304 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %250, i32 0, i32 0
  %xhvnameu_names305 = bitcast %union._xhvnameu* %xhv_name_u304 to %struct.hek***
  %251 = load %struct.hek**, %struct.hek*** %xhvnameu_names305, align 8
  %252 = load %struct.hek*, %struct.hek** %251, align 8
  br label %cond.end315

cond.false306:                                    ; preds = %cond.true288
  %253 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_u307 = getelementptr inbounds %struct.hv, %struct.hv* %253, i32 0, i32 3
  %svu_hash308 = bitcast %union.anon.4* %sv_u307 to %struct.he***
  %254 = load %struct.he**, %struct.he*** %svu_hash308, align 8
  %255 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_any309 = getelementptr inbounds %struct.hv, %struct.hv* %255, i32 0, i32 0
  %256 = load %struct.xpvhv*, %struct.xpvhv** %sv_any309, align 8
  %xhv_max310 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %256, i32 0, i32 3
  %257 = load i64, i64* %xhv_max310, align 8
  %add311 = add i64 %257, 1
  %arrayidx312 = getelementptr inbounds %struct.he*, %struct.he** %254, i64 %add311
  %258 = bitcast %struct.he** %arrayidx312 to %struct.xpvhv_aux*
  %xhv_name_u313 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %258, i32 0, i32 0
  %xhvnameu_name314 = bitcast %union._xhvnameu* %xhv_name_u313 to %struct.hek**
  %259 = load %struct.hek*, %struct.hek** %xhvnameu_name314, align 8
  br label %cond.end315

cond.end315:                                      ; preds = %cond.false306, %cond.true297
  %cond316 = phi %struct.hek* [ %252, %cond.true297 ], [ %259, %cond.false306 ]
  br label %cond.end318

cond.false317:                                    ; preds = %land.lhs.true278, %if.then274
  br label %cond.end318

cond.end318:                                      ; preds = %cond.false317, %cond.end315
  %cond319 = phi %struct.hek* [ %cond316, %cond.end315 ], [ null, %cond.false317 ]
  %260 = bitcast %struct.hek* %cond319 to i8*
  call void (i32, i8*, ...) @Perl_ck_warner(i32 28, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.49, i64 0, i64 0), i8* %228, i8* %260)
  br label %while.cond

if.end320:                                        ; preds = %while.body
  %261 = load %struct.hv*, %struct.hv** %cstash, align 8
  %262 = load i8*, i8** %name.addr, align 8
  %263 = load i32, i32* %is_utf8, align 4
  %tobool321 = icmp ne i32 %263, 0
  br i1 %tobool321, label %cond.true322, label %cond.false324

cond.true322:                                     ; preds = %if.end320
  %264 = load i64, i64* %len.addr, align 8
  %conv323 = trunc i64 %264 to i32
  %sub = sub nsw i32 0, %conv323
  br label %cond.end326

cond.false324:                                    ; preds = %if.end320
  %265 = load i64, i64* %len.addr, align 8
  %conv325 = trunc i64 %265 to i32
  br label %cond.end326

cond.end326:                                      ; preds = %cond.false324, %cond.true322
  %cond327 = phi i32 [ %sub, %cond.true322 ], [ %conv325, %cond.false324 ]
  %call328 = call i8* @Perl_hv_common_key_len(%struct.hv* %261, i8* %262, i32 %cond327, i32 32, %struct.sv* null, i32 0)
  %266 = bitcast i8* %call328 to %struct.sv**
  %267 = bitcast %struct.sv** %266 to %struct.gv**
  store %struct.gv** %267, %struct.gv*** %gvp, align 8
  %268 = load %struct.gv**, %struct.gv*** %gvp, align 8
  %tobool329 = icmp ne %struct.gv** %268, null
  br i1 %tobool329, label %if.else497, label %if.then330

if.then330:                                       ; preds = %cond.end326
  %269 = load i64, i64* %len.addr, align 8
  %cmp331 = icmp ugt i64 %269, 1
  br i1 %cmp331, label %land.lhs.true333, label %if.end496

land.lhs.true333:                                 ; preds = %if.then330
  %270 = load %struct.hv*, %struct.hv** %cstash, align 8
  %sv_flags334 = getelementptr inbounds %struct.hv, %struct.hv* %270, i32 0, i32 2
  %271 = load i32, i32* %sv_flags334, align 4
  %and335 = and i32 %271, 33554432
  %tobool336 = icmp ne i32 %and335, 0
  br i1 %tobool336, label %land.lhs.true337, label %cond.false406

land.lhs.true337:                                 ; preds = %land.lhs.true333
  %272 = load %struct.hv*, %struct.hv** %cstash, align 8
  %sv_u338 = getelementptr inbounds %struct.hv, %struct.hv* %272, i32 0, i32 3
  %svu_hash339 = bitcast %union.anon.4* %sv_u338 to %struct.he***
  %273 = load %struct.he**, %struct.he*** %svu_hash339, align 8
  %274 = load %struct.hv*, %struct.hv** %cstash, align 8
  %sv_any340 = getelementptr inbounds %struct.hv, %struct.hv* %274, i32 0, i32 0
  %275 = load %struct.xpvhv*, %struct.xpvhv** %sv_any340, align 8
  %xhv_max341 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %275, i32 0, i32 3
  %276 = load i64, i64* %xhv_max341, align 8
  %add342 = add i64 %276, 1
  %arrayidx343 = getelementptr inbounds %struct.he*, %struct.he** %273, i64 %add342
  %277 = bitcast %struct.he** %arrayidx343 to %struct.xpvhv_aux*
  %xhv_name_u344 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %277, i32 0, i32 0
  %xhvnameu_name345 = bitcast %union._xhvnameu* %xhv_name_u344 to %struct.hek**
  %278 = load %struct.hek*, %struct.hek** %xhvnameu_name345, align 8
  %tobool346 = icmp ne %struct.hek* %278, null
  br i1 %tobool346, label %land.lhs.true347, label %cond.false406

land.lhs.true347:                                 ; preds = %land.lhs.true337
  %279 = load %struct.hv*, %struct.hv** %cstash, align 8
  %sv_u348 = getelementptr inbounds %struct.hv, %struct.hv* %279, i32 0, i32 3
  %svu_hash349 = bitcast %union.anon.4* %sv_u348 to %struct.he***
  %280 = load %struct.he**, %struct.he*** %svu_hash349, align 8
  %281 = load %struct.hv*, %struct.hv** %cstash, align 8
  %sv_any350 = getelementptr inbounds %struct.hv, %struct.hv* %281, i32 0, i32 0
  %282 = load %struct.xpvhv*, %struct.xpvhv** %sv_any350, align 8
  %xhv_max351 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %282, i32 0, i32 3
  %283 = load i64, i64* %xhv_max351, align 8
  %add352 = add i64 %283, 1
  %arrayidx353 = getelementptr inbounds %struct.he*, %struct.he** %280, i64 %add352
  %284 = bitcast %struct.he** %arrayidx353 to %struct.xpvhv_aux*
  %xhv_name_count354 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %284, i32 0, i32 4
  %285 = load i32, i32* %xhv_name_count354, align 4
  %tobool355 = icmp ne i32 %285, 0
  br i1 %tobool355, label %cond.true356, label %cond.false366

cond.true356:                                     ; preds = %land.lhs.true347
  %286 = load %struct.hv*, %struct.hv** %cstash, align 8
  %sv_u357 = getelementptr inbounds %struct.hv, %struct.hv* %286, i32 0, i32 3
  %svu_hash358 = bitcast %union.anon.4* %sv_u357 to %struct.he***
  %287 = load %struct.he**, %struct.he*** %svu_hash358, align 8
  %288 = load %struct.hv*, %struct.hv** %cstash, align 8
  %sv_any359 = getelementptr inbounds %struct.hv, %struct.hv* %288, i32 0, i32 0
  %289 = load %struct.xpvhv*, %struct.xpvhv** %sv_any359, align 8
  %xhv_max360 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %289, i32 0, i32 3
  %290 = load i64, i64* %xhv_max360, align 8
  %add361 = add i64 %290, 1
  %arrayidx362 = getelementptr inbounds %struct.he*, %struct.he** %287, i64 %add361
  %291 = bitcast %struct.he** %arrayidx362 to %struct.xpvhv_aux*
  %xhv_name_u363 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %291, i32 0, i32 0
  %xhvnameu_names364 = bitcast %union._xhvnameu* %xhv_name_u363 to %struct.hek***
  %292 = load %struct.hek**, %struct.hek*** %xhvnameu_names364, align 8
  %293 = load %struct.hek*, %struct.hek** %292, align 8
  %tobool365 = icmp ne %struct.hek* %293, null
  br i1 %tobool365, label %cond.true376, label %cond.false406

cond.false366:                                    ; preds = %land.lhs.true347
  %294 = load %struct.hv*, %struct.hv** %cstash, align 8
  %sv_u367 = getelementptr inbounds %struct.hv, %struct.hv* %294, i32 0, i32 3
  %svu_hash368 = bitcast %union.anon.4* %sv_u367 to %struct.he***
  %295 = load %struct.he**, %struct.he*** %svu_hash368, align 8
  %296 = load %struct.hv*, %struct.hv** %cstash, align 8
  %sv_any369 = getelementptr inbounds %struct.hv, %struct.hv* %296, i32 0, i32 0
  %297 = load %struct.xpvhv*, %struct.xpvhv** %sv_any369, align 8
  %xhv_max370 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %297, i32 0, i32 3
  %298 = load i64, i64* %xhv_max370, align 8
  %add371 = add i64 %298, 1
  %arrayidx372 = getelementptr inbounds %struct.he*, %struct.he** %295, i64 %add371
  %299 = bitcast %struct.he** %arrayidx372 to %struct.xpvhv_aux*
  %xhv_name_u373 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %299, i32 0, i32 0
  %xhvnameu_name374 = bitcast %union._xhvnameu* %xhv_name_u373 to %struct.hek**
  %300 = load %struct.hek*, %struct.hek** %xhvnameu_name374, align 8
  %tobool375 = icmp ne %struct.hek* %300, null
  br i1 %tobool375, label %cond.true376, label %cond.false406

cond.true376:                                     ; preds = %cond.false366, %cond.true356
  %301 = load %struct.hv*, %struct.hv** %cstash, align 8
  %sv_u377 = getelementptr inbounds %struct.hv, %struct.hv* %301, i32 0, i32 3
  %svu_hash378 = bitcast %union.anon.4* %sv_u377 to %struct.he***
  %302 = load %struct.he**, %struct.he*** %svu_hash378, align 8
  %303 = load %struct.hv*, %struct.hv** %cstash, align 8
  %sv_any379 = getelementptr inbounds %struct.hv, %struct.hv* %303, i32 0, i32 0
  %304 = load %struct.xpvhv*, %struct.xpvhv** %sv_any379, align 8
  %xhv_max380 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %304, i32 0, i32 3
  %305 = load i64, i64* %xhv_max380, align 8
  %add381 = add i64 %305, 1
  %arrayidx382 = getelementptr inbounds %struct.he*, %struct.he** %302, i64 %add381
  %306 = bitcast %struct.he** %arrayidx382 to %struct.xpvhv_aux*
  %xhv_name_count383 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %306, i32 0, i32 4
  %307 = load i32, i32* %xhv_name_count383, align 4
  %tobool384 = icmp ne i32 %307, 0
  br i1 %tobool384, label %cond.true385, label %cond.false394

cond.true385:                                     ; preds = %cond.true376
  %308 = load %struct.hv*, %struct.hv** %cstash, align 8
  %sv_u386 = getelementptr inbounds %struct.hv, %struct.hv* %308, i32 0, i32 3
  %svu_hash387 = bitcast %union.anon.4* %sv_u386 to %struct.he***
  %309 = load %struct.he**, %struct.he*** %svu_hash387, align 8
  %310 = load %struct.hv*, %struct.hv** %cstash, align 8
  %sv_any388 = getelementptr inbounds %struct.hv, %struct.hv* %310, i32 0, i32 0
  %311 = load %struct.xpvhv*, %struct.xpvhv** %sv_any388, align 8
  %xhv_max389 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %311, i32 0, i32 3
  %312 = load i64, i64* %xhv_max389, align 8
  %add390 = add i64 %312, 1
  %arrayidx391 = getelementptr inbounds %struct.he*, %struct.he** %309, i64 %add390
  %313 = bitcast %struct.he** %arrayidx391 to %struct.xpvhv_aux*
  %xhv_name_u392 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %313, i32 0, i32 0
  %xhvnameu_names393 = bitcast %union._xhvnameu* %xhv_name_u392 to %struct.hek***
  %314 = load %struct.hek**, %struct.hek*** %xhvnameu_names393, align 8
  %315 = load %struct.hek*, %struct.hek** %314, align 8
  br label %cond.end403

cond.false394:                                    ; preds = %cond.true376
  %316 = load %struct.hv*, %struct.hv** %cstash, align 8
  %sv_u395 = getelementptr inbounds %struct.hv, %struct.hv* %316, i32 0, i32 3
  %svu_hash396 = bitcast %union.anon.4* %sv_u395 to %struct.he***
  %317 = load %struct.he**, %struct.he*** %svu_hash396, align 8
  %318 = load %struct.hv*, %struct.hv** %cstash, align 8
  %sv_any397 = getelementptr inbounds %struct.hv, %struct.hv* %318, i32 0, i32 0
  %319 = load %struct.xpvhv*, %struct.xpvhv** %sv_any397, align 8
  %xhv_max398 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %319, i32 0, i32 3
  %320 = load i64, i64* %xhv_max398, align 8
  %add399 = add i64 %320, 1
  %arrayidx400 = getelementptr inbounds %struct.he*, %struct.he** %317, i64 %add399
  %321 = bitcast %struct.he** %arrayidx400 to %struct.xpvhv_aux*
  %xhv_name_u401 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %321, i32 0, i32 0
  %xhvnameu_name402 = bitcast %union._xhvnameu* %xhv_name_u401 to %struct.hek**
  %322 = load %struct.hek*, %struct.hek** %xhvnameu_name402, align 8
  br label %cond.end403

cond.end403:                                      ; preds = %cond.false394, %cond.true385
  %cond404 = phi %struct.hek* [ %315, %cond.true385 ], [ %322, %cond.false394 ]
  %hek_len405 = getelementptr inbounds %struct.hek, %struct.hek* %cond404, i32 0, i32 1
  %323 = load i32, i32* %hek_len405, align 4
  br label %cond.end407

cond.false406:                                    ; preds = %cond.false366, %cond.true356, %land.lhs.true337, %land.lhs.true333
  br label %cond.end407

cond.end407:                                      ; preds = %cond.false406, %cond.end403
  %cond408 = phi i32 [ %323, %cond.end403 ], [ 0, %cond.false406 ]
  %cmp409 = icmp eq i32 %cond408, 4
  br i1 %cmp409, label %if.then411, label %if.end496

if.then411:                                       ; preds = %cond.end407
  %324 = load %struct.hv*, %struct.hv** %cstash, align 8
  %sv_flags413 = getelementptr inbounds %struct.hv, %struct.hv* %324, i32 0, i32 2
  %325 = load i32, i32* %sv_flags413, align 4
  %and414 = and i32 %325, 33554432
  %tobool415 = icmp ne i32 %and414, 0
  br i1 %tobool415, label %land.lhs.true416, label %cond.false486

land.lhs.true416:                                 ; preds = %if.then411
  %326 = load %struct.hv*, %struct.hv** %cstash, align 8
  %sv_u417 = getelementptr inbounds %struct.hv, %struct.hv* %326, i32 0, i32 3
  %svu_hash418 = bitcast %union.anon.4* %sv_u417 to %struct.he***
  %327 = load %struct.he**, %struct.he*** %svu_hash418, align 8
  %328 = load %struct.hv*, %struct.hv** %cstash, align 8
  %sv_any419 = getelementptr inbounds %struct.hv, %struct.hv* %328, i32 0, i32 0
  %329 = load %struct.xpvhv*, %struct.xpvhv** %sv_any419, align 8
  %xhv_max420 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %329, i32 0, i32 3
  %330 = load i64, i64* %xhv_max420, align 8
  %add421 = add i64 %330, 1
  %arrayidx422 = getelementptr inbounds %struct.he*, %struct.he** %327, i64 %add421
  %331 = bitcast %struct.he** %arrayidx422 to %struct.xpvhv_aux*
  %xhv_name_u423 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %331, i32 0, i32 0
  %xhvnameu_name424 = bitcast %union._xhvnameu* %xhv_name_u423 to %struct.hek**
  %332 = load %struct.hek*, %struct.hek** %xhvnameu_name424, align 8
  %tobool425 = icmp ne %struct.hek* %332, null
  br i1 %tobool425, label %land.lhs.true426, label %cond.false486

land.lhs.true426:                                 ; preds = %land.lhs.true416
  %333 = load %struct.hv*, %struct.hv** %cstash, align 8
  %sv_u427 = getelementptr inbounds %struct.hv, %struct.hv* %333, i32 0, i32 3
  %svu_hash428 = bitcast %union.anon.4* %sv_u427 to %struct.he***
  %334 = load %struct.he**, %struct.he*** %svu_hash428, align 8
  %335 = load %struct.hv*, %struct.hv** %cstash, align 8
  %sv_any429 = getelementptr inbounds %struct.hv, %struct.hv* %335, i32 0, i32 0
  %336 = load %struct.xpvhv*, %struct.xpvhv** %sv_any429, align 8
  %xhv_max430 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %336, i32 0, i32 3
  %337 = load i64, i64* %xhv_max430, align 8
  %add431 = add i64 %337, 1
  %arrayidx432 = getelementptr inbounds %struct.he*, %struct.he** %334, i64 %add431
  %338 = bitcast %struct.he** %arrayidx432 to %struct.xpvhv_aux*
  %xhv_name_count433 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %338, i32 0, i32 4
  %339 = load i32, i32* %xhv_name_count433, align 4
  %tobool434 = icmp ne i32 %339, 0
  br i1 %tobool434, label %cond.true435, label %cond.false445

cond.true435:                                     ; preds = %land.lhs.true426
  %340 = load %struct.hv*, %struct.hv** %cstash, align 8
  %sv_u436 = getelementptr inbounds %struct.hv, %struct.hv* %340, i32 0, i32 3
  %svu_hash437 = bitcast %union.anon.4* %sv_u436 to %struct.he***
  %341 = load %struct.he**, %struct.he*** %svu_hash437, align 8
  %342 = load %struct.hv*, %struct.hv** %cstash, align 8
  %sv_any438 = getelementptr inbounds %struct.hv, %struct.hv* %342, i32 0, i32 0
  %343 = load %struct.xpvhv*, %struct.xpvhv** %sv_any438, align 8
  %xhv_max439 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %343, i32 0, i32 3
  %344 = load i64, i64* %xhv_max439, align 8
  %add440 = add i64 %344, 1
  %arrayidx441 = getelementptr inbounds %struct.he*, %struct.he** %341, i64 %add440
  %345 = bitcast %struct.he** %arrayidx441 to %struct.xpvhv_aux*
  %xhv_name_u442 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %345, i32 0, i32 0
  %xhvnameu_names443 = bitcast %union._xhvnameu* %xhv_name_u442 to %struct.hek***
  %346 = load %struct.hek**, %struct.hek*** %xhvnameu_names443, align 8
  %347 = load %struct.hek*, %struct.hek** %346, align 8
  %tobool444 = icmp ne %struct.hek* %347, null
  br i1 %tobool444, label %cond.true455, label %cond.false486

cond.false445:                                    ; preds = %land.lhs.true426
  %348 = load %struct.hv*, %struct.hv** %cstash, align 8
  %sv_u446 = getelementptr inbounds %struct.hv, %struct.hv* %348, i32 0, i32 3
  %svu_hash447 = bitcast %union.anon.4* %sv_u446 to %struct.he***
  %349 = load %struct.he**, %struct.he*** %svu_hash447, align 8
  %350 = load %struct.hv*, %struct.hv** %cstash, align 8
  %sv_any448 = getelementptr inbounds %struct.hv, %struct.hv* %350, i32 0, i32 0
  %351 = load %struct.xpvhv*, %struct.xpvhv** %sv_any448, align 8
  %xhv_max449 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %351, i32 0, i32 3
  %352 = load i64, i64* %xhv_max449, align 8
  %add450 = add i64 %352, 1
  %arrayidx451 = getelementptr inbounds %struct.he*, %struct.he** %349, i64 %add450
  %353 = bitcast %struct.he** %arrayidx451 to %struct.xpvhv_aux*
  %xhv_name_u452 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %353, i32 0, i32 0
  %xhvnameu_name453 = bitcast %union._xhvnameu* %xhv_name_u452 to %struct.hek**
  %354 = load %struct.hek*, %struct.hek** %xhvnameu_name453, align 8
  %tobool454 = icmp ne %struct.hek* %354, null
  br i1 %tobool454, label %cond.true455, label %cond.false486

cond.true455:                                     ; preds = %cond.false445, %cond.true435
  %355 = load %struct.hv*, %struct.hv** %cstash, align 8
  %sv_u456 = getelementptr inbounds %struct.hv, %struct.hv* %355, i32 0, i32 3
  %svu_hash457 = bitcast %union.anon.4* %sv_u456 to %struct.he***
  %356 = load %struct.he**, %struct.he*** %svu_hash457, align 8
  %357 = load %struct.hv*, %struct.hv** %cstash, align 8
  %sv_any458 = getelementptr inbounds %struct.hv, %struct.hv* %357, i32 0, i32 0
  %358 = load %struct.xpvhv*, %struct.xpvhv** %sv_any458, align 8
  %xhv_max459 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %358, i32 0, i32 3
  %359 = load i64, i64* %xhv_max459, align 8
  %add460 = add i64 %359, 1
  %arrayidx461 = getelementptr inbounds %struct.he*, %struct.he** %356, i64 %add460
  %360 = bitcast %struct.he** %arrayidx461 to %struct.xpvhv_aux*
  %xhv_name_count462 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %360, i32 0, i32 4
  %361 = load i32, i32* %xhv_name_count462, align 4
  %tobool463 = icmp ne i32 %361, 0
  br i1 %tobool463, label %cond.true464, label %cond.false473

cond.true464:                                     ; preds = %cond.true455
  %362 = load %struct.hv*, %struct.hv** %cstash, align 8
  %sv_u465 = getelementptr inbounds %struct.hv, %struct.hv* %362, i32 0, i32 3
  %svu_hash466 = bitcast %union.anon.4* %sv_u465 to %struct.he***
  %363 = load %struct.he**, %struct.he*** %svu_hash466, align 8
  %364 = load %struct.hv*, %struct.hv** %cstash, align 8
  %sv_any467 = getelementptr inbounds %struct.hv, %struct.hv* %364, i32 0, i32 0
  %365 = load %struct.xpvhv*, %struct.xpvhv** %sv_any467, align 8
  %xhv_max468 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %365, i32 0, i32 3
  %366 = load i64, i64* %xhv_max468, align 8
  %add469 = add i64 %366, 1
  %arrayidx470 = getelementptr inbounds %struct.he*, %struct.he** %363, i64 %add469
  %367 = bitcast %struct.he** %arrayidx470 to %struct.xpvhv_aux*
  %xhv_name_u471 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %367, i32 0, i32 0
  %xhvnameu_names472 = bitcast %union._xhvnameu* %xhv_name_u471 to %struct.hek***
  %368 = load %struct.hek**, %struct.hek*** %xhvnameu_names472, align 8
  %369 = load %struct.hek*, %struct.hek** %368, align 8
  br label %cond.end482

cond.false473:                                    ; preds = %cond.true455
  %370 = load %struct.hv*, %struct.hv** %cstash, align 8
  %sv_u474 = getelementptr inbounds %struct.hv, %struct.hv* %370, i32 0, i32 3
  %svu_hash475 = bitcast %union.anon.4* %sv_u474 to %struct.he***
  %371 = load %struct.he**, %struct.he*** %svu_hash475, align 8
  %372 = load %struct.hv*, %struct.hv** %cstash, align 8
  %sv_any476 = getelementptr inbounds %struct.hv, %struct.hv* %372, i32 0, i32 0
  %373 = load %struct.xpvhv*, %struct.xpvhv** %sv_any476, align 8
  %xhv_max477 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %373, i32 0, i32 3
  %374 = load i64, i64* %xhv_max477, align 8
  %add478 = add i64 %374, 1
  %arrayidx479 = getelementptr inbounds %struct.he*, %struct.he** %371, i64 %add478
  %375 = bitcast %struct.he** %arrayidx479 to %struct.xpvhv_aux*
  %xhv_name_u480 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %375, i32 0, i32 0
  %xhvnameu_name481 = bitcast %union._xhvnameu* %xhv_name_u480 to %struct.hek**
  %376 = load %struct.hek*, %struct.hek** %xhvnameu_name481, align 8
  br label %cond.end482

cond.end482:                                      ; preds = %cond.false473, %cond.true464
  %cond483 = phi %struct.hek* [ %369, %cond.true464 ], [ %376, %cond.false473 ]
  %hek_key484 = getelementptr inbounds %struct.hek, %struct.hek* %cond483, i32 0, i32 2
  %arraydecay485 = getelementptr inbounds [1 x i8], [1 x i8]* %hek_key484, i64 0, i64 0
  br label %cond.end487

cond.false486:                                    ; preds = %cond.false445, %cond.true435, %land.lhs.true416, %if.then411
  br label %cond.end487

cond.end487:                                      ; preds = %cond.false486, %cond.end482
  %cond488 = phi i8* [ %arraydecay485, %cond.end482 ], [ null, %cond.false486 ]
  store i8* %cond488, i8** %hvname412, align 8
  %377 = load i8*, i8** %hvname412, align 8
  %call489 = call i32 @strncmp(i8* %377, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.48, i64 0, i64 0), i64 4) #4
  %tobool490 = icmp ne i32 %call489, 0
  br i1 %tobool490, label %if.end495, label %land.lhs.true491

land.lhs.true491:                                 ; preds = %cond.end487
  %378 = load %struct.hv*, %struct.hv** %cstash, align 8
  %379 = load i8*, i8** %name.addr, align 8
  %380 = load i64, i64* %len.addr, align 8
  %call492 = call %struct.gv* @S_maybe_add_coresub(%struct.hv* %378, %struct.gv* null, i8* %379, i64 %380)
  store %struct.gv* %call492, %struct.gv** %candidate, align 8
  %tobool493 = icmp ne %struct.gv* %call492, null
  br i1 %tobool493, label %if.then494, label %if.end495

if.then494:                                       ; preds = %land.lhs.true491
  br label %have_candidate

if.end495:                                        ; preds = %land.lhs.true491, %cond.end487
  br label %if.end496

if.end496:                                        ; preds = %if.end495, %cond.end407, %if.then330
  br label %while.cond

if.else497:                                       ; preds = %cond.end326
  %381 = load %struct.gv**, %struct.gv*** %gvp, align 8
  %382 = load %struct.gv*, %struct.gv** %381, align 8
  store %struct.gv* %382, %struct.gv** %candidate, align 8
  br label %if.end498

if.end498:                                        ; preds = %if.else497
  br label %have_candidate

have_candidate:                                   ; preds = %if.end498, %if.then494
  %383 = load %struct.gv*, %struct.gv** %candidate, align 8
  %sv_flags499 = getelementptr inbounds %struct.gv, %struct.gv* %383, i32 0, i32 2
  %384 = load i32, i32* %sv_flags499, align 4
  %and500 = and i32 %384, 255
  %cmp501 = icmp ne i32 %and500, 9
  br i1 %cmp501, label %if.then503, label %if.end505

if.then503:                                       ; preds = %have_candidate
  %385 = load %struct.gv*, %struct.gv** %candidate, align 8
  %386 = load %struct.hv*, %struct.hv** %cstash, align 8
  %387 = load i8*, i8** %name.addr, align 8
  %388 = load i64, i64* %len.addr, align 8
  %389 = load i32, i32* %is_utf8, align 4
  %or504 = or i32 2, %389
  call void @Perl_gv_init_pvn(%struct.gv* %385, %struct.hv* %386, i8* %387, i64 %388, i32 %or504)
  br label %if.end505

if.end505:                                        ; preds = %if.then503, %have_candidate
  %390 = load %struct.gv*, %struct.gv** %candidate, align 8
  %sv_flags506 = getelementptr inbounds %struct.gv, %struct.gv* %390, i32 0, i32 2
  %391 = load i32, i32* %sv_flags506, align 4
  %and507 = and i32 %391, 255
  %cmp508 = icmp eq i32 %and507, 9
  br i1 %cmp508, label %land.lhs.true510, label %if.end553

land.lhs.true510:                                 ; preds = %if.end505
  %392 = load %struct.gv*, %struct.gv** %candidate, align 8
  %sv_u511 = getelementptr inbounds %struct.gv, %struct.gv* %392, i32 0, i32 3
  %svu_gp512 = bitcast %union.anon.6* %sv_u511 to %struct.gp**
  %393 = load %struct.gp*, %struct.gp** %svu_gp512, align 8
  %add.ptr513 = getelementptr inbounds %struct.gp, %struct.gp* %393, i64 0
  %gp_cv514 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr513, i32 0, i32 2
  %394 = load %struct.cv*, %struct.cv** %gp_cv514, align 8
  %add.ptr515 = getelementptr inbounds %struct.cv, %struct.cv* %394, i64 0
  store %struct.cv* %add.ptr515, %struct.cv** %cand_cv, align 8
  %tobool516 = icmp ne %struct.cv* %add.ptr515, null
  br i1 %tobool516, label %land.lhs.true517, label %if.end553

land.lhs.true517:                                 ; preds = %land.lhs.true510
  %395 = load %struct.gv*, %struct.gv** %candidate, align 8
  %sv_u518 = getelementptr inbounds %struct.gv, %struct.gv* %395, i32 0, i32 3
  %svu_gp519 = bitcast %union.anon.6* %sv_u518 to %struct.gp**
  %396 = load %struct.gp*, %struct.gp** %svu_gp519, align 8
  %add.ptr520 = getelementptr inbounds %struct.gp, %struct.gp* %396, i64 0
  %gp_cvgen521 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr520, i32 0, i32 3
  %397 = load i32, i32* %gp_cvgen521, align 8
  %tobool522 = icmp ne i32 %397, 0
  br i1 %tobool522, label %if.end553, label %if.then523

if.then523:                                       ; preds = %land.lhs.true517
  %398 = load %struct.gv*, %struct.gv** %topgv, align 8
  %tobool524 = icmp ne %struct.gv* %398, null
  br i1 %tobool524, label %land.lhs.true525, label %if.end552

land.lhs.true525:                                 ; preds = %if.then523
  %399 = load %struct.gv*, %struct.gv** %topgv, align 8
  %sv_u526 = getelementptr inbounds %struct.gv, %struct.gv* %399, i32 0, i32 3
  %svu_gp527 = bitcast %union.anon.6* %sv_u526 to %struct.gp**
  %400 = load %struct.gp*, %struct.gp** %svu_gp527, align 8
  %add.ptr528 = getelementptr inbounds %struct.gp, %struct.gp* %400, i64 0
  %gp_refcnt = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr528, i32 0, i32 4
  %401 = load i32, i32* %gp_refcnt, align 4
  %cmp529 = icmp eq i32 %401, 1
  br i1 %cmp529, label %land.lhs.true531, label %if.end552

land.lhs.true531:                                 ; preds = %land.lhs.true525
  %402 = load %struct.cv*, %struct.cv** %cand_cv, align 8
  %sv_any532 = getelementptr inbounds %struct.cv, %struct.cv* %402, i32 0, i32 0
  %403 = load %struct.xpvcv*, %struct.xpvcv** %sv_any532, align 8
  %404 = bitcast %struct.xpvcv* %403 to i8*
  %405 = bitcast i8* %404 to %struct.xpvcv*
  %xcv_root_u = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %405, i32 0, i32 6
  %xcv_root = bitcast %union.anon.9* %xcv_root_u to %struct.op**
  %406 = load %struct.op*, %struct.op** %xcv_root, align 8
  %tobool533 = icmp ne %struct.op* %406, null
  br i1 %tobool533, label %if.then538, label %lor.lhs.false534

lor.lhs.false534:                                 ; preds = %land.lhs.true531
  %407 = load %struct.cv*, %struct.cv** %cand_cv, align 8
  %sv_any535 = getelementptr inbounds %struct.cv, %struct.cv* %407, i32 0, i32 0
  %408 = load %struct.xpvcv*, %struct.xpvcv** %sv_any535, align 8
  %409 = bitcast %struct.xpvcv* %408 to i8*
  %410 = bitcast i8* %409 to %struct.xpvcv*
  %xcv_root_u536 = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %410, i32 0, i32 6
  %xcv_xsub = bitcast %union.anon.9* %xcv_root_u536 to void (%struct.cv*)**
  %411 = load void (%struct.cv*)*, void (%struct.cv*)** %xcv_xsub, align 8
  %tobool537 = icmp ne void (%struct.cv*)* %411, null
  br i1 %tobool537, label %if.then538, label %if.end552

if.then538:                                       ; preds = %lor.lhs.false534, %land.lhs.true531
  %412 = load %struct.gv*, %struct.gv** %topgv, align 8
  %sv_u539 = getelementptr inbounds %struct.gv, %struct.gv* %412, i32 0, i32 3
  %svu_gp540 = bitcast %union.anon.6* %sv_u539 to %struct.gp**
  %413 = load %struct.gp*, %struct.gp** %svu_gp540, align 8
  %add.ptr541 = getelementptr inbounds %struct.gp, %struct.gp* %413, i64 0
  %gp_cv542 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr541, i32 0, i32 2
  %414 = load %struct.cv*, %struct.cv** %gp_cv542, align 8
  %add.ptr543 = getelementptr inbounds %struct.cv, %struct.cv* %414, i64 0
  store %struct.cv* %add.ptr543, %struct.cv** %old_cv, align 8
  %415 = load %struct.cv*, %struct.cv** %old_cv, align 8
  %416 = bitcast %struct.cv* %415 to i8*
  %417 = bitcast i8* %416 to %struct.sv*
  call void @S_SvREFCNT_dec(%struct.sv* %417)
  %418 = load %struct.cv*, %struct.cv** %cand_cv, align 8
  %419 = bitcast %struct.cv* %418 to i8*
  %420 = bitcast i8* %419 to %struct.sv*
  %sv_refcnt = getelementptr inbounds %struct.sv, %struct.sv* %420, i32 0, i32 1
  %421 = load i32, i32* %sv_refcnt, align 8
  %inc = add i32 %421, 1
  store i32 %inc, i32* %sv_refcnt, align 8
  %422 = load %struct.cv*, %struct.cv** %cand_cv, align 8
  %423 = load %struct.gv*, %struct.gv** %topgv, align 8
  %sv_u544 = getelementptr inbounds %struct.gv, %struct.gv* %423, i32 0, i32 3
  %svu_gp545 = bitcast %union.anon.6* %sv_u544 to %struct.gp**
  %424 = load %struct.gp*, %struct.gp** %svu_gp545, align 8
  %add.ptr546 = getelementptr inbounds %struct.gp, %struct.gp* %424, i64 0
  %gp_cv547 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr546, i32 0, i32 2
  store %struct.cv* %422, %struct.cv** %gp_cv547, align 8
  %425 = load i32, i32* %topgen_cmp, align 4
  %426 = load %struct.gv*, %struct.gv** %topgv, align 8
  %sv_u548 = getelementptr inbounds %struct.gv, %struct.gv* %426, i32 0, i32 3
  %svu_gp549 = bitcast %union.anon.6* %sv_u548 to %struct.gp**
  %427 = load %struct.gp*, %struct.gp** %svu_gp549, align 8
  %add.ptr550 = getelementptr inbounds %struct.gp, %struct.gp* %427, i64 0
  %gp_cvgen551 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr550, i32 0, i32 3
  store i32 %425, i32* %gp_cvgen551, align 8
  br label %if.end552

if.end552:                                        ; preds = %if.then538, %lor.lhs.false534, %land.lhs.true525, %if.then523
  %428 = load %struct.gv*, %struct.gv** %candidate, align 8
  store %struct.gv* %428, %struct.gv** %retval, align 8
  br label %return

if.end553:                                        ; preds = %land.lhs.true517, %land.lhs.true510, %if.end505
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %429 = load i32, i32* %level.addr, align 4
  %cmp554 = icmp eq i32 %429, 0
  br i1 %cmp554, label %if.then559, label %lor.lhs.false556

lor.lhs.false556:                                 ; preds = %while.end
  %430 = load i32, i32* %level.addr, align 4
  %cmp557 = icmp eq i32 %430, -1
  br i1 %cmp557, label %if.then559, label %if.end606

if.then559:                                       ; preds = %lor.lhs.false556, %while.end
  %431 = load %struct.sv*, %struct.sv** %meth.addr, align 8
  %432 = load i8*, i8** %name.addr, align 8
  %433 = load i64, i64* %len.addr, align 8
  %434 = load i32, i32* %flags.addr, align 4
  %and560 = and i32 %434, -4097
  %call561 = call %struct.gv* @S_gv_fetchmeth_internal(%struct.hv* null, %struct.sv* %431, i8* %432, i64 %433, i32 1, i32 %and560)
  store %struct.gv* %call561, %struct.gv** %candidate, align 8
  %435 = load %struct.gv*, %struct.gv** %candidate, align 8
  %tobool562 = icmp ne %struct.gv* %435, null
  br i1 %tobool562, label %if.then563, label %if.end605

if.then563:                                       ; preds = %if.then559
  %436 = load %struct.gv*, %struct.gv** %candidate, align 8
  %sv_u564 = getelementptr inbounds %struct.gv, %struct.gv* %436, i32 0, i32 3
  %svu_gp565 = bitcast %union.anon.6* %sv_u564 to %struct.gp**
  %437 = load %struct.gp*, %struct.gp** %svu_gp565, align 8
  %add.ptr566 = getelementptr inbounds %struct.gp, %struct.gp* %437, i64 0
  %gp_cv567 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr566, i32 0, i32 2
  %438 = load %struct.cv*, %struct.cv** %gp_cv567, align 8
  %add.ptr568 = getelementptr inbounds %struct.cv, %struct.cv* %438, i64 0
  store %struct.cv* %add.ptr568, %struct.cv** %cand_cv, align 8
  %439 = load %struct.gv*, %struct.gv** %topgv, align 8
  %tobool569 = icmp ne %struct.gv* %439, null
  br i1 %tobool569, label %land.lhs.true570, label %if.end604

land.lhs.true570:                                 ; preds = %if.then563
  %440 = load %struct.gv*, %struct.gv** %topgv, align 8
  %sv_u571 = getelementptr inbounds %struct.gv, %struct.gv* %440, i32 0, i32 3
  %svu_gp572 = bitcast %union.anon.6* %sv_u571 to %struct.gp**
  %441 = load %struct.gp*, %struct.gp** %svu_gp572, align 8
  %add.ptr573 = getelementptr inbounds %struct.gp, %struct.gp* %441, i64 0
  %gp_refcnt574 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr573, i32 0, i32 4
  %442 = load i32, i32* %gp_refcnt574, align 4
  %cmp575 = icmp eq i32 %442, 1
  br i1 %cmp575, label %land.lhs.true577, label %if.end604

land.lhs.true577:                                 ; preds = %land.lhs.true570
  %443 = load %struct.cv*, %struct.cv** %cand_cv, align 8
  %sv_any578 = getelementptr inbounds %struct.cv, %struct.cv* %443, i32 0, i32 0
  %444 = load %struct.xpvcv*, %struct.xpvcv** %sv_any578, align 8
  %445 = bitcast %struct.xpvcv* %444 to i8*
  %446 = bitcast i8* %445 to %struct.xpvcv*
  %xcv_root_u579 = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %446, i32 0, i32 6
  %xcv_root580 = bitcast %union.anon.9* %xcv_root_u579 to %struct.op**
  %447 = load %struct.op*, %struct.op** %xcv_root580, align 8
  %tobool581 = icmp ne %struct.op* %447, null
  br i1 %tobool581, label %if.then587, label %lor.lhs.false582

lor.lhs.false582:                                 ; preds = %land.lhs.true577
  %448 = load %struct.cv*, %struct.cv** %cand_cv, align 8
  %sv_any583 = getelementptr inbounds %struct.cv, %struct.cv* %448, i32 0, i32 0
  %449 = load %struct.xpvcv*, %struct.xpvcv** %sv_any583, align 8
  %450 = bitcast %struct.xpvcv* %449 to i8*
  %451 = bitcast i8* %450 to %struct.xpvcv*
  %xcv_root_u584 = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %451, i32 0, i32 6
  %xcv_xsub585 = bitcast %union.anon.9* %xcv_root_u584 to void (%struct.cv*)**
  %452 = load void (%struct.cv*)*, void (%struct.cv*)** %xcv_xsub585, align 8
  %tobool586 = icmp ne void (%struct.cv*)* %452, null
  br i1 %tobool586, label %if.then587, label %if.end604

if.then587:                                       ; preds = %lor.lhs.false582, %land.lhs.true577
  %453 = load %struct.gv*, %struct.gv** %topgv, align 8
  %sv_u589 = getelementptr inbounds %struct.gv, %struct.gv* %453, i32 0, i32 3
  %svu_gp590 = bitcast %union.anon.6* %sv_u589 to %struct.gp**
  %454 = load %struct.gp*, %struct.gp** %svu_gp590, align 8
  %add.ptr591 = getelementptr inbounds %struct.gp, %struct.gp* %454, i64 0
  %gp_cv592 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr591, i32 0, i32 2
  %455 = load %struct.cv*, %struct.cv** %gp_cv592, align 8
  %add.ptr593 = getelementptr inbounds %struct.cv, %struct.cv* %455, i64 0
  store %struct.cv* %add.ptr593, %struct.cv** %old_cv588, align 8
  %456 = load %struct.cv*, %struct.cv** %old_cv588, align 8
  %457 = bitcast %struct.cv* %456 to i8*
  %458 = bitcast i8* %457 to %struct.sv*
  call void @S_SvREFCNT_dec(%struct.sv* %458)
  %459 = load %struct.cv*, %struct.cv** %cand_cv, align 8
  %460 = bitcast %struct.cv* %459 to i8*
  %461 = bitcast i8* %460 to %struct.sv*
  %sv_refcnt594 = getelementptr inbounds %struct.sv, %struct.sv* %461, i32 0, i32 1
  %462 = load i32, i32* %sv_refcnt594, align 8
  %inc595 = add i32 %462, 1
  store i32 %inc595, i32* %sv_refcnt594, align 8
  %463 = load %struct.cv*, %struct.cv** %cand_cv, align 8
  %464 = load %struct.gv*, %struct.gv** %topgv, align 8
  %sv_u596 = getelementptr inbounds %struct.gv, %struct.gv* %464, i32 0, i32 3
  %svu_gp597 = bitcast %union.anon.6* %sv_u596 to %struct.gp**
  %465 = load %struct.gp*, %struct.gp** %svu_gp597, align 8
  %add.ptr598 = getelementptr inbounds %struct.gp, %struct.gp* %465, i64 0
  %gp_cv599 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr598, i32 0, i32 2
  store %struct.cv* %463, %struct.cv** %gp_cv599, align 8
  %466 = load i32, i32* %topgen_cmp, align 4
  %467 = load %struct.gv*, %struct.gv** %topgv, align 8
  %sv_u600 = getelementptr inbounds %struct.gv, %struct.gv* %467, i32 0, i32 3
  %svu_gp601 = bitcast %union.anon.6* %sv_u600 to %struct.gp**
  %468 = load %struct.gp*, %struct.gp** %svu_gp601, align 8
  %add.ptr602 = getelementptr inbounds %struct.gp, %struct.gp* %468, i64 0
  %gp_cvgen603 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr602, i32 0, i32 3
  store i32 %466, i32* %gp_cvgen603, align 8
  br label %if.end604

if.end604:                                        ; preds = %if.then587, %lor.lhs.false582, %land.lhs.true570, %if.then563
  %469 = load %struct.gv*, %struct.gv** %candidate, align 8
  store %struct.gv* %469, %struct.gv** %retval, align 8
  br label %return

if.end605:                                        ; preds = %if.then559
  br label %if.end606

if.end606:                                        ; preds = %if.end605, %lor.lhs.false556
  %470 = load %struct.gv*, %struct.gv** %topgv, align 8
  %tobool607 = icmp ne %struct.gv* %470, null
  br i1 %tobool607, label %land.lhs.true608, label %if.end620

land.lhs.true608:                                 ; preds = %if.end606
  %471 = load %struct.gv*, %struct.gv** %topgv, align 8
  %sv_u609 = getelementptr inbounds %struct.gv, %struct.gv* %471, i32 0, i32 3
  %svu_gp610 = bitcast %union.anon.6* %sv_u609 to %struct.gp**
  %472 = load %struct.gp*, %struct.gp** %svu_gp610, align 8
  %add.ptr611 = getelementptr inbounds %struct.gp, %struct.gp* %472, i64 0
  %gp_refcnt612 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr611, i32 0, i32 4
  %473 = load i32, i32* %gp_refcnt612, align 4
  %cmp613 = icmp eq i32 %473, 1
  br i1 %cmp613, label %if.then615, label %if.end620

if.then615:                                       ; preds = %land.lhs.true608
  %474 = load i32, i32* %topgen_cmp, align 4
  %475 = load %struct.gv*, %struct.gv** %topgv, align 8
  %sv_u616 = getelementptr inbounds %struct.gv, %struct.gv* %475, i32 0, i32 3
  %svu_gp617 = bitcast %union.anon.6* %sv_u616 to %struct.gp**
  %476 = load %struct.gp*, %struct.gp** %svu_gp617, align 8
  %add.ptr618 = getelementptr inbounds %struct.gp, %struct.gp* %476, i64 0
  %gp_cvgen619 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr618, i32 0, i32 3
  store i32 %474, i32* %gp_cvgen619, align 8
  br label %if.end620

if.end620:                                        ; preds = %if.then615, %land.lhs.true608, %if.end606
  store %struct.gv* null, %struct.gv** %retval, align 8
  br label %return

return:                                           ; preds = %if.end620, %if.end604, %if.end552, %if.then175, %if.then158, %if.then2
  %477 = load %struct.gv*, %struct.gv** %retval, align 8
  ret %struct.gv* %477
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.gv* @Perl_gv_fetchmeth_pvn(%struct.hv* %stash, i8* %name, i64 %len, i32 %level, i32 %flags) #0 {
entry:
  %stash.addr = alloca %struct.hv*, align 8
  %name.addr = alloca i8*, align 8
  %len.addr = alloca i64, align 8
  %level.addr = alloca i32, align 4
  %flags.addr = alloca i32, align 4
  store %struct.hv* %stash, %struct.hv** %stash.addr, align 8
  store i8* %name, i8** %name.addr, align 8
  store i64 %len, i64* %len.addr, align 8
  store i32 %level, i32* %level.addr, align 4
  store i32 %flags, i32* %flags.addr, align 4
  %0 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %1 = load i8*, i8** %name.addr, align 8
  %2 = load i64, i64* %len.addr, align 8
  %3 = load i32, i32* %level.addr, align 4
  %4 = load i32, i32* %flags.addr, align 4
  %call = call %struct.gv* @S_gv_fetchmeth_internal(%struct.hv* %0, %struct.sv* null, i8* %1, i64 %2, i32 %3, i32 %4)
  ret %struct.gv* %call
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.gv* @Perl_gv_fetchmeth_pv(%struct.hv* %stash, i8* %name, i32 %level, i32 %flags) #0 {
entry:
  %stash.addr = alloca %struct.hv*, align 8
  %name.addr = alloca i8*, align 8
  %level.addr = alloca i32, align 4
  %flags.addr = alloca i32, align 4
  store %struct.hv* %stash, %struct.hv** %stash.addr, align 8
  store i8* %name, i8** %name.addr, align 8
  store i32 %level, i32* %level.addr, align 4
  store i32 %flags, i32* %flags.addr, align 4
  %0 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %1 = load i8*, i8** %name.addr, align 8
  %2 = load i8*, i8** %name.addr, align 8
  %call = call i64 @strlen(i8* %2) #4
  %3 = load i32, i32* %level.addr, align 4
  %4 = load i32, i32* %flags.addr, align 4
  %call1 = call %struct.gv* @S_gv_fetchmeth_internal(%struct.hv* %0, %struct.sv* null, i8* %1, i64 %call, i32 %3, i32 %4)
  ret %struct.gv* %call1
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.gv* @Perl_gv_fetchmeth_sv_autoload(%struct.hv* %stash, %struct.sv* %namesv, i32 %level, i32 %flags) #0 {
entry:
  %stash.addr = alloca %struct.hv*, align 8
  %namesv.addr = alloca %struct.sv*, align 8
  %level.addr = alloca i32, align 4
  %flags.addr = alloca i32, align 4
  %namepv = alloca i8*, align 8
  %namelen = alloca i64, align 8
  store %struct.hv* %stash, %struct.hv** %stash.addr, align 8
  store %struct.sv* %namesv, %struct.sv** %namesv.addr, align 8
  store i32 %level, i32* %level.addr, align 4
  store i32 %flags, i32* %flags.addr, align 4
  %0 = load %struct.sv*, %struct.sv** %namesv.addr, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %0, i32 0, i32 2
  %1 = load i32, i32* %sv_flags, align 4
  %and = and i32 %1, 2098176
  %cmp = icmp eq i32 %and, 1024
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %2 = load %struct.sv*, %struct.sv** %namesv.addr, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %2, i32 0, i32 0
  %3 = load i8*, i8** %sv_any, align 8
  %4 = bitcast i8* %3 to %struct.xpv*
  %xpv_cur = getelementptr inbounds %struct.xpv, %struct.xpv* %4, i32 0, i32 2
  %5 = load i64, i64* %xpv_cur, align 8
  store i64 %5, i64* %namelen, align 8
  %6 = load %struct.sv*, %struct.sv** %namesv.addr, align 8
  %sv_u = getelementptr inbounds %struct.sv, %struct.sv* %6, i32 0, i32 3
  %svu_pv = bitcast %union.anon* %sv_u to i8**
  %7 = load i8*, i8** %svu_pv, align 8
  br label %cond.end

cond.false:                                       ; preds = %entry
  %8 = load %struct.sv*, %struct.sv** %namesv.addr, align 8
  %call = call i8* @Perl_sv_2pv_flags(%struct.sv* %8, i64* %namelen, i32 2)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %7, %cond.true ], [ %call, %cond.false ]
  store i8* %cond, i8** %namepv, align 8
  %9 = load %struct.sv*, %struct.sv** %namesv.addr, align 8
  %sv_flags1 = getelementptr inbounds %struct.sv, %struct.sv* %9, i32 0, i32 2
  %10 = load i32, i32* %sv_flags1, align 4
  %and2 = and i32 %10, 536870912
  %tobool = icmp ne i32 %and2, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %cond.end
  %11 = load i32, i32* %flags.addr, align 4
  %or = or i32 %11, 536870912
  store i32 %or, i32* %flags.addr, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %cond.end
  %12 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %13 = load i8*, i8** %namepv, align 8
  %14 = load i64, i64* %namelen, align 8
  %15 = load i32, i32* %level.addr, align 4
  %16 = load i32, i32* %flags.addr, align 4
  %call3 = call %struct.gv* @Perl_gv_fetchmeth_pvn_autoload(%struct.hv* %12, i8* %13, i64 %14, i32 %15, i32 %16)
  ret %struct.gv* %call3
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.gv* @Perl_gv_fetchmeth_pvn_autoload(%struct.hv* %stash, i8* %name, i64 %len, i32 %level, i32 %flags) #0 {
entry:
  %retval = alloca %struct.gv*, align 8
  %stash.addr = alloca %struct.hv*, align 8
  %name.addr = alloca i8*, align 8
  %len.addr = alloca i64, align 8
  %level.addr = alloca i32, align 4
  %flags.addr = alloca i32, align 4
  %gv = alloca %struct.gv*, align 8
  %cv = alloca %struct.cv*, align 8
  %gvp = alloca %struct.gv**, align 8
  store %struct.hv* %stash, %struct.hv** %stash.addr, align 8
  store i8* %name, i8** %name.addr, align 8
  store i64 %len, i64* %len.addr, align 8
  store i32 %level, i32* %level.addr, align 4
  store i32 %flags, i32* %flags.addr, align 4
  %0 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %1 = load i8*, i8** %name.addr, align 8
  %2 = load i64, i64* %len.addr, align 8
  %3 = load i32, i32* %level.addr, align 4
  %4 = load i32, i32* %flags.addr, align 4
  %call = call %struct.gv* @Perl_gv_fetchmeth_pvn(%struct.hv* %0, i8* %1, i64 %2, i32 %3, i32 %4)
  store %struct.gv* %call, %struct.gv** %gv, align 8
  %5 = load %struct.gv*, %struct.gv** %gv, align 8
  %tobool = icmp ne %struct.gv* %5, null
  br i1 %tobool, label %if.end31, label %if.then

if.then:                                          ; preds = %entry
  %6 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %tobool1 = icmp ne %struct.hv* %6, null
  br i1 %tobool1, label %if.end, label %if.then2

if.then2:                                         ; preds = %if.then
  store %struct.gv* null, %struct.gv** %retval, align 8
  br label %return

if.end:                                           ; preds = %if.then
  %7 = load i64, i64* %len.addr, align 8
  %cmp = icmp eq i64 %7, 8
  br i1 %cmp, label %land.lhs.true, label %if.end6

land.lhs.true:                                    ; preds = %if.end
  %8 = load i8*, i8** %name.addr, align 8
  %call3 = call i32 @memcmp(i8* %8, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @S_autoload, i64 0, i64 0), i64 8) #4
  %tobool4 = icmp ne i32 %call3, 0
  br i1 %tobool4, label %if.end6, label %if.then5

if.then5:                                         ; preds = %land.lhs.true
  store %struct.gv* null, %struct.gv** %retval, align 8
  br label %return

if.end6:                                          ; preds = %land.lhs.true, %if.end
  %9 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %10 = load i32, i32* %flags.addr, align 4
  %call7 = call %struct.gv* @Perl_gv_fetchmeth_pvn(%struct.hv* %9, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @S_autoload, i64 0, i64 0), i64 8, i32 0, i32 %10)
  store %struct.gv* %call7, %struct.gv** %gv, align 8
  %tobool8 = icmp ne %struct.gv* %call7, null
  br i1 %tobool8, label %if.end10, label %if.then9

if.then9:                                         ; preds = %if.end6
  store %struct.gv* null, %struct.gv** %retval, align 8
  br label %return

if.end10:                                         ; preds = %if.end6
  %11 = load %struct.gv*, %struct.gv** %gv, align 8
  %sv_u = getelementptr inbounds %struct.gv, %struct.gv* %11, i32 0, i32 3
  %svu_gp = bitcast %union.anon.6* %sv_u to %struct.gp**
  %12 = load %struct.gp*, %struct.gp** %svu_gp, align 8
  %add.ptr = getelementptr inbounds %struct.gp, %struct.gp* %12, i64 0
  %gp_cv = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr, i32 0, i32 2
  %13 = load %struct.cv*, %struct.cv** %gp_cv, align 8
  %add.ptr11 = getelementptr inbounds %struct.cv, %struct.cv* %13, i64 0
  store %struct.cv* %add.ptr11, %struct.cv** %cv, align 8
  %14 = load %struct.cv*, %struct.cv** %cv, align 8
  %sv_any = getelementptr inbounds %struct.cv, %struct.cv* %14, i32 0, i32 0
  %15 = load %struct.xpvcv*, %struct.xpvcv** %sv_any, align 8
  %16 = bitcast %struct.xpvcv* %15 to i8*
  %17 = bitcast i8* %16 to %struct.xpvcv*
  %xcv_root_u = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %17, i32 0, i32 6
  %xcv_root = bitcast %union.anon.9* %xcv_root_u to %struct.op**
  %18 = load %struct.op*, %struct.op** %xcv_root, align 8
  %tobool12 = icmp ne %struct.op* %18, null
  br i1 %tobool12, label %if.end17, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end10
  %19 = load %struct.cv*, %struct.cv** %cv, align 8
  %sv_any13 = getelementptr inbounds %struct.cv, %struct.cv* %19, i32 0, i32 0
  %20 = load %struct.xpvcv*, %struct.xpvcv** %sv_any13, align 8
  %21 = bitcast %struct.xpvcv* %20 to i8*
  %22 = bitcast i8* %21 to %struct.xpvcv*
  %xcv_root_u14 = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %22, i32 0, i32 6
  %xcv_xsub = bitcast %union.anon.9* %xcv_root_u14 to void (%struct.cv*)**
  %23 = load void (%struct.cv*)*, void (%struct.cv*)** %xcv_xsub, align 8
  %tobool15 = icmp ne void (%struct.cv*)* %23, null
  br i1 %tobool15, label %if.end17, label %if.then16

if.then16:                                        ; preds = %lor.lhs.false
  store %struct.gv* null, %struct.gv** %retval, align 8
  br label %return

if.end17:                                         ; preds = %lor.lhs.false, %if.end10
  %24 = load i32, i32* %level.addr, align 4
  %cmp18 = icmp slt i32 %24, 0
  br i1 %cmp18, label %if.then19, label %if.end21

if.then19:                                        ; preds = %if.end17
  %25 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %26 = load i8*, i8** %name.addr, align 8
  %27 = load i64, i64* %len.addr, align 8
  %28 = load i32, i32* %flags.addr, align 4
  %call20 = call %struct.gv* @Perl_gv_fetchmeth_pvn(%struct.hv* %25, i8* %26, i64 %27, i32 0, i32 %28)
  br label %if.end21

if.end21:                                         ; preds = %if.then19, %if.end17
  %29 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %30 = load i8*, i8** %name.addr, align 8
  %31 = load i32, i32* %flags.addr, align 4
  %and = and i32 %31, 536870912
  %tobool22 = icmp ne i32 %and, 0
  br i1 %tobool22, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end21
  %32 = load i64, i64* %len.addr, align 8
  %conv = trunc i64 %32 to i32
  %sub = sub nsw i32 0, %conv
  br label %cond.end

cond.false:                                       ; preds = %if.end21
  %33 = load i64, i64* %len.addr, align 8
  %conv23 = trunc i64 %33 to i32
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub, %cond.true ], [ %conv23, %cond.false ]
  %34 = load i32, i32* %level.addr, align 4
  %cmp24 = icmp sge i32 %34, 0
  %35 = zext i1 %cmp24 to i64
  %cond26 = select i1 %cmp24, i32 48, i32 32
  %call27 = call i8* @Perl_hv_common_key_len(%struct.hv* %29, i8* %30, i32 %cond, i32 %cond26, %struct.sv* null, i32 0)
  %36 = bitcast i8* %call27 to %struct.sv**
  %37 = bitcast %struct.sv** %36 to %struct.gv**
  store %struct.gv** %37, %struct.gv*** %gvp, align 8
  %38 = load %struct.gv**, %struct.gv*** %gvp, align 8
  %tobool28 = icmp ne %struct.gv** %38, null
  br i1 %tobool28, label %if.end30, label %if.then29

if.then29:                                        ; preds = %cond.end
  store %struct.gv* null, %struct.gv** %retval, align 8
  br label %return

if.end30:                                         ; preds = %cond.end
  %39 = load %struct.gv**, %struct.gv*** %gvp, align 8
  %40 = load %struct.gv*, %struct.gv** %39, align 8
  store %struct.gv* %40, %struct.gv** %retval, align 8
  br label %return

if.end31:                                         ; preds = %entry
  %41 = load %struct.gv*, %struct.gv** %gv, align 8
  store %struct.gv* %41, %struct.gv** %retval, align 8
  br label %return

return:                                           ; preds = %if.end31, %if.end30, %if.then29, %if.then16, %if.then9, %if.then5, %if.then2
  %42 = load %struct.gv*, %struct.gv** %retval, align 8
  ret %struct.gv* %42
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.gv* @Perl_gv_fetchmeth_pv_autoload(%struct.hv* %stash, i8* %name, i32 %level, i32 %flags) #0 {
entry:
  %stash.addr = alloca %struct.hv*, align 8
  %name.addr = alloca i8*, align 8
  %level.addr = alloca i32, align 4
  %flags.addr = alloca i32, align 4
  store %struct.hv* %stash, %struct.hv** %stash.addr, align 8
  store i8* %name, i8** %name.addr, align 8
  store i32 %level, i32* %level.addr, align 4
  store i32 %flags, i32* %flags.addr, align 4
  %0 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %1 = load i8*, i8** %name.addr, align 8
  %2 = load i8*, i8** %name.addr, align 8
  %call = call i64 @strlen(i8* %2) #4
  %3 = load i32, i32* %level.addr, align 4
  %4 = load i32, i32* %flags.addr, align 4
  %call1 = call %struct.gv* @Perl_gv_fetchmeth_pvn_autoload(%struct.hv* %0, i8* %1, i64 %call, i32 %3, i32 %4)
  ret %struct.gv* %call1
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.gv* @Perl_gv_fetchmethod_autoload(%struct.hv* %stash, i8* %name, i32 %autoload) #0 {
entry:
  %stash.addr = alloca %struct.hv*, align 8
  %name.addr = alloca i8*, align 8
  %autoload.addr = alloca i32, align 4
  store %struct.hv* %stash, %struct.hv** %stash.addr, align 8
  store i8* %name, i8** %name.addr, align 8
  store i32 %autoload, i32* %autoload.addr, align 4
  %0 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %1 = load i8*, i8** %name.addr, align 8
  %2 = load i32, i32* %autoload.addr, align 4
  %tobool = icmp ne i32 %2, 0
  %3 = zext i1 %tobool to i64
  %cond = select i1 %tobool, i32 256, i32 0
  %call = call %struct.gv* @Perl_gv_fetchmethod_pv_flags(%struct.hv* %0, i8* %1, i32 %cond)
  ret %struct.gv* %call
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.gv* @Perl_gv_fetchmethod_pv_flags(%struct.hv* %stash, i8* %name, i32 %flags) #0 {
entry:
  %stash.addr = alloca %struct.hv*, align 8
  %name.addr = alloca i8*, align 8
  %flags.addr = alloca i32, align 4
  store %struct.hv* %stash, %struct.hv** %stash.addr, align 8
  store i8* %name, i8** %name.addr, align 8
  store i32 %flags, i32* %flags.addr, align 4
  %0 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %1 = load i8*, i8** %name.addr, align 8
  %2 = load i8*, i8** %name.addr, align 8
  %call = call i64 @strlen(i8* %2) #4
  %3 = load i32, i32* %flags.addr, align 4
  %call1 = call %struct.gv* @Perl_gv_fetchmethod_pvn_flags(%struct.hv* %0, i8* %1, i64 %call, i32 %3)
  ret %struct.gv* %call1
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.gv* @Perl_gv_fetchmethod_sv_flags(%struct.hv* %stash, %struct.sv* %namesv, i32 %flags) #0 {
entry:
  %stash.addr = alloca %struct.hv*, align 8
  %namesv.addr = alloca %struct.sv*, align 8
  %flags.addr = alloca i32, align 4
  %namepv = alloca i8*, align 8
  %namelen = alloca i64, align 8
  store %struct.hv* %stash, %struct.hv** %stash.addr, align 8
  store %struct.sv* %namesv, %struct.sv** %namesv.addr, align 8
  store i32 %flags, i32* %flags.addr, align 4
  %0 = load %struct.sv*, %struct.sv** %namesv.addr, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %0, i32 0, i32 2
  %1 = load i32, i32* %sv_flags, align 4
  %and = and i32 %1, 2098176
  %cmp = icmp eq i32 %and, 1024
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %2 = load %struct.sv*, %struct.sv** %namesv.addr, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %2, i32 0, i32 0
  %3 = load i8*, i8** %sv_any, align 8
  %4 = bitcast i8* %3 to %struct.xpv*
  %xpv_cur = getelementptr inbounds %struct.xpv, %struct.xpv* %4, i32 0, i32 2
  %5 = load i64, i64* %xpv_cur, align 8
  store i64 %5, i64* %namelen, align 8
  %6 = load %struct.sv*, %struct.sv** %namesv.addr, align 8
  %sv_u = getelementptr inbounds %struct.sv, %struct.sv* %6, i32 0, i32 3
  %svu_pv = bitcast %union.anon* %sv_u to i8**
  %7 = load i8*, i8** %svu_pv, align 8
  br label %cond.end

cond.false:                                       ; preds = %entry
  %8 = load %struct.sv*, %struct.sv** %namesv.addr, align 8
  %call = call i8* @Perl_sv_2pv_flags(%struct.sv* %8, i64* %namelen, i32 2)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %7, %cond.true ], [ %call, %cond.false ]
  store i8* %cond, i8** %namepv, align 8
  %9 = load %struct.sv*, %struct.sv** %namesv.addr, align 8
  %sv_flags1 = getelementptr inbounds %struct.sv, %struct.sv* %9, i32 0, i32 2
  %10 = load i32, i32* %sv_flags1, align 4
  %and2 = and i32 %10, 536870912
  %tobool = icmp ne i32 %and2, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %cond.end
  %11 = load i32, i32* %flags.addr, align 4
  %or = or i32 %11, 536870912
  store i32 %or, i32* %flags.addr, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %cond.end
  %12 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %13 = load i8*, i8** %namepv, align 8
  %14 = load i64, i64* %namelen, align 8
  %15 = load i32, i32* %flags.addr, align 4
  %call3 = call %struct.gv* @Perl_gv_fetchmethod_pvn_flags(%struct.hv* %12, i8* %13, i64 %14, i32 %15)
  ret %struct.gv* %call3
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.gv* @Perl_gv_fetchmethod_pvn_flags(%struct.hv* %stash, i8* %name, i64 %len, i32 %flags) #0 {
entry:
  %retval = alloca %struct.gv*, align 8
  %stash.addr = alloca %struct.hv*, align 8
  %name.addr = alloca i8*, align 8
  %len.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  %nend = alloca i8*, align 8
  %nsplit = alloca i8*, align 8
  %gv = alloca %struct.gv*, align 8
  %ostash = alloca %struct.hv*, align 8
  %origname = alloca i8*, align 8
  %error_report = alloca %struct.sv*, align 8
  %autoload = alloca i32, align 4
  %do_croak = alloca i32, align 4
  %is_utf8 = alloca i32, align 4
  %stash_name = alloca i8*, align 8
  %packnamesv = alloca %struct.sv*, align 8
  %cv = alloca %struct.cv*, align 8
  %stubgv = alloca %struct.gv*, align 8
  %autogv = alloca %struct.gv*, align 8
  store %struct.hv* %stash, %struct.hv** %stash.addr, align 8
  store i8* %name, i8** %name.addr, align 8
  store i64 %len, i64* %len.addr, align 8
  store i32 %flags, i32* %flags.addr, align 4
  store i8* null, i8** %nsplit, align 8
  %0 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  store %struct.hv* %0, %struct.hv** %ostash, align 8
  %1 = load i8*, i8** %name.addr, align 8
  store i8* %1, i8** %origname, align 8
  %2 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %3 = bitcast %struct.hv* %2 to i8*
  %4 = bitcast i8* %3 to %struct.sv*
  store %struct.sv* %4, %struct.sv** %error_report, align 8
  %5 = load i32, i32* %flags.addr, align 4
  %and = and i32 %5, 256
  store i32 %and, i32* %autoload, align 4
  %6 = load i32, i32* %flags.addr, align 4
  %and1 = and i32 %6, 512
  store i32 %and1, i32* %do_croak, align 4
  %7 = load i32, i32* %flags.addr, align 4
  %and2 = and i32 %7, 536870912
  store i32 %and2, i32* %is_utf8, align 4
  %8 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_flags = getelementptr inbounds %struct.hv, %struct.hv* %8, i32 0, i32 2
  %9 = load i32, i32* %sv_flags, align 4
  %and3 = and i32 %9, 255
  %cmp = icmp ult i32 %and3, 12
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  store %struct.hv* null, %struct.hv** %stash.addr, align 8
  br label %if.end

if.else:                                          ; preds = %entry
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %10 = load i8*, i8** %name.addr, align 8
  store i8* %10, i8** %nend, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %11 = load i8*, i8** %nend, align 8
  %12 = load i8, i8* %11, align 1
  %conv = sext i8 %12 to i32
  %tobool = icmp ne i32 %conv, 0
  br i1 %tobool, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %for.cond
  %13 = load i8*, i8** %nend, align 8
  %14 = load i8*, i8** %origname, align 8
  %15 = load i64, i64* %len.addr, align 8
  %add.ptr = getelementptr inbounds i8, i8* %14, i64 %15
  %cmp4 = icmp ne i8* %13, %add.ptr
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %for.cond
  %16 = phi i1 [ true, %for.cond ], [ %cmp4, %lor.rhs ]
  br i1 %16, label %for.body, label %for.end

for.body:                                         ; preds = %lor.end
  %17 = load i8*, i8** %nend, align 8
  %18 = load i8, i8* %17, align 1
  %conv6 = sext i8 %18 to i32
  %cmp7 = icmp eq i32 %conv6, 39
  br i1 %cmp7, label %if.then9, label %if.else11

if.then9:                                         ; preds = %for.body
  %19 = load i8*, i8** %nend, align 8
  store i8* %19, i8** %nsplit, align 8
  %20 = load i8*, i8** %nend, align 8
  %add.ptr10 = getelementptr inbounds i8, i8* %20, i64 1
  store i8* %add.ptr10, i8** %name.addr, align 8
  br label %if.end22

if.else11:                                        ; preds = %for.body
  %21 = load i8*, i8** %nend, align 8
  %22 = load i8, i8* %21, align 1
  %conv12 = sext i8 %22 to i32
  %cmp13 = icmp eq i32 %conv12, 58
  br i1 %cmp13, label %land.lhs.true, label %if.end21

land.lhs.true:                                    ; preds = %if.else11
  %23 = load i8*, i8** %nend, align 8
  %add.ptr15 = getelementptr inbounds i8, i8* %23, i64 1
  %24 = load i8, i8* %add.ptr15, align 1
  %conv16 = sext i8 %24 to i32
  %cmp17 = icmp eq i32 %conv16, 58
  br i1 %cmp17, label %if.then19, label %if.end21

if.then19:                                        ; preds = %land.lhs.true
  %25 = load i8*, i8** %nend, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %25, i32 1
  store i8* %incdec.ptr, i8** %nend, align 8
  store i8* %25, i8** %nsplit, align 8
  %26 = load i8*, i8** %nend, align 8
  %add.ptr20 = getelementptr inbounds i8, i8* %26, i64 1
  store i8* %add.ptr20, i8** %name.addr, align 8
  br label %if.end21

if.end21:                                         ; preds = %if.then19, %land.lhs.true, %if.else11
  br label %if.end22

if.end22:                                         ; preds = %if.end21, %if.then9
  br label %for.inc

for.inc:                                          ; preds = %if.end22
  %27 = load i8*, i8** %nend, align 8
  %incdec.ptr23 = getelementptr inbounds i8, i8* %27, i32 1
  store i8* %incdec.ptr23, i8** %nend, align 8
  br label %for.cond

for.end:                                          ; preds = %lor.end
  %28 = load i8*, i8** %nsplit, align 8
  %tobool24 = icmp ne i8* %28, null
  br i1 %tobool24, label %if.then25, label %if.end59

if.then25:                                        ; preds = %for.end
  %29 = load i8*, i8** %nsplit, align 8
  %30 = load i8*, i8** %origname, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %29 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %30 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %cmp26 = icmp eq i64 %sub.ptr.sub, 5
  br i1 %cmp26, label %land.lhs.true28, label %if.else31

land.lhs.true28:                                  ; preds = %if.then25
  %31 = load i8*, i8** %origname, align 8
  %call = call i32 @memcmp(i8* %31, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.10, i64 0, i64 0), i64 5) #4
  %tobool29 = icmp ne i32 %call, 0
  br i1 %tobool29, label %if.else31, label %if.then30

if.then30:                                        ; preds = %land.lhs.true28
  %32 = load %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_stash = getelementptr inbounds %struct.cop, %struct.cop* %32, i32 0, i32 8
  %33 = load %struct.hv*, %struct.hv** %cop_stash, align 8
  store %struct.hv* %33, %struct.hv** %stash.addr, align 8
  %34 = load i32, i32* %flags.addr, align 4
  %or = or i32 %34, 4096
  store i32 %or, i32* %flags.addr, align 4
  br label %if.end58

if.else31:                                        ; preds = %land.lhs.true28, %if.then25
  %35 = load i8*, i8** %nsplit, align 8
  %36 = load i8*, i8** %origname, align 8
  %sub.ptr.lhs.cast32 = ptrtoint i8* %35 to i64
  %sub.ptr.rhs.cast33 = ptrtoint i8* %36 to i64
  %sub.ptr.sub34 = sub i64 %sub.ptr.lhs.cast32, %sub.ptr.rhs.cast33
  %cmp35 = icmp sge i64 %sub.ptr.sub34, 7
  br i1 %cmp35, label %land.lhs.true37, label %if.else51

land.lhs.true37:                                  ; preds = %if.else31
  %37 = load i8*, i8** %nsplit, align 8
  %add.ptr38 = getelementptr inbounds i8, i8* %37, i64 -7
  %call39 = call i32 @strncmp(i8* %add.ptr38, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.11, i64 0, i64 0), i64 7) #4
  %tobool40 = icmp ne i32 %call39, 0
  br i1 %tobool40, label %if.else51, label %if.then41

if.then41:                                        ; preds = %land.lhs.true37
  %38 = load i8*, i8** %origname, align 8
  %39 = load i8*, i8** %nsplit, align 8
  %40 = load i8*, i8** %origname, align 8
  %sub.ptr.lhs.cast42 = ptrtoint i8* %39 to i64
  %sub.ptr.rhs.cast43 = ptrtoint i8* %40 to i64
  %sub.ptr.sub44 = sub i64 %sub.ptr.lhs.cast42, %sub.ptr.rhs.cast43
  %sub = sub nsw i64 %sub.ptr.sub44, 7
  %conv45 = trunc i64 %sub to i32
  %41 = load i32, i32* %is_utf8, align 4
  %call46 = call %struct.hv* @Perl_gv_stashpvn(i8* %38, i32 %conv45, i32 %41)
  store %struct.hv* %call46, %struct.hv** %stash.addr, align 8
  %42 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %tobool47 = icmp ne %struct.hv* %42, null
  br i1 %tobool47, label %if.then48, label %if.end50

if.then48:                                        ; preds = %if.then41
  %43 = load i32, i32* %flags.addr, align 4
  %or49 = or i32 %43, 4096
  store i32 %or49, i32* %flags.addr, align 4
  br label %if.end50

if.end50:                                         ; preds = %if.then48, %if.then41
  br label %if.end57

if.else51:                                        ; preds = %land.lhs.true37, %if.else31
  %44 = load i8*, i8** %origname, align 8
  %45 = load i8*, i8** %nsplit, align 8
  %46 = load i8*, i8** %origname, align 8
  %sub.ptr.lhs.cast52 = ptrtoint i8* %45 to i64
  %sub.ptr.rhs.cast53 = ptrtoint i8* %46 to i64
  %sub.ptr.sub54 = sub i64 %sub.ptr.lhs.cast52, %sub.ptr.rhs.cast53
  %conv55 = trunc i64 %sub.ptr.sub54 to i32
  %47 = load i32, i32* %is_utf8, align 4
  %call56 = call %struct.hv* @Perl_gv_stashpvn(i8* %44, i32 %conv55, i32 %47)
  store %struct.hv* %call56, %struct.hv** %stash.addr, align 8
  br label %if.end57

if.end57:                                         ; preds = %if.else51, %if.end50
  br label %if.end58

if.end58:                                         ; preds = %if.end57, %if.then30
  %48 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  store %struct.hv* %48, %struct.hv** %ostash, align 8
  br label %if.end59

if.end59:                                         ; preds = %if.end58, %for.end
  %49 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %50 = load i8*, i8** %name.addr, align 8
  %51 = load i8*, i8** %nend, align 8
  %52 = load i8*, i8** %name.addr, align 8
  %sub.ptr.lhs.cast60 = ptrtoint i8* %51 to i64
  %sub.ptr.rhs.cast61 = ptrtoint i8* %52 to i64
  %sub.ptr.sub62 = sub i64 %sub.ptr.lhs.cast60, %sub.ptr.rhs.cast61
  %53 = load i32, i32* %flags.addr, align 4
  %call63 = call %struct.gv* @Perl_gv_fetchmeth_pvn(%struct.hv* %49, i8* %50, i64 %sub.ptr.sub62, i32 0, i32 %53)
  store %struct.gv* %call63, %struct.gv** %gv, align 8
  %54 = load %struct.gv*, %struct.gv** %gv, align 8
  %tobool64 = icmp ne %struct.gv* %54, null
  br i1 %tobool64, label %if.else324, label %if.then65

if.then65:                                        ; preds = %if.end59
  %55 = load i8*, i8** %name.addr, align 8
  %call66 = call i32 @strcmp(i8* %55, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.12, i64 0, i64 0)) #4
  %tobool67 = icmp ne i32 %call66, 0
  br i1 %tobool67, label %lor.lhs.false, label %if.then70

lor.lhs.false:                                    ; preds = %if.then65
  %56 = load i8*, i8** %name.addr, align 8
  %call68 = call i32 @strcmp(i8* %56, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.13, i64 0, i64 0)) #4
  %tobool69 = icmp ne i32 %call68, 0
  br i1 %tobool69, label %if.else71, label %if.then70

if.then70:                                        ; preds = %lor.lhs.false, %if.then65
  store %struct.gv* bitcast (%struct.sv* @PL_sv_yes to %struct.gv*), %struct.gv** %gv, align 8
  br label %if.end80

if.else71:                                        ; preds = %lor.lhs.false
  %57 = load i32, i32* %autoload, align 4
  %tobool72 = icmp ne i32 %57, 0
  br i1 %tobool72, label %if.then73, label %if.end79

if.then73:                                        ; preds = %if.else71
  %58 = load %struct.hv*, %struct.hv** %ostash, align 8
  %59 = load i8*, i8** %name.addr, align 8
  %60 = load i8*, i8** %nend, align 8
  %61 = load i8*, i8** %name.addr, align 8
  %sub.ptr.lhs.cast74 = ptrtoint i8* %60 to i64
  %sub.ptr.rhs.cast75 = ptrtoint i8* %61 to i64
  %sub.ptr.sub76 = sub i64 %sub.ptr.lhs.cast74, %sub.ptr.rhs.cast75
  %62 = load i32, i32* %flags.addr, align 4
  %or77 = or i32 1, %62
  %call78 = call %struct.gv* @Perl_gv_autoload_pvn(%struct.hv* %58, i8* %59, i64 %sub.ptr.sub76, i32 %or77)
  store %struct.gv* %call78, %struct.gv** %gv, align 8
  br label %if.end79

if.end79:                                         ; preds = %if.then73, %if.else71
  br label %if.end80

if.end80:                                         ; preds = %if.end79, %if.then70
  %63 = load %struct.gv*, %struct.gv** %gv, align 8
  %tobool81 = icmp ne %struct.gv* %63, null
  br i1 %tobool81, label %if.end323, label %land.lhs.true82

land.lhs.true82:                                  ; preds = %if.end80
  %64 = load i32, i32* %do_croak, align 4
  %tobool83 = icmp ne i32 %64, 0
  br i1 %tobool83, label %if.then84, label %if.end323

if.then84:                                        ; preds = %land.lhs.true82
  %65 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %tobool85 = icmp ne %struct.hv* %65, null
  br i1 %tobool85, label %if.then86, label %if.else307

if.then86:                                        ; preds = %if.then84
  %66 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_flags87 = getelementptr inbounds %struct.hv, %struct.hv* %66, i32 0, i32 2
  %67 = load i32, i32* %sv_flags87, align 4
  %and88 = and i32 %67, 33554432
  %tobool89 = icmp ne i32 %and88, 0
  br i1 %tobool89, label %land.lhs.true90, label %cond.false144

land.lhs.true90:                                  ; preds = %if.then86
  %68 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_u = getelementptr inbounds %struct.hv, %struct.hv* %68, i32 0, i32 3
  %svu_hash = bitcast %union.anon.4* %sv_u to %struct.he***
  %69 = load %struct.he**, %struct.he*** %svu_hash, align 8
  %70 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_any = getelementptr inbounds %struct.hv, %struct.hv* %70, i32 0, i32 0
  %71 = load %struct.xpvhv*, %struct.xpvhv** %sv_any, align 8
  %xhv_max = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %71, i32 0, i32 3
  %72 = load i64, i64* %xhv_max, align 8
  %add = add i64 %72, 1
  %arrayidx = getelementptr inbounds %struct.he*, %struct.he** %69, i64 %add
  %73 = bitcast %struct.he** %arrayidx to %struct.xpvhv_aux*
  %xhv_name_u = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %73, i32 0, i32 0
  %xhvnameu_name = bitcast %union._xhvnameu* %xhv_name_u to %struct.hek**
  %74 = load %struct.hek*, %struct.hek** %xhvnameu_name, align 8
  %tobool91 = icmp ne %struct.hek* %74, null
  br i1 %tobool91, label %land.lhs.true92, label %cond.false144

land.lhs.true92:                                  ; preds = %land.lhs.true90
  %75 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_u93 = getelementptr inbounds %struct.hv, %struct.hv* %75, i32 0, i32 3
  %svu_hash94 = bitcast %union.anon.4* %sv_u93 to %struct.he***
  %76 = load %struct.he**, %struct.he*** %svu_hash94, align 8
  %77 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_any95 = getelementptr inbounds %struct.hv, %struct.hv* %77, i32 0, i32 0
  %78 = load %struct.xpvhv*, %struct.xpvhv** %sv_any95, align 8
  %xhv_max96 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %78, i32 0, i32 3
  %79 = load i64, i64* %xhv_max96, align 8
  %add97 = add i64 %79, 1
  %arrayidx98 = getelementptr inbounds %struct.he*, %struct.he** %76, i64 %add97
  %80 = bitcast %struct.he** %arrayidx98 to %struct.xpvhv_aux*
  %xhv_name_count = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %80, i32 0, i32 4
  %81 = load i32, i32* %xhv_name_count, align 4
  %tobool99 = icmp ne i32 %81, 0
  br i1 %tobool99, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true92
  %82 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_u100 = getelementptr inbounds %struct.hv, %struct.hv* %82, i32 0, i32 3
  %svu_hash101 = bitcast %union.anon.4* %sv_u100 to %struct.he***
  %83 = load %struct.he**, %struct.he*** %svu_hash101, align 8
  %84 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_any102 = getelementptr inbounds %struct.hv, %struct.hv* %84, i32 0, i32 0
  %85 = load %struct.xpvhv*, %struct.xpvhv** %sv_any102, align 8
  %xhv_max103 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %85, i32 0, i32 3
  %86 = load i64, i64* %xhv_max103, align 8
  %add104 = add i64 %86, 1
  %arrayidx105 = getelementptr inbounds %struct.he*, %struct.he** %83, i64 %add104
  %87 = bitcast %struct.he** %arrayidx105 to %struct.xpvhv_aux*
  %xhv_name_u106 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %87, i32 0, i32 0
  %xhvnameu_names = bitcast %union._xhvnameu* %xhv_name_u106 to %struct.hek***
  %88 = load %struct.hek**, %struct.hek*** %xhvnameu_names, align 8
  %89 = load %struct.hek*, %struct.hek** %88, align 8
  %tobool107 = icmp ne %struct.hek* %89, null
  br i1 %tobool107, label %cond.true117, label %cond.false144

cond.false:                                       ; preds = %land.lhs.true92
  %90 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_u108 = getelementptr inbounds %struct.hv, %struct.hv* %90, i32 0, i32 3
  %svu_hash109 = bitcast %union.anon.4* %sv_u108 to %struct.he***
  %91 = load %struct.he**, %struct.he*** %svu_hash109, align 8
  %92 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_any110 = getelementptr inbounds %struct.hv, %struct.hv* %92, i32 0, i32 0
  %93 = load %struct.xpvhv*, %struct.xpvhv** %sv_any110, align 8
  %xhv_max111 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %93, i32 0, i32 3
  %94 = load i64, i64* %xhv_max111, align 8
  %add112 = add i64 %94, 1
  %arrayidx113 = getelementptr inbounds %struct.he*, %struct.he** %91, i64 %add112
  %95 = bitcast %struct.he** %arrayidx113 to %struct.xpvhv_aux*
  %xhv_name_u114 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %95, i32 0, i32 0
  %xhvnameu_name115 = bitcast %union._xhvnameu* %xhv_name_u114 to %struct.hek**
  %96 = load %struct.hek*, %struct.hek** %xhvnameu_name115, align 8
  %tobool116 = icmp ne %struct.hek* %96, null
  br i1 %tobool116, label %cond.true117, label %cond.false144

cond.true117:                                     ; preds = %cond.false, %cond.true
  %97 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_u118 = getelementptr inbounds %struct.hv, %struct.hv* %97, i32 0, i32 3
  %svu_hash119 = bitcast %union.anon.4* %sv_u118 to %struct.he***
  %98 = load %struct.he**, %struct.he*** %svu_hash119, align 8
  %99 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_any120 = getelementptr inbounds %struct.hv, %struct.hv* %99, i32 0, i32 0
  %100 = load %struct.xpvhv*, %struct.xpvhv** %sv_any120, align 8
  %xhv_max121 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %100, i32 0, i32 3
  %101 = load i64, i64* %xhv_max121, align 8
  %add122 = add i64 %101, 1
  %arrayidx123 = getelementptr inbounds %struct.he*, %struct.he** %98, i64 %add122
  %102 = bitcast %struct.he** %arrayidx123 to %struct.xpvhv_aux*
  %xhv_name_count124 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %102, i32 0, i32 4
  %103 = load i32, i32* %xhv_name_count124, align 4
  %tobool125 = icmp ne i32 %103, 0
  br i1 %tobool125, label %cond.true126, label %cond.false135

cond.true126:                                     ; preds = %cond.true117
  %104 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_u127 = getelementptr inbounds %struct.hv, %struct.hv* %104, i32 0, i32 3
  %svu_hash128 = bitcast %union.anon.4* %sv_u127 to %struct.he***
  %105 = load %struct.he**, %struct.he*** %svu_hash128, align 8
  %106 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_any129 = getelementptr inbounds %struct.hv, %struct.hv* %106, i32 0, i32 0
  %107 = load %struct.xpvhv*, %struct.xpvhv** %sv_any129, align 8
  %xhv_max130 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %107, i32 0, i32 3
  %108 = load i64, i64* %xhv_max130, align 8
  %add131 = add i64 %108, 1
  %arrayidx132 = getelementptr inbounds %struct.he*, %struct.he** %105, i64 %add131
  %109 = bitcast %struct.he** %arrayidx132 to %struct.xpvhv_aux*
  %xhv_name_u133 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %109, i32 0, i32 0
  %xhvnameu_names134 = bitcast %union._xhvnameu* %xhv_name_u133 to %struct.hek***
  %110 = load %struct.hek**, %struct.hek*** %xhvnameu_names134, align 8
  %111 = load %struct.hek*, %struct.hek** %110, align 8
  br label %cond.end

cond.false135:                                    ; preds = %cond.true117
  %112 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_u136 = getelementptr inbounds %struct.hv, %struct.hv* %112, i32 0, i32 3
  %svu_hash137 = bitcast %union.anon.4* %sv_u136 to %struct.he***
  %113 = load %struct.he**, %struct.he*** %svu_hash137, align 8
  %114 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_any138 = getelementptr inbounds %struct.hv, %struct.hv* %114, i32 0, i32 0
  %115 = load %struct.xpvhv*, %struct.xpvhv** %sv_any138, align 8
  %xhv_max139 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %115, i32 0, i32 3
  %116 = load i64, i64* %xhv_max139, align 8
  %add140 = add i64 %116, 1
  %arrayidx141 = getelementptr inbounds %struct.he*, %struct.he** %113, i64 %add140
  %117 = bitcast %struct.he** %arrayidx141 to %struct.xpvhv_aux*
  %xhv_name_u142 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %117, i32 0, i32 0
  %xhvnameu_name143 = bitcast %union._xhvnameu* %xhv_name_u142 to %struct.hek**
  %118 = load %struct.hek*, %struct.hek** %xhvnameu_name143, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false135, %cond.true126
  %cond = phi %struct.hek* [ %111, %cond.true126 ], [ %118, %cond.false135 ]
  %hek_key = getelementptr inbounds %struct.hek, %struct.hek* %cond, i32 0, i32 2
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %hek_key, i64 0, i64 0
  br label %cond.end145

cond.false144:                                    ; preds = %cond.false, %cond.true, %land.lhs.true90, %if.then86
  br label %cond.end145

cond.end145:                                      ; preds = %cond.false144, %cond.end
  %cond146 = phi i8* [ %arraydecay, %cond.end ], [ null, %cond.false144 ]
  store i8* %cond146, i8** %stash_name, align 8
  %119 = load i8*, i8** %stash_name, align 8
  %tobool147 = icmp ne i8* %119, null
  br i1 %tobool147, label %land.lhs.true148, label %if.end256

land.lhs.true148:                                 ; preds = %cond.end145
  %120 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_flags149 = getelementptr inbounds %struct.hv, %struct.hv* %120, i32 0, i32 2
  %121 = load i32, i32* %sv_flags149, align 4
  %and150 = and i32 %121, 33554432
  %tobool151 = icmp ne i32 %and150, 0
  br i1 %tobool151, label %land.lhs.true152, label %cond.false220

land.lhs.true152:                                 ; preds = %land.lhs.true148
  %122 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_u153 = getelementptr inbounds %struct.hv, %struct.hv* %122, i32 0, i32 3
  %svu_hash154 = bitcast %union.anon.4* %sv_u153 to %struct.he***
  %123 = load %struct.he**, %struct.he*** %svu_hash154, align 8
  %124 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_any155 = getelementptr inbounds %struct.hv, %struct.hv* %124, i32 0, i32 0
  %125 = load %struct.xpvhv*, %struct.xpvhv** %sv_any155, align 8
  %xhv_max156 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %125, i32 0, i32 3
  %126 = load i64, i64* %xhv_max156, align 8
  %add157 = add i64 %126, 1
  %arrayidx158 = getelementptr inbounds %struct.he*, %struct.he** %123, i64 %add157
  %127 = bitcast %struct.he** %arrayidx158 to %struct.xpvhv_aux*
  %xhv_name_u159 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %127, i32 0, i32 0
  %xhvnameu_name160 = bitcast %union._xhvnameu* %xhv_name_u159 to %struct.hek**
  %128 = load %struct.hek*, %struct.hek** %xhvnameu_name160, align 8
  %tobool161 = icmp ne %struct.hek* %128, null
  br i1 %tobool161, label %land.lhs.true162, label %cond.false220

land.lhs.true162:                                 ; preds = %land.lhs.true152
  %129 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_u163 = getelementptr inbounds %struct.hv, %struct.hv* %129, i32 0, i32 3
  %svu_hash164 = bitcast %union.anon.4* %sv_u163 to %struct.he***
  %130 = load %struct.he**, %struct.he*** %svu_hash164, align 8
  %131 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_any165 = getelementptr inbounds %struct.hv, %struct.hv* %131, i32 0, i32 0
  %132 = load %struct.xpvhv*, %struct.xpvhv** %sv_any165, align 8
  %xhv_max166 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %132, i32 0, i32 3
  %133 = load i64, i64* %xhv_max166, align 8
  %add167 = add i64 %133, 1
  %arrayidx168 = getelementptr inbounds %struct.he*, %struct.he** %130, i64 %add167
  %134 = bitcast %struct.he** %arrayidx168 to %struct.xpvhv_aux*
  %xhv_name_count169 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %134, i32 0, i32 4
  %135 = load i32, i32* %xhv_name_count169, align 4
  %tobool170 = icmp ne i32 %135, 0
  br i1 %tobool170, label %cond.true171, label %cond.false181

cond.true171:                                     ; preds = %land.lhs.true162
  %136 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_u172 = getelementptr inbounds %struct.hv, %struct.hv* %136, i32 0, i32 3
  %svu_hash173 = bitcast %union.anon.4* %sv_u172 to %struct.he***
  %137 = load %struct.he**, %struct.he*** %svu_hash173, align 8
  %138 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_any174 = getelementptr inbounds %struct.hv, %struct.hv* %138, i32 0, i32 0
  %139 = load %struct.xpvhv*, %struct.xpvhv** %sv_any174, align 8
  %xhv_max175 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %139, i32 0, i32 3
  %140 = load i64, i64* %xhv_max175, align 8
  %add176 = add i64 %140, 1
  %arrayidx177 = getelementptr inbounds %struct.he*, %struct.he** %137, i64 %add176
  %141 = bitcast %struct.he** %arrayidx177 to %struct.xpvhv_aux*
  %xhv_name_u178 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %141, i32 0, i32 0
  %xhvnameu_names179 = bitcast %union._xhvnameu* %xhv_name_u178 to %struct.hek***
  %142 = load %struct.hek**, %struct.hek*** %xhvnameu_names179, align 8
  %143 = load %struct.hek*, %struct.hek** %142, align 8
  %tobool180 = icmp ne %struct.hek* %143, null
  br i1 %tobool180, label %cond.true191, label %cond.false220

cond.false181:                                    ; preds = %land.lhs.true162
  %144 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_u182 = getelementptr inbounds %struct.hv, %struct.hv* %144, i32 0, i32 3
  %svu_hash183 = bitcast %union.anon.4* %sv_u182 to %struct.he***
  %145 = load %struct.he**, %struct.he*** %svu_hash183, align 8
  %146 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_any184 = getelementptr inbounds %struct.hv, %struct.hv* %146, i32 0, i32 0
  %147 = load %struct.xpvhv*, %struct.xpvhv** %sv_any184, align 8
  %xhv_max185 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %147, i32 0, i32 3
  %148 = load i64, i64* %xhv_max185, align 8
  %add186 = add i64 %148, 1
  %arrayidx187 = getelementptr inbounds %struct.he*, %struct.he** %145, i64 %add186
  %149 = bitcast %struct.he** %arrayidx187 to %struct.xpvhv_aux*
  %xhv_name_u188 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %149, i32 0, i32 0
  %xhvnameu_name189 = bitcast %union._xhvnameu* %xhv_name_u188 to %struct.hek**
  %150 = load %struct.hek*, %struct.hek** %xhvnameu_name189, align 8
  %tobool190 = icmp ne %struct.hek* %150, null
  br i1 %tobool190, label %cond.true191, label %cond.false220

cond.true191:                                     ; preds = %cond.false181, %cond.true171
  %151 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_u192 = getelementptr inbounds %struct.hv, %struct.hv* %151, i32 0, i32 3
  %svu_hash193 = bitcast %union.anon.4* %sv_u192 to %struct.he***
  %152 = load %struct.he**, %struct.he*** %svu_hash193, align 8
  %153 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_any194 = getelementptr inbounds %struct.hv, %struct.hv* %153, i32 0, i32 0
  %154 = load %struct.xpvhv*, %struct.xpvhv** %sv_any194, align 8
  %xhv_max195 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %154, i32 0, i32 3
  %155 = load i64, i64* %xhv_max195, align 8
  %add196 = add i64 %155, 1
  %arrayidx197 = getelementptr inbounds %struct.he*, %struct.he** %152, i64 %add196
  %156 = bitcast %struct.he** %arrayidx197 to %struct.xpvhv_aux*
  %xhv_name_count198 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %156, i32 0, i32 4
  %157 = load i32, i32* %xhv_name_count198, align 4
  %tobool199 = icmp ne i32 %157, 0
  br i1 %tobool199, label %cond.true200, label %cond.false209

cond.true200:                                     ; preds = %cond.true191
  %158 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_u201 = getelementptr inbounds %struct.hv, %struct.hv* %158, i32 0, i32 3
  %svu_hash202 = bitcast %union.anon.4* %sv_u201 to %struct.he***
  %159 = load %struct.he**, %struct.he*** %svu_hash202, align 8
  %160 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_any203 = getelementptr inbounds %struct.hv, %struct.hv* %160, i32 0, i32 0
  %161 = load %struct.xpvhv*, %struct.xpvhv** %sv_any203, align 8
  %xhv_max204 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %161, i32 0, i32 3
  %162 = load i64, i64* %xhv_max204, align 8
  %add205 = add i64 %162, 1
  %arrayidx206 = getelementptr inbounds %struct.he*, %struct.he** %159, i64 %add205
  %163 = bitcast %struct.he** %arrayidx206 to %struct.xpvhv_aux*
  %xhv_name_u207 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %163, i32 0, i32 0
  %xhvnameu_names208 = bitcast %union._xhvnameu* %xhv_name_u207 to %struct.hek***
  %164 = load %struct.hek**, %struct.hek*** %xhvnameu_names208, align 8
  %165 = load %struct.hek*, %struct.hek** %164, align 8
  br label %cond.end218

cond.false209:                                    ; preds = %cond.true191
  %166 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_u210 = getelementptr inbounds %struct.hv, %struct.hv* %166, i32 0, i32 3
  %svu_hash211 = bitcast %union.anon.4* %sv_u210 to %struct.he***
  %167 = load %struct.he**, %struct.he*** %svu_hash211, align 8
  %168 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_any212 = getelementptr inbounds %struct.hv, %struct.hv* %168, i32 0, i32 0
  %169 = load %struct.xpvhv*, %struct.xpvhv** %sv_any212, align 8
  %xhv_max213 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %169, i32 0, i32 3
  %170 = load i64, i64* %xhv_max213, align 8
  %add214 = add i64 %170, 1
  %arrayidx215 = getelementptr inbounds %struct.he*, %struct.he** %167, i64 %add214
  %171 = bitcast %struct.he** %arrayidx215 to %struct.xpvhv_aux*
  %xhv_name_u216 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %171, i32 0, i32 0
  %xhvnameu_name217 = bitcast %union._xhvnameu* %xhv_name_u216 to %struct.hek**
  %172 = load %struct.hek*, %struct.hek** %xhvnameu_name217, align 8
  br label %cond.end218

cond.end218:                                      ; preds = %cond.false209, %cond.true200
  %cond219 = phi %struct.hek* [ %165, %cond.true200 ], [ %172, %cond.false209 ]
  %hek_len = getelementptr inbounds %struct.hek, %struct.hek* %cond219, i32 0, i32 1
  %173 = load i32, i32* %hek_len, align 4
  br label %cond.end221

cond.false220:                                    ; preds = %cond.false181, %cond.true171, %land.lhs.true152, %land.lhs.true148
  br label %cond.end221

cond.end221:                                      ; preds = %cond.false220, %cond.end218
  %cond222 = phi i32 [ %173, %cond.end218 ], [ 0, %cond.false220 ]
  %conv223 = sext i32 %cond222 to i64
  %cmp224 = icmp eq i64 8, %conv223
  br i1 %cmp224, label %land.lhs.true226, label %if.end256

land.lhs.true226:                                 ; preds = %cond.end221
  %174 = load i8*, i8** %stash_name, align 8
  %call227 = call i32 @memcmp(i8* %174, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.14, i64 0, i64 0), i64 8) #4
  %tobool228 = icmp ne i32 %call227, 0
  br i1 %tobool228, label %if.end256, label %land.lhs.true229

land.lhs.true229:                                 ; preds = %land.lhs.true226
  %175 = load %struct.gv*, %struct.gv** @PL_incgv, align 8
  %sv_u230 = getelementptr inbounds %struct.gv, %struct.gv* %175, i32 0, i32 3
  %svu_gp = bitcast %union.anon.6* %sv_u230 to %struct.gp**
  %176 = load %struct.gp*, %struct.gp** %svu_gp, align 8
  %add.ptr231 = getelementptr inbounds %struct.gp, %struct.gp* %176, i64 0
  %gp_hv = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr231, i32 0, i32 5
  %177 = load %struct.hv*, %struct.hv** %gp_hv, align 8
  %tobool232 = icmp ne %struct.hv* %177, null
  br i1 %tobool232, label %cond.true233, label %cond.false238

cond.true233:                                     ; preds = %land.lhs.true229
  %178 = load %struct.gv*, %struct.gv** @PL_incgv, align 8
  %sv_u234 = getelementptr inbounds %struct.gv, %struct.gv* %178, i32 0, i32 3
  %svu_gp235 = bitcast %union.anon.6* %sv_u234 to %struct.gp**
  %179 = load %struct.gp*, %struct.gp** %svu_gp235, align 8
  %add.ptr236 = getelementptr inbounds %struct.gp, %struct.gp* %179, i64 0
  %gp_hv237 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr236, i32 0, i32 5
  %180 = load %struct.hv*, %struct.hv** %gp_hv237, align 8
  br label %cond.end244

cond.false238:                                    ; preds = %land.lhs.true229
  %181 = load %struct.gv*, %struct.gv** @PL_incgv, align 8
  %call239 = call %struct.gv* @Perl_gv_add_by_type(%struct.gv* %181, i32 12)
  %sv_u240 = getelementptr inbounds %struct.gv, %struct.gv* %call239, i32 0, i32 3
  %svu_gp241 = bitcast %union.anon.6* %sv_u240 to %struct.gp**
  %182 = load %struct.gp*, %struct.gp** %svu_gp241, align 8
  %add.ptr242 = getelementptr inbounds %struct.gp, %struct.gp* %182, i64 0
  %gp_hv243 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr242, i32 0, i32 5
  %183 = load %struct.hv*, %struct.hv** %gp_hv243, align 8
  br label %cond.end244

cond.end244:                                      ; preds = %cond.false238, %cond.true233
  %cond245 = phi %struct.hv* [ %180, %cond.true233 ], [ %183, %cond.false238 ]
  %call246 = call i8* @Perl_hv_common(%struct.hv* %cond245, %struct.sv* null, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.15, i64 0, i64 0), i64 10, i32 0, i32 8, %struct.sv* null, i32 0)
  %tobool247 = icmp ne i8* %call246, null
  br i1 %tobool247, label %if.end256, label %if.then248

if.then248:                                       ; preds = %cond.end244
  call void @Perl_require_pv(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.15, i64 0, i64 0))
  %184 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %185 = load i8*, i8** %name.addr, align 8
  %186 = load i8*, i8** %nend, align 8
  %187 = load i8*, i8** %name.addr, align 8
  %sub.ptr.lhs.cast249 = ptrtoint i8* %186 to i64
  %sub.ptr.rhs.cast250 = ptrtoint i8* %187 to i64
  %sub.ptr.sub251 = sub i64 %sub.ptr.lhs.cast249, %sub.ptr.rhs.cast250
  %188 = load i32, i32* %flags.addr, align 4
  %call252 = call %struct.gv* @Perl_gv_fetchmeth_pvn(%struct.hv* %184, i8* %185, i64 %sub.ptr.sub251, i32 0, i32 %188)
  store %struct.gv* %call252, %struct.gv** %gv, align 8
  %189 = load %struct.gv*, %struct.gv** %gv, align 8
  %tobool253 = icmp ne %struct.gv* %189, null
  br i1 %tobool253, label %if.then254, label %if.end255

if.then254:                                       ; preds = %if.then248
  %190 = load %struct.gv*, %struct.gv** %gv, align 8
  store %struct.gv* %190, %struct.gv** %retval, align 8
  br label %return

if.end255:                                        ; preds = %if.then248
  br label %if.end256

if.end256:                                        ; preds = %if.end255, %cond.end244, %land.lhs.true226, %cond.end221, %cond.end145
  %191 = load i32, i32* %is_utf8, align 4
  %tobool257 = icmp ne i32 %191, 0
  %192 = zext i1 %tobool257 to i64
  %cond258 = select i1 %tobool257, i32 1, i32 0
  %193 = load i8*, i8** %nend, align 8
  %194 = load i8*, i8** %name.addr, align 8
  %sub.ptr.lhs.cast259 = ptrtoint i8* %193 to i64
  %sub.ptr.rhs.cast260 = ptrtoint i8* %194 to i64
  %sub.ptr.sub261 = sub i64 %sub.ptr.lhs.cast259, %sub.ptr.rhs.cast260
  %195 = load i8*, i8** %name.addr, align 8
  %196 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_flags262 = getelementptr inbounds %struct.hv, %struct.hv* %196, i32 0, i32 2
  %197 = load i32, i32* %sv_flags262, align 4
  %and263 = and i32 %197, 33554432
  %tobool264 = icmp ne i32 %and263, 0
  br i1 %tobool264, label %land.lhs.true265, label %cond.false304

land.lhs.true265:                                 ; preds = %if.end256
  %198 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_u266 = getelementptr inbounds %struct.hv, %struct.hv* %198, i32 0, i32 3
  %svu_hash267 = bitcast %union.anon.4* %sv_u266 to %struct.he***
  %199 = load %struct.he**, %struct.he*** %svu_hash267, align 8
  %200 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_any268 = getelementptr inbounds %struct.hv, %struct.hv* %200, i32 0, i32 0
  %201 = load %struct.xpvhv*, %struct.xpvhv** %sv_any268, align 8
  %xhv_max269 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %201, i32 0, i32 3
  %202 = load i64, i64* %xhv_max269, align 8
  %add270 = add i64 %202, 1
  %arrayidx271 = getelementptr inbounds %struct.he*, %struct.he** %199, i64 %add270
  %203 = bitcast %struct.he** %arrayidx271 to %struct.xpvhv_aux*
  %xhv_name_u272 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %203, i32 0, i32 0
  %xhvnameu_name273 = bitcast %union._xhvnameu* %xhv_name_u272 to %struct.hek**
  %204 = load %struct.hek*, %struct.hek** %xhvnameu_name273, align 8
  %tobool274 = icmp ne %struct.hek* %204, null
  br i1 %tobool274, label %cond.true275, label %cond.false304

cond.true275:                                     ; preds = %land.lhs.true265
  %205 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_u276 = getelementptr inbounds %struct.hv, %struct.hv* %205, i32 0, i32 3
  %svu_hash277 = bitcast %union.anon.4* %sv_u276 to %struct.he***
  %206 = load %struct.he**, %struct.he*** %svu_hash277, align 8
  %207 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_any278 = getelementptr inbounds %struct.hv, %struct.hv* %207, i32 0, i32 0
  %208 = load %struct.xpvhv*, %struct.xpvhv** %sv_any278, align 8
  %xhv_max279 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %208, i32 0, i32 3
  %209 = load i64, i64* %xhv_max279, align 8
  %add280 = add i64 %209, 1
  %arrayidx281 = getelementptr inbounds %struct.he*, %struct.he** %206, i64 %add280
  %210 = bitcast %struct.he** %arrayidx281 to %struct.xpvhv_aux*
  %xhv_name_count282 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %210, i32 0, i32 4
  %211 = load i32, i32* %xhv_name_count282, align 4
  %tobool283 = icmp ne i32 %211, 0
  br i1 %tobool283, label %cond.true284, label %cond.false293

cond.true284:                                     ; preds = %cond.true275
  %212 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_u285 = getelementptr inbounds %struct.hv, %struct.hv* %212, i32 0, i32 3
  %svu_hash286 = bitcast %union.anon.4* %sv_u285 to %struct.he***
  %213 = load %struct.he**, %struct.he*** %svu_hash286, align 8
  %214 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_any287 = getelementptr inbounds %struct.hv, %struct.hv* %214, i32 0, i32 0
  %215 = load %struct.xpvhv*, %struct.xpvhv** %sv_any287, align 8
  %xhv_max288 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %215, i32 0, i32 3
  %216 = load i64, i64* %xhv_max288, align 8
  %add289 = add i64 %216, 1
  %arrayidx290 = getelementptr inbounds %struct.he*, %struct.he** %213, i64 %add289
  %217 = bitcast %struct.he** %arrayidx290 to %struct.xpvhv_aux*
  %xhv_name_u291 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %217, i32 0, i32 0
  %xhvnameu_names292 = bitcast %union._xhvnameu* %xhv_name_u291 to %struct.hek***
  %218 = load %struct.hek**, %struct.hek*** %xhvnameu_names292, align 8
  %219 = load %struct.hek*, %struct.hek** %218, align 8
  br label %cond.end302

cond.false293:                                    ; preds = %cond.true275
  %220 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_u294 = getelementptr inbounds %struct.hv, %struct.hv* %220, i32 0, i32 3
  %svu_hash295 = bitcast %union.anon.4* %sv_u294 to %struct.he***
  %221 = load %struct.he**, %struct.he*** %svu_hash295, align 8
  %222 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_any296 = getelementptr inbounds %struct.hv, %struct.hv* %222, i32 0, i32 0
  %223 = load %struct.xpvhv*, %struct.xpvhv** %sv_any296, align 8
  %xhv_max297 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %223, i32 0, i32 3
  %224 = load i64, i64* %xhv_max297, align 8
  %add298 = add i64 %224, 1
  %arrayidx299 = getelementptr inbounds %struct.he*, %struct.he** %221, i64 %add298
  %225 = bitcast %struct.he** %arrayidx299 to %struct.xpvhv_aux*
  %xhv_name_u300 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %225, i32 0, i32 0
  %xhvnameu_name301 = bitcast %union._xhvnameu* %xhv_name_u300 to %struct.hek**
  %226 = load %struct.hek*, %struct.hek** %xhvnameu_name301, align 8
  br label %cond.end302

cond.end302:                                      ; preds = %cond.false293, %cond.true284
  %cond303 = phi %struct.hek* [ %219, %cond.true284 ], [ %226, %cond.false293 ]
  br label %cond.end305

cond.false304:                                    ; preds = %land.lhs.true265, %if.end256
  br label %cond.end305

cond.end305:                                      ; preds = %cond.false304, %cond.end302
  %cond306 = phi %struct.hek* [ %cond303, %cond.end302 ], [ null, %cond.false304 ]
  %227 = bitcast %struct.hek* %cond306 to i8*
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.16, i64 0, i64 0), i32 %cond258, i64 %sub.ptr.sub261, i8* %195, i8* %227)
  br label %if.end322

if.else307:                                       ; preds = %if.then84
  %228 = load i8*, i8** %nsplit, align 8
  %tobool308 = icmp ne i8* %228, null
  br i1 %tobool308, label %if.then309, label %if.else315

if.then309:                                       ; preds = %if.else307
  %229 = load i8*, i8** %origname, align 8
  %230 = load i8*, i8** %nsplit, align 8
  %231 = load i8*, i8** %origname, align 8
  %sub.ptr.lhs.cast310 = ptrtoint i8* %230 to i64
  %sub.ptr.rhs.cast311 = ptrtoint i8* %231 to i64
  %sub.ptr.sub312 = sub i64 %sub.ptr.lhs.cast310, %sub.ptr.rhs.cast311
  %232 = load i32, i32* %is_utf8, align 4
  %or313 = or i32 524288, %232
  %call314 = call %struct.sv* @Perl_newSVpvn_flags(i8* %229, i64 %sub.ptr.sub312, i32 %or313)
  store %struct.sv* %call314, %struct.sv** %packnamesv, align 8
  br label %if.end316

if.else315:                                       ; preds = %if.else307
  %233 = load %struct.sv*, %struct.sv** %error_report, align 8
  store %struct.sv* %233, %struct.sv** %packnamesv, align 8
  br label %if.end316

if.end316:                                        ; preds = %if.else315, %if.then309
  %234 = load i32, i32* %is_utf8, align 4
  %tobool317 = icmp ne i32 %234, 0
  %235 = zext i1 %tobool317 to i64
  %cond318 = select i1 %tobool317, i32 1, i32 0
  %236 = load i8*, i8** %nend, align 8
  %237 = load i8*, i8** %name.addr, align 8
  %sub.ptr.lhs.cast319 = ptrtoint i8* %236 to i64
  %sub.ptr.rhs.cast320 = ptrtoint i8* %237 to i64
  %sub.ptr.sub321 = sub i64 %sub.ptr.lhs.cast319, %sub.ptr.rhs.cast320
  %238 = load i8*, i8** %name.addr, align 8
  %239 = load %struct.sv*, %struct.sv** %packnamesv, align 8
  %240 = bitcast %struct.sv* %239 to i8*
  %241 = load %struct.sv*, %struct.sv** %packnamesv, align 8
  %242 = bitcast %struct.sv* %241 to i8*
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([92 x i8], [92 x i8]* @.str.17, i64 0, i64 0), i32 %cond318, i64 %sub.ptr.sub321, i8* %238, i8* %240, i8* %242)
  br label %if.end322

if.end322:                                        ; preds = %if.end316, %cond.end305
  br label %if.end323

if.end323:                                        ; preds = %if.end322, %land.lhs.true82, %if.end80
  br label %if.end390

if.else324:                                       ; preds = %if.end59
  %243 = load i32, i32* %autoload, align 4
  %tobool325 = icmp ne i32 %243, 0
  br i1 %tobool325, label %if.then326, label %if.end389

if.then326:                                       ; preds = %if.else324
  %244 = load %struct.gv*, %struct.gv** %gv, align 8
  %sv_u327 = getelementptr inbounds %struct.gv, %struct.gv* %244, i32 0, i32 3
  %svu_gp328 = bitcast %union.anon.6* %sv_u327 to %struct.gp**
  %245 = load %struct.gp*, %struct.gp** %svu_gp328, align 8
  %add.ptr329 = getelementptr inbounds %struct.gp, %struct.gp* %245, i64 0
  %gp_cv = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr329, i32 0, i32 2
  %246 = load %struct.cv*, %struct.cv** %gp_cv, align 8
  %add.ptr330 = getelementptr inbounds %struct.cv, %struct.cv* %246, i64 0
  store %struct.cv* %add.ptr330, %struct.cv** %cv, align 8
  %247 = load %struct.cv*, %struct.cv** %cv, align 8
  %sv_any331 = getelementptr inbounds %struct.cv, %struct.cv* %247, i32 0, i32 0
  %248 = load %struct.xpvcv*, %struct.xpvcv** %sv_any331, align 8
  %249 = bitcast %struct.xpvcv* %248 to i8*
  %250 = bitcast i8* %249 to %struct.xpvcv*
  %xcv_root_u = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %250, i32 0, i32 6
  %xcv_root = bitcast %union.anon.9* %xcv_root_u to %struct.op**
  %251 = load %struct.op*, %struct.op** %xcv_root, align 8
  %tobool332 = icmp ne %struct.op* %251, null
  br i1 %tobool332, label %if.end388, label %land.lhs.true333

land.lhs.true333:                                 ; preds = %if.then326
  %252 = load %struct.cv*, %struct.cv** %cv, align 8
  %sv_any334 = getelementptr inbounds %struct.cv, %struct.cv* %252, i32 0, i32 0
  %253 = load %struct.xpvcv*, %struct.xpvcv** %sv_any334, align 8
  %254 = bitcast %struct.xpvcv* %253 to i8*
  %255 = bitcast i8* %254 to %struct.xpvcv*
  %xcv_root_u335 = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %255, i32 0, i32 6
  %xcv_xsub = bitcast %union.anon.9* %xcv_root_u335 to void (%struct.cv*)**
  %256 = load void (%struct.cv*)*, void (%struct.cv*)** %xcv_xsub, align 8
  %tobool336 = icmp ne void (%struct.cv*)* %256, null
  br i1 %tobool336, label %if.end388, label %if.then337

if.then337:                                       ; preds = %land.lhs.true333
  %257 = load %struct.cv*, %struct.cv** %cv, align 8
  %sv_any338 = getelementptr inbounds %struct.cv, %struct.cv* %257, i32 0, i32 0
  %258 = load %struct.xpvcv*, %struct.xpvcv** %sv_any338, align 8
  %259 = bitcast %struct.xpvcv* %258 to i8*
  %260 = bitcast i8* %259 to %struct.xpvcv*
  %xcv_flags = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %260, i32 0, i32 12
  %261 = load i32, i32* %xcv_flags, align 4
  %and339 = and i32 %261, 128
  %tobool340 = icmp ne i32 %and339, 0
  br i1 %tobool340, label %if.then346, label %lor.lhs.false341

lor.lhs.false341:                                 ; preds = %if.then337
  %262 = load %struct.cv*, %struct.cv** %cv, align 8
  %sv_any342 = getelementptr inbounds %struct.cv, %struct.cv* %262, i32 0, i32 0
  %263 = load %struct.xpvcv*, %struct.xpvcv** %sv_any342, align 8
  %264 = bitcast %struct.xpvcv* %263 to i8*
  %265 = bitcast i8* %264 to %struct.xpvcv*
  %xcv_flags343 = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %265, i32 0, i32 12
  %266 = load i32, i32* %xcv_flags343, align 4
  %and344 = and i32 %266, 65536
  %tobool345 = icmp ne i32 %and344, 0
  br i1 %tobool345, label %if.then346, label %if.else347

if.then346:                                       ; preds = %lor.lhs.false341, %if.then337
  %267 = load %struct.gv*, %struct.gv** %gv, align 8
  store %struct.gv* %267, %struct.gv** %stubgv, align 8
  br label %if.end358

if.else347:                                       ; preds = %lor.lhs.false341
  %268 = load %struct.cv*, %struct.cv** %cv, align 8
  %call348 = call %struct.gv* @S_CvGV(%struct.cv* %268)
  store %struct.gv* %call348, %struct.gv** %stubgv, align 8
  %269 = load %struct.gv*, %struct.gv** %stubgv, align 8
  %sv_u349 = getelementptr inbounds %struct.gv, %struct.gv* %269, i32 0, i32 3
  %svu_gp350 = bitcast %union.anon.6* %sv_u349 to %struct.gp**
  %270 = load %struct.gp*, %struct.gp** %svu_gp350, align 8
  %add.ptr351 = getelementptr inbounds %struct.gp, %struct.gp* %270, i64 0
  %gp_cv352 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr351, i32 0, i32 2
  %271 = load %struct.cv*, %struct.cv** %gp_cv352, align 8
  %add.ptr353 = getelementptr inbounds %struct.cv, %struct.cv* %271, i64 0
  %272 = load %struct.cv*, %struct.cv** %cv, align 8
  %cmp354 = icmp ne %struct.cv* %add.ptr353, %272
  br i1 %cmp354, label %if.then356, label %if.end357

if.then356:                                       ; preds = %if.else347
  %273 = load %struct.gv*, %struct.gv** %gv, align 8
  store %struct.gv* %273, %struct.gv** %stubgv, align 8
  br label %if.end357

if.end357:                                        ; preds = %if.then356, %if.else347
  br label %if.end358

if.end358:                                        ; preds = %if.end357, %if.then346
  %274 = load %struct.gv*, %struct.gv** %stubgv, align 8
  %sv_any359 = getelementptr inbounds %struct.gv, %struct.gv* %274, i32 0, i32 0
  %275 = load %struct.xpvgv*, %struct.xpvgv** %sv_any359, align 8
  %xnv_u = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %275, i32 0, i32 5
  %xgv_stash = bitcast %union._xnvu* %xnv_u to %struct.hv**
  %276 = load %struct.hv*, %struct.hv** %xgv_stash, align 8
  %277 = load %struct.gv*, %struct.gv** %stubgv, align 8
  %sv_any360 = getelementptr inbounds %struct.gv, %struct.gv* %277, i32 0, i32 0
  %278 = load %struct.xpvgv*, %struct.xpvgv** %sv_any360, align 8
  %xiv_u = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %278, i32 0, i32 4
  %xivu_namehek = bitcast %union._xivu* %xiv_u to %struct.hek**
  %279 = load %struct.hek*, %struct.hek** %xivu_namehek, align 8
  %hek_key361 = getelementptr inbounds %struct.hek, %struct.hek* %279, i32 0, i32 2
  %arraydecay362 = getelementptr inbounds [1 x i8], [1 x i8]* %hek_key361, i64 0, i64 0
  %280 = load %struct.gv*, %struct.gv** %stubgv, align 8
  %sv_any363 = getelementptr inbounds %struct.gv, %struct.gv* %280, i32 0, i32 0
  %281 = load %struct.xpvgv*, %struct.xpvgv** %sv_any363, align 8
  %xiv_u364 = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %281, i32 0, i32 4
  %xivu_namehek365 = bitcast %union._xivu* %xiv_u364 to %struct.hek**
  %282 = load %struct.hek*, %struct.hek** %xivu_namehek365, align 8
  %hek_len366 = getelementptr inbounds %struct.hek, %struct.hek* %282, i32 0, i32 1
  %283 = load i32, i32* %hek_len366, align 4
  %conv367 = sext i32 %283 to i64
  %284 = load %struct.gv*, %struct.gv** %stubgv, align 8
  %sv_any368 = getelementptr inbounds %struct.gv, %struct.gv* %284, i32 0, i32 0
  %285 = load %struct.xpvgv*, %struct.xpvgv** %sv_any368, align 8
  %xiv_u369 = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %285, i32 0, i32 4
  %xivu_namehek370 = bitcast %union._xivu* %xiv_u369 to %struct.hek**
  %286 = load %struct.hek*, %struct.hek** %xivu_namehek370, align 8
  %hek_key371 = getelementptr inbounds %struct.hek, %struct.hek* %286, i32 0, i32 2
  %arraydecay372 = getelementptr inbounds [1 x i8], [1 x i8]* %hek_key371, i64 0, i64 0
  %287 = load %struct.gv*, %struct.gv** %stubgv, align 8
  %sv_any373 = getelementptr inbounds %struct.gv, %struct.gv* %287, i32 0, i32 0
  %288 = load %struct.xpvgv*, %struct.xpvgv** %sv_any373, align 8
  %xiv_u374 = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %288, i32 0, i32 4
  %xivu_namehek375 = bitcast %union._xivu* %xiv_u374 to %struct.hek**
  %289 = load %struct.hek*, %struct.hek** %xivu_namehek375, align 8
  %hek_len376 = getelementptr inbounds %struct.hek, %struct.hek* %289, i32 0, i32 1
  %290 = load i32, i32* %hek_len376, align 4
  %idx.ext = sext i32 %290 to i64
  %add.ptr377 = getelementptr inbounds i8, i8* %arraydecay372, i64 %idx.ext
  %add.ptr378 = getelementptr inbounds i8, i8* %add.ptr377, i64 1
  %291 = load i8, i8* %add.ptr378, align 1
  %conv379 = zext i8 %291 to i32
  %and380 = and i32 %conv379, 1
  %tobool381 = icmp ne i32 %and380, 0
  %292 = zext i1 %tobool381 to i64
  %cond382 = select i1 %tobool381, i32 536870912, i32 0
  %or383 = or i32 1, %cond382
  %call384 = call %struct.gv* @Perl_gv_autoload_pvn(%struct.hv* %276, i8* %arraydecay362, i64 %conv367, i32 %or383)
  store %struct.gv* %call384, %struct.gv** %autogv, align 8
  %293 = load %struct.gv*, %struct.gv** %autogv, align 8
  %tobool385 = icmp ne %struct.gv* %293, null
  br i1 %tobool385, label %if.then386, label %if.end387

if.then386:                                       ; preds = %if.end358
  %294 = load %struct.gv*, %struct.gv** %autogv, align 8
  store %struct.gv* %294, %struct.gv** %gv, align 8
  br label %if.end387

if.end387:                                        ; preds = %if.then386, %if.end358
  br label %if.end388

if.end388:                                        ; preds = %if.end387, %land.lhs.true333, %if.then326
  br label %if.end389

if.end389:                                        ; preds = %if.end388, %if.else324
  br label %if.end390

if.end390:                                        ; preds = %if.end389, %if.end323
  %295 = load %struct.gv*, %struct.gv** %gv, align 8
  store %struct.gv* %295, %struct.gv** %retval, align 8
  br label %return

return:                                           ; preds = %if.end390, %if.then254
  %296 = load %struct.gv*, %struct.gv** %retval, align 8
  ret %struct.gv* %296
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.hv* @Perl_gv_stashpvn(i8* %name, i32 %namelen, i32 %flags) #0 {
entry:
  %name.addr = alloca i8*, align 8
  %namelen.addr = alloca i32, align 4
  %flags.addr = alloca i32, align 4
  store i8* %name, i8** %name.addr, align 8
  store i32 %namelen, i32* %namelen.addr, align 4
  store i32 %flags, i32* %flags.addr, align 4
  %0 = load i8*, i8** %name.addr, align 8
  %1 = load i32, i32* %namelen.addr, align 4
  %2 = load i32, i32* %flags.addr, align 4
  %call = call %struct.hv* @S_gv_stashsvpvn_cached(%struct.sv* null, i8* %0, i32 %1, i32 %2)
  ret %struct.hv* %call
}

; Function Attrs: nounwind readonly
declare dso_local i32 @strcmp(i8*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.gv* @Perl_gv_autoload_pvn(%struct.hv* %stash, i8* %name, i64 %len, i32 %flags) #0 {
entry:
  %retval = alloca %struct.gv*, align 8
  %stash.addr = alloca %struct.hv*, align 8
  %name.addr = alloca i8*, align 8
  %len.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  %gv = alloca %struct.gv*, align 8
  %cv = alloca %struct.cv*, align 8
  %varstash = alloca %struct.hv*, align 8
  %vargv = alloca %struct.gv*, align 8
  %varsv = alloca %struct.sv*, align 8
  %packname = alloca %struct.sv*, align 8
  %is_utf8 = alloca i32, align 4
  %packname_len = alloca i64, align 8
  %packname_ptr = alloca i8*, align 8
  %tmpsv = alloca %struct.sv*, align 8
  %ulen = alloca i64, align 8
  %proto = alloca i8*, align 8
  store %struct.hv* %stash, %struct.hv** %stash.addr, align 8
  store i8* %name, i8** %name.addr, align 8
  store i64 %len, i64* %len.addr, align 8
  store i32 %flags, i32* %flags.addr, align 4
  store %struct.sv* null, %struct.sv** %packname, align 8
  %0 = load i32, i32* %flags.addr, align 4
  %and = and i32 %0, 536870912
  %tobool = icmp ne i32 %and, 0
  %1 = zext i1 %tobool to i64
  %cond = select i1 %tobool, i32 536870912, i32 0
  store i32 %cond, i32* %is_utf8, align 4
  %2 = load i64, i64* %len.addr, align 8
  %cmp = icmp eq i64 %2, 8
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %3 = load i8*, i8** %name.addr, align 8
  %call = call i32 @memcmp(i8* %3, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @S_autoload, i64 0, i64 0), i64 8) #4
  %tobool1 = icmp ne i32 %call, 0
  br i1 %tobool1, label %if.end, label %if.then

if.then:                                          ; preds = %land.lhs.true
  store %struct.gv* null, %struct.gv** %retval, align 8
  br label %return

if.end:                                           ; preds = %land.lhs.true, %entry
  %4 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %tobool2 = icmp ne %struct.hv* %4, null
  br i1 %tobool2, label %if.then3, label %if.end59

if.then3:                                         ; preds = %if.end
  %5 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_flags = getelementptr inbounds %struct.hv, %struct.hv* %5, i32 0, i32 2
  %6 = load i32, i32* %sv_flags, align 4
  %and4 = and i32 %6, 255
  %cmp5 = icmp ult i32 %and4, 12
  br i1 %cmp5, label %if.then6, label %if.else

if.then6:                                         ; preds = %if.then3
  store i64 0, i64* %packname_len, align 8
  %7 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %8 = bitcast %struct.hv* %7 to i8*
  %9 = bitcast i8* %8 to %struct.sv*
  %sv_flags7 = getelementptr inbounds %struct.sv, %struct.sv* %9, i32 0, i32 2
  %10 = load i32, i32* %sv_flags7, align 4
  %and8 = and i32 %10, 2098176
  %cmp9 = icmp eq i32 %and8, 1024
  br i1 %cmp9, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then6
  %11 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %12 = bitcast %struct.hv* %11 to i8*
  %13 = bitcast i8* %12 to %struct.sv*
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %13, i32 0, i32 0
  %14 = load i8*, i8** %sv_any, align 8
  %15 = bitcast i8* %14 to %struct.xpv*
  %xpv_cur = getelementptr inbounds %struct.xpv, %struct.xpv* %15, i32 0, i32 2
  %16 = load i64, i64* %xpv_cur, align 8
  store i64 %16, i64* %packname_len, align 8
  %17 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %18 = bitcast %struct.hv* %17 to i8*
  %19 = bitcast i8* %18 to %struct.sv*
  %sv_u = getelementptr inbounds %struct.sv, %struct.sv* %19, i32 0, i32 3
  %svu_pv = bitcast %union.anon* %sv_u to i8**
  %20 = load i8*, i8** %svu_pv, align 8
  %add.ptr = getelementptr inbounds i8, i8* %20, i64 0
  br label %cond.end

cond.false:                                       ; preds = %if.then6
  %21 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %22 = bitcast %struct.hv* %21 to i8*
  %23 = bitcast i8* %22 to %struct.sv*
  %call10 = call i8* @Perl_sv_2pv_flags(%struct.sv* %23, i64* %packname_len, i32 34)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond11 = phi i8* [ %add.ptr, %cond.true ], [ %call10, %cond.false ]
  store i8* %cond11, i8** %packname_ptr, align 8
  %24 = load i8*, i8** %packname_ptr, align 8
  %25 = load i64, i64* %packname_len, align 8
  %26 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_flags12 = getelementptr inbounds %struct.hv, %struct.hv* %26, i32 0, i32 2
  %27 = load i32, i32* %sv_flags12, align 4
  %and13 = and i32 %27, 536870912
  %or = or i32 524288, %and13
  %call14 = call %struct.sv* @Perl_newSVpvn_flags(i8* %24, i64 %25, i32 %or)
  store %struct.sv* %call14, %struct.sv** %packname, align 8
  store %struct.hv* null, %struct.hv** %stash.addr, align 8
  br label %if.end54

if.else:                                          ; preds = %if.then3
  %28 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_flags15 = getelementptr inbounds %struct.hv, %struct.hv* %28, i32 0, i32 2
  %29 = load i32, i32* %sv_flags15, align 4
  %and16 = and i32 %29, 33554432
  %tobool17 = icmp ne i32 %and16, 0
  br i1 %tobool17, label %land.lhs.true18, label %cond.false49

land.lhs.true18:                                  ; preds = %if.else
  %30 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_u19 = getelementptr inbounds %struct.hv, %struct.hv* %30, i32 0, i32 3
  %svu_hash = bitcast %union.anon.4* %sv_u19 to %struct.he***
  %31 = load %struct.he**, %struct.he*** %svu_hash, align 8
  %32 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_any20 = getelementptr inbounds %struct.hv, %struct.hv* %32, i32 0, i32 0
  %33 = load %struct.xpvhv*, %struct.xpvhv** %sv_any20, align 8
  %xhv_max = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %33, i32 0, i32 3
  %34 = load i64, i64* %xhv_max, align 8
  %add = add i64 %34, 1
  %arrayidx = getelementptr inbounds %struct.he*, %struct.he** %31, i64 %add
  %35 = bitcast %struct.he** %arrayidx to %struct.xpvhv_aux*
  %xhv_name_u = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %35, i32 0, i32 0
  %xhvnameu_name = bitcast %union._xhvnameu* %xhv_name_u to %struct.hek**
  %36 = load %struct.hek*, %struct.hek** %xhvnameu_name, align 8
  %tobool21 = icmp ne %struct.hek* %36, null
  br i1 %tobool21, label %cond.true22, label %cond.false49

cond.true22:                                      ; preds = %land.lhs.true18
  %37 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_u23 = getelementptr inbounds %struct.hv, %struct.hv* %37, i32 0, i32 3
  %svu_hash24 = bitcast %union.anon.4* %sv_u23 to %struct.he***
  %38 = load %struct.he**, %struct.he*** %svu_hash24, align 8
  %39 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_any25 = getelementptr inbounds %struct.hv, %struct.hv* %39, i32 0, i32 0
  %40 = load %struct.xpvhv*, %struct.xpvhv** %sv_any25, align 8
  %xhv_max26 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %40, i32 0, i32 3
  %41 = load i64, i64* %xhv_max26, align 8
  %add27 = add i64 %41, 1
  %arrayidx28 = getelementptr inbounds %struct.he*, %struct.he** %38, i64 %add27
  %42 = bitcast %struct.he** %arrayidx28 to %struct.xpvhv_aux*
  %xhv_name_count = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %42, i32 0, i32 4
  %43 = load i32, i32* %xhv_name_count, align 4
  %tobool29 = icmp ne i32 %43, 0
  br i1 %tobool29, label %cond.true30, label %cond.false38

cond.true30:                                      ; preds = %cond.true22
  %44 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_u31 = getelementptr inbounds %struct.hv, %struct.hv* %44, i32 0, i32 3
  %svu_hash32 = bitcast %union.anon.4* %sv_u31 to %struct.he***
  %45 = load %struct.he**, %struct.he*** %svu_hash32, align 8
  %46 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_any33 = getelementptr inbounds %struct.hv, %struct.hv* %46, i32 0, i32 0
  %47 = load %struct.xpvhv*, %struct.xpvhv** %sv_any33, align 8
  %xhv_max34 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %47, i32 0, i32 3
  %48 = load i64, i64* %xhv_max34, align 8
  %add35 = add i64 %48, 1
  %arrayidx36 = getelementptr inbounds %struct.he*, %struct.he** %45, i64 %add35
  %49 = bitcast %struct.he** %arrayidx36 to %struct.xpvhv_aux*
  %xhv_name_u37 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %49, i32 0, i32 0
  %xhvnameu_names = bitcast %union._xhvnameu* %xhv_name_u37 to %struct.hek***
  %50 = load %struct.hek**, %struct.hek*** %xhvnameu_names, align 8
  %51 = load %struct.hek*, %struct.hek** %50, align 8
  br label %cond.end47

cond.false38:                                     ; preds = %cond.true22
  %52 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_u39 = getelementptr inbounds %struct.hv, %struct.hv* %52, i32 0, i32 3
  %svu_hash40 = bitcast %union.anon.4* %sv_u39 to %struct.he***
  %53 = load %struct.he**, %struct.he*** %svu_hash40, align 8
  %54 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_any41 = getelementptr inbounds %struct.hv, %struct.hv* %54, i32 0, i32 0
  %55 = load %struct.xpvhv*, %struct.xpvhv** %sv_any41, align 8
  %xhv_max42 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %55, i32 0, i32 3
  %56 = load i64, i64* %xhv_max42, align 8
  %add43 = add i64 %56, 1
  %arrayidx44 = getelementptr inbounds %struct.he*, %struct.he** %53, i64 %add43
  %57 = bitcast %struct.he** %arrayidx44 to %struct.xpvhv_aux*
  %xhv_name_u45 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %57, i32 0, i32 0
  %xhvnameu_name46 = bitcast %union._xhvnameu* %xhv_name_u45 to %struct.hek**
  %58 = load %struct.hek*, %struct.hek** %xhvnameu_name46, align 8
  br label %cond.end47

cond.end47:                                       ; preds = %cond.false38, %cond.true30
  %cond48 = phi %struct.hek* [ %51, %cond.true30 ], [ %58, %cond.false38 ]
  br label %cond.end50

cond.false49:                                     ; preds = %land.lhs.true18, %if.else
  br label %cond.end50

cond.end50:                                       ; preds = %cond.false49, %cond.end47
  %cond51 = phi %struct.hek* [ %cond48, %cond.end47 ], [ null, %cond.false49 ]
  %call52 = call %struct.sv* @Perl_newSVhek(%struct.hek* %cond51)
  %call53 = call %struct.sv* @Perl_sv_2mortal(%struct.sv* %call52)
  store %struct.sv* %call53, %struct.sv** %packname, align 8
  br label %if.end54

if.end54:                                         ; preds = %cond.end50, %cond.end
  %59 = load i32, i32* %flags.addr, align 4
  %and55 = and i32 %59, 4096
  %tobool56 = icmp ne i32 %and55, 0
  br i1 %tobool56, label %if.then57, label %if.end58

if.then57:                                        ; preds = %if.end54
  %60 = load %struct.sv*, %struct.sv** %packname, align 8
  call void @Perl_sv_catpvn_flags(%struct.sv* %60, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.11, i64 0, i64 0), i64 7, i32 2)
  br label %if.end58

if.end58:                                         ; preds = %if.then57, %if.end54
  br label %if.end59

if.end59:                                         ; preds = %if.end58, %if.end
  %61 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %62 = load i32, i32* %is_utf8, align 4
  %63 = load i32, i32* %flags.addr, align 4
  %and60 = and i32 %63, 4096
  %or61 = or i32 %62, %and60
  %call62 = call %struct.gv* @Perl_gv_fetchmeth_pvn(%struct.hv* %61, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @S_autoload, i64 0, i64 0), i64 8, i32 0, i32 %or61)
  store %struct.gv* %call62, %struct.gv** %gv, align 8
  %tobool63 = icmp ne %struct.gv* %call62, null
  br i1 %tobool63, label %if.end65, label %if.then64

if.then64:                                        ; preds = %if.end59
  store %struct.gv* null, %struct.gv** %retval, align 8
  br label %return

if.end65:                                         ; preds = %if.end59
  %64 = load %struct.gv*, %struct.gv** %gv, align 8
  %sv_u66 = getelementptr inbounds %struct.gv, %struct.gv* %64, i32 0, i32 3
  %svu_gp = bitcast %union.anon.6* %sv_u66 to %struct.gp**
  %65 = load %struct.gp*, %struct.gp** %svu_gp, align 8
  %add.ptr67 = getelementptr inbounds %struct.gp, %struct.gp* %65, i64 0
  %gp_cv = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr67, i32 0, i32 2
  %66 = load %struct.cv*, %struct.cv** %gp_cv, align 8
  %add.ptr68 = getelementptr inbounds %struct.cv, %struct.cv* %66, i64 0
  store %struct.cv* %add.ptr68, %struct.cv** %cv, align 8
  %67 = load %struct.cv*, %struct.cv** %cv, align 8
  %sv_any69 = getelementptr inbounds %struct.cv, %struct.cv* %67, i32 0, i32 0
  %68 = load %struct.xpvcv*, %struct.xpvcv** %sv_any69, align 8
  %69 = bitcast %struct.xpvcv* %68 to i8*
  %70 = bitcast i8* %69 to %struct.xpvcv*
  %xcv_root_u = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %70, i32 0, i32 6
  %xcv_root = bitcast %union.anon.9* %xcv_root_u to %struct.op**
  %71 = load %struct.op*, %struct.op** %xcv_root, align 8
  %tobool70 = icmp ne %struct.op* %71, null
  br i1 %tobool70, label %if.end75, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end65
  %72 = load %struct.cv*, %struct.cv** %cv, align 8
  %sv_any71 = getelementptr inbounds %struct.cv, %struct.cv* %72, i32 0, i32 0
  %73 = load %struct.xpvcv*, %struct.xpvcv** %sv_any71, align 8
  %74 = bitcast %struct.xpvcv* %73 to i8*
  %75 = bitcast i8* %74 to %struct.xpvcv*
  %xcv_root_u72 = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %75, i32 0, i32 6
  %xcv_xsub = bitcast %union.anon.9* %xcv_root_u72 to void (%struct.cv*)**
  %76 = load void (%struct.cv*)*, void (%struct.cv*)** %xcv_xsub, align 8
  %tobool73 = icmp ne void (%struct.cv*)* %76, null
  br i1 %tobool73, label %if.end75, label %if.then74

if.then74:                                        ; preds = %lor.lhs.false
  store %struct.gv* null, %struct.gv** %retval, align 8
  br label %return

if.end75:                                         ; preds = %lor.lhs.false, %if.end65
  %77 = load i32, i32* %flags.addr, align 4
  %and76 = and i32 %77, 1
  %tobool77 = icmp ne i32 %and76, 0
  br i1 %tobool77, label %if.end89, label %land.lhs.true78

land.lhs.true78:                                  ; preds = %if.end75
  %78 = load %struct.gv*, %struct.gv** %gv, align 8
  %sv_u79 = getelementptr inbounds %struct.gv, %struct.gv* %78, i32 0, i32 3
  %svu_gp80 = bitcast %union.anon.6* %sv_u79 to %struct.gp**
  %79 = load %struct.gp*, %struct.gp** %svu_gp80, align 8
  %add.ptr81 = getelementptr inbounds %struct.gp, %struct.gp* %79, i64 0
  %gp_cvgen = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr81, i32 0, i32 3
  %80 = load i32, i32* %gp_cvgen, align 8
  %tobool82 = icmp ne i32 %80, 0
  br i1 %tobool82, label %if.then86, label %lor.lhs.false83

lor.lhs.false83:                                  ; preds = %land.lhs.true78
  %81 = load %struct.gv*, %struct.gv** %gv, align 8
  %sv_any84 = getelementptr inbounds %struct.gv, %struct.gv* %81, i32 0, i32 0
  %82 = load %struct.xpvgv*, %struct.xpvgv** %sv_any84, align 8
  %xnv_u = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %82, i32 0, i32 5
  %xgv_stash = bitcast %union._xnvu* %xnv_u to %struct.hv**
  %83 = load %struct.hv*, %struct.hv** %xgv_stash, align 8
  %84 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %cmp85 = icmp ne %struct.hv* %83, %84
  br i1 %cmp85, label %if.then86, label %if.end89

if.then86:                                        ; preds = %lor.lhs.false83, %land.lhs.true78
  %85 = load %struct.sv*, %struct.sv** %packname, align 8
  %86 = bitcast %struct.sv* %85 to i8*
  %87 = load i32, i32* %is_utf8, align 4
  %tobool87 = icmp ne i32 %87, 0
  %88 = zext i1 %tobool87 to i64
  %cond88 = select i1 %tobool87, i32 1, i32 0
  %89 = load i64, i64* %len.addr, align 8
  %90 = load i8*, i8** %name.addr, align 8
  call void (i32, i8*, ...) @Perl_ck_warner_d(i32 2, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.18, i64 0, i64 0), i8* %86, i32 %cond88, i64 %89, i8* %90)
  br label %if.end89

if.end89:                                         ; preds = %if.then86, %lor.lhs.false83, %if.end75
  %91 = load %struct.cv*, %struct.cv** %cv, align 8
  %sv_any90 = getelementptr inbounds %struct.cv, %struct.cv* %91, i32 0, i32 0
  %92 = load %struct.xpvcv*, %struct.xpvcv** %sv_any90, align 8
  %93 = bitcast %struct.xpvcv* %92 to i8*
  %94 = bitcast i8* %93 to %struct.xpvcv*
  %xcv_flags = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %94, i32 0, i32 12
  %95 = load i32, i32* %xcv_flags, align 4
  %and91 = and i32 %95, 8
  %tobool92 = icmp ne i32 %and91, 0
  br i1 %tobool92, label %if.then93, label %if.end221

if.then93:                                        ; preds = %if.end89
  %96 = load %struct.cv*, %struct.cv** %cv, align 8
  %97 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  call void @Perl_cvstash_set(%struct.cv* %96, %struct.hv* %97)
  %98 = load %struct.cv*, %struct.cv** %cv, align 8
  %sv_flags94 = getelementptr inbounds %struct.cv, %struct.cv* %98, i32 0, i32 2
  %99 = load i32, i32* %sv_flags94, align 4
  %and95 = and i32 %99, 1024
  %tobool96 = icmp ne i32 %and95, 0
  br i1 %tobool96, label %if.then97, label %if.else206

if.then97:                                        ; preds = %if.then93
  %100 = load i8*, i8** %name.addr, align 8
  %101 = load i64, i64* %len.addr, align 8
  %102 = load i32, i32* %is_utf8, align 4
  %call98 = call %struct.sv* @Perl_newSVpvn_flags(i8* %100, i64 %101, i32 %102)
  store %struct.sv* %call98, %struct.sv** %tmpsv, align 8
  %103 = load %struct.cv*, %struct.cv** %cv, align 8
  %sv_flags99 = getelementptr inbounds %struct.cv, %struct.cv* %103, i32 0, i32 2
  %104 = load i32, i32* %sv_flags99, align 4
  %and100 = and i32 %104, 1024
  %tobool101 = icmp ne i32 %and100, 0
  br i1 %tobool101, label %cond.true102, label %cond.false124

cond.true102:                                     ; preds = %if.then97
  %105 = load %struct.cv*, %struct.cv** %cv, align 8
  %sv_flags103 = getelementptr inbounds %struct.cv, %struct.cv* %105, i32 0, i32 2
  %106 = load i32, i32* %sv_flags103, align 4
  %and104 = and i32 %106, 255
  %cmp105 = icmp eq i32 %and104, 13
  br i1 %cmp105, label %land.lhs.true106, label %cond.false118

land.lhs.true106:                                 ; preds = %cond.true102
  %107 = load %struct.cv*, %struct.cv** %cv, align 8
  %sv_any107 = getelementptr inbounds %struct.cv, %struct.cv* %107, i32 0, i32 0
  %108 = load %struct.xpvcv*, %struct.xpvcv** %sv_any107, align 8
  %109 = bitcast %struct.xpvcv* %108 to i8*
  %110 = bitcast i8* %109 to %struct.xpvcv*
  %xcv_flags108 = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %110, i32 0, i32 12
  %111 = load i32, i32* %xcv_flags108, align 4
  %and109 = and i32 %111, 8192
  %tobool110 = icmp ne i32 %and109, 0
  br i1 %tobool110, label %cond.true111, label %cond.false118

cond.true111:                                     ; preds = %land.lhs.true106
  %112 = load %struct.cv*, %struct.cv** %cv, align 8
  %sv_u112 = getelementptr inbounds %struct.cv, %struct.cv* %112, i32 0, i32 3
  %svu_pv113 = bitcast %union.anon.2* %sv_u112 to i8**
  %113 = load i8*, i8** %svu_pv113, align 8
  %114 = load %struct.cv*, %struct.cv** %cv, align 8
  %sv_any114 = getelementptr inbounds %struct.cv, %struct.cv* %114, i32 0, i32 0
  %115 = load %struct.xpvcv*, %struct.xpvcv** %sv_any114, align 8
  %116 = bitcast %struct.xpvcv* %115 to %struct.xpv*
  %xpv_cur115 = getelementptr inbounds %struct.xpv, %struct.xpv* %116, i32 0, i32 2
  %117 = load i64, i64* %xpv_cur115, align 8
  %add.ptr116 = getelementptr inbounds i8, i8* %113, i64 %117
  %add.ptr117 = getelementptr inbounds i8, i8* %add.ptr116, i64 1
  br label %cond.end122

cond.false118:                                    ; preds = %land.lhs.true106, %cond.true102
  %118 = load %struct.cv*, %struct.cv** %cv, align 8
  %sv_u119 = getelementptr inbounds %struct.cv, %struct.cv* %118, i32 0, i32 3
  %svu_pv120 = bitcast %union.anon.2* %sv_u119 to i8**
  %119 = load i8*, i8** %svu_pv120, align 8
  %add.ptr121 = getelementptr inbounds i8, i8* %119, i64 0
  br label %cond.end122

cond.end122:                                      ; preds = %cond.false118, %cond.true111
  %cond123 = phi i8* [ %add.ptr117, %cond.true111 ], [ %add.ptr121, %cond.false118 ]
  br label %cond.end125

cond.false124:                                    ; preds = %if.then97
  br label %cond.end125

cond.end125:                                      ; preds = %cond.false124, %cond.end122
  %cond126 = phi i8* [ %cond123, %cond.end122 ], [ null, %cond.false124 ]
  store i8* %cond126, i8** %proto, align 8
  %120 = load %struct.cv*, %struct.cv** %cv, align 8
  %sv_flags127 = getelementptr inbounds %struct.cv, %struct.cv* %120, i32 0, i32 2
  %121 = load i32, i32* %sv_flags127, align 4
  %and128 = and i32 %121, 536870912
  %tobool129 = icmp ne i32 %and128, 0
  br i1 %tobool129, label %if.then130, label %if.end158

if.then130:                                       ; preds = %cond.end125
  %122 = load %struct.sv*, %struct.sv** %tmpsv, align 8
  %123 = load %struct.cv*, %struct.cv** %cv, align 8
  %sv_flags131 = getelementptr inbounds %struct.cv, %struct.cv* %123, i32 0, i32 2
  %124 = load i32, i32* %sv_flags131, align 4
  %and132 = and i32 %124, 1024
  %tobool133 = icmp ne i32 %and132, 0
  br i1 %tobool133, label %cond.true134, label %cond.false153

cond.true134:                                     ; preds = %if.then130
  %125 = load %struct.cv*, %struct.cv** %cv, align 8
  %sv_flags135 = getelementptr inbounds %struct.cv, %struct.cv* %125, i32 0, i32 2
  %126 = load i32, i32* %sv_flags135, align 4
  %and136 = and i32 %126, 255
  %cmp137 = icmp eq i32 %and136, 13
  br i1 %cmp137, label %land.lhs.true138, label %cond.false148

land.lhs.true138:                                 ; preds = %cond.true134
  %127 = load %struct.cv*, %struct.cv** %cv, align 8
  %sv_any139 = getelementptr inbounds %struct.cv, %struct.cv* %127, i32 0, i32 0
  %128 = load %struct.xpvcv*, %struct.xpvcv** %sv_any139, align 8
  %129 = bitcast %struct.xpvcv* %128 to i8*
  %130 = bitcast i8* %129 to %struct.xpvcv*
  %xcv_flags140 = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %130, i32 0, i32 12
  %131 = load i32, i32* %xcv_flags140, align 4
  %and141 = and i32 %131, 8192
  %tobool142 = icmp ne i32 %and141, 0
  br i1 %tobool142, label %cond.true143, label %cond.false148

cond.true143:                                     ; preds = %land.lhs.true138
  %132 = load %struct.cv*, %struct.cv** %cv, align 8
  %sv_any144 = getelementptr inbounds %struct.cv, %struct.cv* %132, i32 0, i32 0
  %133 = load %struct.xpvcv*, %struct.xpvcv** %sv_any144, align 8
  %134 = bitcast %struct.xpvcv* %133 to %struct.xpv*
  %xpv_len_u = getelementptr inbounds %struct.xpv, %struct.xpv* %134, i32 0, i32 3
  %xpvlenu_len = bitcast %union.anon.17* %xpv_len_u to i64*
  %135 = load i64, i64* %xpvlenu_len, align 8
  %136 = load %struct.cv*, %struct.cv** %cv, align 8
  %sv_any145 = getelementptr inbounds %struct.cv, %struct.cv* %136, i32 0, i32 0
  %137 = load %struct.xpvcv*, %struct.xpvcv** %sv_any145, align 8
  %138 = bitcast %struct.xpvcv* %137 to %struct.xpv*
  %xpv_cur146 = getelementptr inbounds %struct.xpv, %struct.xpv* %138, i32 0, i32 2
  %139 = load i64, i64* %xpv_cur146, align 8
  %sub = sub i64 %135, %139
  %sub147 = sub i64 %sub, 2
  br label %cond.end151

cond.false148:                                    ; preds = %land.lhs.true138, %cond.true134
  %140 = load %struct.cv*, %struct.cv** %cv, align 8
  %sv_any149 = getelementptr inbounds %struct.cv, %struct.cv* %140, i32 0, i32 0
  %141 = load %struct.xpvcv*, %struct.xpvcv** %sv_any149, align 8
  %142 = bitcast %struct.xpvcv* %141 to %struct.xpv*
  %xpv_cur150 = getelementptr inbounds %struct.xpv, %struct.xpv* %142, i32 0, i32 2
  %143 = load i64, i64* %xpv_cur150, align 8
  br label %cond.end151

cond.end151:                                      ; preds = %cond.false148, %cond.true143
  %cond152 = phi i64 [ %sub147, %cond.true143 ], [ %143, %cond.false148 ]
  br label %cond.end154

cond.false153:                                    ; preds = %if.then130
  br label %cond.end154

cond.end154:                                      ; preds = %cond.false153, %cond.end151
  %cond155 = phi i64 [ %cond152, %cond.end151 ], [ 0, %cond.false153 ]
  %add156 = add i64 %cond155, 2
  %call157 = call i64 @Perl_sv_utf8_upgrade_flags_grow(%struct.sv* %122, i32 0, i64 %add156)
  br label %if.end158

if.end158:                                        ; preds = %cond.end154, %cond.end125
  %144 = load %struct.sv*, %struct.sv** %tmpsv, align 8
  %sv_any159 = getelementptr inbounds %struct.sv, %struct.sv* %144, i32 0, i32 0
  %145 = load i8*, i8** %sv_any159, align 8
  %146 = bitcast i8* %145 to %struct.xpv*
  %xpv_cur160 = getelementptr inbounds %struct.xpv, %struct.xpv* %146, i32 0, i32 2
  %147 = load i64, i64* %xpv_cur160, align 8
  store i64 %147, i64* %ulen, align 8
  %148 = load %struct.sv*, %struct.sv** %tmpsv, align 8
  %sv_any161 = getelementptr inbounds %struct.sv, %struct.sv* %148, i32 0, i32 0
  %149 = load i8*, i8** %sv_any161, align 8
  %150 = bitcast i8* %149 to %struct.xpv*
  %xpv_cur162 = getelementptr inbounds %struct.xpv, %struct.xpv* %150, i32 0, i32 2
  %151 = load i64, i64* %xpv_cur162, align 8
  %inc = add i64 %151, 1
  store i64 %inc, i64* %xpv_cur162, align 8
  %152 = load %struct.sv*, %struct.sv** %tmpsv, align 8
  %153 = load i8*, i8** %proto, align 8
  %154 = load %struct.cv*, %struct.cv** %cv, align 8
  %sv_flags163 = getelementptr inbounds %struct.cv, %struct.cv* %154, i32 0, i32 2
  %155 = load i32, i32* %sv_flags163, align 4
  %and164 = and i32 %155, 1024
  %tobool165 = icmp ne i32 %and164, 0
  br i1 %tobool165, label %cond.true166, label %cond.false188

cond.true166:                                     ; preds = %if.end158
  %156 = load %struct.cv*, %struct.cv** %cv, align 8
  %sv_flags167 = getelementptr inbounds %struct.cv, %struct.cv* %156, i32 0, i32 2
  %157 = load i32, i32* %sv_flags167, align 4
  %and168 = and i32 %157, 255
  %cmp169 = icmp eq i32 %and168, 13
  br i1 %cmp169, label %land.lhs.true170, label %cond.false183

land.lhs.true170:                                 ; preds = %cond.true166
  %158 = load %struct.cv*, %struct.cv** %cv, align 8
  %sv_any171 = getelementptr inbounds %struct.cv, %struct.cv* %158, i32 0, i32 0
  %159 = load %struct.xpvcv*, %struct.xpvcv** %sv_any171, align 8
  %160 = bitcast %struct.xpvcv* %159 to i8*
  %161 = bitcast i8* %160 to %struct.xpvcv*
  %xcv_flags172 = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %161, i32 0, i32 12
  %162 = load i32, i32* %xcv_flags172, align 4
  %and173 = and i32 %162, 8192
  %tobool174 = icmp ne i32 %and173, 0
  br i1 %tobool174, label %cond.true175, label %cond.false183

cond.true175:                                     ; preds = %land.lhs.true170
  %163 = load %struct.cv*, %struct.cv** %cv, align 8
  %sv_any176 = getelementptr inbounds %struct.cv, %struct.cv* %163, i32 0, i32 0
  %164 = load %struct.xpvcv*, %struct.xpvcv** %sv_any176, align 8
  %165 = bitcast %struct.xpvcv* %164 to %struct.xpv*
  %xpv_len_u177 = getelementptr inbounds %struct.xpv, %struct.xpv* %165, i32 0, i32 3
  %xpvlenu_len178 = bitcast %union.anon.17* %xpv_len_u177 to i64*
  %166 = load i64, i64* %xpvlenu_len178, align 8
  %167 = load %struct.cv*, %struct.cv** %cv, align 8
  %sv_any179 = getelementptr inbounds %struct.cv, %struct.cv* %167, i32 0, i32 0
  %168 = load %struct.xpvcv*, %struct.xpvcv** %sv_any179, align 8
  %169 = bitcast %struct.xpvcv* %168 to %struct.xpv*
  %xpv_cur180 = getelementptr inbounds %struct.xpv, %struct.xpv* %169, i32 0, i32 2
  %170 = load i64, i64* %xpv_cur180, align 8
  %sub181 = sub i64 %166, %170
  %sub182 = sub i64 %sub181, 2
  br label %cond.end186

cond.false183:                                    ; preds = %land.lhs.true170, %cond.true166
  %171 = load %struct.cv*, %struct.cv** %cv, align 8
  %sv_any184 = getelementptr inbounds %struct.cv, %struct.cv* %171, i32 0, i32 0
  %172 = load %struct.xpvcv*, %struct.xpvcv** %sv_any184, align 8
  %173 = bitcast %struct.xpvcv* %172 to %struct.xpv*
  %xpv_cur185 = getelementptr inbounds %struct.xpv, %struct.xpv* %173, i32 0, i32 2
  %174 = load i64, i64* %xpv_cur185, align 8
  br label %cond.end186

cond.end186:                                      ; preds = %cond.false183, %cond.true175
  %cond187 = phi i64 [ %sub182, %cond.true175 ], [ %174, %cond.false183 ]
  br label %cond.end189

cond.false188:                                    ; preds = %if.end158
  br label %cond.end189

cond.end189:                                      ; preds = %cond.false188, %cond.end186
  %cond190 = phi i64 [ %cond187, %cond.end186 ], [ 0, %cond.false188 ]
  %175 = load %struct.cv*, %struct.cv** %cv, align 8
  %sv_flags191 = getelementptr inbounds %struct.cv, %struct.cv* %175, i32 0, i32 2
  %176 = load i32, i32* %sv_flags191, align 4
  %and192 = and i32 %176, 536870912
  %tobool193 = icmp ne i32 %and192, 0
  %lnot = xor i1 %tobool193, true
  %lnot.ext = zext i1 %lnot to i32
  %mul = mul nsw i32 16384, %lnot.ext
  call void @Perl_sv_catpvn_flags(%struct.sv* %152, i8* %153, i64 %cond190, i32 %mul)
  %177 = load %struct.sv*, %struct.sv** %tmpsv, align 8
  %sv_flags194 = getelementptr inbounds %struct.sv, %struct.sv* %177, i32 0, i32 2
  %178 = load i32, i32* %sv_flags194, align 4
  %or195 = or i32 %178, 524288
  store i32 %or195, i32* %sv_flags194, align 4
  %179 = load %struct.cv*, %struct.cv** %cv, align 8
  %180 = bitcast %struct.cv* %179 to %struct.sv*
  %181 = load %struct.sv*, %struct.sv** %tmpsv, align 8
  call void @Perl_sv_setsv_flags(%struct.sv* %180, %struct.sv* %181, i32 1536)
  %182 = load %struct.sv*, %struct.sv** %tmpsv, align 8
  %sv_flags196 = getelementptr inbounds %struct.sv, %struct.sv* %182, i32 0, i32 2
  %183 = load i32, i32* %sv_flags196, align 4
  %and197 = and i32 %183, -524289
  store i32 %and197, i32* %sv_flags196, align 4
  %184 = load %struct.sv*, %struct.sv** %tmpsv, align 8
  %185 = bitcast %struct.sv* %184 to i8*
  %186 = bitcast i8* %185 to %struct.sv*
  call void @S_SvREFCNT_dec_NN(%struct.sv* %186)
  %187 = load %struct.cv*, %struct.cv** %cv, align 8
  %sv_any198 = getelementptr inbounds %struct.cv, %struct.cv* %187, i32 0, i32 0
  %188 = load %struct.xpvcv*, %struct.xpvcv** %sv_any198, align 8
  %189 = bitcast %struct.xpvcv* %188 to %struct.xpv*
  %xpv_cur199 = getelementptr inbounds %struct.xpv, %struct.xpv* %189, i32 0, i32 2
  %190 = load i64, i64* %xpv_cur199, align 8
  %add200 = add i64 %190, 1
  %191 = load %struct.cv*, %struct.cv** %cv, align 8
  %sv_any201 = getelementptr inbounds %struct.cv, %struct.cv* %191, i32 0, i32 0
  %192 = load %struct.xpvcv*, %struct.xpvcv** %sv_any201, align 8
  %193 = bitcast %struct.xpvcv* %192 to %struct.xpv*
  %xpv_len_u202 = getelementptr inbounds %struct.xpv, %struct.xpv* %193, i32 0, i32 3
  %xpvlenu_len203 = bitcast %union.anon.17* %xpv_len_u202 to i64*
  store i64 %add200, i64* %xpvlenu_len203, align 8
  %194 = load i64, i64* %ulen, align 8
  %195 = load %struct.cv*, %struct.cv** %cv, align 8
  %sv_any204 = getelementptr inbounds %struct.cv, %struct.cv* %195, i32 0, i32 0
  %196 = load %struct.xpvcv*, %struct.xpvcv** %sv_any204, align 8
  %197 = bitcast %struct.xpvcv* %196 to %struct.xpv*
  %xpv_cur205 = getelementptr inbounds %struct.xpv, %struct.xpv* %197, i32 0, i32 2
  store i64 %194, i64* %xpv_cur205, align 8
  br label %if.end217

if.else206:                                       ; preds = %if.then93
  %198 = load %struct.cv*, %struct.cv** %cv, align 8
  %199 = bitcast %struct.cv* %198 to %struct.sv*
  %200 = load i8*, i8** %name.addr, align 8
  %201 = load i64, i64* %len.addr, align 8
  call void @Perl_sv_setpvn(%struct.sv* %199, i8* %200, i64 %201)
  %202 = load %struct.cv*, %struct.cv** %cv, align 8
  %sv_flags207 = getelementptr inbounds %struct.cv, %struct.cv* %202, i32 0, i32 2
  %203 = load i32, i32* %sv_flags207, align 4
  %and208 = and i32 %203, -17409
  store i32 %and208, i32* %sv_flags207, align 4
  %204 = load i32, i32* %is_utf8, align 4
  %tobool209 = icmp ne i32 %204, 0
  br i1 %tobool209, label %if.then210, label %if.else213

if.then210:                                       ; preds = %if.else206
  %205 = load %struct.cv*, %struct.cv** %cv, align 8
  %sv_flags211 = getelementptr inbounds %struct.cv, %struct.cv* %205, i32 0, i32 2
  %206 = load i32, i32* %sv_flags211, align 4
  %or212 = or i32 %206, 536870912
  store i32 %or212, i32* %sv_flags211, align 4
  br label %if.end216

if.else213:                                       ; preds = %if.else206
  %207 = load %struct.cv*, %struct.cv** %cv, align 8
  %sv_flags214 = getelementptr inbounds %struct.cv, %struct.cv* %207, i32 0, i32 2
  %208 = load i32, i32* %sv_flags214, align 4
  %and215 = and i32 %208, -536870913
  store i32 %and215, i32* %sv_flags214, align 4
  br label %if.end216

if.end216:                                        ; preds = %if.else213, %if.then210
  br label %if.end217

if.end217:                                        ; preds = %if.end216, %cond.end189
  %209 = load %struct.cv*, %struct.cv** %cv, align 8
  %sv_any218 = getelementptr inbounds %struct.cv, %struct.cv* %209, i32 0, i32 0
  %210 = load %struct.xpvcv*, %struct.xpvcv** %sv_any218, align 8
  %211 = bitcast %struct.xpvcv* %210 to i8*
  %212 = bitcast i8* %211 to %struct.xpvcv*
  %xcv_flags219 = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %212, i32 0, i32 12
  %213 = load i32, i32* %xcv_flags219, align 4
  %or220 = or i32 %213, 8192
  store i32 %or220, i32* %xcv_flags219, align 4
  br label %if.end221

if.end221:                                        ; preds = %if.end217, %if.end89
  %214 = load %struct.cv*, %struct.cv** %cv, align 8
  %sv_any222 = getelementptr inbounds %struct.cv, %struct.cv* %214, i32 0, i32 0
  %215 = load %struct.xpvcv*, %struct.xpvcv** %sv_any222, align 8
  %216 = bitcast %struct.xpvcv* %215 to i8*
  %217 = bitcast i8* %216 to %struct.xpvcv*
  %xcv_flags223 = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %217, i32 0, i32 12
  %218 = load i32, i32* %xcv_flags223, align 4
  %and224 = and i32 %218, 32768
  %tobool225 = icmp ne i32 %and224, 0
  br i1 %tobool225, label %cond.true226, label %cond.false229

cond.true226:                                     ; preds = %if.end221
  %219 = load %struct.cv*, %struct.cv** %cv, align 8
  %sv_any227 = getelementptr inbounds %struct.cv, %struct.cv* %219, i32 0, i32 0
  %220 = load %struct.xpvcv*, %struct.xpvcv** %sv_any227, align 8
  %221 = bitcast %struct.xpvcv* %220 to i8*
  %222 = bitcast i8* %221 to %struct.xpvcv*
  %xcv_stash = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %222, i32 0, i32 4
  %223 = load %struct.hv*, %struct.hv** %xcv_stash, align 8
  %add.ptr228 = getelementptr inbounds %struct.hv, %struct.hv* %223, i64 0
  br label %cond.end234

cond.false229:                                    ; preds = %if.end221
  %224 = load %struct.cv*, %struct.cv** %cv, align 8
  %call230 = call %struct.gv* @S_CvGV(%struct.cv* %224)
  %sv_any231 = getelementptr inbounds %struct.gv, %struct.gv* %call230, i32 0, i32 0
  %225 = load %struct.xpvgv*, %struct.xpvgv** %sv_any231, align 8
  %xnv_u232 = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %225, i32 0, i32 5
  %xgv_stash233 = bitcast %union._xnvu* %xnv_u232 to %struct.hv**
  %226 = load %struct.hv*, %struct.hv** %xgv_stash233, align 8
  br label %cond.end234

cond.end234:                                      ; preds = %cond.false229, %cond.true226
  %cond235 = phi %struct.hv* [ %add.ptr228, %cond.true226 ], [ %226, %cond.false229 ]
  store %struct.hv* %cond235, %struct.hv** %varstash, align 8
  %227 = load %struct.hv*, %struct.hv** %varstash, align 8
  %call236 = call i8* @Perl_hv_common_key_len(%struct.hv* %227, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @S_autoload, i64 0, i64 0), i32 8, i32 48, %struct.sv* null, i32 0)
  %228 = bitcast i8* %call236 to %struct.sv**
  %229 = bitcast %struct.sv** %228 to %struct.gv**
  %230 = load %struct.gv*, %struct.gv** %229, align 8
  store %struct.gv* %230, %struct.gv** %vargv, align 8
  call void @Perl_push_scope()
  %231 = load %struct.gv*, %struct.gv** %vargv, align 8
  %sv_flags237 = getelementptr inbounds %struct.gv, %struct.gv* %231, i32 0, i32 2
  %232 = load i32, i32* %sv_flags237, align 4
  %and238 = and i32 %232, 255
  %cmp239 = icmp eq i32 %and238, 9
  br i1 %cmp239, label %if.end245, label %if.then240

if.then240:                                       ; preds = %cond.end234
  %233 = load %struct.gv*, %struct.gv** %vargv, align 8
  %234 = load %struct.hv*, %struct.hv** %varstash, align 8
  call void @Perl_gv_init_pvn(%struct.gv* %233, %struct.hv* %234, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @S_autoload, i64 0, i64 0), i64 8, i32 0)
  %call241 = call %struct.sv* @Perl_newSV(i64 0)
  %235 = load %struct.gv*, %struct.gv** %vargv, align 8
  %sv_u242 = getelementptr inbounds %struct.gv, %struct.gv* %235, i32 0, i32 3
  %svu_gp243 = bitcast %union.anon.6* %sv_u242 to %struct.gp**
  %236 = load %struct.gp*, %struct.gp** %svu_gp243, align 8
  %add.ptr244 = getelementptr inbounds %struct.gp, %struct.gp* %236, i64 0
  %gp_sv = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr244, i32 0, i32 0
  store %struct.sv* %call241, %struct.sv** %gp_sv, align 8
  br label %if.end245

if.end245:                                        ; preds = %if.then240, %cond.end234
  call void @Perl_pop_scope()
  %237 = load %struct.gv*, %struct.gv** %vargv, align 8
  %sv_u246 = getelementptr inbounds %struct.gv, %struct.gv* %237, i32 0, i32 3
  %svu_gp247 = bitcast %union.anon.6* %sv_u246 to %struct.gp**
  %238 = load %struct.gp*, %struct.gp** %svu_gp247, align 8
  %add.ptr248 = getelementptr inbounds %struct.gp, %struct.gp* %238, i64 0
  %gp_sv249 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr248, i32 0, i32 0
  %239 = load %struct.sv*, %struct.sv** %gp_sv249, align 8
  %tobool250 = icmp ne %struct.sv* %239, null
  br i1 %tobool250, label %cond.true251, label %cond.false256

cond.true251:                                     ; preds = %if.end245
  %240 = load %struct.gv*, %struct.gv** %vargv, align 8
  %sv_u252 = getelementptr inbounds %struct.gv, %struct.gv* %240, i32 0, i32 3
  %svu_gp253 = bitcast %union.anon.6* %sv_u252 to %struct.gp**
  %241 = load %struct.gp*, %struct.gp** %svu_gp253, align 8
  %add.ptr254 = getelementptr inbounds %struct.gp, %struct.gp* %241, i64 0
  %gp_sv255 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr254, i32 0, i32 0
  br label %cond.end262

cond.false256:                                    ; preds = %if.end245
  %242 = load %struct.gv*, %struct.gv** %vargv, align 8
  %call257 = call %struct.gv* @Perl_gv_add_by_type(%struct.gv* %242, i32 0)
  %sv_u258 = getelementptr inbounds %struct.gv, %struct.gv* %call257, i32 0, i32 3
  %svu_gp259 = bitcast %union.anon.6* %sv_u258 to %struct.gp**
  %243 = load %struct.gp*, %struct.gp** %svu_gp259, align 8
  %add.ptr260 = getelementptr inbounds %struct.gp, %struct.gp* %243, i64 0
  %gp_sv261 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr260, i32 0, i32 0
  br label %cond.end262

cond.end262:                                      ; preds = %cond.false256, %cond.true251
  %cond263 = phi %struct.sv** [ %gp_sv255, %cond.true251 ], [ %gp_sv261, %cond.false256 ]
  %244 = load %struct.sv*, %struct.sv** %cond263, align 8
  store %struct.sv* %244, %struct.sv** %varsv, align 8
  br label %do.body

do.body:                                          ; preds = %cond.end262
  %245 = load i8, i8* @PL_tainting, align 1
  %tobool264 = trunc i8 %245 to i1
  br i1 %tobool264, label %cond.true265, label %cond.false266

cond.true265:                                     ; preds = %do.body
  br i1 true, label %if.then267, label %if.end268

cond.false266:                                    ; preds = %do.body
  br i1 false, label %if.then267, label %if.end268

if.then267:                                       ; preds = %cond.false266, %cond.true265
  %246 = load %struct.sv*, %struct.sv** %varsv, align 8
  call void @Perl_sv_untaint(%struct.sv* %246)
  br label %if.end268

if.end268:                                        ; preds = %if.then267, %cond.false266, %cond.true265
  br label %do.end

do.end:                                           ; preds = %if.end268
  %247 = load %struct.sv*, %struct.sv** %varsv, align 8
  %248 = load %struct.sv*, %struct.sv** %packname, align 8
  call void @Perl_sv_setsv_flags(%struct.sv* %247, %struct.sv* %248, i32 1538)
  %249 = load %struct.sv*, %struct.sv** %varsv, align 8
  call void @Perl_sv_catpvn_flags(%struct.sv* %249, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.19, i64 0, i64 0), i64 2, i32 2)
  %250 = load %struct.sv*, %struct.sv** %varsv, align 8
  %251 = load i8*, i8** %name.addr, align 8
  %252 = load i64, i64* %len.addr, align 8
  %253 = load i32, i32* %is_utf8, align 4
  %tobool269 = icmp ne i32 %253, 0
  %254 = zext i1 %tobool269 to i64
  %cond270 = select i1 %tobool269, i32 32768, i32 16384
  %or271 = or i32 128, %cond270
  call void @Perl_sv_catpvn_flags(%struct.sv* %250, i8* %251, i64 %252, i32 %or271)
  %255 = load i32, i32* %is_utf8, align 4
  %tobool272 = icmp ne i32 %255, 0
  br i1 %tobool272, label %if.then273, label %if.end276

if.then273:                                       ; preds = %do.end
  %256 = load %struct.sv*, %struct.sv** %varsv, align 8
  %sv_flags274 = getelementptr inbounds %struct.sv, %struct.sv* %256, i32 0, i32 2
  %257 = load i32, i32* %sv_flags274, align 4
  %or275 = or i32 %257, 536870912
  store i32 %or275, i32* %sv_flags274, align 4
  br label %if.end276

if.end276:                                        ; preds = %if.then273, %do.end
  %258 = load %struct.gv*, %struct.gv** %gv, align 8
  store %struct.gv* %258, %struct.gv** %retval, align 8
  br label %return

return:                                           ; preds = %if.end276, %if.then74, %if.then64, %if.then
  %259 = load %struct.gv*, %struct.gv** %retval, align 8
  ret %struct.gv* %259
}

declare dso_local void @Perl_require_pv(i8*) #1

declare dso_local %struct.sv* @Perl_newSVpvn_flags(i8*, i64, i32) #1

; Function Attrs: noinline nounwind uwtable
define internal %struct.gv* @S_CvGV(%struct.cv* %sv) #0 {
entry:
  %sv.addr = alloca %struct.cv*, align 8
  store %struct.cv* %sv, %struct.cv** %sv.addr, align 8
  %0 = load %struct.cv*, %struct.cv** %sv.addr, align 8
  %sv_any = getelementptr inbounds %struct.cv, %struct.cv* %0, i32 0, i32 0
  %1 = load %struct.xpvcv*, %struct.xpvcv** %sv_any, align 8
  %2 = bitcast %struct.xpvcv* %1 to i8*
  %3 = bitcast i8* %2 to %struct.xpvcv*
  %xcv_flags = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %3, i32 0, i32 12
  %4 = load i32, i32* %xcv_flags, align 4
  %and = and i32 %4, 32768
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %5 = load %struct.cv*, %struct.cv** %sv.addr, align 8
  %call = call %struct.gv* @Perl_cvgv_from_hek(%struct.cv* %5)
  br label %cond.end

cond.false:                                       ; preds = %entry
  %6 = load %struct.cv*, %struct.cv** %sv.addr, align 8
  %sv_any1 = getelementptr inbounds %struct.cv, %struct.cv* %6, i32 0, i32 0
  %7 = load %struct.xpvcv*, %struct.xpvcv** %sv_any1, align 8
  %8 = bitcast %struct.xpvcv* %7 to i8*
  %9 = bitcast i8* %8 to %struct.xpvcv*
  %xcv_gv_u = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %9, i32 0, i32 7
  %xcv_gv = bitcast %union.anon.10* %xcv_gv_u to %struct.gv**
  %10 = load %struct.gv*, %struct.gv** %xcv_gv, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.gv* [ %call, %cond.true ], [ %10, %cond.false ]
  ret %struct.gv* %cond
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.gv* @Perl_gv_autoload_sv(%struct.hv* %stash, %struct.sv* %namesv, i32 %flags) #0 {
entry:
  %stash.addr = alloca %struct.hv*, align 8
  %namesv.addr = alloca %struct.sv*, align 8
  %flags.addr = alloca i32, align 4
  %namepv = alloca i8*, align 8
  %namelen = alloca i64, align 8
  store %struct.hv* %stash, %struct.hv** %stash.addr, align 8
  store %struct.sv* %namesv, %struct.sv** %namesv.addr, align 8
  store i32 %flags, i32* %flags.addr, align 4
  %0 = load %struct.sv*, %struct.sv** %namesv.addr, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %0, i32 0, i32 2
  %1 = load i32, i32* %sv_flags, align 4
  %and = and i32 %1, 2098176
  %cmp = icmp eq i32 %and, 1024
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %2 = load %struct.sv*, %struct.sv** %namesv.addr, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %2, i32 0, i32 0
  %3 = load i8*, i8** %sv_any, align 8
  %4 = bitcast i8* %3 to %struct.xpv*
  %xpv_cur = getelementptr inbounds %struct.xpv, %struct.xpv* %4, i32 0, i32 2
  %5 = load i64, i64* %xpv_cur, align 8
  store i64 %5, i64* %namelen, align 8
  %6 = load %struct.sv*, %struct.sv** %namesv.addr, align 8
  %sv_u = getelementptr inbounds %struct.sv, %struct.sv* %6, i32 0, i32 3
  %svu_pv = bitcast %union.anon* %sv_u to i8**
  %7 = load i8*, i8** %svu_pv, align 8
  br label %cond.end

cond.false:                                       ; preds = %entry
  %8 = load %struct.sv*, %struct.sv** %namesv.addr, align 8
  %call = call i8* @Perl_sv_2pv_flags(%struct.sv* %8, i64* %namelen, i32 2)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %7, %cond.true ], [ %call, %cond.false ]
  store i8* %cond, i8** %namepv, align 8
  %9 = load %struct.sv*, %struct.sv** %namesv.addr, align 8
  %sv_flags1 = getelementptr inbounds %struct.sv, %struct.sv* %9, i32 0, i32 2
  %10 = load i32, i32* %sv_flags1, align 4
  %and2 = and i32 %10, 536870912
  %tobool = icmp ne i32 %and2, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %cond.end
  %11 = load i32, i32* %flags.addr, align 4
  %or = or i32 %11, 536870912
  store i32 %or, i32* %flags.addr, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %cond.end
  %12 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %13 = load i8*, i8** %namepv, align 8
  %14 = load i64, i64* %namelen, align 8
  %15 = load i32, i32* %flags.addr, align 4
  %call3 = call %struct.gv* @Perl_gv_autoload_pvn(%struct.hv* %12, i8* %13, i64 %14, i32 %15)
  ret %struct.gv* %call3
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.gv* @Perl_gv_autoload_pv(%struct.hv* %stash, i8* %namepv, i32 %flags) #0 {
entry:
  %stash.addr = alloca %struct.hv*, align 8
  %namepv.addr = alloca i8*, align 8
  %flags.addr = alloca i32, align 4
  store %struct.hv* %stash, %struct.hv** %stash.addr, align 8
  store i8* %namepv, i8** %namepv.addr, align 8
  store i32 %flags, i32* %flags.addr, align 4
  %0 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %1 = load i8*, i8** %namepv.addr, align 8
  %2 = load i8*, i8** %namepv.addr, align 8
  %call = call i64 @strlen(i8* %2) #4
  %3 = load i32, i32* %flags.addr, align 4
  %call1 = call %struct.gv* @Perl_gv_autoload_pvn(%struct.hv* %0, i8* %1, i64 %call, i32 %3)
  ret %struct.gv* %call1
}

declare dso_local %struct.sv* @Perl_sv_2mortal(%struct.sv*) #1

declare dso_local %struct.sv* @Perl_newSVhek(%struct.hek*) #1

declare dso_local void @Perl_sv_catpvn_flags(%struct.sv*, i8*, i64, i32) #1

declare dso_local void @Perl_ck_warner_d(i32, i8*, ...) #1

declare dso_local i64 @Perl_sv_utf8_upgrade_flags_grow(%struct.sv*, i32, i64) #1

declare dso_local void @Perl_sv_setsv_flags(%struct.sv*, %struct.sv*, i32) #1

declare dso_local void @Perl_sv_setpvn(%struct.sv*, i8*, i64) #1

declare dso_local void @Perl_push_scope() #1

declare dso_local void @Perl_pop_scope() #1

declare dso_local void @Perl_sv_untaint(%struct.sv*) #1

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.hv* @Perl_gv_stashpv(i8* %name, i32 %create) #0 {
entry:
  %name.addr = alloca i8*, align 8
  %create.addr = alloca i32, align 4
  store i8* %name, i8** %name.addr, align 8
  store i32 %create, i32* %create.addr, align 4
  %0 = load i8*, i8** %name.addr, align 8
  %1 = load i8*, i8** %name.addr, align 8
  %call = call i64 @strlen(i8* %1) #4
  %conv = trunc i64 %call to i32
  %2 = load i32, i32* %create.addr, align 4
  %call1 = call %struct.hv* @Perl_gv_stashpvn(i8* %0, i32 %conv, i32 %2)
  ret %struct.hv* %call1
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.hv* @S_gv_stashsvpvn_cached(%struct.sv* %namesv, i8* %name, i32 %namelen, i32 %flags) #0 {
entry:
  %retval = alloca %struct.hv*, align 8
  %namesv.addr = alloca %struct.sv*, align 8
  %name.addr = alloca i8*, align 8
  %namelen.addr = alloca i32, align 4
  %flags.addr = alloca i32, align 4
  %stash = alloca %struct.hv*, align 8
  %he = alloca %struct.he*, align 8
  %len = alloca i64, align 8
  %ref = alloca %struct.sv*, align 8
  store %struct.sv* %namesv, %struct.sv** %namesv.addr, align 8
  store i8* %name, i8** %name.addr, align 8
  store i32 %namelen, i32* %namelen.addr, align 4
  store i32 %flags, i32* %flags.addr, align 4
  %0 = load %struct.hv*, %struct.hv** @PL_stashcache, align 8
  %1 = load %struct.sv*, %struct.sv** %namesv.addr, align 8
  %2 = load i8*, i8** %name.addr, align 8
  %3 = load i32, i32* %namelen.addr, align 4
  %conv = zext i32 %3 to i64
  %4 = load i32, i32* %flags.addr, align 4
  %and = and i32 %4, 536870912
  %tobool = icmp ne i32 %and, 0
  %5 = zext i1 %tobool to i64
  %cond = select i1 %tobool, i32 1, i32 0
  %call = call i8* @Perl_hv_common(%struct.hv* %0, %struct.sv* %1, i8* %2, i64 %conv, i32 %cond, i32 0, %struct.sv* null, i32 0)
  %6 = bitcast i8* %call to %struct.he*
  store %struct.he* %6, %struct.he** %he, align 8
  %7 = load %struct.he*, %struct.he** %he, align 8
  %tobool1 = icmp ne %struct.he* %7, null
  br i1 %tobool1, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %8 = load %struct.he*, %struct.he** %he, align 8
  %he_valu = getelementptr inbounds %struct.he, %struct.he* %8, i32 0, i32 2
  %hent_val = bitcast %union.anon.0* %he_valu to %struct.sv**
  %9 = load %struct.sv*, %struct.sv** %hent_val, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %9, i32 0, i32 0
  %10 = load i8*, i8** %sv_any, align 8
  %11 = bitcast i8* %10 to %struct.xpviv*
  %xiv_u = getelementptr inbounds %struct.xpviv, %struct.xpviv* %11, i32 0, i32 4
  %xivu_iv = bitcast %union._xivu* %xiv_u to i64*
  %12 = load i64, i64* %xivu_iv, align 8
  %13 = inttoptr i64 %12 to %struct.hv*
  store %struct.hv* %13, %struct.hv** %retval, align 8
  br label %return

if.else:                                          ; preds = %entry
  %14 = load i32, i32* %flags.addr, align 4
  %and2 = and i32 %14, 4096
  %tobool3 = icmp ne i32 %and2, 0
  br i1 %tobool3, label %if.then4, label %if.end

if.then4:                                         ; preds = %if.else
  store %struct.hv* null, %struct.hv** %retval, align 8
  br label %return

if.end:                                           ; preds = %if.else
  br label %if.end5

if.end5:                                          ; preds = %if.end
  %15 = load %struct.sv*, %struct.sv** %namesv.addr, align 8
  %tobool6 = icmp ne %struct.sv* %15, null
  br i1 %tobool6, label %if.then7, label %if.end31

if.then7:                                         ; preds = %if.end5
  %16 = load %struct.sv*, %struct.sv** %namesv.addr, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %16, i32 0, i32 2
  %17 = load i32, i32* %sv_flags, align 4
  %and8 = and i32 %17, 65280
  %tobool9 = icmp ne i32 %and8, 0
  br i1 %tobool9, label %if.then18, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.then7
  %18 = load %struct.sv*, %struct.sv** %namesv.addr, align 8
  %sv_flags10 = getelementptr inbounds %struct.sv, %struct.sv* %18, i32 0, i32 2
  %19 = load i32, i32* %sv_flags10, align 4
  %and11 = and i32 %19, 255
  %cmp = icmp eq i32 %and11, 8
  br i1 %cmp, label %if.then18, label %lor.lhs.false13

lor.lhs.false13:                                  ; preds = %lor.lhs.false
  %20 = load %struct.sv*, %struct.sv** %namesv.addr, align 8
  %sv_flags14 = getelementptr inbounds %struct.sv, %struct.sv* %20, i32 0, i32 2
  %21 = load i32, i32* %sv_flags14, align 4
  %and15 = and i32 %21, 16826623
  %cmp16 = icmp eq i32 %and15, 16777226
  br i1 %cmp16, label %if.then18, label %if.else29

if.then18:                                        ; preds = %lor.lhs.false13, %lor.lhs.false, %if.then7
  %22 = load %struct.sv*, %struct.sv** %namesv.addr, align 8
  %sv_flags19 = getelementptr inbounds %struct.sv, %struct.sv* %22, i32 0, i32 2
  %23 = load i32, i32* %sv_flags19, align 4
  %and20 = and i32 %23, 2098176
  %cmp21 = icmp eq i32 %and20, 1024
  br i1 %cmp21, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then18
  %24 = load %struct.sv*, %struct.sv** %namesv.addr, align 8
  %sv_any23 = getelementptr inbounds %struct.sv, %struct.sv* %24, i32 0, i32 0
  %25 = load i8*, i8** %sv_any23, align 8
  %26 = bitcast i8* %25 to %struct.xpv*
  %xpv_cur = getelementptr inbounds %struct.xpv, %struct.xpv* %26, i32 0, i32 2
  %27 = load i64, i64* %xpv_cur, align 8
  store i64 %27, i64* %len, align 8
  %28 = load %struct.sv*, %struct.sv** %namesv.addr, align 8
  %sv_u = getelementptr inbounds %struct.sv, %struct.sv* %28, i32 0, i32 3
  %svu_pv = bitcast %union.anon* %sv_u to i8**
  %29 = load i8*, i8** %svu_pv, align 8
  %add.ptr = getelementptr inbounds i8, i8* %29, i64 0
  br label %cond.end

cond.false:                                       ; preds = %if.then18
  %30 = load %struct.sv*, %struct.sv** %namesv.addr, align 8
  %call24 = call i8* @Perl_sv_2pv_flags(%struct.sv* %30, i64* %len, i32 34)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond25 = phi i8* [ %add.ptr, %cond.true ], [ %call24, %cond.false ]
  store i8* %cond25, i8** %name.addr, align 8
  %31 = load i64, i64* %len, align 8
  %conv26 = trunc i64 %31 to i32
  store i32 %conv26, i32* %namelen.addr, align 4
  %32 = load %struct.sv*, %struct.sv** %namesv.addr, align 8
  %sv_flags27 = getelementptr inbounds %struct.sv, %struct.sv* %32, i32 0, i32 2
  %33 = load i32, i32* %sv_flags27, align 4
  %and28 = and i32 %33, 536870912
  %34 = load i32, i32* %flags.addr, align 4
  %or = or i32 %34, %and28
  store i32 %or, i32* %flags.addr, align 4
  br label %if.end30

if.else29:                                        ; preds = %lor.lhs.false13
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.7, i64 0, i64 0), i8** %name.addr, align 8
  store i32 0, i32* %namelen.addr, align 4
  br label %if.end30

if.end30:                                         ; preds = %if.else29, %cond.end
  br label %if.end31

if.end31:                                         ; preds = %if.end30, %if.end5
  %35 = load i8*, i8** %name.addr, align 8
  %36 = load i32, i32* %namelen.addr, align 4
  %37 = load i32, i32* %flags.addr, align 4
  %call32 = call %struct.hv* @S_gv_stashpvn_internal(i8* %35, i32 %36, i32 %37)
  store %struct.hv* %call32, %struct.hv** %stash, align 8
  %38 = load %struct.hv*, %struct.hv** %stash, align 8
  %tobool33 = icmp ne %struct.hv* %38, null
  br i1 %tobool33, label %land.lhs.true, label %if.end44

land.lhs.true:                                    ; preds = %if.end31
  %39 = load i32, i32* %namelen.addr, align 4
  %tobool34 = icmp ne i32 %39, 0
  br i1 %tobool34, label %if.then35, label %if.end44

if.then35:                                        ; preds = %land.lhs.true
  %40 = load %struct.hv*, %struct.hv** %stash, align 8
  %41 = ptrtoint %struct.hv* %40 to i64
  %call36 = call %struct.sv* @Perl_newSViv(i64 %41)
  store %struct.sv* %call36, %struct.sv** %ref, align 8
  %42 = load %struct.hv*, %struct.hv** @PL_stashcache, align 8
  %43 = load i8*, i8** %name.addr, align 8
  %44 = load i32, i32* %flags.addr, align 4
  %and37 = and i32 %44, 536870912
  %tobool38 = icmp ne i32 %and37, 0
  br i1 %tobool38, label %cond.true39, label %cond.false40

cond.true39:                                      ; preds = %if.then35
  %45 = load i32, i32* %namelen.addr, align 4
  %sub = sub nsw i32 0, %45
  br label %cond.end41

cond.false40:                                     ; preds = %if.then35
  %46 = load i32, i32* %namelen.addr, align 4
  br label %cond.end41

cond.end41:                                       ; preds = %cond.false40, %cond.true39
  %cond42 = phi i32 [ %sub, %cond.true39 ], [ %46, %cond.false40 ]
  %47 = load %struct.sv*, %struct.sv** %ref, align 8
  %call43 = call i8* @Perl_hv_common_key_len(%struct.hv* %42, i8* %43, i32 %cond42, i32 36, %struct.sv* %47, i32 0)
  %48 = bitcast i8* %call43 to %struct.sv**
  br label %if.end44

if.end44:                                         ; preds = %cond.end41, %land.lhs.true, %if.end31
  %49 = load %struct.hv*, %struct.hv** %stash, align 8
  store %struct.hv* %49, %struct.hv** %retval, align 8
  br label %return

return:                                           ; preds = %if.end44, %if.then4, %if.then
  %50 = load %struct.hv*, %struct.hv** %retval, align 8
  ret %struct.hv* %50
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.hv* @Perl_gv_stashsv(%struct.sv* %sv, i32 %flags) #0 {
entry:
  %sv.addr = alloca %struct.sv*, align 8
  %flags.addr = alloca i32, align 4
  store %struct.sv* %sv, %struct.sv** %sv.addr, align 8
  store i32 %flags, i32* %flags.addr, align 4
  %0 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %1 = load i32, i32* %flags.addr, align 4
  %call = call %struct.hv* @S_gv_stashsvpvn_cached(%struct.sv* %0, i8* null, i32 0, i32 %1)
  ret %struct.hv* %call
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.gv* @Perl_gv_fetchpv(i8* %nambeg, i32 %add, i32 %sv_type) #0 {
entry:
  %nambeg.addr = alloca i8*, align 8
  %add.addr = alloca i32, align 4
  %sv_type.addr = alloca i32, align 4
  store i8* %nambeg, i8** %nambeg.addr, align 8
  store i32 %add, i32* %add.addr, align 4
  store i32 %sv_type, i32* %sv_type.addr, align 4
  %0 = load i8*, i8** %nambeg.addr, align 8
  %1 = load i8*, i8** %nambeg.addr, align 8
  %call = call i64 @strlen(i8* %1) #4
  %2 = load i32, i32* %add.addr, align 4
  %3 = load i32, i32* %sv_type.addr, align 4
  %call1 = call %struct.gv* @Perl_gv_fetchpvn_flags(i8* %0, i64 %call, i32 %2, i32 %3)
  ret %struct.gv* %call1
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.gv* @Perl_gv_fetchpvn_flags(i8* %nambeg, i64 %full_len, i32 %flags, i32 %sv_type) #0 {
entry:
  %retval = alloca %struct.gv*, align 8
  %nambeg.addr = alloca i8*, align 8
  %full_len.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  %sv_type.addr = alloca i32, align 4
  %name = alloca i8*, align 8
  %gv = alloca %struct.gv*, align 8
  %gvp = alloca %struct.gv**, align 8
  %len = alloca i64, align 8
  %stash = alloca %struct.hv*, align 8
  %no_init = alloca i32, align 4
  %no_expand = alloca i32, align 4
  %add = alloca i32, align 4
  %is_utf8 = alloca i32, align 4
  %addmg = alloca i8, align 1
  %name_end = alloca i8*, align 8
  %faking_it = alloca i32, align 4
  store i8* %nambeg, i8** %nambeg.addr, align 8
  store i64 %full_len, i64* %full_len.addr, align 8
  store i32 %flags, i32* %flags.addr, align 4
  store i32 %sv_type, i32* %sv_type.addr, align 4
  %0 = load i8*, i8** %nambeg.addr, align 8
  store i8* %0, i8** %name, align 8
  store %struct.gv* null, %struct.gv** %gv, align 8
  store %struct.hv* null, %struct.hv** %stash, align 8
  %1 = load i32, i32* %flags.addr, align 4
  %and = and i32 %1, 48
  store i32 %and, i32* %no_init, align 4
  %2 = load i32, i32* %flags.addr, align 4
  %and1 = and i32 %2, 64
  store i32 %and1, i32* %no_expand, align 4
  %3 = load i32, i32* %flags.addr, align 4
  %and2 = and i32 %3, -536874209
  store i32 %and2, i32* %add, align 4
  %4 = load i32, i32* %flags.addr, align 4
  %and3 = and i32 %4, 536870912
  store i32 %and3, i32* %is_utf8, align 4
  %5 = load i32, i32* %flags.addr, align 4
  %and4 = and i32 %5, 1024
  %tobool = icmp ne i32 %and4, 0
  %6 = zext i1 %tobool to i64
  %cond = select i1 %tobool, i32 1, i32 0
  %tobool5 = icmp ne i32 %cond, 0
  %frombool = zext i1 %tobool5 to i8
  store i8 %frombool, i8* %addmg, align 1
  %7 = load i8*, i8** %nambeg.addr, align 8
  %8 = load i64, i64* %full_len.addr, align 8
  %add.ptr = getelementptr inbounds i8, i8* %7, i64 %8
  store i8* %add.ptr, i8** %name_end, align 8
  %9 = load i32, i32* %flags.addr, align 4
  %and6 = and i32 %9, 128
  %tobool7 = icmp ne i32 %and6, 0
  br i1 %tobool7, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %10 = load i64, i64* %full_len.addr, align 8
  %tobool8 = icmp ne i64 %10, 0
  br i1 %tobool8, label %if.else, label %if.then

if.then:                                          ; preds = %lor.lhs.false, %entry
  %11 = load i64, i64* %full_len.addr, align 8
  store i64 %11, i64* %len, align 8
  br label %if.end13

if.else:                                          ; preds = %lor.lhs.false
  %12 = load i8*, i8** %nambeg.addr, align 8
  %13 = load i64, i64* %full_len.addr, align 8
  %14 = load i32, i32* %is_utf8, align 4
  %15 = load i32, i32* %add, align 4
  %call = call zeroext i1 @S_parse_gv_stash_name(%struct.hv** %stash, %struct.gv** %gv, i8** %name, i64* %len, i8* %12, i64 %13, i32 %14, i32 %15)
  br i1 %call, label %if.then9, label %if.else11

if.then9:                                         ; preds = %if.else
  %16 = load i8*, i8** %name, align 8
  %17 = load i8*, i8** %name_end, align 8
  %cmp = icmp eq i8* %16, %17
  br i1 %cmp, label %if.then10, label %if.end

if.then10:                                        ; preds = %if.then9
  %18 = load %struct.gv*, %struct.gv** %gv, align 8
  store %struct.gv* %18, %struct.gv** %retval, align 8
  br label %return

if.end:                                           ; preds = %if.then9
  br label %if.end12

if.else11:                                        ; preds = %if.else
  store %struct.gv* null, %struct.gv** %retval, align 8
  br label %return

if.end12:                                         ; preds = %if.end
  br label %if.end13

if.end13:                                         ; preds = %if.end12, %if.then
  %19 = load %struct.hv*, %struct.hv** %stash, align 8
  %tobool14 = icmp ne %struct.hv* %19, null
  br i1 %tobool14, label %if.end17, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end13
  %20 = load i8*, i8** %name, align 8
  %21 = load i64, i64* %len, align 8
  %22 = load i32, i32* %is_utf8, align 4
  %23 = load i32, i32* %add, align 4
  %24 = load i32, i32* %sv_type.addr, align 4
  %call15 = call zeroext i1 @S_find_default_stash(%struct.hv** %stash, i8* %20, i64 %21, i32 %22, i32 %23, i32 %24)
  br i1 %call15, label %if.end17, label %if.then16

if.then16:                                        ; preds = %land.lhs.true
  store %struct.gv* null, %struct.gv** %retval, align 8
  br label %return

if.end17:                                         ; preds = %land.lhs.true, %if.end13
  %25 = load %struct.hv*, %struct.hv** %stash, align 8
  %26 = load i8*, i8** %name, align 8
  %27 = load i32, i32* %is_utf8, align 4
  %tobool18 = icmp ne i32 %27, 0
  br i1 %tobool18, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end17
  %28 = load i64, i64* %len, align 8
  %conv = trunc i64 %28 to i32
  %sub = sub nsw i32 0, %conv
  br label %cond.end

cond.false:                                       ; preds = %if.end17
  %29 = load i64, i64* %len, align 8
  %conv19 = trunc i64 %29 to i32
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond20 = phi i32 [ %sub, %cond.true ], [ %conv19, %cond.false ]
  %30 = load i32, i32* %add, align 4
  %tobool21 = icmp ne i32 %30, 0
  %31 = zext i1 %tobool21 to i64
  %cond22 = select i1 %tobool21, i32 48, i32 32
  %call23 = call i8* @Perl_hv_common_key_len(%struct.hv* %25, i8* %26, i32 %cond20, i32 %cond22, %struct.sv* null, i32 0)
  %32 = bitcast i8* %call23 to %struct.sv**
  %33 = bitcast %struct.sv** %32 to %struct.gv**
  store %struct.gv** %33, %struct.gv*** %gvp, align 8
  %34 = load %struct.gv**, %struct.gv*** %gvp, align 8
  %tobool24 = icmp ne %struct.gv** %34, null
  br i1 %tobool24, label %lor.lhs.false25, label %if.then28

lor.lhs.false25:                                  ; preds = %cond.end
  %35 = load %struct.gv**, %struct.gv*** %gvp, align 8
  %36 = load %struct.gv*, %struct.gv** %35, align 8
  %cmp26 = icmp eq %struct.gv* %36, bitcast (%struct.sv* @PL_sv_undef to %struct.gv*)
  br i1 %cmp26, label %if.then28, label %if.else34

if.then28:                                        ; preds = %lor.lhs.false25, %cond.end
  %37 = load i8, i8* %addmg, align 1
  %tobool29 = trunc i8 %37 to i1
  br i1 %tobool29, label %if.then30, label %if.else32

if.then30:                                        ; preds = %if.then28
  %call31 = call %struct.sv* @Perl_newSV(i64 0)
  %38 = bitcast %struct.sv* %call31 to %struct.gv*
  store %struct.gv* %38, %struct.gv** %gv, align 8
  br label %if.end33

if.else32:                                        ; preds = %if.then28
  store %struct.gv* null, %struct.gv** %retval, align 8
  br label %return

if.end33:                                         ; preds = %if.then30
  br label %if.end35

if.else34:                                        ; preds = %lor.lhs.false25
  %39 = load %struct.gv**, %struct.gv*** %gvp, align 8
  %40 = load %struct.gv*, %struct.gv** %39, align 8
  store %struct.gv* %40, %struct.gv** %gv, align 8
  store i8 0, i8* %addmg, align 1
  br label %if.end35

if.end35:                                         ; preds = %if.else34, %if.end33
  %41 = load %struct.gv*, %struct.gv** %gv, align 8
  %sv_flags = getelementptr inbounds %struct.gv, %struct.gv* %41, i32 0, i32 2
  %42 = load i32, i32* %sv_flags, align 4
  %and36 = and i32 %42, 255
  %cmp37 = icmp eq i32 %and36, 9
  br i1 %cmp37, label %if.then39, label %if.else72

if.then39:                                        ; preds = %if.end35
  %43 = load i32, i32* %add, align 4
  %tobool40 = icmp ne i32 %43, 0
  br i1 %tobool40, label %if.then41, label %if.end71

if.then41:                                        ; preds = %if.then39
  %44 = load %struct.gv*, %struct.gv** %gv, align 8
  %sv_any = getelementptr inbounds %struct.gv, %struct.gv* %44, i32 0, i32 0
  %45 = load %struct.xpvgv*, %struct.xpvgv** %sv_any, align 8
  %xpv_cur = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %45, i32 0, i32 2
  %46 = load i64, i64* %xpv_cur, align 8
  %or = or i64 %46, 2
  store i64 %or, i64* %xpv_cur, align 8
  %47 = load %struct.gv*, %struct.gv** %gv, align 8
  %48 = load i32, i32* %sv_type.addr, align 4
  call void @S_gv_init_svtype(%struct.gv* %47, i32 %48)
  %49 = load i64, i64* %len, align 8
  %cmp42 = icmp eq i64 %49, 1
  br i1 %cmp42, label %land.lhs.true44, label %if.else48

land.lhs.true44:                                  ; preds = %if.then41
  %50 = load %struct.hv*, %struct.hv** %stash, align 8
  %51 = load %struct.hv*, %struct.hv** @PL_defstash, align 8
  %cmp45 = icmp eq %struct.hv* %50, %51
  br i1 %cmp45, label %if.then47, label %if.else48

if.then47:                                        ; preds = %land.lhs.true44
  %52 = load %struct.gv*, %struct.gv** %gv, align 8
  %53 = load i8*, i8** %name, align 8
  %54 = load i32, i32* %sv_type.addr, align 4
  call void @S_maybe_multimagic_gv(%struct.gv* %52, i8* %53, i32 %54)
  br label %if.end70

if.else48:                                        ; preds = %land.lhs.true44, %if.then41
  %55 = load i64, i64* %len, align 8
  %cmp49 = icmp eq i64 %55, 3
  br i1 %cmp49, label %land.lhs.true51, label %if.end69

land.lhs.true51:                                  ; preds = %if.else48
  %56 = load i32, i32* %sv_type.addr, align 4
  %cmp52 = icmp eq i32 %56, 11
  br i1 %cmp52, label %land.lhs.true54, label %if.end69

land.lhs.true54:                                  ; preds = %land.lhs.true51
  %57 = load i8*, i8** %name, align 8
  %call55 = call i32 @strncmp(i8* %57, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.6, i64 0, i64 0), i64 3) #4
  %tobool56 = icmp ne i32 %call55, 0
  br i1 %tobool56, label %if.end69, label %land.lhs.true57

land.lhs.true57:                                  ; preds = %land.lhs.true54
  %58 = load %struct.gv*, %struct.gv** %gv, align 8
  %sv_u = getelementptr inbounds %struct.gv, %struct.gv* %58, i32 0, i32 3
  %svu_gp = bitcast %union.anon.6* %sv_u to %struct.gp**
  %59 = load %struct.gp*, %struct.gp** %svu_gp, align 8
  %add.ptr58 = getelementptr inbounds %struct.gp, %struct.gp* %59, i64 0
  %gp_av = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr58, i32 0, i32 6
  %60 = load %struct.av*, %struct.av** %gp_av, align 8
  %tobool59 = icmp ne %struct.av* %60, null
  br i1 %tobool59, label %lor.lhs.false60, label %if.then68

lor.lhs.false60:                                  ; preds = %land.lhs.true57
  %61 = load %struct.gv*, %struct.gv** %gv, align 8
  %sv_u61 = getelementptr inbounds %struct.gv, %struct.gv* %61, i32 0, i32 3
  %svu_gp62 = bitcast %union.anon.6* %sv_u61 to %struct.gp**
  %62 = load %struct.gp*, %struct.gp** %svu_gp62, align 8
  %add.ptr63 = getelementptr inbounds %struct.gp, %struct.gp* %62, i64 0
  %gp_av64 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr63, i32 0, i32 6
  %63 = load %struct.av*, %struct.av** %gp_av64, align 8
  %sv_flags65 = getelementptr inbounds %struct.av, %struct.av* %63, i32 0, i32 2
  %64 = load i32, i32* %sv_flags65, align 4
  %and66 = and i32 %64, 4194304
  %tobool67 = icmp ne i32 %and66, 0
  br i1 %tobool67, label %if.end69, label %if.then68

if.then68:                                        ; preds = %lor.lhs.false60, %land.lhs.true57
  %65 = load %struct.gv*, %struct.gv** %gv, align 8
  call void @S_gv_magicalize_isa(%struct.gv* %65)
  br label %if.end69

if.end69:                                         ; preds = %if.then68, %lor.lhs.false60, %land.lhs.true54, %land.lhs.true51, %if.else48
  br label %if.end70

if.end70:                                         ; preds = %if.end69, %if.then47
  br label %if.end71

if.end71:                                         ; preds = %if.end70, %if.then39
  %66 = load %struct.gv*, %struct.gv** %gv, align 8
  store %struct.gv* %66, %struct.gv** %retval, align 8
  br label %return

if.else72:                                        ; preds = %if.end35
  %67 = load i32, i32* %no_init, align 4
  %tobool73 = icmp ne i32 %67, 0
  br i1 %tobool73, label %if.then74, label %if.else75

if.then74:                                        ; preds = %if.else72
  %68 = load %struct.gv*, %struct.gv** %gv, align 8
  store %struct.gv* %68, %struct.gv** %retval, align 8
  br label %return

if.else75:                                        ; preds = %if.else72
  %69 = load i32, i32* %no_expand, align 4
  %tobool76 = icmp ne i32 %69, 0
  br i1 %tobool76, label %land.lhs.true77, label %if.end82

land.lhs.true77:                                  ; preds = %if.else75
  %70 = load %struct.gv*, %struct.gv** %gv, align 8
  %sv_flags78 = getelementptr inbounds %struct.gv, %struct.gv* %70, i32 0, i32 2
  %71 = load i32, i32* %sv_flags78, align 4
  %and79 = and i32 %71, 2048
  %tobool80 = icmp ne i32 %and79, 0
  br i1 %tobool80, label %if.then81, label %if.end82

if.then81:                                        ; preds = %land.lhs.true77
  %72 = load %struct.gv*, %struct.gv** %gv, align 8
  store %struct.gv* %72, %struct.gv** %retval, align 8
  br label %return

if.end82:                                         ; preds = %land.lhs.true77, %if.else75
  br label %if.end83

if.end83:                                         ; preds = %if.end82
  br label %if.end84

if.end84:                                         ; preds = %if.end83
  %73 = load %struct.gv*, %struct.gv** %gv, align 8
  %sv_flags85 = getelementptr inbounds %struct.gv, %struct.gv* %73, i32 0, i32 2
  %74 = load i32, i32* %sv_flags85, align 4
  %and86 = and i32 %74, 65280
  %tobool87 = icmp ne i32 %and86, 0
  br i1 %tobool87, label %lor.end97, label %lor.rhs

lor.rhs:                                          ; preds = %if.end84
  %75 = load %struct.gv*, %struct.gv** %gv, align 8
  %sv_flags88 = getelementptr inbounds %struct.gv, %struct.gv* %75, i32 0, i32 2
  %76 = load i32, i32* %sv_flags88, align 4
  %and89 = and i32 %76, 255
  %cmp90 = icmp eq i32 %and89, 8
  br i1 %cmp90, label %lor.end, label %lor.rhs92

lor.rhs92:                                        ; preds = %lor.rhs
  %77 = load %struct.gv*, %struct.gv** %gv, align 8
  %sv_flags93 = getelementptr inbounds %struct.gv, %struct.gv* %77, i32 0, i32 2
  %78 = load i32, i32* %sv_flags93, align 4
  %and94 = and i32 %78, 16826623
  %cmp95 = icmp eq i32 %and94, 16777226
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs92, %lor.rhs
  %79 = phi i1 [ true, %lor.rhs ], [ %cmp95, %lor.rhs92 ]
  br label %lor.end97

lor.end97:                                        ; preds = %lor.end, %if.end84
  %80 = phi i1 [ true, %if.end84 ], [ %79, %lor.end ]
  %lor.ext = zext i1 %80 to i32
  store i32 %lor.ext, i32* %faking_it, align 4
  %81 = load i32, i32* %add, align 4
  %and98 = and i32 %81, 4
  %tobool99 = icmp ne i32 %and98, 0
  br i1 %tobool99, label %if.then100, label %if.end103

if.then100:                                       ; preds = %lor.end97
  %82 = load i32, i32* %is_utf8, align 4
  %tobool101 = icmp ne i32 %82, 0
  %83 = zext i1 %tobool101 to i64
  %cond102 = select i1 %tobool101, i32 1, i32 0
  %84 = load i8*, i8** %name_end, align 8
  %85 = load i8*, i8** %nambeg.addr, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %84 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %85 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %86 = load i8*, i8** %nambeg.addr, align 8
  call void (i32, i8*, ...) @Perl_ck_warner_d(i32 24, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.20, i64 0, i64 0), i32 %cond102, i64 %sub.ptr.sub, i8* %86)
  br label %if.end103

if.end103:                                        ; preds = %if.then100, %lor.end97
  %87 = load %struct.gv*, %struct.gv** %gv, align 8
  %88 = load %struct.hv*, %struct.hv** %stash, align 8
  %89 = load i8*, i8** %name, align 8
  %90 = load i64, i64* %len, align 8
  %91 = load i32, i32* %add, align 4
  %and104 = and i32 %91, 2
  %92 = load i32, i32* %is_utf8, align 4
  %or105 = or i32 %and104, %92
  call void @Perl_gv_init_pvn(%struct.gv* %87, %struct.hv* %88, i8* %89, i64 %90, i32 %or105)
  %93 = load %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_hints = getelementptr inbounds %struct.cop, %struct.cop* %93, i32 0, i32 10
  %94 = load i32, i32* %cop_hints, align 8
  %add106 = add i32 %94, 0
  %and107 = and i32 %add106, 8
  %tobool108 = icmp ne i32 %and107, 0
  br i1 %tobool108, label %cond.true111, label %lor.lhs.false109

lor.lhs.false109:                                 ; preds = %if.end103
  %95 = load i32, i32* %is_utf8, align 4
  %tobool110 = icmp ne i32 %95, 0
  br i1 %tobool110, label %cond.false115, label %cond.true111

cond.true111:                                     ; preds = %lor.lhs.false109, %if.end103
  %96 = load i8*, i8** %name, align 8
  %97 = load i8, i8* %96, align 1
  %idxprom = zext i8 %97 to i64
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom
  %98 = load i32, i32* %arrayidx, align 4
  %and112 = and i32 %98, 81920
  %cmp113 = icmp eq i32 %and112, 81920
  br i1 %cmp113, label %land.lhs.true159, label %if.end165

cond.false115:                                    ; preds = %lor.lhs.false109
  %99 = load i8*, i8** %name, align 8
  %100 = load i8, i8* %99, align 1
  %conv116 = zext i8 %100 to i64
  %cmp117 = icmp ult i64 %conv116, 128
  br i1 %cmp117, label %cond.true119, label %cond.false126

cond.true119:                                     ; preds = %cond.false115
  %101 = load i8*, i8** %name, align 8
  %102 = load i8, i8* %101, align 1
  %idxprom120 = zext i8 %102 to i64
  %arrayidx121 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom120
  %103 = load i32, i32* %arrayidx121, align 4
  %and122 = and i32 %103, 65536
  %tobool123 = icmp ne i32 %and122, 0
  br i1 %tobool123, label %cond.true124, label %cond.false125

cond.true124:                                     ; preds = %cond.true119
  br i1 true, label %land.lhs.true159, label %if.end165

cond.false125:                                    ; preds = %cond.true119
  br i1 false, label %land.lhs.true159, label %if.end165

cond.false126:                                    ; preds = %cond.false115
  %104 = load i8*, i8** %name, align 8
  %105 = load i8, i8* %104, align 1
  %conv127 = zext i8 %105 to i32
  %and128 = and i32 %conv127, 254
  %cmp129 = icmp eq i32 %and128, 194
  br i1 %cmp129, label %cond.true131, label %cond.false156

cond.true131:                                     ; preds = %cond.false126
  %106 = load i8*, i8** %name, align 8
  %107 = load i8, i8* %106, align 1
  %conv132 = zext i8 %107 to i32
  %and133 = and i32 %conv132, 31
  %shl = shl i32 %and133, 6
  %108 = load i8*, i8** %name, align 8
  %add.ptr134 = getelementptr inbounds i8, i8* %108, i64 1
  %109 = load i8, i8* %add.ptr134, align 1
  %conv135 = zext i8 %109 to i32
  %and136 = and i32 %conv135, 63
  %or137 = or i32 %shl, %and136
  %conv138 = sext i32 %or137 to i64
  %and139 = and i64 %conv138, -256
  %tobool140 = icmp ne i64 %and139, 0
  br i1 %tobool140, label %cond.false155, label %land.lhs.true141

land.lhs.true141:                                 ; preds = %cond.true131
  %110 = load i8*, i8** %name, align 8
  %111 = load i8, i8* %110, align 1
  %conv142 = zext i8 %111 to i32
  %and143 = and i32 %conv142, 31
  %shl144 = shl i32 %and143, 6
  %112 = load i8*, i8** %name, align 8
  %add.ptr145 = getelementptr inbounds i8, i8* %112, i64 1
  %113 = load i8, i8* %add.ptr145, align 1
  %conv146 = zext i8 %113 to i32
  %and147 = and i32 %conv146, 63
  %or148 = or i32 %shl144, %and147
  %conv149 = trunc i32 %or148 to i8
  %idxprom150 = zext i8 %conv149 to i64
  %arrayidx151 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom150
  %114 = load i32, i32* %arrayidx151, align 4
  %and152 = and i32 %114, 65536
  %tobool153 = icmp ne i32 %and152, 0
  br i1 %tobool153, label %cond.true154, label %cond.false155

cond.true154:                                     ; preds = %land.lhs.true141
  br i1 true, label %land.lhs.true159, label %if.end165

cond.false155:                                    ; preds = %land.lhs.true141, %cond.true131
  br i1 false, label %land.lhs.true159, label %if.end165

cond.false156:                                    ; preds = %cond.false126
  %115 = load i8*, i8** %name, align 8
  %call157 = call zeroext i1 @Perl__is_utf8_perl_idstart(i8* %115)
  br i1 %call157, label %land.lhs.true159, label %if.end165

land.lhs.true159:                                 ; preds = %cond.false156, %cond.false155, %cond.true154, %cond.false125, %cond.true124, %cond.true111
  %call160 = call zeroext i1 @Perl_ckwarn(i32 14)
  br i1 %call160, label %if.end165, label %if.then161

if.then161:                                       ; preds = %land.lhs.true159
  %116 = load %struct.gv*, %struct.gv** %gv, align 8
  %sv_any162 = getelementptr inbounds %struct.gv, %struct.gv* %116, i32 0, i32 0
  %117 = load %struct.xpvgv*, %struct.xpvgv** %sv_any162, align 8
  %xpv_cur163 = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %117, i32 0, i32 2
  %118 = load i64, i64* %xpv_cur163, align 8
  %or164 = or i64 %118, 2
  store i64 %or164, i64* %xpv_cur163, align 8
  br label %if.end165

if.end165:                                        ; preds = %if.then161, %land.lhs.true159, %cond.false156, %cond.false155, %cond.true154, %cond.false125, %cond.true124, %cond.true111
  %119 = load i8, i8* %addmg, align 1
  %tobool166 = trunc i8 %119 to i1
  br i1 %tobool166, label %land.lhs.true168, label %if.end242

land.lhs.true168:                                 ; preds = %if.end165
  %120 = load %struct.gv*, %struct.gv** %gv, align 8
  %sv_u169 = getelementptr inbounds %struct.gv, %struct.gv* %120, i32 0, i32 3
  %svu_gp170 = bitcast %union.anon.6* %sv_u169 to %struct.gp**
  %121 = load %struct.gp*, %struct.gp** %svu_gp170, align 8
  %add.ptr171 = getelementptr inbounds %struct.gp, %struct.gp* %121, i64 0
  %gp_av172 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr171, i32 0, i32 6
  %122 = load %struct.av*, %struct.av** %gp_av172, align 8
  %tobool173 = icmp ne %struct.av* %122, null
  br i1 %tobool173, label %if.then239, label %lor.lhs.false174

lor.lhs.false174:                                 ; preds = %land.lhs.true168
  %123 = load %struct.gv*, %struct.gv** %gv, align 8
  %sv_u175 = getelementptr inbounds %struct.gv, %struct.gv* %123, i32 0, i32 3
  %svu_gp176 = bitcast %union.anon.6* %sv_u175 to %struct.gp**
  %124 = load %struct.gp*, %struct.gp** %svu_gp176, align 8
  %add.ptr177 = getelementptr inbounds %struct.gp, %struct.gp* %124, i64 0
  %gp_hv = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr177, i32 0, i32 5
  %125 = load %struct.hv*, %struct.hv** %gp_hv, align 8
  %tobool178 = icmp ne %struct.hv* %125, null
  br i1 %tobool178, label %if.then239, label %lor.lhs.false179

lor.lhs.false179:                                 ; preds = %lor.lhs.false174
  %126 = load %struct.gv*, %struct.gv** %gv, align 8
  %tobool180 = icmp ne %struct.gv* %126, null
  br i1 %tobool180, label %land.lhs.true181, label %cond.false201

land.lhs.true181:                                 ; preds = %lor.lhs.false179
  %127 = load %struct.gv*, %struct.gv** %gv, align 8
  %128 = bitcast %struct.gv* %127 to %struct.sv*
  %sv_flags182 = getelementptr inbounds %struct.sv, %struct.sv* %128, i32 0, i32 2
  %129 = load i32, i32* %sv_flags182, align 4
  %and183 = and i32 %129, 255
  %cmp184 = icmp eq i32 %and183, 9
  br i1 %cmp184, label %land.lhs.true191, label %lor.lhs.false186

lor.lhs.false186:                                 ; preds = %land.lhs.true181
  %130 = load %struct.gv*, %struct.gv** %gv, align 8
  %131 = bitcast %struct.gv* %130 to %struct.sv*
  %sv_flags187 = getelementptr inbounds %struct.sv, %struct.sv* %131, i32 0, i32 2
  %132 = load i32, i32* %sv_flags187, align 4
  %and188 = and i32 %132, 255
  %cmp189 = icmp eq i32 %and188, 10
  br i1 %cmp189, label %land.lhs.true191, label %cond.false201

land.lhs.true191:                                 ; preds = %lor.lhs.false186, %land.lhs.true181
  %133 = load %struct.gv*, %struct.gv** %gv, align 8
  %sv_u192 = getelementptr inbounds %struct.gv, %struct.gv* %133, i32 0, i32 3
  %svu_gp193 = bitcast %union.anon.6* %sv_u192 to %struct.gp**
  %134 = load %struct.gp*, %struct.gp** %svu_gp193, align 8
  %add.ptr194 = getelementptr inbounds %struct.gp, %struct.gp* %134, i64 0
  %tobool195 = icmp ne %struct.gp* %add.ptr194, null
  br i1 %tobool195, label %cond.true196, label %cond.false201

cond.true196:                                     ; preds = %land.lhs.true191
  %135 = load %struct.gv*, %struct.gv** %gv, align 8
  %sv_u197 = getelementptr inbounds %struct.gv, %struct.gv* %135, i32 0, i32 3
  %svu_gp198 = bitcast %union.anon.6* %sv_u197 to %struct.gp**
  %136 = load %struct.gp*, %struct.gp** %svu_gp198, align 8
  %add.ptr199 = getelementptr inbounds %struct.gp, %struct.gp* %136, i64 0
  %gp_io = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr199, i32 0, i32 1
  %137 = load %struct.io*, %struct.io** %gp_io, align 8
  %tobool200 = icmp ne %struct.io* %137, null
  br i1 %tobool200, label %if.then239, label %lor.lhs.false202

cond.false201:                                    ; preds = %land.lhs.true191, %lor.lhs.false186, %lor.lhs.false179
  br i1 false, label %if.then239, label %lor.lhs.false202

lor.lhs.false202:                                 ; preds = %cond.false201, %cond.true196
  %138 = load %struct.gv*, %struct.gv** %gv, align 8
  %sv_u203 = getelementptr inbounds %struct.gv, %struct.gv* %138, i32 0, i32 3
  %svu_gp204 = bitcast %union.anon.6* %sv_u203 to %struct.gp**
  %139 = load %struct.gp*, %struct.gp** %svu_gp204, align 8
  %add.ptr205 = getelementptr inbounds %struct.gp, %struct.gp* %139, i64 0
  %gp_cv = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr205, i32 0, i32 2
  %140 = load %struct.cv*, %struct.cv** %gp_cv, align 8
  %add.ptr206 = getelementptr inbounds %struct.cv, %struct.cv* %140, i64 0
  %tobool207 = icmp ne %struct.cv* %add.ptr206, null
  br i1 %tobool207, label %if.then239, label %lor.lhs.false208

lor.lhs.false208:                                 ; preds = %lor.lhs.false202
  %141 = load %struct.gv*, %struct.gv** %gv, align 8
  %sv_u209 = getelementptr inbounds %struct.gv, %struct.gv* %141, i32 0, i32 3
  %svu_gp210 = bitcast %union.anon.6* %sv_u209 to %struct.gp**
  %142 = load %struct.gp*, %struct.gp** %svu_gp210, align 8
  %add.ptr211 = getelementptr inbounds %struct.gp, %struct.gp* %142, i64 0
  %gp_sv = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr211, i32 0, i32 0
  %143 = load %struct.sv*, %struct.sv** %gp_sv, align 8
  %tobool212 = icmp ne %struct.sv* %143, null
  br i1 %tobool212, label %land.lhs.true213, label %if.end242

land.lhs.true213:                                 ; preds = %lor.lhs.false208
  %144 = load %struct.gv*, %struct.gv** %gv, align 8
  %sv_u214 = getelementptr inbounds %struct.gv, %struct.gv* %144, i32 0, i32 3
  %svu_gp215 = bitcast %union.anon.6* %sv_u214 to %struct.gp**
  %145 = load %struct.gp*, %struct.gp** %svu_gp215, align 8
  %add.ptr216 = getelementptr inbounds %struct.gp, %struct.gp* %145, i64 0
  %gp_sv217 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr216, i32 0, i32 0
  %146 = load %struct.sv*, %struct.sv** %gp_sv217, align 8
  %sv_flags218 = getelementptr inbounds %struct.sv, %struct.sv* %146, i32 0, i32 2
  %147 = load i32, i32* %sv_flags218, align 4
  %and219 = and i32 %147, 65280
  %tobool220 = icmp ne i32 %and219, 0
  br i1 %tobool220, label %if.then239, label %lor.lhs.false221

lor.lhs.false221:                                 ; preds = %land.lhs.true213
  %148 = load %struct.gv*, %struct.gv** %gv, align 8
  %sv_u222 = getelementptr inbounds %struct.gv, %struct.gv* %148, i32 0, i32 3
  %svu_gp223 = bitcast %union.anon.6* %sv_u222 to %struct.gp**
  %149 = load %struct.gp*, %struct.gp** %svu_gp223, align 8
  %add.ptr224 = getelementptr inbounds %struct.gp, %struct.gp* %149, i64 0
  %gp_sv225 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr224, i32 0, i32 0
  %150 = load %struct.sv*, %struct.sv** %gp_sv225, align 8
  %sv_flags226 = getelementptr inbounds %struct.sv, %struct.sv* %150, i32 0, i32 2
  %151 = load i32, i32* %sv_flags226, align 4
  %and227 = and i32 %151, 255
  %cmp228 = icmp eq i32 %and227, 8
  br i1 %cmp228, label %if.then239, label %lor.lhs.false230

lor.lhs.false230:                                 ; preds = %lor.lhs.false221
  %152 = load %struct.gv*, %struct.gv** %gv, align 8
  %sv_u231 = getelementptr inbounds %struct.gv, %struct.gv* %152, i32 0, i32 3
  %svu_gp232 = bitcast %union.anon.6* %sv_u231 to %struct.gp**
  %153 = load %struct.gp*, %struct.gp** %svu_gp232, align 8
  %add.ptr233 = getelementptr inbounds %struct.gp, %struct.gp* %153, i64 0
  %gp_sv234 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr233, i32 0, i32 0
  %154 = load %struct.sv*, %struct.sv** %gp_sv234, align 8
  %sv_flags235 = getelementptr inbounds %struct.sv, %struct.sv* %154, i32 0, i32 2
  %155 = load i32, i32* %sv_flags235, align 4
  %and236 = and i32 %155, 16826623
  %cmp237 = icmp eq i32 %and236, 16777226
  br i1 %cmp237, label %if.then239, label %if.end242

if.then239:                                       ; preds = %lor.lhs.false230, %lor.lhs.false221, %land.lhs.true213, %lor.lhs.false202, %cond.false201, %cond.true196, %lor.lhs.false174, %land.lhs.true168
  %156 = load %struct.hv*, %struct.hv** %stash, align 8
  %157 = load i8*, i8** %name, align 8
  %158 = load i64, i64* %len, align 8
  %conv240 = trunc i64 %158 to i32
  %159 = load %struct.gv*, %struct.gv** %gv, align 8
  %160 = bitcast %struct.gv* %159 to %struct.sv*
  %call241 = call i8* @Perl_hv_common_key_len(%struct.hv* %156, i8* %157, i32 %conv240, i32 36, %struct.sv* %160, i32 0)
  %161 = bitcast i8* %call241 to %struct.sv**
  br label %if.end242

if.end242:                                        ; preds = %if.then239, %lor.lhs.false230, %lor.lhs.false208, %if.end165
  %162 = load %struct.gv*, %struct.gv** %gv, align 8
  %163 = load %struct.hv*, %struct.hv** %stash, align 8
  %164 = load i8*, i8** %name, align 8
  %165 = load i64, i64* %len, align 8
  %166 = load i8, i8* %addmg, align 1
  %tobool243 = trunc i8 %166 to i1
  %167 = load i32, i32* %sv_type.addr, align 4
  %call244 = call zeroext i1 @S_gv_magicalize(%struct.gv* %162, %struct.hv* %163, i8* %164, i64 %165, i1 zeroext %tobool243, i32 %167)
  br i1 %call244, label %if.then245, label %if.end340

if.then245:                                       ; preds = %if.end242
  %168 = load %struct.gv*, %struct.gv** %gv, align 8
  %sv_u246 = getelementptr inbounds %struct.gv, %struct.gv* %168, i32 0, i32 3
  %svu_gp247 = bitcast %union.anon.6* %sv_u246 to %struct.gp**
  %169 = load %struct.gp*, %struct.gp** %svu_gp247, align 8
  %add.ptr248 = getelementptr inbounds %struct.gp, %struct.gp* %169, i64 0
  %gp_av249 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr248, i32 0, i32 6
  %170 = load %struct.av*, %struct.av** %gp_av249, align 8
  %tobool250 = icmp ne %struct.av* %170, null
  br i1 %tobool250, label %if.end339, label %lor.lhs.false251

lor.lhs.false251:                                 ; preds = %if.then245
  %171 = load %struct.gv*, %struct.gv** %gv, align 8
  %sv_u252 = getelementptr inbounds %struct.gv, %struct.gv* %171, i32 0, i32 3
  %svu_gp253 = bitcast %union.anon.6* %sv_u252 to %struct.gp**
  %172 = load %struct.gp*, %struct.gp** %svu_gp253, align 8
  %add.ptr254 = getelementptr inbounds %struct.gp, %struct.gp* %172, i64 0
  %gp_hv255 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr254, i32 0, i32 5
  %173 = load %struct.hv*, %struct.hv** %gp_hv255, align 8
  %tobool256 = icmp ne %struct.hv* %173, null
  br i1 %tobool256, label %if.end339, label %lor.lhs.false257

lor.lhs.false257:                                 ; preds = %lor.lhs.false251
  %174 = load %struct.gv*, %struct.gv** %gv, align 8
  %tobool258 = icmp ne %struct.gv* %174, null
  br i1 %tobool258, label %land.lhs.true259, label %cond.false280

land.lhs.true259:                                 ; preds = %lor.lhs.false257
  %175 = load %struct.gv*, %struct.gv** %gv, align 8
  %176 = bitcast %struct.gv* %175 to %struct.sv*
  %sv_flags260 = getelementptr inbounds %struct.sv, %struct.sv* %176, i32 0, i32 2
  %177 = load i32, i32* %sv_flags260, align 4
  %and261 = and i32 %177, 255
  %cmp262 = icmp eq i32 %and261, 9
  br i1 %cmp262, label %land.lhs.true269, label %lor.lhs.false264

lor.lhs.false264:                                 ; preds = %land.lhs.true259
  %178 = load %struct.gv*, %struct.gv** %gv, align 8
  %179 = bitcast %struct.gv* %178 to %struct.sv*
  %sv_flags265 = getelementptr inbounds %struct.sv, %struct.sv* %179, i32 0, i32 2
  %180 = load i32, i32* %sv_flags265, align 4
  %and266 = and i32 %180, 255
  %cmp267 = icmp eq i32 %and266, 10
  br i1 %cmp267, label %land.lhs.true269, label %cond.false280

land.lhs.true269:                                 ; preds = %lor.lhs.false264, %land.lhs.true259
  %181 = load %struct.gv*, %struct.gv** %gv, align 8
  %sv_u270 = getelementptr inbounds %struct.gv, %struct.gv* %181, i32 0, i32 3
  %svu_gp271 = bitcast %union.anon.6* %sv_u270 to %struct.gp**
  %182 = load %struct.gp*, %struct.gp** %svu_gp271, align 8
  %add.ptr272 = getelementptr inbounds %struct.gp, %struct.gp* %182, i64 0
  %tobool273 = icmp ne %struct.gp* %add.ptr272, null
  br i1 %tobool273, label %cond.true274, label %cond.false280

cond.true274:                                     ; preds = %land.lhs.true269
  %183 = load %struct.gv*, %struct.gv** %gv, align 8
  %sv_u275 = getelementptr inbounds %struct.gv, %struct.gv* %183, i32 0, i32 3
  %svu_gp276 = bitcast %union.anon.6* %sv_u275 to %struct.gp**
  %184 = load %struct.gp*, %struct.gp** %svu_gp276, align 8
  %add.ptr277 = getelementptr inbounds %struct.gp, %struct.gp* %184, i64 0
  %gp_io278 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr277, i32 0, i32 1
  %185 = load %struct.io*, %struct.io** %gp_io278, align 8
  %tobool279 = icmp ne %struct.io* %185, null
  br i1 %tobool279, label %if.end339, label %lor.lhs.false281

cond.false280:                                    ; preds = %land.lhs.true269, %lor.lhs.false264, %lor.lhs.false257
  br i1 false, label %if.end339, label %lor.lhs.false281

lor.lhs.false281:                                 ; preds = %cond.false280, %cond.true274
  %186 = load %struct.gv*, %struct.gv** %gv, align 8
  %sv_u282 = getelementptr inbounds %struct.gv, %struct.gv* %186, i32 0, i32 3
  %svu_gp283 = bitcast %union.anon.6* %sv_u282 to %struct.gp**
  %187 = load %struct.gp*, %struct.gp** %svu_gp283, align 8
  %add.ptr284 = getelementptr inbounds %struct.gp, %struct.gp* %187, i64 0
  %gp_cv285 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr284, i32 0, i32 2
  %188 = load %struct.cv*, %struct.cv** %gp_cv285, align 8
  %add.ptr286 = getelementptr inbounds %struct.cv, %struct.cv* %188, i64 0
  %tobool287 = icmp ne %struct.cv* %add.ptr286, null
  br i1 %tobool287, label %if.end339, label %lor.lhs.false288

lor.lhs.false288:                                 ; preds = %lor.lhs.false281
  %189 = load %struct.gv*, %struct.gv** %gv, align 8
  %sv_u289 = getelementptr inbounds %struct.gv, %struct.gv* %189, i32 0, i32 3
  %svu_gp290 = bitcast %union.anon.6* %sv_u289 to %struct.gp**
  %190 = load %struct.gp*, %struct.gp** %svu_gp290, align 8
  %add.ptr291 = getelementptr inbounds %struct.gp, %struct.gp* %190, i64 0
  %gp_sv292 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr291, i32 0, i32 0
  %191 = load %struct.sv*, %struct.sv** %gp_sv292, align 8
  %tobool293 = icmp ne %struct.sv* %191, null
  br i1 %tobool293, label %land.lhs.true294, label %if.then320

land.lhs.true294:                                 ; preds = %lor.lhs.false288
  %192 = load %struct.gv*, %struct.gv** %gv, align 8
  %sv_u295 = getelementptr inbounds %struct.gv, %struct.gv* %192, i32 0, i32 3
  %svu_gp296 = bitcast %union.anon.6* %sv_u295 to %struct.gp**
  %193 = load %struct.gp*, %struct.gp** %svu_gp296, align 8
  %add.ptr297 = getelementptr inbounds %struct.gp, %struct.gp* %193, i64 0
  %gp_sv298 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr297, i32 0, i32 0
  %194 = load %struct.sv*, %struct.sv** %gp_sv298, align 8
  %sv_flags299 = getelementptr inbounds %struct.sv, %struct.sv* %194, i32 0, i32 2
  %195 = load i32, i32* %sv_flags299, align 4
  %and300 = and i32 %195, 65280
  %tobool301 = icmp ne i32 %and300, 0
  br i1 %tobool301, label %if.end339, label %lor.lhs.false302

lor.lhs.false302:                                 ; preds = %land.lhs.true294
  %196 = load %struct.gv*, %struct.gv** %gv, align 8
  %sv_u303 = getelementptr inbounds %struct.gv, %struct.gv* %196, i32 0, i32 3
  %svu_gp304 = bitcast %union.anon.6* %sv_u303 to %struct.gp**
  %197 = load %struct.gp*, %struct.gp** %svu_gp304, align 8
  %add.ptr305 = getelementptr inbounds %struct.gp, %struct.gp* %197, i64 0
  %gp_sv306 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr305, i32 0, i32 0
  %198 = load %struct.sv*, %struct.sv** %gp_sv306, align 8
  %sv_flags307 = getelementptr inbounds %struct.sv, %struct.sv* %198, i32 0, i32 2
  %199 = load i32, i32* %sv_flags307, align 4
  %and308 = and i32 %199, 255
  %cmp309 = icmp eq i32 %and308, 8
  br i1 %cmp309, label %if.end339, label %lor.lhs.false311

lor.lhs.false311:                                 ; preds = %lor.lhs.false302
  %200 = load %struct.gv*, %struct.gv** %gv, align 8
  %sv_u312 = getelementptr inbounds %struct.gv, %struct.gv* %200, i32 0, i32 3
  %svu_gp313 = bitcast %union.anon.6* %sv_u312 to %struct.gp**
  %201 = load %struct.gp*, %struct.gp** %svu_gp313, align 8
  %add.ptr314 = getelementptr inbounds %struct.gp, %struct.gp* %201, i64 0
  %gp_sv315 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr314, i32 0, i32 0
  %202 = load %struct.sv*, %struct.sv** %gp_sv315, align 8
  %sv_flags316 = getelementptr inbounds %struct.sv, %struct.sv* %202, i32 0, i32 2
  %203 = load i32, i32* %sv_flags316, align 4
  %and317 = and i32 %203, 16826623
  %cmp318 = icmp eq i32 %and317, 16777226
  br i1 %cmp318, label %if.end339, label %if.then320

if.then320:                                       ; preds = %lor.lhs.false311, %lor.lhs.false288
  %204 = load %struct.gv*, %struct.gv** %gv, align 8
  %sv_u321 = getelementptr inbounds %struct.gv, %struct.gv* %204, i32 0, i32 3
  %svu_gp322 = bitcast %union.anon.6* %sv_u321 to %struct.gp**
  %205 = load %struct.gp*, %struct.gp** %svu_gp322, align 8
  %add.ptr323 = getelementptr inbounds %struct.gp, %struct.gp* %205, i64 0
  %gp_sv324 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr323, i32 0, i32 0
  %206 = load %struct.sv*, %struct.sv** %gp_sv324, align 8
  %tobool325 = icmp ne %struct.sv* %206, null
  br i1 %tobool325, label %land.lhs.true326, label %if.else337

land.lhs.true326:                                 ; preds = %if.then320
  %207 = load %struct.gv*, %struct.gv** %gv, align 8
  %sv_u327 = getelementptr inbounds %struct.gv, %struct.gv* %207, i32 0, i32 3
  %svu_gp328 = bitcast %union.anon.6* %sv_u327 to %struct.gp**
  %208 = load %struct.gp*, %struct.gp** %svu_gp328, align 8
  %add.ptr329 = getelementptr inbounds %struct.gp, %struct.gp* %208, i64 0
  %gp_sv330 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr329, i32 0, i32 0
  %209 = load %struct.sv*, %struct.sv** %gp_sv330, align 8
  %sv_flags331 = getelementptr inbounds %struct.sv, %struct.sv* %209, i32 0, i32 2
  %210 = load i32, i32* %sv_flags331, align 4
  %and332 = and i32 %210, 14680064
  %tobool333 = icmp ne i32 %and332, 0
  br i1 %tobool333, label %if.then334, label %if.else337

if.then334:                                       ; preds = %land.lhs.true326
  %211 = load %struct.hv*, %struct.hv** %stash, align 8
  %212 = load i8*, i8** %name, align 8
  %213 = load i64, i64* %len, align 8
  %conv335 = trunc i64 %213 to i32
  %214 = load %struct.gv*, %struct.gv** %gv, align 8
  %215 = bitcast %struct.gv* %214 to %struct.sv*
  %call336 = call i8* @Perl_hv_common_key_len(%struct.hv* %211, i8* %212, i32 %conv335, i32 36, %struct.sv* %215, i32 0)
  %216 = bitcast i8* %call336 to %struct.sv**
  br label %if.end338

if.else337:                                       ; preds = %land.lhs.true326, %if.then320
  %217 = load %struct.gv*, %struct.gv** %gv, align 8
  %218 = bitcast %struct.gv* %217 to i8*
  %219 = bitcast i8* %218 to %struct.sv*
  call void @S_SvREFCNT_dec_NN(%struct.sv* %219)
  store %struct.gv* null, %struct.gv** %gv, align 8
  br label %if.end338

if.end338:                                        ; preds = %if.else337, %if.then334
  br label %if.end339

if.end339:                                        ; preds = %if.end338, %lor.lhs.false311, %lor.lhs.false302, %land.lhs.true294, %lor.lhs.false281, %cond.false280, %cond.true274, %lor.lhs.false251, %if.then245
  br label %if.end340

if.end340:                                        ; preds = %if.end339, %if.end242
  %220 = load %struct.gv*, %struct.gv** %gv, align 8
  %tobool341 = icmp ne %struct.gv* %220, null
  br i1 %tobool341, label %if.then342, label %if.end348

if.then342:                                       ; preds = %if.end340
  %221 = load %struct.gv*, %struct.gv** %gv, align 8
  %222 = load i32, i32* %faking_it, align 4
  %tobool343 = icmp ne i32 %222, 0
  br i1 %tobool343, label %cond.true344, label %cond.false345

cond.true344:                                     ; preds = %if.then342
  br label %cond.end346

cond.false345:                                    ; preds = %if.then342
  %223 = load i32, i32* %sv_type.addr, align 4
  br label %cond.end346

cond.end346:                                      ; preds = %cond.false345, %cond.true344
  %cond347 = phi i32 [ 13, %cond.true344 ], [ %223, %cond.false345 ]
  call void @S_gv_init_svtype(%struct.gv* %221, i32 %cond347)
  br label %if.end348

if.end348:                                        ; preds = %cond.end346, %if.end340
  %224 = load %struct.gv*, %struct.gv** %gv, align 8
  store %struct.gv* %224, %struct.gv** %retval, align 8
  br label %return

return:                                           ; preds = %if.end348, %if.then81, %if.then74, %if.end71, %if.else32, %if.then16, %if.else11, %if.then10
  %225 = load %struct.gv*, %struct.gv** %retval, align 8
  ret %struct.gv* %225
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.gv* @Perl_gv_fetchsv(%struct.sv* %name, i32 %flags, i32 %sv_type) #0 {
entry:
  %name.addr = alloca %struct.sv*, align 8
  %flags.addr = alloca i32, align 4
  %sv_type.addr = alloca i32, align 4
  %len = alloca i64, align 8
  %nambeg = alloca i8*, align 8
  store %struct.sv* %name, %struct.sv** %name.addr, align 8
  store i32 %flags, i32* %flags.addr, align 4
  store i32 %sv_type, i32* %sv_type.addr, align 4
  %0 = load %struct.sv*, %struct.sv** %name.addr, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %0, i32 0, i32 2
  %1 = load i32, i32* %sv_flags, align 4
  %and = and i32 %1, 2098176
  %cmp = icmp eq i32 %and, 1024
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %2 = load %struct.sv*, %struct.sv** %name.addr, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %2, i32 0, i32 0
  %3 = load i8*, i8** %sv_any, align 8
  %4 = bitcast i8* %3 to %struct.xpv*
  %xpv_cur = getelementptr inbounds %struct.xpv, %struct.xpv* %4, i32 0, i32 2
  %5 = load i64, i64* %xpv_cur, align 8
  store i64 %5, i64* %len, align 8
  %6 = load %struct.sv*, %struct.sv** %name.addr, align 8
  %sv_u = getelementptr inbounds %struct.sv, %struct.sv* %6, i32 0, i32 3
  %svu_pv = bitcast %union.anon* %sv_u to i8**
  %7 = load i8*, i8** %svu_pv, align 8
  %add.ptr = getelementptr inbounds i8, i8* %7, i64 0
  br label %cond.end

cond.false:                                       ; preds = %entry
  %8 = load %struct.sv*, %struct.sv** %name.addr, align 8
  %9 = load i32, i32* %flags.addr, align 4
  %and1 = and i32 %9, 2048
  %tobool = icmp ne i32 %and1, 0
  %10 = zext i1 %tobool to i64
  %cond = select i1 %tobool, i32 0, i32 34
  %call = call i8* @Perl_sv_2pv_flags(%struct.sv* %8, i64* %len, i32 %cond)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond2 = phi i8* [ %add.ptr, %cond.true ], [ %call, %cond.false ]
  store i8* %cond2, i8** %nambeg, align 8
  %11 = load i8*, i8** %nambeg, align 8
  %12 = load i64, i64* %len, align 8
  %13 = load i32, i32* %flags.addr, align 4
  %14 = load %struct.sv*, %struct.sv** %name.addr, align 8
  %sv_flags3 = getelementptr inbounds %struct.sv, %struct.sv* %14, i32 0, i32 2
  %15 = load i32, i32* %sv_flags3, align 4
  %and4 = and i32 %15, 536870912
  %or = or i32 %13, %and4
  %16 = load i32, i32* %sv_type.addr, align 4
  %call5 = call %struct.gv* @Perl_gv_fetchpvn_flags(i8* %11, i64 %12, i32 %or, i32 %16)
  ret %struct.gv* %call5
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i1 @S_parse_gv_stash_name(%struct.hv** %stash, %struct.gv** %gv, i8** %name, i64* %len, i8* %nambeg, i64 %full_len, i32 %is_utf8, i32 %add) #0 {
entry:
  %retval = alloca i1, align 1
  %stash.addr = alloca %struct.hv**, align 8
  %gv.addr = alloca %struct.gv**, align 8
  %name.addr = alloca i8**, align 8
  %len.addr = alloca i64*, align 8
  %nambeg.addr = alloca i8*, align 8
  %full_len.addr = alloca i64, align 8
  %is_utf8.addr = alloca i32, align 4
  %add.addr = alloca i32, align 4
  %name_cursor = alloca i8*, align 8
  %name_end = alloca i8*, align 8
  %name_em1 = alloca i8*, align 8
  %key = alloca i8*, align 8
  %gvp = alloca %struct.gv**, align 8
  %tmpbuf = alloca i8*, align 8
  store %struct.hv** %stash, %struct.hv*** %stash.addr, align 8
  store %struct.gv** %gv, %struct.gv*** %gv.addr, align 8
  store i8** %name, i8*** %name.addr, align 8
  store i64* %len, i64** %len.addr, align 8
  store i8* %nambeg, i8** %nambeg.addr, align 8
  store i64 %full_len, i64* %full_len.addr, align 8
  store i32 %is_utf8, i32* %is_utf8.addr, align 4
  store i32 %add, i32* %add.addr, align 4
  %0 = load i8*, i8** %nambeg.addr, align 8
  %1 = load i64, i64* %full_len.addr, align 8
  %add.ptr = getelementptr inbounds i8, i8* %0, i64 %1
  store i8* %add.ptr, i8** %name_end, align 8
  %2 = load i8*, i8** %name_end, align 8
  %add.ptr1 = getelementptr inbounds i8, i8* %2, i64 -1
  store i8* %add.ptr1, i8** %name_em1, align 8
  %3 = load i64, i64* %full_len.addr, align 8
  %cmp = icmp ugt i64 %3, 2
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %4 = load i8**, i8*** %name.addr, align 8
  %5 = load i8*, i8** %4, align 8
  %6 = load i8, i8* %5, align 1
  %conv = sext i8 %6 to i32
  %cmp2 = icmp eq i32 %conv, 42
  br i1 %cmp2, label %land.lhs.true4, label %if.end

land.lhs.true4:                                   ; preds = %land.lhs.true
  %7 = load %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_hints = getelementptr inbounds %struct.cop, %struct.cop* %7, i32 0, i32 10
  %8 = load i32, i32* %cop_hints, align 8
  %add5 = add i32 %8, 0
  %and = and i32 %add5, 8
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %cond.true, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true4
  %9 = load i32, i32* %is_utf8.addr, align 4
  %tobool6 = icmp ne i32 %9, 0
  br i1 %tobool6, label %cond.false, label %cond.true

cond.true:                                        ; preds = %lor.lhs.false, %land.lhs.true4
  %10 = load i8**, i8*** %name.addr, align 8
  %11 = load i8*, i8** %10, align 8
  %add.ptr7 = getelementptr inbounds i8, i8* %11, i64 1
  %12 = load i8, i8* %add.ptr7, align 1
  %idxprom = zext i8 %12 to i64
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom
  %13 = load i32, i32* %arrayidx, align 4
  %and8 = and i32 %13, 81920
  %cmp9 = icmp eq i32 %and8, 81920
  br i1 %cmp9, label %if.then, label %if.end

cond.false:                                       ; preds = %lor.lhs.false
  %14 = load i8**, i8*** %name.addr, align 8
  %15 = load i8*, i8** %14, align 8
  %add.ptr11 = getelementptr inbounds i8, i8* %15, i64 1
  %16 = load i8, i8* %add.ptr11, align 1
  %conv12 = zext i8 %16 to i64
  %cmp13 = icmp ult i64 %conv12, 128
  br i1 %cmp13, label %cond.true15, label %cond.false23

cond.true15:                                      ; preds = %cond.false
  %17 = load i8**, i8*** %name.addr, align 8
  %18 = load i8*, i8** %17, align 8
  %add.ptr16 = getelementptr inbounds i8, i8* %18, i64 1
  %19 = load i8, i8* %add.ptr16, align 1
  %idxprom17 = zext i8 %19 to i64
  %arrayidx18 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom17
  %20 = load i32, i32* %arrayidx18, align 4
  %and19 = and i32 %20, 65536
  %tobool20 = icmp ne i32 %and19, 0
  br i1 %tobool20, label %cond.true21, label %cond.false22

cond.true21:                                      ; preds = %cond.true15
  br i1 true, label %if.then, label %if.end

cond.false22:                                     ; preds = %cond.true15
  br i1 false, label %if.then, label %if.end

cond.false23:                                     ; preds = %cond.false
  %21 = load i8**, i8*** %name.addr, align 8
  %22 = load i8*, i8** %21, align 8
  %add.ptr24 = getelementptr inbounds i8, i8* %22, i64 1
  %23 = load i8, i8* %add.ptr24, align 1
  %conv25 = zext i8 %23 to i32
  %and26 = and i32 %conv25, 254
  %cmp27 = icmp eq i32 %and26, 194
  br i1 %cmp27, label %cond.true29, label %cond.false57

cond.true29:                                      ; preds = %cond.false23
  %24 = load i8**, i8*** %name.addr, align 8
  %25 = load i8*, i8** %24, align 8
  %add.ptr30 = getelementptr inbounds i8, i8* %25, i64 1
  %26 = load i8, i8* %add.ptr30, align 1
  %conv31 = zext i8 %26 to i32
  %and32 = and i32 %conv31, 31
  %shl = shl i32 %and32, 6
  %27 = load i8**, i8*** %name.addr, align 8
  %28 = load i8*, i8** %27, align 8
  %add.ptr33 = getelementptr inbounds i8, i8* %28, i64 1
  %add.ptr34 = getelementptr inbounds i8, i8* %add.ptr33, i64 1
  %29 = load i8, i8* %add.ptr34, align 1
  %conv35 = zext i8 %29 to i32
  %and36 = and i32 %conv35, 63
  %or = or i32 %shl, %and36
  %conv37 = sext i32 %or to i64
  %and38 = and i64 %conv37, -256
  %tobool39 = icmp ne i64 %and38, 0
  br i1 %tobool39, label %cond.false56, label %land.lhs.true40

land.lhs.true40:                                  ; preds = %cond.true29
  %30 = load i8**, i8*** %name.addr, align 8
  %31 = load i8*, i8** %30, align 8
  %add.ptr41 = getelementptr inbounds i8, i8* %31, i64 1
  %32 = load i8, i8* %add.ptr41, align 1
  %conv42 = zext i8 %32 to i32
  %and43 = and i32 %conv42, 31
  %shl44 = shl i32 %and43, 6
  %33 = load i8**, i8*** %name.addr, align 8
  %34 = load i8*, i8** %33, align 8
  %add.ptr45 = getelementptr inbounds i8, i8* %34, i64 1
  %add.ptr46 = getelementptr inbounds i8, i8* %add.ptr45, i64 1
  %35 = load i8, i8* %add.ptr46, align 1
  %conv47 = zext i8 %35 to i32
  %and48 = and i32 %conv47, 63
  %or49 = or i32 %shl44, %and48
  %conv50 = trunc i32 %or49 to i8
  %idxprom51 = zext i8 %conv50 to i64
  %arrayidx52 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom51
  %36 = load i32, i32* %arrayidx52, align 4
  %and53 = and i32 %36, 65536
  %tobool54 = icmp ne i32 %and53, 0
  br i1 %tobool54, label %cond.true55, label %cond.false56

cond.true55:                                      ; preds = %land.lhs.true40
  br i1 true, label %if.then, label %if.end

cond.false56:                                     ; preds = %land.lhs.true40, %cond.true29
  br i1 false, label %if.then, label %if.end

cond.false57:                                     ; preds = %cond.false23
  %37 = load i8**, i8*** %name.addr, align 8
  %38 = load i8*, i8** %37, align 8
  %add.ptr58 = getelementptr inbounds i8, i8* %38, i64 1
  %call = call zeroext i1 @Perl__is_utf8_perl_idstart(i8* %add.ptr58)
  br i1 %call, label %if.then, label %if.end

if.then:                                          ; preds = %cond.false57, %cond.false56, %cond.true55, %cond.false22, %cond.true21, %cond.true
  %39 = load i8**, i8*** %name.addr, align 8
  %40 = load i8*, i8** %39, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %40, i32 1
  store i8* %incdec.ptr, i8** %39, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %cond.false57, %cond.false56, %cond.true55, %cond.false22, %cond.true21, %cond.true, %land.lhs.true, %entry
  %41 = load i8**, i8*** %name.addr, align 8
  %42 = load i8*, i8** %41, align 8
  store i8* %42, i8** %name_cursor, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %43 = load i8*, i8** %name_cursor, align 8
  %44 = load i8*, i8** %name_end, align 8
  %cmp60 = icmp ult i8* %43, %44
  br i1 %cmp60, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %45 = load i8*, i8** %name_cursor, align 8
  %46 = load i8*, i8** %name_em1, align 8
  %cmp62 = icmp ult i8* %45, %46
  br i1 %cmp62, label %land.lhs.true64, label %if.end347

land.lhs.true64:                                  ; preds = %for.body
  %47 = load i8*, i8** %name_cursor, align 8
  %48 = load i8, i8* %47, align 1
  %conv65 = sext i8 %48 to i32
  %cmp66 = icmp eq i32 %conv65, 58
  br i1 %cmp66, label %land.lhs.true68, label %lor.lhs.false73

land.lhs.true68:                                  ; preds = %land.lhs.true64
  %49 = load i8*, i8** %name_cursor, align 8
  %arrayidx69 = getelementptr inbounds i8, i8* %49, i64 1
  %50 = load i8, i8* %arrayidx69, align 1
  %conv70 = sext i8 %50 to i32
  %cmp71 = icmp eq i32 %conv70, 58
  br i1 %cmp71, label %if.then77, label %lor.lhs.false73

lor.lhs.false73:                                  ; preds = %land.lhs.true68, %land.lhs.true64
  %51 = load i8*, i8** %name_cursor, align 8
  %52 = load i8, i8* %51, align 1
  %conv74 = sext i8 %52 to i32
  %cmp75 = icmp eq i32 %conv74, 39
  br i1 %cmp75, label %if.then77, label %if.end347

if.then77:                                        ; preds = %lor.lhs.false73, %land.lhs.true68
  %53 = load %struct.hv**, %struct.hv*** %stash.addr, align 8
  %54 = load %struct.hv*, %struct.hv** %53, align 8
  %tobool78 = icmp ne %struct.hv* %54, null
  br i1 %tobool78, label %if.end80, label %if.then79

if.then79:                                        ; preds = %if.then77
  %55 = load %struct.hv*, %struct.hv** @PL_defstash, align 8
  %56 = load %struct.hv**, %struct.hv*** %stash.addr, align 8
  store %struct.hv* %55, %struct.hv** %56, align 8
  br label %if.end80

if.end80:                                         ; preds = %if.then79, %if.then77
  %57 = load %struct.hv**, %struct.hv*** %stash.addr, align 8
  %58 = load %struct.hv*, %struct.hv** %57, align 8
  %tobool81 = icmp ne %struct.hv* %58, null
  br i1 %tobool81, label %lor.lhs.false82, label %if.then84

lor.lhs.false82:                                  ; preds = %if.end80
  %59 = load %struct.hv**, %struct.hv*** %stash.addr, align 8
  %60 = load %struct.hv*, %struct.hv** %59, align 8
  %sv_refcnt = getelementptr inbounds %struct.hv, %struct.hv* %60, i32 0, i32 1
  %61 = load i32, i32* %sv_refcnt, align 8
  %tobool83 = icmp ne i32 %61, 0
  br i1 %tobool83, label %if.end85, label %if.then84

if.then84:                                        ; preds = %lor.lhs.false82, %if.end80
  store i1 false, i1* %retval, align 1
  br label %return

if.end85:                                         ; preds = %lor.lhs.false82
  %62 = load i8*, i8** %name_cursor, align 8
  %63 = load i8**, i8*** %name.addr, align 8
  %64 = load i8*, i8** %63, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %62 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %64 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %65 = load i64*, i64** %len.addr, align 8
  store i64 %sub.ptr.sub, i64* %65, align 8
  %66 = load i8*, i8** %name_cursor, align 8
  %67 = load i8*, i8** %nambeg.addr, align 8
  %cmp86 = icmp ugt i8* %66, %67
  br i1 %cmp86, label %if.then88, label %if.end331

if.then88:                                        ; preds = %if.end85
  %68 = load i8*, i8** %name_cursor, align 8
  %69 = load i8, i8* %68, align 1
  %conv89 = sext i8 %69 to i32
  %cmp90 = icmp eq i32 %conv89, 58
  br i1 %cmp90, label %if.then92, label %if.else

if.then92:                                        ; preds = %if.then88
  %70 = load i8**, i8*** %name.addr, align 8
  %71 = load i8*, i8** %70, align 8
  store i8* %71, i8** %key, align 8
  %72 = load i64*, i64** %len.addr, align 8
  %73 = load i64, i64* %72, align 8
  %add93 = add i64 %73, 2
  store i64 %add93, i64* %72, align 8
  br label %if.end100

if.else:                                          ; preds = %if.then88
  %74 = load i64*, i64** %len.addr, align 8
  %75 = load i64, i64* %74, align 8
  %add94 = add i64 %75, 2
  %mul = mul i64 %add94, 1
  %call95 = call i8* @Perl_safesysmalloc(i64 %mul)
  store i8* %call95, i8** %tmpbuf, align 8
  %76 = load i8*, i8** %tmpbuf, align 8
  %77 = load i8**, i8*** %name.addr, align 8
  %78 = load i8*, i8** %77, align 8
  %79 = load i64*, i64** %len.addr, align 8
  %80 = load i64, i64* %79, align 8
  %mul96 = mul i64 %80, 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %76, i8* align 1 %78, i64 %mul96, i1 false)
  %81 = load i8*, i8** %tmpbuf, align 8
  %82 = load i64*, i64** %len.addr, align 8
  %83 = load i64, i64* %82, align 8
  %inc = add i64 %83, 1
  store i64 %inc, i64* %82, align 8
  %arrayidx97 = getelementptr inbounds i8, i8* %81, i64 %83
  store i8 58, i8* %arrayidx97, align 1
  %84 = load i8*, i8** %tmpbuf, align 8
  %85 = load i64*, i64** %len.addr, align 8
  %86 = load i64, i64* %85, align 8
  %inc98 = add i64 %86, 1
  store i64 %inc98, i64* %85, align 8
  %arrayidx99 = getelementptr inbounds i8, i8* %84, i64 %86
  store i8 58, i8* %arrayidx99, align 1
  %87 = load i8*, i8** %tmpbuf, align 8
  store i8* %87, i8** %key, align 8
  br label %if.end100

if.end100:                                        ; preds = %if.else, %if.then92
  %88 = load %struct.hv**, %struct.hv*** %stash.addr, align 8
  %89 = load %struct.hv*, %struct.hv** %88, align 8
  %90 = load i8*, i8** %key, align 8
  %91 = load i32, i32* %is_utf8.addr, align 4
  %tobool101 = icmp ne i32 %91, 0
  br i1 %tobool101, label %cond.true102, label %cond.false104

cond.true102:                                     ; preds = %if.end100
  %92 = load i64*, i64** %len.addr, align 8
  %93 = load i64, i64* %92, align 8
  %conv103 = trunc i64 %93 to i32
  %sub = sub nsw i32 0, %conv103
  br label %cond.end

cond.false104:                                    ; preds = %if.end100
  %94 = load i64*, i64** %len.addr, align 8
  %95 = load i64, i64* %94, align 8
  %conv105 = trunc i64 %95 to i32
  br label %cond.end

cond.end:                                         ; preds = %cond.false104, %cond.true102
  %cond = phi i32 [ %sub, %cond.true102 ], [ %conv105, %cond.false104 ]
  %96 = load i32, i32* %add.addr, align 4
  %tobool106 = icmp ne i32 %96, 0
  %97 = zext i1 %tobool106 to i64
  %cond107 = select i1 %tobool106, i32 48, i32 32
  %call108 = call i8* @Perl_hv_common_key_len(%struct.hv* %89, i8* %90, i32 %cond, i32 %cond107, %struct.sv* null, i32 0)
  %98 = bitcast i8* %call108 to %struct.sv**
  %99 = bitcast %struct.sv** %98 to %struct.gv**
  store %struct.gv** %99, %struct.gv*** %gvp, align 8
  %100 = load %struct.gv**, %struct.gv*** %gvp, align 8
  %tobool109 = icmp ne %struct.gv** %100, null
  br i1 %tobool109, label %cond.true110, label %cond.false111

cond.true110:                                     ; preds = %cond.end
  %101 = load %struct.gv**, %struct.gv*** %gvp, align 8
  %102 = load %struct.gv*, %struct.gv** %101, align 8
  br label %cond.end112

cond.false111:                                    ; preds = %cond.end
  br label %cond.end112

cond.end112:                                      ; preds = %cond.false111, %cond.true110
  %cond113 = phi %struct.gv* [ %102, %cond.true110 ], [ null, %cond.false111 ]
  %103 = load %struct.gv**, %struct.gv*** %gv.addr, align 8
  store %struct.gv* %cond113, %struct.gv** %103, align 8
  %104 = load %struct.gv**, %struct.gv*** %gv.addr, align 8
  %105 = load %struct.gv*, %struct.gv** %104, align 8
  %tobool114 = icmp ne %struct.gv* %105, null
  br i1 %tobool114, label %land.lhs.true115, label %if.end128

land.lhs.true115:                                 ; preds = %cond.end112
  %106 = load %struct.gv**, %struct.gv*** %gv.addr, align 8
  %107 = load %struct.gv*, %struct.gv** %106, align 8
  %cmp116 = icmp ne %struct.gv* %107, bitcast (%struct.sv* @PL_sv_undef to %struct.gv*)
  br i1 %cmp116, label %if.then118, label %if.end128

if.then118:                                       ; preds = %land.lhs.true115
  %108 = load %struct.gv**, %struct.gv*** %gv.addr, align 8
  %109 = load %struct.gv*, %struct.gv** %108, align 8
  %sv_flags = getelementptr inbounds %struct.gv, %struct.gv* %109, i32 0, i32 2
  %110 = load i32, i32* %sv_flags, align 4
  %and119 = and i32 %110, 255
  %cmp120 = icmp ne i32 %and119, 9
  br i1 %cmp120, label %if.then122, label %if.else125

if.then122:                                       ; preds = %if.then118
  %111 = load %struct.gv**, %struct.gv*** %gv.addr, align 8
  %112 = load %struct.gv*, %struct.gv** %111, align 8
  %113 = load %struct.hv**, %struct.hv*** %stash.addr, align 8
  %114 = load %struct.hv*, %struct.hv** %113, align 8
  %115 = load i8*, i8** %key, align 8
  %116 = load i64*, i64** %len.addr, align 8
  %117 = load i64, i64* %116, align 8
  %118 = load i32, i32* %add.addr, align 4
  %and123 = and i32 %118, 2
  %119 = load i32, i32* %is_utf8.addr, align 4
  %or124 = or i32 %and123, %119
  call void @Perl_gv_init_pvn(%struct.gv* %112, %struct.hv* %114, i8* %115, i64 %117, i32 %or124)
  br label %if.end127

if.else125:                                       ; preds = %if.then118
  %120 = load %struct.gv**, %struct.gv*** %gv.addr, align 8
  %121 = load %struct.gv*, %struct.gv** %120, align 8
  %sv_any = getelementptr inbounds %struct.gv, %struct.gv* %121, i32 0, i32 0
  %122 = load %struct.xpvgv*, %struct.xpvgv** %sv_any, align 8
  %xpv_cur = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %122, i32 0, i32 2
  %123 = load i64, i64* %xpv_cur, align 8
  %or126 = or i64 %123, 2
  store i64 %or126, i64* %xpv_cur, align 8
  br label %if.end127

if.end127:                                        ; preds = %if.else125, %if.then122
  br label %if.end128

if.end128:                                        ; preds = %if.end127, %land.lhs.true115, %cond.end112
  %124 = load i8*, i8** %key, align 8
  %125 = load i8**, i8*** %name.addr, align 8
  %126 = load i8*, i8** %125, align 8
  %cmp129 = icmp ne i8* %124, %126
  br i1 %cmp129, label %if.then131, label %if.end132

if.then131:                                       ; preds = %if.end128
  %127 = load i8*, i8** %key, align 8
  call void @Perl_safesysfree(i8* %127)
  br label %if.end132

if.end132:                                        ; preds = %if.then131, %if.end128
  %128 = load %struct.gv**, %struct.gv*** %gv.addr, align 8
  %129 = load %struct.gv*, %struct.gv** %128, align 8
  %tobool133 = icmp ne %struct.gv* %129, null
  br i1 %tobool133, label %lor.lhs.false134, label %if.then137

lor.lhs.false134:                                 ; preds = %if.end132
  %130 = load %struct.gv**, %struct.gv*** %gv.addr, align 8
  %131 = load %struct.gv*, %struct.gv** %130, align 8
  %cmp135 = icmp eq %struct.gv* %131, bitcast (%struct.sv* @PL_sv_undef to %struct.gv*)
  br i1 %cmp135, label %if.then137, label %if.end138

if.then137:                                       ; preds = %lor.lhs.false134, %if.end132
  store i1 false, i1* %retval, align 1
  br label %return

if.end138:                                        ; preds = %lor.lhs.false134
  %132 = load %struct.gv**, %struct.gv*** %gv.addr, align 8
  %133 = load %struct.gv*, %struct.gv** %132, align 8
  %sv_u = getelementptr inbounds %struct.gv, %struct.gv* %133, i32 0, i32 3
  %svu_gp = bitcast %union.anon.6* %sv_u to %struct.gp**
  %134 = load %struct.gp*, %struct.gp** %svu_gp, align 8
  %add.ptr139 = getelementptr inbounds %struct.gp, %struct.gp* %134, i64 0
  %gp_hv = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr139, i32 0, i32 5
  %135 = load %struct.hv*, %struct.hv** %gp_hv, align 8
  %136 = load %struct.hv**, %struct.hv*** %stash.addr, align 8
  store %struct.hv* %135, %struct.hv** %136, align 8
  %tobool140 = icmp ne %struct.hv* %135, null
  br i1 %tobool140, label %if.else248, label %if.then141

if.then141:                                       ; preds = %if.end138
  %call142 = call %struct.sv* @Perl_newSV_type(i32 12)
  %137 = bitcast %struct.sv* %call142 to i8*
  %138 = bitcast i8* %137 to %struct.hv*
  %139 = load %struct.gv**, %struct.gv*** %gv.addr, align 8
  %140 = load %struct.gv*, %struct.gv** %139, align 8
  %sv_u143 = getelementptr inbounds %struct.gv, %struct.gv* %140, i32 0, i32 3
  %svu_gp144 = bitcast %union.anon.6* %sv_u143 to %struct.gp**
  %141 = load %struct.gp*, %struct.gp** %svu_gp144, align 8
  %add.ptr145 = getelementptr inbounds %struct.gp, %struct.gp* %141, i64 0
  %gp_hv146 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr145, i32 0, i32 5
  store %struct.hv* %138, %struct.hv** %gp_hv146, align 8
  %142 = load %struct.hv**, %struct.hv*** %stash.addr, align 8
  store %struct.hv* %138, %struct.hv** %142, align 8
  %143 = load %struct.hv**, %struct.hv*** %stash.addr, align 8
  %144 = load %struct.hv*, %struct.hv** %143, align 8
  %sv_flags147 = getelementptr inbounds %struct.hv, %struct.hv* %144, i32 0, i32 2
  %145 = load i32, i32* %sv_flags147, align 4
  %and148 = and i32 %145, 33554432
  %tobool149 = icmp ne i32 %and148, 0
  br i1 %tobool149, label %land.lhs.true150, label %cond.false213

land.lhs.true150:                                 ; preds = %if.then141
  %146 = load %struct.hv**, %struct.hv*** %stash.addr, align 8
  %147 = load %struct.hv*, %struct.hv** %146, align 8
  %sv_u151 = getelementptr inbounds %struct.hv, %struct.hv* %147, i32 0, i32 3
  %svu_hash = bitcast %union.anon.4* %sv_u151 to %struct.he***
  %148 = load %struct.he**, %struct.he*** %svu_hash, align 8
  %149 = load %struct.hv**, %struct.hv*** %stash.addr, align 8
  %150 = load %struct.hv*, %struct.hv** %149, align 8
  %sv_any152 = getelementptr inbounds %struct.hv, %struct.hv* %150, i32 0, i32 0
  %151 = load %struct.xpvhv*, %struct.xpvhv** %sv_any152, align 8
  %xhv_max = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %151, i32 0, i32 3
  %152 = load i64, i64* %xhv_max, align 8
  %add153 = add i64 %152, 1
  %arrayidx154 = getelementptr inbounds %struct.he*, %struct.he** %148, i64 %add153
  %153 = bitcast %struct.he** %arrayidx154 to %struct.xpvhv_aux*
  %xhv_name_u = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %153, i32 0, i32 0
  %xhvnameu_name = bitcast %union._xhvnameu* %xhv_name_u to %struct.hek**
  %154 = load %struct.hek*, %struct.hek** %xhvnameu_name, align 8
  %tobool155 = icmp ne %struct.hek* %154, null
  br i1 %tobool155, label %land.lhs.true156, label %cond.false213

land.lhs.true156:                                 ; preds = %land.lhs.true150
  %155 = load %struct.hv**, %struct.hv*** %stash.addr, align 8
  %156 = load %struct.hv*, %struct.hv** %155, align 8
  %sv_u157 = getelementptr inbounds %struct.hv, %struct.hv* %156, i32 0, i32 3
  %svu_hash158 = bitcast %union.anon.4* %sv_u157 to %struct.he***
  %157 = load %struct.he**, %struct.he*** %svu_hash158, align 8
  %158 = load %struct.hv**, %struct.hv*** %stash.addr, align 8
  %159 = load %struct.hv*, %struct.hv** %158, align 8
  %sv_any159 = getelementptr inbounds %struct.hv, %struct.hv* %159, i32 0, i32 0
  %160 = load %struct.xpvhv*, %struct.xpvhv** %sv_any159, align 8
  %xhv_max160 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %160, i32 0, i32 3
  %161 = load i64, i64* %xhv_max160, align 8
  %add161 = add i64 %161, 1
  %arrayidx162 = getelementptr inbounds %struct.he*, %struct.he** %157, i64 %add161
  %162 = bitcast %struct.he** %arrayidx162 to %struct.xpvhv_aux*
  %xhv_name_count = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %162, i32 0, i32 4
  %163 = load i32, i32* %xhv_name_count, align 4
  %tobool163 = icmp ne i32 %163, 0
  br i1 %tobool163, label %cond.true164, label %cond.false173

cond.true164:                                     ; preds = %land.lhs.true156
  %164 = load %struct.hv**, %struct.hv*** %stash.addr, align 8
  %165 = load %struct.hv*, %struct.hv** %164, align 8
  %sv_u165 = getelementptr inbounds %struct.hv, %struct.hv* %165, i32 0, i32 3
  %svu_hash166 = bitcast %union.anon.4* %sv_u165 to %struct.he***
  %166 = load %struct.he**, %struct.he*** %svu_hash166, align 8
  %167 = load %struct.hv**, %struct.hv*** %stash.addr, align 8
  %168 = load %struct.hv*, %struct.hv** %167, align 8
  %sv_any167 = getelementptr inbounds %struct.hv, %struct.hv* %168, i32 0, i32 0
  %169 = load %struct.xpvhv*, %struct.xpvhv** %sv_any167, align 8
  %xhv_max168 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %169, i32 0, i32 3
  %170 = load i64, i64* %xhv_max168, align 8
  %add169 = add i64 %170, 1
  %arrayidx170 = getelementptr inbounds %struct.he*, %struct.he** %166, i64 %add169
  %171 = bitcast %struct.he** %arrayidx170 to %struct.xpvhv_aux*
  %xhv_name_u171 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %171, i32 0, i32 0
  %xhvnameu_names = bitcast %union._xhvnameu* %xhv_name_u171 to %struct.hek***
  %172 = load %struct.hek**, %struct.hek*** %xhvnameu_names, align 8
  %173 = load %struct.hek*, %struct.hek** %172, align 8
  %tobool172 = icmp ne %struct.hek* %173, null
  br i1 %tobool172, label %cond.true183, label %cond.false213

cond.false173:                                    ; preds = %land.lhs.true156
  %174 = load %struct.hv**, %struct.hv*** %stash.addr, align 8
  %175 = load %struct.hv*, %struct.hv** %174, align 8
  %sv_u174 = getelementptr inbounds %struct.hv, %struct.hv* %175, i32 0, i32 3
  %svu_hash175 = bitcast %union.anon.4* %sv_u174 to %struct.he***
  %176 = load %struct.he**, %struct.he*** %svu_hash175, align 8
  %177 = load %struct.hv**, %struct.hv*** %stash.addr, align 8
  %178 = load %struct.hv*, %struct.hv** %177, align 8
  %sv_any176 = getelementptr inbounds %struct.hv, %struct.hv* %178, i32 0, i32 0
  %179 = load %struct.xpvhv*, %struct.xpvhv** %sv_any176, align 8
  %xhv_max177 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %179, i32 0, i32 3
  %180 = load i64, i64* %xhv_max177, align 8
  %add178 = add i64 %180, 1
  %arrayidx179 = getelementptr inbounds %struct.he*, %struct.he** %176, i64 %add178
  %181 = bitcast %struct.he** %arrayidx179 to %struct.xpvhv_aux*
  %xhv_name_u180 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %181, i32 0, i32 0
  %xhvnameu_name181 = bitcast %union._xhvnameu* %xhv_name_u180 to %struct.hek**
  %182 = load %struct.hek*, %struct.hek** %xhvnameu_name181, align 8
  %tobool182 = icmp ne %struct.hek* %182, null
  br i1 %tobool182, label %cond.true183, label %cond.false213

cond.true183:                                     ; preds = %cond.false173, %cond.true164
  %183 = load %struct.hv**, %struct.hv*** %stash.addr, align 8
  %184 = load %struct.hv*, %struct.hv** %183, align 8
  %sv_u184 = getelementptr inbounds %struct.hv, %struct.hv* %184, i32 0, i32 3
  %svu_hash185 = bitcast %union.anon.4* %sv_u184 to %struct.he***
  %185 = load %struct.he**, %struct.he*** %svu_hash185, align 8
  %186 = load %struct.hv**, %struct.hv*** %stash.addr, align 8
  %187 = load %struct.hv*, %struct.hv** %186, align 8
  %sv_any186 = getelementptr inbounds %struct.hv, %struct.hv* %187, i32 0, i32 0
  %188 = load %struct.xpvhv*, %struct.xpvhv** %sv_any186, align 8
  %xhv_max187 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %188, i32 0, i32 3
  %189 = load i64, i64* %xhv_max187, align 8
  %add188 = add i64 %189, 1
  %arrayidx189 = getelementptr inbounds %struct.he*, %struct.he** %185, i64 %add188
  %190 = bitcast %struct.he** %arrayidx189 to %struct.xpvhv_aux*
  %xhv_name_count190 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %190, i32 0, i32 4
  %191 = load i32, i32* %xhv_name_count190, align 4
  %tobool191 = icmp ne i32 %191, 0
  br i1 %tobool191, label %cond.true192, label %cond.false201

cond.true192:                                     ; preds = %cond.true183
  %192 = load %struct.hv**, %struct.hv*** %stash.addr, align 8
  %193 = load %struct.hv*, %struct.hv** %192, align 8
  %sv_u193 = getelementptr inbounds %struct.hv, %struct.hv* %193, i32 0, i32 3
  %svu_hash194 = bitcast %union.anon.4* %sv_u193 to %struct.he***
  %194 = load %struct.he**, %struct.he*** %svu_hash194, align 8
  %195 = load %struct.hv**, %struct.hv*** %stash.addr, align 8
  %196 = load %struct.hv*, %struct.hv** %195, align 8
  %sv_any195 = getelementptr inbounds %struct.hv, %struct.hv* %196, i32 0, i32 0
  %197 = load %struct.xpvhv*, %struct.xpvhv** %sv_any195, align 8
  %xhv_max196 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %197, i32 0, i32 3
  %198 = load i64, i64* %xhv_max196, align 8
  %add197 = add i64 %198, 1
  %arrayidx198 = getelementptr inbounds %struct.he*, %struct.he** %194, i64 %add197
  %199 = bitcast %struct.he** %arrayidx198 to %struct.xpvhv_aux*
  %xhv_name_u199 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %199, i32 0, i32 0
  %xhvnameu_names200 = bitcast %union._xhvnameu* %xhv_name_u199 to %struct.hek***
  %200 = load %struct.hek**, %struct.hek*** %xhvnameu_names200, align 8
  %201 = load %struct.hek*, %struct.hek** %200, align 8
  br label %cond.end210

cond.false201:                                    ; preds = %cond.true183
  %202 = load %struct.hv**, %struct.hv*** %stash.addr, align 8
  %203 = load %struct.hv*, %struct.hv** %202, align 8
  %sv_u202 = getelementptr inbounds %struct.hv, %struct.hv* %203, i32 0, i32 3
  %svu_hash203 = bitcast %union.anon.4* %sv_u202 to %struct.he***
  %204 = load %struct.he**, %struct.he*** %svu_hash203, align 8
  %205 = load %struct.hv**, %struct.hv*** %stash.addr, align 8
  %206 = load %struct.hv*, %struct.hv** %205, align 8
  %sv_any204 = getelementptr inbounds %struct.hv, %struct.hv* %206, i32 0, i32 0
  %207 = load %struct.xpvhv*, %struct.xpvhv** %sv_any204, align 8
  %xhv_max205 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %207, i32 0, i32 3
  %208 = load i64, i64* %xhv_max205, align 8
  %add206 = add i64 %208, 1
  %arrayidx207 = getelementptr inbounds %struct.he*, %struct.he** %204, i64 %add206
  %209 = bitcast %struct.he** %arrayidx207 to %struct.xpvhv_aux*
  %xhv_name_u208 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %209, i32 0, i32 0
  %xhvnameu_name209 = bitcast %union._xhvnameu* %xhv_name_u208 to %struct.hek**
  %210 = load %struct.hek*, %struct.hek** %xhvnameu_name209, align 8
  br label %cond.end210

cond.end210:                                      ; preds = %cond.false201, %cond.true192
  %cond211 = phi %struct.hek* [ %201, %cond.true192 ], [ %210, %cond.false201 ]
  %hek_key = getelementptr inbounds %struct.hek, %struct.hek* %cond211, i32 0, i32 2
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %hek_key, i64 0, i64 0
  %tobool212 = icmp ne i8* %arraydecay, null
  br i1 %tobool212, label %if.end247, label %if.then214

cond.false213:                                    ; preds = %cond.false173, %cond.true164, %land.lhs.true150, %if.then141
  br i1 false, label %if.end247, label %if.then214

if.then214:                                       ; preds = %cond.false213, %cond.end210
  %211 = load %struct.gv**, %struct.gv*** %gv.addr, align 8
  %212 = load %struct.gv*, %struct.gv** %211, align 8
  %sv_any215 = getelementptr inbounds %struct.gv, %struct.gv* %212, i32 0, i32 0
  %213 = load %struct.xpvgv*, %struct.xpvgv** %sv_any215, align 8
  %xnv_u = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %213, i32 0, i32 5
  %xgv_stash = bitcast %union._xnvu* %xnv_u to %struct.hv**
  %214 = load %struct.hv*, %struct.hv** %xgv_stash, align 8
  %215 = load %struct.hv*, %struct.hv** @PL_defstash, align 8
  %cmp216 = icmp eq %struct.hv* %214, %215
  br i1 %cmp216, label %land.lhs.true218, label %if.else225

land.lhs.true218:                                 ; preds = %if.then214
  %216 = load i64*, i64** %len.addr, align 8
  %217 = load i64, i64* %216, align 8
  %cmp219 = icmp eq i64 %217, 6
  br i1 %cmp219, label %land.lhs.true221, label %if.else225

land.lhs.true221:                                 ; preds = %land.lhs.true218
  %218 = load i8**, i8*** %name.addr, align 8
  %219 = load i8*, i8** %218, align 8
  %call222 = call i32 @strncmp(i8* %219, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.48, i64 0, i64 0), i64 4) #4
  %tobool223 = icmp ne i32 %call222, 0
  br i1 %tobool223, label %if.else225, label %if.then224

if.then224:                                       ; preds = %land.lhs.true221
  %220 = load %struct.hv**, %struct.hv*** %stash.addr, align 8
  %221 = load %struct.hv*, %struct.hv** %220, align 8
  call void @Perl_hv_name_set(%struct.hv* %221, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.48, i64 0, i64 0), i32 4, i32 0)
  br label %if.end230

if.else225:                                       ; preds = %land.lhs.true221, %land.lhs.true218, %if.then214
  %222 = load %struct.hv**, %struct.hv*** %stash.addr, align 8
  %223 = load %struct.hv*, %struct.hv** %222, align 8
  %224 = load i8*, i8** %nambeg.addr, align 8
  %225 = load i8*, i8** %name_cursor, align 8
  %226 = load i8*, i8** %nambeg.addr, align 8
  %sub.ptr.lhs.cast226 = ptrtoint i8* %225 to i64
  %sub.ptr.rhs.cast227 = ptrtoint i8* %226 to i64
  %sub.ptr.sub228 = sub i64 %sub.ptr.lhs.cast226, %sub.ptr.rhs.cast227
  %conv229 = trunc i64 %sub.ptr.sub228 to i32
  %227 = load i32, i32* %is_utf8.addr, align 4
  call void @Perl_hv_name_set(%struct.hv* %223, i8* %224, i32 %conv229, i32 %227)
  br label %if.end230

if.end230:                                        ; preds = %if.else225, %if.then224
  %228 = load %struct.gv**, %struct.gv*** %gv.addr, align 8
  %229 = load %struct.gv*, %struct.gv** %228, align 8
  %sv_any231 = getelementptr inbounds %struct.gv, %struct.gv* %229, i32 0, i32 0
  %230 = load %struct.xpvgv*, %struct.xpvgv** %sv_any231, align 8
  %xnv_u232 = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %230, i32 0, i32 5
  %xgv_stash233 = bitcast %union._xnvu* %xnv_u232 to %struct.hv**
  %231 = load %struct.hv*, %struct.hv** %xgv_stash233, align 8
  %sv_u234 = getelementptr inbounds %struct.hv, %struct.hv* %231, i32 0, i32 3
  %svu_hash235 = bitcast %union.anon.4* %sv_u234 to %struct.he***
  %232 = load %struct.he**, %struct.he*** %svu_hash235, align 8
  %233 = load %struct.gv**, %struct.gv*** %gv.addr, align 8
  %234 = load %struct.gv*, %struct.gv** %233, align 8
  %sv_any236 = getelementptr inbounds %struct.gv, %struct.gv* %234, i32 0, i32 0
  %235 = load %struct.xpvgv*, %struct.xpvgv** %sv_any236, align 8
  %xnv_u237 = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %235, i32 0, i32 5
  %xgv_stash238 = bitcast %union._xnvu* %xnv_u237 to %struct.hv**
  %236 = load %struct.hv*, %struct.hv** %xgv_stash238, align 8
  %sv_any239 = getelementptr inbounds %struct.hv, %struct.hv* %236, i32 0, i32 0
  %237 = load %struct.xpvhv*, %struct.xpvhv** %sv_any239, align 8
  %xhv_max240 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %237, i32 0, i32 3
  %238 = load i64, i64* %xhv_max240, align 8
  %add241 = add i64 %238, 1
  %arrayidx242 = getelementptr inbounds %struct.he*, %struct.he** %232, i64 %add241
  %239 = bitcast %struct.he** %arrayidx242 to %struct.xpvhv_aux*
  %xhv_name_count243 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %239, i32 0, i32 4
  %240 = load i32, i32* %xhv_name_count243, align 4
  %tobool244 = icmp ne i32 %240, 0
  br i1 %tobool244, label %if.then245, label %if.end246

if.then245:                                       ; preds = %if.end230
  %241 = load %struct.hv**, %struct.hv*** %stash.addr, align 8
  %242 = load %struct.hv*, %struct.hv** %241, align 8
  %243 = load %struct.gv**, %struct.gv*** %gv.addr, align 8
  %244 = load %struct.gv*, %struct.gv** %243, align 8
  call void @Perl_mro_package_moved(%struct.hv* %242, %struct.hv* null, %struct.gv* %244, i32 1)
  br label %if.end246

if.end246:                                        ; preds = %if.then245, %if.end230
  br label %if.end247

if.end247:                                        ; preds = %if.end246, %cond.false213, %cond.end210
  br label %if.end330

if.else248:                                       ; preds = %if.end138
  %245 = load %struct.hv**, %struct.hv*** %stash.addr, align 8
  %246 = load %struct.hv*, %struct.hv** %245, align 8
  %sv_flags249 = getelementptr inbounds %struct.hv, %struct.hv* %246, i32 0, i32 2
  %247 = load i32, i32* %sv_flags249, align 4
  %and250 = and i32 %247, 33554432
  %tobool251 = icmp ne i32 %and250, 0
  br i1 %tobool251, label %land.lhs.true252, label %cond.false323

land.lhs.true252:                                 ; preds = %if.else248
  %248 = load %struct.hv**, %struct.hv*** %stash.addr, align 8
  %249 = load %struct.hv*, %struct.hv** %248, align 8
  %sv_u253 = getelementptr inbounds %struct.hv, %struct.hv* %249, i32 0, i32 3
  %svu_hash254 = bitcast %union.anon.4* %sv_u253 to %struct.he***
  %250 = load %struct.he**, %struct.he*** %svu_hash254, align 8
  %251 = load %struct.hv**, %struct.hv*** %stash.addr, align 8
  %252 = load %struct.hv*, %struct.hv** %251, align 8
  %sv_any255 = getelementptr inbounds %struct.hv, %struct.hv* %252, i32 0, i32 0
  %253 = load %struct.xpvhv*, %struct.xpvhv** %sv_any255, align 8
  %xhv_max256 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %253, i32 0, i32 3
  %254 = load i64, i64* %xhv_max256, align 8
  %add257 = add i64 %254, 1
  %arrayidx258 = getelementptr inbounds %struct.he*, %struct.he** %250, i64 %add257
  %255 = bitcast %struct.he** %arrayidx258 to %struct.xpvhv_aux*
  %xhv_name_u259 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %255, i32 0, i32 0
  %xhvnameu_name260 = bitcast %union._xhvnameu* %xhv_name_u259 to %struct.hek**
  %256 = load %struct.hek*, %struct.hek** %xhvnameu_name260, align 8
  %tobool261 = icmp ne %struct.hek* %256, null
  br i1 %tobool261, label %land.lhs.true262, label %cond.false323

land.lhs.true262:                                 ; preds = %land.lhs.true252
  %257 = load %struct.hv**, %struct.hv*** %stash.addr, align 8
  %258 = load %struct.hv*, %struct.hv** %257, align 8
  %sv_u263 = getelementptr inbounds %struct.hv, %struct.hv* %258, i32 0, i32 3
  %svu_hash264 = bitcast %union.anon.4* %sv_u263 to %struct.he***
  %259 = load %struct.he**, %struct.he*** %svu_hash264, align 8
  %260 = load %struct.hv**, %struct.hv*** %stash.addr, align 8
  %261 = load %struct.hv*, %struct.hv** %260, align 8
  %sv_any265 = getelementptr inbounds %struct.hv, %struct.hv* %261, i32 0, i32 0
  %262 = load %struct.xpvhv*, %struct.xpvhv** %sv_any265, align 8
  %xhv_max266 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %262, i32 0, i32 3
  %263 = load i64, i64* %xhv_max266, align 8
  %add267 = add i64 %263, 1
  %arrayidx268 = getelementptr inbounds %struct.he*, %struct.he** %259, i64 %add267
  %264 = bitcast %struct.he** %arrayidx268 to %struct.xpvhv_aux*
  %xhv_name_count269 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %264, i32 0, i32 4
  %265 = load i32, i32* %xhv_name_count269, align 4
  %tobool270 = icmp ne i32 %265, 0
  br i1 %tobool270, label %cond.true271, label %cond.false281

cond.true271:                                     ; preds = %land.lhs.true262
  %266 = load %struct.hv**, %struct.hv*** %stash.addr, align 8
  %267 = load %struct.hv*, %struct.hv** %266, align 8
  %sv_u272 = getelementptr inbounds %struct.hv, %struct.hv* %267, i32 0, i32 3
  %svu_hash273 = bitcast %union.anon.4* %sv_u272 to %struct.he***
  %268 = load %struct.he**, %struct.he*** %svu_hash273, align 8
  %269 = load %struct.hv**, %struct.hv*** %stash.addr, align 8
  %270 = load %struct.hv*, %struct.hv** %269, align 8
  %sv_any274 = getelementptr inbounds %struct.hv, %struct.hv* %270, i32 0, i32 0
  %271 = load %struct.xpvhv*, %struct.xpvhv** %sv_any274, align 8
  %xhv_max275 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %271, i32 0, i32 3
  %272 = load i64, i64* %xhv_max275, align 8
  %add276 = add i64 %272, 1
  %arrayidx277 = getelementptr inbounds %struct.he*, %struct.he** %268, i64 %add276
  %273 = bitcast %struct.he** %arrayidx277 to %struct.xpvhv_aux*
  %xhv_name_u278 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %273, i32 0, i32 0
  %xhvnameu_names279 = bitcast %union._xhvnameu* %xhv_name_u278 to %struct.hek***
  %274 = load %struct.hek**, %struct.hek*** %xhvnameu_names279, align 8
  %275 = load %struct.hek*, %struct.hek** %274, align 8
  %tobool280 = icmp ne %struct.hek* %275, null
  br i1 %tobool280, label %cond.true291, label %cond.false323

cond.false281:                                    ; preds = %land.lhs.true262
  %276 = load %struct.hv**, %struct.hv*** %stash.addr, align 8
  %277 = load %struct.hv*, %struct.hv** %276, align 8
  %sv_u282 = getelementptr inbounds %struct.hv, %struct.hv* %277, i32 0, i32 3
  %svu_hash283 = bitcast %union.anon.4* %sv_u282 to %struct.he***
  %278 = load %struct.he**, %struct.he*** %svu_hash283, align 8
  %279 = load %struct.hv**, %struct.hv*** %stash.addr, align 8
  %280 = load %struct.hv*, %struct.hv** %279, align 8
  %sv_any284 = getelementptr inbounds %struct.hv, %struct.hv* %280, i32 0, i32 0
  %281 = load %struct.xpvhv*, %struct.xpvhv** %sv_any284, align 8
  %xhv_max285 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %281, i32 0, i32 3
  %282 = load i64, i64* %xhv_max285, align 8
  %add286 = add i64 %282, 1
  %arrayidx287 = getelementptr inbounds %struct.he*, %struct.he** %278, i64 %add286
  %283 = bitcast %struct.he** %arrayidx287 to %struct.xpvhv_aux*
  %xhv_name_u288 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %283, i32 0, i32 0
  %xhvnameu_name289 = bitcast %union._xhvnameu* %xhv_name_u288 to %struct.hek**
  %284 = load %struct.hek*, %struct.hek** %xhvnameu_name289, align 8
  %tobool290 = icmp ne %struct.hek* %284, null
  br i1 %tobool290, label %cond.true291, label %cond.false323

cond.true291:                                     ; preds = %cond.false281, %cond.true271
  %285 = load %struct.hv**, %struct.hv*** %stash.addr, align 8
  %286 = load %struct.hv*, %struct.hv** %285, align 8
  %sv_u292 = getelementptr inbounds %struct.hv, %struct.hv* %286, i32 0, i32 3
  %svu_hash293 = bitcast %union.anon.4* %sv_u292 to %struct.he***
  %287 = load %struct.he**, %struct.he*** %svu_hash293, align 8
  %288 = load %struct.hv**, %struct.hv*** %stash.addr, align 8
  %289 = load %struct.hv*, %struct.hv** %288, align 8
  %sv_any294 = getelementptr inbounds %struct.hv, %struct.hv* %289, i32 0, i32 0
  %290 = load %struct.xpvhv*, %struct.xpvhv** %sv_any294, align 8
  %xhv_max295 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %290, i32 0, i32 3
  %291 = load i64, i64* %xhv_max295, align 8
  %add296 = add i64 %291, 1
  %arrayidx297 = getelementptr inbounds %struct.he*, %struct.he** %287, i64 %add296
  %292 = bitcast %struct.he** %arrayidx297 to %struct.xpvhv_aux*
  %xhv_name_count298 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %292, i32 0, i32 4
  %293 = load i32, i32* %xhv_name_count298, align 4
  %tobool299 = icmp ne i32 %293, 0
  br i1 %tobool299, label %cond.true300, label %cond.false309

cond.true300:                                     ; preds = %cond.true291
  %294 = load %struct.hv**, %struct.hv*** %stash.addr, align 8
  %295 = load %struct.hv*, %struct.hv** %294, align 8
  %sv_u301 = getelementptr inbounds %struct.hv, %struct.hv* %295, i32 0, i32 3
  %svu_hash302 = bitcast %union.anon.4* %sv_u301 to %struct.he***
  %296 = load %struct.he**, %struct.he*** %svu_hash302, align 8
  %297 = load %struct.hv**, %struct.hv*** %stash.addr, align 8
  %298 = load %struct.hv*, %struct.hv** %297, align 8
  %sv_any303 = getelementptr inbounds %struct.hv, %struct.hv* %298, i32 0, i32 0
  %299 = load %struct.xpvhv*, %struct.xpvhv** %sv_any303, align 8
  %xhv_max304 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %299, i32 0, i32 3
  %300 = load i64, i64* %xhv_max304, align 8
  %add305 = add i64 %300, 1
  %arrayidx306 = getelementptr inbounds %struct.he*, %struct.he** %296, i64 %add305
  %301 = bitcast %struct.he** %arrayidx306 to %struct.xpvhv_aux*
  %xhv_name_u307 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %301, i32 0, i32 0
  %xhvnameu_names308 = bitcast %union._xhvnameu* %xhv_name_u307 to %struct.hek***
  %302 = load %struct.hek**, %struct.hek*** %xhvnameu_names308, align 8
  %303 = load %struct.hek*, %struct.hek** %302, align 8
  br label %cond.end318

cond.false309:                                    ; preds = %cond.true291
  %304 = load %struct.hv**, %struct.hv*** %stash.addr, align 8
  %305 = load %struct.hv*, %struct.hv** %304, align 8
  %sv_u310 = getelementptr inbounds %struct.hv, %struct.hv* %305, i32 0, i32 3
  %svu_hash311 = bitcast %union.anon.4* %sv_u310 to %struct.he***
  %306 = load %struct.he**, %struct.he*** %svu_hash311, align 8
  %307 = load %struct.hv**, %struct.hv*** %stash.addr, align 8
  %308 = load %struct.hv*, %struct.hv** %307, align 8
  %sv_any312 = getelementptr inbounds %struct.hv, %struct.hv* %308, i32 0, i32 0
  %309 = load %struct.xpvhv*, %struct.xpvhv** %sv_any312, align 8
  %xhv_max313 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %309, i32 0, i32 3
  %310 = load i64, i64* %xhv_max313, align 8
  %add314 = add i64 %310, 1
  %arrayidx315 = getelementptr inbounds %struct.he*, %struct.he** %306, i64 %add314
  %311 = bitcast %struct.he** %arrayidx315 to %struct.xpvhv_aux*
  %xhv_name_u316 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %311, i32 0, i32 0
  %xhvnameu_name317 = bitcast %union._xhvnameu* %xhv_name_u316 to %struct.hek**
  %312 = load %struct.hek*, %struct.hek** %xhvnameu_name317, align 8
  br label %cond.end318

cond.end318:                                      ; preds = %cond.false309, %cond.true300
  %cond319 = phi %struct.hek* [ %303, %cond.true300 ], [ %312, %cond.false309 ]
  %hek_key320 = getelementptr inbounds %struct.hek, %struct.hek* %cond319, i32 0, i32 2
  %arraydecay321 = getelementptr inbounds [1 x i8], [1 x i8]* %hek_key320, i64 0, i64 0
  %tobool322 = icmp ne i8* %arraydecay321, null
  br i1 %tobool322, label %if.end329, label %if.then324

cond.false323:                                    ; preds = %cond.false281, %cond.true271, %land.lhs.true252, %if.else248
  br i1 false, label %if.end329, label %if.then324

if.then324:                                       ; preds = %cond.false323, %cond.end318
  %313 = load %struct.hv**, %struct.hv*** %stash.addr, align 8
  %314 = load %struct.hv*, %struct.hv** %313, align 8
  %315 = load i8*, i8** %nambeg.addr, align 8
  %316 = load i8*, i8** %name_cursor, align 8
  %317 = load i8*, i8** %nambeg.addr, align 8
  %sub.ptr.lhs.cast325 = ptrtoint i8* %316 to i64
  %sub.ptr.rhs.cast326 = ptrtoint i8* %317 to i64
  %sub.ptr.sub327 = sub i64 %sub.ptr.lhs.cast325, %sub.ptr.rhs.cast326
  %conv328 = trunc i64 %sub.ptr.sub327 to i32
  %318 = load i32, i32* %is_utf8.addr, align 4
  call void @Perl_hv_name_set(%struct.hv* %314, i8* %315, i32 %conv328, i32 %318)
  br label %if.end329

if.end329:                                        ; preds = %if.then324, %cond.false323, %cond.end318
  br label %if.end330

if.end330:                                        ; preds = %if.end329, %if.end247
  br label %if.end331

if.end331:                                        ; preds = %if.end330, %if.end85
  %319 = load i8*, i8** %name_cursor, align 8
  %320 = load i8, i8* %319, align 1
  %conv332 = sext i8 %320 to i32
  %cmp333 = icmp eq i32 %conv332, 58
  br i1 %cmp333, label %if.then335, label %if.end337

if.then335:                                       ; preds = %if.end331
  %321 = load i8*, i8** %name_cursor, align 8
  %incdec.ptr336 = getelementptr inbounds i8, i8* %321, i32 1
  store i8* %incdec.ptr336, i8** %name_cursor, align 8
  br label %if.end337

if.end337:                                        ; preds = %if.then335, %if.end331
  %322 = load i8*, i8** %name_cursor, align 8
  %add.ptr338 = getelementptr inbounds i8, i8* %322, i64 1
  %323 = load i8**, i8*** %name.addr, align 8
  store i8* %add.ptr338, i8** %323, align 8
  %324 = load i8**, i8*** %name.addr, align 8
  %325 = load i8*, i8** %324, align 8
  %326 = load i8*, i8** %name_end, align 8
  %cmp339 = icmp eq i8* %325, %326
  br i1 %cmp339, label %if.then341, label %if.end346

if.then341:                                       ; preds = %if.end337
  %327 = load %struct.gv**, %struct.gv*** %gv.addr, align 8
  %328 = load %struct.gv*, %struct.gv** %327, align 8
  %tobool342 = icmp ne %struct.gv* %328, null
  br i1 %tobool342, label %if.end345, label %if.then343

if.then343:                                       ; preds = %if.then341
  %329 = load %struct.hv*, %struct.hv** @PL_defstash, align 8
  %call344 = call i8* @Perl_hv_common(%struct.hv* %329, %struct.sv* null, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.51, i64 0, i64 0), i64 6, i32 0, i32 48, %struct.sv* null, i32 0)
  %330 = bitcast i8* %call344 to %struct.sv**
  %331 = load %struct.sv*, %struct.sv** %330, align 8
  %332 = bitcast %struct.sv* %331 to i8*
  %333 = bitcast i8* %332 to %struct.gv*
  %334 = load %struct.gv**, %struct.gv*** %gv.addr, align 8
  store %struct.gv* %333, %struct.gv** %334, align 8
  br label %if.end345

if.end345:                                        ; preds = %if.then343, %if.then341
  store i1 true, i1* %retval, align 1
  br label %return

if.end346:                                        ; preds = %if.end337
  br label %if.end347

if.end347:                                        ; preds = %if.end346, %lor.lhs.false73, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end347
  %335 = load i8*, i8** %name_cursor, align 8
  %incdec.ptr348 = getelementptr inbounds i8, i8* %335, i32 1
  store i8* %incdec.ptr348, i8** %name_cursor, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %336 = load i8*, i8** %name_cursor, align 8
  %337 = load i8**, i8*** %name.addr, align 8
  %338 = load i8*, i8** %337, align 8
  %sub.ptr.lhs.cast349 = ptrtoint i8* %336 to i64
  %sub.ptr.rhs.cast350 = ptrtoint i8* %338 to i64
  %sub.ptr.sub351 = sub i64 %sub.ptr.lhs.cast349, %sub.ptr.rhs.cast350
  %339 = load i64*, i64** %len.addr, align 8
  store i64 %sub.ptr.sub351, i64* %339, align 8
  store i1 true, i1* %retval, align 1
  br label %return

return:                                           ; preds = %for.end, %if.end345, %if.then137, %if.then84
  %340 = load i1, i1* %retval, align 1
  ret i1 %340
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i1 @S_find_default_stash(%struct.hv** %stash, i8* %name, i64 %len, i32 %is_utf8, i32 %add, i32 %sv_type) #0 {
entry:
  %retval = alloca i1, align 1
  %stash.addr = alloca %struct.hv**, align 8
  %name.addr = alloca i8*, align 8
  %len.addr = alloca i64, align 8
  %is_utf8.addr = alloca i32, align 4
  %add.addr = alloca i32, align 4
  %sv_type.addr = alloca i32, align 4
  %gvp = alloca %struct.gv**, align 8
  %gv = alloca %struct.gv*, align 8
  store %struct.hv** %stash, %struct.hv*** %stash.addr, align 8
  store i8* %name, i8** %name.addr, align 8
  store i64 %len, i64* %len.addr, align 8
  store i32 %is_utf8, i32* %is_utf8.addr, align 4
  store i32 %add, i32* %add.addr, align 4
  store i32 %sv_type, i32* %sv_type.addr, align 4
  %0 = load i8*, i8** %name.addr, align 8
  %1 = load i64, i64* %len.addr, align 8
  %2 = load i32, i32* %is_utf8.addr, align 4
  %call = call zeroext i1 @S_gv_is_in_main(i8* %0, i64 %1, i32 %2)
  br i1 %call, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %3 = load %struct.hv*, %struct.hv** @PL_defstash, align 8
  %4 = load %struct.hv**, %struct.hv*** %stash.addr, align 8
  store %struct.hv* %3, %struct.hv** %4, align 8
  br label %if.end84

if.else:                                          ; preds = %entry
  %5 = load %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cmp = icmp eq %struct.cop* %5, @PL_compiling
  br i1 %cmp, label %if.then1, label %if.else82

if.then1:                                         ; preds = %if.else
  %6 = load %struct.hv*, %struct.hv** @PL_curstash, align 8
  %7 = load %struct.hv**, %struct.hv*** %stash.addr, align 8
  store %struct.hv* %6, %struct.hv** %7, align 8
  %8 = load i32, i32* %add.addr, align 4
  %tobool = icmp ne i32 %8, 0
  br i1 %tobool, label %land.lhs.true, label %if.end81

land.lhs.true:                                    ; preds = %if.then1
  %9 = load i32, i32* getelementptr inbounds (%struct.cop, %struct.cop* @PL_compiling, i32 0, i32 10), align 8
  %and = and i32 %9, 1024
  %tobool2 = icmp ne i32 %and, 0
  br i1 %tobool2, label %land.lhs.true3, label %if.end81

land.lhs.true3:                                   ; preds = %land.lhs.true
  %10 = load i32, i32* %sv_type.addr, align 4
  %cmp4 = icmp ne i32 %10, 13
  br i1 %cmp4, label %land.lhs.true5, label %if.end81

land.lhs.true5:                                   ; preds = %land.lhs.true3
  %11 = load i32, i32* %sv_type.addr, align 4
  %cmp6 = icmp ne i32 %11, 9
  br i1 %cmp6, label %land.lhs.true7, label %if.end81

land.lhs.true7:                                   ; preds = %land.lhs.true5
  %12 = load i32, i32* %sv_type.addr, align 4
  %cmp8 = icmp ne i32 %12, 14
  br i1 %cmp8, label %land.lhs.true9, label %if.end81

land.lhs.true9:                                   ; preds = %land.lhs.true7
  %13 = load i32, i32* %sv_type.addr, align 4
  %cmp10 = icmp ne i32 %13, 15
  br i1 %cmp10, label %land.lhs.true11, label %if.end81

land.lhs.true11:                                  ; preds = %land.lhs.true9
  %14 = load i64, i64* %len.addr, align 8
  %cmp12 = icmp eq i64 %14, 1
  br i1 %cmp12, label %land.lhs.true13, label %if.then21

land.lhs.true13:                                  ; preds = %land.lhs.true11
  %15 = load i32, i32* %sv_type.addr, align 4
  %cmp14 = icmp eq i32 %15, 3
  br i1 %cmp14, label %land.lhs.true15, label %if.then21

land.lhs.true15:                                  ; preds = %land.lhs.true13
  %16 = load i8*, i8** %name.addr, align 8
  %17 = load i8, i8* %16, align 1
  %conv = sext i8 %17 to i32
  %cmp16 = icmp eq i32 %conv, 97
  br i1 %cmp16, label %if.end81, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true15
  %18 = load i8*, i8** %name.addr, align 8
  %19 = load i8, i8* %18, align 1
  %conv18 = sext i8 %19 to i32
  %cmp19 = icmp eq i32 %conv18, 98
  br i1 %cmp19, label %if.end81, label %if.then21

if.then21:                                        ; preds = %lor.lhs.false, %land.lhs.true13, %land.lhs.true11
  %20 = load %struct.hv**, %struct.hv*** %stash.addr, align 8
  %21 = load %struct.hv*, %struct.hv** %20, align 8
  %22 = load i8*, i8** %name.addr, align 8
  %23 = load i32, i32* %is_utf8.addr, align 4
  %tobool22 = icmp ne i32 %23, 0
  br i1 %tobool22, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then21
  %24 = load i64, i64* %len.addr, align 8
  %conv23 = trunc i64 %24 to i32
  %sub = sub nsw i32 0, %conv23
  br label %cond.end

cond.false:                                       ; preds = %if.then21
  %25 = load i64, i64* %len.addr, align 8
  %conv24 = trunc i64 %25 to i32
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub, %cond.true ], [ %conv24, %cond.false ]
  %call25 = call i8* @Perl_hv_common_key_len(%struct.hv* %21, i8* %22, i32 %cond, i32 32, %struct.sv* null, i32 0)
  %26 = bitcast i8* %call25 to %struct.sv**
  %27 = bitcast %struct.sv** %26 to %struct.gv**
  store %struct.gv** %27, %struct.gv*** %gvp, align 8
  %28 = load %struct.gv**, %struct.gv*** %gvp, align 8
  %tobool26 = icmp ne %struct.gv** %28, null
  br i1 %tobool26, label %lor.lhs.false27, label %if.then34

lor.lhs.false27:                                  ; preds = %cond.end
  %29 = load %struct.gv**, %struct.gv*** %gvp, align 8
  %30 = load %struct.gv*, %struct.gv** %29, align 8
  %cmp28 = icmp eq %struct.gv* %30, bitcast (%struct.sv* @PL_sv_undef to %struct.gv*)
  br i1 %cmp28, label %if.then34, label %lor.lhs.false30

lor.lhs.false30:                                  ; preds = %lor.lhs.false27
  %31 = load %struct.gv**, %struct.gv*** %gvp, align 8
  %32 = load %struct.gv*, %struct.gv** %31, align 8
  %sv_flags = getelementptr inbounds %struct.gv, %struct.gv* %32, i32 0, i32 2
  %33 = load i32, i32* %sv_flags, align 4
  %and31 = and i32 %33, 255
  %cmp32 = icmp ne i32 %and31, 9
  br i1 %cmp32, label %if.then34, label %if.else35

if.then34:                                        ; preds = %lor.lhs.false30, %lor.lhs.false27, %cond.end
  %34 = load %struct.hv**, %struct.hv*** %stash.addr, align 8
  store %struct.hv* null, %struct.hv** %34, align 8
  br label %if.end80

if.else35:                                        ; preds = %lor.lhs.false30
  %35 = load i32, i32* %sv_type.addr, align 4
  %cmp36 = icmp eq i32 %35, 3
  br i1 %cmp36, label %land.lhs.true38, label %lor.lhs.false41

land.lhs.true38:                                  ; preds = %if.else35
  %36 = load %struct.gv**, %struct.gv*** %gvp, align 8
  %37 = load %struct.gv*, %struct.gv** %36, align 8
  %sv_any = getelementptr inbounds %struct.gv, %struct.gv* %37, i32 0, i32 0
  %38 = load %struct.xpvgv*, %struct.xpvgv** %sv_any, align 8
  %xpv_cur = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %38, i32 0, i32 2
  %39 = load i64, i64* %xpv_cur, align 8
  %and39 = and i64 %39, 16
  %tobool40 = icmp ne i64 %and39, 0
  br i1 %tobool40, label %lor.lhs.false41, label %if.then57

lor.lhs.false41:                                  ; preds = %land.lhs.true38, %if.else35
  %40 = load i32, i32* %sv_type.addr, align 4
  %cmp42 = icmp eq i32 %40, 11
  br i1 %cmp42, label %land.lhs.true44, label %lor.lhs.false49

land.lhs.true44:                                  ; preds = %lor.lhs.false41
  %41 = load %struct.gv**, %struct.gv*** %gvp, align 8
  %42 = load %struct.gv*, %struct.gv** %41, align 8
  %sv_any45 = getelementptr inbounds %struct.gv, %struct.gv* %42, i32 0, i32 0
  %43 = load %struct.xpvgv*, %struct.xpvgv** %sv_any45, align 8
  %xpv_cur46 = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %43, i32 0, i32 2
  %44 = load i64, i64* %xpv_cur46, align 8
  %and47 = and i64 %44, 32
  %tobool48 = icmp ne i64 %and47, 0
  br i1 %tobool48, label %lor.lhs.false49, label %if.then57

lor.lhs.false49:                                  ; preds = %land.lhs.true44, %lor.lhs.false41
  %45 = load i32, i32* %sv_type.addr, align 4
  %cmp50 = icmp eq i32 %45, 12
  br i1 %cmp50, label %land.lhs.true52, label %if.end79

land.lhs.true52:                                  ; preds = %lor.lhs.false49
  %46 = load %struct.gv**, %struct.gv*** %gvp, align 8
  %47 = load %struct.gv*, %struct.gv** %46, align 8
  %sv_any53 = getelementptr inbounds %struct.gv, %struct.gv* %47, i32 0, i32 0
  %48 = load %struct.xpvgv*, %struct.xpvgv** %sv_any53, align 8
  %xpv_cur54 = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %48, i32 0, i32 2
  %49 = load i64, i64* %xpv_cur54, align 8
  %and55 = and i64 %49, 64
  %tobool56 = icmp ne i64 %and55, 0
  br i1 %tobool56, label %if.end79, label %if.then57

if.then57:                                        ; preds = %land.lhs.true52, %land.lhs.true44, %land.lhs.true38
  %50 = load i32, i32* %sv_type.addr, align 4
  %cmp58 = icmp eq i32 %50, 11
  br i1 %cmp58, label %cond.true60, label %cond.false61

cond.true60:                                      ; preds = %if.then57
  br label %cond.end65

cond.false61:                                     ; preds = %if.then57
  %51 = load i32, i32* %sv_type.addr, align 4
  %cmp62 = icmp eq i32 %51, 12
  %52 = zext i1 %cmp62 to i64
  %cond64 = select i1 %cmp62, i32 37, i32 36
  br label %cond.end65

cond.end65:                                       ; preds = %cond.false61, %cond.true60
  %cond66 = phi i32 [ 64, %cond.true60 ], [ %cond64, %cond.false61 ]
  %53 = load i32, i32* %is_utf8.addr, align 4
  %tobool67 = icmp ne i32 %53, 0
  %54 = zext i1 %tobool67 to i64
  %cond68 = select i1 %tobool67, i32 1, i32 0
  %55 = load i64, i64* %len.addr, align 8
  %56 = load i8*, i8** %name.addr, align 8
  call void (i32, i8*, ...) @Perl_ck_warner_d(i32 12, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.52, i64 0, i64 0), i32 %cond66, i32 %cond68, i64 %55, i8* %56)
  %57 = load %struct.gv**, %struct.gv*** %gvp, align 8
  %58 = load %struct.gv*, %struct.gv** %57, align 8
  %sv_u = getelementptr inbounds %struct.gv, %struct.gv* %58, i32 0, i32 3
  %svu_gp = bitcast %union.anon.6* %sv_u to %struct.gp**
  %59 = load %struct.gp*, %struct.gp** %svu_gp, align 8
  %add.ptr = getelementptr inbounds %struct.gp, %struct.gp* %59, i64 0
  %gp_cvgen = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr, i32 0, i32 3
  %60 = load i32, i32* %gp_cvgen, align 8
  %tobool69 = icmp ne i32 %60, 0
  br i1 %tobool69, label %cond.true70, label %cond.false71

cond.true70:                                      ; preds = %cond.end65
  br i1 false, label %if.then76, label %if.end

cond.false71:                                     ; preds = %cond.end65
  %61 = load %struct.gv**, %struct.gv*** %gvp, align 8
  %62 = load %struct.gv*, %struct.gv** %61, align 8
  %sv_u72 = getelementptr inbounds %struct.gv, %struct.gv* %62, i32 0, i32 3
  %svu_gp73 = bitcast %union.anon.6* %sv_u72 to %struct.gp**
  %63 = load %struct.gp*, %struct.gp** %svu_gp73, align 8
  %add.ptr74 = getelementptr inbounds %struct.gp, %struct.gp* %63, i64 0
  %gp_cv = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr74, i32 0, i32 2
  %64 = load %struct.cv*, %struct.cv** %gp_cv, align 8
  %tobool75 = icmp ne %struct.cv* %64, null
  br i1 %tobool75, label %if.then76, label %if.end

if.then76:                                        ; preds = %cond.false71, %cond.true70
  %65 = load i32, i32* %is_utf8.addr, align 4
  %tobool77 = icmp ne i32 %65, 0
  %66 = zext i1 %tobool77 to i64
  %cond78 = select i1 %tobool77, i32 1, i32 0
  %67 = load i64, i64* %len.addr, align 8
  %68 = load i8*, i8** %name.addr, align 8
  call void (i32, i8*, ...) @Perl_ck_warner_d(i32 12, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.53, i64 0, i64 0), i32 %cond78, i64 %67, i8* %68)
  br label %if.end

if.end:                                           ; preds = %if.then76, %cond.false71, %cond.true70
  %69 = load %struct.hv**, %struct.hv*** %stash.addr, align 8
  store %struct.hv* null, %struct.hv** %69, align 8
  br label %if.end79

if.end79:                                         ; preds = %if.end, %land.lhs.true52, %lor.lhs.false49
  br label %if.end80

if.end80:                                         ; preds = %if.end79, %if.then34
  br label %if.end81

if.end81:                                         ; preds = %if.end80, %lor.lhs.false, %land.lhs.true15, %land.lhs.true9, %land.lhs.true7, %land.lhs.true5, %land.lhs.true3, %land.lhs.true, %if.then1
  br label %if.end83

if.else82:                                        ; preds = %if.else
  %70 = load %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_stash = getelementptr inbounds %struct.cop, %struct.cop* %70, i32 0, i32 8
  %71 = load %struct.hv*, %struct.hv** %cop_stash, align 8
  %72 = load %struct.hv**, %struct.hv*** %stash.addr, align 8
  store %struct.hv* %71, %struct.hv** %72, align 8
  br label %if.end83

if.end83:                                         ; preds = %if.else82, %if.end81
  br label %if.end84

if.end84:                                         ; preds = %if.end83, %if.then
  %73 = load %struct.hv**, %struct.hv*** %stash.addr, align 8
  %74 = load %struct.hv*, %struct.hv** %73, align 8
  %tobool85 = icmp ne %struct.hv* %74, null
  br i1 %tobool85, label %if.end135, label %if.then86

if.then86:                                        ; preds = %if.end84
  %75 = load i32, i32* %add.addr, align 4
  %tobool87 = icmp ne i32 %75, 0
  br i1 %tobool87, label %land.lhs.true88, label %if.else133

land.lhs.true88:                                  ; preds = %if.then86
  %76 = load i8, i8* @PL_in_clean_all, align 1
  %tobool89 = trunc i8 %76 to i1
  br i1 %tobool89, label %if.else133, label %if.then90

if.then90:                                        ; preds = %land.lhs.true88
  %77 = load i32, i32* %sv_type.addr, align 4
  %cmp91 = icmp eq i32 %77, 3
  br i1 %cmp91, label %cond.true93, label %cond.false94

cond.true93:                                      ; preds = %if.then90
  br label %cond.end104

cond.false94:                                     ; preds = %if.then90
  %78 = load i32, i32* %sv_type.addr, align 4
  %cmp95 = icmp eq i32 %78, 11
  br i1 %cmp95, label %cond.true97, label %cond.false98

cond.true97:                                      ; preds = %cond.false94
  br label %cond.end102

cond.false98:                                     ; preds = %cond.false94
  %79 = load i32, i32* %sv_type.addr, align 4
  %cmp99 = icmp eq i32 %79, 12
  %80 = zext i1 %cmp99 to i64
  %cond101 = select i1 %cmp99, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.57, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.7, i64 0, i64 0)
  br label %cond.end102

cond.end102:                                      ; preds = %cond.false98, %cond.true97
  %cond103 = phi i8* [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.56, i64 0, i64 0), %cond.true97 ], [ %cond101, %cond.false98 ]
  br label %cond.end104

cond.end104:                                      ; preds = %cond.end102, %cond.true93
  %cond105 = phi i8* [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.55, i64 0, i64 0), %cond.true93 ], [ %cond103, %cond.end102 ]
  %81 = load i32, i32* %is_utf8.addr, align 4
  %tobool106 = icmp ne i32 %81, 0
  %82 = zext i1 %tobool106 to i64
  %cond107 = select i1 %tobool106, i32 1, i32 0
  %83 = load i64, i64* %len.addr, align 8
  %84 = load i8*, i8** %name.addr, align 8
  %85 = load i32, i32* %sv_type.addr, align 4
  %cmp108 = icmp eq i32 %85, 3
  br i1 %cmp108, label %cond.true110, label %cond.false111

cond.true110:                                     ; preds = %cond.end104
  br label %cond.end121

cond.false111:                                    ; preds = %cond.end104
  %86 = load i32, i32* %sv_type.addr, align 4
  %cmp112 = icmp eq i32 %86, 11
  br i1 %cmp112, label %cond.true114, label %cond.false115

cond.true114:                                     ; preds = %cond.false111
  br label %cond.end119

cond.false115:                                    ; preds = %cond.false111
  %87 = load i32, i32* %sv_type.addr, align 4
  %cmp116 = icmp eq i32 %87, 12
  %88 = zext i1 %cmp116 to i64
  %cond118 = select i1 %cmp116, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.57, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.7, i64 0, i64 0)
  br label %cond.end119

cond.end119:                                      ; preds = %cond.false115, %cond.true114
  %cond120 = phi i8* [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.56, i64 0, i64 0), %cond.true114 ], [ %cond118, %cond.false115 ]
  br label %cond.end121

cond.end121:                                      ; preds = %cond.end119, %cond.true110
  %cond122 = phi i8* [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.55, i64 0, i64 0), %cond.true110 ], [ %cond120, %cond.end119 ]
  %89 = load i32, i32* %is_utf8.addr, align 4
  %tobool123 = icmp ne i32 %89, 0
  %90 = zext i1 %tobool123 to i64
  %cond124 = select i1 %tobool123, i32 1, i32 0
  %91 = load i64, i64* %len.addr, align 8
  %92 = load i8*, i8** %name.addr, align 8
  %call125 = call %struct.sv* (i8*, ...) @Perl_mess(i8* getelementptr inbounds ([103 x i8], [103 x i8]* @.str.54, i64 0, i64 0), i8* %cond105, i32 %cond107, i64 %83, i8* %84, i8* %cond122, i32 %cond124, i64 %91, i8* %92)
  call void @Perl_qerror(%struct.sv* %call125)
  %call126 = call %struct.gv* @Perl_gv_fetchpvn_flags(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.58, i64 0, i64 0), i64 8, i32 2, i32 12)
  store %struct.gv* %call126, %struct.gv** %gv, align 8
  %93 = load %struct.gv*, %struct.gv** %gv, align 8
  %tobool127 = icmp ne %struct.gv* %93, null
  br i1 %tobool127, label %if.end129, label %if.then128

if.then128:                                       ; preds = %cond.end121
  store i1 false, i1* %retval, align 1
  br label %return

if.end129:                                        ; preds = %cond.end121
  %94 = load %struct.gv*, %struct.gv** %gv, align 8
  %sv_u130 = getelementptr inbounds %struct.gv, %struct.gv* %94, i32 0, i32 3
  %svu_gp131 = bitcast %union.anon.6* %sv_u130 to %struct.gp**
  %95 = load %struct.gp*, %struct.gp** %svu_gp131, align 8
  %add.ptr132 = getelementptr inbounds %struct.gp, %struct.gp* %95, i64 0
  %gp_hv = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr132, i32 0, i32 5
  %96 = load %struct.hv*, %struct.hv** %gp_hv, align 8
  %97 = load %struct.hv**, %struct.hv*** %stash.addr, align 8
  store %struct.hv* %96, %struct.hv** %97, align 8
  br label %if.end134

if.else133:                                       ; preds = %land.lhs.true88, %if.then86
  store i1 false, i1* %retval, align 1
  br label %return

if.end134:                                        ; preds = %if.end129
  br label %if.end135

if.end135:                                        ; preds = %if.end134, %if.end84
  %98 = load %struct.hv**, %struct.hv*** %stash.addr, align 8
  %99 = load %struct.hv*, %struct.hv** %98, align 8
  %sv_refcnt = getelementptr inbounds %struct.hv, %struct.hv* %99, i32 0, i32 1
  %100 = load i32, i32* %sv_refcnt, align 8
  %tobool136 = icmp ne i32 %100, 0
  br i1 %tobool136, label %if.end138, label %if.then137

if.then137:                                       ; preds = %if.end135
  store i1 false, i1* %retval, align 1
  br label %return

if.end138:                                        ; preds = %if.end135
  store i1 true, i1* %retval, align 1
  br label %return

return:                                           ; preds = %if.end138, %if.then137, %if.else133, %if.then128
  %101 = load i1, i1* %retval, align 1
  ret i1 %101
}

; Function Attrs: noinline nounwind uwtable
define internal void @S_gv_init_svtype(%struct.gv* %gv, i32 %sv_type) #0 {
entry:
  %gv.addr = alloca %struct.gv*, align 8
  %sv_type.addr = alloca i32, align 4
  store %struct.gv* %gv, %struct.gv** %gv.addr, align 8
  store i32 %sv_type, i32* %sv_type.addr, align 4
  %0 = load i32, i32* %sv_type.addr, align 4
  switch i32 %0, label %sw.default [
    i32 15, label %sw.bb
    i32 11, label %sw.bb20
    i32 12, label %sw.bb38
    i32 0, label %sw.bb56
    i32 13, label %sw.bb56
    i32 14, label %sw.bb56
    i32 9, label %sw.bb56
  ]

sw.bb:                                            ; preds = %entry
  %1 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %tobool = icmp ne %struct.gv* %1, null
  br i1 %tobool, label %land.lhs.true, label %cond.false

land.lhs.true:                                    ; preds = %sw.bb
  %2 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %3 = bitcast %struct.gv* %2 to %struct.sv*
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %3, i32 0, i32 2
  %4 = load i32, i32* %sv_flags, align 4
  %and = and i32 %4, 255
  %cmp = icmp eq i32 %and, 9
  br i1 %cmp, label %land.lhs.true4, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true
  %5 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %6 = bitcast %struct.gv* %5 to %struct.sv*
  %sv_flags1 = getelementptr inbounds %struct.sv, %struct.sv* %6, i32 0, i32 2
  %7 = load i32, i32* %sv_flags1, align 4
  %and2 = and i32 %7, 255
  %cmp3 = icmp eq i32 %and2, 10
  br i1 %cmp3, label %land.lhs.true4, label %cond.false

land.lhs.true4:                                   ; preds = %lor.lhs.false, %land.lhs.true
  %8 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_u = getelementptr inbounds %struct.gv, %struct.gv* %8, i32 0, i32 3
  %svu_gp = bitcast %union.anon.6* %sv_u to %struct.gp**
  %9 = load %struct.gp*, %struct.gp** %svu_gp, align 8
  %add.ptr = getelementptr inbounds %struct.gp, %struct.gp* %9, i64 0
  %tobool5 = icmp ne %struct.gp* %add.ptr, null
  br i1 %tobool5, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true4
  %10 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_u6 = getelementptr inbounds %struct.gv, %struct.gv* %10, i32 0, i32 3
  %svu_gp7 = bitcast %union.anon.6* %sv_u6 to %struct.gp**
  %11 = load %struct.gp*, %struct.gp** %svu_gp7, align 8
  %add.ptr8 = getelementptr inbounds %struct.gp, %struct.gp* %11, i64 0
  %gp_io = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr8, i32 0, i32 1
  %12 = load %struct.io*, %struct.io** %gp_io, align 8
  %tobool9 = icmp ne %struct.io* %12, null
  br i1 %tobool9, label %cond.true10, label %cond.false15

cond.false:                                       ; preds = %land.lhs.true4, %lor.lhs.false, %sw.bb
  br i1 false, label %cond.true10, label %cond.false15

cond.true10:                                      ; preds = %cond.false, %cond.true
  %13 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_u11 = getelementptr inbounds %struct.gv, %struct.gv* %13, i32 0, i32 3
  %svu_gp12 = bitcast %union.anon.6* %sv_u11 to %struct.gp**
  %14 = load %struct.gp*, %struct.gp** %svu_gp12, align 8
  %add.ptr13 = getelementptr inbounds %struct.gp, %struct.gp* %14, i64 0
  %gp_io14 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr13, i32 0, i32 1
  %15 = load %struct.io*, %struct.io** %gp_io14, align 8
  br label %cond.end

cond.false15:                                     ; preds = %cond.false, %cond.true
  %16 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %call = call %struct.gv* @Perl_gv_add_by_type(%struct.gv* %16, i32 15)
  %sv_u16 = getelementptr inbounds %struct.gv, %struct.gv* %call, i32 0, i32 3
  %svu_gp17 = bitcast %union.anon.6* %sv_u16 to %struct.gp**
  %17 = load %struct.gp*, %struct.gp** %svu_gp17, align 8
  %add.ptr18 = getelementptr inbounds %struct.gp, %struct.gp* %17, i64 0
  %gp_io19 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr18, i32 0, i32 1
  %18 = load %struct.io*, %struct.io** %gp_io19, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false15, %cond.true10
  %cond = phi %struct.io* [ %15, %cond.true10 ], [ %18, %cond.false15 ]
  br label %sw.epilog

sw.bb20:                                          ; preds = %entry
  %19 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_u21 = getelementptr inbounds %struct.gv, %struct.gv* %19, i32 0, i32 3
  %svu_gp22 = bitcast %union.anon.6* %sv_u21 to %struct.gp**
  %20 = load %struct.gp*, %struct.gp** %svu_gp22, align 8
  %add.ptr23 = getelementptr inbounds %struct.gp, %struct.gp* %20, i64 0
  %gp_av = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr23, i32 0, i32 6
  %21 = load %struct.av*, %struct.av** %gp_av, align 8
  %tobool24 = icmp ne %struct.av* %21, null
  br i1 %tobool24, label %cond.true25, label %cond.false30

cond.true25:                                      ; preds = %sw.bb20
  %22 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_u26 = getelementptr inbounds %struct.gv, %struct.gv* %22, i32 0, i32 3
  %svu_gp27 = bitcast %union.anon.6* %sv_u26 to %struct.gp**
  %23 = load %struct.gp*, %struct.gp** %svu_gp27, align 8
  %add.ptr28 = getelementptr inbounds %struct.gp, %struct.gp* %23, i64 0
  %gp_av29 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr28, i32 0, i32 6
  %24 = load %struct.av*, %struct.av** %gp_av29, align 8
  br label %cond.end36

cond.false30:                                     ; preds = %sw.bb20
  %25 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %call31 = call %struct.gv* @Perl_gv_add_by_type(%struct.gv* %25, i32 11)
  %sv_u32 = getelementptr inbounds %struct.gv, %struct.gv* %call31, i32 0, i32 3
  %svu_gp33 = bitcast %union.anon.6* %sv_u32 to %struct.gp**
  %26 = load %struct.gp*, %struct.gp** %svu_gp33, align 8
  %add.ptr34 = getelementptr inbounds %struct.gp, %struct.gp* %26, i64 0
  %gp_av35 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr34, i32 0, i32 6
  %27 = load %struct.av*, %struct.av** %gp_av35, align 8
  br label %cond.end36

cond.end36:                                       ; preds = %cond.false30, %cond.true25
  %cond37 = phi %struct.av* [ %24, %cond.true25 ], [ %27, %cond.false30 ]
  br label %sw.epilog

sw.bb38:                                          ; preds = %entry
  %28 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_u39 = getelementptr inbounds %struct.gv, %struct.gv* %28, i32 0, i32 3
  %svu_gp40 = bitcast %union.anon.6* %sv_u39 to %struct.gp**
  %29 = load %struct.gp*, %struct.gp** %svu_gp40, align 8
  %add.ptr41 = getelementptr inbounds %struct.gp, %struct.gp* %29, i64 0
  %gp_hv = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr41, i32 0, i32 5
  %30 = load %struct.hv*, %struct.hv** %gp_hv, align 8
  %tobool42 = icmp ne %struct.hv* %30, null
  br i1 %tobool42, label %cond.true43, label %cond.false48

cond.true43:                                      ; preds = %sw.bb38
  %31 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_u44 = getelementptr inbounds %struct.gv, %struct.gv* %31, i32 0, i32 3
  %svu_gp45 = bitcast %union.anon.6* %sv_u44 to %struct.gp**
  %32 = load %struct.gp*, %struct.gp** %svu_gp45, align 8
  %add.ptr46 = getelementptr inbounds %struct.gp, %struct.gp* %32, i64 0
  %gp_hv47 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr46, i32 0, i32 5
  %33 = load %struct.hv*, %struct.hv** %gp_hv47, align 8
  br label %cond.end54

cond.false48:                                     ; preds = %sw.bb38
  %34 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %call49 = call %struct.gv* @Perl_gv_add_by_type(%struct.gv* %34, i32 12)
  %sv_u50 = getelementptr inbounds %struct.gv, %struct.gv* %call49, i32 0, i32 3
  %svu_gp51 = bitcast %union.anon.6* %sv_u50 to %struct.gp**
  %35 = load %struct.gp*, %struct.gp** %svu_gp51, align 8
  %add.ptr52 = getelementptr inbounds %struct.gp, %struct.gp* %35, i64 0
  %gp_hv53 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr52, i32 0, i32 5
  %36 = load %struct.hv*, %struct.hv** %gp_hv53, align 8
  br label %cond.end54

cond.end54:                                       ; preds = %cond.false48, %cond.true43
  %cond55 = phi %struct.hv* [ %33, %cond.true43 ], [ %36, %cond.false48 ]
  br label %sw.epilog

sw.bb56:                                          ; preds = %entry, %entry, %entry, %entry
  br label %sw.epilog

sw.default:                                       ; preds = %entry
  %37 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_u57 = getelementptr inbounds %struct.gv, %struct.gv* %37, i32 0, i32 3
  %svu_gp58 = bitcast %union.anon.6* %sv_u57 to %struct.gp**
  %38 = load %struct.gp*, %struct.gp** %svu_gp58, align 8
  %add.ptr59 = getelementptr inbounds %struct.gp, %struct.gp* %38, i64 0
  %gp_sv = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr59, i32 0, i32 0
  %39 = load %struct.sv*, %struct.sv** %gp_sv, align 8
  %tobool60 = icmp ne %struct.sv* %39, null
  br i1 %tobool60, label %cond.true61, label %cond.false66

cond.true61:                                      ; preds = %sw.default
  %40 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_u62 = getelementptr inbounds %struct.gv, %struct.gv* %40, i32 0, i32 3
  %svu_gp63 = bitcast %union.anon.6* %sv_u62 to %struct.gp**
  %41 = load %struct.gp*, %struct.gp** %svu_gp63, align 8
  %add.ptr64 = getelementptr inbounds %struct.gp, %struct.gp* %41, i64 0
  %gp_sv65 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr64, i32 0, i32 0
  br label %cond.end72

cond.false66:                                     ; preds = %sw.default
  %42 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %call67 = call %struct.gv* @Perl_gv_add_by_type(%struct.gv* %42, i32 0)
  %sv_u68 = getelementptr inbounds %struct.gv, %struct.gv* %call67, i32 0, i32 3
  %svu_gp69 = bitcast %union.anon.6* %sv_u68 to %struct.gp**
  %43 = load %struct.gp*, %struct.gp** %svu_gp69, align 8
  %add.ptr70 = getelementptr inbounds %struct.gp, %struct.gp* %43, i64 0
  %gp_sv71 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr70, i32 0, i32 0
  br label %cond.end72

cond.end72:                                       ; preds = %cond.false66, %cond.true61
  %cond73 = phi %struct.sv** [ %gp_sv65, %cond.true61 ], [ %gp_sv71, %cond.false66 ]
  %44 = load %struct.sv*, %struct.sv** %cond73, align 8
  %tobool74 = icmp ne %struct.sv* %44, null
  br i1 %tobool74, label %if.then, label %if.end

if.then:                                          ; preds = %cond.end72
  br label %if.end

if.end:                                           ; preds = %if.then, %cond.end72
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.end, %sw.bb56, %cond.end54, %cond.end36, %cond.end
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @S_maybe_multimagic_gv(%struct.gv* %gv, i8* %name, i32 %sv_type) #0 {
entry:
  %gv.addr = alloca %struct.gv*, align 8
  %name.addr = alloca i8*, align 8
  %sv_type.addr = alloca i32, align 4
  store %struct.gv* %gv, %struct.gv** %gv.addr, align 8
  store i8* %name, i8** %name.addr, align 8
  store i32 %sv_type, i32* %sv_type.addr, align 4
  %0 = load i32, i32* %sv_type.addr, align 4
  %cmp = icmp eq i32 %0, 12
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %sv_type.addr, align 4
  %cmp1 = icmp eq i32 %1, 9
  br i1 %cmp1, label %if.then, label %if.else17

if.then:                                          ; preds = %lor.lhs.false, %entry
  %2 = load i8*, i8** %name.addr, align 8
  %3 = load i8, i8* %2, align 1
  %conv = sext i8 %3 to i32
  %cmp2 = icmp eq i32 %conv, 33
  br i1 %cmp2, label %if.then4, label %if.else

if.then4:                                         ; preds = %if.then
  %4 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %call = call %struct.sv* @Perl_newSVpvn(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.60, i64 0, i64 0), i64 5)
  %call5 = call %struct.hv* @S_require_tie_mod(%struct.gv* %4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.59, i64 0, i64 0), %struct.sv* %call, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.61, i64 0, i64 0), i32 1)
  br label %if.end16

if.else:                                          ; preds = %if.then
  %5 = load i8*, i8** %name.addr, align 8
  %6 = load i8, i8* %5, align 1
  %conv6 = sext i8 %6 to i32
  %cmp7 = icmp eq i32 %conv6, 45
  br i1 %cmp7, label %if.then13, label %lor.lhs.false9

lor.lhs.false9:                                   ; preds = %if.else
  %7 = load i8*, i8** %name.addr, align 8
  %8 = load i8, i8* %7, align 1
  %conv10 = sext i8 %8 to i32
  %cmp11 = icmp eq i32 %conv10, 43
  br i1 %cmp11, label %if.then13, label %if.end

if.then13:                                        ; preds = %lor.lhs.false9, %if.else
  %9 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %10 = load i8*, i8** %name.addr, align 8
  %call14 = call %struct.sv* @Perl_newSVpvn(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.62, i64 0, i64 0), i64 23)
  %call15 = call %struct.hv* @S_require_tie_mod(%struct.gv* %9, i8* %10, %struct.sv* %call14, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.61, i64 0, i64 0), i32 0)
  br label %if.end

if.end:                                           ; preds = %if.then13, %lor.lhs.false9
  br label %if.end16

if.end16:                                         ; preds = %if.end, %if.then4
  br label %if.end32

if.else17:                                        ; preds = %lor.lhs.false
  %11 = load i32, i32* %sv_type.addr, align 4
  %cmp18 = icmp eq i32 %11, 3
  br i1 %cmp18, label %if.then20, label %if.end31

if.then20:                                        ; preds = %if.else17
  %12 = load i8*, i8** %name.addr, align 8
  %13 = load i8, i8* %12, align 1
  %conv21 = sext i8 %13 to i32
  %cmp22 = icmp eq i32 %conv21, 42
  br i1 %cmp22, label %if.then28, label %lor.lhs.false24

lor.lhs.false24:                                  ; preds = %if.then20
  %14 = load i8*, i8** %name.addr, align 8
  %15 = load i8, i8* %14, align 1
  %conv25 = sext i8 %15 to i32
  %cmp26 = icmp eq i32 %conv25, 35
  br i1 %cmp26, label %if.then28, label %if.end30

if.then28:                                        ; preds = %lor.lhs.false24, %if.then20
  %16 = load i8*, i8** %name.addr, align 8
  %17 = load i8, i8* %16, align 1
  %conv29 = sext i8 %17 to i32
  call void (i32, i8*, ...) @Perl_ck_warner_d(i32 7170, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.63, i64 0, i64 0), i32 %conv29)
  br label %if.end30

if.end30:                                         ; preds = %if.then28, %lor.lhs.false24
  br label %if.end31

if.end31:                                         ; preds = %if.end30, %if.else17
  br label %if.end32

if.end32:                                         ; preds = %if.end31, %if.end16
  %18 = load i32, i32* %sv_type.addr, align 4
  %cmp33 = icmp eq i32 %18, 3
  br i1 %cmp33, label %if.then38, label %lor.lhs.false35

lor.lhs.false35:                                  ; preds = %if.end32
  %19 = load i32, i32* %sv_type.addr, align 4
  %cmp36 = icmp eq i32 %19, 9
  br i1 %cmp36, label %if.then38, label %if.end42

if.then38:                                        ; preds = %lor.lhs.false35, %if.end32
  %20 = load i8*, i8** %name.addr, align 8
  %21 = load i8, i8* %20, align 1
  %conv39 = sext i8 %21 to i32
  switch i32 %conv39, label %sw.epilog [
    i32 91, label %sw.bb
  ]

sw.bb:                                            ; preds = %if.then38
  %22 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %23 = load i8*, i8** %name.addr, align 8
  %call40 = call %struct.sv* @Perl_newSVpvn(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.64, i64 0, i64 0), i64 7)
  %call41 = call %struct.hv* @S_require_tie_mod(%struct.gv* %22, i8* %23, %struct.sv* %call40, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.65, i64 0, i64 0), i32 0)
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.then38, %sw.bb
  br label %if.end42

if.end42:                                         ; preds = %sw.epilog, %lor.lhs.false35
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @S_gv_magicalize_isa(%struct.gv* %gv) #0 {
entry:
  %gv.addr = alloca %struct.gv*, align 8
  %av = alloca %struct.av*, align 8
  store %struct.gv* %gv, %struct.gv** %gv.addr, align 8
  %0 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_u = getelementptr inbounds %struct.gv, %struct.gv* %0, i32 0, i32 3
  %svu_gp = bitcast %union.anon.6* %sv_u to %struct.gp**
  %1 = load %struct.gp*, %struct.gp** %svu_gp, align 8
  %add.ptr = getelementptr inbounds %struct.gp, %struct.gp* %1, i64 0
  %gp_av = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr, i32 0, i32 6
  %2 = load %struct.av*, %struct.av** %gp_av, align 8
  %tobool = icmp ne %struct.av* %2, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %3 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_u1 = getelementptr inbounds %struct.gv, %struct.gv* %3, i32 0, i32 3
  %svu_gp2 = bitcast %union.anon.6* %sv_u1 to %struct.gp**
  %4 = load %struct.gp*, %struct.gp** %svu_gp2, align 8
  %add.ptr3 = getelementptr inbounds %struct.gp, %struct.gp* %4, i64 0
  %gp_av4 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr3, i32 0, i32 6
  %5 = load %struct.av*, %struct.av** %gp_av4, align 8
  br label %cond.end

cond.false:                                       ; preds = %entry
  %6 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %call = call %struct.gv* @Perl_gv_add_by_type(%struct.gv* %6, i32 11)
  %sv_u5 = getelementptr inbounds %struct.gv, %struct.gv* %call, i32 0, i32 3
  %svu_gp6 = bitcast %union.anon.6* %sv_u5 to %struct.gp**
  %7 = load %struct.gp*, %struct.gp** %svu_gp6, align 8
  %add.ptr7 = getelementptr inbounds %struct.gp, %struct.gp* %7, i64 0
  %gp_av8 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr7, i32 0, i32 6
  %8 = load %struct.av*, %struct.av** %gp_av8, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.av* [ %5, %cond.true ], [ %8, %cond.false ]
  store %struct.av* %cond, %struct.av** %av, align 8
  %9 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_any = getelementptr inbounds %struct.gv, %struct.gv* %9, i32 0, i32 0
  %10 = load %struct.xpvgv*, %struct.xpvgv** %sv_any, align 8
  %xpv_cur = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %10, i32 0, i32 2
  %11 = load i64, i64* %xpv_cur, align 8
  %or = or i64 %11, 2
  store i64 %or, i64* %xpv_cur, align 8
  %12 = load %struct.av*, %struct.av** %av, align 8
  %13 = bitcast %struct.av* %12 to i8*
  %14 = bitcast i8* %13 to %struct.sv*
  %15 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %16 = bitcast %struct.gv* %15 to i8*
  %17 = bitcast i8* %16 to %struct.sv*
  call void @Perl_sv_magic(%struct.sv* %14, %struct.sv* %17, i32 73, i8* null, i32 0)
  ret void
}

declare dso_local zeroext i1 @Perl__is_utf8_perl_idstart(i8*) #1

declare dso_local zeroext i1 @Perl_ckwarn(i32) #1

; Function Attrs: noinline nounwind uwtable
define internal zeroext i1 @S_gv_magicalize(%struct.gv* %gv, %struct.hv* %stash, i8* %name, i64 %len, i1 zeroext %addmg, i32 %sv_type) #0 {
entry:
  %retval = alloca i1, align 1
  %gv.addr = alloca %struct.gv*, align 8
  %stash.addr = alloca %struct.hv*, align 8
  %name.addr = alloca i8*, align 8
  %len.addr = alloca i64, align 8
  %addmg.addr = alloca i8, align 1
  %sv_type.addr = alloca i32, align 4
  %paren = alloca i64, align 8
  %name2 = alloca i8*, align 8
  %stashname = alloca i8*, align 8
  %name2182 = alloca i8*, align 8
  %hv = alloca %struct.hv*, align 8
  %i = alloca i32, align 4
  %init = alloca %struct.sv**, align 8
  %uv = alloca i64, align 8
  %av = alloca %struct.av*, align 8
  %avc = alloca %struct.sv*, align 8
  %hv544 = alloca %struct.hv*, align 8
  %sv = alloca %struct.sv*, align 8
  %sv710 = alloca %struct.sv*, align 8
  store %struct.gv* %gv, %struct.gv** %gv.addr, align 8
  store %struct.hv* %stash, %struct.hv** %stash.addr, align 8
  store i8* %name, i8** %name.addr, align 8
  store i64 %len, i64* %len.addr, align 8
  %frombool = zext i1 %addmg to i8
  store i8 %frombool, i8* %addmg.addr, align 1
  store i32 %sv_type, i32* %sv_type.addr, align 4
  %0 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %1 = load %struct.hv*, %struct.hv** @PL_defstash, align 8
  %cmp = icmp ne %struct.hv* %0, %1
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %2 = load i64, i64* %len.addr, align 8
  %tobool = icmp ne i64 %2, 0
  br i1 %tobool, label %if.then1, label %if.end28

if.then1:                                         ; preds = %if.then
  %3 = load i8*, i8** %name.addr, align 8
  %add.ptr = getelementptr inbounds i8, i8* %3, i64 1
  store i8* %add.ptr, i8** %name2, align 8
  %4 = load i8*, i8** %name.addr, align 8
  %5 = load i8, i8* %4, align 1
  %conv = sext i8 %5 to i32
  switch i32 %conv, label %sw.default [
    i32 69, label %sw.bb
    i32 73, label %sw.bb4
    i32 86, label %sw.bb9
    i32 97, label %sw.bb17
    i32 98, label %sw.bb17
  ]

sw.bb:                                            ; preds = %if.then1
  %6 = load i8*, i8** %name2, align 8
  %call = call i32 @strncmp(i8* %6, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.68, i64 0, i64 0), i64 5) #4
  %tobool2 = icmp ne i32 %call, 0
  br i1 %tobool2, label %if.end, label %if.then3

if.then3:                                         ; preds = %sw.bb
  %7 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_any = getelementptr inbounds %struct.gv, %struct.gv* %7, i32 0, i32 0
  %8 = load %struct.xpvgv*, %struct.xpvgv** %sv_any, align 8
  %xpv_cur = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %8, i32 0, i32 2
  %9 = load i64, i64* %xpv_cur, align 8
  %or = or i64 %9, 2
  store i64 %or, i64* %xpv_cur, align 8
  br label %if.end

if.end:                                           ; preds = %if.then3, %sw.bb
  br label %sw.epilog

sw.bb4:                                           ; preds = %if.then1
  %10 = load i8*, i8** %name2, align 8
  %call5 = call i32 @strcmp(i8* %10, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.69, i64 0, i64 0)) #4
  %tobool6 = icmp ne i32 %call5, 0
  br i1 %tobool6, label %if.end8, label %if.then7

if.then7:                                         ; preds = %sw.bb4
  %11 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  call void @S_gv_magicalize_isa(%struct.gv* %11)
  br label %if.end8

if.end8:                                          ; preds = %if.then7, %sw.bb4
  br label %sw.epilog

sw.bb9:                                           ; preds = %if.then1
  %12 = load i8*, i8** %name2, align 8
  %call10 = call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.70, i64 0, i64 0)) #4
  %tobool11 = icmp ne i32 %call10, 0
  br i1 %tobool11, label %if.end16, label %if.then12

if.then12:                                        ; preds = %sw.bb9
  %13 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_any13 = getelementptr inbounds %struct.gv, %struct.gv* %13, i32 0, i32 0
  %14 = load %struct.xpvgv*, %struct.xpvgv** %sv_any13, align 8
  %xpv_cur14 = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %14, i32 0, i32 2
  %15 = load i64, i64* %xpv_cur14, align 8
  %or15 = or i64 %15, 2
  store i64 %or15, i64* %xpv_cur14, align 8
  br label %if.end16

if.end16:                                         ; preds = %if.then12, %sw.bb9
  br label %sw.epilog

sw.bb17:                                          ; preds = %if.then1, %if.then1
  %16 = load i64, i64* %len.addr, align 8
  %cmp18 = icmp eq i64 %16, 1
  br i1 %cmp18, label %land.lhs.true, label %if.end26

land.lhs.true:                                    ; preds = %sw.bb17
  %17 = load i32, i32* %sv_type.addr, align 4
  %cmp20 = icmp eq i32 %17, 3
  br i1 %cmp20, label %if.then22, label %if.end26

if.then22:                                        ; preds = %land.lhs.true
  %18 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_any23 = getelementptr inbounds %struct.gv, %struct.gv* %18, i32 0, i32 0
  %19 = load %struct.xpvgv*, %struct.xpvgv** %sv_any23, align 8
  %xpv_cur24 = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %19, i32 0, i32 2
  %20 = load i64, i64* %xpv_cur24, align 8
  %or25 = or i64 %20, 2
  store i64 %or25, i64* %xpv_cur24, align 8
  br label %if.end26

if.end26:                                         ; preds = %if.then22, %land.lhs.true, %sw.bb17
  br label %sw.default

sw.default:                                       ; preds = %if.then1, %if.end26
  br label %try_core

sw.epilog:                                        ; preds = %if.end16, %if.end8, %if.end
  %21 = load i8, i8* %addmg.addr, align 1
  %tobool27 = trunc i8 %21 to i1
  store i1 %tobool27, i1* %retval, align 1
  br label %return

if.end28:                                         ; preds = %if.then
  br label %try_core

try_core:                                         ; preds = %if.end28, %sw.default
  %22 = load i64, i64* %len.addr, align 8
  %cmp29 = icmp ugt i64 %22, 1
  br i1 %cmp29, label %land.lhs.true31, label %if.end173

land.lhs.true31:                                  ; preds = %try_core
  %23 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_flags = getelementptr inbounds %struct.hv, %struct.hv* %23, i32 0, i32 2
  %24 = load i32, i32* %sv_flags, align 4
  %and = and i32 %24, 33554432
  %tobool32 = icmp ne i32 %and, 0
  br i1 %tobool32, label %land.lhs.true33, label %cond.false88

land.lhs.true33:                                  ; preds = %land.lhs.true31
  %25 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_u = getelementptr inbounds %struct.hv, %struct.hv* %25, i32 0, i32 3
  %svu_hash = bitcast %union.anon.4* %sv_u to %struct.he***
  %26 = load %struct.he**, %struct.he*** %svu_hash, align 8
  %27 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_any34 = getelementptr inbounds %struct.hv, %struct.hv* %27, i32 0, i32 0
  %28 = load %struct.xpvhv*, %struct.xpvhv** %sv_any34, align 8
  %xhv_max = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %28, i32 0, i32 3
  %29 = load i64, i64* %xhv_max, align 8
  %add = add i64 %29, 1
  %arrayidx = getelementptr inbounds %struct.he*, %struct.he** %26, i64 %add
  %30 = bitcast %struct.he** %arrayidx to %struct.xpvhv_aux*
  %xhv_name_u = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %30, i32 0, i32 0
  %xhvnameu_name = bitcast %union._xhvnameu* %xhv_name_u to %struct.hek**
  %31 = load %struct.hek*, %struct.hek** %xhvnameu_name, align 8
  %tobool35 = icmp ne %struct.hek* %31, null
  br i1 %tobool35, label %land.lhs.true36, label %cond.false88

land.lhs.true36:                                  ; preds = %land.lhs.true33
  %32 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_u37 = getelementptr inbounds %struct.hv, %struct.hv* %32, i32 0, i32 3
  %svu_hash38 = bitcast %union.anon.4* %sv_u37 to %struct.he***
  %33 = load %struct.he**, %struct.he*** %svu_hash38, align 8
  %34 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_any39 = getelementptr inbounds %struct.hv, %struct.hv* %34, i32 0, i32 0
  %35 = load %struct.xpvhv*, %struct.xpvhv** %sv_any39, align 8
  %xhv_max40 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %35, i32 0, i32 3
  %36 = load i64, i64* %xhv_max40, align 8
  %add41 = add i64 %36, 1
  %arrayidx42 = getelementptr inbounds %struct.he*, %struct.he** %33, i64 %add41
  %37 = bitcast %struct.he** %arrayidx42 to %struct.xpvhv_aux*
  %xhv_name_count = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %37, i32 0, i32 4
  %38 = load i32, i32* %xhv_name_count, align 4
  %tobool43 = icmp ne i32 %38, 0
  br i1 %tobool43, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true36
  %39 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_u44 = getelementptr inbounds %struct.hv, %struct.hv* %39, i32 0, i32 3
  %svu_hash45 = bitcast %union.anon.4* %sv_u44 to %struct.he***
  %40 = load %struct.he**, %struct.he*** %svu_hash45, align 8
  %41 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_any46 = getelementptr inbounds %struct.hv, %struct.hv* %41, i32 0, i32 0
  %42 = load %struct.xpvhv*, %struct.xpvhv** %sv_any46, align 8
  %xhv_max47 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %42, i32 0, i32 3
  %43 = load i64, i64* %xhv_max47, align 8
  %add48 = add i64 %43, 1
  %arrayidx49 = getelementptr inbounds %struct.he*, %struct.he** %40, i64 %add48
  %44 = bitcast %struct.he** %arrayidx49 to %struct.xpvhv_aux*
  %xhv_name_u50 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %44, i32 0, i32 0
  %xhvnameu_names = bitcast %union._xhvnameu* %xhv_name_u50 to %struct.hek***
  %45 = load %struct.hek**, %struct.hek*** %xhvnameu_names, align 8
  %46 = load %struct.hek*, %struct.hek** %45, align 8
  %tobool51 = icmp ne %struct.hek* %46, null
  br i1 %tobool51, label %cond.true61, label %cond.false88

cond.false:                                       ; preds = %land.lhs.true36
  %47 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_u52 = getelementptr inbounds %struct.hv, %struct.hv* %47, i32 0, i32 3
  %svu_hash53 = bitcast %union.anon.4* %sv_u52 to %struct.he***
  %48 = load %struct.he**, %struct.he*** %svu_hash53, align 8
  %49 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_any54 = getelementptr inbounds %struct.hv, %struct.hv* %49, i32 0, i32 0
  %50 = load %struct.xpvhv*, %struct.xpvhv** %sv_any54, align 8
  %xhv_max55 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %50, i32 0, i32 3
  %51 = load i64, i64* %xhv_max55, align 8
  %add56 = add i64 %51, 1
  %arrayidx57 = getelementptr inbounds %struct.he*, %struct.he** %48, i64 %add56
  %52 = bitcast %struct.he** %arrayidx57 to %struct.xpvhv_aux*
  %xhv_name_u58 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %52, i32 0, i32 0
  %xhvnameu_name59 = bitcast %union._xhvnameu* %xhv_name_u58 to %struct.hek**
  %53 = load %struct.hek*, %struct.hek** %xhvnameu_name59, align 8
  %tobool60 = icmp ne %struct.hek* %53, null
  br i1 %tobool60, label %cond.true61, label %cond.false88

cond.true61:                                      ; preds = %cond.false, %cond.true
  %54 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_u62 = getelementptr inbounds %struct.hv, %struct.hv* %54, i32 0, i32 3
  %svu_hash63 = bitcast %union.anon.4* %sv_u62 to %struct.he***
  %55 = load %struct.he**, %struct.he*** %svu_hash63, align 8
  %56 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_any64 = getelementptr inbounds %struct.hv, %struct.hv* %56, i32 0, i32 0
  %57 = load %struct.xpvhv*, %struct.xpvhv** %sv_any64, align 8
  %xhv_max65 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %57, i32 0, i32 3
  %58 = load i64, i64* %xhv_max65, align 8
  %add66 = add i64 %58, 1
  %arrayidx67 = getelementptr inbounds %struct.he*, %struct.he** %55, i64 %add66
  %59 = bitcast %struct.he** %arrayidx67 to %struct.xpvhv_aux*
  %xhv_name_count68 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %59, i32 0, i32 4
  %60 = load i32, i32* %xhv_name_count68, align 4
  %tobool69 = icmp ne i32 %60, 0
  br i1 %tobool69, label %cond.true70, label %cond.false79

cond.true70:                                      ; preds = %cond.true61
  %61 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_u71 = getelementptr inbounds %struct.hv, %struct.hv* %61, i32 0, i32 3
  %svu_hash72 = bitcast %union.anon.4* %sv_u71 to %struct.he***
  %62 = load %struct.he**, %struct.he*** %svu_hash72, align 8
  %63 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_any73 = getelementptr inbounds %struct.hv, %struct.hv* %63, i32 0, i32 0
  %64 = load %struct.xpvhv*, %struct.xpvhv** %sv_any73, align 8
  %xhv_max74 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %64, i32 0, i32 3
  %65 = load i64, i64* %xhv_max74, align 8
  %add75 = add i64 %65, 1
  %arrayidx76 = getelementptr inbounds %struct.he*, %struct.he** %62, i64 %add75
  %66 = bitcast %struct.he** %arrayidx76 to %struct.xpvhv_aux*
  %xhv_name_u77 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %66, i32 0, i32 0
  %xhvnameu_names78 = bitcast %union._xhvnameu* %xhv_name_u77 to %struct.hek***
  %67 = load %struct.hek**, %struct.hek*** %xhvnameu_names78, align 8
  %68 = load %struct.hek*, %struct.hek** %67, align 8
  br label %cond.end

cond.false79:                                     ; preds = %cond.true61
  %69 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_u80 = getelementptr inbounds %struct.hv, %struct.hv* %69, i32 0, i32 3
  %svu_hash81 = bitcast %union.anon.4* %sv_u80 to %struct.he***
  %70 = load %struct.he**, %struct.he*** %svu_hash81, align 8
  %71 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_any82 = getelementptr inbounds %struct.hv, %struct.hv* %71, i32 0, i32 0
  %72 = load %struct.xpvhv*, %struct.xpvhv** %sv_any82, align 8
  %xhv_max83 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %72, i32 0, i32 3
  %73 = load i64, i64* %xhv_max83, align 8
  %add84 = add i64 %73, 1
  %arrayidx85 = getelementptr inbounds %struct.he*, %struct.he** %70, i64 %add84
  %74 = bitcast %struct.he** %arrayidx85 to %struct.xpvhv_aux*
  %xhv_name_u86 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %74, i32 0, i32 0
  %xhvnameu_name87 = bitcast %union._xhvnameu* %xhv_name_u86 to %struct.hek**
  %75 = load %struct.hek*, %struct.hek** %xhvnameu_name87, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false79, %cond.true70
  %cond = phi %struct.hek* [ %68, %cond.true70 ], [ %75, %cond.false79 ]
  %hek_len = getelementptr inbounds %struct.hek, %struct.hek* %cond, i32 0, i32 1
  %76 = load i32, i32* %hek_len, align 4
  br label %cond.end89

cond.false88:                                     ; preds = %cond.false, %cond.true, %land.lhs.true33, %land.lhs.true31
  br label %cond.end89

cond.end89:                                       ; preds = %cond.false88, %cond.end
  %cond90 = phi i32 [ %76, %cond.end ], [ 0, %cond.false88 ]
  %cmp91 = icmp eq i32 %cond90, 4
  br i1 %cmp91, label %if.then93, label %if.end173

if.then93:                                        ; preds = %cond.end89
  %77 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_flags94 = getelementptr inbounds %struct.hv, %struct.hv* %77, i32 0, i32 2
  %78 = load i32, i32* %sv_flags94, align 4
  %and95 = and i32 %78, 33554432
  %tobool96 = icmp ne i32 %and95, 0
  br i1 %tobool96, label %land.lhs.true97, label %cond.false165

land.lhs.true97:                                  ; preds = %if.then93
  %79 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_u98 = getelementptr inbounds %struct.hv, %struct.hv* %79, i32 0, i32 3
  %svu_hash99 = bitcast %union.anon.4* %sv_u98 to %struct.he***
  %80 = load %struct.he**, %struct.he*** %svu_hash99, align 8
  %81 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_any100 = getelementptr inbounds %struct.hv, %struct.hv* %81, i32 0, i32 0
  %82 = load %struct.xpvhv*, %struct.xpvhv** %sv_any100, align 8
  %xhv_max101 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %82, i32 0, i32 3
  %83 = load i64, i64* %xhv_max101, align 8
  %add102 = add i64 %83, 1
  %arrayidx103 = getelementptr inbounds %struct.he*, %struct.he** %80, i64 %add102
  %84 = bitcast %struct.he** %arrayidx103 to %struct.xpvhv_aux*
  %xhv_name_u104 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %84, i32 0, i32 0
  %xhvnameu_name105 = bitcast %union._xhvnameu* %xhv_name_u104 to %struct.hek**
  %85 = load %struct.hek*, %struct.hek** %xhvnameu_name105, align 8
  %tobool106 = icmp ne %struct.hek* %85, null
  br i1 %tobool106, label %land.lhs.true107, label %cond.false165

land.lhs.true107:                                 ; preds = %land.lhs.true97
  %86 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_u108 = getelementptr inbounds %struct.hv, %struct.hv* %86, i32 0, i32 3
  %svu_hash109 = bitcast %union.anon.4* %sv_u108 to %struct.he***
  %87 = load %struct.he**, %struct.he*** %svu_hash109, align 8
  %88 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_any110 = getelementptr inbounds %struct.hv, %struct.hv* %88, i32 0, i32 0
  %89 = load %struct.xpvhv*, %struct.xpvhv** %sv_any110, align 8
  %xhv_max111 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %89, i32 0, i32 3
  %90 = load i64, i64* %xhv_max111, align 8
  %add112 = add i64 %90, 1
  %arrayidx113 = getelementptr inbounds %struct.he*, %struct.he** %87, i64 %add112
  %91 = bitcast %struct.he** %arrayidx113 to %struct.xpvhv_aux*
  %xhv_name_count114 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %91, i32 0, i32 4
  %92 = load i32, i32* %xhv_name_count114, align 4
  %tobool115 = icmp ne i32 %92, 0
  br i1 %tobool115, label %cond.true116, label %cond.false126

cond.true116:                                     ; preds = %land.lhs.true107
  %93 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_u117 = getelementptr inbounds %struct.hv, %struct.hv* %93, i32 0, i32 3
  %svu_hash118 = bitcast %union.anon.4* %sv_u117 to %struct.he***
  %94 = load %struct.he**, %struct.he*** %svu_hash118, align 8
  %95 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_any119 = getelementptr inbounds %struct.hv, %struct.hv* %95, i32 0, i32 0
  %96 = load %struct.xpvhv*, %struct.xpvhv** %sv_any119, align 8
  %xhv_max120 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %96, i32 0, i32 3
  %97 = load i64, i64* %xhv_max120, align 8
  %add121 = add i64 %97, 1
  %arrayidx122 = getelementptr inbounds %struct.he*, %struct.he** %94, i64 %add121
  %98 = bitcast %struct.he** %arrayidx122 to %struct.xpvhv_aux*
  %xhv_name_u123 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %98, i32 0, i32 0
  %xhvnameu_names124 = bitcast %union._xhvnameu* %xhv_name_u123 to %struct.hek***
  %99 = load %struct.hek**, %struct.hek*** %xhvnameu_names124, align 8
  %100 = load %struct.hek*, %struct.hek** %99, align 8
  %tobool125 = icmp ne %struct.hek* %100, null
  br i1 %tobool125, label %cond.true136, label %cond.false165

cond.false126:                                    ; preds = %land.lhs.true107
  %101 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_u127 = getelementptr inbounds %struct.hv, %struct.hv* %101, i32 0, i32 3
  %svu_hash128 = bitcast %union.anon.4* %sv_u127 to %struct.he***
  %102 = load %struct.he**, %struct.he*** %svu_hash128, align 8
  %103 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_any129 = getelementptr inbounds %struct.hv, %struct.hv* %103, i32 0, i32 0
  %104 = load %struct.xpvhv*, %struct.xpvhv** %sv_any129, align 8
  %xhv_max130 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %104, i32 0, i32 3
  %105 = load i64, i64* %xhv_max130, align 8
  %add131 = add i64 %105, 1
  %arrayidx132 = getelementptr inbounds %struct.he*, %struct.he** %102, i64 %add131
  %106 = bitcast %struct.he** %arrayidx132 to %struct.xpvhv_aux*
  %xhv_name_u133 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %106, i32 0, i32 0
  %xhvnameu_name134 = bitcast %union._xhvnameu* %xhv_name_u133 to %struct.hek**
  %107 = load %struct.hek*, %struct.hek** %xhvnameu_name134, align 8
  %tobool135 = icmp ne %struct.hek* %107, null
  br i1 %tobool135, label %cond.true136, label %cond.false165

cond.true136:                                     ; preds = %cond.false126, %cond.true116
  %108 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_u137 = getelementptr inbounds %struct.hv, %struct.hv* %108, i32 0, i32 3
  %svu_hash138 = bitcast %union.anon.4* %sv_u137 to %struct.he***
  %109 = load %struct.he**, %struct.he*** %svu_hash138, align 8
  %110 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_any139 = getelementptr inbounds %struct.hv, %struct.hv* %110, i32 0, i32 0
  %111 = load %struct.xpvhv*, %struct.xpvhv** %sv_any139, align 8
  %xhv_max140 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %111, i32 0, i32 3
  %112 = load i64, i64* %xhv_max140, align 8
  %add141 = add i64 %112, 1
  %arrayidx142 = getelementptr inbounds %struct.he*, %struct.he** %109, i64 %add141
  %113 = bitcast %struct.he** %arrayidx142 to %struct.xpvhv_aux*
  %xhv_name_count143 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %113, i32 0, i32 4
  %114 = load i32, i32* %xhv_name_count143, align 4
  %tobool144 = icmp ne i32 %114, 0
  br i1 %tobool144, label %cond.true145, label %cond.false154

cond.true145:                                     ; preds = %cond.true136
  %115 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_u146 = getelementptr inbounds %struct.hv, %struct.hv* %115, i32 0, i32 3
  %svu_hash147 = bitcast %union.anon.4* %sv_u146 to %struct.he***
  %116 = load %struct.he**, %struct.he*** %svu_hash147, align 8
  %117 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_any148 = getelementptr inbounds %struct.hv, %struct.hv* %117, i32 0, i32 0
  %118 = load %struct.xpvhv*, %struct.xpvhv** %sv_any148, align 8
  %xhv_max149 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %118, i32 0, i32 3
  %119 = load i64, i64* %xhv_max149, align 8
  %add150 = add i64 %119, 1
  %arrayidx151 = getelementptr inbounds %struct.he*, %struct.he** %116, i64 %add150
  %120 = bitcast %struct.he** %arrayidx151 to %struct.xpvhv_aux*
  %xhv_name_u152 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %120, i32 0, i32 0
  %xhvnameu_names153 = bitcast %union._xhvnameu* %xhv_name_u152 to %struct.hek***
  %121 = load %struct.hek**, %struct.hek*** %xhvnameu_names153, align 8
  %122 = load %struct.hek*, %struct.hek** %121, align 8
  br label %cond.end163

cond.false154:                                    ; preds = %cond.true136
  %123 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_u155 = getelementptr inbounds %struct.hv, %struct.hv* %123, i32 0, i32 3
  %svu_hash156 = bitcast %union.anon.4* %sv_u155 to %struct.he***
  %124 = load %struct.he**, %struct.he*** %svu_hash156, align 8
  %125 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_any157 = getelementptr inbounds %struct.hv, %struct.hv* %125, i32 0, i32 0
  %126 = load %struct.xpvhv*, %struct.xpvhv** %sv_any157, align 8
  %xhv_max158 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %126, i32 0, i32 3
  %127 = load i64, i64* %xhv_max158, align 8
  %add159 = add i64 %127, 1
  %arrayidx160 = getelementptr inbounds %struct.he*, %struct.he** %124, i64 %add159
  %128 = bitcast %struct.he** %arrayidx160 to %struct.xpvhv_aux*
  %xhv_name_u161 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %128, i32 0, i32 0
  %xhvnameu_name162 = bitcast %union._xhvnameu* %xhv_name_u161 to %struct.hek**
  %129 = load %struct.hek*, %struct.hek** %xhvnameu_name162, align 8
  br label %cond.end163

cond.end163:                                      ; preds = %cond.false154, %cond.true145
  %cond164 = phi %struct.hek* [ %122, %cond.true145 ], [ %129, %cond.false154 ]
  %hek_key = getelementptr inbounds %struct.hek, %struct.hek* %cond164, i32 0, i32 2
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %hek_key, i64 0, i64 0
  br label %cond.end166

cond.false165:                                    ; preds = %cond.false126, %cond.true116, %land.lhs.true97, %if.then93
  br label %cond.end166

cond.end166:                                      ; preds = %cond.false165, %cond.end163
  %cond167 = phi i8* [ %arraydecay, %cond.end163 ], [ null, %cond.false165 ]
  store i8* %cond167, i8** %stashname, align 8
  %130 = load i8*, i8** %stashname, align 8
  %call168 = call i32 @strncmp(i8* %130, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.48, i64 0, i64 0), i64 4) #4
  %tobool169 = icmp ne i32 %call168, 0
  br i1 %tobool169, label %if.end172, label %if.then170

if.then170:                                       ; preds = %cond.end166
  %131 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %132 = load i8*, i8** %name.addr, align 8
  %133 = load i64, i64* %len.addr, align 8
  %call171 = call %struct.gv* @S_maybe_add_coresub(%struct.hv* null, %struct.gv* %131, i8* %132, i64 %133)
  br label %if.end172

if.end172:                                        ; preds = %if.then170, %cond.end166
  br label %if.end173

if.end173:                                        ; preds = %if.end172, %cond.end89, %try_core
  br label %if.end736

if.else:                                          ; preds = %entry
  %134 = load i64, i64* %len.addr, align 8
  %cmp174 = icmp ugt i64 %134, 1
  br i1 %cmp174, label %if.then176, label %if.else378

if.then176:                                       ; preds = %if.else
  %135 = load i8*, i8** %name.addr, align 8
  %136 = load i8, i8* %135, align 1
  %conv177 = sext i8 %136 to i32
  %cmp178 = icmp sgt i32 %conv177, 86
  br i1 %cmp178, label %if.then180, label %if.else181

if.then180:                                       ; preds = %if.then176
  br label %if.end377

if.else181:                                       ; preds = %if.then176
  %137 = load i8*, i8** %name.addr, align 8
  %add.ptr183 = getelementptr inbounds i8, i8* %137, i64 1
  store i8* %add.ptr183, i8** %name2182, align 8
  %138 = load i8*, i8** %name.addr, align 8
  %139 = load i8, i8* %138, align 1
  %conv184 = sext i8 %139 to i32
  switch i32 %conv184, label %sw.epilog376 [
    i32 65, label %sw.bb185
    i32 69, label %sw.bb235
    i32 73, label %sw.bb243
    i32 83, label %sw.bb248
    i32 86, label %sw.bb291
    i32 3, label %sw.bb299
    i32 5, label %sw.bb304
    i32 7, label %sw.bb314
    i32 12, label %sw.bb319
    i32 13, label %sw.bb324
    i32 15, label %sw.bb329
    i32 16, label %sw.bb334
    i32 20, label %sw.bb343
    i32 21, label %sw.bb348
    i32 23, label %sw.bb361
    i32 49, label %sw.bb366
    i32 50, label %sw.bb366
    i32 51, label %sw.bb366
    i32 52, label %sw.bb366
    i32 53, label %sw.bb366
    i32 54, label %sw.bb366
    i32 55, label %sw.bb366
    i32 56, label %sw.bb366
    i32 57, label %sw.bb366
  ]

sw.bb185:                                         ; preds = %if.else181
  %140 = load i8*, i8** %name2182, align 8
  %call186 = call i32 @strcmp(i8* %140, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.71, i64 0, i64 0)) #4
  %tobool187 = icmp ne i32 %call186, 0
  br i1 %tobool187, label %if.else226, label %if.then188

if.then188:                                       ; preds = %sw.bb185
  %141 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %tobool189 = icmp ne %struct.gv* %141, null
  br i1 %tobool189, label %land.lhs.true190, label %cond.false208

land.lhs.true190:                                 ; preds = %if.then188
  %142 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %143 = bitcast %struct.gv* %142 to %struct.sv*
  %sv_flags191 = getelementptr inbounds %struct.sv, %struct.sv* %143, i32 0, i32 2
  %144 = load i32, i32* %sv_flags191, align 4
  %and192 = and i32 %144, 255
  %cmp193 = icmp eq i32 %and192, 9
  br i1 %cmp193, label %land.lhs.true199, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true190
  %145 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %146 = bitcast %struct.gv* %145 to %struct.sv*
  %sv_flags195 = getelementptr inbounds %struct.sv, %struct.sv* %146, i32 0, i32 2
  %147 = load i32, i32* %sv_flags195, align 4
  %and196 = and i32 %147, 255
  %cmp197 = icmp eq i32 %and196, 10
  br i1 %cmp197, label %land.lhs.true199, label %cond.false208

land.lhs.true199:                                 ; preds = %lor.lhs.false, %land.lhs.true190
  %148 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_u200 = getelementptr inbounds %struct.gv, %struct.gv* %148, i32 0, i32 3
  %svu_gp = bitcast %union.anon.6* %sv_u200 to %struct.gp**
  %149 = load %struct.gp*, %struct.gp** %svu_gp, align 8
  %add.ptr201 = getelementptr inbounds %struct.gp, %struct.gp* %149, i64 0
  %tobool202 = icmp ne %struct.gp* %add.ptr201, null
  br i1 %tobool202, label %cond.true203, label %cond.false208

cond.true203:                                     ; preds = %land.lhs.true199
  %150 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_u204 = getelementptr inbounds %struct.gv, %struct.gv* %150, i32 0, i32 3
  %svu_gp205 = bitcast %union.anon.6* %sv_u204 to %struct.gp**
  %151 = load %struct.gp*, %struct.gp** %svu_gp205, align 8
  %add.ptr206 = getelementptr inbounds %struct.gp, %struct.gp* %151, i64 0
  %gp_io = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr206, i32 0, i32 1
  %152 = load %struct.io*, %struct.io** %gp_io, align 8
  %tobool207 = icmp ne %struct.io* %152, null
  br i1 %tobool207, label %cond.true209, label %cond.false214

cond.false208:                                    ; preds = %land.lhs.true199, %lor.lhs.false, %if.then188
  br i1 false, label %cond.true209, label %cond.false214

cond.true209:                                     ; preds = %cond.false208, %cond.true203
  %153 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_u210 = getelementptr inbounds %struct.gv, %struct.gv* %153, i32 0, i32 3
  %svu_gp211 = bitcast %union.anon.6* %sv_u210 to %struct.gp**
  %154 = load %struct.gp*, %struct.gp** %svu_gp211, align 8
  %add.ptr212 = getelementptr inbounds %struct.gp, %struct.gp* %154, i64 0
  %gp_io213 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr212, i32 0, i32 1
  %155 = load %struct.io*, %struct.io** %gp_io213, align 8
  br label %cond.end220

cond.false214:                                    ; preds = %cond.false208, %cond.true203
  %156 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %call215 = call %struct.gv* @Perl_gv_add_by_type(%struct.gv* %156, i32 15)
  %sv_u216 = getelementptr inbounds %struct.gv, %struct.gv* %call215, i32 0, i32 3
  %svu_gp217 = bitcast %union.anon.6* %sv_u216 to %struct.gp**
  %157 = load %struct.gp*, %struct.gp** %svu_gp217, align 8
  %add.ptr218 = getelementptr inbounds %struct.gp, %struct.gp* %157, i64 0
  %gp_io219 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr218, i32 0, i32 1
  %158 = load %struct.io*, %struct.io** %gp_io219, align 8
  br label %cond.end220

cond.end220:                                      ; preds = %cond.false214, %cond.true209
  %cond221 = phi %struct.io* [ %155, %cond.true209 ], [ %158, %cond.false214 ]
  %sv_any222 = getelementptr inbounds %struct.io, %struct.io* %cond221, i32 0, i32 0
  %159 = load %struct.xpvio*, %struct.xpvio** %sv_any222, align 8
  %xio_flags = getelementptr inbounds %struct.xpvio, %struct.xpvio* %159, i32 0, i32 17
  %160 = load i8, i8* %xio_flags, align 1
  %conv223 = zext i8 %160 to i32
  %or224 = or i32 %conv223, 3
  %conv225 = trunc i32 %or224 to i8
  store i8 %conv225, i8* %xio_flags, align 1
  br label %if.end234

if.else226:                                       ; preds = %sw.bb185
  %161 = load i8*, i8** %name2182, align 8
  %call227 = call i32 @strcmp(i8* %161, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.72, i64 0, i64 0)) #4
  %tobool228 = icmp ne i32 %call227, 0
  br i1 %tobool228, label %if.end233, label %if.then229

if.then229:                                       ; preds = %if.else226
  %162 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_any230 = getelementptr inbounds %struct.gv, %struct.gv* %162, i32 0, i32 0
  %163 = load %struct.xpvgv*, %struct.xpvgv** %sv_any230, align 8
  %xpv_cur231 = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %163, i32 0, i32 2
  %164 = load i64, i64* %xpv_cur231, align 8
  %or232 = or i64 %164, 2
  store i64 %or232, i64* %xpv_cur231, align 8
  br label %if.end233

if.end233:                                        ; preds = %if.then229, %if.else226
  br label %if.end234

if.end234:                                        ; preds = %if.end233, %cond.end220
  br label %sw.epilog376

sw.bb235:                                         ; preds = %if.else181
  %165 = load i8*, i8** %name2182, align 8
  %call236 = call i32 @strncmp(i8* %165, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.68, i64 0, i64 0), i64 5) #4
  %tobool237 = icmp ne i32 %call236, 0
  br i1 %tobool237, label %if.end242, label %if.then238

if.then238:                                       ; preds = %sw.bb235
  %166 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_any239 = getelementptr inbounds %struct.gv, %struct.gv* %166, i32 0, i32 0
  %167 = load %struct.xpvgv*, %struct.xpvgv** %sv_any239, align 8
  %xpv_cur240 = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %167, i32 0, i32 2
  %168 = load i64, i64* %xpv_cur240, align 8
  %or241 = or i64 %168, 2
  store i64 %or241, i64* %xpv_cur240, align 8
  br label %if.end242

if.end242:                                        ; preds = %if.then238, %sw.bb235
  br label %sw.epilog376

sw.bb243:                                         ; preds = %if.else181
  %169 = load i8*, i8** %name2182, align 8
  %call244 = call i32 @strcmp(i8* %169, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.69, i64 0, i64 0)) #4
  %tobool245 = icmp ne i32 %call244, 0
  br i1 %tobool245, label %if.end247, label %if.then246

if.then246:                                       ; preds = %sw.bb243
  %170 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  call void @S_gv_magicalize_isa(%struct.gv* %170)
  br label %if.end247

if.end247:                                        ; preds = %if.then246, %sw.bb243
  br label %sw.epilog376

sw.bb248:                                         ; preds = %if.else181
  %171 = load i8*, i8** %name2182, align 8
  %call249 = call i32 @strcmp(i8* %171, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.73, i64 0, i64 0)) #4
  %tobool250 = icmp ne i32 %call249, 0
  br i1 %tobool250, label %if.end290, label %if.then251

if.then251:                                       ; preds = %sw.bb248
  %172 = load %struct.sv**, %struct.sv*** @PL_psig_name, align 8
  %tobool252 = icmp ne %struct.sv** %172, null
  br i1 %tobool252, label %if.else257, label %if.then253

if.then253:                                       ; preds = %if.then251
  %call254 = call i8* @Perl_safesyscalloc(i64 32, i64 8)
  %173 = bitcast i8* %call254 to %struct.sv**
  store %struct.sv** %173, %struct.sv*** @PL_psig_name, align 8
  %call255 = call i8* @Perl_safesyscalloc(i64 16, i64 4)
  %174 = bitcast i8* %call255 to i32*
  store i32* %174, i32** @PL_psig_pend, align 8
  %175 = load %struct.sv**, %struct.sv*** @PL_psig_name, align 8
  %add.ptr256 = getelementptr inbounds %struct.sv*, %struct.sv** %175, i64 16
  store %struct.sv** %add.ptr256, %struct.sv*** @PL_psig_ptr, align 8
  br label %if.end258

if.else257:                                       ; preds = %if.then251
  %176 = load %struct.sv**, %struct.sv*** @PL_psig_name, align 8
  %177 = bitcast %struct.sv** %176 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 1 %177, i8 0, i64 256, i1 false)
  %178 = load i32*, i32** @PL_psig_pend, align 8
  %179 = bitcast i32* %178 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 1 %179, i8 0, i64 64, i1 false)
  br label %if.end258

if.end258:                                        ; preds = %if.else257, %if.then253
  %180 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_any259 = getelementptr inbounds %struct.gv, %struct.gv* %180, i32 0, i32 0
  %181 = load %struct.xpvgv*, %struct.xpvgv** %sv_any259, align 8
  %xpv_cur260 = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %181, i32 0, i32 2
  %182 = load i64, i64* %xpv_cur260, align 8
  %or261 = or i64 %182, 2
  store i64 %or261, i64* %xpv_cur260, align 8
  %183 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_u262 = getelementptr inbounds %struct.gv, %struct.gv* %183, i32 0, i32 3
  %svu_gp263 = bitcast %union.anon.6* %sv_u262 to %struct.gp**
  %184 = load %struct.gp*, %struct.gp** %svu_gp263, align 8
  %add.ptr264 = getelementptr inbounds %struct.gp, %struct.gp* %184, i64 0
  %gp_hv = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr264, i32 0, i32 5
  %185 = load %struct.hv*, %struct.hv** %gp_hv, align 8
  %tobool265 = icmp ne %struct.hv* %185, null
  br i1 %tobool265, label %cond.true266, label %cond.false271

cond.true266:                                     ; preds = %if.end258
  %186 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_u267 = getelementptr inbounds %struct.gv, %struct.gv* %186, i32 0, i32 3
  %svu_gp268 = bitcast %union.anon.6* %sv_u267 to %struct.gp**
  %187 = load %struct.gp*, %struct.gp** %svu_gp268, align 8
  %add.ptr269 = getelementptr inbounds %struct.gp, %struct.gp* %187, i64 0
  %gp_hv270 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr269, i32 0, i32 5
  %188 = load %struct.hv*, %struct.hv** %gp_hv270, align 8
  br label %cond.end277

cond.false271:                                    ; preds = %if.end258
  %189 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %call272 = call %struct.gv* @Perl_gv_add_by_type(%struct.gv* %189, i32 12)
  %sv_u273 = getelementptr inbounds %struct.gv, %struct.gv* %call272, i32 0, i32 3
  %svu_gp274 = bitcast %union.anon.6* %sv_u273 to %struct.gp**
  %190 = load %struct.gp*, %struct.gp** %svu_gp274, align 8
  %add.ptr275 = getelementptr inbounds %struct.gp, %struct.gp* %190, i64 0
  %gp_hv276 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr275, i32 0, i32 5
  %191 = load %struct.hv*, %struct.hv** %gp_hv276, align 8
  br label %cond.end277

cond.end277:                                      ; preds = %cond.false271, %cond.true266
  %cond278 = phi %struct.hv* [ %188, %cond.true266 ], [ %191, %cond.false271 ]
  store %struct.hv* %cond278, %struct.hv** %hv, align 8
  %192 = load %struct.hv*, %struct.hv** %hv, align 8
  %193 = bitcast %struct.hv* %192 to i8*
  %194 = bitcast i8* %193 to %struct.sv*
  call void @Perl_sv_magic(%struct.sv* %194, %struct.sv* null, i32 83, i8* null, i32 0)
  store i32 1, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %cond.end277
  %195 = load i32, i32* %i, align 4
  %cmp279 = icmp slt i32 %195, 16
  br i1 %cmp279, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %196 = load %struct.hv*, %struct.hv** %hv, align 8
  %197 = load i32, i32* %i, align 4
  %idxprom = sext i32 %197 to i64
  %arrayidx281 = getelementptr inbounds [0 x i8*], [0 x i8*]* @PL_sig_name, i64 0, i64 %idxprom
  %198 = load i8*, i8** %arrayidx281, align 8
  %199 = load i32, i32* %i, align 4
  %idxprom282 = sext i32 %199 to i64
  %arrayidx283 = getelementptr inbounds [0 x i8*], [0 x i8*]* @PL_sig_name, i64 0, i64 %idxprom282
  %200 = load i8*, i8** %arrayidx283, align 8
  %call284 = call i64 @strlen(i8* %200) #4
  %conv285 = trunc i64 %call284 to i32
  %call286 = call i8* @Perl_hv_common_key_len(%struct.hv* %196, i8* %198, i32 %conv285, i32 48, %struct.sv* null, i32 0)
  %201 = bitcast i8* %call286 to %struct.sv**
  store %struct.sv** %201, %struct.sv*** %init, align 8
  %202 = load %struct.sv**, %struct.sv*** %init, align 8
  %tobool287 = icmp ne %struct.sv** %202, null
  br i1 %tobool287, label %if.then288, label %if.end289

if.then288:                                       ; preds = %for.body
  %203 = load %struct.sv**, %struct.sv*** %init, align 8
  %204 = load %struct.sv*, %struct.sv** %203, align 8
  call void @Perl_sv_setsv_flags(%struct.sv* %204, %struct.sv* @PL_sv_undef, i32 1538)
  br label %if.end289

if.end289:                                        ; preds = %if.then288, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end289
  %205 = load i32, i32* %i, align 4
  %inc = add nsw i32 %205, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end290

if.end290:                                        ; preds = %for.end, %sw.bb248
  br label %sw.epilog376

sw.bb291:                                         ; preds = %if.else181
  %206 = load i8*, i8** %name2182, align 8
  %call292 = call i32 @strcmp(i8* %206, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.70, i64 0, i64 0)) #4
  %tobool293 = icmp ne i32 %call292, 0
  br i1 %tobool293, label %if.end298, label %if.then294

if.then294:                                       ; preds = %sw.bb291
  %207 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_any295 = getelementptr inbounds %struct.gv, %struct.gv* %207, i32 0, i32 0
  %208 = load %struct.xpvgv*, %struct.xpvgv** %sv_any295, align 8
  %xpv_cur296 = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %208, i32 0, i32 2
  %209 = load i64, i64* %xpv_cur296, align 8
  %or297 = or i64 %209, 2
  store i64 %or297, i64* %xpv_cur296, align 8
  br label %if.end298

if.end298:                                        ; preds = %if.then294, %sw.bb291
  br label %sw.epilog376

sw.bb299:                                         ; preds = %if.else181
  %210 = load i8*, i8** %name2182, align 8
  %call300 = call i32 @strcmp(i8* %210, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.74, i64 0, i64 0)) #4
  %tobool301 = icmp ne i32 %call300, 0
  br i1 %tobool301, label %if.end303, label %if.then302

if.then302:                                       ; preds = %sw.bb299
  br label %magicalize

if.end303:                                        ; preds = %sw.bb299
  br label %sw.epilog376

sw.bb304:                                         ; preds = %if.else181
  %211 = load i8*, i8** %name2182, align 8
  %212 = load i8, i8* %211, align 1
  %conv305 = sext i8 %212 to i32
  %cmp306 = icmp eq i32 %conv305, 95
  br i1 %cmp306, label %if.then308, label %if.end309

if.then308:                                       ; preds = %sw.bb304
  %213 = load i8*, i8** %name2182, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %213, i32 1
  store i8* %incdec.ptr, i8** %name2182, align 8
  br label %if.end309

if.end309:                                        ; preds = %if.then308, %sw.bb304
  %214 = load i8*, i8** %name2182, align 8
  %call310 = call i32 @strcmp(i8* %214, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.75, i64 0, i64 0)) #4
  %tobool311 = icmp ne i32 %call310, 0
  br i1 %tobool311, label %if.end313, label %if.then312

if.then312:                                       ; preds = %if.end309
  br label %magicalize

if.end313:                                        ; preds = %if.end309
  br label %sw.epilog376

sw.bb314:                                         ; preds = %if.else181
  %215 = load i8*, i8** %name2182, align 8
  %call315 = call i32 @strcmp(i8* %215, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.76, i64 0, i64 0)) #4
  %tobool316 = icmp ne i32 %call315, 0
  br i1 %tobool316, label %if.end318, label %if.then317

if.then317:                                       ; preds = %sw.bb314
  br label %ro_magicalize

if.end318:                                        ; preds = %sw.bb314
  br label %sw.epilog376

sw.bb319:                                         ; preds = %if.else181
  %216 = load i8*, i8** %name2182, align 8
  %call320 = call i32 @strcmp(i8* %216, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.77, i64 0, i64 0)) #4
  %tobool321 = icmp ne i32 %call320, 0
  br i1 %tobool321, label %if.end323, label %if.then322

if.then322:                                       ; preds = %sw.bb319
  br label %ro_magicalize

if.end323:                                        ; preds = %sw.bb319
  br label %sw.epilog376

sw.bb324:                                         ; preds = %if.else181
  %217 = load i8*, i8** %name2182, align 8
  %call325 = call i32 @strcmp(i8* %217, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.78, i64 0, i64 0)) #4
  %tobool326 = icmp ne i32 %call325, 0
  br i1 %tobool326, label %if.end328, label %if.then327

if.then327:                                       ; preds = %sw.bb324
  store i64 -3, i64* %paren, align 8
  br label %storeparen

if.end328:                                        ; preds = %sw.bb324
  br label %sw.epilog376

sw.bb329:                                         ; preds = %if.else181
  %218 = load i8*, i8** %name2182, align 8
  %call330 = call i32 @strcmp(i8* %218, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.79, i64 0, i64 0)) #4
  %tobool331 = icmp ne i32 %call330, 0
  br i1 %tobool331, label %if.end333, label %if.then332

if.then332:                                       ; preds = %sw.bb329
  br label %magicalize

if.end333:                                        ; preds = %sw.bb329
  br label %sw.epilog376

sw.bb334:                                         ; preds = %if.else181
  %219 = load i8*, i8** %name2182, align 8
  %call335 = call i32 @strcmp(i8* %219, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.80, i64 0, i64 0)) #4
  %tobool336 = icmp ne i32 %call335, 0
  br i1 %tobool336, label %if.end338, label %if.then337

if.then337:                                       ; preds = %sw.bb334
  store i64 -5, i64* %paren, align 8
  br label %storeparen

if.end338:                                        ; preds = %sw.bb334
  %220 = load i8*, i8** %name2182, align 8
  %call339 = call i32 @strcmp(i8* %220, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.81, i64 0, i64 0)) #4
  %tobool340 = icmp ne i32 %call339, 0
  br i1 %tobool340, label %if.end342, label %if.then341

if.then341:                                       ; preds = %if.end338
  store i64 -4, i64* %paren, align 8
  br label %storeparen

if.end342:                                        ; preds = %if.end338
  br label %sw.epilog376

sw.bb343:                                         ; preds = %if.else181
  %221 = load i8*, i8** %name2182, align 8
  %call344 = call i32 @strcmp(i8* %221, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.82, i64 0, i64 0)) #4
  %tobool345 = icmp ne i32 %call344, 0
  br i1 %tobool345, label %if.end347, label %if.then346

if.then346:                                       ; preds = %sw.bb343
  br label %ro_magicalize

if.end347:                                        ; preds = %sw.bb343
  br label %sw.epilog376

sw.bb348:                                         ; preds = %if.else181
  %222 = load i8*, i8** %name2182, align 8
  %call349 = call i32 @strcmp(i8* %222, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.83, i64 0, i64 0)) #4
  %tobool350 = icmp ne i32 %call349, 0
  br i1 %tobool350, label %if.end352, label %if.then351

if.then351:                                       ; preds = %sw.bb348
  br label %ro_magicalize

if.end352:                                        ; preds = %sw.bb348
  %223 = load i8*, i8** %name2182, align 8
  %call353 = call i32 @strcmp(i8* %223, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.84, i64 0, i64 0)) #4
  %tobool354 = icmp ne i32 %call353, 0
  br i1 %tobool354, label %if.end356, label %if.then355

if.then355:                                       ; preds = %if.end352
  br label %ro_magicalize

if.end356:                                        ; preds = %if.end352
  %224 = load i8*, i8** %name2182, align 8
  %call357 = call i32 @strcmp(i8* %224, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.85, i64 0, i64 0)) #4
  %tobool358 = icmp ne i32 %call357, 0
  br i1 %tobool358, label %if.end360, label %if.then359

if.then359:                                       ; preds = %if.end356
  br label %magicalize

if.end360:                                        ; preds = %if.end356
  br label %sw.epilog376

sw.bb361:                                         ; preds = %if.else181
  %225 = load i8*, i8** %name2182, align 8
  %call362 = call i32 @strcmp(i8* %225, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.86, i64 0, i64 0)) #4
  %tobool363 = icmp ne i32 %call362, 0
  br i1 %tobool363, label %if.end365, label %if.then364

if.then364:                                       ; preds = %sw.bb361
  br label %magicalize

if.end365:                                        ; preds = %sw.bb361
  br label %sw.epilog376

sw.bb366:                                         ; preds = %if.else181, %if.else181, %if.else181, %if.else181, %if.else181, %if.else181, %if.else181, %if.else181, %if.else181
  %226 = load i8*, i8** %name.addr, align 8
  %call367 = call zeroext i1 @Perl_grok_atoUV(i8* %226, i64* %uv, i8** null)
  br i1 %call367, label %lor.lhs.false368, label %if.then371

lor.lhs.false368:                                 ; preds = %sw.bb366
  %227 = load i64, i64* %uv, align 8
  %cmp369 = icmp ugt i64 %227, 2147483647
  br i1 %cmp369, label %if.then371, label %if.end373

if.then371:                                       ; preds = %lor.lhs.false368, %sw.bb366
  %228 = load i8, i8* %addmg.addr, align 1
  %tobool372 = trunc i8 %228 to i1
  store i1 %tobool372, i1* %retval, align 1
  br label %return

if.end373:                                        ; preds = %lor.lhs.false368
  %229 = load i64, i64* %uv, align 8
  %conv374 = trunc i64 %229 to i32
  %conv375 = sext i32 %conv374 to i64
  store i64 %conv375, i64* %paren, align 8
  br label %storeparen

sw.epilog376:                                     ; preds = %if.else181, %if.end365, %if.end360, %if.end347, %if.end342, %if.end333, %if.end328, %if.end323, %if.end318, %if.end313, %if.end303, %if.end298, %if.end290, %if.end247, %if.end242, %if.end234
  br label %if.end377

if.end377:                                        ; preds = %sw.epilog376, %if.then180
  br label %if.end735

if.else378:                                       ; preds = %if.else
  %230 = load i8*, i8** %name.addr, align 8
  %231 = load i8, i8* %230, align 1
  %conv379 = sext i8 %231 to i32
  switch i32 %conv379, label %sw.epilog734 [
    i32 38, label %sw.bb380
    i32 96, label %sw.bb381
    i32 39, label %sw.bb382
    i32 49, label %sw.bb383
    i32 50, label %sw.bb383
    i32 51, label %sw.bb383
    i32 52, label %sw.bb383
    i32 53, label %sw.bb383
    i32 54, label %sw.bb383
    i32 55, label %sw.bb383
    i32 56, label %sw.bb383
    i32 57, label %sw.bb383
    i32 58, label %sw.bb404
    i32 63, label %sw.bb423
    i32 33, label %sw.bb424
    i32 45, label %sw.bb456
    i32 43, label %sw.bb456
    i32 42, label %sw.bb537
    i32 35, label %sw.bb537
    i32 8, label %sw.bb543
    i32 91, label %sw.bb563
    i32 19, label %sw.bb610
    i32 48, label %sw.bb631
    i32 94, label %sw.bb631
    i32 126, label %sw.bb631
    i32 61, label %sw.bb631
    i32 37, label %sw.bb631
    i32 46, label %sw.bb631
    i32 40, label %sw.bb631
    i32 41, label %sw.bb631
    i32 60, label %sw.bb631
    i32 62, label %sw.bb631
    i32 92, label %sw.bb631
    i32 47, label %sw.bb631
    i32 124, label %sw.bb631
    i32 36, label %sw.bb631
    i32 1, label %sw.bb631
    i32 3, label %sw.bb631
    i32 4, label %sw.bb631
    i32 5, label %sw.bb631
    i32 6, label %sw.bb631
    i32 9, label %sw.bb631
    i32 14, label %sw.bb631
    i32 15, label %sw.bb631
    i32 16, label %sw.bb631
    i32 20, label %sw.bb631
    i32 23, label %sw.bb631
    i32 12, label %sw.bb651
    i32 59, label %sw.bb670
    i32 93, label %sw.bb689
    i32 22, label %sw.bb709
    i32 97, label %sw.bb726
    i32 98, label %sw.bb726
  ]

sw.bb380:                                         ; preds = %if.else378
  store i64 0, i64* %paren, align 8
  br label %sawampersand

sw.bb381:                                         ; preds = %if.else378
  store i64 -2, i64* %paren, align 8
  br label %sawampersand

sw.bb382:                                         ; preds = %if.else378
  store i64 -1, i64* %paren, align 8
  br label %sawampersand

sawampersand:                                     ; preds = %sw.bb382, %sw.bb381, %sw.bb380
  br label %storeparen

sw.bb383:                                         ; preds = %if.else378, %if.else378, %if.else378, %if.else378, %if.else378, %if.else378, %if.else378, %if.else378, %if.else378
  %232 = load i8*, i8** %name.addr, align 8
  %233 = load i8, i8* %232, align 1
  %conv384 = sext i8 %233 to i32
  %sub = sub nsw i32 %conv384, 48
  %conv385 = sext i32 %sub to i64
  store i64 %conv385, i64* %paren, align 8
  br label %storeparen

storeparen:                                       ; preds = %sw.bb383, %sawampersand, %if.end373, %if.then341, %if.then337, %if.then327
  %234 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_u386 = getelementptr inbounds %struct.gv, %struct.gv* %234, i32 0, i32 3
  %svu_gp387 = bitcast %union.anon.6* %sv_u386 to %struct.gp**
  %235 = load %struct.gp*, %struct.gp** %svu_gp387, align 8
  %add.ptr388 = getelementptr inbounds %struct.gp, %struct.gp* %235, i64 0
  %gp_sv = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr388, i32 0, i32 0
  %236 = load %struct.sv*, %struct.sv** %gp_sv, align 8
  %tobool389 = icmp ne %struct.sv* %236, null
  br i1 %tobool389, label %cond.true390, label %cond.false395

cond.true390:                                     ; preds = %storeparen
  %237 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_u391 = getelementptr inbounds %struct.gv, %struct.gv* %237, i32 0, i32 3
  %svu_gp392 = bitcast %union.anon.6* %sv_u391 to %struct.gp**
  %238 = load %struct.gp*, %struct.gp** %svu_gp392, align 8
  %add.ptr393 = getelementptr inbounds %struct.gp, %struct.gp* %238, i64 0
  %gp_sv394 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr393, i32 0, i32 0
  br label %cond.end401

cond.false395:                                    ; preds = %storeparen
  %239 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %call396 = call %struct.gv* @Perl_gv_add_by_type(%struct.gv* %239, i32 0)
  %sv_u397 = getelementptr inbounds %struct.gv, %struct.gv* %call396, i32 0, i32 3
  %svu_gp398 = bitcast %union.anon.6* %sv_u397 to %struct.gp**
  %240 = load %struct.gp*, %struct.gp** %svu_gp398, align 8
  %add.ptr399 = getelementptr inbounds %struct.gp, %struct.gp* %240, i64 0
  %gp_sv400 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr399, i32 0, i32 0
  br label %cond.end401

cond.end401:                                      ; preds = %cond.false395, %cond.true390
  %cond402 = phi %struct.sv** [ %gp_sv394, %cond.true390 ], [ %gp_sv400, %cond.false395 ]
  %241 = load %struct.sv*, %struct.sv** %cond402, align 8
  %242 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %243 = bitcast %struct.gv* %242 to i8*
  %244 = bitcast i8* %243 to %struct.sv*
  %245 = load i64, i64* %paren, align 8
  %conv403 = trunc i64 %245 to i32
  call void @Perl_sv_magic(%struct.sv* %241, %struct.sv* %244, i32 0, i8* null, i32 %conv403)
  br label %sw.epilog734

sw.bb404:                                         ; preds = %if.else378
  %246 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_u405 = getelementptr inbounds %struct.gv, %struct.gv* %246, i32 0, i32 3
  %svu_gp406 = bitcast %union.anon.6* %sv_u405 to %struct.gp**
  %247 = load %struct.gp*, %struct.gp** %svu_gp406, align 8
  %add.ptr407 = getelementptr inbounds %struct.gp, %struct.gp* %247, i64 0
  %gp_sv408 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr407, i32 0, i32 0
  %248 = load %struct.sv*, %struct.sv** %gp_sv408, align 8
  %tobool409 = icmp ne %struct.sv* %248, null
  br i1 %tobool409, label %cond.true410, label %cond.false415

cond.true410:                                     ; preds = %sw.bb404
  %249 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_u411 = getelementptr inbounds %struct.gv, %struct.gv* %249, i32 0, i32 3
  %svu_gp412 = bitcast %union.anon.6* %sv_u411 to %struct.gp**
  %250 = load %struct.gp*, %struct.gp** %svu_gp412, align 8
  %add.ptr413 = getelementptr inbounds %struct.gp, %struct.gp* %250, i64 0
  %gp_sv414 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr413, i32 0, i32 0
  br label %cond.end421

cond.false415:                                    ; preds = %sw.bb404
  %251 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %call416 = call %struct.gv* @Perl_gv_add_by_type(%struct.gv* %251, i32 0)
  %sv_u417 = getelementptr inbounds %struct.gv, %struct.gv* %call416, i32 0, i32 3
  %svu_gp418 = bitcast %union.anon.6* %sv_u417 to %struct.gp**
  %252 = load %struct.gp*, %struct.gp** %svu_gp418, align 8
  %add.ptr419 = getelementptr inbounds %struct.gp, %struct.gp* %252, i64 0
  %gp_sv420 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr419, i32 0, i32 0
  br label %cond.end421

cond.end421:                                      ; preds = %cond.false415, %cond.true410
  %cond422 = phi %struct.sv** [ %gp_sv414, %cond.true410 ], [ %gp_sv420, %cond.false415 ]
  %253 = load %struct.sv*, %struct.sv** %cond422, align 8
  %254 = load i8*, i8** @PL_chopset, align 8
  call void @Perl_sv_setpv(%struct.sv* %253, i8* %254)
  br label %magicalize

sw.bb423:                                         ; preds = %if.else378
  br label %magicalize

sw.bb424:                                         ; preds = %if.else378
  %255 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_any425 = getelementptr inbounds %struct.gv, %struct.gv* %255, i32 0, i32 0
  %256 = load %struct.xpvgv*, %struct.xpvgv** %sv_any425, align 8
  %xpv_cur426 = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %256, i32 0, i32 2
  %257 = load i64, i64* %xpv_cur426, align 8
  %or427 = or i64 %257, 2
  store i64 %or427, i64* %xpv_cur426, align 8
  %258 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_u428 = getelementptr inbounds %struct.gv, %struct.gv* %258, i32 0, i32 3
  %svu_gp429 = bitcast %union.anon.6* %sv_u428 to %struct.gp**
  %259 = load %struct.gp*, %struct.gp** %svu_gp429, align 8
  %add.ptr430 = getelementptr inbounds %struct.gp, %struct.gp* %259, i64 0
  %gp_sv431 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr430, i32 0, i32 0
  %260 = load %struct.sv*, %struct.sv** %gp_sv431, align 8
  %tobool432 = icmp ne %struct.sv* %260, null
  br i1 %tobool432, label %cond.true433, label %cond.false438

cond.true433:                                     ; preds = %sw.bb424
  %261 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_u434 = getelementptr inbounds %struct.gv, %struct.gv* %261, i32 0, i32 3
  %svu_gp435 = bitcast %union.anon.6* %sv_u434 to %struct.gp**
  %262 = load %struct.gp*, %struct.gp** %svu_gp435, align 8
  %add.ptr436 = getelementptr inbounds %struct.gp, %struct.gp* %262, i64 0
  %gp_sv437 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr436, i32 0, i32 0
  br label %cond.end444

cond.false438:                                    ; preds = %sw.bb424
  %263 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %call439 = call %struct.gv* @Perl_gv_add_by_type(%struct.gv* %263, i32 0)
  %sv_u440 = getelementptr inbounds %struct.gv, %struct.gv* %call439, i32 0, i32 3
  %svu_gp441 = bitcast %union.anon.6* %sv_u440 to %struct.gp**
  %264 = load %struct.gp*, %struct.gp** %svu_gp441, align 8
  %add.ptr442 = getelementptr inbounds %struct.gp, %struct.gp* %264, i64 0
  %gp_sv443 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr442, i32 0, i32 0
  br label %cond.end444

cond.end444:                                      ; preds = %cond.false438, %cond.true433
  %cond445 = phi %struct.sv** [ %gp_sv437, %cond.true433 ], [ %gp_sv443, %cond.false438 ]
  %265 = load %struct.sv*, %struct.sv** %cond445, align 8
  %266 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %267 = bitcast %struct.gv* %266 to i8*
  %268 = bitcast i8* %267 to %struct.sv*
  %269 = load i8*, i8** %name.addr, align 8
  %270 = load i64, i64* %len.addr, align 8
  %conv446 = trunc i64 %270 to i32
  call void @Perl_sv_magic(%struct.sv* %265, %struct.sv* %268, i32 0, i8* %269, i32 %conv446)
  %271 = load i32, i32* %sv_type.addr, align 4
  %cmp447 = icmp eq i32 %271, 12
  br i1 %cmp447, label %if.then452, label %lor.lhs.false449

lor.lhs.false449:                                 ; preds = %cond.end444
  %272 = load i32, i32* %sv_type.addr, align 4
  %cmp450 = icmp eq i32 %272, 9
  br i1 %cmp450, label %if.then452, label %if.end455

if.then452:                                       ; preds = %lor.lhs.false449, %cond.end444
  %273 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %call453 = call %struct.sv* @Perl_newSVpvn(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.60, i64 0, i64 0), i64 5)
  %call454 = call %struct.hv* @S_require_tie_mod(%struct.gv* %273, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.59, i64 0, i64 0), %struct.sv* %call453, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.61, i64 0, i64 0), i32 1)
  store i8 0, i8* %addmg.addr, align 1
  br label %if.end455

if.end455:                                        ; preds = %if.then452, %lor.lhs.false449
  br label %sw.epilog734

sw.bb456:                                         ; preds = %if.else378, %if.else378
  %274 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_any457 = getelementptr inbounds %struct.gv, %struct.gv* %274, i32 0, i32 0
  %275 = load %struct.xpvgv*, %struct.xpvgv** %sv_any457, align 8
  %xpv_cur458 = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %275, i32 0, i32 2
  %276 = load i64, i64* %xpv_cur458, align 8
  %or459 = or i64 %276, 2
  store i64 %or459, i64* %xpv_cur458, align 8
  %277 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_u460 = getelementptr inbounds %struct.gv, %struct.gv* %277, i32 0, i32 3
  %svu_gp461 = bitcast %union.anon.6* %sv_u460 to %struct.gp**
  %278 = load %struct.gp*, %struct.gp** %svu_gp461, align 8
  %add.ptr462 = getelementptr inbounds %struct.gp, %struct.gp* %278, i64 0
  %gp_av = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr462, i32 0, i32 6
  %279 = load %struct.av*, %struct.av** %gp_av, align 8
  %tobool463 = icmp ne %struct.av* %279, null
  br i1 %tobool463, label %cond.true464, label %cond.false469

cond.true464:                                     ; preds = %sw.bb456
  %280 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_u465 = getelementptr inbounds %struct.gv, %struct.gv* %280, i32 0, i32 3
  %svu_gp466 = bitcast %union.anon.6* %sv_u465 to %struct.gp**
  %281 = load %struct.gp*, %struct.gp** %svu_gp466, align 8
  %add.ptr467 = getelementptr inbounds %struct.gp, %struct.gp* %281, i64 0
  %gp_av468 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr467, i32 0, i32 6
  %282 = load %struct.av*, %struct.av** %gp_av468, align 8
  br label %cond.end475

cond.false469:                                    ; preds = %sw.bb456
  %283 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %call470 = call %struct.gv* @Perl_gv_add_by_type(%struct.gv* %283, i32 11)
  %sv_u471 = getelementptr inbounds %struct.gv, %struct.gv* %call470, i32 0, i32 3
  %svu_gp472 = bitcast %union.anon.6* %sv_u471 to %struct.gp**
  %284 = load %struct.gp*, %struct.gp** %svu_gp472, align 8
  %add.ptr473 = getelementptr inbounds %struct.gp, %struct.gp* %284, i64 0
  %gp_av474 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr473, i32 0, i32 6
  %285 = load %struct.av*, %struct.av** %gp_av474, align 8
  br label %cond.end475

cond.end475:                                      ; preds = %cond.false469, %cond.true464
  %cond476 = phi %struct.av* [ %282, %cond.true464 ], [ %285, %cond.false469 ]
  store %struct.av* %cond476, %struct.av** %av, align 8
  %286 = load i8*, i8** %name.addr, align 8
  %287 = load i8, i8* %286, align 1
  %conv477 = sext i8 %287 to i32
  %cmp478 = icmp eq i32 %conv477, 43
  br i1 %cmp478, label %cond.true480, label %cond.false481

cond.true480:                                     ; preds = %cond.end475
  %288 = load %struct.av*, %struct.av** %av, align 8
  %289 = bitcast %struct.av* %288 to i8*
  %290 = bitcast i8* %289 to %struct.sv*
  br label %cond.end482

cond.false481:                                    ; preds = %cond.end475
  br label %cond.end482

cond.end482:                                      ; preds = %cond.false481, %cond.true480
  %cond483 = phi %struct.sv* [ %290, %cond.true480 ], [ null, %cond.false481 ]
  store %struct.sv* %cond483, %struct.sv** %avc, align 8
  %291 = load %struct.av*, %struct.av** %av, align 8
  %292 = bitcast %struct.av* %291 to i8*
  %293 = bitcast i8* %292 to %struct.sv*
  %294 = load %struct.sv*, %struct.sv** %avc, align 8
  call void @Perl_sv_magic(%struct.sv* %293, %struct.sv* %294, i32 68, i8* null, i32 0)
  %295 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_u484 = getelementptr inbounds %struct.gv, %struct.gv* %295, i32 0, i32 3
  %svu_gp485 = bitcast %union.anon.6* %sv_u484 to %struct.gp**
  %296 = load %struct.gp*, %struct.gp** %svu_gp485, align 8
  %add.ptr486 = getelementptr inbounds %struct.gp, %struct.gp* %296, i64 0
  %gp_sv487 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr486, i32 0, i32 0
  %297 = load %struct.sv*, %struct.sv** %gp_sv487, align 8
  %tobool488 = icmp ne %struct.sv* %297, null
  br i1 %tobool488, label %cond.true489, label %cond.false494

cond.true489:                                     ; preds = %cond.end482
  %298 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_u490 = getelementptr inbounds %struct.gv, %struct.gv* %298, i32 0, i32 3
  %svu_gp491 = bitcast %union.anon.6* %sv_u490 to %struct.gp**
  %299 = load %struct.gp*, %struct.gp** %svu_gp491, align 8
  %add.ptr492 = getelementptr inbounds %struct.gp, %struct.gp* %299, i64 0
  %gp_sv493 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr492, i32 0, i32 0
  br label %cond.end500

cond.false494:                                    ; preds = %cond.end482
  %300 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %call495 = call %struct.gv* @Perl_gv_add_by_type(%struct.gv* %300, i32 0)
  %sv_u496 = getelementptr inbounds %struct.gv, %struct.gv* %call495, i32 0, i32 3
  %svu_gp497 = bitcast %union.anon.6* %sv_u496 to %struct.gp**
  %301 = load %struct.gp*, %struct.gp** %svu_gp497, align 8
  %add.ptr498 = getelementptr inbounds %struct.gp, %struct.gp* %301, i64 0
  %gp_sv499 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr498, i32 0, i32 0
  br label %cond.end500

cond.end500:                                      ; preds = %cond.false494, %cond.true489
  %cond501 = phi %struct.sv** [ %gp_sv493, %cond.true489 ], [ %gp_sv499, %cond.false494 ]
  %302 = load %struct.sv*, %struct.sv** %cond501, align 8
  %303 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %304 = bitcast %struct.gv* %303 to i8*
  %305 = bitcast i8* %304 to %struct.sv*
  %306 = load i8*, i8** %name.addr, align 8
  %307 = load i64, i64* %len.addr, align 8
  %conv502 = trunc i64 %307 to i32
  call void @Perl_sv_magic(%struct.sv* %302, %struct.sv* %305, i32 0, i8* %306, i32 %conv502)
  %308 = load %struct.sv*, %struct.sv** %avc, align 8
  %tobool503 = icmp ne %struct.sv* %308, null
  br i1 %tobool503, label %if.then504, label %if.end525

if.then504:                                       ; preds = %cond.end500
  %309 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_u505 = getelementptr inbounds %struct.gv, %struct.gv* %309, i32 0, i32 3
  %svu_gp506 = bitcast %union.anon.6* %sv_u505 to %struct.gp**
  %310 = load %struct.gp*, %struct.gp** %svu_gp506, align 8
  %add.ptr507 = getelementptr inbounds %struct.gp, %struct.gp* %310, i64 0
  %gp_sv508 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr507, i32 0, i32 0
  %311 = load %struct.sv*, %struct.sv** %gp_sv508, align 8
  %tobool509 = icmp ne %struct.sv* %311, null
  br i1 %tobool509, label %cond.true510, label %cond.false515

cond.true510:                                     ; preds = %if.then504
  %312 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_u511 = getelementptr inbounds %struct.gv, %struct.gv* %312, i32 0, i32 3
  %svu_gp512 = bitcast %union.anon.6* %sv_u511 to %struct.gp**
  %313 = load %struct.gp*, %struct.gp** %svu_gp512, align 8
  %add.ptr513 = getelementptr inbounds %struct.gp, %struct.gp* %313, i64 0
  %gp_sv514 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr513, i32 0, i32 0
  br label %cond.end521

cond.false515:                                    ; preds = %if.then504
  %314 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %call516 = call %struct.gv* @Perl_gv_add_by_type(%struct.gv* %314, i32 0)
  %sv_u517 = getelementptr inbounds %struct.gv, %struct.gv* %call516, i32 0, i32 3
  %svu_gp518 = bitcast %union.anon.6* %sv_u517 to %struct.gp**
  %315 = load %struct.gp*, %struct.gp** %svu_gp518, align 8
  %add.ptr519 = getelementptr inbounds %struct.gp, %struct.gp* %315, i64 0
  %gp_sv520 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr519, i32 0, i32 0
  br label %cond.end521

cond.end521:                                      ; preds = %cond.false515, %cond.true510
  %cond522 = phi %struct.sv** [ %gp_sv514, %cond.true510 ], [ %gp_sv520, %cond.false515 ]
  %316 = load %struct.sv*, %struct.sv** %cond522, align 8
  %sv_flags523 = getelementptr inbounds %struct.sv, %struct.sv* %316, i32 0, i32 2
  %317 = load i32, i32* %sv_flags523, align 4
  %or524 = or i32 %317, 134217728
  store i32 %or524, i32* %sv_flags523, align 4
  br label %if.end525

if.end525:                                        ; preds = %cond.end521, %cond.end500
  %318 = load %struct.av*, %struct.av** %av, align 8
  %sv_flags526 = getelementptr inbounds %struct.av, %struct.av* %318, i32 0, i32 2
  %319 = load i32, i32* %sv_flags526, align 4
  %or527 = or i32 %319, 134217728
  store i32 %or527, i32* %sv_flags526, align 4
  %320 = load i32, i32* %sv_type.addr, align 4
  %cmp528 = icmp eq i32 %320, 12
  br i1 %cmp528, label %if.then533, label %lor.lhs.false530

lor.lhs.false530:                                 ; preds = %if.end525
  %321 = load i32, i32* %sv_type.addr, align 4
  %cmp531 = icmp eq i32 %321, 9
  br i1 %cmp531, label %if.then533, label %if.end536

if.then533:                                       ; preds = %lor.lhs.false530, %if.end525
  %322 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %323 = load i8*, i8** %name.addr, align 8
  %call534 = call %struct.sv* @Perl_newSVpvn(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.62, i64 0, i64 0), i64 23)
  %call535 = call %struct.hv* @S_require_tie_mod(%struct.gv* %322, i8* %323, %struct.sv* %call534, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.61, i64 0, i64 0), i32 0)
  store i8 0, i8* %addmg.addr, align 1
  br label %if.end536

if.end536:                                        ; preds = %if.then533, %lor.lhs.false530
  br label %sw.epilog734

sw.bb537:                                         ; preds = %if.else378, %if.else378
  %324 = load i32, i32* %sv_type.addr, align 4
  %cmp538 = icmp eq i32 %324, 3
  br i1 %cmp538, label %if.then540, label %if.end542

if.then540:                                       ; preds = %sw.bb537
  %325 = load i8*, i8** %name.addr, align 8
  %326 = load i8, i8* %325, align 1
  %conv541 = sext i8 %326 to i32
  call void (i32, i8*, ...) @Perl_ck_warner_d(i32 7170, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.63, i64 0, i64 0), i32 %conv541)
  br label %if.end542

if.end542:                                        ; preds = %if.then540, %sw.bb537
  br label %sw.epilog734

sw.bb543:                                         ; preds = %if.else378
  %327 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_u545 = getelementptr inbounds %struct.gv, %struct.gv* %327, i32 0, i32 3
  %svu_gp546 = bitcast %union.anon.6* %sv_u545 to %struct.gp**
  %328 = load %struct.gp*, %struct.gp** %svu_gp546, align 8
  %add.ptr547 = getelementptr inbounds %struct.gp, %struct.gp* %328, i64 0
  %gp_hv548 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr547, i32 0, i32 5
  %329 = load %struct.hv*, %struct.hv** %gp_hv548, align 8
  %tobool549 = icmp ne %struct.hv* %329, null
  br i1 %tobool549, label %cond.true550, label %cond.false555

cond.true550:                                     ; preds = %sw.bb543
  %330 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_u551 = getelementptr inbounds %struct.gv, %struct.gv* %330, i32 0, i32 3
  %svu_gp552 = bitcast %union.anon.6* %sv_u551 to %struct.gp**
  %331 = load %struct.gp*, %struct.gp** %svu_gp552, align 8
  %add.ptr553 = getelementptr inbounds %struct.gp, %struct.gp* %331, i64 0
  %gp_hv554 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr553, i32 0, i32 5
  %332 = load %struct.hv*, %struct.hv** %gp_hv554, align 8
  br label %cond.end561

cond.false555:                                    ; preds = %sw.bb543
  %333 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %call556 = call %struct.gv* @Perl_gv_add_by_type(%struct.gv* %333, i32 12)
  %sv_u557 = getelementptr inbounds %struct.gv, %struct.gv* %call556, i32 0, i32 3
  %svu_gp558 = bitcast %union.anon.6* %sv_u557 to %struct.gp**
  %334 = load %struct.gp*, %struct.gp** %svu_gp558, align 8
  %add.ptr559 = getelementptr inbounds %struct.gp, %struct.gp* %334, i64 0
  %gp_hv560 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr559, i32 0, i32 5
  %335 = load %struct.hv*, %struct.hv** %gp_hv560, align 8
  br label %cond.end561

cond.end561:                                      ; preds = %cond.false555, %cond.true550
  %cond562 = phi %struct.hv* [ %332, %cond.true550 ], [ %335, %cond.false555 ]
  store %struct.hv* %cond562, %struct.hv** %hv544, align 8
  %336 = load %struct.hv*, %struct.hv** %hv544, align 8
  %337 = bitcast %struct.hv* %336 to i8*
  %338 = bitcast i8* %337 to %struct.sv*
  call void @Perl_sv_magic(%struct.sv* %338, %struct.sv* null, i32 72, i8* null, i32 0)
  br label %magicalize

sw.bb563:                                         ; preds = %if.else378
  %339 = load i32, i32* %sv_type.addr, align 4
  %cmp564 = icmp eq i32 %339, 3
  br i1 %cmp564, label %land.lhs.true569, label %lor.lhs.false566

lor.lhs.false566:                                 ; preds = %sw.bb563
  %340 = load i32, i32* %sv_type.addr, align 4
  %cmp567 = icmp eq i32 %340, 9
  br i1 %cmp567, label %land.lhs.true569, label %if.else608

land.lhs.true569:                                 ; preds = %lor.lhs.false566, %sw.bb563
  %341 = load %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cmp570 = icmp eq %struct.cop* %341, @PL_compiling
  br i1 %cmp570, label %cond.true572, label %cond.false573

cond.true572:                                     ; preds = %land.lhs.true569
  %342 = load i32, i32* getelementptr inbounds (%struct.cop, %struct.cop* @PL_compiling, i32 0, i32 10), align 8
  br label %cond.end574

cond.false573:                                    ; preds = %land.lhs.true569
  %343 = load %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_hints = getelementptr inbounds %struct.cop, %struct.cop* %343, i32 0, i32 10
  %344 = load i32, i32* %cop_hints, align 8
  br label %cond.end574

cond.end574:                                      ; preds = %cond.false573, %cond.true572
  %cond575 = phi i32 [ %342, %cond.true572 ], [ %344, %cond.false573 ]
  %and576 = and i32 %cond575, 469762048
  %shr = lshr i32 %and576, 26
  %cmp577 = icmp ule i32 %shr, 2
  br i1 %cmp577, label %if.then605, label %lor.lhs.false579

lor.lhs.false579:                                 ; preds = %cond.end574
  %345 = load %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cmp580 = icmp eq %struct.cop* %345, @PL_compiling
  br i1 %cmp580, label %cond.true582, label %cond.false583

cond.true582:                                     ; preds = %lor.lhs.false579
  %346 = load i32, i32* getelementptr inbounds (%struct.cop, %struct.cop* @PL_compiling, i32 0, i32 10), align 8
  br label %cond.end585

cond.false583:                                    ; preds = %lor.lhs.false579
  %347 = load %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_hints584 = getelementptr inbounds %struct.cop, %struct.cop* %347, i32 0, i32 10
  %348 = load i32, i32* %cop_hints584, align 8
  br label %cond.end585

cond.end585:                                      ; preds = %cond.false583, %cond.true582
  %cond586 = phi i32 [ %346, %cond.true582 ], [ %348, %cond.false583 ]
  %and587 = and i32 %cond586, 469762048
  %shr588 = lshr i32 %and587, 26
  %cmp589 = icmp eq i32 %shr588, 7
  br i1 %cmp589, label %land.lhs.true591, label %if.else608

land.lhs.true591:                                 ; preds = %cond.end585
  %349 = load %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cmp592 = icmp eq %struct.cop* %349, @PL_compiling
  br i1 %cmp592, label %cond.true594, label %cond.false595

cond.true594:                                     ; preds = %land.lhs.true591
  %350 = load i32, i32* getelementptr inbounds (%struct.cop, %struct.cop* @PL_compiling, i32 0, i32 10), align 8
  br label %cond.end597

cond.false595:                                    ; preds = %land.lhs.true591
  %351 = load %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_hints596 = getelementptr inbounds %struct.cop, %struct.cop* %351, i32 0, i32 10
  %352 = load i32, i32* %cop_hints596, align 8
  br label %cond.end597

cond.end597:                                      ; preds = %cond.false595, %cond.true594
  %cond598 = phi i32 [ %350, %cond.true594 ], [ %352, %cond.false595 ]
  %and599 = and i32 %cond598, 131072
  %tobool600 = icmp ne i32 %and599, 0
  br i1 %tobool600, label %cond.true601, label %cond.false604

cond.true601:                                     ; preds = %cond.end597
  %call602 = call zeroext i1 @Perl_feature_is_enabled(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.64, i64 0, i64 0), i64 7)
  br i1 %call602, label %if.then605, label %if.else608

cond.false604:                                    ; preds = %cond.end597
  br i1 false, label %if.then605, label %if.else608

if.then605:                                       ; preds = %cond.false604, %cond.true601, %cond.end574
  %353 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %354 = load i8*, i8** %name.addr, align 8
  %call606 = call %struct.sv* @Perl_newSVpvn(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.64, i64 0, i64 0), i64 7)
  %call607 = call %struct.hv* @S_require_tie_mod(%struct.gv* %353, i8* %354, %struct.sv* %call606, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.65, i64 0, i64 0), i32 0)
  store i8 0, i8* %addmg.addr, align 1
  br label %if.end609

if.else608:                                       ; preds = %cond.false604, %cond.true601, %cond.end585, %lor.lhs.false566
  br label %magicalize

if.end609:                                        ; preds = %if.then605
  br label %sw.epilog734

sw.bb610:                                         ; preds = %if.else378
  br label %ro_magicalize

ro_magicalize:                                    ; preds = %sw.bb610, %if.then355, %if.then351, %if.then346, %if.then322, %if.then317
  %355 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_u611 = getelementptr inbounds %struct.gv, %struct.gv* %355, i32 0, i32 3
  %svu_gp612 = bitcast %union.anon.6* %sv_u611 to %struct.gp**
  %356 = load %struct.gp*, %struct.gp** %svu_gp612, align 8
  %add.ptr613 = getelementptr inbounds %struct.gp, %struct.gp* %356, i64 0
  %gp_sv614 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr613, i32 0, i32 0
  %357 = load %struct.sv*, %struct.sv** %gp_sv614, align 8
  %tobool615 = icmp ne %struct.sv* %357, null
  br i1 %tobool615, label %cond.true616, label %cond.false621

cond.true616:                                     ; preds = %ro_magicalize
  %358 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_u617 = getelementptr inbounds %struct.gv, %struct.gv* %358, i32 0, i32 3
  %svu_gp618 = bitcast %union.anon.6* %sv_u617 to %struct.gp**
  %359 = load %struct.gp*, %struct.gp** %svu_gp618, align 8
  %add.ptr619 = getelementptr inbounds %struct.gp, %struct.gp* %359, i64 0
  %gp_sv620 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr619, i32 0, i32 0
  br label %cond.end627

cond.false621:                                    ; preds = %ro_magicalize
  %360 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %call622 = call %struct.gv* @Perl_gv_add_by_type(%struct.gv* %360, i32 0)
  %sv_u623 = getelementptr inbounds %struct.gv, %struct.gv* %call622, i32 0, i32 3
  %svu_gp624 = bitcast %union.anon.6* %sv_u623 to %struct.gp**
  %361 = load %struct.gp*, %struct.gp** %svu_gp624, align 8
  %add.ptr625 = getelementptr inbounds %struct.gp, %struct.gp* %361, i64 0
  %gp_sv626 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr625, i32 0, i32 0
  br label %cond.end627

cond.end627:                                      ; preds = %cond.false621, %cond.true616
  %cond628 = phi %struct.sv** [ %gp_sv620, %cond.true616 ], [ %gp_sv626, %cond.false621 ]
  %362 = load %struct.sv*, %struct.sv** %cond628, align 8
  %sv_flags629 = getelementptr inbounds %struct.sv, %struct.sv* %362, i32 0, i32 2
  %363 = load i32, i32* %sv_flags629, align 4
  %or630 = or i32 %363, 134217728
  store i32 %or630, i32* %sv_flags629, align 4
  br label %sw.bb631

sw.bb631:                                         ; preds = %if.else378, %if.else378, %if.else378, %if.else378, %if.else378, %if.else378, %if.else378, %if.else378, %if.else378, %if.else378, %if.else378, %if.else378, %if.else378, %if.else378, %if.else378, %if.else378, %if.else378, %if.else378, %if.else378, %if.else378, %if.else378, %if.else378, %if.else378, %if.else378, %if.else378, %cond.end627
  br label %magicalize

magicalize:                                       ; preds = %sw.bb631, %if.else608, %cond.end561, %sw.bb423, %cond.end421, %if.then364, %if.then359, %if.then332, %if.then312, %if.then302
  %364 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_u632 = getelementptr inbounds %struct.gv, %struct.gv* %364, i32 0, i32 3
  %svu_gp633 = bitcast %union.anon.6* %sv_u632 to %struct.gp**
  %365 = load %struct.gp*, %struct.gp** %svu_gp633, align 8
  %add.ptr634 = getelementptr inbounds %struct.gp, %struct.gp* %365, i64 0
  %gp_sv635 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr634, i32 0, i32 0
  %366 = load %struct.sv*, %struct.sv** %gp_sv635, align 8
  %tobool636 = icmp ne %struct.sv* %366, null
  br i1 %tobool636, label %cond.true637, label %cond.false642

cond.true637:                                     ; preds = %magicalize
  %367 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_u638 = getelementptr inbounds %struct.gv, %struct.gv* %367, i32 0, i32 3
  %svu_gp639 = bitcast %union.anon.6* %sv_u638 to %struct.gp**
  %368 = load %struct.gp*, %struct.gp** %svu_gp639, align 8
  %add.ptr640 = getelementptr inbounds %struct.gp, %struct.gp* %368, i64 0
  %gp_sv641 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr640, i32 0, i32 0
  br label %cond.end648

cond.false642:                                    ; preds = %magicalize
  %369 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %call643 = call %struct.gv* @Perl_gv_add_by_type(%struct.gv* %369, i32 0)
  %sv_u644 = getelementptr inbounds %struct.gv, %struct.gv* %call643, i32 0, i32 3
  %svu_gp645 = bitcast %union.anon.6* %sv_u644 to %struct.gp**
  %370 = load %struct.gp*, %struct.gp** %svu_gp645, align 8
  %add.ptr646 = getelementptr inbounds %struct.gp, %struct.gp* %370, i64 0
  %gp_sv647 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr646, i32 0, i32 0
  br label %cond.end648

cond.end648:                                      ; preds = %cond.false642, %cond.true637
  %cond649 = phi %struct.sv** [ %gp_sv641, %cond.true637 ], [ %gp_sv647, %cond.false642 ]
  %371 = load %struct.sv*, %struct.sv** %cond649, align 8
  %372 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %373 = bitcast %struct.gv* %372 to i8*
  %374 = bitcast i8* %373 to %struct.sv*
  %375 = load i8*, i8** %name.addr, align 8
  %376 = load i64, i64* %len.addr, align 8
  %conv650 = trunc i64 %376 to i32
  call void @Perl_sv_magic(%struct.sv* %371, %struct.sv* %374, i32 0, i8* %375, i32 %conv650)
  br label %sw.epilog734

sw.bb651:                                         ; preds = %if.else378
  %377 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_u652 = getelementptr inbounds %struct.gv, %struct.gv* %377, i32 0, i32 3
  %svu_gp653 = bitcast %union.anon.6* %sv_u652 to %struct.gp**
  %378 = load %struct.gp*, %struct.gp** %svu_gp653, align 8
  %add.ptr654 = getelementptr inbounds %struct.gp, %struct.gp* %378, i64 0
  %gp_sv655 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr654, i32 0, i32 0
  %379 = load %struct.sv*, %struct.sv** %gp_sv655, align 8
  %tobool656 = icmp ne %struct.sv* %379, null
  br i1 %tobool656, label %cond.true657, label %cond.false662

cond.true657:                                     ; preds = %sw.bb651
  %380 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_u658 = getelementptr inbounds %struct.gv, %struct.gv* %380, i32 0, i32 3
  %svu_gp659 = bitcast %union.anon.6* %sv_u658 to %struct.gp**
  %381 = load %struct.gp*, %struct.gp** %svu_gp659, align 8
  %add.ptr660 = getelementptr inbounds %struct.gp, %struct.gp* %381, i64 0
  %gp_sv661 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr660, i32 0, i32 0
  br label %cond.end668

cond.false662:                                    ; preds = %sw.bb651
  %382 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %call663 = call %struct.gv* @Perl_gv_add_by_type(%struct.gv* %382, i32 0)
  %sv_u664 = getelementptr inbounds %struct.gv, %struct.gv* %call663, i32 0, i32 3
  %svu_gp665 = bitcast %union.anon.6* %sv_u664 to %struct.gp**
  %383 = load %struct.gp*, %struct.gp** %svu_gp665, align 8
  %add.ptr666 = getelementptr inbounds %struct.gp, %struct.gp* %383, i64 0
  %gp_sv667 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr666, i32 0, i32 0
  br label %cond.end668

cond.end668:                                      ; preds = %cond.false662, %cond.true657
  %cond669 = phi %struct.sv** [ %gp_sv661, %cond.true657 ], [ %gp_sv667, %cond.false662 ]
  %384 = load %struct.sv*, %struct.sv** %cond669, align 8
  call void @Perl_sv_setpvn(%struct.sv* %384, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.87, i64 0, i64 0), i64 1)
  br label %sw.epilog734

sw.bb670:                                         ; preds = %if.else378
  %385 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_u671 = getelementptr inbounds %struct.gv, %struct.gv* %385, i32 0, i32 3
  %svu_gp672 = bitcast %union.anon.6* %sv_u671 to %struct.gp**
  %386 = load %struct.gp*, %struct.gp** %svu_gp672, align 8
  %add.ptr673 = getelementptr inbounds %struct.gp, %struct.gp* %386, i64 0
  %gp_sv674 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr673, i32 0, i32 0
  %387 = load %struct.sv*, %struct.sv** %gp_sv674, align 8
  %tobool675 = icmp ne %struct.sv* %387, null
  br i1 %tobool675, label %cond.true676, label %cond.false681

cond.true676:                                     ; preds = %sw.bb670
  %388 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_u677 = getelementptr inbounds %struct.gv, %struct.gv* %388, i32 0, i32 3
  %svu_gp678 = bitcast %union.anon.6* %sv_u677 to %struct.gp**
  %389 = load %struct.gp*, %struct.gp** %svu_gp678, align 8
  %add.ptr679 = getelementptr inbounds %struct.gp, %struct.gp* %389, i64 0
  %gp_sv680 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr679, i32 0, i32 0
  br label %cond.end687

cond.false681:                                    ; preds = %sw.bb670
  %390 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %call682 = call %struct.gv* @Perl_gv_add_by_type(%struct.gv* %390, i32 0)
  %sv_u683 = getelementptr inbounds %struct.gv, %struct.gv* %call682, i32 0, i32 3
  %svu_gp684 = bitcast %union.anon.6* %sv_u683 to %struct.gp**
  %391 = load %struct.gp*, %struct.gp** %svu_gp684, align 8
  %add.ptr685 = getelementptr inbounds %struct.gp, %struct.gp* %391, i64 0
  %gp_sv686 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr685, i32 0, i32 0
  br label %cond.end687

cond.end687:                                      ; preds = %cond.false681, %cond.true676
  %cond688 = phi %struct.sv** [ %gp_sv680, %cond.true676 ], [ %gp_sv686, %cond.false681 ]
  %392 = load %struct.sv*, %struct.sv** %cond688, align 8
  call void @Perl_sv_setpvn(%struct.sv* %392, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.88, i64 0, i64 0), i64 1)
  br label %sw.epilog734

sw.bb689:                                         ; preds = %if.else378
  %393 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_u690 = getelementptr inbounds %struct.gv, %struct.gv* %393, i32 0, i32 3
  %svu_gp691 = bitcast %union.anon.6* %sv_u690 to %struct.gp**
  %394 = load %struct.gp*, %struct.gp** %svu_gp691, align 8
  %add.ptr692 = getelementptr inbounds %struct.gp, %struct.gp* %394, i64 0
  %gp_sv693 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr692, i32 0, i32 0
  %395 = load %struct.sv*, %struct.sv** %gp_sv693, align 8
  store %struct.sv* %395, %struct.sv** %sv, align 8
  %396 = load %struct.sv*, %struct.sv** @PL_patchlevel, align 8
  %call694 = call zeroext i1 @Perl_sv_derived_from(%struct.sv* %396, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.89, i64 0, i64 0))
  br i1 %call694, label %if.end697, label %if.then695

if.then695:                                       ; preds = %sw.bb689
  %397 = load %struct.sv*, %struct.sv** @PL_patchlevel, align 8
  %call696 = call %struct.sv* @Perl_upg_version(%struct.sv* %397, i1 zeroext true)
  br label %if.end697

if.end697:                                        ; preds = %if.then695, %sw.bb689
  %398 = load %struct.sv*, %struct.sv** @PL_patchlevel, align 8
  %call698 = call %struct.sv* @Perl_vnumify(%struct.sv* %398)
  %399 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_u699 = getelementptr inbounds %struct.gv, %struct.gv* %399, i32 0, i32 3
  %svu_gp700 = bitcast %union.anon.6* %sv_u699 to %struct.gp**
  %400 = load %struct.gp*, %struct.gp** %svu_gp700, align 8
  %add.ptr701 = getelementptr inbounds %struct.gp, %struct.gp* %400, i64 0
  %gp_sv702 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr701, i32 0, i32 0
  store %struct.sv* %call698, %struct.sv** %gp_sv702, align 8
  %401 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_u703 = getelementptr inbounds %struct.gv, %struct.gv* %401, i32 0, i32 3
  %svu_gp704 = bitcast %union.anon.6* %sv_u703 to %struct.gp**
  %402 = load %struct.gp*, %struct.gp** %svu_gp704, align 8
  %add.ptr705 = getelementptr inbounds %struct.gp, %struct.gp* %402, i64 0
  %gp_sv706 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr705, i32 0, i32 0
  %403 = load %struct.sv*, %struct.sv** %gp_sv706, align 8
  %sv_flags707 = getelementptr inbounds %struct.sv, %struct.sv* %403, i32 0, i32 2
  %404 = load i32, i32* %sv_flags707, align 4
  %or708 = or i32 %404, 134217728
  store i32 %or708, i32* %sv_flags707, align 4
  %405 = load %struct.sv*, %struct.sv** %sv, align 8
  %406 = bitcast %struct.sv* %405 to i8*
  %407 = bitcast i8* %406 to %struct.sv*
  call void @S_SvREFCNT_dec(%struct.sv* %407)
  br label %sw.epilog734

sw.bb709:                                         ; preds = %if.else378
  %408 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_u711 = getelementptr inbounds %struct.gv, %struct.gv* %408, i32 0, i32 3
  %svu_gp712 = bitcast %union.anon.6* %sv_u711 to %struct.gp**
  %409 = load %struct.gp*, %struct.gp** %svu_gp712, align 8
  %add.ptr713 = getelementptr inbounds %struct.gp, %struct.gp* %409, i64 0
  %gp_sv714 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr713, i32 0, i32 0
  %410 = load %struct.sv*, %struct.sv** %gp_sv714, align 8
  store %struct.sv* %410, %struct.sv** %sv710, align 8
  %411 = load %struct.sv*, %struct.sv** @PL_patchlevel, align 8
  %call715 = call %struct.sv* @Perl_new_version(%struct.sv* %411)
  %412 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_u716 = getelementptr inbounds %struct.gv, %struct.gv* %412, i32 0, i32 3
  %svu_gp717 = bitcast %union.anon.6* %sv_u716 to %struct.gp**
  %413 = load %struct.gp*, %struct.gp** %svu_gp717, align 8
  %add.ptr718 = getelementptr inbounds %struct.gp, %struct.gp* %413, i64 0
  %gp_sv719 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr718, i32 0, i32 0
  store %struct.sv* %call715, %struct.sv** %gp_sv719, align 8
  %414 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_u720 = getelementptr inbounds %struct.gv, %struct.gv* %414, i32 0, i32 3
  %svu_gp721 = bitcast %union.anon.6* %sv_u720 to %struct.gp**
  %415 = load %struct.gp*, %struct.gp** %svu_gp721, align 8
  %add.ptr722 = getelementptr inbounds %struct.gp, %struct.gp* %415, i64 0
  %gp_sv723 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr722, i32 0, i32 0
  %416 = load %struct.sv*, %struct.sv** %gp_sv723, align 8
  %sv_flags724 = getelementptr inbounds %struct.sv, %struct.sv* %416, i32 0, i32 2
  %417 = load i32, i32* %sv_flags724, align 4
  %or725 = or i32 %417, 134217728
  store i32 %or725, i32* %sv_flags724, align 4
  %418 = load %struct.sv*, %struct.sv** %sv710, align 8
  %419 = bitcast %struct.sv* %418 to i8*
  %420 = bitcast i8* %419 to %struct.sv*
  call void @S_SvREFCNT_dec(%struct.sv* %420)
  br label %sw.epilog734

sw.bb726:                                         ; preds = %if.else378, %if.else378
  %421 = load i32, i32* %sv_type.addr, align 4
  %cmp727 = icmp eq i32 %421, 3
  br i1 %cmp727, label %if.then729, label %if.end733

if.then729:                                       ; preds = %sw.bb726
  %422 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_any730 = getelementptr inbounds %struct.gv, %struct.gv* %422, i32 0, i32 0
  %423 = load %struct.xpvgv*, %struct.xpvgv** %sv_any730, align 8
  %xpv_cur731 = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %423, i32 0, i32 2
  %424 = load i64, i64* %xpv_cur731, align 8
  %or732 = or i64 %424, 2
  store i64 %or732, i64* %xpv_cur731, align 8
  br label %if.end733

if.end733:                                        ; preds = %if.then729, %sw.bb726
  br label %sw.epilog734

sw.epilog734:                                     ; preds = %if.end733, %if.else378, %sw.bb709, %if.end697, %cond.end687, %cond.end668, %cond.end648, %if.end609, %if.end542, %if.end536, %if.end455, %cond.end401
  br label %if.end735

if.end735:                                        ; preds = %sw.epilog734, %if.end377
  br label %if.end736

if.end736:                                        ; preds = %if.end735, %if.end173
  %425 = load i8, i8* %addmg.addr, align 1
  %tobool737 = trunc i8 %425 to i1
  store i1 %tobool737, i1* %retval, align 1
  br label %return

return:                                           ; preds = %if.end736, %if.then371, %sw.epilog
  %426 = load i1, i1* %retval, align 1
  ret i1 %426
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @Perl_gv_fullname4(%struct.sv* %sv, %struct.gv* %gv, i8* %prefix, i1 zeroext %keepmain) #0 {
entry:
  %sv.addr = alloca %struct.sv*, align 8
  %gv.addr = alloca %struct.gv*, align 8
  %prefix.addr = alloca i8*, align 8
  %keepmain.addr = alloca i8, align 1
  %name = alloca i8*, align 8
  %hv = alloca %struct.hv*, align 8
  %len = alloca i64, align 8
  store %struct.sv* %sv, %struct.sv** %sv.addr, align 8
  store %struct.gv* %gv, %struct.gv** %gv.addr, align 8
  store i8* %prefix, i8** %prefix.addr, align 8
  %frombool = zext i1 %keepmain to i8
  store i8 %frombool, i8* %keepmain.addr, align 1
  %0 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_any = getelementptr inbounds %struct.gv, %struct.gv* %0, i32 0, i32 0
  %1 = load %struct.xpvgv*, %struct.xpvgv** %sv_any, align 8
  %xnv_u = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %1, i32 0, i32 5
  %xgv_stash = bitcast %union._xnvu* %xnv_u to %struct.hv**
  %2 = load %struct.hv*, %struct.hv** %xgv_stash, align 8
  store %struct.hv* %2, %struct.hv** %hv, align 8
  %3 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %4 = load i8*, i8** %prefix.addr, align 8
  %tobool = icmp ne i8* %4, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %5 = load i8*, i8** %prefix.addr, align 8
  br label %cond.end

cond.false:                                       ; preds = %entry
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %5, %cond.true ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.7, i64 0, i64 0), %cond.false ]
  call void @Perl_sv_setpv(%struct.sv* %3, i8* %cond)
  %6 = load %struct.hv*, %struct.hv** %hv, align 8
  %tobool1 = icmp ne %struct.hv* %6, null
  br i1 %tobool1, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %cond.end
  %7 = load %struct.hv*, %struct.hv** %hv, align 8
  %sv_flags = getelementptr inbounds %struct.hv, %struct.hv* %7, i32 0, i32 2
  %8 = load i32, i32* %sv_flags, align 4
  %and = and i32 %8, 33554432
  %tobool2 = icmp ne i32 %and, 0
  br i1 %tobool2, label %land.lhs.true3, label %cond.false62

land.lhs.true3:                                   ; preds = %land.lhs.true
  %9 = load %struct.hv*, %struct.hv** %hv, align 8
  %sv_u = getelementptr inbounds %struct.hv, %struct.hv* %9, i32 0, i32 3
  %svu_hash = bitcast %union.anon.4* %sv_u to %struct.he***
  %10 = load %struct.he**, %struct.he*** %svu_hash, align 8
  %11 = load %struct.hv*, %struct.hv** %hv, align 8
  %sv_any4 = getelementptr inbounds %struct.hv, %struct.hv* %11, i32 0, i32 0
  %12 = load %struct.xpvhv*, %struct.xpvhv** %sv_any4, align 8
  %xhv_max = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %12, i32 0, i32 3
  %13 = load i64, i64* %xhv_max, align 8
  %add = add i64 %13, 1
  %arrayidx = getelementptr inbounds %struct.he*, %struct.he** %10, i64 %add
  %14 = bitcast %struct.he** %arrayidx to %struct.xpvhv_aux*
  %xhv_name_u = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %14, i32 0, i32 0
  %xhvnameu_name = bitcast %union._xhvnameu* %xhv_name_u to %struct.hek**
  %15 = load %struct.hek*, %struct.hek** %xhvnameu_name, align 8
  %tobool5 = icmp ne %struct.hek* %15, null
  br i1 %tobool5, label %land.lhs.true6, label %cond.false62

land.lhs.true6:                                   ; preds = %land.lhs.true3
  %16 = load %struct.hv*, %struct.hv** %hv, align 8
  %sv_u7 = getelementptr inbounds %struct.hv, %struct.hv* %16, i32 0, i32 3
  %svu_hash8 = bitcast %union.anon.4* %sv_u7 to %struct.he***
  %17 = load %struct.he**, %struct.he*** %svu_hash8, align 8
  %18 = load %struct.hv*, %struct.hv** %hv, align 8
  %sv_any9 = getelementptr inbounds %struct.hv, %struct.hv* %18, i32 0, i32 0
  %19 = load %struct.xpvhv*, %struct.xpvhv** %sv_any9, align 8
  %xhv_max10 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %19, i32 0, i32 3
  %20 = load i64, i64* %xhv_max10, align 8
  %add11 = add i64 %20, 1
  %arrayidx12 = getelementptr inbounds %struct.he*, %struct.he** %17, i64 %add11
  %21 = bitcast %struct.he** %arrayidx12 to %struct.xpvhv_aux*
  %xhv_name_count = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %21, i32 0, i32 4
  %22 = load i32, i32* %xhv_name_count, align 4
  %tobool13 = icmp ne i32 %22, 0
  br i1 %tobool13, label %cond.true14, label %cond.false23

cond.true14:                                      ; preds = %land.lhs.true6
  %23 = load %struct.hv*, %struct.hv** %hv, align 8
  %sv_u15 = getelementptr inbounds %struct.hv, %struct.hv* %23, i32 0, i32 3
  %svu_hash16 = bitcast %union.anon.4* %sv_u15 to %struct.he***
  %24 = load %struct.he**, %struct.he*** %svu_hash16, align 8
  %25 = load %struct.hv*, %struct.hv** %hv, align 8
  %sv_any17 = getelementptr inbounds %struct.hv, %struct.hv* %25, i32 0, i32 0
  %26 = load %struct.xpvhv*, %struct.xpvhv** %sv_any17, align 8
  %xhv_max18 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %26, i32 0, i32 3
  %27 = load i64, i64* %xhv_max18, align 8
  %add19 = add i64 %27, 1
  %arrayidx20 = getelementptr inbounds %struct.he*, %struct.he** %24, i64 %add19
  %28 = bitcast %struct.he** %arrayidx20 to %struct.xpvhv_aux*
  %xhv_name_u21 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %28, i32 0, i32 0
  %xhvnameu_names = bitcast %union._xhvnameu* %xhv_name_u21 to %struct.hek***
  %29 = load %struct.hek**, %struct.hek*** %xhvnameu_names, align 8
  %30 = load %struct.hek*, %struct.hek** %29, align 8
  %tobool22 = icmp ne %struct.hek* %30, null
  br i1 %tobool22, label %cond.true33, label %cond.false62

cond.false23:                                     ; preds = %land.lhs.true6
  %31 = load %struct.hv*, %struct.hv** %hv, align 8
  %sv_u24 = getelementptr inbounds %struct.hv, %struct.hv* %31, i32 0, i32 3
  %svu_hash25 = bitcast %union.anon.4* %sv_u24 to %struct.he***
  %32 = load %struct.he**, %struct.he*** %svu_hash25, align 8
  %33 = load %struct.hv*, %struct.hv** %hv, align 8
  %sv_any26 = getelementptr inbounds %struct.hv, %struct.hv* %33, i32 0, i32 0
  %34 = load %struct.xpvhv*, %struct.xpvhv** %sv_any26, align 8
  %xhv_max27 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %34, i32 0, i32 3
  %35 = load i64, i64* %xhv_max27, align 8
  %add28 = add i64 %35, 1
  %arrayidx29 = getelementptr inbounds %struct.he*, %struct.he** %32, i64 %add28
  %36 = bitcast %struct.he** %arrayidx29 to %struct.xpvhv_aux*
  %xhv_name_u30 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %36, i32 0, i32 0
  %xhvnameu_name31 = bitcast %union._xhvnameu* %xhv_name_u30 to %struct.hek**
  %37 = load %struct.hek*, %struct.hek** %xhvnameu_name31, align 8
  %tobool32 = icmp ne %struct.hek* %37, null
  br i1 %tobool32, label %cond.true33, label %cond.false62

cond.true33:                                      ; preds = %cond.false23, %cond.true14
  %38 = load %struct.hv*, %struct.hv** %hv, align 8
  %sv_u34 = getelementptr inbounds %struct.hv, %struct.hv* %38, i32 0, i32 3
  %svu_hash35 = bitcast %union.anon.4* %sv_u34 to %struct.he***
  %39 = load %struct.he**, %struct.he*** %svu_hash35, align 8
  %40 = load %struct.hv*, %struct.hv** %hv, align 8
  %sv_any36 = getelementptr inbounds %struct.hv, %struct.hv* %40, i32 0, i32 0
  %41 = load %struct.xpvhv*, %struct.xpvhv** %sv_any36, align 8
  %xhv_max37 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %41, i32 0, i32 3
  %42 = load i64, i64* %xhv_max37, align 8
  %add38 = add i64 %42, 1
  %arrayidx39 = getelementptr inbounds %struct.he*, %struct.he** %39, i64 %add38
  %43 = bitcast %struct.he** %arrayidx39 to %struct.xpvhv_aux*
  %xhv_name_count40 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %43, i32 0, i32 4
  %44 = load i32, i32* %xhv_name_count40, align 4
  %tobool41 = icmp ne i32 %44, 0
  br i1 %tobool41, label %cond.true42, label %cond.false51

cond.true42:                                      ; preds = %cond.true33
  %45 = load %struct.hv*, %struct.hv** %hv, align 8
  %sv_u43 = getelementptr inbounds %struct.hv, %struct.hv* %45, i32 0, i32 3
  %svu_hash44 = bitcast %union.anon.4* %sv_u43 to %struct.he***
  %46 = load %struct.he**, %struct.he*** %svu_hash44, align 8
  %47 = load %struct.hv*, %struct.hv** %hv, align 8
  %sv_any45 = getelementptr inbounds %struct.hv, %struct.hv* %47, i32 0, i32 0
  %48 = load %struct.xpvhv*, %struct.xpvhv** %sv_any45, align 8
  %xhv_max46 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %48, i32 0, i32 3
  %49 = load i64, i64* %xhv_max46, align 8
  %add47 = add i64 %49, 1
  %arrayidx48 = getelementptr inbounds %struct.he*, %struct.he** %46, i64 %add47
  %50 = bitcast %struct.he** %arrayidx48 to %struct.xpvhv_aux*
  %xhv_name_u49 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %50, i32 0, i32 0
  %xhvnameu_names50 = bitcast %union._xhvnameu* %xhv_name_u49 to %struct.hek***
  %51 = load %struct.hek**, %struct.hek*** %xhvnameu_names50, align 8
  %52 = load %struct.hek*, %struct.hek** %51, align 8
  br label %cond.end60

cond.false51:                                     ; preds = %cond.true33
  %53 = load %struct.hv*, %struct.hv** %hv, align 8
  %sv_u52 = getelementptr inbounds %struct.hv, %struct.hv* %53, i32 0, i32 3
  %svu_hash53 = bitcast %union.anon.4* %sv_u52 to %struct.he***
  %54 = load %struct.he**, %struct.he*** %svu_hash53, align 8
  %55 = load %struct.hv*, %struct.hv** %hv, align 8
  %sv_any54 = getelementptr inbounds %struct.hv, %struct.hv* %55, i32 0, i32 0
  %56 = load %struct.xpvhv*, %struct.xpvhv** %sv_any54, align 8
  %xhv_max55 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %56, i32 0, i32 3
  %57 = load i64, i64* %xhv_max55, align 8
  %add56 = add i64 %57, 1
  %arrayidx57 = getelementptr inbounds %struct.he*, %struct.he** %54, i64 %add56
  %58 = bitcast %struct.he** %arrayidx57 to %struct.xpvhv_aux*
  %xhv_name_u58 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %58, i32 0, i32 0
  %xhvnameu_name59 = bitcast %union._xhvnameu* %xhv_name_u58 to %struct.hek**
  %59 = load %struct.hek*, %struct.hek** %xhvnameu_name59, align 8
  br label %cond.end60

cond.end60:                                       ; preds = %cond.false51, %cond.true42
  %cond61 = phi %struct.hek* [ %52, %cond.true42 ], [ %59, %cond.false51 ]
  %hek_key = getelementptr inbounds %struct.hek, %struct.hek* %cond61, i32 0, i32 2
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %hek_key, i64 0, i64 0
  br label %cond.end63

cond.false62:                                     ; preds = %cond.false23, %cond.true14, %land.lhs.true3, %land.lhs.true
  br label %cond.end63

cond.end63:                                       ; preds = %cond.false62, %cond.end60
  %cond64 = phi i8* [ %arraydecay, %cond.end60 ], [ null, %cond.false62 ]
  store i8* %cond64, i8** %name, align 8
  %tobool65 = icmp ne i8* %cond64, null
  br i1 %tobool65, label %if.then, label %if.else

if.then:                                          ; preds = %cond.end63
  %60 = load %struct.hv*, %struct.hv** %hv, align 8
  %sv_flags66 = getelementptr inbounds %struct.hv, %struct.hv* %60, i32 0, i32 2
  %61 = load i32, i32* %sv_flags66, align 4
  %and67 = and i32 %61, 33554432
  %tobool68 = icmp ne i32 %and67, 0
  br i1 %tobool68, label %land.lhs.true69, label %cond.false137

land.lhs.true69:                                  ; preds = %if.then
  %62 = load %struct.hv*, %struct.hv** %hv, align 8
  %sv_u70 = getelementptr inbounds %struct.hv, %struct.hv* %62, i32 0, i32 3
  %svu_hash71 = bitcast %union.anon.4* %sv_u70 to %struct.he***
  %63 = load %struct.he**, %struct.he*** %svu_hash71, align 8
  %64 = load %struct.hv*, %struct.hv** %hv, align 8
  %sv_any72 = getelementptr inbounds %struct.hv, %struct.hv* %64, i32 0, i32 0
  %65 = load %struct.xpvhv*, %struct.xpvhv** %sv_any72, align 8
  %xhv_max73 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %65, i32 0, i32 3
  %66 = load i64, i64* %xhv_max73, align 8
  %add74 = add i64 %66, 1
  %arrayidx75 = getelementptr inbounds %struct.he*, %struct.he** %63, i64 %add74
  %67 = bitcast %struct.he** %arrayidx75 to %struct.xpvhv_aux*
  %xhv_name_u76 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %67, i32 0, i32 0
  %xhvnameu_name77 = bitcast %union._xhvnameu* %xhv_name_u76 to %struct.hek**
  %68 = load %struct.hek*, %struct.hek** %xhvnameu_name77, align 8
  %tobool78 = icmp ne %struct.hek* %68, null
  br i1 %tobool78, label %land.lhs.true79, label %cond.false137

land.lhs.true79:                                  ; preds = %land.lhs.true69
  %69 = load %struct.hv*, %struct.hv** %hv, align 8
  %sv_u80 = getelementptr inbounds %struct.hv, %struct.hv* %69, i32 0, i32 3
  %svu_hash81 = bitcast %union.anon.4* %sv_u80 to %struct.he***
  %70 = load %struct.he**, %struct.he*** %svu_hash81, align 8
  %71 = load %struct.hv*, %struct.hv** %hv, align 8
  %sv_any82 = getelementptr inbounds %struct.hv, %struct.hv* %71, i32 0, i32 0
  %72 = load %struct.xpvhv*, %struct.xpvhv** %sv_any82, align 8
  %xhv_max83 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %72, i32 0, i32 3
  %73 = load i64, i64* %xhv_max83, align 8
  %add84 = add i64 %73, 1
  %arrayidx85 = getelementptr inbounds %struct.he*, %struct.he** %70, i64 %add84
  %74 = bitcast %struct.he** %arrayidx85 to %struct.xpvhv_aux*
  %xhv_name_count86 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %74, i32 0, i32 4
  %75 = load i32, i32* %xhv_name_count86, align 4
  %tobool87 = icmp ne i32 %75, 0
  br i1 %tobool87, label %cond.true88, label %cond.false98

cond.true88:                                      ; preds = %land.lhs.true79
  %76 = load %struct.hv*, %struct.hv** %hv, align 8
  %sv_u89 = getelementptr inbounds %struct.hv, %struct.hv* %76, i32 0, i32 3
  %svu_hash90 = bitcast %union.anon.4* %sv_u89 to %struct.he***
  %77 = load %struct.he**, %struct.he*** %svu_hash90, align 8
  %78 = load %struct.hv*, %struct.hv** %hv, align 8
  %sv_any91 = getelementptr inbounds %struct.hv, %struct.hv* %78, i32 0, i32 0
  %79 = load %struct.xpvhv*, %struct.xpvhv** %sv_any91, align 8
  %xhv_max92 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %79, i32 0, i32 3
  %80 = load i64, i64* %xhv_max92, align 8
  %add93 = add i64 %80, 1
  %arrayidx94 = getelementptr inbounds %struct.he*, %struct.he** %77, i64 %add93
  %81 = bitcast %struct.he** %arrayidx94 to %struct.xpvhv_aux*
  %xhv_name_u95 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %81, i32 0, i32 0
  %xhvnameu_names96 = bitcast %union._xhvnameu* %xhv_name_u95 to %struct.hek***
  %82 = load %struct.hek**, %struct.hek*** %xhvnameu_names96, align 8
  %83 = load %struct.hek*, %struct.hek** %82, align 8
  %tobool97 = icmp ne %struct.hek* %83, null
  br i1 %tobool97, label %cond.true108, label %cond.false137

cond.false98:                                     ; preds = %land.lhs.true79
  %84 = load %struct.hv*, %struct.hv** %hv, align 8
  %sv_u99 = getelementptr inbounds %struct.hv, %struct.hv* %84, i32 0, i32 3
  %svu_hash100 = bitcast %union.anon.4* %sv_u99 to %struct.he***
  %85 = load %struct.he**, %struct.he*** %svu_hash100, align 8
  %86 = load %struct.hv*, %struct.hv** %hv, align 8
  %sv_any101 = getelementptr inbounds %struct.hv, %struct.hv* %86, i32 0, i32 0
  %87 = load %struct.xpvhv*, %struct.xpvhv** %sv_any101, align 8
  %xhv_max102 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %87, i32 0, i32 3
  %88 = load i64, i64* %xhv_max102, align 8
  %add103 = add i64 %88, 1
  %arrayidx104 = getelementptr inbounds %struct.he*, %struct.he** %85, i64 %add103
  %89 = bitcast %struct.he** %arrayidx104 to %struct.xpvhv_aux*
  %xhv_name_u105 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %89, i32 0, i32 0
  %xhvnameu_name106 = bitcast %union._xhvnameu* %xhv_name_u105 to %struct.hek**
  %90 = load %struct.hek*, %struct.hek** %xhvnameu_name106, align 8
  %tobool107 = icmp ne %struct.hek* %90, null
  br i1 %tobool107, label %cond.true108, label %cond.false137

cond.true108:                                     ; preds = %cond.false98, %cond.true88
  %91 = load %struct.hv*, %struct.hv** %hv, align 8
  %sv_u109 = getelementptr inbounds %struct.hv, %struct.hv* %91, i32 0, i32 3
  %svu_hash110 = bitcast %union.anon.4* %sv_u109 to %struct.he***
  %92 = load %struct.he**, %struct.he*** %svu_hash110, align 8
  %93 = load %struct.hv*, %struct.hv** %hv, align 8
  %sv_any111 = getelementptr inbounds %struct.hv, %struct.hv* %93, i32 0, i32 0
  %94 = load %struct.xpvhv*, %struct.xpvhv** %sv_any111, align 8
  %xhv_max112 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %94, i32 0, i32 3
  %95 = load i64, i64* %xhv_max112, align 8
  %add113 = add i64 %95, 1
  %arrayidx114 = getelementptr inbounds %struct.he*, %struct.he** %92, i64 %add113
  %96 = bitcast %struct.he** %arrayidx114 to %struct.xpvhv_aux*
  %xhv_name_count115 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %96, i32 0, i32 4
  %97 = load i32, i32* %xhv_name_count115, align 4
  %tobool116 = icmp ne i32 %97, 0
  br i1 %tobool116, label %cond.true117, label %cond.false126

cond.true117:                                     ; preds = %cond.true108
  %98 = load %struct.hv*, %struct.hv** %hv, align 8
  %sv_u118 = getelementptr inbounds %struct.hv, %struct.hv* %98, i32 0, i32 3
  %svu_hash119 = bitcast %union.anon.4* %sv_u118 to %struct.he***
  %99 = load %struct.he**, %struct.he*** %svu_hash119, align 8
  %100 = load %struct.hv*, %struct.hv** %hv, align 8
  %sv_any120 = getelementptr inbounds %struct.hv, %struct.hv* %100, i32 0, i32 0
  %101 = load %struct.xpvhv*, %struct.xpvhv** %sv_any120, align 8
  %xhv_max121 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %101, i32 0, i32 3
  %102 = load i64, i64* %xhv_max121, align 8
  %add122 = add i64 %102, 1
  %arrayidx123 = getelementptr inbounds %struct.he*, %struct.he** %99, i64 %add122
  %103 = bitcast %struct.he** %arrayidx123 to %struct.xpvhv_aux*
  %xhv_name_u124 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %103, i32 0, i32 0
  %xhvnameu_names125 = bitcast %union._xhvnameu* %xhv_name_u124 to %struct.hek***
  %104 = load %struct.hek**, %struct.hek*** %xhvnameu_names125, align 8
  %105 = load %struct.hek*, %struct.hek** %104, align 8
  br label %cond.end135

cond.false126:                                    ; preds = %cond.true108
  %106 = load %struct.hv*, %struct.hv** %hv, align 8
  %sv_u127 = getelementptr inbounds %struct.hv, %struct.hv* %106, i32 0, i32 3
  %svu_hash128 = bitcast %union.anon.4* %sv_u127 to %struct.he***
  %107 = load %struct.he**, %struct.he*** %svu_hash128, align 8
  %108 = load %struct.hv*, %struct.hv** %hv, align 8
  %sv_any129 = getelementptr inbounds %struct.hv, %struct.hv* %108, i32 0, i32 0
  %109 = load %struct.xpvhv*, %struct.xpvhv** %sv_any129, align 8
  %xhv_max130 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %109, i32 0, i32 3
  %110 = load i64, i64* %xhv_max130, align 8
  %add131 = add i64 %110, 1
  %arrayidx132 = getelementptr inbounds %struct.he*, %struct.he** %107, i64 %add131
  %111 = bitcast %struct.he** %arrayidx132 to %struct.xpvhv_aux*
  %xhv_name_u133 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %111, i32 0, i32 0
  %xhvnameu_name134 = bitcast %union._xhvnameu* %xhv_name_u133 to %struct.hek**
  %112 = load %struct.hek*, %struct.hek** %xhvnameu_name134, align 8
  br label %cond.end135

cond.end135:                                      ; preds = %cond.false126, %cond.true117
  %cond136 = phi %struct.hek* [ %105, %cond.true117 ], [ %112, %cond.false126 ]
  %hek_len = getelementptr inbounds %struct.hek, %struct.hek* %cond136, i32 0, i32 1
  %113 = load i32, i32* %hek_len, align 4
  br label %cond.end138

cond.false137:                                    ; preds = %cond.false98, %cond.true88, %land.lhs.true69, %if.then
  br label %cond.end138

cond.end138:                                      ; preds = %cond.false137, %cond.end135
  %cond139 = phi i32 [ %113, %cond.end135 ], [ 0, %cond.false137 ]
  %conv = sext i32 %cond139 to i64
  store i64 %conv, i64* %len, align 8
  %114 = load i8, i8* %keepmain.addr, align 1
  %tobool140 = trunc i8 %114 to i1
  br i1 %tobool140, label %if.then143, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %cond.end138
  %115 = load i8*, i8** %name, align 8
  %116 = load i64, i64* %len, align 8
  %call = call i32 @strncmp(i8* %115, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.21, i64 0, i64 0), i64 %116) #4
  %tobool142 = icmp ne i32 %call, 0
  br i1 %tobool142, label %if.then143, label %if.end

if.then143:                                       ; preds = %lor.lhs.false, %cond.end138
  %117 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %118 = load i8*, i8** %name, align 8
  %119 = load i64, i64* %len, align 8
  %120 = load %struct.hv*, %struct.hv** %hv, align 8
  %sv_flags144 = getelementptr inbounds %struct.hv, %struct.hv* %120, i32 0, i32 2
  %121 = load i32, i32* %sv_flags144, align 4
  %and145 = and i32 %121, 33554432
  %tobool146 = icmp ne i32 %and145, 0
  br i1 %tobool146, label %land.lhs.true147, label %cond.false249

land.lhs.true147:                                 ; preds = %if.then143
  %122 = load %struct.hv*, %struct.hv** %hv, align 8
  %sv_u148 = getelementptr inbounds %struct.hv, %struct.hv* %122, i32 0, i32 3
  %svu_hash149 = bitcast %union.anon.4* %sv_u148 to %struct.he***
  %123 = load %struct.he**, %struct.he*** %svu_hash149, align 8
  %124 = load %struct.hv*, %struct.hv** %hv, align 8
  %sv_any150 = getelementptr inbounds %struct.hv, %struct.hv* %124, i32 0, i32 0
  %125 = load %struct.xpvhv*, %struct.xpvhv** %sv_any150, align 8
  %xhv_max151 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %125, i32 0, i32 3
  %126 = load i64, i64* %xhv_max151, align 8
  %add152 = add i64 %126, 1
  %arrayidx153 = getelementptr inbounds %struct.he*, %struct.he** %123, i64 %add152
  %127 = bitcast %struct.he** %arrayidx153 to %struct.xpvhv_aux*
  %xhv_name_u154 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %127, i32 0, i32 0
  %xhvnameu_name155 = bitcast %union._xhvnameu* %xhv_name_u154 to %struct.hek**
  %128 = load %struct.hek*, %struct.hek** %xhvnameu_name155, align 8
  %tobool156 = icmp ne %struct.hek* %128, null
  br i1 %tobool156, label %land.lhs.true157, label %cond.false249

land.lhs.true157:                                 ; preds = %land.lhs.true147
  %129 = load %struct.hv*, %struct.hv** %hv, align 8
  %sv_u158 = getelementptr inbounds %struct.hv, %struct.hv* %129, i32 0, i32 3
  %svu_hash159 = bitcast %union.anon.4* %sv_u158 to %struct.he***
  %130 = load %struct.he**, %struct.he*** %svu_hash159, align 8
  %131 = load %struct.hv*, %struct.hv** %hv, align 8
  %sv_any160 = getelementptr inbounds %struct.hv, %struct.hv* %131, i32 0, i32 0
  %132 = load %struct.xpvhv*, %struct.xpvhv** %sv_any160, align 8
  %xhv_max161 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %132, i32 0, i32 3
  %133 = load i64, i64* %xhv_max161, align 8
  %add162 = add i64 %133, 1
  %arrayidx163 = getelementptr inbounds %struct.he*, %struct.he** %130, i64 %add162
  %134 = bitcast %struct.he** %arrayidx163 to %struct.xpvhv_aux*
  %xhv_name_count164 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %134, i32 0, i32 4
  %135 = load i32, i32* %xhv_name_count164, align 4
  %tobool165 = icmp ne i32 %135, 0
  br i1 %tobool165, label %cond.true166, label %cond.false176

cond.true166:                                     ; preds = %land.lhs.true157
  %136 = load %struct.hv*, %struct.hv** %hv, align 8
  %sv_u167 = getelementptr inbounds %struct.hv, %struct.hv* %136, i32 0, i32 3
  %svu_hash168 = bitcast %union.anon.4* %sv_u167 to %struct.he***
  %137 = load %struct.he**, %struct.he*** %svu_hash168, align 8
  %138 = load %struct.hv*, %struct.hv** %hv, align 8
  %sv_any169 = getelementptr inbounds %struct.hv, %struct.hv* %138, i32 0, i32 0
  %139 = load %struct.xpvhv*, %struct.xpvhv** %sv_any169, align 8
  %xhv_max170 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %139, i32 0, i32 3
  %140 = load i64, i64* %xhv_max170, align 8
  %add171 = add i64 %140, 1
  %arrayidx172 = getelementptr inbounds %struct.he*, %struct.he** %137, i64 %add171
  %141 = bitcast %struct.he** %arrayidx172 to %struct.xpvhv_aux*
  %xhv_name_u173 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %141, i32 0, i32 0
  %xhvnameu_names174 = bitcast %union._xhvnameu* %xhv_name_u173 to %struct.hek***
  %142 = load %struct.hek**, %struct.hek*** %xhvnameu_names174, align 8
  %143 = load %struct.hek*, %struct.hek** %142, align 8
  %tobool175 = icmp ne %struct.hek* %143, null
  br i1 %tobool175, label %cond.true186, label %cond.false249

cond.false176:                                    ; preds = %land.lhs.true157
  %144 = load %struct.hv*, %struct.hv** %hv, align 8
  %sv_u177 = getelementptr inbounds %struct.hv, %struct.hv* %144, i32 0, i32 3
  %svu_hash178 = bitcast %union.anon.4* %sv_u177 to %struct.he***
  %145 = load %struct.he**, %struct.he*** %svu_hash178, align 8
  %146 = load %struct.hv*, %struct.hv** %hv, align 8
  %sv_any179 = getelementptr inbounds %struct.hv, %struct.hv* %146, i32 0, i32 0
  %147 = load %struct.xpvhv*, %struct.xpvhv** %sv_any179, align 8
  %xhv_max180 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %147, i32 0, i32 3
  %148 = load i64, i64* %xhv_max180, align 8
  %add181 = add i64 %148, 1
  %arrayidx182 = getelementptr inbounds %struct.he*, %struct.he** %145, i64 %add181
  %149 = bitcast %struct.he** %arrayidx182 to %struct.xpvhv_aux*
  %xhv_name_u183 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %149, i32 0, i32 0
  %xhvnameu_name184 = bitcast %union._xhvnameu* %xhv_name_u183 to %struct.hek**
  %150 = load %struct.hek*, %struct.hek** %xhvnameu_name184, align 8
  %tobool185 = icmp ne %struct.hek* %150, null
  br i1 %tobool185, label %cond.true186, label %cond.false249

cond.true186:                                     ; preds = %cond.false176, %cond.true166
  %151 = load %struct.hv*, %struct.hv** %hv, align 8
  %sv_u187 = getelementptr inbounds %struct.hv, %struct.hv* %151, i32 0, i32 3
  %svu_hash188 = bitcast %union.anon.4* %sv_u187 to %struct.he***
  %152 = load %struct.he**, %struct.he*** %svu_hash188, align 8
  %153 = load %struct.hv*, %struct.hv** %hv, align 8
  %sv_any189 = getelementptr inbounds %struct.hv, %struct.hv* %153, i32 0, i32 0
  %154 = load %struct.xpvhv*, %struct.xpvhv** %sv_any189, align 8
  %xhv_max190 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %154, i32 0, i32 3
  %155 = load i64, i64* %xhv_max190, align 8
  %add191 = add i64 %155, 1
  %arrayidx192 = getelementptr inbounds %struct.he*, %struct.he** %152, i64 %add191
  %156 = bitcast %struct.he** %arrayidx192 to %struct.xpvhv_aux*
  %xhv_name_count193 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %156, i32 0, i32 4
  %157 = load i32, i32* %xhv_name_count193, align 4
  %tobool194 = icmp ne i32 %157, 0
  br i1 %tobool194, label %cond.true195, label %cond.false204

cond.true195:                                     ; preds = %cond.true186
  %158 = load %struct.hv*, %struct.hv** %hv, align 8
  %sv_u196 = getelementptr inbounds %struct.hv, %struct.hv* %158, i32 0, i32 3
  %svu_hash197 = bitcast %union.anon.4* %sv_u196 to %struct.he***
  %159 = load %struct.he**, %struct.he*** %svu_hash197, align 8
  %160 = load %struct.hv*, %struct.hv** %hv, align 8
  %sv_any198 = getelementptr inbounds %struct.hv, %struct.hv* %160, i32 0, i32 0
  %161 = load %struct.xpvhv*, %struct.xpvhv** %sv_any198, align 8
  %xhv_max199 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %161, i32 0, i32 3
  %162 = load i64, i64* %xhv_max199, align 8
  %add200 = add i64 %162, 1
  %arrayidx201 = getelementptr inbounds %struct.he*, %struct.he** %159, i64 %add200
  %163 = bitcast %struct.he** %arrayidx201 to %struct.xpvhv_aux*
  %xhv_name_u202 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %163, i32 0, i32 0
  %xhvnameu_names203 = bitcast %union._xhvnameu* %xhv_name_u202 to %struct.hek***
  %164 = load %struct.hek**, %struct.hek*** %xhvnameu_names203, align 8
  %165 = load %struct.hek*, %struct.hek** %164, align 8
  br label %cond.end213

cond.false204:                                    ; preds = %cond.true186
  %166 = load %struct.hv*, %struct.hv** %hv, align 8
  %sv_u205 = getelementptr inbounds %struct.hv, %struct.hv* %166, i32 0, i32 3
  %svu_hash206 = bitcast %union.anon.4* %sv_u205 to %struct.he***
  %167 = load %struct.he**, %struct.he*** %svu_hash206, align 8
  %168 = load %struct.hv*, %struct.hv** %hv, align 8
  %sv_any207 = getelementptr inbounds %struct.hv, %struct.hv* %168, i32 0, i32 0
  %169 = load %struct.xpvhv*, %struct.xpvhv** %sv_any207, align 8
  %xhv_max208 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %169, i32 0, i32 3
  %170 = load i64, i64* %xhv_max208, align 8
  %add209 = add i64 %170, 1
  %arrayidx210 = getelementptr inbounds %struct.he*, %struct.he** %167, i64 %add209
  %171 = bitcast %struct.he** %arrayidx210 to %struct.xpvhv_aux*
  %xhv_name_u211 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %171, i32 0, i32 0
  %xhvnameu_name212 = bitcast %union._xhvnameu* %xhv_name_u211 to %struct.hek**
  %172 = load %struct.hek*, %struct.hek** %xhvnameu_name212, align 8
  br label %cond.end213

cond.end213:                                      ; preds = %cond.false204, %cond.true195
  %cond214 = phi %struct.hek* [ %165, %cond.true195 ], [ %172, %cond.false204 ]
  %hek_key215 = getelementptr inbounds %struct.hek, %struct.hek* %cond214, i32 0, i32 2
  %arraydecay216 = getelementptr inbounds [1 x i8], [1 x i8]* %hek_key215, i64 0, i64 0
  %173 = load %struct.hv*, %struct.hv** %hv, align 8
  %sv_u217 = getelementptr inbounds %struct.hv, %struct.hv* %173, i32 0, i32 3
  %svu_hash218 = bitcast %union.anon.4* %sv_u217 to %struct.he***
  %174 = load %struct.he**, %struct.he*** %svu_hash218, align 8
  %175 = load %struct.hv*, %struct.hv** %hv, align 8
  %sv_any219 = getelementptr inbounds %struct.hv, %struct.hv* %175, i32 0, i32 0
  %176 = load %struct.xpvhv*, %struct.xpvhv** %sv_any219, align 8
  %xhv_max220 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %176, i32 0, i32 3
  %177 = load i64, i64* %xhv_max220, align 8
  %add221 = add i64 %177, 1
  %arrayidx222 = getelementptr inbounds %struct.he*, %struct.he** %174, i64 %add221
  %178 = bitcast %struct.he** %arrayidx222 to %struct.xpvhv_aux*
  %xhv_name_count223 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %178, i32 0, i32 4
  %179 = load i32, i32* %xhv_name_count223, align 4
  %tobool224 = icmp ne i32 %179, 0
  br i1 %tobool224, label %cond.true225, label %cond.false234

cond.true225:                                     ; preds = %cond.end213
  %180 = load %struct.hv*, %struct.hv** %hv, align 8
  %sv_u226 = getelementptr inbounds %struct.hv, %struct.hv* %180, i32 0, i32 3
  %svu_hash227 = bitcast %union.anon.4* %sv_u226 to %struct.he***
  %181 = load %struct.he**, %struct.he*** %svu_hash227, align 8
  %182 = load %struct.hv*, %struct.hv** %hv, align 8
  %sv_any228 = getelementptr inbounds %struct.hv, %struct.hv* %182, i32 0, i32 0
  %183 = load %struct.xpvhv*, %struct.xpvhv** %sv_any228, align 8
  %xhv_max229 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %183, i32 0, i32 3
  %184 = load i64, i64* %xhv_max229, align 8
  %add230 = add i64 %184, 1
  %arrayidx231 = getelementptr inbounds %struct.he*, %struct.he** %181, i64 %add230
  %185 = bitcast %struct.he** %arrayidx231 to %struct.xpvhv_aux*
  %xhv_name_u232 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %185, i32 0, i32 0
  %xhvnameu_names233 = bitcast %union._xhvnameu* %xhv_name_u232 to %struct.hek***
  %186 = load %struct.hek**, %struct.hek*** %xhvnameu_names233, align 8
  %187 = load %struct.hek*, %struct.hek** %186, align 8
  br label %cond.end243

cond.false234:                                    ; preds = %cond.end213
  %188 = load %struct.hv*, %struct.hv** %hv, align 8
  %sv_u235 = getelementptr inbounds %struct.hv, %struct.hv* %188, i32 0, i32 3
  %svu_hash236 = bitcast %union.anon.4* %sv_u235 to %struct.he***
  %189 = load %struct.he**, %struct.he*** %svu_hash236, align 8
  %190 = load %struct.hv*, %struct.hv** %hv, align 8
  %sv_any237 = getelementptr inbounds %struct.hv, %struct.hv* %190, i32 0, i32 0
  %191 = load %struct.xpvhv*, %struct.xpvhv** %sv_any237, align 8
  %xhv_max238 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %191, i32 0, i32 3
  %192 = load i64, i64* %xhv_max238, align 8
  %add239 = add i64 %192, 1
  %arrayidx240 = getelementptr inbounds %struct.he*, %struct.he** %189, i64 %add239
  %193 = bitcast %struct.he** %arrayidx240 to %struct.xpvhv_aux*
  %xhv_name_u241 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %193, i32 0, i32 0
  %xhvnameu_name242 = bitcast %union._xhvnameu* %xhv_name_u241 to %struct.hek**
  %194 = load %struct.hek*, %struct.hek** %xhvnameu_name242, align 8
  br label %cond.end243

cond.end243:                                      ; preds = %cond.false234, %cond.true225
  %cond244 = phi %struct.hek* [ %187, %cond.true225 ], [ %194, %cond.false234 ]
  %hek_len245 = getelementptr inbounds %struct.hek, %struct.hek* %cond244, i32 0, i32 1
  %195 = load i32, i32* %hek_len245, align 4
  %idx.ext = sext i32 %195 to i64
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay216, i64 %idx.ext
  %add.ptr246 = getelementptr inbounds i8, i8* %add.ptr, i64 1
  %196 = load i8, i8* %add.ptr246, align 1
  %conv247 = zext i8 %196 to i32
  %and248 = and i32 %conv247, 1
  br label %cond.end250

cond.false249:                                    ; preds = %cond.false176, %cond.true166, %land.lhs.true147, %if.then143
  br label %cond.end250

cond.end250:                                      ; preds = %cond.false249, %cond.end243
  %cond251 = phi i32 [ %and248, %cond.end243 ], [ 0, %cond.false249 ]
  %tobool252 = icmp ne i32 %cond251, 0
  %197 = zext i1 %tobool252 to i64
  %cond253 = select i1 %tobool252, i32 32768, i32 16384
  call void @Perl_sv_catpvn_flags(%struct.sv* %117, i8* %118, i64 %119, i32 %cond253)
  %198 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  call void @Perl_sv_catpvn_flags(%struct.sv* %198, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.19, i64 0, i64 0), i64 2, i32 2)
  br label %if.end

if.end:                                           ; preds = %cond.end250, %lor.lhs.false
  br label %if.end254

if.else:                                          ; preds = %cond.end63, %cond.end
  %199 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  call void @Perl_sv_catpvn_flags(%struct.sv* %199, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.22, i64 0, i64 0), i64 10, i32 2)
  br label %if.end254

if.end254:                                        ; preds = %if.else, %if.end
  %200 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %201 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_any255 = getelementptr inbounds %struct.gv, %struct.gv* %201, i32 0, i32 0
  %202 = load %struct.xpvgv*, %struct.xpvgv** %sv_any255, align 8
  %xiv_u = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %202, i32 0, i32 4
  %xivu_namehek = bitcast %union._xivu* %xiv_u to %struct.hek**
  %203 = load %struct.hek*, %struct.hek** %xivu_namehek, align 8
  %call256 = call %struct.sv* @Perl_newSVhek(%struct.hek* %203)
  %call257 = call %struct.sv* @Perl_sv_2mortal(%struct.sv* %call256)
  call void @Perl_sv_catsv_flags(%struct.sv* %200, %struct.sv* %call257, i32 2)
  ret void
}

declare dso_local void @Perl_sv_setpv(%struct.sv*, i8*) #1

declare dso_local void @Perl_sv_catsv_flags(%struct.sv*, %struct.sv*, i32) #1

; Function Attrs: noinline nounwind uwtable
define dso_local void @Perl_gv_efullname4(%struct.sv* %sv, %struct.gv* %gv, i8* %prefix, i1 zeroext %keepmain) #0 {
entry:
  %sv.addr = alloca %struct.sv*, align 8
  %gv.addr = alloca %struct.gv*, align 8
  %prefix.addr = alloca i8*, align 8
  %keepmain.addr = alloca i8, align 1
  %egv = alloca %struct.gv*, align 8
  store %struct.sv* %sv, %struct.sv** %sv.addr, align 8
  store %struct.gv* %gv, %struct.gv** %gv.addr, align 8
  store i8* %prefix, i8** %prefix.addr, align 8
  %frombool = zext i1 %keepmain to i8
  store i8 %frombool, i8* %keepmain.addr, align 1
  %0 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_flags = getelementptr inbounds %struct.gv, %struct.gv* %0, i32 0, i32 2
  %1 = load i32, i32* %sv_flags, align 4
  %and = and i32 %1, 49152
  %cmp = icmp eq i32 %and, 32768
  br i1 %cmp, label %land.lhs.true, label %cond.false

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_flags1 = getelementptr inbounds %struct.gv, %struct.gv* %2, i32 0, i32 2
  %3 = load i32, i32* %sv_flags1, align 4
  %and2 = and i32 %3, 255
  %cmp3 = icmp eq i32 %and2, 9
  br i1 %cmp3, label %cond.true, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true
  %4 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_flags4 = getelementptr inbounds %struct.gv, %struct.gv* %4, i32 0, i32 2
  %5 = load i32, i32* %sv_flags4, align 4
  %and5 = and i32 %5, 255
  %cmp6 = icmp eq i32 %and5, 10
  br i1 %cmp6, label %cond.true, label %cond.false

cond.true:                                        ; preds = %lor.lhs.false, %land.lhs.true
  %6 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_u = getelementptr inbounds %struct.gv, %struct.gv* %6, i32 0, i32 3
  %svu_gp = bitcast %union.anon.6* %sv_u to %struct.gp**
  %7 = load %struct.gp*, %struct.gp** %svu_gp, align 8
  %add.ptr = getelementptr inbounds %struct.gp, %struct.gp* %7, i64 0
  %gp_egv = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr, i32 0, i32 8
  %8 = load %struct.gv*, %struct.gv** %gp_egv, align 8
  br label %cond.end

cond.false:                                       ; preds = %lor.lhs.false, %entry
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.gv* [ %8, %cond.true ], [ null, %cond.false ]
  store %struct.gv* %cond, %struct.gv** %egv, align 8
  %9 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %10 = load %struct.gv*, %struct.gv** %egv, align 8
  %tobool = icmp ne %struct.gv* %10, null
  br i1 %tobool, label %cond.true7, label %cond.false8

cond.true7:                                       ; preds = %cond.end
  %11 = load %struct.gv*, %struct.gv** %egv, align 8
  br label %cond.end9

cond.false8:                                      ; preds = %cond.end
  %12 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  br label %cond.end9

cond.end9:                                        ; preds = %cond.false8, %cond.true7
  %cond10 = phi %struct.gv* [ %11, %cond.true7 ], [ %12, %cond.false8 ]
  %13 = load i8*, i8** %prefix.addr, align 8
  %14 = load i8, i8* %keepmain.addr, align 1
  %tobool11 = trunc i8 %14 to i1
  call void @Perl_gv_fullname4(%struct.sv* %9, %struct.gv* %cond10, i8* %13, i1 zeroext %tobool11)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @Perl_gv_check(%struct.hv* %stash) #0 {
entry:
  %stash.addr = alloca %struct.hv*, align 8
  %i = alloca i32, align 4
  %entry2 = alloca %struct.he*, align 8
  %gv = alloca %struct.gv*, align 8
  %hv = alloca %struct.hv*, align 8
  %file = alloca i8*, align 8
  store %struct.hv* %stash, %struct.hv** %stash.addr, align 8
  %0 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_u = getelementptr inbounds %struct.hv, %struct.hv* %0, i32 0, i32 3
  %svu_hash = bitcast %union.anon.4* %sv_u to %struct.he***
  %1 = load %struct.he**, %struct.he*** %svu_hash, align 8
  %tobool = icmp ne %struct.he** %1, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  br label %for.end241

if.end:                                           ; preds = %entry
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc240, %if.end
  %2 = load i32, i32* %i, align 4
  %3 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_any = getelementptr inbounds %struct.hv, %struct.hv* %3, i32 0, i32 0
  %4 = load %struct.xpvhv*, %struct.xpvhv** %sv_any, align 8
  %xhv_max = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %4, i32 0, i32 3
  %5 = load i64, i64* %xhv_max, align 8
  %conv = trunc i64 %5 to i32
  %cmp = icmp sle i32 %2, %conv
  br i1 %cmp, label %for.body, label %for.end241

for.body:                                         ; preds = %for.cond
  %6 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_u3 = getelementptr inbounds %struct.hv, %struct.hv* %6, i32 0, i32 3
  %svu_hash4 = bitcast %union.anon.4* %sv_u3 to %struct.he***
  %7 = load %struct.he**, %struct.he*** %svu_hash4, align 8
  %8 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_any5 = getelementptr inbounds %struct.hv, %struct.hv* %8, i32 0, i32 0
  %9 = load %struct.xpvhv*, %struct.xpvhv** %sv_any5, align 8
  %xhv_max6 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %9, i32 0, i32 3
  %10 = load i64, i64* %xhv_max6, align 8
  %add = add i64 %10, 1
  %arrayidx = getelementptr inbounds %struct.he*, %struct.he** %7, i64 %add
  %11 = bitcast %struct.he** %arrayidx to %struct.xpvhv_aux*
  %xhv_aux_flags = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %11, i32 0, i32 9
  %12 = load i32, i32* %xhv_aux_flags, align 4
  %or = or i32 %12, 1
  store i32 %or, i32* %xhv_aux_flags, align 4
  %13 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_u7 = getelementptr inbounds %struct.hv, %struct.hv* %13, i32 0, i32 3
  %svu_hash8 = bitcast %union.anon.4* %sv_u7 to %struct.he***
  %14 = load %struct.he**, %struct.he*** %svu_hash8, align 8
  %15 = load i32, i32* %i, align 4
  %idxprom = sext i32 %15 to i64
  %arrayidx9 = getelementptr inbounds %struct.he*, %struct.he** %14, i64 %idxprom
  %16 = load %struct.he*, %struct.he** %arrayidx9, align 8
  store %struct.he* %16, %struct.he** %entry2, align 8
  br label %for.cond10

for.cond10:                                       ; preds = %for.inc, %for.body
  %17 = load %struct.he*, %struct.he** %entry2, align 8
  %tobool11 = icmp ne %struct.he* %17, null
  br i1 %tobool11, label %for.body12, label %for.end

for.body12:                                       ; preds = %for.cond10
  %18 = load %struct.he*, %struct.he** %entry2, align 8
  %hent_hek = getelementptr inbounds %struct.he, %struct.he* %18, i32 0, i32 1
  %19 = load %struct.hek*, %struct.hek** %hent_hek, align 8
  %hek_key = getelementptr inbounds %struct.hek, %struct.hek* %19, i32 0, i32 2
  %20 = load %struct.he*, %struct.he** %entry2, align 8
  %hent_hek13 = getelementptr inbounds %struct.he, %struct.he* %20, i32 0, i32 1
  %21 = load %struct.hek*, %struct.hek** %hent_hek13, align 8
  %hek_len = getelementptr inbounds %struct.hek, %struct.hek* %21, i32 0, i32 1
  %22 = load i32, i32* %hek_len, align 4
  %sub = sub nsw i32 %22, 1
  %idxprom14 = sext i32 %sub to i64
  %arrayidx15 = getelementptr inbounds [1 x i8], [1 x i8]* %hek_key, i64 0, i64 %idxprom14
  %23 = load i8, i8* %arrayidx15, align 1
  %conv16 = sext i8 %23 to i32
  %cmp17 = icmp eq i32 %conv16, 58
  br i1 %cmp17, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %for.body12
  %24 = load %struct.he*, %struct.he** %entry2, align 8
  %he_valu = getelementptr inbounds %struct.he, %struct.he* %24, i32 0, i32 2
  %hent_val = bitcast %union.anon.0* %he_valu to %struct.sv**
  %25 = load %struct.sv*, %struct.sv** %hent_val, align 8
  %26 = bitcast %struct.sv* %25 to i8*
  %27 = bitcast i8* %26 to %struct.gv*
  store %struct.gv* %27, %struct.gv** %gv, align 8
  %tobool19 = icmp ne %struct.gv* %27, null
  br i1 %tobool19, label %land.lhs.true20, label %if.else

land.lhs.true20:                                  ; preds = %land.lhs.true
  %28 = load %struct.gv*, %struct.gv** %gv, align 8
  %sv_flags = getelementptr inbounds %struct.gv, %struct.gv* %28, i32 0, i32 2
  %29 = load i32, i32* %sv_flags, align 4
  %and = and i32 %29, 255
  %cmp21 = icmp eq i32 %and, 9
  br i1 %cmp21, label %land.lhs.true23, label %if.else

land.lhs.true23:                                  ; preds = %land.lhs.true20
  %30 = load %struct.gv*, %struct.gv** %gv, align 8
  %sv_u24 = getelementptr inbounds %struct.gv, %struct.gv* %30, i32 0, i32 3
  %svu_gp = bitcast %union.anon.6* %sv_u24 to %struct.gp**
  %31 = load %struct.gp*, %struct.gp** %svu_gp, align 8
  %add.ptr = getelementptr inbounds %struct.gp, %struct.gp* %31, i64 0
  %gp_hv = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr, i32 0, i32 5
  %32 = load %struct.hv*, %struct.hv** %gp_hv, align 8
  store %struct.hv* %32, %struct.hv** %hv, align 8
  %tobool25 = icmp ne %struct.hv* %32, null
  br i1 %tobool25, label %if.then26, label %if.else

if.then26:                                        ; preds = %land.lhs.true23
  %33 = load %struct.hv*, %struct.hv** %hv, align 8
  %34 = load %struct.hv*, %struct.hv** @PL_defstash, align 8
  %cmp27 = icmp ne %struct.hv* %33, %34
  br i1 %cmp27, label %land.lhs.true29, label %if.end47

land.lhs.true29:                                  ; preds = %if.then26
  %35 = load %struct.hv*, %struct.hv** %hv, align 8
  %36 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %cmp30 = icmp ne %struct.hv* %35, %36
  br i1 %cmp30, label %land.lhs.true32, label %if.end47

land.lhs.true32:                                  ; preds = %land.lhs.true29
  %37 = load %struct.hv*, %struct.hv** %hv, align 8
  %sv_flags33 = getelementptr inbounds %struct.hv, %struct.hv* %37, i32 0, i32 2
  %38 = load i32, i32* %sv_flags33, align 4
  %and34 = and i32 %38, 33554432
  %tobool35 = icmp ne i32 %and34, 0
  br i1 %tobool35, label %land.lhs.true36, label %if.then46

land.lhs.true36:                                  ; preds = %land.lhs.true32
  %39 = load %struct.hv*, %struct.hv** %hv, align 8
  %sv_u37 = getelementptr inbounds %struct.hv, %struct.hv* %39, i32 0, i32 3
  %svu_hash38 = bitcast %union.anon.4* %sv_u37 to %struct.he***
  %40 = load %struct.he**, %struct.he*** %svu_hash38, align 8
  %41 = load %struct.hv*, %struct.hv** %hv, align 8
  %sv_any39 = getelementptr inbounds %struct.hv, %struct.hv* %41, i32 0, i32 0
  %42 = load %struct.xpvhv*, %struct.xpvhv** %sv_any39, align 8
  %xhv_max40 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %42, i32 0, i32 3
  %43 = load i64, i64* %xhv_max40, align 8
  %add41 = add i64 %43, 1
  %arrayidx42 = getelementptr inbounds %struct.he*, %struct.he** %40, i64 %add41
  %44 = bitcast %struct.he** %arrayidx42 to %struct.xpvhv_aux*
  %xhv_aux_flags43 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %44, i32 0, i32 9
  %45 = load i32, i32* %xhv_aux_flags43, align 4
  %and44 = and i32 %45, 1
  %tobool45 = icmp ne i32 %and44, 0
  br i1 %tobool45, label %if.end47, label %if.then46

if.then46:                                        ; preds = %land.lhs.true36, %land.lhs.true32
  %46 = load %struct.hv*, %struct.hv** %hv, align 8
  call void @Perl_gv_check(%struct.hv* %46)
  br label %if.end47

if.end47:                                         ; preds = %if.then46, %land.lhs.true36, %land.lhs.true29, %if.then26
  br label %if.end231

if.else:                                          ; preds = %land.lhs.true23, %land.lhs.true20, %land.lhs.true, %for.body12
  %47 = load %struct.he*, %struct.he** %entry2, align 8
  %hent_hek48 = getelementptr inbounds %struct.he, %struct.he* %47, i32 0, i32 1
  %48 = load %struct.hek*, %struct.hek** %hent_hek48, align 8
  %hek_key49 = getelementptr inbounds %struct.hek, %struct.hek* %48, i32 0, i32 2
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %hek_key49, i64 0, i64 0
  %49 = load i8, i8* %arraydecay, align 4
  %conv50 = sext i8 %49 to i32
  %cmp51 = icmp ne i32 %conv50, 95
  br i1 %cmp51, label %land.lhs.true53, label %if.end230

land.lhs.true53:                                  ; preds = %if.else
  %50 = load %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_hints = getelementptr inbounds %struct.cop, %struct.cop* %50, i32 0, i32 10
  %51 = load i32, i32* %cop_hints, align 8
  %add54 = add i32 %51, 0
  %and55 = and i32 %add54, 8
  %tobool56 = icmp ne i32 %and55, 0
  br i1 %tobool56, label %cond.true77, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true53
  %52 = load %struct.he*, %struct.he** %entry2, align 8
  %hent_hek57 = getelementptr inbounds %struct.he, %struct.he* %52, i32 0, i32 1
  %53 = load %struct.hek*, %struct.hek** %hent_hek57, align 8
  %hek_len58 = getelementptr inbounds %struct.hek, %struct.hek* %53, i32 0, i32 1
  %54 = load i32, i32* %hek_len58, align 4
  %cmp59 = icmp eq i32 %54, -2
  br i1 %cmp59, label %cond.true, label %cond.false

cond.true:                                        ; preds = %lor.lhs.false
  %55 = load %struct.he*, %struct.he** %entry2, align 8
  %hent_hek61 = getelementptr inbounds %struct.he, %struct.he* %55, i32 0, i32 1
  %56 = load %struct.hek*, %struct.hek** %hent_hek61, align 8
  %hek_key62 = getelementptr inbounds %struct.hek, %struct.hek* %56, i32 0, i32 2
  %arraydecay63 = getelementptr inbounds [1 x i8], [1 x i8]* %hek_key62, i64 0, i64 0
  %57 = bitcast i8* %arraydecay63 to %struct.sv**
  %58 = load %struct.sv*, %struct.sv** %57, align 4
  %sv_flags64 = getelementptr inbounds %struct.sv, %struct.sv* %58, i32 0, i32 2
  %59 = load i32, i32* %sv_flags64, align 4
  %and65 = and i32 %59, 536870912
  %tobool66 = icmp ne i32 %and65, 0
  br i1 %tobool66, label %cond.false86, label %cond.true77

cond.false:                                       ; preds = %lor.lhs.false
  %60 = load %struct.he*, %struct.he** %entry2, align 8
  %hent_hek67 = getelementptr inbounds %struct.he, %struct.he* %60, i32 0, i32 1
  %61 = load %struct.hek*, %struct.hek** %hent_hek67, align 8
  %hek_key68 = getelementptr inbounds %struct.hek, %struct.hek* %61, i32 0, i32 2
  %arraydecay69 = getelementptr inbounds [1 x i8], [1 x i8]* %hek_key68, i64 0, i64 0
  %62 = load %struct.he*, %struct.he** %entry2, align 8
  %hent_hek70 = getelementptr inbounds %struct.he, %struct.he* %62, i32 0, i32 1
  %63 = load %struct.hek*, %struct.hek** %hent_hek70, align 8
  %hek_len71 = getelementptr inbounds %struct.hek, %struct.hek* %63, i32 0, i32 1
  %64 = load i32, i32* %hek_len71, align 4
  %idx.ext = sext i32 %64 to i64
  %add.ptr72 = getelementptr inbounds i8, i8* %arraydecay69, i64 %idx.ext
  %add.ptr73 = getelementptr inbounds i8, i8* %add.ptr72, i64 1
  %65 = load i8, i8* %add.ptr73, align 1
  %conv74 = zext i8 %65 to i32
  %and75 = and i32 %conv74, 1
  %tobool76 = icmp ne i32 %and75, 0
  br i1 %tobool76, label %cond.false86, label %cond.true77

cond.true77:                                      ; preds = %cond.false, %cond.true, %land.lhs.true53
  %66 = load %struct.he*, %struct.he** %entry2, align 8
  %hent_hek78 = getelementptr inbounds %struct.he, %struct.he* %66, i32 0, i32 1
  %67 = load %struct.hek*, %struct.hek** %hent_hek78, align 8
  %hek_key79 = getelementptr inbounds %struct.hek, %struct.hek* %67, i32 0, i32 2
  %arraydecay80 = getelementptr inbounds [1 x i8], [1 x i8]* %hek_key79, i64 0, i64 0
  %68 = load i8, i8* %arraydecay80, align 4
  %idxprom81 = zext i8 %68 to i64
  %arrayidx82 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom81
  %69 = load i32, i32* %arrayidx82, align 4
  %and83 = and i32 %69, 81920
  %cmp84 = icmp eq i32 %and83, 81920
  br i1 %cmp84, label %if.then153, label %if.end230

cond.false86:                                     ; preds = %cond.false, %cond.true
  %70 = load %struct.he*, %struct.he** %entry2, align 8
  %hent_hek87 = getelementptr inbounds %struct.he, %struct.he* %70, i32 0, i32 1
  %71 = load %struct.hek*, %struct.hek** %hent_hek87, align 8
  %hek_key88 = getelementptr inbounds %struct.hek, %struct.hek* %71, i32 0, i32 2
  %arraydecay89 = getelementptr inbounds [1 x i8], [1 x i8]* %hek_key88, i64 0, i64 0
  %72 = load i8, i8* %arraydecay89, align 4
  %conv90 = zext i8 %72 to i64
  %cmp91 = icmp ult i64 %conv90, 128
  br i1 %cmp91, label %cond.true93, label %cond.false103

cond.true93:                                      ; preds = %cond.false86
  %73 = load %struct.he*, %struct.he** %entry2, align 8
  %hent_hek94 = getelementptr inbounds %struct.he, %struct.he* %73, i32 0, i32 1
  %74 = load %struct.hek*, %struct.hek** %hent_hek94, align 8
  %hek_key95 = getelementptr inbounds %struct.hek, %struct.hek* %74, i32 0, i32 2
  %arraydecay96 = getelementptr inbounds [1 x i8], [1 x i8]* %hek_key95, i64 0, i64 0
  %75 = load i8, i8* %arraydecay96, align 4
  %idxprom97 = zext i8 %75 to i64
  %arrayidx98 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom97
  %76 = load i32, i32* %arrayidx98, align 4
  %and99 = and i32 %76, 65536
  %tobool100 = icmp ne i32 %and99, 0
  br i1 %tobool100, label %cond.true101, label %cond.false102

cond.true101:                                     ; preds = %cond.true93
  br i1 true, label %if.then153, label %if.end230

cond.false102:                                    ; preds = %cond.true93
  br i1 false, label %if.then153, label %if.end230

cond.false103:                                    ; preds = %cond.false86
  %77 = load %struct.he*, %struct.he** %entry2, align 8
  %hent_hek104 = getelementptr inbounds %struct.he, %struct.he* %77, i32 0, i32 1
  %78 = load %struct.hek*, %struct.hek** %hent_hek104, align 8
  %hek_key105 = getelementptr inbounds %struct.hek, %struct.hek* %78, i32 0, i32 2
  %arraydecay106 = getelementptr inbounds [1 x i8], [1 x i8]* %hek_key105, i64 0, i64 0
  %79 = load i8, i8* %arraydecay106, align 4
  %conv107 = zext i8 %79 to i32
  %and108 = and i32 %conv107, 254
  %cmp109 = icmp eq i32 %and108, 194
  br i1 %cmp109, label %cond.true111, label %cond.false148

cond.true111:                                     ; preds = %cond.false103
  %80 = load %struct.he*, %struct.he** %entry2, align 8
  %hent_hek112 = getelementptr inbounds %struct.he, %struct.he* %80, i32 0, i32 1
  %81 = load %struct.hek*, %struct.hek** %hent_hek112, align 8
  %hek_key113 = getelementptr inbounds %struct.hek, %struct.hek* %81, i32 0, i32 2
  %arraydecay114 = getelementptr inbounds [1 x i8], [1 x i8]* %hek_key113, i64 0, i64 0
  %82 = load i8, i8* %arraydecay114, align 4
  %conv115 = zext i8 %82 to i32
  %and116 = and i32 %conv115, 31
  %shl = shl i32 %and116, 6
  %83 = load %struct.he*, %struct.he** %entry2, align 8
  %hent_hek117 = getelementptr inbounds %struct.he, %struct.he* %83, i32 0, i32 1
  %84 = load %struct.hek*, %struct.hek** %hent_hek117, align 8
  %hek_key118 = getelementptr inbounds %struct.hek, %struct.hek* %84, i32 0, i32 2
  %arraydecay119 = getelementptr inbounds [1 x i8], [1 x i8]* %hek_key118, i64 0, i64 0
  %add.ptr120 = getelementptr inbounds i8, i8* %arraydecay119, i64 1
  %85 = load i8, i8* %add.ptr120, align 1
  %conv121 = zext i8 %85 to i32
  %and122 = and i32 %conv121, 63
  %or123 = or i32 %shl, %and122
  %conv124 = sext i32 %or123 to i64
  %and125 = and i64 %conv124, -256
  %tobool126 = icmp ne i64 %and125, 0
  br i1 %tobool126, label %cond.false147, label %land.lhs.true127

land.lhs.true127:                                 ; preds = %cond.true111
  %86 = load %struct.he*, %struct.he** %entry2, align 8
  %hent_hek128 = getelementptr inbounds %struct.he, %struct.he* %86, i32 0, i32 1
  %87 = load %struct.hek*, %struct.hek** %hent_hek128, align 8
  %hek_key129 = getelementptr inbounds %struct.hek, %struct.hek* %87, i32 0, i32 2
  %arraydecay130 = getelementptr inbounds [1 x i8], [1 x i8]* %hek_key129, i64 0, i64 0
  %88 = load i8, i8* %arraydecay130, align 4
  %conv131 = zext i8 %88 to i32
  %and132 = and i32 %conv131, 31
  %shl133 = shl i32 %and132, 6
  %89 = load %struct.he*, %struct.he** %entry2, align 8
  %hent_hek134 = getelementptr inbounds %struct.he, %struct.he* %89, i32 0, i32 1
  %90 = load %struct.hek*, %struct.hek** %hent_hek134, align 8
  %hek_key135 = getelementptr inbounds %struct.hek, %struct.hek* %90, i32 0, i32 2
  %arraydecay136 = getelementptr inbounds [1 x i8], [1 x i8]* %hek_key135, i64 0, i64 0
  %add.ptr137 = getelementptr inbounds i8, i8* %arraydecay136, i64 1
  %91 = load i8, i8* %add.ptr137, align 1
  %conv138 = zext i8 %91 to i32
  %and139 = and i32 %conv138, 63
  %or140 = or i32 %shl133, %and139
  %conv141 = trunc i32 %or140 to i8
  %idxprom142 = zext i8 %conv141 to i64
  %arrayidx143 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom142
  %92 = load i32, i32* %arrayidx143, align 4
  %and144 = and i32 %92, 65536
  %tobool145 = icmp ne i32 %and144, 0
  br i1 %tobool145, label %cond.true146, label %cond.false147

cond.true146:                                     ; preds = %land.lhs.true127
  br i1 true, label %if.then153, label %if.end230

cond.false147:                                    ; preds = %land.lhs.true127, %cond.true111
  br i1 false, label %if.then153, label %if.end230

cond.false148:                                    ; preds = %cond.false103
  %93 = load %struct.he*, %struct.he** %entry2, align 8
  %hent_hek149 = getelementptr inbounds %struct.he, %struct.he* %93, i32 0, i32 1
  %94 = load %struct.hek*, %struct.hek** %hent_hek149, align 8
  %hek_key150 = getelementptr inbounds %struct.hek, %struct.hek* %94, i32 0, i32 2
  %arraydecay151 = getelementptr inbounds [1 x i8], [1 x i8]* %hek_key150, i64 0, i64 0
  %call = call zeroext i1 @Perl__is_utf8_perl_idstart(i8* %arraydecay151)
  br i1 %call, label %if.then153, label %if.end230

if.then153:                                       ; preds = %cond.false148, %cond.false147, %cond.true146, %cond.false102, %cond.true101, %cond.true77
  %95 = load %struct.he*, %struct.he** %entry2, align 8
  %he_valu154 = getelementptr inbounds %struct.he, %struct.he* %95, i32 0, i32 2
  %hent_val155 = bitcast %union.anon.0* %he_valu154 to %struct.sv**
  %96 = load %struct.sv*, %struct.sv** %hent_val155, align 8
  %97 = bitcast %struct.sv* %96 to i8*
  %98 = bitcast i8* %97 to %struct.gv*
  store %struct.gv* %98, %struct.gv** %gv, align 8
  %99 = load %struct.gv*, %struct.gv** %gv, align 8
  %sv_flags156 = getelementptr inbounds %struct.gv, %struct.gv* %99, i32 0, i32 2
  %100 = load i32, i32* %sv_flags156, align 4
  %and157 = and i32 %100, 255
  %cmp158 = icmp ne i32 %and157, 9
  br i1 %cmp158, label %if.then164, label %lor.lhs.false160

lor.lhs.false160:                                 ; preds = %if.then153
  %101 = load %struct.gv*, %struct.gv** %gv, align 8
  %sv_any161 = getelementptr inbounds %struct.gv, %struct.gv* %101, i32 0, i32 0
  %102 = load %struct.xpvgv*, %struct.xpvgv** %sv_any161, align 8
  %xpv_cur = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %102, i32 0, i32 2
  %103 = load i64, i64* %xpv_cur, align 8
  %and162 = and i64 %103, 2
  %tobool163 = icmp ne i64 %and162, 0
  br i1 %tobool163, label %if.then164, label %if.end165

if.then164:                                       ; preds = %lor.lhs.false160, %if.then153
  br label %for.inc

if.end165:                                        ; preds = %lor.lhs.false160
  %104 = load %struct.gv*, %struct.gv** %gv, align 8
  %sv_u166 = getelementptr inbounds %struct.gv, %struct.gv* %104, i32 0, i32 3
  %svu_gp167 = bitcast %union.anon.6* %sv_u166 to %struct.gp**
  %105 = load %struct.gp*, %struct.gp** %svu_gp167, align 8
  %add.ptr168 = getelementptr inbounds %struct.gp, %struct.gp* %105, i64 0
  %gp_file_hek = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr168, i32 0, i32 10
  %106 = load %struct.hek*, %struct.hek** %gp_file_hek, align 8
  %tobool169 = icmp ne %struct.hek* %106, null
  br i1 %tobool169, label %cond.true170, label %cond.false177

cond.true170:                                     ; preds = %if.end165
  %107 = load %struct.gv*, %struct.gv** %gv, align 8
  %sv_u171 = getelementptr inbounds %struct.gv, %struct.gv* %107, i32 0, i32 3
  %svu_gp172 = bitcast %union.anon.6* %sv_u171 to %struct.gp**
  %108 = load %struct.gp*, %struct.gp** %svu_gp172, align 8
  %add.ptr173 = getelementptr inbounds %struct.gp, %struct.gp* %108, i64 0
  %gp_file_hek174 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr173, i32 0, i32 10
  %109 = load %struct.hek*, %struct.hek** %gp_file_hek174, align 8
  %hek_key175 = getelementptr inbounds %struct.hek, %struct.hek* %109, i32 0, i32 2
  %arraydecay176 = getelementptr inbounds [1 x i8], [1 x i8]* %hek_key175, i64 0, i64 0
  br label %cond.end

cond.false177:                                    ; preds = %if.end165
  br label %cond.end

cond.end:                                         ; preds = %cond.false177, %cond.true170
  %cond = phi i8* [ %arraydecay176, %cond.true170 ], [ null, %cond.false177 ]
  store i8* %cond, i8** %file, align 8
  %110 = load %struct.gv*, %struct.gv** %gv, align 8
  %sv_u178 = getelementptr inbounds %struct.gv, %struct.gv* %110, i32 0, i32 3
  %svu_gp179 = bitcast %union.anon.6* %sv_u178 to %struct.gp**
  %111 = load %struct.gp*, %struct.gp** %svu_gp179, align 8
  %add.ptr180 = getelementptr inbounds %struct.gp, %struct.gp* %111, i64 0
  %gp_line = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr180, i32 0, i32 9
  %bf.load = load i32, i32* %gp_line, align 8
  %bf.clear = and i32 %bf.load, 2147483647
  %112 = load %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line = getelementptr inbounds %struct.cop, %struct.cop* %112, i32 0, i32 7
  store i32 %bf.clear, i32* %cop_line, align 4
  %113 = load i8*, i8** %file, align 8
  %114 = load %struct.gv*, %struct.gv** %gv, align 8
  %sv_u181 = getelementptr inbounds %struct.gv, %struct.gv* %114, i32 0, i32 3
  %svu_gp182 = bitcast %union.anon.6* %sv_u181 to %struct.gp**
  %115 = load %struct.gp*, %struct.gp** %svu_gp182, align 8
  %add.ptr183 = getelementptr inbounds %struct.gp, %struct.gp* %115, i64 0
  %gp_file_hek184 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr183, i32 0, i32 10
  %116 = load %struct.hek*, %struct.hek** %gp_file_hek184, align 8
  %hek_len185 = getelementptr inbounds %struct.hek, %struct.hek* %116, i32 0, i32 1
  %117 = load i32, i32* %hek_len185, align 4
  %conv186 = sext i32 %117 to i64
  %call187 = call %struct.gv* @Perl_gv_fetchfile_flags(i8* %113, i64 %conv186, i32 0)
  %118 = load %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_filegv = getelementptr inbounds %struct.cop, %struct.cop* %118, i32 0, i32 9
  store %struct.gv* %call187, %struct.gv** %cop_filegv, align 8
  %119 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_flags188 = getelementptr inbounds %struct.hv, %struct.hv* %119, i32 0, i32 2
  %120 = load i32, i32* %sv_flags188, align 4
  %and189 = and i32 %120, 33554432
  %tobool190 = icmp ne i32 %and189, 0
  br i1 %tobool190, label %land.lhs.true191, label %cond.false226

land.lhs.true191:                                 ; preds = %cond.end
  %121 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_u192 = getelementptr inbounds %struct.hv, %struct.hv* %121, i32 0, i32 3
  %svu_hash193 = bitcast %union.anon.4* %sv_u192 to %struct.he***
  %122 = load %struct.he**, %struct.he*** %svu_hash193, align 8
  %123 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_any194 = getelementptr inbounds %struct.hv, %struct.hv* %123, i32 0, i32 0
  %124 = load %struct.xpvhv*, %struct.xpvhv** %sv_any194, align 8
  %xhv_max195 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %124, i32 0, i32 3
  %125 = load i64, i64* %xhv_max195, align 8
  %add196 = add i64 %125, 1
  %arrayidx197 = getelementptr inbounds %struct.he*, %struct.he** %122, i64 %add196
  %126 = bitcast %struct.he** %arrayidx197 to %struct.xpvhv_aux*
  %xhv_name_u = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %126, i32 0, i32 0
  %xhvnameu_name = bitcast %union._xhvnameu* %xhv_name_u to %struct.hek**
  %127 = load %struct.hek*, %struct.hek** %xhvnameu_name, align 8
  %tobool198 = icmp ne %struct.hek* %127, null
  br i1 %tobool198, label %cond.true199, label %cond.false226

cond.true199:                                     ; preds = %land.lhs.true191
  %128 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_u200 = getelementptr inbounds %struct.hv, %struct.hv* %128, i32 0, i32 3
  %svu_hash201 = bitcast %union.anon.4* %sv_u200 to %struct.he***
  %129 = load %struct.he**, %struct.he*** %svu_hash201, align 8
  %130 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_any202 = getelementptr inbounds %struct.hv, %struct.hv* %130, i32 0, i32 0
  %131 = load %struct.xpvhv*, %struct.xpvhv** %sv_any202, align 8
  %xhv_max203 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %131, i32 0, i32 3
  %132 = load i64, i64* %xhv_max203, align 8
  %add204 = add i64 %132, 1
  %arrayidx205 = getelementptr inbounds %struct.he*, %struct.he** %129, i64 %add204
  %133 = bitcast %struct.he** %arrayidx205 to %struct.xpvhv_aux*
  %xhv_name_count = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %133, i32 0, i32 4
  %134 = load i32, i32* %xhv_name_count, align 4
  %tobool206 = icmp ne i32 %134, 0
  br i1 %tobool206, label %cond.true207, label %cond.false215

cond.true207:                                     ; preds = %cond.true199
  %135 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_u208 = getelementptr inbounds %struct.hv, %struct.hv* %135, i32 0, i32 3
  %svu_hash209 = bitcast %union.anon.4* %sv_u208 to %struct.he***
  %136 = load %struct.he**, %struct.he*** %svu_hash209, align 8
  %137 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_any210 = getelementptr inbounds %struct.hv, %struct.hv* %137, i32 0, i32 0
  %138 = load %struct.xpvhv*, %struct.xpvhv** %sv_any210, align 8
  %xhv_max211 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %138, i32 0, i32 3
  %139 = load i64, i64* %xhv_max211, align 8
  %add212 = add i64 %139, 1
  %arrayidx213 = getelementptr inbounds %struct.he*, %struct.he** %136, i64 %add212
  %140 = bitcast %struct.he** %arrayidx213 to %struct.xpvhv_aux*
  %xhv_name_u214 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %140, i32 0, i32 0
  %xhvnameu_names = bitcast %union._xhvnameu* %xhv_name_u214 to %struct.hek***
  %141 = load %struct.hek**, %struct.hek*** %xhvnameu_names, align 8
  %142 = load %struct.hek*, %struct.hek** %141, align 8
  br label %cond.end224

cond.false215:                                    ; preds = %cond.true199
  %143 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_u216 = getelementptr inbounds %struct.hv, %struct.hv* %143, i32 0, i32 3
  %svu_hash217 = bitcast %union.anon.4* %sv_u216 to %struct.he***
  %144 = load %struct.he**, %struct.he*** %svu_hash217, align 8
  %145 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_any218 = getelementptr inbounds %struct.hv, %struct.hv* %145, i32 0, i32 0
  %146 = load %struct.xpvhv*, %struct.xpvhv** %sv_any218, align 8
  %xhv_max219 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %146, i32 0, i32 3
  %147 = load i64, i64* %xhv_max219, align 8
  %add220 = add i64 %147, 1
  %arrayidx221 = getelementptr inbounds %struct.he*, %struct.he** %144, i64 %add220
  %148 = bitcast %struct.he** %arrayidx221 to %struct.xpvhv_aux*
  %xhv_name_u222 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %148, i32 0, i32 0
  %xhvnameu_name223 = bitcast %union._xhvnameu* %xhv_name_u222 to %struct.hek**
  %149 = load %struct.hek*, %struct.hek** %xhvnameu_name223, align 8
  br label %cond.end224

cond.end224:                                      ; preds = %cond.false215, %cond.true207
  %cond225 = phi %struct.hek* [ %142, %cond.true207 ], [ %149, %cond.false215 ]
  br label %cond.end227

cond.false226:                                    ; preds = %land.lhs.true191, %cond.end
  br label %cond.end227

cond.end227:                                      ; preds = %cond.false226, %cond.end224
  %cond228 = phi %struct.hek* [ %cond225, %cond.end224 ], [ null, %cond.false226 ]
  %150 = bitcast %struct.hek* %cond228 to i8*
  %151 = load %struct.gv*, %struct.gv** %gv, align 8
  %sv_any229 = getelementptr inbounds %struct.gv, %struct.gv* %151, i32 0, i32 0
  %152 = load %struct.xpvgv*, %struct.xpvgv** %sv_any229, align 8
  %xiv_u = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %152, i32 0, i32 4
  %xivu_namehek = bitcast %union._xivu* %xiv_u to %struct.hek**
  %153 = load %struct.hek*, %struct.hek** %xivu_namehek, align 8
  %154 = bitcast %struct.hek* %153 to i8*
  call void (i32, i8*, ...) @Perl_warner(i32 14, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.23, i64 0, i64 0), i8* %150, i8* %154)
  br label %if.end230

if.end230:                                        ; preds = %cond.end227, %cond.false148, %cond.false147, %cond.true146, %cond.false102, %cond.true101, %cond.true77, %if.else
  br label %if.end231

if.end231:                                        ; preds = %if.end230, %if.end47
  br label %for.inc

for.inc:                                          ; preds = %if.end231, %if.then164
  %155 = load %struct.he*, %struct.he** %entry2, align 8
  %hent_next = getelementptr inbounds %struct.he, %struct.he* %155, i32 0, i32 0
  %156 = load %struct.he*, %struct.he** %hent_next, align 8
  store %struct.he* %156, %struct.he** %entry2, align 8
  br label %for.cond10

for.end:                                          ; preds = %for.cond10
  %157 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_u232 = getelementptr inbounds %struct.hv, %struct.hv* %157, i32 0, i32 3
  %svu_hash233 = bitcast %union.anon.4* %sv_u232 to %struct.he***
  %158 = load %struct.he**, %struct.he*** %svu_hash233, align 8
  %159 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_any234 = getelementptr inbounds %struct.hv, %struct.hv* %159, i32 0, i32 0
  %160 = load %struct.xpvhv*, %struct.xpvhv** %sv_any234, align 8
  %xhv_max235 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %160, i32 0, i32 3
  %161 = load i64, i64* %xhv_max235, align 8
  %add236 = add i64 %161, 1
  %arrayidx237 = getelementptr inbounds %struct.he*, %struct.he** %158, i64 %add236
  %162 = bitcast %struct.he** %arrayidx237 to %struct.xpvhv_aux*
  %xhv_aux_flags238 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %162, i32 0, i32 9
  %163 = load i32, i32* %xhv_aux_flags238, align 4
  %and239 = and i32 %163, -2
  store i32 %and239, i32* %xhv_aux_flags238, align 4
  br label %for.inc240

for.inc240:                                       ; preds = %for.end
  %164 = load i32, i32* %i, align 4
  %inc = add nsw i32 %164, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end241:                                       ; preds = %if.then, %for.cond
  ret void
}

declare dso_local void @Perl_warner(i32, i8*, ...) #1

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.gv* @Perl_newGVgen_flags(i8* %pack, i32 %flags) #0 {
entry:
  %pack.addr = alloca i8*, align 8
  %flags.addr = alloca i32, align 4
  store i8* %pack, i8** %pack.addr, align 8
  store i32 %flags, i32* %flags.addr, align 4
  %0 = load i32, i32* %flags.addr, align 4
  %tobool = icmp ne i32 %0, 0
  %1 = zext i1 %tobool to i64
  %cond = select i1 %tobool, i32 1, i32 0
  %2 = load i8*, i8** %pack.addr, align 8
  %call = call i64 @strlen(i8* %2) #4
  %3 = load i8*, i8** %pack.addr, align 8
  %4 = load i32, i32* @PL_gensym, align 4
  %inc = add nsw i32 %4, 1
  store i32 %inc, i32* @PL_gensym, align 4
  %conv = sext i32 %4 to i64
  %call1 = call i8* (i8*, ...) @Perl_form(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.24, i64 0, i64 0), i32 %cond, i64 %call, i8* %3, i64 %conv)
  %call2 = call %struct.gv* @Perl_gv_fetchpv(i8* %call1, i32 1, i32 9)
  ret %struct.gv* %call2
}

declare dso_local i8* @Perl_form(i8*, ...) #1

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.gp* @Perl_gp_ref(%struct.gp* %gp) #0 {
entry:
  %retval = alloca %struct.gp*, align 8
  %gp.addr = alloca %struct.gp*, align 8
  store %struct.gp* %gp, %struct.gp** %gp.addr, align 8
  %0 = load %struct.gp*, %struct.gp** %gp.addr, align 8
  %tobool = icmp ne %struct.gp* %0, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store %struct.gp* null, %struct.gp** %retval, align 8
  br label %return

if.end:                                           ; preds = %entry
  %1 = load %struct.gp*, %struct.gp** %gp.addr, align 8
  %gp_refcnt = getelementptr inbounds %struct.gp, %struct.gp* %1, i32 0, i32 4
  %2 = load i32, i32* %gp_refcnt, align 4
  %inc = add i32 %2, 1
  store i32 %inc, i32* %gp_refcnt, align 4
  %3 = load %struct.gp*, %struct.gp** %gp.addr, align 8
  %gp_cv = getelementptr inbounds %struct.gp, %struct.gp* %3, i32 0, i32 2
  %4 = load %struct.cv*, %struct.cv** %gp_cv, align 8
  %tobool1 = icmp ne %struct.cv* %4, null
  br i1 %tobool1, label %if.then2, label %if.end9

if.then2:                                         ; preds = %if.end
  %5 = load %struct.gp*, %struct.gp** %gp.addr, align 8
  %gp_cvgen = getelementptr inbounds %struct.gp, %struct.gp* %5, i32 0, i32 3
  %6 = load i32, i32* %gp_cvgen, align 8
  %tobool3 = icmp ne i32 %6, 0
  br i1 %tobool3, label %if.then4, label %if.end8

if.then4:                                         ; preds = %if.then2
  %7 = load %struct.gp*, %struct.gp** %gp.addr, align 8
  %gp_cv5 = getelementptr inbounds %struct.gp, %struct.gp* %7, i32 0, i32 2
  %8 = load %struct.cv*, %struct.cv** %gp_cv5, align 8
  %9 = bitcast %struct.cv* %8 to i8*
  %10 = bitcast i8* %9 to %struct.sv*
  call void @S_SvREFCNT_dec_NN(%struct.sv* %10)
  %11 = load %struct.gp*, %struct.gp** %gp.addr, align 8
  %gp_cv6 = getelementptr inbounds %struct.gp, %struct.gp* %11, i32 0, i32 2
  store %struct.cv* null, %struct.cv** %gp_cv6, align 8
  %12 = load %struct.gp*, %struct.gp** %gp.addr, align 8
  %gp_cvgen7 = getelementptr inbounds %struct.gp, %struct.gp* %12, i32 0, i32 3
  store i32 0, i32* %gp_cvgen7, align 8
  br label %if.end8

if.end8:                                          ; preds = %if.then4, %if.then2
  br label %if.end9

if.end9:                                          ; preds = %if.end8, %if.end
  %13 = load %struct.gp*, %struct.gp** %gp.addr, align 8
  store %struct.gp* %13, %struct.gp** %retval, align 8
  br label %return

return:                                           ; preds = %if.end9, %if.then
  %14 = load %struct.gp*, %struct.gp** %retval, align 8
  ret %struct.gp* %14
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @Perl_gp_free(%struct.gv* %gv) #0 {
entry:
  %gv.addr = alloca %struct.gv*, align 8
  %gp = alloca %struct.gp*, align 8
  %attempts = alloca i32, align 4
  %file_hek = alloca %struct.hek*, align 8
  %sv = alloca %struct.sv*, align 8
  %av = alloca %struct.av*, align 8
  %hv = alloca %struct.hv*, align 8
  %io = alloca %struct.io*, align 8
  %cv = alloca %struct.cv*, align 8
  %Perl_form = alloca %struct.cv*, align 8
  %hvname_hek = alloca %struct.hek*, align 8
  store %struct.gv* %gv, %struct.gv** %gv.addr, align 8
  store i32 100, i32* %attempts, align 4
  %0 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %tobool = icmp ne %struct.gv* %0, null
  br i1 %tobool, label %lor.lhs.false, label %if.then

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_flags = getelementptr inbounds %struct.gv, %struct.gv* %1, i32 0, i32 2
  %2 = load i32, i32* %sv_flags, align 4
  %and = and i32 %2, 49152
  %cmp = icmp eq i32 %and, 32768
  br i1 %cmp, label %land.lhs.true, label %if.then

land.lhs.true:                                    ; preds = %lor.lhs.false
  %3 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_flags1 = getelementptr inbounds %struct.gv, %struct.gv* %3, i32 0, i32 2
  %4 = load i32, i32* %sv_flags1, align 4
  %and2 = and i32 %4, 255
  %cmp3 = icmp eq i32 %and2, 9
  br i1 %cmp3, label %lor.lhs.false8, label %lor.lhs.false4

lor.lhs.false4:                                   ; preds = %land.lhs.true
  %5 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_flags5 = getelementptr inbounds %struct.gv, %struct.gv* %5, i32 0, i32 2
  %6 = load i32, i32* %sv_flags5, align 4
  %and6 = and i32 %6, 255
  %cmp7 = icmp eq i32 %and6, 10
  br i1 %cmp7, label %lor.lhs.false8, label %if.then

lor.lhs.false8:                                   ; preds = %lor.lhs.false4, %land.lhs.true
  %7 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_u = getelementptr inbounds %struct.gv, %struct.gv* %7, i32 0, i32 3
  %svu_gp = bitcast %union.anon.6* %sv_u to %struct.gp**
  %8 = load %struct.gp*, %struct.gp** %svu_gp, align 8
  %add.ptr = getelementptr inbounds %struct.gp, %struct.gp* %8, i64 0
  store %struct.gp* %add.ptr, %struct.gp** %gp, align 8
  %tobool9 = icmp ne %struct.gp* %add.ptr, null
  br i1 %tobool9, label %if.end, label %if.then

if.then:                                          ; preds = %lor.lhs.false8, %lor.lhs.false4, %lor.lhs.false, %entry
  br label %return

if.end:                                           ; preds = %lor.lhs.false8
  %9 = load %struct.gp*, %struct.gp** %gp, align 8
  %gp_refcnt = getelementptr inbounds %struct.gp, %struct.gp* %9, i32 0, i32 4
  %10 = load i32, i32* %gp_refcnt, align 4
  %cmp10 = icmp eq i32 %10, 0
  br i1 %cmp10, label %if.then11, label %if.end12

if.then11:                                        ; preds = %if.end
  call void (i32, i8*, ...) @Perl_ck_warner_d(i32 24, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.25, i64 0, i64 0))
  br label %return

if.end12:                                         ; preds = %if.end
  %11 = load %struct.gp*, %struct.gp** %gp, align 8
  %gp_refcnt13 = getelementptr inbounds %struct.gp, %struct.gp* %11, i32 0, i32 4
  %12 = load i32, i32* %gp_refcnt13, align 4
  %cmp14 = icmp ugt i32 %12, 1
  br i1 %cmp14, label %if.then15, label %if.end23

if.then15:                                        ; preds = %if.end12
  br label %borrowed

borrowed:                                         ; preds = %if.then172, %if.then15
  %13 = load %struct.gp*, %struct.gp** %gp, align 8
  %gp_egv = getelementptr inbounds %struct.gp, %struct.gp* %13, i32 0, i32 8
  %14 = load %struct.gv*, %struct.gv** %gp_egv, align 8
  %15 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %cmp16 = icmp eq %struct.gv* %14, %15
  br i1 %cmp16, label %if.then17, label %if.end19

if.then17:                                        ; preds = %borrowed
  %16 = load %struct.gp*, %struct.gp** %gp, align 8
  %gp_egv18 = getelementptr inbounds %struct.gp, %struct.gp* %16, i32 0, i32 8
  store %struct.gv* null, %struct.gv** %gp_egv18, align 8
  br label %if.end19

if.end19:                                         ; preds = %if.then17, %borrowed
  %17 = load %struct.gp*, %struct.gp** %gp, align 8
  %gp_refcnt20 = getelementptr inbounds %struct.gp, %struct.gp* %17, i32 0, i32 4
  %18 = load i32, i32* %gp_refcnt20, align 4
  %dec = add i32 %18, -1
  store i32 %dec, i32* %gp_refcnt20, align 4
  %19 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_u21 = getelementptr inbounds %struct.gv, %struct.gv* %19, i32 0, i32 3
  %svu_gp22 = bitcast %union.anon.6* %sv_u21 to %struct.gp**
  store %struct.gp* null, %struct.gp** %svu_gp22, align 8
  br label %return

if.end23:                                         ; preds = %if.end12
  br label %while.body

while.body:                                       ; preds = %if.end23, %if.end168
  %20 = load %struct.gp*, %struct.gp** %gp, align 8
  %gp_file_hek = getelementptr inbounds %struct.gp, %struct.gp* %20, i32 0, i32 10
  %21 = load %struct.hek*, %struct.hek** %gp_file_hek, align 8
  store %struct.hek* %21, %struct.hek** %file_hek, align 8
  %22 = load %struct.gp*, %struct.gp** %gp, align 8
  %gp_sv = getelementptr inbounds %struct.gp, %struct.gp* %22, i32 0, i32 0
  %23 = load %struct.sv*, %struct.sv** %gp_sv, align 8
  store %struct.sv* %23, %struct.sv** %sv, align 8
  %24 = load %struct.gp*, %struct.gp** %gp, align 8
  %gp_av = getelementptr inbounds %struct.gp, %struct.gp* %24, i32 0, i32 6
  %25 = load %struct.av*, %struct.av** %gp_av, align 8
  store %struct.av* %25, %struct.av** %av, align 8
  %26 = load %struct.gp*, %struct.gp** %gp, align 8
  %gp_hv = getelementptr inbounds %struct.gp, %struct.gp* %26, i32 0, i32 5
  %27 = load %struct.hv*, %struct.hv** %gp_hv, align 8
  store %struct.hv* %27, %struct.hv** %hv, align 8
  %28 = load %struct.gp*, %struct.gp** %gp, align 8
  %gp_io = getelementptr inbounds %struct.gp, %struct.gp* %28, i32 0, i32 1
  %29 = load %struct.io*, %struct.io** %gp_io, align 8
  store %struct.io* %29, %struct.io** %io, align 8
  %30 = load %struct.gp*, %struct.gp** %gp, align 8
  %gp_cv = getelementptr inbounds %struct.gp, %struct.gp* %30, i32 0, i32 2
  %31 = load %struct.cv*, %struct.cv** %gp_cv, align 8
  store %struct.cv* %31, %struct.cv** %cv, align 8
  %32 = load %struct.gp*, %struct.gp** %gp, align 8
  %gp_form = getelementptr inbounds %struct.gp, %struct.gp* %32, i32 0, i32 7
  %33 = load %struct.cv*, %struct.cv** %gp_form, align 8
  store %struct.cv* %33, %struct.cv** %Perl_form, align 8
  %34 = load %struct.gp*, %struct.gp** %gp, align 8
  %gp_file_hek24 = getelementptr inbounds %struct.gp, %struct.gp* %34, i32 0, i32 10
  store %struct.hek* null, %struct.hek** %gp_file_hek24, align 8
  %35 = load %struct.gp*, %struct.gp** %gp, align 8
  %gp_sv25 = getelementptr inbounds %struct.gp, %struct.gp* %35, i32 0, i32 0
  store %struct.sv* null, %struct.sv** %gp_sv25, align 8
  %36 = load %struct.gp*, %struct.gp** %gp, align 8
  %gp_av26 = getelementptr inbounds %struct.gp, %struct.gp* %36, i32 0, i32 6
  store %struct.av* null, %struct.av** %gp_av26, align 8
  %37 = load %struct.gp*, %struct.gp** %gp, align 8
  %gp_hv27 = getelementptr inbounds %struct.gp, %struct.gp* %37, i32 0, i32 5
  store %struct.hv* null, %struct.hv** %gp_hv27, align 8
  %38 = load %struct.gp*, %struct.gp** %gp, align 8
  %gp_io28 = getelementptr inbounds %struct.gp, %struct.gp* %38, i32 0, i32 1
  store %struct.io* null, %struct.io** %gp_io28, align 8
  %39 = load %struct.gp*, %struct.gp** %gp, align 8
  %gp_cv29 = getelementptr inbounds %struct.gp, %struct.gp* %39, i32 0, i32 2
  store %struct.cv* null, %struct.cv** %gp_cv29, align 8
  %40 = load %struct.gp*, %struct.gp** %gp, align 8
  %gp_form30 = getelementptr inbounds %struct.gp, %struct.gp* %40, i32 0, i32 7
  store %struct.cv* null, %struct.cv** %gp_form30, align 8
  %41 = load %struct.hek*, %struct.hek** %file_hek, align 8
  %tobool31 = icmp ne %struct.hek* %41, null
  br i1 %tobool31, label %if.then32, label %if.end33

if.then32:                                        ; preds = %while.body
  %42 = load %struct.hek*, %struct.hek** %file_hek, align 8
  call void @Perl_unshare_hek(%struct.hek* %42)
  br label %if.end33

if.end33:                                         ; preds = %if.then32, %while.body
  %43 = load %struct.sv*, %struct.sv** %sv, align 8
  %44 = bitcast %struct.sv* %43 to i8*
  %45 = bitcast i8* %44 to %struct.sv*
  call void @S_SvREFCNT_dec(%struct.sv* %45)
  %46 = load %struct.av*, %struct.av** %av, align 8
  %47 = bitcast %struct.av* %46 to i8*
  %48 = bitcast i8* %47 to %struct.sv*
  call void @S_SvREFCNT_dec(%struct.sv* %48)
  %49 = load %struct.hv*, %struct.hv** %hv, align 8
  %tobool34 = icmp ne %struct.hv* %49, null
  br i1 %tobool34, label %land.lhs.true35, label %if.end84

land.lhs.true35:                                  ; preds = %if.end33
  %50 = load %struct.hv*, %struct.hv** %hv, align 8
  %sv_flags36 = getelementptr inbounds %struct.hv, %struct.hv* %50, i32 0, i32 2
  %51 = load i32, i32* %sv_flags36, align 4
  %and37 = and i32 %51, 255
  %cmp38 = icmp eq i32 %and37, 12
  br i1 %cmp38, label %if.then39, label %if.end84

if.then39:                                        ; preds = %land.lhs.true35
  %52 = load %struct.hv*, %struct.hv** %hv, align 8
  %sv_flags40 = getelementptr inbounds %struct.hv, %struct.hv* %52, i32 0, i32 2
  %53 = load i32, i32* %sv_flags40, align 4
  %and41 = and i32 %53, 33554432
  %tobool42 = icmp ne i32 %and41, 0
  br i1 %tobool42, label %land.lhs.true43, label %cond.false69

land.lhs.true43:                                  ; preds = %if.then39
  %54 = load %struct.hv*, %struct.hv** %hv, align 8
  %sv_u44 = getelementptr inbounds %struct.hv, %struct.hv* %54, i32 0, i32 3
  %svu_hash = bitcast %union.anon.4* %sv_u44 to %struct.he***
  %55 = load %struct.he**, %struct.he*** %svu_hash, align 8
  %56 = load %struct.hv*, %struct.hv** %hv, align 8
  %sv_any = getelementptr inbounds %struct.hv, %struct.hv* %56, i32 0, i32 0
  %57 = load %struct.xpvhv*, %struct.xpvhv** %sv_any, align 8
  %xhv_max = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %57, i32 0, i32 3
  %58 = load i64, i64* %xhv_max, align 8
  %add = add i64 %58, 1
  %arrayidx = getelementptr inbounds %struct.he*, %struct.he** %55, i64 %add
  %59 = bitcast %struct.he** %arrayidx to %struct.xpvhv_aux*
  %xhv_name_u = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %59, i32 0, i32 0
  %xhvnameu_name = bitcast %union._xhvnameu* %xhv_name_u to %struct.hek**
  %60 = load %struct.hek*, %struct.hek** %xhvnameu_name, align 8
  %tobool45 = icmp ne %struct.hek* %60, null
  br i1 %tobool45, label %cond.true, label %cond.false69

cond.true:                                        ; preds = %land.lhs.true43
  %61 = load %struct.hv*, %struct.hv** %hv, align 8
  %sv_u46 = getelementptr inbounds %struct.hv, %struct.hv* %61, i32 0, i32 3
  %svu_hash47 = bitcast %union.anon.4* %sv_u46 to %struct.he***
  %62 = load %struct.he**, %struct.he*** %svu_hash47, align 8
  %63 = load %struct.hv*, %struct.hv** %hv, align 8
  %sv_any48 = getelementptr inbounds %struct.hv, %struct.hv* %63, i32 0, i32 0
  %64 = load %struct.xpvhv*, %struct.xpvhv** %sv_any48, align 8
  %xhv_max49 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %64, i32 0, i32 3
  %65 = load i64, i64* %xhv_max49, align 8
  %add50 = add i64 %65, 1
  %arrayidx51 = getelementptr inbounds %struct.he*, %struct.he** %62, i64 %add50
  %66 = bitcast %struct.he** %arrayidx51 to %struct.xpvhv_aux*
  %xhv_name_count = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %66, i32 0, i32 4
  %67 = load i32, i32* %xhv_name_count, align 4
  %tobool52 = icmp ne i32 %67, 0
  br i1 %tobool52, label %cond.true53, label %cond.false

cond.true53:                                      ; preds = %cond.true
  %68 = load %struct.hv*, %struct.hv** %hv, align 8
  %sv_u54 = getelementptr inbounds %struct.hv, %struct.hv* %68, i32 0, i32 3
  %svu_hash55 = bitcast %union.anon.4* %sv_u54 to %struct.he***
  %69 = load %struct.he**, %struct.he*** %svu_hash55, align 8
  %70 = load %struct.hv*, %struct.hv** %hv, align 8
  %sv_any56 = getelementptr inbounds %struct.hv, %struct.hv* %70, i32 0, i32 0
  %71 = load %struct.xpvhv*, %struct.xpvhv** %sv_any56, align 8
  %xhv_max57 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %71, i32 0, i32 3
  %72 = load i64, i64* %xhv_max57, align 8
  %add58 = add i64 %72, 1
  %arrayidx59 = getelementptr inbounds %struct.he*, %struct.he** %69, i64 %add58
  %73 = bitcast %struct.he** %arrayidx59 to %struct.xpvhv_aux*
  %xhv_name_u60 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %73, i32 0, i32 0
  %xhvnameu_names = bitcast %union._xhvnameu* %xhv_name_u60 to %struct.hek***
  %74 = load %struct.hek**, %struct.hek*** %xhvnameu_names, align 8
  %75 = load %struct.hek*, %struct.hek** %74, align 8
  br label %cond.end

cond.false:                                       ; preds = %cond.true
  %76 = load %struct.hv*, %struct.hv** %hv, align 8
  %sv_u61 = getelementptr inbounds %struct.hv, %struct.hv* %76, i32 0, i32 3
  %svu_hash62 = bitcast %union.anon.4* %sv_u61 to %struct.he***
  %77 = load %struct.he**, %struct.he*** %svu_hash62, align 8
  %78 = load %struct.hv*, %struct.hv** %hv, align 8
  %sv_any63 = getelementptr inbounds %struct.hv, %struct.hv* %78, i32 0, i32 0
  %79 = load %struct.xpvhv*, %struct.xpvhv** %sv_any63, align 8
  %xhv_max64 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %79, i32 0, i32 3
  %80 = load i64, i64* %xhv_max64, align 8
  %add65 = add i64 %80, 1
  %arrayidx66 = getelementptr inbounds %struct.he*, %struct.he** %77, i64 %add65
  %81 = bitcast %struct.he** %arrayidx66 to %struct.xpvhv_aux*
  %xhv_name_u67 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %81, i32 0, i32 0
  %xhvnameu_name68 = bitcast %union._xhvnameu* %xhv_name_u67 to %struct.hek**
  %82 = load %struct.hek*, %struct.hek** %xhvnameu_name68, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true53
  %cond = phi %struct.hek* [ %75, %cond.true53 ], [ %82, %cond.false ]
  br label %cond.end70

cond.false69:                                     ; preds = %land.lhs.true43, %if.then39
  br label %cond.end70

cond.end70:                                       ; preds = %cond.false69, %cond.end
  %cond71 = phi %struct.hek* [ %cond, %cond.end ], [ null, %cond.false69 ]
  store %struct.hek* %cond71, %struct.hek** %hvname_hek, align 8
  %83 = load %struct.hv*, %struct.hv** @PL_stashcache, align 8
  %tobool72 = icmp ne %struct.hv* %83, null
  br i1 %tobool72, label %land.lhs.true73, label %if.end83

land.lhs.true73:                                  ; preds = %cond.end70
  %84 = load %struct.hek*, %struct.hek** %hvname_hek, align 8
  %tobool74 = icmp ne %struct.hek* %84, null
  br i1 %tobool74, label %if.then75, label %if.end83

if.then75:                                        ; preds = %land.lhs.true73
  %85 = load %struct.hv*, %struct.hv** @PL_stashcache, align 8
  %86 = load %struct.hek*, %struct.hek** %hvname_hek, align 8
  %hek_key = getelementptr inbounds %struct.hek, %struct.hek* %86, i32 0, i32 2
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %hek_key, i64 0, i64 0
  %87 = load %struct.hek*, %struct.hek** %hvname_hek, align 8
  %hek_len = getelementptr inbounds %struct.hek, %struct.hek* %87, i32 0, i32 1
  %88 = load i32, i32* %hek_len, align 4
  %conv = sext i32 %88 to i64
  %89 = load %struct.hek*, %struct.hek** %hvname_hek, align 8
  %hek_key76 = getelementptr inbounds %struct.hek, %struct.hek* %89, i32 0, i32 2
  %arraydecay77 = getelementptr inbounds [1 x i8], [1 x i8]* %hek_key76, i64 0, i64 0
  %90 = load %struct.hek*, %struct.hek** %hvname_hek, align 8
  %hek_len78 = getelementptr inbounds %struct.hek, %struct.hek* %90, i32 0, i32 1
  %91 = load i32, i32* %hek_len78, align 4
  %idx.ext = sext i32 %91 to i64
  %add.ptr79 = getelementptr inbounds i8, i8* %arraydecay77, i64 %idx.ext
  %add.ptr80 = getelementptr inbounds i8, i8* %add.ptr79, i64 1
  %92 = load i8, i8* %add.ptr80, align 1
  %conv81 = zext i8 %92 to i32
  %and82 = and i32 %conv81, 1
  %93 = load %struct.hek*, %struct.hek** %hvname_hek, align 8
  %hek_hash = getelementptr inbounds %struct.hek, %struct.hek* %93, i32 0, i32 0
  %94 = load i32, i32* %hek_hash, align 4
  %call = call i8* @Perl_hv_common(%struct.hv* %85, %struct.sv* null, i8* %arraydecay, i64 %conv, i32 %and82, i32 68, %struct.sv* null, i32 %94)
  br label %if.end83

if.end83:                                         ; preds = %if.then75, %land.lhs.true73, %cond.end70
  %95 = load %struct.hv*, %struct.hv** %hv, align 8
  %96 = bitcast %struct.hv* %95 to i8*
  %97 = bitcast i8* %96 to %struct.sv*
  call void @S_SvREFCNT_dec(%struct.sv* %97)
  br label %if.end84

if.end84:                                         ; preds = %if.end83, %land.lhs.true35, %if.end33
  %98 = load %struct.io*, %struct.io** %io, align 8
  %tobool85 = icmp ne %struct.io* %98, null
  br i1 %tobool85, label %land.lhs.true86, label %if.end137

land.lhs.true86:                                  ; preds = %if.end84
  %99 = load %struct.io*, %struct.io** %io, align 8
  %sv_refcnt = getelementptr inbounds %struct.io, %struct.io* %99, i32 0, i32 1
  %100 = load i32, i32* %sv_refcnt, align 8
  %cmp87 = icmp eq i32 %100, 1
  br i1 %cmp87, label %land.lhs.true89, label %if.end137

land.lhs.true89:                                  ; preds = %land.lhs.true86
  %101 = load %struct.io*, %struct.io** %io, align 8
  %sv_u90 = getelementptr inbounds %struct.io, %struct.io* %101, i32 0, i32 3
  %svu_fp = bitcast %union.anon.1* %sv_u90 to %struct._PerlIO***
  %102 = load %struct._PerlIO**, %struct._PerlIO*** %svu_fp, align 8
  %tobool91 = icmp ne %struct._PerlIO** %102, null
  br i1 %tobool91, label %land.lhs.true92, label %if.end137

land.lhs.true92:                                  ; preds = %land.lhs.true89
  %103 = load %struct.io*, %struct.io** %io, align 8
  %sv_any93 = getelementptr inbounds %struct.io, %struct.io* %103, i32 0, i32 0
  %104 = load %struct.xpvio*, %struct.xpvio** %sv_any93, align 8
  %xio_type = getelementptr inbounds %struct.xpvio, %struct.xpvio* %104, i32 0, i32 16
  %105 = load i8, i8* %xio_type, align 8
  %conv94 = sext i8 %105 to i32
  %cmp95 = icmp eq i32 %conv94, 62
  br i1 %cmp95, label %land.lhs.true109, label %lor.lhs.false97

lor.lhs.false97:                                  ; preds = %land.lhs.true92
  %106 = load %struct.io*, %struct.io** %io, align 8
  %sv_any98 = getelementptr inbounds %struct.io, %struct.io* %106, i32 0, i32 0
  %107 = load %struct.xpvio*, %struct.xpvio** %sv_any98, align 8
  %xio_type99 = getelementptr inbounds %struct.xpvio, %struct.xpvio* %107, i32 0, i32 16
  %108 = load i8, i8* %xio_type99, align 8
  %conv100 = sext i8 %108 to i32
  %cmp101 = icmp eq i32 %conv100, 43
  br i1 %cmp101, label %land.lhs.true109, label %lor.lhs.false103

lor.lhs.false103:                                 ; preds = %lor.lhs.false97
  %109 = load %struct.io*, %struct.io** %io, align 8
  %sv_any104 = getelementptr inbounds %struct.io, %struct.io* %109, i32 0, i32 0
  %110 = load %struct.xpvio*, %struct.xpvio** %sv_any104, align 8
  %xio_type105 = getelementptr inbounds %struct.xpvio, %struct.xpvio* %110, i32 0, i32 16
  %111 = load i8, i8* %xio_type105, align 8
  %conv106 = sext i8 %111 to i32
  %cmp107 = icmp eq i32 %conv106, 97
  br i1 %cmp107, label %land.lhs.true109, label %if.end137

land.lhs.true109:                                 ; preds = %lor.lhs.false103, %lor.lhs.false97, %land.lhs.true92
  %call110 = call zeroext i1 @Perl_ckwarn_d(i32 5)
  br i1 %call110, label %land.lhs.true112, label %if.end137

land.lhs.true112:                                 ; preds = %land.lhs.true109
  %112 = load %struct.io*, %struct.io** %io, align 8
  %sv_u113 = getelementptr inbounds %struct.io, %struct.io* %112, i32 0, i32 3
  %svu_fp114 = bitcast %union.anon.1* %sv_u113 to %struct._PerlIO***
  %113 = load %struct._PerlIO**, %struct._PerlIO*** %svu_fp114, align 8
  %call115 = call %struct._PerlIO** @Perl_PerlIO_stdin()
  %cmp116 = icmp ne %struct._PerlIO** %113, %call115
  br i1 %cmp116, label %land.lhs.true118, label %if.end137

land.lhs.true118:                                 ; preds = %land.lhs.true112
  %114 = load %struct.io*, %struct.io** %io, align 8
  %sv_u119 = getelementptr inbounds %struct.io, %struct.io* %114, i32 0, i32 3
  %svu_fp120 = bitcast %union.anon.1* %sv_u119 to %struct._PerlIO***
  %115 = load %struct._PerlIO**, %struct._PerlIO*** %svu_fp120, align 8
  %call121 = call %struct._PerlIO** @Perl_PerlIO_stdout()
  %cmp122 = icmp ne %struct._PerlIO** %115, %call121
  br i1 %cmp122, label %land.lhs.true124, label %if.end137

land.lhs.true124:                                 ; preds = %land.lhs.true118
  %116 = load %struct.io*, %struct.io** %io, align 8
  %sv_u125 = getelementptr inbounds %struct.io, %struct.io* %116, i32 0, i32 3
  %svu_fp126 = bitcast %union.anon.1* %sv_u125 to %struct._PerlIO***
  %117 = load %struct._PerlIO**, %struct._PerlIO*** %svu_fp126, align 8
  %call127 = call %struct._PerlIO** @Perl_PerlIO_stderr()
  %cmp128 = icmp ne %struct._PerlIO** %117, %call127
  br i1 %cmp128, label %land.lhs.true130, label %if.end137

land.lhs.true130:                                 ; preds = %land.lhs.true124
  %118 = load %struct.io*, %struct.io** %io, align 8
  %sv_any131 = getelementptr inbounds %struct.io, %struct.io* %118, i32 0, i32 0
  %119 = load %struct.xpvio*, %struct.xpvio** %sv_any131, align 8
  %xio_flags = getelementptr inbounds %struct.xpvio, %struct.xpvio* %119, i32 0, i32 17
  %120 = load i8, i8* %xio_flags, align 1
  %conv132 = zext i8 %120 to i32
  %and133 = and i32 %conv132, 64
  %tobool134 = icmp ne i32 %and133, 0
  br i1 %tobool134, label %if.end137, label %if.then135

if.then135:                                       ; preds = %land.lhs.true130
  %121 = load %struct.io*, %struct.io** %io, align 8
  %122 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %call136 = call zeroext i1 @Perl_io_close(%struct.io* %121, %struct.gv* %122, i1 zeroext false, i1 zeroext true)
  br label %if.end137

if.end137:                                        ; preds = %if.then135, %land.lhs.true130, %land.lhs.true124, %land.lhs.true118, %land.lhs.true112, %land.lhs.true109, %lor.lhs.false103, %land.lhs.true89, %land.lhs.true86, %if.end84
  %123 = load %struct.io*, %struct.io** %io, align 8
  %124 = bitcast %struct.io* %123 to i8*
  %125 = bitcast i8* %124 to %struct.sv*
  call void @S_SvREFCNT_dec(%struct.sv* %125)
  %126 = load %struct.cv*, %struct.cv** %cv, align 8
  %127 = bitcast %struct.cv* %126 to i8*
  %128 = bitcast i8* %127 to %struct.sv*
  call void @S_SvREFCNT_dec(%struct.sv* %128)
  %129 = load %struct.cv*, %struct.cv** %Perl_form, align 8
  %130 = bitcast %struct.cv* %129 to i8*
  %131 = bitcast i8* %130 to %struct.sv*
  call void @S_SvREFCNT_dec(%struct.sv* %131)
  %132 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_u138 = getelementptr inbounds %struct.gv, %struct.gv* %132, i32 0, i32 3
  %svu_gp139 = bitcast %union.anon.6* %sv_u138 to %struct.gp**
  %133 = load %struct.gp*, %struct.gp** %svu_gp139, align 8
  %add.ptr140 = getelementptr inbounds %struct.gp, %struct.gp* %133, i64 0
  store %struct.gp* %add.ptr140, %struct.gp** %gp, align 8
  %134 = load %struct.gp*, %struct.gp** %gp, align 8
  %gp_file_hek141 = getelementptr inbounds %struct.gp, %struct.gp* %134, i32 0, i32 10
  %135 = load %struct.hek*, %struct.hek** %gp_file_hek141, align 8
  %tobool142 = icmp ne %struct.hek* %135, null
  br i1 %tobool142, label %if.end162, label %land.lhs.true143

land.lhs.true143:                                 ; preds = %if.end137
  %136 = load %struct.gp*, %struct.gp** %gp, align 8
  %gp_sv144 = getelementptr inbounds %struct.gp, %struct.gp* %136, i32 0, i32 0
  %137 = load %struct.sv*, %struct.sv** %gp_sv144, align 8
  %tobool145 = icmp ne %struct.sv* %137, null
  br i1 %tobool145, label %if.end162, label %land.lhs.true146

land.lhs.true146:                                 ; preds = %land.lhs.true143
  %138 = load %struct.gp*, %struct.gp** %gp, align 8
  %gp_av147 = getelementptr inbounds %struct.gp, %struct.gp* %138, i32 0, i32 6
  %139 = load %struct.av*, %struct.av** %gp_av147, align 8
  %tobool148 = icmp ne %struct.av* %139, null
  br i1 %tobool148, label %if.end162, label %land.lhs.true149

land.lhs.true149:                                 ; preds = %land.lhs.true146
  %140 = load %struct.gp*, %struct.gp** %gp, align 8
  %gp_hv150 = getelementptr inbounds %struct.gp, %struct.gp* %140, i32 0, i32 5
  %141 = load %struct.hv*, %struct.hv** %gp_hv150, align 8
  %tobool151 = icmp ne %struct.hv* %141, null
  br i1 %tobool151, label %if.end162, label %land.lhs.true152

land.lhs.true152:                                 ; preds = %land.lhs.true149
  %142 = load %struct.gp*, %struct.gp** %gp, align 8
  %gp_io153 = getelementptr inbounds %struct.gp, %struct.gp* %142, i32 0, i32 1
  %143 = load %struct.io*, %struct.io** %gp_io153, align 8
  %tobool154 = icmp ne %struct.io* %143, null
  br i1 %tobool154, label %if.end162, label %land.lhs.true155

land.lhs.true155:                                 ; preds = %land.lhs.true152
  %144 = load %struct.gp*, %struct.gp** %gp, align 8
  %gp_cv156 = getelementptr inbounds %struct.gp, %struct.gp* %144, i32 0, i32 2
  %145 = load %struct.cv*, %struct.cv** %gp_cv156, align 8
  %tobool157 = icmp ne %struct.cv* %145, null
  br i1 %tobool157, label %if.end162, label %land.lhs.true158

land.lhs.true158:                                 ; preds = %land.lhs.true155
  %146 = load %struct.gp*, %struct.gp** %gp, align 8
  %gp_form159 = getelementptr inbounds %struct.gp, %struct.gp* %146, i32 0, i32 7
  %147 = load %struct.cv*, %struct.cv** %gp_form159, align 8
  %tobool160 = icmp ne %struct.cv* %147, null
  br i1 %tobool160, label %if.end162, label %if.then161

if.then161:                                       ; preds = %land.lhs.true158
  br label %while.end

if.end162:                                        ; preds = %land.lhs.true158, %land.lhs.true155, %land.lhs.true152, %land.lhs.true149, %land.lhs.true146, %land.lhs.true143, %if.end137
  %148 = load i32, i32* %attempts, align 4
  %dec163 = add nsw i32 %148, -1
  store i32 %dec163, i32* %attempts, align 4
  %cmp164 = icmp eq i32 %dec163, 0
  br i1 %cmp164, label %if.then166, label %if.end168

if.then166:                                       ; preds = %if.end162
  %call167 = call %struct.op* (i8*, ...) @Perl_die(i8* getelementptr inbounds ([89 x i8], [89 x i8]* @.str.26, i64 0, i64 0))
  br label %if.end168

if.end168:                                        ; preds = %if.then166, %if.end162
  br label %while.body

while.end:                                        ; preds = %if.then161
  %149 = load %struct.gp*, %struct.gp** %gp, align 8
  %gp_refcnt169 = getelementptr inbounds %struct.gp, %struct.gp* %149, i32 0, i32 4
  %150 = load i32, i32* %gp_refcnt169, align 4
  %cmp170 = icmp ugt i32 %150, 1
  br i1 %cmp170, label %if.then172, label %if.end173

if.then172:                                       ; preds = %while.end
  br label %borrowed

if.end173:                                        ; preds = %while.end
  %151 = load %struct.gp*, %struct.gp** %gp, align 8
  %152 = bitcast %struct.gp* %151 to i8*
  call void @Perl_safesysfree(i8* %152)
  %153 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_u174 = getelementptr inbounds %struct.gv, %struct.gv* %153, i32 0, i32 3
  %svu_gp175 = bitcast %union.anon.6* %sv_u174 to %struct.gp**
  store %struct.gp* null, %struct.gp** %svu_gp175, align 8
  br label %return

return:                                           ; preds = %if.end173, %if.end19, %if.then11, %if.then
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @S_SvREFCNT_dec(%struct.sv* %sv) #0 {
entry:
  %sv.addr = alloca %struct.sv*, align 8
  %rc = alloca i32, align 4
  store %struct.sv* %sv, %struct.sv** %sv.addr, align 8
  %0 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %cmp = icmp ne %struct.sv* %0, null
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  br i1 true, label %if.then, label %if.end6

cond.false:                                       ; preds = %entry
  br i1 false, label %if.then, label %if.end6

if.then:                                          ; preds = %cond.false, %cond.true
  %1 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_refcnt = getelementptr inbounds %struct.sv, %struct.sv* %1, i32 0, i32 1
  %2 = load i32, i32* %sv_refcnt, align 8
  store i32 %2, i32* %rc, align 4
  %3 = load i32, i32* %rc, align 4
  %cmp1 = icmp ugt i32 %3, 1
  br i1 %cmp1, label %cond.true2, label %cond.false3

cond.true2:                                       ; preds = %if.then
  br i1 true, label %if.then4, label %if.else

cond.false3:                                      ; preds = %if.then
  br i1 false, label %if.then4, label %if.else

if.then4:                                         ; preds = %cond.false3, %cond.true2
  %4 = load i32, i32* %rc, align 4
  %sub = sub i32 %4, 1
  %5 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_refcnt5 = getelementptr inbounds %struct.sv, %struct.sv* %5, i32 0, i32 1
  store i32 %sub, i32* %sv_refcnt5, align 8
  br label %if.end

if.else:                                          ; preds = %cond.false3, %cond.true2
  %6 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %7 = load i32, i32* %rc, align 4
  call void @Perl_sv_free2(%struct.sv* %6, i32 %7)
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then4
  br label %if.end6

if.end6:                                          ; preds = %if.end, %cond.false, %cond.true
  ret void
}

declare dso_local zeroext i1 @Perl_ckwarn_d(i32) #1

declare dso_local %struct._PerlIO** @Perl_PerlIO_stdin() #1

declare dso_local %struct._PerlIO** @Perl_PerlIO_stdout() #1

declare dso_local %struct._PerlIO** @Perl_PerlIO_stderr() #1

declare dso_local zeroext i1 @Perl_io_close(%struct.io*, %struct.gv*, i1 zeroext, i1 zeroext) #1

declare dso_local %struct.op* @Perl_die(i8*, ...) #1

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @Perl_magic_freeovrld(%struct.sv* %sv, %struct.magic* %mg) #0 {
entry:
  %sv.addr = alloca %struct.sv*, align 8
  %mg.addr = alloca %struct.magic*, align 8
  %amtp = alloca %struct.am_table*, align 8
  %i = alloca i32, align 4
  %cv = alloca %struct.cv*, align 8
  store %struct.sv* %sv, %struct.sv** %sv.addr, align 8
  store %struct.magic* %mg, %struct.magic** %mg.addr, align 8
  %0 = load %struct.magic*, %struct.magic** %mg.addr, align 8
  %mg_ptr = getelementptr inbounds %struct.magic, %struct.magic* %0, i32 0, i32 7
  %1 = load i8*, i8** %mg_ptr, align 8
  %2 = bitcast i8* %1 to %struct.am_table*
  store %struct.am_table* %2, %struct.am_table** %amtp, align 8
  %3 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %4 = load %struct.am_table*, %struct.am_table** %amtp, align 8
  %tobool = icmp ne %struct.am_table* %4, null
  br i1 %tobool, label %land.lhs.true, label %if.end8

land.lhs.true:                                    ; preds = %entry
  %5 = load %struct.am_table*, %struct.am_table** %amtp, align 8
  %flags = getelementptr inbounds %struct.am_table, %struct.am_table* %5, i32 0, i32 0
  %6 = load i8, i8* %flags, align 8
  %conv = zext i8 %6 to i32
  %and = and i32 %conv, 1
  %tobool1 = icmp ne i32 %and, 0
  br i1 %tobool1, label %if.then, label %if.end8

if.then:                                          ; preds = %land.lhs.true
  store i32 1, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then
  %7 = load i32, i32* %i, align 4
  %cmp = icmp slt i32 %7, 75
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %8 = load %struct.am_table*, %struct.am_table** %amtp, align 8
  %table = getelementptr inbounds %struct.am_table, %struct.am_table* %8, i32 0, i32 4
  %9 = load i32, i32* %i, align 4
  %idxprom = sext i32 %9 to i64
  %arrayidx = getelementptr inbounds [75 x %struct.cv*], [75 x %struct.cv*]* %table, i64 0, i64 %idxprom
  %10 = load %struct.cv*, %struct.cv** %arrayidx, align 8
  store %struct.cv* %10, %struct.cv** %cv, align 8
  %11 = load %struct.cv*, %struct.cv** %cv, align 8
  %tobool3 = icmp ne %struct.cv* %11, null
  br i1 %tobool3, label %if.then4, label %if.end

if.then4:                                         ; preds = %for.body
  %12 = load %struct.cv*, %struct.cv** %cv, align 8
  %13 = bitcast %struct.cv* %12 to i8*
  %14 = bitcast i8* %13 to %struct.sv*
  %15 = bitcast %struct.sv* %14 to i8*
  %16 = bitcast i8* %15 to %struct.sv*
  call void @S_SvREFCNT_dec_NN(%struct.sv* %16)
  %17 = load %struct.am_table*, %struct.am_table** %amtp, align 8
  %table5 = getelementptr inbounds %struct.am_table, %struct.am_table* %17, i32 0, i32 4
  %18 = load i32, i32* %i, align 4
  %idxprom6 = sext i32 %18 to i64
  %arrayidx7 = getelementptr inbounds [75 x %struct.cv*], [75 x %struct.cv*]* %table5, i64 0, i64 %idxprom6
  store %struct.cv* null, %struct.cv** %arrayidx7, align 8
  br label %if.end

if.end:                                           ; preds = %if.then4, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %19 = load i32, i32* %i, align 4
  %inc = add nsw i32 %19, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end8

if.end8:                                          ; preds = %for.end, %land.lhs.true, %entry
  ret i32 0
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @Perl_Gv_AMupdate(%struct.hv* %stash, i1 zeroext %destructing) #0 {
entry:
  %retval = alloca i32, align 4
  %stash.addr = alloca %struct.hv*, align 8
  %destructing.addr = alloca i8, align 1
  %mg = alloca %struct.magic*, align 8
  %amt = alloca %struct.am_table, align 8
  %stash_meta = alloca %struct.mro_meta*, align 8
  %newgen = alloca i32, align 4
  %amtp = alloca %struct.am_table*, align 8
  %filled = alloca i32, align 4
  %i = alloca i32, align 4
  %deref_seen = alloca i8, align 1
  %gv = alloca %struct.gv*, align 8
  %sv = alloca %struct.sv*, align 8
  %cv = alloca %struct.cv*, align 8
  %cooky = alloca i8*, align 8
  %cp = alloca i8*, align 8
  %l = alloca i64, align 8
  %gvhek = alloca %struct.hek*, align 8
  %stashek = alloca %struct.hek*, align 8
  %ngv = alloca %struct.gv*, align 8
  %gvsv = alloca %struct.sv*, align 8
  %name = alloca %struct.sv*, align 8
  store %struct.hv* %stash, %struct.hv** %stash.addr, align 8
  %frombool = zext i1 %destructing to i8
  store i8 %frombool, i8* %destructing.addr, align 1
  %0 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %1 = bitcast %struct.hv* %0 to %struct.sv*
  %call = call %struct.magic* @Perl_mg_find(%struct.sv* %1, i32 99)
  store %struct.magic* %call, %struct.magic** %mg, align 8
  %2 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_u = getelementptr inbounds %struct.hv, %struct.hv* %2, i32 0, i32 3
  %svu_hash = bitcast %union.anon.4* %sv_u to %struct.he***
  %3 = load %struct.he**, %struct.he*** %svu_hash, align 8
  %4 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_any = getelementptr inbounds %struct.hv, %struct.hv* %4, i32 0, i32 0
  %5 = load %struct.xpvhv*, %struct.xpvhv** %sv_any, align 8
  %xhv_max = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %5, i32 0, i32 3
  %6 = load i64, i64* %xhv_max, align 8
  %add = add i64 %6, 1
  %arrayidx = getelementptr inbounds %struct.he*, %struct.he** %3, i64 %add
  %7 = bitcast %struct.he** %arrayidx to %struct.xpvhv_aux*
  %xhv_mro_meta = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %7, i32 0, i32 5
  %8 = load %struct.mro_meta*, %struct.mro_meta** %xhv_mro_meta, align 8
  %tobool = icmp ne %struct.mro_meta* %8, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %9 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_u1 = getelementptr inbounds %struct.hv, %struct.hv* %9, i32 0, i32 3
  %svu_hash2 = bitcast %union.anon.4* %sv_u1 to %struct.he***
  %10 = load %struct.he**, %struct.he*** %svu_hash2, align 8
  %11 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_any3 = getelementptr inbounds %struct.hv, %struct.hv* %11, i32 0, i32 0
  %12 = load %struct.xpvhv*, %struct.xpvhv** %sv_any3, align 8
  %xhv_max4 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %12, i32 0, i32 3
  %13 = load i64, i64* %xhv_max4, align 8
  %add5 = add i64 %13, 1
  %arrayidx6 = getelementptr inbounds %struct.he*, %struct.he** %10, i64 %add5
  %14 = bitcast %struct.he** %arrayidx6 to %struct.xpvhv_aux*
  %xhv_mro_meta7 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %14, i32 0, i32 5
  %15 = load %struct.mro_meta*, %struct.mro_meta** %xhv_mro_meta7, align 8
  br label %cond.end

cond.false:                                       ; preds = %entry
  %16 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %call8 = call %struct.mro_meta* @Perl_mro_meta_init(%struct.hv* %16)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.mro_meta* [ %15, %cond.true ], [ %call8, %cond.false ]
  store %struct.mro_meta* %cond, %struct.mro_meta** %stash_meta, align 8
  %17 = load i32, i32* @PL_sub_generation, align 4
  %18 = load %struct.mro_meta*, %struct.mro_meta** %stash_meta, align 8
  %pkg_gen = getelementptr inbounds %struct.mro_meta, %struct.mro_meta* %18, i32 0, i32 4
  %19 = load i32, i32* %pkg_gen, align 4
  %add9 = add i32 %17, %19
  %20 = load %struct.mro_meta*, %struct.mro_meta** %stash_meta, align 8
  %cache_gen = getelementptr inbounds %struct.mro_meta, %struct.mro_meta* %20, i32 0, i32 3
  %21 = load i32, i32* %cache_gen, align 8
  %add10 = add i32 %add9, %21
  store i32 %add10, i32* %newgen, align 4
  %22 = load %struct.magic*, %struct.magic** %mg, align 8
  %tobool11 = icmp ne %struct.magic* %22, null
  br i1 %tobool11, label %if.then, label %if.end16

if.then:                                          ; preds = %cond.end
  %23 = load %struct.magic*, %struct.magic** %mg, align 8
  %mg_ptr = getelementptr inbounds %struct.magic, %struct.magic* %23, i32 0, i32 7
  %24 = load i8*, i8** %mg_ptr, align 8
  %25 = bitcast i8* %24 to %struct.am_table*
  store %struct.am_table* %25, %struct.am_table** %amtp, align 8
  %26 = load %struct.am_table*, %struct.am_table** %amtp, align 8
  %was_ok_sub = getelementptr inbounds %struct.am_table, %struct.am_table* %26, i32 0, i32 3
  %27 = load i32, i32* %was_ok_sub, align 4
  %28 = load i32, i32* %newgen, align 4
  %cmp = icmp eq i32 %27, %28
  br i1 %cmp, label %if.then12, label %if.end

if.then12:                                        ; preds = %if.then
  %29 = load %struct.am_table*, %struct.am_table** %amtp, align 8
  %flags = getelementptr inbounds %struct.am_table, %struct.am_table* %29, i32 0, i32 0
  %30 = load i8, i8* %flags, align 8
  %conv = zext i8 %30 to i32
  %and = and i32 %conv, 1
  %tobool13 = icmp ne i32 %and, 0
  %31 = zext i1 %tobool13 to i64
  %cond14 = select i1 %tobool13, i32 1, i32 0
  store i32 %cond14, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %if.then
  %32 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %33 = bitcast %struct.hv* %32 to i8*
  %34 = bitcast i8* %33 to %struct.sv*
  %call15 = call i32 @Perl_sv_unmagic(%struct.sv* %34, i32 99)
  br label %if.end16

if.end16:                                         ; preds = %if.end, %cond.end
  %35 = bitcast %struct.am_table* %amt to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 608, i1 false)
  %36 = load i32, i32* %newgen, align 4
  %was_ok_sub17 = getelementptr inbounds %struct.am_table, %struct.am_table* %amt, i32 0, i32 3
  store i32 %36, i32* %was_ok_sub17, align 4
  %fallback = getelementptr inbounds %struct.am_table, %struct.am_table* %amt, i32 0, i32 1
  store i8 2, i8* %fallback, align 1
  %flags18 = getelementptr inbounds %struct.am_table, %struct.am_table* %amt, i32 0, i32 0
  store i8 0, i8* %flags18, align 8
  store i32 0, i32* %filled, align 4
  store i8 0, i8* %deref_seen, align 1
  %37 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %38 = load i8*, i8** getelementptr inbounds ([75 x i8*], [75 x i8*]* @PL_AMG_names, i64 0, i64 0), align 16
  %call19 = call %struct.gv* @Perl_gv_fetchmeth_pvn(%struct.hv* %37, i8* %38, i64 2, i32 -1, i32 0)
  store %struct.gv* %call19, %struct.gv** %gv, align 8
  %39 = load %struct.gv*, %struct.gv** %gv, align 8
  %tobool20 = icmp ne %struct.gv* %39, null
  br i1 %tobool20, label %cond.true21, label %cond.false23

cond.true21:                                      ; preds = %if.end16
  %40 = load %struct.gv*, %struct.gv** %gv, align 8
  %sv_u22 = getelementptr inbounds %struct.gv, %struct.gv* %40, i32 0, i32 3
  %svu_gp = bitcast %union.anon.6* %sv_u22 to %struct.gp**
  %41 = load %struct.gp*, %struct.gp** %svu_gp, align 8
  %add.ptr = getelementptr inbounds %struct.gp, %struct.gp* %41, i64 0
  %gp_sv = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr, i32 0, i32 0
  %42 = load %struct.sv*, %struct.sv** %gp_sv, align 8
  br label %cond.end24

cond.false23:                                     ; preds = %if.end16
  br label %cond.end24

cond.end24:                                       ; preds = %cond.false23, %cond.true21
  %cond25 = phi %struct.sv* [ %42, %cond.true21 ], [ null, %cond.false23 ]
  store %struct.sv* %cond25, %struct.sv** %sv, align 8
  %43 = load %struct.gv*, %struct.gv** %gv, align 8
  %tobool26 = icmp ne %struct.gv* %43, null
  br i1 %tobool26, label %if.else, label %if.then27

if.then27:                                        ; preds = %cond.end24
  %44 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %call28 = call %struct.gv* @Perl_gv_fetchmeth_pvn(%struct.hv* %44, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.27, i64 0, i64 0), i64 2, i32 -1, i32 0)
  %tobool29 = icmp ne %struct.gv* %call28, null
  br i1 %tobool29, label %if.end31, label %if.then30

if.then30:                                        ; preds = %if.then27
  br label %no_table

if.end31:                                         ; preds = %if.then27
  br label %if.end129

if.else:                                          ; preds = %cond.end24
  %45 = load %struct.sv*, %struct.sv** %sv, align 8
  %tobool32 = icmp ne %struct.sv* %45, null
  br i1 %tobool32, label %if.else34, label %if.then33

if.then33:                                        ; preds = %if.else
  br label %if.end128

if.else34:                                        ; preds = %if.else
  %46 = load %struct.sv*, %struct.sv** %sv, align 8
  %tobool35 = icmp ne %struct.sv* %46, null
  br i1 %tobool35, label %cond.true36, label %cond.false37

cond.true36:                                      ; preds = %if.else34
  br i1 true, label %land.lhs.true, label %if.else109

cond.false37:                                     ; preds = %if.else34
  br i1 false, label %land.lhs.true, label %if.else109

land.lhs.true:                                    ; preds = %cond.false37, %cond.true36
  %47 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %47, i32 0, i32 2
  %48 = load i32, i32* %sv_flags, align 4
  %and38 = and i32 %48, 2097152
  %tobool39 = icmp ne i32 %and38, 0
  br i1 %tobool39, label %cond.true40, label %cond.false41

cond.true40:                                      ; preds = %land.lhs.true
  br i1 true, label %cond.true42, label %cond.false45

cond.false41:                                     ; preds = %land.lhs.true
  br i1 false, label %cond.true42, label %cond.false45

cond.true42:                                      ; preds = %cond.false41, %cond.true40
  %49 = load %struct.sv*, %struct.sv** %sv, align 8
  %call43 = call zeroext i1 @Perl_sv_2bool_flags(%struct.sv* %49, i32 2)
  br i1 %call43, label %if.then107, label %if.else109

cond.false45:                                     ; preds = %cond.false41, %cond.true40
  %50 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_flags46 = getelementptr inbounds %struct.sv, %struct.sv* %50, i32 0, i32 2
  %51 = load i32, i32* %sv_flags46, align 4
  %and47 = and i32 %51, 65280
  %tobool48 = icmp ne i32 %and47, 0
  br i1 %tobool48, label %cond.false59, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %cond.false45
  %52 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_flags49 = getelementptr inbounds %struct.sv, %struct.sv* %52, i32 0, i32 2
  %53 = load i32, i32* %sv_flags49, align 4
  %and50 = and i32 %53, 255
  %cmp51 = icmp eq i32 %and50, 8
  br i1 %cmp51, label %cond.false59, label %lor.lhs.false53

lor.lhs.false53:                                  ; preds = %lor.lhs.false
  %54 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_flags54 = getelementptr inbounds %struct.sv, %struct.sv* %54, i32 0, i32 2
  %55 = load i32, i32* %sv_flags54, align 4
  %and55 = and i32 %55, 16826623
  %cmp56 = icmp eq i32 %and55, 16777226
  br i1 %cmp56, label %cond.false59, label %cond.true58

cond.true58:                                      ; preds = %lor.lhs.false53
  br i1 false, label %if.then107, label %if.else109

cond.false59:                                     ; preds = %lor.lhs.false53, %lor.lhs.false, %cond.false45
  %56 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_flags60 = getelementptr inbounds %struct.sv, %struct.sv* %56, i32 0, i32 2
  %57 = load i32, i32* %sv_flags60, align 4
  %and61 = and i32 %57, 1024
  %tobool62 = icmp ne i32 %and61, 0
  br i1 %tobool62, label %cond.true63, label %cond.false79

cond.true63:                                      ; preds = %cond.false59
  %58 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any64 = getelementptr inbounds %struct.sv, %struct.sv* %58, i32 0, i32 0
  %59 = load i8*, i8** %sv_any64, align 8
  %60 = bitcast i8* %59 to %struct.xpv*
  %tobool65 = icmp ne %struct.xpv* %60, null
  br i1 %tobool65, label %land.lhs.true66, label %if.else109

land.lhs.true66:                                  ; preds = %cond.true63
  %61 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any67 = getelementptr inbounds %struct.sv, %struct.sv* %61, i32 0, i32 0
  %62 = load i8*, i8** %sv_any67, align 8
  %63 = bitcast i8* %62 to %struct.xpv*
  %xpv_cur = getelementptr inbounds %struct.xpv, %struct.xpv* %63, i32 0, i32 2
  %64 = load i64, i64* %xpv_cur, align 8
  %cmp68 = icmp ugt i64 %64, 1
  br i1 %cmp68, label %if.then107, label %lor.lhs.false70

lor.lhs.false70:                                  ; preds = %land.lhs.true66
  %65 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any71 = getelementptr inbounds %struct.sv, %struct.sv* %65, i32 0, i32 0
  %66 = load i8*, i8** %sv_any71, align 8
  %67 = bitcast i8* %66 to %struct.xpv*
  %xpv_cur72 = getelementptr inbounds %struct.xpv, %struct.xpv* %67, i32 0, i32 2
  %68 = load i64, i64* %xpv_cur72, align 8
  %tobool73 = icmp ne i64 %68, 0
  br i1 %tobool73, label %land.lhs.true74, label %if.else109

land.lhs.true74:                                  ; preds = %lor.lhs.false70
  %69 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_u75 = getelementptr inbounds %struct.sv, %struct.sv* %69, i32 0, i32 3
  %svu_pv = bitcast %union.anon* %sv_u75 to i8**
  %70 = load i8*, i8** %svu_pv, align 8
  %71 = load i8, i8* %70, align 1
  %conv76 = sext i8 %71 to i32
  %cmp77 = icmp ne i32 %conv76, 48
  br i1 %cmp77, label %if.then107, label %if.else109

cond.false79:                                     ; preds = %cond.false59
  %72 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_flags80 = getelementptr inbounds %struct.sv, %struct.sv* %72, i32 0, i32 2
  %73 = load i32, i32* %sv_flags80, align 4
  %and81 = and i32 %73, 768
  %tobool82 = icmp ne i32 %and81, 0
  br i1 %tobool82, label %cond.true83, label %cond.false104

cond.true83:                                      ; preds = %cond.false79
  %74 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_flags84 = getelementptr inbounds %struct.sv, %struct.sv* %74, i32 0, i32 2
  %75 = load i32, i32* %sv_flags84, align 4
  %and85 = and i32 %75, 256
  %tobool86 = icmp ne i32 %and85, 0
  br i1 %tobool86, label %land.lhs.true87, label %lor.lhs.false91

land.lhs.true87:                                  ; preds = %cond.true83
  %76 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any88 = getelementptr inbounds %struct.sv, %struct.sv* %76, i32 0, i32 0
  %77 = load i8*, i8** %sv_any88, align 8
  %78 = bitcast i8* %77 to %struct.xpviv*
  %xiv_u = getelementptr inbounds %struct.xpviv, %struct.xpviv* %78, i32 0, i32 4
  %xivu_iv = bitcast %union._xivu* %xiv_u to i64*
  %79 = load i64, i64* %xivu_iv, align 8
  %cmp89 = icmp ne i64 %79, 0
  br i1 %cmp89, label %if.then107, label %lor.lhs.false91

lor.lhs.false91:                                  ; preds = %land.lhs.true87, %cond.true83
  %80 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_flags92 = getelementptr inbounds %struct.sv, %struct.sv* %80, i32 0, i32 2
  %81 = load i32, i32* %sv_flags92, align 4
  %and93 = and i32 %81, 512
  %tobool94 = icmp ne i32 %and93, 0
  br i1 %tobool94, label %land.lhs.true95, label %if.else109

land.lhs.true95:                                  ; preds = %lor.lhs.false91
  %82 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any96 = getelementptr inbounds %struct.sv, %struct.sv* %82, i32 0, i32 0
  %83 = load i8*, i8** %sv_any96, align 8
  %84 = bitcast i8* %83 to %struct.xpvnv*
  %xnv_u = getelementptr inbounds %struct.xpvnv, %struct.xpvnv* %84, i32 0, i32 5
  %xnv_nv = bitcast %union._xnvu* %xnv_u to double*
  %85 = load double, double* %xnv_nv, align 8
  %cmp97 = fcmp uno double %85, %85
  br i1 %cmp97, label %if.then107, label %lor.lhs.false98

lor.lhs.false98:                                  ; preds = %land.lhs.true95
  %86 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any99 = getelementptr inbounds %struct.sv, %struct.sv* %86, i32 0, i32 0
  %87 = load i8*, i8** %sv_any99, align 8
  %88 = bitcast i8* %87 to %struct.xpvnv*
  %xnv_u100 = getelementptr inbounds %struct.xpvnv, %struct.xpvnv* %88, i32 0, i32 5
  %xnv_nv101 = bitcast %union._xnvu* %xnv_u100 to double*
  %89 = load double, double* %xnv_nv101, align 8
  %cmp102 = fcmp une double %89, 0.000000e+00
  br i1 %cmp102, label %if.then107, label %if.else109

cond.false104:                                    ; preds = %cond.false79
  %90 = load %struct.sv*, %struct.sv** %sv, align 8
  %call105 = call zeroext i1 @Perl_sv_2bool_flags(%struct.sv* %90, i32 0)
  br i1 %call105, label %if.then107, label %if.else109

if.then107:                                       ; preds = %cond.false104, %lor.lhs.false98, %land.lhs.true95, %land.lhs.true87, %land.lhs.true74, %land.lhs.true66, %cond.true58, %cond.true42
  %fallback108 = getelementptr inbounds %struct.am_table, %struct.am_table* %amt, i32 0, i32 1
  store i8 3, i8* %fallback108, align 1
  br label %if.end127

if.else109:                                       ; preds = %cond.false104, %lor.lhs.false98, %lor.lhs.false91, %land.lhs.true74, %lor.lhs.false70, %cond.true63, %cond.true58, %cond.true42, %cond.false37, %cond.true36
  %91 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_flags110 = getelementptr inbounds %struct.sv, %struct.sv* %91, i32 0, i32 2
  %92 = load i32, i32* %sv_flags110, align 4
  %and111 = and i32 %92, 65280
  %tobool112 = icmp ne i32 %and111, 0
  br i1 %tobool112, label %if.then123, label %lor.lhs.false113

lor.lhs.false113:                                 ; preds = %if.else109
  %93 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_flags114 = getelementptr inbounds %struct.sv, %struct.sv* %93, i32 0, i32 2
  %94 = load i32, i32* %sv_flags114, align 4
  %and115 = and i32 %94, 255
  %cmp116 = icmp eq i32 %and115, 8
  br i1 %cmp116, label %if.then123, label %lor.lhs.false118

lor.lhs.false118:                                 ; preds = %lor.lhs.false113
  %95 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_flags119 = getelementptr inbounds %struct.sv, %struct.sv* %95, i32 0, i32 2
  %96 = load i32, i32* %sv_flags119, align 4
  %and120 = and i32 %96, 16826623
  %cmp121 = icmp eq i32 %and120, 16777226
  br i1 %cmp121, label %if.then123, label %if.else125

if.then123:                                       ; preds = %lor.lhs.false118, %lor.lhs.false113, %if.else109
  %fallback124 = getelementptr inbounds %struct.am_table, %struct.am_table* %amt, i32 0, i32 1
  store i8 1, i8* %fallback124, align 1
  store i32 1, i32* %filled, align 4
  br label %if.end126

if.else125:                                       ; preds = %lor.lhs.false118
  store i32 1, i32* %filled, align 4
  br label %if.end126

if.end126:                                        ; preds = %if.else125, %if.then123
  br label %if.end127

if.end127:                                        ; preds = %if.end126, %if.then107
  br label %if.end128

if.end128:                                        ; preds = %if.end127, %if.then33
  br label %if.end129

if.end129:                                        ; preds = %if.end128, %if.end31
  %97 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_u130 = getelementptr inbounds %struct.hv, %struct.hv* %97, i32 0, i32 3
  %svu_hash131 = bitcast %union.anon.4* %sv_u130 to %struct.he***
  %98 = load %struct.he**, %struct.he*** %svu_hash131, align 8
  %99 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_any132 = getelementptr inbounds %struct.hv, %struct.hv* %99, i32 0, i32 0
  %100 = load %struct.xpvhv*, %struct.xpvhv** %sv_any132, align 8
  %xhv_max133 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %100, i32 0, i32 3
  %101 = load i64, i64* %xhv_max133, align 8
  %add134 = add i64 %101, 1
  %arrayidx135 = getelementptr inbounds %struct.he*, %struct.he** %98, i64 %add134
  %102 = bitcast %struct.he** %arrayidx135 to %struct.xpvhv_aux*
  %xhv_aux_flags = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %102, i32 0, i32 9
  %103 = load i32, i32* %xhv_aux_flags, align 4
  %and136 = and i32 %103, -3
  store i32 %and136, i32* %xhv_aux_flags, align 4
  store i32 1, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end129
  %104 = load i32, i32* %i, align 4
  %cmp137 = icmp slt i32 %104, 75
  br i1 %cmp137, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %105 = load i32, i32* %i, align 4
  %idxprom = sext i32 %105 to i64
  %arrayidx139 = getelementptr inbounds [75 x i8*], [75 x i8*]* @PL_AMG_names, i64 0, i64 %idxprom
  %106 = load i8*, i8** %arrayidx139, align 8
  store i8* %106, i8** %cooky, align 8
  %107 = load i32, i32* %i, align 4
  %idxprom140 = sext i32 %107 to i64
  %arrayidx141 = getelementptr inbounds [75 x i8*], [75 x i8*]* @PL_AMG_names, i64 0, i64 %idxprom140
  %108 = load i8*, i8** %arrayidx141, align 8
  %add.ptr142 = getelementptr inbounds i8, i8* %108, i64 1
  store i8* %add.ptr142, i8** %cp, align 8
  %109 = load i32, i32* %i, align 4
  %idxprom143 = sext i32 %109 to i64
  %arrayidx144 = getelementptr inbounds [75 x i8], [75 x i8]* @PL_AMG_namelens, i64 0, i64 %idxprom143
  %110 = load i8, i8* %arrayidx144, align 1
  %conv145 = zext i8 %110 to i64
  store i64 %conv145, i64* %l, align 8
  %111 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %112 = load i8*, i8** %cooky, align 8
  %113 = load i64, i64* %l, align 8
  %call146 = call %struct.gv* @Perl_gv_fetchmeth_pvn(%struct.hv* %111, i8* %112, i64 %113, i32 -1, i32 0)
  store %struct.gv* %call146, %struct.gv** %gv, align 8
  store %struct.cv* null, %struct.cv** %cv, align 8
  %114 = load %struct.gv*, %struct.gv** %gv, align 8
  %tobool147 = icmp ne %struct.gv* %114, null
  br i1 %tobool147, label %land.lhs.true148, label %if.else446

land.lhs.true148:                                 ; preds = %for.body
  %115 = load %struct.gv*, %struct.gv** %gv, align 8
  %sv_u149 = getelementptr inbounds %struct.gv, %struct.gv* %115, i32 0, i32 3
  %svu_gp150 = bitcast %union.anon.6* %sv_u149 to %struct.gp**
  %116 = load %struct.gp*, %struct.gp** %svu_gp150, align 8
  %add.ptr151 = getelementptr inbounds %struct.gp, %struct.gp* %116, i64 0
  %gp_cv = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr151, i32 0, i32 2
  %117 = load %struct.cv*, %struct.cv** %gp_cv, align 8
  %add.ptr152 = getelementptr inbounds %struct.cv, %struct.cv* %117, i64 0
  store %struct.cv* %add.ptr152, %struct.cv** %cv, align 8
  %tobool153 = icmp ne %struct.cv* %add.ptr152, null
  br i1 %tobool153, label %land.lhs.true154, label %if.else446

land.lhs.true154:                                 ; preds = %land.lhs.true148
  %118 = load %struct.cv*, %struct.cv** %cv, align 8
  %sv_any155 = getelementptr inbounds %struct.cv, %struct.cv* %118, i32 0, i32 0
  %119 = load %struct.xpvcv*, %struct.xpvcv** %sv_any155, align 8
  %xcv_gv_u = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %119, i32 0, i32 7
  %xcv_gv = bitcast %union.anon.10* %xcv_gv_u to %struct.gv**
  %120 = load %struct.gv*, %struct.gv** %xcv_gv, align 8
  %tobool156 = icmp ne %struct.gv* %120, null
  br i1 %tobool156, label %cond.true157, label %cond.false158

cond.true157:                                     ; preds = %land.lhs.true154
  br i1 true, label %if.then159, label %if.else446

cond.false158:                                    ; preds = %land.lhs.true154
  br i1 false, label %if.then159, label %if.else446

if.then159:                                       ; preds = %cond.false158, %cond.true157
  %121 = load %struct.cv*, %struct.cv** %cv, align 8
  %sv_any160 = getelementptr inbounds %struct.cv, %struct.cv* %121, i32 0, i32 0
  %122 = load %struct.xpvcv*, %struct.xpvcv** %sv_any160, align 8
  %123 = bitcast %struct.xpvcv* %122 to i8*
  %124 = bitcast i8* %123 to %struct.xpvcv*
  %xcv_flags = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %124, i32 0, i32 12
  %125 = load i32, i32* %xcv_flags, align 4
  %and161 = and i32 %125, 32768
  %tobool162 = icmp ne i32 %and161, 0
  br i1 %tobool162, label %cond.true163, label %cond.false165

cond.true163:                                     ; preds = %if.then159
  %126 = load %struct.cv*, %struct.cv** %cv, align 8
  %call164 = call %struct.hek* @CvNAME_HEK(%struct.cv* %126)
  br label %cond.end169

cond.false165:                                    ; preds = %if.then159
  %127 = load %struct.cv*, %struct.cv** %cv, align 8
  %call166 = call %struct.gv* @S_CvGV(%struct.cv* %127)
  %sv_any167 = getelementptr inbounds %struct.gv, %struct.gv* %call166, i32 0, i32 0
  %128 = load %struct.xpvgv*, %struct.xpvgv** %sv_any167, align 8
  %xiv_u168 = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %128, i32 0, i32 4
  %xivu_namehek = bitcast %union._xivu* %xiv_u168 to %struct.hek**
  %129 = load %struct.hek*, %struct.hek** %xivu_namehek, align 8
  br label %cond.end169

cond.end169:                                      ; preds = %cond.false165, %cond.true163
  %cond170 = phi %struct.hek* [ %call164, %cond.true163 ], [ %129, %cond.false165 ]
  store %struct.hek* %cond170, %struct.hek** %gvhek, align 8
  %130 = load %struct.cv*, %struct.cv** %cv, align 8
  %sv_any171 = getelementptr inbounds %struct.cv, %struct.cv* %130, i32 0, i32 0
  %131 = load %struct.xpvcv*, %struct.xpvcv** %sv_any171, align 8
  %132 = bitcast %struct.xpvcv* %131 to i8*
  %133 = bitcast i8* %132 to %struct.xpvcv*
  %xcv_flags172 = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %133, i32 0, i32 12
  %134 = load i32, i32* %xcv_flags172, align 4
  %and173 = and i32 %134, 32768
  %tobool174 = icmp ne i32 %and173, 0
  br i1 %tobool174, label %cond.true175, label %cond.false178

cond.true175:                                     ; preds = %cond.end169
  %135 = load %struct.cv*, %struct.cv** %cv, align 8
  %sv_any176 = getelementptr inbounds %struct.cv, %struct.cv* %135, i32 0, i32 0
  %136 = load %struct.xpvcv*, %struct.xpvcv** %sv_any176, align 8
  %137 = bitcast %struct.xpvcv* %136 to i8*
  %138 = bitcast i8* %137 to %struct.xpvcv*
  %xcv_stash = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %138, i32 0, i32 4
  %139 = load %struct.hv*, %struct.hv** %xcv_stash, align 8
  %add.ptr177 = getelementptr inbounds %struct.hv, %struct.hv* %139, i64 0
  br label %cond.end182

cond.false178:                                    ; preds = %cond.end169
  %140 = load %struct.cv*, %struct.cv** %cv, align 8
  %call179 = call %struct.gv* @S_CvGV(%struct.cv* %140)
  %sv_any180 = getelementptr inbounds %struct.gv, %struct.gv* %call179, i32 0, i32 0
  %141 = load %struct.xpvgv*, %struct.xpvgv** %sv_any180, align 8
  %xnv_u181 = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %141, i32 0, i32 5
  %xgv_stash = bitcast %union._xnvu* %xnv_u181 to %struct.hv**
  %142 = load %struct.hv*, %struct.hv** %xgv_stash, align 8
  br label %cond.end182

cond.end182:                                      ; preds = %cond.false178, %cond.true175
  %cond183 = phi %struct.hv* [ %add.ptr177, %cond.true175 ], [ %142, %cond.false178 ]
  %sv_flags184 = getelementptr inbounds %struct.hv, %struct.hv* %cond183, i32 0, i32 2
  %143 = load i32, i32* %sv_flags184, align 4
  %and185 = and i32 %143, 33554432
  %tobool186 = icmp ne i32 %and185, 0
  br i1 %tobool186, label %land.lhs.true187, label %cond.false342

land.lhs.true187:                                 ; preds = %cond.end182
  %144 = load %struct.cv*, %struct.cv** %cv, align 8
  %sv_any188 = getelementptr inbounds %struct.cv, %struct.cv* %144, i32 0, i32 0
  %145 = load %struct.xpvcv*, %struct.xpvcv** %sv_any188, align 8
  %146 = bitcast %struct.xpvcv* %145 to i8*
  %147 = bitcast i8* %146 to %struct.xpvcv*
  %xcv_flags189 = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %147, i32 0, i32 12
  %148 = load i32, i32* %xcv_flags189, align 4
  %and190 = and i32 %148, 32768
  %tobool191 = icmp ne i32 %and190, 0
  br i1 %tobool191, label %cond.true192, label %cond.false196

cond.true192:                                     ; preds = %land.lhs.true187
  %149 = load %struct.cv*, %struct.cv** %cv, align 8
  %sv_any193 = getelementptr inbounds %struct.cv, %struct.cv* %149, i32 0, i32 0
  %150 = load %struct.xpvcv*, %struct.xpvcv** %sv_any193, align 8
  %151 = bitcast %struct.xpvcv* %150 to i8*
  %152 = bitcast i8* %151 to %struct.xpvcv*
  %xcv_stash194 = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %152, i32 0, i32 4
  %153 = load %struct.hv*, %struct.hv** %xcv_stash194, align 8
  %add.ptr195 = getelementptr inbounds %struct.hv, %struct.hv* %153, i64 0
  br label %cond.end201

cond.false196:                                    ; preds = %land.lhs.true187
  %154 = load %struct.cv*, %struct.cv** %cv, align 8
  %call197 = call %struct.gv* @S_CvGV(%struct.cv* %154)
  %sv_any198 = getelementptr inbounds %struct.gv, %struct.gv* %call197, i32 0, i32 0
  %155 = load %struct.xpvgv*, %struct.xpvgv** %sv_any198, align 8
  %xnv_u199 = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %155, i32 0, i32 5
  %xgv_stash200 = bitcast %union._xnvu* %xnv_u199 to %struct.hv**
  %156 = load %struct.hv*, %struct.hv** %xgv_stash200, align 8
  br label %cond.end201

cond.end201:                                      ; preds = %cond.false196, %cond.true192
  %cond202 = phi %struct.hv* [ %add.ptr195, %cond.true192 ], [ %156, %cond.false196 ]
  %sv_u203 = getelementptr inbounds %struct.hv, %struct.hv* %cond202, i32 0, i32 3
  %svu_hash204 = bitcast %union.anon.4* %sv_u203 to %struct.he***
  %157 = load %struct.he**, %struct.he*** %svu_hash204, align 8
  %158 = load %struct.cv*, %struct.cv** %cv, align 8
  %sv_any205 = getelementptr inbounds %struct.cv, %struct.cv* %158, i32 0, i32 0
  %159 = load %struct.xpvcv*, %struct.xpvcv** %sv_any205, align 8
  %160 = bitcast %struct.xpvcv* %159 to i8*
  %161 = bitcast i8* %160 to %struct.xpvcv*
  %xcv_flags206 = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %161, i32 0, i32 12
  %162 = load i32, i32* %xcv_flags206, align 4
  %and207 = and i32 %162, 32768
  %tobool208 = icmp ne i32 %and207, 0
  br i1 %tobool208, label %cond.true209, label %cond.false213

cond.true209:                                     ; preds = %cond.end201
  %163 = load %struct.cv*, %struct.cv** %cv, align 8
  %sv_any210 = getelementptr inbounds %struct.cv, %struct.cv* %163, i32 0, i32 0
  %164 = load %struct.xpvcv*, %struct.xpvcv** %sv_any210, align 8
  %165 = bitcast %struct.xpvcv* %164 to i8*
  %166 = bitcast i8* %165 to %struct.xpvcv*
  %xcv_stash211 = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %166, i32 0, i32 4
  %167 = load %struct.hv*, %struct.hv** %xcv_stash211, align 8
  %add.ptr212 = getelementptr inbounds %struct.hv, %struct.hv* %167, i64 0
  br label %cond.end218

cond.false213:                                    ; preds = %cond.end201
  %168 = load %struct.cv*, %struct.cv** %cv, align 8
  %call214 = call %struct.gv* @S_CvGV(%struct.cv* %168)
  %sv_any215 = getelementptr inbounds %struct.gv, %struct.gv* %call214, i32 0, i32 0
  %169 = load %struct.xpvgv*, %struct.xpvgv** %sv_any215, align 8
  %xnv_u216 = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %169, i32 0, i32 5
  %xgv_stash217 = bitcast %union._xnvu* %xnv_u216 to %struct.hv**
  %170 = load %struct.hv*, %struct.hv** %xgv_stash217, align 8
  br label %cond.end218

cond.end218:                                      ; preds = %cond.false213, %cond.true209
  %cond219 = phi %struct.hv* [ %add.ptr212, %cond.true209 ], [ %170, %cond.false213 ]
  %sv_any220 = getelementptr inbounds %struct.hv, %struct.hv* %cond219, i32 0, i32 0
  %171 = load %struct.xpvhv*, %struct.xpvhv** %sv_any220, align 8
  %xhv_max221 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %171, i32 0, i32 3
  %172 = load i64, i64* %xhv_max221, align 8
  %add222 = add i64 %172, 1
  %arrayidx223 = getelementptr inbounds %struct.he*, %struct.he** %157, i64 %add222
  %173 = bitcast %struct.he** %arrayidx223 to %struct.xpvhv_aux*
  %xhv_name_u = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %173, i32 0, i32 0
  %xhvnameu_name = bitcast %union._xhvnameu* %xhv_name_u to %struct.hek**
  %174 = load %struct.hek*, %struct.hek** %xhvnameu_name, align 8
  %tobool224 = icmp ne %struct.hek* %174, null
  br i1 %tobool224, label %cond.true225, label %cond.false342

cond.true225:                                     ; preds = %cond.end218
  %175 = load %struct.cv*, %struct.cv** %cv, align 8
  %sv_any226 = getelementptr inbounds %struct.cv, %struct.cv* %175, i32 0, i32 0
  %176 = load %struct.xpvcv*, %struct.xpvcv** %sv_any226, align 8
  %177 = bitcast %struct.xpvcv* %176 to i8*
  %178 = bitcast i8* %177 to %struct.xpvcv*
  %xcv_flags227 = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %178, i32 0, i32 12
  %179 = load i32, i32* %xcv_flags227, align 4
  %and228 = and i32 %179, 32768
  %tobool229 = icmp ne i32 %and228, 0
  br i1 %tobool229, label %cond.true230, label %cond.false234

cond.true230:                                     ; preds = %cond.true225
  %180 = load %struct.cv*, %struct.cv** %cv, align 8
  %sv_any231 = getelementptr inbounds %struct.cv, %struct.cv* %180, i32 0, i32 0
  %181 = load %struct.xpvcv*, %struct.xpvcv** %sv_any231, align 8
  %182 = bitcast %struct.xpvcv* %181 to i8*
  %183 = bitcast i8* %182 to %struct.xpvcv*
  %xcv_stash232 = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %183, i32 0, i32 4
  %184 = load %struct.hv*, %struct.hv** %xcv_stash232, align 8
  %add.ptr233 = getelementptr inbounds %struct.hv, %struct.hv* %184, i64 0
  br label %cond.end239

cond.false234:                                    ; preds = %cond.true225
  %185 = load %struct.cv*, %struct.cv** %cv, align 8
  %call235 = call %struct.gv* @S_CvGV(%struct.cv* %185)
  %sv_any236 = getelementptr inbounds %struct.gv, %struct.gv* %call235, i32 0, i32 0
  %186 = load %struct.xpvgv*, %struct.xpvgv** %sv_any236, align 8
  %xnv_u237 = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %186, i32 0, i32 5
  %xgv_stash238 = bitcast %union._xnvu* %xnv_u237 to %struct.hv**
  %187 = load %struct.hv*, %struct.hv** %xgv_stash238, align 8
  br label %cond.end239

cond.end239:                                      ; preds = %cond.false234, %cond.true230
  %cond240 = phi %struct.hv* [ %add.ptr233, %cond.true230 ], [ %187, %cond.false234 ]
  %sv_u241 = getelementptr inbounds %struct.hv, %struct.hv* %cond240, i32 0, i32 3
  %svu_hash242 = bitcast %union.anon.4* %sv_u241 to %struct.he***
  %188 = load %struct.he**, %struct.he*** %svu_hash242, align 8
  %189 = load %struct.cv*, %struct.cv** %cv, align 8
  %sv_any243 = getelementptr inbounds %struct.cv, %struct.cv* %189, i32 0, i32 0
  %190 = load %struct.xpvcv*, %struct.xpvcv** %sv_any243, align 8
  %191 = bitcast %struct.xpvcv* %190 to i8*
  %192 = bitcast i8* %191 to %struct.xpvcv*
  %xcv_flags244 = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %192, i32 0, i32 12
  %193 = load i32, i32* %xcv_flags244, align 4
  %and245 = and i32 %193, 32768
  %tobool246 = icmp ne i32 %and245, 0
  br i1 %tobool246, label %cond.true247, label %cond.false251

cond.true247:                                     ; preds = %cond.end239
  %194 = load %struct.cv*, %struct.cv** %cv, align 8
  %sv_any248 = getelementptr inbounds %struct.cv, %struct.cv* %194, i32 0, i32 0
  %195 = load %struct.xpvcv*, %struct.xpvcv** %sv_any248, align 8
  %196 = bitcast %struct.xpvcv* %195 to i8*
  %197 = bitcast i8* %196 to %struct.xpvcv*
  %xcv_stash249 = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %197, i32 0, i32 4
  %198 = load %struct.hv*, %struct.hv** %xcv_stash249, align 8
  %add.ptr250 = getelementptr inbounds %struct.hv, %struct.hv* %198, i64 0
  br label %cond.end256

cond.false251:                                    ; preds = %cond.end239
  %199 = load %struct.cv*, %struct.cv** %cv, align 8
  %call252 = call %struct.gv* @S_CvGV(%struct.cv* %199)
  %sv_any253 = getelementptr inbounds %struct.gv, %struct.gv* %call252, i32 0, i32 0
  %200 = load %struct.xpvgv*, %struct.xpvgv** %sv_any253, align 8
  %xnv_u254 = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %200, i32 0, i32 5
  %xgv_stash255 = bitcast %union._xnvu* %xnv_u254 to %struct.hv**
  %201 = load %struct.hv*, %struct.hv** %xgv_stash255, align 8
  br label %cond.end256

cond.end256:                                      ; preds = %cond.false251, %cond.true247
  %cond257 = phi %struct.hv* [ %add.ptr250, %cond.true247 ], [ %201, %cond.false251 ]
  %sv_any258 = getelementptr inbounds %struct.hv, %struct.hv* %cond257, i32 0, i32 0
  %202 = load %struct.xpvhv*, %struct.xpvhv** %sv_any258, align 8
  %xhv_max259 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %202, i32 0, i32 3
  %203 = load i64, i64* %xhv_max259, align 8
  %add260 = add i64 %203, 1
  %arrayidx261 = getelementptr inbounds %struct.he*, %struct.he** %188, i64 %add260
  %204 = bitcast %struct.he** %arrayidx261 to %struct.xpvhv_aux*
  %xhv_name_count = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %204, i32 0, i32 4
  %205 = load i32, i32* %xhv_name_count, align 4
  %tobool262 = icmp ne i32 %205, 0
  br i1 %tobool262, label %cond.true263, label %cond.false301

cond.true263:                                     ; preds = %cond.end256
  %206 = load %struct.cv*, %struct.cv** %cv, align 8
  %sv_any264 = getelementptr inbounds %struct.cv, %struct.cv* %206, i32 0, i32 0
  %207 = load %struct.xpvcv*, %struct.xpvcv** %sv_any264, align 8
  %208 = bitcast %struct.xpvcv* %207 to i8*
  %209 = bitcast i8* %208 to %struct.xpvcv*
  %xcv_flags265 = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %209, i32 0, i32 12
  %210 = load i32, i32* %xcv_flags265, align 4
  %and266 = and i32 %210, 32768
  %tobool267 = icmp ne i32 %and266, 0
  br i1 %tobool267, label %cond.true268, label %cond.false272

cond.true268:                                     ; preds = %cond.true263
  %211 = load %struct.cv*, %struct.cv** %cv, align 8
  %sv_any269 = getelementptr inbounds %struct.cv, %struct.cv* %211, i32 0, i32 0
  %212 = load %struct.xpvcv*, %struct.xpvcv** %sv_any269, align 8
  %213 = bitcast %struct.xpvcv* %212 to i8*
  %214 = bitcast i8* %213 to %struct.xpvcv*
  %xcv_stash270 = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %214, i32 0, i32 4
  %215 = load %struct.hv*, %struct.hv** %xcv_stash270, align 8
  %add.ptr271 = getelementptr inbounds %struct.hv, %struct.hv* %215, i64 0
  br label %cond.end277

cond.false272:                                    ; preds = %cond.true263
  %216 = load %struct.cv*, %struct.cv** %cv, align 8
  %call273 = call %struct.gv* @S_CvGV(%struct.cv* %216)
  %sv_any274 = getelementptr inbounds %struct.gv, %struct.gv* %call273, i32 0, i32 0
  %217 = load %struct.xpvgv*, %struct.xpvgv** %sv_any274, align 8
  %xnv_u275 = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %217, i32 0, i32 5
  %xgv_stash276 = bitcast %union._xnvu* %xnv_u275 to %struct.hv**
  %218 = load %struct.hv*, %struct.hv** %xgv_stash276, align 8
  br label %cond.end277

cond.end277:                                      ; preds = %cond.false272, %cond.true268
  %cond278 = phi %struct.hv* [ %add.ptr271, %cond.true268 ], [ %218, %cond.false272 ]
  %sv_u279 = getelementptr inbounds %struct.hv, %struct.hv* %cond278, i32 0, i32 3
  %svu_hash280 = bitcast %union.anon.4* %sv_u279 to %struct.he***
  %219 = load %struct.he**, %struct.he*** %svu_hash280, align 8
  %220 = load %struct.cv*, %struct.cv** %cv, align 8
  %sv_any281 = getelementptr inbounds %struct.cv, %struct.cv* %220, i32 0, i32 0
  %221 = load %struct.xpvcv*, %struct.xpvcv** %sv_any281, align 8
  %222 = bitcast %struct.xpvcv* %221 to i8*
  %223 = bitcast i8* %222 to %struct.xpvcv*
  %xcv_flags282 = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %223, i32 0, i32 12
  %224 = load i32, i32* %xcv_flags282, align 4
  %and283 = and i32 %224, 32768
  %tobool284 = icmp ne i32 %and283, 0
  br i1 %tobool284, label %cond.true285, label %cond.false289

cond.true285:                                     ; preds = %cond.end277
  %225 = load %struct.cv*, %struct.cv** %cv, align 8
  %sv_any286 = getelementptr inbounds %struct.cv, %struct.cv* %225, i32 0, i32 0
  %226 = load %struct.xpvcv*, %struct.xpvcv** %sv_any286, align 8
  %227 = bitcast %struct.xpvcv* %226 to i8*
  %228 = bitcast i8* %227 to %struct.xpvcv*
  %xcv_stash287 = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %228, i32 0, i32 4
  %229 = load %struct.hv*, %struct.hv** %xcv_stash287, align 8
  %add.ptr288 = getelementptr inbounds %struct.hv, %struct.hv* %229, i64 0
  br label %cond.end294

cond.false289:                                    ; preds = %cond.end277
  %230 = load %struct.cv*, %struct.cv** %cv, align 8
  %call290 = call %struct.gv* @S_CvGV(%struct.cv* %230)
  %sv_any291 = getelementptr inbounds %struct.gv, %struct.gv* %call290, i32 0, i32 0
  %231 = load %struct.xpvgv*, %struct.xpvgv** %sv_any291, align 8
  %xnv_u292 = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %231, i32 0, i32 5
  %xgv_stash293 = bitcast %union._xnvu* %xnv_u292 to %struct.hv**
  %232 = load %struct.hv*, %struct.hv** %xgv_stash293, align 8
  br label %cond.end294

cond.end294:                                      ; preds = %cond.false289, %cond.true285
  %cond295 = phi %struct.hv* [ %add.ptr288, %cond.true285 ], [ %232, %cond.false289 ]
  %sv_any296 = getelementptr inbounds %struct.hv, %struct.hv* %cond295, i32 0, i32 0
  %233 = load %struct.xpvhv*, %struct.xpvhv** %sv_any296, align 8
  %xhv_max297 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %233, i32 0, i32 3
  %234 = load i64, i64* %xhv_max297, align 8
  %add298 = add i64 %234, 1
  %arrayidx299 = getelementptr inbounds %struct.he*, %struct.he** %219, i64 %add298
  %235 = bitcast %struct.he** %arrayidx299 to %struct.xpvhv_aux*
  %xhv_name_u300 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %235, i32 0, i32 0
  %xhvnameu_names = bitcast %union._xhvnameu* %xhv_name_u300 to %struct.hek***
  %236 = load %struct.hek**, %struct.hek*** %xhvnameu_names, align 8
  %237 = load %struct.hek*, %struct.hek** %236, align 8
  br label %cond.end340

cond.false301:                                    ; preds = %cond.end256
  %238 = load %struct.cv*, %struct.cv** %cv, align 8
  %sv_any302 = getelementptr inbounds %struct.cv, %struct.cv* %238, i32 0, i32 0
  %239 = load %struct.xpvcv*, %struct.xpvcv** %sv_any302, align 8
  %240 = bitcast %struct.xpvcv* %239 to i8*
  %241 = bitcast i8* %240 to %struct.xpvcv*
  %xcv_flags303 = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %241, i32 0, i32 12
  %242 = load i32, i32* %xcv_flags303, align 4
  %and304 = and i32 %242, 32768
  %tobool305 = icmp ne i32 %and304, 0
  br i1 %tobool305, label %cond.true306, label %cond.false310

cond.true306:                                     ; preds = %cond.false301
  %243 = load %struct.cv*, %struct.cv** %cv, align 8
  %sv_any307 = getelementptr inbounds %struct.cv, %struct.cv* %243, i32 0, i32 0
  %244 = load %struct.xpvcv*, %struct.xpvcv** %sv_any307, align 8
  %245 = bitcast %struct.xpvcv* %244 to i8*
  %246 = bitcast i8* %245 to %struct.xpvcv*
  %xcv_stash308 = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %246, i32 0, i32 4
  %247 = load %struct.hv*, %struct.hv** %xcv_stash308, align 8
  %add.ptr309 = getelementptr inbounds %struct.hv, %struct.hv* %247, i64 0
  br label %cond.end315

cond.false310:                                    ; preds = %cond.false301
  %248 = load %struct.cv*, %struct.cv** %cv, align 8
  %call311 = call %struct.gv* @S_CvGV(%struct.cv* %248)
  %sv_any312 = getelementptr inbounds %struct.gv, %struct.gv* %call311, i32 0, i32 0
  %249 = load %struct.xpvgv*, %struct.xpvgv** %sv_any312, align 8
  %xnv_u313 = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %249, i32 0, i32 5
  %xgv_stash314 = bitcast %union._xnvu* %xnv_u313 to %struct.hv**
  %250 = load %struct.hv*, %struct.hv** %xgv_stash314, align 8
  br label %cond.end315

cond.end315:                                      ; preds = %cond.false310, %cond.true306
  %cond316 = phi %struct.hv* [ %add.ptr309, %cond.true306 ], [ %250, %cond.false310 ]
  %sv_u317 = getelementptr inbounds %struct.hv, %struct.hv* %cond316, i32 0, i32 3
  %svu_hash318 = bitcast %union.anon.4* %sv_u317 to %struct.he***
  %251 = load %struct.he**, %struct.he*** %svu_hash318, align 8
  %252 = load %struct.cv*, %struct.cv** %cv, align 8
  %sv_any319 = getelementptr inbounds %struct.cv, %struct.cv* %252, i32 0, i32 0
  %253 = load %struct.xpvcv*, %struct.xpvcv** %sv_any319, align 8
  %254 = bitcast %struct.xpvcv* %253 to i8*
  %255 = bitcast i8* %254 to %struct.xpvcv*
  %xcv_flags320 = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %255, i32 0, i32 12
  %256 = load i32, i32* %xcv_flags320, align 4
  %and321 = and i32 %256, 32768
  %tobool322 = icmp ne i32 %and321, 0
  br i1 %tobool322, label %cond.true323, label %cond.false327

cond.true323:                                     ; preds = %cond.end315
  %257 = load %struct.cv*, %struct.cv** %cv, align 8
  %sv_any324 = getelementptr inbounds %struct.cv, %struct.cv* %257, i32 0, i32 0
  %258 = load %struct.xpvcv*, %struct.xpvcv** %sv_any324, align 8
  %259 = bitcast %struct.xpvcv* %258 to i8*
  %260 = bitcast i8* %259 to %struct.xpvcv*
  %xcv_stash325 = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %260, i32 0, i32 4
  %261 = load %struct.hv*, %struct.hv** %xcv_stash325, align 8
  %add.ptr326 = getelementptr inbounds %struct.hv, %struct.hv* %261, i64 0
  br label %cond.end332

cond.false327:                                    ; preds = %cond.end315
  %262 = load %struct.cv*, %struct.cv** %cv, align 8
  %call328 = call %struct.gv* @S_CvGV(%struct.cv* %262)
  %sv_any329 = getelementptr inbounds %struct.gv, %struct.gv* %call328, i32 0, i32 0
  %263 = load %struct.xpvgv*, %struct.xpvgv** %sv_any329, align 8
  %xnv_u330 = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %263, i32 0, i32 5
  %xgv_stash331 = bitcast %union._xnvu* %xnv_u330 to %struct.hv**
  %264 = load %struct.hv*, %struct.hv** %xgv_stash331, align 8
  br label %cond.end332

cond.end332:                                      ; preds = %cond.false327, %cond.true323
  %cond333 = phi %struct.hv* [ %add.ptr326, %cond.true323 ], [ %264, %cond.false327 ]
  %sv_any334 = getelementptr inbounds %struct.hv, %struct.hv* %cond333, i32 0, i32 0
  %265 = load %struct.xpvhv*, %struct.xpvhv** %sv_any334, align 8
  %xhv_max335 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %265, i32 0, i32 3
  %266 = load i64, i64* %xhv_max335, align 8
  %add336 = add i64 %266, 1
  %arrayidx337 = getelementptr inbounds %struct.he*, %struct.he** %251, i64 %add336
  %267 = bitcast %struct.he** %arrayidx337 to %struct.xpvhv_aux*
  %xhv_name_u338 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %267, i32 0, i32 0
  %xhvnameu_name339 = bitcast %union._xhvnameu* %xhv_name_u338 to %struct.hek**
  %268 = load %struct.hek*, %struct.hek** %xhvnameu_name339, align 8
  br label %cond.end340

cond.end340:                                      ; preds = %cond.end332, %cond.end294
  %cond341 = phi %struct.hek* [ %237, %cond.end294 ], [ %268, %cond.end332 ]
  br label %cond.end343

cond.false342:                                    ; preds = %cond.end218, %cond.end182
  br label %cond.end343

cond.end343:                                      ; preds = %cond.false342, %cond.end340
  %cond344 = phi %struct.hek* [ %cond341, %cond.end340 ], [ null, %cond.false342 ]
  store %struct.hek* %cond344, %struct.hek** %stashek, align 8
  %269 = load %struct.hek*, %struct.hek** %gvhek, align 8
  %hek_len = getelementptr inbounds %struct.hek, %struct.hek* %269, i32 0, i32 1
  %270 = load i32, i32* %hek_len, align 4
  %cmp345 = icmp eq i32 %270, 3
  br i1 %cmp345, label %land.lhs.true347, label %if.end445

land.lhs.true347:                                 ; preds = %cond.end343
  %271 = load %struct.hek*, %struct.hek** %gvhek, align 8
  %hek_key = getelementptr inbounds %struct.hek, %struct.hek* %271, i32 0, i32 2
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %hek_key, i64 0, i64 0
  %call348 = call i32 @strcmp(i8* %arraydecay, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.28, i64 0, i64 0)) #4
  %tobool349 = icmp ne i32 %call348, 0
  br i1 %tobool349, label %if.end445, label %land.lhs.true350

land.lhs.true350:                                 ; preds = %land.lhs.true347
  %272 = load %struct.hek*, %struct.hek** %stashek, align 8
  %tobool351 = icmp ne %struct.hek* %272, null
  br i1 %tobool351, label %land.lhs.true352, label %if.end445

land.lhs.true352:                                 ; preds = %land.lhs.true350
  %273 = load %struct.hek*, %struct.hek** %stashek, align 8
  %hek_len353 = getelementptr inbounds %struct.hek, %struct.hek* %273, i32 0, i32 1
  %274 = load i32, i32* %hek_len353, align 4
  %cmp354 = icmp eq i32 %274, 8
  br i1 %cmp354, label %land.lhs.true356, label %if.end445

land.lhs.true356:                                 ; preds = %land.lhs.true352
  %275 = load %struct.hek*, %struct.hek** %stashek, align 8
  %hek_key357 = getelementptr inbounds %struct.hek, %struct.hek* %275, i32 0, i32 2
  %arraydecay358 = getelementptr inbounds [1 x i8], [1 x i8]* %hek_key357, i64 0, i64 0
  %call359 = call i32 @strcmp(i8* %arraydecay358, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.29, i64 0, i64 0)) #4
  %tobool360 = icmp ne i32 %call359, 0
  br i1 %tobool360, label %if.end445, label %if.then361

if.then361:                                       ; preds = %land.lhs.true356
  store %struct.gv* null, %struct.gv** %ngv, align 8
  %276 = load %struct.gv*, %struct.gv** %gv, align 8
  %sv_u362 = getelementptr inbounds %struct.gv, %struct.gv* %276, i32 0, i32 3
  %svu_gp363 = bitcast %union.anon.6* %sv_u362 to %struct.gp**
  %277 = load %struct.gp*, %struct.gp** %svu_gp363, align 8
  %add.ptr364 = getelementptr inbounds %struct.gp, %struct.gp* %277, i64 0
  %gp_sv365 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr364, i32 0, i32 0
  %278 = load %struct.sv*, %struct.sv** %gp_sv365, align 8
  store %struct.sv* %278, %struct.sv** %gvsv, align 8
  %279 = load %struct.sv*, %struct.sv** %gvsv, align 8
  %tobool366 = icmp ne %struct.sv* %279, null
  br i1 %tobool366, label %lor.lhs.false367, label %if.then374

lor.lhs.false367:                                 ; preds = %if.then361
  %280 = load %struct.sv*, %struct.sv** %gvsv, align 8
  %sv_flags368 = getelementptr inbounds %struct.sv, %struct.sv* %280, i32 0, i32 2
  %281 = load i32, i32* %sv_flags368, align 4
  %and369 = and i32 %281, 1024
  %tobool370 = icmp ne i32 %and369, 0
  br i1 %tobool370, label %lor.lhs.false371, label %if.then374

lor.lhs.false371:                                 ; preds = %lor.lhs.false367
  %282 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %283 = load %struct.sv*, %struct.sv** %gvsv, align 8
  %call372 = call %struct.gv* @Perl_gv_fetchmethod_sv_flags(%struct.hv* %282, %struct.sv* %283, i32 0)
  store %struct.gv* %call372, %struct.gv** %ngv, align 8
  %tobool373 = icmp ne %struct.gv* %call372, null
  br i1 %tobool373, label %if.end439, label %if.then374

if.then374:                                       ; preds = %lor.lhs.false371, %lor.lhs.false367, %if.then361
  %284 = load i8, i8* %destructing.addr, align 1
  %tobool375 = trunc i8 %284 to i1
  br i1 %tobool375, label %if.then376, label %if.else377

if.then376:                                       ; preds = %if.then374
  store i32 -1, i32* %retval, align 4
  br label %return

if.else377:                                       ; preds = %if.then374
  %285 = load %struct.sv*, %struct.sv** %gvsv, align 8
  %tobool378 = icmp ne %struct.sv* %285, null
  br i1 %tobool378, label %land.lhs.true379, label %cond.false384

land.lhs.true379:                                 ; preds = %if.else377
  %286 = load %struct.sv*, %struct.sv** %gvsv, align 8
  %sv_flags380 = getelementptr inbounds %struct.sv, %struct.sv* %286, i32 0, i32 2
  %287 = load i32, i32* %sv_flags380, align 4
  %and381 = and i32 %287, 1024
  %tobool382 = icmp ne i32 %and381, 0
  br i1 %tobool382, label %cond.true383, label %cond.false384

cond.true383:                                     ; preds = %land.lhs.true379
  %288 = load %struct.sv*, %struct.sv** %gvsv, align 8
  br label %cond.end386

cond.false384:                                    ; preds = %land.lhs.true379, %if.else377
  %call385 = call %struct.sv* @Perl_newSVpvn_flags(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.30, i64 0, i64 0), i64 3, i32 524288)
  br label %cond.end386

cond.end386:                                      ; preds = %cond.false384, %cond.true383
  %cond387 = phi %struct.sv* [ %288, %cond.true383 ], [ %call385, %cond.false384 ]
  store %struct.sv* %cond387, %struct.sv** %name, align 8
  %289 = load %struct.gv*, %struct.gv** %gv, align 8
  %sv_u388 = getelementptr inbounds %struct.gv, %struct.gv* %289, i32 0, i32 3
  %svu_gp389 = bitcast %union.anon.6* %sv_u388 to %struct.gp**
  %290 = load %struct.gp*, %struct.gp** %svu_gp389, align 8
  %add.ptr390 = getelementptr inbounds %struct.gp, %struct.gp* %290, i64 0
  %gp_cvgen = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr390, i32 0, i32 3
  %291 = load i32, i32* %gp_cvgen, align 8
  %tobool391 = icmp ne i32 %291, 0
  %292 = zext i1 %tobool391 to i64
  %cond392 = select i1 %tobool391, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.32, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.33, i64 0, i64 0)
  %293 = load %struct.sv*, %struct.sv** %name, align 8
  %294 = bitcast %struct.sv* %293 to i8*
  %295 = load i8*, i8** %cp, align 8
  %296 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_flags393 = getelementptr inbounds %struct.hv, %struct.hv* %296, i32 0, i32 2
  %297 = load i32, i32* %sv_flags393, align 4
  %and394 = and i32 %297, 33554432
  %tobool395 = icmp ne i32 %and394, 0
  br i1 %tobool395, label %land.lhs.true396, label %cond.false435

land.lhs.true396:                                 ; preds = %cond.end386
  %298 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_u397 = getelementptr inbounds %struct.hv, %struct.hv* %298, i32 0, i32 3
  %svu_hash398 = bitcast %union.anon.4* %sv_u397 to %struct.he***
  %299 = load %struct.he**, %struct.he*** %svu_hash398, align 8
  %300 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_any399 = getelementptr inbounds %struct.hv, %struct.hv* %300, i32 0, i32 0
  %301 = load %struct.xpvhv*, %struct.xpvhv** %sv_any399, align 8
  %xhv_max400 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %301, i32 0, i32 3
  %302 = load i64, i64* %xhv_max400, align 8
  %add401 = add i64 %302, 1
  %arrayidx402 = getelementptr inbounds %struct.he*, %struct.he** %299, i64 %add401
  %303 = bitcast %struct.he** %arrayidx402 to %struct.xpvhv_aux*
  %xhv_name_u403 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %303, i32 0, i32 0
  %xhvnameu_name404 = bitcast %union._xhvnameu* %xhv_name_u403 to %struct.hek**
  %304 = load %struct.hek*, %struct.hek** %xhvnameu_name404, align 8
  %tobool405 = icmp ne %struct.hek* %304, null
  br i1 %tobool405, label %cond.true406, label %cond.false435

cond.true406:                                     ; preds = %land.lhs.true396
  %305 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_u407 = getelementptr inbounds %struct.hv, %struct.hv* %305, i32 0, i32 3
  %svu_hash408 = bitcast %union.anon.4* %sv_u407 to %struct.he***
  %306 = load %struct.he**, %struct.he*** %svu_hash408, align 8
  %307 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_any409 = getelementptr inbounds %struct.hv, %struct.hv* %307, i32 0, i32 0
  %308 = load %struct.xpvhv*, %struct.xpvhv** %sv_any409, align 8
  %xhv_max410 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %308, i32 0, i32 3
  %309 = load i64, i64* %xhv_max410, align 8
  %add411 = add i64 %309, 1
  %arrayidx412 = getelementptr inbounds %struct.he*, %struct.he** %306, i64 %add411
  %310 = bitcast %struct.he** %arrayidx412 to %struct.xpvhv_aux*
  %xhv_name_count413 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %310, i32 0, i32 4
  %311 = load i32, i32* %xhv_name_count413, align 4
  %tobool414 = icmp ne i32 %311, 0
  br i1 %tobool414, label %cond.true415, label %cond.false424

cond.true415:                                     ; preds = %cond.true406
  %312 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_u416 = getelementptr inbounds %struct.hv, %struct.hv* %312, i32 0, i32 3
  %svu_hash417 = bitcast %union.anon.4* %sv_u416 to %struct.he***
  %313 = load %struct.he**, %struct.he*** %svu_hash417, align 8
  %314 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_any418 = getelementptr inbounds %struct.hv, %struct.hv* %314, i32 0, i32 0
  %315 = load %struct.xpvhv*, %struct.xpvhv** %sv_any418, align 8
  %xhv_max419 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %315, i32 0, i32 3
  %316 = load i64, i64* %xhv_max419, align 8
  %add420 = add i64 %316, 1
  %arrayidx421 = getelementptr inbounds %struct.he*, %struct.he** %313, i64 %add420
  %317 = bitcast %struct.he** %arrayidx421 to %struct.xpvhv_aux*
  %xhv_name_u422 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %317, i32 0, i32 0
  %xhvnameu_names423 = bitcast %union._xhvnameu* %xhv_name_u422 to %struct.hek***
  %318 = load %struct.hek**, %struct.hek*** %xhvnameu_names423, align 8
  %319 = load %struct.hek*, %struct.hek** %318, align 8
  br label %cond.end433

cond.false424:                                    ; preds = %cond.true406
  %320 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_u425 = getelementptr inbounds %struct.hv, %struct.hv* %320, i32 0, i32 3
  %svu_hash426 = bitcast %union.anon.4* %sv_u425 to %struct.he***
  %321 = load %struct.he**, %struct.he*** %svu_hash426, align 8
  %322 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_any427 = getelementptr inbounds %struct.hv, %struct.hv* %322, i32 0, i32 0
  %323 = load %struct.xpvhv*, %struct.xpvhv** %sv_any427, align 8
  %xhv_max428 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %323, i32 0, i32 3
  %324 = load i64, i64* %xhv_max428, align 8
  %add429 = add i64 %324, 1
  %arrayidx430 = getelementptr inbounds %struct.he*, %struct.he** %321, i64 %add429
  %325 = bitcast %struct.he** %arrayidx430 to %struct.xpvhv_aux*
  %xhv_name_u431 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %325, i32 0, i32 0
  %xhvnameu_name432 = bitcast %union._xhvnameu* %xhv_name_u431 to %struct.hek**
  %326 = load %struct.hek*, %struct.hek** %xhvnameu_name432, align 8
  br label %cond.end433

cond.end433:                                      ; preds = %cond.false424, %cond.true415
  %cond434 = phi %struct.hek* [ %319, %cond.true415 ], [ %326, %cond.false424 ]
  br label %cond.end436

cond.false435:                                    ; preds = %land.lhs.true396, %cond.end386
  br label %cond.end436

cond.end436:                                      ; preds = %cond.false435, %cond.end433
  %cond437 = phi %struct.hek* [ %cond434, %cond.end433 ], [ null, %cond.false435 ]
  %327 = bitcast %struct.hek* %cond437 to i8*
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.31, i64 0, i64 0), i8* %cond392, i8* %294, i8* %295, i8* %327)
  br label %if.end438

if.end438:                                        ; preds = %cond.end436
  br label %if.end439

if.end439:                                        ; preds = %if.end438, %lor.lhs.false371
  %328 = load %struct.gv*, %struct.gv** %ngv, align 8
  store %struct.gv* %328, %struct.gv** %gv, align 8
  %sv_u440 = getelementptr inbounds %struct.gv, %struct.gv* %328, i32 0, i32 3
  %svu_gp441 = bitcast %union.anon.6* %sv_u440 to %struct.gp**
  %329 = load %struct.gp*, %struct.gp** %svu_gp441, align 8
  %add.ptr442 = getelementptr inbounds %struct.gp, %struct.gp* %329, i64 0
  %gp_cv443 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr442, i32 0, i32 2
  %330 = load %struct.cv*, %struct.cv** %gp_cv443, align 8
  %add.ptr444 = getelementptr inbounds %struct.cv, %struct.cv* %330, i64 0
  store %struct.cv* %add.ptr444, %struct.cv** %cv, align 8
  br label %if.end445

if.end445:                                        ; preds = %if.end439, %land.lhs.true356, %land.lhs.true352, %land.lhs.true350, %land.lhs.true347, %cond.end343
  store i32 1, i32* %filled, align 4
  br label %if.end450

if.else446:                                       ; preds = %cond.false158, %cond.true157, %land.lhs.true148, %for.body
  %331 = load %struct.gv*, %struct.gv** %gv, align 8
  %tobool447 = icmp ne %struct.gv* %331, null
  br i1 %tobool447, label %if.then448, label %if.end449

if.then448:                                       ; preds = %if.else446
  %332 = load %struct.gv*, %struct.gv** %gv, align 8
  %333 = bitcast %struct.gv* %332 to i8*
  %334 = bitcast i8* %333 to %struct.cv*
  store %struct.cv* %334, %struct.cv** %cv, align 8
  store i32 1, i32* %filled, align 4
  br label %if.end449

if.end449:                                        ; preds = %if.then448, %if.else446
  br label %if.end450

if.end450:                                        ; preds = %if.end449, %if.end445
  %335 = load %struct.cv*, %struct.cv** %cv, align 8
  %336 = bitcast %struct.cv* %335 to i8*
  %337 = bitcast i8* %336 to %struct.sv*
  %call451 = call %struct.sv* @S_SvREFCNT_inc(%struct.sv* %337)
  %338 = bitcast %struct.sv* %call451 to i8*
  %339 = bitcast i8* %338 to %struct.cv*
  %table = getelementptr inbounds %struct.am_table, %struct.am_table* %amt, i32 0, i32 4
  %340 = load i32, i32* %i, align 4
  %idxprom452 = sext i32 %340 to i64
  %arrayidx453 = getelementptr inbounds [75 x %struct.cv*], [75 x %struct.cv*]* %table, i64 0, i64 %idxprom452
  store %struct.cv* %339, %struct.cv** %arrayidx453, align 8
  %341 = load %struct.gv*, %struct.gv** %gv, align 8
  %tobool454 = icmp ne %struct.gv* %341, null
  br i1 %tobool454, label %if.then455, label %if.end456

if.then455:                                       ; preds = %if.end450
  %342 = load i32, i32* %i, align 4
  switch i32 %342, label %sw.epilog [
    i32 1, label %sw.bb
    i32 2, label %sw.bb
    i32 3, label %sw.bb
    i32 4, label %sw.bb
    i32 5, label %sw.bb
    i32 29, label %sw.bb
  ]

sw.bb:                                            ; preds = %if.then455, %if.then455, %if.then455, %if.then455, %if.then455, %if.then455
  store i8 1, i8* %deref_seen, align 1
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.then455, %sw.bb
  br label %if.end456

if.end456:                                        ; preds = %sw.epilog, %if.end450
  br label %for.inc

for.inc:                                          ; preds = %if.end456
  %343 = load i32, i32* %i, align 4
  %inc = add nsw i32 %343, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %344 = load i8, i8* %deref_seen, align 1
  %tobool457 = trunc i8 %344 to i1
  br i1 %tobool457, label %if.end466, label %if.then458

if.then458:                                       ; preds = %for.end
  %345 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_u459 = getelementptr inbounds %struct.hv, %struct.hv* %345, i32 0, i32 3
  %svu_hash460 = bitcast %union.anon.4* %sv_u459 to %struct.he***
  %346 = load %struct.he**, %struct.he*** %svu_hash460, align 8
  %347 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_any461 = getelementptr inbounds %struct.hv, %struct.hv* %347, i32 0, i32 0
  %348 = load %struct.xpvhv*, %struct.xpvhv** %sv_any461, align 8
  %xhv_max462 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %348, i32 0, i32 3
  %349 = load i64, i64* %xhv_max462, align 8
  %add463 = add i64 %349, 1
  %arrayidx464 = getelementptr inbounds %struct.he*, %struct.he** %346, i64 %add463
  %350 = bitcast %struct.he** %arrayidx464 to %struct.xpvhv_aux*
  %xhv_aux_flags465 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %350, i32 0, i32 9
  %351 = load i32, i32* %xhv_aux_flags465, align 4
  %or = or i32 %351, 2
  store i32 %or, i32* %xhv_aux_flags465, align 4
  br label %if.end466

if.end466:                                        ; preds = %if.then458, %for.end
  %352 = load i32, i32* %filled, align 4
  %tobool467 = icmp ne i32 %352, 0
  br i1 %tobool467, label %if.then468, label %if.end473

if.then468:                                       ; preds = %if.end466
  %flags469 = getelementptr inbounds %struct.am_table, %struct.am_table* %amt, i32 0, i32 0
  %353 = load i8, i8* %flags469, align 8
  %conv470 = zext i8 %353 to i32
  %or471 = or i32 %conv470, 1
  %conv472 = trunc i32 %or471 to i8
  store i8 %conv472, i8* %flags469, align 8
  %354 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %355 = bitcast %struct.hv* %354 to i8*
  %356 = bitcast i8* %355 to %struct.sv*
  %357 = bitcast %struct.am_table* %amt to i8*
  call void @Perl_sv_magic(%struct.sv* %356, %struct.sv* null, i32 99, i8* %357, i32 608)
  store i32 1, i32* %retval, align 4
  br label %return

if.end473:                                        ; preds = %if.end466
  br label %no_table

no_table:                                         ; preds = %if.end473, %if.then30
  %flags474 = getelementptr inbounds %struct.am_table, %struct.am_table* %amt, i32 0, i32 0
  %358 = load i8, i8* %flags474, align 8
  %conv475 = zext i8 %358 to i32
  %and476 = and i32 %conv475, -2
  %conv477 = trunc i32 %and476 to i8
  store i8 %conv477, i8* %flags474, align 8
  %359 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %360 = bitcast %struct.hv* %359 to i8*
  %361 = bitcast i8* %360 to %struct.sv*
  %362 = bitcast %struct.am_table* %amt to i8*
  call void @Perl_sv_magic(%struct.sv* %361, %struct.sv* null, i32 99, i8* %362, i32 8)
  store i32 0, i32* %retval, align 4
  br label %return

return:                                           ; preds = %no_table, %if.then468, %if.then376, %if.then12
  %363 = load i32, i32* %retval, align 4
  ret i32 %363
}

declare dso_local %struct.magic* @Perl_mg_find(%struct.sv*, i32) #1

declare dso_local %struct.mro_meta* @Perl_mro_meta_init(%struct.hv*) #1

declare dso_local i32 @Perl_sv_unmagic(%struct.sv*, i32) #1

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare dso_local zeroext i1 @Perl_sv_2bool_flags(%struct.sv*, i32) #1

; Function Attrs: noinline nounwind uwtable
define internal %struct.sv* @S_SvREFCNT_inc(%struct.sv* %sv) #0 {
entry:
  %sv.addr = alloca %struct.sv*, align 8
  store %struct.sv* %sv, %struct.sv** %sv.addr, align 8
  %0 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %cmp = icmp ne %struct.sv* %0, null
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  br i1 true, label %if.then, label %if.end

cond.false:                                       ; preds = %entry
  br i1 false, label %if.then, label %if.end

if.then:                                          ; preds = %cond.false, %cond.true
  %1 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_refcnt = getelementptr inbounds %struct.sv, %struct.sv* %1, i32 0, i32 1
  %2 = load i32, i32* %sv_refcnt, align 8
  %inc = add i32 %2, 1
  store i32 %inc, i32* %sv_refcnt, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %cond.false, %cond.true
  %3 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  ret %struct.sv* %3
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.cv* @Perl_gv_handler(%struct.hv* %stash, i32 %id) #0 {
entry:
  %retval = alloca %struct.cv*, align 8
  %stash.addr = alloca %struct.hv*, align 8
  %id.addr = alloca i32, align 4
  %mg = alloca %struct.magic*, align 8
  %amtp = alloca %struct.am_table*, align 8
  %newgen = alloca i32, align 4
  %stash_meta = alloca %struct.mro_meta*, align 8
  %ret = alloca %struct.cv*, align 8
  %gv = alloca %struct.gv*, align 8
  store %struct.hv* %stash, %struct.hv** %stash.addr, align 8
  store i32 %id, i32* %id.addr, align 4
  %0 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %tobool = icmp ne %struct.hv* %0, null
  br i1 %tobool, label %lor.lhs.false, label %if.then

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_flags = getelementptr inbounds %struct.hv, %struct.hv* %1, i32 0, i32 2
  %2 = load i32, i32* %sv_flags, align 4
  %and = and i32 %2, 33554432
  %tobool1 = icmp ne i32 %and, 0
  br i1 %tobool1, label %land.lhs.true, label %cond.false56

land.lhs.true:                                    ; preds = %lor.lhs.false
  %3 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_u = getelementptr inbounds %struct.hv, %struct.hv* %3, i32 0, i32 3
  %svu_hash = bitcast %union.anon.4* %sv_u to %struct.he***
  %4 = load %struct.he**, %struct.he*** %svu_hash, align 8
  %5 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_any = getelementptr inbounds %struct.hv, %struct.hv* %5, i32 0, i32 0
  %6 = load %struct.xpvhv*, %struct.xpvhv** %sv_any, align 8
  %xhv_max = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %6, i32 0, i32 3
  %7 = load i64, i64* %xhv_max, align 8
  %add = add i64 %7, 1
  %arrayidx = getelementptr inbounds %struct.he*, %struct.he** %4, i64 %add
  %8 = bitcast %struct.he** %arrayidx to %struct.xpvhv_aux*
  %xhv_name_u = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %8, i32 0, i32 0
  %xhvnameu_name = bitcast %union._xhvnameu* %xhv_name_u to %struct.hek**
  %9 = load %struct.hek*, %struct.hek** %xhvnameu_name, align 8
  %tobool2 = icmp ne %struct.hek* %9, null
  br i1 %tobool2, label %land.lhs.true3, label %cond.false56

land.lhs.true3:                                   ; preds = %land.lhs.true
  %10 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_u4 = getelementptr inbounds %struct.hv, %struct.hv* %10, i32 0, i32 3
  %svu_hash5 = bitcast %union.anon.4* %sv_u4 to %struct.he***
  %11 = load %struct.he**, %struct.he*** %svu_hash5, align 8
  %12 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_any6 = getelementptr inbounds %struct.hv, %struct.hv* %12, i32 0, i32 0
  %13 = load %struct.xpvhv*, %struct.xpvhv** %sv_any6, align 8
  %xhv_max7 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %13, i32 0, i32 3
  %14 = load i64, i64* %xhv_max7, align 8
  %add8 = add i64 %14, 1
  %arrayidx9 = getelementptr inbounds %struct.he*, %struct.he** %11, i64 %add8
  %15 = bitcast %struct.he** %arrayidx9 to %struct.xpvhv_aux*
  %xhv_name_count = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %15, i32 0, i32 4
  %16 = load i32, i32* %xhv_name_count, align 4
  %tobool10 = icmp ne i32 %16, 0
  br i1 %tobool10, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true3
  %17 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_u11 = getelementptr inbounds %struct.hv, %struct.hv* %17, i32 0, i32 3
  %svu_hash12 = bitcast %union.anon.4* %sv_u11 to %struct.he***
  %18 = load %struct.he**, %struct.he*** %svu_hash12, align 8
  %19 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_any13 = getelementptr inbounds %struct.hv, %struct.hv* %19, i32 0, i32 0
  %20 = load %struct.xpvhv*, %struct.xpvhv** %sv_any13, align 8
  %xhv_max14 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %20, i32 0, i32 3
  %21 = load i64, i64* %xhv_max14, align 8
  %add15 = add i64 %21, 1
  %arrayidx16 = getelementptr inbounds %struct.he*, %struct.he** %18, i64 %add15
  %22 = bitcast %struct.he** %arrayidx16 to %struct.xpvhv_aux*
  %xhv_name_u17 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %22, i32 0, i32 0
  %xhvnameu_names = bitcast %union._xhvnameu* %xhv_name_u17 to %struct.hek***
  %23 = load %struct.hek**, %struct.hek*** %xhvnameu_names, align 8
  %24 = load %struct.hek*, %struct.hek** %23, align 8
  %tobool18 = icmp ne %struct.hek* %24, null
  br i1 %tobool18, label %cond.true28, label %cond.false56

cond.false:                                       ; preds = %land.lhs.true3
  %25 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_u19 = getelementptr inbounds %struct.hv, %struct.hv* %25, i32 0, i32 3
  %svu_hash20 = bitcast %union.anon.4* %sv_u19 to %struct.he***
  %26 = load %struct.he**, %struct.he*** %svu_hash20, align 8
  %27 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_any21 = getelementptr inbounds %struct.hv, %struct.hv* %27, i32 0, i32 0
  %28 = load %struct.xpvhv*, %struct.xpvhv** %sv_any21, align 8
  %xhv_max22 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %28, i32 0, i32 3
  %29 = load i64, i64* %xhv_max22, align 8
  %add23 = add i64 %29, 1
  %arrayidx24 = getelementptr inbounds %struct.he*, %struct.he** %26, i64 %add23
  %30 = bitcast %struct.he** %arrayidx24 to %struct.xpvhv_aux*
  %xhv_name_u25 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %30, i32 0, i32 0
  %xhvnameu_name26 = bitcast %union._xhvnameu* %xhv_name_u25 to %struct.hek**
  %31 = load %struct.hek*, %struct.hek** %xhvnameu_name26, align 8
  %tobool27 = icmp ne %struct.hek* %31, null
  br i1 %tobool27, label %cond.true28, label %cond.false56

cond.true28:                                      ; preds = %cond.false, %cond.true
  %32 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_u29 = getelementptr inbounds %struct.hv, %struct.hv* %32, i32 0, i32 3
  %svu_hash30 = bitcast %union.anon.4* %sv_u29 to %struct.he***
  %33 = load %struct.he**, %struct.he*** %svu_hash30, align 8
  %34 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_any31 = getelementptr inbounds %struct.hv, %struct.hv* %34, i32 0, i32 0
  %35 = load %struct.xpvhv*, %struct.xpvhv** %sv_any31, align 8
  %xhv_max32 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %35, i32 0, i32 3
  %36 = load i64, i64* %xhv_max32, align 8
  %add33 = add i64 %36, 1
  %arrayidx34 = getelementptr inbounds %struct.he*, %struct.he** %33, i64 %add33
  %37 = bitcast %struct.he** %arrayidx34 to %struct.xpvhv_aux*
  %xhv_name_count35 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %37, i32 0, i32 4
  %38 = load i32, i32* %xhv_name_count35, align 4
  %tobool36 = icmp ne i32 %38, 0
  br i1 %tobool36, label %cond.true37, label %cond.false46

cond.true37:                                      ; preds = %cond.true28
  %39 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_u38 = getelementptr inbounds %struct.hv, %struct.hv* %39, i32 0, i32 3
  %svu_hash39 = bitcast %union.anon.4* %sv_u38 to %struct.he***
  %40 = load %struct.he**, %struct.he*** %svu_hash39, align 8
  %41 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_any40 = getelementptr inbounds %struct.hv, %struct.hv* %41, i32 0, i32 0
  %42 = load %struct.xpvhv*, %struct.xpvhv** %sv_any40, align 8
  %xhv_max41 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %42, i32 0, i32 3
  %43 = load i64, i64* %xhv_max41, align 8
  %add42 = add i64 %43, 1
  %arrayidx43 = getelementptr inbounds %struct.he*, %struct.he** %40, i64 %add42
  %44 = bitcast %struct.he** %arrayidx43 to %struct.xpvhv_aux*
  %xhv_name_u44 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %44, i32 0, i32 0
  %xhvnameu_names45 = bitcast %union._xhvnameu* %xhv_name_u44 to %struct.hek***
  %45 = load %struct.hek**, %struct.hek*** %xhvnameu_names45, align 8
  %46 = load %struct.hek*, %struct.hek** %45, align 8
  br label %cond.end

cond.false46:                                     ; preds = %cond.true28
  %47 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_u47 = getelementptr inbounds %struct.hv, %struct.hv* %47, i32 0, i32 3
  %svu_hash48 = bitcast %union.anon.4* %sv_u47 to %struct.he***
  %48 = load %struct.he**, %struct.he*** %svu_hash48, align 8
  %49 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_any49 = getelementptr inbounds %struct.hv, %struct.hv* %49, i32 0, i32 0
  %50 = load %struct.xpvhv*, %struct.xpvhv** %sv_any49, align 8
  %xhv_max50 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %50, i32 0, i32 3
  %51 = load i64, i64* %xhv_max50, align 8
  %add51 = add i64 %51, 1
  %arrayidx52 = getelementptr inbounds %struct.he*, %struct.he** %48, i64 %add51
  %52 = bitcast %struct.he** %arrayidx52 to %struct.xpvhv_aux*
  %xhv_name_u53 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %52, i32 0, i32 0
  %xhvnameu_name54 = bitcast %union._xhvnameu* %xhv_name_u53 to %struct.hek**
  %53 = load %struct.hek*, %struct.hek** %xhvnameu_name54, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false46, %cond.true37
  %cond = phi %struct.hek* [ %46, %cond.true37 ], [ %53, %cond.false46 ]
  %hek_key = getelementptr inbounds %struct.hek, %struct.hek* %cond, i32 0, i32 2
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %hek_key, i64 0, i64 0
  %tobool55 = icmp ne i8* %arraydecay, null
  br i1 %tobool55, label %if.end, label %if.then

cond.false56:                                     ; preds = %cond.false, %cond.true, %land.lhs.true, %lor.lhs.false
  br i1 false, label %if.end, label %if.then

if.then:                                          ; preds = %cond.false56, %cond.end, %entry
  store %struct.cv* null, %struct.cv** %retval, align 8
  br label %return

if.end:                                           ; preds = %cond.false56, %cond.end
  %54 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_u57 = getelementptr inbounds %struct.hv, %struct.hv* %54, i32 0, i32 3
  %svu_hash58 = bitcast %union.anon.4* %sv_u57 to %struct.he***
  %55 = load %struct.he**, %struct.he*** %svu_hash58, align 8
  %56 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_any59 = getelementptr inbounds %struct.hv, %struct.hv* %56, i32 0, i32 0
  %57 = load %struct.xpvhv*, %struct.xpvhv** %sv_any59, align 8
  %xhv_max60 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %57, i32 0, i32 3
  %58 = load i64, i64* %xhv_max60, align 8
  %add61 = add i64 %58, 1
  %arrayidx62 = getelementptr inbounds %struct.he*, %struct.he** %55, i64 %add61
  %59 = bitcast %struct.he** %arrayidx62 to %struct.xpvhv_aux*
  %xhv_mro_meta = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %59, i32 0, i32 5
  %60 = load %struct.mro_meta*, %struct.mro_meta** %xhv_mro_meta, align 8
  %tobool63 = icmp ne %struct.mro_meta* %60, null
  br i1 %tobool63, label %cond.true64, label %cond.false72

cond.true64:                                      ; preds = %if.end
  %61 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_u65 = getelementptr inbounds %struct.hv, %struct.hv* %61, i32 0, i32 3
  %svu_hash66 = bitcast %union.anon.4* %sv_u65 to %struct.he***
  %62 = load %struct.he**, %struct.he*** %svu_hash66, align 8
  %63 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %sv_any67 = getelementptr inbounds %struct.hv, %struct.hv* %63, i32 0, i32 0
  %64 = load %struct.xpvhv*, %struct.xpvhv** %sv_any67, align 8
  %xhv_max68 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %64, i32 0, i32 3
  %65 = load i64, i64* %xhv_max68, align 8
  %add69 = add i64 %65, 1
  %arrayidx70 = getelementptr inbounds %struct.he*, %struct.he** %62, i64 %add69
  %66 = bitcast %struct.he** %arrayidx70 to %struct.xpvhv_aux*
  %xhv_mro_meta71 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %66, i32 0, i32 5
  %67 = load %struct.mro_meta*, %struct.mro_meta** %xhv_mro_meta71, align 8
  br label %cond.end73

cond.false72:                                     ; preds = %if.end
  %68 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %call = call %struct.mro_meta* @Perl_mro_meta_init(%struct.hv* %68)
  br label %cond.end73

cond.end73:                                       ; preds = %cond.false72, %cond.true64
  %cond74 = phi %struct.mro_meta* [ %67, %cond.true64 ], [ %call, %cond.false72 ]
  store %struct.mro_meta* %cond74, %struct.mro_meta** %stash_meta, align 8
  %69 = load i32, i32* @PL_sub_generation, align 4
  %70 = load %struct.mro_meta*, %struct.mro_meta** %stash_meta, align 8
  %pkg_gen = getelementptr inbounds %struct.mro_meta, %struct.mro_meta* %70, i32 0, i32 4
  %71 = load i32, i32* %pkg_gen, align 4
  %add75 = add i32 %69, %71
  %72 = load %struct.mro_meta*, %struct.mro_meta** %stash_meta, align 8
  %cache_gen = getelementptr inbounds %struct.mro_meta, %struct.mro_meta* %72, i32 0, i32 3
  %73 = load i32, i32* %cache_gen, align 8
  %add76 = add i32 %add75, %73
  store i32 %add76, i32* %newgen, align 4
  %74 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %75 = bitcast %struct.hv* %74 to %struct.sv*
  %call77 = call %struct.magic* @Perl_mg_find(%struct.sv* %75, i32 99)
  store %struct.magic* %call77, %struct.magic** %mg, align 8
  %76 = load %struct.magic*, %struct.magic** %mg, align 8
  %tobool78 = icmp ne %struct.magic* %76, null
  br i1 %tobool78, label %if.end84, label %if.then79

if.then79:                                        ; preds = %cond.end73
  br label %do_update

do_update:                                        ; preds = %if.then86, %if.then79
  %77 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %call80 = call i32 @Perl_Gv_AMupdate(%struct.hv* %77, i1 zeroext false)
  %cmp = icmp eq i32 %call80, -1
  br i1 %cmp, label %if.then81, label %if.end82

if.then81:                                        ; preds = %do_update
  store %struct.cv* null, %struct.cv** %retval, align 8
  br label %return

if.end82:                                         ; preds = %do_update
  %78 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %79 = bitcast %struct.hv* %78 to %struct.sv*
  %call83 = call %struct.magic* @Perl_mg_find(%struct.sv* %79, i32 99)
  store %struct.magic* %call83, %struct.magic** %mg, align 8
  br label %if.end84

if.end84:                                         ; preds = %if.end82, %cond.end73
  %80 = load %struct.magic*, %struct.magic** %mg, align 8
  %mg_ptr = getelementptr inbounds %struct.magic, %struct.magic* %80, i32 0, i32 7
  %81 = load i8*, i8** %mg_ptr, align 8
  %82 = bitcast i8* %81 to %struct.am_table*
  store %struct.am_table* %82, %struct.am_table** %amtp, align 8
  %83 = load %struct.am_table*, %struct.am_table** %amtp, align 8
  %was_ok_sub = getelementptr inbounds %struct.am_table, %struct.am_table* %83, i32 0, i32 3
  %84 = load i32, i32* %was_ok_sub, align 4
  %85 = load i32, i32* %newgen, align 4
  %cmp85 = icmp ne i32 %84, %85
  br i1 %cmp85, label %if.then86, label %if.end87

if.then86:                                        ; preds = %if.end84
  br label %do_update

if.end87:                                         ; preds = %if.end84
  %86 = load %struct.am_table*, %struct.am_table** %amtp, align 8
  %flags = getelementptr inbounds %struct.am_table, %struct.am_table* %86, i32 0, i32 0
  %87 = load i8, i8* %flags, align 8
  %conv = zext i8 %87 to i32
  %and88 = and i32 %conv, 1
  %tobool89 = icmp ne i32 %and88, 0
  br i1 %tobool89, label %if.then90, label %if.end115

if.then90:                                        ; preds = %if.end87
  %88 = load %struct.am_table*, %struct.am_table** %amtp, align 8
  %table = getelementptr inbounds %struct.am_table, %struct.am_table* %88, i32 0, i32 4
  %89 = load i32, i32* %id.addr, align 4
  %idxprom = sext i32 %89 to i64
  %arrayidx91 = getelementptr inbounds [75 x %struct.cv*], [75 x %struct.cv*]* %table, i64 0, i64 %idxprom
  %90 = load %struct.cv*, %struct.cv** %arrayidx91, align 8
  store %struct.cv* %90, %struct.cv** %ret, align 8
  %91 = load %struct.cv*, %struct.cv** %ret, align 8
  %tobool92 = icmp ne %struct.cv* %91, null
  br i1 %tobool92, label %land.lhs.true93, label %if.end114

land.lhs.true93:                                  ; preds = %if.then90
  %92 = load %struct.cv*, %struct.cv** %ret, align 8
  %sv_flags94 = getelementptr inbounds %struct.cv, %struct.cv* %92, i32 0, i32 2
  %93 = load i32, i32* %sv_flags94, align 4
  %and95 = and i32 %93, 255
  %cmp96 = icmp eq i32 %and95, 9
  br i1 %cmp96, label %if.then98, label %if.end114

if.then98:                                        ; preds = %land.lhs.true93
  %94 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %95 = load i32, i32* %id.addr, align 4
  %idxprom99 = sext i32 %95 to i64
  %arrayidx100 = getelementptr inbounds [75 x i8*], [75 x i8*]* @PL_AMG_names, i64 0, i64 %idxprom99
  %96 = load i8*, i8** %arrayidx100, align 8
  %call101 = call %struct.gv* @Perl_gv_fetchmethod_autoload(%struct.hv* %94, i8* %96, i32 1)
  store %struct.gv* %call101, %struct.gv** %gv, align 8
  %97 = load %struct.gv*, %struct.gv** %gv, align 8
  %tobool102 = icmp ne %struct.gv* %97, null
  br i1 %tobool102, label %land.lhs.true103, label %if.end113

land.lhs.true103:                                 ; preds = %if.then98
  %98 = load %struct.gv*, %struct.gv** %gv, align 8
  %sv_u104 = getelementptr inbounds %struct.gv, %struct.gv* %98, i32 0, i32 3
  %svu_gp = bitcast %union.anon.6* %sv_u104 to %struct.gp**
  %99 = load %struct.gp*, %struct.gp** %svu_gp, align 8
  %add.ptr = getelementptr inbounds %struct.gp, %struct.gp* %99, i64 0
  %gp_cv = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr, i32 0, i32 2
  %100 = load %struct.cv*, %struct.cv** %gp_cv, align 8
  %add.ptr105 = getelementptr inbounds %struct.cv, %struct.cv* %100, i64 0
  %tobool106 = icmp ne %struct.cv* %add.ptr105, null
  br i1 %tobool106, label %if.then107, label %if.end113

if.then107:                                       ; preds = %land.lhs.true103
  %101 = load %struct.gv*, %struct.gv** %gv, align 8
  %sv_u108 = getelementptr inbounds %struct.gv, %struct.gv* %101, i32 0, i32 3
  %svu_gp109 = bitcast %union.anon.6* %sv_u108 to %struct.gp**
  %102 = load %struct.gp*, %struct.gp** %svu_gp109, align 8
  %add.ptr110 = getelementptr inbounds %struct.gp, %struct.gp* %102, i64 0
  %gp_cv111 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr110, i32 0, i32 2
  %103 = load %struct.cv*, %struct.cv** %gp_cv111, align 8
  %add.ptr112 = getelementptr inbounds %struct.cv, %struct.cv* %103, i64 0
  store %struct.cv* %add.ptr112, %struct.cv** %retval, align 8
  br label %return

if.end113:                                        ; preds = %land.lhs.true103, %if.then98
  br label %if.end114

if.end114:                                        ; preds = %if.end113, %land.lhs.true93, %if.then90
  %104 = load %struct.cv*, %struct.cv** %ret, align 8
  store %struct.cv* %104, %struct.cv** %retval, align 8
  br label %return

if.end115:                                        ; preds = %if.end87
  store %struct.cv* null, %struct.cv** %retval, align 8
  br label %return

return:                                           ; preds = %if.end115, %if.end114, %if.then107, %if.then81, %if.then
  %105 = load %struct.cv*, %struct.cv** %retval, align 8
  ret %struct.cv* %105
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i1 @Perl_try_amagic_un(i32 %method, i32 %flags) #0 {
entry:
  %retval = alloca i1, align 1
  %method.addr = alloca i32, align 4
  %flags.addr = alloca i32, align 4
  %sp = alloca %struct.sv**, align 8
  %tmpsv = alloca %struct.sv*, align 8
  %arg = alloca %struct.sv*, align 8
  %targ = alloca %struct.sv*, align 8
  store i32 %method, i32* %method.addr, align 4
  store i32 %flags, i32* %flags.addr, align 4
  %0 = load %struct.sv**, %struct.sv*** @PL_stack_sp, align 8
  store %struct.sv** %0, %struct.sv*** %sp, align 8
  %1 = load %struct.sv**, %struct.sv*** %sp, align 8
  %2 = load %struct.sv*, %struct.sv** %1, align 8
  store %struct.sv* %2, %struct.sv** %arg, align 8
  %3 = load %struct.sv*, %struct.sv** %arg, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %3, i32 0, i32 2
  %4 = load i32, i32* %sv_flags, align 4
  %and = and i32 %4, 2097152
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  br i1 true, label %land.rhs, label %land.end

cond.false:                                       ; preds = %entry
  br i1 false, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %cond.false, %cond.true
  %5 = load %struct.sv*, %struct.sv** %arg, align 8
  %call = call i32 @Perl_mg_get(%struct.sv* %5)
  %tobool1 = icmp ne i32 %call, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %cond.false, %cond.true
  %6 = phi i1 [ false, %cond.false ], [ false, %cond.true ], [ %tobool1, %land.rhs ]
  %land.ext = zext i1 %6 to i32
  %7 = load %struct.sv*, %struct.sv** %arg, align 8
  %sv_flags2 = getelementptr inbounds %struct.sv, %struct.sv* %7, i32 0, i32 2
  %8 = load i32, i32* %sv_flags2, align 4
  %and3 = and i32 %8, 2048
  %tobool4 = icmp ne i32 %and3, 0
  br i1 %tobool4, label %land.lhs.true, label %if.end37

land.lhs.true:                                    ; preds = %land.end
  %9 = load %struct.sv*, %struct.sv** %arg, align 8
  %sv_u = getelementptr inbounds %struct.sv, %struct.sv* %9, i32 0, i32 3
  %svu_rv = bitcast %union.anon* %sv_u to %struct.sv**
  %10 = load %struct.sv*, %struct.sv** %svu_rv, align 8
  %sv_flags5 = getelementptr inbounds %struct.sv, %struct.sv* %10, i32 0, i32 2
  %11 = load i32, i32* %sv_flags5, align 4
  %and6 = and i32 %11, 1048576
  %tobool7 = icmp ne i32 %and6, 0
  br i1 %tobool7, label %land.lhs.true8, label %if.end37

land.lhs.true8:                                   ; preds = %land.lhs.true
  %12 = load %struct.sv*, %struct.sv** %arg, align 8
  %sv_u9 = getelementptr inbounds %struct.sv, %struct.sv* %12, i32 0, i32 3
  %svu_rv10 = bitcast %union.anon* %sv_u9 to %struct.sv**
  %13 = load %struct.sv*, %struct.sv** %svu_rv10, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %13, i32 0, i32 0
  %14 = load i8*, i8** %sv_any, align 8
  %15 = bitcast i8* %14 to %struct.xpvmg*
  %xmg_stash = getelementptr inbounds %struct.xpvmg, %struct.xpvmg* %15, i32 0, i32 0
  %16 = load %struct.hv*, %struct.hv** %xmg_stash, align 8
  %sv_flags11 = getelementptr inbounds %struct.hv, %struct.hv* %16, i32 0, i32 2
  %17 = load i32, i32* %sv_flags11, align 4
  %and12 = and i32 %17, 268435456
  %tobool13 = icmp ne i32 %and12, 0
  br i1 %tobool13, label %land.lhs.true14, label %if.end37

land.lhs.true14:                                  ; preds = %land.lhs.true8
  %18 = load %struct.sv*, %struct.sv** %arg, align 8
  %19 = load i32, i32* %method.addr, align 4
  %20 = load i32, i32* %flags.addr, align 4
  %and15 = and i32 %20, 128
  %or = or i32 9, %and15
  %call16 = call %struct.sv* @Perl_amagic_call(%struct.sv* %18, %struct.sv* @PL_sv_undef, i32 %19, i32 %or)
  store %struct.sv* %call16, %struct.sv** %tmpsv, align 8
  %tobool17 = icmp ne %struct.sv* %call16, null
  br i1 %tobool17, label %if.then, label %if.end37

if.then:                                          ; preds = %land.lhs.true14
  %21 = load i32, i32* %flags.addr, align 4
  %and18 = and i32 %21, 32
  %tobool19 = icmp ne i32 %and18, 0
  br i1 %tobool19, label %if.then20, label %if.else

if.then20:                                        ; preds = %if.then
  %22 = load %struct.sv*, %struct.sv** %tmpsv, align 8
  %23 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv* %22, %struct.sv** %23, align 8
  br label %if.end36

if.else:                                          ; preds = %if.then
  %24 = load %struct.sv**, %struct.sv*** @PL_curpad, align 8
  %25 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_targ = getelementptr inbounds %struct.op, %struct.op* %25, i32 0, i32 3
  %26 = load i64, i64* %op_targ, align 8
  %arrayidx = getelementptr inbounds %struct.sv*, %struct.sv** %24, i64 %26
  %27 = load %struct.sv*, %struct.sv** %arrayidx, align 8
  store %struct.sv* %27, %struct.sv** %targ, align 8
  %28 = load %struct.sv*, %struct.sv** %targ, align 8
  %sv_flags21 = getelementptr inbounds %struct.sv, %struct.sv* %28, i32 0, i32 2
  %29 = load i32, i32* %sv_flags21, align 4
  %and22 = and i32 %29, 131072
  %tobool23 = icmp ne i32 %and22, 0
  br i1 %tobool23, label %if.else34, label %if.then24

if.then24:                                        ; preds = %if.else
  %30 = load %struct.sv*, %struct.sv** %targ, align 8
  %31 = load %struct.sv*, %struct.sv** %tmpsv, align 8
  call void @Perl_sv_setsv_flags(%struct.sv* %30, %struct.sv* %31, i32 1538)
  br label %do.body

do.body:                                          ; preds = %if.then24
  br label %do.body25

do.body25:                                        ; preds = %do.body
  %32 = load %struct.sv*, %struct.sv** %targ, align 8
  %sv_flags26 = getelementptr inbounds %struct.sv, %struct.sv* %32, i32 0, i32 2
  %33 = load i32, i32* %sv_flags26, align 4
  %and27 = and i32 %33, 4194304
  %tobool28 = icmp ne i32 %and27, 0
  br i1 %tobool28, label %cond.true29, label %cond.false30

cond.true29:                                      ; preds = %do.body25
  br i1 true, label %if.then31, label %if.end

cond.false30:                                     ; preds = %do.body25
  br i1 false, label %if.then31, label %if.end

if.then31:                                        ; preds = %cond.false30, %cond.true29
  %34 = load %struct.sv*, %struct.sv** %targ, align 8
  %call32 = call i32 @Perl_mg_set(%struct.sv* %34)
  br label %if.end

if.end:                                           ; preds = %if.then31, %cond.false30, %cond.true29
  br label %do.end

do.end:                                           ; preds = %if.end
  %35 = load %struct.sv*, %struct.sv** %targ, align 8
  %36 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv* %35, %struct.sv** %36, align 8
  br label %do.end33

do.end33:                                         ; preds = %do.end
  br label %if.end35

if.else34:                                        ; preds = %if.else
  %37 = load %struct.sv*, %struct.sv** %tmpsv, align 8
  %38 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv* %37, %struct.sv** %38, align 8
  br label %if.end35

if.end35:                                         ; preds = %if.else34, %do.end33
  br label %if.end36

if.end36:                                         ; preds = %if.end35, %if.then20
  %39 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %39, %struct.sv*** @PL_stack_sp, align 8
  store i1 true, i1* %retval, align 1
  br label %return

if.end37:                                         ; preds = %land.lhs.true14, %land.lhs.true8, %land.lhs.true, %land.end
  %40 = load i32, i32* %flags.addr, align 4
  %and38 = and i32 %40, 16
  %tobool39 = icmp ne i32 %and38, 0
  br i1 %tobool39, label %land.lhs.true40, label %if.end46

land.lhs.true40:                                  ; preds = %if.end37
  %41 = load %struct.sv*, %struct.sv** %arg, align 8
  %sv_flags41 = getelementptr inbounds %struct.sv, %struct.sv* %41, i32 0, i32 2
  %42 = load i32, i32* %sv_flags41, align 4
  %and42 = and i32 %42, 2048
  %tobool43 = icmp ne i32 %and42, 0
  br i1 %tobool43, label %if.then44, label %if.end46

if.then44:                                        ; preds = %land.lhs.true40
  %43 = load %struct.sv*, %struct.sv** %arg, align 8
  %call45 = call %struct.sv* @Perl_sv_2num(%struct.sv* %43)
  %44 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv* %call45, %struct.sv** %44, align 8
  br label %if.end46

if.end46:                                         ; preds = %if.then44, %land.lhs.true40, %if.end37
  store i1 false, i1* %retval, align 1
  br label %return

return:                                           ; preds = %if.end46, %if.end36
  %45 = load i1, i1* %retval, align 1
  ret i1 %45
}

declare dso_local i32 @Perl_mg_get(%struct.sv*) #1

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.sv* @Perl_amagic_call(%struct.sv* %left, %struct.sv* %right, i32 %method, i32 %flags) #0 {
entry:
  %retval = alloca %struct.sv*, align 8
  %left.addr = alloca %struct.sv*, align 8
  %right.addr = alloca %struct.sv*, align 8
  %method.addr = alloca i32, align 4
  %flags.addr = alloca i32, align 4
  %mg = alloca %struct.magic*, align 8
  %cv = alloca %struct.cv*, align 8
  %cvp = alloca %struct.cv**, align 8
  %ocvp = alloca %struct.cv**, align 8
  %amtp = alloca %struct.am_table*, align 8
  %oamtp = alloca %struct.am_table*, align 8
  %off = alloca i32, align 4
  %off1 = alloca i32, align 4
  %lr = alloca i32, align 4
  %notfound = alloca i32, align 4
  %postpr = alloca i32, align 4
  %force_cpy = alloca i32, align 4
  %assign = alloca i32, align 4
  %assignshift = alloca i32, align 4
  %use_default_op = alloca i32, align 4
  %force_scalar = alloca i32, align 4
  %stash = alloca %struct.hv*, align 8
  %logic = alloca i32, align 4
  %tmpRef = alloca %struct.sv*, align 8
  %newref = alloca %struct.sv*, align 8
  %nullsv = alloca %struct.sv*, align 8
  %lessp = alloca %struct.sv*, align 8
  %lessp318 = alloca %struct.sv*, align 8
  %msg = alloca %struct.sv*, align 8
  %tmpRef900 = alloca %struct.sv*, align 8
  %rv_copy = alloca %struct.sv*, align 8
  %sp = alloca %struct.sv**, align 8
  %myop = alloca %struct.binop, align 8
  %res = alloca %struct.sv*, align 8
  %oldcatch = alloca i8, align 1
  %oldmark = alloca i32, align 4
  %nret = alloca i32, align 4
  %gimme = alloca i32, align 4
  %next = alloca %struct.stackinfo*, align 8
  %sp1094 = alloca %struct.sv**, align 8
  %prev = alloca %struct.stackinfo*, align 8
  %ans = alloca i32, align 4
  store %struct.sv* %left, %struct.sv** %left.addr, align 8
  store %struct.sv* %right, %struct.sv** %right.addr, align 8
  store i32 %method, i32* %method.addr, align 4
  store i32 %flags, i32* %flags.addr, align 4
  store %struct.cv* null, %struct.cv** %cv, align 8
  store %struct.cv** null, %struct.cv*** %cvp, align 8
  store %struct.cv** null, %struct.cv*** %ocvp, align 8
  store %struct.am_table* null, %struct.am_table** %amtp, align 8
  store %struct.am_table* null, %struct.am_table** %oamtp, align 8
  store i32 0, i32* %off, align 4
  store i32 0, i32* %lr, align 4
  store i32 0, i32* %notfound, align 4
  store i32 0, i32* %postpr, align 4
  store i32 0, i32* %force_cpy, align 4
  %0 = load i32, i32* %flags.addr, align 4
  %and = and i32 4, %0
  store i32 %and, i32* %assign, align 4
  %1 = load i32, i32* %assign, align 4
  %tobool = icmp ne i32 %1, 0
  %2 = zext i1 %tobool to i64
  %cond = select i1 %tobool, i32 1, i32 0
  store i32 %cond, i32* %assignshift, align 4
  store i32 0, i32* %use_default_op, align 4
  store i32 0, i32* %force_scalar, align 4
  store %struct.hv* null, %struct.hv** %stash, align 8
  %3 = load %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_hints = getelementptr inbounds %struct.cop, %struct.cop* %3, i32 0, i32 10
  %4 = load i32, i32* %cop_hints, align 8
  %and1 = and i32 %4, 16777216
  %tobool2 = icmp ne i32 %and1, 0
  br i1 %tobool2, label %if.then, label %if.end4

if.then:                                          ; preds = %entry
  %5 = load i32, i32* %method.addr, align 4
  %call = call zeroext i1 @Perl_amagic_is_enabled(i32 %5)
  br i1 %call, label %if.end, label %if.then3

if.then3:                                         ; preds = %if.then
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end:                                           ; preds = %if.then
  br label %if.end4

if.end4:                                          ; preds = %if.end, %entry
  %6 = load i32, i32* %flags.addr, align 4
  %and5 = and i32 2, %6
  %tobool6 = icmp ne i32 %and5, 0
  br i1 %tobool6, label %if.else, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end4
  %7 = load %struct.sv*, %struct.sv** %left.addr, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %7, i32 0, i32 2
  %8 = load i32, i32* %sv_flags, align 4
  %and7 = and i32 %8, 2048
  %tobool8 = icmp ne i32 %and7, 0
  br i1 %tobool8, label %land.lhs.true9, label %if.else

land.lhs.true9:                                   ; preds = %land.lhs.true
  %9 = load %struct.sv*, %struct.sv** %left.addr, align 8
  %sv_u = getelementptr inbounds %struct.sv, %struct.sv* %9, i32 0, i32 3
  %svu_rv = bitcast %union.anon* %sv_u to %struct.sv**
  %10 = load %struct.sv*, %struct.sv** %svu_rv, align 8
  %sv_flags10 = getelementptr inbounds %struct.sv, %struct.sv* %10, i32 0, i32 2
  %11 = load i32, i32* %sv_flags10, align 4
  %and11 = and i32 %11, 1048576
  %tobool12 = icmp ne i32 %and11, 0
  br i1 %tobool12, label %land.lhs.true13, label %if.else

land.lhs.true13:                                  ; preds = %land.lhs.true9
  %12 = load %struct.sv*, %struct.sv** %left.addr, align 8
  %sv_u14 = getelementptr inbounds %struct.sv, %struct.sv* %12, i32 0, i32 3
  %svu_rv15 = bitcast %union.anon* %sv_u14 to %struct.sv**
  %13 = load %struct.sv*, %struct.sv** %svu_rv15, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %13, i32 0, i32 0
  %14 = load i8*, i8** %sv_any, align 8
  %15 = bitcast i8* %14 to %struct.xpvmg*
  %xmg_stash = getelementptr inbounds %struct.xpvmg, %struct.xpvmg* %15, i32 0, i32 0
  %16 = load %struct.hv*, %struct.hv** %xmg_stash, align 8
  %sv_flags16 = getelementptr inbounds %struct.hv, %struct.hv* %16, i32 0, i32 2
  %17 = load i32, i32* %sv_flags16, align 4
  %and17 = and i32 %17, 268435456
  %tobool18 = icmp ne i32 %and17, 0
  br i1 %tobool18, label %land.lhs.true19, label %if.else

land.lhs.true19:                                  ; preds = %land.lhs.true13
  %18 = load %struct.sv*, %struct.sv** %left.addr, align 8
  %sv_u20 = getelementptr inbounds %struct.sv, %struct.sv* %18, i32 0, i32 3
  %svu_rv21 = bitcast %union.anon* %sv_u20 to %struct.sv**
  %19 = load %struct.sv*, %struct.sv** %svu_rv21, align 8
  %sv_any22 = getelementptr inbounds %struct.sv, %struct.sv* %19, i32 0, i32 0
  %20 = load i8*, i8** %sv_any22, align 8
  %21 = bitcast i8* %20 to %struct.xpvmg*
  %xmg_stash23 = getelementptr inbounds %struct.xpvmg, %struct.xpvmg* %21, i32 0, i32 0
  %22 = load %struct.hv*, %struct.hv** %xmg_stash23, align 8
  store %struct.hv* %22, %struct.hv** %stash, align 8
  %tobool24 = icmp ne %struct.hv* %22, null
  br i1 %tobool24, label %land.lhs.true25, label %if.else

land.lhs.true25:                                  ; preds = %land.lhs.true19
  %23 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_flags26 = getelementptr inbounds %struct.hv, %struct.hv* %23, i32 0, i32 2
  %24 = load i32, i32* %sv_flags26, align 4
  %and27 = and i32 %24, 33554432
  %tobool28 = icmp ne i32 %and27, 0
  br i1 %tobool28, label %land.lhs.true29, label %cond.false87

land.lhs.true29:                                  ; preds = %land.lhs.true25
  %25 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u30 = getelementptr inbounds %struct.hv, %struct.hv* %25, i32 0, i32 3
  %svu_hash = bitcast %union.anon.4* %sv_u30 to %struct.he***
  %26 = load %struct.he**, %struct.he*** %svu_hash, align 8
  %27 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any31 = getelementptr inbounds %struct.hv, %struct.hv* %27, i32 0, i32 0
  %28 = load %struct.xpvhv*, %struct.xpvhv** %sv_any31, align 8
  %xhv_max = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %28, i32 0, i32 3
  %29 = load i64, i64* %xhv_max, align 8
  %add = add i64 %29, 1
  %arrayidx = getelementptr inbounds %struct.he*, %struct.he** %26, i64 %add
  %30 = bitcast %struct.he** %arrayidx to %struct.xpvhv_aux*
  %xhv_name_u = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %30, i32 0, i32 0
  %xhvnameu_name = bitcast %union._xhvnameu* %xhv_name_u to %struct.hek**
  %31 = load %struct.hek*, %struct.hek** %xhvnameu_name, align 8
  %tobool32 = icmp ne %struct.hek* %31, null
  br i1 %tobool32, label %land.lhs.true33, label %cond.false87

land.lhs.true33:                                  ; preds = %land.lhs.true29
  %32 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u34 = getelementptr inbounds %struct.hv, %struct.hv* %32, i32 0, i32 3
  %svu_hash35 = bitcast %union.anon.4* %sv_u34 to %struct.he***
  %33 = load %struct.he**, %struct.he*** %svu_hash35, align 8
  %34 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any36 = getelementptr inbounds %struct.hv, %struct.hv* %34, i32 0, i32 0
  %35 = load %struct.xpvhv*, %struct.xpvhv** %sv_any36, align 8
  %xhv_max37 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %35, i32 0, i32 3
  %36 = load i64, i64* %xhv_max37, align 8
  %add38 = add i64 %36, 1
  %arrayidx39 = getelementptr inbounds %struct.he*, %struct.he** %33, i64 %add38
  %37 = bitcast %struct.he** %arrayidx39 to %struct.xpvhv_aux*
  %xhv_name_count = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %37, i32 0, i32 4
  %38 = load i32, i32* %xhv_name_count, align 4
  %tobool40 = icmp ne i32 %38, 0
  br i1 %tobool40, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true33
  %39 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u41 = getelementptr inbounds %struct.hv, %struct.hv* %39, i32 0, i32 3
  %svu_hash42 = bitcast %union.anon.4* %sv_u41 to %struct.he***
  %40 = load %struct.he**, %struct.he*** %svu_hash42, align 8
  %41 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any43 = getelementptr inbounds %struct.hv, %struct.hv* %41, i32 0, i32 0
  %42 = load %struct.xpvhv*, %struct.xpvhv** %sv_any43, align 8
  %xhv_max44 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %42, i32 0, i32 3
  %43 = load i64, i64* %xhv_max44, align 8
  %add45 = add i64 %43, 1
  %arrayidx46 = getelementptr inbounds %struct.he*, %struct.he** %40, i64 %add45
  %44 = bitcast %struct.he** %arrayidx46 to %struct.xpvhv_aux*
  %xhv_name_u47 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %44, i32 0, i32 0
  %xhvnameu_names = bitcast %union._xhvnameu* %xhv_name_u47 to %struct.hek***
  %45 = load %struct.hek**, %struct.hek*** %xhvnameu_names, align 8
  %46 = load %struct.hek*, %struct.hek** %45, align 8
  %tobool48 = icmp ne %struct.hek* %46, null
  br i1 %tobool48, label %cond.true58, label %cond.false87

cond.false:                                       ; preds = %land.lhs.true33
  %47 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u49 = getelementptr inbounds %struct.hv, %struct.hv* %47, i32 0, i32 3
  %svu_hash50 = bitcast %union.anon.4* %sv_u49 to %struct.he***
  %48 = load %struct.he**, %struct.he*** %svu_hash50, align 8
  %49 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any51 = getelementptr inbounds %struct.hv, %struct.hv* %49, i32 0, i32 0
  %50 = load %struct.xpvhv*, %struct.xpvhv** %sv_any51, align 8
  %xhv_max52 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %50, i32 0, i32 3
  %51 = load i64, i64* %xhv_max52, align 8
  %add53 = add i64 %51, 1
  %arrayidx54 = getelementptr inbounds %struct.he*, %struct.he** %48, i64 %add53
  %52 = bitcast %struct.he** %arrayidx54 to %struct.xpvhv_aux*
  %xhv_name_u55 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %52, i32 0, i32 0
  %xhvnameu_name56 = bitcast %union._xhvnameu* %xhv_name_u55 to %struct.hek**
  %53 = load %struct.hek*, %struct.hek** %xhvnameu_name56, align 8
  %tobool57 = icmp ne %struct.hek* %53, null
  br i1 %tobool57, label %cond.true58, label %cond.false87

cond.true58:                                      ; preds = %cond.false, %cond.true
  %54 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u59 = getelementptr inbounds %struct.hv, %struct.hv* %54, i32 0, i32 3
  %svu_hash60 = bitcast %union.anon.4* %sv_u59 to %struct.he***
  %55 = load %struct.he**, %struct.he*** %svu_hash60, align 8
  %56 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any61 = getelementptr inbounds %struct.hv, %struct.hv* %56, i32 0, i32 0
  %57 = load %struct.xpvhv*, %struct.xpvhv** %sv_any61, align 8
  %xhv_max62 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %57, i32 0, i32 3
  %58 = load i64, i64* %xhv_max62, align 8
  %add63 = add i64 %58, 1
  %arrayidx64 = getelementptr inbounds %struct.he*, %struct.he** %55, i64 %add63
  %59 = bitcast %struct.he** %arrayidx64 to %struct.xpvhv_aux*
  %xhv_name_count65 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %59, i32 0, i32 4
  %60 = load i32, i32* %xhv_name_count65, align 4
  %tobool66 = icmp ne i32 %60, 0
  br i1 %tobool66, label %cond.true67, label %cond.false76

cond.true67:                                      ; preds = %cond.true58
  %61 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u68 = getelementptr inbounds %struct.hv, %struct.hv* %61, i32 0, i32 3
  %svu_hash69 = bitcast %union.anon.4* %sv_u68 to %struct.he***
  %62 = load %struct.he**, %struct.he*** %svu_hash69, align 8
  %63 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any70 = getelementptr inbounds %struct.hv, %struct.hv* %63, i32 0, i32 0
  %64 = load %struct.xpvhv*, %struct.xpvhv** %sv_any70, align 8
  %xhv_max71 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %64, i32 0, i32 3
  %65 = load i64, i64* %xhv_max71, align 8
  %add72 = add i64 %65, 1
  %arrayidx73 = getelementptr inbounds %struct.he*, %struct.he** %62, i64 %add72
  %66 = bitcast %struct.he** %arrayidx73 to %struct.xpvhv_aux*
  %xhv_name_u74 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %66, i32 0, i32 0
  %xhvnameu_names75 = bitcast %union._xhvnameu* %xhv_name_u74 to %struct.hek***
  %67 = load %struct.hek**, %struct.hek*** %xhvnameu_names75, align 8
  %68 = load %struct.hek*, %struct.hek** %67, align 8
  br label %cond.end

cond.false76:                                     ; preds = %cond.true58
  %69 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u77 = getelementptr inbounds %struct.hv, %struct.hv* %69, i32 0, i32 3
  %svu_hash78 = bitcast %union.anon.4* %sv_u77 to %struct.he***
  %70 = load %struct.he**, %struct.he*** %svu_hash78, align 8
  %71 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any79 = getelementptr inbounds %struct.hv, %struct.hv* %71, i32 0, i32 0
  %72 = load %struct.xpvhv*, %struct.xpvhv** %sv_any79, align 8
  %xhv_max80 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %72, i32 0, i32 3
  %73 = load i64, i64* %xhv_max80, align 8
  %add81 = add i64 %73, 1
  %arrayidx82 = getelementptr inbounds %struct.he*, %struct.he** %70, i64 %add81
  %74 = bitcast %struct.he** %arrayidx82 to %struct.xpvhv_aux*
  %xhv_name_u83 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %74, i32 0, i32 0
  %xhvnameu_name84 = bitcast %union._xhvnameu* %xhv_name_u83 to %struct.hek**
  %75 = load %struct.hek*, %struct.hek** %xhvnameu_name84, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false76, %cond.true67
  %cond85 = phi %struct.hek* [ %68, %cond.true67 ], [ %75, %cond.false76 ]
  %hek_key = getelementptr inbounds %struct.hek, %struct.hek* %cond85, i32 0, i32 2
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %hek_key, i64 0, i64 0
  %tobool86 = icmp ne i8* %arraydecay, null
  br i1 %tobool86, label %land.lhs.true88, label %cond.false92

cond.false87:                                     ; preds = %cond.false, %cond.true, %land.lhs.true29, %land.lhs.true25
  br i1 false, label %land.lhs.true88, label %cond.false92

land.lhs.true88:                                  ; preds = %cond.false87, %cond.end
  %76 = load %struct.hv*, %struct.hv** %stash, align 8
  %call89 = call i32 @Perl_Gv_AMupdate(%struct.hv* %76, i1 zeroext false)
  %tobool90 = icmp ne i32 %call89, 0
  br i1 %tobool90, label %cond.true91, label %cond.false92

cond.true91:                                      ; preds = %land.lhs.true88
  br i1 true, label %land.lhs.true95, label %if.else

cond.false92:                                     ; preds = %land.lhs.true88, %cond.false87, %cond.end
  %77 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_flags93 = getelementptr inbounds %struct.hv, %struct.hv* %77, i32 0, i32 2
  %78 = load i32, i32* %sv_flags93, align 4
  %and94 = and i32 %78, -268435457
  store i32 %and94, i32* %sv_flags93, align 4
  br i1 false, label %land.lhs.true95, label %if.else

land.lhs.true95:                                  ; preds = %cond.false92, %cond.true91
  %79 = load %struct.hv*, %struct.hv** %stash, align 8
  %80 = bitcast %struct.hv* %79 to %struct.sv*
  %call96 = call %struct.magic* @Perl_mg_find(%struct.sv* %80, i32 99)
  store %struct.magic* %call96, %struct.magic** %mg, align 8
  %tobool97 = icmp ne %struct.magic* %call96, null
  br i1 %tobool97, label %land.lhs.true98, label %if.else

land.lhs.true98:                                  ; preds = %land.lhs.true95
  %81 = load %struct.magic*, %struct.magic** %mg, align 8
  %mg_ptr = getelementptr inbounds %struct.magic, %struct.magic* %81, i32 0, i32 7
  %82 = load i8*, i8** %mg_ptr, align 8
  %83 = bitcast i8* %82 to %struct.am_table*
  %flags99 = getelementptr inbounds %struct.am_table, %struct.am_table* %83, i32 0, i32 0
  %84 = load i8, i8* %flags99, align 8
  %conv = zext i8 %84 to i32
  %and100 = and i32 %conv, 1
  %tobool101 = icmp ne i32 %and100, 0
  br i1 %tobool101, label %cond.true102, label %cond.false105

cond.true102:                                     ; preds = %land.lhs.true98
  %85 = load %struct.magic*, %struct.magic** %mg, align 8
  %mg_ptr103 = getelementptr inbounds %struct.magic, %struct.magic* %85, i32 0, i32 7
  %86 = load i8*, i8** %mg_ptr103, align 8
  %87 = bitcast i8* %86 to %struct.am_table*
  store %struct.am_table* %87, %struct.am_table** %amtp, align 8
  store %struct.am_table* %87, %struct.am_table** %oamtp, align 8
  %table = getelementptr inbounds %struct.am_table, %struct.am_table* %87, i32 0, i32 4
  %arraydecay104 = getelementptr inbounds [75 x %struct.cv*], [75 x %struct.cv*]* %table, i64 0, i64 0
  br label %cond.end106

cond.false105:                                    ; preds = %land.lhs.true98
  br label %cond.end106

cond.end106:                                      ; preds = %cond.false105, %cond.true102
  %cond107 = phi %struct.cv** [ %arraydecay104, %cond.true102 ], [ null, %cond.false105 ]
  store %struct.cv** %cond107, %struct.cv*** %cvp, align 8
  store %struct.cv** %cond107, %struct.cv*** %ocvp, align 8
  %tobool108 = icmp ne %struct.cv** %cond107, null
  br i1 %tobool108, label %land.lhs.true109, label %if.else

land.lhs.true109:                                 ; preds = %cond.end106
  %88 = load %struct.cv**, %struct.cv*** %cvp, align 8
  %89 = load i32, i32* %method.addr, align 4
  %90 = load i32, i32* %assignshift, align 4
  %add110 = add nsw i32 %89, %90
  store i32 %add110, i32* %off, align 4
  %idxprom = sext i32 %add110 to i64
  %arrayidx111 = getelementptr inbounds %struct.cv*, %struct.cv** %88, i64 %idxprom
  %91 = load %struct.cv*, %struct.cv** %arrayidx111, align 8
  store %struct.cv* %91, %struct.cv** %cv, align 8
  %tobool112 = icmp ne %struct.cv* %91, null
  br i1 %tobool112, label %if.then121, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true109
  %92 = load i32, i32* %assign, align 4
  %tobool113 = icmp ne i32 %92, 0
  br i1 %tobool113, label %land.lhs.true114, label %if.else

land.lhs.true114:                                 ; preds = %lor.lhs.false
  %93 = load %struct.am_table*, %struct.am_table** %amtp, align 8
  %fallback = getelementptr inbounds %struct.am_table, %struct.am_table* %93, i32 0, i32 1
  %94 = load i8, i8* %fallback, align 1
  %conv115 = zext i8 %94 to i32
  %cmp = icmp sgt i32 %conv115, 1
  br i1 %cmp, label %land.lhs.true117, label %if.else

land.lhs.true117:                                 ; preds = %land.lhs.true114
  %95 = load %struct.cv**, %struct.cv*** %cvp, align 8
  %96 = load i32, i32* %method.addr, align 4
  store i32 %96, i32* %off, align 4
  %idxprom118 = sext i32 %96 to i64
  %arrayidx119 = getelementptr inbounds %struct.cv*, %struct.cv** %95, i64 %idxprom118
  %97 = load %struct.cv*, %struct.cv** %arrayidx119, align 8
  store %struct.cv* %97, %struct.cv** %cv, align 8
  %tobool120 = icmp ne %struct.cv* %97, null
  br i1 %tobool120, label %if.then121, label %if.else

if.then121:                                       ; preds = %land.lhs.true117, %land.lhs.true109
  store i32 -1, i32* %lr, align 4
  br label %if.end864

if.else:                                          ; preds = %land.lhs.true117, %land.lhs.true114, %lor.lhs.false, %cond.end106, %land.lhs.true95, %cond.false92, %cond.true91, %land.lhs.true19, %land.lhs.true13, %land.lhs.true9, %land.lhs.true, %if.end4
  %98 = load %struct.cv**, %struct.cv*** %cvp, align 8
  %tobool122 = icmp ne %struct.cv** %98, null
  br i1 %tobool122, label %land.lhs.true123, label %if.else356

land.lhs.true123:                                 ; preds = %if.else
  %99 = load %struct.am_table*, %struct.am_table** %amtp, align 8
  %fallback124 = getelementptr inbounds %struct.am_table, %struct.am_table* %99, i32 0, i32 1
  %100 = load i8, i8* %fallback124, align 1
  %conv125 = zext i8 %100 to i32
  %cmp126 = icmp sgt i32 %conv125, 1
  br i1 %cmp126, label %land.lhs.true128, label %if.else356

land.lhs.true128:                                 ; preds = %land.lhs.true123
  %101 = load i32, i32* %flags.addr, align 4
  %and129 = and i32 %101, 8
  %tobool130 = icmp ne i32 %and129, 0
  br i1 %tobool130, label %if.then131, label %if.else356

if.then131:                                       ; preds = %land.lhs.true128
  %102 = load i32, i32* %method.addr, align 4
  switch i32 %102, label %sw.default [
    i32 6, label %sw.bb
    i32 7, label %sw.bb140
    i32 8, label %sw.bb149
    i32 9, label %sw.bb154
    i32 10, label %sw.bb162
    i32 11, label %sw.bb170
    i32 12, label %sw.bb184
    i32 13, label %sw.bb204
    i32 14, label %sw.bb344
    i32 16, label %sw.bb351
    i32 15, label %sw.bb351
    i32 73, label %sw.bb351
    i32 74, label %sw.bb351
    i32 1, label %sw.bb352
    i32 2, label %sw.bb352
    i32 3, label %sw.bb352
    i32 4, label %sw.bb352
    i32 5, label %sw.bb352
  ]

sw.bb:                                            ; preds = %if.then131
  store i32 1, i32* %force_cpy, align 4
  %103 = load %struct.cv**, %struct.cv*** %cvp, align 8
  store i32 31, i32* %off, align 4
  %arrayidx132 = getelementptr inbounds %struct.cv*, %struct.cv** %103, i64 31
  %104 = load %struct.cv*, %struct.cv** %arrayidx132, align 8
  store %struct.cv* %104, %struct.cv** %cv, align 8
  %tobool133 = icmp ne %struct.cv* %104, null
  br i1 %tobool133, label %if.then138, label %lor.lhs.false134

lor.lhs.false134:                                 ; preds = %sw.bb
  %105 = load %struct.cv**, %struct.cv*** %cvp, align 8
  store i32 30, i32* %off, align 4
  %arrayidx135 = getelementptr inbounds %struct.cv*, %struct.cv** %105, i64 30
  %106 = load %struct.cv*, %struct.cv** %arrayidx135, align 8
  store %struct.cv* %106, %struct.cv** %cv, align 8
  %tobool136 = icmp ne %struct.cv* %106, null
  br i1 %tobool136, label %land.lhs.true137, label %if.end139

land.lhs.true137:                                 ; preds = %lor.lhs.false134
  store i32 0, i32* %force_cpy, align 4
  store i32 1, i32* %postpr, align 4
  br i1 true, label %if.then138, label %if.end139

if.then138:                                       ; preds = %land.lhs.true137, %sw.bb
  store %struct.sv* @PL_sv_yes, %struct.sv** %right.addr, align 8
  store i32 -1, i32* %lr, align 4
  store i32 1, i32* %assign, align 4
  br label %if.end139

if.end139:                                        ; preds = %if.then138, %land.lhs.true137, %lor.lhs.false134
  br label %sw.epilog

sw.bb140:                                         ; preds = %if.then131
  store i32 1, i32* %force_cpy, align 4
  %107 = load %struct.cv**, %struct.cv*** %cvp, align 8
  store i32 33, i32* %off, align 4
  %arrayidx141 = getelementptr inbounds %struct.cv*, %struct.cv** %107, i64 33
  %108 = load %struct.cv*, %struct.cv** %arrayidx141, align 8
  store %struct.cv* %108, %struct.cv** %cv, align 8
  %tobool142 = icmp ne %struct.cv* %108, null
  br i1 %tobool142, label %if.then147, label %lor.lhs.false143

lor.lhs.false143:                                 ; preds = %sw.bb140
  %109 = load %struct.cv**, %struct.cv*** %cvp, align 8
  store i32 32, i32* %off, align 4
  %arrayidx144 = getelementptr inbounds %struct.cv*, %struct.cv** %109, i64 32
  %110 = load %struct.cv*, %struct.cv** %arrayidx144, align 8
  store %struct.cv* %110, %struct.cv** %cv, align 8
  %tobool145 = icmp ne %struct.cv* %110, null
  br i1 %tobool145, label %land.lhs.true146, label %if.end148

land.lhs.true146:                                 ; preds = %lor.lhs.false143
  store i32 0, i32* %force_cpy, align 4
  store i32 1, i32* %postpr, align 4
  br i1 true, label %if.then147, label %if.end148

if.then147:                                       ; preds = %land.lhs.true146, %sw.bb140
  store %struct.sv* @PL_sv_yes, %struct.sv** %right.addr, align 8
  store i32 -1, i32* %lr, align 4
  store i32 1, i32* %assign, align 4
  br label %if.end148

if.end148:                                        ; preds = %if.then147, %land.lhs.true146, %lor.lhs.false143
  br label %sw.epilog

sw.bb149:                                         ; preds = %if.then131
  %111 = load %struct.cv**, %struct.cv*** %cvp, align 8
  store i32 9, i32* %off, align 4
  %arrayidx150 = getelementptr inbounds %struct.cv*, %struct.cv** %111, i64 9
  %112 = load %struct.cv*, %struct.cv** %arrayidx150, align 8
  store %struct.cv* %112, %struct.cv** %cv, align 8
  %tobool151 = icmp ne %struct.cv* %112, null
  br i1 %tobool151, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %sw.bb149
  %113 = load %struct.cv**, %struct.cv*** %cvp, align 8
  store i32 10, i32* %off, align 4
  %arrayidx152 = getelementptr inbounds %struct.cv*, %struct.cv** %113, i64 10
  %114 = load %struct.cv*, %struct.cv** %arrayidx152, align 8
  store %struct.cv* %114, %struct.cv** %cv, align 8
  %tobool153 = icmp ne %struct.cv* %114, null
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %sw.bb149
  %115 = phi i1 [ true, %sw.bb149 ], [ %tobool153, %lor.rhs ]
  %lor.ext = zext i1 %115 to i32
  br label %sw.epilog

sw.bb154:                                         ; preds = %if.then131
  %116 = load %struct.cv**, %struct.cv*** %cvp, align 8
  store i32 10, i32* %off, align 4
  %arrayidx155 = getelementptr inbounds %struct.cv*, %struct.cv** %116, i64 10
  %117 = load %struct.cv*, %struct.cv** %arrayidx155, align 8
  store %struct.cv* %117, %struct.cv** %cv, align 8
  %tobool156 = icmp ne %struct.cv* %117, null
  br i1 %tobool156, label %lor.end160, label %lor.rhs157

lor.rhs157:                                       ; preds = %sw.bb154
  %118 = load %struct.cv**, %struct.cv*** %cvp, align 8
  store i32 8, i32* %off, align 4
  %arrayidx158 = getelementptr inbounds %struct.cv*, %struct.cv** %118, i64 8
  %119 = load %struct.cv*, %struct.cv** %arrayidx158, align 8
  store %struct.cv* %119, %struct.cv** %cv, align 8
  %tobool159 = icmp ne %struct.cv* %119, null
  br label %lor.end160

lor.end160:                                       ; preds = %lor.rhs157, %sw.bb154
  %120 = phi i1 [ true, %sw.bb154 ], [ %tobool159, %lor.rhs157 ]
  %lor.ext161 = zext i1 %120 to i32
  br label %sw.epilog

sw.bb162:                                         ; preds = %if.then131
  %121 = load %struct.cv**, %struct.cv*** %cvp, align 8
  store i32 9, i32* %off, align 4
  %arrayidx163 = getelementptr inbounds %struct.cv*, %struct.cv** %121, i64 9
  %122 = load %struct.cv*, %struct.cv** %arrayidx163, align 8
  store %struct.cv* %122, %struct.cv** %cv, align 8
  %tobool164 = icmp ne %struct.cv* %122, null
  br i1 %tobool164, label %lor.end168, label %lor.rhs165

lor.rhs165:                                       ; preds = %sw.bb162
  %123 = load %struct.cv**, %struct.cv*** %cvp, align 8
  store i32 8, i32* %off, align 4
  %arrayidx166 = getelementptr inbounds %struct.cv*, %struct.cv** %123, i64 8
  %124 = load %struct.cv*, %struct.cv** %arrayidx166, align 8
  store %struct.cv* %124, %struct.cv** %cv, align 8
  %tobool167 = icmp ne %struct.cv* %124, null
  br label %lor.end168

lor.end168:                                       ; preds = %lor.rhs165, %sw.bb162
  %125 = phi i1 [ true, %sw.bb162 ], [ %tobool167, %lor.rhs165 ]
  %lor.ext169 = zext i1 %125 to i32
  br label %sw.epilog

sw.bb170:                                         ; preds = %if.then131
  %126 = load %struct.cv**, %struct.cv*** %cvp, align 8
  store i32 8, i32* %off, align 4
  %arrayidx171 = getelementptr inbounds %struct.cv*, %struct.cv** %126, i64 8
  %127 = load %struct.cv*, %struct.cv** %arrayidx171, align 8
  store %struct.cv* %127, %struct.cv** %cv, align 8
  %tobool172 = icmp ne %struct.cv* %127, null
  br i1 %tobool172, label %lor.end179, label %lor.lhs.false173

lor.lhs.false173:                                 ; preds = %sw.bb170
  %128 = load %struct.cv**, %struct.cv*** %cvp, align 8
  store i32 9, i32* %off, align 4
  %arrayidx174 = getelementptr inbounds %struct.cv*, %struct.cv** %128, i64 9
  %129 = load %struct.cv*, %struct.cv** %arrayidx174, align 8
  store %struct.cv* %129, %struct.cv** %cv, align 8
  %tobool175 = icmp ne %struct.cv* %129, null
  br i1 %tobool175, label %lor.end179, label %lor.rhs176

lor.rhs176:                                       ; preds = %lor.lhs.false173
  %130 = load %struct.cv**, %struct.cv*** %cvp, align 8
  store i32 10, i32* %off, align 4
  %arrayidx177 = getelementptr inbounds %struct.cv*, %struct.cv** %130, i64 10
  %131 = load %struct.cv*, %struct.cv** %arrayidx177, align 8
  store %struct.cv* %131, %struct.cv** %cv, align 8
  %tobool178 = icmp ne %struct.cv* %131, null
  br label %lor.end179

lor.end179:                                       ; preds = %lor.rhs176, %lor.lhs.false173, %sw.bb170
  %132 = phi i1 [ true, %lor.lhs.false173 ], [ true, %sw.bb170 ], [ %tobool178, %lor.rhs176 ]
  %lor.ext180 = zext i1 %132 to i32
  %133 = load %struct.cv*, %struct.cv** %cv, align 8
  %tobool181 = icmp ne %struct.cv* %133, null
  br i1 %tobool181, label %if.then182, label %if.end183

if.then182:                                       ; preds = %lor.end179
  store i32 1, i32* %postpr, align 4
  br label %if.end183

if.end183:                                        ; preds = %if.then182, %lor.end179
  br label %sw.epilog

sw.bb184:                                         ; preds = %if.then131
  %134 = load %struct.sv*, %struct.sv** %left.addr, align 8
  %sv_u185 = getelementptr inbounds %struct.sv, %struct.sv* %134, i32 0, i32 3
  %svu_rv186 = bitcast %union.anon* %sv_u185 to %struct.sv**
  %135 = load %struct.sv*, %struct.sv** %svu_rv186, align 8
  store %struct.sv* %135, %struct.sv** %tmpRef, align 8
  %136 = load %struct.sv*, %struct.sv** %tmpRef, align 8
  %sv_flags187 = getelementptr inbounds %struct.sv, %struct.sv* %136, i32 0, i32 2
  %137 = load i32, i32* %sv_flags187, align 4
  %and188 = and i32 %137, 2048
  %tobool189 = icmp ne i32 %and188, 0
  br i1 %tobool189, label %if.end203, label %land.lhs.true190

land.lhs.true190:                                 ; preds = %sw.bb184
  %138 = load %struct.sv*, %struct.sv** %tmpRef, align 8
  %sv_flags191 = getelementptr inbounds %struct.sv, %struct.sv* %138, i32 0, i32 2
  %139 = load i32, i32* %sv_flags191, align 4
  %and192 = and i32 %139, 255
  %cmp193 = icmp ule i32 %and192, 7
  br i1 %cmp193, label %if.then195, label %if.end203

if.then195:                                       ; preds = %land.lhs.true190
  %140 = load %struct.sv*, %struct.sv** %tmpRef, align 8
  %call196 = call %struct.sv* @Perl_newSVsv(%struct.sv* %140)
  store %struct.sv* %call196, %struct.sv** %newref, align 8
  %141 = load %struct.sv*, %struct.sv** %newref, align 8
  %sv_flags197 = getelementptr inbounds %struct.sv, %struct.sv* %141, i32 0, i32 2
  %142 = load i32, i32* %sv_flags197, align 4
  %or = or i32 %142, 1048576
  store i32 %or, i32* %sv_flags197, align 4
  br label %do.body

do.body:                                          ; preds = %if.then195
  %143 = load %struct.sv*, %struct.sv** %tmpRef, align 8
  %sv_any198 = getelementptr inbounds %struct.sv, %struct.sv* %143, i32 0, i32 0
  %144 = load i8*, i8** %sv_any198, align 8
  %145 = bitcast i8* %144 to %struct.xpvmg*
  %xmg_stash199 = getelementptr inbounds %struct.xpvmg, %struct.xpvmg* %145, i32 0, i32 0
  %146 = load %struct.hv*, %struct.hv** %xmg_stash199, align 8
  %147 = bitcast %struct.hv* %146 to i8*
  %148 = bitcast i8* %147 to %struct.sv*
  %call200 = call %struct.sv* @S_SvREFCNT_inc(%struct.sv* %148)
  %149 = bitcast %struct.sv* %call200 to i8*
  %150 = bitcast i8* %149 to %struct.hv*
  %151 = load %struct.sv*, %struct.sv** %newref, align 8
  %sv_any201 = getelementptr inbounds %struct.sv, %struct.sv* %151, i32 0, i32 0
  %152 = load i8*, i8** %sv_any201, align 8
  %153 = bitcast i8* %152 to %struct.xpvmg*
  %xmg_stash202 = getelementptr inbounds %struct.xpvmg, %struct.xpvmg* %153, i32 0, i32 0
  store %struct.hv* %150, %struct.hv** %xmg_stash202, align 8
  br label %do.end

do.end:                                           ; preds = %do.body
  %154 = load %struct.sv*, %struct.sv** %newref, align 8
  store %struct.sv* %154, %struct.sv** %retval, align 8
  br label %return

if.end203:                                        ; preds = %land.lhs.true190, %sw.bb184
  br label %sw.epilog

sw.bb204:                                         ; preds = %if.then131
  %155 = load %struct.cv**, %struct.cv*** %cvp, align 8
  store i32 17, i32* %off1, align 4
  %arrayidx205 = getelementptr inbounds %struct.cv*, %struct.cv** %155, i64 17
  %156 = load %struct.cv*, %struct.cv** %arrayidx205, align 8
  %tobool206 = icmp ne %struct.cv* %156, null
  br i1 %tobool206, label %land.lhs.true210, label %lor.lhs.false207

lor.lhs.false207:                                 ; preds = %sw.bb204
  %157 = load %struct.cv**, %struct.cv*** %cvp, align 8
  store i32 58, i32* %off1, align 4
  %arrayidx208 = getelementptr inbounds %struct.cv*, %struct.cv** %157, i64 58
  %158 = load %struct.cv*, %struct.cv** %arrayidx208, align 8
  %tobool209 = icmp ne %struct.cv* %158, null
  br i1 %tobool209, label %land.lhs.true210, label %if.end343

land.lhs.true210:                                 ; preds = %lor.lhs.false207, %sw.bb204
  %159 = load %struct.cv**, %struct.cv*** %cvp, align 8
  store i32 14, i32* %off, align 4
  %arrayidx211 = getelementptr inbounds %struct.cv*, %struct.cv** %159, i64 14
  %160 = load %struct.cv*, %struct.cv** %arrayidx211, align 8
  store %struct.cv* %160, %struct.cv** %cv, align 8
  %tobool212 = icmp ne %struct.cv* %160, null
  br i1 %tobool212, label %if.then216, label %lor.lhs.false213

lor.lhs.false213:                                 ; preds = %land.lhs.true210
  %161 = load %struct.cv**, %struct.cv*** %cvp, align 8
  store i32 32, i32* %off, align 4
  %arrayidx214 = getelementptr inbounds %struct.cv*, %struct.cv** %161, i64 32
  %162 = load %struct.cv*, %struct.cv** %arrayidx214, align 8
  store %struct.cv* %162, %struct.cv** %cv, align 8
  %tobool215 = icmp ne %struct.cv* %162, null
  br i1 %tobool215, label %if.then216, label %if.end343

if.then216:                                       ; preds = %lor.lhs.false213, %land.lhs.true210
  %call217 = call %struct.sv* @Perl_newSViv(i64 0)
  %call218 = call %struct.sv* @Perl_sv_2mortal(%struct.sv* %call217)
  store %struct.sv* %call218, %struct.sv** %nullsv, align 8
  %163 = load i32, i32* %off1, align 4
  %cmp219 = icmp eq i32 %163, 17
  br i1 %cmp219, label %if.then221, label %if.else317

if.then221:                                       ; preds = %if.then216
  %164 = load %struct.sv*, %struct.sv** %left.addr, align 8
  %165 = load %struct.sv*, %struct.sv** %nullsv, align 8
  %call222 = call %struct.sv* @Perl_amagic_call(%struct.sv* %164, %struct.sv* %165, i32 17, i32 1)
  store %struct.sv* %call222, %struct.sv** %lessp, align 8
  %166 = load %struct.sv*, %struct.sv** %lessp, align 8
  %tobool223 = icmp ne %struct.sv* %166, null
  br i1 %tobool223, label %cond.true224, label %cond.false225

cond.true224:                                     ; preds = %if.then221
  br i1 true, label %land.rhs, label %land.end315

cond.false225:                                    ; preds = %if.then221
  br i1 false, label %land.rhs, label %land.end315

land.rhs:                                         ; preds = %cond.false225, %cond.true224
  %167 = load %struct.sv*, %struct.sv** %lessp, align 8
  %sv_flags226 = getelementptr inbounds %struct.sv, %struct.sv* %167, i32 0, i32 2
  %168 = load i32, i32* %sv_flags226, align 4
  %and227 = and i32 %168, 2097152
  %tobool228 = icmp ne i32 %and227, 0
  br i1 %tobool228, label %cond.true229, label %cond.false230

cond.true229:                                     ; preds = %land.rhs
  br i1 true, label %cond.true231, label %cond.false234

cond.false230:                                    ; preds = %land.rhs
  br i1 false, label %cond.true231, label %cond.false234

cond.true231:                                     ; preds = %cond.false230, %cond.true229
  %169 = load %struct.sv*, %struct.sv** %lessp, align 8
  %call232 = call zeroext i1 @Perl_sv_2bool_flags(%struct.sv* %169, i32 2)
  %conv233 = zext i1 %call232 to i32
  br label %cond.end312

cond.false234:                                    ; preds = %cond.false230, %cond.true229
  %170 = load %struct.sv*, %struct.sv** %lessp, align 8
  %sv_flags235 = getelementptr inbounds %struct.sv, %struct.sv* %170, i32 0, i32 2
  %171 = load i32, i32* %sv_flags235, align 4
  %and236 = and i32 %171, 65280
  %tobool237 = icmp ne i32 %and236, 0
  br i1 %tobool237, label %cond.false249, label %lor.lhs.false238

lor.lhs.false238:                                 ; preds = %cond.false234
  %172 = load %struct.sv*, %struct.sv** %lessp, align 8
  %sv_flags239 = getelementptr inbounds %struct.sv, %struct.sv* %172, i32 0, i32 2
  %173 = load i32, i32* %sv_flags239, align 4
  %and240 = and i32 %173, 255
  %cmp241 = icmp eq i32 %and240, 8
  br i1 %cmp241, label %cond.false249, label %lor.lhs.false243

lor.lhs.false243:                                 ; preds = %lor.lhs.false238
  %174 = load %struct.sv*, %struct.sv** %lessp, align 8
  %sv_flags244 = getelementptr inbounds %struct.sv, %struct.sv* %174, i32 0, i32 2
  %175 = load i32, i32* %sv_flags244, align 4
  %and245 = and i32 %175, 16826623
  %cmp246 = icmp eq i32 %and245, 16777226
  br i1 %cmp246, label %cond.false249, label %cond.true248

cond.true248:                                     ; preds = %lor.lhs.false243
  br label %cond.end310

cond.false249:                                    ; preds = %lor.lhs.false243, %lor.lhs.false238, %cond.false234
  %176 = load %struct.sv*, %struct.sv** %lessp, align 8
  %sv_flags250 = getelementptr inbounds %struct.sv, %struct.sv* %176, i32 0, i32 2
  %177 = load i32, i32* %sv_flags250, align 4
  %and251 = and i32 %177, 1024
  %tobool252 = icmp ne i32 %and251, 0
  br i1 %tobool252, label %cond.true253, label %cond.false272

cond.true253:                                     ; preds = %cond.false249
  %178 = load %struct.sv*, %struct.sv** %lessp, align 8
  %sv_any254 = getelementptr inbounds %struct.sv, %struct.sv* %178, i32 0, i32 0
  %179 = load i8*, i8** %sv_any254, align 8
  %180 = bitcast i8* %179 to %struct.xpv*
  %tobool255 = icmp ne %struct.xpv* %180, null
  br i1 %tobool255, label %land.rhs256, label %land.end271

land.rhs256:                                      ; preds = %cond.true253
  %181 = load %struct.sv*, %struct.sv** %lessp, align 8
  %sv_any257 = getelementptr inbounds %struct.sv, %struct.sv* %181, i32 0, i32 0
  %182 = load i8*, i8** %sv_any257, align 8
  %183 = bitcast i8* %182 to %struct.xpv*
  %xpv_cur = getelementptr inbounds %struct.xpv, %struct.xpv* %183, i32 0, i32 2
  %184 = load i64, i64* %xpv_cur, align 8
  %cmp258 = icmp ugt i64 %184, 1
  br i1 %cmp258, label %lor.end269, label %lor.rhs260

lor.rhs260:                                       ; preds = %land.rhs256
  %185 = load %struct.sv*, %struct.sv** %lessp, align 8
  %sv_any261 = getelementptr inbounds %struct.sv, %struct.sv* %185, i32 0, i32 0
  %186 = load i8*, i8** %sv_any261, align 8
  %187 = bitcast i8* %186 to %struct.xpv*
  %xpv_cur262 = getelementptr inbounds %struct.xpv, %struct.xpv* %187, i32 0, i32 2
  %188 = load i64, i64* %xpv_cur262, align 8
  %tobool263 = icmp ne i64 %188, 0
  br i1 %tobool263, label %land.rhs264, label %land.end

land.rhs264:                                      ; preds = %lor.rhs260
  %189 = load %struct.sv*, %struct.sv** %lessp, align 8
  %sv_u265 = getelementptr inbounds %struct.sv, %struct.sv* %189, i32 0, i32 3
  %svu_pv = bitcast %union.anon* %sv_u265 to i8**
  %190 = load i8*, i8** %svu_pv, align 8
  %191 = load i8, i8* %190, align 1
  %conv266 = sext i8 %191 to i32
  %cmp267 = icmp ne i32 %conv266, 48
  br label %land.end

land.end:                                         ; preds = %land.rhs264, %lor.rhs260
  %192 = phi i1 [ false, %lor.rhs260 ], [ %cmp267, %land.rhs264 ]
  br label %lor.end269

lor.end269:                                       ; preds = %land.end, %land.rhs256
  %193 = phi i1 [ true, %land.rhs256 ], [ %192, %land.end ]
  br label %land.end271

land.end271:                                      ; preds = %lor.end269, %cond.true253
  %194 = phi i1 [ false, %cond.true253 ], [ %193, %lor.end269 ]
  %land.ext = zext i1 %194 to i32
  br label %cond.end308

cond.false272:                                    ; preds = %cond.false249
  %195 = load %struct.sv*, %struct.sv** %lessp, align 8
  %sv_flags273 = getelementptr inbounds %struct.sv, %struct.sv* %195, i32 0, i32 2
  %196 = load i32, i32* %sv_flags273, align 4
  %and274 = and i32 %196, 768
  %tobool275 = icmp ne i32 %and274, 0
  br i1 %tobool275, label %cond.true276, label %cond.false303

cond.true276:                                     ; preds = %cond.false272
  %197 = load %struct.sv*, %struct.sv** %lessp, align 8
  %sv_flags277 = getelementptr inbounds %struct.sv, %struct.sv* %197, i32 0, i32 2
  %198 = load i32, i32* %sv_flags277, align 4
  %and278 = and i32 %198, 256
  %tobool279 = icmp ne i32 %and278, 0
  br i1 %tobool279, label %land.lhs.true280, label %lor.rhs284

land.lhs.true280:                                 ; preds = %cond.true276
  %199 = load %struct.sv*, %struct.sv** %lessp, align 8
  %sv_any281 = getelementptr inbounds %struct.sv, %struct.sv* %199, i32 0, i32 0
  %200 = load i8*, i8** %sv_any281, align 8
  %201 = bitcast i8* %200 to %struct.xpviv*
  %xiv_u = getelementptr inbounds %struct.xpviv, %struct.xpviv* %201, i32 0, i32 4
  %xivu_iv = bitcast %union._xivu* %xiv_u to i64*
  %202 = load i64, i64* %xivu_iv, align 8
  %cmp282 = icmp ne i64 %202, 0
  br i1 %cmp282, label %lor.end301, label %lor.rhs284

lor.rhs284:                                       ; preds = %land.lhs.true280, %cond.true276
  %203 = load %struct.sv*, %struct.sv** %lessp, align 8
  %sv_flags285 = getelementptr inbounds %struct.sv, %struct.sv* %203, i32 0, i32 2
  %204 = load i32, i32* %sv_flags285, align 4
  %and286 = and i32 %204, 512
  %tobool287 = icmp ne i32 %and286, 0
  br i1 %tobool287, label %land.rhs288, label %land.end299

land.rhs288:                                      ; preds = %lor.rhs284
  %205 = load %struct.sv*, %struct.sv** %lessp, align 8
  %sv_any289 = getelementptr inbounds %struct.sv, %struct.sv* %205, i32 0, i32 0
  %206 = load i8*, i8** %sv_any289, align 8
  %207 = bitcast i8* %206 to %struct.xpvnv*
  %xnv_u = getelementptr inbounds %struct.xpvnv, %struct.xpvnv* %207, i32 0, i32 5
  %xnv_nv = bitcast %union._xnvu* %xnv_u to double*
  %208 = load double, double* %xnv_nv, align 8
  %cmp290 = fcmp uno double %208, %208
  br i1 %cmp290, label %lor.end297, label %lor.rhs291

lor.rhs291:                                       ; preds = %land.rhs288
  %209 = load %struct.sv*, %struct.sv** %lessp, align 8
  %sv_any292 = getelementptr inbounds %struct.sv, %struct.sv* %209, i32 0, i32 0
  %210 = load i8*, i8** %sv_any292, align 8
  %211 = bitcast i8* %210 to %struct.xpvnv*
  %xnv_u293 = getelementptr inbounds %struct.xpvnv, %struct.xpvnv* %211, i32 0, i32 5
  %xnv_nv294 = bitcast %union._xnvu* %xnv_u293 to double*
  %212 = load double, double* %xnv_nv294, align 8
  %cmp295 = fcmp une double %212, 0.000000e+00
  br label %lor.end297

lor.end297:                                       ; preds = %lor.rhs291, %land.rhs288
  %213 = phi i1 [ true, %land.rhs288 ], [ %cmp295, %lor.rhs291 ]
  br label %land.end299

land.end299:                                      ; preds = %lor.end297, %lor.rhs284
  %214 = phi i1 [ false, %lor.rhs284 ], [ %213, %lor.end297 ]
  br label %lor.end301

lor.end301:                                       ; preds = %land.end299, %land.lhs.true280
  %215 = phi i1 [ true, %land.lhs.true280 ], [ %214, %land.end299 ]
  %lor.ext302 = zext i1 %215 to i32
  br label %cond.end306

cond.false303:                                    ; preds = %cond.false272
  %216 = load %struct.sv*, %struct.sv** %lessp, align 8
  %call304 = call zeroext i1 @Perl_sv_2bool_flags(%struct.sv* %216, i32 0)
  %conv305 = zext i1 %call304 to i32
  br label %cond.end306

cond.end306:                                      ; preds = %cond.false303, %lor.end301
  %cond307 = phi i32 [ %lor.ext302, %lor.end301 ], [ %conv305, %cond.false303 ]
  br label %cond.end308

cond.end308:                                      ; preds = %cond.end306, %land.end271
  %cond309 = phi i32 [ %land.ext, %land.end271 ], [ %cond307, %cond.end306 ]
  br label %cond.end310

cond.end310:                                      ; preds = %cond.end308, %cond.true248
  %cond311 = phi i32 [ 0, %cond.true248 ], [ %cond309, %cond.end308 ]
  br label %cond.end312

cond.end312:                                      ; preds = %cond.end310, %cond.true231
  %cond313 = phi i32 [ %conv233, %cond.true231 ], [ %cond311, %cond.end310 ]
  %tobool314 = icmp ne i32 %cond313, 0
  br label %land.end315

land.end315:                                      ; preds = %cond.end312, %cond.false225, %cond.true224
  %217 = phi i1 [ false, %cond.false225 ], [ false, %cond.true224 ], [ %tobool314, %cond.end312 ]
  %land.ext316 = zext i1 %217 to i32
  store i32 %land.ext316, i32* %logic, align 4
  br label %if.end334

if.else317:                                       ; preds = %if.then216
  %218 = load %struct.sv*, %struct.sv** %left.addr, align 8
  %219 = load %struct.sv*, %struct.sv** %nullsv, align 8
  %call319 = call %struct.sv* @Perl_amagic_call(%struct.sv* %218, %struct.sv* %219, i32 58, i32 1)
  store %struct.sv* %call319, %struct.sv** %lessp318, align 8
  %220 = load %struct.sv*, %struct.sv** %lessp318, align 8
  %sv_flags320 = getelementptr inbounds %struct.sv, %struct.sv* %220, i32 0, i32 2
  %221 = load i32, i32* %sv_flags320, align 4
  %and321 = and i32 %221, 2097664
  %cmp322 = icmp eq i32 %and321, 512
  br i1 %cmp322, label %cond.true324, label %cond.false328

cond.true324:                                     ; preds = %if.else317
  %222 = load %struct.sv*, %struct.sv** %lessp318, align 8
  %sv_any325 = getelementptr inbounds %struct.sv, %struct.sv* %222, i32 0, i32 0
  %223 = load i8*, i8** %sv_any325, align 8
  %224 = bitcast i8* %223 to %struct.xpvnv*
  %xnv_u326 = getelementptr inbounds %struct.xpvnv, %struct.xpvnv* %224, i32 0, i32 5
  %xnv_nv327 = bitcast %union._xnvu* %xnv_u326 to double*
  %225 = load double, double* %xnv_nv327, align 8
  br label %cond.end330

cond.false328:                                    ; preds = %if.else317
  %226 = load %struct.sv*, %struct.sv** %lessp318, align 8
  %call329 = call double @Perl_sv_2nv_flags(%struct.sv* %226, i32 2)
  br label %cond.end330

cond.end330:                                      ; preds = %cond.false328, %cond.true324
  %cond331 = phi double [ %225, %cond.true324 ], [ %call329, %cond.false328 ]
  %cmp332 = fcmp olt double %cond331, 0.000000e+00
  %conv333 = zext i1 %cmp332 to i32
  store i32 %conv333, i32* %logic, align 4
  br label %if.end334

if.end334:                                        ; preds = %cond.end330, %land.end315
  %227 = load i32, i32* %logic, align 4
  %tobool335 = icmp ne i32 %227, 0
  br i1 %tobool335, label %if.then336, label %if.else341

if.then336:                                       ; preds = %if.end334
  %228 = load i32, i32* %off, align 4
  %cmp337 = icmp eq i32 %228, 32
  br i1 %cmp337, label %if.then339, label %if.end340

if.then339:                                       ; preds = %if.then336
  %229 = load %struct.sv*, %struct.sv** %left.addr, align 8
  store %struct.sv* %229, %struct.sv** %right.addr, align 8
  %230 = load %struct.sv*, %struct.sv** %nullsv, align 8
  store %struct.sv* %230, %struct.sv** %left.addr, align 8
  store i32 1, i32* %lr, align 4
  br label %if.end340

if.end340:                                        ; preds = %if.then339, %if.then336
  br label %if.end342

if.else341:                                       ; preds = %if.end334
  %231 = load %struct.sv*, %struct.sv** %left.addr, align 8
  store %struct.sv* %231, %struct.sv** %retval, align 8
  br label %return

if.end342:                                        ; preds = %if.end340
  br label %if.end343

if.end343:                                        ; preds = %if.end342, %lor.lhs.false213, %lor.lhs.false207
  br label %sw.epilog

sw.bb344:                                         ; preds = %if.then131
  %232 = load %struct.cv**, %struct.cv*** %cvp, align 8
  store i32 32, i32* %off, align 4
  %arrayidx345 = getelementptr inbounds %struct.cv*, %struct.cv** %232, i64 32
  %233 = load %struct.cv*, %struct.cv** %arrayidx345, align 8
  store %struct.cv* %233, %struct.cv** %cv, align 8
  %tobool346 = icmp ne %struct.cv* %233, null
  br i1 %tobool346, label %if.then347, label %if.end350

if.then347:                                       ; preds = %sw.bb344
  %234 = load %struct.sv*, %struct.sv** %left.addr, align 8
  store %struct.sv* %234, %struct.sv** %right.addr, align 8
  %call348 = call %struct.sv* @Perl_newSViv(i64 0)
  %call349 = call %struct.sv* @Perl_sv_2mortal(%struct.sv* %call348)
  store %struct.sv* %call349, %struct.sv** %left.addr, align 8
  store i32 1, i32* %lr, align 4
  br label %if.end350

if.end350:                                        ; preds = %if.then347, %sw.bb344
  br label %sw.epilog

sw.bb351:                                         ; preds = %if.then131, %if.then131, %if.then131, %if.then131
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

sw.bb352:                                         ; preds = %if.then131, %if.then131, %if.then131, %if.then131, %if.then131
  %235 = load %struct.sv*, %struct.sv** %left.addr, align 8
  store %struct.sv* %235, %struct.sv** %retval, align 8
  br label %return

sw.default:                                       ; preds = %if.then131
  br label %not_found

sw.epilog:                                        ; preds = %if.end350, %if.end343, %if.end203, %if.end183, %lor.end168, %lor.end160, %lor.end, %if.end148, %if.end139
  %236 = load %struct.cv*, %struct.cv** %cv, align 8
  %tobool353 = icmp ne %struct.cv* %236, null
  br i1 %tobool353, label %if.end355, label %if.then354

if.then354:                                       ; preds = %sw.epilog
  br label %not_found

if.end355:                                        ; preds = %sw.epilog
  br label %if.end863

if.else356:                                       ; preds = %land.lhs.true128, %land.lhs.true123, %if.else
  %237 = load i32, i32* %flags.addr, align 4
  %and357 = and i32 1, %237
  %tobool358 = icmp ne i32 %and357, 0
  br i1 %tobool358, label %if.else488, label %land.lhs.true359

land.lhs.true359:                                 ; preds = %if.else356
  %238 = load %struct.sv*, %struct.sv** %right.addr, align 8
  %sv_flags360 = getelementptr inbounds %struct.sv, %struct.sv* %238, i32 0, i32 2
  %239 = load i32, i32* %sv_flags360, align 4
  %and361 = and i32 %239, 2048
  %tobool362 = icmp ne i32 %and361, 0
  br i1 %tobool362, label %land.lhs.true363, label %if.else488

land.lhs.true363:                                 ; preds = %land.lhs.true359
  %240 = load %struct.sv*, %struct.sv** %right.addr, align 8
  %sv_u364 = getelementptr inbounds %struct.sv, %struct.sv* %240, i32 0, i32 3
  %svu_rv365 = bitcast %union.anon* %sv_u364 to %struct.sv**
  %241 = load %struct.sv*, %struct.sv** %svu_rv365, align 8
  %sv_flags366 = getelementptr inbounds %struct.sv, %struct.sv* %241, i32 0, i32 2
  %242 = load i32, i32* %sv_flags366, align 4
  %and367 = and i32 %242, 1048576
  %tobool368 = icmp ne i32 %and367, 0
  br i1 %tobool368, label %land.lhs.true369, label %if.else488

land.lhs.true369:                                 ; preds = %land.lhs.true363
  %243 = load %struct.sv*, %struct.sv** %right.addr, align 8
  %sv_u370 = getelementptr inbounds %struct.sv, %struct.sv* %243, i32 0, i32 3
  %svu_rv371 = bitcast %union.anon* %sv_u370 to %struct.sv**
  %244 = load %struct.sv*, %struct.sv** %svu_rv371, align 8
  %sv_any372 = getelementptr inbounds %struct.sv, %struct.sv* %244, i32 0, i32 0
  %245 = load i8*, i8** %sv_any372, align 8
  %246 = bitcast i8* %245 to %struct.xpvmg*
  %xmg_stash373 = getelementptr inbounds %struct.xpvmg, %struct.xpvmg* %246, i32 0, i32 0
  %247 = load %struct.hv*, %struct.hv** %xmg_stash373, align 8
  %sv_flags374 = getelementptr inbounds %struct.hv, %struct.hv* %247, i32 0, i32 2
  %248 = load i32, i32* %sv_flags374, align 4
  %and375 = and i32 %248, 268435456
  %tobool376 = icmp ne i32 %and375, 0
  br i1 %tobool376, label %land.lhs.true377, label %if.else488

land.lhs.true377:                                 ; preds = %land.lhs.true369
  %249 = load %struct.sv*, %struct.sv** %right.addr, align 8
  %sv_u378 = getelementptr inbounds %struct.sv, %struct.sv* %249, i32 0, i32 3
  %svu_rv379 = bitcast %union.anon* %sv_u378 to %struct.sv**
  %250 = load %struct.sv*, %struct.sv** %svu_rv379, align 8
  %sv_any380 = getelementptr inbounds %struct.sv, %struct.sv* %250, i32 0, i32 0
  %251 = load i8*, i8** %sv_any380, align 8
  %252 = bitcast i8* %251 to %struct.xpvmg*
  %xmg_stash381 = getelementptr inbounds %struct.xpvmg, %struct.xpvmg* %252, i32 0, i32 0
  %253 = load %struct.hv*, %struct.hv** %xmg_stash381, align 8
  store %struct.hv* %253, %struct.hv** %stash, align 8
  %tobool382 = icmp ne %struct.hv* %253, null
  br i1 %tobool382, label %land.lhs.true383, label %if.else488

land.lhs.true383:                                 ; preds = %land.lhs.true377
  %254 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_flags384 = getelementptr inbounds %struct.hv, %struct.hv* %254, i32 0, i32 2
  %255 = load i32, i32* %sv_flags384, align 4
  %and385 = and i32 %255, 33554432
  %tobool386 = icmp ne i32 %and385, 0
  br i1 %tobool386, label %land.lhs.true387, label %cond.false458

land.lhs.true387:                                 ; preds = %land.lhs.true383
  %256 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u388 = getelementptr inbounds %struct.hv, %struct.hv* %256, i32 0, i32 3
  %svu_hash389 = bitcast %union.anon.4* %sv_u388 to %struct.he***
  %257 = load %struct.he**, %struct.he*** %svu_hash389, align 8
  %258 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any390 = getelementptr inbounds %struct.hv, %struct.hv* %258, i32 0, i32 0
  %259 = load %struct.xpvhv*, %struct.xpvhv** %sv_any390, align 8
  %xhv_max391 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %259, i32 0, i32 3
  %260 = load i64, i64* %xhv_max391, align 8
  %add392 = add i64 %260, 1
  %arrayidx393 = getelementptr inbounds %struct.he*, %struct.he** %257, i64 %add392
  %261 = bitcast %struct.he** %arrayidx393 to %struct.xpvhv_aux*
  %xhv_name_u394 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %261, i32 0, i32 0
  %xhvnameu_name395 = bitcast %union._xhvnameu* %xhv_name_u394 to %struct.hek**
  %262 = load %struct.hek*, %struct.hek** %xhvnameu_name395, align 8
  %tobool396 = icmp ne %struct.hek* %262, null
  br i1 %tobool396, label %land.lhs.true397, label %cond.false458

land.lhs.true397:                                 ; preds = %land.lhs.true387
  %263 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u398 = getelementptr inbounds %struct.hv, %struct.hv* %263, i32 0, i32 3
  %svu_hash399 = bitcast %union.anon.4* %sv_u398 to %struct.he***
  %264 = load %struct.he**, %struct.he*** %svu_hash399, align 8
  %265 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any400 = getelementptr inbounds %struct.hv, %struct.hv* %265, i32 0, i32 0
  %266 = load %struct.xpvhv*, %struct.xpvhv** %sv_any400, align 8
  %xhv_max401 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %266, i32 0, i32 3
  %267 = load i64, i64* %xhv_max401, align 8
  %add402 = add i64 %267, 1
  %arrayidx403 = getelementptr inbounds %struct.he*, %struct.he** %264, i64 %add402
  %268 = bitcast %struct.he** %arrayidx403 to %struct.xpvhv_aux*
  %xhv_name_count404 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %268, i32 0, i32 4
  %269 = load i32, i32* %xhv_name_count404, align 4
  %tobool405 = icmp ne i32 %269, 0
  br i1 %tobool405, label %cond.true406, label %cond.false416

cond.true406:                                     ; preds = %land.lhs.true397
  %270 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u407 = getelementptr inbounds %struct.hv, %struct.hv* %270, i32 0, i32 3
  %svu_hash408 = bitcast %union.anon.4* %sv_u407 to %struct.he***
  %271 = load %struct.he**, %struct.he*** %svu_hash408, align 8
  %272 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any409 = getelementptr inbounds %struct.hv, %struct.hv* %272, i32 0, i32 0
  %273 = load %struct.xpvhv*, %struct.xpvhv** %sv_any409, align 8
  %xhv_max410 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %273, i32 0, i32 3
  %274 = load i64, i64* %xhv_max410, align 8
  %add411 = add i64 %274, 1
  %arrayidx412 = getelementptr inbounds %struct.he*, %struct.he** %271, i64 %add411
  %275 = bitcast %struct.he** %arrayidx412 to %struct.xpvhv_aux*
  %xhv_name_u413 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %275, i32 0, i32 0
  %xhvnameu_names414 = bitcast %union._xhvnameu* %xhv_name_u413 to %struct.hek***
  %276 = load %struct.hek**, %struct.hek*** %xhvnameu_names414, align 8
  %277 = load %struct.hek*, %struct.hek** %276, align 8
  %tobool415 = icmp ne %struct.hek* %277, null
  br i1 %tobool415, label %cond.true426, label %cond.false458

cond.false416:                                    ; preds = %land.lhs.true397
  %278 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u417 = getelementptr inbounds %struct.hv, %struct.hv* %278, i32 0, i32 3
  %svu_hash418 = bitcast %union.anon.4* %sv_u417 to %struct.he***
  %279 = load %struct.he**, %struct.he*** %svu_hash418, align 8
  %280 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any419 = getelementptr inbounds %struct.hv, %struct.hv* %280, i32 0, i32 0
  %281 = load %struct.xpvhv*, %struct.xpvhv** %sv_any419, align 8
  %xhv_max420 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %281, i32 0, i32 3
  %282 = load i64, i64* %xhv_max420, align 8
  %add421 = add i64 %282, 1
  %arrayidx422 = getelementptr inbounds %struct.he*, %struct.he** %279, i64 %add421
  %283 = bitcast %struct.he** %arrayidx422 to %struct.xpvhv_aux*
  %xhv_name_u423 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %283, i32 0, i32 0
  %xhvnameu_name424 = bitcast %union._xhvnameu* %xhv_name_u423 to %struct.hek**
  %284 = load %struct.hek*, %struct.hek** %xhvnameu_name424, align 8
  %tobool425 = icmp ne %struct.hek* %284, null
  br i1 %tobool425, label %cond.true426, label %cond.false458

cond.true426:                                     ; preds = %cond.false416, %cond.true406
  %285 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u427 = getelementptr inbounds %struct.hv, %struct.hv* %285, i32 0, i32 3
  %svu_hash428 = bitcast %union.anon.4* %sv_u427 to %struct.he***
  %286 = load %struct.he**, %struct.he*** %svu_hash428, align 8
  %287 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any429 = getelementptr inbounds %struct.hv, %struct.hv* %287, i32 0, i32 0
  %288 = load %struct.xpvhv*, %struct.xpvhv** %sv_any429, align 8
  %xhv_max430 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %288, i32 0, i32 3
  %289 = load i64, i64* %xhv_max430, align 8
  %add431 = add i64 %289, 1
  %arrayidx432 = getelementptr inbounds %struct.he*, %struct.he** %286, i64 %add431
  %290 = bitcast %struct.he** %arrayidx432 to %struct.xpvhv_aux*
  %xhv_name_count433 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %290, i32 0, i32 4
  %291 = load i32, i32* %xhv_name_count433, align 4
  %tobool434 = icmp ne i32 %291, 0
  br i1 %tobool434, label %cond.true435, label %cond.false444

cond.true435:                                     ; preds = %cond.true426
  %292 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u436 = getelementptr inbounds %struct.hv, %struct.hv* %292, i32 0, i32 3
  %svu_hash437 = bitcast %union.anon.4* %sv_u436 to %struct.he***
  %293 = load %struct.he**, %struct.he*** %svu_hash437, align 8
  %294 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any438 = getelementptr inbounds %struct.hv, %struct.hv* %294, i32 0, i32 0
  %295 = load %struct.xpvhv*, %struct.xpvhv** %sv_any438, align 8
  %xhv_max439 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %295, i32 0, i32 3
  %296 = load i64, i64* %xhv_max439, align 8
  %add440 = add i64 %296, 1
  %arrayidx441 = getelementptr inbounds %struct.he*, %struct.he** %293, i64 %add440
  %297 = bitcast %struct.he** %arrayidx441 to %struct.xpvhv_aux*
  %xhv_name_u442 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %297, i32 0, i32 0
  %xhvnameu_names443 = bitcast %union._xhvnameu* %xhv_name_u442 to %struct.hek***
  %298 = load %struct.hek**, %struct.hek*** %xhvnameu_names443, align 8
  %299 = load %struct.hek*, %struct.hek** %298, align 8
  br label %cond.end453

cond.false444:                                    ; preds = %cond.true426
  %300 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u445 = getelementptr inbounds %struct.hv, %struct.hv* %300, i32 0, i32 3
  %svu_hash446 = bitcast %union.anon.4* %sv_u445 to %struct.he***
  %301 = load %struct.he**, %struct.he*** %svu_hash446, align 8
  %302 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any447 = getelementptr inbounds %struct.hv, %struct.hv* %302, i32 0, i32 0
  %303 = load %struct.xpvhv*, %struct.xpvhv** %sv_any447, align 8
  %xhv_max448 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %303, i32 0, i32 3
  %304 = load i64, i64* %xhv_max448, align 8
  %add449 = add i64 %304, 1
  %arrayidx450 = getelementptr inbounds %struct.he*, %struct.he** %301, i64 %add449
  %305 = bitcast %struct.he** %arrayidx450 to %struct.xpvhv_aux*
  %xhv_name_u451 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %305, i32 0, i32 0
  %xhvnameu_name452 = bitcast %union._xhvnameu* %xhv_name_u451 to %struct.hek**
  %306 = load %struct.hek*, %struct.hek** %xhvnameu_name452, align 8
  br label %cond.end453

cond.end453:                                      ; preds = %cond.false444, %cond.true435
  %cond454 = phi %struct.hek* [ %299, %cond.true435 ], [ %306, %cond.false444 ]
  %hek_key455 = getelementptr inbounds %struct.hek, %struct.hek* %cond454, i32 0, i32 2
  %arraydecay456 = getelementptr inbounds [1 x i8], [1 x i8]* %hek_key455, i64 0, i64 0
  %tobool457 = icmp ne i8* %arraydecay456, null
  br i1 %tobool457, label %land.lhs.true459, label %cond.false463

cond.false458:                                    ; preds = %cond.false416, %cond.true406, %land.lhs.true387, %land.lhs.true383
  br i1 false, label %land.lhs.true459, label %cond.false463

land.lhs.true459:                                 ; preds = %cond.false458, %cond.end453
  %307 = load %struct.hv*, %struct.hv** %stash, align 8
  %call460 = call i32 @Perl_Gv_AMupdate(%struct.hv* %307, i1 zeroext false)
  %tobool461 = icmp ne i32 %call460, 0
  br i1 %tobool461, label %cond.true462, label %cond.false463

cond.true462:                                     ; preds = %land.lhs.true459
  br i1 true, label %land.lhs.true466, label %if.else488

cond.false463:                                    ; preds = %land.lhs.true459, %cond.false458, %cond.end453
  %308 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_flags464 = getelementptr inbounds %struct.hv, %struct.hv* %308, i32 0, i32 2
  %309 = load i32, i32* %sv_flags464, align 4
  %and465 = and i32 %309, -268435457
  store i32 %and465, i32* %sv_flags464, align 4
  br i1 false, label %land.lhs.true466, label %if.else488

land.lhs.true466:                                 ; preds = %cond.false463, %cond.true462
  %310 = load %struct.hv*, %struct.hv** %stash, align 8
  %311 = bitcast %struct.hv* %310 to %struct.sv*
  %call467 = call %struct.magic* @Perl_mg_find(%struct.sv* %311, i32 99)
  store %struct.magic* %call467, %struct.magic** %mg, align 8
  %tobool468 = icmp ne %struct.magic* %call467, null
  br i1 %tobool468, label %land.lhs.true469, label %if.else488

land.lhs.true469:                                 ; preds = %land.lhs.true466
  %312 = load %struct.magic*, %struct.magic** %mg, align 8
  %mg_ptr470 = getelementptr inbounds %struct.magic, %struct.magic* %312, i32 0, i32 7
  %313 = load i8*, i8** %mg_ptr470, align 8
  %314 = bitcast i8* %313 to %struct.am_table*
  %flags471 = getelementptr inbounds %struct.am_table, %struct.am_table* %314, i32 0, i32 0
  %315 = load i8, i8* %flags471, align 8
  %conv472 = zext i8 %315 to i32
  %and473 = and i32 %conv472, 1
  %tobool474 = icmp ne i32 %and473, 0
  br i1 %tobool474, label %cond.true475, label %cond.false479

cond.true475:                                     ; preds = %land.lhs.true469
  %316 = load %struct.magic*, %struct.magic** %mg, align 8
  %mg_ptr476 = getelementptr inbounds %struct.magic, %struct.magic* %316, i32 0, i32 7
  %317 = load i8*, i8** %mg_ptr476, align 8
  %318 = bitcast i8* %317 to %struct.am_table*
  store %struct.am_table* %318, %struct.am_table** %amtp, align 8
  %table477 = getelementptr inbounds %struct.am_table, %struct.am_table* %318, i32 0, i32 4
  %arraydecay478 = getelementptr inbounds [75 x %struct.cv*], [75 x %struct.cv*]* %table477, i64 0, i64 0
  br label %cond.end480

cond.false479:                                    ; preds = %land.lhs.true469
  br label %cond.end480

cond.end480:                                      ; preds = %cond.false479, %cond.true475
  %cond481 = phi %struct.cv** [ %arraydecay478, %cond.true475 ], [ null, %cond.false479 ]
  store %struct.cv** %cond481, %struct.cv*** %cvp, align 8
  %tobool482 = icmp ne %struct.cv** %cond481, null
  br i1 %tobool482, label %land.lhs.true483, label %if.else488

land.lhs.true483:                                 ; preds = %cond.end480
  %319 = load %struct.cv**, %struct.cv*** %cvp, align 8
  %320 = load i32, i32* %method.addr, align 4
  store i32 %320, i32* %off, align 4
  %idxprom484 = sext i32 %320 to i64
  %arrayidx485 = getelementptr inbounds %struct.cv*, %struct.cv** %319, i64 %idxprom484
  %321 = load %struct.cv*, %struct.cv** %arrayidx485, align 8
  store %struct.cv* %321, %struct.cv** %cv, align 8
  %tobool486 = icmp ne %struct.cv* %321, null
  br i1 %tobool486, label %if.then487, label %if.else488

if.then487:                                       ; preds = %land.lhs.true483
  store i32 1, i32* %lr, align 4
  br label %if.end862

if.else488:                                       ; preds = %land.lhs.true483, %cond.end480, %land.lhs.true466, %cond.false463, %cond.true462, %land.lhs.true377, %land.lhs.true369, %land.lhs.true363, %land.lhs.true359, %if.else356
  %322 = load %struct.cv**, %struct.cv*** %cvp, align 8
  %tobool489 = icmp ne %struct.cv** %322, null
  br i1 %tobool489, label %land.lhs.true490, label %lor.lhs.false495

land.lhs.true490:                                 ; preds = %if.else488
  %323 = load %struct.am_table*, %struct.am_table** %amtp, align 8
  %fallback491 = getelementptr inbounds %struct.am_table, %struct.am_table* %323, i32 0, i32 1
  %324 = load i8, i8* %fallback491, align 1
  %conv492 = zext i8 %324 to i32
  %cmp493 = icmp sgt i32 %conv492, 1
  br i1 %cmp493, label %land.lhs.true502, label %lor.lhs.false495

lor.lhs.false495:                                 ; preds = %land.lhs.true490, %if.else488
  %325 = load %struct.cv**, %struct.cv*** %ocvp, align 8
  %tobool496 = icmp ne %struct.cv** %325, null
  br i1 %tobool496, label %land.lhs.true497, label %if.else552

land.lhs.true497:                                 ; preds = %lor.lhs.false495
  %326 = load %struct.am_table*, %struct.am_table** %oamtp, align 8
  %fallback498 = getelementptr inbounds %struct.am_table, %struct.am_table* %326, i32 0, i32 1
  %327 = load i8, i8* %fallback498, align 1
  %conv499 = zext i8 %327 to i32
  %cmp500 = icmp sgt i32 %conv499, 1
  br i1 %cmp500, label %land.lhs.true502, label %if.else552

land.lhs.true502:                                 ; preds = %land.lhs.true497, %land.lhs.true490
  %328 = load i32, i32* %flags.addr, align 4
  %and503 = and i32 %328, 8
  %tobool504 = icmp ne i32 %and503, 0
  br i1 %tobool504, label %if.else552, label %if.then505

if.then505:                                       ; preds = %land.lhs.true502
  %329 = load i32, i32* %method.addr, align 4
  %cmp506 = icmp eq i32 %329, 70
  br i1 %cmp506, label %if.then517, label %lor.lhs.false508

lor.lhs.false508:                                 ; preds = %if.then505
  %330 = load i32, i32* %method.addr, align 4
  %cmp509 = icmp eq i32 %330, 71
  br i1 %cmp509, label %if.then517, label %lor.lhs.false511

lor.lhs.false511:                                 ; preds = %lor.lhs.false508
  %331 = load i32, i32* %method.addr, align 4
  %cmp512 = icmp eq i32 %331, 68
  br i1 %cmp512, label %if.then517, label %lor.lhs.false514

lor.lhs.false514:                                 ; preds = %lor.lhs.false511
  %332 = load i32, i32* %method.addr, align 4
  %cmp515 = icmp eq i32 %332, 69
  br i1 %cmp515, label %if.then517, label %if.end518

if.then517:                                       ; preds = %lor.lhs.false514, %lor.lhs.false511, %lor.lhs.false508, %if.then505
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end518:                                        ; preds = %lor.lhs.false514
  store i32 -1, i32* %off, align 4
  %333 = load i32, i32* %method.addr, align 4
  switch i32 %333, label %sw.epilog521 [
    i32 17, label %sw.bb519
    i32 18, label %sw.bb519
    i32 19, label %sw.bb519
    i32 20, label %sw.bb519
    i32 21, label %sw.bb519
    i32 22, label %sw.bb519
    i32 23, label %sw.bb520
    i32 24, label %sw.bb520
    i32 25, label %sw.bb520
    i32 26, label %sw.bb520
    i32 27, label %sw.bb520
    i32 28, label %sw.bb520
  ]

sw.bb519:                                         ; preds = %if.end518, %if.end518, %if.end518, %if.end518, %if.end518, %if.end518
  store i32 58, i32* %off, align 4
  br label %sw.epilog521

sw.bb520:                                         ; preds = %if.end518, %if.end518, %if.end518, %if.end518, %if.end518, %if.end518
  store i32 59, i32* %off, align 4
  br label %sw.epilog521

sw.epilog521:                                     ; preds = %if.end518, %sw.bb520, %sw.bb519
  %334 = load i32, i32* %off, align 4
  %cmp522 = icmp ne i32 %334, -1
  br i1 %cmp522, label %if.then524, label %if.end547

if.then524:                                       ; preds = %sw.epilog521
  %335 = load %struct.cv**, %struct.cv*** %ocvp, align 8
  %tobool525 = icmp ne %struct.cv** %335, null
  br i1 %tobool525, label %land.lhs.true526, label %if.end534

land.lhs.true526:                                 ; preds = %if.then524
  %336 = load %struct.am_table*, %struct.am_table** %oamtp, align 8
  %fallback527 = getelementptr inbounds %struct.am_table, %struct.am_table* %336, i32 0, i32 1
  %337 = load i8, i8* %fallback527, align 1
  %conv528 = zext i8 %337 to i32
  %cmp529 = icmp sgt i32 %conv528, 1
  br i1 %cmp529, label %if.then531, label %if.end534

if.then531:                                       ; preds = %land.lhs.true526
  %338 = load %struct.cv**, %struct.cv*** %ocvp, align 8
  %339 = load i32, i32* %off, align 4
  %idxprom532 = sext i32 %339 to i64
  %arrayidx533 = getelementptr inbounds %struct.cv*, %struct.cv** %338, i64 %idxprom532
  %340 = load %struct.cv*, %struct.cv** %arrayidx533, align 8
  store %struct.cv* %340, %struct.cv** %cv, align 8
  store i32 -1, i32* %lr, align 4
  br label %if.end534

if.end534:                                        ; preds = %if.then531, %land.lhs.true526, %if.then524
  %341 = load %struct.cv*, %struct.cv** %cv, align 8
  %tobool535 = icmp ne %struct.cv* %341, null
  br i1 %tobool535, label %if.end546, label %land.lhs.true536

land.lhs.true536:                                 ; preds = %if.end534
  %342 = load %struct.cv**, %struct.cv*** %cvp, align 8
  %tobool537 = icmp ne %struct.cv** %342, null
  br i1 %tobool537, label %land.lhs.true538, label %if.end546

land.lhs.true538:                                 ; preds = %land.lhs.true536
  %343 = load %struct.am_table*, %struct.am_table** %amtp, align 8
  %fallback539 = getelementptr inbounds %struct.am_table, %struct.am_table* %343, i32 0, i32 1
  %344 = load i8, i8* %fallback539, align 1
  %conv540 = zext i8 %344 to i32
  %cmp541 = icmp sgt i32 %conv540, 1
  br i1 %cmp541, label %if.then543, label %if.end546

if.then543:                                       ; preds = %land.lhs.true538
  %345 = load %struct.cv**, %struct.cv*** %cvp, align 8
  %346 = load i32, i32* %off, align 4
  %idxprom544 = sext i32 %346 to i64
  %arrayidx545 = getelementptr inbounds %struct.cv*, %struct.cv** %345, i64 %idxprom544
  %347 = load %struct.cv*, %struct.cv** %arrayidx545, align 8
  store %struct.cv* %347, %struct.cv** %cv, align 8
  store i32 1, i32* %lr, align 4
  br label %if.end546

if.end546:                                        ; preds = %if.then543, %land.lhs.true538, %land.lhs.true536, %if.end534
  br label %if.end547

if.end547:                                        ; preds = %if.end546, %sw.epilog521
  %348 = load %struct.cv*, %struct.cv** %cv, align 8
  %tobool548 = icmp ne %struct.cv* %348, null
  br i1 %tobool548, label %if.then549, label %if.else550

if.then549:                                       ; preds = %if.end547
  store i32 1, i32* %postpr, align 4
  br label %if.end551

if.else550:                                       ; preds = %if.end547
  br label %not_found

if.end551:                                        ; preds = %if.then549
  br label %if.end861

if.else552:                                       ; preds = %land.lhs.true502, %land.lhs.true497, %lor.lhs.false495
  br label %not_found

not_found:                                        ; preds = %if.else552, %if.else550, %if.then354, %sw.default
  %349 = load i32, i32* %method.addr, align 4
  switch i32 %349, label %sw.epilog554 [
    i32 1, label %sw.bb553
    i32 2, label %sw.bb553
    i32 3, label %sw.bb553
    i32 4, label %sw.bb553
    i32 5, label %sw.bb553
  ]

sw.bb553:                                         ; preds = %not_found, %not_found, %not_found, %not_found, %not_found
  %350 = load %struct.sv*, %struct.sv** %left.addr, align 8
  store %struct.sv* %350, %struct.sv** %retval, align 8
  br label %return

sw.epilog554:                                     ; preds = %not_found
  %351 = load %struct.cv**, %struct.cv*** %ocvp, align 8
  %tobool555 = icmp ne %struct.cv** %351, null
  br i1 %tobool555, label %land.lhs.true556, label %if.else560

land.lhs.true556:                                 ; preds = %sw.epilog554
  %352 = load %struct.cv**, %struct.cv*** %ocvp, align 8
  %arrayidx557 = getelementptr inbounds %struct.cv*, %struct.cv** %352, i64 29
  %353 = load %struct.cv*, %struct.cv** %arrayidx557, align 8
  store %struct.cv* %353, %struct.cv** %cv, align 8
  %tobool558 = icmp ne %struct.cv* %353, null
  br i1 %tobool558, label %if.then559, label %if.else560

if.then559:                                       ; preds = %land.lhs.true556
  store i32 1, i32* %notfound, align 4
  store i32 -1, i32* %lr, align 4
  br label %if.end855

if.else560:                                       ; preds = %land.lhs.true556, %sw.epilog554
  %354 = load %struct.cv**, %struct.cv*** %cvp, align 8
  %tobool561 = icmp ne %struct.cv** %354, null
  br i1 %tobool561, label %land.lhs.true562, label %if.else566

land.lhs.true562:                                 ; preds = %if.else560
  %355 = load %struct.cv**, %struct.cv*** %cvp, align 8
  %arrayidx563 = getelementptr inbounds %struct.cv*, %struct.cv** %355, i64 29
  %356 = load %struct.cv*, %struct.cv** %arrayidx563, align 8
  store %struct.cv* %356, %struct.cv** %cv, align 8
  %tobool564 = icmp ne %struct.cv* %356, null
  br i1 %tobool564, label %if.then565, label %if.else566

if.then565:                                       ; preds = %land.lhs.true562
  store i32 1, i32* %notfound, align 4
  store i32 1, i32* %lr, align 4
  br label %if.end854

if.else566:                                       ; preds = %land.lhs.true562, %if.else560
  %357 = load %struct.cv**, %struct.cv*** %ocvp, align 8
  %tobool567 = icmp ne %struct.cv** %357, null
  br i1 %tobool567, label %lor.lhs.false568, label %land.rhs573

lor.lhs.false568:                                 ; preds = %if.else566
  %358 = load %struct.am_table*, %struct.am_table** %oamtp, align 8
  %fallback569 = getelementptr inbounds %struct.am_table, %struct.am_table* %358, i32 0, i32 1
  %359 = load i8, i8* %fallback569, align 1
  %conv570 = zext i8 %359 to i32
  %cmp571 = icmp sge i32 %conv570, 3
  br i1 %cmp571, label %land.rhs573, label %land.end582

land.rhs573:                                      ; preds = %lor.lhs.false568, %if.else566
  %360 = load %struct.cv**, %struct.cv*** %cvp, align 8
  %tobool574 = icmp ne %struct.cv** %360, null
  br i1 %tobool574, label %lor.rhs575, label %lor.end580

lor.rhs575:                                       ; preds = %land.rhs573
  %361 = load %struct.am_table*, %struct.am_table** %amtp, align 8
  %fallback576 = getelementptr inbounds %struct.am_table, %struct.am_table* %361, i32 0, i32 1
  %362 = load i8, i8* %fallback576, align 1
  %conv577 = zext i8 %362 to i32
  %cmp578 = icmp sge i32 %conv577, 3
  br label %lor.end580

lor.end580:                                       ; preds = %lor.rhs575, %land.rhs573
  %363 = phi i1 [ true, %land.rhs573 ], [ %cmp578, %lor.rhs575 ]
  br label %land.end582

land.end582:                                      ; preds = %lor.end580, %lor.lhs.false568
  %364 = phi i1 [ false, %lor.lhs.false568 ], [ %363, %lor.end580 ]
  %land.ext583 = zext i1 %364 to i32
  store i32 %land.ext583, i32* %use_default_op, align 4
  br i1 %364, label %if.then584, label %if.else585

if.then584:                                       ; preds = %land.end582
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.else585:                                       ; preds = %land.end582
  %365 = load i32, i32* %off, align 4
  %cmp586 = icmp eq i32 %365, -1
  br i1 %cmp586, label %if.then588, label %if.end589

if.then588:                                       ; preds = %if.else585
  %366 = load i32, i32* %method.addr, align 4
  store i32 %366, i32* %off, align 4
  br label %if.end589

if.end589:                                        ; preds = %if.then588, %if.else585
  %367 = load i32, i32* %method.addr, align 4
  %368 = load i32, i32* %assignshift, align 4
  %add590 = add nsw i32 %367, %368
  %idxprom591 = sext i32 %add590 to i64
  %arrayidx592 = getelementptr inbounds [75 x i8*], [75 x i8*]* @PL_AMG_names, i64 0, i64 %idxprom591
  %369 = load i8*, i8** %arrayidx592, align 8
  %add.ptr = getelementptr inbounds i8, i8* %369, i64 1
  %370 = load i32, i32* %flags.addr, align 4
  %and593 = and i32 %370, 8
  %tobool594 = icmp ne i32 %and593, 0
  %371 = zext i1 %tobool594 to i64
  %cond595 = select i1 %tobool594, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.37, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.38, i64 0, i64 0)
  %372 = load %struct.sv*, %struct.sv** %left.addr, align 8
  %sv_flags596 = getelementptr inbounds %struct.sv, %struct.sv* %372, i32 0, i32 2
  %373 = load i32, i32* %sv_flags596, align 4
  %and597 = and i32 %373, 2048
  %tobool598 = icmp ne i32 %and597, 0
  br i1 %tobool598, label %land.lhs.true599, label %land.end613

land.lhs.true599:                                 ; preds = %if.end589
  %374 = load %struct.sv*, %struct.sv** %left.addr, align 8
  %sv_u600 = getelementptr inbounds %struct.sv, %struct.sv* %374, i32 0, i32 3
  %svu_rv601 = bitcast %union.anon* %sv_u600 to %struct.sv**
  %375 = load %struct.sv*, %struct.sv** %svu_rv601, align 8
  %sv_flags602 = getelementptr inbounds %struct.sv, %struct.sv* %375, i32 0, i32 2
  %376 = load i32, i32* %sv_flags602, align 4
  %and603 = and i32 %376, 1048576
  %tobool604 = icmp ne i32 %and603, 0
  br i1 %tobool604, label %land.rhs605, label %land.end613

land.rhs605:                                      ; preds = %land.lhs.true599
  %377 = load %struct.sv*, %struct.sv** %left.addr, align 8
  %sv_u606 = getelementptr inbounds %struct.sv, %struct.sv* %377, i32 0, i32 3
  %svu_rv607 = bitcast %union.anon* %sv_u606 to %struct.sv**
  %378 = load %struct.sv*, %struct.sv** %svu_rv607, align 8
  %sv_any608 = getelementptr inbounds %struct.sv, %struct.sv* %378, i32 0, i32 0
  %379 = load i8*, i8** %sv_any608, align 8
  %380 = bitcast i8* %379 to %struct.xpvmg*
  %xmg_stash609 = getelementptr inbounds %struct.xpvmg, %struct.xpvmg* %380, i32 0, i32 0
  %381 = load %struct.hv*, %struct.hv** %xmg_stash609, align 8
  %sv_flags610 = getelementptr inbounds %struct.hv, %struct.hv* %381, i32 0, i32 2
  %382 = load i32, i32* %sv_flags610, align 4
  %and611 = and i32 %382, 268435456
  %tobool612 = icmp ne i32 %and611, 0
  br label %land.end613

land.end613:                                      ; preds = %land.rhs605, %land.lhs.true599, %if.end589
  %383 = phi i1 [ false, %land.lhs.true599 ], [ false, %if.end589 ], [ %tobool612, %land.rhs605 ]
  %384 = zext i1 %383 to i64
  %cond615 = select i1 %383, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.39, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.40, i64 0, i64 0)
  %385 = load %struct.sv*, %struct.sv** %left.addr, align 8
  %sv_flags616 = getelementptr inbounds %struct.sv, %struct.sv* %385, i32 0, i32 2
  %386 = load i32, i32* %sv_flags616, align 4
  %and617 = and i32 %386, 2048
  %tobool618 = icmp ne i32 %and617, 0
  br i1 %tobool618, label %land.lhs.true619, label %cond.false717

land.lhs.true619:                                 ; preds = %land.end613
  %387 = load %struct.sv*, %struct.sv** %left.addr, align 8
  %sv_u620 = getelementptr inbounds %struct.sv, %struct.sv* %387, i32 0, i32 3
  %svu_rv621 = bitcast %union.anon* %sv_u620 to %struct.sv**
  %388 = load %struct.sv*, %struct.sv** %svu_rv621, align 8
  %sv_flags622 = getelementptr inbounds %struct.sv, %struct.sv* %388, i32 0, i32 2
  %389 = load i32, i32* %sv_flags622, align 4
  %and623 = and i32 %389, 1048576
  %tobool624 = icmp ne i32 %and623, 0
  br i1 %tobool624, label %land.lhs.true625, label %cond.false717

land.lhs.true625:                                 ; preds = %land.lhs.true619
  %390 = load %struct.sv*, %struct.sv** %left.addr, align 8
  %sv_u626 = getelementptr inbounds %struct.sv, %struct.sv* %390, i32 0, i32 3
  %svu_rv627 = bitcast %union.anon* %sv_u626 to %struct.sv**
  %391 = load %struct.sv*, %struct.sv** %svu_rv627, align 8
  %sv_any628 = getelementptr inbounds %struct.sv, %struct.sv* %391, i32 0, i32 0
  %392 = load i8*, i8** %sv_any628, align 8
  %393 = bitcast i8* %392 to %struct.xpvmg*
  %xmg_stash629 = getelementptr inbounds %struct.xpvmg, %struct.xpvmg* %393, i32 0, i32 0
  %394 = load %struct.hv*, %struct.hv** %xmg_stash629, align 8
  %sv_flags630 = getelementptr inbounds %struct.hv, %struct.hv* %394, i32 0, i32 2
  %395 = load i32, i32* %sv_flags630, align 4
  %and631 = and i32 %395, 268435456
  %tobool632 = icmp ne i32 %and631, 0
  br i1 %tobool632, label %cond.true633, label %cond.false717

cond.true633:                                     ; preds = %land.lhs.true625
  %396 = load %struct.sv*, %struct.sv** %left.addr, align 8
  %sv_u634 = getelementptr inbounds %struct.sv, %struct.sv* %396, i32 0, i32 3
  %svu_rv635 = bitcast %union.anon* %sv_u634 to %struct.sv**
  %397 = load %struct.sv*, %struct.sv** %svu_rv635, align 8
  %sv_any636 = getelementptr inbounds %struct.sv, %struct.sv* %397, i32 0, i32 0
  %398 = load i8*, i8** %sv_any636, align 8
  %399 = bitcast i8* %398 to %struct.xpvmg*
  %xmg_stash637 = getelementptr inbounds %struct.xpvmg, %struct.xpvmg* %399, i32 0, i32 0
  %400 = load %struct.hv*, %struct.hv** %xmg_stash637, align 8
  %sv_flags638 = getelementptr inbounds %struct.hv, %struct.hv* %400, i32 0, i32 2
  %401 = load i32, i32* %sv_flags638, align 4
  %and639 = and i32 %401, 33554432
  %tobool640 = icmp ne i32 %and639, 0
  br i1 %tobool640, label %land.lhs.true641, label %cond.false712

land.lhs.true641:                                 ; preds = %cond.true633
  %402 = load %struct.sv*, %struct.sv** %left.addr, align 8
  %sv_u642 = getelementptr inbounds %struct.sv, %struct.sv* %402, i32 0, i32 3
  %svu_rv643 = bitcast %union.anon* %sv_u642 to %struct.sv**
  %403 = load %struct.sv*, %struct.sv** %svu_rv643, align 8
  %sv_any644 = getelementptr inbounds %struct.sv, %struct.sv* %403, i32 0, i32 0
  %404 = load i8*, i8** %sv_any644, align 8
  %405 = bitcast i8* %404 to %struct.xpvmg*
  %xmg_stash645 = getelementptr inbounds %struct.xpvmg, %struct.xpvmg* %405, i32 0, i32 0
  %406 = load %struct.hv*, %struct.hv** %xmg_stash645, align 8
  %sv_u646 = getelementptr inbounds %struct.hv, %struct.hv* %406, i32 0, i32 3
  %svu_hash647 = bitcast %union.anon.4* %sv_u646 to %struct.he***
  %407 = load %struct.he**, %struct.he*** %svu_hash647, align 8
  %408 = load %struct.sv*, %struct.sv** %left.addr, align 8
  %sv_u648 = getelementptr inbounds %struct.sv, %struct.sv* %408, i32 0, i32 3
  %svu_rv649 = bitcast %union.anon* %sv_u648 to %struct.sv**
  %409 = load %struct.sv*, %struct.sv** %svu_rv649, align 8
  %sv_any650 = getelementptr inbounds %struct.sv, %struct.sv* %409, i32 0, i32 0
  %410 = load i8*, i8** %sv_any650, align 8
  %411 = bitcast i8* %410 to %struct.xpvmg*
  %xmg_stash651 = getelementptr inbounds %struct.xpvmg, %struct.xpvmg* %411, i32 0, i32 0
  %412 = load %struct.hv*, %struct.hv** %xmg_stash651, align 8
  %sv_any652 = getelementptr inbounds %struct.hv, %struct.hv* %412, i32 0, i32 0
  %413 = load %struct.xpvhv*, %struct.xpvhv** %sv_any652, align 8
  %xhv_max653 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %413, i32 0, i32 3
  %414 = load i64, i64* %xhv_max653, align 8
  %add654 = add i64 %414, 1
  %arrayidx655 = getelementptr inbounds %struct.he*, %struct.he** %407, i64 %add654
  %415 = bitcast %struct.he** %arrayidx655 to %struct.xpvhv_aux*
  %xhv_name_u656 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %415, i32 0, i32 0
  %xhvnameu_name657 = bitcast %union._xhvnameu* %xhv_name_u656 to %struct.hek**
  %416 = load %struct.hek*, %struct.hek** %xhvnameu_name657, align 8
  %tobool658 = icmp ne %struct.hek* %416, null
  br i1 %tobool658, label %cond.true659, label %cond.false712

cond.true659:                                     ; preds = %land.lhs.true641
  %417 = load %struct.sv*, %struct.sv** %left.addr, align 8
  %sv_u660 = getelementptr inbounds %struct.sv, %struct.sv* %417, i32 0, i32 3
  %svu_rv661 = bitcast %union.anon* %sv_u660 to %struct.sv**
  %418 = load %struct.sv*, %struct.sv** %svu_rv661, align 8
  %sv_any662 = getelementptr inbounds %struct.sv, %struct.sv* %418, i32 0, i32 0
  %419 = load i8*, i8** %sv_any662, align 8
  %420 = bitcast i8* %419 to %struct.xpvmg*
  %xmg_stash663 = getelementptr inbounds %struct.xpvmg, %struct.xpvmg* %420, i32 0, i32 0
  %421 = load %struct.hv*, %struct.hv** %xmg_stash663, align 8
  %sv_u664 = getelementptr inbounds %struct.hv, %struct.hv* %421, i32 0, i32 3
  %svu_hash665 = bitcast %union.anon.4* %sv_u664 to %struct.he***
  %422 = load %struct.he**, %struct.he*** %svu_hash665, align 8
  %423 = load %struct.sv*, %struct.sv** %left.addr, align 8
  %sv_u666 = getelementptr inbounds %struct.sv, %struct.sv* %423, i32 0, i32 3
  %svu_rv667 = bitcast %union.anon* %sv_u666 to %struct.sv**
  %424 = load %struct.sv*, %struct.sv** %svu_rv667, align 8
  %sv_any668 = getelementptr inbounds %struct.sv, %struct.sv* %424, i32 0, i32 0
  %425 = load i8*, i8** %sv_any668, align 8
  %426 = bitcast i8* %425 to %struct.xpvmg*
  %xmg_stash669 = getelementptr inbounds %struct.xpvmg, %struct.xpvmg* %426, i32 0, i32 0
  %427 = load %struct.hv*, %struct.hv** %xmg_stash669, align 8
  %sv_any670 = getelementptr inbounds %struct.hv, %struct.hv* %427, i32 0, i32 0
  %428 = load %struct.xpvhv*, %struct.xpvhv** %sv_any670, align 8
  %xhv_max671 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %428, i32 0, i32 3
  %429 = load i64, i64* %xhv_max671, align 8
  %add672 = add i64 %429, 1
  %arrayidx673 = getelementptr inbounds %struct.he*, %struct.he** %422, i64 %add672
  %430 = bitcast %struct.he** %arrayidx673 to %struct.xpvhv_aux*
  %xhv_name_count674 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %430, i32 0, i32 4
  %431 = load i32, i32* %xhv_name_count674, align 4
  %tobool675 = icmp ne i32 %431, 0
  br i1 %tobool675, label %cond.true676, label %cond.false693

cond.true676:                                     ; preds = %cond.true659
  %432 = load %struct.sv*, %struct.sv** %left.addr, align 8
  %sv_u677 = getelementptr inbounds %struct.sv, %struct.sv* %432, i32 0, i32 3
  %svu_rv678 = bitcast %union.anon* %sv_u677 to %struct.sv**
  %433 = load %struct.sv*, %struct.sv** %svu_rv678, align 8
  %sv_any679 = getelementptr inbounds %struct.sv, %struct.sv* %433, i32 0, i32 0
  %434 = load i8*, i8** %sv_any679, align 8
  %435 = bitcast i8* %434 to %struct.xpvmg*
  %xmg_stash680 = getelementptr inbounds %struct.xpvmg, %struct.xpvmg* %435, i32 0, i32 0
  %436 = load %struct.hv*, %struct.hv** %xmg_stash680, align 8
  %sv_u681 = getelementptr inbounds %struct.hv, %struct.hv* %436, i32 0, i32 3
  %svu_hash682 = bitcast %union.anon.4* %sv_u681 to %struct.he***
  %437 = load %struct.he**, %struct.he*** %svu_hash682, align 8
  %438 = load %struct.sv*, %struct.sv** %left.addr, align 8
  %sv_u683 = getelementptr inbounds %struct.sv, %struct.sv* %438, i32 0, i32 3
  %svu_rv684 = bitcast %union.anon* %sv_u683 to %struct.sv**
  %439 = load %struct.sv*, %struct.sv** %svu_rv684, align 8
  %sv_any685 = getelementptr inbounds %struct.sv, %struct.sv* %439, i32 0, i32 0
  %440 = load i8*, i8** %sv_any685, align 8
  %441 = bitcast i8* %440 to %struct.xpvmg*
  %xmg_stash686 = getelementptr inbounds %struct.xpvmg, %struct.xpvmg* %441, i32 0, i32 0
  %442 = load %struct.hv*, %struct.hv** %xmg_stash686, align 8
  %sv_any687 = getelementptr inbounds %struct.hv, %struct.hv* %442, i32 0, i32 0
  %443 = load %struct.xpvhv*, %struct.xpvhv** %sv_any687, align 8
  %xhv_max688 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %443, i32 0, i32 3
  %444 = load i64, i64* %xhv_max688, align 8
  %add689 = add i64 %444, 1
  %arrayidx690 = getelementptr inbounds %struct.he*, %struct.he** %437, i64 %add689
  %445 = bitcast %struct.he** %arrayidx690 to %struct.xpvhv_aux*
  %xhv_name_u691 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %445, i32 0, i32 0
  %xhvnameu_names692 = bitcast %union._xhvnameu* %xhv_name_u691 to %struct.hek***
  %446 = load %struct.hek**, %struct.hek*** %xhvnameu_names692, align 8
  %447 = load %struct.hek*, %struct.hek** %446, align 8
  br label %cond.end710

cond.false693:                                    ; preds = %cond.true659
  %448 = load %struct.sv*, %struct.sv** %left.addr, align 8
  %sv_u694 = getelementptr inbounds %struct.sv, %struct.sv* %448, i32 0, i32 3
  %svu_rv695 = bitcast %union.anon* %sv_u694 to %struct.sv**
  %449 = load %struct.sv*, %struct.sv** %svu_rv695, align 8
  %sv_any696 = getelementptr inbounds %struct.sv, %struct.sv* %449, i32 0, i32 0
  %450 = load i8*, i8** %sv_any696, align 8
  %451 = bitcast i8* %450 to %struct.xpvmg*
  %xmg_stash697 = getelementptr inbounds %struct.xpvmg, %struct.xpvmg* %451, i32 0, i32 0
  %452 = load %struct.hv*, %struct.hv** %xmg_stash697, align 8
  %sv_u698 = getelementptr inbounds %struct.hv, %struct.hv* %452, i32 0, i32 3
  %svu_hash699 = bitcast %union.anon.4* %sv_u698 to %struct.he***
  %453 = load %struct.he**, %struct.he*** %svu_hash699, align 8
  %454 = load %struct.sv*, %struct.sv** %left.addr, align 8
  %sv_u700 = getelementptr inbounds %struct.sv, %struct.sv* %454, i32 0, i32 3
  %svu_rv701 = bitcast %union.anon* %sv_u700 to %struct.sv**
  %455 = load %struct.sv*, %struct.sv** %svu_rv701, align 8
  %sv_any702 = getelementptr inbounds %struct.sv, %struct.sv* %455, i32 0, i32 0
  %456 = load i8*, i8** %sv_any702, align 8
  %457 = bitcast i8* %456 to %struct.xpvmg*
  %xmg_stash703 = getelementptr inbounds %struct.xpvmg, %struct.xpvmg* %457, i32 0, i32 0
  %458 = load %struct.hv*, %struct.hv** %xmg_stash703, align 8
  %sv_any704 = getelementptr inbounds %struct.hv, %struct.hv* %458, i32 0, i32 0
  %459 = load %struct.xpvhv*, %struct.xpvhv** %sv_any704, align 8
  %xhv_max705 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %459, i32 0, i32 3
  %460 = load i64, i64* %xhv_max705, align 8
  %add706 = add i64 %460, 1
  %arrayidx707 = getelementptr inbounds %struct.he*, %struct.he** %453, i64 %add706
  %461 = bitcast %struct.he** %arrayidx707 to %struct.xpvhv_aux*
  %xhv_name_u708 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %461, i32 0, i32 0
  %xhvnameu_name709 = bitcast %union._xhvnameu* %xhv_name_u708 to %struct.hek**
  %462 = load %struct.hek*, %struct.hek** %xhvnameu_name709, align 8
  br label %cond.end710

cond.end710:                                      ; preds = %cond.false693, %cond.true676
  %cond711 = phi %struct.hek* [ %447, %cond.true676 ], [ %462, %cond.false693 ]
  br label %cond.end713

cond.false712:                                    ; preds = %land.lhs.true641, %cond.true633
  br label %cond.end713

cond.end713:                                      ; preds = %cond.false712, %cond.end710
  %cond714 = phi %struct.hek* [ %cond711, %cond.end710 ], [ null, %cond.false712 ]
  %call715 = call %struct.sv* @Perl_newSVhek(%struct.hek* %cond714)
  %call716 = call %struct.sv* @Perl_sv_2mortal(%struct.sv* %call715)
  %463 = bitcast %struct.sv* %call716 to i8*
  br label %cond.end718

cond.false717:                                    ; preds = %land.lhs.true625, %land.lhs.true619, %land.end613
  br label %cond.end718

cond.end718:                                      ; preds = %cond.false717, %cond.end713
  %cond719 = phi i8* [ %463, %cond.end713 ], [ bitcast (%struct.sv* @PL_sv_no to i8*), %cond.false717 ]
  %464 = load %struct.sv*, %struct.sv** %right.addr, align 8
  %sv_flags720 = getelementptr inbounds %struct.sv, %struct.sv* %464, i32 0, i32 2
  %465 = load i32, i32* %sv_flags720, align 4
  %and721 = and i32 %465, 2048
  %tobool722 = icmp ne i32 %and721, 0
  br i1 %tobool722, label %land.lhs.true723, label %cond.false738

land.lhs.true723:                                 ; preds = %cond.end718
  %466 = load %struct.sv*, %struct.sv** %right.addr, align 8
  %sv_u724 = getelementptr inbounds %struct.sv, %struct.sv* %466, i32 0, i32 3
  %svu_rv725 = bitcast %union.anon* %sv_u724 to %struct.sv**
  %467 = load %struct.sv*, %struct.sv** %svu_rv725, align 8
  %sv_flags726 = getelementptr inbounds %struct.sv, %struct.sv* %467, i32 0, i32 2
  %468 = load i32, i32* %sv_flags726, align 4
  %and727 = and i32 %468, 1048576
  %tobool728 = icmp ne i32 %and727, 0
  br i1 %tobool728, label %land.lhs.true729, label %cond.false738

land.lhs.true729:                                 ; preds = %land.lhs.true723
  %469 = load %struct.sv*, %struct.sv** %right.addr, align 8
  %sv_u730 = getelementptr inbounds %struct.sv, %struct.sv* %469, i32 0, i32 3
  %svu_rv731 = bitcast %union.anon* %sv_u730 to %struct.sv**
  %470 = load %struct.sv*, %struct.sv** %svu_rv731, align 8
  %sv_any732 = getelementptr inbounds %struct.sv, %struct.sv* %470, i32 0, i32 0
  %471 = load i8*, i8** %sv_any732, align 8
  %472 = bitcast i8* %471 to %struct.xpvmg*
  %xmg_stash733 = getelementptr inbounds %struct.xpvmg, %struct.xpvmg* %472, i32 0, i32 0
  %473 = load %struct.hv*, %struct.hv** %xmg_stash733, align 8
  %sv_flags734 = getelementptr inbounds %struct.hv, %struct.hv* %473, i32 0, i32 2
  %474 = load i32, i32* %sv_flags734, align 4
  %and735 = and i32 %474, 268435456
  %tobool736 = icmp ne i32 %and735, 0
  br i1 %tobool736, label %cond.true737, label %cond.false738

cond.true737:                                     ; preds = %land.lhs.true729
  br label %cond.end742

cond.false738:                                    ; preds = %land.lhs.true729, %land.lhs.true723, %cond.end718
  %475 = load i32, i32* %flags.addr, align 4
  %and739 = and i32 %475, 8
  %tobool740 = icmp ne i32 %and739, 0
  %476 = zext i1 %tobool740 to i64
  %cond741 = select i1 %tobool740, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.42, i64 0, i64 0)
  br label %cond.end742

cond.end742:                                      ; preds = %cond.false738, %cond.true737
  %cond743 = phi i8* [ getelementptr inbounds ([41 x i8], [41 x i8]* @.str.41, i64 0, i64 0), %cond.true737 ], [ %cond741, %cond.false738 ]
  %477 = load %struct.sv*, %struct.sv** %right.addr, align 8
  %sv_flags744 = getelementptr inbounds %struct.sv, %struct.sv* %477, i32 0, i32 2
  %478 = load i32, i32* %sv_flags744, align 4
  %and745 = and i32 %478, 2048
  %tobool746 = icmp ne i32 %and745, 0
  br i1 %tobool746, label %land.lhs.true747, label %cond.false845

land.lhs.true747:                                 ; preds = %cond.end742
  %479 = load %struct.sv*, %struct.sv** %right.addr, align 8
  %sv_u748 = getelementptr inbounds %struct.sv, %struct.sv* %479, i32 0, i32 3
  %svu_rv749 = bitcast %union.anon* %sv_u748 to %struct.sv**
  %480 = load %struct.sv*, %struct.sv** %svu_rv749, align 8
  %sv_flags750 = getelementptr inbounds %struct.sv, %struct.sv* %480, i32 0, i32 2
  %481 = load i32, i32* %sv_flags750, align 4
  %and751 = and i32 %481, 1048576
  %tobool752 = icmp ne i32 %and751, 0
  br i1 %tobool752, label %land.lhs.true753, label %cond.false845

land.lhs.true753:                                 ; preds = %land.lhs.true747
  %482 = load %struct.sv*, %struct.sv** %right.addr, align 8
  %sv_u754 = getelementptr inbounds %struct.sv, %struct.sv* %482, i32 0, i32 3
  %svu_rv755 = bitcast %union.anon* %sv_u754 to %struct.sv**
  %483 = load %struct.sv*, %struct.sv** %svu_rv755, align 8
  %sv_any756 = getelementptr inbounds %struct.sv, %struct.sv* %483, i32 0, i32 0
  %484 = load i8*, i8** %sv_any756, align 8
  %485 = bitcast i8* %484 to %struct.xpvmg*
  %xmg_stash757 = getelementptr inbounds %struct.xpvmg, %struct.xpvmg* %485, i32 0, i32 0
  %486 = load %struct.hv*, %struct.hv** %xmg_stash757, align 8
  %sv_flags758 = getelementptr inbounds %struct.hv, %struct.hv* %486, i32 0, i32 2
  %487 = load i32, i32* %sv_flags758, align 4
  %and759 = and i32 %487, 268435456
  %tobool760 = icmp ne i32 %and759, 0
  br i1 %tobool760, label %cond.true761, label %cond.false845

cond.true761:                                     ; preds = %land.lhs.true753
  %488 = load %struct.sv*, %struct.sv** %right.addr, align 8
  %sv_u762 = getelementptr inbounds %struct.sv, %struct.sv* %488, i32 0, i32 3
  %svu_rv763 = bitcast %union.anon* %sv_u762 to %struct.sv**
  %489 = load %struct.sv*, %struct.sv** %svu_rv763, align 8
  %sv_any764 = getelementptr inbounds %struct.sv, %struct.sv* %489, i32 0, i32 0
  %490 = load i8*, i8** %sv_any764, align 8
  %491 = bitcast i8* %490 to %struct.xpvmg*
  %xmg_stash765 = getelementptr inbounds %struct.xpvmg, %struct.xpvmg* %491, i32 0, i32 0
  %492 = load %struct.hv*, %struct.hv** %xmg_stash765, align 8
  %sv_flags766 = getelementptr inbounds %struct.hv, %struct.hv* %492, i32 0, i32 2
  %493 = load i32, i32* %sv_flags766, align 4
  %and767 = and i32 %493, 33554432
  %tobool768 = icmp ne i32 %and767, 0
  br i1 %tobool768, label %land.lhs.true769, label %cond.false840

land.lhs.true769:                                 ; preds = %cond.true761
  %494 = load %struct.sv*, %struct.sv** %right.addr, align 8
  %sv_u770 = getelementptr inbounds %struct.sv, %struct.sv* %494, i32 0, i32 3
  %svu_rv771 = bitcast %union.anon* %sv_u770 to %struct.sv**
  %495 = load %struct.sv*, %struct.sv** %svu_rv771, align 8
  %sv_any772 = getelementptr inbounds %struct.sv, %struct.sv* %495, i32 0, i32 0
  %496 = load i8*, i8** %sv_any772, align 8
  %497 = bitcast i8* %496 to %struct.xpvmg*
  %xmg_stash773 = getelementptr inbounds %struct.xpvmg, %struct.xpvmg* %497, i32 0, i32 0
  %498 = load %struct.hv*, %struct.hv** %xmg_stash773, align 8
  %sv_u774 = getelementptr inbounds %struct.hv, %struct.hv* %498, i32 0, i32 3
  %svu_hash775 = bitcast %union.anon.4* %sv_u774 to %struct.he***
  %499 = load %struct.he**, %struct.he*** %svu_hash775, align 8
  %500 = load %struct.sv*, %struct.sv** %right.addr, align 8
  %sv_u776 = getelementptr inbounds %struct.sv, %struct.sv* %500, i32 0, i32 3
  %svu_rv777 = bitcast %union.anon* %sv_u776 to %struct.sv**
  %501 = load %struct.sv*, %struct.sv** %svu_rv777, align 8
  %sv_any778 = getelementptr inbounds %struct.sv, %struct.sv* %501, i32 0, i32 0
  %502 = load i8*, i8** %sv_any778, align 8
  %503 = bitcast i8* %502 to %struct.xpvmg*
  %xmg_stash779 = getelementptr inbounds %struct.xpvmg, %struct.xpvmg* %503, i32 0, i32 0
  %504 = load %struct.hv*, %struct.hv** %xmg_stash779, align 8
  %sv_any780 = getelementptr inbounds %struct.hv, %struct.hv* %504, i32 0, i32 0
  %505 = load %struct.xpvhv*, %struct.xpvhv** %sv_any780, align 8
  %xhv_max781 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %505, i32 0, i32 3
  %506 = load i64, i64* %xhv_max781, align 8
  %add782 = add i64 %506, 1
  %arrayidx783 = getelementptr inbounds %struct.he*, %struct.he** %499, i64 %add782
  %507 = bitcast %struct.he** %arrayidx783 to %struct.xpvhv_aux*
  %xhv_name_u784 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %507, i32 0, i32 0
  %xhvnameu_name785 = bitcast %union._xhvnameu* %xhv_name_u784 to %struct.hek**
  %508 = load %struct.hek*, %struct.hek** %xhvnameu_name785, align 8
  %tobool786 = icmp ne %struct.hek* %508, null
  br i1 %tobool786, label %cond.true787, label %cond.false840

cond.true787:                                     ; preds = %land.lhs.true769
  %509 = load %struct.sv*, %struct.sv** %right.addr, align 8
  %sv_u788 = getelementptr inbounds %struct.sv, %struct.sv* %509, i32 0, i32 3
  %svu_rv789 = bitcast %union.anon* %sv_u788 to %struct.sv**
  %510 = load %struct.sv*, %struct.sv** %svu_rv789, align 8
  %sv_any790 = getelementptr inbounds %struct.sv, %struct.sv* %510, i32 0, i32 0
  %511 = load i8*, i8** %sv_any790, align 8
  %512 = bitcast i8* %511 to %struct.xpvmg*
  %xmg_stash791 = getelementptr inbounds %struct.xpvmg, %struct.xpvmg* %512, i32 0, i32 0
  %513 = load %struct.hv*, %struct.hv** %xmg_stash791, align 8
  %sv_u792 = getelementptr inbounds %struct.hv, %struct.hv* %513, i32 0, i32 3
  %svu_hash793 = bitcast %union.anon.4* %sv_u792 to %struct.he***
  %514 = load %struct.he**, %struct.he*** %svu_hash793, align 8
  %515 = load %struct.sv*, %struct.sv** %right.addr, align 8
  %sv_u794 = getelementptr inbounds %struct.sv, %struct.sv* %515, i32 0, i32 3
  %svu_rv795 = bitcast %union.anon* %sv_u794 to %struct.sv**
  %516 = load %struct.sv*, %struct.sv** %svu_rv795, align 8
  %sv_any796 = getelementptr inbounds %struct.sv, %struct.sv* %516, i32 0, i32 0
  %517 = load i8*, i8** %sv_any796, align 8
  %518 = bitcast i8* %517 to %struct.xpvmg*
  %xmg_stash797 = getelementptr inbounds %struct.xpvmg, %struct.xpvmg* %518, i32 0, i32 0
  %519 = load %struct.hv*, %struct.hv** %xmg_stash797, align 8
  %sv_any798 = getelementptr inbounds %struct.hv, %struct.hv* %519, i32 0, i32 0
  %520 = load %struct.xpvhv*, %struct.xpvhv** %sv_any798, align 8
  %xhv_max799 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %520, i32 0, i32 3
  %521 = load i64, i64* %xhv_max799, align 8
  %add800 = add i64 %521, 1
  %arrayidx801 = getelementptr inbounds %struct.he*, %struct.he** %514, i64 %add800
  %522 = bitcast %struct.he** %arrayidx801 to %struct.xpvhv_aux*
  %xhv_name_count802 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %522, i32 0, i32 4
  %523 = load i32, i32* %xhv_name_count802, align 4
  %tobool803 = icmp ne i32 %523, 0
  br i1 %tobool803, label %cond.true804, label %cond.false821

cond.true804:                                     ; preds = %cond.true787
  %524 = load %struct.sv*, %struct.sv** %right.addr, align 8
  %sv_u805 = getelementptr inbounds %struct.sv, %struct.sv* %524, i32 0, i32 3
  %svu_rv806 = bitcast %union.anon* %sv_u805 to %struct.sv**
  %525 = load %struct.sv*, %struct.sv** %svu_rv806, align 8
  %sv_any807 = getelementptr inbounds %struct.sv, %struct.sv* %525, i32 0, i32 0
  %526 = load i8*, i8** %sv_any807, align 8
  %527 = bitcast i8* %526 to %struct.xpvmg*
  %xmg_stash808 = getelementptr inbounds %struct.xpvmg, %struct.xpvmg* %527, i32 0, i32 0
  %528 = load %struct.hv*, %struct.hv** %xmg_stash808, align 8
  %sv_u809 = getelementptr inbounds %struct.hv, %struct.hv* %528, i32 0, i32 3
  %svu_hash810 = bitcast %union.anon.4* %sv_u809 to %struct.he***
  %529 = load %struct.he**, %struct.he*** %svu_hash810, align 8
  %530 = load %struct.sv*, %struct.sv** %right.addr, align 8
  %sv_u811 = getelementptr inbounds %struct.sv, %struct.sv* %530, i32 0, i32 3
  %svu_rv812 = bitcast %union.anon* %sv_u811 to %struct.sv**
  %531 = load %struct.sv*, %struct.sv** %svu_rv812, align 8
  %sv_any813 = getelementptr inbounds %struct.sv, %struct.sv* %531, i32 0, i32 0
  %532 = load i8*, i8** %sv_any813, align 8
  %533 = bitcast i8* %532 to %struct.xpvmg*
  %xmg_stash814 = getelementptr inbounds %struct.xpvmg, %struct.xpvmg* %533, i32 0, i32 0
  %534 = load %struct.hv*, %struct.hv** %xmg_stash814, align 8
  %sv_any815 = getelementptr inbounds %struct.hv, %struct.hv* %534, i32 0, i32 0
  %535 = load %struct.xpvhv*, %struct.xpvhv** %sv_any815, align 8
  %xhv_max816 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %535, i32 0, i32 3
  %536 = load i64, i64* %xhv_max816, align 8
  %add817 = add i64 %536, 1
  %arrayidx818 = getelementptr inbounds %struct.he*, %struct.he** %529, i64 %add817
  %537 = bitcast %struct.he** %arrayidx818 to %struct.xpvhv_aux*
  %xhv_name_u819 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %537, i32 0, i32 0
  %xhvnameu_names820 = bitcast %union._xhvnameu* %xhv_name_u819 to %struct.hek***
  %538 = load %struct.hek**, %struct.hek*** %xhvnameu_names820, align 8
  %539 = load %struct.hek*, %struct.hek** %538, align 8
  br label %cond.end838

cond.false821:                                    ; preds = %cond.true787
  %540 = load %struct.sv*, %struct.sv** %right.addr, align 8
  %sv_u822 = getelementptr inbounds %struct.sv, %struct.sv* %540, i32 0, i32 3
  %svu_rv823 = bitcast %union.anon* %sv_u822 to %struct.sv**
  %541 = load %struct.sv*, %struct.sv** %svu_rv823, align 8
  %sv_any824 = getelementptr inbounds %struct.sv, %struct.sv* %541, i32 0, i32 0
  %542 = load i8*, i8** %sv_any824, align 8
  %543 = bitcast i8* %542 to %struct.xpvmg*
  %xmg_stash825 = getelementptr inbounds %struct.xpvmg, %struct.xpvmg* %543, i32 0, i32 0
  %544 = load %struct.hv*, %struct.hv** %xmg_stash825, align 8
  %sv_u826 = getelementptr inbounds %struct.hv, %struct.hv* %544, i32 0, i32 3
  %svu_hash827 = bitcast %union.anon.4* %sv_u826 to %struct.he***
  %545 = load %struct.he**, %struct.he*** %svu_hash827, align 8
  %546 = load %struct.sv*, %struct.sv** %right.addr, align 8
  %sv_u828 = getelementptr inbounds %struct.sv, %struct.sv* %546, i32 0, i32 3
  %svu_rv829 = bitcast %union.anon* %sv_u828 to %struct.sv**
  %547 = load %struct.sv*, %struct.sv** %svu_rv829, align 8
  %sv_any830 = getelementptr inbounds %struct.sv, %struct.sv* %547, i32 0, i32 0
  %548 = load i8*, i8** %sv_any830, align 8
  %549 = bitcast i8* %548 to %struct.xpvmg*
  %xmg_stash831 = getelementptr inbounds %struct.xpvmg, %struct.xpvmg* %549, i32 0, i32 0
  %550 = load %struct.hv*, %struct.hv** %xmg_stash831, align 8
  %sv_any832 = getelementptr inbounds %struct.hv, %struct.hv* %550, i32 0, i32 0
  %551 = load %struct.xpvhv*, %struct.xpvhv** %sv_any832, align 8
  %xhv_max833 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %551, i32 0, i32 3
  %552 = load i64, i64* %xhv_max833, align 8
  %add834 = add i64 %552, 1
  %arrayidx835 = getelementptr inbounds %struct.he*, %struct.he** %545, i64 %add834
  %553 = bitcast %struct.he** %arrayidx835 to %struct.xpvhv_aux*
  %xhv_name_u836 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %553, i32 0, i32 0
  %xhvnameu_name837 = bitcast %union._xhvnameu* %xhv_name_u836 to %struct.hek**
  %554 = load %struct.hek*, %struct.hek** %xhvnameu_name837, align 8
  br label %cond.end838

cond.end838:                                      ; preds = %cond.false821, %cond.true804
  %cond839 = phi %struct.hek* [ %539, %cond.true804 ], [ %554, %cond.false821 ]
  br label %cond.end841

cond.false840:                                    ; preds = %land.lhs.true769, %cond.true761
  br label %cond.end841

cond.end841:                                      ; preds = %cond.false840, %cond.end838
  %cond842 = phi %struct.hek* [ %cond839, %cond.end838 ], [ null, %cond.false840 ]
  %call843 = call %struct.sv* @Perl_newSVhek(%struct.hek* %cond842)
  %call844 = call %struct.sv* @Perl_sv_2mortal(%struct.sv* %call843)
  %555 = bitcast %struct.sv* %call844 to i8*
  br label %cond.end846

cond.false845:                                    ; preds = %land.lhs.true753, %land.lhs.true747, %cond.end742
  br label %cond.end846

cond.end846:                                      ; preds = %cond.false845, %cond.end841
  %cond847 = phi i8* [ %555, %cond.end841 ], [ bitcast (%struct.sv* @PL_sv_no to i8*), %cond.false845 ]
  %call848 = call %struct.sv* (i8*, ...) @Perl_newSVpvf(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.36, i64 0, i64 0), i8* %add.ptr, i8* %cond595, i8* %cond615, i8* %cond719, i8* %cond743, i8* %cond847)
  %call849 = call %struct.sv* @Perl_sv_2mortal(%struct.sv* %call848)
  store %struct.sv* %call849, %struct.sv** %msg, align 8
  %556 = load i32, i32* %use_default_op, align 4
  %tobool850 = icmp ne i32 %556, 0
  br i1 %tobool850, label %if.then851, label %if.else852

if.then851:                                       ; preds = %cond.end846
  br label %if.end853

if.else852:                                       ; preds = %cond.end846
  %557 = load %struct.sv*, %struct.sv** %msg, align 8
  %558 = bitcast %struct.sv* %557 to i8*
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.43, i64 0, i64 0), i8* %558)
  br label %if.end853

if.end853:                                        ; preds = %if.else852, %if.then851
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end854:                                        ; preds = %if.then565
  br label %if.end855

if.end855:                                        ; preds = %if.end854, %if.then559
  %559 = load i32, i32* %force_cpy, align 4
  %tobool856 = icmp ne i32 %559, 0
  br i1 %tobool856, label %lor.end859, label %lor.rhs857

lor.rhs857:                                       ; preds = %if.end855
  %560 = load i32, i32* %assign, align 4
  %tobool858 = icmp ne i32 %560, 0
  br label %lor.end859

lor.end859:                                       ; preds = %lor.rhs857, %if.end855
  %561 = phi i1 [ true, %if.end855 ], [ %tobool858, %lor.rhs857 ]
  %lor.ext860 = zext i1 %561 to i32
  store i32 %lor.ext860, i32* %force_cpy, align 4
  br label %if.end861

if.end861:                                        ; preds = %lor.end859, %if.end551
  br label %if.end862

if.end862:                                        ; preds = %if.end861, %if.then487
  br label %if.end863

if.end863:                                        ; preds = %if.end862, %if.end355
  br label %if.end864

if.end864:                                        ; preds = %if.end863, %if.then121
  %562 = load i32, i32* %method.addr, align 4
  switch i32 %562, label %sw.epilog882 [
    i32 6, label %sw.bb865
    i32 7, label %sw.bb870
    i32 30, label %sw.bb875
    i32 32, label %sw.bb875
    i32 34, label %sw.bb875
    i32 36, label %sw.bb875
    i32 38, label %sw.bb875
    i32 40, label %sw.bb875
    i32 42, label %sw.bb875
    i32 44, label %sw.bb875
    i32 68, label %sw.bb875
    i32 70, label %sw.bb875
    i32 46, label %sw.bb875
    i32 50, label %sw.bb875
    i32 54, label %sw.bb875
    i32 48, label %sw.bb875
    i32 52, label %sw.bb875
    i32 56, label %sw.bb875
    i32 12, label %sw.bb879
    i32 1, label %sw.bb880
    i32 2, label %sw.bb880
    i32 3, label %sw.bb880
    i32 4, label %sw.bb880
    i32 5, label %sw.bb880
    i32 8, label %sw.bb881
    i32 9, label %sw.bb881
    i32 10, label %sw.bb881
  ]

sw.bb865:                                         ; preds = %if.end864
  %563 = load i32, i32* %off, align 4
  %cmp866 = icmp eq i32 %563, 30
  br i1 %cmp866, label %if.then868, label %if.end869

if.then868:                                       ; preds = %sw.bb865
  store i32 1, i32* %force_scalar, align 4
  br label %if.end869

if.end869:                                        ; preds = %if.then868, %sw.bb865
  br label %sw.epilog882

sw.bb870:                                         ; preds = %if.end864
  %564 = load i32, i32* %off, align 4
  %cmp871 = icmp eq i32 %564, 32
  br i1 %cmp871, label %if.then873, label %if.end874

if.then873:                                       ; preds = %sw.bb870
  store i32 1, i32* %force_scalar, align 4
  br label %if.end874

if.end874:                                        ; preds = %if.then873, %sw.bb870
  br label %sw.epilog882

sw.bb875:                                         ; preds = %if.end864, %if.end864, %if.end864, %if.end864, %if.end864, %if.end864, %if.end864, %if.end864, %if.end864, %if.end864, %if.end864, %if.end864, %if.end864, %if.end864, %if.end864, %if.end864
  %565 = load i32, i32* %assign, align 4
  %tobool876 = icmp ne i32 %565, 0
  br i1 %tobool876, label %if.then877, label %if.end878

if.then877:                                       ; preds = %sw.bb875
  store i32 1, i32* %force_scalar, align 4
  br label %if.end878

if.end878:                                        ; preds = %if.then877, %sw.bb875
  br label %sw.epilog882

sw.bb879:                                         ; preds = %if.end864
  store i32 1, i32* %force_scalar, align 4
  br label %sw.epilog882

sw.bb880:                                         ; preds = %if.end864, %if.end864, %if.end864, %if.end864, %if.end864
  store i32 1, i32* %force_scalar, align 4
  br label %sw.epilog882

sw.bb881:                                         ; preds = %if.end864, %if.end864, %if.end864
  store i32 1, i32* %force_scalar, align 4
  br label %sw.epilog882

sw.epilog882:                                     ; preds = %if.end864, %sw.bb881, %sw.bb880, %sw.bb879, %if.end878, %if.end874, %if.end869
  %566 = load i32, i32* %lr, align 4
  %cmp883 = icmp eq i32 %566, -1
  br i1 %cmp883, label %land.lhs.true885, label %if.end924

land.lhs.true885:                                 ; preds = %sw.epilog882
  %567 = load i32, i32* %method.addr, align 4
  %568 = load i32, i32* %assignshift, align 4
  %add886 = add nsw i32 %567, %568
  %569 = load i32, i32* %off, align 4
  %cmp887 = icmp eq i32 %add886, %569
  br i1 %cmp887, label %land.lhs.true889, label %lor.lhs.false897

land.lhs.true889:                                 ; preds = %land.lhs.true885
  %570 = load i32, i32* %assign, align 4
  %tobool890 = icmp ne i32 %570, 0
  br i1 %tobool890, label %if.then899, label %lor.lhs.false891

lor.lhs.false891:                                 ; preds = %land.lhs.true889
  %571 = load i32, i32* %method.addr, align 4
  %cmp892 = icmp eq i32 %571, 6
  br i1 %cmp892, label %if.then899, label %lor.lhs.false894

lor.lhs.false894:                                 ; preds = %lor.lhs.false891
  %572 = load i32, i32* %method.addr, align 4
  %cmp895 = icmp eq i32 %572, 7
  br i1 %cmp895, label %if.then899, label %lor.lhs.false897

lor.lhs.false897:                                 ; preds = %lor.lhs.false894, %land.lhs.true885
  %573 = load i32, i32* %force_cpy, align 4
  %tobool898 = icmp ne i32 %573, 0
  br i1 %tobool898, label %if.then899, label %if.end924

if.then899:                                       ; preds = %lor.lhs.false897, %lor.lhs.false894, %lor.lhs.false891, %land.lhs.true889
  %574 = load %struct.sv*, %struct.sv** %left.addr, align 8
  %sv_u901 = getelementptr inbounds %struct.sv, %struct.sv* %574, i32 0, i32 3
  %svu_rv902 = bitcast %union.anon* %sv_u901 to %struct.sv**
  %575 = load %struct.sv*, %struct.sv** %svu_rv902, align 8
  store %struct.sv* %575, %struct.sv** %tmpRef900, align 8
  %576 = load %struct.sv*, %struct.sv** %tmpRef900, align 8
  %sv_refcnt = getelementptr inbounds %struct.sv, %struct.sv* %576, i32 0, i32 1
  %577 = load i32, i32* %sv_refcnt, align 8
  %cmp903 = icmp ugt i32 %577, 1
  br i1 %cmp903, label %land.lhs.true905, label %if.end923

land.lhs.true905:                                 ; preds = %if.then899
  %578 = load %struct.sv*, %struct.sv** %left.addr, align 8
  %call906 = call %struct.sv* @Perl_amagic_call(%struct.sv* %578, %struct.sv* @PL_sv_undef, i32 12, i32 9)
  store %struct.sv* %call906, %struct.sv** %rv_copy, align 8
  %tobool907 = icmp ne %struct.sv* %call906, null
  br i1 %tobool907, label %if.then908, label %if.end923

if.then908:                                       ; preds = %land.lhs.true905
  br label %do.body909

do.body909:                                       ; preds = %if.then908
  %579 = load %struct.sv*, %struct.sv** %rv_copy, align 8
  %580 = load %struct.sv*, %struct.sv** %left.addr, align 8
  %sv_u910 = getelementptr inbounds %struct.sv, %struct.sv* %580, i32 0, i32 3
  %svu_rv911 = bitcast %union.anon* %sv_u910 to %struct.sv**
  store %struct.sv* %579, %struct.sv** %svu_rv911, align 8
  br label %do.end912

do.end912:                                        ; preds = %do.body909
  br label %do.body913

do.body913:                                       ; preds = %do.end912
  %581 = load %struct.sv*, %struct.sv** %left.addr, align 8
  %sv_flags914 = getelementptr inbounds %struct.sv, %struct.sv* %581, i32 0, i32 2
  %582 = load i32, i32* %sv_flags914, align 4
  %and915 = and i32 %582, 4194304
  %tobool916 = icmp ne i32 %and915, 0
  br i1 %tobool916, label %cond.true917, label %cond.false918

cond.true917:                                     ; preds = %do.body913
  br i1 true, label %if.then919, label %if.end921

cond.false918:                                    ; preds = %do.body913
  br i1 false, label %if.then919, label %if.end921

if.then919:                                       ; preds = %cond.false918, %cond.true917
  %583 = load %struct.sv*, %struct.sv** %left.addr, align 8
  %call920 = call i32 @Perl_mg_set(%struct.sv* %583)
  br label %if.end921

if.end921:                                        ; preds = %if.then919, %cond.false918, %cond.true917
  br label %do.end922

do.end922:                                        ; preds = %if.end921
  %584 = load %struct.sv*, %struct.sv** %tmpRef900, align 8
  %585 = bitcast %struct.sv* %584 to i8*
  %586 = bitcast i8* %585 to %struct.sv*
  call void @S_SvREFCNT_dec_NN(%struct.sv* %586)
  br label %if.end923

if.end923:                                        ; preds = %do.end922, %land.lhs.true905, %if.then899
  br label %if.end924

if.end924:                                        ; preds = %if.end923, %lor.lhs.false897, %sw.epilog882
  %587 = load %struct.sv**, %struct.sv*** @PL_stack_sp, align 8
  store %struct.sv** %587, %struct.sv*** %sp, align 8
  %588 = load %struct.jmpenv*, %struct.jmpenv** @PL_top_env, align 8
  %je_mustcatch = getelementptr inbounds %struct.jmpenv, %struct.jmpenv* %588, i32 0, i32 3
  %589 = load i8, i8* %je_mustcatch, align 4
  %tobool925 = trunc i8 %589 to i1
  %frombool = zext i1 %tobool925 to i8
  store i8 %frombool, i8* %oldcatch, align 1
  %590 = load i32, i32* %force_scalar, align 4
  %tobool926 = icmp ne i32 %590, 0
  br i1 %tobool926, label %cond.true927, label %cond.false928

cond.true927:                                     ; preds = %if.end924
  br label %cond.end940

cond.false928:                                    ; preds = %if.end924
  %591 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_flags = getelementptr inbounds %struct.op, %struct.op* %591, i32 0, i32 5
  %592 = load i8, i8* %op_flags, align 2
  %conv929 = zext i8 %592 to i32
  %and930 = and i32 %conv929, 3
  %tobool931 = icmp ne i32 %and930, 0
  br i1 %tobool931, label %cond.true932, label %cond.false936

cond.true932:                                     ; preds = %cond.false928
  %593 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_flags933 = getelementptr inbounds %struct.op, %struct.op* %593, i32 0, i32 5
  %594 = load i8, i8* %op_flags933, align 2
  %conv934 = zext i8 %594 to i32
  %and935 = and i32 %conv934, 3
  br label %cond.end938

cond.false936:                                    ; preds = %cond.false928
  %call937 = call i32 @Perl_block_gimme()
  br label %cond.end938

cond.end938:                                      ; preds = %cond.false936, %cond.true932
  %cond939 = phi i32 [ %and935, %cond.true932 ], [ %call937, %cond.false936 ]
  br label %cond.end940

cond.end940:                                      ; preds = %cond.end938, %cond.true927
  %cond941 = phi i32 [ 2, %cond.true927 ], [ %cond939, %cond.end938 ]
  store i32 %cond941, i32* %gimme, align 4
  br label %do.body942

do.body942:                                       ; preds = %cond.end940
  %595 = load %struct.jmpenv*, %struct.jmpenv** @PL_top_env, align 8
  %je_mustcatch943 = getelementptr inbounds %struct.jmpenv, %struct.jmpenv* %595, i32 0, i32 3
  store i8 1, i8* %je_mustcatch943, align 4
  br label %do.end944

do.end944:                                        ; preds = %do.body942
  %596 = bitcast %struct.binop* %myop to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %596, i8 0, i64 56, i1 false)
  %597 = bitcast %struct.binop* %myop to %struct.op*
  %op_last = getelementptr inbounds %struct.binop, %struct.binop* %myop, i32 0, i32 8
  store %struct.op* %597, %struct.op** %op_last, align 8
  %op_next = getelementptr inbounds %struct.binop, %struct.binop* %myop, i32 0, i32 0
  store %struct.op* null, %struct.op** %op_next, align 8
  %op_flags945 = getelementptr inbounds %struct.binop, %struct.binop* %myop, i32 0, i32 5
  store i8 64, i8* %op_flags945, align 2
  %598 = load i32, i32* %gimme, align 4
  switch i32 %598, label %sw.default960 [
    i32 1, label %sw.bb946
    i32 3, label %sw.bb951
  ]

sw.bb946:                                         ; preds = %do.end944
  %op_flags947 = getelementptr inbounds %struct.binop, %struct.binop* %myop, i32 0, i32 5
  %599 = load i8, i8* %op_flags947, align 2
  %conv948 = zext i8 %599 to i32
  %or949 = or i32 %conv948, 1
  %conv950 = trunc i32 %or949 to i8
  store i8 %conv950, i8* %op_flags947, align 2
  br label %sw.epilog965

sw.bb951:                                         ; preds = %do.end944
  %600 = load i32, i32* %flags.addr, align 4
  %and952 = and i32 %600, 64
  %tobool953 = icmp ne i32 %and952, 0
  br i1 %tobool953, label %if.then954, label %if.end959

if.then954:                                       ; preds = %sw.bb951
  %op_flags955 = getelementptr inbounds %struct.binop, %struct.binop* %myop, i32 0, i32 5
  %601 = load i8, i8* %op_flags955, align 2
  %conv956 = zext i8 %601 to i32
  %or957 = or i32 %conv956, 3
  %conv958 = trunc i32 %or957 to i8
  store i8 %conv958, i8* %op_flags955, align 2
  br label %sw.epilog965

if.end959:                                        ; preds = %sw.bb951
  br label %sw.default960

sw.default960:                                    ; preds = %do.end944, %if.end959
  %op_flags961 = getelementptr inbounds %struct.binop, %struct.binop* %myop, i32 0, i32 5
  %602 = load i8, i8* %op_flags961, align 2
  %conv962 = zext i8 %602 to i32
  %or963 = or i32 %conv962, 2
  %conv964 = trunc i32 %or963 to i8
  store i8 %conv964, i8* %op_flags961, align 2
  br label %sw.epilog965

sw.epilog965:                                     ; preds = %sw.default960, %if.then954, %sw.bb946
  br label %do.body966

do.body966:                                       ; preds = %sw.epilog965
  %603 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_next = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %603, i32 0, i32 3
  %604 = load %struct.stackinfo*, %struct.stackinfo** %si_next, align 8
  store %struct.stackinfo* %604, %struct.stackinfo** %next, align 8
  %605 = load %struct.stackinfo*, %struct.stackinfo** %next, align 8
  %tobool967 = icmp ne %struct.stackinfo* %605, null
  br i1 %tobool967, label %if.end971, label %if.then968

if.then968:                                       ; preds = %do.body966
  %call969 = call %struct.stackinfo* @Perl_new_stackinfo(i32 32, i32 22)
  store %struct.stackinfo* %call969, %struct.stackinfo** %next, align 8
  %606 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %607 = load %struct.stackinfo*, %struct.stackinfo** %next, align 8
  %si_prev = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %607, i32 0, i32 2
  store %struct.stackinfo* %606, %struct.stackinfo** %si_prev, align 8
  %608 = load %struct.stackinfo*, %struct.stackinfo** %next, align 8
  %609 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_next970 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %609, i32 0, i32 3
  store %struct.stackinfo* %608, %struct.stackinfo** %si_next970, align 8
  br label %if.end971

if.end971:                                        ; preds = %if.then968, %do.body966
  %610 = load %struct.stackinfo*, %struct.stackinfo** %next, align 8
  %si_type = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %610, i32 0, i32 6
  store i32 5, i32* %si_type, align 8
  %611 = load %struct.stackinfo*, %struct.stackinfo** %next, align 8
  %si_cxix = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %611, i32 0, i32 4
  store i32 -1, i32* %si_cxix, align 8
  %612 = load %struct.stackinfo*, %struct.stackinfo** %next, align 8
  %si_stack = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %612, i32 0, i32 0
  %613 = load %struct.av*, %struct.av** %si_stack, align 8
  %sv_any972 = getelementptr inbounds %struct.av, %struct.av* %613, i32 0, i32 0
  %614 = load %struct.xpvav*, %struct.xpvav** %sv_any972, align 8
  %xav_fill = getelementptr inbounds %struct.xpvav, %struct.xpvav* %614, i32 0, i32 2
  store i64 0, i64* %xav_fill, align 8
  br label %do.body973

do.body973:                                       ; preds = %if.end971
  %615 = load %struct.sv**, %struct.sv*** %sp, align 8
  %616 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %sub.ptr.lhs.cast = ptrtoint %struct.sv** %615 to i64
  %sub.ptr.rhs.cast = ptrtoint %struct.sv** %616 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8
  %617 = load %struct.av*, %struct.av** @PL_curstack, align 8
  %sv_any974 = getelementptr inbounds %struct.av, %struct.av* %617, i32 0, i32 0
  %618 = load %struct.xpvav*, %struct.xpvav** %sv_any974, align 8
  %xav_fill975 = getelementptr inbounds %struct.xpvav, %struct.xpvav* %618, i32 0, i32 2
  store i64 %sub.ptr.div, i64* %xav_fill975, align 8
  %619 = load %struct.stackinfo*, %struct.stackinfo** %next, align 8
  %si_stack976 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %619, i32 0, i32 0
  %620 = load %struct.av*, %struct.av** %si_stack976, align 8
  %sv_u977 = getelementptr inbounds %struct.av, %struct.av* %620, i32 0, i32 3
  %svu_array = bitcast %union.anon.3* %sv_u977 to %struct.sv***
  %621 = load %struct.sv**, %struct.sv*** %svu_array, align 8
  store %struct.sv** %621, %struct.sv*** @PL_stack_base, align 8
  %622 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %623 = load %struct.stackinfo*, %struct.stackinfo** %next, align 8
  %si_stack978 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %623, i32 0, i32 0
  %624 = load %struct.av*, %struct.av** %si_stack978, align 8
  %sv_any979 = getelementptr inbounds %struct.av, %struct.av* %624, i32 0, i32 0
  %625 = load %struct.xpvav*, %struct.xpvav** %sv_any979, align 8
  %xav_max = getelementptr inbounds %struct.xpvav, %struct.xpvav* %625, i32 0, i32 3
  %626 = load i64, i64* %xav_max, align 8
  %add.ptr980 = getelementptr inbounds %struct.sv*, %struct.sv** %622, i64 %626
  store %struct.sv** %add.ptr980, %struct.sv*** @PL_stack_max, align 8
  %627 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %628 = load %struct.stackinfo*, %struct.stackinfo** %next, align 8
  %si_stack981 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %628, i32 0, i32 0
  %629 = load %struct.av*, %struct.av** %si_stack981, align 8
  %sv_any982 = getelementptr inbounds %struct.av, %struct.av* %629, i32 0, i32 0
  %630 = load %struct.xpvav*, %struct.xpvav** %sv_any982, align 8
  %xav_fill983 = getelementptr inbounds %struct.xpvav, %struct.xpvav* %630, i32 0, i32 2
  %631 = load i64, i64* %xav_fill983, align 8
  %add.ptr984 = getelementptr inbounds %struct.sv*, %struct.sv** %627, i64 %631
  store %struct.sv** %add.ptr984, %struct.sv*** @PL_stack_sp, align 8
  store %struct.sv** %add.ptr984, %struct.sv*** %sp, align 8
  %632 = load %struct.stackinfo*, %struct.stackinfo** %next, align 8
  %si_stack985 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %632, i32 0, i32 0
  %633 = load %struct.av*, %struct.av** %si_stack985, align 8
  store %struct.av* %633, %struct.av** @PL_curstack, align 8
  br label %do.end986

do.end986:                                        ; preds = %do.body973
  %634 = load %struct.stackinfo*, %struct.stackinfo** %next, align 8
  store %struct.stackinfo* %634, %struct.stackinfo** @PL_curstackinfo, align 8
  br label %do.end987

do.end987:                                        ; preds = %do.end986
  call void @Perl_push_scope()
  %635 = load %struct.op*, %struct.op** @PL_op, align 8
  %636 = bitcast %struct.op* %635 to i8*
  call void @Perl_save_pushptr(i8* %636, i32 18)
  %637 = bitcast %struct.binop* %myop to %struct.op*
  store %struct.op* %637, %struct.op** @PL_op, align 8
  %638 = load i32, i32* @PL_perldb, align 4
  %and988 = and i32 %638, 1
  %tobool989 = icmp ne i32 %and988, 0
  br i1 %tobool989, label %land.lhs.true990, label %if.end997

land.lhs.true990:                                 ; preds = %do.end987
  %639 = load %struct.hv*, %struct.hv** @PL_curstash, align 8
  %640 = load %struct.hv*, %struct.hv** @PL_debstash, align 8
  %cmp991 = icmp ne %struct.hv* %639, %640
  br i1 %cmp991, label %if.then993, label %if.end997

if.then993:                                       ; preds = %land.lhs.true990
  %641 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_private = getelementptr inbounds %struct.op, %struct.op* %641, i32 0, i32 6
  %642 = load i8, i8* %op_private, align 1
  %conv994 = zext i8 %642 to i32
  %or995 = or i32 %conv994, 64
  %conv996 = trunc i32 %or995 to i8
  store i8 %conv996, i8* %op_private, align 1
  br label %if.end997

if.end997:                                        ; preds = %if.then993, %land.lhs.true990, %do.end987
  %call998 = call %struct.op* @Perl_pp_pushmark()
  br label %do.body999

do.body999:                                       ; preds = %if.end997
  %643 = load %struct.sv**, %struct.sv*** @PL_stack_max, align 8
  %644 = load %struct.sv**, %struct.sv*** %sp, align 8
  %sub.ptr.lhs.cast1000 = ptrtoint %struct.sv** %643 to i64
  %sub.ptr.rhs.cast1001 = ptrtoint %struct.sv** %644 to i64
  %sub.ptr.sub1002 = sub i64 %sub.ptr.lhs.cast1000, %sub.ptr.rhs.cast1001
  %sub.ptr.div1003 = sdiv exact i64 %sub.ptr.sub1002, 8
  %645 = load i32, i32* %notfound, align 4
  %add1004 = add nsw i32 %645, 5
  %conv1005 = sext i32 %add1004 to i64
  %cmp1006 = icmp slt i64 %sub.ptr.div1003, %conv1005
  br i1 %cmp1006, label %cond.true1008, label %cond.false1009

cond.true1008:                                    ; preds = %do.body999
  br i1 true, label %if.then1010, label %if.end1014

cond.false1009:                                   ; preds = %do.body999
  br i1 false, label %if.then1010, label %if.end1014

if.then1010:                                      ; preds = %cond.false1009, %cond.true1008
  %646 = load %struct.sv**, %struct.sv*** %sp, align 8
  %647 = load %struct.sv**, %struct.sv*** %sp, align 8
  %648 = load i32, i32* %notfound, align 4
  %add1011 = add nsw i32 %648, 5
  %conv1012 = sext i32 %add1011 to i64
  %call1013 = call %struct.sv** @Perl_stack_grow(%struct.sv** %646, %struct.sv** %647, i64 %conv1012)
  store %struct.sv** %call1013, %struct.sv*** %sp, align 8
  %649 = load %struct.sv**, %struct.sv*** %sp, align 8
  br label %if.end1014

if.end1014:                                       ; preds = %if.then1010, %cond.false1009, %cond.true1008
  br label %do.end1015

do.end1015:                                       ; preds = %if.end1014
  %650 = load i32, i32* %lr, align 4
  %cmp1016 = icmp sgt i32 %650, 0
  br i1 %cmp1016, label %cond.true1018, label %cond.false1019

cond.true1018:                                    ; preds = %do.end1015
  %651 = load %struct.sv*, %struct.sv** %right.addr, align 8
  br label %cond.end1020

cond.false1019:                                   ; preds = %do.end1015
  %652 = load %struct.sv*, %struct.sv** %left.addr, align 8
  br label %cond.end1020

cond.end1020:                                     ; preds = %cond.false1019, %cond.true1018
  %cond1021 = phi %struct.sv* [ %651, %cond.true1018 ], [ %652, %cond.false1019 ]
  %653 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr = getelementptr inbounds %struct.sv*, %struct.sv** %653, i32 1
  store %struct.sv** %incdec.ptr, %struct.sv*** %sp, align 8
  store %struct.sv* %cond1021, %struct.sv** %incdec.ptr, align 8
  %654 = load i32, i32* %lr, align 4
  %cmp1022 = icmp sgt i32 %654, 0
  br i1 %cmp1022, label %cond.true1024, label %cond.false1025

cond.true1024:                                    ; preds = %cond.end1020
  %655 = load %struct.sv*, %struct.sv** %left.addr, align 8
  br label %cond.end1026

cond.false1025:                                   ; preds = %cond.end1020
  %656 = load %struct.sv*, %struct.sv** %right.addr, align 8
  br label %cond.end1026

cond.end1026:                                     ; preds = %cond.false1025, %cond.true1024
  %cond1027 = phi %struct.sv* [ %655, %cond.true1024 ], [ %656, %cond.false1025 ]
  %657 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr1028 = getelementptr inbounds %struct.sv*, %struct.sv** %657, i32 1
  store %struct.sv** %incdec.ptr1028, %struct.sv*** %sp, align 8
  store %struct.sv* %cond1027, %struct.sv** %incdec.ptr1028, align 8
  %658 = load i32, i32* %lr, align 4
  %cmp1029 = icmp sgt i32 %658, 0
  br i1 %cmp1029, label %cond.true1031, label %cond.false1032

cond.true1031:                                    ; preds = %cond.end1026
  br label %cond.end1035

cond.false1032:                                   ; preds = %cond.end1026
  %659 = load i32, i32* %assign, align 4
  %tobool1033 = icmp ne i32 %659, 0
  %660 = zext i1 %tobool1033 to i64
  %cond1034 = select i1 %tobool1033, %struct.sv* @PL_sv_undef, %struct.sv* @PL_sv_no
  br label %cond.end1035

cond.end1035:                                     ; preds = %cond.false1032, %cond.true1031
  %cond1036 = phi %struct.sv* [ @PL_sv_yes, %cond.true1031 ], [ %cond1034, %cond.false1032 ]
  %661 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr1037 = getelementptr inbounds %struct.sv*, %struct.sv** %661, i32 1
  store %struct.sv** %incdec.ptr1037, %struct.sv*** %sp, align 8
  store %struct.sv* %cond1036, %struct.sv** %incdec.ptr1037, align 8
  %662 = load i32, i32* %notfound, align 4
  %tobool1038 = icmp ne i32 %662, 0
  br i1 %tobool1038, label %if.then1039, label %if.else1051

if.then1039:                                      ; preds = %cond.end1035
  %663 = load i32, i32* %method.addr, align 4
  %664 = load i32, i32* %assignshift, align 4
  %add1040 = add nsw i32 %663, %664
  %idxprom1041 = sext i32 %add1040 to i64
  %arrayidx1042 = getelementptr inbounds [75 x i8*], [75 x i8*]* @PL_AMG_names, i64 0, i64 %idxprom1041
  %665 = load i8*, i8** %arrayidx1042, align 8
  %add.ptr1043 = getelementptr inbounds i8, i8* %665, i64 1
  %666 = load i32, i32* %method.addr, align 4
  %667 = load i32, i32* %assignshift, align 4
  %add1044 = add nsw i32 %666, %667
  %idxprom1045 = sext i32 %add1044 to i64
  %arrayidx1046 = getelementptr inbounds [75 x i8], [75 x i8]* @PL_AMG_namelens, i64 0, i64 %idxprom1045
  %668 = load i8, i8* %arrayidx1046, align 1
  %conv1047 = zext i8 %668 to i32
  %sub = sub nsw i32 %conv1047, 1
  %conv1048 = sext i32 %sub to i64
  %call1049 = call %struct.sv* @Perl_newSVpvn_flags(i8* %add.ptr1043, i64 %conv1048, i32 524288)
  %669 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr1050 = getelementptr inbounds %struct.sv*, %struct.sv** %669, i32 1
  store %struct.sv** %incdec.ptr1050, %struct.sv*** %sp, align 8
  store %struct.sv* %call1049, %struct.sv** %incdec.ptr1050, align 8
  br label %if.end1057

if.else1051:                                      ; preds = %cond.end1035
  %670 = load i32, i32* %flags.addr, align 4
  %and1052 = and i32 %670, 128
  %tobool1053 = icmp ne i32 %and1052, 0
  br i1 %tobool1053, label %if.then1054, label %if.end1056

if.then1054:                                      ; preds = %if.else1051
  %671 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr1055 = getelementptr inbounds %struct.sv*, %struct.sv** %671, i32 1
  store %struct.sv** %incdec.ptr1055, %struct.sv*** %sp, align 8
  store %struct.sv* @PL_sv_undef, %struct.sv** %incdec.ptr1055, align 8
  br label %if.end1056

if.end1056:                                       ; preds = %if.then1054, %if.else1051
  br label %if.end1057

if.end1057:                                       ; preds = %if.end1056, %if.then1039
  %672 = load i32, i32* %flags.addr, align 4
  %and1058 = and i32 %672, 128
  %tobool1059 = icmp ne i32 %and1058, 0
  br i1 %tobool1059, label %if.then1060, label %if.end1062

if.then1060:                                      ; preds = %if.end1057
  %673 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr1061 = getelementptr inbounds %struct.sv*, %struct.sv** %673, i32 1
  store %struct.sv** %incdec.ptr1061, %struct.sv*** %sp, align 8
  store %struct.sv* @PL_sv_yes, %struct.sv** %incdec.ptr1061, align 8
  br label %if.end1062

if.end1062:                                       ; preds = %if.then1060, %if.end1057
  %674 = load %struct.cv*, %struct.cv** %cv, align 8
  %675 = bitcast %struct.cv* %674 to i8*
  %676 = bitcast i8* %675 to %struct.sv*
  %677 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr1063 = getelementptr inbounds %struct.sv*, %struct.sv** %677, i32 1
  store %struct.sv** %incdec.ptr1063, %struct.sv*** %sp, align 8
  store %struct.sv* %676, %struct.sv** %incdec.ptr1063, align 8
  %678 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %678, %struct.sv*** @PL_stack_sp, align 8
  %679 = load i32*, i32** @PL_markstack_ptr, align 8
  %680 = load i32, i32* %679, align 4
  store i32 %680, i32* %oldmark, align 4
  %681 = load %struct.op* ()*, %struct.op* ()** getelementptr inbounds ([0 x %struct.op* ()*], [0 x %struct.op* ()*]* @PL_ppaddr, i64 0, i64 185), align 8
  %call1064 = call %struct.op* %681()
  store %struct.op* %call1064, %struct.op** @PL_op, align 8
  %tobool1065 = icmp ne %struct.op* %call1064, null
  br i1 %tobool1065, label %if.then1066, label %if.end1068

if.then1066:                                      ; preds = %if.end1062
  %682 = load i32 ()*, i32 ()** @PL_runops, align 8
  %call1067 = call i32 %682()
  br label %if.end1068

if.end1068:                                       ; preds = %if.then1066, %if.end1062
  call void @Perl_pop_scope()
  %683 = load %struct.sv**, %struct.sv*** @PL_stack_sp, align 8
  store %struct.sv** %683, %struct.sv*** %sp, align 8
  %684 = load %struct.sv**, %struct.sv*** %sp, align 8
  %685 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %686 = load i32, i32* %oldmark, align 4
  %idx.ext = sext i32 %686 to i64
  %add.ptr1069 = getelementptr inbounds %struct.sv*, %struct.sv** %685, i64 %idx.ext
  %sub.ptr.lhs.cast1070 = ptrtoint %struct.sv** %684 to i64
  %sub.ptr.rhs.cast1071 = ptrtoint %struct.sv** %add.ptr1069 to i64
  %sub.ptr.sub1072 = sub i64 %sub.ptr.lhs.cast1070, %sub.ptr.rhs.cast1071
  %sub.ptr.div1073 = sdiv exact i64 %sub.ptr.sub1072, 8
  %conv1074 = trunc i64 %sub.ptr.div1073 to i32
  store i32 %conv1074, i32* %nret, align 4
  %687 = load i32, i32* %gimme, align 4
  switch i32 %687, label %sw.default1090 [
    i32 1, label %sw.bb1075
    i32 3, label %sw.bb1078
  ]

sw.bb1075:                                        ; preds = %if.end1068
  store %struct.sv* @PL_sv_undef, %struct.sv** %res, align 8
  %688 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %689 = load i32, i32* %oldmark, align 4
  %idx.ext1076 = sext i32 %689 to i64
  %add.ptr1077 = getelementptr inbounds %struct.sv*, %struct.sv** %688, i64 %idx.ext1076
  store %struct.sv** %add.ptr1077, %struct.sv*** %sp, align 8
  br label %sw.epilog1092

sw.bb1078:                                        ; preds = %if.end1068
  %690 = load i32, i32* %flags.addr, align 4
  %and1079 = and i32 %690, 64
  %tobool1080 = icmp ne i32 %and1079, 0
  br i1 %tobool1080, label %if.then1081, label %if.end1089

if.then1081:                                      ; preds = %sw.bb1078
  %call1082 = call %struct.sv* @Perl_newSV_type(i32 11)
  %691 = bitcast %struct.sv* %call1082 to i8*
  %692 = bitcast i8* %691 to %struct.av*
  %693 = bitcast %struct.av* %692 to %struct.sv*
  %call1083 = call %struct.sv* @Perl_sv_2mortal(%struct.sv* %693)
  store %struct.sv* %call1083, %struct.sv** %res, align 8
  %694 = load %struct.sv*, %struct.sv** %res, align 8
  %695 = bitcast %struct.sv* %694 to %struct.av*
  %696 = load i32, i32* %nret, align 4
  %conv1084 = sext i32 %696 to i64
  call void @Perl_av_extend(%struct.av* %695, i64 %conv1084)
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.then1081
  %697 = load i32, i32* %nret, align 4
  %dec = add nsw i32 %697, -1
  store i32 %dec, i32* %nret, align 4
  %tobool1085 = icmp ne i32 %697, 0
  br i1 %tobool1085, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %698 = load %struct.sv*, %struct.sv** %res, align 8
  %699 = bitcast %struct.sv* %698 to %struct.av*
  %700 = load i32, i32* %nret, align 4
  %conv1086 = sext i32 %700 to i64
  %701 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr1087 = getelementptr inbounds %struct.sv*, %struct.sv** %701, i32 -1
  store %struct.sv** %incdec.ptr1087, %struct.sv*** %sp, align 8
  %702 = load %struct.sv*, %struct.sv** %701, align 8
  %call1088 = call %struct.sv** @Perl_av_store(%struct.av* %699, i64 %conv1086, %struct.sv* %702)
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %sw.epilog1092

if.end1089:                                       ; preds = %sw.bb1078
  br label %sw.default1090

sw.default1090:                                   ; preds = %if.end1068, %if.end1089
  %703 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr1091 = getelementptr inbounds %struct.sv*, %struct.sv** %703, i32 -1
  store %struct.sv** %incdec.ptr1091, %struct.sv*** %sp, align 8
  %704 = load %struct.sv*, %struct.sv** %703, align 8
  store %struct.sv* %704, %struct.sv** %res, align 8
  br label %sw.epilog1092

sw.epilog1092:                                    ; preds = %sw.default1090, %while.end, %sw.bb1075
  %705 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %705, %struct.sv*** @PL_stack_sp, align 8
  br label %do.body1093

do.body1093:                                      ; preds = %sw.epilog1092
  %706 = load %struct.sv**, %struct.sv*** @PL_stack_sp, align 8
  store %struct.sv** %706, %struct.sv*** %sp1094, align 8
  %707 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_prev1095 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %707, i32 0, i32 2
  %708 = load %struct.stackinfo*, %struct.stackinfo** %si_prev1095, align 8
  store %struct.stackinfo* %708, %struct.stackinfo** %prev, align 8
  %709 = load %struct.stackinfo*, %struct.stackinfo** %prev, align 8
  %tobool1096 = icmp ne %struct.stackinfo* %709, null
  br i1 %tobool1096, label %if.end1098, label %if.then1097

if.then1097:                                      ; preds = %do.body1093
  call void @Perl_croak_popstack()
  br label %if.end1098

if.end1098:                                       ; preds = %if.then1097, %do.body1093
  br label %do.body1099

do.body1099:                                      ; preds = %if.end1098
  %710 = load %struct.sv**, %struct.sv*** %sp1094, align 8
  %711 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %sub.ptr.lhs.cast1100 = ptrtoint %struct.sv** %710 to i64
  %sub.ptr.rhs.cast1101 = ptrtoint %struct.sv** %711 to i64
  %sub.ptr.sub1102 = sub i64 %sub.ptr.lhs.cast1100, %sub.ptr.rhs.cast1101
  %sub.ptr.div1103 = sdiv exact i64 %sub.ptr.sub1102, 8
  %712 = load %struct.av*, %struct.av** @PL_curstack, align 8
  %sv_any1104 = getelementptr inbounds %struct.av, %struct.av* %712, i32 0, i32 0
  %713 = load %struct.xpvav*, %struct.xpvav** %sv_any1104, align 8
  %xav_fill1105 = getelementptr inbounds %struct.xpvav, %struct.xpvav* %713, i32 0, i32 2
  store i64 %sub.ptr.div1103, i64* %xav_fill1105, align 8
  %714 = load %struct.stackinfo*, %struct.stackinfo** %prev, align 8
  %si_stack1106 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %714, i32 0, i32 0
  %715 = load %struct.av*, %struct.av** %si_stack1106, align 8
  %sv_u1107 = getelementptr inbounds %struct.av, %struct.av* %715, i32 0, i32 3
  %svu_array1108 = bitcast %union.anon.3* %sv_u1107 to %struct.sv***
  %716 = load %struct.sv**, %struct.sv*** %svu_array1108, align 8
  store %struct.sv** %716, %struct.sv*** @PL_stack_base, align 8
  %717 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %718 = load %struct.stackinfo*, %struct.stackinfo** %prev, align 8
  %si_stack1109 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %718, i32 0, i32 0
  %719 = load %struct.av*, %struct.av** %si_stack1109, align 8
  %sv_any1110 = getelementptr inbounds %struct.av, %struct.av* %719, i32 0, i32 0
  %720 = load %struct.xpvav*, %struct.xpvav** %sv_any1110, align 8
  %xav_max1111 = getelementptr inbounds %struct.xpvav, %struct.xpvav* %720, i32 0, i32 3
  %721 = load i64, i64* %xav_max1111, align 8
  %add.ptr1112 = getelementptr inbounds %struct.sv*, %struct.sv** %717, i64 %721
  store %struct.sv** %add.ptr1112, %struct.sv*** @PL_stack_max, align 8
  %722 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %723 = load %struct.stackinfo*, %struct.stackinfo** %prev, align 8
  %si_stack1113 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %723, i32 0, i32 0
  %724 = load %struct.av*, %struct.av** %si_stack1113, align 8
  %sv_any1114 = getelementptr inbounds %struct.av, %struct.av* %724, i32 0, i32 0
  %725 = load %struct.xpvav*, %struct.xpvav** %sv_any1114, align 8
  %xav_fill1115 = getelementptr inbounds %struct.xpvav, %struct.xpvav* %725, i32 0, i32 2
  %726 = load i64, i64* %xav_fill1115, align 8
  %add.ptr1116 = getelementptr inbounds %struct.sv*, %struct.sv** %722, i64 %726
  store %struct.sv** %add.ptr1116, %struct.sv*** @PL_stack_sp, align 8
  store %struct.sv** %add.ptr1116, %struct.sv*** %sp1094, align 8
  %727 = load %struct.stackinfo*, %struct.stackinfo** %prev, align 8
  %si_stack1117 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %727, i32 0, i32 0
  %728 = load %struct.av*, %struct.av** %si_stack1117, align 8
  store %struct.av* %728, %struct.av** @PL_curstack, align 8
  br label %do.end1118

do.end1118:                                       ; preds = %do.body1099
  %729 = load %struct.stackinfo*, %struct.stackinfo** %prev, align 8
  store %struct.stackinfo* %729, %struct.stackinfo** @PL_curstackinfo, align 8
  br label %do.end1119

do.end1119:                                       ; preds = %do.end1118
  br label %do.body1120

do.body1120:                                      ; preds = %do.end1119
  %730 = load i8, i8* %oldcatch, align 1
  %tobool1121 = trunc i8 %730 to i1
  %731 = load %struct.jmpenv*, %struct.jmpenv** @PL_top_env, align 8
  %je_mustcatch1122 = getelementptr inbounds %struct.jmpenv, %struct.jmpenv* %731, i32 0, i32 3
  %frombool1123 = zext i1 %tobool1121 to i8
  store i8 %frombool1123, i8* %je_mustcatch1122, align 4
  br label %do.end1124

do.end1124:                                       ; preds = %do.body1120
  %732 = load i32, i32* %postpr, align 4
  %tobool1125 = icmp ne i32 %732, 0
  br i1 %tobool1125, label %if.then1126, label %if.else1335

if.then1126:                                      ; preds = %do.end1124
  %733 = load i32, i32* %method.addr, align 4
  switch i32 %733, label %sw.default1331 [
    i32 18, label %sw.bb1127
    i32 24, label %sw.bb1127
    i32 17, label %sw.bb1142
    i32 23, label %sw.bb1142
    i32 20, label %sw.bb1157
    i32 26, label %sw.bb1157
    i32 19, label %sw.bb1172
    i32 25, label %sw.bb1172
    i32 21, label %sw.bb1187
    i32 27, label %sw.bb1187
    i32 22, label %sw.bb1202
    i32 28, label %sw.bb1202
    i32 6, label %sw.bb1217
    i32 7, label %sw.bb1217
    i32 11, label %sw.bb1226
  ]

sw.bb1127:                                        ; preds = %if.then1126, %if.then1126
  %734 = load %struct.sv*, %struct.sv** %res, align 8
  %sv_flags1128 = getelementptr inbounds %struct.sv, %struct.sv* %734, i32 0, i32 2
  %735 = load i32, i32* %sv_flags1128, align 4
  %and1129 = and i32 %735, 2097408
  %cmp1130 = icmp eq i32 %and1129, 256
  br i1 %cmp1130, label %cond.true1132, label %cond.false1136

cond.true1132:                                    ; preds = %sw.bb1127
  %736 = load %struct.sv*, %struct.sv** %res, align 8
  %sv_any1133 = getelementptr inbounds %struct.sv, %struct.sv* %736, i32 0, i32 0
  %737 = load i8*, i8** %sv_any1133, align 8
  %738 = bitcast i8* %737 to %struct.xpviv*
  %xiv_u1134 = getelementptr inbounds %struct.xpviv, %struct.xpviv* %738, i32 0, i32 4
  %xivu_iv1135 = bitcast %union._xivu* %xiv_u1134 to i64*
  %739 = load i64, i64* %xivu_iv1135, align 8
  br label %cond.end1138

cond.false1136:                                   ; preds = %sw.bb1127
  %740 = load %struct.sv*, %struct.sv** %res, align 8
  %call1137 = call i64 @Perl_sv_2iv_flags(%struct.sv* %740, i32 2)
  br label %cond.end1138

cond.end1138:                                     ; preds = %cond.false1136, %cond.true1132
  %cond1139 = phi i64 [ %739, %cond.true1132 ], [ %call1137, %cond.false1136 ]
  %cmp1140 = icmp sle i64 %cond1139, 0
  %conv1141 = zext i1 %cmp1140 to i32
  store i32 %conv1141, i32* %ans, align 4
  br label %sw.epilog1332

sw.bb1142:                                        ; preds = %if.then1126, %if.then1126
  %741 = load %struct.sv*, %struct.sv** %res, align 8
  %sv_flags1143 = getelementptr inbounds %struct.sv, %struct.sv* %741, i32 0, i32 2
  %742 = load i32, i32* %sv_flags1143, align 4
  %and1144 = and i32 %742, 2097408
  %cmp1145 = icmp eq i32 %and1144, 256
  br i1 %cmp1145, label %cond.true1147, label %cond.false1151

cond.true1147:                                    ; preds = %sw.bb1142
  %743 = load %struct.sv*, %struct.sv** %res, align 8
  %sv_any1148 = getelementptr inbounds %struct.sv, %struct.sv* %743, i32 0, i32 0
  %744 = load i8*, i8** %sv_any1148, align 8
  %745 = bitcast i8* %744 to %struct.xpviv*
  %xiv_u1149 = getelementptr inbounds %struct.xpviv, %struct.xpviv* %745, i32 0, i32 4
  %xivu_iv1150 = bitcast %union._xivu* %xiv_u1149 to i64*
  %746 = load i64, i64* %xivu_iv1150, align 8
  br label %cond.end1153

cond.false1151:                                   ; preds = %sw.bb1142
  %747 = load %struct.sv*, %struct.sv** %res, align 8
  %call1152 = call i64 @Perl_sv_2iv_flags(%struct.sv* %747, i32 2)
  br label %cond.end1153

cond.end1153:                                     ; preds = %cond.false1151, %cond.true1147
  %cond1154 = phi i64 [ %746, %cond.true1147 ], [ %call1152, %cond.false1151 ]
  %cmp1155 = icmp slt i64 %cond1154, 0
  %conv1156 = zext i1 %cmp1155 to i32
  store i32 %conv1156, i32* %ans, align 4
  br label %sw.epilog1332

sw.bb1157:                                        ; preds = %if.then1126, %if.then1126
  %748 = load %struct.sv*, %struct.sv** %res, align 8
  %sv_flags1158 = getelementptr inbounds %struct.sv, %struct.sv* %748, i32 0, i32 2
  %749 = load i32, i32* %sv_flags1158, align 4
  %and1159 = and i32 %749, 2097408
  %cmp1160 = icmp eq i32 %and1159, 256
  br i1 %cmp1160, label %cond.true1162, label %cond.false1166

cond.true1162:                                    ; preds = %sw.bb1157
  %750 = load %struct.sv*, %struct.sv** %res, align 8
  %sv_any1163 = getelementptr inbounds %struct.sv, %struct.sv* %750, i32 0, i32 0
  %751 = load i8*, i8** %sv_any1163, align 8
  %752 = bitcast i8* %751 to %struct.xpviv*
  %xiv_u1164 = getelementptr inbounds %struct.xpviv, %struct.xpviv* %752, i32 0, i32 4
  %xivu_iv1165 = bitcast %union._xivu* %xiv_u1164 to i64*
  %753 = load i64, i64* %xivu_iv1165, align 8
  br label %cond.end1168

cond.false1166:                                   ; preds = %sw.bb1157
  %754 = load %struct.sv*, %struct.sv** %res, align 8
  %call1167 = call i64 @Perl_sv_2iv_flags(%struct.sv* %754, i32 2)
  br label %cond.end1168

cond.end1168:                                     ; preds = %cond.false1166, %cond.true1162
  %cond1169 = phi i64 [ %753, %cond.true1162 ], [ %call1167, %cond.false1166 ]
  %cmp1170 = icmp sge i64 %cond1169, 0
  %conv1171 = zext i1 %cmp1170 to i32
  store i32 %conv1171, i32* %ans, align 4
  br label %sw.epilog1332

sw.bb1172:                                        ; preds = %if.then1126, %if.then1126
  %755 = load %struct.sv*, %struct.sv** %res, align 8
  %sv_flags1173 = getelementptr inbounds %struct.sv, %struct.sv* %755, i32 0, i32 2
  %756 = load i32, i32* %sv_flags1173, align 4
  %and1174 = and i32 %756, 2097408
  %cmp1175 = icmp eq i32 %and1174, 256
  br i1 %cmp1175, label %cond.true1177, label %cond.false1181

cond.true1177:                                    ; preds = %sw.bb1172
  %757 = load %struct.sv*, %struct.sv** %res, align 8
  %sv_any1178 = getelementptr inbounds %struct.sv, %struct.sv* %757, i32 0, i32 0
  %758 = load i8*, i8** %sv_any1178, align 8
  %759 = bitcast i8* %758 to %struct.xpviv*
  %xiv_u1179 = getelementptr inbounds %struct.xpviv, %struct.xpviv* %759, i32 0, i32 4
  %xivu_iv1180 = bitcast %union._xivu* %xiv_u1179 to i64*
  %760 = load i64, i64* %xivu_iv1180, align 8
  br label %cond.end1183

cond.false1181:                                   ; preds = %sw.bb1172
  %761 = load %struct.sv*, %struct.sv** %res, align 8
  %call1182 = call i64 @Perl_sv_2iv_flags(%struct.sv* %761, i32 2)
  br label %cond.end1183

cond.end1183:                                     ; preds = %cond.false1181, %cond.true1177
  %cond1184 = phi i64 [ %760, %cond.true1177 ], [ %call1182, %cond.false1181 ]
  %cmp1185 = icmp sgt i64 %cond1184, 0
  %conv1186 = zext i1 %cmp1185 to i32
  store i32 %conv1186, i32* %ans, align 4
  br label %sw.epilog1332

sw.bb1187:                                        ; preds = %if.then1126, %if.then1126
  %762 = load %struct.sv*, %struct.sv** %res, align 8
  %sv_flags1188 = getelementptr inbounds %struct.sv, %struct.sv* %762, i32 0, i32 2
  %763 = load i32, i32* %sv_flags1188, align 4
  %and1189 = and i32 %763, 2097408
  %cmp1190 = icmp eq i32 %and1189, 256
  br i1 %cmp1190, label %cond.true1192, label %cond.false1196

cond.true1192:                                    ; preds = %sw.bb1187
  %764 = load %struct.sv*, %struct.sv** %res, align 8
  %sv_any1193 = getelementptr inbounds %struct.sv, %struct.sv* %764, i32 0, i32 0
  %765 = load i8*, i8** %sv_any1193, align 8
  %766 = bitcast i8* %765 to %struct.xpviv*
  %xiv_u1194 = getelementptr inbounds %struct.xpviv, %struct.xpviv* %766, i32 0, i32 4
  %xivu_iv1195 = bitcast %union._xivu* %xiv_u1194 to i64*
  %767 = load i64, i64* %xivu_iv1195, align 8
  br label %cond.end1198

cond.false1196:                                   ; preds = %sw.bb1187
  %768 = load %struct.sv*, %struct.sv** %res, align 8
  %call1197 = call i64 @Perl_sv_2iv_flags(%struct.sv* %768, i32 2)
  br label %cond.end1198

cond.end1198:                                     ; preds = %cond.false1196, %cond.true1192
  %cond1199 = phi i64 [ %767, %cond.true1192 ], [ %call1197, %cond.false1196 ]
  %cmp1200 = icmp eq i64 %cond1199, 0
  %conv1201 = zext i1 %cmp1200 to i32
  store i32 %conv1201, i32* %ans, align 4
  br label %sw.epilog1332

sw.bb1202:                                        ; preds = %if.then1126, %if.then1126
  %769 = load %struct.sv*, %struct.sv** %res, align 8
  %sv_flags1203 = getelementptr inbounds %struct.sv, %struct.sv* %769, i32 0, i32 2
  %770 = load i32, i32* %sv_flags1203, align 4
  %and1204 = and i32 %770, 2097408
  %cmp1205 = icmp eq i32 %and1204, 256
  br i1 %cmp1205, label %cond.true1207, label %cond.false1211

cond.true1207:                                    ; preds = %sw.bb1202
  %771 = load %struct.sv*, %struct.sv** %res, align 8
  %sv_any1208 = getelementptr inbounds %struct.sv, %struct.sv* %771, i32 0, i32 0
  %772 = load i8*, i8** %sv_any1208, align 8
  %773 = bitcast i8* %772 to %struct.xpviv*
  %xiv_u1209 = getelementptr inbounds %struct.xpviv, %struct.xpviv* %773, i32 0, i32 4
  %xivu_iv1210 = bitcast %union._xivu* %xiv_u1209 to i64*
  %774 = load i64, i64* %xivu_iv1210, align 8
  br label %cond.end1213

cond.false1211:                                   ; preds = %sw.bb1202
  %775 = load %struct.sv*, %struct.sv** %res, align 8
  %call1212 = call i64 @Perl_sv_2iv_flags(%struct.sv* %775, i32 2)
  br label %cond.end1213

cond.end1213:                                     ; preds = %cond.false1211, %cond.true1207
  %cond1214 = phi i64 [ %774, %cond.true1207 ], [ %call1212, %cond.false1211 ]
  %cmp1215 = icmp ne i64 %cond1214, 0
  %conv1216 = zext i1 %cmp1215 to i32
  store i32 %conv1216, i32* %ans, align 4
  br label %sw.epilog1332

sw.bb1217:                                        ; preds = %if.then1126, %if.then1126
  br label %do.body1218

do.body1218:                                      ; preds = %sw.bb1217
  %776 = load %struct.sv*, %struct.sv** %left.addr, align 8
  %777 = load %struct.sv*, %struct.sv** %res, align 8
  %cmp1219 = icmp ne %struct.sv* %776, %777
  br i1 %cmp1219, label %cond.true1221, label %cond.false1222

cond.true1221:                                    ; preds = %do.body1218
  br i1 true, label %if.then1223, label %if.end1224

cond.false1222:                                   ; preds = %do.body1218
  br i1 false, label %if.then1223, label %if.end1224

if.then1223:                                      ; preds = %cond.false1222, %cond.true1221
  %778 = load %struct.sv*, %struct.sv** %left.addr, align 8
  %779 = load %struct.sv*, %struct.sv** %res, align 8
  call void @Perl_sv_setsv_flags(%struct.sv* %778, %struct.sv* %779, i32 1538)
  br label %if.end1224

if.end1224:                                       ; preds = %if.then1223, %cond.false1222, %cond.true1221
  br label %do.end1225

do.end1225:                                       ; preds = %if.end1224
  %780 = load %struct.sv*, %struct.sv** %left.addr, align 8
  store %struct.sv* %780, %struct.sv** %retval, align 8
  br label %return

sw.bb1226:                                        ; preds = %if.then1126
  %781 = load %struct.sv*, %struct.sv** %res, align 8
  %tobool1227 = icmp ne %struct.sv* %781, null
  br i1 %tobool1227, label %cond.true1228, label %cond.false1229

cond.true1228:                                    ; preds = %sw.bb1226
  br i1 true, label %land.rhs1230, label %land.end1329

cond.false1229:                                   ; preds = %sw.bb1226
  br i1 false, label %land.rhs1230, label %land.end1329

land.rhs1230:                                     ; preds = %cond.false1229, %cond.true1228
  %782 = load %struct.sv*, %struct.sv** %res, align 8
  %sv_flags1231 = getelementptr inbounds %struct.sv, %struct.sv* %782, i32 0, i32 2
  %783 = load i32, i32* %sv_flags1231, align 4
  %and1232 = and i32 %783, 2097152
  %tobool1233 = icmp ne i32 %and1232, 0
  br i1 %tobool1233, label %cond.true1234, label %cond.false1235

cond.true1234:                                    ; preds = %land.rhs1230
  br i1 true, label %cond.true1236, label %cond.false1239

cond.false1235:                                   ; preds = %land.rhs1230
  br i1 false, label %cond.true1236, label %cond.false1239

cond.true1236:                                    ; preds = %cond.false1235, %cond.true1234
  %784 = load %struct.sv*, %struct.sv** %res, align 8
  %call1237 = call zeroext i1 @Perl_sv_2bool_flags(%struct.sv* %784, i32 2)
  %conv1238 = zext i1 %call1237 to i32
  br label %cond.end1326

cond.false1239:                                   ; preds = %cond.false1235, %cond.true1234
  %785 = load %struct.sv*, %struct.sv** %res, align 8
  %sv_flags1240 = getelementptr inbounds %struct.sv, %struct.sv* %785, i32 0, i32 2
  %786 = load i32, i32* %sv_flags1240, align 4
  %and1241 = and i32 %786, 65280
  %tobool1242 = icmp ne i32 %and1241, 0
  br i1 %tobool1242, label %cond.false1254, label %lor.lhs.false1243

lor.lhs.false1243:                                ; preds = %cond.false1239
  %787 = load %struct.sv*, %struct.sv** %res, align 8
  %sv_flags1244 = getelementptr inbounds %struct.sv, %struct.sv* %787, i32 0, i32 2
  %788 = load i32, i32* %sv_flags1244, align 4
  %and1245 = and i32 %788, 255
  %cmp1246 = icmp eq i32 %and1245, 8
  br i1 %cmp1246, label %cond.false1254, label %lor.lhs.false1248

lor.lhs.false1248:                                ; preds = %lor.lhs.false1243
  %789 = load %struct.sv*, %struct.sv** %res, align 8
  %sv_flags1249 = getelementptr inbounds %struct.sv, %struct.sv* %789, i32 0, i32 2
  %790 = load i32, i32* %sv_flags1249, align 4
  %and1250 = and i32 %790, 16826623
  %cmp1251 = icmp eq i32 %and1250, 16777226
  br i1 %cmp1251, label %cond.false1254, label %cond.true1253

cond.true1253:                                    ; preds = %lor.lhs.false1248
  br label %cond.end1324

cond.false1254:                                   ; preds = %lor.lhs.false1248, %lor.lhs.false1243, %cond.false1239
  %791 = load %struct.sv*, %struct.sv** %res, align 8
  %sv_flags1255 = getelementptr inbounds %struct.sv, %struct.sv* %791, i32 0, i32 2
  %792 = load i32, i32* %sv_flags1255, align 4
  %and1256 = and i32 %792, 1024
  %tobool1257 = icmp ne i32 %and1256, 0
  br i1 %tobool1257, label %cond.true1258, label %cond.false1282

cond.true1258:                                    ; preds = %cond.false1254
  %793 = load %struct.sv*, %struct.sv** %res, align 8
  %sv_any1259 = getelementptr inbounds %struct.sv, %struct.sv* %793, i32 0, i32 0
  %794 = load i8*, i8** %sv_any1259, align 8
  %795 = bitcast i8* %794 to %struct.xpv*
  %tobool1260 = icmp ne %struct.xpv* %795, null
  br i1 %tobool1260, label %land.rhs1261, label %land.end1280

land.rhs1261:                                     ; preds = %cond.true1258
  %796 = load %struct.sv*, %struct.sv** %res, align 8
  %sv_any1262 = getelementptr inbounds %struct.sv, %struct.sv* %796, i32 0, i32 0
  %797 = load i8*, i8** %sv_any1262, align 8
  %798 = bitcast i8* %797 to %struct.xpv*
  %xpv_cur1263 = getelementptr inbounds %struct.xpv, %struct.xpv* %798, i32 0, i32 2
  %799 = load i64, i64* %xpv_cur1263, align 8
  %cmp1264 = icmp ugt i64 %799, 1
  br i1 %cmp1264, label %lor.end1278, label %lor.rhs1266

lor.rhs1266:                                      ; preds = %land.rhs1261
  %800 = load %struct.sv*, %struct.sv** %res, align 8
  %sv_any1267 = getelementptr inbounds %struct.sv, %struct.sv* %800, i32 0, i32 0
  %801 = load i8*, i8** %sv_any1267, align 8
  %802 = bitcast i8* %801 to %struct.xpv*
  %xpv_cur1268 = getelementptr inbounds %struct.xpv, %struct.xpv* %802, i32 0, i32 2
  %803 = load i64, i64* %xpv_cur1268, align 8
  %tobool1269 = icmp ne i64 %803, 0
  br i1 %tobool1269, label %land.rhs1270, label %land.end1276

land.rhs1270:                                     ; preds = %lor.rhs1266
  %804 = load %struct.sv*, %struct.sv** %res, align 8
  %sv_u1271 = getelementptr inbounds %struct.sv, %struct.sv* %804, i32 0, i32 3
  %svu_pv1272 = bitcast %union.anon* %sv_u1271 to i8**
  %805 = load i8*, i8** %svu_pv1272, align 8
  %806 = load i8, i8* %805, align 1
  %conv1273 = sext i8 %806 to i32
  %cmp1274 = icmp ne i32 %conv1273, 48
  br label %land.end1276

land.end1276:                                     ; preds = %land.rhs1270, %lor.rhs1266
  %807 = phi i1 [ false, %lor.rhs1266 ], [ %cmp1274, %land.rhs1270 ]
  br label %lor.end1278

lor.end1278:                                      ; preds = %land.end1276, %land.rhs1261
  %808 = phi i1 [ true, %land.rhs1261 ], [ %807, %land.end1276 ]
  br label %land.end1280

land.end1280:                                     ; preds = %lor.end1278, %cond.true1258
  %809 = phi i1 [ false, %cond.true1258 ], [ %808, %lor.end1278 ]
  %land.ext1281 = zext i1 %809 to i32
  br label %cond.end1322

cond.false1282:                                   ; preds = %cond.false1254
  %810 = load %struct.sv*, %struct.sv** %res, align 8
  %sv_flags1283 = getelementptr inbounds %struct.sv, %struct.sv* %810, i32 0, i32 2
  %811 = load i32, i32* %sv_flags1283, align 4
  %and1284 = and i32 %811, 768
  %tobool1285 = icmp ne i32 %and1284, 0
  br i1 %tobool1285, label %cond.true1286, label %cond.false1317

cond.true1286:                                    ; preds = %cond.false1282
  %812 = load %struct.sv*, %struct.sv** %res, align 8
  %sv_flags1287 = getelementptr inbounds %struct.sv, %struct.sv* %812, i32 0, i32 2
  %813 = load i32, i32* %sv_flags1287, align 4
  %and1288 = and i32 %813, 256
  %tobool1289 = icmp ne i32 %and1288, 0
  br i1 %tobool1289, label %land.lhs.true1290, label %lor.rhs1296

land.lhs.true1290:                                ; preds = %cond.true1286
  %814 = load %struct.sv*, %struct.sv** %res, align 8
  %sv_any1291 = getelementptr inbounds %struct.sv, %struct.sv* %814, i32 0, i32 0
  %815 = load i8*, i8** %sv_any1291, align 8
  %816 = bitcast i8* %815 to %struct.xpviv*
  %xiv_u1292 = getelementptr inbounds %struct.xpviv, %struct.xpviv* %816, i32 0, i32 4
  %xivu_iv1293 = bitcast %union._xivu* %xiv_u1292 to i64*
  %817 = load i64, i64* %xivu_iv1293, align 8
  %cmp1294 = icmp ne i64 %817, 0
  br i1 %cmp1294, label %lor.end1315, label %lor.rhs1296

lor.rhs1296:                                      ; preds = %land.lhs.true1290, %cond.true1286
  %818 = load %struct.sv*, %struct.sv** %res, align 8
  %sv_flags1297 = getelementptr inbounds %struct.sv, %struct.sv* %818, i32 0, i32 2
  %819 = load i32, i32* %sv_flags1297, align 4
  %and1298 = and i32 %819, 512
  %tobool1299 = icmp ne i32 %and1298, 0
  br i1 %tobool1299, label %land.rhs1300, label %land.end1313

land.rhs1300:                                     ; preds = %lor.rhs1296
  %820 = load %struct.sv*, %struct.sv** %res, align 8
  %sv_any1301 = getelementptr inbounds %struct.sv, %struct.sv* %820, i32 0, i32 0
  %821 = load i8*, i8** %sv_any1301, align 8
  %822 = bitcast i8* %821 to %struct.xpvnv*
  %xnv_u1302 = getelementptr inbounds %struct.xpvnv, %struct.xpvnv* %822, i32 0, i32 5
  %xnv_nv1303 = bitcast %union._xnvu* %xnv_u1302 to double*
  %823 = load double, double* %xnv_nv1303, align 8
  %cmp1304 = fcmp uno double %823, %823
  br i1 %cmp1304, label %lor.end1311, label %lor.rhs1305

lor.rhs1305:                                      ; preds = %land.rhs1300
  %824 = load %struct.sv*, %struct.sv** %res, align 8
  %sv_any1306 = getelementptr inbounds %struct.sv, %struct.sv* %824, i32 0, i32 0
  %825 = load i8*, i8** %sv_any1306, align 8
  %826 = bitcast i8* %825 to %struct.xpvnv*
  %xnv_u1307 = getelementptr inbounds %struct.xpvnv, %struct.xpvnv* %826, i32 0, i32 5
  %xnv_nv1308 = bitcast %union._xnvu* %xnv_u1307 to double*
  %827 = load double, double* %xnv_nv1308, align 8
  %cmp1309 = fcmp une double %827, 0.000000e+00
  br label %lor.end1311

lor.end1311:                                      ; preds = %lor.rhs1305, %land.rhs1300
  %828 = phi i1 [ true, %land.rhs1300 ], [ %cmp1309, %lor.rhs1305 ]
  br label %land.end1313

land.end1313:                                     ; preds = %lor.end1311, %lor.rhs1296
  %829 = phi i1 [ false, %lor.rhs1296 ], [ %828, %lor.end1311 ]
  br label %lor.end1315

lor.end1315:                                      ; preds = %land.end1313, %land.lhs.true1290
  %830 = phi i1 [ true, %land.lhs.true1290 ], [ %829, %land.end1313 ]
  %lor.ext1316 = zext i1 %830 to i32
  br label %cond.end1320

cond.false1317:                                   ; preds = %cond.false1282
  %831 = load %struct.sv*, %struct.sv** %res, align 8
  %call1318 = call zeroext i1 @Perl_sv_2bool_flags(%struct.sv* %831, i32 0)
  %conv1319 = zext i1 %call1318 to i32
  br label %cond.end1320

cond.end1320:                                     ; preds = %cond.false1317, %lor.end1315
  %cond1321 = phi i32 [ %lor.ext1316, %lor.end1315 ], [ %conv1319, %cond.false1317 ]
  br label %cond.end1322

cond.end1322:                                     ; preds = %cond.end1320, %land.end1280
  %cond1323 = phi i32 [ %land.ext1281, %land.end1280 ], [ %cond1321, %cond.end1320 ]
  br label %cond.end1324

cond.end1324:                                     ; preds = %cond.end1322, %cond.true1253
  %cond1325 = phi i32 [ 0, %cond.true1253 ], [ %cond1323, %cond.end1322 ]
  br label %cond.end1326

cond.end1326:                                     ; preds = %cond.end1324, %cond.true1236
  %cond1327 = phi i32 [ %conv1238, %cond.true1236 ], [ %cond1325, %cond.end1324 ]
  %tobool1328 = icmp ne i32 %cond1327, 0
  br label %land.end1329

land.end1329:                                     ; preds = %cond.end1326, %cond.false1229, %cond.true1228
  %832 = phi i1 [ false, %cond.false1229 ], [ false, %cond.true1228 ], [ %tobool1328, %cond.end1326 ]
  %lnot = xor i1 %832, true
  %lnot.ext = zext i1 %lnot to i32
  store i32 %lnot.ext, i32* %ans, align 4
  br label %sw.epilog1332

sw.default1331:                                   ; preds = %if.then1126
  store i32 0, i32* %ans, align 4
  br label %sw.epilog1332

sw.epilog1332:                                    ; preds = %sw.default1331, %land.end1329, %cond.end1213, %cond.end1198, %cond.end1183, %cond.end1168, %cond.end1153, %cond.end1138
  %833 = load i32, i32* %ans, align 4
  %tobool1333 = icmp ne i32 %833, 0
  %834 = zext i1 %tobool1333 to i64
  %cond1334 = select i1 %tobool1333, %struct.sv* @PL_sv_yes, %struct.sv* @PL_sv_no
  store %struct.sv* %cond1334, %struct.sv** %retval, align 8
  br label %return

if.else1335:                                      ; preds = %do.end1124
  %835 = load i32, i32* %method.addr, align 4
  %cmp1336 = icmp eq i32 %835, 12
  br i1 %cmp1336, label %if.then1338, label %if.else1347

if.then1338:                                      ; preds = %if.else1335
  %836 = load %struct.sv*, %struct.sv** %res, align 8
  %sv_flags1339 = getelementptr inbounds %struct.sv, %struct.sv* %836, i32 0, i32 2
  %837 = load i32, i32* %sv_flags1339, align 4
  %and1340 = and i32 %837, 2048
  %tobool1341 = icmp ne i32 %and1340, 0
  br i1 %tobool1341, label %if.end1343, label %if.then1342

if.then1342:                                      ; preds = %if.then1338
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.44, i64 0, i64 0))
  br label %if.end1343

if.end1343:                                       ; preds = %if.then1342, %if.then1338
  %838 = load %struct.sv*, %struct.sv** %res, align 8
  %sv_u1344 = getelementptr inbounds %struct.sv, %struct.sv* %838, i32 0, i32 3
  %svu_rv1345 = bitcast %union.anon* %sv_u1344 to %struct.sv**
  %839 = load %struct.sv*, %struct.sv** %svu_rv1345, align 8
  %840 = bitcast %struct.sv* %839 to i8*
  %841 = bitcast i8* %840 to %struct.sv*
  %call1346 = call %struct.sv* @S_SvREFCNT_inc(%struct.sv* %841)
  store %struct.sv* %call1346, %struct.sv** %retval, align 8
  br label %return

if.else1347:                                      ; preds = %if.else1335
  %842 = load %struct.sv*, %struct.sv** %res, align 8
  store %struct.sv* %842, %struct.sv** %retval, align 8
  br label %return

return:                                           ; preds = %if.else1347, %if.end1343, %sw.epilog1332, %do.end1225, %if.end853, %if.then584, %sw.bb553, %if.then517, %sw.bb352, %sw.bb351, %if.else341, %do.end, %if.then3
  %843 = load %struct.sv*, %struct.sv** %retval, align 8
  ret %struct.sv* %843
}

declare dso_local i32 @Perl_mg_set(%struct.sv*) #1

declare dso_local %struct.sv* @Perl_sv_2num(%struct.sv*) #1

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i1 @Perl_try_amagic_bin(i32 %method, i32 %flags) #0 {
entry:
  %retval = alloca i1, align 1
  %method.addr = alloca i32, align 4
  %flags.addr = alloca i32, align 4
  %sp = alloca %struct.sv**, align 8
  %left = alloca %struct.sv*, align 8
  %right = alloca %struct.sv*, align 8
  %tmpsv = alloca %struct.sv*, align 8
  %targ = alloca %struct.sv*, align 8
  %left96 = alloca %struct.sv*, align 8
  store i32 %method, i32* %method.addr, align 4
  store i32 %flags, i32* %flags.addr, align 4
  %0 = load %struct.sv**, %struct.sv*** @PL_stack_sp, align 8
  store %struct.sv** %0, %struct.sv*** %sp, align 8
  %1 = load %struct.sv**, %struct.sv*** %sp, align 8
  %add.ptr = getelementptr inbounds %struct.sv*, %struct.sv** %1, i64 -1
  %2 = load %struct.sv*, %struct.sv** %add.ptr, align 8
  store %struct.sv* %2, %struct.sv** %left, align 8
  %3 = load %struct.sv**, %struct.sv*** %sp, align 8
  %4 = load %struct.sv*, %struct.sv** %3, align 8
  store %struct.sv* %4, %struct.sv** %right, align 8
  %5 = load %struct.sv*, %struct.sv** %left, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %5, i32 0, i32 2
  %6 = load i32, i32* %sv_flags, align 4
  %and = and i32 %6, 2097152
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  br i1 true, label %land.rhs, label %land.end

cond.false:                                       ; preds = %entry
  br i1 false, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %cond.false, %cond.true
  %7 = load %struct.sv*, %struct.sv** %left, align 8
  %call = call i32 @Perl_mg_get(%struct.sv* %7)
  %tobool1 = icmp ne i32 %call, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %cond.false, %cond.true
  %8 = phi i1 [ false, %cond.false ], [ false, %cond.true ], [ %tobool1, %land.rhs ]
  %land.ext = zext i1 %8 to i32
  %9 = load %struct.sv*, %struct.sv** %left, align 8
  %10 = load %struct.sv*, %struct.sv** %right, align 8
  %cmp = icmp ne %struct.sv* %9, %10
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %land.end
  %11 = load %struct.sv*, %struct.sv** %right, align 8
  %sv_flags2 = getelementptr inbounds %struct.sv, %struct.sv* %11, i32 0, i32 2
  %12 = load i32, i32* %sv_flags2, align 4
  %and3 = and i32 %12, 2097152
  %tobool4 = icmp ne i32 %and3, 0
  br i1 %tobool4, label %cond.true5, label %cond.false6

cond.true5:                                       ; preds = %if.then
  br i1 true, label %land.rhs7, label %land.end10

cond.false6:                                      ; preds = %if.then
  br i1 false, label %land.rhs7, label %land.end10

land.rhs7:                                        ; preds = %cond.false6, %cond.true5
  %13 = load %struct.sv*, %struct.sv** %right, align 8
  %call8 = call i32 @Perl_mg_get(%struct.sv* %13)
  %tobool9 = icmp ne i32 %call8, 0
  br label %land.end10

land.end10:                                       ; preds = %land.rhs7, %cond.false6, %cond.true5
  %14 = phi i1 [ false, %cond.false6 ], [ false, %cond.true5 ], [ %tobool9, %land.rhs7 ]
  %land.ext11 = zext i1 %14 to i32
  br label %if.end

if.end:                                           ; preds = %land.end10, %land.end
  %15 = load %struct.sv*, %struct.sv** %left, align 8
  %sv_flags12 = getelementptr inbounds %struct.sv, %struct.sv* %15, i32 0, i32 2
  %16 = load i32, i32* %sv_flags12, align 4
  %and13 = and i32 %16, 2048
  %tobool14 = icmp ne i32 %and13, 0
  br i1 %tobool14, label %land.lhs.true, label %lor.lhs.false

land.lhs.true:                                    ; preds = %if.end
  %17 = load %struct.sv*, %struct.sv** %left, align 8
  %sv_u = getelementptr inbounds %struct.sv, %struct.sv* %17, i32 0, i32 3
  %svu_rv = bitcast %union.anon* %sv_u to %struct.sv**
  %18 = load %struct.sv*, %struct.sv** %svu_rv, align 8
  %sv_flags15 = getelementptr inbounds %struct.sv, %struct.sv* %18, i32 0, i32 2
  %19 = load i32, i32* %sv_flags15, align 4
  %and16 = and i32 %19, 1048576
  %tobool17 = icmp ne i32 %and16, 0
  br i1 %tobool17, label %land.lhs.true18, label %lor.lhs.false

land.lhs.true18:                                  ; preds = %land.lhs.true
  %20 = load %struct.sv*, %struct.sv** %left, align 8
  %sv_u19 = getelementptr inbounds %struct.sv, %struct.sv* %20, i32 0, i32 3
  %svu_rv20 = bitcast %union.anon* %sv_u19 to %struct.sv**
  %21 = load %struct.sv*, %struct.sv** %svu_rv20, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %21, i32 0, i32 0
  %22 = load i8*, i8** %sv_any, align 8
  %23 = bitcast i8* %22 to %struct.xpvmg*
  %xmg_stash = getelementptr inbounds %struct.xpvmg, %struct.xpvmg* %23, i32 0, i32 0
  %24 = load %struct.hv*, %struct.hv** %xmg_stash, align 8
  %sv_flags21 = getelementptr inbounds %struct.hv, %struct.hv* %24, i32 0, i32 2
  %25 = load i32, i32* %sv_flags21, align 4
  %and22 = and i32 %25, 268435456
  %tobool23 = icmp ne i32 %and22, 0
  br i1 %tobool23, label %if.then41, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true18, %land.lhs.true, %if.end
  %26 = load %struct.sv*, %struct.sv** %right, align 8
  %sv_flags24 = getelementptr inbounds %struct.sv, %struct.sv* %26, i32 0, i32 2
  %27 = load i32, i32* %sv_flags24, align 4
  %and25 = and i32 %27, 2048
  %tobool26 = icmp ne i32 %and25, 0
  br i1 %tobool26, label %land.lhs.true27, label %if.end88

land.lhs.true27:                                  ; preds = %lor.lhs.false
  %28 = load %struct.sv*, %struct.sv** %right, align 8
  %sv_u28 = getelementptr inbounds %struct.sv, %struct.sv* %28, i32 0, i32 3
  %svu_rv29 = bitcast %union.anon* %sv_u28 to %struct.sv**
  %29 = load %struct.sv*, %struct.sv** %svu_rv29, align 8
  %sv_flags30 = getelementptr inbounds %struct.sv, %struct.sv* %29, i32 0, i32 2
  %30 = load i32, i32* %sv_flags30, align 4
  %and31 = and i32 %30, 1048576
  %tobool32 = icmp ne i32 %and31, 0
  br i1 %tobool32, label %land.lhs.true33, label %if.end88

land.lhs.true33:                                  ; preds = %land.lhs.true27
  %31 = load %struct.sv*, %struct.sv** %right, align 8
  %sv_u34 = getelementptr inbounds %struct.sv, %struct.sv* %31, i32 0, i32 3
  %svu_rv35 = bitcast %union.anon* %sv_u34 to %struct.sv**
  %32 = load %struct.sv*, %struct.sv** %svu_rv35, align 8
  %sv_any36 = getelementptr inbounds %struct.sv, %struct.sv* %32, i32 0, i32 0
  %33 = load i8*, i8** %sv_any36, align 8
  %34 = bitcast i8* %33 to %struct.xpvmg*
  %xmg_stash37 = getelementptr inbounds %struct.xpvmg, %struct.xpvmg* %34, i32 0, i32 0
  %35 = load %struct.hv*, %struct.hv** %xmg_stash37, align 8
  %sv_flags38 = getelementptr inbounds %struct.hv, %struct.hv* %35, i32 0, i32 2
  %36 = load i32, i32* %sv_flags38, align 4
  %and39 = and i32 %36, 268435456
  %tobool40 = icmp ne i32 %and39, 0
  br i1 %tobool40, label %if.then41, label %if.end88

if.then41:                                        ; preds = %land.lhs.true33, %land.lhs.true18
  %37 = load %struct.sv*, %struct.sv** %left, align 8
  %38 = load %struct.sv*, %struct.sv** %right, align 8
  %39 = load i32, i32* %method.addr, align 4
  %40 = load i32, i32* %flags.addr, align 4
  %and42 = and i32 %40, 4
  %tobool43 = icmp ne i32 %and42, 0
  br i1 %tobool43, label %land.rhs44, label %land.end47

land.rhs44:                                       ; preds = %if.then41
  %41 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_flags = getelementptr inbounds %struct.op, %struct.op* %41, i32 0, i32 5
  %42 = load i8, i8* %op_flags, align 2
  %conv = zext i8 %42 to i32
  %and45 = and i32 %conv, 64
  %tobool46 = icmp ne i32 %and45, 0
  br label %land.end47

land.end47:                                       ; preds = %land.rhs44, %if.then41
  %43 = phi i1 [ false, %if.then41 ], [ %tobool46, %land.rhs44 ]
  %44 = zext i1 %43 to i64
  %cond = select i1 %43, i32 4, i32 0
  %45 = load i32, i32* %flags.addr, align 4
  %and49 = and i32 %45, 128
  %or = or i32 %cond, %and49
  %call50 = call %struct.sv* @Perl_amagic_call(%struct.sv* %37, %struct.sv* %38, i32 %39, i32 %or)
  store %struct.sv* %call50, %struct.sv** %tmpsv, align 8
  %46 = load %struct.sv*, %struct.sv** %tmpsv, align 8
  %tobool51 = icmp ne %struct.sv* %46, null
  br i1 %tobool51, label %if.then52, label %if.end87

if.then52:                                        ; preds = %land.end47
  %47 = load i32, i32* %flags.addr, align 4
  %and53 = and i32 %47, 32
  %tobool54 = icmp ne i32 %and53, 0
  br i1 %tobool54, label %if.then55, label %if.else

if.then55:                                        ; preds = %if.then52
  %48 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr = getelementptr inbounds %struct.sv*, %struct.sv** %48, i32 -1
  store %struct.sv** %incdec.ptr, %struct.sv*** %sp, align 8
  %49 = load %struct.sv*, %struct.sv** %48, align 8
  %50 = load %struct.sv*, %struct.sv** %tmpsv, align 8
  %51 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv* %50, %struct.sv** %51, align 8
  br label %if.end86

if.else:                                          ; preds = %if.then52
  %52 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_flags56 = getelementptr inbounds %struct.op, %struct.op* %52, i32 0, i32 5
  %53 = load i8, i8* %op_flags56, align 2
  %conv57 = zext i8 %53 to i32
  %and58 = and i32 %conv57, 64
  %tobool59 = icmp ne i32 %and58, 0
  br i1 %tobool59, label %cond.true60, label %cond.false61

cond.true60:                                      ; preds = %if.else
  %54 = load %struct.sv**, %struct.sv*** %sp, align 8
  %arrayidx = getelementptr inbounds %struct.sv*, %struct.sv** %54, i64 -1
  %55 = load %struct.sv*, %struct.sv** %arrayidx, align 8
  br label %cond.end

cond.false61:                                     ; preds = %if.else
  %56 = load %struct.sv**, %struct.sv*** @PL_curpad, align 8
  %57 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_targ = getelementptr inbounds %struct.op, %struct.op* %57, i32 0, i32 3
  %58 = load i64, i64* %op_targ, align 8
  %arrayidx62 = getelementptr inbounds %struct.sv*, %struct.sv** %56, i64 %58
  %59 = load %struct.sv*, %struct.sv** %arrayidx62, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false61, %cond.true60
  %cond63 = phi %struct.sv* [ %55, %cond.true60 ], [ %59, %cond.false61 ]
  store %struct.sv* %cond63, %struct.sv** %targ, align 8
  %60 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr64 = getelementptr inbounds %struct.sv*, %struct.sv** %60, i32 -1
  store %struct.sv** %incdec.ptr64, %struct.sv*** %sp, align 8
  %61 = load %struct.sv*, %struct.sv** %60, align 8
  %62 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_flags65 = getelementptr inbounds %struct.op, %struct.op* %62, i32 0, i32 5
  %63 = load i8, i8* %op_flags65, align 2
  %conv66 = zext i8 %63 to i32
  %and67 = and i32 %conv66, 64
  %tobool68 = icmp ne i32 %and67, 0
  br i1 %tobool68, label %if.then73, label %lor.lhs.false69

lor.lhs.false69:                                  ; preds = %cond.end
  %64 = load %struct.sv*, %struct.sv** %targ, align 8
  %sv_flags70 = getelementptr inbounds %struct.sv, %struct.sv* %64, i32 0, i32 2
  %65 = load i32, i32* %sv_flags70, align 4
  %and71 = and i32 %65, 131072
  %tobool72 = icmp ne i32 %and71, 0
  br i1 %tobool72, label %if.else84, label %if.then73

if.then73:                                        ; preds = %lor.lhs.false69, %cond.end
  %66 = load %struct.sv*, %struct.sv** %targ, align 8
  %67 = load %struct.sv*, %struct.sv** %tmpsv, align 8
  call void @Perl_sv_setsv_flags(%struct.sv* %66, %struct.sv* %67, i32 1538)
  br label %do.body

do.body:                                          ; preds = %if.then73
  br label %do.body74

do.body74:                                        ; preds = %do.body
  %68 = load %struct.sv*, %struct.sv** %targ, align 8
  %sv_flags75 = getelementptr inbounds %struct.sv, %struct.sv* %68, i32 0, i32 2
  %69 = load i32, i32* %sv_flags75, align 4
  %and76 = and i32 %69, 4194304
  %tobool77 = icmp ne i32 %and76, 0
  br i1 %tobool77, label %cond.true78, label %cond.false79

cond.true78:                                      ; preds = %do.body74
  br i1 true, label %if.then80, label %if.end82

cond.false79:                                     ; preds = %do.body74
  br i1 false, label %if.then80, label %if.end82

if.then80:                                        ; preds = %cond.false79, %cond.true78
  %70 = load %struct.sv*, %struct.sv** %targ, align 8
  %call81 = call i32 @Perl_mg_set(%struct.sv* %70)
  br label %if.end82

if.end82:                                         ; preds = %if.then80, %cond.false79, %cond.true78
  br label %do.end

do.end:                                           ; preds = %if.end82
  %71 = load %struct.sv*, %struct.sv** %targ, align 8
  %72 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv* %71, %struct.sv** %72, align 8
  br label %do.end83

do.end83:                                         ; preds = %do.end
  br label %if.end85

if.else84:                                        ; preds = %lor.lhs.false69
  %73 = load %struct.sv*, %struct.sv** %tmpsv, align 8
  %74 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv* %73, %struct.sv** %74, align 8
  br label %if.end85

if.end85:                                         ; preds = %if.else84, %do.end83
  br label %if.end86

if.end86:                                         ; preds = %if.end85, %if.then55
  %75 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %75, %struct.sv*** @PL_stack_sp, align 8
  store i1 true, i1* %retval, align 1
  br label %return

if.end87:                                         ; preds = %land.end47
  br label %if.end88

if.end88:                                         ; preds = %if.end87, %land.lhs.true33, %land.lhs.true27, %lor.lhs.false
  %76 = load %struct.sv*, %struct.sv** %left, align 8
  %77 = load %struct.sv*, %struct.sv** %right, align 8
  %cmp89 = icmp eq %struct.sv* %76, %77
  br i1 %cmp89, label %land.lhs.true91, label %if.end128

land.lhs.true91:                                  ; preds = %if.end88
  %78 = load %struct.sv*, %struct.sv** %left, align 8
  %sv_flags92 = getelementptr inbounds %struct.sv, %struct.sv* %78, i32 0, i32 2
  %79 = load i32, i32* %sv_flags92, align 4
  %and93 = and i32 %79, 2097152
  %tobool94 = icmp ne i32 %and93, 0
  br i1 %tobool94, label %if.then95, label %if.end128

if.then95:                                        ; preds = %land.lhs.true91
  %call97 = call %struct.sv* @Perl_sv_newmortal()
  store %struct.sv* %call97, %struct.sv** %left96, align 8
  %80 = load %struct.sv*, %struct.sv** %left96, align 8
  %81 = load %struct.sv**, %struct.sv*** %sp, align 8
  %add.ptr98 = getelementptr inbounds %struct.sv*, %struct.sv** %81, i64 -1
  store %struct.sv* %80, %struct.sv** %add.ptr98, align 8
  %82 = load %struct.sv*, %struct.sv** %right, align 8
  %sv_flags99 = getelementptr inbounds %struct.sv, %struct.sv* %82, i32 0, i32 2
  %83 = load i32, i32* %sv_flags99, align 4
  %and100 = and i32 %83, 65280
  %tobool101 = icmp ne i32 %and100, 0
  br i1 %tobool101, label %if.else116, label %lor.lhs.false102

lor.lhs.false102:                                 ; preds = %if.then95
  %84 = load %struct.sv*, %struct.sv** %right, align 8
  %sv_flags103 = getelementptr inbounds %struct.sv, %struct.sv* %84, i32 0, i32 2
  %85 = load i32, i32* %sv_flags103, align 4
  %and104 = and i32 %85, 255
  %cmp105 = icmp eq i32 %and104, 8
  br i1 %cmp105, label %if.else116, label %lor.lhs.false107

lor.lhs.false107:                                 ; preds = %lor.lhs.false102
  %86 = load %struct.sv*, %struct.sv** %right, align 8
  %sv_flags108 = getelementptr inbounds %struct.sv, %struct.sv* %86, i32 0, i32 2
  %87 = load i32, i32* %sv_flags108, align 4
  %and109 = and i32 %87, 16826623
  %cmp110 = icmp eq i32 %and109, 16777226
  br i1 %cmp110, label %if.else116, label %if.then112

if.then112:                                       ; preds = %lor.lhs.false107
  %call113 = call zeroext i1 @Perl_ckwarn(i32 41)
  br i1 %call113, label %if.then114, label %if.end115

if.then114:                                       ; preds = %if.then112
  %88 = load %struct.sv*, %struct.sv** %right, align 8
  call void @Perl_report_uninit(%struct.sv* %88)
  br label %if.end115

if.end115:                                        ; preds = %if.then114, %if.then112
  %89 = load %struct.sv*, %struct.sv** %left96, align 8
  call void @Perl_sv_setsv_flags(%struct.sv* %89, %struct.sv* @PL_sv_no, i32 0)
  br label %if.end117

if.else116:                                       ; preds = %lor.lhs.false107, %lor.lhs.false102, %if.then95
  %90 = load %struct.sv*, %struct.sv** %left96, align 8
  %91 = load %struct.sv*, %struct.sv** %right, align 8
  call void @Perl_sv_setsv_flags(%struct.sv* %90, %struct.sv* %91, i32 0)
  br label %if.end117

if.end117:                                        ; preds = %if.else116, %if.end115
  %92 = load %struct.sv*, %struct.sv** %right, align 8
  %sv_flags118 = getelementptr inbounds %struct.sv, %struct.sv* %92, i32 0, i32 2
  %93 = load i32, i32* %sv_flags118, align 4
  %and119 = and i32 %93, 2097152
  %tobool120 = icmp ne i32 %and119, 0
  br i1 %tobool120, label %cond.true121, label %cond.false122

cond.true121:                                     ; preds = %if.end117
  br i1 true, label %land.rhs123, label %land.end126

cond.false122:                                    ; preds = %if.end117
  br i1 false, label %land.rhs123, label %land.end126

land.rhs123:                                      ; preds = %cond.false122, %cond.true121
  %94 = load %struct.sv*, %struct.sv** %right, align 8
  %call124 = call i32 @Perl_mg_get(%struct.sv* %94)
  %tobool125 = icmp ne i32 %call124, 0
  br label %land.end126

land.end126:                                      ; preds = %land.rhs123, %cond.false122, %cond.true121
  %95 = phi i1 [ false, %cond.false122 ], [ false, %cond.true121 ], [ %tobool125, %land.rhs123 ]
  %land.ext127 = zext i1 %95 to i32
  br label %if.end128

if.end128:                                        ; preds = %land.end126, %land.lhs.true91, %if.end88
  %96 = load i32, i32* %flags.addr, align 4
  %and129 = and i32 %96, 16
  %tobool130 = icmp ne i32 %and129, 0
  br i1 %tobool130, label %if.then131, label %if.end147

if.then131:                                       ; preds = %if.end128
  %97 = load %struct.sv**, %struct.sv*** %sp, align 8
  %add.ptr132 = getelementptr inbounds %struct.sv*, %struct.sv** %97, i64 -1
  %98 = load %struct.sv*, %struct.sv** %add.ptr132, align 8
  %sv_flags133 = getelementptr inbounds %struct.sv, %struct.sv* %98, i32 0, i32 2
  %99 = load i32, i32* %sv_flags133, align 4
  %and134 = and i32 %99, 2048
  %tobool135 = icmp ne i32 %and134, 0
  br i1 %tobool135, label %if.then136, label %if.end140

if.then136:                                       ; preds = %if.then131
  %100 = load %struct.sv**, %struct.sv*** %sp, align 8
  %add.ptr137 = getelementptr inbounds %struct.sv*, %struct.sv** %100, i64 -1
  %101 = load %struct.sv*, %struct.sv** %add.ptr137, align 8
  %call138 = call %struct.sv* @Perl_sv_2num(%struct.sv* %101)
  %102 = load %struct.sv**, %struct.sv*** %sp, align 8
  %add.ptr139 = getelementptr inbounds %struct.sv*, %struct.sv** %102, i64 -1
  store %struct.sv* %call138, %struct.sv** %add.ptr139, align 8
  br label %if.end140

if.end140:                                        ; preds = %if.then136, %if.then131
  %103 = load %struct.sv*, %struct.sv** %right, align 8
  %sv_flags141 = getelementptr inbounds %struct.sv, %struct.sv* %103, i32 0, i32 2
  %104 = load i32, i32* %sv_flags141, align 4
  %and142 = and i32 %104, 2048
  %tobool143 = icmp ne i32 %and142, 0
  br i1 %tobool143, label %if.then144, label %if.end146

if.then144:                                       ; preds = %if.end140
  %105 = load %struct.sv*, %struct.sv** %right, align 8
  %call145 = call %struct.sv* @Perl_sv_2num(%struct.sv* %105)
  %106 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv* %call145, %struct.sv** %106, align 8
  br label %if.end146

if.end146:                                        ; preds = %if.then144, %if.end140
  br label %if.end147

if.end147:                                        ; preds = %if.end146, %if.end128
  store i1 false, i1* %retval, align 1
  br label %return

return:                                           ; preds = %if.end147, %if.end86
  %107 = load i1, i1* %retval, align 1
  ret i1 %107
}

declare dso_local %struct.sv* @Perl_sv_newmortal() #1

declare dso_local void @Perl_report_uninit(%struct.sv*) #1

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.sv* @Perl_amagic_deref_call(%struct.sv* %ref, i32 %method) #0 {
entry:
  %retval = alloca %struct.sv*, align 8
  %ref.addr = alloca %struct.sv*, align 8
  %method.addr = alloca i32, align 4
  %tmpsv = alloca %struct.sv*, align 8
  %stash = alloca %struct.hv*, align 8
  store %struct.sv* %ref, %struct.sv** %ref.addr, align 8
  store i32 %method, i32* %method.addr, align 4
  store %struct.sv* null, %struct.sv** %tmpsv, align 8
  %0 = load %struct.sv*, %struct.sv** %ref.addr, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %0, i32 0, i32 2
  %1 = load i32, i32* %sv_flags, align 4
  %and = and i32 %1, 2048
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %land.lhs.true, label %if.then

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.sv*, %struct.sv** %ref.addr, align 8
  %sv_u = getelementptr inbounds %struct.sv, %struct.sv* %2, i32 0, i32 3
  %svu_rv = bitcast %union.anon* %sv_u to %struct.sv**
  %3 = load %struct.sv*, %struct.sv** %svu_rv, align 8
  %sv_flags1 = getelementptr inbounds %struct.sv, %struct.sv* %3, i32 0, i32 2
  %4 = load i32, i32* %sv_flags1, align 4
  %and2 = and i32 %4, 1048576
  %tobool3 = icmp ne i32 %and2, 0
  br i1 %tobool3, label %land.lhs.true4, label %if.then

land.lhs.true4:                                   ; preds = %land.lhs.true
  %5 = load %struct.sv*, %struct.sv** %ref.addr, align 8
  %sv_u5 = getelementptr inbounds %struct.sv, %struct.sv* %5, i32 0, i32 3
  %svu_rv6 = bitcast %union.anon* %sv_u5 to %struct.sv**
  %6 = load %struct.sv*, %struct.sv** %svu_rv6, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %6, i32 0, i32 0
  %7 = load i8*, i8** %sv_any, align 8
  %8 = bitcast i8* %7 to %struct.xpvmg*
  %xmg_stash = getelementptr inbounds %struct.xpvmg, %struct.xpvmg* %8, i32 0, i32 0
  %9 = load %struct.hv*, %struct.hv** %xmg_stash, align 8
  %sv_flags7 = getelementptr inbounds %struct.hv, %struct.hv* %9, i32 0, i32 2
  %10 = load i32, i32* %sv_flags7, align 4
  %and8 = and i32 %10, 268435456
  %tobool9 = icmp ne i32 %and8, 0
  br i1 %tobool9, label %if.end, label %if.then

if.then:                                          ; preds = %land.lhs.true4, %land.lhs.true, %entry
  %11 = load %struct.sv*, %struct.sv** %ref.addr, align 8
  store %struct.sv* %11, %struct.sv** %retval, align 8
  br label %return

if.end:                                           ; preds = %land.lhs.true4
  %12 = load %struct.sv*, %struct.sv** %ref.addr, align 8
  %sv_u10 = getelementptr inbounds %struct.sv, %struct.sv* %12, i32 0, i32 3
  %svu_rv11 = bitcast %union.anon* %sv_u10 to %struct.sv**
  %13 = load %struct.sv*, %struct.sv** %svu_rv11, align 8
  %sv_any12 = getelementptr inbounds %struct.sv, %struct.sv* %13, i32 0, i32 0
  %14 = load i8*, i8** %sv_any12, align 8
  %15 = bitcast i8* %14 to %struct.xpvmg*
  %xmg_stash13 = getelementptr inbounds %struct.xpvmg, %struct.xpvmg* %15, i32 0, i32 0
  %16 = load %struct.hv*, %struct.hv** %xmg_stash13, align 8
  store %struct.hv* %16, %struct.hv** %stash, align 8
  %17 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u14 = getelementptr inbounds %struct.hv, %struct.hv* %17, i32 0, i32 3
  %svu_hash = bitcast %union.anon.4* %sv_u14 to %struct.he***
  %18 = load %struct.he**, %struct.he*** %svu_hash, align 8
  %19 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any15 = getelementptr inbounds %struct.hv, %struct.hv* %19, i32 0, i32 0
  %20 = load %struct.xpvhv*, %struct.xpvhv** %sv_any15, align 8
  %xhv_max = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %20, i32 0, i32 3
  %21 = load i64, i64* %xhv_max, align 8
  %add = add i64 %21, 1
  %arrayidx = getelementptr inbounds %struct.he*, %struct.he** %18, i64 %add
  %22 = bitcast %struct.he** %arrayidx to %struct.xpvhv_aux*
  %xhv_aux_flags = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %22, i32 0, i32 9
  %23 = load i32, i32* %xhv_aux_flags, align 4
  %and16 = and i32 %23, 2
  %tobool17 = icmp ne i32 %and16, 0
  br i1 %tobool17, label %if.then18, label %if.end19

if.then18:                                        ; preds = %if.end
  %24 = load %struct.sv*, %struct.sv** %ref.addr, align 8
  store %struct.sv* %24, %struct.sv** %retval, align 8
  br label %return

if.end19:                                         ; preds = %if.end
  br label %while.cond

while.cond:                                       ; preds = %if.end51, %if.end19
  %25 = load %struct.sv*, %struct.sv** %ref.addr, align 8
  %26 = load i32, i32* %method.addr, align 4
  %call = call %struct.sv* @Perl_amagic_call(%struct.sv* %25, %struct.sv* @PL_sv_undef, i32 %26, i32 9)
  store %struct.sv* %call, %struct.sv** %tmpsv, align 8
  %tobool20 = icmp ne %struct.sv* %call, null
  br i1 %tobool20, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %27 = load %struct.sv*, %struct.sv** %tmpsv, align 8
  %sv_flags21 = getelementptr inbounds %struct.sv, %struct.sv* %27, i32 0, i32 2
  %28 = load i32, i32* %sv_flags21, align 4
  %and22 = and i32 %28, 2048
  %tobool23 = icmp ne i32 %and22, 0
  br i1 %tobool23, label %if.end25, label %if.then24

if.then24:                                        ; preds = %while.body
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.34, i64 0, i64 0))
  br label %if.end25

if.end25:                                         ; preds = %if.then24, %while.body
  %29 = load %struct.sv*, %struct.sv** %tmpsv, align 8
  %30 = load %struct.sv*, %struct.sv** %ref.addr, align 8
  %cmp = icmp eq %struct.sv* %29, %30
  br i1 %cmp, label %if.then31, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end25
  %31 = load %struct.sv*, %struct.sv** %tmpsv, align 8
  %sv_u26 = getelementptr inbounds %struct.sv, %struct.sv* %31, i32 0, i32 3
  %svu_rv27 = bitcast %union.anon* %sv_u26 to %struct.sv**
  %32 = load %struct.sv*, %struct.sv** %svu_rv27, align 8
  %33 = load %struct.sv*, %struct.sv** %ref.addr, align 8
  %sv_u28 = getelementptr inbounds %struct.sv, %struct.sv* %33, i32 0, i32 3
  %svu_rv29 = bitcast %union.anon* %sv_u28 to %struct.sv**
  %34 = load %struct.sv*, %struct.sv** %svu_rv29, align 8
  %cmp30 = icmp eq %struct.sv* %32, %34
  br i1 %cmp30, label %if.then31, label %if.end32

if.then31:                                        ; preds = %lor.lhs.false, %if.end25
  %35 = load %struct.sv*, %struct.sv** %tmpsv, align 8
  store %struct.sv* %35, %struct.sv** %retval, align 8
  br label %return

if.end32:                                         ; preds = %lor.lhs.false
  %36 = load %struct.sv*, %struct.sv** %tmpsv, align 8
  store %struct.sv* %36, %struct.sv** %ref.addr, align 8
  %37 = load %struct.sv*, %struct.sv** %ref.addr, align 8
  %sv_flags33 = getelementptr inbounds %struct.sv, %struct.sv* %37, i32 0, i32 2
  %38 = load i32, i32* %sv_flags33, align 4
  %and34 = and i32 %38, 2048
  %tobool35 = icmp ne i32 %and34, 0
  br i1 %tobool35, label %land.lhs.true36, label %if.then50

land.lhs.true36:                                  ; preds = %if.end32
  %39 = load %struct.sv*, %struct.sv** %ref.addr, align 8
  %sv_u37 = getelementptr inbounds %struct.sv, %struct.sv* %39, i32 0, i32 3
  %svu_rv38 = bitcast %union.anon* %sv_u37 to %struct.sv**
  %40 = load %struct.sv*, %struct.sv** %svu_rv38, align 8
  %sv_flags39 = getelementptr inbounds %struct.sv, %struct.sv* %40, i32 0, i32 2
  %41 = load i32, i32* %sv_flags39, align 4
  %and40 = and i32 %41, 1048576
  %tobool41 = icmp ne i32 %and40, 0
  br i1 %tobool41, label %land.lhs.true42, label %if.then50

land.lhs.true42:                                  ; preds = %land.lhs.true36
  %42 = load %struct.sv*, %struct.sv** %ref.addr, align 8
  %sv_u43 = getelementptr inbounds %struct.sv, %struct.sv* %42, i32 0, i32 3
  %svu_rv44 = bitcast %union.anon* %sv_u43 to %struct.sv**
  %43 = load %struct.sv*, %struct.sv** %svu_rv44, align 8
  %sv_any45 = getelementptr inbounds %struct.sv, %struct.sv* %43, i32 0, i32 0
  %44 = load i8*, i8** %sv_any45, align 8
  %45 = bitcast i8* %44 to %struct.xpvmg*
  %xmg_stash46 = getelementptr inbounds %struct.xpvmg, %struct.xpvmg* %45, i32 0, i32 0
  %46 = load %struct.hv*, %struct.hv** %xmg_stash46, align 8
  %sv_flags47 = getelementptr inbounds %struct.hv, %struct.hv* %46, i32 0, i32 2
  %47 = load i32, i32* %sv_flags47, align 4
  %and48 = and i32 %47, 268435456
  %tobool49 = icmp ne i32 %and48, 0
  br i1 %tobool49, label %if.end51, label %if.then50

if.then50:                                        ; preds = %land.lhs.true42, %land.lhs.true36, %if.end32
  br label %while.end

if.end51:                                         ; preds = %land.lhs.true42
  br label %while.cond

while.end:                                        ; preds = %if.then50, %while.cond
  %48 = load %struct.sv*, %struct.sv** %tmpsv, align 8
  %tobool52 = icmp ne %struct.sv* %48, null
  br i1 %tobool52, label %cond.true, label %cond.false

cond.true:                                        ; preds = %while.end
  %49 = load %struct.sv*, %struct.sv** %tmpsv, align 8
  br label %cond.end

cond.false:                                       ; preds = %while.end
  %50 = load %struct.sv*, %struct.sv** %ref.addr, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.sv* [ %49, %cond.true ], [ %50, %cond.false ]
  store %struct.sv* %cond, %struct.sv** %retval, align 8
  br label %return

return:                                           ; preds = %cond.end, %if.then31, %if.then18, %if.then
  %51 = load %struct.sv*, %struct.sv** %retval, align 8
  ret %struct.sv* %51
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i1 @Perl_amagic_is_enabled(i32 %method) #0 {
entry:
  %retval = alloca i1, align 1
  %method.addr = alloca i32, align 4
  %lex_mask = alloca %struct.sv*, align 8
  %len = alloca i64, align 8
  %offset = alloca i32, align 4
  %bit = alloca i32, align 4
  %pv = alloca i8*, align 8
  store i32 %method, i32* %method.addr, align 4
  %0 = load %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_hints_hash = getelementptr inbounds %struct.cop, %struct.cop* %0, i32 0, i32 13
  %1 = load %struct.refcounted_he*, %struct.refcounted_he** %cop_hints_hash, align 8
  %call = call %struct.sv* @Perl_refcounted_he_fetch_pvn(%struct.refcounted_he* %1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.35, i64 0, i64 0), i64 11, i32 0, i32 0)
  store %struct.sv* %call, %struct.sv** %lex_mask, align 8
  %2 = load %struct.sv*, %struct.sv** %lex_mask, align 8
  %tobool = icmp ne %struct.sv* %2, null
  br i1 %tobool, label %lor.lhs.false, label %if.then

lor.lhs.false:                                    ; preds = %entry
  %3 = load %struct.sv*, %struct.sv** %lex_mask, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %3, i32 0, i32 2
  %4 = load i32, i32* %sv_flags, align 4
  %and = and i32 %4, 65280
  %tobool1 = icmp ne i32 %and, 0
  br i1 %tobool1, label %if.else, label %lor.lhs.false2

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %5 = load %struct.sv*, %struct.sv** %lex_mask, align 8
  %sv_flags3 = getelementptr inbounds %struct.sv, %struct.sv* %5, i32 0, i32 2
  %6 = load i32, i32* %sv_flags3, align 4
  %and4 = and i32 %6, 255
  %cmp = icmp eq i32 %and4, 8
  br i1 %cmp, label %if.else, label %lor.lhs.false5

lor.lhs.false5:                                   ; preds = %lor.lhs.false2
  %7 = load %struct.sv*, %struct.sv** %lex_mask, align 8
  %sv_flags6 = getelementptr inbounds %struct.sv, %struct.sv* %7, i32 0, i32 2
  %8 = load i32, i32* %sv_flags6, align 4
  %and7 = and i32 %8, 16826623
  %cmp8 = icmp eq i32 %and7, 16777226
  br i1 %cmp8, label %if.else, label %if.then

if.then:                                          ; preds = %lor.lhs.false5, %entry
  store i1 false, i1* %retval, align 1
  br label %return

if.else:                                          ; preds = %lor.lhs.false5, %lor.lhs.false2, %lor.lhs.false
  %9 = load %struct.sv*, %struct.sv** %lex_mask, align 8
  %tobool9 = icmp ne %struct.sv* %9, null
  br i1 %tobool9, label %land.lhs.true, label %if.end25

land.lhs.true:                                    ; preds = %if.else
  %10 = load %struct.sv*, %struct.sv** %lex_mask, align 8
  %sv_flags10 = getelementptr inbounds %struct.sv, %struct.sv* %10, i32 0, i32 2
  %11 = load i32, i32* %sv_flags10, align 4
  %and11 = and i32 %11, 1024
  %tobool12 = icmp ne i32 %and11, 0
  br i1 %tobool12, label %if.then13, label %if.end25

if.then13:                                        ; preds = %land.lhs.true
  %12 = load i32, i32* %method.addr, align 4
  %div = sdiv i32 %12, 8
  store i32 %div, i32* %offset, align 4
  %13 = load i32, i32* %method.addr, align 4
  %rem = srem i32 %13, 8
  store i32 %rem, i32* %bit, align 4
  %14 = load %struct.sv*, %struct.sv** %lex_mask, align 8
  %sv_flags14 = getelementptr inbounds %struct.sv, %struct.sv* %14, i32 0, i32 2
  %15 = load i32, i32* %sv_flags14, align 4
  %and15 = and i32 %15, 2098176
  %cmp16 = icmp eq i32 %and15, 1024
  br i1 %cmp16, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then13
  %16 = load %struct.sv*, %struct.sv** %lex_mask, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %16, i32 0, i32 0
  %17 = load i8*, i8** %sv_any, align 8
  %18 = bitcast i8* %17 to %struct.xpv*
  %xpv_cur = getelementptr inbounds %struct.xpv, %struct.xpv* %18, i32 0, i32 2
  %19 = load i64, i64* %xpv_cur, align 8
  store i64 %19, i64* %len, align 8
  %20 = load %struct.sv*, %struct.sv** %lex_mask, align 8
  %sv_u = getelementptr inbounds %struct.sv, %struct.sv* %20, i32 0, i32 3
  %svu_pv = bitcast %union.anon* %sv_u to i8**
  %21 = load i8*, i8** %svu_pv, align 8
  br label %cond.end

cond.false:                                       ; preds = %if.then13
  %22 = load %struct.sv*, %struct.sv** %lex_mask, align 8
  %call17 = call i8* @Perl_sv_2pv_flags(%struct.sv* %22, i64* %len, i32 2)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %21, %cond.true ], [ %call17, %cond.false ]
  store i8* %cond, i8** %pv, align 8
  %23 = load i32, i32* %offset, align 4
  %conv = sext i32 %23 to i64
  %24 = load i64, i64* %len, align 8
  %cmp18 = icmp ult i64 %conv, %24
  br i1 %cmp18, label %land.lhs.true20, label %if.end

land.lhs.true20:                                  ; preds = %cond.end
  %25 = load i8*, i8** %pv, align 8
  %26 = load i32, i32* %offset, align 4
  %idxprom = sext i32 %26 to i64
  %arrayidx = getelementptr inbounds i8, i8* %25, i64 %idxprom
  %27 = load i8, i8* %arrayidx, align 1
  %conv21 = sext i8 %27 to i32
  %28 = load i32, i32* %bit, align 4
  %shl = shl i32 1, %28
  %and22 = and i32 %conv21, %shl
  %tobool23 = icmp ne i32 %and22, 0
  br i1 %tobool23, label %if.then24, label %if.end

if.then24:                                        ; preds = %land.lhs.true20
  store i1 false, i1* %retval, align 1
  br label %return

if.end:                                           ; preds = %land.lhs.true20, %cond.end
  br label %if.end25

if.end25:                                         ; preds = %if.end, %land.lhs.true, %if.else
  br label %if.end26

if.end26:                                         ; preds = %if.end25
  store i1 true, i1* %retval, align 1
  br label %return

return:                                           ; preds = %if.end26, %if.then24, %if.then
  %29 = load i1, i1* %retval, align 1
  ret i1 %29
}

declare dso_local %struct.sv* @Perl_refcounted_he_fetch_pvn(%struct.refcounted_he*, i8*, i64, i32, i32) #1

declare dso_local %struct.sv* @Perl_newSVsv(%struct.sv*) #1

declare dso_local %struct.sv* @Perl_newSViv(i64) #1

declare dso_local double @Perl_sv_2nv_flags(%struct.sv*, i32) #1

declare dso_local %struct.sv* @Perl_newSVpvf(i8*, ...) #1

declare dso_local i32 @Perl_block_gimme() #1

declare dso_local %struct.stackinfo* @Perl_new_stackinfo(i32, i32) #1

declare dso_local void @Perl_save_pushptr(i8*, i32) #1

declare dso_local %struct.op* @Perl_pp_pushmark() #1

declare dso_local %struct.sv** @Perl_stack_grow(%struct.sv**, %struct.sv**, i64) #1

declare dso_local void @Perl_av_extend(%struct.av*, i64) #1

declare dso_local %struct.sv** @Perl_av_store(%struct.av*, i64, %struct.sv*) #1

declare dso_local void @Perl_croak_popstack() #1

declare dso_local i64 @Perl_sv_2iv_flags(%struct.sv*, i32) #1

; Function Attrs: noinline nounwind uwtable
define dso_local void @Perl_gv_try_downgrade(%struct.gv* %gv) #0 {
entry:
  %gv.addr = alloca %struct.gv*, align 8
  %stash = alloca %struct.hv*, align 8
  %cv = alloca %struct.cv*, align 8
  %namehek = alloca %struct.hek*, align 8
  %gvp = alloca %struct.sv**, align 8
  %mg = alloca %struct.magic*, align 8
  %gvnhek = alloca %struct.hek*, align 8
  %value = alloca %struct.sv*, align 8
  %imported = alloca i8, align 1
  store %struct.gv* %gv, %struct.gv** %gv.addr, align 8
  %0 = load i32, i32* @PL_phase, align 4
  %cmp = icmp eq i32 %0, 6
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %if.end240

if.end:                                           ; preds = %entry
  %1 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_refcnt = getelementptr inbounds %struct.gv, %struct.gv* %1, i32 0, i32 1
  %2 = load i32, i32* %sv_refcnt, align 8
  %cmp1 = icmp eq i32 %2, 1
  br i1 %cmp1, label %land.lhs.true, label %if.then79

land.lhs.true:                                    ; preds = %if.end
  %3 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_flags = getelementptr inbounds %struct.gv, %struct.gv* %3, i32 0, i32 2
  %4 = load i32, i32* %sv_flags, align 4
  %and = and i32 %4, 255
  %cmp2 = icmp eq i32 %and, 9
  br i1 %cmp2, label %land.lhs.true3, label %if.then79

land.lhs.true3:                                   ; preds = %land.lhs.true
  %5 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_flags4 = getelementptr inbounds %struct.gv, %struct.gv* %5, i32 0, i32 2
  %6 = load i32, i32* %sv_flags4, align 4
  %and5 = and i32 %6, 16777216
  %tobool = icmp ne i32 %and5, 0
  br i1 %tobool, label %if.then79, label %land.lhs.true6

land.lhs.true6:                                   ; preds = %land.lhs.true3
  %7 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_flags7 = getelementptr inbounds %struct.gv, %struct.gv* %7, i32 0, i32 2
  %8 = load i32, i32* %sv_flags7, align 4
  %and8 = and i32 %8, 1048576
  %tobool9 = icmp ne i32 %and8, 0
  br i1 %tobool9, label %if.then79, label %land.lhs.true10

land.lhs.true10:                                  ; preds = %land.lhs.true6
  %9 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_flags11 = getelementptr inbounds %struct.gv, %struct.gv* %9, i32 0, i32 2
  %10 = load i32, i32* %sv_flags11, align 4
  %and12 = and i32 %10, 134283264
  %tobool13 = icmp ne i32 %and12, 0
  br i1 %tobool13, label %if.then79, label %land.lhs.true14

land.lhs.true14:                                  ; preds = %land.lhs.true10
  %11 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_flags15 = getelementptr inbounds %struct.gv, %struct.gv* %11, i32 0, i32 2
  %12 = load i32, i32* %sv_flags15, align 4
  %and16 = and i32 %12, 49152
  %cmp17 = icmp eq i32 %and16, 32768
  br i1 %cmp17, label %land.lhs.true18, label %if.then79

land.lhs.true18:                                  ; preds = %land.lhs.true14
  %13 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_flags19 = getelementptr inbounds %struct.gv, %struct.gv* %13, i32 0, i32 2
  %14 = load i32, i32* %sv_flags19, align 4
  %and20 = and i32 %14, 255
  %cmp21 = icmp eq i32 %and20, 9
  br i1 %cmp21, label %land.lhs.true25, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true18
  %15 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_flags22 = getelementptr inbounds %struct.gv, %struct.gv* %15, i32 0, i32 2
  %16 = load i32, i32* %sv_flags22, align 4
  %and23 = and i32 %16, 255
  %cmp24 = icmp eq i32 %and23, 10
  br i1 %cmp24, label %land.lhs.true25, label %if.then79

land.lhs.true25:                                  ; preds = %lor.lhs.false, %land.lhs.true18
  %17 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_u = getelementptr inbounds %struct.gv, %struct.gv* %17, i32 0, i32 3
  %svu_gp = bitcast %union.anon.6* %sv_u to %struct.gp**
  %18 = load %struct.gp*, %struct.gp** %svu_gp, align 8
  %add.ptr = getelementptr inbounds %struct.gp, %struct.gp* %18, i64 0
  %tobool26 = icmp ne %struct.gp* %add.ptr, null
  br i1 %tobool26, label %land.lhs.true27, label %if.then79

land.lhs.true27:                                  ; preds = %land.lhs.true25
  %19 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_any = getelementptr inbounds %struct.gv, %struct.gv* %19, i32 0, i32 0
  %20 = load %struct.xpvgv*, %struct.xpvgv** %sv_any, align 8
  %xpv_cur = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %20, i32 0, i32 2
  %21 = load i64, i64* %xpv_cur, align 8
  %and28 = and i64 %21, 1
  %tobool29 = icmp ne i64 %and28, 0
  br i1 %tobool29, label %if.then79, label %land.lhs.true30

land.lhs.true30:                                  ; preds = %land.lhs.true27
  %22 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_u31 = getelementptr inbounds %struct.gv, %struct.gv* %22, i32 0, i32 3
  %svu_gp32 = bitcast %union.anon.6* %sv_u31 to %struct.gp**
  %23 = load %struct.gp*, %struct.gp** %svu_gp32, align 8
  %add.ptr33 = getelementptr inbounds %struct.gp, %struct.gp* %23, i64 0
  %gp_refcnt = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr33, i32 0, i32 4
  %24 = load i32, i32* %gp_refcnt, align 4
  %cmp34 = icmp eq i32 %24, 1
  br i1 %cmp34, label %land.lhs.true35, label %if.then79

land.lhs.true35:                                  ; preds = %land.lhs.true30
  %25 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_u36 = getelementptr inbounds %struct.gv, %struct.gv* %25, i32 0, i32 3
  %svu_gp37 = bitcast %union.anon.6* %sv_u36 to %struct.gp**
  %26 = load %struct.gp*, %struct.gp** %svu_gp37, align 8
  %add.ptr38 = getelementptr inbounds %struct.gp, %struct.gp* %26, i64 0
  %gp_sv = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr38, i32 0, i32 0
  %27 = load %struct.sv*, %struct.sv** %gp_sv, align 8
  %tobool39 = icmp ne %struct.sv* %27, null
  br i1 %tobool39, label %if.then79, label %land.lhs.true40

land.lhs.true40:                                  ; preds = %land.lhs.true35
  %28 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_u41 = getelementptr inbounds %struct.gv, %struct.gv* %28, i32 0, i32 3
  %svu_gp42 = bitcast %union.anon.6* %sv_u41 to %struct.gp**
  %29 = load %struct.gp*, %struct.gp** %svu_gp42, align 8
  %add.ptr43 = getelementptr inbounds %struct.gp, %struct.gp* %29, i64 0
  %gp_av = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr43, i32 0, i32 6
  %30 = load %struct.av*, %struct.av** %gp_av, align 8
  %tobool44 = icmp ne %struct.av* %30, null
  br i1 %tobool44, label %if.then79, label %land.lhs.true45

land.lhs.true45:                                  ; preds = %land.lhs.true40
  %31 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_u46 = getelementptr inbounds %struct.gv, %struct.gv* %31, i32 0, i32 3
  %svu_gp47 = bitcast %union.anon.6* %sv_u46 to %struct.gp**
  %32 = load %struct.gp*, %struct.gp** %svu_gp47, align 8
  %add.ptr48 = getelementptr inbounds %struct.gp, %struct.gp* %32, i64 0
  %gp_hv = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr48, i32 0, i32 5
  %33 = load %struct.hv*, %struct.hv** %gp_hv, align 8
  %tobool49 = icmp ne %struct.hv* %33, null
  br i1 %tobool49, label %if.then79, label %land.lhs.true50

land.lhs.true50:                                  ; preds = %land.lhs.true45
  %34 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_u51 = getelementptr inbounds %struct.gv, %struct.gv* %34, i32 0, i32 3
  %svu_gp52 = bitcast %union.anon.6* %sv_u51 to %struct.gp**
  %35 = load %struct.gp*, %struct.gp** %svu_gp52, align 8
  %add.ptr53 = getelementptr inbounds %struct.gp, %struct.gp* %35, i64 0
  %gp_io = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr53, i32 0, i32 1
  %36 = load %struct.io*, %struct.io** %gp_io, align 8
  %tobool54 = icmp ne %struct.io* %36, null
  br i1 %tobool54, label %if.then79, label %land.lhs.true55

land.lhs.true55:                                  ; preds = %land.lhs.true50
  %37 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_u56 = getelementptr inbounds %struct.gv, %struct.gv* %37, i32 0, i32 3
  %svu_gp57 = bitcast %union.anon.6* %sv_u56 to %struct.gp**
  %38 = load %struct.gp*, %struct.gp** %svu_gp57, align 8
  %add.ptr58 = getelementptr inbounds %struct.gp, %struct.gp* %38, i64 0
  %gp_form = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr58, i32 0, i32 7
  %39 = load %struct.cv*, %struct.cv** %gp_form, align 8
  %tobool59 = icmp ne %struct.cv* %39, null
  br i1 %tobool59, label %if.then79, label %land.lhs.true60

land.lhs.true60:                                  ; preds = %land.lhs.true55
  %40 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_flags61 = getelementptr inbounds %struct.gv, %struct.gv* %40, i32 0, i32 2
  %41 = load i32, i32* %sv_flags61, align 4
  %and62 = and i32 %41, 49152
  %cmp63 = icmp eq i32 %and62, 32768
  br i1 %cmp63, label %land.lhs.true64, label %cond.false

land.lhs.true64:                                  ; preds = %land.lhs.true60
  %42 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_flags65 = getelementptr inbounds %struct.gv, %struct.gv* %42, i32 0, i32 2
  %43 = load i32, i32* %sv_flags65, align 4
  %and66 = and i32 %43, 255
  %cmp67 = icmp eq i32 %and66, 9
  br i1 %cmp67, label %cond.true, label %lor.lhs.false68

lor.lhs.false68:                                  ; preds = %land.lhs.true64
  %44 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_flags69 = getelementptr inbounds %struct.gv, %struct.gv* %44, i32 0, i32 2
  %45 = load i32, i32* %sv_flags69, align 4
  %and70 = and i32 %45, 255
  %cmp71 = icmp eq i32 %and70, 10
  br i1 %cmp71, label %cond.true, label %cond.false

cond.true:                                        ; preds = %lor.lhs.false68, %land.lhs.true64
  %46 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_u72 = getelementptr inbounds %struct.gv, %struct.gv* %46, i32 0, i32 3
  %svu_gp73 = bitcast %union.anon.6* %sv_u72 to %struct.gp**
  %47 = load %struct.gp*, %struct.gp** %svu_gp73, align 8
  %add.ptr74 = getelementptr inbounds %struct.gp, %struct.gp* %47, i64 0
  %gp_egv = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr74, i32 0, i32 8
  %48 = load %struct.gv*, %struct.gv** %gp_egv, align 8
  br label %cond.end

cond.false:                                       ; preds = %lor.lhs.false68, %land.lhs.true60
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.gv* [ %48, %cond.true ], [ null, %cond.false ]
  %49 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %cmp75 = icmp eq %struct.gv* %cond, %49
  br i1 %cmp75, label %land.lhs.true76, label %if.then79

land.lhs.true76:                                  ; preds = %cond.end
  %50 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_any77 = getelementptr inbounds %struct.gv, %struct.gv* %50, i32 0, i32 0
  %51 = load %struct.xpvgv*, %struct.xpvgv** %sv_any77, align 8
  %xnv_u = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %51, i32 0, i32 5
  %xgv_stash = bitcast %union._xnvu* %xnv_u to %struct.hv**
  %52 = load %struct.hv*, %struct.hv** %xgv_stash, align 8
  store %struct.hv* %52, %struct.hv** %stash, align 8
  %tobool78 = icmp ne %struct.hv* %52, null
  br i1 %tobool78, label %if.end80, label %if.then79

if.then79:                                        ; preds = %land.lhs.true76, %cond.end, %land.lhs.true55, %land.lhs.true50, %land.lhs.true45, %land.lhs.true40, %land.lhs.true35, %land.lhs.true30, %land.lhs.true27, %land.lhs.true25, %lor.lhs.false, %land.lhs.true14, %land.lhs.true10, %land.lhs.true6, %land.lhs.true3, %land.lhs.true, %if.end
  br label %if.end240

if.end80:                                         ; preds = %land.lhs.true76
  %53 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %54 = load %struct.gv*, %struct.gv** @PL_statgv, align 8
  %cmp81 = icmp eq %struct.gv* %53, %54
  br i1 %cmp81, label %if.then86, label %lor.lhs.false82

lor.lhs.false82:                                  ; preds = %if.end80
  %55 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %56 = load %struct.gv*, %struct.gv** @PL_last_in_gv, align 8
  %cmp83 = icmp eq %struct.gv* %55, %56
  br i1 %cmp83, label %if.then86, label %lor.lhs.false84

lor.lhs.false84:                                  ; preds = %lor.lhs.false82
  %57 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %58 = load %struct.gv*, %struct.gv** @PL_stderrgv, align 8
  %cmp85 = icmp eq %struct.gv* %57, %58
  br i1 %cmp85, label %if.then86, label %if.end87

if.then86:                                        ; preds = %lor.lhs.false84, %lor.lhs.false82, %if.end80
  br label %if.end240

if.end87:                                         ; preds = %lor.lhs.false84
  %59 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_flags88 = getelementptr inbounds %struct.gv, %struct.gv* %59, i32 0, i32 2
  %60 = load i32, i32* %sv_flags88, align 4
  %and89 = and i32 %60, 14680064
  %tobool90 = icmp ne i32 %and89, 0
  br i1 %tobool90, label %if.then91, label %if.end107

if.then91:                                        ; preds = %if.end87
  %61 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_flags92 = getelementptr inbounds %struct.gv, %struct.gv* %61, i32 0, i32 2
  %62 = load i32, i32* %sv_flags92, align 4
  %and93 = and i32 %62, 2097152
  %tobool94 = icmp ne i32 %and93, 0
  br i1 %tobool94, label %if.then99, label %lor.lhs.false95

lor.lhs.false95:                                  ; preds = %if.then91
  %63 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_flags96 = getelementptr inbounds %struct.gv, %struct.gv* %63, i32 0, i32 2
  %64 = load i32, i32* %sv_flags96, align 4
  %and97 = and i32 %64, 4194304
  %tobool98 = icmp ne i32 %and97, 0
  br i1 %tobool98, label %if.then99, label %if.end100

if.then99:                                        ; preds = %lor.lhs.false95, %if.then91
  br label %if.end240

if.end100:                                        ; preds = %lor.lhs.false95
  %65 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_any101 = getelementptr inbounds %struct.gv, %struct.gv* %65, i32 0, i32 0
  %66 = load %struct.xpvgv*, %struct.xpvgv** %sv_any101, align 8
  %67 = bitcast %struct.xpvgv* %66 to %struct.xpvmg*
  %xmg_u = getelementptr inbounds %struct.xpvmg, %struct.xpvmg* %67, i32 0, i32 1
  %xmg_magic = bitcast %union._xmgu* %xmg_u to %struct.magic**
  %68 = load %struct.magic*, %struct.magic** %xmg_magic, align 8
  store %struct.magic* %68, %struct.magic** %mg, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end100
  %69 = load %struct.magic*, %struct.magic** %mg, align 8
  %tobool102 = icmp ne %struct.magic* %69, null
  br i1 %tobool102, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %70 = load %struct.magic*, %struct.magic** %mg, align 8
  %mg_type = getelementptr inbounds %struct.magic, %struct.magic* %70, i32 0, i32 3
  %71 = load i8, i8* %mg_type, align 2
  %conv = sext i8 %71 to i32
  %cmp103 = icmp ne i32 %conv, 60
  br i1 %cmp103, label %if.then105, label %if.end106

if.then105:                                       ; preds = %for.body
  br label %if.end240

if.end106:                                        ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end106
  %72 = load %struct.magic*, %struct.magic** %mg, align 8
  %mg_moremagic = getelementptr inbounds %struct.magic, %struct.magic* %72, i32 0, i32 0
  %73 = load %struct.magic*, %struct.magic** %mg_moremagic, align 8
  store %struct.magic* %73, %struct.magic** %mg, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end107

if.end107:                                        ; preds = %for.end, %if.end87
  %74 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_u108 = getelementptr inbounds %struct.gv, %struct.gv* %74, i32 0, i32 3
  %svu_gp109 = bitcast %union.anon.6* %sv_u108 to %struct.gp**
  %75 = load %struct.gp*, %struct.gp** %svu_gp109, align 8
  %add.ptr110 = getelementptr inbounds %struct.gp, %struct.gp* %75, i64 0
  %gp_cv = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr110, i32 0, i32 2
  %76 = load %struct.cv*, %struct.cv** %gp_cv, align 8
  %add.ptr111 = getelementptr inbounds %struct.cv, %struct.cv* %76, i64 0
  store %struct.cv* %add.ptr111, %struct.cv** %cv, align 8
  %77 = load %struct.cv*, %struct.cv** %cv, align 8
  %tobool112 = icmp ne %struct.cv* %77, null
  br i1 %tobool112, label %if.else, label %if.then113

if.then113:                                       ; preds = %if.end107
  %78 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_any114 = getelementptr inbounds %struct.gv, %struct.gv* %78, i32 0, i32 0
  %79 = load %struct.xpvgv*, %struct.xpvgv** %sv_any114, align 8
  %xiv_u = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %79, i32 0, i32 4
  %xivu_namehek = bitcast %union._xivu* %xiv_u to %struct.hek**
  %80 = load %struct.hek*, %struct.hek** %xivu_namehek, align 8
  store %struct.hek* %80, %struct.hek** %gvnhek, align 8
  %81 = load %struct.hv*, %struct.hv** %stash, align 8
  %82 = load %struct.hek*, %struct.hek** %gvnhek, align 8
  %hek_key = getelementptr inbounds %struct.hek, %struct.hek* %82, i32 0, i32 2
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %hek_key, i64 0, i64 0
  %83 = load %struct.hek*, %struct.hek** %gvnhek, align 8
  %hek_len = getelementptr inbounds %struct.hek, %struct.hek* %83, i32 0, i32 1
  %84 = load i32, i32* %hek_len, align 4
  %conv115 = sext i32 %84 to i64
  %85 = load %struct.hek*, %struct.hek** %gvnhek, align 8
  %hek_key116 = getelementptr inbounds %struct.hek, %struct.hek* %85, i32 0, i32 2
  %arraydecay117 = getelementptr inbounds [1 x i8], [1 x i8]* %hek_key116, i64 0, i64 0
  %86 = load %struct.hek*, %struct.hek** %gvnhek, align 8
  %hek_len118 = getelementptr inbounds %struct.hek, %struct.hek* %86, i32 0, i32 1
  %87 = load i32, i32* %hek_len118, align 4
  %idx.ext = sext i32 %87 to i64
  %add.ptr119 = getelementptr inbounds i8, i8* %arraydecay117, i64 %idx.ext
  %add.ptr120 = getelementptr inbounds i8, i8* %add.ptr119, i64 1
  %88 = load i8, i8* %add.ptr120, align 1
  %conv121 = zext i8 %88 to i32
  %and122 = and i32 %conv121, 1
  %89 = load %struct.hek*, %struct.hek** %gvnhek, align 8
  %hek_hash = getelementptr inbounds %struct.hek, %struct.hek* %89, i32 0, i32 0
  %90 = load i32, i32* %hek_hash, align 4
  %call = call i8* @Perl_hv_common(%struct.hv* %81, %struct.sv* null, i8* %arraydecay, i64 %conv115, i32 %and122, i32 68, %struct.sv* null, i32 %90)
  br label %if.end240

if.else:                                          ; preds = %if.end107
  %91 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_any123 = getelementptr inbounds %struct.gv, %struct.gv* %91, i32 0, i32 0
  %92 = load %struct.xpvgv*, %struct.xpvgv** %sv_any123, align 8
  %xpv_cur124 = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %92, i32 0, i32 2
  %93 = load i64, i64* %xpv_cur124, align 8
  %and125 = and i64 %93, 2
  %tobool126 = icmp ne i64 %and125, 0
  br i1 %tobool126, label %land.lhs.true127, label %if.end239

land.lhs.true127:                                 ; preds = %if.else
  %94 = load %struct.cv*, %struct.cv** %cv, align 8
  %tobool128 = icmp ne %struct.cv* %94, null
  br i1 %tobool128, label %land.lhs.true129, label %if.end239

land.lhs.true129:                                 ; preds = %land.lhs.true127
  %95 = load %struct.cv*, %struct.cv** %cv, align 8
  %sv_refcnt130 = getelementptr inbounds %struct.cv, %struct.cv* %95, i32 0, i32 1
  %96 = load i32, i32* %sv_refcnt130, align 8
  %cmp131 = icmp eq i32 %96, 1
  br i1 %cmp131, label %land.lhs.true133, label %if.end239

land.lhs.true133:                                 ; preds = %land.lhs.true129
  %97 = load %struct.cv*, %struct.cv** %cv, align 8
  %sv_flags134 = getelementptr inbounds %struct.cv, %struct.cv* %97, i32 0, i32 2
  %98 = load i32, i32* %sv_flags134, align 4
  %and135 = and i32 %98, 1048576
  %tobool136 = icmp ne i32 %and135, 0
  br i1 %tobool136, label %if.end239, label %land.lhs.true137

land.lhs.true137:                                 ; preds = %land.lhs.true133
  %99 = load %struct.cv*, %struct.cv** %cv, align 8
  %sv_flags138 = getelementptr inbounds %struct.cv, %struct.cv* %99, i32 0, i32 2
  %100 = load i32, i32* %sv_flags138, align 4
  %and139 = and i32 %100, 14680064
  %tobool140 = icmp ne i32 %and139, 0
  br i1 %tobool140, label %if.end239, label %land.lhs.true141

land.lhs.true141:                                 ; preds = %land.lhs.true137
  %101 = load %struct.cv*, %struct.cv** %cv, align 8
  %sv_flags142 = getelementptr inbounds %struct.cv, %struct.cv* %101, i32 0, i32 2
  %102 = load i32, i32* %sv_flags142, align 4
  %and143 = and i32 %102, 134283264
  %tobool144 = icmp ne i32 %and143, 0
  br i1 %tobool144, label %if.end239, label %land.lhs.true145

land.lhs.true145:                                 ; preds = %land.lhs.true141
  %103 = load %struct.cv*, %struct.cv** %cv, align 8
  %sv_any146 = getelementptr inbounds %struct.cv, %struct.cv* %103, i32 0, i32 0
  %104 = load %struct.xpvcv*, %struct.xpvcv** %sv_any146, align 8
  %105 = bitcast %struct.xpvcv* %104 to i8*
  %106 = bitcast i8* %105 to %struct.xpvcv*
  %xcv_stash = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %106, i32 0, i32 4
  %107 = load %struct.hv*, %struct.hv** %xcv_stash, align 8
  %add.ptr147 = getelementptr inbounds %struct.hv, %struct.hv* %107, i64 0
  %108 = load %struct.hv*, %struct.hv** %stash, align 8
  %cmp148 = icmp eq %struct.hv* %add.ptr147, %108
  br i1 %cmp148, label %land.lhs.true150, label %if.end239

land.lhs.true150:                                 ; preds = %land.lhs.true145
  %109 = load %struct.cv*, %struct.cv** %cv, align 8
  %sv_any151 = getelementptr inbounds %struct.cv, %struct.cv* %109, i32 0, i32 0
  %110 = load %struct.xpvcv*, %struct.xpvcv** %sv_any151, align 8
  %111 = bitcast %struct.xpvcv* %110 to i8*
  %112 = bitcast i8* %111 to %struct.xpvcv*
  %xcv_flags = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %112, i32 0, i32 12
  %113 = load i32, i32* %xcv_flags, align 4
  %and152 = and i32 %113, 32768
  %tobool153 = icmp ne i32 %and152, 0
  br i1 %tobool153, label %if.end239, label %land.lhs.true154

land.lhs.true154:                                 ; preds = %land.lhs.true150
  %114 = load %struct.cv*, %struct.cv** %cv, align 8
  %call155 = call %struct.gv* @S_CvGV(%struct.cv* %114)
  %115 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %cmp156 = icmp eq %struct.gv* %call155, %115
  br i1 %cmp156, label %land.lhs.true158, label %if.end239

land.lhs.true158:                                 ; preds = %land.lhs.true154
  %116 = load %struct.cv*, %struct.cv** %cv, align 8
  %sv_any159 = getelementptr inbounds %struct.cv, %struct.cv* %116, i32 0, i32 0
  %117 = load %struct.xpvcv*, %struct.xpvcv** %sv_any159, align 8
  %118 = bitcast %struct.xpvcv* %117 to i8*
  %119 = bitcast i8* %118 to %struct.xpvcv*
  %xcv_flags160 = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %119, i32 0, i32 12
  %120 = load i32, i32* %xcv_flags160, align 4
  %and161 = and i32 %120, 4
  %tobool162 = icmp ne i32 %and161, 0
  br i1 %tobool162, label %land.lhs.true163, label %if.end239

land.lhs.true163:                                 ; preds = %land.lhs.true158
  %121 = load %struct.cv*, %struct.cv** %cv, align 8
  %sv_any164 = getelementptr inbounds %struct.cv, %struct.cv* %121, i32 0, i32 0
  %122 = load %struct.xpvcv*, %struct.xpvcv** %sv_any164, align 8
  %123 = bitcast %struct.xpvcv* %122 to i8*
  %124 = bitcast i8* %123 to %struct.xpvcv*
  %xcv_flags165 = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %124, i32 0, i32 12
  %125 = load i32, i32* %xcv_flags165, align 4
  %and166 = and i32 %125, 1
  %tobool167 = icmp ne i32 %and166, 0
  br i1 %tobool167, label %if.end239, label %land.lhs.true168

land.lhs.true168:                                 ; preds = %land.lhs.true163
  %126 = load %struct.cv*, %struct.cv** %cv, align 8
  %sv_any169 = getelementptr inbounds %struct.cv, %struct.cv* %126, i32 0, i32 0
  %127 = load %struct.xpvcv*, %struct.xpvcv** %sv_any169, align 8
  %128 = bitcast %struct.xpvcv* %127 to i8*
  %129 = bitcast i8* %128 to %struct.xpvcv*
  %xcv_flags170 = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %129, i32 0, i32 12
  %130 = load i32, i32* %xcv_flags170, align 4
  %and171 = and i32 %130, 2
  %tobool172 = icmp ne i32 %and171, 0
  br i1 %tobool172, label %if.end239, label %land.lhs.true173

land.lhs.true173:                                 ; preds = %land.lhs.true168
  %131 = load %struct.cv*, %struct.cv** %cv, align 8
  %sv_any174 = getelementptr inbounds %struct.cv, %struct.cv* %131, i32 0, i32 0
  %132 = load %struct.xpvcv*, %struct.xpvcv** %sv_any174, align 8
  %133 = bitcast %struct.xpvcv* %132 to i8*
  %134 = bitcast i8* %133 to %struct.xpvcv*
  %xcv_flags175 = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %134, i32 0, i32 12
  %135 = load i32, i32* %xcv_flags175, align 4
  %and176 = and i32 %135, 256
  %tobool177 = icmp ne i32 %and176, 0
  br i1 %tobool177, label %if.end239, label %land.lhs.true178

land.lhs.true178:                                 ; preds = %land.lhs.true173
  %136 = load %struct.cv*, %struct.cv** %cv, align 8
  %sv_any179 = getelementptr inbounds %struct.cv, %struct.cv* %136, i32 0, i32 0
  %137 = load %struct.xpvcv*, %struct.xpvcv** %sv_any179, align 8
  %138 = bitcast %struct.xpvcv* %137 to i8*
  %139 = bitcast i8* %138 to %struct.xpvcv*
  %xcv_flags180 = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %139, i32 0, i32 12
  %140 = load i32, i32* %xcv_flags180, align 4
  %and181 = and i32 %140, 512
  %tobool182 = icmp ne i32 %and181, 0
  br i1 %tobool182, label %if.end239, label %land.lhs.true183

land.lhs.true183:                                 ; preds = %land.lhs.true178
  %141 = load %struct.cv*, %struct.cv** %cv, align 8
  %sv_any184 = getelementptr inbounds %struct.cv, %struct.cv* %141, i32 0, i32 0
  %142 = load %struct.xpvcv*, %struct.xpvcv** %sv_any184, align 8
  %143 = bitcast %struct.xpvcv* %142 to i8*
  %144 = bitcast i8* %143 to %struct.xpvcv*
  %xcv_flags185 = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %144, i32 0, i32 12
  %145 = load i32, i32* %xcv_flags185, align 4
  %and186 = and i32 %145, 32
  %tobool187 = icmp ne i32 %and186, 0
  br i1 %tobool187, label %if.end239, label %land.lhs.true188

land.lhs.true188:                                 ; preds = %land.lhs.true183
  %146 = load %struct.cv*, %struct.cv** %cv, align 8
  %sv_any189 = getelementptr inbounds %struct.cv, %struct.cv* %146, i32 0, i32 0
  %147 = load %struct.xpvcv*, %struct.xpvcv** %sv_any189, align 8
  %148 = bitcast %struct.xpvcv* %147 to i8*
  %149 = bitcast i8* %148 to %struct.xpvcv*
  %xcv_flags190 = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %149, i32 0, i32 12
  %150 = load i32, i32* %xcv_flags190, align 4
  %and191 = and i32 %150, 64
  %tobool192 = icmp ne i32 %and191, 0
  br i1 %tobool192, label %if.end239, label %land.lhs.true193

land.lhs.true193:                                 ; preds = %land.lhs.true188
  %151 = load %struct.cv*, %struct.cv** %cv, align 8
  %sv_any194 = getelementptr inbounds %struct.cv, %struct.cv* %151, i32 0, i32 0
  %152 = load %struct.xpvcv*, %struct.xpvcv** %sv_any194, align 8
  %153 = bitcast %struct.xpvcv* %152 to i8*
  %154 = bitcast i8* %153 to %struct.xpvcv*
  %xcv_flags195 = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %154, i32 0, i32 12
  %155 = load i32, i32* %xcv_flags195, align 4
  %and196 = and i32 %155, 128
  %tobool197 = icmp ne i32 %and196, 0
  br i1 %tobool197, label %if.end239, label %land.lhs.true198

land.lhs.true198:                                 ; preds = %land.lhs.true193
  %156 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_any199 = getelementptr inbounds %struct.gv, %struct.gv* %156, i32 0, i32 0
  %157 = load %struct.xpvgv*, %struct.xpvgv** %sv_any199, align 8
  %xiv_u200 = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %157, i32 0, i32 4
  %xivu_namehek201 = bitcast %union._xivu* %xiv_u200 to %struct.hek**
  %158 = load %struct.hek*, %struct.hek** %xivu_namehek201, align 8
  store %struct.hek* %158, %struct.hek** %namehek, align 8
  %tobool202 = icmp ne %struct.hek* %158, null
  br i1 %tobool202, label %land.lhs.true203, label %if.end239

land.lhs.true203:                                 ; preds = %land.lhs.true198
  %159 = load %struct.hv*, %struct.hv** %stash, align 8
  %160 = load %struct.hek*, %struct.hek** %namehek, align 8
  %hek_key204 = getelementptr inbounds %struct.hek, %struct.hek* %160, i32 0, i32 2
  %arraydecay205 = getelementptr inbounds [1 x i8], [1 x i8]* %hek_key204, i64 0, i64 0
  %161 = load %struct.hek*, %struct.hek** %namehek, align 8
  %hek_len206 = getelementptr inbounds %struct.hek, %struct.hek* %161, i32 0, i32 1
  %162 = load i32, i32* %hek_len206, align 4
  %conv207 = sext i32 %162 to i64
  %163 = load %struct.hek*, %struct.hek** %namehek, align 8
  %hek_key208 = getelementptr inbounds %struct.hek, %struct.hek* %163, i32 0, i32 2
  %arraydecay209 = getelementptr inbounds [1 x i8], [1 x i8]* %hek_key208, i64 0, i64 0
  %164 = load %struct.hek*, %struct.hek** %namehek, align 8
  %hek_len210 = getelementptr inbounds %struct.hek, %struct.hek* %164, i32 0, i32 1
  %165 = load i32, i32* %hek_len210, align 4
  %idx.ext211 = sext i32 %165 to i64
  %add.ptr212 = getelementptr inbounds i8, i8* %arraydecay209, i64 %idx.ext211
  %add.ptr213 = getelementptr inbounds i8, i8* %add.ptr212, i64 1
  %166 = load i8, i8* %add.ptr213, align 1
  %conv214 = zext i8 %166 to i32
  %and215 = and i32 %conv214, 1
  %167 = load %struct.hek*, %struct.hek** %namehek, align 8
  %hek_hash216 = getelementptr inbounds %struct.hek, %struct.hek* %167, i32 0, i32 0
  %168 = load i32, i32* %hek_hash216, align 4
  %call217 = call i8* @Perl_hv_common(%struct.hv* %159, %struct.sv* null, i8* %arraydecay205, i64 %conv207, i32 %and215, i32 32, %struct.sv* null, i32 %168)
  %169 = bitcast i8* %call217 to %struct.sv**
  store %struct.sv** %169, %struct.sv*** %gvp, align 8
  %tobool218 = icmp ne %struct.sv** %169, null
  br i1 %tobool218, label %land.lhs.true219, label %if.end239

land.lhs.true219:                                 ; preds = %land.lhs.true203
  %170 = load %struct.sv**, %struct.sv*** %gvp, align 8
  %171 = load %struct.sv*, %struct.sv** %170, align 8
  %172 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %173 = bitcast %struct.gv* %172 to %struct.sv*
  %cmp220 = icmp eq %struct.sv* %171, %173
  br i1 %cmp220, label %if.then222, label %if.end239

if.then222:                                       ; preds = %land.lhs.true219
  %174 = load %struct.cv*, %struct.cv** %cv, align 8
  %sv_any223 = getelementptr inbounds %struct.cv, %struct.cv* %174, i32 0, i32 0
  %175 = load %struct.xpvcv*, %struct.xpvcv** %sv_any223, align 8
  %176 = bitcast %struct.xpvcv* %175 to i8*
  %177 = bitcast i8* %176 to %struct.xpvcv*
  %xcv_start_u = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %177, i32 0, i32 5
  %xcv_xsubany = bitcast %union.anon.8* %xcv_start_u to %union.any*
  %any_ptr = bitcast %union.any* %xcv_xsubany to i8**
  %178 = load i8*, i8** %any_ptr, align 8
  %179 = bitcast i8* %178 to %struct.sv*
  %call224 = call %struct.sv* @S_SvREFCNT_inc(%struct.sv* %179)
  store %struct.sv* %call224, %struct.sv** %value, align 8
  %180 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_any225 = getelementptr inbounds %struct.gv, %struct.gv* %180, i32 0, i32 0
  %181 = load %struct.xpvgv*, %struct.xpvgv** %sv_any225, align 8
  %xpv_cur226 = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %181, i32 0, i32 2
  %182 = load i64, i64* %xpv_cur226, align 8
  %and227 = and i64 %182, 128
  %tobool228 = icmp ne i64 %and227, 0
  %lnot = xor i1 %tobool228, true
  %lnot229 = xor i1 %lnot, true
  %frombool = zext i1 %lnot229 to i8
  store i8 %frombool, i8* %imported, align 1
  %183 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_refcnt230 = getelementptr inbounds %struct.gv, %struct.gv* %183, i32 0, i32 1
  store i32 0, i32* %sv_refcnt230, align 8
  %184 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %185 = bitcast %struct.gv* %184 to %struct.sv*
  call void @Perl_sv_clear(%struct.sv* %185)
  %186 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_refcnt231 = getelementptr inbounds %struct.gv, %struct.gv* %186, i32 0, i32 1
  store i32 1, i32* %sv_refcnt231, align 8
  %187 = load i8, i8* %imported, align 1
  %tobool232 = trunc i8 %187 to i1
  %conv233 = zext i1 %tobool232 to i32
  %mul = mul nsw i32 32768, %conv233
  %or = or i32 2049, %mul
  %188 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_flags234 = getelementptr inbounds %struct.gv, %struct.gv* %188, i32 0, i32 2
  store i32 %or, i32* %sv_flags234, align 4
  %189 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_u235 = getelementptr inbounds %struct.gv, %struct.gv* %189, i32 0, i32 3
  %svu_iv = bitcast %union.anon.6* %sv_u235 to i64*
  %190 = bitcast i64* %svu_iv to i8*
  %add.ptr236 = getelementptr inbounds i8, i8* %190, i64 sub (i64 0, i64 ptrtoint (i64* getelementptr inbounds (%struct.xpviv, %struct.xpviv* null, i32 0, i32 4, i32 0) to i64))
  %191 = bitcast i8* %add.ptr236 to %struct.xpvgv*
  %192 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_any237 = getelementptr inbounds %struct.gv, %struct.gv* %192, i32 0, i32 0
  store %struct.xpvgv* %191, %struct.xpvgv** %sv_any237, align 8
  br label %do.body

do.body:                                          ; preds = %if.then222
  %193 = load %struct.sv*, %struct.sv** %value, align 8
  %194 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_u238 = getelementptr inbounds %struct.gv, %struct.gv* %194, i32 0, i32 3
  %svu_rv = bitcast %union.anon.6* %sv_u238 to %struct.sv**
  store %struct.sv* %193, %struct.sv** %svu_rv, align 8
  br label %do.end

do.end:                                           ; preds = %do.body
  br label %if.end239

if.end239:                                        ; preds = %do.end, %land.lhs.true219, %land.lhs.true203, %land.lhs.true198, %land.lhs.true193, %land.lhs.true188, %land.lhs.true183, %land.lhs.true178, %land.lhs.true173, %land.lhs.true168, %land.lhs.true163, %land.lhs.true158, %land.lhs.true154, %land.lhs.true150, %land.lhs.true145, %land.lhs.true141, %land.lhs.true137, %land.lhs.true133, %land.lhs.true129, %land.lhs.true127, %if.else
  br label %if.end240

if.end240:                                        ; preds = %if.then, %if.then79, %if.then86, %if.then99, %if.then105, %if.end239, %if.then113
  ret void
}

declare dso_local void @Perl_sv_clear(%struct.sv*) #1

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.gv* @Perl_gv_override(i8* %name, i64 %len) #0 {
entry:
  %retval = alloca %struct.gv*, align 8
  %name.addr = alloca i8*, align 8
  %len.addr = alloca i64, align 8
  %gv = alloca %struct.gv*, align 8
  %gvp = alloca %struct.gv**, align 8
  store i8* %name, i8** %name.addr, align 8
  store i64 %len, i64* %len.addr, align 8
  %0 = load i8*, i8** %name.addr, align 8
  %1 = load i64, i64* %len.addr, align 8
  %call = call %struct.gv* @Perl_gv_fetchpvn_flags(i8* %0, i64 %1, i32 128, i32 13)
  store %struct.gv* %call, %struct.gv** %gv, align 8
  %2 = load %struct.gv*, %struct.gv** %gv, align 8
  %tobool = icmp ne %struct.gv* %2, null
  br i1 %tobool, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %3 = load %struct.gv*, %struct.gv** %gv, align 8
  %sv_u = getelementptr inbounds %struct.gv, %struct.gv* %3, i32 0, i32 3
  %svu_gp = bitcast %union.anon.6* %sv_u to %struct.gp**
  %4 = load %struct.gp*, %struct.gp** %svu_gp, align 8
  %add.ptr = getelementptr inbounds %struct.gp, %struct.gp* %4, i64 0
  %gp_cvgen = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr, i32 0, i32 3
  %5 = load i32, i32* %gp_cvgen, align 8
  %tobool1 = icmp ne i32 %5, 0
  br i1 %tobool1, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true
  br i1 false, label %land.lhs.true6, label %if.end

cond.false:                                       ; preds = %land.lhs.true
  %6 = load %struct.gv*, %struct.gv** %gv, align 8
  %sv_u2 = getelementptr inbounds %struct.gv, %struct.gv* %6, i32 0, i32 3
  %svu_gp3 = bitcast %union.anon.6* %sv_u2 to %struct.gp**
  %7 = load %struct.gp*, %struct.gp** %svu_gp3, align 8
  %add.ptr4 = getelementptr inbounds %struct.gp, %struct.gp* %7, i64 0
  %gp_cv = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr4, i32 0, i32 2
  %8 = load %struct.cv*, %struct.cv** %gp_cv, align 8
  %tobool5 = icmp ne %struct.cv* %8, null
  br i1 %tobool5, label %land.lhs.true6, label %if.end

land.lhs.true6:                                   ; preds = %cond.false, %cond.true
  %9 = load %struct.gv*, %struct.gv** %gv, align 8
  %sv_any = getelementptr inbounds %struct.gv, %struct.gv* %9, i32 0, i32 0
  %10 = load %struct.xpvgv*, %struct.xpvgv** %sv_any, align 8
  %xpv_cur = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %10, i32 0, i32 2
  %11 = load i64, i64* %xpv_cur, align 8
  %and = and i64 %11, 128
  %tobool7 = icmp ne i64 %and, 0
  br i1 %tobool7, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true6
  %12 = load %struct.gv*, %struct.gv** %gv, align 8
  store %struct.gv* %12, %struct.gv** %retval, align 8
  br label %return

if.end:                                           ; preds = %land.lhs.true6, %cond.false, %cond.true, %entry
  %13 = load %struct.hv*, %struct.hv** @PL_globalstash, align 8
  %14 = load i8*, i8** %name.addr, align 8
  %15 = load i64, i64* %len.addr, align 8
  %conv = trunc i64 %15 to i32
  %call8 = call i8* @Perl_hv_common_key_len(%struct.hv* %13, i8* %14, i32 %conv, i32 32, %struct.sv* null, i32 0)
  %16 = bitcast i8* %call8 to %struct.sv**
  %17 = bitcast %struct.sv** %16 to %struct.gv**
  store %struct.gv** %17, %struct.gv*** %gvp, align 8
  %18 = load %struct.gv**, %struct.gv*** %gvp, align 8
  %tobool9 = icmp ne %struct.gv** %18, null
  br i1 %tobool9, label %cond.true10, label %cond.false11

cond.true10:                                      ; preds = %if.end
  %19 = load %struct.gv**, %struct.gv*** %gvp, align 8
  %20 = load %struct.gv*, %struct.gv** %19, align 8
  br label %cond.end

cond.false11:                                     ; preds = %if.end
  br label %cond.end

cond.end:                                         ; preds = %cond.false11, %cond.true10
  %cond = phi %struct.gv* [ %20, %cond.true10 ], [ null, %cond.false11 ]
  store %struct.gv* %cond, %struct.gv** %gv, align 8
  %21 = load %struct.gv*, %struct.gv** %gv, align 8
  %tobool12 = icmp ne %struct.gv* %21, null
  br i1 %tobool12, label %land.lhs.true13, label %if.end23

land.lhs.true13:                                  ; preds = %cond.end
  %22 = load %struct.gv*, %struct.gv** %gv, align 8
  %sv_flags = getelementptr inbounds %struct.gv, %struct.gv* %22, i32 0, i32 2
  %23 = load i32, i32* %sv_flags, align 4
  %and14 = and i32 %23, 255
  %cmp = icmp eq i32 %and14, 9
  br i1 %cmp, label %if.end23, label %if.then16

if.then16:                                        ; preds = %land.lhs.true13
  %24 = load %struct.gv*, %struct.gv** %gv, align 8
  %sv_flags17 = getelementptr inbounds %struct.gv, %struct.gv* %24, i32 0, i32 2
  %25 = load i32, i32* %sv_flags17, align 4
  %and18 = and i32 %25, 34816
  %cmp19 = icmp eq i32 %and18, 34816
  br i1 %cmp19, label %if.end22, label %if.then21

if.then21:                                        ; preds = %if.then16
  store %struct.gv* null, %struct.gv** %retval, align 8
  br label %return

if.end22:                                         ; preds = %if.then16
  %26 = load %struct.gv*, %struct.gv** %gv, align 8
  %27 = load %struct.hv*, %struct.hv** @PL_globalstash, align 8
  %28 = load i8*, i8** %name.addr, align 8
  %29 = load i64, i64* %len.addr, align 8
  call void @Perl_gv_init_pvn(%struct.gv* %26, %struct.hv* %27, i8* %28, i64 %29, i32 0)
  %30 = load %struct.gv*, %struct.gv** %gv, align 8
  store %struct.gv* %30, %struct.gv** %retval, align 8
  br label %return

if.end23:                                         ; preds = %land.lhs.true13, %cond.end
  %31 = load %struct.gv*, %struct.gv** %gv, align 8
  %tobool24 = icmp ne %struct.gv* %31, null
  br i1 %tobool24, label %land.lhs.true25, label %cond.false44

land.lhs.true25:                                  ; preds = %if.end23
  %32 = load %struct.gv*, %struct.gv** %gv, align 8
  %sv_u26 = getelementptr inbounds %struct.gv, %struct.gv* %32, i32 0, i32 3
  %svu_gp27 = bitcast %union.anon.6* %sv_u26 to %struct.gp**
  %33 = load %struct.gp*, %struct.gp** %svu_gp27, align 8
  %add.ptr28 = getelementptr inbounds %struct.gp, %struct.gp* %33, i64 0
  %gp_cvgen29 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr28, i32 0, i32 3
  %34 = load i32, i32* %gp_cvgen29, align 8
  %tobool30 = icmp ne i32 %34, 0
  br i1 %tobool30, label %cond.true31, label %cond.false32

cond.true31:                                      ; preds = %land.lhs.true25
  br i1 false, label %land.lhs.true38, label %cond.false44

cond.false32:                                     ; preds = %land.lhs.true25
  %35 = load %struct.gv*, %struct.gv** %gv, align 8
  %sv_u33 = getelementptr inbounds %struct.gv, %struct.gv* %35, i32 0, i32 3
  %svu_gp34 = bitcast %union.anon.6* %sv_u33 to %struct.gp**
  %36 = load %struct.gp*, %struct.gp** %svu_gp34, align 8
  %add.ptr35 = getelementptr inbounds %struct.gp, %struct.gp* %36, i64 0
  %gp_cv36 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr35, i32 0, i32 2
  %37 = load %struct.cv*, %struct.cv** %gp_cv36, align 8
  %tobool37 = icmp ne %struct.cv* %37, null
  br i1 %tobool37, label %land.lhs.true38, label %cond.false44

land.lhs.true38:                                  ; preds = %cond.false32, %cond.true31
  %38 = load %struct.gv*, %struct.gv** %gv, align 8
  %sv_any39 = getelementptr inbounds %struct.gv, %struct.gv* %38, i32 0, i32 0
  %39 = load %struct.xpvgv*, %struct.xpvgv** %sv_any39, align 8
  %xpv_cur40 = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %39, i32 0, i32 2
  %40 = load i64, i64* %xpv_cur40, align 8
  %and41 = and i64 %40, 128
  %tobool42 = icmp ne i64 %and41, 0
  br i1 %tobool42, label %cond.true43, label %cond.false44

cond.true43:                                      ; preds = %land.lhs.true38
  %41 = load %struct.gv*, %struct.gv** %gv, align 8
  br label %cond.end45

cond.false44:                                     ; preds = %land.lhs.true38, %cond.false32, %cond.true31, %if.end23
  br label %cond.end45

cond.end45:                                       ; preds = %cond.false44, %cond.true43
  %cond46 = phi %struct.gv* [ %41, %cond.true43 ], [ null, %cond.false44 ]
  store %struct.gv* %cond46, %struct.gv** %retval, align 8
  br label %return

return:                                           ; preds = %cond.end45, %if.end22, %if.then21, %if.then
  %42 = load %struct.gv*, %struct.gv** %retval, align 8
  ret %struct.gv* %42
}

declare dso_local void @Perl_sv_free2(%struct.sv*, i32) #1

; Function Attrs: noinline nounwind uwtable
define internal %struct.gv* @S_maybe_add_coresub(%struct.hv* %stash, %struct.gv* %gv, i8* %name, i64 %len) #0 {
entry:
  %retval = alloca %struct.gv*, align 8
  %stash.addr = alloca %struct.hv*, align 8
  %gv.addr = alloca %struct.gv*, align 8
  %name.addr = alloca i8*, align 8
  %len.addr = alloca i64, align 8
  %code = alloca i32, align 4
  %cv = alloca %struct.cv*, align 8
  %oldcompcv = alloca %struct.cv*, align 8
  %opnum = alloca i32, align 4
  %ampable = alloca i8, align 1
  %oldcurcop = alloca %struct.cop*, align 8
  %oldparser = alloca %struct.yy_parser*, align 8
  %oldsavestack_ix = alloca i32, align 4
  %opnumsv = alloca %struct.sv*, align 8
  store %struct.hv* %stash, %struct.hv** %stash.addr, align 8
  store %struct.gv* %gv, %struct.gv** %gv.addr, align 8
  store i8* %name, i8** %name.addr, align 8
  store i64 %len, i64* %len.addr, align 8
  %0 = load i8*, i8** %name.addr, align 8
  %1 = load i64, i64* %len.addr, align 8
  %conv = trunc i64 %1 to i32
  %call = call i32 @Perl_keyword(i8* %0, i32 %conv, i1 zeroext true)
  store i32 %call, i32* %code, align 4
  store %struct.cv* null, %struct.cv** %oldcompcv, align 8
  store i32 0, i32* %opnum, align 4
  store i8 1, i8* %ampable, align 1
  store %struct.cop* null, %struct.cop** %oldcurcop, align 8
  store %struct.yy_parser* null, %struct.yy_parser** %oldparser, align 8
  store i32 0, i32* %oldsavestack_ix, align 4
  %2 = load i32, i32* %code, align 4
  %tobool = icmp ne i32 %2, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store %struct.gv* null, %struct.gv** %retval, align 8
  br label %return

if.end:                                           ; preds = %entry
  %3 = load i32, i32* %code, align 4
  %cmp = icmp slt i32 %3, 0
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end
  %4 = load i32, i32* %code, align 4
  %sub = sub nsw i32 0, %4
  br label %cond.end

cond.false:                                       ; preds = %if.end
  %5 = load i32, i32* %code, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub, %cond.true ], [ %5, %cond.false ]
  switch i32 %cond, label %sw.epilog [
    i32 4, label %sw.bb
    i32 5, label %sw.bb
    i32 17, label %sw.bb
    i32 7, label %sw.bb
    i32 8, label %sw.bb
    i32 13, label %sw.bb
    i32 33, label %sw.bb
    i32 40, label %sw.bb
    i32 10, label %sw.bb
    i32 44, label %sw.bb
    i32 45, label %sw.bb
    i32 47, label %sw.bb
    i32 48, label %sw.bb
    i32 11, label %sw.bb
    i32 56, label %sw.bb
    i32 57, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 70, label %sw.bb
    i32 72, label %sw.bb
    i32 99, label %sw.bb
    i32 102, label %sw.bb
    i32 103, label %sw.bb
    i32 104, label %sw.bb
    i32 106, label %sw.bb
    i32 12, label %sw.bb
    i32 113, label %sw.bb
    i32 116, label %sw.bb
    i32 120, label %sw.bb
    i32 125, label %sw.bb
    i32 126, label %sw.bb
    i32 127, label %sw.bb
    i32 133, label %sw.bb
    i32 134, label %sw.bb
    i32 135, label %sw.bb
    i32 136, label %sw.bb
    i32 141, label %sw.bb
    i32 143, label %sw.bb
    i32 145, label %sw.bb
    i32 149, label %sw.bb
    i32 150, label %sw.bb
    i32 153, label %sw.bb
    i32 154, label %sw.bb
    i32 155, label %sw.bb
    i32 157, label %sw.bb
    i32 158, label %sw.bb
    i32 166, label %sw.bb
    i32 169, label %sw.bb
    i32 171, label %sw.bb
    i32 176, label %sw.bb
    i32 177, label %sw.bb
    i32 205, label %sw.bb
    i32 212, label %sw.bb
    i32 214, label %sw.bb
    i32 229, label %sw.bb
    i32 9, label %sw.bb
    i32 235, label %sw.bb
    i32 240, label %sw.bb
    i32 241, label %sw.bb
    i32 249, label %sw.bb
    i32 250, label %sw.bb
    i32 252, label %sw.bb
    i32 253, label %sw.bb
    i32 254, label %sw.bb
    i32 24, label %sw.bb2
    i32 26, label %sw.bb2
    i32 27, label %sw.bb2
    i32 41, label %sw.bb2
    i32 42, label %sw.bb2
    i32 46, label %sw.bb2
    i32 55, label %sw.bb2
    i32 59, label %sw.bb2
    i32 60, label %sw.bb2
    i32 111, label %sw.bb2
    i32 124, label %sw.bb2
    i32 147, label %sw.bb2
    i32 152, label %sw.bb2
    i32 195, label %sw.bb2
    i32 206, label %sw.bb2
    i32 207, label %sw.bb2
    i32 211, label %sw.bb2
    i32 221, label %sw.bb2
    i32 230, label %sw.bb2
    i32 236, label %sw.bb2
    i32 238, label %sw.bb2
    i32 243, label %sw.bb2
  ]

sw.bb:                                            ; preds = %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end
  store %struct.gv* null, %struct.gv** %retval, align 8
  br label %return

sw.bb2:                                           ; preds = %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end
  store i8 0, i8* %ampable, align 1
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.bb2, %cond.end
  %6 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %tobool3 = icmp ne %struct.gv* %6, null
  br i1 %tobool3, label %if.end6, label %if.then4

if.then4:                                         ; preds = %sw.epilog
  %call5 = call %struct.sv* @Perl_newSV(i64 0)
  %7 = bitcast %struct.sv* %call5 to %struct.gv*
  store %struct.gv* %7, %struct.gv** %gv.addr, align 8
  %8 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %9 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %10 = load i8*, i8** %name.addr, align 8
  %11 = load i64, i64* %len.addr, align 8
  call void @Perl_gv_init_pvn(%struct.gv* %8, %struct.hv* %9, i8* %10, i64 %11, i32 2)
  br label %if.end6

if.end6:                                          ; preds = %if.then4, %sw.epilog
  %12 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_any = getelementptr inbounds %struct.gv, %struct.gv* %12, i32 0, i32 0
  %13 = load %struct.xpvgv*, %struct.xpvgv** %sv_any, align 8
  %xpv_cur = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %13, i32 0, i32 2
  %14 = load i64, i64* %xpv_cur, align 8
  %or = or i64 %14, 2
  store i64 %or, i64* %xpv_cur, align 8
  %15 = load i8, i8* %ampable, align 1
  %tobool7 = trunc i8 %15 to i1
  br i1 %tobool7, label %if.then8, label %if.else

if.then8:                                         ; preds = %if.end6
  call void @Perl_push_scope()
  %16 = load %struct.cop*, %struct.cop** @PL_curcop, align 8
  store %struct.cop* %16, %struct.cop** %oldcurcop, align 8
  %17 = load %struct.yy_parser*, %struct.yy_parser** @PL_parser, align 8
  store %struct.yy_parser* %17, %struct.yy_parser** %oldparser, align 8
  call void @Perl_lex_start(%struct.sv* null, %struct._PerlIO** null, i32 0)
  %18 = load %struct.cv*, %struct.cv** @PL_compcv, align 8
  store %struct.cv* %18, %struct.cv** %oldcompcv, align 8
  store %struct.cv* null, %struct.cv** @PL_compcv, align 8
  %call9 = call i32 @Perl_start_subparse(i32 0, i32 0)
  store i32 %call9, i32* %oldsavestack_ix, align 4
  %19 = load %struct.cv*, %struct.cv** @PL_compcv, align 8
  store %struct.cv* %19, %struct.cv** %cv, align 8
  br label %if.end17

if.else:                                          ; preds = %if.end6
  %call10 = call %struct.sv* @Perl_newSV_type(i32 13)
  %20 = bitcast %struct.sv* %call10 to i8*
  %21 = bitcast i8* %20 to %struct.cv*
  store %struct.cv* %21, %struct.cv** %cv, align 8
  %22 = load %struct.cv*, %struct.cv** %cv, align 8
  %23 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_u = getelementptr inbounds %struct.gv, %struct.gv* %23, i32 0, i32 3
  %svu_gp = bitcast %union.anon.6* %sv_u to %struct.gp**
  %24 = load %struct.gp*, %struct.gp** %svu_gp, align 8
  %add.ptr = getelementptr inbounds %struct.gp, %struct.gp* %24, i64 0
  %gp_cv = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr, i32 0, i32 2
  store %struct.cv* %22, %struct.cv** %gp_cv, align 8
  %25 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_u11 = getelementptr inbounds %struct.gv, %struct.gv* %25, i32 0, i32 3
  %svu_gp12 = bitcast %union.anon.6* %sv_u11 to %struct.gp**
  %26 = load %struct.gp*, %struct.gp** %svu_gp12, align 8
  %add.ptr13 = getelementptr inbounds %struct.gp, %struct.gp* %26, i64 0
  %gp_cvgen = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr13, i32 0, i32 3
  store i32 0, i32* %gp_cvgen, align 8
  %27 = load %struct.cv*, %struct.cv** %cv, align 8
  %sv_any14 = getelementptr inbounds %struct.cv, %struct.cv* %27, i32 0, i32 0
  %28 = load %struct.xpvcv*, %struct.xpvcv** %sv_any14, align 8
  %29 = bitcast %struct.xpvcv* %28 to i8*
  %30 = bitcast i8* %29 to %struct.xpvcv*
  %xcv_flags = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %30, i32 0, i32 12
  %31 = load i32, i32* %xcv_flags, align 4
  %or15 = or i32 %31, 8
  store i32 %or15, i32* %xcv_flags, align 4
  %32 = load %struct.cv*, %struct.cv** %cv, align 8
  %sv_any16 = getelementptr inbounds %struct.cv, %struct.cv* %32, i32 0, i32 0
  %33 = load %struct.xpvcv*, %struct.xpvcv** %sv_any16, align 8
  %34 = bitcast %struct.xpvcv* %33 to i8*
  %35 = bitcast i8* %34 to %struct.xpvcv*
  %xcv_root_u = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %35, i32 0, i32 6
  %xcv_xsub = bitcast %union.anon.9* %xcv_root_u to void (%struct.cv*)**
  store void (%struct.cv*)* @core_xsub, void (%struct.cv*)** %xcv_xsub, align 8
  br label %if.end17

if.end17:                                         ; preds = %if.else, %if.then8
  %36 = load %struct.cv*, %struct.cv** %cv, align 8
  %37 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  call void @Perl_cvgv_set(%struct.cv* %36, %struct.gv* %37)
  %call18 = call %struct.gv* @Perl_gv_fetchfile(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @S_maybe_add_coresub.file, i64 0, i64 0))
  %38 = load %struct.cv*, %struct.cv** %cv, align 8
  %sv_any19 = getelementptr inbounds %struct.cv, %struct.cv* %38, i32 0, i32 0
  %39 = load %struct.xpvcv*, %struct.xpvcv** %sv_any19, align 8
  %40 = bitcast %struct.xpvcv* %39 to i8*
  %41 = bitcast i8* %40 to %struct.xpvcv*
  %xcv_file = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %41, i32 0, i32 8
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @S_maybe_add_coresub.file, i64 0, i64 0), i8** %xcv_file, align 8
  %42 = load %struct.cv*, %struct.cv** %cv, align 8
  %43 = bitcast %struct.cv* %42 to %struct.sv*
  %44 = load i8*, i8** %name.addr, align 8
  %45 = load i32, i32* %code, align 4
  %call20 = call %struct.sv* @Perl_core_prototype(%struct.sv* %43, i8* %44, i32 %45, i32* %opnum)
  %46 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %tobool21 = icmp ne %struct.hv* %46, null
  br i1 %tobool21, label %if.then22, label %if.end25

if.then22:                                        ; preds = %if.end17
  %47 = load %struct.hv*, %struct.hv** %stash.addr, align 8
  %48 = load i8*, i8** %name.addr, align 8
  %49 = load i64, i64* %len.addr, align 8
  %conv23 = trunc i64 %49 to i32
  %50 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %51 = bitcast %struct.gv* %50 to %struct.sv*
  %call24 = call i8* @Perl_hv_common_key_len(%struct.hv* %47, i8* %48, i32 %conv23, i32 36, %struct.sv* %51, i32 0)
  %52 = bitcast i8* %call24 to %struct.sv**
  br label %if.end25

if.end25:                                         ; preds = %if.then22, %if.end17
  %53 = load i8, i8* %ampable, align 1
  %tobool26 = trunc i8 %53 to i1
  br i1 %tobool26, label %if.then27, label %if.end59

if.then27:                                        ; preds = %if.end25
  %54 = load %struct.cv*, %struct.cv** %cv, align 8
  %sv_any28 = getelementptr inbounds %struct.cv, %struct.cv* %54, i32 0, i32 0
  %55 = load %struct.xpvcv*, %struct.xpvcv** %sv_any28, align 8
  %56 = bitcast %struct.xpvcv* %55 to i8*
  %57 = bitcast i8* %56 to %struct.xpvcv*
  %xcv_flags29 = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %57, i32 0, i32 12
  %58 = load i32, i32* %xcv_flags29, align 4
  %or30 = or i32 %58, 2
  store i32 %or30, i32* %xcv_flags29, align 4
  %59 = load i32, i32* %oldsavestack_ix, align 4
  %60 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %61 = bitcast %struct.gv* %60 to %struct.op*
  %62 = load i32, i32* %opnum, align 4
  %tobool31 = icmp ne i32 %62, 0
  br i1 %tobool31, label %cond.true32, label %cond.false35

cond.true32:                                      ; preds = %if.then27
  %63 = load i32, i32* %opnum, align 4
  %conv33 = sext i32 %63 to i64
  %call34 = call %struct.sv* @Perl_newSVuv(i64 %conv33)
  br label %cond.end37

cond.false35:                                     ; preds = %if.then27
  %64 = load i8*, i8** %name.addr, align 8
  %65 = load i64, i64* %len.addr, align 8
  %call36 = call %struct.sv* @Perl_newSVpvn(i8* %64, i64 %65)
  br label %cond.end37

cond.end37:                                       ; preds = %cond.false35, %cond.true32
  %cond38 = phi %struct.sv* [ %call34, %cond.true32 ], [ %call36, %cond.false35 ]
  %66 = load i32, i32* %code, align 4
  %67 = load i32, i32* %opnum, align 4
  %call39 = call %struct.op* @Perl_coresub_op(%struct.sv* %cond38, i32 %66, i32 %67)
  %call40 = call %struct.cv* @Perl_newATTRSUB_x(i32 %59, %struct.op* %61, %struct.op* null, %struct.op* null, %struct.op* %call39, i1 zeroext true)
  store %struct.cv* %call40, %struct.cv** %cv, align 8
  %cmp41 = icmp ne %struct.cv* %call40, null
  br i1 %cmp41, label %if.then43, label %if.end58

if.then43:                                        ; preds = %cond.end37
  %68 = load i32, i32* %opnum, align 4
  %cmp44 = icmp ne i32 %68, 122
  br i1 %cmp44, label %land.lhs.true, label %if.end57

land.lhs.true:                                    ; preds = %if.then43
  %69 = load i32, i32* %opnum, align 4
  %cmp46 = icmp ne i32 %69, 121
  br i1 %cmp46, label %land.lhs.true48, label %if.end57

land.lhs.true48:                                  ; preds = %land.lhs.true
  %70 = load i32, i32* %opnum, align 4
  %cmp49 = icmp ne i32 %70, 46
  br i1 %cmp49, label %land.lhs.true51, label %if.end57

land.lhs.true51:                                  ; preds = %land.lhs.true48
  %71 = load i32, i32* %opnum, align 4
  %cmp52 = icmp ne i32 %71, 44
  br i1 %cmp52, label %if.then54, label %if.end57

if.then54:                                        ; preds = %land.lhs.true51
  %72 = load %struct.cv*, %struct.cv** %cv, align 8
  %sv_any55 = getelementptr inbounds %struct.cv, %struct.cv* %72, i32 0, i32 0
  %73 = load %struct.xpvcv*, %struct.xpvcv** %sv_any55, align 8
  %74 = bitcast %struct.xpvcv* %73 to i8*
  %75 = bitcast i8* %74 to %struct.xpvcv*
  %xcv_flags56 = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %75, i32 0, i32 12
  %76 = load i32, i32* %xcv_flags56, align 4
  %and = and i32 %76, -3
  store i32 %and, i32* %xcv_flags56, align 4
  br label %if.end57

if.end57:                                         ; preds = %if.then54, %land.lhs.true51, %land.lhs.true48, %land.lhs.true, %if.then43
  br label %if.end58

if.end58:                                         ; preds = %if.end57, %cond.end37
  call void @Perl_pop_scope()
  %77 = load %struct.yy_parser*, %struct.yy_parser** %oldparser, align 8
  store %struct.yy_parser* %77, %struct.yy_parser** @PL_parser, align 8
  %78 = load %struct.cop*, %struct.cop** %oldcurcop, align 8
  store %struct.cop* %78, %struct.cop** @PL_curcop, align 8
  %79 = load %struct.cv*, %struct.cv** %oldcompcv, align 8
  store %struct.cv* %79, %struct.cv** @PL_compcv, align 8
  br label %if.end59

if.end59:                                         ; preds = %if.end58, %if.end25
  %80 = load %struct.cv*, %struct.cv** %cv, align 8
  %tobool60 = icmp ne %struct.cv* %80, null
  br i1 %tobool60, label %if.then61, label %if.end74

if.then61:                                        ; preds = %if.end59
  %81 = load i32, i32* %opnum, align 4
  %tobool62 = icmp ne i32 %81, 0
  br i1 %tobool62, label %cond.true63, label %cond.false66

cond.true63:                                      ; preds = %if.then61
  %82 = load i32, i32* %opnum, align 4
  %conv64 = sext i32 %82 to i64
  %call65 = call %struct.sv* @Perl_newSVuv(i64 %conv64)
  br label %cond.end67

cond.false66:                                     ; preds = %if.then61
  br label %cond.end67

cond.end67:                                       ; preds = %cond.false66, %cond.true63
  %cond68 = phi %struct.sv* [ %call65, %cond.true63 ], [ null, %cond.false66 ]
  store %struct.sv* %cond68, %struct.sv** %opnumsv, align 8
  %83 = load %struct.cv*, %struct.cv** %cv, align 8
  %84 = load %struct.sv*, %struct.sv** %opnumsv, align 8
  %tobool69 = icmp ne %struct.sv* %84, null
  br i1 %tobool69, label %cond.true70, label %cond.false71

cond.true70:                                      ; preds = %cond.end67
  %85 = load %struct.sv*, %struct.sv** %opnumsv, align 8
  br label %cond.end72

cond.false71:                                     ; preds = %cond.end67
  %86 = load %struct.cv*, %struct.cv** %cv, align 8
  %87 = bitcast %struct.cv* %86 to %struct.sv*
  br label %cond.end72

cond.end72:                                       ; preds = %cond.false71, %cond.true70
  %cond73 = phi %struct.sv* [ %85, %cond.true70 ], [ %87, %cond.false71 ]
  call void @Perl_cv_set_call_checker(%struct.cv* %83, %struct.op* (%struct.op*, %struct.gv*, %struct.sv*)* @Perl_ck_entersub_args_core, %struct.sv* %cond73)
  %88 = load %struct.sv*, %struct.sv** %opnumsv, align 8
  %89 = bitcast %struct.sv* %88 to i8*
  %90 = bitcast i8* %89 to %struct.sv*
  call void @S_SvREFCNT_dec(%struct.sv* %90)
  br label %if.end74

if.end74:                                         ; preds = %cond.end72, %if.end59
  %91 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  store %struct.gv* %91, %struct.gv** %retval, align 8
  br label %return

return:                                           ; preds = %if.end74, %sw.bb, %if.then
  %92 = load %struct.gv*, %struct.gv** %retval, align 8
  ret %struct.gv* %92
}

declare dso_local %struct.av* @Perl_mro_get_linear_isa(%struct.hv*) #1

declare dso_local void @Perl_ck_warner(i32, i8*, ...) #1

declare dso_local i32 @Perl_keyword(i8*, i32, i1 zeroext) #1

declare dso_local void @Perl_lex_start(%struct.sv*, %struct._PerlIO**, i32) #1

declare dso_local i32 @Perl_start_subparse(i32, i32) #1

; Function Attrs: noinline nounwind uwtable
define internal void @core_xsub(%struct.cv* %cv) #0 {
entry:
  %cv.addr = alloca %struct.cv*, align 8
  store %struct.cv* %cv, %struct.cv** %cv.addr, align 8
  %0 = load %struct.cv*, %struct.cv** %cv.addr, align 8
  %call = call %struct.gv* @S_CvGV(%struct.cv* %0)
  %sv_any = getelementptr inbounds %struct.gv, %struct.gv* %call, i32 0, i32 0
  %1 = load %struct.xpvgv*, %struct.xpvgv** %sv_any, align 8
  %xiv_u = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %1, i32 0, i32 4
  %xivu_namehek = bitcast %union._xivu* %xiv_u to %struct.hek**
  %2 = load %struct.hek*, %struct.hek** %xivu_namehek, align 8
  %hek_key = getelementptr inbounds %struct.hek, %struct.hek* %2, i32 0, i32 2
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %hek_key, i64 0, i64 0
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.50, i64 0, i64 0), i8* %arraydecay)
  ret void
}

declare dso_local %struct.sv* @Perl_core_prototype(%struct.sv*, i8*, i32, i32*) #1

declare dso_local %struct.cv* @Perl_newATTRSUB_x(i32, %struct.op*, %struct.op*, %struct.op*, %struct.op*, i1 zeroext) #1

declare dso_local %struct.op* @Perl_coresub_op(%struct.sv*, i32, i32) #1

declare dso_local %struct.sv* @Perl_newSVuv(i64) #1

declare dso_local void @Perl_cv_set_call_checker(%struct.cv*, %struct.op* (%struct.op*, %struct.gv*, %struct.sv*)*, %struct.sv*) #1

declare dso_local %struct.op* @Perl_ck_entersub_args_core(%struct.op*, %struct.gv*, %struct.sv*) #1

; Function Attrs: noinline nounwind uwtable
define internal %struct.hv* @S_gv_stashpvn_internal(i8* %name, i32 %namelen, i32 %flags) #0 {
entry:
  %retval = alloca %struct.hv*, align 8
  %name.addr = alloca i8*, align 8
  %namelen.addr = alloca i32, align 4
  %flags.addr = alloca i32, align 4
  %smallbuf = alloca [128 x i8], align 16
  %tmpbuf = alloca i8*, align 8
  %stash = alloca %struct.hv*, align 8
  %tmpgv = alloca %struct.gv*, align 8
  %tmplen = alloca i32, align 4
  store i8* %name, i8** %name.addr, align 8
  store i32 %namelen, i32* %namelen.addr, align 4
  store i32 %flags, i32* %flags.addr, align 4
  %0 = load i32, i32* %namelen.addr, align 4
  %add = add i32 %0, 2
  store i32 %add, i32* %tmplen, align 4
  %1 = load i32, i32* %tmplen, align 4
  %conv = zext i32 %1 to i64
  %cmp = icmp ule i64 %conv, 128
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %arraydecay = getelementptr inbounds [128 x i8], [128 x i8]* %smallbuf, i64 0, i64 0
  store i8* %arraydecay, i8** %tmpbuf, align 8
  br label %if.end

if.else:                                          ; preds = %entry
  %2 = load i32, i32* %tmplen, align 4
  %conv2 = zext i32 %2 to i64
  %mul = mul i64 %conv2, 1
  %call = call i8* @Perl_safesysmalloc(i64 %mul)
  store i8* %call, i8** %tmpbuf, align 8
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %3 = load i8*, i8** %tmpbuf, align 8
  %4 = load i8*, i8** %name.addr, align 8
  %5 = load i32, i32* %namelen.addr, align 4
  %conv3 = zext i32 %5 to i64
  %mul4 = mul i64 %conv3, 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %3, i8* align 1 %4, i64 %mul4, i1 false)
  %6 = load i8*, i8** %tmpbuf, align 8
  %7 = load i32, i32* %namelen.addr, align 4
  %idxprom = zext i32 %7 to i64
  %arrayidx = getelementptr inbounds i8, i8* %6, i64 %idxprom
  store i8 58, i8* %arrayidx, align 1
  %8 = load i8*, i8** %tmpbuf, align 8
  %9 = load i32, i32* %namelen.addr, align 4
  %add5 = add i32 %9, 1
  %idxprom6 = zext i32 %add5 to i64
  %arrayidx7 = getelementptr inbounds i8, i8* %8, i64 %idxprom6
  store i8 58, i8* %arrayidx7, align 1
  %10 = load i8*, i8** %tmpbuf, align 8
  %11 = load i32, i32* %tmplen, align 4
  %conv8 = zext i32 %11 to i64
  %12 = load i32, i32* %flags.addr, align 4
  %call9 = call %struct.gv* @Perl_gv_fetchpvn_flags(i8* %10, i64 %conv8, i32 %12, i32 12)
  store %struct.gv* %call9, %struct.gv** %tmpgv, align 8
  %13 = load i8*, i8** %tmpbuf, align 8
  %arraydecay10 = getelementptr inbounds [128 x i8], [128 x i8]* %smallbuf, i64 0, i64 0
  %cmp11 = icmp ne i8* %13, %arraydecay10
  br i1 %cmp11, label %if.then13, label %if.end14

if.then13:                                        ; preds = %if.end
  %14 = load i8*, i8** %tmpbuf, align 8
  call void @Perl_safesysfree(i8* %14)
  br label %if.end14

if.end14:                                         ; preds = %if.then13, %if.end
  %15 = load %struct.gv*, %struct.gv** %tmpgv, align 8
  %tobool = icmp ne %struct.gv* %15, null
  br i1 %tobool, label %lor.lhs.false, label %if.then26

lor.lhs.false:                                    ; preds = %if.end14
  %16 = load %struct.gv*, %struct.gv** %tmpgv, align 8
  %sv_flags = getelementptr inbounds %struct.gv, %struct.gv* %16, i32 0, i32 2
  %17 = load i32, i32* %sv_flags, align 4
  %and = and i32 %17, 49152
  %cmp15 = icmp eq i32 %and, 32768
  br i1 %cmp15, label %land.lhs.true, label %if.then26

land.lhs.true:                                    ; preds = %lor.lhs.false
  %18 = load %struct.gv*, %struct.gv** %tmpgv, align 8
  %sv_flags17 = getelementptr inbounds %struct.gv, %struct.gv* %18, i32 0, i32 2
  %19 = load i32, i32* %sv_flags17, align 4
  %and18 = and i32 %19, 255
  %cmp19 = icmp eq i32 %and18, 9
  br i1 %cmp19, label %if.end27, label %lor.lhs.false21

lor.lhs.false21:                                  ; preds = %land.lhs.true
  %20 = load %struct.gv*, %struct.gv** %tmpgv, align 8
  %sv_flags22 = getelementptr inbounds %struct.gv, %struct.gv* %20, i32 0, i32 2
  %21 = load i32, i32* %sv_flags22, align 4
  %and23 = and i32 %21, 255
  %cmp24 = icmp eq i32 %and23, 10
  br i1 %cmp24, label %if.end27, label %if.then26

if.then26:                                        ; preds = %lor.lhs.false21, %lor.lhs.false, %if.end14
  store %struct.hv* null, %struct.hv** %retval, align 8
  br label %return

if.end27:                                         ; preds = %lor.lhs.false21, %land.lhs.true
  %22 = load %struct.gv*, %struct.gv** %tmpgv, align 8
  %sv_u = getelementptr inbounds %struct.gv, %struct.gv* %22, i32 0, i32 3
  %svu_gp = bitcast %union.anon.6* %sv_u to %struct.gp**
  %23 = load %struct.gp*, %struct.gp** %svu_gp, align 8
  %add.ptr = getelementptr inbounds %struct.gp, %struct.gp* %23, i64 0
  %gp_hv = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr, i32 0, i32 5
  %24 = load %struct.hv*, %struct.hv** %gp_hv, align 8
  store %struct.hv* %24, %struct.hv** %stash, align 8
  %25 = load i32, i32* %flags.addr, align 4
  %and28 = and i32 %25, -536874209
  %tobool29 = icmp ne i32 %and28, 0
  br i1 %tobool29, label %if.end33, label %land.lhs.true30

land.lhs.true30:                                  ; preds = %if.end27
  %26 = load %struct.hv*, %struct.hv** %stash, align 8
  %tobool31 = icmp ne %struct.hv* %26, null
  br i1 %tobool31, label %if.end33, label %if.then32

if.then32:                                        ; preds = %land.lhs.true30
  store %struct.hv* null, %struct.hv** %retval, align 8
  br label %return

if.end33:                                         ; preds = %land.lhs.true30, %if.end27
  %27 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_flags34 = getelementptr inbounds %struct.hv, %struct.hv* %27, i32 0, i32 2
  %28 = load i32, i32* %sv_flags34, align 4
  %and35 = and i32 %28, 33554432
  %tobool36 = icmp ne i32 %and35, 0
  br i1 %tobool36, label %land.lhs.true37, label %cond.false96

land.lhs.true37:                                  ; preds = %if.end33
  %29 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u38 = getelementptr inbounds %struct.hv, %struct.hv* %29, i32 0, i32 3
  %svu_hash = bitcast %union.anon.4* %sv_u38 to %struct.he***
  %30 = load %struct.he**, %struct.he*** %svu_hash, align 8
  %31 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any = getelementptr inbounds %struct.hv, %struct.hv* %31, i32 0, i32 0
  %32 = load %struct.xpvhv*, %struct.xpvhv** %sv_any, align 8
  %xhv_max = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %32, i32 0, i32 3
  %33 = load i64, i64* %xhv_max, align 8
  %add39 = add i64 %33, 1
  %arrayidx40 = getelementptr inbounds %struct.he*, %struct.he** %30, i64 %add39
  %34 = bitcast %struct.he** %arrayidx40 to %struct.xpvhv_aux*
  %xhv_name_u = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %34, i32 0, i32 0
  %xhvnameu_name = bitcast %union._xhvnameu* %xhv_name_u to %struct.hek**
  %35 = load %struct.hek*, %struct.hek** %xhvnameu_name, align 8
  %tobool41 = icmp ne %struct.hek* %35, null
  br i1 %tobool41, label %land.lhs.true42, label %cond.false96

land.lhs.true42:                                  ; preds = %land.lhs.true37
  %36 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u43 = getelementptr inbounds %struct.hv, %struct.hv* %36, i32 0, i32 3
  %svu_hash44 = bitcast %union.anon.4* %sv_u43 to %struct.he***
  %37 = load %struct.he**, %struct.he*** %svu_hash44, align 8
  %38 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any45 = getelementptr inbounds %struct.hv, %struct.hv* %38, i32 0, i32 0
  %39 = load %struct.xpvhv*, %struct.xpvhv** %sv_any45, align 8
  %xhv_max46 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %39, i32 0, i32 3
  %40 = load i64, i64* %xhv_max46, align 8
  %add47 = add i64 %40, 1
  %arrayidx48 = getelementptr inbounds %struct.he*, %struct.he** %37, i64 %add47
  %41 = bitcast %struct.he** %arrayidx48 to %struct.xpvhv_aux*
  %xhv_name_count = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %41, i32 0, i32 4
  %42 = load i32, i32* %xhv_name_count, align 4
  %tobool49 = icmp ne i32 %42, 0
  br i1 %tobool49, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true42
  %43 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u50 = getelementptr inbounds %struct.hv, %struct.hv* %43, i32 0, i32 3
  %svu_hash51 = bitcast %union.anon.4* %sv_u50 to %struct.he***
  %44 = load %struct.he**, %struct.he*** %svu_hash51, align 8
  %45 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any52 = getelementptr inbounds %struct.hv, %struct.hv* %45, i32 0, i32 0
  %46 = load %struct.xpvhv*, %struct.xpvhv** %sv_any52, align 8
  %xhv_max53 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %46, i32 0, i32 3
  %47 = load i64, i64* %xhv_max53, align 8
  %add54 = add i64 %47, 1
  %arrayidx55 = getelementptr inbounds %struct.he*, %struct.he** %44, i64 %add54
  %48 = bitcast %struct.he** %arrayidx55 to %struct.xpvhv_aux*
  %xhv_name_u56 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %48, i32 0, i32 0
  %xhvnameu_names = bitcast %union._xhvnameu* %xhv_name_u56 to %struct.hek***
  %49 = load %struct.hek**, %struct.hek*** %xhvnameu_names, align 8
  %50 = load %struct.hek*, %struct.hek** %49, align 8
  %tobool57 = icmp ne %struct.hek* %50, null
  br i1 %tobool57, label %cond.true67, label %cond.false96

cond.false:                                       ; preds = %land.lhs.true42
  %51 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u58 = getelementptr inbounds %struct.hv, %struct.hv* %51, i32 0, i32 3
  %svu_hash59 = bitcast %union.anon.4* %sv_u58 to %struct.he***
  %52 = load %struct.he**, %struct.he*** %svu_hash59, align 8
  %53 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any60 = getelementptr inbounds %struct.hv, %struct.hv* %53, i32 0, i32 0
  %54 = load %struct.xpvhv*, %struct.xpvhv** %sv_any60, align 8
  %xhv_max61 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %54, i32 0, i32 3
  %55 = load i64, i64* %xhv_max61, align 8
  %add62 = add i64 %55, 1
  %arrayidx63 = getelementptr inbounds %struct.he*, %struct.he** %52, i64 %add62
  %56 = bitcast %struct.he** %arrayidx63 to %struct.xpvhv_aux*
  %xhv_name_u64 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %56, i32 0, i32 0
  %xhvnameu_name65 = bitcast %union._xhvnameu* %xhv_name_u64 to %struct.hek**
  %57 = load %struct.hek*, %struct.hek** %xhvnameu_name65, align 8
  %tobool66 = icmp ne %struct.hek* %57, null
  br i1 %tobool66, label %cond.true67, label %cond.false96

cond.true67:                                      ; preds = %cond.false, %cond.true
  %58 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u68 = getelementptr inbounds %struct.hv, %struct.hv* %58, i32 0, i32 3
  %svu_hash69 = bitcast %union.anon.4* %sv_u68 to %struct.he***
  %59 = load %struct.he**, %struct.he*** %svu_hash69, align 8
  %60 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any70 = getelementptr inbounds %struct.hv, %struct.hv* %60, i32 0, i32 0
  %61 = load %struct.xpvhv*, %struct.xpvhv** %sv_any70, align 8
  %xhv_max71 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %61, i32 0, i32 3
  %62 = load i64, i64* %xhv_max71, align 8
  %add72 = add i64 %62, 1
  %arrayidx73 = getelementptr inbounds %struct.he*, %struct.he** %59, i64 %add72
  %63 = bitcast %struct.he** %arrayidx73 to %struct.xpvhv_aux*
  %xhv_name_count74 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %63, i32 0, i32 4
  %64 = load i32, i32* %xhv_name_count74, align 4
  %tobool75 = icmp ne i32 %64, 0
  br i1 %tobool75, label %cond.true76, label %cond.false85

cond.true76:                                      ; preds = %cond.true67
  %65 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u77 = getelementptr inbounds %struct.hv, %struct.hv* %65, i32 0, i32 3
  %svu_hash78 = bitcast %union.anon.4* %sv_u77 to %struct.he***
  %66 = load %struct.he**, %struct.he*** %svu_hash78, align 8
  %67 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any79 = getelementptr inbounds %struct.hv, %struct.hv* %67, i32 0, i32 0
  %68 = load %struct.xpvhv*, %struct.xpvhv** %sv_any79, align 8
  %xhv_max80 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %68, i32 0, i32 3
  %69 = load i64, i64* %xhv_max80, align 8
  %add81 = add i64 %69, 1
  %arrayidx82 = getelementptr inbounds %struct.he*, %struct.he** %66, i64 %add81
  %70 = bitcast %struct.he** %arrayidx82 to %struct.xpvhv_aux*
  %xhv_name_u83 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %70, i32 0, i32 0
  %xhvnameu_names84 = bitcast %union._xhvnameu* %xhv_name_u83 to %struct.hek***
  %71 = load %struct.hek**, %struct.hek*** %xhvnameu_names84, align 8
  %72 = load %struct.hek*, %struct.hek** %71, align 8
  br label %cond.end

cond.false85:                                     ; preds = %cond.true67
  %73 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u86 = getelementptr inbounds %struct.hv, %struct.hv* %73, i32 0, i32 3
  %svu_hash87 = bitcast %union.anon.4* %sv_u86 to %struct.he***
  %74 = load %struct.he**, %struct.he*** %svu_hash87, align 8
  %75 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any88 = getelementptr inbounds %struct.hv, %struct.hv* %75, i32 0, i32 0
  %76 = load %struct.xpvhv*, %struct.xpvhv** %sv_any88, align 8
  %xhv_max89 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %76, i32 0, i32 3
  %77 = load i64, i64* %xhv_max89, align 8
  %add90 = add i64 %77, 1
  %arrayidx91 = getelementptr inbounds %struct.he*, %struct.he** %74, i64 %add90
  %78 = bitcast %struct.he** %arrayidx91 to %struct.xpvhv_aux*
  %xhv_name_u92 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %78, i32 0, i32 0
  %xhvnameu_name93 = bitcast %union._xhvnameu* %xhv_name_u92 to %struct.hek**
  %79 = load %struct.hek*, %struct.hek** %xhvnameu_name93, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false85, %cond.true76
  %cond = phi %struct.hek* [ %72, %cond.true76 ], [ %79, %cond.false85 ]
  %hek_key = getelementptr inbounds %struct.hek, %struct.hek* %cond, i32 0, i32 2
  %arraydecay94 = getelementptr inbounds [1 x i8], [1 x i8]* %hek_key, i64 0, i64 0
  %tobool95 = icmp ne i8* %arraydecay94, null
  br i1 %tobool95, label %if.end115, label %if.then97

cond.false96:                                     ; preds = %cond.false, %cond.true, %land.lhs.true37, %if.end33
  br i1 false, label %if.end115, label %if.then97

if.then97:                                        ; preds = %cond.false96, %cond.end
  %80 = load %struct.hv*, %struct.hv** %stash, align 8
  %81 = load i8*, i8** %name.addr, align 8
  %82 = load i32, i32* %namelen.addr, align 4
  %83 = load i32, i32* %flags.addr, align 4
  %and98 = and i32 %83, 536870912
  %tobool99 = icmp ne i32 %and98, 0
  %84 = zext i1 %tobool99 to i64
  %cond100 = select i1 %tobool99, i32 536870912, i32 0
  call void @Perl_hv_name_set(%struct.hv* %80, i8* %81, i32 %82, i32 %cond100)
  %85 = load %struct.gv*, %struct.gv** %tmpgv, align 8
  %sv_any101 = getelementptr inbounds %struct.gv, %struct.gv* %85, i32 0, i32 0
  %86 = load %struct.xpvgv*, %struct.xpvgv** %sv_any101, align 8
  %xnv_u = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %86, i32 0, i32 5
  %xgv_stash = bitcast %union._xnvu* %xnv_u to %struct.hv**
  %87 = load %struct.hv*, %struct.hv** %xgv_stash, align 8
  %sv_u102 = getelementptr inbounds %struct.hv, %struct.hv* %87, i32 0, i32 3
  %svu_hash103 = bitcast %union.anon.4* %sv_u102 to %struct.he***
  %88 = load %struct.he**, %struct.he*** %svu_hash103, align 8
  %89 = load %struct.gv*, %struct.gv** %tmpgv, align 8
  %sv_any104 = getelementptr inbounds %struct.gv, %struct.gv* %89, i32 0, i32 0
  %90 = load %struct.xpvgv*, %struct.xpvgv** %sv_any104, align 8
  %xnv_u105 = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %90, i32 0, i32 5
  %xgv_stash106 = bitcast %union._xnvu* %xnv_u105 to %struct.hv**
  %91 = load %struct.hv*, %struct.hv** %xgv_stash106, align 8
  %sv_any107 = getelementptr inbounds %struct.hv, %struct.hv* %91, i32 0, i32 0
  %92 = load %struct.xpvhv*, %struct.xpvhv** %sv_any107, align 8
  %xhv_max108 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %92, i32 0, i32 3
  %93 = load i64, i64* %xhv_max108, align 8
  %add109 = add i64 %93, 1
  %arrayidx110 = getelementptr inbounds %struct.he*, %struct.he** %88, i64 %add109
  %94 = bitcast %struct.he** %arrayidx110 to %struct.xpvhv_aux*
  %xhv_name_count111 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %94, i32 0, i32 4
  %95 = load i32, i32* %xhv_name_count111, align 4
  %tobool112 = icmp ne i32 %95, 0
  br i1 %tobool112, label %if.then113, label %if.end114

if.then113:                                       ; preds = %if.then97
  %96 = load %struct.hv*, %struct.hv** %stash, align 8
  %97 = load %struct.gv*, %struct.gv** %tmpgv, align 8
  call void @Perl_mro_package_moved(%struct.hv* %96, %struct.hv* null, %struct.gv* %97, i32 1)
  br label %if.end114

if.end114:                                        ; preds = %if.then113, %if.then97
  br label %if.end115

if.end115:                                        ; preds = %if.end114, %cond.false96, %cond.end
  %98 = load %struct.hv*, %struct.hv** %stash, align 8
  store %struct.hv* %98, %struct.hv** %retval, align 8
  br label %return

return:                                           ; preds = %if.end115, %if.then32, %if.then26
  %99 = load %struct.hv*, %struct.hv** %retval, align 8
  ret %struct.hv* %99
}

declare dso_local void @Perl_hv_name_set(%struct.hv*, i8*, i32, i32) #1

declare dso_local void @Perl_mro_package_moved(%struct.hv*, %struct.hv*, %struct.gv*, i32) #1

; Function Attrs: noinline nounwind uwtable
define internal zeroext i1 @S_gv_is_in_main(i8* %name, i64 %len, i32 %is_utf8) #0 {
entry:
  %retval = alloca i1, align 1
  %name.addr = alloca i8*, align 8
  %len.addr = alloca i64, align 8
  %is_utf8.addr = alloca i32, align 4
  store i8* %name, i8** %name.addr, align 8
  store i64 %len, i64* %len.addr, align 8
  store i32 %is_utf8, i32* %is_utf8.addr, align 4
  %0 = load i64, i64* %len.addr, align 8
  %tobool = icmp ne i64 %0, 0
  br i1 %tobool, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_hints = getelementptr inbounds %struct.cop, %struct.cop* %1, i32 0, i32 10
  %2 = load i32, i32* %cop_hints, align 8
  %add = add i32 %2, 0
  %and = and i32 %add, 8
  %tobool1 = icmp ne i32 %and, 0
  br i1 %tobool1, label %cond.true, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true
  %3 = load i32, i32* %is_utf8.addr, align 4
  %tobool2 = icmp ne i32 %3, 0
  br i1 %tobool2, label %cond.false, label %cond.true

cond.true:                                        ; preds = %lor.lhs.false, %land.lhs.true
  %4 = load i8*, i8** %name.addr, align 8
  %5 = load i8, i8* %4, align 1
  %idxprom = zext i8 %5 to i64
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom
  %6 = load i32, i32* %arrayidx, align 4
  %and3 = and i32 %6, 81920
  %cmp = icmp eq i32 %and3, 81920
  br i1 %cmp, label %if.then, label %if.else

cond.false:                                       ; preds = %lor.lhs.false
  %7 = load i8*, i8** %name.addr, align 8
  %8 = load i8, i8* %7, align 1
  %conv = zext i8 %8 to i64
  %cmp4 = icmp ult i64 %conv, 128
  br i1 %cmp4, label %cond.true6, label %cond.false13

cond.true6:                                       ; preds = %cond.false
  %9 = load i8*, i8** %name.addr, align 8
  %10 = load i8, i8* %9, align 1
  %idxprom7 = zext i8 %10 to i64
  %arrayidx8 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom7
  %11 = load i32, i32* %arrayidx8, align 4
  %and9 = and i32 %11, 65536
  %tobool10 = icmp ne i32 %and9, 0
  br i1 %tobool10, label %cond.true11, label %cond.false12

cond.true11:                                      ; preds = %cond.true6
  br i1 true, label %if.then, label %if.else

cond.false12:                                     ; preds = %cond.true6
  br i1 false, label %if.then, label %if.else

cond.false13:                                     ; preds = %cond.false
  %12 = load i8*, i8** %name.addr, align 8
  %13 = load i8, i8* %12, align 1
  %conv14 = zext i8 %13 to i32
  %and15 = and i32 %conv14, 254
  %cmp16 = icmp eq i32 %and15, 194
  br i1 %cmp16, label %cond.true18, label %cond.false41

cond.true18:                                      ; preds = %cond.false13
  %14 = load i8*, i8** %name.addr, align 8
  %15 = load i8, i8* %14, align 1
  %conv19 = zext i8 %15 to i32
  %and20 = and i32 %conv19, 31
  %shl = shl i32 %and20, 6
  %16 = load i8*, i8** %name.addr, align 8
  %add.ptr = getelementptr inbounds i8, i8* %16, i64 1
  %17 = load i8, i8* %add.ptr, align 1
  %conv21 = zext i8 %17 to i32
  %and22 = and i32 %conv21, 63
  %or = or i32 %shl, %and22
  %conv23 = sext i32 %or to i64
  %and24 = and i64 %conv23, -256
  %tobool25 = icmp ne i64 %and24, 0
  br i1 %tobool25, label %cond.false40, label %land.lhs.true26

land.lhs.true26:                                  ; preds = %cond.true18
  %18 = load i8*, i8** %name.addr, align 8
  %19 = load i8, i8* %18, align 1
  %conv27 = zext i8 %19 to i32
  %and28 = and i32 %conv27, 31
  %shl29 = shl i32 %and28, 6
  %20 = load i8*, i8** %name.addr, align 8
  %add.ptr30 = getelementptr inbounds i8, i8* %20, i64 1
  %21 = load i8, i8* %add.ptr30, align 1
  %conv31 = zext i8 %21 to i32
  %and32 = and i32 %conv31, 63
  %or33 = or i32 %shl29, %and32
  %conv34 = trunc i32 %or33 to i8
  %idxprom35 = zext i8 %conv34 to i64
  %arrayidx36 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom35
  %22 = load i32, i32* %arrayidx36, align 4
  %and37 = and i32 %22, 65536
  %tobool38 = icmp ne i32 %and37, 0
  br i1 %tobool38, label %cond.true39, label %cond.false40

cond.true39:                                      ; preds = %land.lhs.true26
  br i1 true, label %if.then, label %if.else

cond.false40:                                     ; preds = %land.lhs.true26, %cond.true18
  br i1 false, label %if.then, label %if.else

cond.false41:                                     ; preds = %cond.false13
  %23 = load i8*, i8** %name.addr, align 8
  %call = call zeroext i1 @Perl__is_utf8_perl_idstart(i8* %23)
  br i1 %call, label %if.then, label %if.else

if.then:                                          ; preds = %cond.false41, %cond.false40, %cond.true39, %cond.false12, %cond.true11, %cond.true
  %24 = load i64, i64* %len.addr, align 8
  switch i64 %24, label %sw.epilog [
    i64 1, label %sw.bb
    i64 3, label %sw.bb47
    i64 4, label %sw.bb94
    i64 5, label %sw.bb116
    i64 6, label %sw.bb143
    i64 7, label %sw.bb190
  ]

sw.bb:                                            ; preds = %if.then
  %25 = load i8*, i8** %name.addr, align 8
  %26 = load i8, i8* %25, align 1
  %conv43 = sext i8 %26 to i32
  %cmp44 = icmp eq i32 %conv43, 95
  br i1 %cmp44, label %if.then46, label %if.end

if.then46:                                        ; preds = %sw.bb
  store i1 true, i1* %retval, align 1
  br label %return

if.end:                                           ; preds = %sw.bb
  br label %sw.epilog

sw.bb47:                                          ; preds = %if.then
  %27 = load i8*, i8** %name.addr, align 8
  %arrayidx48 = getelementptr inbounds i8, i8* %27, i64 0
  %28 = load i8, i8* %arrayidx48, align 1
  %conv49 = sext i8 %28 to i32
  %cmp50 = icmp eq i32 %conv49, 73
  br i1 %cmp50, label %land.lhs.true52, label %lor.lhs.false62

land.lhs.true52:                                  ; preds = %sw.bb47
  %29 = load i8*, i8** %name.addr, align 8
  %arrayidx53 = getelementptr inbounds i8, i8* %29, i64 1
  %30 = load i8, i8* %arrayidx53, align 1
  %conv54 = sext i8 %30 to i32
  %cmp55 = icmp eq i32 %conv54, 78
  br i1 %cmp55, label %land.lhs.true57, label %lor.lhs.false62

land.lhs.true57:                                  ; preds = %land.lhs.true52
  %31 = load i8*, i8** %name.addr, align 8
  %arrayidx58 = getelementptr inbounds i8, i8* %31, i64 2
  %32 = load i8, i8* %arrayidx58, align 1
  %conv59 = sext i8 %32 to i32
  %cmp60 = icmp eq i32 %conv59, 67
  br i1 %cmp60, label %if.then92, label %lor.lhs.false62

lor.lhs.false62:                                  ; preds = %land.lhs.true57, %land.lhs.true52, %sw.bb47
  %33 = load i8*, i8** %name.addr, align 8
  %arrayidx63 = getelementptr inbounds i8, i8* %33, i64 0
  %34 = load i8, i8* %arrayidx63, align 1
  %conv64 = sext i8 %34 to i32
  %cmp65 = icmp eq i32 %conv64, 69
  br i1 %cmp65, label %land.lhs.true67, label %lor.lhs.false77

land.lhs.true67:                                  ; preds = %lor.lhs.false62
  %35 = load i8*, i8** %name.addr, align 8
  %arrayidx68 = getelementptr inbounds i8, i8* %35, i64 1
  %36 = load i8, i8* %arrayidx68, align 1
  %conv69 = sext i8 %36 to i32
  %cmp70 = icmp eq i32 %conv69, 78
  br i1 %cmp70, label %land.lhs.true72, label %lor.lhs.false77

land.lhs.true72:                                  ; preds = %land.lhs.true67
  %37 = load i8*, i8** %name.addr, align 8
  %arrayidx73 = getelementptr inbounds i8, i8* %37, i64 2
  %38 = load i8, i8* %arrayidx73, align 1
  %conv74 = sext i8 %38 to i32
  %cmp75 = icmp eq i32 %conv74, 86
  br i1 %cmp75, label %if.then92, label %lor.lhs.false77

lor.lhs.false77:                                  ; preds = %land.lhs.true72, %land.lhs.true67, %lor.lhs.false62
  %39 = load i8*, i8** %name.addr, align 8
  %arrayidx78 = getelementptr inbounds i8, i8* %39, i64 0
  %40 = load i8, i8* %arrayidx78, align 1
  %conv79 = sext i8 %40 to i32
  %cmp80 = icmp eq i32 %conv79, 83
  br i1 %cmp80, label %land.lhs.true82, label %if.end93

land.lhs.true82:                                  ; preds = %lor.lhs.false77
  %41 = load i8*, i8** %name.addr, align 8
  %arrayidx83 = getelementptr inbounds i8, i8* %41, i64 1
  %42 = load i8, i8* %arrayidx83, align 1
  %conv84 = sext i8 %42 to i32
  %cmp85 = icmp eq i32 %conv84, 73
  br i1 %cmp85, label %land.lhs.true87, label %if.end93

land.lhs.true87:                                  ; preds = %land.lhs.true82
  %43 = load i8*, i8** %name.addr, align 8
  %arrayidx88 = getelementptr inbounds i8, i8* %43, i64 2
  %44 = load i8, i8* %arrayidx88, align 1
  %conv89 = sext i8 %44 to i32
  %cmp90 = icmp eq i32 %conv89, 71
  br i1 %cmp90, label %if.then92, label %if.end93

if.then92:                                        ; preds = %land.lhs.true87, %land.lhs.true72, %land.lhs.true57
  store i1 true, i1* %retval, align 1
  br label %return

if.end93:                                         ; preds = %land.lhs.true87, %land.lhs.true82, %lor.lhs.false77
  br label %sw.epilog

sw.bb94:                                          ; preds = %if.then
  %45 = load i8*, i8** %name.addr, align 8
  %arrayidx95 = getelementptr inbounds i8, i8* %45, i64 0
  %46 = load i8, i8* %arrayidx95, align 1
  %conv96 = sext i8 %46 to i32
  %cmp97 = icmp eq i32 %conv96, 65
  br i1 %cmp97, label %land.lhs.true99, label %if.end115

land.lhs.true99:                                  ; preds = %sw.bb94
  %47 = load i8*, i8** %name.addr, align 8
  %arrayidx100 = getelementptr inbounds i8, i8* %47, i64 1
  %48 = load i8, i8* %arrayidx100, align 1
  %conv101 = sext i8 %48 to i32
  %cmp102 = icmp eq i32 %conv101, 82
  br i1 %cmp102, label %land.lhs.true104, label %if.end115

land.lhs.true104:                                 ; preds = %land.lhs.true99
  %49 = load i8*, i8** %name.addr, align 8
  %arrayidx105 = getelementptr inbounds i8, i8* %49, i64 2
  %50 = load i8, i8* %arrayidx105, align 1
  %conv106 = sext i8 %50 to i32
  %cmp107 = icmp eq i32 %conv106, 71
  br i1 %cmp107, label %land.lhs.true109, label %if.end115

land.lhs.true109:                                 ; preds = %land.lhs.true104
  %51 = load i8*, i8** %name.addr, align 8
  %arrayidx110 = getelementptr inbounds i8, i8* %51, i64 3
  %52 = load i8, i8* %arrayidx110, align 1
  %conv111 = sext i8 %52 to i32
  %cmp112 = icmp eq i32 %conv111, 86
  br i1 %cmp112, label %if.then114, label %if.end115

if.then114:                                       ; preds = %land.lhs.true109
  store i1 true, i1* %retval, align 1
  br label %return

if.end115:                                        ; preds = %land.lhs.true109, %land.lhs.true104, %land.lhs.true99, %sw.bb94
  br label %sw.epilog

sw.bb116:                                         ; preds = %if.then
  %53 = load i8*, i8** %name.addr, align 8
  %arrayidx117 = getelementptr inbounds i8, i8* %53, i64 0
  %54 = load i8, i8* %arrayidx117, align 1
  %conv118 = sext i8 %54 to i32
  %cmp119 = icmp eq i32 %conv118, 83
  br i1 %cmp119, label %land.lhs.true121, label %if.end142

land.lhs.true121:                                 ; preds = %sw.bb116
  %55 = load i8*, i8** %name.addr, align 8
  %arrayidx122 = getelementptr inbounds i8, i8* %55, i64 1
  %56 = load i8, i8* %arrayidx122, align 1
  %conv123 = sext i8 %56 to i32
  %cmp124 = icmp eq i32 %conv123, 84
  br i1 %cmp124, label %land.lhs.true126, label %if.end142

land.lhs.true126:                                 ; preds = %land.lhs.true121
  %57 = load i8*, i8** %name.addr, align 8
  %arrayidx127 = getelementptr inbounds i8, i8* %57, i64 2
  %58 = load i8, i8* %arrayidx127, align 1
  %conv128 = sext i8 %58 to i32
  %cmp129 = icmp eq i32 %conv128, 68
  br i1 %cmp129, label %land.lhs.true131, label %if.end142

land.lhs.true131:                                 ; preds = %land.lhs.true126
  %59 = load i8*, i8** %name.addr, align 8
  %arrayidx132 = getelementptr inbounds i8, i8* %59, i64 3
  %60 = load i8, i8* %arrayidx132, align 1
  %conv133 = sext i8 %60 to i32
  %cmp134 = icmp eq i32 %conv133, 73
  br i1 %cmp134, label %land.lhs.true136, label %if.end142

land.lhs.true136:                                 ; preds = %land.lhs.true131
  %61 = load i8*, i8** %name.addr, align 8
  %arrayidx137 = getelementptr inbounds i8, i8* %61, i64 4
  %62 = load i8, i8* %arrayidx137, align 1
  %conv138 = sext i8 %62 to i32
  %cmp139 = icmp eq i32 %conv138, 78
  br i1 %cmp139, label %if.then141, label %if.end142

if.then141:                                       ; preds = %land.lhs.true136
  store i1 true, i1* %retval, align 1
  br label %return

if.end142:                                        ; preds = %land.lhs.true136, %land.lhs.true131, %land.lhs.true126, %land.lhs.true121, %sw.bb116
  br label %sw.epilog

sw.bb143:                                         ; preds = %if.then
  %63 = load i8*, i8** %name.addr, align 8
  %arrayidx144 = getelementptr inbounds i8, i8* %63, i64 0
  %64 = load i8, i8* %arrayidx144, align 1
  %conv145 = sext i8 %64 to i32
  %cmp146 = icmp eq i32 %conv145, 83
  br i1 %cmp146, label %land.lhs.true148, label %if.end189

land.lhs.true148:                                 ; preds = %sw.bb143
  %65 = load i8*, i8** %name.addr, align 8
  %arrayidx149 = getelementptr inbounds i8, i8* %65, i64 1
  %66 = load i8, i8* %arrayidx149, align 1
  %conv150 = sext i8 %66 to i32
  %cmp151 = icmp eq i32 %conv150, 84
  br i1 %cmp151, label %land.lhs.true153, label %if.end189

land.lhs.true153:                                 ; preds = %land.lhs.true148
  %67 = load i8*, i8** %name.addr, align 8
  %arrayidx154 = getelementptr inbounds i8, i8* %67, i64 2
  %68 = load i8, i8* %arrayidx154, align 1
  %conv155 = sext i8 %68 to i32
  %cmp156 = icmp eq i32 %conv155, 68
  br i1 %cmp156, label %land.lhs.true158, label %if.end189

land.lhs.true158:                                 ; preds = %land.lhs.true153
  %69 = load i8*, i8** %name.addr, align 8
  %arrayidx159 = getelementptr inbounds i8, i8* %69, i64 3
  %70 = load i8, i8* %arrayidx159, align 1
  %conv160 = sext i8 %70 to i32
  %cmp161 = icmp eq i32 %conv160, 79
  br i1 %cmp161, label %land.lhs.true163, label %lor.lhs.false173

land.lhs.true163:                                 ; preds = %land.lhs.true158
  %71 = load i8*, i8** %name.addr, align 8
  %arrayidx164 = getelementptr inbounds i8, i8* %71, i64 4
  %72 = load i8, i8* %arrayidx164, align 1
  %conv165 = sext i8 %72 to i32
  %cmp166 = icmp eq i32 %conv165, 85
  br i1 %cmp166, label %land.lhs.true168, label %lor.lhs.false173

land.lhs.true168:                                 ; preds = %land.lhs.true163
  %73 = load i8*, i8** %name.addr, align 8
  %arrayidx169 = getelementptr inbounds i8, i8* %73, i64 5
  %74 = load i8, i8* %arrayidx169, align 1
  %conv170 = sext i8 %74 to i32
  %cmp171 = icmp eq i32 %conv170, 84
  br i1 %cmp171, label %if.then188, label %lor.lhs.false173

lor.lhs.false173:                                 ; preds = %land.lhs.true168, %land.lhs.true163, %land.lhs.true158
  %75 = load i8*, i8** %name.addr, align 8
  %arrayidx174 = getelementptr inbounds i8, i8* %75, i64 3
  %76 = load i8, i8* %arrayidx174, align 1
  %conv175 = sext i8 %76 to i32
  %cmp176 = icmp eq i32 %conv175, 69
  br i1 %cmp176, label %land.lhs.true178, label %if.end189

land.lhs.true178:                                 ; preds = %lor.lhs.false173
  %77 = load i8*, i8** %name.addr, align 8
  %arrayidx179 = getelementptr inbounds i8, i8* %77, i64 4
  %78 = load i8, i8* %arrayidx179, align 1
  %conv180 = sext i8 %78 to i32
  %cmp181 = icmp eq i32 %conv180, 82
  br i1 %cmp181, label %land.lhs.true183, label %if.end189

land.lhs.true183:                                 ; preds = %land.lhs.true178
  %79 = load i8*, i8** %name.addr, align 8
  %arrayidx184 = getelementptr inbounds i8, i8* %79, i64 5
  %80 = load i8, i8* %arrayidx184, align 1
  %conv185 = sext i8 %80 to i32
  %cmp186 = icmp eq i32 %conv185, 82
  br i1 %cmp186, label %if.then188, label %if.end189

if.then188:                                       ; preds = %land.lhs.true183, %land.lhs.true168
  store i1 true, i1* %retval, align 1
  br label %return

if.end189:                                        ; preds = %land.lhs.true183, %land.lhs.true178, %lor.lhs.false173, %land.lhs.true153, %land.lhs.true148, %sw.bb143
  br label %sw.epilog

sw.bb190:                                         ; preds = %if.then
  %81 = load i8*, i8** %name.addr, align 8
  %arrayidx191 = getelementptr inbounds i8, i8* %81, i64 0
  %82 = load i8, i8* %arrayidx191, align 1
  %conv192 = sext i8 %82 to i32
  %cmp193 = icmp eq i32 %conv192, 65
  br i1 %cmp193, label %land.lhs.true195, label %if.end226

land.lhs.true195:                                 ; preds = %sw.bb190
  %83 = load i8*, i8** %name.addr, align 8
  %arrayidx196 = getelementptr inbounds i8, i8* %83, i64 1
  %84 = load i8, i8* %arrayidx196, align 1
  %conv197 = sext i8 %84 to i32
  %cmp198 = icmp eq i32 %conv197, 82
  br i1 %cmp198, label %land.lhs.true200, label %if.end226

land.lhs.true200:                                 ; preds = %land.lhs.true195
  %85 = load i8*, i8** %name.addr, align 8
  %arrayidx201 = getelementptr inbounds i8, i8* %85, i64 2
  %86 = load i8, i8* %arrayidx201, align 1
  %conv202 = sext i8 %86 to i32
  %cmp203 = icmp eq i32 %conv202, 71
  br i1 %cmp203, label %land.lhs.true205, label %if.end226

land.lhs.true205:                                 ; preds = %land.lhs.true200
  %87 = load i8*, i8** %name.addr, align 8
  %arrayidx206 = getelementptr inbounds i8, i8* %87, i64 3
  %88 = load i8, i8* %arrayidx206, align 1
  %conv207 = sext i8 %88 to i32
  %cmp208 = icmp eq i32 %conv207, 86
  br i1 %cmp208, label %land.lhs.true210, label %if.end226

land.lhs.true210:                                 ; preds = %land.lhs.true205
  %89 = load i8*, i8** %name.addr, align 8
  %arrayidx211 = getelementptr inbounds i8, i8* %89, i64 4
  %90 = load i8, i8* %arrayidx211, align 1
  %conv212 = sext i8 %90 to i32
  %cmp213 = icmp eq i32 %conv212, 79
  br i1 %cmp213, label %land.lhs.true215, label %if.end226

land.lhs.true215:                                 ; preds = %land.lhs.true210
  %91 = load i8*, i8** %name.addr, align 8
  %arrayidx216 = getelementptr inbounds i8, i8* %91, i64 5
  %92 = load i8, i8* %arrayidx216, align 1
  %conv217 = sext i8 %92 to i32
  %cmp218 = icmp eq i32 %conv217, 85
  br i1 %cmp218, label %land.lhs.true220, label %if.end226

land.lhs.true220:                                 ; preds = %land.lhs.true215
  %93 = load i8*, i8** %name.addr, align 8
  %arrayidx221 = getelementptr inbounds i8, i8* %93, i64 6
  %94 = load i8, i8* %arrayidx221, align 1
  %conv222 = sext i8 %94 to i32
  %cmp223 = icmp eq i32 %conv222, 84
  br i1 %cmp223, label %if.then225, label %if.end226

if.then225:                                       ; preds = %land.lhs.true220
  store i1 true, i1* %retval, align 1
  br label %return

if.end226:                                        ; preds = %land.lhs.true220, %land.lhs.true215, %land.lhs.true210, %land.lhs.true205, %land.lhs.true200, %land.lhs.true195, %sw.bb190
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.then, %if.end226, %if.end189, %if.end142, %if.end115, %if.end93, %if.end
  br label %if.end227

if.else:                                          ; preds = %cond.false41, %cond.false40, %cond.true39, %cond.false12, %cond.true11, %cond.true, %entry
  store i1 true, i1* %retval, align 1
  br label %return

if.end227:                                        ; preds = %sw.epilog
  store i1 false, i1* %retval, align 1
  br label %return

return:                                           ; preds = %if.end227, %if.else, %if.then225, %if.then188, %if.then141, %if.then114, %if.then92, %if.then46
  %95 = load i1, i1* %retval, align 1
  ret i1 %95
}

declare dso_local void @Perl_qerror(%struct.sv*) #1

declare dso_local %struct.sv* @Perl_mess(i8*, ...) #1

; Function Attrs: noinline nounwind uwtable
define internal %struct.hv* @S_require_tie_mod(%struct.gv* %gv, i8* %varpv, %struct.sv* %namesv, i8* %methpv, i32 %flags) #0 {
entry:
  %gv.addr = alloca %struct.gv*, align 8
  %varpv.addr = alloca i8*, align 8
  %namesv.addr = alloca %struct.sv*, align 8
  %methpv.addr = alloca i8*, align 8
  %flags.addr = alloca i32, align 4
  %stash = alloca %struct.hv*, align 8
  %module = alloca %struct.sv*, align 8
  %varname = alloca i8, align 1
  %type = alloca i8, align 1
  store %struct.gv* %gv, %struct.gv** %gv.addr, align 8
  store i8* %varpv, i8** %varpv.addr, align 8
  store %struct.sv* %namesv, %struct.sv** %namesv.addr, align 8
  store i8* %methpv, i8** %methpv.addr, align 8
  store i32 %flags, i32* %flags.addr, align 4
  %0 = load %struct.sv*, %struct.sv** %namesv.addr, align 8
  %call = call %struct.hv* @Perl_gv_stashsv(%struct.sv* %0, i32 0)
  store %struct.hv* %call, %struct.hv** %stash, align 8
  %1 = load %struct.hv*, %struct.hv** %stash, align 8
  %tobool = icmp ne %struct.hv* %1, null
  br i1 %tobool, label %lor.lhs.false, label %if.then

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.hv*, %struct.hv** %stash, align 8
  %3 = load i8*, i8** %methpv.addr, align 8
  %call1 = call %struct.gv* @Perl_gv_fetchmethod_autoload(%struct.hv* %2, i8* %3, i32 0)
  %tobool2 = icmp ne %struct.gv* %call1, null
  br i1 %tobool2, label %if.else21, label %if.then

if.then:                                          ; preds = %lor.lhs.false, %entry
  %4 = load %struct.sv*, %struct.sv** %namesv.addr, align 8
  %call3 = call %struct.sv* @Perl_newSVsv(%struct.sv* %4)
  store %struct.sv* %call3, %struct.sv** %module, align 8
  %5 = load i8*, i8** %varpv.addr, align 8
  %6 = load i8, i8* %5, align 1
  store i8 %6, i8* %varname, align 1
  %7 = load i8, i8* %varname, align 1
  %conv = sext i8 %7 to i32
  %cmp = icmp eq i32 %conv, 91
  %8 = zext i1 %cmp to i64
  %cond = select i1 %cmp, i32 36, i32 37
  %conv5 = trunc i32 %cond to i8
  store i8 %conv5, i8* %type, align 1
  call void @Perl_push_scope()
  %9 = load %struct.sv*, %struct.sv** %namesv.addr, align 8
  %10 = bitcast %struct.sv* %9 to i8*
  %11 = bitcast i8* %10 to %struct.sv*
  %12 = bitcast %struct.sv* %11 to i8*
  call void @Perl_save_pushptr(i8* %12, i32 11)
  %13 = load i32, i32* %flags.addr, align 4
  %and = and i32 %13, 1
  %tobool6 = icmp ne i32 %and, 0
  br i1 %tobool6, label %if.then7, label %if.end

if.then7:                                         ; preds = %if.then
  %14 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %call8 = call %struct.sv* @Perl_save_scalar(%struct.gv* %14)
  br label %if.end

if.end:                                           ; preds = %if.then7, %if.then
  %15 = load %struct.sv*, %struct.sv** %module, align 8
  call void (i32, %struct.sv*, %struct.sv*, ...) @Perl_load_module(i32 2, %struct.sv* %15, %struct.sv* null)
  %16 = load %struct.sv*, %struct.sv** %namesv.addr, align 8
  %call9 = call %struct.hv* @Perl_gv_stashsv(%struct.sv* %16, i32 0)
  store %struct.hv* %call9, %struct.hv** %stash, align 8
  %17 = load %struct.hv*, %struct.hv** %stash, align 8
  %tobool10 = icmp ne %struct.hv* %17, null
  br i1 %tobool10, label %if.else, label %if.then11

if.then11:                                        ; preds = %if.end
  %18 = load i8, i8* %type, align 1
  %conv12 = sext i8 %18 to i32
  %19 = load i8, i8* %varname, align 1
  %conv13 = sext i8 %19 to i32
  %20 = load %struct.sv*, %struct.sv** %namesv.addr, align 8
  %21 = bitcast %struct.sv* %20 to i8*
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.66, i64 0, i64 0), i32 %conv12, i32 %conv13, i8* %21)
  br label %if.end20

if.else:                                          ; preds = %if.end
  %22 = load %struct.hv*, %struct.hv** %stash, align 8
  %23 = load i8*, i8** %methpv.addr, align 8
  %call14 = call %struct.gv* @Perl_gv_fetchmethod_autoload(%struct.hv* %22, i8* %23, i32 1)
  %tobool15 = icmp ne %struct.gv* %call14, null
  br i1 %tobool15, label %if.end19, label %if.then16

if.then16:                                        ; preds = %if.else
  %24 = load i8, i8* %type, align 1
  %conv17 = sext i8 %24 to i32
  %25 = load i8, i8* %varname, align 1
  %conv18 = sext i8 %25 to i32
  %26 = load %struct.sv*, %struct.sv** %namesv.addr, align 8
  %27 = bitcast %struct.sv* %26 to i8*
  %28 = load i8*, i8** %methpv.addr, align 8
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.67, i64 0, i64 0), i32 %conv17, i32 %conv18, i8* %27, i8* %28)
  br label %if.end19

if.end19:                                         ; preds = %if.then16, %if.else
  br label %if.end20

if.end20:                                         ; preds = %if.end19, %if.then11
  call void @Perl_pop_scope()
  br label %if.end22

if.else21:                                        ; preds = %lor.lhs.false
  %29 = load %struct.sv*, %struct.sv** %namesv.addr, align 8
  %30 = bitcast %struct.sv* %29 to i8*
  %31 = bitcast i8* %30 to %struct.sv*
  call void @S_SvREFCNT_dec_NN(%struct.sv* %31)
  br label %if.end22

if.end22:                                         ; preds = %if.else21, %if.end20
  %32 = load %struct.hv*, %struct.hv** %stash, align 8
  ret %struct.hv* %32
}

declare dso_local %struct.sv* @Perl_save_scalar(%struct.gv*) #1

declare dso_local void @Perl_load_module(i32, %struct.sv*, %struct.sv*, ...) #1

declare dso_local zeroext i1 @Perl_grok_atoUV(i8*, i64*, i8**) #1

declare dso_local zeroext i1 @Perl_feature_is_enabled(i8*, i64) #1

declare dso_local zeroext i1 @Perl_sv_derived_from(%struct.sv*, i8*) #1

declare dso_local %struct.sv* @Perl_upg_version(%struct.sv*, i1 zeroext) #1

declare dso_local %struct.sv* @Perl_vnumify(%struct.sv*) #1

declare dso_local %struct.sv* @Perl_new_version(%struct.sv*) #1

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind willreturn }
attributes #4 = { nounwind readonly }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)"}
